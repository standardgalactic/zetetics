 
 

 
 
Evénements précédents
Avril 2015 : présentation d'Alliance Libre
Juin 2015 : Blue Mind et Owncloud
Novembre 2015 : Samba et SquashTM
Janvier 2016 : GED Alfresco

 
 
Prochains rendez-vous
06 Juin 
Initiation à Ubuntu
07 Juillet 
Logiciels libres pour les entreprise (CRM, ERP, gestion …)
20 Septembre 
RRLL à Nantes
07 Octobre
Innovation Week : projection film « Les nouveaux Loups du Web »
Novembre / Décembre 
Existdb / Blender ...

 
 
Virtualiser vos 
serveurs avec des 
logiciels libre

 
 
PCI
Introduction à la virtualisation
PCI :
Xen, KVM et Proxmox
Hisyl :
Docker

 
 

 
 
Conteneurs

 
 
On ne virtualise pas un système complet 
Uniquement des processus 
Un seul et même noyau est utilisé par les containers qui 
sont isolés les uns des autres. 
Moins flexible que la virtualisation (on ne peut pas 
mélanger Windows/Linux)
Consomme moins de ressources systèmes

 
 
2000
2001
2002
2003
2004
2005
2006
2007
2008
2009
2010
2011
2012
2013
2014
2015
Docker n'a pas inventé le container

 
 

 
 
Docker

 
 
Historique
Naissance en 2009 avec DotCloud
Devenu Docker en 2013
Evolution constante et croissante
Grosse communauté de DevOps
1000 contributeu=rs sur GIT
13000+ apps sur Docker Hub

 
 
Pourquoi
Pour faciliter le déploiement et la gestion des conteneurs
Automatiser le packaging et le déploiement 
d'applications
Intégration continue, déploiement continu, test 
automatisé
Gestion de déploiement d'applications “scalable”.
MAJ des services indépendantes des MAJ de l'OS

 
 
https://www.docker.com

 
 
Build
Packager une application et ses dépendances 
dans un container
Ship
Déplacer ce container d’une machine à une autre
Run
Lancer le container, c.-à-d. l’application qu’il contient
Any App
Tout ce qui peut tourner sous linux (aujourd’hui en tout cas)
Anywhere
que ce soit sur une VM local, du baremetal ou une instance de cloud

 
 
Architecture

 
 
Linux / Windows / Mac
Au départ basé sur les technologies LXC sous Linux
Sous Windows et Mac : Docker Toolbox
Beta support Windows et Mac en cours

 
 
Docker Engine
docker run : démarrer des conteneurs
docker ps : lister les conteneurs
docker image : gestion des images
docker build : construire une image
http://www.hisyl.fr/introduction­a­docker/

 
 
Docker Hub : registre d'images
https://hub.docker.com/

 
 
Dockerfile
« Recette » pour la création d'images
# Base image ubuntu
FROM ubuntu:15.10
MAINTAINER Guillaume Chéramy <adresse@email>
# Install Apache2
RUN apt­get update && \
apt­get install ­y apache2 && \
apt­get clean
# Set the log directory path
ENV APACHE_LOG_DIR /var/log/apache2
# Expose port 80
EXPOSE 80
# Launch Apache2
ENTRYPOINT ["/usr/sbin/apache2ctl", "­D", "FOREGROUND"]

 
 
+
Microservices
Cohésion
1 conteneur = 1 microservice
Indépendance Technologique
Langage specifique au conteneur
Livraison
-
Image docker (peu importe la techno)
-
Docker registry
Couplage faible
Chaque conteneur est independant
Liberté de déploiement
Seulement besoin de Docker
Solutions d’orchestration
-
Déploiements plus complexes
-
Swarm, Compose, Kubernetes, Mesos...

 
 
Outils

 
 

 
 

 
 
Docker Compose
Philosophie de Docker : 
un conteneur = un processus
version: '2'
services:
  web:
    build: .
    command: php ­S 0.0.0.0:8000 ­t /code/wordpress/
    ports:
      ­ "8000:8000"
    depends_on:
      ­ db
    volumes:
      ­ .:/code
  db:
    image: orchardup/mysql
    environment:
      MYSQL_DATABASE: wordpress

 
 
Docker Machine
Déployer des machines Docker
Sur différentes infrastructures :
    Amazon Web Services
    Microsoft Azure
    Digital Ocean
    Exoscale
    Google Compute Engine
    Generic
    Microsoft Hyper­V
    OpenStack
    Rackspace
    IBM Softlayer
    Oracle VirtualBox
    VMware vCloud Air
    VMware Fusion
    VMware vSphere

 
 
Docker Swarm
Gérer des clusters de machines
http://www.hisyl.fr/creation­dun­cluster­docker/

 
 
Docker Registry
Créer son propre registre d'images

 
 
Kitematic
UI Desktop pour gérer les conteneurs

 
 
Orchestration

 
 
Conteneurs sur une machine OK c'est simple

 
 
Mais plusieurs conteneurs sur plusieurs machines ...

 
 
Il faut donc un outils pour :
gérer les conteneurs
gérer les machines
scaler facilement
avoir une persistance des données
Il faut un Orchestrateur 

 
 
Pleins de solutions
Apache Mesos : http://mesos.apache.org/
Kubernetes : http://kubernetes.io/
Marathon : https://mesosphere.github.io/marathon/
Helios : https://blog.docker.com/tag/helios/
Rancher : http://rancher.com/
What else ...

 
 
Mesos / Marathon
https://www.runabove.com/docker­with­m
esos­marathon.xml
Rancher
Demo : 
http://rancher.hisyl.info

 
 
Hébergement

 
 
Docker Cloud
https://cloud.docker.com/
Docker Datacenter
https://www.docker.com/products/docker­d
atacenter

 
 
Tutum
Le votre …
Le notre ...

 
 
S'y mettre

 
 
https://www.docker.com/
http://www.hisyl.fr/?s=docker
https://blog.ouvrard.it/?s=docker
https://www.qwant.com/?q=tutos%20docker&t=all

