Accepted as a long paper in ACL 2020
Unsupervised Domain Clusters in Pretrained Language Models
Roee Aharoni1 & Yoav Goldberg1,2
1 Computer Science Department, Bar Ilan University
2 Allen Institute for Artiﬁcial Intelligence
first.last@gmail.com
Abstract
The notion of “in-domain data” in NLP is of-
ten over-simplistic and vague, as textual data
varies in many nuanced linguistic aspects such
as topic, style or level of formality. In addition,
domain labels are many times unavailable,
making it challenging to build domain-speciﬁc
systems.
We show that massive pre-trained
language models implicitly learn sentence rep-
resentations that cluster by domains without
supervision – suggesting a simple data-driven
deﬁnition of domains in textual data. We har-
ness this property and propose domain data se-
lection methods based on such models, which
require only a small set of in-domain mono-
lingual data. We evaluate our data selection
methods for neural machine translation across
ﬁve diverse domains, where they outperform
an established approach as measured by both
BLEU and by precision and recall of sentence
selection with respect to an oracle.
1
Introduction
It is common knowledge in modern NLP that us-
ing large amounts of high-quality training data is a
key aspect in building successful machine-learning
based systems. For this reason, a major challenge
when building such systems is obtaining data in
the domain of interest. But what deﬁnes a do-
main? Natural language varies greatly across top-
ics, styles, levels of formality, genres and many
other linguistic nuances (van der Wees et al., 2015;
van der Wees, 2017; Niu et al., 2017). This over-
whelming diversity of language makes it hard to
ﬁnd the right data for the task, as it is nearly impos-
sible to well-deﬁne the exact requirements from
such data with respect to all the aforementioned
aspects. On top of that, domain labels are usually
unavailable – e.g. in large-scale web-crawled data
like Common Crawl1 which was recently used to
1https://commoncrawl.org/
it
koran
subtitles
medical
law
Figure 1: A 2D visualization of average-pooled BERT
hidden-state sentence representations using PCA. The
colors represent the domain for each sentence.
train state-of-the-art pretrained language models
for various tasks (Raffel et al., 2019).
Domain data selection is the task of selecting
the most appropriate data for a domain from a
large corpus given a smaller set of in-domain data
(Moore and Lewis, 2010; Axelrod et al., 2011; Duh
et al., 2013; Silva et al., 2018). In this work, we
propose to use the recent, highly successful self-
supervised pre-trained language models, e.g. De-
vlin et al. (2019); Liu et al. (2019) for domain data
selection. As pretrained LMs demonstrate state-of-
the-art performance across many NLP tasks after
being trained on massive amounts of data, we hy-
pothesize that the robust representations they learn
can be useful for mapping sentences to domains in
an unsupervised, data-driven approach. We show
that these models indeed learn to cluster sentence
representations to domains without further supervi-
sion (e.g. Figure 1), and quantify this phenomenon
by ﬁtting Gaussian Mixture Models (GMMs) to
the learned representations and measuring the pu-
rity of the resulting unsupervised clustering. We
then propose methods to leverage these emergent
arXiv:2004.02105v2  [cs.CL]  1 May 2020

Accepted as a long paper in ACL 2020
domain clusters for domain data selection in two
ways:
• Via distance-based retrieval in the sentence
embedding space induced by the pretrained
language model.
• By ﬁne-tuning the pretrained language model
for binary classiﬁcation, where positive exam-
ples are from the domain of interest.
Our methods enable to select relevant data for
the task while requiring only a small set of mono-
lingual in-domain data. As they are based solely on
the representations learned by self-supervised LMs,
they do not require additional domain labels which
are usually vague and over-simplify the notion of
domain in textual data. We evaluate our method
on data selection for neural machine translation
(NMT) using the multi-domain German-English
parallel corpus composed by Koehn and Knowles
(2017). Our data selection methods enable to train
NMT models that outperform those trained us-
ing the well-established cross-entropy difference
method of Moore and Lewis (2010) across ﬁve di-
verse domains, achieving a recall of more than 95%
in all cases with respect to an oracle that selects
the “true” in-domain data.
Our contributions in this work are as follows.
First, we show that pre-trained language models
are highly capable of clustering textual data to do-
mains with high accuracy in a purely unsupervised
manner. Second, we propose methods to select
in-domain data based on this property using vector-
space retrieval and positive-unlabeled ﬁne-tuning
of pretrained language models for binary classiﬁ-
cation. Third, we show the applicability of our pro-
posed data selection methods on a popular bench-
mark for domain adaptation in machine translation.
An additional contribution is a new, improved data
split we create for this benchmark, as we point on
issues with previous splits used in the literature.
The code and data for this work is publicly avail-
able.2 We hope this work will encourage more re-
search on understanding the data landscape in NLP,
enabling to “ﬁnd the right data for the task” in the
age of massive models and diverse data sources.
2https://github.com/roeeaharoni/
unsupervised-domain-clusters
2
Emerging Domain Clusters in
Pretrained Language Models
2.1
Motivation
The proliferation of massive pretrained neural lan-
guage models such as ELMo (Peters et al., 2018),
BERT (Devlin et al., 2019) or RoBERTa (Liu et al.,
2019) has enabled great progress on many NLP
benchmarks (Wang et al., 2018, 2019a). Larger
and larger models trained on billions of tokens of
raw text are released in an ever-increasing pace
(Raffel et al., 2019), enabling the NLP community
to ﬁne-tune them for the task of interest. While
many works tried to “probe” those models for the
morphological, syntactic and semantic information
they capture (Tenney et al., 2019; Goldberg, 2019;
Clark et al., 2019), an important aspect of language
remained overlooked in this context – the domain
the data comes from, often referred to as the “data
distribution”.
The deﬁnition of domain is many times vague
and over-simplistic (e.g. “medical text” may be
used for biomedical research papers and for clin-
ical conversations between doctors and patients,
although the two vary greatly in topic, formality
etc.). A common deﬁnition treats a domain as
a data source: “a domain is deﬁned by a corpus
from a speciﬁc source, and may differ from other
domains in topic, genre, style, level of formality,
etc.” (Koehn and Knowles, 2017). We claim that
a more data-driven deﬁnition should take place,
as different data sources may have sentences with
similar traits and vice versa - a single massive web-
crawled corpus contains texts in numerous styles,
topics and registers. Our analysis in Section 2
shows examples for such cases, e.g. a sentence
discussing “Viruses and virus-like organisms” in a
legal corpus.
We hypothesize that massive pretrained LMs
can learn representations that cluster to domains,
as texts from similar domains will appear in simi-
lar contexts. We test this hypothesis across several
large, publicly-available pretrained LMs; we ex-
plore both masked-language-models (MLMs) and
auto-regressive LMs.
2.2
Method
We encode multi-domain data at the sentence level
into vector representations. We then cluster these
vector representations for each model using a Gaus-
sian Mixture Model (GMM) with k pre-deﬁned
clusters. We chose GMM as our clustering ap-

Accepted as a long paper in ACL 2020
k=5
k=10
k=15
Random
15.08 (±0.0)
16.77 (±0.0)
17.78 (±0.0)
LDA
24.31 (±0.99)
26.73 (±2.19)
30.79 (±2.97)
with PCA (n=50)
without PCA
k=5
k=10
k=15
k=5
k=10
k=15
word2vec
53.65 (±0.79)
68.14 (±2.58)
73.44 (±0.68)
45.93
65.80
76.26
BERT-base
87.66 (±0.24)
88.02 (±1.10)
88.37 (±0.66)
85.74
85.08
86.37
BERT-large
85.64 (±6.13)
87.61 (±0.26)
89.07 (±0.53)
68.56
86.53
86.99
DistillBERT
83.68 (±7.14)
86.31 (±0.86)
87.53 (±0.85)
79.00
86.42
88.14
RoBERTa-base
79.05 (±0.10)
86.39 (±0.90)
86.51 (±0.28)
70.21
80.35
81.49
RoBERTa-large
80.61 (±0.33)
89.04 (±0.15)
89.94 (±0.23)
69.88
81.07
85.91
GPT-2
70.30 (±0.05)
84.76 (±0.30)
82.56 (±1.29)
37.82
39.02
41.45
XLNet
55.72 (±0.69)
68.17 (±3.93)
72.65 (±1.92)
30.36
32.96
48.55
Table 1: Unsupervised domain clustering as measured by purity for the different models. Best results are marked
in bold for each setting.
proach as it allows soft assignments (vs. hard as-
signments as in e.g. K-means) which we think
ﬁts the task better (as a sentence can be seen as
drawn from a mixture of several domain).3 In
all cases, to create a sentence representation we
perform average pooling of the last hidden state
(before the softmax layer) for each token in the
sentence.4 To accelerate the clustering process and
enable visualization we also experiment with per-
forming dimensionality reduction with PCA over
the sentence vectors before clustering them. We ex-
periment with k in 5, 10 and 15 to test how adding
ﬂexibility would improve the domain clustering
accuracy.
2.3
Models and Baselines
For MLM-based models we use BERT (Devlin
et al., 2019), DistilBERT (Sanh et al., 2019) and
RoBERTa (Liu et al., 2019) (in both the base and
large versions). For autoregressive models we use
GPT-2 (Radford et al., 2018) and XLNet (Yang
et al., 2019). In all cases we use the implementa-
tions from the HuggingFace Transformers toolkit
(Wolf et al., 2019). We also evaluated three addi-
tional, simpler baselines. The ﬁrst is using repre-
sentations from word2vec (Mikolov et al., 2013),
where we average-pooled the word vectors for the
tokens that were present in the model vocabulary.
The second is using Latent Dirichlet Allocation
(LDA, Blei et al., 2003), which is a classic ap-
3See further discussion comparing GMMs and K-means
in Daume (2009).
4Using the penultimate layer or others may result in better
performance; we leave this for future work.
proach to unsupervised clustering of text.5 We
also report results for a baseline which assigns
sentences by sampling randomly from a uniform
distribution over the clusters.
2.4
Evaluation
To evaluate the unsupervised domain clustering we
used the multi-domain corpus proposed by Koehn
and Knowles (2017) which includes textual data
in ﬁve diverse domains: subtitles6, medical text
(PDF documents from the European Medicines
Agency), legal text (legislative text of the European
Union), translations of the Koran, and IT-related
text (manuals and localization ﬁles of open-source
software). This dataset includes parallel sentences
in English and German; for this experiment we
used the English portion of the data. See more
details on the dataset in Section 3.1. We used 2000
distinct sentences from each domain. To evaluate
whether the resulting clusters indeed capture the
domains the data was drawn from we measure the
clustering purity, which is a well-known metric
for evaluating clustering (Manning et al., 2008).
To measure the clustering purity, we assign each
unsupervised cluster with the most common “true”
domain in the sentences assigned to that cluster,
and then compute the accuracy according to this
majority-based cluster-domain assignment (note
that in this case several unsupervised clusters can
be assigned to the same domain). In cases where
randomness is involved we run each experiment
ﬁve times with different initializations and report
5We used the LDA implementation provided in the Gensim
toolkit: https://radimrehurek.com/gensim/
6From http://www.opensubtitles.org/

Accepted as a long paper in ACL 2020
the mean and variance of the purity metric for each
model.
2.5
Results and Discussion
As can be seen in Table 1, pre-trained language
models are indeed highly capable of generating
sentence representations that cluster by domains,
resulting in up to 87.66%, 89.04% and 89.94% ac-
curacy when using k=5, k=10 and k=15 clusters,
respectively, across 10,000 sentences in 5 domains.
We ﬁnd these scores remarkably high given our
straight-forward average-pooling strategy and that
no domain-supervision was involved in the process
of learning the pre-trained representations. Figure
2 also demonstrates the quality of the obtained clus-
ters in 2D using the BERT-base model, where the
ellipses describe the mean and variance parameters
learned for each cluster by the GMM with k = 5.7
We note that some classes of models did better
than others: while all vector-based models did far
better than the random and LDA baselines8, the
MLM-based models dominated in all cases over
word2vec and the auto-regressive models. This
may be explained by the fact that the MLM-based
models use the entire sentence context when gen-
erating the representations for each token, while
the auto-regressive models only use the past con-
text, and word2vec uses a limited window context.
Using PCA improved performance in most cases
7Similar visualizations for additional models are available
in the supplementary material.
8Note that the LDA models were trained using the multi-
domain data alone, and did not utilize additional pretraining
as in the other, more successful models. This may explain
their relatively weak performance.
it
koran
subtitles
medical
law
Figure 2:
A 2D visualization of the unsupervised
GMM clustering for the same sentences as in Figure
1.
it
koran
subtitles
medical
law
Predicted label
it
koran
subtitles
medical
law
True label
1927
0
55
16
2
4
1767
225
0
4
47
21
1918
9
5
340
0
82
1413
165
206
0
10
58
1726
Figure 3: A confusion matrix for clustering with k=5
using BERT-base.
and especially for the auto-regressive models, al-
though the results for the MLMs remain high in
both cases – suggesting that these models encode
the information very differently.
2.6
Analysis
As can be seen in Figure 2, in some areas the do-
mains are somewhat overlapping in the embedding
space, which may lead to outlier cases where ex-
amples from one domain are assigned to a cluster
of a another domain. We plot a confusion matrix
(Figure 3) to analyze this further based on the clus-
tering with BERT-base and k=5. We ﬁrst note that
the outlier sentences are much shorter than the av-
erage sentence length in the corpus (11.62 tokens
on average for outliers vs. 20.5 tokens on average
in general). This makes sense as shorter sentences
contain less information, making it harder to as-
sign them to an appropriate cluster. Table 2 shows
examples of outlier sentences, assigned to clusters
of domains different from their originating domain.
We can see that in many cases the assignments are
sensible – for example for sentences originating
from the subtitles corpus, a sentence that mentions
“great priest” is assigned to the Koran cluster, a sen-
tence that mentions “The International Criminal
Court in The Hague” is assigned to the Law cluster,
a sentence that mentions “the virus” is assigned to
the Medical cluster and so on. This strengthens
our claim that deﬁning domains based on the cor-
pus they originated from may be over-simplistic,
and using a more data-driven approach may enable
to ﬁnd better domain assignments across different
corpora.
The domain that attracted the largest number

Accepted as a long paper in ACL 2020
Subtitles assigned to Koran
Subtitles assigned to Medical
I am Spa’am, high priest of the boars.
Oxygen supply at 50%.
Joseph, go in peace, and the Lord be with you.
Or it can help her walk again if the virus is kept in check
with this.
Subtitles assigned to IT
Subtitles assigned to Law
Push it up to the front of the screen.
Statutes, transcripts, redacted immunity agreements.
Polyalloy requires programming to take permanent
The Security Council therefore must press for his immediate
form.
referral to the International Criminal Court in The Hague.
Law assigned to Medical
Law assigned to IT
- Viruses and virus-like organisms
”INFORMATION SOCIETY STATISTICS
where the glucose content is equal to or less than
This document must be attached to the certiﬁcate and ﬁeld
the fructose content.
with it, except where there is a computerised checking system.
Medical assigned to Law
Medical assigned to IT
This will be introduced by a Regulation adopted by the
An updated and improved version of the CD-ROM was issued
European Commission.
to all subscribers during the ﬁrst half of the year.
The marketing authorisation was renewed on 22 May
- All tables will be based on generic and not product-speciﬁc
2002 and 22 May 2007.
data.
IT assigned to Medical
IT assigned to Subtitles
R65: Harmful: may cause lung damage if swallowed
At the end we say good bye.
Automatic Red-Eye Removal
What would you like to do for your next shot?
Table 2: Sentences from one domain which were assigned to a cluster of another domain by the BERT-based
clustering, k=5.
of outliers is the IT domain cluster, with 597 sen-
tences assigned to it from other domains. Looking
more closely we ﬁnd that more than half of these
sentences (340 out of 597) included numbers (e.g.
“34% 25% 34%” (from medical), “(b) reference
number 20 is deleted;” (from law), “(Command of
Prostration # 1)” (from Koran) or “The message,
R2.” (from subtitles)). As numbers appear in many
different contexts, they may be harder to assign to
a speciﬁc domain by the context-aware language
models in such short sentences. The second largest
attractor of outliers is the Subtitles cluster, with
372 sentences assigned to it from other domains.
We ﬁnd that most of these sentences contain per-
sonal pronouns or question marks (228 out of 372,
61.2%) while the ratio of such sentences in the en-
tire corpus is only 40%. Examples include “Why
did you choose the name & amarok;?” (from IT),
or “What is Avonex?” (from Medical). This may
be expected as the subtitles corpus mainly includes
transcriptions of spoken, conversational language,
and “conversation tends to have more verbs, more
personal pronouns, and more questions” (Conrad
and Biber, 2005). Another possible reason for the
subtitles domain to attract outliers is the fact that
this is the least-topical cluster: movies and TV
series may discuss diverse topics, unlike medical,
religious, legal and technical texts that may have a
more cohesive topic.
3
Neural Machine Translation in a
Multi-Domain Scenario
As we showed that pre-trained language models
are indeed very useful in clustering sentence repre-
sentations by domains in an unsupervised manner,
we now seek to harness this property for a down-
stream task – domain data selection for machine
translation. Domain data selection is the task of
selecting examples from a large corpus which are
as close as possible to the domain of interest, given
a smaller set of in-domain examples. The selected
examples can be used to either (1) train a domain-
speciﬁc model from scratch (Axelrod et al., 2011),
(2) ﬁne-tune a pre-trained general-domain model
(Sajjad et al., 2017; Silva et al., 2018), or (3) prior-
itize data for annotation as in an Active-Learning
framework, if only monolingual data is available
(Haffari et al., 2009). To demonstrate the need for
domain data selection and set the stage for our data
selection experiments, we perform preliminary ex-
periments with NMT in a multi-domain scenario.
3.1
Multi-Domain Dataset
To simulate a diverse multi-domain setting we use
the dataset proposed in Koehn and Knowles (2017),
as it was recently adopted for domain adaptation re-
search in NMT (Hu et al., 2019; M¨uller et al., 2019;
Dou et al., 2019a,b). The dataset includes paral-
lel text in German and English from ﬁve diverse
domains (Medical, Law, Koran, IT, Subtitles; as
discussed in Section 2), available via OPUS (Tiede-
mann, 2012; Aulamo and Tiedemann, 2019).
In a preliminary analysis of the data we found
that in both the original train/dev/test split by
Koehn and Knowles (2017) and in the more re-
cent split by M¨uller et al. (2019) there was overlap
between the training data and the dev/test data.9
9More details are available in the supplementary material.

Accepted as a long paper in ACL 2020
Original
New Split
Medical
1,104,752
248,099
Law
715,372
467,309
IT
378,477
222,927
Koran
533,128
17,982
Subtitles
22,508,639
14,458,058
Table 3: Number of training examples for each domain
in the original split (M¨uller et al., 2019) and in our split.
Fixing these issues is important, as it may affect
the conclusions one draws from experiments with
this dataset. For example, as overlapping devel-
opment sets favor memorization of the training
set, one may choose checkpoints and report results
on over-ﬁtting models. This is especially relevant
with neural sequence-to-sequence models, as they
are highly susceptible to memorization (Aharoni
and Goldberg, 2018) and hallucination (Lee et al.,
2018), as conﬁrmed by M¨uller et al. (2019).
To create a better experimental setting to test
generalization within and across domains, we cre-
ate a new data split where we ensure that no such
overlap between the training, development and test
sets occur. We started from the split of M¨uller
et al. (2019) as it included newer versions of some
of the datasets.10 Furthermore, we did not allow
more than one translation of a given source or tar-
get sentence, as such cases were very frequent in
the dataset and usually stand for duplicate sentence
pairs (See Table 3). For example, applying this
ﬁltering reduced the size of the Koran corpus from
533,128 sentence pairs to only 17,982. Finally,
following M¨uller et al. (2019) we cap the subti-
tles corpus to 500,000 sentence pairs as it is much
larger than the rest. We make the new split pub-
licly available and hope it will enable better future
experimentation on this important subject.11
3.2
Cross-Domain Experiments
Experimental Setup We follow Hu et al. (2019)
and train domain-speciﬁc models for all domains.
We then evaluate each model across the different
domain test sets, enabling us to understand the ef-
fect of different domains on the downstream MT
performance and to set up strong baselines for data
selection experiments. We also train a general-
domain model using the available data from all
domains, as it is also a common approach in multi-
domain scenarios (M¨uller et al., 2019). In all ex-
periments we use a similar Transformer (Vaswani
10Their dataset is available in: https://github.com/
ZurichNLP/domain-robustness
11https://github.com/roeeaharoni/
unsupervised-domain-clusters
Medical
Law
Koran
IT
Subtitles
Medical
56.5
18.3
1.9
11.4
4.3
Law
21.7
59
2.7
13.1
5.4
Koran
0.1
0.2
15.9
0.2
0.5
IT
14.9
9.6
2.8
43
8.6
Subtitles
7.9
5.5
6.4
8.5
27.3
All
53.3
57.2
20.9
42.1
27.6
Table 4: SacreBLEU (Post, 2018) scores of our base-
line systems on the test sets of the new data split. Each
row represents the results from one model on each test
set. The best result in each column is marked in bold.
et al., 2017) model, and only control for the train-
ing data. More details on the exact training and
hyperparameter settings for the NMT models are
available in the supplementary material.
Results The results for the cross-domain evalua-
tion are available in Table 4. In most cases, the best
results for each domain are obtained by training on
the in-domain data. Training on all the available
data helped mostly for the Koran test set. This is
expected as the training data for this domain is con-
siderably smaller than the training data for rest of
the domains (Table 3). We can also see that more
data is not necessarily better (Gasc´o et al., 2012):
while the subtitles corpus is the largest of all 5 and
includes 500,000 sentence pairs, it is second to last
in performance as measured by the average BLEU
across all test sets.
Cross-Domain BLEU vs. Cluster Proximity
An interesting observation can be made with re-
spect to the visual analysis of the domain clusters
as depicted in Figure 2: as the Medical cluster
(in Yellow), Law cluster (in Purple) and IT cluster
(in Red) are close to each other in the embedding
space, their cross-domain BLEU scores are also
higher. For example, note how in the results for the
Medical domain-speciﬁc model (ﬁrst row in Table
4), the BLEU scores on the Law and IT test sets are
much higher in comparison to those on the Koran
and Subtitles test sets, which clusters are farther
away in the visualized embedding space. Similarly,
as the Subtitles cluster (Blue) is closer to the Koran
cluster (Green), the highest cross-domain BLEU
score on the Koran test set is from the Subtitles
model. To further quantify this phenomenon, we
plot and measure Pearson’s correlation between the
cosine similarity of the centroids for the English
BERT-based dev sentence representations for each
domain pair, and the cross-domain BLEU score for
this domain pair. This is shown in Figure 4. We can
see the general trend where the closer the domain
centroids are (with a similarity of 1 for training
and evaluating on the same domain), the higher
the cross-domain BLEU is between those domains,

Accepted as a long paper in ACL 2020
Figure 4: The cosine similarity between the centroids
of the BERT representations for each domain pair vs.
the corresponding cross-domain BLEU.
resulting in a Pearson’s correlation of 0.81 (strong
correlation). This suggests that such preliminary
visual analysis can be a useful tool for understand-
ing the relationship between diverse datasets, and
motivates the use of pre-trained language model
representations for domain data selection in MT.
4
Domain Data Selection with
Pretrained Language Models
As shown in the previous section, using the right
data is critical for achieving good performance on
an in-domain test set, and more data is not nec-
essarily better. However, in real-world scenarios,
the availability of data labeled by domain is lim-
ited, e.g. when working with large scale, web-
crawled data. In this section we focus on a data-
selection scenario where only a very small num-
ber of in-domain sentences are used to select data
from a larger unlabeled parallel corpus. An estab-
lished method for data selection was proposed by
Moore and Lewis (2010), which was also used in
training the winning systems in WMT 2019 (Ng
et al., 2019; Barrault et al., 2019). This method
compares the cross-entropy, according to domain-
speciﬁc and non-domain-speciﬁc language models,
for each candidate sentence for selection. The sen-
tences are then ranked by the cross-entropy differ-
ence, and only the top sentences are selected for
training.
While the method by Moore and Lewis (2010)
is tried-and-true, it is based on simple n-gram lan-
guage models which cannot generalize beyond the
n-grams that are seen in the in-domain set. In addi-
tion, it is restricted to the in-domain and general-
domain datasets it is trained on, which are usually
small. On the contrary, pre-trained language mod-
els are trained on massive amounts of text, and, as
we showed through unsupervised clustering, learn
representations with domain-relevant information.
In the following sections, we investigate whether
this property of pretrained language models makes
them useful for domain data selection.
4.1
Methods
We propose two methods for domain data selection
with pretrained language models.
Domain-Cosine In this method we ﬁrst com-
pute a query vector, which is the element-wise
average over the vector representations of the sen-
tences in the small in-domain set. We use the
same sentence-level average-pooling approach as
described in Section 2 to obtain sentence represen-
tations. We then retrieve the most relevant sen-
tences in the training set by computing the cosine
similarity of each sentence with this query vector
and ranking the sentences accordingly.
Domain-Finetune It is now common knowl-
edge that pretrained language models are especially
useful when ﬁne-tuned for the task of interest in
an end-to-end manner (Ruder et al., 2019). In this
method we ﬁne-tune the pretrained LM for binary
classiﬁcation, where we use the in-domain sen-
tences as positive examples, and randomly sampled
general-domain sentences as negative examples.
We then apply this classiﬁer on the general-domain
data and pick the sentences that are classiﬁed as
positive as in-domain, or choose the top-k sen-
tences as ranked by the classiﬁer output distribu-
tion. This can be seen as an instance of positive-
unlabeled learning for document-set expansion;
see Jacovi et al. (2019) for a recent discussion and
methodology for this task.
Negative Sampling with Pre-ranking One
problem that may rise when randomly sampling
negative examples is that unlabeled in-domain sen-
tences from the general-domain data may be sam-
pled as negative examples – deteriorating the clas-
siﬁer performance.
To alleviate this issue, we
perform a biased sampling of negative examples.
We ﬁrst rank the general-domain data using the
Domain-Cosine method, and then sample negative
without pre-ranking
with pre-ranking
p
r
F1
p
r
F1
Subtitles
0.722
0.984
0.833
0.964
0.978
0.971
Law
0.761
0.94
0.841
0.944
0.94
0.942
Medical
0.821
0.916
0.866
0.929
0.92
0.925
IT
0.848
0.956
0.898
0.955
0.98
0.967
Koran
0.966
0.958
0.962
0.994
0.974
0.984
Table 5: Ablation analysis showing precision (p) recall
(r) and F1 for the binary classiﬁcation accuracy on a
held-out set, with and without pre-ranking.

Accepted as a long paper in ACL 2020
Medical
Law
Koran
IT
Subtitles
Average
Random-500k
49.8
53.3
18.5
37.5
25.5
36.92
Moore-Lewis-Top-500k
55
58
21.4
42.7
27.3
40.88
Domain-Cosine-Top-500k
52.7
58
22
42.5
27.1
40.46
Domain-Finetune-Top-500k
54.8
58.8
21.8
43.5
27.4
41.26
Domain-Finetune-Positive
55.3
58.7
19.2
42.5
27
40.54
Oracle
56.5
59
15.9
43
27.3
40.34
All
53.3
57.2
20.9
42.1
27.6
40.22
Table 6: SacreBLEU scores for the data selection experiments. Highest scores per column are marked in bold.
Moore-Lewis
D-Cosine
D-Finetune
p
r
p
r
p
r
Medical
0.476
0.955
0.391
0.788
0.485
0.975
Law
0.836
0.894
0.841
0.899
0.902
0.965
Koran
0.35
0.985
0.36
0.989
0.36
0.998
IT
0.441
0.985
0.382
0.857
0.447
0.998
Subtitles
0.899
0.899
0.916
0.916
0.957
0.957
Average
0.6
0.944
0.578
0.89
0.63
0.979
Table 7: Precision (p) and recall (r) for data selection
of 500k sentences with respect to the oracle selection.
examples under a certain threshold in the ranking
(in our experiments we sampled from the bottom
two-thirds). Table 5 shows an ablation for such
pre-ranking, measuring precision, recall and F1
for binary classiﬁcation on a held-out set for each
domain. When not using pre-ranking, as the train-
ing data for the domain is larger, the precision is
lower – since more in-domain examples are drawn
as negative samples. Using pre-ranking indeed al-
leviates this issue, achieving higher F1 scores in
all cases. Given the results in Table 5 we always
use pre-ranking in the following experiments.
4.2
Experimental Setup
We perform data selection experiments for each do-
main in the multi-domain dataset. As the small set
of monolingual in-domain data we take the 2000
development sentences from each domain. For the
general-domain corpus we concatenate the training
data from all domains, resulting in 1,456,317 sen-
tences. To enable faster experimentation we used
DistilBERT (Sanh et al., 2019) for the Domain-
Cosine and Domain-Finetune methods. More tech-
nical details are available in the supplementary ma-
terial. We compare our methods to four approches:
(1) The established method by Moore and Lewis
(2010), (2) a random selection baseline, (3) an ora-
cle which is trained on all the available in-domain
data, and (4) the model we train on all the domains
concatenated. We select the top 500k examples to
cover the size of every speciﬁc in-domain dataset.
We train Transformer NMT models on the selected
data with a similar conﬁguration to the ones trained
in the cross-domain evaluation.
4.3
Results
The results are available in Table 6. We can see
that all selection methods performed much better
in terms of BLEU than random selection. It is also
nice to see that all selection methods performed
better than using all the available data or the oracle-
selected data when averaged across all domains,
showing again that more data is not necessarily bet-
ter in multi-domain scenarios and that data selec-
tion is a useful approach. Regarding a comparison
of the data selection methods, Moore-Lewis per-
formed better than Domain-Cosine, while Domain-
Finetune performed best, showing the beneﬁt of
ﬁne-tuning large pretrained models for the data
selection task. Using the positively-labeled exam-
ples alone (Domain-Finetune-Positive) performed
worse than using the top 500k examples but bet-
ter than Domain-Cosine, while not requiring to
determine the number of selected sentences.
4.4
Analysis
We perform an analysis on the selected datasets,
where we measure the precision and recall of sen-
tence selection with respect to the oracle selec-
tion. The results are available in Table 7. As
also reﬂected in the BLEU scores, the Domain-
Finetune method resulted in the highest domain
recall with a minimum of 97.5, while Moore-Lewis
and Domain-Cosine scored 89.4 and 78.8 respec-
tively. We ﬁnd these results very appealing given
that only 2000 in-domain sentences were used for
selection for each domain out of 1.45 million sen-
tences. Also note that we used DistilBERT in these
experiments: we believe that using larger, non-
distilled models may result in even better selection
performance (although at the price of larger com-
putational requirements).
5
Related Work
Previous works used n-gram LMs for data selec-
tion (Moore and Lewis, 2010; Axelrod et al., 2011)
or other count-based methods (Axelrod, 2017; Pon-
celas et al., 2018; Parcheta et al., 2018; Santamar´ıa
and Axelrod, 2019). While such methods work

Accepted as a long paper in ACL 2020
well in practice, they cannot generalize beyond the
N-grams observed in the in-domain datasets, which
are usually small.
Duh et al. (2013) proposed to replace n-gram
models with RNN-based LMs with notable im-
provements. However, such methods do not cap-
ture the rich sentence-level global context as in the
recent self-attention-based MLMs; as we showed
in the clustering experiments, autoregressive neu-
ral LMs were inferior to masked LMs in clustering
the data by domain. In addition, training very large
neural LMs may be prohibitive without relying on
pre-training.
Regarding domain clustering for MT, Hasler
et al. (2014) discovered topics using LDA instead
of using domain labels. Cuong et al. (2016) in-
duced latent subdomains from the training data
using a dedicated probabilistic model.
Many works used vector-based retrieval for data
selection; Ruder and Plank (2017) learn to select
data using Bayesian optimization, and explored
word2vec for that purpose. Duma and Menzel
(2016) create paragraph vectors for data selection
in the context of SMT. Wang et al. (2017) use
internal representations from the NMT model to
perform data selection. Bapna and Firat (2019)
propose a mechanism for incorporating retrieved
sentences for each instance for domain adaptation
in NMT, using representations extracted from a
pre-trained NMT model. Farajian et al. (2017)
explored instance-based data selection in a multi-
domain scenario using information retrieval meth-
ods.
Other related works on domain adaptation in-
clude Dou et al. (2019a) that adapts multi-domain
NMT models with domain-aware feature embed-
dings, which are learned via an auxiliary language
modeling task. Peris et al. (2017) proposed neural-
network based classiﬁers for data selection in SMT.
For more related work on data selection and do-
main adaptation in the context of MT, see the sur-
veys by Eetemadi et al. (2015) for SMT and more
recently Chu and Wang (2018) for NMT.
Unrelated to MT, Ma et al. (2019) used BERT
to select data for tasks from the GLUE benchmark
(Wang et al., 2018). However, they assumed su-
pervision for all the different tasks/domains, while
we propose an unsupervised method requiring only
a small set of in-domain data. Also in the con-
text of pretrained language models, Gururangan
et al. (2020) show the importance of additional
pretraining with in-domain data to improve the
down-stream task-speciﬁc performance.
While previous work made important contribu-
tions to domain data selection, our work is the ﬁrst
to explore massive pretrained language models for
both unsupervised domain clustering and for data
selection in NMT.
6
Conclusions and Future Work
We showed that massive pre-trained language mod-
els are highly effective in mapping data to domains
in a fully-unsupervised manner using average-
pooled sentence representations and GMM-based
clustering. We suggest that such clusters are a more
appropriate, data driven approach to domains in
natural language than simplistic labels (e.g. “med-
ical text”), and that it will improve over time as
better and larger pretrained LMs will become avail-
able. We proposed new methods to harness this
property for domain data selection using distance-
based ranking in vector space and pretrained LM
ﬁne-tuning, requiring only a small set of in-domain
data. We demonstrated the effectiveness of our
methods on a new, improved data split we created
for a previously studied multi-domain machine
translation benchmark. Our methods perform sim-
ilarly or better than an established data selection
method and oracle in-domain training across all
ﬁve domains in the benchmark.
This work just scratches the surface with what
can be done on the subject; possible avenues for
future work include extending this with multilin-
gual data selection and multilingual LMs (Conneau
and Lample, 2019; Conneau et al., 2019; Wu et al.,
2019; Hu et al., 2020), using such selection meth-
ods with domain-curriculum training (Zhang et al.,
2019; Wang et al., 2019b), applying them on noisy,
web-crawled data (Junczys-Dowmunt, 2018) or for
additional tasks (Gururangan et al., 2020). Another
interesting avenue is applying this to unsupervised
NMT, which is highly sensitive to domain mis-
match (Marchisio et al., 2020; Kim et al., 2020).
We hope this work will encourage more research
on ﬁnding the right data for the task, towards more
efﬁcient and robust NLP.
Acknowledgements
We thank Wei Wang for early discussions on do-
main adaptation and data selection that inspired
this work during Roee’s internship in Google Trans-
late.

Accepted as a long paper in ACL 2020
References
Roee Aharoni and Yoav Goldberg. 2018.
Split and
rephrase: Better evaluation and stronger baselines.
In Proceedings of the 56th Annual Meeting of the
Association for Computational Linguistics (Volume
2: Short Papers), pages 719–724, Melbourne, Aus-
tralia. Association for Computational Linguistics.
Mikko Aulamo and J¨org Tiedemann. 2019. The OPUS
resource repository: An open package for creating
parallel corpora and machine translation services.
In Proceedings of the 22nd Nordic Conference on
Computational Linguistics, pages 389–394, Turku,
Finland. Link¨oping University Electronic Press.
Amittai Axelrod. 2017.
Cynical selection of lan-
guage model
training data.
arXiv preprint
arXiv:1709.02279.
Amittai Axelrod, Xiaodong He, and Jianfeng Gao.
2011.
Domain adaptation via pseudo in-domain
data selection. In Proceedings of the 2011 Confer-
ence on Empirical Methods in Natural Language
Processing, pages 355–362, Edinburgh, Scotland,
UK. Association for Computational Linguistics.
Ankur Bapna and Orhan Firat. 2019. Non-parametric
adaptation for neural machine translation. In Pro-
ceedings of the 2019 Conference of the North Amer-
ican Chapter of the Association for Computational
Linguistics: Human Language Technologies, Vol-
ume 1 (Long and Short Papers), pages 1921–1931,
Minneapolis, Minnesota. Association for Computa-
tional Linguistics.
Lo¨ıc Barrault, Ondˇrej Bojar, Marta R. Costa-juss`a,
Christian Federmann, Mark Fishel, Yvette Gra-
ham, Barry Haddow, Matthias Huck, Philipp Koehn,
Shervin Malmasi, Christof Monz, Mathias M¨uller,
Santanu Pal, Matt Post, and Marcos Zampieri. 2019.
Findings of the 2019 conference on machine trans-
lation (WMT19). In Proceedings of the Fourth Con-
ference on Machine Translation (Volume 2: Shared
Task Papers, Day 1), pages 1–61, Florence, Italy. As-
sociation for Computational Linguistics.
David M Blei, Andrew Y Ng, and Michael I Jordan.
2003. Latent dirichlet allocation. Journal of ma-
chine Learning research, 3(Jan):993–1022.
Chenhui Chu and Rui Wang. 2018. A survey of do-
main adaptation for neural machine translation. In
Proceedings of the 27th International Conference on
Computational Linguistics, pages 1304–1319, Santa
Fe, New Mexico, USA. Association for Computa-
tional Linguistics.
Kevin Clark, Urvashi Khandelwal, Omer Levy, and
Christopher D Manning. 2019. What does bert look
at? an analysis of bert’s attention. arXiv preprint
arXiv:1906.04341.
Alexis Conneau, Kartikay Khandelwal, Naman Goyal,
Vishrav Chaudhary, Guillaume Wenzek, Francisco
Guzm´an, Edouard Grave, Myle Ott, Luke Zettle-
moyer, and Veselin Stoyanov. 2019. Unsupervised
cross-lingual representation learning at scale. arXiv
preprint arXiv:1911.02116.
Alexis Conneau and Guillaume Lample. 2019. Cross-
lingual language model pretraining.
In Advances
in Neural Information Processing Systems, pages
7057–7067.
Susan M Conrad and Douglas Biber. 2005. The fre-
quency and use of lexical bundles in conversation
and academic prose. Lexicographica.
Hoang Cuong, Khalil Sima’an, and Ivan Titov. 2016.
Adapting to all domains at once: Rewarding domain
invariance in SMT. Transactions of the Association
for Computational Linguistics, 4:99–112.
Hal Daume. 2009. K-means vs gmm, sum-product vs
max-product.
Jacob Devlin, Ming-Wei Chang, Kenton Lee, and
Kristina Toutanova. 2019.
BERT: Pre-training of
deep bidirectional transformers for language under-
standing. In Proceedings of the 2019 Conference
of the North American Chapter of the Association
for Computational Linguistics: Human Language
Technologies, Volume 1 (Long and Short Papers),
pages 4171–4186, Minneapolis, Minnesota. Associ-
ation for Computational Linguistics.
Zi-Yi Dou,
Junjie Hu,
Antonios Anastasopoulos,
and Graham Neubig. 2019a.
Unsupervised do-
main adaptation for neural machine translation with
domain-aware feature embeddings.
In Proceed-
ings of the 2019 Conference on Empirical Meth-
ods in Natural Language Processing and the 9th In-
ternational Joint Conference on Natural Language
Processing (EMNLP-IJCNLP), pages 1417–1422,
Hong Kong, China. Association for Computational
Linguistics.
Zi-Yi Dou, Xinyi Wang, Junjie Hu, and Graham Neu-
big. 2019b. Domain differential adaptation for neu-
ral machine translation. In Proceedings of the 3rd
Workshop on Neural Generation and Translation,
Hong Kong. Association for Computational Linguis-
tics.
Kevin Duh, Graham Neubig, Katsuhito Sudoh, and
Hajime Tsukada. 2013. Adaptation data selection
using neural language models: Experiments in ma-
chine translation. In Proceedings of the 51st Annual
Meeting of the Association for Computational Lin-
guistics (Volume 2: Short Papers), pages 678–683,
Soﬁa, Bulgaria. Association for Computational Lin-
guistics.
Mirela-Stefania Duma and Wolfgang Menzel. 2016.
Data selection for IT texts using paragraph vector.
In Proceedings of the First Conference on Machine
Translation: Volume 2, Shared Task Papers, pages
428–434, Berlin, Germany. Association for Compu-
tational Linguistics.
Sauleh Eetemadi, William Lewis, Kristina Toutanova,
and Hayder Radha. 2015. Survey of data-selection

Accepted as a long paper in ACL 2020
methods in statistical machine translation. Machine
Translation, 29(3-4):189–223.
M. Amin Farajian, Marco Turchi, Matteo Negri, and
Marcello Federico. 2017.
Multi-domain neural
machine translation through unsupervised adapta-
tion. In Proceedings of the Second Conference on
Machine Translation, pages 127–137, Copenhagen,
Denmark. Association for Computational Linguis-
tics.
Guillem
Gasc´o,
Martha-Alicia
Rocha,
Germ´an
Sanchis-Trilles, Jes´us Andr´es-Ferrer, and Francisco
Casacuberta. 2012.
Does more data always yield
better translations?
In Proceedings of the 13th
Conference of the European Chapter of the Associa-
tion for Computational Linguistics, pages 152–161,
Avignon, France. Association for Computational
Linguistics.
Yoav Goldberg. 2019. Assessing bert’s syntactic abili-
ties. arXiv preprint arXiv:1901.05287.
Suchin
Gururangan,
Ana
Marasovi,
Swabha
Swayamdipta, Kyle Lo, Iz Beltagy, Doug Downey,
and Noah A. Smith. 2020. Don’t stop pretraining:
Adapt language models to domains and tasks. ACL.
Gholamreza Haffari, Maxim Roy, and Anoop Sarkar.
2009.
Active learning for statistical phrase-based
machine translation.
In Proceedings of Human
Language Technologies: The 2009 Annual Confer-
ence of the North American Chapter of the Associa-
tion for Computational Linguistics, pages 415–423,
Boulder, Colorado. Association for Computational
Linguistics.
Eva Hasler, Phil Blunsom, Philipp Koehn, and Barry
Haddow. 2014.
Dynamic topic adaptation for
phrase-based MT.
In Proceedings of the 14th
Conference of the European Chapter of the Asso-
ciation for Computational Linguistics, pages 328–
337, Gothenburg, Sweden. Association for Compu-
tational Linguistics.
Kenneth Heaﬁeld. 2011. KenLM: Faster and smaller
language model queries.
In Proceedings of the
Sixth Workshop on Statistical Machine Translation,
pages 187–197, Edinburgh, Scotland. Association
for Computational Linguistics.
Junjie Hu, Sebastian Ruder, Aditya Siddhant, Gra-
ham Neubig, Orhan Firat, and Melvin Johnson.
2020. Xtreme: A massively multilingual multi-task
benchmark for evaluating cross-lingual generaliza-
tion. arXiv preprint arXiv:2003.11080.
Junjie Hu, Mengzhou Xia, Graham Neubig, and Jaime
Carbonell. 2019. Domain adaptation of neural ma-
chine translation by lexicon induction. In Proceed-
ings of the 57th Annual Meeting of the Association
for Computational Linguistics, Florence, Italy. As-
sociation for Computational Linguistics.
Alon Jacovi, Gang Niu, Yoav Goldberg, and Masashi
Sugiyama. 2019.
Scalable evaluation and im-
provement of document set expansion via neu-
ral positive-unlabeled learning.
arXiv preprint
arXiv:1910.13339.
Marcin Junczys-Dowmunt. 2018.
Dual conditional
cross-entropy ﬁltering of noisy parallel corpora. In
Proceedings of the Third Conference on Machine
Translation: Shared Task Papers, pages 888–895,
Belgium, Brussels. Association for Computational
Linguistics.
Yunsu Kim,
Miguel Grac¸a,
and Hermann Ney.
2020.
When and why is unsupervised neural
machine translation useless?
arXiv preprint
arXiv:2004.10581.
Diederik P Kingma and Jimmy Ba. 2014. Adam: A
method for stochastic optimization. arXiv preprint
arXiv:1412.6980.
Philipp Koehn, Hieu Hoang, Alexandra Birch, Chris
Callison-Burch, Marcello Federico, Nicola Bertoldi,
Brooke Cowan,
Wade Shen,
Christine Moran,
Richard Zens, Chris Dyer, Ondˇrej Bojar, Alexandra
Constantin, and Evan Herbst. 2007. Moses: Open
source toolkit for statistical machine translation. In
Proceedings of the 45th Annual Meeting of the As-
sociation for Computational Linguistics Companion
Volume Proceedings of the Demo and Poster Ses-
sions, pages 177–180, Prague, Czech Republic. As-
sociation for Computational Linguistics.
Philipp Koehn and Rebecca Knowles. 2017.
Six
challenges for neural machine translation. In Pro-
ceedings of the First Workshop on Neural Machine
Translation, pages 28–39, Vancouver. Association
for Computational Linguistics.
Katherine Lee, Orhan Firat, Ashish Agarwal, Clara
Fannjiang, and David Sussillo. 2018.
Hallucina-
tions in neural machine translation.
Yinhan Liu, Myle Ott, Naman Goyal, Jingfei Du, Man-
dar Joshi, Danqi Chen, Omer Levy, Mike Lewis,
Luke Zettlemoyer, and Veselin Stoyanov. 2019.
Roberta: A robustly optimized bert pretraining ap-
proach. arXiv preprint arXiv:1907.11692.
Xiaofei Ma, Peng Xu, Zhiguo Wang, Ramesh Nalla-
pati, and Bing Xiang. 2019.
Domain adaptation
with BERT-based domain classiﬁcation and data se-
lection.
In Proceedings of the 2nd Workshop on
Deep Learning Approaches for Low-Resource NLP
(DeepLo 2019), pages 76–83, Hong Kong, China.
Association for Computational Linguistics.
Christopher D Manning, Prabhakar Raghavan, and
Hinrich Sch¨utze. 2008. Introduction to information
retrieval. Cambridge university press.
Kelly Marchisio, Kevin Duh, and Philipp Koehn. 2020.
When does unsupervised machine translation work?
arXiv preprint arXiv:2004.05516.

Accepted as a long paper in ACL 2020
Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Cor-
rado, and Jeff Dean. 2013. Distributed representa-
tions of words and phrases and their compositional-
ity. In Advances in neural information processing
systems, pages 3111–3119.
Robert C. Moore and William Lewis. 2010. Intelligent
selection of language model training data. In Pro-
ceedings of the ACL 2010 Conference Short Papers,
pages 220–224, Uppsala, Sweden. Association for
Computational Linguistics.
Mathias M¨uller, Annette Rios, and Rico Sennrich.
2019. Domain robustness in neural machine trans-
lation.
Nathan Ng, Kyra Yee, Alexei Baevski, Myle Ott,
Michael Auli, and Sergey Edunov. 2019. Facebook
FAIR’s WMT19 news translation task submission.
In Proceedings of the Fourth Conference on Ma-
chine Translation (Volume 2: Shared Task Papers,
Day 1), pages 314–319, Florence, Italy. Association
for Computational Linguistics.
Xing Niu, Marianna Martindale, and Marine Carpuat.
2017. A study of style in machine translation: Con-
trolling the formality of machine translation output.
In Proceedings of the 2017 Conference on Empiri-
cal Methods in Natural Language Processing, pages
2814–2819, Copenhagen, Denmark. Association for
Computational Linguistics.
Myle Ott, Sergey Edunov, Alexei Baevski, Angela
Fan, Sam Gross, Nathan Ng, David Grangier, and
Michael Auli. 2019.
fairseq: A fast, extensible
toolkit for sequence modeling. In Proceedings of
the 2019 Conference of the North American Chap-
ter of the Association for Computational Linguistics
(Demonstrations), pages 48–53, Minneapolis, Min-
nesota. Association for Computational Linguistics.
Zuzanna Parcheta, Germ´an Sanchis-Trilles, and Fran-
cisco Casacuberta. 2018. Data selection for nmt us-
ing infrequent n-gram recovery. EAMT 2018.
F. Pedregosa, G. Varoquaux, A. Gramfort, V. Michel,
B. Thirion, O. Grisel, M. Blondel, P. Prettenhofer,
R. Weiss, V. Dubourg, J. Vanderplas, A. Passos,
D. Cournapeau, M. Brucher, M. Perrot, and E. Duch-
esnay. 2011.
Scikit-learn:
Machine learning in
Python.
Journal of Machine Learning Research,
12:2825–2830.
´Alvaro Peris,
Mara Chinea-R´ıos,
and Francisco
Casacuberta. 2017.
Neural networks classiﬁer
for data selection in statistical machine translation.
The Prague Bulletin of Mathematical Linguistics,
108(1):283–294.
Matthew Peters, Mark Neumann, Mohit Iyyer, Matt
Gardner, Christopher Clark, Kenton Lee, and Luke
Zettlemoyer. 2018. Deep contextualized word rep-
resentations.
In Proceedings of the 2018 Confer-
ence of the North American Chapter of the Associ-
ation for Computational Linguistics: Human Lan-
guage Technologies, Volume 1 (Long Papers), pages
2227–2237, New Orleans, Louisiana. Association
for Computational Linguistics.
Alberto Poncelas, Gideon Maillette de Buy Wenniger,
and Andy Way. 2018. Data selection with feature
decay algorithms using an approximated target side.
arXiv preprint arXiv:1811.03039.
Matt Post. 2018. A call for clarity in reporting BLEU
scores. In Proceedings of the Third Conference on
Machine Translation: Research Papers, pages 186–
191, Belgium, Brussels. Association for Computa-
tional Linguistics.
Oﬁr Press and Lior Wolf. 2017. Using the output em-
bedding to improve language models. In Proceed-
ings of the 15th Conference of the European Chap-
ter of the Association for Computational Linguistics:
Volume 2, Short Papers, pages 157–163, Valencia,
Spain. Association for Computational Linguistics.
Alec Radford, Karthik Narasimhan, Tim Salimans, and
Ilya Sutskever. 2018.
Improving language under-
standing by generative pre-training. OpenAI blog.
Colin Raffel, Noam Shazeer, Adam Roberts, Katherine
Lee, Sharan Narang, Michael Matena, Yanqi Zhou,
Wei Li, and Peter J. Liu. 2019. Exploring the limits
of transfer learning with a uniﬁed text-to-text trans-
former.
Sebastian
Ruder,
Matthew
E.
Peters,
Swabha
Swayamdipta, and Thomas Wolf. 2019.
Transfer
learning in natural language processing. In Proceed-
ings of the 2019 Conference of the North American
Chapter of the Association for Computational
Linguistics:
Tutorials, pages 15–18, Minneapo-
lis,
Minnesota. Association for Computational
Linguistics.
Sebastian Ruder and Barbara Plank. 2017. Learning to
select data for transfer learning with Bayesian opti-
mization. In Proceedings of the 2017 Conference on
Empirical Methods in Natural Language Process-
ing, pages 372–382, Copenhagen, Denmark. Asso-
ciation for Computational Linguistics.
Hassan Sajjad, Nadir Durrani, Fahim Dalvi, Yonatan
Belinkov, and Stephan Vogel. 2017.
Neural ma-
chine translation training in a multi-domain sce-
nario. arXiv preprint arXiv:1708.08712.
Victor Sanh, Lysandre Debut, Julien Chaumond, and
Thomas Wolf. 2019. Distilbert, a distilled version
of bert: smaller, faster, cheaper and lighter. arXiv
preprint arXiv:1910.01108.
Luc´ıa Santamar´ıa and Amittai Axelrod. 2019.
Data
selection with cluster-based language difference
models and cynical selection.
arXiv preprint
arXiv:1904.04900.
Rico Sennrich, Barry Haddow, and Alexandra Birch.
2016.
Neural machine translation of rare words
with subword units. In Proceedings of the 54th An-
nual Meeting of the Association for Computational

Accepted as a long paper in ACL 2020
Linguistics (Volume 1: Long Papers), pages 1715–
1725, Berlin, Germany. Association for Computa-
tional Linguistics.
Catarina Cruz Silva, Chao-Hong Liu, Alberto Ponce-
las, and Andy Way. 2018.
Extracting in-domain
training corpora for neural machine translation us-
ing data selection methods.
In Proceedings of
the Third Conference on Machine Translation: Re-
search Papers, pages 224–231, Belgium, Brussels.
Association for Computational Linguistics.
Ian Tenney, Dipanjan Das, and Ellie Pavlick. 2019.
BERT rediscovers the classical NLP pipeline.
In
Proceedings of the 57th Annual Meeting of the
Association for Computational Linguistics, pages
4593–4601, Florence, Italy. Association for Compu-
tational Linguistics.
J¨org Tiedemann. 2012. Parallel data, tools and inter-
faces in OPUS.
In Proceedings of the Eighth In-
ternational Conference on Language Resources and
Evaluation (LREC-2012), pages 2214–2218, Istan-
bul, Turkey. European Languages Resources Asso-
ciation (ELRA).
Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob
Uszkoreit, Llion Jones, Aidan N Gomez, Ł ukasz
Kaiser, and Illia Polosukhin. 2017. Attention is all
you need. In I. Guyon, U. V. Luxburg, S. Bengio,
H. Wallach, R. Fergus, S. Vishwanathan, and R. Gar-
nett, editors, Advances in Neural Information Pro-
cessing Systems 30, pages 5998–6008. Curran Asso-
ciates, Inc.
Alex Wang, Yada Pruksachatkun, Nikita Nangia,
Amanpreet Singh, Julian Michael, Felix Hill, Omer
Levy, and Samuel R Bowman. 2019a.
Super-
glue:
A stickier benchmark for general-purpose
language understanding systems.
arXiv preprint
arXiv:1905.00537.
Alex Wang, Amanpreet Singh, Julian Michael, Fe-
lix Hill, Omer Levy, and Samuel Bowman. 2018.
GLUE: A multi-task benchmark and analysis plat-
form for natural language understanding.
In Pro-
ceedings of the 2018 EMNLP Workshop Black-
boxNLP: Analyzing and Interpreting Neural Net-
works for NLP, pages 353–355, Brussels, Belgium.
Association for Computational Linguistics.
Rui Wang, Andrew Finch, Masao Utiyama, and Ei-
ichiro Sumita. 2017. Sentence embedding for neu-
ral machine translation domain adaptation. In Pro-
ceedings of the 55th Annual Meeting of the Associa-
tion for Computational Linguistics (Volume 2: Short
Papers), pages 560–566, Vancouver, Canada. Asso-
ciation for Computational Linguistics.
Wei Wang, Isaac Caswell, and Ciprian Chelba. 2019b.
Dynamically composing domain-data selection with
clean-data selection by “co-curricular learning” for
neural machine translation. In Proceedings of the
57th Annual Meeting of the Association for Com-
putational Linguistics, pages 1282–1292, Florence,
Italy. Association for Computational Linguistics.
Marlies van der Wees. 2017. What’s in a Domain? To-
wards Fine-Grained Adaptation for Machine Trans-
lation. Ph.D. thesis, University of Amsterdam.
Marlies van der Wees, Arianna Bisazza, Wouter
Weerkamp, and Christof Monz. 2015.
What’s in
a domain? analyzing genre and topic differences
in statistical machine translation.
In Proceedings
of the 53rd Annual Meeting of the Association for
Computational Linguistics and the 7th International
Joint Conference on Natural Language Processing
(Volume 2: Short Papers), pages 560–566, Beijing,
China. Association for Computational Linguistics.
Thomas Wolf, Lysandre Debut, Victor Sanh, Julien
Chaumond, Clement Delangue, Anthony Moi, Pier-
ric Cistac, Tim Rault, R’emi Louf, Morgan Funtow-
icz, and Jamie Brew. 2019.
Huggingface’s trans-
formers: State-of-the-art natural language process-
ing. ArXiv, abs/1910.03771.
Shijie Wu, Alexis Conneau, Haoran Li, Luke Zettle-
moyer, and Veselin Stoyanov. 2019.
Emerging
cross-lingual structure in pretrained language mod-
els. arXiv preprint arXiv:1911.01464.
Zhilin Yang, Zihang Dai, Yiming Yang, Jaime Car-
bonell, Ruslan Salakhutdinov, and Quoc V Le.
2019. XLNet: Generalized autoregressive pretrain-
ing for language understanding.
arXiv preprint
arXiv:1906.08237.
Xuan Zhang, Pamela Shapiro, Gaurav Kumar, Paul
McNamee, Marine Carpuat, and Kevin Duh. 2019.
Curriculum learning for domain adaptation in neu-
ral machine translation. In Proceedings of the 2019
Conference of the North American Chapter of the
Association for Computational Linguistics: Human
Language Technologies, Volume 1 (Long and Short
Papers), pages 1903–1915, Minneapolis, Minnesota.
Association for Computational Linguistics.

Accepted as a long paper in ACL 2020
A
Appendix
A.1
NMT Training
Figure 5 details the hyperparameter conﬁguration
we used to train the NMT models. We use Trans-
former models (Vaswani et al., 2017) in the Base
conﬁguration using the implementation provided
in Fairseq (Ott et al., 2019). For all models we
use a joint BPE vocabulary (Sennrich et al., 2016)
learned with 32k merge operations over the con-
catenated corpus in both languages, enabling to tie
all the embedding layers (Press and Wolf, 2017).12
We perform early stopping if the BLEU score on
the domain-speciﬁc development set did not im-
prove in 10 consequent checkpoints. We use the
ADAM (Kingma and Ba, 2014) optimizer with an
initial learning rate of 5 · 10−4 and a maximum
of 4096 tokens per batch. We trained all models
on a single NVIDIA GPU. We decode using beam
search with a beam size of 5. For pre-processing
we used the Moses (Koehn et al., 2007) pipeline in-
cluding tokenization, normalize-punctuation, non-
printing character removal, truecasing and clean-
ing. We removed examples with sequences longer
than 100 tokens from the training data (before sub-
word segmentation).
A.2
Data Split
Table 8 shows details about the overlap between the
training, development and test sets for the different
data splits of the multi-domain dataset. The overlap
was computed using the English part of the corpus.
A.3
GMM Clustering
We learn GMMs with full covariance matrices, i.e.
without constraints on covariance matrices that de-
termine the shape of each component in the mix-
ture, as implemented in scikit-learn (Pedregosa
et al., 2011). We train the models until conver-
gence or for a maximum of 150 EM iterations.
A.4
Language Model Finetuning
We ﬁne-tune the binary classiﬁcation head for 5
epochs. We use the ADAM (Kingma and Ba, 2014)
optimizer with an initial learning rate of 2 · 10−5.
We train the model using 4 NVIDIA GPUs with
256 sentences per batch (64 per GPU).
A.5
Moore-Lewis Implementation
We used the implementation of Moore and
Lewis (2010) by Pamela Shapiro,
as avail-
12We used the implementation in https://github.
com/rsennrich/subword-nmt
CUDA_VISIBLE_DEVICES=0 \
python $FAIRSEQ_PATH/train.py ${BINARIZED_DATA_DIR} \
--arch transformer_wmt_en_de \
--share-all-embeddings \
--optimizer adam \
--adam-betas ’(0.9, 0.98)’ \
--clip-norm 1.0 \
--lr 0.0005 \
--lr-scheduler inverse_sqrt \
--warmup-updates 4000 \
--warmup-init-lr 1e-07 \
--dropout 0.2 \
--weight-decay 0.0 \
--criterion label_smoothed_cross_entropy \
--label-smoothing 0.1 \
--max-tokens 4096 \
--update-freq 5 \
--attention-dropout 0.2 \
--activation-dropout 0.2 \
--max-epoch 200 \
--seed 17 \
-s $src \
-t $tgt \
--save-dir $MODEL_PATH \
--save-interval-updates 10000 \
--validate-interval 1
Figure 5: The hyperparameter conﬁguration we used
for NMT model training using Fairseq (Ott et al.,
2019).
able in: https://github.com/pamelashapiro/
moore-lewis.
This implementation uses the
KenLM N-Gram language model toolkit (Heaﬁeld,
2011).
A.6
Additional Visualizations
Figure 6 shows visualizations of the multi-domain
dataset from additional pre-trained masked lan-
guage models (BERT large and RoBERTa), and
Figure 7 shows the same visualization for autore-
gressive models (XLNet and GPT2).

Accepted as a long paper in ACL 2020
Koehn and Knowles (2017)
M¨uller et al. (2019)
New Split
% dev
in train
Medical
1090/2000 (54.5%)
1204/2000 (60.2%)
0/2000
Koran
0/2000
1926/2000 (96.3)
0/2000
Subtitles
1183/5000 (23.66%)
638/2000 (31.9%)
0/2000
Law
595/2000 (29.75%)
1000/2000 (50%)
0/2000
IT
2496/2526 (98.81%)
783/2000 (39.15%)
0/2000
% test
in train
Medical
571/2000 (28.55%)
516/1691 (30.51%)
0/2000
Koran
0/2000
1949/2000 (97.45%)
0/2000
Subtitles
451/5000 (9.02%)
478/2000 (23.9%)
0/2000
Law
649/2000 (32.45%)
966/2000 (48.3%)
0/2000
IT
945/1856 (50.92%)
1036/2000 (51.8%)
0/2000
Table 8: Details about the different data splits for the multi-domain corpus.

Accepted as a long paper in ACL 2020
it
koran
subtitles
medical
law
bert-large-cased
it
koran
subtitles
medical
law
roberta-large
Figure 6: 2D visualizations of the unsupervised GMM-based clustering for different pretrained MLMs.

Accepted as a long paper in ACL 2020
it
koran
subtitles
medical
law
xlnet-base-cased
it
koran
subtitles
medical
law
gpt2
Figure 7: 2D visualizations of the unsupervised GMM-based clustering for different pretrained auto-regressive
LMs.

