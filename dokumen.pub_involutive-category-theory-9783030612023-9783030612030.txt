Lecture Notes in Mathematics  2279 
Involutive  
Category  
Theory
Donald Yau

Lecture Notes in Mathematics
Volume 2279
Editors-in-Chief
Jean-Michel Morel, CMLA, ENS, Cachan, France
Bernard Teissier, IMJ-PRG, Paris, France
Series Editors
Karin Baur, University of Leeds, Leeds, UK
Michel Brion, UGA, Grenoble, France
Camillo De Lellis, IAS, Princeton, NJ, USA
Alessio Figalli, ETH Zurich, Zurich, Switzerland
Annette Huber, Albert Ludwig University, Freiburg, Germany
Davar Khoshnevisan, The University of Utah, Salt Lake City, UT, USA
Ioannis Kontoyiannis, University of Cambridge, Cambridge, UK
Angela Kunoth, University of Cologne, Cologne, Germany
Ariane Mézard, IMJ-PRG, Paris, France
Mark Podolskij, University of Luxembourg, Esch-sur-Alzette, Luxembourg
Sylvia Serfaty, NYU Courant, New York, NY, USA
Gabriele Vezzosi, UniFI, Florence, Italy
Anna Wienhard, Ruprecht Karl University, Heidelberg, Germany

This series reports on new developments in all areas of mathematics and their
applications - quickly, informally and at a high level. Mathematical texts analysing
new developments in modelling and numerical simulation are welcome. The type of
material considered for publication includes:
1. Research monographs
2. Lectures on a new ﬁeld or presentations of a new angle in a classical ﬁeld
3. Summer schools and intensive courses on topics of current research.
Texts which are out of print but still in demand may also be considered if they fall
within these categories. The timeliness of a manuscript is sometimes more important
than its form, which may be preliminary or tentative.
More information about this series at http://www.springer.com/series/304

Donald Yau
Involutive Category Theory
123

Donald Yau
Department of Mathematics
Ohio State University at Newark
Newark, OH, USA
ISSN 0075-8434
ISSN 1617-9692
(electronic)
Lecture Notes in Mathematics
ISBN 978-3-030-61202-3
ISBN 978-3-030-61203-0
(eBook)
https://doi.org/10.1007/978-3-030-61203-0
Mathematics Subject Classiﬁcation: 16W10, 18-01, 18D10, 18D50, 46C50, 18C15, 46L05
© The Editor(s) (if applicable) and The Author(s), under exclusive license to Springer Nature Switzerland
AG 2020
This work is subject to copyright. All rights are solely and exclusively licensed by the Publisher, whether
the whole or part of the material is concerned, speciﬁcally the rights of translation, reprinting, reuse
of illustrations, recitation, broadcasting, reproduction on microﬁlms or in any other physical way, and
transmission or information storage and retrieval, electronic adaptation, computer software, or by similar
or dissimilar methodology now known or hereafter developed.
The use of general descriptive names, registered names, trademarks, service marks, etc. in this publication
does not imply, even in the absence of a speciﬁc statement, that such names are exempt from the relevant
protective laws and regulations and therefore free for general use.
The publisher, the authors, and the editors are safe to assume that the advice and information in this book
are believed to be true and accurate at the date of publication. Neither the publisher nor the authors or
the editors give a warranty, expressed or implied, with respect to the material contained herein or for any
errors or omissions that may have been made. The publisher remains neutral with regard to jurisdictional
claims in published maps and institutional afﬁliations.
This Springer imprint is published by the registered company Springer Nature Switzerland AG
The registered company address is: Gewerbestrasse 11, 6330 Cham, Switzerland

To Eun Soo and Jacqueline

Preface
For an object X in a category, such as a set or a vector space, an involution is a
degree 2 self-map, i.e., a map j : X

X such that j ◦j = IdX. An involutive
category is a categoriﬁcation of an object with an involution. More precisely, an
involutive category is a category C equipped with
•
a functor I : C

C, called the involution functor, and
•
a natural isomorphism ι : IdC

∼=
I 2, called the unit of I,
such that the coherence condition:
ιI = Iι : I

I 3,
called the triangle identity, is satisﬁed. Involutive categories are important because
they are the natural setting to study objects with involutive structures. A basic
example is the involutive category Vect(C) of complex vector spaces, with the
involution functor I given by taking conjugate vector spaces. Star-algebras, which
satisfy
(ab)∗= b∗a∗,
and their differential graded analogues both arise naturally as involutive objects
in some involutive categories. These ∗-algebras are important in applications to
physics, in particular as algebras of observables in quantum theory.
This book is about involutive categories and involutive operads, with applications
to the GNS construction and algebraic quantum ﬁeld theory. While there are many
books on category theory, this book is the ﬁrst one that focuses on involutive
categories. Some of the materials—including parts of Chapters 2, 4, 7, and 8—are
based on the work of Jacobs [Jac12] and Benini, Schenkel, and Woike [BSW19b].
Other parts—including Chapters 3, 5, and 6 on coherence and strictiﬁcation of
involutive categories and involutive (symmetric) monoidal categories—are new
materials that have not appeared anywhere else before.
vii

viii
Preface
This book is written at the ﬁrst- to second-year graduate level. With detailed
explanation and exercises at the end of every chapter, this book is suitable for inde-
pendent study and graduate courses. It is also a useful reference for mathematicians
and physicists whose work involves involutive objects.
A brief description of each chapter follows.
Chapter 1. Category Theory
To make this book as self-contained as possible, in this chapter we recall some
basic category theory, including monoidal categories and monads. Since we will
discuss colimits related to involutive categories, in this chapter we provide a simple
and constructive proof that the category Cat of small categories has all small
colimits. This is a well-known and often used fact, but a direct proof is not easily
accessible in the literature.
Chapter 2. Involutive Categories
Involutive analogues of basic categorical concepts, including functors, natural
transformations, and adjunctions, are deﬁned in this chapter. In involutive cate-
gories, there is a natural concept of an involutive object, which consists of an object
X and a morphism j : X

IX, such that the diagram:
is commutative. For a given involutive category (C, I, ι), the category Inv(C) of
involutive objects inherits from C an involutive structure and other categorical
properties. One main result of this chapter is Theorem 2.3.8. It states that for an
adjunction between involutive categories, if one of the functors is an involutive
functor, then so is the other one, and the adjunction is an involutive adjunction.
As a consequence, if an involutive functor is an equivalence of categories in the
usual sense, then it is an involutive equivalence.
Chapter 3. Coherence of Involutive Categories
With each type of categories comes a set of coherence questions. In this chapter,
we prove several coherence properties of involutive categories. An involutive cate-
gory is strict if the unit is the identity natural transformation Id : IdC

I 2 =
IdC. We construct the free strict involutive category, the cofree strict involutive
category, and the free involutive category of a category. Then, we observe that there
is a unique strict involutive equivalence from the free involutive category to the free
strict involutive category of a category. Next, we show that involutive categories are
algebras over a monad. We also show that the category of involutive categories and
strict involutive functors is locally ﬁnitely presentable and that its forgetful functor
to Cat admits a right adjoint.

Preface
ix
Chapter 4. Involutive Monoidal Categories
This chapter is about the involutive analogues of monoidal categories. For an
involutive monoidal category C, its category Inv(C) of involutive objects inherits
from C the structure of an involutive monoidal category. Monoids in Inv(C) are the
same as involutive objects in Mon(C), which is the category of monoids in C with
an inherited involutive structure. If C is an involutive symmetric monoidal category,
then Mon(C) has another involutive structure that incorporates the symmetry iso-
morphism in C. The corresponding involutive objects are called reversing involutive
monoids. Complex unital ∗-algebras and their differential graded analogues are
both examples of reversing involutive monoids. This chapter ends with a section
on involutive monads, which yield more general objects with involutive structures.
Chapter 5. Coherence of Involutive Monoidal Categories
In this chapter, we prove several coherence properties of involutive monoidal
categories. First, we construct the free involutive monoidal category and the free
involutive strict monoidal category of a category and show that they are equivalent
via a strict involutive strict monoidal equivalence. Then, we prove that all formal
diagrams in an involutive monoidal category are commutative. Next, we prove a
strictiﬁcation result that says that every involutive monoidal category is equivalent
to an involutive strict monoidal category via an involutive adjoint equivalence. This
chapter ends with the constructions of the free involutive monoidal category and the
free involutive strict monoidal category of an involutive category.
Chapter 6. Coherence of Involutive Symmetric Monoidal Categories
This chapter is the symmetric analogue of the previous chapter. We prove a
number of coherence results regarding involutive symmetric monoidal categories. In
particular, we prove a strictiﬁcation result that says that every involutive symmetric
monoidal category is equivalent to an involutive strict symmetric monoidal category
via an involutive adjoint equivalence. This strictiﬁcation result allows us to safely
ignore parentheses in multiple monoidal products in an involutive symmetric
monoidal category. This is particularly important when we discuss involutive
operads in Chapter 8.
Chapter 7. Categorical Gelfand-Naimark-Segal Construction
The GNS construction is an important result in functional analysis that has
consequences in quantum mechanics. This chapter contains a categorical analogue
of the GNS construction as an isomorphism between two categories. This result is
due to Jacobs [Jac12], and we provide detailed proofs of some technical Lemmas
that are not included in that paper.
Chapter 8. Involutive Operads
An operad is a generalization of a category that encodes algebraic structures with
multiple inputs and one output. Without assuming any prior knowledge of operads,
in this chapter we ﬁrst recall the deﬁnitions of an operad and of an algebra over an
operad and provide a list of examples. Involutive operads are involutive monoids
in an involutive monoidal category of colored symmetric sequences. We observe
that every involutive operad yields an involutive monad, whose involutive algebras

x
Preface
are deﬁned as those of the involutive operad. For example, reversing involutive
monoids are involutive algebras over the involutive associative operad, and similarly
for the diagram version. Next, we prove that every involutive symmetric monoidal
functor induces an involutive functor between the respective involutive categories of
involutive operads. As examples, we observe that the involutive associative operad
and the algebraic quantum ﬁeld theory involutive operad of [BSW19b] both arise
from this change-of-category construction.
Newark, OH, USA
Donald Yau

Contents
1
Category Theory .............................................................
1
1.1
Basic Concepts of Category Theory ...................................
1
1.2
Monoidal Categories ....................................................
7
1.3
Monads ..................................................................
16
1.4
Colimits in Cat ..........................................................
19
1.5
Exercises and Notes.....................................................
25
2
Involutive Categories ........................................................
27
2.1
Deﬁnition and Examples................................................
27
2.2
Involutive Functors......................................................
31
2.3
Involutive Natural Transformations and Adjunctions .................
34
2.4
Involutive Equivalences.................................................
39
2.5
Involutive Objects .......................................................
40
2.6
Lifting Structures to Involutive Objects................................
45
2.7
Exercises and Notes.....................................................
49
3
Coherence of Involutive Categories ........................................
51
3.1
Free Strict Involutive Categories .......................................
52
3.2
Free Involutive Categories ..............................................
54
3.3
Strictiﬁcation of Free Involutive Categories ...........................
60
3.4
Involutive Categories as Monadic Algebras ...........................
61
3.5
Presentability of Involutive Categories.................................
64
3.6
Right Adjoint of the Forgetful Functor.................................
69
3.7
Exercises.................................................................
70
4
Involutive Monoidal Categories ............................................
71
4.1
Deﬁnitions and Examples...............................................
71
4.2
Rigidity of Involutive Monoidal Categories ...........................
77
4.3
Involutive Monoidal Functors ..........................................
80
4.4
Involutive Monoidal Category of Involutive Objects ..................
83
4.5
Involutive Monoids .....................................................
86
4.6
Involutive Commutative Monoids ......................................
91
xi

xii
Contents
4.7
Reversing Involutive Monoids..........................................
93
4.8
Involutive Monads ......................................................
97
4.9
Exercises and Notes..................................................... 103
5
Coherence of Involutive Monoidal Categories ........................... 107
5.1
Free Involutive Monoidal Categories .................................. 107
5.2
Free Involutive Strict Monoidal Categories............................ 121
5.3
Commutativity of Formal Diagrams ................................... 124
5.4
Strictiﬁcation of Involutive Monoidal Categories ..................... 128
5.5
Free Involutive Monoidal Categories of Involutive Categories ....... 134
5.6
Free Involutive Strict Monoidal Categories of Involutive
Categories ............................................................... 141
5.7
Exercises and Notes..................................................... 143
6
Coherence of Involutive Symmetric Monoidal Categories .............. 145
6.1
Free Involutive Symmetric Monoidal Categories...................... 146
6.2
Free Involutive Strict Symmetric Monoidal Categories ............... 153
6.3
Commutativity of Formal Diagrams ................................... 155
6.4
Strictiﬁcation of Involutive Symmetric Monoidal Categories ........ 156
6.5
Free Involutive Symmetric Monoidal Categories of Involutive
Categories ............................................................... 157
6.6
Free Involutive Strict Symmetric Monoidal Categories
of Involutive Categories................................................. 160
6.7
Exercises................................................................. 162
7
Categorical Gelfand–Naimark–Segal Construction...................... 165
7.1
Monoid Inner Product Objects ......................................... 166
7.2
Correspondence Between States and Inner Products .................. 172
7.3
Proofs of Technical Lemmas ........................................... 176
7.4
Exercises and Notes..................................................... 184
8
Involutive Operads........................................................... 185
8.1
Operads .................................................................. 187
8.2
Algebras ................................................................. 195
8.3
Involutive Operads as Involutive Monoids............................. 201
8.4
Involutive Monads from Involutive Operads........................... 207
8.5
Involutive Algebras of Involutive Operads............................. 210
8.6
Change of Involutive Symmetric Monoidal Categories ............... 215
8.7
AQFT Involutive Operad ............................................... 220
8.8
Exercises and Notes..................................................... 226
Symbol Deﬁnition List ........................................................... 229
Bibliography ...................................................................... 235
Index............................................................................... 239

Chapter 1
Category Theory
In this chapter, we ﬁx some notations and brieﬂy recall some basic category theory,
including monoidal categories and monads. Everything in this chapter is well-
documented in existing books, so there are no proofs, with the following two
exceptions.
(1) Lemma 1.2.26 is a useful fact in a symmetric monoidal category that we will
use in a later chapter. Its proof is included to illustrate some diagram-chasing
techniques that we will later use.
(2) Section 1.4 provides a simple and constructive proof that the category Cat of
small categories has all small colimits. This is a well-known and often used fact,
but a straightforward proof is not easily accessible in the literature.
1.1
Basic Concepts of Category Theory
In this section, we brieﬂy recall some basic concepts of category theory, including
functors, natural transformations, adjunctions, equivalences, and (co)limits. These
topics are covered in many introductory books on category theory, such as [Awo10,
Gra18, Lei14, Rie16, Rom17, Sim11], where we refer the reader for more detailed
discussion.
A category C consists of:
•
a class Ob(C) of objects in C;
•
a set C(X, Y), also denoted by C(X; Y), of morphisms with domain X =
dom(f ) and codomain Y = cod(f ) for any objects X, Y ∈Ob(C);
•
an assignment called composition
C(Y, Z) × C(X, Y)
◦
 C(X, Z) ,
◦(g, f ) = g ◦f
© The Author(s), under exclusive license to Springer Nature Switzerland AG 2020
D. Yau, Involutive Category Theory, Lecture Notes in Mathematics 2279,
https://doi.org/10.1007/978-3-030-61203-0_1
1

2
1
Category Theory
for objects X, Y, Z in C;
•
an identity morphism IdX ∈C(X, X) for each object X in C.
These data are required to satisfy the following two conditions.
Associativity:
For morphisms f , g, and h, the equality
h ◦(g ◦f ) = (h ◦g) ◦f
holds, provided the compositions are deﬁned.
Unity:
For each morphism f ∈C(X, Y), the equalities
IdY ◦f = f = f ◦IdX
hold.
In a category C, the collection of morphisms is denoted by Mor(C). For an object
X ∈Ob(C) and a morphism f ∈Mor(C), we often write X ∈C and f ∈C. We
also denote a morphism f ∈C(X, Y) by
f : X

Y,
X
f  Y ,
and
X
f  Y .
Morphisms f : X

Y and g : Y

Z are called composable, and
g ◦f ∈C(X, Z) is also denoted by gf , called their composite. A morphism f :
X

Y is:
•
an epimorphism if for any pair of morphisms g, h : Y

Z with gf = hf ,
it follows that g = h.
•
a monomorphism if for any pair of morphisms g, h : W

X with fg = f h,
it follows that g = h.
The identity morphism IdX of an object X is also denoted simply by Id. When
we draw a diagram in a category C, the identity morphism IdX of an object X is
sometimes denoted by X. A morphism f : X

Y in a category C is called
an isomorphism if there exists a morphism g : Y

X such that gf = IdX
and fg = IdY . A category is discrete if it contains no non-identity morphisms. A
groupoid is a category in which every morphism is an isomorphism.
For a category C, its opposite category is denoted by Cop. It has the same
objects as C and morphism sets Cop(X, Y) = C(Y, X), with identity morphisms
and composition inherited from C. A small category is a category whose class of
objects forms a set.
For categories C and D, a functor F : C

D consists of:
•
an assignment
Ob(C)

Ob(D),
X 
 F(X)

1.1
Basic Concepts of Category Theory
3
on objects;
•
an assignment
C(X, Y)

D

F(X), F(Y)

,
f 
 F(f )
on morphisms.
These data are required to satisfy the following two conditions.
Composition:
The equality
F(gf ) = F(g)F(f )
of morphisms holds, provided the compositions are deﬁned.
Identities:
For each object X ∈C, the equality
F(IdX) = IdF(X)
in D

F(X), F(X)

holds.
We often write F(X) and F(f ) as FX and Ff , respectively, to simplify the
notations. Functors are composed by composing the assignments on objects and
on morphisms. We write Cat for the category whose objects are small categories
and whose morphisms are functors.
Suppose F, G : C

D are functors between the same two categories.
A natural transformation θ
:
F

G consists of a morphism θX
:
FX

GX in D for each object X ∈C such that the diagram
in D is commutative for each morphism f : X

Y in C. In other words, the
equality
Gf ◦θX = θY ◦Ff
holds in D(FX, GY). Each morphism θX is called a component of θ. The identity
natural transformation IdF : F

F of a functor F has each component an
identity morphism. A natural isomorphism is a natural transformation in which
every component is an isomorphism.
Suppose φ
:
G

H is a natural transformation for a functor H
:
C

D. With θ : F

G as above, the vertical composition
φθ : F

H

4
1
Category Theory
is the natural transformation with components
(φθ)X = φX ◦θX : FX

HX
for
X ∈C.
Suppose θ′ : F ′

G′ is a natural transformation for functors F ′, G′
:
D

E. The horizontal composition
θ′ ∗θ : F ′F

G′G
is the natural transformation whose component (θ′ ∗θ)X for an object X ∈C is
deﬁned as either composite in the commutative diagram
in E.
For a category C and a small category D, a D-diagram in C is a functor
D

C. The diagram category CD has D-diagrams in C as objects, natural
transformations between such functors as morphisms, and vertical compositions of
natural transformations as composition.
An adjunction is a tuple (L, R, φ) consisting of:
•
A pair of functors in opposite directions
C
L
 D
R

.
•
A bijection
D(LX, Y)
φX,Y
∼=
 C(X, RY)
that is natural in the objects X ∈C and Y ∈D.
Such an adjunction is also called an adjoint pair, with L the left adjoint and R
the right adjoint. We sometimes denote such an adjunction by L ⊣R or (L, R).
We always display the left adjoint on top, pointing to the right. If an adjunction is
displayed vertically, then the left adjoint is written on the left-hand side.
In an adjunction L ⊣R as above, the natural bijection φ yields natural
transformations

1.1
Basic Concepts of Category Theory
5
IdC
ε
 RL
and
LR
η
 IdD ,
called the unit and the counit. The natural transformations
R
εR
 RLR
Rη
 R
and
L
Lε
 LRL
ηL
 L
are equal to IdR and IdL, respectively. These identities are known as the triangle
identities.
Characterizations of adjunctions are given in [Bor94a] (Chapter 3) and [Mac98]
(IV.1). We will use the following characterization of an adjunction from [Mac98]
(IV.1 Theorem 2(i)) several times in this book. An adjunction (L, R, φ) is com-
pletely determined by
•
the functors L : C

D and R : D

C, and
•
the natural transformation ε : IdC

RL
such that for each morphism f : X

RY in C with X ∈C and Y ∈D, there
exists a unique morphism f ′ : LX

Y in D such that the diagram
in C is commutative.
A functor F : C

D is called an equivalence if there exist
•
a functor G : D

C and
•
natural isomorphisms IdC

∼=
GF and IdD

∼=
FG.
In this case, G is both a left adjoint and a right adjoint of F, and (F, G) is called an
adjoint equivalence if F is left adjoint to G with the given natural isomorphisms
IdC

GF and FG

IdD as the unit and the counit, respectively. A
useful fact is that a functor F is an equivalence if and only if it is both:
•
fully faithful, which means that each function C(X, Z)

D(FX, FZ) on
morphism sets is a bijection;
•
essentially surjective, which means that for each object Y ∈D, there exists an
isomorphism FX

∼=
Y for some object X ∈C.
Suppose F : D

C is a functor. A colimit of F, if it exists, is a pair
(colim F, δ) consisting of
•
an object colim F ∈C and
•
a morphism δd : Fd

colim F in C for each object d ∈D
that satisﬁes the following two conditions.

6
1
Category Theory
(1) For each morphism f : d

d′ in D, the diagram
in C is commutative.
(2) The pair (colim F, δ) is universal among such pairs. In other words, if (X, δ′) is
another such pair that satisﬁes property (1), then there exists a unique morphism
h : colim F

X in C such that the diagram
is commutative for each object d ∈D.
A limit of F, if it exists, is deﬁned dually by turning all the morphisms backward.
A small (co)limit is a (co)limit of a functor whose domain category is a small
category. A category C is (co)complete if it has all small (co)limits. For a functor
F : D

C, its colimit, if it exists, is also denoted by colimx∈D Fx and
colimD F, and similarly for limits.
A left adjoint F : C

D preserves all the colimits that exist in C. In other
words, if H : E

C has a colimit, then FH : E

D also has a colimit,
and the natural morphism
colim
e∈E FHe

F

colim
e∈E He

is an isomorphism. Similarly, a right adjoint G : D

C preserves all the limits
that exist in D.
EXAMPLE 1.1.1. Here are some special types of colimits in a category C.
•
An initial object ∅C in C is a colimit of the functor ∅

C, where ∅is
the empty category with no objects and no morphisms. It is characterized by
the universal property that for each object X in C, there is a unique morphism
∅C

X in C.
•
A coproduct is a colimit of a functor whose domain category is a discrete
category. We use the symbols  and ⨿to denote coproducts.
•
A pushout is a colimit of a functor whose domain category has the form
•
•

 •
with three objects and two non-identity morphisms.

1.2
Monoidal Categories
7
•
A coequalizer is a colimit of a functor whose domain category has the form
•
 •
with two objects and two non-identity morphisms.
Terminal objects, products, pullbacks, and equalizers are the corresponding limit
concepts.
⋄
1.2
Monoidal Categories
One may think of a monoidal category as a categorical generalization of a monoid,
in which there is a way to multiply together objects and morphisms. From a more
sophisticated viewpoint, a monoidal category is exactly a bicategory [Ben67] with
one object. In this section, we recall the deﬁnitions of a (symmetric) monoidal
category, a (commutative) monoid, a (symmetric) monoidal functor, and a monoidal
natural transformation. We also recall Mac Lane’s Coherence Theorem for monoidal
categories and discuss some examples. For monoidal categories and their coherence,
our references are [Bor94b, JS93, Kel64, Mac63, Mac98].
DEFINITION 1.2.1. A monoidal category is a tuple
(C, ⊗, 1, α, λ, ρ)
consisting of:
•
a category C;
•
a functor ⊗: C × C

C called the monoidal product;
•
an object 1 ∈C called the monoidal unit;
•
a natural isomorphism
(1.2.2)
(X ⊗Y) ⊗Z
αX,Y,Z
∼=
 X ⊗(Y ⊗Z)
for all objects X, Y, Z ∈C called the associativity isomorphism;
•
natural isomorphisms
(1.2.3)
1 ⊗X
λX
∼=
 X
and
X ⊗1
ρX
∼=
 X
for all objects X ∈C called the left unit isomorphism and the right unit
isomorphism, respectively.
These data are required to satisfy the following axioms.

8
1
Category Theory
Unity Axioms:
The diagram
(1.2.4)
is commutative for all objects X, Y ∈C. Moreover, the equality
λ1 = ρ1 : 1 ⊗1
∼=
 1
holds.
Pentagon Axiom:
The pentagon
is commutative for all objects W, X, Y, Z ∈C.
A strict monoidal category is a monoidal category in which α, λ, and ρ are all
identity morphisms.
REMARK 1.2.5. Consider Deﬁnition 1.2.1.
(1) We usually suppress the associativity isomorphism α and the unit isomorphisms
λ and ρ from the notation, and abbreviate a monoidal category to (C, ⊗, 1) or
even just C. On the other hand, to emphasize the ambient monoidal category C,
we decorate the monoidal structure accordingly as ⊗C, 1C, αC, λC, and ρC.
(2) The axiom λ1 = ρ1 is a consequence of the unity axiom (1.2.4) and the
pentagon axiom, so it is redundant [Kel64].
(3) The following unity diagrams are commutative.
(1.2.6)
See [Mac98] VII.1 Eq. (9) and Exercise 1.
⋄
CONVENTION 1.2.7. In a monoidal category, an empty tensor product, written
as X⊗0 or X⊗∅, means the monoidal unit 1.
⋄

1.2
Monoidal Categories
9
DEFINITION 1.2.8. A monoid in a monoidal category C is a triple (X, μ, 1)
with:
•
X an object in C;
•
μ : X ⊗X

X a morphism, called the multiplication;
•
1 : 1

X a morphism, called the unit.
These data are required to make the following associativity and unity diagrams
commutative.
A morphism of monoids
f : (X, μX, 1X)

(Y, μY , 1Y )
is a morphism f : X

Y in C that preserves the multiplications and the units
in the sense that the diagrams
are commutative. The category of monoids in a monoidal category C is denoted by
Mon(C).
DEFINITION 1.2.9. For monoidal categories C and D, a monoidal functor
(F, F2, F0) : C

D
consists of:
•
a functor F : C

D;
•
a natural transformation
(1.2.10)
F(X) ⊗F(Y)
F2
 F(X ⊗Y) ∈D,
where X and Y are objects in C;
•
a morphism
(1.2.11)
1D
F0
 F1C ∈D .

10
1
Category Theory
These data are required to satisfy the following associativity and unity axioms.
Associativity:
The diagram
(1.2.12)
is commutative for all objects X, Y, Z ∈C.
Left Unity:
The diagram
(1.2.13)
is commutative for all objects X ∈C.
Right Unity:
The diagram
(1.2.14)
is commutative for all objects X ∈C.
A strong monoidal functor is a monoidal functor in which the morphisms F0 and F2
are all isomorphisms. A strict monoidal functor is a monoidal functor in which the
morphisms F0 and F2 are all identity morphisms.
REMARK 1.2.15. We often abbreviate a monoidal functor (F, F2, F0) to F. A
monoidal functor is sometimes called a lax monoidal functor in the literature to
emphasize the fact that the morphisms F2 and F0 are not necessarily invertible. A
strong monoidal functor is also known as a tensor functor [JS93].
⋄
PROPOSITION 1.2.16. Each monoidal functor (F, F2, F0) : C

D induces
a functor
Mon(C)
F
 Mon(D)

1.2
Monoidal Categories
11
that sends a monoid (X, μ, 1) in C to the monoid

FX, μFX, 1FX
in D with unit
and multiplication
DEFINITION 1.2.17. For monoidal functors F, G : C

D, a monoidal
natural transformation θ : F

G is a natural transformation between the
underlying functors such that the diagrams
(1.2.18)
and
1D
F0
 F1C
θ1C

1D
G0
 G1C
(1.2.19)
are commutative for all objects X, Y ∈C.
The following coherence/strictiﬁcation result for monoidal categories is due to
Mac Lane; see [Mac63], [Mac98] (XI.3 Theorem 1), and [JS93].
THEOREM 1.2.20 (Coherence for Monoidal Categories).
For each monoidal
category C, there exist a strict monoidal category Cst and an adjoint equivalence
C
L
 Cst
R

with (i) both L and R strong monoidal functors and (ii) RL = IdC.
In other words, every monoidal category can be strictiﬁed via an adjoint
equivalence consisting of strong monoidal functors.
•
A second version of the Coherence Theorem [Mac98] (VII.2 Theorem 1)
describes explicitly the free monoidal category generated by one object.

12
1
Category Theory
•
A third version of the Coherence Theorem [Mac98] (VII.2 Corollary) states
that every diagram in a monoidal category involving monoidal products of the
associativity isomorphism, the unit isomorphisms, their inverses, and identity
morphisms, and their composites, commutes.
•
A fourth version of the Coherence Theorem states that, for each category C, the
unique strict monoidal functor from the free monoidal category generated by C to
the free strict monoidal category generated by C is an equivalence of categories
[JS93] (Theorem 1.2).
Generalizations of these coherence results to other types of monoidal categories,
such as braided, ribbon, and coboundary monoidal categories, are discussed in
[Yau∞].
Next we consider symmetric monoidal categories.
DEFINITION 1.2.21. A symmetric monoidal category is a pair (C, ξ) in which:
•
C = (C, ⊗, 1, α, λ, ρ) is a monoidal category as in Deﬁnition 1.2.1.
•
ξ is a natural isomorphism
(1.2.22)
X ⊗Y
ξX,Y
∼=
 Y ⊗X
for objects X, Y ∈C, called the symmetry isomorphism.
These data are required to satisfy the following three axioms.
Symmetry Axiom:
The diagram
(1.2.23)
is commutative for all objects X, Y ∈C.
Unit Axiom:
The diagram
(1.2.24)
is commutative for all objects X ∈C.
Hexagon Axiom:
The diagram
(1.2.25)

1.2
Monoidal Categories
13
is commutative for all objects X, Y, Z ∈C.
The following consequence of the Symmetry Axiom and the Hexagon Axiom
will be used in the proof of Proposition 4.7.1.
LEMMA 1.2.26. In a symmetric monoidal category C with associativity isomor-
phism α and symmetry isomorphism ξ, the diagram
is commutative for all objects A, B, C ∈C.
PROOF. To save space in the following diagram, we use concatenation as an
abbreviation for the monoidal product, so (AB)C means (A ⊗B) ⊗C.
The sub-diagram (a) is commutative by the naturality of ξ. The middle rectangle
and the bottom-right sub-diagram are commutative by the Hexagon Axiom. The
other sub-diagrams are commutative by deﬁnition or that ξ ◦ξ = Id.
□
DEFINITION 1.2.27. A commutative monoid in a symmetric monoidal category
(C, ξ) is a monoid (X, μ, 1) in C such that the multiplication μ is commutative in
the sense that the diagram

14
1
Category Theory
is commutative. A morphism of commutative monoids is a morphism of the
underlying monoids. The category of commutative monoids in C is denoted by
CMon(C).
DEFINITION 1.2.28. For symmetric monoidal categories C and D, a symmetric
monoidal functor (F, F2, F0) : C

D is a monoidal functor between the
underlying monoidal categories that is compatible with the symmetry isomor-
phisms, in the sense that the diagram
(1.2.29)
is commutative for all objects X, Y ∈C. A symmetric monoidal functor is said to
be strong (resp., strict) if the underlying monoidal functor is so.
Next is the symmetric version of Proposition 1.2.16.
PROPOSITION 1.2.30. Each
symmetric
monoidal
functor
(F, F2, F0)
:
C

D induces a functor
CMon(C)
F
 CMon(D)
that is deﬁned as in Proposition 1.2.16.
The symmetric version of the Coherence Theorem 1.2.20 is also true. It states that
every symmetric monoidal category can be strictiﬁed to a strict symmetric monoidal
category via an adjoint equivalence consisting of strong symmetric monoidal
functors.
•
Another version of the Coherence Theorem for symmetric monoidal categories
states that every diagram in a symmetric monoidal category involving monoidal
products of the associativity isomorphism, the unit isomorphisms, the symmetry
isomorphism, their inverses, and identity morphisms, as well as their composites,
commutes. This is a special case of [JS93] (Corollary 2.6), which is stated more
generally for braided monoidal categories.
•
Yet another version of the Coherence Theorem for symmetric monoidal cate-
gories states that, for each category C, the unique strict symmetric monoidal
functor from the free symmetric monoidal category generated by C to the
free strict symmetric monoidal category generated by C is an equivalence of
categories. This is the symmetric special case of [JS93] (Theorem 2.5), which is
again stated for braided monoidal categories.

1.2
Monoidal Categories
15
EXAMPLE 1.2.31. Here are some examples of symmetric monoidal cate-
gories.
•
(Set, ×, ∗) : category of sets and functions. A monoid in Set is a monoid in the
usual sense, also called a unital monoid if one wants to emphasize the unit.
•
(Poset, ×, ∗) : category of partially ordered sets and ordered-preserving func-
tions.
•
(Rel, ×, ∗) : category of sets with relations as morphisms. For two sets X and Y,
a relation from X to Y is a subset of the product X × Y.
•
(Cat, ×, 1) : category of small categories and functors. Here 1 is a category with
one object and only the identity morphism.
•
(Chain(K), ⊗, K) : category of chain complexes over a ﬁeld K and chain maps
[Wei97]. A monoid in Chain(K) is a unital differential graded K-algebra.
•
(Vect(K), ⊗, K) : category of K-vector spaces and K-linear maps. A monoid in
Vect(K) is a unital K-algebra.
•
(Hilb, ⊗, C): category of complex Hilbert spaces and bounded linear maps,
where ⊗is the completed tensor product of Hilbert spaces [Wei80].
Note that the last three examples are not strict symmetric monoidal categories
because the associativity isomorphisms are not equalities.
⋄
EXAMPLE 1.2.32. For a monoidal category (C, ⊗, 1, α, λ, ρ), its opposite
monoidal category is the opposite category Cop whose monoidal product is the
same as that in C on objects. It is given by f op ⊗gop = (f ⊗g)op for morphisms
f, g in C. Here for a morphism f ∈C(X, Y), we write f op ∈Cop(Y, X) for the
corresponding morphism. The monoidal unit in Cop is the monoidal unit 1 in C.
The associativity isomorphism and the left/right unit isomorphisms in Cop are given
by
(X ⊗Y) ⊗Z
(α−1
X,Y,Z)op
 X ⊗(Y ⊗Z)
and
1 ⊗X
(λ−1
X )op
 X
X ⊗1
(ρ−1
X )op

.
If we regard the monoidal category C as a bicategory with one object, then the
opposite monoidal category Cop is called the conjugate of the one-object bicategory
C in [Ben67] (3.1).
If (C, ξ) is a symmetric monoidal category, then Cop equipped with the
symmetry isomorphism
X ⊗Y
(ξ−1
X,Y )op
 Y ⊗X
for objects X, Y ∈C is a symmetric monoidal category.
⋄
In Example 8.1.22 below, we will see an important example of a monoidal
category that is not symmetric.

16
1
Category Theory
DEFINITION 1.2.33. A symmetric monoidal category C is closed if, for each
object X, the functor
−⊗X : C

C
admits a right adjoint, denoted by [X, −] and called the internal hom.
EXAMPLE 1.2.34. All the symmetric monoidal categories in Example 1.2.31
are closed, in which the right adjoint of −⊗X is the most straightforward
hom-construction. For the category Chain(K) of chain complexes, one has to be
careful about the sign convention, the details of which can be found in [Hov99]
(Proposition 4.2.13).
⋄
EXAMPLE 1.2.35. Here is an example of a strict monoidal category that is not
symmetric. Suppose C is a small category. Denote by End(C) the category whose
•
objects are functors C

C;
•
morphisms are natural transformations between such functors.
The category End(C) has a monoidal structure whose
•
monoidal product is composition of functors for Ob

End(C)

, and is horizontal
composition of natural transformations for Mor

End(C)

;
•
monoidal unit is the identity functor IdC.
This is a strict monoidal category, since composition of functors is strictly associa-
tive and unital, but it is not symmetric in general.
⋄
1.3
Monads
For further discussion of monads, the reader may consult [BW85, Bor94b, Mac98,
Sch72].
DEFINITION 1.3.1. A monad in a category C is a triple (T, μ, ϵ) in which
•
T : C

C is a functor and
•
μ : T 2

T , called the multiplication, and ϵ : IdC

T , called the unit,
are natural transformations
such that the associativity and unity diagrams
are commutative. When there is no danger of confusion, we abbreviate such a monad
to T .

1.3
Monads
17
PROPOSITION 1.3.2. Suppose C is a small category. Then monads in C are
exactly the monoids in the strict monoidal category

End(C), ◦, IdC

in Exam-
ple 1.2.35.
PROOF. The associativity and unity diagrams in Deﬁnition 1.3.1 for a monad in
C are equal to the associativity and unity diagrams in Deﬁnition 1.2.8 for a monoid
in the strict monoidal category End(C).
□
DEFINITION 1.3.3. Suppose (T, μ, ϵ) is a monad in a category C.
(1) A T -algebra is a pair (X, θ) consisting of
•
an object X in C and
•
a morphism θ : T X

X, called the structure morphism,
such that the associativity and unity diagrams
(1.3.4)
are commutative.
(2) A morphism of T -algebras
f : (X, θX)

(Y, θY )
is a morphism f : X

Y in C such that the diagram
is commutative.
(3) The category of T -algebras is denoted by Alg(T ).
DEFINITION 1.3.5. For a monad (T, μ, ϵ) in a category C, the Eilenberg-Moore
adjunction is the adjunction
C
T
 Alg(T )
U

in which:
•
The right adjoint U is the forgetful functor U(X, θ) = X.
•
The left adjoint sends an object X ∈C to the free T -algebra

T X, μX : T 2X

T X

.

18
1
Category Theory
The following result about the existence of limits in the category of algebras is
[Bor94b] Proposition 4.3.1.
PROPOSITION 1.3.6. Suppose T is a monad in a category C. If C admits some
type of limits, then the category Alg(T ) admits the same type of limits, which are
furthermore preserved by the forgetful functor U.
Existence of colimits in the category of algebras is more subtle. The following
result is [Bor94b] Proposition 4.3.4.
PROPOSITION 1.3.7. Suppose T is a monad in a cocomplete category C. Then
the category Alg(T ) is cocomplete if and only if it has all coequalizers.
To state another result that guarantees the existence of colimits in the category
of algebras, we ﬁrst need a few deﬁnitions, all of which can be found in [Bor94a,
Bor94b].
DEFINITION 1.3.8. Suppose C is a category.
(1) The kernel pair of a morphism f
:
X

Y in C is the pullback
P
 X , if it exists, of f with itself.
(2) A regular epimorphism is an epimorphism that can be written as the coequalizer
of some pair of morphisms.
(3) C is called a regular category if the following conditions are satisﬁed:
(i) Every morphism has a kernel pair.
(ii) Every kernel pair has a coequalizer.
(iii) The pullback of a regular epimorphism along any morphism exists and is
again a regular epimorphism.
(4) A section of a morphism f : X

Y is a morphism s : Y

X such
that f s = IdY .
The following result about the existence of (co)limits in the category of algebras
is [Bor94b] Theorem 4.3.5.
THEOREM 1.3.9. Suppose C is a complete and cocomplete regular category in
which every regular epimorphism has a section. Then for each monad T in C, the
category Alg(T ) is complete, cocomplete, and regular.
EXAMPLE 1.3.10. Categories that satisfy the hypotheses of Theorem 1.3.9
include Set, Vect(K), and Chain(K). On the other hand, the category Cat of small
categories is not regular [Bor94b] (2.4.6), although it is complete and cocomplete.
See Theorem 1.4.9 below.
⋄

1.4
Colimits in Cat
19
1.4
Colimits in Cat
The purpose of this section is to provide an explicit description of colimits in the
category Cat of small categories and functors. Since a colimit can also be expressed
as a coequalizer involving coproducts, when they exist, we will concentrate on
coequalizers in Cat. To describe these coequalizers explicitly, ﬁrst we need some
deﬁnitions. For a morphism f in a category, recall that dom(f ) and cod(f ) denote
its domain and codomain, respectively.
DEFINITION 1.4.1. Suppose F, G : C

D are two functors between small
categories.
(1) Deﬁne
ob
∼as the equivalence relation on Ob(D) generated by
F(X) ∼G(X)
for
X ∈Ob(C).
For an object Y ∈D, its
ob
∼-equivalence class is denoted by [Y].
(2) Deﬁne
Mor(D) =

n≥1
Mor(D)×n
as the set of non-empty ﬁnite sequences of morphisms in D that are not
necessarily composable.
(3) For f = (f1, . . . , fm) ∈Mor(D) with each fi a morphism in D, deﬁne its
domain and codomain as
dom(f ) = dom(f1)
and
cod(f ) = cod(fm).
We say that f is
ob
∼-composable if
cod(fi)
ob
∼dom(fi+1)
for
i = 1, . . . , m −1.
(4) Deﬁne
	
Mor(D) ⊆Mor(D)
as the subset of
ob
∼-composable sequences.
(5) Deﬁne ≃as the equivalence relation on 	
Mor(D) generated by ∼1 and ∼2 as
follows. Suppose f = (f1, . . . , fm) and g = (g1, . . . , gn) are in 	
Mor(D).
•
We deﬁne
f ∼1 g

20
1
Category Theory
if m = n + 1, and there exists 1 ≤i ≤m −1 such that
(i) (f1, . . . , fi−1) = (g1, . . . , gi−1),
(ii) (fi+2, . . . , fm) = (gi+1, . . . , gn),
(iii) cod(fi) = dom(fi+1), and
(iv) fi+1fi = gi ∈Mor(D).
•
We deﬁne
f ∼2 g
if m = n, and there exists 1 ≤i ≤m such that
(i) fj = gj for i ̸= j ∈{1, . . . , m}, and
(ii) fi = F(h) and gi = G(h) for some h ∈Mor(C).
(6) For f ∈	
Mor(D), its ≃-equivalence class is denoted by [f ].
EXPLANATION 1.4.2. Let us explain Deﬁnition 1.4.1 with more details.
(1) For two objects X, Y ∈D, X
ob
∼Y if and only if either one of the following two
statements holds.
(i) X = Y.
(ii) There exists a sequence of objects
X = W0, W1, . . . , Wn = Y
in D with n > 0 such that, for each 0 ≤i ≤n −1, there exists an object
Vi ∈C with
(Wi, Wi+1) =

F(Vi), G(Vi)

or

G(Vi), F(Vi)

.
(2) f ∼1 g means that
•
f contains a consecutive pair of composable morphisms, and
•
g is obtained from f by replacing this consecutive pair with their composite
in D.
The condition
(f1, . . . , fi−1) = (g1, . . . , gi−1)
is empty if i = 1, and the condition
(fi+2, . . . , fm) = (gi+1, . . . , gn)
is empty if i = m −1.

1.4
Colimits in Cat
21
(3) f ∼2 g means that
•
f contains an entry of the form F(h) for some h ∈Mor(C), and
•
g is obtained from f by replacing this entry with G(h).
(4) f ≃g if and only if either one of the following two statements holds.
(i) f = g.
(ii) There exists a sequence
f = ψ0, ψ1, . . . , ψr = g
with each ψi ∈	
Mor(D) and r > 0 such that, for each 0 ≤j ≤r −1, either
ψj ∼ϵj ψj+1
or
ψj+1 ∼ϵj ψj
with
ϵj ∈{1, 2}.
(5) If f ≃g, then
(1.4.3)
dom(f )
ob
∼dom(g)
and
cod(f )
ob
∼cod(g)
because ∼1 and ∼2 do not change the
ob
∼-equivalence classes of the domain and
the codomain.
⋄
The concepts in Deﬁnition 1.4.1 are used below.
DEFINITION 1.4.4. Suppose F, G : C

D are two functors between small
categories. Deﬁne a small category E as follows.
Objects:
Ob(E) = Ob(D)/
ob
∼, i.e., the set of
ob
∼-equivalence classes of objects in
D.
Morphisms:
Mor(E) = 	
Mor(D)/ ≃, i.e., the set of ≃-equivalence classes in
	
Mor(D).
(Co)domain:
For [f ] ∈Mor(E), its domain and codomain are deﬁned as
dom

[f ]

=

dom(f )

and
cod

[f ]

=

cod(f )

.
Identity:
For [X] ∈Ob(E), its identity morphism Id[X] is [IdX].
Composition:
The composite of two composable morphisms
[X]
[f ]
 [Y]
[g]
 [Z]
in E is deﬁned as
[g] ◦[f ] =

(f , g)

,
in which (f , g) is the concatenation of f and g

22
1
Category Theory
LEMMA 1.4.5. E in Deﬁnition 1.4.4 is a small category.
PROOF. For a morphism [f ] ∈Mor(E), its domain and codomain are well-
deﬁned by (1.4.3). For an object [X] ∈Ob(E), its identity morphism is well-deﬁned
by ∼2. Indeed, for each object V ∈C, we have that
IdF(V ) = F(IdV ) ∼2 G(IdV ) = IdG(V ).
So [IdX] is independent of the choice of the representative X ∈[X] by ∼2.
For the composition, the concatenation (f , g) is
ob
∼-composable because both
cod(f ) and dom(g) are in the same equivalence class [Y]. That the ≃-equivalence
class

(f , g)

is independent of the choices of the representatives f ∈[f ] and
g ∈[g] follows from the deﬁnitions of ∼1 and ∼2. Composition of morphisms in E
is associative because concatenation of sequences is associative.
The unit equalities
[f ] ◦Iddom([f ]) = [f ] = Idcod([f ]) ◦[f ]
hold by ∼1. In fact, once a representative f = (f1, . . . , fm) ∈[f ] is chosen, we
may choose the representative
Iddom(f ) = Iddom(f1) ∈Iddom([f ]).
So a representative of the composite [f ] ◦Iddom([f ]) is

Iddom(f1), f1, . . . , fm

∼1 f .
A similar argument works for the other unit equality.
□
LEMMA 1.4.6. In the context of Deﬁnition 1.4.4, the assignments

Ob(D) ∋X


[X] ∈Ob(E),
Mor(D) ∋f


[f ] ∈Mor(E)
deﬁne a functor π : D

E.
PROOF. That π preserves domains, codomains, and identity morphisms follows
from the deﬁnition. That π preserves compositions of morphisms follows from ∼1.
□
THEOREM 1.4.7. In the context of Deﬁnition 1.4.4 and Lemma 1.4.6, the
diagram
C
F

G
 D
π
 E
is a coequalizer in Cat.

1.4
Colimits in Cat
23
PROOF. The equality πF = πG holds on objects by the deﬁnition of
ob
∼. This
equality holds on morphisms by the deﬁnition of ∼2.
To check that (E, π) has the required universal property of a coequalizer, suppose
H : D

B ∈Cat
such that
HF = HG.
We must show that there exists a unique functor H : E

B such that the
triangle in the diagram
is commutative. First note that H induces a unique function H on objects that makes
the diagram
(1.4.8)
commutative. Indeed, since HF(X) = HG(X) for each object X ∈C, X
ob
∼Y
implies H(X) = H(Y) by Explanation 1.4.2(1).
We deﬁne the desired functor H : E

B by
H([X]) = H(X)
for
[X] ∈Ob(E),
H

[f ]

= (Hfm) ◦· · · ◦(Hf1)
for [f ] = [(f1, . . . , fm)] ∈Mor(E). To see that H is well-deﬁned on mor-
phisms, ﬁrst observe that for each
ob
∼-composable sequence f , the morphisms
(Hfm, . . . , Hf1) are composable in B by (1.4.8). That H

[f ]

is independent of
the choice of the representative f ∈[f ] follows from
•
the fact that H preserves compositions of morphisms (for ∼1) and
•
the equality HF = HG on morphisms in C (for ∼2).
Moreover, H preserves identity morphisms because H does, and H preserves com-
positions of morphisms by the associativity of composition in B. By construction,
the equality Hπ = H holds.

24
1
Category Theory
For uniqueness, suppose H ′ : E

B is a functor such that H ′π = H.
We already mentioned that H is unique on objects. For a
ob
∼-composable sequence
f = (f1, . . . , fm), there are equalities
H ′([f ]) = H ′
[fm] ◦· · · ◦[f1]

= H ′([fm]) ◦· · · ◦H ′([f1])
= H(fm) ◦· · · ◦H(f1)
= H([f ]).
The ﬁrst equality follows from the deﬁnition of composition in E. The second
equality follows from the fact that H ′ preserves compositions of morphisms. The
third equality follows from the equality H ′π = H on morphisms. The last equality
is the deﬁnition of H([f ]). Therefore, H ′ = H as functors.
□
THEOREM 1.4.9. The category Cat is complete and cocomplete.
PROOF. The existence of small limits is equivalent to the existence of products
and equalizers [Bor94a] (Theorem 2.8.1). In Cat, both products and equalizers are
constructed by performing the constructions in Set for objects and morphisms. Sim-
ilarly, the existence of small colimits is equivalent to the existence of coproducts and
coequalizers. Once again, coproducts in Cat are constructed by taking coproducts
of object sets and of morphism sets. Coequalizers in Cat exist by Theorem 1.4.7. □
EXAMPLE 1.4.10. Suppose 1 = {0} is a discrete category with one object 0, and
2 =

0
f  1

is a category with two objects and one non-identity morphism f .
Consider the functors F, G : 1

2 deﬁned by F(0) = 0 and G(0) = 1. For
the coequalizer E of F and G, the object set
Ob(E) = Ob(2)/
ob
∼
= {∗}
has a single object. Every non-empty ﬁnite sequence of morphisms in 2 is
ob
∼-
composable, so
	
Mor(2) = Mor(2).
The quotient by the equivalence relation ≃is
Mor(E) = 	
Mor(2)/≃
=

[f n] : n ≥0

,
in which
f n =

(f, . . . , f )
with n copies of f if n > 0,
Id0
if n = 0.

1.5
Exercises and Notes
25
The identity morphism of the object ∗is [Id0]. Composition in the coequalizer E is
given by
[f n] ◦[f m] = [f n+m].
The functor π : 2

E sends both objects 0, 1 to ∗∈E, and sends the
morphism f ∈2 to the morphism [f ] ∈E.
⋄
1.5
Exercises and Notes
(1) Prove Propositions 1.2.16 and 1.2.30.
(2) Prove that a category has small (co)limits if and only if it has (co)products and
(co)equalizers.
(3) Prove Proposition 1.3.7.
(4) Suppose M is a complete and cocomplete symmetric monoidal category, in
which the monoidal product commutes with small colimits on each side. Along
the lines of Theorem 1.4.7, give an explicit construction of coequalizers in the
category of small M-enriched categories and M-enriched functors.
(5) Give an explicit construction of a pushout in Cat. Do the same for M-enriched
categories.
1.5.1
Notes
The explicit description of coequalizers in Cat in Theorem 1.4.7 is based on (i) the
generalized congruences in [BBP99] and (ii) the quotient construction in [Sch72]
(6.4.4 and 8.2.4). Another proof of the existence of small (co)limits in Cat is given
in [Rie16] (4.5.16), using the fact that Cat is a reﬂective subcategory of the category
of simplicial sets, which has all small (co)limits. Although the existence of small
colimits in Cat is well-known, we included the detailed explanation for two reasons.
First, an explicit and straightforward description of coequalizers in Cat is not easily
accessible. Second, we will use Theorem 1.4.9 below, so a good understanding of
coequalizers in Cat will be useful.

Chapter 2
Involutive Categories
In this chapter, we present the deﬁnitions and basic properties of involutive cat-
egories, involutive functors, involutive natural transformations, involutive adjunc-
tions, and involutive objects in involutive categories. An important observation
is Theorem 2.3.8, which says that an adjoint of an involutive functor must also
be an involutive functor such that the adjunction is an involutive adjunction. As
a consequence, an involutive functor that is also an equivalence of categories is
automatically an involutive equivalence.
2.1
Deﬁnition and Examples
DEFINITION 2.1.1. An involutive structure on a category C is a pair (I, ι) in
which:
•
I : C

C is a functor, called the involution functor.
•
ι : IdC

∼=
I 2 is a natural isomorphism, called the unit of I, that satisﬁes the
equality
(2.1.2)
I
ιI = Iι
 I 3 ,
called the triangle identity.
If we need to emphasize the ambient category C, we will decorate I and ι as IC and
ιC, respectively. We also deﬁne the following.
(1) An involutive structure is strict if the unit ι is the identity natural transformation
IdIdC : IdC

I 2 = IdC.
(2) An involutive category is a category equipped with an involutive structure.
© The Author(s), under exclusive license to Springer Nature Switzerland AG 2020
D. Yau, Involutive Category Theory, Lecture Notes in Mathematics 2279,
https://doi.org/10.1007/978-3-030-61203-0_2
27

28
2
Involutive Categories
(3) A strict involutive category is a category equipped with a strict involutive
structure.
REMARK 2.1.3. A concept similar to an involutive category is a dagger category.
A dagger category is a category C equipped with a functor (−)† : Cop

C
that is the identity on objects and that satisﬁes f †† = f for morphisms f . Roughly
speaking, in a dagger category there is a natural way to turn each morphism around.
Dagger categories are useful in the study of Hilbert spaces and quantum systems
[AC04, AC08, Bae06, Sel07, Sel10]. In Example 2.5.7 we will observe that small
dagger categories are exactly the involutive objects in a certain involutive category.
⋄
The following observation says that each involution functor is self-adjoint.
PROPOSITION 2.1.4. Suppose (C, I, ι) is an involutive category. Then:
(1) There is an adjunction I ⊣I with unit ι and counit ι−1.
(2) I preserves all the limits and colimits that exist in C.
PROOF. To show that there is an adjunction I ⊣I, we must show that there
exists a bijection
C(IX, Y) ∼= C(X, IY)
for objects X, Y in C. For morphisms f : IX

Y and g : X

IY, we
deﬁne the composites:
(2.1.5)
The assignments
f


f ♯
and
g


g♭
give the desired bijection. Indeed, the commutative diagram
shows that (f ♯)♭= f , in which IιX = ιIX by the triangle identity (2.1.2). The
equality (g♭)♯= g is proved similarly.

2.1
Deﬁnition and Examples
29
The second assertion follows from the ﬁrst assertion, since left adjoints preserve
colimits and right adjoints preserve limits.
□
COROLLARY 2.1.6. Suppose X is an object in an involutive category (C, I, ι).
Under the adjunction bijections
C(I 2X, X)
C(IX, IX)
∼=
(−)♭

∼=
(−)♯
 C(X, I 2X) ,
there are equalities
Id♯
IX = ιX
and
Id♭
IX = ι−1
X .
PROPOSITION 2.1.7. Suppose (C, I, ι) is an involutive category, and D is a small
category. Then the diagram category CD inherits an involutive structure (I ′, ι′)
deﬁned by
I ′X = I ◦X
for
X ∈CD,
(ι′
X)(d) = ιX(d) : X(d)


(I ′)2X

(d)
for
d ∈D.
PROOF. The functoriality of I ′ and the naturality of ι′ follow from their
deﬁnitions. The triangle identity (2.1.2) for (I ′, ι′) follows from that for (I, ι).
□
The rest of this section contains examples of involutive categories.
EXAMPLE 2.1.8 (Trivial Involution). Every category C can be equipped with the
trivial involutive structure

IdC, IdIdC

with the identity functor as the involution
functor and the identity natural transformation of IdC as the unit.
⋄
EXAMPLE 2.1.9 (Commutative Group Action). Suppose G is a commutative
group, regarded as a groupoid with one object and with the elements in G as the
morphisms. A G-diagram in a category C is exactly an object in C equipped with a
G-action. There is a strict involutive structure (−) on the diagram category CG that
takes a G-diagram X : G

C to the G-diagram
in which g−1 is the multiplicative inverse of an element g ∈G. In other words, X is
the same object X with the inverted G-action. When G is regarded as a one-object
groupoid, that the inversion map (−)−1 : G

G deﬁnes an isomorphism of
groupoids is where we used the assumption that G is commutative. For example:

30
2
Involutive Categories
(1) When G is the trivial group {id}, this involutive structure on C{id} = C is the
trivial involutive structure in Example 2.1.8.
(2) When G is the circle group S1 with C a suitable category of topological
spaces or spectra, this involutive structure was used in [Bar08] to study O(2)-
equivariant spaces/spectra.
⋄
EXAMPLE 2.1.10 (Conjugate Vector Spaces). The category Vect(C) of com-
plex vector spaces has a strict involutive structure (−) that sends each complex
vector space V to its conjugate V , which has the same underlying additive group as
V . For z ∈C and v ∈V , the C-linear structure in V is given by
z ·V v = z ·V v
with z the complex conjugate of z, and ·V and ·V the scalar multiplications in V and
V , respectively. For a C-linear map f , f has the same underlying set map as f .
Moreover:
(1) The category Chain(C) of chain complexes of complex vector spaces has a
strict involutive structure that restricts to (−) in each degree.
(2) The strict involutive structure (−) extends to the category Hilb of complex
Hilbert spaces. For a Hilbert space H, the inner product on the conjugate space
H is the complex conjugate of the inner product on H.
⋄
EXAMPLE 2.1.11 (Opposite Categories). The category Cat of small categories
has a strict involutive structure (−)op given by taking the opposite category. For
a functor F : C

D, the functor F op : Cop

Dop is the same as F
on objects, and is given by F op(f op) = (F(f ))op for morphisms f ∈C(X, Y).
Furthermore, restricted to the subcategory Poset of partially ordered sets, this gives
Poset a strict involutive structure by reversing the partial orderings.
⋄
EXAMPLE 2.1.12 (Bicategories). A bicategory B is small if it has a set of
objects. It is locally small if for each pair of objects X and Y, the category B(X, Y)
is a small category. Consider the category Bicat of bicategories that are both small
and locally small, and morphisms between them [Ben67, Lac10]. Then Bicat has
three strict involutive structures:
(1) There is an involution functor I op that sends a bicategory B to the bicategory
Bop obtained by reversing only the 1-cells. In [Ben67] Bop is called the
transpose. This generalizes Example 2.1.11 if we consider a category C as
a bicategory in which each morphism set C(X, Y) is regarded as a discrete
category, i.e., a category with only identity morphisms.
(2) There is another involution functor I co given by I coB = Bco, which is the
bicategory obtained from B by reversing only the 2-cells. In [Ben67] Bco is
called the conjugate.
(3) Finally, there is an involution functor I coop given by I coopB = Bcoop, which is
the bicategory obtained from B by reversing both the 1-cells and the 2-cells. ⋄

2.2
Involutive Functors
31
2.2
Involutive Functors
In this section, we deﬁne the involutive versions of functors and the category of
small involutive categories.
DEFINITION 2.2.1. For two involutive categories C and D, an involutive functor
(F, ν) : (C, IC, ιC)

(D, ID, ιD)
is a pair in which:
•
F : C

D is a functor.
•
ν : FIC

IDF is a natural transformation, called the distributive law, such
that the diagram
(2.2.2)
is commutative.
EXAMPLE 2.2.3. Suppose (C, I, ι) is an involutive category.
(1) Then the involution functor deﬁnes an involutive functor
(I, IdI 2)
: (C, I, ι)

(C, I, ι),
since the axiom (2.2.2) is just the triangle identity (2.1.2) in this case.
(2) Similarly, the identity functor deﬁnes an involutive functor
(IdC, IdI) : (C, I, ι)

(C, I, ι).
The identity functor on an involutive category is always regarded as an
involutive functor this way.
⋄
EXAMPLE 2.2.4. Suppose C is a category, and f : G

H is a homomor-
phism of commutative groups. In the context of Example 2.1.9, pre-composition
with the group homomorphism f yields a functor
f ∗: CH

CG
from H-objects in C to G-objects in C. When CH and CG are equipped with the
strict involutive structures in Example 2.1.9, the functor f ∗is an involutive functor
whose distributive law is the identity natural transformation.
⋄

32
2
Involutive Categories
The ﬁrst observation about involutive functors is that the distributive law must
have invertible components.
PROPOSITION 2.2.5. If (F, ν) : C

D is an involutive functor, then the
distributive law ν is a natural isomorphism.
PROOF. We ﬁrst deﬁne a natural transformation π : IDF

FIC as the
composite
The equality
π ◦ν = IdFIC
is proved by the following commutative diagram.
In the above diagram, the equality
FιC
IC = FICιC
holds by the triangle identity (2.1.2). The left and the right squares are commutative
by the naturality of ν and the axiom (2.2.2), respectively. A similar diagram proves
the equality ν ◦π = IdIDF .
□
The next observation says that involutive functors can be composed.
PROPOSITION 2.2.6. Suppose
(C, IC, ιC)
(F,νF )  (D, ID, ιD)
(G,νG)  (E, IE, ιE)
are two involutive functors. Then the composite functor GF : C

E becomes
an involutive functor when equipped with the distributive law νGF given by the
composite

2.2
Involutive Functors
33
(2.2.7)
PROOF. The axiom (2.2.2) for νGF is proved by the following commutative
diagram.
In the above diagram, the two trapezoids are commutative by the axiom (2.2.2) for
νF and νG. The lower-right square is commutative by the naturality of νG.
□
The composite of two involutive functors is always regarded as an involutive
functor equipped with the distributive law (2.2.7). To deﬁne the category of
small involutive categories, we ﬁrst need to make sure that the distributive law
construction νGF is associative with respect to composition of involutive functors.
PROPOSITION 2.2.8. Suppose
(B, IB, ιB)
(H,νH )  (C, IC, ιC)
(F,νF )  (D, ID, ιD)
(G,νG)  (E, IE, ιE)
are three involutive functors. Then the equality
ν(GF)H = νG(FH)
holds.
PROOF. By the deﬁnition (2.2.7), the desired equality is the commutativity of the
following diagram.

34
2
Involutive Categories
Expanding νGF
H
and νFH using the deﬁnition (2.2.7), it follows that both νGF
H
◦
GFνH and νG
FH ◦GνFH are equal to the composite
GFHIB
GFνH
 GFICH
GνF
H  GIDFH
νG
FH
 IEGFH .
□
DEFINITION 2.2.9. Denote by ICat the category whose objects are small invo-
lutive categories and whose morphisms are involutive functors.
Recall from Proposition 2.1.7 that an involutive structure extends to each diagram
category.
PROPOSITION 2.2.10. Suppose (F, ν) : B

C is an involutive functor
between involutive categories, and D is a small category. Then the induced functor
BD
F D = F◦(−)  CD
inherits from F the structure of an involutive functor.
PROOF. For X ∈BD, the X-component of the distributive law
νF D : F DI ′
B

I ′
CF D
is the natural transformation whose d-component is the morphism
νX(d) : FIBX(d)

ICFX(d) ∈C
for each object d ∈D. The naturality and the involutive functor axiom (2.2.2) of
νF D follow from those of ν.
□
2.3
Involutive Natural Transformations and Adjunctions
Next we deﬁne the involutive versions of a natural transformation and of an
adjunction.
DEFINITION 2.3.1. Suppose
(C, IC, ιC)
(F,νF ) 
(G,νG)
 (D, ID, ιD)

2.3
Involutive Natural Transformations and Adjunctions
35
are two involutive functors. An involutive natural transformation
θ : (F, νF )

(G, νG)
is a natural transformation θ : F

G of the underlying functors such that the
diagram
(2.3.2)
is commutative. An involutive natural isomorphism is an involutive natural transfor-
mation with an underlying natural isomorphism.
Involutive natural transformations are closed under vertical and horizontal
compositions of natural transformations; see Exercise 3 in Section 2.7.
EXAMPLE 2.3.3. If (C, I, ι) is an involutive category, then the unit ι
:
IdC

∼=
I 2 is an involutive natural isomorphism, since the diagram (2.3.2)
is the triangle identity (2.1.2) in this case.
⋄
EXAMPLE 2.3.4. Suppose (C, I, ι) is a small involutive category. Denote by
IEnd(C) the category whose
•
objects are involutive functors (F, ν) : C

C;
•
morphisms are involutive natural transformations between such involutive func-
tors.
As in Example 1.2.35, the category IEnd(C) has a strict monoidal structure with
•
monoidal
product
given
by
composition
of
involutive
functors
on
C
for Ob

IEnd(C)

, and by horizontal composition of involutive natural
transformations for Mor

IEnd(C)

;
•
monoidal unit the identity functor IdC.
⋄
DEFINITION 2.3.5. Suppose
(C, IC, ιC)
(F,νF )  (D, ID, ιD)
(G,νG)

are two involutive functors. An involutive adjunction
(F, νF ) ⊣(G, νG)

36
2
Involutive Categories
is an adjunction F
⊣G of the underlying functors such that the unit ε
:
IdC

GF and the counit η : FG

IdD are both involutive natural
transformations. In this case, we call (G, νG) an involutive right adjoint of (F, νF ),
and call (F, νF ) an involutive left adjoint of (G, νG).
We now provide some characterizations of involutive adjunctions.
LEMMA 2.3.6. Suppose F : C


D : G is an adjunction with (C, IC, ιC)
and (D, ID, ιD) involutive categories, and (F, νF ) and (G, νG) involutive functors.
Then the following statements are equivalent:
(1) (F, νF ) ⊣(G, νG) is an involutive adjunction.
(2) The diagrams
(2.3.7)
are commutative.
PROOF. Using (2.2.6) to expand the distributive laws νFG and νGF in terms
of νF and νG, the two diagrams in (2.3.7) are equal to the involutive natural
transformation condition (2.3.2) for the unit ε : IdC

GF and the counit
η : FG

IdD of the adjunction.
□
The next observation says that an adjoint of an involutive functor is automatically
an involutive functor such that the adjunction is an involutive adjunction.
THEOREM 2.3.8. Suppose (C, IC, ιC) and (D, ID, ιD) are involutive categories,
and F : C


D : G is an adjunction of the underlying categories. Then the
following statements are equivalent:
(1) (F, νF ) is an involutive functor for some natural transformation FIC
νF
 IDF.
(2) (G, νG) is an involutive functor for some natural transformation GID
νG
 ICG.
Furthermore, if either (1) or (2) holds, then (F, νF ) ⊣(G, νG) is an involutive
adjunction.
PROOF. To prove (1)

(2), suppose (F, νF ) is an involutive functor. Using
the adjunctions F ⊣G and IC ⊣IC from Proposition 2.1.4, we deﬁne νG as the
adjoint of the composite
(2.3.9)
FICGID
νF
GID  IDFGID
IDηID  I 2
D
(ιD)−1
 IdD

2.3
Involutive Natural Transformations and Adjunctions
37
in which η : FG

IdD is the counit of the adjunction.
To check the axiom (2.2.2) for (G, νG), suppose X ∈C and Y ∈D are objects.
Consider the following diagram.
(2.3.10)
In the above diagram:
•
The four unnamed maps are bijections deﬁned by the adjunctions F ⊣G, IC ⊣
IC, and ID ⊣ID.
•
The top and the left rectangles are commutative by adjunction.
•
The bottom and the right rectangles are commutative by the deﬁnition of νG in
terms of νF .
•
The middle square is commutative by the axiom (2.2.2) for the involutive functor
(F, νF ).
Since ιC, ιD, and νF are natural isomorphisms by Proposition 2.2.5, it follows that
the outer-most diagram is also commutative. Since X ∈C and Y ∈D are arbitrary,
this proves that (G, νG) satisﬁes (2.2.2), so (1)

(2).
An argument similar to the previous paragraph shows (2)

(1).
For the last assertion, suppose (1) holds, which also means (2) holds. To show
that (F, νF ) and (G, νG) form an involutive adjunction, by Lemma 2.3.6 it sufﬁces
to check the commutativity of the two diagrams in (2.3.7). To prove that the left
diagram in (2.3.7) is commutative, we consider its adjoint diagram, which is the
outer-most diagram below.

38
2
Involutive Categories
Here we used the expression (2.3.9) for the adjoint of νG
F , and ε : IdC

GF
is the unit of the adjunction.
•
The lower-left triangle and the sub-diagram immediately above it are commuta-
tive by deﬁnition.
•
The sub-diagram (a) is commutative by the axiom (2.2.2) for the involutive
functor (F, νF ).
•
The sub-diagram (b) is commutative by the naturality of the counit η
:
FG

IdD.
•
By one of the triangle identities of the adjunction F ⊣G, we have that ηF ◦Fε =
IdF .
We conclude that the outer-most diagram above is commutative.
A similar argument shows that the right diagram in (2.3.7) is commutative,
proving the last assertion.
□
EXAMPLE 2.3.11. As in Example 2.2.4, suppose C is a category, and f
:
G

H is a homomorphism of commutative groups. The category CG is
regarded as an involutive category under the inversion in G, and similarly for CH.
Pre-composition with the group homomorphism f yields an involutive functor
f ∗: CH

CG
whose distributive law is the identity natural transformation. Assuming that C has
all small colimits, the functor f ∗admits a left adjoint
f! : CG

CH
given by left Kan extension along f [Bor94a] (Theorem 3.7.2). By Theorem 2.3.8,
this left adjoint f! is also an involutive functor, and
f! ⊣f ∗
is an involutive adjunction.
Similarly, assuming that C has all small limits, the functor f ∗admits a right
adjoint
f ! : CG

CH
given by right Kan extension along f . By Theorem 2.3.8, this right adjoint f ! is
also an involutive functor, and
f ∗⊣f !
is an involutive adjunction.
⋄

2.4
Involutive Equivalences
39
2.4
Involutive Equivalences
Recall that a functor F : C

D is called an adjoint equivalence of categories
if it admits either a left adjoint or a right adjoint such that both the unit and the
counit of the adjunction are natural isomorphisms. In this case, the adjunction is
called an adjoint equivalence. A basic fact in category theory says that a functor
F is an equivalence of categories if and only if it is fully faithful and essentially
surjective.
•
Fully faithful means that for each pair of possibly-equal objects X and Y in C,
the map
F : C(X, Y)

D(FX, FY)
is a bijection.
•
Essentially surjective means that for each object Z ∈D, there exist an object
W ∈C and an isomorphism F(W) ∼= Z.
We now deﬁne the involutive version of an equivalence, and provide some charac-
terizations.
DEFINITION 2.4.1. An involutive functor
(F, νF ) : (C, IC, ιC)

(D, ID, ιD)
is called an involutive equivalence if it admits an involutive right adjoint (G, νG)
such that both the unit and the counit of the involutive adjunction F ⊣G are natural
isomorphisms. In this case,
(F, νF ) ⊣(G, νG)
is called an involutive adjoint equivalence.
COROLLARY 2.4.2. Suppose
(F, νF ) : (C, IC, ιC)

(D, ID, ιD)
is an involutive functor. Then the following statements are equivalent:
(1) F : C

D is an equivalence of categories.
(2) (F, νF ) is an involutive equivalence.
(3) (F, νF ) admits an involutive left adjoint such that both the unit and the counit
of the involutive adjunction are natural isomorphisms.
PROOF. (2)

(1) follows immediately from the deﬁnition. For (1)

(2),
suppose F is an equivalence of categories. By the characterizations of equivalences
of categories in [Bor94a] (Proposition 3.4.3), we may assume that F admits a

40
2
Involutive Categories
right adjoint G such that both the unit and the counit of the adjunction are
natural isomorphisms. Since F is an involutive functor, by Theorem 2.3.8 the
right adjoint G is also an involutive functor such that the adjunction is an involutive
adjunction with invertible unit and counit. So (F, νF ) is an involutive equivalence.
The equivalence between (1) and (3) is proved similarly, since an equivalence of
categories can also be characterized as a functor that admits a left adjoint with
invertible unit and counit.
□
2.5
Involutive Objects
DEFINITION 2.5.1. Suppose (C, IC, ιC) is an involutive category.
(1) An involutive object in C is a pair (X, jX) with
•
X ∈C an object and
•
jX : X

IC(X) a morphism in C, called the involutive structure map,
such that the diagram
(2.5.2)
is commutative.
(2) A morphism f
: (X, jX)

(Y, jY ) of involutive objects in C is a
morphism f : X

Y in C such that the diagram
(2.5.3)
is commutative.
(3) The category of involutive objects in (C, IC, ι) and their morphisms is denoted
by Inv(C, IC, ιC) or Inv(C).
(4) Denote by U : Inv(C)

C the forgetful functor with U(X, jX) = X and
U(f ) = f .
The following result contains some basic properties of involutive objects. The
reader is asked to provide the proof in Exercise 6 in Section 2.7.
PROPOSITION 2.5.4. Suppose (C, IC, ιC) is an involutive category.
(1) If (X, jX) is an involutive object in C, then jX is an isomorphism in C whose
inverse is the composite

2.5
Involutive Objects
41
IC(X)
ICjX
 I 2
C(X)
(ιC
X)−1
 X .
(2) A pair

X, X
jX
 IC(X)

is an involutive object in C if and only if the
adjoint morphism IC(X)
(jX)♭
 X
makes the following diagram commu-
tative.
(3) Suppose (X, jX) and (Y, jY ) are involutive objects, and f : X

Y is a
morphism in C. Then f is a morphism of involutive objects if and only if the
diagram
is commutative.
(4) Suppose D is another involutive category, and C×D is given the componentwise
involutive structure. Then there is a canonical isomorphism of categories
Inv(C × D) ∼= Inv(C) × Inv(D).
Some examples of involutive objects follow.
EXAMPLE 2.5.5 (Objects with Involutions). For any category C, an involutive
object in the trivial involutive category

C, IdC, IdIdC

is exactly an object X ∈C
equipped with an involution j : X

X, i.e., j2 = IdX.
⋄
EXAMPLE 2.5.6 (Strict Involutive Categories). Recall that an involutive cate-
gory (C, I, ι) is strict if the unit ι : IdC

∼=
I 2 = IdC is the identity natural
transformation. Also recall that Cat denotes the category of all small categories and
functors between them. Then the involutive objects in the trivial involutive category

Cat, Id, IdId

are exactly the small strict involutive categories.
⋄
EXAMPLE 2.5.7 (Dagger Categories). Denote by Cati the subcategory of Cat
consisting of all the objects (i.e., all small categories) and only the functors that
are identity on objects. The involutive structure

(−)op, IdId

on Cat restricts to
an involutive structure on Cati, since for a functor F
: C

D, F op :
Cop

Dop is the same as F on objects. Then the involutive objects in the

42
2
Involutive Categories
involutive category

Cati, (−)op, IdId

are exactly the small dagger categories
discussed in Remark 2.1.3.
⋄
EXAMPLE 2.5.8 (Commutative Group Action). Consider the involutive cate-
gory

CG, (−), Id

in Example 2.1.9 for a commutative group G. An involutive
object is a pair (X, j) with j : X

X ∈CG a morphism, in which X is
the object X with the inverted G-action, such that j ◦j = IdX. For example, if
C is a suitable category of topological spaces and if G is the circle group S1, then
this category Inv(CS1) of involutive objects is equivalent to the category of O(2)-
equivariant spaces [Bar08] (Example 7.4.2).
⋄
EXAMPLE 2.5.9 (Conjugate Vector Spaces). Consider the involutive category

Vect(C), (−), Id

in Example 2.1.10. Each complex vector space V with a basis
{vi} yields an involutive object with involutive structure map
V
j
 V ,
j
 
i
zivi

=

i
zivi
for zi ∈C.
⋄
An involutive category and its category of involutive objects are related by free-
forgetful and forgetful-cofree adjunctions as follows.
THEOREM 2.5.10. For an involutive category (C, I, ι), consider the forgetful
functor U : Inv(C)

C.
(1) If C has coproducts, then U admits a left adjoint
L : C

Inv(C)
that sends an object X ∈C to the involutive object
L(X) =

X ⨿IX, X ⨿IX
jL(X)
 IX ⨿I 2X

with jL(X) determined by IdIX and ιX : X

I 2X.
(2) If C has products, then U admits a right adjoint
R : C

Inv(C)
that sends an object X ∈C to the involutive object
R(X) =

X × IX, X × IX
jR(X)
 IX × I 2X

with jR(X) determined by IdIX and ιX : X

I 2X.

2.5
Involutive Objects
43
PROOF. We will prove (1); the proof of (2) is similar.
For (1), we ﬁrst check that L(X) is an involutive object in C. Recall from
Proposition 2.1.4 that the involution functor I preserves all the colimits that exist in
C, so in particular it preserves coproducts. There is a canonical isomorphism
I

X ⨿IX
 ∼= IX ⨿I 2X,
which we used above to express the codomain of the morphism jL(X). The
composite
X ⨿IX
jL(X)
 IX ⨿I 2X
IjL(X)
 I 2X ⨿I 3X
is equal to
ιX ⨿ιIX ∼= ιX⨿IX,
in which the last isomorphism follows from the naturality of ι. So L(X) is an
involutive object in C.
For a morphism f
: X

Y in C, L(f ) : L(X)

L(Y) is the
morphism
X ⨿IX
f ⨿I(f )  Y ⨿IY .
This makes L : C

Inv(C) into a functor.
To check that L is a left adjoint of U, suppose (Z, jZ) is an involutive object in
C, and g : X

Z = U(Z, jZ) is a morphism in C. It sufﬁces to show that the
morphism
X ⨿IX
(g,(jZ)−1◦Ig)  Z
∈C
is the unique morphism L(X)

(Z, jZ) of involutive objects that restricts to g
on the coproduct summand X. For the existence part, we must show that the diagram
is commutative. Restricted to the summand IX in the upper-left corner, both
composites are equal to
Ig = jZ ◦(jZ)−1 ◦Ig.

44
2
Involutive Categories
Restricted to the summand X in the upper-left corner, the two composites form the
outer-most diagram below.
The left square is commutative by the naturality of the unit ι : IdC

I 2, and
the right square is commutative because (Z, jZ) is an involutive object.
For the uniqueness part, suppose h : L(X)

(Z, jZ) is a morphism of
involutive objects whose restriction to the coproduct summand X is equal to g. In
the commutative diagram
restriction to X in the upper-left corner yields the commutative square
The adjoint form of the previous commutative square is the commutative square
By the deﬁnition of (−)♭in (2.1.5) and Proposition 2.5.4(1), there are equalities
(jZ)♭= ι−1
Z ◦IjZ = (jZ)−1.
So we conclude that
h|IX = (jZ)−1 ◦Ig,
proving the desired uniqueness. This shows that L is a left adjoint of U.
□

2.6
Lifting Structures to Involutive Objects
45
2.6
Lifting Structures to Involutive Objects
In this section, we observe that the category of involutive objects inherits many
categorical structures from the original involutive category. The ﬁrst result says
that the category of involutive objects inherits limits and colimits from the original
involutive category.
PROPOSITION 2.6.1. If an involutive category (C, I, ι) has all small (co)limits,
then so does its category Inv(C) of involutive objects. Furthermore, if C has all
small limits and colimits, then the (co)limits in Inv(C) are created and preserved by
the forgetful functor U : Inv(C)

C.
PROOF. For the ﬁrst assertion, suppose C has all small colimits. The proof that
Inv(C) has all small limits when C does is similar.
Suppose G : D

Inv(C) is a functor with D a small category. For the
functor UG : D

C, the colimit
X = colimD UG ∈C
exists by assumption. Its involutive structure map jX is deﬁned by the commutative
diagrams
in C for d ∈D. The natural isomorphism
colimD IUG ∼= I

colimD UG

= IX
follows from the fact that the involution functor I commutes with all the colimits
that exist in C, since it is a left adjoint by Proposition 2.1.4. The commutative
diagram (2.5.3) that deﬁnes a morphism of involutive objects implies that jX is
a well-deﬁned morphism in C. That jX satisﬁes the axiom (2.5.2) for an involutive
structure map follows from the fact that each G(d) for d ∈D is an involutive object
in C, which satisﬁes (2.5.2). Therefore, (X, jX) is an involutive object in C, and
each natural morphism
G(d)
natural  (X, jX)
is a morphism of involutive objects by construction. A direct inspection shows
that (X, jX) and these natural morphisms form a colimit of the functor G. By
construction, these colimits in Inv(C) are created by U.

46
2
Involutive Categories
For the second assertion, since U has a left adjoint and a right adjoint by
Theorem 2.5.10, it also preserves limits and colimits.
□
The next observation says that the category of involutive objects is itself an
involutive category such that the forgetful functor is an involutive functor.
PROPOSITION 2.6.2. Suppose (C, I, ι) is an involutive category. Then:
(1) The category Inv(C) inherits an involutive structure

IInv(C), ιInv(C)
with
IInv(C)(X, jX) = (IX, IjX)
for each involutive object (X, jX), and
ιInv(C)
(X,jX) = ιX.
(2) With the above involutive structure, the forgetful functor U : Inv(C)

C
is an involutive functor with identity distributive law.
(3) If C has coproducts, then the adjunction
C
L
 Inv(C)
U

in Theorem 2.5.10(1) is an involutive adjunction.
(4) If C has products, then the adjunction
Inv(C)
U
 C
R

in Theorem 2.5.10(2) is an involutive adjunction.
PROOF. For (1), IInv(C) deﬁnes a functor on Inv(C) that takes a morphism of
involutive objects f : (X, jX)

(Y, jY ) to
IInv(C)(f ) = I(f ).
That ιInv(C) deﬁnes a natural isomorphism IdInv(C)

∼=
I 2
Inv(C) follows from the
commutativity of the outer diagram

2.6
Lifting Structures to Involutive Objects
47
in which the square is commutative by the naturality of the unit ι. The triangle
identity (2.1.2) for

IInv(C), ιInv(C)
follows from the triangle identity for (I, ι).
Assertion (2) follows from the equality
IU = UIInv(C) : Inv(C)

C.
Assertions (3) and (4) follow from assertion (2) and Theorem 2.3.8, which says that
an adjoint of an involutive functor must also be an involutive functor such that the
adjunction is an involutive adjunction.
□
From now on, the category Inv(C) of involutive objects in C is regarded as
an involutive category using Proposition 2.6.2(1). The next observation says that
involutive functors lift to the categories of involutive objects.
PROPOSITION 2.6.3. Each involutive functor
(F, νF ) : (C, IC, ιC)

(D, ID, ιD)
lifts to an involutive functor

Inv(C), IInv(C), ιInv(C)
(Inv(F),νInv(F))  
Inv(D), IInv(D), ιInv(D)
deﬁned as
(2.6.4)
Inv(F)(X, jX) =

F(X), F(X)
FjX
 FIC(X)
νF
X  IDF(X)

for (X, jX) ∈Inv(C). The distributive law
Inv(F) ◦IInv(C)
νInv(F)
 IInv(D) ◦Inv(F)
is given by νF in each component.
PROOF. For an involutive object (X, j) in C, to show that Inv(F)(X, j) is an
involutive object in D, we must check the axiom (2.5.2), which is the outer-most
diagram below.

48
2
Involutive Categories
The three sub-diagrams are commutative by
•
the axiom (2.5.2), which says ιC
X = (ICj) ◦j,
•
the naturality of νF , and
•
the axiom (2.2.2) for the involutive functor (F, νF ).
On a morphism f : (X, jX)

(Y, jY ) of involutive objects in C, we deﬁne
Inv(F)(f ) = F(f ).
This deﬁnes a functor
Inv(F) : Inv(C)

Inv(D)
and a natural transformation νInv(F) as stated. The involutive functor axiom (2.2.2)
for

Inv(F), νInv(F)
follows from that for the involutive functor (F, νF ).
□
The next observation says that involutive natural transformations, involutive
adjunctions, and involutive adjoint equivalences all lift to the categories of involutive
objects. The reader is asked to supply the proof in Exercise 8 in Section 2.7.
PROPOSITION 2.6.5. Suppose (C, IC, ιC) and (D, ID, ιD) are involutive cate-
gories.
(1) Each involutive natural transformation
(F, νF )
θ  (G, νG)
: C

D
lifts to an involutive natural transformation
Inv(θ) : (Inv(F), νInv(F))

(Inv(G), νInv(G))
deﬁned by
Inv(θ)(X, jX) = θX
for each (X, jX) ∈Inv(C).
(2) Each involutive adjunction
C
(F,νF )  D
(G,νG)

lifts to an involutive adjunction

2.7
Exercises and Notes
49

Inv(C), IInv(C), ιInv(C)
(Inv(F),νInv(F))
 
Inv(D), IInv(D), ιInv(D)
(Inv(G),νInv(G))

whose unit and counit are given by those of the adjunction F ⊣G.
(3) In (2), if (F, νF ) ⊣(G, νG) is an involutive adjoint equivalence, then so is the
lifted version.
2.7
Exercises and Notes
(1) In the proof of Proposition 2.1.4, prove that (g♭)♯= g.
(2) In the proof of Proposition 2.2.5, prove the equality ν ◦π = Id.
(3) This exercise refers to the concept of a 2-category; see Section 2.3 in [JY21].
Prove that involutive natural transformations are closed under vertical and
horizontal compositions. Conclude that ICat has the natural structure of a 2-
category.
(4) This exercise refers to the concept of a 2-functor; see Section 4.1 in [JY21].
Using the previous exercise and Propositions 2.6.2, 2.6.3, and 2.6.5, prove that
Inv(−) : ICat

ICat is a 2-functor.
(5) In Theorem 2.3.8:
•
Prove that the top, bottom, left, and right rectangles in (2.3.10) are commu-
tative.
•
Prove (2)

(1).
•
Assuming (1), prove that the right diagram in (2.3.7) is commutative.
(6) Prove Proposition 2.5.4.
(7) Prove assertion (2) in Theorem 2.5.10.
(8) Prove Proposition 2.6.5.
Notes. The deﬁnitions of an involutive category, an involutive functor, an
involutive object, and so forth, and most of the results in this chapter are due to
Jacobs [Jac12], the main exceptions being Theorem 2.3.8 and Corollary 2.4.2. In
[Jac12] involutive objects are deﬁned in adjoint form as in Proposition 2.5.4(2),
and are called self-conjugates there. Propositions 2.1.7 and 2.2.10 about diagram
involutive categories are from [BSW19b]. A strict involutive category is called a
category with involution in [Bar08], which contains the strict versions of some of
the results in this chapter.

Chapter 3
Coherence of Involutive Categories
For each type of categories with extra structures, coherence can be understood as
the question of describing the free structured category of a category. The purpose of
this chapter is to study the coherence of involutive categories and related topics.
In Section 3.1 we show that the forgetful functor
U : ICatst

Cat,
from the category of small strict involutive categories and strict involutive functors
to Cat, admits both a left adjoint Fsi and a right adjoint given by categorical
coproducts and products, respectively.
In Section 3.2 we consider the category ICat0 of small involutive categories and
strict involutive functors. We construct an explicit left adjoint Ficat of the forgetful
functor U : ICat0

Cat. For a small category C, we call Fsi(C) and Ficat(C)
the free strict involutive category and the free involutive category generated by
C, respectively. In Section 3.3 we show that there is a unique strict involutive
equivalence
Ficat(C)
∼
 Fsi(C).
In other words, the free involutive category generated by C strictiﬁes to the free strict
involutive category generated by C. In Section 3.4 we show that ICat0 is isomorphic
to the category of algebras of the monad deﬁned by the adjunction Ficat ⊣U.
In Section 3.5 we show that ICat0 is locally ﬁnitely presentable. Locally ﬁnitely
presentable categories have various nice properties; the reader is referred to [AR94]
for more discussion. In particular, each locally ﬁnitely presentable category has all
small colimits, and every object in the category may be expressed as a colimit of
objects in a generating set. In Section 3.6 the local ﬁnite presentability of ICat0 is
used to show that the forgetful functor U : ICat0

Cat admits a right adjoint.
© The Author(s), under exclusive license to Springer Nature Switzerland AG 2020
D. Yau, Involutive Category Theory, Lecture Notes in Mathematics 2279,
https://doi.org/10.1007/978-3-030-61203-0_3
51

52
3
Coherence of Involutive Categories
3.1
Free Strict Involutive Categories
The purpose of this section is to describe the free and the cofree strict involutive
categories generated by a category. Recall that an involutive category (C, I, ι) is
called strict if ι = IdIdC, so I 2 = IdC. In this case, we denote the strict involutive
category by (C, I). Recall that Cat denotes the category of small categories and
functors between them.
DEFINITION 3.1.1. Suppose (C, IC, ιC) and (D, ID, ιD) are involutive cate-
gories. An involutive functor
(F, ν) : (C, IC, ιC)

(D, ID, ιD)
is said to be strict if the distributive law ν is the identity natural transformation
FIC = IDF. Furthermore:
(1) ICat0 denotes the subcategory of ICat consisting of all the objects (i.e., all small
involutive categories) and strict involutive functors.
(2) U : ICat0

Cat denotes the forgetful functor deﬁned by
U(C, IC, ιC) = C
and
U(F) = F.
(3) ICatst denotes the category whose objects are small strict involutive categories
and whose morphisms are strict involutive functors.
(4) U : ICatst

Cat denotes the forgetful functor deﬁned by
U(C, IC) = C
and
U(F) = F.
LEMMA 3.1.2. A functor F
: C

D, with (C, IC, ιC) and (D, ID, ιD)
involutive categories, is a strict involutive functor if and only if
(1) the diagram
(3.1.3)
is commutative, and
(2) FιC = ιD
F .
Furthermore, if C and D are strict involutive categories, then F is a strict involutive
functor if and only if (1) holds.
⋄
PROOF. The ﬁrst assertion is true because, under the assumption FIC = IDF,
the condition FιC = ιD
F is the axiom (2.2.2) for an involutive functor with identity
distributive law. For the second assertion, when C and D are strict involutive

3.1
Free Strict Involutive Categories
53
categories, ιC : IdC = I 2
C and ιD : IdD = I 2
D are identity natural transformations,
making condition (2) redundant.
□
EXAMPLE 3.1.4. For each strict involutive category (C, I), the involution func-
tor I : C

C is a strict involutive functor.
⋄
EXAMPLE 3.1.5. Suppose C is a category, and f : G

H is a homomor-
phism of commutative groups. The pre-composition functor f ∗: CH

CG in
Example 2.2.4 is a strict involutive functor.
⋄
For an involutive category (C, IC, ιC), recall from Deﬁnition 2.5.1 that its
category of involutive objects and morphisms is denoted by Inv(C, IC, ιC). Also,
every category C can be equipped with the trivial involutive structure (IdC, IdIdC).
The following observation says that the category of small strict involutive categories
is equal to the category of involutive objects in Cat with the trivial involutive
structure.
LEMMA 3.1.6. There is an equality of categories
ICatst = Inv

Cat, Id, IdId

.
PROOF. The objects in Inv

Cat, Id, IdId

are exactly small strict involutive cat-
egories, as we already mentioned in Example 2.5.6. For this category of involutive
objects, the axiom (2.5.3) for a morphism is exactly the condition (3.1.3) for a strict
involutive functor between strict involutive categories.
□
The following observation gives explicit descriptions of the free and the cofree
strict involutive categories generated by a small category.
PROPOSITION 3.1.7. The forgetful functor U : ICatst

Cat admits both a
left adjoint Fsi and a right adjoint Fcosi
Cat
Fsi

Fcosi
 ICatst
U

given by
Fsi(C) =

C ⨿C,
C ⨿C
twist  C ⨿C

,
Fcosi(C) =

C × C,
C × C
twist  C × C

for each small category C.

54
3
Coherence of Involutive Categories
PROOF. To obtain the adjunctions Fsi ⊣U ⊣Fcosi, we apply Theorem 2.5.10 to
the involutive category

Cat, Id, IdId

. This is possible because Cat has all products
and coproducts. Then we use Lemma 3.1.6 to identify its category of involutive
objects with the category ICatst of small strict involutive categories.
□
DEFINITION 3.1.8. We call Fsi(C) and Fcosi(C) the free strict involutive
category and the cofree strict involutive category generated by C, respectively. We
write
UFsi(C) = C0 ⨿C1
with C0 and C1 indicating the two copies of C.
EXAMPLE 3.1.9. Suppose 1 is a category with one object and only the identity
morphism. Then the free strict involutive category on one object Fsi(1) is a discrete
category with two objects, which are interchanged by the strict involutive functor.
On the other hand, the cofree strict involutive category on one object Fcosi(1) is
again a discrete category with one object.
⋄
3.2
Free Involutive Categories
In Proposition 3.1.7 above, we described the free strict involutive category Fsi(C)
generated by a category C. Recall from Deﬁnition 3.1.1 the category ICat0 of small
involutive categories and strict involutive functors between them. The purpose of
this section is to describe the free involutive category generated by a category as an
explicit left adjoint of the forgetful functor U : ICat0

Cat that forgets about
the involutive structure. First we deﬁne what this would-be left adjoint does on a
category. We write Z≥0 for the set of non-negative integers.
DEFINITION 3.2.1. Suppose C is a category. Deﬁne a category Ficat(C) as
follows.
Objects:
Ob

Ficat(C)

= Z≥0 × Ob(C), so an object in Ficat(C) is an ordered
pair (m, X) with m a non-negative integer and X an object in C.
Morphisms:
For objects (m, X) and (n, Y) in Ficat(C), deﬁne the morphism set
Ficat(C)

(m, X), (n, Y)

=

C(X, Y)
if m ≡n (mod 2),
∅
otherwise.
Identity:
For each object (m, X) in Ficat(C), its identity morphism is IdX ∈
C(X, X).
Composition:
Suppose given morphisms

3.2
Free Involutive Categories
55
(m, X)
f
 (n, Y)
g
 (l, Z)
in Ficat(C), so m ≡n ≡l (mod 2), f ∈C(X, Y), and g ∈C(Y, Z). The
composite of these two morphisms in Ficat(C) is deﬁned as the composite gf ∈
C(X, Z).
Involution Functor:
Deﬁne a functor
Iicat : Ficat(C)

Ficat(C)
by
Iicat(m, X) = (m + 1, X)
for
(m, X) ∈Ficat(C),
Iicat

(m, X)
f  (n, Y)

=

(m + 1, X)
f  (n + 1, Y)

for each morphism f ∈Ficat
(m, X), (n, Y)

with m ≡n (mod 2).
Unit of Involution:
Deﬁne a natural transformation
ιicat : Id

I 2
icat
by setting

(m, X)
ιicat
(m,X)  (m + 2, X)

= IdX ∈C(X, X)
for each object (m, X) ∈Ficat(C).
LEMMA 3.2.2. For each category C, the triple

Ficat(C), Iicat, ιicat
is an involutive category.
PROOF. The functoriality of Iicat, the naturality of ιicat, and that ιicat is a natural
isomorphism, all follow directly from their deﬁnitions. The triangle identity (2.1.2)
holds because both Iicatιicat
(m,X) and ιicat
Iicat(m,X) are equal to IdX.
□
EXAMPLE 3.2.3. If 1 denotes a category with one object and only the identity
morphism, then
Ob

Ficat(1)

= Z≥0.

56
3
Coherence of Involutive Categories
There is a unique morphism m

n in Ficat(1) if and only if m ≡n (mod 2), in
which case the morphism is an isomorphism. The involution functor I on Ficat(1)
sends:
•
an object m to the object m + 1;
•
the unique morphism m

n, when m ≡n (mod 2), to the unique morphism
m + 1

n + 1.
The unit ι : Id

∼=
I 2 at an object m is the unique isomorphism m

∼=
m+2.
⋄
EXAMPLE 3.2.4. Suppose 2 =

0
 1

is a category with two objects and
one non-identity morphism. Then Ficat(2) has object set
Ob

Ficat(2)

= Z≥0 × {0, 1}
and morphism sets
Ficat(2)

(m, a), (n, b)

=

{∗}
if m ≡n (mod 2) and (a, b) ̸= (1, 0),
∅
otherwise.
The involution functor I on Ficat(2) sends:
•
an object (m, a) ∈Z≥0 × {0, 1} to the object (m + 1, a);
•
the unique morphism (m, a)

(n, b), when m ≡n (mod 2) and (a, b) ̸=
(1, 0), to the unique morphism (m + 1, a)

(n + 1, b).
The unit
ι(m,a) : (m, a)

∼=
I 2(m, a) = (m + 2, a)
is the unique isomorphism.
⋄
Next we deﬁne the action of Ficat on functors.
DEFINITION 3.2.5. For a functor G : C

D, deﬁne the functor
Ficat(G) : Ficat(C)

Ficat(D)
as the assignment
Z≥0 × Ob(C)
Id×G  Z≥0 × Ob(D)
on objects. For a morphism f ∈Ficat(C)

(m, X), (n, Y)

, with m ≡n (mod 2) and
f ∈C(X, Y), deﬁne the morphism

3.2
Free Involutive Categories
57
Ficat(G)(f ) = G(f ) ∈D

G(X), G(Y)

= Ficat(D)

(m, G(X)), (n, G(Y))

.
LEMMA 3.2.6. For each functor G : C

D, Ficat(G) is a strict involutive
functor. Moreover,
Ficat : Cat

ICat0
deﬁnes a functor.
PROOF. The functoriality of Ficat(G) follows directly from its deﬁnition. The
equality
Ficat(G) ◦Iicat = Iicat ◦Ficat(G) : Ficat(C)

Ficat(D)
holds because both composite functors send an object (m, X) ∈Ficat(C) to the
object

m + 1, G(X)

∈Ficat(D), and similar for morphisms. The equality
Ficat(G)ιicat
(m,X) = ιicat
Ficat(G)(m,X)
holds because both sides are given by IdG(X)
∈
D

G(X), G(X)

. So by
Lemma 3.1.2, Ficat(G) is a strict involutive functor. That Ficat preserves identity
functors and composition of functors also follows directly from its deﬁnition.
□
Next we deﬁne the morphism that will serve as the unit of the desired adjunction.
DEFINITION 3.2.7. For each category C, deﬁne the functor
ηC : C

UFicat(C)
by
ηC(X) = (0, X)
for
X ∈Ob(C),
ηC

f ∈C(X, Y)

= f ∈Ficat(C)

(0, X), (0, Y)

= C(X, Y).
Here is the main result of this section, which says that Ficat is the free involutive
category functor.
THEOREM 3.2.8. There is an adjunction
Cat
Ficat
 ICat0
U

whose unit is given in each component by ηC in Deﬁnition 3.2.7.

58
3
Coherence of Involutive Categories
PROOF. Suppose C is a category. We will prove that ηC satisﬁes the following
universal property for the unit of an adjunction:
For each functor F : C

D with (D, ID, ιD) an involutive category, there exists a
unique strict involutive functor
F :

Ficat(C), Iicat, ιicat

(D, ID, ιD)
such that the diagram
is commutative.
The desired functor F is deﬁned as follows.
•
For an object (m, X) ∈Ficat(C), we deﬁne
F(m, X) = I m
D F(X) ∈D,
where I 0
D means IdD.
•
For a morphism f ∈Ficat(C)

(m, X), (n, Y)

, with m ≡n (mod 2) and f ∈
C(X, Y), we deﬁne the morphism
F(f ) ∈D

I m
D F(X), I n
DF(Y)

as the composite
(3.2.9)
in D. Here (ιD)(n−m)/2 is the composite
I m
D F(Y)
ιD
Im
D F(Y)
 I m+2
D
F(Y)
ιD
Im+2
D
F(Y)
 · · ·
ιD
In−2
D
F(Y)
 I n
DF(Y)
if m ≤n, and similarly with (ιD)−1 if m > n.
It follows from the deﬁnition that F preserves identity morphisms. That F preserves
compositions of morphisms follows from the naturality of the unit ιD. Moreover, by
construction F extends F in the sense that UF ◦ηC = F.

3.2
Free Involutive Categories
59
To see that F is a strict involutive functor, we ﬁrst check that
FIicat = IDF.
For each object (m, X) ∈Ficat(C), there are equalities
FIicat(m, X) = F(m + 1, X) = I m+1
D
F(X) = IDF(m, X).
For each morphism f ∈Ficat(C)

(m, X), (n, Y)

, with m ≡n (mod 2) and f ∈
C(X, Y), the desired equality
FIicat(f ) = IDF(f )
holds if m = n because both sides are equal to I m+1
D
F(f ). If m < n, then the
desired equality is the commutativity of the diagram
in which I = ID in the bottom row. The bottom squares are commutative by the
triangle identity (2.1.2) in D. A similar argument works when m > n, using (ιD)−1
in place of ιD.
Next, for each object (m, X) ∈Ficat(C), the equality
Fιicat
(m,X) = ιD
F(m,X) ∈D

I m
D F(X), I m+2
D
F(X)

holds because both sides are equal to the unit ιD
I m
D F(X). Therefore, by Lemma 3.1.2,
F is a strict involutive functor.
In Exercise 1 in Section 3.7, the reader is asked to check the uniqueness of F as
a strict involutive functor satisfying UF ◦ηC = F.
□
DEFINITION 3.2.10. We call Ficat(C) the free involutive category generated by
a category C.
EXAMPLE 3.2.11. The involutive category Ficat(1) in Example 3.2.3 is the free
involutive category generated by one object.
⋄
EXAMPLE 3.2.12. The involutive category Ficat(2) in Example 3.2.4 is the free
involutive category generated by one morphism.
⋄

60
3
Coherence of Involutive Categories
3.3
Strictiﬁcation of Free Involutive Categories
For each small category C, the unit of the adjunction Fsi ⊣U in Proposition 3.1.7
is a functor
ηsi
C : C

UFsi(C),
where Fsi(C) is the free strict involutive category generated by C. By the adjunction
Ficat ⊣U in Theorem 3.2.8, there exists a unique strict involutive functor
Ficat(C)
ηsi
C
 Fsi(C) ,
where Ficat(C) is the free involutive category generated by C, such that the diagram
is commutative. The purpose of this section is to observe that the free involutive
category Ficat(C) and the free strict involutive category Fsi(C) generated by C are
equivalent via the functor ηsi
C.
COROLLARY 3.3.1. For each small category C, the strict involutive functor ηsi
C
is an involutive equivalence.
PROOF. Since ηsi
C is an involutive functor, to show that it is an involutive
equivalence, by Corollary 2.4.2 it sufﬁces to show that it is an equivalence of
categories, i.e., fully faithful and essentially surjective. The underlying category of
Fsi(C) is the coproduct C0 ⨿C1 of two copies of C. By the explicit construction
of the functor F in the proof of Theorem 3.2.8, the functor ηsi
C sends an object
(m, X) ∈Ficat(C) to the object X ∈Cϵ(m) ⊆Fsi(C), where
ϵ(m) =

0
if m is even,
1
if m is odd.
So the functor ηsi
C is surjective on objects.
On morphism sets, ηsi
C is the identity map of

3.4
Involutive Categories as Monadic Algebras
61
Ficat(C)

(m, X), (n, Y)

= Fsi(C)

X ∈Cϵ(m), Y ∈Cϵ(n)

=

C(X, Y)
if m ≡n (mod 2),
∅
otherwise.
So the functor ηsi
C is fully faithful.
□
EXAMPLE 3.3.2. For the one-object discrete category 1, the free strict involutive
category Fsi(1) is the discrete category with two objects {0, 1} by Example 3.1.9.
The free involutive category Ficat(1) is discussed in Example 3.2.3. The involutive
equivalence
ηsi
1 : Ficat(1)

Fsi(1)
sends an object m ∈Ficat(1) to ϵ(m) ∈{0, 1}, and the unique morphism
m

n, when m ≡n (mod 2), to the identity morphism of ϵ(m).
⋄
3.4
Involutive Categories as Monadic Algebras
The purpose of this section is to observe that small involutive categories are exactly
the algebras over a monad in the category Cat of small categories and functors.
The reader may review the deﬁnitions regarding monads in Section 1.3. We will use
the adjunction Ficat ⊣U in Theorem 3.2.8 with unit η : IdCat

UFicat in
Deﬁnition 3.2.7. For a small category C, there are object sets
Ob

UFicat(C)

= Z≥0 × Ob(C),
Ob

(UFicat)2(C)

= Z≥0 × Z≥0 × Ob(C).
The functor UFicat and the unit η are part of our desired monad. We now deﬁne its
multiplication.
DEFINITION 3.4.1. We deﬁne a natural transformation
μ : (UFicat)2

UFicat
as follows. For each small category C, the component
μC : (UFicat)2(C)

UFicat(C)
is the functor that sends:

62
3
Coherence of Involutive Categories
•
an object (n, m, X) ∈(UFicat)2(C), with n, m ∈Z≥0 and X ∈C, to the object
(n + m, X) ∈UFicat(C);
•
a morphism
f ∈(UFicat)2(C)

(n, m, X), (q, p, Y)

to the morphism
f ∈UFicat(C)

(n + m, X), (q + p, Y)

.
Recall from Deﬁnition 3.1.1 the category ICat0 of small involutive categories
and strict involutive functors.
THEOREM 3.4.2. The tuple

UFicat, μ, η

is a monad in Cat whose category of algebras is isomorphic to the category ICat0.
PROOF. The existence of the monad

UFicat, μ, η

follows from the adjunction
in Theorem 3.2.8. For the rest of this proof, let us write T for both the functor
UFicat : Cat

Cat and the monad

UFicat, μ, η

in Cat.
We now identify T -algebras and their morphisms with small involutive categories
and strict involutive functors, respectively. For a T -algebra

C, θ : T C

C

,
with C a small category and θ its T -algebra structure morphism, the associativity
and unity axioms in (1.3.4) mean the equalities
θ(n + m, X) = θ

n, θ(m, X)

,
θ(0, X) = X
for n, m ∈Z≥0 and X ∈Ob(C), and similarly for morphisms. We now deﬁne a
functor IC : C

C by
IC(X) = θ(1, X)
for
X ∈Ob(C),
IC(f ) = θ

(1, X)
f  (1, Y)

for
f ∈C(X, Y).
Then we deﬁne a natural transformation ιC : IdC

I 2
C whose component
θ(0, X) = X
ιC
X
 I 2
C(X) = θ

1, θ(1, X)

= θ(2, X)

3.4
Involutive Categories as Monadic Algebras
63
for X ∈Ob(C) is the morphism
θ

(0, X)
IdX
 (2, X)

.
An inspection shows that (C, IC, ιC) is an involutive category. In other words, ιC is
a natural isomorphism that satisﬁes the equality
ICιC = ιC
IC : IC

∼=
I 3
C.
If G : (C, θC)

(D, θD) is a morphism of T -algebras, then G : C

D
is a functor that strictly commutes with the structure morphisms in the sense that
G ◦θC = θD ◦T (G) : T C

D.
Using Lemma 3.1.2, this implies that
G : (C, IC, ιC)

(D, ID, ιD)
is a strict involutive functor.
Conversely, suppose (D, ID, ιD) is a small involutive category. We deﬁne a
structure morphism φD : T D

D as the functor that sends:
•
an object (m, X) ∈T D to the object I m
D X ∈D with I 0
D = IdD;
•
a morphism f : (m, X)

(n, Y) ∈T D to the composite
in (3.2.9) with F = IdD.
We need to check the associativity and unity axioms (1.3.4) for (D, φD). The
associativity axiom on objects follows from the equalities
φDμ

n, m, X

= φD
n + m, X

= I n+m
D
X
= I n
D

I m
D X

= φD
n, φD(m, X)

,

64
3
Coherence of Involutive Categories
and similarly for morphisms. The unity axiom is immediate from the deﬁnition.
Therefore, (D, φD) is a T -algebra.
If G : (C, IC, ιC)

(D, ID, ιD) is a strict involutive functor between small
involutive categories, then Lemma 3.1.2 implies the equality
G ◦φC = φD ◦T (G) : T C

D.
So G : (C, φC)

(D, φD) is a morphism of T -algebras.
An inspection of the above constructions
(C, θ)


(C, IC, ι)
and
(D, ID, ιD)


(D, φD)
shows that they are both functorial, and that they are inverses of each other.
□
3.5
Presentability of Involutive Categories
The purpose of this section is to observe that the category ICat0 of small involutive
categories and strict involutive functors is locally ﬁnitely presentable. Our refer-
ences for locally ﬁnitely presentable categories are [AR94, Bor94a, Bor94b]. We
ﬁrst recall some relevant deﬁnitions regarding directed colimits, ﬁnitely presentable
objects, and generators.
DEFINITION 3.5.1. A partially ordered set is called directed if each pair of
elements has an upper bound.
(1) A directed category is a directed partially ordered set, regarded as a small
category.
(2) A directed colimit in a category C is a colimit of a functor D

C with D
a directed category.
(3) For a set X of objects in a category C, a directed colimit of objects in X is a
directed colimit G : D

C with G(d) ∈X for each object d ∈D.
DEFINITION 3.5.2. Suppose C is a category, and X ∈C is an object.
(1) X is called ﬁnitely presentable if the functor
C(X, −) : C

Set
preserves directed colimits.
(2) C is called locally ﬁnitely presentable if it satisﬁes the following two condi-
tions.
•
C has all small colimits.
•
C has a set X of ﬁnitely presentable objects such that every object in C is a
directed colimit of objects in X.

3.5
Presentability of Involutive Categories
65
(3) Two monomorphisms f : R

X and g : S

X in C are equivalent
if there exists an isomorphism h : R

∼=
S such that f = gh.
(4) A sub-object of X is an equivalence class of monomorphisms with codomain
X. The sub-object represented by a monomorphism f : R

X is also
denoted by the domain R.
(5) A sub-object of X is proper if it has a representing monomorphism f
:
R

X that is not an isomorphism.
(6) A generator of C is a set of objects X = {Xj}j∈J in C such that, for each pair
of distinct morphisms f, g : A

B in C, there exists a morphism
hj : Xj

A
for some index j ∈J such that
f hj ̸= ghj : Xj

B.
(7) A strong generator of C is a generator X = {Xj}j∈J such that, for each object
B and each proper sub-object A of B, there exists a morphism
hj : Xj

B
for some index j ∈J that does not factor through A.
To show that ICat0 is locally ﬁnitely presentable, we will need the following
preliminary observation. Recall the free-forgetful adjunction Ficat ⊣U in Theo-
rem 3.2.8.
LEMMA 3.5.3. The forgetful functor U : ICat0

Cat preserves monomor-
phisms and proper sub-objects.
PROOF. Suppose F : C

D is a monomorphism in ICat0. To show that the
functor UF : UC

UD is a monomorphism, suppose H1, H2 : A

UC
are functors such that
(UF)H1 = (UF)H2 : A

UD.
We must show that H1 = H2. By the adjunction in Theorem 3.2.8 for each
i = 1, 2 the functor Hi has a unique extension to a strict involutive functor
H ′
i : Ficat(A)

C. Then
FH ′
1 = FH ′
2 : Ficat(A)

D
because:
•
Their underlying functors are equal by adjunction, since their restrictions to A
are equal as functors.

66
3
Coherence of Involutive Categories
•
The distributive laws of F, H ′
1, and H ′
2 are identities.
Since F is a monomorphism, it follows that H ′
1 = H ′
2. By adjunction this implies
that H1 = H2.
Each proper sub-object in ICat0 is represented by a monomorphism F
:
C

D that is not an isomorphism. We already showed that UF is a monomor-
phism in Cat. If UF is an isomorphism in Cat, then the underlying functor of F,
which is UF, is an isomorphism. But then F is an isomorphism, since its distributive
law is the identity. Since this violates our assumption on F, we conclude that the
monomorphism UF is not an isomorphism in Cat. In other words, UF represents
a proper sub-object in Cat.
□
The involutive categories in the following deﬁnition were described in Exam-
ples 3.2.3 and 3.2.4.
DEFINITION 3.5.4. Deﬁne the set
S =

Ficat(1), Ficat(2)

that consists of two small involutive categories. Here:
•
1 is the discrete category with one object 0.
•
2 =

0

1

is the category with two objects and one non-identity
morphism.
LEMMA 3.5.5. S =

Ficat(1), Ficat(2)

is a strong generator of ICat0.
PROOF. To show that S is a generator of ICat0, suppose F, G : C

D are
distinct strict involutive functors between small involutive categories. Then F and
G are distinct as functors, since both of them have the identity as the distributive
law.
•
If X ∈C is an object such that F(X) ̸= G(X), then the functor
1
H
 UC
deﬁned by
H(0) = X
satisﬁes
(UF)H ̸= (UG)H.
By the adjunction in Theorem 3.2.8, H extends uniquely to a strict involutive
functor Ficat(1)

C, whose composites with F and G are different.
•
On the other hand, if f ∈C is a morphism such that F(f ) ̸= G(f ), then the
functor
2
H
 UC
deﬁned by
H(0

1) = f

3.5
Presentability of Involutive Categories
67
satisﬁes
(UF)H ̸= (UG)H.
By the adjunction in Theorem 3.2.8, H extends uniquely to a strict involutive
functor Ficat(2)

C, whose composites with F and G are different.
Therefore, S is a generator of ICat0.
To show that S is a strong generator, suppose F : C

D is a monomor-
phism in ICat0 that represents a proper sub-object of D. By Lemma 3.5.3 the functor
UF : UC

UD is a monomorphism that represents a proper sub-object of UD
in Cat. Since UF is a monomorphism but not an isomorphism, at least one of the
following two statements holds:
(1) There exists an object X ∈UD that is not in the image of UF.
(2) There exists a morphism f ∈UD that is not in the image of UF.
In the ﬁrst case, the unique extension H ′ : Ficat(1)

D of the functor
1
H
 UD
deﬁned by
H(0) = X
does not factor through F. In the second case, the functor
2
H
 UD
deﬁned by
H(0

1) = f
has a unique extension H ′ : Ficat(2)

D that does not factor through F.
□
LEMMA 3.5.6. The involutive categories Ficat(1) and Ficat(2) are ﬁnitely pre-
sentable objects in ICat0.
PROOF. The functor ICat0(Ficat(1), −) preserves directed colimits because a
strict involutive functor Ficat(1)

C in ICat0 is uniquely determined by the
image of the object 0 ∈1 by the adjunction in Theorem 3.2.8. Similarly, a strict
involutive functor Ficat(2)

C in ICat0 is uniquely determined by the image
of the non-identity morphism 0

1 in 2 by adjunction.
□
PROPOSITION 3.5.7. The category ICat0 has all small limits and colimits, and
they are created by the forgetful functor U : ICat0

Cat
PROOF. Now suppose G : D

ICat0 is a functor with D a small category.
For the composite functor UG : D

Cat, the colimit
C = colimD UG ∈Cat

68
3
Coherence of Involutive Categories
exists by Theorem 1.4.9. Its involution functor IC is deﬁned by the commutative
diagrams
for d ∈D. The required natural isomorphism ιC : IdC

∼=
I 2
C is also uniquely
deﬁned by those in the involutive categories G(d) for d ∈D, since every object in
C is represented by an object in some category UG(d). The triangle identity (2.1.2)
for (IC, ιC) follows from those for (IG(d), ιG(d)).
By the construction of IC, each natural functor UG(d)

C for d ∈D yields
a strict involutive functor

G(d), IG(d), ιG(d)
natural  (C, IC, ιC) .
That these natural functors and (C, IC, ιC) form a colimit of G follows from:
•
the deﬁnition of C as a colimit of UG;
•
the fact that the involutive structure on C is uniquely deﬁned by those in G(d)
for d ∈D.
A similar argument proves the existence of limits in ICat0.
□
THEOREM 3.5.8. The category ICat0 is locally ﬁnitely presentable.
PROOF. By Theorem 1.11 in [AR94], a category is locally ﬁnitely presentable
if and only if it is cocomplete, and has a strong generator consisting of ﬁnitely
presentable objects. The category ICat0 is cocomplete by Proposition 3.5.7. It has
a strong generator consisting of ﬁnitely presentable objects by Lemma 3.5.5 and
Lemma 3.5.6.
□
There is a generalization of Theorem 3.5.8 for the category ICat of small
involutive categories and involutive functors. First we need a few deﬁnitions. The
reader may consult [Pin14, SV02] for discussion of cardinals.
DEFINITION 3.5.9. A regular cardinal is an inﬁnite cardinal that cannot be
expressed as a sum of a smaller number of smaller cardinals. Suppose λ is a regular
cardinal, and C is a category.
(1) A partially ordered set (D, ≤) is called λ-directed if every subset of D of
cardinality smaller than λ has an upper bound.
(2) A λ-directed colimit in C is a colimit of a functor D

C with D a λ-
directed partially ordered set, regarded as a small category.
(3) For a set X of objects in C, a λ-directed colimit of objects in X is a λ-directed
colimit G : D

C with G(d) ∈X for each object d ∈D.

3.6
Right Adjoint of the Forgetful Functor
69
(4) An object X ∈C is called λ-presentable if the functor C(X, −) preserves λ-
directed colimits.
(5) C is called locally λ-presentable if it has all small colimits, and has a set X
of λ-presentable objects such that every object in C is a λ-directed colimit of
objects in X.
(6) C is called locally presentable if it is locally β-presentable for some regular
cardinal β.
The proof of the following result is similar to that of Theorem 3.5.8. The reader
is asked to supply the proof in Exercise 4 below.
THEOREM 3.5.10. The category ICat is locally presentable.
3.6
Right Adjoint of the Forgetful Functor
Recall from Proposition 3.1.7 that the forgetful functor U : ICatst

Cat, from
the category of small strict involutive categories and strict involutive functors to
the category of small categories, admits both a left adjoint and a right adjoint. For
the category ICat0 of small involutive categories and strict involutive functors, the
forgetful functor U : ICat0

Cat has a left adjoint by Theorem 3.2.8. The
purpose of this section is to observe that this second forgetful functor also admits
a right adjoint. First we need some deﬁnitions from [Bor94a] Chapter 4.1. Recall
from Deﬁnition 3.5.2 the concepts of a sub-object and of a generator.
DEFINITION 3.6.1. Suppose C is a category.
(1) C is called well-powered if the sub-objects of each object constitute a set.
(2) C is called cowell-powered if its opposite category Cop is well-powered.
(3) C has a cogenerator if Cop has a generator.
THEOREM 3.6.2. The forgetful functor
U : ICat0

Cat
admits a right adjoint.
PROOF. We use the Special Adjoint Functor Theorem in [Bor94a] (Corol-
lary 3.3.5):
Suppose G : C

D is a small-limit-preserving functor such that C is complete and
well-powered, and has a cogenerator. Then G has a left adjoint.
To show that U admits a right adjoint, it sufﬁces to show that the functor
Uop : ICatop
0

Catop
satisﬁes the hypotheses of the Special Adjoint Functor Theorem. We observed in
Proposition 3.5.7 that ICat0 is cocomplete and that U preserves small colimits.

70
3
Coherence of Involutive Categories
By Lemma 3.5.5 ICat0 has a strong generator. A highly non-trivial result, [AR94]
Theorem 1.58, says that every locally presentable category is cowell-powered. So
by Theorem 3.5.8, ICat0 is cowell-powered. Therefore, Uop admits a left adjoint,
so U admits a right adjoint.
□
3.7
Exercises
(1) Finish the proof of Theorem 3.2.8 by proving that the strict involutive functor
F satisfying UF ◦ηC = F is unique. Hint: To check the uniqueness of F on
morphisms f ∈Ficat(C)

(m, X), (n, Y)

, ﬁrst observe that f factors as the
composite
.
(2) In the proof of Theorem 3.4.2, check that:
•
μ in Deﬁnition 3.4.1 is a well-deﬁned natural transformation.
•

UFicat, μ, η

is a monad in Cat.
•
(C, IC, ιC) is an involutive category.
•
(D, φ) satisﬁes the associativity axiom (1.3.4) on morphisms.
•
the constructions
(C, θ)


(C, IC, ι)
and
(D, ID, ιD)


(D, φD)
are inverse isomorphisms
Alg

UFicat, μ, η
 ∼= ICat0.
(3) Prove that there is a monad on Cat whose category of algebras is isomorphic
to ICatst, the category of small strict involutive categories and strict involutive
functors.
(4) Prove Theorem 3.5.10: ICat is locally presentable. Hint: It is possible for two
distinct involutive functors
(F, νF ) ̸= (G, νG) : C

D
to be equal as functors, as long as νF ̸= νG. To construct a strong generator
of ICat, consider the set S =

Ficat(1), Ficat(2)

in Deﬁnition 3.5.4. Then
use [AR94] Theorem 1.20, which states that a category is locally λ-presentable
if and only if it is cocomplete, and has a strong generator consisting of λ-
presentable objects.

Chapter 4
Involutive Monoidal Categories
In this chapter, we develop the involutive versions of (symmetric) monoidal
categories, (commutative) monoids, monads, and algebras over a monad. In an
involutive symmetric monoidal category, in addition to involutive commutative
monoids, there is also a notion of a reversing involutive monoid, which incorporates
the symmetry isomorphism in a way that is different from a commutative monoid.
Reversing involutive monoids are important because they include complex unital
∗-algebras and their differential graded analogues as examples.
4.1
Deﬁnitions and Examples
The purposes of this section are (i) to deﬁne an involutive monoidal category, (ii) to
prove a few of their basic properties, and (iii) to provide some examples.
Recall from Section 1.2 that a monoidal category is a category C equipped with
•
a monoidal product ⊗: C × C

C,
•
a monoidal unit 1 ∈C,
•
an associativity isomorphism α, and
•
left/right unit isomorphisms λ and ρ,
that satisﬁes the unity axioms and the pentagon axiom. Recall from Deﬁnition 1.2.9
that a monoidal functor (F, F2, F0) : C

D between two monoidal categories
is a functor F : C

D equipped with a morphism F0 : 1D

F1C and a
natural transformation
FX ⊗FY
F2
 F(X ⊗Y)
© The Author(s), under exclusive license to Springer Nature Switzerland AG 2020
D. Yau, Involutive Category Theory, Lecture Notes in Mathematics 2279,
https://doi.org/10.1007/978-3-030-61203-0_4
71

72
4
Involutive Monoidal Categories
for objects X, Y ∈C, that commute with α, λ, and ρ in the sense of (1.2.12)–
(1.2.14). Also recall from Deﬁnition 2.1.1 the concept of an involutive category.
DEFINITION 4.1.1. An involutive monoidal category is a tuple

(C, ⊗, 1, α, λ, ρ), I, ι

in which:
•
(C, ⊗, 1, α, λ, ρ) is a monoidal category.
•
(C, I, ι) is an involutive category.
•
The involution functor I : C

C is equipped with the structure of a
monoidal functor.
•
The unit ι : IdC

∼=
I 2 is a monoidal natural transformation.
If there is no danger of confusion, we will abbreviate such an involutive monoidal
category to C. We also deﬁne the following.
(1) An involutive symmetric monoidal category is an involutive monoidal category
whose underlying monoidal category is equipped with a symmetric monoidal
structure such that I is a symmetric monoidal functor.
(2) An involutive strict (symmetric) monoidal category is an involutive (symmetric)
monoidal category whose underlying monoidal category is strict.
(3) A strict involutive (strict) monoidal category is an involutive (strict) monoidal
category whose underlying involutive category is strict.
(4) A strict involutive (strict) symmetric monoidal category is an involutive (strict)
symmetric monoidal category whose underlying involutive category is strict.
EXPLANATION 4.1.2. Let us explain Deﬁnition 4.1.1 in more details. Suppose
C is a category that is both a monoidal category and an involutive category.
(1) That the involution functor I : C

C is a monoidal functor means that it
is part of a triple (I, I2, I0) with
•
a natural transformation
I(X) ⊗I(Y)
(I2)X,Y  I(X ⊗Y)
∈C
for objects X, Y ∈C, and
•
a morphism I0 : 1

I1
that satisﬁes the associativity axiom

4.1
Deﬁnitions and Examples
73
(4.1.3)
and the left and the right unity axioms
2
(4.1.4)
in Deﬁnition 1.2.9 for objects X, Y, Z ∈C.
(2) That the unit ι : IdC

∼=
I 2 is a monoidal natural transformation means the
diagrams (1.2.18) and (1.2.19) are commutative. In the case of ι, these diagrams
are
(4.1.5)
and
(4.1.6)
for objects X, Y ∈C.
If C is furthermore a symmetric monoidal category with symmetry isomorphism ξ,
then the axiom (1.2.29) for (I, I2, I0) to be a symmetric monoidal functor is the
commutative diagram
(4.1.7)
for objects X, Y ∈C.
⋄

74
4
Involutive Monoidal Categories
The next observation says that in an involutive monoidal category, the domain
and the codomain of the associativity isomorphism α, the domain of the left unit
isomorphism λ, and the domain of the right unit isomorphism ρ are all involutive
functors.
PROPOSITION 4.1.8. Suppose C is an involutive monoidal category as in Deﬁ-
nition 4.1.1. Then the following statements hold:
(1) The functor
(Id ⊗Id) ⊗Id : C × C × C

C
is an involutive functor with distributive law the composite
(2) The functor
Id ⊗(Id ⊗Id) : C × C × C

C
is an involutive functor with distributive law the composite
(3) The functor
1 ⊗Id : C

C
is an involutive functor with distributive law the composite
1 ⊗I(X)
I0⊗I(X)  I(1) ⊗I(X)
(I2)1,X  I(1 ⊗X).
(4) The functor
Id ⊗1 : C

C
is an involutive functor with distributive law the composite

4.1
Deﬁnitions and Examples
75
I(X) ⊗1
I(X)⊗I0  I(X) ⊗I(1)
(I2)X,1  I(X ⊗1).
In the above statements, X, Y, Z ∈C are objects.
PROOF. We will prove (1). The proofs for the other assertions are similar.
To prove that the functor in (1) is an involutive functor, we need to check the
axiom (2.2.2), which is the outer-most diagram below.
The left triangle is the monoidal product of the commutative diagram (4.1.5) with
ιZ, so it is commutative. The top right trapezoid is commutative by (4.1.5). The
bottom right trapezoid is commutative by the naturality of I2.
□
In Deﬁnition 4.1.1, an involutive monoidal category is deﬁned as a category
that is both involutive and monoidal in which the involutive structure (I, ι) is
monoidal. The next observation states that this last condition can be replaced by
the requirement that the monoidal structure be involutive. The involutive functor
structures in Proposition 4.1.8 will be used below.
PROPOSITION 4.1.9. An involutive (symmetric) monoidal category is exactly a
(symmetric) monoidal category (C, ⊗, 1, α, λ, ρ) (with symmetry isomorphism ξ)
that is equipped with an involutive category structure (I, ι) such that the following
statements hold:
•
The monoidal unit 1 is equipped with the structure of an involutive object (1, I0).
•
The monoidal product ⊗: C × C

C is equipped with the structure of an
involutive functor (⊗, I2).
•
The monoidal category structure natural isomorphisms α, λ, ρ, and ξ in the case
that C is symmetric, are involutive natural isomorphisms.
In this case, (I, I2, I0) is the monoidal functor structure on I in Deﬁnition 4.1.1.
PROOF. For an involutive monoidal category C as in Deﬁnition 4.1.1:
•
The diagram (4.1.6) is equal to the diagram (2.5.2) that says that (1, I0) is an
involutive object.
•
The diagram (4.1.5) is equal to the diagram (2.2.2) for (⊗, I2), which says that
(⊗, I2) is an involutive functor.

76
4
Involutive Monoidal Categories
•
The associativity diagram (4.1.3) for I2 is equal to the diagram (2.3.2) for
(Id ⊗Id) ⊗Id
α
 Id ⊗(Id ⊗Id) ,
which says that α is an involutive natural transformation.
•
The left unity diagram in (4.1.4) for (I2, I0) is equal to the diagram (2.3.2) for
1 ⊗Id
λ
 Id ,
which says that λ is an involutive natural transformation.
•
Similarly, the right unity diagram in (4.1.4) for (I2, I0) is equal to the dia-
gram (2.3.2) for ρ, which says that ρ is an involutive natural transformation.
Suppose C is furthermore an involutive symmetric monoidal category with sym-
metry isomorphism ξ. Then the diagram (4.1.7) for (I, I2, I0) is equal to the
diagram (2.3.2) for ξ, which says that ξ is an involutive natural transformation.
The converse uses the same identiﬁcations.
□
Therefore, an involutive (symmetric) monoidal category is a category that is
both involutive and (symmetric) monoidal whose involutive structure is (symmetric)
monoidal, or equivalently whose (symmetric) monoidal structure is involutive.
Recall that a monoidal functor (F, F2, F0) is called strong if the structure
morphisms F2 and F0 are isomorphisms. In an involutive monoidal category, the
involution functor is assumed to be a monoidal functor. In fact, it must be a strong
monoidal functor.
COROLLARY 4.1.10. In an involutive monoidal category, the involution functor
is a strong monoidal functor.
PROOF. For an involutive monoidal category with involution functor I, whose
monoidal functor structure is (I2, I0), we must show that I0 and I2 are iso-
morphisms. By Proposition 4.1.9 (1, I0) is an involutive object, so by Propo-
sition 2.5.4(1) the involutive structure map I0 is an isomorphism. Similarly, by
Proposition 4.1.9 (⊗, I2) is an involutive functor, so by Proposition 2.2.5 the
distributive law I2 is a natural isomorphism.
□
EXAMPLE 4.1.11 (Trivial Involution). Suppose C is a (symmetric) monoidal
category. When equipped with the trivial involutive structure

IdC, IdIdC

in
Example 2.1.8 and the identity monoidal functor structure on IdC, C becomes
an involutive (symmetric) monoidal category.
⋄
EXAMPLE 4.1.12 (Conjugate Vector Spaces). As discussed in Example 2.1.10,
the symmetric monoidal category (Vect(C), ⊗, C) of complex vector spaces has an
involutive structure I = (−) that sends each complex vector space V to its conjugate
V . Then Vect(C) becomes an involutive symmetric monoidal category, in which the

4.2
Rigidity of Involutive Monoidal Categories
77
structure morphism I0 : C

C sends each z ∈C to its complex conjugate.
The structure morphism
I2 : V ⊗W

V ⊗W
is the identity function of the underlying additive groups. Similarly:
•
The symmetric monoidal category (Chain(C), ⊗, C) of chain complexes of
C-vector spaces, when equipped with the conjugate involution structure, is an
involutive symmetric monoidal category.
•
The symmetric monoidal category (Hilb, ⊗, C) of complex Hilbert spaces and
bounded linear maps, with the completed tensor product ⊗, when equipped with
the conjugate involution structure, is an involutive symmetric monoidal category.
⋄
EXAMPLE 4.1.13 (Opposite Categories). As we discussed in Example 2.1.11,
the symmetric monoidal category (Cat, ×, 1) of small categories has an involutive
structure I = (−)op given by taking the opposite category. Then Cat becomes an
involutive symmetric monoidal category, in which the structure morphism I0 is the
identity functor on 1. The structure morphism
I2 : Cop × Dop

(C × D)op
is the identity function on objects, and sends (f op, gop) to (f, g)op on morphisms.
Furthermore, restricted to the subcategory Poset of partially ordered sets, this gives
Poset the structure of an involutive symmetric monoidal category.
⋄
4.2
Rigidity of Involutive Monoidal Categories
The purpose of this section is to show that an involutive monoidal category is
actually determined by less data than stated in Deﬁnition 4.1.1. We begin with the
following rigidity result.
LEMMA 4.2.1. Suppose (C, ⊗, 1, α, λ, ρ) is a monoidal category that is
equipped with
•
a functor I : C

C,
•
an isomorphism ι1 : 1

∼=
I 21,
•
an isomorphism I2 : I 21 ⊗I1

∼=
I(I1 ⊗1), and
•
a morphism I0 : 1

I1 such that the diagram

78
4
Involutive Monoidal Categories
(4.2.2)
is commutative.
Then I0 is equal to the composite
(4.2.3)
which is an isomorphism.
PROOF. If I0 is the composite in (4.2.3), then it must be an isomorphism because
every one of the ﬁve constituent morphisms is an isomorphism. It remains to prove
the commutativity of the diagram (4.2.3), which is the outer-most diagram below.
In the above diagram, the top right trapezoid, the left trapezoid, and the lower
right trapezoid are commutative by the naturality of λ, the naturality of ρ, and the
functoriality of ⊗, respectively. The bottom triangle is commutative by (4.2.2).
□
PROPOSITION 4.2.4. In an involutive monoidal category C as in Deﬁni-
tion 4.1.1, the morphism I0 : 1

I1 is equal to the composite in (4.2.3).
PROOF. In an involutive monoidal category C, the involution functor I is part
of a strong monoidal functor (I, I2, I0) by Corollary 4.1.10, so I2 is a natural
isomorphism. The diagram (4.2.2) is the right unity diagram (4.1.4) for X = I1,
which is commutative in C. So we can apply Lemma 4.2.1 to ﬁnish the proof.
□
Recall the explicit description of an involutive monoidal category in Explana-
tion 4.1.2. We now observe that most of the unity axioms (4.1.4) are consequences
of the other structures.
THEOREM 4.2.5. Suppose (C, ⊗, 1, α, λ, ρ) is a (symmetric) monoidal cate-
gory that is equipped with:

4.2
Rigidity of Involutive Monoidal Categories
79
•
an involutive structure (I, ι);
•
a natural isomorphism
I(X) ⊗I(Y)
I2
∼=
 I(X ⊗Y)
for
X, Y ∈C
such that (4.1.3) and (4.1.5) (and also (4.1.7) if C is symmetric) are commutative;
•
a morphism I0 : 1

I1 such that (4.1.6) and (4.2.2) are commutative.
Then this data deﬁnes an involutive (symmetric) monoidal category C.
PROOF. By Explanation 4.1.2 we must prove the unity axioms in (4.1.4). By
Lemma 4.2.1 the morphism I0 is equal to the composite in (4.2.3), for which the left
unity axiom in (4.1.4) is the outer-most diagram below.
In the above diagram:
•
The sub-diagram (a) is commutative by the associativity axiom (4.1.3).
•
The triangle (b) is commutative by the unity axiom (1.2.4) of a monoidal
category.
•
The triangle (c) is commutative by the ﬁrst unity diagram in (1.2.6).
•
All the other sub-diagrams are commutative by the naturality of λ, α, and I2, and
the functoriality of ⊗.
The proof for the right unity axiom is similar.
□

80
4
Involutive Monoidal Categories
4.3
Involutive Monoidal Functors
Recall from Deﬁnition 1.2.9 that a monoidal functor (F, F2, F0) is called strong
(resp., strict) if F2 and F0 are isomorphisms (resp., identity morphisms). Also
recall from Deﬁnition 3.1.1 that an involutive functor (F, ν) is called strict if the
distributive law ν is the identity natural transformation.
DEFINITION 4.3.1. Suppose C and D are involutive (symmetric) monoidal
categories. An involutive (symmetric) monoidal functor F : C

D is a functor
that is equipped with both
•
an involutive functor structure (F, ν) and
•
a (symmetric) monoidal functor structure (F, F2, F0)
such that the distributive law ν : FIC

IDF is a monoidal natural transfor-
mation. Moreover:
(1) An involutive strong/strict monoidal functor is an involutive monoidal functor
whose underlying monoidal functor is strong/strict.
(2) A strict involutive monoidal functor is an involutive monoidal functor whose
underlying involutive functor is strict.
(3) A strict involutive strong/strict monoidal functor is an involutive monoidal func-
tor whose underlying monoidal functor is strong/strict, and whose underlying
involutive functor is strict.
The symmetric versions are deﬁned similarly by replacing monoidal with symmetric
monoidal.
LEMMA 4.3.2. In Deﬁnition 4.3.1, ν is a monoidal natural transformation if and
only if the diagrams
(4.3.3)
for objects X, Y ∈C and
(4.3.4)
are commutative.
PROOF. Since C and D are involutive (symmetric) monoidal categories, their
involution functors IC and ID are (symmetric) monoidal functors. Therefore, so
are the composite functors FIC and IDF. The diagrams (4.3.4) and (4.3.3) are the

4.3
Involutive Monoidal Functors
81
diagrams in Deﬁnition 1.2.17 for ν : FIC

IDF to be a monoidal natural
transformation.
□
Recall from Proposition 2.2.6 that the composite of two involutive functors is
an involutive functor. The following observation ensures that involutive monoidal
functors can be composed.
LEMMA 4.3.5. Suppose
C
F
 D
G
 E
are two involutive monoidal functors between involutive monoidal categories.
Then the composite GF
: C

E is an involutive monoidal functor. The
corresponding statements for all other variants in Deﬁnition 4.3.1 are also true.
PROOF. The composite GF is a monoidal functor and an involutive functor
by Proposition 2.2.6. So we need to check the commutativity of the two dia-
grams (4.3.3) and (4.3.4) for GF. The diagram (4.3.3) for GF is the outer-most
diagram below.
The upper left rectangle and the lower right rectangle are commutative by the
naturality of G2 and the naturality of νG, respectively. The lower left rectangle and
the upper right rectangle are commutative by (4.3.3) for G and F, respectively.
Similarly, the diagram (4.3.4) for GF factors into three sub-diagrams, which are
commutative by (4.3.4) for G and F, and by the naturality of νG. This shows that
GF is an involutive monoidal functor.
The corresponding statements for all other variants in Deﬁnition 4.3.1 are true
because strong/strict monoidal functors (resp., strict involutive functors) are closed
under composition, and similarly for their symmetric versions.
□
DEFINITION 4.3.6. Deﬁne the following categories.
(1) IMCat is the category whose objects are small involutive monoidal categories
and whose morphisms are involutive monoidal functors.

82
4
Involutive Monoidal Categories
(2) IMCat0 is the category whose objects are small involutive monoidal categories
and whose morphisms are strict involutive strict monoidal functors.
(3) ISymCat and ISymCat0 are the symmetric versions obtained from IMCat and
IMCat0, respectively, by replacing monoidal with symmetric monoidal.
In the deﬁnition of an involutive monoidal functor, instead of asking that the
distributive law be a monoidal natural transformation, we could also require that the
monoidal functor structure (F, F2, F0) be involutive.
PROPOSITION 4.3.7. Suppose (F, ν) : C

D is an involutive functor with
C and D involutive monoidal categories. Then the following statements hold.
(1) The functor
C × C
⊗◦(F,F)  D
is an involutive functor whose distributive law is the composite
FIC(X) ⊗FIC(Y)
νX⊗νY  IDF(X) ⊗IDF(Y)
I2
 ID(FX ⊗FY)
for X, Y ∈C.
(2) The functor
C × C
F◦⊗
 D
is an involutive functor whose distributive law is the composite
F(ICX ⊗ICY)
F(I2)  FIC(X ⊗Y)
ν
 IDF(X ⊗Y)
for X, Y ∈C.
(3) Suppose F is also equipped with a monoidal functor structure (F, F2, F0). Then
F is an involutive monoidal functor if and only if:
•
F2 : ⊗◦(F, F)

F ◦⊗is an involutive natural transformation, and
•
F0 : (1D, I0)


F1C, ν1 ◦F(I0)

is a morphism of involutive objects.
PROOF. We will omit the superscripts and subscripts C and D to simplify the
notations. For the ﬁrst assertion, the involutive functor axiom (2.2.2) for ⊗◦(F, F)
is the outer-most diagram below.

4.4
Involutive Monoidal Category of Involutive Objects
83
The left triangle is commutative by the axiom (2.2.2) for (F, ν). The top right trape-
zoid is commutative because the unit ι is a monoidal natural transformation (4.1.5).
The bottom right trapezoid is commutative by the naturality of I2. The second
assertion is proved similarly.
For the last assertion, we observe that the diagram (4.3.3) is equal to the
diagram (2.3.2) for F2, which says that it is an involutive natural transformation.
Similarly, the diagram (4.3.4) is equal to the diagram (2.5.3) for F0, which says that
it is a morphism of involutive objects. Note that since (1, I0) is an involutive object
in C,

F1, ν1 ◦F(I0)

is an involutive object in D as in (2.6.4).
□
In summary, an involutive monoidal functor is a functor that is both involutive
and monoidal such that (i) the involutive structure is monoidal, or equivalently that
(ii) the monoidal structure is involutive.
4.4
Involutive Monoidal Category of Involutive Objects
We now observe that if C is an involutive (symmetric) monoidal category, then so
is its category Inv(C) of involutive objects. Recall from Deﬁnition 1.2.33 that a
symmetric monoidal category is closed if each functor −⊗X, with X an object,
admits a right adjoint.
THEOREM 4.4.1. Suppose C is an involutive (symmetric) monoidal category.
Then:
(1) Inv(C) inherits from C the structure of an involutive (symmetric) monoidal
category.
(2) The forgetful functor U
:
Inv(C)

C is an involutive (symmetric)
monoidal functor.
(3) Each involutive (symmetric) monoidal functor F
: C

D lifts to an
involutive (symmetric) monoidal functor
Inv(F) : Inv(C)

Inv(D).
(4) If C is closed, then Inv(C) inherits a closed structure from C.

84
4
Involutive Monoidal Categories
PROOF. For the ﬁrst assertion, in Proposition 2.6.2(1) we saw that the involutive
structure on C lifts to one on Inv(C). Using the notations in Deﬁnition 4.1.1 and
Explanation 4.1.2, the monoidal unit in Inv(C) is deﬁned as the involutive object
(1, I0) in C. The monoidal unit (1, I0) ∈Inv(C) is an involutive object in Inv(C)
via the morphism
I0 : (1, I0)


I1, I(I0)

.
By Proposition 4.1.9
(⊗, I2) : C × C

C
is an involutive functor. By the last statement in Proposition 2.5.4 and Proposi-
tion 2.6.3, this lifts to an involutive functor
(⊗, I2) : Inv(C) × Inv(C)

Inv(C)
given by
on objects. It is the same as ⊗: C × C

C on morphisms.
Moreover, by Proposition 4.1.9 the monoidal structure natural isomorphisms in
C–i.e., α, λ, ρ, and ξ when C is symmetric–are involutive natural isomorphisms.
By Proposition 2.6.5(1), each of them lifts to an involutive natural isomorphism at
the level of involutive objects. The axioms for a (symmetric) monoidal category
are satisﬁed in Inv(C) because they are satisﬁed in C. Therefore, Proposition 4.1.9
applies once again to show that Inv(C) is an involutive (symmetric) monoidal
category.
For assertion (2), we observed in Proposition 2.6.2(2) that the forgetful functor
U is an involutive functor with identity distributive law. By deﬁnition U is a strict
monoidal functor, for which the two diagrams in Lemma 4.3.2 are commutative. So
U is an involutive (symmetric) monoidal functor.
Assertion (3) follows similarly from Proposition 2.6.3, Proposition 2.6.5(1), and
Proposition 4.3.7(3).
For assertion (4), we are assuming that C is an involutive symmetric monoidal
category that is also closed. By assertion (1), Inv(C) inherits from C the structure
of an involutive symmetric monoidal category. We must show that for each object
(X, jX) ∈Inv(C), the functor
−⊗(X, jX) : Inv(C)

Inv(C)

4.4
Involutive Monoidal Category of Involutive Objects
85
admits a right adjoint. Since C is closed, the functor −⊗X : C

C admits a
right adjoint [X, −] : C

C. By Proposition 2.6.5(2), it sufﬁces to show that
−⊗X ⊣[X, −]
is an involutive adjunction on C. Moreover, by Theorem 2.3.8 it sufﬁces to show
that −⊗X is an involutive functor.
The distributive law of −⊗X is deﬁned as the composite
for each object Y ∈C. The involutive functor axiom (2.2.2) is the outer-most
diagram below.
The top rectangle is commutative because ι is a monoidal natural transforma-
tion (4.1.5). The lower-left triangle is commutative because (X, jX) is an involutive
object (2.5.2). The lower-right trapezoid is commutative by the naturality of I2. So
(−⊗X, ν−⊗X) is an involutive functor.
□
Theorem 4.4.1 applies in the following examples.
EXAMPLE 4.4.2 (Trivial Involution). Suppose C is a (symmetric) monoidal
category, regarded as an involutive (symmetric) monoidal category with the trivial
involutive structure

IdC, IdIdC

in Example 2.1.8 and the identity monoidal functor
structure on IdC. Then Inv(C) is the involutive (symmetric) monoidal category in
which an object (X, j) consists of
•
an object X ∈C and
•
a morphism j : X

X
such that j ◦j = IdX.
⋄
EXAMPLE 4.4.3 (Conjugate Vector Spaces). Suppose the symmetric monoidal
category (Vect(C), ⊗, C) of complex vector spaces is equipped with the involutive
symmetric monoidal category structure in Example 4.1.12, with involution functor
I = (−) given by conjugate vector spaces. Then Inv(Vect(C)) is the involutive
symmetric monoidal category in which an object (X, j) consists of

86
4
Involutive Monoidal Categories
•
a C-vector space X and
•
a C-linear map j : X

X
such that j ◦j = IdX. A similar discussion applies to the involutive symmetric
monoidal categories (Chain(C), ⊗, C) and (Hilb, ⊗, C). Moreover, both Vect(C)
and Chain(C) are closed, so Inv(Vect(C)) and Inv(Chain(C)) are also closed.
⋄
EXAMPLE 4.4.4 (Opposite Categories). Suppose the symmetric monoidal cat-
egory (Cat, ×, 1) is equipped with the involutive symmetric monoidal category
structure in Example 4.1.13, with involution functor I = (−)op given by opposite
categories. Then Inv(Cat) is the involutive symmetric monoidal category in which
an object (C, j) consists of
•
a small category C and
•
a functor j : C

Cop
such that jop ◦j = IdC. The same discussion applies to the subcategory Poset
of partially ordered sets, which gives Inv(Poset) the structure of an involutive
symmetric monoidal category. Moreover, since Cat and Poset are closed, so are
Inv(Cat) and Inv(Poset).
⋄
4.5
Involutive Monoids
The purpose of this section is to deﬁne involutive monoids in an involutive
monoidal category. An important class of involutive monoids will be considered
in Deﬁnition 8.3.5, where we deﬁne involutive operads as involutive monoids in an
involutive monoidal category of symmetric sequences.
To deﬁne involutive monoids, we ﬁrst observe that the category Mon(C) of
monoids in C inherits an involutive structure from C. We use the notations in
Deﬁnition 4.1.1 and Explanation 4.1.2 below.
THEOREM 4.5.1. Suppose

(C, ⊗, 1, α, λ, ρ), (I, I2, I0), ι

is an involutive monoidal category. Then the category Mon(C) inherits an involutive
structure

Imon, ιmon
given by
Imon(X, μ, 1) =

IX, Iμ ◦I2, I1 ◦I0

,
ιmon
(X,μ,1) = ιX
for (X, μ, 1) ∈Mon(C).

4.5
Involutive Monoids
87
PROOF. First we check that Imon(X, μ, 1) is a monoid in C. The associativity of
its multiplication Iμ ◦I2 is the outer-most diagram below.
(4.5.2)
Starting at the top left and going counter-clockwise, the four sub-diagrams above
are commutative by (1.2.12), the naturality of I2, the associativity of μ, and the
naturality of I2, respectively. The unity of I(1) ◦I0 is checked similarly. For a
morphism f ∈Mon(C), we deﬁne
Imon(f ) = I(f ).
This deﬁnes a functor
Imon : Mon(C)

Mon(C).
That
ιmon
(X,μ,1) : (X, μ, 1)

I 2
mon(X, μ, 1)
is compatible with the multiplications is the outer-most diagram below.
The lower left triangle is commutative by the naturality of ι. The upper right
triangle is commutative by (4.1.5). That ιmon
(X,μ,1) is compatible with the units is
checked similarly. The naturality of ιmon follows from the naturality of ι. Finally,
(Imon, ιmon) satisﬁes the triangle identity (2.1.2) because (I, ι) does.
□
REMARK 4.5.3. The existence of the induced functor Imon in Theorem 4.5.1
also follows from the general fact that each monoidal functor induces a functor
between the respective categories of monoids.
⋄

88
4
Involutive Monoidal Categories
DEFINITION 4.5.4. Suppose C is an involutive monoidal category. Deﬁne the
category
IMon(C) = Inv

Mon(C), Imon, ιmon
,
which is the category of involutive objects in the category Mon(C) with the
involutive structure (Imon, ιmon) in Theorem 4.5.1. Its objects are called involutive
monoids in C.
Let us ﬁrst unwrap Deﬁnition 4.5.4.
PROPOSITION 4.5.5. An involutive monoid in C is exactly a tuple (X, μ, 1, j)
with
•
(X, μ, 1) a monoid in C, and
•
(X, j : X

IX) an involutive object in C
such that the diagrams
(4.5.6)
and
(4.5.7)
are commutative. Moreover, a morphism of involutive monoids

X, μX, 1X, jX
f
 
Y, μY , 1Y , jY 
is exactly a morphism f : X

Y ∈C that is both a morphism of monoids and
a morphism of involutive objects.
PROOF. With respect to the involutive structure (Imon, ιmon), an involutive
object in Mon(C) consists of
•
an object (X, μ, 1) ∈Mon(C), and
•
a morphism
j : (X, μ, 1)

Imon(X, μ, 1)

4.5
Involutive Monoids
89
in Mon(C) such that
Imon(j) ◦j = ιmon
(X,μ,1).
This equality means
Ij ◦j = ιX,
so (X, j) is an involutive object in C. The diagrams (4.5.6) and (4.5.7) mean exactly
that the morphism j preserves the units and the multiplications, i.e., j ∈Mon(C).
The assertion about morphisms follows from the deﬁnition of the category IMon(C).
□
An involutive monoid is deﬁned as an involutive object in the category of
monoids in C. There is another description of an involutive monoid in which the
roles of the involutive structure and the monoid structure are switched.
PROPOSITION 4.5.8. For each involutive monoidal category C, there is an
isomorphism
IMon(C) ∼= Mon

Inv(C)

between
•
the category of involutive monoids in C and
•
the category of monoids in Inv(C).
PROOF. By Theorem 4.4.1(1), the category Inv(C) of involutive objects inherits
an involutive monoidal category structure from C. So the category Mon

Inv(C)

of
monoids in Inv(C) is deﬁned. A monoid in Inv(C) consists of
•
an object (X, j) ∈Inv(C),
•
a multiplication
(X, j) ⊗(X, j)
μ
 (X, j)
∈Inv(C),
and
•
a unit
(1, I0)
1
 (X, j)
∈Inv(C)
such that

(X, j), μ, 1

is associative and unital. The associativity and unity of
(X, j) mean exactly that (X, μ, 1) is a monoid in C. That 1 and μ are morphisms
of involutive objects in C means exactly the diagrams (4.5.6) and (4.5.7). The
identiﬁcation of the morphisms in the two categories is similar.
□

90
4
Involutive Monoidal Categories
In summary, for an involutive monoidal category C, there is a commutative
diagram
(4.5.9)
of forgetful functors. However, even if C is small, this square is not a pullback square
in Cat in general. The reason is that by Proposition 4.5.5, an involutive monoid is
more than just an object equipped with both a monoid structure and an involutive
structure. To be an involutive monoid, the diagrams (4.5.6) and (4.5.7) must also be
commutative.
PROPOSITION 4.5.10. Suppose (F, ν) : C

D is an involutive monoidal
functor between involutive monoidal categories. Then the induced functor in
Proposition 1.2.16 lifts further to an involutive functor
IMon(C)
F∗
 IMon(D) .
PROOF. Using Proposition 2.6.3, it sufﬁces to show that the induced functor
F : Mon(C)

Mon(D)
in Proposition 1.2.16 is an involutive functor, where Mon(C) and Mon(D) have
the inherited involutive structures in Theorem 4.5.1. The distributive law on the
induced functor F is componentwise the one for the original involutive functor F :
C

D. For a monoid (X, μ, 1) in C, we ﬁrst check that
FIX
νX
 IFX
is a morphism of monoids in D.
The compatibility of νX with the multiplications is the outer-most diagram below.

4.6
Involutive Commutative Monoids
91
The top rectangle is the commutative diagram (4.3.3). The bottom left square is
commutative by deﬁnition. The bottom right square is commutative by the naturality
of ν. The compatibility of νX with the units are proved similarly. The involutive
functor axiom (2.2.2) for the induced functor F follows from that for the original
involutive functor F.
□
EXAMPLE 4.5.11 (Trivial Involution). Suppose C is a monoidal category,
regarded as an involutive monoidal category with the trivial involutive structure

IdC, IdIdC

. An involutive monoid in C is a tuple (X, μ, 1, j) such that:
•
(X, μ, 1) is a monoid in C.
•
j : X

X is a morphism in C such that j ◦j = IdX.
•
j is compatible with 1 and μ in the sense that the diagrams (4.5.6) and (4.5.7)
are commutative.
⋄
EXAMPLE 4.5.12 (Almost Star-Algebras). Consider the involutive symmetric
monoidal category (Vect(C), ⊗, C) of complex vector spaces with involution
functor I = (−) given by conjugate vector spaces. An involutive monoid in Vect(C)
is a unital C-algebra (X, μ, 1) equipped with a C-linear map j : X

X such
that
•
j ◦j = IdX and
•
the diagrams (4.5.6) and (4.5.7) are commutative.
In terms of elements a, b ∈X, the commutative diagram (4.5.7) means the equality
j(ab) = j(a) · j(b).
This is different from the usual concept of a complex unital ∗-algebra, which
reverses the order of the multiplication in the sense that
(ab)∗= b∗· a∗.
In Example 4.7.6 we will obtain ∗-algebras as examples of a different kind
of involutive monoids. A similar discussion applies to the involutive symmetric
monoidal categories (Chain(C), ⊗, C) and (Hilb, ⊗, C).
⋄
4.6
Involutive Commutative Monoids
The purpose of this section is to deﬁne the commutative version of involutive
monoids. For a symmetric monoidal category C, its category of commutative
monoids is denoted by CMon(C). Theorem 4.5.1 has the following commutative
variation.

92
4
Involutive Monoidal Categories
PROPOSITION 4.6.1. Suppose

(C, ⊗, 1, α, λ, ρ, ξ), (I, I2, I0), ι

is an involutive symmetric monoidal category. Then the category CMon(C) inherits
an involutive structure from C deﬁned as in Theorem 4.5.1.
PROOF. Reusing most of the proof of Theorem 4.5.1, we just need to check that,
for a commutative monoid (X, μ, 1) in C, the multiplication in Imon(X, μ, 1) is
commutative. This follows from the naturality of the symmetry isomorphism ξ and
the commutativity of the multiplication μ.
□
DEFINITION 4.6.2. Suppose C is an involutive symmetric monoidal category.
Deﬁne the category
ICMon(C) = Inv

CMon(C), Imon, ιmon
,
which is the category of involutive objects in the category CMon(C) with the invo-
lutive structure (Imon, ιmon) in Proposition 4.6.1. Its objects are called involutive
commutative monoids in C.
Unraveling Deﬁnition 4.6.2 we obtain the following explicit description of an
involutive commutative monoid. Its proof is almost identical to that of Proposi-
tion 4.5.5.
PROPOSITION 4.6.3. An involutive commutative monoid in an involutive sym-
metric monoidal category C is exactly a tuple (X, μ, 1, j) with
•
(X, μ, 1) a commutative monoid in C, and
•
(X, j : X

IX) an involutive object in C
such that the diagrams (4.5.6) and (4.5.7) are commutative. Moreover, a morphism
of involutive commutative monoids

X, μX, 1X, jX
f
 
Y, μY , 1Y , jY 
is exactly a morphism f : X

Y ∈C that is both a morphism of monoids and
a morphism of involutive objects.
By Theorem 4.4.1(1), the category Inv(C) of involutive objects inherits an
involutive symmetric monoidal structure from C. So the category CMon

Inv(C)

of commutative monoids in Inv(C) is deﬁned. Next is the commutative version of
Proposition 4.5.8, whose proof can be reused here essentially without change.
PROPOSITION 4.6.4. For each involutive symmetric monoidal category C, there
is an isomorphism
ICMon(C) ∼= CMon

Inv(C)


4.7
Reversing Involutive Monoids
93
between
•
the category of involutive commutative monoids in C and
•
the category of commutative monoids in Inv(C).
In summary, for an involutive symmetric monoidal category C, there is a
commutative diagram
of forgetful functors. As in (4.5.9) this square is in general not a pullback square
because by Proposition 4.6.3, an involutive commutative monoid is more than just
an object equipped with a commutative monoid structure and an involutive structure.
Next is the symmetric version of Proposition 4.5.10.
PROPOSITION 4.6.5. Suppose (F, ν) : C

D is an involutive symmetric
monoidal functor between involutive symmetric monoidal categories. Then the
induced functor in Proposition 1.2.30 lifts further to an involutive functor
ICMon(C)
F∗
 ICMon(D) .
PROOF. We reuse the proof of Proposition 4.5.10, replacing Proposition 1.2.16
and Theorem 4.5.1 by their symmetric versions, namely Propositions 1.2.30
and 4.6.1.
□
EXAMPLE 4.6.6 (Commutative Star-Algebras). Continuing Example 4.5.12, an
involutive commutative monoid in Vect(C) is a complex unital commutative ∗-
algebra, which satisﬁes
(ab)∗= a∗· b∗.
A similar discussion applies to Chain(C) and Hilb.
⋄
4.7
Reversing Involutive Monoids
For an involutive monoidal category C, we observed in Theorem 4.5.1 that the
category Mon(C) of monoids in C inherits an involutive structure from C. Involutive
monoids are deﬁned as involutive objects in Mon(C). Equivalently, involutive
monoids are monoids in the category Inv(C) of involutive objects in C by Propo-

94
4
Involutive Monoidal Categories
sition 4.5.8. In this section, we observe that for an involutive symmetric monoidal
category C, there is another involutive structure on Mon(C) that incorporates the
symmetry isomorphism, leading to the concept of a reversing involutive monoid.
These objects are important because they include complex unital ∗-algebras and
their differential graded analogues as examples. In Theorem 8.5.4 we will show
that reversing involutive monoids are the involutive algebras over the involutive
associative operad.
PROPOSITION 4.7.1. Suppose

(C, ⊗, 1, α, λ, ρ, ξ), (I, I2, I0), ι

is an involutive symmetric monoidal category. Then the category Mon(C) inherits
an involutive structure

Irmon, ιrmon
given by
Irmon(X, μ, 1) =

IX, Iμ ◦I2 ◦ξ, I1 ◦I0

,
ιrmon
(X,μ,1) = ιX
for (X, μ, 1) ∈Mon(C).
PROOF. First we check that Irmon(X, μ, 1) is a monoid in C. The associativity
of its multiplication Iμ ◦I2 ◦ξ is the outer-most diagram below.
In this diagram:
•
The sub-diagram (a) is the outer-most diagram in (4.5.2), which was proved to
be commutative.
•
The sub-diagram (b) is commutative by Lemma 1.2.26.
•
The other four sub-diagrams are commutative by the naturality of the symmetry
isomorphism ξ.

4.7
Reversing Involutive Monoids
95
Therefore, the multiplication in Irmon(X, μ, 1) is associative. The rest of the proof
is almost identical to the proof of Theorem 4.5.1 after the diagram (4.5.2).
□
DEFINITION 4.7.2. Suppose C is an involutive symmetric monoidal category.
Deﬁne the category
RIMon(C) = Inv

Mon(C), Irmon, ιrmon
,
which is the category of involutive objects in the category Mon(C) with the invo-
lutive structure (Irmon, ιrmon) in Proposition 4.7.1. Its objects are called reversing
involutive monoids in C.
Let us unwrap Deﬁnition 4.7.2.
PROPOSITION 4.7.3. A reversing involutive monoid in an involutive symmetric
monoidal category C is exactly a tuple (X, μ, 1, j) with
•
(X, μ, 1) a monoid in C, and
•
(X, j : X

IX) an involutive object in C
such that the diagrams (4.5.6) and
(4.7.4)
are commutative. Moreover, a morphism of reversing involutive monoids

X, μX, 1X, jX
f
 
Y, μY , 1Y , jY 
is exactly a morphism f : X

Y ∈C that is both a morphism of monoids and
a morphism of involutive objects.
PROOF. We reuse the proof of Proposition 4.5.5, except that here the
diagram (4.7.4) states that j preserves the multiplications in (X, μ, 1) and
Irmon(X, μ, 1).
□
Next is the reversing analogue of Proposition 4.5.10.

96
4
Involutive Monoidal Categories
PROPOSITION 4.7.5. Suppose (F, ν) : C

D is an involutive symmetric
monoidal functor between involutive symmetric monoidal categories. Then the
induced functor in Proposition 1.2.16 lifts further to an involutive functor
RIMon(C)
F∗
 RIMon(D) .
PROOF. We reuse the proof of Proposition 4.5.10, and replace Theorem 4.5.1 by
Proposition 4.7.1.
□
EXAMPLE 4.7.6 (Star-Algebras). Continuing Example 4.5.12, a reversing invo-
lutive monoid in the involutive symmetric monoidal category Vect(C) is a unital
C-algebra (X, μ, 1) equipped with a C-linear map j : X

X such that
•
j ◦j = IdX and
•
that the diagrams (4.5.6) and (4.7.4) are commutative.
In terms of elements a, b ∈X, the commutative diagram (4.7.4) means the equality
j(ab) = j(b) · j(a).
So a reversing involutive monoid in Vect(C) is exactly a complex unital ∗-algebra
in the usual sense. Similarly, a reversing involutive monoid in Chain(C) is exactly
a complex unital differential graded ∗-algebra in the usual sense.
⋄
Recall from Proposition 2.5.4(2) that an involutive object is equivalent to a pair

X, j : IX

X

such that
j ◦Ij = ι−1
X : I 2X

∼=
X.
PROPOSITION 4.7.7. A reversing involutive monoid in an involutive symmetric
monoidal category C is exactly a tuple (X, μ, 1, j) with
•
(X, μ, 1) a monoid in C, and
•
(X, j : IX

X) an involutive object in C
such that the diagrams
(4.7.8)
and

4.8
Involutive Monads
97
(4.7.9)
are commutative.
PROOF. We again reuse the proof of Proposition 4.5.5, along with the equivalent
description of an involutive object in Proposition 2.5.4(2).
□
4.8
Involutive Monads
The purpose of this section is to deﬁne the involutive versions of a monad and of
an algebra over a monad. In Theorem 8.4.5 we will see that every involutive operad
yields an involutive monad.
Recall the concepts of a monad from Deﬁnition 1.3.1, of an involutive functor
from Deﬁnition 2.2.1, and of an involutive natural transformation from Deﬁni-
tion 2.3.1.
DEFINITION 4.8.1. Suppose (C, I, ι) is an involutive category. An involutive
monad in C is a tuple
(T, μ, ϵ, ν)
such that:
•
(T, μ, ϵ) is a monad in C.
•
(T, ν) is an involutive functor.
•
μ and ϵ are involutive natural transformations.
If there is no danger of confusion, we abbreviate (T, μ, ϵ, ν) to T .
Let us make explicit the last condition of an involutive monad.
PROPOSITION 4.8.2. In Deﬁnition 4.8.1:
(1) μ : T 2

T is an involutive natural transformation if and only if the
diagram
(4.8.3)
is commutative
(2) ϵ : IdC

T is an involutive natural transformation if and only if the
diagram

98
4
Involutive Monoidal Categories
(4.8.4)
is commutative.
Recall from Proposition 1.3.2 that monads in C are exactly monoids in the
strict monoidal category End(C) of functors on C. There is a similar description
of involutive monads as monoids using the strict monoidal category IEnd(C) in
Example 2.3.4.
PROPOSITION 4.8.5. An involutive monad in a small involutive category
(C, I, ι) is exactly a monoid in the strict monoidal category IEnd(C).
PROOF. This follows from Deﬁnition 4.8.1 and Proposition 4.8.2.
□
Recall from Deﬁnition 1.3.3 that each monad T has an associated category
Alg(T ) of T -algebras. For an involutive monad, its category of algebras has an extra
structure.
PROPOSITION 4.8.6. Suppose (T, μ, ϵ, ν) is an involutive monad in an involu-
tive category (C, I, ι). Then the category Alg(T ) inherits an involutive structure
(IT , ιT ) from C deﬁned by
IT (X, θ) =

IX, Iθ ◦νX

,
ιT
(X,θ) = ιX
for (X, θ) ∈Alg(T ).
PROOF. First we check that IT (X, θ) is a T -algebra. Its associativity is the outer-
most diagram below.
The left rectangle is commutative by (4.8.3). The top right square is commutative
by the naturality of ν. The bottom right square is commutative by the associativity
of the T -algebra (X, θ). The unity of IT (X, θ) is checked similarly. For a morphism
f : (X, θX)

(Y, θY ) of T -algebras, we deﬁne
IT (f ) = I(f ) : IT (X, θX)

IT (Y, θY ),

4.8
Involutive Monads
99
which is a morphism of T -algebras by the naturality of ν. This deﬁnes a functor
IT : Alg(T )

Alg(T ).
That
ιT
(X,θ) : (X, θ)

I 2
T (X, θ)
is compatible with the T -actions is the outer-most diagram below.
The lower left triangle is commutative by the naturality of ι. The upper right triangle
is commutative because (T, ν) is an involutive functor (2.2.2). The naturality of ιT
follows from the naturality of ι. Finally, (IT , ιT ) satisﬁes the triangle identity (2.1.2)
because (I, ι) does.
□
DEFINITION 4.8.7. Suppose (T, μ, ϵ, ν) is an involutive monad in an involutive
category (C, I, ι). Deﬁne the category
IAlg(T, μ, ϵ, ν) = Inv

Alg(T ), IT , ιT 
,
which is the category of involutive objects in the category Alg(T ) of T -algebras with
the involutive structure (IT , ιT ) in Proposition 4.8.6. Its objects are called involutive
T -algebras.
Let us unwrap Deﬁnition 4.8.7.
PROPOSITION 4.8.8. For an involutive monad (T, μ, ϵ, ν) in an involutive
category (C, I, ι), an involutive T -algebra is exactly a tuple (X, θ, j) with
•
(X, θ) a T -algebra and
•
(X, j) an involutive object in C
such that the diagram
(4.8.9)
is commutative. Moreover, a morphism of involutive T -algebras
f : (X, θX, jX)

(Y, θY , jY )

100
4
Involutive Monoidal Categories
is exactly a morphism f : X

Y ∈C that is both a morphism of T -algebras
and a morphism of involutive objects in C.
PROOF. An involutive object in

Alg(T ), IT , ιT 
consists of
•
an object (X, θ) ∈Alg(T ) and
•
a morphism j : (X, θ)

IT (X, θ) in Alg(T )
such that
IT (j) ◦j = ιT
(X,θ).
This equality means I(j) ◦j = ιX, which means that (X, j) is an involutive object
in C. The diagram (4.8.9) means that j is a morphism of T -algebras. The assertion
about morphisms follows from Deﬁnition 4.8.7.
□
There is an equivalent description of an involutive T -algebra in which the roles
of the involutive structure and the T -algebra structure are switched. To make this
statement precise, ﬁrst we observe that an involutive monad induces a monad on the
category of involutive objects. Recall from Proposition 2.6.2 that Inv(C) inherits an
involutive structure from C.
LEMMA 4.8.10. Suppose (T, μ, ϵ, ν) is an involutive monad in an involutive
category (C, I, ι). Then there is an induced monad

Tinv, μinv, ϵinv
in Inv(C) given by
•
Tinv(X, j) =

T X, νX ◦Tj

,
•
μinv
(X,j) = μX, and
•
ϵinv
(X,j) = ϵX
for (X, j) ∈Inv(C).
PROOF. The involutive object axiom (2.5.2) for Tinv(X, j) is the outer-most
diagram below.
The top left square is commutative because (X, j) is an involutive object in C.
The top right square is commutative by the naturality of ν. The bottom rectangle
is commutative because (T, ν) is an involutive functor (2.2.2). For a morphism f in

4.8
Involutive Monads
101
Inv(C), we deﬁne
Tinv(f ) = Tf,
which is a morphism in Inv(C) by the naturality of ν. This deﬁnes a functor
Tinv : Inv(C)

Inv(C).
That
μinv
(X,j) : T 2
inv(X, j)

Tinv(X, j)
is a morphism of involutive objects in C is the outer-most diagram below.
The top rectangle is commutative by the naturality of μ : T 2

T . The bottom
rectangle is commutative by (4.8.3). The naturality and associativity of μinv follow
from those of μ, and similarly for ϵinv.
□
PROPOSITION 4.8.11. Suppose (T, μ, ϵ, ν) is an involutive monad in an involu-
tive category (C, I, ι). Then there is an isomorphism
IAlg(T ) ∼= Alg

Tinv, μinv, ϵinv
between
•
the category of involutive T -algebras and
•
the category of Tinv-algebras in Inv(C).
PROOF. A Tinv-algebra consists of an object (X, j) ∈Inv(C) and a morphism
θ : Tinv(X, j)

(X, j) ∈Inv(C)
such that
θ ◦μinv
(X,j) = θ ◦Tinvθ
and
Id(X,θ) = θ ◦ϵinv
(X,θ).
These two equalities mean that (X, θ) is a T -algebra. The diagram (4.8.9) is
equivalent to the condition that θ is a morphism of involutive objects. So the desired
isomorphism on objects follows from Proposition 4.8.8.

102
4
Involutive Monoidal Categories
A morphism between two Tinv-algebras is a morphism in Inv(C) that is also
compatible with the Tinv-algebra structures. By Lemma 4.8.10 this compatibility
condition is the same thing as being compatible with the underlying T -algebra
structures. Therefore, a morphism between two Tinv-algebras is the same thing as
a morphism between the underlying objects in C that is both a morphism of T -
algebras and a morphism of involutive objects in C. By Proposition 4.8.8 this is the
same thing as a morphism of involutive T -algebras.
□
In summary, for an involutive monad (T, μ, ϵ, ν) in an involutive category
(C, I, ι), there is a commutative diagram
of forgetful functors. This diagram is in general not a pullback square because by
Proposition 4.8.8, an involutive T -algebra is more than just an object equipped with
a T -algebra structure and an involutive structure. To be an involutive T -algebra, the
diagram (4.8.9) must also be commutative.
EXAMPLE 4.8.12 (Involutive Monoids). Suppose C is an involutive monoidal
category as in Deﬁnition 4.1.1 that has all countable coproducts, which are
furthermore preserved by the monoidal product on each side. There is a monad
(Tmon, μ, ϵ) in C whose category of algebras is isomorphic to the category Mon(C)
of monoids in C; see, e.g., [Mac98] (VII.3 Theorem 2). In more details:
•
The free monoid functor Tmon sends an object X ∈C to the countable coproduct
TmonX =

n≥0
X⊗n
with
X⊗0 = 1,
X⊗1 = X,
and
X⊗n+1 = (X⊗n) ⊗X
for n ≥1.
•
The unit
ϵX : X

TmonX
corresponds to the n = 1 summand.

4.9
Exercises and Notes
103
•
The multiplication
μX : T 2
monX

TmonX
is given by the unique isomorphisms

· · · (X⊗m1 ⊗X⊗m2) ⊗· · ·

⊗X⊗mn ∼= X⊗m1+···+mn
in Mac Lane’s Coherence Theorem [Mac98] (VII.2 Corollary).
Since the involution functor I preserves countable coproducts, (Tmon, ν) is an
involutive functor whose distributive law ν is given by the composite
for each object X ∈C. The bottom left isomorphism uses Corollary 4.1.10, which
says that the involution functor in an involutive monoidal category is a strong
monoidal functor. Furthermore, the diagrams (4.8.3) and (4.8.4) are commutative,
so (Tmon, μ, ϵ, ν) is an involutive monad.
Under the isomorphism
Mon(C) ∼= Alg(Tmon),
the involutive structure on Mon(C) in Theorem 4.5.1 and the involutive structure
on Alg(Tmon) in Proposition 4.8.6 coincide, so their categories of involutive objects
also coincide. In other words, there is an isomorphism
IMon(C) = Inv

Mon(C)

∼= Inv

Alg(Tmon)

= IAlg(Tmon)
between the category of involutive monoids in C and the category of involutive
Tmon-algebras.
⋄
4.9
Exercises and Notes
(1) Prove (2), (3), and (4) in Proposition 4.1.8.
(2) In the proof of Theorem 4.2.5, prove the right unity axiom in (4.1.4).
(3) In the proof of Lemma 4.3.5, check the diagram (4.3.4) for GF.
(4) Prove (2) in Proposition 4.3.7.

104
4
Involutive Monoidal Categories
(5) In the proof of Theorem 4.5.1, check:
•
The unity axiom for Imon(X, μ, 1).
•
That ιX is compatible with the units of (X, μ, 1) and I 2
mon(X, μ, 1).
(6) In the proof of Proposition 4.5.10, check that νX is compatible with the units
in FIX and IFX.
(7) Fill in the rest of the proof of Proposition 4.7.1.
(8) Give a detailed proof of Proposition 4.7.5.
(9) Suppose C is an involutive monoidal category with countable coproducts,
which are preserved by the monoidal product on each side. Give an explicit
construction of a left adjoint of the forgetful functor IMon(C)

C.
(10) Suppose C is a cocomplete involutive symmetric monoidal category in which
the monoidal product commutes with colimits on each side. Give an explicit
construction of a left adjoint of each of the forgetful functors
ICMon(C)
 C
RIMon(C)

.
(11) In the proof of Proposition 4.8.6, check the unity of IT (X, θ).
(12) In Lemma 4.8.10, show that (Tinv, μinv, ϵinv) is part of an involutive monad in
the involutive category Inv(C), whose distributive law is given by that of T .
(13) Suppose T is an involutive monad in an involutive category C with coprod-
ucts. Give an explicit construction of a left adjoint of the forgetful functor
IAlg(T )

C.
(14) Work out the commutative version of Example 4.8.12 for involutive commu-
tative monoids in an involutive symmetric monoidal category.
(15) For an involutive monad T in an involutive category C, prove that the
Eilenberg-Moore adjunctions
C
 Alg(T )

and
Inv(C)
 IAlg(T )

are involutive adjunctions.
Notes. Most of the concepts in this chapter are due to Jacobs [Jac12], the main
exceptions being 4.1.9, 4.5.1, 4.5.10, 4.6.1, 4.6.5, 4.7.1, and 4.7.5.
Slightly different concepts of involutive monoidal categories are considered by
Beggs-Majid [BM09] and Egger [Egg11]. In an involutive monoidal category in the
sense of [Egg11] (Deﬁnition 2.1), the involution functor I is not a monoidal functor.
Instead, it is equipped with a natural isomorphism
I(X) ⊗I(Y)
∼=
 I(Y ⊗X)
that reverses the order of the monoidal product. For the discussion of involu-
tive operads in Chapter 8, the concept of an involutive monoidal category in

4.9
Exercises and Notes
105
Deﬁnition 4.1.1 is more suitable. The reason is that involutive operads, as in
Deﬁnition 8.3.5, are involutive monoids in an involutive monoidal category SSeqC
C
that is not symmetric.
The rigidity result Lemma 4.2.1 is similar to Lemma 2.3 in [Egg11]. Involutive
monoidal categories in [Egg11] are equal to strong bar categories in [BM09]. A
symmetric involutive monoidal category in the sense of [Egg11] (Remark 4.6) is
equal to an involutive symmetric monoidal category in Deﬁnition 4.1.1.
For a small involutive category C, Lemma 4.8.10 can also be obtained from
general 2-categorical facts. An involutive monad in a small involutive category
C is the same thing as a monad in the 2-category ICat acting on the object C.
Since Inv(−) : ICat

ICat is a 2-functor by Exercise 2.7(4), it preserves
monads. For more discussion of monads in 2-categories and bicategories, the reader
is referred to Chapter 6 in [JY21].
The concept of an involutive monoidal category is a special case of the notion
of a monoidal category equipped with a group action. The group in this case is the
cyclic group of order 2. For discussion of monoidal categories with group action,
the reader is referred to [BNY18, DGNO10, Gal17, Tam01].

Chapter 5
Coherence of Involutive Monoidal
Categories
The purpose of this chapter is to study coherence of involutive monoidal categories.
The next chapter will deal with the symmetric case. In Section 5.1 and Section 5.2,
we give explicit constructions of the free involutive monoidal category and of the
free involutive strict monoidal category generated by a category. We observe that
they are equivalent via a strict involutive strict monoidal functor. In Section 5.3
we show that in a small involutive monoidal category, every formal diagram
is commutative. Here a formal diagram is deﬁned as in the case of monoidal
categories, but with the involutive structure also taken into account. In Section 5.4
we show that every involutive monoidal category can be strictiﬁed to an involutive
strict monoidal category via an involutive adjoint equivalence involving involutive
strong monoidal functors. The remaining two sections contain explicit constructions
of the free involutive (strict) monoidal category generated by an involutive category.
5.1
Free Involutive Monoidal Categories
The purpose of this section is to give an explicit description of the free involutive
monoidal category generated by a category. It involves the following deﬁnitions.
DEFINITION 5.1.1. Suppose S is a class, and 1, I, and ⊗are symbols that do
not appear in S.
(1) The class Wim(S) of involutive monoidal words generated by S is deﬁned
recursively by the following three conditions:
(i) S ⊆Wim(S) and 1 ∈Wim(S).
(ii) If X ∈Wim(S), then IX ∈Wim(S).
(iii) If X, Y ∈Wim(S), then X ⊗Y ∈Wim(S). The operation ⊗is not
associative by deﬁnition.
© The Author(s), under exclusive license to Springer Nature Switzerland AG 2020
D. Yau, Involutive Category Theory, Lecture Notes in Mathematics 2279,
https://doi.org/10.1007/978-3-030-61203-0_5
107

108
5
Coherence of Involutive Monoidal Categories
(2) For X ∈Wim(S), its underlying word
word(X) ∈

k≥0
(Z≥0 × S)×k
is the possibly-empty ﬁnite sequence in Z≥0 × S deﬁned recursively by the
following four conditions:
(i) word(1) = ∅, the empty sequence.
(ii) word(x) = (0, x) for x ∈S.
(iii) If X ∈Wim(S) with
word(X) = (n1, x1) · · · (nk, xk) ∈(Z≥0 × S)×k,
then
word(IX) =

∅
if word(X) = ∅,
(n1 + 1, x1) · · · (nk + 1, xk)
if k > 0.
(iv) If X, Y ∈Wim(S) with word(X) and word(Y) already deﬁned, then
word(X ⊗Y) = word(X)word(Y),
the concatenation of word(X) and word(Y). Concatenation is associative
by deﬁnition.
If word(X) ∈(Z≥0 × S)×k, then we call k the length of X, and write |X| = k.
(3) For X ∈Wim(S), its underlying integer sequence
word1(X) ∈

k≥0
(Z≥0)×k
is obtained from word(X) by dropping the S-entries.
(4) Deﬁne an equivalence relation on 
k≥0(Z≥0)×k as follows. For
N = (n1, . . . , nq), M = (m1, . . . , mp) ∈

k≥0
(Z≥0)×k,
we deﬁne
N ≡M (mod 2)
if
(i) p = q and
(ii) ni ≡mi (mod 2) for 1 ≤i ≤p.

5.1
Free Involutive Monoidal Categories
109
(5) For X, Y ∈Wim(S), we write
X ≡Y (mod 2)
if
word1(X) ≡word1(Y) (mod 2).
EXAMPLE 5.1.2. Suppose S is a class with x, y ∈S. Then one involutive
monoidal word generated by S is
X = I 4
I 2(I1 ⊗I 3x) ⊗I 6y

∈Wim(S),
where I n = I · · · I with n ≥1 copies of I. Its underlying word and underlying
integer sequence are
word(X) = (9, x)(10, y) ∈(Z≥0 × S)×2,
word1(X) = (9, 10) ∈Z×2
≥0.
Suppose further that w, z ∈S. Then the involutive monoidal word
W = Iw ⊗I 3(Iz ⊗I 51) ∈Wim(S)
has
word(W) = (1, w)(4, z) ∈(Z≥0 × S)×2,
word1(W) = (1, 4) ∈Z×2
≥0.
It follows that
X ≡W (mod 2),
although X ̸= W as involutive monoidal words.
⋄
We now deﬁne a category that will be shown to be the free involutive monoidal
category.
DEFINITION 5.1.3. Suppose C is a category. Deﬁne the category Fim(C) with
extra structures as follows.
Objects: Ob

Fim(C)

= Wim

Ob(C)

, the class of involutive monoidal words
generated by Ob(C).
Morphisms: For X, Y ∈Ob

Fim(C)

with
(5.1.4)
word(X) = (m1, x1) · · · (mj, xj)
and
word(Y) = (n1, y1) · · · (nk, yk),
it has the morphism set

110
5
Coherence of Involutive Monoidal Categories
Fim(C)(X; Y) =
⎧
⎪⎨
⎪⎩
j
i=1
C(xi, yi)
if X ≡Y (mod 2),
∅
otherwise,
where an empty product, for the case j = 0, is taken as a one-point set.
Identities: For X as above, its identity morphism is
IdX = {Idxi}j
i=1 ∈
j
i=1
C(xi, xi).
Composition: Categorical composition is deﬁned entrywise in C.
Monoidal Product: For objects X, Y ∈Ob

Fim(C)

, their monoidal product X ⊗
Y is deﬁned as part of the deﬁnition of the class Wim

Ob(C)

. The monoidal
product on morphisms in Fim(C) is deﬁned as concatenation of ﬁnite sequences
of morphisms in C.
Monoidal Unit: The monoidal unit in Fim(C) is 1 ∈Wim

Ob(C)

.
Associativity Isomorphisms: For X, Y as above and Z ∈Ob

Fim(C)

with
word(Z) = (p1, z1) · · · (pl, zl),
the associativity isomorphism
(X ⊗Y) ⊗Z
αX,Y,Z
∼=
 X ⊗(Y ⊗Z)
∈Fim(C)
is deﬁned as

{Idxi}j
i=1, {Idyi}k
i=1, {Idzi}l
i=1

∈
j
i=1
C(xi, xi) ×
k
i=1
C(yi, yi) ×
l
i=1
C(zi, zi).
Left and Right Units: For X as above, the left and the right unit isomorphisms
1 ⊗X
λX
∼=
 X
X ⊗1
ρX
∼=

∈Fim(C)
are both given by {Idxi}j
i=1.
Involution Functor: Deﬁne a functor
I : Fim(C)

Fim(C)
by the assignment X


IX on objects, and the identity function

5.1
Free Involutive Monoidal Categories
111
Fim(X; Y)
Id
 Fim(IX; IY)
on morphism sets. This is well-deﬁned because
X ≡Y (mod 2)
if and only if
IX ≡IY (mod 2),
and I only changes the integer entries.
Unit: Deﬁne a natural isomorphism
ι : IdFim(C)

∼=
I 2
by
ιX = {Idxi}j
i=1 : X

∼=
I 2X ∈Fim(C)(X; I 2X) =
j
i=1
C(xi, xi)
for each object X ∈Fim(C) as above. This is well-deﬁned because
word(I 2X) = (m1 + 2, x1) · · · (mj + 2, xj).
Involutive Monoidal Structure: Deﬁne the morphism
I0 : 1

I1
as the unique isomorphism in
Fim(C)(1; I1) = {∗}.
This is well-deﬁned because
word(1) = word(I1) = ∅.
Finally, for objects X, Y ∈Fim(C) as above, deﬁne the isomorphism
IX ⊗IY
(I2)X,Y
∼=
 I(X ⊗Y)
∈Fim(C)

IX ⊗IY, I(X ⊗Y)

as

{Idxi}j
i=1, {Idyi}k
i=1

∈
j
i=1
C(xi, xi) ×
k
i=1
C(yi, yi).

112
5
Coherence of Involutive Monoidal Categories
This is well-deﬁned because
word

IX ⊗IY

= word

I(X ⊗Y)

= (m1 + 1, x1) · · · (mj + 1, xj)(n1 + 1, y1) · · · (nk + 1, yk).
This ﬁnishes the deﬁnition of Fim(C).
LEMMA 5.1.5. For each category C, the tuple

(Fim(C), ⊗, 1, α, λ, ρ), (I, I2, I0), ι

in Deﬁnition 5.1.3 is an involutive monoidal category.
PROOF. An inspection shows that

Fim(C), ⊗, 1, α, λ, ρ

is a monoidal cate-
gory, that

Fim(C), I, ι

is an involutive category, and that the diagrams (4.1.3),
(4.1.4), (4.1.5), and (4.1.6) in Explanation 4.1.2 are commutative.
□
REMARK 5.1.6. For each category C, the involutive monoidal category Fim(C)
is neither strict involutive (since 1 ̸= I 21) nor strict monoidal (since 1 ⊗1 ̸= 1).⋄
To show that Fim(C) has the desired universal property, we will use the following
reduced objects.
DEFINITION 5.1.7. Suppose C is a category.
(1) An object in Fim(C) is called reduced if either
(i) it is 1, or
(ii) it has the form
(5.1.8)

· · · (I ϵ1x1 ⊗I ϵ2x2) ⊗· · ·

⊗I ϵkxk
for some k > 0 and objects x1, . . . , xk ∈C, with each ϵi ∈{0, 1}. Here
I 0 = Id, and the left half of each pair of parentheses in (5.1.8) is at the
front.
(2) The collection of basic isomorphisms in Fim(C) is deﬁned recursively as
follows:
•
The identity morphisms of 1 and of objects in C are basic isomorphisms.
•
I0, each component of I2, ι, α, λ, and ρ, and their inverses are basic
isomorphisms.
•
Basic isomorphisms are closed under compositions, ⊗, and I.

5.1
Free Involutive Monoidal Categories
113
EXAMPLE 5.1.9. For objects x, y in a category C, the composite δX,
is a basic isomorphism in Fim(C) from an object X that is not reduced to a reduced
object X′. The morphism (I −1
0 )◦12 denotes the composite
The morphism (ι−1)◦2 denotes the composite
and similarly for (ι−1)◦3.
⋄
The next observation is an ingredient in proving that Fim(C) is the free involutive
monoidal category generated by C.
LEMMA 5.1.10. Suppose C is a category. For each object X ∈Fim(C), there
exists a canonical choice of a basic isomorphism
X
δX
∼=
 X′
∈Fim(C)
with X′ reduced.
PROOF. If X is reduced, then its identity morphism is a basic isomorphism. So
we may assume that X is not reduced.
The basic isomorphism δX is deﬁned as the composite
of the following basic isomorphisms in Fim(C):

114
5
Coherence of Involutive Monoidal Categories
(1) The basic isomorphism
δ1 : X

∼=
X1
is a composite of monoidal products of identity morphisms with components of
I −1
2
: I(−⊗−)

∼=
I(−) ⊗I(−),
that brings X to the form
X1 = I m1x1 ⊗· · · ⊗I mj xj
with the same parenthesization as in X, for some objects xi ∈Ob(C) ⨿{1} and
integers mi ≥0 for 1 ≤i ≤j. Counting from the left, the ith factor in X1 is
I mixi. The objects xi are the same ones that appear in X, and the object X1 is
uniquely determined by X. Moreover, as stated in [Mac98] (XI.2 Eq. (7)), the
naturality of I2 implies that δ1 is unique.
(2) The basic isomorphism
δ2 : X1

∼=
X2
is the monoidal product
δ2 = δ1
2 ⊗· · · ⊗δj
2
with the same parenthesization as above, in which for each 1 ≤i ≤j:
•
δi
2 : I mixi

∼=
Ixi is a composite of components of ι−1 if xi ∈C and mi
is odd;
•
δi
2 : I mixi

∼=
xi is a composite of components of ι−1 if xi ∈C and mi
is even;
•
δi
2 : I mi1

∼=
1 is a composite of I ?(I −1
0 ) if xi = 1.
So
X2 = I ϵ1x1 ⊗· · · ⊗I ϵj xj
with the same parenthesization as above, ϵi ∈{0, 1} if xi ∈C, and ϵi = 0 if
xi = 1. The object X2 is uniquely determined by X1, hence by X as well. The
deﬁnition of δ2 involves no choices at all.
(3) The basic isomorphism
δ3 : X2

∼=
X3

5.1
Free Involutive Monoidal Categories
115
is a composite of monoidal products of identity morphisms with components of
λ and ρ, that removes all occurrences of 1 in X2. So
X3 = I ϵ1x′
1 ⊗· · · ⊗I ϵkx′
k
for some parenthesization, with each x′
i ∈C and ϵi ∈{0, 1}. The objects x′
i ∈C
are still exactly the ones that appear in X, and X3 is uniquely determined by
X2, hence also by X. Moreover, δ3 is unique by the naturality of λ and ρ, and
the monoidal category axiom λ1 = ρ1.
(4) The basic isomorphism
δ4 : X3

∼=
X′
is a composite of monoidal products of identity morphisms with components of
α−1, that moves the parentheses in X3 to the left as in (5.1.8). The object X′ is
uniquely determined by X3, hence also by X. Moreover, δ4 is unique by Mac
Lane’s Coherence Theorem for monoidal categories [Mac98] (VII.2 Corollary).
By construction
δX = δ4 ◦δ3 ◦δ2 ◦δ1 : X

∼=
X′
is a composite of basic isomorphisms, hence a basic isomorphism, with X′ reduced.
□
LEMMA 5.1.11. In the context of Lemma 5.1.10, if
word(X) = (m1, x1) · · · (mj, xj)
and
word(X′) = (n1, x′
1) · · · (nk, x′
k),
then
•
j = k,
•
xi = x′
i ∈C for each 1 ≤i ≤j, and
•
mi ≡ni (mod 2) for each 1 ≤i ≤j.
PROOF. In the decomposition δX = δ4δ3δ2δ1, the isomorphisms δ1, δ3, and δ4 do
not change the underlying words of the objects involved. Moreover, copies of 1 do
not contribute to the underlying words, and ι−1 : I 2

∼=
Id reduces the exponent
of I by 2. Therefore, the isomorphism δ2 only changes the integer components by
multiples of 2.
□
DEFINITION 5.1.12. For each category C, denote by
C
εC
 Fim(C)
the full and faithful embedding given by

116
5
Coherence of Involutive Monoidal Categories
•
the inclusion Ob(C) ⊆Wim

Ob(C)

on objects, and
•
the identity function
C(x, y)
Id
 Fim(C)(x; y)
on morphism sets for objects x, y ∈C.
The following observation, which uses Deﬁnition 4.3.1, says that Fim(C) is the
free involutive monoidal category generated by C.
THEOREM 5.1.13. Suppose F : C

D is a functor with C a category and D
an involutive monoidal category. Then there exists a strict involutive strict monoidal
functor
Fim(C)
F
 D
such that the following three statements hold.
(1) F extends F in the sense that F ◦εC = F.
(2) As a strict involutive strict monoidal functor extending F, F is unique.
(3) As an involutive strong monoidal functor extending F, F is unique up to an
involutive monoidal natural isomorphism.
PROOF. On the objects in Fim(C), F is deﬁned recursively as follows:
•
F(x) = F(x) for x ∈Ob(C) ⊆Ob

Fim(C)

.
•
F(1) = 1D, the monoidal unit in D.
•
For X, Y ∈Ob

Fim(C)

with F(X), F(Y) ∈D already deﬁned, we set
F(X ⊗Y) = F(X) ⊗F(Y),
F(IX) = IDF(X).
For example, we have
F

I 4
I 2(I1 ⊗I 3x) ⊗I 6y

= I 4
D

I 2
D(ID1D ⊗I 3
DF(x)) ⊗I 6
DF(y)

.
To deﬁne F on morphisms, suppose X, Y ∈Fim(C) are objects with underlying
words as in (5.1.4). Lemma 5.1.11 implies the equality
Fim(C)(X; Y) = Fim(C)(X′; Y ′)
with X′ and Y ′ reduced objects. For a morphism

5.1
Free Involutive Monoidal Categories
117
(5.1.14)
f = {fi}j
i=1 ∈Fim(C)(X; Y) =
j
i=1
C(xi, yi) = Fim(C)(X′; Y ′),
we deﬁne F(f ) ∈D

F(X), F(Y)

as the composite
(5.1.15)
in D as follows:
•
Using the basic isomorphism δX = δ4δ3δ2δ1 in Lemma 5.1.10, we deﬁne
F(δX) = F(δ4) ◦F(δ3) ◦F(δ2) ◦F(δ1) ∈D
as the composite δ4δ3δ2δ1 interpreted in the involutive monoidal category D,
starting from the object F(X). The same deﬁnition applies to F(δY ). For
example, for the basic isomorphism δX in Example 5.1.9, F(δX) is the composite
in D, in which ⊗, 1D, ID, I2, I0, ι, and ρ are part of the involutive monoidal
structure of D.
•
If X′ = 1, then also Y ′ = 1 because 1 is the only reduced object whose
underlying word is empty. In this case, j = 0, and F(f ′) = Id1D.
•
If
X′ = I ϵ1x1 ⊗· · · ⊗I ϵj xj
with the parenthesization as in (5.1.8), then
Y ′ = I ϵ1y1 ⊗· · · ⊗I ϵj yj
with the same parenthesization, and F(f ′) is the following monoidal product.

118
5
Coherence of Involutive Monoidal Categories
F(X′) = I ϵ1
D F(x1) ⊗· · · ⊗I
ϵj
D F(xj)
F(f ′) =
I ϵ1
D F(f1)⊗···⊗I
ϵj
D F(fj )

F(Y ′) = I ϵ1
D F(y1) ⊗· · · ⊗I
ϵj
D F(yj)
An inspection shows that F : Fim(C)

D is a functor such that F ◦εC = F.
We assign to F:
•
the identity distributive law
F(IX)
νF
X
=
 IDF(X) ;
•
the strict monoidal functor structure
1D
F 0
=
 F(1)
and
F(X) ⊗F(Y)
F 2
=
 F(X ⊗Y)
for objects X, Y in Fim(C).
Using the criteria in Lemma 4.3.2, another inspection shows that F with the above
structure is a strict involutive strict monoidal functor.
To see that F is unique as a strict involutive strict monoidal functor extending
F, ﬁrst observe that F on objects is uniquely determined as in the ﬁrst paragraph of
this proof. To see that F is uniquely determined on morphisms as well, note that for
a morphism f as in (5.1.14), the same entries deﬁne a morphism
f ′ = {fi}j
i=1 ∈Fim(C)(X′; Y ′).
Moreover, the original morphism f factors as follows.
The strict involutive strict monoidal functor requirement then forces F(f ) to be
equal to the composite F(δY )−1 ◦F(f ′) ◦F(δX), as deﬁned above.
To see that F, as an involutive strong monoidal functor extending F, is unique
up to an involutive monoidal natural isomorphism, suppose
G : Fim(C)

D

5.1
Free Involutive Monoidal Categories
119
is an involutive strong monoidal functor extending F with distributive law νG and
strong monoidal structure (G2, G0). We deﬁne a natural transformation
σ : F

G
as follows:
•
For an object x ∈C, there are equalities
F(x) = F(x) = G(x),
and we deﬁne σx = IdF(x).
•
Part of the strong monoidal structure of G gives an isomorphism
F(1) = 1D
σ1 = G0
∼=
 G(1) .
•
Recursively, suppose X, Y ∈Fim(C) are objects such that σX and σY are already
deﬁned. Then σX⊗Y and σIX are deﬁned as the composites:
The naturality of σ and that it is an involutive monoidal natural transformation
are both checked recursively, using the assumption that G is an involutive strong
monoidal functor.
□
Recall from Deﬁnition 4.3.6 that IMCat0 is the category of small involutive
monoidal categories and strict involutive strict monoidal functors.
COROLLARY 5.1.16. There is an adjunction
Cat
Fim
 IMCat0
U

whose right adjoint U forgets about the involutive structure and the monoidal
structure.
PROOF. For a functor G : C

D between small categories, we deﬁne
Fim(G) : Fim(C)

Fim(D)

120
5
Coherence of Involutive Monoidal Categories
as the unique strict involutive strict monoidal functor that makes the diagram
in Cat commutative. This deﬁnes the functor
Fim : Cat

IMCat0.
Theorem 5.1.13 shows that the pair of functors (Fim, U) satisﬁes the universal
property for an adjunction, as stated in [Mac98] (IV.1 Theorem 2(i)).
□
DEFINITION 5.1.17. For a category C, the involutive monoidal category Fim(C)
is called the free involutive monoidal category generated by C.
EXAMPLE 5.1.18 (Free Involutive Monoidal Category on One Object). Suppose
1 is the category with one object x and only the identity morphism of x. The
free involutive monoidal category Fim(1) generated by one object x has object set
Wim({x}), which is the set of involutive monoidal words generated by {x}. For each
involutive monoidal category D and each object z ∈D, there is a unique functor
F : 1

D
such that
F(x) = z.
By Theorem 5.1.13, there exists a unique strict involutive strict monoidal functor
F : Fim(1)

D
such that
F(x) = z.
For example, we have that
F

I 4
I 2(I1 ⊗I 3x) ⊗I 6x

= I 4
D

I 2
D(ID1D ⊗I 3
Dz) ⊗I 6
Dz

∈D.
Since 1 is a discrete category with one object, for objects X, Y ∈Fim(1), the
morphism set Fim(1)(X; Y):
•
contains a unique isomorphism if X ≡Y (mod 2);
•
is empty otherwise.
It follows that every diagram in Fim(1) is commutative. As we will see in
Section 5.3, this property of the free involutive monoidal category generated by
one object implies that every formal diagram in an involutive monoidal category is
commutative.
⋄

5.2
Free Involutive Strict Monoidal Categories
121
5.2
Free Involutive Strict Monoidal Categories
Recall that a monoidal category is called strict if the associativity isomorphism, the
left unit isomorphism, and the right unit isomorphism are all identity morphisms.
The ﬁrst purpose of this section is to give an explicit description of the free
involutive strict monoidal category generated by a category. This is similar to
Section 5.1, but the description is easier. Then we show that the free involutive
monoidal category is equivalent to the free involutive strict monoidal category via a
strict involutive strict monoidal equivalence.
DEFINITION 5.2.1. Suppose S is a class, and I is a symbol that does not appear
in S.
(1) The class Wistm(S) of involutive strict monoidal words generated by S is deﬁned
recursively by the following four conditions:
(i) ∅∈Wistm(S), where ∅is the empty sequence.
(ii) S ⊆Wistm(S).
(iii) If X ∈Wistm(S), then IX ∈Wistm(S), where I∅= ∅.
(iv) If X, Y ∈Wistm(S), then so is their concatenation XY. Concatenation is
associative by deﬁnition.
(2) For X ∈Wistm(S), its underlying word
word(X) ∈

k≥0
(Z≥0 × S)×k
is deﬁned as in Deﬁnition 5.1.1 with word(∅) = ∅.
(3) For X ∈Wistm(S), its underlying integer sequence
word1(X) ∈

k≥0
(Z≥0)×k
is obtained from word(X) by dropping the S-entries.
DEFINITION 5.2.2. Suppose C is a category. Deﬁne the category Fistm(C) with
extra structures as in Deﬁnition 5.1.3, but with the following modiﬁcations:
Objects: Ob

Fistm(C)

= Wistm

Ob(C)

, the class of involutive strict monoidal
words generated by Ob(C).
Monoidal Product: For objects X, Y ∈Ob

Fistm(C)

, their monoidal product
X ⊗Y is deﬁned as their concatenation, which is part of the deﬁnition of the
class Wistm

Ob(C)

.
Monoidal Unit: The monoidal unit in Fistm(C) is ∅.
Monoidal Structure Isomorphisms: Each component of the associativity isomor-
phism α, the left unit isomorphism λ, and the right unit isomorphism ρ, is an
identity morphism.

122
5
Coherence of Involutive Monoidal Categories
Involutive Monoidal Structure: I0 : ∅

∅is the identity morphism.
An inspection establishes the following.
LEMMA 5.2.3. For each category C, the tuple

(Fistm(C), ⊗, ∅, α, λ, ρ), (I, I2, I0), ι

in Deﬁnition 5.2.2 is an involutive strict monoidal category.
REMARK 5.2.4. As long as C has at least one object, say x, the involutive strict
monoidal category Fistm(C) is not strict involutive because x ̸= I 2x.
⋄
DEFINITION 5.2.5. For each category C, denote by
C
εst
C
 Fistm(C)
the full and faithful embedding given by
•
the inclusion Ob(C) ⊆Wistm

Ob(C)

on objects, and
•
the identity function
C(x, y)
Id
 Fistm(C)(x; y)
on morphism sets for objects x, y ∈C.
A simpliﬁed version of the proof of Theorem 5.1.13 establishes the following
result.
THEOREM 5.2.6. Suppose F : C

D is a functor with C a category and
D an involutive strict monoidal category. Then there exists a strict involutive strict
monoidal functor
Fistm(C)
F
 D
such that the following three statements hold.
(1) F extends F in the sense that F ◦εst
C = F.
(2) As a strict involutive strict monoidal functor extending F, F is unique.
(3) As an involutive strong monoidal functor extending F, F is unique up to an
involutive monoidal natural isomorphism.
DEFINITION 5.2.7. For a category C, the involutive strict monoidal category
Fistm(C) is called the free involutive strict monoidal category generated by C.

5.2
Free Involutive Strict Monoidal Categories
123
Next we observe that the free involutive monoidal category Fim(C) and the free
involutive strict monoidal category Fistm(C) are equivalent.
THEOREM 5.2.8. For each category C, there is a canonical strict involutive
strict monoidal functor
Fim(C)
θ
 Fistm(C)
that is also an equivalence of categories.
PROOF. The functor θ is the unique strict involutive strict monoidal functor that
extends εst
C, in the sense that the diagram
is commutative, given by Theorem 5.1.13. In details, the assignment on objects
θ : Wim

Ob(C)


Wistm

Ob(C)

is deﬁned recursively as follows:
•
θ(1) = ∅.
•
θ(x) = x for x ∈Ob(C).
•
If X, Y ∈Fim(C) are objects with θ(X), θ(Y) ∈Fistm(C) already deﬁned, then
θ(IX) = Iθ(X),
θ(X ⊗Y) = θ(X)θ(Y).
For example, for objects x, y ∈C,
θ

I 4
I 2(I1 ⊗I 3x) ⊗I 6y

= I 4
(I 5x)(I 6y)

.
Since θ does not change the underlying words, there is an equality
Fim(C)(X; Y) = Fistm(C)(θX; θY)
of morphism sets, and θ is deﬁned as the identity map on morphism sets. The functor
θ is fully faithful on morphism sets, and is surjective on objects. Therefore, θ is an
equivalence of categories.
□
EXAMPLE 5.2.9 (Free Involutive Strict Monoidal Category on One Object).
Suppose 1 is the category with one object x and only the identity morphism of
x. By Theorem 5.2.6, the free involutive strict monoidal category Fistm(1) has the

124
5
Coherence of Involutive Monoidal Categories
following universal property. For each involutive strict monoidal category D and
each object z ∈D, there exists a unique strict involutive strict monoidal functor
F : Fistm(1)

D
such that
F(x) = z.
Moreover, there is a unique strict involutive strict monoidal equivalence
Fim(1)
θ
∼
 Fistm(1)
such that
θ(x) = x.
Notice that θ is surjective but not injective on objects. For example, there are
equalities
θ(1) = θ(1 ⊗1) = ∅∈Wistm({x}),
so the objects 1 ̸= 1 ⊗1 have the same θ-image.
⋄
5.3
Commutativity of Formal Diagrams
One version of Mac Lane’s Coherence Theorem [Mac98] (VII.2) says that each
formal diagram in each monoidal category commutes. A formal diagram is a dia-
gram in which each morphism involves only the identity morphism, the associativity
isomorphism, the left unit isomorphism, the right unit isomorphism, their inverses,
monoidal products, and compositions. The purpose of this section is to prove
the involutive monoidal version of this coherence result. The proof involves the
following category. For functors F, G : C

D between the same categories,
we denote by Nat(F; G) the collection of natural transformations F

G.
DEFINITION 5.3.1. Suppose C is a small involutive monoidal category as in
Deﬁnition 4.1.1. Deﬁne the category It(C) with extra structures as follows.
Objects: An object in It(C) is a pair (m, T ) with
•
m ∈Z≥0 and
•
T : C×m

C a functor,
where C×0 = 1 is the discrete category with one object.
Morphisms: For objects (m, T ), (n, U) ∈It(C), deﬁne the morphism set
It(C)

(m, T ), (n, U)

=

Nat(T ; U)
if m = n,
∅
if m ̸= n.
Identity morphisms are identity natural transformations. Compositions in It(C)
are vertical compositions of natural transformations.

5.3
Commutativity of Formal Diagrams
125
Monoidal Product: Deﬁne the monoidal product
(m, T ) ⊗(n, U) = (m + n, T ⊗U)
with T ⊗U the composite
The monoidal product of morphisms is deﬁned componentwise in C. In other
words, for morphisms
β : (m, T )

(m, U)
and
β′ : (k, T ′)

(k, U′),
the monoidal product
β ⊗β′ : (m + k, T ⊗T ′)

(m + k, U ⊗U′)
is given componentwise by
(β ⊗β′)(x1,...,xm,y1,...,yk) = β(x1,...,xm) ⊗β′
(y1,...,yk)
for objects x1, . . . , xm, y1, . . . , yk ∈C.
Monoidal Unit: The monoidal unit in It(C) is (0, 1), where 1 : 1

C
denotes the constant functor at the monoidal unit 1C ∈C.
Monoidal Structure Isomorphisms: The associativity isomorphism, the left unit
isomorphism, and the right unit isomorphism in It(C) are deﬁned componentwise
in C using the monoidal structure isomorphisms in C.
Involution Functor: Deﬁne a functor
I : It(C)

It(C)
by
•
the assignment
I(m, T ) =

m,
C×m
T  C
IC  C

on objects, and
•
the horizontal composition
Iβ = β ∗IdIC
for
β ∈It(C)

(m, T ), (m, U)

.

126
5
Coherence of Involutive Monoidal Categories
In other words, the morphism
Iβ : I(m, T )

I(m, U)
is given componentwise by
(Iβ)(x1,...,xm) = IC

β(x1,...,xn)

.
Unit: Deﬁne a natural isomorphism
ι : IdIt(C)

∼=
I 2
componentwise in C using the involutive structure unit ιC : IdC

∼=
I 2
C in C.
In other words, it is componentwise the horizontal composition
ι(m,T ) = IdT ∗ιC.
Involutive Monoidal Structure: Deﬁne the morphism
I0 : (0, 1)

I(0, 1)
using the morphism I0 : 1C

IC1C in C. Similarly, deﬁne the natural
transformation
I(−) ⊗I(−)
I2
 I(−⊗−)
using the corresponding natural transformation in C.
This ﬁnishes the deﬁnition of It(C).
REMARK 5.3.2. In Deﬁnition 5.3.1, the smallness assumption on C ensures that
for objects (m, T ) and (m, U), the collection of morphisms (m, T )

(m, U)
is a set.
⋄
Using the diagrams in Explanation 4.1.2, an inspection establishes the following.
LEMMA 5.3.3. It(C) in Deﬁnition 5.3.1 is an involutive monoidal category.
Recall that 1 = {x} is a category with one object x and only the identity
morphism. The following result is the coherence statement about the commutativity
of all formal diagrams in a small involutive monoidal category.
COROLLARY 5.3.4. Suppose C is a small involutive monoidal category. Then
the following statements hold.
(1) There exists a unique strict involutive strict monoidal functor
Fim(1)

 It(C)
such that
(x) = (1, IdC).

5.3
Commutativity of Formal Diagrams
127
(2) For objects X, Y ∈Fim(1) with X ≡Y (mod 2), the unique isomorphism
X

∼=
Y is sent to a unique natural isomorphism
(X)
φX,Y
∼=
 (Y)
: C×|X|

C
that involves only
•
the isomorphisms Id1C and I0 : 1C

IC1C,
•
the natural isomorphisms IdIdC, ιC, I2, α, λ, ρ, and their inverses,
•
the functors IC and ⊗, and
•
categorical composites in C.
(3) The -image of each diagram in Fim(1) is commutative.
PROOF. Since It(C) is an involutive monoidal category with (1, IdC) ∈It(C)
an object, the ﬁrst assertion is a special case of the Coherence Theorem 5.1.13, as
explained in Example 5.1.18. The second assertion is a consequence of the existence
of the strict involutive strict monoidal functor . The last assertion is true because
every diagram in Fim(1) is commutative.
□
EXAMPLE 5.3.5. Using the construction in the proof of Theorem 5.1.13, let us
explain in more details the functor  in Corollary 5.3.4.
•
The monoidal unit 1 ∈Fim(1) is sent to the monoidal unit in It(C), so
(1) = (0, 1).
•
Each object X ∈Fim(1) with |X| = n is sent to a pair
(X) =

n,
C×n
XC  C

.
•
With X as above and k ≥1, I kX ∈Fim(1) is sent to a pair
(I kX) =

n,
C×n
XC  C
I k
C  C

.
•
The object I kx ∈Fim(1) is sent to
(I kx) =

1,
C
I k
C  C

.

128
5
Coherence of Involutive Monoidal Categories
•
The x-component of the unit, ιx : x

∼=
I 2x ∈Fim(1), is sent to the
morphism
(ιx) = (1, IdC)

(1, I 2
C),
which is the unit ιC : IdC

∼=
I 2
C in C.
•
Similarly, the involutive monoidal structures ⊗, I0, I2, α, λ, and ρ in Fim(1) are
sent to their corresponding structure morphisms in C.
For example,


I 4
I 2(I1 ⊗I 3x) ⊗I 6x

=

2, C×2

C

,
where C×2

C is the following composite.
Let us deﬁne a formal diagram in C as a diagram in It(C) that is the -image of
a diagram in Fim(1). Then Corollary 5.3.4(3) says that every formal diagram in a
small involutive monoidal category is commutative.
⋄
5.4
Strictiﬁcation of Involutive Monoidal Categories
Recall that a monoidal category is called strict if the associativity isomorphism, the
left unit isomorphism, and the right unit isomorphism are all identity morphisms.
A monoidal functor (F, F2, F0) is called strong if the structure morphisms F2 and
F0 are isomorphisms; it is sometimes called a tensor functor in the literature. One
version of Mac Lane’s Coherence Theorem 1.2.20 for monoidal categories states
that each monoidal category is equivalent to a strict monoidal category via strong
monoidal functors. The purpose of this section is to prove the involutive monoidal
version of this strictiﬁcation result. Recall that an involutive strict monoidal category
is an involutive monoidal category whose underlying monoidal category is strict.
Also recall from Deﬁnition 2.4.1 the concept of an involutive adjoint equivalence.
THEOREM 5.4.1. Suppose C is an involutive monoidal category as in Deﬁni-
tion 4.1.1. Then there exist canonical choices of

5.4
Strictiﬁcation of Involutive Monoidal Categories
129
(i) an involutive strict monoidal category Cst and
(ii) an involutive adjoint equivalence
C
L
 Cst
R

such that the following ﬁve statements hold:
•
The unit ϵ : IdC

RL is the identity natural transformation.
•
L is a strict involutive strong monoidal functor.
•
R is an involutive strong monoidal functor.
•
The unit and the counit of the adjunction L ⊣R are both monoidal natural
transformations and involutive natural transformations.
•
If the involutive structure on C is strict (resp., trivial)–i.e., I 2 = IdC (resp.,
I = IdC) and ι = IdIdC–then the same is true for Cst.
PROOF. Suppose C is an involutive monoidal category as in Deﬁnition 4.1.1.
Since C is a monoidal category, by Mac Lane’s Coherence Theorem 1.2.20, there
exist a strict monoidal category Cst and an adjoint equivalence
C
L
 Cst
R

with (i) both L and R strong monoidal functors, and (ii) RL = IdC. We will equip
Cst with the structure of an involutive strict monoidal category. Let us ﬁrst recall its
monoidal category structure and the deﬁnition of the adjunction L ⊣R.
Objects: Its object set is
Ob(Cst) =

k≥0
Ob(C)×k,
so an object in Cst is a ﬁnite, possibly-empty, sequence of objects in C. For an
object x = (x1, . . . , xm) ∈C×m, we deﬁne the left-normalized monoidal product
x⊗= x1 ⊗· · · ⊗xm =
⎧
⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎩
1
if m = 0,
x1
if m = 1,
x1 ⊗x2
if m = 2,

· · · (x1 ⊗x2) ⊗· · ·

⊗xm
if m > 2
(5.4.2)
in C. When m > 2, the left half of each pair of parentheses is at the front.

130
5
Coherence of Involutive Monoidal Categories
Morphisms: For objects x as above and y = (y1, . . . , yn) ∈C×n, Cst has the
morphism set
Cst

x; y

= C

x⊗, y⊗
,
and the identity morphism
Idx = Idx⊗∈C.
Composition in Cst is deﬁned in C.
Monoidal Structure: The monoidal product on objects in Cst is given by concate-
nation of sequences, i.e.,
x ⊗st y =

x1, . . . , xm, y1, . . . , yn

∈C×(m+n).
The monoidal unit is the empty sequence. For morphisms f ∈Cst

x; y

and
g ∈Cst

v; w

, their monoidal product f ⊗st g in Cst is the composite
(5.4.3)
in C in which:
•
The ﬁrst and the last isomorphisms are the unique isomorphisms guaranteed
by Mac Lane’s Coherence Theorem [Mac98] (VII.2 Corollary). They involve
only identity morphisms, the monoidal structure isomorphisms α, λ, and ρ,
their inverses, the monoidal product ⊗, and composites.
•
f ⊗g is the monoidal product in C.
The associativity isomorphism, the left unit isomorphism, and the right unit
isomorphism in Cst are identity morphisms.
Left Adjoint: The left adjoint L : C

Cst is given by
•
L(x) = (x) for objects x ∈C, and
•
the identity function
C(x, y) = Cst

(x); (y)

on morphism sets.
The strong monoidal structure on L is given by the isomorphisms
∅
Id1
 (1)
and
(x)(y) = (x, y)
Idx⊗y  (x ⊗y)
for x, y ∈C.

5.4
Strictiﬁcation of Involutive Monoidal Categories
131
Right Adjoint
The right adjoint R : Cst

C is given by
•
R(x) = x⊗on objects, and
•
the identity function
Cst

x; y

= C(x⊗, y⊗)
on morphism sets.
The strong monoidal structure on R is given by the isomorphisms
1
Id1
 1 = R(∅)
and
x⊗⊗y⊗
∼=
 (x, y)⊗
for x, y ∈Cst. The second isomorphism is the unique isomorphism guaranteed
by Mac Lane’s Coherence Theorem.
Unit and Counit: The unit ϵ : IdC

RL of the adjunction L ⊣R is
the identity natural transformation IdIdC. The counit η : LR

IdCst is
componentwise the isomorphism
LR(x) = L(x⊗) = (x⊗)
Idx⊗
 x
for x ∈Cst.
We equip Cst with the involutive structure (Ist, ιst) as follows.
Involution Functor: On objects
Ist : Cst

Cst
is deﬁned entrywise as
Ist(x1, . . . , xm) =

Ix1, . . . , Ixm

if m > 0,
∅
if m = 0
for (x1, . . . , xm) ∈C×m, where (I, ι) is the involutive structure on C. For a
morphism f : x

y ∈Cst, Istf is deﬁned as the composite
(5.4.4)

132
5
Coherence of Involutive Monoidal Categories
in C. The ﬁrst and the last isomorphisms are the unique isomorphisms given by
the strong monoidal structure (I2, I0) of the involution functor I. The uniqueness
of these isomorphisms implies that Ist is a functor.
Unit: For an object x ∈Cst as above, the x-component of the unit
ιst : IdCst

∼=
I 2
st
is deﬁned as the isomorphism
x⊗
ιx1⊗···⊗ιxm
 
I 2
stx
⊗
∈C,
which means Id1 ∈C if m = 0. Each ιxi : xi

∼=
I 2xi is the xi-component of
the unit ι in C. The naturality of ιst with respect to a morphism f : x

y ∈
Cst as above is the outer-most diagram below.
The top and the bottom rectangles are commutative by the assumption that
ι : IdC

∼=
I 2 is a monoidal natural transformation, i.e., the diagrams (4.1.5)
and (4.1.6). The middle rectangle is commutative by the naturality of ι :
IdC

∼=
I 2.
The triangle identity (2.1.2) for (Ist, ιst) follows from the triangle identity for (I, ι)
and the naturality of the strong monoidal functor (I, I2, I0). So

Cst, Ist, ιst
is an
involutive category. Moreover, if the involutive structure on C is strict (resp., trivial),
then the same is true for Cst.
Next we equip the involution functor Ist with the strict monoidal functor structure

(Ist)2, (Ist)0

as follows.
•
The structure morphism
∅
(Ist)0  ∅= Ist(∅)
is the identity morphism of ∅in Cst, i.e., Id1 ∈C.

5.4
Strictiﬁcation of Involutive Monoidal Categories
133
•
For objects x, y ∈Cst, the structure morphism
Istx ⊗st Isty
(Ist)2  Ist

x ⊗st y

is the identity morphism of

Ix1, . . . , Ixm, Iy1, . . . , Iyn

in Cst.
The diagrams (1.2.12), (1.2.13), and (1.2.14) for

Ist, (Ist)2, (Ist)0

are commuta-
tive, so it is a strict monoidal functor.
To see that ιst is a monoidal natural transformation, ﬁrst observe that the
unit diagram (4.1.6) is commutative because every morphism in it is the identity
morphism. The diagram (4.1.5) is commutative because
ιst
x⊗sty = ιst
x ⊗st ιst
y ,
which in turn is true by the naturality of the monoidal structure (α, λ, ρ) in C and
the deﬁnition (5.4.3) of ⊗st on morphisms. So Cst is an involutive strict monoidal
category.
Next we equip the strong monoidal functor L : C

Cst with the distributive
law
νL : LI

IstL
deﬁned componentwise as the identity morphism
for x ∈C. This makes (L, νL) into a strict involutive functor. Moreover, an
inspection shows that the diagrams (4.3.3) and (4.3.4) are commutative, so L is
a strict involutive strong monoidal functor.
We now equip the strong monoidal functor R : Cst

C with the distributive
law
νR : RIst

IR
deﬁned componentwise as the unique isomorphism
(5.4.5)
RIst(x) =

Istx
⊗
νR
x
∼=
 I

x⊗
= IR(x)
given by the strong monoidal functor structure of (I, I2, I0).
•
The distributive law axiom (2.2.2) for (R, νR) holds because ι : IdC

∼=
I 2
is a monoidal natural transformation, i.e., the diagrams (4.1.5) and (4.1.6). So
(R, νR) is an involutive functor.

134
5
Coherence of Involutive Monoidal Categories
•
Furthermore, the diagram (4.3.4) is commutative because each path is equal to
I0 : 1

I1.
•
The diagram (4.3.3) is commutative because (I, I2, I0) is a monoidal functor, i.e.,
the diagrams (1.2.12), (1.2.13), and (1.2.14).
So R is an involutive strong monoidal functor.
It remains to check that the unit ϵ
: IdC

RL and the counit η :
LR

IdCst are both involutive natural transformations and monoidal natural
transformations. The axiom (2.3.2) for the counit η to be an involutive natural
transformation is the diagram below.
The left vertical isomorphism is νR
x , while the right vertical isomorphism is (νR
x )−1
by the deﬁnition of Ist applied to a morphism (5.4.4). So the above diagram is
commutative. Similarly, that the counit η is a monoidal natural transformation
follows from the deﬁnition of ⊗st on morphisms (5.4.3). The unit ϵ = IdIdC is
both involutive and monoidal because it is the identity natural transformation of the
identity functor.
□
5.5
Free Involutive Monoidal Categories of Involutive
Categories
The purpose of this section is to give an explicit description of the free involutive
monoidal category generated by an involutive category. Most of the constructions
and proofs are adapted from Section 5.1.
DEFINITION 5.5.1. Suppose S is a class equipped with an assignment
IS : S

S,
and 1, I, and ⊗are symbols that do not appear in S.
(1) The class Wi
im(S) is deﬁned recursively by the following three conditions:
(i) S ⊆Wi
im(S) and 1 ∈Wi
im(S).
(ii) If X, Y ∈Wi
im(S), then X ⊗Y ∈Wi
im(S). The operation ⊗is not
associative by deﬁnition.
(iii) If X ∈Wi
im(S) \ S, then IX ∈Wi
im(S).
For an element x ∈S, we deﬁne Ix = ISx.

5.5
Free Involutive Monoidal Categories of Involutive Categories
135
(2) For X ∈Wi
im(S), its underlying word
word(X) ∈

k≥0
S×k
is the possibly-empty ﬁnite sequence in S deﬁned recursively by the following
four conditions:
(i) word(1) = ∅∈S×0, the empty sequence.
(ii) word(x) = x for x ∈S.
(iii) If X, Y ∈Wi
im(S) with word(X) and word(Y) already deﬁned, then
word(X ⊗Y) = word(X)word(Y),
the concatenation of word(X) and word(Y). Concatenation is associative
by deﬁnition.
(iv) If X ∈Wi
im(S) with word(X) = (x1, . . . , xm) ∈S×m, then
word(IX) =

∅
if word(X) = ∅,
(Ix1, . . . , Ixm)
if m > 0.
EXAMPLE 5.5.2. If x, y ∈S, then
word

I 4
I 2(I1 ⊗x) ⊗y

=

I 6
Sx, I 4
Sy

,
where I n = I · · · I with n > 0 copies of I.
⋄
The next deﬁnition is similar to Deﬁnition 5.1.3 except for the involutive
structure.
DEFINITION 5.5.3. Suppose (C, IC, ιC) is an involutive category. Deﬁne the
category Fi
im(C) with extra structures as follows.
Objects: Ob

Fi
im(C)

=
Wi
im

Ob(C)

, where Ob(C) is equipped with the
assignment IC : Ob(C)

Ob(C).
Morphisms: For X, Y ∈Ob

Fi
im(C)

with
word(X) = (x1, . . . , xj) ∈Ob(C)×j
and
word(Y) = (y1, . . . , yk) ∈Ob(C)×k,
it has the morphism set
Fi
im(C)(X; Y) =
⎧
⎪⎨
⎪⎩
j
i=1
C(xi, yi)
if j = k,
∅
if j ̸= k,

136
5
Coherence of Involutive Monoidal Categories
where an empty product, for the case j = 0, is taken as a one-point set. Identity
morphisms and composition are deﬁned in C.
Monoidal Product: For objects X, Y ∈Ob

Fi
im(C)

, their monoidal product X ⊗
Y is deﬁned as part of the deﬁnition of the class Wi
im

Ob(C)

. The monoidal
product on morphisms in Fi
im(C) is deﬁned as concatenation of ﬁnite sequences
of morphisms in C.
Monoidal Unit: The monoidal unit in Fi
im(C) is 1 ∈Wi
im

Ob(C)

.
Associativity Isomorphisms: For X, Y as above and Z ∈Ob

Fi
im(C)

with
word(Z) = (z1, . . . , zl) ∈Ob(C)×l,
the associativity isomorphism
(X ⊗Y) ⊗Z
αX,Y,Z
∼=
 X ⊗(Y ⊗Z)
∈Fi
im(C)
is deﬁned as

{Idxi}j
i=1, {Idyi}k
i=1, {Idzi}l
i=1

∈
j
i=1
C(xi, xi) ×
k
i=1
C(yi, yi) ×
l
i=1
C(zi, zi).
Left and Right Units: For X as above, the left and the right unit isomorphisms
1 ⊗X
λX
∼=
 X
X ⊗1
ρX
∼=

∈Fi
im(C)
are both given by {Idxi}j
i=1.
Involution Functor: Deﬁne a functor
I : Fi
im(C)

Fi
im(C)
by the assignment X


IX on objects, and the function
on morphisms. If j = 0, then this function is the unique function between two
one-point sets.

5.5
Free Involutive Monoidal Categories of Involutive Categories
137
Unit: Deﬁne a natural isomorphism
ι : IdFi
im(C)

∼=
I 2
by
ιX =

ιC
xi
j
i=1 : X

∼=
I 2X ∈Fi
im(C)(X; I 2X) =
j
i=1
C

xi, I 2
Cxi

for each object X ∈Fi
im(C) as above.
Involutive Monoidal Structure: Deﬁne the morphism I0 : 1

I1 as the
unique isomorphism in
Fi
im(C)(1; I1) = {∗}.
Finally, for objects X, Y ∈Fi
im(C) as above, deﬁne the isomorphism
IX ⊗IY
(I2)X,Y
∼=
 I(X ⊗Y)
∈Fi
im(C)

IX ⊗IY, I(X ⊗Y)

as

{IdICxi}j
i=1, {IdICyi}k
i=1

∈
j
i=1
C

ICxi, ICxi

×
k
i=1
C

ICyi, ICyi

.
This ﬁnishes the deﬁnition of Fi
im(C).
An inspection of the diagrams in Explanation 4.1.2 establishes the following.
LEMMA 5.5.4. For each involutive category (C, IC, ιC), the tuple

(Fi
im(C), ⊗, 1, α, λ, ρ), (I, I2, I0), ι

in Deﬁnition 5.5.3 is an involutive monoidal category.
DEFINITION 5.5.5. For each involutive category C, denote by
C
εC
 Fi
im(C)
the full and faithful embedding given by
•
the inclusion Ob(C) ⊆Wi
im

Ob(C)

on objects, and

138
5
Coherence of Involutive Monoidal Categories
•
the identity function
C(x, y)
Id
 Fi
im(C)(x; y)
on morphism sets for objects x, y ∈C.
The following observation says that Fi
im(C) is the free involutive monoidal
category generated by an involutive category C. The proof is adapted from that of
Theorem 5.1.13.
THEOREM 5.5.6. Suppose (F, νF ) : C

D is an involutive functor with C
an involutive category and D an involutive monoidal category. Then there exists an
involutive strict monoidal functor
Fi
im(C)
F
 D
such that the following three statements hold.
(1) F extends F in the sense that F ◦εC = F.
(2) If F is a strict involutive functor, then so is F, which is furthermore unique.
(3) As an involutive strong monoidal functor extending F, F is unique up to an
involutive monoidal natural isomorphism.
PROOF. On the objects in Fi
im(C), F is deﬁned recursively as follows:
•
F(x) = F(x) for x ∈Ob(C) ⊆Ob

Fi
im(C)

.
•
F(1) = 1D, the monoidal unit in D.
•
For X, Y ∈Ob

Fi
im(C)

with F(X), F(Y) ∈D already deﬁned, we set
F(X ⊗Y) = F(X) ⊗F(Y),
F(IX) =

F(IX)
if X ∈Ob(C),
IDF(X)
if X ∈Ob

Fi
im(C)

\ Ob(C).
To deﬁne F on morphisms, we call an object in Fi
im(C) reduced if either
(i) it is 1, or
(ii) it has the form

· · · (x1 ⊗x2) ⊗· · ·

⊗xk
for some k > 0 and objects x1, . . . , xk ∈C, where the left half of each pair of
parentheses is at the front.

5.5
Free Involutive Monoidal Categories of Involutive Categories
139
A basic isomorphism in Fi
im(C) is deﬁned as in Deﬁnition 5.1.7 but with ι omitted.
For each object X ∈Fi
im(C), there exists a canonical choice of a basic isomorphism
X
δX
∼=
 X′
∈Fi
im(C)
with X′ reduced. The proof is the same as for Lemma 5.1.10, except that in step (2),
the morphism
δi
2 : I mi
C xi

I mi
C xi
is now the identity morphism IdI mi
C xi if xi ∈C, which implies I mi
C xi ∈C. For
instance, if x and y are objects in C, then an example of a basic isomorphism δX
with a reduced codomain is the following composite.
Following Lemma 5.1.11, there is an equality
word(X) = word(X′)
because none of the constituent morphisms of δX = δ4δ3δ2δ1 changes the under-
lying words. The equality of underlying words implies the equality of morphism
sets
Fi
im(C)(X; Y) = Fi
im(C)(X′; Y ′)
with X′ and Y ′ reduced objects. As in (5.1.15), the last equality allows us to deﬁne
the morphism
(5.5.7)
F(f ) = F(δY )−1 ◦F(f ′) ◦F(δX)
for f ∈Fi
im(C)(X; Y). This makes
F : Fi
im(C)

D
into a functor extending F.

140
5
Coherence of Involutive Monoidal Categories
The functor F is made into an involutive functor with the distributive law
νF : FI

IDF
deﬁned componentwise as

FI(X)
νF
X
 IDF(X)

=

νF
X
if X ∈Ob(C),
IdIDF(X)
if X ∈Ob

Fi
im(C)

\ Ob(C).
The functor F is assigned the strict monoidal functor structure. This makes F into
an involutive strict monoidal functor. If F is a strict involutive functor–i.e., if νF
is the identity natural transformation–then so is F. The uniqueness statements of F
are proved exactly as in the last two paragraphs of the proof of Theorem 5.1.13. □
Recall from Deﬁnition 3.1.1 that ICat0 is the category of small involutive
categories and strict involutive functors. Also recall from Deﬁnition 4.3.6 that
IMCat0 is the category of small involutive monoidal categories and strict involutive
strict monoidal functors.
COROLLARY 5.5.8. There is an adjunction
ICat0
Fi
im
 IMCat0
U

whose right adjoint U forgets about the monoidal structure.
PROOF. For each involutive category C, the functor εC : C

Fi
im(C) is
a strict involutive functor. For a strict involutive functor G : C

D between
small involutive categories, we deﬁne
Fi
im(G) : Fi
im(C)

Fi
im(D)
as the unique strict involutive strict monoidal functor that makes the diagram
in ICat0 commutative. This deﬁnes the functor
Fi
im : ICat0

IMCat0.

5.6
Free Involutive Strict Monoidal Categories of InvolutiveCategories
141
Theorem 5.5.6 shows that (Fi
im, U) satisﬁes the universal property for an adjunc-
tion, as stated in [Mac98] (IV.1 Theorem 2(i)).
□
5.6
Free Involutive Strict Monoidal Categories of Involutive
Categories
The purpose of this section is to give an explicit description of the free involutive
strict monoidal category generated by an involutive category. This is a simpliﬁcation
of Section 5.5, as Section 5.2 is a simpliﬁcation of Section 5.1. We also observe
that, for an involutive category, the free involutive monoidal category is equivalent
to the free involutive strict monoidal category via a strict involutive strict monoidal
equivalence.
DEFINITION 5.6.1. Suppose S is a class equipped with an assignment
IS : S

S,
and I is a symbol that does not appear in S.
(1) The class Wi
istm(S) is deﬁned recursively by the following conditions:
(i) ∅∈Wi
istm(S), where ∅is the empty sequence.
(ii) S ⊆Wi
istm(S).
(iii) If X ∈Wi
istm(S) \ S, then IX ∈Wi
istm(S), where I∅= ∅.
(iv) If X, Y ∈Wi
istm(S), then so is their concatenation XY. Concatenation is
associative by deﬁnition.
For an element x ∈S, we deﬁne Ix = ISx.
(2) For X ∈Wi
istm(S), its underlying word
word(X) ∈

k≥0
S×k
is deﬁned as in Deﬁnition 5.5.1 with word(∅) = ∅.
DEFINITION 5.6.2. Suppose (C, IC, ιC) is an involutive category. Deﬁne the
category Fi
istm(C) with extra structures as in Deﬁnition 5.5.3, but with the following
modiﬁcations:
Objects: Ob

Fi
istm(C)

= Wi
istm

Ob(C)

, where Ob(C) is equipped with the
assignment IC : Ob(C)

Ob(C).
Monoidal Product: For objects X, Y ∈Ob

Fi
istm(C)

, their monoidal product
X ⊗Y is deﬁned as their concatenation, which is part of the deﬁnition of the
class Wi
istm

Ob(C)

.

142
5
Coherence of Involutive Monoidal Categories
Monoidal Unit: The monoidal unit in Fi
istm(C) is ∅.
Monoidal Structure Isomorphisms: Each component of the associativity isomor-
phism α, the left unit isomorphism λ, and the right unit isomorphism ρ, is an
identity morphism.
Involutive Monoidal Structure: I0 : ∅

∅is the identity morphism.
An inspection establishes the following.
LEMMA 5.6.3. For each involutive category C, the tuple

(Fi
istm(C), ⊗, ∅, α, λ, ρ), (I, I2, I0), ι

in Deﬁnition 5.6.2 is an involutive strict monoidal category.
DEFINITION 5.6.4. For each involutive category C, denote by
C
εst
C
 Fi
istm(C)
the full and faithful embedding given by
•
the inclusion Ob(C) ⊆Wi
istm

Ob(C)

on objects, and
•
the identity function
C(x, y)
Id
 Fi
istm(C)(x; y)
on morphism sets for objects x, y ∈C.
A simpliﬁed version of the proof of Theorem 5.5.6 establishes the following
result.
THEOREM 5.6.5. Suppose (F, νF ) : C

D is a strict involutive functor
with C an involutive category and D an involutive strict monoidal category. Then
there exists a unique strict involutive strict monoidal functor
Fi
istm(C)
F
 D
such that F ◦εst
C = F.
DEFINITION 5.6.6. For an involutive category C, the involutive strict monoidal
category Fi
istm(C) is called the free involutive strict monoidal category generated
by C.
Next we observe that the free involutive monoidal category Fi
im(C) and the free
involutive strict monoidal category Fi
istm(C) are equivalent.

5.7
Exercises and Notes
143
COROLLARY 5.6.7. For each involutive category C, there is a canonical strict
involutive strict monoidal functor
Fi
im(C)
θ
 Fi
istm(C)
that is also an equivalence of categories.
PROOF. The functor θ is the unique strict involutive strict monoidal functor that
extends εst
C, in the sense that the diagram
is commutative, given by Theorem 5.5.6. It exists because εst
C is a strict involutive
functor. As in the proof of Theorem 5.2.8, the functor θ is the identity function
on morphism sets, and is surjective on objects. Therefore, θ is an equivalence of
categories.
□
5.7
Exercises and Notes
(1) In the last paragraph of the proof of Theorem 5.1.13, check that σ : F

G
is an involutive monoidal natural isomorphism.
(2) Write down a detailed proof of Theorem 5.2.6.
(3) Prove Lemma 5.3.3.
(4) In the proof of Theorem 5.4.1, check:
•
The triangle identity (2.1.2) for (Ist, ιst).
•
That the counit η is a monoidal natural transformation.
(5) Write down a detailed proof of Theorem 5.6.5.
(6) Prove that there is a monad in Cat whose algebras are exactly small involutive
monoidal categories. Do the same with monoidal replaced by strict monoidal.
(7) Repeat the previous exercise with Cat replaced by ICat0.
(8) Prove the strict involutive variants of all of the main results in this chapter. In
other words:
•
Give explicit constructions of
– the free strict involutive monoidal category and
– the free strict involutive strict monoidal category
of a category.

144
5
Coherence of Involutive Monoidal Categories
•
Prove that they are equivalent via a canonical strict involutive strict monoidal
functor, and so forth.
Notes. Theorem 5.2.8 is the involutive analogue of Theorem 1.2 in [JS93], which
shows the existence of a strict monoidal equivalence from the free monoidal cate-
gory of a category to its free strict monoidal category. The monoidal category It(C)
in Deﬁnition 5.3.1 is the same one deﬁned by Mac Lane [Mac98] (VII.2 Corollary).
In the proof of Theorem 5.4.1, in the deﬁnitions of the morphism Istf in (5.4.4) and
of the distributive law νR
x in (5.4.5), the uniqueness of the isomorphisms is due to
Epstein’s Coherence Theorem [Eps66] restricted to monoidal categories.

Chapter 6
Coherence of Involutive Symmetric
Monoidal Categories
The purpose of this chapter is to study coherence of involutive symmetric monoidal
categories. Most of the constructions are adapted from Chapter 5, where we studied
coherence of involutive monoidal categories. In Section 6.1 and Section 6.2, we
give explicit constructions of the free involutive symmetric monoidal category
and of the free involutive strict symmetric monoidal category generated by a
category. We observe that they are equivalent via a strict involutive strict symmetric
monoidal functor. In Section 6.3 we show that in a small involutive symmetric
monoidal category, every suitably deﬁned formal diagram is commutative. In
Section 6.4 we show that every involutive symmetric monoidal category can be
strictiﬁed to an involutive strict symmetric monoidal category via an involutive
adjoint equivalence involving involutive strong symmetric monoidal functors. The
remaining two sections contain explicit constructions of the free involutive (strict)
symmetric monoidal category generated by an involutive category.
Our strictiﬁcation results–namely, Theorem 5.4.1 in the non-symmetric case
and Theorem 6.4.1 in the symmetric case–are important in applications. When
involutive (symmetric) monoidal categories are used in practice, for example in
[BBS19, BSW19b], one often ignores parentheses in multiple monoidal products
and uses expressions such as x ⊗y ⊗z. What this really means is that, if the ambient
involutive (symmetric) monoidal category C is not strict monoidal, such as Vect(C)
and Chain(C), then one ﬁrst replaces C by an involutively equivalent involutive
strict (symmetric) monoidal category Cst, in which multiple monoidal products
are unambiguous even without parentheses. In the literature, this ﬁrst step of
replacing C by an involutively equivalent Cst is usually performed without explicit
comments. Our strictiﬁcation results, for both involutive monoidal categories and
involutive symmetric monoidal categories, ensure that this strictiﬁcation exists and
is canonical.
© The Author(s), under exclusive license to Springer Nature Switzerland AG 2020
D. Yau, Involutive Category Theory, Lecture Notes in Mathematics 2279,
https://doi.org/10.1007/978-3-030-61203-0_6
145

146
6
Coherence of Involutive Symmetric Monoidal Categories
6.1
Free Involutive Symmetric Monoidal Categories
The purpose of this section is to give an explicit construction of the free involutive
symmetric monoidal category generated by a category. First we need some nota-
tions.
The symmetric group on k letters is denoted by k. Its unit is denoted by idk or
simply id. For a sequence of variables (y1, . . . , yk) and a permutation σ ∈k, we
deﬁne the σ-action
(y1, . . . , yk)σ =

yσ(1), . . . , yσ(k)

.
We also need the following notations for block permutations and block sums.
DEFINITION 6.1.1. Suppose n ≥1, ki ≥0 for 1 ≤i ≤n, and k = k1 + · · · +
kn.
(1) For σ ∈n, the block permutation
σ⟨k1, . . . , kn⟩∈k
is deﬁned by

σ⟨k1, . . . , kn⟩

(k1 + · · · + ki−1 + j) = kσ −1(1) + · · · + kσ −1(σ(i)−1)



0 if σ(i)=1
+j
for 1 ≤j ≤ki and 1 ≤i ≤n.
(2) For τi ∈ki for 1 ≤i ≤n, the block sum
τ1 × · · · × τn ∈k
is deﬁned by

τ1 × · · · × τn

(k1 + · · · + ki−1 + j) = k1 + · · · + ki−1



0 if i=1
+τi(j)
for 1 ≤j ≤ki and 1 ≤i ≤n.
EXPLANATION 6.1.2. The block permutation σ⟨k1, . . . , kn⟩permutes n consec-
utive blocks of lengths k1, . . . , kn as σ permutes {1, . . . , n}, leaving the relative
order within each block unchanged. The block sum τ1 × · · · × τn leaves the order of
the n consecutive blocks unchanged and only permutes within the ith block using τi
for 1 ≤i ≤n.
⋄
The following deﬁnition is the symmetric analogue of Deﬁnition 5.1.3.

6.1
Free Involutive Symmetric Monoidal Categories
147
DEFINITION 6.1.3. Suppose C is a category. Deﬁne the category Fisym(C) with
extra structures as follows.
Objects: Ob

Fisym(C)

= Wim

Ob(C)

, the class of involutive monoidal words
generated by Ob(C) as in Deﬁnition 5.1.1.
Morphisms: For X, Y ∈Ob

Fisym(C)

with underlying words
word(X) = (m1, x1) · · · (mj, xj) ∈

Z≥0 × Ob(C)
×j,
word(Y) = (n1, y1) · · · (nk, yk) ∈

Z≥0 × Ob(C)
×k
(6.1.4)
as in (5.1.4), the morphism set Fisym(C)(X; Y) is the set of pairs

σ; {fi}j
i=1

∈j ×
j
i=1
C(xi, yσ(i))
such that
(m1, . . . , mj) ≡(n1, . . . , nj)σ (mod 2)
if j = k, and is empty if j ̸= k. An empty product, for the case j = 0, is taken as
a one-point set. We call σ the underlying permutation of the morphism (σ; {fi}).
Identities: Identity morphisms are deﬁned using identity permutations and identity
morphisms in C.
Composition: Categorical composition is deﬁned using multiplication in the
symmetric groups and composition in C, i.e.,
(6.1.5)

τ; {gi}

◦

σ; {fi}

=

τσ; {gσ(i)fi}

.
Monoidal Product: For X, Y ∈Ob

Fisym(C)

, their monoidal product X ⊗Y is
deﬁned as part of the deﬁnition of the class Wim

Ob(C)

. The monoidal product
on morphisms in Fisym(C) is deﬁned using the block sum inclusion
l × j

l+j,
(τ; σ) 
 τ × σ
and concatenation of ﬁnite sequences of morphisms in C. In other words, it is
deﬁned as
(6.1.6)

τ; {gi}l
i=1

⊗

σ; {fi}j
i=1

=

τ × σ; {gi}l
i=1, {fi}j
i=1

.
Monoidal Unit: The monoidal unit in Fisym(C) is 1 ∈Wim

Ob(C)

.

148
6
Coherence of Involutive Symmetric Monoidal Categories
Monoidal Structure Isomorphisms: The associativity isomorphism α, the left
unit isomorphism λ, and the right unit isomorphism ρ are deﬁned using identity
permutations and identity morphisms in C.
Symmetry: Deﬁne a natural isomorphism with components
(6.1.7)
X ⊗Y
ξX,Y
 Y ⊗X
for
X, Y ∈Ob

Fisym(C)

given by
ξX,Y =

(1, 2)⟨j, k⟩; {Idxi}j
i=1, {Idyi}k
i=1

.
Here (1, 2)⟨j, k⟩∈j+k is the block permutation induced by the transposition
(1, 2) ∈2 that swaps the ﬁrst j entries as a single interval with the last k entries
as a single interval.
Involution Functor: Deﬁne a functor
I : Fisym(C)

Fisym(C)
by the assignment X


IX on objects, and the identity function
Fisym(X; Y)
Id
 Fisym(IX; IY)
on morphism sets.
Unit: Deﬁne a natural isomorphism
ι : IdFisym(C)

∼=
I 2
using identity permutations and identity morphisms in C.
Involutive Monoidal Structure: Deﬁne the morphism I0 : 1

I1 as the
unique isomorphism in
Fisym(C)(1; I1) = {∗}.
Finally, for objects X, Y ∈Fisym(C), the isomorphism
IX ⊗IY
(I2)X,Y
∼=
 I(X ⊗Y)
∈Fim(C)

IX ⊗IY, I(X ⊗Y)

is deﬁned using identity permutations and identity morphisms in C.
LEMMA 6.1.8. For each category C, the tuple

6.1
Free Involutive Symmetric Monoidal Categories
149

(Fisym(C), ⊗, 1, α, λ, ρ, ξ), (I, I2, I0), ι

in Deﬁnition 6.1.3 is an involutive symmetric monoidal category.
PROOF. An inspection shows that Fisym(C) is a symmetric monoidal category,
that

Fisym(C), I, ι

is an involutive category, and that the diagrams in Explana-
tion 4.1.2 are commutative.
□
DEFINITION 6.1.9. For each category C, denote by
C
εC
 Fisym(C)
the full and faithful embedding given by
•
the inclusion Ob(C) ⊆Wim

Ob(C)

on objects, and
•
the identity function
C(x, y)
Id
 Fisym(C)(x; y)
on morphism sets for objects x, y ∈C.
The following observation says that Fisym(C) is the free involutive symmetric
monoidal category generated by C.
THEOREM 6.1.10. Suppose F : C

D is a functor with C a category and
D an involutive symmetric monoidal category. Then there exists a unique strict
involutive strict symmetric monoidal functor
Fisym(C)
F
 D
such that F ◦εC = F.
PROOF. This proof is adapted from that of Theorem 5.1.13, so we only point out
the modiﬁcations, which involve what F does to morphisms. Using the notations in
Deﬁnition 6.1.3, consider a morphism f ∈Fisym(C)(X; Y) of the form

σ; {fi}j
i=1

∈j ×
j
i=1
C(xi, yσ(i))
such that
(m1, . . . , mj) ≡(n1, . . . , nj)σ (mod 2).

150
6
Coherence of Involutive Symmetric Monoidal Categories
Then the morphism F(f ) : F(X)

F(Y) in D is deﬁned as the composite
(6.1.11)
in (5.1.15), but with an extra isomorphism
between F(f ′) and F(δY )−1. Both the domain and the codomain of σ have the
left-normalized parenthesization as in (5.1.8). The isomorphism σ is the unique
natural isomorphism guaranteed by Mac Lane’s Coherence Theorem [Mac98]
(XI.1 Theorem 1) for the symmetric monoidal category D, corresponding to
the permutation σ ∈j. It involves only identity morphisms, the associativity
isomorphism, the symmetry isomorphism, their inverses, monoidal products, and
composites in D.
The assignment F still preserves identity morphisms. To check that F preserves
composition of morphisms, suppose g ∈Fisym(C)(Y; Z) is a morphism of the form

τ; {gi}j
i=1

∈j ×
j
i=1
C(yi, zτ(i))
such that
(n1, . . . , nj) ≡(p1, . . . , pj)τ (mod 2)
with
word(Z) = (p1, z1) · · · (pj, zj) ∈

Z≥0 × Ob(C)
×j.
To show that
F(g) ◦F(f ) = F(g ◦f ),
we paste the diagrams deﬁning F(f ) and F(g) together along the edges labeled by
F(δY )±1. The resulting pasted diagram is equal to the one deﬁning F(g◦f ) because

6.1
Free Involutive Symmetric Monoidal Categories
151
the diagram
in D, in which all four objects have the left-normalized parenthesization, is
commutative by the naturality of the natural isomorphism σ. So F is a functor.
Equipped with the identity distributive law and the strict monoidal functor
structure, F becomes a strict involutive strict monoidal functor. It is a symmetric
monoidal functor because of the σ factor in the deﬁnition of F(f ) in (6.1.11).
To check that F is unique, observe that the original morphism f =

σ; {fi}

factors as
(6.1.12)
in Fisym(C), in which the three objects in the lower half have the left-normalized
parenthesization as in (5.1.8). The strict involutive strict symmetric monoidal
functor requirement then forces F(f ) to be equal to the composite in (6.1.11),
proving the uniqueness of F.
□
Recall from Deﬁnition 4.3.6 that ISymCat0 is the category whose objects are
small involutive symmetric monoidal categories and whose morphisms are strict
involutive strict symmetric monoidal functors.
COROLLARY 6.1.13. There is an adjunction
Cat
Fisym  ISymCat0
U

whose right adjoint U forgets about the involutive structure and the symmetric
monoidal structure.
PROOF. For a functor G : C

D between small categories, we deﬁne

152
6
Coherence of Involutive Symmetric Monoidal Categories
Fisym(G) : Fisym(C)

Fisym(D)
as the unique strict involutive strict symmetric monoidal functor that makes the
diagram
in Cat commutative. This deﬁnes the functor
Fisym : Cat

ISymCat0.
Theorem 6.1.10 shows that the pair of functors (Fisym, U) satisﬁes the universal
property for an adjunction, as stated in [Mac98] (IV.1 Theorem 2(i)).
□
DEFINITION 6.1.14. For a category C, the involutive symmetric monoidal cate-
gory Fisym(C) is called the free involutive symmetric monoidal category generated
by C.
EXAMPLE 6.1.15 (Free Involutive Symmetric Monoidal Category on One
Object). Suppose 1 is the category with one object x and only the identity
morphism of x. The free involutive symmetric monoidal category Fisym(1)
generated by one object x has object set Wim({x}), which is the set of involutive
monoidal words generated by {x}. For each involutive symmetric monoidal category
D and each object z ∈D, there is a unique functor
F : 1

D
such that
F(x) = z.
By Theorem 6.1.10, there exists a unique strict involutive strict symmetric monoidal
functor
F : Fisym(1)

D
such that
F(x) = z.
Since 1 is a discrete category with one object, a typical morphism f
:
X

Y in Fisym(1) has the form
f =

σ; {Idx}j
i=1

∈j ×
j
i=1
1(x, x) ∼= j
such that, using the notations in (6.1.4),
(6.1.16)
(m1, . . . , mj) ≡(n1, . . . , nj)σ (mod 2).

6.2
Free Involutive Strict Symmetric Monoidal Categories
153
It is uniquely determined by its underlying permutation σ. It follows that two
morphisms in Fisym(1) with the same domain and the same codomain are equal
if and only if their underlying permutations are equal.
⋄
More generally, we have the following result.
COROLLARY 6.1.17. For each discrete category C, two morphisms in Fisym(C)
with the same domain and the same codomain are equal if and only if their
underlying permutations are equal.
PROOF. The argument is the same as in the case 1. Indeed, a typical morphism
f : X

Y in Fisym(C) has the form
f =

σ; {Idxi}j
i=1

∈j ×
j
i=1
C(xi, xi) ∼= j
such that (6.1.16) holds, because C only has identity morphisms. So it is uniquely
determined by its underlying permutation.
□
6.2
Free Involutive Strict Symmetric Monoidal Categories
The ﬁrst purpose of this section is to give an explicit description of the free
involutive strict symmetric monoidal category generated by a category. Then we
show that the free involutive symmetric monoidal category is equivalent to the free
involutive strict symmetric monoidal category via a strict involutive strict symmetric
monoidal equivalence.
DEFINITION 6.2.1. Suppose C is a category. Deﬁne the category Fiss(C) with
extra structures as in Deﬁnition 6.1.3, but with the following modiﬁcations:
Objects: Ob

Fiss(C)

= Wistm

Ob(C)

as in Deﬁnition 5.2.1.
Monoidal Product: For objects X, Y ∈Ob

Fiss(C)

, their monoidal product X⊗
Y is deﬁned as their concatenation, which is part of the deﬁnition of the class
Wistm

Ob(C)

.
Monoidal Unit: The monoidal unit in Fiss(C) is ∅.
Monoidal Structure Isomorphisms: Each component of the associativity isomor-
phism α, the left unit isomorphism λ, and the right unit isomorphism ρ, is an
identity morphism.
Involutive Monoidal Structure: I0 : ∅

∅is the identity morphism.
An inspection establishes the following.
LEMMA 6.2.2. For each category C, the tuple

(Fiss(C), ⊗, ∅, α, λ, ρ, ξ), (I, I2, I0), ι


154
6
Coherence of Involutive Symmetric Monoidal Categories
in Deﬁnition 6.2.1 is an involutive strict symmetric monoidal category.
DEFINITION 6.2.3. For each category C, denote by
C
εst
C
 Fiss(C)
the full and faithful embedding given by
•
the inclusion Ob(C) ⊆Wistm

Ob(C)

on objects, and
•
the identity function
C(x, y)
Id
 Fiss(C)(x; y)
on morphism sets for objects x, y ∈C.
An adaptation of the proof of Theorem 6.1.10 establishes the following result.
THEOREM 6.2.4. Suppose F : C

D is a functor with C a category and D
an involutive strict symmetric monoidal category. Then there exists a unique strict
involutive strict symmetric monoidal functor
Fiss(C)
F
 D
such that F ◦εst
C = F.
DEFINITION 6.2.5. For a category C, the involutive strict symmetric monoidal
category Fiss(C) is called the free involutive strict symmetric monoidal category
generated by C.
Next we observe that the free involutive symmetric monoidal category and the
free involutive strict symmetric monoidal category are equivalent.
THEOREM 6.2.6. For each category C, there is a canonical strict involutive
strict symmetric monoidal functor
Fisym(C)
θ
 Fiss(C)
that is also an equivalence of categories.
PROOF. The functor θ is the unique strict involutive strict symmetric monoidal
functor that makes the diagram

6.3
Commutativity of Formal Diagrams
155
commutative, given by Theorem 6.1.10. The same argument as in the proof of
Theorem 5.2.8 shows that θ is an equivalence of categories.
□
6.3
Commutativity of Formal Diagrams
The purpose of this section is to prove that all formal diagrams, suitably deﬁned, in
an involutive symmetric monoidal category commute. Recall from Deﬁnition 5.3.1
that for a small involutive monoidal category C, It(C) is the involutive monoidal
category whose objects are pairs (m, T ) with m
≥
0 an integer and T
:
C×m

C a functor, and whose morphisms are natural transformations.
DEFINITION 6.3.1. Suppose C is a small involutive symmetric monoidal cate-
gory with symmetry isomorphism ξ. We equip the involutive monoidal category
It(C) with the natural isomorphism
(T ⊗U)(x, y) = T (x) ⊗U(y)
ξT (x),U(y)
 U(y) ⊗T (x) = (U ⊗T )(y, x)
for (m, T ), (n, U) ∈It(C), x ∈C×m, and y ∈C×n.
Using the diagrams in Explanation 4.1.2, an inspection establishes the following.
LEMMA 6.3.2.

It(C), ξ

in Deﬁnition 6.3.1 is an involutive symmetric monoidal
category.
With 1 = {x} denoting a discrete category with one object x, the following result
is the coherence statement about the commutativity of all formal diagrams in a small
involutive symmetric monoidal category.
COROLLARY 6.3.3. Suppose C is a small involutive symmetric monoidal cate-
gory. Then the following statements hold.
(1) There exists a unique strict involutive strict symmetric monoidal functor
Fisym(1)

 It(C)
such that
(x) = (1, IdC).
(2) Each morphism f : X

Y in Fisym(1) of the form

156
6
Coherence of Involutive Symmetric Monoidal Categories
f =

σ; {Idx}j
i=1

∈j ×
j
i=1
1(x, x) ∼= j
satisfying (6.1.16) is sent by  to a natural isomorphism
(X)
φX,Y
∼=
 (Y)
: C×j

C
that involves only
•
the isomorphisms Id1C and I0 : 1C

IC1C,
•
the natural isomorphisms IdIdC, ιC, I2, α, λ, ρ, ξ, and their inverses,
•
the functors IC and ⊗, and
•
categorical composites in C.
PROOF. Since It(C) is an involutive symmetric monoidal category with an object
(1, IdC) ∈It(C), the ﬁrst assertion follows from the Coherence Theorem 6.1.10. The
second assertion follows from the factorization (6.1.12) of morphisms in Fisym(1).
□
Let us deﬁne a formal diagram in a small involutive symmetric monoidal
category C as a diagram in It(C) that is the -image of a commutative diagram
in Fisym(1). Then Corollary 6.3.3 implies that every formal diagram in a small
involutive symmetric monoidal category is commutative.
6.4
Strictiﬁcation of Involutive Symmetric Monoidal
Categories
The purpose of this section is to show that each involutive symmetric monoidal
category can be strictiﬁed to an involutive strict symmetric monoidal category.
THEOREM 6.4.1. Suppose C is an involutive symmetric monoidal category as in
Deﬁnition 4.1.1. Then there exist canonical choices of
(i) an involutive strict symmetric monoidal category Cst and
(ii) an involutive adjoint equivalence
C
L
 Cst
R

such that the following ﬁve statements hold:

6.5
Free Involutive Symmetric Monoidal Categories of Involutive Categories
157
•
The unit ϵ : IdC

RL is the identity natural transformation.
•
L is a strict involutive strong symmetric monoidal functor.
•
R is an involutive strong symmetric monoidal functor.
•
The unit and the counit of the adjunction L ⊣R are both monoidal natural
transformations and involutive natural transformations.
•
If the involutive structure on C is strict (resp., trivial)–i.e., I 2 = IdC (resp.,
I = IdC) and ι = IdIdC–then the same is true for Cst.
PROOF. Since C is an involutive symmetric monoidal category, it sufﬁces to
equip the involutive adjoint equivalence in Theorem 5.4.1 with a compatible
symmetry structure. First we equip the involutive strict monoidal category Cst with
the natural isomorphism
x ⊗st y
ξx,y
 y ⊗st x
∈Cst
for objects x, y ∈Cst, given by the composite
in C. In this composite:
•
The ﬁrst and the last isomorphisms are the unique natural isomorphisms guar-
anteed by Mac Lane’s Coherence Theorem for monoidal categories [Mac98]
(VII.2 Corollary). Each one involves only identity morphisms, the associativity
isomorphism, the left/right unit isomorphisms, their inverses, the monoidal
product, and composites.
•
The bottom isomorphism ξx⊗,y⊗is the symmetry isomorphism in C.
An inspection shows that the diagram (4.1.7) is commutative, so (Cst, ξ) is an
involutive strict symmetric monoidal category. Another inspection shows that the
adjoint functors L : C

Cst and R : Cst

C are both symmetric
monoidal functors.
□
6.5
Free Involutive Symmetric Monoidal Categories
of Involutive Categories
The purpose of this section is to give an explicit description of the free involutive
symmetric monoidal category generated by an involutive category.

158
6
Coherence of Involutive Symmetric Monoidal Categories
DEFINITION 6.5.1. Suppose (C, IC, ιC) is an involutive category. Deﬁne the
category Fi
isym(C) with extra structures as follows.
Objects: Ob

Fi
isym(C)

= Wi
im

Ob(C)

as in Deﬁnition 5.5.1, where Ob(C) is
equipped with the assignment IC : Ob(C)

Ob(C).
Morphisms: For X, Y ∈Ob

Fi
isym(C)

with
word(X) = (x1, . . . , xj) ∈Ob(C)×j
and
word(Y) = (y1, . . . , yk) ∈Ob(C)×k,
a morphism f : X

Y in Fi
isym(C) is a pair

σ; {fi}j
i=1

∈j ×
j
i=1
C

xi, yσ(i)

if j = k. No such morphisms exist if j ̸= k. We call σ the underlying permuta-
tion of the morphism (σ; {fi}). The identity morphism of X is

idj; {Idxi}j
i=1

.
Composition is deﬁned using products in the symmetric groups and composition
in C as in (6.1.5).
Monoidal Product: For objects X, Y ∈Ob

Fi
isym(C)

, the monoidal product X⊗
Y is deﬁned as part of the deﬁnition of the class Wi
im

Ob(C)

. The monoidal
product on morphisms in Fi
isym(C) is deﬁned using block sum inclusion and
concatenation of ﬁnite sequences of morphisms in C, as in (6.1.6).
Monoidal Unit: The monoidal unit in Fi
im(C) is 1 ∈Wi
im

Ob(C)

.
Monoidal Structure Isomorphisms: The associativity isomorphism, the left unit
isomorphism, and the right unit isomorphism are deﬁned using identity permu-
tations and identity morphisms in C.
Symmetry: Deﬁne a natural isomorphism
X ⊗Y
ξX,Y
 Y ⊗X
for
X, Y ∈Ob

Fi
isym(C)

as in (6.1.7) using block permutations and identity morphisms in C.
Involution Functor: Deﬁne a functor
I : Fi
isym(C)

Fi
isym(C)
by the assignment X


IX on objects, and the function

6.5
Free Involutive Symmetric Monoidal Categories of Involutive Categories
159
on morphisms. If j = 0, then this function is the unique function between two
one-point sets.
Unit: Deﬁne a natural isomorphism
ι : IdFi
isym(C)

∼=
I 2
by
ιX =

idj;

ιC
xi
j
i=1

: X

∼=
I 2X ∈Fi
isym(C)(X; I 2X)
for each object X ∈Fi
isym(C) as above, where ιC
xi : xi

∼=
I 2
Cxi is the unit in
C applied to xi.
Involutive Monoidal Structure: Deﬁne the morphism I0 : 1

I1 as the
unique isomorphism in
Fi
isym(C)(1; I1) = {∗}.
Finally, for objects X, Y ∈Fi
isym(C) as above, the isomorphism
IX ⊗IY
(I2)X,Y
∼=
 I(X ⊗Y)
∈Fi
isym(C)

IX ⊗IY, I(X ⊗Y)

is deﬁned using identity permutation and identity morphisms in C.
An inspection of the diagrams in Explanation 4.1.2 establishes the following.
LEMMA 6.5.2. For each involutive category (C, IC, ιC), the tuple

(Fi
isym(C), ⊗, 1, α, λ, ρ, ξ), (I, I2, I0), ι

in Deﬁnition 6.5.1 is an involutive symmetric monoidal category.
DEFINITION 6.5.3. For each involutive category C, denote by
C
εC
 Fi
isym(C)

160
6
Coherence of Involutive Symmetric Monoidal Categories
the full and faithful embedding given by
•
the inclusion Ob(C) ⊆Wi
im

Ob(C)

on objects, and
•
the identity function
C(x, y)
Id
 Fi
isym(C)(x; y)
on morphism sets for objects x, y ∈C.
The following observation says that Fi
isym(C) is the free involutive symmetric
monoidal category generated by an involutive category C.
THEOREM 6.5.4. Suppose (F, νF ) : C

D is a strict involutive functor
with C an involutive category and D an involutive symmetric monoidal category.
Then there exists a unique strict involutive strict symmetric monoidal functor
Fi
isym(C)
F
 D
such that F ◦εC = F.
PROOF. The proof is adapted from that of Theorem 5.5.6, so we only point out
the modiﬁcations, which involve what F does to morphisms. In the deﬁnition of a
basic isomorphism, the underlying permutation is the identity permutation. For a
morphism f ∈Fi
isym(X; Y), instead of the composite in (5.5.7), we deﬁne F(f ) as
the composite in (6.1.11). The proof of Theorem 6.1.10 shows that F is a functor.
When equipped with the identity distributive law and the strict monoidal functor
structure, F is a strict involutive strict symmetric monoidal functor. Its uniqueness
is proved exactly as in the last paragraph of the proof of Theorem 6.1.10.
□
6.6
Free Involutive Strict Symmetric Monoidal Categories
of Involutive Categories
The purpose of this section is to give an explicit description of the free involutive
strict symmetric monoidal category generated by an involutive category. We also
observe that, for an involutive category, the free involutive symmetric monoidal
category is equivalent to the free involutive strict symmetric monoidal category via
a strict involutive strict symmetric monoidal equivalence.
DEFINITION 6.6.1. Suppose (C, IC, ιC) is an involutive category. Deﬁne the
category Fi
iss(C) with extra structures as in Deﬁnition 6.5.1, but with the following
modiﬁcations:

6.6
Free Involutive Strict Symmetric Monoidal Categories of Involutive...
161
Objects: Ob

Fi
iss(C)

= Wi
istm

Ob(C)

as in Deﬁnition 5.6.1, where Ob(C) is
equipped with the assignment IC : Ob(C)

Ob(C).
Monoidal Product: For objects X, Y ∈Ob

Fi
iss(C)

, their monoidal product X⊗
Y is deﬁned as their concatenation, which is part of the deﬁnition of the class
Wi
istm

Ob(C)

.
Monoidal Unit: The monoidal unit in Fi
iss(C) is ∅.
Monoidal Structure Isomorphisms: Each component of the associativity isomor-
phism α, the left unit isomorphism λ, and the right unit isomorphism ρ, is an
identity morphism.
Involutive Monoidal Structure: I0 : ∅

∅is the identity morphism.
An inspection establishes the following.
LEMMA 6.6.2. For each involutive category C, the tuple

(Fi
iss(C), ⊗, ∅, α, λ, ρ, ξ), (I, I2, I0), ι

in Deﬁnition 6.6.1 is an involutive strict symmetric monoidal category.
DEFINITION 6.6.3. For each involutive category C, denote by
C
εst
C
 Fi
iss(C)
the full and faithful embedding given by
•
the inclusion Ob(C) ⊆Wi
istm

Ob(C)

on objects, and
•
the identity function
C(x, y)
Id
 Fi
iss(C)(x; y)
on morphism sets for objects x, y ∈C.
Essentially the same proof as that of Theorem 6.5.4 establishes the following
result.
THEOREM 6.6.4. Suppose (F, νF ) : C

D is a strict involutive functor
with C an involutive category and D an involutive strict symmetric monoidal
category. Then there exists a unique strict involutive strict symmetric monoidal
functor
Fi
iss(C)
F
 D

162
6
Coherence of Involutive Symmetric Monoidal Categories
such that F ◦εst
C = F.
DEFINITION 6.6.5. For an involutive category C, the involutive strict symmetric
monoidal category Fi
iss(C) is called the free involutive strict symmetric monoidal
category generated by C.
Next we observe that, as in the non-symmetric case, the free involutive symmetric
monoidal category and the free involutive strict symmetric monoidal category are
equivalent.
COROLLARY 6.6.6. For each involutive category C, there is a canonical strict
involutive strict symmetric monoidal functor
Fi
isym(C)
θ
 Fi
iss(C)
that is also an equivalence of categories.
PROOF. The functor θ is the unique strict involutive strict symmetric monoidal
functor that extends εst
C, in the sense that the diagram
is commutative, given by Theorem 6.5.4. It exists because εst
C is a strict involutive
functor. As in the proof of Theorem 5.2.8, the functor θ is the identity function
on morphism sets, and is surjective on objects. Therefore, θ is an equivalence of
categories.
□
6.7
Exercises
(1) For integers n ≥1 and k1, . . . , kn ≥0 with k = k1 + · · · + kn, prove the
following statements about block permutations and block sums.
•
The equality
(στ)⟨k1, . . . , kn⟩= σ⟨kτ −1(1), . . . , kτ −1(n)⟩· τ⟨k1, . . . , kn⟩∈k
holds for σ, τ ∈n.
•
The equality
(σ1τ1) × · · · × (σnτn) =

σ1 × · · · × σn

·

τ1 × · · · × τn

∈k

6.7
Exercises
163
holds for σi, τi ∈ki for 1 ≤i ≤n.
•
The equality
σ⟨k1, . . . , kn⟩·

τ1 × · · · × τn

=

τσ −1(1) × · · · × τσ −1(n)

· σ⟨k1, . . . , kn⟩
holds for σ ∈n and τi ∈ki for 1 ≤i ≤n.
(2) Prove Lemma 6.1.8.
(3) In the proof of Theorem 6.1.10, check that:
•
(6.1.12) is actually a decomposition of the morphism f =

σ; {fi}

.
•
The decomposition (6.1.12) forces F(f ) to be equal to the composite
in (6.1.11).
(4) Give a detailed proof of Theorem 6.2.4.
(5) For each of the involutive symmetric monoidal categories in Examples 4.1.12
and 4.1.13, describe explicitly:
•
the involutive strict symmetric monoidal category Cst;
•
the involutive adjoint equivalence (L, R) in Theorem 6.4.1.
(6) Prove that there is a monad in Cat whose algebras are exactly small involu-
tive symmetric monoidal categories. Do the same with symmetric monoidal
replaced by strict symmetric monoidal.
(7) Repeat the previous exercise with Cat replaced by ICat0.
(8) Give a detailed proof of Theorem 6.6.4.
(9) Prove the strict involutive variants of all of the main results in this chapter. In
other words:
•
Give explicit constructions of
– the free strict involutive symmetric monoidal category and
– the free strict involutive strict symmetric monoidal category
of a category.
•
Prove that they are equivalent via a canonical strict involutive strict symmet-
ric monoidal functor, and so forth.

Chapter 7
Categorical Gelfand–Naimark–Segal
Construction
This chapter contains a categorical analogue of the Gelfand–Naimark–Segal (GNS)
construction, which is originally a functional analytic statement. For a C∗-algebra
A, the GNS construction gives a correspondence between states on A and cyclic ∗-
representations of A. The categorical GNS correspondence, given in Theorem 7.2.7
below, is an explicit isomorphism between the category of quantum probability
objects and the category of monoid inner product objects. A quantum probability
object is a categorical abstraction of a complex unital ∗-algebra equipped with a
state over C. A monoid inner product object is a categorical abstraction of a complex
unital ∗-algebra equipped with a Hermitian form for which the equality
⟨ba, c⟩= ⟨a, b∗c⟩
holds.
In Section 7.1 we deﬁne the category of monoid inner product objects. The
main result of this section is an explicit description of the free-forgetful adjunction
between the category of reversing involutive monoids and the category of monoid
inner product objects. Quantum probability objects and the categorical GNS
construction are discussed in Section 7.2. The proofs of several statements in
Sections 7.1 and 7.2 require checking that some large diagrams are commutative.
Those proofs are given in Section 7.3.
Throughout the rest of this chapter,

(C, ⊗, 1, α, λ, ρ, ξ), (I, I2, I0), ι

denotes an involutive symmetric monoidal category as in Deﬁnition 4.1.1. It will
serve as our base category.
© The Author(s), under exclusive license to Springer Nature Switzerland AG 2020
D. Yau, Involutive Category Theory, Lecture Notes in Mathematics 2279,
https://doi.org/10.1007/978-3-030-61203-0_7
165

166
7
Categorical Gelfand–Naimark–Segal Construction
7.1
Monoid Inner Product Objects
The purposes of this section are (i) to deﬁne monoid inner product objects and (ii) to
establish a free-forgetful adjunction between the categories of reversing involutive
monoids and of monoid inner product objects. We ﬁrst deﬁne a categorical version
of an object equipped with a Hermitian form.
Recall from Deﬁnition 2.5.1 that Inv(C) is the category of involutive objects in
C. An involutive object (X, j) in C consists of an object X ∈C and an involutive
structure map j : X

IX such that
Ij ◦j = ιX : X

∼=
I 2X.
By Proposition 2.5.4(2), using the adjunction I ⊣I, an involutive object can
equivalently be described as a pair

X, j′ : IX

X

such that
j′ ◦Ij′ = ι−1
X : I 2X

∼=
X.
We will use these two equivalent descriptions of an involutive object interchange-
ably.
To deﬁne inner product objects, we ﬁrst need the following Lemma, whose proof
is given in Section 7.3.
LEMMA 7.1.1. For each object A ∈C, when equipped with the composite
(7.1.2)
in C, the pair

IA ⊗A, jIA⊗A
is an involutive object in C.
Lemma 7.1.1 is used in the next deﬁnition.
DEFINITION 7.1.3. Deﬁne the category IP(C) as follows.

7.1
Monoid Inner Product Objects
167
Objects: An object in IP(C) is a tuple

A, p, (X, jX)

,
called an inner product object in C, in which:
•
A is an object in C, called the space object.
•
(X, jX) is an involutive object in C, called the value object.
•
p is a morphism

IA ⊗A, jIA⊗A
p
 (X, jX)
of involutive objects in C, called the inner product.
We sometimes abbreviate such an inner product object to p.
Morphisms: A morphism

A, p, (X, jX)

(f,g)  
B, q, (Y, jY )

in IP(C) is a pair (f, g) in which:
•
f : A

B is a morphism in C.
•
g : (X, jX)

(Y, jY ) is a morphism of involutive objects in C.
•
The diagram
(7.1.4)
in C is commutative.
We sometimes abbreviate such a morphism to (f, g) : p

q.
Identities: The identity morphism of an object

A, p, (X, jX)

is (IdA, IdX).
Composition: Composition in IP(C) is deﬁned using composition in C and in
Inv(C).
EXAMPLE 7.1.5 (Hermitian Form as Inner Product Object). In Deﬁnition 7.1.3,
that the inner product p : IA ⊗A

X is a morphism of involutive objects in
C means that the diagram

168
7
Categorical Gelfand–Naimark–Segal Construction
(7.1.6)
is commutative.
For example, if C = Vect(C) and X = C with complex conjugation as its
involutive structure, then an inner product object (A, p, C) is exactly a Hermitian
form on the complex vector space A. Indeed, the C-linearity of
A ⊗A
p
 C
means that it is linear in the second variable and conjugate linear in the ﬁrst variable,
i.e., sesquilinear. Furthermore, the commutative diagram (7.1.6) means that p is
conjugate symmetric, i.e., satisﬁes the equality
p(y, x) = p(x, y)
for x, y ∈A. Sesquilinearity and conjugate symmetry are of course two of the
requirements for a complex inner product space.
⋄
Next we incorporate a categorical version of a unital ∗-algebra structure. Recall
from Deﬁnition 4.7.2 that RIMon(C) is the category of reversing involutive monoids
in C. By Proposition 4.7.7, a reversing involutive monoid is exactly a tuple

X, μ, 1, j : IX

X

such that:
•
(X, μ, 1) is a monoid.
•
(X, j) is an involutive object.
•
The diagrams (4.7.8) and (4.7.9) are commutative.
Examples of reversing involutive monoids include complex unital ∗-algebras and
their differential graded analogues.
DEFINITION 7.1.7. Deﬁne the category MIP(C) as follows.
Objects: An object in MIP(C) is a tuple

(A, μ, 1, j), p

,
called a monoid inner product object in C, in which:
•

A, μ, 1, j : IA

A

is a reversing involutive monoid in C.
•
p : IA ⊗A

X is an inner product object in C.
•
The diagram

7.1
Monoid Inner Product Objects
169
(7.1.8)
is commutative.
We sometimes abbreviate such an object to p. We call (A, μ, 1, j) the underlying
reversing involutive monoid of the monoid inner product object.
Morphisms: A morphism

(A, μA, 1A, jA), p

(f,g)  
(B, μB, 1B, jB), q

in MIP(C) consists of a morphism
(f, g) : p

q ∈IP(C)
such that f : A

B is also a morphism of reversing involutive monoids.
Identities: The identity morphism of

(A, μ, 1, j), p

as above is (IdA, IdX).
Composition: Composition in MIP(C) is deﬁned using composition in RIMon(C)
and in Inv(C).
EXAMPLE 7.1.9. Continuing Examples 4.7.6 and 7.1.5, a monoid inner product
object in Vect(C) of the form

A, p : A ⊗A

C

consists of
•
a complex unital ∗-algebra A, and
•
a Hermitian form p = ⟨, ⟩on A
such that the diagram (7.1.8) is commutative. In this case, (7.1.8) is the equality

a, b∗·A c

=

a ·A b, c

for a, b, c ∈A, in which b∗·A c and a ·A b are the multiplications in A and A,
respectively.
⋄
There is a forgetful functor from the category of monoid inner product objects
to the category of reversing involutive monoids. The rest of this section is about
its left adjoint, for which we need the following Lemma, whose proof is given in
Section 7.3.

170
7
Categorical Gelfand–Naimark–Segal Construction
LEMMA 7.1.10. Suppose

A, μ, 1, j : IA

A

is a reversing involutive
monoid in C. Then the composite
in C is a morphism of involutive objects in C, where IA ⊗A is equipped with the
involutive structure in Lemma 7.1.1.
LEMMA 7.1.11. The pair (A, pA) in Lemma 7.1.10 is a monoid inner product
object in C.
PROOF. In view of Lemma 7.1.10, it remains to prove the axiom (7.1.8) for pA,
which is the outer-most diagram below.
The top rectangle is commutative by (4.7.9). The middle left rectangle is commu-
tative by the naturality of the associativity isomorphism α. The bottom trapezoid is
commutative by the functoriality of ⊗. The middle right trapezoid is commutative
by the associativity axiom of the monoid A in Deﬁnition 1.2.8.
□
The next observation will play a crucial role in the proof of Theorem 7.2.7 below.
PROPOSITION 7.1.12. There is an adjunction
RIMon(C)
F
 MIP(C)
U

in which:
•
The right adjoint U is deﬁned by U(A, p) = A, which forgets about the inner
product.
•
The left adjoint sends A ∈RIMon(C) to the monoid inner product object
F(A) = (A, pA)
in Lemma 7.1.11.

7.1
Monoid Inner Product Objects
171
•
The unit ε : Id

UF of the adjunction is the identity.
PROOF. The image of a morphism f : A

B ∈RIMon(C) under F is
the pair (f, f ). To see that this is a morphism of monoid inner product objects, it is
enough to show that it is a morphism of inner product objects. The diagram (7.1.4)
is the outer-most diagram below.
This is commutative because f is compatible with both the involutive structures and
the multiplications. This deﬁnes the functor F.
To check that (F, U) forms an adjunction, it sufﬁces to show that, for each
morphism f
: A

B in RIMon(C) with

B, q : IB ⊗B

Y

a
monoid inner product object in C, there exists a unique morphism g : A

Y
of involutive objects in C such that the diagram (7.1.4), which in this case is the
diagram
(7.1.13)
is commutative.
Suppose g : A

Y is any morphism in C. Consider the following diagram
in C.
(7.1.14)
The left-most rectangle is commutative by the naturality of λ. The two middle
rectangles are commutative by deﬁnition and the fact that f preserves units. The
right-most rectangle is the diagram (7.1.13). There are equalities
(7.1.15)
jA ◦I1A ◦I0 = 1A : 1

A

172
7
Categorical Gelfand–Naimark–Segal Construction
by (4.7.8) and
(7.1.16)
μA ◦(1A ⊗A) ◦λ−1
A = IdA
by the unity axiom of a monoid in Deﬁnition 1.2.8. So the top-right composite
in (7.1.14) is g.
Therefore, if a morphism g : A

Y ∈Inv(C) exists that makes the
diagram (7.1.13), and hence also (7.1.14), commutative, then it is unique and is
given by the composite
(7.1.17)
in C, which is the left-bottom composite in (7.1.14). In Lemma 7.3.4 below, we will
prove that this composite is indeed a morphism of involutive objects in C that makes
the diagram (7.1.13) commutative.
□
EXAMPLE 7.1.18. With C = Vect(C), a reversing involutive monoid A in C
is exactly a complex unital ∗-algebra. The composite pA : IA ⊗A

A in
Lemma 7.1.11 is given by the multiplication
pA(a, b) = a∗· b
for a, b ∈A.
⋄
7.2
Correspondence Between States and Inner Products
The purpose of this section is to show that there is a correspondence between
quantum probability objects, to be deﬁned below, and monoid inner product objects.
This is a categorical version of the Gelfand–Naimark–Segal construction.
DEFINITION 7.2.1. Deﬁne the category QP(C) as follows.
Objects: An object in QP(C) is a tuple

(A, μ, 1, jA), f, (X, jX)

,
called a quantum probability object in C, in which:
•
(A, μ, 1, jA) is a reversing involutive monoid in C, called the object of
observables.
•
(X, jX) is an involutive object in C, called the value object.
•
f : A

X is a morphism of involutive objects in C, called a state on A
over X.

7.2
Correspondence Between States and Inner Products
173
We sometimes abbreviate such an object to f .
Morphisms: A morphism

(A, μA, 1A, jA), f, (X, jX)

(h,h′)  
(B, μB, 1B, jB), g, (Y, jY )

in QP(C) is a pair (h, h′) such that:
•
h : A

B is a morphism of reversing involutive monoids in C.
•
h′ : X

Y is a morphism of involutive objects in C.
•
The diagram
(7.2.2)
in Inv(C) is commutative.
Identities: The identity morphism of an object

A, f, (X, jX)

is (IdA, IdX).
Composition: Composition in QP(C) is deﬁned using composition in RIMon(C)
and in Inv(C).
REMARK 7.2.3. Suppose U : RIMon(C)

Inv(C) is the forgetful functor
deﬁned by
U(A, μ, 1, j) = (A, j).
In other words, it forgets about the monoid structure. Then
QP(C) = U ↓Inv(C),
which is the category under U.
⋄
EXAMPLE 7.2.4. Suppose C = Vect(C) and X = C with complex conjugation
as the involutive structure. Then a quantum probability object of the form f :
A

C consists of
•
a complex unital ∗-algebra A and
•
a state f on A over C.
This data is sometimes called a quantum probability space, which inspired our
terminology in Deﬁnition 7.2.1.
⋄
Next is the ﬁrst part of a categorical version of the Gelfand–Naimark–Segal
construction. It associates to each state an inner product.
LEMMA 7.2.5. There is a functor

174
7
Categorical Gelfand–Naimark–Segal Construction
QP(C)

 MIP(C)
deﬁned by


A
f  X

=

IA ⊗A
pA
 A
f  X

on objects, with pA = μA ◦(jA ⊗A) as in Lemma 7.1.10.
PROOF. Since (A, pA) is a monoid inner product object in C by Lemma 7.1.11,
so is (A, fpA) by an inspection. By deﬁnition  sends a morphism (h, h′) :
f

g in QP(C) as in Deﬁnition 7.2.1 to (h, h′). To see that
(h, h′) : (f )

(g)
is a well-deﬁned morphism in MIP(C), note that the required axiom (7.1.4) in this
case is the outer-most diagram below.
The top two rectangles are commutative because h is compatible with both the mul-
tiplications and the involutive structures. The bottom rectangle is the commutative
diagram (7.2.2).
□
Next we go backward and associate to each inner product a state. The proof of
the following Lemma is given in Section 7.3.
LEMMA 7.2.6. There is a functor
MIP(C)

 QP(C)
deﬁned by


IA ⊗A
p  X

=

A
λ−1
A  1 ⊗A
I0⊗A I1 ⊗A
I1A⊗A
 IA ⊗A
p  X


7.2
Correspondence Between States and Inner Products
175
on objects.
The following observation is a categorical version of the Gelfand–Naimark–
Segal construction.
THEOREM 7.2.7. The functors
QP(C)

 MIP(C)


in Lemmas 7.2.5 and 7.2.6 are inverse isomorphisms.
PROOF. Given a quantum probability object f : A

X in C, the object
(f ) is the following composite.
This composite is equal to f by (7.1.15) and (7.1.16).
Conversely, suppose p : IA ⊗A

X is a monoid inner product object in
C. By (7.1.17), the counit of the adjunction F ⊣U in Proposition 7.1.12 applied to
p is

IdA, (p)

: FU(p)

p.
Expressed in the form (7.1.4), this morphism in MIP(C) is the commutative diagram
in C. The commutativity of this diagram means that
p = (p) ◦pA = (p),
proving the converse.
□
EXAMPLE 7.2.8. Continuing Example 7.2.4, given a quantum probability space
f : A

C on A over C, the monoid inner product object
(f ) = ⟨, ⟩: A ⊗A

C

176
7
Categorical Gelfand–Naimark–Segal Construction
in Vect(C) is given by
⟨a, b⟩= f

a∗· b

for
a, b ∈A.
Conversely, given a monoid inner product object in Vect(C) of the form
p = ⟨, ⟩: A ⊗A

C,
the quantum probability space
(p) : A

C
is given by
(p)(a) = ⟨1A, a⟩
for
a ∈A.
Restricting to C = Vect(C) and codomain C, Theorem 7.2.7 says that these
constructions are inverses of each other.
⋄
Before reading the next section, the reader is asked to consider Exercise 2 in
Section 7.4.
7.3
Proofs of Technical Lemmas
The purpose of this section is to prove some of the technical assertions used in
Sections 7.1 and 7.2. Nothing in this section is used in other chapters, so the reader
may safely skip this section and read ahead if so desired.
PROOF OF LEMMA 7.1.1. We are assuming that A ∈C is an object, and we want
to show that the composite
in (7.1.2) makes (IA⊗A, jIA⊗A) into an involutive object in C. In other words, we
must show that the composite
I 2(IA ⊗A)
I(jIA⊗A)  I(IA ⊗A)
jIA⊗A
 IA ⊗A
in C is equal to ι−1
IA⊗A.

7.3
Proofs of Technical Lemmas
177
To prove this, consider the following diagram.
The composite along the top, right, and bottom is jIA⊗A ◦I(jIA⊗A), while the
composite along the left is ι−1
IA⊗A because I 2ι = ιI 2 by the triangle identity (2.1.2).
So it sufﬁces to observe the commutativity of its eight sub-diagrams.
•
The left-most sub-diagram is commutative by (4.1.5), which holds because ι is a
monoidal natural transformation.
•
The top left triangle is commutative by the triangle identity Iι = ιI in (2.1.2).
•
The three sub-diagrams to its right are commutative by the naturality of I2, ι−1,
and ξ, respectively.
•
The middle parallelogram is commutative by the naturality of ι−1 and the triangle
identity in the form Iι−1 = ι−1
I .
•
The triangle to its right is commutative by (4.1.7), which holds because I is a
symmetric monoidal functor.
•
The bottom rectangle is commutative by the naturality of ι−1.
Therefore, we have proved the equality
jIA⊗A ◦I(jIA⊗A) = ι−1
IA⊗A.
So (IA ⊗A, jIA⊗A) is an involutive object in C.
□
PROOF OF LEMMA 7.1.10. We are assuming that (A, μ, 1, j) ∈RIMon(C), and
we want to show that pA = μ ◦(j ⊗A) is a morphism of involutive objects in C. In
other words, we need to show that pA is compatible with the involutive structures
in IA ⊗A and in A, which is the outer-most diagram below.

178
7
Categorical Gelfand–Naimark–Segal Construction
In the above diagram:
•
The top, left, and bottom thin strips are commutative by the deﬁnitions of pA and
of jIA⊗A in (7.1.2).
•
The right-most sub-diagram is commutative by (4.7.9), the naturality of ξ, and
the symmetry axiom ξ ◦ξ = Id in (1.2.23).
•
The other nine sub-diagrams are commutative by the functoriality of ⊗, the
naturality of I2, ι, and ξ, the triangle identity Iι = ιI (2.1.2), j ◦Ij = ι−1,
and that ι is a monoidal natural transformation (4.1.5).
•
ι and I2 are isomorphisms by deﬁnition and Corollary 4.1.10, respectively.
Therefore, the commutativity of the above diagram implies that pA is a morphism
of involutive objects in C.
□
Our next objective is to prove Lemma 7.3.4. This is about the morphism g
in (7.1.17) deﬁned as the composite
in C, with f : A

B a morphism in RIMon(C) and q : IB ⊗B

Y a
monoid inner product object in C.

7.3
Proofs of Technical Lemmas
179
LEMMA 7.3.1. The morphism g : A

Y in (7.1.17) is a morphism of
involutive objects in C.
PROOF. We will paste together several diagrams. The desired condition that g be
a morphism of involutive objects is the outer-most diagram below.
(7.3.2)
In the above diagram:
•
The upper left triangle is commutative because f is a morphism of involutive
objects. The triangle under it is commutative by the naturality of λ. The
upper middle square is commutative by the left unity axiom (1.2.13) of the
monoidal functor (I, I2, I0). The lower middle rectangle is commutative by the
functoriality of ⊗.
•
The morphism θ is by deﬁnition the composite
(7.3.3)
in C.
Set theoretically, if we write ⟨, ⟩for q and (−)∗for jB and jY , then the sub-diagrams
(a) and (b) represent the equalities
⟨1B, b∗⟩= ⟨b, (1B)∗⟩= ⟨1B, b⟩∗
for
b ∈B.
The sub-diagram (b) in (7.3.2) is the outer-most diagram below, in which 1 = 1B,
and both jB and jY are denoted by j.

180
7
Categorical Gelfand–Naimark–Segal Construction
In the above diagram:
•
The top sub-diagram is commutative by the naturality of I2.
•
The lower right sub-diagram is commutative because (i) q is a morphism of
involutive objects, and (ii) IB ⊗B has the involutive structure in (7.1.2).
•
The parallelogram is commutative by (i) the triangle identity Iι = ιI in (2.1.2),
and (ii) that j : IB

B preserves units as in (4.7.8).
•
The left trapezoid is commutative by deﬁnition.
•
The bottom left square is commutative by the naturality of ξ.
•
The middle triangle is commutative by j ◦Ij = ι−1 in Proposition 2.5.4(2).
•
The remaining sub-diagram in the middle is commutative by (4.1.5).
This proves the commutativity of the sub-diagram (b) in (7.3.2).
The sub-diagram (a) in (7.3.2) is the outer-most diagram below.
In the above diagram, the sub-diagrams other than (∗) are commutative by the
naturality of ξ and I2, the symmetry axiom ξ ◦ξ = Id in (1.2.23), the right

7.3
Proofs of Technical Lemmas
181
unity axiom (1.2.14) of the monoidal functor (I, I2, I0), the right unity axiom of
the monoid B in Deﬁnition 1.2.8, and (4.7.8).
Set theoretically, the sub-diagram (∗) is the equality
⟨ab, 1⟩= ⟨a, b∗⟩
for
a, b ∈B.
More precisely, (∗) is the outer-most diagram below.
In the above diagram:
•
The lower right rectangle is commutative by the axiom (7.1.8) for the monoid
inner product object q.
•
The other sub-diagrams are commutative by the naturality of ρ and α, the
functoriality of ⊗, the right diagram in (1.2.6), and the right unity of the monoid
B.
This proves that (∗) is commutative, so (a) in (7.3.2) is also commutative.
□
LEMMA 7.3.4. The composite morphism g : A

Y ∈C in (7.1.17) is a
morphism of involutive objects that makes the diagram (7.1.13) commutative.
PROOF. Because of Lemma 7.3.1, it remains to prove that the diagram (7.1.13),
which is the outer-most diagram below, is commutative.

182
7
Categorical Gelfand–Naimark–Segal Construction
(7.3.5)
The upper left square is commutative because f is a morphism of involutive objects.
The upper right rectangle is commutative because f is a morphism of monoids.
Set theoretically, the bottom rectangle in (7.3.5) is the equality
⟨a, b⟩= ⟨1, a∗b⟩
for
a, b ∈B.
To prove this precisely, ﬁrst we need the following factorization of the identity
morphism of IB.
(7.3.6)
In this diagram:
•
The top middle sub-diagram is commutative by the right unity axiom (4.1.4) of
the monoidal functor (I, I2, I0).
•
The top left square is commutative by the unit axiom (1.2.23) in a symmetric
monoidal category.
•
The bottom rectangle and the triangle to its right are commutative by the
naturality of ξ and I2, respectively.
•
The right-most triangle is commutative by the right unity axiom of the monoid
B.
So the diagram (7.3.6) is commutative.
Using the factorization of IdIB in (7.3.6), the bottom rectangle in (7.3.5) is the
outer-most diagram below.

7.3
Proofs of Technical Lemmas
183
The right-most trapezoid is commutative by the monoid inner product axiom (7.1.8).
The other seven sub-diagrams are commutative by the functoriality of ⊗, the natu-
rality of λ and α, and the monoidal category property (1.2.6). The commutativity of
this diagram implies that of (7.3.5).
□
PROOF OF LEMMA 7.2.6. First we apply Lemma 7.3.1 with f
= IdA and
(B, q) = (A, p) to infer that the composite


IA ⊗A
p  X

=

A
λ−1
A  1 ⊗A
I0⊗A I1 ⊗A
I1A⊗A
 IA ⊗A
p  X

is actually a morphism of involutive objects in C. So  is well-deﬁned on objects.
For a morphism (f, g) : p

q in MIP(C) as in Deﬁnition 7.1.7, the
morphism
(f, g) : (p)

(q) ∈QP(C)
is deﬁned as the pair (f, g). To see that it is a well-deﬁned morphism in QP(C),
note that the required axiom (7.2.2) is the outer-most diagram below.
From left to right, the left-most square is commutative by the naturality of λ. The
next square is commutative by deﬁnition. The next square is commutative because
f preserves units. The right-most square is the commutative diagram (7.1.4).
□

184
7
Categorical Gelfand–Naimark–Segal Construction
7.4
Exercises and Notes
(1) Prove that the top morphism If ⊗f in the diagram (7.1.4) is actually a
morphism of involutive objects in C.
(2) Without ﬁrst reading the proofs in Section 7.3, prove Lemmas 7.1.1, 7.1.10,
7.3.4, and 7.2.6.
Notes. The material in Section 7.1 and 7.2 is from [Jac12]. The proofs in
Section 7.3, however, did not appear there. Although these proofs are mostly
categorical diagram chasing, we included them because we believe that there is
educational value in reading the details.
The original GNS construction is from [GN43, Seg47]. See also [Arv76, Sch90]
for a proof. A version of the GNS construction for formal power series algebras over
C[[¯h]] is in [BW98]. Another categorical interpretation of the GNS construction is
in [Par18]. Discussion of the GNS construction in quantum ﬁeld theories can be
found in [Haa96, KM15, Mor18].

Chapter 8
Involutive Operads
Operad theory is a versatile language for studying algebraic structures with multiple
inputs and one output. An operad is a bookkeeping device for keeping track
of operations with multiple inputs and one output, their composition, and their
equivariance. In the literature an operad is also called a multicategory or a symmetric
multicategory, depending on whether there is a symmetric group action or not.
In this chapter we extend operads to their involutive analogues. Since we do not
assume any prior knowledge of operads, in Section 8.1 we recall some basic aspects
of operads. There are several equivalent deﬁnitions of an operad. One such deﬁnition
says that an operad is a monoid in a monoidal category of symmetric sequences. We
recall this deﬁnition of an operad in Section 8.1.
An operad, like a monoid, can act on objects. In Section 8.2 we recall the monad
associated to an operad, and deﬁne an algebra over an operad as an algebra of the
associated monad. After unpacking this deﬁnition to an explicit list of operations
and axioms, we provide a series of examples of algebras over an operad, including
associative monoids, commutative monoids, and their diagrams.
Involutive operads are deﬁned in Section 8.3 as the involutive monoids in an
involutive monoidal category of symmetric sequences. This involves ﬁrst equipping
the category of symmetric sequences with an involutive structure, making it an
involutive monoidal category. It follows that the category of operads inherits an
involutive structure. Involutive operads are the involutive objects in this involutive
category of operads. Unpacking this deﬁnition we observe that an involutive operad
is equipped with an operad structure and an involutive structure in symmetric
sequences such that two axioms about the operad units and composition are
satisﬁed. The rest of this section contains examples, including the involutive
associative operad, a diagram version of it, the non-reversing involutive associative
operad, and the involutive commutative operad.
Just as each operad has an associated monad, in Section 8.4 we show that
each involutive operad yields an involutive monad. The involutive algebras of this
involutive monad are deﬁned in Section 8.5 as those for the involutive operad.
© The Author(s), under exclusive license to Springer Nature Switzerland AG 2020
D. Yau, Involutive Category Theory, Lecture Notes in Mathematics 2279,
https://doi.org/10.1007/978-3-030-61203-0_8
185

186
8
Involutive Operads
Unpacking this deﬁnition we observe that an involutive algebra over an involutive
operad has an underlying algebra over the underlying operad and an involutive
structure, together with a compatibility axiom between the two structures. The rest
of this section contains examples of involutive algebras over an involutive operad,
including involutive monoids, involutive commutative monoids, reversing involutive
monoids, and their diagrams.
In Section 8.6 we observe that each involutive symmetric monoidal functor
induces an involutive functor between the categories of involutive operads. This
allows one to change the base involutive symmetric monoidal category when
considering involutive operads. Examples of involutive operads arising from this
induced involutive functor include those in Section 8.5.
Algebraic quantum ﬁeld theory is a mathematical framework for quantum ﬁeld
theory. An algebraic quantum ﬁeld theory is a functor whose domain category is
regarded as a category of suitable spacetime regions, and whose codomain category
is some category of algebraic objects, such as modules or chain complexes. There
is an operadic formulation of algebraic quantum ﬁeld theory using the AQFT
involutive operads. In Section 8.7 we observe that the AQFT involutive operads
are all obtained from the induced involutive functor in Section 8.6.
Conventions. Unless otherwise speciﬁed, in Sections 8.1 and 8.2, our base
category

C, ⊗, 1, α, λ, ρ, ξ

is a strict symmetric monoidal category. In particular, multiple monoidal products
in C do not require parentheses. For a symmetric monoidal category that is not
strict, we ﬁrst use Mac Lane’s Coherence Theorem [Mac98] (XI.3) to replace it by
an equivalent strict symmetric monoidal category via strong symmetric monoidal
functors.
From Section 8.3, our base category

(C, ⊗, 1, α, λ, ρ, ξ), (I, I2, I0), ι

is an involutive strict symmetric monoidal category as in Deﬁnition 4.1.1. For an
involutive symmetric monoidal category that is not strict symmetric monoidal (e.g.,
Vect(C) and Chain(C)), we ﬁrst use the Strictiﬁcation Theorem 6.4.1 to replace it
by an involutively equivalent involutive strict symmetric monoidal category.
Furthermore, we always assume that C is cocomplete, and that its monoidal
product commutes with colimits on both sides. We write ∅for an initial object
in C.

8.1
Operads
187
8.1
Operads
The purpose of this section is to recall some basic deﬁnitions and facts about operads
in a symmetric monoidal category C. For a more thorough introduction to operads,
the reader is referred to [Yau16, Yau∞]. An operad is a monoid in a monoidal
category of symmetric sequences, which we deﬁne ﬁrst. The monoidal product
in the category of symmetric sequences involves a coend. In Proposition 8.1.13,
we provide a more explicit and elementary description of an operad that does not
involve any coends.
The symmetric group on k letters is denoted by k. Its unit is denoted by idk.
DEFINITION 8.1.1. For the rest of this chapter, C denotes a set, whose elements
are called colors.
(1) The set of C-proﬁles is deﬁned as
Prof(C) =

n≥0
C×n,
so a C-proﬁle is a ﬁnite, possibly empty, sequence of elements in C. We usually
write a C-proﬁle as
a = (a1, . . . , am) ∈C×m,
in which case |a| = m. The empty C-proﬁle is denoted by ∅, which is not to be
confused with an initial object in C.
(2) For C-proﬁles a = (a1, . . . , am) and b, a left permutation σ : a

b is a
permutation σ ∈|a| such that
σa = (aσ −1(1), . . . , aσ −1(m)) = b
(3) The groupoid of C-proﬁles, with Prof(C) as object set and with left permuta-
tions as the isomorphisms, is denoted by C. The opposite groupoid op
C is
regarded as the groupoid of C-proﬁles with right permutations
aσ = (aσ(1), . . . , aσ(m))
as isomorphisms.
(4) The objects of the diagram category
SSeqC
C = Cop
C ×C
are called C-colored symmetric sequences in C.
(5) An object in op
C × C is written vertically as
d
c
 with d ∈C and c ∈op
C . A
typical entry of a C-colored symmetric sequence X in C is denoted by X
d
c
.

188
8
Involutive Operads
(6) For a set S, an object in the product category
CS =

s∈S
C
is called an S-colored object, denoted by X = {Xs}s∈S.
Our next objective is to equip the category SSeqC
C of C-colored symmetric
sequences with a monoidal structure, for which we need the categorical concept
of a coend. For an in-depth discussion of coends, see [Mac98] (IX.6) or [Lor∞].
DEFINITION 8.1.2. Suppose given a functor F : Dop × D

B.
(1) A wedge of F is a pair (X, ζ) consisting of
•
an object X ∈B and
•
a morphism ζd : F(d, d)

X for each object d ∈D
such that the diagram
is commutative for each morphism g : d

d′ ∈D.
(2) A morphism f : (X, ζ)

(Y, φ) of wedges of F is a morphism f :
X

Y in B such that the diagram
is commutative for each object d ∈D.
(3) A coend of F, if it exists, is an initial wedge
 d∈D F(d, d), ω

.
We usually denote such a coend by either
 d∈D F(d, d) or
 d F(d, d), suppressing
ω and sometimes D from the notation.
EXPLANATION 8.1.3. A coend of F
:
Dop × D

B is a wedge
 d∈D F(d, d) of F such that given any wedge (X, ζ) of F, there exists a unique
morphism
 d∈D
F(d, d)
h
 X
∈B

8.1
Operads
189
such that the diagram
is commutative for each object d ∈D. One can think of a coend
 d F(d, d) as a
parametrized average of the objects F(d, d) for d ∈D, with relations parametrized
by the indexing category D.
⋄
EXAMPLE 8.1.4. Suppose F : Dop × D

B is a functor with D a small
discrete category, so it has no non-identity morphisms. If B has coproducts, then
 d∈D
F(d, d) ∼=

d∈D
F(d, d),
a coproduct of the objects F(d, d) for d ∈D.
⋄
NOTATION 8.1.5. For a set S and an object X ∈C, we sometimes use the dot
notation
S · X =

s∈S
X
for coproducts.
We now deﬁne a monoidal structure on the category SSeqC
C of C-colored
symmetric sequences.
DEFINITION 8.1.6. Suppose X, Y ∈SSeqC
C.
(1) For each c = (c1, . . . , cm) ∈C, deﬁne the object Y c ∈Cop
C entrywise as the
coend
(8.1.7)
Y c(b) =
 {aj }∈
m
j=1
op
C op
C

a1, . . . , am; b

·
 
m
!
j=1
Y
cj
aj
"
∈C
for b ∈op
C , in which (a1, . . . , am) ∈op
C is the concatenation. The object Y c
is natural in c ∈C via left permutations of the tensor factors in #m
j=1 Y
cj
aj
.
(2) The C-colored symmetric circle product
X ◦Y ∈SSeqC
C
is deﬁned entrywise as the coend

190
8
Involutive Operads
(8.1.8)
(X ◦Y)
d
b
 =
 c∈C
X
d
c
 ⊗Y c(b) ∈C
for
d
b
 ∈op
C × C.
(3) Deﬁne an object I ∈SSeqC
C by
I
d
c
 =

1
if c = d,
∅
otherwise
(8.1.9)
for
d
c
 ∈op
C × C.
EXAMPLE 8.1.10. Suppose C is a single-element set {∗}. In this case, we write
C as  and its objects as n for n ≥0. For X, Y ∈SSeqC
C, we have
Y m(k) =
 (k1,...,km)∈(op)×m
op
k1 + · · · + km; k

·
 
m
!
j=1
Y(kj)
"
,
(X ◦Y)(k) =
 m∈
X(m) ⊗Y m(k)
for m, k ∈. The object I ∈SSeqC
C has I(1) = 1 and I(k) = ∅for k ̸= 1.
⋄
PROPOSITION 8.1.11. For each set C,

SSeqC
C, ◦, I

is a monoidal category.
PROOF. Suppose X, Y, Z ∈SSeqC
C. To exhibit the associativity isomorphism,
ﬁrst note that for c = (c1, . . . , cm), b ∈C, there exist natural isomorphisms:
(Y ◦Z)c(b) =
 a1,...,am
op
C

a1, . . . , am; b

·
 
m
!
j=1
(Y ◦Z)
cj
aj
"
=
 a1,...,am
op
C

a; b

·
$
m
!
j=1
 dj
Y
cj
dj
 ⊗Zdj (aj)
%
∼=
 a1,...,am  d1,...,dm
op
C

a; b

·
m
!
j=1
 
Y
cj
dj
 ⊗Zdj (aj)
"
∼=
 d1,...,dm  
m
!
j=1
Y
cj
dj
"
⊗
$  a1,...,am
op
C

a; b

·
m
!
j=1
Zdj (aj)
%
=
 d1,...,dm  
m
!
j=1
Y
cj
dj
"
⊗Zd(b)

8.1
Operads
191
∼=
 d1,...,dm  
m
!
j=1
Y
cj
dj
"
⊗
$  e
op
C (d; e) · Ze(b)
%
∼=
 e $  d1,...,dm
op
C (d; e) ·
m
!
j=1
Y
cj
dj
%
⊗Ze(b)
=
 e
Y c(e) ⊗Ze(b)
Here a = (a1, . . . , am) and d = (d1, . . . , dm) are the concatenations. The third
natural isomorphism follows from the universal property of coends. The other three
natural isomorphisms follow from our assumption on C that its monoidal product
commutes with colimits on both sides, as well as the commutation of coends.
The above canonical isomorphisms lead to the entries of the associativity
isomorphism

(X ◦Y) ◦Z
d
a
 =
 c
(X ◦Y)
d
c
 ⊗Zc(a)
=
 c  b
X
d
b
 ⊗Y b(c) ⊗Zc(a)
∼=
 b
X
d
b
 ⊗
  c
Y b(c) ⊗Zc(a)
"
∼=
 b
X
d
b
 ⊗(Y ◦Z)b(a)
=

X ◦(Y ◦Z)
d
a

for
d
a
 ∈op
C × C. The left and right unit isomorphisms are constructed similarly.
The monoidal category axioms boil down to those in C.
□
DEFINITION 8.1.12. The category of C-colored operads in C is the category
OpC
C = Mon

SSeqC
C, ◦, I

of monoids in the monoidal category

SSeqC
C, ◦, I

. Furthermore:
•
If C has n < ∞elements, then we refer to objects in OpC
C as n-colored operads
in C.
•
If C = {∗}, then the entries of a one-colored operad O are denoted by On for
n ≥0.
An operad can be described more explicitly in terms of generating operations.
To describe it in details, recall the block permutations and block sums in Deﬁni-
tion 6.1.1.

192
8
Involutive Operads
PROPOSITION 8.1.13. A C-colored operad in C is equivalent to a triple

O, γ, 1

consisting of the following data.
•
O ∈SSeqC
C.
•
For
d
c
 ∈op
C × C with |c| = n ≥1, bj ∈Prof(C) for 1 ≤j ≤n, and b =
(b1, . . . , bn) their concatenation, it is equipped with an operadic composition
(8.1.14)
O
d
c
 ⊗
n#
j=1
O
cj
bj

γ
 O
d
b
 ∈C.
•
For each c ∈C, it is equipped with a c-colored unit
(8.1.15)
1
1c
 O
c
c
 ∈C.
These data are required to satisfy the following associativity, unity, and equivari-
ance axioms.
Associativity: Suppose that:
•
in (8.1.14) bj =

bj
1, . . . , bj
kj

∈Prof(C) with at least one kj > 0;
•
aj
i ∈Prof(C) for each 1 ≤j ≤n and 1 ≤i ≤kj;
•
for each 1 ≤j ≤n,
aj =

aj
1, . . . , aj
kj

if kj > 0,
∅
if kj = 0
with a = (a1, . . . , an) their concatenation.
Then the associativity diagram
(8.1.16)
in C is commutative.

8.1
Operads
193
Unity: Suppose d ∈C.
(1) For each c = (c1, . . . , cn) ∈Prof(C) with n ≥1, the right unity diagram
(8.1.17)
in C is commutative.
(2) For each b ∈Prof(C) the left unity diagram
(8.1.18)
in C is commutative.
Equivariance: Suppose that in (8.1.14) |bj| = kj ≥0.
(1) For each permutation σ ∈n, the top equivariance diagram
(8.1.19)
in C is commutative. In the top horizontal morphism, σ is the equivariant
structure morphism of O corresponding to σ ∈n, and σ −1 permutes
the n tensor factors from the left. The bottom horizontal morphism is the
equivariant structure morphism of O corresponding to the block permutation
σ⟨kσ(1), . . . , kσ(n)⟩∈k1+···+kn
induced by σ ∈n.
(2) Given permutations τj ∈kj for 1 ≤j ≤n, the bottom equivariance
diagram
(8.1.20)

194
8
Involutive Operads
in C is commutative. In the top horizontal morphism, each τj is the
equivariant structure morphism of O corresponding to τj
∈kj . The
bottom horizontal morphism is the equivariant structure morphism of O
corresponding to the block sum
τ1 × · · · × τn ∈k1+···+kn
induced by the τj’s.
Moreover, a morphism of C-colored operads is a morphism of the underlying C-
colored symmetric sequences that is compatible with the operadic compositions and
the colored units in the obvious sense.
PROOF. For O ∈SSeqC
C, the entries of O ◦O are
(O ◦O)
d
b
 =
 c∈C
O
d
c
 ⊗Oc(b)
∼=
 c∈C  a1,...,a|c|∈op
C op
C (a; b) · O
d
c
 ⊗
|c|
!
j=1
O
cj
aj

(8.1.21)
for
d
b
 ∈op
C
× C, where a
= (a1, . . . , am) is the concatenation. So the
multiplication μ : O ◦O

O yields the entrywise operadic composition γ
in (8.1.14). The monoid associativity of O ∈Mon

SSeqC
C

corresponds to the
associativity diagram (8.1.16). For each c ∈C, the c-colored unit 1c in (8.1.15)
corresponds to the
c
c
-entry of the unit morphism ε : I

O of the monoid O.
The unity of the monoid O corresponds to the unity diagrams (8.1.17) and (8.1.18).
The top equivariance diagram (8.1.19) corresponds to the c-variable in the
coend (8.1.21) and the fact that the multiplication μ : O ◦O

O is a
morphism of C-colored symmetric sequences. Similarly, the bottom equivariance
diagram (8.1.20) corresponds to the aj variables in the coend (8.1.21).
□
EXAMPLE 8.1.22. The symmetric circle product is far from symmetric, even in
the one-colored case. With the color set C = {∗}, we write C as . For one-colored
symmetric sequences X and Y, the entry (X ◦Y)(k) is
 n∈ k1,...,kn∈op
op
k1 + · · · + kn; k

· X(n) ⊗Y(k1) ⊗· · · ⊗Y(kn)
for k ≥0. In particular, its 0th entry is
(X ◦Y)(0) =
 n∈
X(n) ⊗Y(0)⊗n.

8.2
Algebras
195
This expression is not symmetric, even up to isomorphism, in X and Y. For example,
if the only non-∅entries in X and Y are X(0) and Y(1), then
(X ◦Y)(0) ∼= ∅
and
(Y ◦X)(0) ∼= Y(1) ⊗X(0),
which are in general not isomorphic.
⋄
8.2
Algebras
In this section, we discuss algebras over an operad in a symmetric monoidal category
C, for which we need the following notation.
NOTATION 8.2.1. For a C-colored object X = {Xc}c∈C in C and a C-proﬁle
c = (c1, . . . , cm), we write
Xc =

Xc1 ⊗· · · ⊗Xcm ∈C
if m > 0,
1
if c = ∅.
LEMMA 8.2.2. Suppose O is a C-colored operad in C. Then it induces a monad
whose functor is
O ◦−: CC

CC,
and whose multiplication and unit are induced by the operadic composition and the
colored units of O, respectively.
PROOF. Suppose Y = {Yc}c∈C is a C-colored object in C, regarded as a C-
colored symmetric sequence with entries
Y
d
c
 =

Yd
if c = ∅,
∅
otherwise.
Then
Y c(b) =

Yc
if b = ∅,
∅
if b ̸= ∅
for b, c ∈C. This implies that
(O ◦Y)
d
b
 =
⎧
⎨
⎩
 c∈C
O
d
c
 ⊗Yc
if b = ∅,
∅
if b ̸= ∅.

196
8
Involutive Operads
So the functor
O ◦−: SSeqC
C

SSeqC
C
restricts to a functor CC

CC. The monad associativity and unity axioms of
O ◦−now follow from the associativity and unity axioms of the operad O.
□
DEFINITION 8.2.3. Suppose O is a C-colored operad in C. The category Alg(O)
of O-algebras is deﬁned as the category of (O ◦−)-algebras for the monad O ◦−
in Lemma 8.2.2.
Unpacking the above deﬁnition, we obtain the following more explicit descrip-
tion of an algebra over an operad.
PROPOSITION 8.2.4. Suppose (O, γ, 1) is a C-colored operad in C. Then an O-
algebra is exactly a pair (X, θ) consisting of
•
a C-colored object X = {Xc}c∈C ∈CC and
•
an O-action structure morphism
(8.2.5)
O
d
c
 ⊗Xc
θ
 Xd ∈C
for
d
c
 ∈op
C × C
such that the following associativity, unity, and equivariance axioms hold.
Associativity: For
d
c
 ∈op
C × C with |c| = n ≥1, bj ∈C for 1 ≤j ≤n, and
b = (b1, . . . , bn) their concatenation, the associativity diagram
(8.2.6)
in C is commutative.
Unity: For each c ∈C, the unity diagram
(8.2.7)
in C is commutative.

8.2
Algebras
197
Equivariance: For each
d
c
 ∈op
C × C and each permutation σ ∈|c|, the
equivariance diagram
(8.2.8)
in C is commutative. In the top horizontal morphism, σ −1 is the right permutation
on the tensor factors in Xc induced by σ ∈|c|.
Moreover, a morphism of O-algebras
f : (X, θX)

(Y, θY )
is exactly a morphism f : X

Y of C-colored objects in C such that the
diagram
in C is commutative for all
d
c
 ∈op
C × C.
PROOF. For a C-colored object X = {Xc}c∈C in C, the C-colored object O ◦X
has entries
(O ◦X)d =
 c∈C
O
d
c
 ⊗Xc
for
d ∈C.
So for the monad (O ◦−), an (O ◦−)-algebra (X, φ) has O-action structure
morphisms
as in (8.2.5). The associativity axiom (8.2.6) and the unity axiom (8.2.7) correspond
to those of an (O ◦−)-algebra in (1.3.4). The equivariance diagram (8.2.8) comes
from the c-variable in the coend above. The reverse identiﬁcation is the same.
□
Next we provide some basic examples of operads and their algebras.

198
8
Involutive Operads
EXAMPLE 8.2.9 (Endomorphism Operad). Suppose that the underlying sym-
metric monoidal category C is closed in the sense of Deﬁnition 1.2.33, and the right
adjoint of
−⊗X : C

C
for X ∈C is the internal hom [X, −]. For each C-colored object X = {Xc}c∈C in C,
the endomorphism operad is the C-colored operad End(X) with entries
End(X)
d
c
 = [Xc, Xd]
for
d
c
 ∈op
C × C.
•
Its equivariant structure is induced by permutations of the tensor factors in Xc.
•
Its d-colored unit
1

[Xd, Xd]
is adjoint to the left unit isomorphism λ : 1 ⊗Xd

∼=
Xd.
•
Its operadic composition γ is induced by the adjunction between −⊗X and the
internal hom.
Via this adjunction, for a C-colored operad O in C, an O-algebra structure (X, θ) is
equivalent to a morphism
θ′ : O

End(X)
of C-colored operads.
⋄
EXAMPLE 8.2.10 (Operad for Monoids). The associative operad is the one-
colored operad
As =

n
1

n≥0
in C in which:
•
The operadic composition is induced by

σ; τ1, . . . , τn

= σ⟨k1, . . . , kn⟩



block permutation
·

τ1 × · · · × τn




block sum
∈k1+···+kn
for σ ∈n with n ≥1, τi ∈ki for 1 ≤i ≤n, and ki ≥0.
•
The operadic unit corresponds to the identity permutation id1 ∈1.
•
The symmetric sequence structure corresponds to the group multiplication in n.

8.2
Algebras
199
The category of As-algebras is canonically isomorphic to the category of monoids
in C.
⋄
EXAMPLE 8.2.11 (Operad
for
Commutative
Monoids). The
commutative
operad is the one-colored operad
Com = {1}n≥0
in C in which:
•
The operadic composition is induced by the unit isomorphism 1 ⊗1 ∼= 1.
•
The operadic unit is the identity morphism of 1.
•
The symmetric sequence structure is given by the trivial n-action on 1.
The category of Com-algebras is canonically isomorphic to the category of
commutative monoids in C.
⋄
EXAMPLE 8.2.12 (Operad for Diagrams of Monoids). Suppose D is a small
category with object set D. For
d
c
 =

d
c1,...,cn
 ∈op
D × D, we use the abbreviation
D(c; d) = D
d
c
 =
⎧
⎪⎨
⎪⎩
n ×
n
j=1
D(cj, d)
if n ≥1,
{∗}
if n = 0.
(8.2.13)
There is a D-colored operad AsD in C with entries
AsDd
c
 =

D(c;d)
1
for
d
c
 ∈op
D × D.
A coproduct summand corresponding to an element (σ, f ) ∈D(c; d) is denoted by
1(σ,f ). We describe the operad structure on AsD in terms of the subscripts.
•
For τ ∈|c|, the right τ-action sends 1(σ,f ) to 1(στ,f τ).
•
Its c-colored unit corresponds to 1(id1,Idc) for c ∈D.
•
Its operadic composition
AsDd
c
 ⊗
n#
j=1
AsDcj
bj

γ
 AsDd
b

corresponds to

(σ, f );

(τj, gj)
n
j=1
 


σ; τ1, . . . , τn

,

f1g1, . . . , fngn

.

200
8
Involutive Operads
Here
fjgj =

fjgj1, . . . , fjgjkj

∈
kj

i=1
D(bji, d)
if
gj =

gj1, . . . , gjkj

∈
kj

i=1
D(bji, cj),
and

σ; τ1, . . . , τn

= σ⟨k1, . . . , kn⟩·

τ1 × · · · × τn

is as in the operadic composition in the associative operad As in Example 8.2.10.
There is a canonical isomorphism
Alg(AsD)
∼=
 Mon(C)D
from the category of AsD-algebras to the category of D-diagrams in Mon(C), the
category of monoids in C. Indeed, each AsD-algebra (X, θ) has a restricted structure
morphism
for each (σ, f ) ∈D(c; d).
•
For a morphism f : c

d ∈D, there is a restricted structure morphism
Xc
θ(id1,f )
 Xd
∈C.
The associativity and unity axioms of (X, θ) imply that this is a D-diagram in C.
•
For each c ∈D, the restricted structure morphisms
Xc ⊗Xc
θ(id2,{Idc,Idc})
 Xc
and
1
θ(id0,∗)
 Xc

8.3
Involutive Operads as Involutive Monoids
201
give Xc the structure of a monoid in C, once again by the associativity and unity
axioms of (X, θ). An inspection shows that this gives a D-diagram of monoids
in C. In other words, the morphisms θ(id1,f ) are compatible with the entrywise
monoid structures.
The D-colored operad AsD is generated by the operations described in the previous
two items. Therefore, AsD is the D-colored operad whose algebras are D-diagrams
of monoids in C.
⋄
EXAMPLE 8.2.14 (Operad for Diagrams of Commutative Monoids). Suppose D
is a small category with object set D. There is a D-colored operad ComD in C with
entries
ComDd
c
 =

n
j=1
D(cj ,d)
1
for
d
c
 =

d
c1,...,cn
 ∈op
D × D.
Its operad structure is deﬁned as in Example 8.2.12 by ignoring the ﬁrst component.
Just like Example 8.2.12, there is a canonical isomorphism
Alg(ComD)
∼=
 CMon(C)D
from the category of ComD-algebras to the category of D-diagrams of commutative
monoids in C. To check this, a key fact is that the monoid multiplication
Xc ⊗Xc
μc = θ{Idc,Idc}
 Xc
∈C
is commutative. This is true because the pair {Idc, Idc} is ﬁxed by the permutation
(1, 2) ∈2. So the equivariance axiom (8.2.8) implies that μc is commutative.
In summary, ComD is the D-colored operad whose algebras are D-diagrams of
commutative monoids in C.
⋄
8.3
Involutive Operads as Involutive Monoids
For the rest of this chapter, C is an involutive strict symmetric monoidal category;
see the conventions stated just before Section 8.1. The purposes of this section are
to deﬁne involutive operads and to provide some examples.
For a set C, recall from Deﬁnition 8.1.12 that the category OpC
C of C-colored
operads in C is the category Mon

SSeqC
C, ◦, I

of monoids in the monoidal category
SSeqC
C of C-colored symmetric sequences in C. Involutive operads will be deﬁned

202
8
Involutive Operads
as involutive objects in OpC
C equipped with a suitable involutive structure. First we
equip the category SSeqC
C with an involutive structure.
DEFINITION 8.3.1. We equip Cop
C ×C = SSeqC
C with the following structures.
Involution Functor:
Extend the involution functor I : C

C to a functor
I : SSeqC
C

SSeqC
C
by setting
(IX)
d
c
 = I

X
d
c

for X ∈SSeqC
C and
d
c
 ∈op
C × C, and similarly for morphisms in SSeqC
C.
Unit:
Extend the unit ι : IdC

∼=
I 2 componentwise to a natural isomorphism
ι : IdSSeqC
C

∼=
I 2
by setting
(ιX)
d
c
 = ιX
d
c
 : X
d
c


∼=
I 2X
d
c

for X ∈SSeqC
C and
d
c
 ∈op
C × C.
PROPOSITION 8.3.2.

SSeqC
C, ◦, I, I, ι

is an involutive monoidal category.
PROOF. By Proposition 8.1.11, SSeqC
C is a monoidal category. With the struc-
ture in Deﬁnition 8.3.1, (SSeqC
C, I, ι) is an involutive category by Proposition 2.1.7.
It remains to check the commutativity of the diagrams (4.1.3), (4.1.4), (4.1.5),
and (4.1.6) in SSeqC
C.
The diagram (4.1.5) in this case is
for X, Y ∈SSeqC
C. At a typical
d
b
-entry, the above diagram becomes the following
diagram in C.

8.3
Involutive Operads as Involutive Monoids
203
(8.3.3)
In the diagram (8.3.3):
•
The middle left and the lower right vertical isomorphisms come from the natural
isomorphisms
(IY)c(b) =
 {aj }
op
C

a; b

·
|c|
!
j=1
IY
cj
aj

∼=
 {aj }
op
C

a; b

· I
 |c|
!
j=1
Y
cj
aj
"
∼= I
$  {aj }
op
C

a; b

·
|c|
!
j=1
Y
cj
aj
%
= I

Y c(b)

with a = (a1, . . . , a|c|). Here the ﬁrst isomorphism uses Corollary 4.1.10,
which says that I is a strong monoidal functor. The second isomorphism uses
Proposition 2.1.4, which states that I preserves all the colimits that exist in C
because it is adjoint to itself.
•
The bottom horizontal isomorphism and the upper right vertical isomorphism
also follow from the fact that I preserves colimits.
To prove the commutativity of (8.3.3), we may restrict to an object X
d
c
 ⊗Y c(b), in
which case the commutativity follows from that of (4.1.5) in C.
The commutativity of the diagrams (4.1.3), (4.1.4), and (4.1.6) in SSeqC
C follows
similarly from that in C.
□
COROLLARY 8.3.4. The category OpC
C of C-colored operads in C inherits an
involutive structure from C.
PROOF. Since OpC
C is the category Mon

SSeqC
C

of monoids in the category
SSeqC
C of C-colored symmetric sequences in C, the assertion follows from Theo-

204
8
Involutive Operads
rem 4.5.1 applied to the involutive monoidal category SSeqC
C in Proposition 8.3.2.
□
DEFINITION 8.3.5. The category of C-colored involutive operads in C is deﬁned
as the category
IOpC
C = Inv

OpC
C

of involutive objects in the involutive category OpC
C.
In other words, the category of C-colored involutive operads in C,
IOpC
C = Inv

Mon

SSeqC
C

= IMon

SSeqC
C

,
is the category of involutive monoids in SSeqC
C. Let us unpack this deﬁnition.
PROPOSITION 8.3.6. A C-colored involutive operad in C is exactly a tuple

O, γ, 1, j

with
•
(O, γ, 1) a C-colored operad in C, and
•

O, j : O

IO

an involutive object in SSeqC
C
such that the diagrams
(8.3.7)
for c ∈C and
(8.3.8)
with γ as in (8.1.14), are commutative.
Moreover, a morphism of C-colored involutive operads in C is exactly a
morphism of the underlying C-colored operads in C that is also a morphism of
involutive objects in SSeqC
C.

8.3
Involutive Operads as Involutive Monoids
205
PROOF. By deﬁnition the category of (involutive) C-colored operads in C is
the category of (involutive) monoids in SSeqC
C. When we write (O, γ, 1), we are
using the description of a C-colored operad in C in Proposition 8.1.13. We apply
Proposition 4.5.5 to the involutive monoidal category SSeqC
C. The diagrams (8.3.7)
and (8.3.8) correspond to the diagrams (4.5.6) and (4.5.7), respectively.
□
The rest of this section contains examples of involutive operads.
EXAMPLE 8.3.9 (Trivial Involution). Suppose that the involutive structure on C
is trivial, i.e., I = IdC and ι = IdIdC. Then a C-colored involutive operad in C is a
pair (O, j) such that:
•
O is a C-colored operad in C.
•
j : O

O is a morphism of C-colored operads in C.
•
j ◦j = IdO.
Indeed, the involutive structure on SSeqC
C is also trivial. By Proposition 8.3.6, j :
O

O is a morphism of C-colored symmetric sequences in C such that j ◦j =
IdO. The diagrams (8.3.7) and (8.3.8) mean that j preserves the colored units and
the operadic composition, so j is actually a morphism of C-colored operads.
⋄
EXAMPLE 8.3.10 (Involutive Associative Operad). Recall from Example 8.2.10
the associative operad As =
 
n 1

n≥0, which is a one-colored operad in C
whose algebras are exactly the monoids in C. A copy of 1 in Asn corresponding to
a permutation σ ∈n is denoted by 1σ, and similarly for IAs. We equip As with
the involutive structure
jrev : As

IAs
deﬁned entrywise by the commutative diagram
(8.3.11)
in C for σ ∈n. Here πn ∈n is the interval-reversing permutation given by
(8.3.12)
πn(i) = n + 1 −i
for
1 ≤i ≤n.
The right vertical natural isomorphism is from Proposition 2.1.4.
We now use Proposition 8.3.6 to check that (As, jrev) is a one-colored involutive
operad in C.
•
That
jrev : As

IAs

206
8
Involutive Operads
is a morphism in SSeqC
C follows from the fact that in both As and IAs, the right
n-action is given by the multiplication in n in the subscripts.
•
The involutive object axiom
Ijrev ◦jrev = ι
follows from
– the permutation identity π2
n = idn ∈n and
– the equality I(I0) ◦I0 = ι1 in (4.1.6).
•
The unit diagram (8.3.7) is commutative because the operadic unit
1 : 1

As1
is the identity morphism of 1.
•
Using the notations in Deﬁnition 6.1.1, the diagram (8.3.8) for (As, jrev) boils
down to the permutation identity
πk · σ⟨k1, . . . , kn⟩·

τ1 × · · · × τn

= (πnσ)⟨k1, . . . , kn⟩



block permutation
·

πk1τ1 × · · · × πknτn




block sum
∈k
(8.3.13)
for σ ∈n, τi ∈ki for 1 ≤i ≤n, and k = k1 + · · · + kn. This equality follows
from a direct inspection.
Therefore, (As, jrev) is a one-colored involutive operad in C, called the involutive
associative operad. We will return to this involutive operad in Proposition 8.5.4 and
Example 8.6.8.
⋄
EXAMPLE 8.3.14 (Non-Reversing Involutive Associative Operad). There is
another one-colored involutive operad structure
j : As

IAs
on the associative operad deﬁned as in (8.3.11) by removing the interval-reversing
permutation πn. In other words, it is determined by the morphism

8.4
Involutive Monads from Involutive Operads
207
I0 : 1σ

I1σ
for
σ ∈n.
We call (As, j) the non-reversing involutive associative operad.
⋄
EXAMPLE 8.3.15 (Involutive Operad for Diagrams). Suppose D is a small
category with object set D, and AsD is the D-colored operad in C in Example 8.2.12
whose algebras are D-diagrams of monoids in C. We equip AsD with the involutive
structure
jrev : AsD

IAsD
determined by the commutative diagram
in C for
d
c
 ∈op
D × D with |c| = n, (σ, f ) ∈D(c; d), and πn ∈n
the interval-reversing permutation in (8.3.12). Using Proposition 8.3.6, essentially
the same reasoning as in Example 8.3.10 shows that (AsD, jrev) is a C-colored
involutive operad in C. We will return to this involutive operad in Theorem 8.5.6,
Example 8.6.8, and Deﬁnition 8.7.4.
As in Example 8.3.14, there is also a non-reversing version (AsD, j) whose
involutive structure j is deﬁned as above, but without the interval-reversing
permutation πn.
⋄
EXAMPLE 8.3.16 (Involutive Commutative Operad). Similar to the previous
two examples, the commutative operad Com in Example 8.2.11 and the D-colored
operad ComD in Example 8.2.14 have canonical involutive operad structures.
In each case, the involution structure j is simply given by the morphism I0 :
1

I1, without changing the indexing subscript in the ComD case. We call
the one-colored involutive operad (Com, j) in C the involutive commutative operad.
⋄
More examples of involutive operads will be given in the coming sections.
8.4
Involutive Monads from Involutive Operads
In Lemma 8.2.2 we saw that each C-colored operad O in C induces a monad
O ◦−: CC

CC,

208
8
Involutive Operads
whose algebras are deﬁned as O-algebras. The purpose of this section is to show
that an involutive operad has an associated involutive monad as in Deﬁnition 4.8.1.
The involutive algebras of this involutive monad will be deﬁned as the involutive
algebras of the involutive operad.
The involutive structure (I, ι) on C is extended to the product category CC
entrywise. To show that an involutive operad has an associated involutive monad,
ﬁrst we equip it with a distributive law.
DEFINITION 8.4.1. Fix a C-colored involutive operad (O, γ, 1, j) in C. Deﬁne
a natural transformation
O ◦I
ν
 I(O ◦−)
on CC by the commutative diagram
(8.4.2)
in C for X ∈CC and d ∈C.
LEMMA 8.4.3. ν in Deﬁnition 8.4.1 is a well-deﬁned natural transformation.
PROOF. For each color d ∈C, the morphism νX
d in C in (8.4.2) is well-deﬁned
by
•
the commutation of I with colimits,
•
the naturality of I2 : I(−) ⊗I(−)

I(−⊗−), and
•
that j : O

IO is a morphism of C-colored symmetric sequences.
The naturality of ν with respect to X follows from the naturality of I2.
□
LEMMA 8.4.4. (O ◦−, ν) : CC

CC is an involutive functor.
PROOF. It sufﬁces to check the involutive functor axiom (2.2.2) for X ∈CC and
d ∈C. The diagram (2.2.2) boils down to the outer-most diagram below for c ∈C.

8.4
Involutive Monads from Involutive Operads
209
The left triangle is commutative by the functoriality of ⊗, (4.1.5), and the involutive
object axiom Ij ◦j = ι in (2.5.2). The top right and the bottom right trapezoids are
commutative by (4.1.5) and the naturality of I2, respectively.
□
THEOREM 8.4.5. For each C-colored involutive operad (O, γ, 1, j) in C, when
equipped with the involutive structure ν in Deﬁnition 8.4.1, (O ◦−, ν) is an
involutive monad on CC.
PROOF. O◦−is a monad on CC by Lemma 8.2.2, and (O◦−, ν) is an involutive
functor by Lemma 8.4.4. It remains to check that the multiplication and the unit
of the monad O ◦−are both involutive natural transformations in the sense of
Proposition 4.8.2.
For X ∈CC and d ∈C, the diagram (4.8.4) for (O ◦−, ν) boils down to the
outer-most diagram below.
The top left square, top right square, and the bottom rectangle are commutative by
the left unity axiom in (4.1.4), the naturality of I2, and the compatibility (8.3.7) of
j with the colored units, respectively.
Using the notation in (8.2.6), the diagram (4.8.3) for (O◦−, ν) boils down to the
outer-most diagram below.

210
8
Involutive Operads
The top sub-diagram is commutative by (8.3.8). All other sub-diagrams are com-
mutative because (i) C is a symmetric monoidal category, and (ii) (I, I2, I0) is a
symmetric monoidal functor on C.
□
8.5
Involutive Algebras of Involutive Operads
The ﬁrst purpose of this section is to deﬁne involutive algebras of an involutive
operad. Then we observe that reversing involutive monoids can be identiﬁed with
the involutive algebras over the involutive associative operad, and similarly for the
diagram case and the commutative case.
DEFINITION 8.5.1. For a C-colored involutive operad (O, γ, 1, j) in C, the
category
IAlg(O, γ, 1, j)
of involutive (O, γ, 1, j)-algebras is deﬁned as the category of involutive (O◦−, ν)-
algebras, in the sense of Deﬁnition 4.8.7, for the involutive monad (O ◦−, ν) in
Theorem 8.4.5. If there is no danger of confusion, we will use the shorter notation
IAlg(O), and call its objects involutive O-algebras.
Using Propositions 4.8.8 and 8.2.4, let us unwrap the previous deﬁnition.
PROPOSITION 8.5.2. For a C-colored involutive operad (O, γ, 1, j) in C, an
involutive O-algebra is exactly a tuple (X, θ, jX) with
•
(X, θ) an O-algebra and

8.5
Involutive Algebras of Involutive Operads
211
•
(X, jX) an involutive object in CC
such that the diagram
(8.5.3)
is commutative for
d
c
 ∈op
C × C.
Moreover, a morphism of involutive O-algebras is exactly a morphism of the
underlying O-algebras that is also a morphism of involutive objects in CC.
Another description of an involutive O-algebra in terms of the involutive
endomorphism operad is given in Exercise 2 in Section 8.8. The rest of this section
contains examples of involutive algebras of involutive operads.
Recall from Deﬁnition 4.7.2 that RIMon(C) is the category of reversing invo-
lutive monoids in C. Next we observe that reversing involutive monoids in C are
exactly the involutive algebras of the involutive associative operad (As, jrev) in
Example 8.3.10.
THEOREM 8.5.4. There is a canonical isomorphism
RIMon(C) ∼= IAlg(As, jrev)
between
•
the category of reversing involutive monoids in C and
•
the category of involutive (As, jrev)-algebras.
PROOF. By Proposition 8.5.2 for the involutive associative operad (As, jrev), an
involutive As-algebra is a tuple (X, μ, 1, jX) with
•
(X, μ, 1) an As-algebra, i.e., a monoid in C, and
•
(X, jX : X

IX) an involutive object in C
such that the diagram
(8.5.5)
is commutative for n ≥0. Using the description of a reversing involutive monoid
in Proposition 4.7.3, it remains to show that the diagrams (8.5.5) for n ≥0 are
equivalent to the diagrams (4.5.6) and (4.7.4).
As the ﬁrst reduction, observe that for each n, the diagram (8.5.5) is determined
by its restriction to the coproduct summand

212
8
Involutive Operads
1idn ⊗X⊗n


σ∈n

1σ ⊗X⊗n ∼= Asn ⊗X⊗n
because of
•
the equivariance axiom (8.2.8) of the O-algebra X,
•
the naturality of I2, and
•
the symmetry isomorphism in C.
In what follows, when we refer to the diagram (8.5.5), we mean its restriction to the
coproduct summand above.
Moreover:
•
Since As0 = 1 = X⊗0, the diagram (8.5.5) for n = 0 is the unit diagram (4.5.6).
•
The diagram (8.5.5) for n = 1 factors as follows.
The three sub-diagrams are commutative by the functoriality of ⊗, the naturality
of λ, and that (I, I2, I0) is a monoidal functor (1.2.13). So this imposes no extra
conditions on (X, μ, 1, jX).
•
The diagram (8.5.5) for n = 2 reduces to the diagram (4.7.4), in which the
symmetry isomorphism ξ arises because the involutive structure on As2 is the
composite
By Proposition 4.7.3, we have shown that (X, μ, 1, jX) has the structure of a
reversing involutive monoid in C.
It remains to check that the diagrams (8.5.5) for n ≥3 impose no extra
conditions on the reversing involutive monoid (X, μ, 1, jX). Indeed, for n ≥3, the
diagram (8.5.5) reduces to the outer-most diagram below, where jX is abbreviated
to j.

8.5
Involutive Algebras of Involutive Operads
213
In the above diagram:
•
μn : X⊗n

X is the iterated multiplication on X.
•
The top right vertical isomorphism is the permutation of tensor factors induced
by the block permutation
φ = (1, 2)⟨n −1, 1⟩∈n
that swaps the initial interval of length n −1 with the last entry. See Deﬁni-
tion 6.1.1 for the notation. The sub-diagram involving πn is commutative by the
permutation identity
πn = φ ·

πn−1 × id1

∈n.
•
The sub-diagram (∗) is the diagram (8.5.5) for n −1 tensored with X.
•
The sub-diagram (†) is the diagram (8.5.5) for n = 2, which is equivalent to the
diagram (4.7.4).
•
The sub-diagram (‡) is commutative by the assumption that (I, I2, I0) is a
symmetric monoidal functor.
•
All other sub-diagrams are commutative by the functoriality of ⊗and the
associativity of μ.
Therefore, by an induction, the diagrams (8.5.5) for n ≥3 are all determined by the
case n = 2.
We have shown that an involutive (As, jrev)-algebra determines exactly a
reversing involutive monoid in C.
□
Suppose D is a small category with object set D, and AsD is the D-colored
operad in C in Example 8.2.12 whose algebras are D-diagrams of monoids in C.
It is equipped with the involutive operad structure jrev in Example 8.3.15. Next is
the D-diagram version of Theorem 8.5.4.

214
8
Involutive Operads
THEOREM 8.5.6. There is a canonical isomorphism
RIMon(C)D ∼= IAlg(AsD, jrev)
between
•
the category of D-diagrams of reversing involutive monoids in C and
•
the category of involutive (AsD, jrev)-algebras.
PROOF. This proof is similar to that of Theorem 8.5.4. By Proposition 8.5.2
for the involutive operad (AsD, jrev), an involutive AsD-algebra is a pair (X, jX)
with
•
X an AsD-algebra, i.e., a D-diagram of monoids in C, and
•
(X, jX : X

IX) an involutive object in CD
such that the diagram (8.5.3) is commutative for O = AsD and
d
c
 ∈op
D × D. As
in the proof of the previous Theorem, these diagrams are determined by:
(i) the
 d
∅
 case;
(ii) the coproduct summand 1(id1,f ) of AsD for f a morphism in D;
(iii) the coproduct summand 1(id2,(Idd,Idd)) of AsD for d ∈D.
Cases (i) and (iii) are equivalent to (4.5.6) and (4.7.4) for the monoid Xd. So each
Xd is a reversing involutive monoid by Proposition 4.7.3. Case (ii) means that, for
each morphism f : c

d in D, the morphism
Xf : Xc

Xd
of monoids in C is also a morphism of involutive objects in C. Therefore, X is
actually a D-diagram of reversing involutive monoids in D.
□
Recall from Example 8.3.15 the D-colored involutive operad (AsD, j), whose
involutive structure j does not involve the interval-reversing permutation πn.
PROPOSITION 8.5.7. There is a canonical isomorphism
IMon(C)D ∼= IAlg(AsD, j)
between
•
the category of D-diagrams of involutive monoids in C and
•
the category of involutive (AsD, j)-algebras.
PROOF. We reuse the proof of Theorem 8.5.6 and replace Proposition 4.7.3 by
the description of involutive monoids in Proposition 4.5.5.
□
Recall from Example 8.3.16 the involutive commutative operad (Com, j) and
more generally its D-diagram version (ComD, j). Also recall from Deﬁnition 4.6.2

8.6
Change of Involutive Symmetric Monoidal Categories
215
the category ICMon(C) of involutive commutative monoids in C. The following
commutative analogue of Theorem 8.5.6 is proved by essentially the same argument.
PROPOSITION 8.5.8. For each small category D, there is a canonical isomor-
phism
ICMon(C)D ∼= IAlg(ComD, j)
between
•
the category of D-diagrams of involutive commutative monoids in C and
•
the category of involutive (ComD, j)-algebras.
8.6
Change of Involutive Symmetric Monoidal Categories
For an involutive symmetric monoidal category C, the category SSeqC
C of C-colored
symmetric sequences in C is an involutive monoidal category by Proposition 8.3.2.
Its involutive monoids are deﬁned as C-colored involutive operads in C. The purpose
of this section is to observe that an involutive symmetric monoidal functor induces
an involutive functor between the categories of C-colored involutive operads. As
we will see later, this procedure produces many interesting examples of involutive
operads. First we make the following preliminary observation.
PROPOSITION 8.6.1. Suppose (F, F2, F0, ν) :
C

D is an involutive
symmetric monoidal functor between involutive symmetric monoidal categories.
Then it induces an involutive monoidal functor
SSeqC
C
F ′
 SSeqC
D
in which SSeqC
C and SSeqC
D have the involutive monoidal structures in Proposi-
tion 8.3.2.
PROOF. The induced functor F ′ is deﬁned entrywise as
(F ′X)
d
c
 = F

X
d
c

∈D
for X ∈SSeqC
C and
d
c
 ∈op
C × C, and similarly for morphisms in SSeqC
C. Since
SSeqC
C = Cop
C ×C
and
SSeqC
D = Dop
C ×C

216
8
Involutive Operads
are diagram categories, F ′ is an involutive functor by Proposition 2.2.10, whose
distributive law νF ′ is inherited from that of F.
Next we show that F ′ inherits a monoidal functor structure from F. The structure
morphism
F ′
0 : ID

F ′IC
is the morphism F0 : 1D

F1C at the
c
c
-entries for c ∈C. Here IC and ID
are the monoidal units in SSeqC
C and SSeqC
D as deﬁned in (8.1.9), and 1C and 1D
are the monoidal units in C and D, respectively. At all other entries, F ′
0 is the unique
morphism from an initial object in C.
To deﬁne the structure morphism F ′
2, suppose X, Y ∈SSeqC
C. First observe that,
for b ∈op
C and c = (c1, . . . , cm) ∈C, there is a natural morphism F∗deﬁned as
the composite
in D with a = (a1, . . . , am) ∈op
C the concatenation. Here (F2)∗is induced by
the natural transformation F2 : F(−) ⊗F(−)

F(−⊗−). The lower right
natural morphism exists by the functoriality of F and the universal properties of
coproducts and coends. Note that F∗is natural with respect to c ∈C because F is
a symmetric monoidal functor.
Using the natural morphism F∗, we deﬁne F ′
2 entrywise as the composite
in D for
d
b
 ∈op
C × C. Since F ′
2 is entrywise deﬁned by natural morphisms and the
natural transformation F2, it deﬁnes a natural transformation

8.6
Change of Involutive Symmetric Monoidal Categories
217
F ′
2 : F ′(−) ◦F ′(−)

F ′(−◦−).
By naturality of the constructions, the monoidal functor axioms for (F ′, F ′
2, F ′
0) boil
down to the symmetric monoidal functor axioms for (F, F2, F0).
Using Lemma 4.3.2, it remains to check the commutativity of the dia-
grams (4.3.3) and (4.3.4) for (F ′, F ′
2, F ′
0, νF ′). The diagram (4.3.3) in this case
is
for X, Y ∈SSeqC
C. By the naturality of the symmetric monoidal functors F and I
in both C and D, the above diagram boils down to the diagram
in D for d ∈C and b, c ∈C. The upper left and the lower right rectangles
are commutative by (4.3.3) for (F, F2, F0, ν). The lower left and the upper right
rectangles are commutative by the naturality of I2 and F2, respectively. A similar
argument shows that the diagram (4.3.4) for (F ′, F ′
2, F ′
0, νF ′) is commutative.
□
THEOREM 8.6.2. Every involutive symmetric monoidal functor
(F, F2, F0, ν) : C

D
between involutive symmetric monoidal categories induces an involutive functor
IOpC
C
IOp(F)  IOpC
D .
PROOF. We apply Proposition 4.5.10 to the involutive monoidal functor

218
8
Involutive Operads
SSeqC
C
F ′
 SSeqC
D
in Proposition 8.6.1 to obtain an involutive functor
IOpC
C = IMon(SSeqC
C)
IOp(F)  IMon(SSeqC
D) = IOpC
D ,
in which the equalities are the deﬁnitions of IOpC
C and IOpC
D.
□
EXPLANATION 8.6.3. In the context of Theorem 8.6.2, for a C-colored involu-
tive operad (O, γ, 1, j) in C, its image under IOp(F) is the C-colored involutive
operad in D with entries
(FO)
d
c
 = F

O
d
c

for
d
c
 ∈op
C × C.
For σ ∈|c|, its σ-action is
FO
d
c

Fσ
 FO
 d
cσ
 .
For c ∈C, its c-colored unit is the composite
1D
F0
 F1C
F1c
 FO
c
c
 .
Its operadic composition is the composite
FO
d
c
 ⊗
n#
j=1
FO
cj
bj

F2
 F
 
O
d
c
 ⊗
n#
j=1
O
cj
bj
"
Fγ
 FO
d
b

for
d
c
 ∈op
C × C with |c| = n ≥1, bj ∈Prof(C), and b = (b1, . . . , bn). Its
involutive structure is the composite
FO
d
c

Fj
 FICO
d
c

ν
 IDFO
d
c

for each
d
c
 ∈op
C × C.
⋄
As an illustration of Theorem 8.6.2, we consider the following functor.

8.6
Change of Involutive Symmetric Monoidal Categories
219
DEFINITION 8.6.4. Suppose (C, ⊗, 1) is a monoidal category. Deﬁne the func-
tor
(8.6.5)
Set

 C
by
(X) =

X
1
for X ∈Set.
We regard (Set, ×, ∗) as an involutive monoidal category with the trivial
involutive structure

IdSet, IdIdSet

.
LEMMA 8.6.6. For each involutive symmetric monoidal category C, the functor
 : Set

C is canonically an involutive strong symmetric monoidal functor.
PROOF. The monoidal functor structure morphism
0 : 1

(∗) = 1
is Id1. The other structure morphism is given by the composite
in C for X, Y
∈Set. The bottom horizontal isomorphism follows from the
assumption that the monoidal product in C commutes with colimits, in particular
coproducts, on both sides. The symmetric monoidal category axioms in C imply
that (, 2, 0) is a strong symmetric monoidal functor.
We equip  with the distributive law ν deﬁned as the composite
for X ∈Set. The bottom right horizontal isomorphism uses Proposition 2.1.4(2).
To check that this makes  into an involutive strong symmetric monoidal functor,
we use Lemma 4.3.2. The diagram (4.3.4) for  is commutative because both
composites are equal to I0.
The diagram (4.3.3) for  boils down to the outer-most diagram below.

220
8
Involutive Operads
The lower right trapezoid is commutative by the left unity diagram (4.1.4) for I.
The upper right trapezoid is commutative by the naturality of λ. The left triangle is
commutative by deﬁnition.
□
COROLLARY 8.6.7. For each involutive symmetric monoidal category C, the
involutive strong symmetric monoidal functor 
:
Set

C induces an
involutive functor
IOpC
Set
IOp()  IOpC
C .
PROOF. We apply Theorem 8.6.2 to  in Lemma 8.6.6.
□
EXAMPLE 8.6.8 (Involutive Associative and Commutative Operads). By Expla-
nation 8.6.3, the following involutive operads are all in the image of the involutive
functor IOp() in Corollary 8.6.7:
•
The involutive associative operad (As, jrev) in Example 8.3.10.
•
The non-reversing involutive associative operad (As, j) in Example 8.3.14.
•
The D-diagram versions (AsD, jrev) and (AsD, j) in Example 8.3.15.
•
The commutative versions (Com, j) and (ComD, j) in Example 8.3.16.
The color set C is
•
{∗} for (As, jrev), (As, j), and (Com, j);
•
Ob(D) for (AsD, jrev), (AsD, j), and (ComD, j).
In other words, they all come from their corresponding involutive operads in Set
under the involutive strong symmetric monoidal functor  : Set

C.
⋄
The next section contains more examples of Corollary 8.6.7.
8.7
AQFT Involutive Operad
The purpose of this section is to discuss an involutive operadic approach to algebraic
quantum ﬁeld theory (AQFT) from [BSW∞, BSW19a, BSW19b]. We observe that
the AQFT involutive operads arise from the involutive functor in Corollary 8.6.7. An
algebraic quantum ﬁeld theory is a functor that goes from a category of geometric

8.7
AQFT Involutive Operad
221
objects to a category of algebraic objects. The following deﬁnition is a way to
formalize the idea of disjoint subsets in geometric objects.
DEFINITION 8.7.1. Suppose D is a small category with object set D. An
orthogonality relation on D is a set T of pairs (f1, f2), called an orthogonal pair,
of morphisms in D that satisfy the following conditions:
Common Codomain:
f1 and f2 have the same codomain.
Symmetry:
If (f1, f2) ∈T , then (f2, f1) ∈T .
Closure:
If (f1, f2) ∈T and if h1, h2, g are morphisms in C, then (gf1, gf2) ∈T
and (f1h1, f2h2) ∈T as long as the compositions are deﬁned.
If T is an orthogonality relation on D, then (D, T ) is called an orthogonal category.
EXAMPLE 8.7.2 (Lorentzian Manifolds). Suppose Loc is a small category that
is equivalent to the category of oriented, time-oriented, and globally hyperbolic
Lorentzian manifolds of a ﬁxed dimension d ≥2. We always assume that our
manifolds are Hausdorff and second-countable. The reader is referred to [BGP07]
for an introduction to Lorentzian manifolds.
Suppose C is the subset of Cauchy morphisms in Loc, and
Loc′ = Loc[C−1]
is the category of fractions, in which the morphisms in C are formally inverted.
Since Loc is a small category, so is Loc′. Part of the construction of the category of
fractions is a functor
L : Loc

Loc′
that satisﬁes the following universal property. For each functor F : Loc

D
such that F(g) is an invertible morphism in D for each g ∈C, there exists a unique
functor F ′ : Loc′

D such that the diagram
is commutative. For an object or a morphism in Loc, its image under the functor L
is denoted by the same symbol. For discussion of category of fractions, see [Bor94a]
(Section 5.2) or the original source [GZ67] (Chapter 1).
Deﬁne T as the set of pairs of morphisms in Loc′ of the form

gf1h1, gf2h2

in which:

222
8
Involutive Operads
•
f1 : X

Z and f2 : Y

Z are morphisms in Loc such that the images
f1(X) and f2(Y) are causally disjoint subsets in Z.
•
g, h1, h2 are morphisms in Loc′ such that the compositions gf1h1 and gf2h2 are
deﬁned.
This deﬁnes an orthogonality relation T on Loc′.
⋄
EXAMPLE 8.7.3 (Oriented and Riemannian Manifolds). For a ﬁxed integer d ≥
1, suppose Man is a small category that is equivalent to the category of d-
dimensional oriented manifolds, with orientation-preserving open embeddings as
morphisms. See [ONe83] for discussion of manifolds. Deﬁne T as the set of pairs
(f1 : X

Z, f2 : Y

Z)
of morphisms in Man such that the images of f1 and f2 are disjoint in Z. This
deﬁnes an orthogonality relation on Man.
Similarly, suppose Riem is a small category that is equivalent to the category
of d-dimensional oriented, Riemannian manifolds, with orientation-preserving
isometric open embeddings as morphisms. Deﬁne T as the set of pairs (f1, f2)
of morphisms with a common codomain and disjoint images. This deﬁnes an
orthogonality relation on Riem.
⋄
We now associate an involutive operad in Set to each orthogonal category.
DEFINITION 8.7.4. Suppose (D, T ) is an orthogonal category with Ob(D) = D.
Deﬁne the following structures.
Entries:
For each
d
c
 ∈Prof(D) × D, deﬁne the quotient set
O(D,T )
d
c
 = D
d
c
&
∼
with
D
d
c
 = |c| ×
|c|

j=1
D(cj, d)
as in (8.2.13). The equivalence relation ∼on D
d
c
 is deﬁned as
(σ, f ) ∼(σ ′, f ′)
if and only if the following two conditions hold.
•
f = f ′.
•
The permutation

8.7
AQFT Involutive Operad
223
σf
σ ′σ −1
 σ ′f
is generated by transpositions of adjacent orthogonal pairs. This means that
the permutation σ ′σ −1 ∈|c| factors into a product τk · · · τ1 of transpositions
such that, for each 1 ≤i ≤k, the permutation
τi−1 · · · τ1σf
τi
 τiτi−1 · · · τ1σf
is a transposition of an adjacent orthogonal pair in the sequence τi−1 · · · τ1σf .
Other Structure:
The right |c|-action, colored units, operadic composition, and
involutive structure on O(D,T ) are inherited from those in (AsD, jrev) in Set, as
in Examples 8.2.12 and 8.3.15.
This ﬁnishes the deﬁnition of O(D,T ).
LEMMA 8.7.5. O(D,T ) in Deﬁnition 8.7.4 is a D-colored involutive operad in
Set.
PROOF. Since (AsD, jrev) in Set is a D-colored involutive operad, it sufﬁces to
show that its structures respect the equivalence relation ∼that deﬁnes O(D,T ). We
will use the notations in Example 8.2.12.
To show that the operadic composition in AsD respects ∼, suppose (σ, f ) ∼
(σ ′, f ) with
•
f = (f1, . . . , fn) ∈n
j=1 D(cj, d), n = |c|,
•
gj =

gj1, . . . , gjkj

∈kj
i=1 D(bji, cj), and
•
τj ∈kj for 1 ≤j ≤n.
By assumption there is a factorization of the permutation σ ′σ −1 into a product
τk · · · τ1 of transpositions that connects the two sequences
σf =

fσ −1(1), . . . , fσ −1(n)

and
σ ′f =

fσ ′−1(1), . . . , fσ ′−1(n)

by successively permuting adjacent orthogonal pairs. We will write τjgj as g
τj
j . We
must show that the two sequences

fσ −1(1)gτ1
1 , . . . , fσ −1(n)gτn
n

and

fσ ′−1(1)gτ1
1 , . . . , fσ ′−1(n)gτn
n

are connected by ﬁnitely many steps, in which each step permutes an adjacent
orthogonal pair. This is achieved using the block permutation

224
8
Involutive Operads
(σ ′σ −1)⟨k1, . . . , kn⟩= (τk · · · τ1)⟨k1, . . . , kn⟩
together with the following facts.
•
A permutation of two adjacent blocks, say the jth and the (j +1)st blocks, can be
factored into a ﬁnite product of adjacent transpositions with each permuting an
element originally from the jth block and an element originally from the (j +1)st
block.
•
If (fp, fq) is an orthogonal pair for some 1 ≤p < q ≤n, then (fpgpr, fqgqs)
is also an orthogonal pair for 1 ≤r ≤kp and 1 ≤s ≤kq, by one of the closure
properties of an orthogonality relation.
This shows that

(σ; τ1, . . . , τn),

f1g1, . . . , fngn

∼

(σ ′; τ1, . . . , τn),

f1g1, . . . , fngn

.
A similar argument shows that the operadic composition in AsD respects the ∼-
equivalence classes for (τj, gj) ∼(τ ′
j, gj) for 1 ≤j ≤n.
From Example 8.3.15, over Set the involutive structure jrev : AsD

IAsD
is induced by the assignment
(σ, f ) 
 (πnσ, f )
for
(σ, f ) ∈D
d
c
,
with πn the interval-reversing permutation in (8.3.12). That jrev descends to the
quotient O(D,T ) follows from the permutation identities
(j, j + 1)π−1
n
= (j, j + 1)πn = πn(n −j, n −j + 1)
for all adjacent transpositions (j, j + 1) with 1 ≤j ≤n −1.
□
COROLLARY 8.7.6. Suppose C is an involutive symmetric monoidal category,
and (D, T ) is an orthogonal category with Ob(D) = D. Then
IOp()(O(D,T ))
is a D-colored involutive operad in C.
PROOF. We apply the involutive functor IOp() in Corollary 8.6.7 to the D-
colored involutive operad O(D,T ) in Lemma 8.7.5.
□
DEFINITION 8.7.7. In the setting of Corollary 8.7.6, we deﬁne
OC
(D,T ) = IOp()(O(D,T )) ∈IOpD
C ,
called the AQFT involutive operad in C of type (D, T ).

8.7
AQFT Involutive Operad
225
EXPLANATION 8.7.8. Following Explanation 8.6.3, the AQFT involutive operad
OC
(D,T ) has entries
OC
(D,T )
d
c
 =

O(D,T )
d
c

1
for
d
c
 ∈op
D × D, with operadic and involutive structures induced by those on
O(D,T ).
⋄
COROLLARY 8.7.9. In the setting of Deﬁnition 8.7.7, an involutive OC
(D,T )-
algebra X is exactly a D-diagram of reversing involutive monoids in C such that
for each orthogonal pair (f : a

c, g : b

c) in T , the diagram
(8.7.10)
in C is commutative.
PROOF. This follows from Theorem 8.5.6 and the deﬁnition of O(D,T ) as an
entrywise quotient of AsD in Set.
□
EXAMPLE 8.7.11 (Locally Covariant QFT with Time-Slice). Suppose (Loc′, T )
is the orthogonal category in Example 8.7.2. An involutive algebra over the AQFT
involutive operad OC
(Loc′,T ) is called a locally covariant quantum ﬁeld theory with
the time-slice axiom [BFV03, FV15]. Such an involutive algebra X is a Loc′-
diagram of reversing involutive monoids in C that satisﬁes (8.7.10), which is
called the Einstein causality axiom. The time-slice axiom refers to the fact that
Cauchy morphisms in Loc act as isomorphisms in X because the subset of Cauchy
morphisms is inverted in the category Loc′ of fractions. In other words, for each
Cauchy morphism f : A

B in Loc, the morphism
Xf : XA

XB ∈C
is invertible. For example, if C = Vect(C) or Chain(C), then X is a Loc′-diagram
of complex unital (differential graded) ∗-algebras that satisﬁes the Einstein causality
axiom.
⋄
EXAMPLE 8.7.12 (Chiral Conformal and Euclidean QFT). For the orthogonal
category (Man, T ) in Example 8.7.3, involutive algebras over the AQFT involutive
operad OC
(Man,T ) are called chiral conformal quantum ﬁeld theories. The case with
d = 1 and C = Vect(K) is studied in [BDH15].

226
8
Involutive Operads
Similarly, for the orthogonal category (Riem, T ) in Example 8.7.3, involutive
algebras over the AQFT involutive operad OC
(Riem,T ) are called Euclidean quantum
ﬁeld theories. The case with C = Vect(K) is studied in [Sch99].
⋄
8.8
Exercises and Notes
(1) Check the monoidal category axioms in the proof of Proposition 8.1.11.
(2) In the setting of Example 8.2.9, suppose (X, j) is an involutive object in CC.
•
Prove that End(X) inherits from X the structure of a C-colored involutive
operad in C. Hint: Use the fact that I is adjoint to itself (Proposition 2.1.4)
and the natural morphism
I[A, B]
 [IA, IB]
for
A, B ∈C,
which is itself adjoint to the composite
I[A, B] ⊗IA
I2
 I

[A, B] ⊗A

 IB.
•
For a C-colored involutive operad O in C, prove that an involutive O-algebra
structure on (X, j) is equivalent to a morphism O

End(X) of C-
colored involutive operads.
(3) In
the
proof
of
Proposition
8.3.2,
prove
the
commutativity
of
the
diagrams (4.1.3), (4.1.4), and (4.1.6) in SSeqC
C.
(4) Check the permutation identity (8.3.13).
(5) Suppose ϕ : C

D is a function between sets, and C is a symmetric
monoidal category. Show that there is an induced adjunction
OpC
C
ϕ!
 OpD
C
ϕ∗

whose right adjoint sends a D-colored operad O to the C-colored operad ϕ∗O
with entries

ϕ∗O

c0
c1,...,cn
 = O

ϕc0
ϕc1,...,ϕcn

for c0, . . . , cn ∈C, and with operad structure induced by that of O. Hint: Use
the Adjoint Lifting Theorem [Bor94b] (4.5.6).

8.8
Exercises and Notes
227
(6) Suppose f : O

P is a morphism of C-colored operads in a symmetric
monoidal category C. Show that there is an induced adjunction
Alg(O)
f!
 Alg(P)
f ∗

whose right adjoint sends a P-algebra (X, θ) to the O-algebra (X, f ∗θ) with
structure morphism
for
d
c
 ∈op
C × C.
(7) For an involutive symmetric monoidal category C, consider the category Inv(C)
of involutive objects in C with the involutive symmetric monoidal structure in
Theorem 4.4.1.
•
Prove that there is a canonical isomorphism
Inv

SSeqC
C
 ∼= SSeqC
Inv(C)
of involutive monoidal categories.
•
Prove that there is a canonical isomorphism
IOpC
C ∼= OpC
Inv(C)
of categories. In other words, involutive operads are operads in involutive
objects.
•
Conclude that:
– Exercise 5 has an analogue for involutive operads.
– Exercise 6 has an analogue for involutive algebras and a morphism f of
C-colored involutive operads.
(8) In the proof of Theorem 8.5.6, check that the diagram (8.5.3) for AsD is actually
determined by the cases (i), (ii), and (iii) as stated.
(9) Give detailed proofs of Propositions 8.5.7, 8.5.8, and Corollary 8.7.9.
Notes. The concept of an involutive operad is due to [BSW19b], and most of
this chapter is based on that paper, the main exceptions being Theorem 8.4.5 and
Section 8.6.
The book [Yau16] is a gentle introduction to colored operads. A compact list
of deﬁnitions regarding one-colored operads and their algebras is in [May97a,

228
8
Involutive Operads
May97b]. For broad surveys of operads and their applications, the reader may
consult the article [Mar08] and the book [MSS02]. For variations of operads, such
as props and wheeled props, the reader is referred to [YJ15]. The reader may also be
interested in applications of operads to homotopy theory [WY18], wiring diagrams
[Yau18], homotopical aspects of quantum ﬁeld theory [Yau20], and ∞-operads and
monoidal categories with group equivariance [Yau∞].
What we call an operad in Deﬁnition 8.1.12 is also called a symmetric operad
and a symmetric multicategory in the literature. A C-colored operad as in Propo-
sition 8.1.13, but without the symmetric group actions and the equivariance
axioms, is called a multicategory, which is originally due to Lambek [Lam69].
The term operad is due to May [May72], who deﬁned one-colored operad as in
Proposition 8.1.13 in topological spaces. The C-colored circle product in (8.1.8) is
the colored version of the circle product deﬁned by Kelly [Kel05a].

Symbol Deﬁnition List
Z
The set of integers
Z≥0
The set of non-negative integers
K
A ﬁeld
C
The ﬁeld of complex numbers
Chapter 1
Page
Description
Ob(C)
1
Class of objects in a category C
C(X, Y), C(X; Y)
1
Set of morphisms from X to Y in C
dom(f )
1
Domain of a morphism f
cod(f )
1
Codomain of a morphism f
IdX
2
Identity morphism of X
Mor(C)
2
Collection of morphisms in C
gf or g ◦f
2
Composition of morphisms
Cop
2
Opposite category of C
Cat
3
Category of small categories
θ ∗θ′
4
Horizontal composition
of natural transformations
CD
4
Diagram category of functors
D

C
L ⊣R
4
An adjunction
colim F, colim
x∈D Fx
6
Colimit of F : D

C
, ⨿
6
Coproducts
⊗
7
Monoidal product
1
7
Monoidal unit
α
7
Associativity isomorphism
λ, ρ
7
Left and right unit isomorphisms
(X, μ, 1)
9
A monoid
© The Author(s), under exclusive license to Springer Nature Switzerland AG 2020
D. Yau, Involutive Category Theory, Lecture Notes in Mathematics 2279,
https://doi.org/10.1007/978-3-030-61203-0
229

230
Symbol Deﬁnition List
Mon(C)
9
Category of monoids in C
(F, F2, F0)
9
A monoidal functor
ξ
12
Symmetry isomorphism
CMon(C)
14
Category of commutative monoids in C
Set
15
Category of sets
Poset
15
Category of partially ordered sets
Rel
15
Category of relations
Chain(K)
15
Category of chain complexes over K
Vect(K)
15
Category of K-vector spaces
Hilb
15
Category of complex Hilbert spaces
[−, −]
16
Internal hom
End(C)
16
Category of endofunctors on C
(T, μ, ϵ)
16
A monad
ob
∼
19
Equivalence relation on Ob(D)
Mor(D)
19
Non-empty ﬁnite
sequences of morphisms
	
Mor(D)
19
ob
∼-composable sequences
≃
19
Equivalence relation on 	
Mor(D)
[f ]
20
≃-equivalence class
1
24
Discrete category with one object
2
24
Category with one non-identity morphism
Chapter 2
(C, I, ι)
27
An involutive category
I, IC
27
Involution functor
ι, ιC
27
Unit of the involution functor
IdIdC
29
Identity natural transformation of IdC
V
30
Conjugate vector space of V
(F, ν)
31
An involutive functor
ν, νF
31
Distributive law
ICat
34
Category of small involutive categories
IEnd(C)
35
Category of involutive functors on C
(X, jX)
40
An involutive object
Inv(C)
40
Category of involutive objects in C
Cati
41
A subcategory of Cat
Chapter 3
ICat0
52
Subcategory of ICat of strict involutive functors
ICatst
52
Category of small strict involutive categories
Fsi
53
Left adjoint of U : ICatst

Cat
Fcosi
53
Right adjoint of U : ICatst

Cat
Ficat(C)
54
Free involutive category of a category C
Iicat
55
Involution functor of Ficat(C)
ιicat
55
Unit of Iicat

Symbol Deﬁnition List
231
Chapter 4
IMCat
81
Category of small involutive monoidal categories
IMCat0
81
Subcategory of IMCat of strict involutive
strict monoidal functors
ISymCat
82
Symmetric version of IMCat
ISymCat0
82
Symmetric version of IMCat0

Imon, ιmon
86
Involutive structure on Mon(C)
IMon(C)
87
Category of involutive monoids in C
ICMon(C)
92
Category of involutive commutative monoids in C

Irmon, ιrmon
94
Another involutive structure on Mon(C)
RIMon(C)
95
Category of reversing involutive monoids in C
(T, μ, ϵ, ν)
97
An involutive monad
(IT , ιT )
98
Involutive structure on Alg(T )
IAlg(T )
99
Category of involutive T -algebras

Tinv, μinv, ϵinv
100
Induced monad in Inv(C)
(Tmon, μ, ϵ)
102
Free monoid monad
Chapter 5
Wim(S)
107
Involutive monoidal words generated by S
word(X)
108
Underlying word of X
word1(X)
108
Underlying integer sequence of X
Fim(C)
109
Free involutive monoidal category of C
Wistm(S)
121
Involutive strict monoidal words generated by S
Fistm(C)
121
Free involutive strict monoidal category of C
Nat(F; G)
124
Collection of natural transformations F

G
It(C)
124
Category of functors on C
Cst
129
Strictiﬁcation of C
x⊗
129
Left-normalized monoidal product
⊗st
130
Monoidal product in Cst
Ist
131
Involution functor on Cst
ιst
132
Unit of Ist
Wi
im(S)
134
Involutive monoidal words of IS : S

S
Fi
im(C)
135
Free involutive monoidal category
of an involutive category
Wi
istm(S)
141
Involutive strict monoidal words of IS : S

S

232
Symbol Deﬁnition List
Chapter 6
(y1, . . . , yk)σ
146
Right symmetric group action
σ⟨k1, . . . , kn⟩
146
Block permutation
τ1 × · · · × τn
146
Block sum
Fisym(C)
146
Free involutive symmetric monoidal category
Fiss(C)
153
Free involutive strict symmetric monoidal category
Fi
isym(C)
157
Free involutive symmetric monoidal category
of an involutive category
Fi
iss(C)
160
Free involutive strict symmetric monoidal category
of an involutive category
Chapter 7
IP(C)
166
Category of inner product objects in C
MIP(C)
168
Category of monoid inner product objects in C
QP(C)
172
Category of quantum probability objects in C
Chapter 8
Prof(C)
187
Set of C-proﬁles
a
187
A proﬁle
σa, aσ
187
Left and right permutations of a
SSeqC
C = Cop
C ×C
187
Category of C-colored symmetric sequences in C
d
c

187
An object in op
C × C
X
d
c

187
An entry of a C-colored symmetric sequence X
CS = 
S C
188
Category of S-colored objects
 d∈D F(d, d)
188
Coend of F : Dop × D

B
S · X
189
S-indexed coproduct
X ◦Y
189
Symmetric circle product
I
190
Monoidal unit in SSeqC
C
OpC
C
191
Category of C-colored operads in C
γ
192
Operadic composition
1c
192
c-colored unit
Xc
195
Xc1 ⊗· · · ⊗Xcm or 1
O ◦−
195
Monad of an operad O
Alg(O)
196
Category of O-algebras
End(X)
198
Endomorphism operad of X
As
198
Associative operad

σ; τ1, . . . , τn

198
Operadic composition in As
Com
199
Commutative operad
D(c; d)
199
n × n
j=1 D(cj, d)

Symbol Deﬁnition List
233
AsD
199
Operad for D-diagrams of monoids
fjgj
200

fjgj1, . . . , fjgjkj

ComD
201
Operad for D-diagrams of commutative monoids
IOpC
C
204
Category of C-colored involutive operads in C
jrev : As

IAs
205
Involutive structure on As
jrev : AsD

IAsD
207
Involutive structure on AsD
IOp(F)
217
Change-of-category functor on involutive operads
Loc
221
Category of Lorentzian manifolds
Loc′
221
Category of fractions Loc[C−1]
Man
222
Category of oriented manifolds
Riem
222
Category of oriented Riemannian manifolds
O(D,T )
222
An entrywise quotient of AsD in Set
OC
(D,T )
224
AQFT involutive operad

Bibliography
[AC04]
S. Abramsky, B. Coecke, A categorical semantics of quantum protocols, in Proceding
of the 19th IEEE Conferencde on Logic in Computer Science (IEEE Computer Science
Press, New York, 2004)
[AC08]
S. Abramsky, B. Coecke, Categorical quantum mechanics, in Handbook of Quantum
Logic and Quantum Structures, vol. II (Elsevier, Berlin, 2008), pp. 261–323
[AR94]
J. Adámek, J. Rosický, in Locally Presentable and Accessible Categories. Lecture
Note Series, vol. 189 (London Mathematical Society, Cambridge, 1994)
[Arv76]
W. Arveson, An Invitation to C∗-Algebras, Graduate Texts in Mathematics, vol. 39
(Springer, Berlin, 1976)
[Awo10]
S. Awodey, Category Theory (Oxford University, Oxford, 2010)
[Bae06]
J.C. Baez, Quantum quandaries: a category-theoretic perspective, in Structural Foun-
dations of Quantum Gravity, ed. by S. French, D. Rickles, J. Saatsi (Oxford University,
Oxford, 2006), pp. 240–265
[BGP07]
C. Bär, N. Ginoux, F. Pfäfﬂe, Wave Equations on Lorentzian Manifolds and Quantiza-
tion. ESI Lectures in Mathematical Physics (European Mathematical Society, Zürich,
2007)
[Bar08]
D.J. Barnes, Rational Equivariant Spectra. PhD dissertation (Shefﬁeld University,
Shefﬁeld, 2008). https://arxiv.org/abs/0802.0954v1.
[BW85]
M. Barr, C. Wells, Toposes, triples and theories, Grundlehren der Mathematischen
Wissenschaften, vol. 278 (Springer, New York, 1985). Reprints in Theory Appl. Categ.
(2005), pp. 1–289
[BDH15]
A. Bartels, C.L. Douglas, A. Henriques, Conformal nets I: coordinate-free nets. Int.
Math. Res. Not. 13, 4975–5052 (2015)
[BBP99]
M.A. Bednarczyk, A.M. Borzyszkowski, W. Pawlowski, Generalized congruences–
epimorphisms in Cat. Theory Appl. Categ. 5, 266–280 (1999)
[BM09]
E.J. Beggs, S. Majid, Bar categories and star operations. Algebr. Represent. Theory
12, 103–152 (2009)
[Ben67]
J. Bénabou, Introduction to bicategories, in Reports of the Midwest Category Seminar.
Lecture Notes in Mathematics, vol. 47 (Springer, Berlin, 1967), pp. 1–77
[BBS19]
M. Benini, S. Bruinsma, A. Schenkel, Linear Yang-Mills theory as a homotopy AQFT.
Commun. Math. Phys. (2019). https://doi.org/10.1007/s00220-019-03640-z
[BSW∞]
M. Benini, A. Schenkel, L. Woike, Operads for algebraic quantum ﬁeld theory.
preprint, arXiv:1709.08657
[BSW19a] M. Benini, A. Schenkel, L. Woike, Homotopy theory of algebraic quantum ﬁeld
theories. Lett. Math. Phys. https://doi.org/10.1007/s11005-018-01151-x
© The Author(s), under exclusive license to Springer Nature Switzerland AG 2020
D. Yau, Involutive Category Theory, Lecture Notes in Mathematics 2279,
https://doi.org/10.1007/978-3-030-61203-0
235

236
Bibliography
[BSW19b] M. Benini, A. Schenkel, L. Woike, Involutive categories, colored ∗-operads and
quantum ﬁeld theory. Theory Appl. Categ. 34, 13–57 (2019)
[BNY18]
J. Bichon, S. Neshveyev, M. Yamashita, Graded twisting of comodule algebras and
module categories. J. Noncommutative Geometry 12, 331–368 (2018). https://doi.org/
10.4171/JNCG/278
[Bor94a]
F. Borceux, Handbook of Categorical Algebra 1: Basic Category Theory (University
of Cambridge, Cambridge, 1994)
[Bor94b]
F. Borceux, Handbook of Categorical Algebra 2: Categories and Structures (Univer-
sity of Cambridge, Cambridge, 1994)
[BW98]
M. Bordemann, S. Waldmann, Formal GNS construction and states in deformation
quantization. Comm. Math. Phys. 195, 549–583 (1998)
[BFV03]
R. Brunetti, K. Fredenhagen, R. Verch, The generally covariant locality principle: a
new paradigm for local quantum ﬁeld theory. Comm. Math. Phys. 237, 31–68 (2003)
[CG17]
K. Costello, O. Gwilliam, Factorization Algebras in Quantum Field Theory, vol. 1.
New Mathematical Monographs, vol. 31 (University of Cambridge, Cambridge, 2017)
[DGNO10] V. Drinfeld, S. Gelaki, D. Nikshych, V. Ostrik, On braided fusion categories I. Selecta
Math. 16, 1–119 (2010). https://doi.org/10.1007/s00029-010-0017-z
[Egg11]
J.M. Egger, On involutive monoidal categories. Theory Appl. Categ. 25, 368–393
(2011)
[Eps66]
D.B.A. Epstein, Functors between tensored categories. Invent. Math. 1, 221–228
(1966)
[FV15]
C.J. Fewster, R. Verch, Algebraic quantum ﬁeld theory in curved spacetimes, in
Advances in Algebraic Quantum Field Theory, ed. by R. Brunetti et al. (Springer,
Heidelberg, 2015), pp.125–189
[GZ67]
P. Gabriel, M. Zisman, Calculus of Fractions and Homotopy Theory (Springer, Berlin,
1967)
[Gal17]
C. Galindo, Coherence for monoidal G-categories and braided G-crossed categories.
J. Algebra 487, 118–137 (2017)
[GN43]
I. Gelfand, M. Neumark, On the imbedding of normed rings into the ring of operators
in Hilbert space. Matematicheskii Sbornik 12, 197–217 (1943)
[Gra18]
M. Grandis, Category Theory and Applications: A Textbook for Beginners (World
Scientiﬁc, Singapore, 2018). https://doi.org/10.1142/10737.
[Haa96]
R. Haag, Local Quantum Physics: Fields, Particles, Algebras, Texts and Monographs
in Physics (Springer, Berlin, 1996)
[Hov99]
M. Hovey, Model categories, Mathematical Surveys and Monographs, vol. 63 (Amer-
ican Mathematical Society, Providence, 1999)
[Jac12]
B. Jacobs, Involutive categories and monoids, with a GNS-correspondence. Found.
Phys. 42, 874–895 (2012)
[JY21]
N. Johnson, D. Yau, 2-dimensional categories (Oxford University Press, New York,
2021)
[JS93]
A. Joyal, R. Street, Braided tensor categories. Adv. Math. 102, 20–78 (1993)
[Kel64]
G.M. Kelly, On Mac Lane’s conditions for coherence of natural associativities,
commutativities, etc. J. Algebra 1, 397–402 (1964)
[Kel05a]
G.M. Kelly, On the operads of J.P. May. Repr. Theory Appl. Categ. 13, 1–13 (2005)
[KM15]
I. Khavkine, V. Moretti, Algebraic QFT in Curved Spacetime and Quasifree Hadamard
States: An Introduction, in Advances in Algebraic Quantum Field Theory, ed. by R.
Brunetti et al. Mathematical Physics Studies (Springer, Berlin, 2015), pp. 191–251
[Lac10]
S. Lack, A 2-Categories Companion, in Towards Higher Categories, ed. by J.C. Baez,
J.P. May (Springer, New York, 2010)
[Lam69]
J. Lambek, Deductive systems and categories. II. Standard constructions and closed
categories, in 1969 Category Theory, Homology Theory and their Applications, I
(Battelle Instutite Conference, Seattle, Wash.) (Springer, Berlin, 1969), pp. 76–122

Bibliography
237
[Lei14]
T. Leinster, Basic Category Theory (University of Cambridge, Cambridge, 2014)
[Lor∞]
F. Loregian, This is the (co)end, my only (co)friend. arXiv:1501.02503
[Mac63]
S. Mac Lane, Natural associativity and commutativity. Rice Univ. Studies 49, 28–46
(1963)
[Mac98]
S. Mac Lane, Categories for the working mathematician, Graduate Texts in Mathe-
matics, vol. 5, 2nd ed. (Springer, New York, 1998)
[Mar08]
M. Markl, Operads and PROPs, in Handbook of Algebra, vol. 5 (Elsevier, Amsterdam,
2008), pp.87–140
[MSS02]
M. Markl, S. Shnider, J. Stasheff, Operads in Algebra, Topology and Physics,
Mathematical Surveys and Monographs, vol. 96 (American Mathematical Society,
Providence, 2002)
[May72]
J.P. May, The geometry of iterated loop spaces, Lecture Notes in Mathematics, vol.
271 (Springer, New York, 1972)
[May97a]
J.P. May, Deﬁnitions: operads, algebras and modules. Contemp. Math. 202, 1–7
(1997)
[May97b]
J.P. May, Operads, algebras, and modules. Contemp. Math. 202, 15–31 (1997)
[Mor18]
V. Moretti, Spectral Theory and Quantum Mechanics: Mathematical Structure of
Quantum Theories, Symmetries and Introduction to the Algebraic Formulation, 2nd
ed. (Springer, Berlin, 2018)
[ONe83]
B. O’Neill, Semi-Riemannian Geometry: With Applications to Relativity (Academic
Press, San Diego, 1983)
[Par18]
A.J. Parzygnat, From Observables and States to Hilbert Space and Back: A 2-
Categorical Adjunction. Appl. Categ. Struct. 26, 1123–1157 (2018)
[Pin14]
C.C. Pinter, A Book of Set Theory (Dover, New York, 2014)
[Rie16]
E. Riehl, Category Theory in Context (Courier Dover, New York, 2016)
[Rom17]
S. Roman, An Introduction to the Language of Category Theory, Compact Textbooks
in Mathematics (Birkhäuser, Basel, 2017)
[Sch99]
D. Schlingemann, From Euclidean ﬁeld theory to quantum ﬁeld theory. Rev. Math.
Phys. 11, 1151–1178 (1999)
[Sch90]
K. Schmüdgen, Unbounded operator algebras and representation theory, Operator
Theory: Advances and Applications, vol. 37 (Birkhäuser, Basel, 1990)
[Sch72]
H. Schubert, Categories (Springer, Berlin, 1972)
[Seg47]
I.E. Segal, Irreducible representations of operator algebras. Bull. Amer. Math. Soc.
53, 73–88 (1947)
[Sel07]
P. Selinger, Dagger compact closed categories and completely positive maps. Elect.
Notes Theoret. Comp. Sci. 170, 139–163 (2007)
[Sel10]
P. Selinger, Autonomous categories in which A ∼= A∗(extended abstract), in
Proceedings of the 7th International Workshop on Quantum Physics and Logic (QPL
2010), Oxford (2010), pp. 151–160
[SV02]
A. Shen, N.K. Vereshchagin, Basic Set Theory, Student Mathematical Library, vol. 17
(American Mathematical Society, Rhode Island, 2002)
[Sim11]
H. Simmons, An Introduction to Category Theory (University of Cambridge, Cam-
bridge, 2011)
[Tam01]
D. Tambara, Invariants and semi-direct products for ﬁnite group actions on tensor
categories. J. Math. Soc. Japan 53, 429–456 (2001)
[Wei97]
C.A. Weibel, An Introduction to Homological Algebra. Cambridge Studies in
Advanced Mathematics, vol. 38 (University of Cambridge, Cambridge, 1997)
[Wei80]
J. Weidmann, Linear operators in Hilbert spaces, Graduate Texts in Mathematics,
vol. 68 (Springer, Berlin, 1980)
[WY18]
D. White, D. Yau, Bousﬁeld localization and algebras over colored operads. Appl.
Categ. Struct. 26, 153–203 (2018)

238
Bibliography
[Yau16]
D. Yau, Colored Operads, AMS Graduate Studies in Mathematics, vol. 170 (American
Mathematical Society, Providence, 2016)
[Yau18]
D. Yau, Operads of Wiring Diagrams. Lecture Notes in Mathematics, vol. 2192
(Springer, Switzerland, 2018)
[Yau20]
D. Yau, Homotopical Quantum Field Theories (World Scientiﬁc, Singapore, 2020)
[Yau∞]
D. Yau, Inﬁnity Operads and Monoidal Categories with Group Equivariance.
arXiv:1903.03839
[YJ15]
D. Yau, M.W. Johnson, A Foundation for PROPs, Algebras, and Modules, Mathemat-
ical Surveys and Monographs, vol. 203 (American Mathematical Society, Providence,
2015)

Index
Symbols
2-category, 49, 105
2-functor, 49, 105
A
Adjoint equivalence, 5, 39
Adjoint Lifting Theorem, 226
Adjoint pair, 4
Adjunction, 4
Algebra, 15, 91, 96
differential graded star, 96
of a monad, 17
of an operad, 196
star, 96
Algebraic quantum ﬁeld theory, 220
Algebra of observables, vii
AQFT involutive operad, 224
Associative operad, 198
involutive, 206, 220
non-reversing involutive, 207, 220
Associativity
monad, 16
monoidal functor, 10
operad, 192
operad algebra, 196
Associativity isomorphism, 7
B
Basic isomorphism, 112, 139, 160
Bicategory, 7
conjugate, 15, 30
locally small, 30
transpose, 30
Block permutation, 146, 148, 158
Block sum, 147, 158
C
C∗-algebra, 165
Categoriﬁcation, vii
Category, 1
closed, 16, 198
dagger, 28
diagram, 4
directed, 64
discrete, 2
empty, 6
enriched, 25
of fractions, 221
generator, 65
with involution, 49
involutive, 27
involutive algebra, 99, 210
involutive commutative monoid, 92
involutive monoid, 88
involutive monoidal, 72
involutive object, 40
involutive operad, 204
involutive symmetric monoidal, 72
locally ﬁnitely presentable, 64
monoidal, 7
operad, 191
operad algebra, 196
product, 208
quotient, 25
reﬂective subcategory, 25
reversing involutive monoid, 95
symmetric monoidal, 12
© The Author(s), under exclusive license to Springer Nature Switzerland AG 2020
D. Yau, Involutive Category Theory, Lecture Notes in Mathematics 2279,
https://doi.org/10.1007/978-3-030-61203-0
239

240
Index
Category (cont.)
symmetric sequence, 187
under, 173
Category of involutive categories, 34
Cauchy morphism, 221
Causally disjoint, 222
Chain complex, 15
Characterization of
an adjunction, 5
an equivalence, 5
Chiral conformal quantum ﬁeld theory, 225
Circle product
is not symmetric, 194
symmetric, 189
Closed category, 16, 198
Cocomplete, 6, 186
Codomain, 1
Coend, 188
Coequalizer, 7
Coequalizer in Cat, 22
Cofree strict involutive category, 54
Cogenerator, 69
Coherence
involutive monoidal category, 116, 138
involutive strict monoidal category, 122,
142
involutive strict symmetric monoidal
category, 154, 161
involutive symmetric monoidal category,
149, 160
monoidal category, 11
operad, 192
operad algebra, 196
Colimit, 5
preservation by left adjoints, 6
Colimit in Cat, 24
Colimits of involutive categories, 67
Color, 187
Colored object, 188, 195
Commutative group, 29
Commutative monoid
involutive, 92
operad for diagrams of, 201
Commutative operad, 199
involutive, 207, 220
Commutative star-algebra, 93
Complete, 6
Component of a natural transformation, 3
Composable, 2
Composite, 2
Concatenation, 108, 121
Conjugate, 15, 30
Conjugate linear, 168
Conjugate symmetry, 168
Conjugate vector space, 30, 42, 76
Coproduct, 6, 189
Counit of an adjunction, 5
Cowell-powered, 69
Cyclic ∗-representation, 165
D
Dagger category, 28, 42
Diagram category, 4
Diagram involutive category, 29
Differential graded algebra, 15
Differential graded star-algebra, 96
Directed category, 64
Directed colimit, 64
Discrete category, 2
Distributive law, 31
of an involutive operad, 208
is a natural isomorphism, 32
Domain, 1
E
Eilenberg-Moore adjunction, 17
Empty category, 6
Empty proﬁle, 187
Empty tensor product, 8
Endomorphism, 16
Endomorphism operad
involutive, 226
Enriched category, 25
Enriched functor, 25
Epimorphism, 2
Equalizer, 7
Equivalence, 5, 39
Equivariance
operad, 193
operad algebra, 197
Equivariant space, 30
Essentially surjective, 5, 39
Euclidean quantum ﬁeld theory, 226
F
Finitely presentable object, 64
Formal diagram, 124, 128, 155, 156
Free algebra, 17
Free involutive category, 59
Free involutive monoidal category, 109, 120
of an involutive category, 135
Free involutive strict monoidal category, 122,
142
Free involutive strict symmetric monoidal
category, 154, 162

Index
241
Free involutive symmetric monoidal category,
147, 152
of an involutive category, 158
Free monoid, 102
Free strict involutive category, 54
Fully faithful, 5, 39
Functor, 2
enriched, 25
monoidal, 9
symmetric monoidal, 14
G
Generalized congruence, 25
Generator, 65
Globally hyperbolic, 221
GNS construction, 165, 175
Groupoid, 2, 187
Groupoid of proﬁles, 187
H
Hermitian form, 168
Hexagon Axioms
for symmetric monoidal categories, 12
Hilbert space, 15, 77
Horizontal composition, 4
I
Identity functor as involutive functor, 31
Identity natural transformation, 3
Initial object, 6, 186
Inner product, 167
Inner product object, 167
monoid, 168
Inner product space, 168
Inner product to state, 174
Integer sequence, 108, 121
Internal hom, 16, 198
Interval-reversing permutation, 205
Involution, 41
Involution functor, 27
as involutive functor, 31
self-adjoint, 28
Involutive adjoint equivalence, 39
Involutive adjunction, 35
lifts to involutive objects, 48
Involutive algebra
diagrams of involutive monoids, 214
diagrams of reversing involutive monoids,
214
involutive commutative monoid, 215
involutive monad, 99
involutive operad, 210
as monad algebra, 101
reversing involutive monoid, 211
Involutive associative operad, 206, 220
involutive algebras, 211
Involutive category, 27
diagram, 29
of monad algebras, 98
as monadic algebras, 62
monoidal, 72
presentability, 68
Involutive commutative monoid, 92
as involutive algebra, 215
Involutive commutative operad, 207, 220
involutive algebras, 215
Involutive endomorphism functor, 35
Involutive endomorphism operad, 226
Involutive equivalence, 39
Involutive functor, 31
composition, 32
diagram, 34
lifts to involutive objects, 47
Involutive monad, 97
induced monad on involutive objects, 100
involutive algebra, 99
from involutive operad, 209
as a monoid, 98
Involutive monoid, 88, 204
diagrams of, 214
reversing, 95
Involutive monoidal category, 72
coherence, 116, 138
free, 109, 135
strictiﬁcation, 128
of symmetric sequences, 202
Involutive monoidal functor, 80
Involutive monoidal word, 107
Involutive natural isomorphism, 35
Involutive natural transformation, 34
lifts to involutive objects, 48
Involutive object, 40
adjoints of forgetful functor, 42
involutive category of, 46
limits and colimits, 45
Involutive operad, 204
Algebraic quantum ﬁeld theory (AQFT),
224
associative, 206, 220
commutative, 207, 220
distributive law, 208
endomorphism, 226
induced involutive monad, 209
involutive algebra, 210
as operad in involutive objects, 227

242
Index
Involutive strict monoidal category, 72
coherence, 122, 142
Involutive strict monoidal word, 121
Involutive strict symmetric monoidal category,
186
coherence, 154, 161
free, 154
Involutive structure, 27
Involutive structure map, 40
Involutive symmetric monoidal category, 72
coherence, 149, 160
free, 147, 158
strictiﬁcation, 156, 186
Isomorphism, 2
L
Lax monoidal functor, 10
Left adjoint, 4
Left adjoints preserve colimits, 6
Left-normalized monoidal product, 129
Left permutation, 187
Left unit isomorphism, 7
Length, 108
Limit, 6
preservation by right adjoints, 6
Limits of involutive categories, 67
Locally covariant quantum ﬁeld theory, 225
Locally ﬁnitely presentable, 64, 68
Locally presentable, 69
Locally small bicategory, 30
Lorentzian manifold, 221
M
Monad, 16, 62
induced by an operad, 195, 207
Monoid, 9, 17
operad for diagrams of, 199, 207, 213, 220
Monoidal category, 7
coherence, 11
involutive, 72
non-symmetric, 194
opposite, 15
strict, 8
symmetric, 12
of symmetric sequences, 190
Monoidal functor, 9
lifts to monoids, 10
strict, 10
strong, 10
symmetric, 14
Monoidal natural transformation, 11
Monoidal product, 7
Monoidal unit, 7
Monoid inner product object, 168
Monomorphism, 2, 65
Morphism
operad algebras, 197
Multicategory, 228
N
Natural isomorphism, 3
Natural transformation, 3, 124
Non-reversing involutive associative operad,
207, 220
O
Observables, 172
Open embedding, 222
Operad, 191
algebra, 196
associative, 198
associativity, 192
change of colors, 226
for diagrams of commutative monoids, 201
for diagrams of monoids, 199, 207, 213,
220
coherence, 192
commutative, 199
endomorphism, 198
equivariance, 193
induced monad, 195, 207
unit, 192
unity, 193
Operadic composition, 192
Opposite category, 2, 30, 77
Opposite groupoid, 187
Opposite monoidal category, 15
Oriented, 221
Oriented manifold, 222
Orthogonal category, 221
Orthogonality relation, 221
Orthogonal pair, 221
P
Pentagon axiom, 8
Permutation
block, 146
block sum, 146
interval-reversing, 205
Poset, 15
Product, 7
Product category, 208
Proﬁle, 187

Index
243
Prop, 228
Proper sub-object, 65
Pullback, 7
Pushout, 6, 25
Q
Quantum ﬁeld theory
chiral conformal, 225
Euclidean, 226
locally covariant, 225
Quantum probability object, 172
Quantum probability space, 173
R
Reduced, 112, 138
Reﬂective subcategory, 25
Regular cardinal, 68
Relation, 15
Reversing involutive monoid, 95
as involutive algebra, 211
diagrams of, 214
Riemannian manifold, 222
Right adjoint, 4
Right adjoints preserve limits, 6
Right permutation, 187
Right unit isomorphism, 7
S
Self-conjugate, 49
Sesquilinear, 168
Set, 15
Simplicial sets, 25
Small category, 2
Small colimit, 6
Space object, 167
Special Adjoint Functor Theorem, 69
Star-algebra, 91, 96
State, 165, 172
State to inner product, 173
Strictiﬁcation, 145
involutive monoidal category, 128
involutive symmetric monoidal category,
156, 186
monoidal category, 11
Strict involutive category, 28, 41
Strict involutive monoidal category, 72
Strict involutive symmetric monoidal category,
72
Strict monoidal category, 8
Strict monoidal functor, 10
Strong bar category, 105
Strong generator, 65
Strong monoidal functor, 10
Sub-object, 65
proper, 65
Symmetric circle product, 189
Symmetric group, 146, 187
Symmetric group action, 146
Symmetric involutive monoidal category, 105
Symmetric monoidal category, 12, 186
Symmetric monoidal functor, 14
lifts to commutative monoids, 14
Symmetric multicategory, 228
Symmetric operad, 228
Symmetric sequence, 187
involutive monoidal category, 202
monoidal category, 190
Symmetry isomorphism, 12
T
Tensor functor, 10, 128
Terminal object, 7
Time-oriented, 221
Time-slice axiom, 225
Transpose, 30
Triangle identities of an adjunction, 5
Triangle identity, 27
Trivial involutive structure, 29
U
Under category, 173
Underlying permutation, 147, 158
Underlying reversing involutive monoid, 169
Underlying word, 108, 121, 135, 141
Unit of an adjunction, 5
Unit of involution functor, 27
Unity
monad, 16
operad, 193
operad algebra, 196
Universal property, 6
V
Value object, 167, 172
Vector space, 15
Vertical composition, 3
W
Wedge, 188
Well-powered, 69
Wheeled prop, 228
Word, 107, 121

