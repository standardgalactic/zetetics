Control of Mechatronic Systems

Vice President and Editorial Director: Amanda L. Miller
Acquisitions Editors: Eric Willner and Anne Hunt
Editorial Assistant: Anne Hunt
Editorial Supervision and Production: Rosie Hayden
Production Manager: Amudhapriya Sivamurthy
Cover Manager: Hannah Lee
Marketing Manager: Sarah Brett
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Control of Mechatronic Systems
Model-Driven Design and Implementation Guidelines
Patrick O.J. Kaltjob
Ecole Nationale Superieure Polytechnique
Yaounde, Cameroun
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

This edition ﬁrst published 2021
© 2021 Patrick O.J. Kaltjob
All rights reserved. No part of this publication may be reproduced, stored in a retrieval system, or transmitted, in any
form or by any means, electronic, mechanical, photocopying, recording or otherwise, except as permitted by law.
Advice on how to obtain permission to reuse material from this title is available at http://www.wiley.com/go/
permissions.
The right of Patrick O.J. Kaltjob to be identiﬁed as the author of this work has been asserted in accordance with law.
Registered Oﬃces
John Wiley & Sons, Inc., 111 River Street, Hoboken, NJ 07030, USA
John Wiley & Sons Ltd, The Atrium, Southern Gate, Chichester, West Sussex, PO19 8SQ, UK
Editorial Oﬃce
The Atrium, Southern Gate, Chichester, West Sussex, PO19 8SQ, UK
For details of our global editorial oﬃces, customer services, and more information about Wiley products visit us at
www.wiley.com.
Wiley also publishes its books in a variety of electronic formats and by print-on-demand. Some content that appears
in standard print versions of this book may not be available in other formats.
Limit of Liability/Disclaimer of Warranty
MATLAB® is a trademark of The MathWorks, Inc. and is used with permission. The MathWorks does not warrant
the accuracy of the text or exercises in this book. This work’s use or discussion of MATLAB software or related
products does not constitute endorsement or sponsorship by The MathWorks of a particular pedagogical approach or
particular use of the MATLAB software. While the publisher and authors have used their best eﬀorts in preparing
this work, they make no representations or warranties with respect to the accuracy or completeness of the contents of
this work and speciﬁcally disclaim all warranties, including without limitation any implied warranties of
merchantability or ﬁtness for a particular purpose. No warranty may be created or extended by sales representatives,
written sales materials or promotional statements for this work. The fact that an organization, website, or product is
referred to in this work as a citation and/or potential source of further information does not mean that the publisher
and authors endorse the information or services the organization, website, or product may provide or
recommendations it may make. This work is sold with the understanding that the publisher is not engaged in
rendering professional services. The advice and strategies contained herein may not be suitable for your situation. You
should consult with a specialist where appropriate. Further, readers should be aware that websites listed in this work
may have changed or disappeared between when this work was written and when it is read. Neither the publisher nor
authors shall be liable for any loss of proﬁt or any other commercial damages, including but not limited to special,
incidental, consequential, or other damages.
Library of Congress Cataloging-in-Publication Data
Names: Kaltjob, Patrick O. J., author.
Title: Control of mechatronic systems : model-driven design and
implementation guidelines / Patrick O. J. Kaltjob.
Description: Hoboken, NJ : John Wiley & Sons, 2020. | Includes
bibliographical references and index.
Identiﬁers: LCCN 2018051541 (print) | LCCN 2019022413 (ebook) | ISBN
9781119505808 (hardcover)
Subjects: LCSH: Mechatronics. | Manufacturing processes.
Classiﬁcation: LCC TJ163.12 .K34 2019 (print) | LCC TJ163.12 (ebook) |
DDC 621–dc23
LC record available at https://lccn.loc.gov/2018051541
LC ebook record available at https://lccn.loc.gov/2019022413
Cover design by Wiley
Cover image: © Menno van Dijk/iStock.com
Set in 10/12pt WarnockPro by SPi Global, Chennai, India
10 9 8 7 6 5 4 3 2 1
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

To the Holy Trinity and Saint Mary
Special thanks to Stella, Emmanuelle, Naomi, Lukà, and David
To Aaron†, Thomas, Olive, and Anne
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

vii
Contents
Preface
xiii
Acknowledgment
xix
About the Companion Website
xxi
1
Introduction to the Control of Mechatronic Systems
1
1.1
Introduction
1
1.2
Description of Mechatronic Systems
1
1.3
Generic Controlled Mechatronic System and Instrumentation Components
6
1.3.1
The Data Processing and Computing Unit
6
1.3.2
Data Acquisition and Transmission Units
7
1.3.3
Electrically-driven Actuating Units
7
1.3.4
Measuring and Detecting Units
7
1.3.5
Signal Conditioning Units
7
1.4
Functions and Examples of Controlled Mechatronic Systems and Processes
8
1.5
Controller Design Integration Steps and Implementation Strategies
9
Exercises and Problems
16
Bibliography
26
2
Physics-Based Systems and Processes: Dynamics Modeling
27
2.1
Introduction
27
2.2
Generic Dynamic Modeling Methodology
27
2.3
Transportation Systems and Processes
28
2.3.1
Sea Gantry Crane Handling Process
28
2.3.1.1
Model 1
33
2.3.1.2
Model 2
33
2.3.2
Vertical Elevator System
35
2.3.3
Hybrid Vehicle Powertrain with Parallel Conﬁguration
38
2.3.3.1
Motor Driving and Regenerating Model
40
2.3.3.2
Vehicle Gear Box Model
41
2.3.3.3
Brake System Model
41
2.3.4
Driverless Vehicle Longitudinal Dynamics
42
2.3.5
Automated Segway Transportation Systems
45
2.4
Biomedical Systems and Processes
47
2.4.1
Infant Incubator
47
2.4.2
Blood Glucose-Insulin Metabolism
50
2.5
Fluidic and Thermal Systems and Processes
53
2.5.1
Mixing Tank
53
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

viii
Contents
2.5.2
Puriﬁed Water Distribution Process
57
2.5.3
Conveyor Cake Oven
60
2.5.4
Poultry Scalding and Defeathering Thermal Process
64
2.6
Chemical Processes
68
2.6.1
Crude Oil Distillation Petrochemical Process
68
2.6.2
Lager Beer Fermentation Tank
73
2.7
Production Systems and Processes
75
2.7.1
Single Axis Drilling System
75
2.7.2
Cement-Based Pozzolana Portal Scraper
78
2.7.3
Variable Pitch Wind Turbine Generator System
81
Exercises and Problems
84
Bibliography
102
3
Discrete-Time Modeling and Conversion Methods
105
3.1
Introduction
105
3.2
Digital Signal Processing Preliminaries
105
3.2.1
Digital Signal Characterization
105
3.2.2
Diﬀerence Equation: Discrete-Time Signal Characterization Using Approximation
Methods
109
3.2.2.1
Numerical Approximation Using Forward Diﬀerence
109
3.2.2.2
Numerical Equivalence Using Backward Diﬀerence
110
3.2.2.3
Numerical Equivalence Using Bilinear Transform
110
3.2.3
Z-Transform and Inverse Z-Transform: Theorems and Properties
117
3.2.4
Procedure for Discrete-Time Approximation of the Continuous
Process Model
119
3.2.4.1
Z-Transfer Functions and Block Diagram Manipulation
119
3.2.5
Conversion and Reconstruction of the Continuous Signal: Sampling and
Hold Device
124
3.2.5.1
Sampler and Hold-Based Process Model
124
3.2.5.2
Construction Methods of a Continuous Signal from a Data Sequence
127
3.3
Signal Conditioning
135
3.4
Signal Conversion Technology
137
3.4.1
Digital-to-Analog Conversion
137
3.4.2
Analog-to-Digital Conversion
140
3.5
Data Logging and Processing
145
3.5.1
Computer Bus Structure and Applications
145
3.6
Computer Interface and Data Sampling Issues
149
3.6.1
Signal Conversion Time Delay Eﬀects
155
3.6.1.1
Nyquist Sampling Theorem and Shannon’s Interpolation Formula
156
3.6.2
Estimation of the Minimum Sampling Rate to Be Selected
157
3.6.2.1
Remarks on Sample Periods
160
Exercises and Problems
161
Bibliography
168
4
Discrete-Time Analysis Methods
169
4.1
Introduction
169
4.2
Analysis Tools of Discrete-Time Systems and Processes
169
4.2.1
Discrete Pole and Zero Location
169
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Contents
ix
4.2.2
Discrete Frequency Analysis Tools: Fourier Series and Transform
(DFT, DTFT, and FFT)
176
4.2.2.1
Discrete System Frequency Response
178
4.2.2.2
Sketching Procedure for the Frequency Response of a Discrete System
179
4.2.2.3
Properties of a Frequency Response
179
4.3
Discrete-Time Controller Speciﬁcations
181
4.3.1
Time Domain Speciﬁcations
182
4.3.2
Frequency Response Speciﬁcations
184
4.4
Discrete-Time Steady-State Error Analysis
186
4.5
Stability Test for Discrete-Time Systems
187
4.5.1
Bound-Input Bound-Output (BIBO) Stability Deﬁnition
188
4.5.2
Zero-Input Stability Deﬁnition
188
4.5.3
Bilinear Transformation and the Routh–Hurwitz Criterion
188
4.5.4
Jury–Marden Stability Test
190
4.5.5
Frequency-Based Stability Analysis
191
4.6
Performance Indices and System Dynamical Analysis
191
Exercises and Problems
192
Bibliography
194
5
Continuous Digital Controller Design
197
5.1
Introduction
197
5.2
Design of Control Algorithms for Continuous Systems and Processes
197
5.2.1
Direct Design Controller Algorithms
199
5.2.2
Discrete PID Controller Algorithms
201
5.2.2.1
Proportional Control Algorithm
201
5.2.2.2
Derivative Control Algorithm
202
5.2.2.3
Integral Control Algorithm
202
5.2.2.4
PI Control Algorithm
202
5.2.2.5
PD Control Algorithm
202
5.2.2.6
Classical PID Controller Algorithm
202
5.2.2.7
Properties of and Some Remarks on PID Controller Algorithms
204
5.2.3
PID Controller Gains Design Using a Frequency Response Technique
205
5.2.3.1
Design Procedure for PID Controller Design
205
5.2.4
PID Controller Gains Design Using a Root Locus Technique
220
5.2.4.1
Design Procedures
221
5.2.5
Feedforward Control Methods
226
5.2.5.1
Command Input Feedforward Control Algorithm
226
5.2.5.2
Disturbance Feedforward Control Algorithm
234
5.3
Modern Control Topologies
235
5.3.1
State Feedback PID Control Algorithms
235
5.3.2
MPC Algorithms
246
5.3.3
Open-Loop Position Control Using Stepping Motors
249
5.4
Induction Motor Controller Design
252
5.4.1
Scalar Control (V/f Control)
252
5.4.1.1
Open-Loop Scalar Control
253
5.4.1.2
Closed-Loop Scalar Control (Slip Control)
253
5.4.2
Vector Control
253
5.4.2.1
Direct Torque Control
254
5.4.2.2
Speed Control of AC Motors
256
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

x
Contents
5.4.2.3
Speed Control of DC Motors
257
Exercises and Problems
259
Bibliography
281
6
Boolean-Based Modeling and Logic Controller Design
283
6.1
Introduction
283
6.2
Generic Boolean-Based Modeling Methodology
284
6.2.1
System Operation Description and Functional Analysis
284
6.2.2
Combinatorial and Sequential Logic Systems
288
6.2.2.1
Combinational Modeling Tools: Truth Table, SOP, Product of Sums (POS),
K-Maps
289
6.2.2.2
Sequential Modeling Tools: Sequence Table, Switching Theory, and State
Diagram
290
6.3
Production Systems
297
6.3.1
Portico Scratcher
297
6.4
Biomedical Systems
299
6.4.1
Robot-Assisted Surgery
299
6.4.2
Laser Surgery Devices
303
6.5
Transportation Systems
307
6.5.1
Elevator Motion Systems
307
6.5.2
Fruit-Picker Arm
311
6.5.3
Driverless Car
313
6.6
Fail-Safe Design and Interlock Issues
317
6.6.1
Logic Control Validation (Commissioning)
317
Exercises and Problems
318
Bibliography
336
7
Hybrid Controller Design
337
7.1
Introduction
337
7.2
Requirements for Monitoring and Control of Hybrid Systems
337
7.2.1
Requirements for Hybrid Control System Design
338
7.2.2
Requirements for Operations Monitoring System Design
338
7.2.3
Process Interlock Design Requirements
339
7.3
Design Methodology for Monitoring and Control Systems
340
7.4
Examples of Hybrid Control and Case Studies
347
7.4.1
Elevator Motion System
347
7.4.2
Bottle-Cleaning Process
350
7.4.3
Cement-Drying Process
352
Exercises and Problems
362
Bibliography
375
8
Mechatronics Instrumentation: Actuators and Sensors
377
8.1
Introduction
377
8.2
Actuators in Mechatronics
378
8.3
Electromechanical Actuating Systems
379
8.3.1
Solenoids
379
8.3.2
Digital Binary Actuators
381
8.3.3
DC Motors
382
8.3.4
AC Motors
387
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Contents
xi
8.3.5
Stepping Motors
389
8.3.6
Transmission Mechanical Variables
390
8.4
Electro-Fluidic Actuating Systems
393
8.4.1
Electric Motorized Pumps
393
8.4.2
Electric-Driven Cylinders
395
8.4.3
Electrovalves
396
8.5
Electrothermal Actuating Systems
398
8.6
Sensors in Mechatronics
400
8.6.1
Measurement Instruments
402
8.6.1.1
Relative Position (Distance)
402
8.6.1.2
Angular Position Measurement Using an Encoder and a Resolver
409
8.6.1.3
Velocity Measurement
412
8.6.1.4
Acceleration Measurement
414
8.6.1.5
Force Measurement
416
8.6.1.6
Torque Measurement
417
8.6.1.7
Flow Measurement
417
8.6.1.8
Pressure Measurement
419
8.6.1.9
Liquid-Level Measurement
420
8.6.1.10 Radio Frequency-Based Level Measurement
422
8.6.1.11 Smart and Nano Sensors
422
8.6.2
Detection Instruments
423
8.6.2.1
Electromechanical Limit Switches
424
8.6.2.2
Photoelectric Sensors
424
8.6.2.3
RFID-Based Tracking and Detection
424
8.6.2.4
Binary Devices: Pressure Switches and Vacuum Switches
426
Exercises and Problems
426
Bibliography
434
A
Stochastic Modeling
437
A.1
Discrete Process Model State-Space Form
437
A.2
Auto-Regressive Model with an eXogenous Input: ARX Model Structure
438
A.3
The Auto-Regressive Model – AR Model Structure
438
A.4
The Moving Average Model – MA Model Structure
438
A.5
The Auto-Regressive Moving Average Model – ARMA Model Structure
439
A.6
The Auto-Regressive Moving Average with eXogenous
Input Model – ARMAX Model Structure
439
A.7
Selection of Model Order and Delay
439
A.8
Parameter Estimation Methods
440
A.9
LS Estimation Methods
442
A.10
RLS Estimation Methods
443
A.11
Model Validation
443
A.12
Prediction Error Analysis Methods
444
A.13
Estimation of Conﬁdence Intervals for Parameters
444
A.14
Checking for I/O Consistency for Diﬀerent Models
445
B
Step Response Modeling
447
C
Z-Transform Tables
451
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

xii
Contents
D
Boolean Algebra, Bus Drivers, and Logic Gates
455
D.1
Some Logic Gates, Flip-Flops, and Drivers
455
D.2
Other Logic Devices: Drivers and Bus Drivers
457
D.3
Gated R −S Latch
459
D.4
D-Type (Delay-Flip-Flop)
459
D.5
Register or Buﬀer
461
D.6
Adder
461
E
Solid-State Devices and Power Electronics
463
E.1
Power Diodes
463
E.2
Diode–Transistor Logic (DTL)
464
E.3
Power Transistors
465
E.4
Resistor–Transistor Logic (RTL)
465
E.5
Transistor–Transistor Logic (TTL)
466
E.6
Metal Oxide Semiconductor FET (MOSFET)
466
E.7
Thyristors
467
Index
469
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

xiii
Preface
The control of mechatronic systems and electrical-driven processes aims to provide tools
to ensure their operating performance in terms of productivity, optimization, reliability,
safety, continuous operations, and even stability. This is usually achieved through hybrid
control paradigms using digital or analog tools. Nowadays, digital tools are widely used to
implement control systems, as they oﬀer numerous advantages including their ability: (i) to
ease control-system implementation; (ii) to design complex and built-in intelligent information
processing combining multiple functions for control, fault detection and diagnostic, monitor-
ing, and decision planning; (iii) to integrate logic and continuous control algorithms, as well
as supervision programs, into hybrid control strategies; (iv) to enhance the synchronization
of input and output process operations; (v) to coordinate control actions among geograph-
ically distributed systems and processes; and (vi) to achieve reliable and optimal operating
conditions.
The digital control system architecture usually consists of the integration of the following
functional units: a data-processing and computing unit, an electrical-driven actuating unit, a
measuring and detecting unit, a data acquisition (DAQ) and transmitting unit, and a signal con-
ditioning unit. The data-processing and computing unit can be implemented through devices
such as a microcontroller (μC), a programmable logic controller (PLC) with a control function,
a digital signal processing (DSP) unit, and a ﬁeld-programmable gate array (FPGA).
The design of eﬃcient control systems requires the mathematical modeling of mechatronic
systems and process dynamics. This can be achieved in accordance with the operating char-
acteristics (discrete and continuous) and objectives, as well as the technological constraints,
of the related instrumentation (signal conversion, transmission, conditioning, measurement,
actuation, etc.). However, in most of the current engineering literature on the design of digi-
tal control systems, the mathematical foundation of discrete-time and discrete-event systems is
usually presented separately from the technological constraints of control instrumentation. For
example, the operating time-delay models and signal-to-noise ratios of digital device interfaces
are not usually considered. Hence, the theoretical control algorithms proposed have limited
practical applicability.
Challenges in the development of a practical design approach for the control of mechatronic
systems and electrical-driven processes are: (i) to size and select control instrumentation in
accordance with controlled system design objectives; (ii) to develop accordingly the mathemat-
ical discrete hybrid model capturing their continuous and discrete event behavioristic char-
acteristics; and (iii) to integrate the control systems with respect to technological constraints
and operational characterization (discrete and continuous) (e.g. time delays, signal-to-noise
ratios, etc.).
This book intends to revisit the design concept for the control of mechatronic systems
and electrical-driven processes, along with the selection of control instrumentation. By
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

xiv
Preface
reviewing the theory on discrete-time and discrete-event systems, as well as various elements
of control instrumentation, it oﬀers an integrated approach for: (i) the modeling and analysis
of mechatronic systems dynamics and electrical-driven process operations; (ii) the selection of
actuating, sensing, and conversion devices; and (iii) the design of various controllers for single-
to multiple-function electrical-driven products (mechatronic systems) and processes. Further-
more, it covers some design applications from several engineering disciplines (mechanical,
manufacturing, chemical, electrical, computer, biomedical) through real-life digital control
system design problems (e.g. driverless vehicles, newborn incubators, elevator motion) and
industrial process control case studies (e.g. power grids, wind generators, crude oil distillation,
brewery bottle ﬁlling, beer fermentation).
Through this book, the reader should gain methods for: (i) model formulation, analy-
sis, and auditing of single- to multiple-function electrical-driven products and processes;
(ii) model-driven design of the software and hardware required for digital control instru-
mentation; (iii) sizing and selection of electrical-driven actuating systems (including electric
motors), along with their commonly used electro-transmission elements and binary actuators;
(iv) selection and calibration of devices for process variable measurement and computer
interfaces; and (v) modeling, operating, and integrating a wide variety of sensors and actuators.
Hence, the textbook is organized into eight chapters:
1) Introduction to the Control of Mechatronic Systems. Chapter 1 gives a brief conceptual deﬁ-
nition and classiﬁcation of mechatronic systems, electrical-driven technical processes, and
control systems structure. Here, a functional decomposition of the generic control system
architecture is presented, along with some examples to illustrate control instrumentation
for sensing, actuating, computing, signal converting, and conditioning. Furthermore, typi-
cal functions of generic controlled systems for electromechanical products and processes
are described, along with the interconnection between the control instrumentation ele-
ments. Generic requirements for control system design are outlined based on challenges to
software-based (design of hybrid architecture) and hardware-based (instrumentation siz-
ing, compliance, and selection) control system integration. This is summarized within a list
of the major steps in control design projects.
2) Physics-Based Systems and Processes: Dynamics Modeling. Chapter 2 presents numerous
examples of dynamics modeling for various electrical-driven systems and processes, includ-
ing transportation systems (e.g. a sea-port gantry crane, a hybrid vehicle, a Segway, an
elevator, a driverless car), production systems and processes (e.g. an energy-based wind
turbine, a drilling machine, a cement-based pozzolana scratcher), chemical processes (e.g.
oil distillation, a cake conveyor oven, city water treatment, fermentation, poultry scalding
and defeathering), ﬂuidic and thermal systems and processes (a mixing tank, puriﬁed water
distribution, a conveyor oven, poultry scalding and defeathering thermal processes), and
biomedical systems (e.g. an infant incubator, human blood glucose insulin metabolism).
Systems and process behaviors can be captured through diﬀerential equations using an
experimental data modeling approach and classical physical laws of conservation and con-
tinuity. The resulting models are capable of displaying multiple and nonlinear variables as
well as time-variant parameter characteristics, which can further be simpliﬁed according to
the system physical properties or operating boundaries. A methodology for physics-based
modeling is presented through the deterministic or stochastic behavior models of com-
monly encountered electrical-driven systems and large-scale processes. A review on linear
modeling methods such as stochastics, dynamics responses, and state space is presented in
the Appendices.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Preface
xv
3) Discrete-Time Modeling and Conversion Methods. Chapter 3 focuses on methods for deriv-
ing a discrete approximation of continuous systems and signals using tools such as the hold
equivalent, pole-zero mapping, numerical integration, and z-transformation theorems. A
technological description of computer control architecture and interface is proposed with
respect to DAQ unit operations, from the bus structure to data gathering, logging, and pro-
cessing with respect to signal noise reduction and approximation consideration. Critical
issues related to signal conversion, such as aliasing eﬀects, along with a methodology for the
selection of a sample period, are also covered. Overall, the chapter topics include technology
and methods for continuous signal digital conversion and reconstruction, such as bilinear
transformation, discrete-time command sequence generation, computer control interface
for data logging, conditioning, and processing, sample time selection, and computer conver-
sion technology using various conversion techniques (successive approximation, dual-slope
ADC, delta-encoded ADC, etc.), as well as processing delay eﬀects.
4) Discrete-Time Analysis Methods. Chapter 4 presents methods related to discrete system
dynamical analysis in the frequency and time domains. Moreover, stability deﬁnitions
and tests for discrete time systems are discussed and controlled system performance
assessment tools are outlined. The chapter aims to present discrete controller design spec-
iﬁcations. Topics include frequency analysis tools such as DTFT, FFT, and DFT, discrete
zero- and pole-location plots, stability tests and criteria for discrete time systems
(Jury–Marden, Routh–Hurwitz), steady-state errors, performance indices (ITAE, ISE), and
time and frequency properties for controller design (settling time, percentage overshoot,
gain and phase margins).
5) Continuous Digital Controller Design. Chapter 5 presents various approaches to the design
of PID controller algorithms, such as continuous time design, discrete design, direct design
using roots locus, and frequency-response techniques, as well as some advanced techniques
such as model predictive control. Hence, using time- or frequency-domain controller spec-
iﬁcations, numerous examples of the design and tuning of control algorithms are described,
ranging from PID family, deadbeat, feedforward, and cascade to non-interacting control
algorithms. In addition to stability analysis tests, performance indices and dynamics
response analysis are derived in frequency and time domains. Furthermore, the open-loop
controller design for stepper motors and scalar and vector control designs for induction
motors are described. Model predictive control algorithms suitable for process operations
with physical, safety, and performance constraints are also presented. Comparative analyses
between classical PID controllers with various state feedback topologies for DC motor
speed control are performed. Overall, chapter topics include cascade control, design and
tuning methods for discrete-time classical PID family controllers, and scalar and vector
control. The digital state feedback controller concept is revisited for cases where it is
not possible to measure all state variables. Comparatively, analyses between classical PID
controllers and various state feedback topologies for DC motor speed control are presented.
6) Boolean-Based Modeling and Logic Controller Design. Chapter 6 presents Boolean
function-based models that have been derived by using sequential or combinato-
rial logic-based techniques to capture the relationship between the state outputs of
discrete-event system operations and the state inputs of their transition conditions. Hence,
after performing process description and functional analysis, a design methodology of a
logic controller for process operations (discrete event systems) is proposed. Subsequent
systems behavioristic formal modeling is achieved by using techniques such as truth tables
and K-maps, sequence table analysis and switching theory, state diagrams (Mealy and
Moore), and even state function charts. Some illustrative examples covering key logic
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

xvi
Preface
controller design steps are presented, from process schematics and involved I/O equipment
listings, wiring diagrams with some design strategies such as fail-safe design, and interlocks,
to state transition tables, I/O Boolean functions, and timing diagrams. Examples of logic
controller designs include cases of elevator vertical transportation, an automatic fruit
picker, a driverless car, and biomedical systems such as robot surgery and laser-based
surgery. Overall, the chapter topics cover: (i) the methodology for Boolean algebra based on
the modeling of discrete event systems; and (ii) logic controller design methodology for the
derivation of I/O Boolean functions based on truth tables and Karnaugh maps, switching
theory or state diagrams, wiring and electrical diagrams, and P&I and PF diagrams.
7) Hybrid Process Controller Design. Chapter 7 presents a generic design and implementation
methodology for process monitoring and control strategies (logic and continuous), with
algorithms to ensure the operational safety of hybrid systems (i.e. systems integrating
discrete-event and discrete-time characteristics). First, the functional and operational
process requirements are outlined, in order to deﬁne hybrid control and supervision
systems with respect to logic and continuous control software, data integration and process
data gathering, and multi-functional process data analysis and reporting. Subsequently, a
methodology is proposed for the design of monitoring and control systems. Some cases
are used to illustrate the design of process monitoring and hybrid control for elevator
motion, drying cement pozzolana, and a brewery bottle-washing process. Overall, chapter
topics include hybrid control system design, piping and instrumentation diagrams, system
operations, FAST and SADT decomposition methods, process start and stop operating
mode graphical analysis, and a sequential functional chart (SFC), as well as process interlock
design.
8) Mechatronics Instrumentation: Actuators and Sensors. Chapter 8 provides an overview of
electrical-driven actuators and sensors encountered in mechatronics, including their tech-
nical speciﬁcations and performance requirements. This is covered for electromechanical
actuating systems such as electric motors as well as some electroﬂuidics and elec-
trothermal actuating systems. Similarly, binary actuators such as electroactive polymers,
piezo-actuators, shape alloys, solenoids, and even nano devices are technically described
and modeled. Additionally, a spectrum of digital and analog sensing and detecting methods
are described, along with the technical characterization and physical operating principles
of the instrumentation commonly encountered in mechatronic systems. Presented sensors
include motion sensors (position, distance, velocity, ﬂow, and acceleration), force sensors,
pressure or torque sensors (contact-free and contact), temperature sensors and detec-
tors, proximity sensors, light sensors and smart sensors, capacitive proximity, pressure
switches and vacuum switches, RFID-based tracking devices, and electromechanical
contact switches. In addition, some smart sensing instrumentation based on electrostatic,
piezo-resistive, piezo-electric, and electromagnetic sensing principles are presented.
Overall, chapter topics include actuating systems such as motors (AC, DC, and stepper),
belts, screw-wheels, pumps, heaters, and valves, along with detection and measurement
devices of process variables (force, speed, position, temperature, pressure, gas and liquid
chemical content), RFID detection, sensor characteristics (resolution, accuracy, range, etc.),
and nano and smart sensors.
This textbook emphasizes the modeling and analysis within real-life environments as well as
the integration of control design and instrumentation components of mechatronic systems
through the selection and tuning of actuating, sensing, transmitting, and computing or control-
ling units. Further, it looks at the matching and interconnecting of control instrumentation such
as sensors, transducers, and actuators particularly the interface between connected devices and
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Preface
xvii
signal conversion, modiﬁcation, and conditioning. As such, the reader can expect by the end
of the book to have fully mastered: (i) the design requirements and design methodology for
control systems; (ii) the sizing and selection of the instrumentation involved in process control,
as well as microelectromechanical devices and smart sensors; (iii) the use of microprocessors
for process control, as well as signal conditioning; and (iv) the sizing and selection of actuat-
ing equipment for electrical-driven systems and industrial processes. Numerous examples and
case studies are used to illustrate formal modeling, hybrid controller design, and the selection of
instrumentation for electrical-driven machine actuation and DAQ related to systems dynamics
and process operations. Through these case studies, the reader should gain a practical under-
standing of topics related to the control system and instrumentation, allowing him or her to ﬁll
a control and instrument engineering position where he or she is expected: (i) to possess a good
knowledge of instrumentation operating conditions and control requirements; (ii) to size and
select control instrumentation; (iii) to design, develop, and implement digital controllers; (iv) to
design engineering processes and electrical-driven systems; (v) to collaborate with design engi-
neers, process engineers, and technicians in the cost- and time-based acquisition of systems
and processes control equipment; and (vi) to perform technical audit to ensure instrument
compliance with health-and-safety regulations.
This book was conceived to develop the reader’s skills in engineering-based problem
solving, engineering system design, and the critical analysis and implementation of control
systems and instrumentation. It allows self-study via comprehensive and straightforward
step-by-step modular procedures. In addition, examples (with their accompanying MATLAB®
routines, as well as) and design- and selection- related exercises and problems are provided,
along with their solutions. Furthermore, a dedicated companion website (email author at
kaltjob@uwalumni.com to have access to secured website) allows the reader to download
additional material for teaching, such as slide presentations on the chapter material, data ﬁles
for additional laboratory sessions, example ﬁles, and innovative 2D and 3D virtual labs for
physical real-life systems (i.e. model-based simulation tools that can be associated to real-life
systems for in-class lab sessions).
Suggestions for teaching plans for applied control theory of mechatronic systems and
electrical-driven processes would be as follows: (i) Chapter 1 through Chapter 5 (up
to Section 5.3.1), for an introductory digital control-level course lasting one semester;
(ii) Chapters 2, 3, and 5 (Sections 5.3 and 5.4) for advanced control students with a control
theory background; (iii) Chapters 1, 3 (Sections 3.3 and 3.4), and 8 for electric-driven machine
and instrumentation students with computer hardware and software programming experience;
(iv) Chapters 2, 3 (Sections 3.3 and 3.4), 5 (Sections 5.2.4, 5.3, and 5.4), and 6–8 for ﬁeld control
and instrumentation engineers interested in the design or migration of process control of
hybrid systems.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

xix
Acknowledgment
This book makes extensive use of MATLAB® routines, distributed by Mathworks, Inc. A user
with a current MATLAB license can download trial products from their website. Someone
without a MATLAB license can ﬁll out a request form on the site, and a sales rep will arrange
the trial for them. For additional MATLAB product information, please contact:
The MathWorks, Inc.
3 Apple Hill Drive
Natick, MA, 01760-2098 USA
Tel: 508-647-7000
Fax: 508-647-7001
E-mail: info@mathworks.com
Web: www.mathworks.com
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

xxi
About the Companion Website
This book is accompanied by a companion website which aims to support the teaching eﬀorts
of instructors through:
(email author at kaltjob@uwalumni.com to have FREE access to the secured website)
The website includes:
I) Lectures material for following courses package:
1. Digital control systems
2. Instrumentation: sizing and selection sensors and actuators
3. Mechatronic systems design
4. Process automation and monitoring
5. Advanced control systems: predictive, distributed, adaptive control strategies
6. Electric motor/machine control: stepper, DC, AC/induction
7. Control and instrumentation
II) For each course listed above reading guides, other classroom resources (visual summary,
course outlines/summary, animation slides);
III) For each lecture session, multiple choice questions, for each course sample exams;
IV) for each Textbook chapter, solution manual, study questions, ﬂash cards;
V) Solved real-life problems and projects, 2D and 3D applications for sessions of laboratory
simulation.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

1
1
Introduction to the Control of Mechatronic Systems
1.1
Introduction
The rapid expansion of automated electrically-driven systems (e.g. electromechanical
machines) is related to the development of digital control strategies in order to enhance their
performance and extend their functionality while signiﬁcantly reducing their operating cost
and complexity. However, those digital control strategies are dependent on the performance
of the control instrumentation related to measurement, signal conditioning, actuating, and
digital control technologies. Recent technology advancements oﬀer a plethora of control
systems instrumentation, each with design-speciﬁc requirements and compliance constraints.
Hence, in addition to system modeling, the design of digital control strategies has to consider:
(i) the selection of control instrumentation in accordance with performance objectives; and (ii)
the integration of the control systems instrumentation and process equipment with respect to
operating constraints.
Consequently, it is suitable to lay out a generic design procedure for digital control sys-
tems, especially in: (i) controlling electrically-driven systems; (ii) sizing and selecting control
instrumentation related to information processing and computing, electrically-driven actua-
tion, process sensing and data acquisition; (iii) integrating those control instrumentation with
respect to controlled system performance objectives and operating constraints; and (iv) inte-
grating multifunctional control applications.
In this chapter, the deﬁnition and classiﬁcation of electrically-driven systems and techni-
cal processes are presented ﬁrst. Then the functional relationship between electromechanical
machine control and control within interconnected and synchronized electromechanical sys-
tems is outlined. Various components of control systems instrumentation are described along
with their design requirements. Furthermore, major steps of control system migration projects
are presented with some illustrative examples of industrial process control. Finally, key project
management steps and the associated subsequent design documents are listed.
1.2
Description of Mechatronic Systems
Mechatronic systems are either electrically-driven products or technical processes. Electrically-
driven products are machines transforming current, voltage, or other electrical power into
mechanical, ﬂuidic, pneumatic, hydraulic, thermal, or chemical power. Hence, those systems
can be classiﬁed according to their functional objectives either as: (i) specialized machines
performing speciﬁc operations; or (ii) multipurpose and adjustable machines. Control systems
are a set of technologies enabling algorithmic computing or signal processing devices to use
signals emitted from analog or digital detecting, sensing, and communicating devices in order
Control Of Mechatronic Systems: Model-Driven Design And Implementation Guidelines,
First Edition. Patrick O.J. Kaltjob.
© 2021 Patrick O.J. Kaltjob. Published 2021 by John Wiley & Sons Ltd.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2
1 Introduction to the Control of Mechatronic Systems
to perform automatic operations of systems or process actuation. Such systems are expected
to perform them routinely and independently of human intervention with a performance
superior to manual operation.
Thus, control systems aim to provide the necessary input signals to achieve the desired pat-
terns of variations of speciﬁc process variables. Therefore, the functions of control systems are
embedded in electromechanical systems (machine or product control).
Example 1.1
Figure 1.1 shows a typical 3D printing robot for customized cooking with speed-
and temperature-controlled system which could be combined with monitoring indicators for
cooking time and cooking stage, as well as a control panel allowing the selection of the ﬁnal
mixing of the product and cooking program. This system would require:
1) the angular position control of a pressure valve delivering semi-liqueﬁed food (paste), the x-y
axis position control of the carriage driving the extruder head (nozzle) made of two motors
with a screw mechanism, the table angular speed and the z-axis position control;
2) the heater temperature control (nozzle level);
3) the remote pressure and force control for the valve in charge of injecting pressured food
paste feed based on environmental (e.g. space mission) and biological conditions (e.g. lower
gravity forces); and
4) the logic control for the discrete selection of ingredients.
Such control design combination enhances the product or machine functionality while reduc-
ing operating and maintenance costs. This is done by integrating data processing and computing
Heater with 
temperature 
sensor 1
Pressure
valve 2
Pressure
valve 1
Syringe 1
Motor1
Motor2
Screw
Nozzle
Syringe 2
Motor 3A
Motor 3B
Motor
extruder
Motor 4
x
y
z
Layer over layer deposit
Extruder drive
Heater with 
temperature 
sensor 2
Figure 1.1 Customized 3D food printer.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

1.2 Description of Mechatronic Systems
3
operations within a ﬁeld device or machine (e.g. washing machine, navigation systems etc.).
Among the commonly encountered automated machines or products are those with: (i) embed-
ded control functions; (ii) dedicated control functions; or (iii) a control function limited to a
couple of sensors and actuators involved.
A technical process is the sum of all interacting machines within that process transform-
ing and/or storing material, energy, or information. Such technical processes can be classiﬁed
according to their operational objectives as follows:
1) Transportation-related processes, such as material handling processes, energy ﬂow pro-
cesses, and information transmission processes.
2) Transformation-related processes, such as chemical processes, manufacturing processes,
power generation, and storage processes.
Technical processes can be characterized according to functional objectives, such as:
1) Processes characterized by a continuous ﬂow of material or energy (e.g. cement drying
process, electric power distribution, paper production). Here, the process variables are
physically-related variables with a continuous range of values, such as temperatures in a
heating system. The process parameters are physical properties (e.g. power transmission
network impedance, liqueﬁed gas density). Process control consists of maintaining the
process state on a determined level or trajectory. In this case, process dynamics models can
be obtained through diﬀerential equations.
2) Processes characterized by discrete event operations representing diﬀerent process states
such as device activation or deactivation during the startup or shutdown of a turbine. Here,
process variables are binary signals indicating the discrete status of devices or machines
involved in process operations as well as change in logic devices (e.g. activating events result-
ing from ON/OFF switch positioning). The process discrete event models can be obtained
through Boolean functions or logic ﬂow charts.
3) Processes characterized by identiﬁable objects that are transformed, transported or stored,
such as silicon-based wafer production, data processing and storage operations. Here, pro-
cess variables indicate the state changes of objects and can have a continuous range of values
(i.e. temperature of a slab in a clogging mill, size of a part in a store) or binary variables. Those
variables can also be non-physical categories (i.e. type, design, application, depot number)
assigned to the objects.
Example 1.2
Figure 1.2, depicting a salt-generating solar-based thermal power plant substa-
tion, illustrates an example of non-continuous processes (discrete event- or object-related). In
this power plant, solar radiation is collected by thousands of sun-tracking mirrors (heliostats),
which reﬂect it toward a single receiver atop a centrally located tower. Solar radiation is the
electromagnetic radiation emitted by the sun. As such, it is necessary to:
1) Control the collector angle and position (sun tracker) to face the sun to collect the maximum
solar radiation as well as to maintain peak power despite varying climate conditions. This is
done by adjusting the operating setting based on measured voltage and current outputs of
the array.
2) Logically control the energy storage by switching between charging/discharging operating
modes based on climatic conditions (sun availability), battery charge status, load levels, and
level of energy collected through solar irradiation by mirror arrays.
3) Control the temperature of the collector used to melt a salt. The hot molten salt is stored in
a storage tank to generate steam and later used to drive the turbine and attached generator.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

4
1 Introduction to the Control of Mechatronic Systems
Solar
radiation
R(t)
Salt-based
hot water
collector
Tw(t)
Pump
Glass
absorber
Housing (collector)
Water 
supply
Electrical
generator
Motorized sun tracker
Steam/thermal turbine
Steam
Battery
Inverter
Loads
Grid lines
Solar radiation R(t)
Pump
Transparent 
glass
Solar
irradiation
Absorber
Collector
housing with
insulation, Ac
100% 
transmitted
15%
reflected
55% 
absorbed
40% 
collected
30%
reflected
15% 
Refracted (losses)
Hot water 
outflow to 
storage tank, To(t)
Water inflow
from storage tank
Ti(t)
Figure 1.2 Steam-based power generation technical process schematic.
4) Control the ﬂow of heated ﬂuid circulating between the tank and the collector. This ﬂuid
with molten salt at a low temperature is pumped to the cold collector tower for the next
thermal cycle. The operating temperature over this thermal cycle derives the quantity of
energy to be extracted.
Digital control systems aim to coordinate the operations of several electrically-driven
machines in order to meet speciﬁc operational objectives such as water puriﬁcation, voltage
control in an electrical power grid, or temperature regulation in a fermentation tank. Thus, it
is usually necessary to ensure the integration of a large number of control system instruments
(from data processing and computing units to measuring units). Figure 1.3 illustrates the
generic components in the design of computer control systems with supervisory functions. An
example of the relationship between a technical process and electromechanical system control
is illustrated in Figure 1.4.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

1.2 Description of Mechatronic Systems
5
Controller 
logic and 
panel design
Computer 
control and
supervisory 
system
Electrical 
systems or 
processes
Detecting and
measurement 
system
Machine or 
process sequences
Process supervisory
and safety
requirements
Operator
panel
Configuration variables
Control variables
Machine or 
process safety
Measured variables
Process status
Manipulated variables
Operating variables
Operating 
variables
Disturbance variables
Operating 
conditions
Figure 1.3 Generic controlled mechatronic systems and instrumentation block diagram. Source: Adapted from
Kaltjob P.
Network
transmission
Actuator
Sensor
Central
control
Device
control
Electrically-driven
machine
Device
control
Actuator
Sensor
Electrically-driven
machine
Network
transmission
Actuator
Device
control
Sensor
Electrically-driven
machine
Logic
control
Detector
Integrated 
actuator
Embedded
control
Smart
sensor
Electrically-driven
machine
Technical process control
Process material, 
energy, information inputs
Machine control
Embedded device control
Process material, 
energy, information outputs
Voltage, current inputs
Voltage, current inputs
Voltage, current outputs
Voltage, current outputs
Figure 1.4 Relationship between technical process and machine control systems. Source: Based on Kaltjob P.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

6
1 Introduction to the Control of Mechatronic Systems
1.3
Generic Controlled Mechatronic System and Instrumentation
Components
Through functional system decomposition, the digital control system architecture can be
divided into the following functional units: data processing and computing, electrically-driven
actuating, measuring and detecting, data acquisition, transmission, and signal conditioning.
All these components are presented in the subsequent subsections. Figure 1.5 summarizes the
connections between all the major control systems and instrumentation components.
1.3.1
The Data Processing and Computing Unit
The data processing and computing unit is used: (i) to control and regulate machine operations;
(ii) to monitor machines and processes operations; and/or (iii) to coordinate operations within
the same process. Data processing and computing could be performed either:
1) oﬄine: that is, there is no direct or real-time connection between the process execution and
the data processing and computing unit;
2) online for open-loop operations: that is, the protection (safety) of process operations and
interlocking; or
3) online for closed-loop operations.
Commonly encountered data processing and computing devices are: digital signal process-
ing devices, programmable logic controllers, microcontrollers, ﬁeld programmable gate arrays
among others, and a distributed control system (DCS) (consisting of a historian server con-
nected to a network of ﬁeld controller devices). Those devices execute program routines for:
Electrically-driven
machine or 
process
D/A 
converter
A/D 
converter
Detecting and
measurement
unit
Electric system or 
process model
Model parameter
estimation
Clock
Digital
controller
design
Computer 
control system
Set point
Desired process
or machine 
performances
Computing unit
Acquistion and 
transmission unit
Actuating unit
Figure 1.5 Generic control systems and instrumentation block diagram. Source: Based on Kaltjob P.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

1.3 Generic Controlled Mechatronic System and Instrumentation Components
7
(i) the acquisition of process variables; (ii) process condition monitoring and exception han-
dling (i.e. executing process safety operations); (iii) the control of machine operations (e.g.
activation/deactivation of motor, tracking of motor speed); and (iv) the archiving and sharing
of process data with other control devices through the communication network.
1.3.2
Data Acquisition and Transmission Units
Data acquisition and transmission units are used: (i) to interface with various control devices
(e.g. operator panel, detecting and measuring ﬁeld devices); (ii) to transport process data
between network nodes; (iii) to integrate process data from diﬀerent sources on a single
platform; and (iv) to integrate control functions (e.g. machine control and process control).
These units operate through data transfer platforms and their data distribution service
protocols. They can be designed based on the Open Systems Interconnection model, which is
summarized as:
1) the physical layer, being either wired or wireless connection, such as twisted-pair wiring,
ﬁber-optic cable or radio link, and the commutation unit connecting the network to the
devices (e.g. ﬁeld buses for data transfer between primary controllers and ﬁeld control
devices);
2) the network, transmission, and transport layers performing functions such as data routing
over the network, data ﬂow control, packet segmentation and desegmentation, error control
and clock synchronization. In addition, these layers provide mechanisms for packet tracking
and the retransmission of failed packets; and
3) the session and presentation layers mainly used for data formatting.
1.3.3
Electrically-driven Actuating Units
Electrically-driven actuating units convert voltage or current signals from the computing unit
into appropriate input forms (mechanical, electrical, thermal, ﬂuidic etc.) for the execution
of machine’s and process operations. Then those converted signals produce variations in the
machine’s physical variables (e.g. torque, heat, or ﬂow), or amplify the energy level of the signal,
causing changes in the process operation dynamics. Some examples of actuating elements are
relays, magnets, and servo motors.
1.3.4
Measuring and Detecting Units
Measuring and detecting units consist of low-power devices, such as sensors and switch-based
detectors interfacing with electrically-driven machines involved in process operations. As such,
they convert related physical output signals from the actuating unit into voltage or binary sig-
nals ready to be used within the data processing and computing unit. Some key functions of
these devices are: (i) data acquisition related to the change of machine variables; and (ii) conver-
sion of the machine-gathered signal into electrical or optical signals. Depending on the nature
of the process signal generated, a signal conditioner can be added.
1.3.5
Signal Conditioning Units
Signal conditioning elements convert the nature of the signal generated by the sensing device
into another suitable signal form (usually electrical). The signal conditioning units can also be
embedded within the sensing devices. An example of such a unit is a Resistance Temperature
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

8
1 Introduction to the Control of Mechatronic Systems
Detector (RTD). Here, a change in the temperature of its environment is converted into a volt-
age signal reﬂecting its resistance change through a Wheatstone bridge and the bridge is a signal
conditioning module.
1.4
Functions and Examples of Controlled Mechatronic Systems
and Processes
Mechatronic systems and processes have built-in intelligence through either their advanced
information processing systems such as multifunctional control systems or intelligent
electromechanical systems (including thermal, ﬂuid, and mechanical processes) such as
power-eﬃcient multi-axis actuation with motion precision and detection features or minia-
turized smart devices with embedded information processing capabilities. The resulting
controlled mechatronic systems and processes aim to achieve various objectives: synchronize,
control and sequence process operations, or detect and monitor process status.
Table 1.1 presents some typical process control objectives and their corresponding control
functions along with some illustrative examples.
Example 1.3
Robot-assisted surgery is using image-guided systems to command and control
operations in intravascular surgery, as depicted in Figure 1.6. Such a system has an embedded
and integrated control system for its motion and direction, as well as operation monitoring,
and motion synchronization between robot arms. Expected control functions include:
1) force control of a robot arm gripper;
2) synchronized angular position and velocity control of each motor-driven robot joint;
3) logic control of real-time anomalies detection (location of the abnormal cell or dysfunc-
tional organ) and inspection using 3D imaging camera processing (color uniformity, selec-
tion based on size and shape) and laser ranging sensors;
4) path generation and motion planning (position, speed, and accelerations) for robot naviga-
tion while ensuring collision avoidance of the robot manipulator; and
5) logic control of the discrete selection of suitable cutting tools for the robot arms.
Table 1.1 Functions and implementation strategies for controlling mechatronic systems and processes.
Control system
processing functions
Implementation
control strategies
Examples of controlled mechatronic
systems and processes
Assessing, reporting, and
monitoring
Recording process variables
through sensors and detectors;
real-time, model-based
measurement, setting
parameters, and input signals.
Remote power ﬂow measurement,
conﬁguration and voltage control
(SCADA) through switchgears,
transformers, and condensers in a
smart power grid.
Safety compliance,
detection, and
diagnostics
Interlocking in case of detected
failure modes, maintaining
safety operations while ensuring
malfunction handling.
Integrated safety and monitoring of
petrochemical process variables and
parameters (ﬂowrate, temperature etc.)
Control and performance
enhancement
Controlling or regulating system
variables.
Position and temperature
measurement as well as control of a 2D
cutting machinery process.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

1.5 Controller Design Integration Steps and Implementation Strategies
9
Surgery tools
library
Used tools
MTR1A
MTR2A
MTR4A
MTR3A
MTR8A
MTR5A
Camera1
MTR6A
MTR1B
MTR2B
MTR4B
MTR3B
MTR8B
Camera2
MTR7B with 
position encoder
MTR7A with 
position encoder
Right hand
joystick
Left hand
joystick
1.235 x
4.568 y
1.114 z
Surgeon manipulating panel
Figure 1.6 Image-guided tele-assisted robot intravascular surgery.
Example 1.4
An unmanned electric vehicle driving system is expected to have an embedded
and integrated control system for speed and direction control, traﬃc light monitoring, and
motion synchronization with other users. Consider the driverless vehicle in Figure 1.7(a):
a block diagram with all relevant input and output (I/O) variables involved is depicted in
Figure 1.7(b).
Example 1.5
Here, an example of control system for a crane-based vertical motion process
is illustrated in Figure 1.8, while its feedback block diagram and the logic control connections
are shown in Figure 1.9(a) and (b).
Example 1.6
Here, a milky beverage processing factory is illustrated in Figure 1.10. In a pro-
cess of such scale, a supervisory, control, and data acquisition system (SCADA) is used to collect
plant-wide data through an industrial network to archive and to ensure the execution of derived
process sequences. The equivalent block diagram depicting the relevant components of such
SCADA-oriented process control system is presented in Figure 1.11.
1.5
Controller Design Integration Steps and Implementation
Strategies
Mechatronic systems and processes are systems embedding automatic information processing
functions such as for reporting, better performance and control, and safe operation. Such
functions are implemented using various control strategies through advanced control design
algorithms, along with associated smart actuating or sensing devices. Because a combination
of control strategies is commonly used and operated simultaneously, it is necessary to develop
a design methodology to integrate control strategies with information-driven processing
functions to ensure near-optimal performance under various functionalities and safe operating
conditions. In addition, the control system must combine digital logic sequential control with
continuous control to ensure a synergetic eﬀect on the operation of the mechatronic system.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

10
1 Introduction to the Control of Mechatronic Systems
Powertrain
(transmission) 
Front gear
Front wheel
Rear wheel
Car 3-speed motor
contactor SC 1,2,3
Break
contactor BC
Permanent
light PL
Direction indicator
light, RL
Direction indicator
light, FL
Direction indicator
light, FR
Direction indicator
light, RR
Start
Stop
Right
Left
Direction
wheel contactors
(a)
(b)
Permanent
Car
con
Direction indicator
light, RL
Front
Direction indicator
light, FL
Start
Stop
Left
rs
(transmission)
Direction ind
indicicator
light, FR
Break
ontactor BC
Directi
ction
on indicator
light, RR
co
Stop light
SL
Detector box
FPS, SPS1–2, FD
RPS, DD, ND, VLD
SD, JD, TLD1–2–3
Front 
wheels
Front gear
Power 
transmission
Combustion
engine
Electric 
motor
Torque 
converter
Reference
motor
torque
Brake
Road 
shape
–
–
+
Troad(t)
Tbrake(t)
Speed sensor
Torque sensor
Speed
Direction
Start
Stop
Right
Left
Run/Stop
Selector
Detectors box
FPS, SPS1–2, FD
RPS, DD, ND, VLD
SD, JD, TLD1–2–3
Permanent light PL
Indicator lights, FR RR RL FL
Stop light SL
Break contactor BC
Car 3-speed motor
contactor SC 1,2,3
ωgen(t)
ωspm(t)
θdirection(t)
ωrm(t)
Tgen(t)
Command and 
Control panel
Figure 1.7 (a) Chassis of a driverless vehicle. Source: Based on Kaltjob P. (b) Hybrid control block diagram of a
driverless vehicle.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

1.5 Controller Design Integration Steps and Implementation Strategies
11
Drum
crane
Counter
weight
sw4
sw3
sw2
Cabin
passenger
G_PD1
3rd floor
4th floor
2nd floor
motor
motor
Shaft position
encoder
Motor current, i(t)
Command linear
position, c(t),
Command angular
position, θ(t)
Cabin weight, m [kg]
Passenger weight, M, [kg]
Height of
cabin, h(t)
Motor
voltage, v(t)
sw1
1st floor
Height of
cabin, h(t)
Pb_1
Pb_2
Pb_4
Pb_1
Pb_3
Pb_4
Pb_2
Pb_3
Pb_4
Pb_1
Pb_2
Pb_3
sw8
sw7
sw6
sw5
G_PD2
Decoupling
Figure 1.8 Crane-based vertical motion control system schematic. Source: Adapted from Kaltjob P.
This is usually encapsulated in an automation software solution associated with solid state
computing devices (power electronics).
Furthermore, the control architecture of the mechatronic system could use either decen-
tralized control systems, DCSs, hybrid control systems, monitoring and control systems,
fault-tolerant control systems, and embedded control systems. Hence, some of them are
expected to require remote and synchronization tools through data transmission and acquisi-
tion tools to ensure the coordination between operating entities as well between mechatronic
system components. Recalling that any mechatronic system is by its design a combination
of electrical, mechanical, and information processing technology, the control solution of
a mechatronic system could combine: (i) built-in intelligence; (ii) real-time programming;
and (iii) multifunctional operating characteristics. For example, this could result in higher
service productivity, quality, and reliability (e.g. reduced failure rate), by embedding intelligent,
self-correcting sensory feedback systems. Thus an integrated approach is suitable for the
control of any multi-functional mechatronic system.
Regarding mechatronic systems and processes, three main types of integrating control design
strategy can be considered: (i) spatial and structural integration; (ii) functional integration; and
(iii) performance-based integration. Here, this textbook focuses on control design integration
related to information processing (i.e. advanced control function along with monitoring and
diagnostic features). As such, in order to achieve an eﬃcient controlled mechatronic system, any
control design project steps must encompass a coherent synergy of selection and design eﬀort
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

12
1 Introduction to the Control of Mechatronic Systems
Elevator
cabin
motor
Elevator
door
motor
Lift traction system
Door system
Floor gate
motor
Position encoder
Tachometer
Continuous control
Speed 
position
Reference inputs
Logic control
Up/Down direction 
Floor selection
Emergency stop
Hold PB
Control panels
Limit
switches
Detectors
(a)
(b)
Weight 
Obstruct
Open/close
Floor
Hybrid  control
system
Actuating unit
Control unit
Monitoring unit
Panel inside 
elevator 
Selection
floor PBs
Emergency
horn
Lights
(floor
selections)
Floor panel 
outside elevator 
Selection
Up/Dn PBs
Lights
(floor
Up/Dn
indicators)
Driving control 
circuitry and 
programs
Driving control 
circuitry and 
programs
PWM 
controller
Vertical lift 
traction system
Bi-directional 
Motor and coupler
Sensing
unit
Conversion
unit
Sensing unit
Conversion 
unit
Floor
gate system
Bi-directional 
motor
Elevator 
door system
Bi-directional 
motor
Data acquisition
unit
Data acquisition
unit
Safety
programs
(interlocks)
Sensing
unit
Conversion
unit
Fan motor
PLC
PLC
Figure 1.9 (a) Block diagram of the crane motion feedback control system. (b) Logic control connections of the
crane motion feedback control system.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

1.5 Controller Design Integration Steps and Implementation Strategies
13
Strawberry
syrup
Chocolate
syrup
Sugar
syrup
100%
Milk
Filtered
water
Level
Moisture, pressure
Sensors and detectors
temperature, content
Motor
agitator
Gas
Flame
detector
Motor
exhaust fan
Cold water
Hot air
Hot water
Control
Electronic
valve
Water
filter
Water
supply
Chocolate milk
packs
Conveyor
motor
Circulating
pump
Position 
photo detector
Figure 1.10 Milk-based beverage processing factory schematic. Source: Based on Kaltjob P.
Sensors and 
detectors
Controller
and drives 
Level switch, etc.
Content, etc.
Temperature, etc.
Water
Milk
Sugar, etc.
Pump
Boiler
Boiler
Motor
agitator
Historian
server
Control
panel
Process
controller
Motor
conveyor
Modem
Router
Remote
terminal
unit
Controller
and drives 
Controller
and drives 
Controller
and drives 
Data acquisition unit
Sensing and detecting unit
LAN cable
Wireless
LAN
Communication unit
Data processing and 
computing unit
Actuating unit
Figure 1.11 Block diagram with SCADA components for a milk-based beverage processing system. Source:
Based on Kaltjob P.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

14
1 Introduction to the Control of Mechatronic Systems
between a mechatronic system and process components (actuating, sensing and data acquisi-
tion, control systems, and computing unit) under technically complex operating requirements.
A project related to control system design or migration has either:
1) time-based objectives, such as improving service or productivity through an enhancement
of mechatronic system functions;
2) cost-based objectives, such as reducing the cost of system operation (e.g. energy reduction)
or service by improving the performance of the controlled mechatronic systems;
3) quality-based objectives, such as improving system operations eﬃciency or service reliabil-
ity through the enhancement of control functions for mechatronic systems;
4) a combination of control system design objectives, such as delivering new services or prod-
ucts, replacing or extending them; or
5) monitoring and analysis objectives to be integrated into the mechanism system design.
To fulﬁll these objectives, the major project steps in control system design are:
1) Preliminary studies based on mechatronic system and process schematics.
2) Performance technical audit:
a) performance assessment;
b) performance objectives and controller speciﬁcations.
3) Functional analysis and modeling:
a) FAST decomposition method;
b) operating conditions and discrete time modeling;
c) startup and shutdown sequence relationship diagram;
d) operating description and discrete event formal modeling.
4) Hybrid controller and digital system design:
a) continuous controller algorithm;
b) logic controller software design;
c) storage requirement assessment (memory size etc.), control system throughput, user
interface requirements;
d) controller hardware design (control panel design and layout, instrumentation system
design and layout);
e) logic controller circuitry design (distribution and control architecture).
5) Controller solution execution and commissioning:
a) control feedback variable tuning;
b) operation monitoring under failure modes;
c) operation validation based on control system test protocol;
d) personnel training;
e) deployment.
Those steps could be summarized as shown in Figure 1.12. Activities related to control design
or migration projects are expected to provide speciﬁc mechatronic system control documen-
tation such as:
1) Mechatronic system and process diagrams, especially:
a) process ﬂow (PF) and piping and instrumentation (P&I) drawings based on the mecha-
tronic system description, if possible;
b) cabling and wiring diagrams (power distribution schemes, data cable routing and cable
diagrams, instrument hook-up drawings);
c) electrical schematics and connection diagrams connecting operator user interface actu-
ators and sensors through a detailed panel layout;
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

1.5 Controller Design Integration Steps and Implementation Strategies
15
d) power supply, interconnection, and distribution diagrams, and electrical device place-
ments, such as the number of repeaters between nodes;
e) ﬁeld control instrument lists with data sheet formulation for various instruments such
as: ﬂow, level, pressure, diﬀerential pressure, temperature, transmitters, converters, iso-
lators; multipliers; control valves and so on; and
f) diagrams for safety compliance (interlock schematics).
2) Documents for mechatronic device sizing and selection, especially on:
a) actuating elements such as motor drives, control valves, oriﬁces with estimates (calcula-
tions) of their operating conditions;
Required information
Design steps
Results and illustrative examples
Performance
assessment and
technical audit
Control objectives
formulation and
design
specifications
Mechatronic system
and process operating
conditions, technical
specifications
Operations
and dynamics
modeling
Mechatronic
system and process
decomposition and
modeling
Formal and discrete
modeling methods:
physical principles,
stochastic techniques
Control design
and device
selection
-Control program and
circuitry definition
-Data acquisition/
sensor/control
device selection and
configuration
Digital system design,
control theory and
system operating data
Controlled system
performance
evaluation and
personnel training
Mechatronic system
parameter tuning
and safety policies,
and recovery
procedures
System control test
protocols and I/O
process data per
standards
Control specifications
(tracking%, monitoring, 
I/O variables, etc.)
Sequences, interlocks, 
P&ID, PFD, etc.
Definition of process
variables; set points 
Graphical analysis, FAST
Failure modes
PLC, PC, uC, relay-based
control system selection
Continuous and logic
control architecture
Selection of sensors, 
actuators, network 
System commissioning, 
benchmarking and
operating documentation
Power and command 
wiring diagrams
Figure 1.12 Generic controller design steps and dependencies. Source: Adapted from Kaltjob P.
System operating
modes
Operating sequence
definition
Continuous control
design
Power and command
electrical wiring
Operator training
and documentation
Failure modes
and interlocks
Operator-system
interface modes
Device sizing
and selection
Hybrid control
system integration
Oparating safety and
environment
Controlled system
benchmarks
Digital system and
logic control design
Project elements related to
control design of mechatronic system
Figure 1.13 Overview of activities related to control project management. Source: Adapted from Kaltjob P.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

16
1 Introduction to the Control of Mechatronic Systems
b) sensing elements such as piezoelectric ﬂow sensors;
c) data processing and computing elements (memory size, scan cycle etc.); and
d) power storage and utilities equipment, such as uninterruptible power source (UPS) bat-
teries (capacity etc.).
3) Documents on sizing and selection of data network components (type, media etc.) and
replacements especially related to:
a) selection of I/O modules (integrated/distributed);
b) I/O addressing;
c) data logging and process data archiving; and
d) database structure formulation.
4) Documents on hybrid controller structure, conﬁguration, and operation:
a) continuous control and logic control design algorithm and digital system circuitry; and
b) control system conﬁguration and instrument calibration.
5) Control system maintenance/support procedures and documents including:
a) I/O process interface for discrete and analog ﬁelds devices as well as memory organiza-
tion;
b) detection and diagnosis of external ﬁeld control device failure, I/O module replacement
procedure; I/O process wiring check, operational testing (factory acceptance testing),
deﬁnition of emergency stops, and safety control relays;
c) power supply, controller memory card replacement procedures; and
d) troubleshooting procedure and listing of hybrid control software errors.
Figure 1.12 summarizes the major steps and documents required in process control as well as
those expected to be provided, while Figure 1.13 presents activities in a design control project
for a mechatronic system.
Exercises and Problems
1.1
Insulin is a pancreas-generated hormone that regulates blood glucose concentration. A
diabetic patient has the inability to produce a signiﬁcant blood level of insulin. He has to
rely on an artiﬁcial pancreas as a mechatronic device to regulate the blood glucose level
by providing automatic insulin injections several times per day. Based on the patient’s
diet or physical and psychological activities, the amount of insulin necessary to maintain
a normal blood glucose level must be determined.
a) Identify the control functions for this mechatronic system for the regulation of blood
glucose level and list all input and output system variables.
b) Brieﬂy describe the possible hybrid control strategy for this mechatronic system for
the regulation of blood glucose level and list the control variables.
c) Build a block diagram with the hybrid control system of blood glucose level using a
real-time blood glucose measurement device and a continuous insulin infusion pump.
d) Sketch a logic control connections of this mechatronic system instrumentation
(hybrid control with control panel).
1.2
For monitoring and control objectives of the following systems (a–c):
a) electric-driven driverless vehicle with a GPS-based traﬃc model for trajectory guid-
ance and a sonar-based radar tool for collision avoidance;
b) robot-aided surgery with direct current (DC) motors as actuators for 2D arm posi-
tioning, using an advanced laser beam and image processing for thermal-based cut-
ting precision; and
c) intelligent cow traﬃc monitoring using a solar powered cow collar device with
embedded accelerometer;
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
17
u(t)
Electric
heater
Fan (air inflow)
Steam
control valve
θ(t)
Thermostat
T[°C],  T(t)
Humidity
sensor
[% RH], h(t)
Air exhaust
Lightning
LEDs
Solar panel
Lithium ion 
battery
Power
converter
Solar
radiation
Racks of eggs
Figure 1.14 Egg incubator schematic.
perform the following technical activities:
a) Identify control project objectives and control processing functions.
b) Identify key I/O system and control variables.
c) Identify output variables and classify them as (a) measured or (b) unmeasured;
d) List some safety, environmental, and economic considerations.
e) Discuss the most suitable hybrid control strategy (logic, continuous).
f) Sketch the hybrid control block diagram.
1.3
As depicted in Figure 1.14, an incubator is used to keep eggs at a suitable warm tempera-
ture and humidity (i.e. the balance of heat over the oxygen level) to moderate conditions
in order to induce hatching from embryos to mature chicks. This is done through an
automatic egg-turning device by rotating the rack of eggs in order to change their posi-
tion. During this incubation cycle, the embryos breathe and exchange hot air through
thousands of pores in the eggshells.
a) Identify the control project objectives and possible control processing functions.
b) Identify key I/O in the incubator system and corresponding control variables.
c) Identify the output variables and classify them as (i) measured or (ii) unmeasured.
Brieﬂy describe how the unmeasured variables could be estimated.
d) List some safety considerations and interlock processes to be introduced as a result.
e) If a pump humidiﬁer and a heater are used to supply water steam while a lamp pro-
duces radiation to heat the chamber temperature, draw the hybrid control block dia-
gram.
f) Sketch the possible operator panel with corresponding indicator lights and logical
I/O variables.
1.4
Heart surgery requires the regulation of patient’s blood pressure at a desired value. This
is achieved by adjusting the infusion rate of vasoactive drugs into the patient’s blood
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

18
1 Introduction to the Control of Mechatronic Systems
vessels. In addition to the eﬀect of vasoactive drugs, blood pressure is also aﬀected by
the level of anesthetic given to the patient.
a) Using control strategies, sketch a detailed block diagram for a hybrid control system
that enables the measurement of blood pressure and regulates the infusion rate of a
vasoactive drug accordingly.
b) From the resulting block diagram, identify devices that could be used in the measur-
ing and detecting unit and in the actuating unit.
1.5
For the following mechatronic devices:
a) millimeter-wave radar for the detection of a surrounding object distances in an
unmanned car collision avoidance management system;
b) blood plasma detoxiﬁcation is achieved through an implanted artiﬁcial liver bioreac-
tor. The underlying process is a ﬁltration though a semi-permeable membrane sheet
while maintaining a pressure-regulated blood circulation. A user interface is used to
remotely monitor the reactor status. This is done despite human body temperature
variation;
c) an automatic electric cooking machine with speed and temperature controls com-
bined with monitoring indicators for cooking time and cooking stage, as well as a
control panel allowing the selection of spin speed and cooking program; and
d) an automatic vacuum cleaner with a user interface for motion control. It has an
antenna to communicate with the base station (remote control), four dirt sensors,
each measuring the number of dirt particles, two DC motor-driven wheels, and a
steering motor:
i) List their corresponding I/O (logic and continuous) variables.
ii) Sketch the hybrid control block diagram.
iii) Draw the I/O variables of the control panel (with its user interface) including as
much details as possible, such as the ports of I/O devices connected to external
circuitry such as sensors.
1.6
A robot-based laser beam cutting system consists of two actuating devices: a joint angle
motor and a ﬁne piezoelectric transducer for head positioning. A photo-sensor mea-
sures the head position and the position error is fed to a separate controller for each
actuator. Draw the block diagram for this automated cutting machine. If an optical tech-
nology is used for image processing-based feedback to achieve highest precision cutting,
update the hybrid control block diagram along with an operator panel (list all I/O vari-
ables involved).
1.7
In order to design the control system for an electrically-driven dialysis blood processing
system, as illustrated in Figure 1.15, a temperature and pressure are monitored from
the control panel such that abnormal dialysate pressure outside the −410–+330 mmHg
range (avoid exceeding the pressure in the blood compartment) with an accuracy of ±7%
triggers an alarm and ﬂashing lights. This is also the case for membrane rupture, which
could cause blood contamination. The transmembrane pressure regulates ultraﬁltration
(i.e. removing toxic ﬂuid).
a) Identify all components of the mechatronics process.
b) List key I/O (logic and continuous) dialysis blood system variables involved.
c) Sketch the corresponding hybrid control block diagram taking into account volumet-
ric and ﬂow sensor controls.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
19
DC motor
ω(t),θ(t)
Motorized
valve with
gear ratio, n
Temperature
sensor gain, b
vb(t)
Amplifier
gain Ka
e(t)
m(t)
Steam, Qv(t)
Treated blood at Te(t)
Heated dialysis
solution
Qs(t) at Ts(t)
Motorized
valve, α(t)
Dialysis solution
Blood to be treated
Q = constant
Ts(t)
Controller 
station
Modem
Switch
Dialysis
solution
with impurity
Permeable
membrane
Figure 1.15 Dialysis blood processing system. Source: Based on Kaltjob P.
d) Draw a control panel, considering variables associated with the interlocks fulﬁlling
the safety requirements listed here.
1.8
A Global Positioning System (GPS) receiver-based autoguided missile has a precision-
strike mechatronic system which is used to track a predetermined ﬂight trajectory by
regulating the angle between its axis of motion and its velocity vector. The adjustment
of the missile angle 𝜙is achieved through the thrust angle ß, which is the angle between
the thrust direction and the axis of the missile, as illustrated in Figure 1.16.
a) Identify the ﬂight control processing functions for the guided missile as well as cor-
responding I/O variables (including GPS position, velocity, attitude, and orientation)
and a gyroscope-based stability function using line-of-sight measurement.
b) Draw a block diagram for the intelligent control of the auto positioning system for the
missile angle using a gyroscope to measure its angle and a motor to adjust the thrust
angle.
c) In the case of a heat-seeking missile, a guidance control strategy is used. How would
the control block diagram be modiﬁed for this?
1.9
A crude oil distillation process using a boiler-based temperature control is illustrated in
Figure 1.17. The distillation process is used to separate gasoline from asphalt, controlling
the reﬂux rate by regulating the ﬂow of distillate composition at its top and by varying
the rate of steam to the reboiler at the bottom. Among the key process variables are
temperature (continuous) and ﬂame (binary) in the combustion chamber (boiler).
a) Identify the control and monitoring objectives of this distillation process.
b) Identify all devices involved in the distillation column temperature and ﬂow process
control and their corresponding I/O variables.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

20
1 Introduction to the Control of Mechatronic Systems
β
Motor thrust
Rocket
Explosive 
device
Direction of
motor thrust
Direction of 
motion velocity
ϕ
Missile 
axis of motion
Figure 1.16 Guided missile trajectory. Source:
Based on Kaltjob P.
Elec. valve
Gas
Flame
detector
Control
CRUDE OIL DEPOT
Exhaust
Thermostat
Gasoline
(petrol)
Kerosene
Diesel oil
Fuel oil
Lubricant oil,
paraffin wax, 
asphalt
Gas
oil
150°C
200°C
300°C
370°C
400°C
FURNACE
DISTILLATION COLUMN
From offshore 
upstream pipe
Pump
650–850°C
Figure 1.17 Schematic of a crude oil distillation process with its boiler temperature control system. Source:
Based on Kaltjob P.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
21
c) Sketch the block diagram for continuous pressure control, feed control, boiler tem-
perature control, and reﬂux control of this distillation process.
d) List key possible I/O (logic and continuous) variables involved. Draw the correspond-
ing hybrid control block diagrams.
Due to the multifunctional controllers required, it is desirable to have a DCS archi-
tecture with SCADA network.
e) Sketch the DCS schematic linking all required type of ﬁeld control devices, data acqui-
sition unit, and a local control unit up to the central command and control unit.
f) Sketch the schematic of the control panel and visualization system for this distillation
system plant containing the execution unit of the management information system
functions along all logic control connections.
1.10
Consider a control project upgrading a distributed control (no single point of failure) for
an express parcel handling and dispatching center. Among the control design require-
ments are: (i) a parcel dimension check point; and (ii) parcel priority levels. All parcels
pass through an integrated security system consisting of a series of security scanners
while being directed automatically by barcode scanning points along long-distance con-
veyor system and a robot handling system at each end to their ﬁnal transit destination
via a temporary storage room.
a) Identify the control objectives for this parcel handling and dispatching center.
b) List key I/O variables (logic and continuous) for the handling and dispatching center.
c) Sketch the block diagram of this system as well as an operator panel including all I/O
system and control variables.
1.11
Similar to blood glucose level or blood pressure regulation, the regulation of human body
blood temperature is performed through the evaporation of water from the skin over the
capillary network.
a) Identify the continuous and logic control objectives for blood temperature regulation
in the human body.
b) Sketch a hybrid control block diagram for the human body blood temperature con-
tinuous control problem.
c) Integrate this system block diagram with one for human blood pressure regulation
and one for human blood glucose level control.
d) From the preceding block diagram, identify devices that could be used in the measur-
ing and detecting unit and in the actuating unit of this multi-level automated human
blood regulation process.
1.12
From the cake conveyor oven depicted in Figure 1.18, it is necessary to control tempera-
ture and air moisture within the oven chamber as well as the conveyor speed in order to
ensure a suitable cake baking process. An image processing camera is used for thermal
sensing conﬁguration of the chamber and an operator panel is used to deﬁne conﬁgura-
tion settings and display operating conditions.
a) List key I/O (binary and continuous) control and system variables involved.
b) Draw the hybrid control block diagram and operator panel with I/O controls and
process variables.
1.13
Among vehicle-based mechatronic systems, there are:
a) the antilock brake system (ABS) to allow vehicle wheels to smoothly stop their rota-
tion when a mechanical brake is activated;
b) the traction control system (TCS);
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

22
1 Introduction to the Control of Mechatronic Systems
Cake
Cake
Cake
Cake
Cake
Hygrometer
[%]
Electrical
heating
elements
Motorized
circulating
fans
Thermostat
[°C]
Travel direction
Stepping motor
Screw conveyor
Air flow
[m3 s–1]
Heater
voltage [V]
Cake
C ke
Ca
ake
Ca
e
Cake
Figure 1.18 Cake conveyor oven. Source: Based on Kaltjob P.
c) the vehicle dynamics control (VDC):
d) the electric spark ignition for fuel-air combustion;
e) the engine management and transmission control;
f) the airbag activation;
g) the air conditioning system;
h) seat belt control;
i) mirror control;
j) climate and vehicle front light activation control;
k) the parking distance control system;
l) parallel self-parking;
m) the averaging fuel tank level;
n) the alcohol test and engine activation;
o) the window lift system.
i) Based on either operating objectives such as comfort, safety, and emission reduc-
tion, or autonomous and intelligent cruise control objectives, classify the mecha-
tronic systems listed here.
ii) For ﬁve mechatronic systems out of this list, deﬁne the possible I/O variables
involved (hint: each variable is associated with a ﬁeld control device).
1.14
Consider the horizontal motion of a helicopter hovering as depicted in Figure 1.19. The
motion equipment includes an engine-driven rotor with a speed control while the pitch
angle is given by the drivetrain. The wind speed can be considered a disturbance and its
power is related to altitude height, also called the shear coeﬃcient. Then, the helicopter’s
motion can be deﬁned by the rotor and drivetrain. Sketch a block diagram for the speed
and direction control from variations associated with the pitch rate, the pitch angle of
the fuselage, and the rotor tilt angle.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
23
Figure 1.19 Helicopter schematic. Source: Based on
Kaltjob P.
u(t)
Rotor
β
δ(t)
Rotor thrust
Vertical axis
Fuselage 
reference axis
z-axis positioning
extractor
Crusher
Feeder
Warm
water
Valve
Compressed
air
Hot
water
tank
Conveyor
Grinding
250 m
α
Underground
soil/sand
Figure 1.20 Electric-driven car moving up the hill.
1.15
Consider a gold-mining extraction operation, as depicted in Figure 1.20. It is necessary to
monitor and remotely control the primary and secondary crushing motors, raw material
conveyor motors, ball milling (grinding), operations related to pressurized watering,
underground soil feeding in transportation trailers during extraction operations, and
operations related to leading and tailings stacking.
a) List key I/O variables involved in the monitoring and control of a gold-mining extrac-
tion process.
b) Sketch the corresponding control system block diagram including the monitoring and
control system instruments as well as I/O variables involved.
1.16
Consider robot harvesting machines that perform autonomous fruit detection in trees,
picking fruit from the foliage without damage. Then the fruit is transferred directly into
mobile collecting boxes as depicted in Figure 1.21.
Identify the major I/O (continuous and binary) variable systems and sketch the hybrid
control block diagram with I/O variables of this harvesting robot integrating the follow-
ing continuous and logic control functions:
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

24
1 Introduction to the Control of Mechatronic Systems
EV1
Electro-valve
(AV2,
RET2)
Compressor
Electro-valve
Conveyor
motor
Electro-valve
MTC
Image 
recognition
detector
D1
Picking arm 
Oil
reservoir
9.4 bar
17.4 bar
Hydraulic
cylinder HC2, HC3
Hydraulic
cylinder HC1
Hydraulic
cylinder HC4, HC5
EV3
EV2
(AV1, RET1)
(LS1)
Horizontal
clamps
MTS
Figure 1.21 Automatic fruit harvesting robot. Source: Based on Kaltjob P.
a) Fruit detection (fruit tree location) using 3D camera image processing (color unifor-
mity, maturity recognition using near-infrared for sugar content, selection based on
size and shape) and a laser ranging sensor.
b) The path generation and motion planning (position, speed, and acceleration) for the
harvesting robot’s exploration using optical, magnetic, laser-guided, and GPS tools
while ensuring that the robot manipulator avoids collisions.
c) The logic control for activating a solenoid in charge of a vacuum suction nozzle, espe-
cially for mature but resistant-to-vibration fruit.
d) The continuous control of the angular position of the robot picker arm ﬁngers with
interior foam sponge pads combined with a cutter for picking. The same arm logically
controls the shaking magnitude and frequency to ensure reliable fruit picking.
e) The steering control of a mobile robot, with especially synchronized control of motors
position, speed and acceleration in charge of the robot carrier movement (horizon-
tal motion of the trolley), platform movement (vertical motion of the retractable
self-propelled elevator system) and direction of robotic picking arm operations such
as vertical inching, twisting rotation, retraction, and depositing.
f) The control of camera rotation and translation with respect to the targeted object
whose features are not time-varying, while avoiding any blurring resulting from cam-
era motion and the inﬂuence of large illumination variation in image processing using
vision sensors for edge detection and square angular estimation.
1.17
In a typical nuclear power plant, as illustrated in Figure 1.22, heat is released after
scission of uranium atoms within the reactor component to heat water, the steam from
which generates electrical power within the generator component. Within the reactor,
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
25
Valve
EV1
Electrical
production plant
turbine and
generator TG1
Power
transformer
Bidirectional 
motors
MT1 MT2 MT3 MT4 MT5
Uranium rods
Water
Helium/cooling water
Power
transmission
lines
Valve
EV2
UPS power storage
DC/AC converter
Nuclear reactor
Figure 1.22 Schematic of nuclear plant.
Reactor
(nuclear fission to heat)
Turbine/generator
(steam to spin 
turbine rotor and 
generate electricity)
Steam generator
(heat to steam
from boiling water)
high pressure
Fissile material
(uranium)
Megawatts
Valve
(flow control)
(reactivity
control)
(steam 
pressure)
Heat flow
Water steam
flow
Control
Figure 1.23 Incomplete block diagram of a nuclear plant continuous control system.
cylindrical tubes of uranium are grouped within assemblies of rods and inserted simul-
taneously by remotely controlled arms into the reactor core. Water ﬂowing through the
reactor core absorbs the heat energy from uranium atoms splitting through a successive
radioactive ﬁssion sequence. The generated heat energy is transferred from the reactor
core to the turbine component in the form of steam. This resulting high-pressure steam
drives the turbine/generator unit. This highly pressurized steam causes rotation of the
turbine blades and consequently rotation of the attached electric generators. For such
a plant, complete the continuous control block diagram as depicted in Figure 1.23
and draw the overall hybrid control block diagram and operator panel including the
following control objectives:
a) The speed and bidirectional control of the uranium rods within the reactor. The
speed of the process of absorbing neutrons and the chain reaction is related to their
vertical motion.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

26
1 Introduction to the Control of Mechatronic Systems
b) Control of the temperature of the reactor core due to the fact that the number of neu-
trons absorbed is raised, resulting in fewer neutrons being available to cause ﬁssion.
c) The control of the ﬂowrate of circulating water within the reactor.
d) The control of the pressurized water level in the reactor where water ﬂows in to be
heated to produce steam that then ﬂows to the turbine to generate electricity.
e) The logic control of energy operation in the reactor core by removal of the uranium
rods from the water at maximum speed with respect to safety and emergency
requirements. The energy generated in the water-based reactor is converted into
high-pressure steam, which is used directly to turn the turbine (steam generator).
f) The logic control of the selection of a subgroup of individual rods to move upward
and downward by individual attached bidirectional motors above the reactor core.
g) The logic control of energy storage by switching the charging/discharging operation
based on battery charge status, load level, and the level of energy collected.
h) The control of the rate of ﬂow of heat energy circulating between the tank and the
collector.
i) The monitoring of the radiation activity within the reactor and surrounding air,
ground, and liquid environment.
Bibliography
1 Åström, K.J. and Wittenmark, B. (2011). Computer-Controlled Systems: Theory and Design.
Courier Dover Publications.
2 Bailey, D. and Wright, E. (2003). Practical Scada for Industry. Newnes (copyrighted Else-
vier).
3 Erickson, K. and Hedrick, J. (1999). Plant Wide Process Control. Wiley.
4 Franklin, G.F., Workman, M.L., and Powell, D. (1997). Digital Control of Dynamic Systems,
3e. Boston, MA: Addison-Wesley Longman Publishing Co.
5 Goodwin, G.C., Graebe, S.F., and Salgado, M.E. (2001). Feedback Control of Dynamic
Systems. Prentice Hall.
6 Golnaraghi, F., Kuo, B.C., and Adams, J.A. (2009). Automatic Control, 9e. Wiley.
7 Groover, M.P. (2007). Automation, Production Systems and Computer-Integrated Manufac-
turing, 3e. Prentice-Hall.
8 Kaltjob, P. (2018). Mechatronic Systems and Process Automation: A Model-Driven Approach
and Practical Design Guidelines. CRC Press.
9 Kuo, B. (1995). Digital Control Systems. Oxford University Press.
10 Luyben, W.L. and Luyben, M.L. (1997). Essentials of Process Control. New York:
McGraw-Hill.
11 Marlin, T.E. (2000). Process Control: Design Processes and Control Systems for Dynamic Per-
formance, 2e. McGraw-Hill.
12 Ogata, K. (2004). Modern Control Engineering, 4e. Prentice Hall.
13 Powell, F. and Emami-Naeini, A. (2002). Control System Design, 4e. Prentice Hall.
14 Seborg, D., Edgar, T.F., Mellichamp, D., and Doyle, J. (2011). Process Dynamics and Control,
3e. Wiley.
15 Siouris, G.M. (2003). Missile Guidance and Control Systems. Springer.
16 Smith, C.A. and Corripio, A.B. (1997). Principles and Practice of Automatic Process Con-
trol, 2e. New York: Wiley.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

27
2
Physics-Based Systems and Processes: Dynamics Modeling
2.1
Introduction
The dynamics modeling of electrically-driven systems and processes operations is the
mathematical formulation capturing any spatial-temporal cause-based changes of their
physical properties. Such behavior modeling aims either to analyze the physical phenomena
over diﬀerent operating conditions or to improve their performance using suitable and eﬃ-
cient automation systems. There are three approaches of behavior dynamics modeling:
(i) the approach based on detailed system or process knowledge along with governing physics
laws of continuity or conservation (white boxes); (ii) the approach driven by system or process
data (black boxes); or (iii) the approach based on a combination of a model structure derived
from the physics-based analysis with model parameters estimated over collected system or
process data (gray boxes). Those resulting dynamic models can be expressed in diﬀerential
or diﬀerence equation forms. Hence, depending on the system or process complexity, on the
knowledge of transient and stationary characteristics, and on the empirical data available,
any of those approaches can be chosen. However, those stochastic (black) or mechanistic
(white, gray) approaches have led to models not being generic or having limited accuracy due
to diﬃculties in measuring or estimating their model parameter values.
This chapter presents a generic dynamic modeling procedure illustrated through a variety
of electrically-driven systems and processes related to chemical (e.g. crude oil distillation),
transportation (e.g. gantry crane, pozzolana scratcher), thermal (e.g. beer fermentation, poultry
scalding and defeathering), ﬂuidic (e.g. city waste water treatment), biomedical (e.g. new infant
incubator, blood glucose (BG) metabolism), and production (e.g. lathe machine, wind turbine
energy generator, cake conveyor oven) applications.
2.2
Generic Dynamic Modeling Methodology
Commonly-encountered electrically-driven systems and processes transform electrical energy
into mechanical, ﬂuidic, thermal, or even electrical-related energy or work. Hence, based on
the variation of their physical and dynamical properties (geometrical boundaries, operating
conditions etc.…), a mathematical formulation can be derived using the principles of conser-
vation and continuity (mass, energy, or momentum balances) or physical laws. The major steps
of process dynamics modeling are:
1) analysis of operating boundaries and conditions in terms of deﬁning operating objectives
and framing its decomposition into subprocess operations, when possible. This consists of
specifying temporal and spatial boundaries characterizing physical/chemical phenomena
Control Of Mechatronic Systems: Model-Driven Design And Implementation Guidelines,
First Edition. Patrick O.J. Kaltjob.
© 2021 Patrick O.J. Kaltjob. Published 2021 by John Wiley & Sons Ltd.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

28
2 Physics-Based Systems and Processes: Dynamics Modeling
and listing all key input variables or actions that are causing change in the system, or process
physical and dynamic properties corresponding under various operating conditions;
2) development of equations for the dynamics model using either laws of conservation
and continuity from the asserted operating assumptions or experimental data and
physics-based analyses (model structure and order) in order to subsequently estimate the
model parameters;
3) adjustment, reﬁnement, and validation of the dynamics model through sensitivity analysis
and validation of assumptions using some experimental data.
Table 2.1 summarizes a step-by-step modeling procedure for electrically-driven system and
process operations.
2.3
Transportation Systems and Processes
2.3.1
Sea Gantry Crane Handling Process
Gantry cranes are typical electromechanical systems used in a harbor environment for auto-
matic container loading and unloading operations between piers and ships. During these oper-
ations, attached loads (containers) sway, which causes position and control problems. Some
anti-sway devices have been developed using friction additive components to reduce disper-
sion but they were found to be slow to respond. In contrast, an anti-sway control strategy has
been found to oﬀer faster response during load transfer movement. However, these solutions
require the dynamic modeling of the container position and real-time assessment of swaying
angle using an image processing system embedded within a camera.
For its x,y,z motion, the gantry crane can be decomposed into three subsystems: (i) the gantry;
(ii) the trolley attached by a cable to the gantry; and (iii) the spreader with container (load) sus-
pended from the trolley, as illustrated in Figure 2.1(a). The container sway can be captured at
both angles, 𝜃(t) and 𝛽(t), for the x-y and x-z planes respectively. All of these devices are driven
by permanent magnet direct current (DC) motors. The handling process has two operating
phases: uploading and oﬀ-loading (pick and drop), during which the gantry is either carry-
ing the container or not. Table 2.2 summarizes the container handling process parameters and
variables.
Here, the container handling process consists of a gantry moving along the rails over the
pier while the trolley is moving along another set of rails attached to the gantry perpendicu-
lar to the pier. Attached to the trolley via cables, the spreader is used to hold the containers
and carries out the hoisting movement by winding and unwinding the cables. The gantry crane
system motion characteristics (velocity and acceleration) are summarized in Table 2.3. Depend-
ing on the obstacles, there are three possible paths (1, 2, 3) in the y-z container-spreader-trolley
motion, as shown in Figure 2.1(b). The gantry crane motion is synchronized in the y-z-direction
such that the container moves diagonally, meaning it is simultaneously in vertical and horizontal
directions, as shown in Figure 2.1(b).
Initially, the container is hoisted, with the maximum torque, vertically up to a point where it
has the maximum upward velocity. During the horizontal motion, the trolley runs at the maxi-
mum velocity with the container at a nearly constant height from the Earth’s surface, depending
on the swing angle 𝜃(t) (nearly equal to zero). For simplicity only, the y-z 2D motion of the con-
tainer is considered to be modeled and analyzed. The gantry motion is discarded. The choice of
the shortest path is not considered. Hence the minimum travel time due to path selection and
motion proﬁle is not considered. Furthermore, it is assumed that only the translational speed
of the trolley or the gantry movement would cause load swaying. All friction forces due to the
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.3 Transportation Systems and Processes
29
Table 2.1 Generic dynamic modeling procedure of system or process operations.
Modeling steps
Illustrative examples
Analysis of operating boundaries and conditions
1) Identify operating objectives (input forces
or signals changing entity properties), deﬁne
the model purpose (improve performance or
understand phenomena), and list key input and
output variables.
Fermentation process temperature regulation; coolant
ﬂuid ﬂow rate and tank temperature.
2) Frame geometrical and physical operating
attributes (e.g. spatial and temporal bound-
aries).
Fermentation tank and jacket.
3) Deﬁne physical and/or chemical phenomena
characteristics evolved over process behavior
and estimate some parameters and initial oper-
ating conditions.
Heat transfer (conduction and convection) as well as
laminar steady cold-water ﬂow.
Thermocouple
4 – 20mA, 3 Volts)
ω(t)
rad/sec
T(t)
°C
Tachometer (0–5 V, max. 526).
4) Develop a model conceptual structure of causal
relationships that mimics observed causes and
eﬀects of real operations. This should be a qual-
itative analysis leading to model conceptualiza-
tion.
Drawing stock ﬂow or causal diagrams (e.g. piping and
instrumentation, process ﬂow, and process
schematics) with global input/output process
variables and parameters (if available).
Conceptual
structure and
process
parameters
Inputs
variables
Outputs
variables
5) Decompose the model conceptual structure
(physical entity) into sub-models based on
operating functionalities so that changes to the
input variables’ initial conditions can be mea-
sured or estimated by output variables.
Inputs
Inputs
variables
Outputs
variables
Conceptual structure
Sub-model 1
Sub-model i
Sub-model k
Sub-model n
Input k
Ouput 1i
Input ki
Output in
6) List and identify operational conditions for
each subprocess and for the entire process.
Those operating conditions should meet safety
and stability requirements.
V(t)
Volts
t = 0
t = ∞
ω(t)
rad/sec
T(t)
N.m
1.2
13.6
32.8
0
11.3
131
Dynamics modeling
7) From process operating and environmental
conditions, state key assumptions on model
conceptual structure.
During fermentation: (1) heat losses through jacket
have negligible environmental eﬀects; (2) ﬂuid ﬂow
properties within the jacket are nearly steady and
ideal.
(continued)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

30
2 Physics-Based Systems and Processes: Dynamics Modeling
Table 2.1 (Continued)
Modeling steps
Illustrative examples
8a) Either derive, from the analysis of the entity
behavior, the model structure and order, then
apply system identiﬁcation methods on exper-
imental data to estimate model parameters
(gray boxes).
For example, estimation of a second-order motor with
white noise Autoregressive Exogenous (ARX) model
structure and its parameters (inductance and inertia)
based on least squares methods, regression analysis,
and curve ﬁtting techniques.
8b) Or apply the principles or physical laws related
to conservation and continuity (mass, energy,
or momentum balances) to each subprocess
(considering the constitutive relations and their
initial and boundary conditions) to derive
equations capturing entity properties dynam-
ics (white boxes).
Apply Newton’s and Kirchhoﬀ’s voltage laws to derive
the electrically-driven motor pump dynamical model
or the Reynolds transport theorem for the ﬂuid ﬂow
dynamics in oil pipelines.
9a) Use scaling to simplify the model equations,
then apply linearization model methods (if
necessary). Otherwise, apply decoupling tech-
niques.
Using operating range (e.g. δ = [T1,T2]).
ω(t)
rad/sec
T(t) °C 
K
δ
To simplify:
⃗
𝜔(t) = 𝛼3T(t) + 𝛽2T(t) ≈KT(t)
9b) Check model consistency with the real-life
entity and apply dynamics model reduction
techniques such as: (1) neglecting small-eﬀect
dynamics; (2) assuming time invariant process
parameters; and (3) replace distribution char-
acteristics with appropriate lumped elements.
Model order reduction or elimination; keep
independent from environmental conditions; neglect
uncertainty and noise in an I/O signal (avoid statistical
treatment); use ordinary over partial diﬀerential
equations.
Reﬁnement and validation of the dynamics model
10) Analyze model sensitivity to slight changes in
variables and parameters.
Industrial
Process
ω(t)
rad/sec
t (sec)
V(t)
rolts
t (sec)
11) Reﬁne the estimation of process parameters
using statistical analysis of I/O model dynamic
equations based on comparative analysis with
experimental test data.
Use stochastic methods such as least squares
estimation etc. and derive model parameters
conﬁdence region.
12) Evaluate uncertainties in model equations and
model equation correctness.
ω(t)
rad/sec
t sec
* *
*
*
*
*
*
*
*
*
e.g. Bounded some
eﬀects of model assumptions based on amplitude
ratios resulting from the I/O equation.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.3 Transportation Systems and Processes
31
(a)
(b)
Trolley
Spreader
Gantry
Rails
Containers
y-direction
z-direction
Trolley
motor 1
Spreader
group 
motor 2
Gantry
group
motor 3
θ(t)
ß(t)
L(t)
T2(t)
x-direction
T1(t)
Gantry
Trolley
Container
ωsp(t)
Spreader
ωT(t)
ωG(t)
z
y
θ(t)
ysp(t)
zT(t)
zsp(t)
L(t)
T2(t)
T1(t)
Msp
Mc
25 m
12 m
Path 1
Path 2
Path 3
40 m
Figure 2.1 (a) Schematic of the sea port gantry crane and its components. (b) Container trolley motion and
potential paths 1, 2, and 3.
contact between the guiding rails and the trolley, as well with the spreader cable, are negligible.
The cables connecting the trolley and the spreader are rigid (i.e. inﬂexible). The trolley only
moves horizontally while the spreader with container moves only in 2D (y-z-axes), such that
while 𝜃(t) is considered, 𝛽(t) is negligible.
It is considered that the container is swinging in the opposite direction to the trolley motion.
Usually, there are three ﬁxed possible spreader cable lengths corresponding to pick position L1,
drop position L2 and moving position L3. When the trolley is moving toward the right direction,
it is assumed that the payload moves clockwise. Because the spreader and cables have negligible
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

32
2 Physics-Based Systems and Processes: Dynamics Modeling
Table 2.2 Crane gantry system parameters and variables.
Parameters
Description and values
Variables
Description and values
Mc
Container mass (40 tonnes)
𝜃(t)
Container swing angle in y-z-axis (rad)
Mt
Trolley mass (3200 kg)
dL(t)
dt
Container velocity in L-direction (m s−1)
Mg
Gantry mass (800 tonnes)
zT(t)
Position of the trolley in z-axis (m)
Msp
Spreader mass (1500 kg)
zsp(t)
Position of the spreader in z-axis (m)
𝜌
Air density at 20∘C (1.2 kg m−3)
𝜔G(t)
Gantry motor angular velocity (rad s−1)
K
Motor torque constant
𝜔T(t)
Trolley motor angular velocity (rad s−1)
Jcon
Container inertia (N.m.s2 rad−1)
𝜔sp(t)
Spreader motor angular velocity (rad s−1)
La
Motor armature inductance (0.02 H)
𝛽(t)
Container swing angle in x-z-axis (rad)
r
Radius of trolley pulley (0.1 m)
T2(t)
Container motor generated force (N)
Ra
Motor armature resistance (27 Ω)
T1(t)
Trolley motor generated force (N)
A
Container surface (m2)
ww
Average wind velocity (m s−1)
Cd
Aerodynamics coeﬃcient (Nsm−1kg−1)
L(t)
Length of spreader cable (m)
ysp(t)
Position of the spreader (m) in y-axis
Table 2.3 Gantry cranes speed and acceleration operating conditions.
Operating mode
Speed
(m min−1)
Acceleration
times (s)
Deceleration
times (s)
Hoisting with rated load
70
2
1.5
Hoisting with 40-tonne container
100
2
1.5
Hoisting with spreader only
180
4
3
Trolley drive
250
5
5
weights compared to the container, the center of gravity of the cable-spreader-container sub-
system is the center of gravity of the container.
Although the load swaying depends on the motion proﬁle (acceleration and speed), it is
assumed that the load swaying oscillates like a pendulum at a period given by:
T(t) = 2𝜋
√
L(t)∕g
During the load carrying phase, the velocity of the oscillation is given by:
𝜔n =
√
1 +
Mt
Msp + Mc
It is decided to model a gantry crane handling system that enables transfer of a container
along the spreader-trolley direction (y-z-direction) from one location to another while
minimizing the swing of the container. During the gantry crane oﬀ-loading operations (pick
and drop), the trolley force T1(t) and the spreader-generated motor force T2(t) are system
inputs and the spreader-container positions ysp(t), zsp(t) can be captured through variables
such as: the trolley position zT(t), the cable length L(t), and the swing angle positions 𝜃(t). The
following two models are presented to illustrate the complexity of system modeling.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.3 Transportation Systems and Processes
33
2.3.1.1
Model 1
Along the z-direction of the trolley subsystem, applying Newton’s laws yields:
Mt
d2zT(t)
dt2
= T1(t) −T2(t) sin 𝜃(t)
Along the z-direction of the spreader-container subsystem, applying Newton’s laws yields:
(Msp + Mc)
d2zsp(t)
dt2
= −T2(t) sin 𝜃(t)
Along the y-direction of the spreader-container subsystem, applying Newton’s laws yields:
(Msp + Mc)
d2ysp(t)
dt2
= T2(t)s cos 𝜃(t) −(Msp + Mc)g
From geometrical analysis, the spreader and the trolley coordinates are related as:
ysp(t) = −L(t) cos 𝜃(t)
zsp(t) = zT(t) + L(t) sin 𝜃(t)
Taking the diﬀerentiation of these equations, the spreader cable length L(t) and the swing angle
𝜃(t) velocities yield:
d𝜃(t)
dt
=
1
L(t)
[(dzsp(t)
dt
−dzT(t)
dt
)
cos 𝜃(t) +
dysp(t)
dt
sin 𝜃(t)
]
dL(t)
dt
=
[(dzsp(t)
dt
−dzT(t)
dt
)
sin 𝜃(t) −
dysp(t)
dt
cos 𝜃(t)
]
There are ﬁve equations and ﬁve unknown variables to be determined. Substituting these
equations, this system could be simpliﬁed into three equations and three unknown variables
(zT(t), L(t), and 𝜃(t)) as follows:
(Mc + Msp + Mt)d2zT(t)
dt2
+ (Mc + Msp) d
dt
[
cos 𝜃(t) + dL(t)
dt
sin 𝜃(t)
]
= T1(t)
(Mc + Msp)
[
d2L(t)
dt2
+ sin 𝜃(t)d2zT(t)
dt2
−L(t)
(d𝜃(t)
dt
)2]
= −T2(t) + (Mc + Msp)g cos 𝜃(t)
d2𝜃(t)
dt2 L(t) + d2zT(t)
dt2
cos 𝜃(t) + 2L(t)d2𝜃(t)
dt2
= g sin 𝜃(t)
This model with three equations and three unknowns is valid when only the trolley moves
in synchronization with the spreader; its length is varying simultaneously. There is a coupling
between T2(t) and 𝜃(t).
Considering the case when the trolley moves only with the spreader, meaning it synchronizes
the trolley movement with the spreader cable motion, such a system could be captured using
the next model developed.
2.3.1.2
Model 2
Along the z-direction, applying Newton’s laws yields:
Mt
d2zT(t)
dt2
= T1(t) −T2(t) sin 𝜃(t)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

34
2 Physics-Based Systems and Processes: Dynamics Modeling
From the spreader and container system component, this equation yields:
(Msp + Mc)
d2zsp(t)
dt2
= T2(t) sin 𝜃(t)
(Msp + Mc)
d2ysp(t)
dt2
= T2(t)s cos 𝜃(t) −(Msp + Mc)g
The spreader and the trolley coordinates are related as:
ysp(t) = −L(t) cos 𝜃(t)
zsp(t) = zT(t) −L(t) sin 𝜃(t)
Taking the diﬀerentiation of the previous geometric equations, the spreader cable length L(t)
and the swing angle 𝜃(t) velocities yield:
d𝜃(t)
dt
=
1
L(t)
[(dzT(t)
dt
−
dzsp(t)
dt
)
cos 𝜃(t) +
dysp(t)
dt
sin 𝜃(t)
]
dL(t)
dt
=
[(dzT(t)
dt
−
dzsp(t)
dt
)
sin 𝜃(t) +
dysp(t)
dt
cos 𝜃(t)
]
Another approach leading to a gantry crane dynamic positioning model uses only the trolley
force T2(t) as an input and captures the spreader-container position over the variables of trolley
position zT(t) and swing angle 𝜃(t), which are given by:
(Mc + Msp + Mt)d2zT(t)
dt2
+ (Mc + Msp)L(t)
[
d2𝜃(t)
dt2
cos 𝜃(t) −
(d𝜃(t)
dt
)2
sin 𝜃(t)
]
= T1(t)
d2zT(t)
dt2
cos 𝜃(t) + L(t)d2𝜃(t)
dt2
+ g sin 𝜃(t) = 0
Here, it is assumed that the spreader cable length L(t) is constant during spreader-container
motion. The previous nonlinear model can be linearized using an assumption on the stability
region of 𝜃(t) ≈0. This would result in:
(Mc + Msp + Mt)d2zT(t)
dt2
+ (Mc + Msp)L(t)d2𝜃(t)
dt2
= T1(t)
d2zT(t)
dt2
+ L(t)d2𝜃(t)
dt2
+ g𝜃(t) = 0
There are two equations and two unknown variables. In order to prevent swaying conditions,
a smooth speed variation has to be considered, using a sinusoidal or parabolic approximation of
the velocity proﬁle vsp(t) = ̇zsp(t), as shown in Figure 2.2. The spreader-container velocity vsp(t)
could be given by:
vsp(t)2 = vsp y(t)2 + vsp z(t)2
where L(t) is constant and
vsp y(t) = −L(t)d𝜃(t)
dt
sin 𝜃(t)
and
vsp z(t) =
dzsp(t)
dt
+ L(t)d𝜃(t)
dt
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.3 Transportation Systems and Processes
35
Motion
profiles
Trolley speed, ωT(t)
Swaying angle, θ(t) 
Time
Figure 2.2 Typical variation of swaying angle and spreader speed over time.
The inertia of the spreader-container is not considered. Here, it can be noticed that a change
in speed causes the variation in the load balance and swaying angle. Hence, this multiple
input multiple output (MIMO) model characterizing the displacement of the container can
be described using trolley and spreader cable length velocities from motor-generated force
inputs T1(t) and T2(t). Usually, the Euler–Lagrange equation is used in the formulation of
trolley-spreader-container motion and results in an augmented dynamic model with coupling
between motor-generated forces T1(t) and T2(t). However, this is negligible in cases where the
cable is not considered ﬂexible. Furthermore, neglecting the disturbance force, the force of the
wind acting on the container is given by:
Fw = ACd
𝜌
2vw
2
In addition to low swing angle constraints, it is suitable to achieve gantry crane loading opera-
tions with minimum energy consumption. Such constraints would require the minimum travel
time. This travel time depends on the velocity and acceleration proﬁles as well as the path cho-
sen between the pick and drop locations. This makes the model more complex. Also, the gantry
crane is used as a load moving system, as in the lifting appliances commonly encountered in
warehouses and factories. Here, the swaying could place wear on the equipment and could
result in crushing of the carried load, which could also seriously harm personnel nearby. Other
applications besides material transportation include a 3D printer. Here, a precise position with
minimal oscillation is required to achieve high-resolution printing.
2.3.2
Vertical Elevator System
Electrical motor-driven elevators are used for vertical motion of loads. Due to variations in
motion proﬁle (velocity, acceleration), travel distance (height of lifting), load weight, cable char-
acteristics and so on, it is suitable to develop an adequate mechanical model of elevator position.
Elevator components are: (i) a passenger car (cabin), car frame, and pair of guide rails; (ii) a
counterweight connected by a traction cable to balance cabin and passenger weight; and (iii)
a traction system for hoisting, consisting of an electric motor, drum, and gear, as shown in
Figure 2.3. Elevators use steel cable rods attached to the top of the suspended elevator car and
a counterweight. These cables are passed over a drive pulley that is attached at the top of the
elevator motor shaft. The elevator car and the counterweight always move in opposite direc-
tions. The suspended elevator car and the counterweight have the same weight and place an
extension force on the cable. Table 2.4 summarizes the elevator system steady-state parameters
and variables.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

36
2 Physics-Based Systems and Processes: Dynamics Modeling
Drum
Cabin
passenger
Counter
weight
+
DC motor
Kc
Bc
Bcw
Kcw
Mc+Mp
Mcw
Va(t)
Jm Bm
Tm(t)
Vc(t)
Fc(t)
Fcw(t)
Vcw(t)
ωm(t)
Jdr
Gear
n–1th floor
nth floor
ωgear(t)
ωdr(t)
Jgear
h
Rdr
Drum
+
Tm(t)
Cabin
passenger
Counter
weight
Mcwg
(Mc+Mp)g
Jdr
Rdr
Fc(t)
Fcw(t)
Jm Bm
Jgear
bgear
bdr
Upward
motion
Figure 2.3 Classical elevator system schematic and its components.
Table 2.4 Some elevator system parameters and model variables.
Parameters
Description and values
Variables
Description and values
Mcw
Counterweight mass (1200 kg)
Va(t)
Applied DC motor voltage (V)
Mc
Cabin mass (1200 kg)
D(t)
Passenger mass (kg)
M
Passenger mass (max. 700 kg)
ia(t)
Armature current (A)
bdr, bgear
Gear and drum damping (N.m.s−1 rad−1)
Tm(t)
DC motor torque (N.m)
La
Motor armature inductance (H)
𝜃(t)
DC motor position (rad)
Km
Motor constant (1.2 V s−1 rad−1)
𝜔(t)
DC motor velocity (rad s−1)
Jgear
Gear inertia (N.m.s2 rad−1)
𝜔gear(t)
Gear velocity (rad s−1)
Kb
Emf motor constant (V−1 s−1 rad−1)
𝜔dr(t)
Drum velocity (rad s−1)
Rdr
Radius of drum (pulley) (0.3 m)
ycw(t)
Counterweight position (m)
Jm
Motor inertia (0.053 N.m.s2 rad−1)
ydr(t)
Vertical rim position (m)
𝜂gear
Transmission ratio (50)
yc(t)
Vertical cabin position (m)
L
Cable length (m)
ycable(t)
Vertical cable position (m)
𝜆
Linear mass density (kg)
Fc(t)
Cabin applied force (N)
𝜇
Friction coeﬃcient (0.11 N.m.s)
Fcw(t)
Counterweight force (N)
Jdr
Drum inertia (300 N.m.s2 rad−1)
Tdr(t)
Drum applied force (N)
Ra
Motor armature resistance (0.61 Ω)
f𝜇(t)
Friction torque (N.m)
FL(t)
Passenger load force (N.m)
vcab(t)
Cabin linear velocity (m s−1)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.3 Transportation Systems and Processes
37
Usually, an elevator car moves between ﬂoors by accelerating from a rest position during a
ﬁrst time interval, then moves at a constant speed during a second time interval until it decel-
erates to rest during a third time interval. During this vertical motion, the steel hoisting cables
are assumed to be massless, elastic, and viscous (Calvin’s design model), such that they can be
approximated as a highly stiﬀspring combined with damping. In this study, this is all assumed
to be negligible compared to the cabin and the counterweight. Furthermore, it is assumed that
during each cabin journey the passenger load is constant while the cable extension and all vis-
cous friction and contact rail friction are negligible. In addition, the passenger cabin and the
counterweight are assumed to be a concentrated mass. The gear and the drum have damping
due to attached bearings. Any obstacle along the vertical path that could cause cabin vibration
is not considered.
It is necessary to model the elevator dynamics in order to design a reﬁned elevator
position-controlled system and to ensure the shortest travel time and the best passenger
comfort, despite any disturbance such as passenger load variation and smooth motion in the
presence of high acceleration and deceleration rates. As such, the elevator upward motion
dynamics model, relating the input supply voltage to motor shaft speed, can be derived by
applying Newton’s laws to the elevator’s mechanical system around the center of gravity of the
drum such that:
Jgear
d𝜔gear(t)
dt
+ Jm
d𝜔m(t)
dt
+ bm𝜔m(t) + bgear𝜔gear(t) + TL→dr(t) = Tm→dr(t)
Recalling that:
𝜔dr(t) = 𝜔gear(t) = 𝜔m(t)
𝜂gear
Tm→dr(t) = Tm(t)
𝜂gear
and considering an elastic cable with a gradient of tension over the cable length, if the car is
moving upward, the drum-load dynamic equation would yield:
Jdr
d𝜔dr(t)
dt
+ bdr𝜔dr(t) + (Fc(t) + Fcw(t))Rdr = TL→dr(t)
Applying Newton’s laws to the cabin-passenger load and counterweight subsystems gives:
Mcw
dvcw(t)
dt
= Mcwg −Fcw(t)
(M + Mc)dvc(t)
dt
= Fc(t) −(M + Mc)g
It is assumed that:
vcw(t) = vc(t) = Rdr𝜔dr(t)
Substituting these equations into the drum-load equation yields:
Jdr
d𝜔dr(t)
dt
+ bdr𝜔dr(t) + d𝜔dr(t)
dt
(Mcw + M + Mc)Rdr
2 + (M + Mc −Mcw)gRdr = TL→dr(t)
bdr, bgear are damping factors due to the bearings, but are negligible. Thus, assuming that
bgear = bdr = 0, the elevator upward motion dynamics model yields:
(𝜂gearJdr + 𝜂gearJgear + Jm + 𝜂gear(Mcw + M + Mc)Rdr
2)d𝜔m(t)
dt
+ bm𝜔m(t) + (M + Mc −Mcw)gRdr = Tm(t)
𝜂gear
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

38
2 Physics-Based Systems and Processes: Dynamics Modeling
at the level of the motor shaft,
Tm(t) = Ktia(t)
Hence,
ia(t) =
𝜂gear
Kt
(𝜂gearJdr + 𝜂gearJgear + Jm + 𝜂gear(Mcw + M + Mc)Rdr
2)d𝜔m(t)
dt
+ bm𝜔m(t) + (M + Mc −Mcw)gRdr
while from the motor’s electrical component, applying Kirchoﬀ’s law yields:
Va(t) = Raia(t) + Ldia(t)
dt
+ K𝜔m(t)
Thus, during upward motion, the DC applied voltage to velocity relationship is given by:
Va(t) =
Ra𝜂gear
Kt
[
(𝜂gearJdr + 𝜂gearJgear + Jm + 𝜂gear(Mcw + M + Mc)Rdr
2)d𝜔m(t)
dt
+ bm𝜔m(t) + (M + Mc −Mcw)gRdr
]
+
La𝜂gear
Kt
⎡
⎢
⎢
⎢⎣
(𝜂gearJdr + 𝜂gearJgear + Jm + 𝜂gear(Mcw + M + Mc)Rdr
2)d2𝜔m(t)
dt2
+ bm
d𝜔m(t)
dt
⎤
⎥
⎥
⎥⎦
+ K𝜔m(t)
During the elevator motion in the downward direction, a dynamic model would yield:
(𝜂gearJdr + 𝜂gearJgear + Jm + 𝜂gear(Mcw + M + Mc)Rdr
2)d𝜔m(t)
dt
+ bm𝜔m(t)
+ (Mcw −M −Mc)gRdr = Tm(t)
𝜂gear
It should be noted that the sign of the cabin-passenger load torque changes during the
elevator upward motion. This model would not be valid in the case where the elevator moves
at low velocities and for longer distances due to longitudinal oscillations. The elevator braking
torque mechanism is not modeled as it should be considered to be matched against the drum
inertia. The design of an elevator system that has equal cabin mass and counterweight mass
allows the passenger load alone to be used to size the drive and motion proﬁle. Furthermore,
a pulse width modulation (PWM) converter used to design the variable speed drive enables
the production of an input voltage toward the armature ﬁeld circuit of the DC motor. The
relationship of the hoisting cable conﬁguration with longitudinal vibration is not captured in
order to ease the model complexity. Also, depending on the cabin position along the hoistways,
the cable weight varies and modiﬁes the overall load in the dynamic model.
2.3.3
Hybrid Vehicle Powertrain with Parallel Conﬁguration
The policies for reducing air pollution due to toxic emissions from internal combustion engines
have led to the development of electric (EV) and hybrid electric vehicles (HEVs). HEVs use
fossil-fuel and electrically-driven motor powertrains either in series, parallel, or even combined
to deliver the energy required for vehicle motion. Electrochemical or electrostatic energy stor-
age systems supply this energy to electric motors. The degree of hybridization is deﬁned as the
ratio between electric motor power and total engine power, which varies between 15 and 60%.
Hence, in order to optimize energy consumption, it is suitable to develop a dynamic model of
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.3 Transportation Systems and Processes
39
Power transmission train
Differential
drive (gear)
Electric motor/generator
Front wheel
Rear wheel
Combustion engine
Battery
Fuel
Air
Coupler
pulley
Gearbox
Alternator
belt
Throttle
valve
Electric
tracting
mode
Tmot(t), Jmot
Teng(t), Jeng
Recharging mode
Nm
Nc
Ne
Ng
Brake
Tgen(t), Jgen
Hybrid
mode
Figure 2.4 Parallel conﬁguration of a hybrid electric vehicle.
the hybrid vehicle powertrain and the braking system in order to adjust the control strategy
for eﬃcient power to be delivered by the motor and brake activation of each wheel. In addition,
compared to engines, electric motors can produce high torque at low rotational speed and have
a wider operating range. This makes it possible for the powertrain to have an eﬃcient load trans-
fer mechanism for delivering power. Typical powertrain conﬁgurations are: front-wheel (FWD),
rear-wheel (RWD), and four-wheel (4WD) drives. Consider a 2D chassis schematic for an FWD
hybrid vehicle with a parallel conﬁguration illustrating the coupling of its inside chassis com-
ponents (powertrain, engine, permanent magnet DC motor, accumulators etc.…), as shown in
Figure 2.4. Here, the components acting on the dynamics of the electric powertrain are:
1) A gearbox, used to adapt the motor torque to the shaft velocity by the load transferring
process. The load transfer is due to the alignment of the embedded gears: the sun gear, the
planetary gears carrier and the ring gear. Compared to other devices such as the chain drive
or belt drive, the planetary gearbox oﬀers the best torque-to-weight ratio.
2) A diﬀerential, used to obtain a faster angular speed of the outer wheel (with a longer tra-
jectory) over the inner wheel during the HEV cornering trajectory. It could be achieved
mechanically using a gear for diﬀerential torque distribution or using electrical power dif-
ferentials. The latter allows power to be applied independently to the diﬀerent wheels.
3) Super capacitors, main accumulators used for electrical energy storage and are usually com-
bined with regenerative braking. Super capacitors oﬀer higher power than a battery due to
lower heating energy dissipation from their inner resistance.
4) An alternator, used to transform the kinetic energy into electric energy by phase shifting the
HEV motor current. This induced current is used to charge the accumulators, which can be
batteries, capacitors or both.
5) Regenerative braking, which stores energy related to HEV braking. When the car is braking,
the internal wheel is connected to the drive shaft with a clutch and decelerates due to braking
momentum. During regenerative braking, the torque reverses direction and the gearbox has
to be able to transfer the reversed load.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

40
2 Physics-Based Systems and Processes: Dynamics Modeling
Table 2.5 HEV system parameters and model variables.
Parameters
Description and values
Variables
Description and values
NR
Radius of the ring gear (m)
𝜔mot(t)
Motor angular velocity (rad s−1)
NS
Radius of the sun gear (m)
𝜔gen(t)
Generator angular velocity (rad s−1)
Jmot
Inertia of the motor (N.m.s2 rad−1)
𝜔eng(t)
Engine angular velocity (rad s−1)
Jeng
Inertia of the engine (N.m.s2 rad−1)
Tb_f
Braking torque (N.m)
Jgen
Inertia of the generator (N.m.s2 rad−1)
Tmot(t)
Motor torque (N.m)
𝜂gear
Final gear ratio (%)
Tgen(t)
Generator torque (N.m)
rw
Wheel radius (m)
Teng(t)
Engine torques (N.m)
Kb_f
Pressure torque conservation constant
gain (N.m. Pa−1)
TDrive(t)
Drive shaft torque (N.m)
pb_f
Pressure torque (Pa)
TBrake(t)
Friction or service brake torque (N.m)
𝜂trans
Transmission axle ratio (%)
F
Interaction force between diﬀerent
parts of the powertrain (N)
6) HEV motor conﬁguration, which deﬁnes the driving source and the electrical regeneration
modes. HEV operating modes alternate operations between: (i) the electric mode, where
its electrical motor (Tmot(t), Jmot) is the active driving force; (ii) the hybrid mode, where the
combustion engine (Teng(t), Jeng) is combined with the electric motor as the driving force; and
(iii) the recharging mode, when the combustion engine is the sole active traction force while
recharging the accumulator. The HEV electric generating mode (iv) uses the combination
of engine and alternator (Tgen(t), Jgen) and is performed during either traction or braking
motion. The latter is called regenerative braking. The electrical regeneration is commonly
implemented using alternators so that when the HEV has reached the desired speed, the
attached ﬂywheel is disconnected from the drive shaft. Any reconnection of the ﬂywheel to
the drive shaft causes the energy stored in the wheel to be reused as a driving force into the
HEV.
Hence, the modeling of the powertrain could allow development of a power-eﬃcient HEV
transport system. This would require the individual dynamics modeling of each component as
presented next. Table 2.5 summarizes the steady-state HEV variables and parameters. A vari-
able gearbox is used to adapt the motor torque characteristics to the wheel speed by a load
transfer mechanism. Regarding the powertrain conﬁguration, it is assumed that the load within
the gearbox depends on the type of gearbox, the gear ratio, and the eﬃciency of the gearbox,
and the energy losses within gearing and bearing are not considered. Only one electrical motor
and combustion engine per HEV is considered, and a mechanical diﬀerential also has to be
used. This mechanical diﬀerential does not add signiﬁcant weight and losses to the HEV. The
capacitance of the accumulator is high enough to ensure that the regenerated energy from the
braking operation does not exceed the limiting voltage. Whenever the accumulators release
energy, loaded energy is lost due to inner resistance. This energy is turned into heat. This is a
problem since an accumulator is easily damaged if the temperature rises above 60∘C.
2.3.3.1
Motor Driving and Regenerating Model
During each of the four operating modes of an HEV, the powertrain generates torque for driving
motion or power regeneration purposes. This generated torque can be derived according to the
operating conﬁguration of the electric motor, the combustion engine, and even their coupling.
Hence, in the case of (1) electric mode, the HEV traction torque is only provided by the electric
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.3 Transportation Systems and Processes
41
motor while the engine is switched oﬀ(only the sun gear) such that the dynamics equation
yields:
Jmot
d𝜔mot(t)
dt
= Tmot(t) −TD drive(t) + TD brake(t)
𝜂gear
−F × Ns
with F being the interaction force between diﬀerent parts of the transmission train, while F × N
is the reaction torque on the sun gear. Here, torques from the shaft and the brake are considered
to be disturbances. In the case of (2) hybrid mode, the electric motor is combined with the
engine (only the ring gear) during traction to provide an additional torque such that:
Jmot
d𝜔mot(t)
dt
= Tmot(t) −TD drive(t) + TD brake(t)
𝜂gear
+ F × Ns
In the case of (3) recharging mode, the engine provides the torque for both vehicle traction
and accumulator recharge (ring and sun gears), and the dynamics equation is characterized
such that:
Jeng
d𝜔eng(t)
dt
= Teng(t) −F × (NR + Ns)
In the case of (4) the regenerative braking mode, the electric motor is the drive force (only the
ring gear) acting as a generator for accumulator recharge by converting the HEV kinetic energy
into electrical energy such that:
Jgen
d𝜔gen(t)
dt
= Tgen(t) + F × NR
where Jeng, Jeng, Jmot are the inertia of the engine, generator and motor, NS, NR are the radius
of the sun and ring gears, Teng(t), Teng(t), Tmot(t) are the engine, generator, and motor torques,
𝜔eng(t), 𝜔eng(t), 𝜔mot(t) are the engine, generator, and motor angular velocities, TDrive(t) is the
drive shaft torque, TBrake(t) is the generated brake torque, rw is the wheel radius, and 𝜂gear is the
ﬁnal gear ratio. The HEV operating constraints are given by:
NS𝜔gen(t) + NR𝜔mot(t) = (NS + NR)𝜔eng(t)
and
𝜔mot(t) =
𝜂gear
rw
V(t)
The torque converter and ﬁnal diﬀerential are used to deliver a torque to the front wheel,
such that 𝜂trans is the axle transmission system ratio. It could be assumed that the engine speed
is equal to the wheel speed scaled by the current gear (gearbox position).
2.3.3.2
Vehicle Gear Box Model
The gear box relates the throttle setting (in %) with the wheel angular velocity (rad s−1). This
adjustment could be done either manually or automatically. Its gear ratio, 𝜂gear, is not constant
but rather can vary according to:
𝜂gear = max ⋅𝜔motor
max ⋅𝜔wheels
2.3.3.3
Brake System Model
The pressure applied to the brake disk is converted into a braking torque with a pressure torque
conservation constant gain, Kb_f depending highly on the speed, the temperature, and so on.
Thus, each hydraulic braking system could be modeled as:
Tb f = pb f Kb f min
⎛
⎜
⎜⎝
1,
𝜔f
max𝜔f
𝜔
⎞
⎟
⎟⎠
= 1.5N ⋅m
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

42
2 Physics-Based Systems and Processes: Dynamics Modeling
Motion performance and energy eﬃciency of the HEV depend on the resulting control and
the design parameters of accumulators, motors, gears, and diﬀerentials with an overall consid-
eration of vehicle dynamics as well as the load due to road proﬁle. Hence any change in these
parameters could require reassessment and readjustment of the HEV motor torque and veloc-
ity. This is partially done with automatic adjustment of the gear ratio based on road proﬁle
changes when cruise control is activated on the HEV.
2.3.4
Driverless Vehicle Longitudinal Dynamics
During vehicle motion, the motor traction forces are distributed over the front and rear axles as
well as left and right axles by modifying the transmitted torques at wheel level with respect to
the variation of resistive forces due to acceleration or road surface. Such automatic motor torque
adaptation ensures smooth vertical, lateral, and longitudinal vehicle dynamics, especially in the
case of a driverless vehicle with an automatic gearbox. Hence, in order to adapt the vehicle
power to changes in the force distribution (longitudinal, vertical, lateral), it is appropriate to
model the coupling of the car wheel dynamics with respect to motor traction forces and resistive
forces according to the road and the car motion proﬁle (acceleration, velocity).
The vehicle dynamics can be split into longitudinal, vertical, and lateral translations and roll,
pitch and yaw rotations. For simplicity, the analysis of vehicle motion is restricted to longi-
tudinal translation. Components involved in the vehicle’s longitudinal dynamics include the
suspension, tire traction, engine, brakes, and steering. Considering a vehicle that moves up a
hill with an angle 𝛼, as depicted in Figure 2.5. During the longitudinal acceleration or the vehi-
cle cornering, there is a load transfer due to the weight shifting, causing unequal distribution
of the tire grip (front to rear load shifting in the case of acceleration, or left to right load shift-
ing in the case of right cornering). Therefore, the modeling of the torque applied to each wheel
should be considered despite any road-wheel slipping conditions. Forces and torques involved
in the planar vehicle dynamics are the related tire-road interactions, aerodynamics interaction,
vehicle braking, and engine traction.
Besides the no-slip contact between the tires and the road, the road gradient is considered
to be identical for all four tires. It is assumed that the tire friction is equal on each wheel and
the torque is equally distributed between the wheels. This friction can be decomposed into
Coulomb friction and viscous friction components. It is assumed all friction coeﬃcients, the
tire’s moment of inertia and the road surface, 𝜇i, are dependent on the tire material. Being dry,
wet, or icy, the road surface is assumed to be known in advance. The vehicle suspension and the
chassis construction are not considered; rather, the model is restricted to four tires attached
to a vehicle structure with a known center of gravity, to be shown in Figure 2.6. Any forces
associated with vehicle dampers and springs are assumed constant and negligible. Furthermore,
the steering system and a road noise model are not considered and the rolling resistance is
assumed to be proportional to the mass of the vehicle. All process parameters and variables
involved have been listed in Table 2.6.
Mvg = FG
FT(t)
FD(t)
FRr(t)
FRf(t)
α
ωf, Rf, Jf
ωr, Rr, Jr
μf
μr
Figure 2.5 Vehicle forces schematic.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.3 Transportation Systems and Processes
43
L
Wheel
Human
Chassis
CoG
HCoG
ѲH
hW
Human
MHg
τ
fx
fy
vx
Fp
Chassis
Ѳw
Fx Fy
Fμ
Figure 2.6 Schematic of a Segway transportation system.
Table 2.6 Some key variables and parameters for the car longitudinal dynamics model.
Parameters
Description and values
Variables
Description and values
Mv
Vehicle mass (kg)
FG(t)
Gravitational forces (N)
Kf , r
Front/rear tire viscous friction
coeﬃcient (dimensionless)
FT(t)
Traction forces (N)
𝜇i
Friction coeﬃcient between tires
and road (dimensionless)
FD(V)
Drag disturbance forces (N)
Cr
Rolling resistance coeﬃcient
(dimensionless)
FR(V)
Frictional forces (N)
L
Wheel base (m)
Fa(V)
Aerodynamic resistance force (N)
Rr, Rf
Front/rear wheel radius (m)
Fr(t)
Rolling resistance force (N)
Jf , Jr
Front/rear tire inertia
(N.m.s2 rad−1)
Tengine_r(t)
Torque provided by the engine at each
wheel (N.m)
𝜇f , 𝜇r
Front/rear tire friction coeﬃcient
(dimensionless)
Tbrake_r(t)
Torque applied to each tire due to the
brakes (N.m)
a1
Distance between the vehicle and
center mass (m)
Ttractive_r(t)
Reaction torque on each tire due to the
tire’s traction force (N.m)
a2
Distance between the front and
rear axles (m)
Tviscous_friction_r(t)
Rear viscous friction torque (N.m)
A
Frontal area of the vehicle (m2)
FZ(t)
Normal force (N)
𝜌
Air density (kg m−1)
FX𝜇(t)
Friction force due to contact between
tire and road surface (N)
Cd
Aerodynamic drag coeﬃcient
Tshaft(t)
Motor shaft torque (N.m)
𝜆
Wheel slip ratio
𝜔r, f (t)
Rear/front tire angular velocity (rad s−1)
Vwheel(t)
Tire linear velocity (m s−1)
V
Vehicle linear velocity (m s−1)
𝛼(t)
Hill angle with horizontal (rad)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

44
2 Physics-Based Systems and Processes: Dynamics Modeling
During the vehicle’s forward acceleration, its center of gravity generates a backward force due
to its mass inertia. Hence, applying Newton’s second law on all forces acting on the vehicle’s
longitudinal dynamics, where resistive and traction forces interact, yields:
Mv
dv(t)
dt
= FT(t) −FD(t) −FR(t) −FG(t)
Resistive forces are: (i) the drag force; (ii) tire-road friction forces; and (iii) gravitational forces.
Based on ﬂuid dynamics, the drag force, FD(V) increases with the square of vehicle velocity and
depends on the aerodynamic resistance force Fa(V) related to the wind speed and the rolling
resistance forces Fr such as:
FD(V) = Fa(V) + FR(V) = 1
2𝜌ACdV 2 + MvgCrV
Usually, from a one-wheel model, the wheel slip ratio is given by:
𝜆=
Vwheel −V
max(Vwheel, V)
while the wheel linear velocity is given by:
Vwheel ≈𝜔r(t)Rr
Tire-road friction force FR(V) aﬀects the vehicle’s throttle and brake settings system as well
as the vehicle’s front and rear wheel velocities. Depending on the road gradient 𝛼(t), the road
conditions, 𝜇, and considering FZ(t) as the normal force, the friction force due to the contact
between the tire and the road surface is given by:
Fx𝜇(t) = 2𝜇rFzr(t) + 2𝜇f Fzf (t)
This is valid only when there is a load distribution between front and rear wheels. Hence,
based on the load distribution at each point of contact and the load characteristics (vehicle
geometry, road grade angle, and acceleration, deceleration, or braking mode), the friction forces
yield:
Fzf (t) = Fstatic f (t) + Fdynamicsf (t) = mg
(𝛼2
L cos 𝛼(t) + H
L sin 𝛼(t)
)
−mdV(t)
dt
H
L
and
Fzr(t) = Fstatic r(t) + Fdynamicsr(t) = mg
(𝛼2
L cos 𝛼(t) + H
L sin 𝛼(t)
)
+ mdV(t)
dt
H
L
This is valid when 𝛼(t) = 𝛼= constant. During acceleration motion, the load is carried
by rear wheels, while during braking motion it is carried by the front wheel. Each wheel has a
rotational speed 𝜔r, f (t) with a radius Rr, Rf and a polar moment of inertia Jf , Jr. The gravitational
force FG(t) is given by:
FG(t) = Mvg sin 𝛼(t)
During braking motion, the traction force FT(t) produced by the tire is given by:
FT(𝜆) = 𝜇(𝜆)Mvg
Similarly, during driving motion, the traction force is derived from the wheel torque trans-
mitted by the powertrain shaft torque, such that:
FT(t) = Twheel(t)
R
=
Tshaft(t)𝜂gear
R
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.3 Transportation Systems and Processes
45
Hence, during the vehicle’s motion, each wheel’s angular velocity can be derived by summing
the applied torques, such that for the rear wheel it would yield:
J𝜔r = Tengine r(t) + Ttractive r(t) −Tbrake r(t) −Tviscous frictionr(t)
The traction force is given by:
Ttractive r(t) = RrFx𝜇r
Considering Kf , r being the viscous friction coeﬃcient of each wheel, the viscous friction coef-
ﬁcient is given by:
Tviscous frictionr(t) = Kfr𝜔r(t)
Vehicle cornering is characterized by lateral tire grip. This is captured by the torque applied
to each tire as well as the steering angle. Furthermore, during the vehicle’s motion, any bump
on the road causes vertical dynamics depending on the wheel damping, the vehicle mass inertia
and the suspension characteristics, which have been discarded in this study. In addition, the grip
characterizing the adhesion of the wheel on the road deﬁnes the vehicle dynamics. Therefore,
an accurate model of a pure tire would be nonlinear as it depends on the velocity and the slip
ratio. The high variation of the slip ratio in the case of icy or wet conditions is expected to
invalidate the entire dynamic vehicle traction model presented previously. This is also the case
with a deteriorating suspension, a ﬂat tire, an underperforming engine, misaligned steering,
and a braking system fault.
2.3.5
Automated Segway Transportation Systems
Automated mobility devices such as the Segway have been used to transport people or objects
using electrically-based guidance tools. Those devices have heavy bases to ensure low centers
of gravity and to ease dynamic stability by moving between stable states. Speciﬁc to the Seg-
way, a motorized platform or chassis is used to stabilize a passenger standing upright. Hence,
by balancing forward or backward, the person dictates, respectively, the acceleration or decel-
eration rate, as illustrated in Figure 2.6. The Segway transportation system with a rider can be
decomposed into two components: (i) chassis-human body; and (ii) wheels. Those two compo-
nents rotate around the same chassis axis. Table 2.7 summarizes the steady-state parameters
and variables of the Segway transportation system.
When the rider moves forward by a small angle against the vertical, this transportation device
propels itself forward along the ground causing the rider to move backward to maintain his
or her upright position. The rider’s inclination over the chassis is used to dictate left or right
motion. Hence, the synchronization of the rider balancing with the Segway motion is required,
especially during the velocity change. The following assumptions are considered: (i) there is no
slip between the wheel and the ﬂoor; (ii) the viscous friction of the chassis-wheel bearings is
negligible; (iii) the motion in the median sagittal plane and median coronal plane is decoupled;
and (iv) only the planar motion dynamics are investigated.
During the motion with a rider, the acting forces and torque in the transportation system are:
motor torques, turning force, forces due to road inclination, rider active pushing force, friction
forces in the wheel, the drag resistive force, the damping in the damper, and the friction force
between each wheel and the motor. Using the same approach as the inverted pendulum, it is
possible to derive the dynamics model of a uniﬁed passenger-Segway system as well as to ensure
a stable and steady motion by avoiding a passenger falling over.
Considering that the left and right wheels have synchronized motion (meaning there is no
slip) and applying the principle of moments around the chassis axis both result in the dynamic
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

46
2 Physics-Based Systems and Processes: Dynamics Modeling
Table 2.7 Some Segway system variables and parameters.
Parameters
Description and values
Variables
Description and values
Hwb
Width of wheel base (0.6 m)
𝜃H(t)
Rider vertical angular position (m)
HCoG
Distance from rider center of gravity to
wheel center of gravity (m)
Trw(t)
Right wheel torque (N.m)
MH
Mass of human (kg)
xrw(t), xlw(t)
Wheel linear position (left xlW and
right xrW) (m)
MC
Mass of chassis platform (4.9 kg)
T𝜇r(t)
Right wheels friction torque along
chassis axis (N.m)
h
Thickness of wheel (0.08 m)
Tem(t)
Wheel motor shaft torque (N.m)
JH
Inertia of rider over chassis axis (N.m.s2
rad−1)
Fp(t)
Slip resulting force (N)
Jrw, Jlw
Left/right wheel inertia (N.m.s2 rad−1)
𝜃rw(t)
Right wheels angular position (m)
MW
Mass of wheels (2.3 kg)
F𝜇(t)
Slip resulting force (N)
L
Chassis platform length (0.5 m)
Fx(t)
Normal force (N)
RW
Radius of wheels (0.4 m)
HH
Height of rider (m)
modeling of the chassis and human body component such that:
(MHHCoG
2 + JH)d2𝜃H(t)
dt2
= MHHCoG sin 𝜃H(t) −MHHCoG cos 𝜃H(t)d2x(t)
dt2
+ (Twr(t) + Twl(t)) −(T𝜇r(t) + T𝜇l(t))
The linear to rotational motion relationship is given by:
x(t) = Rw𝜃wr(t) = Rw𝜃wl(t) = Rw𝜃w(t)
It is assumed that the mass of both wheels is such that:
Mlw = Mrw = Mw
and their inertia is given by:
Jlw = Jrw = 1
2MwRw
2
Thus, considering a small angle 𝜃H(t), the principle of moments equation yields:
(MHHCoG
2 + JH)d2𝜃H(t)
dt2
= MHgHCoG𝜃H(t) −MHHCoGRw
d2𝜃w(t)
dt2
+ (Twr(t) + Twl(t)) −(T𝜇r(t) + T𝜇l(t))
Similarly, applying the principle of moments around the wheel axis with rear wheel angular
velocity 𝜔r(t) would result in:
1
2MwrRwr
2 d2𝜃wr(t)
dt2
= Twr(t) −fxr(t)Rw −T𝜇r(t)
Independent of the road characteristics, the type of wheel, and the width of the wheel base,
it is assumed that there is no friction at the base, therefore:
fxl(t) = fxr(t) = 0
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.4 Biomedical Systems and Processes
47
Hence, similarly applying the principle of moments around the axis of the chassis, the Segway
dynamics modeling is given by:
((MW + MH)RW
2 + JW)d2𝜃W(t)
dt2
= MHRWHCoG sin 𝜃H(t)d𝜃H(t)2
dt
−MHHCoGRW
d2𝜃H(t)
dt2
cos 𝜃H(t)
−(Twr(t) + Twl(t)) + (T𝜇r(t) + T𝜇l(t))
Assume that the combined torque is given by:
Tem(t) = Twr(t) + Twl(t)
However, considering the friction along the axis of the chassis, the viscous torque yields:
T𝜇r(t) + T𝜇l(t) = T𝜇(t) = K𝜇
(d𝜃W(t)
dt
−d𝜃H(t)
dt
)
The rider’s angular position with respect to the vertical is highly nonlinear and depends heav-
ily on the value of his or her weight and height. As such, the shorter the rider, the lower the
center of gravity. This relationship results in a steadier and more stable motion while changing
the vehicle dynamics. In addition, subsequent variation of the road conditions (wet or icy) could
cause one to revisit the traction, the slip force model, and the stability requirements.
2.4
Biomedical Systems and Processes
2.4.1
Infant Incubator
Despite ambient temperature and humidity variations, infant body temperature should be kept
constant through the body’s self-thermoregulation process, called homeostasis. This consists
of regulating the blood ﬂow into extremities (hands, head, feet, etc.) using information from
the sensitive skin neuronal network and thermoreceptors connected to the hypothalamus. This
energy-based physiological activity is balanced between nutrients from stored energy over feces
and urine losses.
Deﬁciencies in this self-thermoregulation process means premature babies or newborn
infants are often placed in an incubator cabinet (usually 0.5 × 0.5 × 1 m3). As illustrated
in Figure 2.7, this cabinet provides the controlled environmental conditions necessary to
feed the infant and also to prevent infection, hypoxia, hyperthermia (inability to maintain
neonatal body temperature below 37.2∘C in the presence of any microorganism infection)
and hypothermia (insuﬃcient heat metabolic production to maintain temperature above
36.5∘C). Therefore, it is suitable for maintaining newborn esophageal, rectal, and abdominal
temperatures around 36.5–37.2∘C independent of weight, age and body water loss. This is done
through the regulation of the temperature, relative humidity, and the oxygen concentration
within the incubator cabinet.
In order to maintain temperatures around 36.5–37.2∘C, as well as a humidity range around
15%, in the incubator system, the following equipment is assembled: (i) fans for air ventilation;
(ii) a valve to control the inﬂow of water vapor; (iii) a radiant warmer for heat production; and
(iv) insulated incubator walls to reduce energy losses. The heat is generated from the infant’s
body metabolism and dissipated via the skin and lungs into the surrounding surfaces within the
incubator cabinet. By air motion, the heat dissipates toward the incubator walls and mattress.
Also, the evaporation and latent heat from the infant’s body are absorbed by the lungs and the
skin before being released as moisture.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

48
2 Physics-Based Systems and Processes: Dynamics Modeling
u(t)
Electric
heater
Fan (fresh air flow in)
θ(t)
Water vapor
control valve
Thermostat
T[°C], T(t)
Humidity
sensor
[% RH], h(t)
Air exhaust
Figure 2.7 Neonatal incubator and its typical components.
For simplicity, it is assumed that: (i) the heat transfer between the infant’s body and the incu-
bator mattress is negligible; (ii) the thermal capacity of the incubator is equal to the infant’s
body; (iii) the surrounding air and mattress temperatures are equal to the infant’s skin tem-
perature; (iv) the air ﬂow within the incubator is considered to be uniform; (v) despite organ
activity diﬀerences, metabolic heat production over the infant’s body is uniform; (vi) the air
inﬂow rate is constant while the air temperature is time-variable; and (vii) all incubator com-
ponents (walls and mattress) are homogenous throughout their material. Table 2.8 summarizes
some key steady-state parameters and variables of the incubator system.
The infant’s heat balance can be derived from the heat generation and dissipation within its
body, the heat loss being through evaporation from the skin, the respiratory activity, and the
lung-based heat loss through conduction and convection. The mass transfer and heat trans-
fer can be derived in diﬀerential equations using the laws of conservation of heat exchange,
by conduction, convection, and radiation, between the infant and the incubator’s surrounding
environment. Accordingly, using the principle that the balance of heat stored within the incu-
bator is equal to the energy generated by the metabolic heat minus the energy lost through the
infant’s skin by radiation, convection and evaporation, a mathematical heat transfer model of
the incubator wall and air can be obtained. Hence, the incubator thermoregulation model is
given by:
Ci
dTi(t)
dt
= Qmi(t) −Qeb(t) −Qcb(t) −Qrb(t)
The heat transfer per unit of time from the radiation from the infant’s skin toward the incuba-
tor walls Qrb(t) is dependent on the infant’s temperature, geometrical form, and spatial arrange-
ment within the incubator, as well as its skin heat emissive properties. Hence, by applying the
principle of conservation of energy into the three geometrical surface arrangements of the
infant’s body (esophageal “es,” rectal “re”, and abdominal “ab”), the total heat loss through radi-
ation, Qrb(t) would yield:
Qrb(t) = As[hes(Ts se(t) −Tw se(t)) + hre(Ts re(t) −Tw re(t)) + hab(Ts ab(t) −Tw ab(t))]
≈hesAs(Ts(t) −Twa(t))
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.4 Biomedical Systems and Processes
49
Table 2.8 Some parameters and variables of infant incubator system.
Parameters
Description and values
Variables
Description and values
Cw
Heat capacity of the incubator wall
(J.kg−1.∘C−1)
Txa(t)
Temperature electrical heater (∘C)
Aw
Incubator wall surface (m2)
Tva(t)
Outside surface incubator temperature (∘C)
AS
Infant body skin surface (m2)
Twz(t)
Internal surface incubator temperature (∘C)
Cg
Heat capacity of air (J.kg−1.∘C−1)
Twa(t)
Incubator wall mean temperature (∘C)
xhum(t)
Humidity outside incubator (%)
𝜆w
Thermal conductivity of the
incubator wall
(
KJ
kg
)
𝜙
Air ventilation volumetric rate (m3 s−1)
𝜌
Density of air (m3 s−1)
Ta(t)
Ambient temperature (∘C)
Kee
Evaporation coeﬃcient
(∘C.mm−1 . Hg)
Qrs(t)
Skin radiative heat transfer (W)
K2
Conduction coeﬃcient (Kg m−3)
Qcs(t)
Skin convective heat transfer (W)
hc
Respiratory rate (s−1)
hwa(t)
Heat transfer coeﬃcient (kg)
d
Incubator wall thickness (cm)
Qh(t)
Generated heat ﬂux from warmer (kg)
Cp
Speciﬁc heat of air (J.kg−1.∘C−1)
Qz(t)
Heat ﬂux during incubator ports opening
(kg)
md
Water vapor mass ﬂux from infant
body (kg s−1)
hwz(t)
Heat transfer coeﬃcient (kg)
mhum
Water vapor mass ﬂux from radiant
warmer (kg s−1)
xa(t)
Incubator chamber humidity (vapor per kg
of dry air, %)
mz
Water vapor mass ﬂux loss during
incubator ports opening (kg s−1)
Ti(t)
Temperature inside incubator (∘C)
V
Volume of incubator chamber (m3)
Ts(t)
Geometrical surface mean skin temperature
(∘C)
Ci
Incubator thermal capacity (J∘C−1)
Qmi(t)
Metabolic heat generated (W)
hw
Incubator wall convective heat
transfer coeﬃcient (W.m−2.∘C−1)
Qeb(t)
Rate of heat lost through respiratory heat
evaporation (W)
hij
Infant body (esophageal, rectal and
abdominal) compartments heat
transfer coeﬃcient (W.m−2.∘C−1)
Qcb(t)
Rate of heat loss through conduction (W)
Qrb(t)
Heat loss through radiation (W)
with
hr = hse + hre + hab
Ts(t), Twa(t) are, respectively, the average skin temperature (among esophageal, rectal, and
abdominal temperatures) and the average wall surface temperature. Here, As is the total surface
area of the newborn. Similarly, the respiratory heat evaporation from the infant’s skin, Qeb(t),
into the air under water vapor content is found to be proportional to the incubator rate of
respiratory ventilation as well as to the metabolic heat production, Qmi(t), such that:
Qeb(t) = KeehcAs(ps(t) −pa) + kemQmi(t)(pres −pa)
ps denotes the partial pressure of saturated water vapor at mean skin temperature and pa the
partial pressure of the water vapor in the air. Furthermore, the convective heat transfer from
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

50
2 Physics-Based Systems and Processes: Dynamics Modeling
the infant’s body toward the incubator air is given by:
Qcb(t) = hcAs(Ts(t) −Ta(t))
This heat convective transfer consists of either natural convection, when the movement of air
is caused by thermal density gradients, or forced convection due to a pressure gradient. Hence,
the heat balance of the incubator wall is given by:
Cw
dTw(t)
dt
= hwaAw(Ta(t) −Twa(t)) + hwzAwz(Tz(t) −Twz(t)) + Qrs∕cb(t)
Similarly, the heat balance of the air within the incubator chamber is given by:
𝜌CpV dTa(t)
dt
= hwaAw(Twa(t) −Ta(t)) + 𝜌Cp𝜙(Tz(t) −Ta(t)) + Qcs∕cb + Qz(t) + Qh(t)
and the mass balance of water vapor is as follows:
𝜌V dxa(t)
dt
= md(xz(t) −xd(t)) + me + mhum + mz
where
md = 𝜌𝜙
Twa(t) = hwadTa(t)∕dt + 2𝜆wTw(t)
hwad + 2𝜆w
Twa(t) = hwadTa(t) + 2𝜆wTw(t)
hwad + 2𝜆w
Twz(t) = hwzdTz(t)∕dt + 2𝜆wTw(t)
hwzd + 2𝜆w
Twz(t) = hwzdTz(t) + 2𝜆wTw(t)
hwzd + 2𝜆w
It should be noticed that this model neglects a large number of heat losses from the radiant
warmer into the incubator’s surrounding environment. In addition, from their design, it has
been found that long hourly active radiant warmers cause infant dehydration or at least sig-
niﬁcant water losses. The mattress can be used to cool the infant’s body, hence modifying the
metabolic process. Such design requires the development of a new model of respiration heat
losses combining the radiant warmer and mattress cooling the infant’s body.
2.4.2
Blood Glucose-Insulin Metabolism
The glucose-insulin physiological metabolism regulates the blood glucose (BG) levels essen-
tially in order to keep it at a steady-state concentration of about 70−110 mg dl−1. The inability
of the organism to regulate its BG levels due to insuﬃcient insulin production in the pancreas
or decreased insulin activity leads to serious health damage or chronic diseases such as dia-
betes mellitus. It can cause either hyperglycemia (when the BG level is above 270 mg dl−1) due
to excessive carbohydrate consumption or a low insulin level in the blood, or hypoglycemia
(when the BG level is below 60 mg dl−1) after too much exercise, a large insulin dosage, a low
amount of carbohydrates in food, or if the person skips meals.
In the case of diabetes, the assisted regulation of BG requires modeling of the insulin-glucose
metabolism. This is challenging due to parameters highly dependent on patient physiology,
diet, daily physical conditions and so on. A parametric modeling approach consists of deriv-
ing the balance between the mechanisms of production and the elimination of glucose in the
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.4 Biomedical Systems and Processes
51
Table 2.9 Some key parameters and variables of glucose and insulin metabolism.
Parameters
Description and values
Variables
Description and values
VI
Volume of insulin per kg of patient
body weight
(
0.1421 L
kg
)
I(t)
Plasma insulin concentration (mU ml−1)
(U∕ml)
𝛾
Constant rate of insulin production
by the pancreas
(0.0041 mU.mg−1.min−1)
G(t)
Plasma glucose concentration (mU ml−1)
h
Threshold value of glucose level
above which pancreas cells secrete
insulin (83.7 mg ml−1)
X(t)
Insulin action from remote
compartment (250 mU ml−1)
hn
First-order decay rate for blood
insulin (0.22 mU l−1)
GI(t)
Deviation blood glucose from basal
value (mg ml−1) due to insulin action
p1
Glucose consumption rate within
liver tissues (0.028735 min−1)
GB
Plasma glucose basal value (200 mg dl−1)
p2
Tissue glucose uptake ability at the
threshold value of the glucose
concentration for decrease of the
insulin action (0.028344 min−1)
DI
Intravenous insulin input (250 mU l−1)
p3
Insulin-dependent increase in
glucose uptake ability in tissue
(5.03.10−5 min−2.μU−1)
D(t)
Glucose intake (diet) in
(
mU
l ∕min
)
VG
Volume of glucose per patient body
weight (0.22 l kg−1)
IB
Plasma insulin concentration basal value
(15 mU ml−1)
mpatient
Weight of a patient (102.2 kg)
Gx(t)
Plasma glucose with insulin injection
(mg ml−1)
V
Volume of blood in a patient (5.5 l)
u1b
Exogenous insulin infusion rate (1∕min)
UI(t)
Rate of insulin absorption (mU min−1)
blood using variables and parameters listed in Table 2.9. An example of such an approach is
the Bergman minimal model of carbohydrate metabolism. It consists of a three-compartment
mathematical model, respectively: (i) the plasma insulin compartment (t) (mU ml−1); (ii) the
remote insulin compartment X(t) (mU ml−1), delaying the action of insulin on glucose; and
(iii) the plasma glucose compartment G(t) (mg ml−1). Here, some physiological eﬀects from
stress or sickness as well as the eﬀects of some physical activities on the metabolism of the
glucose-insulin are neglected. As such any glucose addition from the liver or an intravenous
insulin injection U1(t) is not considered. Furthermore, it is assumed that the injection is done
from the remote insulin compartment into the circulatory system of the insulin-dependent dia-
betic patient.
From the plasmatic glucose compartment, the balance between the accumulation of the glu-
cose concentration in the blood plasma and the glucose consumption by the tissue or the kid-
neys can be obtained from:
dG(t)
dt
= plasma glucose production–plasma glucose consumption
which corresponds to
dG(t)
dt
= D(t) −p1G(t) −p2(G(t) −GB)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

52
2 Physics-Based Systems and Processes: Dynamics Modeling
with quantiﬁed carbohydrate input being D(t) given by
D(t) = Glucose absorption rate
mpatientV
G(0) = GB
From this equation, it should be noted that the pancreas stops producing insulin when the
glucose concentration G(t) is below glucose level GB. Hence, this equation is nonlinear and
insulin-glucose metabolism-dependent. Similarly, within the plasmatic insulin compartment,
the balance between the accumulation of insulin from its production by the pancreas over the
destruction of insulin by the insulinase enzyme can be described by:
dI(t)
dt
= insulin production–insulin degradation
Without an insulin pump, insulin degradation is deﬁned as being proportional to glucose
variation such that:
dI(t)
dt
= 𝛾(G(t) −h) −n(I(t) −IB)
I(0) = IB
With an insulin pump and in the case of exogenous injection of insulin, this yields:
dI(t)
dt
= U1(t)
V
−n(I(t) −IB)
with
U1(t) ≈
2t2GI
t(0.05DI + 1.2)
Hence, the insulin-glucose regulation dynamic model could be expressed as:
dGX(t)
dt
= D(t) −p1G(t) −p3(G(t) −h) −p2(h −GB)
with
GX(0) = GB
This model is derived from a physiological understanding of the metabolism. Another
approach would be to evaluate several model structures and orders, then estimate the resulting
error in the process model. Here, p1, p2, p3, GB, and IB are key model parameters to be estimated
based on patient data, as summarized in Table 2.10.
Here, a day’s diet scenario (24 hour period) illustrated by glucose level disturbance is con-
sidered, which is distributed over three daily meals with peak values of carbohydrates (55, 80,
and 65 mg dl−1) corresponding to plasma glucose concentrations of 250, 310, and 280 mg dl−1,
respectively, for breakfast at 7.00 a.m., lunch at 12.30 p.m., and dinner at 7.00 p.m. At these
meal times, it is assumed that: (i) there is an increase in glucose disturbance levels after the
Table 2.10 Typical patient information.
Patient
Gender
Age
Weight
(kg)
Height
(cm)
Data
length (h)
1
Male
42
98
178
24
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.5 Fluidic and Thermal Systems and Processes
53
Table 2.11 Patient data.
Patient 1
Time (hour)
3
6
7
8
9
12
13
14
16
19
20
23
Plasma glucose G(t) (mg dl−1)
200
200
250
235
210
310
280
230
200
280
262
200
Plasma insulin I(t) (mU l−1)
00
00
250
00
00
250
00
00
00
250
00
00
Plasma glucose with insulin
injection GX(t) (mg dl−1)
200
200
236
216
202
291
269
218
200
267
244
200
Carbohydrates (g)
55
80
65
Table 2.12 Model parameter estimates.
Model parameters
p1
p2
p3
GB
IB
n
𝜸
h
Estimated value
0.028735
0.028344
0.00005035
200
15
0.22
0.0041
83.7
Predictive
Control law
Constraints
(60 mg/dl≤y≤80 mg dl–1)
(0 ≤u≤100 mU min–1)
Internal
Glucose-Insulin
model of diabetic
subject
Glucose
concentration, G(t)
Control, u
Reference, r
Error, r-y*
Total  deviation from G(t)
Insulin
pump
Intravenous
insulin
Objective function
Plasma
insulin Plasma
Insulin 
glucose/glucagon
Stress Diet
Physical
condition
Figure 2.8 Glucose-insulin metabolism under a model prediction control paradigm.
consumption of each meal; and (ii) the BG returns to basal glucose level about 3 hours later.
Equivalently, there are three regular insulin injections of 250 mU ml−1 at meal times, as sum-
marized in Table 2.11.
The least-square parameter estimation method based on normalized data is presented in
Appendix A. Autocorrelation of residuals techniques such as the Akaike Information Criterion
(AIC) are used in the determination of the best model order. Results are listed in Table 2.12.
Patient physiological conditions such as stress, physical activity, and disease have a signiﬁ-
cant eﬀect on glucose variation, but are rather diﬃcult to measure and model as depicted in
Figure 2.8. Thus, the integration of those physical constraints in the model would lead to a
highly nonlinear and discontinuous or scenario-based stochastic model. Any such gray model
is patient-dependent.
2.5
Fluidic and Thermal Systems and Processes
2.5.1
Mixing Tank
Usually, in beverage and pharmaceutical processes, it is necessary to mix two ﬂuidic substances
in a tank. This requires a precise angle and duration of electrovalve opening to ensure liquid
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

54
2 Physics-Based Systems and Processes: Dynamics Modeling
EV1
EV2
EV3
MTR1
Temperature
sensor
Input
valve
Input
valve
Output
valve
Agitator
Mixing liquid
product tank
h(t) (m)
θ3(t) 
q3(t) 
T3(t) 
θ2(t) (rad)
q2(t) (m3 s–1)
T2(t) (°C)
T(t) (°C)
(m3 s–1)
(°C)
(rad)
A (m2)
(°C) T1(t)
(m3 s–1) q1(t)
(rad)  θ1(t)
Figure 2.9 Mixing tank system.
mixture at the desired level. As illustrated in Figure 2.9, the mixing of two liquids with a slight
temperature diﬀerence is achieved so that this process does not generate heat or a signiﬁcant
temperature variation. However, the two liquids have diﬀerent densities, so the density of the
mixture depends linearly on the volume fractions of both components. Such a process relates
each liquid temperature, its density, and each electrovalve opening angle to a speciﬁc level of
mixed liquid concentration and temperature. This can be achieved by using an MIMO dynam-
ics model using the process parameters and variables listed in Table 2.13. During the mixing
process, it is assumed that the ﬂuid is ideally mixed as a homogeneous liquid concentration
within a small ﬁxed time interval. Also, any temperature rises due to the heat generated from
the mixing process are considered negligible.
As such, it is required to investigate the behavior of the liquid concentration due to changes
in throughput and mixing ratio. As the ﬂuid temperatures are nearly equal, the mixing process
quantiﬁed in terms of the liquid level in the tank h(t) and the volumetric fraction of the mixture
x(t) can be obtained through either: (i) the total mass balance; (ii) the energy balance; or (iii) the
component balance. During the mixing of liquid by the motorized agitator, there is a biochem-
ical reaction that generates a heat constant, Ws. Hence, using the energy balance (enthalpy, H),
the mixing process model yields:
𝜕H(t)
𝜕t
=
𝜕Hgen(t)
𝜕t
+ 𝜕Hin(t)
𝜕t
−𝜕Hout(t)
𝜕t
which is equivalent to:
Cpm
𝜕m(t)Tm(t)
𝜕t
= WS + W1(t)Cp1T1(t) + W2(t)Cp2T2(t) −W3(t)Cp3T3(t)
Assume that
m(t) = 𝜌mAh(t)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.5 Fluidic and Thermal Systems and Processes
55
Table 2.13 Mixing tank process variables and parameters.
Parameters
Description and values
Variables
Description and values
Cpi
Heat capacity of ith liquid
(kJ kg−1∘C)
Ti(t)
Liquid temperature from ith electrovalve
(∘C)
𝜌i
Density of ith liquid (kg m−3)
Tm(t)
Mixed liquid tank temperature (∘C)
A
Conical base of the mixing tank (m2)
h(t)
Height of liquid in mixing tank (m)
J
Motor inertia (N.m.s2 rad−1)
qi(t)
Flow rate from ith electrovalve (m3 s−1)
Cd
Outﬂow coeﬃcient (%)
𝜔(t)
Rotational speed of motor agitator
(
rad
sec
)
Ki
Gain from ith electrovalve (∘C)
v3(t)
Liquid speed at EV3 (m s−1)
WS
Energy supplied to motor (kJ s−1)
𝜃i(t)
Angular position of ith electrovalve (∘C)
Ra
Motor armature resistance (Ω)
m(t)
Mass of liquid in mixing tank (kg)
La
Motor armature inductance (H)
Wi(t)
Mass ﬂow rate from ith electrovalve (kJ
s−1)
VT
Volume of tank (0.8836 m3)
x(t)
Volume fraction of the mixture (%)
Cpm
Mixed liquid heat capacity
(kJ kg−1.∘C)
V(t)
Volume of liquid in the tank (m3)
𝜌m
Stationary density of mixed liquid
(kg m−3)
and recall that
Wi(t)
𝜌i
= qi(t)
Here, the inﬂow temperatures are T1(t) = 81∘C and T2(t) = 80∘C, and the steady-state
inﬂow rates are q1(t) = 0.06 m3 s−1, q2(t) = 0.02 m3 s−1. Thus, the balance energy equation
becomes:
Cpm𝜌mA
(dh(t)
dt T(t) + dT(t)
dt
h(t)
)
= WS + Cp1𝜌1q1(t)T1(t) + Cp2𝜌2q2(t)T2(t) −Cp3𝜌3q3(t)T3(t)
which could be simpliﬁed to:
dh(t)
dt T(t) + dT(t)
dt
h(t)
=
1
Cpm𝜌mA(WS + Cp1𝜌1q1(t)T1(t) + Cp2𝜌2q2(t)T2(t) −Cp3𝜌3q3(t)T3(t))
Similarly, the mass balance equation is given by:
dm(t)
dt
= 𝜌mAh(t) = F1(t)𝜌1 + F2(t)𝜌2 −F3(t)𝜌3(t)
while for component balance, the equation yields:
dV(t)
dt
= F1(t) + F2(t) −F3(t)
Thus, the density balance equation results in:
Aheq
d𝜌3(t)
dt
= F1(t)(𝜌1 −𝜌3(t)) + F2(t)(𝜌2 −𝜌3(t))
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

56
2 Physics-Based Systems and Processes: Dynamics Modeling
The volume fraction is given by:
x(t) =
F1(t)
F1(t) + F2(t)
Considering that each valve displays a nonlinear behavior, the relationship between the valve
opening angles and ﬂow rates is given by:
q1,2(t) = K1,2
√
𝜃1,2(t)
q3(t) = CdK3
√
𝜃3(t)v3(t)
while the mass balance ﬂow through the tank yields:
Adh(t)
dt
+ CdK3
√
𝜃3(t) = K1
√
𝜃1(t) + K2
√
𝜃2(t)
In addition, the agitator energy is such that:
Ws = J𝜔(t)2
Hence, in order to derive the height of liquid in the tank h(t) as a function of the angular
position of each electro valve 𝜃1, 2(t), the balance equation is equivalent to:
A
[dh(t)
dt T(t) + dT(t)
dt
h(t)
]
=
Cp1
Cpm
K1
√
𝜃1(t)T1(t) +
Cp2
Cpm
K2
√
𝜃2(t)T2(t)
−
Cp3
Cpm
CdK3
√
𝜃3(t)v3T3(t) + J𝜔(t)2
Cpm𝜌m
The liquids are fully mixed in the tank after a time delay of D = 10 seconds and without any
step change of the level of liquid in the tank. The nonlinear liquid mixing process model yields:
A
[dh(t)
dt T(t) + dT(t)
dt
h(t)
]
=
Cp1
Cpm
K1
√
𝜃1(t)T1(t −D) +
Cp2
Cpm
K2
√
𝜃2(t)T2(t −D)
−
Cp3
Cpm
CdK3
√
𝜃3(t)v3T3(t) + J𝜔(t)2
Cpm𝜌m
A
[dh(t)
dt T(t) + dT(t)
dt
h(t)
]
=
Cp1
CpmAK1
√
𝜃1(t)T1(t −D) +
Cp2
Cpm
K2
√
𝜃2(t)T2(t −D)
−
Cp3
Cpm
CdK3
√
𝜃3(t)v3T3(t) + J𝜔(t)2
Cpm𝜌m
Considering that homogeneity is achieved by the motor agitator and the outﬂow
valve is not opened, the linearization of the balance equation around operating points,
(he, 𝜃1, e, 𝜃2, e, 𝜃3, e, Te) using the Taylor series expansion, yields:
he ̇𝛿dT(t)
dt
T(t) −
√
2g
(
1
2
√
he
𝛿h(t) + he
)
𝛿T(t)
= K1
(
1
2√𝜃1,e
𝛿𝜃1(t) +
√
𝜃1,e
)
(T1(t) −D∕1)
+ K2
(
1
2√𝜃2,e
𝛿𝜃2(t) +
√
𝜃2,e
)
(T2(t) −D∕1)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.5 Fluidic and Thermal Systems and Processes
57
h2
A1
h1
A2
Lake
Solid
deposit
Valve EV1 V1(t)
Valve position y1(t)
flow  qv1(t)  
City
water
reservoir
pH [%]
probe
Compressor
(air injection)
Pump P2
qp2(t)
Pump P1
qp1(t)
Chlorine  Fluoride
injection  injection
Valve EV2 V2(t)
Valve position y2(t)
Chemical flow  qc2(t)
c(t) [%]
Treated
water 
Ø2Pipe
L2length
Ø1 pipe
L1 length
Motor
agitator
Pump P3
qp3(t)
Ø3 Pipe
L3 length
h3
A3
Figure 2.10 Water treatment and distribution process schematic.
2.5.2
Puriﬁed Water Distribution Process
The process of public water chemical treatment and distribution consists of a water
pre-treatment stage followed by a water puriﬁcation and distribution stage. First, non-puriﬁed
water is uploaded from the river or lake into pre-treatment large-scale reservoirs where solid
deposits are separated and removed. This is expected to take 3–7 days. Then, this pre-treated
water is mixed with chemicals (such as chlorine, ﬂuoride, or ozone oxidation) for puriﬁcation.
Eventually, from these treatment reservoirs, a system of pumping stations and transportation
pipelines and valves convey this water to the city for public distribution, as illustrated in
Figure 2.10. Such a public water distribution process must simultaneously satisfy the demand
on the quantity of water estimated from its level of water at the storage station. In addition,
this should meet the quality requirements of minimal water pressure at end points throughout
the distribution subprocess (to prevent contamination from ground water) as well as for ﬁre
outlets. Furthermore, this process should meet water safety standards in terms of purity (such
as the percentage of any residual disinfectant or cancer-causing chemicals). It is assumed
that: (i) there is a physical removal of impurities through chemical treatment; and (ii) the
ﬁltering, coagulation, ﬂocculation, and sedimentation are enough to purify the water of most
microorganisms and chemical disinfectants.
Typical water treatment and distribution facilities are made of interconnected and interde-
pendent components including: (i) reservoirs as the source of water for the process; (ii) pumping
stations to raise pressure in order to circumvent drops due to elevation diﬀerences and losses
due to friction; (iii) tanks for the storage of excess water within the process; and (iv) pipes and
valves to regulate end water pressure and the ﬂow rates. Hence, the modeling of the water
treatment and distribution system consists of measuring the dynamics of the water volumet-
ric ﬂow rate, its height at the reservoirs, and the pressure along the pipes while considering
constraints on water quality and quantity. Such processes can be partitioned into subprocesses
(pre-treatment, inter-tank pumping, chemical treatment, pumping for city distribution). Pro-
cess variables and parameters to be used are summarized in Table 2.14.
After identifying inputs and outputs of each subcomponent, each subprocess can be modeled
as follows:
Reservoirs and storage tanks from the water supply subprocess are used: (i) to store a high
volume of water; and (ii) to elevate water in order to keep the pressure balances over the distri-
bution process and to ease the water ﬂow. This model mainly captures water surface elevation.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

58
2 Physics-Based Systems and Processes: Dynamics Modeling
Table 2.14 Water treatment process variables and parameters.
Parameters
Description and values
Variables
Description and values
A1, 2
Cylindrical area of tanks 1,2 (m)
qp1(t)
Rate of liquid ﬂow out of lake into tank 1
(m3 s−1)
pi
Valve position (0 ≤p ≤1)
qp2(t)
Rate of liquid ﬂow out of tank 2 into pipe
(m3 s−1)
𝜌1, 2, p
Fluid density (kg m−3)
qv1(t)
Rate of liquid ﬂow through valve
between tanks 1 and 2 (m3 s−1)
K𝜇
Pipe friction coeﬃcient
(dimensionless)
qp3(t)
Rate of liquid ﬂow rate through pump
out of mixing tank into pipe (m3 s−1)
L
Pipe section length (m)
v(t)
Valve ﬂow velocity (m3 s−1)
Ap
Pipe section area (m2)
hti(t)
Height of liquid in the ith tank (m)
𝜙1
Sectional pipe 1 diameter (m)
qp(t)
Pump ﬂow rate (m3 s−1)
Kv
Minor loss coeﬃcient
qi(t),qo(t)
Water reservoir inﬂow outﬂow (m3 s−1)
D
Travel time delay (s)
h(t)
Water reservoir head (m)
V
Volume of reservoir (m3)
qij(t)
Water ﬂow within node i to j (m3 s−1)
D
Head loss steady-state value
hloss(t)
Head loss (m)
Dij
Inner diameter pipe between
i j (m)
hpump(t)
Head developed by the pump (m)
sT
Reservoir area (m2)
𝜔motor(t)
Motor speed (rad s−1)
hv(t)
Level of the reservoir valve (rad)
𝜔pump(t)
Pump shaft speed (rad s−1)
Using the principle of continuity, the change of water volume within the reservoir (with no
leaks) is given by:
𝜌dV(t)
dt
= 𝜌iqi(t) −𝜌oqo(t)
where 𝜌, 𝜌i, 𝜌0 are the speciﬁc density of the water in the reservoir. Assuming that 𝜌i = 𝜌o = 𝜌,
the tank volume V(t), which is dependent on the reservoir cross-sectional area Ab and the height
level ht, is given by:
V(t) = Abht(t)
Substituting this into the previous equation, the height change yields:
dht(t)
dt
= qi(t) −qo(t)
Abh(t)
with A(h(t)) denoting the area for the water head h(t) at time instant t. Here, tanks are character-
ized by parameters such as the capacity (diameter, height etc.) and the operational constraints
deﬁning the water level range such as the minimum and the maximum allowed water level.
The ﬂow between tanks connected by a valve depends on the level diﬀerential between them.
Therefore, from Figure 2.10, it is assumed that the inter-reservoir ﬂow is given as:
qv1(t) = K1
√
√
√
√
√
||||||
2h1(t) −
2
∑
n=1
hn
||||||
sign
(
2hn −
2
∑
n=1
hn
)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.5 Fluidic and Thermal Systems and Processes
59
After substituting, the dynamic equation for the reservoir is given by:
dht1(t)
dt
=
qp2(t)
Ab
−K1
√
√
√
√
√
||||||
2h1(t) −
2
∑
n=1
hn
||||||
sign
(
2hn −
2
∑
n=1
hn
)
Aqueducts such as canals, tunnels, or pipelines are used for water transportation between the
distribution network nodes. Between any two nodes of this network, there is energy dissipation
within pipes due to friction losses. Assuming that any pressure loss due to leakage is negligible,
the dynamic equation describing the head-ﬂow relationship and the friction head loss along a
pipe relating node i to node j is given by:
dqij(t)
dt
= gAb
L (Δhij −hloss(t))
qij(t) is the water ﬂow between node i and node j of the pipe with a section length L and an
area Ap. Here, Δhij is the head diﬀerence between two ends of a pipe section while hloss(t) is the
head loss. Using Bernoulli’s theorem, under stationary conditions, the relationship between
water velocity v(t) in/out of a reservoir, gravity acceleration g, and reservoir water level ht(t) is
given by:
v(t) =
√
2ght(t)
Assume that: (i) the main component of head loss in the pipe hloss(t) is related to the pipe
contraction or expansion as well as the pipe bending angle; and (ii) the change in magnitude
of the water velocity is negligible for long pipes (greater than 100 units in diameter). Then, the
local head losses due to pipe expansions, contractions, or bends can be expressed as:
hloss(t) = hss loss +
(
K𝜇
2gAp
2
)
qij(t)2
with hss_loss, K𝜇, Dij being head loss steady-state values, the friction coeﬃcient, which depends
on the physical conditions (such as inner surface roughness) and the inner diameter of the
pipe section between i and j. The water is assumed to have a uniform density in the pipe (no
cavitation) and the valves prevent bidirectional water ﬂow, such that friction coeﬃcient for a
pipe surface for with a given roughness 𝜀, shape, and ﬂow can be calculated by:
1
√K𝜇
= −4log10
⎛
⎜
⎜
⎜⎝
𝜀∕Dij
3.71 +
2.51
2
√
2fpNR
⎞
⎟
⎟
⎟⎠
fp is the friction coeﬃcient, such that K𝜇= 2fp, and NR is the Reynolds number.
Reservoir valves are used to regulate the water ﬂow rate or the pressure out of the reservoir.
The modeling of valves depends on their size and type (i.e. opening and closing speed), so a
dynamics model for the reservoir valve could be given by:
dhv(t)
dt
= −k
√
hv(t) + ho
where hv(t) is the level of the reservoir valve and k is a constant that is given by:
k = pi
sv max
√
2g
ST
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

60
2 Physics-Based Systems and Processes: Dynamics Modeling
sv_max is the valve opening area equivalent to the area of the connected pipe and sT is the reser-
voir area. As such, the head-ﬂow dynamics model between two successive network nodes is
given by:
qij(t) = VijGij|hi −hj|𝛼sign(hi −hj)
where 0 ≤Vij ≤1 is proportional to the opening angle of the valve, 0 when closed. Under
stationary conditions, minor losses involved in the valve are given by:
hm = Kvv(t)2
2g
where v(t) is the ﬂow velocity, while minor loss coeﬃcient Kv is estimated experimentally.
Pumps transfer the energy from the attached motor shaft into the water ﬂow in order to over-
come losses due to friction in pipes, valves, and any head diﬀerence in a distribution network.
Assuming that the pump shaft speed wpump(t) and the motor speed wmotor(t) are proportionally
linearly dependent on the ﬂow rate, qp(t), the total head developed by the pump hpump(t) yields:
hpump(t) = aowmotor(t)2 + bo
wmotor(t)
wpump(t) qp(t) −
co
wpump(t)2 qp(t)2
a0, b0, c0 are pump constants that can be provided from the manufacturer’s ﬂow rate-speed
characteristics. Hence, the dynamics model pump-reservoir-valve-pipe distribution process
could be derived using the principle of mass conservation, such that the change in the water
level of the reservoir is the ﬂow entering the subprocess through, qP1(t) less the ﬂow qs1(t)
ﬂowing out of the outlet valve or out of the interconnecting reservoir valve q1, as illustrated in
Figure 2.10. It could be obtained by:
dht(t)
dt
=
qp1(t)
Ab
−qs1(t) −q1(t)
For chemical water treatment, it could be assumed that both the water and the chemicals are
fully mixed conforming to safety requirements. It is essential to maintain a speciﬁc chemical
content in treated water, c(t) [%] and the combined mixing chemical valve model could be given
by:
1
𝜔n2
d2qc2(t)
dt2
+ 2𝜁
𝜔n
dqc2(t)
dt
+ qc2(t) = KcvV2(t)
The concentration of mixture (water mixed with chemical expedients), c(t) is given as:
c(t) =
qc2(t)
(qc2(t) + qp2(t)) −qp3(t)
with
qp2(t) = a2h2(t)
(qc2(t) + qp2(t)) −qp3(t) = A3
dh3(t)
dt
Depending on whether the regulation is made through the chemical valve or pump P3, this
equation could be subsequently simpliﬁed. Then, it is possible to integrate all equation compo-
nents and to derive a suitable dynamics model of water purity.
2.5.3
Conveyor Cake Oven
Food manufacturing processes with high production rates use a conveyor oven for thermal
cooking through the biochemical reaction of starchy food products such as cookies, cakes,
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.5 Fluidic and Thermal Systems and Processes
61
Cake
Cake
Cake
Cake
Thermostat
(°C)
Electrical
heating
elements
Motorized
circulating
fans
Thermostat
(°C)
Travel direction
Stepping motor
Screw conveyor
Air flow
(m3 s–1)
Heater
voltage (V)
Cake
Cake
Figure 2.11 Cake conveyor-oven system.
bread, and biscuits. Such an oven can be decomposed into a three-stage baking process
(preheating, cooking, cooling). Only the modeling of the cooking stage is covered in this study.
In this stage, the motor-driven conveyor belt carries cakes toward an electrically heated oven.
The oven temperature deﬁnes the drying time to cook cakes by convection. And depending
on the cake size and production rate, the heater voltage can adjust temperatures accordingly
(between 218 and 250∘C). In addition, fans located at the rear of the oven move the air through
the heating elements in order to increase heat homogeneity within the oven chamber, as
illustrated in Figure 2.11. The changes in the baking temperature and airﬂow velocity cause
signiﬁcant variation in oven temperature. This is due to water evaporation, volume expansion,
protein transformation, and even crust formation during the biochemical reaction. As such, this
characterizes baking products in terms of product dimensions and shape (e.g. a volcano-like
shape), moisture content, color (i.e. caramelization), and even taste, all being dependent
on the oven shape and operating conditions (e.g. conveyor speed). This is a consequence of
simultaneous heat and mass transfers within the product and inside the conveyor oven. Thus,
in order to achieve a desired quality in the ﬁnal product according to the production rate, it is
suitable to model the internal temperature and the humidity of the conveyor oven.
It is assumed that: (i) the conveyor oven speed, the air temperature, and humidity are homo-
geneous during the baking process within the conveyor chamber; (ii) the cake exposure surface
is negligible compared to the inside walls of the oven area, and both have negligible radiation
properties; (iii) the air turbulence eﬀects around the oven entrance and exit are not consid-
ered; (iv) the oven walls exposed to the outside are properly insulated; (v) the oven chamber
and conveyor plate have uniform air density and humidity as well as constant air velocity;
(vi) the emissivity of the oven walls and the conveyor plate is considered negligible; (vii) the
temperature of the cake is uniform over its entire surface in all three dimensions and unrelated
to heating time and position; (viii) there is a constant cake thermal diﬀusivity 𝛼with respect to
time and temperature; and (ix) cakes have common shapes (cylindrical, spherical, etc.).
Consider an electrical convection tunnel oven with a working volume of 70.5 l and outer
dimensions of 80 × 65.5 × 48 cm3. It should produce standard baked cakes with a temperature of
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

62
2 Physics-Based Systems and Processes: Dynamics Modeling
Table 2.15 Conveyor oven system parameters and variables.
Parameters
Description and values
Variables
Description and values
Ch
Heat capacity of heater circuit ( kJ
kg
∘C)
Theater(t)
Temperature electrical heater (∘C)
Rh0
Thermal resistance to oven of the
electrical heater element (W m∘C−1)
Tair(t)
Ambient air ﬂuid temperature (∘C)
R0
Insulation thermal resistance (W.m∘C−1)
To(t)
Internal oven temperature (∘C)
Cg
Heat capacity of air ( kJ
kg
∘C)
dTcake(t)
dx
Temperature gradient across unit
thickness x
Cs
Heat capacity of cake ( kJ
kg
∘C)
Q
Power supply to heater (4 kW)
𝜆
Factor of heat evaporation for water
(kJ kg−1)
E(t)
Heater applied voltage
R𝜔
Drying rate (1 s−1)
S(t)
Absorbed electrical heater
convection (J m2h−1)
Fs
Linear density of drying air (kg m−1)
𝜔(t)
Rotational speed of drum of
conveyor (m s−1)
Fg
Linear density of cake (kg m−1)
Tcake(t)
Cake surface temperature (∘C)
UV
Volumetric heat transfer coeﬃcient
(
KJ
∘C ⋅m3 ⋅S)
Twall(t)
Oven wall temperature (∘C)
Cp
Oven speciﬁc heat (J.kg∘C−1)
qheater(t)
Quantity of heat energy generated by
the electrical heater (J h−1)
̇mair(t)
Hot air mass ﬂow rate (kg s −1)
Ccake(t)
Starchy cake moisture content
(m3 m3)
𝜌cake
Cake volumetric mass (kg.m3)
Co(t)
Oven humidity or moisture content
(m3 m3)
Ccake
Cake speciﬁc heat (J.kg∘C −1)
Vcake
Total volume of cake (m3)
Aconveyor
Conveyor inside oven surface (m2)
93∘C at its center. The baking process combines heat and mass transfer phenomena. Heat trans-
fer can be decomposed into: (i) radiation from the heating temperature to the air temperature
inside the oven as well as from the oven walls to the air; (ii) convection inside the oven from
the movement of hot air interacting with moisture on the cake surfaces; and (iii) conduction
from the iron-based conveyor carrier to the cake surfaces. It should be noted that during the
baking process, the cake humidity (moisture) is diﬀused into the oven. Similarly, water transfer
results from the evaporation of the water from the cake into the air causing a water vapor–air
movement in the oven.
Using parameters and variables listed in Table 2.15, it is possible to capture transient and sta-
tionary behavior of the baking and drying process based on the heater and cake temperatures
as well as the air moisture within the oven chamber. Hence, from the heat transfer decomposi-
tion here, using the energy conservation principle, the thermal energy balance on the conveyor
platform area is given by:
Heat energy injected + Heat energy generated = Heat energy stored −Heat energy losses
Also, the thermal energy balance of the conveyor-oven system yields:
dqheater(t)
dt
+
dqgenerated(t)
dt
= dqstored cake(t)
dt
−dqwall(t)
dt
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.5 Fluidic and Thermal Systems and Processes
63
While neglecting heat loss through the exhausted air, the quantity of heat injected by the
heating element and collected by the oven is given by:
dqheater(t)
dt
= ̇mair(t)Cp(Theater(t) −Tair(t))
Similarly, the heat stored within the cake is given by:
dqstored cake(t)
dt
= 𝜌cakeVcakeCcake
dTcake(t)
dt
During phase changes, the cake transforms chemical energy into thermal energy. The gener-
ated energy is given by:
dqgenerated(t)
dt
= qV cake
with q being the volumetric density of generated energy. The hot air injected in the oven cham-
ber heats the walls and the conveyor, thus transferring heat toward the cake either by convec-
tion, conduction, or radiation. The fans in the baking oven chamber move the air, causing forced
convection. Therefore, it should be noted that natural convection is small compared to forced
convection, so that the air ﬂow characteristics display a laminar boundary layer around the cake
surface. Hence, from Newton’s law, the rate of the convective heat transfer is proportional to
the surface area of the cake and the temperature diﬀerence between the cake surface and air,
which is given by:
Heat energy generated convection = hAcake[Tcake(t) −Tair(t)]
In the case of forced convection, the heat transfer coeﬃcient through convection (W.m2 ∘C−1)
is given by:
h = 5.7 + 3.9v
This is valid for the air speed 𝜈< 0.5 m s−1 and with a distance between the heating element
and the cake below of 25 cm. Acake is the cake surface area in contact with the hot air within the
oven chamber. The net heat transfer generated by radiation toward the cake is aﬀected by the
heater’s emitting surface and its relative position. This is given by:
Heat energy generated radiation = 𝜎𝜀pAheater(Theater(t)4 −Tcake(t)4)
with 𝜎being the Boltzmann–Stefan constant (5.67 108 W.m−2.K−4), 𝜀p is the emission coeﬃ-
cient of the cake surface, while Aheater and Theater are, respectively, the cake surface area and the
temperature of the combination of the heater and inner wall. The emissivity of the black object
varies from 0 to 1. It is considered that, during the baking process, the boiling heat transfer
causes the phase change in the cake as the water evaporates. But with a low temperature gradi-
ent, the irradiative heat transfer phenomenon is negligible. The rate of heat transferred by con-
duction is determined by the temperature diﬀerence between the cake and the heating medium
as well as the conducting medium’s resistance to heat transfer. Based on one-dimensional anal-
ysis of the cake shape and using Fourier’s law of heat conduction, the heat transferred would be
given by:
dqgenerated rad(t)
dt
= −kAconveyor
dTcake(t, x)
dx
with k being the conveyor’s thermal conductivity, while Aconveyor is the cake area in contact with
the conveyor, dTcake(t)
dx
is the temperature gradient across unit thickness x (negative sign because
temperature decreases as thickness increases).
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

64
2 Physics-Based Systems and Processes: Dynamics Modeling
Similarly, the heat losses from the cake to the oven walls as well as from the oven walls to the
environment are given by:
dqwall(t)
dt
= Kcake(Tcake(t) −Twall(t)) + To(t) −Twall(t)
Rf
with Rf being the thermal resistance of the oven walls or insulation thermal resistance, Koven
being the insulation coeﬃcient, and To(t) and Twall(t) being the oven wall temperatures. Usually,
Kcake ≥
1
Rf due to the fact that the heat transfer from the water is much better than through the
insulation, so it could be assumed that Twall(t) = Tcake(t). Hence the net heat transfer equation
is given by:
̇mair(t)Cp(Theater(t) −Tair(t)) + hAcake(Tcake(t) −Tair(t))
+ 𝜎𝜀pAheater(Theater(t)4 −Tcake(t)4) −kAconveyor
dTcake(t)
dt
= 𝜌cakeVcakeCcake
dTcake(t)
dt
+ qV cake −Kcake(Tcake(t) −Twall(t)) −To(t) −Twall(t)
Rf
Initially, at the beginning of the baking process, the starchy baking product is assumed to have
a moisture content equivalent to the water added during the dough mixing stage. This moisture
content decreases proportionally to the baking time and is called the drying rate. It is assumed
to be constant. However, during this drying time period, there is water and heat diﬀusion from
the oven chamber over the air inside. Hence the oven temperature and oven humidity or the
moisture distribution model can be derived from the heat diﬀusion over air and water diﬀusion
models, which yield:
𝜌cakeCcake
𝜕To(t)
𝜕t
=
1
nbcake
[ ht
Anet
(To(t) −Tcake(t)) + 𝜌air𝜆v
𝜕Co(t)
𝜕t
]
and the moisture equation is given by:
𝜕Co(t)
𝜕t
=
1
nbcake
[hm(To(t) −Tcake(t)) + 𝛼1(𝜎𝜀p(Tcake(t)4 −To(t)4))]
This one-dimensional baking process model, relating the heat and mass transfers with the
cake volume expansion for various baking conditions and bakery recipes, is not covered.
The coupling between the cake water and temperature is not included in these dynamic
equations. More importantly, some model parameters such as heat of evaporation, convective
heat and water transfer coeﬃcients, and heat latency are diﬃcult to estimate. However, some
simpliﬁcation could be made based on the baking process analysis such that convection
and conduction heat transfer are negligible compared with radiation heat transfer, making
the precision of the values of the absorption coeﬃcients of the cake, oven wall surfaces,
and air/steam mixtures highly important in process modeling. Furthermore, it is suitable
to use correct initial and boundary oven environmental and operating conditions in order
to obtain a reﬁned model capturing the transient temperature and the water distribution in
the cake through an advanced 3D cake model. This is also valid for the heat, water transfer,
and ﬂow modeling using a 3D baking chamber. Thus, the overall laws of conservation for
mass, momentum, energy, and water could be applied. This model should consider operating
conditions such as the airﬂow velocity as it aﬀects the temperature and product texture.
2.5.4
Poultry Scalding and Defeathering Thermal Process
An automatic poultry scalding and defeathering process is illustrated in Figure 2.12. Here, sup-
ported by a motor-driven belt, the feathers are plucked from poultry by rotating plates. After
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.5 Fluidic and Thermal Systems and Processes
65
CL
Pump
Control
valve
Water
well
Ammoniac gas
Heat exchanger
Temperature
probe
[°C]
Poultry
hook
conveyor
Motor
Liquid
level
probe
[m]
Waste
water
(33°C)
Chilled
water
Ammoniac
liquid
tank
[1.5°C]
Figure 2.12 Poultry processing system with ammoniac ﬂow.
this defeathering substation, the poultry is conveyed toward a tank ﬁlled with chilled water at
a temperature around 5.5∘C. At this stage, the debris on the poultry is rinsed oﬀin running
potable water, then a chemical pre-treatment is applied for meat processing before undergoing
any chilling conservation. Poultry carcasses are immersed for about 3 minutes to be rinsed oﬀin
water with a chlorine content of 50–100 ppm. This is an antimicrobial processing stage critical
for human pathogen control (i.e. by lowering the count of such as campylobacter, responsible
for food-borne illness). A −3∘C inﬂow of ammoniac over a heat exchanger lowers the inﬂow
water temperature in the tank from around 6–13∘C. The variation in the production volume
and the poultry immersion time deﬁnes the thermal processing results. Hence, in order to meet
the safety requirements compliant with product quality standards, it is necessary to predict the
tank temperature despite variable production rate or poultry size. Furthermore, the tank tem-
perature varies based on: (i) the poultry body temperature; (ii) the volume and processing rate of
poultry; (iii) the heat exchanger cooling response time constant; and (iv) the heat loss through
the tank walls. Process variables and parameters are listed in Table 2.16. It is assumed that:
(i) the pipe-cooled water ﬂow between the heat exchanger and the tank has negligible time
delay; (ii) the heat losses along the wall and the pipe are not considered; (iii) there is a low
gradient of pressure between the pipe inlet and outlet; (iv) the heat losses over the air above
the tank are negligible; and (v) the heat capacity of the waste water is nearly equal to the heat
capacity of the running potable water.
The occurring heat transfers are from: (i) the conduction of the ammoniac temperature
over the heat exchanger toward the water; and (ii) the convection between the water tem-
perature and the poultry temperature as well as toward the tank walls. This process can be
decomposed into the following subprocess components: the tank, the processed poultry,
and the heat exchanger. The expected exchanger outﬂow ammoniac temperature Tf is 1∘C.
A heat exchanger model captures the relationship between the pressures, the rates, and the
temperatures of the water ﬂows at the heat exchanger ports based on both directions of ﬂow.
The energy balance (the enthalpy) within the heat exchanger system can be given by:
Cw
dmw(t)
dt
Tf (t) = dqﬂow(t)
dt
+ dqw(t)
dt
+ dqa(t)
dt
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

66
2 Physics-Based Systems and Processes: Dynamics Modeling
Table 2.16 Some key parameters and variables of the poultry processing system.
Parameters
Description and values
Variables
Description and values
A, V
Cubic-shaped tank cross-sectional
area and volume (20 m3)
Th(t)
Tank temperature (∘C)
h
Height of liquid in tank (m)
qw(t)
Water well valve ﬂow rate
(m3 s−1)
Cw
Heat capacity of water (J kg∘C−1)
qa(t)
Ammoniac ﬂow rate (m3 s−1)
Ca
Heat capacity of input ammoniac
(4.621 kJ kg−1)
qs(t)
Wastewater valve ﬂow rate
(m3 s−1)
Rp
Thermal resistance of the poultry
(J m∘C−1)
Ta(t)
Input tank ammoniac liquid
temperature (−2∘C)
Hal
Heat conduction coeﬃcient
(J m∘C−1)
Tw(t)
Water inﬂow heat exchanger
temperature (13∘C)
Cww
Processed waste water heat capacity
𝜔(t)
Conveyor angular speed
(rad s−1)
Ap
Skin area of poultry processed in
the water tank (m2)
dma(t)
dt
Ammonia mass ﬂow rate
(kg s−1)
Kval
Proportionality constant for the
water valve (kg rad−1)
dmw(t)
dt
Water mass ﬂow rate (kg s−1)
Kpump
Coeﬃcient gain for the ammoniac
pump (kg m−3)
Tf (t)
Temperature of outﬂow
ammoniac (1∘C)
Rw
Tank wall thermal resistance
(J m∘C−1)
Tpoultry(t)
Temperature of poultry (∘C)
a
Valve discharge coeﬃcient (m2.5 s−1)
h(t)
Height of water in tank (m)
where the quantity of heat removed by the convection of ammoniac over the water within the
exchanger is such that:
dqa(t)
dt
= Ca
dma(t)
dt
(Tf (t) −Ta(t))
and the quantity of heat removed from the water is given by:
dqw(t)
dt
= Cw
dmw(t)
dt
(Tw(t) −Tf (t))
dqﬂow(t)
dt
is the rate of the heat ﬂow across the exchanger wall into the heat exchanger, and dqw(t)
dt
and dqa(t)
dt
are the changes of thermal energy in the heat exchanger due to the ﬂow through the
two ends of the heat exchanger. This heat loss over the exchanger is given by:
dqﬂow(t)
dt
= A
Rw
(Tambient(t) −Th(t))
with Rw being the wall’s thermal resistance given by:
Rw =
d
Halkf Aw
and Aw, d, Hal, and kf being, respectively, the area of the common wall between the inside layer,
the wall thickness, the wall material thermal conductivity, and the corrugation coeﬃcient of
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.5 Fluidic and Thermal Systems and Processes
67
the wall. Thus, the energy balance of the heat exchanger component yields:
Cw
dmw(t)
dt
Tf (t) = Cw
dmw(t)
dt
(Tw(t) −Tf (t))
+ Ca
dma(t)
dt
(Tf (t) −Tf (t)) + A
Rw
(Tambient(t) −Th(t))
Here, the mass ﬂow rates of the water and the ammoniac toward the heat exchanger could be
obtained as:
dmw(t)
dt
= Kval𝜃(t)
dma(t)
dt
= Kpumpq(t)
with Ca and Cw being, respectively, the mean heat capacity of the input ammoniac and the
water heat capacity while Ta(t) and Tw(t) are, respectively, the inﬂow ammoniac temperature
and the water inﬂow heat exchanger temperature. Consider a tank with 800 ml of water per
bird. From this assumption, it can be concluded that Cw = Cww.
Hence, applying the energy balance principle to the tank component, the heat in the water
tank would be equal to the heat from the circulating water minus the heat from the removed
output water, the heat released through the tank wall, and the heat gained by the immersed
poultry. This results in:
QT(t) = Qin(t) −Qout(t) −Qair(t) −Qpoultry(t)
QT(t) = AT𝜌wCww
a2
qo(t)2 dTh(t)
dt
Qin(t) = 𝜌wCwTw(t)qi(t)
Qwall(t) = Th(t) −Ta(t)
Rwqo(t)2
Qpoultry(t) = nRpAp(Tpoultry(t) −Th(t))
Thus, by substitution, it yields:
AT𝜌wCww
a2
qo(t)2 dTh(t)
dt
= AT𝜌wCww
a2
qo(t)2 dTh(t)
dt
−𝜌wCwTw(t)qi(t)
−Th(t) −Ta(t)
Rwqo(t)2
−nRpAp(Tpoultry(t) −Th(t))
AT𝜌WCww
a2
qo(t)2 dTh(t)
dt
= AT𝜌WCww
a2
qo(t)2 dTh(t)
dt
−𝜌WCwTw(t)qi(t)
−Th(t) −Ta(t)
RWqo(t)2
−nRpAp(Tpoultry(t) −Th(t))
The outﬂow is regulated by a valve whose dynamics can be calculated as:
qo(t) = a
√
h(t)
and
dh(t)
dt
= qi(t) −qo(t)
A
= Kval𝜃(t) −a
√
h(t)
A
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

68
2 Physics-Based Systems and Processes: Dynamics Modeling
where Rp, Ap, Cww, and n, respectively, are the thermal resistance of the poultry, the skin area of
poultry processed in the water tank, the waste water heat capacity, and the number of poultry
intermittently processed in batch production. Despite those assumptions, there is a coupling
between the water ﬂow rate, the ammoniac ﬂow rate, and the poultry temperatures.
2.6
Chemical Processes
2.6.1
Crude Oil Distillation Petrochemical Process
The petrochemical process of crude oil distillation consists of separating the heated crude oil
into a mixture of benzene, toluene, and xylenes. First, the crude oil is desalted to avoid corro-
sion of the equipment. Then, the crude oil is heated from near-ambient temperature to about
350–400∘C within the boiler at the entrance of the atmospheric distillation tower. As illustrated
in Figure 2.13, the distillation tower can be decomposed into the following components: (i) a
distillation column with sections (oil stripping, feeding, and rectifying) and trays, respectively,
for oil injection and steam separation; (ii) at the bottom, a reboiler to provide heat for oil vapor-
ization; (iii) at the top, a condenser to cool and condense the oil vapor from the top of the
column; (iv) a reﬂux drum to hold the condensed vapor so that liquid reﬂux can be recycled
back from the top of the column; and (v) a condenser. In the tower, the crude oil is continuously
processed into boiling range fractions of vaporized oil through several trays spaced at regu-
lar intervals. These distillation trays contain perforations and bubble caps. Hence, at each tray,
fractions of rising vaporized oil can be collected from the sides of the distillation column at a
speciﬁc temperature corresponding to the cutpoint for a desired product (i.e. kerosene, light gas
oil, heavy gas oil, etc.). At the distillation tower overhead, the remaining vaporized crude oil is
cooled down and condensed into a liquid gas (i.e. LPG). The unvaporized oil or asphalt residue
drops oﬀtoward the bottom of the tower to be reheated or drawn oﬀ(i.e. asphalt). After leaving
the tower, all of the fractions are routed toward oil-reﬁning downstream processing units. The
residue at the bottom is fed through the vacuum unit.
It is assumed that: (i) the separation processes are isothermal in all phases at 100∘C; (ii) there
is a constant pressure throughout each tray that varies linearly with the height of the column;
(iii) the overhead vapor is totally condensed; the vapor holdup on each tray is negligible com-
pared to the liquid holdup in each tray, the condenser, and the reboiler, which are all constant;
(iv) there is a complete mixing at every tray; (v) the feed can be either a liquid, a vapor, or a mix-
ture; (vi) there is a vapor-liquid phase equilibrium at the crude oil surface; and (vii) the molar
ﬂow rates of the vapor and the liquid through the stripping and rectifying sections are constant.
Consider a ﬁve-stage distillation tower of 1.95 m in diameter, 5 m in height, with trays spaced
60 cm apart. Here, a reboiler provides the heat for oil vaporization from the bottom of the col-
umn while a condenser is used to cool and to condense the vapor from the top of the column.
The reﬂux drum is holding the condensed vapor in order to move the liquid reﬂux back from
the top of the column. It should be recalled that the crude oil distillation process is used for
puriﬁcation of ﬁnal products. The levels of puriﬁcation of the ﬁnal output products are given
by the degree of purity for the distillate xD, higher than or equal to 98%, and the degree of impu-
rity at the bottom, xB less than or equal to 2%. The concentration of the ﬁnal product outputs
xB and xD should be measured to predict and to maintain the product quality based on the feed
ﬂow F, the feed concentration cF, the liquid ﬂow rate L, and the vapor ﬂow rate V.
At each stage, after combining the reaction and the fractionation of the pressured crude oil,
some fractions are condensed into derivatives of p-xylenes while the remaining steam of the
crude oil is moved to the next stage. The resulting condensed oil product is stored to be used as
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.6 Chemical Processes
69
EV1
Thermostat
Light naphtha
(gasoline)
Heavy naphtha
(gasoline)
Kerosene
(jet fuel)
Gasoil
(diesel)
Lubrificant oil,
paraffin wax,
asphalt
LPG
0°C
90°C
160°C
250°C
DISTILLATION COLUMN
CONDENSER
system
REBOILER
Pump
Gas
Controller
(MPC, PID)
EV2
Reflux
Reflux
Vapor
Vapor
Vapor
Vapor
Vapor
Feed flow LF, VF
400°C
Liquid
Liquid
Liquid
Stripping
segments
Rectifiying
segments
350°C Residue
(asphalt)
Figure 2.13 Distillation tower schematic.
commercial products such as fuel, diesel, kerosene, or gas. The residual crude oil at the bottom
of each stage is used for reboiling. Hence, the pressure and temperature of the crude oil deﬁne
the proportions of the separated p-xylene products such as ethylene, propylene, and butylenes.
In order to maintain the ﬁnal product quality and proportions of p-xylene products over all
derivatives of crude oil, the dynamics model of the temperature and internal ﬂow rate of the
distillation process should be developed.
Here, the process components considered are the reboiler, a ﬁve-stage distillation tower, and
a condenser over which the changes in input and output ﬂow rates, temperatures, and pressures
are quantiﬁed. Here, among the process parameters and variables listed in Table 2.17, for each
stage of the feed ﬂow there are furnace coil ﬂow, distillation column pressure, temperature,
and ﬂow rate. Also, preheating temperature should be below 400∘C to avoid carbon deposition
in the pipeline. The liquid ﬂow rate L and the vapor ﬂow rate V are process inputs, as well as
disturbance inputs such as the feed ﬂow F and the feed concentration cF, while the product
outputs are the concentrations xB and xD.
As shown in Figure 2.14, the distillation process is designed with N = 5 stages and operates
at a constant pressure. The feed can be considered as a mixture of ligas and naphtha. Here, the
inputs are condenser work, reboiler work, reﬂux mass ﬂow rate, and distillate mass ﬂow rate.
Hence, applying the vapor-liquid equilibrium principle for the ﬁve distillation stages, as shown
in Table 2.18, so that xi(t) and yi(t) are, respectively, the liquid concentration and the vapor
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

70
2 Physics-Based Systems and Processes: Dynamics Modeling
Table 2.17 Some key variables and parameters of the distillation process.
Parameters
Description and values
Variables
Description and values
P
Distillation tower inside (Pa)
LS(t)
Stripping liquid ﬂow rate (kg h−1)
zF
Molar fraction of light element in the
feed (%)
VS(t)
Stripping vapor ﬂow rate kg h−1
qF
Constant of (liquid/vapor) feed (%)
LR(t)
Rectiﬁcation liquid ﬂow rate (kg h−1)
𝜆
Heat evaporation of oil (kJ kg−1)
VR(t)
Rectiﬁcation vapor ﬂow rate (kg h−1)
xD
Molar fraction of distillate (%)
F(t)
Oil upstream feed molar ﬂow rate
(kg h−1)
xB
Molar fraction of light element in the
bottom (%)
D(t)
Condensate ﬂow rate (kg h−1)
MB
Quantity of crude oil in reboiler (kmole)
B(t)
Distillate bottom ﬂow rate (kg h−1)
MD
Quantity of crude oil in condenser
(kmole)
QB(t)
Heat provided in the reboiler (kJ h−1)
MT
Quantity of crude oil in tower stages (kg)
LD(t)
Reﬂux ﬂow rate (kg h−1)
cB
Heat capacity of the bottom (kJ kg.∘C−1)
tin, tout
In/out temperature of reboiler (∘C)
Mn
nth stage molar fraction retained (%)
MD
Condenser duty (W)
xn
nth stage molar fraction of distillate
within liquid (%)
MR
Reboiler duty (W)
yn
nth stage molar fraction of distillate
within vapor (%)
xD(t)
Feed molar ﬂow rate (kg h−1)
TB
Outlet temperature (∘C)
xn(t)
Liquid oil concentration at nth stage
(kg l−1)
TS, TE
Input and output residue reboiler
temperatures (∘C)
yn(t)
Vapor oil concentration at nth stage
(kg l−1)
𝜆
Heat of vaporization (kJ kg−1)
Vf (t)
Distillate ﬂow rate (kg h−1)
𝜌L,𝜌G
Density of liquid and vapor phases
(kg m−3)
C
Correction factor depending ﬂow rates
of two-phase ﬂows
concentration on the ith stage, while 𝛼is the relative volatility. This yields the following generic
equation:
dMixi(t)
dt
= Li+1(t)xi+1(t) −Li(t)xi(t) + Vi−1yi−1(t) −Viyi(t)
So, at the top and the bottom of the stages, this yields:
Mdxi(t)
dt
= dMixi(t)
dt
−xi(t)dMi(t)
dt
while at other stage including (feed stage):
Mdxi(t)
dt
= dMixi(t)
dt
Thus, at the condenser (top stage, n = 1):
MD
dxn(t)
dt
= (V + VF)yn+1 −Lxn −Dxn
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.6 Chemical Processes
71
Condenser
Reboiler
Distillation
tower
LR(t)
VR(t)
LF(t)
VF(t)
Upstream
crude oil flow
qB(t)
xB(t)
xD(t)
LD(t)
MR
MD
Stage 1
Stage 2
Stage 3
Stage 4
Stage 5
Stripping
section
Rectification
section
x1(t) = xD(t)
y1(t)
x1(t)
y3(t)
VR(t)
x2(t)
VR(t)
VS(t)
LS(t)
x4(t)
y4(t)
x5(t) = xB(t)
LS(t)
x5(t)
y5(t)
VS(t)
x2(t)
y2(t)
LR(t)
LR(t)
B(t)
M2=M3=M4=M
D(t)
x4(t)
x3(t)
x2(t)
Figure 2.14 Distillation tower.
Table 2.18 Average crude oil fractioning temperature.
Fraction
Average boiling
temperature (∘C)
Final product
Gas oil
190–350
Diesel
Kerosene
180–260
Diesel, jet fuel
Heavy naphtha
90–195
Gasoline
Light naphtha
45–90
Gasoline
LPG
−30 to 0
Propane fuel
Residue
+450
Coke, asphalt
which corresponds to:
dx1(t)
dt
= VR
MD
(y2(t) −x1(t))
Similarly, at the feed stages (m = 2.3.4), i.e. all stages below the condenser top stage and
above the reboiler bottom stage, and assuming that M1 = M2 = M3, the generic dynamics
equation is given by:
MD
dxm(t)
dt
= V(ym−1 −ym) + L(xm+1 −xm) + LF(xF −xm)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

72
2 Physics-Based Systems and Processes: Dynamics Modeling
which is equivalent to:
Mdx2(t)
dt
= LR(t)x2(t) + VR(t)y3(t) + LRx1(t) −VR(t)y3(t)
Mdx3(t)
dt
= −LS(t)x3(t) + V5(t)y4(t) −VR(t)y3(t) + LR(t)x2(t) + FzF(t)
Mdx4(t)
dt
= LR(t)x3(t) −L5(t)x4(t) + V5(t)y5(t) −V5(t)y4(t)
At the reboiler bottom stage (k = 5), the generic equation is given by:
MB
dxk(t)
dt
= (L + LF)x2(t) −Vyk(t) −Bxk(t)
which is equivalent to:
MB
dx5(t)
dt
= −Ls(t)x4(t) −Vs(t)y5(t) −B(t)x5(t)
Thus, the vapor boilup VS(t) kmol h−1 generated by the heat input to the reboiler can be
derived such that:
Vs(t) = QB(t) −CBB(tS −tE)
𝜆
VR(t) = F(1 −qF(t)) + Vs(t)
LR(t) = LD(t)
yi(t) =
𝛼xi(t)
1 + (𝛼−1)xi(t)
LS(t) = FqF(t) + LR(t)
F(t) = B(t) + D(t)
zF(t) = xBB(t) + xDD(t)
Hence,
D(t) = F(t)
( zF(t) −xB(t)
xD(t) −xB(t)
)
Also, the vapor velocity phase arises in the column and is given at each stage by:
𝜔v(t) = C
√𝜌L −𝜌G
𝜌G
The reﬂux drum is estimated by:
MD =
5(Lf + Vf )
60
where Lf is the reﬂux ﬂow rate (kg h−1); Vf is the distillate ﬂow rate (kg h−1). At the nth stage,
the rate of the material accumulation is equal to the quantities entered and generated, less the
quantities leaving and consumed within. Hence, the constant relative volatility throughout the
column and the vapor-liquid equilibrium relation can be expressed by:
yn(t) =
𝛼xn(t)
1 + (𝛼−1)x′
n(t)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.6 Chemical Processes
73
Exhaust for air flow (CO2)
pH sensor
Dissolved O2 sensor
Thermocouple
Exit liquid
(beer) flow
Motorized
agitator
ω(t)
Cooling thermal
finger with glycol
Media feed (yeast)
Wort (bacteria
culture of beer)
Fermentation
tank
Antibase/Acid
Figure 2.15 Fermentation tank schematic.
The distillation system dynamics are described by nonlinear diﬀerential equations
expressing the vapor-liquid equilibrium relationship between yn(t) and xn(t). A typical
distillation tower is expected to operate at nominal steady-state conditions so that the
feed stream contains 30% benzene, 40% toluene and 30% xylenes and the feed ﬂow rate is
500 kmol h−1, while the distillate contains 95% benzene and 5% toluene in the feed. Therefore,
in this model it can be assumed that the variables deviate only slightly from normal operating
conditions. Then, it can be linearized using a Taylor series and the operating conditions. The
resulting model can also be reduced. Furthermore, in this model any changes in the feed
stream, the feed ﬂow rates, and the feed compositions are not considered. As a consequence,
any pressure ﬂuctuations would cause the modeling to be more challenging and even almost
impossible.
2.6.2
Lager Beer Fermentation Tank
In addition to the brewery industries, fermentation processes are used in bakery, dairy, and
even pharmaceutical industrial applications. Beer fermentation is a three-stage chemical pro-
cess where the sugar, in the presence of microorganisms, breaks down into alcohol and carbon
dioxide. First, the yeast slurry is added to the fermentation tank. At this stage, sterile air or
oxygen is injected into the bottom of the tank to support the living yeast and to start the con-
sumption of all sugars by that yeast. This chemical reaction generates alcohol and heat partially
cooled by a lower temperature liquid circulating within a ﬁnger around the fermentation tank as
well as by exhausting carbon dioxide into the air, as illustrated in Figure 2.15. Process variables
are summarized in Table 2.19. The fermentation process stage takes between 3 and 5 days. Lager
beers are cooled at around 1∘C and aged for 7–24 days. Table 2.20 summarizes the remaining
fermentation stages.
The wort temperature has to be predictable and maintained within a range in order to maxi-
mize yeast activity and to obtain the growth of a mixed culture of lactic acid bacteria ensur-
ing a consistent end-product taste. For example, a tank temperature above 14∘C generates
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

74
2 Physics-Based Systems and Processes: Dynamics Modeling
Table 2.19 Some key parameters and variables of the fermentation process.
Parameters
Description and values
Variables
Description and values
Vt
Fermentation tank volume
(100 m3)
Qgenerated(t)
Heat generated from culture growth
with fermentation tank (kcal h−1 l−1
s−1)
M = BD∕26
Mass of malt used
(14 423 kg)
Qevacuated(t)
Heat evacuated from the fermentation
tank (kcal h−1 l−1 s−1)
D
Alcohol content (5%)
QCO2(t)
Heat losses through CO2 gasses
produced (kcal h−1 l−1 s−1)
B
Quantity of beer desired
(75 000 l)
𝜔m(t)
Motor speed (rad s−1)
E = B ∗1.25
Quantity of water (93 750 l)
QRET(t)
Heat produced through quantity
chemical reaction (kcal h−1 l−1 s−1)
H = 0.1B∕20
Quantity of hops (375 kg)
To(t)
Output temperature of the cooling
ﬂuid inside thermal ﬁnger (∘C)
L = 14.5B∕20
Quantity of yeast (55 kg)
Ti(t)
Input temperature of the cooling ﬂuid
inside thermal ﬁnger (∘C)
Mt = L + H + M
Total mass within the tank
(93 kg)
Ta(t)
Ambient air temperature (∘C)
d
Humidity of air within
entrance fermentation tank
in (%)
qﬁnger(t)
Heat transfer rate from wort to ﬁnger
(kcal h−1 l−1)
kf
Heat capacity through
convection (kJ ∘C kg−1)
qtank(t)
Heat evacuation rate from the
fermentation tank to outside ambient
(kcal h−1 l−1)
𝛼m
Velocity-heat gain
qmotor(t)
Heat generated rate through the motor
agitation of ﬂuid (kcal h−1 l−1)
CM
Wort and tank heat capacity
(kcal h−1 l−1 ∘C−1)
VF(t)
Air volume per volume of fermentation
tank (%)
MF
Cooling ﬂuid mass ﬂow rate
(kg s−1)
Table 2.20 Fermentation temperature proﬁle.
Temperature,
To(t) (∘𝐂)
Time duration (d)
Stages
14
3–5
Adding yeast to sugar to produce alcohol
1
2
Cooling beer process
14
7–24
Aging beer process
unwanted by-products and aﬀects the ﬁnal product taste and quality. This is done by removing
the generated heat by circulating glycol solution in jackets around the tank. The quality of the
beer depends on the temperature, pressure, and pH control, as well as the regulated air inﬂow
while mixing the solution with pitched yeast through a motorized ON/OFF agitator. Hence,
a dynamic thermal model of the tank is suitable to achieve desired temperatures during the
fermentation process.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.7 Production Systems and Processes
75
By applying the energy balance (the enthalpy) within the fermentation tank and the ther-
mal ﬁnger system, the diﬀerence between energy generated and energy evacuated would be
given by:
Qgenerated(t) −Qevacuated(t) = CM
dTo(t)
dt
Recalling that during beer fermentation, there is an increase of the beverage temperature
within the tank that can be quantiﬁed by the heat produced through the chemical reaction
QRET for n-alkanes so that:
y1[CuOvHwNt] + y2O2 + y3NH4
+ →z1CXHYOZNq + z2CO2 + z3H2O −QRET
Furthermore, the motor agitation of the ﬂuid transforms its kinetic energy into heat for fer-
mentation proportional to the motor speed 𝜔m(t). Hence, the overall heat generated is given by:
Qgenerated(t) = QRET(t) + dqmotor(t)
dt
= QRET(t) + 𝛼m𝜔m(t)
Part of the thermal energy generated is transferred by convection of heat from the dissolved
oxygen within the air. This increases the moisture level within the tank. The accumulation of
dissolved carbon dioxide (CO2) within the tank can be expressed based on the variation of air
volume and moisture level such that:
dQCO2(t)
dt
= VF
(
100 −d
100
)
A remaining part of the energy is transferred by conduction over the thermal ﬁnger and the
tank wall. The overall quantity of heat evacuated over time is given by:
Qevacuated(t) =
dQCO2(t)
dt
+
dqﬁnger(t)
dt
+ dqtan k(t)
dt
= VF
(
100 −d
100
)
+ MF(Ti(t) −To(t)) + kf (To(t) −Ta(t))
with d being the humidity of air within the entrance of the fermentation tank as a percentage.
Thus, substituting the overall heat balance equation yields:
CM
dTo(t)
dt
+ (kf −MF)To(t) = 𝛼m𝜔m(t) + QRET(t) −VF
(
100 −d
100
)
+ MFTi(t)
The quantities of yeast, sterile air, and dissolved carbon dioxide (CO2) content used during
fermentation deﬁne the quantity of heat generated, QRET(t). Hence, the diﬃculty of quantifying
such variables limits the predictability of the beverage temperature when using this model-
ing approach. An alternative using the gray-box modeling approach could be useful to reﬁne
its real-time estimate under speciﬁc operating conditions. Also, there is a correlation between
pH levels and the speed of sugar conversion into alcohol. But the coupling between these vari-
ables requires further knowledge of reaction kinetics, thermodynamics, transport, and physical
properties in order to reﬁne the fermentation process model.
2.7
Production Systems and Processes
2.7.1
Single Axis Drilling System
Drilling process operations consist of making round holes of various sizes and depths with a
speciﬁed accuracy. Hence, this process proceeds with drilling holes within speciﬁc tolerances
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

76
2 Physics-Based Systems and Processes: Dynamics Modeling
Spindle
motor
Motor 1
screw
Workpiece
Cutting tool
Nut
Platform 1
Clamp
Motor 2
Platform 2
Feed
Motor
x-y directions
driving motor
system 
Figure 2.16 Drilling machine system.
(not oversize or oﬀ-center) by avoiding the deﬂection of the thrust force or limiting the vibration
of the drilling structure (cutting force vibration). Indeed, some consistent vibrations can even
cause tool breakages. Consider a drilling machine tool with its (x-y) platform on which the
workpiece is clamped and positioned by motors 1 and 2, as depicted in Figure 2.16. The feed
motor ensures a feed speed of the tool toward a clamped workpiece while the spindle motor
deﬁnes the cutting feed rate f through a cutting torque Fc(t) and a thrust force FT(t) in the
z-direction. Applying an excessive thrust force can cause drill bucking while high cutting torque
may cause hole edge chipping and heating. It is assumed that: (i) the cutting ﬂuid, cutting speed,
and helix angle eﬀects on the cutting process are negligible; (ii) the eﬀect of the cutting speed
on the cutting force can be ignored; (iii) the friction acting on the motor shaft is viscous; and
(iv) nonlinear friction at near-zero velocities is not considered. A drilling operation producing
a hole with speciﬁc depth and size is related to the cutting feed rate and the spindle speed of
the drilling machine tool, as well as the cutting torque and the thrust force. The drilling process
variables and parameters are listed in Table 2.21.
Consider an AISI 1045 steel roll-shaped workpiece, in which it is necessary to cut a 3 mm
diameter hole with a depth of 5.5 mm using a twist drill tool with a hardness HB of 180. This
is expected to be achieved on a drilling machine with nominal operating conditions such as a
cutting feed rate f of 0.004 rev s−1 and a spindle cutting speed N of 1350 rpm.
From the mechanistic model, the acting forces during the cutting operations are usually
decomposed into tangential Ftangent(t), feed Ffeed(t), and radial Fradial(t) forces. It is assumed
that the cutting force Fc(t) acts on the spindle shaft and is only related to the tangential force,
Ftangent, as Fc(t) ≈Ftangent(t). From the assumption on the friction properties of the drilling
process, only stationary behavior is considered. Hence, at constant nominal speed (during
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.7 Production Systems and Processes
77
Table 2.21 Some key variables and parameters of the drilling machine.
Parameters
Description and values
Variables
Description and values
J1, 2
Inertia for motors 1, 2 (N.m.s2 rad−1)
Tm, 1, 2(t)
Torque for motor 1, 2 (N.m)
Ki
Torque constant motors 1, 2, s
(V.s rad−1)
Tm, s(t)
Spindle motor torque (N.m)
𝜂pulley
Motor 2 pulley transmission ratio
Tc(t)
Cutting torque (N.m)
𝜂screw
Motor 1 screw transmission ratio
𝜃c(t)
Cutting tool angular position (rad)
La, i
Armature inductance motors 1, 2 (H)
𝜔i(t)
Velocity of motors 1, 2, 3 (rad s−1)
Ra, i
Armature resistance motors 1, 2, s (Ω)
Fc
Cutting force (N.mm−1.rev)
bi
Damping ratio motors 1,2
(N.m.s rad−1)
TT(t)
Thrust force (N.m)
JM
Feed and spindle motors and gearbox
inertia (N.m.s2 rad−1)
TLoad, 1, 2(t)
Load torque for ith motor (N.m)
BM
Feed and spindle motor damping
ratio (N.m.s rad−1)
N
Spindle cutting speed (rad s−1)
KM
Motor torque constant (V.s rad−1)
Tm, f (t)
Feed motor torque (N.m)
Vf
Vertical feed velocity (m s−1)
Fradial(t)
Radial force from the tool (N)
n
Spindle speed (rad s−1)
Ftangent(t)
Tangent force from the tool (N)
f
Cutting feed rate (rad s−1)
Ffeed(t)
Feed force from the tool (N)
steady-state operations), the cutting force can be expressed as:
FC = KSd𝛽(Vf )𝛾f 𝛼
such that the drill diameter is d, the feed rate is f, and the vertical feed velocity is Vf . Hence, the
corresponding cutting torque Tc(t) is acting on the spindle shaft such that it is given by:
TC(t) = rtoolFc = rtoolKSd𝛽(Vf )𝛾f 𝛼
with rtool being the tool radius. The thrust force FT(t) acting along the z-direction can be
expressed as:
FT(t) = k1Ffeed + k2Fradial = KpDaf b
Variables such as the depth of cut d, the cutting speed Vf orV, the feed rate f, have nonlinear
relationships with the cutting force. In order to derive the model parameters such as the cutting
constants 𝛼, 𝛽, 𝛾, the force coeﬃcient Ks, the thrust force coeﬃcient Kp, and parameters a, b, the
least squares curve ﬁtting technique can be used with a frequency response function (FRF) plot
of the cutting test data. These data are dependent on the workpiece material’s hardness, the
cutting tool material, its geometry, and the cutting conditions (coolant used, cutting tempera-
ture, etc.). Each parameter should be estimated for speciﬁc operating conditions (temperature,
lubrication, workpiece material, etc.). Also, the deformation is assumed to be perfectly plastic.
Considering a friction force F𝜇(t) and all generated resistive forces during the drilling operation,
the cutting Tc(t) and friction T𝜇(t) torques should be at least equal to the spindle motor torque,
Tm, s(t), for the cutting operations to take place, only if:
T𝜇(t) + Tc(t) = Tm,s(t)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

78
2 Physics-Based Systems and Processes: Dynamics Modeling
If Tm, s(t) is less than T𝜇(t) + Tc(t), the spindle motor will stop and eventually the tool will
break. It should be recalled that
f
Vf
= 60
n
with n being the spindle speed. In this system model, the impact dynamics, the tool workpiece
friction, and the tool wear are neglected. Hence, the equation describing the motion driving
system of the secured tool in the drilling machine is given by:
JM
d2𝜃c(t)
dt2
+ BM
d𝜃c(t)
dt
= TLoad(t) = Tm,s(t) −Tc(t)
Recalling and manipulating the classical electric component of the DC spindle motor, this
yields
Tm,i(t) = Ktiii(t); Ei(t) = Kei𝜔i(t); Vi(t) = Ra,iii(t) + La
dii(t)
dt
+ Ei(t)
Thus,
La,sJM
Kt,s
d3𝜃c(t)
dt3
+
(La,sJM
Kt,s
+ LsBM
Kt,s
) d2𝜃c(t)
dt2
+
(Ra,sBM
Kt,s
+ Kes
) d𝜃c(t)
dt
= Vs(t) −
Ra,s
Kt,s
TLoad,s(t)
At low velocities, the dynamics equations relating the spindle motor torque and forces acting
during the cutting are highly dependent on nonlinear viscous friction. This is due to the depen-
dence of the viscous friction coeﬃcient on periodic shaft velocity. Furthermore, the gray-box
modeling of the transient characteristics during the cutting process is not considered due to
the challenging large numbers of parameters and variables involved, especially those related to
the operating conditions.
2.7.2
Cement-Based Pozzolana Portal Scraper
In a cement milling station, a portal scraper with a capacity of 200 ton h−1 is used to convey
cement raw materials such as gypsum or wet pozzolana from storage to the grinding or drying
stations. This portal scraper operates in a storage warehouse of raw material deposits. As illus-
trated in Figure 2.17, this portal scraper uses six motors to ensure the transversal positioning
process above the deposit and pozzolana removal by the scraping process. Once the transversal
positioning of the scraper above the raw material deposit is completed by MTR5 and MTR6, the
scraping can start using two motorized arms (MTR1, MTR4), as illustrated in Figure 2.17(a).
The primary (MTR4) and secondary (MTR1) arms of the scraper move from the right to the left
of the deposit, then the conveyor carries the cement product toward other subprocesses. The
operation of this handling system requires a synchronized positioning of both arms to avoid
a transversal deﬂection or even breakage. In addition, the precise positioning for both scraper
arms just above the deposit aims to maximize the removal rate and to minimize the required
torque of the scraping arm. Hence, it is suitable for modeling the resistive torques eﬀect and
the synchronized positioning of the scraper. Table 2.22 lists some key process variables and
parameters involved.
Here, the scraping motor torque Tm1(t) of the secondary arm would operate if and only if
it is equal to or higher than the resistive torques (especially the viscous friction T𝜐1(t) and the
static friction T𝜇1(t)). These resistive torques depend on the humidity rate of the pozzolana
deposit as well as the level of contact given by the pozzolana deposit angle 𝜃d(t) ≈𝜃3(t) and the
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.7 Production Systems and Processes
79
+
+
+
+
MTR 1
MTR 2
MTR 3
MTR 4
MTR 5
MTR 6
CONVEYOR
(a)
(b)
ωm2(t)
+
MTR1
MTR2
L1
L2
L3
θ3(t)
Secondary arm
Pulley vertical
transmission
θ1(t)
y-direction
T1(t) = Kr2ω1(t) 
T2(t) = μL3sinθ1(t)r
Tm1(t)
Tm2(t)
r: pulley radius
ωm1(t)
θd(t)
Pozzolana deposit
θ3(t)
H3(t)
H2(t)
H2T
θ1(t)
Figure 2.17 (a) Pozzolana portal scraper schematic and components. Source: Adapted from Kaltjob P.
(b) Secondary arm of the scraper.
primary scraper arm angle 𝜃1(t). Similarly, the secondary arm motor torque Tm2(t) is based on
the scraper weight and the primary scraper arm angle 𝜃1(t). It is considered that the distributed
viscous forces (dynamic friction and static friction) depend on the weight of the secondary
arm and the contact between the deposit and the scraper 𝜇2, as well as the humidity, Hh. Thus,
applying Newton’s law on the secondary arm, as illustrated in from Figure 2.17(b), the dynamics
equation of the MTR1 scraping process is given by:
(J1 + 𝜂pulley
2Jpulley)d𝜔m1(t)
dt
+ b1𝜔m1(t) = Tm1(t) −T𝜇1(t) −Tv1(t)
Assume that
T𝜇1(t) = 𝜇1MASg cos 𝜃3(t)L3 sin 𝜃1(t) −K(𝜃3(t) −𝜃d(t))𝛼Hh
𝛽
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

80
2 Physics-Based Systems and Processes: Dynamics Modeling
Table 2.22 Some keys variables and parameters for the translation and scraping process.
Parameters
Description and values
Variables
Description and values
MAS
Mass of secondary arm (kg)
𝜃m, i(t)
Angular position of the ith motor
(i = 1, 2, 3, 4, 5, 6) (rad)
La, i
Armature inductance for ith motor
(i = 1, 2, 3, 4) (H)
𝜔m, i(t)
Angular velocity of the ith motor
(i = 1, 2, 3, 4, 5, 6) (rad s−1)
Ra, i
Armature resistance for ith motor
(i = 1, 2, 3, 4) (Ω)
Va, i(t)
Input voltage of the ith motor
(i = 1, 2) (V)
bi
Damping ratio for ith motor
(i = 1, 2, 3 ,4) (N.m.s rad−1)
Tm, i(t)
Motor torque of the ith motor
(i = 1,2,3,4) (N.m)
𝜇
Static friction coeﬃcient (N.m s−1)
ii(t)
Current in the ith motor
(i = 1, 2, 3, 4, 5, 6) (A)
ri
Radius of pulley over ith motor
(i = 1, 2) (m)
Ei(t)
Back emf voltage of the ith motor
(i = 1, 2, 3, 4, 5, 6) (V)
K
Dynamic friction coeﬃcient
Ti(t)
Rope tension (i = 1, 2) (N)
Ji
Inertia for ith motor (i = 1, 2, 3, 4)
(N.m.s2 rad−1)
Tv, 1(t)
Viscous friction torque for MTR1
(N.m)
Ki
Torque constant for ith motor
(i = 1, 2, 3, 4) (V.s rad−1)
H2T
Total height (m)
𝜂pulleyi
ith motor pulley transmission
ratio (%)
T𝜇, 1(t)
Static friction torque for MTR1 (N.m)
L3
Length of the secondary arm (m)
Hh
Humidity level of the deposit (%)
Jpulleyi
ith motor inertia of the pulley
(N.m.s2 rad−1)
H3(t)
Height of the primary arm (m)
L2
Rope length of secondary arm (m)
𝜃d(t)
Pozzolana deposit angle (rad)
𝜃2(t)
Angle of the rod over the vertical (rad)
𝜃3(t)
Angle of the scraper arm over the
horizontal (rad)
and
Tv1(t) = Kr2𝜔m1(t)
Recall that the shaft torque of motor 2 Tm, 1(t) is given by:
Va,1(t) −E1(t) = Ra,1i1(t) + La,1
di1(t)
dt
=
1
Ki,1
[
Ra,1Tm,1(t) + La,1
dTm,1(t)
dt
]
It is assumed that the center of gravity of the secondary arm is located at its middle so that
during the upward motion of the secondary arm, MTR2 positioning could be given by:
⎧
⎪
⎨
⎪⎩
H2(t) = L2 cos 𝜃1(t)
H3(t) = L3
2 cos 𝜃3(t)
while the total height is given by:
H2(t) + H3(t) = L2 cos 𝜃1(t) + L3
2 cos 𝜃3(t) = H2T
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.7 Production Systems and Processes
81
Controller
Motor
Scraper
robot arm
Position encoder
Desired lateral
displacement [m]
[V]
[V]
–
+
Error
signal
Control
signal
[V]
Torque
[N m–1]
[N m–1]
Speed
Friction
+
Current
position
[m s–1]
[m s–1]
–
Resistive
torque
Integrator
[m]
Controller
Motor
Scraper
portal arm
Position encoder
Desired
transversal
displacement [m]
[V]
[V]
–
+
Error
signal
Control
signal
[V]
Torque
Speed
Arm
torsion
+
Current
position
–
Resistive
torque
Integrator
[m]
Figure 2.18 Subprocess function block diagrams for the pozzolana portal scraper..
Hence, considering the cable tension force T1(t) as the load on the secondary arm such that:
TLoad(t) = T1(t)𝜂pulley
Then, applying the principle of moments around 𝜃1(t), the dynamics equation yields:
T1(t)L2 cos 𝜃1(t) −MASg L3
2 cos 𝜃3(t) = MASL3
2 d2𝜃1(t)
dt2
Hence, the dynamics equations for the secondary arm yields:
J2
d𝜔m2(t)
dt
+ b2𝜔m2(t) = Tm2(t) −TLoad(t)
Figure 2.18 presents the block diagrams of the components involved in the transversal motion
and scraper processes. Motors MTR5 and MTR6 are used for transversal motion. These motors
need to have synchronized speeds 𝜔m, 5(t), 𝜔m, 6(t) to avoid a transversal deﬂection.
Similarly, the modeling of the scraper positioning for the primary arm can be done by specify-
ing the MTR3 and MTR4 motors’ kinematics. Hence, it could be possible to apply synchronized
commands on both motorized arms. Eventually, this portal scraper modeling would lead to a
nonlinear MIMO model with a control scheme, as presented in Figure 2.18.
2.7.3
Variable Pitch Wind Turbine Generator System
A renewable energy system such as a wind turbine generator system converts naturally gener-
ated mechanical energy into an electric energy source. This is done by using a drivetrain system
to convert the time-varying wind speed into the corresponding speed of rotating blades through
a transmission train gearbox. These rotating blades are attached to a generator system in order
to produce the induced ﬁeld current necessary to generate electric power. Hence, in order to
maintain a higher electric power
wind power performance ratio as well as to ensure voltage stability and unin-
terrupted operation of the wind turbine, it is desirable to adjust and to maintain the rotor speed
with respect to the wind speed ﬂuctuation. This could be easily achieved with a wind turbine
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

82
2 Physics-Based Systems and Processes: Dynamics Modeling
θT(t)
h
z
Generator
Rotor
blade #1
Rotor
blade #2
Hub
Wind
Te(t)
σ1
θT(t)
Gear
High speed
shaft
Low speed
shaft
Tower
whub(t)
NT
NG
Jrotor
KT
Gear train
TT(t)
JG
BG
ωrotor(t)
ωG(t)
Generator
BT
Tbe(t)
Tre(t) KG
Blade
Pmech
Pwind
If(t)
ωwind(t)
Figure 2.19 Wind turbine generator system.
dynamic model determining the relationship between the wind speed and the generated rotor
speed. The three-bladed wind turbine system is depicted in Figure 2.19. It is assumed that the
tower is ﬂexible, while there is no blade ﬂexibility. Hence, the variation of the blade pitch angle is
negligible. Also, the pitch angle variation is negligible. In addition, the geographical conﬁgura-
tion is such that the wind direction or the nearest wind turbine eﬀect does not have a prevailing
eﬀect on the aerodynamic interactions. The turbine is assumed to run in a normal operating
mode (after an initial period), without facing high wind speeds.
From the conﬁguration of the wind turbine, the relationship between the wind speed varia-
tions and the height can be expressed as:
wwind(t, z) = whub(t)
(
1 + z
h
)m
where z is the height diﬀerence between the hub and the ground, whub(t) is the wind speed at
the hub height h and the coeﬃcient m is the power wind-shear coeﬃcient. Based on the rotor
angular speed 𝜔rotor(t), the air density 𝜌, the rotor radius R = h −z, and the linear wind speed
wwind(t), the aerodynamic wind transformation coeﬃcient (also the called tip speed ratio) is
given by:
𝛼(t) = 𝜔rotor(t)R
wwind(t, z)
The mass air ﬂow rate, ̇mwind(t), can be derived as:
̇mwind(t) = 𝜌𝜋R2wwind(t)
Hence, the wind power is given by:
Pwind(t) = 1
2 ̇mwind(t)wwind(t)2 = 1
2𝜌𝜋R2wwind(t)3
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

2.7 Production Systems and Processes
83
Table 2.23 Some key parameters and variables of the wind turbine generator system.
Parameters
Description and values
Variables
Description and values
R
Rotor radius (m)
Vf (t)
Generator voltage (V)
𝜌
Air density (kg m3)
wwind(t, z)
Linear wind speed (m s−1)
JT
Turbine blade inertia (N.m.s2 rad−1)
𝛼(t)
Tip speed ratio
JG
Turbine inertia (N.m.s2 rad−1)
𝜔rotor(t)
Turbine angular speed (rad s−1)
KT, KG
Turbine and generator stiﬀness
coeﬃcients (N.m rad−1)
̇mwind(t)
Mass air ﬂow rate (kg s−1)
BT, BG
Turbine and generator damping
coeﬃcients (N.m.s rad−1)
𝜔G(t)
Generator rotor speed (rad s−1)
NT,NG
Turbine and generator gearbox
numbers of teeth
Pwind(t)
Wind power (kW)
Cp
Portion of wind power captured by
the blade
Pmech(t)
Generated mechanical power (kW)
A
Rotor blades swept area (m2)
TT(t)
Turbine torque (N.m)
z
Hub height (m)
TG(t)
Generator torque (N.m)
h
Height diﬀerence between the hub
and the ground (m)
Pelec(t)
Generator power output (kW)
m
Power wind-shear coeﬃcient
𝜃T(t), 𝜃G(t)
Turbine and generator angular
position (rad)
whub(t)
Wind speed at the hub height (m s−1)
Consider that the portion of wind power captured by the blade, Cp, is known. Thus, applying
the energy conservation principle to the wind-blade system, so that the transformation of the
wind motion into blade rotation corresponds to the transfer of a portion of the wind power into
mechanical power, yields:
Pmech(t) = 1
2𝜌𝜋CpR2wwind(t)3
At the steady state, the aerodynamic torque or the turbine torque during the blade rotation
is given by:
TT(t) = Pmech(t)
𝜔rotor(t)
Hence, the turbine torque transmitted by the wind to the rotor blade regardless of its mass is
given by:
TT(t) = 1
2𝜌𝜋
Cp
𝛼3 R5𝜔rotor(t)2
At the steady state, the rotor speed can be expressed as (Table 2.23):
𝜔rotor(t) = 2𝜋NT(t)
60 n
From the gearbox ratio conﬁguration, the conﬁguration of the turbine rotor torque over the
generator torque relationship results in:
TT(t) = NT
NG
TG(t) = 𝜔rotor(t)
𝜔G(t) TG(t)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

84
2 Physics-Based Systems and Processes: Dynamics Modeling
Around the rotational axis of the blade and the generator shaft, their dynamics equation
yields:
JT
d𝜔rotor(t)
dt
(t) + BT𝜔rotor(t) + KT𝜃rotor(t) = TT(t) −Tbe(t)
JG
d𝜔G(t)
dt
+ BG𝜔G(t) + KG𝜃G(t) = Tre(t) −TG(t)
Recall that the generated torque is related to the generator power as:
TG(t) = NG
NT
PG(t)
𝜔G(t)
After substitution and simpliﬁcation, the equation relating the blade’s rotational speed to the
power generated is given by:
(
JT +
(NG
NT
)2
JG
)
d𝜔G(t)
dt
+
(
BT +
(NG
NT
)2
BG
)
𝜔G(t) +
(
KT +
(NG
NT
)2
KG
)
𝜃G(t)
= Pmech(t)
𝜔rotor(t) −
(NG
NT
)2 Pelec(t)
𝜔G(t)
where the torque equations referring to the generator component are:
JT
d2𝜃T(t)
dt2
+ BT
(d𝜃T(t) −d𝜃G(t)
dt
)
+ KT(𝜃T(t) −𝜃G(t)) = TT(t) −TG(t)
JG
d2𝜃G(t)
dt2
+ BG
(d𝜃G(t) −d𝜃T(t)
dt
)
+ KG(𝜃G(t) −𝜃T(t)) = TG(t) −TT(t)
The electric power generated is transformed into a ﬁeld current through the following
equation:
Pelec(t) = KT𝜔G(t)KIf (t)
In this case the exciter or induced ﬁeld voltage is given by:
Vf (t) = Rf If (t) + Lf
dIf (t)
dt
Exercises and Problems
2.1
Consider an elevator system that has an inclined tracking rail with viscous friction, F𝜐(t),
and a counterweight, as illustrated in Figure 2.20. It is necessary to develop the elevator
dynamics model relating the permanent-magnet DC motor applied voltage and the cabin
vertical position. Using the system schematic in Figure 2.20 and Table 2.24 of parameters
and variables, answer the following questions. State any assumptions made.
a) By applying the appropriate physical laws of conservation and continuity, what is the
elevator system dynamics model?
b) How can this model be reﬁned or reduced?
c) What is the eﬀect of stiction phenomena on this dynamics model?
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
85
θ
Counter
weight
H
Cabin
+
T
Mgsinθ
Mg
Mgcosθ
Mcg
Mcg/2
+
Motor+reduction gear
Mcg/2
Figure 2.20 Inclined elevator schematic and its components.
Table 2.24 Variables and parameters of the elevator driven by a permanent magnet DC motor.
Parameters
Description and values
Variables
Description and values
Mcw
Mass of counterweight (kg)
Va(t)
Applied DC input voltage (V)
Mc
Mass of cabin (kg)
D(t)
Mass of passenger (kg)
M
Mass of passenger of (kg)
ia(t)
Armature current (A)
h
Inter-ﬂoor height (4 m)
Tm(t)
Motor torque (N.m)
La
Motor armature inductance (H)
𝜔(t)
𝜃(t)
Motor velocity (rad s−1)
Motor position (rad)
Km
Motor armature constant (V s−1 rad−1)
𝜔gr(t)
Gear velocity (rad s−1)
Jgear
Gear inertia (N.m.s2 rad−1)
𝜔dr(t)
Drum velocity (rad s−1)
Kb
Emf Motor constant (V s−1 rad−1)
Fcw(t)
Counterweight force (N)
r
Radius of drum (pulley) (m)
F𝜇(t)
Friction torque (N.m)
Jm
Motor inertia (N.m.s2 rad−1)
Tdr(t)
Drum applied force (N)
𝜂gear
Transmission ratio
yc(t)
Vertical cabin position (m)
L
Cable length (m)
ycable(t)
Vertical cable position (m)
𝜆
Linear mass density
Fc(t)
Cabin applied force (N)
𝜇
Friction coeﬃcient
Jdrum
Drum inertia (N.m.s2 rad−1)
Ra
Motor armature resistance (Ω)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

86
2 Physics-Based Systems and Processes: Dynamics Modeling
2.2
Infant incubator
Water vapor and fresh air are injected into a heated chamber to reproduce an appropriate
and humidity temperature for a premature infant, as illustrated in Figure 2.7. Consider
that the physiological activity of a premature infant generates humidity and temperature
within the chamber is negligible. For safety reasons, a control formulation that decouples
chamber temperature from humidity is required.
a) Write a set of diﬀerential equations relating temperature and humidity variation
based on the water vapor valve position 𝜃(t) and the heater input voltage u(t) as well
as the heat generated by the infant. State any assumptions made. (Hint: assume that
the chamber temperature is uniformly distributed.)
b) Decouple the incubator’s temperature and humidity output variables. Please detail
your reasoning.
c) Solve the dynamic (diﬀerential or diﬀerence) equations for the temperature and the
humidity.
d) Sketch the response of the incubator’s temperature. State an expression for the steady
state in terms of system parameters.
2.3
Consider a heating station (boiler) illustrated in Figure 2.21 as part of the crude oil
upstream and distillation processes shown in Figure 2.22.
It should be recalled that crude oil from the upstream process is expected to be pre-
heated to a temperature range of 390–400∘C within the gas-powered furnace prior to
any distillation process. Hence, depending on the crude oil quality or purity and the
level of obstruction in the pipeline, maintaining the steady outﬂow temperature could
be challenging, forcing some plants to perform regular and costly maintenance oper-
ations. Thus, it is desired to develop a temperature model of this crude oil preheating
process.
Elec. valve
Gas
Flame
detector
Control
Exhaust
Thermostat
FURNACE
Pump
CRUDE OIL DEPOT
From offshore
upstream pipe
To distillation tower
Figure 2.21 Furnace-based crude oil heating system.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
87
Elec.valve
Gas
Flame
detector
Control
CRUDE OIL DEPOT
Exhaust
Thermostat
Gasoline
(petrol)
Kerosene
Diesel oil
Fuel oil
Lubrificant oil,
paraffin wax,
asphalt
Gas
oil
150°C
200°C
300°C
370°C
400°C
FURNACE
DISTILLATION COLUMN
From offshore
upstream pipe
Pump
650– 850°C
80°C
390°C–
400°C
Figure 2.22 Crude oil preheating and distillation.
Answer the following questions:
a) What is the diﬀerential equation relating the furnace chamber temperature Tf (t) to
the upstream crude oil ﬂow rate Fi(t) and the ﬂow rate of the gas supply to the furnace
q(t)? State any assumptions made.
b) Similarly, derive the relation between the furnace chamber temperature, Tf (t), and
the temperature of the crude oil exiting the furnace, T(t).
c) What are the possible process disturbances?
d) State any assumptions about heat losses within the furnace. Applying the energy
conservation principle within the furnace, derive a reﬁned model determining the
variation of the temperature of the crude oil exiting the furnace, T(t), from the varia-
tions in the furnace temperature and the ﬂow rate and pressure of the crude oil. The
model should consider the heat capacity due to the crude oil’s chemical composition,
the furnace’s heat capacity, dust in the serpentine pipe, and temperature losses from
poor insulation. It is assumed that the mass balance of crude oil is given by:
𝜌dV(t)
dt
= 𝜌Fo(t) −𝜌Fi(t) = 0
e) What is the key variable aﬀecting the level of heat of the crude oil leaving the furnace?
How can its time constant be derived?
f) What would be the diﬀerence in the dynamical model if this process was a batch
process instead of a continuous process (Table 2.25)?
2.4
Among medical surgery applications, laser-based thermotherapy uses generated heat
to destroy a lesion in a patient with tumor cells. This is achieved through the absorp-
tion of the generated laser light by tissue and its transformation into heat. In order to
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

88
2 Physics-Based Systems and Processes: Dynamics Modeling
Table 2.25 Some key variables and parameters of the crude oil preheating process.
Parameters
Description and values
Variables
Description and values
R0
Insulation thermal resistance (kg)
T(t)
Crude oil temperature exiting furnace (∘C)
Cg
Heat capacity of air (kJ kg −1∘C−1)
Tu(t)
Crude oil upstream temperature (∘C)
Cs
Heat capacity of crude oil
(kJ kg −1∘C−1)
Tf (t)
Furnace temperature (∘C)
𝜆
Heat evaporation of oil (kJ kg −1)
q(t)
Flow rate of gas supply to furnace (m s−3)
V
Crude oil volume in the furnace (m3)
Fi(t)
Upstream crude oil ﬂow rate (m s−3)
Tref
Desired furnace exit temperature
390–400∘C
𝜔(t)
Speed of upstream pump (rad s−1)
K1
Convection coeﬃcient
Fo(t)
Downstream crude oil ﬂow rate (m s−3)
K2
Conduction coeﬃcient (kg m−3)
𝜌
Crude oil volumetric mass (kg m−3)
D
Diameter of serpentine pipe (m)
L
Length of serpentine pipe (m)
deliver eﬃcient local treatment, as well as to prevent thermally induced damage on a
healthy organ or vessel of the patient, it is necessary to understand this thermo-biological
phenomenon. Using a super-luminescent diode (SLD) light source, a laser wavelength
between 450 nm and about 1600 nm is directed in a series of pulses toward the human
tumor cell. It absorbs this transferred energy until it completely melts after the breaking
of its chemical bonds.
Among the factors deﬁning the laser-based cancer treatment process, there are: (i) the
optical properties of laser light generation, propagation, and absorption and transmis-
sion by tissues; (ii) the thermal properties of the energy transferred over tissue by heat
radiation and conduction; and (iii) the physiological properties of tissue destruction
(melting and vaporization). This treatment process should also ensure healthy vessel or
organ damage prevention, as illustrated in Figure 2.23. Thus, for safe laser surgery, it is
required to describe the heat transfer relationship linking the energy-based laser-light
absorption by the patient’s tumor tissue with the subsequent surrounding temperature
distribution.
a) Perform a process decomposition of the laser-based treatment and list some key
input/output process variables in a table, as well as some key parameters related to
optical signal diﬀusion and temperature distribution.
b) Using the optic light diﬀusion law, derive the tissue absorptivity model to quantify the
percentage of light absorbed Iabs(t), scattered, reﬂected, and refracted over the laser
light transmitted through two layers of skin tissue.
c) Assuming the focus diameter d, the laser’s penetration depth h and scanning speed,
the latent heat (for fusion and evaporation), the power, and the laser-focused spot
diameter are known and constant, and considering that the laser-tissue interaction
when the laser light energy QI(t) absorbed by tissue is converted into heat, Q(t), the
model for heat generation by light absorption is given by:
QI(t) = Iabse−𝜇ab𝛽
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
89
Focusing lens
Scanner
Pulse-
based
laser
Local human
tissue with tumor
Laser beam
Skin layer #1
Skin layer #2
Skin layer #3
Optical
properties
of
laser beam
generation
and
transmission
Heat
transfer
properties
over
human tissue
tumor
depth
Wavelength (frequency)
Power source
Super-luminescence
diodes
Target area
Skin layer #2
Skin layer #3
Laser light
transmission
Laser light
reflection
Laser light
refraction
Laser light
absorption
Laser light
scattering
(diffusion)
Skin layer #1
Skin layer #1
Skin layer #2
Skin layer #3
Blood vessels
qirradation
qevaporization
Thermal diffusion
up to melting
temperature
Figure 2.23 Schematic of laser-based surgery on human tissue.
where 𝛽is the given scattering coeﬃcient, b is the distance between the laser beam
and the tissue end point, and 𝜇a is the transmitted laser photon absorption or dissipa-
tion coeﬃcient, that is, the ratio of the number of photons absorbed in the given grid
cell divided by the total number of photons transmitted times the volume represented
by the grid cell.
Also, consider the following assumptions: (i) the tissue is heated to melting temper-
ature; (ii) all layers of skin tissue are opaque and have constant properties (including
thermal conductivity and absorptivity); (iii) change of tissue phase from solid to vapor
occurs at a single evaporation temperature; (iv) tissue evaporation does not inter-
fere with the transmitted laser signal; (v) the spot size of the laser signal is constant;
(vi) any power losses from the beam reﬂection by mirrors used to change the laser
beam direction are negligible; and (vii) the metabolic heat generation per unit volume
is negligible. By applying the 2D Pennes’s bioheat equation given by:
𝜌Cp
𝜕T(t)
𝜕t
+ K
(𝜕2T(t)
𝜕x2
+ 𝜕2T(t)
𝜕y2
)
= Qconv(t) + QI(t) + Qblood(t)
with K being the thermal conductivity, Qconv(t) being the convection between the tis-
sue surface and surrounding air, QI(t) the heat energy transmitted by laser generation,
and Qblood(t) is the metabolic blood heat absorption and perfusion, update the list of
parameters and variables accordingly and derive the solution for the temperature T(t)
surrounding the tissue under treatment. Please state two additional assumptions.
2.5
A lathe is a turning machine tool that is used to cut a cylindrical workpiece. First, the
workpiece is clamped by a tailstock. Then, through the feed-based horizontal penetration
of the cutting tool into the rotating workpiece at spindle speed 𝜔(t) over its longitudinal
axis, a part of the workpiece material is removed, as illustrated in Figure 2.24. This turning
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

90
2 Physics-Based Systems and Processes: Dynamics Modeling
bx1
by1
Spindle
speed ω(t)
kyr
kx2
kθ
ky3
Cutting tool
Clamping
system
Clamping
system
Cut depth
Fc(t)
Ff(t)
y
x
a1
a2
kx1
ky1
Feed rate f(t)
Figure 2.24 Equivalent workpiece cutting process with the clamping system.
Surface
roughness Ra 
Workpiece
Cutting tool
Cut width
(feed)
Feed rate, f(t)
Spindle speed ω(t)
FC(t)
Ff(t)
y
x
Cut depth h(t)
Workpiece clamping
system
Workpiece clamping
system
α
FT(t)
Chip
Overlap
k
b
Figure 2.25 Cross-sectional view of the cutting process with a machine tool.
process is performed for several successive revolutions causing cutting over the work-
piece surface. Thus, the surface roughness is dependent on the feed rate, the cut depth,
the cutting speed, the angle of approach, and the hardness of the workpiece material. It
is also related to chatter phenomenon from tool oscillations.
During this process, the forces acting on the workpiece are the radial thrust force Fr(t),
the feed force Ff (t), and the cutting force Fc(t) provided by the cutting tool. In order
to model this cutting tool structure, a lumped mass-spring-damper system with two
degrees of freedom is considered, as shown in Figures 2.24 and 2.25. Consider the fol-
lowing assumptions: (i) the cutting tool edge is sharp; and (ii) the deformation of the
workpiece due to the tool structure is negligible.
a) Upon decomposition of the lathe machining process into: (i) the feed drive system,
and (ii) the cutting process, list all involved key variables and parameters in a table.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
91
b) Based on experimental cutting process data analysis on a 6061-aluminum alloy work-
piece, the required quality of the surface, Ra, can be expressed as:
Ra = 0.23e0.24F
It is required to derive the model relating the surface roughness Ra with the cutting
force Fc(t), the thrust force Ft(t), the cut depth, the cutting tool material, the function
feed rate f, and the speed 𝜔(t). Assuming that the combined resistive forces of tool
penetration are:
Fx = kxh(t)
Fy = kyh(t)
where ky,kx are the cutting stiﬀness in the x- and y-directions, while the cut depth
yields:
h(t) = h0 + (1 −𝜉)hc(t)
with h0, 𝜉, and hc(t) being, respectively, the nominal cut depth, the overlap constant,
and the cutting tool lateral displacement in the x-axis direction. Hence, using the
schematics depicted in Figure 2.24, considering all forces resisting the tool penetra-
tion, and assuming that the machine tool structure is only ﬂexible in the y-direction,
derive the 2D dynamics vibration model of the lathe machining process on the work-
piece. (Hint: the workpiece clamping system at both ends is represented by transla-
tional and rotational springs.)
c) Deduce the equation deﬁning the surface ﬁnishing model of the 6061-aluminum alloy
workpiece over the resistive forces and operating variables (feed rate, speed).
2.6
Solar radiation systems have been used to deliver hot water or air for the central heat-
ing of living installations (e.g. in apartment buildings). Here, the energy from the solar
radiation is converted into heat through solar collectors heating the ﬂuid (usually water
or air). This is subsequently transferred into a storage tank. Such systems use pumps or
gravity to move the ﬂuid between the collector and the storage tank. The plate collector
consists of an absorber made of a metal sheet with high thermal conductivity (i.e. alu-
minum or copper) covered by glass to increase light intensity and reﬂexivity, as illustrated
in Figure 2.26.
In this exercise, this system is used to create suitable climate characteristics (humidity
and temperature) for a barn with double rooms, from a time-dependent energy source
(i.e. the sun). Consider 50 × 30 × 20 m barn spaces that have a solar water heating sys-
tem with a pump regulating the hot water ﬂow rate to the radiators in the double-room
barn as illustrated in Figure 2.27.
a) Recall that the transferred mass of water circulating from the solar collector to
the heated barn is the energy carrier. Perform a functional decomposition of the
solar-based heating system for the barn unit into process components.
b) Based on this decomposition, ﬁll out all the relevant process variables and parameters
in Table 2.26.
c) From the following assumptions, state, when valid, their implications:
i) All heat transport phenomena are taken in the 1D ﬂow direction, except for the
heat carried.
ii) Process component physical properties are dependent on temperature.
iii) The energy is only transferred in the ﬂow direction by mass transfer.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

92
2 Physics-Based Systems and Processes: Dynamics Modeling
Solar radiation R(t)
Pump
Transparent
glass
Solar
irradiation
Absorber
Collector
housing with
insulation, Ac
100%
transmitted
15%
reflected
55%
absorbed
40%
collected
30%
reflected
15%
Refracted (losses)
Hot water
outflow to
storage tank, To(t)
Water inflow
from storage tank
Ti(t)
Figure 2.26 Detail of the plate collector of solar heating system.
R(t)
Hot water
collector tank
Tw(t)
Pump
Zone 2
Zone 1
Temperature
Relative humidity
qloss2(t)
q1– 2(t)
qin1(t)
L1(t)
θ1(t)
Th2(t)
Radiator
Radiator
Solar
irradiation
Glass
Absorber
Housing
R(t)
Pump
Glass
Solar
irradiation
Absorber
Housing
Water
supply
Ta(t)
θ2(t)
L2(t)
qin2(t)
qloss1(t)
Figure 2.27 Solar-based heating system for a barn with two rooms (zones).
iv) The properties of glass and insulation are independent of temperature.
v) Solar radiation and ambient conditions are time-dependent.
vi) Dust and dirt on the collector are negligible.
vii) The mass ﬂow rate in the collector tube is uniform.
viii) Heat is lost to the atmosphere either by convection or by radiation from the
heating infrastructure.
d) Based on the energy balance principle, develop a 1D heat transfer mathematical
model for each component of the solar-based heating system. It is assumed that:
(i) the heat capacity of the air gap between the cover and the absorber plate is
negligible; (ii) the longitudinal heat conduction in the absorber plate and pipe wall is
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
93
Table 2.26 Solar heating process variables and parameters.
Symbol
Process parameters
Symbol
Process variables
–
Collector area (m2)
qin1, 2(t)
Heat transferred into barn (mJ h−1)
Cw
Collector heat loss constant (W m−2 ∘C−1)
–
Absorbed solar irradiation per unit
collector area (kJ m2 h−1)
–
Water heat capacity (kJ kg−1 ∘C−1)
–
Ambient temperature (∘C)
–
Thermal resistance of barn walls (W m−1 ∘C−1)
–
Barn temperature (∘C)
–
Speciﬁc heat capacity of air heat capacity of
(kJ kg−1 ∘C−1)
Tw(t)
Temperature of water in tank (∘C)
–
Temperature of water exiting the
collector (∘C)
Ti(t)
Temperature of water returning to
the collector (∘C)
also negligible; and (iii) windows, walls, doors, and ceilings of the double-room barn
have the same heat transfer coeﬃcient.
e) Develop a linear model of the heating system describing the dynamics relationship
between process output variables, such as the water tank temperature, and input
variables, such as the average animal temperature, irrelevant the barn’s interior and
exterior temperatures.
f) Analyze the heating system’s response to: (i) negative energy collected; and (ii) large
changes in ambient temperature and solar radiation.
g) For safety reasons, if the pump is deactivated, derive the corresponding linear model
of the water tank temperature found in (e).
2.7
Pharmaceutical, food, or even cosmetic industries use extraction approaches to sep-
arate speciﬁc chemical entities from their natural sources, such as plants. Among
these, a maceration technique is used for the production of non-synthetic medicinal
drugs. Here, medicinal plants are soaked within a tank in a speciﬁc solvent such as
ethanol for a considerable time. The eﬃciency of the extraction process is improved
by continuously circulating the solvent through a maceration (extractor) vessel, as
illustrated in Figure 2.28. In this process, the solvent is pumped from its bottom tank
vessel toward the top of the maceration vessel, where it is sprayed over the surface
of the macerated material. Such solvent circulation results in a uniform distribution
of the drug extract concentration (equilibrium concentration) in a shorter amount of
time. Depending on the solvent used (i.e. water, alcohol, chloroform, hexane etc.), as
well as the medicinal plant involved, the equilibrium drug concentration varies. This
steady-state concentration deﬁnes the extracted product quality. Furthermore, after
each solvent circulating cycle, the solvent viscosity is increased while the ﬂow proﬁle
is expected to be more turbulent. Hence, there is a need to adjust the pump speed
accordingly to maintain the same process time constant.
For the drug extraction schematic depicted in Figure 2.28, it is required to develop a
model relating the ﬂow rate to the pump speed with respect to the change in solvent
viscosity.
a) Using the double tank system depicted in Figure 2.28, perform a functional decom-
position of the extraction process into subcomponents and list all relevant process
variables and parameters involved in a table.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

94
2 Physics-Based Systems and Processes: Dynamics Modeling
h1(t)
[m]
β
[m3 s–1 m–1]
q1(t)
[m3 s–1]
ω(t)
α [m3 rev–1]
Electro-valve
Pump
qpump(t)
[m3/s]
Solvent
vessel
Drug extractor
vessel
A1[m2]
Spray
nozzles
Extract
concentration
detector
h2(t)
[m]
A2[m2]
Figure 2.28 Drug extractor double-tank process.
b) By applying laws of continuity to ﬂuid ﬂow and considering the nonlinear valve angu-
lar model 𝛽(t) so that the rate of ﬂow through the valve is given by:
q(t) = 𝛽(t)
√
h(t)
derive the diﬀerential ﬂow dynamics equations relating liquid level in each tank to the
pump ﬂow rate qpump(t).
c) Assuming that the viscosity, 𝛿(t), doubles every ﬁve solvent circulating cycles, causing
a non-laminar ﬂow proﬁle, update these dynamics equations.
d) If the extract concentration, 𝜙(t), is expected to double after each three solvent circu-
lating cycles, estimate the relationship between the initial vessel levels and the time
to reach the drug extraction equilibrium concentration (𝜙(t) > 56 % ). (Hint: ﬁnd the
number of cycles required.)
e) Derive a method to estimate the number of cycles required to reach the steady-state
extract concentration.
2.8
Motorized gyroscopic stabilizing an aircraft autopilot system
Autopilot systems are used in aircraft to ensure appropriate ﬂight navigation during poor
weather or rough air conditions, such as regions of turbulent winds. This requires a sta-
bilizing system to automatically maintain a desired compass heading and altitude of the
aircraft. Such a ﬂight stabilizing system uses gyroscopic stabilizers associated with each
axis (yaw, pitch, and roll) to detect the aircraft’s change in navigation level. According
to any angular deviation, appropriate torque-based compensation is provided through
electro-hydraulic actuators. Consider a passenger plane using a DC motor located under
the passenger cabin ﬂoor to generate the necessary stabilizing torque. It enables plane
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
95
Wind turbulence
drag force
Wind turbulence
drag force
Plane
passengers
θ(t)
Electric
motor
Axis of rotation
L
Figure 2.29 Gyroscopic aircraft stabilizing system.
stabilization once the gyroscope has detected angular (roll direction only) variation, as
illustrated in Figure 2.29.
a) For a ﬁxed number of passengers with a given total weight Mp and a platform
inertia Jp, derive the linear platform dynamics relating its angular position 𝜃(t) to
the motor-generated torque Tm(t). (Please the state all necessary assumptions with
respect to your model, so that the wind force is acting at the center of each aircraft
wing.)
b) Assuming that an abrupt wind is applied on the left wing (only in the roll direction)
of the plane in autopilot mode for a short duration, derive the expected response of
the system. (Hint: impulse as input signal.)
c) Describe how the system dynamics model could be modiﬁed if the wind aﬀects its
motion both in the yaw and roll directions while in the automatic pilot mode.
2.9
Gamma radiation-based food sterilization using a robot-based package-handling system:
food and surgical devices are among those products that are legally required to be cleaned
using a sterilization process to eﬀectively kill almost all living microorganisms (i.e. bac-
teria, fungi, etc.). Typical sterilization techniques include those using pressurized vapor,
ethylene oxide, gamma radiation, gas plasma, or peracetic acid. In the case of gamma
radiation, a dose of gamma rays (between 1 and 30 MeV) is directed toward a prod-
uct for a time duration depending on its thickness and volume, as well as the type of
microorganism to be killed. Gamma radiation causes the breakage of molecular bonds
in all material that is exposed. This requires handling with extreme care to avoid being
harmful to humans. As such, a human-free operating system is essential for such a ster-
ilization process.
Consider an automated sterilization process using a planar robot arm and a conveyor, as
depicted in Figure 2.30. The conveyor moves the food product boxes to be irradiated to
the pickup (upload) location at a predetermined speed. Then, the robot arm picks and
drops them into the irradiation area, which is immersed in an underground water cham-
ber. The gamma rays pass through the encapsulated food product and the sterilization
treatment takes place for a certain time before the robot raises it back to the other side
of the conveyor, as illustrated in Figure 2.30. Synchronization of the pick and drop oper-
ation of the robot arm should be considered, by computing the motion of two (x-y-axis)
motorized robot arms with the displacement of the conveyor carrying the product boxes
to be processed.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

96
2 Physics-Based Systems and Processes: Dynamics Modeling
From storage
Non-decontaminated
food box
Gripper
Infrared
detector
Robot driven by two motors
x-axis
motion
y-axis
motion
Conveyor
V(t)
Gamma
sterilization
machine
Decontaminated
food box
Gamma (ϒ)-rays
Conveyor linear speed
y1
x1
x2
y2
y3
Figure 2.30 Robot handling system for gamma radiation-based food sterilization process.
Table 2.27 Typical robot handling system parameters and variables.
Symbol
Process parameters
Symbol
Process variables
m
Mass of product box (kg)
Tmx(t)
x-axis robot arm torque (N.m)
Ki
Torque constant for x-axis motor (dimensionless)
Tmy(t)
y-axis robot arm torque (N.m)
𝜂screw
y-axis motor screw transmission ratio
TLoad(t)
Load torque (N.m)
M
Mass of robot arm (kg)
𝜔x(t)
x-axis angular velocity (rad s−1)
Δt
Sterilization processing time (s)
a) Perform a functional decomposition of the conveyor-robot handling system depicted
in Figure 2.30 into various subprocesses and list all relevant assumptions with respect
to the motion proﬁle of the food product boxes.
b) Based on this decomposition, complete Table 2.27 with all relevant process variables
and parameters.
c) In order to synchronize the conveyor speed, derive a dynamic model for the 2D axis
positioning of this robot-conveyor handling system that enables transfer of a food
product box from a ﬁxed arrival conveyor location P1(x1, y1) to a determined irradi-
ation location P2(0, y2). Then, it moves to the departure conveyor position P3(x3, y3).
2.10
Electric vehicles with rechargeable batteries have limited traveling distances and require
frequent power recharging. In an attempt to improve this, it has been considered to
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
97
Power transmission train
Diffferential
drive (gear)
Electric
motor
Front wheel
Rear wheel
Combustion engine
Battery
Fuel
Air
Coupler
pulley
Gearbox
Belt
Throttle
valve
Electric
traction
mode
Tel(t), Jel
Tem(t), Jem
Recharging
mode
Nc
Ne
Ng
Generator
and
power bus
Brake
Figure 2.31 Series hybrid diesel-electric powertrain.
equip hybrid vehicles with an internal combustion engine coupled to an electrical
motor/generator with a recharging function. This hybrid vehicle with a series conﬁgura-
tion is such that the engine is capable of supplying the energy for recharging the battery
based on the power requirements.
Consider a hybrid vehicle that has two operating modes: (i) an electric mode, when
the electric motor generates the traction force; and (ii) a recharging mode, when the
combustion engine delivers the traction force while charging the battery, as depicted
in Figure 2.31. Hence, in order to reduce the fuel consumption and toxic emissions,
the hybrid vehicle must optimize the battery recharging cycles over its driving range.
Based on the vehicle’s traction torque requirements and the battery’s recharging power
requirements, an optimized strategy would consist of splitting the required traction force
between the engine and the electric motor.
a) This hybrid system can be decomposed into: (1) energy-related components, such
as (i) energy storage (i.e. fuel storage tank and ultra-capacitors), and (ii) energy
conversion (i.e. power ampliﬁer, clutch/torque converter, combustion engine,
generator, electric motor, transmission, and drive); and (2) dynamics processing
components including motor traction, aerodynamic drag reduction, and rolling
resistance tires. Torque couplers are used as a link between these components. The
degree of hybridization is the ratio (between 15 and 60%) between the electric motor
power and the engine power. Derive the block diagrams of each component with the
corresponding variables and parameters involved.
b) Among the following assumptions, discuss their implications:
i) the power losses in the ﬁnal transmission are negligible with respect to other
sources of power losses;
ii) all vehicle powertrain components connecting the motors to wheels are rigid;
iii) temperature variation aﬀects the rate of reaction and the ionization of the elec-
trolyte within the ultra-capacitors.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

98
2 Physics-Based Systems and Processes: Dynamics Modeling
96 Km
Electric mode
α
h
a
b
Linear speed v(t)
Recharging mode
43 km
ωw, μw,
Jw, Rw
Faerodynamics(t)
Fweight(t)
Ftraction(t)
Ffriction(t)
Figure 2.32 Vehicle longitudinal motion dynamics.
c) Based on the schematics of the powertrain in Figure 2.31 and the vehicle in motion
in Figure 2.32, consider that the net vehicle dynamics could be summarized as:
mdvveh(t)
dt
= Ftraction(t) + Fresistive(t)
= Fel(t) + Fem(t) + Ffriction(t) + Fweight(t) + Faerodynamics(t)
and consider that the NiCd batteries’ rate of discharge state change is given by:
SOC(t)
dt
= −Voc +
√
Voc
2 −4PbattRbatt
2CbattRbatt
where Voc, Rbatt, and Cbatt are, respectively, the battery open circuit voltage, its internal
resistance, and the capacity of the battery. Hence,
Pbatt = Pmot + Pgen + Pmotor−loss + Pgen loss
Thus, derive the vehicle dynamics equations of all related system components, espe-
cially the battery discharging model, the torque generation model, the vehicle dynam-
ics model, and the energy consumption model.
Develop the dynamics equation relating the discharging of the battery to the traction
torque produced by the electric motor during electric mode.
2.11
Indoor farming methods aim to increase agricultural food production using reduced
amounts of water and space compared to traditional methods. They also limit nega-
tive environmental impact through reduced soil degradation. However, this indoor cul-
tivation for artiﬁcial plant growth, independent from the weather and soil conditions
(e.g. winter, desert etc.), requires: (i) lighting exposure through Light Emitting Diodes
(LEDs) to replace sunlight for photosynthesis; (ii) suitable temperature, humidity, and
watering levels; and (iii) speciﬁc nutrients. These installations are very costly, especially
due to the electric power required for the lighting. It is possible to use solar cells to supply
such an energy load.
Consider a multilevel hydroponics installation (with three tiers of shelves), capable of
growing indoor fruit and vegetables (e.g. lettuce, strawberries, tomatoes, eggplants, cab-
bage, sweet potatoes, or red and green chili peppers). It uses an LED light source, as illus-
trated in Figure 2.33. Here, the warm air and water vapor are injected into the farming
installation, where lettuces are grown on soils containing nutrient solutions (fertilizer,
salts, pH adjustments) and enriched minerals.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
99
Fan (air inflow)
θ(t)
Water vapor with nutriment
control valve
Thermostat
T[°C],  T(t)
Humidity
sensor
[% RH], h(t)
Air exhaust
Lightning
LEDs
Mineral-
enriched soil
Solar panel
Lithium ion
Battery 
Power
converter
Solar
radiation
Lettuce culture
shelves
u(t)
Electric
heater
Figure 2.33 Indoor lettuce farming.
a) Considering indoor farming process variables such as the relative humidity, tem-
perature, lighting quantity and quality (e.g. wavelength, intensity, ﬂuence rate,
photoperiod), as well as plant growth level (leaves), perform the functional decom-
position of the farming process into subcomponents and list all relevant process
parameters and variables.
b) Discuss the implications of the following assumptions:
i) plant transpiration through proper air ventilation has a negligible heat transfer;
ii) the interior temperature is normally distributed;
iii) the farming conﬁguration uses a single type of building material for insulation.
c) Develop the dynamics model capturing the relationship between the water vapor
valve, the electric heater voltage, and the temperature and humidity inside an indoor
farm with a multilevel installation. What will happen if the electric heater operates
intermittently (discontinuously)?
d) Assuming that: (i) blue and red lights have been used preferentially for their optimal
eﬀect on the illumination absorption of plant morphology and photosynthesis; and
(ii) an intermittent light operating mode improves plant photosynthesis (i.e. when
lettuce leaves are exposed to light, they transform the water and carbon dioxide into
glucose, water, and oxygen); recalling that each 3-day, the distance between the LED
and plant need to be readjusted such that lumen per meter square of pleant leaf
remained constant, develop the model of LED lighthing using the model for light
absorption inside the leaf given by:
Lumens
m2
=
I(t)
(
h(t) −0.025 a(t)
h0
)2 = constant
where h is the distance between the lighting device and the leaf surface, ho is the
leaf thickness, Io is the incident irradiance (blue and red), and a is the leaf surface
area.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

100
2 Physics-Based Systems and Processes: Dynamics Modeling
yaw
pitch
roll
FG(t)
FWA(t)
Fpropeller(t)
D(v)
v(t)
Ftorsor(t)
G(v)
θ
Figure 2.34 Electrically-driven UV.
e) Present a methodology to derive the relationship between lettuce leaf growth and
light.
f) Derive the methodology to size power related to the battery based on the lighting
requirements.
2.12
An underwater vehicle’s (UV) navigation dynamics over roll (forward motion), pitch
(up/down motion), and yaw (left/right motion) are highly dependent on the pressure,
depth, tide, weather (ﬂuid density and speed), propeller diameter, torque, and volumet-
ric ﬂow rate. Consider a simpliﬁed UV driven by an electric propeller on the tail and
three motor-driven wing tips, as illustrated in Figure 2.34. As such, the synchronization
of all the UV motors’ speeds and directions is required.
a) Perform the functional decomposition of the 3D UV navigation system into subcom-
ponents.
b) List all relevant UV navigation system parameters and variables when it is only mov-
ing due to its propeller, which is capable of generating the required hovering force.
c) Discuss the implications of the following assumptions:
i) the center of mass coincides with the center of buoyancy;
ii) the mass distribution is homogeneous;
iii) third- and higher-order hydrodynamic drag terms are neglected;
iv) yaw, pitch, and roll motions can be neglected;
v) weight force and the upward Archimedes force are not applied at exactly the same
point.
d) Recall from ﬂuid dynamics, an immersed object displaces a certain volume of sur-
rounding ﬂuid, called the added mass Maddedmass. Consider u(t) as the linear velocity,
muv as the mass of the UV, cross-ﬂow drag, and propeller thrust force Fpropeller(t) 𝜌
is the water density and Kf is the axial ﬂow form factor, which has to be identiﬁed.
By applying Newton’s ﬁrst principle to the center of gravity of the UV depicted in
Figure 2.34 for one degree of freedom, derive the dynamics equation relating its speed
and all forces involved.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
101
Table 2.28 Typical operating conditions of a solar-based heating process.
Time
(hour)
Chamber 1
temperature
Tc(t) (∘C)
Chamber 1
humidity %
Ambient/
chamber 2
temperature
Ta(t) (∘C)
Ambient/
chamber 2
humidity
Ha(t) (%)
6 a.m.
0.0
−6
1
0
7 a.m.
0.0
−7
1
0
8 a.m.
0.7
−5
1
0
9 a.m.
1.8
−2
1
0.39
10 a.m.
2.2
1
0
0.63
11 a.m.
2.4
3
0
0.77
12 a.m.
3.1
3
0
0.86
1 p.m.
3.0
4
0
0.52
2 p.m.
2.5
5
0
0.31
3 p.m.
2.0
5
0
0.19
4 p.m.
1.3
4
1
0.11
5 p.m.
0.3
0
1
0.07
6 p.m.
0.0
−2
1
0.04
2.13
Consider the climate change modeling of a barn with two rooms, developed as depicted
in Figure 2.27. The pig barn is divided into distinct climatic zones with speciﬁc humidity
and temperature characteristics.
a) Discuss the implications of the following assumptions:
i) zone climates aﬀect each other by the presence of internal air ﬂow;
ii) there is no signiﬁcant climate gradient within the barn;
iii) the pressure dynamics are an order of magnitude greater than the climate dynam-
ics.
b) Consider temperature changes within the pig barn building for a 1-day period sum-
marized in Table 2.28. The stochastic model structure and order are given by:
C1
dT1(t)
dt
= T1(t) −T2(t)
R1
+ Ta(t) −T1(t)
Ro
+ 𝜙+ AΦ
where Φ is the solar radiation, 𝜙the heating system, C1, the heat capacity, T1(t) the
temperature in the ﬁrst zone of the barn and T2(t) the temperature in the second
zone of the barn, R1 is the resistance to heat transfer to the second zone, Ta(t) is the
ambient temperature, and A is the area to the outside. R0 is the resistance to heat
transfer between inside and outside. Based on process data and this model structure,
apply the least-square estimation method to derive the model.
2.14
A hot rolling mill process consists of reducing the thickness of a metal sheet by passing
it several times between two parallel rolls that compress it, as illustrated in Figure 2.35.
Here, the screws attached to the roll and driven by two DC motors are used for large
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

102
2 Physics-Based Systems and Processes: Dynamics Modeling
Conveyor
Thickness
reduction
vn(t)
Hn
Hn+1
hn+1
hn
n+1th stand
θ
Vn+1(t)
αn+1
αn
σ(t)
L
Looper
(Tensometer)
Strip (preheated steel plate)
Electric
motor
Work roll
speed
ω(t)
Pn
Pn+1
el
Screw-based
positioning
system
Electric
motor
nth stand
σ(t)
Roll vertical
movement
Figure 2.35 Roll mill two-stand schematic.
position changes between passes. The metal plate thickness depends on the roll position,
the rolling force, the plate thickness, and its temperature.
Considering that plate roll eccentricity has to be avoided:
a) Discuss the implications of the assumption that the temperature variations are due
to inhomogeneous heating by reheating furnaces and inhomogeneous cooling by the
roller tables during plate transportation.
b) Elaborate a thickness and tension modeling strategy by capturing the relationship
between tension and speed (Hint: the rolling force equation is a function of the entry
thickness, exit thickness, and tension at the front of the stand.)
c) Using the rolling mill illustrated in Figure 2.35, apply Newton’s law to derive
the dynamics equations relating the metal plate thickness reduction to the roller
position, rolling force, pressure, conveyor speed, and plate temperature after
each pass.
Bibliography
1 Baik, O.D., Grabowski, S., Trigui, M. et al. (1999). Heat transfer coeﬃcients on cakes baked
in a tunnel type industrial oven. Journal Food Science 64 (4): 688–694.
2 Bergman, R.N., Ider, Y.Z., Bowden, C.R., and Cobelli, C. (1979). Quantitative estimation
of insulin sensitivity. American Journal Physiology-Endocrinology and Metabolism 236:
E667–E677.
3 Burton, T., Sharpe, D., Jenkins, N., and Bossanyi, E. (2001). Wind Energy Handbook, vol. 1.
Chichester, UK: Wiley.
4 Carsonc, E. and Cobelli, C. (2001). Modeling Methodology For Physiology and Medicine. San
Diego, CA: Academic Press.
5 Cinar, A. (2003). Batch Fermentation: Modeling, Monitoring, and Control. CRC Press.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Bibliography
103
6 Omstead, D.R. (1989). Computer Control of Fermentation Processes. CRC Press.
7 Friis-Jensen E. Modeling and Simulation of Glucose-Insulin Metabolism. Ph.D. Thesis, Tech-
nical University of Denmark, Kongens Lyngby, Denmark, May, 2007.
8 Fox, J.A. (1977). Hydraulic Analysis of Unsteady Flow in Pipe Networks. London, UK: The
MacMillan Press Ltd.
9 Furnass, R.J. and Ulsoy, A.G. Dynamics modeling of thrust force and torque for drilling. In:
Proceedings of the American Control Conference, 384–390. Chicago, IL.
10 Gay, S.E., Emadi, A., Ehsani, M., and Gao, Y. (2004). Modern Electric, Hybrid Electric, and
Fuel Cell Vehicles: Fundamentals, Theory, and Design. CRC Press.
11 Groover, M.P. (2007). Fundamental of Modern Manufacturing. Wiley.
12 Lyon, A. and Püschner, P. (2010). ThermoMonitoring: A Step Forward in Neonatal Intensive
Care. Germany: Drägerwerk AG & Co.
13 Marcotte, M. (2007). Heat transfer in food processing. In: WIT Transactions on State of
the Art in Science and Engineering, vol. 13 (ed. S. Yanniotis and B. Sundén), 27. WIT Press
https://doi.org/10.2495/978-1-85312-932-2/08.
14 Perez, J.M.R., Golombek, S.G., Fajardo, C., and Sola, A. (2013). A laminar ﬂow unit for the
care of critically ill newborn infants. Medical Devices: Evidence and Research 6: 163–167.
15 Boothnyd, G. and Knight, W.A. (1989). Fundamentals of Metal Cutting and Machine Tools.
New York: Marcel Dekker.
16 Kalpakjian, S. and Schmid, R.S. (2001). Manufacturing Engineering and Technology. Prentice
Hall.
17 Olsen, B., Shaw, S.W., and Stepan, G. (2003). Nonlinear dynamics of vehicles. Vehicle System
Dynamics 40 (6): 377–399.
18 Rath G., Model based Thickness Control of The Cold Strip Rolling Process, D.S. thesis, Uni-
versity of Leoben, Austria, 2000.
19 Roﬀel, B. and Betlem, B. (2006). Process Dynamics and Control Modeling for Control and
Prediction. Wiley.
20 Simon-Santos A. Contribution a la Conception des Sous-Marins Autonomes : Architecture
des Actionneurs, Architecture des Capteurs d’Altitude, et Commandes Référencées Capteurs,
Ph.D. thesis, Ecole Nationale Supérieure des Mines de Paris, 1995.
21 Shaw, M.C. (1984). Metal Cutting Principles. Oxford University Press.
22 Sorensen J.T., A Physiologic Model of Glucose Metabolism in Man and Its Use to Design and
Access Improved Insulin Therapies for Diabetes, Ph.D. thesis, MIT, Cambridge, MA, 1985.
23 Wellstead, P.E. (1979). Introduction to Physical System Modeling. Academic Press.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

105
3
Discrete-Time Modeling and Conversion Methods
3.1
Introduction
Typical electrically-driven system and process signals (e.g. volts, pressure etc.) require a digital
approximation in time and quantization in magnitude before being processed in computer
operations such as signal sampling, control program execution, and converted signal (data)
storage. This is achieved by using signal conversion instrumentation that enables transducing
and scaling of analog into digitally-processed signals or vice versa. These devices allow any con-
verted discrete signal to be a good approximation of the equivalent analog signal processing. In
addition, signal conversion has to be carried out in real time. Subsequently, the characterization
or modeling of discrete-time process signals can be derived by using diﬀerence equation,
z-transform, discrete Fourier transform, or signal converting devices (e.g. transformations
such as impulse-invariant or step-invariant, hold elements such as zero-order, ﬁrst-order, etc.).
In this chapter, preliminary discrete approximation tools of continuous systems are reviewed.
Here, modeling techniques to derive discrete approximations of continuous systems, digital
signal processing, and approximation of an analog signal to derive a discrete dynamics model
are discussed. A technological-based description of computer control architecture and inter-
face is given with respect to data acquisition (DAQ) unit operations (e.g. successive approxi-
mation, dual-slope analog-to-digital converters (ADC), Delta-encoded ADC conversion tech-
niques etc.) from bus structure to data gathering, logging, and processing with respect to signal
noise reduction and approximation considerations. The limitations on the sampling period
with respect to the quality of discrete model approximations and its eﬀect on controller com-
puting delays, along with methodology for selection of the sample period, are also covered.
Overall, topics include continuous signal digital conversion and reconstruction technology and
discrete-time command sequence generation, computer control interface, and sample time
selection.
3.2
Digital Signal Processing Preliminaries
3.2.1
Digital Signal Characterization
Typical digital signal processing and process signals manipulation are illustrated in Figure 3.1.
Here, a periodic detection of a continuous signal x(t), by switching the opening and closing
of a device at a frequency time 1∕T for a very small time duration p, could lead to a sampled
chain of impulses x∗
p(n) with a magnitude nearly equal to the sampled value of x(t) at the sam-
pling instants. Such signals are called discrete-time signals or digital signals that could be real
or complex, and a time-varying chain of numbers X(n), usually at equally spaced intervals, so
Control Of Mechatronic Systems: Model-Driven Design And Implementation Guidelines,
First Edition. Patrick O.J. Kaltjob.
© 2021 Patrick O.J. Kaltjob. Published 2021 by John Wiley & Sons Ltd.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

106
3 Discrete-Time Modeling and Conversion Methods
Hold
element
Sensors
Model
Computer interface
DAC
Continuous
manipulated
signal, m(t)
Process
Command and control 
computing system and algorithms
Switch
(n)
(n)
(e.g Volt)
(e.g. Volt)
Continuous
process output
signal, x(t)
time
Time
Sampler (switch)
T
p
T
Digital control 
or command 
signal, m(n)
(bit)
(bit)
T
(bit)
(n)
T
xp*(n)
x*(n)
ADC
Figure 3.1 Generic digital processing of continuous process signals.
that t = nT leads to x(t) ≈x(nT). Hence, these signals can be derived either through continu-
ous signal sampling and quantizing at equal time intervals, or by collecting discrete values of
variables at equal time intervals over a period of time.
For the purpose of model analysis, it is useful to have a mathematical description of these
digital signals. These signals can be mathematically captured either using: (i) their discrete-time
value signal characteristics such as their sample amplitudes and their corresponding time
values; or (ii) their discrete-time sinusoidal signal characteristics such as their frequency,
amplitude and phase values. The sequence of sample signals is characterized by a temporal or
spatial domain representation in the ﬁrst case, whereas in the second case it is done through
a frequency domain representation. Signals are converted from the temporal or space domain
to the frequency domain, usually through the Fourier transform. The Fourier transform
converts the signal information to a magnitude and phase component of each frequency.
Often, the Fourier transform is converted to the power spectrum, which is the magnitude of
each frequency component squared.
For the temporal and spatial domain representation, Figure 3.2(a) illustrates the signals unit
sample train (sequence) from an ideal sampler such that:
𝛿(n) =
{
0
for
n ≠0
1
for
n = 0
(3.1)
Each unit sample signal 𝛿(n) has unity value at n = 0 and zero everywhere else. Hence, it is
used to describe an output sampler signal sequence x*(n), which is a train of unit samples that
have nonzero values only between the time delay T at 0, 1T, 2T, 3T, … , nT and the correspond-
ing amplitudes A(0), A(1T), A(2T), A(3T), … , A(nT), as shown in Figure 3.2(b).
Then, from the graphical representation of the discrete-time signal in Figure 3.2(b) and
assuming after each sampling the value of x*(n) remains constant until the following next
sample, a mathematical representation for the sequence x*(n) yields:
x∗(n) = … + A(−2T)𝛿(n + 2) + A(−T)𝛿(n + 1) + A(0)𝛿(n) + A(T)𝛿(n −1) + …
(3.2)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.2 Digital Signal Processing Preliminaries
107
p
x*p(n)
time
Hold/Latch
duration, p
T
2T
3T
4T
5T
Switching
period, T
x(t)
time
–3T
–2T
0
x*(n)
6T
1T
2T
3T
4T
5T
A(–3T)
nth samples
A(0)
A(T)
A(6T)
δ(–3)
0
–1T
–2T
–3T
A(–2T)
A(–1T)
A(2T)
A(3T)
A(4T)
A(4T)
δ(0)
δ(2)
δ(4)
δ(6)
(a)
(b)
Figure 3.2 (a) Continuous function x(t) and output of a generic sampler x*
p(n). (b) Equivalent discrete-time
signal x*(n).
which could be equivalent in the generic form of:
x∗(n) =
+∞
∑
−∞
A(kT)𝛿(n −k)
(3.3a)
while from the frequency representation, the sampler sequence x*(n) would yield:
x∗(n) = rnej𝜃n = rn(cos 𝜃n + j sin 𝜃n)
(3.3b)
Deﬁning for any n being an integer n = t∕T, and any T sample period, and using a backward
shift z−k in Equation (3.1), this yields:
𝛿(n −k) = z−k𝛿(n)
(3.4)
with k being an integer. Therefore, a function x(t) can be described by summing the translated
and scaled unit sequence of samples in the form of:
x∗(n) =
+∞
∑
−∞
x(kT)𝛿(n −k) =
+∞
∑
−∞
x(kT)z−k𝛿(n)
(3.5)
with x(kT) being the value of function x(t) at t = kT.
Example 3.1
The sample sequence of the ramp input in Figure 3.3 is given by:
x∗(n) = … + 0𝛿(n + 1) + 0𝛿(n) + A(T)𝛿(n −1) + A(2T)𝛿(n −2) + A(3T)𝛿(n −3) + …
with a slope of A
x∗(n) = … + 0𝛿(n + 1) + 0𝛿(n) + AT𝛿(n −1) + 2AT𝛿(n −2) + 3AT𝛿(n −3) + …
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

108
3 Discrete-Time Modeling and Conversion Methods
AT
2AT
3AT
4AT
5AT
6AT
1T
2T
3T
4T
5T
6T
x*(t)
x*(n)
kT, time
Motor
speed
(rad s–1)
A(T)
A(2T)
A(3T)
A(4T)
A(5T)
A(6T)
Figure 3.3 Discrete-time ramp-like signal.
which could be simpliﬁed as:
x∗(n) = AT(… + 0𝛿(n + 1) + 0𝛿(n) + 𝛿(n −1) + 2𝛿(n −2) + 3𝛿(n −3) + …)
equivalent to:
x∗(n) = AT(… + 0z + 0z0 + 1z−1 + 2z−2 + 3z−3 + …)𝛿(n)
and from the inﬁnite series, the function can be simpliﬁed to
x∗(n) =
ATz−1
(1 −z−1)2 𝛿(n)
Hence, any time-varying signal sampled at equally spaced time intervals can be represented
by sequence process data information called a sample sequence or time series. Indeed,
time-varying process inputs can be described as time series, which could be simpliﬁed. A
more detailed table of equivalence between the diﬀerential equation and diﬀerence equation
is shown in Appendix C, while some examples are depicted in Table 3.1.
Table 3.1 Examples of signals equivalence between
continuous and discrete domain.
Continuous-time
domain
Laplace
domain
Discrete-time
domain
h(t)
H(s)
H(z)
u(t)
1
s
z
(z −1)
t
1
s2
Tz−1
(1 −z−1)2
t2
2
1
s3
T2z(z + 1)
2(z −1)3
e−at
1
s + a
z
z −e−aT
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.2 Digital Signal Processing Preliminaries
109
3.2.2
Diﬀerence Equation: Discrete-Time Signal Characterization Using
Approximation Methods
It is possible to characterize a discrete process dynamical by a model of the relationship of
any process input signal sequence to an output signal sequence, called the diﬀerence equation.
There are several algorithms for obtaining diﬀerence equations from diﬀerential equations.
These are also known as numerical methods for solving diﬀerential equations, and a ﬁrst-order
diﬀerential equation is used in the form of:
dx(t)
dt
= f (x(t), t)
(3.6)
This could be extended for the higher derivatives. As depicted in Figure 3.4, by using numer-
ical integration, there are three common ways to approximate the area:
• forward rectangle (approximately by looking forward from)
• backward rectangle (approximately by looking backward from)
• trapezoid (approximately by average)
Recall that the signals are considered discrete in time for discrete values t = kT = tk with
k = 0, 1, 2, … Hence, the discrete-time ﬁrst derivative is approximated. Then, in order to derive
the discrete-time model equivalent of the system diﬀerential equation, numerical integration
techniques could be used as follows.
3.2.2.1
Numerical Approximation Using Forward Diﬀerence
By deﬁnition, the ﬁrst derivative for a continuous function x(t) at a point t is:
dx(t)
dt
= lim
Δt→0
x(t + Δt) −x(t)
Δt
(3.7)
If the time is discretized and the time increment equals the sampling period such that Δt = T
and it is small enough, the derivative can be replaced by:
dx(t)
dt
≈x(tk + Δt) −x(tk)
Δtk
= x(kT + T) −x(kT)
T
= xk+1 −xk
T
(3.8)
This recursive iterative algorithm depends on the sampling period. The higher the sampling
period, the wider the approximation error using this method will be. This causes the discrete
Figure 3.4 Discrete integration using
backward, forward, and bilinear
transformation.
Backward
rectangular
discretization
Forward
rectangular
discretization
Trapezoidal
discretization
T
T
T
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

110
3 Discrete-Time Modeling and Conversion Methods
equivalent signal to be less accurate. However, the selection of a proper sampling or step size
is bounded by the speed of the digital processing unit. The remarks concerning the selection
of sampling period are also valid in this case. This method approximates the derivative by a
forward diﬀerence. It can be applied to determine the next discrete-time value (e.g. solving a
model oﬀ-line) but it cannot be used to estimate the derivative’s value at a moment when only
previous samples are available (e.g. in the case of on-line real-time applications such as control
or identiﬁcation). In these cases, the backward diﬀerence method is used.
3.2.2.2
Numerical Equivalence Using Backward Diﬀerence
The derivative can also be approximated with the expression:
dx(t)
dt
≈x(tk) −x(tk −Δt)−
Δtk
= x(kT) −x(kT −T)
T
= xk −xk−1
T
(3.9)
This recursive equation can be easily implemented on a computer as it is based on previous
process data. The method can be easily extended such that, for a second-order diﬀerential, it
results in:
d2x(t)
dt2
= lim
Δt→0
dx(t)
dt −dx(t−Δt)
dt
−
Δt
≅
Δx(tk)
Δtk
−Δx(tk−Δtk)
Δtk
Δtk
=
xk−xk−1
T
−xk−1−xk−2
T
T
= xk −2xk−1 + xk−2
T2
(3.10)
that is, a second-order (two steps behind) expression. Using the backward shift z−1, the equiv-
alence yields:
z−1 = e−sTs ≈1 −sTs ⇒s = 1 −z−1
Ts
(3.11)
Thus, this discretization maps the left-half of the s-plane to a circle of radius of 0.5 on the
right half of the z-plane.
3.2.2.3
Numerical Equivalence Using Bilinear Transform
The function x(t) is given by integrating it between two successive sampling instants, which
results in:
∫
tk+1
tk
̇x(t)dt = ̇x(k) + ̇x(k + 1)
2
≈x(k + 1) −x(k)
T
(3.12)
Thus, the trapezoidal approach gives a reﬁned signal approximation. If the ﬁrst-order Padé
approximation of z−1 is used instead of a ﬁrst-order series approximation as mentioned above,
then the approximation yields:
z−1 = e−sT ≈
1 −T
2 s
1 + T
2 s
⇒s = 2(1 −z−1)
T(1 + z−1)
(3.13)
By translating into a frequency domain, some warping in frequency occurs when the sam-
ple frequency is low with respect to system dynamics. Hence, each discrete-time left-shift by
n corresponds to the zn multiplying factor in the pulse transform or the z-transform and each
dn∕dtn in continuous-time domain corresponds to the ansn multiplying factor in the Laplace
transform. It should be noticed that there are higher distortions with the forward and backward
rule. The trapezoid rule oﬀers a better approximation, even if it requires a prewarping, to main-
tain the power at some speciﬁed frequency. Table 3.2 summarizes some typical approximation
methods.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.2 Digital Signal Processing Preliminaries
111
Table 3.2 Table of equivalence based on numerical approximation techniques.
Approximation
method
Diﬀerential equation
to be derived
z- to s-domain
approximation
s- to z-domain
approximation
Equivalent function
in the z-domain H(z)
Forward
diﬀerence
̇x(k) ≈x(k + 1) −x(k)
T
z = 1 + Ts
s = z −1
T
Hf (z) =
a
z−1
T + a
Backward
diﬀerence
̇x(k + 1) ≈x(k + 1) −x(k)
T
z =
1
1 −Ts
sT = z −1
z
Hb(z) =
a
z−1
Tz + a
Trapezoid rule
(bilinear
transform)
̇x(k) + ̇x(k + 1)
2
≈x(k + 1) −x(k)
T
z =
1 +
(
T
2
)
s
1 −
(
T
2
)
s
s + sz
2
= z −1
T
Ht(z) =
a
2
T
z−1
z+1 + a
Example 3.2
Discretization of a Nonlinear Model
Consider a process model given by:
̇x(t) = −
√
2x(t) + Au(t)
Using the backward diﬀerence, this leads to a nonlinear expression given by:
x(k + 1) ≈x(k) + T(−
√
2x(k) + Au(k))
While using the forward diﬀerence, it would yield:
x(k) ≈x(k −1) + T(−
√
2x(k −1) + Au(k −1))
Such equations can be solved iteratively.
Example 3.3
Comparison of Discrete Equivalences
Consider a low-pass ﬁlter with a cutoﬀfrequency of 3 rad s−1 being equivalent to:
H(s) =
3
s + 3
The magnitude and angle of H(s) at the cutoﬀfrequency at s = j𝜔= j3 such that:
|H(j𝜔)||j𝜔=j3 = ||||
3
j3 + 3
||||
=
√
32
√
32 + 32 = 0.7071 ↔20log100.707 = −3.01 dB
∠H(j𝜔) = ∠H(j3) = ∠
3
j3 + 3 = arg(3) −arg(3i + 3) = −𝜋
4 = −45∘
This angle lies between ±𝜋(real axis).
angle((3)/(3+3i));
abs((3)/(3+3i));
Choosing a sampling frequency of fs = 100 Hz, thus T = 0.01 s.
Forward rectangular rule s = z−1
T = 100(z −1)
Therefore,
HF(z) =
3
100z −100 + 3 =
3
100z −97
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

112
3 Discrete-Time Modeling and Conversion Methods
This simulation has no zeros, a pole at z = 0.97, and a DC gain of 0.309. To ﬁnd the magnitude
and angle at 3 rad s−1, let
z = ej𝜔T = ej3(0.01) = ej(0.03) = cos(0.03) + j sin(0.03) = 0.999 + j0.03
And by substitution it yields:
HF(ej(0.03)) =
3
2.9 + j3
|HF(z)| = 0.7190 = −2.8654 dB
∠HF(z) = −45.9710∘
Backward rectangular rule
(
s = z −1
Tz
= 100
(z −1
z
))
Therefore,
HB(z) =
3z
103z + 100
This simulation has a zero at z = 0 and a pole at z = 1.03. Using
z = ej𝜔T = ej3(0.01) = 0.999 + j0.03
and
HB(ej3(0.01)) = 2.997 + j0.09
2.897 + j3.09
|HB(ej3(0.01))| = 0.7079 = −3.006 dB
∠HB(ej3(0.01)) = −45.13∘
Trapezoidal rule
(
s = 2
T
z −1
z + 1 = 200
(z −1
z + 1
))
Therefore,
HT(z) =
3(z + 1)
203z −197
This simulation has a zero at −1 and a pole at 0.9704. Using z = ej𝜔T, the transfer function
yields:
HT(ej3(0.01)) = 5.997 + j0.09
5.797 + j6.09
|HT(ej3(0.01))| = 0.7133 = −2.9346 dB
∠HT(ej3(0.01)) = −45.552∘
At a high sampling frequency, the trapezoidal and backward are the preferred rules to approx-
imate the system frequency response. However, there is a large variety of diﬀerential equations
as well as several other numerical methods to solve them, such as the predictor-corrector
method and the Runge–Kutta family of algorithms. The predictor-corrector algorithm is based
on the Euler method but has a greater accuracy. It combines the Euler “prediction” method
with the trapezoidal “correction” method of integration.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.2 Digital Signal Processing Preliminaries
113
Table 3.3 DC motor speed values for
diﬀerent times.
t
𝝎(t) = 𝟒(𝟏−e−t)
0
0
1
2.5285
2
3.4587
3
3.8009
4
3.9267
Example 3.4
Consider the ﬁrst order model of the DC motor given by:
Rb + Kem
2
Kem
Ω(t) + RJ
Kem
dΩ(t)
dt
= V(t)
The corresponding diﬀerential equation and solution are, respectively:
𝜔(t) + 𝜏d𝜔(t)
dt
= KV(t)
with 𝜏= 1 min and K = 0.4 rev min−1 V−1, v(t) = 10 V for t≥0, and the initial condition is
𝜔(0) = 0.
𝜔(t) = 4(1 −e−t)
Applying numerical values for 1-minute increments, it yields the results summarized in
Table 3.3.
For t = T, the solution is given by
𝜔(T) = Ce−T∕t + Kv0
with C being determined by the initial condition as:
C = 𝜔0 −Kv0
Thus,
𝜔(T) = 𝜔0e−T∕𝜏+ Kv0(1 −e−T∕𝜏)
The ﬁrst-order diﬀerence equation is then given by (Figure 3.5):
𝜔(n) −e−T∕𝜏𝜔(n −1) = K(1 −e−T∕𝜏)v(n −1)
If the sample period is chosen as T = 1 min, the constants in the diﬀerence equation are:
e−T∕𝜏= e−1 = 0.368
K(1 −e−T∕𝜏) = 0.4(0.632) = 0.2528
Thus, the diﬀerence equation is given as:
𝜔(n) = 0.368𝜔(n −1) + 0.2528v(n −1)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

114
3 Discrete-Time Modeling and Conversion Methods
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
Time (min)
Motor speed step response (rad s–1)
*
*
*
*
*
*
Figure 3.5 Continuous-time and discrete-time equivalent step response.
with an initial condition 𝜔(0) = 0 and with v(n) = 10 V for n = 0, 1, 2, 3, by using the previous
diﬀerence equation, the following discrete values can be derived:
𝜔(0) = 0
𝜔(1) = 0(0.368) + 0.2528(10) = 2.528
𝜔(2) = 2.528(0.368) + 0.2528(10) = 3.458
𝜔(3) = 3.458(0.368) + 0.2528(10) = 3.8006
𝜔(4) = 3.8006(0.368) + 0.2528(10) = 3.9266
This recursive method, consisting of computing the sampled output from the previous sam-
pled input, produces exactly the same result as the solution of the diﬀerential equation. But this
method, in contrast to the diﬀerential equation, does not hold information about the response
of the process at times other than the sample times t=0, 1, 2,…min.
clear all;clf; w0 = 0; K = 0.4;
v = 10;
for i = 1:1:6;
w(1)=w0; w_cont(1)=w0;
w(i+1) = exp(-1)*w(i)+K*v*(1-exp(-1));
w_cont(i+1) = ((w0-K*v)*exp(-i))-(w0-K*v);
end;
t=[0:1:6];figure(1);plot(t,w,'*red',t,w_cont,'-blue');xlabel('Time (min)');
ylabel('Motor speed step response (rad/sec)');grid;axis([0 5 0 5]);
Example 3.5
As illustrated in Figure 3.6, in the case of a varying input between the sample
periods and with v(n) = {10, 5, 2}, V for n = 0, 1, 2 and for n ≥3 v(n) = 0.
Then, using the recursive method, this yields:
𝜔(0) = 0
𝜔(1) = 0(0.368) + 1.264(10) = 1.264
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.2 Digital Signal Processing Preliminaries
115
0
1
2
3
4
5
6
7
8
0
0.5
1
1.5
Sample
Motor speed step response (rev min–1)
Figure 3.6 Continuous-time and discrete-time equivalent step response for varying inputs.
𝜔(2) = 1.264(0.368) + 1.264(5) = 1.097
𝜔(3) = 1.097(0.368) + 1.264(2) = 0.656
𝜔(4) = 0.656(0.368) + 1.264(0) = 0.242
𝜔(5) = 0.242(0.368) + 0 = 0.089
𝜔(6) = 0.089(0.368) + 0 = 0.033
The assumption of constant input between sample periods is required. Some solutions from
the process diﬀerence equation model are listed in Table C2 in Appendix C.
clear all;clf;w0=0;K=0.2;v1=10;v2=5;v3=2;v=0;u(1)=0;
for i = 1:1:4;
w(1)=w0;
w_cont(1)=0; w_cont(2)=0; w_cont(3)=0; w_cont(4)=0;w_cont(5)=0;
w(2) = exp(-1)*w(1)+K*v1*(1-exp(-1));
w(3) = exp(-1)*w(2)+K*v2*(1-exp(-1));
w(4) = exp(-1)*w(3)+K*v3*(1-exp(-1));
w(5) = exp(-1)*w(4)+K*v*(1-exp(-1));
w(i+5) = exp(-1)*w(i+4)+K*v*(1-exp(-1));
w_cont(i+5) =((w(1)-K*v)*exp(-i))-(w(1)-K*v);
end;
t=[0:1:8];plot(t,w,'*red');hold on;plot(t,w,'blue');xlabel('Sample');
ylabel('Motor speed step response (rev/min)'); grid; axis([0 8 0 1.5]);
Example 3.6
Consider the dead time process inherent in most of the processes with a ﬂuid
transportation lag or dead time, D. Here, the output is identical to the input, except that the
output lags behind the input by some samples period d.
Tout = Tin−d
where d = D∕T must be an integer; if not it should be rounded up to the highest integer.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

116
3 Discrete-Time Modeling and Conversion Methods
A Discrete-Time Approximation Method using Zero-Pole Matching Equivalence
Another discrete approximation method consists of matching poles in the Laplace transform
of a continuous-time signal with those in z of signal samples according to z = esT equivalence.
The idea of zero-pole matching is to use this mapping to determine the location of zeros as well.
The matching equivalence procedure is outlined next.
1) All poles of H(s) are mapped to poles of H(z) using z = esT. For example, s −a = 0 maps to
z = e−aT;
2) Similarly, map ﬁnite zeros (if any) of H(s) to zeros of H(z) using z = esT. For example,
s −b = 0 maps to z = e−bT;
3) Map zeros at inﬁnity (recall that H(s) always has an equal number of poles and zeros, with
perhaps some zeros at ∞) to z = −1. Basically, zero at j𝜔= ∞maps to z = e−jp = −1 (rep-
resenting the highest frequency);
4) Let m and n be the degrees of numerator and denominator of a continuous-time transfer
function, then,
H(s) = (s + d1)(s + d2) … (s + dm)
(s + a1)(s + a2) … (s + an)
(3.14)
If m < n, then the system will have n −m zeros at inﬁnity. Each continuous-time zero at
s = 1 is mapped to a discrete-time zero at z = j1. The rationale is that it is preferable that
the highest continuous-time frequency of s = j1 corresponds to the highest discrete-time
frequency of 2z = ej T
4 for T = −1.
5) Set the DC gain of H(z) to match the gain of H(s) at the critical frequency (typically s = 0).
Here, H(s) at s = 0 is equivalent to H(z) at z = 1 (i.e. H(z)|z=1 = H(s)|s=0). Thus, this consists
of adjusting the gain of the discrete equivalent to equal continuous-time and discrete-time
systems gains at a pre-speciﬁed frequency, in the form of the following equality:
Hzp(ej𝜔oT) = H(j𝜔o)
(3.15)
Often in practice, this requires DC gains to be equal so that it yields:
Hzp(1) = H(0)
(3.16)
Therefore, from a generic continuous system transfer function factored in the form:
G(s) = kc(s + d1)(s + d2) … (s + di)
(s + a1)(s + a2) … (s + an)
(3.17)
where the poles of the process transfer function are −a1, −a2, … , −an and the zeros are
−d1, −d2, … , −dj. Some of the poles may be complex conjugates, as well as some of the
zeros. Using the relationship z = esT, the discrete transfer function becomes:
G(z) = k′
c(1 −e−d1Tz−1)(1 −e−d2Tz−1) … (1 −e−diTz−1)
(1 −e−a1Tz−1)(1 −e−a2Tz−1) … (1 −e−anTz−1)
(3.18)
The gain k′
c is usually set so that the magnitude of the discrete controller frequency response
is the same as the continuous controller at some critical frequency. If this frequency is 𝜔= 0,
then it can be derived as:
kc
, = kc(1 −e−a1Tz−1)(1 −e−a2Tz−1) … (1 −e−aiTz−1)
(1 −e−d1Tz−1)(1 −e−d2Tz−1) … (1 −e−dnTz−1)
(3.19)
Results from the pole-zero mapping simulation are less accurate than the trapezoidal and
prewarped rules. The mapping between the s- and the z-planes breaks down (actually it
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.2 Digital Signal Processing Preliminaries
117
becomes non-unique) as s →j𝜋
T , or s →j𝜔
2 , half the sampling frequency. From resulting Bode
plots, the forward and backward methods are the worst, one being too high in magnitude
and the other too low. The trapezoidal, prewarped, and pole-zero mapping simulations are
similar. Note that all methods behave very poorly as the frequency approaches one-half the
sampling frequency or 𝜔= 2𝜋f ≈63 rad s−1.
SYSD = C2D(SYSC,Ts,METHOD) converts the continuous-time LTI
model SYSC to a discrete-time model SYSD with sample time Ts.
The string METHOD selects the discretization method among the following:
‘zoh’ Zero-order hold on the inputs
‘foh’ Linear interpolation of inputs (triangle approx.)
‘imp’ Impulse-invariant discretization
‘tustin’ Bilinear (Tustin) approximation
‘matched’ Matched pole-zero method (for single input single output (SISO) sys-
tems only).
‘prewarp’ Tustin approximation with frequency prewarping.
The critical frequency Wc (in rad s-1) from
SYSD = C2D(SYSC,Ts,‘prewarp’,Wc)
The default is ‘zoh’ when METHOD is omitted.
3.2.3
Z-Transform and Inverse Z-Transform: Theorems and Properties
Consider a discrete-time signal x(t) sampled every T seconds with amplitudes of X(0), X(1T),
and so on.
x(t) = X(0)𝛿(t) + X(T)𝛿(t −T) + X(2T)𝛿(t −2T) + X(3T)𝛿(t −3T) + …
(3.20)
Recalling that the Laplace transform of a unit impulse is given by:
L{𝛿(t)} = ∫
∞
0
𝛿(t)e−stdt = lim
Δt→0
(
1 −e−sΔt
sΔt
)
= lim
Δt→0
(
se−sΔt
s
)
= 1
(3.21)
It could be derived that
L{𝛿(t −kT)} = e−sKT
(3.22)
The z-transformation of complex variables can be deﬁned such that:
z = esT = e(𝜎+j𝜔)T = e𝜎T cos 𝜔T + je𝜎T sin 𝜔T
(3.23)
Hence, considering n = kT and the function x(t) being a train of impulses equally spaced
by Δt(Δt →0) with constant amplitudes are X(T), X(2T) … , its Laplace transformation
would yield:
L{x(t)} = X(s) = X(0) + X(1T)e−sT + … + X(2T)e−s2T =
∞
∑
k=0
X(kT)e−skT
=
∞
∑
k=0
X(kT)z−n = X(z)
(3.24)
This is equivalent to the conversion from the Laplace transform to the z-transform of the
continuous-time signal x(t) sampled with an interval of T such that:
X(z) = X(0) + X(1T)z−1 + X(2T)z−2 + X(3T)z−3 + … =
∞
∑
n=0
X(n)z−n
(3.25)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

118
3 Discrete-Time Modeling and Conversion Methods
Using only variable z, the z-transform of a sampled sequence x(n) is given by:
X(z) = x(0) + x(1T)z−1 + x(2T)z−2 + x(3T)z−3 + … =
∞
∑
n=0
x(n)z−n
(3.26)
For a SISO discrete-time system, where it is considered a discrete signal sequence expressed
by x(kT) and a sampling period T as a unity, the following theorems can be stated.
Theorem on addition and subtraction:
Z[x1(kT) ± x2(kT)] = X1(z) ± X2(z)
(3.27)
Theorem on multiplication by a constant 𝛼:
Z[𝛼x(kT)] = 𝛼Z[x(kT)] = 𝛼X(z)
(3.28)
Theorem on real translation (time delay and time advance), with n being a positive integer:
Z[x(kT −nT)] = z−nX(z)
(3.29)
and
Z[x(kT + nT)] = z+nY(z)
(3.30)
Theorem on complex translation with 𝛼being a constant:
Z[e±𝛼kTx(kT)] = X(ze±𝛼T)
(3.31)
Theorem on initial value theorem, if the limit exists:
lim
k→0 x(kT) = lim
z→∞X(z)
(3.32)
Theorem on ﬁnal value theorem, for a function having no pole on and outside the unit circle
in the z-plane:
lim
k→∞x(kT) = lim
z→1(1 −z−1)X(z)
(3.33)
Theorem on real convolution:
X1(z)X2(z) = Z[x1(kT)x2(NT −kT)] = Z
[ N
∑
k=0
x2(kT)x1(NT −kT)
]
= Z
[ N
∑
k=0
x1(kT)∗x2(kT)
]
(3.34)
For the inverse z-transformation or transformation back to the time domain, the power series
expansion can be used. The objective is to ﬁnd the time domain function:
x∗(t) = Z−1{X(z)}
(3.35)
For N = 0, 1, 2, … if the function G(z) has the form
X(z) = N(z)
D(z) = c0 + c1z−1 + c2z−2 + …
b0 + b1z−1 + b2z−2 + …
(3.36)
then a long Euclidian division can be used to divide the numerator N(z) by the denominator
D(z) to obtain the power series form of the sampled signal given by:
X(z) = X(0) + X(1)z−1 + X(2)z−2 + …
(3.37)
Then, the transfer function is factored into lower order components using partial fraction
expansion. Table C2 in Appendix C can be used to obtain the inverse transformations. If an
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.2 Digital Signal Processing Preliminaries
119
item in the tables matches the z-transform, the corresponding function x(nT) is the required
inverse transformation. It is important to note that the inverse transformation results in x*(t)
rather than x(t) and that x(nT) is not deﬁned between sample instants.
Example 3.7
Consider a function given by the relationship between the output yand the input
u such that:
y(k) = −a1y(k −1) −a0y(k −2) + b1u(k −1) + b0u(k −2)
Taking the z-transform of both sides of the diﬀerence equation:
Z{y(k)} = Z{−a1y(k −1) −a0y(k −2) + b1u(k −1) + b0u(k −2)}
or
Z{y(k)} = −Z{a1y(k −1)} −Z{a0y(k −2)} + Z{b1u(k −1)} + Z{b0u(k −2)}
or
y(z) = −a1z−1y(z) −a0z−2y(z) + b1z−1u(z) + b0z−2u(z)
or
[1 + a1z−1 + a0z−2]y(z) = [b1z−1 + b0z−2]u(z)
or
y(z)
u(z) =
b1z−1 + b0z−2
1 + a1z−1 + a0z−2 =
b1z + b0
z2 + a1z + a0
3.2.4
Procedure for Discrete-Time Approximation of the Continuous Process Model
Deﬁning the impulse-invariant z-transform being the Laplace transform of sampled impulse
process response after the variable change using z = esT. Using the fact that an impulse signal
over the latch-based digital-to-analog convertor (DAC) results in a step signal for the hold time
period, it is possible to derive the corresponding discrete equivalent signal, as presented in
Table 3.4.
Using a table of equivalence of z-transforms, it is possible to derive the discrete-time model
directly from the model in the Laplace domain obtained in step (ii) or from step (iv) from the
generic procedure before or from that step.
3.2.4.1
Z-Transfer Functions and Block Diagram Manipulation
Models in the form of diﬀerence equations can be transformed directly into z-transfer
functions. A block diagram can be manipulated in the discrete-time domain as in the
continuous-time domain. However, when there is a mixture of system models in both domains,
so that when there is a sampler (with sampling period T) between the transfer function of the
cascaded continuous elements, the following procedure can be used:
1) consider the outputs of samplers as inputs to the system along with all inputs of the system;
2) treat all other inputs of the system as outputs;
3) write, respectively, the inputs and the outputs relationship of the system using the gain for-
mula;
4) take the pulsed transform or the z-transform of the equations obtained in step 3, and manip-
ulate these equations to get the pulse-transfer function or the z-transfer function.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

120
3 Discrete-Time Modeling and Conversion Methods
Table 3.4 General steps for developing discrete-time model of linear time invariant process.
Steps
Illustrative examples
1) Develop a physical process dynam-
ics model, if possible using diﬀerential
equations
Use stochastic approach or apply physics principles or
laws for each process component.
e.g. valve ﬂow rate d𝜃(t)
dt
= q(t)
A .
2) From an ordinary diﬀerential equation
(ODE) description, derive its corre-
sponding Laplace transformation
Select manipulated input and process output variables
from physical model:
L(ODE) = H(s) ⇒f(input = M(s)) including the
eﬀects of initial conditions
e.g. L
{d𝜃(t)
dt
= q(t)
A
}
⇒s𝜑(s) −𝜑(0) = Q(s)
A
3) Derive the model of manipulated step
input and substitute into process model
in Laplace domain
L{Mstepinput} ⇒Mstep(s) = Mstep(t = 0)1
s
e.g. Qstep(s) = qdesired(kT)
s
then for
d𝜃(t)
dt
= q(t)
A
⇒𝜑(s) = 𝜑(0)
s
+ qdesired(0)
As
1
s
4) Find its corresponding continuous-time
process response solution
L−1{𝜑(s)} ⇒𝜃(t) being the response to a step input
given initial conditions.
e.g. 𝜃(t) = 𝜃(t = 0) + qdesired(t = 0)
A
t
5) Set and ﬁnd the sampled process
response
Sample at time t = T, derive the discrete-time
equation for 𝜃(T) using
Mstep(t = 0)1
s and initial conditions.
e.g. 𝜃(T) = 𝜃(t = 0) + qdesired(t = 0)
A
T
6) Find the diﬀerence equation models in
the discrete (sampled) time domain
Generalize this equation here to an arbitrary time kT,
using n = kT
e.g. 𝜃(n + 1) = 𝜃(n) + qdesired(n)
A
T ⇒𝜃(n) =
𝜃(n −1) + qdesired(n −1)
A
T
7) Using backshift properties, ﬁnd the
equivalent model z-transform
Setting Z[x(kT −nT)] = z−nY(z) to transform the
diﬀerence equations using backshift properties
e.g. x(z) = z−1x(z) + qdesired(z)
A
T
8) Find the discrete-time transfer function
for the desired sample outputs given the
(latched) manipulated step inputs
Convert the z-transform of diﬀerence equations for
the desired rational fraction format, e.g.
x(z)
qdesired(z) =
z−1
1 −z−1
T
A
9) Convert it into rational fraction using
long division to check correctness by
comparison with z-transform table of
equivalence
Invert the transfer functions to obtain independent
diﬀerence equations. See Appendix C.
10) Identify the independent or cross cou-
pled diﬀerence equations as needed and
repeat from step (iii);
e.g. If independent equations exist then,
G(z)
H(z) = G(z)
T(z)
T(z)
H(z) →G(z)
T(z) = G(z)
H(z)
( T(z)
H(z)
)−1
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.2 Digital Signal Processing Preliminaries
121
T2
T
vp*(t)
v(t)
x(n)
y(t)
T
T1
xp*(t)
S/H
S/H
T2
v(t)
x(n)
y(t)
T
T1
xp*(t)
S/H
+
–
dc
La
Ra
+
–
ω(t) θ(t)
Tm(t)
Armature circuit (rotor)
M
TL(t)
Ia(t)
EB(t)
Va(t)
J, B
JL
Ka
Ke
Shaft DC motor
Load
Tachometer
DC amplifier
(a)
(b)
(c)
Figure 3.7 (a) System with two samplers. (b) System with a cascaded continuous process with a single sampler.
(c) Schematic of an armature-controlled DC motor.
Some properties of cascaded (series) interconnected continuous-time systems. As illustrated in
Figure 3.7(a), when the two systems are separated by a sampler, the equivalent pulse transform
of the two systems T1, T2 would be equal to the product of the pulse transform of the two
systems. As such, taking the successive pulse transform of both systems would result in:
y(t) = T∗
1 T∗
2 x(n)
As illustrated in Figure 3.7(b), when the two systems T1, T2 are not separated, they have to be
treated as one system when taking the pulse transform. Taking the pulse transform results in:
y(t) = [T1T2]∗x(n)
where in the Laplace domain, it is given by:
[T1T2]∗= 1
T
∞
∑
n=−∞
T1(s + jn𝜔s)T2(s + jn𝜔s)
Example 3.8
A process consists of two integrations in series such as:
dy(t)
dt
= K1m(t)
dc(t)
dt
= K2y(t)
⎫
⎪
⎬
⎪⎭
⇒d2c(t)
dt2
= K1K2m(t)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

122
3 Discrete-Time Modeling and Conversion Methods
The equivalent diﬀerence equation using backshift approximation is given by:
y(n) −y(n −1)
T
= K1m(n −1)
y(z)
m(z) = K1Tz−1
1 −z−1
and
c(z)
y(z) = K2Tz−1
1 −z−1
but
c(z)
m(z) ≠y(z)c(z)
m(z)y(z) = K1K2T2z−2
(1 −z−1)2
Because the variable m(t) is not constant between two consecutive samples as there is no sam-
pler between y(t) and c(t). The correct procedure is to use the combined integration equations
such that:
d2c(t)
dt2
= K1K2m(t)
therefore,
c(z)
m(z) =
K1K2T2
2
z−1(1 + z−1)
(1 −z−1)2
Generally, the continuous-time system model in series must be combined into one
continuous-time model before the discrete transfer function or the diﬀerence equation is
obtained.
Example 3.9
As depicted in Figure 3.7(c), consider a DC motor with a permanent magnet
conﬁguration having a linear torque-speed operating range, as illustrated in Figure 3.7(c).
Table 3.5 summarizes the process variables and parameters involved.
The dynamics model of the DC motor is given by:
𝜔(t) +
RaJeq + LaB
RaB + KbKm
d𝜔(t)
dt
+
LaJeq
RaB + KbKm
d2𝜔(t)
dt2
=
Km
RaB + KbKm
Va(t)
which could be rewritten as:
d𝜃(t)
dt
+
RaJeq + LaB
RaB + KbKm
d2𝜃(t)
dt2
+
LaJeq
RaB + KbKm
d3𝜃(t)
dt3
=
Km
RaB + KbKm
Va(t)
Table 3.5 Some key variables and parameters values of DC motor.
Variables
Description
Parameters
Description and values
v(t)
Ampliﬁer input voltage (V)
B
Motor damping (3 N m.s −1 rad−1)
e(t)
Ampliﬁer output voltage (V)
Ra
Armature resistance (2 Ω)
i(t)
Motor current (A)
La
Armature inductance (3.10−2 H)
T(t)
Motor torque (N m)
Kb
Back emf constant (12 10−2 V s−1 rad−1)
𝜔(t)
Motor velocity (rad s−1)
Km
Motor constant (4.2 10−2 N m A−1)
𝜃(t)
Motor position (rad)
Jeq
Load-motor inertia (40 10−2 N m A−1)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.2 Digital Signal Processing Preliminaries
123
By using values from Table 3.5, the third-order transfer function can be decomposed into a
ﬁrst-order and second-order system, or several ﬁrst-order systems, it could be rewritten as:
d𝜃(t)
dt
+ 0.0042d2𝜃(t)
dt2
+ 1.8 × 10−6 d3𝜃(t)
dt3
= 0.009Va(t)
Considering that the position is sampled at the rate T = 0.02 s, it is suitable to use the
encoder-based absolute position measurement rather than the derived average velocity, such
that taking the Laplace transform yields:
s𝜃(s) +
RaJeq + LaB
RaB + KbKm
s2𝜃(s) +
LaJeq
RaB + KbKm
s3𝜃(s) =
Km
RaB + KbKm
Va(s)
which is equivalent to
s𝜃(s) + 0.0042s2𝜃(s) + 1.8 × 10−6s3𝜃(s) = 0.009Va(s)
Then, the partial fraction expansion would yield:
𝜃(s)
Va(s) =
0.009
s + 0.0042s2 + 1.8 × 10−6s3
Then, by decomposing the transfer function from before into:
𝜃(s)
Va(s) = 𝜃1(s)
Va(s) + 𝜃2(s)
Va(s) + 𝜃3(s)
Va(s)
This can be rewritten as:
𝜃(s)
Va(s) = 0.009
s
+
0.0013
0.00047s + 1 −
0.0103
0.0038s + 1
Then, this would correspond to:
0.0038d𝜃1(t)
dt
+ 𝜃1(t) = −0.0103Va(t)
0.00047d𝜃2(t)
dt
+ 𝜃2(t) = 0.0103Va(t)
d𝜃3(t)
dt
= 0.009Va(t)
Using the equivalence table with T = 0.02 s, each of these equations would yield:
𝜃1(z)
Va(z) =
−0.01025z−1
1 −0.005179z−1
𝜃2(z)
Va(z) =
0.0013z−1
1 −3.307 × 10−19z−1
𝜃3(z)
Va(z) = 0.00018z−1
1 −z−1
Corresponding to
𝜃(z) = 𝜃1(z) + 𝜃2(z) + 𝜃3(z)
This results in an equivalent diﬀerence equation given by:
𝜃3(z)
Va(z) = 0.007001z−1 + 0.017284z−2 + 0.002475z−3
1 −1.7820z−1 + 0.9060z−2 −0.1240z−3
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

124
3 Discrete-Time Modeling and Conversion Methods
m*(t)
m*(kT)
m(kT)
T
3T
5T
T
3T
5T
h(t)
Sampler
Hold
element
(zoh/foh)
T
Latch
(flip-flop)
T
Process
Sampler
H(s)
c(t)
C(s)
Command 
and
control
m*(t)
M(z)
H(s)
h(t)
c(kT)
C(z)
C*(s)
m*(kT)
Digital
processing
Figure 3.8 Process control with sampler and hold circuits.
3.2.5
Conversion and Reconstruction of the Continuous Signal: Sampling and Hold
Device
3.2.5.1
Sampler and Hold-Based Process Model
It is possible to convert and reconstruct the process signal using signal conversion devices. This
is done by inserting a sample and hold device (latch) between a digital processing (computing
unit) and an existing continuous process, and a sampler between the process signal output
and the digital processing device, as illustrated in Figure 3.8. Here, an output signal, h(t) can
be derived by a signal from a D/A conversion through a sampler and hold circuit m(kT). This
would result in a discrete approximation of the continuous-time from a continuous-time
command input m*(kT). Similarly, it is possible to use signal sampling from an ADC to obtain
the equivalent digital signal c(kT). There is a variety of signal conversion devices classiﬁed
into latches, such as zero-order or ﬁrst-order hold. The circuit design of these conversion
devices is covered in Chapter 6 as well as the signal resolution and the sampling rate selection
issues.
Zero-Order Hold (ZOH) The ZOH is a commonly encountered DAC. It receives a binary word
equivalent electrical signal m(t) and converts it into an output voltage or current signals, h(t).
0
T
m(t)
m(t-T)
t
h(t)
Figure 3.9 Time delay eﬀect
on signal processing by
zero-order hold elements.
Viewing it as a ﬁlter, a typical input and output (I/O) relationship
can be deﬁned by setting h(t) = m(t) −m(t −T), as illustrated in
Figure 3.9. Taking the Laplace transform of the ZOH that holds
the magnitude of the signal carried for the entire sampling period
kT, this would yield:
H(s) = L[h(t)] = L[m(t) −m(t −T)]
= L[u(t) −u(t −T)] = 1 −e−Ts
s
(3.38a)
Similar results can be obtained by decomposing the signal into
step signals, u(t −nT) and u(t −(n + 1)T) with an amplitude
deﬁned by m(nT), as illustrated in Figure 3.10.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.2 Digital Signal Processing Preliminaries
125
nT
(n+1)T
t
0
m(nT)
u(t–nT)
h(t)
h(t)
h(t)
+
0
0
nT
(n+1)T
m((n+1)T)
u(t–(n+1)T)
Figure 3.10 Step signal conversion of sampling of manipulation input.
The time series of this signal is given by:
h(t) = m(0)(u(t) −u(t −T)) + m(T)(u(t −T) −u(t −2T))
+ m(2T)(u(t −2T) −u(t −3T)) + …
(3.38b)
h(t) =
∞
∑
n=0
m(nT)(u(t −nT) −u(t −(n + 1)T))
(3.38c)
Then, the Laplace transformation of this signal yields:
H(s) =
∞
∑
n=0
m(nT)
(
e−snT
s
−e−s(n+1)T
s
)
= 1 −e−sT
s
∞
∑
n=0
m(nT)e−snT = 1 −e−sT
s
M∗(s)
(3.38d)
Transfer function with the ZOH.
When the ZOH, captured by its model GZOH(s), is connected in cascade with a linear time
invariant process characterized by a transfer function Gp(s), the z-transform of the convolution
of these transfer functions can be written as:
Gp(z) = Z[GZOH(s)Gp(s)] = Z
(
1 −e−TS
s
Gp(s)
)
(3.39)
Thus, using the time delay property (backshift) of the z-transformation from the ZOH can be
simpliﬁed in the generic form of:
Gp(z) = (1 −z−1)Z
(Gp(s)
s
)
(3.40)
Figure 3.11 presents a typical block diagram of the process with a sampler and hold equivalent
model.
Example 3.10
Third-Order Process with ZOH
Consider the case of a DC motor/ampliﬁer system that is manipulated by a voltage signal v(t)
from a DAC. Take the DAC to be modeled as being a ZOH to transform a signal m*(t), from
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

126
3 Discrete-Time Modeling and Conversion Methods
Gp(s)
1−e-sT
s
M(z)
H(s)
C(s)
C(z)
Sampler
Process model
Hold
T
Process transfer function: Gp(z) =
C(z)
M(z)
Figure 3.11 Generic block diagram of process with sampler and hold equivalent.
collecting the following signals: the motor velocity 𝜔(t), its position 𝜃(t), and the voltage input
Va(t), so the model is given by:
1
𝜔n2
d2𝜔(t)
dt2
+ 2𝜉
𝜔n
d𝜔(t)
dt
+ 𝜔(t) = kmVa(t)
d𝜃(t)
dt
= 𝜔(t)
The corresponding Laplace transformation is:
Ω(s) =
km
(
s2
𝜔n2 + 2𝜉
𝜔n + 1
)Va(s)
𝜃(s) = 1
s Ω(s)
Using Equation (3.39), the discrete-time motor position transfer function using the
zero-order hold consists of:
𝜃(z) = Z
⎛
⎜
⎜
⎜⎝
GZOH(s)1
s
km
(
s2
𝜔n2 + 2𝜉
𝜔n + 1
)
⎞
⎟
⎟
⎟⎠
M(z) = (1 −z−1)Z
⎛
⎜
⎜
⎜⎝
1
s
1
s
km
(
s2
𝜔n2 + 2𝜉
𝜔n + 1
)
⎞
⎟
⎟
⎟⎠
M(z)
while the discrete-time motor velocity transfer function results in:
Ω(z) = (1 −z−1)Z
⎛
⎜
⎜
⎜⎝
1
s
km
(
s2
𝜔n2 + 2𝜉
𝜔n + 1
)
⎞
⎟
⎟
⎟⎠
M(z)
It should be noticed that:
𝜃(z) ≠Z
(1
s
)
Ω(z)
This is because there is no sampler between the motor velocity and the motor position, as
illustrated in the Figure 3.12.
Triangle Hold Equivalent
A ﬁrst-order hold extrapolates between two samples using straight lines, as shown in
Figure 3.13. Similar to the latch zero-order equivalent models, the ﬁrst-order equivalent Htri(z)
of a continuous-time transfer function H(s) would result in:
Htri(z) = (1 −z−1)2
Tz
Z
(H(s)
s2
)
(3.41)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.2 Digital Signal Processing Preliminaries
127
ZOH
2nd order
DC motor
model
1
s
Ω(t)
Ω*(t)
Θ*(t)
Θ(t)
T
v(t)
m*(t)
M(z)
Θ(z)
Ω(z)
T
Discrete position
Transfer function
Ω*(t)
Θ*(t)
m*(t)
M(z)
Discrete velocity
Transfer function
Ω*(z)
Θ(z)
(a)
(b)
Figure 3.12 (a) and (b) Decomposition of the discrete third-order process model into two second-order
processes.
Figure 3.13 Time-delay eﬀect of triangle (ﬁrst-order)
hold element.
−T
−T
t
1
Time Delay Associated with Hold Equipment
In the case of ZOH, the average delay associated with the hold can be estimated as equivalent
to a continuous signal delayed by T∕2, as illustrated in Figure 3.14.
3.2.5.2
Construction Methods of a Continuous Signal from a Data Sequence
The continuous signals can be reconstructed from the sampled data using a suitable numeri-
cal interpolation method or DAC. In addition to covering a DAC relationship with the sam-
pling theorem in this chapter, numerical interpolation methods are also presented. It should
be noted that this is commonly used to approximate the digital command signal through an
approximated curve from the data sequence using piecewise line segments. Among some of
the interpolation methods used in constructing command proﬁle curves, there are:
1) linear interpolation between set points to connect two data points for a constant rate of
change in the case of either a single command variable or a synchronization between mul-
tiple variables;
2) cubic polynomial representation and generation for complex paths and for multiple axes;
3) advanced methods using spline functions.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

128
3 Discrete-Time Modeling and Conversion Methods
1
2
3
4
5
6
7
kT
u(kT)
Continuous signal u(t)
Signal from S&H D/A
Average u(t)
Figure 3.14 Time-delay of eﬀect on continuous signal discrete approximation.
Other interpolation methods, such as the circular arc, the incremental actuator for open-loop
control of a stepping motor, quadratic functions, and non-uniform rational B-splines
(NURBSs), are not covered in the textbook. For some practical considerations, the construc-
tion of digital command signals is usually required to meet constraints on one or more of the
following performance measures: (i) residual vibration amplitude; (ii) transient characteristics
such as the rise time and settling time; (iii) robustness to modeling uncertainties; and (iv) peak
actuator eﬀort. There are also constraints based on the computation time or precision of the
geometric representation.
Signal Reconstruction Using Linear Interpolation Considering a set of sampled data between
tO and tk given by [u(t0), u(t1), … , u(tk)], a linear interpolation can be used to generate a
straight-line relationship between consecutive points at time interval T given by t = t0 + nT,
for n = 0, 1, 2, … N and
N = tk −t0
T
(3.42)
The linear interpolation represents an estimation of intermediate points between these sam-
pled data. This linear interpolation for any ti −1 ≤t ≤ti results in:
u(t) = u(ti) + (t −ti)u(ti −ti−1)
ti −ti−1
(3.43)
A linear interpolation recursive algorithm can be developed using Equation (3.41). This
should result in the discontinuous curve shown in Figure 3.15. It is expected to have some
deviation errors over the portion of ending segments due to constraint considerations such as
the velocity to position proﬁles.
Signal Construction Using Cubic (Third-Order) Polynomials Another approximation method
involves interpolating some sampled data at discrete-time t = t1, t2, … , tk using some
third-order polynomials. Consider a command signal c(t) that can be captured by:
c(t) = r𝜃(t) = b𝟏t3 + b𝟐t2 + b𝟑t + b𝟒
(3.44a)
Moreover, b1,b2, b3, b4 are the ith polynomial coeﬃcient that is valid for ti −1 ≤t ≤ti. The
derivatives of c(t) along the ith segment are:
{
r𝜔(t) = ̇c(t) = 3b𝟏t2 + 𝟐b𝟐t + b𝟑
r𝛼(t) = ̈c(t) = 6b𝟏t + 𝟐b𝟐
(3.44b)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.2 Digital Signal Processing Preliminaries
129
t0
t1
t2
tk–1
tk
u(t0)
u(t1)
u(t2)
u(tk–1)
u(tk)
u(t)
0
N
2
N+1 n samples
time (s)
un
4
6
8
…
Linear interpolation
Cubic interpolation
Figure 3.15 Typical generated curves using linear and cubic interpolations.
rj(t1j)
rj(t0j)
rj(t3j)
rj(t2j)
t0j
t1j
t2j
t3j
t
Segment 1
constant  acceleration
Segment 2
constant velocity
Segment 3
constant acceleration
d2r(t)
dt2
= −Aj
dr(t)
dt
= Vj
d2r(t)
dt2
= Aj
Figure 3.16 Signal reconstruction using three-spline functions for synchronized motion proﬁle.
The coeﬃcients b1,b2, b3, b4 can be derived using the boundary conditions and constraints
at the end points of the ith segment. In the case of a linear motor position with motor radius
r, such constraints would be to have the motor position, velocity, and acceleration at the end
matching point in order to avoid motion discontinuity. This should be done at both segment
ends and should result in six boundary conditions. Given c(t) and ̇c(t) at time ti −1 and ti, it is
possible to derive the coeﬃcients.
Signal Construction Using Three Spline Functions Another command signal construction method
could also consist of restructuring the three represented proﬁle segments as illustrated
in Figure 3.16. Here, there are constraints such as all velocity and acceleration segments
should ensure synchronized motion, as shown in Figure 3.16. For the ﬁrst segment, there is
acceleration at its maximum rate until the maximum velocity is reached, then at the second
segment motion is maintained at the same maximum velocity, while in the third segment it
decelerates to a stop at the maximum rate.
The three segments can be deﬁned using Δr, Vj, Ai such as:
Δt𝟏ij = t1j −t0j =
V j
Ai
(3.45)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

130
3 Discrete-Time Modeling and Conversion Methods
Δt𝟐ij = t2j −t1j = |Δr|
V j
−Δt𝟏ij
(3.46)
Δt𝟑ij = t3j −t2j = Δt𝟏ij
(3.47)
With respect to the boundary conditions, the command proﬁle for each segment can be
derived such that:
⎧
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪⎩
at t = toj
thus
r(toj) = roj
and
dr(toj)
dt
= 0
at t = t1j
thus r(t1j) = r0j + 1
2Aj 𝚫t𝟏ij
𝟐sign(Δr) and
dr(t3j)
dt
= Vjsign(Δr)
at t = t2j
thus r(t2j) = r3j −1
2Aj 𝚫t𝟑ij
𝟐sign(Δr) and
dr(t2j)
dt
= Vjsign(Δr)
at t = t3j
thus
r(t3j) = r3j
and
dr(t3j)
dt
= 0
(3.48)
Example 3.11
In the case of a DC motor shaft providing an up and down elevator cabin dis-
placement, the model kinematics are also expected to be compliant with proﬁle constraints.
Here, the elevator motion between two or more successive ﬂoors has the following constraints:
(i) smooth and comfortable elevator ride; (ii) travel time as short as possible; and (iii) if possible,
good positioning accuracy. Usually, such a command input of motion proﬁle is represented by
discrete values over time. Then, using an interpolation or curve ﬁtting methods, it is possible
to derive the functions corresponding to the best curve ﬁtting these sequences of data points,
as illustrated in Figure 3.17. A typical up and down position proﬁle can be decomposed into
motion proﬁle segments. As an illustrative example, the motion proﬁle in Figure 3.18 can be
depicted in seven segments within three phases: (i) acceleration phase from rest to maximum
velocity consisting of ramping up, holding, and ramping back; (ii) constant speed phase; and
(iii) acceleration phase from rest to maximum velocity consisting of ramping up and holding
and ramping back.
Here, it is considered that the position motion proﬁle is a cubic polynomial, in order to avoid
step changes in velocity and acceleration. A smooth ride can be achieved through parabolic
Discrete elevator positions
t2
t3
t4
t5
t6
t7
t1
t0
Time (s)
θ(t)
– θm
θm
Elevator floor position
motion
profile
segment 1
motion
profile
segment 2
motion
profile
segment 3
motion
profile
segment 4
motion
profile
segment 5
motion
profile
segment 6
motion
profile
segment 7
Figure 3.17 Linear interpolation of DC motor-driven elevator position proﬁle.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.2 Digital Signal Processing Preliminaries
131
Discrete elevator positions
t5
t4
t3
t2
t1
t0
t6
t7
Time (s)
θ(t)
– θm
Elevator floor position
motion
profile
segment 1
motion
profile
segment 2
motion
profile
segment 3
motion
profile
segment 4
motion
profile
segment 6
motion
profile
segment 7
d2θ(t)
dt2
α(t) =
dθ(t)
dt
ω(t) =
θf = θm
θ0
motion
profile
segment 5
Figure 3.18 Equivalent angular parabolic position motion proﬁle.
acceleration and deceleration proﬁles with three spline functions representing the motion
segments 1a, 1b, and 1c, as illustrated in Figure 3.18. The motion can be characterized by an
angular position with a trajectory initial time t0 = 0, and a ﬁnal time tf , such that the initial
angular position 𝜃(t0) = 𝜃0 and the ﬁnal angular velocity of the trajectory 𝜃(tf ) = 𝜃f . Similarly,
the initial angular velocity 𝜔(t0) = 𝜔0 and the ﬁnal angular position of the trajectory 𝜔(tf ) = 𝜔f .
Hence, by using a third-order cubic polynomial approximation method that could satisfy the
motion constraints, the angular position and velocity are given by:
⎧
⎪
⎨
⎪⎩
𝜃(t) = a0 + a1t + a2t2 + a3t3
𝜔(t) = a1 + 2a2t + 3a3t2
𝛼(t) = 2a2 + 6a3t
(3.49)
The coeﬃcients are given as:
⎧
⎪
⎪
⎪
⎨
⎪
⎪
⎪⎩
a0 = 𝜃0
a1 = 0
a2 = 3
tf
2 (𝜃f −𝜃0)
a3 = 2
tf
3 (𝜃0 −𝜃f )
(3.50)
Recalling that the relationship between the wheel linear and angular rotation of radius R from
the drum attached to the motor shaft is given by:
x(t) = R𝜃(t) for t ∈[t0, tf ]
(3.51)
x(t) = R
[
𝜃0 0
3
tf
2 (𝜃f −𝜃0)
2
tf
3 (𝜃0 −𝜃f )
]
= R
(
𝜃0 + 3
tf
2 (𝜃f −𝜃0)t2 + 2
tf
3 (𝜃0 −𝜃f )t3
)
(3.52)
while velocity yields:
v(t) = R𝜔(t) = R
(
6
tf
2 (𝜃f −𝜃0)t + 6
tf
3 (𝜃0 −𝜃f )t2
)
(3.53)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

132
3 Discrete-Time Modeling and Conversion Methods
and the acceleration yields:
𝛼(t) = R
(
6
tf
2 (𝜃f −𝜃0) + 12
tf
3 (𝜃0 −𝜃f )t
)
(3.54)
Thus, for the dynamics model of seven-segment up and down elevator motion, the kinematics
boundary time conditions t0, t1, t2, t3 can be deﬁned as:
⎧
⎪
⎪
⎪
⎨
⎪
⎪
⎪⎩
t1 = 𝛼m
jm
t2 = 𝜔m
𝛼m
t3 = 𝛼m
jm
+ 𝜔m
𝛼m
(3.55)
Hence,
t2 −t1 = 𝜔m
𝛼m
−𝛼m
jm
(3.56)
Thus, the position proﬁle at each time (t0, t1, t2, t3) is deﬁned as
⎧
⎪
⎪
⎨
⎪
⎪⎩
𝜃(t) = 𝜃1(t) = 𝜔(0)t + ∑𝜔meant = 𝜔(0)t + 1
6jmt3 … ∀t ∈[t0, t1[
𝜃(t) = 𝜃2(t) = 𝜔(0)t + ∑𝜔meant + ∑1
2𝛼meant2 … ∀t ∈[t1, t2[
𝜃(t) = 𝜃3(t) = 𝜔(0)t + ∑𝜔meant + ∑1
2𝛼meant2 … ∀t ∈[t2, t3[
(3.57)
This is equivalent to:
⎧
⎪
⎪
⎨
⎪
⎪⎩
𝜃(t) = 𝜃1(t) = 𝜔(0)t + ∑𝜔meant = 𝜔(0)t + 1
6jmt3 … ∀t ∈[t0, t1[
𝜃(t) = 𝜃2(t) = 𝜔(0)t + 1
6jmt3 + 𝜔1(t)(t −t1) + 1
2𝛼1(t)(t −t1)2 … ∀t ∈[t1, t2[
𝜃(t) = 𝜃3(t) = 𝜃2(t) + 𝜔2(t)(t −t2) = 1
2𝛼m(t −t2)2 + 1
6jm(t −t2)3 … ∀t ∈[t2, t3[
The velocity motion proﬁle is given by:
⎧
⎪
⎪
⎨
⎪
⎪⎩
𝜔(t) = 𝜔1(t) = 𝜔(0) + ∑𝛼meant = 𝜔(0) + 1
2𝛼(t)t = 𝜔(0) + 1
2jmt2 … ∀t ∈[t0, t1[
𝜔(t) = 𝜔2(t) = 𝜔(0) + ∑𝛼meant = 𝜔(0) + 1
2𝛼(t)(t −t1) … ∀t ∈[t1, t2]
𝜔(t) = 𝜔3(t) = 𝜔(0) + 1
2𝛼(t)t + 𝛼(t −t1) −1
2𝛼(t)(t −t2) … ∀t ∈]t2, t3]
(3.58)
This is equivalent to:
⎧
⎪
⎪
⎨
⎪
⎪⎩
𝜔(t) = 𝜔1(t) = 𝜔(0) + ∑𝛼meant = 𝜔(0) + 1
2𝛼(t)t = 𝜔(0) + 1
2jmt2 … ∀t ∈[t0, t1[
𝜔(t) = 𝜔2(t) = 𝜔(0) + 1
2jmt2 + 𝛼m(t −t1) … ∀t ∈[t1, t2]
𝜔(t) = 𝜔3(t) = 𝜔(0) + 1
2jmt2 + 𝛼m(t −t1) −𝛼m(t −t1) −1
2jm(t −t1)2 … ∀t ∈]t2, t3]
(3.59)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.2 Digital Signal Processing Preliminaries
133
ωmax
ω(t)
Time (s)
Angular velocity (rad.s–2)
t1
t2
t3
t4
t5
t6
Figure 3.19 Generic motion proﬁle.
The acceleration motion proﬁle is given by:
⎧
⎪
⎨
⎪⎩
𝛼(t) = 𝛼1(t) = jmt … ∀t ∈[t0, t1[
𝛼(t) = 𝛼2(t) = 𝛼m … ∀t ∈[t1, t2[
𝛼(t) = 𝛼3(t) = 𝛼m −jm(t −t2) … ∀t ∈[t2, t3]
(3.60)
The jerk motion proﬁle is given by:
⎧
⎪
⎨
⎪⎩
j(t) = jm … ∀t ∈[t0, t1[
j(t) = 0 … ∀t ∈[t1, t2[
j(t) = −jm … ∀t ∈[t2, t3]
(3.61)
with operating conditions such that: amean = 1
2a(t) for a ramp-like accelerating and decelerating
phase, amean = amax during the constant speed phase; 𝜔(0) = 0 is the starting and ﬁnal position
zero velocity; and 𝜔mean = 𝜔max. It should be recalled that segments (t4, t5, t6, t7) have the same
equations with a negative sign. The rated velocity is given by:
𝜔nom = 2𝜋NM
(3.62)
with NM being the rated speed on the nameplate of the motor. For some applications, the motor
speed is constant while for others it varies by level. Hence, regardless of the applications, the
velocity proﬁle is very useful to derive the required motor torque, as the load torque is associ-
ated to dynamic torque. It is possible to distinguish several types of motion proﬁle generics, as
illustrated in Figure 3.19.
Example 3.12
Process Command Data Sequence Interpolation
Figure 3.20 illustrates a process command input sequence using three types of signal approxi-
mation:
1) the ramp command trajectory where there is a simple constant velocity ramp input up to
the desired position;
2) the trapezoidal command trajectory where there is a short initial constant positive acceler-
ation period n1 to n2, leading to a constant velocity period n2 to n3, (ramp) which ends with
a constant negative acceleration period n3 to n4, up to the desired speed;
3) the harmonic (sinusoidal velocity) command trajectory where there is a harmonic (oﬀset
cosine wave) velocity command. The continuous-time equivalent would be:
𝜔∗(t) =
𝜔peak
2
(1 −cos 𝜔0(t))
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

134
3 Discrete-Time Modeling and Conversion Methods
Trapezoidal command signal
Ramp command signal
θ*(t)
Position (rad)
θ*(tfinal)
θ*(0)
n2
n3
n4
θ*var
•
Time (s)
tfinal
n1
θ*(t)
•
θ*(0)
•
Velocity (rad s–1)
n2
n3
n4
θ*max
•
Time (s)
tfinal
n1
θ*(t)
••
Acceleration (rad s–2)
n2
n3
n4
θ*max
••
Time (s)
n1
Figure 3.20 Command input trajectories (position, velocity and acceleration).
meaning that there are oﬀsets of the cosine where 𝜔o is the frequency of the waveform. However,
the parametric form uses T for the sampling period and nﬁnal = n4 for the ﬁnal time step. In
addition, it is assumed that when the ﬁnal time steady state position has been reached, it is
maintained. For the ramp trajectory approximation, with tﬁnal known, the number of samples
nﬁnal to reach the ﬁnal value is given by:
n4 = nﬁnal = roundup
{tﬁnal
T
+ 1
}
Therefore, from an impulse input 𝛿(z), the ramp trajectory is given by:
𝜃∗(z)
𝛿(z) = ̇𝜃varT
z−1
(1 −z−1) −̇𝜃varT
z−1
(1 −z−1)2 z−nﬁnal
with ̇𝜃var = 𝜃ﬁnal−𝜃initial
Tnﬁnal
. It should be noticed that only three parameters are used to model the ramp
trajectory (T, nﬁnal, Δ𝜃* = 𝜃ﬁnal −𝜃initial). For the trapezoidal trajectory approximation, the cor-
responding digital command signal can be given by:
𝜃∗(z)
𝛿(z) = 1
2
̈𝜃T2 (1 + z−1)z−1
(1 −z−1)−3 (1 −z−n2 −z−n3 + z−n4)
Knowing that the velocity proﬁle can be segmented into three, as shown in Figure 3.20, for
time interval [Tn2 −Tn1] and [Tn4 −Tn3], there is a change in velocity causing acceleration
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.3 Signal Conditioning
135
Table 3.6 Table of parameters used to build various process
command input sequences.
Types of command
input sequence
Parameters required
Step
1 parameter (yﬁnal)
Ramp
2 parameters (yﬁnal, ̇ymax)
Parabolic
3 parameters (yﬁnal, ̇ymax)
Harmonic
3 parameters (yﬁnal, ̇ymax, signal frequency)
θ*(t)
Position (rad)
θ*final
θ*initial
n2
n3
n4
n1
Harmonic command signal
Ramp command signal
Time (s)
Figure 3.21 Equivalent harmonic command trajectory.
and deceleration. The maximum velocity and acceleration are given by ̇(𝜃max, ̈𝜃max):
̇𝜃max =
Δ𝜃∗
2(n3 + n4 −n2)T
and
̈𝜃max =
̇𝜃max
(n2)T
For the sinusoidal/harmonic trajectory approximation, the position proﬁle is given by:
𝜃∗(z)
𝛿(z) = K(𝜔0T
z−1
(1 −z−1)2 −
sin(𝜔0T)z−1
(1 −2 cos(𝜔0T)z−1 + z−2)(1 −z−nﬁnal)
Here, only the parameters (nﬁnal = n4, T, Δ𝜃* = 𝜃ﬁnal −𝜃initial) are required to model the tra-
jectory, where K = 𝜔max
2𝜔0 such that 𝜔max = 2Δ𝜃∗
n4T and 𝜔0 =
2𝜋
n4T . For the step trajectory approxima-
tion, the position proﬁle is given by:
𝜃∗(z) = 𝜃ﬁnal
1
(1 −z−1)
Table 3.6 summarizes the type of command input and corresponding parameters required
(see Figure 3.21).
3.3
Signal Conditioning
Active transducers convert non-electrical energy into an electrical output signal without
requiring external excitation to operate. This is the case, for a thermocouple in temperature
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

136
3 Discrete-Time Modeling and Conversion Methods
measurement. In contrast, passive transducers change the electrical property value of a device
such as resistance, inductance, or capacitance according to changes in the physical quantity
being measured. For example, with strain gauges, the resistivity varies proportionally to the
applied stress, and with Linear Variable Diﬀerential Transformers (LVDTs), the inductance
changes proportionally to the resulting displacement. Hence, the high-voltage signals of
many transducer outputs require a signal conditioning unit to be properly read by other
control devices. Thus, the signal conditioning consists of processing a transducer output by
demodulating, amplifying, ﬁltering and linearizing, range quantizing, and isolating from the
signal from the noise before transmitting it to the comparator in a form compatible with the
reference system input. The functions performed by signal conditioners can be described by:
1) signal scaling (ampliﬁcation or attenuation) in order to use a reasonable portion of the
analog-to digital (A/D) range and to avoid the A/D saturation eﬀect;
2) signal ﬁltering (noise elimination or isolation) in order to ensure a better restitution of the
initial signal received from analog ﬁlters or digital ﬁlters;
3) phase shifting or reference shifting in order to ensure proper wave shaping;
4) signal buﬀering in order to capture a useful output signal content within an analog input
board;
5) bridge balancing in order to calibrate output signals or to detect signal traﬃc overload;
6) signal demodulation through a mathematical manipulation of the signal such as diﬀerentia-
tion, division, integration, multiplication, root ﬁnding, squaring, subtraction, or summation;
7) signal linearizing used in the case of a nonlinear relationship to the physical quantity mea-
sured.
In summary, signal conditioning is achieved by the variation of input signal amplitude and
frequency. Such a signal conditioner output could be directly used by the ADC unit. Table 3.7
summarizes the functions required from typical signal conditioners for some measurement
systems.
Typical transducers require external voltage or current excitation from the signal-
conditioning unit such as strain gauges, thermistors, and resistance temperature detectors
(RTDs). Connection between the analog measurement device and the A/D device could be
single-ended (to avoid oﬀset), or diﬀerential (to measure signals with large voltages range).
In order to minimize the eﬀects on the control system instrumentation and the process
performance, the selection of a signal conditioner should consider the sample rate through:
Table 3.7 Types of transducers and associated
signal-conditioning functions required.
Temperature
Ampliﬁcation
Cold junction
Filtering
Strain gauge
Voltage excitation
Filtering
Linearization
Bridge conﬁguration
Excitation
High-voltage
Isolation
Absorption transducer
Oﬀset removal
Ampliﬁcation
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.4 Signal Conversion Technology
137
(i) sensor response speed and range; (ii) conversion time; and (iii) frequency of sample
signal itself.
Example 3.13
A 1 mV ∘C−1 resolution of a thermometer output signal requires a minimum
of 2.5 ∘C before a 12-bit A/D device indicates a change in digital value. Hence, by amplifying the
output signal of a thermometer by ×1000, each bit on the A/D device is equivalent to 0.001 mV,
which corresponds to 0.0025∘C, thus avoiding A/D device saturation. If the temperature varia-
tions are measured with ×1000 ampliﬁcation, 22∘C is measured as 22 V, which is much greater
than the A/D input range. Therefore, it is possible to adjust the output of the ampliﬁer with an
oﬀset of −22 V so that the output signal would be 0 V.
3.4
Signal Conversion Technology
Typical signal conversion includes: DC to AC, AC to DC, frequency to voltage, voltage to fre-
quency, digital-to-analog (D/A), and analog-to-digital (A/D). In this section, only the last two
conversion types are covered.
3.4.1
Digital-to-Analog Conversion
A DAC consists of a resistive ladder network connecting switches within an analog circuit
and an operational ampliﬁer receiving the equivalent set of input digital values to produce
a corresponding analog voltage signal. Based on the binary-driven switch positions (logic
1/closed or logic 0/open), the current ﬂows across speciﬁc resistors within this ladder network.
The operational ampliﬁer is used to sum all voltage potentials across the set of those speciﬁc
resistors and to generate an output voltage. For example, using operational ampliﬁers and a
D-ﬂip-ﬂop, a set of switch positions equivalent to a binary word is converted into an output
voltage signal. Figure 3.22 depicts an 8-bit unsigned binary word DAC. Consider an 8-bit
binary word given by b0, b1, b2, b3, b4, b5, b6, b7, such that bi{1, 0} is sent out of the computing
Q7
RB
i
v0ut
8-bit D/A 
converter
8 bit 
D-flip-flop
Op-amp
vh
Ka
R7
R6
R5
R4
R3
R2
R1
R0
i7
i6
i5
i4
i3
i2
i1
i0
v7
v6
v5
v4
v3
v2
v1
v0
(0 − 5V)
Clock
Signal 
reconstruction
Data bus
Address bus
INT
Control bus
I/O bus
Output module
Computing unit
Binary
number
x x x
x x
0
0
0
8-bit data register
b0b1b2b3b4b5b6b7
(0 –1)
I/O logic
x
x
x x 1
Status register
IOD0
IOD1
XXXX
IOA0
IOA1
XXXX
Motorized
agitator
Impulse strain
D7
D6
D5
D4
D3
D2
D1
D0
Q6
Q5
Q4
Q3
Q2
Q1
Q0
Figure 3.22 Example of an 8-bit resistive ladder DAC.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

138
3 Discrete-Time Modeling and Conversion Methods
14 kΩ
14 kΩ
14 kΩ
14 kΩ
7 kΩ
7 kΩ
7 kΩ
14 kΩ
14 kΩ
1
D7
V7
Vout
V6
V5
V4
D6
D5
D4
1
1
1
Figure 3.23 Resistive-based ladder of a DAC.
unit toward the D ﬂip-ﬂop through its I/O address buses. Then, the D ﬂip-ﬂop I/O data bus
collects this binary number. Depending on the binary word, the states of the switches are
closed or open, allowing the current to pass through their connected resistors. This generates
voltages v0, v1, v2, v3, v4, v5, v6, v7 of the D ﬂip-ﬂops. These voltage outputs of D ﬂip-ﬂop are fed
into the summing operational ampliﬁer. The resistor values on the operational ampliﬁer are
chosen such that its output voltage is given by:
Vout = vh
(
RB
R∕2k−1 bk−1 +
RB
R∕2k−2 bk−2 + … + RB
R∕2b1 + RB
R b0
)
(3.63)
with vh = v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 being the logic-1 output voltage of the D
ﬂip-ﬂops. Equation (3.63) can be rewritten as:
Vout = vh
(RB
R N
)
(3.64)
with the binary number output to DAC given from N = bk −12k −1 + bk −22k −2 + … + b121 +
b020. In addition, the gain of the DAC Ka = RB
R with R = R0 = R1 = R2 = R3 = R4 = R5 = R6 =
R7 being any resistor connected at the output of the D ﬂip-ﬂop. The voltage levels produced by
DAC are given by the counting numbers derived from the number of binary bits generated. In
this case, b0 is the most signiﬁcant bit (MSB) and b7 is the least signiﬁcant bit (LSB).
Example 3.14
As shown in Figure 3.23, a resistive ladder network is used as a 4-bit DAC. The
binary input is sent continuously across the four separate data lines v4 through v7, which results
in an output of the DAC corresponding to the intended discrete voltage value.
The DAC sampling rate is the number of points per second that a DAC can generate as output
analog values (up to a million samples per second). Among characteristics of DAC are:
1) the range, which is the voltage interval of values that the DAC can output, given
by [Vmax, Vmax]. The maximum output voltage, Vmax is produced when all bits are
1 N = 2k −1 and is given by:
Vmax = Vh
(Rf
R (2k −1)
)
(3.65)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.4 Signal Conversion Technology
139
The minimum output voltage, Vmin, is achieved when all bits are zeros (N = 0) and it results
in Vmin = 0. When a signed analog output signal is obtained from the DAC, the number of
points in the area derived for k bits is estimated by inverting the sign bit and adding a biased
voltage of −Vh(Rf ∕R)2k −1 to the output v0. Here, the interval is given:
Vmax = Vh
(Rf
R (2k−1 −1)
)
(3.66)
and
Vmin = −Vh
(Rf
R (2k−1)
)
(3.67)
2) The accuracy and linearity of the DAC are proportional to the precision of the input resistors
on the operational ampliﬁer. Furthermore, stabilizing the temperature of the resistor ladder
network circuit can also improve the accuracy.
3) The resolution of a DAC, Vq, is the number of k digital bits (number of discrete values) cor-
responding to the range of analog values. The minimum nonzero analog voltage produced
is obtained when N = 1. As such, the resolution as the number of discrete values or “levels”
is written as a power of 2 given by:
resolutions∕combinations = (2k)
(3.68)
Then, the resolution, which depends on the resistor network ladder conﬁguration, is given
by:
Vq = Vh
Rf
R
(3.69)
When the resolution and the range are known, the minimum number of bits required in the
DAC is given by:
k =
log
(
Vmax−Vmin
Vq
+ 1
)
log 2
(3.70)
with k being an integer or results from the equation rounded up to the next highest integer.
For example, an ADC with a resolution of 8 bits can encode an analog input in 28=256
diﬀerent levels, representing the ranges from 0 to 255 (i.e. unsigned integer) or from −128
to 127 (i.e. signed integer), depending on the application. The resolution can also be deﬁned
electrically and expressed in volts. In the case of the encoder pulse signal counting, it is given
by:
𝜔res = 𝜃res
T
(3.71)
while in the case of the clock pulse signal counting, it is given by:
𝜔ccp =
𝜃res
NxTCLK
(3.72)
with Nx and TCLK being, respectively, the count number and the clock sampling time. Then,
the resolution yields:
𝜔res = 𝜔ccp pos+ −𝜔ccp pos−= 𝜃res
NxTx
−
𝜃res
Nx∓1Tx
(3.73)
Consider a sampling rate T. The average velocity sensed (or weighted moving average) is
given by:
𝜔= 𝜃(k) −𝜃(k −1)
T
(3.74)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

140
3 Discrete-Time Modeling and Conversion Methods
Digital signal
Binary
number
0 x x
0 0 x
Data register
(0 – 1)
x x
x x
1
Status register
IOD0
IOD1
XXXX
IOA0
IOA1
XXXX
Dn−1
Dn−2
D0
Quantizing of signal
Input module
Computing unit
….
Sampling pulses
T
T
Sampler
Hold
Analog
signal
Discrete
signal
I/O logic
b0b1b2b3b4
by bx
Control I/O
with clock, T
Capacitor
Figure 3.24 Analog-to-digital conversion technique.
Thus, by increasing the sampling period, (T, 𝜔) appears to be closer to 𝜔with degraded reso-
lution. This may cause quantization. However, using the clock pulse counting, the resolution
yields:
𝜔res = 𝜔pulse = last
𝜃pulse
T
(3.75)
4) The settling time (slew time) is the conversion time delay of the input DAC binary word
within the expected accuracy voltage level.
5) The oﬀset error is the diﬀerence between the expected DAC output analog signal and the real
value when the digital value of 0 is applied. The gain error is the linear deviation from the
ideal transfer line of a DAC, which corresponds to a change of slope from the ideal converter.
3.4.2
Analog-to-Digital Conversion
The ADC is a device that samples an analog input voltage and encodes that voltage as a binary
number (1 or 0). An ADC is implemented either using an ADC software conversion or through
an ADC hardware conversion process. In the case of hardware conversion, the voltage level
input signal is the reference voltage. Hence, the two-step converter consists of a sampling and
holding (S/H) unit along with a quantizing and encoding (Q/E) unit, as illustrated in Figure 3.24.
The quantization is the partitioning of the reference voltage signal range into a number of
discrete quanta, followed by the matching of the input signal with the correct quantum. The
encoding assigns a unique digital code to each quantum and allocates this digital code to the
input signal.
The ADC allows the computer to sample proportionally the analog feedback voltage from
transducers. The resulting digital voltage is achieved through a sample and hold circuit. Sample
and hold circuitry is used by the ﬂip-ﬂop memory. This can be achieved by using a compara-
tor between the input voltage Vi and a variable digital voltage V0. The time from V0 to Vi is
the conversion time. The main ADC characteristics are the speed and the resolution of the
conversions.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.4 Signal Conversion Technology
141
The ADC resolution is the smallest detectable change in an analog voltage signal resulting in
a variation in digital output, given by:
ΔV = Vr
2N = VRH −VRL
2n
(3.76)
with Vr being the reference voltage range, N the number of bits in digital output, 2N the number
of states, n the number of digits, VRH the higher value of input voltage, and VRL, the lower value
of input range. The resolution represents the quantization of the error inherent in the conver-
sion of the signal to a digital form. For example, consider a 6-bit ADC corresponding to 26 = 64
diﬀerent values so that in a 1 V scale voltmeter with 0.000001 V steps, it could measure from
−0.999999 to 0.999999 V. The resolution of an ADC is degraded by an increase in temperatures
and resistances within its components. A voltage divider or ampliﬁer is used to ﬁt the input sig-
nal without changing the resolution. The input range of an ADC is the interval of voltage values
that are properly converted. The ratio of the highest over the lowest voltage values converted
by an ADC is called the dynamic range and is expressed in decibels (dB) by:
dynamic range = 20 log
( S
N
)
(3.77)
with S being the highest voltage level and N the noise level. The rate of accuracy of an ADC
is the smallest resolution of analog voltage (LSB). Recall that the ADC consists of a successive
sampling and holding process of a chain of digital values (bits). This is achieved by a switch
and a capacitor. The minimum sample rate is obtained when the capacitor is discharged (no
value held), while the maximum sample rate is derived from the speed at which the capacitor
is charged. The time required to commute the sample switch is called the aperture time or
delay ta. Any deviation between the analog voltage value and the current voltage value input
while the switch is open causes an error in accuracy. The maximum input frequency fMAXLSB is
given by:
fMAXLSB =
2
2𝜋ta2n
(3.78)
The accuracy of an ADC can be improved either by increasing the resolution or by increasing
the sampling rate that causes an increase in the maximum frequency. A pulse signal from a clock
is used to synchronize the timing of the ADC conversion process. Commonly encountered
ADCs are ramp, successive approximation, dual-slope, and parallel or “ﬂash.”
A digital ramp ADC produces a saw-tooth signal that ramps up and goes to zero. A timer
starts counting when ramp starts. When the ramp voltage reaches the input value, a comparator
ﬁres and this transition of the comparator stops the binary counter and holds the digital value
corresponding to the analog voltage.
A successive approximation ADC uses a counter circuit known as a successive approxima-
tion register (SAR), which is an internal high-speed n-bit DAC iterating a series of levels and
comparing them to the input voltage, as depicted in Figure 3.25. Here, instead of counting up
in a binary sequence, this register counts all values of bits starting with the MSB and ﬁnishing
at the LSB. The successive approximation ADC is faster than the digital ramp ADC due to its
digital logic to converge on the value closest to the input voltage. Such an n-bit ADC requires
2n cycles to perform a conversion.
This conversion process consists of:
1) initializing the MSB as 1;
2) converting the digital value to an analog value using DAC;
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

142
3 Discrete-Time Modeling and Conversion Methods
DAC
(01xx10110)
Binary
number
(b0 b1 ….bk)
Comparator
Sampler
Hold
Analog
signal
T
Control I/O
with clock, T
Discrete
signal
Integrator
Digital
filter
+
+
–
–
+ Vref
–Vref
Capacitor
(0 – 1)
Figure 3.25 Successive approximate A/D conversion circuitry.
3) comparing the recorded value to the analog input value; and
4) checking if V in > V DAC:
a) if yes, set bit 1
b) if no, bit is 0 and test the next bit.
Example 3.15
It is desired to convert a 0–12 V range command input signal into an 8-bit
ADC or 28 = 256 binary counts (or values) from 0 to 255 with a count increment of 1/256. The
0000 0000 binary number, for 0 V corresponds to 0 values, and similarly, 6 V corresponds to 128
count values, and the 1111 1111 binary number for 11.95 V corresponds to 255 count values.
A 10-bit ADC would oﬀer a greater resolution as there are 210 = 1024 binary counts, which is
equivalent to a count increment of 1/1024. Hence, the case of a 0–5 V range command input
signal with a 10-bit ADC corresponds to a resolution of 4.88 mV per LSB, while for 8-bit ADC
it would be 19.5 mV.
Example 3.16
Consider an 8-bit resolution A/D device used in the measurement of a 0–10 V
signal. The input signal can be measured in steps of 10/256 = 39 mV (i.e. ADC can only detect
changes greater than 0.039 V). Thus, a 10 V analog input corresponds to the digital number
255 and a 0 V analog input corresponds to 0. Any input signal increase or decrease causes a
change by 1 from the previous number (e.g. 9.961 V is digitally represented by 254). A 12-bit
A/D device is more sensitive to variations in the input voltage since its minimum resolution is
given by 10 V/4096 = 0.00244 V. If the input signal exceeds 10 V, the A/D produces a ﬂat line
corresponding to the saturation from the analog DAQ device.
Another ADC device is the dual-slope ADC (DS-ADC), which consists of an ampliﬁer for
integration, a signal comparator, a counter, a clock, some controlled switches, and a capacitor,
as illustrated in Figure 3.26.
The ADC derives the voltage by measuring time and using digital logic to compute the input
voltage. Initially, switch S1 is set to ground, S2 is closed, the counter is set at 0 and the capacitor
is discharged. Then the conversion starts, S2 is open, and S1 is set such that the input to the
integrator is Vin. DS-ADC integrates an unknown input voltage Vin during a time delay Td1, then
“de-integrates” it using a known reference voltage Vref. At the end of the time delay Td1, the input
is applied across the capacitor and it starts to charge for a period of Td1. After Td1, the capacitor
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.4 Signal Conversion Technology
143
R
C
–
–
+
+
Comparator
Integrator
(Op-Amp)
Toggle
switch
Input 
signal Vin
(Bits for
impulses train)
(01xx10110)
(0 – 1)
Digital signal
Binary
number
bn–1
bn–2
b0
Processor 
module
Counter
Control logic
Clock
Power
supply
Set
Reset
vref
S2
S1
Figure 3.26 Dual-slope A/D conversion circuitry.
commutes to a negative reference voltage and starts to discharge at a rate proportional to the
reference. The timer is started when S1 is set such that the counter begins to count clock pulses
for a period of Td1, after which the counter resets to zero. A comparator is used to determine
when the output voltage of the integrator crosses zero.
An advantage of a dual-slope ADC over the single-slope ADC is that the conversion result is
insensitive to errors in the component values, as any error from a component value during the
integrate cycle is cancelled out during the de-integration phase. This method is insensitive to
noise.
In the case of a ﬂash ADC converter with n bits of resolution, there are (2n −1) compara-
tors, (2n) resistors, and a control logic unit, as depicted in Figure 3.27. The 2n resistors divide
the reference voltage into (2n) equal intervals (i.e. one for each comparator), which correspond
to the input range, while the (2N −1) comparators determine in which of these (2N) voltage
intervals the input voltage Vin lies. Then, Vin is compared to each voltage level simultaneously
so that the comparator would set output either to 1 for all voltages below the input voltage or to
0 otherwise. The resulting chain of digital values is fed into an encoder with the combinational
logic to translate comparator outputs into the corresponding n-bit values. The ﬂash ADC con-
version time is bounded by the settling time of the comparators and the propagation time of
the combinational logic.
Pipeline ADC or multistage ADCs are similar to the ﬂash converter, with a lower number of
comparisons. It uses a coarse conversion so that the diﬀerence in the input signal is determined
with a DAC and the results are combined in a last step. This type of ADC is fast, has a high
resolution, and only requires a small die size.
A delta-encoded ADC’s main components are resistors, capacitors, comparators, control
logic, and a DAC, as shown in Figure 3.28. During its operation, an input signal is oversampled
and goes to an integrator. The integrated output signal and the DAC are channeled to a
comparator where they are compared to the ground. The comparator controls the counter.
The circuit uses negative feedback from the comparator to iteratively adjust the counter (delta
encoder) until the DAC’s output is close enough to the input signal. This delta modulator
adjustment of the output signal ensures that the average error at the quantizer output is zero.
After iteration, it results in a digital signal output in which a sequence of binary numbers is
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

144
3 Discrete-Time Modeling and Conversion Methods
(01xx10110)
(0 – 1)
Digital signal
Binary
number
bn–1
bn–2
b0
+
–
R
R
Vref
R
R
A/D converter
(Priority encoder logic)
Comparator
Sampler
Hold
Analog
signal
T
Control  I/O  
with clock, T
Discrete
signal
+
–
+
–
+
–
Capacitor
Figure 3.27 Flash A/D conversion circuitry.
+
+
–
–
(01xx10110)
(0 – 1)
Binary
number
(b0 b1 ….bk)
Comparator
Sampler
Hold
Analog
signal
T
Control I/O 
with clock, T
Discrete
signal
Integrator
Digital
filter
+ Vref
– Vref
Capacitor
DAC
Figure 3.28 Delta-encoded ADC block diagram.
proportional to Vin. A delta-encoded ADC has an up-down counter that feeds a DAC. This
device has a high resolution and very wide ranges, and does not require precision components.
Nevertheless, the conversion time is dependent on the input signal level. Furthermore, it
requires a high sampling rate. Some ADCs successfully combine the delta and successive
approximation approaches in the case of a signal with high frequencies and low magnitude.
A sigma-delta (SD) ADC is a high-sampling-rate 1-bit ADC combining a low-pass ﬁlter (to
cut or shape higher frequency electronic noise) with a DAC in a feedback loop. The resulting
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.5 Data Logging and Processing
145
converted 1-bit sequence is digitally ﬁltered through a low-pass ﬁlter to improve resolution and
reduce the data ﬂow rate.
Example 3.17
The n-bit AD-converter receives from a speed sensor an analog voltage signal
of ya(t) value in the range [Y min , Ymax], to convert it into a digital signal of yd number of bits.
Generally, ya(t) would be converted to a digital signal in the form of a set of bits given by:
yd ≈bn−1bn−2 … b2b1b0
where each bit bi has a value of 0 or 1. These bits are interpreted as coeﬃcients in a number
with base 2 given by:
yd ≈bn−12n−1 + bn−22n−2 + … + b222 + b121 + b020
with b0 being the LSB, while bn −1 is the MSB.
Example 3.18
Consider a 12-bit ADC used to convert a signal in the range [0 V, 10 V]. The
digital signal is given by:
yd = Ymin = 0 ⋅211 + 0 ⋅210 + … + 0 ⋅21 + 0 ⋅20 = 0000000000002 = 02 = 0(decimal)
yd = Ymax = 1 ⋅211 + 1 ⋅210 + … + 1 ⋅21 + 1 ⋅20 = 1111111111112 = 10000000000002 −1
Ymax = 212 −1 = 4095(decimal)
The resolution is the interval represented by the LSB, which is:
yd res =
Ymax −Ymin
Number of intervals
= Ymax −Ymin
2n −1
= 10V −0V
4095
= 2.44mV
3.5
Data Logging and Processing
3.5.1
Computer Bus Structure and Applications
Beside DAC and signal conditioning, a knowledge of computing unit architecture and inter-
facing to process actuating and sensing devices is highly valuable for process control system
design. Indeed, the computing unit either sends instructions encapsulated in voltage signals to
the process actuating devices, or receives binary encoded signals from sensing devices. Such
instructions or encoded signals can handle a set of bits corresponding to I/O ﬁeld device con-
nections or addresses. Such an exchange of instructions and process data is done between the
computing unit components. The three main components of the computing unit architecture
are the processor, memory, and bus structure, as depicted in Figure 3.29. While the proces-
sor component is responsible for the execution of program instructions using data stored in
the memory component, similarly, the bus structure ensures the communication links for data
exchanged between the processor, the memory, and the input/output (I/O) devices. This is
achieved through the storage or the execution of the interrelated input/output logic level of
data or program. More speciﬁcally, there are synchronous buses using a clock-based protocol to
activate and deactivate exchanges between asynchronous buses using a handshake-based pro-
tocol. Furthermore, during such a process, data and instructions are transferred between the
computing unit components and the ﬁeld devices through the bus structure. Communication
lines and function-speciﬁc buses include: address, data, and control. The address line speciﬁes
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

146
3 Discrete-Time Modeling and Conversion Methods
Memory
address bus
Data bus
Address bus
INT
WRITE word
READ word
I/O module
(serial/parallel)
Processor module
Memory module
Field devices
interface logic
I/O logic
1 1 x x x
x
x
x x 1
Data register
Status/Control
register
Data
Status
Control
(IN/OUT)
Control bus
ALU
Register
Program
counter
Instruction
decoder
Control unit
IOD0
IOD1
XXXX
IOA0
IOA1
XXXX
Memory
data bus
Data storage
RAM/ROM/EPROM
Program
storage
Register file (buffer)
System bus
Clock
I/O bus
Power
supply
Figure 3.29 Computer data and instruction addressing structure.
Table 3.8 Logic level signals of I/O data bus.
IN
OUT
Function
0
0
No I/O operation is to be performed
0
1
I/O address and data valid for output operation
1
0
I/O address is valid for input operation
1
1
Not used
which I/O (with a unique address) device communicates with the computing unit at a given
time. It consists of a number of separate signals, each specifying one bit in the address of the
I/O device to be accessed by the processor. Data I/O devices are transferred to/from the com-
puting unit using a data line based on IN and OUT signals representing write or read requests
on the control line. As presented in Table 3.8, IN and OUT signals are used to indicate when
the addresses and data speciﬁed by the I/O address bus and the I/O data bus are valid. The I/O
data bus is bidirectional, depending on whether it is an input or output operation performed
by the processor. The number of lines in the I/O data bus is usually the same as the computing
unit word size. (e.g. 8, 16, 24, 32, 64 or more bits). It should be noticed that the bus creates a
bottleneck, limiting the I/O data throughput.
The I/O device interfacing mechanism can be captured through the memory register or the
buﬀer mapping activities, which include synchronizing signals from system clocks, interrupt
lines, and status lines. For example, in order to alert the processor when an I/O operation is
complete, interrupt circuitry and programming are used. As such, READ and WRITE instruc-
tions from and to I/O devices are executed using techniques for I/O service operations including
programmed I/O (polling), interrupt-driven I/O, or direct memory access. With a programmed
I/O technique, a program routine requests an a I/O service operation by checking the status of
the I/O devices periodically. In the case of an interrupt-driven technique, an interrupt commu-
nicates with the processor through a dedicated control bus based on an interrupt service routine
program for enabling or disabling the active signal from or to ﬁeld devices. This allows the pro-
cessor to interrupt normal program execution momentarily to process the I/O service operation
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.5 Data Logging and Processing
147
Data bus
Address bus
INT
I/O module
(serial/parallel)
Processor module
1
1 x
x x
x
x
x
x
1
Data register
Status/Control
register
Control bus
ALU
Register
Program
counter
Instruction
decoder
Control unit
IOD0
IOD1
XXXX
IOA0
IOA1
XXXX
Clock
I/O bus
Power
supply
Field devices 1
Field devices 2
Field devices x
IR00
IR01
IRxx
I/O
Control
logic
IN
OUT
RD(read)
WR(write)
SELECT
Figure 3.30 Input/output ﬁeld devices interfacing with computing unit.
rather than waiting for an I/O operation to complete, as is done with polling of the I/O port.
The direct memory access technique uses a specialized processor to ensure execution of I/O
service operations. Figure 3.30 illustrates a generic I/O interfaces for an x-bit computing unit.
Example 3.19
Consider push button (PB) and limit switch (SW) input devices that are used
to activate a light emitting diode (LED) by checking their status (open or closed) through the
computing unit, as illustrated in Figure 3.31. From the execution of the READ instruction, the
LED can be activated or deactivated when the ID0 and ID1 bits are loaded over the data bus (bus
driver) onto the register in the processor. Then, after the status is checked, the computing unit
interface generates a SELECT signal to transfer ID0 and ID1 bit data toward the I/O data bus
and the address of the LED interface on the I/O address bus. The processor can set the OUT
signal to logic 1 or 0, indicating a change of LED status through variation of both signal (OUT
J
Q
Q
K
OUT
SELECT
1
1
1
OD0
1
//
LED
3.3 V
Inverting
driver
JK flip-flop
Logic 0 = 0 V
Logic 1 = 3.3 V
1
0
PB
SW
Push
button
Limit
switch
sensor
IR0
ID0
ID1
IR1
3.3V
0.5 kΩ
Bus drivers
Input
module 
Processor and
memory modules
Output
module 
IR0
ODB
Logic program
Initialize
Read ports
   (SW and PB)
Check status
LED on/off
Hold 10 ms
repeat
CLOCK
IAB
IDB
INT
OAB
Figure 3.31 Computing unit interface for the LED activation.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

148
3 Discrete-Time Modeling and Conversion Methods
Solenoid
LS4
LS3
Exhaust of 
pressured air
Air 
supply
Cylinder
24V
0.5 kΩ
0.5 kΩ
IR0
IR1
Bus drivers
Input
module
Processor and
memory modules
Output
module 
IR0
Logic program
Initialize
Read ports
Update status
SELECT 1
1
0
IN
24V
1
RS232
24 V = Logic 1
IAB
IDB
INT
OAB
ODB
Figure 3.32 Pneumatically-driven process with limit switche I/O interface circuitry.
and SELECT signals). This causes the JK ﬂip-ﬂop to sample and hold the level (0 or 1) of the
OD0 at the output Q connected to the RS232 driver. If the logic level at the output of the driver
connected to the LED is at 1 (3.3 V), the current through the LED is zero, as there is no voltage
diﬀerential across it, and the LED is OFF. Otherwise, the LED is ON with the power source and
the resistance deﬁning the LED brightness.
Considering another example of a pneumatically-driven cylinder whose travel is bound by
two limit switches LS3 and LS4, as depicted in Figure 3.32. Solenoid activation drives the pneu-
matic piston rod of the cylinder. Any contact between either switch closes the corresponding
switch contact. An open switch would correspond to the lowest bit 0 sent to the processor, and a
closed switch to bit 1. Here, the bus driver (RS232) could connect the corresponding all-bit data
from all limit switches to the I/O interface over the data line only when both signals (SELECT
and IN) are at logic 1. Then, it is immediately disconnected from the I/O data line on the reset-
ting of the IN signal to logic 0 by the processor; subsequently the loaded LS3 and LS4 data are
checked and their statuses are updated in the register of the processor. In the case where a limit
switch is open, the inverting driver receives 24 V (logic 1), which is inverted into logic 0. Then,
the corresponding input bit data is sent over the data bus in the register of the processor. In a
case where any switch is closed, the bus driver would be set to logic 1, to be sent to the lowest
bit of the processor.
Example 3.20
Using an asynchronous ﬂip-ﬂop, it is possible to store and hold the output
value for a time interval when the input conditions vary (limit switches change). This is called
debouncing circuitry in reference to the mechanical contact bounce eﬀect when the switch
rapidly changes position (i.e. repeatedly open and closed). It is useful to avoid a reactivation
output value despite input change, as in the case illustrated in Figure 3.33. Here, a toxic liquid
has to interlock its input control valve to avoid harming personnel or destroying equipment in
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.6 Computer Interface and Data Sampling Issues
149
1
IR0
Bus 
driver
Input
module
Processor and
memory modules
Output
module
OAB
ODB
Logic program
Initialize
Read ports
Update status
Float
switch
3.3 V
10K
10 K
OFF
ON
Pump
Float
switch
Electro-valve
ZOOM
3.3 V
Toxic liquid
OUT
SELECT
ID0
1
1
1
1
1
0
Inverter
IAB
IDB
INT
Figure 3.33 Double switch position interface with debouncing.
a facility. A safe design uses a ﬂoat switch with two positions: ON and OFF. When the switch
is in the OFF position, the logic level 0 is set to the register of the processor. Otherwise, it is
logic level 1, corresponding to the switch in the ON position. This is done using two successive
inverting drivers to eliminate contact bounce eﬀects. When it is in the ON or OFF position,
the output of the inverter in series ﬂip-ﬂop is logic 1 or 0, respectively. For a time interval, any
subsequent variation of switching contacts would not aﬀect this logic output. Such debouncing
circuitry could be implemented using a D ﬂip-ﬂop. This design is useful for a system that has
an input with more than two positions.
3.6
Computer Interface and Data Sampling Issues
Within digital control architecture, the sample period is the rate at which process data are sam-
pled and sent to the computing unit. A clock connected to the DACs and ADCs supplies a
pulse train every T seconds to synchronize the D/A and A/D closing and opening bus opera-
tions. Figure 3.34 illustrates a typical DAQ and control realization process. Here it can be noted
that computer process control systems use multiple entities and their resulting operations are
time- or event-triggered. These operations are also synchronized by the computer clock to
achieve parallel or simultaneous tasks, especially for entities such as:
1) the sensor node that is time-triggered. A zero-order hold circuit usually samples an analog
sensor;
2) the link to the controller, which is time triggered or event-triggered, and can be a dedicated
link or a bus. The link is often modeled to be the source of delays and jitter created by a
contention in the communications or by transient faults, for example. This is a kind of dis-
turbance model;
3) the controller node, which could be time-triggered or event-triggered. The control law is
computed once every control period, during which, in many cases, the controller node often
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

150
3 Discrete-Time Modeling and Conversion Methods
Controller
algorithm
Digital 
controller
Clock
Sampler
and hold
Process
actuators
and
sensors
Transmission
canal 
sampler
Command
ADC
ADC
DAC
Figure 3.34 Generic digital data acquisition and control processing system.
runs other tasks. Hence it can be modeled as a source of delay and jitter (i.e. a disturbance
model);
4) the computing unit;
5) the link to the actuator is similar to the link between the sensor and the controller. The
diﬀerence is that the information of time delay and jitter lies in the future from a perspective
of control law calculation;
6) the actuator node can be time- or event-triggered. It is rare that the model of a distributed
system adds delays and jitter in the actuator node, but delays and jitter are often inherited
from a preceding task.
Consider u(k), being the signal being sampled and held in order to produce a continu-
ous signal uas(t). The latter should be held constant during a time interval kT to (k + 1)T.
Figure 3.35 illustrates the components of data processing time delays. However, to achieve
eﬃcient computer-controlled regulation, this periodic operation of sampling and holding
uas(t) must consider some time constraints, such as:
1) The control execution period or scan time, which is the time taken by the controller to com-
pute data (read, calculations, save, and output). While the read, save, and output times are
constants, the calculation time depends on the length of the executed program and the exe-
cution speed of the computer. Therefore, the control period cannot be considered constant.
A/D conversion
Control law
Manipulated variable
is output, m(t)
Output
(D/A conversion)
Sample process
variable, y(t)
T sample period
Figure 3.35 Timing structure for the
execution of computer control algorithm.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.6 Computer Interface and Data Sampling Issues
151
The scan time is equal to:
Tscan = Trd + Tex + Tsw
(3.79)
with Trd being the read time or the time taken by the computer to access/read the data com-
ing from the process; Tex being the time of memory data program execution computation
depending on the length of the executed program and the CPU speed being given by:
Tex ≈Number of instructions
Frequency of CPU
(3.80)
and Tsw being the time for saving, adding, writing, and transmitting data, which is equivalent
to the time taken to save data and transmit them to the process;
2) the control transmission delay, Tt, is the propagation time and the time taken by signals
to move along transmission canals (wireless, cables etc.), including the transmission return
sensor time;
3) transient errors are failures that occur in the overall system. There are static failures (e.g. a
hardware failure that renders a utilization factor greater than one) and dynamic failures;
4) the jitter being time-related to abrupt, spurious variations in the duration of any speciﬁed
related interval that could arise, such as due to clock drift, branching the entire four timing
problems listed. It can aﬀect the control and process behavior;
5) the holding element introduces time delays such as Ta, which is the acquisition time (dura-
tion from the sampling instant of the command signal to the time of signal output to the
S/H), and TP, which is the aperture time (time between the start of the hold command and
the time the sampler switch is opened);
6) the feedback signal sampling element or sensor interface (A/D), which is based on the
latch-based conversion technique, as illustrated by Figure 3.36. Furthermore, the sensor
resolution is based on physics and is expected to be inﬁnite. Examples of the technical
encoding principle are depicted in Figures 3.37 and 3.38.
The clock pulse counting interface uses less lag than the encoder pulse counting interface that
has a 1−z−1
T
delay. A signal conversion circuit such as a D ﬂip-ﬂop (latch) causes a time shift of
mT in signal, as illustrated in Figure 3.39.
Therefore, the procedure to compute the 𝜑(z) latch output from the modeling procedure is
as follows:
1) Using the physical model of the latch, consider the unit pulse response as a step input.
2) Put the process model in an ordinary diﬀerential equation (ODE) form.
3) Find the equivalent Laplace transform; that is, Ł (ODE) = Φ (s).
LATCH
+
–
±
0
x
x
MSB
LSB
MSB: most significant bit
Figure 3.36 Latch-based analog-to-digital signal encoding technique.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

152
3 Discrete-Time Modeling and Conversion Methods
N1
N2
N3
θRES
TCLK
NX
TCLK
Counting clock pulse
Pulse counting
Figure 3.37 Pulse counting principle of thermocouple generated signals.
Non-delayed
Delayed
m(t)
T
2T
3T
m(t)
T
2T
3T
T
T
mT
Delay effects
Figure 3.38 Typical signal-based delay eﬀect with D-latch.
4) Then, perform a direct unit step response calculation of the process output response using
T (without delay) and mT (when considering delays) (hint: take the impulse itself and use
the Taylor expansion).
Example 3.21
Consider an integration type process model given by G(s) =
1
s+a; the signal
with converter time delay is illustrated in Figure 3.40, while Table 3.9 summarizes various pos-
sible sampled responses in the z-transform.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.6 Computer Interface and Data Sampling Issues
153
Figure 3.39 Typical input impulse signal holding.
T
1
Latch output
LATCH
Unit impulse
Unit impulse
LATCH
1
s+a
Θ(s)
T
2T
0
1
T
2T
0
1
(1−m)T
mT
With delay
Without delay
Θ(t)
T
2T
0
(1−e−aT)
3T
T
2T
0
3T
(1−m)T
Θ(t)
(1−e−aT).e−aT
(1−e−aT). e−aT.e−aT
(1−e−amT)
(1−e−aT)
(1−e−aT).e−amT
e-aT.(1−e−aT).e−amT
Figure 3.40 Time delay in discrete response of ﬁrst-order process.
Table 3.9 Sampled response in z-transform for a ﬁrst-order process.
Without delay
With delay
G(z) = (1 −e−aT)z−1
1 −e−aTz−1
(Consider as a combination
of a step and a delay ramp)
G(z) = (1 −e−amT)z−1 + (1 −e−aT)e−amT
1 −e−aTz−1
z−2
G(z) = (1 −e−amT)z−1(1 −e−aTz−1) + (1 −e−aT)e−amTz−2
1 −e−aTz−1
Example 3.22
Multiple Sampling Rates
Consider a DC motor block diagram that illustrates two cascaded state feedbacks, as depicted
in Figure 3.41. Here, there are two sampling rates due to many cascade feedbacks. The sampling
time of the current i(t) is 10 times faster than the sampling time of the position loop. Therefore,
either as a deadbeat process or as a ﬁrst-order process model, the current inner loop has enough
time to converge and settle between two successive samples of the motor position. Thus, it does
not aﬀect either the outer position loop or the associated generated motor torque step change,
as illustrated in Figure 3.41.
However, if the current inner loop is reduced to be only three times faster than the out-
loop DC motor position, information on the DC motor dynamics is required, as illustrated
in Figures 3.42 and 3.43. This causes a loss of information, as illustrated in red. To circum-
vent it, it is possible to use an observer to decouple the velocity. However, the modeling of the
quantization of the eﬀect on the sampling period is developed later.
In summary, the discrete-time delay in sampling, Tdelay, is the time taken by the sampling and
hold operation. This time delay is the dominant magnitude in the sampling time selection, which
means that the sampling rate has a secondary eﬀect. This delay, Tdelay, and the transmission and
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

154
3 Discrete-Time Modeling and Conversion Methods
Δθ*
1
KTJs2
1
Ls
R
I(s)
θ(s)
Δθ(k)
ΔI(k)
D
/
A
T = 0.1 ms
T = 1 ms
1
1−z–1
K4
K3
K2
K1
T
+
+
+
+
–
+
+
–
–
Current loop
Position loop
1−z–1
Figure 3.41 DC motor block diagram with current and position cascade feedback.
Unit pulse input to latch at T = 0.1 ms
0
2
4
6
8
10
12
14
16
18
20
1
2
Tm(0)
1
θ,ω
Tm(2)
i*(0)
i*(k)
i*(10)
If deadbeat
If exponential 1st order
Slope ω
Figure 3.42 Typical DC motor current, position, and torque responses to unit pulse impulse.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.6 Computer Interface and Data Sampling Issues
155
Figure 3.43 Typical response of the current loop for a
slower sampling period of inner current loop.
0
2
3
6
8
i(k)
Loss of information depending
on current regulator bandwith
holder signal processing times are given by:
Tdelay = Ta + Tp + Tscan + Tt
(3.81)
It should be noticed that the clock synchronizes all measurements and controls the signal.
Hence, the control delay is not constant. For example, when data are transmitted to the com-
puter and the computer has not completed the processing of the data received before, a problem
will appear. Therefore, the transmission time delay must be enough for the computer to perform
calculations before receiving the next data. Hence, the selection of the sampling period consists
of considering all the existing, delays, even in data transmission, so that the control performance
will not be aﬀected. The selected delay represents the minimum value of the sampling period.
3.6.1
Signal Conversion Time Delay Eﬀects
In addition to the hard constraints related to the process and the control system physical struc-
ture, the sample period should also fulﬁll the process performance requirements. Therefore,
it should be noted that the sample period chosen for a computer control system can have a
signiﬁcant impact on its performance, especially on:
1) The disturbance rejection time issue. The magnitude of the process response is dependent on
the sample period. For a short sample period, disturbances are detected quickly and com-
pensated before they can signiﬁcantly aﬀect the process output. On the other hand, with a
long sample period, the disturbance aﬀects the process for a relatively long time before a
compensation is applied, making the magnitude deviations of the process output likely to
be unacceptably large. Therefore, it is suitable to consider which disturbances can occur in
a process and to select a sample period that is short enough. Hence, disturbances can be
rejected by the controller before they adversely aﬀect the system performance. The maxi-
mum sampling period capable to ensure the rejection of disturbance depends on the types
of process (boiler, motor, cooler etc.) and the kind of process behavior at stake. Further-
more, the knowledge on disturbance periodical characteristics and tolerance limits in output
changes the process control strategy;
2) The process dynamics stability. A system is dynamically stable if all its roots have a negative
real part in the s-domain or if they belong to the unity circle in the z-domain. This is because
any time delay introduces a phase shift and even causes process instability. The roots of
the characteristic equation determine the system stability, and the value of these roots is
a function of the sample period T in most cases. If T is made too large, the magnitude of
one or more of the roots can be less than 1 and the resulting system is unstable. However,
a stability analysis can establish a limit on the sample period during stationary operating
conditions without necessarily ﬁnding the shortest sample period required for the desirable
transient results;
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

156
3 Discrete-Time Modeling and Conversion Methods
3) The speed of process response. The sample period chosen for a discrete control system must
be equal to or shorter than the input response time of the system. Before the settling time
(time taken by any system to reach its ﬁnal value) TS, the system experiences its transient
behavior, and after TS, the system is in its steady state. The computer control must be able to
follow the transient behavior, so it is necessary to set a sampling time lower than the settling
time TS. The transient behavior of a given system is characterized by its rise time Tr and
it must satisfy Ts ≤Tr in order to ensure that the system evolves. In short, several factors
usually compete when selecting a sampling rate, such as:
a) sample as fast as possible, to maximize accuracy or to provide adequate response time;
b) sample as slow as possible, to preserve the processing time while avoiding the noise from
dominating the input signal;
c) sample at a rate that is a multiple of the control algorithm frequency to minimize the
jitter.
Based on the typical conﬂicting process requirements listed previously, the sample period
should be derived with care when the discrete controller is designed, to ensure that a favorable
system performance is achieved. It is usually preferable to make the sample period as short
as possible in order to achieve rapid response and minimize the adverse eﬀects of the sample
period on stability. On the other hand, calculations must be performed by the control computer
every sample period. The shorter the sampled period, the greater the computational load placed
on the control computer.
4) Aliasing eﬀects. When a continuous-time signal is sampled, some information can be lost, as
the generated discrete-time signal is deﬁned only for the sampling instants. For a sinusoid
with a period of T, as illustrated by Figure 3.44, if the sampling period TS1, 2 is greater than
the half-period, meaning T∕2, it is possible to completely miss one lobe of the sinusoid. Even
more, if the sampling period is twice per sampling period, the same values are obtained in
time for each period and cannot be distinguished. With a sampling period TS1, 2 < T∕2, each
lobe can be sampled at least once and the oscillation will be detected. However, if t →∞,
all amplitude values of the sinusoid will be detected.
Before sampling or digitalizing a signal, it is suggested to pass it through a low-pass ﬁlter as a
continuous-time signal; or else, the process data might be corrupted by high-frequency signals
appearing as low frequency.
3.6.1.1
Nyquist Sampling Theorem and Shannon’s Interpolation Formula
A signal x(t) can be reconstructed from samples x(n) = x(nT) when the sampling frequency,
fS, is greater than twice the maximum frequency of the signal being sampled, fsampled frequency,
Signal
F(t)
Time
T/2
T/2
T/2
Signal samples
Ts2
Ts1
Figure 3.44 Sampling period eﬀect on sinusoid signal.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.6 Computer Interface and Data Sampling Issues
157
equivalently, when the Nyquist frequency (half the sample rate) exceeds the highest frequency
of the signal being sampled.
Oversampling Case A case is considered where a sampling frequency, fS, is required to be more
than twice the desired system bandwidth so that a digital ﬁlter can be used in exchange for a
weaker analog anti-aliasing ﬁlter. For fs > fsampled frequency, the signal x(n) can be reconstructed
via the Shannon interpolation formula given by:
x(t) =
∞
∑
n=−∞
x(n)sin[2𝜋fs(t −nT)]
2𝜋fs(t −nT)
(3.82)
Undersampling (Below the Nyquist Rate) A signal of frequency fsampled frequency ± nfs (n being an
integer) is generated. This undesired frequency interaction and translation due to sampling is
called aliasing. If aliasing occurs, no signal processing operation downstream of the sampling
process can recover the original continuous-time signal. Here, sampled high-frequency signals
can appear to be lower-frequency signals because of aliasing and consequently become
indistinguishable in the discrete-time domain. The apparent lower frequencies, fa, due to
aliasing are:
fa = |fsampled signal −nf s|
(3.83)
Practically, it is suitable to use a high sampling frequency with an analog ﬁlter matching this
frequency. Then, after the ADC, the signal is down-sampled to the frequency used by the con-
troller. Recalling that the pre-ﬁlter introduces a phase shift and 𝜔b, the desired bandwidth of
the closed-loop system to avoid aliasing eﬀects, is set as 5𝜔b ≤2𝜋T ≤100𝜔b, the (non-ideal)
anti-aliasing ﬁlter has a cutoﬀfrequency 𝜔f in between 𝜔b and 𝜔c. The approximate relation is
given by:
ts𝜔c = 5
𝜉
(3.84)
where ts is the settling time (1%) and 𝜉is the damping factor, which could be rewritten as
ts
100 ≤T ≤ts
5 . A related appropriate choice is also to let T = tr
10, where tr is the rise time of the
open-loop system. Here, sample rates should be about 20 times the bandwidth or faster in order
to ensure that the digital controller matches the performance of the continuous controller.
3.6.2
Estimation of the Minimum Sampling Rate to Be Selected
The signal reconstruction requires the time step T of the discrete-time signal to be relatively
small in order to behave approximately as the original continuous-time signal. For the design
of process control system, the sampling period must be compatible with rate speciﬁcations of
the process I/O devices, interfaces used, and with design speciﬁcations. Thus, an option could
be to select the sampling period to be long enough so that suﬃcient time is available for the
execution of the controller algorithm and I/O operations during each discrete-time step. In
addition, it is suitable to select the sample period to be as short as possible in order to achieve
rapid response and minimize the adverse eﬀects of the sample period on stability. Therefore,
depending on the applications of the control system and instrumentation for either: (i) digital
ﬁlter design; (ii) digital controller design; or (iii) process simulation, the choice of the sampling
period is expected to achieve tradeoﬀs between conﬂicting with sample period objectives. Here,
some guidelines (rules of thumb) for sampling period selection are discussed.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

158
3 Discrete-Time Modeling and Conversion Methods
With digital ﬁlters for signal processing, the objective is to make the diﬀerence between the
original and the reconstructed signal as small as possible, usually using DSPs (digital signal
processors). Thus, sampling must fulﬁll the requirement of:
1
T ≥5fH
(3.86)
Here, fH is the highest frequency for the discrete-time ﬁlter to have almost the same character-
istics as the original continuous-time ﬁlter. For example, in the case where the low-pass ﬁlter fH
is ﬁve times the bandwidth, a ﬁlter up to 25 times the bandwidth would have the characteristics
similar to that of the original continuous-time ﬁlter.
With a digital controller and holding element, the objective is to make the closed-loop system
behave according to performance expectations, usually implemented using digital controllers
(μController, programmable logic controller etc.). Thus, the selection of a sample time T usually
depends on:
1) the execution time of the control algorithm;
2) the interface speed of the A/D and DACs;
3) the desired process dynamics;
4) the desired closed-loop dynamics (system responses, command trajectory, disturbance
input);
5) the stability (all systems can become unstable);
6) the smallest sample time that is suitable for the disturbance rejection;
7) the avoidance of aliasing eﬀects (Nyquist frequency larger than the closed-loop bandwidth);
Therefore, based on the process closed-loop bandwidth, 𝜔b, the system response rise time, Tr,
the frequency response of the continuous-time system, 𝜔c, and the computing time of the digital
controller, Tscan, the following rules of thumb for sampling time, T, selection are presented:
Rule 1a. The DAC holds the computed controller signal during a time step, which should be:
T ≥0.2Tres
(3.87)
where the response time, Tres is 63% of rise time Tr, which is derived from the set point step
response of the system. For a system having a dominating time constant, 𝜏, the response time is
approximately equal to this time constant (Tres = 𝜏). If the bandwidth of the process closed-loop
control system is 𝜔b (rad s−1), the response time of the control system can be estimated by:
Tres ≈1
𝜔b
(3.88)
Rule 1b. The sampling time T for a discrete-time controller could be derived from the desired
speed of the closed-loop system, such that the number of samples N taken by the closed-loop
system per rise time Tr is 4–10:
N = Tr
T ≈4 −10
(3.89)
Rule 1c. The sampling period, T, is based on the rise time, Tr, of the system response to a
step such that the input to the discrete controller should be sampled approximately six times
while the sampling interval can be adjusted to two to three times per rise time. It could be
estimated by:
T
2 ≤Tr
10
(3.90)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

3.6 Computer Interface and Data Sampling Issues
159
This corresponds to a sampling frequency that is 10–20 times the system’s closed-loop band-
width.
T ≈(10to20)
𝜔b
(3.91)
Rule 2. Considering the closed-loop bandwidth fb(Hz) of the feedback system: this is related
to the speed at which the feedback system can track the command input as well as the amount of
attenuation the feedback system must provide in the face of plant disturbances. Such a sampling
period should be chosen in the range of:
1
30fb
< T < 1
5fb
(3.92)
Rule 3. Another criterion for the selection of the sampling period is based on the rise time
Tr of the feedback system, to provide smoothness in its time response. For a ﬁrst-order linear
system of the form H(s) =
1
𝜏s+1, the rise time is given by:
Tr = 2.2𝜏
(3.93)
Then, the sample period should be bound by:
0.095Tr < T < 0.57Tr
(3.94)
For a second-order linear system of the form H(s) =
𝜔n
2
s2 + 2𝜉𝜔ns + 𝜔n2 , the rise time of the
canonical second-order system is given by:
Tr = 𝜋−sin−1(
√
1 −𝜉2)
𝜔n
√
1 −𝜉2
(3.95)
For a damping ratio 𝜁= 0.707, the rise time yields:
Tr = 3.33
𝜔n
(3.96)
Then the sampling time, T, should be bounded by:
0.06Tr < T < 0.4Tr
(3.97)
Rule 4. A time delay of up to a full sample period is suitable between two digital controller
computed values. Such time delay should be kept at about 10% of the rise time corresponding
to the sampling period to satisfy:
T < 0.05
fb
(3.98)
Rule 5. Based on the frequency response of the continuous-time system, the sampling rate,
T𝜔0 should be selected such that:
0.15 < f𝜔0 < 0.5
(3.99)
where f𝜔0 is the gain crossover frequency of the continuous-time system in radians per second.
Rule 6. The sampling period must result in a Nyquist frequency (half the sampling rate) greater
than the highest input signal. With 𝜔b being the desired bandwidth of the closed-loop system,
in order to avoid some aliasing eﬀects, the sampling period should be bound as:
5𝜔b < 2𝜋T < 100𝜔b
(3.100)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

160
3 Discrete-Time Modeling and Conversion Methods
When the settling time (1%) ts is known, it could be rewritten as:
ts
100 ≤T ≤ts
5
(3.101)
A relatively good choice would be:
T = tr
10
(3.102)
Rule 7. The sample period is constrained by the performance of the computing unit such that:
T ≥Tscan
(3.103)
In addition, this sampling period must be compatible with the rate of data updates through
I/O interfacing devices (such as DAC or ADCs). Here, the selection of the sample period is
achieved in the knowledge that the computing unit must perform calculations at every sample
period and that the shorter the sampled period, the greater the computational load placed on
the computing unit. Additional free time should be available to allow future enhancements to
the controller algorithm.
With process simulators, the sample period should be
T ≤
0.1
|𝜆|MAX
(3.104)
where |𝜆|MAX is the largest of the absolute values of the eigenvalues in the system model. Con-
sider a matrix A to be the state-space model given by: dx
dt = Ax + Bu. For the transfer function
model, the poles instead of the eigenvalues (the poles and the eigenvalues are equal for most
systems that do not have pole-zero cancelations) are used. If the model is nonlinear, it must be
linearized before calculating eigenvalues or poles. If possible, it is suggested to use a simulation
of the system to test the eﬀect of the value of T before implementation.
3.6.2.1
Remarks on Sample Periods
High-sampling rates are suitable to control temperatures for heating systems (e.g. boilers). This
could take many seconds as storage tank temperature change is slow.
Small sampling rates are suitable for motion control applications. This could be less than a
microsecond.
The sampling rate period could introduce some numerical errors in digital controller design.
A solution could be to have the sample period large enough in order to avoid numerical error
issues.
Example 3.23
Consider the load torque disturbance D(t) and an input voltage v(t). The motor
shaft position has been approximately modeled using:
d𝜃(t)
dt
= Kmv(t) + KtD(t)
The corresponding process diﬀerence equation is:
𝜃n −𝜃n−1 = KmTvn−1 + KtTdn−1
Any change in motor shaft position, Δ𝜃, from an applied disturbance of the load torque of
magnitude D during that sample period, T, would be given by:
Δ𝜃= KtTD
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
161
Considering that for a load torque of 90 N.cm, the deviation in shaft position due to these
torques is less than 0.01 revolutions. Hence, with Kt = 0.3 rpm∕N.cm, the sample period, Tdist
with respect to the disturbance rejection capability of the system would be bounded by:
Tdist ≤
0.01rev
(
60 sec
min
)
0.3 rpm
N.cm(90 N.cm) = 0.022 sec
The sample period for a discrete controller must be chosen such that it is equal or shorter than
the system response time to inputs. For a ﬁrst-order system, time constant is equal to 0.03 s.
From the rule of thumb, the sample period, Ttri should be T < 0.03 s to ensure a good tracking
of input signals. With respect to system time response, the sampling period should be:
Ttri = 0.03 s
With respect to the stability criteria, where an output voltage of 5 V is sent by the controller
toward a motor causing its rotation at 950 rpm with no load torque being applied, the motor
gain would be given by:
Km = 950 rpm
5 V
= 190 rpm V−1
Then, the closed-loop transfer function yields:
𝜃(z)
r(z) =
TKmz−1
1 −(1 −KmT)z−1
and the stability condition is satisﬁed if
0 < KmT < 2
The sample rate, Tsa with respect to the stability criteria would be
Tsa < 2 × 60
190
= 0.63 s
Consider that the delay associated with the control algorithms, execution and I/O interfacing
Ta is estimated to be:
Ta = 3 μs
From the analyses of the three sample periods (Tdist, Ttri, Tsa), the sample period must sat-
isfy Ta < T < min(0.022; 0.05; 0.63) equivalent to 3 μs < T < 0.022 s. It is possible to select
T = 1 ms.
Exercises and Problems
3.1
.a) Derive the number of bits a DAC, requiring a voltage in the ±8 V range and a resolu-
tion of ±0.05 V, which can be delivered for process control.
b) Consider a process signal output range of ±8 V and a resolution 0.05% of this range.
Derive the number of bits of A/D required.
c) Derive the number of bits a DAC can provide for the velocity command of a bidirec-
tional motor between 2.5 m s−1 and 0.1 m s−1, with a possible step change of 0.05 m
s−1, (Hint: non-zero velocity is 0.1 m s−1).
d) Derive the number of bits a DAC can deliver for the temperature command proﬁle
of a heater system, such that the maximum temperature is 280∘C and the minimum
non-zero temperature is 45∘C with an incremental value of 0.2∘C.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

162
3 Discrete-Time Modeling and Conversion Methods
3.2
.a) Consider a motor shaft operating in the velocity range of 0.90 −2.30 m s−1. Deter-
mine the number of bits provided by an ADC with a 150 Hz sampling frequency to
ensure a resolution of 0.02 m s−1.
b) Consider an 8-bit ADC with Vref = 5 V. For the input signals of 1.5 and 5 V, derive
the resulting digital signal (code) in the case of bidirectional and unidirectional oper-
ations, respectively.
c) From the list of physical phenomena that follows, list two (contact and contactless)
sensors used to measure them.
i) Flow rate of liquids in pipelines
ii) Speed of an elevator motor
iii) Pressure of an underwater vehicle
iv) Fermentation tank temperature.
3.3
Considering a temperature sensor of a liquid in a tank delivering at 150∘C to a 9.5 V
signal output with a maximum tank temperature of 210∘C:
a) derive the ADC voltage increment required to achieve a resolution of 0.5∘C;
b) derive the number of bits required as an ADC for 0 −180∘C temperature measure-
ment;
c) select the gain of an ampliﬁer located between the temperature sensor and an 8-bit
ADC for 0 −150∘C temperature measurement.
3.4
Design and sketch the circuitry of a 10-bit binary signed DAC capable of outputting a
±10 V signal.
3.5
Consider an 8-bit ADC with Vref = 5 V and a diﬀerential input channel. The positive input
voltage V+ and the negative voltage V−are, respectively, in the range of [0.99, 1.03] and
[1.02, 1.025] V. Answer the following questions:
a) What is the input range of the resulting diﬀerential input?
b) What percentage of the full input range does that cover?
c) How large is the quantization error as a percentage of the diﬀerential input range? If
the ADC oﬀers the gains {0.1, 0.2, 2, 5, 20, 50, 100, 200}, which gain would you select?
d) How does your selected gain aﬀect the quantization error (again as a percentage of
the diﬀerential input range)?
3.6
Follow these instructions to design an anti-aliasing ﬁlter for an unknown waveform
amplitude:
a) identify the anti-aliasing frequency at normal operation, a motor produced a 65 Hz
signal, and the A/D sampling rate is 3 Hz;
b) estimate the apparent frequency;
c) based on the Shannon theorem, determine at what sampling frequency the aliasing
eﬀect does not occur.
3.7
Consider a motor that rotates at a nominal speed of 1500 rpm, with each revolution of
the motor shaft involving 55 pulsation signals (commutation) toward the velocity sensor.
What will the maximum allowable sampling period be for the ADC to avoid an aliasing
eﬀect?
3.8
Consider a 100 Hz ADC with a resolution on the angular position sensor of 0.005 rev.
Derive the resolution of the average velocity. If the A/D sampling frequency is doubled,
what will the new velocity resolution be?
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
163
3.9
.a) What value is ⃛1101⃜in the decimal number system? What would be the minimum
resolution expected from this DAC if it received this binary number for a [1.4, 3.2] V
operating range?
b) What functions are is provided by a DAC?
c) List some of the advantages and disadvantages of the resistive ladder network.
d) Consider an 8-bit “resistive ladder” DAC. Draw its complete schematic and write a
program that will step through 256 diﬀerent analog voltages.
3.10
A motor generates an output voltage signal, as shown in Figure 3.45.
a) If the signal is captured by an ADC with a 150 ms sampling period, design an
anti-aliasing ﬁlter for this converter.
b) In the case where a 50 Hz signal is sampled at 1.5 Hz, what is the lowest apparent
frequency in the sampled data that arises from aliasing? What range of sample fre-
quencies ensures that aliasing does not occur when a 50 Hz is being sampled?
3.11
A ball is attracted magnetically, as illustrated in Figure 3.46.
Find the linear discrete model that relates distance h(t) between the ball and the solenoid
(in meters) to induced current i(t). State all assumptions. Similarly, derive the discrete
model relating the voltage V(t) (in volts) and the current i(t) (in amperes). Identify any
signiﬁcant limitations in these models.
3.12
.a) Following the general discrete procedure presented in Table 3.4, obtain the discrete
model for a process deﬁned by:
𝜏1
d2y(t)
dt2
+ 𝜏2
dy(t)
dt
= Kx(t)
Check the results with the equivalent z-transform in Appendix C and conclude.
Motor
output 
signal
(V)
Time (s)
0.05
0.10
0.15
0.20
0.25
0.30
0.35
0.40
Figure 3.45 Motor voltage output signal.
Figure 3.46 Magnetically suspended ball.
V(t)
R
i(t)
L
Mg
h(t)
+
–
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

164
3 Discrete-Time Modeling and Conversion Methods
Manually operated
electro valve(On/Off)
Water outflow
(disturbance), qo(t)
Height of 
water tank h(t)
Position valve θ(t)
Water inflow
tank qi(t)
Water 
Figure 3.47 Water tank with inlet valve computer controlled.
b) The water tank illustrated in Figure 3.47 has a manually operated outlet chute and a
computer-controlled inlet valve. The diameter of the tank is 24 m. The valve allows
water to ﬂow into the tank qi(t) at a rate of 2.8 m3 s−1 when it is fully opened. The ﬂow
out of the tank q0(t) is to be modeled as qo(t) = p(t)
√
2g
√
h(t). For a sample period of
45 s, derive the diﬀerence equation describing the height of water in the tank h(t) as a
function of the percentage of valve opening p(t) = a = constant and the disturbance
ﬂow q0(t).
3.13
Reconsider the tank illustrated in Figure 3.47 and the process model relating the valve
position 𝜃(t) with the height level of water in the tank h(t).
a) Derive the process diﬀerence equation.
b) Plot the process response h(n) to a valve position step change of of 0.8 m amplitude.
All initial conditions are assumed to be zero. Assume the sample period is 0.1 min.
c) Derive and plot the continuous solution of the process model from the diﬀerential
equation for the same input. Compare the results.
d) With a sample period of 0.5 min, compute the ﬁrst six process response h(n) values
from the discrete step input depicted in Figure 3.48. Plot the results.
3.14
The spacecraft shown in Figure 3.49 has a mass of 3500 kg, while the rocket has an ini-
tial mass of 9000 kg. The rocket carries a propulsion engine that generates a thrust of
750 000 N. With a sample period of 5 ms, develop a discrete time dynamic model for the
spacecraft position (x-axis) (in kilometers). Assume that when the engine is set to ON
(input variable f(t)), the rocket mass consumption rate is 150 kg s−1.
3.15
For each of the continuous functions shown in Figure 3.50, develop their equivalent
discrete-time command input for two sampling periods of 0.01 and 0.02 s.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
165
10
Valve 
position
θ(t) (rev)
Time (min)
2
4
6
8
2
4
6
8
12
14
16
18
20
10
12
Figure 3.48 Step input to tank ﬁlling system.
Figure 3.49 Spacecraft motion with an
angle 𝛼.
α
x-axis motion
Thrust
Θ(t)
0.12
0
0.8
0.18
Time (s)
0.04
0.06
0.02
r(t)
Time (s)
2
0.02
0.08
Figure 3.50 Command input sequence with intersampling.
3.16
Using the input signal sequence in Figure 3.51,
a) derive the equivalent discrete command input obtained by sampling with a time
period of 1 s;
b) for a sample rate of 1 Hz, derive the corresponding r(n) for the periodic command
input sequences shown in Figure 3.52. (Hint: the term 1∕(1 −zk) generates a sample
sequence that has a non-zero term every k samples.)
3.17
Consider two linear motion rods, each attached to a 12-steps-per-revolution stepper
motor in a 2D printer, as depicted in Figure 3.53.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

166
3 Discrete-Time Modeling and Conversion Methods
f(t)
5
10
0
1
15
Time (s)
2
Figure 3.51 Command input sequence.
0
2
9
4
6
8
10
12
r(t)
r(t)
18
1
3
5
7
9
Time (s)
Time (s)
6
12
0
Figure 3.52 Periodic command inputs.
14
y(t) (cm)
x (cm)
8
10
12
14
10
12
18
20
22
24
16
18
1
2
3
4
5
6
7
8
9
10
11
12
R
6
16
Figure 3.53 Circle curve point-to-point motion.
The motors’ operating characteristics are: motor torque rating of 0.9 N m; screw drive
pitch of 3.2 rev cm−1; and inertia of 0.03 N.m.s2. Generate the synchronized x and y
command input model corresponding to an open control algorithm for the 2D printer
positioning system.
3.18
Develop a fully parametric, point-to-point position (𝜃initial to 𝜃ﬁnal) discrete command
input signal using a trapezoidal velocity trajectory with three speed proﬁles (constant
acceleration segment, constant velocity segment, and constant deceleration segment).
Consider the upper limits ± ̇𝜔max and 𝜔max are known. This means that the parametric
position command discrete equation would be:
𝜃∗(z) = f (𝜃∗
initial, 𝜃∗
initial, T, ̇𝜔max, 𝜔max)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
167
A1 (m2)
h1(t)
(m)
A2 (m2)
h2(t)
(m)
q1(t)
(m3 s–1)
ω(t)
α(m3 rev–1)
Electro-valve
β
(m3 s–1 m–1)
Pump
input
u(t)
(V)
Keω(t)
(V)
Motor
La
(henries)
Ra
(ohms)
q2(t)
(m3 s–1)
qpump(t)
(m3 s–1)
Vessel 1
Vessel 2
Gear 1:5
Figure 3.54 Two-vessel system with pump.
NB: The total time to reach the ﬁnal desired position is not speciﬁed but rather is a func-
tion of the desired distance to travel, the maximum acceleration, and maximum velocity.
In addition, the initial and ﬁnal velocities are zero. Finally, the ﬁnal position value 𝜃*
ﬁnal
should be held indeﬁnitely.
3.19
For a given sample period of 25 ms, develop a discrete-time model for the two-tank sys-
tem shown in Figure 3.54.
3.20
.a) Find the z-transform for the following process models using, respectively: (i) a ZOH;
and (ii) a ﬁrst-order hold. Plot their resulting unit step responses for T = 0.5 s.
Gp(s) = 12.5
s
Gp(s) =
1.5
0.25s + 1
Gp(s) =
0.15
s2 + 3.5s + 4.5
b) Perform a comparative analysis of the results obtained.
3.21
It is desired to accelerate a motor from 0 up to 300 rpm in 50 ms, to operate it at that speed
for 5 s, and then to decelerate it to a stop in 50 ms. The shaft position proﬁle, 𝜃(t) is to be
represented by the following three cubic polynomials. Determine the spline coeﬃcients.
⎧
⎪
⎨
⎪⎩
𝜃(t) = a3t3 + a2t2 + a1t + a0 … ∀t ∈[0, t1]
𝜃(t) = b3t3 + b2t2 + b1t + b0 … ∀t ∈]t1, t2]
𝜃(t) = c3t3 + c2t2 + c1t + c0 … ∀t ∈]t2, t3]
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

168
3 Discrete-Time Modeling and Conversion Methods
3.22
.a) A system response is given by y(kT) = kT for k ≥0. Find y(z) for this response among
one of following the solutions:
i) y(z) =
Tz
(z −1)2
ii) y(z) =
z
T2(z −1)2
iii) y(z) =
T2z
(z −1)
iv) y(z) =
Tz
(z −1)2
b) Find the response at the ﬁrst four sample instants (T(0), T(1), T(2), T(3)) of:
T(z) =
z3 + 1.2z2 + 4
z3 + 3.2z2 + 0.45z
(Hint: Long division)
c) A 50 Hz signal is sampled at 2.5 Hz. Derive the lowest apparent frequency in the sam-
pled data that arises from aliasing. What is the range of the sample frequencies to
ensure that aliasing does not occur when a 50 Hz signal is being sampled?
Bibliography
1 Ackermann, J. (1985). Sampled Data Control Systems: Analysis and Synthesis, Robust System
Design. Springer-Verlag.
2 Åström, K.J. and Wittenmark, B. (2011). Computer-Controlled Systems: Theory and Design.
Courier Dover.
3 Bollinger, J.D. and Duﬃe, N.A. (1989). Computer Control Machines and Processes.
Addison-Wesley.
4 Brockwell, P.J. and Davis, R.A. (2009). Time Series: Theory and Methods, 2e. Springer.
5 Fadali, S. and Visioli, A. (2012). Digital Control Engineering, 2e. Academic Press.
6 Isermann, R. (1989). Digital Control Systems. Berlin: Springer-Verlag.
7 Jury, E. and Tsypkin, Y.Z. (1971). On the theory of discrete systems. Automatica, Elsevier 7
(1): 89–107.
8 Powell, G.F.J.D. and Workman, M. (2006). Digital Control of Dynamic Systems, 3e.
Ellis-Kagle Press.
9 Golnaraghi, F., Kuo, B.C., and Adams, J.A. (2009). Automatic Control, 9e. Wiley.
10 Lorenz D.R. (1999). Advances in Electric Drive Control, IEEE International Conference
Electric Machines and Drives, pp. 9–16.
11 Patterson, D.A. and Hennessy, J.L. (2013). Computer Organization and Design MIPS Edi-
tion: The Hardware/Software Interface. Morgan Kaufmann.
12 Paraskevopoulos, P.N. (1996). Digital Control Systems. Prentice Hall.
13 Polderman, J.W. and Willems, J.C. (2013). Introduction to the Mathematical Theory of Sys-
tems and Control. Springer.
14 Santina, M., Stubberud, A., and Hostetter, G. (1994). Digital Control System Design. Oxford
University Press.
15 Skogestad, S. and Postlethwaite, I. (2005). Multivariable Feedback Control: Analysis and
Design, 2e. Wiley.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

169
4
Discrete-Time Analysis Methods
4.1
Introduction
Based on the discrete-time process models, it is possible to perform discrete-time analysis
using graphical tools such as discrete zero and pole location plot or discrete frequency response
(Fourier transforms). In addition, stability deﬁnitions and tests for discrete-time systems are
covered based on the speciﬁc parameter system model. Hence, the design speciﬁcations for
discrete controller algorithms are deduced from derived discrete-time system characteristics
(steady and transient) in time-domain properties (e.g. rise time, settling time, overshoot, etc.)
as well as in frequency domains (phase margins [PM], and gain margins [GM]). This chapter
aims to deﬁne discrete controller design speciﬁcations by revisiting the analysis of discrete sys-
tem dynamics using graphical tools such as root locus and frequency response (discrete-time
Fourier transform [DTFT]; fast Fourier transform [FFT]; and discrete Fourier transform
[DFT]) as well as stability tests and criteria for discrete-time systems (the Jury–Marden test
and Routh–Hurwitz criterion). Accordingly, time and frequency properties for controller
design (settling time, percent of overshoot, gain, and PMs, etc.) are deﬁned. Then, some indices
for the dynamic performance evaluation and benchmarking of the mechatronic system and
process are discussed.
4.2
Analysis Tools of Discrete-Time Systems and Processes
4.2.1
Discrete Pole and Zero Location
The root locus is the determination of the closed-loop pole locations under varying gain K, or
more precisely, it represents the values of the poles of the transfer function Gp(z) for which
the condition 1 + KGp(z) = 0 is satisﬁed as K varies from 0 to inﬁnity. This means that the root
locus includes all the points in the z-plane that correspond to a phase of KGp(z) being equal to
180∘. This may be written as two algebraic constraints so that the magnitude condition is given
by:
|KGp(z)| = 1
(4.1)
and the angle condition is given by:
∠Gp(z) = 1∠180∘or (1 + 2m)180∘for m = 0, ±1, ±2, …
(4.2)
These two conditions allow graphical solution of the roots (poles) from the characteristics
equation based on the controller gain and controller pole/zero elements. This is diﬀerent from
the eigenvalue migration graphical representation. Hence, the various locations of the roots
Control Of Mechatronic Systems: Model-Driven Design And Implementation Guidelines,
First Edition. Patrick O.J. Kaltjob.
© 2021 Patrick O.J. Kaltjob. Published 2021 by John Wiley & Sons Ltd.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

170
4 Discrete-Time Analysis Methods
(the contour) of the characteristics equation of the closed-loop system after varying system
parameters, such as gain K from zero to inﬁnity, give an idea of the choice of open-loop pole
and zero to achieve a suitable system dynamic response.
Consider in the z-domain the generalized form of the discrete closed-loop transfer function,
which can be written as:
Gp(z) = ci
′zi + · · · c2
′z2 + c1
′z + c0
′
bn
′zn + · · · b2
′z2 + b1
′z + b0
′
(4.3)
The corresponding characteristics equation is obtained from the denominator of the transfer
function and can be expressed as:
1 + KGp(z) = 1 + K(z + a1
′)(z + a2
′) · · · (z + an
′)
(z + p1′′)(z + p2′′) · · · (z + pp′′) = 0
(4.4)
This would be equivalent to
(z + b1
′)(z + b2
′) · · · (z + bm
′) = 0
(4.5)
Hence, to locate any point on the root locus, the angle condition could be used such that:
(∠(z + a1
′) + ∠(z + a2
′) · · · + ∠(z + an
′)) −(∠(z + p1
′′) + ∠(z + p2
′′) · · · + ∠(z + pp
′′))
= ±180(1 + 2m)
(4.6)
Recalling that for any roots z = c + jd, the angle would be ∠(z + a2) = arctan
d
c−a2 . The gain K
corresponding to any resulting point zp on the root locus could be derived using the magnitude
condition such that:
K|zp + a1
′||zp + a2
′| … |zp + an
′|
|zp + p1′′||zp + p2′′| … |zp + pp′′| = 1
(4.7)
For a second-order system model, the roots are:
{
z1 = e−a1′T
z2 = e−a2′T
(4.8)
If a root is real and less than zero, there is no equivalent root in the discrete domain. If the
roots are complex-conjugate pairs, these equations become:
{
z1 = e−𝜔n(𝜉+j
√
1−𝜉2)T
z2 = e−𝜔n(𝜉−j
√
1−𝜉2)T
(4.9)
Then, the location of these roots in the z-plane for varying values of 𝜁and 𝜔n could be
sketched in a z-plane (real and imaginary axes). The procedure for sketching the various root
locations is presented in Table 4.1.
Example 4.1
Applying the Magnitude and Angle Condition for Root Locus Sketching
Consider the open-loop transfer function given by:
H(z) =
z
z2 + z
2 + 5
16
=
z
(z −p1)(z −p2)
with p1 = 1+2j
4
and p1 = 1−2j
4
Figure 4.1 illustrates the resulting pole zero, departure angle, magnitude, and phase for a test
point, as well as the resulting roots locus sketching.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

4.2 Analysis Tools of Discrete-Time Systems and Processes
171
Table 4.1 Generic rules for manually sketching the root locus in the z-plane.
Rules and deﬁnitions
Rule 1: Locate the open-loop zeros and poles of the system model given by Gp(z) in the graphic
representation over the z-plane, such that X would denote a pole and O would denote a zero.
Rule 2: The number of branches is equal to the order of characteristic equation (i.e. 1 + KGp(z) = 0) or the
number of poles. All n branches of the locus start at the poles of open-loop Gp(z). This corresponds to when
the gain K is equal at zero. It ends at either the zeros of open-loop Gp(z) or at inﬁnity when the system
parameter gain reaches inﬁnity. Furthermore, the root loci on the real axis are on the left of an odd number of
(real axis) poles and zeros. Also, in the case of complex conjugates poles, the root loci are symmetrical with
respect to the real axis.
end
start
Im(z)
Re(z)
Rule 3: Asymptotes of the loci are dependent on the poles and zeros of Gp(z), and are given when roots go to
inﬁnity. If asymptotes exist, they are characterized by their intersection point with the real axis, also called
the centroid, which is given by:
𝜎=
∑pi −∑zi
no.of poles −no.of zeros
When the root loci move to inﬁnity toward zero, the root loci are asymptotic lines radiating out from the
centroid centered at 𝜎with angles 𝜙i given by:
𝜙i =
180(1 + 2m)
no.of poles −no.of zeros
with i = 1, 2, … , no of poles, no of zeros, and m being any integer. If there are fewer zeros than poles, then the
loci end at inﬁnity as K increases to inﬁnity.
Im(z)
Re(z)
X
X
X
ø1
ø1
ø2
ø3
Rule 4: The departure (arrival) angles of each branch of the locus from any complex pole (toward any complex
zero) is computed by the application of the angle condition that is given by:
∑
i
𝜓i −∑
i
𝜙i = (1 + 2m)180∘with m = 0, ±1, ±2, …
Recall that the angle of departure of the root locus from the pole 𝜙l, dep is the diﬀerence between the net angle
from all other poles and zeros and the angle condition of 180(1 + 2m)∘. In the case of angle of departure, the
test point is the complex pole, while in the case of angle of arrival, the test is the complex zero. Consider the
angle to a test point from zero index i being 𝜓i, and the angle to same test point from any pole index i being 𝜙i:
𝜙l,dep = ∑
i
𝜓i −∑
i
𝜙i ± 180(1 + 2m)
(continued)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

172
4 Discrete-Time Analysis Methods
Table 4.1 (Continued)
Rules and deﬁnitions
Similarly, the angle of arrival toward a complex zero is given by:
𝜓l,arl = ∑
i
𝜙i −∑
i
𝜓i ± 180(1 + 2m)
Im(z)
Re(z)
ø1
ztest
Ψ1
Rule 5: The root locus crosses the real axis through the breakaway or break-in points. If the characteristics
equation is given by 1 + KGp(z) = 0, then the break-in and breakaway points could be derived from
K = −
1
Gp(z)
This equation can be used to search for the maximum value (breakaway point) and the minimum value
(arrival or break-in point) by:
dK
dt = d
dz
(
−
1
Gp(z)
)
= 0
Rule 6: The locus crosses the imaginary jw-axis at points found by applying Routh’s criterion for a value
zc = j𝛼. This is done by replacing zc in the characteristics equation and by setting the resulting real and
imaginary component of the equation to be equal to zero. Then derive the imaginary axis value 𝛼and the
value of the corresponding gain K.
Rule 7: The root locus plot correctness is such that any closed-loop pole corresponds to a point on the
root locus.
–1.5
–1
–0.5
0
0.5
1
–1
–0.8
–0.6
–0.4
–0.2
0
0.2
0.4
0.6
0.8
1
Real axis, Re(z)
Imaginary axis, Im(z)
ψ1
Ø2
Ø1
z0= ztest
p1
p2
| z0–p2 |
| z0–p1 |
Figure 4.1 Root locus sketch for desired pole phase and magnitude estimation with T = 0.1 s.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

4.2 Analysis Tools of Discrete-Time Systems and Processes
173
Example 4.2
Consider a system model given by:
G(s) = 1
s2
such that the corresponding discrete-time transfer function is:
KG(z) = T2
2
K(z + 1)
(z −1)2
If T =
√
2, the characteristics equation is given by:
1 + KG(z) = 1 + K(z + 1)
(z −1)2 = 0
Consider zc = 𝜎; solving for K yields:
K = −(𝜎−1)2
(𝜎+ 1) = F(𝜎)
From its derivatives,
dF(𝜎)
d𝜎
= 0, so 𝜎= 1 and 𝜎= −3
Using the magnitude condition and phase condition, the root locus is illustrated in Figure 4.2.
Consider an open-loop step response of the discrete transfer function given by:
H(z) =
1
(1 −e−a1Tz−1)(1 −e−a2Tz−1) … (1 −e−anTz−1)
Thus, the closed-loop step response of the discrete transfer function H(z) is given by:
Hclosed loop(z) =
H(z)
1 + H(z) =
1
(1−e−a1Tz−1)(1−e−a2Tz−1)…(1−e−anTz−1)
1 +
1
(1−e−a1Tz−1)(1−e−a2Tz−1)…(1−e−anTz−1)
–4
–3.5
–3
–2.5
–2
–1.5
–1
–0.5
0
0.5
1
1.5
–2.5
–2
–1.5
–1
–0.5
0
0.5
1
1.5
2
2.5
Real Axis
Imaginary Axis
Double 
pole at 1
Single
zero at –1
Figure 4.2 Root locus sketch for double poles.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

174
4 Discrete-Time Analysis Methods
ωnT = 0.1π
ζ = 0.2
ωnT = 0.35π
ωnT = 0.6π
ωnT = 0.85π
ζ = 0.45
ζ = 0.7
ζ = 0.95
Plot (b)
Plot (a)
Plot (f)
Plot (e)
Plot (d)
Plot (c)
Figure 4.3 Root locations and associated impulse response in the z-plane for various 𝜉and 𝜔n.
such as the poles −a1, −a2, −a3, … , −an, which are illustrated in the z-plane plots next
described. The basic relationship between the characteristics equation roots and the transient
response of discrete-time system are shown in Figure 4.3 where:
1) In the case where the roots are on the positive, real axis in the z-plane and inside the unit
circle of the z-plane, the impulse response would result in a rise of responses that decay
exponentially with an increase of kT, as illustrated in Figure 4.4(c). It should be noted that
the closer the roots are to the unit circle, the slower the decay response. When the root is at
z = 1, the response has a constant amplitude. Roots outside would display unstable system
responses and the responses increase with kT, as shown in Figure 4.4(b).
2) In the case of complex conjugate with the roots being inside the unit circle of the z-plane, this
will lead to oscillatory responses that decay with an increase in kT, as shown in Figure 4.4(a)
and (f). When the roots are closer to the unit circle, the response will decay more slowly. As
the roots move toward the second and the third quadrants, the oscillating frequency of the
response increases. Usually, the zeros of the discrete-time transfer function represent the
derivatives of the input, thus changing the transient characteristics, such as speeding up the
response and increasing overshoot. It should be noted that a zero at z = 0 corresponds to a
unit advance, just as a pole at z = 0 is a unit delay.
3) In the case where the roots are on the negative, real axis in the z-plane, this corresponds to
the boundaries of the periodic strips in the s-plane, as illustrated in Figure 4.4(d) and (e). For
example, consider:
s = −𝜉𝜔n ± j𝜔nT
√
1 −𝜉2 = −𝜎1 ± j𝜔s
The complex-conjugate points are on the boundaries of the primary strip in the s-plane. The
corresponding z-plane points are:
z = e−σ1Te±jωs = e−σ1T∡j ± ωs
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

4.2 Analysis Tools of Discrete-Time Systems and Processes
175
(a)
(b)
0
0.5
1
1.5
–0.2
0
0.2
0.4
0.6
0.8
1
Time [s]
0
0.5
1
1.5
0
2
4
6
8
10
12
14
Time [s]
Magnitude
Magnitude
Magnitude
Magnitude
Magnitude
Magnitude
0
0.5
1
1.5
0
0.2
0.4
0.6
0.8
1
Time [s]
0
0.5
1
1.5
–1
–0.8
–0.6
–0.4
–0.2
0
0.2
0.4
0.6
0.8
1
Time [s]
(c)
(d)
(e)
(f)
0
0.5
1
1.5
–1
–0.8
–0.6
–0.4
–0.2
0
0.2
0.4
0.6
0.8
1
Time [s]
0
0.5
1
1.5
–1
–0.8
–0.6
–0.4
–0.2
0
0.2
0.4
0.6
0.8
1
Time [s]
Figure 4.4 Impulse responses for various values of various 𝜉and 𝜔n. Plot (a) stable. Plot (b) unstable. Plot (c)
stable. Plot (d) stable. Plot (e) limited stability. Plot (f) stable.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

176
4 Discrete-Time Analysis Methods
which are on the negative real axis of the z-plane. Here, 𝜉represents the damping ratio and 𝜔n
represents natural frequency. Thus, the angle of the pole is given by:
ωs = ωnT
√
1 −ζ2 =
√
1 −ζ2
ζ
|ln(|z|)|
which are logarithmic spirals for 𝜉at constant value starting at 𝜔s = 0 and |z| = 1, as shown in
Figure 4.3. From response plots in Figure 4.4, it can be seen that rate of decay of the exponential
response is determined by the radius r of the pole location. If r > 1, the sequence of the output
increases. The larger r causes a faster impulse response. If r = 1, the sequence of the output
does not vary. If r < 1, the sequence decays such that the closer r is to zero, the faster the decay
response. A typical roots locus on the z-plane with its unit circle is shown in Figure 4.3.
clear all;clf;
numz=[1];denz=conv([1 0.5000-0.71i],[1 0.5000+0.71i]);
sys_D=tf(numz,denz,0.1); % closed-loop transfer function
Ts=0.1;T=0:Ts:1.5;[y,t]=impulse(sys_D,T);figure(1);plot(t,y,'*r');
hold on;plot(t,y,'blue');grid;xlabel('Time [sec]');ylabel('Magnitude');
axis([-0.1 1.5 -1.1 1.1]);
numz1=[1];denz1=[1 -1/8];sys_D1=tf(numz1,denz1,0.1);
[y1,t1]=impulse(sys_D1,T);
figure(2);plot(t1,y1,'*b');hold on;plot(t1,y1,'red');grid;
xlabel('Time [sec]');ylabel('Magnitude');axis([-0.1 1.5 -1.1 1.1]);
numz2=[1];denz2=[1 1];sys_D2=tf(numz2,denz2,0.1);[y2,t2]=impulse(sys_D2,T);
figure(3);plot(t2,y2,'*b');hold on;plot(t2,y2,'red');
xlabel('Time [sec]');ylabel('Magnitude');grid;axis([-0.1 1.5 -1.1 1.1]);
numz4=[1];denz4=[1 -1.2];sys_D4=tf(numz4,denz4,0.1);
[y4,t4]=impulse(sys_D4,T);figure(4);grid;plot(t4,y4,'*b');
hold on;plot(t4,y4,'red');xlabel('Time [sec]');ylabel('Magnitude');grid;
numz5=[1];denz5=[1 0];sys_D5=tf(numz5,denz5,0.1);[y5,t5]=impulse(sys_D5,T);
figure(5);plot(t5,y5,'*b');hold on;plot(t5,y5,'red');xlabel('Time [sec]');
ylabel('Magnitude');grid;axis([-0.1 1.5 -0.1 1.1]);
numz6=[1];denz6=conv([1 -0.5000-0.4940i],[1 -0.5000+0.4940i]);
sys_D6=tf(numz6,denz6,0.1);[y6,t6]=impulse(sys_D6,T);
figure(6);grid;plot(t6,y6,'*r');hold on;plot(t6,y6,'blue');
xlabel('Time [sec]');ylabel('Magnitude');grid;axis([-0.1 1.5 -0.3 1.1]);
hold off;k = 0;
%to draw root location of closed-loop transfer function (k=0)
r = rlocus(sys_D,k);r1 = rlocus(sys_D1,k);r2 = rlocus(sys_D2,k);
r4 = rlocus(sys_D4,k);r5 = rlocus(sys_D5,k);r6 = rlocus(sys_D6,k);
figure(8);plot(real(r),imag(r),'*r');hold on;plot(real(r1),imag(r1),'*m');
hold on;plot(real(r2),imag(r2),'*g');hold on;plot(real(r4),imag(r4),'*c');
hold on;plot(real(r5),imag(r5),'*b');hold on;plot(real(r6),imag(r6),'*r');
hold on;zgrid(0.2:0.25:1,0.1*pi:0.25*pi:pi);axis([-1.3 1.3 -1.1 1.1])
4.2.2
Discrete Frequency Analysis Tools: Fourier Series and Transform (DFT, DTFT,
and FFT)
The shape of any time-domain waveform is not relevant, but rather the information on the
frequency, the phase, and the amplitude of its component sinusoids. The DFT is used to extract
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

4.2 Analysis Tools of Discrete-Time Systems and Processes
177
this information. As such, the frequency response of a system can be described as a sum of
weighted complex exponentials. For a linear time-invariant system, it is the system steady-state
response to varying frequency parameters of sinusoidal input signal x(t) = X sin(𝜔t). Hence the
resulting system response y(t) = Y sin(𝜔t + 𝜙) is described by Y = X|G(j𝜔)| and 𝜙= ∠G(j𝜔).
Consequently, they are given as |G(j𝜔)| = |Y(j𝜔)|
|X(j𝜔)| and ∠G(j𝜔)∠Y(j𝜔)
X(j𝜔). Usually, the logarithmic or
Bode, polar, or Nyquist plots can be used to illustrate system response magnitude and phase
change over frequency variation. These weights are the impulse response samples. This DFT
series is a special case of a family of representations of signals that are collectively called Fourier
transforms. Among these transforms, there is the DTFT, used even when the discrete-time
signals are not periodic. Consider a discrete-time signal, x(n), given by:
X(𝜔) =
∞
∑
n=−∞
x(n)e−j𝜔n
(4.10)
where the frequency variable 𝜔is in radians and the X(𝜔) is the periodic signal of period 2𝜋
and deﬁned as:
X(𝜔) = |X(𝜔)|ej∠X(𝜔)
(4.11)
The forward Fourier transform of such a discrete-time signal, x(n), is given by:
XDTFT(𝜔) = X(z)|z=ej𝜔=
∞
∑
n=−∞
x(n)e−j𝜔n
(4.12)
The inverse transform is given by:
x(n) = 1
2𝜋∫X(𝜔)ej𝜔nd𝜔
(4.13)
The DTFT is always a periodic function of 𝜔. Among DTFT properties, it includes the
following:
Periodic property:
x(𝜔) = x(𝜔+ 2𝜋k)
(4.14)
Symmetry property:
x(n) ∈R, X(−𝜔) = X(𝜔)
(4.15)
Time-shifting property:
F(x(n −nk)) = |X(𝜔)|e−j𝜔nk
(4.16)
Frequency shifting property:
F(ej𝜔knx(n)) = X(𝜔−𝜔k)
(4.17)
Linearity property:
F(a1x(n) + a2x(n)) = a1X1(𝜔) + a2X2(𝜔)
(4.18)
Parseval’s relation property:
∞
∑
n=−∞
|x(n)|2 = 1
2𝜋∫
0
2𝜋
|X(𝜔)|2d𝜔
(4.19)
DTFT can be used to determine the frequency response of systems characterized by a linear
constant coeﬃcient of the diﬀerence equation using its time-shifting, linearity, convolution, and
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

178
4 Discrete-Time Analysis Methods
modulation properties. In addition, with random signal analysis, by using DFT it is possible to
compute a signal’s frequency spectrum by deriving the signal Power Spectrum Density (PSD)
equivalent to the Fourier transform of the auto-covariance sequence. This is used to extract
the information encoded in the frequency, phase, and amplitude of the component sinusoids.
Hence, the system can be analyzed in the frequency domain by the representation of each
system output signal from a group of cosine waves. DFT is intensively used in digital signal
processing because there are some algorithms for its computation. These algorithms are usually
referred to as FFT.
4.2.2.1
Discrete System Frequency Response
Consider an input signal to a discrete system characterized by:
x(n) = cos(𝜔n)
(4.20)
The equivalent series expansion (here input signal 𝜔n at the nth sample) yields:
x(n) = 1
2(ej𝜔n + e−j𝜔n)
(4.21)
With the system H(s), the corresponding output signal is given by:
y(n) = H(ej𝜔n)x(n) = 1
2(H(ej𝜔n)ej𝜔n + H(e−j𝜔n)e−j𝜔n)
(4.22)
such that:
y(n) = Re{H(ej𝜔n)x(n)} = Re{|H(ej𝜔n)|ej∠H(ej𝜔n)ej𝜔n}
(4.23)
Therefore, it can be written as:
y(n) = |H(ej𝜔n)| cos(𝜔n + ∠H(ej𝜔n))
(4.24)
deﬁning:
z = rej𝜔T
(4.25)
Using a unit circle r = 1 and an angle given by ej𝜔, the magnitude and phase of the response
of the system to an external cosine signal are deﬁned as the magnitude and phase of the system
through the function evaluated with respect to this unit circle. This could be rewritten as:
H(ej𝜔n) = H(z)|z=ej𝜔T
(4.26)
It can be noted that, with the frequency response, only the steady-state response character-
istics are covered, which are given by the angle of poles. For a generic discrete system given by:
H(z0) = K (z0 −q0)(z0 −q1)(z0 −q2) …
(z0 −p0)(z0 −p1)(z0 −p2) …
(4.27)
The value of H(z) at z = z0 can be determined by combining the contribution of vectors asso-
ciated with each of the poles and zeros, such that the magnitude is given by the product of their
magnitude, so that:
|H(z0)| = K |(z0 −q0)||(z0 −q1)||(z0 −q2)| …
|(z0 −p0)||(z0 −p1)||(z0 −p2)| …
(4.28)
and the angle is determined by the sum of the angles:
∠H(z0) = (∠K + ∠(z0 −q0) + ∠(z0 −q1) + …) −(∠(z0 −p0) + ∠(z0 −p1) · · ·)
(4.29)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

4.2 Analysis Tools of Discrete-Time Systems and Processes
179
Table 4.2 Frequency response data.
𝝎T(𝐫𝐚𝐝)
𝝎𝝎
(𝐫𝐚𝐝𝐬−1)
|Gp(ej𝝎T)|
𝟐𝟎𝐥𝐨𝐠10|Gp(ej𝝎T)|
(dB)
∠Gp(ej𝝎T)
(rad)
∠Gp(ej𝝎T)
(degree)
0.003
0.031
0.314
3.14
The Bode diagram for discrete systems consists of both the magnitude and phase responses of
a discrete system, and is deﬁned as follows:
{
Magnitude = |H(z)|z=ej𝜔T
Phase = ∠H(z)z=ej𝜔Tfor −𝜋≤𝜔T ≤𝜋
(4.30)
4.2.2.2
Sketching Procedure for the Frequency Response of a Discrete System
Given a linear time-invariant system represented by a discrete-time transfer function Gp(z):
1) With z = ej𝜔T derive the frequency response Gp(ej𝜔T) for frequency interval
[
0 𝜋
T
]
, as well as
for the bilinear equivalent frequency 𝜔𝜔= 2
T tan 𝜔T
2 .
2) Fill out Table 4.2 and sketch the frequency response of magnitude |Gp(ej𝜔T)| in decibels and
the phase ∠Gp(ej𝜔T) in degrees over the prewarping frequency 𝜔𝜔in rad s−1 in semilog scale.
3) Check the frequency response for the discrete-time transfer function by:
a) verifying that the slope of the low-frequency asymptote determines the system type; and
b) verifying that the crossover frequency correlates with the bandwidth of the system, and
also with the speed of the response.
4.2.2.3
Properties of a Frequency Response
Some key frequency response characteristics are:
1) The open-loop gain crossover frequency is the frequency at which the magnitude plot reaches
−3 dB.
2) The PM is measured at the gain crossover frequency when the phase of the open-loop fre-
quency response becomes −𝜋rad (−180∘). It is the magnitude of the frequency response at
the gain crossover frequency.
3) The open-loop phase crossover frequency is the frequency at which the phase plot reaches
±180∘.
4) The gain margin is measured at the phase crossover frequency where the magnitude of the
open-loop frequency response becomes 1 (0 dB). It is the diﬀerence between the phase at
that frequency and −𝜋rad (−180∘). It is obtained by adding 𝜋rad (180∘) to the phase at that
crossover frequency.
5) The GMs and PMs must be positive for the closed-loop system to be stable. The greater their
values, the greater the relative stability of the system. Usually, gain and PMs tend to increase
and systems tend to become less oscillatory.
6) The PM can be used to predict the damping ratio (𝜉) in the closed-loop system, such that
PM = 100∘𝜉;
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

180
4 Discrete-Time Analysis Methods
7) The PMs, GMs, and predicted bandwidth are useful measures when designing controller
gains, and are covered later in this chapter along with the correlation between the PM, the
percentage overshoot (PO), and the oscillation of the system.
Example 4.3
Bode Plot Diagram for Discrete-Time Systems
Consider an open-loop system given by:
H(z) =
0.5416z −0.4120
z2 −1.931z + 0.943
Using the previous method, Table 4.3 is completed. The Bode diagrams are derived using the
method presented and the MATLAB command. The results are displayed in Figures 4.5 and 4.6.
This yields a PM of 55∘and GM of 12 dB. Figure 4.6 displays the response derived using
Table 4.3 and MATLAB simulation tools. It should be recalled that both the magnitude and
phase responses of a discrete system repeat after 2𝜋∕T.
Table 4.3 Derived frequency response data.
𝝎T(𝐫𝐚𝐝)
𝝎𝝎
(𝐫𝐚𝐝𝐬−1)
|Gp(ej𝝎T)|
𝟐𝟎𝐥𝐨𝐠10|Gp(ej𝝎T)|
(dB)
∠Gp(ej𝝎T)
(rad)
∠Gp(ej𝝎T)
(degree)
0
0
6.73e+15
316.5530
0
0
0.003
0
712.3541
57.0539
−1.6133
−92.438
0.031
0
63.5567
36.0632
−1.9557
−112.056
0.314
0.0003
2.0357
6.1741
−2.2519
−129.026
3.14
2.3553
0.2455
−12.1992
−3.1408
−179.956
–20
0
20
40
60
80
Magnitude (dB)
10–3
10–2
10–1
100
101
–180
–135
–90
Phase (deg)
GM=12.2 dB (at 3.14 rad s–1),  PM=54.5 deg (at 0.549 rad s–1)
Frequency  (rad s–1)
Figure 4.5 Magnitude and phase frequency responses using MATLAB.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

4.3 Discrete-Time Controller Speciﬁcations
181
10–3
10–2
10–1
100
101
102
103
104
–20
0
20
40
60
Magnitude [db]
Frequency prewarping [rad s–1]
10–3
10–2
10–1
100
101
102
103
104
Frequency prewarping [rad s–1]
–180
–160
–140
–120
–100
–80
Phase [degree]
Phase 
margin (54.5 deg)
Gain crossover
frequency
0.549 rad s–1)
Gain margin
(12.2 dB)
Phase crossover
frequency (3.14 rad s–1)
Figure 4.6 Magnitude and phase frequency responses with PM and GM values.
clear all;
clear figure;clf;T=1;
Num_sysD=[0.5417 -0.4118];Den_sysD=[1 -1.942 +0.942];
wT=pi*[0 0.001 0.01 0.1 1]
sysD1=tf(Num_sysD,Den_sysD,T);
figure(1);bode(sysD1);grid;margin(sysD1);grid;
i=1;
for angl=[0 0.179908 1.79908 17.9908 28 31.45 50 120 179.908] %in degrees
wt(i)=(3.1415/180)*angl; % in rad
wwa(i)=(2/1)*tan(wt(i)/2); % in rad/sec (pre-warping scaling)
[mag,phase]=bode(sysD1,wt(i));
phas(i)=phase;
db1(i)=20*log10(mag); % magnitude in db
i=i+1;
end;
figure(2);subplot(2,1,1), semilogx(wwa,db1,'*');
hold on; semilogx(wwa,db1);hold off;
grid; ylabel ('magnitude [db]'); xlabel ('frequency pre-warping [rad/sec]');
subplot(2,1,2), semilogx(wwa,phas,'*');hold on; semilogx(wwa,phas);hold off;
grid; ylabel
('phase [degree]'); xlabel ('frequency pre-warping [rad/sec]');
4.3
Discrete-Time Controller Speciﬁcations
The controller performance requirements result from process operational audit outlining: the
time domain (transient and stationary) characteristics of the dynamic response to various
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

182
4 Discrete-Time Analysis Methods
0
2
4
6
8
10
12
14
16
18
20
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
1.8
2
Time [s]
Magnitude
Maximum overshoot
ts, settling time at 1%
tr rising time
Steady state error at 1%
ζ = 0.1
Figure 4.7 Typical percentage second-order oscillatory response.
inputs such as the unit step and the ramp functions. Among those characteristics are the
rise time, overshoot, settling time, percentage overshoot, disturbance rejection, steady-state
accuracy, and stability. From such auditing in the frequency domain, the process response
analysis characteristics lead to PM, GM, and stability system bandwidth. In the following
sections. such characterization of process performance is presented, both in the time domain
and the frequency response.
4.3.1
Time Domain Speciﬁcations
Commonly used transient-based system dynamics have speciﬁcations with respect to: (i) the
PO; (ii) the rise time; and (iii) the settling time. By considering a continuous second-order
underdamped system with no zeros, as illustrated in Figure 4.7, the following criteria can be
deﬁned:
1) The percentage overshoot (PO), which is dependent only on the damping ratio, 𝜉, such that:
PO = 100 × e −𝜉𝜋
√
1 −𝜉2 ≈100 ×
(
1 −𝜉
0.6
)
(4.31)
2) The rise time tr, which is the time from 10 to 90%. It indicates the speed of the response. It
is strongly dependent on natural frequency, ωn, such that:
tr ≈1.8
𝜔n
best accuracy when 𝜉≈0.5
(4.32)
3) The settling time, ts, which is the time elapsed until the process response and lies within a
desired tolerance of the steady-state value, expressed as a percentage criterion given by:
y(t) = 1 −e−𝜉𝜔nt cos(𝜔dt + 𝜙)
(4.33)
where damped oscillation frequency is 𝜔d = 𝜔n
√
1 −𝜉2. The system error transient is con-
tained within the envelope e−𝜉𝜔nt. For a large value of 𝜉𝜔n, the system error decreases as fast
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

4.3 Discrete-Time Controller Speciﬁcations
183
as necessary. For example, for the error to be less than 1% after tS seconds, then
e−𝜉𝜔nts ≤0.01
(4.34)
and taking the natural log of both sides, which is equivalent to
𝜉𝜔n ≥4.6
ts
(4.35)
multiple time constants can be achieved depending on the speciﬁed percentage, such that
the settling time within a 2% speciﬁcation is given by:
ts =
4
𝜉𝜔n
= 4𝜏
(4.36)
while for the 5% criterion it is equivalent to:
ts =
3
𝜉𝜔n
= 3𝜏
(4.37)
4) The system response-time constant, 𝜏, is the time constant of exponential decay of the con-
tinuous response given by:
𝜏=
1
𝜉𝜔n
(4.38)
Hence, the assessment criteria for eﬃcient command tracking of the steady-state dynam-
ics response include: (i) the steady-state error constant; (ii) the disturbance rejection; (iii) the
sensitivity; and (iv) even the stability.
1) The steady-state error constant measures the steady-state accuracy. The relationship
between error constants K*
v, K*
p, K*
a and the steady-state errors, ess, for various command
inputs (step, ramp with magnitude A, and parabolic) and, depending on the system type
(order), the expected results, are listed in Table 4.4.
2) The disturbance rejection, or the capacity to reduce the disturbance eﬀect on the system
output signal. By considering the reference input R(z) = 0, W(z) being a disturbance input,
the error E(z) is given by:
E(z) =
G(z)W(z)
1 + G(z)D(z) ≈W(z)
D(z)
(4.39)
Assuming that loop gain |G(z)D(z)| >> 1, a high gain in G(z) would not greatly inﬂuence the
disturbance rejection rather deﬁned by D(z) . Also, if D(z) has an integration (pole at z = 1),
it would result in inﬁnite gain at zero frequency; therefore, zero frequency disturbances (not
oscillatory) would be rejected completely, within the limits of the actuating devices.
3) The system’s capacity to reduce its sensitivity to changes in parameter values or how those
changes aﬀect the system output signal. This could be analyzed using the eigenvalue migra-
tion plot.
Table 4.4 Error constants and steady-state errors for various system types and command inputs.
Step input
Ramp input
Parabolic input
System type
Kp
ess
Kv
ess
Ka
ess
G(z)D(z) no pole at z=1
K
A∕(1 + K)
0
∞
0
∞
G(z)D(z) one pole at z=1
∞
0
K
A∕K
0
∞
G(z)D(z)two poles at z=1
∞
0
∞
0
K
A∕K
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

184
4 Discrete-Time Analysis Methods
4) The stability requirement is given by the PO.
5) The frequency of oscillations, 𝜔d, is the angle of the dominant complex conjugated poles that
would be divided by the sampling period. It is given by:
𝜔d = 𝜔n
√
1 −𝜉2
(4.40)
6) The energy required and gain distribution from each component, such as commands, ampli-
ﬁers, actuators, power ampliﬁer, signal conditioning and so on, are not saturated. These are
calculated by evaluating the response of the appropriate variables from inputs such as com-
mand set point or disturbance.
zdesired
zd
zd
Im(z)
Re(z)
Figure 4.8 Complex roots
locus phase and magnitude
value deﬁnition.
As noted from all the design speciﬁcations in the time domain
listed here, the key dynamics parameters to be derived are (𝜔n, 𝜉).
This allows derivation of the desired dynamics characterization
based on the desired roots placement. For example, as illustrated
in Figure 4.8, for a second-order process model, derivation consists
of selecting a dominant closed-loop in the z-plane corresponding to
the desired system dynamics, which would be given by:
zdesired = e−𝜔n(𝜉+j
√
1−𝜉2)T = e−𝜔n𝜉T∠± (𝜔nT
√
1 −𝜉2)
(4.41)
4.3.2
Frequency Response Speciﬁcations
Commonly encountered dynamics speciﬁcations of the amplitude frequency response are:
(i) resonant peak; (ii) resonant frequency; (iii) system bandwidth; and (iv) PMs and GMs. By
considering a second-order process, the following deﬁnitions can be derived:
1) The amplitude ratio and phase are given such that:
a) the amplitude ratio of the steady-state output c(t) versus the sinusoid input is:
|G(j𝜔)| = |C(j𝜔)|
|R(j𝜔)|
(4.42)
b) the phase diﬀerence between the steady-state output and the sinusoid input r(t) is:
𝜑(j𝜔) = G(j𝜔) = ∠C(j𝜔) −∠R(j𝜔)
(4.43)
2) The closed-loop resonant peak Mr at the maximum value of |G(j𝜔)| is obtained through
d|G(j𝜔)|
d𝜔
= 0, such that:
Mr = |G(j𝜔)|max = |G(j𝜔r)| =
1
2𝜉
√
1 −2𝜉2
(4.44)
for 0 ≤𝜁≤0.707. There is a special case for 𝜁> 0.707, 𝜔r = 0, and Mr = 1. Mr indicates the
relative stability of a stable closed-loop system. A large Mr corresponds to a larger maximum
overshoot of the step response and its suitable value range is between: 1.1 and 1.5.
3) The closed-loop resonant frequency 𝜔r is the frequency at which the peak resonance Mr
occurs, such that:
𝜔r = 𝜔n
√
1 −2𝜉2
(4.45)
for 0 ≤𝜁≤
√
2∕2. From the typical frequency system response analysis, the following points
are made:
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

4.3 Discrete-Time Controller Speciﬁcations
185
a) If 𝜁decreases, then 𝜔r increases (𝜔n is maintained), then Mr increases.
b) If 𝜁= 0, then 𝜔r is equal to 𝜔n, then the system is unstable.
c) If 𝜁=
√
2
2 , then 𝜔r = 0, then there is no resonance.
4) The closed-loop bandwidth 𝜔b is the frequency at which M(j𝜔) drops to 70.7% (3 dB) of its
zero-frequency value; or another deﬁnition of 𝜔b, based on the transfer function G(s) , such
that:
||||
G(j𝜔b)
G(0)
||||
=
1
√
2
(4.46)
which is equivalent to:
𝜔b = 𝜔n
√
(1 −2𝜉2) +
√
2 −4𝜉2 + 4𝜉4 = 𝜔n
√√
(1 + 4𝜉4) −2𝜉2
(4.47)
The bandwidth 𝜔b gives an indication of the transient response properties of a control
system. For example, it is inversely proportional to the rise time tr. 𝜔b also indicates the
noise-ﬁltering characteristics and robustness of the system. 𝜔n is directly proportional to
𝜔b. Increasing 𝜁decreases 𝜔b as well as Mr. In addition, Mr and 𝜔n are proportional to each
other for 0 ≤𝜁≤0.707.
5) The Open-loop gain crossover frequency 𝜔g is given by:
𝜔g = 𝜔n = 4.6
𝜉ts
(4.48)
6) The relative stability analysis in the frequency domain is deﬁned by gain and PM values
such as 𝛾(PM), which is the amount of additional lag at the gain crossover frequency 𝜔g
required to bring the system to the verge of instability. At gain crossover frequency, the
magnitude of open-loop gain is unity, that is |G(𝜔g)| = 1. The 𝛾(PM) is deﬁned as the phase
of the open-loop transfer function G(s) at the gain crossover frequency 𝜔g, so that:
PM = 𝛾= 180∘+ ∠G(𝜔g) = tg−1
(
2𝜉
√
1
√
(1 + 4𝜉4) −2𝜉2
)
(4.49)
where the open-loop frequency 𝜔g is deﬁned as the lowest frequency at |G(𝜔g)| = 1. For
unity-feedback systems, 𝜔g ≈𝜔b, and knowing that yields:
Gclosed loop(j𝜔) =
G(j𝜔)
1 + G(j𝜔)
(4.50)
Gain Margin, Kg(GM), is the amount of additional gain at phase crossover frequency 𝜔p
that can move the system to the verge of instability. At the phase crossover frequency, the
phase angle of the open-loop transfer function, G(s), equals −180∘; that is, ∠G(s) = −180∘.
Thus, the GM 𝜔g Kg is deﬁned as the inverse of the open-loop gain at the phase crossover
frequency, 𝜔p, such that:
GM = Kg =
1
|G(𝜔p)| = −20 log|G(j𝜔p)|
(4.51)
where the frequency 𝜔p is deﬁned as the lowest frequency with:
∠G(j𝜔)|𝜔p = arg(G(j𝜔p)) = −𝜋= −180∘
(4.52)
It is noted that if Kg and 𝛾increase, then Mr decreases. Similarly, if 𝜔g increases, then 𝜔r and
𝜔b decrease. The phase crossover frequency 𝜔p is also called the ultimate frequency of the
control system. Hence, both PM and GM must be positive for a minimum-phase system to be
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

186
4 Discrete-Time Analysis Methods
stable. Negative margins indicate instability. For satisfactory performance, the PM should be
between 30∘and 60∘and the GM should be greater than 6 dB. For a ﬁrst- and second-order
system, the GM is always inﬁnity.
7) Relationships between the frequency and the time domains
a) The closed-loop bandwidth, 𝜔b, and the rise time, tr, are related such that when
𝜔b increases, then tr decreases due to the time scale. For large 𝜔b, there are more
high-frequency components in the process response c(t), making the time response
faster.
b) Resonance peak, Mr and overshoot P.O.(%) are related such that, when Mr increases,
then P.O.(%) increases because of the large imbalance of the frequency signals passing
to c(t). If Kg and 𝛾decrease, then P.O.(%) increases similarly because of the decrease in
Kg and 𝛾, and Mr is given by:
P.O.(%) = 0.16 + 0.4(Mr −1)
(4.53)
such that 1.1 ≤Mr ≤1.8, and:
Mr ≈
1
sin 𝛾c
(4.54)
The settling time is given by:
ts ≈k𝜋
𝜔c
(4.55)
with k ≈2 + 1.5
(
1
sin 𝛾c
−1
)
+ 2.5
(
1
sin 𝛾c
−1
)
. Thus,
35∘≤𝛾≤90∘
(4.56)
In addition, the following rules deﬁne a typical frequency response plot:
1) The low-frequency region is related to the control accuracy of the system. The higher the
negative value of the slope of 20 log |G(j𝜔)|, the higher the control accuracy of the system.
The higher the magnitude of G(j𝜔), the smaller the steady-state error ess.
2) The middle frequency region is related to the transient performance of the system. An
increase in 𝜔b causes a decrease of tr, and a decrease of Kg and 𝛾causes an increase of
P.O.(%). The slope of 20 log |G(j𝜔)| should be −20 dB s−1.
3) The high-frequency region is mainly related to the ability of the system to reject
high-frequency noise. When the magnitude of 20 log |G(j𝜔)| is low, the ability of the system
to reject high-frequency noise improves.
4.4
Discrete-Time Steady-State Error Analysis
For single input and single output (SISO) system, the error signal is deﬁned by:
e(t) = r(t) −y(t)
(4.57)
where r(t) is the input and y(t) is the output. The error analysis conducted here is only for
an SISO system with unity feedback. For digital system analysis, z-transform or the diﬀerence
equations are often used to represent the input and output in sampled form, r(kT) and y(kT)
respectively. Subsequently, the digital error signal can be represented by e(kT). That is,
e(kT) = r(kT) −y(kT)
(4.58)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

4.5 Stability Test for Discrete-Time Systems
187
By using the ﬁnal-value theorem of the z-transform, the steady-state error at the sampling
instants is deﬁned as:
ess = lim
k→∞e∗(t) = lim
k→∞e∗(kT) = lim
z→1(1 −z−1)E(z)
(4.59)
Using E(z) in terms of R(z), and GHGP(z), Equation (4.59) is written as:
ess = lim
k→∞e(kT) = lim
z→1(1 −z−1)
R(z)
1 + GHGP(z)
(4.60)
Let a transfer function of the process be in the form:
GP(s) = K (1 + Tas)(1 + Tbs) … (1 + Tms)
sj(1 + T1s)(1 + T2s) … (1 + Tns)
(4.61)
Thus, in the z-domain:
GHGP(s) = (1 −z−1)Z
( (1 + Tas)(1 + Tbs) … (1 + Tms)
sj(1 + T1s)(1 + T2s) … (1 + Tns)
)
(4.62)
with a given digital system controller D(z), and depending on the input signal type and error
constants (the position error and velocity error), the closed-loop steady-state error can be
derived as:
1) Position error constant:
Kp = lim
z→1(z −1)D(z)GHGP(z)
(4.63)
ess =
1
1 + Kp
(4.64)
2) Velocity error constant:
Kv = lim
z→1
(1 −z−1)(1 + D(z)GHGP(z))
Tz
(4.65)
ess = 1
Kv
(4.66)
4.5
Stability Test for Discrete-Time Systems
Section 4.3 describes how to derive the characteristics equation as well as the roots. For
continuous-time linear time-invariant systems, the stability condition can be easily analyzed
using graphical tools such as the z-plane, Nyquist criterion, root-locus plot, and Bode plot.
This can be extended to stability studies of discrete-data systems. In this section, ﬁrst the
stability analysis deﬁnition is presented through the bound-input bound-output (BIBO) and
the zero-input stability deﬁnitions. Then, stability tests based on the bilinear transformation
method or the direct stability test methods are outlined. These stability tests can be applied
directly to the characteristics equation in the discrete domain by using the unit circle in
the z-plane. Among the methods providing the necessary and suﬃcient conditions for the
characteristics equation roots lying inside the unit circle are: (i) the Schur–Cohn criterion; and
(ii) tabulation-based methods such as the Blanchard–Jury–Marden stability criterion or the
Raible–Jury stability test. Unfortunately, these analytical tests become very tedious for system
models captured by equations with orders higher than the second, especially when these
equations include unknown parameters. There is no reason to use any of these tests if all the
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

188
4 Discrete-Time Analysis Methods
Table 4.5 Stability conditions and corresponding root values.
Stability condition
Root values
Asymptotically stable
or simply stable
|zi| < 1 for all i = 1,2,…,n (all roots inside the unit circle)
Marginally stable or
marginally unstable
|zi| = 1 for any simple roots and no |zi| > 1 for i = 1,2,…,n
(at least one simple root, no multiplier-order roots on the unit
circle, no roots outside the unit circle)
Unstable
|zi| > 1 for any i, or |zi| = 1 for any multiple-order root i = 1,2,…,n
(at least one simple root outside the unit circle and at least one
multiple-order root on the unit circle)
coeﬃcients of the equation are known. Rather, the execution of a root-ﬁnding program can
be performed. It is believed that when the characteristics equation has at least one unknown
parameter, the bilinear transformation method combined with the Routh–Hurwitz stability
test is the suitable manual method to determine the stability of a linear discrete-data system.
4.5.1
Bound-Input Bound-Output (BIBO) Stability Deﬁnition
Let u(kT), y(kT), and g(kT) be the input, output, and impulse sequence of a linear time-invariant
SISO discrete-data system, respectively. With zero initial conditions, the system is said to be
BIBO-stable, or simply stable, if its output sequence y(kT) is bounded to a bound input u(kT).
Thus, for the system to be BIBO-stable, the following condition must be met:
∞
∑
k=0
|g(kT)| < ∞
(4.67)
4.5.2
Zero-Input Stability Deﬁnition
For zero-input stability, the output sequence of the system must satisfy the following conditions:
{
|y(kT)| ≤M < ∞
lim
k→∞|y(kT)| = 0
(4.68)
Thus, zero-input stability can also be referred to as asymptotic stability. Both the BIBO stabil-
ity and the zero-input stability of discrete-data systems require that the roots of the character-
istics equation lie inside the unit circle in the z-plane. Let the characteristics equation roots of
a linear discrete-data time-invariant SISO system be z = 1, 2, …, n. The possible stability condi-
tions of the system are summarized in Table 4.5 with respect to the roots of the characteristics
equation.
4.5.3
Bilinear Transformation and the Routh–Hurwitz Criterion
Consider a discrete closed-loop process model given by:
GP(z) = c0 + c1z−1 + c2z−2 … + cmz−m
a0 + a1z−1 + a2z−2 … + anz−n
(4.69)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

4.5 Stability Test for Discrete-Time Systems
189
The corresponding characteristics polynomial is given by:
a0 + a1z−1 + a2z−2 + … + anz−n = 0
(4.70)
It is possible to transform the lines in the z-plane into a circle in the s-plane by transforming
Equation (4.70) into the z-plane using the r-transformation given by:
z = 1 + r
1 −r
(4.71)
This would result in:
d0 + d1r1 + d2r2 + … + dnrn = 0
(4.72)
This bilinear transform method would map the inside of the unit circle of the s-plane into the
left half of the r-plane, which would result in an equivalent characteristics polynomial in the
form of:
b0 + b1s + b2s2 + … + bnsn = bn
n
∏
i=1
(s −ri) = 0
(4.73)
Then apply the Routh stability criterion, given that the system would be stable if all its zeros
Re ri < 0, such that:
sn
bn
bn−2
bn−4
sn−1
bn−1
bn−3
bn−5
sn−2
en−1
en−3
en−5
…
… .
… .
… .
s0
kn−1
…
(4.74)
with
en−1 = −1
bn−1
||||
bn
bn−2
bn−1
bn−3
||||
, en−3 = −1
bn−1
||||
bn
bn−4
bn−1
bn−5
||||
, en−2 = −1
bn−1
||||
bn−1
bn−3
bn−1
bn−3
||||
So, the number of changes in the sign of the ﬁrst column of the Routh array deﬁnes the num-
ber of roots of the characteristics equation with a positive real part Re ri > 0.
Example 4.4
Consider that the characteristics equation of a discrete-data control system is:
z3 + 0.6z2 + 0.09z + 0.5 = 0
Applying the r-transformation, it becomes:
1.9r3 + 3.81r2 + 5.01r + 2.19 = 0
Routh’s tabulation of the last equation is:
r3
1.9
5.01
No sign change
r2
3.81 2.19
No sign change
r1
3.91
0
r0
2.19
From the s-plane to the z-plane, the stability boundary is no longer an imaginary axis, but
rather it is the unit circle in the z-plane. The system is stable when all poles are located inside
the unit circle and it is unstable when any pole is located outside. Since there are no sign changes
in the ﬁrst column of the tabulation, the characteristics equation has any no roots in the right
half of the r-plane. This corresponds to having no roots outside the unit circle in the z-plane.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

190
4 Discrete-Time Analysis Methods
4.5.4
Jury–Marden Stability Test
A discrete system is stable if its impulse response fulﬁlls the additive property (i.e. superpo-
sition). This requirement translates into the z-domain requirement that all the poles of the
transfer function must lie in the open interior of the unit circle. Let a transfer function be in the
form H(z) = N(z)
D(Z), where
D(z) = aDzD + aD−1zD−1 + … + a1z1 + a0 = 0
(4.75)
The array is given by:
z𝟎
z𝟏
z𝟐
…
zD −𝟐
zD −𝟏
zD
1
a𝟎
a𝟏
a𝟐
…
aD −𝟐
aD −𝟏
aD
2
aD
aD −𝟏
aD −𝟐
…
a𝟐
a𝟏
a𝟎
3
b𝟎
b𝟏
b𝟐
…
bD −𝟐
bD −𝟏
4
bD −𝟏
bD −𝟐
bD −𝟑
…
b𝟏
b𝟎
5
c𝟎
c𝟏
c𝟐
…
cD −𝟐
6
cD −𝟐
cD −𝟑
cD −𝟒
…
c𝟎
…
…
…
…
…
2D −3
s𝟎
s𝟏
s𝟐
…
The third row is computed from the ﬁrst two by:
b0 =
||||
a0 aD
aD a0
||||
, b1 =
||||
a0 aD−1
aD
a1
||||
, b2 =
||||
a0 aD−2
aD
a2
||||
, … , bD−1 =
||||
a0
a1
aD aD−1
||||
The fourth row is the same set as the third row, except it is in the reverse order. Then the c’s
are derived using the same approach to derive the b’s. This operation could continue until all
entries in the tabular array are obtained. In the case of a system of an nth order, each array has
2n−3 rows. The system is stable if the following conditions are satisﬁed:
D(1) > 0 (−1)DD(−1) > 0
(i.e. D(−1) > 0 for n being an even integer and D(−1) < 0 for n being odd)
(4.76)
aD > |a0|, |b0| > |bD−1|, |a0| > |cD−2|, … , |s0| > |s2|
(4.77)
In summary, when all the coeﬃcients are real, the Jury–Marden stability test consists of satis-
fying the following necessary conditions for D(z) to have no roots on or outside the unit circle:
If n is an even integer:
{
D(1) > 0
D(−1) > 0
(4.78)
If n is an odd integer:
D(−1) < 0
(4.79)
|a0| > an
(4.80)
If any stability condition here is violated, then not all of the roots are inside the unit circle and
the system would not be stable. These necessary conditions can be checked easily by inspection.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

4.6 Performance Indices and System Dynamical Analysis
191
4.5.5
Frequency-Based Stability Analysis
As a rule of thumb, the stability reduction is small and tolerable if the time delay is less than one
tenth of the response time of the control system, as it would have been with a continuous-time
controller or a controller having a very small sampling time.
4.6
Performance Indices and System Dynamical Analysis
A performance index is a quantitative measure of the dynamic performance of a process based
on system speciﬁcations. The performance index is always positive or zero and based on merit
measures (criteria). Among some commonly encountered performance assessment criteria are:
(i) stability; (ii) minimal eﬀect of disturbance; (iii) rapid smooth response to set point changes;
(iv) minimal input tracking and zero oﬀset; (v) reduced level of controller eﬀect; and (vi) robust-
ness to plant–model mismatch. A system is considered to be optimally controlled when, after
the system parameters are adjusted, the performance index reaches an extremum value (i.e. a
positive minimum value).
Some performance indices or quantitative performance measures are the rise time, PO, set-
tling time, and steady-state error, in addition to the overall optimal performance indices such
as the integral of the absolute value of error, the integral of the squared error, and so on. Those
indices are also used to guide controller designers. Some mathematical formulations of such
indices are presented as follows:
ISE (integral of the squared error) Performance Index, deﬁned as:
ISE = ∫
tf
0
(e(t))2dt
(4.81)
with the ﬁnal time, tf being the ﬁnal time of measurement. The ISE will be large if the system is
highly overdamped or highly underdamped. Meaning that a large error contributes more while
a small error contributes less, and there is also a large penalty for a large overshoot, while there
is a small penalty for persisting oscillation.
IAE (integral of the absolute error) Performance Index, deﬁned as:
IAE = ∫
tf
0
|e(t)|dt
(4.82)
ITSE (integral of time x square of error) Performance Index, deﬁned as:
ITSE = ∫
tf
0
t(e(t))2dt
(4.83)
In comparison to ISE, the inclusion of “t” is used initially to reduce the contribution of a large
initial error while maintaining its contribution over a longer period of time.
ITAE (integral of the time of absolute error) Performance Index, deﬁned as:
ITAE = ∫
tf
0
t|e(t)|dt
(4.84)
Here, there should be a large penalty for persisting oscillation, with a small penalty for the ini-
tial transient response. Among IAE, ISE, and ITAE, ITAE is the most conservative setting and
ISE is the least conservative. Also, common sources of system performance degradation are:
(i) changing the process operating conditions (i.e. throughput rate); (ii) changing or maintain-
ing the control settings; (iii) the degradation of the data acquisition (DAQ) and measurement
devices; and (iv) process conﬁguration or actuating system degradation.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

192
4 Discrete-Time Analysis Methods
Exercises and Problems
4.1
Stability analysis in the z-domain
Consider a motor with a printer positioning system driven by a direct current (DC)
motor, as depicted in Figure 4.9. Here the motor is approximated as an integration
process.
a) Derive the discrete closed-loop printer positioning system.
b) Derive the maximum gain Kc to ensure absolute stability.
M(z)
c(t)
E(z)
R(z)
+
–
ZOH
3.5
s
Kc
T
C(z)
3.5
Position encoder
DC motor + printer lead screw
Digital controller
m(t)
Figure 4.9 Block diagram of a DC motor with a lead screw system.
4.2
.a) Derive a discrete-time model of the following functions using backward, forward, and
trapezoidal approximation methods
Gp(s) =
1
s2 + 1
Gp(s) = 10(s + 4)
s2
b) For the discrete-time model obtained, plot the unit step response for T = 0.5 s and
perform a comparative analysis of the results obtained.
c) Plot the unit step response for T = 0.05 s, T = 0.5 s, T = 2 s, T = 12.5 s.
d) Perform a comparative analysis of the results obtained.
4.3
.a) Consider a DC motor transfer function Gp(s) = 12.5
s , with feedback gain Ke = 340 and
system ampliﬁer gain Ka = 3.5. Assuming a zero-order hold is used:
i) Derive the discrete open-loop transfer function C(z)
E(z) .
ii) Derive the discrete closed-loop transfer function C(z)
R(z) .
b) Consider a process model given by:
Gp(z) = [0.01 −0.006(z −1)] + 0.006(z −1)2
2.5(z −1)
(
z −e−0.01
0.006
)
i) Derive the closed-loop gain such that the system response has an overshoot of
less than 35% for a unit step.
ii) Determine the system steady-state error to the unit step input.
iii) Determine the closed-loop gain minimizing the integral square error.
4.4
The garage gate angular position 𝜃(t) (in degrees) is proportional to the applied voltage
v(t) and can be modeled as:
d𝜃(t)
dt
= 2.6v(t)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
193
The rule used to control (proportional control) the gate position is given by:
v(k) = 0.35(𝜃∗(k) −𝜃(k))
in volts, with 𝜃*(k) being the command input gate position. The sample period is 5 s.
a) Find the generating function for the gate position that results from the gate being
closed using a step input of 840∘.
b) Find the generating function for the gate position that results from the gate being
closed using a ramp input of 10.5∘per s, lasting 210 s.
4.5
A 2D robot arm is attached to a laser machining system in order to cut a circular part
using the chordal approximation, as shown in Figure 4.10.
The accuracy is to be 0.002 cm and the radius of the workpiece has to be no more than
10 cm such that the clockwise motion at 600 cm min−1 starts at the top of the circle. What
are the straight-line interpolation equations for the ﬁrst three chordal segments of the
motion? Consider the case where a hole is to be cut in a workpiece, and the radius of the
hole, R, is to be less than 10 cm, and derive the straight-line interpolation equations.
4.6
.a) Consider the process illustrated in Figure 4.11.
i) With Kc = 3.5 and 𝛿= 0.21, derive the steady-state error in this system for a com-
mand ramp input 𝜃*(t) = 200t.
ii) In order to simplify the system shown in Figure 4.11, it is desired to obtain a
simpliﬁed model that will make it easier to set the controller gain Kc.
• Plot the frequency response (T = 0.01 sec) of each system component.
• If the closed-loop system is not required to respond to frequencies above 1 Hz,
draw a new block diagram with simpliﬁed blocks wherever possible.
• Plot and compare the open-loop frequency responses of the original system
and the simpliﬁed system.
(a)
(b)
R1
1
2
3
4
5
6
7
8
9
10
11
12
R2
1
2
3
4
5
6
7
8
9
10
11
12
Figure 4.10 Chordal approximation for hole cutting with a diﬀerent radius.
Figure 4.11 Process block diagram.
829 z–4
1–z–1
Kc(1–δz–1)
Θ*(z)
Θ(z)
–
+
M(z)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

194
4 Discrete-Time Analysis Methods
Kp
zoh
7.5
0.5s + 1
c(s)
110
Position
encoder
Process
model
D/A 
converter
Proportional
controller
R(z)
C(z)
E(z)
Figure 4.12 Process block diagram.
b) Perform stability analysis on the following system transfer functions:
i) Gp(z) = 3(z + 1.2)(z + 1.2)
z2(z + 1)(z + 0.1)
ii) Gp(z) =
(3z + 1)(z + 4)
z(z + 2.2)(z + 0.9)
4.7
.a) With T = 0.01 s, 𝜏= 0.008 s, and E = e−T/𝜏, consider a process model given by:
Gp(z) = K(z −E)[T −𝜏(z −1)] + 𝜏(z −1)2
2.5(z −1)(z −E)
i) Sketch the root locus of the process. What is its corresponding frequency
response?
ii) Derive the transient and stationary dynamic characteristics in both time and fre-
quency domains.
b) Considering a motor-driven positioning system in which the transfer function can be
approximated as:
Gp(s) =
Kas
s2 + 1
Plot the discrete frequency response of the position of the system with a sampling
period of 200 Hz.
4.8
Consider the linear process system depicted as a block diagram in Figure 4.12.
a) Derive the parametric characteristics equation of this process.
b) Assuming that T = 20 m s−1, derive the range of values of Kp so that the system is
stable.
Bibliography
1 Ackermann, J. (1985). Sampled Data Control Systems: Analysis and Synthesis, Robust System
Design. Springer-Verlag.
2 Åström, K.J. and Wittenmark, B. (2011). Computer-Controlled Systems: Theory and Design.
Courier Dover.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Bibliography
195
3 Bollinger, J.D. and Duﬃe, N.A. (1989). Computer Control Machines and Processes.
Addison-Wesley.
4 Brockwell, P.J. and Davis, R.A. (2009). Time Series: Theory and Methods, 2e. Springer.
5 Fadali, S. and Visioli, A. (2012). Digital Control Engineering, 2e. Academic Press.
6 Isermann, R. (1989). Digital Control Systems. Berlin: Springer-Verlag.
7 Jury, E. and Tsypkin, Y.Z. (1971). On the Theory of Discrete Systems. Automatica, Elsevier.
8 Powell, G.F.J.D. and Workman, M. (2006). Digital Control of Dynamic Systems, 3e.
Ellis-Kagle Press.
9 Golnaraghi, F., Kuo, B.C., and Adams, J.A. (2009). Automatic Control, 9e. Wiley.
10 Lorenz D.R. (1999). Advances in Electric Drive Control, IEEE International Conference
Electric Machines and Drives, pp. 9–16.
11 Patterson, D.A. and Hennessy, J.L. (2013). Computer Organization and Design: The Hard-
ware/Software Interface. Morgan Kaufmann.
12 Paraskevopoulos, P.N. (1996). Digital Control Systems. Prentice Hall.
13 Polderman, J.W. and Willems, J.C. (2013). Introduction to the Mathematical Theory of Sys-
tems and Control. Springer.
14 Santina, M., Stubberud, A., and Hostetter, G. (1994). Digital Control System Design. Oxford
University Press.
15 Skogestad, S. and Postlethwaite, I. (2005). Multivariable Feedback Control: Analysis and
Design, 2e. Wiley.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

197
5
Continuous Digital Controller Design
5.1
Introduction
The choice of digital control of systems and processes aims to ease control implementation,
to integrate local actions (e.g. shop-ﬂoor) and global decisions (e.g. production planning), as
well as to combine logic and feedback control algorithms, and, eventually, to optimize system
or process operating performance. Among the design requirements of digital control are the
mathematical formulations to capture the time-based behavioristic characteristics of the pro-
cess; the formal modeling of the control systems instrumentation, including their technological
constraints; and the integration and modeling of control systems’ instrumentation interfacing
operations with process equipment with respect to performance and operating constraints (e.g.
time delays, signal-to-noise ratios, etc.).
The design objectives of discrete control systems are similar in principle to those of con-
tinuous control systems, so that the resulting controller ensures the system will perform in
accordance with some technical speciﬁcations (or controller design requirements). These con-
troller speciﬁcations can be established through the process benchmarking (in both time and
frequency domains) derived from the audit of process dynamics behavior. Based on the for-
mulation of the controller speciﬁcations, as covered in Chapter 4, it is possible to develop a
control algorithm using approaches such as continuous time design, discrete-time design and
direct design. The implementation of the control algorithm has to take into consideration some
control instrumentation constraints (e.g. time delays, signal-to-noise ratio, etc.).
In this chapter, root locus and Bode plot techniques are used to design feedback computer
control algorithms, such as proportional-integral-derivative (PID) and feedforward, including
the digital state feedback controller concept, which is revisited for cases where it is not possible
to measure all state variables directly. Comparatively, analyses between classical PID controllers
and various state feedback topologies for DC motor speed control are presented. Advanced con-
trol algorithms, such as model predictive control suitable for process operations with physical,
safety, and performance constraints, are presented along with distributed control, open-loop
control, and scalar and vector control design for induction motors.
5.2
Design of Control Algorithms for Continuous Systems
and Processes
Process compensation and regulation aim to reduce or remove unwanted behavior due
to process disturbances and even nonlinearities. Hence, the system and process control
objectives are:
Control Of Mechatronic Systems: Model-Driven Design And Implementation Guidelines,
First Edition. Patrick O.J. Kaltjob.
© 2021 Patrick O.J. Kaltjob. Published 2021 by John Wiley & Sons Ltd.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

198
5 Continuous Digital Controller Design
1) input command tracking or set point tracking; this means having the output to track the
reference input closely;
2) disturbance rejection to cancel the output from unwanted disturbance inputs due to model
uncertainty or changes in operating conditions;
3) parameter sensitivity, or the process output variability to reduce the eﬀect on the output
of variations in process parameters.
4) stability issues.
A generic discrete controller design procedure consists in:
1) deﬁning or characterizing the process boundaries and process variables to be controlled
with respect to noise or other disturbances related to the operating range of involved sens-
ing, actuating, and communicating units;
2) estimating the process model parameters and deriving the resulting dynamics character-
ization in diﬀerential equation form, diﬀerence equation form, or state space form in the
case of multiple inputs or outputs processes;
3) performing an audit of the process dynamics and control system analysis in terms of con-
trollability, stability, robustness, observability, and sensitivity;
4) formulating the controller speciﬁcations and the expected process dynamics in terms of
(𝜉, 𝜔n), such as:
a) in the time domain, performance indicators like rise time tr, time delay D, overshoot PO
(%), settling time ts, steady-state error of the response to the step reference, disturbance
inputs ess, and error constants Kpp,Kv;
b) in the frequency domain, performance indicators like resonance peak Mr, bandwidth
of the closed-loop frequency response 𝜔b, sensitivity functions and stability margins
derived from GM, PM.
5) deriving the desired system dynamics characteristics in either:
a) the discrete-time domain using the root locus located at the desired roots given by:
(𝜉, 𝜔n);
b) the frequency domain using the Bode plot, identiﬁed by the desired crossover frequency
(𝜔g, 𝜔p);
6) choosing the controller type to be designed accordingly;
7) deriving the sampling time and the corresponding discrete-time process model and the
corresponding controller;
8) choosing the design approach of the discrete controller (i.e. algorithm) from:
a) the continuous time design approach, which consists of designing the continuous time
controller based on the continuous time process model and then deriving the equivalent
discrete control algorithm. Here, the sampling period must be selected according to the
suitable open and closed-loop results;
b) the discrete-time design approach, which uses the continuous time process model to
derive an equivalent discrete-time process model and then any discrete controller
design techniques can be applied. Here, some resulting intersampled behavior prob-
lems due to the discrete sampling zeros could be circumvented using an anti-aliasing
ﬁlter;
c) the direct design approach, which consists of designing the discrete-time controller
from the continuous time process model;
9) choosing among the control design techniques classiﬁed as follows:
a) a classical control paradigm based on command input tracking. This uses classical con-
troller design tools like PID family, feedforward, cascade controller types, and tuning.
It is applied to the control of industrial processes such as chemical plants;
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.2 Design of Control Algorithms for Continuous Systems and Processes
199
b) optimal control schemes, such as model predictive control, linear quadratic regula-
tor/gain control (LQR/LQG), a Kalman ﬁlter, and H2 control, which have been devel-
oped to achieve an optimal performance. It is applied within aerospace explorations
projects;
c) a robust control paradigm, such as H∞control, which has been developed to handle
systems with uncertainties and disturbances with high precision requirements such as
missile defense systems;
d) a nonlinear control paradigm, which has been developed to handle high-performance
nonlinear systems such as combat aircraft systems;
e) artiﬁcial intelligence control schemes, such as knowledge-based control, adaptive con-
trol, and neural and fuzzy control, which have been developed to handle systems with
unknown models such as human metabolism systems;
10) evaluating the process dynamics performance achieved and comparing them with the per-
formance benchmarks and objectives stated in the previous step, including:
a) steady-state accuracy with tracking error being due either to changes in the reference
input or to onset of disturbances;
b) transient response for criteria related to the speed of response, such as settling time ts
or rise time tr;
c) disturbance rejection for a process subjected to disturbance inputs during its operation;
d) control eﬀort and gain distribution, to avoid process control component saturation;
e) sensitivity analysis, to maintain performance despite changes in process parameters.
5.2.1
Direct Design Controller Algorithms
Based on the desired input/output or output/error relationship, the controller transfer func-
tion can be directly deﬁned. This design approach is suitable for a process with a complete
mathematical, linear diﬀerence-based description of its dynamics. Furthermore, it is possible
to represent any of their input sample sequences and the subsequent system responses from
the corresponding discrete process transfer function. The control algorithm could be derived
by shaping the required digital controller, D(z), in the following generic form:
D(z) =
1
Gp(Z)
[
Ge(z)
1 −Ge(Z)
]
(5.1)
where Gp(z) is the discrete process transfer function and the expected system transfer function
Ge(z) can be obtained from the desired roots locations for various (𝜉, 𝜔n) at step response. A
special feature of digital control is the possibility of designing a controller in order to have the
system output capable of tracking the reference input in a ﬁnite number of steps, n; that is, in a
ﬁnite time interval, nT. This is called a deadbeat controller, which is equivalent to placing all the
closed-loop system poles at the origin. Thus, the desired closed-loop transfer function under
the deadbeat is
Ge(z) = 1
zn
(5.2)
The resulting overshoot is huge, and the control input requires a great eﬀort to achieve such
a performance. This makes the deadbeat controller impractical, and it is rarely used in practical
situations.
Example 5.1
Deadbeat Controller Design
Consider a ﬁrst-order system with the closed loop given by:
𝜙(z)
𝜙∗(z) =
Az−1
1 −2z−1
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

200
5 Continuous Digital Controller Design
case 1
case 2
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
0
2
4
6
8
10
12
14
16
Time [s]
Magnitude
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
Time [s]
Magnitude
case 3
case with deadbeat for z= 0.8
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
Time [s]
Magnitude
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
–0.8
–0.6
–0.4
–0.2
0
0.2
0.4
0.6
0.8
1
Time [s]
Magnitude
Figure 5.1 Impulse response for diﬀerent process model types and with a deadbeat controller.
The diﬀerence equation can be obtained through direct inverse and yields:
𝜙(z) = 2𝜙(k −1) −A𝜙∗(k −1)
As shown in Figure 5.1, case 1, the system will be unstable when a root is located at +2 and
its corresponding transfer is given by:
𝜙(z)
𝜙∗(z) =
Az−1
1 −2z−1
As shown in Figure 5.1, case 2, the system will be stable but will display an integration type
of response when a root is located at +1 and its corresponding transfer is given by:
𝜙(z)
𝜙∗(z) =
Az−1
1 −z−1
As shown in Figure 5.1, case 3, the system will be stable when a root is located at +0.8 and its
corresponding transfer is given by:
𝜙(z)
𝜙∗(z) =
Az−1
1 −0.8z−1
Table 5.1 summarizes how recursively the system responses are computed for the ﬁrst four
samples and for all cases mentioned previously.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.2 Design of Control Algorithms for Continuous Systems and Processes
201
Table 5.1 Table of discrete values of input-output at diﬀerent sample periods.
Without deadbeat
With deadbeat
Case 1
Case 2
Case 3
z + 0.2
z + 0.8
k
𝚽*(k-1)
𝚽(k)
𝚽(k-1)
𝚽(k)
𝚽(k)
𝚽(k)
𝚽*(k−1)
𝚽(k)
𝚽(k−1)
0
0
1
0
0
0
0
0
0
0
1
1
0
0
A
A
A
A
A
A
2
0
0
A
2A
A
0.8A
0
−0.2A
−0.8A
3
0
0
2A
4A
A
0.64A
0
(−0.2)2A
(−0.8)2A
4
—
—
—
—
—
—
0
(−0.2)3A
(−0.8)3A
The system displays a deadbeat response when a root is located at 0 and its corresponding
transfer function is given by:
𝜙(z)
𝜙∗(z) = Az−1
In Figure 5.1, case with deadbeat, note the oscillatory nature of the response for a deadbeat.
a=1;numz=[a];denz=[1 -2];sys_D=tf(numz,denz,1); [y,t]=impulse(sys_D,5);
numz2=[a];denz2=[1 -1];sys_D2=tf(numz2,denz2,1);[y2,t]=impulse(sys_D2,5);
numz3=[a];denz3=[1 -0.8];
sys_D3=tf(numz3,denz3,1);[y3,t]=impulse(sys_D3,5);numz4=[a];denz4=[1 0.8];
sys_D4=tf(numz4,denz4,1);[y4,t]=impulse(sys_D4,5);
figure(1); stairs(t,y,'*r');grid;xlabel('Time(sec)');ylabel('Magnitude');
figure(2),stairs(t,y2,'*b');grid;xlabel('Time(sec)');
ylabel('Magnitude');figure(3);stairs(t,y3,'*g');grid;xlabel('Time(sec)');
ylabel('Magnitude');figure(4); plot(t,y4,'*k');grid;xlabel('Time(sec)');
ylabel('Magnitude');
5.2.2
Discrete PID Controller Algorithms
PID control algorithms are the most common control technique, especially when the process
model is not available. There are three components, namely P (proportional control), I (integral
control), and D (derivative control), with various combinations thereof.
5.2.2.1
Proportional Control Algorithm
A discrete implementation of the discrete proportional control is given by D(z) = Kp, making
the computer control algorithm (with un = u(k)):
u(k) = Kpe(k)
(5.3)
where e(k) is the error signal as given in the feedback block diagram. A proportional controller
Kp has the eﬀect of reducing the rise time and reducing but never eliminating the steady-state
error.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

202
5 Continuous Digital Controller Design
5.2.2.2
Derivative Control Algorithm
The continuous time derivative controller is un = Kd ̇en. Thus, the equivalent discrete derivative
control algorithm is approximated via the backward diﬀerence as:
un = Kd
en −en−1
T
⇒D(z) = Kd
1 −z−1
T
(5.4)
A derivative control (Kd∕T) has the eﬀect of increasing the stability of the system, reducing
the overshoot, and improving transient response characteristics.
5.2.2.3
Integral Control Algorithm
Typical continuous integral control is given by u(t) = Ki ∫̇e(k)dt. Thus, the integral computer
control algorithm is approximated via the backward diﬀerence as:
un = un−1 + KiTen ⇒D(z) =
KiT
1 −z−1
(5.5)
An integral control (KiT) has the eﬀect of eliminating the steady-state error, but it may worsen
the transient response characteristics.
5.2.2.4
PI Control Algorithm
The purpose of the PI or lag compensation is to improve steady-state accuracy. The traditional
design approach to PI or lag compensation is to put the zero of the compensator very close to
the dominant pole of the process. The discrete PI controller transfer function is given by:
D(z) = KP + Ki
Tz
z −1 = [(KP + KiT)z −KP]
(z −1)
(5.6)
This equivalent lag compensation increases the low frequency gain without aﬀecting the
phase in the crossover region.
5.2.2.5
PD Control Algorithm
The objective of the PD or lead compensation is to improve the closed-loop response’s speed
and the percentage overshoot (i.e. to improve the transient response), typically making the
system respond faster without introducing instability. Thus, the derivative term (D) gives an
additional control eﬀort due to the rate of change in the error with respect to the system con-
trol input. This improves the response to a sudden change in the system state or reference value.
It should be noted that the D term essentially behaves as a high-pass ﬁlter on the error signal
and makes it more sensitive to noise. The discrete PD controller transfer function is given by:
D(z) = Kp + Kd
z −1
z
=
(Kp + Kd)z −Kd
z
(5.7)
This equivalent lead compensation improves stability margins by adding an extra phase in the
crossover region.
5.2.2.6
Classical PID Controller Algorithm
The PID and lead-lag compensation improve both transient and stationary process dynamics
characteristics. Taking KI = KiT and KD = Kd∕T, and using the combined algorithm as found
before (or directly using the backward diﬀerence approximation for s), the classical PID con-
troller algorithm yields:
D(z) = M(z)
E(z) = Kp + KI
z
z −1 + KD
z −1
z
=
(Kp + KD + KI)z2 −(Kp + KD)z
z(z −1)
(5.8)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.2 Design of Control Algorithms for Continuous Systems and Processes
203
Another PID family controller is the position algorithm of PID, derived from taking:
m = m + Kp
[
en + KiT
n
∑
k=1
ek + Kd
T (en −en−1)
]
(5.9)
where m is the nominal steady-state value (or bias). Using the z-transform after simpliﬁcation
(approximation of integration term into the limit of
1
1−z−1 ), this is equivalent to:
M′(z) = M(z) −M = Kp
[
1 + KiT
(
1
1 −z−1
)
+ Kd
T (1 −z−1)
]
E(z)
(5.10)
where m′
n = mn −m, so the digital controller transfer function yields:
D(z) = M′(z)
E(z) = Kp
[
1 + KiT
(
1
1 −z−1
)
+ Kd
T (1 −z−1)
]
(5.11)
This algorithm yields the value of the controller directly, but this requires memory space to
complete the computing summation for the integration component, which also requires the
value of m. Since this is constant, the controller output Δmn is given by:
m′
n −m′
n−1 = mn −mn−1 = Δmn
(5.12)
Thus, from Equation (5.9):
Δmn = Kp
[
(en −en−1) + KiTen + Kd
T (en −2en−1 −en−2)
]
(5.13)
Taking the z-transform:
ΔM(z) = Kp
[
(1 −z−1) + KiT + Kd
T (1 −2z−1 −z−2)
]
E(z)
(5.14)
The discrete transfer function deﬁned as the velocity algorithm of PID is:
D(z) = ΔM(z)
E(z)
= Kp
[
(1 −z−1) + KiT + Kd
T (1 −2z−1 −z−2)
]
(5.15)
This velocity algorithm is suggested to avoid computing the summation and circumventing
the bias term of m (less prone to reset windup). Please note that multiplying both sides of
position algorithm by (1 −z−1) is equivalent to the velocity algorithm. Using the trapezoidal
approximation for the integral of the PID controller, such as KiT
Δt∑
k=1
(ek−ek−1)
2
instead of KiT
Δt∑
k=1
ek,
another velocity algorithm of PID computer control would yield:
D(z) = ΔM(z)
E(z)
= Kp
[
(1 −z−1) + KiT(1 + z−1) + Kd
T (1 −2z−1 −z−2)
]
E(z)
(5.16)
Even if it is a more accurate discrete approximation of the integral action, however, this does
not necessarily improve the control loop performance. The digital PID controller design chal-
lenge is to derive the diﬀerent settings values (Kp, Kd, Ki, T). It should be noted that a generic
form of the PID computer control algorithm combined action can be written as:
Δmn = (Δmn)p + (Δmn)i + (Δmn)d = K0en + K1en−1 + K2en−2
(5.17)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

204
5 Continuous Digital Controller Design
with
⎧
⎪
⎪
⎪
⎨
⎪
⎪
⎪⎩
K0 = Kp + KpKiT + Kp
Kd
T
K1 = −2Kd
T −Kp
K2 =
KdKp
T
(5.18)
The lead-lag compensation or PID controller jointly uses phase-lag compensation at low fre-
quencies and phase lead compensation at crossover frequency. It is used to meet the design
speciﬁcations, such as time to peak, percentage overshoot, and steady-state accuracy.
5.2.2.7
Properties of and Some Remarks on PID Controller Algorithms
Each PID form produces the same result but incorporates information in a diﬀerent manner.
For example, it is possible to adjust each term independently using the PID parallel form. The
PID controller form depends on design decisions such as how to manipulate the output of the
controller.
1) From the position algorithm of PID, the error summation from integral term could grow
to a very large value, even though the measured variable does not eventually reach the set
point (en = 0). Until the error changes sign, the summation term will not be reduced. This
is the case for excessive overshoot of the controlled variables or the saturation of the con-
trol eﬀort (manipulated variables). To circumvent this situation, either (i) an upper limit
could be placed on the value of the manipulated variable to suspend the summation until
the controller moves away from the limit, or (ii) en−1 could be used instead of en in the next
controller action when saturation occurs. This is called elimination of windup reset due to
the integral term problem. In the case of the velocity algorithm, the discrete controller must
be programmed to update Δmn such that if continuously monitored, mn reaches its limits.
2) If set point change is reached (Δrn), the resulting control algorithms produce a large and
sudden change in the output due to the derivative term. This can be avoided by either
(i) using the measured variable instead of the error signal, (en = rn −bn), such that for
the position algorithm mn = m + Kp
[
en + KiT
Δt∑
k=1
ek + Kd
T (bn −bn−1)
]
; or (ii) changing the
ramp set point to a new value instead of the step point change, limiting the value of rn. This
is called elimination of the derivative kick due to a derivative term.
3) There is also a saturation of controller performance from the selection of the sampling period
due to a scaling problem. The high sampling frequency can cause a large derivative action
such that
KpKd
T , while the small change in error Δen can yield a large manipulated controller
output, Δmn (saturation).
4) The physical realizability requirements of the digital controllers are: (i) PID with a time delay
compensation implemented using the Smith predictor; (ii) the use of dimensionless con-
troller gain; and (iii) the avoidance by the algorithm of the utilization of the future process
inputs in deriving its output signal.
5) (Kp, Kd, Ki) gains are dependent on one another, as summarized in Table 5.2. Changing one
of these variables can change the eﬀects of the other two. Hence, Table 5.2 should only be
used as a reference to derive the values for (Kp, Kd, Ki) gains.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.2 Design of Control Algorithms for Continuous Systems and Processes
205
Table 5.2 Eﬀects of PID controller components on process dynamics characteristics.
Closed-loop
response
Rise time
Overshoot
Settling time
Stability
Steady-state error
Kp
Decrease
Increase
Small change
Degrade
Decrease
Ki
Decrease
Increase
Increase
Degrade
Eliminate
Kd
Small change
Decrease
Decrease
Improve
Small change
5.2.3
PID Controller Gains Design Using a Frequency Response Technique
The frequency-based design techniques for continuous time systems and discrete-time systems
are the same. Here, the process model G(s), combined with the hold element, is equivalent
to a discrete time process model G(z). This can be transformed into the 𝜔-domain (bilinear
transformation) in order to ensure it is in the sable region of the z-plane. Thus, it is possible to
apply the frequency response controller design technique based on the phase and gain margins
established in the Laplace domain. In other words, the technique used for the controller design
of the continuous system can be directly applied to a compensator design in the 𝜔-domain.
Finally, using the bilinear transform, the resulting discrete controller can be derived. The generic
procedure to design a controller D(𝜔) consists of:
1) deriving the transient and the stationary performance speciﬁcations for the con-
tinuous time process dynamics and the controller design requirements, such as:
(PM, GM, ess, 𝜔b, P.O(%), ts, tr, etc …);
2) deriving the discrete process transfer function G(z);
3) performing a 𝜔-transformation; G(𝜔)|
z=
2
T +𝜔
2
T −𝜔
= G(z)
4) designing a controller D(𝜔) using a continuous time technique, as follows:
a) draw the uncompensated open-loop transfer function, G(𝜔) Bode plot;
b) select a gain crossover frequency for the process based on the requirements for a tran-
sient response;
c) determine the corresponding desired phase margin 𝛾desired(PMdesired) ;
d) analyze a Bode plot to conclude on the requirements with respect to the increase or
reduction of the phase margin;
e) using the percentage overshoot, ﬁnd the corresponding value; then derive the corre-
sponding process phase margin 𝛾(PM), using 100𝜉≈Phase Margin(PM);
f) determine the phase required to reach the desired phase margin;
g) determine the frequency at which the phase should be added, using:
Tsettling_time = f(𝜔closed_loop_bandwidth)
h) apply the inverse bilinear transform to derive the discrete controller from: D(z) =
D(𝜔)|𝜔= 2z−1
Tz+1
5.2.3.1
Design Procedure for PID Controller Design
The PID controller deals essentially with the manipulation of the phase of the closed-loop sys-
tem. Indeed, a D-action of the controller can increase the stability or the speed of response of
a system, while I-action of the controller can reduce the steady-state error. Thus, for the imple-
mentation of a PID controller, one must ﬁrst design the derivative controller gain to achieve the
desired transient response and stability and then add on an integral controller gain to improve
the steady-state response.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

206
5 Continuous Digital Controller Design
PID Discrete Compensator Design Method Recall that a digital PID controller algorithm is given
by:
D(z) = Kp + Ki
T
2
z + 1
z −1 + Kd
1
T (1 −z−1) =
Kp + Ki + Kd −(Kp + 2Kd) + Kd
z2 −z
(5.19a)
whereas an analog PID controller is deﬁned as:
D(z) = Kp + Ki
1
𝜔+ Kd𝜔=
Kp𝜔+ Ki + Kd𝜔2
𝜔
(5.19b)
such that the derivative term Kd𝜔is given by 1
T (1 −z−1) = z−1
Tz . Therefore, deﬁning a bilinear
transformation such as 𝜔= T
2
z−1
z+1, D-action is given by:
z −1
Tz
||||z=
1+ T
2 𝜔
1−T
2 𝜔
=
𝜔
1 + T
2 𝜔
=
𝜔
1 + 𝜔
2
T
=
𝜔
1 + 𝜔
𝜔s
𝜋
(5.20)
Setting 𝜔𝜔= 2
T tan 𝜔T
2 and the corner frequency at 𝜔𝜔= 𝜔s
𝜋< 𝜔s
2 . The derivative controller
adjusts the desired phase margin, 𝛾(PM), to a desired value, |D(j𝜔𝜔)| →∞, when 𝜔T = 𝜋. From
Equation (5.19b), for purpose of PID controller design, the frequency response D(j𝜔𝜔) yields:
D(j𝜔𝜔) = Kp −jKi
1
𝜔𝜔
+ jKd𝜔𝜔= Kp + j
(
−Ki
1
𝜔𝜔
+ Kd𝜔𝜔
)
= |D(j𝜔𝜔)|∠𝜃
(5.21)
where:
|D(j𝜔𝜔)| =
√
Kp
2 +
(
−Ki
1
𝜔𝜔
+ Kd𝜔𝜔
)2
(5.22)
𝜃= tan−1
⎛
⎜
⎜
⎜⎝
(
−Ki
1
𝜔𝜔+ Kd𝜔𝜔
)
Kp
⎞
⎟
⎟
⎟⎠
(5.23)
In order to derive Kd, Kp, Ki such that the desired phase margin 𝛾(PMdesired) is achieved at a
gain crossover frequency 𝜔𝜔1, the following requirements must be fulﬁlled:
D(j𝜔𝜔1)G(j𝜔𝜔1) = 1∠−180∘+ 𝛾(PM)
(5.24)
for the gain condition:
|D(j𝜔𝜔1)| =
1
|G(j𝜔𝜔1)|
(5.25)
for the phase condition:
∠D(j𝜔𝜔1) + ∠G(j𝜔𝜔1) = ±180∘+ 𝛾(PM)
(5.26)
Recall:
Kp + j
(
Kd𝜔𝜔1 −Ki
1
𝜔𝜔1
)
= |D(j𝜔𝜔1)|ej𝜃=
1
|G(j𝜔𝜔1)|(cos 𝜃+ j sin 𝜃)
(5.27)
So:
Kp =
1
|G(j𝜔𝜔1)| cos 𝜃
(5.28)
Kd𝜔𝜔1 −Ki
1
𝜔𝜔1
=
1
|G(j𝜔𝜔1)| sin 𝜃
(5.29)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.2 Design of Control Algorithms for Continuous Systems and Processes
207
For a phase-lag compensation design (PI controller), this is equivalent to 𝜃< sin 𝜃< 0 and
Kd𝜔𝜔1 < Ki
1
𝜔𝜔1 , while for phase lead compensation design (PD controller), it is equivalent to
𝜃> 0, sin 𝜃> 0 and Kd𝜔𝜔1 > Ki
1
𝜔𝜔1 .
Some remarks on PID controller gains: (i) increasing Kd increases process bandwidth 𝜔b;
(ii) increasing Ki decreases steady-state error ess, causing, in both cases, a change in the
gain margin Kg(GM), while the phase margin 𝛾(PM) remains unchanged. From the rela-
tionship 𝜃= ∠D(j𝜔𝜔1) = ±180∘+ 𝛾(PM) −∠G(j𝜔𝜔1), the crossover frequency, 𝜔𝜔1, must
be chosen depending on whether the PID controller should be the leading or the lagging
phase. This could be determined a trial-and-error process, referring to this condition:
∠G(j𝜔𝜔1) = −180∘+ 𝛾(PMdesired) with 𝜃= ∠D(j𝜔𝜔1) = ±180∘+ 𝜙m −∠G(j𝜔𝜔1) > 0. Hence,
based only on this condition:
1) 𝜔𝜔1 should be chosen where ∠G(j𝜔𝜔1) < ±180∘+ 𝛾(PMdesired) in the case where the deriva-
tive controller action is expected to be dominant over the integral controller action;
2) 𝜔𝜔1 should be chosen where ∠G(j𝜔𝜔1) > ±180∘+ 𝛾(PMdesired) in the case where the integral
controller action is expected to be dominant over the derivative controller action.
A PID controller increases the system gain both at low and at high frequency. A large gain at
low frequency decreases the steady-state error, ess, while at high frequency, a large gain shifts the
gain crossover frequency to a higher frequency, causing a decrease of phase margin, 𝛾(PM), but
adds a leading phase up to 90∘. A larger gain at high frequency makes the bandwidth wider. This
trial-and-error approach could provide multiple solution values for the PID controller gains Ki
and Kd.
Discrete PI Controller Design (𝜽< 𝟎)
Kp −jKi
1
𝜔𝜔1
= |D(j𝜔𝜔1)|ej𝜃=
1
|G(j𝜔𝜔1)|(cos 𝜃+ j sin 𝜃)
(5.30)
with:
Kp =
1
|G(j𝜔𝜔1)| cos 𝜃
(5.31)
Ki = −𝜔𝜔1
1
|G(j𝜔𝜔1)| sin 𝜃
(5.32)
Discrete PD Controller Design (𝜽> 𝟎)
Kp −jKd𝜔𝜔1 = |D(j𝜔𝜔1)|ej𝜃=
1
|G(j𝜔𝜔1)|(cos 𝜃+ j sin 𝜃)
(5.33)
with:
Kp =
1
|G(j𝜔𝜔1)| cos 𝜃
(5.34)
Kd =
1
𝜔𝜔1|G(j𝜔𝜔1)| sin 𝜃
(5.35)
Exact Solution for Discrete PID Controller Design Recall the digital PID controller given by
D(z) = Kp + Ki
T
2
z+1
z−1 + Kd
1
T (1 −z−1), which is mapped into the 𝜔-domain (using bilinear
transformation for derivative terms) as:
D(𝜔) = Kp + Ki
1
𝜔+ Kd
𝜔
1 + T
2 𝜔
(5.36)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

208
5 Continuous Digital Controller Design
The frequency response is:
D(j𝜔𝜔) = Kp −jKi
1
𝜔𝜔
+ Kd
j𝜔𝜔
1 + T
2 j𝜔𝜔
(5.37)
At the crossover frequency, 𝜔𝜔1:
D(j𝜔𝜔1) = Kp −jKi
1
𝜔𝜔1
+ Kd
j𝜔𝜔1
1 + T
2 j𝜔𝜔1
=
1
|G(j𝜔𝜔1)|(cos 𝜃+ j sin 𝜃)
(5.38)
The real part is given by:
Kp + Kd
2
T 𝜔𝜔1
2
𝜔𝜔12 +
(
T
2
)2 =
cos 𝜃
|G(j𝜔𝜔1)|
(5.39)
The imaginary part is given by:
−Ki
1
𝜔𝜔1
+ Kd
2
T 𝜔𝜔1
2
𝜔𝜔12 +
(
T
2
)2 =
sin 𝜃
|G(j𝜔𝜔1)|
(5.40)
Another design technique is based on the ﬁrst-order compensator in the 𝜔-domain, given by
analogy to the s-domain as the compensator transfer function. This yields:
D(𝜔) = a1𝜔+ a0
b1𝜔+ 1 = a0
1 + a1
a0 𝜔
b1𝜔+ 1 = a0
1 +
𝜔
𝜔𝜔0
1 +
𝜔
𝜔𝜔p
(5.41)
with zero 𝜔𝜔0 = a0∕a1 and pole 𝜔𝜔p = 1∕b1, which are set to satisfy the controller parameters a1
and b1 as:
a1 = 1 −a0|G(j𝜔𝜔1)| cos 𝜃
𝜔𝜔1|G(j𝜔𝜔1)| sin 𝜃
(5.42)
b1 = cos 𝜃−a0|G(j𝜔𝜔1)|
𝜔𝜔1 sin 𝜃
(5.43)
where 𝜃= ∠D(j𝜔𝜔1) = ±180∘+ 𝛾(PM) −∠G(j𝜔𝜔1). Here, the DC gain a0 can be derived from
other criteria, such as the steady-state error:
D(𝜔) = a0
1 +
2
T
z −1
z + 1
𝜔𝜔0
1 +
2
T
z−1
z+1
𝜔𝜔p
(5.44)
which is equivalent to:
D(z) = a0
𝜔𝜔0𝜔𝜔p + 𝜔𝜔p
2
T
z−1
z+1
𝜔𝜔0𝜔𝜔p + 𝜔𝜔0
2
T
z−1
z+1
= a0
𝜔𝜔0𝜔𝜔pT(z + 1) + 2𝜔𝜔p(z −1)
𝜔𝜔0𝜔𝜔pT(z + 1) + 2𝜔𝜔0(z −1) = K (z −z0)
(z −zp)
(5.45)
such as:
K = a0
𝜔𝜔p(𝜔𝜔0T + 2)
𝜔𝜔0(𝜔𝜔bT + 2) = a0
𝜔𝜔p
(
𝜔𝜔0 + 2
T
)
𝜔𝜔0
(
𝜔𝜔b + 2
T
)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.2 Design of Control Algorithms for Continuous Systems and Processes
209
z0 = 𝜔𝜔0T −2
𝜔𝜔0T + 2 =
𝜔𝜔0 −2
T
𝜔𝜔0 + 2
T
zp = 𝜔𝜔bT −2
𝜔𝜔bT + 2 = −
𝜔𝜔b −2
T
𝜔𝜔b + 2
T
When z0 > zp > 0, this is considered a lead compensator; otherwise (z0 < zp), it is a lag com-
pensator. Therefore, the discrete controller parameters Ki, z0, zp of the ﬁrst-order phase lead or
lag compensator can be determined in terms of a0, 𝜔𝜔0, 𝜔𝜔b deﬁned in the w-domain. The lag
compensator (equivalent to PI controller) aims to improve and reduce the steady-state error by
using a pole near the origin. The lead compensator (equivalent to PD controller) improves the
transient characteristics. There is also a lag and lead compensator given by:
Dc(s) = Kc
(s + z1)(s + z2)
(s + p1)(s + p2)
(5.46)
with |p1| > |z1| > |z2| > |p2| > 0. Because this allows modiﬁcation of the transient and sta-
tionary system dynamic characteristics, it is similar to the PID controller. Because the latter
is the most commonly used industrial application, PID controller design methods are covered
throughout this textbook. A simple PID design method would consist of canceling all dominant
poles of the system by the controller zeros, then adding zeros and poles to meet the controller
design requirements. This is called the pole-zero cancelation. Pole placement is critical and
must consider stability issues in the z-domain within trial-and-error procedures.
Example 5.2
PI Controller Design Using a Frequency Response Method
Considering a discrete process model given by:
Gp(z) =
14.01
z2 −0.381z
Using a sampling period T = 0.25 s, design a controller with the following requirements: PO
(%) should be less 5% and near the zero steady-state error. The design of an equivalent PI con-
troller is presented as follows:
Step 1. Sketch the Bode plot Gp(𝜔) in the 𝜔-domain with respect to the frequency axis of 𝜔
and perform a dynamical step response of the uncompensated open-loop system. From the
uncompensated Bode plot analysis illustrated in Figure 5.2, the performance characteristics
are (i) Kg(GM) = 20 log10(−22.9 dB) = 0.0714 at phase crossover frequency, where 𝜔p 2𝜋×
0.879 Hz = 5.52 rad s−1 𝜔p and 𝛾(PM) is not deﬁned and (ii) settling time ts = 1.5 s for an
interval (min; max ()(21.38; 22.63)) PO (%) above 100%, where peak = 22.63 and peak time
tp = 1.5 s.
Step 2. Deﬁne the discrete controller speciﬁcations. Knowing that it is desired to have:
P.O(%) = 100e−𝜉𝜋∕
√
1−𝜉≈100
(0.6 −𝜉
0.6
)
≤5%
This is valid if 𝜉= 0.5439. Thus:
PMdesired = 100𝜉= 54.89∘
Step 3. Derive the controller parameters, such as the frequency 𝜔𝜔1, that meet design speciﬁ-
cations for:
∠G(j𝜔𝜔1) + ∠D(j𝜔𝜔1) = ±180∘+ 𝛾(PMdesired)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

210
5 Continuous Digital Controller Design
Magnitude (dB)
Phase (deg)
10–1
100
101
102
–360
–270
–180
–90
0
–20
–10
0
10
20
30
Frequency response (rad s–1)
Uncompensated system GM=22.9 dB (at 5.52 rad s–1), PM = Inf
Compensated system GM =7.81 dB (at 4.45 rad s–1), PM = 61.7 deg (at 1.55 rad s–1)
Figure 5.2 Frequency response of uncompensated G(𝜔) and compensated closed-loop D(𝜔)G(𝜔).
However, a key condition is to have:
∠G(j𝜔𝜔1) < ±180∘+ 𝛾(PMdesired) = 180∘+ 54.39∘= 234.4∘
𝜃= ∠D(j𝜔𝜔1) = ±180∘+ 𝛾(PMdesired) −∠G(j𝜔𝜔1) = 301.9∘
The gain values can then be derived graphically or by computing, such as:
|G(j𝜔𝜔1)| = 26.3dB = 20.65
Then, using the formula, the controller gains are given by:
Kp =
1
|G(j𝜔𝜔1)| cos 𝜃= 0.0256
Ki = −𝜔𝜔1
1
|G(j𝜔𝜔1)| sin 𝜃= 0.0761
If the performance is not met, choose another ∠Gp(j𝜔𝜔1) and start the computation again.
D(z) = Kp + Ki
T
2
z + 1
z −1 =
Kp2(z −1) + KiT(z + 1)
2(z −1)
=
(2Kp + KiT)z −(−KiT + 2Kp)
2(z −1)
Step 4. Tune the controller parameters if the controller design speciﬁcations are not met. Using
these parameters, an overshoot of 14.3% is achieved. Tuning controller parameters include:
Kp = 0.0226
Ki = 0.051
Step 5. Validate/check the controller parameter dynamics from the compensated Bode plot and
time response. The open-loop transfer function of the compensated system is given by:
T(z) =
0.8163z −0.4052
2z3 −2.762z2 + 0.762z
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.2 Design of Control Algorithms for Continuous Systems and Processes
211
Figure 5.3 System unit step response.
Time [s]
1
2
3
4
5
6
0
Magnitude
0
0.2
0.4
0.6
0.8
1.0
1.2
1.4
Therefore, the performance of the compensated system has the following characteristics: (i)
from the Bode plot Kg(GM) = 7.81 dB at phase crossover frequency 𝜔p of 0.7082 Hz and
𝛾(PM) = 61.7∘at the gain crossover frequency 𝜔g of 0.2467 Hz and (ii) from the resulting
step response, the rise time tr = 0.5 s and the settling time ts = 1.5 s, as depicted in Figure 5.3.
clear all; clf; Ts=0.25; sys_D = tf([14.01],[1 -0.381 0],0.25);
kp=0.0226;ki=0.0651; cont_numz=[ki*Ts+2*kp ki*Ts-2*kp];
cont_denz=[2 -2];cont_sys_D8=tf(cont_numz,cont_denz,0.25);
cont_sys_D=series(cont_sys_D8,sys_D);
figure(1);bode(sys_D,'b'); margin(sys_D);hold on;
bode(cont_sys_D,'r');hold off;
margin(cont_sys_D);grid;[cl_sys_D]=feedback(sys_D,1);
[cl_cont_sys_D]=feedback(cont_sys_D,1);
[y,t]=step(cl_sys_D);info1=stepinfo(cl_sys_D);
[y1,t1]=step(cl_cont_sys_D);info2=stepinfo(cl_cont_sys_D);
figure(2);stairs(t,y,'r'); figure(2);hold on;stairs(t1,y1,'b');
xlabel('Time[sec]');ylabel('Magnitude');
hold off;grid;axis([0 8 0 1.2]);
%y = db2mag(ydb); to convert from dB in mag values
%ydb = mag2db(y); to convert from mag in dB values
Example 5.3
Consider the discrete compensator given by:
D(z) = M(z)
E(z) = 0.33 −0.148z−1
1 −0.87z−1
Then, the control algorithm yields:
m(k + 1) = 0.87m(k) + 0.33e(k + 1) −0.148e(k)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

212
5 Continuous Digital Controller Design
However, it is neither unfeasible nor impractical to pretend to know in advance the future
error values of e(k + 1) at the kth sampling time. In the case of inﬁnite zeros, it is suitable to add
zeros at −1 in discrete time for each inﬁnite zero.
Remarks on Higher-Order Systems
When the given process has a dynamic order higher than 1 or a PID controller is used, the
overall closed-loop transfer function from H(z) will have an order larger than 2, such as:
H(z) = bmzm + bm−1zm−1 + … + b1z + b0
zn + an−1zn−1 + … + a1z + a0
(5.47)
where m ≤n and n > 2. In this case, the poles of transfer function should be compared to the
following desired transfer function:
Hdesired(z) =
∗
(z −𝛼1) … (z −𝛼n−2)(z −zp)(z −zp)
(5.48)
This entails placing all the rest poles close to the origin. Eventually, the dynamics associ-
ated with the poles close to the origin will die out very fast and the pair left will dominate
the system dynamics. For a ﬁrst-order system, it is suitable to use a deadbeat controller.
For second- or higher-order systems, the impulse system response could be obtained
through a ﬁnite settling step (FFS), as it is unfeasible to achieve a deadbeat response.
However, this method requires an accurate model, allowing the process to achieve a faster
response.
Example 5.4
PD Controller Design
A positioning system can be modeled with a sampling period T = 0.1 s as follows:
G(z) =
0.6z + 0.3
(z −0.4)(z −0.8)
The step response is displayed in Figure 5.4, with ess ≈0.72, P.O.(%) < 46% and a settling time
of 1.7 s.
It is desired to design a digital PD controller such that the resulting system output tracks a
step reference. It has the following transient characteristics: a settling time less than 1 s with an
0
Magnitude
0
0.2
0.4
0.6
0.8
1.0
1.2
1.4
Time [s]
0.5
1
1.5
2
2.5
3
3.5
Figure 5.4 Uncompensated step response.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.2 Design of Control Algorithms for Continuous Systems and Processes
213
overshoot PO(%) ≤15% and a steady-state error ess ≤10% of ﬁnal value. Converting this model
into 𝜔-transform yields:
G(z) = G(𝜔)|
z=
2
T +𝜔
2
T −𝜔
=
(
0.6 20+𝜔
20−𝜔+ 0.3
)
(
20+𝜔
20−𝜔+ 0.4
) (
20+𝜔
20−𝜔−0.8
) =
0.3𝜔+ 18
(1.4𝜔+ 12)(1.2𝜔+ 4)
Step 1. From the controller design speciﬁcations, the overshoot is related to the damping ratio
𝜉such that:
PO(%) = 100e−𝜉𝜋∕
√
1−𝜉≈100
(0.6 −𝜉
0.6
)
≤15%
This is valid for 𝜉= 0.51. Thus, the desired phase margin is given as PMdesired = 100𝜉= 51∘.
Step 2. Sketch the uncompensated Bode plot as illustrated in Figure 5.4(b).
It is possible to derive the open-loop gain crossover frequency from design speciﬁcations
ts = 5 s such that:
𝜔g = 𝜔n = 4.6
𝜉ts
=
4.6
0.51 × 5 = 1.8 rad s−1
with:
𝜔𝜔= 2
T tan 𝜔T
2
With, as the main criteria:
∠G(j𝜔𝜔1) < ±180∘+ 𝛾(PMdesired) = −180∘+ 51∘= −129∘
Step 3. Determine the static (DC) gain a0 using a steady-state error ess of 10% such that:
ess = e(∞) =
1
1 + Kpv
= 0.10 ⇒Kpv = 9
with a PD controller given by:
D(z) = Kp + Kd
1
T (1 −z−1)
such that the DC gain is given by:
D(1)G(1) = Kp(1)
0.6 + 0.3
(1 −0.4)(1 −0.8) = 9 ⇒Kp = 1.2
Step 4. By setting ∠G(j𝜔𝜔1) = −148∘, this will correspond to 𝜔𝜔1 = 9.89 rad s−1, and from the
phase condition 𝜃= ∠D(j𝜔𝜔1) = ±180∘+ PM = −180 + 51 −(−148) = 19∘.
Step 5. Finally, the PD controller yields:
D(z) =
(
Kp + Kd
1
T
)
z −Kd
1
T
z
Using an uncompensated Bode plot, the gain crossover frequency and its corresponding mag-
nitude are given by:
𝜔𝜔1 = 9.89 rad s−1
|G(j𝜔𝜔1)| = 0.73 dB = 1.087
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

214
5 Continuous Digital Controller Design
Thus, other gain values will be:
Kp =
1
|G(j𝜔𝜔1)| cos 𝜃= 0.8698
Kd =
1
𝜔𝜔1|G(j𝜔𝜔1)| sin 𝜃= 0.0303
With these values, the steady-state error is 12%, while the settling time and the percentage
overshoot are roughly 1 s and 41%, respectively. Hence, after tuning, this results in the step
response displayed in Figure 5.4(c) for Kp = 0.6089, Kd = 0.0903, where a settling time is 0.8 s,
the percentage overshoot is about 30%, and a steady-state value is 0.81.
In order to further reduce the steady-state error, a strategy of increasing gain Kp could be
used. However, such a decision could degrade the percentage overshoot. As such, a tradeoﬀis
required between achieving the steady-state condition and degrading the transient conditions.
An alternative strategy would be to add an integral action to reduce or even to eliminate the
steady-state error. As such, the controller gain of the integral action could be added into the PD
controller to form a PID controller for a new value of 𝜃:
Ki = −𝜔𝜔1
1
|G(j𝜔𝜔1)| sin 𝜃
The new controller gain for the D-action would be:
Kd =
1
𝜔𝜔1|Gp(j𝜔𝜔1)| sin 𝜃+ Ki
1
𝜔𝜔12
Once the values were derived (e.g. after tuning Kp = 0.8689, Kd = 0.0303 and Ki = 0.4622),
they could be inserted in the generic PID discrete controller equation:
D(z) = Kp + Ki
T
2
z + 1
z −1 + Kd
1
T (1 −z−1) =
Kp + Ki + Kd −(Kp + 2Kd) + Kd
z2 −z
An alternative approach would be to design an equivalent phase lead compensator, given by:
D(z) = K z −zc
z −zp
which is equivalent to in the 𝜔-domain (by bilinear transformation):
D(𝜔) = K 𝜏𝜔+ 1
𝛼𝜏𝜔+ 1
𝜃= ∠D(j𝜔𝜔1) = ±180∘+ 𝛾(PM) −∠G(j𝜔𝜔1) = −180∘+ 51∘−(−171∘) + 5∘= 47∘
𝛼= 1 −sin 𝜃
1 + sin 𝜃= 1 −sin 47∘
1 + sin 47∘= 0.1552rad and 𝜏=
1
𝜔gmax
√
𝛼
= 0.2538
D(𝜔) = 1.20.1552𝜔+ 1
0.0394𝜔+ 1
This could be converted back to the z-domain by using the inverse bilinear transformation:
D(z) = D(𝜔)|𝜔= 2z−1
Tz+1 = 1.2
0.1552 2
0.1
z−1
z+1 + 1
0.0394 2
0.1
z−1
z+1 + 1
= 3.725z −1.325
1.788z −0.212
When using the resulting digital lead compensator, the gain crossover frequency is about
9.9 rad s−1 and PM = 180 −134 = 46∘. Frequency responses of uncompensated and compen-
sated systems are displayed in Figure 5.5(b), while Figure 5.5(c) depicts the system step response.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.2 Design of Control Algorithms for Continuous Systems and Processes
215
0
Magnitude
0
0.2
0.4
0.6
0.8
1.0
1.2
1.4
Time [s]
0.5
1
1.5
2
2.5
Magnitude (dB)
Phase (deg)
–360
–270
–180
–90
0
–10
0
10
20
30
10–1
100
101
102
Frequency response (rad s–1)
Uncompensated system GM =7.11 dB (at 16.5 rad s–1), PM = 28.6 deg (at 10.4 rad s–1)
Compensated system GM=3.01 dB (at 19.8 rad s–1), PM = 13 deg (at 16.3 rad s–1)
(a)
(b)
Figure 5.5 (a) Uncompensated step response with Kp = 0.8689 and Kd = 0.0303. (b) Frequency response of
open-loop uncompensated G(𝜔) and compensated system. (c) Step response of closed-loop D(𝜔)G(𝜔).
clear all;clf;Ts=0.1;kp = 0.8698;%kp=0.95;kd = 0.0303;ki=0.4622;
uncomp_sys_D = tf([0.6 0.3],conv([1 -0.4],[1 -0.8]),0.1);
uncomp_sys_cl=feedback(uncomp_sys_D,1);
%pdcont=tf([kd/Ts+kp -kd/Ts],[1 0],0.1);
%pid=tf([kp+ki*(Ts/2)+kd/Ts ki*(Ts/2)-kp-(2*kd)/Ts kd/Ts],[1 -10],0.1);
%%% gain=1.2
pleadcont=tf([3.725 -1.325],[1.788 -0.212],0.1);
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

216
5 Continuous Digital Controller Design
0
Magnitude
0
0.2
0.4
0.6
0.8
1.0
1.2
1.4
1.6
Time [s]
(c)
0.5
3.0
4.0
5.0
1.0
1.5 2.0
2.5
3.5
4.5
Figure 5.5 (Continued)
%sys_comp=series(uncomp_sys_D,pdcont);%sys_comp=series(uncomp_sys_D,pid);
sys_comp=series(uncomp_sys_D,pleadcont);sys_cl=feedback(sys_comp,1); figure(1);
bode(uncomp_sys_D,'b');margin(uncomp_sys_D);
hold on;bode(sys_comp,'r');margin(sys_comp);
hold off;grid;figure(2);[xc,tc]=step(sys_cl);
figure(2);stairs(tc,xc); xlabel('Time [sec]');
ylabel('Magnitude');
%[xc1,tc1]=step(uncomp_sys_cl); %figure(3);stairs(tc1,xc1);
info1=stepinfo(sys_cl);%axis([0 20 0 1.5]);
grid; %y = db2mag(ydb); to convert from dB in mag values
Example 5.5
Deadbeat and PI Controller System
Consider the system given by:
Gp(z) = 0.00058
z −0.942
Step 1. The step response of the uncompensated value is given in Figure 5.6(a).
Step 2. From the dynamical analysis of the step response, the process steady-state error to step
input is about (1–0.01). Thus, the controller should be designed for a faster response in one
sampling period. In addition, the compensated response should avoid intersampling oscilla-
tions. Choose a PI controller to reduce the error such that:
D(z) = Kc
(
1 + T
𝜏i
1
1 −z−1
)
= Kc(1 + 𝜏i) −Kc𝜏iz−1
𝜏i(1 −z−1)
Step 3. Using the deadbeat control strategy, the closed-loop transfer function is deﬁned such
that:
T(z) =
D(z)Gp(z)
1 + D(z)Gp(z) = z−1
Therefore, the equivalent discrete controller is given by:
D(z) =
z−1
(1 −z−1)Gp(z) = Kc(1 + 𝜏i) −Kc𝜏iz−1
𝜏i(1 −z−1)
=
1 −0.942z−1
0.00058(1 −z−1)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.2 Design of Control Algorithms for Continuous Systems and Processes
217
0
5
10
15
20
25
30
35
40
45
0
0.005
0.01
0.015
0.02
0.025
0.03
Time [s]
(a)
(b)
Magnitude
0
5
10
15
20
25
30
35
40
45
0
0.2
0.4
0.6
0.8
1
Time [s]
Magnitude
Figure 5.6 (a) Uncompensated system response. (b) Compensated system response.
Step 4. By equivalence, derive the controller parameters such that:
D(z) = Kc(1 + 𝜏i) −Kc𝜏iz−1
𝜏i(1 −z−1)
=
1 −0.942z−1
0.00058(1 −z−1)
By identiﬁcation, the controller characteristics are given by:
Kc = 1.624
𝜏i = 16.2414
The compensated system response is illustrated in Figure 5.6(b).
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

218
5 Continuous Digital Controller Design
numz=[0.00058];denz=[1 -0.942];uncomp_sys_D=tf(numz,denz,1);
T=300;uncomp_sys_cl=feedback(uncomp_sys_D,1);
[x,t] = step(uncomp_sys_cl);
figure(1);stairs(t,x,'b');xlabel('Time [sec]'); ylabel('Magnitude');
grid;axis([0 45 0 0.03]);pidcont1=tf([1 -0.942],[0.00058 -0.00058],1);
sys_comp1=series(uncomp_sys_D,pidcont1);sys_cl1=feedback(sys_comp1,1);
[xd,td]=step(sys_cl1,T);figure(2);hold on; stairs(td,xd,'b');
xlabel('Time [sec]'); ylabel('Magnitude');grid;axis([0 45 0 1.2]);
Example 5.6
PID Controller Design Using Frequency Response
Consider a process model given by:
Gp(z) =
0.009057z + 0.008194
z(z2 −1.7424z + 0.7408)
The design requirements are as follows: for a sampling time T = 1 s, there should be minimal
settling time, no steady-state error, ess = 0 for step input, a time delay of 1 s, and a phase margin
PMdesired = 60∘at a frequency 𝜔𝜔1 not deﬁned.
Step 1. Sketch the Bode plot of the uncompensated process Gp(𝜔), as illustrated in Figure 5.7(a).
Step 2. Determine the parameters of the PID controller such that:
D(z) = Kp + Ki
T
2
z + 1
z −1 + Kd
1
T (1 −z−1)
with Kd, Kp, Ki being controller gain and
∠G(j𝜔𝜔1) < −180∘+ 𝛾(PMdesired) = 180∘+ 60∘= 240∘
Step 3. From the uncompensated system Bode plot, ﬁnd a new crossover frequency 𝜔𝜔1
such that PMdesired = 60∘. This is equivalent to choosing ∠G(j𝜔𝜔1) < 240∘. By setting
∠G(j𝜔𝜔1) = −106∘, this will correspond to 𝜔𝜔1 = 0.151 rad s−1, and from the phase condition
𝜃= ∠D(j𝜔𝜔1) = ±180∘+ 𝛾(PMdesired) −∠G(j𝜔𝜔1) = 180∘+ 60∘+ 106∘= 346∘
Using the Bode plot, the gain crossover frequency is given by:
𝜔𝜔1 = 0.241
|Gp(j𝜔𝜔1)| = −7.28dB = 0.241
Thus, controller gains result in:
Kp =
1
|G(j𝜔𝜔1)| cos 𝜃= 2.2435
Ki = −𝜔𝜔1
1
|G(j𝜔𝜔1)| sin 𝜃= 0.1348
Kd𝜔𝜔1 =
1
|G(j𝜔𝜔1)| sin 𝜃+ Ki
1
𝜔𝜔1
= −0.00008
Thus, the discrete PID controller is given by:
D(z) = −0.17 + 0.055 (z + 1)
z(z −1) −0.0019(1 −z−1)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.2 Design of Control Algorithms for Continuous Systems and Processes
219
Magnitude (dB)
Phase (deg)
180
360
–100
–50
0
50
0
–180
–360
–540
10–3
10–2
10–1
101
Frequency response (rad s–1)
(a)
(b)
100
Uncompensated system GM = 20.9 dB (at 0.441 rad s–1), PM = inf
System with PID GM = 11.9 dB (at 0.39 rad s–1), PM = 50.4 deg (at 0.156 rad s–1)
System with pole zero and PID GM = 15.7 dB (at 0.087 rad s–1), PM = 67.2 deg (at 0.0197 rad s–1)
PID compensated system response
PID and zero-pole
compensated system response
Uncompensated system response
0
Magnitude
–0.2
0
0.2
0.4
0.6
0.8
1.0
1.4
1.2
50
100
150
200
250
Time (s)
Figure 5.7 (a) Frequency responses for uncompensated PID with a pole-zero compensated system. (b) Step
responses of uncompensated PID with a pole-zero compensated system.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

220
5 Continuous Digital Controller Design
Step 3. Plot the step response of the uncompensated process and compensated process with the
PID controller as shown in Figure 5.6.
Step 4. Check the system stability through the determination of system roots. The poles and
zeros of the compensated system with PID controller are as follows: for poles, z = 0; z = 1;
z = 0.9019; z = 0.8216, and for zeros, z = 1.3846; z = −0.9050; z = 0.0095. An undesired zero
is z = −0.9050.
Step 5. Add the pole to cancel the zero such that:
Gpzc(z) =
Kc
z −0.9050
Step 6. Apply the pole-zero cancelation with PID controller such that:
Gpzc(z) =
Kc(z −1.3846)(z −0.0095)
z2(z −0.9019)(z −0.8216)(z −1)
Step 7. Through gain Kc tuning, Kc = 0.7.
Step 8. The discrete controller transfer function is:
Gpzc(z) = −0.2022z2 + 0.2818z −0.00266
2z3 −0.19z2 −1.81z
clear all; clc;Ts=1;
uncomp_sys_D=tf([0.009057 0.008194],[1 -1.7183 0.7356 0],Ts)
figure(1); bode(uncomp_sys_D,'g');margin(uncomp_sys_D);grid;
uncomp_sys_cl=feedback(uncomp_sys_D,1);
T=700;[x,t] = step(uncomp_sys_cl,T);
figure(2);plot(t,x,'r');hold on;
kp=2.2435;ki=0.1348;kd=-0.00008;
pidcont=tf(parallel(parallel(kp,ki*tf([1 1],[2 -2],1)),kd*tf([1 -1],
[1 0],1)));
sys_comp=series(uncomp_sys_D,pidcont);sys_cl=feedback(sys_comp,1);
pidcont1=tf([-0.2022 0.2818 -0.00266],[2 -0.19 -1.81 0],1);
sys_comp1=series(uncomp_sys_D,pidcont1);
sys_cl1=feedback(sys_comp1,1); figure(1); bode(uncomp_sys_D,'g');
bandwidth(sys_comp);margin(sys_comp);
hold on;bode(sys_comp1,'r');
bandwidth(sys_comp1);margin(sys_comp1);
[xc,tc]=step(sys_cl,T);[xd,td]=step(sys_cl1,T);
figure(2);hold on;plot(tc,xc,'b');hold on;plot(td,xd,'g');
xlabel('Time (sec)');ylabel('Magnitude');axis([0
250 -0.2 1.5]) ;
legend('uncompensated','compensated','cancelation');
5.2.4
PID Controller Gains Design Using a Root Locus Technique
The fundamental idea behind the root-locus technique used for the controller design consists
of modifying the process characteristics equation in order to change the root locations until
the desirable root’s location is reached. Among several possible PID controllers, there may be
a number of conﬂicting transient and stationary characteristics, which can lead to a faster but
oscillatory and even unstable response. In the following sections, a variety of controller conﬁg-
urations from the PID family are derived using the root locus design technique.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.2 Design of Control Algorithms for Continuous Systems and Processes
221
5.2.4.1
Design Procedures
A lead compensator approximates the PD controller by moving the locus to the left. This
improves process damping while lowering the rise time and decreasing the transient over-
shoot. Therefore, it aﬀects the overall transient performance characteristics. In contrast, the lag
compensator (similar to PI control) improves steady-state accuracy requirements by moving
the locus to the left due to its zero, while its poles adjust the locus to the right. However,
such a controller degrades the system stability. Two design approaches are presented: the
discrete-time controller and the continuous time controller. The continuous time controller is
then converted into a discrete controller using discrete equivalence.
Lead or Lag Continuous-Based Controller Design Approach
Step 1. Audit the performance to benchmark the process dynamics with respect to the transient
and the stationary response characteristics, the stability, and even the disturbance rejection
(robustness). Among time-based performance indicators, there are the overshoot PO (%),
rise time tr, settling time ts, and steady-state error ess. These can be derived in terms of known
or selected (𝜉, 𝜔n).
Step 2. Deﬁne the expected performance or design speciﬁcations (settling time ts, percentage
overshoot, PO (%), etc.) and translate them into the natural frequency (𝜔n) and damping ratio
(𝜉) in order to derive the desired root loci of the compensated system through the equation,
for a second-order system:
Sd = −𝜉𝜔n ± j𝜔n
√
1 −𝜉2
(5.49)
Step 3. Derive the uncompensated transfer function in the Laplace time domain, Gp(s).
Step 4. Sketch the root locus of Gp(z) and determine whether the desired roots can be real-
ized using this uncompensated system (evaluate whether the root locus passes through the
desired loci of the dominant root according to the speciﬁcations).
Step 5. Select the controller given by:
Gc(z) = K s + z0
s + zp
(5.50)
with (|z0| < |zp|), in the case of a lead compensator, or (|z0| > |zp|) for a lag compensator.
Step 6. If a compensator is required, choose a zero value for the controller, z0, such as:
z0 = −𝜉𝜔n
(5.51)
In the case where the lead compensator is chosen, place the zero of the phase-lead directly
below the desired root location (or to the left of the ﬁrst two real poles), as shown in Figure 5.8.
Figure 5.8 An s-plane showing root structure.
Im(s)
Re(s)
σ
θ=sin–1ζ
ωd
ωn
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

222
5 Continuous Digital Controller Design
In the case of a lag compensator, set the zero and the pole of controller near the origin such
that their diﬀerence is given by:
|arg(zp + sd) −arg(zp + sd)| < 2∘
Step 7. Choose the pole of the controller:
zp = 𝜉𝜔n + 𝜔n
√
1 −𝜉2 tan
(
−𝜑± 𝜋
2
)
(5.52)
with ∠Gc(sd) = 𝜃c = 180∘−∠Gp(sd) and 𝜑= ∠(sd + a). Usually, the pole location is such that
the total angle at the desired root location is 180∘(angle condition). Therefore, it is on the
compensated root locus.
Step 8. Evaluate the value of the system gain K at the desired root location using the magnitude
criteria, as:
K =
1
|Gc(sd)Gp(sd).|
(5.53)
then calculate the error constant by taking the value of K obtained previously as the new
system, then deriving the value of the constant errors for a process G(s) such that:
• for step input: Kp = lim
s→0 D(s)G(s) and for a given ess =
1
1+Kp
• for ramp input: Kv = lim
s→0 sD(s)G(s) and for a given ess =
1
Kv
(repeat if necessary).
Step 9. Construct a closed-loop process step response. If the process dynamics performance
requirements are not fulﬁlled, perform a controller tuning procedure by selecting the con-
troller zero and pole (z0, zp) such that the ratio
zp
z0 moves near zero in the case of a lead
compensator. In another term, move the zero far away from the origin. This should result
in: (i) the zero being placed in the neighborhood of the closed-loop 𝜔n; that is, z0 = 𝜔n; and
(ii) the pole being set in the range of zp = 5z0 to 20z0. In the case of lag compensation, where
the stationary condition requirements are not met, a tuning procedure would consist into
moving the zero of the controller further to the right.
Step 10. Obtain the discrete approximation, D(z), of the derived continuous controller, Gc(s),
using the pole-zero mapping technique or another discrete approximation technique.
Lead or Lag Discrete Controller Design Approach Consider a discrete controller in the form of
D(z) = M(z)
E(z) = K z −z0
z −zp
with z0 > zp
(5.54)
Step 1. Translate the provided design speciﬁcations (settling time ts, percentage overshoot,
PO (%), etc.) into natural frequency 𝜔n and damping ratio 𝜉in order to derive the desired
discrete root loci of the compensated system such that for a given sampling period:
zdesired = e−𝜔n(𝜉−j
√
1−𝜉2)T = e−𝜔n𝜉T∠± (𝜔nT
√
1 −𝜉2)
(5.55)
Step 2. Derive the uncompensated transfer function in the discrete-time domain, Gp(z).
Step 3. Draw the root locus of the uncompensated system and evaluate whether it passes
through the desired root loci zd speciﬁed previously. Compute ∠Gp(zd).
Step 4. If a lead compensator is required, the zero value of the controller, zo, could be added
directly under the dominant pole along the real axis or to the left of the ﬁrst two poles (near
the origin for the higher-order system). If a lag compensator is required: (i) derive ∠D(z) =
𝜃= ±n180∘−Gp(z), where n is an odd number; (ii) set z0 such that ∠D(z0) > D(z) and does
not impair closed-loop stability; and (iii) check the value by computing the phase angle of the
compensator zero at the desired closed-loop pole location.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.2 Design of Control Algorithms for Continuous Systems and Processes
223
Step 5. Derive the pole of the controller, zp, using the angle condition (i.e. the sum of the angle
contributions of poles and zeros from this dominant pole, which should be equal to 180∘).
Here, the distance from the desired closed-loop pole to the compensator pole is the required
phase angle for the compensator pole.
Step 6. Evaluate the value of the system gain K at the desired pole using the magnitude con-
dition and derive the error constant. Recall that the steady-state characteristics are given by
the position error Kp = lim
k→1 zD(z)G(z) and the velocity error constant Kv = lim
k→1
(z−1)(1+D(z)G(z))
Tz
.
Thus, for a step input, they are given by ess =
1
1+Kp , while for a ramp input, they are given by
ess =
1
Kv .
Step 7. If the design requirements are not fulﬁlled, the controller tuning procedure should be
performed by choosing the controller pole and zero (zp, z0) so that the ratio
zp
zo moves near
zero. This will result in the zero moving far away from the origin. It should be noted that the
condition of (|zp| < |zo| < 1) should be checked to ensure system stability.
Example 5.7
Controller Design Using Root Locus
Consider a discrete process model given by:
Gp(z) = K(z + 1)
(z −1)2
with T =
√
2 s. Consider a digital controller algorithm given by:
D(z) = (z −a)
(z −b)
The uncompensated root locus plot is depicted in Figure 5.9(a).
It is desired to cancel one pole of the open-loop process transfer function Gp(z) that lies on
the positive real axis of the z-plane by (z −a). Select (z −b) such that the compensated process
gives a set of complex roots at a desired pole within the unit circle on the z-plane. By setting
a = 1 to cancel one pole and b = 0.2, then:
D(z)Gp(z) =
K(z + 1)
(z −1)(z −0.2)
–5
–4
–3
–2
–1
0
1
–2.5
–2
–1.5
–1
–0.5
0
0.5
1
1.5
2
2.5
Real axis
Imaginary axis
Imaginary axis
–3 –2.5 –2 –1.5 –1 –0.5
0
0.5
1
–1.5
–1
–0.5
0
0.5
1
1.5
1.38
Real axis
(a)
(b)
ωnT=1.38
ξ=0.48
Figure 5.9 (a) A z-plane plot showing the root location for an uncompensated system. (b) A z-plane plot
showing the root location for a compensated system.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

224
5 Continuous Digital Controller Design
0
5
10
15
20
25
30
35
0
0.2
0.4
0.6
0.8
1
1.2
1.4
Time (s)
Magnitude
Figure 5.10 Step response of a compensated system.
Derive the entry point using F(𝜎):
1 + D(z)Gp(z) = F(𝜎) = (𝜎−1)(𝜎−0.2) + K(𝜎+ 1)
(𝜎−1)(𝜎−0.2)
Then, dF(𝜎)
d𝜎
= 0, so that 𝜎= 2.5 as an entry point.
From the root locus plot depicted in Figure 5.9(b), it is possible to select K = 0.25 in order
to achieve an overshoot of 20% and a settling time of 8.5 s, as shown in Figure 5.10. Diﬀerent
results can be achieved if a = 1 and b = −0.98.
D(z)Gp(z) =
K(z + 1)
(z −1)(z + 0.98) ≈
K
(z −1)
Design Procedures for Lead-Lag Compensation
The lead-lag compensator is similar to the PID controller. Its discrete controller design is in the
form of:
Gp(z) = M(s)
E(s) = Kc
(s + z1)(s + z2)
(s + p1)(s + p2) = Kc
(
s + 1
T1
) (
s + 1
T2
)
(
s + 𝛾
T1
) (
s +
1
𝛽T2
)
(5.56)
with |p1| > |z1| > |z2| > |p2| > 0 and Kc being the controller gain, and where 𝛾> 1 and
𝛽> 1. The continuous time controller-based design approach procedure consists of deriving
Kc, 𝛾, 𝛽, T1, T2. For the case of 𝛾≠𝛽, the following design steps here can be taken:
Step 1. From given performance speciﬁcations (settling time ts, percentage overshoot PO (%)
…), derive the corresponding natural frequency (𝜔n) and damping ratio (𝜉) desired root of
closed-loop poles through:
sd = −𝜉𝜔n ± j𝜔n
√
1 −2𝜉2
Step 2. Derive the uncompensated open-loop transfer function in the discrete-time domain,
Gp(s).
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.2 Design of Control Algorithms for Continuous Systems and Processes
225
Step 3. Using the uncompensated open-loop transfer function Gp(s), determine the angle deﬁ-
ciency 𝜑, if the dominant closed-loop poles are closed to the desired root’s location. The
phase lead portion of the lag-lead compensator must contribute to this angle 𝜑, such that:
𝜑= ∠Gp(sd)
Step 4. Choose T2 at a suﬃciently large value so that the magnitude of the lag portion is almost
equal to unity, then choose T2 such that:
|||sd1 + 1
T2
|||
|||sd1 +
1
𝛽T2
|||
= 1
(5.57)
where sd1 is one of the dominant closed-loop poles. Choose the values of T1 and 𝛾such that:
∠
sd1 + 1
T1
sd1 + 𝛾
T1
= 𝜑
(5.58)
then determine Kc such that:
||||||
Kc
sd1 + 1
T1
sd1 + 𝛾
T1
Gp(sd1)
||||||
= 𝜑
(5.59)
Step 5. If the velocity error constant Kv is speciﬁed, determine the value of 𝛽that satisﬁes the
requirement for Kv so that:
KC = lim
s←0 sKc
𝛽
𝛾Gp(s)
(5.60)
Remarks on Compensation Controller Properties
The discrete pole placement (or root locus technique) is not recommended for designing PID
controllers because the dynamic response is not uniquely determined by the closed-loop pole
locations (the value of transfer function zeros is also important). Hence, post-performance eval-
uation of controller candidates is highly recommended to select the best ones among those
suitable.
Common Guidelines for PID Family Control Loops
In the case of ﬂow and liquid pressure control, such a process displays the combined characteris-
tics of fast response and no time delay, as well as small high-frequency noise. It is suitable to use a
PI controller with intermediate controller gain; that is, 0.5 < Kc < 0.7 and 0.2 < 𝜏l < 0.3 min. In
the case of liquid level control, such an integrating process displays an output signal with noise
due to the liquid turbulence ﬂow. It is suitable to use a high-gain PI controller by increasing the
gain Kc, so the oscillation magnitude will decrease. Otherwise, it may be advisable to use either
an averaging control in order to dampen the ﬂuctuation, such as a PI controller with Kc =< 100%
Δh
and 𝜏l =
4V
KcQmax (Δh ≅min(hmax −h1p, h1p −hmin) or an error-squared controller with reﬁned
tuning. In the case of pressure control, such a process displays some fast and self-regulating
dynamic characteristics. Here, it is suitable to use a PI controller with small integral gain (large
reset time). In the case of temperature control, such a process displays a slow response char-
acteristic of time delay. The PID controller can be used for faster system response. In the case
of control of composition process control, such a process displays some characteristics similar
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

226
5 Continuous Digital Controller Design
to temperature control, usually with larger noise and more time delay. However, the derivative
gain should be small to limit its action. The temperature and composition controls are usually
implemented using advanced control strategies such as model predictive control (MPC), due
the diﬃculty of control.
5.2.5
Feedforward Control Methods
Feedforward control design techniques provide the eﬀective elimination of undesirable
responses to various types of process inputs, such as: (i) process disturbance; (ii) reduction
of error in process output through command input; and (iii) modiﬁcation of the manipulated
input. Usually, there are three types of feedforward control designs: (i) the feedforward control
of disturbance; (ii) open-loop feedforward; and (iii) modiﬁed command input feedforward.
The principle is to feed the disturbance or the command input signal forward through a
feedforward controller and to combine it with manipulated input generated by a feedback
controller. This method is especially applicable when the process disturbance is measurable
(i.e. dominant process disturbance [loads] signals), meaning its eﬀect on the process is
predictable and the controller design is feasible. In the case of command input feedforward,
this consists in precomputing a command input in order to have the system track a command
trajectory. Figure 5.11 depicts the typical block diagram of the process with a command input
feedforward loop.
5.2.5.1
Command Input Feedforward Control Algorithm
During the execution of a command input trajectory, the position errors are large, so the
feedback control actions are considerable. The actual velocity and acceleration (including the
actuator force) may therefore be much larger than planned. This leads to undesired and even
dangerous deviations from the planned trajectory, and damage to the actuator or even large
positioning errors when arriving at the desired endpoint; thus, the dynamical state of the
controlled system is not settled. In order to circumvent this, a command input feedforward
should be added, with the objective of modifying the manipulated input to the process. This
is expected to improve dynamics performance by reducing or eliminating errors between
the command input and the process output. Figure 5.11 illustrates a generic conﬁguration of
command input feedforward control. Thus, the objective command input feedforward is:
c(z)
r(z) = 1
(5.61)
Gc(z)
Gf(z)
+
–
+
+
r(z)
e(z)
msfb(z) f(z)
C(s)
Computer 
interface
c(z)
T
Feedforward
Feedback
Process
Gp(s)
m(z)
Figure 5.11 Generic command input
feedforward block diagram.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.2 Design of Control Algorithms for Continuous Systems and Processes
227
It can be observed from Figure 5.11 that the system transfer function is:
c(z)
r(z) =
(
1 +
Gf (z)
GC(z)
) (
GC(z)GP(z)
1 + GC(z)GP(z)
)
(5.62)
Therefore, Gf (z) could be chosen such that:
Gf (z) =
1
GP(z)
(5.63)
Thus, as expected:
r(z) ≈c(z)
(5.64)
and the eﬀect of command feedforward control is
{
ess = 0
mss = 0.
Gf (z) is similar to implementing the open-loop control of the process output c(z). The feed-
forward control output is not aﬀected by c(z), thus the feedforward control scheme is essentially
an open-loop control. The accuracy of control depends on the accuracy of the process model.
Any inaccuracy is compensated for by the closed-loop controller Gc(z). The implementation of
command feedforward control can be simpliﬁed using a modiﬁed block diagram, as shown in
Figure 5.12.
The modiﬁed command input to the feedback controller is given by:
r′(z) =
(
1 +
Gf (z)
Gc(z)
)
r(z)
(5.65)
This requires that the entire sequence of command inputs r(z) is known in advance. Hence,
r′(z) rather than r(z) is known in advance, allowing better elimination of system errors. This is
done by precalculating and storing the entire modiﬁed command sequence r′(z), rather than
using r(z) as the command input for each sample period. This approach speeds up computa-
tions, as it eliminates the need to calculate f(z) at each sample period. Regardless of feedback
controller Gc(z), a feedforward controller Gf (z) is designed in order to eliminate systems errors.
Hence, a lower performance feedback controller would not need feedforward control. Large
step inputs should be avoided when using feedforward control because overly large manipula-
tions may be needed to achieve the required response.
Gc(z)
G′f(z)
e′(z)
r(z)
m′(z)
+
–
Gp(s)
c(s)
r′(z)
+
Computer
interface
c(s)
c(z)
+
f(z)
Feedforward
Feedback
Process
Figure 5.12 Modiﬁed command input feedforward block diagram.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

228
5 Continuous Digital Controller Design
Gc(z)
Gf(z)
D(z)
Disturbance
+
–
+
+
+
–
θ*(z)
e(z)
msfb(z)
f(z)
θ(s)
Computer 
interface
Ka
m(z)
1
Js2
θ(z)
T
Process
Feedforward
Feedback
Figure 5.13 Block diagram of a DC motor with feedforward control.
Example 5.8
Consider a simple motor given by a double integration process, as shown in
Figure 5.13, such that:
Gp(s) = 1
Js2
The discrete process transfer function is given by:
𝜃(z)
m(z) = Gp(z) = Ka
J
T2
2
z−1 + z−2
(1 −z−1)2
Thus:
f (z) = Gf (z)𝜃∗(z) =
1
Gp(z)𝜃∗(z) = m(z)
𝜃(z) 𝜃∗(z) = 𝜃∗(z) J
Ka
2
T2
(1 −z−1)2
z−1 + z−2
= 𝜃∗(z) J
Ka
2
T2
(z −1)2
(z + 1)
By inversion, this equation yields:
f (n) + f (n −1)
2
= J
Ka
𝜃∗(n) −𝜃∗(n −1)
T
−𝜃∗(n −1) −𝜃∗(n −2)
T
T
= J
Ka
𝜔∗(n) −𝜔∗(n −1)
T
meaning that the average input torque is the average acceleration torque. Alternatively:
f (n) = −f (n −1) + J
Ka
𝜃∗(n + 1) −𝜃∗(n)
T
−𝜃∗(n + 1) −𝜃∗(n)
T
T∕2
This is realizable if the command trajectory 𝜃* is feasible and known a priori. However, the
negative sign on the value of f(n −1) causes some force oscillations if the average acceleration
has a zero mean. A position ramp command input trajectory for the closed-loop motor system
is given by:
𝜃∗(z) = 𝜃slope
Tz−1
(1 −z−1)2 = 𝜔∗
Tz−1
(1 −z−1)2
thus:
f (z) = 𝜃∗(z) J
Ka
2
T2
(z −1)2
(z + 1) = 𝜔∗
Tz−1
(1 −z−1)2
J
Ka
2
T2
(1 −z−1)2
(z−1 + z−2) = 𝜔∗J
Ka
2
T
1
(1 + z−1)
With the initial impulse, this results in an average input torque given by:
f (n) + f (n −1)
2
= 0 + 𝜔∗J
Ka
1
T 𝛿(0)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.2 Design of Control Algorithms for Continuous Systems and Processes
229
This command feedforward can be rewritten as:
f (n) = −f (n −1) + 𝜔∗J
Ka
2
T 𝛿(0)
If:
{
msfb ss = 0
ess = 0
then:
m(z) = f (z)
From the previous equation:
𝜃(z)
m(z) = 𝜃(z)
f (z) = Ka
J
T2
2
(z−1 + z−2)
(1 −z−1)2
Therefore, the response can be derived from the algorithm given by:
𝜃(n) = 2𝜃(n −1) −𝜃(n −2) + Ka
J
T2
2 (f (n −1) + f (n −2)) ∶
Table 5.3 summarizes the discrete control and process values for the ﬁrst four sequences.
Figure 5.14(a) and (b) illustrates the manipulated inputs and the desired and achieved positions.
It should be noticed that the manipulated input is a square signal wave of amplitude (
̂J𝜔∗
̂Ka
2
T ).
However, this is unacceptable, even though it produces the correct mean value of command
input. Indeed, the velocity proﬁle achieves the correct mean velocity and the correct position
at each sample instant, but with poor tracking. In order to achieve better position tracking
where tracking errors are tolerated and a trajectory is ﬁxed, the following procedure should
be adopted: (i) solve for continuous feedforward command input f(s) and (ii) develop a
discrete-time nearest equivalent input sequence form, f(k). An impulse will be required to
achieve this possible physical input (nearest approximation). The control strategy consists of
deriving the required velocity of the zero error, providing the correct value during the ﬁrst
interval, and turning oﬀthis input after the initial pulse. This means that if 𝜔∗= Δ𝜃∗
T
is the
Table 5.3 Derived sequence values.
n
f(n −𝟐)
f(n −𝟏)
f(n)
𝜽(n −𝟐)
𝜽(n −𝟏)
𝜽(n)
0
0
0
̂J
̂Ka
𝜔∗
T
0
0
0
1
0
̂J
̂Ka
𝜔∗
T
−
̂J
̂Ka
𝜔∗
T
0
0
𝜔∗T
2
2
̂J
̂Ka
𝜔∗
T
−
̂J
̂Ka
𝜔∗
T
̂J
̂Ka
𝜔∗
T
0
𝜔∗T
2
𝜔*T
3
−2̂J
̂Ka
𝜔∗
T
̂J
̂Ka
𝜔∗
T
−
̂J
̂Ka
𝜔∗
T
𝜔∗T
2
𝜔*T
3𝜔∗T
2
4
̂J
̂Ka
𝜔∗
T
−
̂J
̂Ka
𝜔∗
T
̂J
̂Ka
𝜔∗
T
𝜔*T
3𝜔∗T
2
2𝜔*T
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

230
5 Continuous Digital Controller Design
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
0
2
4
6
8
10
12
14
16
18
20
Time (s)
Magnitude
Command input
System response
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
–0.5
–0.4
–0.3
–0.2
–0.1
0
0.1
0.2
0.3
0.4
0.5
Time (s)
(a)
(b)
Magnitude
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
–0.2
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
Time (s)
(c)
Magnitude
Figure 5.14 (a) Desired ramp command. (b) Required manipulated input. (c) Velocity achieved.
desired ramp rate, the command input feedforward torque f(k) will be:
f (0)Ka
J T = Δ𝜃∗
T
The system velocity response is illustrated in Figure 5.14(c).
This is equivalent to:
⎧
⎪
⎨
⎪⎩
f (0) = J
Ka
Δ𝜃∗
T2
f (k > 0) = 0
In this case, it should be noted that a position error has occurred and is never corrected.
However, it results in an approximation of the velocity trajectory with near-zero tracking error.
This is based on the plant response equation given by:
𝜃(k) = 2𝜃(k −1) −𝜃(k −2) + Ka
J
T2
2 (f (k −1) + f (k −2))
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.2 Design of Control Algorithms for Continuous Systems and Processes
231
Table 5.4 Sequence values of system with input feedforward.
n
f(n −𝟐)
f(n −𝟏)
f(n)
𝜽(n −𝟐)
𝜽(n −𝟏)
𝜽(n)
0
0
0
̂J
̂Ka
Δ𝜃∗
T2
0
0
0
1
0
̂J
̂Ka
Δ𝜃∗
T2
0
0
0
Δ𝜃∗
2
2
̂J
̂Ka
Δ𝜃∗
T2
0
0
0
Δ𝜃∗
2
3Δ𝜃∗
2
3
0
0
0
Δ𝜃∗
2
3Δ𝜃∗
2
5Δ𝜃∗
2
4
0
0
0
3Δ𝜃∗
2
5Δ𝜃∗
2
7Δ𝜃∗
2
Table 5.4 summarizes the discrete control and process values for the ﬁrst four sequences.
Figure 5.15(a)–(c) illustrates the manipulated inputs, desired and achieved position, and even
velocity. It could be noticed that the zero-velocity error is achieved, but the position error is
never corrected; rather, it is ﬁnite. Another procedure to achieve realizable tracking with zero
steady-state error is to use a command input trajectory with no instantaneous energy changes.
For an error at time k = 0, and where the position value at the second sampling period is [2𝜔*T],
the velocity at k = 1T is [𝜔1] for the ﬁrst two samples, such that:
0.5𝜔1T + 0.5(𝜔1 −𝜔∗)T + 𝜔∗T = 2𝜔∗T
Thus, an optimal solution would be to have 𝜔1 = 1.5𝜔*. Meaning that:
⎧
⎪
⎨
⎪⎩
f (0) = 3
2
J
Ka
Δ𝜃∗
T2
f (k > 0) = −1
2
J
Ka
Δ𝜃∗
T2
Thus, the process response equation is given by:
𝜃(k) = 2𝜃(k −1) −𝜃(k −2) + Ka
J
T2
2 (f (k −1) + f (k −2))
Table 5.5 summarizes the discrete control and process values for the ﬁrst four sequences. It
should be noticed that the zero-velocity error and the position error are never corrected, but
are reduced. In the case of a parabolic input, the command trajectory is given by:
𝜃∗(t) = 1
2𝜔∗(t)t2
such that:
𝜃∗(z) = 𝜔∗T(z−1 + z−2)
(1 −z−1)3
Recall that:
f (z) = 𝜃∗(z)m(z)
𝜃(z) = 𝜔∗T2
2
(z−1 + z−2)
(1 −z−1)3
J
Ka
2
T2
(1 −z−1)2
(z−1 + z−2) = 𝜔∗J
Ka
1
(1 −z−1)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

232
5 Continuous Digital Controller Design
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
0
2
4
6
8
10
12
14
16
18
20
Time (s)
(a)
Magnitude
Command input
System response
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
–0.5
–0.4
–0.3
–0.2
–0.1
0
0.1
0.2
0.3
0.4
0.5
Time (s)
Magnitude
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
0
0.5
1
1.5
2
2.5
Time (s)
(b)
(c)
Magnitude
Figure 5.15 (a) Desired ramp command input and position achieved. (b) Required manipulated input.
(c) Velocity achieved.
Table 5.5 Sequence values of system with adjusted input feedforward.
n
f(n −𝟐)
f(n −𝟏)
f(n)
𝜽(n −𝟐)
𝜽(n −𝟏)
𝜽(n)
0
0
0
3
2
̂J
̂Ka
Δ𝜃∗
T2
0
0
0
1
0
3
2
̂J
̂Ka
Δ𝜃∗
T2
−1
2
̂J
̂Ka
Δ𝜃∗
T2
0
0
3Δ𝜃∗
4
2
3
2
̂J
̂Ka
Δ𝜃∗
T2
−1
2
̂J
̂Ka
Δ𝜃∗
T2
0
0
3Δ𝜃∗
4
2Δ𝜃*
3
−1
2
̂J
̂Ka
Δ𝜃∗
T2
0
0
3Δ𝜃∗
4
2Δθ*
3Δ𝜃*
4
0
0
0
2Δ𝜃*
3Δ𝜃*
4Δ𝜃*
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.2 Design of Control Algorithms for Continuous Systems and Processes
233
Inverting the result with the initial impulse yields:
f (k) = f (k −1) + 𝜔∗J
Ka
𝛿(0)
It could be noted that a step manipulation input is feasible. In conclusion, note that the alge-
braic inverse solution should not be applied without checking the feasibility of the manipulated
input result. The generalized procedure to obtain a solution for command input feedforward
could be as follows:
1) solve for the continuous command input feedforward f(t);
2) check if f(t) is unfeasible (when several impulse inputs are required);
3) check if the command trajectory 𝜃*is ﬁxed;
4) then develop the discrete-time equivalent f(k) as the input sequence form, with some track-
ing errors;
5) otherwise, create a feasible trajectory 𝜃*(k).
Example 5.9
Consider the robot arm modeled by block diagram in Figure 5.16. Assume it is
desired to eliminate the following errors that occur as a result of the command input r(z). The
error transfer function is given by:
e(z)
r(z) =
1
1 + 140 0.11Tz−1
1−z−1
=
1 −z−1
1 −(1 −15.4T)z
For ramp input of 0.1 m s−1,
r(z) =
0.1Tz−1
(1 −z−1)2 𝛿(0)
the ﬁnal value of the error is:
e∞= lim
z−1→1(1 −z−1)
[
1 −z−1
1 −(1 −15.4T)z−1
]
0.1Tz−1
(1 −z−1)2 = 6.5 mm
These errors can be eliminated by using feedforward control, as illustrated Figure 5.16. As
such, the required feedforward controller is:
Gf (z) =
1
0.11Tz−1
1−z−1
= 1 −z−1
0.11Tz−1
140
e(z)
r(z)
m(z)
+
–
c(z) meters
f(z)
+
+ m′(z)
c(z)
0.11Tz–1
1 – z–1
volts
Gf(z)
140
Figure 5.16 Control feedforward of a robot arm.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

234
5 Continuous Digital Controller Design
The corresponding feedforward control equation is:
f (k −1) =
1
0.11T (r(k) −r(k −1))
or:
f (k) =
1
0.11T (r(k + 1) −r(k))
Generally, this result is unrealizable because it requires future knowledge of r(k + 1); however,
in many applications of robot arms, motion commands are stored in a database. In this case, the
entire sequence of commands r(k) is known and the foregoing modiﬁed feedforward control is
used, such that the modiﬁed command sequence r′(k) can be precalculated as:
r′(z) =
⎛
⎜
⎜⎝
1 +
1−z−1
0.11Tz−1
140
⎞
⎟
⎟⎠
r(z)
or:
r′(k) =
1
15.4T r(k + 1) +
(
1 −
1
15.4T
)
r(k)
In other applications of robot arms, the command r(k) must be generated in real time using
outputs from the task-oriented sensors on the robot. In this case, a modiﬁed feedforward
equation that is realizable must be used. Considering that
r(k + 1) −r(k) ≈r(k) −r(k −1)
for most of the time the robot is operating, a logical choice is:
f (k) =
1
0.11T r(k) −
1
0.11T r(k −1)
and:
Gf (z) = 1 −z−1
0.11T
With this feedforward control transfer function, the error transfer function can be deter-
mined to be:
e(z)
r(z) =
(1 −z−1)2
1 −(1 −15.4T)z
and the ﬁnal value of the error is:
e∞= lim
z−1→1(1 −z−1)
[
(1 −z−1)2
1 −(1 −15.4T)z−1
]
0.1Tz−1
(1 −z−1)2 = 0
Therefore, the modiﬁed command feedforward controller is realizable and eliminates the
steady-state errors under discussion.
5.2.5.2
Disturbance Feedforward Control Algorithm
The concept of feedforward control of disturbances is illustrated in Figure 5.17. If a disturbance
input d(z) can be sampled by a computing unit, the feedforward controller transfer function
Gf (z) can be used to eliminate or at least reduce the eﬀects of the disturbances on the system.
If F(z) is the discrete-time disturbance input, then process input m′(z) is given by:
m′(z) = m(z) + Gf (z)d(z) + F(z)d(z)
(5.66)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.3 Modern Control Topologies
235
Gc(z)
Gf(z)
F(s)
Gp(s)
D(s)
Disturbance
+
–
+
–
+
+
r(z)
e(z)
m(z)
f(z)
M′(s)
C(s)
Computer 
interface
Feedforward
Feedback
Process
Figure 5.17 Feedforward control of disturbances.
Clearly, the most desirable situation is to design the feedforward control such that:
f (z) = −F(z)d(z)
(5.67)
meaning:
Gf (z) = −F(z)
(5.68)
In this case, then:
m(z) = m′(z)
(5.69)
Although Equation (5.67) is analytically straightforward, practical shortcomings arise. The
computer must treat the disturbance signal as a sampled variable, even though the disturbance
changes continuously and the process responds continuously to changing disturbances. Cal-
culations using Gf (z) are based on a discrete-time analysis, treating the disturbance as a series
of step inputs entering the process at sample times. Ideally, the feedforward control algorithm,
Gf (z), should completely compensate for the disturbance. But, in real situations, this goal can
only be approximated. The principle of feedforward control action must therefore be combined
with feedback control, as illustrated in Figure 5.17. If the feedforward control is successful, the
portion of the disturbance input remaining uncompensated for is small, eliminating the distur-
bance as the major factor aﬀecting system performance.
5.3
Modern Control Topologies
5.3.1
State Feedback PID Control Algorithms
Industrial DC motor-control algorithms are designed around control topologies such as: (i) an
average velocity loop cascaded with a position loop; (ii) multiple state-variable closed loops in
parallel; or (iii) cascades of current, speed, and position control loops. In general, state-variable
controllers allow separation of command tracking issues from disturbance rejection issues.
For example, in order to provide the zero-tracking error, a state feedforward approach could
be added to the state feedback controller. Hence, in addition to improving the tracking, this
approach could maintain the stability and disturbance rejection capability. Advanced control
strategies allow estimation of the speed and torque using a reduced-order observer method.
However, their implementation through a torque feedforward control scheme for the dynamic
load changes poses torque accuracy and torque dynamics predictability challenges.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

236
5 Continuous Digital Controller Design
KT
1
J
1
s
b
DC motor mechanical model
(position/velocity control loop) 
1
s
1
s
1
L
Kα
Kω
Kθ
T Kiθ
1 – z–1
DC motor electrical model
(current/torque control loop)
di(t)/dt
i(t) Tm(t)
TL(t)
α(t)
ω(t)
θ(t)
αc(k)
ωc(k)
–
+
+
+
+
+
+
+
–
+
+
+
–
–
–
ic(t)
T1
T2
T3
θc(k)
Acceleration measurement
Velocity measurement
Position measurement
Computer
interface
KA
eθ(k–1)
eθ(k)
eω(k)
eα(k)
T(t)
T*(k)
Distubance
torque
R
Figure 5.18 Typical PID-based acceleration, velocity, and position state feedback.
Typical PID-based acceleration, velocity, and position state feedback is shown in Figure 5.18.
Such DC motor control topology oﬀers the ability to maintain the zero steady-state error to
a step change in command input, while allowing undesirable speed overshoot from a sudden
change in load torque. In addition, the process dynamics is highly sensitive to state controller
gains. Also, the full command vector (i.e. position, velocity, and acceleration) oﬀers better com-
mand tracking, but for most industrial applications the acceleration is not available or is costly.
However, in this topology, the torque or the current control eﬀort is bounded either by (i)
limiting the motor operation when the current exceeds a threshold value or (ii) combining
the speed control loop with the current loop in order to regulate the motor speed around a
pre-set value. Despite providing good stiﬀness to any disturbance inputs, this state-variable
PID control topology is error-driven because it has some dynamic tracking errors (i.e. the
integral-of-position-error state).
Some other state-variable loops are used in industrial control applications, such as a PID
position controller into which velocity and position commands are fed. In that regard, see
Figure 5.19 for an equivalent PID control topology that avoids this drawback. Here, while using
θc(k)
Position sensor
Current/
Torque 
Control
Loop
1
Js
1
s
b
Dc motor mechanical model
(position control loop)
+
–
KivelT
–
θ(k)
T*(k)
Td(t)
θ(t)
ω(t)
T
Kvel+
1 – z–1
T
+
+
1 – z–1
T
Kpos
ωc(k)
+
–
+
Tm(t)
T(t)
ω(k)
eθ(k)
eω(k)
Classical PID controller
+
1 – z–1
Figure 5.19 Classical (industrial) PID motion controller with velocity and position loops.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.3 Modern Control Topologies
237
KA ≈R∕Kt, this PID topology has a cascade PI controller for the velocity loop and a P con-
troller in the position loop. In addition, the velocity input signal is used as a feedforward term
that feeds for the command ahead of the integral, making the system more responsive to com-
mand changes. Also, this topology requires several synchronized sensors (position, velocity,
and acceleration).
Considering that an optical encoder is used as a position-sensing device, while the
velocity-sensing device is replaced by an average velocity (denoted avg 𝜔c(z), derived by
numerically diﬀerentiating the position measurement), with a = b∕J and using the table of
equivalence, the discrete-time model of the DC motor mechanical component will result in:
Gp(z) = 1
b
[(aT −1 + e−aT)z + (1 −e−aT −aTe−aT)
a(z −1)(z −e−aT)
]
(5.70a)
The closed loop yields:
𝜃(z)
𝜃c(z) =
(
Kpos + 1−z−1
T
) (
Kvel + KivelT
1−z−1
)
Gp(z)
1 +
(
Kpos + 1−z−1
T
)2 (
Kvel + KivelT
1−z−1
)
Gp(z)
(5.70b)
Furthermore, the pulse width modulation (PWM), which is commonly used to control the
voltage, generates signals that cause ripples in the motor torque. Therefore, in addition to the
conventional PI controller, a proportional term has been proposed in the motor feedback path
to eliminate these ripples, as illustrated in Figure 5.20. All of these state feedback PID control
topologies aim to be expressed as the state-variable motion controller of a DC motor. Hence, in
the examination of those control topologies, it could be demonstrated that they are mathemati-
cally identical with the gain relationships. In order to improve the tracking and better reject the
disturbance, the control topology with the zero-error tracking state variable combined with the
command feedforward, illustrated in Figure 5.21, should be used. From the generic PID control
topology, the desired torque command input yields:
T∗(z) = M(z) = Kc(𝜃c(z) −𝜃(z))
[
1 + KiT + Kd
T (1 −z−1)
]
(5.71)
Δθc(k)
Position sensor
1
Js
1
s
b
1/T
1 – z–1
T
1 – z–1
T
Dc motor mechanical model
+
–
Kω
Kisθ
+
+
–
ωc(k)
θ(k)
T*(k)
θ(t)
ω(t)
T
1–z–1
Δθ(k)
Ksθ
+
Current/
torque 
control
loop
Td(t)
Tm(t)
T(t)
ω(k)
+
+
–
+
Computer
interface
Cascade position and velocity controller
Figure 5.20 PID-based state-position cascade control topology for a DC motor.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

238
5 Continuous Digital Controller Design
Δθ*(k)
Position sensor
1
Js
1
s
b
1/T
1–z–1
T
1–z–1
T
DC motor mechanical model
+
–
Ksω
Kisθ
+
+
–
ω*(k)
^ω(k)
θ(k)
Tsfb(k)
θ(t)
ω(t)
T
1–z–1
Δθ(k)
Ksθ
+
Ksα
Ksω
Tcff(k)
+
+
ω*(k)
.
+
+
Computer
interface
Current/
Torque
Control
Loop
Td(t)
Tm(t)
T(t)
+
+
–
PID and feedforwad controller
T*(k)
Figure 5.21 Zero-error tracking state-variable motion controller and command feedforward.
In the case of the topology for state feedback with acceleration loop and integrated position
loop, this yields:
T∗(z) = M(z) = Kc(𝜃c(z) −𝜃(z))
[
Ki𝜃T
(1 −z−1) + K𝜃+ K𝜔
(1 −z−1)
T
+ K𝛼
(1 −z−1)2
T2
]
(5.72)
Assuming that:
avg 𝜔c(z) = (1 −z−1)
T
𝜃c(z)
𝛼c(z) = (1 −z−1)
T
avg 𝜔c(z) = (1 −z−1)2
T
𝜃c(z)
with the classical PID control topology:
T∗(z) = M(z) = Kc(𝜃c(z) −𝜃(z))
[
Kvel
(1 −z−1)
T
+ (KposKvel + Kivel) + KposKivel
T
(1 −z−1)
]
(5.73)
Similar to the PID cascade control topology, and by combining terms associated to the control
gains K𝜔, Ks𝜃, and Kiso, this yields:
T∗(z) = M(z) = (𝜃∗(z) −𝜃(z))
[
K𝜔
(1 −z−1)
T
+ (Ks𝜃) + Ksi𝜃
T
(1 −z−1)
]
(5.74)
With the zero-tracking error and command feedforward control topology, as well as by com-
bining terms associated to the control gains, this yields:
T∗(z) = M(z) + Tcﬀ(z) = M(z) +
[
J (1 −z−1)2
T2
+ b(1 −z−1)
T
]
𝜃c(z)
(5.75)
In Figure 5.21, it should be recalled that Ks𝜔≈b and Ks𝛼≈J. By comparing controller terms, it
could be noted that the physical interpretations of state feedback gains of the physical variables
are:
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.3 Modern Control Topologies
239
D2(z)
Go(z)
r(z)
m(z)
+
–
GI(z)
c1(z)
d(z)
+
c(z)
D1(z)
–
+
+
Cascade controller
Process
Inner loop (intermediate process output)
Outer loop (process output)
Figure 5.22 Block diagram for generic cascade control topology.
for Ks𝜔in N.m.sec.rad−1
Ks𝜔= Kvel; that is, the damping gain
for Ks𝜃in N.m.rad−1
Ks𝜃= KposKvel + Kivel; that is, the stiﬀness gain
for Kis𝜃in N.m.sec.−1.rad−1
Kis𝜃= KposKivel; that is, the integrated stiﬀness gain
Cascade Controller Design Procedure The cascade control topology requires a process with some
intermediate system variables. As illustrated in Figure 5.22, the disturbances aﬀect the interme-
diate process output as well as the primary process output. Indeed, some processes often occur
in series, with a load distribution between the process variables from the inner and the outer
loops. Hence, the cascade control topology aims to limit the eﬀect of the disturbances feeding
the secondary variable on the primary output, as well as the secondary process gain variations
due to changes in operating points.
The cascade control topology consists of a set of master-slave controllers, where the outer
one (master) closes the loop with the main process control variable and the inner one (slave)
closes the loop between the master output as a set point and the measurement of the inner
process variable. Thus, their resulting discrete transfer functions can be derived individually for
each process output. The intermediate output is related to the manipulated input through the
inner-loop discrete transfer function, GI(z), whereas the complete process can be represented
by the outer-loop discrete transfer function, Go(z). Here, the inner process is usually faster than
the outer one. Hence, the intermediate variable allows the attenuation of the inner loads or the
inner process nonlinearities.
The design of cascade controllers is similar to the case with single-loop controller design. This
means that ﬁrst the slave controller then the master controller are successively designed. There
are two controller design speciﬁcations: (i) for the command input response; and (ii) for the
disturbance input response. Thus, from Figure 5.22, the overall discrete transfer function for
the closed loop becomes:
c(z)
r(z) =
G0(z)D1(z)D2(z)
1 + G0(z)D1(z)D2(z) + D2(z)GI(z)
(5.76)
Using the linear superposition principle, the outer-loop controller is given by:
D1(z) =
Ge(z)G1(z)
G0(z)[1 −Ge(z)] −Gd(z)
(5.77)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

240
5 Continuous Digital Controller Design
while the inner-loop controller is given by:
D2(z) = G0(z)[1 −Ge(z)] −Gd(z)
Gd(z)GI(z)
(5.78)
with Ge(z) being the expected transfer function derived from the controller design speciﬁca-
tions and Gd(z) being the disturbance discrete closed-loop transfer function, given by:
Gd(z) =
G0(z)
1 + D1(z)D2(z)G0(z) + D2(z)G1(z)
(5.79)
Example 5.10
Cross-Coupled Discrete-Time Model of a DC Motor
Consider the DC motor block diagram illustrated by Figure 5.23. Here, it is desired to develop
the corresponding discrete time DC motor model through block diagram manipulation. From
the DC motor-control topology, two control loops can be identiﬁed: the inner current loop and
the outer velocity loop. Figure 5.24(a) and (b) illustrates these equivalent loops in block diagram
form.
Through the discretization of the closed-loop transfer function, it is possible to derive these
discrete transfer functions such that:
𝜔(z)
Va(z) = b𝜔1z−1 + b𝜔2z−2
1 −b1z−1 −b2z−2
I(z)
Va(z) =
bi1z−1 + bi2z−2
1 −b1z−1 −b2z−2
𝜃(z)
Va(z) =
b𝜃1z−1 + b𝜃2z−2 + b𝜃3z−3
1 −b1z−1 −b2z−2
Figure 5.25(a) depicts the equivalent open-loop transfer function, while Figure 5.25(b) depicts
the equivalent open-loop and cascade transfer function. An equivalent block diagram with
1
s
1
Js
KT
1
Ls
R
I(s)
ω(s)
θ(s)
D
/
A
Va(s)
Ke
+
–
–
Figure 5.23 DC motor model block diagram.
1
s
1
Js
KT
1
Ls+R
I(s)
(a)
(b)
ω(s)
θ(s)
D
/
A
Va(s)
Ke
+
–
1
Js
KT
1
Ls +R
I(s)
ω(s)
D
/
A
Va(s)
Ke
+
–
Figure 5.24 (a) Velocity control loop. (b) Current loop.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.3 Modern Control Topologies
241
I(z)
Va(z)
ω(z)
Va(z)
θ(z)
Va(z)
I(z)
(a)
(b)
(c)
(d)
Ω(z)
θ(z)
Va(z)
I(z)
I(z)
Ω(z)
ω(z)
θ(z)
Va(z)
I(z)
ω(z)
Va(z)
I(z)
I(z)
ω(z)
1 – z–1
T
θ(z)
avg_ω(z)
2
1+z–1
Va(z)
I(z)
ω(z)
I(z)
ω(z)
1 – z–1
T
θ(z)
2
1+z–1
B1ccz–1
1 – A1ccz–1
–C1cc
B1cc
I(z)
ω(z)
θ(z)
avg_ω(z)
bi1 z–1 + bi2 z–2 
1–b1 z–1 – b2 z–2 
bω1 z–1 + bω2 z–2 
1 –b1 z–1 – b2 z–2 
bθ1 z–1 + bθ2 z–2 + +bθ3 z–3 
1 –b1 z–1 – b2 z–2 
Figure 5.25 (a) Equivalent input voltage to current, velocity, and position transfer functions. (b) Decomposed
block diagram of input voltage to motor shaft position. (c) Block diagram of input voltage to motor shaft
position derived from average velocity. (d) Cascade current, velocity, and position control loops.
average velocity is presented in Figure 5.25(c), with the relationship between the intermediate
variables given by:
𝜔(z)
I(z) = 𝜔(z)Va(z)
VaI(z)
= b𝜔1z−1 + b𝜔2z−2
bi1z−1 + bi2z−2
This could be rewritten in the form:
i(k) = Acci(k −1) + B1ccVa(k −1) + C1cc𝜔(k −1)
This is equivalent to:
I(z) = B1ccz−1
1 −Acc
(
Va(z) −C1cc
B1cc
𝜔(z)
)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

242
5 Continuous Digital Controller Design
I(z) = B1cc z−1
1 −Acc
(
Va(z) −C1cc
B1cc
ω(z)
)
The equivalent cascade closed-loop block diagram is illustrated in Figure 5.25(d).
Example 5.11
Cascade Control and State Control of a DC Motor Using Only Position
Feedback
Consider a cascade controller for DC motor motion where there is a PI controller velocity inner
loop and a P controller position outer loop. In addition, there is a position command input and
a feedforward command input on velocity. Here, only the position is measured and sampled, as
illustrated in Figure 5.26.
From Figure 5.26, the position model is given by:
Gp(z) = KA
J
T2
2
(z−1 + z−2)
(1 −z−1)2
and the average velocity model results in:
Gv(z) = Gp(z)(1 −z−1)
T
= KA
J
T2
2
(z−1 + z−2)
(1 −z−1)
Step 1. Tune the inner PI loop on the velocity.
Using the estimated velocity and the discrete PI controller Gpi, the open-loop transfer func-
tion results in:
Gpi(z)Gv(z) = Kc
z −𝛿c
z −1
KA
J
T2
2
(z2 + z)
z(z −1)
Then, the same procedure can be applied to derive PI controller parameters 𝛿c and Kc, based
on the expected dynamic characteristics.
Step 2. Tune outer loop on position.
Consider the average velocity control closed loop Gv(z) = avg 𝜔(z)
avg 𝜔c(z). From the resulting posi-
tion loop of cascaded control of DC motor, the open-loop transfer function yields:
Gpi(z)Gv(z) = Kc
z −𝛿c
z −1
KA
J
T2
2
(z2 + z)
z(z −1)
Kpos
avg 𝜔(z)
avg 𝜔c(z)
T
1 −z−1
θ(z)
θc(z)
Kvel
KiT
1 – z–1
–
+
KAT (z–1+ z–2)
2J(1 –z–1)
T
1 – z–1
1 – z–1
T
–
+
+
+
Kpos
+
+
Average velocity control loop
Position control loop
1 – z–1
T
θ(z)
avg_ω(z)
avg_ω(z)
avg_ωc(z)
Simplified DC motor model
Figure 5.26 Cascade-based control block diagram of a DC motor.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.3 Modern Control Topologies
243
Hence, the position closed-loop transfer function yields:
𝜃(z)
𝜃c(z) =
avg 𝜔(z)
T
1−z−1 + Kpos
avg 𝜔(z)
avg 𝜔c(z)
T
1−z−1
1 + Kpos
avg 𝜔(z)
avg 𝜔c(z)
T
1−z−1
Here, using the magnitude condition and based on the controller design requirements, it is
possible to derive Kpos.
Example 5.12
State-Variable DC Motor Motion Controller Design with Separated Poles
Consider a DC motor with state-variable controller (Ki𝜃, Ks𝜃, K𝜔) for a position, velocity, and
average velocity controller. Consider the DC motor parameters given by J = 0.01 Kg.m2 and
Ka = 100 N.m V −1, as illustrated in Figure 5.27. It is required to derive the damping K𝜔, stiﬀness
Ks𝜃, and integrated stiﬀness Ki𝜃gains, which will achieve four real closed-loop roots that are
approximately equivalent to break frequencies of 0.2, 0.06, 0.017, and 0.012*500 Hz. There are
two possible sample frequencies, fs = 500 Hz and fs = 1000 Hz.
From block diagram manipulation, Figure 5.28 illustrates the equivalent closed-loop cascade
control of a DC motor. Hence, from Figure 5.28, the position model is given by:
Gp(z) = KA
J
T2
2
(z−1 + z−2)
(1 −z−1)2
θ(z)
θc(z)
Kω
Ksθ
Kiθ
–
+
KAT (z–1+ z–2)
2J(1 – z–1)
T
1 – z–1
1 – z–1
T
–
+
+
+
+
T(z)
∫θc(z)
avg_ω(z)
avg_ω(z)
avg_ωc(z)
Simplified DC motor model
Figure 5.27 Active PID-based state feedback control block diagram of a DC motor.
θ(z)
θc(z)
–
+
T
1 – z–1
1 – z–1
T
–
+
+
Kpos
+
Average velocity control loop
Position control loop
1 – z–1
T
θ(z)
avg_ω(z)
avg_ω(z)
avg_ωc(z)
Simplified DC motor model
KiT
1–z–1+Kvel
KAT (z–1+ z–2)
2J(1 – z–1)
Figure 5.28 Modiﬁed position loop of cascaded control of a DC motor.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

244
5 Continuous Digital Controller Design
θ(z)
∫θc(z)
Kω
Ksθ
Kiθ
–
+
T
1 – z–1
1 – z–1
T
–
+
+
+
T(z)
–
+
θc(z)
∫θ(z)
θ(z)
+
+
Integrated position control loop
Position control loop
Average velocity control loop
avg_ω(z)
avg_ωc(z)
Simplified DC motor model
KAT (z–1+ z–2)
2J(1 – z–1)
Figure 5.29 Average velocity and position-based state feedback control of a DC motor.
recalling that the model of the DC motor average velocity is given by:
Gv(z) = Gp(z)(1 −z−1)
T
= KA
J
T2
2
(z−1 + z−2)
(1 −z−1)
State command velocity inputs on all controlled states position 𝜃c(t), velocity 𝜔c(t), and accu-
mulated (integrated) position error ∫𝜃c(t)dt −∫𝜃(t)dt are illustrated in Figure 5.29.
This could be modiﬁed into a state-variable control of DC motor position and velocity, as
illustrated in Figure 5.30. This ﬁgure is similar to a PID cascade controller with successive tuning
velocity and position loops as illustrated in Figure 5.29.
Example 5.13
Controlled DC Motor Using Estimated State Feedback Control
A block diagram for control of a DC motor using the state-variable approach is illustrated in
Figure 5.31. In this ﬁgure, the integrated motor position is controlled, while allowing feed-
forward control of position and velocity. After manipulation of the block diagram this would
be equivalent to Figure 5.32, where the position and integrated motor position are controlled
in order to achieve a zero steady-state error of the motor position from a constant velocity
command input (i.e. equivalent of the ramp position command). The feedforward command of
θ(z)
θc(z)
–
+
T
1 – z–1
Kω
+
–
Ksθ
Kiθ
T
1–z–1
+
T(z)
+ +
Position control loop
Average velocity control loop
avg_ω(z)
avg_ωc(z)
Simplified DC motor model
KAT (z–1+ z–2)
2J(1 – z–1)
Figure 5.30 Modiﬁed average velocity and position-based state feedback control of a DC motor.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.3 Modern Control Topologies
245
ZOH
Km
s(δs + 1)
K1
T
(1 – z–1)
K2
K3
T
(1 – z–1)
c(s)
x1(z)
^
^
^
x2(z)
x3(z)
K3
T
(1 – z–1)
T
(1 – z–1)
KP
KD
–
+
++
–
–
Position
command 
R(z)
M(z)
CD motor/
amplifier
D/A 
converter
DC motor
shaft position
T
M(s)
c(z)
c(z)
c(z)
Sampler
Position and velocity feedforward controller
Integrated position feedback controller
(integrated position, position velocity) 
State feedback DC motor model
State motor velocity control loop 
State motor position control loop 
State motor integrated position control loop 
Figure 5.31 Position-based PID state feedback control of a DC motor.
ZOH
Km
s(δs+1)
K1
K2
T
(1 – z–1)
c(s)
x1(z)
x2(z)
K3
T
(1 – z–1)
T
(1 – z–1)
KP
KD
–
+
+ +
–
–
Position
command 
R(z)
M(z)
CD motor/
amplifier
D/A 
converter
DC motor
shaft position
T
M(s)
c(z)
c(z)
^
^
c(z)
Sampler
Position and velocity feedforward controller
(position velocity) 
State feedback DC motor model
State motor velocity control loop 
State motor position control loop 
–
+
Figure 5.32 Modiﬁed block diagram of position-based PID state feedback control of a DC motor.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

246
5 Continuous Digital Controller Design
the position and velocity is added. Here, the state-variable estimates ̂x1(nT), ̂x2(nT), and ̂x3(nT)
of the state variables x1(nT), x2(nT), and x3(nT) are derived, corresponding to the motor veloc-
ity, motor position, and integrated motor position, respectively. Thus, a state estimator could
be used instead of the moving averaging motor position, c(t). Therefore, the state equation for
the DC motor system is:
d
dt
⎡
⎢
⎢⎣
x1(t)
x2(t)
x3(t)
⎤
⎥
⎥⎦
=
⎡
⎢
⎢
⎢⎣
−1
𝛿
0 0
1
0 0
0
1 0
⎤
⎥
⎥
⎥⎦
⎡
⎢
⎢
⎢⎣
x1(t)
x2(t)
x3(t)
⎤
⎥
⎥
⎥⎦
+
⎡
⎢
⎢
⎢
⎢⎣
Km
𝛿
0
0
⎤
⎥
⎥
⎥
⎥⎦
m(t)
and the DC motor position equation is given as:
c(t) = [0 1 0]
⎡
⎢
⎢⎣
x1(t)
x2(t)
x3(t)
⎤
⎥
⎥⎦
with the time constant of the DC motor being 0.0028 s and the gain being 63 rad s−1 V−1. A
sample period of 0.002 s is chosen for the controller. The discrete state equations can thus be
derived as:
⎡
⎢
⎢⎣
x1((n + 1)T)
x2((n + 1)T)
x3((n + 1)T)
⎤
⎥
⎥⎦
=
⎡
⎢
⎢⎣
0.48954
0
0
0.00143
1
0
0
0.002 1
⎤
⎥
⎥⎦
⎡
⎢
⎢⎣
x1(nT)
x2(nT)
x3(nT)
⎤
⎥
⎥⎦
+
⎡
⎢
⎢⎣
32.15888
0.03596
0.00003
⎤
⎥
⎥⎦
m(nT)
and the DC motor position equation is equivalent to:
c(nT) = [0 1 0] ⎡
⎢
⎢⎣
x1(nT)
x2(nT)
x3(nT)
⎤
⎥
⎥⎦
5.3.2
MPC Algorithms
The classical control scheme does not consider knowledge of physical systemic constraints
(e.g. motor speed limits), safety constraints (e.g. temperature/pressure sensor limits), or perfor-
mance constraints (e.g. system overshoot) regarding control system design. Thus, such control
systems have to be able to show suboptimal plant operation when operating set points are far
from the constraints. Otherwise, the MPC paradigm allows the inclusion of such system con-
straints in the controller design process, using a process model to predict behavior, without
violating any process constraints when operating at near optimal conditions. Such MPC algo-
rithms use a receding horizon at each time instant (prediction horizon), during which they
receive system measurements to compute a ﬁnite horizon control sequence based on the pro-
cess constraint-oriented cost function to be minimized. The ﬁrst part of the resulting optimal
sequence is implemented as the process input.
MPC algorithms have been applied to a large number of MIMO systems with changing con-
trol objectives and large time delays (i.e. slow pace with sampling period from a few seconds up
to hours). Among the processes are industrial petrochemical and pulp and paper applications.
Successful results ease their extension into classical systems such as car engine control and
voltage regulation in electric power generation and distribution networks. However, the speed
of execution of their optimal control algorithm (MPC) bounds the ﬁnite prediction horizon
chosen.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.3 Modern Control Topologies
247
A typical MPC algorithm involves solving an optimization problem at each time instant,
k (prediction horizon), by predicting the system performance using a process model (linear
or nonlinear, discrete or continuous time) to optimize future system inputs. This is done by
computing each time a new control vector, uk, is fed to the system over the prediction horizon,
while considering process constraints such as the amplitude and rate of change of the input
signal. This optimization method is done recursively to reduce the eﬀect of uncertainty on the
process. Key components of the MPC algorithm include:
1) A control objective, Jk (cost function), being the diﬀerence between the future system
outputs yk+1/L and the future system reference input rk+1/L, based on control inputs uk
being costly over a prediction horizon L. This objective function aims to be minimized with
respect to the future control vectors, uk+1/L. Hence, the typical cost function formulation is
given by:
Jk =
L
∑
=1
(yk+i −rk+i)TQ(yk+i −rk+i) + uT
k+iPiuk+i−1 + ΔuT
k+i−1RΔuk+i−1
(5.80)
with Qi ∈ℝm×m, Pi ∈ℝr×r, Ri ∈ℝr×r being process-dependent symmetric and positive
semideﬁnite diagonal weighting matrices speciﬁed by the designer. The weighting matrices
are almost always chosen as constant (time-invariant) over the prediction horizon L (i.e.
Q1 = Q2 = … = QL, P1 = P2 = … = PL and R1 = R2 = … = RL), while at steady-state,
y = r. In the matrix form, the cost function formulation could be given as:
Jk = (yk+1∕L −rk+1∕L)TQ(yk+1∕L −rk+1∕L) + uT
k+1∕LPuk∕L + ΔuT
k∕LRΔuk∕L
(5.81)
Hence, MPC can be considered to be a linear quadratic programming (QP) problem where:
Q ∈ℝLm×Lm, P ∈ℝlr×Lr, R ∈ℝLr×Lr,
such that the control problem yields:
uk∕L = arg min
uk∕L Jk(uk∕L)
(5.82)
2) Deﬁnitions of some process operating constraints, such as the signal input amplitude con-
straints that might be active during transients (e.g. the electrovalve saturation) and the con-
straints on the rate of change of the input signal. These constraints could be classiﬁed as
either hard (i.e. they must be satisﬁed at all times or the problem is unfeasible) or soft
(i.e. they can be violated to avoid problem infeasibility, such as by removing some con-
straints until the optimization is feasible). They are used as avoidance case strategies (e.g.
anti-windup strategies of the dynamic controller or constrained control law). A typical deﬁ-
nition of these constraints includes absolute minuvalue ≤uk ≤max uvalue or rate minΔuvalue ≤
uk −uk−1 ≤max Δuvalue. There are also state constraints (active during transients, such as
aircraft stall speed, which is active during steady-state, and process economic constraints)
that can be deﬁned as minxvalue ≤xk ≤max xvalue.
3) A system predictive model (PM) derived from physics-based or stochastic modeling meth-
ods, used to describe the relationship between future control inputs over the output behavior
of the system. This is usually done in state space matrix form, so that, for a deterministic
linear dynamic process model in state space form, it is given by:
uk+1 = Axk + Buk
yk = Dxk + Euk
(5.83)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

248
5 Continuous Digital Controller Design
Predictive
Control law
Constraints
Cost function
Process
Parameters
identification of 
predictive model
Predictor
Output, y
Control, u
Reference, r
Error, r-y*
Total error, y*
Actuator
Figure 5.33 Generic MPC control topology.
A PM could be set in the standard form:
yk+1∕L = FLuk∕L + pL
(5.84)
with L being the prediction horizon, FL ∈ℝLm the constant parameters matrix derived from
the process model, and pL ∈ℝLm the vector dependent of a number of inputs and outputs
older than the time k, as well as model parameters such that:
FL = [𝜃LBHd
L]
pL = OLAxk
(5.85)
The block diagram depicted in Figure 5.33 summarizes some key components of the MPC
control process, such as the model parameters estimation using the least-square technique,
the predictor, and the MPC algorithm.
Example 5.14
Blood Glucose Control of Diabetes Type 1 Patient
Regulation of blood glucose in Type 1 diabetics using an MPC based on parametric
insulin-glucose metabolism dynamics modeling is given by the following diﬀerential equations:
dI(t)
dt
= −𝛾1I(t) + 𝛽max[G(t) −𝜃I, 0] + DI(t)
dN(t)
dt
= −𝛾NN(t) + 𝛼max[𝜃N −G(t), 0]
dX(t)
dt
= −p2X(t) + p3I(t)
dGI(t)
dt
= −p1G1(t) + X(t)G(t)
dGN(t)
dt
= −p4GN(t) + p5N(t)
G(t) = Gb(t) + GI(t) + GN(t) + DG(t)
where I(t) is the plasma insulin, N(t) the plasma glucagon, and X(t) the insulin action. Based
on Sorensen’s model, Gb(t) is the deviation of blood glucose from the basal value, GI(t) is the
deviation of the blood glucose from the glucagon action, G is the concentration of blood glu-
cose, DI is the intravenous insulin input, and DG(t) is the glucose disturbance (e.g. stress, diet,
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.3 Modern Control Topologies
249
physical constraints, etc.). The glucose disturbance, DG, is deﬁned as the eﬀect of three daily
meals (breakfast, lunch, and dinner), represented by three gamma-like functions of the form
(t3 • e−0.4t), for a 24-hour period, with values of (40, 50, 60 mg dl−1) for about 80 minutes ran-
domly but uniformly distributed within speciﬁed periods. In addition, considering that the daily
activity of glucose can be approximated as a sinusoidal signal with a period of 8 hours, an ampli-
tude of 10 mg∕dl, and uniformly distributed phase with [0, 𝜋], then, besides the description of
the insulin-glucose metabolism, in order to apply MPC, it is required to predict accurately the
future values of blood glucose concentration. At every discrete-time instant, the prediction of
the future values of the glucose disturbance using the AR (auto regressive) PM can be given by:
DG(n) = D𝛼+ 𝜔(n)
D = [DG(n −1)DG(n −2) … DG(n −K)]
𝛼= [𝛼1𝛼2 … 𝛼k]
where 𝛼is the vector of coeﬃcients of the AR model, 𝜔(n) is an unknown independent process
sequence, and K is the order of the AR model. At a discrete-time instant n, the prediction task
consists of the estimation of the coeﬃcient vector 𝛼. This should allow us to estimate the future
values of glucose concentration. Using the least-square estimation method, the coeﬃcients can
be derived from:
𝛼= [ATA]−1ATb
where A is a matrix representing all D vectors and b is the vectors of disturbance. Hence, from
a model capturing insulin-glucose metabolism dynamics for all the past insulin inputs and the
estimation of the future values of glucose disturbance, the MPC at every time instant n enables
us to determine the control input value U(t) by minimizing the following cost function:
J(n) = [G(n + p∕n) −RT] ⋅𝚪DG(n −𝟐) … DG(n −K) ]
where G(n + p∕n) is the vector of predicted glucose values over a future horizon of p, R
is the target output value (set equal to Gb), and Γy is a diagonal matrix of the weighting
coeﬃcients with respect to the near-future predictions. These measures are here to prevent
hypoglycemia.
5.3.3
Open-Loop Position Control Using Stepping Motors
In cases where the process behavior is known in advance and free of disturbance, the open-loop
control algorithm can be used. The stepping motor uses the open-loop control algorithm
because the number of steps per revolution is known. The open-loop control of a stepping
motor consists of generating a pulse sequence train that will excite the stator phases. This
causes the motor to step after each pulse, so the pulse train command input frequency deﬁnes
the motor velocity as well as the motor torque. Another utilization of the pulse is to deﬁne
the direction of the motion (clockwise or counterclockwise). Hence, the command generates
two input conditions (direction and enable step) that allow rotation of stator phases. The
generation of the pulse trains to be fed into the stepping motor controller is based on the accel-
eration, deceleration, and frequency limits of the stepping motor. Several methods are used to
generate pulse trains, including (i) pulse rate multiplication; and (ii) digital diﬀerential analysis
(DDA). Figure 5.34 depicts the components of the open-loop control of stepping motor,
showing: (i) the command generator; (ii) the command translator; and (iii) the stepping motor.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

250
5 Continuous Digital Controller Design
1
1
2
3
2
3
Rotor
Stator phase 1
Stator phase 2
Stator phase 3
Step
Direction
Position register
Velocity register
Acceleration register
Command
translator
+
+
Fraction of a step (bit)
Fraction of a step/add (bit)
Fraction of step/add2 (bit)
Phases
3 stator phases (individually energized) 
and 8 rotor teeth stepping motor
Command generator
θ
Figure 5.34 Generic structure of a stepping motor structure.
The command generator has three registers (position, velocity, and acceleration), generating a
clock-synchronized pulse train.
After the fraction of the position register accumulates to 1, a pulse command signal is gener-
ated and a step pulse is sent to the motor command translator. Once the pulse train is generated,
the pulse signal activates or deactivates the stator phase, which in turn forces the rotor teeth
to be aligned with the stator position. The translator converts this pulse train into a voltage
signal for each stator phase of the stepping motor, which is either energized or de-energized
depending on the fed signal level. The motor step size is given by:
stepsize =
spacing of rotor teeth
number of stator phases
(5.86)
The rotor teeth align when the activated phase is completed. Indeed, when the fraction of
position register accumulates to 1, the command generator sends a step pulse to the motor
command translator.
Example 5.15
It is desired to achieve a constant velocity of 750 rpm with a stepping motor
resolution of 200 steps per rev and a computer clock 10 000 Hz (adds s−1). As such, the velocity
is given by:
d𝜃(t)
dt
=
750rev
min
min
60 s 200 steps
rev
= 2500 step
s
which is equivalent to:
V =
2500 steps
s
s
10 000 adds 1 step
4 adds
Therefore, with a 12-bit register, the velocity register has a command input signal given as
0.01000000002 = 1∕4. All register values are captured in Figure 5.35.
Based on this constant velocity value, the position register is set to 0.01000000000 after the
ﬁrst addition of the value from the velocity register, but there is no step signal, 𝜃(T), to be sent
to the translator. A second addition of the velocity register value V in the position register P is
given by:
0.01000000000 + 0.01000000000 = 0.10000000000
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.3 Modern Control Topologies
251
Position register
Velocity register
Acceleration register
+
+
10 000 Hz (adds s–1)
0.00000000000 (step)
Fraction of step/add2 (bit)
Command generator
0.01000000000 (step/adds)
(1/4)10
θ(T)
Initial signal to
translator (no step) 
Figure 5.35 Initial P and V register values.
Position register
Velocity register
Acceleration register
+
+
10 000 Hz (adds s–1)
1.00000000000 (step)
Fraction of step/add2 (bit)
Command generator
0.01000000000 (step/adds)
(1/4)10
θ(T)
Signal to 
translator
Direction
Step
Sign bit (overflow) 
0
Figure 5.36 P and V register values after four additions.
but there is no step signal, 𝜃(T), to be sent. A third operation of addition of the velocity register
value results in the position register given by:
0.10000000000 + 0.01000000000 = 0.11000000000
but there is no step signal, 𝜃(T), to be sent. A fourth operation of addition of the velocity register
value, results in the position register given by:
0.11000000000 + 0.01000000000 = 1.00000000000
There is a step signal, 𝜃(T) given by a sign bit or the ﬁrst bit to be sent to the command
translator, and the position register is reset as illustrated in Figure 5.36.
Typical applications of open-loop stepping motors include 2D and 3D printer motion control,
as well as the command generation of multiple-axis robot joint angles by derivation of individual
robot joint sequence angles such as those shown in Table 5.6.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

252
5 Continuous Digital Controller Design
Table 5.6 Typical recorded motion data of a multi-axis robot.
n
P1
P2
V1
V2
A1
A2
0
1
2
3
5.4
Induction Motor Controller Design
For all electrical motors, a key challenge has been to change the motor speed without changing
the torque. This can be done (i) by changing the motor design (i.e. by changing the number of
pair poles); (ii) by varying the magnitude of the supplied voltage; or (iii) by varying the frequency
of the voltage supplied. Induction control strategies have either (i) used the scalar control volts
per hertz fed into the inverter driver or (ii) used vector control ﬂux or current oriented with the
voltage fed into the inverter drive. Vector control implementation requires the identiﬁcation of
the ﬁeld ﬂux of the motor, while scalar control requires maintaining a constant magnitude and
phasing relationship between the voltage and the frequency.
5.4.1
Scalar Control (V/f Control)
The scalar V∕f controller design technique consists of feeding the induction motor windings
with a three-phase sinusoidal voltage whose amplitudes are proportional to the frequency. The
term scalar denotes that the magnitudes of the input variables (frequency and voltage) are
controlled. Indeed, with scalar control, by varying the voltage and frequency parameters simul-
taneously, the alignment of both their magnitude and phase signal components is ensured, such
that:
VRMS
𝜔e
=
VRMS
4.44Nf 𝜀= 𝜓s
(5.87)
with VRMS being the induced voltage in the motor, f the frequency of supplied voltage, N the
number of turns, 𝜓s the magnetic ﬂux linkage in the stator, and 𝜀the constant of the motor coil.
This is usually done without any feedback devices (i.e. an open-loop induction motor speed
control with low dynamics requirements). This scalar V∕f control method is used to provide
speed variation but does not handle transient conditions. Hence, this control strategy is valid
only during the steady state. Based on the constant volts per hertz principle, scalar control
is applied over a sinusoidal steady-state model of the induction motor (i.e. the magnitude of
the stator voltage). For a constant ratio, the stator ﬂux remains constant and the motor torque
depends only on the slip frequency. The motor speed equation of the induction motor is given
by:
Tair gap =
3
2𝜔n
Ir
Rr
s
(5.88)
with Tair_gap being the motor torque in the air gap, 𝜔n being the mechanical angular speed, Ir
being the rotor current, Rr being the resistance rotor, and s being the slip. This method is suitable
for applications without position control requirements or high accuracy of speed control. There
are two types of scalar control schemes.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.4 Induction Motor Controller Design
253
ωdesired
p
20
3 phase 
VSI
Induction
motor
fdesired
Vdesired
VDC
Va
Vb
Vc
Figure 5.37 Generic open-loop scalar control of an induction motor.
5.4.1.1
Open-Loop Scalar Control
Open-loop scalar control is only suitable for applications requiring speed control. The
corresponding desired torque can be found at the minimum of the steady-state operating
condition. A typical induction motor open-loop scalar control block diagram is illustrated in
Figure 5.37.
5.4.1.2
Closed-Loop Scalar Control (Slip Control)
Here, the speed and the motor torque are concurrently controlled using a PID controller.
The uncontrolled magnetic ﬂux is a disadvantage of this scalar controller, due to its inability
to capture or modify the transient induction motor behavior. A schematic is illustrated in
Figure 5.38.
5.4.2
Vector Control
The diﬃculty in controlling the speed of an induction motor is due to the lack of a linear rela-
tionship between the motor current and the resulting torque. Vector control aims to decouple
the complex stator current into two components (ids, iqs): one for motor ﬂux level or direct cur-
rent ids(t), the other for motor torque or quadrature current iqs(t) in the motor stator. This eases
the decoupled control of the ﬂux and electromagnetic torque. It is achieved by transforming a
sinusoidal quantity into a constant value quantity at the same frequency, giving a new reference
frame. In other words, it translates the coordinates from the ﬁxed-reference stator frame to the
synchronous rotating frame.
ωdesired
p
20
3 phase 
VSI
Induction
motor
fdesired
Vdesired
VDC
Va
Vb
Vc
Slip limiter
+
+
+
+
ωdesired
ωs
Tachgenerator
Figure 5.38 Generic closed-loop scalar control of an induction motor.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

254
5 Continuous Digital Controller Design
Typical vector control schemes on an asynchronous motor, which are based on decoupling
strategies, include: (i) stator ﬂux ﬁeld orientation; (ii) rotor ﬂux ﬁeld orientation; (iii) air-gap
ﬂux ﬁeld orientation; (iv) stator current orientation; and (v) rotor current orientation. This
decoupling allows the induction motor to be controlled as a simple DC motor. There are three
commonly encountered vector control architectures: (i) ﬁeld-oriented vector control; (ii) direct
torque control; and (iii) direct self-control. Vector control provides performance enhancement
in terms of starting, braking, speed reversal, and speed variation. Furthermore, digital control
of an induction motor allows the estimation of electrical machine parameters in a sensorless
control scheme through rotor speed measurement, slip frequency estimation, ﬂux estimation,
and ﬂux vector control.
5.4.2.1
Direct Torque Control
Vector control provides performance enhancement in terms of starting, braking, speed reversal,
and speed variation. Furthermore, digital control of the induction motor requires the estimation
of electric machine parameters in a sensorless control scheme through rotor speed measure-
ment, slip frequency estimation, ﬂux estimation, or ﬂux vector control.
In the case of the direct torque control, the design procedure consists of: (i) the modeling of
current and a voltage space vector electrical machine; (ii) the transformation of three-phase
speed and a time-dependent system into a two-coordinate time-invariant system; and (iii) an
eﬀective PWM pattern, through generation of pulse signals to be supplied to the electrical
machine with desired phase voltage. Figure 5.39 depicts a block diagram of direct vector control
of the induction motor.
The vector control equation is given by:
Te = 3
2𝜓rir sin 𝜑= −3
2𝜔r × ir
(5.89)
with Te being the electromagnetic torque of the motor, 𝜓r the magnetic ﬂux in the rotor, and
ir the current in the motor. Using the gamma model of the induction motor, the uncoupled
Inverse Park
transformation
Forward Clarke
transformation
Park
transformation
Clarke
transformation
Induction
motor
Tachgenerator
Tdesired
Ψdesired
(α,β)
(d,q)
isd*
isq*
isβ*
isα*
2
3
VDC
3 phase
PWM
ia*
ib*
ic*
Vc Vb
Va
3
2
(α,β)
(d,q)
vα
vβ
vq
vd
Induction
motor
model
ψr
Te
Slip 
limiter
speed
controller
flux
controller
+
–
–
+
+
–
Slip 
limiter
ωdesired
Figure 5.39 Basic structure of indirect oriented vector direct control without ﬂux calculation.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.4 Induction Motor Controller Design
255
Figure 5.40 Gamma model of an induction motor.
Ψ′r
Ψ
Ls
Lm′
ir′
i
equation is:
⎧
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪⎩
disd(t)
dt
= 1
Las
(
vsq −isqRs −d𝜓desired
dt
)
+ 𝜓kisd
disd(t)
dt
= 1
Las
(vsq −isqRs −𝜔k𝜓desired) −𝜓kisd
𝜓desired + 𝜏d𝜓desired
dt
= Lmisd
𝜔k −𝜔s = 𝜓s =
Rsisq
𝜓desired
(5.90)
Thus, the decoupled torque yields:
T = 3
2p𝜓rdisd
(5.91)
and, decoupled, the speed is given by:
d𝜔r(t)
dt
= 3
2
p
J 𝜓rsisq −ml
J −B𝜔(t)
J
(5.92)
with isd, isq being the (d,q) component of the stator current; Las the inductance of the stator
without mutual inductance; vsd, vsq the (d,q) component of the stator voltage; 𝜔k, 𝜔r the syn-
chronous and rotor angular velocity; 𝜓rs the component of the rotor magnetic ﬂux linkage; R
and Rs the resistance of the stator and rotor; p the pole pair of the motor; B the friction constant;
Tr the shaft load; and 𝜏the rotor time constant. Figure 5.40 illustrates the gamma model type
of induction motor.
Tests to derive motor parameters include the (i) direct current test; (ii) no load test; and (iii)
locked rotor test. Thus, a vector control algorithm is as follows:
1) Measure the motor quantities, phase voltages, and stator phase currents ia, ib, ic. Then, if
only the values of ia and ib are measured, use ia + ib + ic = 0.
2) Transform the set of these three-phase currents into a two-axis (α,β) system. From this
conversion, the variables i𝛼and i𝛽result from the measured ia, ib, ic values, where i𝛼and i𝛽
are time-varying quadrature current values. This is known as the Clarke transformation.
3) Calculate the rotor ﬂux space vector magnitude and position angle (its orientation).
4) Rotate the two-axis coordinate system so that it is in alignment with the rotor ﬂux.
5) Use the transformation angle calculated at the last iteration of the control loop.
6) Transform the stator currents to the d-q coordinate system using a Park transformation.
This conversion provides the id and iq variables from i𝛼and i𝛽.
7a) Generate the ﬂux error signal using the reference ﬂux and the estimated ﬂux value. Then,
the stator current torque (isq)- and ﬂux (isd)-producing components can be separately con-
trolled.
7b) Compute the output stator voltage space vector using a decoupling block.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

256
5 Continuous Digital Controller Design
8) Use a PI controller to calculate i∗
d and then i∗
q using this error signal.
9a) Convert i∗
d and i∗
q to a set of three-phase currents to produce i∗
a, i∗
b, i∗
c. Here, the stator
voltage space vector is transformed by an inverse Park transformation back from the d-q
coordinate system to the two-phase system ﬁxed with the stator.
9b) Using the space vector modulation, generate the output three-phase voltage.
10) Compare i∗
a, i∗
b, i∗
c and ia, ib, ic using a hysteresis comparator to generate inverter gate
signals.
Park transformation is a translation of the a, b, and c phase variables into d-q components of
the rotor ﬂux rotating ﬁeld reference frame.
Inverse Park transformation is the conversion of the d-q component of the rotor ﬂux rotating
ﬁeld reference frame into a, b, and c phase variables.
iqs calculation consists of computing the rotor ﬂux and torque reference to derive the stator
current quadrature component and is required to produce the electromagnetic torque on the
motor’s shaft.
Flux PI is the estimated rotor ﬂux; the reference rotor ﬂux is the input to a proportional
integrator. This ﬂux is applied to the motor and is used to compute the stator current or direct
component required to produce the required rotor ﬂux in the machine.
A current regulator is a current controller with adjustable hysteresis bandwidth. A modu-
lation technique is used in the current regulator. Hysteresis modulation is a feedback control
method where the motor current tracks the reference current within a hysteresis band. The
operation principle of hysteresis modulation involves the controller that generates a sinusoidal
reference current of desired magnitude frequency, which is compared to the actual motor line
current.
5.4.2.2
Speed Control of AC Motors
The speed of AC motors depends on three variables: (i) the ﬁxed number of stator winding sets
(known as poles), deﬁning the base speed; (ii) the frequency of the AC voltage or current supply;
and (iii) the load torque, deﬁning the slip. Induction motor speed can be varied through:
1) a variable-frequency drive, enabling the conversion of a ﬁxed-frequency AC source into a
variable-frequency AC signal. This is implemented using an AC-to-DC converter such as a
variable voltage inverter, PWM inverter, current controlled inverter, or even cycloconverter;
2) a variation of the rotor circuit resistance by inserting an AC chopper with a high frequency
and a variable ON/OFF time;
3) variation of the stator voltage by using AC regulators;
4) injection of slip frequency EMFs into the rotor circuit;
5) a modiﬁcation of the AC motor design by changing the number of stator coil poles.
Based on the converter type and the AC motor type, AC motor drives can be classiﬁed into
four categories: (i) thyristor-based voltage drives, capable of bi-state force switching from gate
signal conditions and suitable for controlling an induction motor; (ii) transistor-based volts
per hertz (V/f) and vector PWM/cycloconverters, used to control an induction motor; (iii)
transistor-based drives with natural commutating states (ON/OFF) capability, such as bridge
commutated drives, suitable for controlling a synchronous motor; and (iv) PWM voltage vector
drives, used to control a permanent magnet AC motor. In the frequency-control strategy using
a PWM, the supply DC voltage and current are smoothed and fed into a PWM inverter to
produce a controlled variable magnitude and frequency AC voltage signal. The cycloconverter
(AC/AC) requires a large number of thyristors and is appropriate for induction motors and
synchronous motors.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

5.4 Induction Motor Controller Design
257
Table 5.7 Some motor drives and their corresponding electric motors.
Motor drive types
Drives
Motor types
Thyristor-based
Six-pulse bridge current
Synchronous motor
Cycloconverter
Induction motor
Synchronous motor
Thyristor voltage controller
Induction motor
Transistor-based
Matrix converter
Induction motor
Current PWM
Induction motor
Voltage PWM
Induction motor
Permanent magnet motor
In summary, AC motor-control methods consist of either (i) scalar control through the reg-
ulation of the command input voltage magnitude or (ii) vector control through the regulation
of both command input magnitude and phase. The AC motor speed is controlled using the
inverter, which can alter the AC power frequency based on the PWM. Typical industrial appli-
cations of AC motors include ball mills, rotary cement kilns, large crushers, mine winders, and
mine hoists. Table 5.7 summarizes some motor drives used in electric motor control.
5.4.2.3
Speed Control of DC Motors
Industrial process requirements for wide-range speed variation of electrical motors can be ful-
ﬁlled with DC motors using variable-speed drives. Speed drives have the ability to match speed
and torque with process requirements independent of the load. For DC motors with negligible
armature inductance and without load, the induced voltage Eb(t) is given by:
Eb(t) = −RaIa(t) + Va(t) = K𝜙𝜔(t)
(5.93)
This can be rewritten at steady-state or rated speed as:
𝜔(t) = −Raia(t) −Va(t)
K𝜙
(5.94)
Based on Equation (5.94), at the steady state, the speed 𝜔(t) can be controlled by using any
of the following methods: (i) armature voltage control (by varying Va(t)); (ii) ﬁeld control (by
varying 𝜙); or (iii) armature resistance control (by varying Ra). Hence, solid state circuits are
used to modify DC motor torque-speed characteristics by adjusting either the armature voltage
Va(t) (by using thyristor-based circuits in an AC-to-DC converter for an AC voltage supply
or chopper circuits for a DC voltage supply), the ﬁeld current if (t) (by using thyristor-based
circuits to supply additional ﬁeld winding), or both.
ArmatureVoltageControl,Va(t) This method of speed control is suitable for separately excited DC
motors. Here, Ra and 𝜙are kept constant and DC drives aim to keep the constant-rated motor
torque at any speed as long as it is lower than the rated motor speed. In normal operation, the
voltage drop across the armature resistance is small compared to Eb(t), such that:
Eb(t) = Va(t) ≈K𝜙𝜔(t)
(5.95)
For constant ﬂux, 𝜙, the speed, 𝜔(t), changes linearly with Va(t), as shown in Figure 5.41.
Such variable-speed drives can be built either by (i) using thyristors through the variation of
the ﬁring phase angle from bridge conﬁguration (e.g. a full-wave 12-pulse bridge, a full-wave
six-pulse bridge, or a half-wave three-pulse bridge) relative to the AC supply voltage, as illus-
trated in Figure 5.42, or (ii) using the variation of the ON and OFF time ratio (duty cycle) of the
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

258
5 Continuous Digital Controller Design
ω(t)
Tm(t)
Va(t)
Ø(t)
Ra
Figure 5.41 Torque-speed curves for varying Ra(t), 𝜙, Va(t).
L1 L2
L3
DC motor
M
x
x
x
3-phase AC
AC-to-DC converter
( H-bridge configuration 
thyristor rectifier)
Va
Velocity sensor
and phase controller
Figure 5.42 Typical thyristor-controlled DC drive.
DC voltage supply from chopper circuits or switch-mode converters (such as Jones, Morgan,
oscillation, etc.). Those choppers transform a constant magnitude of input DC signal into a vari-
able magnitude of DC signal by inverting it using a DC-to-AC converter, then passing it through
an AC transformer, and ﬁnally rectifying it through an AC-to-DC converter circuitry. Among
other design alternatives, there are: (i) rectiﬁers (a combination of bi-stable devices like diodes
and thyristors for phase control) to convert a single or three-phase AC signal (either voltage,
current, or frequency) into a constant and smooth DC voltage signal and pass it through a chop-
per circuit to obtain an adjustable mean DC voltage; and (ii) Ward Leonard drives (separately
excited DC generators), where three-phase AC voltage is supplied to a ﬁxed-speed induction
motor. These devices are suitable for shunt-wound DC motors.
Field Control (𝝓) In this method of speed control, Ra and Va(t) remain constant. Here, the vari-
ation of the motor ﬂux can be derived by setting a variable resistance RS in series with the ﬁeld
winding for shunt-wound and compound-wound DC motors. This is suitable for a series DC
motor. Hence, recalling that Ra is proportional to 1∕𝜙and assuming that magnetic linearity 𝜙
is proportional to the ﬁeld current if (t), which is inversely proportional to 𝜔(t), Equation (5.93)
leads to:
𝜔(t)𝛼Va(t) −ia(t)Ra
if (t)
(5.96)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
259
Figure 5.43 Variation of speed with an external
armature resistance.
Torque
Rated speed
Armature 
voltage
control
Field 
flux
control
Line of maximum 
torque limitation
if, Te
Base 
speed
This ﬁeld current could be varied using an adjustable rheostat in the ﬁeld circuit. The resulting
torque-speed characteristics are illustrated in Figure 5.43. With ﬁeld control, the applied arma-
ture voltage Va(t) is maintained constant, as shown in Figure 5.43. The reduction of the ﬂux
increases the speed beyond approximately three or four times the rated speed and decreases
the torque proportionally.
Armature Resistance Control (Ra) As the actual resistance of the armature winding is ﬁxed for a
given motor, the voltage across the armature can be varied by inserting a variable resistance, Rs,
in series with the armature circuit. From torque-speed characteristics, it is known that:
Tm(t) 𝛼K𝜙
Ra
(Va(t) −K𝜙𝜔(t))
(5.97)
The variation of speed with respect to change in this external resistance is illustrated in
Figure 5.41. This control method achieves smooth control of speed while maintaining if (t)
constant.
All three methods described here can be used to control the speed of DC shunt motors.
Except for the commonly used armature resistance control method, they could also be applied
for a DC series motor.
Exercises and Problems
5.1
.a) For PD controller design using a root locus design technique, between stationary and
transient design requirements, in which is it critical to determine the placement of
the zero?
b) Answer true or false to the following statements:
i) phase-lag compensation increases the error constant;
ii) steady-state errors are improved by increasing the gain from the Bode diagram;
iii) decreases in the phase and gain margins make the system more stable;
iv) overshoot is reduced by decreasing the phase margin;
v) rise time is reduced by increasing the closed-loop system’s bandwidth.
c) Draw system block diagrams to illustrate each of the following feedforward con-
trollers:
i) feedforward control of disturbance;
ii) open-loop feedforward;
iii) modiﬁed command input.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

260
5 Continuous Digital Controller Design
Table 5.8 PID compensation eﬀects on system response characteristics.
Response
Rise time
Overshoot
Settling time
Steady-state error
Stability
Decrease
Not deﬁned
Decrease
Increase
Increase
Degrade
Not deﬁned
Decrease
Not deﬁned
Improve
d) Complete Table 5.8.
e) Describe the subsequent system behavior for various sampling frequencies (shorter
and longer) in terms of: (i) the speed of response; (ii) stability; and (iii) disturbance
rejection.
5.2
Recall the third-order diﬀerential equation model of DC motor shaft position 𝜃(t), with
inputs being the developed motor torque T(t) and the table attached to the motor shaft
as the motor torque disturbance TL(t), which are related to the corresponding motor
velocity by:
J d𝜔(t)
dt
= T(t) + TL(t)
a) Using a zero-order hold and assuming that the position command input is zero, derive
the discrete response from the motor shaft position 𝜃(t) to a unit step torque distur-
bance TL(t) input.
b) Derive the equivalent-discrete closed-loop transfer function for a system with a pro-
portional position controller, KP.
c) Plot the discrete motor shaft position response to a unit step in a load torque for
proportional gains that have the following values: 0.2;1.2;3.5. Comment on the results
obtained.
5.3
Consider a robot gripper that picks up a box brought by a conveyor and places it in a
labeling machine as shown in Figure 5.44. It takes 0.02 s for data logging and processing
of the output signal from the vision sensor in order to determine the relative position of
the robot gripper. With a sample period 0.05 s, the arm-positioning drives can be approx-
imated as integrations with gains Kx, Ky.
Derive the discrete-time closed-loop transfer functions for robot positioning along the
x and y axes. Then, assuming the proportional controller gains are known, determine
the steady-state error along the x and y axes when the proportional controller gains are
Px, Py, respectively, for the box moving on the conveyor at a constant velocity v(t) in
the negative x direction. (Hint: the trajectory motion proﬁle is well deﬁned such as that
during the synchronized conveyor-robot arm pick up and drop at a height of 0.4 m and
spacing between two successive boxes of 0.3 m within 6 sec.)
5.4
For a step input of 10 V, a motor provides a pure integration like velocity response and
reaches the steady-state speed of 525 revolutions per minutes after 12 sec, with a motor
shaft with a radius 0.15 m.
a) Derive the discrete model of the motor position as a function of voltage command
input.
b) Design a proportional controller gain for the motor position loop that would achieve
a closed-loop bandwidth of 25 Hz with a sample frequency of 100 Hz.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
261
From storage
Unlabeled box
Gripper
Robot arm
Vision
sensor
Robot
x(t)
y(t)
Conveyor
Conveyor
V(t)
Labeled box
Feedback of position difference
between gripper and box 
in x and y directions
Labeling 
machine
Figure 5.44 Robot for labeling a box in a supply-chain system.
c) Plot the response of the closed-loop system to a 10 V step input. What is the
approximate damping ratio? Is this response likely to be acceptable?
d) Tune the proportional controller gain using the model found in part (a) to obtain a
closed-loop system damping ratio of 0.7. What is the natural frequency? Compare
this with the bandwidth in part (b) and the results obtained.
5.5
As depicted in Figure 5.45, consider a block diagram of an elevator motion system.
When the current command input r(z) is applied to a process as shown in Figure 5.46(a)
and (b), the process response is described by the following discrete-time transfer
v(z)
e(z)
r(z)
+
–
i(z)
d(z)
+
Ki
Kt
T(z)
Disturbances from
motor
Torque 
constant
Current
command
Position
sensor
Elevator motion process
Motor resistance
and inductance
Current
controller
h(z)
Cabine
and 
passenger
Cabine 
position 
(height)
+
Figure 5.45 Elevator motion block diagram.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

262
5 Continuous Digital Controller Design
v(z)
(a)
(b)
e(z)
r(z)
+
–
Controller
h(z)
Process
∗
∗
∗
∗
∗
0
7.6
2
4
6
12
18
Time (sec)
r(n)
(m)
Figure 5.46 (a) Process block diagram. (b)
Command input.
function:
h(z)
v(z) =
4(1 −𝛼)(1 −0.5z−1)z−1
(1 −𝛼z−1)(1−z−1) + 2(1 −𝛼)z−1(1 −0.5z−1)
when the sample period is 2 s and the discrete transfer function of the controller is:
v(z)
e(z) = 1 −0.5z−1
1 −z−1
a) In order to achieve smooth and precise motion, what type of controller should be
selected?
b) Using the discrete controller given above, derive the closed-loop transfer function
c(z) = r(z).
c) Plot the unit step response for stablilizing 𝛼= 0.5.
d) Analyze the transition and steady-state system dynamic characteristics by estimating
from the system response the damping ratio, response time constant, and steady-state
response. How could the selected controller improve these characteristics?
5.6
Consider the automatic vehicle speed control system captured in the block diagram in
Figure 5.47. It is desired to achieve an overall system with dynamics characteristics of
time constant 𝜏= 5 s and damping ratio 𝜁< 0.6 and no steady-state error. Thus, using
the design procedure outlined previously, derive the appropriate PD control algorithm.
5.7
A sketch of the Venetia city ﬂoodgate controlling the tidal river surge is shown in
Figure 5.48. The barrier must be rotated up to 55∘in the clockwise direction in order to
move it from its normal open position on the river bottom to its closed position. This
prevents an abnormally high tide from reaching the city upstream. The barrier is driven
by an electric motor, and the barrier position 𝜃(t) in degrees is digitally controlled.
The controller regulates the values of the applied voltages v(t) to be sent to the barrier
drive system. The angular speed of the barrier has a ﬁrst order diﬀerental equation
relationship v(t), and the barrier motion can be modeled as:
d𝜃(t)
dt
+ 2.1 𝜃(t) = 3.5v(t)
in degrees per minute. With a sampling period of 2 min:
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
263
m(kT)
e(kT)
V*(kT)
0–5 Volt
ZOH
+
–
1.2
y(s)
(cm)
Tm(s)
V(s) (km h–1)
110
Computing
unit
Control
algorithm
Actuator
Position
15.5
3s + 1
0.5s+1
2s2+ 1
TL(s)
Motion
process
Combustion
engine
Velocity
sensor gain
Load torque
Velocity
T = 10 ms
Figure 5.47 Automatic vehicle speed control system.
v(t)
v(t)
Normal condition
Storm flow
Adriatic Sea
Adriatic
Sea
Sea bed
Sea bed
(a)
(b)
Venice’s lagoon
Motor
Motor
Sea level
sensor
Sea level
sensor
θ(t)
Figure 5.48 Flood tide control gate for (a) a barrier-open position and (b) a barrier-closed position.
a) Develop the mathematical model of a discrete time command input signal for a bar-
rier angular position going from 25∘to 45∘in 14 min.
b) If a proportional controller is to be used to control the system, determine the maxi-
mum controller gain Kp that results in a closed-loop step response with no oscillation.
c) Using the input signals just derived plot the controlled system responses 𝜃(n) and
calculate the tracking characteristics, especially regarding the steady-state error.
d) In order to analyze the control eﬀort required for the command input, plot the
system-manipulated output voltages m(n)∕v(n).
5.8
With T = 0.01 s; consider a process model given by:
Gm(s) = K(z −0.3)(−0.01 −0.001z) + 0.001(z −1)2
(z −1)(z −0.3)
a) Sketch its equivalent root locus and ﬁnd K such that overshoot is less than 25% for a
unit step.
b) Determine the steady-state error for a unit step command input.
c) Determine K to minimize the integral square error.
5.9
Design a discrete controller using the roots-locus technique of a double-integration
model of a DC motor given by:
G(s) = 3.2
s2
It is desired to achieve a DC motor operating performance characterization given by
𝜔n = 0.5 rad s−1 and 𝜁= 0.7.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

264
5 Continuous Digital Controller Design
a) Sketch the root locus.
b) Derive the continuous controller and the equivalent discrete controller.
c) Write the control algorithm and the system response to the step command input.
5.10
Consider the motor-driven positioning system depicted in block diagram in Figure 5.49,
where the motor/ampliﬁer transfer function is approximated to be:
Gm(s) = Ka
a) Plot the discrete frequency response of the position of the system with a sampling
period of 200 Hz, a controller proportional gain Kc = 11.5, a position encoder gain
Kf = 110, and lead screw ratio of Ks = 2.145.
b) Repeat the plot in part (a), using manually frequency response sketching method
describes in Section 4.4. and compare results.
c) Design the controller to have a dominant closed system time constant of 0.4 sec.
(By varying the gain).
5.11
Consider the vertical motion of a robot carrying a workpiece as depicted in Figure 5.50(a).
Robot arms are connected by one-degree-of-freedom joints. Those joints are actually
permanent-magnet-type DC motor-driven. Each motor model is given by:
Gp(s) = 𝜃(s)
V(s) =
K
(𝜏s + 1)
a) Assuming the weight of the robot arm is negligible and the load weight is m = 0.3 Kg,
derive the dynamics model of the robot arm for each joint. With L1 = 0.8 m;
L2 = 0.4 m;
H1 = 0.35 m;
J1,2 = 0.002 N.m.s2.rad−1;
B1,2 = 0.009 N.m.s.rad−1;
K1,2 = 0.012 N.m.rad−1;
Ra 1,2 = 2.4 Ω;
La 1,2 = 1.23 mH;
Km 1,2 = 102 N.m.A−1;
Km 1,2 = 102 N.m.A−1; Other parameters are negligible.
b) Considering a sampling time of 5 s, derive the corresponding digital system model.
c) Using Figure 5.50(b) and (c), derive equivalent discrete position command input sig-
nals 𝜃1(n), 𝜃2(n).
d) Plot the system response to 𝜃1(n), 𝜃2(n) using position proportional gain values of 1.2
and 3.5. Comment on the stationary and transient characteristics of the response.
e) Regarding any robot arm-positioning error, discuss how the command feedforward
controller can be adjusted to compensate for steady-state error.
kc
zoh
Gm(s)
1
s
ks
P(s)
kf
Position
encoder
Position 
integration
Motor/
amplifier
D/A 
converter
Proportional
controller
R(z)
C(z)
Lead
screw
E(z)
Figure 5.49 Position system block diagram.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
265
H1
Load
[kg]
Robot
Arm
Arm  joint 1
position
θ1(t) [deg]
Arm  joint 2
position
θ2(t) [deg]
L1
L2
h(t)
W
y(t)
[cm]
0
10
50
x [cm]
10
20
30
40
50
4
3
2
1
20
30
40
15
30
40
x(t)
[cm]
0
5
t [s]
10
20
30
40
50
1
2
3
4
y(t)
[cm]
0
5
15
t [s]
30
40
(b)
(a)
(c)
10
20
30
40
50
4
3
2
1
Figure 5.50 (a) Robot arm. (b) Robot arm joint trajectory. (c) Combined robot arm joint trajectory.
5.12
Consider the DC motor block diagram illustrated in Figure 5.51, with:
Gc(s) = Kpi
(1 −𝛿cz−1)
(1 −z−1)
and sampling 10 times faster than the system time constant.
M(z)
E(z)
Θ(z)
m(t)
ZOH
+
–
K = 2
V(t)
θ(t)
Computing
unit
Control
algorithm
Power
amplifier
d(t)
Motor
1
τs + 1
A/D
Figure 5.51 Discrete DC motor block diagram.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

266
5 Continuous Digital Controller Design
a) Design a controller (specify Kpi, 𝛿c) for which the dominant closed-loop pole is at 0.1
(slightly slower than the deadbeat dynamics).
b) For a unit step disturbance input occurring at t = 0 where the system is at rest 𝜃*(0) =
𝜃(0), compute and plot the error e(k), the manipulated m(k), and the disturbance sys-
tem response 𝜃(k) at the ﬁrst four samples after the step input disturbance.
5.13
Consider a process given by:
Gp(s) =
1805
s(0.25s + 1)
a) Sketch the uncompensated system Bode plot of Gp(s). What is the current phase mar-
gin?
b) Using a frequency response design technique, ﬁnd a discrete-time controller D(z)
allowing a phase margin 𝛾(PMdesired) of 45∘at gain crossover frequency 𝜔g of
125 rad s−1 (for T = 1 ms).
c) Plot the compensated system Bode plot.
5.14
The open-loop transfer function of DC motor position over input voltage whose param-
eters are listed Table 5.9 is given by:
𝜃(z)
V(s) =
Kes
(Js + B)(Ls + R)
The controller design requirements include settling time ts ≤0.04 s, percentage over-
shoot PO < 16%, and steady-state error ess = 0 from a command step input.
a) Derive the sampling period T for a discrete-time open-loop transfer function that
results in:
𝜃(z)
V(z) = 0.001039z + 0.002
z2 −1.492z + 0.477
b) Design a pole-zero and an integral controller using the root locus technique.
c) Sketch the responses respectively to unit step command and unit step disturbance
inputs. Check the response to a unit step disturbance
𝜃(z)
Td(z). Discuss on system
disturbance rejection compliance.
5.15
Consider a process model given by:
Gp(z) = 0.00158
z −0.822
Design a deadbeat controller using the following steps:
Table 5.9 DC motor parameters.
Parameters
Values
R
4 Ω
L
2.75⋅10−6 H
Ke = Kt
0.0274 N.m A−1
J
3.2284⋅10−6 kg m2 s−1
B
3.5077⋅10−6 N.m s−1
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
267
a) Plot the step response of the uncompensated system and analyze the system transient
and stationary response characteristics.
b) Add a PI controller to reduce the error.
c) Find the closed-loop transfer function with deadbeat controller.
d) By equivalence, derive the controller parameters.
5.16
Consider a process given by:
Gp(s) =
2
s(s + 2)
a) With T = 1 s and a zero-order hold used as converter, derive the equivalent
discrete-time process transfer function.
b) Using zero-pole cancelation for a PI controller, formulate a discrete controller that
allows an overshoot below 4% to be obtained.
c) Plot the discrete step response of the system.
5.17
Blood puriﬁcation based on a dialysis technique aims to remove extracorporeal waste
products such as creatinine and several harmful microorganisms, including bacteria,
fungi, viruses, and parasites. Consider a temperature-based blood treatment as illus-
trated in Figure 5.52.
By reducing the number of infected cells, the blood treatment device could make a
diﬀerence for severely aﬀected malaria or drug-resistant patients. For example, in the
case of malaria, the plasmodium parasites move human red blood cells to consume
the hemoglobin protein while merging with the magnetic-based hemozoin. Due to
their magnetic properties, these malaria-infected cells can be trapped in the magnetic
nanoparticle-based blood ﬁlter. In order to ease this ﬁltering, a stage for the pre-heating
DC motor
ω(t), θ(t)
Motorized
valve with
gear ratio n
Temperature
sensor gain, b
vb(t)
Amplifier
gain Ka
e(t)
m(t)
Steam, Qv(t)
Treated blood at Te(t)
Heated dialysis
solution
Qs(t) at Ts(t)
Motorized
valve, α(t)
Dialysis solution
Blood to be treated
Q = constant
Ts(t)
Controller
station
Modem
Switch
Dialysis
solution
with impurity
Permeable
membrane
Figure 5.52 Temperature-based blood treatment system.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

268
5 Continuous Digital Controller Design
Table 5.10 Some key parameters and variables of a blood treatment system.
Parameters
Description and values
Variables
Description and units
Q
Liquid inﬂow rate (10 kg s−1)
QV(t)
Input ﬂow rate of the steam in the
tank (m3 s−1)
C
Heat coeﬃcient of blood
(2.103 J (kg ∘C)−1)
Qi(t)
Input ﬂow rate of the blood to be
heated by the steam in the tank
(m3 s−1)
K1
Valve ﬂow rate constant
(10 m3 s−1 rad−1)
Te(t)
Temperature of the inﬂow blood
to be heated (∘C)
K2
Steam energy transfer constant
(105 J m−3)
Qo(t)
Output ﬂow rate of the blood to
be heated (m3 s−1)
K
Torque constant (0.4 N.m A−1)
TS(t)
Temperature of the outﬂow blood
to be heated (∘C)
Ra
Armature resistance (160 Ω)
𝛼(t)
Angular position of the steam
valve (motorized valve) (rad)
J
Motor shaft inertia (10−3 kg m2)
vb(t)
Thermosensor voltage (V)
n
Reduction gear (250)
𝜔(t)
Motor angular velocity (rad s−1)
Kb
Thermo-electrical sensor
coeﬃcient (0.01 V ∘C−1)
M
Retained blood mass (40 kg)
of human blood is required, utilizing a system as depicted in Figure 5.52. The steam
injected by a motorized valve is used to heat up the processed blood.
a) For an eﬃcient blood treatment, it is desired to maintain blood temperature at a spe-
ciﬁc level. Develop a model of this process relating blood temperature TS(t) to valve
angular position 𝛼(t), as depicted in Figure 5.49, using the variables and parameters
described in Table 5.10.
b) Develop an equivalent discrete model with a sampling period of 10 ms.
c) Plot the system response of the unit step change of blood temperature using a discrete
PI controller given as Kp = 7.8 and Ki = 2.1. Tune the PI gains to derive a performance
such that ess = 0 and PO = 5%.
5.18
A process described mathematically by a pure integration so that the discrete transfer
function is given by:
Gp(z) = 3.5Tz−1
1 −z−1
and the controller discrete transfer function chosen is:
Gc(z) =
1
3.2T
with a sampling period T = 0.05 s.
a) Plot the system response to a step input r(t) = R for t ≥0. Plot r(k), e(k), m(k), c(k),
and c(t) versus t∕T.
b) Plot the response to a ramp input r(t) = 2.5t for t ≥0. What is the steady-state error
in the system e(k) when the command is a ramp?
c) Derive a controller when the system is required to follow a ramp input r(t) = 2.5t.
d) Plot the system response to the step input with the controller derived in (c).
e) Compare the response obtained in (c) with that in (b). Comment on the results
obtained with respect to step input signals.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
269
205
Gf(z)
e(z)
r(z)
W(z)
+
–
c(z)
f(z)
+
+
mʹ(z)
0.26Tz–1
1–0.5z–1
0.25
m(z)
–0.03
+
+
Sensor
Disturbance
Process
Feedforward
controller
Digital
controller
e(z)
(a)
(b)
r(z)
m(z)
+
–
c(z)
f(z)
+
+
mʹ(z)
c(z)
0.11Tz–1
1–z–1
volts
55
Gf(z)
Figure 5.53 (a) System block diagram with disturbance. (b) System block diagram with command feedforward.
5.19
.a) A control system schematic diagram is shown in Figure 5.53(a). The step input load
disturbance signal W(z) can be modeled as:
W(z) =
5
1 −z−1 𝛿(0)
i) Plot the system response to this step disturbance input. Derive the transient and
stationary characteristics.
ii) Derive the feedforward disturbance controller to ensure that there are no
disturbances when only the step disturbance acts as an input to the system.
iii) Analyze the system stability before and after the disturbance rejection. How
would the system work if a PI controller were used instead.?
b) A control system schematic diagram can be modeled as a block diagram, as depicted
in Figure 5.53(b).
i) Use this diagram to derive the error transfer function.
ii) Find the steady-state error.
iii) Design the feedforward controller algorithm, if it is feasible. If not, modify
accordingly.
iv) Evaluate the steady-state error with the feedforward controller.
5.20
Consider the airplane aileron servo-to-bank angle sensor that is depicted through
block diagram in Figure 5.54. This motor-driven gyro consists of a sensitive motor
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

270
5 Continuous Digital Controller Design
v(z)
e(z)
r(kT)
+
–
Digital
current
controller
D(z)
Motor armature
circuit model
(1-e-TR/L)z–1
1-e-TR/Lz–1
d(z)
+
+
Ki
1
R
Disturbances
input
Induced
current
i(z)
Current
input
« Observed »
current gain
Figure 5.54 Block diagram for control of motor current.
current-driven arm positioned over the top of a gasoline surface so that any variation of
airplane sideslips (bank angle) will produce a disturbance voltage inside the current of
the motor. Such an event results from the frequent vibrations occurring during airplane
motion after any discontinuous contact between the wind and the airplane duriing
autopilot driving conditions. The current should be controlled to produce an accurate
measurement, as depicted in Figure 5.54. Using R = 24 Ω, L = 156 mH, and KI = 17.5,
With a sampling period of 50 ms, design a PI current control algorithm to ensure an
overall performance for the steady-state response in 0.5 s step disturbance inputs while
approaching a steady-state error below 0.02 with a percentage overshoot less than 10%.
5.21
At regular intervals, the solar panels shown in Figure 5.55 are reoriented to maximize
solar energy exposure for the accumulator charging process. This reorientation can be
treated as applied thrust forces TF(t) with an eﬀect on the x- and y-axis spinning velocity
𝜔1(t) and 𝜔2(t) and on the satellite.
a) Given satellite inertias Jx and Jy, respectively, along the x- and y-axis, respectively,
develop the equation of motion of the satellite. Deduce the equivalent discrete-time
model.
b) Draw a block diagram for the system with a closed-loop control showing the com-
mand position disturbance input.
c) Sketch the velocity and position proﬁles required for the satellite to rotate by 17∘and
−4∘along the x- and y-axes, respectively. Use a sample period of 10 ms.
d) Show how a feedforward control can be added to nullify the eﬀect of reorientation.
5.22
Consider a robot positioning arm as shown in the block diagram in Figure 5.56 and with
the physical conﬁguration of the robot described in Exercise 5.11.
a) Design a proportional controller so that the system can ensure a percentage overshoot
of less than 35% with a settling time better than 2.1 s for a unit step command input.
(Hint: Kt = 0.875). This is illustrated aside.
b) Add a command feedforward controller to the block diagram in Figure 5.56(b) to
compensate for static errors in the arm position caused by the load.
c) Plot the position responses obtained with and without the feedforward controller.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
271
Solar panels
Solar panels
Satellite
Antenna
Spin velocity
y-axis 
Spin velocity
x-axis 
Thrusters
Direction of
solar radiation
TF(t)
2
TF(t)
2
ω2(t)
ω1(t)
d
d
Figure 5.55 Satellite with spin control thrusters.
R
1
2
3
4
5
6
7
8
9
10
11
12
time
[s]
140
rev min–1
v(kT)
5
20
(a)
(b)
(c)
25
0
m(z)
e(z)
r(kT)
+
–
Computer
Control
Kc
Robot arm
θ(z)
KrTz–1
1–z–1
Arm position
command
Figure 5.56 (a) Velocity/position proﬁle of a robot arm. (b) Block for control of the robot arm. (c) Robot arm x-y
trajectory.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

272
5 Continuous Digital Controller Design
d) Derive the equivalent discrete command position input from the velocity pro-
ﬁle depicted in Figure 5.56(a) as well as robot motion trajectory illustrated in
Figure 5.56(c). All initial conditions are zero. Then, sketch the system response using
the controller design in part (b).
e) It is desired to perform a circle with radius R as shown in Figure 5.56(c). Formulate
the two-axis corresponding command input for the robot arm-positioning system.
5.23
For the system depicted in Figure 5.57, using the root locus design technique, design a
process that enables achievement of 𝜔n = 24 rad s−1 and a damping ratio of 𝜁= 0.7.
5.24
Consider a tool oﬀset control system for a lathe machining tool where each workpiece
produced is measured in real time by a laser measuring system. If an error in a workpiece
dimension is detected, a correction is applied before the next part is machined so that
errors in the previous part are eliminated in subsequent parts. In short, this tool posi-
tioning (cutting width diﬀerential) oﬀset control system is used to track and compensate
for a constant rate of tool wear on the lathe, as illustrated in Figure 5.58 and summarized
in block diagram form in Figure 5.59.
a) In a study of the relationship between L(kT) and Δz(kT) + z(kT) for this case, derive
some PD controller settings in order to ensure a P.O. less than 12% and a response
time constant of 0.5 s for a laser-based sampling period of 0.1 s. Fill out Table 5.11
for the ﬁrst ﬁve data points, while considering a step-like estimated resistive torque
given by: Tr(kT) = 1.1L((k)T). Plot the subsequent system response.
b) What conclusions can be drawn about the eﬀectiveness of the controller in com-
pensating for exponential disturbances? (Note that wear rate after several parts is
probably more rapid than in reality.)
5.25
A 360-steps-per-revolution stepping motor is controlled using an 8-bit, 1 MHz
DDA-based microcontroller algorithm. Consider the velocity proﬁle given in Table 5.12.
Initially, the velocity register is (15 × 2−7 = 0.1171875 in base 10), while the position
register is zero.
a) Based on the velocity proﬁle in Table 5.12, ﬁll this table by deriving the velocity of the
motor in revolutions per minute. Obtain subsequently the system velocity resolution.
b) Based on the velocity proﬁle in ﬁlled Table 5.12, determine the velocity range
[min.value, max.value].
y(s)
–
2
R(z)
+
0.03s+1
Z
O
H
Y(z)
T
KcT
1–z–1
Figure 5.57 Block diagram of a DC motor
ﬁrst-order model.
Table 5.11 Sequence values for the PD-based width cutting control of
lathe machining.
kT
Cw(kT)
z(kT)
Tr(kT)
W(kT)
E(kT)
𝚫Z(kT + 𝟏)
0
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
273
Lathe cutting
width controller
Network
Width sensor
Tool
position
Z(kT)
Laser-based cutting
width measured, W(kT)
Workpiece
Desired
cutting width
Measured
cutting width
Lathe machining station
laser-based cutting width sensor
Laser
beam
Cutted material
resistive torque
 Tr(kT)
Cutting
torque, Tc(kT)
Cw(kT)
W(kT)
Figure 5.58 Lathe machine and laser-based measuring system.
Machine tool
position offset
Cutted material
resistive torque
0.79
Desired
cutting
width
Cutting width
PD-Controller
Cw(z)
Tr(z)
Tc(z)
Z(z)
Lathe
torque model
Tool position
model
Cutting
width
Cutting
torque 
Tool
offset
2.35
W(z)
E(z)
Δz(z)
Error
Measured
cutting width
Laser-based cutting
width sensor gain
+
+
+
+
+
–
≈1
K1–K2z–1
1−z–1−0.5z–2
1.76 Tz–1
Figure 5.59 Schematic block diagram of a laser-based tool oﬀset controller.
5.26
Consider the stepping motor controlled by an 8-bit, 1 MHz so that its velocity data sum-
marized Table 5.13 with 1000 Hz, 8-bit register for position, velocity and acceleration.
a) Derive the acceleration in step/add2 between times 0 and 0.2 sec required to accel-
erate the motor at a rate of 104.2 rad−1 s2 as well as the number of clock periods are
required to achieve the desired speed of 250 rpm?
b) Between times 0.2 sec and 0.5 sec, derive the number of clock periods that are
required when the motor operates during the 0.3 sec of constant velocity interval.
c) Derive the acceleration and the number of clock between times 0.5 sec and 0.9 sec in
order to decelerate the motor to a stop at a rate of 104.2 rad−1 s2.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

274
5 Continuous Digital Controller Design
Table 5.12 With A = 0.00011112 steps per adds
Time
Velocity
(step/adds)
Velocity
(rev/min)
Position (resolution)
0
A
360 steps/rev
1
1.4 A
360 steps/rev
3
1.2 A
360 steps/rev
4
0.8 A
360 steps/rev
5
0 A
360 steps/rev
Table 5.13 Velocity and position proﬁles data
Time
Velocity
(rev/min)
Motion phase
Position (resolution)
0 sec
0
Acceleration
360 steps/rev
0.2 sec
250
Constant
360 steps/rev
0.5 sec
250
Deceleration
360 steps/rev
0.9 sec
0
Rest
360 steps/rev
360 steps/rev
d) Determine the number of revolutions required by the motor to cover those phases.
What is the total number of clock periods required for 120 revolutions during con-
stant velocity phase?
e) Write the subsequent control algorithm for this stepping motor.
5.27
Consider the schematic three-bladed horizontal-axis wind turbine depicted in
Figure 5.60. The rotor speed must be varied as the wind speed varies, hence the
rotor speed can be changed by controlling the generator torque. Consider a typical
wind-speed variation with height, which can be expressed as:
w(t) = whub
(
1 + z
h
)m
where z is the height above the hub, whub is the wind speed at hub-height h, and m is the
power law wind-shear coeﬃcient.
a) Derive a simpliﬁed model of three-bladed horizontal-axis wind turbines, con-
sidering the tower ﬂexibility, rotor teetering, no-blade ﬂexibility (pitch angle
variation negligible), and a variable generator speed. Use the following variables:
perturbed rotor speed, x1(t) = 𝛿𝜃1(t)
dt ; perturbed drive-train torsional spring force,
x2(t) = Te(t) = Kd(𝛿𝜃1(t) −𝛿𝜃3(t)); perturbed generator speed, x3(t) = 𝛿𝜃3(t)
dt
JT and
JG inertia moments of the wind turbine rotor and the generator (kg mm); TT, TG
wind turbine aerodynamic and generator electromagnetic torques, (Nm); 𝜃T, 𝜃G
angular positions of the rotor and the generator speed (rad s−1). D, K are the damping
and the stiﬀness (N.ms rad−1), (Nm.rad−1), respectively.
b) If a synchronous generator is used, describe the key components of its voltage control
with regard to speed.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
275
θ3
Generator
Blade #1
Hub
Te
σ1
θ3
Gear
High speed
shaft
Low speed
shaft
Tower
N1 θ1
θ2 N2
J1
J2
D1  K1
D2  K2
Gear train
Figure 5.60 Wind turbine control motion.
Rp
Kt
1
J
1
s
bp
zoh
DC motor model
1
s
1
s
1
L
Rp
Kt
Ka
Torque controller
di(t)/dt
i(t)
T(t)
TL(t)
α(t)
ω(t)
θ(t)
Θc*(k)
–
–
+
+
+
+
+
–
e*(t)
Kpʹ
Kv ʹ (1–z–1)
Kp
(1–z–1)
Kv
–
+
–
T
Ke
M(z)
Figure 5.61 DC motor-ampliﬁer position control.
5.28
Revisit the position controller of the DC motor illustrated in Figure 5.61. Here, the veloc-
ity is synthesized by digital diﬀerentiation. The position encoder 𝜃(t) is sampled every
0.002 s, the ampliﬁer gain Ka =
̂Rp
̂Kt = 119 V V−1, the torque constant Kt = 0.042 N A−1,
the inductance L = 0.016 Henrys, the rotor armature resistance Rp = 1.67 Ω, the inertia
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

276
5 Continuous Digital Controller Design
J = 0.00036.6 N.m.s2∕rad−1, the viscous friction (damping) is negligible, and the back
EMF is Ke = 0.0432 V s−1 rad−1.
a) From the block diagram manipulation, derive the discrete transfer function
𝜃(z)∕M(z).
b) Set controller gains K′
p and K′
V for position and velocity feedforward, respectively, to
zero. Design an inner velocity gain so that K′
V will result in system-dominated roots
that correspond to a damping ratio 𝜉= 0.7. Approximate the corresponding natural
frequency.
c) Design a controller to reject torque disturbance in two samples. Determine the value
of sample period required to limit the unit step disturbance within four sample
periods.
d) By setting K′
p = 1, where K′
V is the value found in (b), plot the system response to a
step change command input. Discuss your results.
e) Design K′
p so that it results in a system with a dominant root corresponding to a time
constant of 0.053 s.
f) Using the values of K′
p and K′
V found previously, plot the response of the motor posi-
tion to a step command input.
5.29
Consider a ﬁrst-order system process model given by:
Gp(z) = (1 −𝛿c)
z −𝛿p
In order to elaborate the design procedure of a PI control algorithm given by:
D(z) = Kp +
KiT
1 −z−1
a) Derive the closed-loop transfer function.
b) Derive the value of Ki, Kp, T using the pole-zero cancelation associated to the PI con-
troller for a chosen system dynamic scenario.
5.30
Consider the PID state feedback control of the DC motor system depicted in Figure 5.62.
With Ki, KV, Kp, derive the state velocity and position feedback controller gains
KV = KV
′ −1
Kp and KC such that the overall system responds to a unit step disturbance
with a lower percentage overshoot and no steady-state error. The sample period is given
to be 10 ms and with J = 0.0000431 Kg⋅m2/sec and Kp = 0.1425 N.m/A.
5.31
Consider a DC motor system with the position and velocity feedback control topology
shown in Figure 5.63. It is desired to design a controller such that the closed-loop sys-
tem has a bandwidth of 𝜔closedloop =
1
𝜏cl =
KV
′Kp
𝜎p
= 16rad∕s. Consider using Kclosedloop =
1
KV
′
from the desired characteristic equation pole 𝜏cl and a sampling period of 10 ms.
5.32
It is desired to use a 12-bit microcontroller to control the resolution of a 200-steps-per-
revolution stepping motor with a computer clock 10 000 Hz (adds s−1) at a constant accel-
eration of 500 rev s−2. Determine the number of additional operations before the step
signal will be sent to the command translator. Compute the position, the velocity, and
the acceleration register values for the ﬁrst four additions.
5.33
a) Give the diﬀerence between: (i) the control horizon; (ii) the prediction horizon; and
(iii) the control horizon.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
277
Kp
J s
1
Kp
Kc
ZOH
Motor
1
s
KiT
+
T
T
T
K ʹV(1–z–1)
KV(1–z–1)
(1–z–1)
KC
+
–
+
+ +
–
–
+
R(z)
C(s)
D(s)
Position encoder
–
Figure 5.62 Block diagram of a motor-control system.
K
Js
1
K
Kv
Kc
ZOH
Motor
T
Kvʹ (1–z–1)
–
+
ω(s)
–
–
Kc
Θ*(z)
+
+
1
Kp
T
T
θ(s)
Tachometer
Position encoder
Figure 5.63 DC motor state feedback control topology.
b) In the following systems exhibiting unusual dynamic behavior, deﬁne the receding
horizon control strategy (ﬁnite future horizon of N steps) for the MPC algorithm:
i) Tracking control for an automatic of steering driverless vehicle moving in busy
road.
ii) Automatic plane altitude positioning system such that lowering altitude requires
moving up before a move down motion.
iii) Aerial navigation of unmanned robot craft during a cave exploration.
iv) Thermal-based trajectory tracking for a missile defense system.
v) Wort temperature changes due to conversion of yeast into alcohol in a fermenta-
tion tank.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

278
5 Continuous Digital Controller Design
5.34
Consider a discrete process transfer function given by:
Gp(z) =
2.5(1 −𝛿p)z−1
1 −𝛿pz−1
Note the cancelation of the pole in the process by zero in the numerator. If the desired
closed-loop bandwidth is 50 rad s−1, the desired closed-loop time constant is 𝜏dr = 0.02 s.
Thus, a sample of T = 0.01 s can be chosen. Derive the discrete controller for a process
and zero-order hold, with 𝛿p = e−T/0.03.
5.35
Consider a ﬁrst-order discrete-time process transfer function given by:
G(z) = 2(1 −e−T∕0.04)z−1
1 −e−T∕0.04z−1
Using the roots-locus and frequency response, the aim is to achieve a closed-loop band-
width of about 50 rad s−1. The sampling frequency should be at least 10 times the band-
width.
a) Plot the uncompensated system frequency response.
b) Using the pole-zero cancelation method, derive the corresponding digital controller.
c) Plot the compensated system frequency response and sketch the root locus. Com-
ment on the results achieved.
.
5.36
a) If not speciﬁed (directly or indirectly), use a sampling period of 100 ms in all the fol-
lowing exercises.
Consider a process model given by:
GC(s) =
1
s(s + 1)(0.32s + 1)
With a sampling period of 0.05 s, design a phase-lag compensator, ensuring a desired
phase margin of 55∘for zero steady-state error.
b) Consider a process model given as:
GC(s) =
1.1
2.6s(s + 1)
Design a lead compensator that could achieve PO (%) > 0.5 (so 𝜁≤0.5975) and
𝜔n ≈7 rad s−1.
c) Consider a process given by:
GP(s) = 2.5
s2
Design a controller with the following design requirements: settling time ts = 1.2 s
and damping ratio 𝜁> 0.4. The controller, with pc > zc > 0, is given by:
GC(s) = K s + zc
(s + pc)
d) Consider a process model given by:
G(s) =
K
s(s + 1)
Design a discrete controller enabling a display of a dynamic closed-loop response
with characteristics such that the damping ratio is 𝜁> 0.5 and 𝜔n > 0.9 rad s−1 (or a
settling time of about 8.8 s).
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
279
e) Design a lag compensator in order to have Kv ≥100 for a process given by:
D(s)G(s) = 127 s + 5.4
(s + 20)
1
s(s + 1)
f) Consider a process model given by:
G(s) =
10
s(s + 4)
The desired process dynamics performance characteristics are PO ≈5% and ts = 1.2 s
(2% criterion) for a step input.
g) Consider a motor plus ampliﬁer model given by:
G(s) =
1
s(s + 10)(s + 5)
Design a digital controller with the following speciﬁcations: 7.5% overshoot and min-
imum settling time ts = 1.2 s (2% criterion), with a chosen Ts = 0.01 s.
5.37
In a distillation tower, distillation process consists of raising the temperature of the
inﬂow crude oil from ambient temperature to approximately 400∘C. The burner pro-
viding stream outlet temperature is regulated by the gas ﬂow rate to the furnace, along
a reboiler and a total condenser. Consider a continuous distillation process through a
tower with ﬁve stages, designed to separate crude oil made of benzene, toluene, and
p-xylenes, as shown in Figure 5.64.
This distillation tower has a 6-m diameter over 0.07 m weir height, with trays spaced
apart. The nominal liquid depths are 0.67 and 1.4875 m in the horizontal reﬂux drum and
sump, respectively. The distillation tower operates at nominal steady-state conditions
given by: (i) a feed stream containing 30% benzene, 40% toluene, and 30% oxylenes; (ii)
a feed ﬂow rate of 500 kmol h−1; and (iii) distillate containing 95% benzene; during the
distillation, 95% benzene is recovered in the feed for 1.7% of the benzene impurity at the
bottom.
a) Draw the closed-loop control diagram of the distillation process.
b) Develop the predictive model (PM) of this process, where the process inputs are the
condenser duty (W), the reboiler duty (W), the reﬂux mass ﬂow rate (kg h−1), the
distillate mass ﬂow rate (stream #2), the bottoms mass ﬂow rate (kg h−1 stream #3),
and the feed molar ﬂow rate (kmol h−1 stream #1). Similarly, the process outputs are
the tower pressure (stage 1), the reﬂux drum liquid level (m), the sump liquid level
(m), the mass fraction toluene in the distillate, and the mass fraction benzene at the
bottom.
c) Deﬁne the cost function with respect to the following control objectives: (i) maintain
a constant tower pressure; (ii) maintain 4.6% toluene (or 96.6% benzene) in the dis-
tillate; (iii) maintain 2.1% benzene in the distillation tower bottom; and (iv) maintain
the sump and reﬂux drum in the allowable operating ranges.
5.38
Reconsider a controlled system with a PI controller as illustrated in Figure 5.65. Design
a controller allowing a system that settles down to the target reference in two steps; that
is, 2 × 0.6 = 1.2 = 2 seconds. Plot the compensated system response y(z) to unit step
input as well as u(z). What are the control eﬀort required and the percentage overshoot
achieved?
5.39
Consider the system depicted in Figure 5.66. Design a discrete-time PD controller based
on the requirements of time constant 𝜏= 2 s and damping ratio 𝜉> 0.4.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

280
5 Continuous Digital Controller Design
EV1
Thermostat
Light napthta
(gasoline)
Heavy napthta
(gasoline)
Kerosene
(jet fuel)
Gasoil
(diesel)
Lubrificant oil
parafin wax,
asphalt
LPG
0°C
90°C
160°C
250°C
350°C
DISTILLATION COLUMN
CONDENSER
system
RE-BOILER
Pump
Gas
Controller
(MPC, PID)
EV2
reflux
Reflux
Vapor
Vapor
Vapor
Vapor
Vapor
Feed flow LF, VF
Residue
(asphalt)
400°C
Liquid
Liquid
Liquid
Stripping
segments
Rectifiying
segments
Figure 5.64 Oil distillation column and reboiler.
0.00058
z–0.942
(KP + KI)z – KP
R(z)
Y(z)
–
+
U(z)
z–1
E(z)
Figure 5.65 Block diagram of control system
with a PI controller.
Sampler
+
–
m(kT)
e(kT)
V*(kT)
0–5 Volt
ZOH
Tm(s)
TL(s)
V(s)
0.03
Computing
unit
Control
algorithm
Actuator
Position
y(s)
1
s + 1
120
3.5s + 1
Process
Driver
Sensor
Load torque
Velocity
0.64
Figure 5.66 Vehicle speed control.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Bibliography
281
5.40
Consider the system depicted in Figure 2.7.
a) Develop a discrete time transfer function model of inside incubator temperature
using the heating element temperature as the manipulated input and the infant body
as the disturbance input.
b) Sketch a block diagram for this system in which the incubator temperature is explicitly
in state feedback form.
c) Design a discrete-time PI controller to regulate the temperature based on the require-
ments of time constant 𝜏= 10 s and steady-state error less than 0.05 (use a sampling
time = 0.2 s).
5.41
Consider the hybrid vehicle system depicted in Section 2.3.3 and Figures 2.4 and 2.5.
a) Generate and derive the discrete model of a non-planar road proﬁle for use by the
HEV.
b) Propose a generic operating strategy and subsequent control algorithm for minimiz-
ing fuel consumption during hybrid operating mode.
Bibliography
1 Ackermann, J. (1985). Sampled Data Control Systems: Analysis and Synthesis, Robust System
Design. Springer Verlag.
2 Åström, K.J. and Wittenmark, B. (2011). Computer-Controlled Systems: Theory and Design.
Courier Dover.
3 Bistritz, Y. (1984). Direct bilinear Routh stability criteria for discrete systems. Systems and
Control Letters 4: 265–271.
4 Bollinger, J.D. and Duﬃe, N.A. (1989). Computer Control Machines and Processes.
Addison-Wesley.
5 Bistritz, Y. (1984). Direct bilinear Routh stability criteria for discrete systems. Systems and
Control Letters 4: 265–271.
6 Brockwell, P.J. and Davis, R.A. (2009). Time Series: Theory and Methods, 2e. Springer.
7 Camacho, E. and Bordons, C. (2004). Model Predictive Control. Springer.
8 deSilva, W. (2010). Mechatronics: A Foundation Course. CRC Press.
9 Fadali, S. and Visioli, A. (2012). Digital Control Engineering, 2e. Academic Press.
10 Franklin, G.F., Powell, J., and Workman, M. (2006). Digital Control of Dynamic Systems, 3e.
Ellis-Kagle Press.
11 Golnaraghi, F., Kuo, B.C., and Adams, J.A. (2009). Automatic Control, 9e. Wiley.
12 Herman, S. (2013). Industrial Motor, 7e. Cengage Learning.
13 Isermann, R. (1989). Digital Control Systems. Berlin: Springer-Verlag.
14 Jury, E.I. and Tsypkin, Y.Z. (1971). On the theory of discrete systems. Automatica 7 (1):
89–107.
15 Katz, P. (1981). Digital Control Using Microprocessors. Prentice-Hall.
16 Kothare, M.V., Campo, P.J., Morari, M., and Nett, C.N. (1994). A uniﬁed framework for the
study of anti-windup designs. Automatica 30 (12): 1869–1883.
17 Kuo, B. (1995). Digital Control Systems. Oxford University Press.
18 Leigh, J.R. (2006). Applied Digital Control: Theory, Design and Implementation, 2e. Dover.
19 Lorenz D.R. (1999). Advances in Electric Drive Control, IEEE International Conference Elec-
tric Machines and Drives, pp. 9–16.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

282
5 Continuous Digital Controller Design
20 Luenberger, D.G. (1979). Introduction to Dynamic Systems: Theory, Models, and Applica-
tions. Wiley.
21 Maciejowski, J.M. (2002). Predictive Control with Constraints. Prentice-Hall.
22 Markakis M., Mitsis, G., Papavassilopoulos, G., and Marmarelis, V. (2008). Model predictive
control of blood glucose in Type 1 Diabetes: The principal dynamic modes approach, 30th
Annual International EMBS Conference, Canada.
23 Paraskevopoulos, P.N. (2001). Modern Control Engineering. Marcel Dekker.
24 Ogata, K. (1995). Discrete-Time Control Systems, 2e. Prentice-Hall.
25 Patterson, D.A. and Hennessy, J.L. (2013). Computer Organization and Design: The Hard-
ware/Software Interface. Morgan Kaufmann.
26 Paraskevopoulos, P.N. (1996). Digital Control Systems. Prentice-Hall.
27 Parker, R.S., Doyle, F.J., and Peppas, N.A. (1999). A model-based algorithm for blood glu-
cose control in Type I diabetic patients. IEEE Transactions on Biomedical Engineering 46
(2): 148–157.
28 Phillips, C.L. and Nagle, H.T. Jr. (1984). Digital Control System Analysis and Design.
Prentice-Hall.
29 Polderman, J.W. and Willems, J.C. (2013). Introduction to the Mathematical Theory of Sys-
tems and Control. Springer.
30 Santina, M., Stubberud, A., and Hostetter, G. (1994). Digital Control System Design. Oxford
University Press.
31 Skogestad, S. and Postlethwaite, I. (2005). Multivariable Feedback Control: Analysis and
Design, 2e. Wiley.
32 Sorensen, J. (1985). A physiological model of glucose metabolism in man and its use to
design and assess improved insulin therapies for diabetes, PhD Thesis, MIT.
33 Spong, M.W. and Vidyasagar, M. (2008). Robot Dynamics and Control. Wiley.
34 Stol, K. and Balas, M.J. (2001). Full-state feedback control of a variable-speed wind turbine:
a comparison of periodic and constant gains. Journal of Solar Energy Engineering.
35 Visioli, A. (2006). Practical PID Control. Springer.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

283
6
Boolean-Based Modeling and Logic Controller Design
6.1
Introduction
Mechatronic systems are operated by turning ON and OFF switches, motor starters, valves,
and other devices in response to operating conditions or as a function of time. Such systems
are referred to as discrete event requiring logic-based control systems. Hence, binary values
such as 1 or 0, ON or OFF, and open or closed deﬁne the switched conditions of inputs (e.g.
limit switches, relay contacts, push buttons), dictating one of the two states for the output of
mechatronic system devices (e.g. light ON or OFF, +V and 0 V input voltage levels for motor)
through logic control systems. Thus, a system operating sequence can be deﬁned directly by
successive output states of the devices involved. As such, Boolean algebra is the mathemati-
cal foundation for system behavioristic modeling. Such formal modeling requires a functional
description and analysis of the operating sequences to ensure the execution of predictable oper-
ational sequences. For a system with a single cycle of operation, modeling consists of convert-
ing the operating sequences into the corresponding truth table or process-switching sequence
table. For the modeling of a system with several cycles of operations and concurrent operating
sequences, state diagrams can be used. In the case of multiple cycles of operations and paral-
lel operating sequences, a petri net or state function chart (SFC)-based modeling is preferred.
Hence, from these formal models, it is possible to derive the Boolean functions relating system
state outputs to state input transition conditions.
Furthermore, the sequential logic controller converts switching input conditions into ener-
gized or de-energized state outputs for each device. Hence, in logic controller design, the chal-
lenge is to determine the logical linkages, always validating any combination of switching input
conditions with changes in state outputs. This can be achieved by solving the system operating
Boolean-based models.
The main objective of this chapter is to lay out a methodology for Boolean-based model-
ing and the design of logic controllers that enables input/output (I/O) Boolean functions to
be solved. First, Boolean algebra is reviewed, along with combinatorial and sequential logic
tools. Then, some logic controller design methods based on functional analysis and various
formal process modeling techniques (e.g. switching theory, state diagram, SFC) are presented.
Thus, a Boolean-based logic controller is implemented by using solid-state electronic devices.
This is covered along with the procedure to develop schematic electrical wiring diagrams for
automation design projects. Finally, automation applications for biomedical, production sys-
tems, transportation, and handling systems are described to illustrate Boolean-based modeling
and design of logic controller algorithms and circuitries.
Control Of Mechatronic Systems: Model-Driven Design And Implementation Guidelines,
First Edition. Patrick O.J. Kaltjob.
© 2021 Patrick O.J. Kaltjob. Published 2021 by John Wiley & Sons Ltd.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

284
6 Boolean-Based Modeling and Logic Controller Design
6.2
Generic Boolean-Based Modeling Methodology
Discrete event systems have switching system outputs due to a change in the set of binary input
variables (binary level 1 or logic 1 is often referred to as TRUE, ON, or HIGH, while binary
0 or logic 0 is referred to as FALSE, OFF, or LOW), sometimes in a speciﬁc timely order. The
behavioral characteristics of discrete event systems can be captured using a binary-valued con-
dition concept. Discrete events occurring in a given order are called sequential events, while
those occurring randomly based on a deﬁned input/output relationship are called combina-
tional events. Thus, discrete event system dynamical modeling describes time-based evolution
of Boolean variable values through the powerful Boolean algebra mathematical foundation
(including Boolean diﬀerential calculus). The resulting Boolean-based dynamical model con-
sists of deriving the Boolean function relating any possible output variable changes with respect
to input variable changes. Consequently, the logic controller of a discrete event system aims to
ensure the execution of a number of discrete event process operations by solving those Boolean
equations.
Thus, the design of a logic controller requires establishing the model of a combination of
discrete event system state outputs based on a set of system inputs and present system states.
Subsequent sections present some techniques for designing a logic controller that enables
the execution of repetitive process operations, while circumventing the time-consuming
trial-and-error approach that is commonly used. A design methodology ensuring the
automatic execution of process operations by logic controllers is summarized in Table 6.1.
6.2.1
System Operation Description and Functional Analysis
The functional analysis aims to characterize all system operating cycles by decomposing the sys-
tem operation execution into major operating tasks or functions and identifying their activation
and deactivation conditions. It is then possible to establish the chronological order of the pro-
cess operations execution, also called process sequencing. This is achieved by gathering overall
process information, such as present system state conditions (e.g. initial condition, condition
of action termination, operating time constraints), input transition conditions (level or push
type), and even activated (next) system state outputs. The procedure to perform a functional
analysis of a discrete event system can be summarized as follows:
1) Perform the functional decomposition of system operations using a functional analysis sys-
tem technique (FAST) or structural analysis and design technique (SADT) that consists of
breaking down some process operating functions into the primary and secondary levels.
The FAST is presented in the Section 6.5.3. With the SADT, a function is deﬁned as the
process operation to be carried out, while system operations are lists of actions to be per-
formed by system actuating devices. Hence, in the function table (FT), for each action, there
is an activation condition required prior to its execution (precondition). Information on all
actions assigned to each function is presented in chronological order in the FT, as depicted
in Table 6.2.
2) Once each function has been structured in a chronological order of involved actions,
the table can be converted into a dependency chart (DC) to present these functions as
a sequence. Here, DC illustrates the relation over time between the diﬀerent functions
through rectangles, as depicted in Figure 6.1. The sequential execution of functions is
illustrated by arrows, which could describe either a parallel execution or an alternative
execution of functions. DC and FT should be reﬁned while considering all design speciﬁ-
cations. Subsequently, FT and DC can be transformed into SFC, as presented later in this
chapter.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

6.2 Generic Boolean-Based Modeling Methodology
285
Table 6.1 Step-by-step logic controller design methodology.
Design steps
Item description
Mechatronic system operating and functional analysis
1) List all the devices involved in the
system operating behavior.
Listing of processes (analog/digital) related to the operating
sequence execution, such as the startup/shutdown of
actuating, sensing devices, as well as inputs/outputs from the
man–machine interface (e.g. AutoPB, Stop PB, mode
indicator lamp, top LS), with their technical speciﬁcations.
2) Identify all device operational
conditions and constraints,
operating threshold values, and
initial conditions.
Bidirectional motor, n-multispeed drive requiring
n contactors, etc.
Operating cycle conditions: simultaneous or
concurrent operating sequences, level-type or
pulse-type switch operating mode, etc.
Use a symbol for each I/O device.
3) Classify
them
into
analog/
digital, input/output system
variables, and (level or pulse)
types.
Inputs: e.g. push buttons, limit switches.
Outputs: e.g. solenoids, lights, motors.
4) Draw a piping and instrumentation
diagram (P&ID) and process ﬂow
diagram (P&FD).
If possible.
5) Develop functional decomposition
and analysis.
Using decomposition methods (e.g. FAST, SADT),
organize each process combinational or sequential
event in the equivalent process operation and
input transition conditions.
6) Derive each activation order of pro-
cess operations (operating cycle)
for a group of sequential events
or for a combination of all possi-
ble input conditions for an events
group.
For all sequential events, regroup all correlated
process operations into successive sequences
(operating cycle). List each sequence with the
system outputs and inputs causing the transition
between sequences. For all combinational events,
summarize within the truth table all conditions of
activation for each process operation (output). For
remaining conditions with any activation, mark
them as undetermined.
7) For each operating cycle: identify
and describe the type of system
operating cycle.
Single operational cycle.
Multiple operational cycle: mutually exclusive or
concurrent.
Cyclic or acyclic (auto/manual/semi-automatic).
Synchronization of the system operations
(time-triggered, event-triggered,
counter-triggered).
8) Perform a system output activation
analysis: either on each sequence
for each operating cycle or on each
combination of input conditions
for each group of combinational
event.
Describe the initial condition of each operating
cycle (activation).
Identify duplicate, priority (emergency) sequences.
Identify the system operating cycle deactivation
condition.
(Continued)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

286
6 Boolean-Based Modeling and Logic Controller Design
Table 6.1 (Continued)
Design steps
Item description
9) Perform a safety analysis of process
operational execution.
Identify the potential defaults and develop
interlocks to maintain the normal system
operating in case of their occurrence; specify other
safety constraints and remedy actions.
Identify process hardware and software
operational defaults.
10) Derive logic operating sequences
for each process operation, includ-
ing safety measures in diagram
format.
Develop interlocks and forcing action designs.
Construct either truth, sequence, stable transition
tables or state diagrams containing information on
all inputs and the corresponding process outputs
activated, as well as the current/next state for each
operating sequence.
11) Develop a process start-and-stop
mode graphical analysis.
Classify within a coordinated cycle hierarchy, all
cycles of process operations in a normal automatic
production cycle, a manual, semi-automatic, or a
maintenance cycle, a safety cycle, etc.
Formal modeling of a discrete event system
12) Sequential or combinational formal
modeling of a discrete event
system.
In the case of a single
operating cycle, construct a
truth table (combinational
event) or a sequence table
(sequential event).
From the sequence table,
identify and separate each
binary process output
activation.
Output[1]/deactivation
Output[0]; for the input
combinations within the truth
table, use K-maps.
In the case of multiple
operating cycles with mutually
exclusive sequences, construct
the corresponding state
transition diagram
(sequentially structured event)
or construct several truth
tables (combinational event).
Derive an I/O Boolean
equation for each state (even
of state output) from the state
transition diagram; from input
combinations within the truth
table, use K-maps and then
combine the resulting state
outputs with POS and SOP
methods.
In the case of multiple
concurrent exclusive
operating cycles, construct a
state function chart.
Sequential logic controller circuit design
13) Select solid-state devices (latches,
ﬂips-ﬂops).
14) From
the
truth
table
or
the
sequence table, derive the state
table associated with the logic
devices selected.
15) Use K-maps to derive I/O Boolean
functions for device inputs.
16) Simplify and check the consistency
of I/O Boolean functions.
Using a timing diagram.
(Continued)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

6.2 Generic Boolean-Based Modeling Methodology
287
Table 6.1 (Continued)
Design steps
Item description
Wiring diagram and logic controller programming languages
17) Develop the wiring diagram between
the sensing/actuating devices, as
well as HMI and the logic
programmable controller unit.
Electrical power supply diagram.
I/O control unit wiring diagram (in/out of control
unit).
18) Set a table of mnemonics for the I/O
system variables based on the phys-
ical addresses in the programming
environment.
Use a wiring diagram to assign addresses for
system variables. This table should have
information on the types of variables
(analog/digital), address of I/O, range of values,
etc.
19) Choose the programming language
and develop a logic controller
application.
Convert I/O Boolean equations into a classical
programming language such as Ladder, Function
Block, Sequential Function Chart, Instruction List
(IL), structured text (ST), or even assembly
language.
20) Apply the ﬁrst scan subprogram.
21) Size and select the computing hard-
ware (control unit) and the detec-
tion/sensing equipment.
22) Verify the cycles of system opera-
tion and check if the logic meets the
safety speciﬁcations.
Use sequential logic software analysis tools and
timing diagrams for all input transition conditions
and system outputs.
Automation project documentation
23) Establish wiring and electrical con-
nection diagrams integrated into the
control unit schematics with physi-
cal addresses.
Compile a P&I diagram, PF diagram, and electrical
wiring diagram.
24) Documentation.
Provide a detailed system conﬁguration; I/O wiring
connection diagram; I/O address assignments;
internal storage address assignments; storage
register assignments; variable declaration; control
program printout; and stored control program.
Table 6.2 Module component from FT using SADT method.
Function (from module)
Activation condition
Activation device
Action description (event)
Execution device
Action 1
3) Perform the safety analysis of the process operations execution from expected defaults and
specify other safety constraints (e.g. max. operating values). Then, for each expected system
hardware and software operational default, develop interlocks and design-forcing actions to
restrict the execution of some process operations (by adding process inputs and outputs as
well as process states). For each process operation with safety constraints, the FT and DC
should be reﬁned according to newly identiﬁed process operating sequences, as well as input
transitions.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

288
6 Boolean-Based Modeling and Logic Controller Design
Functions
Event 1
Event 2 Event 3 Event 4
Event 5
Event 6
Time
Function 1
Function 2
Function 3
Function 4
Function 5
Figure 6.1 Dependency charts showing a sequence of process events.
4) Derive all process operating sequences, including those related to safety measures, for each
process operating cycle. This should lead to the gathering together of all input conditions
and their corresponding system outputs for each process operating sequence.
5) Present information representing the characterization of the process operations in a truth
table (combinational structured event), a sequence table (sequentially structured event), a
state transition table, or even an excitation table or a state transition diagram.
6.2.2
Combinatorial and Sequential Logic Systems
Considering each state of a logic system as an event, logic systems can be described as discrete
event systems evolving from changes within input conditions. Hence, the logic relationship
between switched input conditions and system output states can be either combinatorial or
sequential. This could be captured in the form of Boolean functions resulting from the analysis
of their corresponding truth table and sequence table, as well as from the switching theory.
In the case of combinatorial logic systems, the output is only a function of the current input.
Examples of combinational logic systems are solid-state electronics devices such as gates,
decoders, and multiplexers. In contrast, sequential logic systems derive their output from
past inputs as well as current ones, implying that memory is required. Typical sequential
logic systems are latches (e.g. S-R, S-R Latch with Enable, D, etc.) that can change states at
any time due to input changes, or ﬂip-ﬂops (e.g. Edge-Triggered D Flip-Flop, Edge-Triggered
S-R, Edge-Triggered J-K, T Flip-Flop, etc.) that change states only when a clock edge is
applied. Latches and ﬂip-ﬂops are summarized in Appendix D. The formal modeling tool
for logic systems is Boolean algebra, with variables having a value of 1 or 0 and using logic
gates AND(⋅), OR(+), NOT, EOR(+), NAND, or NOR to describe the logical links between
input conditions and past or current state outputs. In short, the design of combinational or
sequential logic systems would consist of deriving I/O Boolean functions representing the
operating combination or sequence. In the case of combinational discrete event systems with
few inputs (i.e. fewer than three inputs), the I/O Boolean relationship can be derived using
the following steps: (i) construct the truth table; (ii) derive the stable transition table; and
(iii) convert it into Karnaugh maps (K-maps) by using selected solid-state devices such as
ﬂip-ﬂops or latches to derive the Boolean output function.
The formal modeling of such discrete event systems consists of capturing the logic relation-
ship between all input transition conditions causing the activation of output variables in terms
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

6.2 Generic Boolean-Based Modeling Methodology
289
of Boolean functions. Hence, among formal modeling methods, there are: (i) the truth table
and K-maps; (ii) the switching theory in sequence table analysis; (iii) the state diagram, which
is a graphical representation of process operations based on expected input transitions; and (iv)
the sequential function chart. The resulting I/O Boolean functions can be implemented using
hundreds of relays or logic programmable devices, in the same way that a general-purpose com-
puter is used to solve algebraic equations. This formalism is captured using input and output
condition variable events, as well as system operating states. These formal modeling methods
are presented in the following subsections.
6.2.2.1
Combinational Modeling Tools: Truth Table, SOP, Product of Sums (POS), K-Maps
Sum of products (SOP) is a method used to derive I/O Boolean relationships for combinational
logic systems by using their corresponding truth table. Here, for each ith row of the truth table,
the logic input combination activating any output is given by:
Product(i) =
∏
inputs
(6.1)
This could be implemented by connecting all involved relays in series (AND gate). Hence, the
SOP method deﬁnes the Boolean relationship between all input combinations activating a jth
output by:
Output(j) = SOP =
∑
j
Product(i)
(6.2)
The hardwired implementation of this Boolean function would require the use of an AND
and OR gate (parallel collection of series connected relays).
It is usually diﬃcult to derive and simplify the resulting I/O Boolean function from the truth
table with more than two inputs and one output by using Boolean algebra and theorems. A
reduction technique tool has been proposed based on K-maps, consisting of a graphical repre-
sentation of the truth table where columns and rows correspond to each logic input variable.
Here, adjacent row and column designations diﬀer by only one bit. This is called a gray code
sequence. For example, with three inputs, the gray code sequence format as a change of one
binary between sequences would be 000 −001 −011 −010 −110 −111 −101 −100. In the case
of n-input variables in the truth table, these would correspond to 2n boxes in K-maps. Hence,
developing a reduced I/O Boolean function would consist of:
1) Constructing the truth table.
2) Selecting an appropriate K-map with 2n boxes for n inputs from the truth table.
3) Applying the gray code sequence for the row and column designations of the K-maps.
4) Copying the 1s and 0s from the output locations in the truth table to the corresponding
boxes in the K-maps. If the variable is undetermined, an output value X should be assigned
in that box.
5) Encircling all adjacent 1s in the same column and in the same row of the K-maps.
6) Writing the Boolean function and the product term for each circle (group).
7) Simplifying the resulting I/O functions by retaining only the common variables. Undeter-
mined logic output variables X can be discarded in the minimization process. In this case,
the resulting set of product terms would be combined using an OR logic function to derive
the minimized Boolean function.
8) Writing SOPs for all previous Boolean expressions to derive an I/O Boolean function (sum
of the common variables from each group).
K-maps can be used for up to eight input variables. Above that, the simpliﬁcation can be
readily programmed by a computer-aided design tool such as Quine-McCluskey’s technique,
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

290
6 Boolean-Based Modeling and Logic Controller Design
Table 6.3 Truth table for three inputs and one output.
A
B
C
Y
0
0
0
0
0
0
1
0
0
1
0
1
0
1
1
0
1
0
0
1
1
0
1
0
1
1
0
1
1
1
1
1
Table 6.4 Corresponding K-map for three inputs.
BC
A
00
0
1
0
1
11
0
1
01
0
0
10
1
1
in order to determine a minimum SOP expression as a sum of minterms, or Petrick’s technique,
in order to determine all possible minimum SOP solutions. Tables 6.3 and 6.4 provide examples
of a three-input-and-one-output truth table and its corresponding K-map.
Using the grouping method for a simpliﬁed SOP, the Boolean equation for each group is:
Group (in green) =A(BC) + A(BC)with (BC)as common variables
Group (in blue) =(A)B(C) + (A)B(C)with (AC)as common variables
Group (in red) =(AB)(C) + (AB)(C)with (AB)as common variables
The simpliﬁed SOP Boolean expression is:
Y = BC + AC + AB
6.2.2.2
Sequential Modeling Tools: Sequence Table, Switching Theory, and State Diagram
For all discrete events within each operating cycle, the operating sequence can be summarized
into a sequence table containing, for each sequence, information related to the input transi-
tion conditions and the energized or de-energized system output values. I/O Boolean functions
characterizing the sequence table can be determined as follows:
1) List in a table all input and output devices involved in process operations, with their respec-
tive logic variables. If possible, add information regarding the types of operating modes (level
or push) and their initial conditions.
2) From the process functional analysis, construct the sequence table for each operating cycle
such that the operating sequences are listed in chronological order in the ﬁrst column. In
the following columns, list their corresponding activated system inputs and the logic value
for each system output, respectively.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

6.2 Generic Boolean-Based Modeling Methodology
291
3) From the analysis of the sequence table, search for any change in a set of system output values
that has the same combination of input values but results in diﬀerent system output values.
Those identical sequences (i.e. where the same previous sequence output values along with
the same system inputs cause diﬀerent system outputs) lead to a confusing situation where
input variables identical to previous sequence output values can set out more than one set
of system output values.
4) In order to diﬀerentiate the identical sequences from all other sequences in the operating
cycle, as many virtual output variables as necessary can be created.
5) For each system (virtual and real) output variable, derive the I/O Boolean function by iden-
tifying the input transition conditions and the output and virtual variables that need to be
activated or deactivated (i.e. turn those variables ON and OFF) such that:
Outputi[1] =
∑
all input transition conditions activating Outputi
(6.3)
While:
Outputi[0] =
∏
all input transition conditions deactivating Outputi
(6.4)
Then:
Outputi = (Outputi + Outputi[1]) • (Outputi[0])
(6.5)
Example 6.1
Consider a system with two logic input variables (push buttons START and
STOP) that are used to activate and deactivate the system output variable MOTOR_STARTER.
This deﬁnes the process state of the motor ON or OFF, as deﬁned in Table 6.6.
In the case of the motor starter, MOTORSTARTER[1] = START and MOTORSTARTER[0] = STOP,
the I/O Boolean function will result in:
MOTORSTARTER = (MOTORSTARTER + MOTORSTARTER[1]) • MOTORSTARTER[0]
= (MOTORSTARTER + START) • STOP
This logic-based method of process modeling allows a system output to be turned or main-
tained at zero (OFF), especially when there is a conﬂict between input transition conditions
(e.g. pushing start and stop in the same time).
Another method to capture the behavior of discrete event systems is the state diagram. A state
diagram is a graphical technique that depicts the behavior of discrete event systems through an
evaluation of the state output change under a speciﬁc activation of input transition conditions.
Two types of diagrams may be used: (i) the Moore type, where the state output value depends on
the present state; and (ii) the Mealy type, where the state output value depends on the present
state as well as the state input transition conditions. The drawing of a state diagram requires
the following assumptions: (i) state transitions are only activated by the system input status
change; (ii) a system is always in one state and only one state; (iii) states are described as the
combination of state output values; (iv) states are equivalent if the same system inputs produce
an identical combination of state outputs; (v) with n system inputs, there must be at least 2n
outgoing arrows per circle (state); and (vi) system input variables are classiﬁed into either (a)
the level-type operating mode, where the input transition condition (value) is maintained as
active until the state output value changes (e.g. a light switch with a spring to hold position)
or (b) the pulse-type operating mode, where the input transition condition actuates the state
output and returns to its initial condition immediately after (e.g. emergency stop of machine
tools). The Moore and Mealy state diagrams allow the derivation of I/O Boolean functions based
on the type of solid-state device chosen (e.g. ﬂip-ﬂops and latches). A simpliﬁed version of
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

292
6 Boolean-Based Modeling and Logic Controller Design
Table 6.5 State table based on a Mealy machine.
Present state
System input
Next state
System output
Table 6.6 Truth table of a starter motor.
START
STOP
MOTOR STARTER
0
0
MOTOR_STARTER
0
1
0
1
0
1
1
1
0
a state diagram may also be used for discrete event systems, as it can easily be converted into
programming languages using the transition equation method. All of these state diagrams are
presented in this section. First, a general procedure to sketch state diagrams consists of the
following steps:
1) Identifying all system inputs that cause process transitions (e.g. sensing devices, control
panel push buttons, etc.), as well as all system outputs (actuating devices, control panel light
indicators, etc.).
2) Establishing a list of all system operating sequences as a sequence table or all possible inputs
combination that activate system outputs as a truth table.
3) Deﬁning a state as a combination of system outputs that are activated by a set of process
inputs.
4) Constructing a state (excitation) transition table with at least three columns: present state
(the value for each possible state at time t); system input (all possible input transition con-
ditions); and next state (the value for each possible state at time t + 1). Based on step 3, a
column capturing system output may be added, as illustrated in Table 6.5. The next state is
deﬁned using solid-state devices.
5) Converting the present state variable values, the system input, and the next state into binary
values using the gray code sequence format.
Example 6.2
Revisiting Example 6.1, the relationship between those variables is given
through the truth table operating conditions as presented in Table 6.6. By choosing a
D-ﬂip-ﬂop, the corresponding state transition table can be derived, as depicted in Table 6.7.
Hence, the resulting K-maps can be obtained as illustrated in Table 6.8; an example of the
logic circuit equivalent is display in Figure 6.2.
Applying the SOP method, the I/O Boolean yields:
MOTORSTARTER = START • STOP + MOTORSTARTER • STOP
= (MOTORSTARTER + START) • STOP
Using the D-ﬂip-ﬂop, considering N as the number of system states (system output combi-
nation) and n as the number of ﬂip-ﬂops, the design rule is given by:
2n ≥N
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

6.2 Generic Boolean-Based Modeling Methodology
293
Table 6.7 State transition table of a starter motor.
Process inputs
MOTOR_STARTER
Present state (Q[t])
START
STOP
MOTOR_STARTER
Next state (Q[t + 1])
D
MOTOR STARTER
0
0
MOTOR STARTER
0
0
0
1
0
0
0
1
0
1
1
0
1
1
0
0
1
0
0
1
1
1
0
1
0
0
1
1
0
1
1
1
1
1
0
0
Table 6.8 K-maps of starter motor.
MOTOR_STARTER STOP
00
01
11
10
START
0
0
0
0
1
1
1
0
0
1
D
Q1
Q1
MOTOR_STARTER
CLK
START
STOP
MOTOR_STARTER + START
Figure 6.2 Logic circuit of motor starter with a D-ﬂip-ﬂop.
Here, with n = 1, the D-ﬂip-ﬂop gate output can be summarized as:
Q1(t + 1) = START • STOP + Q1(t) • STOP = (Q1(t) + START) • STOP
As such:
D = (Q1(t) + START) • STOP = (MOTORSTARTER(t) + START) • STOP
6) From the ﬁnite-machine type chosen (Mealy or Moore), constructing either: (a) a state table
based on the Mealy machine with four columns: (1) present state, q; (2) process inputs (xiyi);
(3) next state, for example, illustrated by (q0, 0); and (4) system output (value of the system
output); or (b) a state table based on the Moore machine, with the particularities of qxx and
Z being, respectively, the state (present or next) values and the system output values. This is
illustrated in Tables 6.9 and 6.10.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

294
6 Boolean-Based Modeling and Logic Controller Design
Table 6.9 State table based on the Mealy machine.
xiyi
q
00
01
11
10
q0
q0, 0
q0, 1
q1, 0
q0, 1
q1
q0, 1
q1, 0
q1, 1
q1, 0
Table 6.10 State table based on the Moore machine.
xiyi
q
01
01
11
10
Z
q00
q00
q01
q10
q01
0
q01
q00
q01
q10
q01
1
q10
q01
q10
q11
q10
0
q11
q01
q10
q11
q10
1
7) Sketching the state diagram by representing the system states with circles, each arrow corre-
sponding to each possible input transition condition. An example of a Mealy state diagram
is illustrated in Figure 6.3, where the process state changes from state 1 to state 2 due to the
activation of the input transition condition, causing the process output to be set at 0, as illus-
trated in Figure 6.3. In the case of a Moore state diagram, the process outputs are indicated
within the state, as they are independent of the input transition condition.
8) Applying the binary coding on system input transition conditions and state outputs. They
are usually written above each arrow and separated by a slash (/), as depicted in Figure 6.3(b)
and (d)
Using the sequence table, and in order to avoid confusion as in the case of a system operating
with multiple alternative sequences, the system state change from input transition conditions
and energized outputs could be reduced through the sketching of a simpliﬁed state diagram.
Figure 6.4 depicts the generic sketching rules of a simpliﬁed state diagram. Here, through the
construction of arrows leaving and arriving, each state, i (Si), can be sketched as such: (i) arrows
arriving to Si correspond to those input transition conditions that turn ON state Si and keep
it ON while deactivating a preceding state of Si; (ii) all arrows leaving Si correspond to input
transition conditions that turn OFF Si and activate a following state of Si.
Hence, the sketched state diagram described in Figure 3.5 can be converted into Boolean
functions using:
STATEi =
(
STATEi +
n
∑
j=1
(Ti,j • STATEj)
)
•
m
∏
k=1
(Tl.k • STATEl+1,k)
(6.6)
Om =
∑
Sstate Om energized
(6.7)
with
m∏
k=1
(
Tl.k • STATEl+1,k
)
being all next states and involved input transition conditions deac-
tivating the STATEi, while
n∑
j=1
(Ti,j • STATEj) is all previous states and involved input transition
conditions that activate the STATEi. Recall that STATEi represents the state of the system at
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

6.2 Generic Boolean-Based Modeling Methodology
295
State 1
State 2
A/0
(a)
(b)
(c)
(d)
B/0
Input transition condition/system output value
q0
q1
00/0
01/1,
10/1
11/0
11/1
11/1
State 1
[0]
State 2
[1]
11
A,B
A,B
Input transition condition 
Activated system outputs
Corresponding
State output
value
01/0
10/0
q10/1
01,10
00
11
00/0
11
00,01
q11/1
q10/0
q00/0
00
01,10
11
11
00
01,10
Figure 6.3 (a) Mealy state diagram. (b) Mealy state diagram with binary coding. (c) Moore state diagram.
(d) Moore state diagram with binary coding.
Sm
Sk
Si
Sx
Sy
Sw
Sj
Previous states 
Si/Sj//../Sk
Present
state Sm
Next states 
Sw/Sx/…/Sy
Om = 1
RL = 0
¨¨
Om = 0
RL = 0
¨¨
Om = 0
RL = 1
¨¨
Om = 0
RL = 0
¨¨
Om = 1
RL = 1
¨¨
Om = 1
RL = 1
¨¨
Om = 0
RL = 0
¨¨
Input transition 
conditions from k to m
Energized
state outputs
i → m
j → m
k → m
m → y
m → x
m → w
Figure 6.4 Generic state diagram sketching.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

296
6 Boolean-Based Modeling and Logic Controller Design
S0
S1
START • STOP
STOP
MOTOR_STARTER = 1
MOTOR_STARTER = 0
Figure 6.5 A two-state motor starter state diagram.
the ith operating sequence characterized by all the output logic values, n is the number of input
transitions leading to the ith state, m is the number of input transitions out of the ith state, Ti, j
is the logical input conditions of a transition from the jth state to the ith state, and Ti, k is the
logical input conditions of a transition from the ith state to the kth state. If it is not possible
to reach a state, a virtual intermediary state with identical output values to the preceding state
should be created and inserted between the two.
Example 6.3
Recall Example 6.1 on the motor starter system. The corresponding state dia-
gram is illustrated in Figure 6.5, such that Motorstarter = 0 is in state 0 (S0) and Motorstarter = 1
in state 1 (S1). A system state change occurs only when the start push button is activated, while
simultaneously the stop push button is not activated (START • STOP). The system returns to
its initial system state 0 only when STOP = 1.
Here, applying Equation (3.9) for two states, S0 and S1, leads to Boolean equations describing
S0 and S1 such as:
S0 = (S0 + S1 • STOP) •
(
S1 • START • STOP
)
S1 =
(
S1 + S0 • START • STOP
)
•
(
S0 • STOP
)
In order to solve these Boolean equations, it will be necessary to have the initial conditions of
each state and the order of execution. Equation (3.5) can only be applied if such information is
not available, otherwise, once the state I/O Boolean functions are described, the system outputs
can be deﬁned as functions of the states. Using Equation (3.10), it can be found that the system
output (MOTORSTARTER) (MOTOR STARTER) is ON in state 1 such that:
MOTORSTARTER = S1
Substituting MOTORSTARTER into S1 (S0 being discarded, as there is no output variable acti-
vated), this equation yields:
MOTORSTARTER = (MOTORSTARTER + START • STOP) • STOP
which can be simpliﬁed into:
MOTORSTARTER = (MOTORSTARTER + START) • STOP
With this method, the I/O Boolean functions are directly obtained from the state diagram
with little eﬀort. Instead of hardwired solid-state device implementation as in the previous
example, this I/O Boolean function can be implemented using a software-based logic pro-
grammable device. However, some safety measures should be inserted to prevent overlapped
sequence execution. This could be done by ensuring suﬃcient elapsed time of transition
between multiple new and old states during the activation and deactivation of output devices.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

6.3 Production Systems
297
In the following sections, illustrative design steps of logic controllers for several industrial
processes are presented, from system functional analysis to formal modeling, based on the
following methodology list:
1) process schematics;
2) I/O involved equipment listing;
3) table of sequence or truth table;
4) switching theory or state diagram;
5) state transition table and K-maps;
6) I/O Boolean function;
7) timing diagram;
8) logic control circuitry.
6.3
Production Systems
6.3.1
Portico Scratcher
Consider a four-stage pozzolana removal process as depicted in Figure 6.6. First, by pushing
StartPB, the scratcher driven by motors M5 and M6 positions itself transversally just above
the pozzolana stockpile. Then, while the secondary and primary arms, driven by the activation
of motors (M2A and M3A), are moving down over the pozzolana stockpile, the motors (M1
and M4) scratch the pozzolana from one side to another, up to the conveyor, for 139 s. After a
short stop, the motor contactors M2A and M3A reposition for 2 s farther down the pozzolana
stockpile. Then, for another 139 s, M1 and M4 scratch the pozzolana. This scratching stage lasts
until the primary arm reaches the lower-level limit switch LS1. Here, both motor contactors
M2B and M3B are activated to retract simultaneously until the secondary arm reaches the upper
position given by LS2. At this position, motors M5 and M6 move to a new transversal position
above the pozzolana and the scratching stage of the process can restart up to the lower-level
limit switch LS1. The conveyor belt collects the pozzolana scratched continuously toward the
next cement-drying station.
+
+
+
+
CONVEYOR
LS1
Auto
Man.
Stop
M1
M2
M3
M4
Start
LS2
Primary
arm
Secondary
arm
M2
M1
M6
M3
M5
M4
Figure 6.6 Schematic of the cement pozzolana scratching process.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

298
6 Boolean-Based Modeling and Logic Controller Design
Table 6.11 Equipment involved in the cement pozzolana scratching process.
Input equipment
Symbol
Output equipment
Symbol
Start push button
Start
Transversal motion motors
M5, M6
Stop push button
Stop
Control panel Stop red LED
L1
Portico transversal position switch
PD
Control panel Start green LED
L2
Primary arm lower-position switch
LS1
Clockwise motion (up) of primary arm (M2)
M2B
Secondary arm upper-position
switch
LS2
Anticlockwise motion (down) of primary
arm (M2)
M2A
Timer delay 1 (139s)
T[139]
Clockwise motion (down) of primary arm
(M3)
M3A
Timer delay 2 (2s)
T[2]
Anticlockwise motion (up) of primary arm
(M3)
M3B
Scratching motors (pozzo removal)
M4, M1
Timer1
T1
Timer2
T2
Table 6.12 Sequence table for the cement pozzolana scratching process.
Inputs
Outputs
Sequences
START
STOP
LS1
LS2
PD
T[139]
T[2]
M1
M2
M5
Dir
T1
T2
M2A
M2B
Transversal motion
1
0
0
1
0
0
0
0
0
1
0
0
0
0
0
Moving down
0
0
0
0
1
0
1
0
1
0
0
1
0
1
0
Scratching and
removal
0
0
0
0
1
1
0
1
0
0
0
0
1
0
0
Moving down
0
0
0
0
1
0
1
0
1
0
0
1
0
1
0
End scratching and
removal pass
0
0
1
0
0
0
0
0
1
0
1
0
0
0
1
End of rising
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
The equipment involved is listed in Table 6.11. From the functional analysis, the sequences of
the pozzolana scratching process are presented in Table 6.12. It should be noticed that motors
(M3 and M2), (M1 and M4), or (M5 and M6) run simultaneously, usually in the same direction,
except for M2 and M3, which run in the opposite direction. Only M2 and M3 are bidirectional
motors; thus, M2 has two motor contactors (M2A, M2B; for down motion, M2A is ON when
DIR is set to 0, while for up motion, M2B is ON when DIR is set to 1) and M3 has two motor
contactors (M3A and M3B). Therefore, the number of outputs can be reduced from eight to six.
The transversal positioning is discarded in the sequence table (Table 6.12). The activation of the
photodetector (PD=1) indicates that the scratcher is over the pozzolana and needs transversal
repositioning.
From an analysis of the sequence table with switching theory, the I/O Boolean equation yields:
M1 = (M1 + T[139] • T[2]) • STOP
M1 = (M1 + T[139] • T[2]) • T[2] • T[139]
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

6.4 Biomedical Systems
299
M2 = (M2 + T[2] • PD • LS2 • T[2] • T[139] + LS1)
• T[139] • T[2] + T[2] • PD • LS1 + LS2
M5 = (M5 + LS2) • T[2] • PD • LS2
R1 = (R1 + T[2] • PD • LS1) • LS2
The state diagram derived from the sequence table (Table 6.12) is depicted in Figure 6.7(a),
while the resulting timing diagram is shown in Figure 6.7(b). Equivalent I/O Boolean functions
can also be obtained from this state diagram.
6.4
Biomedical Systems
6.4.1
Robot-Assisted Surgery
A robot-assisted laparoscope-based surgery for an incisional biopsy operation consists of
removing a fragment of tissue for pathological diagnosis. After patient positioning, the
preparatory phase consists of anesthesiological injection into the patient tissue area. Then,
a robot arm with a manipulator tool performs the skin incision. The four robotic arms (two
manipulators: one for the cutting operation and one for laparoscope handling) are inserted
into the patient in the docking phase. Once docking around the speciﬁc organ is complete, the
surgeon completes the biopsy from the remote console operation. If necessary, the drainage
tools are also inserted. After biopsy operation (cutting of tissue or anatomical specimen), an
undocking phase allows the retrieval of anatomical specimens by returning the robotic arm to
its initial position. Finally, the suture operation is performed. Once complete, the patient can
be safely transferred to the recovery room in the post-operating phase. The apparatus used is
depicted in Figure 6.8(a).
Activation of the start button causes the robot arm motor extension (MT) to be energized
by the contactor (KME) such that the piston rod of robot arm 1 extends it for a 2 s time delay
(T1∕TD[10 sec]). When the time delay occurs, the robot arm is extended from level 1 (EX0) to
reach level (EX1) as an overhaul docking approach. Then, the motor-driven cutter (biopsy) MT2
contactor (KMB) is activated while the piston rod of the robot arm simultaneously advances
halfway up (EX2). At this position, the motor (MT2∕KMB) is de-energized while activation of
the contactor (KMR) forces the rod to retract up to its initial position (EX0), where the contactor
(KMR) is deactivated. The system remains at rest awaiting reactivation of the Start push button.
It should be noticed that this biopsy operation is done between the incision operation and the
suturing or skin closure operation. The system depicted in Figure 6.8(b) has one cycle made up
of six (06) sequences, as presented in Table 6.13.
Recall that the major steps in the formal modeling process consist of: (1) the identiﬁcation of
sequences causing binary change (between levels 0 and 1); and (2) the identiﬁcation of prob-
lematic sequences, either (i) those having a similar input combination causing diﬀerent system
outputs while having an identical previous output combination (this is called the input dif-
ferentiation problem) or (ii) those duplicated sequences having a similar output combination
resulting from identical input conditions and previous output combinations (this is called the
output diﬀerentiation problem). If there is any such case, virtual variables should be added to
diﬀerentiate between these events. This analysis is summarized in Table 6.14. Furthermore, it
is convenient to include the Stop push button in the resulting Boolean function as a mandatory
interlocking operation.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

300
6 Boolean-Based Modeling and Logic Controller Design
Transversal 
Motion (s1)
Moving
down (s2)
Scratching & 
Removal (s3)
End scratching &
Start rising
(s4)
End 
rising
(s5)
PD•T[139]
LS2
(a)
(b)
M5 = 1
T1 = 1
M1 = M4 = 1
T2 = 1
M3B = M2A = 1
T1 = 1
PD•T[2]
PD•T[2]
M2B = M3A = 1
LS1
LS1
Start•LS2
Time [s]
Trans. photodetector
Motor 2 c. clock (up)
Motor 2 clock (down)
LS1
LS2
M1
M2
M2A
Seq. 1
Seq. 2
Seq. 3
Seq. 4
Seq. 6
M5
Upper limit switch
Start push button
Motor 1
Time delay [2 s]
Timer 1
Motor 5
Direction motion
T1
Seq. 5
T[139]
T[2]
Start
Dir
PD
Time delay [139 s]
Lower limit switch
Figure 6.7 (a) State diagram of the cement pozzolana scratching process. (b) Timing diagram of the cement
pozzolana scratching process.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

6.4 Biomedical Systems
301
Surgery tools
library
Used tools
MTR1A
MTR2A
MTR4A
MTR3A
MTR8A
MTR5A
Camera1
MTR6A
MTR1B
MTR2B
MTR4B
MTR3B
MTR8B
Camera2
MTR7B with
position encoder
MTR7A with
position encoder
(a)
(b)
Right-hand
joystick
Left-hand
joystick
1.235 x
4.568 y
1.114 z
Surgeon manipulating panel
Start
incision
s2
End incision
and Start docking
s3
Start
docking
and counting
s4
End docking
and Start biopsy
s5
End biopsy and 
start undocking
s6
Rest
s1
T1 = 0
MT = 1
KME = 1
KMB = 0
KMR = 0
V = 0
Stop
T1 = 1
MT = 0
KME = 0
KMB = 0
KMR = 0
V = 1
T1 = 0
MT = 0
KME = 0
KMB = 0
KMR = 0
V = 0
T1 = 0
MT = 1
KME = 0
KMB = 0
KMR = 1
V = 0
T1 = 0
MT = 1
KME = 1
KMB = 1
KMR = 0
V = 0
T1 = 0
MT = 1
KME = 1
KMB = 0
KMR = 0
V = 0
Stop
Stop
Stop
Start
Start•TD[10]
Start •EX2
Start •EX1
EX0
Figure 6.8 (a) Robot-assisted biopsy surgery. (b) State diagram of the robot-assisted biopsy operation.
(c) Timing diagram for the robot-assisted biopsy process.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

302
6 Boolean-Based Modeling and Logic Controller Design
Stop
Start
EX1
EX2
KME
Seq .2
Seq .3
Seq. 4
(c)
Seq .5
Time [s]
MT
T1
V
Extension level 1 
Start
Stop
Extension level 2 
Motor arm extension
Motor powered
Virtual
Motor arm retraction
KMR
Seq .1
Seq .6
TD[10]
Delayed timer
Time delay
KMB
Motor biopsy
Figure 6.8 (Continued)
Table 6.13 Equipment involved in the biopsy operation process.
Input equipment
Symbol
Output equipment
Symbol
Start push button
Start
Downward robot arm motor 1 (MT1)
KME
Stop push button
Stop
Upward robot arm motor 1 (MT1)
KMR
No extention
EX0
Biopsy motor 2 (MT2)
KMB
Extention level 1
EX1
Counter on/oﬀ
CT
Extention level 2
EX2
Timer on/oﬀ
T1
Counter up
CM1
Position motor-powered
MT
Timer delay
TD[10]
Biopsy motor-powered
MT2
Using the state diagram method, after completing the functional analysis of the drilling
machine process, the process can be described through six system states, as depicted in
Figure 6.8(b). Hence, the I/O Boolean equations will result in:
KME = (KME + TD[10]) • (S1 + S2) • STOP
MT = (MT + TD[10]) • (START + S2) • STOP
KMR = (KMR + S1) • (S2 + S1) • STOP
T1 = (T1 + V • START) • (V + TD[10]) • STOP
V = (V + START) • TD[10]
TD[10] ≡Timercpt
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

6.4 Biomedical Systems
303
Table 6.14 Sequence table analysis for the drilling machine process using the switching theory (check
correctness).
Input devices
Output devices
Changing
Virtual
Sequences
Start
EX0
EX1
EX2
TD[10]
KME
KMB
MT
KMR
T1
OP
OP
M
D
T1
V
Rest
0
0
0
0
0
0
0
0
0
0
0
Start incision
1
0
0
0
0
0
0
0
0
1
X1
X1
1
End incision and
start docking
1
0
0
0
1
1
0
1
0
1
X0
X1
0
Stop docking
1
0
0
0
0
1
0
1
0
0
X1
X0
X1
0
Start biopsy
1
0
1
0
0
1
0
1
1
0
X0
X1
X0
0
End biopsy and
undocking
1
1
0
1
0
0
1
1
0
0
0
Rest
0
0
0
0
0
0
0
0
0
0
0
Usually, I/O Boolean functions derived from the sequence table approach have fewer Boolean
functions than those of the state diagram. Hence, the sequence table method is suitable for
logic control programs with a smaller size or shorter execution time. However, the state dia-
gram oﬀers much more (straightforward) Boolean equations that are easily used to validate the
process operation modeling. The corresponding timing diagram is sketched in Figure 6.8(c).
6.4.2
Laser Surgery Devices
Carbon dioxide laser-based surgery is a medical operation where a laser cuts tissue by emit-
ting an intense beam of light, irradiating it through a photochemical eﬀect. Such an operation
follows the sequence of: (i) positioning the laser over the area to be treated using a motorized
reﬂector (mirror) to incise the patient’s skin; (ii) tissue dissection by heating, which starts by
varying the wavelength, pulse frequency, and light power; (iii) heating, which continues until
the tissue is vaporized when the temperature of the treated area reaches a set value (as detected
by thermosensor); and (iv) coagulation of the tissue, which is produced by varying the wave-
length up to level 2 (WAVEL2). Consider a laser-based tumor tissue treatment as illustrated in
Figure 6.9(a), whose devices are listed in Table 6.15.
Typical surgical routine procedures are, sequentially, incision and drainage, central line place-
ment, biopsy or tissue evaporation, and, ﬁnally, wound closure or laceration repair by coagula-
tion, to stop bleeding. Initially, during tumor tissue-based treatment, the laser beam is activated
(CR1 = 1) once mirror positioning is complete, as indicated by the low photodetector (PD = 1).
Then, the laser beam wavelength is set to level 2 (CR2 = 1) when the treated area tempera-
ture rises to the temperature given by thermodetector level 2 (TD1 = 1). This corresponds to
the coagulation and temperature reduction processes, which are summarized in Table 6.16.
Here, the control relay for the inﬂow of the laser beam is always activated once the Start but-
ton is pushed. Detectors (PD) and (TD1) operate on level mode. A memory function may be
required to maintain the laser beam to level 2 until the burning temperature given by (TD1) is
reached.
From the sequence table analysis, only (CR2) changes its logic output value (activated/
deactivated). A timer is used so that the coagulation phase is processed once a thermodetector
(TD1) detects the upper tissue evaporation temperature limit. In order to ensure proper
treatment time, the laser beam is alternately activated and deactivated every 15 s for a total
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

304
6 Boolean-Based Modeling and Logic Controller Design
Skin layer #2
Skin layer #3
Laser light
transmission
Laser light
reflection
Laser light
refraction
Laser light
absorption
Laser light
Scaterring
(diffusion)
Skin layer #1
Skin layer #1
Skin layer #2
Skin layer #3
Blood vessels 
qirradation
qevaporization
Thermal diffusion
up to melting
temperature
Focus lens
Scanner
Pulse
based
Laser
Local human
tissue with tumor
Laser beam
Skin layer #1
Skin layer #2
Skin layer #3
Optical
properties
of
laser beam
generation
and
transmission
Heat
transfer
properties
over
human tissue
tumor
depth
Wavelength (frequency)
Power source
Super
luminescence
diodes
Zoom area
Figure 6.9 Laser surgery operating schematic.
Table 6.15 Equipment involved in a toxic liquid treatment tank.
Input equipment
Symbol
Output equipment
Symbol
Start push button
START PB
Control relay 1 heating laser beam activated
CR1
Mirror position
photodetector
PD
Control relay 2 coagulating laser beam
wavelength level 2
CR2
Thermodetector
TD1
Wavelength level 2 LED indicator
WAVEL2
Table 6.16 Sequence table analysis for a toxic liquid treatment tank.
Input devices
Output
devices
Analysis
Sequences
START PB
TD1
PD
CR1
CR2
Changing
Virtual
1) Laser positioning and skin incision
1
0
1
1
0
X
2) Tissue dissection by heating
1
0
0
1
0
3) Tissue vaporized
1
1
0
1
0
X
4) Tissue coagulated
1
0
0
1
1
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

6.4 Biomedical Systems
305
period of 200 s. The resulting I/O Boolean equations are given by:
CR1 = (CR1 + START PB) • TD1
WAVEL2 = CR1
From sequence table analysis, only CR2 changes its logic output value (activated/deactivated),
so that TD1 = 1 is required for CR2 = 1, resulting in CR2[1] = TD1, while TIMER[15s] = 1 is
required for CR2 = 0, causing CR2[0] = TIMER[15s]. Hence, using the equipment listed before,
the I/O Boolean function for CR2 yields:
CR2 = (CR2 + CR2[1]) • CR2[0]
Thus:
CR2 = (CR2 + TD1) • TIMER[15s]
TIMER200 sec
LASER ON = TIMER[200 s]
TIMER15SEC = TIMER[200 s]
In the state diagram format, with S2 = CR2 and S1 = CR2, using Equation (3.9), the state
Boolean function would lead to:
S2 = (CR2 + TD1 • S1 • TD1 • PD • S2) • (PD • S1)
which is equivalent to:
CR2 = (CR2 + TD1 • CR2 • TD1 • PD • CR2) • (PD • CR2) = CR2 + TD1 • PD
The equivalent Mealy and Moore state diagrams are depicted in Figures 6.10 and 6.11. The
transition table could be derived as summarized in Table 6.17.
Figure 6.10 Mealy state diagram of the laser
surgery process.
S2
S1
TD1
TD1 • PD
CR2 = 0
CR1 = 1
CR2 = 1
CR1 = 1
CR2 = 1
Tissue coagulating
S3
11
CR2 = 0
Positioning 
and incision
S0
00
S1
01
CR2 = 0
Dissection by
heating
CR2 = 1
Tissue 
vaporizing
S2
10
TD1 • PD
State n°
Q1Q0
Output status
State description
Input transition
conditions
TD1 • PD
TD1 • PD
TD1 • PD
Figure 6.11 Moore state diagram of the laser surgery process.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

306
6 Boolean-Based Modeling and Logic Controller Design
Using the current state (Q1, Q0), TD1, and PD from the state transition table (Table 6.17), it
is possible to ﬁll the corresponding value of the next state (CR2) in the excitation table. This is
equivalent to the Karnaugh table summarized in Table 6.18.
The corresponding state transition table for the laser surgery processes whose operating
sequences are summarized in Table 6.17 is given in Table 6.19.
Using the sequence table, the corresponding K-map is summarized in Table 6.20.
Using the D-ﬂip-ﬂop, the state Boolean function is given by:
CR2(t + 1) = TD1 + CR2(t) • PD = CR2(t) • PD • TD1 + CR2 • TD1 • PD
Table 6.17 Laser surgery process state transition table.
State
(Q1, Q0)
TD1
PD
Next state
(Q1, Q2)
Corresponding
output (CR2)
00
0
0
01
0
01
1
0
10
0
10
0
0
11
1
11
0
1
00
1
Table 6.18 Corresponding K-maps of the laser surgery process.
TD1 PD
00
01
11
10
(Q1, Q0)
00
1
X
X
X
01
X
X
X
0
11
X
1
X
X
10
1
X
X
X
Table 6.19 Laser surgery process state transition table.
CR2(t)
TD1
PD
CR2(t + 1)
0
0
0
1
1
1
0
1
1
0
0
0
0
0
1
0
Table 6.20 Corresponding K-maps.
TD𝟏PD
00
01
11
10
CR2
0
1
0
X
X
1
0
X
X
1
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

6.5 Transportation Systems
307
6.5
Transportation Systems
6.5.1
Elevator Motion Systems
Consider a three-ﬂoor elevator system as depicted in Figure 6.12(a). The elevator starts an up or
down motion when a direction (Up or Dn) is selected. When the elevator reaches the requesting
ﬂoor, the cabin gate opens (OG) for 30 s and then closes (CG). Then, based on the selection
of the ith ﬂoor by the Pbi (Pb1, Pb2, or Pb3) selected, the motor contactor for the selection
direction (M1 or M2) turns on until the corresponding ﬂoor limit switch SWi (SW1, SW2, or
SW3) is activated. Then, the motor stops (M1 or M2 deactivated) and the cabin gate opens for
another 30 s, after which it is closed (CG). The gate detector (GPD) is used to activate the gate
opening contactor by detecting person presence over the gate ramp. Also, when the elevator
is waiting at a speciﬁc ﬂoor level, pressing the same ﬂoor level push button will keep the door
open. Otherwise, it will request that the elevator moves to this speciﬁc level. In order to model
such an elevator system, I/O Boolean functions can be derived from the combinational logic
based on either a truth table covering all possible ﬂoor selections or advanced ﬂoor-counting
strategies and computing devices.
For space reasons, only a two-ﬂoor elevator motion cycle (ﬂoor 1–ﬂoor 2 and ﬂoor 2–ﬂoor 1)
is considered and analyzed here, using a sequence table and a state diagram. In order to reduce
the number of variables, it is considered that the ﬂoor selection combines two variables: the
direction and the selected ﬂoor level. For example, pushing button Pb1 activates Pb1 and Dn,
while pushing button Pb2 activates Pb2 and Up. Table 6.21 lists the equipment involved.
I/O Boolean equations derived from the sequence table established in Table 6.22 are:
OG = (OG + Pb1 + SW2 + Pb2 • T[30s] + SW1 • D1) • AU • T[30s]
CG = (CG + T[30s]) • AU • T[30s]
The I/O equations with respect to the time diagram are:
MTRUP = M1 = (M1 + SW1 + T[30s] + V3) • AU • SW2
MTRDOWN = M2 = (M2 + SW2 + T[30s] + V4) • AU • SW1
T1 = (T1 + Pb1 + SW2 + Pb2 • T[30s] + SW1 • V5) • T[30s]
Using the following virtual output variables, their Boolean equations yield:
V1 = (V1 + SW1) • T[30]
V3 = (V3 + SW1 • T[30s]) • (SW2 + T[30s])
V4 = (V4 + SW1 • T[30s]) • (SW2 + T[30s])
V5 = (V5 + SW1) • T[30s]
An equivalent state diagram is sketched in Figure 6.12(b). Notice that the state diagram oﬀers
wider and easier modeling options as more than one operating cycle can be represented. The
corresponding system-state Boolean equations yield:
W1 = (W1 + D • SW1 + C1 • (Pb1 + GPD)) • SW1 • T[30s]
C1 = (C1 + SW1 • SW1 • T[30]) • Pb2 • SW1 • (Pb1 + GPD)
U = (U + C1 • Pb2) • SW2
W2 = (W2 + U • SW2 + C2 • SW1 • (Pb1 + GPD)) • SW2 • T[30s]
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

308
6 Boolean-Based Modeling and Logic Controller Design
(a)
(b)
motor
motor
Power supply
Counter
weight
sw3
sw2
sw1
Cabin
passenger
OG
CG
MTR_up
MTR_down
G_PD
up
down
up
down
up
down
3rd floor
pb_1
pb_2
pb_3
pb_1
pb_2
pb_3
pb_1
pb_2
pb_3
2nd floor
1st floor
W1
000
C1
100
U
110
W2
001
C2
101
D
111
Gate opening 1st floor
T1 = 1 (for 30 s)
OG = 1
System resting 1st floor
Gate closing
CG = 1
Motion up
M1 = 1
CG = 1
Motion down
M2 = 1
CG = 1
Gate opening 2nd floor
T1 = 1 (for 20 s)
OG = 1
System resting 2nd floor
Gate closing
CG = 1
SW1 •(Pb1 + UP + GPD)
Pb2 + UP
Pb2 + SW2
SW2 •( Pb2 + DN + GPD)
Pb1 + SW1
SW2 •T[30]
SW1 •T[30]
Pb1 + DN
SW1
SW2
Figure 6.12 (a) Three-ﬂoor elevator system. (b) State diagram of a two-ﬂoor elevator system (UP/DN is
optional). (c) Elevator timing diagram. (d) Circuit logic of a two-ﬂoor elevator system. (e) Connection diagram of
the crane motion logic control system.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

6.5 Transportation Systems
309
(c)
(d)
T[30s]
UP/PB2
DN/PB1
SW2
SW1
Seq 2 Seq 3 Seq 4 Seq 5
Seq 8
Time [s]
OG
CG
Selecting down
Selecting up
Level 2 sensor
Level 1 sensor
Closed gate
Open gate
Up motion motor
Down motion motor
M2
Seq 1
Seq 7
Seq 6
Seq 9 Seq 10 Seq 11
M1
T1
Timer
GPD
Gate detector
Opening gate delay
T S
R
D1
Q
0
T S
R
D3
0p
Q
0
T S
R
Q
0
Timer
T S
R
Q
0
Fp
T S
R
Q
0
Montee
T S
R
Q
0
Descente
T S
R
Q
0
1 2 3 4 5 6 7 8
Figure 6.12 (Continued)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

310
6 Boolean-Based Modeling and Logic Controller Design
(e)
CR_close_gate
Output module
O.0
O.1
O.2
O.3
O.4
O.5
O.6
O.7
(Control relay)
(Outputs addressing)
Data
processing
and 
computing
module
I.5
I.1
I.2
I.3
I.4
I.5
I.6
I.7
sw1
sw2
sw3
pb1_up
pb2_up
pb2_down
pb1_down
pb3_up
pb3_down
Memory
module
Programming
unit
Power
module
CR_open_gate
CR_moveup
CR_movedown
Figure 6.12 (Continued)
Table 6.21 Equipment involved in a three-ﬂoor elevator system.
Input equipment
Symbol
Output equipment
Symbol
Selecting up motion
Up
Bidirectional open cabin motor
OG
Selection down motion
Dn
Bidirectional closed cabin motor
CG
Level 1 sensor
SW1
Bidirectional up motor
M1
Level 2 sensor
SW2
Bidirectional down motor
M2
Level 3 sensor
SW3
Timer [ON/OFF]
T1
Calling for ﬂoor 1
Pb1
Calling for ﬂoor 2
Pb2
Calling for ﬂoor 3
Pb3
Timer delay 1
T[30]
Emergency stop
AU
Cabine gate photodetector
GPD
C2 = (C2 + W2 • SW2 • T[30]) • Pb1 • SW2 • (Pb2 + GPD)
D = (D + C2 • Pb1) • SW1
with the system output Boolean equations given by:
CG = C2 + D + C1 + U
OG = W1 + W2
M1 = U
M2 = D
T1 = W1 + W2
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

6.5 Transportation Systems
311
Table 6.22 Sequence table analysis of a two-ﬂoor elevator system using switching theory.
Input devices
Output devices
Changing
Virtual
Sequence
GPD SW1 SW2 Pb1 Pb2 T[30] OG CG M1 M2 T1
OG CG M1 M2 T1 V1 V3 V4 V5
Rest
0
1
0
0
0
0
0
1
0
0
0
0
0
0
0
Selecting and
door open
1
1
0
0
1
0
1
0
0
0
1
X1
X1 0
0
0
0
Door closed
1
0
0
0
0/1 1
0
1
0
0
0
X0
X1
X0 0
0
0
0
Move up 1 →2
0
0
0
0
0/1 0
0
1
1
0
0
X0 X1
0
0
0
0
Door open
0
0
1
0
0
0
1
0
0
0
1
X1
X0
X1 0
1
1
0
Door closed
0
0
1
0
0
1
0
1
0
0
0
X0
X1
X0 0
1
1
0
Selecting and
door o
1
0
1
1
0
0
1
0
0
0
1
X1
X0
X1 0
1
1
0
Door closed
0
0
1
0/1 0
1
0
1
0
0
0
X0
X1
X0 0
1
1
0
Move down
2 →1
0
0
0
0/1 0
0
0
0
0
1
0
X0
X1
0
0
0
0
Door open
0
1
0
0
0
0
1
0
0
0
1
X1
X0
X1 1
0
0
1
Door closed
0
1
0
0
0
1
0
1
0
0
0
X0
X1
X0 1
0
0
1
Rest
0
1
0
0
0
0
0
1
0
0
0
X0
0
0
0
0
Table 6.23 Listing of input and output devices involved in an automated
fruit-picker system.
Input equipment
Symbol
Output equipment
Symbol
Middle range sensor
MR
Product output solenoid
S
Low range sensor
LR
Re Scan
R
These logic functions should be equivalent to the I/O Boolean functions derived from the
sequence table analysis using switching theory. The resulting timing diagram and logic con-
troller circuit are depicted in Figures 6.12(c) and (d), while the wiring diagram when controlled
by a programmable logic controller is shown in Figure 6.12(e).
D = (D + C2 • Pb1) • SW1
6.5.2
Fruit-Picker Arm
Consider an automatic robot-assisted fruit-picker system with input and output devices as sum-
marized in Table 6.23. Depending on the position of the fruit with respect to the robot arm,
either the low or the middle range is activated, as depicted in Figure 6.13(a).
Table 6.23 can be converted into the process formal model using a Moore state diagram, as
shown in Figure 6.13(b), or an equivalent Mealy state diagram, as shown in Figure 6.13(c).
Using the gray sequence coding of system state outputs and input transition conditions as
summarized in Table 6.24, it is possible to describe the process using a Moore state diagram
with binary coding, as shown in Figure 6.14.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

312
6 Boolean-Based Modeling and Logic Controller Design
EV1
Electro-valve
(AV2, RET2)
Compressor
Image 
recognition
detector
D1
Picking arm
Oil
Reservoir
9.4 bar
17.4 bar
Hydraulic
Cylinder HC1
MTS
LR
LR
LR
MR
LR
MR
LR
Possible motion
options
zoomed
(a)
(b)
P00 
PR1
PR2
CT
LR
LR
LR + MR
RES
Fruit 
suction
RT
RES
RES
MR
MR
(c)
P00
[0]
PR1
[0]
PR2
[0]
CT
[1]
RES/0
RES/0
MR/0
(output)
R/01 
(input transition
condition)
MR/0
LR •MR + S/0 
LR/0 
LR/0 
LR •MR + R/1 
RES/0
LR •MR/0 
LR •MR/0 
LR •MR/0 
Figure 6.13 (a) Robot-assisted fruit picker. (b) Moore state diagram. (c) Equivalent Mealy state diagram.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

6.5 Transportation Systems
313
Table 6.24 Binary coding of input transition conditions and fruit-picker
system states.
Fruit position
>200 cm
200 cm
100 cm
0 cm
State
P00
PR1
PR2
CT
Binary coding
00
01
10
11
Pulse motion
CASE1
00
LR
LR
LR
CASE2
MR
MR
LR
CASE3
LR
MR
MR
Binary coding [DN]
00
01
10
11
P00
[0]
PR1
[0]
PR2
[0]
CT
[1]
RES/0
RES/0
10/00
(output)
01/01
(input transition
condition)
10/00
01 •10 + S/00 
01/00 
01/00 
01 •10 + R/1 
RES/0
01 •10/00
01 •10/00
01 •10/00
Figure 6.14 Equivalent Mealy state diagram with binary coding.
Alternatively, from the system I/O binary coding, it is possible to describe the process using
the state transition table and D-ﬂip-ﬂop depicted in Table 6.28. Therefore, K-maps can be used
to derive the corresponding I/O Boolean functions, as shown in Tables 6.23–6.28.
6.5.3
Driverless Car
A typical driverless vehicle contains the following embedded mechatronic systems: (i) antilock
brake system (ABS), allowing the wheels to smoothly stop their rotation when a mechan-
ical brake is activated; (ii) traction control system (TCS); (iii) vehicle dynamics control
(VDC); (iv) electric ignition for fuel air combustion; (v) engine management and transmission
control; (vi) airbag activation; (vii) air-conditioning system; (viii) seat-belt control; (ix) mirror
Table 6.25 D1 Karnaugh table.
10
10
1
1
X
1
11
11
1
1
X
1
01
01
0
1
X
1
00
00
Q0Q1
DN
0
0
X
1
D1 = Q1 + D + Q0N.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

314
6 Boolean-Based Modeling and Logic Controller Design
Table 6.26 D0 Karnaugh table.
10
01
0
1
X
1
11
11
1
1
X
1
01
01
1
0
X
1
00
00
Q0Q1
DN
0
1
X
0
D0 = Q0N + Q0N + Q1N + D.
Table 6.27 Open output Karnaugh table.
10
10
0
0
X
0
11
11
1
1
X
1
01
01
0
0
X
0
00
00
Q0Q1
DN
0
0
X
0
Open = Q1Q0.
Table 6.28 State transition table with a D-ﬂip-ﬂop gate.
Present
state
Inputs
Next
state
Present
state
Q1
Q0
MR
LR
Next
state
D1
D2
Output
Open
P00
0
0
0
0
P00
0
0
0
0
1
PR1
0
1
0
1
0
PR2
1
0
0
1
1
CT
X
X
X
PR1
0
1
0
0
P00
0
1
0
0
1
PR1
1
0
0
1
0
PR2
1
1
0
1
1
CT
X
X
X
PR2
1
0
0
0
P00
1
0
0
0
1
PR1
1
1
0
1
0
PR2
1
1
0
1
1
CT
X
X
X
CT
1
1
0
0
P00
1
1
1
0
1
PR1
1
1
1
1
0
PR2
1
1
1
1
1
CT
X
X
X
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

6.5 Transportation Systems
315
Ultrasound
signal (<2kHz)
Distance, h
Sender
Receiver
Echo
Sender2
Receiver
Sender3
Receiver
ID: Interferometer
distance detector
US: ultrasonic 
detector
CV: computer
Vision detector
BS: Braking
system
Figure 6.15 Unmanned vehicle with embedded navigation free collision system.
control; (x) instrument cluster; (xi) climate and vehicle front light activation control; (xii) park
distance control system; (xiii) self-parallel parking, averaging fuel tank level; (xiv) alcohol test
and engine activation; (xv) windows lift systems; and (xvi) obstacle-free and anti-collision
navigation system. In that regard, regulatory and safety policies require that vehicles are
reliably collision-free and that aerial and terrestrial unmanned mobile devices have reliable and
robust-proven obstacle detection and anti-collision systems to ensure free navigation. Hence,
this embedded free navigation system should relay on three sensors to provide information on
the distance and number of nearest objects detected along the navigation path. The object dis-
tance is assessed using three diﬀerent distance measurement technologies: a computer vision
detector (CV); an ultrasonic detector (US); and an interferometer distance detector (ID), as
depicted in Figure 6.15. The brake system (BS) of the unmanned vehicle is energized if any of the
detectors is actuated. All detectors are normally closed-contact switches connected in series.
Hence, they maintain the BS output energized status even in the event of a detector elec-
tric circuit wiring failure (open switch contacts, broken wire connections, open relay coils,
burned fuses, etc.). In short, the BS should be open if and only if two of the three detectors
(CV, ID, US) acknowledge an object within the unauthorized distance range. This is considered
to be a three-inputs and one-output combinational system, as described by the eight combina-
tions of the truth table in Table 6.29.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

316
6 Boolean-Based Modeling and Logic Controller Design
Table 6.29 Truth table when two out of three detectors are checked.
ID
US
CV
Output (BS)
0
0
0
0
0
1
0
0
0
0
1
0
1
0
0
0
Pr od1 = ID • US • CV
1
1
0
1
Pr od2 = ID • US • CV
1
0
1
1
Pr od3 = ID • US • CV
0
1
1
1
Prod4 = ID • US • CV
1
1
1
1
SOP = Pr od1 + Pr od2 + Pr od3 + Pr od4
Here the I/O relationship is given by:
Output(BS) = ID • US • CV + ID • US • CV + ID • US • CV + ID • US • CV
In case there are more output conditions than inputs, it is suitable to use the POS method
to derive an I/O Boolean function. Here, for each ith row of the truth table, the logic input
combination activating any output is given by:
Sum(i) =
∑
inputs
(6.8)
Hence, the POS method captures the Boolean relationship between all input combinations
activating a jth output by:
Output(j) = POS =
∏
j
sum(i)
(6.9)
This could be implemented using an OR gate feeding into an AND gate (series collection of
parallel connected relays). If it is desired to have an unmanned vehicle with a free navigation
system and outputs such as object presence detector failure detection in addition to BS acti-
vation, the POS method could be as summarized in Table 6.30. Recall that if two of the three
Table 6.30 Truth table when using a virtual disagreement detector.
ID
US
CV
Output (BS)
Detector disagreement
0
0
0
0
0
Sum1 = ID • US • CV
0
1
0
0
1
Sum2 = ID • US • CV
0
0
1
0
1
Sum3 = ID • US • CV
1
0
0
0
1
Sum4 = ID • TD • CV
0
1
1
1
1
Sum5 = ID • TD • CV
1
1
0
1
1
Sum6 = ID • TD • CV
1
0
1
1
1
1
1
1
1
0
POS = Sum1 • Sum2 • Sum3 • Sum4 • Sum5 • Sum6
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

6.6 Fail-Safe Design and Interlock Issues
317
detectors (ID, US, CV) acknowledge a true object presence, the BS is open and the failure of
one of three detectors is assumed as a detector disagreement. When detector outputs are all in
logic level 0 or 1, all detectors agree. From the truth table in Table 6.30, there are two outputs
(but six output activation combinations) and three inputs. The implementation of this detector
disagreement is expected to oﬀer a safer logic execution of process control.
6.6
Fail-Safe Design and Interlock Issues
The fail-safe design principle ensures a continuous execution of system operation in the event
of predeﬁned automation system component failure. This makes its control system as tolerant
as possible to likely wiring or component failures. Applications of fail-safe design are critical
in the generation and distribution of electric power to hospital facilities, telecommunications
systems, water treatment systems, inner-city traﬃc lights, highway automated gates, and other
important social infrastructures. Here, large circuit breakers are opened and closed by electrical
control signals from protective relays. In the event of excessive current, the relay should be cho-
sen such that its switch contact could be open to interrupt a signal while initiating a redundant
alternative power source almost at the same time. Hence, this would be done with no disrup-
tion of service supply. The interlock design principle consists of setting a preventive action and
technology to ensure no harm comes to the shop-ﬂoor operator and there is no destruction of
involved system equipment. This is done through a set of detectors/sensors that activate system
interruption in the case of predicted failure. Thus, the interlock design consists of implementing
some interlocking switches at key locations in the system plan layout with deﬁned activation
rules.
Usually, some system operating safety measures are implemented through a three-
hierarchical SFC level that could be described as follows: (i) a safety SFC (GS) managing
process safety modes such as emergency start, general process faults, process initialization,
after process defaults start, and so on; (ii) traded SFC (GT) deﬁning the type of operational
modes such as overall process start and selection of types of modes (semi-automatic, manual,
automatic); and (iii) SFC operational modes such as the manual operation SFC (GM) or the
production SFC (GPNA).
6.6.1
Logic Control Validation (Commissioning)
General speciﬁcations of automation system commissioning can be summarized through a set
of test protocols regarding: (i) each hardware and software automation system component;
(ii) an integrated software and hardware automation system (especially for data processing) for
normal production operation conditions and for compliance between control and command
execution of automated system actions before changing operating conditions, such as the speed
variation control of a motor; (iii) assessment of operating system conditions (e.g. check detec-
tor activation condition); (iv) interlock assessment ahead of system failure, such as operator
security and detector activation; (v) whole automation system commissioning and compliance
tests of electrical wiring; and (vi) ﬁnal electrical wiring diagrams and power ﬂow diagram com-
missioning. In the case of hardwired circuit design, the process simulation for the designed
logic controller could be validated through computer tools such as Verilog, ABEC, VHDL, and
PALASM.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

318
6 Boolean-Based Modeling and Logic Controller Design
Exercises and Problems
1) Derive a logic circuitry using an R-S logic gate from the following Boolean function:
Light = (Light + PD) • ENGINEIGNITION
2) Consider the anti-braking system given in Figure 6.16, where, the accumulator oil
level detector is designed to activate the pump (M_PUMP) at high level (L1) and
deactivate it at low level (L2) when the speed wheel is not at rest (WS). Design a logic
control algorithm for this anti-braking system.
3) Derive a logic circuitry using an R-S logic gate from the following Boolean equation:
M = (M + Td[5s] • SW1) • SW1 • SW2 • STOP
4) Derive the I/O Boolean function corresponding to the logic circuitry for the control
of a delayed motor pump (M_PUMP), as illustrated in Figure 6.17.
5) It is desired to control battery overcharging and discharging from a solar cell in
order to keep the battery charged at peak level without overcharging, as depicted in
Figure 6.18. It is recommended that you never discharge a deep-cycle battery below
50% of its capacity, in order to signiﬁcantly extend its life. Based on detectors for
low and high (L50, L95) battery charging levels, a cut-oﬀof the battery from load
voltage (BLS: a logic variable for the system related to a battery low-voltage switch)
is activated. Also, in solar normal insulation conditions, solar cells generate a voltage
high enough to charge batteries. However, if the solar cell voltage is lower than
the required battery charging voltage, the charging current should be zero, as it is
blocked by the diode. Among connected loads, there are lighting and alarm systems.
Consider process input variables (L50, L95) interfacing with the logic controller and
process output variables controlling the relay of power cut-oﬀto load (BLS) and bat-
tery charging-only light indicators (LBC: a logic variable for the light indicator of a
battery). For any change in input combination, the values are captured by the truth
table in Table 6.31.
a) Derive the simpliﬁed I/O Boolean functions from the truth table and K-maps, if
necessary.
b) Build the equivalent logic circuitry.
Wheel 
speed
Vehicle wheel
Brake
Accumulator
Motor
pump
Chamber 
w/piston
Pedal
Applied
force
Pressurized 
fluid
Voltage
Electro-valve
(EV1)
Electro-valve 
(EV2)
Level
Control panel
w/logic controller
Figure 6.16 Vehicle anti-braking system.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
319
S
Q
Q
M_PUMP
R
L2
RUN
L1
Td (5 s)
WS
Figure 6.17 Logic controller circuit for a delayed pump activation of an anti-braking system.
Solar panel
Lithium ion
Battery
Power
converter
Lighting 
system
Alarm
system
Control panel
w/logic controller
Battery 
charging level
(L50, L95)
Battery load
switch (BLS)
Solar
radiation
Figure 6.18 Battery charging process.
Table 6.31 Truth table of process outputs.
L50
L95
BLS
LBC
0
0
1
1
0
1
0
0
1
0
0
1
1
1
0
0
c) How could this logic control system be modiﬁed to consider the variation of solar
insinuation with respect to a consistent battery charging process? (Hint: ensure
continuous battery charging process).
6) Considering the Karnaugh table of a battery lighting system (CR_LOAD) with two
inputs (L50, L100) given in Table 6.32, derive the resulting I/O Boolean function.
6.1
Consider an automatic-fastening seat belt, ignition interlock, and seat-belt warning sys-
tem consisting of a sound alarm and a seat belt control relay, which are activated if
an occupant is detected by an occupant position sensor (oS) (i.e. the driver seat only;
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

320
6 Boolean-Based Modeling and Logic Controller Design
Table 6.32 K-maps of a motor starter system.
L100 L50
00
01
11
10
CR_LOAD
0
0
0
X
1
1
1
0
0
1
Table 6.33 Truth table of a belt fastening process.
Ignition key
sensor (iS)
Occupancy
sensor (oS)
Fastening belt
switch (AS)
Car horn
(CH)
Belt fastening
motor (BFM)
Comment
0
0
0
0
0
No alarm
0
0
1
0
0
No alarm
0
1
0
0
0
No alarm
1
0
0
0
0
No alarm
1
1
0
0
0
No alarm
1
0
1
1
1
Intrusion
0
1
1
1
1
Intrusion
0
0
1
0
0
Alarm active
1
1
1
1
1
Intrusion
passenger is not included at this time) upon activation of the ignition key sensor (iS)
when the key is turned. A furthermore, the fastening active switch (AS) is used to acti-
vate/deactivate the alarm once the safe system conditions are satisﬁed. The truth table
in Table 6.33 summarizes the three inputs (an occupancy seat-belt switch, ignition key
sensor, and fastening active switch) and two car alarm outputs (fastening motor and com-
bined ignition interlock and car horn).
a) By examining the truth table, derive the I/O Boolean functions.
b) Derive the equivalent logic circuit for the fastening seat belt, ignition control, and
alarm warning system. For further safety compliance, it is desired to expand the sys-
tem for all three passengers. Update the truth table and the I/O Boolean equations
accordingly.
c) Consider that such a system would tighten the seat belt in the case of crash occur-
rence. Then, the seat belt goes from normal (NS) to severe (SF) fastening level. This
is presumably activated either by a sudden brake (SB) or by the front car collision
sensor (CS). Adapt the truth table accordingly, and design the logic control circuitry.
Combine it with the logic control system found in (a) and (b).
6.2
Consider the automatic activation of a vehicle’s adaptive front lighting system based
on environmental and climate conditions, as depicted in Figure 6.19. Here, lights are
turned on and kept ON when any of certain surrounding weather conditions are met.
The control method for the lamp should include the distance of the oncoming vehicle,
illumination in the vicinity, and the decision on whether to use a high or a low beam.
It is also considered that there are two possible light intensity levels: low medium (LL)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
321
1
Dark
sensor
(UDS)
ZOOMED
CONTROL SYSTEM
0
HL
LL
UDS
HL
LL
Sun 
irradiation
+ 9.3 V
+ 4.7 V
PD:
Photo-
detector
adiation
PD:
D:
D:
D:
D:
D:
D:
D:
D:
D
Photo
+ 4.7 V
R1
R2
CR:control
relay
Figure 6.19 Automatic vehicle adaptive front lighting system.
Figure 6.20 Equivalent state diagram for automatic
lightning system.
S1
S2
S3
HL = 1
LL = 0
HL = 0
LL = 1
HL = 0
LL = 0
UDS
UDS
UDS
UDS
and high-intensity (HL), based on a dark sensor (UDS: a logic variable for an ultraviolet
light dark sensor). Considering the state diagram in Figure 6.20, migrate the logic control
circuitry accordingly.
It is desired to adjust the light beam from a high to a low intensity level if an obstacle
appears at a distance from 5 to 50 m. Also, the light activation should consider the dis-
tance of the oncoming vehicle and illumination in the vicinity to adjust the use of a high
or a low light beam. Describe how this logic control could be adapted.
6.3
Consider the two state diagrams depicted in Figure 6.21(a) and (b). Write the feasible
I/O Boolean states and the output equations describing them.
6.4
A logic circuit for the activation and deactivation of a remotely controlled electric
motor-driven pump is illustrated in Figure 6.22. Here, the motor is energized by three
digital sensors: an infrared remote control source facing a photodiode (PD), a switch
turned ON, and a limit switch LS set always to 1. These signals are connected to a
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

322
6 Boolean-Based Modeling and Logic Controller Design
(a)
(b)
00
01
10
RUN
RUN
BRAKE•RUN
ABS = 0
TIMER = 0
ABS = 0
TIMER = 1
ABS = 1
TIMER = 0
TIMER[2sec]
0 €
0.05 €
0.10 €
N + D
N
D
R
0.15 €
N
D
N + D
Figure 6.21 (a) Anti-braking system state diagram. (b) Four-state vending machine state diagram.
Hot water 
tank
Tw(t)
Motor
pump
Glass
Collector
Water
supply
LS
+ 4.7 V
PD
Sun 
irradiation
SW: Start push button
PD: photo detector
LS: limit switch for water collector level
R
R
+ 4.7 V
R
EV1
+ 4.7 V
SW
.25 R
3.5 R
Always set to high (= 1)
Figure 6.22 Motor-driven pump control circuit.
two-input AND gate, all corresponding to an I/O logic Boolean function that can be
summarized by:
MOTOR = Switch • PD
It is desired to upgrade the circuit of logic control for motor pump switching opera-
tions, according to the truth table in Table 6.34, including deactivation operations (e.g.
PD being OFF and switch set to 1).
a) Derive the upgraded I/O Boolean function of this system corresponding to the truth
table in Table 6.35.
b) Build the circuit to implement the logic controller derived in (a).
6.5
Consider a pedestrian road crossing with individual lamp adjustment of three unknown
variables LAMP1 (green), LAMP2 (amber), and LAMP3 (yellow). The controller logic
operates based on possible values of input-variable push buttons PB1 and PB2, as
shown in Table 6.34. For example, when LAMP1 is set to 1, neither button is pushed.
When LAMP3 is set to 1, either button is pushed. When LAMP2 is set to 1, both
buttons are pushed. Using the truth table in Table 6.34, derive the I/O multiple Boolean
equations.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
323
Table 6.34 Truth table of outputs LAMP1, LAMP2, and LAMP3.
PB1
PB2
LAMP1
LAMP2
LAMP3
0
0
1
0
0
1
0
0
0
1
0
1
0
0
1
1
1
0
1
0
Table 6.35 K-maps of a starter motor system.
PD SWITCH
00
01
11
10
MOTOR
0
0
0
X
X
1
X
X
1
1
Powertrain
(transmission) 
Front 
gear
Front wheel
Rear wheel
Car 3-speed motor
contactor SC 1,2,3
Permanent
Light PL
Flash 
light, RL
Flash 
light, FL
Flash 
light, FR
Flash 
light, RR
Start
Stop
Right
Left
Direction
wheel contactors
Permanent
Stop light
SL
Detectors box
FPS, SPS1-2, FD
RPS, DD, ND, 
VLD
SD, JD, TLD1-2-3
Break
contactor BC
Car 3-speed moto
contactor SC 1,2,3
light, RL
f
Lef
Left
Flash
light
L
Flash
Figure 6.23 Driverless car system.
6.6
Consider a driverless car with an automatic speed direction and crash avoidance system,
and the generic navigation state diagram depicted in Figures 6.23 and 6.24. The input and
output variables used to model this system are depicted in Table 6.36. Key vehicle main-
tenance fault detectors (for engine, ﬂat tire, etc.) have been discarded for simpliﬁcation.
It is assumed that the car trajectory is known in advance.
a) Based on the GPS-given trajectory, derive a sequence table.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

324
6 Boolean-Based Modeling and Logic Controller Design
FWRD
S1
S3
S4
S2
WS = 1
WTL = 1
WBCK = 1
WBCK = 1
WTR = 1
Figure 6.24 State diagram for an anti-collision system in a driverless car.
Table 6.36 Equipment involved in an electric driverless car motion control system.
Input devices
Symbol
Output devices
Symbol
Start push button
Start
Left ﬂash light indicators (rear and front)
RL, FL
Stop push button
Stop
Right ﬂash light indicators (rear and front)
RR, FR
Front position sensors
FPS
Car direction motor contactor
MC
Side position sensors 1, 2
SPS1, SPS2
Car three-speed motor contactor
SC1, 2, 3
Relative position sensor
RPS
Break contactor
BC
Front car presence detector
FD
Permanent light
PL
Side car presence detector
SD
Car direction motor contactor for backward motion
WBCK
Traﬃc light detector (R,Y,G)
TLD1, 2, 3
Car motor contactor for motion to the right
WTR
Junction detector
JD
Car motor contactor for motion along a straight line
WS
Day and night detectors
DD, ND
Car motor contactor for motion to the left
WTL
Visibility length detector
VLD
b) Based on the state diagram in Figure 6.24, complete with I/O variables for such car
crash avoidance processes (Hint: s1, s2, s3, s4 are left forward, left backward, right
forward, right backward, respectively).
c) Derive an equivalent I/O Boolean function.
6.7
Consider the thermal control laser-based cutting machine depicted in Figure 6.25. Here,
once the Start push button is activated, the cutting process consists of positioning the
motorized laser mirror at a predetermined angle 𝜃by moving from position PD1 toward
PD2 using a motor contactor (KM1), while the focus lens position is maintained at PD0.
Once PD2 is activated, the focus lens (MTL) moves from PD0 to PD3 and the laser
beam is generated from power-supplied (KMP) activation of timer T1 for 2 s (T2 s).
Then, the mirror is positioned to PD1 by the motor contactor (KMR). Based on the
sequence table in Table 6.37, derive the equivalent I/O Boolean functions. A speciﬁc
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
325
Power
supply
(KMP)
Laser
diode
Thermosensor
camera (TC)
PD0
PD3
PD2
PD1
θ
Mirror positioning
motor (MTM)
Laser beam
Focusing lens 
motor (MTL)
Focal 
length
Workpiece
Support
Mirror
Figure 6.25 Laser-based cutting system.
Table 6.37 Sequence table of the laser-based cutting process.
Input devices
Output devices
Sequences
Start
Stop
T[2s]
PD1
PD2
PD0
PD3
KMP
KM1
MTL
KMR
T1
TD
1) Rest
0
0
0
1
0
1
0
0
0
0
0
0
0
2) Start
1
0
0
1
0
1
0
0
1
0
0
0
0
3) Advance to PD2
0
0
0
0
0
1
0
0
1
0
0
0
0
4) PD2 activated
0
0
0
0
1
1
0
0
1
0
0
1
0
5) Focus lens advance
PD0 to PD3
0
0
0
0
0
1
0
0
0
1
0
0
0
6) PD3 activated
0
0
0
1
0
0
1
0
0
1
0
0
0
7) Laser cutting for
2 s (Timer ON)
0
0
0
0
1
1
1
1
0
1
1
0
8) Timer delay oﬀ
0
0
1
1
0
1
1
1
0
1
0
1
1
9) Retract to PD0
0
0
0
1
0
0
0
0
0
1
1
0
0
10) Retract to PD1
0
0
0
1
0
0
0
0
0
0
1
0
0
melting temperature detected by the thermal sensing camera could also interrupt the
cutting process. Operating sequences are summarized in Table 6.37.
6.8
.a) Write an assembly language program that computes the following control equation:
A1 ←(A2 + B • C) • D + E
with data memory locations of A1, A2, B, C, D, and E (0001, 0010, 0011, 0100, 0101,
and 0110, respectively).
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

326
6 Boolean-Based Modeling and Logic Controller Design
Motor
Nut
Bearing
Machine table
with clamps
Computer controller
with counter
Leadscrew
Stop PB
Start
Run
Halt
Start_PB
Stop_PB
Halt
Run
Clock
Position
feedback Cn
Voltage 
output mn
LS2
–IR (receiver)
LS1 
-IR (receiver)
Interrupt logic input
Amplifier
IR (emitter)
piece
Coupling
(pulley)
MTR
(Tools)
Figure 6.26 Logic control of system for screw table motion system.
b) Write an assembly language program that computes A × B using addition operations
within a register.
c) Consider the screw table motion system illustrated in Figure 6.26. When the Start
button is pushed, the Halt lamp is turned OFF while the RUN lamp is turned ON
and the motor contactor (KM) is energized to provide an output voltage m(n) to the
stepper motor. The motor contactor (KM) is deactivated when either limit switch
LS1, limit switch LS2, or the Stop button is activated. This also sets the Run lamp
OFF, while the Halt lamp turns ON. In order to design a logic controller, write two
assembly language programs: (i) using the asynchronous mode, where the system is
synchronized with external event occurrence using an interrupt program; and (ii) for
the synchronous mode where the system uses a clock signal to ensure synchronization
with an event occurrence.
6.9
Recall the system where a motor rotates by one angular increment in position whenever a
pulse is received at its Step_motion() input signal. The Dir_motion() input signal deter-
mines the rotational direction (logic level 0 for counterclockwise motion, logic level 1
otherwise).
a) For a motor resolution of 250 steps per revolution, design a logic controller to perform
a three-quarter revolution in a clockwise direction and two revolutions in another
direction. Edit an interrupt-based logic controller program for the system shown in
Figure 3.52 to output signals STEP and DIR (a logic variable for the motor direction
of motion) to the motor. A 1 GHz clock is used to construct interrupts setting STEP
pulse output rate at 50 000 Hz.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
327
+
Motor (MTR)
electrical-driven
garage gate
+
Driven wheel
Driving wheel
D2
D1
Pulley
+
LS_DN
LS_UP
KMU
KMD
Figure 6.27 Automatic garage gate.
b) Consider a 12 cm motion (LS1 to LS2) with a pitch of 6 rev cm−1. Design a logic con-
troller program where LS1 and LS2 are used to reverse the rotational direction of the
motor-driven table.
c) By deﬁning input and output variables and setting their logic addresses, design an
assembly-language program to continually move the table from one limit switch to
another at a constant velocity of 1.8 cm s−1.
6.10
Consider the garage door opener with up and down limit switches (LS_U) and (LS_D)
indicating the bidirectional (with contactors KMU and KMD) motorized garage door
position depicted in Figure 6.27.
a) Sketch a four-state state diagram corresponding to the operation of this garage door
(Hint: states are door open, door opening, door closed, and door closing).
b) Design a logic circuit to perform the required logic function.
c) Design a computer interface develop a corresponding logic control program to per-
form this logic function.
6.11
Pneumatic rubber actuators are used to design a snake-like robot capable of a smooth
motion for the exploration of rugged terrain or of a smooth-walled pipe, as depicted in
Figure 6.28. When the bidirectional motor moves in one direction, this increases pressure
in adhesive segment i (chamber), resulting in its stretching along the joint axial direction,
while extending (reducing pressure) the adhesive segment i + 1 in the opposite position.
The instant direction of the joint actuation motor is given by a pulse width modulation
(PWM)-generated signal. These motorized actuators change the position of the adhesive
segments (chambers), which in turn change their internal pressure in proportion to two
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

328
6 Boolean-Based Modeling and Logic Controller Design
Adhesive
segment i
(chamber)
Synchronized
bidirectional
motors
Adhesive
segment i + 1
(chamber)
T
T
Adhesive
segment i + 2
(chamber)
L
Figure 6.28 Snake robot.
bidirectional motors capable of moving left, right, forward, and backward through the
activation of contactors (KML, KMR, KMF, KMR, respectively).
Anti-collision is based on four obstacle detectors (OBS_L, OBS_R, OBS_F, OBS_B) locat-
ing the obstruction object on the left, right, front, or backside. Such a system can be used
for rescue operations in hazardous environments, and is eﬀective for searches in under-
ground spaces and for disaster victim search inspections over rubble in quake-devastated
zones, both remotely and where limited direct human intervention is possible. If neces-
sary, upgrade the state diagram in Figure 6.29 to ensure a coherent anti-collision snake
robot motion and derive the I/O Boolean functions, subsequently.
6.12
For compliance with driving safety and security regulations, a car engine (AIRBAG) must
validate some checks before it can start. The I/O Boolean function for ENGINE could be
described as:
AIRBAG = (AIRBAG + FCONTACT SW • SCONTACT SW) • BRAKE
a) Develop an high-level language (C, Phyton) or assembly language programs (using
AND? OR, LOAD, etc.) to develop this logic using the I/O interface addresses given
in Table 6.38.
6.13
Consider a solar-powered electric car, as depicted in Figure 6.30. In order to maximize
the battery charging process, it is suitable to ensure maximum solar irradiation expo-
sure despite any possible obstruction (only over xy plan). This is done by establishing
and maintaining an approximately 90∘orientation of the attached solar panel with solar
irradiation. Hence, intermittent panel orientation can be done through two bidirectional
motorized supports, whose direction is activated by the respective contactors (KM1A,
KM1B, KM2A, KM2B, KM3A, KM3B, KM4A, KM4B). These supports allow the two
panel pairs to be positioned along the x- and y-direction based on sunlight detection.
Assume that each 2 s period of activation of the step motor of each panel pair produces
a force capable of moving the panel orientation by 2.5∘in x or y direction.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
329
D_LEFT
D_RIGHT
D_FWD
D_BWD
KMB = 1
KML = 1
KMF = 1
KMR = 1
OBS_F•OBS_L
OBS_L•OBS_R•OBS_F
OBS_R•OBS_B•OBS_F
OBS_B•OBS_R•OBS_F
OBS_F•OBS_L
OBS_F•OBS_L
OBS_R•OBS_L•OBS_F
OBS_R•OBS_B•OBS_R
OBS_F•OBS_L•OBS_B
OBS_F•OBS_L
OBS_F•OBS_R
OBS_B
OBS_R
Figure 6.29 State diagram for snake robot motion.
Table 6.38 I/O interface addresses for a car engine safety program.
Process variables
Variable type: address
bit
AIRBAG
Output: 0 (O/0.0)
0
FCONTACT SW
Output: 0 (O/0.1)
1
BRAKE
Input: 1 (I/1.0)
0
SCONTACT SW
Input: 1 (I/1.1)
1
AIRBAG
Input:1 (I/1.2)
2
It is assumed that the conversion from 2D geodetic coordinate system into geographic
and Cartesian coordinate system is given by:
H = sun to vehicle terrestrial distance
X(t) ≈H cos(lattitude reading) cos(longitude reading)
Y(t) ≈H cos(lattitude reading) sin(longitude reading)
Please note that the latitude and longitude readings are given in degrees.
It is desired to derive a logic control algorithm panel positioning process by performing
time-based ON/OFF step motor operations.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

330
6 Boolean-Based Modeling and Logic Controller Design
Longitude coordinate
Initial positions
Final positions
10101
01100
Latitude coordinate
Longitude coordinate
11100
11001
LAC1
LOC1
LOC2
LAC2
Latitude coordinate
ω1(t)
Solar panels
Spin x-axis
Latitute
sensor (LAC)
Longitude 
sensor (LOC)
Spin y-axis
KM2A
KM3A
KM1A
KM1B
KM2B
KM3A
KM4A
KM4B
Solar radiation
Sky obstruction
% transmitted
radiation
θ(t)
Angle of irradation
with full luminance 
α(t) 
Tracking angle of 
solar panels
y-axis
x-axis
Luminance 
sensor LM1
% reflected
radiation
Luminance percentage
113%
ω2(t)
y-axis
x-axis
Figure 6.30 Satellite with spin-control thrusters.
a) List all involved input and output devices, including those required for the track-
ing system of the panel orientation trajectory (Hint: list any timers and counters
involved).
b) For a xy planar trajectory, develop the sequence table describing the panel positioning
process and the equivalent state diagram.
c) Write states and process-output Boolean expressions from the state diagram.
d) According to (c), write an assembly language program to implement the logic control
algorithm.
e) Write the equivalent ladder diagram.
f) Design a logic circuit to perform the required I/O Boolean functions derived
previously.
g) Sketch the corresponding timing diagram and discuss your logic control algorithm.
Starter 
solenoid (SS)
Motor starter (MTR_ST)
Ignition 
switch (IS)
solenoid
advance
(AV)
solenoid
retreat
(RET)
12VDC
+
–
Contact 
Relay point (CR)
Figure 6.31 Relay-based control logic of a car engine starter.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
331
Table 6.39 Sequence state table for a car engine starter.
System
inputs
System
outputs
Sequences
IS
CR
AV
RET
MTR_ST
1) Solenoid advance
1
0
1
0
0
2) Motor running
1
1
1
0
1
3) Solenoid retreat
0
1
0
0
1
4) Motor driving end
0
0
0
1
0
6.14
The relay logic circuit for a vehicle engine starter is drawn in Figure 6.31, while the oper-
ating sequence is summarized in the sequence table depicted in Table 6.39. It is desired
to migrate the control system of this electromechanical relay-based motor starter into a
logic control algorithm. Here, the activation and deactivation of the start and stop push
buttons are considered as inputs in order to energize and de-energize a 12 V DC starter
motor system.
a) Based on the system schematic and table of sequence, derive I/O Boolean equations
capturing the starter motor operating sequences.
b) Build the equivalent logic control circuit.
c) Write the assembly language program to implement this logic control algorithm.
6.15
Recall the elevator for a three-story building illustrated in Figure 1.8. It is desired to
design a logic controller using: (i) as inputs, three-ﬂoor selection push buttons (Pb1, Pb2,
Pb3) located outside of the elevator at each ﬂoor (instead of Up/Down push buttons) and
three-ﬂoor limit switches located on the ﬂoor strip (sw1, sw2, sw3), and (ii) as the output,
the elevator bidirectional motor (M1, M2).
a) Derive a state diagram for this elevator, ensuring a suitable ﬂoor selection.
b) Derive the corresponding I/O Boolean equations.
c) Develop an equivalent ladder logic program that implements the resulting I/O
Boolean equations.
6.16
It is desired to design a logic controller for a medical tablet press machine, capable of
producing a tablet batch size of 100. A powder processing granulator substation feeds
this machine with granules of a uniform size. Then, the machine presses granules in
20 recipients for 3 s. Afterward, it applies a sweetened paste around the bitter-tasting
tablets in batches of 100, before drying them for 5 min. Eventually, the dried tablets are
collected manually and sent to the quality control station, while the machine is fed with
a new batch of granules. When the start button is pressed, a light green indicator turns
ON. The loading of a new batch of granules is launched on the recipients encapsulated
by a motor-driven wheel, and the motor is actuated until a switch (Switch 1) is closed.
Consequently, for 10 s, the tablet press machine is activated. Then, the motor moves fur-
ther until another switch (Switch 2) is closed, launching the release of the resulting tablet
from the recipient. When the motor displaces the wheel for more than 12 s without
activating the switch (Switch 2), a machine failure occurs, causing the motor to stop and
a red light indicator to turn ON. The remedy operations consist of switching the machine
to its manual operating mode, then reverting it to its initial state and pushing the start
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

332
6 Boolean-Based Modeling and Logic Controller Design
Table 6.40 Some input and output variables involved in an automated drug conditioning
process.
Process inputs
Process outputs
I:1 – start push button
0 ∶1 – green light indicator
I:2 – stop push button
0 ∶2 – machine ON
I:3 – switch 1 – batch of granules out of the recipient
0 ∶3 – red light indicator
I:6 – switch 2 – batch of granules out of the recipient
0 ∶4 – amber light indicator
0 ∶5 – motor ON
button twice. At the end of each successful granule batch process, a counter should
update the count of the drug condition and an amber light indicator should be set ON.
a) Update Table 6.40 of listing of the variables needed to indicate when each state is
ON, as well as any timers and counters used.
b) Draw a state diagram for this drug conditioning process from the injection of the
granules batch into the recipients up to the pressing operation occurring before the
sweet coating operation.
c) Write an I/O Boolean expression for each transition in the state diagram.
d) Sketch a wiring diagram for the programmable logic controller.
e) Write the corresponding ladder logic diagram for the state.
6.17
Consider an electric vehicle (MOTOR) that is energized when a simultaneously recorded
ﬁngerprint (FGP) presses the start push button (START), the driver’s safety belt detector
(BELT) is closed, the in-board engine failure detector (ENGINE) is at level 0, and the
MTR
ENGR1
DS
L1_OPER
L2_BAKE
L3_COOK
PB_BAKE
PB_GRILL
START
STOP
TIMER
60
IL
ENGR2
Figure 6.32 Microwave oven system.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
333
in-vehicle driver alcohol-level breath detector (ATL) has ﬁnished and is OK. The electric
vehicle will turn OFF immediately if the stop push button is activated or an engine prob-
lem is detected.
a) Develop an I/O Boolean equation for this system.
b) Build the corresponding logic circuit for this system, using the D-ﬂip-ﬂop device.
c) Construct the equivalent ladder diagram.
6.18
Figure 6.32 depicts a microwave oven with two mutually exclusive operating cycles: cook-
ing and defrost operating cycles. It is considered that, when the cook cycle selection
(PB_cook) and (START) push buttons are pressed, the microwave emitter (EM), the
light indicator (L_cook), and the motor (MTR)-driven rotating table are energized at
100% power for 90 s. Similarly, if the defrost cycle selection (PB_defrost) and START
push buttons are pressed, the microwave emitter (EM), the light indicator (L_defrost),
and the motor (MTR) driving the rotating table are energized at 60% power for 30 s, then
de-energized for 30 s and re-energized for another 30 s. It should be indicated that: (i) the
cycle selection must be completed before the START push button can be activated; (ii)
the activation of either the PB_cook or the PB_defrost push button during the heating
process will have no eﬀect on the cycle execution; (iii) the last operating cycle selected
is perpetuated from cycle to cycle, except if another selection occurs; (iv) no cycle may
start if the microwave is not properly closed, meaning the door is unlatched (DS = 0);
and (v) when the door is unlatched (DS = 0), an inside microwave light (IL) is energized.
Any activation of the STOP push button or opening of the door (DS) causes an immedi-
ate termination of the operating cycle. L_power and L_prog are light indicators for the
microwave power supply being ON and the heating cycle being in progress, respectively.
a) List in a table all I/O devices involved for both cycles.
b) Establish the sequence table for both cycles.
c) Derive the state diagram and subsequent I/O Boolean functions.
d) Derive the corresponding logic controller program in a ladder diagram.
e) Build the circuitry for the logic controller using a D-ﬂip-ﬂop gate.
Figure 6.33 Mixing tank system.
EV1
EV3
MTR1
LS1
LS2
Liquid level
detector
Input
valve
Input
valve
EV2
Output
valve
Agitator
Mixing liquid
product tank
h(t)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

334
6 Boolean-Based Modeling and Logic Controller Design
6.19
Figure 6.33 illustrates an automatic mixing station. Consider the following operating
sequences:
a) Open valve 1 (EV1) until level 1 (LS1) is reached for the ﬁrst liquid.
b) Then close valve 1 (EV1).
c) Open valve 2 (EV2) until the level of limit switch 2 (LS2) is reached for the second
liquid.
d) Then close valve 2 (EV2).
e) Start the motor (MTR1) and agitate the two liquids for up to 20 min.
f) Then stop the motor (MTR1).
g) Open valve 3 (EV3) for up to 5 min.
h) Then close valve 3 (EV3).
i) Repeat the mixing process.
i) List all I/O devices involved in the mixing process sketch the state diagram
derive the I/O boolean functions corresponding to the operating sequences just
described.
ii) Draw the wiring diagram and the corresponding ladder logic program for this mix-
ing process.
6.20
Consider an automated fruit picker, as shown in Figure 1.21.
The states of the fruit-picking process consist of: (i) State 1, relating to the positioning of
the conveyor and the advance of the robot arm at a feed rate; (ii) State 2, relating to the
pressure-based clamping; (iii) State 3, relating to the robot arm cutting oﬀthe fruit; and
(iv) State 4, relating to the unclamping of the fruit from the robot arm. The cycle then
begins again at State 1.
a) Using the I/O devices shown in Figure 1.21, draw the state diagram for this
fruit-picking process.
b) Derive the equivalent sequence table.
c) Derive the corresponding I/O Boolean functions.
6.21
Figure 6.34 illustrates the 3D printing process on a customized food printing. It is
required to design a logic control for the discrete selection of ingredients in this 3D
customized food printing process. It is recommended to use an ON/OFF control for
the motorized pumps in charge of ensuring the injection of food paste and the heaters.
To position the plate, a table is driven by bidirectional motor (Motor 4A, Motor 4B).
x-axis limit swicthes indicate the table positioning. While bi-directional motor 3 (Motor
3A and Motor 3B) along with bidirectional motor extruder (Motor EL, Motor ER)
ensure positoning over z and x axes respectively. The ingredient ﬂow rate is maintained
constant by the pressure valve.
a) List all I/O process devices involved, with their assigned addresses, and then draw the
wiring diagram schematic.
b) Using the operating conditions present here and the schematic in Figure 6.34, draw
the state diagram and the equivalent sequence table.
c) Sketch the corresponding SFC for this logic, based on the corresponding mnemonics
of process devices.
6.22
Consider an artiﬁcial solar-powered climate system, as depicted Figure 6.35. A
chamber-based indoor climate is deﬁned by a suitable warm temperature and humidity
(i.e. the balance of heat over the oxygen level), promoting the growth of vegetables. It
is suitable to logically control (ON/OFF control) the pump humidiﬁer and heater to
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
335
Heater with 
temperature 
sensor
Pressure
valve
Pressure
valve
Syringe 1
Motor 1
Motor 2
Screw
Nozzle
Syringe 2
Motor 3A
Motor 3B
Motor
extruder
Motor 4
x
y
z
Layer over layer deposit
Extruder drive
Heater with 
temperature 
sensor
Figure 6.34 Three-dimensional printing process.
Fan (air inflow)
θ(t)
Steam with nutriment
control valve
Thermostat
T[°C], T(t)
Humidity
sensor
[% RH], h(t)
Air exhaust
Lighting
LEDs
Mineral
enriched soil
Solar panel
Lithium ion
Battery
Power
converter
Solar
radiation
Lettuce culture
shelves
u(t)
Electric
heater
Figure 6.35 Chamber-based indoor vegetable farming.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

336
6 Boolean-Based Modeling and Logic Controller Design
supply water steam to maintain a speciﬁc humidity, while the solar-powered lamp is
used to heat the chamber. Inside chamber temperature and humidity are sensed using
detectors.
a) List all I/O devices involved in the automatic farming process.
b) Determine the sequence table and ﬁll the corresponding state transition table for this
automatic farming system.
c) Draw the equivalent state diagram.
d) Derive the subsequent state Boolean functions.
Bibliography
1 Alciatore, D.A. and Histand, M.B. (2012). Introduction to Mechatronics and Measurement
Systems, 4e. McGraw-Hill.
2 Ashar, P., Devadas, S., and Newton, A.R. (2012). Sequential Logic Synthesis. Springer.
3 Bemporad, A. and Morari, M. (1999). Control of systems integrating logic, dynamics, and
constraints. Automatica 35 (3): 407–427.
4 Bolton, W. (2016). Mechatronics: Electronic Control Systems in Mechanical and Electrical
Engineering. Pearson.
5 Bollinger, J.D. and Duﬃe, N.A. (1989). Computer Control Machines and Processes.
Addison-Wesley.
6 deSilva, W. (2010). Mechatronics: A Foundation Course. CRC Press.
7 Isermann, R. (2003). Mechatronics System Fundamentals. Springer.
8 Jack, H. (2005). Automatic Manufacturing Systems with PLCs, available at: https://www
.pacontrol.com/download/plcbook5_0.pdf
9 Katz, R.H. and Borriello, G. (2004). Contemporary Logic Design, 2e. Prentice-Hall.
10 Kuphaldt, T.R. (2007). Lessons in Electric Circuits, 4e, vol. IV. Digital.
11 Lampérière-Couﬃn, S. and Lesage, J.J. (2000). Formal veriﬁcation of the sequential part of
PLC programs. In: Discrete Event Systems (ed. R. Boel and G. Stremersch). Springer.
12 Mano, M.M. and Ciletti, M.D. (2006). Digital Design, 4e. Prentice-Hall.
13 Nof, S.Y. (2009). Handbook of Automation. Springer.
14 Olsson, G. (2003). Industrial Automation. Lund University.
15 Petruzella, F.D. (2010). Programming Logic Controllers, 4e. McGraw-Hill.
16 Thayse, A. (1981). Boolean calculus of diﬀerences. In: Lecture Notes in Computer Science,
vol. 101 (ed. G. Goos and J. Hartmanis). Berlin: Springer.
17 Roth, C.H. (2002). Digital System Design Using VHDL. Thomson.
18 Vahid, F. (2007). Digital Design. Wiley.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

337
7
Hybrid Controller Design
7.1
Introduction
Electrical-driven system operations have alternated continuous and discrete characteristic
behavior. These classical operating conditions require the development of hybrid control
strategies in order to maintain a smooth and predictable performance. Due to their digital
nature, the design of a hybrid control algorithm can be associated with a monitoring tool
into a set of decision-making tools ensuring that the process runs safely and reliable decisions
are made in the presence of faults or undesired disturbance. It is expected that such a system
will provide commands based on distributed control-oriented decisions for large-scale plant
operations.
However, the design of monitoring and hybrid control systems is quite complex due to con-
straints related to: (i) the combined continuous and discrete event nature of process operations,
which makes adequate modeling of operating system dynamics diﬃcult; and (ii) the depen-
dency of system data on the sensing and detection methods and technologies used, which can
lead to incomplete and uncertain data as well as a variety of data formats.
In this chapter, an integrated methodology for the design and implementation of monitor-
ing and hybrid control systems for electrical-driven systems and process operations is pre-
sented. First, requirements for the design of the hybrid control system, along with the gathering
and the analysis of the system data structure, are deﬁned. Then, formal system models are devel-
oped to integrate discrete and continuous process operations. This lays the foundation for the
design of the monitoring and hybrid control system. Finally, some case studies on hybrid control
of electrical-driven systems are presented.
7.2
Requirements for Monitoring and Control of Hybrid Systems
Most electrical-driven systems and processes display compound behavior with discrete and
continuous behavioristic characteristics. For each system, an associated controller has to be
designed according to its operating characteristics and performance with respect to productiv-
ity, optimization, reliability, safety, continuous operations, and even stability objectives. Con-
sequently, control of a hybrid system has to adopt integrated logic and continuous control
algorithms as well as supervision programs. These control design objectives are translated into
software, hardware, and mechanical design speciﬁcations to ensure integrability and inter-
operability in terms of diagnostic, monitoring, control, maintenance, predictability, and safety
applications. This chapter will focus on monitoring and hybrid control software integration.
Control Of Mechatronic Systems: Model-Driven Design And Implementation Guidelines,
First Edition. Patrick O.J. Kaltjob.
© 2021 Patrick O.J. Kaltjob. Published 2021 by John Wiley & Sons Ltd.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

338
7 Hybrid Controller Design
The monitoring and hybrid control software speciﬁcations are deﬁned based on a combination
of operational and technical requirements, so that the resulting system can:
1) ensure the real-time safety and predictability of system performance in terms of modeling
the pattern of normal operations;
2) ease system scalability, conﬁgurability, and maintainability by the structural design and tech-
nological classiﬁcation of sensing and data acquisition technology, as well as system data
structure and formatting.
7.2.1
Requirements for Hybrid Control System Design
Mechatronic systems can be modeled as continuous-state systems or discrete-event systems,
leading, respectively, to I/O diﬀerential equations and I/O Boolean functions. Consequently,
control of hybrid system requires: (i) the software integration of logic and continuous con-
trol algorithms, as well as supervision programs, into hybrid control strategies; and (ii) data
integration by the design of built-in interoperability and intelligent information-processing sys-
tems combining multiple functions for control and monitoring decisions. Challenges in the
development of a practical design approach for hybrid control of mechatronic systems and
electrical-driven processes are: (i) to develop a suitable mathematical model capturing their
continuous and discrete event behavioristic characteristics; and (ii) to integrate the control sys-
tems with respect to technological constraints and operational characterization (discrete and
continuous) (e.g. time delays, signal-to-noise ratios, etc.).
7.2.2
Requirements for Operations Monitoring System Design
System operations monitoring is a function that consists of recognizing anomalies in the
behavior of a dynamic system and its underlying faults. Hence, system operation monitoring
for abnormal behavior poses a challenging problem of process operations observability and
diagnosis, which can be approached through full-scale sensor-based process data-gathering
and model-based process data analysis. Commonly encountered system operating monitoring
objectives are:
1) Monitoring the execution of process operations in order to take appropriate counteraction
in the event of abnormal process behavior.
2) Detecting faults from measurable process variables with regard to tolerances, and generating
alarms for the process operator.
3) Diagnosing fault features through symptoms of process anomalies.
4) Selecting remote processing maintenance operations and counteractions to fault
occurrences.
Such hybrid controls for system operations should be able to maintain the process values close
to targeted process values automatically. Subsequently, information related to monitoring and
hybrid control systems acts as variables that can be classiﬁed as follows:
1) Reporting variables related to system data analysis, such as automation ﬁeld device preven-
tive maintenance (e.g. variables indicating detection and diagnosis of a tool failure).
2) Conﬁguration variables related to system operating conﬁgurations, which are parameters
of the operating conditions (e.g. feeding rate, spindle speed, cutting tool geometry, depth
of cut) and controller settings. In addition, some variables and features characterizing the
process performance or product quality (e.g. vibration main frequency or surface roughness)
may be included.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

7.2 Requirements for Monitoring and Control of Hybrid Systems
339
3) Operations monitoring variables related to the execution status of process actuating devices
in real time, without discontinuity.
4) Fault monitoring variables related to safety requirements and fault management, which
include: (i) safety variables to warn against personnel and equipment harm; (ii) performance
variables to monitor process performance degradation; and (iii) fault (anomalies) variables
for the detection and diagnosis of fault occurrence.
5) Control variables related to process command and control operations, which are manipu-
lated input variables of actuating devices.
6) Intermediated variables related to data exchange between the database and the computing
unit (e.g. mean variance in process data analysis routines).
Hence, the control and monitoring software can be divided among the following program
modules:
1) The process conﬁguration module, which contains algorithms related to the deﬁnition of
process operating conditions (logic and feedback), the controller conﬁguration and the tim-
ing or sequential execution of manipulated variables values for process actuators.
2) The process monitoring module, which contains algorithms related to the reporting in real
time of process devices operating status. Some process variables could be estimated from
process data. This should allow remote supervision of execution operations from top man-
agement to ﬁeld operator.
3) The command and control module, which contains hybrid control algorithms (logic and
feedback).
4) The data availability module, which contains algorithms related to ensure availability and
reliability of gathered process data from the data acquisition, transmission and sensing
devices up to the archive in the historical database. Some redundancy strategies can
be used.
Table 7.1 lists typical variables for a monitoring system.
7.2.3
Process Interlock Design Requirements
Based on identiﬁed operating and failure modes, process stop modes are designed as protec-
tive measures to maintain the process equipment under normal physical and safe operating
conditions. These protective measures can be performed by devices or systems providing the
maximum protection with the minimum hindrance to the normal execution of process opera-
tions. As an illustrative example, this can be implemented by placing some interlocking switches
at key locations in the process plan layout with deﬁned activation rules, achieved either by
(i) preventing access during dangerous motion or by (ii) preventing dangerous motion during
access.
Preventing access during dangerous motion is achieved by using (i) ﬁxed enclosing guards
along the system motion path, which does not require access and (ii) movable guards with inter-
locking switches, in case access is required. This is expected to be interlocked with the power
source in order to ensure the hazard power routed through this switch can be switched OFF.
Table 7.1 Commonly used variables for monitoring software design.
Interlock
variables
Threshold
values
Intermediate
variables
Manipulate
variables
Conﬁgure
variables
Function
variables
Sensors
equipment
Actuator
equipment
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

340
7 Hybrid Controller Design
Some interlocking switches activate devices to lock the security guard door until the system
is in a safe state. Typical industrial applications use combined solutions with movable guards
and interlocking switches. There are also other solutions, such as two-hand control, which can
prevent access while a system is under dangerous operating conditions (e.g. two start buttons
must be operated at the same time to run a painting robot).
Preventing dangerous motion during access is used when frequent access is required along
the system motion path. Here, an interlocking system or device is used to prevent danger-
ous motion while allowing unrestricted access. An interlock switch isolates the power source
once any intrusion or external presence is detected. This is done by using detective motion
devices, such as: (i) photoelectric light curtains emission, which encloses the perimeter of the
system motion path; (ii) pressure-sensitive safety mats, which guard a ﬂoor area around the
system motion path; (iii) emergency stop devices manually operated at the control panel level,
which, when they are actuated, must be latched in before a stop command can be activated;
and (iv) pressure-sensitive edges, which are mounted to the edge of the system motion path. It is
important for the controller to have failsafe measures and to be able to stop the system quickly
after switching oﬀthe power source. Any activation of a process interlock should not cause
a hazardous situation, but should move the process into the initial state or an intermediary
one.
7.3
Design Methodology for Monitoring and Control Systems
Due to the dual nature of mechatronic systems operation, a hybrid control system is usually
required. A hybrid control system consists of combining sequential logic control and feedback
control algorithms. In this section, a monitoring and hybrid control system design methodology
is presented.
Step 1. According to the design requirements identiﬁed, a generic design methodology for a
monitoring and control system consists of:
1) Performing a technical audit of the process components in order to establish performance
indexes (e.g. stability, precision, speed of response, robustness, and safety), along with pro-
ductivity indexes and even energy consumption indexes. Then, comparing these indexes
with typical standards or benchmarks:
2) Listing the devices and equipment involved in the process operations and their characteriz-
ing information, such as:
a) the operating conditions (e.g. input voltage, operating range, command proﬁle, sequence
execution, technical speciﬁcations, etc.) of the actuating equipment (analog/digital, e.g.
a motor or solenoid);
b) the operating conditions (e.g. measurand, operating range, resolution, etc.) of the
process-sensing devices and detectors;
3) Sketching the piping and instrumentation diagram (P&I diagram) and the process ﬂow dia-
gram (P&F diagram). In addition to the identiﬁcation of process components and subsys-
tems, P&I and P&F diagrams display some key piping and instrument details for process
control, activation, and shutdown. Some symbols used to draw several diagrams (P&F, P&I,
electrical wiring diagrams) can be found in the literature (see Figure 7.1(a) and (b)).
4) Analyzing the process operating conditions in order to list the:
a) process operating cycles;
b) process safety constraints.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

7.3 Design Methodology for Monitoring and Control Systems
341
(a)
(b)
TT
200hl
Øint
Øext
MV 025
Manual valve
for draining
FCV 025
Steam supply
flow control valve
TI
Transmitter
indicator
TRC
u
p
Temperature
transmitter
Temperature
recorder
controller
Tension/pression
transducer
025
025
025
025
Tank 025
TT
200hl
Øint
Øext
MV 025
Manual valve
for draining
FCV 025
Steam supply
flow control valve
TI
Transmitter
indicator
TRC
u
p
Temperature
transmitter
Temperature
recorder
controller
Tension/pression
transducer
025
025
025
025
Tank 11
TI
11
TI
12
Tank 025
Figure 7.1 (a) Example of a P&I diagram process temperature control system. (b) Example of a P&F diagram for
a process temperature control system.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

342
7 Hybrid Controller Design
Operating
system
objectives
Primary
function
Secondary
function
Control relay
Actuators
Control panel
and Sensors
Electro-motor
Heater
Input buttons
Associated
field devices
Function block 1
Tachometer
Limit switch
Function block n
System
function
Sub
Function
1
Sub
Function
k
Lights
Figure 7.2 FAST decomposition method.
Step 2. Prior to monitoring and hybrid control design, a functional analysis and decomposi-
tion should be done using the functional analysis system technique (FAST), as illustrated in
Figure 7.2. This results in several system functional blocks.
Proceeding with system behavioristic analysis using the FAST method consists of:
1) Identifying the global function and related primary functions for process control objective.
2) Performing functional decomposition by breaking down each primary function into sec-
ondary functions or subfunctions. Typically encountered blocks from FAST-decomposed
processes are listed in Table 7.2.
3) Listing all constraints for each key primary function (technical experience is required)
according to the following groups:
a) operational capacity constraints (max. level, max. travel distance, max. temperature,
etc.);
b) operational time constraints.
Table 7.2 Listing of typical FAST expected results.
Primary
function
Constraints
Secondary
function
Associated
operational
tasks
operational
tasks for equipment
protection
Operational
tasks for operator
security
Operational
tasks for setting
up (preparation)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

7.3 Design Methodology for Monitoring and Control Systems
343
4) Listing all operational tasks associated with each secondary function, such as:
a) active devices related to each process operating task;
b) conditions of activation;
c) conditions of termination.
5) Adding all necessary tasks involved in setting up activities such as preparatory tasks: power
supply activation checking of the start-up operational condition; loading of work pieces for
processing or even initialization; and referencing of associated tools.
6) Establishing a descriptive list of actions and events sequences under the various process
operational “modes,” including “normal production,” “emergency,” “start-up,” and “shut
down” modes, as well as special modes that may not occur very frequently. These process
actions and events must be related to each speciﬁc mode (e.g. the “Auto” push button [PB]
turns the AC motor on).
Step 3. The system operating speciﬁcations and subsystem functional blocks should be iden-
tiﬁed. This might be done in order to integrate all functional blocks related to the operating
modes using the structural analysis and design technique (SADT) (dependency chart). Subse-
quently, this is achieved by:
1) Establishing a coordination between the process operating tasks through:
a) The classiﬁcation between manual, semi-automatic, and automatic operatio;
b) The deﬁnition of the activation/termination condition of each task.
Step 4. The control scheme should be selected (e.g. open, closed-loop control feedback, predic-
tive control, adaptive control, or logic control), as depicted in Figure 7.3.
Step 5. For each system functional block, control algorithms should be designed, as discussed
in previous chapters. This can be done through:
1) Control logic design using techniques such as ﬂow charts, state diagrams, and petri nets.
2) Continuous controller design using techniques such as model predictive control (MPC) or
proportional-integral-derivative (PID) controller design.
This is based on the modeling of the execution of process operations through:
1) Sequential logic process formal modeling using Boolean algebra or a ﬁnite-state machine
2) Diﬀerence-based equations for a formal model of discrete even-system behavior or diﬀer-
ential equations for a physics-based model of continuous system behavior.
The hybrid control devices should then be sized and subsequent control algorithms deve-
loped by:
1) Deﬁning the computing hardware of the control unit and sizing the detection
equipment.
2) Implementing logic and continuous control algorithms through programming languages
such as SFC, ladder and function block, timers and counters, Boolean mnemonics, struc-
tured text (ST), instruction list (IL), or more common programming language environments
(C++, Java, etc.).
Step 6. The resulting control algorithms should be combined within a hybrid control system.
Usually, a logic control unit activates and deactivates system functional block start and stop
operations while a continuous control unit maintains the tracking of the continuous command
signal. This results in a hybrid system modeling for subprocess sequencing, as depicted in
Figure 7.4.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

344
7 Hybrid Controller Design
Control relay
Electrical-driven
actuators
Sensors and detectors
Electro-motor
Heater
Infrared detector
Tachometer
Limit switch
Command and
control unit
Logic
controller
Logic
controller
Continuous
controller
Transmission
elements
(Valve, Pump
Solenoid etc.)
Function block n
(Logic and continuous)
control algorithms
Limit switch
Electrical-driven
actuators and
transmission elements
Function block n
Command and
control unit
Sensors and detectors
Figure 7.3 FAST decomposition method.
Step 7. For each system operating sequence, an interlock system design should be performed
in order to ensure safe operation. This can be done by:
1) Deﬁning safety inputs, output variables, and interlocks based on safety and regulatory
requirements. All of these variables are expected to be complete after the functional
analysis.
2) Establishing a list of eﬀects from potential failures within the sensors, the actuators, or even
the whole process, such as drops in hydraulic pump pressure and failures in top and bottom
limit switches.
3) Adding tasks associated with the protection of the device for each secondary function, espe-
cially interlocks for the process stop condition.
4) Adding tasks associated with operations and operator security for each secondary function,
especially an emergency stop in case of accident.
5) Designing system interlocks and forcing action by designing logic programming that fulﬁlls
safety requirements by:
a) checking that cycles of operation and logic meets safety speciﬁcations;
b) designing algorithms for veriﬁcation and validation.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

7.3 Design Methodology for Monitoring and Control Systems
345
O
MTR=1
Actuators and transmission elements
(e.g. T = 3 s)
(e.g. P2_A•ZSH03PS)
Logic input conditions 2 (e.g. limit switches, infrared, etc.)
Logic input conditions 1 (e.g. limit switches, infrared, etc.)
Initial logic states
of all actuators
(e.g. control relays)
Activated
logic
outputs
Continuous
controller
Sensors
Command &
PID  control
algorithms
Continuous inputs
Continuous outputs
Position
encoder
Current, voltage
Angular
position
Motor1
Power ON
Motor 1
Associated field devices
Examples of field devices
Figure 7.4 Example of a hybrid control schematic.
Step 8. Normal process operating conditions should be maintained by designing software and
hardware components so that the mechatronic systems are based on speciﬁc requirements
regarding how data should be gathered, analyzed, and reported. This involves integrating the
process operating modes, control parameters, and interlocks using the SADT method (depen-
dency chart) and the start and stop process operational mode graphical analysis (similar to
GEMMA [in French, Gestion des modes de marches et d’arrets], see Figure 7.5). Among variables
involved there are:
1) Process control input variables representing sensing devices and detectors, as well as visu-
alizing units (man-machine interface, MMI).
2) The equivalent binary (specify pulse or level type) or continuous process variables assigned
to each input and output from each process sensing device and detector, along with the
actuating equipment.
3) Manipulated variables, representing outputs of the controller unit.
4) Input and output signals from the MMI (e.g. ResetPushButton, StopPushButton,
LimitSwitch, etc.), with their technical speciﬁcations (e.g. pulse or level type, etc.).
5) The equivalent binary or continuous process visualizing variables assigned to each input and
output signal.
Consequently, a bottle-washing process operating mode using process functional blocks with
process failure recovery functions is structured using sequential function chart (SFC), also
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

346
7 Hybrid Controller Design
Control panel (OP)
without power
A – Process stop mode
F – Process operational mode
D – Process failure mode
A2: xxxx
A1: Initial
state
A3: Process
interlock
A4: Process
interlock
A6: OP
Power ON
A7: xxxx
A5: xxxx
D1: Emergency stop all
operations and OP power off
D2:  Re-establish
emergcency stop or
clear faults
D3: Display
failure
information
F2: Preparatory
operation
process
sequence
F3: Shutdown
procedure
SFC
GNPAS
F1: Normal
automatic
production
SFC
GNPA
Start or stop
Normal operations
F4: Manual
start and stop
mode for each
subsystem
separately
GM
F5: Semi auto-
matic start
and stop
mode for each
subsystem
GNPSA
F6: xxx
Test and verification
operations
Production
Production
cd1
cd2
cd3
cd4
cd5
cd6
(OP)
Figure 7.5 Process start- and stop-mode graphical analysis.
known as “Grafcet” in French. This is a graphical language for the implementation and speciﬁ-
cation of sequential algorithms. SFC hierarchy can be decomposed to three levels:
1) Safety SFC (GS), which structures modes related to process operating safety (emergency
start, general process faults, process initialization, after-process defaults start, etc.).
2) Traded SFC (GT), which deﬁnes process operating modes (semi-automatic, manual, auto-
matic) as well as the initial process start mode.
3) Execution of any of the available operating modes, such as:
a) the manual operating mode SFC (GM), which structures manually activated start and
stop process operating sequences separately;
b) the normal start automatic mode SFC (GNPA), which automatically executes the start
mode of process operating sequences;
c) the normal stop automatic mode SFC (GNPAS), which automatically executes the
stop/shutdown mode of process operating sequences;
d) the normal semi-automatic mode SFC (GNPSA), which semi-automatically executes
start and stop/shutdown modes of process operating sequences.
Step 9. The process automation project documentation should be edited using connection dia-
grams, such as for:
1) the electrical power supply diagram (power supply of current/voltage required) and com-
mand diagram;
2) the electronic circuit (if used);
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

7.4 Examples of Hybrid Control and Case Studies
347
3) the I/O wiring connection diagram (in/out of controller device);
4) the detailed system conﬁguration and I/O wiring connection diagram (I/O address assign-
ments);
5) the internal storage address assignments and storage register assignments.
7.4
Examples of Hybrid Control and Case Studies
In order to illustrate the process monitoring and control design methodology, three industrial
case studies are developed in this section. In addition, features related to the implementation
of the detection and diagnosis tools for induction motors are investigated. Some internal mon-
itoring devices such as a watchdog can be used to supervise the execution of the controller
program operations, to report irregularities and diﬃculties, and even to stop the machine or
process in the case of an emergency not otherwise covered.
7.4.1
Elevator Motion System
An example of a control system for a crane-based vertical motion process is illustrated in
Figure 7.6, while its feedback block diagram and the logic control connections are shown in
Figure 7.7. Figure 7.8 displays the FAST decomposition of the elevator motion process, and the
corresponding GEMMA is given in Figure 7.9.
Motor
current, i(t)
Drum
crane
Counter
weight
sw4
sw3
sw2
Cabin
passenger
4th floor
motor
motor
Command
position, θREF(t), 
Cabin weight, m
Passenger weight, M
Height of
cabin, h(t)
Motor
voltage, v(t)
sw1
Height of
cabin, h(t)
Pb_1
Pb_2
Pb_4
Pb_1
Pb_3
Pb_4
Pb_2
Pb_3
Pb_4
Pb_1
Pb_2
Pb_3
position
encoder
Angular
position, θ(t)
Control
system
3rd floor
2nd floor
1st floor
G_PD1
Figure 7.6 Three-ﬂoor elevator motion process.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

348
7 Hybrid Controller Design
(a)
Digital elevator motion control
Position
encoder
m(n) = Kpe(n) + Ki e(n–1) +..
Elevator lift traction system
Adjustable
travel
distance
Down
motion
time
Up
motion
Number of floors
Elevator
motor
Cabin
transmission
element
Conversion
algorithm
+
–
Travel distance
Generated command
motion profiler
D/A
DAQ
PI control algorithm
θ(t)
TL(t)
Tm(t)
θref(n)
e(n)
m(n)
m(t)
θ(n)
h(n)
IDL
FLD
Floor light
control
MTD
MTU
LVLi<AVLi•WGHT
FTC
Motion
control
Motion
control
PB1+PB1+PB3 →(LVL)
Level
control
SW1+SW2+SW1
LVLi>AVLi•WGHT
ALVL1← SW1
ALVL2← SW2
ALVL3 ← SW3
STOP
POWER ON
(b)
MGO
Door & gates
control
MGU
Door & gates
control
T = 5 sec
LED1 ← SW1
LED2 ← SW2
LED3 ← SW3
SEC
PWR+WGHT
Security
control
PWR•WGHT
LVLi = AVLi•WGHT
Continuous
control
Logic
control
Legend:
Figure 7.7 (a) Continuous command and control of an elevator lift traction motion process. (b) SFC of an
elevator motion hybrid control. (c) Block diagram of an elevator motion feedback control system.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

7.4 Examples of Hybrid Control and Case Studies
349
(c)
v(z)
e(z)
r(kT)
+
–
i(z)
d(z)
+
+
Ki
Kt
T(z)
Disturbances from
motor
Torque
constant
Current
command
Current
sensor
Motor torque to
the mechanical
part of the system
Motor resistance
and inductance
Current
controller
h(t)
Cabin
and
passenger
Height
Figure 7.7 (Continued)
Up motion
process
Close gates
motion
Motor MTU
Cabin and floor
door motion
Motor MTD
Main function
Secondary functions
Technical functions
Associated equipment
Outside
elevator lights
Inside elevator
lights
Air
conditionning
Ensure motion
between
floors
in 3-story
building
Vertical lift
traction
Down motion
process
Open gates
motion
Motor MTA
Motor MGO
Motor MGU
LEDS 1,2,3
Floor indicator
FLD FLOOR 1,2,3
Figure 7.8 FAST decomposition of an elevator motion system.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

350
7 Hybrid Controller Design
Control panel (OP)
without power
A – Process stop mode
F – Process operational mode
D – Process failure mode
A2: XXX
A1: Floor
selection
A3: Process
interlock
activation
A4: Process
interlock
A6: OP
Power ON
A7: xxxx
A5: xxxx
D1: Emergency stop all
operations and OP power OFF
D2:  Re-estabish
emergcency stop or
clear faults
D3: Display
failure
information
F2: Floor
level control
SFCs
F3: Shutdown
all MTR and
security
SFCs
GNPAS
F1: Gate opening;
gate closure;
elevator
position control
SFCs
GNPA
Start or stop
normal operations
F4: Manual
start and stop
mode for each
subsystem
separately
GM
F5: xxxx
F6: xxx
Test and verification
operations
production
PBi
SWi
MTC
cd7
cd5
cd8
(OP)
PWR
+WGHT
SWi
PWR
Figure 7.9 Graphical analysis of start and stop modes for an elevator motion process.
7.4.2
Bottle-Cleaning Process
A thermochemical-based cleaning process removes contaminants and organisms within
empty bottles in a brewery plant. This is expected to result in safe-to-drink products. At the
beginning of this process, dirty bottles are uploaded into a motorized handling system. This
handling system has 750 trains, with a capacity of 50 bottles each. This system passes through
three successive washing tanks (two tanks of water, maintained at 30 and 55∘C, respectively,
and one tank of water mixed with soda, maintained at 80∘C). At the end of this washing
process, cleaned bottles are oﬀ-loaded from the handling system for storage, as illustrated in
Figure 7.10. Key devices and equipment used in the bottle washing process are summarized
in Table 7.3. All motors involved in bottle handling, loading, and oﬀ-loading systems that
should have synchronized motions are on/oﬀ-controlled. The two electrovalves EV4 and
EV5, connected to motor pump MTR1 at the outlet of the hot water/steam tank, are used to
control water temperature levels. The injected steam is mixed with cold water to increase tank
water levels. This is done through thermostat-based temperature measurement (temperature
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

7.4 Examples of Hybrid Control and Case Studies
351
+
+
Hot
water
tank
H
+
Soda
water
tank
@ 80°C
Water
tank
@ 55°C
Water
tank
@ 30°C
Pump
MTR 1
MTR 2
+
MTR 3
MTR 4
+
MTR 5
+
MTR 6
+
EV 1
EV 2
EV 3
Temp
sensor 1
Temp
sensor 2
EV 4
EV 5
Return hot water
FT 1
FT 2
FT 3
EV 6
Water
filling
tank
Soda
Figure 7.10 Simpliﬁed schematic and description (P&I diagram) of a bottle-cleaning process.
sensors 1 and 2). Similarly, soda and water ﬁll the tanks through electrovalves (EV1, EV2, EV3,
and EV6).
During the operating of such a bottle-washing process, it should be noted that: (i) the
water-and-soda tank should not be overﬁlled, due to a defective anti-over drop limit switch
(such a situation has a high risk of burning the skin of shopﬂoor operators); (ii) the high water
tank temperature level and the poor synchronization of the bottle-handling system should
prevent bottle breakdown; (iii) the command and control of process operations should be
monitored to ensure real-time adjustments; (iv) on/oﬀ-controlled electrovalves regulate the
supply of steam to maintain the water tank around 55–80∘C; and (v) periodically, tanks are
emptied. Using the FAST method, a decomposition of the bottle-washing process would
yield: (a) ﬁlling and emptying of tanks; (b) heating of soda and water tanks; (c) control of
tank temperatures; and (d) uploading and oﬀ-loading of bottles, as shown in Figure 7.11.
Subsequently, as shown in Figure 7.4(a), the hierarchy of SFC can be drawn as the graphical
analysis of process operating sequences for start, stop, and failure modes, with their activation
conditions as depicted in Figure 7.12. Then, it is possible to logically control the soda tank
ﬁlling subprocess, as described through an SFC in Figure 7.13(b), while the block diagram in
Figure 7.14 summarizes the closed-loop control of the coupling between the tank temperature
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

352
7 Hybrid Controller Design
Water heating
and temperature
control
Water supply
tank
Adjusting water
temperature
Opening water arrival
valves: ER1; ER2; …
Soda valve opening:
EV1; EV2; EV3…
Thermometers:
TH1; TH2; TH3
Up-loading,
conveying, and
off-loading
bottles
Water level detectors:
DT1; DT2; …
Activation of pumps:
MTR1; MTR2; MTR3…
Steam valves:
EV1; EV2; EV3;
Motor: MTR0;
MTR2
Proximity detectors:
PDT1; PDT2;
Main function
Secondary functions
Technical functions
Associated equipment
Bottle
handling
Uploading/
off-loading bottle
Soda tank
level control
Bottle-washing
process
Filling/emptying
water tanks
Heating water
and soda tanks
Water tank
level control
Water flow in
heat exchanger
Measuring water
temperature
Figure 7.11 Functional analysis using the FAST method.
and the conveyor speed. The corresponding control and command wiring diagram is shown in
Figure 7.13(c).
7.4.3
Cement-Drying Process
In a cement production plant, pozzolana with around 15% humidity is supplied from a quarry.
A 3% humidity is required for the subsequent grinding process. Hence, a mandatory drying
process is performed. This consists of injecting heavy fuel and compressed air to be burned
into a ﬂame chamber. Then, the generated hot air (between 700 and 810∘C) is drawn into the
kiln dryer tube to dry the fed humid pozzolana. The hot air leaves the tube with a temperature
around 100∘C, while the rotation of the kiln propels the dried pozzolana along the tube. Here,
the dried pozzolana is extracted, while dust is removed by a separate ﬁlter, as illustrated in
Figure 7.15(a). Table 7.4 summarizes the pozzolana drying-process devices and equipment, the
corresponding process variables, and the process operating sequences.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Table 7.3 Process equipment listing.
Equipment
Technical
characteristics
Operating
conditions
Associated process operations and control strategy
AC pump
MTR1
P = 18.5 kW
Oil-ﬁlled
n = 1500 rev min−1
p = 80 bar
Star-based start-up of asynchronous motor for water
tank injection at 80, 55∘C. On/oﬀcontroller
AC motor
MTR6
50 Hz, 1.1 kW
1430 rev min−1
Direct-based start-up of asynchronous motor for
bottle-handling chain in 30, 80, 55∘C tanks. On/oﬀ
controller
Conveyor
MTR5
P = 7.5 kW
Q = 250 m3 h−1
n = 1500 rev min−1
p = 80 bar
Asynchronous motor, four limit switches,
conveyor speed = 7 05⋅10−2 m s−1
On-loading/
oﬀ-loading bottle
MTR2, MTR3,
MTR4, MTR5
50 Hz, 1.1 kW
1430 rev min−1
Direct-based start-up of asynchronous motor for bottle
on/oﬀ-loading handling system. On/oﬀcontroller
Electrovalves
(EV4, EV5)
Total volume of heated
liquid: 93 l
Total volume of heating
liquid: 21 l
Heating liquid:
Pmax = 6 bar,
Tmax = 100∘C.
Heated liquid:
Pmax = 7 bar,
Tmax = 170∘C.
Water heating stage of 80 and 55∘C
Thermostat
Range
0–5 bar and
0–150∘C
0–10 bar
0–150∘C
Transmitter 4–20 mA
Maintain water
temperature at
80 and 55∘C
Electrovalves
(EV1, EV2)
DN = 38.1 mm,
0–170∘C;
0–10 bar;
p = 2–4 bar
121–155 ∘C
ASI-based pneumatic
(ON/OFF regulation)
Steam through heat
exchanger for water tanks
at 52 and 62.5∘C and
command by pressurized
air-supply electrovalves
Manual valve for
steam arrival
DN = 125 mm
0–40∘C;
0–10 bar
p = 3–4 bar
Valve to supply steam for
thermal heat exchanger
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

354
7 Hybrid Controller Design
Control panel (OP)
without power
A – Process stop mode
F – Process operational mode
D –Process failure mode
A2: XXX
A1: Tank
emptying
A3: Process
interlock
activation
A4: Process
interlock
A6: OP
Power ON
A7: xxxx
A5: xxxx
D1: Emergency stop all
operations and OP power Off
D2:  Re-estabish
emergcency stop or
clear faults
D3: Display
failure
information
F2: Tank filling
tank water
heating
SFC
F3: Shutdown
all MTR and
all EV
GNPAS
F1: Water heating;
temperature
control;
bottle handling.
GNPA
Start or stop
normal operations
F4: Manual
start and stop
mode for each
subsystem
separately
GM
F5: xxxx
F6: xxx
Test and verification
operations
Production
Production
cd1
cd2
cd3
cd7
cd5
cd8
(OP)
cd6
cd5
cd4
Figure 7.12 Bottle-washing process operating and stop mode graphical analysis.
In order to generate a ﬂame in the combustion chamber, two asynchronous motor-driven
pumps (MTR1, MTR4) inject fuel and compressed air toward a lighter that has ignited the
ﬂame. As an alternative to fuel, butane gas can be driven as a replacement combustible. Simul-
taneously, a motorized conveyor (MTR6) carries the humid pozzolana into a motorized rotary
dryer tube (MTR5) connected to the ﬂame chamber. In order to ensure complete combus-
tion, the air-to-fuel ratio and the pressure in the ﬂame chamber should be maintained con-
stant by varying the opening of the dilution and combustion fans (MTR3, MTR2). Electrovalve
EV1 feeds the pozzolana from the silo, while electrovalve EV2 extracts it from the rotary kiln.
Table 7.5 summarizes the pozzolana dryer operating sequences. From the process audit, a high
temperature variation within the ﬂame chamber produces a frequent shutdown of the dryer
tube. The temperature can be reduced by controlling the fuel inﬂow rate. Also, ﬂuctuation of
the air-to-fuel ratio due to the combustion and dilution fans could cause an incomplete com-
bustion due to the zero pressure in the dryer tube. The performance of the ON/OFF control
scheme of the pressure and temperature within the ﬂame chamber is assessed and compared to
industrial standards, as shown in Table 7.4. This can be used to set the design objectives of con-
trol loops from Figure 7.15(c). Here, it is required to migrate from an ON/OFF control scheme
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

7.4 Examples of Hybrid Control and Case Studies
355
(a)
Safety SFC
(GS)
Traded SFC
(GT)
Normal-production
automatic SFC
(GNPA)
Manual-operation
SFC (GM)
Tank-filling
SFC
Bottle-handling and
temperature-control
SFC
Tank-emptying
SFC
Water tank-
filling SFC
Soda tank-
filling SFC
Temperature
-control SFC
Speed control of bottle
-handling SFC
310
311
312
313
314
315
316
LS + 02B2 + LS + 03B3
LV07B2
LV07B2
LV12B3
LS + 02B2
•
LS + 03B3
LS + 02B2
+
LS + 03B3
ZSH 07B2 + ZSH 11B3 + ZSH 12B3
LV07PS
(b)
LV12B3
LV07B2
LV07B2
LV12B3
LV12B3
KM1PA (MTR1) LV03PS
LV07B2
t = 3 s
LS + 02B2•LS + 03B3
P1_Adm•ZSH03PS
ZSH03PS
LV11B3
LV12B3
KM1PA (MTR1)
LV03PS
LV07B2
LV11B3
LV12B3
Figure 7.13 (a) SFC-based hierarchy of a bottle-washing process. (b) SFC for soda tank ﬁlling for a
bottle-washing process. (c) Control and command schematic for a bottle-washing process.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

356
7 Hybrid Controller Design
(c)
PLC
Control panel
soda
water
handling
empty
AU02P2
AUT
MAN
PUSH04P2
PUSH05P2
Push buttons
SIGNALING LED
ACKP2
AU01P1
PUSH02P1
PUSH03P1
D8
D5
Industrial communication network
EV1
KM1
EV2
KM2
ZSH01PV
Disj01PV
Level sensor
Actuator: electro valves
D2
A1
KMP1A
KMP1R
ZSH01PV
A1
D2
Motor pump MTR1
KMP1A
KM M2
ZSH23B6
D4
D4
Actuator: motors
D10
A2 + D6
ZSL23B6
KMA_MTRX
KM M3
EV3
MTR2
MTR3
KM M4
Sensor and actuator: motors
KM M5
MTR4
MTR5
LSH 06B6
ZS 01X0
KMA_MTRX
Sensor
D2
D2
Figure 7.13 (Continued)
to a PID temperature and pressure control with settling time and rise time less than 450 and
150 s, respectively.
Using the FAST method and the process variables deﬁned in Figure 7.15(b), the dryer
cement process can be decomposed into two subprocesses: (i) injecting pozzolana subprocess;
and (ii) maintaining the ﬂame within the chamber, as illustrated in detail in Figure 7.15(b).
The corresponding graphical analysis of the start and stop operating modes of the dryer
process is presented in Figure 7.15(d). An example of a logic control program using the
function block for the dryer process is presented in Figure 7.15(e). Figure 7.16 depicts the
overall control and command wiring diagram of the pozzolana drying process. It might
be noticed, for example, that there are eight digital output signals from the programmable
logic controller toward the eight ﬁeld contactors activating the motor HP pump and elec-
trovalves (e.g. for MTR4, XVS AA09, and XSV BAC07) through the Modbus-based industrial
network.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

7.4 Examples of Hybrid Control and Case Studies
357
Controller
Control
signal 
Te(t)
(m3 s–1)
Potentio-
meter
Error
signal
Thermometer
Pump
Heat
exchanger
Water
tank
Actual
temperature
Tank
insulation
Desired
temperature
Water
flowrate
(°C)
(V)
+
–
(V)
(V)
Heat
loss
(W)
–
+
(°C)
Tank
path
Conveyor
Power
amplifier +
DC motor
Controller
Speed
drive
Tachogenerator
Desired
Velocity
+
(V)
–
Error
Signal
Control
Signal
(V)
(V)
(V)
Torque
Nm–1
(m/s–1)
Actual
speed
(V)
Heat
input
(W)
Figure 7.14 Subprocess function block diagrams.
(a)
Fuel
tank
Butane gas
Lighter
Compressed
air injection
Temperature
sensor
Dilution
fan
MTR3
Combustion
fan
MTR2
Flame
chamber
Fl
cha
MTR6
EV2
Dry pozzolona
extractor
Humid
pozzolana
silo
Pozzolana dust
MTR7
Conveyor
Weight
feeder
Heated
flame
Rotary kiln
Temperature
sensor
Pressure
sensor
EV3
MTR4
MTR1
MTR5
EV1
S1
Figure 7.15 (a): Simpliﬁed process schematic and description of a cement-drying process. (b) Function analysis
of the cement-drying process using a FAST method. (c) Feedback control block diagram of the cement-drying
process. (d) Stop and start graphical analysis of the cement-drying process. (e) Example function block for
pozzolana dryer process shutdown.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

358
7 Hybrid Controller Design
Controller
Control
signal
(m3 s–1)
Potentio-
meter
Error
signal
Thermometer
Pump
electronic
valve
Burner
Flame
chamber
Actual
temperature
Insulation
flame
chamber
Desired
temperature
Gas
flowrate
Heat
input
(W)
(°C)
(V)
+
–
(V)
(V)
Heat
loss
(W)
–
+
(°C)
Dilution
fan
Flame
chamber
Induced fan
electronic
valve
Controller
Potentio-
meter
Pressostat
Desired
Pressure
+
(V) –
Error
Signal
Control
Signal
(V)
(V)
(V)
Air flow
rate
Actual
pressure
(bar)
(V)
+
–
CO2fan
Heat loss from CO2 exhaust
(bar)
+
–
(m3 s–1)
(c)
(b)
Pouzzo
conveyance
Ignite flame
burner
Motor MTR 2
:
Maintain
flame chamber
Weight WS1
: 
Main function
Secondary functions
Technical functions
Associated equipment
Control air
injection
Tunnel-heated
air and dust
removal
Drying process
Maintain
temperature of
dryer pozzolana
700°C <T < 800°C
Inject
pozzolana
Pouzzo weight
Atomize fuel
injection 
Motor MTR 3
Valve EV2
Pump MTR1
Dilution and
combustion  fan
motors
MTR 4 /  MTR 5
valve PDT2
Figure 7.15 (Continued)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

7.4 Examples of Hybrid Control and Case Studies
359
(e)
S1
S2
S3
S4
S5
KM_DT Delay2
KM_iDF Delay
KM_DOCB Delay
KM_HPP KM_FFP
KM_RH
% Stop dryer tube after 5 s time delay
% Stop ID fan after 5 s time delay
% Stop DOCB after 3 s time delay
% Stop pumps HPP and FFP
% Stop feeding/handling system
Control panel (OP)
without power
A – Process stop mode
(d)
F – Process operational mode
D – Process failure mode
A2: XXX
A1: Initial all
states 
A3: Process
state
interlock
A4: Process
interlock
A6: OP
power ON
A7: xxxx
A5: Chimmey
activated to
temperature
D1: Emergency stop all
operations and OP power Off
D2: Re-establish
emergency stop or
clear faults
D3: Display
failures
information
F2: Pozzolana
select 
destination
F3: Shut down
all MTR and
all EV
GNPAS
F1: Pozzonlana
feeding and
off-loading;
temperature
control; GNPA
Start or stop
Normal operations
F4: Manual
start and stop
mode for each
subsystem
separately
GM
F5: Semi
automatic
mode,
subprocesses
are stopped and 
started
F6: xxx
Test and verification
operations
Production
Production
cd1
cd2
cd3
cd7
cd5
cd8
(OP)
cd6
cd5
cd4
Figure 7.15 (Continued)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

360
7 Hybrid Controller Design
Table 7.4 System performance audit and speciﬁcations of the cement-drying process.
Actual system performance
Benchmarked values
Characteristics
Temperature
Pressure
Temperature
Pressure
Set-point values
760∘C
−2 mbar
760 ∘C
−2 mbar
Precision
±20∘C
±2 mbar
<±2 ∘C
±2 mbar
Steady state
0.578
0.19
1
1
Overshoot (%)
0
0
<2%
<2%
Peak time (s)
680
768
<400
<500
Settling time (s)
425
576
<300
<400
Rise time (s)
197
211
<100
<150
PLC
Control panel
D8
D5
Industrial communication network (modbus)
CO
Temp fuel sensor
D2
A2
XSV BAC04
PSL AFL02
A1
D1
Motor FF (air)pump
KMP1A
KM M2
ZSAEQ07
D4
D3
Feeding and offloading pozzolana
D8
A3 + D6
PSLAFC02
KM M3
EV3
MTR6
KM DF
Combustion and dilution fans
KM CF
MTR2
MTR3
ZSHR01
ZS AEQ06
ZSL AEQ05
Sensor
D2
D2
chamber
MTR4
MTR1
140
0
tube
Humid
¨Pz
25
2.6
715
T (°C)
P (bar)
+
+
+
87.7
AUTO
MAN
REG
T(°C)
P(bar)
Time (s)
Time (s)
Configuration
Trends
Monitoring
Hp pump
Control
XSV AA09
XSVBAC07
Motor HP pump
MTR4
ZSBAP01
MTR1
Air pressure sensor
PID CONTROL
Function block
module
EV2
Horn
TSLC01
D2
D2
Figure 7.16 Cement dryer control and command schematic.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Table 7.5 Start and stop operating mode of cement-drying process.
Operating
mode
Operating sequences
Variables
Variables types
Description
Interlocks
Startmode
Select pozzolana destination
Direct grinding, Silo2
Bool, Bool
Select grinding machine or
Pozzolana silo
AU
Start pozzolana dust extractor
Start_Aux, Start_PDE
Bool, Bool
Start dryer tube motor, set horn on
Start_D, KMK, Elev,
PB_Conv, KM_DT
Bool, Bool, Bool
Activate crampon and
direction conveyor belt
Fuel feeding and high-pressure fuel
pump
Start_RH, S1 EV3, MTR1
Bool, Integer,
Integer
Activate heater; low fuel
temperature
90∘C < T < 120∘C;
low compressed air
pressure
Range: 5 bar < P < 7 bar
Fuel thermostat; shut
down ﬂame chamber and
fuel pumps
Light ﬂame-chamber burner, start
ﬂame chamber, Start dilution fan and
combustion fan
Start_FC, KM_DF, KM_CF
Bool
Fault, such as excess ﬂame
chamber output
temperature, absence of
ﬂame, no compressed air
Flame fault from detector;
ﬂame chamber output
temperature
700∘C < T < 810∘C Shut
down fuel pumps and
ﬂame chamber
Start humid pozzolana extractor
Start_PE
Bool
Stop mode
Stop pozzolana extractor (weight
feeder)
Stop_PE
Bool
Stop Pozzolana extractor
Shut down ﬂame chamber, close fuel
electronic valves, stop dilution fan
and combustion fan
Stop_FC, KM_DF, KM_PE,
KM_CF
All Bool
Shut down dryer, dryer output
crampon and direction conveyor
belt, ID fan
Stop_DT, KM_IDF,
KM_DCB, KM_Elev
All Bool
Shut down pozzolana dust extractor
Stop_PDE, KM_PDE
Bool, Bool
Shut down auxiliaries
Stop_Aux, KM_Aux
Bool, Bool
Shut down re-heater
Stop_RH, KM_RH
Bool, Bool
Emergency stop
AU
Bool
Power supply to EVs, fuel
and air supply system, and
combustion fan
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

362
7 Hybrid Controller Design
Exercises and Problems
7.1
Commonly used in the pharmaceutical industry, a granule-forming process (granulator)
schematic is shown in Figure 7.17. A feed stream of powder is sprayed between an outer
stationary cylinder and an inner rotating one. As the motor-driven cylinder rotates, the
ﬂuidizing air drains out the particles of granules formed throughout the granulator. The
rotational speed of the cylinder deﬁnes the ﬁnal shape and size of the granules. The valve
is used to adjust the injection ﬂow rate of the powder. Increasing the valve on the edge
by 1% causes an increase in the diameter of the granules of 2 mm. A 2.5% increase in the
agitating motor speed will decrease the thickness in the center position by 1 mm. A 2%
increase in the heating temperature will increase the thickness in the center by 3 mm and
reduce the edge thickness by 0.5 mm.
A sensor measures the thickness of the formed granules. Once the particle powder is
deposited into the chamber, the granulator process consists of: (i) injecting air and ﬂuid;
(ii) heating the air; (iii) stirring the wet particles; and (iv) forming granules from the
particle grouping.
a) List all sensing devices and actuating equipment involved in the granule forming pro-
cess and their I/O variables.
b) Perform a process decomposition using the FAST method.
c) After deﬁning controlled and process variables, draw closed-loop block diagrams for
the control of granule feed, and size.
Electromagnetic
valve, EV1
Stirrer motor
MTR1
Heater
Air
supply
Filter
Pump,
P1
Plate  collector
of granules
Perforated plate
Filter
Pressured air
Fluid
Blade
Temperature
sensor, T3
v3
Exhauted
air
Pump,
P2
Temperature
sensor, T2
Filter
Electromagnetic
valve , EV2
Fluidized bed
chamber
b
Wet particles
v2
v1
Dried granules
Steam of fluid
Figure 7.17 Granulator process schematic.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
363
d) Update the list of process binary variables with those from the control panel enabling
the stop and start activation of the process and the indication of one of the two granule
sizes.
e) Using functional analysis and SFC, list the operating modes and operating cycles,
along with their operating sequences.
f) Develop a generic logic and feedback control for this process for various deﬁned gran-
ule sizes.
7.2
A distillation column is used for the separation of liquids, such as crude oil at diﬀerent
boiling points, that are widely used in the petrochemical industries. Figure 7.18 gives
an overview of a typical crude oil distillation column and the equipment involved in it.
To separate gasoline from asphalt, the reﬂux rate (at the top) is adjusted to control the
distillate composition, while the reboiler steam rate (at the bottom) is varied to control
the bottom composition. Any change in the feed rate to the column acts as a disturbance
to the process. Among the equipment involved are a condenser, a vapor-liquid separator,
a compressor, and a stripper.
When the composition of gasoline in the top distillate stream is below a set point (at the
top), the ﬂow rate of the cold liquid reﬂuxes into the column and the reﬂux ﬂow increases
the gasoline purity of the distillate stream. However, the additional cold liquid works
its way down the column, beginning to cool the bottom. This allows an increase in the
gasoline ﬂow out of the bottom stream. As the composition moves oﬀthe set point, the
ﬂow of steam into the reboiler increases, heating the bottom of the column and causing
an increase of hot vapors traveling up it. This eventually causes the top of the column
Elec. valve
Gas
Flame
detector
Control
Crude oil depot
Exhaust
Thermostat
Gasoline
(petrol)
Kerosene
Diesel oil
Fuel oil
Lubricant oil
parafin wax,
asphalt
Gas
oil
150°C
200°C
300°C
370°C
400°C
Furnace
Distillation column
From offshore 
upstream pipe
Pump
650–850°C
80°C
390–400°C
Figure 7.18 Distillation column schematic.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

364
7 Hybrid Controller Design
to heat up. Similarly, as the top of the column heats, the gasoline purity in the distillate
stream becomes too low. In response, at the top, there is an increase in the ﬂow of cold
reﬂux.
a) List all devices and equipment involved in the distillation column control and their
corresponding I/O variables.
b) After deﬁning controlled variables and process variables, draw and label closed-loop
block diagrams for feed control, boiler temperature control, and reﬂux control.
c) Update the list of process binary variables with those from the control panel enabling
the start and stop activation of the process when temperature threshold values are
reached per stage.
d) From the functional analysis, list operating modes and operating cycles, along with
their operating sequences.
e) List three types of safety measures and the corresponding interlocks that need to be
implemented.
f) Develop an SFC normal production program integrating the logic control with the
feedback control.
g) Sketch the control and command schematic.
7.3
Consider the milk bottle-ﬁlling process illustrated in Figure 7.19. Develop a monitoring
and control system for this process. A sensor detects the position via a limit switch, waits
0.6 s, and then ﬁlls the bottle until a photosensor detects a ﬁlled condition. After the
bottle is ﬁlled, outfeed motor M2 is energized and moves the ﬁlled bottle; after 0.5 s, the
Infrared
receiver (IR2)
MTR1A
motor gate
MTR1B
Control valve
filling bottle EV2
Control valve
return  EV1
Flow control valve
switch DV1
Pump PMP
Tank filled with
beverage
Empty bottle
Control switch
Infrared
emitter (IR1)
Stop
Start
Control panel
Infrared
emitter (IR2)
Bottle positioning
detector
Bottle filling
level detetector
Infrared
receiver (IR1)
Figure 7.19 Milk bottle-ﬁlling process.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
365
fed motor M1 is energized and conveys the next bottle. This control system includes start
and stop push buttons for the process.
a) List all actuating equipment and sensing devices or detectors involved in this process,
as well as the corresponding I/O variables.
b) Using the FAST method, derive the operating sequences.
c) Update the process safety measures, along with start and shutdown operating modes,
to derive interlocks.
d) Design the expected process logic control and feedback control loops.
7.4
It is desired to design a control and monitoring system for activation/deactivation
of either bi-directional motor or motor-driven pump using AC motors AC motor
with variable-speed drives. This allows migration from a hardwired control to a pro-
grammable logic control and monitoring system. As such, the operator panel station
performs potentiometer speed control (speed regulator), forward and reverse direction
selection, and selection of the manual or automatic operation running mode of the
variable-speed drive, and even start and stop push buttons, through run/jog switches.
Figure 7.20 shows an operator station used to manually control a variable-speed drive.
Note that the start, stop, run/jog, potentiometer, and forward/reverse ﬁeld devices are
connected with the same names that are used in the control program.
a) Using all sensing and actuating devices in Figure 7.20, design the control panel and
complete the wiring diagram with connection links in/out of the control unit accord-
ing to an operating strategy deﬁned.
b) To complete the migration, design the logic controller of AC motors and speed feed-
back controller (when required).
00
01
02
03
04
05
00
01
02
03
04
05
09
07
08
10
06
07
08
09
10
Analog input
24 VAC
(AI)
Analog output
24 VDC
(AO)
DO-COM
Analog
contactors
E-STOP START
Indicator lights
Control unit
Variable-speed devices
(manual and automatic)
KM1
Bidirectional AC motor
115 VAC
MOTOR
PUMP
KM3
KM2
TACH
AI-COM
DI-COM
AO-COM
Analog
input
power 
supply
24 VAC
Motor
power 
supply
380 VAC
Analog
output
power 
supply
24 VDC
Control relay (CR1)
Control relay (CR2)
06
Potentiometer
(manual speed change)
Selector switch
Toggle switch
Figure 7.20 To be complete wiring diagram of the hardwired logic control of an AC motor with a
variable-speed drive.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

366
7 Hybrid Controller Design
7.5
Recall the thermal plant and connected electrical supply network illustrated in
Figure 7.21. It is desired to powerﬂow and monitoring system. As such:
a) List the voltage and power control equipment, operating sequences, and associated
constraints.
b) Decompose the process operations using the FAST method.
c) Based on operating conditions, establish the SADT or GEMMA graph of the start
and failure modes, as well as interlocks.
d) Deﬁne the control panel with monitoring variables for this power plant.
e) Propose an integrated sequential logic and feedback control system block diagram.
f) Draw the command, power, and I/O wiring diagrams of the hybrid system.
7.6
It is desired to control the ﬂow of water at a hydroelectric dam in order to maintain gen-
erated electric power close to a forecasted daily load. Sketch a control panel (with mon-
itoring variables) and corresponding logic control system as illustrated in Figures 7.22
and 7.23. The process equipment is listed in Table 7.6.
7.7
In a cement-milling station, a portico scratcher with a capacity of 200 tons per hour
allows raw cement material, such as gypsum and dry and wet pozzolana, to be conveyed
from a storage hall to the grinding or drying cement subprocesses. First, high-speed
transversal positioning of the portico scratcher above the raw cement material deposit
is completed. Based on the two motorized arms (primary and secondary), the scratcher
then moves from right to left across the deposit, to the conveyor-based handling system,
and on to other cement subprocesses, as illustrated in Figure 7.24. Tables 7.7 and 7.8 list
the equipment involved and operating sequences, respectively.
V1
V2
A2
A1
LV
Transformer
CB1
Unit 1
LOAD
Unit 2
LOAD
Unit 3
LOAD
CB2
CB3
LV
Transformer
V3
A3
LV
Transformer
THERMAL ELECTRIC POWER PLANT
POWER DISPATCHER
CONTROL CENTER
boiler
Steam
turbine
MV
Transformer
Generator
66–33 kV
11–2.3kV
0.43–0.24 kV
V4
A4
STOP
Legend
CB
A
V
START
CLK
COUNTER
Circuit
breaker
Ammeter
Voltmeter
Industrial
control
network
TIMER
Figure 7.21
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
367
Water-level
sensor LD1
Water-level
sensor LD2
Water-level
sensor LD3
Electrical
production plant
generator GT1
Hydro
dam
Automatic
gate MTR1
Figure 7.22 Simpliﬁed process schematic of a water control system in a hydroelectric dam.
 
Water-level
regulation river
Detect water
level
Evaluate
power 
generated
Control
gate
opening
Water-level
detector DT1
Generator
speed
GT1
Gate motor
drive MTR1
Figure 7.23 FAST analysis of a water control system in a hydroelectric dam.
Based on the information provided:
a) Create an SFC using the start and stop modes based on the graphical analysis
approach.
b) For each actuating equipment, deﬁne the control variables and types as well as type(s)
activation conditions required for SFC.
c) Develop all required SFC (security, production, etc.) (Hint: interlocks formal model-
ing).
d) Based on a deﬁned control panel, derive the generic logic control algorithm for the
scratching process and the resulting control and command schematic.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

368
7 Hybrid Controller Design
Table 7.6 Process equipment listing.
Equipment
Technical characteristics
Operating conditions
Associated process operations
and control strategy
Generator GT1
Power 11 kW
Max. load arm: 35 tons
Speed: 0.4 m s−1
Asynchronous motor with
squirrel cage for power
generation
Gate motor drive
MTR1
Power 6 kW
Max. load arm: 35 tons
Speed: 0.4 m s−1
Asynchronous motor with
squirrel cage for water gate
motion
Water-level sensor
LD1, LD2, LD3
Rittmeyer pressure-based
sensor
Length of carrier: 80 m
Speeds: low 2.6 m mm−1;
high 16 m mm−1
+
+
+
+
MTR 1
MTR 2
MTR 3
MTR 4
MTR 5
MTR 6
CONVEYOR
Figure 7.24 Schematic of a cement pozzolana scratcher process.
7.8
In the brewery industry, the tunnel pasteurization process consists of the thermal treat-
ment of beer in bottles in several temperature-controlled water-based media, reducing
bacterial growth. This extends the beer’s shelf-life. As illustrated in Figure 7.25, the ﬁlled
bottles are conveyed at a constant speed of 7 mm s−1 through several water showers at
temperatures of 30, 52, 62, and 30∘C, respectively. Some Motorized pumps are used to
maintain the water temperature, at a ﬂow rate of 250 m3 s−1 on a closed loop between
the water tank and the heat exchanger (170∘C). Table 7.9 summarizes the pasteurization
operating sequences.
The process function blocks for the temperature control can be decomposed into: (i)
control air ﬂow rate; (ii) ﬂame chamber and control of ﬂame intensity; (iii) ﬂame chamber
and fuel pressure regulation; (iv) burner and ignite ﬂame block. Using the information
provided:
a) Develop an interlocking logic (if necessary) for this process.
b) Create an SFC using the start and stop operating modes based on the graphical anal-
ysis approach.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
369
Table 7.7 Process equipment listing.
Equipment
Technical
characteristics
Operating
conditions
Associated process
operations and
control strategy
Primary robot arm
scratcher MTR1
Power 11 kW
Max. load arm: 35 tons
Speed: 0.4 m s−1
Asynchronous motor
with squirrel cage for
primary robot arm
motion
Secondary robot
arm scratcher
MTR4
Power 6 kW
Max. load arm: 35 tons Speed:
0.4 m s−1
Asynchronous motor
with squirrel cage for
secondary robot arm
motion
Vertical motion of
secondary robot
arm scratcher
MTR3
Force 2000 kg
Length of vertical trip: 80 m;
speeds: low 2.6 m mm−1; high
16 m mm−1
Vertical motion of
primary robot arm
scratcher MTR2
Force 1600 kg
Power at low speed
0.83 kW; at high speed
5 kW
Length of vertical trip: 40 m;
speeds: low 2.6 m mm−1; high
16 m mm−1
Cross-motion
portal MTR5 and
MTR6
Power 5 kW
Cross-motion scratching
speed: 0.9 m mm−1; high
speed 9.4 m mm−1; brake
torque max. 2 (10 mdaN)
c) Develop all required SFC (security, production, etc.) (Hint: interlocks formal model-
ing).
d) Based on a deﬁned control panel, derive the generic logic control algorithm for the
pasteurization process and resulting control and command schematic.
7.9
Beer fermentation is a three-stage process. First, in the primary stage, the yeast is
added to the malt seed in water-ﬁlled fermentation tanks. This mixture is kept closed
for 8–12 days. During this stage, the temperature must be maintained at 12∘C and the
pressure at 1 or 2 bar while the CO2 resulting from alcohol metabolism is evacuated,
as illustrated in Figure 7.26. At the end of CO2 production, the temperature of the
generated beer in the fermentation tank is reduced to 5∘C, while the pressure is
maintained at 1 or 2 bar, to ease the solidiﬁcation of the remaining yeast in the tank.
Then, the temperature of the beer is brought down to −1 ∘C and the pressure kept at 1
or 2 bar, to ease the collection of solid-based yeast deposit at the bottom of the tank.
Finally, the yeast deposit is removed and the ﬁltered beer is output through a dedicated
electrovalve. Figure 7.27 illustrates the functional decomposition of this fermentation
process and Table 7.10 presents the fermentation process operating sequences. Based
on the function subprocess block diagrams for temperature and pressure control in the
fermentation tank:
a) Develop an interlocking logic for this process.
b) Create an SFC using the start and stop operating mode-based graphical analysis
approach.
c) Based on a deﬁned control panel, derive the generic logic control algorithm for the
pasteurization process and resulting power supply control and command schematic.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Table 7.8 Process operating modes and sequences.
Operating mode
Operating sequences
Variables
Variable types
Description
Interlocks
Start mode
Start transversal
positioning motion
MTR6, MTR5
Bool, Bool, Bool
High-speed transversal
displacement and
positioning scratcher
portal
Fault due to poor
synchronization of MTR5
and MTR6 during
transversal motion
(anti-twisting)
Positioning of primary
scratcher robot arm
MTR1
Bool
Low-speed position of
primary scratcher robot
arm above pozzolana (72∘)
Positioning of secondary
scratcher robot arm
MTR4
Integer, FBD
Low-speed position of
secondary scratcher robot
arm above pozzolana (68 ∘)
Detect rotation of
secondary scratcher robot
arm
Pozzolana scratching by
winch of secondary
scratcher robot arm (139 s)
MTR3
Repeat 1 successively
Low-speed pozzolana
scratching by winch of the
secondary robot arm for
139 s
If primary scratcher robot
arm > 23 A,
stop MTR3
Pozzolana removal by
winch of primary scratcher
robot arm (139 s)
MTR2
Repeat 2 successively
Low-speed pozzolana
removal by winch of
primary robot arm for
139 s
If primary scratcher robot
arm > 73 A,
stop MTR2
Repositioning of primary
scratcher robot arm
MTR1
Repeat 3 successively until
(72∘– delta = 17∘)
Low-speed position of
primary scratcher robot
arm above pozzolana
(72∘– delta)
If collision between
secondary and
primary arms,
stop MTR2 and MTR3
Repositioning of
secondary scratcher robot
arm
MTR4
Repeat 4 successively until
(68∘– delta = 13∘)
Low-speed position of
secondary scratcher robot
arm above pozzolana
(68∘– delta)
(Continued)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Table 7.8 (Continued)
Operating mode
Operating sequences
Variables
Variable types
Description
Interlocks
Position referencing
before transversal motion
MTR1, MTR2,
MTR3, MTR4
Both primary and
secondary arms to 72∘and
68∘, respectively
Start transversal
positioning motion by
50 cm
MTR6,
MTR5
Low-speed displacement
of portal by 50 cm
Repositioning scratching
etc.
All motors
involved
Repeat previous step until
scratcher portal reaches
pozzolana length of 60 m
Stop mode
Stop secondary scratcher
robot arm
MTR3
Bool
Stop secondary scratcher
robot arm
MTR4
Stop primary scratcher
robot arm
MTR2
Bool
Stop primary scratcher
robot arm
MTR1
Bool
Stop transversal
positioning motion
MTR6, MTR5
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Table 7.9 Pasteurization process operating sequence.
Operating mode
Operating sequences
Variables
Variable types
Description
Interlocks
Start mode
Fill water
PB_START, all
electrovalves (EVx)
Bool, Bool, Bool, Bool,
etc.
Activation valves for
inﬂow tanks
Turn on heat
exchangers
EHX1, EHX2
2 bars < P < 4 bars
117∘C < T < 131∘C
Open steam electronic
valves to supply water
at speciﬁed
temperature to the
tanks
EV1, EV2, EV3
Start pumps to heat
water tanks to 52 and
62∘C in closed loop
MTR1, MTR2, MTR3
Sensor_temp,
PID_temp_control
Integer, FBD
Pumps MTR2 and
MTR3 start if tanks’
water temperatures are
reached
Conveying bottle
LS1, LS2, LS3, LS4,
MTR4
Bool, Bool, Bool, Bool
Move bottle ﬁlled with
beer into
pasteurization tunnel
Constant conveyor
speed
MTR4 fails if
temperature out of
reference
Four limit switches
detect conveyor travel
distance (stop and
start)
Temperature control
MTR2, EHX1/2, EHX2,
EV1, EV2
Temperature control
via steam ﬂow through
heat exchangers using
electrovalve and
thermostatic valve
Tank pressure
(P < 1.85 bars)
temp_faults out of
order (Temp_sensor)
Stop conveyor
Stop mode
Stop ﬁlling water
LS_level
Bool
Stop conveyor
MTR4
Close steam valve
EV1, EV, EV3
Stop pump
MTR1, MTR2
Remove yeast
Timer, EVx
Bool
Timer, EVx
Bool
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
373
hot water
water tank @ 52 °C
water tank@ 62 °C
water tank @ 30°C
water tank @30°C
MTR 1
MTR 2
MTR 3
EHX 1
EHX 2
EV 3
EV 1
EV 2
MTR 4
+
+
+
+
+
temp
sensor
temp
sensor
Figure 7.25 Simpliﬁed P&I diagram of a beer pasteurization process.
Fan
CO2
Fan CO2
Fan CO2
Beer
Beer
Fermention
tank
Temperature
Pressure
Level
Gas analytic
Temperature
Pressure
Level
Gas analytic
Temperature
Pressure
Level
Gas analytic
EVx
Yeast
removal
EVx Yeast
removal
EVx Yeast
removal
Tank data
volume
Weight
Φext/Φint
Tank data
volume
Weight
Φext/Φint
Tank data
volume
Weight
Φext/Φint
Fermention
tank
Fermention
tank
Beer
EV 1
EV 2
EV 3
EV 5
EV 6
EV 7
EV 7
Yeast
Tank data
volume
Weight
Φext/t Φint
Fermention
tank
Tank data
volume
Weight
Φext/t Φint
Fermentionn
tank
Fermention
tank
Tank data
volume
Weight
Φext/t Φint
Water
cooling
system
Figure 7.26 Simpliﬁed schematic description of the beer fermentation process.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

374
7 Hybrid Controller Design
Beer fermentation
temperature
control
Water supply
tank
Adjusting beer
temperature
Water arrival
valves: ER1; ER2; …
Steam valve:
EV1; EV2; EV3…
Thermometers
TH1; TH2; TH3
Water level detectors:
DT1; DT2; …
Activation of pumps:
MTR1; MTR2; MTR3…
Steam valves:
EV1; EV2; EV3; 
Valves  EV4; EV5; EV6
Main function
Secondary functions
Technical functions
Associated equipment
Removing yeast
Steam flow in
heat
exchanger
Beer fermentation
process
Filling beer
into tanks
Cooling water
supply around
tanks
Water tank
level control 
Water flow in
heat exchanger
Measuring water
temperature
Removing CO2
and yeast dust
Rejecting CO2
CO2 fan 
Figure 7.27 Functional analysis using the FAST method for the beer fermentation process.
Table 7.10 Fermentation process operating sequence.
Operating
mode
Operating
sequences
Variables
Variables
types
Description
Start mode
Fill water
PB_START,
EV4, EV5, EV6
Bool, Bool, Bool,
Bool, etc.
Activation valves for
inﬂow tanks
Fill yeast (20 min)
Timer
Bool
Yeast injection
Cooling tank at 12∘C
Sensor_temp
Integer
Stage 1 fermentation
Fermentation (5 d)
Timer
Bool
Stage 2 fermentation
Cooling tank at 5∘C
Sensor_temp
Integer
Stage 2 fermentation
Cooling tank at −1∘C
Sensor_temp
Integer
Stage 3 fermentation
Beer ﬁltration
EVx
Bool
Removal of beer
Stop mode
Stop ﬁlling water
LS_level
Bool
Fermentation preparation
Stop fermentation
PB_STOP
End fermentation
Remove yeast
Timer, EVx
Bool
Yeast collection
Start cleaning (2 h)
Timer, EVx
Bool
Cleaning tank
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Bibliography
375
7.10
Consider the challenges related to consensual decision-making in distributed problem
solving by a cooperative scheme involving multiple mobile agents, such as autonomous
underwater vehicles, unmanned aerial vehicles, or automated highway systems. In order
to achieve such consensus, each vehicle must communicate with its neighbors in a coor-
dinated fashion to avoid collisions and adjust its trajectory with respect to the targeted
sequence points. Hence, the key characteristic of such a cooperative scheme is that data
is exchanged with nearby agents (i.e. localized communication), due to limitations in the
communication bandwidth.
a) Using a schematic, sketch the cooperating agent structure, the type of data exchanged,
and the cooperative agent components.
b) Considering that each vehicle has a circular protection zone in a radius around it,
how could the time delay of the consensus convergence be aﬀected under the limited
information exchanged and the dynamic interaction topology at a traﬃc junction.
(Hint: traﬃc volume, junction conﬁguration, vehicles speed among parameters to be
considered)?
Bibliography
1 Arbel, A. and Seidmann, A. (1984). Selecting a Microcomputer for Process Control and Data
Acquisition. IIE Transactions, Taylor & Francis.
2 Bailey, D. and Wright, E. (2003). Practical Scada for Industry. Newnes.
3 Bosh, J. (2003). Design and Use of Industrial Software Architectures. Newnes.
4 Bower, J.M. (1997). Control of Sensory Data Acquisition. Elsevier.
5 Boyer, S.A. (2009). SCADA: Supervisory Control and Data Acquisition, 4e. ISA.
6 Chiang, L.H., Russell, E.L., and Braatz, R.D. (2001). Fault Detection and Diagnosis in Indus-
trial Systems. Springer.
7 Ding, S.X. (2008). Model-Based Fault Diagnosis Techniques: Design Schemes, Algorithms, and
Tools. Springer-Verlag.
8 Erickson, K. and Hedrick, J. (1999). Plant Wide Process Control. Wiley.
9 Barlett, T.L.M. (2010). Industrial Automated Systems: Instrumentation and Lotion Control.
Cengage Learning.
10 Luyben, W. (1990). Process Modeling, Simulation and Control for Chemical Engineers.
McGraw-Hill.
11 Ogunnaike, B. and Ray, W. (1994). Process Dynamics, Modeling and Control. Oxford Univer-
sity Press.
12 Marlin, T. (1995). Process Control: Designing Processes and Control Systems for Dynamic
Performance. McGraw Hill.
13 Trigeassou, J.-C. (2011). Electrical Machines Diagnosis. Wiley-ISTE.
14 Seborg, D.E., Edgar, T.F., Mellichamp, E.A., and Doyle, F.J. (2011). Process Dynamics and
Control, 3e. Wiley.
15 Smith, C. and Corripio, A. (1997). Principles and Practice of Automatic Process Control.
Wiley.
16 Bullo, F., Cortes, J., and Martinez, S. (2009). Distributed Control of Robotic Networks. Prince-
ton University Press.
17 Mesbahi, M. and Egerstedt, M. (2010). Graph Theoretic Methods in Multiagent Networks.
Princeton University Press.
18 Francis B. (2014). A Course on Distributed Robotics, Notes for CDC Bode Lecture.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

376
7 Hybrid Controller Design
19 Wei, R. and Cao, Y. (2011). Distributed Coordination of Multi-Agent Networks. Springer.
20 Kaltjob, P. and Duﬃe, N.A. (2005). Real time, cooperative, predictable decision-making
in Heterarchical manufacturing systems design: requirements, generic methodology and
applications. Journal of Manufacturing Systems 34 (2): 153–160.
21 Bai, H., Arcak, M., and Wen, J. (2011). Cooperative Control Design. Springer.
22 Bertsekas, D.P. and Tsitsiklis, J.N. (1997). Parallel and Distributed Computation: Numerical
Methods. Athena Scientiﬁc.
23 Komenda, J., Masopust, T., and Schuppen, J. (2013). Supervisory control of distributed
discrete-event systems. In: Control of Discrete-event Systems, v. 433 Lecture Notes in
Control and Information Sciences, vol. 10 (ed. C. Seatzu, M. Silva and J.H. van Schuppen),
107–126. Springer.
24 Jadbabaie, A., Lin, J., and Morse, A.S. (2003). Coordination of groups of mobile autonomous
agents using nearest neighbor rules. IEEE Transactions on Automatic Control 48 (6):
998–1001.
25 Lynch, N. (1999). Distributed Algorithms. Morgan Kaufmann.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

377
8
Mechatronics Instrumentation: Actuators and Sensors
8.1
Introduction
Sensors and actuators are key devices involved in information, energy, or material process-
ing within mechatronic systems. Most actuators are electric-driven and convert the electric
energy supplied into mechanical energy or work. They include devices such as motors, con-
trol valves, heaters, solenoids, relay switches, and electromagnets. Usually, they are associated
with mechanical, ﬂuidic, or thermal transmission elements, which drive actions related to the
dynamics of solid, liquid, and gas substances or to chemical reactions. Consequently, mecha-
tronic system dynamics can be captured through binary logic or continuous-time variables.
Depending on their time-varying characteristics, these variables are gathered by the detection
or measurement instrumentation of process variables through transducers or sensors, produc-
ing signals correlated to the variations of the physical input conditions. Transducers transform-
ing one form of energy into another are either: (i) active transducers, when they are able to
generate their own energy (e.g. thermocouples); or (ii) passive transducers, when they require
additional energy (e.g. strain gauge). There are various types of signals, such as: (i) analog voltage
signals; (ii) amplitude- or frequency-modulated signals; (iii) pulse-width-modulated signals;
and (iv) square-wave signals, representing binary values of 1 or 0. Usually, analog process-level
inputs (voltage) are transformed into digital output ranges (bits) so that they can be processed
by a computer. Figure 8.1 displays a generic system interface. Digital sensors produce logic-level
outputs that can be directly interfaced to a control computer, while analog sensors produce volt-
age outputs that require an analog-to-digital converter in order to be interfaced to a computer.
Furthermore, these sensing devices can be either contact (e.g. tachometers) or contact-free (e.g.
encoders and interferometer types) devices.
However, the sensing challenge is to obtain a good estimate of a physical quantity. Indeed,
converting physical phenomena into measurable voltages or current signals often requires sig-
nal conditioning, such as ampliﬁers that boost current and voltage. Therefore, understanding
the diﬀerences and limitations of diﬀerent sensing devices allows suitable ones to be selected
for the design of a computer controller system.
In this chapter, classical models of electrical-driven actuating systems, along with the
dynamics of their associated transmission element dynamics, are presented. Some process
models involving various transmission elements are described, in order to illustrate their
real-life applications. In addition to electrical-driven actuator characterization, sensor types
and measuring principles are covered. Dynamic characterizations are presented for vari-
ous physical system variables such as linear and rotational position, speed, acceleration,
force, torque, chemical content, distance, ﬂow, temperature, proximity, level, and pressure.
In addition, signal conditioning principles and categorization (zero-, ﬁrst-, second-order
sensors, etc.), sensor and detector design speciﬁcations, and device characteristics such as
Control Of Mechatronic Systems: Model-Driven Design And Implementation Guidelines,
First Edition. Patrick O.J. Kaltjob.
© 2021 Patrick O.J. Kaltjob. Published 2021 by John Wiley & Sons Ltd.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

378
8 Mechatronics Instrumentation: Actuators and Sensors
Hybrid
controller
design
Digital 
control system
Electrical-driven
Product or  
Process
D/A 
converter
Signal
conditioner
Detecting and
measurement
unit
Set point
Desired product
or process
performances
Computing unit
Acquistion and transmission unit
Actuating unit
A/D 
converter
Data 
storage
Unit
10101100
11101001
11001000
10101111
10100101
10100000
10100000
10100000
10101101
10100100
10100000
10110010
10100110
10100001
10101111
8 bit 
Binary code
binary code
signal
digitized
carriable
signal
reconstructed
signal
digitized
control
signal
filtered and 
amplified
signal
8 bit 
resolution
signal representing
physical properties
temperature, flow
Velocity, etc…
electrical signal
with sensor noise
(e.g. voltage signal)
Figure 8.1 Sensing and data-acquisition chain.
linearity, sensitivity, limitations, calibration, and saturation are detailed. Finally, the sensing
and operating principles of dynamic sensors such as the dynamics model, time domain, and
frequency response characteristics are developed.
8.2
Actuators in Mechatronics
Electric actuators can generate either a binary output signal (i.e. contact relay) or continu-
ous signal (stepper motor). Such electrical-driven actuating systems can be classiﬁed based
on their electrostatic or electromagnetic – and even electrothermal – design principles. Their
coupled transmission elements generate force to motion, pressure to ﬂow, heat, and so on.
Recent advances in nanotechnologies have led to the development of low-scale actuators (nano
or micro).
Electromechanical actuators usually operate based on the electrostatic (electrostatic actu-
ators) or the electromagnetic (electromagnetic actuators) principle. Electrostatic actuators
use charged particle motion within the induced ﬁeld to generate adequate force, vibration,
pressure, and temperature variation displacement of a membrane or beam. They include
piezo-electric actuators, which deliver strain-based actuation from piezo-materials by gen-
erating a voltage proportional to the applied mechanical deformation. Such piezo-materials
use either ceramics (i.e. lead-zirconate-titanate) or polymers (i.e. polyvinylidene ﬂuoride).
Surrounded by electrodes or attached to them they allow strain-based actuation of up to a few
kilovolts per millimeter. Among micro-device applications are: (i) position systems, such as
micromanipulation (microrobot with piezo-legs), vibration oscillation suppression systems,
valves (micro-pumps in artiﬁcial hearts), and ultrasonic motors; and (ii) handling systems,
such as microgrippers and laser printers (which use charged particles from the toner, which
move based on the electrophotographic principle).
Electromagnetic actuators are based either on electromagnetic force (Lorentz) or on elec-
tromagnetic induction (Faraday) principles, so that induced magnetic ﬁelds around a ferrous
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

8.3 Electromechanical Actuating Systems
379
stator cause an object to move within the air gap separating them. Hence, they convert electrical
energy into rotational or linear mechanical energy. They include linear solenoids, which work by
energizing a solenoid (coil) that generates a magnetic ﬁeld along which a ferromagnetic object
can move, causing an increase in ﬂux linkage. Their typical applications include actuations of
valves, switches, and electromechanical relays. There are also rotary solenoids, where a ball
moves along inclined bearing raceways. Other electromagnetic actuators include electrome-
chanical motors such as motors, AC motors, and stepper motors. As summarized in Table 8.1,
there are various types of electric motor, including series-excited DC motors, DC shunt motors,
DC separately excited motors, AC asynchronous motors, AC synchronous motors, brushless
AC motors, stepper motors, and linear motion motors. All have the following components:
stator, rotor, ﬁeld coil, commutating device (to control DC motor current ﬂow), armature rotor
winding, brush, and slip rings. Due to their wide industrial applications, the modeling and selec-
tion methodologies for various types of motors are presented in the following sections. Table 8.1
summarizes commonly encountered electrical-driven actuating systems.
8.3
Electromechanical Actuating Systems
Electromechanical actuators are mainly driven by electric motors or solenoids and operate on
electromagnetic and electrostatic principles, as described in the following subsections.
8.3.1
Solenoids
Based on the electromagnetic (ferromagnetic) principle, solenoids provide linear or rotary
motion. They operate by moving an iron core inside a wire coil, as depicted in Figure 8.2.
Initially, the iron core is maintained outside the coil by a spring. When a voltage is applied
across the coil, the resulting current generates a magnetic ﬁeld around the coil to produce a
magnetic force capable of moving the core. Solenoids can create voltage spikes. Typical elec-
tromechanical switches, such as relays and contactors, operate on the basis of this principle;
so too do pneumatic valves, car door openers, and so on. Due to their low voltage and current
requirements, such devices can be connected to a logic control unit (e.g. programmable logic
controller).
A typical example is when a current is going through the coil and inducing a magnetic force
that can balance the force of gravity and cause a train (which is made of a magnetic material) to
be suspended. This could be equivalent to a RL circuit V(t) connected in series to a coil whose
ﬂowing current i(t) creates a force capable of balancing upward the train of mass m at a mid level
h(t). The system model around the equilibrium (the train is suspended) can then be given by:
⎧
⎪
⎨
⎪⎩
md2h(t)
dt2
= mg −Ki(t)2
h(t)
V(t) = Ldi(t)
dt
+ i(t)R
Based on the AC inductive (magnetic) principle, a ferromagnetic core moves axially within the
hollow cylinder, inducing the variation of the magnetic ﬂux linking the primary winding to each
of the secondary windings, as depicted in Figure 8.3. Any deviation is related to the position of
the ferromagnetic tube. From Faraday’s law, the electromagnetic induction is given by:
V = −N d𝜙B
dt
= −N d(BA)
dt
(8.1)
where V represents the induced voltage, N the number of turns of the coil, 𝜙B the magnetic ﬂux,
B the magnetic ﬁeld, and A the cross-sectional area of the coil. A current variation produces
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

380
8 Mechatronics Instrumentation: Actuators and Sensors
Table 8.1 Typical electrical-driven actuating systems.
Electric actuators
Actuator types
Description
Binary actuators
(switching circuits)
Thyristor, bipolar,
solid-state relay, diode,
MOFSET, transistor
Electronic switching devices oﬀering high-frequency
response
Electromagnetic
actuators
(electromechanical)
Direct current (DC)
motor
Wounded ﬁeld (separately excited) where speed
varies with armature voltage or ﬁeld current
Wounded ﬁeld (shunt) with constant-speed
application and low starting torque
Wounded ﬁeld (series) with high starting torque and
where speed varies with low load
Wounded ﬁeld (compound) with low starting torque
Permanent magnet (variable speed but ﬁxed
magnetic ﬁeld)
Brushless (electronic commutation) fast response
Alternating current
(AC) motor
Induction motor
Synchronous motor
Universal motor (AC/DC power supply)
Stepper motor
Hybrid (changes pulse signal into rotational motion)
Variable reluctance (precision motion but requires
switching devices)
Electromagnetic
actuators (non-
electromechanical)
Relay contact,
electromagnet,
solenoid
Applications requiring large force
Electrohydraulic
actuators
Electromagnetic
cylinder
Linear motion cylinder
Electrovalves
Directional valves, pressure valves
Electropump, fan,
blower
Hydraulic motor (gear, vane, piston, rotary,
reciprocating)
Electrostatic
actuators
Piezo-electric motor
Voltage proportional to applied stress (laser printer)
Electrothermal
actuators
Heater
Furnace
Low-scale material
devices
(micro/nano)
Shape memory alloys
Temperature-sensitive
Dielectric elastomer
actuators
Spring-sensitive
Ionic polymers
Electrostrictive
Piezo-electric material
Micropumps, micromotor, microvalve, microrobot
(micromanipulation, cave exploration)
Electroactive polymers
Electromagnetics
Door locks, HVAC control
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

8.3 Electromechanical Actuating Systems
381
Figure 8.2 Typical energized and unenergized
solenoids.
No current flow
(OFF)
Coil
Current flow IN
(ON)
Applied AC voltage
Output
voltage
Insulating
cover
Iron core
Secondary coil
Vs1
Arm displacement, x
Primary coil
Vprimary
Voutput
Secondary coil
Vs2
Surface
finishing
Figure 8.3 Solenoid-based surface-roughness characterization.
a magnetic ﬁeld and consequently changes the orientation of the source. For small motions,
the position of the core is proportional to the level of the output signal voltage. Otherwise, the
relationship is nonlinear. The windings are designed to allow a linear relationship between the
core position and the output voltage, such that the primary winding voltage is given by:
Vprimary = V sin 𝜔t
(8.2)
The voltage diﬀerence as a function of core linear position x results in:
Vsec ondary = kVx sin 𝜔t
(8.3)
where k is a constant and x is the core linear position. By its value and sign, the level of the
output voltage indicates the magnitude of the induced winding voltage diﬀerence, as well as its
in or out phase status in relation to the primary coil applied signal. It is given by:
Voutput = kVx
(8.4)
8.3.2
Digital Binary Actuators
Digital binary actuators are used to enable or disable event occurrences or systems oper-
ations by ﬂipping between two discrete states. Binary actuators can be either: (i) bistable
actuating systems, where they are designed around material with bistable properties, such
as electromechanical relays and solid state devices; or (ii) discrete actuated systems, where
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

382
8 Mechatronics Instrumentation: Actuators and Sensors
they associate switching power electronic devices with actuators such as electric motors
and hydraulic-powered cylinders. Hence, they are light-weight and are embedded in a load
structure such that they can change the dynamic behavior autonomously (e.g. vibration
attenuation and noise cancelation). Furthermore, they do not need power to maintain each
stable state. Among bistable actuators, there are:
• Dielectric elastomer actuators (DEAs), which have a ratcheting transmission that acts as a
power spring. High-speed switching DEAs are suitable for robotic systems.
• Shape memory alloys (SMAs), which display metal alloy phase contractions in the face of
thermal variations. They are very sensitive to environmental conditions (e.g. temperature,
humidity, dust).
• Ionic polymers, which can vary their volume once when some of their ions are absorbed by
their polymer microstructure.
• Electroactive polymer actuators, which generate a decreasing force as their deformation
increases.
• Piezo-actuators, which can have a stacked or a laminar design conﬁguration. Laminar-design
actuators consist of piezo-electric strips with electrodes bonded onto them, while stacked
actuators consist of thin wafers of piezo-active material between metallic electrodes in par-
allel connection. Both are suitable for: (i) suppressing oscillations, thanks to piezo-active
materials that convert the mechanical oscillations into electrical energy; (ii) microrobot appli-
cations, where the legs are made of piezo-actuators, allowing them to be lengthened, short-
ened, or bent in response to an applied voltage at the electrodes; (iii) micropump applications,
where their diaphragms are actuated by piezoactuators, allowing I/O check valves to be
opened for ﬂuid pumping; (iv) micromanipulators, which convert contraction into gripping
operations and are suitable for positioning applications; (v) microdosage devices, which allow
a high-precision dosage of liquids within a range of nanoliters; and (iv) piezo-motors, which
convert oscillations into a continuous motion, resulting in an elliptical motion over the con-
tact area. Various oscillations oﬀer the ability to develop diﬀerent kinds of piezo-motors:
longitudinal, transversal, shear, and torsional.
There are also micro and nano devices (less than 15 mm in size) with embedded electronic cir-
cuitry, such as electrostatic motors, which use the electrostatic principle to generate actuating
forces.
Example 8.1
Consider the formal modeling of a logic function for the motor pump activa-
tion of a solar heating system illustrated in Figure 8.4. Here, the motor pump is activated by a
pulse-type start push button and two digital sensors: irradiation from a solar source toward a
photodiode (PD) and a limit switch turned ON (closed) when the collector is not full; all of this
is connected to a two-input AND gate, corresponding to the logic Boolean function given by:
Pump = SW ⋅PD ⋅LS
An alternative solution could be to implement it using program-based logic devices (PLDs)
that are made of integrated circuits (several hundred logic gate structures). These include: (i) a
programmable logic array (PLA), which has an AND layer in the middle and an OR layer level
at output; and (ii) a programmable array logic (PAL), which has a programmable AND layer
and a ﬁxed OR layer.
8.3.3
DC Motors
Motors are the most commonly used actuators in mechatronics. In terms of electrical-driven
actuators used for precision vertical motion, direct current (DC) motors are preferred. DC
motors have two distinct circuits: an outside set of coils, called a ﬁeld stator circuit, and an
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

8.3 Electromechanical Actuating Systems
383
Hot water
tank
Tw(t)
Pump
Glass
Collector
Water
supply
mp
LS
+ 4.7 V
PD
Solar
irradiation
SW: Start push button
PD: Photo-detector
LS: Limit switch for water collector level
R
R
+ 4.7 V
R
EV1
+ 4.7 V
SW
Figure 8.4 Solid state circuit for control of a solar thermal heating system.
inside set, called an armature rotor circuit. When a DC voltage, Vf (t) is applied as excitation,
the induced force within the coil causes the rotation of the rotor armature (i.e. due to gener-
ating torque). Depending on the armature and ﬁeld circuit conﬁguration, the application of
Kirchhoﬀ’s voltage law into the ﬁeld and armature circuits respectively yields:
Vf (t) = Rf if (t) + Lf
dif (t)
dt
(8.5)
and:
Va(t) = Raia(t) + La
dia(t)
dt
+ Eb(t)
(8.6)
where Rf and Lf represent the resistance and the inductance of the ﬁeld winding, respectively.
The current if (t) produced in the winding generates the magnetic ﬁeld necessary for rotor rota-
tion in the armature circuit, such that the voltage applied across the armature terminals is Va(t)
and the current ﬂowing in the armature circuit is ia(t). Ra and La are the resistance and the
inductance of the armature winding, respectively, and Eb is the total voltage induced in the
armature. Then, applying the induction eﬀect within the motor armature winding, the torque
for a multi-turn coil armature conductor is given by:
Tm(t) = 2NBvlia(t)r = K𝜙ia(t) = Ktia(t)
(8.7)
where l is the conductor length, r is the radius of the armature conductor about the center of
rotation, L is the axial length of the conductor, Bv is the average ﬂux density under a pole, A
is the area of the coil, and 𝜙is the ﬂux/pole in the Weber and torque constant Kt, depending
on the coil geometry. The direction of the current ﬂow determines the rotation direction of
the motor shaft. Thus, using Faraday’s law, the generated EMF voltage induced in the motor by
several coils wound on the rotor can be obtained as:
Eb(t) = 2NBvlr(𝜔m(t))
(8.8)
Hence, during the transient period, the applied armature voltage Va(t) varies with the current
(producing torque proportional to emf Eb(t)) until it equals the applied voltage at steady state
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

384
8 Mechatronics Instrumentation: Actuators and Sensors
such that:
Eb(t) = Va(t) −Raia(t)
(8.9)
Here, if any current ﬂows in the coil, there is no further acceleration, meaning the rotor
turns at a constant speed. Hence, the electrical power delivered is equivalent to the mechanical
power, so that:
Eb(t)ia(t) = 𝜔(t)Tm(t)
(8.10)
Electrical connections of armature and ﬁeld windings are used to classify DC motors. As such,
the ﬁeld windings can be either self-excited or separately excited, meaning that the terminals of
the winding can be connected across the input-voltage terminals or fed from a separate voltage
source. Furthermore, in self-excited motors, the ﬁeld winding can be connected either in series
or in parallel.
For example, in the case of the circuit series conﬁguration (i.e. a self-excited series DC motor),
the ﬂux is directly proportional to the armature current. These motors are called series wound
DC motors or universal motors, as they can run the same whether using an AC or a DC voltage
source. Hence, the induced voltage results in:
Va(t) = Eb(t) + (Rf + Ra)ia(t) + (Lf + La)dia(t)
dt
(8.11)
As long as the ﬂux is directly proportional to the ﬁeld current, the torque developed in the
rotor can be expressed as:
Tm(t) = (Kf ia(t))Kia(t) = Kf Kia(t)2
(8.12)
where Kf is a constant that depends on the number of turns in the ﬁeld winding and the geom-
etry of the magnetic circuit. Under steady-state operating conditions, the armature current
results in:
ia(t) =
Va(t)
Ra + Rf + Kf K𝜔(t)
(8.13)
The rotor torque developed yields:
Tm(t) = Kf K
Va(t)2
(Ra + Rf + Kf K𝜔(t))2
(8.14)
As illustrated in Figure 8.5, consider a DC motor with a permanent magnet conﬁguration
having a linear torque-speed operating range. Table 8.2 summarizes the process variables and
parameters involved. The DC motor shaft is connected to a gearbox with a given ratio Kg:
Kg = ni
nm
= 𝜃i
𝜃m
where ni and nm are the number of teeth on the load-side and the motor-side gears, respectively,
when a load with inertia JL is attached to the output shaft of the gearbox. Therefore, the load
inertia reﬂected at the motor shaft is given by:
JL→M =
1
Kg
2 JL
Nr = NPL
NPM
= zPL
zPM
𝜔m(t) = Nr𝜔L(t)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

8.3 Electromechanical Actuating Systems
385
Driven wheel
DPL
Driving wheel
DPM
Pulley
3rdfloor
2ndfloor
1stfloor
Cabin weight, m
Passenger weight, M
Pb_1
Pb_2
Pb_3
Pb_1
Pb_2
Pb_3
sw3
sw2
sw1
G_PD
Position encoder
Pb_1
Pb_2
Pb_3
Tm(t)
TL(t)
Va(t)
JL
Ka
Shaft DC motor
J, B
Mechanical
load
DC
amplifier 
La
La
+
−
Armature circuit
Ia(t)
EB(t)
Motor-driven
rotating
encoded disk
Track 1
Track 2
180°
270°
0°
90
135
225°
xx
0
1
2
3
4
5
6
7
315°
b1
b2
b0
2
1
0
Photo detectors
(photo transitors)
Signal squaring, decoding,
and up/down counting
Ref
A
B
t
4 3 2 1
t
Binary
number
sequence
C
R
+ 4.7 V
1
0
Digital
inputs
Processor and
memory modules
DAQ
(analog
outputs)
INT
OAB
ODB
Logic/continuous
program
Initialize
Read ports
Command alg
Control alg
Check status
Logic alg
repeat
IR7
IR6
IR0
IDB
IAB
Permanent DC motor
𝜔(t) 𝜃(t)
Light
source
(LED) 
45°
1
n
Figure 8.5 Schematic of an armature-controlled DC motor.
Table 8.2 Control variables and system parameters of a DC motor.
Parameters
Description and values
Variables
Description and values
Ka
Ampliﬁer gain (V V−1)
Va(t)
Apply DC input voltage (V)
La
Armature inductance (Henry)
Tm(t)
Motor torque (N.m)
Ra
Armature resistance (Ohms)
ia(t)
Armature current (A)
Kb
Back emf constant (V s−1 rad−1)
Eb(t)
Induced armature EMF (V)
B
Motor damping (N.m.s−1 rad−1)
𝜔(t)
Motor velocity (rad s−1)
J
Motor inertia (N.m.s−2 rad−1)
𝜃(t)
Motor position (rad)
JL
Load inertia (N.m.s−2 rad−1)
TL(t)
Load torque (N.m)
Kt
Motor torque constant (N.m−1 A−1)
if (t)
Field current (A)
Km
Motor constant (V s−1 rad−1)
Ke
Tachometer gain (V s−1 rad−1)
Kg
Gearbox ratio (%)
Lf
Field inductance (Henry)
Rf
Field resistance (Ohms)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

386
8 Mechatronics Instrumentation: Actuators and Sensors
Table 8.3 Coil location per number of stator phases.
Number of phase m
1
2
3
𝜙Oj of phase 1
0
0
0
𝜙Oj of phase 2
90
60
45
𝜙Oj of phase 3
—
120
90
𝜙Oj of phase 4
—
—
135
The speciﬁc formula for the load inertia can be derived by applying Newton’s balance equation
to the motor shaft, this yields:
J d𝜔(t)
dt
+ B𝜔(t) = Tm(t) −TL→M(t)
with:
TL→M(t) = JL→M
d𝜔(t)
dt
=
1
Kg
2 JL
d𝜔(t)
dt
Thus, the mechanical part of the motor and load can be rewritten as:
Jeq
d𝜔(t)
dt
+ B𝜔(t) = Tm(t)
Jeq = J +
1
Kg
2 JL
From its conﬁguration, a linear relationship is assumed between the motor torque and the
induced current i(t), such that:
Tm(t) = Kmia(t)
In general, Km and Ke are considered equal when neglecting the losses due to the electrome-
chanical power conversion. Therefore, it is also assumed that:
Ke = Km = Kb
After algebraic manipulations to eliminate the variables Te(t), Eb(t), and ia(t), the relationship
between the applied armature voltage Va(t) and the load position 𝜃L(t) or the output DC motor
rotor position 𝜃(t) (assuming a synchronized motion such as (𝜃L(t) = 𝜃(t))) can be derived as:
Kmia(t) = Jeq
d𝜔(t)
dt
+ B𝜔(t)
which is equivalent to:
Km
dia(t)
dt
= Jeq
d2𝜔(t)
dt2
+ Bd𝜔(t)
dt
Also:
Eb(t) = Kb𝜔(t)
Vb(t) = Raia(t) + Ladia(t)
dt
+ Eb(t) = Ra
Km
(
Jeq
d𝜔(t)
dt
+ B𝜔(t)
)
+ La
Km
dia(t)
dt
+ Kb𝜔(t)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

8.3 Electromechanical Actuating Systems
387
Thus, the model of the DC motor velocity system can be obtained such that:
d2𝜔(t)
dt2
+
RaJeq + LaB
LaJeq
d𝜔(t)
dt
+ RaB + KbKm
LaJeq
𝜔(t) = Km
LaJeq
Va(t)
by rearrangement, this yields:
𝜔(t) +
RaJeq + LaB
LaJeq
d𝜔(t)
dt
+
LaJeq
RaB + KbKm
d2𝜔(t)
dt2
+ =
Km
RaB + KbKm
𝜔(t)
Thus, the speed response 𝜔(t) is dominated by the mechanical subsystem. This model is valid
for DC motors with negligible friction and constant thermal operating characteristics. This is
assimilated to a third-order model if the position rather than the velocity is controlled.
By neglecting the eﬀect of the armature inductance La, the model becomes a ﬁrst-order model
given by:
RaJeq
Km
d𝜔(t)
dt
+ RaB + KbKm
Km
𝜔(t) = Va(t)
which can be rewritten as:
RaJeq
RaB + KbKm
d𝜔(t)
dt
+ 𝜔(t) =
Km
RaB + KbKm
Va(t)
The transfer function in Laplace domain is given by:
G(s) = Ω(s)
Va(s) =
K
1 + 𝜏ems
Alternatively, the DC motor modeling of the internal current control can be given by:
GI(s) = Ia(s)
Va(s) =
Jeqs + B
LaJeqs2 + (RaJeq + LaB)s + RaB + KbKm
If the short characteristic time dynamics were neglected, a position-based model of DC motor
could be:
1
𝜔n2
d𝜃3(t)
dt3
+ 2𝜉
𝜔n
d𝜃2(t)
dt2
+ d𝜃(t)
dt
= KV a(t)
Here, when the mechanical part is a dominant component of the DC motor model, it can
be considered from operating conditions as an integration process. Thus, the model can be
approximated such that:
d𝜃(t)
dt
= KV a(t)
8.3.4
AC Motors
Despite DC motors being the most commonly encountered, alternating current (AC) motors
such as synchronous, asynchronous, and induction (single or three-phase) motors are suit-
able for applications requiring high torque. In the case of three-phase induction motor mod-
els, voltage, current, and magnetic ﬂux quantities are expressed in terms of complex state space
vectors. The resulting state space models are valid for any instantaneous variation of voltage and
current, so they describe their performance under both steady-state and transient operations.
Because an induction motor displays time-variant electrical and mechanical system dynamics,
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

388
8 Mechatronics Instrumentation: Actuators and Sensors
a commonly used modeling strategy is to approximate it by a DC-like motor model after suc-
cessive transformations. The resulting induction motor model returns a constant input voltage
and frequency. Hence, using Faraday laws, for the three stator phases, a global expression in the
matrix form yields:
⎡
⎢
⎢⎣
Vsa(t)
Vsb(t)
Vsc(t)
⎤
⎥
⎥⎦
= Rs
⎡
⎢
⎢⎣
isa(t)
isb(t)
isc(t)
⎤
⎥
⎥⎦
+ d
dt
⎡
⎢
⎢⎣
𝜓sa(t)
𝜓sb(t)
𝜓sc(t)
⎤
⎥
⎥⎦
(8.15)
Similarly, the three rotor phases can be written as:
⎡
⎢
⎢⎣
Vra(t)
Vrb(t)
Vrc(t)
⎤
⎥
⎥⎦
= Rs
⎡
⎢
⎢⎣
ira(t)
irb(t)
irc(t)
⎤
⎥
⎥⎦
+ d
dt
⎡
⎢
⎢⎣
𝜓ra(t)
𝜓rb(t)
𝜓rc(t)
⎤
⎥
⎥⎦
(8.16)
where Rs, Rr are stator and rotor winding equivalent resistances, while Vsa, b, c(t), Vra, b, c(t),
𝜓sa, b, c(t), 𝜓ra, b, c(t), isa, b, c(t), ira, b, c(t) are stator and rotor three-phase motor a, b, c voltage,
ﬂux, and current, respectively. Consider a 2-from-3 reference frame transformation given by
T23 =
√
2
3
[
1
−1
2
−1
2
0
√
3
2
−
√
3
2
]
. Thus, using Equation (8.16), the dynamics equations become:
T23[Vabcs(t)] = T23
{
Rs[iabcs(t)] + d[𝜓abcs(t)]
dt
}
(8.17)
[V𝛼𝛽s(t)] = RsT23[iabcs(t)] + d[T23𝜓abcs(t)]
dt
(8.18)
This can be rewritten as:
[𝜓𝛼𝛽s(t)
𝜓𝛼𝛽r(t)
]
=
⎡
⎢
⎢
⎢
⎢⎣
𝜓s𝛼
𝜓s𝛽
𝜓r𝛼
𝜓r𝛽
⎤
⎥
⎥
⎥
⎥⎦
=
⎡
⎢
⎢
⎢
⎢⎣
Ls
0 M•P(𝜃)
0
Ls
M•P(−𝜃)
Lr 0
0 Lr
⎤
⎥
⎥
⎥
⎥⎦
⎡
⎢
⎢
⎢
⎢⎣
is𝛼
is𝛽
ir𝛼
ir𝛽
⎤
⎥
⎥
⎥
⎥⎦
=
⎡
⎢
⎢
⎢
⎢⎣
Ls
0 M•P(𝜃)
0
Ls
M•P(−𝜃)
Lr 0
0 Lr
⎤
⎥
⎥
⎥
⎥⎦
[i𝛼𝛽s(t)
i𝛼𝛽r(t)
]
(8.19)
where P(𝜃) =
[cos 𝜃−sin 𝜃
sin 𝜃cos 𝜃
]
and Ls = ls −ms; Lr = lr −mr; M = 3
2msr. It is desired to trans-
form induction motor need to be subsequently behaving as time-invariant DC motors at a
steady state. These is𝛼and is𝛽from the stator reference frame (α, β) into the d-q reference frame,
rotating at the same speed as the angular frequency of the phase currents. The resulting isd and
isq components will then be independent of time and speed. Considering the d-axis aligned
with the rotor ﬂux, the transformation is illustrated in Figure 8.6, where 𝜃ﬁeld is the rotor ﬂux
position.
β
α
Ψrα
θfield
d
q
Ψrβ
Ψr
Figure 8.6 Park transformation.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

8.3 Electromechanical Actuating Systems
389
Consider the case of a squirrel-cage induction motor with stator and rotor winding as
depicted in the complex d-q equivalent circuit of an induction motor (neglecting rotor
leakage inductance). Here, the voltage feeds the squirrel-cage induction motor model in a d-q
synchronously rotating frame and ensures that iqs delivers the desired electromagnetic torque
such that:
𝜃s = 𝜃+ 𝜃r
(8.20)
Then, the stator and rotor components become:
[x𝛼𝛽s] = P(𝜃s)[xdqs]
(8.21)
[x𝛼𝛽r] = P(𝜃s)[xdqr]
(8.22)
After transformation of the motor quantities from a reference frame to the general reference
frame, which is the frame attached to the rotor ﬂux linkage space vector with direct axis (d) and
quadrature axis (q) (d-q coordinates), the motor model is as follows:
⎧
⎪
⎨
⎪⎩
Vds(t) = Rsids(t) + 𝜓ds(t)
dt
−𝜔s𝜓qs(t)
Vqs(t) = Rsiqs(t) +
𝜓qs(t)
dt
−𝜔s𝜓ds(t)
(8.23)
Vdr(t) = 0 = Rridr(t) + 𝜓dr(t)
dt
−(𝜔s −𝜔)𝜓qr(t)
Vqr(t) = 0 = Rriqr(t) +
𝜓qr(t)
dt
−(𝜔s −𝜔)𝜓dr(t)
(8.24)
The electromagnetic torque can be expressed by using space vector quantities as:
Tm(t) = 2
3np(𝜓sa(t)is𝛽(t) −𝜓s𝛽(t)is𝛼(t))
(8.25)
Thus, the mechanical model of the induction motor is given by:
J d𝜔(t)
dt
+ B𝜔(t) =
np
2 (Tm(t) −TL(t))
(8.26)
where np is the number of motor pole pairs (H) and Tm(t) is the electromagnetic torque (N.m).
Rs, Rr, Ls, Lr, M, J, and B are, respectively, the stator phase resistance (Ω), the rotor phase resis-
tance (Ω), the stator phase inductance (H), the rotor phase inductance (H), the mutual (stator to
rotor) inductance (H), the moment of inertia of the rotor and the load (kg m−2), and the damp-
ing coeﬃcient of the bearing (kg m−2 s−1). This motor rotates at a speed of 𝜔(t) = d𝜃(t)∕dt(rad
s−1) (i.e. with direct and quadrature axes x, y), where 𝜃(t) is the angle between the direct axis
of the stationary reference frame (α) attached to the stator and the real x-axis of the general
reference frame.
8.3.5
Stepping Motors
A stepping or stepper motor is an incremental electric actuator consisting of wound ﬁelds and a
permanent magnet. Such incremental motors are either permanent magnet, hybrid, or variable
reluctance motors. Each received signal pulse of current by one of the stator windings gener-
ates rotational motion of a speciﬁc number of degrees (ﬁxed angular step). Therefore, each pulse
from the command generation system corresponds to an angular positioning and deﬁnes the
step mechanical increment. Thus, the pulse frequency determines the motor angular velocity.
Incremental motors can be either unipolar with n rotor poles for 360/n steps or bipolar. Their
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

390
8 Mechatronics Instrumentation: Actuators and Sensors
rotors could have as many as 200 poles producing up to 1.8∘per step, that is, a stepper motor
can move by 90∘, 45∘, 18∘, or even a fraction of a degree per pulse. In the case of variable reluc-
tance magnet stepper motors, they have toothed rotors and stator winding. Hence, rotation is
induced by the reduction of magnetic reluctance between the stator poles and rotor poles. The
motor step angle is determined by the number of teeth on the rotor, while the excitation type
determines the stepping rates. The hybrid stepper motor has two multi-toothed armatures cov-
ering a cylindrical permanent magnet and deﬁning the motor step angle between 0.9∘and 5∘.
A permanent magnet stepper motor has a cylindrical permanent magnet. The alignment of the
stator magnetic ﬁeld with the permanent magnet ensures its rotation by a step angle between
45∘and 120∘.
These motors have a low torque capability and use on/oﬀswitch outputs for position control.
Usually, the stepper motor control is an open loop through to the sequencing pulse-generation
system executed within a personal integrated controller (PIC). Stepper motors can be found in
machine tools, typewriters, printers, watches, pointing mechanisms for antennas, mirrors for
space applications, telescopes, and so on.
The number of steps per revolution of the rotor, S, can be calculated as:
S = 2mNr
(8.27)
where Nr is the number of rotor pole pairs and m is the number of stator phases. The angular
step or number of degrees a rotor should turn per step is:
Δ𝜙= 360
S
(8.28)
If a sinusoidal characteristic is assumed for the magnetic ﬁeld in the air gap, the contribution
of each phase j to the motor torque Tmj(t) yields:
Tmj(t) = Km sin(n𝜙(t) −𝜙oj(t))ij(t)
(8.29)
where Km is the motor constant, 𝜙(t) is the actual rotor position, 𝜙oj(t) is the location of the coil
j in the stator, ij(t) is the current in the coil as a function of time, and n is half the number of
rotor teeth. The relationship between the supplied voltage Uj(t) and the coil properties is given
by:
Uj(t) = Ebj(t) + Rij(t) + L
dij(t)
dt
(8.30)
Ebj(t) is the electromotive force induced in phase j in each coil. It is given by:
Ebj(t) = Km sin(n𝜙(t) −𝜙oj(t))𝜔(t)
(8.31)
where 𝜔(t) is the angular velocity of the rotor, R is the resistance of the coils, and L is the induc-
tance of the coil. The total torque produced by the stepper motor is:
T(t) =
k∑
j=1
Tmj(t) = J d𝜔(t)
dt
+ B𝜔(t) + Tf (t)
(8.32)
The arrangement of the coils has to be considered for more than one phase. Table 8.3 sum-
marizes the angular position of the coils in the stator for various phases.
8.3.6
Transmission Mechanical Variables
Mechanical transmission elements (e.g. gearbox, pulley, screw) connected to an electrical-
driven motor allow the transfer of their rotational speed to the attached load. Based on the
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

8.3 Electromechanical Actuating Systems
391
Table 8.4 Dynamical equations for the motion and torque of some mechanical transmission systems.
Equations
Mechanical transmission types
Motion
Inertia and torque
Belt pulley (timing belt)
Driven wheel
Driving wheel
Electric
motor
DPM
DPL
Load
n 1
Pulley
Nr = NPL
NPM
= DPL
DPM
𝜔m(t) = Nr𝜔L(t)
Jtotal = JPL →M + JL →M + JM + JPM
derived from:
JPL→M =
(
1
Nr
)2 JPL
𝜂
JPL =
mPLD2
DL
8
JL→M =
(
1
Nr
)2 JL
𝜂
JPM =
mPMD2
DM
8
Screw-wheel drive
Electric
motor
Load
Dwheel
Screw
Screw
wheel
Nr = NL
NM
= zwheel
zscrew
𝜔m(t) = Nr𝜔L(t)
Jtotal = JL →M + Jwheel →M + JM + Jscrew
derived from:
JL→M =
(
1
Nr
)2 JL
𝜂
Jwheel =
mwheelD2
wheel
8
Jwheel→M =
(
1
Nr
)2 Jwheel
𝜂
Jwheel = mscrewl2
screw
12
Crankshaft
Electric
motor
DPL
Load
LMS
Nr = NL
NM
𝜔m(t) = Nr𝜔L(t)
Jtotal = JL →M + Jb →M + Jb + Jma
derived from:
Jb→M =
(
1
Nr
)2 Jb
𝜂
Jwheel =
mbl2
b
12
Jma = mmal2
ma
8∕12
Cylindric gear
Driven
screw wheel
Driving
screw wheel
Electric
motor
DGM
DGL
Load
Nr = NGL
NGM
= DGL
DGM
𝜔m(t) = Nr𝜔L(t)
Jtotal = JL →M + JGL →M + JM + JGM
derived from:
JGL→M =
(
1
Nr
)2 JGL
𝜂
JGL =
mGLD2
GL
8
JGM =
mGMD2
GM
8
JL→M =
(
1
Nr
)2 JL
𝜂
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

392
8 Mechatronics Instrumentation: Actuators and Sensors
Table 8.5 Parameters and variables used.
Symbol
Deﬁnition
Units
JM
Motor inertia
kg.m2
JL
Load inertia
JPL
Passive pulley inertia
JPM
Active pulley inertia
JPL →M
Passive pulley to motor inertia
JL →M
Load to motor inertia
JGL
Passive gear wheel inertia
JGM
Active gear wheel inertia
Jma
Crankshaft follower inertia
Jb
Crankshaft cam inertia
Jma →M
Crankshaft to motor inertia
Jwheel
Wheel inertia
Jwheel →M
Wheel to motor inertia
Jscrew
Screw inertia
Jtotal
Total inertia
mb
Mass of crankshaft
kg
mscrew
Mass of screw
mPL
Mass of passive pulley
mPM
Mass of active pulley
mwheel
Mass of wheel
mma
Mass of crankshaft follower
𝜂
Eﬃciency
No unit
Nr
Power transmission ratio
NM
Motor rotational speed
rev.min−1
NL
Load rotational speed
NPL
Passive pulley rotational speed
NPM
Active pulley rotational speed
Nscrew
Screw rotational speed
Nwheel
Wheel rotational speed
𝜃m(t)
Motor shaft angular position
rad
𝜃L(t)
Load angular position
𝜔m(t)
Motor shaft angular velocity
rad.s−1
𝜔L(t)
Load angular velocity
DPL
Diameter of passive wheel
Meters
DPM
Diameter of active wheel
TL →M(t)
Load to motor torque
N.m
TL(t), Tm(t)
Load torque, motor torque
zscrew
Number of ﬁlets of screw
No unit
zwheel
Number of wheel teeth
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

8.4 Electro-Fluidic Actuating Systems
393
load torque model and their inertia at the level of the motor shaft, the relationship between
the load torque and the required motor shaft speed yields:
Treq(t) = Jtotal
d𝜔m(t)
dt
+ B𝜔m(t)
(8.33)
TL→M(t) = TL(t)
𝜂Nr
(8.34)
Then, the total torque required is given by:
Tm max(t) = Treq(t) + TL→M(t)
(8.35)
𝜔m(t) = Nr𝜔L(t)
(8.36)
A safety torque, including particular starting and braking torques, should be added. Tables 8.4
and 8.5 present a generic torque equation, with the symbols used for some typical mechanical
transmission systems.
8.4
Electro-Fluidic Actuating Systems
Electrical-driven ﬂuidic actuating systems, such as electric motors associated with pumps, fans,
blowers, and compressors, raise the mechanical energy of a ﬂuid, causing an increase in and
control of the ﬂow rate and pressure, or a motion or elevation of the ﬂuid. Fluidic actuating
systems usually have volumetric ﬂow rate as their input and pressure diﬀerence as their out-
put. Electro-ﬂuidic actuating systems are classiﬁed based on the type of ﬂuid, the ﬂow rate,
and the pressure. While typical fans are used to move gas-based ﬂuids because they require a
high-volume and low-pressure diﬀerential, blowers are suitable for a similar volume but moder-
ate pressure diﬀerential. In the case of ﬂuids requiring a large pressure diﬀerential, compressors
are used. Usually, ﬂuidic actuating systems oﬀer a higher power-to-weight ratio, better speed
and acceleration responses, and easier directional change compared to mechanical elements
for material handling and transport applications (automotive, aerospace, etc.). Fluids can be
characterized by density (mass per unit of volume), viscosity (resistance to deformation), and
bulk modulus (compressibility of ﬂuid).
8.4.1
Electric Motorized Pumps
Electric pumps transform electrical energy into potential hydraulic energy by raising the ﬂuid
pressure through the volume space reduction during inlet-to-outlet pump-ports travel. They
take the form of either ﬁxed-ﬂow gears or variable-ﬂow pumps (where the ﬂow can be variable
or not). A pump can be associated to an electric valve for directional ﬂow control, as well as to
increase velocity of the ﬂuid. The volume of ﬂuid that is moved during one revolution is called
the pump displacement D. This pump displacement and the maximum rotational speed 𝜔max
determine the pump capacity Q so that:
Q = D𝜔max
(8.37)
Typical pumps are either positive-displacement pumps or centrifugal pumps. Positive-
displacement pumps are of either rotary or reciprocating type. They generate ﬂuid motion by
mechanically displacing segmented ﬂuid through a discharged nozzle. Reciprocating pumps
move ﬂuid by varying the ﬂuid pressure using a diaphragm, while rotary pumps add kinetic
energy to the ﬂuid by raising the ﬂow rate, which in turn raises the pressure of the ﬂuid as it
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

394
8 Mechatronics Instrumentation: Actuators and Sensors
One pump
Pump with
flow rate Q1
Pump with
flow rate Q1
Pump with
flow rate Q2
H1
H1
H2
H1
H2
Q1 = Q2
H2
Pump with
flow rate Q2
Pump with
flow rate Q1
Q1+Q2
One pump
Two pumps
H
H1
H2
Q1 = Q2
Q1 + Q2
Q
H1 = H2
Q1 = Q2
Q1
Two pumps
Two pumps
Figure 8.7 Serial and parallel pump connections.
exits the discharged nozzle. Rotary pumps can use other devices to perform ﬂuid compression,
including gears, lobes, and screws. Other displacement pumps include volumetric piston
pumps, which have either an axial or a radial conﬁguration, corresponding to one or more
cylinders with a piston sliding into each. Here, the piston displacement determines the ﬂuid
ﬂow. Centrifugal pumps use a rotating impeller to increase the ﬂuid pressure and velocity.
The center of the rotating impeller receives an inﬂow of ﬂuid, which in turn is mechanically
accelerated consequent to its rotation before it leaves through the side of the pump.
The operational characteristics of a pump can be obtained by plotting the curves of the head,
H, the power, P, and the eﬃciency of the pump, according to the ﬂow rate, Q, for a number of
constant velocities, N, as illustrated in Figure 8.7. It should be noted that the eﬃciency takes a
maximum value and then suﬀers a reduction. The ideal condition of the operation is achieved
when the total head, H, and the ﬂow rate, Q, have the same values as the maximum eﬃciency.
This point is considered the “operating point.”
The choice between pumps depends on the ﬂuid type to be pumped, as well as the expected
head and ﬂow rate. The pumps can be set in series, such that the overall head, H, is the sum of
each pump ﬂow rate. When connected in parallel, the ﬂow rate, Q, is increased by adding the
total head, H, of each pump working by itself. In this case, the curve H versus Q can be obtained
by adding the ﬂow rates of each pump operating by itself with the same total head. The aﬃnity
laws or fan laws are as follows.
The ﬂowrate is a function of the impeller speed (as diameter) and is given by:
Q2 = Q1
(N2
N1
)
= Q1
(D2
D1
)
(8.38a)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

8.4 Electro-Fluidic Actuating Systems
395
The head as a function of the impeller speed or diameter is given by:
H2 = H1
(N2
N1
)2
= H1
(D2
D1
)2
(8.38b)
The power as a function of the impeller speed or diameter is given by:
BHP2 = BHP1
(N2
N1
)3
= BHP1
(D2
D1
)3
(8.38c)
The power requirement of a pump can be derived from the overall head developed, as well as
the mass of ﬂuid to be pumped per unit time. This is given by the product of the shaft velocity 𝜔
and the mass ﬂow rate Q(t). Hence, pumps are deﬁned by the relation between the ﬂuid pressure
P, the ﬂow Q(t), the shaft torque T(t), and the velocity 𝜔(t), given by:
Power = ΔPQ(t) = T(t)𝜔(t)
(8.39a)
If Dv is the volumetric displacement of the pump (m rad−1) then:
{
T(t) = DvΔP
Q(t) = Dv𝜔(t)
(8.39b)
For a ﬂuidic system such as a pump, the load torque of the ﬂuid in the tank can be estimated
by:
TL(t) = gQ(t)h(t)
𝜔(t)
(8.39c)
with g being the gravitational acceleration, Q(t) the ﬂow rate, h(t) the tank height, and 𝜔(t) the
pump rotational speed.
Other electrical-driven ﬂuid movers include centrifugal fans, where the speed of air stream
as ﬂuid increases due to a rotating impeller, being highest when the ﬂuid reaches the end of
the blades. The speed is then converted into pressure by the blade shapes. Axial fans move
an air stream along the axis of the fan. Typical axial ﬂow fans are propeller, tube-axial, and
vane-axial types. All fans are driven by electric motors, such as pumps. There are also blowers,
capable of producing negative pressures for vacuum systems. These include centrifugal blowers
and positive-displacement blowers, both of which are driven by electric motors. Centrifugal
blowers are similar to centrifugal pumps. The gear-driven impeller can rotate at speeds up to
15 000 rpm. Positive-displacement blowers have rotors that trap air and push it through the
housing in order to provide a constant volume, even if the system pressure varies.
8.4.2
Electric-Driven Cylinders
Electric cylinders transform the ﬂuid (pneumatic or hydraulic) ﬂow rate and pressure into a
mechanical force and velocity via piston positioning actuated by the electromagnetic principle.
Figure 8.8 illustrates a typical cylinder structure, which could be unidirectional or bidirectional
(single- or bidirectional and double-acting), with a rod on one or both sides of the piston (single
or double rod). With electric cylinders, a ﬂuid is pumped into one side of the cylinder under
pressure, causing that side to expand and creating a linear force advancing the piston. This force
is proportional to the cross-sectional area of the cylinder. For a double-acting and double-rod
cylinder, the velocity is given by:
v(t) =
4q(t)
𝜋(D2 −d2)
(8.40a)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

396
8 Mechatronics Instrumentation: Actuators and Sensors
Area, Arod
Pressure
Pin
Pressure
Pout
Area, Acap
Fp
Figure 8.8 Single-acting, pressured air-powered cylinder.
During retraction, the force is given by:
Fp = Pin
𝜋(D2 −d2)
4
−Pout
𝜋(D2)
4
(8.40b)
During extension, the velocity and force are given by:
v(t) = 4q(t)
𝜋D2
(8.40c)
Fp = 𝜋D2
4 (Pin −Pout) + 𝜋d2
4 Pout
(8.40d)
with Pin, Pout, Ain, and Aout, being the head-end chamber pressure, the rod-end chamber pres-
sure, the head-end piston area with a diameter D, and the rod-end piston area with a rod
diameter d, respectively. Based on the oriﬁce equation, the ﬂow rate is given by:
q(t) = CA
√
2
𝜌(Pp −Pin) = kx
√
2
𝜌(Pp −Pin) = Ainv(t) + V1
𝛽
dPin
dt
(8.40e)
8.4.3
Electrovalves
Electrovalves dictate: (i) whether or not the ﬂuid is ﬂowing (On/Oﬀvalves) or its direction of
ﬂow (bidirectional sliding valves); (ii) the desired pressure valve outlet, independent of inlet ﬂow
pressure variations (pressure regulator valves); (iii) ﬂow rate regulation, using an oriﬁce with a
variable area (ﬂow rate regulator valves); and (iv) the controlled displacement, speed, and force
of the solenoid through ﬂow rate or pressure diﬀerence, in order to ensure actuating system
positioning (ﬂow-proportional valves, pressure control-proportional valves, or servo valves).
These valves can be electric-powered as well as hydraulic or pneumatic, depending on the type
of driven ﬂuid (liquid or gas). They can be fully or partially closed or opened, in a position
dictated by signals transmitted from the controlling unit. Basic valve types are: (i) ball valves;
(ii) butterﬂy valves; (iii) diaphragm valves; (iv) gate valves; (v) plug valves; (vi) globe valves; and
(vii) eccentric valves.
In terms of conﬁguration, each valve has a number of connections for port inlets and
outlets; this is known as the number of the n-way position. Normally, open/closed terminology
deﬁnes the valve status when the power is OFF. Commonly encountered valves are designed as
two-way, three-way, and even four-way position valves, as shown in Figure 8.9(a). They are used
for ON/OFF ﬂuid ﬂow control, unidirectional and single-acting cylinders, and bidirectional
and double-acting cylinder operating functions. Three-way control valves have inlet, outlet,
and exhaust ports, which can be closed or open, as illustrated in Figure 8.9(a). When there
is no energy supplied, the outlet and exhaust ports are interconnected. When the solenoid is
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

8.4 Electro-Fluidic Actuating Systems
397
(a)
(b)
(c)
Port A
Port P
Port T
Actuation
Port A
Port P
Port T
Actuation
O
1
T(IN)
P
A
Spring
return
OUT
EX
O
1
P
A
Spring
return 
T(IN)
OUT
EX
(d)
2-position 
3-position 
2-position
3-way
Figure 8.9 (a) Two-position, three-way directional solenoid actuated control valves (open and closed). (b)
Equivalent open symbolic two-position, three-way directional control valves. (c) Equivalent closed symbolic
two-position, three-way directional control valves. (d) Some symbolic directional control valves.
energized, the inlet and outlet ports are interconnected. There are also two-way control valves
(one inlet port and one outlet port), such that the valve is considered open when the energy is
OFF, and three-way control valves (three ports, such as one inlet and two outlets), as illustrated
in Figure 8.9(b) and (c).
Considering that the ﬂow pressure P is produced in the ﬂuid ﬂow, the valve behavior is
described by the following nonlinear equation relating the ﬂow and the valve trim:
q(𝜃) = Cf (𝜃)
√
ΔP
g
(8.41)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

398
8 Mechatronics Instrumentation: Actuators and Sensors
where 𝜃(0 ≤𝜃≤1) is the valve position, g is the ﬂuid density (Kg∕L), C is the valve coeﬃcient
decided by the valve size, and f(𝜃) is the valve trim type for diﬀerent plugs, given by:
f (𝜃) =
⎧
⎪
⎨
⎪⎩
𝜃for linear
√
𝜃for quick…opening
R𝜃−1 equal percentage
(8.42)
where R is the rangeability or ratio between the lowest and highest ﬂuid ﬂow rates, such that a
larger value of R will indicate better accuracy of the valve position, which is given by:
R = Qmax
Qmin
(8.43)
An equal percentage is suitable for a large pressure drop, while a non-equal one is used where
a fairly constant pressure drop is expected. Quick opening is used for intermittent service,
requiring a large and instant ﬂow rate. The opening angle 𝜃depends on the opening sectional
area A and the ﬂow pressure 𝛽(including a constant factor given by ﬂuid viscosity characteris-
tics), such that:
𝜃= A
𝛽P
(8.44)
Thus, the valve coeﬃcient is given by:
C = Qmax
√
Gt
ΔPv
(8.45)
with Qmax being the maximum ﬂow through the valve (l min−1), ΔP = Pin −Pout the up- and
downstream pressure drop across the valve (bar), and Gt the liquid-speciﬁc gravity. The maxi-
mum ﬂow through the valve Qmax can be estimated from:
Qmax = Av
(8.46)
The airﬂow rate (for a pneumatic valve) is given by:
q(t) = Kq𝜃(t)
(8.47)
Considering that the overall ﬂow pressure in a system ΔPtotal is delivered by a pump or a
compressor, the variation in opening angle of the valve causes a ﬂow change, which in turn
produces a variation in pressure diﬀerence ΔPv across the valve. The pumping-required overall
pressure diﬀerence ΔPtotal can be estimated from ΔP at the maximum ﬂow such that:
ΔPtotal = ΔPv + ΔPs =
(qmax
Cv
)2
gs + kq2
max
(8.48)
where:
ΔPv = ΔPtotal −ΔPs =
(qmax
Cv
)2
gs + kq2
max −kq2
(8.49)
As a rule of thumb, ΔPtotal should be around 1/3–1/4 ΔPtotal at a nominal ﬂow rate. In order to
control a motorized valve, it is required to control its electric motor in revolutions per minute
(rpm), position, acceleration, and torque.
8.5
Electrothermal Actuating Systems
Electrothermal actuating systems, such as heaters, heat pumps and furnaces, can convert
electrical energy into heat. Based on the Joule principle, the current passing through a
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

8.5 Electrothermal Actuating Systems
399
Table 8.6 Dynamics equations governing heat transfer.
Conduction
q′′
cond = −K dT
dx
𝜀cond is the heat ﬂux in (W m−2)
K is the thermal conductivity
Convection
q′′
cond = h(Ts −T∞)
h is the heat transfer coeﬃcient (W K−1 m−2)
TS is the surface temperature (K)
T∞is the ﬂuid temperature (K)
Radiation
E = 𝜀𝜎T4
R
E is the emissive power (W m−2)
TR is the surface temperature (K)
𝜎is the Stefan–Boltzmann constant
(
5.67 × 10−8W
m2K4
)
𝜀is the radiative emissivity
(0 < 𝜀< 1)
Conductive thermal
resistance Rth (the ability of
an object to transfer heat
between two points)
qcond = q′′
cond A = −KAΔT
L
Rth =
|||||
ΔT
qcond
|||||
= AL
kA
= 𝜌th
L
A in (K w−1)
ΔT is the temperature change (K)
q is the heat ﬂow (m3 s−1)
L is the length of the longitudinal rod (m)
A is the cross-sectional area (m2)
qcond is the heat conduction (W s−1)
Heat capacity and constant
time for heating and cooling
𝜏= RthCth
Q = sh • m • ΔT = CthΔT
Q is the stored thermal energy (W)
Cth is the heat capacity (J kg−1)
sh is the speciﬁc heat (J K−1 kg−1)
m is the mass (kg)
𝜏is the time constant (s)
resistor converts the electrical energy into heat energy. For example, heat pumps extract
the heat energy from the ambient air or from the ground and raise the temperature via
heat exchanged with a ﬂuid boiling at low temperature. Then, the resulting vapor is com-
pressed and condensed to a liquid form in a condenser. This can be used, for example, to
heat the space inside a building; commonly encountered thermal actuating systems include
furnaces (induction, electric, muﬄe). Among the advantages of electric heating methods
over other forms (e.g. gas-based) are: (i) a better distribution of heat energy compared to
chemical combustion; (ii) a reﬁned temperature control; (iii) near real-time heating from
a cold start up; and (iv) immediate and instantaneous shutdown. Typical heat transfers
encountered are summarized in Table 8.6, along with the formulas governing their dynamics
behavior.
Thermal actuating systems can be controlled using either contactor or thyristor control. Con-
tactor control consists of a contactor device used to switch the current to the thermal actuator
ON/OFF. This switching method is slow to respond to the signal and is more suitable for ﬂuids
with high thermal mass, such as water. Thyristor devices switch as often as several hundred
times a second, providing a much ﬁner response to the desired heat level. This method allows
precise temperature control. It is suitable for ﬂuids with a low thermal mass, such as fuel gas,
or that can burn at higher temperatures, such as triethylene glycol (TEG).
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

400
8 Mechatronics Instrumentation: Actuators and Sensors
Physical phenomenon
Transducers
/sensors
A/D converter
Digital output
signal
Mechanical
Radiant/optical
Thermal
Electrical
Magnetic
Chemical
Energy conversion into
electrical analog signal
Signal conversion
and storage
Electrical
analog
signal
Physical
input
signal
Energy
Transmission
Figure 8.10 Typical electrical transducers and their computer interfaces.
8.6
Sensors in Mechatronics
An electrical sensor, also called a transducer, is a device that receives energy from one system
and transmits it to another in a diﬀerent form (preferably electrical over mechanical or acous-
tical). The electrical output of a transducer may be analog, digital, or frequency-modulated.
This section covers only analog output transducers, which can be classiﬁed into two major cat-
egories:
1) Active transducers, which generate an electrical signal directly in response to physical
parameters and do not require external power to operate, such as piezo-electric sensors
and photocells.
2) Passive transducers, which require external power to operate, such as strain gauges and ther-
mistors.
Figure 8.10 summarizes the commonly encountered electrical transducers.
Transducers can be classiﬁed according to one of the following criteria:
1) Power supply requirements, which deﬁne if a sensor is active (i.e. it generates an electrical
signal in response to an external stimulus, such as a piezo-electric sensor) or passive (i.e.
without an external power supply, such as a thermocouple).
2) Nature of the sensor output signal, which can be digital (binary), such as a shaft encoder, or
analog (continuous in magnitude and in temporal content), such as object temperature or
displacement.
3) Measurement operational mode, which is the proportionality of the diﬀerence between the
initial condition of the instrument and the measurand of interest. With the null mode, the
inﬂuence and measurand of interest are balanced (equal) but opposite in value.
4) Input/output signal dynamic relationships (zero, ﬁrst, second order, etc.) of the sensor.
5) Type of measurand (mechanical, thermal, magnetic, radiant, chemical, etc.).
6) Type of measured variable (resistance, inductance, capacitance, etc.).
Table 8.7 summarizes typical sensing methods for various types of variable.
Parameters used to characterize a transducer’s ability to convert a physical phenomenon into
electrical signals are:
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

8.6 Sensors in Mechatronics
401
Table 8.7 Typical variables and associated sensing methods.
Measurand
Sensing methods
Displacement/position
Resistive, capacitive, opto-electric, Hall eﬀect, variable reluctance
Distance
Triangulation, measuring wheel, radar, echelon, capacitive/inductive proximity
Temperature
Thermistor (NPC, PTC), infrared radiation, thermocouple
Pressure
Piezo-resistive, capacitive, piezo-electric, strain gauge
Velocity
Hall eﬀect, opto-electronic, variable reluctance
Luminance
Photoresistor, photodiode, phototransistor
• The input range, corresponding to the range between the highest and the lowest sensed values
measured for a speciﬁc variable of the physical phenomenon.
• The threshold, deﬁned as the lowest change in input that is able to induce an output variation.
• The transfer function, illustrated by calibration curves expressing the relationships between
input and output signals.
• The sensitivity, corresponding to the slope of the calibration curve. It can be determined
by assessing the ratio between the output signal and output signal low variations. The ther-
mometer sensitivity is estimated by:
S = ΔV
ΔT in V∘C−1
(8.50)
• The accuracy of a sensor, estimated from the standard deviation to express the diﬀerence
between the value given by the sensor and the real physical value.
• Hysteresis, which estimates the variation of output signals induced when increasing and
decreasing input signals are applied several times.
• Resolution, which characterizes the ability of the sensor to detect small process variable
changes (i.e. the lowest process variable value detectable).
• The precision of a measurement device, expressed through accuracy and resolution. It is esti-
mated by measuring the same process variable several times under identical conditions.
• Error characterization, integrating the accuracy, resolution, and precision.
• Repeatability, corresponding to the ability of the sensor to produce the same value when
subjected to the same conditions. It is determined by the variation of values observed after
several measurements under the same conditions.
• Nonlinearity (often called linearity), given by the highest deviation of the calibration curve
from a straight line.
• The decay time, deﬁned as the time required by a sensor signal to return to its initial value
after a step change.
• The bandwidth of a sensor, corresponding to the sensor frequency range.
• The dynamic response, given by the frequency range obtained for usual sensor operations.
• The slew rate, expressing the output accuracy induced by an input change.
• The environmental limiting parameters (e.g. humidity, temperature, dust, dirt/oil, corrosives,
and pressures).
• Sensor calibration, providing the expected relationship between the input and output signals.
• Zero point/oﬀset, deﬁned as the resulting output when the initial input value is zero; satura-
tion is reached when input variations are no longer able to induce signiﬁcant output change.
• The measurement linearity or calibration curve, corresponding to the rate of deviation from
the ideal linear calibration curve. Subsequently, the maximum linearity error is the maximum
deviation obtained.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

402
8 Mechatronics Instrumentation: Actuators and Sensors
• The impedance of the measurement equipment, estimated from the ratio between the
input and the output voltages of the crossing current. For example, low-power input
signals would require a measurement instrument with a high input impedance, while
the signal output from a signal conditioning unit would require a low-output impedance
instrument.
• The operating temperature, corresponding to the optimal range of temperature of the
sensor.
• The signal-to-noise ratio, expressing the relationship between the signal values and the output
noise.
Typical sensors used for measurement and detection are summarized in Table 8.8.
8.6.1
Measurement Instruments
Measuring instruments can be classiﬁed based on their measuring method, applied as their
energy conversion or transducing method.
8.6.1.1
Relative Position (Distance)
Instruments used to derive the presence or position of an object are called relative position or
distance sensors. They may operate through direct contact or without any contact and may be
classiﬁed based on the various measurement methods used:
1) Optical distance sensors or detectors involve a photoresistor or photocell, which reacts to
the reception of an infrared light signal by: (i) varying its resistance; (ii) inducing the cur-
rent ﬂow in a circuit (photodiode); or (iii) modifying the magnitude of the current ﬂow
(phototransistor). The spatial conﬁguration of such photoelectric sensors may be: (i) an
opposite positioning of the light-emitting component and the light-receiving component,
such that the presence of an object disrupts the signal; (ii) a same-side positioning (retrore-
ﬂective) of the light-emitting and light-receiving components that requires a mirror to send
back the emitted signal; or (iii) a diﬀuse design close to the retroreﬂective design, which
ensures that the signal is sent back to a broad surface instead of a sole point. Devices such
as photoresistors operate as interferometer linear-type sensors and require a commutator
to separate the emitted infrared light from ambient light. The commutator transforms the
emitted signal into a high-frequency signal, which can be decrypted by the receiver com-
ponent. Such sensors have the advantage of providing a high resolution (𝜇m) and a broad
range (up to a few meters). Photodiodes and phototransistors may, respectively, be applied
to binary applications with signal disruption and distance (linear position) measurement.
Examples of such applications include access door security.
2) Resistive-based position sensors include rotary potentiometers and rheostats. They operate
via a wiper rotating between two terminal resistant elements related by a conductive ele-
ment. The observed voltage depends on the contact position of the wiper, which determines
the overall resistance of the circuitry.
3) With magnetic position sensors and detectors, the current crosses a magnetic ﬁeld through
a conductor component and the voltage induced is proportional to the object position such
that the distance from the sensor is given by:
Vh = RhIB
t
(8.51)
with V h, RhI, t, and B being the Hall voltage, the material-dependent Hall coeﬃcient, the
current, the element thickness, and the magnetic ﬂux density, respectively. Hall-eﬀect
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

8.6 Sensors in Mechatronics
403
Table 8.8 Some commonly encountered sensors.
Measured
Sensing methods and description
Linear and angular position
and velocity sensors
Optical encoder (absolute and incremental) angular position measurement
Electrical tachometer (generator or magnetic-pickup velocity measurement)
Hall eﬀect sensor (position measurement with high resolution but low range)
Interferometer (laser-based position measurement)
Capacitive transducer (high-frequency dynamics position measurement)
Magnetic pickup
Gyroscope (angular position measurement)
Vision (presence/absence; check position)
Ultrasonic (ﬂow/obstruction; counting; ﬂuid or gas level; object shape)
Acceleration sensors
Seismic accelerometer
Piezo-electric load cells
Flow sensors
Rotameter
Ultrasonic type
Electromagnetic ﬂow meter
Pitot tube
Force, pressure, torque
sensors
Dynamometers
Ultrasonic stress sensor
Tactile sensor
Strain gauge
Temperature noncontact
sensors and detectors
Thermal imagers
Radiation thermometers
Fiber optic
Temperature contact
sensors and detectors
Phase-change devices
Bimetallic thermometers
Filled-system thermometers
Cryogenic temperature sensors
Thermocouple (for operating range 200∘C to over 1100∘C)
Thermistors (for operating ranges over 110∘C)
Resistance temperature detector (RTD)
Thermidiode, thermo transistors (nano devices like chips)
Infrared type (wavelength resolution)
Infrared thermography (temperature distribution measurement)
Smart sensors
Optical ﬁber (use as a strain sensor), temperature sensor (high resolution and
range), high resolution and range (force sensor, level sensor)
Magnetoresistive (use as force sensor, torque sensor)
Piezo-electric (accelerometer, force sensor, strain sensor)
Proximity sensor
Photoelectric
Capacitance
Hall eﬀect
Light sensor
Photodiodes
Photoresistors
Phototransistor
Photo conductors
Binary noncontact detector
Inductive proximity to detect metal object
Capacitive proximity to detect dielectric object
Optical presence to detect an object breaking a light beam or reﬂecting light (use
for counting; check passing/obstruction of objects; monitor the presence, absence,
or position of an object)
Binary contact detector
Mechanical contact (switch) to detect an object
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

404
8 Mechatronics Instrumentation: Actuators and Sensors
magnetic sensors are aﬀected by vibration. However, such devices operate with a high
resolution for a short distance range (between 0.2 and 5 mm). Their applications include
security systems and multi-axis robot arms (where they control the position and speed).
Some Hall eﬀect detectors may only be activated or deactivated when a speciﬁc value of
the magnetic ﬁeld intensity is reached. As such, they only apply to an object presence or
absence detection, or to a particular position or reference position detection. In the latter
case, an incremental encoder is required.
4) Inductive position-based sensors use the variation of the inductance proportional to the gap
between a targeted metallic object and the magnetic ﬁeld, which results in an oscillator
voltage variation. When the targeted metal object moves within the proximity of the coil,
it induces an eddy current in the metal object surface that causes a secondary magnetic
ﬁeld which interferes with the probe magnetic ﬁeld. Such a device is used for the detection
of metal objects over short distances.
5) Optical, ultrasonic, or microwave distance-measuring sensors are based on the principle of
wave propagation through a ﬂuid medium. As such, these devices can be: (i) radio-based
or radar (using time-of-ﬂight [TOF], frequency-modulation, or phase-shift measurement
techniques); (ii) laser light-based (using TOF); or (iii) sound-based. Such measurement
devices All are sensitive to temperature and target obstruction. Distance formulas using
TOF or frequency techniques based on the propagation time of the various signal types
(ultrasonic, radio frequency, optical energy) from the source to the targeted object are pre-
sented in Table 8.9.
Among other reﬂective-based measurement techniques, interferometry is based on the
assessment of the intensity of the returning signal. Initially, the generated laser light is split
into two diﬀerent paths (a path directed toward the detector with a ﬁxed length and a path
directed toward the moving object with an attached retro reﬂector). The distance to the
moving target can be estimated as the relative travel wavelength of both signal paths. Based
on vibration type, object shape and size, laser light speed, reﬂectivity, and direction, the
resulting measurement distance can be calculated. Such sensors are commonly encoun-
tered in devices such as navigation guidance systems, 3D robot positioning systems, object
detection (collision avoidance) systems, and security systems. Microwave position sensors
use a microwave frequency signal reﬂected onto the targeted object and returning back to
the sensor to indicate object presence or absence within the radio frequency ﬁeld. With
ultrasonic position sensors, the emitted signal is ultrasonic and it is possible to measure
distance from 1 cm up to few meters, as depicted in Figure 8.11. With the phase-shift
measurement technique, the frequency-modulation component at the receiver side is
used to derive the time shift with the emitted signal. Hence, the distance to the object is
given by:
distance = f (t) −f (t −T) × light speed
4 fmodulated fdeviation
(8.52)
Table 8.9 Distance formula using a TOF technique.
Measurement set up
Distance formula
Emitter and receiver with same location
(same sensor)
distance = TOF
2
signal −speed
Emitter and receiver with diﬀerent locations
(receiver attached to targeted object)
distance = TOF signal −speed
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

8.6 Sensors in Mechatronics
405
Figure 8.11 Ultrasound-based distance
measurement operation.
Sender
Receiver
Ultrasound
signal (<2 kHz)
Distance, h
Echo
Signal
obstruction
(wall) 
where fmodulated is the signal modulated frequency, fdeviation is the total modulated frequency
deviation, and f(t) and f(t −T) are, respectively, the emitted and the received signal fre-
quency. Usually, an ultrasonic sensor emits a sound above the normal hearing threshold of
16 kHz. The time that is required for the sound to travel to the target and reﬂect back is
proportional to the distance to the target and is given by:
h = Ct
2
(8.53)
with C and t being, respectively, ultrasound speed on the media and time taken for the
signal to travel from sender to receiver. The ultrasound signal is sensitive to the ambient
temperature and humidity. These contactless sensors are suitable for applications such as
the measurement of contaminated ﬂuid levels in tanks and the measurement of distances
up to 10 m, regardless of target shape and material.
6) When the measurement is based on a switch’s position, electromechanical switches (e.g.
limit switches) provide binary information about the switch status, so: closed or open, actu-
ated or not actuated, allowing current to ﬂow or not. Each switch has at least one pole with
two points of contact.
7) Capacitance distance sensors use gap variation between two metallic plates to derive the
distance proportional to their electrical capacitance. This allows a linear position and prox-
imity measurement. As illustrated in Figure 8.12, the capacitance variation of passive and
contact-free sensors is given by:
C = q
V = k𝜀0
A
d
(8.54)
with C being the capacitance, q the charge (in Coulomb), V the potential diﬀerence between
the two plates (V), 𝜀0 the dielectric constant, d the permeability constant, A the eﬀective
plate area (in m2), and d the plate separation (in m). This delivers high-resolution position
measurement. Such devices are highly sensitive to temperature and humidity variation.
They are usually applied to detect the presence or absence of metallic objects or of a liquid
or powder with a dielectric material constant greater than that of air.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

406
8 Mechatronics Instrumentation: Actuators and Sensors
q+
q−
Area, A
V
d
Metallic object
−
+
Voltage
reading
2.7 V
Figure 8.12 Capacitor-based distance
measurement principle.
8) Distance measurement sensors with embedded computer vision systems collect and pro-
cess a targeted object photograph to derive its physical characteristics, such as: (i) dimen-
sion; (ii) position; (iii) appearance (surface ﬁnish, color, gloss, presence of defects); and
(iv) markings (logos, characters, etc.). Figure 8.13 depicts the process of distance measure-
ment using a computer vision system. Depending on the light positioning, the distance is
given by:
D = fH
h
(8.55)
9) Position measurement sensors using the force of gravity involve the use of mercury
conductivity measurement to close or open a switch. Such sensors are sensitive to
temperature.
10) Position measurement sensors using magnetostrictive time consist of a moving magnet (tar-
get) and a magnetrostrictive wire. A current pulse passes through the magnetrostrictive
wire over the acting magnet’s ﬁeld and generates an ultrasonic pulse in the wire. The posi-
tion of the magnet is related to the time delay between the current pulse and the detected
ultrasonic pulse.
11) Position measurement sensors using a potentiometer consist of a resistive element sliding
along a wiper, as depicted in Figure 8.14. When a voltage is applied across this resistive
element, the resulting output AC voltage magnitude is found to be linearly proportional to
the position of the brush over the resistive element. Though such sensors have the same
operating principle as the linear variable diﬀerential transformer (LVDT), potentiometers
do not require signal conditioners: they measure the absolute rotational position and can
rotate without limits (multiple 360∘), making the wiper jump from one end of the resistor
to the other.
For linear displacement measurement, x, the output voltage can be derived from:
V0 = kVx
(8.56a)
For rotary displacement measurement, 𝜃, the output voltage will be:
V0 = kV𝜃
(8.56b)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

8.6 Sensors in Mechatronics
407
x
y
x position
Light source
Camera sensor
Light beam
Measured
underwater surface
z
D
H
f
Lens cone
h
𝛼
𝛼
𝛼
Camera
image
Object
Light
source
Reflective
mirror
Underwater vehicle 3 D vision camera
I/O module
(serial/parallel)
1 1 x x x
x x
x x
1
Data register
Status/Control
register
IOD0
IOD1
XXXX
IOA0
IOA1
XXXX
Clock
Power
supply
IR00
IR01
IRxx
I/O
Control
logic
RD(read)
y position
z position
Figure 8.13 Measurement principle using a vision system.
Vout
R1
R2
R4
R3
Motor
Slider
Variable resistor
Solar radiation
Sky obstruction
Angle of irradation
withfull luminance
θ(t)
y-axis
x-axis
% reflected
radiation 
Lithium ion
battery 
Power
converter
Figure 8.14 LMP electric circuitry for an antenna positioning system.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

408
8 Mechatronics Instrumentation: Actuators and Sensors
A linear motion potentiometer (LMP) consists of: (i) a wiper attached to a mobile object
whose position is monitored; (ii) a potentiometer whose resistance is related to the dis-
placement of the wiper; and (iii) a DC voltage source, as illustrated in Figure 8.15. Using
the voltage division properties, the relationship between the input voltage signal, Vcc, and
the output voltage signal, Vout, can be captured by the equation:
Vout =
R0 + R2
RL
R1 + R2
RL
Vcc
(8.56c)
This linear relationship expresses that for every position there is a given value of electrical
output voltage. Table 8.10 summarizes some characteristics of a typical LMP.
LMP-based displacement measurements are sensitive to the friction during wiper dis-
placement and the speed of the moving object due to the contact mechanism, as well as
potentiometer resistance temperature variations. Typical applications of LMPs include: (i)
a solenoid positioning sensor for automated controllers; (ii) satellite dish positioning; (iii)
automatic valve positioning; and (iv) robotics.
Light source
Inkjet
printer head
Coded pattern
Motor with
screw drive
A
B
Signal
decoding
Photo
detectors 
Signal
squaring
t
Ref
A
B
t
Tracking
channels
Levelup/down
signal counting
1 2 3 4
t
t
0
1
1
bk
Binary
number
sequence
Figure 8.15 Principle behind an incremental encoder with two tracks.
Table 8.10 Example LMP sensor characteristics.
Power supply
5–40 VDC
Dynamic range
0–6.15 in.
Repeatability
0.5–1 mm error
Accuracy
0.02–15%
Sensitivity
4 mm V−1
Resolution
Inﬁnite (<0.01 mm)
Hysteresis
0.02%
Operating temperature
−65–105∘
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

8.6 Sensors in Mechatronics
409
8.6.1.2
Angular Position Measurement Using an Encoder and a Resolver
Resolvers and optical encoders are devices used to achieve an angular position measurement.
Based on the photo-interrupter principle, optical encoders convert motion into an electrical
pulse train, and the resulting electrical pulses are decrypted by the circuitry. Hence, the com-
ponents of a rotary optical encoder consist of: a signal (light)-emitting diode (LED), a light
guidance and shaping device (optical mirror), a photosensitive receiver, and a coded rotating
wheel (disk) directly in contact with the motor controller through its shaft. The series of trans-
parent (binary level 1) or opaque (binary level 0) angular or linear slots on the surface of the
disk are designed according to Gray code binary number patterns. The light emitted by the
LEDs through the transparent zones of the disk is detected by photodetectors (photodiodes).
The disk rotation induces a succession of square wave signals corresponding to the encoder
output signal. This output signal is normally a binary or a Gray code number. The code is then
converted into the displacement measurement within the decoder through a pulse-counting
device. The number of pulses per revolution is directly related to the number of slots on the
disk, or a multiple thereof.
Optical encoders can be classiﬁed in two categories/families: (i) incremental encoders, where
the angular position of a motor is derived from the incrementation or decrementation of gen-
erated pulses; and (ii) absolute-position encoders, where the shaft angle position is estimated
with precision. These two families include variants, such as (i) absolute multiturn encoders and
(ii) tacho-encoders for data processing. Overall, the average velocity can be derived using the
time between pulses.
With incremental optical position encoders, an initial angular position is arbitrarily set to
zero and the direction of the rotating object attached to the coded disk is derived using two
90∘-out-of-phase sinusoidal shape-like signals (channels A and B) generated from photode-
tectors. The two channels, which can be divided into several intervals with equal angles, are
alternately opaque and transparent. Here, the number of divisions corresponds to the res-
olution or number of periods. The light beam passing through a transparent slot activates
two out-of-phase photodetectors, which subsequently generate a pulse-like signal that will be
squared as follows: if A signal and B signal are above the reference signal, the square circuit
signal is set to 1; otherwise, it is set to 0. The signal decoding is done through a pulse-counter
device. Here, the reference point can be lost when the power supply is temporally interrupted.
The motion direction is given by the phase relationship between the A and B pulse trains; that
is, the indication of which signal leads the other. The number of slots and the disk circumference
deﬁne the encoder resolution. The total count (pulse) deﬁnes the total distance.
The motion direction of the motor shaft can be derived from the relative 90∘(Δ𝜃∕4) phase
shift between signals A and B. Figures 8.15 and 8.16(a) illustrate the opaque area arrangements
on the disk of the incremental optical linear and angle encoders for an inkjet printer motor
positioning system and rotational motor position, respectively. This has the advantage of sim-
plifying the encoder, because only two photodetectors are required. However, external counter
hardware has to be used in order to develop an absolute position measurement from the out-
put of the incremental encoder. The initial or reference position is given through a Z-signal in
comparison with signals A and B. It is designed by a transparent slot in the gray coded disk, and
after each revolution it allows the motor position to be reset, as depicted in Figure 8.16(b). The
angular spacing of the opaque areas is Δ𝜃.
Angular position measurement can also be performed with counter hardware. At each transi-
tion in A and B, a pulse is generated and sent to the counter. The binary output of the counter can
be as many bits as needed to represent the required range of motion. Each pulse received during
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

410
8 Mechatronics Instrumentation: Actuators and Sensors
Inner
track (Z)
Outer track
(channels A
and B)
A
B
Z
90° "marker of 
synchronization"
360°
Figure 8.16 (a) Principle of an incremental encoder with two tracks. (b) Detection principle for the direction of
rotation and synchronization.
0
1
0
1
A
B
–Δθ
θ
θ
–Δθ
Δθ
Δθ
2Δθ
4
4
0°
Count
up/down0
1
t
Figure 8.17 Binary signals generated by an incremental encoder.
a positive rotation causes the binary counter output to increase by one (count up). Provided that
the counter is properly initialized such that its output is zero at the desired initial angular posi-
tion, it gives an absolute reading of the angular position. Similarly, a separate set of pulses can
be generated for a negative rotation and sent to the counter. In this case, each pulse causes
the counter output to decrease by one (count down) along the bidirectional encoder angular
position. The output of the counter changes by four for an angular rotation of Δ𝜃, so the eﬀec-
tive resolution is Δ𝜃∕4. Incremental optical angle encoders are available with 100 000 or more
opaque areas, or “lines,” on the disk. However, the dynamic response of the photodetectors
limits the rotational velocity of the sensor. If the maximum frequency at which photodetectors
can operate is known, the maximum rotational velocity of the encoder can be found from:
𝜔max = fmaxΔ𝜃
6
(8.57)
where fmax is the photodetector cut-oﬀfrequency in Hz and Δ𝜃is the incremental angle.
Figure 8.17 illustrates some binary signals generated by an incremental encoder.
The accuracy of such an angular measurement device depends on the latch-based
pulse-counting circuit, which is very sensitive to unpredictable noise interference. Hence,
in order to detect possible measurement errors, it is important to continuously compare
generated signals A, B, and Z. Such a technique also allows the reconstruction of the initial
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

8.6 Sensors in Mechatronics
411
Encoder 
output A
Interference
(noise) signal
Input signal 
processing unit
t
A
A
A+A 
A+A  ≠1 
(a)
(b)
Figure 8.18 (a) Counting error on encoder channel A. (b) Non-counting interference signal.
b1
b0
b2
Light source
0°
45°
90°
135°
180°
225°
270°
315°
Δɵ
2
1
0
Encoder disk
0
1
2
3
4
5
6
7
Photo 
detectors
Signal 
decoding
and counting
Track 1
Track 2
Track 3
Ref
A
B
t
1 2 3 4
t
bk
Binary
number
sequence
C
R
4.7 V
Figure 8.19 Principle of an absolute encoder.
signal in case of counting error. Figure 8.18(a) and (b) summarizes the mitigation of encoder
signal interference.
Absolute rotary encoders are similar to incremental sensors except that the disk is designed
around three rather than two tracks, which are used and arranged such that direction of rota-
tion is embedded with the angular position signal, corresponding to a unique binary word (a
binary Gray code) that increments or decrements accordingly. For example, an increment from
seven to eight in numerals corresponds to a change from 0100 to 1100 in Gray code. Hence,
such encoders can produce the actual position image of a moving part by producing a set of
logic-level signals representing a binary word proportional to its angular position. Figure 8.19
illustrates an absolute optical angle encoder with three bits of binary position output. The angu-
lar position encoder does not require digital-to-analog conversion (DAC).
Each bit is generated by one photodetector according to the arrangement of opaque areas on
the disk. As shown in Figure 8.19, the half-opaque and half-transparent track gives information
on the direction of motion, while the other tracks provide information on the angular position
of a quarter of the disk motor shaft. The higher the number of windows per ring, the higher
the encoder resolution, which varies from two to thousands of windows per ring. Collectively,
these bits generate the binary code for any angular position, as shown in Table 8.11.
At the boundaries between some regions on the disk, more than one bit changes simultane-
ously in the binary output, in order to avoid large errors in position measurement. For example,
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

412
8 Mechatronics Instrumentation: Actuators and Sensors
Table 8.11 Example of binary codes generated by absolute rotary encoder.
n
𝜽(deg)
b1(deg)
b2(deg)
b3(deg)
0
0–45
0
0
0
1
45–90
0
0
1
2
90–135
0
1
0
3
135–180
0
1
1
4
180–225
1
0
0
5
225–270
1
0
1
6
270–315
1
1
0
7
315–360
1
1
1
0
1
2
3
4
5
6
7
1
1
1
1
0
0
0
0
20
Values
Optical reading of disk
(a)
0
1
2
3
4
5
6
7
Channel A
Signals generated by encoder
(b)
Figure 8.20 (a) Bit-based optical reading of a disk. (b) Binary signal-generated encoder.
when the disk rotates from three to four, the binary output changes from 0112 to 1002 through
intermediate combinations such as 1112, if they are not synchronized.
Figure 8.20 depicts a signal-encoding example. It could be that the number of parallel outputs
corresponds to the number of bits or tracks on the disk. Also, the code generated by an abso-
lute encoder can be either natural binary (pure binary) or reﬂected binary (Gray binary code).
Overall, with an absolute encoder, the derived code is repeated after one revolution and several
geared encoders can be used to increase the resolution or the range of angular position sensing.
However, absolute-angle encoders are useless when a large number of output bits is needed to
meet range and resolution requirements. Hence, usually, incremental optical angle encoders
are used for position-sensing applications, while absolute encoders are applied to movement
and position monitoring.
Linear optical encoders are similar to optical angular encoders, with the coded wheel (disk)
replaced by a coded bar and a slider that carries the optical and electronic components. The
distance measurement is operated along the bar, allowing a resolution from a few micrometers
to about 3 m at an operating speed of about 600 mm s−1. There are also angular resolvers, which
are shaft-oriented angular sensors based on an AC magnetic principle. Here, two coils (primary
and secondary) provide sinusoidal-type outputs, which are compared.
8.6.1.3
Velocity Measurement
The direct measurement of velocity can be performed using analog transducers, as:
1) Magnet-and-coil velocity-sensing devices, which are based on the Faraday law of induction,
and consist of a solenoidal coil with several turns of wire. Here, the voltage induced into the
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

8.6 Sensors in Mechatronics
413
coil is proportional to the velocity of the magnet. These sensors are suitable for displace-
ments less than 0.5 m and greater than 10 mm.
2) Tachometer AC (or DC) generators, which are attached to a rotating shaft such that its rota-
tion induces a voltage directly proportional to its angular velocity. If 𝜔is the armature speed
and kt is the tachometer gain, the DC commutating output voltage yields:
Vo = kt𝜔
(8.58)
It should be noted that this generator voltage device and its hooked armature produce a
noise over the DC output of the tachometer with a fundamental frequency directly propor-
tional to the angular velocity. Such tachometer generators are suitable for shaft speeds above
5000 rpm. This technique introduces some drag into the system and is not appropriate for
motion-tracking applications.
3) Counter-type velocity sensors, which involve counting electrical pulses over a ﬁxed interval
of time and converting the result into velocity.
4) Linear velocity transducers (LVTs), which are inductive devices that consist of a rod, called
the core (a permanent moving magnet), and two electrical coils connected in series oppo-
sition, as illustrated in Figure 8.21. Based on the Lorentz law, the core moving through the
coils generates a current ﬂow through the wire, which is proportional to the magnet velocity
transducer. The voltage generated by the transducer is given by:
Vo = Blv
(8.59)
with B being the component of the ﬂux density normal to the velocity, l the length of the
conductor, and v the magnet linear velocity. The magnet can be directly mounted on a
moving mechanical element without electrical connections. The output voltage Vo must
be converted from analog to digital. Using any position sensor, the velocity measurement
can be estimated through digital diﬀerential position algorithms such as the Euler backward
approximation:
𝜔i = 𝜃i −𝜃i−1
T
(8.60)
where 𝜔i is the average velocity (rather that instantaneous angular velocity), 𝜃i is the current
position, 𝜃i −1 is the previously sampled position, and T is the sampling interval. It is suitable
to use a trapezoidal approximation for reﬁned velocity estimation. It should be noted that the
velocity resolution is highly dependent on the sampling period T and the position resolution.
The sensor operating intervals are around 50 mm.
Output voltage  
Permanent 
magnet
Arm velocity, v
Coils
V0
N
S
5.46 V
Laser
beam
Motor
Controller
Figure 8.21 Linear velocity transducer (LVT) device for a laser-based cutting process.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

414
8 Mechatronics Instrumentation: Actuators and Sensors
8.6.1.4
Acceleration Measurement
Acceleration measurement can be derived through:
1) Digital diﬀerential velocity algorithms, in the case of angular motion.
2) Accelerometers based on Newton’s principle, in the case of linear motion. This is achieved
in one of several ways. (i) Through the displacement measurement of a seismic mass moving
freely within a cage surrounded by a spring-damper support structure, its relative motion
being recorded and converted into voltage levels. Such devices are called electromechan-
ical accelerometers. Here, each motion generates a magnetic force opposed and propor-
tional to the displacement from the zero position. This force depends on the length of the
conductor within the ﬁeld, the density of the magnetic ﬁeld, and the value of the angle
between the conductor and the magnetic ﬁeld. (ii) From the force-balance principle applied
on the core of an electromagnet, such as in the high-speed train accelerometer illustrated
in Figure 8.22. (iii) By using one electrode of a piezo-electric crystal as a vertical vibration
sensor (accelerometer), as illustrated in Figure 8.23. Such devices are called piezo-electric
accelerometers due to the charge generated when force is applied on the crystal induced
from an acceleration. (iv) By using the plate of a diﬀerential capacitor as the seismic ele-
ment. For seismic accelerometers based on resistive, capacitive, inductive, or piezo-electric
material, the acceleration motion of a speciﬁc mass is captured through its resulting force,
F(t), given by:
F(t) = md2x(t)
dt2
+ bdx(t)
dt
+ kx(t)
(8.61a)
m
Recorded displacement, x
Traction 
force, F(t)
Housing of mass-spring-damper
configuration
b
k
S
S
N
Rectifier-amplifier
Vout
Coil
i(t)
R
TRAIN WAGON
Zoom 
Figure 8.22 Accelerometer measurement device mounted in a high-speed train.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

8.6 Sensors in Mechatronics
415
V
C
–
V0
R
Piezoelectric  crystal
Mass
Force/acceleration
due to vibration from
road surface
Output
voltage
+ + + + + + + + + + + + + +
-- -- -- -- -- -- -- -- -- -- -- --
Figure 8.23 Piezo-electric accelerometer circuit for vertical vibration measurement.
where m is the mass, b the damping coeﬃcient, and k the spring constant of the
mass-damper-
spring apparatus. Hence, the cage apparatus dynamics equation relating the mass
motion x(t), the accelerometer motion y(t), and the angle between gravity and the motion
axis 𝛼results in:
md2(y(t) −x(t))
dt2
+ bd(y(t) −x(t))
dt
+ k(y(t) −x(t)) = mg cos 𝛼−md2x(t)
dt2
(8.61b)
It should be noted that the natural frequency of the ﬁxed mass bounds the frequency
application interval. In addition, such a sensory system is highly sensitive to environmental
conditions (temperature, dust, magnetic ﬁeld eﬀects, humidity, etc.). Typical applications of
accelerometers are to reduce system vibration and noise by adjusting speeds or to actively
eliminate chatter.
For a piezo-electric accelerometer, the piezo-electric material is compressed or shear-stressed
over the cross-sectional area A of the material crystal during any motion (vibration) of the
apparatus. Its motion is proportional to the electric charge given by:
q(t) = kimd2x(t)
dt2
(8.62a)
with ki being the piezo-electric coeﬃcient of piezo-electric materials (quarts, ceramic crystals,
etc.). It is possible to estimate the deformation in the crystal and the resulting voltage V(t) across
it as:
V(t) = k F(t)
A
(8.62b)
where k is the piezo-electric voltage constant of the crystal. Applying Newton law’s, the accel-
eration of the mass, a(t), is a function of the voltage produced across the crystal, such that:
a(t) = V(t) A
kM
(8.63a)
The voltage produced by the piezo-electric accelerometer is detected by a charge ampliﬁer
that is proportional to acceleration. Such accelerometers are sensitive to temperature variations,
causing nonlinearity in measurement, and to angular acceleration, causing rotation-induced
errors. Typical applications include vibration detection, navigation systems and gyroscopes,
and vehicle acceleration monitoring.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

416
8 Mechatronics Instrumentation: Actuators and Sensors
Other accelerometers include strain-gauge piezo-electric accelerometers, where the
piezo-electric crystal material is connected to the mass apparatus. Here, during any motion of
the apparatus, a change in the length of the strain gauge causes a variation of the conductors’
resistivity 𝜌, such that:
dR∕R
dL∕L = 1 + 2𝛿+ d𝜌∕𝜌
dL∕L
(8.63b)
where d𝜌∕𝜌
dL∕L indicates the resistance change due to piezo-resistivity. There are also electrostatic
accelerometers, which consist of an electrode pivoting around ﬁxed electrodes. Hence, based on
Coulomb’s law, any variation of the gap between the ﬁxed electrodes and the pivoting electrode
produces an electrical signal.
8.6.1.5
Force Measurement
A force is any action on an object (or a subject). It is considered dynamic when it results in a
deformation or a displacement and is considered static when it does not result in an accelerating
motion. Among the methods of measuring a force, there are those using:
1) Levers to compare the applied weight force with the displacement of a known mass attached
over a spring as counterweight. This displacement is measured using a gyroscope, a position
sensor, or a velocity sensor, sometimes within a simple spring-balance scale.
2) Accelerometers, where the unknown force is balanced by the gravitational force of a known
mass such that its acceleration yields:
ac(t) = F(t)
m
(8.64a)
The unknown force can also be balanced by an electromagnetically developed force such
that F(t) = Fem(t), with Fem(t) being the electromagnetical force at equilibrium. Hence, con-
verting the force to a ﬂuid pressure and measuring that pressure, it yields:
P(t) = F(t)
A
(8.64b)
where P(t) is the pressure to be measured and F(t) is the acting force on object surface A.
3) Correspondence, (deﬁned by Hooke’s law) between the deﬂection of an elastic object (strain
gauge, piezo-electric crystal, force-sensing resistor) and the applied static force. Hence, the
strain gauge length increases as its area of cross section decreases, causing an increase
in its resistance, as depicted in Figure 8.24. The resulting strain gauge length and its
cross-sectional area are used to ﬁnd a new resistance, which is given by:
R = V
I = 𝜌L
A = 𝜌L
wt
(8.65a)
with R, l, V, A, t, w, and 𝜌being the resistance of the wire, the length, the voltage, the
cross-sectional area of the conductor, and the thickness, width, and resistivity of the
material, respectively. Commonly encountered strain gauges are (i) wire, (ii) foil, and (iii)
semiconductor. Usually, these sensors transform any change in resistance into a small
voltage scale through a Wheatstone bridge circuit. In the case of wire strain gauges, a
ﬁne wire element is typically cemented into a thin sheet of paper, Bakelite, or Teﬂon. The
sensitivity of a material to the strain, called the gauge factor (GF), is given by:
GF = K = dR∕R
dl∕l
(8.65b)
with ΔR being the change in the initial resistance in ohms, R the initial resistance in ohms
(without strain), and Δl the change in the length in meters, and l the initial length in meters
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

8.6 Sensors in Mechatronics
417
v
R1
R3
R2
Strain gauge
Tension force
(Rs + δ)
Compression force
(Rs – δ)
+
–
V
Rs
Variable 
resistance
+
–
2D view
Figure 8.24 Quarter bridge strain gauge circuit.
(without strain). The strain gauge is highly sensitive to temperature. Piezo-electric materials
relate elastic crystal deformation to electrical potential. Hence, among the piezo-electric
materials used to measure the applied force are quartz, Rochelle salt, lithium sulfate, and
barium titanate ceramic.
4) Capacitive force transducers, where the membrane small elastic deﬂection from applied
force induces a variation of capacitance, which is converted into a voltage through an elec-
tronic circuit. Here, with two plates separated by an air gap, the capacitance of the sensor is
given by:
C = 𝜀0𝜀r
A
h
(8.66)
with C being the capacitance, 𝜀0 the dielectric constant of free space, 𝜀r the relative dielec-
tric constant of the insulator, A the overlapping area for two plates, and h the thickness of
the gap between the two plates. Typical applications of force sensors include multiple-axis
robotic handling, and manufacturing assembly operations, and impact shock force in a car
crash.
5) Magnetoresistive force sensors, where temperature-sensitive sensors change their resistivity
within a magnetic ﬁeld (such as Bismuth).
6) Tactile force sensors, where the pressure distribution across the closed spaced array of a robot
arm ﬁngertip is measured. Typical industrial applications of such sensors include manufac-
turing, robot handling, and the surface identiﬁcation of product shapes.
8.6.1.6
Torque Measurement
A torque is an action causing a momentum around a rotational axis. Thus, in a torque sen-
sor using a shaft made of ferromagnetic material, the torque can be derived from the varia-
tion in magnetic properties caused by the strain stress. Such sensors generate voltage output
signals that are magnetoelastically or magnetoresistively dependent on either solid–solid or
liquid–solid interactions. Among those sensors are torquemeters (noncontact strain gauges)
and torkducers (magnetoelastic transducers).
8.6.1.7
Flow Measurement
Gas or liquid, or a mixture of gas and liquid, can be sensed in terms of mass or volumetric
ﬂow rate and ﬂow direction (turbulent or laminar, compressible or not, free of particles or
nonhomogeneous and time-varying). A commonly encountered device for ﬂuid ﬂow velocity
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

418
8 Mechatronics Instrumentation: Actuators and Sensors
measurement is called a ﬂowmeter. These are designed using various measurement approaches,
such as: (i) the ﬁxed-point ﬂuid ﬂow velocity at a pipe cross-section; (ii) the average ﬂuid ﬂow
velocity at a pipe cross-section; and (iii) the mass ﬂow rate or total volume of ﬂuid ﬂowing
through a pipe. The ﬂow velocity proﬁle is related to the ﬂuid instrumentation design (pipes,
valves, etc.) and the ﬂuid properties (laminar, turbulent, etc.), which are characterized by the
Reynolds number. Hence, the selection of a ﬂowmeter requires knowledge of the ﬂuid type (gas,
solid, liquid), the ﬂuid properties (viscosity, density, corrosivity, etc.), the ﬂuid piping and other
installation conditions (pipe diameter, pipe length, Reynolds number, valve type and character-
istics, etc.), the expected dynamic characteristics (dynamic response, accuracy, etc.), and the
operating conditions (temperature, pressure, etc.). Typically encountered ﬂowmeters can be
classiﬁed into:
1) Contact-based sensors, such as:
a) Diﬀerential pressure ﬂowmeters, which involve deriving a diﬀerential measurement of the
ﬂow on at least two points along the ﬂuid ﬂow direction. Sensing device conﬁgurations
include venturi, oriﬁce, ﬂow nozzle, elbow, and Pitot tube static. Such ﬂowmeters are
suitable for velocity ﬂow measurement of gas and low-viscosity liquids.
b) Positive displacement ﬂowmeters, which involve deriving the ﬂow rate proportionally to
a shaft rotation. Such a sensing device conﬁguration includes a rotameter (variable-area
in-line ﬂowmeter) or a turbine meter, a cylinder or plug, and a variable aperture.
c) Turbine ﬂowmeters, which involve measuring the ﬂuid ﬂow through rotor speed mea-
surement. Hence, the magnetic-based sensor converts the average rotor speed into volt-
age levels proportional to the ﬂuid average velocity or volumetric rate in a pipe. The
sensing device conﬁguration includes an impeller, an axial turbine, and a propeller.
d) Mass ﬂowmeters, which involve deriving the ﬂow rate from an induced voltage propor-
tional to the current required to maintain the temperature constant in a heating element
across the pipe. The sensing device conﬁguration includes a thermal anemometer. Such
ﬂowmeters are suitable in slow-motion gas ﬂows through large pipes, such as in building
heating, ventilation, and air conditioning (HVAC) systems.
2) Contact-free sensors, such as:
a) Electromagnetic ﬂowmeters, where a ﬂuid behaving as a conductor moves along a pipe
containing electrodes. This produces a magnetic ﬁeld across its section wall. The ﬂuid is
ionized such that its motion induces a voltage proportional to the ﬂuid mass ﬂow rate,
which can be measured by the electrodes based on Faraday’s law. Such a ﬂuid, used as
an electromagnetic ﬂowmeter (pulsed DC magnetic, AC magnetic, etc.), is suitable for
low-speed ﬂows of liquids, sludges, or slurries.
b) Ultrasonic ﬂowmeters, where high-frequency sound-wave signals are sent through a ﬂuid
toward receivers. On the principle that the sound transmission speed is directly propor-
tional to the ﬂow rate of the ﬂuid, any distortion of the receiver signal is proportional
to the ﬂow velocity as given by the Doppler eﬀect. Here, the transmission delay is sen-
sitive to the velocity proﬁle and the temperature. Such ﬂowmeters are suitable for clean
(particle-free), subsonic ﬂuids, as small particles could disturb the signal.
c) Displacement pressure ﬂowmeters, which involve measuring a ﬂuid ﬂow rate through the
pressure diﬀerence across an oriﬁce, as illustrated in Figure 8.25, such that the volumetric
ﬂow rate is given by:
Q =
C
√
1 −𝛽4 𝜀𝜋
4 d2
√
2(pin −pout)
𝜌
(8.67)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

8.6 Sensors in Mechatronics
419
Liquified gas pipeline
Pumping 
Station 5
d
D
pin
pout
Differential 
pressure
recorder
Higher- 
speed 
zone
d
D
pin
pout
Differential 
pressure
recorder
Higher- 
speed 
zone
LPG flow
x0 km
d
d
Figure 8.25 Displacement pressure ﬂowmeter with LPG ﬂow rate within a pipeline.
with pin and pout being the downstream and upstream pressure of the oriﬁce plate, respec-
tively, 𝜌the density of the ﬂuid upstream of the oriﬁce plate, d the downstream hole
diameter of the oriﬁce plate, and 𝛽the ratio d∕D, with D being the upstream internal
pipe diameter.
8.6.1.8
Pressure Measurement
Considering pressure as the force acting on a surface, it is possible to measure it as force per
unit area. Pressure measurement is usually achieved within a chamber and can give: (i) an abso-
lute pressure, where the chamber containing the ﬂuid is sealed at 0 Pascal; (ii) a gauge pressure,
where the chamber is vented to the atmosphere; (iii) a diﬀerential pressure, where another pres-
sure is acting on the chamber; or (iv) a sealed pressure, where the chamber is sealed at a given
pressure (diﬀerent to 0 Pascal). Usually, ﬂuid pressure transducers consist of elastic diaphragms
dividing two chambers (the working chamber and the reference chamber). The measurement
is given by the diﬀerence in pressure between the two. Pressure transducers transform a device
motion or deformation proportionally to an applied pressure.
Commonly used transducers are: (i) the Bourdon tube, where an elliptical metal tube deforms
when there is a diﬀerential between inside and outside pressure; (ii) the Bellow tube, which is
a metal tube that is ﬂexible under applied pressure; and (iii) the diaphragm, which is a circular
plate that is elastic under pressure. As summarized in Figure 8.26(a), some of these sensors can
use a resistance-based strain gauge or their own outer walls as diﬀerential capacitors and so
derive the corresponding electrical signal output. As illustrated in Figure 8.26(b), baﬄe-based
pressure-measurement devices are embedded into unmanned underwater vehicles.
Other types of pressure sensors are:
1) Measurement devices using a variable capacitance pressure that consists of changing a
physical property of one of the variables (e.g. distance d). This varies the capacitance C, as
depicted in Figure 8.27 for the case of a water dam. The capacitance is given by:
C = KS(N −1)
d
(8.68)
with K, S, N, and d being the dielectric constant of the material between the plates, the area
of one side of one plate, the number of plates, and the distance between two adjacent plates,
respectively.
2) Variable-resistance pressure measurement devices, which are capable of detecting large
resistance variations. They usually operate in potentiometer circuits or bridge circuits
(strain gauge transducers).
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

420
8 Mechatronics Instrumentation: Actuators and Sensors
Mechanical
device
Position 
sensor
Electrical output
Displacement
Pressure physical
phenomen
Potentiometer
Resistitive (strain gauge)
Inductive
Capacitive
Optical
Diaphram
Bellows
Bourbon tube
Acting
pressure
Direction of 
pressure-based
motion of 
iron core
Coil
v(t)
i(t)
Sea depth 
Vision
camera 
Antenna
Propeller
Governor
(a)
(b)
Figure 8.26 (a) Pressure measurement principle. (b) Baﬄe-based pressure measurement schematic.
3) Measurement devices using variable inductance pressure, which operate on the principle
that the voltage drop across a coil generates a magnetic ﬁeld proportionally to the rate of
time-based current variation.
4) Measurement devices using piezo-electric pressure, which are based on the material prop-
erties involved in generating an electrical potential when subject to a mechanical strain.
Among the materials used are quartz, Rochelle salt, ammonium dihydrogen phosphate, and
even ordinary sugar.
8.6.1.9
Liquid-Level Measurement
Liquid-level sensors can involve contact or can be contact-free, and ensure either continuous
or threshold-value measurements. Typical liquid-level sensors include:
1) Classical ﬂoat-type liquid-level sensors, which measure either continuous or discrete points
of liquid level.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

8.6 Sensors in Mechatronics
421
P1
R
RX
x
Eo
Adjustable
bellows
Reactive
Spring Force, F
Variable 
resistance
V
Piston position along x-axis
+
–
P2
Applied
pressure
Water
dam
Figure 8.27 Capacitance pressure sensor based on a Bellow transducer for a water dam.
2) Hydrostatic pressure liquid-level sensors, where the weight of the liquid in the tank is pro-
portional to the diﬀerential pressure between the surface and the bottom.
3) Electrical capacitance liquid-level sensors, where the capacitor is a metal bar within a con-
centric tank that is open at both ends, which determines the level of liquid with respect to
the liquid level in the tank walls. Such a sensor is usually combined with signal conditioning
devices for use in such applications as average fuel-level indicators.
Commonly used contact-free liquid-level sensors include:
1) Capacitive proximity switches, which carry out point measurements of liquid level.
2) Ultrasound sensors, where an attenuated ultrasound energy signal sent from a transmitter
above the liquid is collected by the receiving unit and compared to the reference signal when
the gap is ﬁlled with air. This provides a liquid-level point measurement. A signal condition-
ing circuit is usually required. Typical applications of such sensors include sea water depth
measurements and ﬁsh localizers on industrial ﬁshing boats, using echo-ranging transduc-
ers, and powder and grain level measurements in brewery silos.
3) Radio frequency sensors.
4) Electro-optical-based sensors.
Example 8.2
It is desired to evaluate the ﬂow rate of a corrosive ﬂuid in a pipeline. For safety
compliance reasons, contactless measurement devices are preferred. Typical measurement
methods are summarized in Figure 8.28.
The appropriate sensing method should thus be chosen from the following candidates:
1) diﬀerential pressure in two pipeline points;
2) rotor speed of attached turbine-based measurement;
3) electromagnetic-based measurement;
4) ultrasound Doppler eﬀect-based measurement.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

422
8 Mechatronics Instrumentation: Actuators and Sensors
d
D
pin
pout
Differential
pressure
recorder
Higher-speed
zone
d
4. Pressure measurement
using ultrasonic Doppler effect
1. Pressure measurement
using differential pressure
2. Pressure measurement
using turbine rotor speed
Ion injection
into fluid
3. Pressure measurement
using  AC electromagnets
0.8 V
Figure 8.28 Four types of pipe-based ﬂuid ﬂow rate measurement.
For this pipeline, the ultrasonic method appears to be the most suitable and cost eﬀective, as
it uses a contact-free device, as required.
8.6.1.10
Radio Frequency-Based Level Measurement
This method, also named RF capacitance or just RF, can be applied to the detection of the level
of liquids, slurries, or granules contained in a vessel. Various designs are available for the mea-
surement of a process level at a speciﬁc point, at multiple points, or continuously over the
entire vessel height. Radio frequencies used vary from 30 kHz to 1 MHz. For the RF capaci-
tance measurement principle, the device consists of an electrical capacitance located between
two conductors positioned a speciﬁc distance apart. The ﬁrst is a vessel wall and the second is
a measurement probe or an electrode. The two conductor areas are normally positioned. The
medium between the two conductors is insulated, meaning that the level measurement does
not involve a conducting material. The capacitance is given by:
C = EKA
d
(8.69)
with C, E, K, A, and d being the capacitance in picofarads (pF), free space permittivity, the insu-
lating material dielectric constant, the conductor’s eﬀective area, and the distance between the
conductors, respectively. The value of K is directly proportional to the system charge storage
capacity.
8.6.1.11
Smart and Nano Sensors
Smart and nano sensors are usually low-scale devices based on electrostatic, piezo-resistive,
piezo-electric, or electromagnetic sensing principles. They can be made of diﬀerent materials,
such as silicon and polymer. More speciﬁcally, they include:
1) Optic ﬁber-based smart sensors (magnetorestrictive, piezo-electric, optic ﬁbers, etc.), which
use the proportionality between the intensity or spectrum of their material (glass and silica)
physical characteristics and the variations in the sensed system strain, force, temperature,
liquid level, vibration, and so on.
2) Electrostatic or capacitive-based smart sensors, which involve transducing a force, vibration,
pressure, or temperature variation into the displacement of a membrane or beam. This dis-
placement then induces variations of membrane capacitance. These electrostatic sensors
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

8.6 Sensors in Mechatronics
423
are used as accelerometers, sound sensors, gyroscopes, pressure sensors, and even tactile
sensors.
3) Piezo-resistive-based smart sensors, which transduce an applied mechanical strain or
deformation into a magnitude electrical ﬁeld through variations of the resistive material
dimension. Typical materials used include alloy and silicon. Some application examples
are piezo-resistive and capacitive-based micropressure sensors, where the diaphragm
deformation is transduced into pressure diﬀerences, and the use of polymer-based material
to monitor the high temperature of an internal combustion engine. Another example is
accelerometers used in vibration measurements or in vehicle anti-collision systems.
4) Thermal-based smart sensing devices, which involve producing heat from a current ﬂowing
through a resistive element over an ambient ﬂuid. When a ﬂuid with a lower temperature
passes through the device, it reduces the temperature of the heated element by heat con-
vection. The temperature variation of the element provides the ﬂowmeter (anemometer)
information on the ﬂuid direction and its ﬂow rate. The mechanical momentum transfer
principle is another ﬂow-sensing technique.
5) Light-based smart sensors, which use phototransistors, photodiodes, or photoresistors such
that their exposure to light intensity is proportional to their resistance variation, which
is then converted into voltage change. These sensors can also be used as photodetectors,
which are activated by a thermal light source such as a diode, quartz halogen, or ﬂuores-
cent light, or daylight. Such light sources are capable of producing various electromagnetic
signal wavelengths: 30 nm for ultraviolet light, between 400 and 700 nm for visible light,
and up to 0.3 mm for infrared light. Here, the absorbed radiation capacity of the detector is
not proportional to the emitted signal wavelength (i.e. pyroelectric). Typical applications of
such lights sensors include ﬁre detectors, infrared-based intruder alarms, and object shape
capture devices.
6) Image sensors, which consist of an image-recording component combined with image
data-processing software. First, image generation and encoding is achieved through light
irradiance of the image source. Then, the image is projected over a plane, on which the
charge of the image spatial distribution is presented. The charge of the image is accumu-
lated, stored, and converted into a voltage signal. Here, a charge sample is called a picture
element or pixel. Color sensors are achieved by placing color ﬁlters over the individual
pixels. Typical applications include machine vision detecting systems in manufacturing
operations or public event surveillance, as well as robotic guidance.
7) Radiant-based detectors, in which the absorbed photons capacity is proportional to the
induced mobility of electrons (i.e. electrical charge), causing changes in their resistance
values (i.e. photoresistors) or current or voltage values (i.e. photodiodes or phototransis-
tors). Using the semiconductor functioning principle, photodetection is the conversion of
the thermal excitation of electrons into current. The signal produced is proportional to light
irradiance and is sensitive to temperature. Typical applications of phototransistors are coin
detectors in vending machines, level sensors, and proximity sensors.
Other customized control measurement devices are: (i) microelectromechanical-micro-
mechatronic systems (MEMS); and (ii) nanoelectromechanical-nanomechatronic systems
(NEMS).
8.6.2
Detection Instruments
Binary instruments can only detect a state that is either true or false. This can be done either
by direct contact or by proximity between the detector and the object. Examples of methods
used to detect physical phenomena are: (i) the inductive proximity to detect if a metal object
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

424
8 Mechatronics Instrumentation: Actuators and Sensors
is nearby; (ii) the capacitive proximity to detect if a dielectric object is nearby; (iii) the optical
presence to detect if an object passes through a light beam; and (iv) the mechanical contact
applied to the detection of a contact force between an object and a switch. Typical binary
instruments are:
• Sinking and sourcing switches, which switch the current ﬂow ON or OFF. When the current
ﬂows out, these are known as sourcing switches.
• Plain switches, which switch the voltage ON or OFF.
• Solid-state relays, which switch AC outputs.
• Transistor–transistor logic (TTL), which uses voltage values 0 and 5 V to indicate logic levels.
Typical applications of such binary devices include material handling operations, the detec-
tion of vehicle presence in car parking, the detection of gas or liquid levels, the detection of
object shape and position, and the tracking of a tagged object using radio frequency identiﬁca-
tion (RFID).
8.6.2.1
Electromechanical Limit Switches
The electromechanical limit switch is a detection device made of an actuator and electrical
contact components. The detection is performed through its physical contact with a moving
object or subject. The resulting electrical signal is sent to a signal processing system. Such limit
switches are commonly encountered in automated systems.
8.6.2.2
Photoelectric Sensors
Photoelectric sensors detect various opaque to nearly transparent objects or subjects. Here, an
LED generates infrared light pulses (wavelenghts between 850–950 nm). The generated pulses
can be received by a photodiode or phototransistor, which ampliﬁes a photoelectric current.
Comparison of the generated signal to a reference threshold results in a discrete signal indicat-
ing whether object/subject presence is detected. There are several factors aﬀecting the perfor-
mance of these detection systems, such as: (i) the distance between the sensor and the targeted
object or subject; (ii) the characteristics of the targeted object or subject, especially in terms
of material reﬂectivity, transparence, color, and size; and (iii) environmental conditions, such
as ambient light or the background. Such devices are used in automatic doors and barriers for
security access management.
8.6.2.3
RFID-Based Tracking and Detection
RFID is a set of automatic identiﬁcation devices using protocol-based radio wave signal
exchange between a targeted subject or an object embedded within an electronic tag and
a remote reader (transponder) component. Initially, an electromagnetic signal is sent from
the transponder toward the tag antenna, where the ﬂowing current charges the integrated
capacitor. When the capacitor threshold voltage value is reached, it releases a time-varying
amplitude radio-based signal over the tag coils, corresponding to the electronic tag information
encoded back to the transponder. The transponder demodulates and stores this encoded signal.
Figure 8.29 summarizes the RFID operating principle.
There are three types of tags: (i) passive tags, which produce surface acoustic waves on recep-
tion of a request signal from the transponder; (ii) semi-passive tags with embedded capacitive
diodes enabling the production of a small current; and (iii) active tags with an integrated cir-
cuitry capable of data processing. There are two types of RFID communication protocol: tag
talk ﬁrst (TTF) and interrogator talk ﬁrst (ITF). In either case, a subroutine should be included
to avoid tag data collision when simultaneous tag code readings are required. The tag code
standard is deﬁned by the global identiﬁer electronic product code (PEC) (96 bits). Among the
advantages of RFID identiﬁcation are: (i) its ability to modify data contained in the tag; (ii) its
use of non metallic materials for read/write access; (iii) its insensitivity to environmental fac-
tors such as dust and so on; (iv) its high recording capacity (one thousand characters for one
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

clock
Capacitor
(battery)
(Digital signal
processing circuitry)
(Receiver/emitter)  
Electromagnetic antenna
Flash 
memory
(Radio frequency
signal circuitry)
RFID
antenna
VDC
VAC
RFID tag
Transponder
(With collision and duplicate 
code avoidance subroutine)
Tag activation signal
Request tag code
Tag code
Header
status
Vendor
number
Tag 
model
Encrypt
control
Tag code global identifer EPC 96 bits
Antenna
LCD
16-key
keypad
Dirt sensor
Vaccum
motorized
wheel
(a)
2 DC motors
for 2 wheels
RF
Radio frequency (RF)
interface from
remote controller
4 Dirt
sensors
D/A
converter
A/D
converter
Antenna
LCD
16-Key
keypad
0–30 mV
Direction 
and speed
of vacuum 
cleaner
μcontroller
Clock
(Hz)
(b)
Figure 8.29 RFID detection principle. (a) Vacuum cleaner system. (b) Computer interfaces for vacuum motion control.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

426
8 Mechatronics Instrumentation: Actuators and Sensors
Table 8.12 RFID signal properties and characteristics.
Frequency
Advantage
Application
125–134 kHz
Immunity to environment
(water, metal)
Animal identiﬁcation
13.5 MHz
Standard antenna/tag
communication protocols
Tracking books in libraries
Access control
Payment systems
850–950 MHz
Long communication range
Product management in distribution
2.45 GHz
High transfer speed
between tag and antenna
Vehicle tracking (freeway tolls)
tag); and (v) its ability to lock tag data access, ensuring data conﬁdentiality. The low cost of RFID
tags oﬀers the prospective of replacing traditional barcodes with product tracking in several sec-
tors, including supply chain and transportation, along with new applications including security
and payment. Some radio wave frequencies deﬁne the distance coverage and thus determine
possible RFID applications, as summarized in Table 8.12.
8.6.2.4
Binary Devices: Pressure Switches and Vacuum Switches
Pressure or vacuum switches within a hydraulic or pneumatic circuit are used to monitor and
measure pressure switches. They convert a pressure variation into a discrete electrical signal
through the pressure-driven movement of a diaphragm, a piston, or a bellow, which activates
actuating electrical contacts mechanically. The resulting resistance variation produces a signal
proportional to the pressure.
Exercises and Problems
8.1
Find the suitable electric motors among the applications in the following table (justify
your choice) and list three sensors that could be associated with them.
Applications
Electric motors
1) Wheelchair with anti-collision system
1) Permanent magnet DC motor
2) Turbulent motion actuation in a ﬂight simulator
2) Brushless DC motor
3) Snake-arm robot for nuclear site inspection
3) Synchronous AC motor
4) Automatic washing machine
4) Stepper motor
5) Pick-and-place robot in a truck assembly line
5) Asynchronous AC motor
8.2
a) Indicate three diﬀerent methods for operating a continuous temperature metering
system installed inside tanks.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
427
b) Sketch and explain the principle of resistance thermometers.
c) For each of the measurement devices listed in the following table, choose the suitable
process applications.
Measurement devices
Process applications
1)
Resistance thermometer
1)
Temperature measurement in high-rate ﬂow
2)
Oscillation piston ﬂowmeter
2)
Flow metering of water
3)
Oriﬁce plate
3)
Flow metering in corrosive ﬂuid
4)
Thermocouple
4)
Mass metering
5)
Ball valve
5)
Temperature measurement inside a tank
6)
Inductive-based ﬂow meter
6)
Flow metering in a large-diameter pipe
8.3
.a) For the following systems, list the types of electric actuating systems encountered:
i) automatic soda dispenser vending machine;
ii) artiﬁcial hearth;
iii) automatic adjustable sound system;
iv) bottle milk ﬁlling system;
v) automatic car air bag;
vi) automatic car parking system;
vii) dialysis blood treatment;
viii) robot arm for endoscopic surgery.
b) Identify at least 2 typical examples of sensing devices encountered for:
i) concussion patient recovery through a stability test;
ii) automatic window adjustment in a vehicle;
iii) automatic surveillance camera with facial recognition;
iv) situation awareness and obstacle avoidance in a mobility system.
8.4
.a) Derive the resolution of an absolute seven-binary-track rotary optical encoder.
b) What is the voltage level output of a linear operating range (K-type) thermocouple
at 195∘C, if it is capable of generating a voltage of 30 mV at 155∘C and of 195 mV at
175∘C?
c) A potentiometer measures a robot angle such that the power supply connected across
it is 3.5 V and the total wiper travel is 270∘. The wiper arm is directly connected to
the rotational joint. Derive the corresponding potentiometer output voltage for 43∘
if there is a voltage oﬀset of 4.3 mV.
d) A gearbox with a 7 : 1 ratio is associated to a motor. For a position encoder attached
to this motor, derive the position of a geared downshaft required to be positioned to
0.1∘. Derive its minimum resolution.
e) Use the equations for a permanent magnet DC motor to explain how it can be used
as a tachometer.
f) What is the key diﬀerence between position measurements obtained through
encoders and those obtained through potentiometers?
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

428
8 Mechatronics Instrumentation: Actuators and Sensors
8.5
An accelerometer instrument is used to access the relative seismic mass variation via a
miniature LVDT. The undamped natural frequency of the accelerometer instrument is
10 kHz and the eﬀective stiﬀness is K = 2000 N m−1.
a) Determine the mass m and damping coeﬃcient c required, if a damping ratio of 0.707
is targeted.
b) Determine the sensitivity of the accelerometer in volts per g at a frequency of 1500 Hz,
given that the sensitivity of the LVDT is 250 mV mm−1.
8.6
A 270 Ω potentiometer measures the linear displacement of piston-based robot arm,
while the associated voltmeter with a resistance of 2.7 kΩ converts this position mea-
surement into a voltage unit. What is the reading error when the potentiometer slider is
at a 38% position based on a voltage scale of 10 V?
8.7
For each of the following statements, select the correct option:
a) An accelerometer provides accurate dynamic measurements of seismic phenomena
(i) at frequencies well below its natural frequency; (ii) at frequencies above its natural
frequency; (iii) at any frequency; or (iv) none of these.
b) A tachometer is used to assess the real motor velocity of 20 rad s−1. The measurements
are done ﬁve times, leading to the following results:
Reading
1
2
3
4
5
Velocity (rad s−1)
19.7
20.1
20
19.8
19.9
i) The bias of the instrument is (diﬀerence between mean and true value):
(i) 19.90 rad s−1; (ii) 0.10 rad s−1; (iii) 0.05 rad s−1; or (iv) none of these.
ii) The accuracy of the tachometer is: (i) 1.5%; (ii) 2.0%; (iii) 0.5%; or (iv) none of
these.
iii) The linearity of an instrument deﬁnes: (i) the maximum deviation of the output
from the real value; (ii) the minimum change in input required to reﬂect a vari-
ation in the output; (iii) the maximum deviation of the output from the best-ﬁt
line; or (iv) none of these.
iv) The precision of an instrument expresses: (i) the closeness of the data to the mean
value (precision); (ii) the closeness of the data to the true value (accuracy); (iii) the
closeness of the data to the median value; or (iv) none of these.
v) Derive an increment for a three-bit ADC with a 0–10 V range.
vi) What is the maximum linearity error?
8.8
It is desired to design a small autonomous vacuum cleaner with a 16-key multiplexed key-
pad and liquid-crystal display (LCD) as the user interface for the motion control of the
front and rear wheels separately, as depicted in Figure 8.29(a) and (b). It should have an
antenna to communicate with the base station (remote control). It should detect dirt con-
centration and location by estimating dirt particles (DP) per cm2. In addition, it should
have two DC motor-driven wheels. Also it should use a DP sensor to adjust each motor
speed based on amount of dirt detected with a ADC conversion time of 50 microsec)
while a 5-bit ADC converter should be used to sample each motor speed and direc-
tion. The microcontroller provides four additional control bits to determine the motor
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
429
directions (00, both motors stopped; 01, left motor goes in reverse while right motor
goes forward; 10, left motor goes forward while right motor goes in reverse; 11, both
motors move forward). Finally, the vacuum should have an obstacle avoidance system.
Considering this vacuum system, answer the following questions:
a) What are the possible actuating and sensing devices involved?
b) How many bits are required to collect data from the dirt sensor, if it has a range of
0–6000 DP cm−2 and a resolution of 100 DP cm−2?
c) If this sensor has a maximum slope of 1000 DP s−1 and is capable of generating from
0 to 30 mV, what is its accuracy?
d) The motor controllers accept a voltage between −12 and +12 V. A positive voltage
causes them to spin the attached wheel in a forward direction. A negative voltage
causes them to spin it in a reverse direction. What is the resolution of the DACs used
to control the motors?
e) Draw a block diagram for the vacuum cleaner, including as much detail as possible,
such as ports of I/O devices sensors, actuators, DACs, logic, and so on. Add any com-
ponents, as long as their functions are described.
8.9
.a) A two-ﬂuid manometer uses a combination of kerosene r = 756kgm−3 and
alcohol-diluted water r = 866kgm−3. The diameters of the reservoir and the con-
necting U-tube are 50 and 6 mm, respectively. (i) What is the sensitivity (change in
output/change in input) of the two-ﬂuid manometer? (ii) If the U-tube were inclined,
at what angle would the sensitivity be doubled?
b) A data acquisition card that samples at a rate of 100 000 samples per second is used
to measure a signal given by v = 2sin(2𝜋15700t), where t is in seconds. Determine
whether there is an aliasing problem.
c) A type T thermocouple is used to measure the temperature of hot water. The reference
junction is exposed to ambient air T = 25∘C, while the measuring junction is placed
in boiling water. Determine the measured voltage.
d) Consider a thermocouple with a resolution of 0.01∘C and a sensitivity of 5 V ∘C−1.
What is the smallest voltage variation it can display?
8.10
A ﬁve-bit ADC with a 0–4.77 V range is used to monitor an oven temperature operating
in the 190–350∘C range. The resistance of the thermistor as a function of temperature is
given as:
R = 100 × e800∕(T+273)
where R is in ohms and T is in degrees Celsius. The input voltage and ballast resistor are
5 V and 700 Ω, respectively, as illustrated in Figure 8.30.
Complete the following table:
Temperature
(thermistor)
(∘C)
Resistance
(thermistor)
(𝛀)
Output voltage
(thermistor)
(V)
Binary output
of A/D
converter
Recorded
temperature
(∘C)
190
3900
3.11
0111
39.6
225
2867
2.33
260
310
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

430
8 Mechatronics Instrumentation: Actuators and Sensors
Thermal
system or 
process
Thermistor
measurement unit
Control panel unit
Acquistion and 
transmission unit
Actuating unit
5-bit A/D 
converter
Data 
storage
Unit
10000.01
10001.10
11000.01
11001.11
11100.10
---- -
11111.01
Binary code
signal
Digitized
carriable
signal
0-5 V filtered and 
amplified
signal
5 bit 
resolution
Signal representing
physical properties
temperature
5V
0V
Binary to 
decimal
conversion 
algorithm
700 Ω
Decimal to 
temperature
display algoirhtm
°C
9
6
3
,
0
3.11 V
Vs
Vout
10111.10
Figure 8.30 RTD sensor with an A/D data acquisition interface.
8.11
.a) List four applications of DC motors in a vehicle and specify the types of DC motors
encountered.
b) How can the stepper motor speed and its motion resolution be derived?
c) List three embedded intelligent and wearable sensing devices for human health mon-
itoring.
d) List three piezo-electric actuating systems in medical monitoring technology.
e) List the types of motors used in: (i) a low-inertia car 2D painting robot; (ii) a moving
conveyor of six-packs of 10–50 cl water bottles; and (iii) automatic car windows.
f) In the case of high-radial dynamics load conditions, among DC motorsthe DC, which
key design parameters would aﬀect motor selection? Explain why.
g) Among sensor characteristics such as resolution, slew rate, linearity, accuracy, and
precision, which one captures any output variation after the smallest input change?
8.12
Consider two position-measurement devices [p1, p2] connected in series, with 3.5 mV
mm−1 being the sensitivity of p1. If, for a 2.5 mm linear displacement, an overall mea-
surement voltage signal of 8.5 mV is recorded, what will be the measurement sensitivity
of p2 considering an oﬀset voltage at p1 of −0.2 mV? What is the measurement sensitivity
of p2 when there is a zero-oﬀset voltage of p1?
8.13
A position resolver is directly attached to the screw of a lathe machine. The screw has a
per-rev pitch of 2.5 mm. The phase shift between the resolver’s excitation and the feed-
back signals is incremented by 1 every time a clock pulse is generated, as derived by a
counter. The resolver excitation frequency is 900 Hz and a 2.5 μm position resolution is
required to ensure an accurate control of machine motion. What is an appropriate clock
frequency?
8.14
Two electrical-driven mining carts loaded with raw material for a total weight of 5 tons
are moving upward along an 8% hill, as illustrated in Figure 8.31. The driven motor is
attached to the drum (0.8 m diameter) and advances at a constant speed of 60 km h−1.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
431
Electric
motor
Gold mining
cars
8°
Loaded cartsʹ
center of gravity
+
Figure 8.31 Electric-driven carts moving uphill.
a) Assuming that the friction coeﬃcient between the car wheels and the rail surface is
0.60 (kg s−1), what is the minimum motor torque required? How much energy will be
consumed (in kWh) after a travel distance of 120 m? Assume the weight of both carts
acts at their center of gravity, which is at the middle of the junction cable.
b) For the case of carts moving downwards at a 90 km h−1 constant speed, what is the
power delivered by the motor?
c) What constant speed proﬁle and power rates are required to move the carts uphill
along 90 m of travel distance within a 3 min time interval?
8.15
Revisiting the system depicted in Figure 8.31, the motion power proﬁle is given such that
there is an acceleration phase from zero to a maximum power of 2000 kW in 25 s, then a
45 s period of constant velocity, requiring a power of 1500 kW, and ﬁnally a deceleration
or braking period, where power is reduced from 500 W to zero uniformly across 10 s.
For such a motor, what is the suitable power (kW) rating for root mean square (RMS)
power?
8.16
Detection of toxic chemicals in the environment is carried out using electrochemical
sensing devices based on a chromatographic technique through sample solution
separation. Here, in case of diﬀusion of charged species in the test environment,
measurements are collected through amperometric, thermal conductimetric, or poten-
tiometric techniques. The resulting signals are ampliﬁed and processed through key
feature-identiﬁcation signal processing. What could be the key elements for chemical
weapon detection using two detection techniques for compliance checks?
8.17
Electrical-driven actuators are used in the design of a snake-like robot capable of a
smooth and collision-free motion over rugged terrain (or through a smooth-walled
pipe). Each snake-like robot segment weighted 5.5 Kg for total 23.5 Kg. Its maximum
linear speed of 80 mm/sec is achieved and each associated motor should have a rated
torque less than 30 N.m. The collission-free motorized actuators change the position of
adhesive segments (chambers), which alter their internal pressure proportionally to the
motor rotational angle 𝜃(t), as illustrated in Figure 8.32.
Select type of electric motors to drive robot joints with 2D wheels which are suitable for
such intermitent operations, and describe the sensing devices involved.
Figure 8.32 Pneumatic-actuated snake-like
robot.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

432
8 Mechatronics Instrumentation: Actuators and Sensors
+
Motor
Electrical-driven
garage door
Driven wheel
Driving wheel
D2
D1
Pulley
+
Figure 8.33 Screw-based gear wheel motion for a garage door.
8.18
A bidirectional motor moves at a constant speed of 180 rpm to drive a screw-wheel con-
nected to a garage door, as illustrated in Figure 8.33. It is a 24-tooth driven wheel motor,
while the driving wheel has 32 teeth. The motor moves through a 16-tooth pinion along
a 96-tooth rack for a 9 cm pitch.
a) Select a DC motor suitable for such a garage door motion.
b) Describe a transmission element (e.g. screw, gear, wheel) conﬁguration capable
of quadrupling the motion speed along a travel distance of 50 cm for the selected
motor?
c) When choosing a stepper motor with a 1.8∘per step, what number of steps is required
to cover the same distance?
8.19
A port gantry system moving a container as depicted in Figure 8.34 has a 2D motion as
summarized in Figure 8.35.
a) Determine the continuous power rating of such a motor, with a duty cycle as summa-
rized in the following table.
b) What type of electric-driven motor for 2D container handling should it be?
Gantry
operations
Closing of
the gripper
Hoisting
Opening of
the gripper
Lowering of
the gripper
Rest
Duration (s)
8
15
5
15
20
Power required (W)
45
95
35
55
0
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Exercises and Problems
433
Trolley
Spreader
Gantry
Rails
Containers
y-direction
z-direction
Trolley
motor 1
Spreader
group 
motor 2
Gantry
group
motor 3
θ(t)
ß(t)
L(t)
T1(t)
T2(t)
x-direction
Figure 8.34 Gantry crane schematics.
y(t)
(m)
0
1
5
x (m)
10
20
30
40
50
4
3
2
1
2
3
4
15
30
40
x(t)
(m)
0
5
t (s)
1
2
3
4
5
1
2
3
4
4.5
3.5
2.2
1.4
y(t)
(m)
0
5
15
t (s)
30
40
10
20
30
40
50
4
3
2
1
36
17
14
Figure 8.35 Gantry crane 2D motion proﬁles.
8.20
.a) For ﬂuid motion along a pipeline with minimum/maximum characteristics of ﬂow
rate: 3.05, 12.1 l s−1, pressure: 3.5, 33.1 psi, temperature: 45, 75∘C, select a suitable
control valve from among the following, based on their valve coeﬃcient/diameter
size parameters: 650/4, 1050/8, 2105/16 cm.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

434
8 Mechatronics Instrumentation: Actuators and Sensors
b) What is the discharge velocity of a 3.48 speciﬁc gravity ﬂuid that supposedly ﬁlls a
tank at 12 m height? How would it be possible to double its discharge velocity? How
would the discharge diﬀer if the ﬂuid were a gas rather than a liquid?
8.21
.a) After a chemical reaction, the resulting solution toxic level TC measurement is
obtained indirectly through several instruments (TY, TV, TX), such that it can be
obtained through:
TC = (TV
2 + 3.2TY)TX
Thus, using the following measurement results, derive the resolution measurement
of the toxic level for the resulting solution:
TY = 0.2 ppb ± 0.01
TV = 5.6 ppb ± 0.3
TX = 12.8 ppb ± 1.1
b) What is the most suitable control valve (valve coeﬃcient/diameter size: 710/6, 1110/9,
2460/18 cm) for a ﬂuid with the following characteristic minimums and maximums:
ﬂow rate 3.05, 12.1 l s−1; pressure 3.5, 33.1 psi; temperature 35, 55∘C?
c) What is the discharge velocity for a liquid with speciﬁc gravity 3.48 used to ﬁll a tank
at 18 m height? How is it possible to double this discharge velocity?
Bibliography
1 Alciatore, D.G. and Histand, M.B. (2003). Introduction to Mechatronics and Measurement
Systems, 2e. McGraw-Hill International Editions.
2 Baker, B. (2005). Real Analog Solutions for Digital Designers. Elsevier.
3 Bishop, R.H. (ed.) (2002). The Mechatronics Handbook. ISA, CRC Press.
4 Cetinkunt, S. (2006). Mechatronics. Wiley.
5 de Silva, C.W. (2010). Mechatronics: A Foundation Course. CRC Press,.
6 Fraden, J. (2004). Handbook of Modern Sensors, 3e. Springer.
7 Gottlieb, I. (1994). Electric Motors and Control Techniques, 2e. McGraw-Hill.
8 Herman, S. (2013). Industrial Motor, 7e. Cengage Learning.
9 Isermann, R. (2003). Mechatronic Systems: Fundamentals. Springer.
10 Hughes, A. (2005). Electric Motors and Drives: Fundamentals, Types, and Applications, 3e.
Newnes.
11 Johnson, J.L. (1992). Basic Electronics for Hydraulic Motion Control. Penton IPC.
12 Jury, E. and Tsypkin, Y.Z. (1971). On the theory of discrete systems. Automatica 7: 89–107.
13 Karnopp, D.C., Margolis, D.L., and Rosenberg, R.C. (2012). System Dynamics: Modeling,
Simulation, and Control of Mechatronic Systems, 5e. Wiley.
14 Kazmierkowski, M.P., Krishnan, R., Blaabjerg, F., and Irwin, J.D. (2002). Control in Power
Electronics: Selected Problems. Academic Press.
15 Krishnan, R. (2001). Electric Motor Drives: Modeling, Analysis and Control. Prentice-Hall.
16 Ljung, L. (1999). System Identiﬁcation: Theory for the User, 2e. Prentice-Hall.
17 Lyshevski, S.E. (2000). Nano- and Micro-Electromechanical Systems: Fundamental of Micro-
and Nano-Engineering. CRC Press.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Bibliography
435
18 Manring, N. (2013). Fluid Power Pumps and Motors: Analysis, Design and Control.
McGraw-Hill.
19 Manring, N. (2005). Hydraulic Control System. Wiley.
20 Moran, M.J., Shapiro, H.N., Munson, B.R., and Dewitt, D.P. (2002). Introduction to Thermal
Systems Engineering: Thermodynamics, Fluid Mechanics and Heat Transfer. Wiley.
21 Onwubolu, G.C. (2005). Mechatronics Principles and Applications. Elsevier.
22 Petruzella, F. (2009). Electric Motors and Control. McGraw-Hill.
23 Pinsky, M. and Karlin, S. (2010). An Introduction to Stochastic Modeling. Academic Press.
24 Sul, S.-K. (2011). Control of Electric Machine Drive Systems. Wiley-IEEE Press.
25 Ripka, P. and Tipek, A. (2007). Modern Sensors Handbook. ISTE Ltd.
26 Sashida, T. and Kenjo, T. (1993). An Introduction to Ultrasonic Motors. Oxford University
Press.
27 Singh, R.P. and Heldman, D.R. (2001). Introduction to Food Engineering, 3e. Academic Press.
28 Shumway-Cook, A. and Woollacott, M.H. (1995). Motor Control: Theory and Practical
Applications. Williams & Wilkins.
29 Soloman, S. (1998). Sensors Handbook. McGraw-Hill Handbooks.
30 Shumway, R.H. and Stoﬀer, D.S. (2010). Time Series Analysis and Its Applications: With R
Examples. Springer.
31 Herman, S.L. (2010). Industrial Motor Control, 6e. Cengage Learning.
32 Suzuki, Y., Tani, K., and Sakuhara, T. (2000). Development of new type piezo-electric micro-
motor. Journal of Sensors & Actuators 83: 244.
33 Uchino, K. (1997). Piezo-electric Actuators and Ultrasonic Motors, 349. Kluwer.
34 Yeaple, F. (1996). Fluid Power Design Handbook, 3e. Dekker.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

437
A
Stochastic Modeling
Operating data-based mathematical characterization of system behavior can be derived into
either non parametric or parametric models. A generic parametric model identiﬁcation and
coeﬃcient estimation procedure consists of:
1) Preprocessing the dataset, which entails: (a) spitting it into estimation and validation data
for model identiﬁcation and validation, respectively; and then (b) examining the data via
plots to check for: (i) the missing data or visible errors in data; (ii) any aliasing eﬀects (due
to poor choice of sampling time); (iii) any trends or oﬀsets; and (iv) high- or low-frequency
disturbances.
2) Selecting the structure and the order of the system model. This iterative procedure consists
of ﬁtting various model structures and orders.
3) Estimating the “best” model within the selected model structure by deriving the model coef-
ﬁcients that “best ﬁt” with the dataset.
4) Determining the correctness of the model by analyzing the residual errors obtained in the
estimation process and determining the conﬁdence regions for the estimated coeﬃcients.
A.1
Discrete Process Model State-Space Form
The state-space model describing the relationship between the discrete system input, the sam-
pled system output, and the system noise signal is given by State Equation (A.1), representing:
(i) the state variable x(k + 1) at time instant k + 1 in terms of the previous state variable x(k) at
time k; and (ii) the observation with output y(k), such that:
x(k + 1) = A(q)x(k) + B(q)u(k) + w(k)
(A.1)
y(k) = C(𝜃)x(k) + v(k)
(A.2)
with A(q) = 1 + a1q−1 + … + anaq−na; B(q) = b1 + b2q−1 + … + bnbq−nb+1; w(k) being the white
noise representing the uncertainties on the process model or input disturbances, v(k) being the
white-noise sequence representing noise measurement, and u(k) being the exogenous input.
The stochastic state-space system model is given by:
̂x(k + 1) = A(𝜃)̂x(k) + B(𝜃)u(k) + K(𝜃)e(k)
(A.3)
y(k) = C(𝜃)̂x(k) + e(k)
(A.4)
where ̂x(k) represents the estimated state at instant k, e(k) is the error or white noise, and K(𝜃)
is the Kalman gain matrix; A(𝜃) B(𝜃) C(𝜃) are the process and measurement, respectively. For
a SISO model, the generic transfer function representation yields:
y(k) = G(q, 𝜃)u(k) + H(q, 𝜃)e(k)
(A.5)
Control Of Mechatronic Systems: Model-Driven Design And Implementation Guidelines,
First Edition. Patrick O.J. Kaltjob.
© 2021 Patrick O.J. Kaltjob. Published 2021 by John Wiley & Sons Ltd.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

438
Appendix A Stochastic Modeling
with:
G(q, 𝜃) = C(𝜃)
B(𝜃)
(q−1In∗n −A(𝜃))−1 + Im∗m
(A.6)
H(q, 𝜃) =
C(𝜃)K(𝜃)
(q−1In∗n −A(𝜃))−1 + Im∗m
(A.7)
A.2
Auto-Regressive Model with an eXogenous Input: ARX Model
Structure
In this case, the discrete process model is represented by the diﬀerence equation:
y(k) + a1y(k −1) + … + anay(k −na) = b1u(k −nk) + b2u(k −nk −2)
+ … + bnbu(k −nk −nb + 1) + e(k)
(A.8)
with the sequence {y(k), y(k −1), … , y(k −na)} representing the current and past process out-
put measurements with order na, the sequence {u(k −nk), u(k −nk −2), … , u(k −nk −nb +
1)} representing the past process input records with order nb and input delay nk, e(k) being
the error signal (process and measurement noise) describing independent and identically dis-
tributed zero-mean white noise with variance 𝜆, and a′
is with i = 1, 2, 3, … , na and b′
js with j =
1, 2, 3, … , n being the coeﬃcients of the diﬀerence equation or the model parameters.
This SISO Auto-Regressive with an eXogenous input (ARX) model structure consists
of estimation of output value at instant k, y(k) using an auto-regression of na past values:
{y(k −1), … , y(k −na)}, the past recorded input(s), and a model error estimate.
A.3
The Auto-Regressive Model – AR Model Structure
In this case, the current output value of the discrete process model is given as a function of na
past output values and the current unknown error estimate, such that:
y(k) = a1y(k −1) −a2y(k −2) −… −anay(k −na) + e(k)
(A.9)
A.4
The Moving Average Model – MA Model Structure
Here, the current output variable is represented as a weighted sum or moving average of the
past and present nc error estimates, such that:
y(k) = e(k) + c1e(k −1) + c2e(k −2) + … + cnce(k −nc)
(A.10)
This is compactly expressed as:
y(k) = C(q)e(k)
(A.11)
with:
C(q) = 1 + c1q−1 + … + cncq−nc
(A.12)
Equation (A.12) illustrates the ﬁltering of the white-noise signal e(k) (usually considered with
zero mean and variance of σ2) through a ﬁlter C(q). Knowledge of C(q) allows one to determine,
for instance, the energy distribution of the random disturbance of the process.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Appendix A Stochastic Modeling
439
A.5
The Auto-Regressive Moving Average Model – ARMA Model
Structure
In this case, the model representation is a combination of the AR and MA models. It describes
the current output value as a regression of its past values and the error model term as a moving
average, such that:
(1 + a1q−1 + … + anaq−na)y(k) = (1 + c1q−1 + … + cncq−nc)e(k)
(A.13)
The ARMA model allows the current output y(k) to be derived by passing white noise through
a ﬁlter C(q)∕A(q), such that:
C(q)
A(q) = 1 + a1q−1 + … + anaq−na
1 + c1q−1 + … + cncq−nc
(A.14)
A.6
The Auto-Regressive Moving Average with eXogenous Input
Model – ARMAX Model Structure
Adding the external input to the ARMA model results in an ARMAX model. Here, the current
output depends regressively on its na previous values and the past nb input values, as well as
nc error values, such that:
y(k) = −a1y(k −1) −… −anay(k −na) + b1u(k −nk) + … + bnbu(k −nk −nb + 1)
+ e(k) + c1e(k −1) + … + cnce(k −nc)
(A.15)
In a more compact notation, this gives:
A(q)y(k) = B(q)u(k) + C(q)e(k)
(A.16)
These SISO parametric models are readily extended to MISO models with an additional input
variable.
A.7
Selection of Model Order and Delay
The model orders are integers characterizing the complexity of a model or its number of poles
and zeros; that is, for ARX structure (na, nb) or ARMAX structure (na, nb, nc) with input delay
nk. This requires prior knowledge of physical model properties including the observed input
delay. These model orders are checked for correctness against routines, for example by (see
Table A.1):
1) Analyzing peaks obtained from the spectral of sequenced data and the analysis on correla-
tion from frequency responses. Usually, for the ARX and ARMAX models, the order of A(q)
is given by:
OrderA(q) = 2 × number peaks
2) Performing model-order reduction analyses by observing potential cancelation in pole-zero
pairs in a p-z map.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

440
Appendix A Stochastic Modeling
Table A.1 Typical model structure encountered for a system model.
Model type
Applications
Limitations
AR:
A(q)y(k) = e(k)
Used to predict behavior of
the time series based only on
past output values
MA:
y(k) = C(q)e(k)
Used to predict noise
correlation
ARMA:
A(q)y(k) = C(q)e(k)
Used to predict behavior of
the time series from past
error values only
ARX:
A(q)y(k) = B(q)u(k −nk) + e(k)
Noise model is 1∕A(q)
Models requiring both
control (input) and
disturbance eﬀects
Used to obtain simple
models with good
signal-to-noise ratio
Cannot model noise and
dynamics independently
(noise model coupled to
dynamics)
ARMAX:
A(q)y(k) = B(q)u(k −nk) + C(q)e(k)
Noise model is C(q)/A(q)
Used when dominating
disturbance entry at the input
Assumes the random
sequence e(k) is identically
distributed and passes via
C models only serially
correlated random eﬀects
of the system
ARIMAX:
A(q)y(k) = B(q)u(k −nk) + C(q)
Δ e(k)
Δ = 1 −z−1
Better models the noise (not
just as serially correlated or
moving average e(k)), but
adds an integral term Δ,
allowing it to model the
process noise with drifting
behavior
Box Jenkins:
A(q)y(k) = B(q)
F(q)u(k −nk) + C(q)
D(q)e(k)
Provides additional ﬂexibility
when modeling noise
Used when noise is not the
input, but rather
measurement disturbance
May be computationally
complex due to the need to
ﬁnd many parameters
Output Error:
y(k) = B(q)
F(q)u(k −nk) + e(k)
Noise model assumed to be
1. Used to parameterize only
system dynamics and not the
noise model
A.8
Parameter Estimation Methods
Once the model structure is selected and the model order is set, the next step in the
stochastic-based system modeling procedure is to estimate the model’s parameters (ai, bi,
etc.). Among the possible techniques, the linear least-squares (LSs) estimation is the most
straightforward. This consists of deriving the estimated model’s coeﬃcient that “best ﬁts”
a set of empirical data through a convex optimization over a cost function as the sum of
squared prediction errors from the model structures represented in a linear or pseudo-linear
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Appendix A Stochastic Modeling
441
regression. For example, consider a model structure given by the diﬀerence equation for
input/output measurements. The system model yields:
y(k) = −a1y(k −1) −… −anay(k −na) + b1u(k −nk) + … + bnbu(k −nk −nb + 1) + e(k)
y(k + 1) = −a1y(k) −… −… −anay(k −na −1) + b1u(k −nk) + b2u(k −nk −2)
+ … + bnbu(k −nk −nb + 1) + e(k + 1)
⋮
y(k + N −1) = −a1y(k + N −2) −… −anay(k −na −(N −1)) + b1u(k −nk)
+ … + bnbu(k −nk −nb + 1 −(N −1)) + e(k + N −1)
(A.17)
In matrix form, for k = 0, 1, the set of N equations here yields:
⎡
⎢
⎢
⎢
⎢⎣
y(k)
y(k + 1)
⋮
y(k + N −1)
⎤
⎥
⎥
⎥
⎥⎦
=
⎡
⎢
⎢
⎢
⎢⎣
−y(k −1)
−y(k −2)
· · ·
−y(k −1)
u(k −1)
· · ·
u(k −nb)
−y(k)
−y(k −1)
· · ·
−y(k −na −1)
u(k)
· · ·
u(k −nb −1)
⋮
⋮
⋮
⋮
⋮
⋮
⋮
−y(k + N −2)
−y(k + N −3)
· · ·
−y(k + N −(na + 1))
u(k + N −2)
· · ·
−y(k + N −(nb + 1))
⎤
⎥
⎥
⎥
⎥⎦
×
⎡
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢⎣
a1
a2
⋮
ana
b1
b2
⋮
bnb
⎤
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥⎦
+
⎡
⎢
⎢
⎢
⎢⎣
e(k)
e(k + 1)
⋮
e(k + N −1)
⎤
⎥
⎥
⎥
⎥⎦
(A.18)
This is equivalent to:
Y = X𝜃+ 𝜀
with Y =
⎡
⎢
⎢
⎢⎣
y(k)
y(k + 1)
⋮
y(k + N −1)
⎤
⎥
⎥
⎥⎦
being the vector of N output observations, 𝜀=
⎡
⎢
⎢
⎢⎣
e(k)
e(k + 1)
⋮
e(k + N −1)
⎤
⎥
⎥
⎥⎦
being
the vector of N random errors (all assumed white noise), 𝜃= [a1, a1, … , ana, b1, b2, … bnb]T
being the vector of parameter values to be determined,
X =
⎡
⎢
⎢
⎢
⎢
⎢⎣
−y(k −1)
−y(k −2)
· · ·
−y(k −na)
u(k −1)
· · ·
u(k −nb)
−y(k)
−y(k −1)
· · ·
−y(k −na −1)
u(k)
· · ·
u(k −nb −1)
⋮
⋮
⋮
⋮
⋮
⋮
⋮
y(k + N −2)
−y(k + N −3)
· · ·
−y(k + N −(na + 1))
u(k + N −2)
· · ·
u(k + N −(nb + 1)
⎤
⎥
⎥
⎥
⎥
⎥⎦
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

442
Appendix A Stochastic Modeling
being the matrix of past observations of output y(k) and control input u(k) for N measurements,
X denoting the measurement vector of known values of na previous y(k) observations and nb
previous u(k) observations, and with 𝜑(k) = [−y(k −1) … −y(k −na)..u(k −1) … u(k −nb)].
Thus, the matrix X is equally denoted as:
X =
⎡
⎢
⎢
⎢⎣
𝜑T(k)
𝜑T(k + 1)
⋮
𝜑T(k + N −1)
⎤
⎥
⎥
⎥⎦
In this way, Equation (A.18) readily yields:
⎡
⎢
⎢
⎢⎣
y(k)
y(k + 1)
⋮
y(k + N −1)
⎤
⎥
⎥
⎥⎦
=
⎡
⎢
⎢
⎢⎣
𝜑T(k)
𝜑T(k + 1)
⋮
𝜑T(k + N −1)
⎤
⎥
⎥
⎥⎦
⎡
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢⎣
a1
a2
⋮
ana
b1
b2
⋮
bnb
⎤
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥⎦
+
⎡
⎢
⎢
⎢⎣
e(k)
e(k + 1)
⋮
e(k + N −1)
⎤
⎥
⎥
⎥⎦
(A.19)
Every row of the equation can therefore be written as:
⎡
⎢
⎢
⎢⎣
e(k)
e(k + 1)
⋮
e(k + N −1)
⎤
⎥
⎥
⎥⎦
y(k) = 𝜑T(k)𝜃+ e(k)
(A.20)
Equation (A.20) is a linear regression equation from the ARX model and is used in the for-
mulation for the LS estimation. Vector 𝜽represents a set of parameters (model coeﬃcients)
to be determined, while 𝜑(k) is a measurement vector of the past observed I/O signals, which
are used to estimate the next value of the system output signal y(k). A similar formulation can
be determined for the other model structure, yielding the pseudo-linear regression. Among
commonly used parameter estimation techniques are the LS and recursive least-square (RLS)
methods.
A.9
LS Estimation Methods
The LS approach is an oﬀ-line parameter (model coeﬃcient) identiﬁcation technique based on
N measurements. The technique consists of using an initial guess of the model parameters, ̂𝜃(0),
to predict the system output at instant k, given by y(k) = 𝜑T(k)( ̂𝜃k −1). Then, the diﬀerence
between the predicted output, ̂y(k), and the measured system output, y(k), is calculated. Hence,
the prediction error, e(k) can be deﬁned as:
e(k) = y(k) −̂y(k)
(A.21)
Consequently, a cost function J(k), deﬁned as the sum of squared errors, measures this pre-
diction error. Based on the entire set of N observed data, the cost function J(k) is deﬁned for
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Appendix A Stochastic Modeling
443
k = 1 … N as:
min J(k) = 1
N
N
∑
k=1
e(k)2 = 1
N
N
∑
k=1
(y(k) −̂y (k ∣𝜃))2
(A.22)
This cost function is solved as an optimization problem to ﬁnd a global minimum with respect
to the parameters. Finding this minimum of the prediction error is often termed the LS esti-
mation method. With the ARX model, ﬁnding a unique solution (global minimum) to the opti-
mization problem using the LS method is quite straightforward, involving solving for 𝜃such
that:
𝜕J(k)
𝜕𝜃
= 0
(A.23)
A.10
RLS Estimation Methods
The online identiﬁcation mode parameters are constantly tuned with real-time new observed
data. The algorithm used to estimate these new system parameters is given by:
̂𝜃k+1 = ̂𝜃k + Kk{yk+1 −𝜑T
k
̂𝜃k}
(A.24)
with values deﬁned as:
yk = 𝜑T
k
̂𝜃k + ek
𝜑T
k
̂𝜃k = ̂yk
Kk =
Pk𝜑k
𝜆+ 𝜑T
k Pk𝜑k
Pk = 1
𝜆
[
Pk−1𝜑k𝜑T
k Pk−1
𝜆+ 𝜑T
k Pk−1𝜑k
]
this yields:
̂𝜃k+1 = ̂𝜃k + Pk𝜑k
[
ek
𝜆+ 𝜑T
k Pk𝜑k
]
(A.25)
where yk is the output measurement at the kth time step, 𝜑k describes the measurement vec-
tor of past observation of input and output at the kth time step, ̂𝜃k corresponds to vector of
the model’s parameter estimate, Kk is the smoothing factor, which tunes the eﬀect of the new
measurement on parameter estimate, Pk is the estimated error of variance, and 𝜆is the forget-
ting factor (with (0 < 𝜆< 1)), ensuring that older measurements carry less weight in the new
parameter estimate.
A.11
Model Validation
The model validation check determines the correctness of the model’s orders and the parameter
estimates. Among these statistical goodness-of-ﬁt metrics are: (i) Akaike’s information criterion
(AIC); (ii) ﬁnal prediction error (FPE); (iii) minimum description length (MDL); and (iv) best
ﬁt criteria, as described in Table A.2.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

444
Appendix A Stochastic Modeling
Table A.2 Commonly used statistical criteria for model order validation.
Method:
statistical criteria
Deﬁnition
Comment
Best ﬁt
FIT =
(
1 −|y −̂y|
|y −y|
)
× 100
where:
y = measured output
̂y = simulated output
y = mean value of output
Best model minimizes FIT
100% ﬁt corresponds to a perfect ﬁt
0% ﬁt indicates the ﬁt guesses the output
to be a constant (ˆy = y)
AI Criterion
AIC = log V + 2d
N
where:
V = loss function (see Equation (2.39))
d = number of estimated parameters
N = Number of estimate values in dataset.
Best model minimizes AIC
Investigates model quality when model
is simulated on diﬀerent dataset
AIC ≈FPE for d « N
FPE criterion
FPE =
(
V + 2d
N
)
Most accurate model minimizes FPE
Estimates model ﬁtting error when
model is used to predict new outputs
FPE ≈AIC for d « N
MDL criterion
MDL = V
(
1 + d ln N
N
)
Most accurate model minimizes MDL
Based on V and a penalty for the
number of terms used
A.12
Prediction Error Analysis Methods
Once results are derived from parameter estimation techniques (such as LSs) and chosen as
the “best ﬁt” based on one of the goodness-of-ﬁt statistics criteria, the resulting residuals (or
prediction errors), e(k), are carefully examined as they describe what part of the data the model
could not describe. The error residuals should be carefully examined for obvious trends. The
plot of the prediction errors (residuals) versus N measurement data may appear to follow a pat-
tern (trend). When the plot has no trend, and nor do the number of sign changes, the prediction
errors are random. This makes the correctness of the LS-based model impossible. Random error
plot results can be checked by counting the sign changes in the prediction errors. When there is
pattern, this may indicate that the model is not correct. Hence, any pattern, such as any gradual
rise or data curve shaping in the plot of prediction errors, invalidates the coeﬃcients’ estimates.
Among the residual analysis techniques for residuals, randomness, and independence are: (i)
auto-correlation (via a whiteness test); (ii) normality check; and (iii) cross-correlation of the
residuals and inputs.
A.13
Estimation of Conﬁdence Intervals for Parameters
The conﬁdence interval is the region within which an observation is expected to fall with a
given probability. For residuals, therefore, the conﬁdence interval corresponds to the range of
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Appendix A Stochastic Modeling
445
residual values with a speciﬁc probability that they are statistically insigniﬁcant for the system.
This means that, if the residuals are normally distributed, the conﬁdence interval of the parame-
ters can be derived. Estimation of the conﬁdence information is done by deriving the individual
conﬁdence limits of the coeﬃcients based on an assumption of independence of their estima-
tion. As such example, the conﬁdence interval is given by 100(1-α)%. This is used if estimates: (i)
are independent; (ii) if it contains relatively small elements; and (iii) if it can relax requirements
in practice.
A.14
Checking for I/O Consistency for Diﬀerent Models
A model validation method involves comparing its output results to those obtained from mea-
sured output data. This can be done by dividing the system measurement dataset into an esti-
mation dataset (to derive the model coeﬃcient) and a validation data set. The model is then
simulated with the validation system input data, and its output results compared with the mea-
sured system output data.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

447
B
Step Response Modeling
The step response test is a graphical modeling approach to model systems based on their
dynamical responses to step input. From the analysis of the system step response, the general
form of system parameters (gain, delay, time constants) can be estimated. Some model
simpliﬁcations can be done by representing higher-order dynamics properties in a dead time
term in the resulting model. Generic models from the step change and resulting response are
summarized in Table B.1. Systems with diﬀerentiation cause the step input response to have an
unbound amplitude response. Hence, their system parameters cannot be modeled using this
approach. Thus, the magnitude of the step input signal to be used in the system must consider
avoiding an unbound system response. Other limits of this modeling approach are that: (i) a
higher than second-order dynamics model is covered; (ii) it is more suitable for systems with
integration-dominating dynamics; and (iii) it is valid for small step changes around operation
conditions.
Table B.1 Generic step response model types and corresponding transfer functions.
Step response type
Continuous
process model
Discrete time
process model
M
Css
c(t)
m(t)
D
0
time
Gain plus delay process
c(t) = Km(t −D)
c(n) = Km(n −d)
K = Css
M
d = D
T
Here, d must be an integer; therefore,
any fractional part is usually rounded
up to the next integer
M
Css
c(t)
m(t)
D
0
time
dc/dt @ss
Integration plus delay process
dc(t)
dt
= Km(t −D)
c(n) = c(n −1) + Km(n −d −1)
K =
dc(t)
dt
||||ss
M
≈Css
M
d = D
T
Control Of Mechatronic Systems: Model-Driven Design And Implementation Guidelines,
First Edition. Patrick O.J. Kaltjob.
© 2021 Patrick O.J. Kaltjob. Published 2021 by John Wiley & Sons Ltd.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

448
Appendix B Step Response Modeling
Table B.1 (Continued)
Step response type
Continuous
process model
Discrete time
process model
M
Css
c(t)
D
0
time
m(t)
0.632 Css
slope
𝜏 +D
5𝜏 +D
𝜏 /2  +D
First-order plus delay process
Output reaches a steady state value of css
after a time interval of about 5𝜏.
𝜏dc(t)
dt
+ c(t) = Km(t −D)
with
𝜏= 2(t0.63 −t0.39)
Overdamped second- and
higher-order systems can be
approximated as a ﬁrst-order system
with dead time. DT model:
c(n) = e−T∕𝜏c(n −1)
+ K(1 −e−T∕𝜏)m(n −d −1)
K ≈Css
M
d = D
T and D = t0.632 −𝜏
c(t)/KM
Normalized time, 𝜔nt
2.0
1.5
1.0
0.5
0
4
8
0
12
16
20
𝜁 = 0.1𝜁 = 0.2
𝜁 = 0.707
Underdamped second-order process
0
ti
ti+1
Ci+1
Css
Ci
Log decrement method
1
𝜔n
2
d2c(t)
dt2
+ 2𝜉
𝜔n
dc(t)
dt
+ c(t)
= Km(t)
c(n) = a1c(n −1) + a2c(n −2)
+Kb1m(n −1) + Kb1m(n −2)
with:
a1 = 2e−𝜉𝜔nT cos 𝜔dT
a2 = 2e−2𝜉𝜔nT
b1 = 1 −𝜉𝜔n
𝜔d
e−𝜉𝜔nT sin 𝜔dT
−e−𝜉𝜔nT cos 𝜔dT
b2 = e−𝜉𝜔nT
(
e−𝜉𝜔nT + 𝜉𝜔n
𝜔d
sin 𝜔dT
−cos 𝜔dT
)
with:
𝜔d = 𝜔n
√
1 −𝜉
𝜉=
1
2𝜋(j −1) ln
( Ci −Css
Ci+1 −Css
)
For a larger damping ratio:
𝜉=
ln
( Ci −Css
Ci+1 −Css
)
√
4𝜋2 + ln
( Ci −Css
Ci+1 −Css
)
𝜔n =
2𝜋
ti+1 −ti
1
√
1 −𝜉2
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Appendix B Step Response Modeling
449
Table B.1 (Continued)
Step response type
Continuous
process model
Discrete time
process model
M
Css
c(t)
D
0
time
m(t)
0.632 Css
𝜏 +D
0.393 Css
Note that there is little delay initially
 for overdamped system 
𝜏 /2+D
Highly damped second-order process
1
𝜔n
2
d2c(t)
dt2
+ 2𝜉
𝜔n
dc(t)
dt
+ c(t)
= Km(t)
to be rewritten as:
1
𝜏1𝜏2
d2c(t)
dt2
+(𝜏1 + 𝜏2)dc(t)
dt
+c(t) = Km(t)
D = t𝜏+D −𝜏
Here, 𝜉> 1
c(n) = a1c(n −1) + a2c(n −2)
+Kb1m(n −1) + Kb2m(n −2)
with:
a1 = e−T∕𝜏1 + e−T∕𝜏2
a2 = −e−(T∕𝜏1+T∕𝜏2)
b1 = 1 +
(
1
𝜏2
e−T∕𝜏1 −1
𝜏1
e−T∕𝜏2
)
(
1
𝜏1
−1
𝜏2
)
b2 = −e−(T∕𝜏1+T∕𝜏2)
+
(
1
𝜏2
e−T∕𝜏1 −1
𝜏1
e−T∕𝜏2
)
(
1
𝜏1
−1
𝜏2
)
However, this can be
approximated as a ﬁrst-order
process with dead time. Between
the two time constants 𝜏1 and 𝜏2
with 𝜏1 ≫𝜏2, the longer 𝜏1
dominates the response, while the
eﬀects of the shorter 𝜏2 can be
d = 𝜏2
T
Hence, this results in a ﬁrst order
plus dead time:
c(n) = e−T∕𝜏1c(n −1)+
K(1 −e−T∕𝜏1)m(n −d −1)
with 𝜏2 = 2(t𝜏+D −t𝜏/2+D)
Css
c(t)
0
m(t)
0.594 Css
2𝜏
M
𝜔nt = 10 time
Critically damped second-order process
1
𝜔n
2
d2c(t)
dt2
+ 2𝜉
𝜔n
dc(t)
dt
+ c(t)
= Km(t)
which can be rewritten as:
𝜏2 d2c(t)
dt2
+ 2𝜏𝜉dc(t)
dt
+ c(t) = Km(t)
For 𝜉= 1
c(n) = a1c(n −1) + a2c(n −2)
+Kb1m(n −1) + Kb1m(n −2)
with:
a1 = 2e−𝜔nT
a2 = −e−𝜔nT
b1 = 1 −e−𝜔nT −𝜔nTe−𝜔nT
b2 = e−𝜔nT(e−𝜔nT + 𝜔nT −1)
which can be approximated as:
c(n) = e−T∕𝜏1c(n −1)+
K(1 −e−T∕𝜏1)m(n −d −1)
(Continued)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

450
Appendix B Step Response Modeling
Table B.1 (Continued)
Step response type
Continuous
process model
Discrete time
process model
The response reaches 59.4% of its
steady-state value at t = 2𝜏,
where 𝜏= 1∕𝜔n. If the time at
which this level is reached is t0.594,
the time constant can be found
from:
d = 1
2t0.594
𝜏= 1∕𝜔n = t0.594∕2
c(t)
0
time
m(t)
D
M
Slope
First-order plus integration process simpliﬁcation
into integration plus delay process
dc(t)
dt
≈Km(t −D)
c(n) = c(n −1) + Km(n −d −1)
Slope = dc(t)
dt
||||ss
K =
dc(t)
dt
||||ss
M
c(t)
0
time
m(t)
D
M
Slope
𝜁 = 0.1
Second-order plus integration process simpliﬁcation
into integration plus delay process
dc(t)
dt
≈Km(t −D)
c(n) = c(n −1) + Km(n −d −1)
The slope is given by:
Slope = dc(t)
dt
||||ss
K =
dc(t)
dt
||||ss
M
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

451
C
Z-Transform Tables
Table C.1 Z-transform table.
Laplace transform
Impulse response
Z-transform (impulse invariant)
H(s) = L {h(t)}
h(t) = L−1 {H(s)}
H(z) = Z {H(s)}
1
s
u(t)
z
z −1
1
s2
t
Tz
(z −1)2
1
s3
t2
2
T2z(z + 1)
2(z −1)3
6
s4
t3
T3z−1(1 + 4z−1 + z−2)
2(1 −z−1)4
1
s + a
e−at
z
z −e−aT
1
(s + a)2
te−at
Tze−aT
(z −e−aT)2
s
(s + a)2
(1 −at)e−at
1 −(1 + aT)e−aTz−1
(1 −e−aTz−1)2
a
s(s + a)
(1 −e−at)
z[(1 −e−aT)]
(z −1)(z −e−aT)
a
s2(s + a)
t −1 −e−at
s(s + a)
z[(aT −1 + e−aT)z + (1 −e−aT −aTe−aT)]
a(z −1)2(z −e−aT)
(continued)
Control Of Mechatronic Systems: Model-Driven Design And Implementation Guidelines,
First Edition. Patrick O.J. Kaltjob.
© 2021 Patrick O.J. Kaltjob. Published 2021 by John Wiley & Sons Ltd.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

452
Appendix C Z-Transform Tables
Table C.1 (Continued)
Laplace transform
Impulse response
Z-transform (impulse invariant)
a2
s(s + a)2
1 −(1 + at)e−at
z
z −1 −
z
z −e−aT −
aTe−aTz
(z −e−aT)2
b −a
(s + a)(s + b)
e−at −e−bt
z(e−aT −e−bT)
(z −e−bT)(z −e−aT)
a
(s2 + a2)
sin(at)
z sin(aT)
z2 −2z cos(aT) + 1
s
(s2 + a2)
cos(at)
z(z −z cos(aT))
z2 −2z cos(aT) + 1
1
(s + a)2 + b2
1
be−at sin(bt)
1
b
[
z(e−aT sin(bT))
z2 −2ze−aT cos(bT) + e−2aT
]
s + a
(s + a)2 + b2
1
be−at cos(bt)
1
b
[
z2 + ze−aT cos(bT)
z2 −2ze−aT cos(bT) + e−2aT
]
a2 + b2
s[(s + a)2 + b2]
1 −e−at (
cos(bt) + a
b sin(bt)
)
z(Az + B)
(z −1)(z2 −2ze−aT cos(bT)) + e−2aT
A = 1 −e−aT(cos(bT)) + a
b sin(bT)
B = e−a2T + e−a2T (a
b sin(bT)
)
−cos(bT)
1
s(s + a)(s + b)
1
ab +
e−at
a(a −b) +
e−bt
b(a −b)
z(Az + B)
(z −1)(z −e−aT)(z2 −e−bT)
A = b(1 −e−aT) −a(1 −e−bT)
ab(a −b)
B = ae−aT(1 −e−aT) −be−aT(1 −e−bT)
ab(a −b)
2
(s + a)3
t2e−at
T2e−aT(1 + e−aTz−1)z−1
(1 −e−aTz−1)3
𝜔
(s + a)2 + 𝜔2
e−atsin𝜔t
z−1e−aT sin 𝜔T
(z2 −2ze−aT cos(𝜔T)) + e−2aTz2
s + a
(s + a)2 + 𝜔2
e−atcos𝜔t
1 −z−1e−aT cos 𝜔T
1 −2z−1e−aT cos(𝜔T) + e−aTz2
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Appendix C Z-Transform Tables
453
Table C.2 Delay-included z-transform table.
Laplace transform
Impulse response
Delay-included z-transform
H(s) = L {h(t)}
h(t) = L−1 {H(s)}
Hm(z) = Z {H(s)} where m = 1.0 for no delay
1
s
u(t)
1
z −1
1
s2
t
mT
z −1 +
T
(z −1)2
1
s3
t2
2
T2
2
[
m2
z −1 + 2m + 1
(z −1)2 +
2
(z −1)3
]
1
s + a
e−at
e−amT
z −e−aT
1
(s + a)2
te−at
Te−amT[e−aT + m(z −e−aT)]
(z −e−aT)2
a
s(s + a)
1 −e−at
1
z −1 −
[
e−amT
z −e−aT
]
a
s2(s + a)
t −1 −e−at
a
T
(z −1)2 + amT −1
a(z −1) +
e−amT
a(z −e−aT)
a2
s(s + a)2
1 −(1 + at)e−at
1
z −1 −
[
1 + amT
z −e−aT +
aTe−aT
(z −e−aT)2
]
e−amT
b −a
(s + a)(s + b)
e−at −e−bt
e−amT
z −e−aT −
e−bmT
z −e−bT
a
(s2 + a2)
sin(at)
z sin(amT) + sin(1 −m)aT
z2 −2z cos(aT) + 1
s
(s2 + a2)
cos(at)
z cos(amT) + cos(1 −m)aT
z2 −2z cos(aT) + 1
1
(s + a)2 + b2
1
be−at sin(bt)
1
b
[e−amT[z sin bmT + e−aT sin(1 −m)bT]
z2 −2ze−aT cos(bT) + e−2aT
]
s + a
(s + a)2 + b2
1
be−at cos(bt)
e−amT[z cos bmT + e−aT sin(1 −m)bT]
z2 −2ze−aT cos(bT) + e−2aT
a2 + b2
s[(s + a)2 + b2]
1 −e−at (
cos(bt) + a
b sin(bt)
)
1
z −1 −e−amT[z cos bmT + e−aT sin(1 −m)bT]
z2 −2ze−aT cos(bT) + e−2aT
+
a
b (e−amT[z sin bmT + e−aT sin(1 −m)bT]
z2 −2ze−aT cos(bT) + e−2aT
1
s(s + a)(s + b)
1
ab +
e−at
a(a −b) +
e−bt
b(a −b)
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

455
D
Boolean Algebra, Bus Drivers, and Logic Gates
Compiled Boolean theorems.
A + B = B + A
=
A = A
A • B = B • A
(A + B) + C = A + (B + C)
A + 0 = A
(A • B)C = A(B • C)
A • 0 = 0
(A • B) + (A • C) = A(B + C)
A + 1 = 1
(A + B) • (A + C) = A + BC
A + A = A
A + AB = A
A • A = A
A + AB = A + B
A + A = 1
A(A + B) = A
A • 1 = A
(A • B) = A + B
AA = 0
(A + B) = A • B
D.1
Some Logic Gates, Flip-Flops, and Drivers
 
 
Two-input AND gate 
AND logic truth table 
INPUTS 
OUTPUTS 
A 
B 
Y 
0 
0 
0 
1 
0 
0 
0 
1 
0 
1 
1 
1 
Inputs
Output
A
A
Y
Control Of Mechatronic Systems: Model-Driven Design And Implementation Guidelines,
First Edition. Patrick O.J. Kaltjob.
© 2021 Patrick O.J. Kaltjob. Published 2021 by John Wiley & Sons Ltd.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

456
Appendix D Boolean Algebra, Bus Drivers, and Logic Gates
OR logic truth table
INPUTS
OUTPUTS
A
B
Y
0
0
0
1
0
1
0
1
1
1
1
1
NOT logic truth table
NOT truth table
INPUT (A)
OUTPUT 
(NOT A)
0
1
1
0
NAND truth table
INPUTS
OUTPUTS
A
B
Y
0
0
1
1
0
1
0
1
1
1
1
0
Two-input OR gate
Two-input NOT gate
Two-input NAND gate
Inputs
Output
Input
Output
Inputs
Output
Two-input NOR gate
 
0 
0 
1 
1 
0 
0 
0 
1 
0 
1 
1 
0 
NOR truth table
INPUTS
OUTPUTS
A
B
Y
Inputs
Output
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Appendix D Boolean Algebra, Bus Drivers, and Logic Gates
457
 
Two-input EOR gate 
EOR truth table 
EOR truth table 
INPUTS 
OUTPUTS 
A 
B 
Y 
0 
0 
0 
1 
0 
1 
0 
1 
1 
1 
1 
1 
 
Inputs
Output
D.2
Other Logic Devices: Drivers and Bus Drivers
 
Driver 
Driver logic 
A 
B 
0 
0 
1 
1 
 
Bus driver 
Bus driver logic 
E 
A 
B 
0 
0 
No connection 
0 
1 
No connection 
1 
0 
0 
A
B
E
B
A
1 
1 
1 
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

458
Appendix D Boolean Algebra, Bus Drivers, and Logic Gates
R
S
Q
Q
S
R
Q
Q
Q
Q
Q
S
R
S
Q
Q
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Appendix D Boolean Algebra, Bus Drivers, and Logic Gates
459
D.3
Gated R −S Latch
R
S
Q
Q
Control
S
R
Q
Q
control
D.4
D-Type (Delay-Flip-Flop)
D
Q
Q
Control
(Enable)
<
D
Q
Q
clock
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

460
Appendix D Boolean Algebra, Bus Drivers, and Logic Gates
 
Timing diagram of D-flip-flop 
(a) Truth table for D-flip-flop 
Control 
D 
Present 
state Q(t) 
Next state 
Q(t+1) 
0 
0 
0 
0 
0 
0 
1 
1 
0 
1 
0 
0 
0 
1 
1 
1 
1 
0 
0 
0 
1 
0 
1 
0 
1 
1 
0 
1 
1 
1 
1 
1 
Control
D
Q
 
(a) JK-flip-flop 
 
(c) Truth table for JK-flip-flop 
J 
K 
Q(t) 
Q(t+1) 
0 
X 
0 
0 
1 
X 
0 
1 
X 
0 
1 
1 
X 
1 
1 
0 
 
 
 
(b) T-flip-flop 
(d) Truth table for T-flip-flop 
T 
Q(t) 
Q(t+1) 
0 
0 
0 
0 
1 
1 
1 
0 
1 
1 
1 
0 
 
<
K
J
R
S
Q
Q
Clock
<
T
Q
Q
Clock
(b) Gated D-flip-flop transition or state table
 
 
 
Control(t)     D(t) 
( ) 
 
00 
01 
11 
10 
0 
0 
0 
1 
0 
1 
1 
1 
1 
0 
 
 
 
( + 1)
=
•
( )
+
• D(t) 
 
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Appendix D Boolean Algebra, Bus Drivers, and Logic Gates
461
D.5
Register or Buﬀer
C
D
Q
Q
C
D
Q
Q
C
D
Q
Q
C
D0
D1
Dn–1
Qn–1
Q1
Q0
(c)  n-bit register or buffer constructed with D-flip-flops 
D.6
Adder
(a) Half-adder circuit
(a) Half-adder circuit logic
A
B
SUM
CARRY
0
0
0
0
1
0
1
0
0
1
1
0
1
1
0
1
A
B
SUM
CARRY
(b) Full-adder circuit 
A
B
SUM
Cout
Cin
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

463
E
Solid-State Devices and Power Electronics
Electronics circuitry (e.g. power converters) is used to drive electromechanical motion actuat-
ing devices such as motors and solenoid valves. These devices are usually made of silicon (Si),
germanium (Ge), and cadmium sulﬁde, and their ON/OFF switching deﬁnes the operation of
any converter.
E.1
Power Diodes
With a power diode, when the supply voltage, Vdiode, exceeds the forward biased voltage Vfb
(around 0.7 V for silicon and 0.3 V for germanium), the diode is called “forward biased,” sim-
ilar to a closed switch. Conversely, when Vrb < Vdiode < Vfb (Vrb being the reverse breakdown
voltage of the diode), the diode behaves as an open switch and is called “reverse biased.” These
diodes are suitable for signal rectiﬁcation and peak.
Anode
Cathode
+
−
−
+
Forward-biased
polarity (closed)
Forward-biased
polarity (open)
Vdiode
Anode
Cathode
N
P
Figure E.1 Diode schematics and symbol.
A Zener diode is used to build AND and OR logic gates.
Figure E.2 n-input OR logic gate using a diode
resistor.
IN 1
IN n
OUT = IN 1 + IN 2 + …. + IN n
IN 2
R
Control Of Mechatronic Systems: Model-Driven Design And Implementation Guidelines,
First Edition. Patrick O.J. Kaltjob.
© 2021 Patrick O.J. Kaltjob. Published 2021 by John Wiley & Sons Ltd.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

464
Appendix E Solid-State Devices and Power Electronics
IN 1
IN n
OUT = IN 1 • IN 2 •… • IN n
IN 2
4.7 V
R
Figure E.3 n-input AND logic gate using a diode
resistor.
E.2
Diode–Transistor Logic (DTL)
IN 1
IN 2
OUT 1 = IN 1 + IN 2+ …. + IN n
+ 4.7 V
OUT = IN 1 + IN 2 + …. + IN n
IN n
R
R
R
Figure E.4 n-input NOR logic gate using a diode transistor.
IN 1
IN n
IN 2
4.7 V
R
OUT = IN 1 •  IN 2  • …. •  IN n
R
R
Figure E.5 n-input NAND logic gate using a diode transistor.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Appendix E Solid-State Devices and Power Electronics
465
E.3
Power Transistors
Figure E.6 Power transistor schematics and
symbol.
Collector, C
Emitter, E
Base, B
iE
iC
iB
+
+
−
Vout
VBE
N
P
N
E.4
Resistor–Transistor Logic (RTL)
Figure E.7 NOT logic gate using a resistor transistor.
+ 4.7 V
IN
OUT = IN
Transistor-based NOT logic gate
+ 4.7 V
OUT = IN 1 • IN 2 • … • N In 
R
R
R
IN n
IN 2
IN 1
R
Figure E.8 AND logic gate using a resistor transistor.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

466
Appendix E Solid-State Devices and Power Electronics
E.5
Transistor–Transistor Logic (TTL)
IN 1
+ 4.7 V
IN 2
IN n
OUT  = IN 1 • IN 2 • … •  N In
Figure E.9 Transistor–transistor logic implementation of a NAND gate.
TRIAC
GTO
DIODE
PNP TRANSISTOR
NPN TRANSITSOR
ZENER DIODE
THYRISTOR
Figure E.10 Symbols for some electronic devices.
E.6
Metal Oxide Semiconductor FET (MOSFET)
Emitter, E
Collector, C
Gate, G
Figure E.11 MOSFET schematic.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Appendix E Solid-State Devices and Power Electronics
467
E.7
Thyristors
The silicon-controlled rectiﬁer (SCR), also called a reverse blocking triode thyristor, is a
controllable time conduction diode.
Anode
Cathode
Gate
Anode
Cathode
Gate
P
N
N
P
Figure E.12 Thyristor schematic and symbol.
The thyristor is ON when the voltage across the anode is higher than the voltage across the
cathode and a current is allowed to ﬂow into the gate for a few microseconds. It switches from
a blocking phase to a conduction phase through a suitable gate pulse. Thyristors modulate the
average output DC voltage by varying the ﬁring timing of the voltage/current gate, which is
given by:
VD = 1.35 × VRMS (RMS – Phase Voltage)
(E.1)
Figure E.13 Thyristor switching due to voltage and
current variation.
Conduction
Input
current 
Applied
voltage
Blocking
θ
On
Off
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

469
Index
a
absolute encoder
411, 412
accelerometer
403, 414–416, 423,
428
AC motor control
257
akaike’s information criterion
443
aliasing eﬀects
156–159, 162, 417
Analog-to-Digital Converter
378
ARMA. See model structure
armature voltage control
257
ARX. See model structure
assembly language
287, 325–328
b
backshift operator
107
beer fermentation
27, 73–75, 369, 373, 374
bibo stability
188
biomedical systems
47–53, 299–306
binary actuator
380
block diagram manipulation
119, 240,
243, 276
Boolean algebra
455
Boolean formal modeling
283–336
brewery process
73
c
cascade control
198, 237–239,
242–244
cement systems
3, 78–81, 297, 352–361
combinational logic
143, 288, 289, 307
combinatorial logic control
288
command generation
251, 389
command input feedforward
226–234
communication protocols
424, 426
condition monitoring
7
control valve
396
control valve dynamics
397
conveyor oven
21, 22, 27, 60–62
counter
141–144, 409, 410, 430
Cross-coupled dynamics
240–242
cruise control
22, 42
cubic polynomial
127, 130, 131
d
data acquisition
7
DC motor control
235, 236
DC motors
101, 130, 153, 154, 257, 379, 384,
387, 430
deadbeat controller
199, 200, 212, 267
dialysis blood
18
diﬀerence equation
123
diﬀerential equation
3, 30, 48, 73, 86, 87, 108,
109, 112–114, 120, 151, 164, 198, 248,
260, 338, 343
digital-to-analog converter
127, 143, 144
direct design
199
distance sensor
402
disturbance feedforward
234–235
disturbance rejection
155, 158, 161, 182, 183,
198, 199, 221, 235, 260, 266
drilling system
75–78
driverless vehicle
42–45
e
electric heater
99
electrovalves
350–351, 353, 356, 372, 380,
396–398
elevator system
35, 36, 38, 307
f
fan
417
feedforward control
226, 234
ﬁeld control
257–259
ﬁnal prediction error
443
Control Of Mechatronic Systems: Model-Driven Design And Implementation Guidelines,
First Edition. Patrick O.J. Kaltjob.
© 2021 Patrick O.J. Kaltjob. Published 2021 by John Wiley & Sons Ltd.
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

470
Index
ﬂash ADC
143
ﬂoodgate control
262
ﬂow sensor
16, 18, 403
ﬂuidic transmission
393
force measurement
416–417
fourier series
176–179
frequency response
178–179
g
gain margin
179, 180, 185, 205
garage door
327, 432
glucose insulin
50–53
h
heat exchanger
65–67
heat transfer equations
124
helicopter
22, 23
hold equivalent
124
hybrid control
10, 11, 14, 16–18, 21, 23, 25,
337–375
i
I/O address bus
138, 146
incremental encoder
404, 408–410
induction motor
252–259, 347, 380, 387–389
infant incubator
27, 47–50, 86
ingot robot gripper
260
interlock design
317, 339
inverse z transformation
118
inverted pendulum
45
j
jury-marden stability test
190
k
Kalman
437
l
laplace transform
110, 116, 117, 119, 120,
123–126, 151
laser beam
16, 18, 89, 303
laser machining system
193
laser measuring system
272
lathe machine
27
lead compensator
209, 214, 221, 222, 225, 278
lead-lag compensation
202, 204, 224
least-square
442
linear interpolation
127, 128
linear velocity transducer
413
load torque
38, 77, 96, 161, 236
logic devices
3, 382
m
machine tools
291
matched pole
117
measurement error
410
mechanical transmission
390, 391, 393
mechatronics
1, 21, 22, 313, 332
minimum description length
443
missile guidance
19, 199
model predictive
197, 199, 226, 343
model structure
27, 28, 30, 52, 101, 437–442
motion potentiometer
408
motion proﬁle
28, 32, 35, 38, 42, 96, 129–133,
260
n
network latency
64
numerical integration
109
o
oil distillation
19, 20, 68–73, 280, 363
p
percent overshoot
180, 182, 184, 191, 202,
204, 276, 279, 292
permanent magnet motor
257
phase crossover frequency
179, 181, 185, 209,
211
phase lag compensator
278
phase margin
169, 179, 181, 205–207, 221,
259, 260, 276
photoelectric sensors
402, 424
PID control algorithms
201, 235
pipeline ADC
143
pole placement
225
pole-zero compensation
160, 219, 222, 266,
439
portico scratcher
279–299
position sensor
162, 319, 402, 404, 413, 416
potentiometer
357, 358, 365, 402, 406, 408,
419, 420, 427, 428
poultry processing
65, 66
power converter
463
pressure transducers
419
process automation
1, 4, 7–9, 15, 16, 340,
346
process dynamics audit
182
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

Index
471
propagation time
143, 151, 404
pulse width modulation
256
pumps
58, 353, 372, 427
r
radio frequency identiﬁcation
424
receding horizon
246, 277
recursive least square
442
resistance temperature detector
136
resolution
137, 139–145, 151, 250, 340,
401–405, 409–413
resolver
409–412, 430
resonant frequency
184
resonant peak
184
rise time
128, 156–159, 169, 182, 185, 186,
191, 198, 199, 201, 211, 221, 259, 356
root locus
169–173, 187, 194, 197, 198,
220–225, 259, 263, 264, 266, 272, 278
routh-hurwitz
169, 188
Runge-Kutta approximation
112
s
sample and hold
124, 140, 148
sampling time
158
scalar control
252–259
sea gantry crane
28
seaport gantry cranes
28
segway
43, 45–47
selection sample period
156
selection sampling rate
159
self-excited DC motor
384
sensor classiﬁcation
400
sensor selection
377–434
separately excited dc motors
257
sequential logic control
283, 286, 340
settling time
128, 140, 143, 156, 157, 160, 169,
182, 183, 186, 191, 199, 205, 211, 212,
214, 218, 221, 222, 224, 260, 266, 270,
278
signal conditioner
136
signal conditioning
6, 135–137
sketching frequency response
179
smart sensors
403, 422, 423
solar heating system
92
solenoids
179
spacecraft
164, 165
stability analysis
155, 185, 187, 191, 192, 194
state feedback
153, 197, 235–246, 276, 277
stationary process dynamics
202
steady state error
182, 183, 186, 187, 191–193,
198, 201, 202, 205, 207–209, 213, 214,
216, 218, 221, 231, 236, 244, 260,
262–264, 269, 270, 278
stepping motor control
249, 273
stochastic modeling
247, 437–445
strain gauge
136, 377, 400, 401, 416, 417, 419
system bandwidth
157, 182, 184
t
tank system
167
thyristors
256, 258, 380, , 399, 467
time constant
183
torque sensor
10, 417
torque speed curve
122, 257–259, 384
v
vacuum cleaner
428, 429
vacuum switches
426
vector control
253–259
vehicle powertrain
38–40, 97
velocity proﬁle
34, 133, 134, 229, 272, 418
w
water distribution
57–60, 64
wind turbine
27, 81–83, 274, 275
z
z-transform theorems
117
zero-order hold
123, 124, 126, 149, 205
zero-pole matching
116
 Downloaded from https://onlinelibrary.wiley.com/doi/ by The Wikipedia Library, Wiley Online Library on [17/01/2024]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

