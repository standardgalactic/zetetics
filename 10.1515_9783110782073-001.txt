1 Basic set theory and basic logic
1.1 Basic set theory
Fundamental definitions of set theory
A set is a collection of objects which are called its elements. As usual, we write “t ∈A” to
say that t is a member of A, and we write “t ∉A”’ to say that t is not a member of A. We
write A = B to mean that the sets A and B are equal, that is, they have the same elements.
For sets A and B we write A ⊆B to mean to mean that set A is a subset of set B, that is,
every element of A is also an element of B.
Remark. Recall the following:
1.
A ⊆B means that for all x, if x ∈A, then x ∈B.
2.
A = B means that for all x, x ∈A if and only if x ∈B.
3.
One special set is the empty set ⌀, which has no members at all. Note that ⌀⊆A for
any set A.
4.
For any object x, the set {x} is called a singleton because it has only one element,
namely, x.
We now identify some important sets that often appear in mathematics:
1.
ℕ= {x : x is a natural number} = {0, 1, 2, 3, . . . },
2.
ℤ= {x : x is an integer} = {. . . , −3, −2, −1, 0, 1, 2, 3, . . . },
3.
ℚ= {x : x is a rational number}; for example, −2, 2
3 ∈ℚ,
4.
ℝ= {x : x is a real number}; for example, 2
3, π ∈ℝ.
Given a property P(x) we can form the set of just those elements in a set A that make
P(x) true, that is, we can form the set {x ∈A : P(x)}. For example, let ℕbe the set of
natural numbers. Suppose we want to collect just those elements in ℕthat are odd. We
can easily describe this set by {n ∈ℕ: n is odd}, that is, “the set of all n ∈ℕsuch that n
is odd.” Thus, {n ∈ℕ: n is odd} = {1, 3, 5, 7, . . . }.
Definition 1.1.1. Given two sets A and B we define the following:
1.
A ∩B = {x : x ∈A and x ∈B} is the intersection of A and B,
2.
A ∪B = {x : x ∈A or x ∈B} is the union of A and B,
3.
A \ B = {x : x ∈A and x ∉B} is the set difference of A and B (also stated in English as
A “minus” B),
4.
A and B are disjoint if they have no elements in common, that is, A ∩B = ⌀,
5.
to add one extra object t to a set A, we will write A; t to denote the set A ∪{t}.
Consider a set A whose members are themselves sets. The union of A, denoted by
⋃A, is the set of objects that belong to some member of A, that is,
⋃A = {x : x belongs to some member of A}.
https://doi.org/10.1515/9783110782073-001

2
౪
1 Basic set theory and basic logic
When A is nonempty, the intersection of A, denoted by ⋂A, is the set of objects that
belong to every member of A, that is,
⋂A = {x : x belongs to every member of A}.
For example, if A = {{0, 1, 5}, {1, 6}, {1, 5}}, then
⋃A = {0, 1, 5, 6}
and
⋂A = {1}.
In cases where we have a set Ai for each i ∈I, the set {Ai : i ∈I} is called an indexed
family of sets. The union ⋃{Ai : i ∈I} is usually denoted by ⋃i∈I Ai or ⋃i Ai. The inter-
section ⋂{Ai : i ∈I} is usually denoted by ⋂i∈I Ai or ⋂i Ai. We will often be dealing with
unions of the form ⋃n∈ℕAn and intersections of the form ⋂n∈ℕAn.
More generally, a set having the form {xi : i ∈I} is called an indexed set and each
i ∈I is called an index. Every element in {xi : i ∈I} has the form xi for some i ∈I. Such
sets appear frequently in mathematics and will also appear in this text.
Definition 1.1.2. Let A be a set. The power set of A, denoted by 𝒫(A), is the set whose
elements are all of the subsets of A, that is, 𝒫(A) = {X : X ⊆A}.
Thus, X ∈𝒫(A) if and only if X ⊆A. If A is a finite set with n elements, then one can
show that the set 𝒫(A) has 2n elements. The set A = {1, 2, 3} has three elements, so 𝒫(A)
has eight elements, namely,
𝒫(A) = {⌀, {1}, {2}, {3}, {1, 2}, {1, 3}, {2, 3}, {1, 2, 3}}.
1.1.1 Relations
Definition 1.1.3. An ordered pair has the form ⟨a, b⟩, where a is referred to as the first
component and b is identified as the second component.
Example 1.1.4. The pair ⟨2, 3⟩is an ordered pair, and so is ⟨3, 2⟩. Note that these are
different ordered pairs, that is, ⟨2, 3⟩
̸= ⟨3, 2⟩.
Definition 1.1.5. Given sets A and B, the Cartesian product A × B is the set
A × B = {⟨a, b⟩: a ∈A and b ∈B}.
In other words, A×B is the set of all ordered pairs with first component in A and second
component in B.
Definition 1.1.6. An n-sequence is an ordered list of the form ⟨a1, a2, . . . , an⟩, where n ≥1
is a natural number. The term a1 is called the first component, a2 is the second compo-
nent, . . . , and an is the n-th component. We say that ⟨a1, a2, . . . , ak⟩is a proper initial
segment of ⟨a1, a2, . . . , an⟩when 1 ≤k < n.

1.1 Basic set theory
౪
3
Given an n-sequence s = ⟨a1, a2, . . . , an⟩and an m-sequence t = ⟨b1, b2, . . . , bm⟩, the
concatenation of s with t is the (n+m)-sequence given by
s⌢t = ⟨a1, a2, . . . , an, b1, b2, . . . , bm⟩.
Example 1.1.7. The sequence ⟨3, −1, 2, 2⟩is a 4-sequence, and so is ⟨2, −1, 3, 2⟩. Note that
these are different sequences, that is, ⟨3, −1, 2, 2⟩
̸= ⟨2, −1, 3, 2⟩.
We will just say that ⟨a1, a2, . . . , an⟩is a sequence, when n is understood.
Definition 1.1.8. Let n ≥1 and let A be a set. Then the set An is defined to be
An = {⟨a1, a2, . . . , an⟩: a1 ∈A, a2 ∈A, . . . , an ∈A}.
In other words, An is the set of all n-sequences whose components are all in A.
For the record, an n-sequence ⟨a1, a2, . . . , an⟩is rigorously defined to be a function
f : {1, 2, . . . , n} →{a1, a2, . . . , an}
such that f (1) = a1, f (2) = a2, . . . , f (n) = an. Thus, ⟨a, b⟩= ⟨c, d⟩if and only if a = c
and b = d. Moreover, ⟨a1, a2, . . . , an⟩= ⟨b1, b2, . . . , bm⟩if and only if n = m and a1 =
b1, . . . , an = bm.
Definition 1.1.9. A subset R of An is said to be an n-place relation on A. We will write
R(a1, a2, . . . , an) to indicate that ⟨a1, a2, . . . , an⟩∈R.
A 1-place relation on a set A is simply a subset of A.
Definition 1.1.10. A 2-place relation R on a set A is often just called a relation on A. The
domain of R, dom(R), is the set {x ∈A : ⟨x, y⟩∈R for some y}. The range of R, ran(R), is
the set {y ∈A : ⟨x, y⟩∈R for some x}. The union of dom(R) and ran(R) is called the field
of R, fld(R).
A relation R on A is a subset of A × A, that is, R ⊆A × A. We shall customarily write
xRy or R(x, y) to denote ⟨x, y⟩∈R.
The equality relation is reflexive, symmetric, and transitive. Many relations also
have some of these properties. Relations that have all of these properties often appear
in mathematics.
Definition 1.1.11. For a relation ∼on A, we define the following:
∼is reflexive if and only if x ∼x for all x ∈A,
∼is symmetric if and only if whenever x ∼y, then also y ∼x,
∼is transitive if and only if whenever both x ∼y and y ∼z, then x ∼z.
Finally, we say that a relation ∼on A is an equivalence relation if and only if ∼is
reflexive, symmetric, and transitive.

4
౪
1 Basic set theory and basic logic
1.1.2 Equivalence classes and partitions
A partition is a way of breaking up a set into nonempty disjoint parts such that each
element of the set is in one of the parts.
Definition 1.1.12. Let A be a set. Let P be a collection of nonempty subsets of A. We say
that P is a partition of A if the following hold:
1.
For every element a ∈A there is a set S ∈P such that a ∈S.
2.
For all S, T ∈P, if S
̸= T, then S ∩T = ⌀.
Example 1.1.13. The set P = {S1, S2, S3} forms a partition of the set ℤwhere
S1 = {. . . , −6, −3, 0, 3, 6, . . . },
S2 = {. . . , −5, −2, 1, 4, 7, . . . },
S3 = {. . . , −4, −1, 2, 5, 8, . . . }.
That is, P = {S1, S2, S3} breaks ℤup into three disjoint nonempty sets and every integer
is in one of these sets.
Definition 1.1.14. Let ∼be an equivalence relation on a set A and let a ∈A be an element
of A. The equivalence class of a, denoted by [a]∼, is defined by
[a]∼= {b ∈A : b ∼a}.
We write [a] = [a]∼when the relation ∼is clearly understood. So if a ∈A, then
a ∈[a] as a ∼a.
Theorem 1.1.15. Let ∼be an equivalence relation on A. Then for all a, b ∈A,
a ∼b
if and only if
[a] = [b].
Proof. Let ∼be an equivalence relation on A. Let a, b ∈A. We shall prove that
a ∼b
if and only if
[a] = [b].
(⇒). Assume that a ∼b. We prove that [a] = [b]. First we prove that [a] ⊆[b]. Let
x ∈[a]. We show that x ∈[b]. Since x ∈[a] and [a] = {y ∈A : y ∼a}, it follows that x ∼a.
By assumption, we also have a ∼b. Hence, x ∼a and a ∼b. Since ∼is transitive, we
conclude that x ∼b. Now, because [b] = {y ∈A : y ∼b}, it follows that x ∈[b]. Therefore,
[a] ⊆[b]. The proof that [b] ⊆[a] is very similar. So [a] = [b].
(⇐). Assume that [a] = [b]. We prove that a ∼b. Since a ∈[a] and [a] = [b], it follows
that a ∈[b]. But [b] = {y ∈A : y ∼b}. Therefore, a ∼b.

1.1 Basic set theory
౪
5
Corollary 1.1.16. Let ∼be an equivalence relation on a set A. Then for all a ∈A and b ∈A,
a ∈[b] if and only if [a] = [b].
Theorem 1.1.17 (Fundamental theorem on equivalence relations). Whenever ∼is an equiv-
alence relation on a set A, the collection P = {[a] : a ∈A} is a partition of A. We denote
this partition by P = A/∼.
Proof. Let ∼be an equivalence relation on A. We prove that the set P = {[a] : a ∈A} is a
partition of A, that is, we prove that:
(i)
for every element x ∈A we have x ∈[x],
(ii) for all x, y ∈A, if [x] ∩[y]
̸= ⌀, then [x] = [y].
Proof of (i). Let x ∈A. Clearly, [x] ∈P and x ∈[x].
Proof of (ii). Let x, y ∈A. Thus, [x] ∈P and [y] ∈P. We must prove that if [x]
̸= [y],
then [x] ∩[y] = ⌀. So assume [x]
̸= [y]. Assume, for a contradiction, that [x] ∩[y]
̸= ⌀.
Since [x] ∩[y]
̸= ⌀, there exists a z ∈A such that z ∈[x] and z ∈[y]. However, since
[x] = {b ∈A : b ∼x} and [y] = {b ∈A : b ∼y}, it thus follows that z ∼x and z ∼y.
Because ∼is symmetric, we conclude that x ∼z and z ∼y. As ∼is transitive, we further
conclude that x ∼y. But Theorem 1.1.15 now implies that [x] = [y], which contradicts
our assumption that [x]
̸= [y]. Therefore, [x] ∩[y] = ⌀.
1.1.3 Functions
One of the most important concepts in mathematics is the function concept. A function
is a way of associating each element of a set A with exactly one element in another set B.
We will give a precise set-theoretic definition of a function using relations.
Definition 1.1.18. A relation R is single-valued if for each x ∈dom(R) there is exactly
one y such that ⟨x, y⟩∈R.
Thus, if R is a single-valued relation, then whenever ⟨x, y⟩∈R and ⟨x, z⟩∈R, we
can conclude that y = z.
Definition 1.1.19. A function f is any single-valued relation; in other words, for each
x ∈dom(f ) there is only one y such that ⟨x, y⟩∈f .
Let A and B be sets. A function f from A to B is a subset of A × B such that for each
x ∈A there is exactly one y ∈B so that ⟨x, y⟩∈f . For example, let A = {a, b, c, d, e} and
B = {5, 6, 7, 8, 9}. Then
f = {⟨a, 8⟩, ⟨b, 7⟩, ⟨c, 9⟩, ⟨d, 6⟩, ⟨e, 5⟩}
is a function from A to B because for each x ∈A, there is exactly one y ∈B such that
⟨x, y⟩∈f . We now express this notion in terms of a formal definition.

6
౪
1 Basic set theory and basic logic
Definition 1.1.20. Let A and B be sets and let f be a relation from A to B. Then f is said
to be a function from A to B if the following two conditions hold:
(1) dom(f ) = A, that is, for each x ∈A, there is a y ∈B such that ⟨x, y⟩∈f ,
(2) f is single-valued, that is, if ⟨x, y⟩∈f and ⟨x, z⟩∈f , then y = z.
The set A is the domain of f and the set B is called the codomain of f .
We write f : A →B to indicate that f is a function from the set A to the set B. Thus,
for each x ∈A, there is exactly one y ∈B such that ⟨x, y⟩∈f . This unique y is called “the
value of f at x” and is denoted by f (x). Therefore, ⟨x, y⟩∈f if and only if f (x) = y. We
will say that x ∈A is an input to the function f and f (x) is the resulting output. One can
also say that the function f maps x to f (x), denoted by x 󳨃→f (x).
Given a function f : A →B, the set {f (x) : x ∈A} is called the range of f and is
denoted by ran(f ). Clearly, ran(f ) is a subset of B. The following lemma offers a useful
tool for showing that two functions are equal.
Lemma 1.1.21. Let f and g be functions such that dom(f ) = dom(g). Then f = g if and
only if f (x) = g(x) for all x in their common domain.
Definition 1.1.22. For a natural number n ≥2 and a function f : Xn →Y from the set of
sequences Xn to the set Y, we shall write f (⟨x1, x2, . . . , xn⟩) = f (x1, x2, . . . , xn) for every
element of ⟨x1, x2, . . . , xn⟩∈Xn. We will say that f is an n-place function or that f has
arity n.
1.1.4 Induction and recursion
Let ℕ= {0, 1, 2, 3, . . . } be the set of natural numbers. Often one can use proof by mathe-
matical induction to establish statements of the form “for all n ∈ℕ, P(n).”
Principle of mathematical induction
Let S ⊆ℕ. If
1.
0 ∈S and
2.
for all n ∈ℕ, if n ∈S, then n + 1 ∈S,
then S = ℕ.
Proof by mathematical induction
Let P(n) be a statement concerning a natural number variable n. If
1.
P(0) is true and
2.
for all n ∈ℕ, if P(n), then P(n + 1),
then P(n) is true for all natural numbers n.

1.1 Basic set theory
౪
7
Principle of strong induction
Let P(n) be a statement about a natural number variable n. If
1.
P(0) is true and
2.
the statements P(0), P(1), . . . , P(n −1) imply P(n), for all n ∈ℕ,
then P(n) is true for all natural numbers n.
Induction is often applied in mathematical proofs. One can also define a function by
induction (recursion). A recursively defined function is one that is defined in terms of
“previously evaluated values of the function.” A function h on ℕis defined recursively
if its value at 0 is first specified and then all of the remaining values are defined by using
a value that has previously been evaluated. A proof of the following theorem is given in
[3, Theorem 4.2.1].
Theorem 1.1.23 (Recursion on ℕ). Let a ∈A and let g: A →A be a function, where A is a
set. Then there exists a unique function h: ℕ→A such that:
1.
h(0) = a,
2.
h(n + 1) = g(h(n)), for all n ∈ℕ.
1.1.5 Defining sets by recursion
In this section, we shall develop and state a generalization of the above Theorem 1.1.23.
First we must talk about defining sets by recursion. A recursive definition of a set C has
the following form:
(a) Basis: Specify the “initial” elements of C.
(b) Induction: Give one or more operations for constructing “new” elements of C from
“old” elements of C.
(c) Closure: The set C is the smallest set that contains the initial elements and is also
closed under the operations (see Theorem 1.1.25).
Suppose that U is a set and we are given a function f : Un →U. We say that a set S ⊆U is
closed under f if and only if whenever x1, x2, . . . , xn ∈S we have f (x1, x2, . . . , xn) ∈S. For
any A ⊆U, let us define
f [A] = {f (x1, x2, . . . , xn) : x1, x2, . . . , xn ∈A}.
Now let ℱbe a set of functions ℓwhich have the form ℓ: Un →U, where n is the arity of ℓ.
The functions in ℱcan have different arity. For any A ⊆U let us define ℱ[A] = ⋃{ℓ[A] :
ℓ∈ℱ}. Given B ⊆U, in the next theorem, we show how to construct the smallest set C
such that B ⊆C ⊆U and C is closed under every function in ℱ.
Theorem 1.1.24. Let U be a set and let ℱbe a set of functions ℓof the form ℓ: Un →U,
where n is the arity of ℓ. Now let B ⊆U. Define, by recursion on ℕ, the following sets:

8
౪
1 Basic set theory and basic logic
(1) C0 = B,
(2) Cn+1 = Cn ∪ℱ[Cn] for all n ∈ℕ.
Let C = ⋃n∈ℕCn. Then B ⊆C ⊆U and C is closed under all the functions in ℱ.
Proof. See Exercise 5.
The set C, defined in Theorem 1.1.24, is referred to as the set generated from B by the
functions in ℱ. One feature of defining the set C by the above recursion is that it yields
an induction principle that will be frequently applied in the coming pages.
Theorem 1.1.25 (Induction principle). Let U be a set and let ℱbe a set of functions ℓwhich
have the form ℓ: Un →U, where n is the arity of ℓ. Suppose that C is the set generated from
B by the functions in ℱ. If I ⊆C satisfies
(a) B ⊆I and
(b) I is closed under all of the functions in ℱ,
then I = C.
Proof. One can prove by induction on n that Cn ⊆I using (1) and (2) of Theorem 1.1.24.
Thus, C ⊆I, and since I ⊆C, it follows that I = C.
Suppose that U is a set and that f is a function of the form f : Un →U. Let C ⊆U
and suppose that C is closed under f . Then the function fC: Cn →C is defined by
fC(x1, x2, . . . , xn) = f (x1, x2, . . . , xn) for all x1, x2, . . . , xn ∈C.
Definition 1.1.26. Suppose that U is a set and ℱis a set of functions ℓof the form
ℓ: Un →U, where n is the arity of ℓ. We shall say that C is freely generated from B by the
functions in ℱif the following hold:
1.
the set C is generated from B by the functions in ℱ,
2.
fC is one-to-one for every f ∈ℱ,
3.
the range of fC and B are disjoint, for all f ∈ℱ,
4.
the range of fC and the range of gC are disjoint for all distinct f , g ∈ℱ.
The following theorem shows that if a set C is freely generated from B, then a func-
tion h defined on the initial elements B can be extended to a function h defined on all of
the elements in C. This theorem will justify many results to be covered in the text. The
proof requires some special set-theoretic tools and can be summarized as follows: The
intersection of all the approximations to h is in fact h.
Theorem 1.1.27 (Recursion theorem). Let U be a set and let ℱbe a set of functions ℓof the
form ℓ: Un →U, where n is the arity of ℓ. Let B ⊆U and let C be freely generated from B
by the functions in ℱ. Let V be a set. Assume that:
(a) we are given a function h: B →V, and
(b) for each ℓ∈ℱ, there is an associated function Fℓ: V n →V of the same arity as ℓ.

1.1 Basic set theory
౪
9
Then there is a unique function h: C →V such that:
(i)
h(x) = h(x) for all x ∈B,
(ii) for each ℓ∈ℱ, we have
h(ℓ(x1, x2, . . . , xn)) = Fℓ(h(x1), h(x2), . . . , h(xn))
for all x1, x2, . . . , xn ∈C, where n is the arity of ℓ.
Proof. Let us call a relation R ⊆C × V suitable if the following two conditions hold:
(1) ⟨b, h(b)⟩∈R, for all b ∈B,
(2) for all ℓ∈ℱof arity n, if x1, x2, . . . , xn ∈dom(R), then for each 1 ≤i ≤n, we have
⟨xi, yi⟩∈R for some yi ∈V and
⟨ℓ(x1, x2, . . . , xn), Fℓ(y1, y2, . . . , yn)⟩∈R.
Our goal is to construct a suitable relation that is also a function.
Every suitable relation is a subset of C × V. Let 𝒮= {R : R is suitable}. Because C × V
is a suitable relation, 𝒮is nonempty. Let h = ⋂𝒮. Clearly, h ⊆C × V, so h is a relation.
We now prove that h is suitable and that it is a function.
Claim 1. The relation h is suitable.
Proof. We need to show that h satisfies items (1) and (2). Let b ∈B. Every relation in 𝒮is
suitable. So ⟨b, h(b)⟩is an element in every relation in 𝒮. Thus, ⟨b, h(b)⟩∈⋂𝒮, that is,
⟨b, h(b)⟩∈h for every b ∈B. To prove (2), let ℓ∈ℱbe of arity n and let x1, x2, . . . , xn ∈
dom(h). Therefore, for each 1 ≤i ≤n, ⟨xi, yi⟩∈h for some yi ∈V. As h = ⋂𝒮, it
follows that each ⟨xi, yi⟩belongs to every relation in 𝒮. Let R ∈𝒮. Since ⟨xi, yi⟩∈R for
all 1 ≤i ≤n and R is suitable, item (2) implies that ⟨ℓ(x1, x2, . . . , xn), Fℓ(y1, y2, . . . , yn)⟩∈
R. Thus, ⟨ℓ(x1, x2, . . . , xn), Fℓ(y1, y2, . . . , yn)⟩belongs to every relation in 𝒮and therefore,
⟨ℓ(x1, x2, . . . , xn), Fℓ(y1, y2, . . . , yn)⟩∈h. Hence, h is suitable.
(Claim 1)
We now must prove that h is a function with domain C.
Claim 2. The relation h is a function from C to V.
Proof. To prove that h is a function from C to V, we must show that for each x ∈C, there
is exactly one y ∈V such that ⟨x, y⟩∈h. Let I ⊆C be defined by
I = {x ∈C : there is exactly one y ∈V such that ⟨x, y⟩∈h}.
We shall prove that I = C by applying Theorem 1.1.25. To do this, we must first prove that
B ⊆I. Let b ∈B. We know that ⟨b, h(b)⟩∈h, because h is suitable. To prove that b ∈I,
we need to show there is no ⟨b, y⟩∈h where y
̸= h(b). Suppose, for a contradiction, that
⟨b, y⟩∈h, where y
̸= h(b). Consider the relation R = h \ {⟨b, y⟩}. So (󳵳) ⟨b, y⟩∉R. Since C
is freely generated from B by the functions in ℱ, it follows that whenever ℓ∈ℱ, we have

10
౪
1 Basic set theory and basic logic
ℓ(x1, x2, . . . , xn) ∉B for all x1, x2, . . . , xn ∈C. As h is suitable, it thus follows that R is also
suitable. Hence, R ∈𝒮. Since h = ⋂𝒮, we conclude that h ⊆R, and thus, ⟨b, y⟩∈R, which
contradicts (󳵳). Thus, h(b) is the only element in V such that ⟨b, h(b)⟩∈h. Therefore,
B ⊆I.
Now we show that I is closed under all of the functions in ℱ. Let g: Uk →U be a
function in ℱand let z1, z2, . . . , zk ∈I. We need to show that g(z1, z2, . . . , zk) ∈I. For each
1 ≤i ≤k, since zi ∈I, there is a unique wi such that ⟨zi, wi⟩∈h. Because h is suitable,
we conclude that
⟨g(z1, z2, . . . , zk), Fg(w1, w2, . . . , wk)⟩∈h.
To show that g(z1, z2, . . . , zk) ∈I, we must show there is no ⟨g(z1, z2, . . . , zk), y⟩∈h where
Fg(w1, w2, . . . , wk)
̸= y. Suppose, for a contradiction, that there exists a y ∈V such that
(󳶣) ⟨g(z1, z2, . . . , zk), y⟩∈h where (󳶃) Fg(w1, w2, . . . , wk)
̸= y. Consider the relation
R = h \ {⟨g(z1, z2, . . . , zk), y⟩}.
Clearly, (⧫) ⟨g(z1, z2, . . . , zk), y⟩∉R. We now show that R is suitable. Let b ∈B. Since
C is freely generated from B by the functions in ℱ, it follows that g(z1, z2, . . . , zk)
̸= b.
Since h is suitable, it follows that ⟨b, h(b)⟩∈R. Thus, R satisfies item (1) of the above
definition of suitability. To verify that R satisfies item (2), let ℓ∈ℱbe of arity n and let
x1, x2, . . . , xn ∈dom(R). Since R ⊆h, we have x1, x2, . . . , xn ∈dom(h). Since h is suitable,
it follows that
⟨ℓ(x1, x2, . . . , xn), Fℓ(y1, y2, . . . , yn)⟩∈h.
So if
⟨ℓ(x1, x2, . . . , xn), Fℓ(y1, y2, . . . , yn)⟩
̸= ⟨g(z1, z2, . . . , zk), y⟩,
then ⟨ℓ(x1, x2, . . . , xn), Fℓ(y1, y2, . . . , yn)⟩∈R. On the other hand, if
⟨ℓ(x1, x2, . . . , xn), Fℓ(y1, y2, . . . , yn)⟩= ⟨g(z1, z2, . . . , zk), y⟩,
then
(♣) ℓ(x1, x2, . . . , xn) = g(z1, z2, . . . , zk)
and
(󳶳) Fℓ(y1, y2, . . . , yn) = y.
Because C is freely generated from B by the functions in ℱ, (♣) implies that ℓ= g, n = k,
and x1 = z1, x2 = z2, . . . , xn = zk. Therefore, x1, x2, . . . , xn ∈I and thus, y1 = w1, y2 =
w2, . . . , yn = wk. Hence,
Fℓ(y1, y2, . . . , yn) = Fg(w1, w2, . . . , wk),
which contradicts (󳶃) and (󳶳). Thus, R is suitable. So R ∈𝒮. Since h = ⋂𝒮, we con-
clude that h ⊆R so ⟨g(z1, z2, . . . , zk), y⟩∈R (see (󳶣)), which contradicts (⧫). Therefore,

1.1 Basic set theory
౪
11
g(z1, z2, . . . , zk) ∈I. Theorem 1.1.25 now implies that I = C and, as a result, h is a function
from C to V.
(Claim 2)
Since the function h is suitable, it satisfies conditions (i) and (ii) given in the
statement of the theorem. To prove that h is unique, let g: C →V also satisfy prop-
erties (i) and (ii). Thus, g is a suitable relation, so g ∈𝒮. Since h = ⋂𝒮, we have h ⊆g.
As h and g are functions with domain C, Lemma 1.1.21 implies that h = g. Hence, h is
unique.
(Theorem)
The function h in Theorem 1.1.27, satisfying (1) and (2), is often said to be defined
by recursion. If a function is defined by recursion, then proofs of statements about this
function typically use “proof by induction.”
The proof of Theorem 1.1.27 requires that C be freely generated. To illustrate this, let
f : ℕ→ℕand g: ℕ→ℕbe defined by f (n) = n2 and g(n) = n3. Let B = {0, 1, 2}. Let C be
the set generated from B by the functions in ℱ= {f , g}. The functions in ℱare one-to-
one. However, their ranges are not disjoint and their ranges are not disjoint with B. So C
is not freely generated. Now let Ff : ℝ→ℝbe the identity function and let Fg: ℝ→ℝbe
the cube root function. Let h: {0, 1, 2} →ℝbe such that h(1) = 3. If h could be extended
to a function h: C →ℝas in Theorem 1.1.27, then we would have
h(f (1)) = Ff (h(1)) = Ff (3) = 3,
h(g(1)) = Fg(h(1)) = Fg(3) =
3√3.
Since f (1) = g(1) = 1, we conclude that h(1) = 3 and h(1) =
3√3. Thus, no such func-
tion h exists.
1.1.6 Countable sets
Let ℕ= {0, 1, 2, 3, . . . } be the set of natural numbers. A set is countable if it has the
same size as some subset of ℕ. In other words, a set is countable if there is a one-to-one
correspondence between the set and a subset of ℕ. Our next definition expresses this
concept in mathematical terms.
Definition 1.1.28. A set A is countable if and only if there exists a one-to-one function
f : A →ℕ.
The following theorem will be used to prove that the set of all finite sequences of a
countable set is also countable (see Theorem 1.1.30). A proof of this theorem is given
in [1, Theorem 4.4.7].
Theorem 1.1.29 (Fundamental theorem of arithmetic). For every natural number n > 1,
there exist distinct primes p1, p2, . . . , pk together with natural numbers a1 ≥1, a2 ≥
1, . . . , ak ≥1 such that

12
౪
1 Basic set theory and basic logic
n = pa1
1 pa2
2 ⋅⋅⋅pak
k .
Furthermore, given any prime factorization into distinct primes,
n = qb1
1 qb2
2 ⋅⋅⋅qbℓ
ℓ
we have ℓ= k, the primes qi are the same as the primes pj (except for order), and the
corresponding exponents are the same.
Theorem 1.1.30. Let A be a set and let S be the set of all finite sequences of elements of A.
If A is countable, then S is countable.
Proof. Let A be a countable set and let f : A →ℕbe one-to-one. Let S be the set of all
finite sequences of elements of A. Thus,
S = ⋃
n∈ℕ
An+1.
Let h: S →ℕbe defined as follows: Let ⟨a1, a2, . . . , am⟩∈S. Define
h(⟨a1, a2, . . . , am⟩) = 2f (a1)+1 ⋅3f (a2)+1 ⋅5f (a3)+1 ⋅⋅⋅pf (am)+1
m
,
where pm is the m-th prime. To prove that h: S →ℕis one-to-one, let ⟨a1, a2, . . . , am⟩and
⟨b1, b2, . . . , bn⟩be arbitrary elements of S and assume that
h(⟨a1, a2, . . . , am⟩) = h(⟨b1, b2, . . . , bn⟩).
Thus
2f (a1)+1 ⋅3f (a2)+1 ⋅5f (a3)+1 ⋅⋅⋅pf (am)+1
m
= 2f (b1)+1 ⋅3f (b2)+1 ⋅5f (b3)+1 ⋅⋅⋅pf (bn)+1
n
.
By Theorem 1.1.29, we conclude that m = n and
f (a1) + 1 = f (b1) + 1, f (a2) + 1 = f (b2) + 1, . . . , f (am) + 1 = f (bn) + 1.
Because f is one-to-one, we see that
a1 = b1, a2 = b2, . . . , am = bn.
Hence,
⟨a1, a2, . . . , am⟩= ⟨b1, b2, . . . , bn⟩,
and thus h: S →ℕis one-to-one. Therefore, S is countable.

1.1 Basic set theory
౪
13
Definition 1.1.31. Let A be a nonempty set. We shall say that A is denumerable if and
only if there is an enumeration
a1, a2, a3, . . . , an, . . .
(1.1)
of all of the elements in A, that is, every element in A appears in the above list indexed
by the positive natural numbers.
So a set is denumerable if we can list the elements of the set in the same way that we
list the set of nonzero natural numbers, namely, 1, 2, 3, 4, 5, . . . . However, our definition
of a denumerable set allows elements in the list (1.1) to be repeated, or not to be repeated.
We will show below that a countable set is denumerable. Using an enumeration
of a set will allow us to construct new sets that will be useful in Chapters 2 and 4 (for
example, see the proof of Theorem 2.4.2 on page 44).
Theorem 1.1.32. Let A be a nonempty countable set. Then there is a function g: ℕ→A
that is onto A.
Proof. Assume that A is a nonempty countable set. Thus, there is a function f : A →ℕ
that is one-to-one. We shall use the function f to define our desired function g: ℕ→A.
Let c ∈A be some fixed element. Define g as follows: For each n ∈ℕ,
g(n) = {a,
if n is in the range of f and f (a) = n,
c,
otherwise.
Because f : A →ℕis one-to-one, one can show that g is a function and it is onto.
Corollary 1.1.33. Let A be a nonempty countable set. Then A is denumerable.
Proof. Assume that A is a nonempty countable set. Theorem 1.1.32 implies that there is a
function g: ℕ→A that is onto. For each n ≥1 let an = g(n −1). Since g is onto, it follows
that the enumeration a1, a2, a3, . . . , an, . . . lists every element in A.
1.1.7 Cardinality
The cardinality of a set is a measure of how many elements are in the set. For example,
the set A = {1, 2, 3, . . . , 10} has 10 elements, so the cardinality of A is 10, denoted by |A| =
10. The cardinality of an infinite set X will also be denoted by |X|. In this section, we
briefly discuss Georg Cantor’s method for measuring the size of an infinite set without
the use of numbers. There are two infinite sets where one of these sets has cardinality
much larger than the other infinite set. Therefore, it is possible for one infinite set to
have “many more” elements than another infinite set.
What does it mean to say that two sets have the same cardinality, that is, the same
size? Cantor discovered a simple answer to this question.

14
౪
1 Basic set theory and basic logic
Definition 1.1.34. For sets A and B, we say that A has the same cardinality as B, denoted
by |A| =c |B|, if there is a bijection f : A →B.
The expression |A| =c |B| looks like an equation; however, the assertion |A| =c |B|
should be viewed only as an abbreviation for the statement “A has the same cardinal-
ity as B.” In other words, |A| =c |B| means that “there is a function f : A →B that is
one-to-one and onto B.” The relationship =c, given in Definition 1.1.34, is reflexive, sym-
metric, and transitive.
The following theorem is very useful for proving many results about cardinality.
The theorem states that if there are functions f : A →B and g: B →A that are both one-
to-one, then there exists a function h: A →B that is one-to-one and onto B.
Theorem 1.1.35 (Schröder–Bernstein). Let A and B be any two sets. Suppose that |A| ≤c |B|
and |B| ≤c |A|. Then |A| =c |B|.
1.1.8 The axiom of choice
Suppose that a set S contains only nonempty sets. Is it possible to uniformly select exactly
one element from each set in S? In other words, is there a function F so that for each
A ∈S, we have F(A) ∈A? The following set-theoretic principle will allow us to positively
answer this question.
Axiom of Choice. Let 𝒞be a set of nonempty sets. Then there is a function H: 𝒞→⋃𝒞
such that H(A) ∈A for all A ∈𝒞.
Cantor developed a theory of infinite cardinal numbers which, assuming the axiom
of choice, allows one to measure the size of any infinite set. Thus, if A is an infinite set,
there is a cardinal number κ such that κ = |A|. Moreover, there is an ordering on these
cardinal numbers such that for any cardinal numbers λ and κ, we have λ ≤κ or κ ≤λ.
Moreover, if λ ≤κ and κ ≤λ, then λ = κ. The cardinality of any countable infinite set
is denoted by the cardinal ℵ0.
Zorn’s lemma is an important theorem about sets that is normally used to prove the
existence of a mathematical object when it cannot be explicitly identified. The lemma
involves the concept of a chain. A chain is a collection of sets C such that for all sets x
and y in C, we have either x ⊆y or y ⊆x.
Zorn’s Lemma 1.1.36. Let ℱbe a set of sets. Suppose that for every chain C ⊆ℱ, ⋃C is
in ℱ. Then there exists an M ∈ℱthat is maximal, that is, M is not the proper subset of
any A ∈ℱ.
Surprisingly, Zorn’s lemma is equivalent to the axiom of choice. There will be times
when we may apply the axiom of choice or Zorn’s lemma. However, when working with
countable sets, Corollary 1.1.33 will allow us to avoid such applications.

1.1 Basic set theory
౪
15
Exercises 1.1.
1. Let A be a set and let ℱbe a nonempty set of sets. Prove the following:
(1) A \ ⋃ℱ= ⋂{A \ C : C ∈ℱ},
(2) A \ ⋂ℱ= ⋃{A \ C : C ∈ℱ}.
2. Consider the function h: ℕ→ℕdefined by the recursion
(a) h(0) = 0,
(b) h(n + 1) = 5h(n) + 1, for all n ∈ℕ.
Prove by induction that h(n) = 5n−1
4
for all n ∈ℕ.
3. Let A and B be countable sets. Since A is countable, there is a one-to-one func-
tion f : A →ℕ. Also, as B is countable, there is a one-to-one function g: B →ℕ.
(a) Prove that the function h: A →ℕdefined by h(a) = 2f (a)+1 is one-to-one.
(b) Prove that the function k: B →ℕdefined by k(b) = 3g(b)+1 is one-to-one.
(c) Define the function ℓ: A ∪B →ℕby
ℓ(x) = {h(x),
if x ∈A,
k(x),
if x ∈B \ A,
for each x ∈A ∪B. Prove that ℓis one-to-one. Thus, A ∪B is countable.
4. Let ℓ: ℕ× ℕ→ℕbe defined by ℓ(x, y) = 2x+1 ⋅3y+1 and let g: ℕ→ℕbe defined by
g(x) = 2x+1. Let C be the set generated from B = {1, 2} by the set ℱ= {ℓ, g}.
(a) Find C1 and then find an element in C2.
(b) Show that ℓC and gC are one-to-one (use Theorem 1.1.29).
(c) Show that the set C is freely generated by B.
(d) Let h: B →ℝbe defined by h(1) = π and h(2) = e. Let Fℓ: ℝ× ℝ→ℝand
Fg: ℝ→ℝbe defined by Fℓ(x, y) = x + y and Fg(x) = 5x. Let h: C →ℝbe the
function given by Theorem 1.1.27. Find h(36), h(4), and h(72).
*5. Let U be a set and let ℱbe a set of functions ℓof the form ℓ: Un →U, where n is
the arity of ℓ. Let B ⊆U and let C be generated from B by the functions in ℱ.
(a) Prove that C is closed under the functions in ℱ.
(b) Let B ⊆D, where D is closed under the functions in ℱ. Prove that C ⊆D.
6. Let U be a set and let ℱbe a set of functions ℓof the form ℓ: Un →U, where n is
the arity of ℓ. Let B ⊆U and let C be freely generated from B by the functions in ℱ.
Let f , g ∈ℱ, x1, x2, . . . , xn ∈C, and z1, z2, . . . , zk ∈C. Suppose that f (x1, x2, . . . , xn) =
g(z1, z2, . . . , zk). Explain why one can conclude that f = g, n = k, and x1 = z1, x2 =
z2, . . . , xn = zk.
7. In the proof of Theorem 1.1.25, show that Cn ⊆I for all n ∈ℕ.
*8. Let U be a set and let ℱbe a set of functions ℓof the form ℓ: Un →U, where n is
the arity of ℓ. Let B ⊆B′ ⊆U. Let C be generated from B by the functions in ℱand
let C′ be generated from B′ by the functions in ℱ. Prove that C ⊆C′.
*9. Let U be a set and let ℱbe a set of functions ℓof the form ℓ: Un →U, where n is the
arity of ℓ. For each ℓ∈ℱ, let Fℓ: V n →V be of the same arity as ℓ. Let B ⊆B′ ⊆U.
Let C be freely generated from B by the functions in ℱand let C′ be freely generated

16
౪
1 Basic set theory and basic logic
from B′ by the functions in ℱ. Let h: B →V and g: B′ →V be such that h(b) = g(b)
for all b ∈B. Show that h(x) = g(x) for all x ∈C.
*10. Let U be a set and let ℱbe a set of functions ℓof the form ℓ: Un →U, where n
is the arity of ℓ. For each ℓ∈ℱ, let Fℓ: V n →V be of the same arity as ℓ. Let
B ⊆U, let h: B →V, and let C be freely generated from B by the functions in ℱas
in Theorem 1.1.24, that is, C = ⋃n∈ℕCn, where:
(1) C0 = B,
(2) Cn+1 = Cn ∪ℱ[Cn] for all n ∈ℕ.
Suppose that:
–
the function h is one-to-one;
–
for each ℓ∈ℱ, Fℓis one-to-one and the functions h, Fℓhave disjoint ranges;
–
Fℓand Fℓ′ have disjoint ranges whenever ℓ, ℓ′ ∈ℱare distinct.
Let h: C →V be as in Theorem 1.1.27. Prove by induction on n that h is one-to-one
on Cn. Then conclude that h is one-to-one.
Exercise Notes: For Exercise 8, let I = C ∩C′. Using Theorem 1.1.25, prove that I = C.
For Exercise 9, C ⊆C′ by Exercise 8. Let I = {x ∈C : h(x) = g(x)}. Using Theorem 1.1.25,
prove that I = C. For Exercise 10, if c ∈Cn+1, let k be the least such that c ∈Ck. If k > 0,
then c is in the range of a function in ℱrestricted to Ck−1.
1.2 Basic logic
1.2.1 Propositions and logical connectives
A proposition is a declarative sentence that is either true or false, but not both. When
discussing the logic of propositional statements in this section, we shall use symbols to
represent these statements. Capital letters, for instance, P, Q, R, are used to symbolize
propositional statements which may be called propositional components. Using the five
logical connectives ∧, ∨, ¬, →, ↔together with the components, we can form new logical
sentences called compound sentences. For example:
1.
P ∧Q (means “P and Q” and is called a conjunction),
2.
P ∨Q (means “P or Q” and is called a disjunction),
3.
¬P (means “not P” and is called a negation),
4.
P →Q (means “if P, then Q” and is called a conditional),
5.
P ↔Q (means “P if and only if Q” and is called a biconditional).
Using the propositional components and the logical connectives, one can construct more
complicated sentences, for example,
((P ∧(¬Q)) ∨(S →(¬R))).
We will more formally investigate propositional logic in Chapter 2.

1.2 Basic logic
౪
17
1.2.2 Truth tables and truth functions
Given a collection of propositional components, say P, Q, and R, we can assign truth
values to these components. For example, we can assign the truth values T, F, T to P, Q, R,
respectively, where T means “true” while F means “false.” The truth value of a sentence
of propositional logic can be evaluated from the truth values assigned to its components.
We shall explain what this “means” by using truth tables.
The logical connectives ∧, ∨, ¬ yield the natural truth values given by Table 1.1.
Table 1.1: Truth tables for conjunction, disjunction, and negation.
(1) Conjunction
(2) Disjunction
(3) Negation
P
Q
P ∧Q
P
Q
P ∨Q
P
¬P
T
T
T
T
T
T
T
F
T
F
F
T
F
T
F
T
F
T
F
F
T
T
F
F
F
F
F
F
Table 1.1(1) has four rows (not including the header). The columns beneath P and
Q list all the possible pairs of truth values that can be assigned to the components P
and Q. For each such pair, the corresponding truth value for P ∧Q appears to the right.
For example, consider the third pair of truth values in this table, FT. Thus, if the propo-
sitional components P and Q are assigned the respective truth values F and T, we see
that the truth value of P ∧Q is F.
Table 1.1(2) shows that if P and Q are assigned the respective truth values T and F,
then the truth value of P ∨Q is T. Moreover, when P and Q are assigned the truth values
T and T, the truth value of P ∨Q is also T. In mathematics, the logical connective “or”
has the same meaning as “and/or,” that is, P ∨Q is true if and only if only P is true, only
Q is true, or both P and Q are true. Table 1.1(3) shows that the negation of a statement
reverses the truth value of the statement.
A truth function accepts truth values as input and yields a unique truth value as out-
put. Let V = {T, F}. The above three truth tables yield the corresponding truth functions
F∧: V 2 →V, F∨: V 2 →V, and F¬: V →V, defined by
F∧(x, y) = {T,
if x = T and y = T,
F,
otherwise,
(1.2)
F∨(x, y) = {T,
if x = T or y = T,
F,
otherwise,
(1.3)
F¬(x) = {T,
if x = F,
F,
otherwise.
(1.4)

18
౪
1 Basic set theory and basic logic
The standard truth tables for the conditional and biconditional connectives are
given in Table 1.2, which states that when P and Q are assigned the respective truth
values T and F, then the truth value of P →Q is F; otherwise, it is T. In particular, when
P is false, we shall say that P →Q is vacuously true. Table 1.2(5) shows that P ↔Q is true
when P and Q are assigned the same truth value; when P and Q have different truth
values, then the biconditional is false.
Table 1.2: Truth tables for the conditional and biconditional.
(4) Conditional
(5) Biconditional
P
Q
P →Q
P
Q
P ↔Q
T
T
T
T
T
T
T
F
F
T
F
F
F
T
T
F
T
F
F
F
T
F
F
T
Let V
= {T, F}. The conditional and biconditional truth tables yield the two truth
functions F→: V 2 →V and F↔: V 2 →V, defined by
F→(x, y) = {F,
if x = T and y = F,
T,
otherwise,
(1.5)
F↔(x, y) = {T,
if x = y,
F,
otherwise.
(1.6)
Using the truth tables for the sentences P ∧Q, P ∨Q, ¬P, P →Q, and P ↔Q, one
can build truth tables for more complicated compound sentences. Given a compound
sentence, the “outside” connective is the “last connective that one needs to evaluate.”
After the outside connective has been determined, one can break up the sentence into
its “parts.” For example, in the compound sentence ¬P ∧(Q ∨P) we see that ∧is the
outside connective with two parts ¬P and Q ∨P.
Problem 1.2.1. Construct a truth table for the sentence ¬P →(Q ∧P).
Solution. The two components P and Q will each need a column in our truth table. Since
there are two components, there are four truth assignments for P and Q. We will enter
these combinations in the two leftmost columns in the same order as in Table 1.1(1). The
outside connective of the propositional sentence ¬P →(Q ∧P) is →. We can break this
sentence into the two parts ¬P and Q ∧P. So these parts will also need a column in our
truth table. As we can break the sentences ¬P and Q ∧P only into components (namely,
P and Q), we obtain the following truth table:

1.2 Basic logic
౪
19
P
Q
¬P
Q ∧P
¬P →(Q ∧P)
T
T
F
T
T
T
F
F
F
T
F
T
T
F
F
F
F
T
F
F
Step #
1
1
2
3
4
We will now describe in steps how to obtain the truth values in the above table.
Step 1: Specify all of the truth values that can be assigned to the components.
Step 2: In each row, use the truth value assigned to the component P to obtain the cor-
responding truth value for ¬P, using Table 1.1(3).
Step 3: In each row, use the truth values assigned to Q and P to determine the corre-
sponding truth value in the column under Q ∧P via Table 1.1(1).
Step 4: In each row, use the truth values assigned to ¬P and Q∧P to evaluate the match-
ing truth value for the final column under the sentence ¬P →(Q∧P), employing
Table 1.2(4).
1.2.3 Predicates and quantifiers
Variables are used throughout mathematics and logic to represent unspecified values.
They are used when one is interested in “properties” that may be true or false depending
on the values represented by the variables. A predicate is just a statement that asserts
that certain variables satisfy a property. For example, “x is an irrational number” is a
predicate. We can symbolize this predicate as Ix, where I is called a predicate symbol.
Of course, the truth or falsity of the expression Ix can be evaluated only when a value
for x is given. For example, if x is given the value √2, then Ix would be true, whereas if
x is given the value 2, then Ix would be false.
When our attention is focused on just the elements in a particular set, we will re-
fer to that set as our universe of discourse. For example, if we were just talking about
real numbers, then our universe of discourse would be the set of real numbers ℝ. Ev-
ery statement made in a specific universe of discourse applies only to the elements in
that universe.
Given a predicate Px and variable x, we may want to assert that every element x
in the universe of discourse satisfies Px. We may also want to express the fact that at
least one element x in the universe makes Px true. We can then form logical sentences
using the quantifiers ∀and ∃. The quantifier ∀means “for all” and is called the universal
quantifier. The quantifier ∃means “there exists” and it is referred to as the existential
quantifier. For example, we can form the sentences:
1.
∀xPx (which means “for all x, Px”),
2.
∃xPx (which means “there exists an x such that Px”).

20
౪
1 Basic set theory and basic logic
A statement of the form ∀xPx is called a universal statement. Any statement having the
form ∃xPx is called an existential statement. Quantifiers offer a valuable tool for clear
thinking in mathematics, where many ideas begin with the expression “for every” or
“there exists.” Of course, the truth or falsity of a quantified statement depends on the
particular universe of discourse.
Let x be a variable that appears in a predicate Px. In the statements ∀xPx and ∃xPx,
we say that x is a bound variable because x is bound by a quantifier. In other words,
when every occurrence of a variable in a statement is attached to a quantifier, then
that variable is called a bound variable. If a variable appears in a statement and it is
not bound by a quantifier, then the variable is said to be a free variable. Whenever a
variable is free, substitution may take place, that is, one can replace a free variable with
any particular value from the universe of discourse—perhaps 1 or 2. For example, the
assertion ∀x(Px →x = y) has the one free variable y. Therefore, we can perform a
substitution to obtain ∀x(Px →x = 1). In a given context, if all of the free variables
in a statement are replaced with values from the universe of discourse, then one can
determine the truth or falsity of the resulting statement.
Problem 1.2.2. Consider the predicates (properties) Px, Ox, and Dxy, where the vari-
ables x and y are intended to represent natural numbers:
1.
Px represents the statement “x is a prime number,”
2.
Ox represents the statement “x is an odd natural number,”
3.
Dxy represents the statement “x evenly divides y.”
Using the above predicates, determine whether or not the following logical formulas are
true or false, where the universe of discourse is the set of natural numbers:
1.
∀x(Px →Ox),
2.
∀y(y ≥2 →∃x(Px ∧Dxy)).
Solution. The expression ∀x(Px →Ox) states that “all prime numbers are odd,” which
is clearly false. On the other hand, item 2 states that “every natural number greater than
or equal to 2 is divisible by a prime number” and this is true.
We will formally investigate predicates and quantifiers in Chapter 3. The under-
standing of the logic of quantifiers is (one can argue) a requisite tool for the study
of mathematics and logic. To help students learn the language of quantifier logic, Jon
Barwise and John Etchemendy created an innovative software program called Tarski’s
World. This program presents a visual display of geometric shapes sitting on a grid, re-
ferred to as a world (or universe). The shapes have a variety of colors and positions on
the grid. The user can create logic formulas and then determine whether or not these
formulas are true or false in the world. Tarski’s World is named after Alfred Tarski,
an early pioneer in mathematical logic. We end this section with our own version of
Tarski’s World. In the following problem, we are given a Tarskian World and some

1.2 Basic logic
౪
21
English statements. We will be given some predicates and be asked to translate these
statements into logical form.
Problem 1.2.3. Consider the following Tarskian World, where some of the individuals
are labeled with a name. The universe consists of all the objects in this Tarskian world.
Define the following predicates (properties):
–
Tx means “x is a triangle.” Cx means “x is a circle.” Sx means “x is a square.”
–
Ix means “x is white.” Gx means “x is gray.” Bx means “x is black.”
–
Nxy means “x is on the northern side of y.”
–
Wxy means “x is on the western side of y.”
–
Kxy means “x has the same color as y.”
The constants a, c, d, g, j are the names of five individuals in the above world. Using the
given predicates, write each of the following statements in logical form, looking for pos-
sible hidden quantifiers and logical connectives.
1.
There is a black square.
2.
Every circle is white.
3.
There are no black circles.
4.
a is north of c.
5.
a is not north of j.
6.
Every circle is north of d.
7.
Some circle has the same color as d.
8.
d is west of every circle.
Solution. Statements 2, 6, and 7 are the only ones that are false in the given Tarskian
world. We express the above sentences in the following logical forms:
1.
The sentence means that “for some x, x is black and x is a square.” In logical form,
we have ∃x(Bx ∧Sx).
2.
The sentence means that “for all x, if x is a circle, then x is white.” In logical form,
∀x(Cx →Ix).

22
౪
1 Basic set theory and basic logic
3.
The sentence can be stated in two equivalent ways. First, the sentence means that
“it is not the case that some circle is black,” that is, ¬(some circle is black). In logical
form, we obtain ¬∃x(Cx ∧Bx). Second, the sentence also means that “every circle is
not black” and we get ∀x(Cx →¬Bx).
4.
In logical form, the sentence becomes Nac.
5.
The logical form of this sentence is ¬Naj.
6.
Rephrasing, we obtain “for all x, if x is a circle, then x is north of d.” In logical form,
we have ∀x(Cx →Nxd).
7.
The sentence asserts that “for some x, x is a circle and x has the same color as d.” In
logical form, we have ∃x(Cx ∧Kxd).
8.
Stated more clearly, we obtain “for all x, if x is a circle, then d is west of x.” In logical
form, we have ∀x(Cx →Wdx).
There will be cases when we will have to prove that there is exactly one value that
satisfies a property. There is another quantifier that is sometimes used. It is called the
uniqueness quantifier. This quantifier is written as ∃!xPx, which means that “there exists
a unique x satisfying Px,” whereas ∃xPx simply asserts that “at least one x satisfies Px.”
The quantifier ∃! can be expressed in terms of the other quantifiers ∃and ∀. In
particular, the statement ∃!xPx is equivalent to
∃xPx ∧∀x∀y((Px ∧Py) →x = y),
because the above statement means that “there is an x such that Px holds, and any indi-
viduals x and y that satisfy Px and Py must be the same individual.”
Quantifier negation laws
We now introduce logic laws that involve the negation of quantifiers. Let Px be any pred-
icate. The statement ∀xPx means that “for every x, Px is true.” Thus, the assertion ¬∀xPx
means that “it is not the case that every x makes Px true.” Therefore, ¬∀xPx means there
is an x that does not make Px true, which can be expressed as ∃x¬Px. This reasoning is
reversible, as we will now show. The assertion ∃x¬Px means that “there is an x that
makes Px false.” Hence, Px is not true for every x, that is, ¬∀xPx. Therefore, ¬∀xPx and
∃x¬Px are logically equivalent. Similar reasoning shows that ¬∃xPx and ∀x¬Px are also
equivalent. We now formally present these important logic laws that connect quanti-
fiers with negation.
Quantifier Negation Laws 1.2.4. The following logical equivalences hold for any pred-
icate Px:
1.
¬∀xPx ⇔∃x¬Px,
2.
¬∃xPx ⇔∀x¬Px,
3.
¬∀x¬Px ⇔∃xPx,
4.
¬∃x¬Px ⇔∀xPx.

1.2 Basic logic
౪
23
We will be using the symbols ⇔and ⇒to abbreviate two English expressions. The
symbol ⇔denotes the phrase “is equivalent to” and ⇒denotes the word “implies.”
Quantifier interchange laws
Adjacent quantifiers have four forms: ∃x∃y, ∀x∀y, ∀x∃y, and ∃x∀y. How should one in-
terpret statements that contain adjacent quantifiers? If a statement contains adjacent
quantifiers, one should address the quantifiers, one at a time, in the order in which they
are presented. This is illustrated in our solutions of the following three problems.
Problem 1.2.5. Let the universe of discourse be a group of people and let Lxy mean “x
likes y.” What do the following formulas mean in English?
1.
∃x∃yLxy,
2.
∃y∃xLxy.
Solution. Note that “x likes y” also means that “y is liked by x.” We will now translate
each of these formulas from “left to right” as follows:
1.
∃x∃yLxy means “there is a person x such that ∃yLxy,” that is, “there is a person x
who likes some person y.” Therefore, ∃x∃yLxy means that “someone likes someone.”
2.
∃y∃xLxy states that “there is a person y such that ∃xLxy,” that is, “there is a person
y who is liked by some person x.” Thus, ∃y∃xLxy means that “someone is liked by
someone.”
Hence, the statements ∃x∃yLxy and ∃y∃xLxy mean the same thing.
Problem 1.2.6. Let the universe of discourse be a group of people and let Lxy mean “x
likes y.” What do the following formulas mean in English?
1.
∀x∀yLxy,
2.
∀y∀xLxy.
Solution. We will work again from “left to right” as follows:
1.
∀x∀yLxy means “for every person x, we have ∀yLxy,” that is, “for every person x, x
likes every person y”; hence, ∀x∀yLxy means that “everyone likes everyone”;
2.
∀y∀xLxy means that “for each person y, we have ∀xLxy,” that is, “for each person y,
y is liked by every person x”; thus, ∀y∀xLxy means “everyone is liked by everyone.”
So the statements ∀x∀yLxy and ∀y∀xLxy mean the same thing.
Adjacent quantifiers of a different type are referred to as mixed quantifiers.
Problem 1.2.7. Let the universe of discourse be a group of people and let Lxy mean “x
likes y.” What do the following mixed quantifier formulas mean in English?
1.
∀x∃yLxy,
2.
∃y∀xLxy.

24
౪
1 Basic set theory and basic logic
Solution. We will translate the formulas as follows:
1.
∀x∃yLxy asserts that “for every person x, we have ∃yLxy,” that is, “for every per-
son x, there is a person y such that x likes y.” Thus, ∀x∃yLxy means that “everyone
likes someone.”
2.
∃y∀xLxy states that “there is a person y such that ∀xLxy,” that is, “there is a person
y who is liked by every person x.” In other words, ∃y∀xLxy means “someone is liked
by everyone.”
We conclude that the mixed quantifier statements ∀x∃yLxy and ∃y∀xLxy are not logi-
cally equivalent, that is, they do not mean the same thing.
To clarify the conclusion that we obtained in our solution of Problem 1.2.7, consider
the universe of discourse U = {a, b, c, d}, which consists of just four individuals with
names as given. Figure 1.1 presents a world in which ∀x∃yLxy is true, where we por-
tray the property Lxy using the “arrow notation” x
likes
󳨀󳨀󳨀󳨀→y. In this world, “everyone
likes someone.”
Figure 1.1: A world where ∀x∃yLxy is true, because everyone likes someone.
Let us focus our attention on Figure 1.1. Clearly, the statement ∀x∃yLxy is true in the
world depicted in this figure. Moreover, note that ∃y∀xLxy is actually false in this world.
This is the case because there is no individual whom everyone likes. Thus, ∀x∃yLxy is
true and ∃y∀xLxy is false in the world of Figure 1.1. We can now conclude that ∀x∃yLxy
and ∃y∀xLxy do not mean the same thing.
Our solution to Problem 1.2.5 shows that assertions ∃x∃yLxy and ∃y∃xLxy both
mean “someone likes someone.” This supports the equivalence:
∃x∃yLxy ⇔∃y∃xLxy.
Similarly, Problem 1.2.6 confirms the equivalence:
∀x∀yLxy ⇔∀y∀xLxy.
Therefore, interchanging adjacent quantifiers of the same kind does not change the
meaning. Problem 1.2.7, however, demonstrates that the two statements ∀y∃xLxy and
∃x∀yLxy are not equivalent. We conclude this discussion with a summary of the above
observations:

1.2 Basic logic
౪
25
–
Adjacent quantifiers of the same type are interchangeable.
–
Adjacent quantifiers of a different type may not be interchangeable.
Quantifier Interchange Laws 1.2.8. For every predicate Pxy, the following three state-
ments are valid:
1.
∃x∃yPxy ⇔∃y∃xPxy,
2.
∀x∀yPxy ⇔∀y∀xPxy,
3.
∃x∀yPxy ⇒∀y∃xPxy.
It should be noted that the implication in item 3 cannot, in general, be reversed.
Quantifier distribution laws
A quantifier can sometimes “distribute” over a conjunction or a disjunction. The quanti-
fier distribution laws, given below, express relationships that hold between a quantifier
and the two logical connectives ∨and ∧. Namely, the existential quantifier distributes
over disjunction (see 1.2.9(1)), and the universal quantifier distributes over conjunction
(see 1.2.9(2)). The following four quantifier distribution laws can be useful when prov-
ing certain set identities.
Quantifier Distribution Laws 1.2.9. For any predicates Px and Qx, we have the follow-
ing distribution laws:
1.
∃xPx ∨∃xQx ⇔∃x(Px ∨Qx),
2.
∀xPx ∧∀xQx ⇔∀x(Px ∧Qx).
If R is a predicate that does not involve the variable x, then we have:
3.
R ∧∃xQx ⇔∃x(R ∧Qx),
4.
R ∨∀xQx ⇔∀x(R ∨Qx).
Exercises 1.2.
1. Let C(x) represent the predicate “x is in the class” and let Mx represent “x is a
mathematics major.” Let the universe of discourse be the set of all students. Analyze
the logical form of the following sentences.
(a) Everyone in the class is a mathematics major.
(b) Someone in the class is a mathematics major.
(c) No one in the class is a mathematics major.
2. Determine whether the following statements are true or false in the universe ℝ:
(a) ∀x(x2 + 1 > 0),
(b) ∀x(x2 + x ≥0),
(c) ∀x(x > 1
2 →1
x < 3),
(d) ∃x( 1
x−1 = 3),
(e) ∃x( 1
x−1 = 0).
3. Given the properties and the Tarskian world in Problem 1.2.3 on page 21, determine
the truth or falsity of the following statements:

26
౪
1 Basic set theory and basic logic
(a) ∀x(Ix →(Tx ∨Sx)),
(b) ∀x(Bx →(Tx ∨Sx)),
(c) ∃y(Cy ∧Nyd),
(d) ∃y(Cy ∧Ndy),
(e) ∃y(Cy ∧(Nyd ∧Ndy)).
4. Using the Tarskian predicates given in Problem 1.2.3, translate the following English
sentences into logical sentences where b and d are names of individuals in some
Tarskian world:
(a) Something is white.
(b) Some circle is white.
(c) All squares are black.
(d) No squares are black.
(e) All triangles are west of d.
(f) A triangle is west of d.
(g) Some triangle is north of d.
(h) Some triangle is not gray.
(i)
Every triangle is north of b.
(j)
No square has the same color as b.

