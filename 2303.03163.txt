Basic ZX-calculus for students and professionals
Bob Coecke
Quantinuum
17 Beaumont Street
OX1 2NA Oxford, UK
bob.coecke@quantinuum.com
March 7, 2023
Abstract
These are the lecture notes of guest lectures for Artur Ekert‚Äôs course Introduc-
tion to Quantum Information at the Mathematical Institute of Oxford University,
Hilary Term 2023. Some basic familiarity with Dirac notation is assumed.
For the readers of Quantum in Pictures who have some basic quantum back-
ground, these notes also constitute the shortest path to an explanation of how what
they learn in QIP relates to the traditional quantum formalism.
1
Introduction
ZX-calculus [7, 8, 9] has already been around as long as 2007, but it only has become
widely used in the past couple of years, and especially with the emergence of quantum
industry, given the new scientiÔ¨Åc and technological challenges this poses [12].
Areas
where it has become prominent include compilation [17, 27], circuit optimisation [20, 28],
error-correction [18, 22], quantum natural language processing [6], QML [35, 34], and
also many issues surrounding photonic quantum computing [19, 29].
Another reason for this more recent rise to prominence is the availability of the book
Picturing Quantum Processes [14], which presents ZX-calculus without any reference to
category theory, which before was an obstacle to many. Even more so, since very recently
there also is the book Quantum in Pictures [11] which has no mathematical prerequisites
whatsoever. Hence, this book also establishes ZX-calculus as an educational tool that
can importantly contribute to making quantum more inclusive, while at the same time
providing an entirely new perspective on it.
2
Process theories as wires and boxes
ZX-calculus is an instance of what in [14] we call a process theory, that is, a theory in
which processes are Ô¨Årst class citizens. Historically, going 2500 years back there was a
1
arXiv:2303.03163v1  [quant-ph]  6 Mar 2023

debate between pre-Socratics Heraclitus and Parmenides, where the former advocated
that all there is are processes, with a world in constant Ô¨Çux, while Parmenides advocated
that at any time the world is a static instance. Plato, Aristotle, Kepler, Newton, etc. all
followed the Parmenides line of thinking, having a kinematic description of the world
before dynamic evolution is discussed. Whitehead was the 1st to bring Heraclitus‚Äô process
ideas back. With the birth of category theory, the appropriate mathematics to do so is
now also around, and can equivalently be described as pictures [26].
The language of process theories consists of wires and boxes:
where these boxes will have some input and output wires.
Here the wires represent
quantum systems, or classical systems ‚Äî cf. a place were quantum particles and classical
data live/travel. The boxes transform those particles and the data. So for example, the
boxes could be a unitary gate, or a quantum measurement, or encoding classical data as
a quantum state etc. We take the convention that time Ô¨Çows upwards, that is, inputs
are at the bottom and outputs are at the top.
There are special kinds of boxes, called states and eÔ¨Äects (or tests), and these respec-
tively correspond to boxes without inputs and boxes without outputs:
We depicted them as triangles, since then they resemble Dirac notation as follows:
2

We can indeed think of these process theories as a 2D extension of Dirac notation, where
putting two wires and/or boxes side-by-side corresponds to the tensor product:
We drew tensor symbols here, but in pictures, these tensor symbols are just empty space.
Note also that in process theories numbers correspond to boxes without any input or
output, denoted as a diamond, again because of Dirac notation.
Since there are no
external wires constraining them, they can freely move about:
We also saw how we can wire boxes together in order to form diagrams. Here are examples
of a proper process, a state, and a number as diagrams:
3

3
ZX-notation for linear maps
Above the boxes are just abstract boxes, or, black boxes if you wish. We will now Ô¨Åll
them in with certain linear maps, which we call ZX-notation.
Plain spiders
ZX-notation has mainly two symbols, called Z-spiders (green) and X-spiders (red):
They represent the following linear maps respectively:
and:
4

So they only diÔ¨Äer in the basis in which they are expressed, respectively:
Z-basis = {|0‚ü©, |1‚ü©}
and:
X-basis =

|+‚ü©= 1
‚àö
2(|0‚ü©+ |1‚ü©) , |‚àí‚ü©= 1
‚àö
2(|0‚ü©‚àí|1‚ü©)

Here are some important examples of such spiders:
{|0‚ü©, |1‚ü©}-copy/delete =
{|+‚ü©, |‚àí‚ü©}-copy/delete =
identity =
Bell-state or cup =
Bell-eÔ¨Äect or cap =
GHZ-state =
Note Ô¨Årst that the states here are not normalised, which has calculational advantages.
5

Exercise.
Show that the cup-spiders and cap-spiders are indeed the same for both
colours. Convince yourself that except for these, the plain wire, and the spider with no
legs, no other spiders of diÔ¨Äerent colours coincide.
Exercise. Show that the spider with no legs is the number 2, and that it is equal to a
circle made up of a cup and a cap.
Spiders with phases
We will now also allow these spiders to carry phases, that is, a number in [0, 2œÄ], which
modify the linear maps as follows:
and:
We typically don‚Äôt write the 0-phase:
6

Some examples here are:
phase-gate =
NOT-gate =
A ZX-diagram is a ‚Äòweb‚Äô made up of Z-spiders and X-spiders:
When we combine spiders of two colours the most important example is:
CNOT-gate =
Exercise. Show that the two ways of deÔ¨Åning the CNOT-gate are indeed the same,
hence justifying the horizontal wire.
Also, up to normalisation, we can write all basis states as spiders:
7

Note here that while the green spiders are built in terms of the Z-basis, its basis vectors
are expressed in terms of the X-spiders, and vice versa.
Exercise. Show that this is indeed the case.
4
Universality of ZX-notation
Theorem. Any linear map between qubits can be written in terms of spiders.
In other words, ZX-notation is universal [5, 9, 14]. We can prove this as follows. It is
well-known that any unitary map between qubits can be written in terms of CNOT-gates,
Z-phase gates and X-phase gates, and each of these can be written in terms of ZX-spiders
as we have seen above. This means that we can take a state of n + m qubits expressible
in terms of spiders, e.g. |0 . . . 0‚ü©, and produce any other n + m qubit state by means of
an appropriate unitary:
Then we can use cups to turn that arbitrary n + m qubit state into a n qubit to m qubit
linear map:
8

By the isomorphism between n + m qubit states and n qubit to m qubit linear maps,
we can obtain any n qubit to m qubit linear map by using caps.
A more detailed
diagrammatic account on this isomorphism can be found in [13, ¬ß3.1] and [14, ¬ß4.1.2].
5
Rules of ZX-calculus
Spider-fusion
What makes ZX-calculus truly useful are the simple rules that allow us to transform
ZX-diagrams. For spiders of the same colour without phases we have the following rule:
which tells us that spiders of the same colour fuse together. This also means that any
connected diagram of spiders of the same colour only depends on its number of inputs
and outputs, since each such web is itself a spider. If we have spiders with phases than
these phases add up when fusing:
9

Exercise. Prove the fusion rule for spiders with phases.
Remark. From spider fusion it follows that inside a ZX-diagram one can always ignore
what is an input and what is an output of a spider, as we can freely turn one into the
other by (un-)fusing, using either a cup or cap as follows:
Hopf-rule (or leg-chopping) and bialgebra-rule (or square-popping)
When spiders of diÔ¨Äerent colours share two legs, then these vanish:
10

which, thanks to spider-fusion, can be simpliÔ¨Åed as follows:
For historical reasons we call this the Hopf-rule. In [11] we call it leg-chopping.
Remark. This equation is only true up to a number, but for the sake of the argument we
won‚Äôt go into this issue here. In fact, as long as you are not computing a probability, then
you can typically always Ô¨Ågure out at the end of the calculation what the normalising
number should be [14, ¬ß3.4.3].
Exercise. Prove the Hopf-rule.
There is a rule which is stronger than the Hopf-rule and consists of three equations:
For historical reasons we call the Ô¨Årst of these the bialgebra-rule. The two two copy-rules
say that ‚Äúgreen copies red‚Äù, and that ‚Äúred copies green‚Äù. In practice, the way the 1st
one of these is more often used is in the following form, which gets rid of squares, while
leg-chopping only gets rid of 2-cycles:
11

Therefore in [11] it is called square-popping. One can derive the Hopf-rule from the
bialgebra-rule and the two copy-rules:
Using some group theory, which we won‚Äôt do here and you can Ô¨Ånd in [14, ¬ß9.3.4], one
can also show that the other basis states are also copied by the opposite colour:
The rules listed above will get you a very long way already, including some cutting-edge
new quantum computing techniques, as we will see further below.
But we will Ô¨Årst
present a larger set of rules about which we can prove something very important.
Colour-change
It is useful to have a special notation for the Hadamard-gate which in terms of Euler
angles can be written as follows in ZX-notation:
12

One extra rule then is called colour-change:
Equivalently, an H-box can be copied through a spider provided its colour changes:
Exercise. Prove the colour-change rule.
Phase-colour swap
A Ô¨Ånal rule takes the shape:
and we call it phase-colour swap [16, 33], but we won‚Äôt specify here the relation between
the angles as we won‚Äôt use it. In fact, it is not very often used in practical applications.
13

6
Completeness of ZX-calculus
Theorem. Any equation that holds for linear maps between qubits and compositions
thereof can be derived in ZX-calculus.
In other words, ZX-calculus is complete for linear maps. The proof here is hard, and it
took a string of papers to get to this point [1, 2, 23, 25, 24, 33].
7
Doing stuÔ¨Äwith ZX-calculus part I
We will now see ZX-calculus in action. The point of the protocols described below is not
to give a detailed discussion of them, but to illustrate how ZX-calculus helps to derive
or verify them. We provide links to the original papers so you can compare descriptions.
7.1
StuÔ¨Äwith quantum circuits
We can now use ZX-calculus to simplify this quantum circuit:
Or this quantum circuit:
Or we can use it to show that a CNOT-gate indeed does what a CNOT-gate should do:
14

and:
These were very simple examples, and now we will show a generally applicable technique
that is used in quantum circuit optimisation, e.g. within the tket-compiler [17]. The
following circuit fragment has a ‚Äòhidden‚Äô square and we can simplify it:
We now only have green spiders on the vertical wires, which allows to, for example,
simplify the following circuit:
Similar tricks moreover scale up, cf.:
and:
15

and so on.
7.2
Quantum teleportation
We can represent the Bell-basis as follows:
Exercise. Verify that this is true.
Now, suppose Alice and Bob share a Bell-state, Alice has a qubit in state |œà‚ü©, and Bob
needs that state. How can that state be passed on without eÔ¨Äectively sending the qubit:
16

An obvious solution now presents itself: Alice applies a Bell-eÔ¨Äect:
We now indeed can slide the state along the wire:
so that it ends up with Bob:
But we can only achieve a Bell-eÔ¨Äect as part of a measurement against the Bell basis,
which would yield one of the four Bell-eÔ¨Äects:
17

Fortunately, we can undo the corresponding unitaries at Bob‚Äôs end:
which requires communicating two bits from Alice to Bob:
The original paper on quantum teleportation is [4].
7.3
Measurement-based quantum computing
We can also pass a state as follows, which now only involves two qubits:
18

If instead of an X-measurement, we use a measurement corresponding to a basis with a
phase, then that phase is applied to the state as a phase gate:
Again accounting for two possible measurement outcomes, we can do:
and the gate is now applied for every measurement outcome. This manner of applying a
phase gate is called measurement-based quantum computing. Using the following gate:
CZ-gate =
19

we can make the following state:
Now, using measurement-based quantum computing we obtain:
that is, we have applied an arbitrary unitary in terms of its Euler angles. The two MBQC
protocols presented here were Ô¨Årst introduced in [30] and [31] respectively.
8
Classical versus quantum in diagrams
In order to distinguish between classical and quantum diagrams, we draw classical dia-
grams as single diagrams, and quantum diagrams as doubled diagrams:
20

If there are phases, then the double needs a minus:
To make drawing easy we just double wires and spider-nodes:
A measurement goes from quantum to classical and we can also encode classical data as
a quantum state as follows:
21

As indicated, a measurement takes in a density matrix and returns a classical probability
distribution on the possible outcomes, and encoding takes in a classical probability distri-
butions and returns a density matrix with that probability distribution on the diagonal.
Exercise. Show that this indeed the case. To do so, one should think of the density
matrix as a two qubit state via the isomorphism between qubit to qubit linear maps and
two qubit states.
Non-demolition measurements are depicted as follows:
where the decomposition on the right clearly shows how collapse is implicit here.
9
Doing stuÔ¨Äwith ZX-calculus part II
We will now see some more ZX-calculus in action.
22

9.1
Composing quantum measurements
Measurement after encoding in the same colour by spider-fusion results in doing nothing:
while by the Hopf-rule for diÔ¨Äerent colours we get:
that is, nothing gets through. In fact, the classical states:
stand for the uniform probability distribution, for classical data obtained in a Z-measurement
and an X-measurement respectively. In our ZX-representation it is indeed the case that
classical data is encoded in the basis that it is measured in [14, ¬ß9.2.4], recalling that:
23

When we measure a phase:
it vanishes, and if we measure Z, then X, and then Z again:
so the two outcomes of the Z-measurements are unrelated. As shown in [15], this simple
results is directly underpinning the security of quantum key distribution in the BB84
form [3], and by using cups we obtain the Ekert 91 form [21].
24

9.2
Classical communication
We now revisit quantum teleportation again in order to make the communication between
Alice and Bob part of the diagram. Flipping what we saw earlier upside down, we can
represent the Bell-measurement as a CNOT, a Z-measurement and an X-measurement:
so we obtain:
and now using spiders as measurements and encoding we get:
25

where the colour change is due to the fact that green/red measures in the red/green
basis. We now know what the dodo on the cover of [14] was all the time thinking of:
If you can‚Äôt get enough of ZX-calculus, then this ‚Äòdodo-book‚Äô is also a place to continue
reading. In the case that its 900 pages scare you ‚Äì do note that we teach it in only 20
lectures at Oxford University ‚Äì you may want to start with Quantum in Pictures [11]:
Both [14] and [11] contain a purely diagrammatic proof of quantum non-locality, and lot‚Äôs
of other stuÔ¨Änot presented here. In fact, QiP tells the pictorial ZX-story without any
reference to Hilbert space nor any other mathematics or physics prerequisites. The very
fact that this is even possible is an important statement in its own right, both from a
26

scientiÔ¨Åc and educational perspective. A somewhat similar to this one but older tutorial
is [10]. An overview of some more recent applications of ZX-calculus and also some more
philosophy can be found in [12]. Professionals may also want to go for the more advanced
[32]. All the ZX-publications can be found at:
https://zxcalculus.com/publications.html
as well as a link for the ZX-calculus Discord page.
10
Acknowledgements
We thank Marcello Benedetti and Lia Yeh for carefully proofreading these notes, and
Matty Hoban for additional comments.
References
[1] M. Backens. The ZX-calculus is complete for stabilizer quantum mechanics. New
Journal of Physics, 16:093021, 2014. arXiv:1307.7025.
[2] M. Backens. The ZX-calculus is complete for the single-qubit CliÔ¨Äord+T group. In
B. Coecke, I. Hasuo, and P. Panangaden, editors, Proceedings of the 11th workshop
on Quantum Physics and Logic, volume 172 of Electronic Proceedings in Theoretical
Computer Science, pages 293‚Äì303. Open Publishing Association, 2014.
[3] C. H. Bennett and G. Brassard. Quantum cryptography: Public key distribution
and coin tossing. In Proceedings of IEEE International Conference on Computers,
Systems and Signal Processing, pages 175‚Äì179. IEEE, 1984.
[4] C. H. Bennett, G. Brassard, C. Crepeau, R. Jozsa, A. Peres, and W. K. Wootters.
Teleporting an unknown quantum state via dual classical and Einstein-Podolsky-
Rosen channels. Physical Review Letters, 70(13):1895‚Äì1899, 1993.
[5] B. Coecke.
Quantum picturalism.
Contemporary Physics, 51:59‚Äì83, 2009.
arXiv:0908.1787.
[6] B. Coecke, G. de Felice, K. Meichanetzidis, and A. Toumi. Foundations for near-term
quantum natural language processing, 2020. arXiv preprint arXiv:2012.03755.
[7] B. Coecke and R. Duncan. A graphical calculus for quantum observables. zxcalcu-
lus.com/publications.html, 2007.
[8] B. Coecke and R. Duncan. Interacting quantum observables. In Proceedings of the
37th International Colloquium on Automata, Languages and Programming (ICALP),
Lecture Notes in Computer Science, 2008.
[9] B. Coecke and R. Duncan. Interacting quantum observables: categorical algebra and
diagrammatics. New Journal of Physics, 13:043016, 2011. arXiv:quant-ph/09064725.
27

[10] B. Coecke and R. Duncan. Tutorial: Graphical calculus for quantum circuits. In
International Workshop on Reversible Computation, pages 1‚Äì13. Springer, 2012.
[11] B. Coecke and S. Gogioso. Quantum in Pictures. Quantinuum, 2022.
[12] B. Coecke, D. Horsman, A. Kissinger, and Q. Wang. Kindergarden quantum me-
chanics graduates (... or how I learned to stop gluing lego together and love the
ZX-calculus). arXiv preprint arXiv:2102.10984, 2021.
[13] B. Coecke and A. Kissinger.
Categorical quantum mechanics I: causal quantum
processes. In E. Landry, editor, Categories for the Working Philosopher. Oxford
University Press, 2016. arXiv:1510.05468.
[14] B. Coecke and A. Kissinger. Picturing Quantum Processes. A First Course in Quan-
tum Theory and Diagrammatic Reasoning. Cambridge University Press, 2017.
[15] B. Coecke and S. Perdrix. Environment and classical channels in categorical quantum
mechanics.
In Proceedings of the 19th EACSL Annual Conference on Computer
Science Logic (CSL), volume 6247 of Lecture Notes in Computer Science, pages
230‚Äì244, 2010. Extended version: arXiv:1004.1598.
[16] B. Coecke and Q. Wang. ZX-rules for 2-qubit CliÔ¨Äord+T quantum circuits. In
Jarkko Kari and Irek Ulidowski, editors, Reversible Computation - 10th International
Conference, RC 2018, Leicester, UK, September 12-14, 2018, Proceedings, volume
11106 of Lecture Notes in Computer Science, pages 144‚Äì161. Springer, 2018.
[17] A. Cowtan, S. Dilkes, R. Duncan, W. Simmons, and S. Sivarajah. Phase gadget
synthesis for shallow circuits. arXiv preprint arXiv:1906.01734, 2019.
[18] N. de Beaudrap and D. Horsman. The ZX calculus is a language for surface code
lattice surgery. arXiv preprint arXiv:1704.08670, 2017.
[19] G. de Felice and B. Coecke.
Quantum Linear Optics via String Diagrams.
arXiv:2204.12985.
[20] R. Duncan, A. Kissinger, S. Perdrix, and J. Van De Wetering.
Graph-theoretic
simpliÔ¨Åcation of quantum circuits with the ZX-calculus. Quantum, 4:279, 2020.
[21] A. K. Ekert.
Quantum cryptography based on Bell‚Äôs theorem.
Physical Review
Letters, 67(6):661‚Äì663, 1991.
[22] C. Gidney and A. G. Fowler. EÔ¨Écient magic state factories with a catalyzed |CCZ‚ü©
to 2|T‚ü©transformation. Quantum, 3:135, April 2019.
[23] A. Hadzihasanovic.
A diagrammatic axiomatisation for qubit entanglement.
In
Proceedings of the 30th Annual IEEE Symposium on Logic in Computer Science
(LICS), 2015. arXiv:1501.07082.
28

[24] A. Hadzihasanovic, K. F. Ng, and Q. Wang. Two complete axiomatisations of pure-
state qubit quantum computing. In Proceedings of the 33rd Annual ACM/IEEE
Symposium on Logic in Computer Science, pages 502‚Äì511. ACM, 2018.
[25] E. Jeandel, S. Perdrix, and R. Vilmart. A complete axiomatisation of the ZX-calculus
for CliÔ¨Äord+T quantum mechanics. In Proceedings of the 33rd Annual ACM/IEEE
Symposium on Logic in Computer Science, pages 559‚Äì568, 2018. arXiv preprint
arXiv:1705.11151.
[26] A. Joyal and R. Street. The geometry of tensor calculus I. Advances in Mathematics,
88:55‚Äì112, 1991.
[27] A. B. Khesin, J. Z. Lu, and P. W. Shor. Graphical quantum CliÔ¨Äord-encoder com-
pilers from the ZX calculus. arXiv:2301.02356.
[28] A. Kissinger and J. van de Wetering. Reducing the number of non-CliÔ¨Äord gates in
quantum circuits. Phys. Rev. A, 102:022406, Aug 2020.
[29] D. Litinski and N. Nickerson. Active volume: An architecture for eÔ¨Écient fault-
tolerant quantum computers with limited non-local connections.
arXiv preprint
arXiv:2211.15465, 2022.
[30] S. Perdrix. State transfer instead of teleportation in measurement-based quantum
computation. International Journal of Quantum Information, 3(01):219‚Äì223, 2005.
[31] R. Raussendorf, D.E. Browne, and H.J. Briegel. Measurement-based quantum com-
putation on cluster states. Physical Review A, 68(2):22312, 2003.
[32] J. van de Wetering.
ZX-calculus for the working quantum computer scientist.
arXiv:2012.13966, 2020.
[33] R. Vilmart. A near-optimal axiomatisation of ZX-calculus for pure qubit quantum
mechanics. arXiv preprint arXiv:1812.09114, 2018.
[34] Q. Wang, R. Yeung, and M. Koch. DiÔ¨Äerentiating and Integrating ZX Diagrams
with Applications to Quantum Machine Learning. arXiv:2201.13250.
[35] Chen Zhao and Xiao-Shan Gao. Analyzing the barren plateau phenomenon in train-
ing quantum neural networks with the zx-calculus. Quantum, 5:466, 2021.
29

