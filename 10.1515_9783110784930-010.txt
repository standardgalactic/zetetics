Section Six
Derivation of Formulas within the Framework
of a System Extended Beyond the Limits
of Elementary Deductive Logic
1 Principles and Metalogical Rules
§ 70 Notation
The language of the extended deductive logic, as it will be used in what follows,
differs from the extended language of the syllogistic in § 64, as it has been devel-
oped in the preceding five sections, merely by the use of
(a) the sign of truth functional negation: ‘~ . . .’, and
(b) the subjunction sign: ‘. . . ⊃. . .’.
The formulas A and ~ A may stand in the place of NN A and of N A if H (NN A, A)
is a valid formula (see § 10, § 31, and § 71, definition 4).
The formula A ⊃B may stand in the place of H (A, B) if H (B, H (A, B)) and H
(NN A, A) are valid formulas (see § 31 and § 71, definition 3).
As for the use of square brackets as per § 64 (4), N A (t) (without square
brackets) may replace both N [A (t)], as an abbreviation of N Ạ((′v) A (v), ζ), and
[N A (t)], as an abbreviation of Ạ((′v) N A (v), ζ ), if N [A (t)] occurs in a valid
formula and a second formula is valid which differs from the first only by replac-
ing the sub-formula N [A (t)] in all places of its occurrence in the first formula
with [N A (t)].
§ 71 Definitions
With the following definitions, the meaning of the signs newly introduced in § 70,
‘~ . . .’ and ‘. . . ⊃. . .’, will be reduced to the meaning of the logical constants ‘N . . .’
and ‘H (. . ., . . .)’.
1. A is a formula of the extended deductive logic if and only if B and C are also formu-
las of the extended deductive logic, i.e., they consist of signs which I have introduced
in § 42, § 46, § 51, and § 64, and at least one of the following four conditions is satis-
fied: (a) A is a formula of the categorical, hypothetical, or disjunctive syllogistic, or
https://doi.org/10.1515/9783110784930-010

(b) A is a logical functional expression, or (c) A is a subjunction of the form B ⊃C, or
(d) A is a truth-functional negation of the form ~ B.
2. A is a logical functional expression if and only if A is a formula which corre-
sponds to one of the expressions B (t), [B (t)], (∀v) B (v), (∃v) B (v), or (∇v) B (v)
introduced in § 64.
3. A is a subjunction, i.e., an expression of the form B ⊃C, if for every interpreta-
tion in which B and C are true or false propositions, the following condition is
satisfied: A is true if and only if H (B, C) is true and, as per § 72, the postulates of
the arbitrary sufficient reason (i.e., rule (IV. 3)) and the affirmative use of double
negation (i.e., rule (IV. 4)) are valid.
Corollary to Definition 3:
If A and B are formulas of the extended deductive logic and if both A, B ≺A, ac-
cording to (VI. 3), as well as NN A ≺A, according to (VI. 4), are valid rules, then
according to this definition (and because of the equivalence in meaning of ‘H A,
B)’ and ‘N (A, N B)’ (see § 40)), the following rule is valid:
H (A, B) ≻≺A ⊃B.
(VI. 1)
4. A is a truth-functional negation, i.e., an expression of the form ~ B, if for every
interpretation in which B is a true or false proposition, the following holds: A is true
if and only if N B is true and, as per § 72, the postulate of the affirmative use of dou-
ble negation for pairs of propositions of the form B and N B (i.e., rule (IV. 4)) is valid.
Corollary to Definition 4:
If A is a formula of the extended deductive logic, and if NN A ≺A, according to (VI.
4), is a valid rule, so that – on the basis of (II. 29)w (see § 73 below) – H (NN A, A) is a
valid propositional schema, then according to this definition (and according to § 30),
the following rule is valid:
N A ≻≺~ A
(VI. 2)
§ 72 Postulates
1. The postulate of the arbitrary sufficient reason:
Let it hold that:
A, B ≺A
(VI. 3)
272
Part II Section Six An Extended System of Deductive Logic

Scholium: The validity of (VI. 3) does not rest on the validity of a logical constant,
but rather on a mere supposition or on the content of the propositions that A and
B stand for. If A, B ∴A were a valid rule, then also the rules ex quolibet verum and
ex falso quodlibet would be valid. For both A ∴H (B, A) (according to (II. 1)) and A,
N A ∴B (according to (I. 2)) would be derivable (see § 30).218
If B stands for the empty premise set, then (VI. 3) turns into the rule A ≺A. It
says that it is impossible that A is true and N A is false. The reason for this impos-
sibility cannot be a logical one. Otherwise, the expression A ≺A would have to
contain a logical constant on whose meaning the impossibility is supposed to de-
pend. (cf. § 45, scholium).
2. The postulate of the affirmative use of double negation for A and N A:
Let NN A be equivalent with A. That is, let not only (I. 1), but in addition:
NN A ≺A
(VI. 4)
3. The postulate of non-empty domains:
Let it hold both that:
N A (α, β) ≺I (Nα, β), and that:
(VI. 5)
N A (Nα, β) ≺I (α, β)
(VI. 6)
Remark: According to rules (V. 5) and (V. 6) (see § 69), in formulas (VI. 5) and (VI.
6) the variable ‘α’ may be replaced everywhere by ‘(′v) A (v)’, and the expression
‘Nα’ by ‘(′v) N A (v)’.
Scholium: When the validity of (VI. 5) and (VI. 6) is accepted, it is supposed that
the domain of individuals to which propositions of the form N A (α, β) and N A (Nα,
β) refer is not empty (see § 35 above). Namely, the validity of (VI. 5) permits passing
from N A (α, β), N I (α, β), α), or N Ạ(α, β) to I (Nα, β) according to the rules of the
logical square; and a fortiori it permits passing from N (∀v) A (v), N (∃v) A (v), or
from (∇v) A (v) to (∃v) N A (v). Similarly for (VI. 6). Accordingly, only on the as-
sumption of the validity of (VI. 5) and (VI. 6) is it possible to derive a non-negative
existential proposition from the negation of an affirmative proposition. It ultimately
Also Paul Hoyningen-Huene (1998, 124) seems not to want to acknowledge the general validity
of the rule according to which A follows from A and B; in his view, it is enough rather “to restrict its
applicability to those cases in which B is different from ~ A“, and then to “justify” that “nothing”
(not even A or ~ A) “follows from A & ~ A”. Since this view is excluded by the truth table for A & ~ A,
it seems that Hoyningen hereby tacitly agrees to the assumption that there must be a non-truth-
functional logical conjunction of premises.
1 Principles and Metalogical Rules § 72
273

rests on this fact that valid existential formulas, i.e., formulas of the type (∃v) A (v),
can be derived within the extended deductive logic.219
Only postulates (VI. 3) and (VI. 4) guarantee that every formula of the system of
the extended deductive logic, provided they contain no free individual variables,
can be given a gapless truth table.
The postulate of non-empty domains, which is expressed in rules (VI. 5) and
(VI. 6), guarantees that all descriptive signs of the extended deductive logic have a
definite semantic value, so that individual symbols always refer to objects of a sat-
isfied domain. By contrast, a similar semantic value is not fixed for the descriptive
signs of the elementary syllogistic. Nothing guarantees that syllogistic concept ex-
pressions stand for satisfiable, not to mention satisfied, concepts.
The fact that basic rules (VI. 3) to (VI. 6) are mere postulates means that proposi-
tions correspond to them from whose negation no inconsistency is derivable. Such
propositions can be generated from them through conditionalization (according to
(II. 29)w) (see § 73) and subsequent interpretation. Proposition from whose negation
no inconsistency is derivable are, according to § 39, to be regarded as non-analytic
(i.e., as synthetic) propositions, and, so long they are not empirical propositions, as
non-analytic propositions a priori.
One can raise the question of under which circumstances it is really appropri-
ate to accept the rules (VI. 3) to (VI. 6) as valid postulates. The answer is: when it
may be assumed that the domain to which individual constants and quantified in-
dividual variables refers is not empty, it may be postulated that these basic rules
are valid. This assumption may be made, e.g., in the application of the logical cal-
culus of functions in arithmetic and geometry, namely, when in this application
individual signs become signs for objects whose existence or givenness (as num-
bers, quantities, line segments, etc.) is assumed. In this application, basic rules
(VI. 3) to (VI. 6) turn into mathematical postulates whose validity neither needs nor
is capable of proof. This holds directly for (VI. 5) and (VI. 6), but indirectly for rules
(VI. 3) and (VI. 4) as well. For if it is ruled out that singular propositions have no
existential presuppositions, then it is also ruled out that propositions of the form Ạ
(α, β) do not follow from propositions of the form NN Ạ(α, β), and hence that prop-
ositions of the form A do not follow from propositions of the form NN A. Thus, in
that case (VI. 4) holds. But then (VI. 3) holds as well, for if it is supposed to hold
always that A follows from NN A, then it should also hold that there is no pair of
propositions which are related as A and NN A and yet at the same time both negate
a false proposition, so that as such they are both true. With this it is postulated that
Examples of such existential formulas are (∃y) (F (y) ⊃(∀x) F (x)), (∃y) ((∃x) F (x) ⊃F (y)),
or (∃y) ((∀x) F (x) ⊃F (y)). See on this § 80, theorem (15). Cf. Quine 1963, 160–67.
274
Part II Section Six An Extended System of Deductive Logic

there is no proposition which is true in one respect (insofar as it negates a false
proposition), while it is false in another respect (insofar as it is negated by a true
proposition). According to this postulate, there should only be propositions of
which it may also be supposed that they (either alone or in conjunction with other
propositions) follow from themselves.220
§ 73 Metalogical Rules
According to § 72, the extended deductive logic, in contrast to the syllogistic, makes
use of rules whose validity does not rest on definitions, but is only postulated. These
rules thus deal not with relations of logical consequence, but rather only with rela-
tions of regular consequence (see § 43, definitions 3 and 4). Hence, to derive rules
from these postulates one needs metalogical rules which can be regarded for the
most part as analogous variants of the metalogical rules I introduced above, in §§
44 to 50, which are applicable to relations of logical consequence. Precisely analo-
gous rules hold for relations of regular consequence, since logical consequence is
only a special case of regular consequence (see § 43, definition 4). To be able to re-
duce relations of regular consequence to other relations of regular consequence, it
suffices to reformulate the metalogical basic rules (I. 2) (reductio ad absurdum), (I. 3)
(Peripatetic inference chain rule), and (II. 1) (principle of conditionalization) so that
the sign ‘∴’ is replaced in all places of its occurrence with the sign ‘≺’. We then get
three new expressions that stand for reduction rules, for (I. 2)w, (I. 3)w, and (II. 1)w,
to which finally the weakening rule (VI. 7) is added:
1. Metalogical basic rules
Reductio ad absurdum – variant on (I. 2):
(A1, . . ., An ≺A) / (N A, A1, . . ., An–1 ≺N An), . . .,
(N A, A2, . . ., An ≺N A1) (with n ≧1)
(I. 2)w221
Peripatetic inference chain rule – variant on (I. 3):
(Ak, . . ., An ≺A), (A, B1, . . ., Bm ≺B) / (Ak, . . ., An, B1, . . ., Bm ≺B)
(with k ≧0, n ≧k and m ≧1)
(I. 3)w
Basic rules (VI. 3) to (VI. 6), as postulates, regulate the mathematical use of letters as such, and, like
the so-called postulates of Euclidean geometry, they have to guarantee that their concepts are satisfied.
The superscripted lowercase letter w stands here and in what follows for ‘weakened’. The
weakening of rule (I. 2)w vis-à-vis the analogous rule (I. 2) consists in replacing the sign for logical
consequence in all places of its occurrence with that of regular consequence.
1 Principles and Metalogical Rules § 73
275

Principle of conditionalization – variant on (II. 1):
A1, . . ., An, B ≺C / A1, . . ., An ≺H (B, C)
(II. 1)w
Scholium: The reasons these three rules are valid are not different from the reasons
the rules (I. 2), (I. 3), and (II. 1) are valid. For (I. 2)w is valid because it is true per
definitionem of regular consequence just as of logical consequence that the conse-
quent cannot be false unless at least one of the premises is false; (I. 3)w is valid be-
cause both the regular as well as the logical consequence relations are transitive;
and (II. 1)w is valid because the definition of the hypothetical proposition (see § 47,
definition 2 above) refers to the relation of regular consequence of which the rela-
tion of logical consequence is only a special case (see § 42, definitions 3 and 4).
Weakening of logical consequence:
A1, . . ., An ∴B / A1, . . ., An ≺B (with n ≧1)
(VI. 7)
The validity of (VI. 7) rests on the fact that logical consequence, according to § 43,
definitions 3 and 4, is a special case of regular consequence.
Note on Notation:
To abbreviate, in what the following derivations (as also up to now) I will add the
superscripted lowercase letter w (as an abbreviation for ‘weakened’) in the right
column of a line, after the designation of a rule. This letter is placed here to indi-
cate that two lines of a derivation, of which the second relies on the application
of (VI. 7), have been combined into one line. For example, the two lines
[n]
A ∴NN A
(I. )
[n + m]
A ≺NN A (with m ≧)
(VI. ) []
may be replaced by the following line:
[n]
A ≺NN A
(I. )w
2. Derivable metalogical rules
From the metalogical basic rules (I. 2)w, (I. 3)w, and (II. 1)w rules can be derived
which are precisely analogous to the metalogical rules (I. 4), (I. 5), (II. 5), and (II. 6)
as well as rules (II. 29) and (II. 30), and which differ from them only by the ap-
pearance of ‘≺’ in place of ‘∴’. They are the following:
Simple transitivity in an inference chain – variant on (I. 4):
(Ai, . . ., Ak ≺B), (B, C ≺D) / Ai, . . ., Ak, C ≺D (with i ≧0, k ≧i)
(I. 4)w
Complex transitivity in an inference chain – variant on (I. 5):
(Ai, . . ., Ak ∴A), (Ak+1, . . ., An ≺B1), (A, B1 ≺D) / A1, . . ., An ≺D
(with i ≧0, k ≧i, n ≧k + 1)
(I. 5)w
276
Part II Section Six An Extended System of Deductive Logic

Deconditionalization of a conclusion – variant on (II. 5):
Ai, . . ., Ak ≺H (B, C) / Ai, . . ., Ak, B ≺C (with i ≧0 and k ≧0)
(II. 5)w
Idempotency rule – variant on (II. 6):
Ai . . ., Ak, A1, A1 ≺D / A1, Ai, . . ., Ak ≺D (with i ≧0, k ≧i)
(II. 6)w
Conditionalization rule – variant on (II. 29):
A1, Ai, . . ., An ≺B / ✶≺H (A1, H (Ai, H (. . ., H (An, B))) . . .)
(with i ≧1, n ≧i)
(II. 29)w
Deconditionalization – variant on (II. 30):
✶≺H (A1, H (Ai, H (. . ., H (An, B))) . . .) / ✶, A1, Ai, . . ., An ≺B
(with i ≧1, n ≧i)
(II. 30)w
The derivations which can be carried out for (I. 4)w, (I. 5)w, (II. 5)w, (II. 6)w, (II. 29)w,
and (II. 30)w are precisely analogous to the proofs which have been carried out
above in § 45, § 49, and § 50 for the validity of rules (I. 4), (I. 5), (II. 6), (II. 29), and
(II. 30), respectively.
2 Derived Formulas
§ 74 Derivation of Truth-Functional Rules
If A, B, and C are formulas of the extended deductive logic in the sense of § 71,
definition 1, then the following rules (VI. 8) to (VI. 16) are derivable from the prin-
ciples established above:
Simple detachment rule:
A ⊃B, A ≺B
(VI. 8)222
Proof:
[]
H (A, B), A ≺B
(II. )w
[]
A ⊃B, A ≺B
(VI. ) []
Complex detachment rule:
(A ⊃B), (B ⊃C), A ≺C
(VI. 9)
In logic books, A, A ⊃B ∴B and A, A ⊃B ≺B are not usually distinguished, and thus it is not
noticed that, taken strictly, A, A ⊃B ∴B is not a valid rule. There is also the habit of confusing
A, A ⊃B ∴B or A, A ⊃B ≺B with modus ponendo ponens (II. 2). In this way, the distinction between
H (A, B) and A ⊃B is overlooked. Frege (1879/1967, § 6) goes as far as designating his derivation
rule, which likewise resembles expression (VI. 8), as “modus ponens,” as if ultimately even the
distinction between modus ponendo ponens and modus tollendo ponens should remain unnoticed.
2 Derived Formulas § 74
277

Proof:
[]
(A ⊃B), A ≺B
(VI. )
[]
(B ⊃C), B ≺C
(VI. )
[]
(A ⊃B), (B ⊃C), A ≺C
(I. )w [, ]
Generalization rule:
In case t occurs only in the argument places of A (t), then:
A (t) ≺(∀v) A (v)
(VI. 10)
Proof:
[]
Ạ((′v) A (v), ζ) ≺I ((′v) A (v), ζ)
(III. )a
[]
I ((′v) A (v), ζ) ≺A ((′v) A (v), ξ)
(III. )w
[]
Ạ((′v) A (v), ζ) ≺A ((′v) A (v), ξ)
(I. )w [, ]
[]
[A (t)] ≺Ạ((′v) A (v), ζ)
(V. )
[]
A ((′v) A (v), ξ) ≺(∀v) A (v)
(V. )
[]
[A (t)] ≺(∀v) A (v)
(I. )w [, , ]
The proof is not yet completed here, since the square brackets in line [6] must still
disappear. Indeed, ‘A (t)’ and ‘[A (t)]’ are not equivalent, according to § 64 (4). If A
equals N B, then it is not proven with line [6] that (∀v) N B (v) follows from N [B (t)].
At that point, it is only proven that (∀v) N B (v) follows regularly from [N B (t)].
Hence, the proof for (VI. 10) is only completed when the formula N [B (t)] ≺(∀v) N B
(v) is derived as well. This derivation can be performed in the following way:
[’]
Ạ((′v) B (v), ζ) ≺[B (t)]
(V. )
[’]
N [B (t)] ≺N Ạ((′v) B (v), ζ)
(I. )w [’]
[’]
A ((′v) B (v), ζ) ≺Ạ((′v) B (v), ζ)
(III. )w
[’]
N Ạ((′v) B (v), ζ) ≺N A ((′v) B (v), ζ)
(I. ) w [’]
[’]
N A ((′v) B (v), ζ) ≺I ((′v) N B (v), ζ)
(VI. )
[’]
I ((′v) N B (v), ζ) ≺A ((′v) N B (v), ξ)
(III. )w
[’]
A ((′v) N B (v), ξ) ≺(∀v) N B (v)
(V. )
[’]
N [B (t)] ≺(∀v) N B (v)
(I. )w [’, ’, ’, ’, ’]
The (not unrestrictedly admissible) application of (III. 3), i.e., the first exposition
rule, is permitted in lines [2] and [6’], since ‘ξ’ occurs in the place of a concept
variable neither in the premise expression of line [1], nor in one of the premise
expressions of lines [1’] to [5’]. This can be made clear from the formulas abbrevi-
ated by A (t) and (∀v) A (v), namely the formulas Ạ((′v) B (v), ζ) and N Ạ((′v) B
(v), ζ) and the formulas A ((′v) A (v), ξ) and A ((′v) N B (v), ξ), respectively, between
which takes place the transition made possible by (III. 3). In this way, these for-
mulas differ from the expressions that abbreviate them, namely the expressions
A (t) and (∀v) A (v), which occur in the formula for rule (VI. 10). With reference
to these expressions, if rule (VI. 10) is supposed to be valid, it must be stipulated
that the letter t – and with that implicitly the concept expression ζ as well – does
278
Part II Section Six An Extended System of Deductive Logic

not occur even once in the functional expression A (t) other than in its argument
places (which are designated by ‘v’ in ‘(∀v) A (v)’). This stipulation guarantees that
‘t’ in the transition from A (t) to ‘(∀v) A (v)’ is replaced by ‘v’, just as ‘ζ’ is by ‘ξ’.
Rule of posterior generalization:
In case t occurs only in the argument places of B (t), then:
(A ⊃B (t)) ≺(A ⊃(∀v) B (v))
(VI. 11)
Proof:
[]
(A ⊃B (t)), A ≺B (t)
(VI. )
[]
B (t) ≺(∀v) B (v)
(VI. )
[]
(A ⊃B (t)), A ≺(∀v) B (v)
(I. )w [, ]
[]
(A ⊃B (t)) ≺H (A, (∀v) B (v))
(II. )w []
[]
H (A, (∀v) B (v)) ≺(A ⊃(∀v) B (v))
(VI. )
[]
(A ⊃B (t)) ≺(A ⊃(∀v) B (v))
(I. )w [, ]
Since in line [2] the restrictedly valid rule (VI. 10) is applied, there is the same re-
striction on the validity of rule derived in line [6] as for the validity of rule (VI. 10).
(∀v) B (v) ≺A ((′v) NN B (v), ξ)
(VI. 12)
Proof:
[]
N A ((′v) NN B (v), ξ) ≺I ((′v) N B (v), ξ)
(VI. )
[]
I ((′v) N B (v), ξ) ≺N A ((′v) B (v), ξ)
(V. )
[]
N A ((′v) NN B (v), ξ) ≺N A ((′v) B (v), ξ)
(I. )w [, ]
[]
NN A ((′v) B (v), ξ) ≺NN A ((′v) NN B (v), ξ)
(I. )w []
[]
A ((′v) B (v), ξ) ≺NN A ((′v) B (v), ξ)
(I. )w
[]
NN A ((′v) NN B (v), ξ) ≺A ((′v) NN B (v), ξ)
(VI. )
[]
A ((′v) B (v), ξ) ≺A ((′v) NN B (v), ξ)
(I. )w [, , ]
[]
(∀v) B (v) ≺A ((′v) B (v), ξ)
(V. )
[]
(∀v) B (v) ≺A ((′v) NN B (v), ξ)
(I. )w [, ]
Particularization rule:
B (t) ≺(∃v) B (v)
(VI. 13)
Proof:
[]
Ạ((′v) N B (v), ζ) ≺N Ạ((′v) B (v), ζ)
(V. )
[]
NN Ạ((′v) B (v), ζ) ≺N Ạ((′v) N B (v), ζ)
(I. )w []
[]
Ạ((′v) B (v), ζ) ≺NN Ạ((′v) B (v), ζ)
(I. )w
[]
Ạ((′v) B (v), ζ) ≺N Ạ((′v) N B (v), ζ)
(I. )w [, ]
[]
A ((′v) N B (v), ζ) ≺Ạ((′v) N B (v), ζ)
(III. )w
[]
N Ạ((′v) N B (v), ζ) ≺N A ((′v) N B (v), ζ)
(I. )w []
[]
N A ((′v) N B (v), ζ) ≺I ((′v) B (v), ζ)
(VI. )
[]
I ((′v) B (v), ζ) ≺A ((′v) B (v), ξ)
(III. )w
[]
A ((′v) B (v), ξ) ≺I ((′v) B (v), ξ)
(III. )w
[]
Ạ((′v) B (v), ζ) ≺I ((′v) B (v), ξ)
(I. )w [, , , , ]
[]
[B (t)] ≺Ạ((′v) B (v), ζ)
(V. )
2 Derived Formulas § 74
279

[]
I ((′v) B (v), ξ) ≺(∃v) B (v)
(V. )
[]
[B (t)] ≺(∃v) B (v)
(I. )w [, , ]
To eliminate the square brackets in line [13], the proof according to § 64 (4) for
the case in which B equals N B must be completed by deriving the formula N [C
(t)] ≺(∃v) N C (v). This happens through the proof of rule (VI. 14):
Particularization rule with square brackets:
N [C (t)] ≺(∃v) N C (v)
(VI. 14)
Proof:
[’]
A ((′v) C (v), ζ) ≺Ạ((′v) C (v), ζ)
(III. )w
[’]
N Ạ((′v) C (v), ζ) ≺N A ((′v) C (v), ζ)
(I. )w [’]
[’]
N A ((′v) C (v), ζ) ≺I ((′v) N C (v), ζ)
(VI. )
[’]
I ((′v) N C (v), ζ) ≺A ((′v) N C (v), ξ)
(III. )w
[’]
A ((′v) N C (v), ξ) ≺I ((′v) N C (v), ξ)
(III. )a
[’]
N Ạ((′v) C (v), ζ) ≺I ((′v) N C (v), ξ)
(I. )w [’, ’, ’, ’]
[’]
Ạ((′v) C (v), ζ) ≺[C (t)]
(V. )
[’]
N [C (t)] ≺N Ạ((′v) C (v), ζ)
(I. )w [’]
[’]
I ((′v) N C (v), ξ) ≺(∃v) N C (v)
(V. )
[’]
N [C (t)] ≺(∃v) N C (v)
(I. )w [’, ’, ’]
Singularization rule:
(∀v) B (v) ≺B (t)
(VI. 15)
Proof:
[]
N [B (t)] ≺(∃v) N B (v)
(VI. )
[]
(∃v) N B (v) ≺I ((′v) N B (v), ξ)
(V. )
[]
N [B (t)] ≺I ((′v) N B (v), ξ)
(I. )w [, ]
[]
N I ((′v) N B (v), ξ) ≺NN [B (t)]
(I. )w []
[]
NN [B (t)] ≺[B (t)]
(VI. )w
[]
A ((′v) NN B (v), ξ) ≺N I ((′v) N B (v), ξ)
(V. )
[]
(∀v) B (v) ≺A ((′v) NN B (v), ξ)
(VI. )
[]
(∀v) B (v) ≺[B (t)]
(I. )w [, , , ]
Here, too, for the elimination of the square brackets that appear in line [10], the
proof must be completed according to § 64 (4). This happens through the proof of
rule (VI. 16), which makes possible, for the case where B equals N C, the regular tran-
sition from (∀v) N C (v) to N [C (t)], and thus not only (like rule (VI. 15)) to [N C (t)]:
Singularization rule with square brackets:
(∀v) N C (v) ≺N [C (t)]
(VI. 16)
280
Part II Section Six An Extended System of Deductive Logic

Proof:
[]
[C (t)] ≺(∃v) C (v)
(VI. )
[]
(∃v) C (v) ≺I ((′v) C (v), ξ)
(V. )
[]
N I ((′x) C (x), ξ) ≺N [C (t)]
(I. )w []
[]
A ((′v) N C (v), ξ) ≺N I ((′v) C (v), ξ)
(V. )
[]
(∀v) A (v) ≺A ((′v) N C (v), ξ)
(V. )
[]
(∀v) A (v) ≺N [C (t)]
(I. )w [, , ]
§ 75 Derivation of Truth-Functional Laws
If A, B, and C are formulas of the extended deductive logic in the sense of § 73, defini-
tion 1, then the following truth-functions (VI. 17) to (VI. 27), for example, are derivable
from the principles established above. The expressions (VI. 17) to (VI. 24) – apart from
(VI. 23) – correspond to seven of the nine “fundamental principles” which Frege estab-
lished in Part II of his Begriffsschrift as axioms of his system of “laws of thought” and
which he called its “core.”223 The two axioms which I leave aside here differ from the
others in that they contain the sign of “identity of content” (‘≡’), which Frege replaced
in later writings by the ordinary identity sign (‘=’). They are rendered by the formulas
‘⊢(c = d) ⊃(A (c) ⊃A (d)’ and ‘⊢c = d’ in §§ 20 and 21 of the Begriffsschrift.
✶≺A ⊃(B ⊃A)
(VI. 17)
Proof:
[]
A, B ≺A
(VI. )
[]
A ≺H (B, A)
(II. )w []
[]
H (B, A) ≺B ⊃A
(VI. )
[]
A ≺B ⊃A
(I. )w [, ]
[]
✶≺H (A, (B ⊃A)
(II. )w []
[]
H (A, (B ⊃A) ≺(A ⊃(B ⊃A))
(VI. )
[]
✶≺A ⊃(B ⊃A)
(. )w [, ]
✶≺(A ⊃(B ⊃C)) ⊃((A ⊃B) ⊃(A ⊃C))
(VI. 18)
Proof:
[]
(A ⊃B), (B ⊃C), A ≺C
(VI. )
[]
(A ⊃(B ⊃C)), A ≺(B ⊃C)
(VI. )
[]
(A ⊃(B ⊃C)), (A ⊃B), A, A ≺C
(I. )w [, ]
[]
(A ⊃(B ⊃C)), (A ⊃B), A ≺C
(II. )w []
[]
(A ⊃(B ⊃C)), (A ⊃B) ≺H (A, C)
(II. )w []
[]
H (A, C) ≺(A ⊃C)
(VI. )
[]
(A ⊃(B ⊃C)), (A ⊃B) ≺(A ⊃C)
(I. )w [, ]
Frege 1879, 25–26, § 13 (1967, 29).
2 Derived Formulas § 75
281

[]
(A ⊃(B ⊃C)) ≺H ((A ⊃B), (A ⊃C))
(II. )w []
[]
H ((A ⊃B), (A ⊃C)) ≺((A ⊃B) ⊃(A ⊃C))
(VI. )
[]
(A ⊃(B ⊃C)) ≺((A ⊃B) ⊃(A ⊃C))
(I. )w [, ]
[]
✶≺H (A ⊃(B ⊃C)), ((A ⊃B) ⊃(A ⊃C)))
(II. )w []
[]
H (A ⊃(B ⊃C)), ((A ⊃B) ⊃(A ⊃C)))
≺(A ⊃(B ⊃C)) ⊃((A ⊃B) ⊃(A ⊃C)))
(VI. )
[]
✶≺(A ⊃(B ⊃C)) ⊃((A ⊃B) ⊃(A ⊃C))
(I. )w [, ]
✶≺(A ⊃(B ⊃C)) ⊃(B ⊃(A ⊃C))
(VI. 19)
Proof:
[]
H (A, H (B, C)), A ≺H (B, C)
(II. )w
[]
H (A, H (B, C)), A, B ≺C
(II. )w []
[]
H (A, H (B, C)), B ≺H (A, C)
(II. )w []
[]
H (A, C) ≺(A ⊃C)
(VI. )
[]
H (A, H (B, C)), B ≺(A ⊃C)
(I. )w [, ]
[]
H (A, H (B, C)) ≺H (B, (A ⊃C))
(II. )w []
[]
H (B, (A ⊃C)) ≺(B ⊃(A ⊃C))
(VI. )
[]
H (A, H (B, C)) ≺(B ⊃(A ⊃C))
(I. )w [, ]
[]
(A ⊃(B ⊃C)), A ≺(B ⊃C)
(VI. )
[]
(B ⊃C), B ≺C
(VI. )
[]
(B ⊃C) ≺H (B, C)
(II. )w []
[]
(A ⊃(B ⊃C)), A ≺H (B, C)
(I. )w [, ]
[]
(A ⊃(B ⊃C)) ≺H (A, H (B C))
(II. )w []
[]
(A ⊃(B ⊃C)) ≺(B ⊃(A ⊃C))
(I. )w [, ]
[]
✶≺H ((A ⊃(B ⊃C)), (B ⊃(A ⊃C)))
(II. )w []
[]
H ((A ⊃(B ⊃C)), (B ⊃(A ⊃C)))
≺((A ⊃(B ⊃C)) ⊃(B ⊃(A ⊃C)))
(VI. )
[]
✶≺(A ⊃(B ⊃C)) ⊃(B ⊃(A ⊃C))
(I. )w [, ]
The expressions (VI. 17) to (VI. 19) correspond to the three basic laws of “con-
ditionality” (Frege 1879, 26, § 13 [1967, 29]) which Frege established as axioms in
§§ 14 and 16 of his Begriffsschrift.
Truth-functional contraposition:
✶≺(A ⊃B) ⊃(~ B ⊃~ A)
(VI. 20)
Proof:
[]
H (A, B), N B ≺N A
(II. )w
[]
N A ≺~ A
(VI. )
[]
H (A, B), N B ≺~ A
(I. )w [, ]
[]
~ B ≺N B
(VI. )
[]
H (A, B), ~ B ≺~ A
(I. )w [, ]
[]
H (A, B) ≺H (~ B, ~ A)
(II. )w []
[]
H (~ B, ~ A) ≺(~ B ⊃~ A)
(VI. )
[]
H (A, B) ≺(~ B ⊃~ A)
(I. )w [, ]
[]
(A ⊃B), A ≺B
(VI. )
282
Part II Section Six An Extended System of Deductive Logic

[]
(A ⊃B) ≺H (A, B)
(II. )w []
[]
(A ⊃B) ≺(~ B ⊃~ A)
(I. )w [, ]
[]
✶≺H ((A ⊃B), (~ B ⊃~ A))
(II. )w []
[]
H ((A ⊃B), (~ B ⊃~ A)) ≺((A ⊃B) ⊃(~ B ⊃~ A))
(VI. )
[]
✶≺(A ⊃B) ⊃(~ B ⊃~ A)
(I. )w [, ]
Truth-functional variant on (I. 1):
✶≺A ⊃~ ~ A
(VI. 21)224
Proof:
[]
~ A ≺N A
(VI. )
[]
NN A ≺N ~ A
(I. )w []
[]
A ≺NN A
(I. )w
[]
A ≺N ~ A
(I. )w [, ]
[]
N ~ A ≺~ ~ A
(VI. )
[]
A ≺~ ~ A
(I. )w [, ]
[]
✶≺H (A, ~ ~ A)
(II. )w []
[]
H (A, ~ ~ A) ≺(A ⊃~ ~ A)
(VI. )
[]
✶≺(A ⊃~ ~ A)
(I. )w [,]
Inverse of this variant:
✶≺~ ~ A ⊃A
(VI. 22)
Proof:
[]
N A ≺~ A
(VI. )
[]
N ~ A ≺NN A
(I. )w []
[]
~ ~ A ≺N ~ A
(VI. )
[]
~ ~ A ≺NN A
(I. )w [, ]
[]
NN A ≺A
(VI. )
[]
~ ~ A ≺A
(I. )w [, ]
[]
✶≺H (~ ~ A, A)
(II. )w []
[]
H (~ ~ A, A) ≺(~ ~ A ⊃A)
(VI. )
[]
✶≺~ ~ A ⊃A
(I. )w [, ]
The expressions (VI. 20) to (VI. 22) correspond to the three basic laws of “nega-
tion” (Frege 1879, 26, § 13 [1967, 29]) which Frege established as axioms in §§ 17 to
19 of his Begriffsschrift.
Inverse of truth-functional contraposition:
✶≺(~ B ⊃~ A) ⊃(A ⊃B)
(VI. 23)
(VI. 21) and (VI. 23) are here strictly speaking only proven for A ≠N B (for arbitrary B). But
the generalization is admissible in both cases, since N B ≺NNN B is directly derivable from (VI.
4) with the help of (I. 2)w, so that N A may be substituted for A in every line of both proofs.
2 Derived Formulas § 75
283

Proof:
[]
H (N B, N A), NN A ≺NN B
(II. )w
[]
NN B ≺B
(VI. )
[]
A ≺NN A
(I. )w
[]
H (N B, N A), A ≺B
(I. )w [, , ]
[]
H (N B, N A) ≺H (A, B)
(II. )w []
[]
H (A, B) ≺(A ⊃B)
(VI. )
[]
H (N B, N A) ≺(A ⊃B)
(I. )w [, ]
[]
~ A ≺N A
(VI. )
[]
✶≺H (~ A, N A)
(II. )w []
[]
H (N B, ~ A), H (~ A, N A) ≺H (N B, N A)
(II. )w
[]
✶, H (N B, ~ A) ≺H (N B, N A)
(I. )w [, ]
[]
N B ≺~ B
(VI. )
[]
✶≺H (N B, ~ B)
(II. )w []
[]
H (N B, ~ B), H (~B, ~ A) ≺H (N B, ~ A)
(II. )w
[]
✶, H (~B, ~ A) ≺H (N B, ~ A)
(I. )w [, ]
[]
✶, ✶, H (~B, ~ A) ≺H (N B, N A)
(I. )w [, ]
[]
✶, ✶, H (~B, ~ A) ≺(A ⊃B)
(I. )w [, ]
[]
(~ B ⊃~ A), ~ B ≺~ A
(VI. )
[]
(~ B ⊃~ A) ≺H (~B, ~ A)
(II. )w []
[]
✶, ✶, (~ B ⊃~ A) ≺(A ⊃B)
(I. )w [, ]
[]
✶, ✶, ✶≺H ((~B ⊃~ A), (A ⊃B))
(II. )w []
[]
H ((~B ⊃~ A), (A ⊃B)) ≺((~B ⊃~ A) ⊃(A ⊃B))
(VI. )
[]
✶, ✶, ✶≺((~B ⊃~ A) ⊃(A ⊃B))
(I. )w [, ]
[]
✶≺(~B ⊃~ A) ⊃(A ⊃B)
(II. )w []
Law of singularization:
✶≺(∀v) A (v) ⊃A (t)
(VI. 24)
Proof:
[]
(∀v) A (v) ≺A (t)
(VI. )
[]
✶≺H ((∀v) A (v), A (t))
(II. )w []
[]
H ((∀v) A (v), A (t)) ≺((∀v) A (v) ⊃A (t))
(VI. )
[]
✶≺(∀v) A (v) ⊃A (t)
(I. )w [, ]
The expression (VI. 24) corresponds to the ninth axiom in § 22 of Frege’s Begriffs-
schrift. Instead of ‘✶≺’ Frege uses the sign ‘⊢’. But that sign means something else,
namely: that the expression standing to the right of it renders a truth (Frege 1879, 2,
§ 1 [1967, 11]) or corresponds to a ‘fact’ (Frege 1879, 4, § 3 [1967, 13]). Thus, it designa-
tes a property of all formulas which render a truth-functional law. This property is
the result of the fact that it is impossible for each of these formulas according to (VI.
24) to contain an empty term, and it is guaranteed for each of these formulas accord-
ing to (VI. 17) to (VI. 22) that it cannot have any other value (as a functional value)
than the value T under any distribution of the truth-values T and F on A, B or C.
284
Part II Section Six An Extended System of Deductive Logic

Law of particularization:
✶≺B (t) ⊃(∃v) B (v)
(VI. 25)
Proof:
[]
B (t) ≺(∃v) B (v)
(VI. )
[]
✶≺H (B (t), (∃v) B (v))
(II. )w []
[]
H (B (t), (∃v) B (v)) ≺(B (v) ⊃(∃v) B (v))
(VI. )
[]
✶≺B (t) ⊃(∃v) B (v)
(I. )w [, ]
✶≺~ (∀v) ~ A (v) ⊃(∃v) A (v)
(VI. 26)
Proof:
[]
✶≺A (t) ⊃(∃v) A (v)
(VI. )
[]
✶≺(A (t) ⊃(∃v) A (v)) ⊃(~ (∃v) A (v) ⊃~ A (t))
(VI. )
[]
((A (t) ⊃(∃v) A (v)) ⊃(~ (∃v) A (v) ⊃~ A (t)),
(A (t) ⊃(∃v) A (v)) ≺(~ (∃v) A (v) ⊃~ A (t))
(VI. )
[]
✶, ✶≺~ (∃v) A (v) ⊃~ A (t)
(I. )w [, , ]
[]
~ A (t) ≺(∀v) ~ A (v)
(VI. )
[]
✶≺H (~ A (t), (∀v) ~ A (v))
(II. )w []
[]
H (~ A (t), (∀v) ~ A (v)) ≺(~ A (t) ⊃(∀v) ~ A (v))
(VI. )
[]
✶≺~ A (t) ⊃(∀v) ~ A (v)
(I. )w [, ]
[]
(~ (∃v) A (v) ⊃~ A (t)), (~ A (t) ⊃(∀v) ~ A (v)),
~ (∃v) A (v) ≺(∀v) ~ A (v)
(VI. )
[]
✶, ✶, ✶, ~ (∃v) A (v) ≺(∀v) ~ A (v)
(I. )w [, , ]
[]
N (∃v) A (v) ≺~ (∃v) A (v)
(VI. )
[]
✶, ✶, ✶, N (∃v) A (v) ≺(∀v) ~ A (v)
(I. )w [, ]
[]
✶, ✶, ✶, N (∀v) ~ A (v) ≺NN (∃v) A (v)
(I. )w []
[]
~ (∀v) ~ A (v) ≺N (∀v) ~ A (v)
(VI. )
[]
NN (∃v) A (v) ≺(∃v) A (v)
(VI. )
[]
✶✶✶, ~ (∀v) ~ A (v) ≺(∃v) A (v)
(I. )w [, , ]
[]
✶, ~ (∀v) ~ A (v) ≺(∃v) A (v)
(II. )w []
[]
✶≺H (~ (∀v) ~ A (v), (∃v) A (v))
(II. )w []
[]
H (~ (∀v) ~ A (v), (∃v) A (v))
≺(~ (∀v) ~ A (v) ⊃(∃v) A (v))
(VI. )
[]
✶≺~ (∀v) ~ A (v) ⊃(∃v) A (v)
(I. )w [, ]
✶≺(∃v) A (v) ⊃~ (∀v) ~ A (v)
(VI. 27)
Proof:
[]
A ((′v) N A (v), ξ) ≺N I ((′v) A (v), ξ)
(V. )
[]
NN I ((′v) A (v), ξ) ≺N A ((′v) N A (v), ξ)
(I. )w []
[]
I ((′v) A (v), ξ) ≺NN I ((′v) A (v), ξ)
(I. )w
[]
(∃v) A (v) ≺I ((′v) A (v), ξ)
(V. )
[]
(∃v) A (v) ≺N A ((′v) N A (v), ξ)
(I. )w [, , ]
[]
(∀v) N A (v) ≺A ((′v) N A (v), ξ)
(V. )
[]
N A ((′v) N A (v), ξ) ≺N (∀v) N A (v)
(I. )w []
[]
N A (t) ≺(∀v) N A (v)
(VI. )
[]
N (∀v) N A (v) ≺NN A (t)
(I. )w []
2 Derived Formulas § 75
285

[]
NN A (t) ≺A (t)
(VI. )
[]
✶≺A (t) ⊃~ ~ A (t)
(VI. )
[]
✶≺((∀v) ~ A (v) ⊃~ A (t))
(VI. )
[]
✶≺(((∀v) ~ A (v) ⊃~ A (t))
⊃(~ ~ A (t) ⊃~ (∀v) ~ A (v)))
(VI. )
[]
(((∀v) ~ A (v) ⊃~ A (t)) ⊃(~ ~ A (t) ⊃~ (∀v) ~ A (v))),
((∀v) ~ A (v) ⊃~ A (t))
≺(~ ~ A (t) ⊃~ (∀v) ~ A (v))
(VI. )
[]
✶, ✶, ✶≺(~ ~ A (t) ⊃~ (∀v) ~ A (v))
(I. )w [, , ]
[]
(A (t) ⊃~ ~ A (t)), (~ ~ A (t) ⊃~ (∀v) ~ A (v)), A (t)
≺~ (∀v) ~ A (v)
(VI. )
[]
✶, ✶, A (t) ≺~ (∀v) ~ A (v)
(I. )w [, , ]
[]
✶, ✶, (∃v) A (v) ≺~ (∀v) ~ A (v)
(I. )w [, , , , ]
[]
✶, (∃v) A (v) ≺~ (∀v) ~ A (v)
(II. )w []
[]
✶≺H ((∃v) A (v), ~ (∀v) ~ A (v))
(II. )w []
[]
H ((∃v) A (v), ~ (∀v) ~ A (v)) ≺(∃v) A (v) ⊃~ (∀v) ~ A (v))
(IV. )
[]
✶≺(∃v) A (v) ⊃~ (∀v) ~ A (v)
(I. )w [, ]
§ 76 Contentful Inference
First example:
We have seen above, in § 68, that the validity of the inference
If b is a circle, then b is a figure;
Therefore: if a, when b is a figure, has not drawn b, then a, when b is a circle, has not drawn b.
is valid and that it corresponds to the form
H ([C (b)], [F (b)])
∴H (H ([F (b)], N [D (a, b)], H ([C (b)], N [D (a, b)])).
Neither an inference of this form, nor an inference from categorical propositions,
as, e.g., the inference treated in § 66:
All circles are figures.
Thus: if, when something is a figure a has not drawn it, then, when something is a circle, a
has not drawn it, –
can be expressed in the language of the calculus of functions, since categorical or
hypothetical propositional forms cannot be presented in this language.
However, it is certainly possible to present sound inferences in this language
that are quite similar. If, e.g., we replace in the just described inferences the logi-
cal constants ‘H (. . ., . . .)’ and ‘N . . .’ everywhere with ‘. . . ⊃. . .’ and ‘~ . . .’, and
286
Part II Section Six An Extended System of Deductive Logic

we replace the sign for logical consequence with the sign for regular conse-
quence, then we get from the inference mentioned first the following one:
[C (b)] ⊃[F (b)])
≺([F (b)] ⊃~ D (a, b)) ⊃([C (b)] ⊃~ D (a, b)).
Or in words:
b is not a circle unless b is a figure;
therefore: it is not the case that b is not a figure unless a has not drawn b, unless it is the case
that b is not a circle unless a has not drawn b.
By generalization, this inference can be additionally transformed into the inference:
[K (b)] ⊃[F (b)])
≺([F (b)] ⊃~ G (a, b)) ⊃([K (b)] ⊃~ G (a, b)).
In words:
For all x: x is not a circle unless x is a figure;
therefore: for all y: there is an x such that x is a circle and y has drawn x not unless there is
an x such that x is a figure and y has drawn x.
However, it is worth mentioning that such an inference which relies on truth func-
tions is only valid if one understands the little word ‘therefore’ as expression of
regular consequence, rather than logical consequence (in the sense of § 44, defini-
tions 3 and 4), and thus does not replace the sign ‘≺’ with ‘∴’. We can see this by
paying attention to the rules according to which the inference considered in § 68
H ([C (b)], [F (b)])
∴(H ([F (b)], N [D (a, b)], H ([C (b)], N [D (a, b)]))
can be transformed into the inference
(∀x) (C (x) ⊃F (x))
≺(∀y) ((∃x) (C (x) & D (y, x)) ⊃(∃x) (F (x) & D (y, x)).
Essential among these rules are rules whose validity is postulated according to §
72 or which depends on the postulates of § 72 (according to § 74 and § 75). Let us
consider this transformation, in which the rules (VI. 1), (VI. 2), (VI. 8), and (VI. 15)
are applied, step by step. To make for an easier overview, I replace the expressions
‘[C (b)]’, ‘[F (b)]’, and ‘[D (a, b)]’ from line [2] with the letters ‘c’, ‘f’, ‘d’, in sequence:
[]
H (c, f)
≺H (H (f, N d), H (c, N d))
[]
(c ⊃f), c ≺f
(VI. )
[]
(c ⊃f) ≺H (c, f)
(II. )w []
2 Derived Formulas § 76
287

[]
(c ⊃f)
≺H (H (f, N d), H (c, N d))
(I. )w [, ]
Following this, the premise in line [4] can be generalized:
[]
(∀x) (C (x) ⊃F (x)) ≺(c ⊃f)
(VI. )
[]
(∀x) (C (x) ⊃F (x))
≺H (H (f, N d), H (c, N d))
(I. )w [, ]
Then the two hypothetical clauses of the conclusion are to be replaced by truth
functions, namely by f ⊃~ d or by c ⊃~ d:
[]
N d ≺~ d
(VI. )
[]
✶≺H (N d, ~ d)
(II. )w []
[]
~ d ≺N d
(VI. )
[]
✶≺H (~ d, N d)
(II. )w []
[]
H (H (f, N d), H (c, N d)),
H (~ d, N d), H (N d, ~ d)
≺H (H (f, ~ d), H (c, ~ d))
(II. )w
[]
✶, ✶, H (H (f, N d), H (c, N d))
≺H (H (f, ~ d), H (c, ~ d))
(I. )w [, , ]
[]
✶, ✶, (∀x) (C (x) ⊃F (x))
≺H (H (f, ~ d), H (c, ~ d))
(I. )w [, ]
[]
H (H (f, ~ d), H (c, ~ d)),
H ((f ⊃~ d), H (f, ~ d))
≺H ((f ⊃~ d), H (c, ~ d))
(II. )w
[]
(f ⊃~ d), f ≺~ d)
(VI. )
[]
(f ⊃~ d) ≺H (f, ~ d)
(II. )w []
[]
✶≺H ((f ⊃~ d), H (f, ~ d))
(II. )w []
[]
✶, H (H (f, ~ d), H (c, ~ d))
≺H (f ⊃~ d), H (c, ~ g)
(I. )w [, ]
[]
✶, ✶, ✶, (∀x) (C (x) ⊃F (x))
≺H ((f ⊃~ d), H (c, ~ d))
(I. )w [, ]
[]
H (c, ~ d) ≺(c ⊃~ d)
(VI. )
[]
✶≺H (H (c, ~ d), (c ⊃~ d))
(II. )w []
[]
H ((f ⊃~ d), H (c, ~ d)),
H (H (c, ~ d), (c ⊃~ d))
≺H ((f ⊃~ d), (c ⊃~ d))
(II. )w
[]
✶, H ((f ⊃~ d), H (c, ~ d))
≺H ((f ⊃~ d), (c ⊃~ d))
(I. )w [, ]
[]
✶, ✶, ✶, ✶, (∀x) (C (x) ⊃F (x))
≺H ((f ⊃~ d), (c ⊃~ d))
(I. )w [, ]
288
Part II Section Six An Extended System of Deductive Logic

Next, the two truth-functional sub-propositions of the conclusion can be generalized:
[]
(∀x) (F (x) ⊃~ [D (a, x)]) ≺(f ⊃~ d)
(VI. )
[]
✶≺H (((∀x) (F (x) ⊃~ [D (a, x)])), (f ⊃~ [D (a, x)]))
(II. )w []
[]
H (((∀x) (F (x) ⊃~ [D (a, x)])), (f ⊃~ d)),
H ((f ⊃~ d), (c ⊃~ d))
≺H ((∀x) (F (x) ⊃~ [D (a, x)]), (c ⊃~ d))
(II. )w
[]
✶, H ((f ⊃~ d), (c ⊃~ d))
≺H ((∀x) (F (x) ⊃~ [D (a, x)]), (c ⊃~ d))
(I. )w [, ]
[]
✶, ✶, ✶, ✶, ✶, (∀x) (C (x) ⊃F (x))
≺H ((∀x) (F (x) ⊃~ [D (a, x)]), (c ⊃~ d))
(I. )w [, ]
[]
(c ⊃~ d) ≺(∀x) (C (x) ⊃~ [D (a, x)])
(VI. )
[]
✶≺H ((c ⊃~ d), (∀x) (C (x) ⊃~ [D (a, x)]))
(II. )w []
[]
H ((∀x) (F (x) ⊃~ [D (a, x)]), (c ⊃~ d)),
H ((c ⊃~ d), (∀x) (C (x) ⊃~ [D (a, x)]))
≺H ((∀x) (F (x) ⊃~ [D (a, x)]), (∀x) (C (x) ⊃~ [D (a, x)]))
(II. )w
[]
✶, H ((∀x) (F (x) ⊃~ [D (a, x)]), (c ⊃~ d))
≺H ((∀x) (F (x) ⊃~ [D (a, x)]), (∀x) (C (x) ⊃~ [D (a, x)]))
(I. )w
[, ]
[]
✶, ✶, ✶, ✶, ✶, ✶, (∀x) (C (x) ⊃F (x))
≺H ((∀x)(F (x) ⊃~ [D (a, x)]), (∀x)(C (x) ⊃~ [D (a, x)]))
(I. )w [, ]
The contraposition rule can be applied to the conclusion:
[]
H ((∀x) (F (x) ⊃~ [D (a, x)]), (∀x) (C (x) ⊃~ [D (a, x)]))
≺H (N (∀x) (C (x) ⊃~ [D (a, x)]), N (∀x) (F (x) ⊃~
[D (a, x)]))
(II. )w
[]
✶, ✶, ✶, ✶, ✶, ✶, (∀x) (C (x) ⊃F (x))
≺H (N (∀x) (C (x) ⊃~ [D (a, x)]),
N (∀x) (F (x) ⊃~ [D (a, x)]))
(I. )w [, ]
Both clauses of the conclusion can be transformed into truth-functions:
[]
~ (∀x) (C (x) ⊃~ [D (a, x)])
≺N (∀x) (C (x) ⊃~ [D (a, x)]))
(VI. )
[]
✶≺H (~ (∀x) (C (x) ⊃~ [D (a, x)]),
N (∀x) (C (x) ⊃~ [D (a, x)]))
(II. )w []
[]
H (~ (∀x) (C (x) ⊃~ [D (a, x)]), N (∀x) (C (x) ⊃~ [D (a, x)])),
H (N (∀x) (C (x) ⊃~ [D (a, x)]), N (∀x) (F (x) ⊃~ [D (a, x)]))
≺H (~ (∀x) (C (x) ⊃~ [D (a, x)]),
N (∀x) (F (x) ⊃~ [D (a, x)]))
(II. )w
[]
✶, H (N (∀x) (C (x) ⊃~ [D (a, x)]), N (∀x) (F (x) ⊃~ [D (a, x)]))
≺H (~ (∀x) (C (x) ⊃~ [D (a, x)]),
N (∀x) (F (x) ⊃~ [D (a, x)])
(I. )w [, ]
[]
✶, ✶, ✶, ✶, ✶, ✶, ✶, (∀x) (C (x) ⊃F (x))
≺H (~ (∀x) (C (x) ⊃~ [D (a, x)]),
N (∀x) (F (x) ⊃~ [D (a, x)])
(I. )w
[, ]
2 Derived Formulas § 76
289

[]
N (∀x) (F (x) ⊃~ [D (a, x)]) ≺~ (∀x) (F (x) ⊃~ [D (a, x)])
(VI. )
[]
✶≺H (N (∀x) (F (x) ⊃~ [D (a, x)]),
~ (∀x) (F (x) ⊃~ [D (a, x)]))
(II. )w []
[]
H (~ (∀x) (C (x) ⊃~ [D (a, x)]), N (∀x) (F (x) ⊃~ [D (a, x)])),
H (N (∀x) (F (x) ⊃~ [D (a, x)]), ~ (∀x) (F (x) ⊃~ [D (a, x)]))
≺H (~ (∀x) (C (x) ⊃~ [D (a, x)]),
~ (∀x) (F (x) ⊃~ [D (a, x)]))
(II. )w
[]
✶, H (~ (∀x) (C (x) ⊃~ [D (a, x)]), N (∀x) (F (x) ⊃~ [D (a, x)]))
≺H (~ (∀x) (C (x) ⊃~ [D (a, x)]),
~ (∀x) (F (x) ⊃~ [D (a, x)]))
(I. )w
[, ]
[]
✶, ✶, ✶, ✶, ✶, ✶, ✶, ✶, (∀x) (C (x) ⊃F (x))
≺H (~ (∀x) (C (x) ⊃~ [D (a, x)]),
~ (∀x) (F (x) ⊃~ [D (a, x)]))
(I. )w
[, ]
Finally, the hypothetical conclusion can be transformed into a generalized truth
function:
[]
H (~ (∀x) (C (x) ⊃~ [D (a, x)]), ~ (∀x) (F (x) ⊃~ [D (a, x)]))
≺(~ (∀x) (C (x) ⊃~ [D (a, x)]) ⊃~ (∀x) (F (x) ⊃~ [D (a, x)]))
(VI. )
[]
~ (∀x) (C (x) ⊃~ [D (a, x)]) ⊃~ (∀x) (F (x) ⊃~ [D (a, x)]))
≺(∀y) (~ (∀x) (C (x) ⊃~ D (y, x)) ⊃~ (∀x) (F (x) ⊃~ D (y, x)))
(VI. )
[]
✶, ✶, ✶, ✶, ✶, ✶, ✶, ✶, (∀x) (C (x) ⊃F (x))
≺(∀y) (~ (∀x) (C (x) ⊃~D (y, x)) ⊃~ (∀x)
(F (x) ⊃~ D (y, x)))
(I. )w
[, , ]
[]
✶, (∀x) (C (x) ⊃F (x)) ≺
(∀y) (~ (∀x) (C (x) ⊃~D (y, x)) ~ (∀x) (F(x) ⊃~ D (y, x)))
(II.)w []
Since (∃v) A (v), according to (VI. 26) and (VI. 27), is an abbreviation for ‘~ (∀x) ~
A (v)’ and ‘~ (. . . & ~ . . .)’ is equivalent to ‘. . . ⊃. . .’, the consequence in line [50] is
equivalent to:
(∀x) (C (x) ⊃F (x))
≺(∀y) ((∃x) (C (x) & D (y, x)) ⊃(∃x) (F (x) & D (y, x)).225
Second example:
There is something of which everything consists.
Therefore: everything consists of something.
If we replace ‘. . . ≺. . .’ with ‘. . . ∴. . .’, we then get the – somewhat less accurate – expres-
sion which Quine (1959, § 30) offers for the inference, which has been much-discussed since the
medieval period (as an example of a non-syllogistic consequence), ‘All circles are figures; there-
fore, all who draw circles, draw figures’.
290
Part II Section Six An Extended System of Deductive Logic

The validity of this inference is provable if it is specified as follows, letting ‘F (x, y)’
abbreviate for ‘x consists of y’:
(∃y) (∀x) F (x, y) ≺(∀x) (∃y) F (x, y)
Although in this inference, unlike in the first example, no truth functions occur
directly but only an exchange of quantifiers, its validity can be proven on the as-
sumption of rules whose validity is postulated according to § 72 or according to
§ 74 or § 75, which rely on § 72. As the following proof shows, these are the rules
(VI. 1), (VI. 2), (VI. 4), (VI. 5), (VI. 10), and (VI. 15). Because of these rules, the sign ‘≺’
should not be replaced with ‘∴’.
[]
N A ((′x) (∃y) F (x, y), ξ ) ≺I ((′x) N (∃y) F (x, y), ξ )
(VI. )
[]
I ((′x) N (∃y) F (x, y), ξ ) ≺A ((′x) N (∃y) F (x, y), ζ )
(III. )w
[]
A ((′x) N (∃y) F (x, y), ζ ) ≺Ạ((′x) N (∃y) F (x, y), ζ )
(III. )w
[]
Ạ((′x) N (∃y) F (x, y), ζ ) ≺N Ạ((′x) (∃y) F (x, y), ζ )
(V. )
[]
[(∃y) F (a, y)] ≺Ạ((′x) (∃y) F (x, y), ζ )
(V. )
[]
N Ạ((′x) (∃y) F (x, y), ζ ) ≺N [(∃y) F (a, y)]
(I. )w []
[]
N A ((′x) (∃y) F (x, y), ξ ) ≺N [(∃y) F (a, y)]
(I. )w [, , , , ]
[]
I ((′y) F (a, y), ξ ) ≺(∃y) F (a, y)
(V. )
[]
N [(∃y) F (a, y)] ≺N I ((′y) F (a, y), ξ )
(I. )w []
[]
N I ((′y) F (a, y), ξ ) ≺N A ((′y) F (a, y), ξ )
(III. )w
[]
N A ((′y) F (a, y), ξ ) ≺I ((′y) N F (a, y), ξ )
(VI. )
[]
I ((′y) N F (a, y), ξ ) ≺A ((′y) N F (a, y), ζ )
(III. )w
[]
A ((′y) N F (a, y), ζ ) ≺Ạ((′y) N F (a, y), ζ )
(III. )w
[]
Ạ((′y) N F (a, y), ζ ) ≺N [F (a, b)]
(I. )w [ , ]
[]
N A ((′x) (∃y) F (x, y), ξ ) ≺N [F (a, b)]
(I. )w [, , , , , , ]
[]
(∀x) F (x, b) ≺[F (a, b)]
(VI. )
[]
N [F (a, b)] ≺N (∀x) F (x, b)
(I. )w []
[]
N (∀x) F (x, b) ≺~ (∀x) F (x, b)
(VI. )
[]
~ (∀x) F (x, b) ≺(∀y) ~ (∀x) F (x, y)
(VI. )
[]
N [F (a, b)] ≺(∀y) ~ (∀x) F (x, y)
(I. )w [, , ]
[]
N A ((′x) (∃y) F (x, y), ξ ) ≺(∀y) ~ (∀x) F (x, y)
(I. )w [, ]
[]
N (∀y) ~ (∀x) F (x, y) ≺NN A ((′x) (∃y) F (x, y), ξ )
(I. )w []
[]
~ (∀y) ~ (∀x) F (x, y) ≺N (∀y) ~ (∀x) F (x, y)
(VI. )
[]
✶≺(∃y) (∀x) F (x, y) ⊃~ (∀y) ~ (∀x) F (x, y)
(VI. )
[]
((∃y) (∀x) F (x, y) ⊃~ (∀y) ~ (∀x) F (x, y))
≺H ((∃y) (∀x) F (x, y), ~ (∀y) ~ (∀x) F (x, y))
(VI. )
[]
✶≺H ((∃y) (∀x) F (x, y), ~ (∀y) ~ (∀x) F (x, y))
(I. )w [, ]
[]
✶, (∃y) (∀x) F (x, y) ≺~ (∀y) ~ (∀x) F (x, y))
(II. )w []
[]
NN A ((′x) (∃y) F (x, y), ξ ) ≺A ((′x) (∃y) F (x, y), ξ )
(VI. )
[]
A ((′x) (∃y) F (x, y), ξ ) ≺(∀x) (∃y) F (x, y)
(V. )
[]
(∃y) (∀x) F (x, y) ≺(∀x) (∃y) F (x, y)
(I. )w [, , , , ]
Within the framework of the calculus of functions (i.e., in classical predicate logic)
there are of course much shorter and simpler methods for the validity proofs of
the two examples of contentful inference discussed here. Here, in § 76, it is not
2 Derived Formulas § 76
291

supposed to be shown that there is a more cumbersome and complicated method.
Rather, the examples should make clear that even for categorical propositions
with a low complexity of conceptual content, the number of logical steps underly-
ing inferences related to this content can be very great. In the shorter and simpler
methods used in classical predicate logic these steps take place covertly.
292
Part II Section Six An Extended System of Deductive Logic

