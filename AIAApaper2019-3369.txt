Automated Wing Internal Structure Placement Guided by
Finite Element Analysis
Justin L. Clough∗and Assad A. Oberai†
University of Southern California, Los Angeles, CA, 90089
Andrew J. Zakrajsek‡
AFRL/RQHV, Wright-Patterson AFB, Dayton, OH, 45433
The global structural design layout is typically missing in the early conceptual phase of
aircraft design; the internal structure itself is usually left uninitialized until the external
geometry of the vehicle is ﬁnished.
This can lead to errors in the predicted performance
of the aircraft. This work details and demonstrates a program, GRASP, which automatically
determines the optimal structural layout of traditional components (ribs and spars) for use
in this early design stage. A user needed to only provide a wing outer mold line, material
properties, vehicle weight, and allowable wing tip deﬂection. A branch-and-cut style algorithm
was implemented to explore the design space of possible rib and spar conﬁgurations. For
each conﬁguration, a design ﬂow of parametric geometry creation, discretization, and ﬁnite
element analysis was performed automatically using all open source software packages. This
was demonstrated for a wing and other parameters representative of the X-15 aeroplane. The
GRASP program calculated a optimal initial design layout of 5 ribs and 2 spars in 139 minutes; it
evaluated a total of 11 diﬀerent conﬁgurations and successively selected the one which lowered
wing tip deﬂection. Future work includes adding a more representative loading conditions to
match those seen in ﬂight and methods to decrease program run time.
Nomenclature
GRASP
=
Guided Rib And Spar Placement
MER
=
Mass Estimating Relations
FE
=
Finite Element
AM
=
Additive Manufacturing
OML
=
Outer Mold Line
ESP
=
Engineering Sketch Pad
Introduction
The conceptual design of modern aerospace systems is grounded in various multi-disciplinary design processes.
These conceptual designs typically focus on the aerodynamic performance, weight assumptions, trajectory analysis,
and overall ability of the system to meet the design requirements. A key discipline missing from the majority of early
conceptual design, is the global structural design. This is due to the complex nature and knowledge required to design
the internal structural layout of a new aerospace system [1–3]. Compounding this complexity is the ever changing
vehicle geometry during the conceptual design phase, mainly due to recent advances in parametric geometry. Due
to the early design ﬂuidity, the conceptual structural design has been mainly incorporated in design loops through
material selection and the resulting empirical Mass Estimating Relations (MERs) [1]. These relations are used until
the conceptual design is nearly ﬁnalized, which then initializes the structural design. The structural design typically
starts with rough hand calculations, up to Finite Element (FE) methods, and eventual structural testing. At this point in
the design cycle it is typically too late to greatly aﬀect the overall system design [2]. Therefore, the ﬁnal conceptual
∗PhD Student, Aerospace and Mechanical Engineering Department, 854 Downey Way, RRB 101.
†Professor, Aerospace and Mechanical Engineering Department, 854 Downey Way, RRB 101.
‡Research Engineer, Air Force Research Laboratory, AFRL/RQ Bldg. 45, 2130 Eighth Street, Wright-Patterson AFB, OH 45433.
1

design can complicate the structural design and result in increased weight or reduced eﬃciency of the system. The early
incorporation of structural design is important for understanding the proposed system’s feasibility, generating accurate
weight predictions, assisting the multi-disciplinary design trade space exploration, and guiding the system to an optimal
solution.
To generate rapid conceptual design trades, the structural layout and design should mainly be automated at the
conceptual level. Automated structural design and layout has mainly been researched in two separate thrusts: (1)
topology optimization, and (2) automated conventional structural optimization and layout. Advanced topology methods
have been shown to produce optimal internal geometries with respect to minimizing stress, weight, and other key
variables [4, 5]. While this research does show future beneﬁt for the aerospace industry, it is also directly coupled to the
current state of Additive Manufacturing (AM). A few of the top research challenges for AM when focused on aerospace
system structures are: understanding and predicting damage, machine to machine variability, print scale limitations,
and cost of AM [6–8]. Until these areas of research are better understood, AM is not currently a viable solution for
traditional aerospace structures. With this understanding, this work focused on the near-term, beneﬁts of automating the
structural layout process and incorporating the results early in the conceptual design. While the automated structural
layout can be considered a form of topology optimization, it will only be denoted as automated layout throughout this
work.
Automating the structural layout process requires a speciﬁc and detailed focus on the design geometry, in addition to
the selection of a structural analysis method. Recent research is focusing on incorporating structural design earlier in the
design loop through automated hand calculation methods [1]. This is aimed at incorporating initial structural design
early in the design loop without the need for structural expertise. Adding to this other research has suggested that due
to increased computational power, the inclusion of FE method is possible early in conceptual design loop [9]. There
are beneﬁts from incorporating the more detailed FE analysis early in the design loop, however, this also introduces
new challenges, like automatic mesh generation. This issue is mainly addressed within the design framework. A
structural optimization method was completed using FE analysis, automatic mesh generation, and a framework (python)
environment [10]. The framework becomes extremely important for the incorporation of the structural design in the
multi-disciplinary conceptual design loop. As the design and geometry change the structural design needs to adapt and
change. This can be completed using parametric geometry, so the FE method and structural layout update as the vehicle
design updates [11]. Using geometry as the center of an automated parametric design loop showed to be an important
step for linking the structural design within the conceptual design loop [12, 13]. Therefore, to truly bring automated
structural design and placement early in the design loop, there needs to be a focus on common design geometry across
disciplines and a framework capable of FE analysis. This leads to the ability to take a conceptual Outer Mold Line
(OML) to an initial structural layout without the structural designer in the loop.
Completing the automatic structural layout at a conceptual level requires design knowledge held by structural
experts. The vast majority of research in this area has looked at automatically laying out the structure by manually
specifying the number of supports throughout the structure. This method still requires an engineer in the loop during
the conceptual design. The manual layout of the initial structure for the conceptual design takes time, however, needs
to be completed to allow a starting point for the FE analysis. For this work an initial structural placement will be
completed using a branch-and-cut style algorithm [14]. This will work to initialize the structural design and allow
varying internal automated layouts to take place. The selection of the ﬁnal automated layout can be performed following
design constraints and objectives similar to topology optimization (minimize stress, etc.). Therefore, an OML can
be entered into the loop, and the structural design model can continue to add supports while analyzing the structure
to ﬁnalize an initial solution. Eventually, the goal would be to add an element of knowledge-based conceptual and
preliminary structural design practices to this placement model [15–17]. While this is outside the work presented here,
this area can become extremely beneﬁcial for future conceptual structural designs as an ability to acquire a faster and
higher ﬁdelity automated conceptual structural design.
The work presented here has the goal of highlighting the most advantageous method to achieve early automated
structural conceptual designs, within the multi-disciplinary design loop independent of direct structural designer
expertise. To accomplish this the automated layout process needs an OML input, design loads, and objective (i.e.,
minimize wing deﬂection below an allowable amount). The automation framework then should be linked to the same
parametric geometry engine, a layout generation method, FE analysis, and a tailorable framework. The resulting work
highlights how an automated conceptual design framework was setup to automate a structure layout without any input
from the structural designer.
2

Methods
The goal was to develop an automated workﬂow to solve an optimal parametric structural layout problem. In this
problem, a user speciﬁes a design constraint that must be satisﬁed, and a set of integer parameters that deﬁne the
geometry of the structure. The goal is to ﬁnd an optimal value of these parameters that would achieve the design
constraint. In the speciﬁc problem considered, the design constraint is a bound on the maximum allowable tip deﬂection
of a wing under a prescribed loading, the integer parameters are the number of ribs and spars in the wing, and the goal is
to ﬁnd the smallest number of spars and ribs that would achieve the tip-deﬂection constraint.
In order to solve this problem, the workﬂow described in Figure 2 was developed. Here the ﬁrst portion is a geometry
creation component, which given the value of the parameters of interest, generates the geometry of the structure. The
second component further processes this geometry and generates a FE mesh for it. The third component uses this mesh
to solve a structural analysis problem and evaluates the value of the design constraint. Once this workﬂow is established,
it may be used to solve the optimal structural design problem using an appropriate integer programming algorithm.
Since the focus of this paper is to demonstrate how this workﬂow can be established, a simple integer optimization
algorithm, that is the branch-and-cut method, was used to solve this problem [14]. This algorithm proceeds as follows:
1) Start with an initial conﬁguration that does not satisfy the design constraint.
2) Increment each integer parameter by 1, and use the workﬂow to generate multiple designs and to determine the
design constraint for each design.
3) If the design constraint is satisﬁed by one or more designs, the problem is solved.
4) If no design satisﬁes the constraint, select the one that provided the largest drop in the constraint, and go to Step 2.
The diﬀerent conﬁgurations formed the nodes of a tree which was traversed in a depth-ﬁrst manner. An example of this
tree is shown in Figure 1.
Initial Problem:
1 Rib, 1 Spar
2 Ribs, 1 Spar
1 Rib, 2 Spar
2 Ribs,
2 Spars
1 Ribs,
3 Spars
Fig. 1
Example decision tree with conﬁgurations as nodes.
A python script, GRASP∗, (Guided Rib And Spar Placement) was written to implement the design ﬂow logic and to
operate the branch-and-cut algorithm. This design ﬂow is shown in Figure 2; it includes component creation, geometry
management and discretization, and the FE analysis.
Component Creation:
• Read wing OML.
• Create desired
number of ribs.
• Create desired
number of spars.
Geometry Management
and Discretization:
• Read in wing
components.
• Label boundaries of
interest.
• Discretize into a
mesh.
Finite Element Analy-
sis:
• Read in mesh.
• Assign material
properties and
boundary conditions
• Solve for
displacements.
Fig. 2
Automatic design ﬂow logic and steps.
Templated base input ﬁles were created for use with each of the subprograms used at each step of the design ﬂow. The
python script edited the corresponding input ﬁle for the speciﬁc problem conﬁguration. It then called each subprogram
in the necessary order.
∗GRASP repository at github.com/JustinClough/grasp
3

The script based geometry kernel Engineering Sketch Pad (ESP) was used to create a geometry of a problem of
interest [18]. For this study, the base geometry was the right wing of the X-15, borrowed from [19]. This geometry was
then populated with ribs and spars; these components each had a prescribed thickness. The ribs and spars were written
to disk and then read into Gmsh [20]. This software then joined all components together through boolean fragmentation
and unions to form a single solid geometry. It then was used to produce a second order tetrahedral mesh discretization
of this geometry. The FE analysis software Albany [21] then read in this mesh, solved a linear elastic problem, and
calculated the deformation and stresses of the geometry in the wing under a predeﬁned load condition. Each of these
design ﬂow steps are described in detail in the following subsections.
Parametric Geometry with ESP
Two sets of two .udc ﬁles were written to allow a user to parametrically place ribs and spars for any wing shape.
A .udc ﬁle contains a user deﬁned function. One of these ﬁles, make_rib.udc, allows the user to place a rib at a
speciﬁed percent-span. The other in this set is even_ribs.udc; this calls make_rib.udc to place a user deﬁned
number of ribs evenly throughout the span of the wing. A similar set of programs were created for spar placement.
A templated input script was created and used for each problem conﬁguration considered. The numbers of ribs and
spars were automatically edited. Next, the ESP binary was called as a subprocess. The geometries created by these
scripts were then written to disk as .stp ﬁles [22]. Each component was written in its own .stp ﬁle. The generic
method was rib_R.stp contained all geometric information of rib number R; spar_S.stp contained all geometric
information of spar number S. When ﬁnished, the output was checked for errors.
Three main types of wing shapes were tested to verify the .udc ﬁles worked as expected. The three wing shapes
were Standard, Double Delta, and Double Dihedral. Examples of these shapes are shown in Figure 3.
(a) Standard.
(b) Double Delta.
(c) Double Dihedral.
Fig. 3
Geometries of the three base wing types.
The rib and spar ﬁle sets were then able to be read into Gmsh. The tessellation automatically performed by ESP was not
used for the FE analysis.
Geometry Management and Discretization
A template Gmsh script ﬁle was created and automatically edited for each problem conﬁguration. The script ﬁrst
read the ﬁrst spar and rib from disk. It then used boolean fragmentation and unions to form a new single continuous
volume from the two components. The next component was then read from disk and added to the union in a similar
method. This was repeated for all components until a single volume was formed that had all ribs and spars.
Boundaries of interest were then automatically found and labeled. This included the wing root surfaces and the
wing underside. Each spar root surface was found by identifying the surface enclosed in a thin bounding box near the
wing root and at the corresponding percent chord. The wing underside was determined as the surface with the lowest
boundary. These surfaces were labeled such that boundary conditions could be applied during the FE analysis step.
The geometry was then discretized into second order tetrahedral elements. A size ﬁeld was speciﬁed such that at
least two elements spanned any geometric feature.
4

Finite Element Model
Two template Albany input ﬁles were created and automatically edited for each problem conﬁguration. The ﬁrst ﬁle
dictated boundary conditions and linear algebra solver parameters. The second ﬁle speciﬁed material information such
as model type and properties.
A linear elastic material model was used. The user speciﬁed the Young’s modulus and Poisson ratio for the material.
All components of the wing used the same material model and properties. The elements used were 10-node composite
tetrahedrons [23]. These elements were chosen after testing in order to ensure that they did not suﬀer from shear locking
often observed in some standard FE formulations.
All degrees of freedom on the wing root surface were assigned a homogeneous Dirichlet boundary condition. The
underside of the wing was assigned a Neumann boundary condition of a uniform upward traction. The magnitude of
this traction was calculated by distributing a user deﬁned total weight over the lower surface area. This was to represent
the lift from airﬂow over the wing.
Workﬂow Demonstration
Wing tip deﬂection was brought below a prescribed allowable level using the GRASP program for a example aircraft.
The OML of the X-15 was used as the base wing geometry [19]. Material properties of Ti6Al4V were used; these
were a Young’s modulus of 113.8 GPa and a Poisson’s ratio of 0.342 [24]. A weight of 123.0 KN, representing the
full weight of the X-15 [19], was distributed uniformly as an upward pressure over the bottom face of the wing. This
approximated the load of a 2G maneuver on the wing frame. The spars were created with thicknesses of 30 mm; ribs
had a thickness of 5 mm. An allowable tip deﬂection of 5 cm was used.
Results
Images showing the internal geometries created by the .udc ﬁles are shown for veriﬁcation of expected function
behavior. This includes internal views for both the Double Delta and Double Dihedral wings. Images and plots from the
tip deﬂection demonstration are presented as well. These include a surface plot tip deﬂection with respect to considered
conﬁgurations and images of meshes used for the FE model. Solution times and timing breakdowns are also shown.
Validation of .udc Files
The .udc ﬁles were tested on the Double Delta and Double Dihedral wing types shown in Figure 3. Figure 4 shows
the variability of the number of internal components which can be placed. An isometric view of the internal components
for the Double Delta wing is shown in Figure 5; a similar view for the Double Dihedral is shown in Figure 6. Images
show components with zero thickness for clarity.
(a) Few internal components.
(b) Mixed number of internal components.
(c) Many internal components.
Fig. 4
Double delta wing with diﬀering numbers of parametrically placed internal supports.
5

(a) External view.
(b) Top surface removed.
Fig. 5
Double delta wing with and without top surface to show geometries of the internal components.
(a) External view.
(b) Top surface removed.
Fig. 6
Double dihedral wing with and without top surface to show geometries of the internal components.
Demonstration Of Full Workﬂow
A surface plot generated by computing the tip deﬂection for numbers of ribs and spars is shown in Figure 7. A spar
and rib thickness of 30 mm and 4 mm, respectively, was used along with the geometry and weight for the X-15. This
shows the sensitivity of the deﬂection at the tip of the wing to various conﬁgurations of ribs and spars.
2
4
6
8
2
4
6
8
10−3
10−2
10−1
100
Spars
Ribs
Tip Deﬂection (m)
Fig. 7
Tip deﬂection with respect to numbers of ribs and spars.
6

The maximum tip deﬂection was for the 1-rib, 1-spar conﬁguration and was 14.6 meters. The minimum tip deﬂection
was 5.9 mm for the 8-rib, 8-spar conﬁguration.
A demonstrative problem was run to test the entire workﬂow. In this problem the goal was to ﬁnd the integer
combination of ribs and spars that produced a tip deﬂection for a X-15 wing less than 5 cm with the fewest number
of total components. The initial conﬁguration was a wing with a single rib and spar. The skin of the wing was not
modeled; it was determined that it did not provide signiﬁcant bending stiﬀness to the structure. The entire load on the
wing, equal to 123.0 KN, was distributed uniformly on the lower surface of the ribs and spars.
The path selected by the optimization algorithm is shown in Table 1 and Figure 8. The algorithm reached the
prescribed constraint in 5 steps. Each step required the generation of two conﬁgurations and the solutions of the
corresponding structural problems. The ﬁnal conﬁguration comprised of 5 ribs and 2 spars produced a tip deﬂection of
3.62 cm. As shown in Figure 8, the algorithm added the second spar in the second step and thereafter always preferred
adding a rib over another spar.
Table 1
Intermediate conﬁgurations and deﬂections.
Step Number
Ribs
Spars
Displacement [mm]
0
1
1
4040.0
1
2
1
966.7
2
2
2
345.5
3
3
2
137.0
4
4
2
66.3
5
5
2
36.2
1 Rib,
1 Spar
2 Ribs,
1 Spar
3 Ribs,
1 Spars
2 Ribs,
2 Spars
3 Ribs,
2 Spars
4 Ribs,
2 Spars
5 Ribs,
2 Spars
4 Ribs,
3 Spars
3 Ribs,
3 Spars
2 Ribs,
3 Spars
1 Rib,
2 Spar
Fig. 8
Path taken by GRASP to build wing frame. Conﬁguration that lowered tip deﬂection is circled at each
level.
The value of tip deﬂection at each step for the two conﬁgurations that were evaluated, one with an extra rib and
another with an extra spar, is shown in Figure 9. It was observed that except for the second step, the tip deﬂection
produced by adding an extra rib was smaller than that produced by adding and extra spar.
7

1
2
3
4
5
102
103
Step Number
Tip Deﬂection [mm]
Tip Deﬂection At Each Step
Added Rib
Added Spar
Fig. 9
Tip deﬂection with respect to the number of steps taken for adding either a rib or spar.
The total computer time required for generating and solving the two conﬁgurations at each step is shown in Figure
10. The solution time grows by a factor of 10 between the ﬁrst and the last step. This is because with each step as
more components are added to the model, the eﬀort required to construct and mesh the geometry and then to solve
the corresponding FE problem increases. At each step the time required to solve the problem with an extra rib was
21% to 32% more than the time required for the extra spar problem. This can be attributed to the extra eﬀort required
in meshing the thin region near the trailing edge. This plot also illustrates the advantage of using the branch-and-cut
algorithm over an exhaustive search; spanning the entire parameter space would become prohibitive with the increasing
number of components in the latter approach.
1
2
3
4
5
0
500
1,000
1,500
2,000
Step Number
Time [s]
Solution Time At Each Step
Added Rib
Added Spar
Fig. 10
Time to calculate solution for each conﬁguration with respect to the number of steps taken for adding
either a rib or spar.
The number of ﬁnite elements generated for the two conﬁgurations at each step of the algorithm are shown in Figure
11. These increase by 5,000 to 10,000 with each step and rise to a total of 50,0330 for the ﬁnal evaluated conﬁguration.
On average, spars and ribs required roughly 9000 and 5000 elements to model, respectively.
8

1
2
3
4
5
2
3
4
5
·104
Step Number
Number of Elements
Number Of Elements At Each Step
Added Rib
Added Spar
Fig. 11
Finite elements in each mesh for each conﬁguration compared to the number of steps taken for
adding either a rib or spar.
Table 2 provides a break-down of the computational time spent in the three main components of the workﬂow:
geometry creation in ESP, geometry processing and mesh generation in Gmsh, and FE analysis in Albany. For the initial
conﬁguration, the time spent in Gmsh and Albany was similar and was three times the time spent in ESP. However,
for the ﬁnal few conﬁgurations the situation was reversed; here most of the time was spent in combining the diﬀerent
components and then meshing them in Gmsh. Remarkably the time required for the FE analysis was less than a tenth of
this time. This may be attributed to the advanced solvers and preconditioners used within Albany [21]. The program
took a total of 139 minutes to run on a Linux workstation with a i5-7400 CPU which had a clock speed of 3 GHz.
Table 2
Time in each portion of the design ﬂow throughout evaluated conﬁgurations. All times in seconds.
Step Number
Ribs
Spars
Geometry Creation
Geometry Management and Discretization
FE Analysis
0
1
1
13
39
39
1
2
1
14
66
89
2
2
2
14
287
69
3
3
2
16
656
91
4
4
2
16
1206
112
5
5
2
16
1871
122
In Figure 12, the geometry and the mesh at each step are plotted; in Figure 13 the deformed shape of the conﬁguration
is shown. In this ﬁgure, for each conﬁguration, the surface is colored with the magnitude of displacement. The maximum
deﬂection occured at the tip of the spar closer to the leading edge, and that with each new rib that was added the
magnitude of this displacement, as well as the diﬀerence between the tip deﬂection of this spar and the one downstream
of it, reduced.
9

(a) Step 0: 1 Rib, 1 Spar.
(b) Step 1: 2 Rib, 1 Spar.
(c) Step 2: 2 Rib, 2 Spar.
(d) Step 3: 3 Rib, 2 Spar.
(e) Step 4: 4 Rib, 2 Spar.
(f) Step 5: 5 Rib, 2 Spar.
Fig. 12
Meshes used at diﬀerent solution steps.
10

(a) Step 0: Scale of 0.1.
(b) Step 1: Scale of 1.0.
(c) Step 2: Scale of 1.0.
(d) Step 3: Scale of 5.0.
(e) Step 4: Scale of 10.
(f) Step 5: Scale of 20.
Fig. 13
Mesh at each step with displacement magnitude contour plot and deformed with the displacement
vector; scale factors used to show deﬂections.
Discussion and Closing Remarks
The GRASP program was able to solve an optimal parametric structural layout problem by automatically creating
an initial frame design. A user speciﬁed design constraint, maximum allowable wing deﬂection, was satisﬁed by
determining the integer numbers of ribs and spars to populate the wing frame for a demonstrated vehicle. A simpliﬁed
version of the branch-and-cut method was used to step through possible conﬁgurations. For each conﬁguration, a design
ﬂow consisting of component creation, geometry discretization, and a FE analysis was executed.
The components of the wing frame were created using the parametric, script-based, geometry kernel ESP. Each
11

component was written to disk and then read into Gmsh automatically. The components were then unioned together to
form one continuous volume which represented the wing frame. Boundaries of interest were tagged and the volume was
discretized into a FE mesh which was written to disk. This mesh was then read into Albany where boundary conditions
and material properties were assigned. The FE problem was then solved for nodal displacements.
The demonstration shows that the GRASP program was able to create a design for the frame of a wing OML
automatically in approximately 2 hours. In this time it considered 11 diﬀerent conﬁgurations and successively chose the
one which lowered tip deﬂection. This was done using all open-source software packages.
This work demonstrates a viable method to bring structural layout into the initial design phase for aircraft. It does
so without the need for a structural design specialist present. This will beneﬁt the air vehicle design community by
introducing greater modeling accuracy earlier in the design process. In turn this will lead to aircraft designs which
more eﬃciently meet their design criteria. Additionally, layouts generated using GRASP rely on traditional and tested
manufacturing methods.
Future Work
Possible improvements would include allowing for diﬀerent materials throughout the wing, modeling the wing skin
with stringers, and testing under more load cases. These additions would allow for more accurate modeling of the wing
in use.
Allowing for diﬀerent components to have diﬀerent material properties would generalize the given method. Some
but not all wing constructions use the same material throughout the wing. For example, the X-15 used both Inconel
and Titanium alloys in its wing construction, [25, 26], whereas a commercial Cessna uses the same Aluminum alloy
throughout the wing, only diﬀering by temper [27]. Additionally, diﬀerent material models could be used on diﬀerent
components. These models would include the pertinent physical behavior needed to understand the performance of the
design. Including the wing skin and stringers would also increase the general accuracy of the model. This would be
especially important for more complex load cases where the stringers and skin must distribute the aerotractions to the
ribs and spars. Lastly, more complex load cases could be created and designed for to better represent those in ﬂight.
The GRASP software can also be made faster by a few methods. First, conﬁgurations can be processed in parallel;
this would decrease the total solution time to near half. Second, both Gmsh and Albany are able to operate in parallel
[20, 21]. Calling these application with parallel resources would also decrease the time to solve each conﬁguration.
Finally, each step of the design ﬂow shown in Figure 2 starts and end with reading a writing to the disk. Processing fully
in memory without the ﬁle input/output would also decrease the total time to calculate solutions.
Acknowledgments
The authors thank the DoD Science, Mathematics, And Research for Transformation (SMART) Scholarship for
Service Program which sponsored this work.
References
[1] Horvath, B. L., “Aircraft Conceptual Structural Design Using The AMMIT Structural Analysis Tool,” AIAA Scitech 2019
Forum, 2019.
[2] Alyanak, E., and Kolonav, R., “Eﬃcient Supersonic Air Vehicle Structural Modeling For Conceptual Design,” 12th
AIAA Aviation Technology, Integration, and Operations Conference and 14th AIAA/ISSMO Multidiciplinary Analysis and
Optimization Conference, 2012.
[3] Sensmeier, M., and Samareh, J., “Automatic Aircraft Structural Topology Generation For Multidisciplinary Optimization and
Weight Estimation,” 46th AIAA/ASME/ASCE/AHS/ASC Structures, Structural dynamics and Materials Conference, 2005.
[4] Saitao, K., Izui, K., Nishiwaki, S., and Papalambros, P., “A Survey of Structural Optimization in Mechanical Product
Development,” Transactions of the ASME, Vol. 5, 2005.
[5] Brampton, C., Kim, H., and Cunningham, J., “Level Set Topology Optimization of Aircraft Wing Considering Aerostructural In-
teraction,” 12th AIAA Aviation Technology, Integration, and Operations Conference and 14th AIAA/ISSMO Multidiciplinary
Analysis and Optimization Conference, 2012.
[6] Frazier, W. E., “Metal Additive Manufacturing: A Review,” Journal of Materials Engineering and Performance, Vol. 23, No. 6,
2014.
12

[7] Uriondo, A., Esperon-Miguez, M., and Perinpanayagam, S., “The present and future of additive manufacturing in the aerospace
sector: A review of important aspects,” Proceedings of the Institution of Mechanical Engineers, Part G: Journal of Aerospace
Engineering, Vol. 229, No. 11, 2015, pp. 2132–2147.
[8] Wong, K. V., and Hernandez, A., “A Review of Additve Manufacturing,” International Scholarly Research Network: Mechanical
Engineering, Vol. 2012, 2012.
[9] Mason, B. H., and Quinlan, J., “Conceptual Design Shop: A Tool for Rapid Airframe Structural Modeling,” 2018
AIAA/ASME/AHS/ASC Structures, Structural Dynamics, and Materials Conference, 2018.
[10] Hwang, J., Kenway, G., and Martins, J., “Geometry And Structural Modeling For High-Fidelity Aircraft Conceptual Design
Optimization,” 15th AIAA/ISSMO Multidisciplinary Analysis and Optimization Conference, 2014.
[11] Padula,
S.,
Robinson,
J.,
and Eldred,
L.,
“Structural Analysis In A Conceptual Design Framework,”
53rd
AIAA/ASME/ASCE/AHS/ASC Structures, Structural Dynamics and Materials conference, 20th AIAA/ASME/AHS Adaptive
Structures Conference, 14th AIAA, 2012.
[12] lazzara, D., Parham, J., and Haimes, R., “On Structural Layout Using Multiﬁdelity Geometry in Aircraft Conceptual Design,”
48th AIAA Aerospace Sciences Meeting including the New Horizons Forum and Aerospace Exposition, 2010.
[13] Bryson, D., Rumpfkeil, M., and Durscher, R., “Framework for Multiﬁdelity Aeroelastic Vehicle Design Optimization,” 18th
AIAA/ISSMO Multidisciplinary Analysis and Optimization Conference, 2017.
[14] Padberg, M., and Rinald, G., “A Branch-And-Cut Algorithm For the Resolution Of Large-Scale Symmetric Traveling Salesman
Problems,” Society for Industrial and Applied Mathematics Review, 1991.
[15] Anemaat, W. A., Kaushik, B., Hale, R. D., and Ramabadran, N., “AAARaven: Knowledge-Based Aircraft Conceptual and
Preliminary Design,” 48th AIAA/ASME/ASCE/AHS/ASC Structures, Structural Dynamics, and Materials Conference, 2007.
[16] Niu, C., “Airframe Structural Design: Practical Design Information and Data on Aircraft Structures,” Hong Kong: Conmilit
Press Limited, 1999.
[17] Sensmeier,
M.,
and Samareh,
J.,
“A Study Of Vehicle Structural Layouts In Post-WWII Aircraft,”
45th
AIAA/ASME/ASCE/AHS/ASC Structures, Structural Dynamics and Materials Conference, 2004.
[18] Haimes, R., and III, J. F. D., “The Engineering Sketch Pad: A Solid-Modeling, Feature-Based, Web-Enabled System for
Building Parametric Geometry,” Fluid Dynamics and Co-located Conference: 21st AIAA Computational Fluid Dynamics
Conference, 2013.
[19] Gochenaur, D., “Rapid Geometry Generation and Basic Comparison of Aerodynamic Performance Using the X-15 Hypersonic
Test Vehicle,” Internal Report, 2017.
[20] Geuzaine, C., and Remacle, J.-F., “Gmsh: A Three-Dimensioal Finite Element Mesh Generator With Generator With Bruild-In
Pre- and Post-processing Facilities,” International Journal For Numerical Methods In Engineering, Vol. 79, 2009.
[21] Salinger, A. G., Bartless, R. A., Bradley, A. M., Chen, Q., Demeshko, I. P., Gao, X., Hansen, G. A., Mota, A., Muller,
R. P., Nielsen, E., Ostien, J. T., Pawlowski, R. P., Perego, M., Phipps, E. T., Sun, W., and Tezaur, I. K., “Albany: using
Component-Based Design To Develop A Flexible, Generic Mulitphysics Analysis Code,” International Journal For Multiscale
Computaional Engineering, Vol. 14, No. 4, 2016.
[22] Mayes, R., Swope, K., Mathew, L., and Stanton, B., “ISO 10303-21:2016: Industrial Automation Systems and Integration-
Product Data Representation And Exchang-Part 21: Implementation Methods: Clear Text Encoding Of The Exchange Strcuture,”
International Organization for Standardization Catalogue, Vol. 21, 2016.
[23] Ostien, J. T., Foulk, J. W., Mota, A., and Veileux, M. G., “A 10-Node Composite Tetrahedral Finite Element For Solid
Mechanics,” International Journal For Numerical Methods In Engineering, Vol. 107, 2016.
[24] Boyes, R., Welsch, G., and Collings, E., “Materials Properties Handbook: Titanium Alloys,” ASM International, 1994.
[25] Kordes, E. E., Reed, R. D., and Dawdy, A. L., “Structural Heating Experiences On The X-15 Airplane,” National Aeronautics
and Space Administration: Technical Memorandum, 1962.
[26] Price, A. B., “Design Report-Thermal Protection System X-15A-2,” National Aeronautics and Space Administration: Technical
Memorandum, 1968.
[27] Company, C. A., Maintenance Manual: Single Engine Models 172, 182, T182, 206 and T206 1996 And On, PO Box 7706,
Wichita, KS 67277-7706, 4th ed., 6 2005.
13

