2 Propositional logic
In this chapter we will utilize mathematical tools, namely induction and recursion, to
formally investigate an important form of logic called propositional logic. In particular,
we will establish a number of significant theorems concerning the syntax and semantics
of propositional logic. An informal introduction to this topic is given in Section 1.2.1.
2.1 The language
The syntax of the language of propositional logic is specified by first identifying the sym-
bols (the alphabet) of the language and then defining expressions to be any finite string
of these symbols. Some expressions are meaningful while others are not. To single out
the meaningful expressions requires a recursive definition (see Section 1.1.5). The mean-
ingful expressions in propositional logic will be called well-formed formulas (wffs).
Definition 2.1.1. Our official language for propositional logic, denoted by ℒ, consists of
the distinct symbols in the set
ℒ= { (, ), ¬, ∧, ∨, →, ↔, A1, A2, . . . , An, . . . },
where the symbols in the language ℒare described in the following table:
Symbol
Name
Remark
(
left parenthesis
punctuation
)
right parenthesis
punctuation
¬
negation
English: not
∧
conjunction
English: and
∨
disjunction
English: or
→
conditional
English: if , then
↔
biconditional
English: if and only if
Aస
first sentence symbol
Aహ
second sentence symbol
...
...
An
n-th sentence symbol
...
...
Remark. Several remarks are in order:
1.
The distinct symbols ¬, ∧, ∨, →, ↔are called logical connectives.
2.
The infinite number of distinct symbols A1, A2, . . . , An, . . . are called sentence sym-
bols. Each Ai stands for a particular sentence.
Recall that ⟨a1, a2, . . . , an⟩denotes a sequence (see Definition 1.1.6).
https://doi.org/10.1515/9783110782073-002

28
౪
2 Propositional logic
Definition 2.1.2. An ℒ-expression is a finite string of symbols from ℒobtained by omit-
ting the sequence brackets ⟨⟩and the commas from a finite sequence of symbols from ℒ.
If α and β are ℒ-expressions, then αβ is the ℒ-expression consisting of the symbols in the
expression α followed by the symbols in the expression β.
Example 2.1.3. Clearly, ⟨(, ¬, A1, )⟩is a finite sequence of symbols from ℒ, and after re-
moving the sequence brackets and commas we obtain the ℒ-expression (¬A1). Let α =
(¬A1) and β = A1. Then α and β are ℒ-expressions. In addition, we can write (α →β)
to denote the ℒ-expression ((¬A1) →A1). Also, note that ¬ →)(A8 is an ℒ-expression.
Moreover, αβ is the expression (¬A1)A1.
There is a one-to-one correspondence between each ℒ-expression α and a finite se-
quence of symbols in ℒdenoted by ⟨α∗⟩, where α∗denotes the result of putting commas
between all of the symbols in α. So an ℒ-expression α is a proper initial segment of the
ℒ-expression β when ⟨α∗⟩is a proper initial segment of ⟨β∗⟩(see Definition 1.1.6).
Grammatically correct expressions
Is the English expression “then work not. is, Sally work is Bill if at at” a grammatically
correct sentence? No! English expressions that are not grammatically correct make no
sense. This observation motivates the following question: What does it mean for an
ℒ-expression to be grammatically correct? Surely, the ℒ-expression (A2 →A5) is a mean-
ingful expression. However, the expression →A2)(A5 appears to be nonsensical. We
know that English has “correct grammar.” Can we give the language ℒcorrect gram-
mar? The answer is yes.
We want to define the notion of a well-formed formula (wff ) in the language ℒ. The
wffs will be the grammatically correct ℒ-expressions. Our definition will have the fol-
lowing consequences:
(a) Every sentence symbol is a wff.
(b) If α and β are wffs, then so are (¬α), (α ∧β), (α ∨β), (α →β), and (α ↔β).
(c) Every wff is obtained by applying (a) or (b).
We will often use lower-case Greek characters to represent wffs and upper-case Greek
characters to represent sets of wffs.
Items (a)–(c) above declare that every sentence symbol is a wff and every other wff
is built from other wffs by using the logical connectives and parentheses in particular
ways. For example, A1123, (A2 →(¬A1)), and (((¬A1)∧(A1 →A7)) →A7) are all wffs, but
X3, (A5), ()¬A41, A5 →A7), and (A2 ∨(¬A1) are not wffs.
In order to define wffs we will need the following five formula building functions:
Let α and β be ℒ-expressions. Then
ℰ¬(α) = (¬α),
ℰ∧(α, β) = (α ∧β),
ℰ∨(α, β) = (α ∨β),
(2.1)

2.1 The language
౪
29
ℰ→(α, β) = (α →β),
ℰ↔(α, β) = (α ↔β).
Using the above operations, our next definition is an application of Theorem 1.1.24.
Definition 2.1.4. Let ℱ= {ℰ¬, ℰ∧, ℰ∨, ℰ→, ℰ↔} and let 𝒮⊆{A1, A2, A3, . . . } be a set of
sentence symbols in the language ℒ. Let 𝒮be the set generated from 𝒮by the functions
in ℱ. An ℒ-expression α is a well-formed formula (wff or formula) with sentence symbols
in 𝒮if and only if α ∈𝒮. The set 𝒮is the set of wffs that can be built from the symbols
in S using the five formula building functions in (2.1). When 𝒮is the set of all sentence
symbols, we shall just say that α is a well-formed formula (wff or formula).
For example, if S = {A3, A7}, then 𝒮consists of the wffs whose only sentence symbols
are A3 and/or A7.
Remark. Let 𝒮and 𝒯be sets of sentence symbols. Exercise 8 on page 37 implies that if
𝒮⊆𝒯, then 𝒮⊆𝒯.
Definition 2.1.4 asserts that a wff is an expression that can be built from sentence
symbols by applying the formula building functions a finite number of times (see Sec-
tion 1.1.5). Thus, a wff is constructed by using the sentence symbols as building blocks
and the formula building functions as mortar. This leads to the following definition,
which gives a road map for the construction of a particular wff.
Definition 2.1.5. A construction sequence is a finite sequence ⟨ε1, ε2, . . . , εn⟩of ℒ-expres-
sions such that for each i ≤n one of the following holds:
1.
εi is a sentence symbol,
2.
εi = ℰ¬(εj) for some j < i,
3.
εi = ℰ⊡(εj, εk) for some j < i and k < i, where ⊡represents any of the connectives
∧, ∨, →, ↔.
An ℒ-expression α is a wff whenever there is a construction sequence ⟨ε1, ε2, . . . , εn⟩
such that α = εn, that is, the sequence ends in α.
Problem 2.1.6. Let α denote the wff ((A1 ∧A10) →((¬A3) ∨A8)). Identify a construction
sequence that ends with α.
Solution. The following “tree” gives a picture of how the above wff α is constructed
from its sentence symbols using the formula building functions:

30
౪
2 Propositional logic
Thus we have the following construction sequence that ends in α:
⟨A1, A10, (A1 ∧A10), A3, (¬A3), A8, ((¬A3) ∨A8), α⟩.
Induction on wffs principle
To construct a wff, one starts with the sentence symbols and then applies the formula
building functions. Consequently, Theorem 1.1.25 yields the following induction on wffs
principle and associated proof strategy.
Wff Induction Principle. Let 𝕊(α) be a statement about a wff α. If
1.
𝕊(Ai) is true for every sentence symbol Ai and
2.
for all wffs α and β, if 𝕊(α) and 𝕊(β), then 𝕊((¬α)) and 𝕊((α ⊡β)) (here ⊡represents
each of the connectives ∧, ∨, →, ↔),
then 𝕊(α) is true for all wffs α.
Proof Strategy. In order to prove a statement “for all wffs α, 𝕊(α)” by induction, use the
following diagram:
Base step:
Prove 𝕊(Ai) for all sentence symbols Ai.
Inductive step:
Let α and β be arbitrary wffs.
Assume 𝕊(α) and 𝕊(β).
Prove 𝕊((¬α)) and 𝕊((α ⊡β)).
Applications of the induction principle
Theorem 2.1.7. Let α be any wff. The number of left parentheses equals the number of
right parentheses in α.
Proof. We shall use proof by induction on wffs.
Base step: Let α = Ai be a sentence symbol. Then Ai has zero left parentheses and the
same number of right parentheses.
Inductive step: Let α and β be arbitrary wffs. Assume the induction hypothesis
the number of left parentheses in α equals the number of right parentheses,
the number of left parentheses in β equals the number of right parentheses.
(IH)
We must prove that the same holds for each of the following:
(¬α), (α ∧β), (α ∨β), (α →β), (α ↔β).
From the induction hypothesis (IH), it immediately follows that the number of left paren-
theses in (¬α) equals the number of right parentheses. A similar argument applies for
the rest of the binary connectives.

2.1 The language
౪
31
Theorem 2.1.8. A proper initial segment of a wff has more left parentheses than right
parentheses. Thus, no proper initial segment of a wff is itself a wff.
Proof. We shall use proof by induction on wffs.
Base step: Let α = Ai be a sentence symbol. Since Ai has no proper initial segments, the
result follows vacuously.
Inductive step: Let α and β be arbitrary wffs. Assume the induction hypothesis
a proper initial segment of α has more left parentheses than right parentheses,
a proper initial segment of β has more left parentheses than right parentheses.
(IH)
We must prove that any proper initial segment of each of the following has more left
parentheses than right parentheses:
(¬α), (α ∧β), (α ∨β), (α →β), (α ↔β).
Let us first consider the wff (α ∨β). Any proper initial segment of (α ∨β) has one of the
following forms:
1.
(,
2.
(α0, where α0 is a proper initial segment of α,
3.
(α,
4.
(α ∨,
5.
(α ∨β0, where β0 is a proper initial segment of β,
6.
(α ∨β.
Case 1 is clear. In cases 3, 4, and 6, Theorem 2.1.7 implies that these proper initial
segments have more left parentheses than right ones. For cases 2 and 5, the induction
hypothesis implies that these two proper initial segments have more left parentheses
than right parentheses. A similar argument applies for the other logical connectives.
Theorem 2.1.7 now implies that a proper initial segment of a wff is not a wff.
Exercises 2.1.
1. Let B and S be sentence symbols that represent the sentences “Bill is at work” and
“Sally is at work,” respectively. Translate the following English sentences into wffs:
(a) Bill is at work and Sally is not at work.
(b) If Bill is at work, then Sally is not at work.
(c) Bill is not at work if and only if Sally is at work.
2. Let α be the wff ((¬A1) →((A4∨(A3 ↔A2))∧A3)). Identify a construction sequence
that ends with α.
3. Given any wff α, let
s(α) = the number of occurrences of sentence symbols in α,

32
౪
2 Propositional logic
c(α) = the number of occurrences of binary connectives in α.
Prove by induction on α the following statement: For all wffs α, s(α) = c(α) + 1.
4. In the inductive step in the proof of Theorem 2.1.8, using the induction hypothesis,
show that any proper initial segment of (¬α) is not a wff.
5. Prove by induction on α the following statement: For every wff α there is a con-
struction sequence that ends with α (see Definition 1.1.6).
6. Let α1, α2, . . . , αn be wffs, where n > 1. Show that α1α2 ⋅⋅⋅αn is not a wff.
2.2 Truth assignments
The set of truth values {F, T} consists of two distinct items:
F, called falsity,
T, called truth.
Clearly, there are an infinite number of sentence symbols. Suppose that we have truth
values assigned to each of these sentence symbols. Can we then identify a function that
will evaluate the truth value of all the wffs? If so, is there only one such function? In
order to address these questions, we first need to establish a unique readability theorem,
that is, we need to show that one can read a wff without ambiguity.
Theorem 2.2.1 (Unique readability). Let ℱ= {ℰ¬, ℰ∧, ℰ∨, ℰ→, ℰ↔} and let B = {A1, A2, A3,
. . . }. When restricted to the set of wffs, we have the following:
(a) The range of each operation in ℱis disjoint from B.
(b) Any two distinct operations in ℱhave disjoint ranges.
(c) Every operation in ℱis one-to-one.
In other words, the set of all wffs is freely generated from the set of sentence symbols by
the five operations ℰ∧, ℰ∨, ℰ¬, ℰ→, ℰ↔.
Proof. Let ℱ= {ℰ∧, ℰ∨, ℰ¬, ℰ→, ℰ↔} and let B = {A1, A2, A3, . . . }.
(a) We show that the range of ℰ∧is disjoint from B. Let α and β be wffs. Clearly, (α∧β)
̸=
Ai, because Ai has no parentheses. Hence, the range of ℰ∧is disjoint from B. A similar
argument applies for the other operations in ℱ.
(b) We need to show that any two distinct operations in ℱhave disjoint ranges. Let
α, β, γ, and σ be wffs. Suppose that (α ∧β) = (γ ∨σ). Then, by dropping the first
parenthesis in each expression, the resulting expressions are equal, that is,
α ∧β) = γ ∨σ).
(2.2)
Since α and γ are wffs, Theorem 2.1.8 implies that α and γ cannot be proper initial
segments of the other. Thus, (2.2) implies that ∧β) = ∨σ). So ∧= ∨, which is a

2.2 Truth assignments
౪
33
contradiction. So ℰ∧and ℰ∨have disjoint ranges. Similar reasoning applies in the
other cases.
(c) Finally, we must show that each operation in ℱis one-to-one. So let α, β, γ, and σ be
wffs. Suppose that (α ∧β) = (γ ∧σ). Reasoning as in part (b), we see that α = γ and
thus, β = σ. Thus, ℰ∧is one-to-one on the wffs. Similar reasoning also shows that
the other operations are one-to-one.
The unique readability theorem will allow us to positively address the questions
posed at the beginning of this section (see Theorem 2.2.4 below).
Definition 2.2.2. Let 𝒮be a set of sentence symbols. A function v: 𝒮→{F, T} is called a
truth assignment for 𝒮.
Example 2.2.3. Consider the set 𝒮= {A3, A6, A8} of sentence symbols. Then the function
v: 𝒮→{F, T} defined by
v(A3) = T,
v(A6) = F,
v(A8) = F
is a truth assignment for 𝒮.
Let 𝒮be a set of sentence symbols and let v: 𝒮→{F, T} be a truth assignment
for 𝒮. Let ℱ= {ℰ∧, ℰ∨, ℰ¬, ℰ→, ℰ↔}. Theorem 2.2.1 implies that the set 𝒮of all wffs gen-
erated by 𝒮from the functions in ℱis freely generated. For each function in ℱwe also
have the corresponding truth functions F∧, F∨, F¬, F→, F↔introduced in Section 1.2.2
(see (1.2)–(1.6)). Theorem 1.1.27 now implies the following result.
Theorem 2.2.4. Let 𝒮be a set of sentence symbols and let v: 𝒮→{F, T} be a truth assign-
ment for 𝒮. Then there is a unique function v: 𝒮→{F, T} satisfying the following:
(i)
For every A ∈𝒮, v(A) = v(A).
(ii) For every α, β ∈𝒮, we have:
(1) v((¬α)) = {T,
if v(α) = F,
F,
if v(α) = T,
(2) v((α ∧β)) = {T,
if v(α) = T and v(β) = T,
F,
otherwise,
(3) v((α ∨β)) = {T,
if v(α) = T or v(β) = T (or both),
F,
otherwise,
(4) v((α →β)) = {F,
if v(α) = T and v(β) = F,
T,
otherwise,
(5) v((α ↔β)) = {T,
if v(α) = v(β),
F,
otherwise.
Conditions (1)–(5) of the above theorem are given in tabular form below:

34
౪
2 Propositional logic
α
β
(¬α)
(α ∧β)
(α ∨β)
(α →β)
(α ↔β)
T
T
F
T
T
T
T
T
F
F
F
T
F
F
F
T
T
F
T
T
F
F
F
T
F
F
T
T
Remark 2.2.5 (On Theorem 2.2.4). Let 𝒮be a set of sentence symbols and v: 𝒮→{F, T}
be a truth assignment for 𝒮. Let v: 𝒮→{F, T} be as in Theorem 2.2.4. For all α, β ∈𝒮(iff
means “if and only if”),
(1) v((¬α)) = T iff v(α) = F,
(2) v((α ∧β)) = T iff v(α) = T and v(β) = T,
(3) v((α ∨β)) = T iff v(α) = T or v(β) = T,
(4) v((α →β)) = T iff if v(α) = T, then v(β) = T,
(5) v((α ↔β)) = T iff v(α) = v(β).
Example 2.2.6. Consider the set 𝒮= {A3, A6, A8} of three sentence symbols and let
v: 𝒮→{F, T} be defined by
v(A3) = T,
v(A6) = F,
v(A8) = F.
Let α, β, and γ be defined by
α = (A3 →(¬A6)),
β = (A3 →(A6 ∨A8)),
γ = ((A3 →(¬A6)) ↔(A3 →(A6 ∨A8))).
So α, β, γ ∈𝒮. What is v(α), v(β), v(γ)?
Definition 2.2.7. Let φ be a wff. Let v be a truth assignment defined on the sentence
symbols appearing in φ. Then v satisfies φ if and only if v(φ) = T.
Example 2.2.8. Let 𝒮= {A3, A6, A8}, let v: 𝒮→{F, T}, and let α, β, γ all be as in the above
Example 2.2.6. Does v satisfy α? Answer the same question for β and γ.
Definition 2.2.9. Let Σ be a set of wffs and let v be a truth assignment defined on the
sentence symbols appearing in any wff from Σ. Then v satisfies Σ if and only if v(φ) = T
for every φ ∈Σ. We shall say that Σ is satisfiable if there is a truth assignment that
satisfies Σ.
Given that Σ is a set of wffs and τ is a wff, our next definition will address the fol-
lowing question: When can we view τ as a conclusion that follows from Σ, where Σ is
regarded as a set of hypotheses?

2.2 Truth assignments
౪
35
Definition 2.2.10. Let Σ be a set of wffs and let τ be a wff. Then Σ tautologically implies τ
(written Σ 󳀀󳨐τ) if and only if for every truth assignment v defined on the sentence sym-
bols that appear in wffs in Σ and in τ, if v satisfies Σ, then v satisfies τ.
Exercise 9 on page 15 implies the following theorem.
Theorem 2.2.11. Let v1: 𝒮→{F, T} and v2: 𝒯→{F, T} be two truth assignments, where
𝒮and 𝒯are sets of sentence symbols such that 𝒮⊆𝒯. If v1(Ai) = v2(Ai) for all Ai ∈𝒮,
then v1(α) = v2(α) for all α ∈𝒮.
Corollary 2.2.12. Let Σ be a set of wffs and let τ be a wff. Let
𝒮= {Ai : Ai appears in a wff in Σ or in τ}
and let 𝒯be a set of sentence symbols such that 𝒮⊆𝒯. Then Σ 󳀀󳨐τ if and only if every
truth assignment for 𝒯that satisfies every member in Σ also satisfies τ.
Definition 2.2.10 can be used to identify valid forms of reasoning, or inference rules.
For example, let Σ = {(α →β), α} and let v be a truth assignment that satisfies Σ. Thus,
v((α →β)) = T and v(α) = T. So, by Remark 2.2.5(4), we conclude that v(β) = T. There-
fore, Σ 󳀀󳨐β. This particular tautological implication justifies the formal inference rule
called modus ponens, represented by the diagram
α →β
α
∴β
,
which asserts that if (α →β) and α are true, we therefore can conclude that β is true. In
other words, modus ponens offers an argument that is truth preserving.
Remark 2.2.13. A few special cases concerning Definitions 2.2.7–2.2.10 deserve some
comments.
(a) If Σ is the empty set ⌀, then every truth assignment satisfies Σ.
(b) It follows from (a) that ⌀󳀀󳨐τ if and only if every truth assignment satisfies τ. In this
case, we say that τ is a tautology (written 󳀀󳨐τ). In other words, τ is a tautology if and
only if for every truth assignment v containing the sentence symbols in τ, we have
v(τ) = T.
(c) If there is no truth assignment that satisfies Σ, then for any τ it is vacuously true that
Σ 󳀀󳨐τ. This can occur if Σ contains a contradiction; for example, if (Ai ∧(¬Ai)) ∈Σ.
(d) If Σ is a singleton {σ}, then we write σ 󳀀󳨐τ in place of {σ} 󳀀󳨐τ.
Problem 2.2.14. Let α and β be wffs. Show that (α →(β →α)) is a tautology.
Solution. We apply Remark 2.2.13(b). Let v be a truth assignment that contains the sen-
tence symbols occurring in α and β. We must show that v((α →(β →α))) = T. Suppose,

36
౪
2 Propositional logic
for a contradiction, that v((α →(β →α))) = F. By Theorem 2.2.4(4), (󳵳) v(α) = T and
v((β →α)) = F. Since v((β →α)) = F, we conclude that v(α) = F, which contradicts (󳵳).
So v((α →(β →α))) = T. Thus, (α →(β →α)) is a tautology.
Definition 2.2.15. Let σ and τ be wffs. Then σ and τ are said to be tautologically equiv-
alent (written σ 󳀀󳨐
󳀀󳨐
τ) if σ 󳀀󳨐τ and τ 󳀀󳨐σ.
Remark 2.2.16 (On Definition 2.2.15). Let σ and τ be wffs. Then one can show that σ 󳀀󳨐
󳀀󳨐
τ
if and only if for every truth assignment v containing the sentence symbols in σ and τ,
we have v(σ) = v(τ).
2.2.1 Some tautologies
For the remainder of this chapter, we will let A, B, C, …, Z denote arbitrary sentence
symbols. We note the following.
1.
Two simple tautologies:
(A →A)
(A ∨(¬A))
2.
De Morgan’s laws:
((¬(A ∨B)) ↔((¬A) ∧(¬B)))
((¬(A ∧B)) ↔((¬A) ∨(¬B)))
3.
Commutative laws:
((A ∧B) ↔(B ∧A))
((A ∨B) ↔(B ∨A))
4.
Associative laws:
((A ∨(B ∨C)) ↔((A ∨B) ∨C))
((A ∧(B ∧C)) ↔((A ∧B) ∧C))
5.
Distribution laws:
((A ∧(B ∨C)) ↔((A ∧B) ∨(A ∧C)))
((A ∨(B ∧C)) ↔((A ∨B) ∧(A ∨C)))
6.
Conditional laws:
((A →B) ↔((¬A) ∨B))
((A →B) ↔(¬(A ∧(¬B))))
(((¬A) →B) ↔(A ∨B))
((¬(A →(¬B))) ↔(A ∧B))
7.
Double negation law: ((¬(¬A)) ↔A)
8.
Contrapositive law: ((A →B) ↔((¬B) →(¬A)))
9.
Biconditional law: ((A ↔B) ↔((A →B) ∧(B →A)))
10. Exportation law: (((A ∧B) →C) ↔(A →(B →C)))

2.2 Truth assignments
౪
37
2.2.2 Omitting parentheses
We now describe some conventions that will allow us to reduce (without any ambiguity)
the number of parentheses used in our wffs. These conventions will give us a “shortcut”
in how we can correctly express a propositional statement.
1.
The outermost parentheses need not be explicitly mentioned. For example, we can
write A ∧B to denote (A ∧B).
2.
The negation symbol shall apply to as little as possible. For example, we can write
¬A ∧B to denote (¬A) ∧B, that is, ((¬A) ∧B).
3.
The conjunction and disjunction symbols shall apply to as little as possible. For ex-
ample, we will write
A ∧B →¬C ∨D to denote ((A ∧B) →((¬C) ∨D)),
using conventions 1 and 2.
4.
When one logical connective is used repeatedly, the parentheses are assumed to be
grouped to the right. For example, we shall write
α ∧β ∧γ to denote α ∧(β ∧γ) and
α →β →γ to denote α →(β →γ).
This convention allows us to observe that for n ≥2,
α1 ∧α2 ∧⋅⋅⋅∧αn ∧αn+1 denotes α1 ∧α2 ∧⋅⋅⋅∧(αn ∧αn+1),
(2.3)
α1 →α2 →⋅⋅⋅→αn →αn+1 denotes α1 →α2 →⋅⋅⋅→(αn →αn+1).
(2.4)
In some of the following exercises, we will omit parentheses following these conven-
tions.
Exercises 2.2.
1. Using Theorem 2.2.11, prove Corollary 2.2.12.
*2. Let Σ be a set of wffs and let τ be a wff. Let τ be either in Σ or a tautology. Show that
Σ 󳀀󳨐τ.
3. Determine whether or not ((A →B) ∨(B →A)) is a tautology.
*4. Let α and β be wffs. Show that α →β →(α ∧β) is a tautology.
*5. Let α and β be wffs. Show that (¬α →β) →(¬α →¬β) →α is a tautology.
*6. Let Σ be a set of wffs and let θ, ψ be wffs. Suppose that Σ 󳀀󳨐θ and Σ 󳀀󳨐(θ →ψ). Show
that Σ 󳀀󳨐ψ.
7. Let Σ1 and Σ2 be sets of wffs and let α and β be wffs. Suppose that Σ1 󳀀󳨐α and Σ2 󳀀󳨐β.
Show that Σ1 ∪Σ2 󳀀󳨐(α ∧β).
8. Let Σ = {α1, α2, . . . , αn} be a finite set of wffs and let τ be a wff. Prove that if Σ 󳀀󳨐τ,
then (α1 ∧α2 ∧⋅⋅⋅∧αn) →τ is a tautology.

38
౪
2 Propositional logic
*9. Let Σ be any set of wffs and let α and β be wffs. Show that the following hold:
(a) Σ ∪{α} 󳀀󳨐β iff Σ 󳀀󳨐(α →β),
(b) α 󳀀󳨐
󳀀󳨐
β iff 󳀀󳨐(α ↔β).
*10. Suppose that (α ↔β) is a tautology. Show that (α →β) is a tautology.
11. Suppose that either Σ 󳀀󳨐α or Σ 󳀀󳨐β. Prove that Σ 󳀀󳨐(α ∨β).
12. Find Σ, α, β such that Σ 󳀀󳨐(α ∨β), and yet Σ
̸󳀀󳨐α and Σ
̸󳀀󳨐β.
13. Let α, β be wffs. Suppose that α and (α ↔β) are both tautologies. Show that β is
also a tautology.
*14. Let α, α′, β, and β′ be wffs. Suppose that α 󳀀󳨐
󳀀󳨐
α′ and β 󳀀󳨐
󳀀󳨐
β′. Show that
(a) (¬α) 󳀀󳨐
󳀀󳨐
(¬α′),
(b) (α ∧β) 󳀀󳨐
󳀀󳨐
(α′ ∧β′),
(c) (α ∨β) 󳀀󳨐
󳀀󳨐
¬((¬α′) ∧(¬β′)),
(d) (α ∧β) 󳀀󳨐
󳀀󳨐
¬(α′ →(¬β′)).
15. The sets of wffs below are either satisfiable or not. Determine which are satisfiable
by finding a truth assignment that satisfies the given set Σ. If Σ is not satisfiable,
explain (that is, give an argument) why this is the case.
(a) Σ = {A, (A →B), ¬B},
(b) Σ = {(A →B), ¬A, ¬B},
(c) Σ = {(A →B), ¬A, B},
(d) Σ = {(A ∧B), ¬A, ¬B},
(e) Σ = {(A ∧¬A), ¬C, B},
(f) Σ = {¬(A ↔B), A, ¬B},
(g) Σ = {(A ↔B), ¬A, ¬B},
(h) Σ = {A ∧B, ¬(C ∧D), D →¬A, C →¬B},
(i)
Σ = {A ∧B, ¬C ∧D, D →¬A, C →¬B}.
*16. Let Σ be a set of wffs and let τ be a wff. Prove that
Σ
̸󳀀󳨐τ
if and only if
Σ ∪{¬τ} is satisfiable.
17. Let Σ be a set of wffs and let φ, ψ be wffs. Let v be a truth assignment that satisfies
Σ. Prove the following statements:
(a) If (φ ∧ψ) ∈Σ, then v(φ) = T.
(b) If (φ →ψ) ∈Σ and ¬ψ ∈Σ, then v(¬φ) = T.
(c) If (ψ →φ) ∈Σ and ¬φ ∈Σ, then v(ψ) = F.
(d) If ¬(ψ →φ) ∈Σ, then v(ψ) = T.
18. Determine whether or not the following statements are true. Explain (that is, give
an argument) why each statement is true or explain why it is false.
(a) Let Σ = {A, (A →B)}. Then Σ 󳀀󳨐B.
(b) Let Σ = {(A ∨B), ¬B}. Then Σ 󳀀󳨐A.
(c) Let Σ = {C →(A →B), A, C}. Then Σ 󳀀󳨐(C →B).
(d) Let Σ = {C →(¬A →B), C}. Then Σ 󳀀󳨐(¬B →A).
(e) Let Σ = {(A ↔B), ¬C}. Then Σ 󳀀󳨐(A →B).

2.3 Completeness of the logical connectives
౪
39
(f) Let Σ = {(A ↔B), ¬C}. Then Σ 󳀀󳨐A.
(g) Let Σ = {(A ↔B), ¬C, ¬B}. Then Σ 󳀀󳨐¬A.
(h) Let Σ = {(A ∨B), ¬C}. Then Σ 󳀀󳨐A.
(i)
Let Σ = {(A ∧¬A), ¬C, B}. Then Σ 󳀀󳨐D.
19. Let 𝒮be the set of all sentence symbols. For a set Γ of wffs, define the truth assign-
ment vΓ: 𝒮→{F, T} by
vΓ(Ai) = {T,
if Ai ∈Γ,
F,
if Ai ∉Γ.
Justify your answers to the following questions:
(a) Let Γ = {(A ∧B), A, ¬B}. Does vΓ satisfy Γ?
(b) Let Γ = {(A ∧¬A), C, B}. Does vΓ satisfy Γ?
(c) Let Γ = {¬(A ↔B), A, ¬B}. Does vΓ satisfy Γ?
(d) Let Γ = {(A ↔B), ¬A, ¬B}. Does vΓ satisfy Γ?
(e) Let Γ = {A ∧B, ¬(C ∧D), D →¬A, C →¬B, A, B}. Does vΓ satisfy Γ?
(f) Let Γ = {D, ¬C ∧D, D →¬A, C →¬B}. Does vΓ satisfy Γ?
20. (Substitution) Let α1, α2, …, αn, . . . be an infinite sequence of wffs. For each wff φ,
let φ∗be the result of replacing each occurrence of An in φ with αn.
(a) Let v be a truth assignment for the set 𝒮of all the sentence symbols. Define
u: 𝒮→{F, T} by u(An) = v(αn). Prove that u(φ) = v(φ∗) for all wffs φ.
(b) Prove that if φ is a tautology, then so is φ∗.
(c) Prove that if ψ 󳀀󳨐
󳀀󳨐
φ, then ψ∗󳀀󳨐
󳀀󳨐
φ∗.
Exercise Notes: For Exercise 14, apply Remark 2.2.16. For Exercise 19, note that if Γ =
{(A ∧B), A, ¬B}, then A ∈Γ and B ∉Γ. For Exercise 20(a), let P(φ) be the statement
u(φ) = v(φ∗). Now prove “for all wffs φ, P(φ)” by induction on φ. (Question: Is (φ∧ψ)∗=
(φ∗∧ψ∗)?)
2.3 Completeness of the logical connectives
In logic, a truth function is one that accepts truth values as input and produces a unique
truth value as output. Let V = {T, F}. Thus, an n-place truth function has the form
H: V n →V for some n ≥1. Truth functions are also called Boolean functions. Such func-
tions are applied in a variety of different fields, namely, electrical engineering, computer
science, game theory, and combinatorics.
Let α be a wff whose sentence symbols are among A1, A2, . . . , An. We can now define
an n-place truth function Hα: V n →V by
Hα(x1, x2, . . . , xn) = v(α), where v(A1) = x1, v(A2) = x2, …, v(An) = xn.
(2.5)

40
౪
2 Propositional logic
So, given any wff, we can use it to define a truth function. For example, let α be the wff
(A1 ∨¬A2). Then we see that Hα: V 2 →V satisfies
Hα(T, T) = T,
Hα(T, F) = T,
Hα(F, T) = F,
Hα(F, F) = T,
which is essentially the truth table for α. This invites an interesting question: Given any
truth function G, is there a wff ψ such that G = Hψ? Before addressing this question, let
us look at some examples.
Example 2.3.1. Suppose that G: V 3 →V always has output F. Let α be the wff (A1 ∧¬A1).
Since α is always false and its sentence symbols are among A1, A2, A3, by applying (2.5)
we see that Hα(x1, x2, x3) = v(α) = F for all x1, x2, x3 ∈V (see Theorem 2.2.11). So G = Hα.
Example 2.3.2. Let G: V 3 →V be such that
G(x1, x2, x3) = {T,
if x1 = T, x2 = F, x3 = T,
F,
otherwise.
Thus, G(T, F, T) = T and this is the only input that produces the output value T. Let γ
be the wff (A1 ∧¬A2 ∧A3) which corresponds to T, F, T. Note that v(γ) = T if and only
if v(A1) = T, v(A2) = F, v(A3) = T. Thus, by applying (2.5), we see that G(x1, x2, x3) =
Hγ(x1, x2, x3) = v(γ) for all x1, x2, x3 ∈V. So G = Hγ.
In the above two examples, we were given relatively simple truth functions G and
we were able to find a wff ψ such that G = Hψ. Our next example gives a slightly more
complicated truth function. These examples will provide a guide that will allow us to
prove that for any truth function G there is always a wff ψ such that G = Hψ.
Example 2.3.3. Suppose that truth function G: V 3 →V is such that
G(T, T, T) = T,
G(T, T, F) = F,
G(T, F, T) = F,
G(T, F, F) = T,
(2.6)
G(F, T, T) = F,
G(F, T, F) = T,
G(F, F, T) = T,
G(F, F, F) = F.

2.3 Completeness of the logical connectives
౪
41
Let us focus on the cases in (2.6) that produce the value T. Also, for each such case let us
identify a corresponding wff γi as was done in Example 2.3.2, namely,
G(T, T, T) = T
γ1 = (A1 ∧A2 ∧A3),
G(T, F, F) = T
γ2 = (A1 ∧¬A2 ∧¬A3),
G(F, T, F) = T
γ3 = (¬A1 ∧A2 ∧¬A3),
G(F, F, T) = T
γ4 = (¬A1 ∧¬A2 ∧A3).
(2.7)
Now let α = γ1 ∨γ2 ∨γ3 ∨γ4, that is, let α be the following wff:
(A1 ∧A2 ∧A3) ∨(A1 ∧¬A2 ∧¬A3) ∨(¬A1 ∧A2 ∧¬A3) ∨(¬A1 ∧¬A2 ∧A3).
Note that v(α) = T if and only if G(v(A1), v(A2), v(A3)) = T. By applying (2.5), we see that
G(x1, x2, x3) = Hα(x1, x2, x3) = v(α) for all x1, x2, x3 ∈V. So G = Hα.
The above examples offer a foundation for the proof of the following theorem.
Theorem 2.3.4. Let V = {T, F} and let G: V n →V be any truth function. Then there is a
wff α such that G = Hα, where Hα is defined by (2.5).
Proof. If G: V n →V is always false, then let α be the wff (A1 ∧¬A1). Thus, G = Hα (see
Example 2.3.1). Suppose now that G has some output values being T, say, k many such
cases. Let us list all the cases that yield the value T. For each such case let us also identify
a corresponding wff γi as was done in Example 2.3.3 (see (2.7)), specifically,
G(x11, x12, . . . , x1n) = T,
γ1 = (β11 ∧β12 ∧⋅⋅⋅∧β1n),
G(x21, x22, . . . , x2n) = T,
γ2 = (β21 ∧β22 ∧⋅⋅⋅∧β2n),
...
...
G(xk1, xk2, . . . , xkn) = T,
γk = (βk1 ∧βk2 ∧⋅⋅⋅∧βkn),
where for 1 ≤i ≤k and 1 ≤j ≤n, we have
βij = {Aj,
if xij = T,
¬Aj,
if xij = F.
Note that v(γi) = T if and only if v(A1) = xi1, v(A2) = xi2, . . . , v(An) = xin. Let α = γ1 ∨γ2 ∨
⋅⋅⋅∨γk. So v(α) = T if and only if G(v(A1), v(A2), . . . , v(An)) = T. By applying (2.5), we see
that G(x1, x2, . . . , xn) = Hα(x1, x2, . . . , xn) = v(α) for all x1, x2, . . . , xn ∈V. So G = Hα.
Theorem 2.3.4 shows that every truth function is equal to a function of the form Hα
for some wff α. For this reason, the set {∧, ∨, ¬, →, ↔} of logical connectives can be said
to be truth functionally complete. In fact, the proof of Theorem 2.3.4 shows that {∧, ∨, ¬}

42
౪
2 Propositional logic
is also truth functionally complete. To clarify this assertion, let us say that a wff α is in
disjunctive normal form if
α = γ1 ∨γ2 ∨⋅⋅⋅∨γk,
where each γi is a conjunction of the form
γi = (βi1 ∧βi2 ∧⋅⋅⋅∧βin)
and each βij is a sentence symbol or the negation of a sentence symbol. The proof of
Theorem 2.3.4 shows that every truth function is equal to a function of the form Hα,
where α is in disjunctive normal form. Thus, {∧, ∨, ¬} is truth functionally complete as
well. This discussion now allows us to establish the following result.
Theorem 2.3.5. Every wff φ is tautologically equivalent to a wff α in disjunctive normal
form.
Proof. Let φ be a wff and let Hφ be the truth function defined by (2.5). The proof of
Theorem 2.3.4 shows that Hφ = Hα, where α is in disjunctive normal form. Exercise 3
below shows that φ and α are tautologically equivalent.
Definition 2.3.6. Let 𝒞be a subset of {∧, ∨, ¬, →, ↔}. Then 𝒞is tautologically complete
if and only if every wff α is tautologically equivalent to a wff α′ that contains only the
connectives in 𝒞.
The following result follows from Theorem 2.3.5.
Theorem 2.3.7. The set {∧, ∨, ¬} is tautologically complete.
Theorem 2.3.8. The sets {¬, ∧} and {¬, ∨} are both tautologically complete.
Proof. We will only prove that the set {¬, ∧} is tautologically complete. A similar proof
shows that {¬, ∨} is tautologically complete. By Theorem 2.3.7 we know that every wff is
tautologically equivalent to a wff which contains only the connectives in {∧, ∨, ¬}. So it is
sufficient to prove by induction that every wff α containing only connectives in {∧, ∨, ¬}
is tautologically equivalent to a wff α′ with connectives only in {¬, ∧}.
Base step: Let α = Ai. As α has no connectives, α′ = α as required.
Inductive step: Let α and β be arbitrary wffs that contain only the connectives in the set
{∧, ∨, ¬}. Assume the induction hypothesis
α 󳀀󳨐
󳀀󳨐
α′,
where α′ contains only the connectives in {¬, ∧},
β 󳀀󳨐
󳀀󳨐
β′,
where β′ contains only the connectives in {¬, ∧}.
(IH)
We prove that each of the wffs (¬α), (α ∧β), (α ∨β) is tautologically equivalent to a wff
that contains only connectives in {¬, ∧}.

2.3 Completeness of the logical connectives
౪
43
For (¬α), from (IH) and Exercise 14(a) on page 38, it follows that (¬α) 󳀀󳨐
󳀀󳨐
(¬α′),
where (¬α′) has connectives only in {¬, ∧}.
For (α ∧β), from (IH) and Exercise 14(b) on page 38, we have (α ∧β) 󳀀󳨐
󳀀󳨐
(α′ ∧β′),
where (α′ ∧β′) contains only connectives in {¬, ∧}.
For (α ∨β), from (IH) and Exercise 14(c) on page 38, we have
(α ∨β) 󳀀󳨐
󳀀󳨐
¬((¬α′) ∧(¬β′)),
where ¬((¬α′) ∧(¬β′)) contains only connectives in {¬, ∧}.
Remark 2.3.9. Let ℱ= {ℰ¬, ℰ∧, ℰ∨} and let 𝒮= {A1, A2, A3, . . . } be the set of all sentence
symbols in the language ℒ. Let 𝒮be the set generated from 𝒮by the functions in ℱ.
Theorem 1.1.25 validates the proof by induction given in Theorem 2.3.8.
Exercises 2.3.
1. For each of the following wffs α, using the tautologies in Section 2.2.1, find a wff that
is tautologically equivalent to α which contains connectives only in 𝒞:
(a) α = (A →B) ↔(C →A) and 𝒞= {∧, ∨, ¬},
(b) α = (A →B) ↔(C →A) and 𝒞= {¬, ∧}.
2. Let V = {T, F} and define the truth function G: V 3 →V by
G(x1, x2, x3) = {T,
if exactly two of x1, x2, x3 are T,
F,
otherwise.
Find a wff α in disjunctive normal form such that G = Hα, where Hα is defined as
in (2.5).
*3. Let α and β be wffs with the same sentence symbols among A1, A2, . . . , An. Let Hα
and Hβ be defined as in (2.5). Prove that Hα = Hβ if and only if α 󳀀󳨐
󳀀󳨐
β.
4. Using the fact that {¬, ∧} is tautologically complete, prove (by induction) that {¬, ∨}
is tautologically complete.
*5. Given that {¬, ∧} is tautologically complete, prove (by induction) that {¬, →} is tau-
tologically complete.
6. Let ℱ= {ℰ∧, ℰ→} and let 𝒮= {A1, A2, A3, . . . } be the set of all sentence symbols in
the language ℒ. Let 𝒮be the set generated from 𝒮by the functions in ℱ. Now let
v: S →{F, T} be defined by v(Ai) = T for all i = 1, 2, 3, . . . . Prove by induction on α
that v(α) = T for all α ∈𝒮. Is {∧, →} tautologically complete?
Exercise Notes: For Exercises 4 and 5, read the first paragraph of the proof of The-
orem 2.3.8. For Exercise 5, see Exercise 14(d) on page 38.

44
౪
2 Propositional logic
2.4 Compactness
Let Σ be an infinite set of wffs. Suppose that every finite subset of Σ is satisfiable. Thus,
every finite subset of Σ has a particular truth assignment that satisfies all of the wffs
in this finite subset. Is there a truth assignment that will thus satisfy all of the infinite
number of wffs in Σ? The compactness theorem addresses this interesting question. In
this section, we shall give a proof of the compactness theorem, for propositional logic.
We begin by formally introducing the following pertinent definition.
Definition 2.4.1. A set of wffs Σ is finitely satisfiable if and only if every finite subset of
Σ is satisfiable.
The proof of the following theorem shows that a sophisticated mathematical argu-
ment can establish a powerful result about propositional logic. A similar argument will
be applied in Section 4.2.
Theorem 2.4.2 (Compactness theorem). Let Σ be a set of wffs. If Σ is finitely satisfiable,
then Σ is satisfiable.
Proof. The basic idea behind the proof is as follows: Given that Σ is finitely satisfiable,
we first construct a set of wffs Δ such that:
(1) Σ ⊆Δ;
(2) Δ is finitely satisfiable;
(3) for every wff α, either α ∈Δ or (¬α) ∈Δ.
We shall then use Δ to define a truth assignment that satisfies Σ.
Note that Theorem 1.1.30 (on page 12) implies that the set of all wffs is a countable
set, because the set of all wffs is a subset of the set of all finite sequences of symbols in
the countable language ℒ. Thus, let
α1, α2, α3, . . . , αn, . . .
(2.8)
be a fixed enumeration (see Corollary 1.1.33) of all the wffs in the language ℒ. Define by
recursion on ℕ(see Theorem 1.1.23) the following sets:
(i)
Δ0 = Σ,
(ii) Δn+1 = {Δn ∪{αn+1},
if Δn ∪{αn+1} is finitely satisfiable,
Δn ∪{¬αn+1},
otherwise.
From the above recursive definition, we see that Δn ⊆Δn+1 for all n ∈ℕ. Thus,
Σ = Δ0 ⊆Δ1 ⊆Δ2 ⊆⋅⋅⋅.
We shall now establish four claims.
Claim 1. For all n ∈ℕ, Δn is finitely satisfiable.

2.4 Compactness
౪
45
Proof of Claim 1. We shall use induction on n.
Base step: Let n = 0. Then Δ0 = Σ, which is finitely satisfiable by assumption.
Inductive step: Let n ∈ℕbe arbitrary. Assume the induction hypothesis
Δn is finitely satisfiable.
(IH)
We prove that Δn+1 is finitely satisfiable. Since Δn is finitely satisfiable, Exercise 1 below
implies that Δn+1 is finitely satisfiable.
(Claim 1)
Let Δ = ⋃n∈ℕΔn. Clearly, Σ ⊆Δ as Δ0 = Σ. Recall that Δn ⊆Δn+1 for all n ∈ℕ.
Claim 2. The set Δ is finitely satisfiable.
Proof of Claim 2. We show that each finite subset of Δ is satisfiable. Let Π be a finite
subset of Δ. Since Π ⊆Δ = ⋃n∈ℕΔn and Π is finite, it follows that Π ⊆Δn for some n. By
Claim 1, Δn is finitely satisfiable. Thus, Π is satisfiable.
(Claim 2)
Claim 3. For every wff α, either α ∈Δ or (¬α) ∈Δ, but not both.
Proof of Claim 3. Let α be any wff. Since (2.8) enumerates all of the wffs, there is an n ∈ℕ
such that α = αn. Either αn ∈Δn or (¬αn) ∈Δn by (ii) of the above construction. Since
Δn ⊆Δ, it follows that α ∈Δ or (¬α) ∈Δ. If both α ∈Δ and (¬α) ∈Δ, then {α, (¬α)} would
be a finite subset of Δ. Since Δ is finitely satisfiable, we must conclude that {α, (¬α)} is
satisfiable. This is a contradiction, as the set {α, (¬α)} is not satisfiable. Therefore, we
cannot have both α ∈Δ and (¬α) ∈Δ.
(Claim 3)
We now continue with the proof of the theorem. Note that:
(1) Σ ⊆Δ;
(2) Δ is finitely satisfiable by Claim 2;
(3) for every wff α, either α ∈Δ or (¬α) ∈Δ, but not both, by Claim 3.
We will now use Δ to define a truth assignment. Let 𝒮be the set of all the sentence
symbols and define v: 𝒮→{F, T} by
v(Ai) = {T,
if Ai ∈Δ,
F,
if Ai ∉Δ.
(2.9)
Let v: 𝒮→{F, T} be the extension of v as given by Theorem 2.2.4.
Claim 4. For every wff φ, we have
v(φ) = T
if and only if
φ ∈Δ.
(2.10)
Proof of Claim 4. We shall prove that (2.10) holds by induction on α.

46
౪
2 Propositional logic
Base step: Let α = Ai be any sentence symbol. Since v(Ai) = v(Ai), (2.9) implies that
v(Ai) = T iff Ai ∈Δ.
Inductive step: Let α and β be arbitrary wffs. Assume the induction hypothesis
v(α) = T
iff
α ∈Δ,
v(β) = T
iff
β ∈Δ.
(IH)
We must prove that the same holds for each of the following wffs:
(¬α), (α ∧β), (α ∨β), (α →β), (α ↔β).
Case (¬α): We prove that v((¬α)) = T iff (¬α) ∈Δ.
(⇒). Assume that v((¬α)) = T. Since v((¬α)) = T, it follows that v(α) = F. So, α ∉Δ
by (IH). Therefore, by (3), (¬α) ∈Δ.
(⇐). Assume that (¬α) ∈Δ. Since (¬α) ∈Δ, it follows that α ∉Δ; because if α ∈Δ, then
by (2) {(¬α), α} is a satisfiable subset of Δ, which is false. Thus, α ∉Δ and the induction
hypothesis (IH) implies that v(α) = F, and therefore v((¬α)) = T.
Case (α ∧β): We must prove that v((α ∧β)) = T iff (α ∧β) ∈Δ.
(⇒). Assume that v((α∧β)) = T. We need to show that (α∧β) ∈Δ. Since v((α∧β)) = T,
it follows that v(α) = T and v(β) = T. So by (IH), α ∈Δ and β ∈Δ. Suppose, for a
contradiction, that (α ∧β) ∉Δ. Therefore, by (3), we conclude that (¬(α ∧β)) ∈Δ. So
{α, β, ¬(α ∧β)} is a finite subset of Δ and by (2) it is satisfiable, which is false. Therefore,
(α ∧β) ∈Δ.
(⇐). Assume that (α ∧β) ∈Δ. We will show that v((α ∧β)) = T. As (α ∧β) ∈Δ, it
must be the case that α ∈Δ and β ∈Δ. To see this, suppose that either α ∉Δ or β ∉Δ. If
α ∉Δ, then by (3), we have (¬α) ∈Δ. So {(α ∧β), (¬α)} is a finite subset of Δ and by (2) it is
satisfiable, which is false. A similar argument shows that β ∈Δ. Hence, α ∈Δ and β ∈Δ
and by (IH), we have v(α) = T and v(β) = T. Therefore, v((α ∧β)) = T by Remark 2.2.4(2).
Cases (α ∨β), (α →β), and (α ↔β): See Exercise 4 below.
(Claim 4)
Claim 4 implies that v satisfies Δ. Since Σ ⊆Δ, it follows that v satisfies Σ. Therefore,
there is a truth assignment that satisfies Σ.
(Theorem)
Remark 2.4.3. If we were working in a language that had uncountably many sentence
symbols, then Theorem 2.4.2 could be established by using Zorn’s lemma (Lemma 1.1.36)
to obtain a set of wffs Δ that satisfies items (1), (2), and (3) in the above proof. The re-
mainder of the proof would then be as that after the proof of Claim 3.
The next useful corollary is just the contrapositive of the Compactness Theorem 2.4.2.
Corollary 2.4.4. Let Σ be a set of wffs. If Σ is not satisfiable, then there is a finite subset Σ′
of Σ that is not satisfiable.

2.4 Compactness
౪
47
Let Σ be a set of wffs and let τ be a wff. From Exercise 16 on page 38, we have
Σ
̸󳀀󳨐τ
if and only if
Σ ∪{¬τ} is satisfiable.
(2.11)
The above equivalence (2.11) will be used in the proof of the following corollary.
Corollary 2.4.5. If Σ 󳀀󳨐τ, then there is a finite Σ0 ⊆Σ such that Σ0 󳀀󳨐τ.
Proof. Assume that Σ 󳀀󳨐τ. We shall prove that there is a finite Σ0 ⊆Σ such that Σ0 󳀀󳨐τ.
Suppose, for a contradiction, that for every finite Σ0 ⊆Σ, we have Σ0
̸󳀀󳨐τ. The above (2.11)
implies that
for every finite Σ0 ⊆Σ, Σ0 ∪{¬τ} is satisfiable.
(2.12)
Consider the set of wffs Π = Σ∪{¬τ}. The above statement (2.12) implies that every finite
subset of Π is satisfiable (why?). The compactness theorem thus asserts that Π = Σ∪{¬τ}
is satisfiable. Thus, by (2.11), we have that Σ
̸󳀀󳨐τ, which contradicts our assumption.
Exercises 2.4.
*1. Let Σ be a set of wffs and let α be a wff. Assume that Σ is finitely satisfiable. Prove
that either Σ ∪{α} or Σ ∪{¬α} is finitely satisfiable.
2. Let Σ be a set of wffs. Show Σ is not satisfiable if and only if Σ 󳀀󳨐(A ∧(¬A)).
3. Using the above Exercise 2, show that Corollary 2.4.5 implies Theorem 2.4.2.
*4. In the proof of Theorem 2.4.2, complete the proof of Claim 4.
5. Let Σ be the following 3-element set of wffs:
Σ = {((¬A ∨¬B) ∧C), ((¬A ∨¬C) ∧B), ((¬C ∨¬B) ∧A)}.
(a) Show that every subset of Σ containing less than three elements is satisfiable.
(b) Is Σ is satisfiable?
6. Let Σ and Π be sets of wffs. Suppose that for every finite Π0 ⊆Π, the set Σ ∪Π0 is
satisfiable. Using the compactness theorem, prove that Σ ∪Π is satisfiable.
7. Let Δ be a set of wffs such that:
(1) Δ is finitely satisfiable and
(2) for every wff α, either α ∈Δ or (¬α) ∈Δ.
Let γ and β be wffs.
(a) Suppose that γ ∈Δ and β is tautologically equivalent to γ. Show that β ∈Δ.
(b) Show that γ ∧β ∈Δ if and only if γ ∈Δ and β ∈Δ.
(c) Show that γ ∨β ∈Δ if and only if either γ ∈Δ or β ∈Δ.
(d) Prove that (γ →β) ∈Δ if and only if γ ∉Δ or β ∈Δ.
Exercise Notes: For Exercise 1, if Σ∪{α} and Σ∪{¬α} are not finitely satisfiable, then
there are finite subsets Σ1 and Σ2 of Σ such that Σ1 ∪{α} and Σ2 ∪{¬α} are not satisfiable.
Why? Now consider the finite set Σ1 ∪Σ2.

48
౪
2 Propositional logic
2.5 Deductions
Let Σ be a set of wffs and let ψ be a wff. We know that Σ 󳀀󳨐ψ means that every truth as-
signment that satisfies every formula in Σ will also satisfy ψ. Rather than working with
all such truth assignments, is it possible to “deduce” ψ from Σ? If so, what methods of
deduction would be required to demonstrate this fact? Whenever mathematicians com-
pose a proof, they justify a final conclusion by means of a series of intermediate steps.
Such steps typically appeal to some given assumptions and/or previously established
theorems. A theorem in mathematics is a statement that is true. Therefore, mathemati-
cians use assumptions and true statements to derive new results. In propositional logic,
can we use assumptions and tautologies to derive new results? In this section we will
positively address this question.
Definition 2.5.1. Let Σ be a set of wffs and let ψ be a wff. A deduction of ψ from Σ is a
finite sequence of wffs ⟨α1, α2, . . . , αn⟩such that αn = ψ and for each k ≤n,
1.
αk ∈Σ,
2.
αk is a tautology, or
3.
αk is obtained by modus ponens from some αi = (αj →αk) and αj, where i, j < k.
When there is a deduction of ψ from Σ, we shall say that ψ is deducible from Σ or that ψ
is a theorem of Σ, and we shall write Σ ⊢ψ. Recall that the inference rule modus ponens
is discussed on page 35.
A deduction can be viewed as a “formal proof,” where each step is governed by
rules (1)–(3) of Definition 2.5.1. We use the term deduction to avoid confusion with our
own mathematical proofs.
We now present two examples of deductions for which each “deduction sequence”
is written in a vertical form with a parallel justification for each step.
Example 2.5.2. Let Σ = {α, β}. Show that Σ ⊢(α ∧β).
Solution. The following (vertical) sequence satisfies the conditions in Definition 2.5.1:
1. α
in Σ,
2. β
in Σ,
3. α →β →(α ∧β)
tautology (see Exercise 4 on page 37),
4. β →(α ∧β)
from 1 and 3, by modus ponens,
5. (α ∧β)
from 2 and 4, by modus ponens.
Therefore, Σ ⊢(α ∧β).
Example 2.5.3. Let Σ = {H →¬B, D →B, H}. Show that Σ ⊢(¬D).

2.5 Deductions
౪
49
Solution. The (vertical) sequence below is a deduction:
1. H →¬B
in Σ,
2. D →B
in Σ,
3. H
in Σ,
4. ¬B
from 1 and 3, by modus ponens,
5. (D →B) →(¬B →¬D)
tautology (see contrapositive law),1
6. ¬B →¬D
from 2 and 5, by modus ponens,
7. ¬D
from 4 and 6, by modus ponens.
Hence, Σ ⊢(¬D).
The definition of Σ 󳀀󳨐ψ involves truth assignments and the definition of Σ ⊢ψ in-
volves a “deduction sequence.” On the surface, these two concepts, Σ 󳀀󳨐ψ and Σ ⊢ψ,
seem to be unrelated. However, they are in fact intimately related. Our next two theo-
rems will confirm this purported intimacy. The first theorem shows that if the assump-
tions in Σ are true and Σ ⊢ψ, then the deduction ψ is also true, that is, our deduction
system preserves truth and for this reason, it is said to be sound.
Theorem 2.5.4 (Propositional soundness). Let Σ be a set of wffs and ψ be a wff. If Σ ⊢ψ,
then Σ 󳀀󳨐ψ.
Proof. Suppose that Σ ⊢ψ. So let ⟨α1, α2, . . . , αn⟩, where αn = ψ, be a deduction of ψ
from Σ. For each natural number k, we shall prove that if 1 ≤k ≤n, then Σ 󳀀󳨐αk. We
shall use strong induction on k. If k = 1, then by Definition 2.5.1, either α1 ∈Σ or α1 is a
tautology. It thus follows that Σ 󳀀󳨐α1 (see Exercise 2 on page 37). Now let k be such that
1 < k ≤n and assume the induction hypothesis
Σ 󳀀󳨐αi
for all i < k.
(IH)
We must show that Σ 󳀀󳨐αk. Again, if αk ∈Σ or αk is a tautology, then we have Σ 󳀀󳨐αk. On
the other hand, suppose that αk is obtained by modus ponens from some αi = (αj →αk)
and αj, where i, j < k. By the induction hypothesis (IH), we have Σ 󳀀󳨐(αj →αk) and
Σ 󳀀󳨐αj. Hence, Σ 󳀀󳨐αk (see page 35). This completes the induction, and thus, Σ 󳀀󳨐ψ.
Our next theorem shows that the converse of Theorem 2.5.4 holds, that is, for every
wff ψ, if Σ tautologically implies ψ, then there is a deduction of ψ from Σ. Thus, our
deduction system is said to be complete.
Theorem 2.5.5 (Propositional completeness). Let Σ be a set of wffs and let ψ be a wff. If
Σ 󳀀󳨐ψ, then Σ ⊢ψ.
1 See Exercise 10 on page 38.

50
౪
2 Propositional logic
Proof. Assume that Σ 󳀀󳨐ψ. Corollary 2.4.5 implies that there is a finite Σ0 ⊆Σ such that
Σ0 󳀀󳨐τ. Let Σ0 = {α1, α2, . . . αn}. Exercise 6 below implies that
α1 →α2 →⋅⋅⋅→αn →ψ
is a tautology. By repeated use of modus ponens, it easily follows that Σ0 ⊢ψ. As Σ0 ⊆Σ,
we conclude that Σ ⊢ψ.
Theorems 2.5.4 and 2.5.5 immediately establish the following result.
Theorem 2.5.6. Let Σ be a set of wffs and let ψ be a wff. Then Σ 󳀀󳨐ψ if and only if Σ ⊢ψ.
Our next theorem can sometimes be used to indirectly show that a deduction exists.
Our proof of this result applies Theorem 2.5.6.
Theorem 2.5.7 (Deduction theorem). Let Σ be a set of wffs and let α and β be wffs. Then
Σ ⊢(α →β) if and only if Σ ∪{α} ⊢β.
Proof. Let Σ be a set of wffs and let α and β be wffs. We thus have
Σ ⊢(α →β)
iff
Σ 󳀀󳨐(α →β)
by Theorem 2.5.6,
iff
Σ ∪{α} 󳀀󳨐β
by Exercise 9 on page 38,
iff
Σ ∪{α} ⊢β
by Theorem 2.5.6.
Example 2.5.2 shows that {γ, σ} ⊢(γ ∧σ). So by Theorem 2.5.7, {γ} ⊢(σ →(γ ∧σ)),
where Σ = {γ}, α is σ, and β is (γ ∧σ).
In the conditional α →β, α is called the hypothesis and β is called the conclusion. In
a mathematical proof of a conditional “if , then ”, one typically assumes the hypothe-
sis and then derives the conclusion. The deduction theorem affirms that this is a valid
technique of proof in mathematics.
Our final theorem of this section verifies that “proof by contradiction” is a valid
proof technique.
Definition 2.5.8. A set of wffs Σ is said to be inconsistent if there exists a wff β such that
Σ ⊢β and Σ ⊢¬β. Moreover, Σ is consistent if for no wff β we have Σ ⊢β and Σ ⊢¬β.
Theorem 2.5.9. Let Σ be a set of wffs and let α be a wff. If Σ ∪{¬α} is inconsistent, then
Σ ⊢α.
Proof. Assume that Σ ∪{¬α} is inconsistent. Hence, for some wff β we have Σ ∪{¬α} ⊢β
and Σ∪{¬α} ⊢¬β. Thus, by Theorem 2.5.7 (the deduction theorem), we have Σ ⊢(¬α →β)
and Σ ⊢(¬α →¬β). By Exercise 5 on page 37,
(¬α →β) →(¬α →¬β) →α
is a tautology. Exercise 4 below now implies that Σ ⊢α.

2.5 Deductions
౪
51
There are alternative deduction systems for propositional logic that are equivalent
to the one presented in this section. In particular, there are deduction systems that start
with a finite set of tautologies and from this finite set one can then deduce all of the other
tautologies. Consequently, the deductions in such systems can be much longer than those
presented in this text. On the other hand, there are deduction systems that consist only
of a finite number of inference rules and from these rules one can deduce all of the tau-
tologies. Again, such deductions can be longer than the ones presented here. For each
of these alternative systems, one can prove a corresponding analogue of Theorem 2.5.6,
and thus these deduction systems are equivalent. In an introductory course in mathe-
matical logic, we believe that one should present a deduction system that is succinct and
produces the desired results.
Exercises 2.5.
1. Let Σ be an infinite set of wffs and let α be a wff. Show that if Σ ⊢α, then there is a
finite Σ0 ⊆Σ such that Σ0 ⊢α.
2. Let Σ be a set of wffs and let α be a wff. Let Σ0 ⊆Σ. Show that if Σ0 ⊢α, then Σ ⊢α.
3. Let Σ be a set of wffs and let ψ be a tautology. Show that Σ ⊢ψ.
*4. Let Σ be a set of wffs and let θ, ψ be wffs. Suppose that Σ ⊢θ and Σ ⊢(θ →ψ). Show
that Σ ⊢ψ.
5. Let Σ1 and Σ2 be sets of wffs and let α and β be wffs. Suppose that Σ1 ⊢α and Σ2 ⊢β.
Show that Σ1 ∪Σ2 ⊢(α ∧β).
*6. Let n ≥1 be a natural number and let Σn = {α1, α2, . . . αn} be a set of n wffs. Prove
that for all wffs θ, if Σn 󳀀󳨐θ, then α1 →α2 →⋅⋅⋅→αn →θ is a tautology.
7. Let n ≥1 be a natural number and let Σn = {α1, α2, . . . αn} be a set of n wffs. Prove
that for all wffs θ, if α1 →α2 →⋅⋅⋅→αn →θ is a tautology, then Σn 󳀀󳨐θ.
8. Give a deduction from the set Σ = {¬A ∨B, B →C, A} whose last component is C.
9. Let Σ be an infinite set of wffs. Show that if Σ is inconsistent, then a finite subset of
Σ is inconsistent.
Exercise Notes: For Exercise 6, one can repeatedly apply Exercise 9 on page 38 (see
Remark 2.2.13(b)). A more formal proof of this result can be obtained by induction on n.
For Exercise 7, a proof of this result is obtained by induction on n (see (2.4) on page 37).

