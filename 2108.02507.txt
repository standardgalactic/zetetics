Shape Modeling with Spline Partitions
Shufei Ge∗Shijia Wang† and Lloyd T. Elliott ‡
Abstract.
Shape modelling (with methods that output shapes) is a new and
important task in Bayesian nonparametrics and bioinformatics. In this work, we
focus on Bayesian nonparametric methods for capturing shapes by partitioning
a space using curves. In related work, the classical Mondrian process is used to
partition spaces recursively with axis-aligned cuts, and is widely applied in multi-
dimensional and relational data. The Mondrian process outputs hyper-rectangles.
Recently, the random tessellation process was introduced as a generalization
of the Mondrian process, partitioning a domain with non-axis aligned cuts in
an arbitrary dimensional space, and outputting polytopes. Motivated by these
processes, in this work, we propose a novel parallelized Bayesian nonparametric
approach to partition a domain with curves, enabling complex data-shapes to
be acquired. We apply our method to HIV-1-infected human macrophage image
dataset, and also simulated datasets sets to illustrate our approach. We compare
to support vector machines, random forests and state-of-the-art computer vision
methods such as simple linear iterative clustering super pixel image segmentation.
We develop an R package that is available at https://github.com/ShufeiGe/
Shape-Modeling-with-Spline-Partitions.
Keywords: Bayesian nonparametrics, Mondrian process, inﬁnite relational model,
Bézier curve.
1
Introduction
Shapes (the boundaries of objects) within images are widely studied in biological science.
This application domain includes for example classifying cells collected in a blood sample
from individuals, and characterizing brain diseases of patients by analyzing shapes
within brain images. One basic issue that arises in estimating shapes is the choice of the
representation of the shape. Curves (Bu-Qing and Ding-Yuan, 2014; Muller, 1997) are
commonly used to provide ﬂexible representations of a wide range of objects (e.g. tumors,
cells). In related work, shape models have been explored using smooth stochastic processes
(Kurtek et al., 2012). Bayesian hierarchical models and Gaussian processes have also been
used (Gu et al., 2012; Lin et al., 2019). Bayesian nonparametrics has identiﬁed shape
modelling as an important area of application, supplementing traditional classiﬁcation,
regression and clustering applications (Hannah and Dunson, 2013; Bhattacharya and
Dunson, 2010). We consider modeling shapes within image with curves, in the framework
of space partitioning methods.
∗Institute of Mathematical Sciences, ShanghaiTech University, China, geshf@shanghaitech.edu.cn
†School of Statistics and Data Science, LPMC and KLMDASR, Nankai University, China, shi-
jia_wang@nankai.edu.cn
‡Department
of
Statistics
and
Actuarial
Science,
Simon
Fraser
University,
Canada,
lloyd_elliott@sfu.ca
arXiv:2108.02507v1  [stat.ML]  5 Aug 2021

2
The Mondrian process (Roy and Teh, 2008) partitions multidimensional space into
hyper-rectangles with recursive axis-aligned hyperplane cutting. In the Mondrian process,
hyper-rectangles are assigned to lifetimes (i.e., costs) sampled from an exponential
distribution, with rate given by the perimeter of the hypercube. In each iteration, the
hypercube with the smallest lifetime is removed and replaced by two new partitioning
hyper-rectangles with randomly sampled hyperplanes. New lifetimes for all existing
hyper-rectangles are then sampled. This process repeats until the total cost exceeds a
prespeciﬁed budget. The Mondrian process is used as a nonparametric prior distribution
in Bayesian models of relational data, and provides a Bayesian view of decision trees (Roy
and Teh, 2008; Kemp et al., 2006). Developments in the Mondrian process for space
partitioning achieve high predictive accuracy, with improved eﬃciency. These methods
include online methods (Lakshminarayanan et al., 2014), and particle Gibbs for Mondrian
process additive regression trees (Lakshminarayanan et al., 2015). However, the axis-
aligned hyperplanes of the decision boundaries of the Mondrian process restrict its
ﬂexibility, which could lead to failure in capturing inter-dimensional dependencies
among features. Bayesian nonparametric methods have been introduced to generalise
the Mondrian process and allow non-axis aligned cuts, such as generating arbitrary
oblique cutting lines or hyperplanes (Fan et al., 2018, 2019, 2016; Ge et al., 2019) to
partition the target space. Alternative constructions of non-axis aligned partitioning for
multidimensional spaces and non-Bayesian methods include sparse linear combinations
of predictors or canonical correlation as random forest generalisations (George, 1987;
Tomita et al., 2015; Rainforth and Wood, 2015).
We propose a shape modeling with spline partitions process (SMSP), an extension of
the Mondrian process and random tessellation process (RTP), which further modiﬁes the
random tessellation process by replacing the non-axis aligned cutting hyperplanes with
curved cuts. The SMSP provides a framework for describing Bayesian nonparametric
models based on partitioning two-dimensional Euclidean space with splines. The proposed
nonlinear curves enable more complex data-structures to be represented, and allow
arbitrary shapes to be approximated and outputted by the model. As with the random
tessellation process, the construction of the SMSP is based on the theory of stable
iterated tessellations in stochastic geometry (Nagel and Weiss, 2005). The partitions
induced by the SMSP prior are described by a sets of compact subsets. We note that in
contrast to the RTP, each compact subset could contain more than one disjoint connected
components (i.e., the blocks of the partition need not be connected).
We implement a sequential Monte Carlo (SMC) algorithm (Doucet et al., 2000) for
SMSP inference, which takes advantage of the hierarchical structure of the generative
process of SMSP. The SMC algorithm can be easily parallelized by allocating samples
across multiple CPUs (cores) to decrease the computational time. Our simulation study
provides evidence that our shape modeling with spline partitions exhibits rotational and
translational invariance, however exploring the consistency of SMSP is an area of future
work. We apply our proposed model to simulated yin-yang data and an HIV-1-infected
human macrophage dataset to demonstrate its eﬀectiveness. For the experiment on the
macrophage dataset, we consider a task wherein the perimeter of a macrophage cell
is estimated. Shapes of biological microstructures may indicate disease etyology. For
example, the fractal dimension of vascularization in a cancer tumor is known to be

3
modulated during remission and metastasis (Gazit et al., 1997). This motivates perimeter
estimation, as estimation of perimeters through a continuum of resolution indicates
fractal dimension.
2
Methods
We characterize shapes by describing their boundaries through a space partitioning
approach. Let (v1, z1), . . . , (vn, zn) denote n observed data items, where vi ∈R2 are
predictors and zi ∈{1, . . . , K} are labels. In our application, we are interested in
modeling the shapes within a two-dimensional image. The predictors vi are pixels of
image, and the labels zi are labels of shapes. For example, in our real data application,
we are interested in estimating the shapes of HIV-1-infected human macrophage. Pixels
falling within the cell are labelled 1 and other pixels are labelled 2.
A Bayesian nonparametric model partitions the feature space by placing a prior
distribution on the partition process, and associates model parameters with the blocks
of the partition. Inference is then made on the joint posterior of the parameters and the
structure of the partition. In this section, we develop the SMSP and place a prior on
partitions of (v1, z1), . . . , (vn, zn) induced by partitions via splines in a two-dimensional
feature space.
2.1
Shape Modeling with Spline Partitions
A partition Y in the SMSP of a bounded domain W ⊂R2 is a ﬁnite collection of compact
subsets, such that the union of the subsets is all of W, and the subsets have pairwise
disjoint interiors (Chiu et al., 2013). Note that each subset may contain more than one
disjoint connected components, as shown in Figure 1. Also: throughout this work we
consider the two-dimensional plane (although, these methods may be generalized to higher
dimensions as a point of future work). Denote C0 as the set of all compact sets with ﬁnitely
many connected components, C0 = ∪Jc
j=1Cj, Jc ≥2, interior(Ci) ∩interior(Cj) = ∅
for any i ̸= j. Let Si, i = 1, · · · , Js denotes each subset in the partition, and each Si
could contain more than one disjoint connected components. We denote partitions of
W by Y(W), Y(W) = ∪Js
i=1Si, Si = ∪Cj∈SiCj. For example, in Figure 1, at time τ4,
Y(W) = ∪5
i=1Si, S1 = C1, S2 = C2 ∪C5, S3 = C4, S4 = C3 ∪C6, S5 = C7.
The SMSP forms a partition. An element of the partition is a subset with non-empty
interior formed by the intersection of ﬁnitely many closed curves. The SMSP itself Yt(W)
is a partition-valued Markov process deﬁned on [0, τ], with cutting events speciﬁed by
splines that intersect the partition’s subsets. Here τ is a prespeciﬁed budget (Berger,
2012). The SMSP Y0(W) is initialized with a single subset W covering all of the observed
predictors: W is the convex hull hull{v1, . . . , vn}. The Markov process for the SMSP
associates each subset with an exponentially distributed lifetime. The subset is replaced
by two new subsets at the end of subset’s lifetime t. At time t, we sample a spline that
intersects the interior of the old subset to form two new subsets. We evolve the Markov
process until we reach the prespeciﬁed budget τ.

4
Figure 1: An example of a generative process from the SMSP prior with domain given
by a two dimensional box (x, y) ∈[−1, 1]2. Colours indicate subsets identity, and are
randomly assigned.
As in Ge et al. (2019), we associate a measure on splines with the generative process
described in Section 2.3. If W ′ is a subset of W, let [W ′] be the set of all splines formed
by the generative process described in Section 2.3 that intersect W ′. The generative
process thus implicitly deﬁnes a measure Λ on splines such that the density of the spline
found through the generative process is Λ(·)/Λ([W ′]). We can sample from this density
using rejection sampling.
To sample an SMSP, we sample a Bézier curve (Mortenson, 1999) to cut a subset.
Bézier curves are widely used in computer graphic to draw shapes, due to their ﬂexibility
in modeling complex shapes and their simple mathematical formulation. Let B be the
set of Bézier curves in R2. Every Bézier curve b is uniquely deﬁned by a set of control
points P0, . . . , Pn, where n is the order of the Bézier curve. In our numerical experiments,
we let n takes values from 1, 2, 3 randomly (n = 1 for linear, 2 for quadratic, 3 for cubic).
Algorithm 1 depicts pseudo-code of the generative process for the SMSP.

5
Input: a) A set W, b) A measure Λ on splines, c) A prespeciﬁed budget τ.
Output: A time-varying SMSP (Yt)0≤t≤τ.
τ0 ←0, Y0 ←{W}.
while τ0 ≤τ do
Sample τ ′ ∼Exp
P
a∈Yτ0 Λ([a])

.
Set Yt ←Yτ0 for all t ∈(τ0, min{τ, τ0 + τ ′}], Set τ0 ←τ0 + τ ′.
if τ0 ≤τ then
Sample a subset S from the set Yτ0 with probability proportional to
Λ([S]).
Sample a Bézier curve b from [S] according to the probability measure
Λ(· ∩[S])/Λ([S]).
Yτ0 ←(Yτ0/{S}) ∪{S ∩b−, S ∩b+}.
Here b−and b+ are the plane partitions on either side of b.
else
return the Markov process sample (Yt)0≤t≤τ.
end
end
Algorithm 1: A generative Process for the SMSP.
2.2
Coordinate rotation
We discuss the problem of determining which side of a Bézier curve a point lies on. This
is required in order to partition points in the target, given the Bézier curve cuts. After
proposing a Bézier curve in a reference coordinate system, we may rotate it and translate
it along a normal vector in order to produce a proposal for the cut. However, after
rotation the curve may no longer be a function of the x-axis (i.e., the mapping from x
to the rotated and translated spline is not injective), which makes it diﬃcult to identify
which side of the curve target points lie on (we cannot just compare their y-levels). This
is shown in Figure 2 (a). In order to use the Bézier curve to split targets after rotation
by an arbitrary angle, we rotate the coordinate system rather than the curve. We project
the targets to a new coordinate system and the Bézier curve proposal can split the
targets by comparing the y-levels in the new coordinate system. This rotation is shown
in Figure 2 (b) - (c). The translation of the Bézier curve is displayed in Figure 2 (d) -
(e). Figure 2 (f ) and (g) show subsets of Bézier curves splitting targets according to an
arbitrary angle.
2.3
Generative process for the cutting spline
Now we turn to the description of a generative process for the cutting spline. Without
loss of generality, we can assume the shape being cut is a square. Our cutting procedure
should deﬁne a cut given by a single random spline, and incorporate the coordinate
rotation scheme. The generative process is as follows:

6
((a)
((b)
((c)
((d)
((e)
((f)
((g)
Figure 2: An example of coordinate rotation. (a) A rotated Bézier curve (with angle
θ), which is not injective in the original coordinate system. (b-c) A new coordinate
system and a Bézier curve proposed so as to be injective. The new coordinate is obtained
by rotating the original coordinate by angle θ. (d-e) Translating a Bézier curve in the
new coordinate system. (f ) A subset of a Bézier curve splits the targets from diﬀerent
positioning via moving up and down. (g) A subset of a Bézier curve splits the target
from diﬀerent angles and positions.
1. Project the shape to a new coordinate system by rotating the coordinate with angle
θ as in Figure 2 (a) - (c), and moving it along a normal vector by t as in Figure 2
(e) - (f ). Denote the coordinates before projection by (x, y), and after projection
by (x′, y′). Without loss of generality, we assume (x, y) ∈[−1
2, 1
2] × [−1
2, 1
2]. The
rotation proposed above indicates the following transformations:
x′
y′

=
cos(θ)
−sin(θ)
sin(θ)
cos(θ)
 x
y

,
θ ∼Uniform(0, 2π).
(1)
2. Sample control points for the spline in the new coordinate system via following
sampling scheme:
(a) Sample the number of control points, nc, from values {2, 3, 4} with equal
probability.
(b) Generate control points P={(xc
1, yc
1),. . . , (xc
nc, yc
nc)} such that:
xc
1 = a, xc
nc = b,

7
 
 
 
0.0
0.2
0.4
0.6
0.8
1.0
0
20
40
60
80
100
120
p value
Count
 
 
 
0.0
0.2
0.4
0.6
0.8
1.0
0
20
40
60
80
100
120
p value
Count
(a)
(b)
Figure 3: (a) Frequency of p-values of bivariate uniformity tests on 1000 experiments.
The left panel displays the p-values of data sampled from the ﬁrst cuts, the right panel
presents the p-values of data sampled from a bivariate uniform distribution. (b) The
upper panels are bivariate density plots of 5 randomly selected experiments, in which
data are sampled from the proposed ﬁrst cuts on a unit square; the lower panels show
density of 5 random draws of 5000 points sampled from a uniform distribution on a unit
square.
xc
j = u(j−1), u(k) is the kth order statistic among u1, . . . , unc−1, ∀1 < j < nc,
where uj ∼Uniform(a, b),
yc
j ∼Uniform(c, d), ∀j ∈{1, nc}.
(c) The Bézier curve gθ,P(x′) in the new coordinated system is then determined
by the control points, according to Mortenson (1999).
(d) Sample l ∼Uniform(l1, l2), shift the Bézier curve along the y-axis in the
new coordinate system by adding l to it. Denote the new Bézier curve as
gθ,P(x′) + l.
3. Divide the segment into two new segments by the Bézier curve gθ,P(x′) + l.
4. Transform the new segments and the Bézier curve gθ,P(x′) + l back to the original
coordinate system.
Note that we assume that a < b, c < d, l1 < l2. If we choose a, b, c, d, l1, l2 appropriately,
the proposed curves would likely to be uniformly distributed over the target.
2.4
Translational and rotational invariance
Translational and rotational invariance are desirable properties for Bayesian nonparamet-
ric objects (as the inference becomes independent of the nature of the injection of the
object into Euclidean space). For a bounded domain W, if Yt(W) is equal in distribution
to Yt(TW) (where T is an aﬃne transformation), then translational and rotational

8
invariance hold. We conduct a simulation study to explore invariance for the SMSP. The
experiment is repeated 1000 times with diﬀerent random seeds. In each replicate, we
generate 5000 random Béizer curves that intersect with the unit square [0, 1]2, with
a = −
√
2/2, b =
√
2/2, c = −
√
2/2, d =
√
2/2, l1 = max{y′} −min{gθ,P(x′)}, l1 =
min{y′} −max{gθ,P(x′)}. We randomly sample one point from each Béizer curve, the
total number of sampled points is 5000 in each replicate. Under the assumption of
invariance, the sampled points lying inside the square are distributed according to a
bivariate uniform random variable. We then conduct a bivariate uniformity test (Yang
and Modarres, 2017) on the sampled points for each experiment. The null hypothesis
H0 is that the data are drawn from a bivariate uniform distribution on a square. The
frequency of the p-values is displayed in Figure 3 (a) left panel, in which 950 out of
the 1000 p-values are greater than 0.05. We also provide the p-values of the bivariate
uniformity test on 1000 random draws of 5000 points sampled from a uniformly distri-
bution on [0, 1]2 as a benchmark in Figure 3 (a) right panel, and 951% of the p-values
are greater than 0.05. In Figure 3 (b) upper panels, we provide the bivariate density
plots of 5 randomly drawn data sets from the 1000 replicates. The density plots show
that the distribution of data points are not concentrated on a certain small area, but
on many small areas or the distribution is relatively ﬂat over the square, which has a
similar pattern as bivariate uniform distributions (e.g. Figure 3 (b) lower panels). This
indicates the sampled points may follow a bivariate uniform distribution, and provides
evidence of invariance.
2.5
Sequential Monte Carlo for SMSP inference
We use techniques from relational modeling for categorical data in order to specify a
likelihood model for the SMSP. This speciﬁes the same likelihood that was used in the
random tessellation process (Ge et al., 2019). Let Y t(W ) be an SMSP on the domain
W = hull{v1, . . . , vn}. We use Jt to denote the number of subsets in Y t(W ). Given the
hyperparameter α, the likelihood function for Z = (zi)1≤i≤n conditioned on Y t(W )
and V = (vi)1≤i≤n is as follows:
P(Z|Y t(W ), V, α) =
Jt
Y
j=1
B(α + mj)
B(α)
.
(2)
Here B(·) is the multivariate beta function, mj = (mjk)1≤k≤K and mjk = P
i:h(vi)=j δ(zi =
k), and δ(·) is an indicator function with δ(zi = k) = 1 if zi = k and δ(zi = k) = 0
otherwise.
Our objective is to infer the normalized posterior distribution of Y t(W ), denoted
π(Y t(W )). We use π0(Y t(W )) to represent the prior distribution of Y t(W ), which is
the generative process of SMSP. Let P(Z|Y t(W ), V, α) denote the likelihood of the
data given the spline partition Y t(W ) and the hyperparameter α. By Bayes’ rule, the
posterior of the partition at time t is
π(Y t(W )|V, Z, α) = π0(Y t(W ))P(Z|Y t(W ), V, α)/P(Z|V, α).

9
Here P(Z|V, α) denotes the marginal likelihood given data Z. This marginal likelihood
is intractable. Hence, the posterior distribution of Y t(W ) does not admit a closed
form. We develop an SMC algorithm to infer π(Y t(W )), by taking advantage of the
hierarchical structure of the SMSP prior. Our algorithm iterates between three steps
until a total budget τ is reached: resampling particles, propagation of particles and
weighting of particles.
• A resampling step is conducted to prune particles with small weights.
• We propagate particles via the generative process described in Algorithm 1, which is
based on the generative process for the RTP (Ge et al., 2019). As in Ge et al. (2019),
we consider an approximation of the measure Λ by replacing Λ([W ′]) by r, where r
is the radius of the smallest circle covering the subset W, which is an upper bound
for Λ([W ′]). Note that in line 6 of Algorithm 1, we omit a potential scaling factor
on the radius r (this can be amortized by rescaling the prespeciﬁed budget). Firstly,
we sample a subset S from the set Y τm,m(W ) probability proportional to rS.
Secondly, we sample a Bézier curve b from [S] according to Λ(· ∩[S])/Λ([S]) using
Section 2.2. Finally, we set Y τm,m(W ) ←(Y τm,m(W )/{S}) ∪{S ∩b−, S ∩b+}.
• In the weighting step, the weight update function is the ratio of likelihoods, as
we propagate particles from the prior distribution. We compute the normalized
weights of each particle according to
ϖm ∝ϖmP(Z|Y τm,m(W ), V , α)/P(Z|Y ′
τm,m(W ), V , α).
Here the likelihood P is deﬁne according to (2).
We obtain a list of weighted particles to approximate the SMSP posterior PM
m=1ϖmδY τ,m(W )
at time τ. Here m is the particle index, M is the total number of particles and ϖm are
the particle weights.
Two methods are used to decrease the cost and complexity for computation. Firstly,
we approximate Λ([S]) with the measure Λ([·]) applied to the smallest closed circle
containing S in the computation of the lifetimes of subsets. Secondly, we use a pausing
condition so that no cutting splines are proposed for subsets in which the labels of
all predictors are same. We refer readers to Ge et al. (2019) for more details of these
two methods and the framework of the SMC algorithm. In addition, we parallel the
propagation step and the weighting step in the SMC algorithm by allocating samples
across multiple CPUs (cores) to decrease the computational time.
3
Experiments
In Section 3.1, we conduct a simulation study to evaluate the performance of our SMC
approach with respect to diﬀerent number of cores and particles. In Section 3.2 we
evaluate our method via an HIV-1-infected human macrophage image data sets, and
compare our method with modern machine learning approaches. We also explore the

10
value of outputting shapes by computing the perimeter of the cells. Throughout our
experiments, we set the likelihood hyperparameters for the SMSP to αk = nk/1000,
nk = P
i δ(zi = k), and use δ(·) as is an indicator function with δ(zi = k) = 1 if zi = k
and δ(zi = k) = 0 otherwise.
3.1
Simulations on a yin-yang dataset
We simulate a yin-yang dataset. First, we uniformly sample 10000 points in the square
[−1, 1]2, points falling outside of the circle x2 + y2 = 1 are removed. Points satisfying
(x−0.5)2+y2 < 0.12 or x > 0, y < 0, (x−0.5)2+y2 > 0.25 or x < 0, y < 0, (x+0.5)2+y2 >
0.12 or x < 0, y > 0, (x + 0.5)2 + y2 < 0.25 are labeled 1 and the rest are labeled 2.
Figure 4a provides a visualization of the yin-yang dataset, wherein points are colored
black or white based on their label. We ﬁrst conduct an experiment to evaluate the
performance of SMC approach with respect to diﬀerent number of particles. Each
experiment is repeated 100 times, and we allocate 60% of the data items at random
to a training set, the rest to the testing set. Figure 4b displays the best ﬁrst cuts with
diﬀerent number of particles. The ﬁrst cut can generally capture the division of the
yin-yang image when we use N = 5000 particles in SMC. Figure 5(Right) shows that
the percentage correct of SMC increases with a larger value of particles, which indicates
that a larger number of particles can improve the performance of the SMC algorithm.
This is expected as the consistency property of SMC holds when number of particles
goes to inﬁnity (Chopin, 2004). We note that due to the recursive nature of tree-based
algorithms such as the SMSP, successful ﬁrst cuts suggest good general performance of
the algorithm.
(a)
(b)
Figure 4: (a) A view of the yin-yang dataset, with black indicting label 1 and white
indicting label 2. (b) Best ﬁrst cuts among diﬀerent number of particles. Each experiment
is repeated 100 times.
We conduct another experiment to evaluate the computational cost of our SMC
approach. The experiments are run on Intel E5-2683 v4 Broadwell 2.1Ghz machines.
As indicated in Figure 5(Middle), the running time of SMC is a linear function of the
number of particles. A larger number of particles increase the computational cost. But
we can parallelize the propagation and weighting steps to decrease the cost by allocating
samples across diﬀerent cores. The computational cost decreases more than 10 times if
we use 20 cores (Figure 5(Left)). This shows one advantage of using our SMC approach
over traditional Bayesian inference methods such as Markov chain Monte Carlo.

11
1
3
5
7
9
11
13
15
5
10
15
20
No. of Cores
Cost Ratio
particles
100
500
1000
2000
5000
0
50
100
100
2000
5000
No. of Particles
Running time (seconds)
87.5
88.5
89.5
90.0
100
2000
5000
No. of Particles
% Correct
Figure 5: (Left) Cost-ratio of SMC versus number of cores with diﬀerent number of
particles settings. The baseline is the running time with 20 cores. (Middle) Running
time (seconds) of SMC versus diﬀerent numbers of particles with 16 cores. (Right) %
correct of parallel SMC with diﬀerent numbers of particles. All experiments were run on
Intel E5-2683 v4 Broadwell 2.1Ghz machines.
3.2
Experiment on an HIV-1–infected human macrophage
We evaluate the performance of the SMSP on a series of images of Human Immunodeﬁ-
ciency Virus Type I (HIV-1) infected human macrophage. We also display the results
provided by some popular image segmentation approaches, such as the Simple Linear
Iterative Clustering (SLIC) Superpixels (Achanta et al., 2010, 2012), zero version of
the SLIC (SLICO) (Ren and Malik, 2003; Lucchi et al., 2010), aﬃnity propagation
clustering based on the SLIC superpixels (SLICAP)
(Frey and Dueck, 2007; Zhou,
2015) and supervised classiﬁcation algorithms methods, such as the K-nearest neighbor
classiﬁer (KNN), decision trees (DT), random forest (RF) (with 100 trees), support
vector machines (SVM).
The images are extracted from a real-time video showing HIV-1–infected human
macrophage sensing its environment (Gaudin). Images are taken from stills every second
from the video, with 12 images are acquired (see Figure 6a). All images are converted
to binary images and each binary image contains 600 × 460 pixels. We reduce the size
of each image to 20% of its original size (i.e. 120 × 92 pixels) and set the domain of
the coordinates to [−1
2, 1
2] × [−1
2, 1
2], and these images are assumed to be the ground
truth (see Figure 6b). Our goal is to capture the smooth shape of HIV-1–infected human
macrophage for each image. In this experiment, we use 2000 particles, 16 cores, and set
τ = ∞(i.e., running the SMSP until the pausing conditions are met for all partitions).
The rest of the parameters are set to the default values described in the beginning of
this section.
4
Results
Macrophage infection is a major aspect of HIV-1 (Merrill and Chen, 1991; Cunningham
et al., 1997; Hrecka et al., 2011; Koppensteiner et al., 2012). Measures of HIV-1–infected

12
(a)
(b)
(c)
Figure 6: (a) Original Images. (b) Ground truth. (c) SMSP produced image shapes
(with shape boundaries in blue) with diﬀerent budgets. Rows from top to bottom are
the shapes produced by the SMSP with τ = 10, 50, 100, 200.
human macrophages, such as the perimeters of infected cells may reveal aspects of HIV-1
etiology (Castellano et al., 2017). To acquire these shapes within an image, we combine
the curves that lie at the boundaries between subsets in the partition, and then mark the
curve segments as interior boundaries if the K nearest pixels on both sides of the curve
have the same label, and then remove the interior boundaries. This leaves only curves
that delineate the boundary of the object. We sample points from the curves randomly
and use the K-nearest neighbours algorithm, K = 10, and restrict the distance within
q
1
1202 +
1
922 to obtain the nearest pixels on both sides of the curve for each point. We
also tried K-nearest neighbours without the distance restriction, but found that the
boundaries were rougher.
We then extract properties of the resulting shape. In this experiment we focus on the
perimeter. Figure 6c displays the shapes of the macrophage captured by the SMSP with
diﬀerent budgets, and Table 1 displays the corresponding estimated perimeters. The 12
extracted images in the Table are labelled by I1, I2, . . .. In Figure 6c, overplotting (in
which multiple splines indicate the same border) arises on the boundaries. The degree
of overplotting increases linearly with budgets: Figure 7a. This suggests that the true
perimeter of the shape is proportional to ˜p/τ, where ˜p is the perimeter of the shape
found by the SMSP.

13
3
6
7
10
50
100
200
τ
Perimeters
(a)
0.80
0.85
0.90
0.95
1.00
1
200
500
Inf
τ
JSC
0.997
0.998
0.999
1.000
1
200
500
Inf
τ
SSIM
0.00
0.02
0.04
0.06
0.08
0.10
1
200
500
Inf
τ
MSE
10
20
30
1
200
500
Inf
τ
PSNR
0.80
0.85
0.90
0.95
1.00
1
200
500
Inf
τ
JSC
0.997
0.998
0.999
1.000
1 200
500
Inf
τ
SSIM
(b)
Figure 7: (a) Estimated perimeters of shapes as a function of budget for images 1 to 12.
Each line represents one image. (b) Performance measures MSE, PSNR, JSC and SSIM
as a function of budget for hiv dataset. For MSE, lower is better and for PSNR, SSIM
and JSC higher is better.
Table 1: Estimated perimeters of the shapes of the 12 images (I1 to I12) by the SMSP
with diﬀerent budgets.
τ
I1
I2
I3
I4
I5
I6
I7
I8
I9
I10
I11
I12
10
2.99
2.87
2.88
1.11
0.77
1.05
1.00
1.50
0.60
1.65
1.16
1.08
50
4.38
3.13
2.99
2.65
1.89
2.04
1.65
1.56
2.27
1.93
1.64
1.21
100
5.21
4.06
4.58
3.48
2.38
2.89
3.28
2.73
3.19
2.38
1.93
1.81
200
6.24
6.47
6.81
5.15
3.87
3.88
5.07
4.01
5.31
4.44
2.62
2.23
We compare the ground truth and predicted images with diﬀerent budgets via both
visualization (see Supplementary Figure 1 in Appendix A of the Supplementary Material)
and quantitative measures (Figure 7). Figure 7b displays the mean squared error (MSE),
peak signal-to-noise ratio (PSNR), Jaccard similarity coeﬃcient (JSC) and structural
similarity (SSIM) of SMSP as a function of budgets. Each line denotes a quantitative
measure for one image. The MSEs decrease as the budget τ increase, and becomes stable
when τ exceed 20. The PSNRs, JSCs and SSIM increase rapidly for small budgets and
become stable when τ > 20. Table 2 shows the average of diﬀerent quantitative measures
on the images across the methods. Supplementary Figure 1(b) displays the predicted
images versus budgets, with ground truth (Supplementary Figure 1(a)), showing that a
large budget can better capture the shape of the macrophage. Comparing Supplementary
Figure 1(b) to Supplementary Figure 1(c-d), our proposed SMSP captures the shapes of
the images comparable or better to other methods. Table 2 and Supplementary Figure 1
indicate that our proposed SMSP with τ = ∞performs comparable to other methods in
terms of the quantitative measures and visualization. The SVM in Table 2 uses radial
basis kernels, the result of the SVM with other kernels in is given in Appendix A of the
Supplementary Material.

14
Table 2: Mean of quantitative measures PSNR, MSE, JSC, SSIM, % Correct on images
over diﬀerent methods.
Methods
SVM
RF
DT
KNN
SLIC
SLICO
SLICAP
RTP
SMSP
PSNR
11.91
17.83
15.27
15.10
17.27
17.27
17.27
Inf
Inf
MSE
0.07
0.02
0.03
0.03
0.02
0.02
0.02
0
0
JSC
0.88
0.97
0.94
0.94
0.96
0.96
0.96
1
1
SSIM
1
1
1
1
1
1
1
1
1
% Correct
0.93
0.98
0.97
0.97
0.98
0.98
0.98
1
1
5
Conclusion
In this article, we present a novel Bayesian nonparametric method, the shape modeling
with spline partitions, for space partitioning. Our method extends the random tessellation
process, by introducing a Bayesian nonparametric prior to partition two-dimensional
Euclidean space with splines. We use Bézier curves to split space (i.e., approximating
shapes), which enable us to represent more complex data-structure compared with
existing methods (Ge et al., 2019; Roy and Teh, 2008). Our generative process of
cutting splines provides evidence of projectivity for the SMSP, which guarantees that
our inference on model is well deﬁned. To model the complex posterior distribution
of SMSP, we develop a sequential Monte Carlo algorithm for inference. The proposed
algorithm can avoid getting stuck around local modes of posterior and is easy to parallel.
We demonstrate the consistency of our methods towards an yin-yang dataset. Our real
data application shows that the SMSP has satisfactory performance in a task in which
the smooth shape of HIV-1–infected human macrophage is captured, provided that
enough computing resources are allocated (in terms of the number of particles and
the computational budget τ). Our current work is limited to partition two-dimensional
feature space, one possible future direction would be to extend the SMSP to capture
shapes of multidimensional objects with cutting manifolds.
References
Achanta, R., Shaji, A., Smith, K., Lucchi, A., Fua, P., and Süsstrunk, S. (2010). “SILC
superpixels.” Technical report. 11
— (2012). “SLIC superpixels compared to state-of-the-art superpixel methods.” IEEE
Transactions on Pattern Analysis and Machine Intelligence, 34(11). 11
Berger, M. A. (2012). An Introduction to Probability and Stochastic Processes. Springer
Texts in Statistics. 3
Bhattacharya, A. and Dunson, D. B. (2010). “Nonparametric Bayesian density estimation
on manifolds with applications to planar shapes.” Biometrika, 97(4). 1
Bu-Qing, S. and Ding-Yuan, L. (2014). Computational Geometry: Curve and Surface
Modeling. Elsevier. 1
Castellano, P., Prevedel, L., and Eugenin, A. A. (2017). “HIV-infected macrophages

15
and microglia that survive acute infection become viral reservoirs by a mechanism
involving Bim.” Scientiﬁc Reports, 7. 12
Chiu, S. N., Stoyan, D., Kendall, W. S., and Mecke, J. (2013). Stochastic Geometry and
its Applications. Wiley Series in Probability and Statistics. 3
Chopin, N. (2004). “Central limit theorem for sequential Monte Carlo methods and its
application to Bayesian inference.” The Annals of Statistics, 32(6). 10
Cunningham, A. L., Naif, H., Saksena, N., Lynch, G., Chang, J., Li, S., Jozwiak, R., Alali,
M., Wang, B., and Fear, W. (1997). “HIV infection of macrophages and pathogenesis
of AIDS dementia complex: interaction of the host cell and viral genotype.” Journal
of Leukocyte Biology, 62(1). 11
Doucet, A., Godsill, S., and Andrieu, C. (2000). “On sequential Monte Carlo sampling
methods for Bayesian ﬁltering.” Statistics and Computing, 10(3). 2
Fan, X., Li, B., and Sisson, S. (2018). “The Binary Space Partitioning-Tree Process.”
In Proceedings of the 35th International Conference on Artiﬁcial Intelligence and
Statistics. 2
— (2019). “Binary Space Partitioning Forests.” arXiv preprint 1903.09348. 2
Fan, X., Li, B., Wang, Y., Wang, Y., and Chen, F. (2016). “The Ostomachion process.”
In Proceedings of the Thirtieth Conference of the Association for the Advancement of
Artiﬁcial Intelligence. 2
Frey, B. J. and Dueck, D. (2007). “Clustering by passing messages between data points.”
Science, 315(5814). 11
Gaudin, R. (????). 2011 Olympus BioScapes Digital Imaging Competition CIL:41568,
Homo Sapiens, macrophage. CIL. Dataset..
https://doi.org/doi:10.7295/
W9CIL41568. 11
Gazit, Y., Baish, J. W., Safabakhsh, N., Leunig, M., Baxter, L. T., and Jain, R. K.
(1997). “Fractal Characteristics of Tumor Vascular Architecture During Tumor Growth
and Regression.” Microcirculation, 4(4). 3
Ge, S., Wang, S., Teh, Y. W., Wang, L., and Elliott, L. T. (2019). “Random Tessellation
Forests.” In Advances in Neural Information Processing Systems. 2, 4, 8, 9, 14
George, E. I. (1987). “Sampling random polygons.” Journal of Applied Probability, 24(3).
2
Gu, K., Pati, D., and Dunson, D. B. (2012). “Bayesian hierarchical modeling of simply
connected 2D shapes.” arXiv preprint arXiv:1201.1658. 1
Hannah, L. A. and Dunson, D. B. (2013). “Multivariate convex regression with adaptive
partitioning.” The Journal of Machine Learning Research, 14(1). 1
Hrecka, K., Hao, C., Gierszewska, M., Swanson, S. K., Kesik-Brodacka, M., Srivastava,
S., Florens, L., Washburn, M. P., and Skowronski, J. (2011). “Vpx relieves inhibition of
HIV-1 infection of macrophages mediated by the SAMHD1 protein.” Nature, 474(7353).
11

16
Kemp, C., Tenenbaum, J. B., Griﬃths, T. L., Yamada, T., and Ueda, N. (2006). “Learning
systems of concepts with an inﬁnite relational model.” In Proceedings of the 20th
Conference on the Association for the Advancement of Artiﬁcial Intelligence. 2
Koppensteiner, H., Brack-Werner, R., and Schindler, M. (2012). “Macrophages and their
relevance in Human Immunodeﬁciency Virus Type I infection.” Retrovirology, 9(1). 11
Kurtek, S., Srivastava, A., Klassen, E., and Ding, Z. (2012). “Statistical modeling
of curves using shapes and related features.” Journal of the American Statistical
Association, 107(499). 1
Lakshminarayanan, B., Roy, D. M., and Teh, Y. W. (2014). “Mondrian forests: Eﬃcient
online random forests.” In Proceedings of the 28th Conference on Neural Information
Processing Systems. 2
— (2015). “Particle Gibbs for Bayesian additive regression trees.” In Proceedings of the
18th International Conference on Artiﬁcial Intelligence and Statistics. 2
Lin, L., Mu, N., Cheung, P., and Dunson, D. B. (2019). “Extrinsic Gaussian processes
for regression and classiﬁcation on manifolds.” Bayesian Analysis, 14(3). 1
Lucchi, A., Smith, K., Achanta, R., Lepetit, V., and Fua, P. (2010). “A fully automated
approach to segmentation of irregularly shaped cellular structures in EM images.”
In Proceedings of the International Conference on Medical Image Computing and
Computer-Assisted Intervention. Springer. 11
Merrill, J. E. and Chen, I. S. (1991). “HIV-1, macrophages, glial cells, and cytokines in
AIDS nervous system disease.” The FASEB Journal, 5(10). 11
Mortenson, M. E. (1999). Mathematics for computer graphics applications. Industrial
Press Inc. 4, 7
Muller, H. (1997). “Surface reconstruction: An introduction.” In Scientiﬁc Visualization
Conference. IEEE. 1
Nagel, W. and Weiss, V. (2005). “Crack STIT tessellations: Characterization of stationary
random tessellations stable with respect to iteration.” Advances in Applied Probability,
37(4). 2
Rainforth, T. and Wood, F. (2015). “Canonical correlation forests.” arXiv preprint
1507.05444. 2
Ren, X. and Malik, J. (2003). “Learning a classiﬁcation model for segmentation.” In
Proceedings 9th IEEE International Conference on Computer Vision. 11
Roy, D. M. and Teh, Y. W. (2008). “The Mondrian Process.” In Proceedings of the 22nd
Conference on Neural Information Processing Systems. 2, 14
Tomita, T. M., Browne, J., Shen, C., Patsolic, J. L., Yim, J., Priebe, C. E., Burns, R.,
Maggioni, M., and Vogelstein, J. T. (2015). “Random Projection Forests.” arXiv
preprint 1506.03410. 2
Yang, M. and Modarres, R. (2017). “Multivariate tests of uniformity.” Statistical Papers,
58(3). 8

17
Zhou, B. (2015). “Image segmentation using SLIC superpixels and aﬃnity propagation
clustering.” International Journal of Science and Research, 4(4). 11

