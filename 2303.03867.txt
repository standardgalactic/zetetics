Completeness for categories of generalized
automata
Guido Boccali !
Università di Torino, Torino, Italy
Andrea Laretto !
Tallinn University of Technology, Tallinn, Estonia
Fosco Loregian !
Tallinn University of Technology, Tallinn, Estonia
Stefano Luneia !
Università di Bologna, Bologna, Italy
Abstract
We present a slick proof of completeness and cocompleteness for categories of F-automata, where the
span of maps E ←E ⊗I →O that usually deﬁnes a deterministic automaton of input I and output
O in a monoidal category (K, ⊗) is replaced by a span E ←FE →O for a generic endofunctor
F : K →K of a generic category K: these automata exist in their ‘Mealy’ and ‘Moore’ version and
form categories F-Mly and F-Mre; such categories can be presented as strict 2-pullbacks in Cat and
whenever F is a left adjoint, both F-Mly and F-Mre admit all limits and colimits that K admits.
We mechanize our main results using the proof assistant Agda and the library agda-categories.
2012 ACM Subject Classiﬁcation Theory of computation →Automata extensions; Theory of
computation →Automata over inﬁnite objects; Theory of computation →Formal languages and
automata theory; Theory of computation →Formalisms
Keywords and phrases Deterministic automata, Moore machines, Mealy machines, coalgebras,
cocomplete category.
Digital Object Identiﬁer 10.4230/LIPIcs.CVIT.2016.23
Funding F. Loregian was supported by the ESF funded Estonian IT Academy research measure
(project 2014-2020.4.05.19-0001).
Acknowledgements À René, parce qu’il faut ruser pour te lire.
1
Introduction
One of the most direct representations of deterministic automata in the categorical settings
consists (cf. [1, 4, 5]) of a span of morphisms E ←E × I →O, where the left leg provides a
notion of next states of the automaton given a current state E and an input I, and the right
leg provides an output O given the same data. According to whether the output morphism
depends on both the current state and an input or just on the state, one can then talk
about classes of Mealy and Moore automata, respectively. This perspective of ‘automata in a
category’ naturally captures the idea that morphisms of a category can be interpreted as a
general abstraction of processes/sequential operations.
The above notion of deterministic automata carries over to any monoidal category, on
which the various classical notions of automata, e.g., minimization, bisimulation, powerset
construction, can be equivalently reconstructed and studied as in the monograph [5].
In [1, 6], automata are generalized to the case in which, instead of taking spans from
the monoidal product of states and inputs E ⊗I, one considers spans E ←FE →O for
a generic endofunctor F : K →K, providing an abstraction for the ambient structure that
allows the automata to advance to the ‘next’ state and give an output.
© Guido Boccali and Andrea Laretto and Fosco Loregian and Stefano Luneia;
licensed under Creative Commons License CC-BY 4.0
42nd Conference on Very Important Topics (CVIT 2016).
Editors: John Q. Open and Joan R. Access; Article No. 23; pp. 23:1–23:12
Leibniz International Proceedings in Informatics
Schloss Dagstuhl – Leibniz-Zentrum für Informatik, Dagstuhl Publishing, Germany
arXiv:2303.03867v1  [math.CT]  7 Mar 2023

23:2
Completeness for categories of generalized automata
A general theorem asserting that the category of Mealy and Moore automata MlyK(I, O),
MreK(I, O) in a monoidal category (K, ⊗) are complete and cocomplete whenever K is itself
complete and cocomplete can be obtained with little eﬀort, cf. [5, Ch. 11], but the proof
given therein is a bit ad-hoc, and provides no intuition for why ﬁnite products and terminal
objects tend to be so complicated.
With just a little bit more category-theoretic technology, some general considerations can
be made about the shape of limits in such settings: colimits and connected limits can be
computed as they are computed in K (as a consequence of the fact that a certain functor
creates them, cf. [10]), whereas products (and in particular the empty product, the terminal
object) have dramatically diﬀerent shapes than those provided in K. The profound reason
why this is the case comes from the fact that such a terminal object (which we refer to O∞)
coincides with the terminal coalgebra of a speciﬁc endofunctor, which, depending on the case
of Moore and Mealy automata, is given by A 7→O×RA and A 7→RO×RA respectively. The
complicated shape of the terminal object O∞in MlyK(I, O) is then explained by Adamek’s
theorem, which presents the terminal object O∞as inverse limit in K.
In this paper, we show that under the same assumption of completeness of the underlying
category K, the completeness of F-automata can be obtained by requiring that the endo-
functor F admits a right adjoint R. The proof we provide follows a slick argument proving
the existence of (co)limits by ﬁtting each MlyK(I, O) and MreK(I, O) into a strict 2-pullback
in Cat, and deriving the result from stability properties of limit-creating functors.
Outline of the paper. The present short note develops as follows:
ﬁrst (Section 2) we introduce the language we will employ and the structures we will
study:1 categories of automata valued in a monoidal category (K, ⊗) (in two ﬂavours:
‘Mealy’ machines, where one considers spans E ←E ⊗I →O, and ‘Moore’, where instead
one consider pairs E ←E ⊗I, E →O) and of F-automata, where F is an endofunctor of
K (possibly with no monoidal structure). ‘Mealy’ automata are known as ‘deterministic
automata’ in today’s parlance, but since we need to distinguish between the two kinds of
diagram from time to time, we stick to an older terminology.
Then (Theorem 3.6), to establish the presence of co/limits of shape J in categories of
F-automata, under the two assumptions that F : K →K is a left adjoint in an adjunction
F
η
ϵ R, and that co/limits of shape J exist in the base category K.
Last (Subsection 3.1), to address the generalisation to F-machines of the ‘behaviour as
an adjunction’ perspective expounded in [11, 12].
Similarly to the situation for Mealy/Moore machines, where F =
⊗I, discrete limits if
F-Mly and F-Mre exist but tend to have a shape that is dramatically diﬀerent than the one
in K.
A number of examples of endofunctors F that satisfy the previous assumption come
from considering F as the (underlying endofunctor of the) comonad LG of an adjunction
L ⊣G ⊣U, since in that case LG ⊣UG: the shape-ﬂat and ﬂat-sharp adjunctions of a
cohesive topos [8, 9], or the base-change adjunction Lanf ⊣f ∗⊣Ranf for a morphism
of rings, or more generally, G-modules in representation theory, any essential geometric
morphism, or any topological functor V : E →B [3, Prop. 7.3.7] with its fully faithful left
and right adjoints L ⊣V ⊣R gives rise to a comodality LV , left adjoint to a modality RV .
1 An almost identical introductory short section appears in [2], of which the present note is a parallel
submission –although related, the two manuscripts are essentially independent, and the purpose of this
repetition is the desire for self-containment.

Boccali, Laretto, Loregian, Luneia
23:3
The results we get are not particularly surprising; we have not, however, been able to
trace a reference addressing the co/completeness properties of F-Mly, F-Mre nor an analogue
for the ‘behaviour as an adjunction’ theorems expounded in [11, 12]; in the case F =
⊗I
co/completeness results follows from unwieldy ad-hoc arguments (cf. [5, Ch. 11]), whereas in
Theorem 3.6 we provide a clean, synthetic way to derive both results from general principles,
starting by describing F-Mly and F-Mre as suitable pullbacks in Cat, in Proposition 3.5.
We provide a mechanisation of our main results using the proof assistant Agda and the
library agda-categories: we will add a small Agda logo (
) next to the beginning of
a deﬁnition or statement whenever it is accompanied by Agda code, pointing directly to
the formalisation ﬁles. The full development is available at https://github.com/iwilare/
categorical-automata.
2
Automata and F -automata
The only purpose of this short section is to ﬁx notation; classical comprehensive references
for this material are [1, 5]; in particular, [1, Ch. III] is entirely devoted to the study of what
here are called F-Moore automata, possibly equipped with an ‘initialization’ morphism.
2.1
Mealy and Moore automata
For the entire subsection, we ﬁx a monoidal category (K, ⊗, 1).
▶Deﬁnition 2.1 (Mealy machine). (
) A Mealy machine in K of input object I and output
object O consists of a triple (E, d, s) where E is an object of K and d, s are morphisms in a
span
e :=

E
E ⊗I
d
o
s
/ O

(2.1)
▶Remark 2.2 (The category of Mealy machines). Mealy machines of ﬁxed input and output
I, O form a category, if we deﬁne a morphism of Mealy machines f : (E, d, s) →(T, d′, s′) as
a morphism f : E →T in K such that
E
f

E ⊗I
d
o
f⊗I

s
/ O
T
T ⊗I
d′
o
s′
/ O
(2.2)
Clearly, composition and identities are performed in K.
The category of Mealy machines of input and output I, O is denoted as MlyK(I, O).
▶Deﬁnition 2.3 (Moore machine). (
) A Moore machine in K of input object I and output
object O is a diagram
m :=

E
E ⊗I ; E
d
o
s
/ O

(2.3)
▶Remark 2.4 (The category of Moore machines). Moore machines of ﬁxed input and output
I, O form a category, if we deﬁne a morphism of Moore machines f : (E, d, s) →(T, d′, s′) as
a morphism f : E →T in K such that
E
f

E ⊗I
d
o
f⊗I

E
f

s
/ O
T
T ⊗I
d′
o
T
s′
/ O
(2.4)
CVIT 2016

23:4
Completeness for categories of generalized automata
2.2
F -Mealy and F -Moore automata
The notion of F-machine arises by replacing the tensor E ⊗I in (2.1) with the action FE of
a generic endofunctor F : K →K on an object E ∈K, in such a way that a Mealy/Moore
machine is just a (
⊗I)-Mealy/Moore machine; cf. [6, ﬀ. 2.1.3°], or Chapter III of the
monograph [1]. This natural idea acts as an abstraction for the structure that allows the
machine to advance to the ‘next’ state and give an output, and it leads to the following two
deﬁnitions (where we do not require K to be monoidal).
▶Deﬁnition 2.5 (F -Mealy machine). (
) Let O ∈K be a ﬁxed object. The objects of
the category F-Mly/O (or simply F-Mly when the object O is implicitly clear) of F-Mealy
machines of output O are the triples (E, d, s) where E ∈K is an object and s, d are morphisms
in K that ﬁt in the span
E
FE
d
o
s
/ O
(2.5)
A morphism of F-Mealy machines f : (E, d, s) →(T, d′, s′) consists of a morphism f : E →T
in K such that
E
f

FE
d
o
F f

s
/ O
T
FT
d′
o
s′
/ O
(2.6)
Unsurprisingly, we can generalise in the same fashion Deﬁnition 2.3 to the case of a generic
endofunctor F : K →K.
▶Deﬁnition 2.6 (F -Moore machine). (
) Let O ∈K be a ﬁxed object. The objects of the
category F-Mre/O of F-Moore machines of output O are the triples (E, d, s) where E ∈K is
an object and s, d are a pair of morphisms in K
E
FE ; E
d
o
s
/ O
(2.7)
A morphism of F-Moore machines f : (E, d, s) →(T, d′, s′) consists of a morphism f : E →T
in K such that
E
f

FE
d
o
F f

E
f

s
/ O
T
FT
d′
o
T
s′
/ O
(2.8)
▶Remark 2.7 (Interdeﬁnability of notions of machine). All the concepts of machine introduced
so far are interdeﬁnable, provided we allow the monoidal base K to change (cf.
[6, ﬀ.
Proposition 30]): a Mealy machine is, obviously, an F-machine where F : K →K is the functor
⊗I : E 7→E ⊗I; an F-machine consists of a Mealy machine in a category of endofunctors:
in fact, F-machines are precisely the Mealy machines of the form E ←F ◦E →O, where
E, O are constant endofunctors on objects of K and F is the input object: more precisely,
the category of F-machines is contained in the category Mly([K,K],◦)(F, cO), where cO is the
constant functor on O ∈K, as the subcategory of those triples (E, d, s) where E is a constant
endofunctor.

Boccali, Laretto, Loregian, Luneia
23:5
3
Completeness and behaviour in F -Mly and F -Mre
The ﬁrst result that we want to generalise to F-machines is the well-known fact that,
considering for example Mealy machines, if (K, ⊗) has countable coproducts preserved by
each I ⊗
, then the span (2.1) can be ‘extended’ to a span
E
E ⊗I+
d+
o
s+ / O
(3.1)
where d+, s+ can be deﬁned inductively from components dn, sn : E ⊗I⊗n →E, O.
Under the same assumptions, each Moore machine (2.3) can be ‘extended’ to a span
E
E ⊗I∗
d∗
o
s∗
/ O
(3.2)
where d∗, s∗can be deﬁned inductively from components dn, sn : E ⊗I⊗n →E, O.2
▶Remark 3.1. In the case of Mealy machines, the object I+ corresponds to the free semigroup
on the input object I, whereas for Moore machines one needs to consider the free monoid
I∗: this mirrors the intuition that in the latter case an output can be provided without any
previous input. Note that the extension of a Moore machine gives rise to a span of morphisms
from the same object E ⊗I∗, i.e., a Mealy machine that accepts the empty string as input.
A similar construction can be carried over in the category of F-Mealy machines, using
the F-algebra map d : FE →E to generate iterates E
dn
←−F nE
sn
−→O:
From now on, let F be an endofunctor of a category K that has a right adjoint R.
Examples of such arise naturally from the situation where a triple of adjoints L ⊣G ⊣R is
given, since we obtain adjunctions LG ⊣RG and GL ⊣GR:
every homomorphism of rings f : A →B induces a triple of adjoint functor between the
categories of A and B-modules;
similarly, every homomorphism of monoids f : M →N induces a ‘base change’ functor
f ∗: N-Set →M-Set;
every essential geometric morphism between topoi E ⇆F, i.e. every triple of adjoints
f! ⊣f ∗⊣f∗;
every topological functor V : E →B [3, Prop. 7.3.7] with its fully faithful left and right
adjoints L ⊣V ⊣R (this gives rise to a comodality LV , left adjoint to a modality RV ).
▶Construction 3.2 (Dynamics of an F -machine). (
) For any given F-Mealy machine
E
FE
d
o
s
/ O
(3.3)
we deﬁne the family of morphisms sn : F nE →O inductively, as the composites







s1
= FE
s−→O
s2
= FFE
F d
−−→FE
s−→O
sn
= F nE
F n−1d
−−−−→F n−1E →· · ·
F F d
−−−→FFE
F d
−−→FE
s−→O
(3.4)
2 Assuming countable coproducts in K, the free monoid I∗on I is the object P
n≥0 In; the free semigroup
I+ on I is the object P
≥1 In; clearly, if 1 is the monoidal unit of ⊗, I∗∼= 1 + I+, and the two objects
satisfy ‘recurrence equations’ I+ ∼= I ⊗I+ and I∗∼= 1 + I ⊗I∗.
CVIT 2016

23:6
Completeness for categories of generalized automata
Under our assumption that F has a right adjoint R, this is equivalent to the datum of their
mates ¯sn : E →RnO for n ≥1 under the adjunction F n ηn Rn obtained by composition,
iterating the structure in F
η
ϵ R.
Such a sn is called the nth skip map. Observe that the datum of the family of all nth skip
maps (sn | n ∈N≥1) is obviously equivalent to a single map of type ¯s∞: E →Q
n≥1 RnO.
▶Remark 3.3. Reasoning in a similar fashion, one can deﬁne extensions s : E →O,
s ◦d : FE →E →O, s ◦d ◦Fd : FFE →O, etc. for an F-Moore machine.
This is the ﬁrst step towards the following statement, which will be substantiated and
expanded in Theorem 3.6 below:
▷Claim 4.
The category F-Mre of Deﬁnition 2.6 has a terminal object o = (O∞, d∞, s∞)
with carrier O∞= Q
n≥0 RnO; similarly, the category F-Mly has a terminal object with
carrier O∞= Q
n≥1 RnO. (Note the shift in the index of the product, motivated by the fact
that the skip maps for a Moore machine are indexed on N≥0, and on N≥1 for Mealy.)
The ‘modern’ way to determine the presence of a terminal object in categories of automata
relies on the elegant coalgebraic methods in [7]; the interest in such completeness theorems
can be motivated essentially in two ways:
the terminal object O∞in a category of machines tends to be ‘big and complex’, as
a consequence of the fact that it is often a terminal coalgebra for a suitably deﬁned
endofunctor of K, so Adamek’s theorem presents it as inverse limit of an op-chain.
Coalgebra theory allows us to deﬁne a bisimulation relation between states of diﬀerent
F-algebras (or, what is equivalent in our blanket assumptions, R-coalgebras), which in
the case of standard Mealy/Moore machines (i.e., when F =
⊗I) recovers the notion
of bisimulation expounded in [7, Ch. 3].
The following universal characterisation of both categories as pullbacks in Cat allows us to
reduce the whole problem of completeness to the computation of a terminal object, and thus
prove Theorem 3.6.
▶Proposition 3.5.
cx1) the category F-Mly of F-Mealy machines given in Deﬁnition 2.5 ﬁts in a pullback square
F-Mly
U ′
/
V ′

(F/O)
V

Alg(F)
U
/ K
(3.5)
cx2) the category F-Mly of F-Moore machines given in Deﬁnition 2.6 ﬁts in a pullback square
F-Mre
U ′
/
V ′

(K/O)
V

Alg(F)
U
/ K
(3.6)
Proof. Straightforward inspection of the deﬁnition of both pullbacks.
◀
As a consequence of this characterization, by applying [10, V.6, Ex. 3] we can easily show
the following completeness result:

Boccali, Laretto, Loregian, Luneia
23:7
▶Theorem 3.6 (Limits and colimits of F -machines). (
)
Let K be a category admitting colimits of shape J ; then, F-Mre and F-Mly have colimits
of shape J , and they are computed as in K;
Equalizers (and more generally, all connected limits) are computed in F-Mre and F-Mly
as they are computed in K; if K has countable products and pullbacks, F-Mre and F-Mly
also have products of any ﬁnite cardinality (in particular, a terminal object).
Proof of Theorem 3.6. It is worth unraveling the content of [10, V.6, Ex. 3], from which
the claim gets enormously simpliﬁed: the theorem asserts that in any strict pullback square
of categories
A
U ′
/
V ′

B
V

C
U
/ K
(3.7)
if U creates, and V preserves, limits of a given shape J , then U ′ creates limits of shape J .
Thus, thanks to Proposition 3.5, all connected limits (in particular, equalizers) are created in
the categories of F-Mealy and F-Moore machines by the functors U ′ : F-Mly →(F/O) and
are thus computed as in (F/O), i.e. as in K; this result is discussed at length in [5, Ch. 4] in
the case of (
⊗I)-machines, i.e. classical Mealy machines, to prove the following:
assuming K is cocomplete, all colimits are computed in F-Mly as they are computed in
the base K;
assuming K has connected limits, they are computed in F-Mly as they are computed in
the base K;
Discrete limits have to be treated with additional care: for classical Moore machines (cf.
Deﬁnition 2.3) the terminal object is the terminal coalgebra of the functor A 7→AI × O
(cf. [7, 2.3.5]): a swift application of Adàmek theorem yields the object [I∗, O]; for classical
Mealy machines (cf.
Deﬁnition 2.1) the terminal object is the terminal coalgebra for
A 7→[I, O] × [I, A]; similarly, Adàmek theorem yields [I+, O].
Adàmek theorem then yields the terminal object of F-Mre as the terminal coalgebra for
the functor A 7→O × RA, which is the O∞,0 of Claim 4, and the terminal object of F-Mly as
O∞,1 and for A 7→RO ×RA (in F-Mly). All discrete limits can be computed when pullbacks
and a terminal object have been found, but we prefer to oﬀer a more direct argument to
build binary products.
Recall from Construction 3.2 the deﬁnition of dynamics map associated to an F-machine
e = (E, d, s).
Now, our claim is two-fold:
to1) the object O∞:= Q
n≥1 RnO in K carries a canonical structure of an F-machine o =
(O∞, d∞, s∞) such that o is terminal in F-Mly;
to2) given objects (E, dE, sE), (T, dT , sT ) of F-Mly, the pullback
P∞
/

T
¯sT,∞

E
¯sE,∞
/ O∞
(3.8)
is the carrier of a F-machine structure that exhibits p = (P∞, dP , sP ) as the product of
e = (E, dE, sE), f = (T, dT , sT ) in F-Mly.
CVIT 2016

23:8
Completeness for categories of generalized automata
In this way, the category F-Mly comes equipped with all ﬁnite products; is easy to prove
a similar statement when an inﬁnite number of objects (ei | i ∈I) is given by using wide
pullbacks whenever they exist in the base category.
Observe that the object P∞can be equivalently characterized as the single wide pullback
obtained from the pullback Pn of ¯sE,n and ¯sT,n (or rather, an intersection, since each
Pn →E × T obtained from the same pullback is a monomorphism):
P∞
/

...
Pn

Pm
/ E × T
(3.9)
Showing the universal property of P∞will be more convenient at diﬀerent times in one
or the other deﬁnition.
In order to show our ﬁrst claim in to1, we have to provide the F-machine structure on
O∞, exhibiting a span
O∞
FO∞
d∞
o
s∞/ O
(3.10)
on one side, s∞is the adjoint map of the projection π1 : O∞→RO on the ﬁrst factor; the
other leg d∞is the adjoint map of the projection deleting the ﬁrst factor, thanks to the
identiﬁcation RO∞∼= Q
n≥2 RnO; explicitly then, we are considering the following diagram:
O∞
FRO∞
ϵO∞
o
FO∞
F π≥2
o
F π1 / FRO
ϵO
/ O
(3.11)
To prove the ﬁrst claim, let’s consider a generic object (E, d, s) of F-Mly, i.e. a span
E
FE
d
o
s
/ O
(3.12)
and let’s build a commutative diagram
E
u

FE
s
/
F u

d
o
O
O∞
FRO∞
ϵO∞
o
FO∞
F π≥2
o
F π1 / FRO
ϵO
/ O
(3.13)
for a unique morphism u : E →O∞= Q
n≥1 RnO that we take exactly equal to ¯s∞. The
argument that u makes diagram (3.13) commutative, and that it is unique with this property,
is now a completely straightforward diagram chasing.
Now let’s turn to the proof that the tip of the pullback in (3.8) exhibits the product of
(E, dE, sE), (T, dT , sT ) in F-Mly; ﬁrst, we build the structure morphisms sP , dP as follows:
dP is the dotted map obtained thanks to the universal property of P∞from the commut-
ative diagram
FP∞
dP
$
/

FE

$
P∞
/

E

FT
/
$
FO∞
$
T
/ O∞
(3.14)

Boccali, Laretto, Loregian, Luneia
23:9
sP : FP∞→O is obtained as the adjoint map of the diagonal map P∞→O∞in (3.8)
composed with the projection π1 : O∞→RO.
Let’s now assess the universal property of the object
P∞
FP∞
dP
o
sP
/ O
(3.15)
We are given an object z = (Z, dZ, sZ) of F-Mly and a diagram
O
O
O
FE
dE

sE
O
FZ
sZ
O
dZ

F v /
F u
o
FT
sT
O
dT

E
Z
v
/
u
o
T
(3.16)
commutative in all its parts. To show that there exists a unique arrow [u, v] : Z →P∞
Z
[u,v]

u
~
v
 
E
P∞
pE
o
pT
/ T
(3.17)
we can argue as follows, using the joint injectivity of the projection maps πn : O∞→RnO:
ﬁrst, we show that each square
Z
u
/
v

E
¯sE,n

T
¯sT,n
/ RnO
(3.18)
is commutative, and in particular that its diagonal is equal to the nth skip map of Z; this
can be done by induction, showing that the composition of both edges of the square with the
canonical projection O∞→RnO equals ¯sn,Z for all n ≥1. From this, we deduce that there
exist maps
Z
zn / Pn
/ E × T
(3.19)
(cf. (3.9) for the deﬁnition of Pn) for every n ≥1, But now, the very way in which the zns
are deﬁned yields that each such map coincides with ⟨u, v⟩: Z →E × T, thus Z must factor
through P∞. Now we have to exhibit the commutativity of diagrams
Z
[u,v]

FZ
F [u,v]

dZ
o
sZ
/ O
P∞
FP∞
dP
o
sP
/ O
(3.20)
and this follows from a straightforward diagram chasing.
This concludes the proof.
◀
CVIT 2016

23:10
Completeness for categories of generalized automata
▶Remark 3.7. Phrased out explicitly, the statement that o = (O∞, d∞, s∞) is a terminal
object amounts to the fact that given any other F-Mealy machine e = (E, d, s), there is a
unique uE : E →O∞with the property that
E
uE

FE
s
/
F uE

d
o
O
O∞
FO∞
d∞
o
s∞
/ O
(3.21)
are both commutative diagrams; a similar statement holds for F-Moore automata.
3.1
Adjoints to behaviour functors
In [11, 12] the author concentrates on building an adjunction between a category of machines
and a category collecting the behaviours of said machines.
Call an endofunctor F : K →K an input process if the forgetful functor U : Alg(F) →K
has a left adjoint G; in simple terms, an input process allows to deﬁne free F-algebras.3
In [11, 12] the author concentrates on proving the existence of an adjunction
L : Beh(F)
/
⊥
Mach(F) : E
o
(3.22)
where Mach(F) is the category obtained from the pullback
Mach(F)
/

K→× K→
d1×d0

Alg(F)
U
/ K
∆/ K × K
(3.23)
∆is the diagonal functor, and Beh(F) is a certain comma category on the free F-algebra
functor G.
Phrased in this way, the statement is conceptual enough to carry over to F-Mealy and
F-Moore machines (and by extension, to all settings where a category of automata can be
presented through a strict 2-pullback in Cat of well-behaved functors –a situation that given
(3.5), (3.6), (3.23) arises quite frequently).
▶Theorem 3.8. (
) There exists a functor B : F-Mre →Alg(F)/(O∞,d∞), where the
codomain is the slice category of F-algebras and the F-algebra (O∞, d∞) is determined in
Claim 4. The functor B has a left adjoint L.
Proof. Recall that the functor B : F-MreO →Alg(F)/O∞is deﬁned as follows on objects
and morphisms:
(E, d, s)
f

E
uE
$
f

7→
O∞
(T, d′, s′)
T
uT
:
(3.24)
3 Obviously, this is in stark diﬀerence with the requirement that F has an adjoint, and the two requests
are independent: if F is a monad, it is always an input process, regardless of F admitting an adjoint on
either side.

Boccali, Laretto, Loregian, Luneia
23:11
A typical object of Alg(F)/O∞is a tuple ((A, a), u) where a : FA →A is an F-algebra with
its structure map, and u : A →O∞is an F-algebra homomorphism, i.e. a morphism u such
that dT ◦Fu = u ◦a.
A putative left adjoint for B realises a natural bijection
F-MreO
 L((A, a), u), (E, d, s)
 ∼= Alg(F)/O∞
 ((A, a), u), B(E, d, s)

(3.25)
between the following two kinds of commutative diagrams:



















A
ϕ 
F A
a
o
F ϕ

E
F E
d
o
A
ϕ 
u / O∞
sT / O
E
uE
?
s
/ O


































F A
a 
F ϕ /
F u
z
F E
d
F O∞
dT
#
A
ϕ
/
u 
E
|
s
O∞
sT
/ O















(3.26)
There is a clear way to establish this correspondence.
◀
The functor B is deﬁned as follows:
on objects e = (E, d, s) in F-Mre, as the correspondence sending e to the unique map
uE : E →O∞, which is an F-algebra homomorphism by the construction in (3.13);
on morphisms, f : (E, d, s) →(F, d′, s′) between F-Moore machines, B acts as the identity,
ultimately as a consequence of the fact that the terminality of O∞yields at once that
uF ◦f = uE.
▶Remark 3.9. (
) The adjunction in Theorem 3.8 is actually part of a longer chain of
adjoints obtained as follows: recall that every adjunction G : K ⇆H : U induces a ‘local’
adjunction ˜G : K/UA ⇆H/A : ˜U where ˜U(FA, f : FA →A) = Uf. Then, if F is an input
process, we get adjunctions
K/O∞
˜
G
/
⊥
Alg(F)/(O∞,d∞)
˜U
o
L
/
⊥
F-Mre.
B
o
(3.27)
References
[1]
J. Adámek and V. Trnková. Automata and Algebras in Categories. Kluwer, 1990.
[2]
G. Boccali, A. Laretto, F. Loregian, and S. Luneia. Bicategories of automata, automata in
bicategories. In preparation. Draft available at http://tetrapharmakon.github.io/stuff/
bicategories.pdf, mar 2023.
[3]
F. Borceux. Handbook of categorical algebra. 2, volume 51 of Encyclopedia of Mathematics and
its Applications. Cambridge University Press, Cambridge, 1994. Categories and structures.
[4]
M. Droste, W. Kuich, and H. Vogler, editors. Handbook of Weighted Automata. Springer
Berlin Heidelberg, 2009. doi:10.1007/978-3-642-01492-5.
[5]
H. Ehrig, K.-D. Kiermeier, H.-J. Kreowski, and W. Kühnel. Universal theory of automata. A
categorical approach. doi:10.1007/978-3-322-96644-5.
[6]
R. Guitart. Tenseurs et machines. Cahiers de topologie et géométrie diﬀérentielle, 21(1):5–62,
1980. URL: http://www.numdam.org/item/CTGDC_1980__21_1_5_0/.
[7]
B. Jacobs.
Introduction to Coalgebra: Towards Mathematics of States and Observation.
Cambridge Tracts in Theoretical Computer Science. Cambridge University Press, 2016. doi:
10.1017/CBO9781316823187.
CVIT 2016

23:12
Completeness for categories of generalized automata
[8]
F.W. Lawvere. Categories of spaces may not be generalized spaces as exempliﬁed by directed
graphs. Revista colombiana de matemáticas, 20(3-4):179–186, 1986.
[9]
F.W. Lawvere. Axiomatic cohesion. Theory and Applications of Categories, 19:41–49, 2007.
[10]
S. Mac Lane. Categories for the Working Mathematician, volume 5 of Graduate Texts in Math-
ematics. Springer-Verlag, New York, second edition, 1998. doi:10.1007/978-1-4757-4721-8.
[11]
G. Naudé. On the adjoint situations between behaviour and realization. Quaestiones Mathem-
aticae, 2:245–267, 1977. doi:10.1080/16073606.1977.9632546.
[12]
G. Naudé. Universal realization. Journal of Computer and System Sciences, 19(3):277–289,
1979. doi:10.1016/0022-0000(79)90005-9.

