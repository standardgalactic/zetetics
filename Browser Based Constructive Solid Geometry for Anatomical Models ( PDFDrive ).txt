Browser Based Constructive Solid Geometry 
for Anatomical Models
Nicole Ortega and Vikram Chandrashekhar
Group 16

Mentor
●
Alex Mathews, Fusiform Medical 
Devices
●
Vikram Chandrashekhar, 
Biomedical Engineering 2016
●
Nicole Ortega, Biomedical 
Engineering 2016
Team Members

Motivation
●
1 in 323 children are born with 
cerebral palsy in US
●
2 in 3 could walk if they had proper 
orthotic devices
●
Ankle foot orthotic device
○
Corrects gait and prevents deformities
●
Create orthosis using scan
○
10 hour process in SolidWorks
●
Our goal: browser-based software to 
drastically reduce this time
Motivation
Deliverables
Demo
Milestones
Bibliography

Specific Goals
●
Browser-based CSG application 
(demo later)
●
Significantly reduce the amount 
of time required to design full 
cast
●
Simpler and easier for clinicians
Motivation
Deliverables
Demo
Milestones
Bibliography

Original Deliverables
●
Minimum
○
three.js ”playground” in browser using constructive solid geometry algorithms for simple objects (sphere, 
cube, prism, etc)
■
sphere/cube addition algorithm
■
CSG union algorithm
■
CSG intersect algorithm
■
CSG subtract algorithm
○
Mesh modification module for simple objects
●
Expected
○
Mesh modification module for anatomical scans
■
Mesh cutting algorithm
■
Mesh smoothing algorithm
■
Mesh simplification algorithm
■
Watertight mesh algorithm
●
Maximum
○
Test cast fabrication using a 3D printer and test “fits” on patients
Motivation
Deliverables
Demo
Milestones
Bibliography

New Deliverables
●
Minimum
○
three.js ”playground” in browser using constructive solid geometry algorithms for simple objects (sphere, cube, 
prism, etc) ✔
■
sphere/cube addition algorithm ✔
■
CSG union algorithm ✔
■
CSG intersect algorithm ✔
■
CSG subtract algorithm ✔
○
Mesh modification module for simple objects
○
Playground with mesh importing (for .stl files)* ✔
●
Expected
○
Mesh modification module for anatomical scans (in progress)
■
Mesh cutting algorithm (in progress)
■
Mesh smoothing algorithm ✔
■
Mesh simplification algorithm ✔
■
Watertight mesh algorithm (in progress)
■
Mesh scaling (in progress)*
○
Playground with mesh exporting*
●
Maximum
○
Test cast fabrication using a 3D printer and test “fits” on patients
○
Playground with improved usability - sliders (to change parameters), rotation of objects independently of axis*
Motivation
Deliverables
Demo
Milestones
Bibliography
**Documentation found in Wiki 

Demo
Motivation
Deliverables
Demo
Milestones
Bibliography

Framework
Motivation
Deliverables
Demo
Milestones
Bibliography

Old Milestones
Motivation
Deliverables
Demo
Milestones
Bibliography

New Milestones
Motivation
Deliverables
Demo
Milestones
Bibliography

Completed Milestones
Motivation
Deliverables
Demo
Milestones
Bibliography

Dependencies
Minimum/Expected:
●
Three.js - 3D Javascript library used to interface with WebGL - Open Source 
library  ✔
●
Anatomical scans of legs using iPad mounted scanner - Mentors ✔
●
The Visualization and Computer Graphics Library for mesh modification 
algorithms (in C/C++) - Available online ✔
●
Emscripten to port C/C++ code to Javascript - Available online ✔
●
ThreeBSP.js to perform CSG - Available online ✔
Motivation
Deliverables
Demo
Milestones
Bibliography

Remaining Challenges
●
Memory issues when loading multiple large meshes
○
 preallocate memory 
●
Speed issues when running CSG on large meshes 
○
simplifying CSG
●
Random points and faces appear inside of loaded meshes
○
propagate through mesh and delete disconnected points
●
Mesh Color 
○
calculating normals
Motivation
Deliverables
Demo
Milestones
Bibliography

Next Steps
●
Water tight and scaling
●
Improving UI and usability (exporting, sliders, rotation, inputs, etc)
●
Automating process 
Motivation
Deliverables
Demo
Milestones
Bibliography

Bibliography
1.
 Plato, Jan Von. "The Axioms of Constructive Geometry." Annals of Pure and Applied Logic 76.2 (1995): 
169-200. Web. 
2.
Ricci, A. "A Constructive Geometry for Computer Graphics." Computer-Aided Design 6.1 (1974): 53. Web. 
3.
 Thibault, W. C., & Naylor, B. F. (1987). Set operations on polyhedra using binary space partitioning trees. 
ACM SIGGRAPH Computer Graphics SIGGRAPH Comput. Graph., 21(4), 153-162. doi:10.1145/37402.
37421 
4.
Cignoni, P., C. Montani, and R. Scopigno. "A Comparison of Mesh Simplification Algorithms." Computers & 
Graphics 22.1 (1998): 37-54. Web
5.
Schroeder, William J., Jonathan A. Zarge, and William E. Lorensen. "Decimation of Triangle Meshes." ACM 
SIGGRAPH Computer Graphics SIGGRAPH Comput. Graph. 26.2 (1992): 65-70. Web. 
6.
Ciampalini, A., P. Cignoni, C. Montani, and R. Scopigno. "Multiresolution Decimation Based on Global 
Error." The Visual Computer 13.5 (1997): 228-46. Web.
Motivation
Deliverables
Demo
Milestones
Bibliography

