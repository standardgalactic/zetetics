In
ternation
al
Journal
of
Computationa
l
Geometry
&
Applications
c

W
orld
Scien
tic
Publishing
Compan
y
BOOLE:
A
Boundary
Ev
aluation
System
for
Bo
olean
Com
bination
s
of
Sculptured
Solids

S.
Krishnan
A
T&T
R
ese
ar
ch
L
abs
0
Park
A
venue,
R
o
om
E-0
Florham
Park,
NJ
0	
email:
krishnas@r
ese
ar
ch.att.c
om
and
D.
Mano
c
ha,
M.
Gopi,
T.
Culv
er,
J.
Keyser
Dept.
of
Computer
Scienc
e
CB#

Sitterson
Hal
l
Univ.
of
North
Car
olina
Chap
el
Hil
l,
NC
		-
email:
fdm,gopi,culver,keyserg@c
s.unc.e
du
ABSTRA
CT
In
this
pap
er
w
e
describ
e
a
system,
BOOLE,
that
generates
the
b
oundary
represen
ta-
tions
(B-reps)
of
solids
giv
en
as
a
CSG
expression
in
the
form
of
trimme
d
B

ezier
patc
hes.
The
system
mak
es
use
of
tec
hniques
from
computation
al
geometry
,
n
umerical
linear
alge-
bra
and
sym
b
olic
computation
to
generate
the
B-reps.
Giv
en
t
w
o
solids,
the
system
rst
computes
the
in
tersection
curv
e
b
et
w
een
the
t
w
o
solids
using
our
surface
in
tersection
algorithm.
Using
the
top
ological
information
of
eac
h
solid,
it
computes
v
arious
comp
o-
nen
ts
within
eac
h
solid
generated
b
y
the
in
tersection
curv
e
and
their
connectivit
y
.
The
c
omp
onent
classic
ation
step
is
p
erformed
b
y
ra
y-sho
oting
.
Dep
ending
on
the
Bo
olean
op
eration
p
erformed,
appropriate
comp
onen
ts
are
put
together
to
obtain
the
nal
solid.
W
e
also
presen
t
tec
hniques
to
parallelize
this
system
on
shared
memory
m
ultipro
cesso
r
mac
hines.
The
system
has
b
een
successfully
used
to
generate
B-reps
for
a
n
um
b
er
of
large
industrial
mo
dels
including
parts
of
a
notional
submarine
storage
and
handling
ro
om
(courtesy
-
Electric
Boat
Inc.)
and
Bradley
gh
ting
v
ehicle
(courtesy
-
Arm
y
Re-
searc
h
Labs).
Eac
h
of
these
mo
dels
is
comp
osed
of
o
v
er
000
Bo
olean
op
erations
and
is
represen
ted
using
o
v
er
0,000
trimmed
B

ezier
patc
hes.
Our
exact
represen
tatio
n
of
the
in
tersection
curv
e
and
use
of
stable
n
umerical
algorithms
facilitate
an
accurate
b
ound-
ary
ev
aluation
at
ev
ery
Bo
olean
set
op
eration
and
generation
of
top
ological
ly
consisten
t
solids.
Keywor
ds:
solid
mo
deling,
constructiv
e
solid
geometry
(CSG),
b
oundary
ev
aluation
,
surface
in
tersection,
trimmed
parametric
surface,
ra
y
sho
oting

Supp
orted
in
part
b
y
an
Alfred
P
.
Sloan
F
oundation
F
ello
wship,
AR
O
Con
tract
D
AAH0-	-
-0,
NSF
Gran
t
CCR-			,
NSF
Career
Aw
ard
CCR-	,
ONR
Y
oung
In
v
estigato
r
Aw
ard
(N000-	--
0
),
In
tel
Corp.,
D
ARP
A
Con
tract
D
ABT-	-C-00
and
NSF/ARP
A
Cen
ter
for
Computer
Graphics
and
Scien
tic
Visualization


.
In
tro
duction
The
eld
of
solid
mo
deling
deals
with
the
design
and
represen
tation
of
ph
ysical
ob
jects.
One
of
its
main
emphases
has
b
een
on
the
consistency
of
mo
dels
gener-
ated.
Bo
olean
op
erations,
suc
h
as
regularized
unions,
in
tersections
and
dierences,
on
solids
pla
y
a
fundamen
tal
role
in
solid
mo
deling.
They
are
used
in
v
arious
applications
in
mec
hanical
engineering,
computer
graphics,
rob
otics
and
computer
vision.
The
t
w
o
ma
jor
represen
tation
sc
hemata
used
in
solid
mo
deling
are
construc-
tiv
e
solid
geometry
(CSG)
and
b
oundary
represen
tations
(B-rep).
B-reps
describ
e
solids
as
a
set
of
v
ertices,
edges,
and
faces
with
top
ological
relations
among
them.
In
con
trast,
CSG
considers
solids
as
expressions
of
Bo
olean
op
erations
and
rigid
mo-
tion
transformations
of
primitiv
e
solids
whic
h
t
ypically
include
p
olyhedra,
spheres,
cylinders,
cones,
tori
and
surfaces
of
rev
olution.
Both
these
represen
tations
ha
v
e
dieren
t
inheren
t
strengths
and
w
eaknesses,
and
for
most
applications
b
oth
are
de-
sired.
F
or
instance,
a
CSG
ob
ject
is
alw
a
ys
v
alid
in
the
sense
that
its
surface
is
closed,
orien
table
and
encloses
a
v
olume,
pro
vided
the
primitiv
es
are
v
alid
in
this
sense.
A
B-rep
ob
ject,
on
the
other
hand,
is
easily
rendered
on
a
graphic
displa
y
system
and
is
useful
for
visual
feedbac
k
in
solid
design.
Figure

sho
ws
the
mo
del
of
a
notional
submarine
storage
and
handling
ro
om
that
w
e
obtained
from
Elec-
tric
Boat,
a
division
of
General
Dynamics.
This
mo
del
consists
of
more
than
000
solids,
eac
h
designed
using
Bo
olean
op
erations.
The
primitiv
es
used
to
generate
these
mo
dels
v
ary
from
simple
p
olyhedral
ob
jects,
spheres
and
cylinders
to
fairly
complex
ones
lik
e
generalized
prisms,
surfaces
of
rev
olution
and
oset
surfaces.
Fig-
ure

is
a
mo
del
of
a
real
Bradley
gh
ting
v
ehicle
from
Arm
y
Researc
h
Labs.
This
mo
del
has
o
v
er
00
solids
generated
en
tirely
using
Bo
olean
op
erations
as
w
ell.
Generating
the
B-reps
of
suc
h
large
CAD
mo
dels
is
necessary
for
applications
lik
e
in
teractiv
e
visualization
and
mo
del
v
erication.
Another
application
where
B-reps
are
required
is
in
collision
detection
for
dynamic
sim
ulation
of
mac
hine
parts.
F
or
example,
consider
the
trac
k
of
the
Bradley
sho
wn
in
Figure
	.
The
to
othed
circular
structure
sho
wn
in
the
left
hand
side
of
the
image
is
the
driv
ewheel.
It
is
placed
in
the
trac
k
in
suc
h
a
w
a
y
that
when
it
rotates
without
slippage,
the
Bradley
v
ehicle
mo
v
es
forw
ard.
Placemen
t
of
the
driv
ewheel
is
v
ery
critical
to
obtain
this
eect.
Dynamic
sim
ulations
are
p
erformed
to
study
the
mo
del
placemen
t.
T
o
sim
ulate
these
realistically
,
w
e
require
algorithms
that
can
p
erform
in
terference
detection.
B-reps
are
necessary
for
this
purp
ose.
Earlier,
most
B-rep
mo
delers
w
ere
able
to
supp
ort
solids
comp
osed
of
p
olyhe-
dral
mo
dels
and
quadric
surfaces
(lik
e
spheres,
cylinders
etc.)
and
their
Bo
olean
com
binations
only
.
Ov
er
the
last
few
y
ears,
mo
deling
using
free-form
surfaces
(sculp-
tur
e
d
mo
dels)
has
b
ecome
v
ery
useful
throughout
the
commercial
CAD/CAM/CAE
industry
.
On
the
researc
h
fron
t,
there
has
b
een
considerable
eort
in
in
tegrating
ge-
ometric
and
solid
mo
deling
;
;
;
;
;
;
.
In
particular,
there
is
a
lot
of
in
terest
in
building
complete
solid
represen
tations
from
spline
surfaces
and
their
Bo
olean
com
binations
	;
;
;	
;0
;
;
;
.
Ho
w
ev
er,
the
ma
jor
b
ottlenec
k
is
in
p
erforming
robust,
ecien
t
and
accurate
Bo
olean
op
erations
on
the
sculptured
mo
dels.
The
top
ology
of
a
surface
patc
h
b
ecomes
quite
complicated
when
a
n
um
b
er
of
Bo
olean


            
Fig.
.
Subma
rine
sto
rage
and
handling
ro
om
op
erations
are
p
erformed
and
nding
a
con
v
enien
t
represen
tation
for
these
top
olo-
gies
has
b
een
a
ma
jor
c
hallenge.
In
man
y
applications
in
v
olving
CAD/CAM,
solids
are
designed
in
terms
of
ten-
sor
pro
duct
trimmed
Non-Uniform
Rational
B-Spline
(NURBS)
surfaces.
This
class
includes
a
n
um
b
er
of
rational
parametric
surfaces
lik
e
tensor-pro
duct
and
triangular
B

ezier
patc
hes.
The
represen
tation
capabilit
y
of
these
surfaces
is
quite
large,
and
is
sucien
t
to
represen
t
all
primitiv
e
solids
encoun
tered
in
b
oundary
ev
aluation
sys-
tems.
Due
to
the
dicult
y
in
p
erforming
free-form
surface
in
tersection,
man
y
earlier
B-rep
mo
delers
used
high-resolution
p
olyhedral
appro
ximations
to
these
surfaces
and
apply
existing
algorithms
to
design
and
manipulate
these
p
olyhedral
ob
jects.
Apart
from
the
fact
that
the
resulting
solids
are
inaccurate,
there
is
an
additional
cost
in
terms
of
increased
memory
usage
due
to
data
proliferation.
The
system
presen
ted
in
this
pap
er
pro
vides
eectiv
e
strategies
to
p
erform
Bo
olean
op
erations
on
sculptured
solids
without
resorting
to
p
olyhedralization.


            
Fig.
.
Exterio
r
of
a
Bradley
ghting
vehicle
..
Main
Contributions
W
e
presen
t
a
system
for
computing
the
b
oundary
of
b
o
olean
com
binations
of
sculptured
solids.
The
resulting
b
oundary
is
represen
ted
in
terms
of
trimmed
B

ezier
patc
hes.
Giv
en
t
w
o
primitiv
es,
our
system
p
erforms
surface-surface
in
tersections,
curv
e-merging
and
comp
onen
t
classication.
T
o
sp
eed
up
these
computations,
w
e
also
parallelize
and
distribute
them
among
m
ultiple
pro
cessors.
The
main
con
tri-
butions
in
this
pap
er
are:

Complete
system:
BOOLE
is
a
B-rep
mo
deling
system
that
con
v
erts
solids
represen
ted
in
CSG
form
to
its
b
oundary
represen
tation.
BOOLE
pro
vides
data
structures
to
represen
t
a
v
ariet
y
of
primitiv
e
solids
and
an
implemen
ta-
tion
of
a
n
um
b
er
of
geometric
algorithms
to
manipulate
them
ecien
tly
.

In
tegration
of
n
umeric,
sym
b
olic
and
geometric
algorithms:
Our
algorithm
for
b
oundary
ev
aluation
uses
a
n
um
b
er
of
sym
b
olic,
n
umeric
and
geometric
tec
hniques
for
ecien
t
and
accurate
computation.
The
in
tegration
of
these
algorithms
in
to
one
big
system
is
another
ma
jor
con
tribution.

Accuracy:
Eac
h
in
termediate
primitiv
e
and
the
resulting
B-rep
solid
is
repre-
sen
ted
as
a
collection
of
trimmed
B

ezier
patc
hes
and
an
adjacency
graph.
The
trimming
curv
es
are
the
result
of
accurate
surface
in
tersection
computation.
The
resulting
B-reps
are
guaran
teed
to
b
e
manifold.


            
Fig.
.
P
a
rt
of
a
CSG
tree
of
the
roller
from
the
subma
rine
mo
del

P
arallel
Implemen
tati
on
with
Load
Balancing:
Our
algorithm
exploits
parallelism
at
all
stages
of
b
oundary
computation.
Our
system
can
w
ork
on
an
y
shared
memory
parallel
system.
W
e
also
presen
t
algorithms
to
p
erform
load
balancing
with
minim
um
use
of
lo
c
king
while
parallelizing
the
b
oundary
computation
algorithm
among
v
arious
pro
cessors.
Organization:
The
rest
of
the
pap
er
is
organized
in
the
follo
wing
manner.
A
brief
discussion
of
previous
w
ork
in
the
area
of
b
oundary
computation
and
B-rep
solid
mo
deling
systems
is
giv
en
in
Section
.
Some
basic
denitions
and
terminology
used
in
the
solid
mo
deling
literature
are
describ
ed
in
Section
.
The
represen
tation
of
eac
h
solid
in
our
system
is
explained
in
Section
.
Section

briey
describ
es
our
B-rep
generation
algorithm.
Implemen
tation
issues
that
w
en
t
in
to
the
design
of
BOOLE
are
describ
ed
in
Section
.
Section

discusses
the
arc
hitecture
of
BOOLE.
W
e
presen
t
some
tec
hniques
to
impro
v
e
the
robustness
and
accuracy
of
our
system
in
Section
.
Section
	
talks
ab
out
the
degeneracies
that
w
e
encoun
tered
and
ho
w
they
are
handled
b
y
BOOLE.
Section
0
describ
es
our
load
balancing
sc
heme
for
the
parallel
implemen
tation.
Section

sho
ws
the
p
erformance
of
our
system
on
some
mo
dels
and
the
sp
eed-up
ac
hiev
ed
due
to
parallelism.
Section

talks
ab
out
the
public
domain
release
and
system
in
terface
of
BOOLE.
W
e
conclude
in
Section
.


.
Previous
W
ork
The
need
to
generate
accurate
b
oundary
represen
tations
of
solid
ob
jects
in
man
y
applications
in
v
olving
design
and
man
ufacturing
has
generated
signican
t
in
terest
in
the
researc
h
comm
unit
y
.
Ov
er
the
y
ears,
the
b
o
dy
of
literature
addressing
these
problems
has
gro
wn
to
b
e
quite
extensiv
e.
Some
of
the
earliest
w
ork
in
generating
B-reps
w
as
done
on
p
olyhedral
solids.
The
need
to
use
free-form
surfaces
to
repre-
sen
t
solids
has
led
to
researc
h
in
the
problems
of
curv
e-surface
and
surface-surface
in
tersection
and
lo
op
detection
whic
h
are
imp
ortan
t
for
B-rep
generation.
P
olyhedral
solids:
Algorithms
for
p
erforming
Bo
olean
op
erations
on
p
olyhedra
in
B-rep
ha
v
e
b
een
prop
osed
b
y
a
n
um
b
er
of
researc
hers
;;;;;
.
Most
of
these
tec
hniques
rely
hea
vily
on
the
algebraic
form
ulation
of
the
problem.
Cameron

con-
siders
sev
eral
strategies
and
redundancy
tests
to
propagate
appro
ximations
of
CSG
primitiv
es
from
the
ro
ot
of
the
CSG
tree
do
wn
to
the
lea
v
es,
and
p
ossibly
rening
them
on
the
w
a
y
.
Rossignac
and
V
o
elc
k
er

consider
redundancy
determination
without
appro
ximating
the
primitiv
es.
They
dene
certain
active
zones
on
solids
and
sho
w
ho
w
kno
wledge
of
activ
e
zones
can
b
e
used
to
impro
v
e
con
v
ersion
from
CSG
to
B-rep,
detection
of
redundancy
and
other
op
erations
on
CSG
trees.
The
use
of
top
ological
structures
of
solids
has
b
een
v
ery
p
opular
in
B-rep
solid
mo
deling.
The
winged-edge
st
yle
of
b
oundary
represen
tation
is
due
to
Baumgart

.
Man
y
v
arian
ts
of
the
metho
d,
and
other
alternativ
es,
ha
v
e
b
een
prop
osed
and
used
in
B-rep
mo
deling
systems
since
then.
A
complete
surv
ey
of
top
ological
structures
in
solid
mo
deling
is
giv
en
in
Ref.
[	
].
The
use
of
non-manifold
b
oundary
repre-
sen
tations
w
as
rst
prop
osed
b
y
W
esley

.
W
eiler
0;	
observ
ed
that
a
n
um
b
er
of
geometric
op
erations
on
p
olyhedra
simplify
when
non-manifold
structures
are
p
er-
mitted.
P
aoluzzi
et.
al.

implemen
t
Bo
olean
op
erations
on
B-rep
solids
b
y
using
only
triangular
faces
for
their
p
olyhedra.
Laidla
w
et.
al.
0
describ
es
another
metho
d
in
whic
h
all
faces
m
ust
b
e
con
v
ex
p
olygons,
and
suggest
random
p
erturbations
to
eliminate
complex
v
ertex
in
tersection
cases.
A
n
um
b
er
of
approac
hes
ha
v
e
b
een
prop
osed
for
robust
and
accurate
B-rep
com-
putation
in
p
olyhedral
mo
delers.
One
of
the
most
common
approac
hes
is
based
on
using
toler
anc
es
with
oating-p
oin
t
arithmetic

.
Ho
w
ev
er,
it
is
hard
to
decide
a
global
tolerance
v
alue
for
all
computations.
T
o
circum
v
en
t
these
problems,
com
bina-
tions
of
sym
b
olic
reasoning

and
adaptiv
e
tolerances

ha
v
e
b
een
prop
osed.
Other
algorithms
include
those
based
on
redundancy
eliminatio
n

.
Man
y
algorithms
based
on
exact
arithmetic
ha
v
e
b
een
prop
osed
for
reliable
n
umeric
computation
for
p
olyhedra
;;;	
.
Sculptured
Solids:
The
idea
of
using
free-form
surfaces
in
solid
mo
deling
w
as
in
tro
duced
b
y
Chiy
okura
et.
al

.
It
describ
es
the
implemen
tatio
n
of
a
system
called
Designb
ase
with
some
curv
ed-surface
capabilities.
In
this
system,
curv
ed
solids
are
designed
and
mo
died
b
y
lo
cal
op
erations
suc
h
as
altering
the
shap
e
of
certain
edges
and
faces.
Ho
w
ev
er,
Bo
olean
op
erations
require
that
one
of
the
in
tersecting
ob
jects
b
e
p
olyhedral.
Geiso
w

maps
surface
in
tersection
curv
es
to
the
plane
and
uses
sub
division
metho
ds
to
solv
e
surface
in
terrogation
problems.
Requic
ha
and
V
o
elc
k
er

describ
es
the
P
ADL
system
dev
elop
ed
at
Univ
ersit
y
of


A
B
A,B
A
B
Int(A)    Int(B)
*
A
B
Figure
:
An
example
of
regula
rized
intersection
op
eration
[Hof	]
Ro
c
hester.
This
system
supp
orts
Bo
olean
op
erations
on
p
olyhedral
solids
and
a
few
curv
ed
primitiv
es.
Casale
et.
al.
;	;
0
use
trimmed
parametric
surfaces
to
generate
B-reps
of
sculptured
solids.
The
algorithm
uses
sub
division
metho
ds
to
ev
aluate
surface
in
tersections,
and
represen
ts
the
trimmi
ng
b
oundary
with
piecewise
linear
segmen
ts.
Chan

uses
sp
ecial
prop
erties
of
quadric
surfaces
and
other
free-form
surface
to
design
industrial
parts.
A
n
um
b
er
of
tec
hniques
lik
e
in
terv
al
arithmetic
and
shell
represen
tations
;;;0;;

ha
v
e
b
een
dev
elop
ed
to
p
erform
solid
design
with
free-form
geometries.
Sorting
p
oin
ts
along
in
tersection
curv
es

w
as
used
to
classify
comp
onen
ts
with
resp
ect
to
solids.
The
Alpha

CAD
system
dev
elop
ed
at
the
Univ
ersit
y
of
Utah
has
man
y
fea-
tures
to
com
bine
solids
comp
osed
of
sculptured
surfaces.
A
systematic
approac
h
for
design,
analysis
and
illustration
of
assem
blies
has
b
een
presen
ted
in
Ref.
[
,
].
Ra
y
represen
tations
along
with
sp
ecialized
parallel
arc
hitectures
;;
lik
e
the
Ra
y-
Casting
engine
and
`Solids
engine'
w
ere
used
to
ac
hiev
e
in
teractiv
e
solid
mo
deling
on
lo
w-degree
primitiv
es
lik
e
quadrics.
Man
t
yla
and
Ran
ta

describ
e
metho
ds
to
p
erform
solid
mo
deling
using
HutDesign.
Rossignac
et.
al.

presen
t
algorithms
for
insp
ection
of
cross-sections
and
in
terference
b
et
w
een
solids
with
b
ounded
degree
and
limited
heigh
t
of
CSG
trees.
Most
of
the
recen
t
w
ork
in
the
literature
on
Bo
olean
com
binations
of
curv
ed
mo
dels
has
fo
cussed
on
computing
the
in
tersection
curv
e
b
et
w
een
a
pair
of
B-spline
surfaces
;;0;;
;
;;
;
.
.
Bac
kground
Material
and
Denition
s
In
this
section,
w
e
will
briey
describ
e
some
terms
used
in
the
solid
mo
deling
literature
and
also
giv
e
a
mathematical
in
tro
duction
to
trimme
d
parametric
surfaces.
..
R
e
gularize
d
Bo
ole
an
Op
er
ations
Bo
olean
op
erations,
suc
h
as
r
e
gularize
d
unions,
in
tersections
and
dierences,
on
solids
pla
y
a
fundamen
tal
role
in
solid
mo
deling.
Algorithms
for
determining
the


s
t
parametric domain
surface
Figure
:
A
surface
patch
and
its
pa
rametric
domain
r
e
gularize
d
union,
in
tersection,
or
set
dierence
of
t
w
o
solids
is
a
useful
comp
onen
t
of
most
B-rep
mo
delers.
The
r
e
gularize
d
op
erations
dier
from
their
corresp
onding
set-
theoretic
coun
terparts
in
that
the
result
is
the
closur
e
of
the
op
eration
on
the
in
terior
(mathematically
sp
eaking,
this
refers
to
all
of
the
solid
except
its
b
oundary)
of
the
t
w
o
solids,
and
are
used
for
eliminating
\dangling"
lo
w
er-dimensional
structures
(see
Figure
).
If
I
nt(A)
represen
ts
the
in
terior
of
solid
A
and
op
corresp
onds
to
one
of
the
set
op
erations,
w
e
dene
op

,
the
regularized
v
ersion
of
the
Bo
olean
op
eration
as
A
op

B
=
cl
(I
nt(A)
op
I
nt(B
))
where
cl
(A)
denotes
the
closure
(generates
b
oundary)
of
A.
These
op
erations
can
b
e
used
to
con
v
ert
solids
represen
ted
b
y
CSG
trees
(see
Figure
)
to
an
equiv
alen
t
B-rep.
These
pro
cesses
for
p
erforming
Bo
olean
op
erations
on
B-reps
are
called
b
oundary
evaluation
algorithms.
..
Curve
and
Surfac
e
R
epr
esentation
Most
algebraic
curv
es
and
surfaces
in
D
space
can
b
e
represen
ted
using
their
implicit
form,
f
(x;
y
;
z
)
=
0.
Geometric
mo
deling
applications
frequen
tly
in
v
olv
e
computing
a
set
of
p
oin
ts
on
a
giv
en
curv
e
or
surface.
But
the
pro
cess
of
computing
p
oin
ts
on
surfaces
with
implicit
represen
tation
is
computationally
in
tensiv
e.
An
alternativ
e
represen
tation
is
the
parametric
form.
F
or
example,
a
parametric
space
curv
e
is
a
mapping
from
the
real
line
to
R

.
The
domain
of
these
functions
is
also
called
the
p
ar
ameter
of
the
curv
e.
By
substituting
dieren
t
v
alues
for
the
parameter,
w
e
obtain
dieren
t
p
oin
ts
on
the
curv
e.
A
NURBS
curv
e
0
is
a
sp
ecial
kind
of
parametric
curv
e.
This
curv
e
is
completely


DF’
D−D F’
q
q’
t
Figure
:
T
rimming
rule
sp
ecied
b
y
a
set
of
p
oin
ts
in
space
and
a
few
smo
oth
functions.
These
p
oin
ts
are
called
the
c
ontr
ol
p
oints
of
the
NURBS
curv
e.
The
pre-sp
ecied
functions
are
called
the
b
asis
or
blending
functions.
The
con
trol
p
oin
ts
and
the
blending
functions
are
com
bined
mathematicall
y
to
giv
e
rise
to
a
single
curv
e.
The
NURBS
curv
e
is
comp
osed
of
a
n
um
b
er
of
segmen
ts
or
sp
ans.
In
the
para-
metric
domain,
these
spans
are
describ
ed
b
y
a
knot
ve
ctor,
whic
h
is
basically
a
non-decreasing
sequence
of
parameter
v
alues.
The
knot
v
ector
determines
the
re-
gion
of
inuence
a
particular
basis
function
has
on
the
curv
e.
A
NURBS
p
olynomial
is
dened
as
a
linear
com
bination
of
basis
functions.
When
the
co
ecien
ts
of
the
linear
com
bination
expression
are
-tuples,
the
set
of
four
implied
p
olynomials
form
a
curv
e.
Eac
h
-tuple
is
a
homogeneous
represen
tation
of
a
con
trol
p
oin
t
in
pro
jec-
tiv
e
-space,
and
the
homogenizing
v
ariable
(
th
co
ordinate)
is
called
a
weight.
W
e
assume
that
the
w
eigh
ts
are
non-negativ
e.
Essen
tially
,
this
assumption
ensures
that
the
curv
e
or
surface
is
completely
con
tained
within
the
con
v
ex
h
ull
of
the
con
trol
p
oin
ts.
This
is
not
a
ma
jor
restriction
b
ecause
most
curv
es
and
surfaces
o
ccurring
in
CAD
applications
can
b
e
represen
ted
using
non-negativ
e
w
eigh
ts.
W
e
shall
represen
t
con
trol
p
oin
ts
in
homogeneous
co
ordinates
(v
i
;
w
i
),
where
v
i
=
(w
i
x
i
;
w
i
y
i
;
w
i
z
i
)
and
w
i
is
the
w
eigh
t.
Therefore
the
parametric
curv
e
f
(t)
of
degree
k
 
with
n
con
trol
p
oin
ts
and
the
standard
basis
functions
N
i;k
is
giv
en
b
y
f
(t)
=
P
n
i=0
v
i
N
i;k
(t)
P
n
i=0
w
i
N
i;k
(t)
N
i;k
(t)
is
dened
recursiv
ely
o
v
er
the
knot
in
terv
al
[t
i
;
t
i+k
]
as
follo
ws:
N
i;
(t)
=

;
if
t
i

t

t
i+
0;
other
w
ise
N
i;k
(t)
=
(t
i+k
 t)N
i+;k 
(t)
t
i+k
 t
i+
+
(t
 t
i
)N
i;k 
(t)
t
i+k 
 t
i
Based
on
the
ab
o
v
e
form
ulation
of
the
parametric
curv
e,
it
is
clear
that
the
con
trol
p
oin
ts
determine
the
shap
e
of
the
curv
e.
F
urther,
since
eac
h
con
trol
p
oin
t
has
only
a
limited
range
of
inuence,
it
is
v
ery
easy
to
shap
e
the
curv
e
(or
surface)
b
y
lo
cal
mo
dication
of
the
con
trol
p
oin
ts.
In
most
parametric
sp
ecications,
the
	

Figure
:
Sixteen
control
p
oints
of
a
bicubic
Bezier
patch
domain
is
normalized
to
lie
in
the
unit
in
terv
al,
t

[0;
],
without
loss
of
generalit
y
.
A
tensor
pr
o
duct
NURBS
surface
is
dened
o
v
er
a
t
w
o
dimensional
parametric
domain
o
v
er
the
parameters
0

s;
t

.
The
shap
e
of
the
surface
is
determined
b
y
t
w
o
arra
y
of
knot
v
ectors
(one
for
eac
h
parameter)
and
a
t
w
o
dimensional
arra
y
of
con
trol
p
oin
ts
0
.
Figure

sho
ws
the
relationship
b
et
w
een
a
surface
patc
h
and
its
parametric
domain.
The
w
eigh
ted
sum
form
ulation
of
a
NURBS
surface
is:
F(s;
t)
=
P
m
i=0
P
n
j
=0
v
ij
N
i;k
(s)N
j;l
(t)
P
m
i=0
P
n
j
=0
w
ij
N
i;k
(s)N
j;l
(t)
In
this
equation,
the
surface
is
of
degree
k
 
in
s
and
l
 
in
t
(degree
(k
 )

(l
 ),
for
short).
A
trimme
d
NURBS
surface,
F
0
(s;
t),
is
a
subset
of
F(s;
t)
dened
b
y
a
set
of
trimmi
ng
curv
es.
A
trimming
curv
e
is
a
simple,
closed,
piecewise
sequence
of
curv
es
(linear,
NURBS
or
algebraic)
dened
in
the
domain,
D
=
[0;
]

[0;
],
of
F(s;
t).
The
subset
of
the
domain
that
is
part
of
the
trimmed
surface
is
usually
giv
en
b
y
an
unam
biguous
rule.
F
or
consistency
,
w
e
shall
dene
a
rule
that
w
e
follo
w
for
algorithmic
description
and
implemen
tation
purp
oses.

The
trimmi
ng
curv
e
is
orien
ted
coun
terclo
c
kwise
when
lo
oking
in
to
the
plane
of
the
pap
er
from
ab
o
v
e
(see
Figure
).
More
precisely
,
the
simply
closed
trimming
curv
e
is
homeomorphic
to
a
circle
whic
h
is
orien
ted
coun
terclo
c
k-
wise.

The
curv
e
retains
the
part
of
the
surface
domain
immedia
tely
to
the
left
of
it.
Consider
a
p
oin
t
q
on
the
curv
e
and
a
domain
p
oin
t
q
0
arbitrarily
close
to
q
(see
Figure
).
Let
the
tangen
t
at
q
b
e
~
t
.
Then
q
0

D
F
0
is
a
part
of
the
trimmed
surface
if
the
coun
terclo
c
kwise
angle
b
et
w
een
~
t
and
~
q
q
0
is
less
than

.
0

trimmed surface
trimmed domain
Figure
:
A
trimmed
surface
patch

Tw
o
p
oin
ts
q

and
q

b
elong
to
the
same
trimmed
region
(D
F
0
or
D
 D
F
0
)
if
and
only
if
the
line
segmen
t
q

q

in
tersects
the
trimming
curv
e
ev
en
n
um
b
er
of
times.
Therefore,
F
0
(s;
t)
=
fF(s;
t)
j
(s;
t)

D
F
0
g
B

ezier
surfaces
are
sp
ecial
t
yp
es
of
NURBS
surfaces,
that
do
not
ha
v
e
an
y
knots
except
at
the
corner
p
oin
ts
(i.e.,
(s;
t)
=
(0;
0);
(0;
);
(;
0);
(;
)).
The
m
ultiplicit
y
of
s
and
t
knots
is
one
more
than
s
and
t
degrees,
resp
ectiv
ely
,
of
the
surface.
The
main
adv
an
tage
of
the
B

ezier
represen
tation
is
that
they
are
more
easy
to
ev
aluate
than
general
NURBS.
Using
knot
insertion
algorithms
0
,
it
is
p
ossible
to
decomp
ose
eac
h
NURBS
surface
in
to
a
series
of
rational
B

ezier
patc
hes.
W
e
use
B

ezier
patc
hes
to
represen
t
b
oundaries
of
the
solid
primitiv
es
in
our
algorithms.
A
rational
B

ezier
patc
h,
F(s;
t),
of
degree
m

n,
dened
in
the
domain
(s;
t)

[0;
]

[0;
]
and
sp
ecied
b
y
a
t
w
o
dimensional
arra
y
of
con
trol
p
oin
ts
(v
ij
;
w
ij
)
(see
Figure
)
is
giv
en
b
y:
F(s;
t)
=
P
m
i=0
P
n
j
=0
v
ij
B
m
i
(s)B
n
j
(t)
P
m
i=0
P
n
j
=0
w
ij
B
m
i
(s)B
n
j
(t)
:
()
B
is
the
Bernstein
basis
function
dened
as
B
m
i
(s)
=

m
i

s
i
(
 s)
m i


0
1
s
t
1
c0
c1
c2
c3
c4
c5
c6
c7
p0
p1
p2
p3
p4
p5
p
6
p7
Algebraic curves as
trimming curves
Vertices formed as intersection
of algebraic curves
c0
c7
p0
Figure
	:
Rep
resentation
of
a
trimmed
patch
as
algeb
raic
curve
segments
A
trimmed
B

ezier
patc
h,
as
sho
wn
in
Figure
,
has
trimmi
ng
curv
es
in
the
domain
of
the
patc
h
and
trims
out
the
domain
similar
to
its
NURBS
coun
terpart.
.
Represen
tation
of
Solids
In
this
section,
w
e
describ
e
our
represen
tation
for
a
solid.
Our
algorithms
assume
that
all
B-rep
solids
are
sp
ecied
in
this
format.
Ev
ery
solid
is
represen
ted
as
a
set
of
trimme
d
parametric
surface
(tensor-pro
duct
B

ezier)
patc
hes
whic
h
dene
the
solid
b
oundary
.
T
op
olo
gic
al
information
of
the
solid
is
main
tained
in
terms
of
an
adjacency
graph.
It
is
similar
to
the
winged-edge
data
structure
	;
.
T
o
start
with,
w
e
assume
that
eac
h
of
the
input
ob
jects
has
manifold
b
oundaries,
and
the
Bo
olean
op
eration
is
r
e
gularize
d

.
While
it
is
p
ossible
to
generate
non-manifol
d
ob
jects
from
regularized
Bo
oleans
on
manifold
solids,
w
e
assume
that
suc
h
cases
do
not
o
ccur.
Giv
en
this
assumption,
it
has
b
een
sho
wn
that
an
unam
biguous
top
ological
represen
tation
is
p
ossible
for
a
solid
	
.
A
trimmed
patc
h
consists
of
a
sequence
of
curv
es
dened
in
the
domain
of
the
patc
h
suc
h
that
they
form
a
closed
curv
e
(c
i
's
in
Figure
	).
In
the
gure,
the
c
i
refer
to
the
algebraic
curv
e
segmen
ts
forming
the
trimming
b
oundary
.
The
p
or-
tion
of
the
patc
h
that
lies
in
the
in
terior
of
this
closed
curv
e
is
retained.
Most
of
these
trimming
curv
es
corresp
ond
to
in
tersection
curv
es
b
et
w
een
t
w
o
surfaces.
Therefore,
these
curv
es
are
t
ypically
algebraic
curv
es
that
do
not
admit
a
rational
parameterization

.
W
e
represen
t
these
curv
e
segmen
ts
(c
i
)
b
y
their
algebraic
equa-
tion
(for
accuracy),
and
a
piecewise
linear
appro
ximation
(for
ecien
t
computation)
and
the
t
w
o
endp
oin
ts
(p
i
and
p
i+
).


f1
f2
f3
f4
f5
f6
f1
f2
f3
f4
f5
f6
e1
e2
e3
e4
e5
e6
e7
e8
e9
e10
e11
e12
Figure
0:
A
cylinder
and
its
face
connectivit
y
structure
This
represen
tation
of
a
solid
lends
itself
to
a
description
in
terms
of
fac
es,
e
dges,
and
vertic
es
analogous
to
the
p
olyhedral
case.
Eac
h
fac
e
is
a
trimmed
patc
h.
Eac
h
of
the
trimmi
ng
curv
es
form
an
e
dge,
and
are
formed
as
an
in
tersection
of
t
w
o
surfaces
(faces).
Finally
,
endp
oin
ts
of
edges
form
the
vertic
es.
They
are
represen
ted
as
the
in
tersection
of
three
surfaces.
Figure
0
sho
ws
an
example
solid
and
the
face
connectivit
y
structure
that
w
e
main
tain.
W
e
also
main
tain
the
t
w
o
faces
that
are
adjacen
t
to
eac
h
edge,
and
an
an
ticlo
c
kwise
order
of
faces
(when
view
ed
from
the
exterior
of
the
solid)
around
eac
h
v
ertex.
.
Algorithm
Ov
erview
W
e
presen
t
a
system,
BOOLE,
to
eectiv
ely
compute
b
oundary
represen
tations
of
Bo
olean
com
binations
of
sculptured
primitiv
es
and
p
erform
asso
ciated
surface
in
terrogations.
It
emplo
ys
a
com
bination
of
sym
b
olic
and
n
umeric
metho
ds
to
compute
the
B-reps
accurately
and
ecien
tly
.
The
input
to
BOOLE
is
a
CSG
tree
that
describ
es
the
solid
as
a
Bo
olean
expression
of
primitiv
e
solids.
W
e
assume
that
the
surface
b
oundaries
of
all
the
primitiv
es
can
b
e
represen
ted
as
a
piecewise
collection
of
parametric
surface
patc
hes.
Ho
w
ev
er,
our
algorithms
apply
equally
w
ell
on
solids
comp
osed
of
algebraic
surfaces.
W
e
use
trimmed
tensor-pro
duct
rational
B

ezier
patc
hes
to
represen
t
the
surfaces.
In
order
to
compute
the
B-rep
of
the
nal
solid,
our
algorithm
computes
the
Bo
olean
com
bination
of
the
solids
at
the
lea
v
es
of
the
CSG
tree
and
propagates
the
results
up
the
tree.
Giv
en
t
w
o
suc
h
solids,
our
algorithm
iden
ties
pairs
of
surface
patc
hes
from
the
t
w
o
solids
that
in
tersect.
The
in
tersection
curv
e
b
et
w
een
eac
h
suc
h
pair
is
computed
using
a
new
surfac
e
interse
ction

algorithm.
The
surface
in
tersection
algorithm
ensures
accurate
ev
aluation
of
the
in
tersection
curv
e
using
algorithms
for
curve-surfac
e
interse
ction,
lo
op
dete
ction
and
curve
tr
acing.
It
mak
es
use
of
a
matrix
r
epr
esentation
of
the
in
tersection
curv
e
to
accurately
compute
in
tersections
b
et
w
een
trimme
d
surfac
es
and
to
classify
the
v
arious
top
ological
features
generated
b
y
the
in
tersection
curv
e.


W
e
no
w
briey
describ
e
our
algorithm
to
ev
aluate
the
B-rep
when
t
w
o
solids
en
ter
in
to
a
Bo
olean
op
eration.
Let
the
n
um
b
er
of
patc
hes
in
one
solid
b
e
m
and
those
in
the
second
solid
b
e
n
and
let
the
degree
of
eac
h
patc
h
b
e
d
s

d
t
.
The
algorithm
to
ev
aluate
the
Bo
olean
op
eration
b
et
w
een
the
t
w
o
solids
runs
in
six
stages.
Stage
:
The
main
part
of
the
algorithm
is
to
compute
the
in
tersection
curv
e
b
et
w
een
the
t
w
o
solids.
Hence
eac
h
patc
h
of
one
solid
has
to
b
e
c
hec
k
ed
for
in
ter-
section
with
eac
h
patc
h
of
the
other
solid.
Ho
w
ev
er,
not
all
the
mn
pairs
w
ould
in
tersect
t
ypically
.
W
e
prune
out
most
of
the
non-in
tersecting
pairs
using
a
t
w
o
step
pro
cess.
Initially
,
w
e
compute
the
D
b
ounding
b
o
x
for
eac
h
patc
h
(this
is
actually
the
axis-aligned
b
ounding
b
o
x
of
the
con
trol
p
oin
ts
of
the
patc
h).
This
is
done
in
parallel
as
the
construction
of
b
ounding
b
o
xes
for
eac
h
of
the
patc
hes
can
b
e
done
indep
enden
tly
.
If
a
pair
of
b
ounding
b
o
xes
do
not
in
tersect,
the
corresp
onding
patc
hes
are
also
non-in
tersecting
(c
onvex
hul
l
pr
op
erty
of
B

ezier
patc
hes
	
).
All
the
redundan
t
pairs
are
remo
v
ed
using
a
simple
sort
on
all
the
b
ounding
b
o
xes.
The
next
step
of
pruning
uses
linear
programmi
ng.
Linear
programmi
ng
is
used
to
prune
out
pairs
of
patc
hes
whose
con
v
ex
h
ulls
(as
dened
b
y
their
con
trol
p
oin
ts)
do
not
in
tersect.
This
is
a
m
uc
h
stricter
test,
but
is
also
more
exp
ensiv
e,
and
hence
w
e
use
the
t
w
o-step
pruning
pro
cess.
W
e
form
ulate
the
linear
programmi
ng
problem
as
follo
ws.
Tw
o
patc
hes
do
not
in
tersect
if
there
exists
a
separating
plane
b
et
w
een
them.
Th
us
w
e
eliminate
the
patc
h
pairs
whose
b
ounding
b
o
xes
ha
v
e
a
separating
plane
b
et
w
een
them.
W
e
use
Mik
e
Hohmey
er's
implemen
tation
of
the
linear
programming
algorithm
b
y
Seidel

.
By
applying
these
t
w
o
metho
ds
on
the
t
w
o
solids,
w
e
are
left
with
few
pairs
of
patc
hes
that
are
most
lik
ely
to
in
tersect.
Stage
:
The
ev
aluation
of
the
in
tersection
curv
es
b
et
w
een
the
remaining
pairs
of
patc
hes
is
p
erformed
next.
W
e
use
a
recen
tly
dev
elop
ed
algorithm


(describ
ed
briey
b
elo
w)
to
compute
the
in
tersection
curv
e
b
et
w
een
t
w
o
parametric
patc
hes.
Stage
:
B-rep
ev
aluation
in
v
olv
es
merging
of
the
in
tersection
curv
es
computed
in
the
previous
stage.
It
can
b
e
sho
wn
that
for
closed
C
0
con
tin
uous
solids,
the
in
tersection
curv
e
b
et
w
een
them
m
ust
form
a
collection
of
closed
curv
es
in
space
for
regularized
Bo
olean
op
erations.
Merging
is
the
pro
cess
of
collecting
dieren
t
pieces
of
the
in
tersection
curv
e
and
ordering
them
in
sequence
to
form
closed
curv
es
in
space.
The
rst
step
of
merging
is
to
merge
the
curv
es
within
a
patc
h.
After
that
curv
es
b
et
w
een
patc
hes
in
eac
h
solid
are
merged.
Stage
:
The
merged
in
tersection
curv
e
partitions
the
b
oundary
of
the
solid
in
to
v
arious
c
omp
onents.
The
comp
onen
ts
are
generated
b
y
a
simple
graph
tra
v
ersal
algorithm
using
the
existing
top
ological
information
in
eac
h
solid.
Stage
:
Eac
h
comp
onen
t
has
the
prop
ert
y
that
all
the
patc
hes
corresp
onding
to
it
is
either
completely
inside
or
outside
the
other
solid.
Therefore,
it
suces
to
compute
the
inside-outside
information
of
exactly
one
p
oin
t
in
eac
h
comp
onen
t.
If
a
solid
is
closed
and
not
self-in
tersecting,
then
this
query
is
answ
ered
b
y
computing
the
n
um
b
er
of
in
tersections
of
a
ra
y
,
emanating
from
that
p
oin
t,
with
the
solid.
If
the
n
um
b
er
is
o
dd,
then
the
p
oin
t
is
inside,
otherwise
it
is
outside
the
solid.


Stage
:
The
particular
set
op
eration
p
erformed
on
the
solids,
and
the
in-
side/outside
classication
of
the
comp
onen
t,
determine
if
a
comp
onen
t
is
part
of
the
new
solid.
The
algorithm
to
generate
the
new
solid
forms
the
last
stage
of
our
algorithm.
The
connectivit
y
information
b
et
w
een
v
arious
trimmed
patc
hes
of
the
new
solid
is
found
using
the
top
ological
information
of
the
original
solids
and
the
in
tersection
curv
es.
A
brief
description
of
the
v
arious
algorithms
used
in
BOOLE
are
giv
en
next.
..
Surfac
e-Surfac
e
Interse
ction
Computing
in
tersections
of
surfaces
forms
a
critical
part
of
an
y
b
oundary
ev
al-
uation
algorithm.
Mo
delers
that
p
erform
Bo
olean
op
erations
on
p
olyhedral
solids
ha
v
e
to
deal
only
with
plane-plane
in
tersections.
The
essen
tial
dierence
b
et
w
een
in
tersecting
t
w
o
planes
and
t
w
o
free-form
surfaces
is
that
while
the
former
generates
a
single
line,
the
latter
results
in
a
high
degree
algebraic
space
curv
e
with
a
n
um
b
er
of
comp
onen
ts
including
op
en
comp
onen
ts,
closed
lo
ops
and
singularities.
The
main
theme
of
our
approac
h
is
to
com
bine
w
ell
kno
wn
sym
b
olic
and
n
u-
meric
tec
hniques
for
accurate
and
ecien
t
computation.
Our
algorithm
b
orro
ws
a
basic
theorem
of
space
curv
es
from
algebraic
geometry
.
The
crux
of
the
theorem
is
that
an
y
algebraic
space
curv
e
can
b
e
pro
jected
in
to
an
equiv
alen
t
plane
curv
e
after
a
suitable
linear
transformation
of
the
co
ordinates.
Using
this
idea,
w
e
obtain
a
new
represen
tation
of
the
in
tersection
curv
e
in
a
plane
in
the
form
of
a
matrix
p
olynomial.
W
e
then
ev
aluate
the
curv
e
using
n
umeric
matrix
computations
and
tracing
algorithms.
The
algorithm
guaran
tees
determination
of
all
comp
onen
ts
of
the
in
tersection
curv
e
for
w
ell-conditioned
input
cases
b
y
emplo
ying
newly
dev
el-
op
ed
algorithms
for
curv
e-surface
in
tersection
and
lo
op
detection.
Since
all
the
computation
is
p
erformed
in
oating
p
oin
t
arithmetic,
w
e
ev
aluate
the
in
tersection
curv
e
to
a
user-sp
ecied
tolerance
a
.
The
details
of
the
surface
in
tersection
algorithm
are
giv
en
in
Ref.
[
].
The
main
steps
of
the
algorithm
are

Giv
en
the
t
w
o
parametric
surfaces,
eliminate
t
w
o
of
the
v
ariables
using
Dixon's
resultan
t

and
obtain
the
in
tersection
curv
e
in
the
plane
as
a
biv
ariate
matrix
p
olynomial
(implicit
function
of
t
w
o
v
ariables).
W
e
represen
t
the
in
tersection
curv
e
as
the
singular
set
(v
alues
of
the
v
ariables
that
mak
e
the
matrix
singular)
of
this
matrix
p
olynomial.

Compute
a
starting
p
oin
t
on
eac
h
comp
onen
t
of
the
in
tersection
curv
e
using
curv
e-surface
in
tersection
and
lo
op
detection
algorithms
(describ
ed
b
elo
w).

Sub
divide
the
domain
of
the
surface
in
to
regions
suc
h
that
eac
h
sub-region
has
at
most
one
curv
e
comp
onen
t.
This
pro
cess
is
called
domain
de
c
omp
osition.

If
the
separabilit
y
condition
is
not
satised
due
to
singularities
in
the
in
tersec-
tion
curv
e,
use
lo
cal
optimization
tec
hniques
to
isolate
singular
p
oin
ts
within
small
p
ortions
of
the
domain.
a
w
e
use
0
 
in
our
implemen
ta
tio
n



F
or
eac
h
starting
p
oin
t,
follo
w
that
comp
onen
t
of
the
in
tersection
curv
e
using
tracing
metho
ds.
Our
in
tersection
algorithm
traces
the
in
tersection
curv
e
in
the
domain
of
one
of
the
parametric
patc
hes.
It
is
imp
ortan
t
to
mak
e
sure
that
while
w
e
trace
the
curv
e,
it
sta
ys
within
the
v
alid
domain
of
the
other
surface
as
w
ell.
T
ypically
,
this
test
is
done
b
y
mapping
eac
h
p
oin
t
on
the
in
tersection
curv
e
in
the
parametric
domain
to
its
corresp
onding
p
oin
t
in
R

(using
the
surface
parameterization).
Then
w
e
nd
the
p
oin
t
in
the
domain
of
the
other
surface
that
maps
to
the
same
p
oin
t
in
R

.
The
second
op
eration
essen
tially
in
v
olv
es
computing
the
in
v
erse
of
the
surface
parameterization
functions
and
is
referred
to
as
p
oint
inversion.
W
e
will
discuss
this
op
eration
later
in
the
Arc
hitecture
(Section
)
and
Robustness
(Section
)
sections.
Of
all
these
steps,
the
elimination
step
dominates
the
computational
cost.
Ho
w-
ev
er,
most
of
the
computation
in
v
olv
ed
in
this
stage
can
b
e
p
erformed
o-line,
and
its
cost
amortized
o
v
er
a
large
n
um
b
er
of
surface
in
tersection
op
erations.
This
is
particularly
adv
an
tageous
in
b
oundary
ev
aluation
algorithms
where
the
surface
in-
tersection
routine
is
called
h
undreds
of
times
for
eac
h
solid.
W
e
ha
v
e
used
this
algorithm
to
generate
surface
b
oundaries
of
mo
dels
lik
e
the
submarine
storage
and
handling
ro
om
(Figure
)
and
the
Bradley
gh
ting
v
ehicle
(Figure
).
On
an
a
v-
erage,
our
algorithm
tak
es
a
fraction
of
a
second
(0.{0.
seconds)
to
p
erform
one
surface
in
tersection.
..
Curve-Surfac
e
Interse
ction
W
e
use
curv
e-surface
in
tersections
to
ev
aluate
starting
p
oin
ts
on
in
tersection
curv
es
of
t
w
o
surfaces
and
to
p
erform
ra
y-sho
oting
tests
(see
section
on
c
omp
onent
classic
ation)
to
classify
surface
features
with
resp
ect
to
solids.
In
these
applica-
tions,
w
e
are
in
terested
in
nding
in
tersections
only
in
a
small
subset
of
the
real
domain.
In
BOOLE,
w
e
use
a
tec
hnique
called
algebr
aic
pruning
whic
h
uses
matrix
computations
eectiv
ely
to
prune
out
regions
of
the
domain
with
no
in
tersections
quic
kly
.
The
basic
idea
of
the
algorithm
is:
Assume
that
w
e
ha
v
e
an
algorithm
A
whic
h
giv
en
a
guess

to
an
in
tersection
p
oin
t
generates
the
closest
in
tersection
p
oin
t
.
Let
the
separation
b
et
w
een

and

b
e

=
j

 
j.
Then,
w
e
kno
w
that
there
is
no
in
tersection
p
oin
t
in
the
region
(
 
)
<
t
<
(
+

).
W
e
can
safely
prune
out
this
region.
W
e
use
in
v
erse
p
o
w
er
iterations
(an
iterativ
e
matrix
computation
algorithm)
to
con
v
erge
to
the
closest
in
tersection
p
oin
t.
T
o
the
b
est
of
our
kno
wledge,
our
algo-
rithm
p
erforms
faster
than
previously
kno
wn
curv
e-surface
in
tersection
algorithms
when
the
n
um
b
er
of
in
tersections
is
fairly
sparse.
It
p
erforms
comp
etitiv
ely
ev
en
when
the
in
tersection
set
is
not
sparse.
This
algorithm
can
b
e
used
without
signif-
ican
t
mo
dication
for
nding
zero-dimensional
in
tersection
sets
lik
e
planar
curv
e-
curv
e
in
tersection
as
w
ell.
Details
of
algebraic
pruning
can
b
e
found
in
Ref.
[
].


..
L
o
op
Dete
ction
Lo
op
detection
in
algebraic
curv
es
is
an
imp
ortan
t
part
of
an
y
curv
e
ev
aluation
algorithm,
and
is
traditionally
considered
hard.
The
reason
for
this
is
b
ecause
searc
hing
for
suc
h
curv
e
features
in
higher
dimensions
is
dicult.
An
y
discretized
searc
h
strategy
suers
from
the
p
ossibilit
y
of
missing
small
lo
ops.
Our
algorithm
for
lo
op
detection

is
based
on
a
simple
algebraic
c
haracterization.
W
e
use
the
fact
that
an
y
real
algebraic
plane
curv
e
is
con
tin
uous
in
the
complex
pro
jectiv
e
plane.
Put
simply
,
it
means
that
while
curv
e
comp
onen
ts
app
ear
disjoin
t
when
restricted
to
the
real
plane,
they
are
actually
connected
in
to
one
single
comp
onen
t
in
the
complex
plane.
Therefore,
b
y
follo
wing
the
curv
e
in
complex
space,
w
e
can
reac
h
at
least
one
p
oin
t
on
ev
ery
lo
op
comp
onen
t.
The
o
v
erview
of
the
algorithm
is
describ
ed
b
elo
w.

Ev
aluate
all
the
starting
p
oin
ts
of
the
curv
e
(in
complex
space)
at
the
b
ound-
ary
of
the
domain.

F
ollo
w
eac
h
starting
p
oin
t
b
y
tracing
out
the
curv
e
in
complex
space.

F
ew
of
these
paths
meet
the
real
plane.
These
form
candidates
for
lo
op
com-
p
onen
ts
of
the
curv
e.
Compared
to
some
of
the
traditional
algebraic
approac
hes
whic
h
exhibit
quadratic
complexit
y
in
terms
of
the
degree
of
the
curv
e,
our
metho
d
traces
out
only
a
linear
n
um
b
er
of
paths
(our
algorithm
tak
es
ab
out
0-0
milliseconds,
dep
ending
on
the
length,
to
trace
out
a
single
complex
path
completely).
Ho
w
ev
er,
the
n
um
b
er
of
complex
paths
to
b
e
traced
could
b
e
high
dep
ending
on
the
degree
of
the
algebraic
curv
e.
This
metho
d
oers
the
exibilit
y
of
b
eing
com
bined
with
other
heuristics
that
w
ould
limit
the
n
um
b
er
of
complex
paths
traced.
..
T
rimme
d
Surfac
e
Interse
ction
Our
algorithm
for
b
oundary
ev
aluation
generates
surface
b
oundaries
in
the
form
of
trimmed
B

ezier
patc
hes.
Along
with
the
parameterization
of
the
surface,
a
trimmed
B

ezier
patc
h
also
has
an
oriente
d
closed
curv
e
called
the
trimming
curve
in
the
domain.
This
trimmi
ng
curv
e
determines
the
p
ortion
of
the
patc
h
that
is
v
alid.
F
or
example,
in
Figure
,
the
trimming
curv
e
is
generated
in
a
coun
terclo
c
kwise
sense
and
the
p
ortion
of
the
patc
h
that
is
on
the
left
of
the
curv
e
is
v
alid.
Our
surface
represen
tation
requires
trimming
so
that
they
can
main
tain
their
closure
under
Bo
olean
op
erations.
When
w
e
p
erform
a
Bo
olean
op
eration
(union,
in
tersection
or
dierence)
b
et
w
een
t
w
o
solids,
their
in
tersection
curv
e
determines
whic
h
part
of
the
original
surface
b
elongs
to
the
nal
solid.
If
w
e
lo
ok
in
the
domain
of
one
of
these
surfaces,
the
in
tersection
curv
e
partitions
it.
Only
a
few
of
the
partitions
are
retained
in
the
nal
solid.
F
or
the
kind
of
op
erations
w
e
p
erform
on
solids,
it
is
therefore,
natural
to
represen
t
their
surface
b
oundaries
using
trimmed
parametric
patc
hes.
Moreo
v
er,
the
trimming
curv
es
are
p
ortions
of
in
tersection
curv
es
themselv
es.


s
t
0
1
1
intersection curve
trimming boundary
p0
p1
p2
p3
Fig.
.
Obtaining
intersections
b
et
w
een
trimmed
surfaces
Our
stand-alone
surface
in
tersection
algorithm

deals
with
un
trimmed
para-
metric
surfaces
only
.
Applying
this
algorithm,
only
some
parts
of
the
in
tersection
curv
e
generated
are
v
alid
for
trimmed
surfaces.
F
or
example,
in
Figure
,
the
v
alid
in
tersection
curv
e
is
only
b
et
w
een
(p
0
;
p

)
and
(p

;
p

).
Generating
the
p
i
's
accurately
is
not
an
easy
problem
b
ecause
it
in
v
olv
es
in
tersections
of
t
w
o
fairly
high
degree
algebraic
curv
es.
The
accuracy
of
these
p
oin
ts
is
crucial
b
ecause
they
determine
imp
ortan
t
surface
features
of
the
new
solid.
BOOLE
uses
an
ecien
t
and
accurate
algorithm
to
generate
these
in
tersection
p
oin
ts.
The
algorithm
uses
the
piecewise
linear
represen
tation
(generated
b
y
curv
e
tracing
from
the
surface
in
tersection
algorithm)
of
the
in
tersection
and
trimmi
ng
curv
es
to
compute
appro
ximations
for
these
p
oin
ts.
W
e
then
use
the
patc
h
param-
eterizations
of
the
surfaces
in
v
olv
ed
and
the
analytic
represen
tation
of
the
in
tersec-
tion
curv
e
to
rene
the
appro
ximations
using
iterativ
e
minim
izatio
n
tec
hniques.
A
detailed
explanation
of
this
tec
hnique
can
b
e
found
in
Ref.
[
].
..
Comp
onent
Classic
ation
When
t
w
o
solids
en
ter
in
to
a
Bo
olean
op
eration,
only
p
ortions
of
the
surfaces
of
eac
h
solid
remain
in
the
nal
solid.
The
p
ortions
to
b
e
retained
are
determined
b
y
the
in
tersection
curv
e
b
et
w
een
the
t
w
o
solids.
F
or
example,
consider
a
union
op
eration
b
et
w
een
t
w
o
solids
A
and
B
.
After
computing
the
in
tersection
curv
e,
only
p
ortions
of
A
that
lie
outside
B
and
those
of
B
that
lie
outside
A
are
retained
in
the
solid
A
[
B
.
Similar
c
haracterizations
exist
for
other
op
erations
as
w
ell.
Comp
onen
t
classication
refers
to
algorithms
that
generate
maximal
ly
connected
p
ortions
of
the
b
oundary

of
a
solid
that
ha
v
e
the
prop
ert
y
that

either
lies
completely
inside
or
outside
(orientation-invariant
c
omp
onent)
the
other
solid.
F
urthermore,
it
also
deals
with
the
resolution
of
the
inside/outside
nature
of
eac
h
orien
tation-in
v
arian
t
comp
onen
t.
W
e
use
the
top
ological
information
(connectivit
y
b
et
w
een
the
v
arious
features)
of
eac
h
solid
and
the
in
tersection
curv
e
b
et
w
een
them
to
generate
the
v
arious


orien
tation-in
v
arian
t
comp
onen
ts.
Our
algorithm
creates
an
asso
ciated
undirected
graph
and
computes
its
connected
comp
onen
ts
for
this
purp
ose.
It
also
generates
another
graph,
 ,
whose
v
ertices
are
the
v
arious
orien
tation-in
v
arian
t
comp
onen
ts.
An
edge
exists
b
et
w
een
t
w
o
suc
h
v
ertices
if
and
only
if
orien
tations
are
opp
osite
with
resp
ect
to
the
other
solid.
This
connectivit
y
information
turns
out
to
b
e
v
ery
useful
in
classifying
the
v
arious
comp
onen
ts
ecien
tly
.
When
t
w
o
p
olyhedral
solids
in
tersect,
it
is
fairly
easy
to
classify
the
inside/outside
nature
of
the
v
arious
comp
onen
ts
b
y
p
erforming
simple
lo
cal
tests
based
on
the
ori-
en
tation
of
the
in
tersection
curv
e
	
.
Ho
w
ev
er,
for
solid
b
oundaries
comp
osed
of
curv
ed
surfaces,
lo
cal
tests
cannot
b
e
p
erformed.
The
main
reason
for
this
is
the
complicated
nature
of
the
in
tersection
curv
e.
W
e
use
an
algorithm
based
on
ra
y-
sho
oting
to
p
erform
the
classication
tests.
Ra
y-sho
oting
is
based
on
the
follo
wing
simple
fact:
A
p
oin
t
is
inside
a
closed
solid
if
an
y
semi-innite
ra
y
originating
from
that
p
oin
t
in
tersects
the
b
oundary
of
the
solid
o
dd
n
um
b
er
of
times;
otherwise,
it
is
outside.
W
e
use
our
curv
e-surface
in
tersection
algorithm
to
p
erform
ra
y-sho
oting.
The
curv
e-surface
in
tersection
algorithm
generates
all
p
oin
ts
that
lie
in
the
en
tire
domain
of
the
surface.
Ho
w
ev
er,
the
actual
p
ortion
of
the
surface
that
is
part
of
the
solid
b
oundary
is
trimmed.
W
e
ha
v
e
to
c
hec
k
if
the
in
tersection
p
oin
ts
obtained
b
y
the
curv
e-surface
in
tersection
algorithm
actually
lie
inside
the
trimmed
region
of
the
domain.
W
e
main
tain
a
triangulation
of
the
trimmed
domain,
and
use
p
oin
t
lo
cation
queries
to
p
erform
this
test.
F
urther,
curv
e-surface
in
tersection
is
a
fairly
exp
ensiv
e
op
eration
(ro
ots
of
a
high
degree
univ
ariate
p
olynomial
),
so
it
b
eho
o
v
es
us
to
reduce
the
n
um
b
er
of
suc
h
in
v
o
cations.
Our
algorithm
uses
the
connectivit
y
information
b
et
w
een
the
v
arious
comp
onen
ts
and
p
erforms
just
one
ra
y-sho
oting
test
p
er
solid
p
er
op
eration.
This
signican
tly
sp
eeds
up
our
computation.
The
accuracy
of
the
ra
y-sho
oting
test
is
v
ery
imp
ortan
t
in
determining
the
nal
solid.
Double
precision
arithmetic
or
degenerate
ra
y-surface
in
tersections
could
p
ossibly
c
hange
a
result
from
inside
to
outside
or
vice-v
ersa.
W
e
use
an
analytic
represen
tation
of
the
in
tersection
curv
e
and
stable
matrix
computations
to
prev
en
t
suc
h
catastrophic
errors.
A
detailed
v
ersion
of
the
o
v
erall
b
oundary
ev
aluation
algorithm
can
b
e
found
in
Ref.
[
,	
,
].
.
Implemen
tati
on
of
BOOLE
One
of
the
main
con
tributions
of
this
pap
er
is
a
complete
implemen
tation
of
all
the
algorithms
presen
ted.
The
implemen
tation
of
algebraic
pruning,
lo
op
detection,
surface-surface
in
tersection
and
b
oundary
ev
aluation
algorithms
are
parts
of
the
BOOLE
solid
mo
deling
system.
Giv
en
a
CSG
tree
whose
lea
v
es
are
c
hosen
from
a
pre-dened
set
of
primitiv
e
solids,
BOOLE
generates
the
surface
represen
tation
of
the
b
oundary
of
the
nal
solid
as
a
collection
of
trimmed
B

ezier
patc
hes
as
w
ell
as
the
top
ological
information
in
a
graph
structure.
The
v
arious
mo
dules
in
our
system
and
their
dep
endency
relations
are
sho
wn
in
Figure
.
W
e
ha
v
e
implem
en
ted
our
system
on
single
pro
cessor
arc
hitectures
lik
e
SGI
Maxim
um
Impact
(with
one
0MHz
R00
CPU)
and
Sun-Solaris,
as
w
ell
as
a
	

CSG 
Tree
Final
B−rep
Topology
Generation
Primitive
B−rep Generation
Solid Intersection
Module
Surface Intersection
Routine
Loop
Detection
Component
Generation/Classification
Module
Curve−Surface
Intersection
Fig.
.
F
unctional
mo
dules
in
the
BOOLE
system
parallel
v
ersion
of
the
algorithms
on
shared
memory
m
ultipro
cessor
arc
hitectures
lik
e
SGI
On
yx
(with
up
to

	MHz
R0000
CPUs,
MByte
main
memory).
Our
curren
t
sequen
tial
implem
en
tation
can
p
erform
one
Bo
olean
op
eration
on
common
solids
with
quadric
or
quartic
degree
surfaces
(spheres,
ellipsoids,
tori,
cylinders
and
cones)
in
ab
out
-
seconds,
while
the
parallel
v
ersion
can
do
the
same
in
one
second
or
less.
Giv
en
a
CSG
tree,
our
system
generates
the
b
oundary
represen
tation
of
all
the
primitiv
es
in
v
olv
ed
in
the
form
of
trimmed
B

ezier
patc
hes
along
with
their
top
ology
information.
F
or
eac
h
Bo
olean
op
eration,
the
B-reps
of
the
t
w
o
solids
are
passed
to
the
solid
in
tersection
mo
dule.
This
mo
dule
is
resp
onsible
for
generating
the
in
tersection
curv
e
b
et
w
een
the
t
w
o
solids.
The
curv
es
are
generated
in
the
domain
of
eac
h
patc
h
as
w
ell
as
in
-space.
W
e
main
tain
the
curv
e
in
-space
(space
curv
e)
so
that
w
e
can
v
erify
if
the
in
tersection
curv
es
form
a
closed
lo
op.
This
is
a
c
hec
k-
p
oin
ting
op
eration,
and
if
the
curv
e
is
not
closed,
w
e
declare
an
error
and
try
to
recompute
the
curv
e.
The
space
curv
e
is
also
used
during
mo
del
visualization.
The
solid
in
tersection
mo
dule
relies
on
the
surface-surface
and
curv
e-surface
in
tersection
algorithms
to
generate
the
curv
es.
These
algorithms
are
implemen
ted
in
C
and
mak
es
use
of
a
n
um
b
er
of
matrix
op
erations
lik
e
SVD,
matrix
eigendecomp
osition
and
in
v
erse
iterations.
These
routines
are
a
v
ailable
in
public
domain
in
the
form
of
F
ortran
libraries
lik
e
EISP
A
CK

and
LAP
A
CK

.
The
main
adv
an
tage
of
using
these
libraries
is
that
they
are
carefully
and
ecien
tly
implemen
ted
b
y
n
umerical
analysts
and
w
ell
tested
on
a
n
um
b
er
of
b
enc
hmarks.
F
urther,
most
of
the
matrix
routines
also
return
the
condition
n
um
b
er
of
the
problem.
W
e
use
this
information
to
predict
the
conditioning
of
our
original
problem
or
to
detect
inaccuracies
in
our
computation.
The
in
tersection
curv
es
are
fed
in
to
the
comp
onen
t
generation/classication
0

            
Fig.
.
B-rep
of
Pivot
from
Subma
rine
mo
del
(00
B

ezier
patches)
[Courtesy:
Electric
Boat]
mo
dule.
Initially
,
w
e
partition
the
domain
of
eac
h
patc
h
as
determined
b
y
the
in
tersection
curv
e
and
determine
the
connectivit
y
structure
of
the
partitions
within
eac
h
patc
h.
Using
this
information
and
the
original
top
ology
of
the
t
w
o
solids,
w
e
create
the
graph
whose
connected
comp
onen
ts
generate
orien
tation
in
v
arian
t
surface
partitions.
Construction
of
the
graph
 (connectivit
y
information
b
et
w
een
v
arious
orien
tation
in
v
arian
t
surface
partitions)
is
describ
ed
in
Ref.
[	
].
Classication
is
done
b
y
ra
y-sho
oting.
The
ra
y-sho
oting
test
can
b
e
reduced
to
a
collection
of
ra
y-
surface
in
tersections.
In
our
implemen
tation,
w
e
use
algebr
aic
pruning
to
p
erform
this
op
eration.
The
algorithm
for
comp
onen
t
classication
pro
ceeds
b
y
computing
all
the
in-
tersections
of
a
randomly
directed
ra
y
with
all
the
trimmed
patc
hes
of
the
other
solid.
The
parit
y
(o
dd/ev
en)
of
n
um
b
er
of
in
tersections
decides
the
orien
tation
(inside/outside)
of
the
comp
onen
t.
Guaran
teeing
the
correctness
of
this
op
eration
is
v
ery
crucial
for
the
correctness
of
the
nal
B-rep.
In
our
system,
w
e
p
erform
a
n
um
b
er
of
redundan
t
computations
to
ensure
this.
The
ra
y-surface
in
tersection
algorithm
generates
in
tersection
p
oin
ts
in
the
domain
of
eac
h
surface.
If
the
c
ho-
sen
ra
y
passes
through
the
b
oundary
of
t
w
o
adjacen
t
patc
hes,
this
p
oin
t
ma
y
b
e
coun
ted
t
wice
(once
for
in
tersection
with
eac
h
patc
h).
T
o
a
v
oid
this,
w
e
compare
the
corresp
onding
in
tersections
in
-space
and
eliminate
duplications.
W
e
also
sho
ot
m
ultiple
random
ra
ys
to
ensure
correct
parit
y
.
Since
BOOLE
do
es
all
its
compu-
tation
in
double-precision
oating
p
oin
t,
it
is
p
ossible
to
misin
terpret
the
result
of
a
single
computation.
F
or
example,
if
the
random
ra
y
is
nearly
tangen
tial
to
the
surface,
w
e
migh
t
eliminate
m
ultiple
in
tersections
b
ecause
of
their
pro
ximit
y
.
By
p
erforming
m
ultiple
ra
y-sho
oting
tests,
the
probabilit
y
of
misin
terpretation
is
re-


duced.
The
result
of
the
classication
of
one
comp
onen
t
is
propagated
throughout
the
adjacency
graph
 to
resolv
e
the
other
comp
onen
ts.
The
propagation
prev
en
ts
us
from
ha
ving
to
do
ra
y-sho
oting
for
eac
h
comp
onen
t,
although
it
increases
the
c
hance
propagating
a
wrong
result.
In
our
exp
erience,
b
ecause
of
our
careful
ra
y-
sho
oting
computation,
w
e
ha
v
e
not
run
in
to
this
problem.
The
B-rep
of
the
resulting
solid
and
its
top
ological
structure
are
generated
based
on
the
Bo
olean
op
eration
b
eing
p
erformed.
This
data
is
fed
bac
k
to
the
solid
in
tersection
mo
dule
if
the
new
solid
en
ters
in
to
another
Bo
olean
op
eration.
.
Arc
hitecture
of
the
BOOLE
system
Figure

sho
ws
the
basic
arc
hitecture
of
the
BOOLE
system.
The
b
ottommost
la
y
er
(La
y
er
I)
is
comp
osed
of
v
e
ma
jor
mo
dules
-
the
set
of
n
umeric
libraries,
sym
b
olic
mo
dule,
geometric
mo
dule,
routines
to
manipulate
parametric
curv
es
and
surfaces,
and
graph
algorithms.
Here
is
a
brief
description
ab
out
eac
h.

Numeric
librarie
s:
W
e
mak
e
use
of
the
public
domain
F
ortran
libraries
EISP
A
CK

and
LAP
A
CK

.
These
libraries
pro
vide
most
of
the
routines
re-
quired
b
y
our
algorithms
lik
e
QR
decomp
osition
for
computing
eigen
v
alues
and
eigen
v
ectors,
LU
decomp
osition
for
solution
of
linear
systems
and
Sin-
gular
V
alue
Decomp
osition.
V
arious
parts
of
our
surface-surface
in
tersection
algorithm
use
these
n
umerical
algorithms.
W
e
ha
v
e
also
implem
en
ted
the
algo-
rithm
for
lo
cal
minim
izati
on
giv
en
in
Press
et.
al

.
The
minimi
zation
routine
is
used
in
conjunction
with
the
tracing
algorithm
to
impro
v
e
the
accuracy
of
the
in
tersection
curv
e.

Sym
b
olic
mo
dule:
This
mo
dule
comprises
basically
of
routines
for
com-
puting
v
arious
resultan
ts.
W
e
require
only
t
w
o
kinds
of
resultan
t
routines
-
Sylv
ester
	
(eliminating
one
v
ariable
from
system
of
t
w
o
equations)
and
Dixon

(eliminating
t
w
o
v
ariables
from
system
of
three
equations).
W
e
use
Sylv
ester
resultan
t
during
curv
e-curv
e
in
tersection
as
part
of
the
algebraic
pruning
algorithm.
Dixon's
resultan
t
is
mainly
used
to
compute
implicit
forms
of
surfaces.
These
routines
are
implem
en
ted
in
double
precision
arithmetic.

Geometric
mo
dule:
The
geometric
mo
dule
con
tains
algorithms
for
triangu-
lation
of
simple
p
olygons,
p
oin
t
lo
cation
in
planar
arrangemen
ts,
linear
pro-
grammi
ng
and
b
ounding
b
o
x
o
v
erlap
tests.
W
e
use
a
v
ery
fast
implem
en
tation
of
Seidel's
triangulation
algorithm

pro
vided
b
y
A
tul
Narkhede
et.
al
	
.
The
p
oin
t
lo
cation
algorithm
based
on
the
triangulation
algorithm
w
as
also
im-
plemen
ted
b
y
A
tul
Narkhede.
W
e
use
Mik
e
Hohmey
er's
0
implemen
tatio
n
of
Seidel's
randomized
linear
programming
algorithm

.

Curv
e/Surface
manipulati
on
mo
dule:
This
mo
dule
primarily
handles
all
the
lo
w-lev
el
routines
for
manipulating
parametric
curv
es
and
surfaces.
T
ypical
algorithms
are
curv
e
and
surface
sub
division
(at
certain
parameter
v
alues),
p
oin
t
ev
aluation
on
surfaces,
pseudo-Gauss
map
ev
aluation
for
lo
op
detection
and
curv
e
tting.
Curv
e
tting
is
a
part
of
the
BOOLE
system


Geometric Module
(Triangulation,
Point location,
Linear programming,
Box intersection )
Numeric Libraries
(EISPACK/LAPACK)
Eigenvalues,
LU Decomposition,
SVD, Gaussian
elimination, local
minimization
Curve/Surface
Manipulation
methods
(Subdivision,
Curve fitting,
Gauss maps)
Graph
Algorithms
(Connected
component)
Symbolic Module
(Sylvester &
resultant)
Dixon
Point
Inversion
Algebraic
Pruning
Surface
Implicitization
Domain
Decomposition
Curve
Tracing
Orientation−
Invariant
Component
Generation
Ray 
Shooting
Singularity
Detection
Loop
Detection
Curve/Surface
Intersection
Topology
Maintenance
BOOLE
Geometric
Overlap
Tests
Intersection
Solid/Solid
Trimmed
Intersection
Curve
Determination
Layer I
Layer II
Layer III
Layer IV
Fig.
.
V
a
rious
implementation
la
y
ers
in
BOOLE


that
ts
a
parametric
curv
e
to
an
ordered
set
of
p
oin
ts
obtained
after
curv
e
tracing.
This
routine
is
not
used
b
y
the
BOOLE
system
directly
for
B-rep
computation.
Rather,
it
is
used
as
a
means
of
data
compaction
b
y
a
displa
y
system
(dev
elop
ed
at
UNC)
that
renders
large
NURBS
mo
dels.

Graph
Algorithms:
This
nal
mo
dule
is
used
in
main
taining
top
ology
infor-
mation
for
eac
h
solid
in
our
system.
Apart
from
the
simple
to
ols
to
manipulate
graph
structures,
it
con
tains
an
algorithm
to
generate
connected
comp
onen
ts
in
graphs.
The
algorithm
uses
rep
eated
calls
to
a
depth-rst
tra
v
ersal
routine
in
graphs.
The
running
time
of
this
algorithm
is
linearly
prop
ortional
to
the
n
um
b
er
of
edges
in
the
graph.
La
y
er
I
I
of
our
system
con
tains
routines
that
are
directly
called
b
y
our
algo-
rithms
for
curv
e-surface
in
tersection,
lo
op
and
singularit
y
detection,
curv
e
tracing
etc.
These
routines
are
listed
in
Figure
.
Giv
en
a
p
oin
t
on
a
curv
e
or
surface,
the
problem
of
p
oint
inversion
deals
with
the
determination
of
parameter
v
alues
whic
h
results
in
that
p
oin
t.
Mathematically
sp
eaking,
giv
en
a
rational
parameterization
of
a
surface,
F(s;
t)
=
(X
(s;
t);
Y
(s;
t);
Z
(s;
t);
W
(s;
t))
and
a
p
oin
t
(x;
y
;
z
)

R

,
nd
the
parameters
(s

;
t

)
suc
h
that
X
(s

;
t

)
=
xW
(s

;
t

)
Y
(s

;
t

)
=
y
W
(s

;
t

)
Z
(s

;
t

)
=
z
W
(s

;
t

)
This
op
eration
is
p
erformed
v
ery
often
during
curv
e
tracing.
A
lgebr
aic
pruning
Ref.
[
]
is
our
metho
d
of
solving
zero-dimensional
systems
based
on
in
v
erse
p
o
w
er
iterations.
This
algorithm
relies
hea
vily
on
the
n
umeric
libraries.
W
e
use
algebraic
pruning
for
curv
e-surface
in
tersection
queries
and
ra
y-sho
oting.
The
role
of
surfac
e
implicitization
and
domain
de
c
omp
osition
in
the
surface-surface
in
tersection
algo-
rithm
are
describ
ed
in
Ref.
[
].
Ge
ometric
overlap
tests
are
p
erformed
to
quic
kly
prune
out
non-in
tersecting
curv
es
and
surfaces.
W
e
use
the
implemen
tati
on
of
linear
programming
and
b
ounding
b
o
x
o
v
erlaps
from
la
y
er
I
for
this
purp
ose.
The
mo
dules
in
La
y
er
I
I
I
include
curv
e/surface
in
tersection,
lo
op
and
singular-
it
y
detection,
curv
e
tracing,
trimmed
in
tersection
curv
e
determination,
ra
y-sho
oting
and
orien
tation-in
v
arian
t
comp
onen
t
generation.
Eac
h
of
these
mo
dules
call
a
n
um-
b
er
of
routines
from
la
y
ers
I
and
I
I.
The
dep
endency
structure
of
the
v
arious
mo
dules
is
sho
wn
in
the
gure.
The
mo
dules
in
La
y
er
I
I
I
are
in
turn
called
b
y
the
topmost
la
y
er
whic
h
includes
solid-solid
in
tersection
and
top
ology
main
tenance
mo
dules.
.
Robustness
and
Accuracy
One
of
the
main
problems
in
B-rep
generation
is
robustness.
An
algorithm
is
said
to
b
e
robust
if
for
ev
ery
v
alid
input
instance
of
the
problem,
it
generates
the
corresp
onding
v
alid
output
mem
b
er.
Consider
the
algorithm
as
a
function
F
from


the
input
set
I
to
the
output
set
O
.
F
:
I
!
O
In
this
denition,
it
is
imp
ortan
t
for
the
algorithm
to
iden
tify
the
t
yp
e
of
input
instance
i

I
b
ecause
the
sequence
of
steps
executed
b
y
the
algorithm
dep
ends
directly
on
i.
Most
geometric
algorithms
are
dev
elop
ed
assuming
that
the
input
data
are
in
general
p
osition,
and
that
exact
arithmetic
pro
vides
reliable
geometric
primitiv
es.
Ho
w
ev
er,
for
reasons
of
eciency
and
feasibilit
y
,
most
implemen
tati
ons
use
oat-
ing
p
oin
t
instead
of
exact
arithmetic.
Th
us,
the
correctness
of
the
mathematical
algorithm
do
es
not
extend
directly
to
the
implem
en
tation,
and
the
system
fails
for
seemingly
inno
cuous
input
data
(failure
to
classify
the
input
instance
correctly).
This
is
the
problem
of
\robustness"
in
geometric
computing.
Ho
w
ev
er,
if
a
particular
instance
is
degenerate,
the
v
alue
of
the
corresp
onding
expression
is
smaller
than
the
errors
accum
ulated
due
to
xed
precision.
There
are
t
w
o
w
a
ys
of
dealing
with
this
problem
-
tolerances
and
error
estimates

.
Estimating
tolerances
when
ev
aluating
a
complex
sequence
of
predicates
is
non
trivial,
and
error
estimates
are
to
o
p
essimistic
to
b
e
useful.
W
e
shall
no
w
iden
tify
t
w
o
areas
where
our
algorithm
is
susceptible
to
failure
when
using
oating
p
oin
t
arithmetic.
Most
of
these
errors
nally
b
oil
do
wn
to
either
p
oin
t
orien
tation
tests
or
comparison
b
et
w
een
t
w
o
oating
p
oin
t
n
um
b
ers.
W
e
do
not
guaran
tee
that
these
are
the
only
t
w
o
areas
where
our
algorithm
could
fail.
Ho
w
ev
er,
based
on
the
tests
w
e
p
erformed
on
the
system
for
the
last
couple
of
y
ears,
w
e
found
that
the
source
of
failure
w
as
b
ecause
of
the
ab
o
v
e
t
w
o
reasons.
Inaccurate
p
oin
t
in
v
ersion
for
curv
e
merging:
It
is
a
w
ell-kno
wn
fact
that
the
in
tersection
curv
e
of
t
w
o
parametric
surfaces
is
not
rationally
parameterizable
in
general.
As
a
result,
these
curv
es
are
appro
ximated
as
piecewise
linear
curv
es
or
splines
to
within
a
xed
tolerance
(whic
h
is
either
to
o
conserv
ativ
e
or
arbitrarily
c
hosen).
Since
most
of
the
surface
patc
hes
w
e
are
dealing
with
are
trimmed,
w
e
need
to
compute
p
ortions
of
the
in
tersection
curv
e
that
lie
inside
the
trimmed
b
ound-
aries
of
b
oth
the
patc
hes.
T
o
compute
the
actual
in
tersection
curv
e
for
trimmed
patc
hes,
w
e
need
to
compute
the
in
tersection
p
oin
ts
of
the
curv
e
with
the
trimmi
ng
b
oundary
.
If
the
b
oundary
curv
es
or
the
in
tersection
curv
e
are
not
accurate,
nei-
ther
are
the
in
tersection
p
oin
ts.
They
ma
y
not
ev
en
lie
on
the
actual
in
tersection
curv
e.
Corresp
onding
to
these
in
tersection
p
oin
ts,
w
e
need
to
compute
p
oin
ts
on
the
other
patc
h
(let
us
call
them
\in
v
erted
p
oin
ts")
whic
h
determine
the
p
ortions
of
the
in
tersection
curv
e
to
retain.
This
pro
cess
is
p
oint
inversion
whic
h
w
as
describ
ed
in
the
previous
section.
Tw
o
problems
can
arise
in
in
v
ersion:
(a)
there
ma
y
not
b
e
an
y
corresp
onding
p
oin
t
on
the
other
patc
h
(b
ecause
the
in
tersection
p
oin
ts
do
not
lie
exactly
on
the
in
tersection
curv
e),
or
(b)
the
in
v
erted
p
oin
ts
could
b
e
p
ositioned
suc
h
that
they
do
not
matc
h
up
for
curv
e
merging.
Using
our
analytic
represen
tation
of
the
in
tersection
curv
e
(as
the
singular
set
of
a
biv
ariate
matrix
p
olynomial


),
w
e
ensure
accurate
computation
of
p
i
's.
W
e


0
1
s
t
1
q0
q1
r0
r1
actual boundary
approximate boundary
(b)
Fig.
.
Inaccurate
p
oint
classication
estimate
an
appro
ximate
v
alue
for
the
p
i
's
b
y
p
erforming
in
tersections
with
the
piecewise
linear
appro
ximations
obtained
during
curv
e
tracing.
This
appro
ximate
v
alue
is
rened
b
y
p
erforming
minim
izatio
n
on
an
ob
jectiv
e
function
based
on
the
analytic
represen
tation
of
the
curv
e.
The
corresp
onding
in
v
erted
p
oin
t
is
also
ob-
tained
using
the
minim
ization
function.
Inaccurate
p
oin
t
classication:
Another
area
where
oating
p
oin
t
errors
result
in
failure
of
the
algorithm
is
during
comp
onen
t
classication.
As
describ
ed
earlier,
w
e
use
ra
y
sho
oting
for
this
purp
ose.
The
en
tire
computation
b
oils
do
wn
to
classifying
whether
a
p
oin
t
lies
inside
or
outside
the
trimming
region.
Figure

sho
ws
an
example.
In
most
cases,
classifying
p
oin
ts
lik
e
q

is
not
a
problem.
One
ra
y-sho
oting
query
will
determine
it.
Ho
w
ev
er,
consider
a
p
oin
t
lik
e
q
0
whic
h
lies
v
ery
close
to
the
b
oundary
.
Appro
ximate
represen
tations
of
the
trimming
b
oundary
mak
es
classifying
q
0
a
ma
jor
problem.
Dep
ending
on
the
c
hoice
of
ra
y
directions
and
the
tolerances
used
w
e
ma
y
get
dieren
t
classications.
This
error
could
result
in
top
ologically
inconsisten
t
answ
ers.
W
e
impro
v
e
the
accuracy
of
the
classication
test
b
y
using
the
analytic
represen
tation
of
the
trimming
curv
e
(biv
ariate
matrix
p
olynomial).
Since
the
algebraic
curv
e
is
a
zero
set
of
a
p
olynomial,
there
is
a
sign
c
hange
on
either
side
of
the
curv
e
in
the
lo
cal
neigh
b
orho
o
d
of
the
b
oundary
.
The
sign
of
the
p
olynomial
with
the
p
oin
t
p
substituted
for
the
v
ariables
giv
es
the
classication
of
the
p
oin
t.
Since
the
curv
e
is
represen
ted
as
the
determinan
t
of
a
matrix
p
olynomial
,
w
e
ha
v
e
to
ev
aluate
the
sign
of
this
determinan
t.
W
e
use
singular
value
de
c
omp
osition
(SVD)
to
accomplish
this
task.
Giv
en
a
n
umerical
square
matrix
A,
SVD
decomp
oses
it
in
to
the
form
A
=
U

V
T
;


where
U
and
V
T
are
orthonormal
matrices,
and

is
a
diagonal
matrix
whose
en
tries
are
all
p
ositiv
e.
This
implies
that
the
sign
of
the
determinan
t
of
A
is
the
same
as
the
pro
duct
of
the
signs
of
the
t
w
o
orthonormal
matrices
(determinan
t
is
+
or
-).
W
e
can
safely
p
erform
Gaussian
elimination
to
determine
the
sign
of
these
determinan
ts.
The
results
pro
vided
b
y
SVD
can
actually
b
e
v
eried
b
y
computing
an
upp
er
b
ound
on
the
absolute
error,
,
in
the
smallest
singular
v
alue,


.
If
the
in
terv
al
[
 ;

+
]
do
es
not
con
tain
zero,
w
e
can
guaran
tee
the
correctness
of
the
sign
of
the
determinan
t.
If
the
ab
o
v
e
in
terv
al
includes
zero,
w
e
do
not
kno
w
of
an
y
oating-p
oin
t
based
metho
d
to
compute
the
sign
of
the
determinan
t.
W
e
m
ust
resort
to
exact
rational
tec
hniques.
W
e
also
p
erform
a
n
um
b
er
of
c
hec
k-p
oin
ting
op
erations
in
our
implem
en
tation
that
con
trol
the
accum
ulation
of
oating
p
oin
t
error.
Since
the
implemen
tatio
n
w
as
done
using
oating
p
oin
t
arithmetic,
w
e
also
use
tolerances
to
compare
suc
h
v
alues.
Finding
a
tolerance
that
w
orks
for
all
mo
dels
is
v
ery
dicult.
In
some
cases,
w
e
had
to
c
hange
tolerances
to
mak
e
our
system
w
ork.
The
accuracy
of
the
B-rep
generated
is
determined
b
y
the
accuracy
of
the
in-
tersection
curv
es
b
et
w
een
solids.
In
our
system,
the
accuracy
of
these
curv
es
can
b
e
con
trolled
b
y
the
user
(limited,
of
course,
b
y
the
accuracy
of
double
precision).
Dep
ending
on
the
application,
our
system
can
generate
v
ery
accurate
B-reps
at
the
exp
ense
of
computation
time.
..
Inc
orp
or
ating
Exact
R
ational
A
rithmetic
to
BOOLE
Curren
tly
,
w
e
are
incorp
orating
B-rep
computation
using
exact
rational
arithmetic

to
prev
en
t
most
robustness
and
accuracy
problems
in
BOOLE.
The
use
of
exact
arithmetic
can
slo
w
do
wn
the
computation
time
signican
tly
(ab
out
0-00
times
based
on
our
initial
estimates)
for
lo
w
degree
primitiv
es,
and
ev
en
slo
w
er
for
higher
degree
solids.
W
e
ha
v
e
iden
tied
a
few
lo
w
er-lev
el
routines
where
the
algorithms
based
on
oating-p
oin
t
arithmetic
are
susceptible
to
failure.
These
include
deter-
minan
t
sign
ev
aluation,
orien
tation
of
p
oin
ts
with
resp
ect
to
curv
es,
and
comp
o-
nen
t
classication.
W
e
p
erform
suc
h
tests
r
eliably
using
exact
arithmetic.
The
implemen
tation
of
these
lo
w
er-lev
el
routines
in
to
a
separate
system
has
just
b
een
completed.
W
e
hop
e
to
p
erform
these
exact
tests
only
to
iden
tify
and
resolv
e
de-
generate
or
nearly
degenerate
situations.
W
e
ha
v
e
dev
elop
ed
a
separate
system,
named
E-SOLID,
whic
h
p
erforms
Bo
olean
op
erations
based
primarily
on
exact
ra-
tional
arithmetic.
P
erformance
of
this
system
is
impro
v
ed
b
y
using
a
v
ariet
y
of
tec
hniques
lik
e
precision-driv
en
computation
and
oating-p
oin
ts
lters
whenev
er
p
ossible.
Results
from
this
system
ha
v
e
b
een
published
in
Ref.
[	
,0
,
].
..
Bounding
Err
ors
in
Casc
ade
d
Computations
Another
imp
ortan
t
issue
in
the
con
text
of
robustness
is
the
error
accum
ulation
in
cascaded
geometric
computations.
Our
exp
erience
with
the
Bradley
gh
ting
v
ehicle
and
submarine
mo
del
sho
ws
that
extremely
large
CAD
mo
dels
are
designed
using
Bo
olean
set
op
erations
for
ph
ysical
analysis
and
mo
del
v
erication.
Individual
solids


0
1
s
t
1
trimming boundary
intersection curve
(a)
0
1
s
t
1
trimming boundary
intersection curve
(b)
Fig.
.
(a)
Surface-edge
contact
degeneracy
(b)
F
our
surfaces
meeting
at
a
p
oint
are
generated
using
a
large
n
um
b
er
of
successiv
e
Bo
olean
op
erations.
In
suc
h
cases,
systematically
dealing
with
the
gro
wth
of
errors
(sharply
b
ounding
the
maxim
um
errors)
is
essen
tial.
There
are
t
w
o
w
a
ys
of
dealing
with
this
issue.
One
w
a
y
is
to
com
bine
n
umerically
stable
algorithms
with
the
use
of
exact
arithmetic
c
hec
k-
p
oin
ting
routines
that
con
trol
the
gro
wth
of
error
and
are
able
to
iden
tify
and
resolv
e
degenerate
and
nearly
degenerate
situations.
The
other
w
a
y
is
to
use
in
terv
al-lik
e
arithmetic
(as
suggested
b
y
one
of
our
review
ers
for
this
pap
er)
whic
h
b
ounds
the
error
in
ev
ery
arithmetic
op
eration
and
can
also
giv
e
the
n
um
b
er
of
signican
t
bits
left
in
the
result.
A
t
the
time
of
writing
this
original
man
uscript,
BOOLE
simply
has
oating-p
oin
t
arithmetic
with
tolerancing
built
in
to
the
critical
computation
steps.
Ho
w
ev
er,
in
the
last
couple
of
y
ears,
w
e
ha
v
e
in
v
estigated
the
use
of
exact
arithmetic
as
w
ell
as
adaptiv
e-precision
arithmetic
(using
in
terv
al
arithmetic
in
a
arbitrary
precision
n
um
b
er
system)
Ref.
[
]
to
con
trol
the
errors
in
our
algorithms.
The
initial
results
are
v
ery
promising.
	.
Degeneracies
A
n
um
b
er
of
degenerate
cases
can
arise
when
dealing
with
curv
ed
surfaces.
Some
of
these
degeneracies
are
of
the
same
general
t
yp
e
as
is
found
in
a
p
olyhedral
mo
deler,
while
some
others
arise
only
with
curv
ed
surface
mo
delers.
These
include

Tw
o
surfaces
meeting
at
a
p
oin
t:
This
case
is
particular
only
to
curv
ed
surfaces.
Since
the
surfaces
meet
at
a
p
oin
t
whic
h
lies
in
the
in
terior
of
their
resp
ectiv
e
domains,
their
normals
are
coinciden
t.
This
corresp
onds
to
a
singularit
y
.
W
e
determine
this
b
y
minim
i
zing
an
energy
function
used
to
determine
singularities

.

Tw
o
surfaces
tangen
tial
ly
in
tersecti
ng
at
a
curv
e:
This
is
a
degenerate
case
when
the
surfaces
are
tangen
t
to
eac
h
other
along
that
curv
e.
This
case
also
o
ccurs
only
with
curv
ed
surfaces.
W
e
will
b
e
able
to
detect
this
when


w
e
generate
the
adjacency
graph
b
y
nding
that
t
w
o
adjacen
t
comp
onen
ts
actually
ha
v
e
the
same
orien
tation
with
resp
ect
to
the
other
solid.
Another
scenario
when
this
case
o
ccurs
is
if
the
in
tersection
curv
es
do
not
form
a
closed
lo
op
in
space.

Tw
o
surfaces
o
v
erlappi
ng:
This
corresp
onds
to
a
face-face
o
v
erlap
in
the
p
olyhedral
domain.
If
t
w
o
surfaces
are
o
v
erlapping,
their
in
tersection
set
is
t
w
o-dimensional.
Essen
tially
,
our
biv
ariate
matrix
p
olynomial
represen
ting
the
in
tersection
curv
e
is
singular
for
all
v
alues
in
the
domain.
W
e
p
erform
this
test
b
y
sampling
the
domain
and
determining
the
ranks
of
the
resulting
n
umeric
matrices
using
SVD.

A
surface
just
touc
hing
an
edge:
This
is
an
edge-face
con
tact
in
the
p
olyhedral
domain,
and
can
happ
en
when
three
surfaces
meet
in
a
curv
e.
In
our
represen
tation,
this
will
app
ear
as
an
in
tersection
curv
e
whic
h
is
tangen
t
to
a
trimmi
ng
curv
e
(see
Figure
(a)).
Suc
h
a
case
can
b
e
automatically
eliminated
if
w
e
c
hec
k
e
ach
comp
onen
t
of
the
in
tersection
curv
e
to
see
whether
it
is
in
the
trimmed
region.
This
do
es
not
allo
w
us
to
use
the
sp
eed-up
of
propagating
the
information
ab
out
one
comp
onen
t
of
the
in
tersection
curv
e
to
all
other
comp
onen
ts
of
that
curv
e.

F
our
surfaces
meeting
at
a
p
oin
t:
This,
is
the
foundation
for
sev
eral
t
yp
es
of
degeneracies
and
will
b
e
discussed
next.
Examples
of
four
surfaces
meeting
at
a
p
oin
t
include
when
a
v
ertex
of
one
solid
lies
on
the
surface
of
another
solid,
or
when
the
edges
of
t
w
o
solids
meet.
Ob
viously
,
the
v
ertex
can
b
e
though
t
of
as
the
in
tersection
of
three
surfaces,
and
the
edges
can
b
e
though
t
of
as
the
in
tersection
of
t
w
o
surfaces,
th
us
the
cases
men
tioned
w
ould
in
v
olv
e
the
in
tersection
of
four
surfaces.
Ev
en
more
degenerate
cases,
suc
h
as
t
w
o
v
ertices
meeting,
or
a
v
ertex
lying
on
an
edge,
are
p
ossible,
but
these
can
b
e
view
ed
as

or

surfaces
meeting
at
a
p
oin
t
-
i.e.
at
least
four
surfaces
are
still
meeting
at
a
p
oin
t.
These
cases
will
manifest
themselv
es
in
our
mo
deler
as
three
(or
more)
curv
es
meeting
at
a
common
p
oin
t
in
the
domain
of
some
patc
h
(see
Figure
(b)).
Assume
these
three
curv
es
are
f
,
f
,
and
f
.
W
e
can
nd
out
whether
this
case
has
o
ccurred
b
y
c
hec
king
equalit
y
of
the
in
tersection
of
f

and
f

with
the
in
tersection
of
f

and
f

(or
f

and
f
).
Curren
tly
,
these
equalit
y
tests
are
p
erformed
with
tolerances.
Once
the
rational
arithmetic
mo
dule
is
added,
w
e
hop
e
to
do
these
tests
exactly
.
Degeneracies
in
the
p
olyhedral
case
can
generally
b
e
classied
in
to
the
category
of
four
planes
meeting
at
a
p
oin
t.
It
has
b
een
sho
wn

that
a
simple
p
erturbation
sc
heme
applied
to
a
single
basic
geometric
predicate
can
eliminate
these
degenera-
cies.
No
ob
vious
extension
of
this
metho
d
is
kno
wn
for
curv
ed
parametric
surfaces
(there
are
some
theoretical
notions
of
p
erturbation
for
implicit
surfaces),
though
there
is
hop
e
that
some
p
erturbation
metho
d
can
b
e
dev
elop
ed
using
exact
rational
arithmetic
whic
h
w
ould
w
ork
similarly
.
	

#
of
CSG
Running
time
(in
secs.)
#
of
patc
hes
Mo
del
opns.
BB
&
LP
test
SSI
Ra
y-sho
oting
T
otal
(in
B-Rep)
Fig.
(a)
0
.
.
.
.0

Fig.
(b)

0.
	.
.
.
	
Fig.
(c)

0.
.
.
.

Fig.
(d)

.
.	
.
	.
	
Fig.
(e)
0
.
.
.
.
	
Fig.
(f
)

.0
.
.
.

T
able
.
P
erfo
rmance
of
our
system
on
pa
rts
of
the
subma
rine
mo
del
(Figure
)
0.
P
arallel
Implemen
tati
on
In
this
section,
w
e
presen
t
the
parallel
v
ersion
of
our
implemen
tatio
n
of
BOOLE.
Since
w
e
are
dealing
with
sculptured
solids
with
trimmed
B

ezier
patc
hes,
as
opp
osed
to
p
olyhedral
solids,
the
complexit
y
of
the
whole
b
oundary
ev
aluation
system
is
in-
creased
signican
tly
.
The
time
tak
en
for
the
surface-surface
in
tersection
algorithm
is
a
cubic
function
of
the
degree
of
the
patc
h

in
the
w
orst
case.
F
urther,
the
complexit
y
of
ra
y-patc
h
in
tersection
ev
aluation
is
again
dep
enden
t
on
the
degree
of
the
patc
h.
These
parts
are
computationally
most
in
tensiv
e
and
form
the
main
b
ottlenec
k
in
terms
of
system
p
erformance.
Ho
w
ev
er,
it
is
easy
to
see
that
for
t
w
o
dieren
t
of
surface-surface
or
curv
e-surface
pairs
the
computation
can
b
e
inde-
p
enden
tly
carried
out.
T
o
impro
v
e
the
computation
time,
w
e
ha
v
e
implem
en
ted
a
parallel
v
ersion
of
the
algorithm
on
existing
shared
memory
m
ultipro
cessor
arc
hi-
tectures
lik
e
SGI-On
yx.
The
v
arious
stages
of
our
algorithm
is
explained
using
an
example
in
Figure

and
Figure
.
These
stages
are
quite
similar
to
the
o
v
erview
describ
ed
for
the
sequen
tial
algorithm
except
that
in
eac
h
of
the
b
ounding-b
o
x
and
linear
programmi
ng
tests,
surface-surface
in
tersection
and
comp
onen
t
classication
steps,
the
computation
is
distributed
among
v
arious
pro
cessors.
A
preliminary
v
er-
sion
of
the
parallel
algorithm
w
as
presen
ted
at
Eurographics'	

.
.
P
erformance
In
this
section,
w
e
highligh
t
the
p
erformance
of
b
oth
the
sequen
tial
and
parallel
algorithm
on
some
real-w
orld
mo
dels.
W
e
obtained
a
mo
del
of
a
submarine
storage
and
handling
ro
om
through
the
courtesy
of
Electric
Boat
Inc.,
a
division
of
Gen-
eral
Dynamics.
This
mo
del
consists
of
ab
out
000
solids.
Man
y
of
the
primitiv
es
are
comp
osed
of
p
olyhedra,
spheres
and
cylinders.
Additional
primitiv
es
include
generalized
prisms
and
surfaces
of
rev
olution
of
degrees

or
more.
A
few
of
the
primitiv
es
are
comp
osed
of
B

ezier
surfaces
of
degree
as
high
as
.
Most
of
the
CSG
trees
ha
v
e
heigh
ts
ranging
b
et
w
een

and

and
some
of
them
are
as
high
as
0.
T
able

sho
ws
the
p
erformance
of
the
sequen
tial
algorithm
on
some
solids
from
this
mo
del
(see
Figure
0).
The
column
with
running
time
is
brok
en
in
to
four
parts:
the
b
ounding
b
o
x
and
linear
programming,
surface-surface
in
tersection,
ra
y-sho
oting
and
total.
The
nal
column
indicates
the
n
um
b
er
of
trimmed
patc
hes
that
the
nal
mo
del
has.
0

Curve
Cylinder
Cube
(PE 1)
(PE 0)
(PE 2)
(PE 0)
(PE 2)
(PE 1)
Solid 1
Solid 2
Merging
(Cylinder)
(PE 0)
(PE 1)
(PE 2)
Intersection
(PE 0)
(PE 1)
Intersection
(Cube)
Merging
Processor 0 (PE 0)
Processor 1 (PE 1)
Processor 2 (PE 2)
Stage 1: Bounding Box Overlaps and Linear Programming Tests
Merging
Stage 4
Stage 2: Allocation of patch-pairs to different processors
B-rep generation of the difference
between a cube and a cylinder
Stage 3: Intersection Curve Evaluation
Curve
Fig.
.
Intersection
curve
computation
and
curve
merging


(Solid 1 - Solid 2)
Stage 5: Component Generation
Stage 6: Component Classification by Rayshooting
Stage 7: B-Rep Computation of the resulting solid
Processor 0
Processor 1
Processor 2
 Patch-Processor assignment for ray-patch intersection computation
Component 2
Component 1
Component 0
Result
Fig.
.
Comp
onent
generation,
classication
and
B-rep
computation


            
Fig.
	.
T
rack
from
the
Bradley
mo
del
sho
wing
placement
of
drivewheel
mo
del
(000
B

ezier
patches)
[Courtesy:
Army
Resea
rch
Labs]
            
Fig.
0.
B-reps
of
some
solids
from
the
subma
rine
sto
rage
and
handling
ro
om
The
mo
del
of
the
Bradley
gh
ting
v
ehicle
w
as
obtained
from
Arm
y
Researc
h
Lab
oratories.
It
is
comp
osed
of
more
than
00
solids
eac
h
consisting
of
ab
out
-
Bo
olean
op
erations.
The
primitiv
es
in
the
Bradley
are
solids
lik
e
spheres,
cylin-
ders,
ellipsoids
and
tori
whose
B-reps
can
b
e
represen
ted
b
y
biquadric
(degree


)
B

ezier
patc
hes.
W
e
presen
t
the
p
erformance
of
our
sequen
tial
and
parallel
algorithms
on
three
of
the
solids
in
the
Bradley
gh
ting
v
ehicle.

Link
mo
del:
It
consists
of

Bo
olean
op
erations
and
the
B-rep
con
tains

trimmed
B

ezier
patc
hes.
Figure
(a)
sho
ws
the
mo
del.
The
graph
in
Fig-
ure

sho
ws
the
p
erformance
of
our
system
on
v
arying
n
um
b
er
of
pro
cessors.
It
can
b
e
seen
that
the
p
erformance
b
ecomes
w
orse
when
w
e
go
from
four
to
v
e
pro
cessors.
Since
this
is
not
a
v
ery
complex
mo
del,
the
setup
costs
of
using
v
e
pro
cessors
out
w
eigh
the
b
enet
of
parallelism.

Driv
ewheel
mo
del:
This
mo
del
is
constructed
using

Bo
olean
op
era-
tions.
The
B-rep
is
sho
wn
in
Figure
(b)
and
consists
of
	
trimmed
B

ezier
patc
hes.


            
Fig.
.
B-reps
of
some
solids
from
the
Bradley
ghting
vehicle
#
of
CSG
Running
time
(in
secs.)
#
of
patc
hes
Mo
del
opns.
BB
&
LP
test
SSI
Ra
y-sho
oting
T
otal
(in
B-Rep)
Link

.
.
	.
.

Driv
ewheel

.
.
.
	.
	
Idlerwheel

.
	.
.	
0.	

T
able
.
P
erfo
rmance
of
our
sequential
algo
rithm
on
pa
rts
of
the
Bradley
mo
del
(Figure
)

Idlerwheel
mo
del:
The
B-rep
of
the
idlerwheel
(comp
osed
of

trimmed
B

ezier
patc
hes)
is
sho
wn
in
Figure
(c)
and
to
ok

Bo
olean
op
erations
to
generate.
Again
increasing
the
pro
cessor
coun
t
reduces
the
running
time
b
ecause
of
complexit
y
of
the
mo
del.
T
able

and
T
able

sho
ws
the
p
erformance
of
our
sequen
tial
and
parallel
algo-
rithm
on
the
parts
of
the
Bradley
mo
del
sho
wn
in
Figure

resp
ectiv
ely
.
.
Public
Domain
Release
BOOLE
is
curren
tly
a
v
ailable
for
do
wnload
at
h
ttp://www.cs.unc.edu/~geom/
CSG/b
o
ole.h
tml.
Our
implemen
tatio
n
runs
on
single
pro
cessor
arc
hitectures
lik
e
SGI
Maxim
um
Impact
and
Sun-Solaris,
as
w
ell
as
a
parallel
v
ersion
of
the
algo-
rithms
on
shared
memory
m
ultipro
cessor
arc
hitectures
lik
e
SGI
On
yx.
The
en
tire
implemen
tation
of
the
system
is
in
C.
Using
BOOLE:
Here
w
e
do
cumen
t
T
otal
running
time
(in
secs.)
Mo
del

pro
c.

pro
c.

pro
c.

pro
c.

pro
c.
Link
.	
0.
.	
0.
.
Driv
ewheel
0.
.	
.	
	.0
.
Idlerwheel
.0
.
.	
.0
.
T
able
.
P
erfo
rmance
of
our
pa
rallel
algo
rithm
on
pa
rts
of
the
Bradley
mo
del
(Figure
)


Intersection Time
Total Time for CSG
Final Solid Computation
 Rayshooting, and 
Graph Computation,
Link
1
2
3
4
5
10
20
30
40
50
60
1
2
Time (in secs.)
3
4
5
10
20
30
40
50
60
70
80
90
100
Drivewheel
1
2
3
4
5
10
20
30
40
50
60
70
80
90
100
Idlerwheel
No. of processors
Time (in secs.)
Time (in secs.)
No. of processors
No. of processors
Fig.
.
P
erfo
rmance
of
our
pa
rallel
algo
rithm
as
a
function
of
p
ro
cesso
r
count

F
undamen
tal
data
structure,
TRIM
P
A
TCH
INF
O:
A
solid
is
repre-
sen
ted
b
y
an
arra
y
of
TRIM
P
A
TCH
INF
O
structures,
eac
h
of
whic
h
denes
a
trimmed
Bezier
patc
h.
Eac
h
trimming
curv
e
is
represen
ted
b
y
spline
curv
es
in
the
domain
of
the
patc
h
as
w
ell
as
in
-space.
The
spline
curv
e
pro
vide
the
in
terface.
The
algebraic
and
the
piecewise
linear
curv
e
are
used
for
in
ternal
computations
only
.

Bo
olean
op
erations
using
op
erate():
The
high-lev
el
routine
in
BOOLE
is
op
erate().
It
p
erforms
a
b
o
olean
op
eration
on
the
t
w
o
giv
en
solids.
The
argumen
t
"op
eration"
can
tak
e
one
of
the
follo
wing
in
teger
v
alues:
{
:
Union
{
:
In
tersection
{
:
Dierence
A
step
size
m
ust
b
e
sp
ecied
for
tracing
the
in
tersection
curv
e
b
et
w
een
Bezier
patc
hes.
W
e
ha
v
e
found
that
0.0
w
orks
sucien
tly
most
of
the
time.
The
stepsize
is
in
parametric
space,
and
is
not
related
to
the
size
of
the
mo
del.

Generating
geometric
primiti
v
es:
W
e
ha
v
e
included
some
routines
to
gen-
erate
TRIM
P
A
TCH
INF
O
ob
jects
(B-reps)
of
some
common
geometric
primi-
tiv
es.
F
or
example,
new
cone()
generates
a
truncated
cone
giv
en
a
cen
ter
p
oin
t
for
the
base,
an
axis
v
ector
(whose
length
is
imma
terial),
the
length
of
the
cone,
and
the
radii
of
the
t
w
o
disks.
Other
examples
of
routines
that
generate
primitiv
es
are
new
cylinder(),
new
ellipsoid(),
new
sphere()
and
new
torus().


.
Conclusion
Ev
aluating
Bo
olean
set
op
erations
of
sculptured
solid
ob
jects
is
one
of
the
most
p
o
w
erful
facilities
a
v
ailable
in
a
solid
mo
deler.
In
mo
delers
based
on
b
oundary
represen
tations,
the
Bo
olean
set
op
eration
algorithm
is
also
tec
hnically
one
of
the
most
demanding
comp
onen
t.
A
signican
t
p
ortion
of
the
complexit
y
is
due
to
the
computation
and
represen
tation
of
in
tersection
curv
es
b
et
w
een
free-form
surfaces.
Apart
from
the
algebraic
and
geometric
diculties,
a
con
v
enien
t
represen
tation
of
the
in
tersection
curv
e
is
essen
tial
to
eectiv
ely
compute
the
b
oundary
.
In
this
pap
er,
w
e
ha
v
e
describ
ed
a
complete
implemen
tation
of
a
system
to
ev
aluate
B-reps
of
Bo
olean
com
binations
of
sculptured
solids.
It
emplo
ys
a
com
bination
of
sym
b
olic
and
n
umeric
metho
ds
to
compute
the
B-reps
accurately
and
ecien
tly
.
The
input
to
our
algorithm
is
a
CSG
tree
that
describ
es
the
solid
as
a
Bo
olean
expression
of
primitiv
e
solids.
The
c
hoice
of
the
set
of
primitiv
e
solids
is
arbitrary
as
long
as
they
can
b
e
represen
ted
as
a
piecewise
collection
of
parametric
surface
patc
hes.
Our
p
ortable
implemen
tati
on
,
called
BOOLE,
has
b
een
successfully
ap-
plied
to
generate
the
b
oundary
represen
tations
of
industrial
mo
dels
comp
osed
of
thousands
of
Bo
olean
set
op
erations.
Ac
kno
wledgemen
ts
W
e
w
ould
lik
e
to
thank
Mik
e
Hohmey
er
and
A
tul
Narkhede
for
pro
viding
their
implemen
tations
of
linear
programmi
ng
and
p
olygon
triangulation
resp
ectiv
ely
.
Thanks
also
to
Ken
F
ast,
Greg
Angelini
and
Jim
Boudreaux
at
Electric
Boat
and
Mik
e
Muuss
at
Arm
y
Researc
h
Labs
for
pro
viding
their
CSG
mo
dels
for
me
to
use.
References
.
S.S.
Abh
y
ank
ar
and
C.
Ba
ja
j.
Automatic
parametrizations
of
rational
curv
es
and
surfaces
iii:
Algebraic
plane
curv
es.
Computer
A
ide
d
Ge
ometric
Design,
:0	{,
	.
.
E.
Anderson,
Z.
Bai,
C.
Bisc
hof,
J.
Demmel,
J.
Dongarra,
J.
Du
Croz,
A.
Green
baum,
S.
Hammarling,
and
D.
Sorensen.
LAP
A
CK
User's
Guide,
R
ele
ase
.0.
SIAM,
Philadelph
ia
,
		.
.
C.L.
Ba
ja
j,
C.M.
Homann,
J.E.H.
Hop
croft,
and
R.E.
Lync
h.
T
racing
surface
in
tersections.
Computer
A
ide
d
Ge
ometric
Design,
:{0,
	.
.
R.E.
Barnhill
and
S.N.
Kersey
.
A
marc
hing
metho
d
for
parametric
surface/surface
in
tersection.
Computer
A
ide
d
Ge
ometric
Design,
:{0,
		0.
.
B.
Baumgart.
A
p
olyhedron
represen
tation
for
computer
vision.
In
National
Computer
Confer
enc
e,
AFIPS
Conf.
Pr
o
c.,
pages
	{	,
	.
.
M.
Benouamer,
D.
Mic
helucci,
and
B.
P
ero
c
he.
Error-free
b
oundary
ev
aluation
based
on
a
lazy
rational
arithmetic:
a
detailed
implemen
tation.
Computer-A
ide
d
Design,
(),
		.
.
I.
Braid.
The
syn
thesis
of
solid
b
ounded
b
y
man
y
faces.
Comm.
A
CM,
:0	{,
	.
.
S.
A.
Cameron.
A
study
of
the
clash
detection
problem
in
rob
otics.
IEEE
Confer-
enc
e
on
R
ob
otics
and
A
utomation,
pages
{	,
	.


	.
M.
S.
Casale.
F
ree-form
solid
mo
deling
with
trimmed
surface
patc
hes.
IEEE
Computer
Gr
aphics
and
Applic
atio
ns,
pages
{,
Jan
uary
	.
0.
M.
S.
Casale
and
J.
E.
Bobro
w.
A
set
op
eration
algorithm
for
sculptured
solids
mo
deled
with
trimmed
patc
hes.
Computer
A
ide
d
Ge
ometric
Design,
:{,
		.
.
M.S.
Casale
and
E.L.
Stan
ton.
An
o
v
erview
of
analytic
solid
mo
deling.
IEEE
Computer
Gr
aphics
and
Applic
atio
ns,
:{,
F
ebruary
	.
.
K.
Chan.
Solid
Mo
del
ling
of
Parts
with
Quadric
and
F
r
e
e-form
Surfac
es.
PhD
thesis,
Univ
ersit
y
of
Hong
Kong,
	.
.
H.
Chiy
okura
and
F.
Kim
ura.
Design
of
solids
with
free-form
surfaces.
Computer
Gr
aphics,
:	{	,
	.
.
A.L.
Dixon.
The
eliminan
t
of
three
quan
tics
in
t
w
o
indep
enden
t
v
ariables.
Pr
o
c
e
e
d-
ings
of
L
ondon
Mathematic
al
So
ciety,
:	{	,
0	{,
	0.
.
E.
Driskill
and
E.
Cohen.
In
teractiv
e
design,
analysis,
and
illustration
of
assem
blies.
In
Pr
o
c.
of
		
Symp
osium
on
Int.
D
Gr
aphics,
pages
{,
		.
.
T
om
Du.
In
terv
al
arithmetic
and
recursiv
e
sub
divisio
n
for
implicit
functions
and
constructiv
e
solid
geometry
.
A
CM
Computer
Gr
aphics,
():{	,
		.
.
J.
L.
Ellis,
G.
Kedem,
T.
C.
Ly
erly
,
D.
G.
Thielman,
R.
J.
Marisa,
J.
P
.
Menon,
and
H.
B.
V
o
elc
k
er.
The
ra
ycasting
engine
and
ra
y
represen
tations.
In
Pr
o
c
e
e
dings
of
Symp
osium
on
Solid
Mo
deling
F
oundations
and
CAD/CAM
Applic
ation
s,
pages
{,
		.
.
S.
F
ang,
B.
Bruderlin,
and
X.
Zh
u.
Robustness
in
solid
mo
deling:
a
tolerance-based
in
tuitioni
stic
approac
h.
Computer-A
ide
d
Design,
(	):{,
		.
	.
G.
F
arin.
Curves
and
Surfac
es
for
Computer
A
ide
d
Ge
ometric
Design:
A
Pr
actic
al
Guide.
Academic
Press
Inc.,
		0.
0.
G.
F
arin.
Curves
and
Surfac
es
for
Computer
A
ide
d
Ge
ometric
Design:
A
Pr
actic
al
Guide.
Academic
Press
Inc.,
		.
.
R.T.
F
arouki.
The
c
haracterization
of
parametric
surface
sections.
Computer
Vision,
Gr
aphics
and
Image
Pr
o
c
essing,
:0	{,
	.
.
R.T.
F
arouki
and
J.K.
Hinds.
A
hierarc
h
y
of
geometric
forms.
IEEE
Computer
Gr
aphics
and
Applic
ation
s,
:{,
Ma
y
	.
.
S.
F
ortune.
P
olyhedral
mo
deling
with
exact
arithmetic.
Pr
o
c
e
e
dings
of
A
CM
Solid
Mo
deling,
pages
{,
		.
.
B.S.
Garb
o
w,
J.M.
Bo
yle,
J.
Dongarra,
and
C.B.
Moler.
Matrix
Eigensystem
R
ou-
tines
{
EISP
A
CK
Guide
Extension,
v
olume
.
Springer-V
erlag,
Berlin,
	.
.
A.
Geiso
w.
Surfac
e
Interr
o
gations
.
PhD
thesis,
Sc
ho
ol
of
Computing
Studies
and
Accoun
tancy
,
Univ
ersit
y
of
East
Anglia,
	.
.
N.
J.
Higham.
A
c
cur
acy
and
Stability
of
Numeric
al
A
lgorithms.
SIAM,
Philadelph
ia,
P
A,
		.
.
R.
C.
Hilly
ard.
The
build
group
of
solid
mo
dellers.
IEEE
Computer
Gr
aphics
and
Applic
ation
s,
:{,
	.
.
C.
Homann,
J.
Hop
croft,
and
M.
Karasic
k.
Robust
set
op
erations
on
p
olyhedral
solids.
IEEE
Computer
Gr
aphics
and
Applic
ations
,
	():0{	,
		.
	.
C.M.
Homann.
Ge
ometric
and
Solid
Mo
deling.
Morgan
Kaufmann,
San
Mateo,
California,
		.
0.
M.E.
Hohmey
er.
A
surface
in
tersection
algorithm
based
on
lo
op
detection.
Inter-


national
Journal
of
Computational
Ge
ometry
and
Applic
ation
s,
():{	0,
		.
Sp
ecial
issue
on
Solid
Mo
deling.
.
M.E.
Hohmey
er.
R
obust
and
Ecient
Interse
ction
for
Solid
Mo
deling.
PhD
thesis,
Computer
Science
Division
,
Departmen
t
of
Electrical
Engineering
and
Computer
Science,
Univ
ersit
y
of
California,
Berk
eley
,
		.
.
D.
Jac
kson.
Boundary
represen
tation
mo
deling
with
lo
cal
tolerances.
Pr
o
c
e
e
dings
of
A
CM
Solid
Mo
deling,
pages
{,
		.
.
G.E.M
Jared.
Syn
thesis
of
v
olume
mo
deling
and
sculptured
surfaces
in
build.
In
CAD,
Computers
in
Design
Engine
ering
Confer
enc
e
Pr
o
c
e
e
dings,
pages
{	,
	.
.
J.K.
Johnstone.
The
Sorting
of
p
oints
along
an
algebr
aic
curve.
PhD
thesis,
Cornell
Univ
ersit
y
,
Departmen
t
of
Computer
Science,
	.
.
Y.E.
Kala
y
.
Mo
deling
p
olyhedral
solids
b
ounded
b
y
m
ulti-curv
ed
parametric
sur-
faces.
A
CM
IEEE
Ninete
enth
Design
A
utomation
Confer
enc
e
Pr
o
c
e
e
dings,
pages
0{0,
	.
.
S.
Katz
and
T.W.
Sederb
erg.
Gen
us
of
the
in
tersection
curv
e
of
t
w
o
rational
surface
patc
hes.
Computer
A
ide
d
Ge
ometric
Design,
,
	.
.
J.
Keyser,
T.
Culv
er,
D.
Mano
c
ha,
and
S.
Krishnan.
Map
c:
A
library
for
ecien
t
and
exact
manipulati
on
of
algebraic
p
oin
ts
and
curv
es.
In
Pr
o
c
e
e
dings
of
the
th
A
nnual
Symp
osium
on
Computational
Ge
ometry,
pages
0{	,
			.
.
J.
Keyser,
S.
Krishnan,
and
D.
Mano
c
ha.
Ecien
t
and
accurate
b-rep
genera-
tion
of
lo
w
degree
sculptured
solids
using
exact
arithmetic.
In
A
CM/SIGGRAPH
Symp
osium
on
Solid
Mo
deling,
pages
{,
		.
	.
J.
Keyser,
S.
Krishnan,
and
D.
Mano
c
ha.
Ecien
t
and
accurate
b-rep
generation
of
lo
w
degree
sculptured
solids
using
exact
arithmetic:
I
{
represen
tations.
Computer
A
ide
d
Ge
ometric
Design,
(	):{	,
Octob
er,
			.
0.
J.
Keyser,
S.
Krishnan,
and
D.
Mano
c
ha.
Ecien
t
and
accurate
b-rep
generation
of
lo
w
degree
sculptured
solids
using
exact
arithmetic:
Ii
{
computation.
Computer
A
ide
d
Ge
ometric
Design,
(	):0{,
Octob
er,
			.
.
F.
Kim
ura
and
Geomap-I
I
I.
Designing
solids
with
free-form
surfaces.
IEEE
Com-
puter
Gr
aphics
and
Applic
ations
,
:{,
	.
.
G.A.
Kriezis,
N.M.
P
atrik
alakis,
and
F.E.
W
olter.
T
op
ological
and
dieren
tial
equation
metho
ds
for
surface
in
tersections.
Computer-A
ide
d
Design,
():{,
		0.
.
S.
Krishnan.
Ecient
and
A
c
cur
ate
Boundary
Evaluation
A
lgorithms
for
Bo
ole
an
Combinations
of
Sculptur
e
d
Solids.
PhD
thesis,
Departmen
t
of
Computer
Science,
Univ
ersit
y
of
North
Carolina,
Chap
el
Hill,
Decem
b
er
		.
.
S.
Krishnan,
M.
F
osk
ey
,
T.
Culv
er,
J.
Keyser,
and
D.
Mano
c
ha.
Precise:
Ecien
t
m
ultiprecisio
n
ev
aluation
of
algebraic
ro
ots
and
predicates
for
reliable
geometric
computations.
T
ec
hnical
Rep
ort
TR00-00,
Departmen
t
of
Computer
Science,
Uni-
v
ersit
y
of
North
Carolina,
000.
.
S.
Krishnan,
M.
Gopi,
D.
Mano
c
ha,
and
M.
Mine.
In
teractiv
e
b
oundary
computation
of
b
o
olean
com
binations
of
sculptured
solids.
In
Pr
o
c.
of
Eur
o
gr
aphics,
v
olume
,
pages
C{C,
		.
.
S.
Krishnan
and
D.
Mano
c
ha.
Ecien
t
represen
tations
and
tec
hniques
for
comput-
ing
b-rep's
of
csg
mo
dels
with
n
urbs
primitiv
es.
In
Pr
o
c
e
e
dings
of
CSG'	,
pages
0{.
Information
Geometers
Ltd,
		.
.
S.
Krishnan
and
D.
Mano
c
ha.
An
ecien
t
surface
in
tersection
algorithm
based
on


the
lo
w
er
dimensional
form
ulation.
A
CM
T
r
ansactions
on
Gr
aphics,
():{0,
		.
.
S.
Krishnan
and
D.
Mano
c
ha.
Sym
b
olic-n
umeri
c
metho
ds
of
lo
op
detection
for
curv
e
and
surface
in
terrogations.
In
Journal
of
Symb
olic
Computation:
Sp
e
cial
Issue
on
Symb
olic-Numeric
A
lgebr
a
for
Polynomials
[In
R
eview],
		.
	.
S.
Krishnan
and
D.
Mano
c
ha.
Computing
b
o
olean
com
binations
of
solids
comp
osed
of
free-form
surfaces.
		.
Man
uscript
[submitted
for
publicati
on].
0.
D.
H.
Laidla
w,
W.
B.
T
rum
b
ore,
and
J.
F.
Hughes.
Constructiv
e
solid
geometry
for
p
olyhedral
ob
jects.
A
CM
Computer
Gr
aphics,
0:{0,
	.
.
D.
Mano
c
ha
and
J.F.
Cann
y
.
A
new
approac
h
for
surface
in
tersection.
Internationa
l
Journal
of
Computational
Ge
ometry
and
Applic
ations
,
():	{,
		.
Sp
ecial
issue
on
Solid
Mo
deling.
.
D.
Mano
c
ha
and
S.
Krishnan.
Algebraic
pruning:
A
fast
tec
hnique
for
curv
e
and
surface
in
tersections.
Computer
A
ide
d
Ge
ometric
Design,
0:{,
		.
.
M.
Man
t
yla.
Bo
olean
op
erations
of
-manifolds
through
v
ertex
neigh
b
orho
o
d
clas-
sication.
A
CM
T
r
ansactions
on
Gr
aphics,
:{	,
	.
.
M.
Man
t
yla.
A
n
Intr
o
ductio
n
to
Solid
Mo
deling.
Computer
Science
Press,
Ro
c
kville,
Maryland,
	.
.
M.
Man
t
yla
and
M.
Ran
ta.
In
teractiv
e
solid
mo
deling
in
h
utdesign.
In
Pr
o
c
e
e
dings
of
Computer
Gr
aphics,
T
okyo,
	.
.
M.
Man
t
yla
and
M.
T
amminen.
Lo
calized
set
op
erations
for
solid
mo
deling.
In
Computer
Gr
aphics,
v
olume
,
pages
	{,
	.
.
D.
J.
Meagher.
The
solids
engine:
a
pro
cessor
for
in
teractiv
e
solid
mo
deling.
In
Pr
o
c
e
e
dings
of
Nic
o
gr
aph,
	.
.
J.
Menon.
Constructive
Shel
l
R
epr
esentatio
ns
for
F
r
e
e-form
Surfac
es
and
Solids.
PhD
thesis,
Dept.
of
Computer
Science,
Cornell
Univ
ersit
y
,
		.
	.
A.
Narkhede
and
D.
Mano
c
ha.
F
ast
p
olygon
triangulati
on
based
on
seidel's
algo-
rithm.
In
A.
P
aeth,
editor,
Gr
aphics
Gems
V,
pages
	{	,
Academic
Press,
		.
0.
B.K.
Natara
jan.
On
computing
the
in
tersection
of
b-splines.
In
A
CM
Symp
osium
on
Computationl
Ge
ometry,
pages
{,
		0.
.
N.
Okino,
Y.
Kak
azu,
and
H.
Kub
o.
TIPS-:
T
e
chnic
al
Information
Pr
o
c
essing
System
for
Computer
A
ide
d
Design
and
Manufacturing.
Computer
Languages
for
Numerical
Con
trol,
J.
Hatv
an
y
,
ed.,
North
Holland,
Amsterdam,
	.
.
A.
P
aoluzzi,
M.
Ramella,
and
A.
San
tarelli.
Un
mo
dellatori
geometrico
su
rappre-
sen
tazioni
triango-alate.
T
ec
hnical
Rep
ort
Rept.
TR
.,
Departmen
t
of
Inf.
and
Systems,
Univ
ersit
y
of
Rome,
Italy
,
	.
.
W.H.
Press,
B.P
.
Flannery
,
S.A.
T
euk
olsky
,
and
W.T.
V
etterling.
Numeric
al
R
e
cip
es:
The
A
rt
of
Scientic
Computing.
Cam
bridge
Univ
ersit
y
Press,
		0.
.
A.A.G.
Requic
ha
and
J.R.
Rossignac.
Solid
mo
deling
and
b
ey
ond.
IEEE
Computer
Gr
aphics
and
Applic
ation
s,
pages
{,
Septem
b
er
		.
.
A.A.G.
Requic
ha
and
H.B.
V
o
elc
k
er.
Solid
mo
deling:
A
historical
summary
and
con
temp
orary
assessmen
t.
IEEE
Computer
Gr
aphics
and
Applic
ation
s,
():	{,
Marc
h
	.
.
A.A.G.
Requic
ha
and
H.B.
V
o
elc
k
er.
Bo
olean
op
erations
in
solid
mo
deling:
b
ound-
ary
ev
aluation
and
merging
algorithms.
Pr
o
c
e
e
dings
of
the
IEEE,
(),
	.
.
J.
Rossignac,
A.
Megahed,
and
B.D.
Sc
hneider.
In
teractiv
e
insp
ection
of
solids:
	

cross-sections
and
in
terferences.
In
Pr
o
c
e
e
dings
of
A
CM
Siggr
aph,
pages
{0,
		.
.
J.
Rossignac
and
H.B.
V
o
elc
k
er.
Activ
e
zones
in
csg
for
accelerating
b
oundary
ev
aluation,
redundancy
elimination
,
in
terference
detection,
and
shading
algorithm.
A
CM
T
r
ansactions
on
Gr
aphics,
():{,
		.
	.
G.
Salmon.
L
essons
Intr
o
ductory
to
the
Mo
dern
Higher
A
lgebr
a.
G.E.
Stec
hert
&
Co.,
New
Y
ork,
.
0.
T.
Satoh.
Bo
olean
op
erations
on
sets
using
surface
data.
In
Pr
o
c
e
e
dings
of
Symp
o-
sium
on
Solid
Mo
deling
F
oundations
and
CAD/CAM
Applic
ation
s,
pages
	{,
		.
.
T.W.
Sederb
erg
and
T.
Nishita.
Geometric
hermite
appro
ximation
of
surface
patc
h
in
tersection
curv
es.
Computer
A
ide
d
Ge
ometric
Design,
:	{,
		.
.
M.
Segal.
Using
tolerances
to
guaran
tee
v
alid
p
olyhedral
mo
deling
results.
In
Pr
o
c
e
e
dings
of
A
CM
Siggr
aph,
pages
0{,
		0.
.
R.
Seidel.
Linear
programming
and
con
v
ex
h
ulls
made
easy
.
In
Pr
o
c.
th
A
nn.
A
CM
Conf.
on
Computational
Ge
ometry,
pages
{,
Berk
eley
,
California,
		0.
.
R.
Seidel.
A
simple
and
fast
randomized
algorithm
for
computing
trap
ezoidal
decomp
ositions
and
for
triangulati
ng
p
olygons.
Computational
Ge
ometry
The
ory
&
Applic
ation
s,
():{,
		.
.
K.
Sugihara
and
M.
Iri.
A
solid
mo
deling
system
free
from
top
ological
inconsistencis.
J.
Inf.
Pr
o
c.,
Inf.
Pr
o
c.
So
c.
of
Jap
an,
():0{	,
		.
.
M.
S.
T
a
wk.
An
ecien
t
algorithm
for
csg
to
b-rep
con
v
ersion.
In
Pr
o
c
e
e
dings
of
Symp
osium
on
Solid
Mo
deling
F
oundations
and
CAD/CAM
Applic
ation
s,
pages
		{0,
		.
.
T.
V
arady
and
M.J.
Pratt.
Design
tec
hniques
for
the
denition
of
solid
ob
jects
with
free-form
geometry
.
Computer
A
ide
d
Ge
ometric
Design,
():0{,
	.
.
H.
B.
V
o
elc
k
er.
An
in
tro
duction
to
padl:
Characteristics,
status,
and
rationale.
T
ec
hnical
Rep
ort
Researc
h
Memo.
#,
Univ
ersit
y
of
Ro
c
hester,
	.
Pro
duction
Automation
Pro
ject.
	.
Kevin
J.
W
eiler.
T
op
olo
gic
al
Structur
es
for
Solid
Mo
deling.
PhD
thesis,
Computer
and
Systems
Engineering,
Rensselaer
P
olytec
hnic
Institute,
	.
0.
Kevin
J.
W
eiler.
Edge-based
data
structures
for
solid
mo
deling
in
curv
ed-surface
en
vironmen
ts.
IEEE
Computer
Gr
aphics
and
Applic
atio
ns,
():{0,
Jan
uary
	.
.
M.
W
esley
.
A
geometric
mo
deling
system
for
automated
mec
hanical
assem
bly
.
IBM
Journal
of
R
ese
ar
ch
and
Development
,
pages
{,
	0.
0

