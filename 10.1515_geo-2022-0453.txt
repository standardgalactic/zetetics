Research Article
Oltion Fociro, Ana Fociro*, Redi Muçi, Klodian Skrame, Jeton Pekmezi, and Mario Mezini
Carbonate texture identiﬁcation using multi-
layer perceptron neural network
https://doi.org/10.1515/geo-2022-0453
received July 19, 2022; accepted December 19, 2022
Abstract: This study proposes an approach to identifying
carbonate rocks depositional texture utilizing more than
1250 thin-section photos as a data set from shallow-water
carbonates of the Kruja zone (Albania). The proposed
technique uses a numerical methodology based on digi-
tized images of thin sections. According to the Dunham
classiﬁcation, it permits the user to recognize the carbo-
nate texture automatically. The carbonate rock should
not be aﬀected by post-depositional processes. This tech-
nique uses as input gray-scale digital images taken from
thin sections. Image processing can extract (as output) a
set of 22 numerical parameters measured in the entire
image, including white areas representing calcite cement.
A multi-layer perceptron (MLP) neural network inputs
these numerical parameters and produces, as output, the
estimated depositional texture. We utilized 654 images of
thin sections to evaluate this technique to train the neural
network. We used 348 pictures taken from the same data
set and 250 from the Burizana section (Kruja zone, Albania)
to test the technique. The proposed method has shown 90.5
and 91.3% accuracy in identifying the automatically deposi-
tional texture using digitized images on the 348 and 250 test
sets. Based on the good results obtained, this technique can
be extending not only in identifying carbonate rocks texture
but in every type of rock, getting fast and correct results.
Python was used as a computer programming language for
image processing and displaying images.
Keywords: depositional texture, carbonates, image pro-
cessing, neural network, Python
1 Introduction
Identiﬁcation or classiﬁcation of the rock types is an
important part of geological research. This study focuses
on the classiﬁcation of carbonate rock as one of the major
types of sedimentary rocks. The texture of rock plays a
signiﬁcant part in sedimentary rocks. It represents the
size, shape, arrangement, sorting of the grains and the
grain–grain, grain–matrix, or grain–cement relation for
sedimentary rocks. The petrophysical properties of a
rock, its porosity, and permeability depend essentially
on texture [1,2]. The texture is the ﬁrst step to identifying
the lithofacies of the sedimentary rocks and recognizing
their original depositional environment. It can be deter-
mined visually in the ﬁeld or under the microscope [3,4].
Petrographic analysis is labor-intensive and requires
substantial prior knowledge of diﬀerent geological dis-
ciplines. These limitations are compounded by the poten-
tial for bias and subjectivity in the human interpretation
and classiﬁcation of carbonate rocks. Such limiting repro-
ducibility among researchers has been described recently
by Lokier and Al-Junaibi [3].
The Dunham classiﬁcation combined with Embry
and Klovan classiﬁcations is the most used in sedimen-
tology and sedimentary petrology for carbonate rocks
[4,5]. The original Dunham classiﬁcation system was
developed to provide convenient depositional-texture-
based class names that focus attention on the textural
properties that are most signiﬁcant for interpreting the
depositional environment of the rocks. The three criteria
used to deﬁne the classes within the Dunham classiﬁca-
tion are the supporting fabric of the original sediment,
the presence or absence of mud (the fraction less than
20 µm in size), and evidence that the sediments were
organically bound at the time of deposition. Mud-sup-
ported carbonate rocks containing less than 10% grains
(based on point counting where intraparticle voids are
Oltion Fociro, Redi Muçi, Klodian Skrame, Mario Mezini:
Department of Applied Geology Environment and Geoinformatics,
Faculty of Geology and Mining, Polytechnic University of Tirana,
Tirana, Albania

* Corresponding author: Ana Fociro, Department of Earth Sciences,
Faculty of Geology and Mining, Polytechnic University of Tirana,
Tirana, Albania, e-mail: ana.fociro@fgjm.edu.al
Jeton Pekmezi: Department of Mineral Resources, Faculty of
Geology and Mining, Polytechnic University of Tirana, Tirana,
Albania
Open Geosciences 2023; 15: 20220453
Open Access. © 2023 the author(s), published by De Gruyter.
This work is licensed under the Creative Commons Attribution 4.0 International
License.

counted as grains) are termed mudstone. The carbonate
lithology is mud-supported, but the number of grains
supported by the matrix exceeds 10%. The texture is
named a wackestone. Moving to grain-supported fabrics,
a grain-supported limestone containing 1% or more mud-
grade fraction is a packstone, whilst a grain-supported
carbonate rock with <1% mud is a grainstone. Where
there is any evidence that carbonate sediments were
bound at the time of deposition, they are labeled as
boundstone. The last group is not part of our research.
The Dunham classiﬁcation provides a clue to the envir-
onmental energy during deposition. Mudstone generally
indicates calm water and apparent inhibition of grain-
producing organisms (low-energy depositional setting).
At the same time, grainstone is typically deposited in
moderate- to high-energy environments, but its hydraulic
signiﬁcance can vary.
Texture in the Logarithmic Image Processing is a set
of repetitive sub-patterns that follow well-deﬁned place-
ment rules. These sub-patterns themselves are made up
of more fundamental units, called primitives. Such char-
acterization of textures is generally applicable mainly
to deterministic types of textures, such as line arrays,
checkerboards, and hexagonal tiling. A surface is tex-
tured if there are enough texels (texture elements); other-
wise, it is a set of objects. Textures can vary based on
their properties like periodicity, randomness, direction-
ality, and orientation. In this article, by texture, we refer
to the space organization of the main constituents of
sedimentary rock like framework grains, matrix (deposi-
tional components), and cement (post-depositional pre-
cipitate in the pore space).
The implementation of neural networks has become
increasingly prevalent within geosciences. In recent years,
neural networks have often been used within the geos-
ciences to most accurately identify the desired output
given a set of inputs, with the interpretation of what the
network learns used as a secondary metric to ensure the
network is making the right decision for the right reason
[6]. Recently, researchers have done studies on the classi-
ﬁcation of plutonic rock types using thin-section images
with deep transfer learning, with an average accuracy of
97.52% and a maximum of 98.19% [7]. Su et al. realized
rock classiﬁcation in petrographic thin-section images
based on concatenated convolutional neural networks.
The proposed method provided an overall accuracy of
89.97% [8]. An image processing and artiﬁcial neural net-
work-based method proposed by Marmo et al. for textural
identiﬁcation of carbonate rocks. They classiﬁed the tex-
tures of carbonate rocks with an accuracy of 93.5% [9].
Singh et al. studied textural identiﬁcation of basaltic rock
mass using image processing and neural network. They
reached 92.22% identiﬁcation accuracy [10]. Deep convolu-
tional neural networks were used by Xiaokang et al. for the
automatic identiﬁcation of fossils and abiotic grains in car-
bonate microfacies analysis. They obtained up to 95% of the
top one and 99% of the top three test accuracies in the
Inception ResNet v2 architecture [11]. Research on intelli-
gent identiﬁcation of rock types based on the faster R-CNN
method was carried out by Xiaobo et al. The experimental
veriﬁcation shows that the system is correct for single-type
rock image recognition and the accuracy is more than 96%
[12]. In the study conducted by Koeshidayatullah et al., the
applicability and performance of DCNN-based object detec-
tion and image classiﬁcation approaches were evaluated in
terms of carbonate composition analysis [13]. Cheng and
Guo identiﬁed the rock granularity using CNN. They classi-
ﬁed rocks with 98.5% accuracy [14]. Another study was
conducted by Zhang et al. using transfer learning, extracting
features from four mineral images (K-feldspar, perthite, pla-
gioclase, and quartz) with Inception-V3 architecture, using
machine learning algorithms to identify mineral images [15].
Joseph et al. made a classiﬁcation of intrusive igneous rock
thin-section images using edge detection and color analysis
[16]. Tian et al. classiﬁed ﬁne-grained rocks into four sub-
groups, and they obtained 97% classiﬁcation accuracy [17].
Patel and Chatterjee studied a computer-vision-based rock-
type classiﬁcation using probabilistic neural networks, clas-
sifying only seven limestone rock types using nine color
histogram features [18].
Młynarczuk et al. made a study for classifying nine
diﬀerent types of rock. They applied four pattern recogni-
tion techniques: the nearest neighbor, KNN, nearest mode,
and optimal spherical neighborhood algorithms [19]. Transfer
learning was applied for microfossil classiﬁcation, core
description, petrographic analysis, and hand specimen
identiﬁcation by Lima et al., and for the classiﬁcation of
cored carbonate rock images by Lima et al. [20–22]. To
accelerate the time-consuming petrographic analysis and
automate the microfacies classiﬁcation, Lima et al. explored
the use of deep CNN as a tool [23]. Chatterjee proposed a
vision-based rock-type classiﬁcation model using a support
vector machine algorithm [24]. Baykan and Yılmaz made a
study on identiﬁcation of minerals. Testing the network
with previously unseen mineral samples yielded successful
results between 80 and 90% [25]. Baraboshkin et al. used
several well-known transfer learning architectures (AlexNet,
VGG, GoogleNet, ResNet) and made a comparison of their
performance for a description of rocks [26].
In Albania, this is the ﬁrst time where neural networks
are applied in geosciences. Taking in count the previous
references, we applied the methodology to automatically
2

Oltion Fociro et al.

identify textures of shallow-water marine carbonate rocks
in thin sections by image processing and neural networks
using Python as a programming language.
2 Methods
The methodology proposed in this article permits auto-
matically to identify carbonate textures (diﬀerent age and
depositional settings) from thin sections, using image
processing and neural networks. The primary problem
related to carbonate texture is determining the thin sec-
tion of carbonate grains (allochemical particles) and ﬁne-
grained carbonate mud called micrite or coarser-grained
calcite crystals formed during diagenesis sparite (sparry
calcite cement). Carbonate grains can be of skeletal (whole
or fragments organism-derived) or non-skeletal (mostly bio-
chemical precipitates) origin. The main problem is that the
unit of information in digital imaging is the pixel, and each
pixel has properties of position (x, y) and gray value. In
a grayscale image, each pixel has only a single value repre-
senting the light value, with zero being black and 255 being
white. The knowledge of the position and value of a
particular pixel does not generally convey any geological
information to recognize the texture. An alternative set of
features is needed to prevent any possible problem. Image
processing techniques permit an image to be processed
and extract a set of numerical features (information).
They express the selected object’s coded characteristics
and diﬀerentiate one class of objects from another. The
neural networks can identify a thin-section texture after
training on a speciﬁc data set using all extracted features
or only a part of them. The neural network consists of
many neurons where each neuron takes an input, pro-
cesses it, and gives an output. In this case, each result of
the neural network is the probability to classify an input
section belonging to a speciﬁc Dunham depositional tex-
ture class. The input section assigns the depositional tex-
ture class associated with the highest value to the output.
The methodology includes the following steps that apply
to every image obtained from the thin sections:
a. image acquisition,
b. image preprocessing,
c. image segmentation,
d. feature extraction,
e. neural network, and
f. image classiﬁcation.
This methodology implements Python programming
language code deployed in Google Colaboratory notebook
(Colab). Colab is a Python development environment that
uses Google Cloud to run in the browser. The classiﬁcation
of a digitized image can be completed in a few seconds
with the software, using a desktop computer with Windows
11 operating system.
2.1 Image acquisition
Image acquisition is the ﬁrst step in an image processing
system. The general aim of any image acquisition was to
transform an optical image into an array of numerical
data which can manipulate on a computer. Suitable
digital cameras achieved image acquisition. A digital
image is a two-dimensional array of pixels, and each
pixel characterizes by its (x, y) coordinates and its value.
Digital images are characterized by matrix size, pixel
depth, and resolution, containing a gray tone compared
with real images.
The matrix size is determined from the number of
columns (m) and the number of rows (n) of the image
matrix (m × n). The acquired images are in jpg images
format with 8-bit, 256 linear gray tones, and the size of a
matrix selected by us is 680 × 700 pixels, acquired by
digital cameras with diﬀerent dots per inch. The utilized
magniﬁcation was about ×4–10, which is acceptable for
acquiring smaller and larger grains. Since the color varia-
bility of the studied thin section isn’t distinctive, all
images are converted to grayscale for easy calculations
and to get a homogeneous database. The proposed metho-
dology counts only the shape of white and gray areas, con-
sidered cement, matrix (micrite), and grains, respectively.
2.2 Image preprocessing
Image preprocessing is done to improve the image’s
quality and upgrade the image highlights for further
handling. In the gained images, the following image pre-
processing techniques in Python are as follows:
1. grayscale conversion,
2. normalization,
3. data augmentation, and
4. image standardization.
To use this preprocessing technique, we have created
a Google Colab account and Google Drive data onto
Colab. The next step was importing the data set to
Colab. We loaded an image ﬁle from the data set and
randomly printed it (Figure 1).
Carbonate texture identiﬁcation with MLP

3

2.2.1 Grayscale conversion
Grayscale is converting images from colored to black and
white. Since most pictures do not need color to be recog-
nized, we use grayscale, which reduces the number of pixels
in an image, thus, reducing the computations required in
machine learning algorithms [27]. From executing the code,
the image was converted as below (Figure 2).
2.2.2 Normalization
This process consists of projecting image data pixels
(intensity) to a predeﬁned range (usually (0, 1) or (−1, 1)).
It is commonly used on diﬀerent data formats, and we want
to normalize all of them to apply the same algorithms to
them. Its beneﬁts include fairness across all images and a
standard learning rate (Figure 3).
2.2.3 Image standardization
To have standard images, we used image standardiza-
tion as a method that scales and preprocesses images to
have similar heights and widths. It re-scales data to
have a standard deviation of 1 (unit variance) and a
mean of 0.
2.3 Image segmentation
Image segmentation helps to get the region of interest
(ROI) from the image. This is the process of dividing an
image into separate areas. The part where the image is
divided is called an image object. This is based on image
properties such as similarity and discontinuity. The pur-
pose of image segmentation is to simplify the image for
better analysis.
This is the process of assigning a label to each pixel
in the image. There are several segmentation algorithms like-
Otsu’s segmentation, edge-based segmentation algorithms,
region-based segmentation algorithms, clustering-based seg-
mentation algorithms etc. We ﬁnd it most appropriate to
use Otsu’s Image segmentation (threshold-based segmen-
tation) since some of them can take more time during
training if the data set is huge and take huge computation
time (Figure 4).
Figure 1: Flowchart of the proposed methodology.
4

Oltion Fociro et al.

2.4 Feature extraction
Features are the primary attributes that help us identify a
particular image and are the properties that make it
unique. While working on the image data set, you need
to extract various image features. This helps to separate
images based on speciﬁc features or aspects. Image fea-
tures cannot be deﬁned exactly, but shape, size, and
orientation make up image features. This step represents
a sequence of operations on the image matrix to measure
the features of the objects. These values are given as
input layers (i.e., pixels) to the neural network. Marmo
et al. and Gonzales have performed various test to select
diﬀerent features in carbonates and related images [9, 28].
According to the authors, the ﬁnal set of determined fea-
tures is listed below:
1. percentage of the most frequent gray tones;
2. number of edge pixels in the gray areas;
3. number of edge pixels between the gray and the white
areas;
4. number of white areas;
5. number of pixels of white areas;
6. number of white areas composed of more than 150
pixels;
7. number of pixels within the white areas consisting of
more than 150 pixels.
Features (1)–(7) were extracted from the entire image
while the remaining 16 features were extracted from each
of the four selected largest white areas (4 features (8)–(11)
per area):
1. number of pixels of the white area;
2. length in pixel of the white area;
3. number of small convex deﬁciencies;
4. number of large convex deﬁciencies.
They represent 23 features, and each of them is
described further in this article.
a. Percentage of the most frequent gray tones
In an image processing context, an image’s histo-
gram refers typically to a histogram of the pixel inten-
sity values. This histogram shows the number of pixels
Figure 2: (a) Printed image of mudstone from the data set; (b) conversion of the original image into grayscale. In both ﬁgures, units of X and
Y axes represent pixels.
Figure 3: Output image after normalizing our data, units of X and Y
axes represent pixels.
Carbonate texture identiﬁcation with MLP

5

in an image at each diﬀerent intensity value found in
that image. If we use an 8-bit gray scale image, there
are 256 diﬀerent possible intensities, so the histogram
will graphically display 256 numbers showing the dis-
tribution of pixels amongst those grayscale values.
The exact output from the implementation operation
is an image of the required histogram. It is composed
of equally spaced bins, each representing a range of
gray tones. It is necessary to sum the number of pixels
of the bins chosen around the bin that corresponds to
the most frequent gray tone. The value of this feature
is the ratio between this sum and the sum of pixels in
all bins. Since the image of a grainstone consists of
many shades of gray, the histogram is distributed
almost across all possible grayscale values (Figure 5).
On the other side, an image of a mudstone shows a
narrower and higher histogram because a very ﬁne-
grained mudstone is represented by many pixels dis-
tributed on a few shades of grayscale values (Figure 6).
b. Number of edge pixels in the gray areas
In Image Processing, an edge is deﬁned as contin-
uous pixel positions where an abrupt change of inten-
sity (gray or color) values occurs. Edges represent
boundaries between objects and backgrounds. We
used the Canny Edge detector algorithm to identify edges
in the whole image. The detector looks for places where
the intensity changes rapidly. The resulting image is a
black/white image in which a black pixel corresponds to
Figure 4: Input image segmentation according to Otsu’s segmentation: (a) input image; (b) grayscale converted image; (c) threshold output
image. Units of X and Y axes represent pixels.
Figure 5: (a) Foraminiferal grainstone; (b) image histogram of a grainstone texture shown in (a). Units of X and Y axes represent pixels.
6

Oltion Fociro et al.

an edge pixel in the original image. We choose this edge
detector because it is more likely to detect weak edges.
Canny recommended an upper and lower ratio of 2:1.
The low and high thresholds are 200 and 100, respec-
tively. The value of the feature is the number of black
pixels. The resulting output image of mudstone is a few
black pixels because it is composed of very ﬁne-grained
particles (<0.05 mm) as the micritic matrix (Figure 7). At
the same time, a grainstone has many black pixels
because it represents a grain-supported texture. It is
composed of numerous grains of skeletal and non-ske-
letal origin that generate many edges (Figure 8).
c. Number of edge pixels between the gray and the white
areas
A pixel is part of the perimeter if it is nonzero, and
it is connected to at least one zero-valued pixel. The
pixel connectivity used is an 8-connected neighbor-
hood. In other words, a pixel is considered as a peri-
meter pixel if it satisﬁes both criteria, a white pixel in
the starting image that shows one or more gray pixels
in its 8 × 8 neighborhood. The value of the feature is
the number of perimeter pixels. A grainstone has many
perimeter pixels due to the high content of grains due
to many white areas, while a mudstone shows few
Figure 6: (a) Canny edge detection output in a mudstone image; (b) Canny edge detection output in a grainstone image. Units of X and Y
axes represent pixels.
Figure 7: (a) Mudstone composed of a few skeletal grains (ostracods) in a micritic matrix; (b) image histogram of a mudstone texture shown
in (a).
Carbonate texture identiﬁcation with MLP

7

white areas and is characterized by few perimeter
pixels (Figure 8).
d. Number of white areas
Grayscale images are converted to black and white,
and gray pixels in the original image are converted to
black. The algorithm ﬁnds and counts white areas. The
feature value is the number of white areas, and grain-
stone has far more than mudstone.
e. Number of pixels of white areas
The value of this feature is the number of pixels
that make up the white area used to extract the pre-
vious feature.
f. Number of white areas composed of more than 150
pixels
The previous black-and-white image and the image
obtained from the inscription are taken into account.
The number of pixels belonging to each white area is
estimated, and the feature value is the number of white
areas exceeding 150 pixels (Figure 8). This threshold
was experimentally evaluated on thin-section without
signiﬁcant post-depositional features (dolomite crys-
tals, fractures, and veins ﬁlled with sparry calcite).
g. Number of pixels within the white areas composed of
more than 150 pixels
The value of this feature is the number of pixels in
the white area that has already been used to calculate
the previous feature. Mudstone and wackestone do not
show large white areas.
h. Number of pixels in the white areas
The results of the previous labeling algorithm are
considered here. The white areas are ordered according
to their number of pixels. The four most signiﬁcant white
areas are chosen by estimating the number of pixels for
each. In this way, four features are obtained. Diﬀerent
types of grainstones (foraminiferal grainstones, peloidal
grainstones, etc.) have been used to count the number of
white areas to determine the above threshold.
i. Length in pixel of the white area
The feature value for each of the previous four
most signiﬁcant white areas is the number of columns
used to represent the area in the image matrix.
j. Number of small and large convex deﬁciencies
The convex hull and the corresponding convex
deﬁciencies are computed for each of the previous
four white areas [29]. A labeling algorithm locates
and counts the convex deﬁciencies. The value of the
features (j) and (k) corresponds to convex deﬁciencies
composed of less than 100 pixels and convex deﬁcien-
cies consisting of more than 1,000 pixels, respectively.
The values 100 and 1,000 were determined by analysis of
a wide variety of white areas in images of grainstone and
packstone. Due to intergranular calcite cement, a white
area has a large convex hull, a low number of minor
convex deﬁciencies, and a high number of large convex
deﬁciencies (Figure 9). On the contrary, a white area due
to intragranular calcite cement has a small convex hull, a
high number of small convex deﬁciencies, and a low
number of large convex deﬁciencies (Figure 9).
3 Neural networks
Artiﬁcial neural networks reﬂect the behavior of the
human brain, allowing computer programs to recognize
patterns and solve common problems in diﬀerent ﬁelds.
They are often just called neural networks. A perceptron
is a single neuron (node) model arranged into larger net-
works of neurons. A row of neurons is called a layer, and
one network can have multiple layers. The architecture of
the neurons in the network is often called the network
topology. The power of neural networks comes from their
ability to learn the representation in your training data
and how to best relate it to the output variable you want
Figure 8: (a) and (b) Perimeter pixels in a grainstone.
8

Oltion Fociro et al.

to predict [30]. In this sense, neural networks know map-
ping and can learn any mapping function mathemati-
cally. Image classiﬁcation is the process of identifying
and categorizing the class of an image characterized by
a set of features. According to Bishop [31], to design the
best neural network that obtains good mapping and
training, ﬁrst, we need to determine the following:
a. neural network model and architecture;
b. activation functions for each neuron;
c. loss function;
d. training model.
3.1 Neural network model and architecture
Our study restricts the number of output classes to four
(mudstone, wackestone, packstone, and grainstone). Due
to this, we found the most appropriate to use the multi-
layer perceptron neural network (DLP). A multi-layer per-
ceptron (MLP) represents a feedforward artiﬁcial neural
network. It is composed of an input layer to receive the
signal. This output layer decides or prediction about the
input. Between those two, an optional number of hidden
layers are the true computational engine of the MLP. In
our case, we have used just one hidden layer. Each
neuron relates to the neurons of the following layer
(Figure 10). According to PCA (principal component ana-
lysis), which is used to reduce the number of parameters
in the neural network, the input layer has 13 neurons; the
hidden layer has nine neurons, while the output layer has
four neurons. Each one of them corresponds to a Dunham
textural class. Other parameter conﬁgurations show less
than 91.0% of correct classiﬁcation.
3.2 Activation functions for each neuron
The activation function of a neural network deﬁnes how
the weighted sum of inputs is transformed into outputs
from one or more nodes in a layer of the network. The
activation function used in the hidden layer is usually
chosen based on the nature of the neural network archi-
tecture. We used the Rectiﬁed Linear Unit (ReLU) activa-
tion function, the most common function for hidden
layers for neural network models with MLP architectures
[32]. The activation function for the output layer is based
on the type of prediction problem that we are solving.
Since our problem is a classiﬁcation problem and more
than two mutually exclusive classes (multiclass classiﬁ-
cation), our output layer will have one node per class,
and a softmax activation should be used [32].
3.3 Loss function
Cross-entropy is the default loss function that is used for
multi-class classiﬁcation problems. Cross-entropy will
calculate a score that summarizes the average diﬀerence
between the actual and predicted probability distribu-
tions for all classes in the problem.
3.4 Training and validation of the data set
Once conﬁgured, the neural network model needs to be
trained on our data set consisting of input features and
the desired class as output. The back-propagation
Figure 9: (a) Determination of convex deﬁciencies; (b) large convex deﬁciencies.
Carbonate texture identiﬁcation with MLP

9

method used the training procedure: we give the input
neurons the primary pattern, and therefore, the network
provides its output. If this is not equal to the desired
output pattern, then the procedure computes the diﬀer-
ence (mean square error) between these two values and
changes the weights to minimize them. These operations
are repeated for each. The data set was divided into
training, validation, and test data set. We assigned small
random values except 0 to weights utilizing 500 gray-
scale images of thin sections from the data set to train
the neural network, 125 for each Dunham class. The
image data sets represent micro photos from previous
studies carried out by diﬀerent authors in the shallow-
water carbonates of the Upper Cretaceous, Kruja zone
(Albania) [33,34]. Thin sections aﬀected by dolomitiza-
tion and recrystallization were not taken into count by us.
Figure 10: The architecture of the proposed MLP where each layer consists of 13, 9, and 4 nodes.
Figure 11: Training and validation error every 20 epochs.
10

Oltion Fociro et al.

Our model, after each epoch, learns the data and updates
the weights properly. After some iterations, the model starts
memorizing the data, and even though the training error
decreases, the validation error increases, causing the over-
ﬁtting of the model. We used early stopping as a form of
regularization to avoid overﬁtting (Figure 11). The validation
data set is represented by 154 images (38 images for each
texture class), and it was tested every 20 epochs. During the
training and validation tests, the training error in continuity
decreases as training proceeds, while the validation set
error only decreases up to a certain point (two points). It
starts to increase (Figure 11). As shown in Figure 11, after
some iteration, the training is stopped early to prevent
model overﬁtting at the minimum of the validation error
that corresponds to 0.63. The related training error is 0.34.
3.5 Test of the data set
The test set is a separate data set used to test the trained
model. We utilized 348 images (87 for each class) taken
from the same data set to test the technique. The MLP has
classiﬁed exactly 315 (90.5%) images, and 33 (9.5%)
images were incorrectly classiﬁed. Regarding mudstone
class type, two images were classiﬁed as wackestone
and packstone due to the secondary porosity of rounded
shape ﬁlled with sparry calcite (Table 1). As for the
wackestone class type, three images were classiﬁed as
mudstone due to the very ﬁne-grained bioclasts that
cannot be distinguished at the used magniﬁcation. One
of the wackestones was classiﬁed as packstone because
of irregularly distributed empty fenestrae (Table 1). If
we look at the packstone class type, we can notice
that one of the images was classiﬁed as wackestone.
Very ﬁne peloidal grains are not detectable at the used
magniﬁcation.
On the other hand, six packstones images were clas-
siﬁed as grainstones due to the coarse bioclast (mainly
rudist fragments) occupying the entire ﬁeld of view (Table 1).
The last class type corresponds to grainstones, and it is the
most precise classiﬁcation since only three of the images
were incorrectly classiﬁed as packstones. This is because
of the presence of intraclasts that are mainly reworked pack-
stones. To summarize the visualization of the algorithm’s
performance, we have used a confusion matrix. It is a table
where the columns represent the true classes, and the rows
represent the four predicted classes (Table 1). From this
table, every error that occurs with the adjacent with the
correct one, except mudstone class where only one of the
images is misclassiﬁed as packstone, but we can see that a
grainstone is never classiﬁed as mudstone and vice-versa
(Table 1 and Figure 12).
To fulﬁll Table 1, we used a classiﬁcation scheme
where the highest output suggests the choice of the class.
The problem is when the MLP’s four output values are
very similar, and the highest value diﬀers from 1. In such
cases, the MLP classiﬁcation of the image has a high
probability of being uncertain. Only with the specialist’s
help is it possible to classify the aforementioned images
precisely. Those were chosen using a simple threshold
rule. The specialist should classify the relevant image if
the highest output value is less than or equal to the rejec-
tion threshold. Otherwise, the proposed MLP classiﬁca-
tion can be accepted (Figure 13).
The optimal rejection threshold value is signiﬁcant. If
the rejection threshold value increases, more images are
rejected, making fewer errors.
Each of the highest output values is compared to a
rejection value in the range [0.0, 1.0] using the MLP
Table 1: Confusion matrix of test set from Kruja zone
True class
M
W
P
G
Predicted class
M
84
3
0
0
W
2
83
1
0
P
1
1
80
3
G
0
0
6
84
M = mudstone, W = wackestone, P = packstone, G = grainstone.
Figure 12: Misclassiﬁed image in test set, green points show correct
class and red points corresponding neural network output.
Carbonate texture identiﬁcation with MLP

11

output values for the test set. According to Figure 13, the
number 0.55 appears to be the rejection threshold for
classifying an appropriate percentage of images as cor-
rect, wrong, or uncertain. The threshold distinguishes
4% of the images as uncertain (14 images), 13.0% of the
images as wrong (45 images), and 83% as correctly
classiﬁed images (289 images). Calculating the diﬀer-
ence between the ﬁrst and second highest values is
Figure 13: The classiﬁcation percentages for each value of rejection threshold in range [0.0, 1.0].
Figure 14: Map facies from middle-upper Lias to upper Cretaceous in the peri Adriatic zone (after Zapaterra, 1994).
12

Oltion Fociro et al.

another criterion used to distinguish between uncer-
tain classes. By additional testing, the MLP is unsure
between the two classes corresponding to these two
values if the diﬀerence is smaller than 0.4. Only 13
images need to be classiﬁed by direct observation
under the microscope.
Figure 15: Lithological column of the Burizana section (Qorri, [13]).
Carbonate texture identiﬁcation with MLP

13

3.6 Geological setting
In the Triassic period, a general break-up of Adria, which
was followed by the Early Jurassic disintegration of the
Southern Tethyan Mega platform and the formation of the
Adriatic Basin, resulted in the creation of the Apulian
Carbonate Platform, Apennine Carbonate Platform, and
Central Mediterranean Carbonate Platform [35]. During
the Mesozoic and Paleogene, the passive margin of the
Apulian Plate was bordered by broad carbonate plat-
forms, known in Albania as the Kruja Zone or Kruja Plat-
form. The Kruja Zone represents the most western coastal
zone in the Outer Albanides. It lies in the center of Albania,
and it extends northward into the Adriatic Dinaric plat-
form (Montenegro, Croatia) and southward into the Gav-
rovo platform (Northern Greece) [36]. In Albania, only
upper Mesozoic Paleogene deposits are exposed [37–40].
Sedimentologic and petrographic studies have been
carried out on an Upper Cretaceous shallow-water car-
bonate succession near Burizana. This section lies north-
west of the anticline structure, part of the Kruja Zone
(Makareshi carbonate anticline structure) that represents
the Apulian eastern passive margin [41] (Figure 14).
The stratigraphic succession of Kruja is mainly com-
posed of thick deposits of Cretaceous carbonates (about
1.5 km thick), conﬁned in a subtidal to the supratidal
environment.
This succession is interrupted by a stratigraphic gap
that begins during the late Maastrichtian and continues
(depending on the zone) until the Early Eocene [42].
During this gap, bauxite formation was formed [43]. After
this gap, the series continues with bioclastic limestones
(Middle Eocene). Above the limestone formation, the
“passing marl” horizon of Late Eocene marks the transi-
tion to the Oligocene ﬂysch, 1500 m thick. The Upper
Cretaceous carbonate deposits of the Burizana section
display eight typical microfacies, ranging from subtidal
to supratidal environments [44] (Figures 15 and 16).
3.7 Burizana section as a key study
The test set of the Burizana section (Makareshi structure,
Albania) consists of a total of 250 thin sections, which
Figure 16: Images from diﬀerent microfacies of the Burizana section: (a) mudstone with sparse small benthic foraminifera (mainly miliolids)
and problematic algae Thaumatoporella; (b) wackestone with horizontally oriented ostracods; (c) packstone with large bivalve sections
(rudists); (d) grainstone with benthic foraminifera (Moncharmontia sp., Quinqueloculina sp.).
Table 2: Confusion matrix of test set from Burizana section
True class
M
W
P
G
Predicted class
M
73
2
0
0
W
2
66
0
0
P
0
1
42
8
G
0
1
4
51
M = mudstone, W = wackestone, P = packstone, G = grainstone.
14

Oltion Fociro et al.

include 75 mudstones (30%), 70 wackestones (28%), 46
packstones (18.4%), and 59 grainstones (23.6%). The
above four Dunham textural classes contain transition
textures like mudstone-wackestone, wackestone-pack-
stone, and packstone-grainstone. There are approximately
25 thin sections that were excluded from the test set
because the original texture was aﬀected by meteoric diag-
enesis. Since the thin sections of the Burizana section were
previously studied under the microscope, it was possible
to correlate manual and automatic classiﬁcation.
The MLP has correctly determined the texture with
91.3% accuracy, which means that 229 of the entire
images are correctly classiﬁed. The proper confusion
matrix is displayed in Table 2.
Sedimentologic and petrographic characteristics can
complicate the primary depositional texture, which is not
captured by our technique. Neomorphism and partial
dolomitization have been identiﬁed in the micritic matrix
of wackestones. These diagenetic processes assign higher
values to the packstone texture, confusing classiﬁcation.
For example, a small number of well-deﬁned dolomite
crystals in mudstone caused by diagenetic dolomitization
were identiﬁed as grains during feature extraction, increasing
the percentage of grainy material artiﬁcially.
On the other side, even the grain-supported texture
shows some complications. Micritization, ﬁne, and den-
sely packed grains in some packstones are other complex
features that our neural network cannot determine. As a
result, the ﬁne-grained packstones appear to have mud-
supported texture and can be considered wackestone. In
addition, since the studied section consists of shallow-
water carbonates, the presence of intraclasts and peloids
is very common, and it can be considered mud. As a
result, the contrast between the grains (peloids and
micritized grains) and the matrix is not always visible.
Increasing the contrast may not personalize the diﬀerent
grayscale values during feature extraction. The grains
should have a well-deﬁned internal structure and clear
boundaries so that the grayscale values contrast with the
values in the matrix. These conditions are necessary for
all packstones to be accurately determined by the neural
network.
If we compare the classiﬁcation accuracy between
two textures, the mud-supported texture has been more
accurately determined (94.3% accuracy) than the grain-
supported texture (85.1 precision), and only 21 images
were error classiﬁed. It is important to remember that
the accuracy of determining texture depends on the dif-
ference between the two highest values. If the diﬀerence
is less than 0.2, generally, the technique determines a
mixture of two textures.
4 Conclusions
This study has successfully provided a technique based
on image processing and a MLP neural network that
enables us to automatically identify the Dunham texture
and categorize carbonate rocks using grayscale images
from thin sections. On two test sets of 348 and 250 photos,
the accuracy of thin-section images was 90.5 and 91.3%,
respectively. This percentage is suﬃcient for this preli-
minary application of the proposed methodology. In the
future, more eﬀective training, and test sets on carbonate
rocks of diﬀerent depositional settings and ages may
bring further improvements. Image processing techni-
ques should be carefully selected and adapted to each
type of thin section’s optical properties. In addition, there
is currently no standard system for imaging processing of
thin sections. Still, we can avoid some problems by using
high resolution and magniﬁcation during image acquisi-
tion. Our results are promising and show that the proper
selection of features and speciﬁc neural networks can
perform excellent automatic texture identiﬁcation/classi-
ﬁcation in a fast and accurate way. In addition, it is pos-
sible to increase the number of texture classes in the
future. We can consider transitional textures classes
such as packstone–wackestone or wackestone–mud-
stone, and thin sections showing sin and post-deposi-
tional changes. This way, the specialists can apply the
methodology to all carbonate rocks. To summarize, the
current results show another practical application of
neural networks in the earth sciences, to understand
variation in carbonate factories in diﬀerent geologic
timescales creating the possibility to optimize the char-
acterization of carbonate reservoirs.
Acknowledgements: We would like to thank the reviewers
for taking the necessary time and eﬀort to review the
manuscript. We sincerely appreciate all your valuable
comments and suggestions, which helped us in improving
the quality of the manuscript.
Author contributions: O.F. and A.F. conceived of the pre-
sented idea. O.F. developed the theory and performed the
computations together with M.M. A.F contributed to the
thin section description and in the selection of the most
representative micro photos. K. S., R.M., and J.P. veriﬁed
the analytical methods. All authors discussed the results
and contributed to the ﬁnal manuscript. O.F. and A.F.
took the lead in writing the manuscript.
Conﬂict of interest: The authors state no conﬂict of
interest.
Carbonate texture identiﬁcation with MLP

15

References
[1]
Radwan AE, Trippetta F, Kassem AA, Kania M. Multi-scale
characterization of unconventional tight carbonate reservoir:
Insights from October oil ﬁled, Gulf of Suez rift basin, Egypt.
J Pet Sci Eng. 2021 February;197:107968.
[2]
Gamil MS, Abdullah AAEA, Ahmed ER, Talha Q, Nevin A. The
inﬂuence of carbonate textures and rock composition on dur-
ability cycles and geomechanical aspects of carbonate rocks.
Acta Geotechnica. 2022 April;18:105.
[3]
Lokier SW, Al Junaibi M. The petrographic description of car-
bonate facies: are we all speaking the same language?
Sedimentology. 2016;63(7):1843–85.
[4]
Embry AFI, Klovan JE. A Late Devonian reef tract on north-
eastern Banks Island N.W.T. Bull Can Pet Geol.
1971;19:730–81.
[5]
Dunham RJ. Classiﬁcation of Carbonate Rocks, in Ham WE, ed.
Classiﬁcation of Carbonate Rocks According to Depositional
Texture. Tulsa: AAPG; 1962. p. 108–121.
[6]
Toms BA, Barnes EA, UphoﬀIE. Physically Interpretable Neural
Networks for the Geosciences: Applications to Earth System
Variability. J Adv Modeling Earth Syst. 2020 June;12(9):1–20.
[7]
Özlem P, Ali P, Taner E. Classiﬁcation of plutonic rock types
using thin section images with deep transfer learning. Turkish
J Earth Sci. 2021;30(4):551–60.
[8]
Su C, Xu SJ, Zhu KY, Xiao-Can Z. Rock classiﬁcation in
petrographic thin section images based on concatenated
convolutional neural networks. Earth Sci Inform.
2020;13:1477–84.
[9]
Marmo R, Amodio S, Tagliaferri R, Ferreri V, Longo G. Textural
identiﬁcation of carbonate rocks by image processing and
neural network: Methodology proposal and examples. Comput
Geosci. 2005;31(5):649–59.
[10] Singh N, Singh TN, Tiwary A, Kripa M. Textural identiﬁcation of
basaltic rock mass using image processing and neural net-
work. Comput Geosci. 2010;14:301–10.
[11]
Xiaokang L, Haijun S. Automatic identiﬁcation of fossils and
abiotic grains during carbonate microfacies analysis using
deep convolutional neural networks. Sediment Geol.
2020;410:105790.
[12] Xiaobo L, Huaiyuan W, Hongdi J, Anlin S, Liancheng W.
Research on intelligent identiﬁcation of rock types based on
faster R-CNN methos. IEEE Access. 2020 January;8:21804–12.
[13] Koeshidayatullah A, Morsilli M, Lehrmann D, Al-Ramadan K,
Payne J. Fully automated carbonate petrography using deep
convolutional neural networks. Mar Pet Geol. 2020
December;122:104687.
[14] Cheng G, Guo W. Rock images classiﬁcation by using deep
convolution neural network. J Phys. 2017; Conference Series
887:1–6.
[15] Zhang Y, Li M, Han S, Ren Q, Shi J. Intelligent identiﬁcation for
rock-mineral microscopic images using ensemble machine
learning algorithms. Sensors. 2019;19(18):3914.
[16] Joseph S, Ujir H, Hipiny I. Unsupervised classiﬁcation of
intrusive igneous rock thin section images using edge detec-
tion and colour analysis. IEEE International Conference on
Signal and Image Processing Applications. Kuching, Malaysia;
2017. p. 530–535.
[17] Tian Y, Guo C, Lv L, Li F, Gao C. Multi-color space rock thin-
section image classiﬁcation with SVM. IEEE 8th Joint
International Information Technology and Artiﬁcial Intelligence
Conference. Chongqing, China: 2019. p. 571–74.
[18] Patel A, Chatterjee S. Computer vision-based limestone rock-
type classiﬁcation using probabilistic neural network. Geosci
Front. 2016;7(1):53–60.
[19] Młynarczuk M, Gorszczyk A, Slipek B. The application of pat-
tern recognition in the automatic classiﬁcation of microscopic
rock images. Comput Geosci. 2013;60:126–33.
[20] Lima R, Bonar A, Coronado D, Marfurt K, Nicholson C. Deep
convolutional neural networks as a geological image classiﬁ-
cation tool. Sediment Rec. 2019;17:4–9.
[21] Lima R, Marfurt K, Duarte D, Bonar A. Progress and challenges
in deep learning analysis of geoscience images. 81st EAGE
Conference and Exhibition; 2019. p. 1–5.
[22] Lima R, Suriamin F, Marfurt K, Pranter M. Convolutional neural
networks as aid in core lithofacies classiﬁcation.
Interpretation. 2019;7(3):27–40.
[23] Lima R, Duarte D, Nicholson C, Slatt R, Marfurt K. Petrographic
microfacies classiﬁcation with deep convolutional neural net-
works. Comput Geosci. 2020;142:104481.
[24] Chatterjee S. Vision-based rock-type classiﬁcation of lime-
stone using multi-class support vector machine. Appl Intell.
2013;39:14–27.
[25] Baykan N, Yılmaz N. Mineral identiﬁcation using color spaces
and artiﬁcial neural networks. Comput Geosci.
2010;36(1):91–7.
[26] Baraboshkin E, Ismailova L, Orlov D, Zhukovskaya E,
Kalmykov G, Khotylev O, et al. Deep convolutions for in-depth
automated rock typing. Comput Geosci. 2020;135:104390.
[27] Adhinga F. Section; 2021 [cited 2021 09 12]. https://www.
section.io/engineering-education/image-preprocessing-in-
python/.
[28] Gonzalez R, Woods R. Digital image processing. New Jersey:
Prentice Hall; 2004. p. 490–560, 617–621.
[29] Liu-Yu S, Thonnat M. Description of object shapes by apparent
boundary and convex hull. Pattern Recognit. 1997;26:107–95.
[30] Brownlee J. Machine Learning Mastery; 2016 [cited 2021 April
10]. https://machinelearningmastery.com/neural-networks-
crash-course/.
[31] Bishop MC. Neural networks for pattern recognition. Neural
networks for pattern recognition. Oxford: Clarendon Press;
1988. p. 255–6.
[32] Goodfellow I, Bengio Y, Courville A. Deep learning.
Massachusetts, London, England: MIT Press Cambridge; 2016.
p. 184, 195, 196.
[33] Qorri A. Analiza petrograﬁke dhe sekuenciale sedimentolog-
jike e depozitimeve karbonatike të Kretakut të Sipërm të
rajonit të Burizanës, zona tektonike e Krujës. PhD thesis.
Tirana: Polytechnic University, Department of Earth
Sciences; 2016.
[34] Schlagintweit F, Kołodziej B, Qorri A. Foraminiferan-calcimi-
crobial benthic communities from Upper Cretaceous shallow-
water carbonates of Albania (Kruja Zone). Cretac Res. 2015
September-December;56:432–46.
[35] Vlahovic I, Tisljar J, Velic I, Maticec D. Evolution of the adriatic
carbonate platform: Palaeogeography, main events and
depositional dynamics. Palaeogeography, Palaeoclimatol,
Palaeoecology. 2005 13 May;220(3–4):333–60.
[36] Meço S, Aliaj S. Geology of Albania. Gebrüder Borntraeger.
Berlin-Stuttgart. 2000;1:244–6.
16

Oltion Fociro et al.

[37] Robertson A, Shallo M. Mesozoic–Tertiary tectonic evolution of
Albania in its regional Eastern Mediterranean context.
Tectonophysics. 30 January 2000;316(3–4):198–254.
[38] Heba G, Prichonnet G, El Albani A. Meteoric diagenesis of
upper cretaceous and paleocene–eocene shallow-water car-
bonates in the Kruja Platform (Albania): geochemical evi-
dence. Geologica Carpath. 2009;60(3):165–79.
[39] Heba G, Prichonnet G. L’intervalle Crétacé terminal-Éocčne de
la marge passive d’Apulie en Albanie (Massifs de Kruje-Dajt et
de Makareshi, Zone de Kruja): Faciés, organismes et cycles
sédimentaires d’une plate-forme carbonatée. Bull Soc Géol Fr.
2006;5:249–66.
[40] Le GoﬀJ, Cerepi A, Swennen R, Loisy C, Caron M, Muska K,
et al. Contribution to the understanding of the Ionian Basin
sedimentary evolution along the eastern edge of Apulia during
the Late Cretaceous in Albania. Sediment Geol. 2015, 15
March;317:87–101.
[41] Zapaterra E. Source-Rock Distribution of the Periadriatic
Region. AAPG Bull. 1994;3(78):333–54.
[42] Gjata T, Skela V, Ylli L, Kici V, Nika E. Sur l’absence du
Paléocène, de l’Yprésien et partiellement du Lutétien ainsi que
de l’existence du Priabonien carbonaté dans la zone de Kruja.
Bul U SH T, Ser Shk Nat. 1968;2:39–46.
[43] Peza L. Mise ŕ jour d’un autre niveau stratigraphique dans le
zone de Kruja (la coupe continue de “Shkalla e Vajes”).
Përmbledhje Studimesh; 1973;1:51–63.
[44] Schlagintweit F, Kołodziej B, Qorri A. Microbial-foraminiferal
laminites from the Campanian of Albania. 17th Czech-Slovak-
Polish Palaeontological Conference. Krakow; 20–21 October
2016. p. 80.
Carbonate texture identiﬁcation with MLP

17

