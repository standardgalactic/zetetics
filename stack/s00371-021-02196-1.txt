The Visual Computer (2022) 38:3681–3702
https://doi.org/10.1007/s00371-021-02196-1
ORIGINAL ARTICLE
A robust edge detection algorithm based on feature-based image
registration (FBIR) using improved canny with fuzzy logic (ICWFL)
Anchal Kumawat1
· Sucheta Panda1
Accepted: 4 June 2021 / Published online: 14 July 2021
© The Author(s), under exclusive licence to Springer-Verlag GmbH Germany, part of Springer Nature 2021
Abstract
The problem of edge detection plays a crucial role in almost all research areas of image processing. If edges are detected
accurately, one can detect the location of objects and the parameters such as shape and area can be measured more precisely.
In order to overcome the above problem, a feature-based image registration (FBIR) method in combination with an improved
version of canny with fuzzy logic is proposed for accurate detection of edges. The major contributions of the present work are
summarized in three steps. In the ﬁrst step, a restoration-based enhancement algorithm is proposed to get a ﬁne image from a
distorted noisy image. In the second step, two versions of input images are registered using a modiﬁed FBIR approach. In the
third step, to overcome the drawback of canny edge detection algorithm, each step of the algorithm is modiﬁed. The output is
then fed to a “fuzzy inference system”. The “fuzzy rule-based technique”, when applied to the problem of “edge detection”, is
very “efﬁcient” because the thickness of the edges can be controlled by simply changing “rules and output parameters”. The
domain of the images under consideration is various well-known image databases such as Berkeley and USC-SIPI databases,
whereas the proposed method is also suitable for other types of both indoor and outdoor images. The robustness of the proposed
method is analysed, compared and evaluated with seven image assessment quality (IAQ) parameters. The performance of the
proposed method is compared with some of the state-of-the-art edge detection methods in terms of the seven IAQ parameters.
Keywords Image registration · Image restoration · Image enhancement · Edge detection · Fuzzy logic
1 Introduction
The problem of edge detection has been studied for decades,
but still this area of research is very challenging. Nowa-
days, this topic is gaining attention, with new techniques
continually being developed. Edges characterize the bound-
aries; therefore, it is a complex problem in image processing,
particularly in “automatic feature extraction”, “image seg-
mentation” and “registration and identiﬁcation” [1,2]. The
ultimate goal of edge detection is to determine the pixels in
the image that corresponds to the edges of the objects seen
in the image. If the “edge detection” step is successful, the
subsequent task of “interpreting” the information contents
B Anchal Kumawat
akumawat_phdca@vssut.ac.in
Sucheta Panda
suchetapanda_mca@vssut.ac.in
1
Department of Computer Applications, Veer Surendra Sai
University of Technology (VSSUT), Burla, Sambalpur,
Odisha 768018, India
of the “original image” can be simpliﬁed. Numerous appli-
cations of “edge detection” process are “medical imaging,
computer-aided surgery, locate objects in the satellite images,
face recognition, ﬁngerprint recognition, automatic trafﬁc
controlling system, study of anatomical structures, etc.”.
The process of edge detection can be utilized to simplify
the future analysis of images. Edge detection can reduce the
amount of data to be processed by preserving the useful struc-
tural information [3]. The motivation behind the proposed
work is as follows: if the “edge detection” step is “success-
ful”, the “subsequent task” of interpreting the “information
contents” in the original image may be “sustainably simpli-
ﬁed”. Secondly, fuzzy logic-based edge detection algorithms
will produce pixel’s boundaries, identifying edges of objects
“crystal clear” in comparison with other edge detection algo-
rithm using “crisp values”. Also in fuzzy rule-based edge
detection approach, the thickness of the edges can be con-
trolled by changing the rules without need for a threshold
value. Because in these types of edge detection it may omit
some “vital information” pixels which inﬂuences the quality
of“edgedetected”imageandalsofurtherapplicationthrough
123

3682
A. Kumawat, S. Panda
proper interpretation. Keeping the above facts in mind, there
are three major contributions of the present work. They are
given as follows:
1. Most often, the input images get degraded due to the
presence of “noise, blur or atmospheric turbulence”.
To overcome the above problem, a “restoration-based
enhancement algorithm” is proposed. For this purpose,
“Wiener deconvolution ﬁlter (WDF)” has been used to
restore the input noisy image, followed by enhance-
ment of restored image using “unsharp masking (USM)
method”.
2. The second contribution is to propose a feature-based
image registration (FBIR) method, taking the output of
restoration-based enhancement algorithm of step 1 as
input. This paper has been modiﬁed with all the four
steps of FBIR method according to Zitova et al. [4].
For the purpose of “feature detection and description”,
to overcome the demerits of “BRISK and FAST fea-
ture detectors”, a “hybrid feature detection algorithm”
has been proposed [5]. The proposed algorithm observes
“less time” to detect the “feature key points”, and at the
same time, it is also “rotation and scale invariant”. In
the second step, a “feature matching algorithm” is pro-
posed [6] using the above hybrid feature detector. The
“proposed hybrid algorithm” performs well in terms of
“elapsed time, CPU time and performance measuring
time”, in comparison with “BRISK and FAST feature
detectors”.
In the third step, i.e. “feature-based transform model esti-
mation, projective transformation” has been taken. In the
fourth step, the registered image has been convolved with
the “interpolation kernel” [3]. “Bicubic interpolation”
scheme has been applied in this step. This concept is
represented as Phase 1 algorithm in Sect. 4.
3. The third contribution of the work is a modiﬁed version
of “Canny edge detection algorithm” which is applied
to the output “registered image”. To overcome the draw-
backs of “Canny edge detection method”, each step is
modiﬁed. Finally, the output “edge-detected image” of
“improved canny” method has been fed to “FIS”, which
is having “eight inputs and single output”. The concept of
“fuzzy logic” has been utilized that uses the “approxima-
tion”that“humanbrain”uses.Thatiswhy,thisfunctionis
being used by many “researchers” to solve different prob-
lems, andthis concept canbeutilizedinmany“real-world
applications”. In “fuzzy logic”, a member in a group or
set has a “membership degree” that is not always “one or
zero” as the “set theory” process. In the “edge detection
problem”,thefuzzysystemcanactasa“thresholdingsys-
tem” to increase the “discrimination” among “adjacent
pixel” points at the “edge lines or curves”. The resulting
“grey values” of the image will be in “new ranges” fol-
lowing the output “membership functions”. So the “grey
values” of the pixels are “modiﬁed” to new ranges that
are more “distinguishable”. Such mapping follows “IF–
THEN” set of rules which will “control” the process.
There are three main stages of fuzzy image processing
such as “image fuzziﬁcation”, modiﬁcation of “membership
values” and, if required, “image defuzziﬁcation”. The fuzzi-
ﬁer stage includes the input “membership function” where
the grey levels of the image are “mapped” to new set of val-
ues. The “defuzziﬁer” is the “output stage” where the values
of the grey level are mapped to new “crisp values” by apply-
ing the rules used on the “mapped input values”. This paper
develops a complete “fuzzy inference system” for detecting
the “edges accurately”, and a comparison has been made with
the most commonly used edge detection algorithms such as
“Roberts, Sobel, Prewitt, Canny, ICA and B-edge”. For FIS
input, “triangular membership function” has been used and
for output, “Gaussian membership function” with 24 rules
has been proposed. The algorithm steps of ICWFL are rep-
resented in the form of Phase 2 and Phase 3 algorithm in
Sects. 5 and 6, respectively. Phase 2 algorithm describes the
steps for modiﬁed Canny edge detection algorithm. Phase
3 algorithm represents the steps for fuzzy logic-based edge
detection.
A performance analysis has been shown in the form of
tables like, using different “time performance parameters”
such as CPU time, PMT time and elapsed time, it has been
proved that with the feature-based image registration the
method of detecting edges can be imposed “less time” as
compared to without FBIR techniques. From the “simula-
tion results” and tables, it can be found that the proposed
method outperforms all the existing methods of edge detec-
tion. From all the seven tables, it can be concluded that the
“proposed method” performs better as compared to the exist-
ingmethodssuchasRoberts[7],Sobel[8],Prewitt[9],Canny
[3], ICA [10] and B-edge [11] edge detection algorithms. In
terms of seven image quality parameters, i.e. entropy, PSNR,
MSE, RMSE, MAE, UIQ and SSIM, the proposed method
performs well in comparison with the above existing edge
detection algorithms.
The remaining section of the paper is organized as fol-
lows: Sect. 2 contains related work, and Sect. 3 deals with
the restoration and enhancement techniques. In Sect. 4, the
steps for FBIR are discussed. Section 5 consists of the pro-
posed edge detection method. Section 6 offers simulation and
results. Section 7 presents “conclusion and future work”.
2 Related work
In the area of image processing, edge and its applications
play a very important role. Mainly prior to feature identiﬁ-
123

A robust edge detection algorithm based on feature-based image registration (FBIR) using…
3683
cation and feature detection, edge detection algorithms can
be applied. Further, for detection of object boundaries, edge
detection algorithms can be applied. Performance evaluation
of various edge detection algorithms has been carried out by
manyresearchers[12].Here,performancehasbeenevaluated
in terms of some known performance measures. Canny [3]
introduced a new mathematical approach to edge detection.
Mainly, new detection and localization criteria have been
deﬁned. The three performance criteria are as follows: (1)
good detection which corresponds to high signal-to-noise
ratio (SNR); (2) ﬁne localization, that is, the operator detects
the edges which is close to that true edge of the object; and
(3) only one response to a single edge.
Torre et al. [13] have proposed that the main objective of
edge detection is the characterization and detection of sig-
niﬁcant intensity changes. In the above paper, edge detection
consists of two steps: (1) ﬁltering step and (2) differentia-
tion step. An edge detection technique has been developed
[14] which will minimize the “errors of determination” of
edge points. A novel new theory of edge detection has been
presented in [15], where intensity changes are detected in
different scales. A spatial ﬁlter that is second derivative of
a Gaussian to detect the change in intensity has been pro-
posed which is also independent of orientation. Secondly,
intensity changes arise due to surface discontinuities or from
reﬂectance or illumination boundaries. Comparison of four
well-known edge detectors has been found in [16]. They are
Canny, Nalwa–Binford, Sarkar–Boyer and Sobel.
In another work, a comparison between various edge
detection algorithms has been presented [7]. From exper-
iments, it has been found that modiﬁed detector extracts
“weak edges” which are joined to “strong edges” from “low
contrast” images and it works better than other “weak detec-
tors”. A novel “classiﬁcation” of some major “important”
and “commonly” used “edge detection” algorithms has been
reported in [17]. Subjective evaluation of the study shows
that under noisy environment ISEF, Canny, Marr–Hildreth,
Kirsch, Sobel, Laplacian 2 and Laplacian 1 perform well.
They classify all the edge detection algorithms with respect to
the following “differentiation operators”: (1) “gradient edge
detectors”, (2) “second derivative (zero crossing)”, (3) “LOG
(Laplacian of Gaussian)”, (4) “Gaussian edge detectors” and
(5) “coloured edge detectors”.
Meer et al. [18] introduce a new conﬁdence measure
together with gradient-based edge detectors. Here, Canny’s
optimization criteria have been translated into the “discrete
domain” to introduce an “optimal discrete ﬁlter”. Here, the
three steps of edge detection procedure are broadly used,
that is, (1) “gradient estimation”, (2) “non-maximum sup-
pression” and (3) “hysteresis thresholding”. The concept of
edge detection can be applied to determine the exact location
of a tumour in brain [19]. “K-means clustering” approach has
been used to generate “initial groups”. Initial groups are the
input to the “Mamdani FIS” to produce different threshold’s
parameters. Then, FIS parameters are fed into the classi-
cal Sobel edge detectors to get the ﬁnal output edges. The
advantages of FIS are: (1) maximum robustness; (2) light-
ning variation; and (3) avoidance of overlap of double edges.
The comparative analysis of edge detection techniques and
band-wise analysis of these algorithms to extract object for
the remote sensing satellite images have been presented in
[1]. Mostly, edge detection algorithms such as “Sobel, Canny,
Prewitt, Roberts, Laplacian and zero crossing” have been
compared. It shows that “Canny’s algorithm” is most suit-
able for the “object extraction” because it produces a less
number of false edges and Sobel operator is having less time
and space complexity.
In another research, a very simple and novel method of
edge detection has been presented in [20], without deter-
mining the threshold value. The FIS in MATLAB has been
developed to get a simple “fuzzy rule-based edge detection
technique”. The pixel of an image is “compared” with its
neighbouring pixels, and depending on the level of “inten-
sity change”, the overall “pixel binary level” is adjusted and
usedforedgedetection.An“edgedetectionmethod”whichis
based on the “morphological gradient technique” and “gen-
eralized type 2 fuzzy logic” has been presented [21]. The
authors implemented this type of fuzzy logic with the help
of theory of alpha planes for defuzziﬁcation process. Here,
the heights and the approximation methods have been used.
A new image segmentation algorithm called “fuzzy edge
detection and segmentation (FEDS)” and a “bell fuzzy multi-
layer perceptron (BF-MLP)” for classifying images are used.
Then, optimization of BF-MLP has been done using “genetic
algorithm” for improving performance. The edge is found on
the basis of “fuzzy logic” of two edge detection methods, i.e.
“Sobel edge detection” and “Laplacian edge detection”.
Becerikli et al. [2] have proposed a new fuzzy rule-based
edge detection algorithm. Some of the “classical techniques”
are used with certain parameters such as “threshold and
sigma” to implement edge detection process. The thickness
of edges can be easily controlled by adding “new rules” or
“changing output parameters”, that is, it produces a ﬂexi-
ble structure. A novel method of edge detection based on
“fuzzy image representation” and “fuzzy pixels” has been
proposed [22]. The ﬁrst step is to convert the input image to
fuzzy form. Several membership functions for “fuzzy pixel
description” and “requirements” for their form and view are
presented. A “novel approach” for detecting edges based on
(1) “Sobel operator” (2) “fuzzy image representation” has
been described. An edge detection algorithm for greyscale
imagesbasedoncombinationoffuzzyinferencesystem(FIS)
and fuzzy C-means clustering (FCM) has been presented
[23]. FCM approach has been used to deﬁne the input the
membership functions of the FIS. Comparison of the pro-
posed method with classical and other fuzzy-based methods
123

3684
A. Kumawat, S. Panda
hasbeenmade.Alshenmawyetal.[24]proposedanoveledge
detection method using “fuzzy logic” without determining
the “threshold value”. The input image is “segmented into
regions” using ﬂoating 3*3 “binary matrix”. Then, the “edge
pixels are mapped” to a range of values distinct from each
other. The results have been compared with the linear Sobel
operator. Fuzzy-based edge detection has been developed in
[25]. Using 3*3 linear partial ﬁlters, that is, low pass, high
pass and edge enhancement, i.e. Sobel, spatial convolution is
carried out. These three sets will be input to a fuzzy system.
A Gaussian MF and “fuzzy rules of fuzzy system” decide
when a pixel belongs to edge or non-edge. Using Mamdani
defuzziﬁcation method, output image is produced. An efﬁ-
cient “fuzzy logic-based algorithm” to detect the edges of
an input device by using a 2*2 window has been developed
[26].
Canny’s edge detection algorithm and fuzzy logic con-
cept have been combined in [27]. There are various steps
in Canny edge detection method. Among these, hysteresis
linking method is complex because it needs neighbourhood
data information, which increases the complexity of algo-
rithm. So instead of hysteresis linking method, fuzzy logic
has been used for edge detection. Recently, Chung et al. [28]
show feature selection method based on learning scheme.
This method chooses good features and imposes limitation
on the use of redundant or dependent features. This proce-
dure of feature selection has been done in fuzzy rule-based
framework.
Recently, a “comprehensive survey” on the different
approaches which are applied in various “classiﬁcation prob-
lems” using a “robust and rich local feature descriptor WLD
(Weber Local Descriptor)” is studied [29]. “WLD” is robust
to “noise, rotation, changes in illumination and changes in
scale”. This “robustness” is the main key factor for get-
ting “better results” in different applications. Also “WLD”
is gaining importance due to the fact that “human percep-
tion” is converted into the “descriptor”. Here, “illumination,
rotational invariance, robustness to noise and scaling” are
considered. The authors observe that even though there are
several “variants of WLD”, original WLD performs “signif-
icantly better”. Further, they have understood that if “WLD”
is combined with “variance histogram”, performance will be
better.
A new non-rigid registration algorithm for multimodal
images has been proposed [30]. This method is established
on elastodynamics motion. The authors solve the multimodal
registration problem by modelling the nonlinear deforma-
tions as elastic waves and iterations solve the elastodynamics
wave equation to estimate the transformation. The inertial
force was modelled as the gradient of mutual information to
deal with the statistical relationship between the intensities
of underlying images. The proposed method was tested on
three different datasets. The registration results were anal-
ysed by examining the overlay images and by computing the
normalized mutual information.
New fuzzy edge detection methods which are to be applied
on fuzzy images have been proposed [31]. They have trans-
formed each pixel value in a digital image to be a fuzzy
number. So, all the images can be fuzziﬁed using (i) “inter-
val type-2 (IT2FS)”, (ii) “general type-2 (GT2FS)” and (iii)
“type-1 fuzzy sets (T1FS)”. They have presented results
using different types of “membership functions (MFs)”, i.e.
“triangular and trapezoidal” is used for the “T1 and IT2FS”.
For the “GT2FS”, they have used two types of MFs, i.e.
“triangular” on the “primary MFs” and “Gaussian” in the
“secondary MFs”. “IT2” and “GT2” membership functions
are achieved using a “genetic algorithm”.
Robles et al. [32] based on interval type-2 fuzzy systems
present a hardware architecture design for real-time edge
detection. The proposed architecture is designed to be imple-
mented on FPGAs, by taking advantages of three things, i.e.
“parallelism, pipelining and ﬁxed-point notation strategies”.
The proposed approach is evaluated in three steps: (i) “pro-
cessing rate”, i.e. at least “24 frames per second” of edge
detection, that corresponds to a real-time edge detection, (ii)
“noise robustness” and (iii) the “error” with respect to the
“software implementation”.
A type-2 fuzzy edge detection method has been presented
[33]. The process consists of ﬁrst to obtain the “image gra-
dient” in “four directions, i.e., horizontal, vertical and the
two diagonals”. This technique is known as the morpholog-
ical gradient. Then, a “general type-2 fuzzy Sugeno integral
(GT2 FSI)” has been used to integrate the above “four image
gradients”. In the second step, the “GT2 FSI” shows crite-
ria to determine at “which level the obtained image gradient
belongs” to an edge during the process. This is calculated
by assigning different “general type-2 fuzzy densities”, and
these “fuzzy gradients” are “aggregated” using the “meet and
join operators”.
A combination of the traditional “Sobel edge detector” in
combination with “interval type-2 fuzzy logic” is proposed
[34]. The main idea of using “interval type-2 fuzzy logic” in
“edge detection methods” is to provide them with the ability
to handle “uncertainty in processing real-world images”. In
order to design an “optimal fuzzy system”, the use of “meta-
heuristic optimization techniques” is also implemented. To
carry out “optimization” of the “fuzzy inference systems”,
the “cuckoo search (CS)” and “genetic algorithms (GAs)”
are applied.
Gonzalez et al. [35] propose an edge detection method
based on the “Sobel technique” and “generalized type-2
fuzzy logic systems”. To reduce the complexity of “gener-
alized type-2 fuzzy logic”, the theory of “alpha-planes” is
used. A comparison has been made between a “type-1 fuzzy
logic system (T1FLS)”, an “interval type-2 fuzzy logic sys-
tem (IT2FLS)” and a “generalized type-2 fuzzy logic system
123

A robust edge detection algorithm based on feature-based image registration (FBIR) using…
3685
(GT2FLS)”. In order to measure the “accuracy” of “edge
detection method”, the “ﬁgure of merit” of “Pratt measure”
has been applied.
Anedgedetectionalgorithm-based“edgeconnection”,the
“Hough transform-based Canny (HT-Canny)” edge detection
algorithm, has been proposed [36]. Instead of “traditional
double threshold” method, “HT-Canny algorithm” is guided
by “high-threshold image”, which obtains edge direction
through calculating edge “endpoint gradient” and “connects
the edge” by using the “Hough transform”.
Dhivya et al. [37] proposed a new technique with “fuzzy
logic”, suggested for detection of edge in digital images
deprived of ﬁnding the “threshold value”. This method starts
“segmenting the images” into “sections” by means of “ﬂuc-
tuating” 3 × 3 “binary matrixes”. In this paper, it provides
a “permanent effect” in the “lines smoothness and straight-
ness” for the “straight lines” and “good roundness” for the
“curved lines”.
3 Image restoration and enhancement
In the proposed method, we have employed a hybrid method
that is combining the concept of feature-based image regis-
tration (FBIR) and an improved version of canny with fuzzy
logic (ICWFL) in order to detect the edges of the given image
accurately. To solve the problem of edge detection, in the ﬁrst
step,somekindofpreprocessinghasbeencarriedoutbecause
we have taken the noisy images as input, by adding some
amount of noise. Preprocessing has been established with a
restoration and enhancement algorithm. For restoration, we
have used deconvolution with Wiener ﬁlter (WDF) which is
a non-blind deconvolution technique, and for enhancement,
we have used unsharp masking (USM) method. Blurring is a
major cause of image degradation, and it decreases the qual-
ity of an image. Deblurring is the process of removing blurs
and restoring the high-quality latent image. Blur can be of
various types such as motion blur, Gaussian blur, average blur
and defocus blur. Noise also corrupts the image, so we need
to perform denoising on image. And also image de-noising is
a part of image deblurring. Image deblurring mainly includes
two techniques: “blind image deconvolution” and “non-blind
image deconvolution”. In this paper, some amount of noise
is added to the input image and after that using a non-blind
deconvolution technique, i.e. WDF, and also an enhancement
algorithm, i.e. unsharp masking (USM), the image is restored
and enhanced to get a clear and noise-free image. So, we can
say that the proposed method uses some deblurring algo-
rithm, i.e. WDF, in order to get a noise-free image.
The main focus of the present work is to detect the edges
accurately taking a noisy image as input. But the main aim
of the deblurring algorithm is to get a clear image taking a
blur image as input. So, we can conclude that a deblurring
algorithm is used to get a noise-free image and after that we
have applied FBIR in combination with ICWFL to accurately
detect the edges of the input noisy images.
3.1 Image restoration using WDF (Wiener
deconvolution filter)
Most often, in practice, images which are acquired by “dif-
ferent sensors” or “satellites” are degraded, due to noise,
misfocus of camera lens, motion blur, atmospheric turbu-
lence, etc. These degraded images are not at all suitable for
further processing. Restoration attempts to “reconstruct” or
“recover” an image that has been “degraded” by using a
“clear knowledge” of the “degrading phenomenon”. In this
paper, to get back the original image from a “blur” or “noisy”
image, Wiener ﬁlter has been applied as a “restoration” ﬁlter.
The main goal of this ﬁlter is to remove the noise from the
signal. A parameter of “measurement” called “mean squared
error (MSE)” has been used, that is, the difference between
the “original signal” and the “new signal” should be as less as
possible. The WDF is optimized to ﬁnd the minimum MSE
estimate of the original signal from the noisy measurement.
This ﬁlter takes into account the properties of the “original
signal” and the noise of the measured signal. At frequencies
where the SNR is high, the Wiener ﬁlter tends to inverse
ﬁlter. If the SNR is low, instead the ﬁlter tends to do noise
suppression. That means this ﬁlter will produce the lowest
MSE value in the case of noise smoothing and inverse ﬁlter-
ing.
3.2 Image enhancement using USM (unsharp
masking) method
When an image is acquired, many times it can give a low-
contrast image, which is not good for further processing. A
“low-contrast image” can result from “poor illumination”,
lack of “dynamic range” in the “imaging sensor” or even in
the wrong setting of the “lens aperture” during the process of
“image acquisition”. In this paper, the output of the blurred,
restored image is enhanced using the method of “unsharp
masking (USM)”. USM is basically an “image sharpening”
technique and is derived from the fact that it uses a “blurred”
or “unsharped” negative image to create a “mask” of the
original image.
Steps of unsharp masking method are as follows: (i) blur
the original image by passing it through a “low-pass ﬁlter
(LPF)”; (ii) subtract this “smoothened image” from the “orig-
inal image” and the resulting difference is called the “mask”.
So the output image will have most of the “high-frequency
components” that are blocked by the “smoothing ﬁlter”; and
(iii) adding the “mask” back to the “original image” will
enhance the “high-frequency components”.
123

3686
A. Kumawat, S. Panda
4 Feature-based image registration (FBIR)
“Image registration” is “important” and also “challenging”
tasks when integrating and analysing information from “var-
ious sources”. Data may be from “multiple photographs”,
“different sensors”, “times”, “depths” or “viewpoints”. It is
a crucial step in all “image analysis” tasks in which the “ﬁnal
information” is obtained from combining all sources of data
such as in “image fusion”, “change detection” and “multi-
channel image restoration”.
The pseudocode for restoration enhancement algorithm
with “FBIR” applied in the current work can be summarized
as follows (Phase 1 algorithm):
Algorithm steps to obtain a registered image using FBIR: Phase 1
Input: “Original Image”
Output: “Registered image using FBIR”
Step 1: Apply “Gaussian Blur” to original image with their “len and
theta” parameter values of 21 and 41.
Step 2: Convert the “blur image” into “greyscale image”.
Step3:Transformedimageisobtainedbyapplyingtheangleof“rotation
30◦” on blurred image, then result of “rotated image” considered as
second image.
Step 4: Using “WDF deconvolution method” restored the blurred and
rotated image
Step 5: Enhance both the WDF restored images using the USM method.
Step 6: Apply “feature-based image registration” steps on obtained
“enhanced images”.
Step 6.1: Detect the features from both the “enhanced images” using
the “hybrid feature detector” [5].
Step 6.2: Extract the features from both the “detected images” using the
hybrid feature detector [5].
Step 6.3: Match the features from both the “extracted images” with
the help of “afﬁne transformation” with “bicubic interpolation” using
proposed hybrid feature detector which is explained in [6].
Step 6.4: Finally, if “matched points” extracted from matching have
done successfully from both the images, then obtain the registered
image.
End of Algorithm: Phase 1
4.1 Feature detection and extraction using hybrid
feature detector
In this step, an automatic machine-based approach to extract
structures or features in the images is carried out. Features
can be regions like “(forests, lakes, ﬁelds)”, points such as
“(region corners, line intersections)” or lines like “(region
boundaries, roads, rivers)”. In this paper, a hybrid approach
for “feature detection and description” has been applied [5].
Taking the disadvantages of two existing “feature detection
and description” algorithms, that is, “BRISK and FAST”,
a novel “hybrid feature detector and descriptor” has been
proposed. There are two main key features of the proposed
hybrid algorithm. First one, time complexity is reduced and
Fig. 1 Diagonal approach for hybrid feature detection method
secondly computational complexity is also reduced. In a
“hybrid feature detector and descriptor”, ﬁrstly a “corner
pixel” has been constructed using the “circle of 16 pixels”
extracted from the set of experimental images. All the above
16 pixels are to be considered to be a partition of three groups
for the simulated images. These groups are “brighter por-
tion”, “darker portion” and “similar portion”. With the help
of threshold and intensity value, we can identify the “brighter,
darker or similar portion”.
For the “brighter section, i is added to the t”. For the
“darker section, i value is taken out from t value”, and for
“similar section, it lies in between of darker and similar
value”. Using these three sections faster, we used the “diag-
onal approach of all 16 pixels”. Instead of testing all the 16
pixels, the “proposed hybrid approach” tests only “four pix-
els” as shown in Fig. 1. We employ a “diagonal approach” by
using above three sections where two slanting lines are to be
drawn. The ﬁrst is from “right to left”, that is, pixel number
from “3 to 11”, and the second slanting line from left to right,
which is drawn from “15 to 7”. The intersection of these two
“diagonal lines” is the “centre corner pixel”. With the help of
this algorithm, both “time complexity” and “computational
complexity” reduce as compared to “BRISK” and “FAST”
algorithms.
4.2 Feature matching using a hybrid algorithm
In this step, a mapping or “correspondence” between the
“features detected” in the “sensed image” and the “detected
feature” in the “reference image” is carried out. Physical
correspondence between features can be “dissimilar” due to
the “different imaging conditions” or due to the “different
spectral sensitivity of the sensors”. In this paper, “fea-
ture extraction and matching” have been performed based
on the earlier proposed hybrid algorithm [6]. In “feature
extraction” step, the features are extracted from both the
123

A robust edge detection algorithm based on feature-based image registration (FBIR) using…
3687
enhanced images, and in a “feature matching” step, the “cor-
respondence” is established between two images taken from
“different acquisition devices” or “different sensors” or “dif-
ferent viewpoints”. Using “Euclidean distance” in the earlier
proposed paper [6] measures the features from “sensed and
referenced images”, i.e. the enhanced images are matched.
The distances are calculated for “three types of feature
detectors, i.e. BRISK, FAST and hybrid”. Three “time-
based parameters” are used for “feature matching step”, i.e.
“elapsed time, CPU time and PMT time”. It is found that
“proposed hybrid feature matching algorithm” consumes less
“elapsed time, CPU time and PMT time” in comparison with
the standard “feature matching algorithms” such as “BRISK
and FAST”.
4.3 Feature-based transform model estimation
Both the “type” and the “parameters”, which are due to
the “alignment” of the “sensed image” with the “reference
image” are “estimated” in this step. Here, the objective is to
design a proper transformation model which transforms the
sensed image with respect to the original image with maxi-
mum accuracy. Similarity transformation can be thought of
as the “shape preserving mapping transformation” because
this can be used for the “preserving angles and curvatures”,
whereas the Afﬁne is a “linear mapping method” which can
be used efﬁciently to preserve “points, straight lines and
planes”. This method can be applied in order to correct “geo-
metric deformations” that can occur with “non-ideal camera
angles”, and the two classes of linear transformations, i.e.
projectiveandafﬁne,canbeusedinimageregistration.Afﬁne
transformation is the particular case of the projective trans-
formation. In this paper, afﬁne transformation has been taken.
4.4 Image resampling and transformation
In this step, the “sensed image” is transformed for “align-
ment” employing the mapping functions. The registered
image has been convolved with the “interpolation kernel”.
The process of “interpolation” reduces the “bandwidth” of
the signal, by applying a “low-pass ﬁlter” to “discrete signal”.
So, here, the “signal lost” can be reconstructed in the pro-
cess of “sampling” by “smoothing” the data samples with an
“interpolationfunction”.Interpolationhasbeendonethrough
convolution of the image with an “interpolation kernel”. In
this paper, bicubic method of interpolation has been used
where the surface of “interpolation” is smoother than corre-
sponding surfaces.
5 Improved canny edge detection algorithm
“Canny edge detection algorithm” has been “widely” used
in image processing and computer vision problems. Canny
is “gradient-based technique” which uses “Gaussian ﬁlter”
for image smoothing but the results of this algorithm give
“unsatisfactory result” on “low-contrast and noisy images”.
This algorithm has three defects [10]: (i) “Gaussian ﬁltering”
issensitivetonoise,whichleadstothegenerationof“pseudo-
edge points”; (ii) the value of the “double thresholds” is set
as ﬁxed; and (iii) for “candidate edge points”, it increases the
number of “pseudo-edge points”. Like, if there is a “non-edge
point” in the neighbourhood of the candidate edge point, and
it has the same “greyscale value” with an edge point, it will
misjudge the candidate edge points as “true edge points”.
This results in an increased number of “false edges”.
The general aim for a good edge detection algorithm has
the following parameters:
– Low error rate
Detection of edges with “low error rate” will be produced
as “many edges” ﬁgure out in the “original image”.
– Fine localization
The “edge point” which is detected from the “edge oper-
ator” should “accurately localize” on the “centre of the
edge”.
– Single response
The presence of image noise should not produce any false
edges. There should be “one response to a single edge”.
In this paper, each step of canny algorithm has been mod-
iﬁed to ﬁnd the accurate edges.
Thestepsofthe“modiﬁedCanny’sedgedetectionalgorithm”
are given in the following.
5.1 Replace Gaussian filter with median filter
A Gaussian ﬁlter will add a smooth effect on both edge and
noise, because both represent as high-frequency signal. To
achieve high accuracy of edge detection, it is expected that
more “smooth effect” should be added to “noise” and “less
smooth” effect should be added to “edge”. Here, we have
used median ﬁlter, which is nonlinear digital ﬁlter. The best
characteristic of this ﬁlter is, it preserves sharp edges while
removing noise. The main features of median ﬁlter are as
follows:
(i) It provides smoothness and gives less blurring effect,
(ii) it provides excellent noise reduction capabilities, (iii) it is
more robust than other existing ﬁlters, (iv) it does not create
any unrealistic pixel values, so it is better than other ﬁlters to
provide more sharp edges and (v) it highlights control points
and detects the edges.
123

3688
A. Kumawat, S. Panda
Here, the “median” is calculated by ﬁrst “sorting all the
pixel values” from the window into “numerical order” and
then replacing the pixel being considered with the “middle
(median) pixel value”. Median ﬁlter also refers to “rank ﬁlter
or order-statistics”. It replaces the value of the pixel by the
“median” of the grey levels in the “neighbourhood” of that
pixel by the following equation:
O(x, y) = median(s,t)∈Sxyi(s, t)
(1)
where i(s, t) is the given input image, Sx,y is the pixel under
the window mask and O(x, y) is the resultant or output
image. The procedures for implementing the median ﬁlter
are: (i) read the pixel value, (ii) sort the elements and (iii)
choose the mid-value, i.e. the central value, and this value
replaces the central pixel of the mask. Then, move the mask
or window by single pixel and repeat the steps until whole
image is processed.
5.2 Improvement in gradient magnitude and
direction calculation
“Canny edge detection algorithm” uses the centre in a “small
2*2 neighbourhood” window to calculate the “ﬁnite differ-
ence mean value” to represent the “gradient amplitude”. But
this method is “sensitive to noise” and can easily detect
“false edges” and may lose “real edges”. Here, gradients are
calculated in three directions: (i) horizontal gradient in the
X-direction, (ii) vertical gradient in the Y-direction and (iii)
diagonal gradient in both the X- and Y-directions. Horizon-
tal gradients take differences of columnar intensity values.
Vertical gradients take the difference of row intensity val-
ues. Diagonal gradients combine both of the above gradients
values. Here, gradients are calculated by using Prewitt ﬁlter.
Filtering mask used by Prewitt edge detector in the X- and
Y-directions is given by the following equation:
GradX =
⎡
⎣
−1
0
1
−1
0
1
−1
0
1
⎤
⎦
(2)
GradY =
⎡
⎣
1
1
1
0
0
0
−1
−1
−1
⎤
⎦.
(3)
This operator is specially used to determine the magnitude
and orientation of edge.
5.3 Non-maximal suppression (NMS)
NMS is an “edge-thinning technique”. This step is applied
to ﬁnd “the largest” edge. After that “gradient calculation”,
“edge extracted” from the “gradient value” is “still blurred”.
For calculation of NMS value, ICWFL uses 3-by-3 mask of
Fig. 2 Comparison of a pixel with its all adjacent direction
pixels, where each pixel is having eight neighbouring pixels
(E, W, N, S, ES, SW, WN, NE). Comparison of the given
pixel with the above eight pixel values is shown in Fig. 2.
If sample pixel value is greater than its adjacent pixels,
then do not replace the value else replace the value.
5.4 Double threshold
After the NMS step, there are few edge pixels which can be
affected by “noise and scalar variation”. In order to account
for these “spurious responses”, it is required to ﬁlter pixels
with a “weak gradient value” and preserve edge pixel with
a “high gradient value”. This requirement can be made by
selecting “high and low threshold value”. If an edge pixel’s
“gradient”valueishigherthanthe“highthreshold”value,itis
marked as a “strong edge pixel”. If an edge pixel’s “gradient”
value is smaller than the “high threshold” value and “larger
than the low threshold value”, it is marked as a “weak edge
pixel”.
If an edge pixel’s value is smaller than the “low thresh-
old” value, it will be “suppressed”. In the “traditional Canny
edge detection algorithm”, there will be two ﬁxed “man-
ual global threshold values” to ﬁlter all the “false edges”.
But, as the image gets complex, different “local areas” will
need “different threshold values” to accurately ﬁnd the “real
edges”. A “threshold set to high” can miss some “impor-
tant information”. On the other hand, a “threshold set too
low” will falsely identify some “irrelevant information such
as noise” as important information. It is difﬁcult to give a
“generic threshold” that “works well” on all images. So, the
main improvement in this step is to preserve or ﬁnd all the
edges whether it is false or true, without giving the thresholds
manually. Both high and low thresholds are obtained by the
following equations:
123

A robust edge detection algorithm based on feature-based image registration (FBIR) using…
3689
th = 0.5 ∗
1
n

.
(4)
Here, “th” refers to high threshold and n represents the total
number of pixels in the given input image.
tl = 0.5 ∗th.
(5)
Here, “tl” refers to the low threshold. Using Eqs. (4) and (5),
both high and low thresholds can be found out.
5.5 Track edge by hysteresis
In this ﬁnal step of edge detection, all the unnecessary edges
are “suppressed” that are either “weak” or those which are
“not connected” to “strong edges”. The steps of Phase 2 algo-
rithm for modiﬁed Canny edge detection are as follows:
Algorithm steps for modiﬁed Canny edge detection: Phase 2
Input: Registered image obtained from Algorithm steps of phase 1
Output: Resultant modiﬁed Canny edge detection image obtained
Step 1: Apply “median ﬁlter” on registered image.
Step 2: Calculation of “gradient magnitude and direction” is performed
on registered median ﬁltered image.
Step 3: Apply “edge thinning” technique on step 2 output image.
Step 4: Use “double threshold” to remove the edge pixels with “weak
gradient values” and save the pixel with “strong gradient values”.
Step 5: Track the edges with hysteresis after “double thresholds” to
obtain the ﬁnal modiﬁed Canny edge-detected image.
End of Algorithm: Phase 2
6 Fuzzy logic-based edge detection
“Fuzzy image processing” plays an important role in repre-
senting “uncertain data”. There are many “beneﬁts” of “fuzzy
image processing”. Firstly, “fuzzy techniques” are able to
manage the “vagueness and ambiguity” efﬁciently and deal
with “imprecise data”. Secondly, “fuzzy logic” is “easy” to
understand.Itisalsoverysimplein“mathematicalconcepts”.
An edge in an image provides a frame of the object which
is to be extract out from the “homogeneous background”
for a speciﬁc application. There are various edge detection
methods, but the existing methods possess some “limita-
tions” like ﬁxed edge thickness and some parameters like
“threshold” are problematic to “implement”. But in fuzzy
rule-based technique, we can change the “thickness” of the
edge by “altering” the rules and output parameters.
“Fuzzy set theory” concept can be employed for “edge
detection”. The “method performs mathematical and logi-
cal reasoning” based on “approximations” rather than “crisp
values”. So, the complexity of problems can be reduced with
Fig. 3 Components of fuzzy inference system (FIS)
the help of this technique “signiﬁcantly”, where “ﬁxed val-
ues” cannot be “attained or predicted”. In the proposed work,
keeping the above concepts in mind, the resultant “output
image” from the improved version of Canny edge detection
has been fed to a “fuzzy inference system (FIS)”. The con-
cept of a window or mask has been developed to preprocess
the image before it is being fed to a FIS. The values obtained
from the window mask, i.e. the output values, are subjected to
the “fuzzy rules” for detection of edges. The mask is helpful
for extracting the greyscale values of neighbourhood pixels
from the “input image”. A FIS is designed which takes the
“process values as input”. These values are then converted
into “fuzzy plane”. A “fuzzy rule base” is deﬁned that deter-
mine and show the “edge pixels” in the “output image”.
The “fuzziﬁer stage” [38] includes the “input membership
function”, where the grey levels of the images are mapped to
new set of “linguistic values”. The “defuzziﬁer” is the output
stage where the values of the grey level are mapped to “new
crisp values”. In the present work, defuzziﬁcation has been
done with the help of centroid of area (COA) method and
therefore the modiﬁed Canny edge detection approach result
has been applied to FIS as shown in Fig. 3, and the algorithm
steps for ICWFL based on FBIR are shown as follows:
123

3690
A. Kumawat, S. Panda
Algorithm steps for ICWFL based on FBIR: Phase 3
Input: Resultant improved Canny edge detection image obtained from
Phase 2
Output: Proposed ICWFL algorithm applied to above input image
Step 1: Modiﬁed Canny edge-detected image is scanned by 3-by-3 win-
dow mask.
Step 2: The “eight scanned pixels are taken as a crisp input for FIS
system”, converted into “linguistic variables”, i.e. low, mid and high ,by
using “triangular membership function”.
Step 3: Twenty-four fuzzy rules have been applied for “3-by-3 window
mask” on fuzzy inputs, i.e. from IP1 to IP8, to obtain the fuzzy output,
that is, “weak edges, strong edges or partial edges” using Gaussian
membership function which is based on the combination of all three
“linguistic variables”.
Step 4: Finally, fuzzy output is “defuzziﬁed” using inbuilt function
“centroid of area (COA)” method to get back “original image”.
End of Algorithm: Phase 3
6.1 Window mask
A “3 × 3 window mask” has been deﬁned for “raster scan-
ning” the image as shown in Fig. 4a. This concept is used
to preprocess the image before it is fed to a FIS. This mask
takes the input greyscale values IP1, IP2, IP3 . . . IP8 of eight
neighbourhood pixels with the centre pixel IP, as the output
pixel. Figure 4b shows the “processed window mask”, where
△IPi = |IPi −IP|, for i = 1, 2, 3 . . . 8.
6.2 Fuzzy membership functions (MFs)
In designing a FIS, “membership functions (MFs)” play a
vital role. In the fuzzy set, the “degree of fuzziness” is mea-
sured using MFs as they are the “key constituents of the fuzzy
theory”. In this work, “Gaussian MFs” have been used for
output values and “triangular MFs” have been used for Input
values.
The “triangular MFs” are formed using “straight lines”.
These “straight lines MFs” have the advantage of “simplic-
ity”. Also the “Gaussian MFs” are “popular methods” for
specifying “fuzzy sets”, because of their “smoothness” and
“concise notation”. These two curves have been used in this
work because of their “smoothness” and “nonzero value” at
all points, which are shown in Fig. 5.
Gaussian MFs can be represented with its two parameters,
i.e. “centre of MF” and “width of MF”, whereas the standard
“triangular membership function” represents a “lower limit
a”, an “upper limit b” and a “value m”, where
a < m < b.
(6)
The above two membership functions can be represented
as a curve, which describes the mapping of input space to the
values of degree of membership or membership which lies
between 0 and 1. For eight input values IP1, IP2, IP3 . . . IP8,
Gaussian membership function achieves smoothness.
6.3 Fuzzy sets
For each of these input values, three variations of fuzzy sets
are considered: one for low in the range (4.66,106.7,208.7),
second one for medium in the range (65.86, 167.9, 269.9)
and third one for high in the greyscale range (153.4, 255.4,
357.4).
The output pixel △IP from the FIS has been divided into
three fuzzy sets: strong edge, weak edge and partial edge. The
associated MFs with the I/P and O/P fuzzy sets are shown
in Figs. 6 and 7. Figure 6a represents how the eight inputs
IP1, IP2, IP3 . . . IP8 are represented in terms of MFs using
Mamdani FIS. Figure 6b–d represents the membership func-
tions plots for three fuzzy sets of input, i.e. low, mid and
high.
The output pixel with “Gaussian membership function ”
from the FIS is also divided into three fuzzy sets, namely
strong edge, weak edge and partial edge. Figure 7 represents
the MF plots for the output pixel.
Table 1 gives a list of “terminologies and parameters of
both input and output fuzzy sets”.
6.4 Fuzzy knowledge base
Fuzzy rule plays an important role in “fuzzy inference sys-
tem” because it makes the “ﬁnal conclusions” related to
classifying an input or “stabilizing and adjusting” the out-
put. Table 2 represents the “fuzzy rule base” for the proposed
“ICWFL edge detection algorithm” that consist of various
“linguistic descriptions”.
6.5 FIS rules
There are 24 rules for a single output of three variations, i.e.
strong edge, weak edge and partial edge. These are shown in
Table 2.
6.6 Defuzzification
“Fuzzy rule-based” systems evaluate “linguistic if–then
rules” using “fuzziﬁcation”, “inference” and “composition”
procedures. They produce “fuzzy outputs” which have to be
“converted” back into “crisp output”. To convert the fuzzy
results into crisp, defuzziﬁcation has been carried out. In this
paper, “centroid of area (COA)” method has been used. The
total area of the “membership function distribution” used
to represent the combined “control action” is divided into a
“number of sub-areas”. The area and the “centre of gravity
(COG)” or “centroid” of each sub-area have been calculated,
and then, “summation” of all these sub-areas has been taken
123

A robust edge detection algorithm based on feature-based image registration (FBIR) using…
3691
Fig. 4 3 × 3 proposed window
mask
Fig. 5 Triangular and Gaussian
membership function plots
into the account to get the “defuzziﬁed value” for a “discrete
fuzzy set”.
7 Simulation and results
7.1 Comparative analysis based on various image
quality parameters
For simulation, ten sample images from various well-known
popular databases have been chosen, such as Berkeley
database, CVIU and USC-SIPI database. They are Banana
(2221×1666), Pimen/Fruits (512×512), Lena (512×512),
Kiwi (1920×1080), Bird (321×481), Diya (510×340), Fish
(710 ×710), Jar (512×512), Brain (512×512) and Flower
(1920 × 1080). Figure 8 represents restoration and enhance-
ment done taking two versions of the input blur image, i.e. the
“original image” and the image rotated by the angle 30◦. Fig-
ure 8a column represents the blur image obtained by adding
noise of 1.0d B to the original image. Figure 8b shows the
previous image, i.e. Fig. 8a rotated by 30◦. Figure 8c repre-
sents the restored image obtained by applying Wiener ﬁlter to
Fig. 8a. Figure 8d shows the Wiener ﬁltered restored image of
Fig. 8b. Figure 8e shows the enhanced version of Fig. 8c after
applying the method of USM (unsharp masking), and Fig. 8f
column represents the USM method applied to Fig. 8d.
Figure 9 shows the results after applying feature-based
image registration (FBIR) steps to Fig. 8e and f. These two
columns are shown in Fig. 9a and b. Figure 9c and d rep-
resents the features that are extracted from Fig. 9a and b,
respectively. Figure 9e shows the matching of detected fea-
tures from Fig. 9c and d. Figure 9f column represents the
registered output image after afﬁne transformation and bicu-
bic interpolation methods have been applied.
123

3692
A. Kumawat, S. Panda
Fig. 6 MFs of the input variable
IPi
Fig. 7 MFs of the output
variable △IP using three fuzzy
sets
Figure 10 shows the result of performance analysis of
various edge detection methods and the proposed ICWFL
method. Figure 10a column shows the “result” of applying
Roberts [7] edge detection method on Fig. 9f. Figure 10b–f
represents the result of edge detection method using Sobel
[8], Prewitt [9], Canny [3], ICA [10] and B-edge [11] method.
Figure 10g column represents the edge detection using pro-
posed ICWFL method. Here, one can notice that the edges of
various images are coming in grey or black colour with white
background. And also a number of false edges in all the above
methods are more in comparison with the proposed ICWFL
method. That is, the boundary or edges of all the objects in
the scene are complete and there are no false edges present
in the boundary using proposed ICWFL method.
So, one can conclude that when the image is prepro-
cessed by using a restoration-based enhancement algorithm
and after that the image is being registered using FBIR tech-
nique,takingthisregisteredimageasinputtoICWFLmethod
of edge detection, accuracy increases.
123

A robust edge detection algorithm based on feature-based image registration (FBIR) using…
3693
Table 1 Parameters and
terminologies for inputs and
outputs fuzzy sets
Linguistic variable
Parameter
Range
MF type
I P1
Low
[4.66 106.7 208.7]
[0 255]
Triangular MF
Mid
[65.86 167.9 269.9]
[0 255]
Triangular MF
High
[153.4 255.4 357.4]
[0 255]
Triangular MF
I P2
Low
[4.66 106.7 208.7]
[0 255]
Triangular MF
Mid
[65.86 167.9 269.9]
[0 255]
Triangular MF
High
[153.4 255.4 357.4]
[0 255]
Triangular MF
I P3
Low
[4.66 106.7 208.7]
[0 255]
Triangular MF
Mid
[65.86 167.9 269.9]
[0 255]
Triangular MF
High
[153.4 255.4 357.4]
[0 255]
Triangular MF
I P4
Low
[4.66 106.7 208.7]
[0 255]
Triangular MF
Mid
[65.86 167.9 269.9]
[0 255]
Triangular MF
High
[153.4 255.4 357.4]
[0 255]
Triangular MF
I P5
Low
[4.66 106.7 208.7]
[0 255]
Triangular MF
Mid
[65.86 167.9 269.9]
[0 255]
Triangular MF
High
[153.4 255.4 357.4]
[0 255]
Triangular MF
I P6
Low
[4.66 106.7 208.7]
[0 255]
Triangular MF
Mid
[65.86 167.9 269.9]
[0 255]
Triangular MF
High
[153.4 255.4 357.4]
[0 255]
Triangular MF
I P7
Low
[4.66 106.7 208.7]
[0 255]
Triangular MF
Mid
[65.86 167.9 269.9]
[0 255]
Triangular MF
High
[153.4 255.4 357.4]
[0 255]
Triangular MF
I P8
Low
[4.66 106.7 208.7]
[0 255]
Triangular MF
Mid
[65.86 167.9 269.9]
[0 255]
Triangular MF
High
[153.4 255.4 357.4]
[0 255]
Triangular MF
△I P
Weak-Edge
[70.9 18.6]
[0 255]
Gaussian MF
Partial-Edge
[43.32 127.5]
[0 255]
Gaussian MF
Strong-Edge
[43.32 255]
[0 255]
Gaussian MF
In this paper, the accuracy of proposed ICWFL method
has been measured in terms of seven tables. Table 3 shows
the “comparison” of entropy values of all the above methods
with own proposed ICWFL method. Entropy value is higher
for all the images, when we use proposed ICWFL method.
Forexample,incaseoffruitsimagesentropyis1.3271,which
is much higher than all the six existing methods.
Table 4 represents the MSE table. If MSE is low, that
indicates that error content in the image is less and the infor-
mation content in the image is more. In case of Banana image,
MSE for the proposed ICWFL method is 0.06449 which is
very low as compared to all six existing methods of edge
detection.
SimilarobservationsaregiveninTable5,whichrepresents
the RMSE value.
Table 6 shows the comparison of PSNR values. If value
of PSNR is high, it indicates that signal or information con-
tent in the image is high, which represents a clear image.
In case of Banana image, using proposed ICWFL method
PSNR becomes 11.90474 which is very much higher than
the six existing edge detection methods.
123

3694
A. Kumawat, S. Panda
Table 2 Fuzzy rules
Rules
IP1
IP2
IP3
IP4
IP5
IP6
IP7
IP8
△IP
Rule1
Low
Low
Low
Low
Low
Low
Low
Low
Weak-edge
Rule2
Low
Low
Low
Low
Low
Low
Low
Mid
Partial-edge
Rule3
Low
Low
Low
Low
Low
Low
Mid
High
Partial-edge
Rule4
Low
Low
Low
Low
Low
Mid
High
Low
Partial-edge
Rule5
Low
Low
Low
Low
Mid
High
Low
Mid
Partial-edge
Rule6
Low
Low
Low
Mid
High
Low
Mid
High
Partial-edge
Rule7
Low
Low
Mid
High
Low
Mid
High
Low
Partial-edge
Rule8
Low
Mid
High
Low
Mid
High
Low
Mid
Partial-edge
Rule9
Mid
High
Low
Mid
High
Low
Mid
High
Partial-edge
Rule10
Mid
Mid
High
Low
Mid
High
Low
Mid
Partial-edge
Rule11
Mid
Mid
Mid
High
Low
Mid
High
Low
Partial-edge
Rule12
Mid
Mid
Mid
Mid
High
Low
Mid
High
Partial-edge
Rule13
Mid
Mid
Mid
Mid
Mid
High
Low
Mid
Partial-edge
Rule14
Mid
Mid
Mid
Mid
Mid
Mid
High
Low
Partial-edge
Rule15
Mid
Mid
Mid
Mid
Mid
Mid
Mid
High
Partial-edge
Rule16
Mid
Mid
Mid
Mid
Mid
Mid
Mid
Mid
Partial-edge
Rule17
High
High
High
High
High
High
High
High
Strong-edge
Rule18
High
High
High
High
High
High
High
Low
Partial-edge
Rule19
High
High
High
High
High
High
Mid
Low
Partial-edge
Rule20
High
High
High
High
High
Mid
Low
High
Partial-edge
Rule21
High
High
High
High
Mid
Low
High
Mid
Partial-edge
Rule22
High
High
High
Mid
Low
High
Mid
Low
Partial-edge
Rule23
High
High
Mid
Low
High
Mid
Low
High
Partial-edge
Rule24
High
Mid
Low
High
Mid
Low
High
Mid
Partial-edge
Table 7 represents the SSIM index. The “structural sim-
ilarity index measurement (SSIM) quantiﬁes image quality
degradation” caused by processing such as “data compres-
sion” or by losses in “data transmission”. It is a “full reference
metric” that requires two images from the same image cap-
ture, i.e. a “reference image and a processed image”. SSIM
actually measures the perceptual difference between “two
similar images”. “SSIM” value for the proposed ICWFL for
Banana image is 4.952647 which is much higher than all
other six existing methods.
The comparison of “mean absolute error (MAE)” for all
the “existing edge detection methods” and the “proposed
FBIR using ICWFL method” is shown in Table 8. MAE mea-
sures the “absolute average distance” between the “registered
image” and the “edge detected image”. MAE and RMSE are
the two most “common matrices” that can be used as a “mea-
sure of accuracy” in “image processing algorithms”.
From Table 8, we can conclude that the proposed algo-
rithm for edge detection with FBIR using ICWFL gives
a much lower error as compared to other edge detection
algorithms. For example, in case of standard “Lena” image,
using proposed algorithm the value of MAE is 0.2285 which
is much lower than Roberts [7]—0.48923, Sobel [8]—
0.49142, Prewitt [9]—0.49163, Canny [3]—0.5026, ICA
[10]—0.5013 and BE3 [11]—0.49498. Lower the value of
“MAE” indicates that the “algorithm contains the less error”
and this indicates the “efﬁciency of the proposed algorithm”
increases as compared to other algorithms.
Table 9 shows a comparison of “Universal image quality
index (UIQI)” values. In UIQI method [39], the proposed
index has been formulated based on three factors, i.e. “loss
of correlation”, “luminance distortion” and “contrast distor-
tions”. This index performs “signiﬁcantly better” than widely
used “distortion metric mean squared error”. Lower the value
of “UIQI” represents “higher” the image quality. Referring to
Table 9, it can be found that the “proposed algorithm” is hav-
ing a much lower value of “UIQI” in comparison with other
“existing algorithms”. For example, if we consider “Banana”
image, the UIQ value of the proposed algorithm happens to
be 0.2042, which is much less than Roberts [7]—0.8984,
Sobel [8]—0.8983, Prewitt [9]—0.8988, Canny [3]—0.847,
ICA [10]—0.8999 and BE3 [11]—0.8992.
7.2 Comparative analysis based on various time
parameters
The main motivation behind using a FBIR technique before
edge detection is as follows. In a registered output image, we
123

A robust edge detection algorithm based on feature-based image registration (FBIR) using…
3695
Fig. 8 Restoration and
enhancement done using various
blurred images. a Input blur
image; b rotation of the input
image by an angle of 30◦; c
restored image of a; d restored
image of b; e enhanced image
of c; f enhanced image of d;
123

3696
A. Kumawat, S. Panda
Fig. 9 Apply image registration
concept on restoration and
enhancement images a same as
Fig. 8e; b same as Fig. 8f; c
hybrid feature extraction from
a; d hybrid feature extraction
from b; e matching of c and d; f
registered output image of a and
b
123

A robust edge detection algorithm based on feature-based image registration (FBIR) using…
3697
Fig. 10 Edge detection
performed on registered image.
a Roberts edge detection
method [7]; b Sobel edge
detection method [8]; c Prewitt
edge detection method [9]; d
Canny edge detection method
[3]; e ICA edge detection
method [10]; f B-edge edge
detection method [11]; g
proposed (ICWFL) edge
detection method
getthisbyaligningtwodifferentimageswhicharetakenfrom
“different sensors, times or viewpoints”. So, the output of
image registration is having more information in comparison
with its input images, which are to be aligned. To prove the
above concept, in this paper, a comparative analysis of three
time estimation parameters has been performed.
Table 10 shows the PMT time estimation [6] of with and
without image registration. In case of Banana image, PMT
time is 75.271 using Canny with fuzzy logic without image
registration; if we use image registration, it is 50.717, which
is less.
123

3698
A. Kumawat, S. Panda
Table 3 Entropy
Images
Roberts [7]
Sobel [8]
Prewitt [9]
Canny [3]
ICA [10]
BE3 [11]
FBIR using ICWFL
Banana
0.0354
0.0477
0.0484
0.1537
0.0565
0.0549
0.1145
Fruits
0.1738
0.1755
0.1747
0.4407
0.3749
0.2619
1.3271
Lena
0.1792
0.1843
0.1827
0.4600
0.4051
0.2842
0.7213
Kiwi
0.0713
0.0855
0.0854
0.3320
0.1499
0.0996
0.2846
Bird
0.1424
0.1562
0.1545
0.4140
0.3280
0.2455
0.5857
Diya
0.0973
0.0924
0.0923
0.2781
0.1372
0.1089
0.2303
Fish
0.1430
0.1302
0.1296
0.3316
0.2349
0.1429
0.4323
Jar
0.1361
0.1227
0.1229
0.4828
0.2784
0.1172
0.4772
Brain
0.1791
0.1629
0.1627
0.4901
0.2892
0.1790
0.5500
Flower
0.0962
0.0943
0.0943
0.3282
0.1555
0.1240
0.3040
Table 4 MSE
Images
Roberts [7]
Sobel [8]
Prewitt [9]
Canny [3]
ICA [10]
BE3 [11]
FBIR using ICWFL
Banana
0.83987
0.83837
0.83827
0.83076
0.83784
0.83655
0.06449
Fruits
0.27642
0.27757
0.27748
0.28257
0.28077
0.27630
0.10575
Lena
0.24983
0.24919
0.24936
0.25800
0.25728
0.25962
0.13980
Kiwi
0.80144
0.80106
0.80097
0.78726
0.79903
0.79627
0.07074
Bird
0.31250
0.31126
0.31127
0.31805
0.31326
0.31235
0.22364
Diya
0.37209
0.21212
0.21074
0.21075
0.22577
0.21531
0.20912
Fish
0.64179
0.15641
0.15544
0.16043
0.15581
0.16124
0.15542
Jar
0.91605
0.91577
0.91564
0.90365
0.91608
0.91597
0.19113
Brain
0.53403
0.53542
0.53544
0.54394
0.54337
0.53796
0.50909
Flower
0.22748
0.22732
0.22734
0.23079
0.22625
0.22944
0.16534
Table 5 RMSE
Images
Roberts [7]
Sobel [8]
Prewitt [9]
Canny [3]
ICA [10]
BE3 [11]
FBIR using ICWFL
Banana
0.91644
0.91563
0.91557
0.91146
0.91534
0.91463
0.25396
Pimen
0.52576
0.52685
0.52677
0.53157
0.52988
0.52564
0.32520
Lena
0.49983
0.49919
0.49936
0.50794
0.50723
0.50953
0.37390
Kiwi
0.89523
0.89502
0.89497
0.88728
0.89388
0.89234
0.26597
Bird
0.55902
0.55790
0.55792
0.56396
0.55970
0.55888
0.47290
Diya
0.60990
0.46057
0.45906
0.45908
0.47515
0.46402
0.45730
Fish
0.80111
0.39548
0.39425
0.40053
0.39472
0.40154
0.39423
Jar
0.95710
0.95695
0.95689
0.95060
0.95712
0.95706
0.43718
Brain
0.73077
0.73172
0.73173
0.73752
0.73713
0.73345
0.71350
Flower
0.47695
0.47678
0.47680
0.48041
0.47566
0.47900
0.40663
Table 11 shows the comparison of CPU-Time estimation
[6] for With_IR and Without_IR methods. Here, also one can
observe that if we detect the edges with FBIR and ICWFL
method, then time taken will be less.
Table 12 shows the elapsed time estimation [6] of the
ﬁve images, when ICWFL without_ FBIR and ICWFL
with_FBIRisused.ForBananaimage,ICWFLwith_IRtakes
50.7171 seconds which is less than ICWFL without FBIR
which is 75.2632.
So, from all the above experimental results and tables, it
can be concluded that edge detection using FBIR and ICWFL
algorithm outperforms all the edge detection methods. The
proposed method shows the “improvement” in results due to
the fact that we have taken the “best features” of “FBIR and
also improved canny with fuzzy logic”. Also, from an “noisy
123

A robust edge detection algorithm based on feature-based image registration (FBIR) using…
3699
Table 6 PSNR
Images
Roberts [7]
Sobel [8]
Prewitt [9]
Canny [3]
ICA [10]
BE3 [11]
FBIR using ICWFL
Banana
0.75788
0.76562
0.76617
0.80524
0.76839
0.77511
11.90474
Fruits
5.58433
5.56629
5.56764
5.48879
5.5165
5.58627
9.75709
Lena
6.0235
6.03461
6.03175
5.88378
5.89593
5.85665
8.54501
Kiwi
0.96130
0.96335
0.96381
1.03880
0.97439
0.98937
11.50322
Bird
5.05151
5.06882
5.06860
4.97510
5.04088
5.05359
6.50459
Diya
4.29348
6.73413
6.76260
6.76230
6.46334
6.66928
6.79596
Fish
1.92607
7.92538
8.05729
8.08440
7.94722
8.07402
8.08489
Jar
0.76166
0.76428
0.76550
0.87995
0.76135
0.76241
14.37361
Brain
5.44863
5.42617
5.42577
5.28905
5.29806
5.38504
5.86417
Flower
6.43056
6.43366
6.43324
6.36775
6.45413
6.39331
7.81609
Table 7 SSIM
Images
Roberts [7]
Sobel [8]
Prewitt [9]
Canny [3]
ICA [10]
BE3 [11]
FBIR using ICWFL
Banana
1.30103
1.00000
1.30103
1.60206
1.30103
1.77815
4.95264
Fruits
2.64345
2.68121
2.69019
2.79239
2.78533
3.10721
4.58478
Lena
4.12839
4.13513
4.13321
4.12483
4.11694
4.11826
4.51995
Kiwi
2.07918
2.23044
2.25527
2.23044
2.20412
2.25527
4.89047
Bird
0.55490
0.55316
0.55318
0.56155
0.55727
0.55486
0.48001
Diya
1.00060
1.00610
1.00610
1.00850
1.00710
1.00590
1.33500
Fish
0.47710
0.47660
0.47650
0.46690
0.47310
0.47480
0.56250
Jar
0.00030
0.00010
0.00020
0.00100
0.00030
0.00050
0.11900
Brain
0.00970
0.00950
0.00950
0.00680
0.00570
0.01050
0.29830
Flower
3.00432
3.02530
3.02938
2.99563
3.02530
3.00432
4.71028
Table 8 MAE
Images
Roberts [7]
Sobel [8]
Prewitt [9]
Canny [3]
ICA [10]
BE3 [11]
FBIR using ICWFL
Banana
0.90414
0.90421
0.90423
0.87716
0.90411
0.9009
0.22029
Fruits
0.48076
0.48013
0.48024
0.48246
0.48061
0.47661
0.25028
Lena
0.48923
0.49142
0.49163
0.50260
0.50130
0.49498
0.22850
Kiwi
0.87349
0.87297
0.87302
0.85389
0.87207
0.86827
0.24249
Bird
0.52635
0.52507
0.52505
0.53421
0.52940
0.52698
0.43950
Diya
0.56767
0.40834
0.40694
0.40695
0.42198
0.41151
0.40533
Fish
0.73600
0.26127
0.25638
0.25556
0.26018
0.25572
0.25554
Jar
0.90413
0.90374
0.90364
0.88121
0.90371
0.90310
0.10395
Brain
0.49220
0.49365
0.49368
0.50284
0.50223
0.49638
0.45941
Flower
0.40027
0.40008
0.40006
0.40676
0.39859
0.40166
0.34307
image” using “enhancement and restoration” approaches, we
get a “crystal clear” image which is mostly “noise-free”. As a
result of incorporation of the three concepts, i.e. “an enhance-
ment and restoration algorithm”, “FBIR” and “improved
canny with fuzzy logic (ICWFL)”, more “accurate single
edges” are achieved for edge detection.
8 Conclusion and future work
In this paper, there are three major contributions. The ﬁrst
contribution is a restoration-based enhancement algorithm
that has been proposed to get back the “original image from
the noisy or degraded image”. Second contribution is taking
the clear form of the degraded image, and all the steps of
FBIR have been applied, to align two different sequences
123

3700
A. Kumawat, S. Panda
Table 9 UIQI
Images
Roberts [7]
Sobel [8]
Prewitt [9]
Canny [3]
ICA [10]
BE3 [11]
FBIR using ICWFL
Banana
0.8984
0.8983
0.8988
0.8470
0.8999
0.8992
0.9204
Fruits
0.4487
0.4458
0.4460
0.3830
0.3996
0.4254
0.9197
Lena
0.4563
0.4521
0.4521
0.3820
0.3940
0.4267
0.9168
Kiwi
0.8561
0.8538
0.8536
0.8035
0.8465
0.8614
0.9185
Bird
0.6035
0.6005
0.6013
0.2061
0.3011
0.4023
0.9132
Diya
0.3780
0.4050
0.3930
0.4360
0.3880
0.1950
0.9800
Fish
0.4748
0.4741
0.4740
0.4637
0.4705
0.4725
0.6133
Jar
0.7726
0.7728
0.7728
0.7660
0.7710
0.7719
0.9028
Brain
0.4473
0.4452
0.4451
0.4242
0.4372
0.4369
0.9101
Flower
0.3853
0.3856
0.3856
0.3297
0.3768
0.3850
0.9292
Table 10 PMT_time estimation using with and without image regis-
tration (IR)
Images
ICWFL without_IR
ICWFL with_IR
Banana
75.271
50.717
Pimen
16.958
12.764
Lena
17.797
12.723
Kiwi
49.105
36.869
Bird
48.000
05.487
Diya
15.395
05.402
Fish
09.631
08.689
Jar
23.233
06.314
Brain
30.258
06.531
Flower
40.994
37.055
Table 11 CPU_time estimation using with and without image registra-
tion (IR)
Images
ICWFL without_IR
ICWFL with_IR
Banana
90.140
67.125
Pimen
21.906
16.390
Lena
22.806
15.421
Kiwi
58.750
46.906
Bird
70.281
08.093
Diya
17.656
07.468
Fish
15.406
13.359
Jar
34.500
08.968
Brain
43.359
09.234
Flower
50.781
43.937
of input images. The ﬁnal contribution is an improved canny
with fuzzy logic (ICWFL) algorithm that has been developed
by taking the registered output image of the previous step.
The proposed method is “robust” to “contrast and bright-
ness” variations in detecting edges in the image. It produces
a “permanent effect” in the “lines smoothness” and “round-
Table 12 Elapsed_time estimation using with and without image reg-
istration (IR)
Images
ICWFL without_IR
ICWFL with_IR
Banana
75.263
50.717
Pimen
16.958
12.764
Lena
17.797
12.721
Kiwi
49.104
36.868
Bird
48.000
05.485
Diya
15.398
05.406
Fish
09.643
08.688
Jar
23.235
06.321
Brain
30.265
06.530
Flower
40.994
37.055
ness” for the “curved lines”. Simultaneously, one can get the
sharp “corners” easily. From all the simulation results and
tables, one can conclude that the present algorithm works
well as compared to some well-known existing “edge detec-
tion algorithms” in image processing literature.
The proposed edge detection can be utilized for better
“object detection and recognition”, when it is used for the
“real time”. This method can also be used in various “device
and application areas” like “robots, automations and medi-
cal equipment” for safety. The “future work” covers area of
applications of the “proposed ICWFL method” in the above
“research ﬁelds” and to analyse the “results” with the other
“reported methods”. More particularly, the proposed ICWFL
method can be extended for real-time “biometric, authentica-
tion systems such as ﬁngerprint recognition, iris recognition
and palm recognition”.
Funding This research work was not funded by any organization or any
research Grant.
123

A robust edge detection algorithm based on feature-based image registration (FBIR) using…
3701
Declarations
Conﬂict of interest The authors declare that they have no conﬂict of
interest.
References
1. Katiyar, S.K., Arun, P.V.: Comparative analysis of common edge
detection techniques in context of object extraction. IEEE TGRS
50(11b), 68–79 (2014)
2. Becerikli, Y., Karan, T.M., Cabestany, J., Prieto, A., Sandoval, D.F.:
ANewFuzzyApproachforEdgeDetection,pp.943–951.Springer,
Berlin (2005)
3. Canny, J.F.: A computational approach to edge detection. IEEE
Trans. Pattern Anal. Mach. Intell. 8(6), 679–697 (1986)
4. Zitova, J.F., Sroubek, F.: Image Registration: A Survey and
Recent Advances. Institue of Information Theory and Automation
Academy of Sciences of Czech Republic Pod Uarenskou vezi4,
18208 Prague and Czech Republic (ICIP Tutorial) (2005)
5. Kumawat, A., Panda, S.: Feature detection and description in
remote sensing images using a hybrid feature detector. In: Interna-
tional Conference on Computational Intelligence and Data Science
(ICCIDS), Procedia Computer Science, vol. 132, pp. 277–287
(2018)
6. Kumawat, A., Panda, S.: Feature extraction and matching of
river-dam images in ODISHA using a novel feature detector. In:
International Conference on Computational Intelligence in Pattern
Recognition (CIPR). Springer (2018)
7. Bhardwaj, S., Mittal, A.: A survey on various edge detector tech-
niques. Proc. Technol. 4, 220–226 (2012)
8. El-Khamy, S.E., Lotfy, M., El-Yamany, N.: A modied fuzzy Sobel
edgedetector.In:ProceedingsofIEEE17thNationalRadioScience
Conference, pp. 1–9 (2000)
9. Gonzalez, R., Woods, R.: Digital image processing. 2nd Edition,
Prentice Hall, Upper Saddle River (2002)
10. Xuan, L., Hong, Z.: An improved CANNY edge detection algo-
rithm. In: Proceedings of 8th IEEE International Conference on
Software Engineering and Service Science (ICSESS), pp. 275–278
(2017)
11. Mittal, M. et al.: An Efﬁcient Edge Detection Approach to Pro-
vide Better Edge Connectivity for Image Analysis. IEEE Access
7, 33240–33255 (2019). https://doi.org/10.1109/ACCESS.2019.
2902579
12. Peli, T., Malah, D.: A study of edge detection algorithms. Comput.
Graph. Image Process. 20, 1–21 (1982)
13. Torre, V., Poggio, T.A.: On edge detection. IEEE Trans. Pattern
Anal. Mach. Intell. PAMI 8(2), 163–187 (1986)
14. Argyle, E.: Techniques for edge detection. Proc. IEEE 59, 285–286
(1971)
15. Marr, D., Hildreth, E.: Theory of edge detection. Proc. R. Soc.
Lond. Ser. B Biol. Sci. 207(1167), 187–217 (1980)
16. Heath, M., Sarkar, S., Sanocki, T., Bowyer, K.W.: Comparison
of edge detectors: a methodology and initial study. Comput. Vis.
Image Underst. 69(1), 38–54 (1998)
17. Shariﬁ, M., Fathy, M., Mahmoudi, M. T.: A classiﬁed and com-
parative study of edge detection algorithms. In: Proceedings.
International Conference on Information Technology: Coding and
Computing, pp. 117–120 (2002). https://doi.org/10.1109/ITCC.
2002.1000371
18. Meer,P.,Georgescu,B.:Edgedetectionwithembeddedconﬁdence.
IEEE Trans. Pattern Anal. Mach. Intell. 23(12), 1351–1365 (2001).
https://doi.org/10.1109/34.977560
19. Mathura, N., Mathur, S., Mathur, D.: A novel approach to improve
Sobel edge detector. In: 6th (ICACC) International Conference on
Advances in Computing and Communications (2016)
20. Samant, S., Salvi, M., Sabuwala, M.H.: Edge detection based on
fuzzy logic. Int. J. Sci. Eng. Res. 5(9), 266 (2014)
21. Melin, P., Gonzalez, C. I., Castro, J. R., Mendoza O., Castillo, O.:
Edge-Detection Method for Image Processing Based on General-
izedType-2FuzzyLogic.IEEETransFuzzySyst 22(6),1515–1525
(2014). https://doi.org/10.1109/TFUZZ.2013.2297159
22. Pugina, E.V., Zhiznyakova, A.L.: Edge detection in remote sensing
images based on fuzzy image representation. In: 3rd Interna-
tionalConferenceonInformationTechnologyandNanotechnology
(2017)
23. Moya-Albor, E., Ponce, H., Brieva, J.: An edge detection method
using a fuzzy ensemble approach. Acta Polytech. Hung. 14(3),
149–168 (2017)
24. Alshennawy, A.A., Aly, A.A.: Edge detection in digital images
using fuzzy logic technique. World Acad. Sci. Eng. Technol. 5(4),
264–269 (2009)
25. Aborisade, D.O.: Fuzzy logic based digital image edge detection,
global. J. Comput. Sci. Technol. 10(14), 78–83 (2010)
26. Kaur, G.: Image enhancement and its techniques, a review. Int. J.
Comput. Trends Technol. (IJCTT) 3(12), 148–151 (2014)
27. Abdullah-Ai-Nahid, Khan, T.M., Kong, Y.: Performance analysis
of integrated canny and fuzzy-logic based (2-by-2 cell block) edge-
detection algorithms. In: UKSim-AMSS 10th European Modelling
Symposium on Computer Modelling and Simulation, pp. 64–69.
Institute of Electrical and Electronics Engineers (IEEE), Piscat-
away, NJ (2016). https://doi.org/10.1109/EMS.2016.021
28. Chung, I. Chen, Y. Pal, N. R.: Feature Selection With Controlled
Redundancy in a Fuzzy Rule Based Framework. IEEE Trans
Fuzzy Syst 26(2), 734–748. https://doi.org/10.1109/TFUZZ.2017.
2688358
29. Banerjee, A., Das, N. Santosh, K.C.: Weber local descriptor for
image analysis and recognition: a survey. Vis Comput (2020).
https://doi.org/10.1007/s00371-020-02017-x
30. Ahmad, S., Khan, M.F.: Multimodal non-rigid image registration
based on elastodynamics. J. Vis. Comput. 34, 21–27 (2018)
31. Gonzalez, C.I., Melin, P., Castro, J.R., Castillo, O.: Edge detection
approach based on type-2 fuzzy images. J. Multiple Valued Log.
Soft Comput. 33, 431–458 (2019)
32. Ontiveros-Robles, E., Melin, P., Castillo, O., Gonzalez, J.: Design
and FPGA implementation of real-time edge detectors based on
interval type-2 fuzzy systems. J. Multiple Valued Log. Soft Com-
put. 33, 295–320 (2019)
33. Martínez, G.E., Gonzalez, C.I., Mendoza, O., Melin, P.: General
Type-2 Fuzzy Sugeno Integral for Edge Detection. J Imag 5(8), 71
(2019). https://doi.org/10.3390/jimaging5080071
34. Gonzalez, C.I., Melin, P., Castro, J.R., Castillo, O., Mendoza, O.:
Optimizationofintervaltype-2fuzzysystemsforimageedgedetec-
tion. Appl. Soft Comput. 47, 631–643 (2016)
35. Gonzalez, C.I., Melin, P., Castro, J.R., Mendoza, O., Castillo, O.:
An improved Sobel edge detection method based on generalized
type-2 fuzzy logic. Soft Comput. 20(2), 773–784 (2016)
36. Renjie, S., Ziqi, Z., Haiyang, L.: Edge connection based Canny
edge detection algorithm. Pattern Recognit. Image Anal. 27, 740–
747 (2017)
37. Dhivya, R., Prakash, R.: Edge detection of satellite image using
fuzzy logic. Cluster Comput. 22, 11891–11898 (2019)
38. Anas, E.: Edge detection techniques using fuzzy logic. In: 3rd Inter-
national Conference on Signal Processing and Integrated Networks
(SPIN) (2016)
39. Wang, Z., Bovik, A.C.: A universal image quality index. IEEE
Signal Process. Lett. 9(3), 81–84 (2002)
Publisher’s Note Springer Nature remains neutral with regard to juris-
dictional claims in published maps and institutional afﬁliations.
123

3702
A. Kumawat, S. Panda
Mrs. Anchal Kumawat received
MCA
degree
from
Maharishi
Dayanand Saraswati University
(MDSU), Ajmer, Rajasthan. Cur-
rently, she is pursuing PhD degree
under guidance of Dr. Sucheta
Panda, Department of Computer
Application, Veer Surendra Sai
University of Technology (VSSUT),
Burla, Sambalpur, Odisha, India.
Her
research
interests
include
image understanding, image anal-
ysis, and network simulation.
Dr. Sucheta Panda received her
PhD degree from National Insti-
tute of Technology (NIT), Rourkela,
Odisha, India. Currently, she is
working as Associate Professor
at the Department of Computer
Application, Veer Surendra Sai Uni-
versity of Technology (VSSUT),
Burla, Sambalpur, Odisha, India.
Her research interests include com-
puter vision, image understand-
ing, image analysis, and machine
learning.
123

