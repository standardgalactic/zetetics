Compsci 201
Collections, Hashing, Objects
2/5/2020
CompSci 201, Spring 2020
1
Susan Rodger
February 5, 2020
Glitchy App?
2/5/2020
CompSci 201, Spring 2020
2
Glitchy App?
2/5/2020
CompSci 201, Spring 2020
3
H is for …
• Hashing
• What better way to have a bucket list?
• Hexadecimal
• ABC is 10,11,12
• Base 16 > Base 2?
2/5/2020
CompSci 201, Spring 2020
4

Announcements
• Assignment P2 out later this week
• APT-3 due Tues, Feb 4, Extended to Thurs Feb 6
• Last chance to turn in Friday til 11:59pm
• Discussion 5 on Feb 10
• Prepare for exam
• Exam next week, Feb 14
2/5/2020
CompSci 201, Spring 2020
5
PFWBVDW
• Interfaces: List, Set, and Map
• When it makes sense to use general type
• Empirical and Analytical measures of efficiency
• Maps: API and Problem Solving
• Keys and Values 
• Big-Oh and O-Notation
• Building a mathematical formalism with intuition
2/5/2020
CompSci 201, Spring 2020
6
Midterm Coming Feb 14
• How much code have you written with paper and a 
writing utensil?
• Tests should measure what you've practiced
• Practice writing code on paper! 
• Midterm review and previous tests
• These are the best practice available
• Will practice in Discussion
• Logistics
• Start on time, end on time, accommodations
• 1 page front and back of notes you bring and leave
2/5/2020
CompSci 201, Spring 2020
7
Breakfast 201 was yummy!
• Wed. Feb 5 9:30am
• 30 minutes, discuss whatever with me
• Enjoy breakfast
• More breakfasts comingl…
2/5/2020
CompSci 201, Spring 2020
8

The hashCode contract
• Every object has .hashCode() method
• Inherited from Object, but typically overridden
• Use @Override and read online
• Must respect .equals(): If a.equals(b) ?
• a.hashCode() == b.hashCode()
• Converse not true! There will be collisions
2/5/2020
CompSci 201, Spring 2020
9
When Strings Collide
• Generate strings that will collide
• Find such strings in the wild
2/5/2020
CompSci 201, Spring 2020
10
String
hashCode
ayay
3009136
ayBZ
3009136
bZay
3009136
bZbZ
3009136
String
hashCode
buzzards
-931102253
righto
-931102253
snitz
109586548
unprecludible
109586548
Default: Object.equals, .hashCode
When you do not override…
• For Objects p and q:
• p.equals(q) is the same as p == q
• Do p and q reference/point to same object
• For Object p
• p.hashCode() is location in memory of object
• Thus: if p == q then 
• p.hashCode() == q.hashCode()
2/5/2020
CompSci 201, Spring 2020
11
Default: Object.equals, .hashCode
When you do not override…
• For Objects p and q:
• p.equals(q) is the same as p == q
• Do p and q reference/point to same object
• For Object p
• p.hashCode() is location in memory of object
• Thus: if p == q then 
• p.hashCode() == q.hashCode()
2/5/2020
CompSci 201, Spring 2020
12
BE SURE 
TO
OVERRIDE

Summary: ArrayList and HashSet
• Both have .add, .addAll,  and more
• Both iterable:for(Elt e : collection)
• Both have .contains leveraging .equals
• HashSet also uses .hashCode to reduce the 
collection iterated over: locker collisions
• Object hygiene when developing your classes
• .toString(), .equals(), .hashCode()
2/5/2020
CompSci 201, Spring 2020
13
When Strings Collide
2/5/2020
CompSci 201, Spring 2020
14
https://www.youtube.com/watch?v=HeTShE2PiQI
When Strings Collide
• Generate strings that will collide
• Find such strings in the wild
2/5/2020
CompSci 201, Spring 2020
15
String
hashCode
ayay
3009136
ayBZ
3009136
bZay
3009136
bZbZ
3009136
String
hashCode
buzzards
-931102253
righto
-931102253
snitz
109586548
unprecludible
109586548
Concept: Inheritance
• In Java, every class extends Object
• Gets methods by default: .toString, .hashCode, 
.equals, and more
• Inherit method + implementation
• Subclass can override base class methods
• Make .equals work for Point class
2/5/2020
CompSci 201, Spring 2020
16

Work in 201
• How important are APTs?
• How important are APT quizzes?
• How important are assignments?
• Earlier assignments, later assignments?
• How important: reading and WOTO in-class
• How important is reading?
2/5/2020
CompSci 201, Spring 2020
17
Alphabetical Order
• Encryption? Maybe not
• https://www2.cs.duke.edu/csed/newapt/encryption.html
• Think about high-level algorithm
• Apply your algorithm to: "pop", "array", "deeds"
• What do we need to do to code algorithm?
• Recall: 'b' + 1 == 'c'
• Recall: array['h'] is allowed, 'h' can be index
2/5/2020
CompSci 201, Spring 2020
18
Idea with Encryption APT
int[] allchars = new int[256];
int nextLet is    'a'
String answer = "";
message is  feed
answer is 
ch is 
2/5/2020
CompSci 201, Spring 2020
19
96
97
98
99
100
0
0
0
0
0
‘a’
101
102
103
‘f’
‘e’
‘d’
‘b’
‘c’
‘g’
0
0
0
Idea with Encryption APT
int[] allchars = new int[256];
int nextLet is    'a'
String answer = "";
message is  feed
answer is 
ch is
2/5/2020
CompSci 201, Spring 2020
20
96
97
98
99
100
0
0
0
0
0
‘a’
101
102
103
‘f’
‘e’
‘d’
‘b’
‘c’
‘g’
0
0
0
Iterate over chars in message

Idea with Encryption APT
int[] allchars = new int[256];
int nextLet is    'a'
String answer = "";
message is  feed
answer is
ch is 
2/5/2020
CompSci 201, Spring 2020
21
96
97
98
99
100
0
0
0
0
‘a’
‘a’
101
102
103
‘f’
‘e’
‘d’
‘b’
‘c’
‘g’
0
0
0
Iterate over chars in message
1
97
98
99
100
0
0
101
102
1
‘f’
“a”
0
Idea with Encryption APT
int[] allchars = new int[256];
int nextLet is    ‘b'
String answer = "";
message is  feed
answer is
ch is 
2/5/2020
CompSci 201, Spring 2020
22
96
97
98
99
100
0
0
0
0
‘a’
‘a’
101
102
103
‘f’
‘e’
‘d’
‘b’
‘c’
‘g’
0
0
0
Update nextLet
‘f’
“a”
Idea with Encryption APT
int[] allchars = new int[256];
int nextLet is    ‘b'
String answer = "";
message is  feed
answer is
ch is 
2/5/2020
CompSci 201, Spring 2020
23
96
97
98
99
100
0
0
0
0
‘a’
‘a’
101
102
103
‘f’
‘e’
‘d’
‘b’
‘c’
‘g’
0
0
0
Process next character
‘e’
“a”
Idea with Encryption APT
int[] allchars = new int[256];
int nextLet is    ‘b'
String answer = "";
message is  feed
answer is
ch is 
2/5/2020
CompSci 201, Spring 2020
24
96
97
98
99
100
0
0
0
0
‘a’
‘a’
101
102
103
‘f’
‘e’
‘d’
‘b’
‘c’
‘g’
0
0
0
Process next character
‘e’
“a”
1
1
97
98
99
100
101
1
‘b’

Idea with Encryption APT
int[] allchars = new int[256];
int nextLet is    ‘b'
String answer = "";
message is  feed
answer is
ch is 
2/5/2020
CompSci 201, Spring 2020
25
96
97
98
99
100
0
0
0
0
‘a’
‘a’
101
102
103
‘f’
‘e’
‘d’
‘b’
‘c’
‘g’
‘b’
0
0
Update answer
‘e’
“ab”
Idea with Encryption APT
int[] allchars = new int[256];
int nextLet is    ‘c'
String answer = "";
message is  feed
answer is
ch is 
2/5/2020
CompSci 201, Spring 2020
26
96
97
98
99
100
0
0
0
0
‘a’
‘a’
101
102
103
‘f’
‘e’
‘d’
‘b’
‘c’
‘g’
‘b’
0
0
Update nextLet
‘e’
“ab”
Idea with Encryption APT
int[] allchars = new int[256];
int nextLet is    ‘c'
String answer = "";
message is  feed
answer is
ch is 
2/5/2020
CompSci 201, Spring 2020
27
96
97
98
99
100
0
0
0
0
‘a’
‘a’
101
102
103
‘f’
‘e’
‘d’
‘b’
‘c’
‘g’
‘b’
0
0
Process next character
‘e’
“ab”
Idea with Encryption APT
int[] allchars = new int[256];
int nextLet is    ‘c'
String answer = "";
message is  feed
answer is
ch is 
2/5/2020
CompSci 201, Spring 2020
28
96
97
98
99
100
0
0
0
0
‘a’
‘a’
101
102
103
‘f’
‘e’
‘d’
‘b’
‘c’
‘g’
‘b’
0
0
‘e’ already has a value, use it
‘e’
“ab”
1
1
1

Idea with Encryption APT
int[] allchars = new int[256];
int nextLet is    ‘c'
String answer = "";
message is  feed
answer is
ch is 
2/5/2020
CompSci 201, Spring 2020
29
96
97
98
99
100
0
0
0
0
‘a’
‘a’
101
102
103
‘f’
‘e’
‘d’
‘b’
‘c’
‘g’
‘b’
0
0
Update answer
‘e’
“abb”
Idea with Encryption APT
int[] allchars = new int[256];
int nextLet is    ‘c'
String answer = "";
message is  feed
answer is
ch is 
2/5/2020
CompSci 201, Spring 2020
30
96
97
98
99
100
0
0
0
0
‘a’
‘a’
101
102
103
‘f’
‘e’
‘d’
‘b’
‘c’
‘g’
‘b’
0
0
Don’t update nextLet
‘e’
“abb”
Idea with Encryption APT
int[] allchars = new int[256];
int nextLet is    ‘c'
String answer = "";
message is  feed
answer is
ch is 
2/5/2020
CompSci 201, Spring 2020
31
96
97
98
99
100
0
0
0
0
‘a’
‘a’
101
102
103
‘f’
‘e’
‘d’
‘b’
‘c’
‘g’
‘b’
0
0
Process next character
‘d’
“abb”
Idea with Encryption APT
int[] allchars = new int[256];
int nextLet is    ‘c'
String answer = "";
message is  feed
answer is
ch is 
2/5/2020
CompSci 201, Spring 2020
32
96
97
98
99
100
0
0
0
0
‘a’
‘a’
101
102
103
‘f’
‘e’
‘d’
‘b’
‘c’
‘g’
‘b’
0
0
Process next character
‘d’
“abb”
ed
10
10
10
b”
97
98
99
00
10
‘c’

Idea with Encryption APT
int[] allchars = new int[256];
int nextLet is    ‘c'
String answer = "";
message is  feed
answer is
ch is 
2/5/2020
CompSci 201, Spring 2020
33
96
97
98
99
100
0
0
0
0
‘a’
‘a’
101
102
103
‘f’
‘e’
‘d’
‘b’
‘c’
‘g’
‘b’
0
Update answer
‘d’
“abbc”
‘c’
Idea with Encryption APT
int[] allchars = new int[256];
int nextLet is    ‘d'
String answer = "";
message is  feed
answer is
ch is 
2/5/2020
CompSci 201, Spring 2020
34
96
97
98
99
100
0
0
0
0
‘a’
‘a’
101
102
103
‘f’
‘e’
‘d’
‘b’
‘c’
‘g’
‘b’
0
Word translated, Update nextLet
‘d’
“abbc”
‘c’
How often does a string occur?
• Strings stored in ArrayList?
• Call 
Collections.frequency(list,word)
• If in array a rather than ArrayList?
Collections.frequency(Arrays.asList(a), word)
ArrayList<String> list is
[“cat”, “cat”, “dog”, “fish”, “dog”, “cat”]
Collections.frequency(list, “dog”) is
Collections.frequency(list, “cat”) is 
2/5/2020
CompSci 201, Spring 2020
36
How often does a string occur?
• Strings stored in ArrayList?
• Call 
Collections.frequency(list,word)
• If in array a rather than ArrayList?
Collections.frequency(Arrays.asList(a), word)
ArrayList<String> list is
[“cat”, “cat”, “dog”, “fish”, “dog”, “cat”]
Collections.frequency(list, “dog”) is
Collections.frequency(list, “cat”) is 
2/5/2020
CompSci 201, Spring 2020
37
2
3

How often does a string occur?
• Is Collections.frequency efficient? Does it matter?
• Use Collections.frequency
• Can create parallel arrays or use HashMap
• Keep count[k] # occurrences of word[k]
• Use HashMap if you know that
2/5/2020
CompSci 201, Spring 2020
38
WOTO (correctness counts)
http://bit.ly/201spring20-0205-1
2/5/2020
CompSci 201, Spring 2020
39
Shafi Goldwasser
•
2012 Turing Award Winner
•
RCS professor of computer science 
at MIT
•
Twice Godel Prize winner
•
Grace Murray Hopper Award
•
National Academy
•
Co-inventor of zero-knowledge 
proof protocols
Work on what you like, what 
feels right, I know of no other 
way to end up doing creative 
work
2/5/2020
CompSci 201, Spring 2020
40
Why use an interface?
2/5/2020
CompSci 201, Spring 2020
41

Why use an interface?
2/5/2020
CompSci 201, Spring 2020
42
HDMI
Bluetooth
Application
Programming
Interface
What is a Java Interface?
• An enforceable abstraction: methods required
• Set, Map, List interfaces
• Can implement more than one interface
• Can extend only one base-class!
• Arguable: Mammal is an interface
• Do NOT inherit method implementations
• Do inherit methods (names, types, etc.)
2/5/2020
CompSci 201, Spring 2020
43
Analogy: Mammals
• Dragon? 
• Mammals
• Birth to live young
• Hair
• Warm-blooded
• Like an interface!
2/5/2020
CompSci 201, Spring 2020
44
Analogy: Mammals
• Dragon? 
• Mammals
• Birth to live young
• Hair
• Warm-blooded
• Like an interface!
2/5/2020
CompSci 201, Spring 2020
45
X

Why use an Interface?
• Work with frameworks, e.g., java.util.Collection
• Iterable, Serializable, and more – use with Java
• ArrayList, LinkedList, TreeSet, HashSet all …
• .clear(), .contains(o), 
.addAll(..), .size(), … .toArray()
https://docs.oracle.com/en/java/javase/11/docs/api/j
ava.base/java/util/Collection.html
2/5/2020
CompSci 201, Spring 2020
46
There are two kinds …
• There are 10 kinds of people in the world …
• Those who understand binary and …
• Is this funny?
• HashSet/HashMap and TreeSet/TreeMap
• Tradeoffs in efficiency, organization
• LinkedList/ArrayList
• Tradeoffs in efficiency, organization
2/5/2020
CompSci 201, Spring 2020
47
Link v Array
• Getting between two elements
• Unsnap/Snap v Shift/Insert
2/5/2020
CompSci 201, Spring 2020
48
Preliminaries
• List<..> is an interface in java.util
• LinkedList<..> and ArrayList<..>
• Implement the interface
• What is null?
• Variable value
• No object 
referenced
2/5/2020
CompSci 201, Spring 2020
49

Benchmark: Empirical Analysis
•
https://coursework.cs.duke.edu/201spring20/classcode/
• In class ListSplicer, method removeFirst
• List<String> parameter 
• ArrayList<String> argument passed
• LinkedList<String> argument passed
• Only call List<..> interface methods
• At runtime, call the actual object method
• LinkedList.add v ArrayList.add
2/5/2020
CompSci 201, Spring 2020
50
list.remove(0)
2/5/2020
CompSci 201, Spring 2020
51
• What is “faster”? LinkedList or ArrayList
list.remove(0) – where 
called
2/5/2020
CompSci 201, Spring 2020
52
list.remove(0)
2/5/2020
CompSci 201, Spring 2020
53
• What is “faster”? LinkedList or ArrayList
y = -4E-05x + 0.0009
y = 0.0064x2 - 0.0156x + 0.0238
R² = 0.9984
0
0.2
0.4
0.6
0.8
1
1.2
1.4
RemoveFirst
linked
array
Linear (linked)
Poly. (array)

Access all elements randomly
2/5/2020
CompSci 201, Spring 2020
54
• What is “faster”? LinkedList or ArrayList
Access all elements randomly
2/5/2020
CompSci 201, Spring 2020
55
• What is “faster”? LinkedList or ArrayList
y = 0.1292x2 - 0.7137x + 1.3337
R² = 0.9889
y = 0.0002x + 5E-05
R² = 0.8169
0
5
10
15
20
25
10000 20000 30000 40000 50000 60000 70000 80000 90000 100000110000120000130000140000150000
Random Access
linked
array
Poly. (linked)
Linear (array)

