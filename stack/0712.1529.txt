†
 
Ontology and Formal Semantics  
(Integration Overdue) † 
 
 
walid s. saba 
 
 
American Institutes for Research 
wsaba@air.org 
 
 
In this note we suggest that difficulties encountered in natu-
ral language semantics are, for the most part, due to the use 
of mere symbol manipulation systems that are devoid of any 
content. In such systems, where there is hardly any link with 
our commonsense view of the world, and it is quite difficult 
to envision how one can formally account for the consider-
able amount of content that is often implicit, but almost 
never explicitly stated in our everyday discourse.  
The solution, in our opinion, is a compositional semantics 
grounded in an ontology that reflects our commonsense view 
of the world and the way we talk about it in ordinary lan-
guage. In the compositional logic we envision there are onto-
logical (or first-intension) concepts, and logical (or second-
intension) concepts, and where the ontological concepts in-
clude not only Davidsonian events, but other abstract ob-
jects as well (e.g., states, processes, properties, activities, at-
tributes, etc.)  
It will be demonstrated here that in such a framework, a 
number of challenges in the semantics of natural language 
(e.g., metonymy, intensionality, metaphor, etc.) can be prop-
erly and uniformly addressed. 
 
 
 
 
 
 
    Draft
Draft
Draft
Draft    – an extended version of
 an extended version of
 an extended version of
 an extended version of        Saba, W. S. (2007), Compositional Semantics 
Grounded in Commonsense Metaphysics, 13th Portuguese Conference on Artifi-
cial Intelligence – EPIA 2007.    
 

 
 
 
 
 
 
 
2 
                                                  Ontology and Formal Semantics 
1   Introduction 
 
Apparently, and perhaps for computational effectiveness, as Givon 
(1984) once suggested, in using ordinary spoken language to express 
our thoughts we tend to do so by using the least possible effort; by, 
for one thing, uttering the least number of words that are needed to 
convey a particular thought. Thus, for example, we make statements 
such as the following: 
 
(1) 
a. Simon is a rock.1 
 
b. The ham sandwich wants another beer. 
 
c. Sheba is articulate. 
 
d. Jon bought a brick house. 
 
e. Carlos likes to play bridge. 
 
f. Jon visited a house on every street. 
 
Speakers of ordinary language, however, understand these sentences to 
mean the following, respectively:  
 
(2) 
a. Simon is [as solid as] a rock. 
 
b. The [person eating the] ham sandwich wants another beer. 
 
c. Sheba is [an] articulate [person]. 
 
d. Jon bought a house [made of] brick. 
 
e. Carlos likes to play [the card game] bridge. 
 
f. Jon visited a [different] house on every street. 
 
Clearly, any compositional semantics must somehow account for this 
[missing text], as such sentences are quite common and are not at all 
exotic, farfetched, or contrived. Traditionally, linguists and semanti-
cists have dealt with such sentences by investigating various phenom-
ena such as metaphor (2a); metonymy (2b); textual entailment (2c); 
nominal compounds (2d); lexical ambiguity (2e), and quantifier scope 
ambiguity (2f), to name a few. However, and although they seem to 
have a common denominator, it is somewhat surprising that in look-
ing at the literature one finds that these phenomena have been stud-
ied quite independently; to the point where there is very little, if any, 
that seems to be common between the various proposals that are of-
ten suggested.  
                                                 
1 ‘Simon’ as in ‘Simon & Garfunkel’! 

 
 
 
 
 
 
 
W. Saba 
                                                                                   3 
In our opinion this state of affairs is very problematic, as the 
prospect of a distinct paradigm for every single phenomenon in natu-
ral language cannot be realistically contemplated. Moreover, and as 
we hope to demonstrate in these notes, we believe that there is indeed 
a common symptom underlying these (and other) challenging prob-
lems in the semantics of natural language.  
Before we make our case, let us at this very early juncture sug-
gest this informal explanation for the missing text in (2): solid is 
(one of) the most salient features of a rock (2a); people, and not 
sandwiches, have ‘wants’, and eat is the most salient relation that 
holds between a person and a sandwich (2b)2; person is the type of 
object of which articulate is the most salient property (2c); made-
of is the most salient relation between an artifact (house) and a 
substance (brick) (2d); play is the most salient relation that holds 
between a person and a game, and not some structure (and, bridge 
is a game); and, finally, in the (possible) world that we live in, a 
house cannot be located on more than one street. 
The point of this informal explanation is to suggest that the prob-
lem underlying most challenges in the semantics of natural language 
seems to lie in semantic formalisms that employ logics that are mere 
abstract symbol manipulation systems; systems that are devoid of any 
ontological content. What we suggest, instead, is a compositional se-
mantics that is grounded in commonsense metaphysics, a semantics 
that views “logic as a language”; that is, a logic that has content, and 
ontological content, in particular, as has been recently and quite con-
vincingly advocated by Cocchiarella (2001). 
In these working notes we propose exactly such an approach. In 
particular, we will: (i) propose a semantics that is grounded in an 
ontology that reflects our commonsense view of reality and the way 
we talk about it in ordinary language; (ii) we will subsequently for-
malize the notion of ‘salient property’ and ‘salient relation’ and sug-
gest how a strongly-typed compositional system can possibly utilize 
such information to explain some complex phenomena in natural lan-
guage; (iii) it will be demonstrated that such a strongly-typed and 
ontologically grounded compositional semantics might also provide an 
                                                 
2 Surely, a person can very much buy, sell, make, prepare, watch, or hold, etc. a 
sandwich. Why eat might be a more salient relation between a person and a sandwich is 
a question we shall pay considerable attention to below.  

 
 
 
 
 
 
 
4 
                                                  Ontology and Formal Semantics 
explanation for the interpretation of anaphora without the need for 
complex discourse structures that may compromise compositionality; 
and (iv) we shall finally discuss how such an assumed ontological 
structure might be discovered, rather than invented, using natural 
language itself as a guide.  
Before we commence, we need to make a few important notes. 
First, this is, to a large extent, ‘work in progress’, and thus it should 
not in any way be considered as a complete proposal. We are in fact 
putting out these ideas in the hope of soliciting some interest, and 
thus some novel ideas as to how this proposal might become a work-
ing theory. Second, as most of the ideas presented here are new, we 
chose to introduce our formalism in steps, through examples, modify-
ing and extending our definitions as we proceed. It is hoped, however, 
that by the end we do achieve a somewhat coherent picture of a new 
compositional semantics that integrates commonsense reasoning in 
the interpretation of ordinary language. 
 
 
2    Logical and Ontological Concepts 
 
2.1    Types vs. Predicates 
 
In our representation concepts belong to two quite distinct categories: 
(i) ontological concepts, such as animal, substance, entity, arti-
fact, event, state, etc., which are assumed to exist in a subsumption 
hierarchy, and where the fact that an object of type human is (ulti-
mately) an object of type entity is expressed as human
entity
⊑
; 
and (ii) logical concepts, which are the properties (that can be said) 
of and the relations (that can hold) between ontological concepts.  
The following are examples that illustrate the difference between 
logical and ontological concepts, where the superscript a denotes ab-
stract (or conceptual) existence:   
 
(3) 
a. 
x
( ::
)
articulate
human  
 
b. 
x
y
( ::
,
::
)
human
event
attend
 
 
c. 
x
( ::
)
imminent
a
event
 
 
d. 
x
( ::
)
dancer
human  
 

 
 
 
 
 
 
 
W. Saba 
                                                                                   5 
This is what is meant by ‘embedding’ commonsense metaphysics into 
our semantics, as these predicates are supposed to reflect the fact that 
in our everyday discourse: the property articulate is ordinarily said 
of objects that must be of type human (3a); that we can always speak 
of objects of type human that attended some event (3b); that immi-
nent is ordinarily said of an event that does not (yet) actually exist; 
and dancer is a property that is ordinarily said of objects that must 
be of type human (3d).  
In addition to logical and ontological concepts, there are also 
proper nouns, which are the names of objects; objects that could be of 
any type. A proper noun, such as sheba, is interpreted as 
 
(4) 
1
sheba
P
x
x
sheba
P x
[(
)(
( ::
,‘
’)
( :: ))]
λ
∃
⇒
∧


noo
thing
t
,  
 
where 
x
s
( ::
, )
noo
thing
 is true of some individual object x (which 
could be any thing), and s if (the label) s is the name of x, and t is 
presumably the type of objects that P applies to (to simplify notation 
we will often write  
1
sheba
P
sheba
P sheba
[(
::
)( (
:: ))]
λ
∃
⇒


thing
t
). 
Consider now the following, where we assumed
x( ::
)
thief
human , i.e., 
that thief is a property that is ordinarily said of objects that must 
be of type human, and where
x y
( , )
be
 is true when x and y are the 
same objects3: 
 
(5) 
sheba is a thief

 
 
sheba
x
x
sheba x
∃
∃
1
(
::
)(
)(
( ::
)
(
, ))
⇒
be
thing
human
thief
∧
 
 
This states that there is a unique object named sheba, some y which 
must be an object of type human, such that y is a thief and sheba is 
that y. Since 
sheba y
(
, )
eq
, we could replace y by the constant sheba 
obtaining the following: 
  
(6) 
sheba is a thief

 
 
sheba
x
x
sheba x
∃
∃
1
(
::
)(
)(
( ::
)
(
, ))
⇒
be
thing
human
thief
∧
 
 
sheba
sheba
1
(
::
)(
(
::
))
∃
thief
thing
human
⇒
 
   
Note now that sheba is associated with more than one type in a single 
scope. In these situations a type unification must occur, where a type 
                                                 
3 We are using the fact that, when a is a constant and P is a predicate, Pa
x Px
x
a
[
(
)]
≡∃
=
∧
 
(see Gaskin, 1995). 

 
 
 
 
 
 
 
6 
                                                  Ontology and Formal Semantics 
unification (
)
•
s
t  between two types s and t, and where Q
∃∀
,
,
∈{
}  
is defined (for now) as follows 
 
 
 
 
(7) 
 
 
 
where R is some salient relation that might exist between objects of 
type s and objects of type t.  That is, in situations where there is no 
subsumption relation between s and t the type unification results in 
keeping the variables of both types and in introducing some salient 
relation between them (we shall discuss these situations below). Fi-
nally when the type unification involves concrete (or actual) and ab-
stract (or conceptual) existence the following rules apply:  
 
(8) 
(
)
(
)
(
)
•
=
•
=
•
a
a
s
t
s
t
s
t  
 
(
)
(
)
•
=
•
a
a
a
s
t
s
t
 
 
Going to back to (6), the type unification in this case is actually quite 
simple, since (
)
⊑
human
thing : 
 
(9) 
sheba is a thief

 
 
sheba
sheba
1
(
::
)(
(
::
))
∃
thief
thing
human
⇒
 
 
sheba
sheba
1
(
:: (
))(
(
))
∃
•
thief
thing
human
⇒
 
 
sheba
sheba
1
(
::
)(
(
))
∃
thief
human
⇒
 
 
In the final analysis, therefore, 
sheba
(
)
thief
, which is the standard 
first-order logic translation of  ‘Sheba is a thief’ can be seen as an 
oversimplified representation of ‘there is a unique object named sheba, 
an object that must be of type human, and such that sheba is a thief’. 
As an aside, since 
y sheba
( ,
)
be
, we could have also replaced sheba by 
y in (5) resulting in  
sheba is a thief
y
y
∃1
(
::
)(
( ))


human thief
⇒
, 
which is an existential generalization of (9). That is, we would have 
obtained a weaker reading, namely that ‘some object of type human 
(or ‘someone’) is a thief’, which is an acceptable entailment of ‘sheba 
is a thief’. 
Qx
P x
Qx
P x
if 
Qx
P x
if 
Qx
Qy
x y
P y
if 
msr
otherwise
(
:: (
))( ( ))
(
:: )( ( )),
(
)
(
:: )( ( )),
(
)
(
:: )(
:: )(
( , )
( )),
(
)(
( , ))
,
•


≡
∧
∃
=

⊥

s
t
s
s
t
t
t
s
s
t
s t
⊑
⊑
R
R R

 
 
 
 
 
 
 
W. Saba 
                                                                                   7 
Finally, note the clear distinction between ontological concepts 
(such as human), which Cocchiarella (2001) calls first-intension con-
cepts, and logical (or second-intension) concepts, such as thief(x).  
That is, what ontologically exist are objects of type human, not 
thieves, and thief is a mere property that we have come to use to 
talk of objects of type human4. Moreover, logical concepts such as 
thief are assumed to be defined by virtue of some logical expression, 
such as  
 
df
x
x
ϕ
∀
≡
(
::
)(
( )
),
human thief
  
 
where the exact nature of ϕ  might very well be susceptible to tempo-
ral, cultural, and other contextual factors, depending on what, at a 
certain point in time, a certain community considers an thief to be. 
In other words, while the property of being a thief that x may ex-
hibit is accidental (as well as temporal, cultural-dependent, etc.), the 
fact that some x is an object of type human (and thus an animal, etc.) 
is not. 
 
 
3   Semantics with Ontological Content 
 
 
With the simple machinery introduced thus far we can actually start 
looking at how the embedding of ontological types in logical concepts 
coupled with simple type unifications can explain a number of phe-
nomena that have proved problematic, such as intensionality, meton-
ymy and reference resolution. 
 
 
3.1  Intensional Verbs 
 
Consider the following sentences and their corresponding translation 
into standard first-order logic:  
 
(10) 
a. john found a unicorn
x
x
jon x
∃
(
)(
( )
(
, ))

 ⇒
∧
unicorn
find
 
 
 
b. john sought a unicorn
x
x
jon x
∃
(
)(
( )
(
, ))

 ⇒
∧
unicorn
seek
 
 
                                                 
4 Not recognizing the difference between logical (e.g., thief) and ontological concepts (e.g., 
human) is perhaps the reason why ontologies in most AI systems are rampant with multiple 
inheritance. 

 
 
 
 
 
 
 
8 
                                                  Ontology and Formal Semantics 
Note that 
x
x
∃
(
)(
( ))
unicorn
 can be inferred in both cases, although it 
is clear that ‘john sought a unicorn’ should not entail the existence of 
a unicorn. In addressing this problem, Montague (1960) suggested 
treating seek as an intensional verb that more or less has the meaning 
of ‘tries to find’; i.e. a verb of type 
e t t
e t
, , ,
,
〈〈〈
〉〉〈
〉〉, using the tools of 
a higher-order intensional logic. To handle contexts where there are 
intensional as well as extensional verbs, mechanisms such as the ‘type 
lifting’ operation of Partee and Rooth (1983) were also introduced. 
The type lifting operation essentially coerces the types into the lowest 
possible type, the assumption being that if ‘john sought and found’ a 
unicorn, then a unicorn that was initially sought, but subsequently 
found, must have an existence. 
In addition to unnecessary complication of the logical form, we 
believe the same intuition behind the ‘type lifting’ operation can be 
captured without the a priori separation of verbs into intensional and 
extensional ones, and in particular since most verbs seem to function 
intensionally and extensionally depending on the context. To 
illustrate this point further consider the following, where it is assumed 
that 
x
y
( ::
,
::
)
paint
a
human
entity
; that is, it is assumed that the 
object of paint does not necessarily (although it might) exist:  
 
(11) 
jon painted a dog

  
 
jon
d
jon
d
∃
∃
1
(
::
)(
::
)(
(
::
,
::
))
⇒
a
a
human
dog
human
entity
paint
 
 
jon
d
jon d
∃
∃
•
1
(
::
)(
::(
))(
(
, ))
⇒
a
a
human
dog
entity
paint
 
 
jon
d
jon d
∃
∃
•
1
(
::
)(
::(
) )(
(
, ))
⇒
a
human
dog
entity
paint
 
 
jon
d
jon d
∃
∃
1
(
::
)(
::
)(
(
, ))
⇒
a
human
dog
paint
 
 
Thus, ‘Jon painted a dog’ does not entail the existence of an actual 
dog, but a dog that only conceptually exists. However, consider now 
the following:  
 
(12) 
jon painted his own dog

  
 
jon
d
jon
d
∃
∃
1
(
::
)(
::
)(
(
::
,
::
))
⇒
a
human
dog
human
entity
own
 
                   
jon
d
(
::
,
::
))
a
human
entity
paint
∧
 
 
Note that the types of paint and own are the same, except that the 
object of own is an object that must exist, while that of paint is an 
object that need not necessarily exist. The trivial type unification be-
tween these predicates (recall 8 above) would result in the following:  

 
 
 
 
 
 
 
W. Saba 
                                                                                   9 
 
(13) 
jon painted his own dog

  
 
jon
d
∃
∃
1
(
::
)(
::
)
⇒
a
human
dog
 
              
jon
d
jon d
(
(
::
,
::
)
(
, ))
human
entity
own
paint
∧
 
 
Since 
•
=
(
)
a
dog
entity
dog , the final type unification would result in 
the following: 
 
(14) 
jon painted his own dog

  
 
jon
d
jon d
jon d
∃
∃
1
(
::
)(
::
)(
(
, )
(
, ))
⇒
human
dog own
paint
∧
 
 
In the final analysis, therefore, Jon’s paining of a dog does not entail 
the existence of a dog, but Jon’s paining of his dog does; since Jon’s 
owning of a dog entails its existence. 
The point of the above example was to illustrate that the notion 
of intensional verbs can be captured in this simple formalism without 
the type lifting operation, particularly since an extensional interpreta-
tion might at times be implied even if the ‘intensional’ verb does not 
coexist with an extensional verb in the same context. To illustrate, let 
us assume 
x
y
( ::
,
::
)
a
human
event
plan
; that is, that it always makes 
sense to say that some human is planning (or did plan) an event that 
need not (yet) actually exist. Consider now the following,    
 
(15) 
jon planned the trip

 
 
jon
e
jon
e
∃
∃
1
1
(
::
)(
::
)(
(
::
, ::
))
⇒
a
a
entity
trip
human
event
plan
 
 
jon
e
jon e
∃
∃
•
1
1
(
::
)(
::(
))(
(
, ))
⇒
a
a
human
trip
event
plan
 
 
jon
e
jon e
∃
∃
1
1
(
::
)(
::
)(
(
, ))
⇒
a
human
trip
plan
 
 
That is, saying ‘john planned the trip’ is simply saying that a specific 
object that must be a human has planned a specific trip, a trip that 
might not have actually happened5. Assuming 
e( ::
)
lengthy
event , 
however, i.e., that lengthy is a property that is ordinarily said of an 
(existing) event, then the interpretation of ‘john planned the lengthy 
trip’ should proceed as follows: 
 
(16) 
jon planned the lengthy trip

  
 
jon
e
∃
∃
1
1
(
::
)(
::
)
⇒
a
entity
trip
 
                                                 
5  Note that it is the trip (event) that did not necessarily happen, not the planning (ac-
tivity) for it.  

 
 
 
 
 
 
 
10 
                                                  Ontology and Formal Semantics 
 
      
jon
e
e
(
(
::
, ::
)
( ::
))
plan
lengthy
a
human
event
event
∧
 
Since
•
•
=
•
=
(
(
))
(
)
a
a
a
trip
event
event
trip
event
trip we finally get 
the following: 
 
(17) 
jon planned the trip

 
 
jon
e
jon e
e
∃
∃
1
1
(
::
)(
::
)(
(
, )
( ))
⇒
plan
lengthy
∧
human
trip
 
 
That is, there is a specific human named jon that has planned a spe-
cific trip, a trip that was lengthy.  
Finally, it should be noted here that the trip in (17) was finally 
considered to be an existing event due to other information contained 
in the same sentence. In general, however, this information can be 
contained in a larger discourse. For example, in interpreting ‘John 
planned the trip. It was lengthy’ the resolution of ‘it’ would force a 
retraction of the types inferred in processing ‘John planned the trip’, 
as the information that follows will ‘bring down’ the aforementioned 
trip from abstract to actual existence. This subject is clearly beyond 
the scope of this paper, but readers interested in the computational 
details of such processes are referred to (van Deemter & Peters, 
1996). 
 
3.2  On Dot (.) Objects 
In addition to handling so-called intensional verbs, our proposal seems 
to also appropriately handle other situations that, on the surface, 
seem to be addressing a different issue. For example, consider the fol-
lowing: 
 
(15) jon read the book and then he burned it 
 
In Asher and Pustejovsky (2005) it is argued that this is an example 
of what they term copredication; which is the possibility of incom-
patible predicates to be applied to the same type of object. It is ar-
gued that in (15), for example, ‘book’ must have what is called a dot 
type, which is a complex structure that in a sense carries the ‘infor-
mational content’ sense (which is referenced when it is being read) as 
well as the ‘physical object’ sense (which is referenced when it is be-
ing burned). Elaborate machinery is then introduced to ‘pick out’ the 
right sense in the right context, and all in a well-typed compositional 

 
 
 
 
 
 
 
W. Saba 
                                                                                   11 
logic. But this approach presupposes that one can enumerate, a pri-
ori, all possible uses of the word ‘book’ in ordinary language6. More-
over, copredication seems to be a special case of metonymy, where 
the possible relations that could be implied are in fact much more 
constrained. An approach that can explain both notions, and hope-
fully without introducing much complexity into the logical form, 
should then be more desirable.  
Let us first suggest the following: 
 
(16) a. 
x
y
( ::
,
::
)
read
human
content  
 
b. 
x
y
( ::
,
::
)
burn
human
physical  
 
That is, we are assuming here that speakers of ordinary language un-
derstand ‘read’ and ‘burn’ as follows: it always makes sense to speak 
of a human that read some content, and of a human that burned 
some physical object. Consider now the following: 
 
(16) 
jon read a book and then he burned it

  
 
jon
b
(
::
)(
::
)
∃
∃
1
⇒
entity
book  
 
  
jon
b
(
(
::
, ::
))
human
content
read
 
 
  
      
jon
b
(
::
, ::
))
human
physical
burn
∧
 
 
The type unification of jon is straightforward, as the agent of burn 
and read are of the same type. Concerning b, however, there are a 
pair of type unifications ((
)
)
•
•
book
physical
content that must oc-
cur, that would result in the following: 
 
(17) 
jon read a book and then he burned it

  
 
jon
b
(
::
)(
:: (
))
∃
∃
•
1
⇒
entity
book
content
 
 
  
                
jon b
jon b
(
(
, )
(
, )))
read
burn
∧
 
 
Again, since no subsumption relation exists between book and con-
tent, the two variables are kept and a salient relation between them 
is introduced, resulting in the following: 
 
(18) 
jon read a book and then he burned it

  
 
jon
b
c
(
::
)(
::
)(
::
)
∃
∃
∃
1
⇒
entity
book
content  
                                                 
6  Similar presuppositions are also made in a hybrid (connectionist/symbolic) ‘sense modu-
lation’ approach described in (Rais-Ghasem & Corriveau, 1998).  

 
 
 
 
 
 
 
12 
                                                  Ontology and Formal Semantics 
 
  
     
b c
jon c
jon b
(
( , )
(
, )
(
, ))
R
read
burn
∧
∧
 
That is, there is some unique object of type human (named jon), some 
book b, some content c, such that c is the content of b, and such that 
jon read c and burned b. 
 
 
3.3 Reference Resolution and the Retraction of Type 
 
Inferences 
 
Consider the following, where it is assumed that own is a relation 
that holds between objects of type human and objects of type entity: 
 
(16) 
Jon owns Das Kapital

  
 
jon
dasKapital
∃
∃
1
1
(
::
)(
::
)
⇒
human
book  
 
  
jon
dasKapital
(
(
::
,
::
))
human
entity
own
 
 
jon
dasKapital
∃
∃
•
1
1
(
::
)(
::(
))
⇒
human
book
entity
 
 
  
jon dasKapital
(
(
,
))
own
 
 
jon
dasKapital
jon dasKapital
∃
∃
1
1
(
::
)(
::
)(
(
,
))
⇒
human
book own
 
 
Quite simply, then, ‘Jon owns Das Kapital’ is interpreted as follows: 
there is an object of type human named jon, and an object of type 
book named dasKapital, and jon owns dasKapital. However, consider 
now the following: 
 
(17) 
Jon owns Das Kapital but he does not agree with it.

 
 
jon
dasKapital
jon dasKapital
∃
∃
1
1
(
::
)(
::
)(
(
,
))
⇒
human
book own
 
 
      
he
it
∃
∃
1
1
(
::
)(
::
)
human
entity
∧
 
 
             
he
it
¬
(
(
::
,
::
))
human
content
agree
 
 
Resolving ‘he’ with Jon is straightforward since the agent of agree 
must be an object of type human. Resolving ‘it’ with Das Kapital, 
however, is not straightforward. This is how things look when at-
tempting to link the two sentences: 
 
(18) 
Jon owns Das Kapital but he does not agree with it.

 
 
jon
dasKapital
∃
∃
•
1
1
(
::
)(
::(
))
⇒
human
book
content
 
 
        
jon dasKapital
jon dasKapital
¬
(
(
,
)
(
,
))
own
agree
∧
 
 

 
 
 
 
 
 
 
W. Saba 
                                                                                   13 
Again, since there is no subsumption relation between (the physical 
object) book and (the abstract object) content, the type unification 
results in keeping the two variables, one for each type, and in intro-
ducing some salient relation between them:  
 
(19) 
Jon owns Das Kapital but he does not agree with it.

 
 
jon
dasKapital
c
∃
∃
∃
1
1
1
(
::
)(
::
)(
::
)
⇒
human
book
content  
             
dasKapital c
jon dasKapital
(
(
, )
(
,
)
R
own
∧
jon c
¬
(
, ))
agree
∧
 
 
In the final analysis, therefore, ‘Jon owns Das Kapital but he does not 
agree with it’ is interpreted as follows: Jon owns the physical book 
‘Das Kapital’ and he does not agree with its content! 
 
 
3.4  Metonymy 
 
Consider the following, where
x
y
( ::
,
::
)
want
a
human
thing
, i.e., where 
it is assumed that want is a relation that holds between objects of 
type human and objects that could be any thing, and where the ob-
ject of wanting does not necessarily exist: 
 
(15) 
the ham sadnwich wants a beer

  
 
x
y
x
y
1
1
(
::
)(
::
)(
( ::
,
::
))
∃
∃
want
a
a
hamSandwich
beer
human
thing
⇒
 
 
Note now that x and y in (14) are associated with more than one type 
in a single scope, and thus a type unification must occur. Assuming 
⊑
beer
thing  the type unification concerning y is straightforward, 
although beer should now be considered an object that need not nec-
essarily exist (as it is the object of a want): 
 
the ham sadnwich wants a beer

  
x
y
x y
∃
•
∃
•
1
1
(
::(
))(
::(
))(
( , ))
⇒
a
hamSandwich
human
beer
thing
want
 
x
y
x y
∃
•
∃
1
1
(
::(
))(
::
)(
( , ))
⇒
a
hamSandwich
human
beer
want
 
 
The type unification concerning x is not, however, as simple, since 
there is no subsumption relationship between the types concerned. As 
usual, the type unification will result in keeping two variables, one for 
each type, and in introducing some relation between them:  
 
the ham sadnwich wants a beer

  

 
 
 
 
 
 
 
14 
                                                  Ontology and Formal Semantics 
x
y
x y
∃
•
∃
1
1
(
::(
))(
::
)(
( , ))
⇒
a
hamSandwich
human
beer
want
x
z
y
∃
∃
∃
1
1
1
(
::
)(
::
)(
::
)
⇒
hamSandwich
human
beer
x z
z y
(
( , )
( , ))
R
∧want
 
where
msr(
,
)
=
R
human sandwich , i.e., where R is assumed to be some 
salient relation (e.g., eat, order, etc.) that exists between an object 
of type human, and an object of type sandwich (more on this below).    
 
 
4   All Objects were Created Equal 
  
4.1   Reference to Abstract Objects 
 
In a recent argument Against Fantology, Smith (2005) notes that too 
much attention has been paid to the false doctrine that much can be 
discovered about the ontological structure of reality by predication in 
first-order logic. According to Smith, for example, the use of standard 
predication in first-order logic in the following 
 
(20) a. sheba is a singer
sheba
(
)
⇒


singer
 
 
b. sheba is a cat
sheba
(
)


cat
⇒
 
 
c. sheba is old
sheba
(
)
⇒


old
 
 
completely masks the fact that in these sentences we are referring to: 
one of Sheba’s activities, namely her singing (20a); the class in which 
Sheba is a member (20b); and to one of Sheba’s attributes, namely 
her age (20c). To make this point more acute one must consider a 
more realistic discourse. As an example, consider the following: 
 
(21) Sheba is an old dancer.  
 
a. That has not made her less popular, however.  
 
b. She has been doing that for more than 40 years.  
 
We argue that that in (21a) must clearly be referring to an attribute of 
Sheba, namely her age, while that in (21b) must clearly be referring to 
Sheba’s singing (activity). This suggests that the definition of the logi-
cal concepts old and dancer must have some internal structure that 
somehow refers to the ‘age’ attribute and the ‘dancing’ activity, re-
spectively. Moreover, and as argued by Larson (1995), a statement 
such as ‘Sheba is an old dancer’ is ambiguous in that could mean any 
of the following: 

 
 
 
 
 
 
 
W. Saba 
                                                                                   15 
 
(22) Sheba is an old dancer.  
 
⇒ Sheba is a dancer and an old person   
 
⇒ Sheba’s dancing is old (she has been dancing for a long time)    
 
That is, ‘old’ seems to modify both, Sheba, and the dancing activity 
that Sheba performs, which again suggests quantifying over abstract 
objects such as attributes, activities, etc.  
In this respect we not only agree with Davidson’s (1980) sugges-
tion that “there is a lot of language we can make sense of if we sup-
pose events exist”, we further suggest that there is even a lot more 
language we can make sense of if we also admit the existence of other 
abstract entities, such as attributes, activities, processes, states, etc. 
Thus, the interpretation 
 
sheba is an old dancer


sheba
sheba
∃1
(
::
)(
(
(
)))
⇒
human old dancer
 
 
should be thought of as a ‘condensed form’ that, when expanded, 
would contain the logical expressions corresponding to the definitions 
of the logical concepts old and dancer, which could be defined as 
follows, where △could be thought of as a ‘typicality’ operator:   
 
(23) a. 
x
x
∀
(
::
)(
( )
human dancer
 
 
    
df
a
a
x a
x a
φ
≡
∃
(
::
)(
( )
(
( , ))
( , ...)))
do
activity dancing
∧△
∧
 
 
 
b. 
x
x
∀
(
::
)(
( )
entity old
 
 
   
a
a
P P x
y
λ
≡∃
∃
(
::
)(
( )
[ ( )
(
::
)
age
∧
∧
attribute
physical  
     
>>
 P y
y
x
y
( ( )
( )
(
))])))


age
typical
age
age
∧
∧
 
 
That is, some human x is/was a dancer iff x often does/did perform 
an activity we call dancing (23a); and any physical object x that 
is a P is old iff there is some other physical object y that is also a P 
and where 
y( )
age
typical
; i.e., where y is a typical object as far as the 
attribute age is concerned, such that the age of x is considerably 
greater than that of y (23b)7.  
                                                 
7 Our specific formulation of the logical concepts dancer and old (as well as others) could 
be questioned without affecting our overall argument. This is in fact precisely the whole 
point, namely that, unlike ontological concepts, the exact definition of a logical concept 
might very well depend on cultural, temporal, and perhaps individual factors (individuals 
perhaps do differ in the formulation of concepts such as ‘liberal’, ‘generous’, ‘educated’, 
etc.) What should not be questionable is the fact that speaking of a singer, for example, 

 
 
 
 
 
 
 
16 
                                                  Ontology and Formal Semantics 
Assuming now that s ⇒a  and s →a  refer, respectively, to what we 
might call a ‘condensed’ and an ‘expanded’ interpretation of a sen-
tence s into the logical expression a, we suggest the following: 
 
(24) a. liz is famous

  
 
  
liz
liz
1
(
::
)(
(
))
∃
⇒
human famous
 
 
  
liz
p
p
liz p
1
1
(
::
)(
::
)(
( )
(
, ))
∃
∃
has
→
human
property fame
∧
 
 
b. aging is inevitable

 
 
   
x
x
x
1
(
::
)(
( )
( ))
∃
⇒
∧
process aging
inevitabile
 
 
   
x
y
1
1
(
::
)(
::
)
∃
∃
→
process
property  
 
           
x
y
x y
(
( )
( )
( , ))
has
aging
inevitability
∧
∧
 
 
c. jon is aging

  
 
   
jon
jon
∃1
(
::
)(
(
))
⇒
human aging
 
 
   
jon
x
x
jon x
∃
∃
1
1
(
::
)(
::
)(
( )
(
, ))
→
gt
human
process aging
∧
 
 
d. fame is desirable

 
 
   
x
x
x
∃1
(
::
)(
( )
( ))
⇒
property fame
desirable
∧
 
 
   
x
y
∃
∃
1
1
(
::
)(
::
)
→
property
property  
 
           
x
y
x y
(
( )
( )
( , ))
has
fame
desirability
∧
∧
 
 
e. sheba is a dancer

  
 
   
sheba
sheba
∃1
(
::
)(
(
))
⇒
human dancer
 
 
   
sheba
a
∃
∃
1
1
(
::
)(
::
)
→
human
activity  
 
           
a
sheba a
(
( )
(
(
, )))
∆do
dancing
∧
 
 
f. sheba is dead

 
 
   
sheba
sheba
∃1
(
::
)(
(
))
⇒
human dead
 
 
   
sheba
s
∃
∃
1
1
(
::
)(
::
)
→
human
physioState  
 
 
s
sheba s
(
( )
(
, ))
in
death
∧
 
 
These interpretations can be explained as follows: some unique object 
of type human, named liz, has a certain property, namely fame 
(13a); inevitability is a property that the process of aging has 
(13b); a unique object of type human, named jon, is going through the 
process of aging (13c); desirability is a property that another 
property, namely fame, has (13d); a unique object of type human, 
named sheba, often does perform the dancing activity (13e); and a 
unique object of type human, named sheba, is in a certain state, 
namely death. 
                                                                                                             
must entail speaking of some activity that made an object a singer, as example (21) 
suggests.  

 
 
 
 
 
 
 
W. Saba 
                                                                                   17 
Note now that a sentence such as ‘Sheba is an old singer’ could 
be interpreted as follows: 
 
(25) 
sheba is an old dancer

 
 
sheba
sheba
∃1
(
::
)(
(
(
)))
⇒
human old dancer
 
 
sheba
a
∃
∃
1
(
::
)(
::
)
⇒
human
activity  
 
     
a
sheba a
a
sheba
∆do
(
( )
(
(
, )
(
( )
(
)))
dancing
old
old
∧
∧
∨
 
 
That is, old could predicate Sheba or her dancing activity, and 
where old is that defined in (23). 
As another example that illustrates the need for quantifying over 
activities, consider the following example: 
 
(26) jon did not paint a dog 
 
We argue that (26) can be true if jon painted something other than a 
dog, or if jon did not paint anything at all. The interpretation of (26) 
should initially proceed as follows:  
 
(27) 
jon did not paint a dog

 
 
jon
d
jon
d
∃
∃
1
(
::
)(
::
)(
(
::
,
::
))
⇒
¬
a
a
human
dog
human
entity
paint
 
 
That is, there is a unique object, jon (of type human), and some object d 
of type dog (an object that need not necessarily exist), such that it is 
not true that jon painted d. Assuming that ‘paint’ is defined in terms of 
some activity as follows: 
 
n
x
y
,
( ::
,
::
)
a
human
entity
paint
 
n
    
a
a
a x
a y
≡∃
(
::
)(
( )
( , )
( , ))
do
theme
activity painting
∧
∧
, 
 
Since 
x
P x
Q x
x
P x
Q x
∃
≡∀
(
)( ( )
( ))
(
)(
( )
( ))
¬
¬
¬
∧
∨
 we then get the follow-
ing: 
 
x
y
( ::
,
::
)
¬
a
human
entity
paint
 
      
a
a
a x
a y
≡
∃
((
::
)(
( )
( , )
( , )))
¬
do
theme
activity painting
∧
∧
 
      
a
a
a x
a y
≡∀
¬
(
::
)(
( )
( , )
( , ))
¬
¬
do
theme
activity
painting
∨
∨
 
      
a
a
a x
a y
≡∀
(
::
)(
( )
( , )
( , ))
⊃¬
¬
do
theme
activity painting
∨
 
 
Thus, (27) can now be written as follows: 

 
 
 
 
 
 
 
18 
                                                  Ontology and Formal Semantics 
(28) 
jon did not paint a dog

 
 
jon
d
jon
d
∃
∃
1
(
::
)(
::
)(
(
::
,
::
))
⇒
¬
a
a
human
dog
human
entity
paint
 
 
jon
d
a
∃
∃
∀
1
(
::
)(
::
)((
::
)
⇒
a
human
dog
activity  
  
        
a
a jon
a d
(
( )
( ,
)
( , )))
⊃¬
¬
do
theme
painting
∨
 
 
  
 
In the final analysis, therefore, ‘jon did not paint a dog’ entails that 
either jon was not the agent of any painting activity, or the theme of 
the painting was not a dog, which is a plausible interpretation of (28). 
 
 
 
4.2  Wise Activities? (Abstract Objects and Metonymy) 
 
Consider the following: 
 
(29) a. exercising is wise 
 
b. jon is exercising 
 
 
c. jon is wise 
 
Clearly the above inference is valid, although one can hardly think of 
attributing the property wise to an activity (exercising). Let us 
see how we might explain this argument. We start with the simplest: 
 
(30) 
jon is exercising

  
 
jon
act
∃
∃
1
1
(
::
)(
::
)
⇒
human
activity  
 
  
act
act jon
(
(
)
(
,
))
exercising
agent
∧
 
 
Let us now consider the following: 
 
(31) 
exercising is wise

  
 
a
a
∀
(
::
)(
( )
⇒
activity exercising
 
               
p
p
a
p
∃1
(
::
)(
( )
( ::
, ))
⊃
wisdom
∧has
property
human
 
 
That is, any exercising activity has a property, namely wisdom, 
which is a property that ordinarily an object of type human has. Note, 
however, that a type unification for the variable a must now occur: 
 
(32) 
exercising is wise

  
 
a
a
∀
•
(
::(
))(
( )
⇒
human
activity
exercising
 
                 
p
p
a p
∃1
(
::
)(
( )
( , ))
⊃
wisdom
∧has
property
 
 

 
 
 
 
 
 
 
W. Saba 
                                                                                   19 
The most salient relation between a human and an activity is that of 
agency: a human is typically the agent of an activity: 
 
(33) 
exercising is wise

  
 
a
x
a
a x
∀
∀
(
::
)(
::
)(
( )
( , )
⇒
a
activity
human
exercising
agent
∧
 
                 
p
p
x p
∃1
(
::
)(
( )
( , ))
⊃
wisdom
∧has
property
 
 
Essentially, therefore, we get the following: any human x has the 
property of being wise whenever x is the agent of an exercising activ-
ity. Note now that (30), (33) and modes ponens results in the follow-
ing, which is the meaning of ‘jon is wise’:  
 
jon
p
p
x p
∃
∃
1
1
(
::
)(
::
)(
( )
( , ))
wisdom
∧has
human
property
 
 
Finally, note that the inference in (33) was proven valid only after 
uncovering the missing text, since ‘exercising is wise’ was essentially 
interpreted as ‘[any human that performs the activity of] exercising is 
wise’.  
 
 
4.3  90 is not rising
is not rising
is not rising
is not rising  
 
Consider the following erroneous entailment: 
 
(34) a. the temperature is 90 
 
b. the temperature is rising 
 
 
 
c. 90 is rising 
 
We argue that the source of this erroneous entailment is due to the 
fact that the copula ‘is’ is being used on different types of objects in 
(34a) and (35b). When x and y are of the same type (or one subsumes 
the other!) then ‘is’ in ‘x is y’ represents identity, otherwise some 
other relation that holds between the two objects, as the examples in 
(24) also illustrate. More to the point consider the following: 
 
(35) 
90
the temperature is 

 
1
1
90
x
y
y
x y
(
::
)(
::
)(
( ,
)
( , ))
∃
∃
be
temperature
measure value
⇒
∧
   
1
90
x
x
(
:: (
))(
( ,
))
∃
•
value
⇒
temperature
measure
       
1
90
x
x
(
::
)(
( ,
))
∃
value
⇒
temperature
 

 
 
 
 
 
 
 
20 
                                                  Ontology and Formal Semantics 
 
That is, since (
)
⊑
temperature
measure , the variables x and y unify, 
laving one variable, and thus eq is effectively reduced to identity. How-
ever, in ‘the temperature is rising’ we are saying no more than ‘the tem-
perature is in the process of rising’: 
 
(36) 
the temperature is rising

 
1
1
x
p
p
x y
(
::
)(
::
)(
( )
( , ))
∃
∃
rising
⇒
∧gt
temperature
process
   
 
  
5    Types and Salient Relations 
  
Thus far we have assumed the existence of a function 
( , )
msr s t  that 
returns, if it exists, the most salient relation R between two types s 
and t. In this section we suggest what this function might look like.  
Before we proceed, however, we need to extend the notion of as-
signing ontological types to properties and relations slightly. First, 
consider the following: 
 
(37) a. Pass that car, will you. He is really annoying me. 
 
b. Pass that car, will you. They are really annoying me. 
 
We argue that ‘he’ in (34a) refers to ‘the person driving [that] car’ 
while ‘they’ in (34b) refers to ‘the people riding in [that] car’. The 
question here is this: although there are many possible relations be-
tween a person and a car (e.g., drive, ride, manufacture, design, 
make, etc.) how is it that drive is the one that most speakers as-
sume in (37a), while ride is the one most speakers would assume in 
(37b)? Here’s a plausible answer: 
 
• 
drive is more salient than ride, manufacture, design, make, 
etc. since the other relations apply higher-up in the hierarchy; 
that is, the fact that we make a car, for example, is not due to 
car, but to the fact that make can be said of any artifact and 
(
)
car
artifact
⊑
. 
 

 
 
 
 
 
 
 
W. Saba 
                                                                                   21 
• 
While drive is a more salient relation between a human and a car 
than ride, most speakers of ordinary English understand the 
drive relation to hold between one human and one car (at a spe-
cific point in time), while ride is a relation that holds between 
many (several, or few!) people and one car. Thus, ‘they’ in (37b) 
fails to unify with drive, and ride, which is the next most sali-
ent relation is then picked out. 
 
In other words, the type assignments of drive and ride are under-
stood by speakers of ordinary language as follows: 
 
x
y
( ::
,
::
)
drive
1
1
human
car
 
x
y
( ::
,
::
)
ride
1+
1
human
car
 
 
With this background, let us now suggest how the function 
( , )
msr s t  
that picks out the most salient relation R between two types s and t 
is computed. 
We say 
( , )
pap
t
p
 when the property p applies to objects of type 
t, and 
( , , )
rap
s t
r
 when the relation r holds between objects of type 
s and objects of type t. We define a list 
( )
lpap t  of all properties that 
apply to objects of type t, and 
( , )
lrap s t  of all relations that hold 
between objects of type s and objects of type t, as follows: 
 
(38) 
=
( )
[
( , )]
lpap t
pap
t
p
p
|
 
 
m
n
m n
= 〈
〉
( , )
[
,
,
( ,
,
)]
lrap s t
rap
s
t
r
r
|
 
 
The lists (of lists) 
*( )
lpap t  and 
*( , )
lrap s t  can now be inductively 
defined as follows: 
 
(39) 
=
*(
)
[ ]
lpap thing
 
 
=
*
*
( )
( ) :
(
( ))
lpap t
lpap t
lpap sup t
 
 
 
=
*( ,
)
[ ]
lrap s thing
 
 
=
*
*
( , )
( , ) :
( ,
( ))
lrap s t
lrap s t
lrap s sup t
 
 
where e s
( : ) is a list that results from attaching the object e to the 
front of the (ordered) list s, and where 
( )
sup t  returns the immediate 
(and single!) parent of t. Finally, we define the function 
m
n
(
,
)
〈
〉
msr s
t
 
which returns most the salient relation between objects of type s and 
t, with constraints m and n, respectively, as follows: 

 
 
 
 
 
 
 
22 
                                                  Ontology and Formal Semantics 
m
n
  
 
 
 
 
(
,
)
(
[ ])
(
)
〈
〉=
≠
⊥
msr s
t
if s
then head s else
 
                 where  
                 
a b
a
m
b
n
*
[
, ,
( , )
(
)
(
)]
=
〈
〉
≥
≥
∈
r
r
s
lrap s t
|
∧
∧
 
 
Assuming now the ontological and logical concepts shown in figure 1, 
for example, then 
 
=
*(
)
[[
,...],[
,...],[
,...],,[
,...],...]
lpap human
articulate
hungry
heavy
old
+
= 〈
〉
〈
〉
*(
,
)
[[
,1,1 ,...],[
,1 ,1 ,...],,...]
lrap human car
drive
ride
  
 
These lists are ordered, and the degree to which a property or a rela-
tion is salient is inversely related to the position of the property or 
the relation in the list. Thus, for example, while a human may drive, 
make, buy, sell, build, etc. a car, drive is a more salient relation 
between a human and a car than ride, which, in turn, is more salient 
than manufacture, make, etc. Moreover, assuming the above sets 
we have  
 
1
1
(
,
)
〈
〉= drive
msr human car
 
1
1
(
,
)
+
〈
〉= ride
msr human
car
 
 
which essentially says drive is the most salient relation in a context 
where we are speaking of a single human and a single car, is that of  
  
 
 
  
 
 
 
 
 
 
 
 
 
 
 
Figure 1. Logical and ontological concepts. 
r
x
r
x
r
x
r
x
r
x
y
r
x
y
r
x
y
r
x
y
1
2
3
4
5
6
7
8
:
( ::
)
:
( ::
)
:
( ::
)
:
( ::
)
:
( ::
,
::
)
:
( ::
,
::
)
:
( ::
,
::
)
:
( ::
,
::
old
heavy
hungry
articulate
make
manufacture
ride
drive
entity
physical
living
human
human
artifact
human
instrument
human
vehicle
human
car)

 
 
 
 
 
 
 
W. Saba 
                                                                                   23 
Note, therefore, that ‘They are annoying me’ in (37b) is interpreted 
as follows: 
 
They are annoying me


they
me
they me
∃
•
∃
(
:: (
))(
::
)(
(
,
))
annoying
1+
1
human
car
human
⇒
they
c
me
∃
∃
∃
(
::
)(
::
)(
::
)
1+
1
human
car
human
⇒
             
they c
they me
(
(
, )
(
,
))
riding
annoying
∧
    
    
    
 
6    Discussion 
  
If the main business of semantics is to explain how linguistic 
constructs relate to the world, then semantic analysis of natural 
language text is, indirectly, an attempt at uncovering the semiotic 
ontology of commonsense knowledge, and particularly the background 
knowledge that seems to be implicit in all that we say in our 
everyday discourse. While this intimate relationship between language 
and the world is generally accepted, semantics (in all its paradigms) 
has traditionally proceeded in one direction: by first stipulating an 
assumed set of ontological commitments followed by some machinery 
that is supposed to, somehow, model meanings in terms of that 
stipulated structure of reality. 
With the gross mismatch between the trivial ontological commit-
ments of our semantic formalisms and the reality of the world these 
formalisms purport to represent, it is not surprising therefore that 
challenges in the semantics of natural language are rampant. How-
ever, as correctly observed by Hobbs (1985), semantics could become 
nearly trivial if it was grounded in an ontological structure that is 
“isomorphic to the way we talk about the world”. The obvious ques-
tion however is ‘how does one arrive at this ontological structure that 
implicitly underlies all that we say in everyday discourse?’ One plau-
sible answer is the (seemingly circular) suggestion that the semantic 
analysis of natural language should itself be used to uncover this 
structure. In this regard we strongly agree with Dummett (1991) who 
states: 
 
We must not try to resolve the metaphysical questions first, 
and then construct a meaning-theory in light of the answers. 

 
 
 
 
 
 
 
24 
                                                  Ontology and Formal Semantics 
We should investigate how our language actually functions, 
and how we can construct a workable systematic description of 
how it functions; the answers to those questions will then de-
termine the answers to the metaphysical ones. 
 
What this suggests, and correctly so, in our opinion, is that in our 
effort to understand the complex and intimate relationship between 
ordinary language and everyday commonsense knowledge, one could, 
as also suggested in (Bateman, 1995), “use language as a tool for 
uncovering the semiotic ontology of commonsense” since ordinary 
language is the best known theory we have of everyday knowledge. 
To avoid this seeming circularity (in wanting this ontological 
structure that would trivialize semantics; while at the same time 
suggesting that semantic analysis should itself be used as a guide to 
uncovering this ontological structure), we suggested here performing 
semantic analysis from the ground up, assuming a minimal (almost a 
trivial and basic) ontology, in the hope of building up the ontology as 
we go guided by the results of the semantic analysis. The advantages 
of this approach are: (i) the ontology thus constructed as a result of 
this process would not be invented, as is the case in most approaches 
to ontology (e.g., Lenat, & Guha (1990); Guarino (1995); and Sowa 
(1995)), but would instead be discovered from what is in fact 
implicitly assumed in our use of language in everyday discourse; (ii) 
the semantics of several natural language phenomena should as a 
result become trivial, since the semantic analysis was itself the source 
of the underlying knowledge structures (in a sense, the semantics 
would have been done before we even started!) 
Throughout this paper we have tried to demonstrate that a num-
ber of challenges in the semantics of natural language can be easily 
tackled if semantics is grounded in a strongly-typed ontology that 
reflects our commonsense view of the world and the way we talk 
about it in ordinary language. Our ultimate goal, however, is the sys-
tematic discovery of this ontological structure, and, as also argued in 
Saba (2007), it is the systematic investigation of how ordinary lan-
guage is used in everyday discourse that will help us discover (as op-
posed to invent) the ontological structure that seems to underlie all 
what we say in our everyday discourse.  
 
 

 
 
 
 
 
 
 
W. Saba 
                                                                                   25 
References 
 
1. Asher, N. and Pustejovsky, J. (2005), Word Meaning and Com-
monsense Metaphysics, available at http://semanticsarchive.net  
2. Bateman, J. A. (1995), On the Relationship between Ontology 
Construction and Natural Language: A Socio-Semiotic View, In-
ternational Journal of Human-Computer Studies, 43, pp. 929-944. 
3. Borschev, V. and Partee, B. H. (2001), Genitive Modifiers, Sorts, 
and Metonymy, Nordic Journal of Linguistics, 24 (2). 
4. Cocchiarella, N. B. (2001), Logic and Ontology, Axiomathes, 12, 
pp. 117-150. 
5. Davidson, D. (1980), Essays on Actions and Events, Oxford. 
6. Dummett. M. (1991), The Logical Basis of Metaphysics, 
Duckworth, London. 
7. Fass, D. (1988), Metonymy and Metaphor: What is the Differ-
ence? Proc. 12th Conf. on Computational Linguistics, Vol 1, pp. 
177-181. 
8. Gaskin, R. (1995), Bradley’s Regress, the Copula, and the Unity 
of the Proposition, The Philosophical Quarterly, 45 (179), pp. 
161-180. 
9. Givon, T. (1984), Deductive vs. Pragmatic Processing in Natural 
Language, In W. Kintsch, J. R. Miller & P. G. Polson (Eds.), 
Methods & Tactics in Cognitive Science, pp. 137-189, LEA Asso-
ciates: NJ 
10. Guarino, N. (1995), Formal Ontology in Conceptual Analysis and 
Knowledge Representation, International Journal of Human-
Computer Studies, 43 (5/6), Academic Press. 
11. Hirst, G. (1991), Existence Assumptions in Knowledge Represen-
tation, Artificial Intelligence, 49 (3), pp. 199-242. 
12. Hobbs, J. (1985), Ontological Promiscuity, In Proc. of the 23rd 
Annual Meeting of the Association for Computational Linguistics, 
pp. 61-69, Chicago, Illinois, 1985. 
13. Johnston, M. and F. Busa (1999). The compositional interpreta-
tion of compounds, In E. Viegas (Ed.), Breadth and Depth of Se-
mantics Lexicons. Dordrecht: Kluwer Academic. pp. 167-87. 
14. Larson, R. (1995), Olga is a Beautiful Dancer, 1995 Meeting of 
the Linguistic Society of America, New Orleans. 
15. Lenat, D. B. & Guha, R. V., 1990. Building Large Knowledge-
Based Systems: Representation and Inference in the CYC Pro-
ject. Addison-Wesley. 
16. Levin, B. (1993), English Verb Classes and Alterations, The Uni-
versity of Chicago Press. 

 
 
 
 
 
 
 
26 
                                                  Ontology and Formal Semantics 
17. Montague, R. (1973), The Proper Treatment of Quantification in 
Ordinary English, In Hintikka, K. J. J., Moravcsik, J. M. E. & 
Suppes, P. (Eds.), Approaches to Natural Language, Dordrecht: 
Reidel. 
18. Montague, R. (1960), On the Nature of certain Philosophical En-
tities, The Monist, 53, pp. 159-194. 
19. Oliver, A. (1996), The Metaphysics of Properties, Mind, 105 
(417), pp. 1-80. 
20. Rais-Ghasem, M. and Coriveaue, J.-P. (1998), Exemplar-Based 
Sense Modulation, In Proceedings of COLING-ACL ’98 Work-
shop on the Computational Treatment of Nominals. 
21. Saba, W. W. (2007), Language, Logic and Ontology – Uncovering 
the Structure of Commonsense Knowledge, International Journal 
of Human-Computer Studies, 65 (7), pp. 610-623. 
22. Santyana, G. (1915), Some Meanings of the Word Is, Journal of 
Philosophy, Psychology and Scientific Methods, 12 (3), pp. 66-68. 
(available on http://www.jstor.org) 
23. Smith, B. (2005), Against Fantology, In M. E. Reicher & J.C. 
Marek (Eds.), Experience and Analysis, pp. 153-170, Vienna: 
HPT & OBV. 
24. Sowa, J.F., 1995. Knowledge Representation: Logical Philosophi-
cal, and Computational Foundations. PWS Publishing Company, 
Boston. 
25. van Deemter, K., Peters, S. 1996. (Eds.), Semantic Ambiguity and 
Underspecification. CSLI, Stanford, CA 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

