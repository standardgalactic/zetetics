
To Papa, Prachi, and Manya

 
 

Ashish Tewari
Atmospheric and Space
Flight Dynamics
Modeling and Simulation with
MATLAB
R⃝and Simulink
R⃝
Birkh¨auser
Boston • Basel • Berlin

Ashish Tewari
Department of Aerospace Engineering
Indian Institute of Technology, Kanpur
IIT-Kanpur 208016
India
Mathematics Subject Classiﬁcation: 00A71, 00A72, 65L06, 70B05, 70B10, 70E05, 70E15, 70E20,
70E50, 70F05, 70F07, 70F10, 70F15, 70G60, 70H03, 70J10, 70J25, 70J35, 70K05, 70M20, 70P05,
70Q05, 74F10, 76G25, 76H05, 76J20, 76K05, 76L05, 76N15, 76N20, 93A30, 93B52, 93B55, 93B60,
93C05
Library of Congress Control Number: 2006935811
ISBN-10: 0-8176-4437-7
e-ISBN-10: 0-8176-4438-5
ISBN-13: 978-0-8176-4437-6
e-ISBN-13: 978-0-8176-4438-3
Printed on acid-free paper.
c⃝2007 Birkh¨auser Boston
All rights reserved. This work may not be translated or copied in whole or in part without the written
permission of the publisher (Birkh¨auser Boston, c/o Springer Science+Business Media LLC, 233
Spring Street, New York, NY 10013, USA) and the author, except for brief excerpts in connection with
reviews or scholarly analysis. Use in connection with any form of information storage and retrieval,
electronic adaptation, computer software, or by similar or dissimilar methodology now known or
hereafter developed is forbidden.
The use in this publication of trade names, trademarks, service marks and similar terms, even if they
are not identiﬁed as such, is not to be taken as an expression of opinion as to whether or not they are
subject to proprietary rights.
9 8 7 6 5 4 3 2 1
www.birkhauser.com
(KeS/MP)

Preface
It is ﬁtting in this beginning of the second century of powered ﬂight to be writ-
ing a book on ﬂight dynamics—in particular, the modeling and simulation of
ﬂight dynamics. No one had heard of ﬂight dynamics, or indeed, modeling and
simulation, in the early days of aviation. Pioneers such as the Wright brothers,
Langley, Curtiss, and Bleriot preferred experimentation with ﬂying models to
working with the equations of motion. Until the 1940s, ﬂight dynamics was
more of an art than an engineering discipline, with books such as Stick and
Rudder: An Explanation of the Art of Flying by Langewiesche (McGraw-Hill,
1944) imparting a fundamental, but purely qualitative understanding of air-
plane ﬂight, which was useful to both budding aeronautical engineers and
pilots. After the Second World War, large strides made in mathematical mod-
eling of airplane ﬂight dynamics were ﬁrst documented in classical texts such
as Airplane Performance, Stability and Control by Perkins and Hage (Wiley,
1949), which covered linearized, time-invariant ﬂight dynamics, and inspired
a multitude of textbooks in the ﬁeld, such as those by Etkin, McCormick,
Miele, etc. With the advent of supersonic, hypersonic, and space ﬂight in
the 1950s and 1960s, there was a great need for modeling and simulation of
high-performance ﬂight dynamics, which essentially involves a set of coupled,
time-varying, nonlinear, ordinary diﬀerential equations. While a sprinkling of
mathematical models for high-speed ﬂight was available in the introductory
texts of the 1960s and 1970s, a thorough analytical treatment of these topics
was conﬁned to specialized technical reports. Yet, there was little mention of
numerical modeling and simulation. Research articles ﬁrst began to appear in
the 1960s, which presented numerical calculations for special examples with
analog—and later—digital computers, concerning high-performance ﬂight dy-
namics. As numerical science evolved and computing power grew, the sophis-
tication of ﬂight dynamic modeling and simulation progressed to missiles,
launch vehicles, re-entry vehicles, and spacecraft. Guidance and navigation
for the manned lunar missions (1968–72) essentially utilized such numerical
capability. Numerical modeling and simulation of ﬂight dynamics has now
emerged as a major discipline.

vi
Preface
The chief motivation for writing this book is to present a uniﬁed approach
to both aircraft and spacecraft ﬂight dynamics. Modern aerospace vehicles,
such as the space shuttle, other launch vehicles, and long-range ballistic mis-
siles, do not discriminate between atmospheric and space ﬂight. Unfortunately,
nearly all textbooks on ﬂight dynamics do so, and seldom do we ﬁnd aircraft
and spacecraft co-existing within the covers of the same book. Many excel-
lent textbooks are available on modern aircraft dynamics (such as those by
Zipfel, Pamadi, Stengel, Etkin, and Schmidt), but they stop short of hyper-
sonic aircraft and sub-orbital trajectories. Similarly, the available textbooks
on space dynamics (Hale, Brown, Curtis, etc.) do not go below hypersonic
speeds of re-entry vehicles. While it is easy to understand the separate evolu-
tion of aircraft and spacecraft in the past, the future of ﬂight lies in integrating
the two vehicles into a single unit. The single-stage-to-orbit (SSTO) reusable
launch vehicle, which takes oﬀand lands like an aircraft and delivers payload
to an orbiting space station, exempliﬁes the vision of aerospace engineering
for the future. Therefore, it is imperative that this new generation of engi-
neers is taught to remove the artiﬁcial distinction between atmospheric and
space ﬂight. Many aerospace engineering departments realize this need, of-
fering courses that integrate atmospheric and space ﬂight. Examples of such
courses are AE-520 Flight Vehicle Dynamics, AE-580 Analytical Methods in
Aeronautical and Astronautical Engineering, and AE-621 Aircraft and Space-
craft Automatic Control Systems, oﬀered by the Department of Aerospace
Engineering at Ohio State University.
This book is an attempt to bridge the gap between aircraft and spacecraft
dynamics, by demonstrating that the two evolve logically from the same set of
physical principles. The breadth of topics covered is unparalleled by any other
book on the subject. Beginning with kinematics and translational dynamics
over a rotating planet, nonspherical gravity model, leading to two-body orbits,
orbital maneuvers, rendezvous in space, and lunar and interplanetary travel,
atmospheric ﬂight follows logically after chapters on atmospheric modeling,
aerodynamics, and propulsion. The attitude dynamics and control of aircraft
and spacecraft are presented in an integrated and continuous fashion. Mod-
eling of nonlinear ﬂight dynamics is covered in numerous examples, such as
simulation of long-range airplane ﬂight, supermaneuvers, rocket ascent, sub-
orbital ﬂight and atmospheric entry, multi-axis rotations of spacecraft, and in-
ertia coupled, open- and closed-loop airplane dynamics, which are not found in
other textbooks on ﬂight dynamics. The book culminates with a ﬁnal chapter
covering advanced concepts with six-degree-of-freedom simulation examples,
and modeling of structural dynamics, unsteady aerodynamics, aeroelasticity,
and propellant slosh dynamics. From the solved examples, the reader can
easily build his/her own simulations as independent semester projects. The
choice of gravitational models, coordinate frames, attitude control systems,
propulsion systems, and ﬂow models to use is left up to the reader, in order
to provide an almost unlimited capability to build various simulations.

Preface
vii
This book is primarily designed as a textbook for junior and senior un-
dergraduates, as well as graduate students in mechanical, aerospace engineer-
ing/aeronautics, and astronautics departments. The book may also be used
as a reference for practicing engineers and researchers in aerospace engineer-
ing, aeronautics, and astronautics, whose primary interest lies in modeling
and simulation of ﬂight dynamics. The contents have evolved from the lec-
ture notes of several 3rd–4th year undergraduate, and graduate-level courses
I have taught over the past 14 years. The material in the book has been espe-
cially selected to be useful in a modern course on ﬂight dynamics, where the
artiﬁcial distinction between atmospheric and space ﬂight is removed. At the
same time, the material oﬀers the choice of being adopted in separate tradi-
tional courses on space dynamics and atmospheric ﬂight mechanics. In this
respect, the text is quite ﬂexible and can be utilized by even those instructors
who do not necessarily agree with the comprehensive approach adopted in the
book. It is, however, suggested that the mix of atmospheric and space dynam-
ics be retained in each course. A detailed discussion of the usage of material
by course instructors is given below. The chapters are designed to follow in
a sequence such that their concepts evolve logically and ﬁt into each other
like a glove. The concepts are introduced in an easy-to-read manner, while
retaining mathematical rigor. The theory behind ﬂight dynamic modeling is
highlighted and fundamental results are derived analytically. Examples and
problems have been carefully chosen to emphasize the understanding of un-
derlying physical principles. Each chapter begins with a list of clearly deﬁned
aims and objectives. At the end of each chapter, short summaries and a num-
ber of exercises are provided in order to help readers consolidate their grasp of
the material presented. Answers to selected problems are included at the back
of the book so that a reader can verify his/her own solutions. Full step-by-step
solutions to all of the exercises will be available upon request to the publisher
in a separate solutions manual designed for course instructors to use with
their students. The manual may also be made available to researchers and
professionals (nonstudents) who are using the book for self-study purposes.
Requests for the solutions manual should be sent to the publisher on an of-
ﬁcial letterhead with full particulars, including the course name and number
for which the book is being adopted.
Perhaps the greatest distinguishing feature of the book is the ready and
extensive use of MATLAB® and Simulink®,1 as practical computational
tools to solve problems across the spectrum of modern ﬂight dynamics. The
MATLAB/Simulink codes are integrated within the text in order to readily il-
lustrate modeling and simulation of aerospace dynamics. MATLAB/Simulink
is standard, easy-to-use software that most engineering students learn in the
ﬁrst year of their curriculum. Without such a software package, the numerical
examples and problems in a text of this kind are diﬃcult to understand and
1 MATLAB/Simulink® are registered products of The MathWorks, Inc., 3 Apple
Hill Drive, Natick, MA 01760-2098, U.S.A. http://www.mathworks.com.

viii
Preface
solve. In giving the reader a hands-on experience with MATLAB/Simulink
as applied to practical problems, the book is useful for a practicing engi-
neer, apart from being an introductory text for the beginner. The book uses
the software only as an instructional tool, discouraging the “black-box” ap-
proach found in many textbooks that carry “canned” software. The reader is
required to write his/her own codes for solving many of the problems con-
tained as exercises. An appendix contains a brief review of some important
methods of numerically integrating ordinary diﬀerential equations that are
commonly encountered in ﬂight dynamics. In summary, the primary features
of this book are a uniﬁed approach to aircraft and spacecraft ﬂight, a wide
range of topics, nontrivial simulations, logical and seamless presentation of
material, rigorous analytical treatment that is also easy to follow, and a
ready use of MATLAB/Simulink software as an instructional tool. All the
codes used in the book are available for downloading at the following website:
http://home.iitk.ac.in/∼ashtew/page10.html.
The text focuses on the modeling and simulation aspects of ﬂight mechan-
ics in a wide range of aerospace applications. This treatment is more general
than that found in many textbooks on atmospheric ﬂight dynamics, which
only cover the approximate equations of motion oﬀering analytical closed-
form solutions (considered trivial from a modeling and simulation viewpoint).
However, it is recognized that the analytical solutions impart an insight into
the science of ﬂight dynamics, especially in a junior-level course. For this
reason, the discussion of approximate, analytical solutions to special ﬂight
situations is oﬀered in the form of exercises at the end of the chapters. The
reader is referred to traditional ﬂight mechanics texts for details on approx-
imate, analytical treatment wherever necessary. A course instructor has the
freedom to begin with the general derivations of the equations of motion pre-
sented in the book, proceeding to the special approximate ﬂight situations
(planar, quasi-steady, constant mass, ﬂat nonrotating earth, etc.) for which
the traditional, analytical solution is available.
A reader is assumed to have taken basic undergraduate courses in mathe-
matics and physics—particularly calculus, linear algebra, and dynamics—and
is encouraged to review these fundamental concepts at several places in the
text. I will now brieﬂy discuss the organization and highlights of the topics
covered in each chapter in order to provide a ready guide to the reader and
the classroom instructor. This will help readers and instructors select what
parts of the book will be relevant either in a particular course, or for speciﬁc
professional study and reference.
It is sometimes felt that a “logical” sequence of topics should begin with
atmospheric ﬂight and end with space ﬂight. While such an “earth-to-space”
arrangement may appear natural in a documentary on ﬂight, it is not suitable
for a textbook. As pointed out above, the material in the text has been or-
dered such that the physical and mathematical concepts evolve logically and
sequentially. Chapters 2–4, which cover kinematics and analytical dynamics,
are equally relevant to both space and atmospheric ﬂight. The next three chap-

Preface
ix
ters (5–7) on orbital mechanics logically follow from this foundation, as they
do not require a model of the atmosphere and aerodynamics. Chapter 8, on
rocket propulsion, follows for the same reason. However, before beginning the
treatment on atmospheric ﬂight, it is necessary to introduce an atmospheric
model, aerodynamic concepts, and air-breathing propulsion, which are car-
ried out in Chapters 9–11. I would add that for an undergraduate student
in ﬂight dynamics, the introductory chapters on aerodynamics and propul-
sion (Chapters 8–11) are especially relevant. Chapters 12–14—the “meat” of
the book—put together the concepts of the foregoing chapters in order to
present a comprehensive modeling, simulation, control, and analysis of at-
mospheric, trans-atmospheric, and space trajectories. Chapter 15 culminates
the treatment with advanced modeling and simulation concepts applicable to
aerospace vehicles. Hence, the ﬁrst four and the last four chapters pertain to
both atmospheric and space ﬂight, whereas the intervening chapters present
specialized treatment of either of the two aspects of ﬂight. The following is a
detailed overview of each chapter:
Chapter 1 oﬀers a basic introduction and motivation for studying ﬂight
dynamics in a comprehensive manner and includes the classiﬁcation of ﬂight
vehicles, as well as the important assumptions made in their modeling and
simulation.
Chapter 2 presents the kinematic modeling and coordinate transforma-
tions useful in all aspects of ﬂight dynamic derivations. The rigorous vector
analysis of rotational kinematics is presented with many numerical examples.
Basic identities—such as the time derivative of a vector, its rotation, and rep-
resentation in various reference frames—are derived in a manner that can be
easily utilized for derivation of both translational and rotational equations of
motion in subsequent chapters. Several alternative kinematic representations
[Euler angles, Euler-axis/principal rotation, rotation matrix, Euler symmetric
parameters (quaternion), Rodrigues and modiﬁed Rodrigues parameters] are
introduced and their time-evolution derived. A reader can cover the ﬁrst two
sections in a ﬁrst reading, proceed to Chapters 3–12, and then return to the
other sections of Chapter 2 before beginning Chapter 13.
Chapter 3 discusses planetary shape and gravity. While a spherical grav-
ity model serves most atmospheric ﬂight applications reasonably well, it is
necessary to model the spherical harmonics of a nonspherical mass distribu-
tion (Sections 3.2–3.4) for accurate space-ﬂight, rocket-ascent, and entry-ﬂight
trajectories.
Chapter 4 is an introduction to analytical dynamics. While presenting
the analytical tools for deriving a general model for translational motion, the
chapter also discusses the relationship between translational and rotational
dynamics of a ﬂight vehicle. This chapter is essentially the starting point for
deriving the basic kinetic equations for aerospace ﬂight, and includes dynamics
in moving frames, variable mass bodies, the N -body gravitational problem in
space dynamics, and its specialization to two-body trajectories with analytical
and numerical solutions. The problems at the end of the chapter test the

x
Preface
reader’s understanding of the important concepts in analytical (Newtonian)
dynamics. After reading Chapter 4, a reader can either proceed to space ﬂight
dynamics (Chapters 5–8) or go to Chapters 9–12 on atmospheric ﬂight.
Chapter 5 covers orbital mechanics concepts, orbital maneuvers, relative
motion in orbit, and orbit determination for three-dimensional guidance, with
examples. A basic course can take advantage of the special coordinate frames
(celestial, local horizon, planetary) discussed in Sections 5.1–5.3, which are
useful not only in space ﬂight, but also in long-range atmospheric trajecto-
ries. The later sections of the chapter are useful in designing trajectories for
interplanetary missions, where the associated Lambert’s problem is solved nu-
merically. An interesting example of Lambert’s problem in the chapter is a
nonplanar orbital rendezvous between two spacecraft, which is not found in
other textbooks on orbital mechanics.
Chapter 6 discusses orbital perturbations caused by gravitational asym-
metry (oblateness, and presence of a third body) as well as atmospheric drag.
Oblateness eﬀects lead to sun-synchronous and Molniya orbits, whereas a sim-
ple atmospheric model is used to predict the life of a satellite in low orbits.
Third-body perturbations result in the sphere of inﬂuence and the patched
conic approach for the design and analysis of lunar and interplanetary mis-
sions.
Chapter 7 is devoted to the restricted three-body problem, its solvability,
equilibrium points, and numerical solutions, with examples of the earth-moon-
spacecraft trajectories. This chapter can be skipped in a basic-level course on
ﬂight dynamics.
Chapter 8 introduces the elements of rocket propulsion. The ﬁrst two sec-
tions of this chapter are strongly recommended in all basic courses on ﬂight
dynamics. The design of optimal multistage rockets—a crucial problem in
sub-orbital and space ﬂight—is covered in Section 8.3 with examples of two-
and three-stage rockets.
Chapter 9 begins the modeling of atmospheric ﬂight with a detailed stan-
dard atmosphere model, including nondimensional aerodynamic parameters.
For example, a 21 layer U.S. Standard Atmosphere is considered, ranging
from sea level to a geometric altitude of 700 km. This model is utilized in all
simulations of atmospheric and trans-atmospheric trajectories in the book.
Chapter 10 introduces aerodynamics, ranging from elementary concepts
to models of viscous hypersonic and rareﬁed ﬂows using computational ﬂuid
dynamics. The discussion is aimed at building an appropriate model of aero-
dynamic force and moment vectors for each ﬂow regime for the purpose of
ﬂight dynamic calculations. This chapter is a must for a beginning course on
ﬂight dynamics. Those interested in the details of aerodynamic and thermo-
dynamic models may consider the multitude of specialized texts cited in the
chapter.
Chapter 11 covers the elements of air-breathing propulsion from the point
of view of ﬂight dynamic modeling of the thrust vector and the rate of fuel
consumption. The discussion of characteristics and operational limitations

Preface
xi
of piston–propeller, turbine, and ramjet engines is comprehensive and self-
contained. A numerical model of the thrust and speciﬁc fuel consumption
with altitude and Mach number of a low-bypass turbofan engine is presented
and utilized in Chapter 12 for the simulation of ﬁghter airplane trajectories.
This chapter also must be a part of the basic undergraduate course in ﬂight
dynamics.
Chapter 12 is the heart of the book with its three-degree-of-freedom
ﬂight models, including planetary form, rotation, aerodynamics, and propul-
sion. General equations of motion in the planet-ﬁxed frame are derived from
ﬁrst principles in a systematic fashion. These equations govern the trans-
lational ﬂight of all aerospace vehicles (airplanes, rockets, spacecraft, entry
vehicles). The chapter contains nontrivial examples of atmospheric and trans-
atmospheric trajectories and provides detailed analytical insight into airplane-
ﬂight, rocket-ascent, and entry trajectories.
Chapter 13 presents the universal rotational dynamics model applicable
to all aerospace vehicles, emphasizing the commonality between the stabil-
ity and control characteristics of aircraft and spacecraft. The chapter derives
several attitude dynamics models based on various useful kinematic parame-
ters introduced in Chapter 2. Single-axis, open-loop, time-optimal impulsive
maneuvers are an important part of this chapter. After exhaustively cover-
ing spacecraft dynamics with many examples, the chapter culminates with
a rigorous derivation, modeling, and simulation of attitude motion in the
atmosphere. Examples in the chapter range from spin-stabilized, rotor and
thruster controlled spacecraft, to gravity-gradient satellites, thrust-vectored
rockets, and six-degree-of-freedom, inertia-coupled, ﬁghter airplanes. The ro-
tational dynamic models can be easily added to the three-degree-of-freedom
translational models of Chapter 12 in order to simulate the complete six-
degree-of-freedom motion of rigid craft.
Chapter 14 oﬀers the modeling and simulation of closed-loop control sys-
tems for a large variety of aerospace applications based upon modern con-
trol concepts. The ﬁrst part of the chapter presents an introduction of linear
systems theory, while the later sections cover multivariable control systems
applied to aircraft, spacecraft, and rockets with a multitude of interesting
examples.
Chapter 15 introduces advanced concepts, such as six-degree-of-freedom
and nonlinear modeling and simulation, ﬂexible vehicle dynamics, unsteady
aerodynamics and aeroelasticity, and propellant slosh dynamics. The impor-
tance of these topics to ﬂight dynamics, and their inclusion in advanced mod-
els, are discussed along with several important references for further study.
The following is a suggested coverage of material by course instructors. It
is not envisaged that the entire contents can be followed in a single course.
The basic undergraduate curriculum traditionally includes ﬂight dynamics
as a pair of courses: one on translational ﬂight (airplane performance/space
ﬂight dynamics), and the other on attitude motion (airplane stability and con-
trol/spacecraft dynamics and control). I suggest that the ﬁrst course (called

xii
Preface
Flight Dynamics-I )—typically oﬀered at the third-year level—should address
the translational aspects of both atmospheric and space ﬂight dynamics. Ide-
ally, this course would cover Chapter 1, Sections 2.1–2.4, 3.1, Chapter 4, Sec-
tions 5.1–5.2, 8.1–8.2, 9.1–9.3, 10.1, 10.2.1–10.2.4, and 10.3, Chapter 11, and
Sections 12.1 and 12.2. The second undergraduate course, Flight Dynamics-II,
(taken in the fourth year) would focus on the attitude motion of aerospace
vehicles, and would cover Sections 2.5–2.8, 13.1–13.6, 13.7.1–13.7.6, 14.1–
14.5, and 15.1–15.3. An advanced elective undergraduate- and graduate-level
course can be designed to cover rocket and entry trajectories, such as AE-644
Hypersonic and Trans-atmospheric Flight oﬀered at the Indian Institute of
Technology, Kanpur, having the two basic undergraduate courses discussed
above as its prerequisites. Such a course may cover Sections 3.2–3.4, 5.3–5.5,
6.1, 6.2, 8.3, 9.4, 10.2.5, 12.3, 12.4, 13.7.7, 13.7.8, 14.6, and 15.4. Another
advanced senior undergraduate and graduate course on interplanetary ﬂight
would consist of material covered in Sections 3.2–3.4, 5.3–5.7, 6.1–6.4, Chapter
7, Sections 8.3 and 12.4, having Flight Dynamics-I as its prerequisite. Such a
course would rely heavily on modeling and simulation, with trajectory design
semester projects based upon numerical solutions to Lambert’s problem. The
following ﬂowchart highlights the suggested coverage of material:
My motivation to study ﬂight dynamics began early in life. I recall, as a
ﬁve-year-old, being inspired by my late father—a doctor and medical oﬃcer—
to listen at late hours to a scratchy, live commentary of the Apollo-11 mission
over a radio set in the remote town of Chunar in India. My incessant curiosity
about ﬂight in the growing years was sought to be satisﬁed by him through nu-
merous illustrated books, magazines, and newspaper articles (of which I kept
a careful catalog in an old scrapbook). His encouragement was partly respon-
sible for my taking up aeronautical engineering in college at IIT–Kanpur, and
later on when he was no longer with us, completing my doctorate in aerospace
engineering at the University of Missouri–Rolla, as well as obtaining a private-
pilot certiﬁcate. I still remember his ideas about hydrogen-fueled airplanes,
and his suggestion that I also study astronomy in graduate school. My family,
friends, students, and colleagues have continually supported my enthusiasm
for all forms of ﬂight to the present day.
I would like to thank the editorial and production staﬀof Birkh¨auser
Boston, especially Tom Grasso, for their constructive suggestions and valuable
insights during the preparation of the manuscript. I am also grateful to The
MathWorks, Inc., for providing the latest MATLAB/Simulink version, utilized
in the examples throughout the book.
Ashish Tewari
May 2006

Preface
xiii

Contents
Preface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
v
1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
1
1.1
Aims and Objectives . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
1
1.2
Atmospheric and Space Flight. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
1
1.3
Modeling and Simulation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
3
1.4
Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
7
2
Attitude and Kinematics of Coordinate Frames . . . . . . . . . . . .
9
2.1
Aims and Objectives . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
9
2.2
Basic Deﬁnitions and Vector Operations . . . . . . . . . . . . . . . . . . . .
9
2.3
Coordinate Systems and Rotation Matrix . . . . . . . . . . . . . . . . . . . 13
2.4
Euler Axis and Principal Angle. . . . . . . . . . . . . . . . . . . . . . . . . . . . 16
2.5
Euler Angles . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19
2.6
Euler Symmetric Parameters (Quaternion). . . . . . . . . . . . . . . . . . 23
2.7
Rodrigues Parameters (Gibbs Vector) . . . . . . . . . . . . . . . . . . . . . . 27
2.8
Modiﬁed Rodrigues Parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . 28
2.9
Attitude Kinematics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30
2.10 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42
Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42
3
Planetary Form and Gravity . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45
3.1
Aims and Objectives . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45
3.2
Newton’s Law of Gravitation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45
3.3
Gravity of an Axisymmetric Planet . . . . . . . . . . . . . . . . . . . . . . . . 46
3.4
Radius of a Nonspherical Planet . . . . . . . . . . . . . . . . . . . . . . . . . . . 54
3.5
Gravitational Anomalies. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 56
3.6
Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57
Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58

xvi
Contents
4
Translational Motion of Aerospace Vehicles . . . . . . . . . . . . . . . . 59
4.1
Aims and Objectives . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59
4.2
Particle and Body . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59
4.2.1
Particle Kinematics in a Moving Frame . . . . . . . . . . . . . . 61
4.3
Newton’s Laws of Motion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 70
4.3.1
Variable Mass Bodies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 74
4.3.2
Rotation and Translation of a Body . . . . . . . . . . . . . . . . . 76
4.4
Energy and Angular Momentum. . . . . . . . . . . . . . . . . . . . . . . . . . . 81
4.4.1
The N -Body Problem . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 87
4.5
The Two-Body Problem . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 89
4.5.1
Geometry of Two-Body Trajectories . . . . . . . . . . . . . . . . . 94
4.5.2
Lagrange’s Coeﬃcients . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 98
4.5.3
Kepler’s Equation for Elliptical Orbit . . . . . . . . . . . . . . . . 101
4.5.4
Position and Velocity in a Hyperbolic Trajectory . . . . . . 108
4.5.5
Parabolic Escape Trajectory . . . . . . . . . . . . . . . . . . . . . . . . 111
4.6
Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 112
Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 113
5
Orbital Mechanics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 117
5.1
Aims and Objectives . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 117
5.2
Celestial Frame and Orbital Elements . . . . . . . . . . . . . . . . . . . . . . 117
5.2.1
Orbit Determination . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 120
5.3
Spherical Celestial Coordinates and Local Horizon . . . . . . . . . . . 123
5.4
Planet Fixed Frame. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 126
5.5
Single Impulse Orbital Maneuvers . . . . . . . . . . . . . . . . . . . . . . . . . 129
5.6
Multi-Impulse Orbital Transfer . . . . . . . . . . . . . . . . . . . . . . . . . . . . 135
5.7
Relative Motion in Orbit . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 138
5.8
Lambert’s Problem . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 140
5.9
Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 149
Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 149
6
Perturbed Orbits . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 153
6.1
Aims and Objectives . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 153
6.2
Perturbing Acceleration . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 153
6.3
Eﬀects of Planetary Oblateness. . . . . . . . . . . . . . . . . . . . . . . . . . . . 154
6.3.1
Sun Synchronous Orbits . . . . . . . . . . . . . . . . . . . . . . . . . . . . 156
6.3.2
Molniya Orbits . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 157
6.4
Eﬀects of Atmospheric Drag . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 157
6.5
Third-Body Perturbation and Interplanetary Flight . . . . . . . . . . 159
6.5.1
Sphere of Inﬂuence and Patched Conics . . . . . . . . . . . . . . 161
6.6
Numerical Solution to the Perturbed Problem . . . . . . . . . . . . . . . 164
6.7
Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 170
Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 170

Contents
xvii
7
The Three-Body Problem . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 173
7.1
Aims and Objectives . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 173
7.2
Equations of Motion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 173
7.3
Lagrange’s Solution . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 175
7.4
Restricted Three-Body Problem . . . . . . . . . . . . . . . . . . . . . . . . . . . 178
7.4.1
Lagrangian Points and Their Stability . . . . . . . . . . . . . . . 180
7.4.2
Jacobi’s Integral. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 183
7.4.3
Numerical Solution of the Restricted Problem . . . . . . . . . 185
7.5
Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 191
Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 191
8
Rocket Propulsion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 193
8.1
Aims and Objectives . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 193
8.2
The Rocket Engine . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 193
8.3
The Rocket Equation and Staging . . . . . . . . . . . . . . . . . . . . . . . . . 197
8.3.1
The Single-Stage Rocket . . . . . . . . . . . . . . . . . . . . . . . . . . . 199
8.3.2
The Multi-Stage Rocket . . . . . . . . . . . . . . . . . . . . . . . . . . . . 201
8.3.3
Parallel Staging . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 205
8.3.4
Mission Trade-Oﬀ. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 208
8.4
Optimal Rockets . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 210
8.4.1
Optimal Two-Stage Rocket . . . . . . . . . . . . . . . . . . . . . . . . . 211
8.4.2
Optimal Three-Stage Rocket . . . . . . . . . . . . . . . . . . . . . . . . 213
8.5
Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 216
Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 216
9
Planetary Atmosphere . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 219
9.1
Aims and Objectives . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 219
9.2
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 219
9.3
Hydrostatic Equilibrium . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 221
9.4
Standard Atmosphere . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 223
9.5
Exponential Model for Planetary Atmospheres . . . . . . . . . . . . . . 230
9.6
Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 231
Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 231
10
Elements of Aerodynamics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 233
10.1 Aims and Objectives . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 233
10.2 Basic Concepts . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 233
10.2.1 Aerodynamic Force and Moment . . . . . . . . . . . . . . . . . . . . 233
10.3 Fluid Dynamics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 238
10.3.1 Flow Regimes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 238
10.3.2 Continuum Flow . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 239
10.3.3 Continuum Viscous Flow and the Boundary Layer . . . . . 242
10.3.4 Continuum Compressible Flow . . . . . . . . . . . . . . . . . . . . . . 247
10.3.5 Rareﬁed Flow . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 253
10.4 Force and Moment Coeﬃcients . . . . . . . . . . . . . . . . . . . . . . . . . . . . 255

xviii
Contents
10.5 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 261
Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 262
11
Airbreathing Propulsion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 265
11.1 Aims and Objectives . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 265
11.2 Ideal Momentum Theory . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 265
11.3 Propeller Engines. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 268
11.4 Jet Engines . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 273
11.4.1 Ramjet Engines . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 273
11.4.2 Turbojet and Turbofan Engines . . . . . . . . . . . . . . . . . . . . . 275
11.5 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 279
Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 280
12
Atmospheric and Transatmospheric Trajectories . . . . . . . . . . . 283
12.1 Aims and Objectives . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 283
12.2 Equations of Motion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 283
12.3 Airplane Flight Paths . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 290
12.3.1 Long-Range Cruising Flight . . . . . . . . . . . . . . . . . . . . . . . . 297
12.3.2 Eﬀect of a Steady Wind on an Airplane Flight . . . . . . . . 304
12.3.3 Take-OﬀManeuver . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 308
12.3.4 Accelerated Climb . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 316
12.3.5 Maneuvers and Supermaneuvers . . . . . . . . . . . . . . . . . . . . . 325
12.4 Entry Trajectories . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 334
12.4.1 Ballistic Entry . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 338
12.4.2 Maneuvering Entry . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 349
12.5 Rocket Ascent Trajectories . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 353
12.6 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 363
Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 364
13
Attitude Dynamics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 369
13.1 Aims and Objectives . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 369
13.2 Euler Equations of Rotational Motion . . . . . . . . . . . . . . . . . . . . . . 369
13.3 Rotational Kinetic Energy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 373
13.4 Principal Body Frame . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 374
13.5 Torque-Free Rotation of Spacecraft . . . . . . . . . . . . . . . . . . . . . . . . 376
13.5.1 Axisymmetric Spacecraft . . . . . . . . . . . . . . . . . . . . . . . . . . . 377
13.5.2 Asymmetric Spacecraft . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 381
13.6 Spacecraft with Attitude Thrusters . . . . . . . . . . . . . . . . . . . . . . . . 384
13.6.1 Single-Axis Impulsive Rotation . . . . . . . . . . . . . . . . . . . . . . 386
13.6.2 Attitude Maneuvers of Spin-Stabilized Spacecraft . . . . . . 387
13.6.3 Asymmetric Spacecraft Maneuvers by Attitude
Thrusters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 394
13.7 Spacecraft with Rotors . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 397
13.7.1 Variable-Speed Control Moment Gyroscope . . . . . . . . . . . 400
13.7.2 Dual-Spin Spacecraft . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 404

Contents
xix
13.7.3 Gravity Gradient Spacecraft . . . . . . . . . . . . . . . . . . . . . . . . 409
13.8 Attitude Motion in Atmospheric Flight . . . . . . . . . . . . . . . . . . . . . 414
13.8.1 Equations of Motion with Small Disturbance . . . . . . . . . . 416
13.8.2 Stability Derivatives and De-coupled Dynamics. . . . . . . . 425
13.8.3 Longitudinal Dynamics . . . . . . . . . . . . . . . . . . . . . . . . . . . . 427
13.8.4 Airplane Longitudinal Modes . . . . . . . . . . . . . . . . . . . . . . . 431
13.8.5 Lateral Dynamics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 436
13.8.6 Airplane Lateral Modes . . . . . . . . . . . . . . . . . . . . . . . . . . . . 439
13.8.7 Rotational Motion of a Launch Vehicle . . . . . . . . . . . . . . . 442
13.8.8 Inertia Coupled Dynamics . . . . . . . . . . . . . . . . . . . . . . . . . . 446
13.9 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 450
Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 452
14
Attitude Control Systems. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 457
14.1 Aims and Objectives . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 457
14.2 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 457
14.3 Linear Systems . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 461
14.3.1 Time-invariant, Linear Systems . . . . . . . . . . . . . . . . . . . . . 462
14.3.2 Linear Stability Criteria . . . . . . . . . . . . . . . . . . . . . . . . . . . . 463
14.3.3 Transfer Matrix and Second-Order Systems . . . . . . . . . . . 465
14.4 Basic Closed-Loop Systems . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 468
14.5 Implementation of Control System Elements . . . . . . . . . . . . . . . . 472
14.5.1 Gyroscopic Sensors . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 474
14.6 Single-Axis, Closed-Loop Attitude Control . . . . . . . . . . . . . . . . . . 479
14.6.1 Control of Single-Axis Spacecraft Maneuvers . . . . . . . . . . 479
14.6.2 Roll Control of Aircraft and Missiles . . . . . . . . . . . . . . . . . 484
14.7 Multi-Axis Closed-Loop Attitude Control . . . . . . . . . . . . . . . . . . . 486
14.7.1 Attitude Stabilization of a Launch Vehicle . . . . . . . . . . . . 486
14.7.2 Reaction Wheel and Magnetic Denutation of Gravity
Gradient Spacecraft . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 491
14.7.3 Control of Aircraft and Missiles with Inertia Coupling. . 499
14.8 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 501
Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 504
15
Advanced Modeling and Simulation Concepts . . . . . . . . . . . . . 507
15.1 Aims and Objectives . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 507
15.2 Six-Degree-of-Freedom Simulation . . . . . . . . . . . . . . . . . . . . . . . . . 507
15.2.1 Wing-Rock Motion of a Fighter Airplane . . . . . . . . . . . . . 510
15.2.2 Trajectory and Attitude of a Ballistic Entry Vehicle . . . 512
15.3 Structural Dynamics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 518
15.4 Unsteady Aerodynamics and Aeroelasticity . . . . . . . . . . . . . . . . . 521
15.5 Propellant Slosh Dynamics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 527
15.6 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 528
Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 529

xx
Contents
A
Numerical Integration of Ordinary Diﬀerential Equations . . 531
A.1 Fixed-Step Runge–Kutta Algorithms . . . . . . . . . . . . . . . . . . . . . . . 531
A.2 Variable-Step Runge–Kutta Algorithms . . . . . . . . . . . . . . . . . . . . 532
A.3 Runge–Kutta–Nystr¨om Algorithms . . . . . . . . . . . . . . . . . . . . . . . . 534
Answers to Selected Exercises . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 537
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 543
Index . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 547

1
Introduction
1.1 Aims and Objectives
•
To provide a basic introduction to ﬂight.
•
To motivate the study of atmospheric and space ﬂight in a
comprehensive manner.
•
To classify and categorize ﬂight vehicles.
•
To introduce the fundamental assumptions in ﬂight modeling and
simulation.
1.2 Atmospheric and Space Flight
The study of ﬂight is traditionally divided into two categories: atmospheric
and space ﬂight mechanics. The two have evolved separately over the last cen-
tury. The advent of sustained, powered ﬂight through the air began in 1903
with the Wright Flyer, whose main purpose was to ﬁght gravity through the
thrust of its engine and the lift produced by its wings—both aerodynamic in
nature—in a controllable fashion. As atmospheric ﬂight progressed over the
decades, a new methodology was developed for its analysis, largely based on
the study of aerodynamic forces and moments. In contrast, space ﬂight, which
required neither lift, nor aerodynamic thrust, was contemplated using the the-
ories of astronomy and ballistics. Visionaries such as Jules Verne, Tsiolkovsky
and Walter Hohmann, and rocket pioneers, like Robert Goddard, Wernher
von Braun, and Sergei Korolev, produced a terminology for space ﬂight which
borrowed heavily from Kepler, Galileo, and Newton.
By the time Sputnik-I was launched into a low earth orbit in 1957, the
dichotomy in the science of ﬂight mechanics was well established, where aero-
dynamicists would have little to interest them in space exploration, other than
the design of launch vehicles, for which the common enemy—aerodynamic
drag—was to be minimized. Similarly, space mechanicians were least con-
cerned about airplane ﬂight, which was perhaps considered to be a lowly form

2
1 Introduction
of ﬂight, not at all in the same league as celestial mechanics. The revolution-
ary growth of aeronautical engineering in the ﬁrst ﬁve decades of the twenti-
eth century had given place to an incremental — rather than phenomenal—
progress in the latter half of century. With the shattering of the supersonic and
hypersonic ﬂight barriers in the 1940s and 1950s, it might have been a school
of thought that further development in aeronautical engineering would be less
challenging, compared to orbital, and lunar ﬂight. Separate programs of aero-
nautics and astronautics had already been instituted in all major engineering
universities, with specialized faculty and courses for each. Research organisa-
tions, such as NASA, had diﬀerent centers for aeronautics and space ﬂight. It
was several decades later, in the 1980s, that the term aerospace engineering
came into vogue. This was a novel concept, dramatized by the development of
the NASA’s space shuttle, which took oﬀvertically like a rocket, went into or-
bit for several days, then re-entered the atmosphere, and landed horizontally
as a glider.
Tail
Elevator
Rudder
Fin
Nacelle
Wing 
Ailerons
Canard
Fuselage
Fig. 1.1. Elements of airplane conﬁguration.
The atmospheric ﬂight vehicles are especially adapted for low aerodynamic
drag and can be classiﬁed into lifting vehicles (or aircraft) and non-lifting (or
ballistic) vehicles. Lifting vehicles derive their support (lift) in air using ei-
ther static, or dynamic interaction with the atmosphere. In the former the
aerostatic category lie the hot-air balloons, blimps, and dirigibles, while in
the aerodynamic lift category we have the airplanes, gliders, and rotorcraft
(or helicopters). The airplane is a versatile atmospheric vehicle, consisting
of ﬁxed wings, fuselage, nacelles, and empennage (or stabilizing and contol
surfaces such as tail, canards, and ﬁns), elevator, ailerons, and rudder, as
depicted in Fig. 1.1. While the wings produce the aerodynamic lift, the pay-
load, crew, powerplants, and fuel are housed in the fuselage and nacelles, and
the stabilizing surfaces maintain the vehicle in a stable equilibrium, and pro-
vide control for maneuvering. An airplane possesses all the features that are
found piecemeal in other atmospheric ﬂight vehicles. For example, a glider

1.3 Modeling and Simulation
3
is an airplane without a powerplant, while a helicopter has rotating—rather
than ﬁxed—wings.
The ballistic category of atmospheric vehicles includes missiles, launch ve-
hicles, and entry capsules. Some missiles and launch vehicles incorporate ﬁns
as aerodynamic stabilizing and control surfaces. The spacecraft are also catego-
rized according to their missions, such as low-earth orbit, medium-earth orbit,
geosynchronous orbit, lunar, and interplanetary spacecraft. Each mission is
deﬁned by the payload, and orbital elements of the ﬁnal orbit. Of course, a
reusable launch vehicle, such as the space shuttle, is also a spacecraft with a
unique mission.
Traditionally, a ﬂight vehicle is considered as being either atmospheric, or
space vehicle depending upon the instantaneous location of the craft. For ex-
ample, ﬂight above an altitude of 100 km over the earth is generally regarded
as space ﬂight. However, when modeling trans-atmospheric ﬂight (such as the
ascent of a rocket into space, and an atmospheric entry), it is necessary that
the artiﬁcial distinction betweeen space and atmospheric ﬂight be removed,
such that a smooth, continuous trajectory is generated from the governing
equations of motion. Consequently, the same set of equations can be used
across the atmosphere, and into the space (as we shall demonstrate in Chap-
ter 12), provided due consideration is given to the variation of atmospheric
density with altitude by an appropriate atmospheric model (Chapter 9), and
an accurate aerodynamic modeling is carried out according to the prevailing
ﬂow regime (Chapter 10). When it is certain that the trajectory lies either
completely within the atmosphere, or ouside it, one can take advantage of
the simpliﬁcation aﬀorded in the equations of motion, and in certain cases,
enjoy closed-form, analytical solutions. For example, space ﬂight is often ren-
dered by exact, analytical solutions for trajectories (Chapters 4 and 5), or by
numerical approximations (Chapters 6 and 7).
1.3 Modeling and Simulation
Modeling of ﬂight dynamics consists of idealization, selection of a reference
coordinate frame, and derivation of governing equations of motion consistent
with the idealization. Idealization is the process whereby necessary simplify-
ing assumptions are made for studying the relevant dynamics. For example,
in modeling the translational motion, it is often suﬃcient to ignore the size
and mass distribution, and consider the vehicle as a point mass (or, parti-
cle). This is called the particle idealization of the vehicle. In this process, the
distinct ways in which the vehicle can move, i.e., its degrees of freedom, are
reduced to only three. Similarly, it is a common practice to treat the vehi-
cle as a rigid body when considering its rotational motion, thereby reducing
the degrees of freedom, from inﬁnite (for a ﬂexible body) to only six. The
idealization must be carefully carried out so that the essential characteristics
of the motion under study are not lost. When the degrees of freedom are

4
1 Introduction
known, the next step is to select a set of motion variables (two for each degree
of freedom), and a reference frame for expressing the equations of motion.
For example, when studying high-altitude trajectories, such as those of space-
craft and atmospheric entry vehicles, the reference frame is usually ﬁxed to
the planet at its center, and the motion variables are spherical coordinates
of position and velocity. On the other hand, low-altitude ﬂight, such as that
of an airplane, usually employs a ﬂat, nonrotating planet idealization, with
the reference frame ﬁxed to the planet’s surface, and motion variables are ex-
pressed in Cartesian coordinates. The rotational motion is generally described
in reference to a coordinate frame ﬁxed to the vehicle at its center of mass.
The equations of motion can be divided into two categories: (a) kinematic
equations, which only consider the geometric relationships among the motion
variables, and (b) dynamic (or kinetic) equations, that are derived by taking
into account the physical laws of motion. The fundamental physical laws per-
tinent to ﬂight dynamics are Newton’s laws of motion and gravitation, as well
as the aerothermodyamic principles by which the aerodynamic and propulsive
force and moment vectors are derived. Figure 1.2 depicts the various idealiza-
tions and reference frames employed in aerospace ﬂight dynamics.
Particle idealization of
aerospace vehicle in planet 
centered frame.
Center of 
mass
Angular velocity 
Body fixed 
frame 
Particle idealization of aerospace 
vehicle in flat-planet surface frame.
Center of 
mass 
Position
Velocity
Velocity
Position
Center of 
mass 
Inertial frame
Rigid body idealization of aerospace 
vehicle in body fixed frame.
Fig. 1.2. Modeling of aerospace vehicles.

1.3 Modeling and Simulation
5
Simulation is the task of solving the governing equations of motion in such
a manner that a good approximation of the actual vehicle’s motion is attained.
Since the governing equations are generally nonlinear, coupled, ordinary dif-
ferential equations, their solution in a closed form is seldom possible, and
a numerical integration subject to appropriate initial condition is often the
only alternative. Therefore, simulation of ﬂight dynamics essentially consists
of numerical integration of a set of nonlinear, ordinary diﬀerential equations.
The accuracy attained in the solution depends primarily upon the numerical
procedure, and to some extent on the latter’s implementation in a computer
algorithm. All numerical schemes employ varying degrees of approximation,
wherein the derivatives are evaluated by Taylor series expansion. The num-
ber of terms retained in such a series is a rough indicator of the scheme’s
accuracy. The neglected terms of the series are grouped into the truncation
error of the numerical scheme. Since the neglected higher-order terms must
be relatively smaller in size, it is necessary that the numerical integration be
performed over steps of small intervals. Therefore, truncation error accumu-
lates as the number of steps required in the integration increases. Generally,
a ﬁne balance must be struck between the reduction of the total truncation
error, and the number of terms that must be retained in the memory for each
computational step. Since the nonlinear numerical integration procedure has
to be iterative in nature, one must also look at its stability and convergence
properties. Stability of a numerical scheme allows the truncation error to re-
main bounded, while convergence implies that the numerical solution reaches
essentially a steady state, and does not keep oscillating forever. We will see
in an appendix how an accurate numerical solution of governing equations
of motion can be carried out. The process of ﬂight dynamic modeling and
simulation is graphically depicted by a ﬂow chart in Fig. 1.3.
With the availability of ready-made modeling tools, such as specialized
MATLAB/Simulink toolboxes, the task of modeling complex system dynam-
ics has become quite simple. However, great caution must be exercised when
using such software as learning tools. Often, students have a tendency to
employ tailor-made software to solve rather complex problems, without re-
ally understanding the inherent modeling assumptions and other limitations
of the software. Such a tendency must be deﬁnitely curbed in a successful
course on ﬂight dynamics. The MathWork’s Simulink software comes with
a toolbox called Aerospace Block-Set, which has many useful features for
building airplane ﬂight dynamic models in a modular fashion, such as six-
degree-of-freedom equations of motion, linearized aerodynamics, a turbofan
engine block, second- and third-order actuators, several standard atmosphere
and earth gravity models, as well as statistical wind disturbance models. How-
ever, these must be properly understood in the context of equations of motion
and coordinate systems of modeled dynamics before applying them to solve
a given problem. For example, the 3-DOF Animation and 3-DOF Equations
of Motion blocks pertain to a very speciﬁc three-degree-of-freedom system—
namely translation in the vertical plane and rotation about a body axis—and

6
1 Introduction
Idealization of vehicle 
dynamics
(degrees of freedom)
Reference frame and motion
coordinates
Equations of motion
(kinematic and dynamic)
Numerical solution of 
equations of motion
(integration scheme, step size, 
tolerance)
Desired numerical accuracy 
achieved?
Yes
No
Important dynamics
simulated?
Yes
No
Stop
Fig. 1.3. Flight dynamic modeling and simulation procedure.
should not be applied to model the three-dimensional translation of a ﬂight
vehicle. The use of specialized software as a black box is detrimental to learn-
ing the basic concepts underlying ﬂight dynamics. It is a responsibility of the
teacher to appropriately admonish an undergraduate class about the limita-
tions of using custom-built software for learning. Ideally, the students must
be encouraged to write their own programs from scratch, using only the ba-
sic functions and operations of a mathematical software, such as MATLAB,
or the numerical algorithm libraries of basic programming languages such as
FORTRAN, C, and Java. Such an approach is adopted everywhere in this
book. Formulation—rather than programming—is the core of ﬂight mechan-
ics. It matters little which programming language is used to solve a given set
of equations, provided the latter are correct. While we have utilized MATLAB
to write programs in this book, the same can be done in any other program-

1.4 Summary
7
ming language. The emphasis in exercises is placed on testing whether the
reader has understood the correct procedure for the derivation of the ﬂight
models.
1.4 Summary
Atmospheric and space ﬂight vehicles, although having evolved separately,
obey the same physical principles and share the same modeling and simula-
tion concepts. The categorization of ﬂight vehicles into spacecraft (satellites,
lunar, and interplanetary craft) and aircraft (balloons, airplanes, gliders, mis-
siles, launch, and entry vehicles) is by mission rather than by physical dis-
tinction, and includes vehicles such as the space shuttle. Modeling of any
ﬂight vehicle involves idealization, selection of appropriate coordinate frames,
and derivation of the governing equations of motion. Simulation refers to the
task of accurately integrating the governing diﬀerential equations of motion
in time, while including appropriate environmental and control eﬀects. The
ready-made modeling and simulation tools, such as the MATLAB/Simulink
software, enable the analysis of most ﬂight situations with ease. However, a
successful simulation with even such versatile tools requires a correct problem
formulation and a suitable mathematical model.

2
Attitude and Kinematics of Coordinate Frames
2.1 Aims and Objectives
•
To present the kinematic modeling useful in all ﬂight dynamic
derivations and analyses.
•
To oﬀer a rigorous vector analysis of rotational kinematics.
•
To derive the basic identities of coordinate transformations in a manner
that can be easily utilized for both translational and rotational equations
of motion in subsequent chapters.
•
To introduce several alternative kinematic representations (Euler angles,
Euler axis/principal angle, rotation matrix, quaternion, Rodrigues and
modiﬁed Rodrigues parameters) and their evolution in time.
2.2 Basic Deﬁnitions and Vector Operations
The basic entity in dynamics is a vector. We shall denote vectors by bold-
face symbols, and draw them as arrows. A vector has both magnitude and
direction and is represented by magnitudes along any three mutually perpen-
dicular axes, called a coordinate frame (or, a reference frame). Each axis of a
coordinate frame is represented by a unit vector, deﬁned as a vector of unit
magnitude. Let us consider a vector, A, written in terms of its magnitudes
along a coordinate frame consisting of a triad formed by the unit vectors,
i, j, k, as follows:
A = Axi + Ayj + Azk ,
(2.1)
or, simply as
A =
⎧
⎨
⎩
Ax
Ay
Az
⎫
⎬
⎭,
(2.2)
where it is understood that the components, Ax, Ay, Az multiply i, j, k, respec-
tively. A component is the magnitude of the vector projected on to a particular

10
2 Attitude and Kinematics of Coordinate Frames
axis. As we shall see below, it is possible to transfer the components of a vec-
tor to another coordinate frame by using a coordinate transformation. Two
(or more) vectors can be added, or subtracted by adding, or subtracting their
respective components referred to the same coordinate frame. There are two
distinct ways in which vectors can be multiplied: the scalar product, and the
vector product. As the names suggest, the scalar product of two vectors is
a scalar (a quantity with only magnitude), whereas a vector product of two
vectors is a vector. The scalar product (also called dot product) of two vectors,
A and B, is deﬁned by
A · B .= AB cos θ ,
(2.3)
where A, B are the respective magnitudes, and θ is the angle between the two
vectors. From this deﬁnition, it is clear that the dot product of any two vectors
with the same direction is the product of their respective magnitudes, while
two mutually perpendicular (orthogonal) vectors have a zero dot product.
Therefore, it follows that
A · i = Ax ; A · j = Ay ; A · k = Az ,
(2.4)
and we can write the dot product of two vectors, A = Axi + Ayj + Azk and
B = Bxi + Byj + Bzk, as
A · B = AxBx + AyBy + AzBz = {Ax Ay Az}
⎧
⎨
⎩
Bx
By
Bz
⎫
⎬
⎭= AT B .
(2.5)
In Eq. (2.5) we have denoted the transpose of a vector with a superscript
T, which is obtained by arranging the components in a row [rather than the
column form of Eq. (2.2)]. Hence, the scalar product is the sum of products of
the respective components of the two vectors. For a refresher on vectors and
matrices, please refer to Kreyszig [4].
The vector product (also called the cross product), A × B, is deﬁned as
follows:
(a) The magnitude is given by | A × B |= AB sin θ, where θ is the angle
between the two vectors.
(b) The direction of A × B is normal to the plane formed by the two vectors,
and is given by the right-hand rule, i.e., when the curled ﬁngers of the right
hand point from A to B, the thumb points in the direction of A×B (Fig. 2.1).
From this deﬁnition, it is clear that the vector product of any two vectors
with the same (or opposite) direction is zero, while two mutually perpendicular
vectors have a vector product with magnitude equal to the product of their
respective magnitudes. Furthermore, it follows that A × B = −B × A. A
coordinate frame i, j, k is said to be right-handed if its triad of unit vectors
is arranged such that i × j = k. Therefore, with reference to a right-handed
frame, we can write the vector product of two vectors, A = Axi + Ayj + Azk
and B = Bxi + Byj + Bzk, as follows:

2.2 Basic Deﬁnitions and Vector Operations
11
T
A
B
AuB
Fig. 2.1. Vector product of two vectors, A and B.
A × B = (AyBz −AzBy)i + (AzBx −AxBz)j + (AxBy −AyBx)k .
(2.6)
By introducing the short-hand notation of the determinant of a square matrix,
we can write Eq. (2.6) as
A × B =

i
j
k
Ax Ay Az
Bx By Bz

.
(2.7)
The foregoing deﬁnitions allow us to derive the following identities involving
the vector product:
A × (B × C) = B(A · C) −C(A · B) .
(2.8)
(A × B) × C = B(A · C) −A(B · C) .
(2.9)
(A × B) · (C × D) = (A · C)(B · D) −(A · D)(B · C) .
(2.10)
(A × B) × (C × D) = (A · (B × D))C −(A · (B × C))D .
(2.11)
By using MATLAB, one can easily compute scalar and vector products of
vectors by using the in-built commands dot and cross, respectively.
Example 2.1. Let us ﬁnd scalar and vector products of A = −2i + 5j −k and
B = i + 3k with the following MATLAB commands:
>>A=[-2;5;-1];B=[1;0;3];
>>s=dot(A,B) %scalar product
s = -5
>>C=cross(A,B)
%vector product C=AxB
C = 15
5
-5
>>D=cross(B,A)
%vector product D=BxA
D = -15
-5
5

12
2 Attitude and Kinematics of Coordinate Frames
>>E=cross(A,cross(A,B)) % vector triple product E=Ax(AxB)
E = -20
-25
-85
You may verify these results with hand calculations of Eqs. (2.5) and (2.7).
'T
A(t+'t)
A(t)
'A
D
D
Fig. 2.2. A changing vector.
The time derivative of a vector, A, is deﬁned by the following:
dA
dt
.= lim
Δt→0
A(t + Δt) −A(t)
Δt
= lim
Δt→0
ΔA
Δt ,
(2.12)
where ΔA denotes the total change caused by changes in both magnitude
and direction, as depicted in Fig. 2.2. It can be seen from Fig. 2.2 that an
isosceles triangle is formed by extending the vector A(t) until its magnitude
becomes equal to A(t + Δt). In the limit Δt →0, we have Δθ →0, and thus
α →π
2 . Hence, the two dashed lines in Fig. 2.2 represent the extension (or
contraction) and rotation of A, respectively, and we have
lim
Δt→0 ΔA = [A(t + Δt) −A(t)]A(t)
A(t) + ω × A(t)Δt ,
(2.13)
where ω is the angular velocity of A, directed into the plane of Fig. 2.2 with
magnitude given by
ω = dθ
dt
.= lim
Δt→0
Δθ
Δt .
(2.14)
Upon substitution of Eq. (2.13) into Eq. (2.12), we have
dA
dt = dA
dt
A
A + ω × A ,
(2.15)

2.3 Coordinate Systems and Rotation Matrix
13
where the ﬁrst term on the right-hand side represents time derivative due to
a change in the magnitude, and the second, that due to rotation. An observer
rotating with the same angular velocity as A would notice only the ﬁrst term,
while a stationary observer would notice both the terms.
2.3 Coordinate Systems and Rotation Matrix
As noted above, a vector can be expressed in a variety of coordinate frames,
each of which is represented by a triad of unit vectors. We will conﬁne our
discussion to right-handed coordinate frames. Any number of diﬀerent coordi-
nate frames can be derived by rotating the orthogonal axes about the origin,
O. Sometimes, it may be necessary to use a coordinate frame with a diﬀerent
origin, O′. Hence, the general transformation from one coordinate frame to
another consists of a translation of the origin, and a rotation of the axes about
the new origin. However, the translation of the origin is handled quite easily
by specifying the displacement vector, R from O to O′ (Fig. 2.3), and its time
derivatives, such that the displacement, velocity, and acceleration, r, v, a, re-
spectively, in the original frame are related to their counterparts r′, v′, a′, in
the translated frame by
r = R + r′ ,
v = dR
dt + v′ ,
(2.16)
a = d2R
dt2 + a′ .
Since the translation of coordinate frames is trivial, we shall focus instead on
Yc
Z
Y
O
X
R
Zc
Oc
rc
r
Xc
Fig. 2.3. Translation of a coordinate frame.

14
2 Attitude and Kinematics of Coordinate Frames
Xc
X
Y
O
Z
Zc
Yc
'
e
Fig. 2.4. Rotation of a coordinate frame.
coordinate transformations involving rotation. Consider a frame (OXYZ) with
axes OX, OY, and OZ, denoted by unit vectors i, j, k, respectively. The frame
is rotated about the origin, O, to produce a new frame, (OX′Y ′Z′) denoted by
i′, j′, k′ (Fig. 2.4). Now, consider a vector, A, alternately expressed in terms
of its components in the original and rotated frames, as follows:
A = Axi + Ayj + Azk = A′
xi′ + A′
yj′ + A′
zk′ ,
(2.17)
which can be written in a matrix form as
A = (i j k)
⎧
⎨
⎩
Ax
Ay
Az
⎫
⎬
⎭= (i′ j′ k′)
⎧
⎨
⎩
A′
x
A′
y
A′
z
⎫
⎬
⎭.
(2.18)
In order to ﬁnd the relationship between the two sets of components, we take
scalar products A · i′, A · j′, and A · k′, resulting in
⎧
⎨
⎩
A′
x
A′
y
A′
z
⎫
⎬
⎭=
⎛
⎝
i′ · i
i′ · j
i′ · k
j′ · i
j′ · j
j′ · k
k′ · i k′ · j k′ · k
⎞
⎠
⎧
⎨
⎩
Ax
Ay
Az
⎫
⎬
⎭.
(2.19)
We can also take scalar products of A with i, j, and k, to derive the following:
⎧
⎨
⎩
Ax
Ay
Az
⎫
⎬
⎭=
⎛
⎝
i · i′
i · j′
i · k′
j · i′
j · j′
j · k′
k · i′ k · j′ k · k′
⎞
⎠
⎧
⎨
⎩
A′
x
A′
y
A′
z
⎫
⎬
⎭.
(2.20)
We rewrite Eq. (2.19) as
⎧
⎨
⎩
A′
x
A′
y
A′
z
⎫
⎬
⎭= C
⎧
⎨
⎩
Ax
Ay
Az
⎫
⎬
⎭,
(2.21)

2.3 Coordinate Systems and Rotation Matrix
15
where C is the following matrix consisting of the cosines of angles (Eq. (2.3))
between the axes of the two coordinate frames and is thus called the direction
cosine matrix, or the rotation matrix:
C .=
⎛
⎝
i′ · i
i′ · j
i′ · k
j′ · i
j′ · j
j′ · k
k′ · i k′ · j k′ · k
⎞
⎠.
(2.22)
The coordinate transformation, Eqs. (2.19), can also be expressed as follows:
⎧
⎨
⎩
i′
j′
k′
⎫
⎬
⎭= C
⎧
⎨
⎩
i
j
k
⎫
⎬
⎭.
(2.23)
From Eqs. (2.19) and (2.20), it is clear that the rotation matrix has the fol-
lowing property:
CT C = CCT = I ,
(2.24)
from which it follows that C−1 = CT . A matrix with this property is said to
be orthogonal, since the vectors formed out of the columns of the matrix are
orthogonal. From Eq. (2.24), we can also deduce the fact that the determinant,
| C |= ±1. A rotation for which | C |= 1 is called a proper rotation. It is easy to
see from the deﬁnition of the rotation matrix, Eq. (2.21), that two successive
rotations of a coordinate frame can be represented simply by multiplying the
rotation matrices of individual rotations as follows:
C′′ = C′C ,
(2.25)
where the orientation C′′ is obtained by ﬁrst undergoing a rotation C, followed
by a rotation C′. Other properties of the rotation matrix are discussed in the
following section.
Example 2.2. Find the rotation matrix that produces the right-handed co-
ordinate frame i′, j′, k′ given by i′ = 0.1i + 0.2j + √1 −0.01 −0.04k, and
j′ = −0.1i −0.9726095077j +
√
1 −0.01 −0.97260950772k.
We check the orthogonality of the given vectors, calculate the third axes
of the right-handed frame, and then ﬁnd C according to Eq. (2.22) as follows:
>> iprime=[0.1;0.2;sqrt(1-0.01-0.04)],jprime=[-0.1;-0.9726095077;
sqrt(1-0.01-0.9726095077^2)]
iprime =
0.10000000000000
jprime =
-0.10000000000000
0.20000000000000
-0.97260950770000
0.97467943448090
0.20983504362133
>>dot(iprime,jprime)
ans =
1.111077896354118e-010
>> kprime=cross(iprime,jprime)
%k’=i’xj’
kprime =
0.98994949366004
-0.11845144781022
-0.07726095077000
>>i=[1;0;0];j=[0;1;0];k=[0;0;1];

16
2 Attitude and Kinematics of Coordinate Frames
>> C=[dot(iprime,i),dot(iprime,j),dot(iprime,k);...%rotation matrix
dot(jprime,i),dot(jprime,j),dot(jprime,k);...
dot(kprime,i),dot(kprime,j),dot(kprime,k)]
C = 0.10000000000000
0.20000000000000
0.97467943448090
-0.10000000000000
-0.97260950770000
0.20983504362133
0.98994949366004
-0.11845144781022
-0.07726095077000
>> det(C)
%determinant of C
ans =
1.0000
Hence, the rotation matrix consists of the axes of the rotated frame (ex-
pressed in the unit vectors of the original axes) as its columns. You may verify
that the rotation considered in this example is proper.
2.4 Euler Axis and Principal Angle
From the discussion given above, it is clear that a rotation of a coordinate
frame can be represented by a rotation matrix, C. A rotation can also be
described by specifying the axis of rotation, as well as the angle by which
the frame has been rotated. This common experience is formalized in Euler’s
theorem, which states that the relative orientation of any pair of coordinate
frames is uniquely determined by a rotation by angle, Φ, about a ﬁxed axis
through the common origin, called the Euler axis. This unique rotation is
termed the principal angle. A graphical depiction of the principal rotation is
shown in Fig. 2.4, where a counter-clockwise rotation is considered positive by
the right-hand rule. Euler’s theorem thus provides an alternative description
of rotation using unit vector, e, representing the direction of Euler axis, and
the principal rotation angle, Φ. Before using the new representation, we must
know how these two quantities can be derived. An insight into the Euler
axis can be obtained by analyzing the eigenvalues and eigenvectors [4] of the
rotation matrix. Let c be an eigenvector associated with the eigenvalue, λ of
C:
Cc = λc .
(2.26)
By premultiplying Eq. (2.26) by the Hermitian conjugate [4] of each side, we
have
(Cc)H(Cc) = λλcHc ,
(2.27)
or, since C is real and satisﬁes Eq. (2.24),
(λλ −1)cHc = 0 ,
(2.28)
which implies that
λλ = 1 ,
(2.29)
because c is nonzero. Equation (2.29) states the fact that all eigenvalues of C
have unit magnitudes. Now, C, being a (3 × 3) matrix, has three eigenvalues.
Since complex eigenvalues occur in conjugate pairs, it follows that one of the
eigenvalues of C must be real, for which Eq. (2.26) becomes

2.4 Euler Axis and Principal Angle
17
Cc1 = c1 ,
(2.30)
and which implies that the eigenvector, c1, associated with λ = 1 is unchanged
by the rotation. It also follows from Eqs. (2.24) and (2.30) that c1T c1 = 1,
i.e., c1 is a unit vector. Therefore, it is clear that Euler axis—being invariant
under coordinate frame rotation—is represented by e .= c1.
The other two eigenvalues of C, being complex conjugates with a unit mag-
nitude, can be written as λ2,3 = e±iβ .= cos β ± i sin β. Thus, from Eq. (2.26),
we have
Cc2,3 = e±iβc2,3 .
(2.31)
From the complex plane representation of a vector (also due to Euler), the
factor eiβ multiplying a vector, implies a rotation by angle β. Thus, the eigen-
vectors, c2,3 (complex conjugates), undergo a rotation by angle β when the
coordinate frame is rotated about the axis c1. A consequence of C being or-
thogonal [Eq. (2.24)] is that its eigenvectors are mutually perpendicular. Since
c2,3 are perpendicular to c1, their rotation must be equal to the angle of co-
ordinate frame rotation. Therefore, Φ .= β. A simple method of obtaining the
principal rotation angle is through the trace of C [4]:
traceC = λ1 + λ2 + λ3 = 1 + eiΦ + e−iΦ = 1 + 2 cosΦ ,
(2.32)
or,
cos Φ = 1
2(traceC −1) .
(2.33)
There are two values of Φ, diﬀering only in sign, that satisfy Eq. (2.33), each
having Euler axis, e, in opposite directions. This does not cause any ambiguity,
because a rotation by Φ about e is the same as a rotation by −Φ about −e.
Example 2.3. Let us ﬁnd the principal rotation angle and Euler axis for the
transformation given in Example 2.2, with the use of the built-in MATLAB
program eig.m, that enables eigenvalue analysis of a square matrix, as follows:
>> [c,D]=eig(C)
%eigenvectors, c, and diagonal matrix of eigenvalues, D
c =
-0.7378
-0.0179 - 0.4770i
-0.0179 + 0.4770i
-0.0343
0.7067
0.7067
-0.6742
-0.0164 + 0.5220i
-0.0164 - 0.5220i
D =
1.0000
0
0
0
-0.9749 + 0.2225i
0
0
0
-0.9749 - 0.2225i
>> phi=acos(0.5*(trace(C)-1))
%rotation angle (rad.)
phi =
2.9172
>> phi=acos(real(D(2,2)))
%confirm rotation angle (rad.)
phi =
2.9172
Thus, the rotation angle is Φ = ±2.9172 rad. (±167.1447◦), and Euler
axis is given by the eigenvector of C corresponding to the real eigenvalue,
e = ±(−0.7378i−0.0343j−0.6742k). It is also clear that the complex conjugate
eigenvectors satisfy Eq. (2.31).

18
2 Attitude and Kinematics of Coordinate Frames
The rotation matrix can be derived from the Euler axis/principal angle
using Euler’s formula (Exercise 2.5).
The simplest coordinate transformations are rotations about the axes of a
coordinate frame, called elementary rotations. A positive rotation of (OXYZ)
about OX by angle Φ is represented by the rotation matrix
C1 .=
⎛
⎝
1
0
0
0
cos Φ
sin Φ
0 −sin Φ cos Φ
⎞
⎠,
(2.34)
whereas the rotation matrix for a positive rotation about OY by the same
angle is
C2 .=
⎛
⎝
cos Φ 0 −sin Φ
0
1
0
sin Φ 0
cos Φ
⎞
⎠.
(2.35)
Similarly, a positive rotation about OZ by Φ is given by
C3 .=
⎛
⎝
cos Φ
sin Φ 0
−sin Φ cos Φ 0
0
0
1
⎞
⎠.
(2.36)
A more complicated coordinate transformation can be derived by multiple
single-axis rotations in a given sequence, using the elementary rotation ma-
trices, as demonstrated below.
Example 2.4. Find the rotation matrix for a coordinate transformation ob-
tained by a 20◦rotation about OZ, followed by a −65◦rotation about OX′.
We begin by representing the ﬁrst rotation as follows:
⎧
⎨
⎩
i′
j′
k′
⎫
⎬
⎭= C3(20◦)
⎧
⎨
⎩
i
j
k
⎫
⎬
⎭.
(2.37)
The next rotation is by an angle −65◦about i′. Thus, we write the ﬁnal
orientation as
⎧
⎨
⎩
i′′
j′′
k′′
⎫
⎬
⎭= C1(−65◦)
⎧
⎨
⎩
i′
j′
k′
⎫
⎬
⎭,
(2.38)
or, by substituting Eq. (2.37) into Eq. (2.38), we have
⎧
⎨
⎩
i′′
j′′
k′′
⎫
⎬
⎭= C1(−65◦)C3(20◦)
⎧
⎨
⎩
i
j
k
⎫
⎬
⎭.
(2.39)

2.5 Euler Angles
19
Therefore, the required rotation matrix is the following:
C = C1(−65◦)C3(20◦)
=
⎛
⎝
cos(20◦)
sin(20◦)
0
−sin(20◦) cos(−65◦)
cos(20◦) cos(−65◦)
sin(−65◦)
sin(20◦) sin(−65◦)
−cos(20◦) sin(−65◦) cos(−65◦)
⎞
⎠
=
⎛
⎝
0.9397
0.3420
0
−0.1445 0.3971 −0.9063
−0.3100 0.8517
0.4226
⎞
⎠.
The Euler axis and principal angle for this rotation are obtained in the same
manner as in Example 2.3 to be e = ±(0.9501i + 0.1675j −0.2630k) and
Φ = ±67.6836◦, respectively.
In terms of the elements (i, j) of C—denoted by cij—Eqs. (2.30) and (2.33)
lead to the following explicit expressions for the components of Euler axis, e:
e1 = c23 −c32
2 sin Φ ,
e2 = c31 −c13
2 sin Φ ,
(2.40)
e3 = c12 −c21
2 sin Φ
.
It is clear from Eqs. (2.40) that Euler axis is deﬁned only for nonzero rotations.
2.5 Euler Angles
We are now in a position to consider the orientation, or attitude, of a coor-
dinate frame, relative to another frame. Such a description is quite useful in
representing the attitude of a ﬂight vehicles (or any other object), to which a
coordinate frame is rigidly attached, in reference to a second coordinate frame.
Two previously discussed attitude representations are via the rotation matrix
and the Euler-axis/principal angle combination. From the foregoing discus-
sion, it is clear that a general orientation can also be obtained by using suc-
cessive rotations about the axes of the reference frame. The largest number of
such rotations needed to uniquely specify a given orientation, called rotational
degrees of freedom, is three. Hence, we can employ three angles, each about a
particular cordinate axis, to describe a given orientation. Such a representation
of the attitude by three angles is called an Euler angle representation, and the
concerned angles are known as Euler angles. The sequence of axial rotations
is of utmost importance in the Euler angle representation. You can convince
yourself about this fact by rotating a book by three elementary rotations of
90◦, each about a diﬀerent axis, and then carrying out the rotations about the

20
2 Attitude and Kinematics of Coordinate Frames
Y
G
O
G
R
Ysc
Zsc
Zs
Z,Zc
Z
Z
Xc
Xs,Xsc
R
Yc,Ys
X
Fig. 2.5. The Euler angle orientation, (ψ)3, (θ)2, (φ)1.
same axes in a diﬀerent sequence. The ﬁnal attitude of the book will be diﬀer-
ent in each set of rotations. This important property of elementary rotations
can also be seen by simply reversing the sequence of rotations in Example 2.4.
We can specify the Euler angles and the axes of sequential rotations us-
ing notation such as (ψ)3, (θ)2, (φ)1, which denotes a rotation of (OXYZ) by
angle ψ about OZ, resulting in the intermediate orientation, (OX′Y ′Z′), fol-
lowed by a rotation by angle θ about OY ′, resulting in (OX′′Y ′′Z′′), and
then a ﬁnal rotation by angle φ about OX′′, to produce the new orientation,
(OX′′′Y ′′′Z′′′). This Euler angle orientation, which is a description of the at-
titude of an aircraft relative to a local horizon using the Euler angles, yaw
(ψ), pitch (θ), and roll (φ), is depicted in Fig. 2.5. The rotation matrix for
the orientation (ψ)3, (θ)2, (φ)1, is the following:
C = C1(φ)C2(θ)C3(ψ) =
(2.41)
⎛
⎝
cos θ cos ψ
cos θ sin ψ
−sin θ
(sin φ sin θ cos ψ −cos φ sin ψ) (sin φ sin θ sin ψ + cos φ cos ψ) sin φ cos θ
(cos φ sin θ cos ψ + sin φ sin ψ) (cos φ sin θ sin ψ −sin φ cos ψ) cos φ cos θ
⎞
⎠.
However, it is not necessary that all the three coordinate axes should
be involved in describing a particular orientation. For example, astronomers
and physicists traditionally employ the classical Euler angles, (ω)3, (i)1, (Ω)3,
to represent the orientation of an orbital plane in reference to a celestial
coordinate frame (Chapter 5). A set of Euler angles that begins and ends
with the same axis—such as (ω)3, (i)1, (Ω)3—is said to be symmetric. The
symmetric and asymmetric sets of Euler angles are qualitatively diﬀerent,
and it is generally much easier to handle the former.
Example 2.5. Find the rotation matrix, Euler axis, and principal angle for the
orientation (α)1, (β)2, (α)3, where α = −45◦, β = 45◦.

2.5 Euler Angles
21
We shall employ MATLAB for this calculation, by ﬁrst evaluating the ele-
mentary rotation matrices, and then multiplying them in the proper sequence
to produce the ﬁnal orientation:
>> dtr=pi/180;alfa=-45*dtr;beta=45*dtr;
>> C1=[1 0 0;0 cos(alfa) sin(alfa);0 -sin(alfa) cos(alfa)]
C1 =
1.0000
0
0
0
0.7071
-0.7071
0
0.7071
0.7071
>> C2=[cos(beta) 0 -sin(beta);0
1
0;sin(beta) 0 cos(beta)]
C2 =
0.7071
0
-0.7071
0
1.0000
0
0.7071
0
0.7071
>> C3=[cos(alfa) sin(alfa) 0;-sin(alfa) cos(alfa) 0;0 0 1]
C3 =
0.7071
-0.7071
0
0.7071
0.7071
0
0
0
1.0000
>> C=C3*C2*C1
%rotation matrix for the final orientation
C =
0.5000
-0.8536
0.1464
0.5000
0.1464
-0.8536
0.7071
0.5000
0.5000
>> [c,D]=eig(C)
%eigenvectors and eigenvalues of C
c =
0.6786
0.1405+0.5000i
0.1405-0.5000i
-0.2811
0.6786
0.6786
0.6786
0.1405-0.5000i
0.1405+0.5000i
D =
1.0000
0
0
0
0.0732+0.9973i
0
0
0
0.0732-0.9973i
>> Phi=acos(0.5*(trace(C)-1))/dtr
%principal angle (deg.)
Phi =
85.8009
Hence, the rotation matrix for the given orientation is
C =
⎛
⎝
0.5
−0.8536
0.1464
0.5
0.1464
−0.8536
0.7071
0.5
0.5
⎞
⎠,
and the Euler axis and principal angle are e = ±(0.6786i−0.2811j+0.6786k),
and Φ = ±85.8009◦, respectively.
In order to specify the attitude by Euler angles, we must be able to deter-
mine them uniquely from the rotation matrix. It is clear from Eq. (2.41) that
the Euler angles for the representation, (ψ)3, (θ)2, (φ)1, can be determined
according to the following inverse transformation:
φ = tan−1 c23
c33
,
θ = −sin−1 c13,
(2.42)
ψ = tan−1 c12
c11
,
where cij represents the element (i, j) of C. Of course, neither c11 nor c33 must
vanish; otherwise the angles φ and ψ cannot be determined.

22
2 Attitude and Kinematics of Coordinate Frames
Example 2.6. Let us ﬁnd the Euler angles for the attitude given in Example
2.2, using the representation (ψ)3, (θ)2, (φ)1:
φ = tan−1 c23
c33
= tan−1 0.20983504362133
−0.07726095077 = −69.7864◦or 110.2136◦,
θ = sin−1 c−13 = sin−1(−0.9746794344809) = −77.079◦or −102.921◦,
ψ = tan−1 c12
c11
= tan−1 0.2
0.1 = 63.4349◦or −116.5651◦.
You may verify the accuracy of the calculated Euler angles by forming
the rotation matrix according to Eq. (2.41) and comparing with the result of
Example 2.2.
It is clear from Example 2.6 that the Euler angles are not unique. Fur-
thermore, there are certain orientations for which the Euler angles cannot be
determined at all from the rotation matrix, C. In such a case, the Euler angle
representation is said to be singular, and becomes useless. An example of a
singular orientation is (ψ)3, (±90◦)2, (φ)1, for which c11 = c12 = c23 = c33 = 0,
and the angles φ and ψ become indeterminate. For most aircraft, usage of the
Euler angle representation (ψ)3, (θ)2, (φ)1 does not cause a problem, because
(ψ)3, (±90◦)2, (φ)1 is rarely encountered. However, the same cannot be said
of a ﬁghter aircraft, a missile, or a spacecraft, where the vertical attitude is a
possibility. Of course, in such a case one can switch to a diﬀerent set of Euler
angles (e.g., (ψ)3, (θ)1, (φ)3), for which a particular singularity is avoided, but
the new representation would have singularity at some other orientation. Thus,
a single Euler angle representation cannot be utilized where an arbitrary ori-
entation is possible. This deﬁciency in attitude representation by three angles
(or any three parameters) leads one to search for nonsingular representa-
tions that must necessarily involve more than three parameters. Two obvious
choices of nonsingular attitude representations are the set of nine elements of
the rotation matrix, and the set of four orientation parameters arising out of
the Euler axis/principal angle combination. Equally obvious is the fact that
any four (or more) orientation parameters are not mutually independent [the
elements of the rotation matrix obey Eq. (2.24), and the components of the
Euler axis must produce a unit vector]. The Euler angles—like any other three
parameter set—have the advantage of being mutually independent, and thus
form a minimal set for attitude representation. However, their use is limited
to those applications where the principal rotation is restricted to nonsingular
orientations.
Example 2.7. Find the rotation matrix and the principal rotation for the at-
titude (ψ)3, (90◦)2, (φ)1, which is singular in terms of Euler angles.
By substituting θ = 90◦into Eq. (2.41), we get the following rotation
matrix:
C =
⎛
⎝
0
0
−1
sin(φ −ψ)
cos(φ −ψ)
0
cos(φ −ψ) −sin(φ −ψ)
0
⎞
⎠,

2.6 Euler Symmetric Parameters (Quaternion)
23
We next determine the Euler axis, e = e1i + e2j + e3k, according to
Eq. (2.30):
⎛
⎝
0
0
−1
sin(φ −ψ)
cos(φ −ψ)
0
cos(φ −ψ) −sin(φ −ψ)
0
⎞
⎠
⎧
⎨
⎩
e1
e2
e3
⎫
⎬
⎭=
⎧
⎨
⎩
e1
e2
e3
⎫
⎬
⎭,
which, along with e12 + e22 + e32 = 1, yields
e1 = ±
1 −cos(φ −ψ)

3 + cos(φ −ψ)2 −4 cos(φ −ψ)
,
e2 =
sin(φ −ψ)
1 −cos(φ −ψ)e1,
e3 = −e1 .
The appropriate sign of e1 is obtained from that of the principal angle, Φ,
which is derived from Eq. (2.33) as follows:
Φ = cos−1 1
2(traceC −1) = cos−1 1
2{cos(φ −ψ)}
or
cos Φ
2 =
1
√
2
cos φ −ψ
2
.
Thus, there is no diﬃculty in determining the rotation matrix and principal
rotation for this case for which the Euler angle representation is singular.
2.6 Euler Symmetric Parameters (Quaternion)
Since Euler axis/principal angle representation is free from singularities, a
very useful representation can be derived from it, called Euler symmetric
parameters, or the quaternion. A quaternion is a special set composed of four
mutually dependent scalar parameters, q1, q2, q3, q4, such that the ﬁrst three
form a vector, called the vector part,
q .=
⎧
⎨
⎩
q1
q2
q3
⎫
⎬
⎭,
(2.43)
and the fourth, q4, represents the scalar part. The quaternion for attitude
representation can be derived from the Euler axis, e, and principal rotation
angle, Φ, as follows:
qi .= ei sin Φ
2
(i = 1, 2, 3),
q4 .= cos Φ
2 .
(2.44)

24
2 Attitude and Kinematics of Coordinate Frames
It is clear from Eq. (2.44) that q1, q2, q3, q4, must satisfy the constraint equa-
tion
q2
1 + q2
2 + q2
3 + q2
4 = 1 .
(2.45)
This constraint implies that the quaternion yields only three independent,
scalar parameters, as in the principal angle/Euler axis, or the Euler angle
attitude representations. Since the four elements of the quaternion satisfy the
constraint equation, Eq. (2.45), it can be said that attitude orientations vary
along the surface of a four-dimensional unit sphere without any singularity.
This fact is also evident from the principal angle, Φ, and the elements of
the unit vector, e, representing the Euler axis. The chief advantage of the
quaternion over the principal angle/Euler axis combination (which is also
a four-parameter, nonsingular representation) lies in that the former does
not require computationally intensive trigonometric function evaluations when
derived from the rotation matrix. The rotation matrix, C, can be written
in terms of the quaternion by substituting the deﬁnitions of Eq. (2.44) into
Euler’s formula (to be derived in Exercise 2.5), leading to
C = (q2
4 −qT q)I + 2qqT −2q4S(q) ,
(2.46)
where S(q) is the following skew-symmetric matrix function formed out of the
elements of vector q:
S(q) =
⎛
⎝
0
−q3
q2
q3
0
−q1
−q2
q1
0
⎞
⎠.
(2.47)
We can write Eq. (2.46) in terms of the individual quaternion elements as
follows:
C =
⎛
⎝
q2
1 −q2
2 −q2
3 + q2
4
2(q1q2 + q3q4)
2(q1q3 −q2q4)
2(q1q2 −q3q4)
−q2
1 + q2
2 −q2
3 + q2
4
2(q2q3 + q1q4)
2(q1q3 + q2q4)
2(q2q3 −q1q4)
−q2
1 −q2
2 + q2
3 + q2
4
⎞
⎠, (2.48)
which yields the following expressions for calculating the quaternion elements
from the elements of the rotation matrix, cij:
q1 = c23 −c32
4q4
,
q2 = c31 −c13
4q4
,
(2.49)
q3 = c12 −c21
4q4
,
where
q4 = ±1
2
√
1 + c11 + c22 + c33 = ±1
2
√
1 + traceC .
(2.50)
Note that two signs are possible in deriving the quaternion from C. How-
ever, just as in the case of principal angle/Euler axis derivation from the

2.6 Euler Symmetric Parameters (Quaternion)
25
rotation matrix [Eq. (2.33)] this does not cause any ambiguity, because a ro-
tation by Φ about e is the same as a rotation by −Φ about −e. Thus, there
is no loss of generality in taking the positive sign in Eq. (2.50). Of course, the
derivation given above is valid only if q4 ̸= 0. If q4 is close to zero, one can
employ an alternative derivation, such as the following:
q2 = c12 + c21
4q1
,
q3 = c31 + c13
4q1
,
(2.51)
q4 = c23 −c32
4q1
,
where
q1 = ±1
2
√1 + c11 −c22 −c33 .
(2.52)
Similarly, the two remaining alternative derivations of the quaternion from
the rotation matrix involve division by q2 and q3, respectively. Among all
the four possible derivations, the greatest numerical accuracy is obtained for
the one that has the largest denominator term, which implies the largest
argument in the square root. There are eﬃcient algorithms that employ such
a procedure for the computation of the quaternion, such as the one encoded
in the MATLAB ﬁle, quaternion.m, given in Table 2.1.
The quaternion is a compact, nonsingular representation of attitude that
results in algebraic (rather than trigonometric) expressions for the elements
of the rotation matrix. Another beneﬁt in using the quaternion over other
attitude representations is in its easy combination for successive rotations.
When the orientation q′′, q′′
4 is obtained by ﬁrst undergoing a rotation q, q4
followed by a rotation q′, q′
4, we can substitute Eq. (2.48) on both sides of the
relationship
C(q′′, q′′
4) = C(q′, q′
4)C(q, q4) ,
(2.53)
in order to obtain the following simple product, called the composition rule:
⎧
⎪
⎪
⎨
⎪
⎪
⎩
q′′
1
q′′
2
q′′
3
q′′
4
⎫
⎪
⎪
⎬
⎪
⎪
⎭
=
⎛
⎜
⎜
⎝
q′
4
q′
3
−q′
2 q′
1
−q′
3
q′
4
q′
1
q′
2
q′
2
−q′
1
q′
4
q′
3
−q′
1 −q′
2 −q′
3 q′
4
⎞
⎟
⎟
⎠
⎧
⎪
⎪
⎨
⎪
⎪
⎩
q1
q2
q3
q4
⎫
⎪
⎪
⎬
⎪
⎪
⎭
.
(2.54)
The composition rule of Eq. (2.54) is the deﬁning property of the quater-
nion [1], [2]. Any set (q, q4) that satisﬁes this rule is called a quaternion.1 The
1 The quaternion predates vectors and matrices. It was discovered by Hamilton
(1805–1865), who spent many years deriving the rather abstract quaternion alge-
bra. However, the relationships for symmetric Euler parameters (quaternion for
rotation) that are employed in attitude representation can be derived without
utilizing the quaternion algebra. The symmetric Euler parameters form a special
quaternion that obeys the constraint given by Eq. (2.45).

26
2 Attitude and Kinematics of Coordinate Frames
Table 2.1. M-ﬁle quaternion.m for Deriving the Quaternion from Rotation Matrix
function q=quaternion(C)
%(c) 2006 Ashish Tewari
T=trace(C);
qsq=[1+2*C(1,1)-T;1+2*C(2,2)-T;1+2*C(3,3)-T;1+T]/4;
[x,i]=max(qsq);
if i==4
q(4)=sqrt(x);
q(1)=(C(2,3)-C(3,2))/(4*q(4));
q(2)=(C(3,1)-C(1,3))/(4*q(4));
q(3)=(C(1,2)-C(2,1))/(4*q(4));
end
if i==3
q(3)=sqrt(x);
q(1)=(C(1,3)+C(3,1))/(4*q(3));
q(2)=(C(3,2)+C(2,3))/(4*q(3));
q(4)=(C(1,2)-C(2,1))/(4*q(3));
end
if i==2
q(2)=sqrt(x);
q(1)=(C(1,2)+C(2,1))/(4*q(2));
q(3)=(C(3,2)+C(2,3))/(4*q(2));
q(4)=(C(3,1)-C(1,3))/(4*q(2));
end
if i==1
q(1)=sqrt(x);
q(2)=(C(1,2)+C(2,1))/(4*q(1));
q(3)=(C(1,3)+C(3,1))/(4*q(1));
q(4)=(C(2,3)-C(3,2))/(4*q(1));
end
eﬃciency of the quaternion relationship, Eq. (2.54), for the combined rotation
is evident from the fact that it involves only 16 multiplications, whereas the
rotation matrix representation of the same combination [Eq. (2.53)] requires
27. A MATLAB code called quatrot.m, which implements Eq. (2.54), is given
in Table 2.2. Note that the code considers the quaternion as a row vector.
Table 2.2. M-ﬁle quatrot.m for Combining Two Rotations in Terms of Quaternion
function qpp=quatrot(q,qp)
% Program for combining two successive rotations, given by quaternions
% ’q’ and ’qp’, to produce the final orientation given by the quaternion
% ’qpp’. All the quaternions are stored here as row vectors.
% (c) 2006 Ashish Tewari
qpp=q*[qp(4) qp(3) -qp(2) qp(1);
-qp(3) qp(4) qp(1) qp(2);
qp(2) -qp(1) qp(4) qp(3);
-qp(1) -qp(2) -qp(3) qp(4)]’;
Example 2.8. Derive the quaternion representation for the orientation given
in Example 2.5, where we had utilized Eq. (2.53) to obtain the composite
rotation matrix formed out of three successive, elementary rotations.

2.7 Rodrigues Parameters (Gibbs Vector)
27
We ﬁrst derive the quaternion for each elementary rotation, and then em-
ploy the relationship of Eq. (2.54) twice to produce the quaternion for the ﬁnal
representation. In order to do so, we use the following MATLAB statements
to call quaternion.m (Table 2.1), and quatrot.m (Table 2.2). It is presumed
that the three elementary rotation matrices have been calculated and stored
in the MATLAB workspace (Example 2.5).
>> q1=quaternion(C1) %quaternion for the first elementary rotation
q1 =
-0.3827 0
0
0.9239
>> q2=quaternion(C2) %quaternion for the second elementary rotation
q2 =
0
0.3827
0
0.9239
>> q3=quaternion(C3) %quaternion for the third elementary rotation
q3 =
0
0
-0.3827 0.9239
>> qp1=quatrot(q1,q2) %quaternion for intermediate rotation
qp1 =
-0.3536 0.3536
-0.1464 0.8536
>> qp2=quatrot(qp1,q3) %quaternion for final rotation
qp2 =
-0.4619
0.1913
-0.4619
0.7325
>> C=C3*C2*C1 % check: final rotation matrix
C = 0.5000
-0.8536
0.1464
0.5000
0.1464
-0.8536
0.7071
0.5000
0.5000
>> q=quaternion(C) %confirm quaternion for final rotation
q = -0.4619
0.1913
-0.4619
0.7325
Hence, the ﬁnal orientation is represented by q1 = −0.4619, q2 = 0.1913,
q3 = −0.4619, and q4 = 0.7325, which is compatible with the ﬁnal rotation
matrix. The accuracy of the calculated quaternion can also be conﬁrmed by
checking that it yields the correct principal rotation as follows:
Φ = 2 cos−1 q4 = ±85.8009◦
and
e =
q
sin Φ
2
= ±(0.6786i −0.2811j + 0.6786k) .
Another set of four parameters related to the quaternion is the complex
Cayley–Klein matrix [3], which is sometimes used in attitude representations.
However, we shall not consider its derivation here.
2.7 Rodrigues Parameters (Gibbs Vector)
A set of three attitude parameters, ρ = (ρ1, ρ2, ρ3)T , called Rodrigues parame-
ters, or the Gibbs vector, can be directly derived from the quaternion (q, q4)
as follows:

28
2 Attitude and Kinematics of Coordinate Frames
ρ .= q
q4
,
(2.55)
which, when substituted into Eq. (2.44), yields
ρ = e tan Φ
2 .
(2.56)
The composition rule for Rodrigues parameters can be derived from that for
the quaternion [Eq. (2.54)] to be the following:
ρ′′ = ρ + ρ′ −ρ′ × ρ
1 −ρ · ρ′
,
(2.57)
where ρ′′ represents the ﬁnal orientation obtained by combining ρ and ρ′. By
using Euler’s formula (Exercise 2.5), one can derive the following expression
for the rotation matrix in terms of Rodrigues parameters:
C = (I −S(ρ))(I + S(ρ))−1 ,
(2.58)
where S(ρ) is the following skew-symmetric matrix formed out of the elements
of ρ:
S(ρ) =
⎛
⎝
0
−ρ3
ρ2
ρ3
0
−ρ1
−ρ2
ρ1
0
⎞
⎠.
(2.59)
Clearly, Rodrigues parameters can be derived from the rotation matrix ele-
ments, cij, as follows:
ρ1 = c23 −c32
1 + traceC,
ρ2 = c31 −c13
1 + traceC,
(2.60)
ρ3 = c12 −c21
1 + traceC.
It is evident from Eq. (2.56) [as well as from Eq. (2.60)] that Rodrigues para-
meters have a singularity at Φ = nπ (n = 1, 3, 5, . . .), hence their use is limited
to principal rotations of Φ < 180◦. The three-parameter set is thus similar to
the Euler angles in being incapable of representing an arbitrary orientation.
2.8 Modiﬁed Rodrigues Parameters
In order to extend the applicability of Rodrigues parameters for principal ro-
tations greater than 180◦, a modiﬁed three-parameter set is deﬁned as follows:
p .=
q
1 + q4
,
(2.61)

2.8 Modiﬁed Rodrigues Parameters
29
which, when substituted into Eq. (2.44), yields
p = e tan Φ
4 .
(2.62)
Clearly, the new set p = (p1, p2, p3)T —called the modiﬁed Rodrigues para-
meters—is nonsingular for principal rotations of Φ < 360◦. However, there
is a singularity at Φ = 360◦. Most nonspinning aerospace vehicles have ori-
entations with Φ < 360◦and are thus represented by the set of modiﬁed
Rodrigues parameters without singularity. Since p is a minimal representa-
tion, it is advantageous over the four-parameter quaternion in reducing the
number of kinematic equations to be solved for the attitude.
The rotation matrix can be expressed in terms of the modiﬁed Rodrigues
parameters with the use of Eq. (2.46) as follows:
C = I + 4(pT p −1)
(1 + pT p)2 S(p) +
8
(1 + pT p)2 S2(p) ,
(2.63)
where S(p) is the following skew-symmetric matrix formed out of the elements
of p:
S(p) =
⎛
⎝
0
−p3
p2
p3
0
−p1
−p2
p1
0
⎞
⎠.
(2.64)
By substituting the relationship between the Rodrigues and modiﬁed Ro-
drigues parameters,
ρ =
2p
1 −pT p ,
(2.65)
into Eq. (2.57), we can derive the following rather complicated composition
rule for the modiﬁed Rodrigues parameters:
p′′ = (1 −pT p)p′ + (1 −p′T p′)p −2p′ × p
1 + (pT p)(p′T p′) −2p · p′
.
(2.66)
Example 2.9. Derive the modiﬁed Rodrigues parameters for the orientation
given in Example 2.5, for which the quaternion was calculated in Example 2.8.
We begin by applying Eq. (2.61) to the calculated quaternion:
p =
1
1 + 0.7325
⎧
⎨
⎩
−0.4619
0.1913
−0.4619
⎫
⎬
⎭=
⎧
⎨
⎩
−0.2666
0.1104
−0.2666
⎫
⎬
⎭,
leading to the skew-symmetric matrix [Eq. (2.64)],
S(p) =
⎛
⎝
0
0.2666
0.1104
−0.2666
0
0.2666
−0.1104 −0.2666
0
⎞
⎠,

30
2 Attitude and Kinematics of Coordinate Frames
which corresponds to the following rotation matrix according to Eq. (2.63):
C =
⎛
⎝
0.5
−0.8536
0.1464
0.5
0.1464
−0.8536
0.7071
0.5
0.5
⎞
⎠.
This is the same result as that of Example 2.5.
2.9 Attitude Kinematics
We are now in a position to address the evolution of a coordinate frame’s
attitude with time. We can adopt any one of the various attitude representa-
tions considered above to describe the changing attitude. Let us ﬁrst take the
rotation matrix representation. Consider a rotating coordinate frame, (oxyz),
with unit vectors, i, j, k, representing the axes ox, oy, oz, respectively, whose
changing attitude relative to an arbitrary, ﬁxed frame is of interest. When the
attitude is changing with time, the rotation matrix representing the orienta-
tion of the rotating frame relative to a ﬁxed frame is a function of time, C(t).
In order to ﬁnd this function, consider an inﬁnitesimal principal rotation, ΔΦ,
in a small time interval, Δt, measured after a given time, t. The rotation is
small enough for us to approximate cos ΔΦ ≈1, sin ΔΦ ≈ΔΦ. Furthermore,
we assume that that Δt is so small that the axis of rotation, e(t), remains es-
sentially unchanged. These assumptions allow us to write the rotation matrix
representing attitude change in the time interval Δt with the use of Euler’s
formula (Exercise 2.5) as follows:
C(Δt) ≈I −ΔΦS(e) ,
(2.67)
or,
C(Δt) ≈I −S(ΔΦe) ,
(2.68)
where
S(ΔΦe) =
⎛
⎝
0
−ΔΦez
ΔΦey
ΔΦez
0
−ΔΦex
−ΔΦey
ΔΦex
0
⎞
⎠.
(2.69)
We chose to resolve the instantaneous axis of rotation in the rotating frame,
because C(Δt) describes the frame’s orientation at time t + Δt, relative to its
own previous orientation at time t, rather than that relative to the ﬁxed frame.
Thus, e(t) has its components, ex, ey, ez, resolved along the instantaneous
axes of the rotating frame, i, j, k, at time t. Let the rotation matrices C(t) and
C(t + Δt) denote the attitudes of the rotating frame relative to a ﬁxed frame
at times t and t + Δt, respectively. The rotation matrix, C(Δt), describes
the evolution of the attitude in the time interval, Δt, caused by a principal
rotation of ΔΦ about e. Thus, C(Δt) denotes the rotation required to produce
C(t + Δt) from C(t). Now, these rotation matrices must obey the composition

2.9 Attitude Kinematics
31
rule for successive rotations, Eq. (2.25), which implies that the ﬁnal orientation
at time t + Δt is related to the initial attitude at time t by
C(t + Δt) = C(Δt)C(t) .
(2.70)
By substituting Eq. (2.68) into Eq. (2.70), we can write the time derivative
of the rotation matrix as follows:
dC
dt
.= lim
Δt→0
C(t + Δt) −C(t)
Δt
= −S(ω)C(t) ,
(2.71)
where
ω(t) .= lim
Δt→0
ΔΦe
Δt
(2.72)
is called the angular velocity vector of the coordinate frame. It is important to
emphasize that the angular velocity, ω(t), has its components, ωx, ωy, ωz, at
time t resolved along the axes of the rotating coordinate frame (rather than
the ﬁxed frame). The skew-symmetric matrix of angular velocity components
is thus the following:
S(ω) =
⎛
⎝
0
−ωz
ωy
ωz
0
−ωx
−ωy
ωx
0
⎞
⎠.
(2.73)
Equation (2.71) can also be derived by simply diﬀerentiating with time both
sides of the following deﬁning equation of the rotation matrix:
⎧
⎨
⎩
i
j
k
⎫
⎬
⎭= C
⎧
⎨
⎩
I
J
K
⎫
⎬
⎭,
(2.74)
O
y
X
x
X
X
x(t)
z(t+'t)
x(t+'t)
z
%'
z(t)
( )t
Z
y(t+'t)
y(t)
Fig. 2.6. A coordinate frame rotating with angular velocity, ω(t).

32
2 Attitude and Kinematics of Coordinate Frames
resulting in
⎧
⎨
⎩
ω × i
ω × j
ω × k
⎫
⎬
⎭= dC
dt
⎧
⎨
⎩
I
J
K
⎫
⎬
⎭.
(2.75)
By applying the result of Exercise 2.1, and substituting (2.74) into Eq. (2.75),
we have
−S(ω)
⎧
⎨
⎩
i
j
k
⎫
⎬
⎭= dC
dt CT
⎧
⎨
⎩
i
j
k
⎫
⎬
⎭,
(2.76)
from which Eq. (2.71) follows through the orthogonality property, Eq. (2.24).
Recall that the angular velocity, ω(t), is resolved along the axes of the ro-
tating coordinate frame (oxyz), as shown in Fig. 2.6. Such a choice of axes is
very convenient when depicting a rotating rigid body (Chapter 13). In such a
case, the axes of the rotating coordinate frame are ﬁxed to the rigid body and
can be used to represent the attitude and angular velocity of the body relative
to an inertial (or space-ﬁxed) frame. On rare occasions, it is desired to alter-
natively express the angular velocity with components along the axes of an
inertial frame. In such a case the angular velocity is termed space-referenced,
or inertial angular velocity, and is related to the body referenced angular
velocity by ωI = CT (t)ω(t) according to the coordinate transformation of
Eq. (2.21).
The diﬀerential equation for the rotation matrix is Eq. (2.71), which, with
a given function ω(t) and initial condition, C(0), should be solved for C(t)
in order to describe the evolution of the attitude. The solution, C(t), must
satisfy the orthogonality condition Eq. (2.24); by diﬀerentiating both sides of
which, we have
d
dtCCT = d
dtCT C = 0 .
(2.77)
This implies that CCT and CT C are equal and constant matrices. Thus, if C(t)
satisﬁes Eq. (2.24) at some initial time t = 0, it does so at all other times.
One can easily verify (Exercise 2.13) that the matrix diﬀerential equation,
Eq. (2.71), satisﬁes Eq. (2.77).
Example 2.10. Consider a coordinate frame, i, j, k, rotating with an angular
velocity ω(t) = 0.1i −0.5j −k rad/s. If the original attitude of the frame is
given by
C =
⎛
⎝
0.1399200225
−0.9857942023
0.0929095147
−0.9432515656 −0.1612425105 −0.2903055921
0.3011625330
−0.0470174803 −0.9524129804
⎞
⎠,
determine the attitude of the frame after one second.
Note that since the given angular velocity components resolved in the
rotating frame are constant, the matrix diﬀerential equation, Eq. (2.71), is
now a set of linear algebraic equations with constant coeﬃcients, S(ω), and

2.9 Attitude Kinematics
33
can be integrated easily using the evolution rule of Eq. (2.70). It is to be noted
that Eq. (2.70) is valid only for an inﬁnitesimal time interval, Δt. Since the
given time of 1 s is not small enough given the assigned angular speed, we must
break it into several smaller intervals of equal length, and apply Eq. (2.70) to
each interval, beginning with the given attitude at t = 0. Such an approach is
called time-marching and is frequently applied to the solution of linear, vector
(or matrix) diﬀerential equations.
We begin the solution by writing a MATLAB code called rotevolve.m (Ta-
ble 2.3), which obtains the rotation matrix by the time-marching approach of
Eq. (2.70). During each time step, the rotation angle is given by ΔΦ =| ω | Δt,
while the axis of rotation is approximated by e =
ω
|ω|. Needless to say, these
approximations are accurate only if a reasonably small Δt is employed. The
size of a time step should be much smaller than the period of rotation and
is generally dictated by the desired tolerance in satisfying the orthogonal-
ity condition Eq. (2.24). Since the computation error accumulates over the
steps, a reasonably small time step must be used for a given time interval.
In rotevolve.m, the time step is obtained by 106Δt = 2π
|ω|. In order to invoke
rotevolve.m for the present example, the following MATLAB statements are
used:
>> C= [0.1399200225
-0.9857942023
0.0929095147;
-0.9432515656
-0.1612425105
-0.2903055921;
0.3011625330
-0.0470174803
-0.9524129804];% rotation matrix (t=0)
>>C*C’ %test for orthogonality of given rotation matrix
ans =
1.0000
0.0000
0.0000
0.0000
1.0000
0.0000
0.0000
0.0000
1.0000
>> Cf=rotevolve(C,[0.1;-0.5;-1],1) %call rotevolve for final rot. matrix
Cf =
0.94711618664267
-0.315392238061307
-0.0592086317903142
-0.313796220025831
-0.871634028765343
-0.376552394359275
0.0671544766324447
0.375218475325714
-0.924501393941303
Therefore, the attitude at t = 1 s is given by the rotation matrix
C =
⎛
⎝
0.94711618664267
−0.315392238061307 −0.0592086317903142
−0.313796220025831 −0.871634028765343 −0.376552394359275
0.0671544766324447
0.375218475325714
−0.924501393941303
⎞
⎠.
We can verify the orthogonality of this matrix, within a tolerance of 10−5.
However, since the time-step size is only Δt = 5.5975 × 10−6 s, the computa-
tion requires 178,651 steps, which is rather ineﬃcient.
The angular velocity, ω(t), is generally time-varying and is obtained from the
attitude dynamics (Chapter 13) (rather than kinematics). As seen above, even
when ω(t) has constant elements, a large number of ineﬃcient matrix products
must be computed for obtaining the attitude using the rotation matrix. When
the angular velocity, ω(t), does not have constant elements, it becomes rather
cumbersome to solve the diﬀerential equation, Eq. (2.71), with a time-varying
coeﬃcient matrix S(ω), for the nine elements of C(t). Instead, it is much easier

34
2 Attitude and Kinematics of Coordinate Frames
Table 2.3. M-ﬁle rotevolve.m for the Time Evolution of the Rotation Matrix
function c=rotevolve(c0,w,T)
%function for evolving the rotation matrix with a constant
%body-referenced angular velocity
%c0=rotation matrix at t=0
%w=angular velocity vector (3x1) (rad/s)
%T=final time (s)
%(c)2006 Ashish Tewari
S=[0 -w(3,1) w(2,1);w(3,1) 0 -w(1,1);-w(2,1) w(1,1) 0];
dt=2*pi/(10^6*norm(w))
cdt=eye(3)-S*dt;
t=dt;
c=cdt*c0;
while t<=T
c=cdt*c;
t=t+dt;
end
to employ other attitude representations, such as Euler angles, quaternion, or
the modiﬁed Rodrigues parameters.
Y
X
Z
R
O
Z,zc
zs,z
y
G
Z
G
R
Z
G
R
x
xc, xs
ys
yc
Fig. 2.7. The Euler angle orientation, (ψ)3, (θ)1, (φ)3.
Let us consider the Euler angle representation, (ψ)3, (θ)1, (φ)3, which is
often employed for spacecraft (as well as orbital plane) attitude. Figure 2.7
depicts the three successive, elementary rotations required in this representa-
tion from a stationary frame, (OXYZ), with axes along I, J, K, respectively, to
the rotating frame (Oxyz) with axes i, j, k, respectively. The rotation matrix
relating the ﬁnal orientation of (Oxyz) to (OXYZ) can be obtained by
C = C3(φ)C1(θ)C3(ψ) =
(2.78)
⎛
⎝
(cos ψ cos φ −sin ψ sin φ cos θ)
(sin ψ cos φ + cos ψ sin φ cos θ)
sin φ sin θ
−(cos ψ sin φ + sin ψ cos φ cos θ) (−sin ψ sin φ + cos ψ cos φ cos θ) cos φ sin θ
sin ψ sin θ
−cosψ sin θ
cos θ
⎞
⎠.

2.9 Attitude Kinematics
35
In terms of the local angular rates, ˙φ, ˙θ, ˙ψ, the angular velocity, ω(t), can
be expressed as follows:
ω(t) = ˙φk + ˙θi′ + ˙ψK ,
(2.79)
where
i′ = i cos φ −j sin φ
(2.80)
and
K = i sin φ sin θ + j cos φ sin θ + k cos θ .
(2.81)
Upon substituting Eqs. (2.80) and (2.81) into Eq. (2.79), we have
ω(t) =
⎧
⎨
⎩
ωx
ωy
ωz
⎫
⎬
⎭=
⎧
⎨
⎩
˙ψ sin φ sin θ + ˙θ cos φ
˙ψ cos φ sin θ −˙θ sin φ
˙ψ cos θ + ˙φ
⎫
⎬
⎭,
(2.82)
or,
⎧
⎨
⎩
˙ψ
˙θ
˙φ
⎫
⎬
⎭=
1
sin θ
⎛
⎝
sin φ
cos φ
0
cos φ sin θ
−sin φ sin θ
0
−sin φ cos θ −cos φ cos θ sin θ
⎞
⎠
⎧
⎨
⎩
ωx
ωy
ωz
⎫
⎬
⎭.
(2.83)
Equation (2.83) is the required kinematic relationship between the Euler an-
gles, ψ, θ, φ, and the angular velocity in the form of three, coupled, nonlinear
ﬁrst-order ordinary diﬀerential equations. Note that this relationship has sin-
gularities at θ = nπ (n = 0, 1, 3, . . .), which are the inherent singularities of
the Euler angle representation, (ψ)3, (θ)1, (φ)3. Hence, this representation is
limited to rotations of 0 < θ < π, which are applicable to spacecraft attitudes
and the orientation of orbital planes. A diﬀerent Euler angle representation,
(ψ)3, (θ)2, (φ)1 (Fig. 2.5), is commonly employed in aircraft applications and
has singularities at θ = n π
2 (n = 1, 3, . . .), which limits its application to
−π
2 < θ < π
2 . The kinematic relationship for (ψ)3, (θ)2, (φ)1 will be discussed
in Chapter 4.
Example 2.11. Solve the problem given in Example 2.10 using the Euler angle
representation, (ψ)3, (θ)1, (φ)3.
We begin by deriving the (ψ)3, (θ)1, (φ)3 Euler angles for the initial at-
titude prescribed in Example 2.10. By using the third column of the given
rotation matrix and Eq. (2.78), we have
θ = cos−1 c33 = cos−1(−0.9524129804) = 162.2532◦,
sin φ = c13
sin θ = 0.0929095147
0.3048106211 = 0.3048106211,
cos φ = c23
sin θ = −0.2903055921
0.3048106211 = −0.9524129804 ,
which yield φ = θ = 162.2532◦. The third column of the given rotation matrix
and Eq. (2.78) produce

36
2 Attitude and Kinematics of Coordinate Frames
sin ψ = c31
sin θ = 0.301162533
0.3048106211 = 0.98803162409,
cos φ = c32
sin θ = −0.0470174803
0.3048106211 = 0.1542514499 ,
or, ψ = 81.1266◦. Now, we write a code called euler313evolve.m, tabulated in
Table 2.4, which provides the kinematic equations for integration according
to the intrinsic Runge–Kutta, nonlinear diﬀerential equation solver (Appendix
A) of MATLAB (ode45.m). The program is invoked as follows:
>> dtr=pi/180; psi=81.1266*dtr; theta=162.2532*dtr; phi=theta;% Euler angles
>> [t,x]=ode45(@euler313evolve,[0 1],[psi theta phi]’); %Runge-Kutta solver
>> plot(t,x/dtr) %plot of Euler angles’ time history
Fig. 2.8.
The time history of the Euler angles, (ψ)3, (θ)1, (φ)3 with ω
=
(0.1, −0.5, −1)T .
The resulting time history of the Euler angles, obtained in only 41 time
steps, is shown in Fig. 2.8. Note that θ does not cross the singularity at
θ = 180◦. This is merely due to the speciﬁc value of the constant angu-
lar velocity and cannot be ensured in a general case where angular velocity
components could be time-varying. The ﬁnal values obtained at t = 1 s are
ψ = 169.8530◦, θ = 157.5933◦, and φ = 188.9358◦. We can easily verify that a
substitution of these angles into Eq. (2.78) results in the same ﬁnal rotation
matrix as that derived in Example 2.10.
There is no qualitative modiﬁcation required in the above implemented
Runge–Kutta approach (Appendix A) for solving the nonlinear diﬀerential
equations when the angular velocity components are varying with time. Thus,
the Euler angle representation for attitude kinematics is much more compact

2.9 Attitude Kinematics
37
Table 2.4. M-ﬁle euler313evolve.m for the Time Evolution of the 3-1-3 Euler Angles
function xdot=euler313evolve(t,x)
%x(1)=psi, x(2)=theta, x(3)=phi
% (c) 2006 Ashish Tewari
w=[0.1,-0.5,-1];% angular velocity in rad/s
xdot(1,1)=(sin(x(3))*w(1)+cos(x(3))*w(2))/sin(x(2));
xdot(2,1)=cos(x(3))*w(1)-sin(x(3))*w(2);
xdot(3,1)=w(3)-(sin(x(3))*cos(x(2))*w(1)+cos(x(3))*cos(x(2))*w(2))/sin(x(2));
than the rotation matrix. However, it suﬀers from singularities and cannot be
applied when principal rotations are larger than θ = 180◦. For a compact kine-
matical calculation that has a larger range of validity, we must look toward the
attitude representations that are based upon the Euler-axis/principal angle
combination, such as the quaternion and the modiﬁed Rodrigues parameters.
The quaternion has an advantage in being a compact (albeit nonminimal)
as well as nonsingular representation for attitude kinematics. Thus, modern
ﬂight dynamic applications generally employ the quaternion. The kinematical
equations of the rotating frame, (oxyz), in terms of the quaternion can be
obtained from its composition rule, Eq. (2.54), as follows. As in the foregoing
discussion, we consider an inﬁnitesimal principal rotation, ΔΦ, in a small time
interval, Δt, such that the axis of rotation, e(t) = exi + eyj + ezk, remains
essentially unchanged. In Eq. (2.54), we substitute the orientation at t + Δt,
{q′′, q′′
4 } = {q(t+Δt), q4(t+Δt)}, which is obtained from the initial attitude,
q(t), q4(t), by undergoing a rotation [q′, q′
4] = [q(Δt), q4(Δt)]. Thus, from the
deﬁnition of quaternion we have
q′
1 = ex sin ΔΦ
2 ,
q′
2 = ey sin ΔΦ
2 ,
(2.84)
q′
3 = ez sin ΔΦ
2 ,
q′
4 = cos ΔΦ
2
.
By substituting these into Eq. (2.54), approximating cosΔΦ ≈1, sin ΔΦ ≈
ΔΦ, and utilizing Eq. (2.72), we can write the following equation for the time
evolution of the quaternion:
{q(t + Δt), q4(t + Δt)}T ≈[I + 1
2ΩΔt]{q(t), q4(t)}T ,
(2.85)
where Ω is the following skew-symmetric matrix of the angular velocity com-
ponents:
Ω =
⎛
⎜
⎜
⎝
0
ωz
−ωy ωx
−ωz
0
ωx
ωy
ωy
−ωx
0
ωz
−ωx −ωy −ωz
0
⎞
⎟
⎟
⎠.
(2.86)

38
2 Attitude and Kinematics of Coordinate Frames
Therefore, the time derivative of the quaternion is the following:
d{q, q4}T
dt
.= lim
Δt→0
{q(t + Δt), q4(t + Δt)}T −{q(t), q4(t)}T
Δt
= 1
2Ω{q(t), q4(t)}T .
(2.87)
The linear, algebraic form of the matrix diﬀerential equation, Eq. (2.87), is
an obvious advantage of the quaternion representation. Unlike the Euler an-
gles, it is not required to evaluate trigonometric functions in the process of
solving the kinematic equations. The matrix Ω is either constant, or time-
varying, depending upon whether the components of the angular velocity are
changing with time. In either case, we can adopt a numerical scheme (Appen-
dix A) to integrate this linear, ordinary diﬀerential equation for the quater-
nion, q(t), q4(t). We can break the ﬁnal time into smaller intervals and utilize
Eq. (2.87) in each interval to produce a time history of the changing quater-
nion. The splitting of time into smaller intervals is necessary when the angular
velocity components (Ω) are time-varying, wherein Eq. (2.87) is employed with
a diﬀerent Ω in each time interval. The size of the time interval in such a case
would be determined by the rate of change of angular velocity components.
Such a quasi-steady approximation of the time-varying coeﬃcient matrix is
commonly employed.
Example 2.12. Solve the problem given in Examples 2.10 and 2.11 using the
quaternion.
Since Ω is a constant matrix here, we can write the solution to the result-
ing linear, time-invariant state equations involving the quaternion using the
matrix exponential (Chapter 14) as follows:
{q(t), q4(t)}T = e
1
2 Ωt{q(0), q4(0)}T ,
(2.88)
where q(0), q4(0) represents the initial attitude at t = 0. The matrix exponen-
tial, eA, of a square matrix, A, can be computed using an eﬃcient algorithm
(Chapter 14), such as that implemented in the intrinsic MATLAB function
expm.m, which we will employ here. Equation (2.88) is implemented in the
program, quatevolve.m, which is tabulated in Table 2.5. The computation of
the ﬁnal quaternion is carried out by the following MATLAB statements,
assuming the initial rotation matrix, C, is already stored in the workspace:
>> q0=quaternion(C) %quaternion at t=0 using "quaternion.m"
q0 = 0.750595682341698
-0.64250495082845
0.131253102359508
-0.0810316784134013
>> qf=quatevolve(q0’,[0.1;-0.5;-1],1)’ % final quaternion
qf = 0.967373385090801
-0.162601824240507 0.002053412854426
-0.194281146902704
>> Cf=rotquat(qf’) %rotation matrix
Cf =
0.94711286
-0.31539123
-0.0592081039
-0.31379548
-0.87163097
-0.3765525988
0.067153772
0.375217044
-0.9245012389

2.9 Attitude Kinematics
39
The ﬁnal rotation matrix is computed above from the ﬁnal quaternion
according to Eq. (2.46), which is implemented in the M-ﬁle rotquat.m (Ta-
ble 2.6). Note that the ﬁnal attitude agrees with that calculated in Example
2.10 up to the ﬁfth decimal place, which was the tolerance speciﬁed in Ex-
ample 2.10. However, since only one matrix multiplication is required (apart
from the steps used in calculating the matrix exponential) in the speciﬁed time
interval (compared to 178,651 in Example 2.10), this computation is more ef-
ﬁcient and suﬀers from a smaller cumulative truncation error. Of course, the
quaternion computation does not have any singularities and thus can be car-
ried out for any angular velocity. The same cannot be said for the Euler angle
computation in Example 2.11, where a singularity was avoided only by the
given value of the angular velocity and the initial attitude.
Table 2.5. M-ﬁle quatevolve.m for the Time Evolution of the Quaternion
function q=quatevolve(q0,w,T)
%function for evolving the quaternion with a constant
%body-referenced angular velocity
%q0=quaternion at t=0 (4x1) vector
%w=angular velocity vector (3x1) (rad/s)
%T=final time (s)
%(c) 2006 Ashish Tewari
S=[0 w(3,1) -w(2,1) w(1,1);-w(3,1) 0 w(1,1) w(2,1);
w(2,1) -w(1,1) 0 w(3,1);-w(1,1) -w(2,1) -w(3,1) 0];
q=expm(0.5*S*T)*q0;
Table 2.6. M-ﬁle rotquat for the Computation of Rotation Matrix from the Quater-
nion
function C=rotquat(q)
% rotation matrix from the quaternion
% (c) 2006 Ashish Tewari
S=[0 -q(3,1) q(2,1);q(3,1) 0 -q(1,1);-q(2,1) q(1,1) 0];
C=(q(4,1)^2-q(1:3,1)’*q(1:3,1))*eye(3)+2*q(1:3,1)*q(1:3,1)’-2*q(4,1)*S;
Finally, we consider the kinematical representation possible through the
modiﬁed Rodrigues parameters, p = (p1, p2, p3)T . Being a minimal repre-
sentation based upon the quaternion, p, reduces the number of kinematic,
ﬁrst-order diﬀerential equations required by the latter. However, its singu-
larity at Φ = 360◦limits its application to principal rotations of Φ < 360◦,
which gives a larger range of validity than that of the other minimal represen-
tations (Euler angles and Rodrigues parameters). By substituting Eq. (2.61)
into Eq. (2.87), we have
dp
dt = 1
2

S(p) + ppT +
1 −pT p
2

I

ω ,
(2.89)
where S(p) is given by Eq. (2.64). Being a nonlinear, ordinary diﬀerential
equation, Eq. (2.89) can be integrated in time using a Runge–Kutta algorithm
(Appendix A) to produce the instantaneous value of p(t), given an initial
condition, p(0), and the time-varying angular velocity, ω(t).

40
2 Attitude and Kinematics of Coordinate Frames
Example 2.13. Solve the problem given in Examples 2.10–2.12 using the modi-
ﬁed Rodrigues parameters.
We begin by writing a code called mrpevolve.m, tabulated in Table 2.7,
which provides the scalar kinematic equations, Eq. (2.89), for integration ac-
cording to the intrinsic Runge–Kutta nonlinear diﬀerential equation solver
(Appendix A) of MATLAB (ode45.m). The ﬁnal rotation matrix is calculated
from the ﬁnal modiﬁed Rodrigues vector through Eq. (2.63), which is imple-
mented in the program rotmrp.m (Table 2.8). The computations are given by
the following statements, beginning with the initial quaternion from Exam-
ple 2.12:
>> p0=q0(1:3)/(q0(4)+1) %MRP at t=0 from initial quaternion (Example 2.12)
p0 = 0.816780801590412
-0.699158976143123
0.142826579846517
>> [t,p]=ode45(@mrpevolve,[0 1],p0’); %Runge-Kutta solver
>> pf=p(size(t,1),:) % final MRP vector at t=1 second
pf = 1.2006339199379
-0.201809630219251
0.0025485478218541
>> Cf=rotmrp(pf’) %final rotation matrix using "rotmrp.m"
Cf =
0.947112860753656
-0.315391232427005
-0.0592081033575685
-0.313795474675653
-0.871630965841634
-0.376552598529159
0.0671537718084939
0.375217043714908
-0.924501239067713
>> plot(t,p) %plot of MRP time history
>> for i=1:size(t,1);phi(i)=4*atan(norm(p(i,:)))*180/pi;end
>> plot(t,phi) %plot of principal angle time history
The ﬁnal rotation matrix agrees with that computed in Example 2.12 up to
nine decimal places. The resulting plots for the time evolution of the modiﬁed
Rodrigues parameters, and the principal angle, Φ = 4 tan−1 | p | are shown
in Figs. 2.9 and 2.10, respectively. As in the case of Euler angles (Example
2.12), the Runge–Kutta iteration is carried out with 41 time steps.
Table 2.7. M-ﬁle mrpevolve.m for the Time Derivatives of the MRP
function pdot=mrpevolve(t,p)
% program for calculating the time derivatives of the modified Rodrigues
% parameters, with a constant angular velocity, w (3x1)
% (c) 2006 Ashish Tewari
w=[0.1;-0.5;-1]; % angular velocity in rad/s
S=[0 -p(3,1) p(2,1);p(3,1) 0 -p(1,1);-p(2,1) p(1,1) 0];
G=0.5*(eye(3)+S+p*p’-0.5*(1+p’*p)*eye(3));
pdot=G*w;
Table 2.8. M-ﬁle rotmrp.m for the Rotation Matrix from the MRP
function C=rotmrp(p)
% rotation matrix from the modified Rodrigues parameters
% (c) 2006 Ashish Tewari
S=[0 -p(3,1) p(2,1);p(3,1) 0 -p(1,1);-p(2,1) p(1,1) 0];
C=eye(3)+4*(p’*p-1)*S/(1+p’*p)^2+8*S*S/(1+p’*p)^2;

2.9 Attitude Kinematics
41
Fig. 2.9. The time history of the modiﬁed Rodrigues vector, p, with ω
=
(0.1, −0.5, −1)T .
Fig. 2.10. The time history of the principal angle, Φ = 4 tan−1 | p |.

42
2 Attitude and Kinematics of Coordinate Frames
2.10 Summary
The coordinates of a vector, A, can be resolved in various frames of reference,
each of which consists of a right-handed triad formed by the unit vectors
i, j, k. The transformation from a frame of reference to another (also called
the attitude of a reference frame relative to another) involves an orthogo-
nal rotation matrix, C, the elements of which can be represented by various
alternative kinematic parameters, such as Euler angles, Euler axis/principal
rotation, Euler symmetric parameters (quaternion), Rodrigues and modiﬁed
Rodrigues parameters, etc. Of these, the three-parameter sets are inherently
singular, whereas the four-parameter sets—such as the quaternion—are non-
singular, but also nonminimal. The attitude kinematics is governed by a set
of nonlinear ordinary diﬀerential equations in terms of either the rotation ma-
trix or any of the alternative attitude parameters, which must be integrated in
time in order to specify the instantaneous attitude of a reference frame with
respect to another. When the angular velocity of a reference frame relative to
another is constant, the attitude kinematics is described by a linear system of
diﬀerential diﬀerential equations.
Exercises
2.1. Show that the vector product can be written as follows:
a × b = S(a)b ,
where S(a) is the following skew-symmetric matrix formed out of the elements
of a:
S(a) =
⎛
⎝
0
−a3
a2
a3
0
−a1
−a2
a1
0
⎞
⎠.
A skew-symmetric matrix has the property S(a)T = −S(a).
2.2. Find the Euler angles from the elements of the rotation matrix for the
representation (ψ)3, (θ)1, (φ)3. What are the points of singularity for this rep-
resentation?
2.3. Derive the general expressions for the Euler axis, e, and the principal
angle, Φ, in terms of a symmetric Euler angle representation. Can such simple
expressions be obtained for an asymmetric set?
2.4. The singularity of an Euler angle representation prevents the Euler an-
gles from describing inﬁnitesimal rotations about singular orientations. Using
the representation (ψ)3, (θ)1, (φ)3, show that if an inﬁnitesimal rotation is
performed about OY from the initial orientation of φ = θ = ψ = 0, the Euler
angles change instantaneously to ﬁnite values. [In a gyroscope (Chapter 14),

2.10 Summary
43
this peculiarity of Euler angles manifests itself as the phenomenon of gimbal
lock, in which a jamming of the gimbals occurs at a singular attitude, since
they are physically incapable of rotating instantaneously by ﬁnite angles.]
2.5. For a general orientation, show that the rotation matrix can be expressed
in terms of the Euler axis and principal angle as follows:
C = I cos Φ + (1 −cos Φ)eeT −sin ΦS(e) ,
where S(e) is the following skew-symmetric matrix (Exercise 2.1) formed out
of the elements of e:
S(e) =
⎛
⎝
0
−e3
e2
e3
0
−e1
−e2
e1
0
⎞
⎠.
This relationship between the rotation matrix and principal rotation an-
gle/Euler axis is called Euler’s formula.
2.6. Derive Eq. (2.46) using the result of Exercise 2.5 and the deﬁnition of
the quaternion given in Eq. (2.44). Note the similarity in the form of E and
Q.
2.7. Obtain the expressions for the quaternion elements in terms of the ele-
ments of the rotation matrix and employing (a) q2, and (b) q3, respectively,
in the denominator.
2.8. Derive the composition rule for the quaternion, Eq. (2.54).
2.9. Derive the composition rule for the Rodrigues parameters, Eq. (2.57).
2.10. Show that the derivation of the Rodrigues parameters from the rotation
matrix, Eq. (2.60), is true.
2.11. Derive the composition rule for the modiﬁed Rodrigues parameters,
Eq. (2.66).
2.12. Derive an expression for the modiﬁed Rodrigues vector, p, in terms of
the elements of the rotation matrix, cij.
2.13. By diﬀerentiating CCT (or CT C) with time according to the chain rule,
and substituting into the result the diﬀerential equation for the rotation ma-
trix, Eq. (2.71), show that Eq. (2.77) is satisﬁed.
2.14. Using the space-referenced angular velocity, ωI = CT ω, derive an ex-
pression for the time derivative of the rotation matrix.
2.15. Derive the kinematic relationship between the time derivatives of the
Euler angles, (ψ)3, (θ)2, (φ)1, and the body-referenced angular velocity com-
ponents.

44
2 Attitude and Kinematics of Coordinate Frames
2.16. Write a MATLAB program for calculating the time history of quater-
nion, given a constant body-referenced angular velocity. Use this program to
plot the variation of q(t), q4(t) for Example 2.12.
2.17. Write a MATLAB program for calculating the time history of the modi-
ﬁed Rodrigues parameters, given a varying body-referenced angular velocity,
ω = (−0.01, 0.5 sin3t, −0.5 cos3t)T . Use this program to compute and plot
the variation of p(t), given p(0) = (0.1, −0.2, 0.3)T. Also, plot the variation
of the principal angle with time.

3
Planetary Form and Gravity
3.1 Aims and Objectives
•
To present an accurate gravity model for ﬂight dynamic applications for
use in subsequent chapters.
•
To derive the gravitational eﬀects of a nonspherical planetary shape.
3.2 Newton’s Law of Gravitation
The well-known Newton’s law of gravitation expresses the gravitational force
between two bodies, regarded as point masses (particles, or spheres of negli-
gible volume), m1 and m2, as follows:
fg = m1g = −Gm1m2
r12
r3
12
,
(3.1)
where r12 is the position vector of the center of m1 relative to that of m2,
and G is the universal gravitational constant. Clearly, the force of Newtonian
gravity acts along the line joining the two bodies and diminishes in inverse
proportion to the square of the distance, r12. Newton’s law of gravitation,
Eq. (3.1), is also valid if the two bodies have perfectly spherical mass distri-
butions about their respective centers. In such a case, r12 is the position of
the center of mass, m1, relative to that of m2. By substituting Eq. (3.1) into
the equations of motion of the two bodies under mutual gravitation, it can be
shown (Chapter 4) that the acceleration of mass, m1, relative to the center of
mass, m2, is given by
g = −G(m1 + m2)r12
r3
12
.
(3.2)
Thus, the acceleration due to gravity, g, relative to the center of m2 also obeys
the inverse-square rule.
The universal gravitational constant, G = 6.67259(±0.0003) × 10−11
m3/kg/s2, has been the object of extensive measurement over the past two

46
3 Planetary Form and Gravity
centuries and indicates the weakness of the gravitational force in comparison
with other “action-at-distance” (such as electromagnetic) forces.1 However,
the product G(m1 + m2) is obtained much more simply (and accurately)
for a pair of planetary bodies through Kepler’s laws (Chapter 4). For exam-
ple, for the earth of mass Me and a negligible, spherical test mass, we have
GMe = 398600.4418 ± 0.0008 km3/s2. Hence, a ﬂight vehicle near a planet of
mass M would experience a gravitational acceleration
g = −GM r
r3 ,
(3.3)
where r denotes the vehicle’s position relative to the planet’s center. The
dimensions and mass of the vehicle are generally negligible in comparison
with the planetary mass, M, and radius, R, respectively.
In the actual world of nonspherical masses, the Newtonian gravity model
is accurate only when the distance separating the two bodies is much larger
than the individual body dimensions, i.e., when the bodies are reasonably
approximated as point masses. However, Newton’s law of gravitation is quite
useful in deriving a more accurate gravity model.
3.3 Gravity of an Axisymmetric Planet
All heavenly bodies (referred to here by the generic term planets) depart from
the perfect symmetry of spherical shape, because of their rotation about an
axis. One such departure is due to the centrifugal mass displacement caused by
rotation, which yields an axisymmetric body bulging at the equator (largest
circle on the planet’s surface, normal to the axis of rotation) and ﬂattened at
the poles (points of intersection of planetary surface with the axis of rotation).
A planet of such a shape is said to be oblate. Apart from oblateness, the shape
of an axisymmetric planet may depart from a sphere in many other ways. The
total departure from the spherical shape is a superposition of all such eﬀects,
called spherical harmonics. As pointed out above, Newton’s law of gravitation
is invalid for a test mass close to a nonspherical planet. We shall adopt the
energy approach in deriving the nonspherical gravity model.
Gravity is a conservative force, as it has no inﬂuence on the total energy
of any two-mass system (Chapter 4). As we will ﬁnd in Chapter 4, any force
that depends only upon the position (as gravity does) is a conservative force
and can be expressed as the gradient of a scalar function.2 Consider the gravi-
tational attraction between two point masses, m1, and m2, with the mutual
1 The ﬁrst accurate estimate of G was made by Henry Cavendish in 1798 with his
torsional balance. Although measurements of the gravitational constant continue
in the present day, there has been only a modest increase in the accuracy, mainly
due to the extreme diﬃculty of separating an experimental apparatus from other
inﬂuences.
2 The gradient of a scalar, Q, with respect to a column vector, x = (x1, x2, x3)T ,
is deﬁned as the derivative of the scalar with respect to the given vector,

3.3 Gravity of an Axisymmetric Planet
47
force given by Eq. (3.1). Let us deﬁne a gravitational potential, Φ1, for the
point mass, m1, by
Φ1 .= Gm1
r12
(3.4)
and Φ2, for the point mass, m2, by
Φ2 .= Gm2
r12
.
(3.5)
The gradient of Φ2 with respect to r12 is
∂Φ2
∂r12
= −Gm2
r2
12
∂r12
∂r12
= −Gm2
r3
12
r12T ,
(3.6)
or, substituting Eq. (3.1), we have
fgT = m1
∂Φ2
∂r12
.
(3.7)
Similarly, we can write
fgT = m2
∂Φ1
∂r21
= −m2
∂Φ1
∂r12
.
(3.8)
The acceleration due to gravity is thus given by
gT = ∂Φ2
∂r12
= −∂Φ1
∂r12
.
(3.9)
This derivation can be extended to more than two bodies. The net gravita-
tional acceleration of N −1 point masses, mi, (i = 1 . . . N −1), on the Nth
body of mass m is the vector sum of the gravitational accelerations caused by
the individual masses,
gT =
N−1

i=1
∂Φi
∂ri
,
(3.10)
where ri is the position of the test mass, m, from the ith point mass, mi. The
gravitational potential, Φi, due to the point mass, mi, is given by
Φi = Gmi
ri
.
(3.11)
This forms the basis of the N-body problem discussed in Chapter 4. Such an
approach can be extended to the determination of the gravitational accel-
eration due to a nonspherical body, whose mass is distributed over a large
∂Q
∂x
.= ( ∂Q
∂x1 , ∂Q
∂x2 , ∂Q
∂x3 ) .
Thus, the gradient of a scalar with respect to a column vector is a row vector.

48
3 Planetary Form and Gravity
number of elemental masses, mi. Assuming that the test mass m is negligible
in comparison with the sum of remaining N −1 masses, which are densely
clustered together, away from the test particle, m, the partial derivative can
be moved outside the summation sign in Eq. (3.10), leading to
gT = ∂
∂ri
N−1

i=1
Gmi
ri
.
(3.12)
For all the N −1 particles constituting the planetary mass, M, we take the
limit of inﬁnitesimal elemental mass, mi →dM and N →∞, whereby the
summation in Eq. (3.12) is replaced by the following integral:
gT = ∂
∂r
 G
s dM ,
(3.13)
where s is the distance of the test mass, m, from the elemental mass, dM, as
depicted in Fig. 3.1, and can be written as
s =

r2 + ρ2 −2rρ cos γ .
(3.14)
Here, r, and ρ are the position vectors of the test mass, m, and elemental
mass, dM, respectively, from the center of mass of the planet, and γ, is the
angle between r, and ρ (Fig. 3.1). It is clear that
r = s + ρ ,
(3.15)
and ρ is a constant (the planet is a rigid body). Therefore, the gravitational
potential of the planetary mass distribution is given by
Φ =

GdM

r2 + ρ2 −2rρ cos γ
.
(3.16)
In order to carry out the integration in Eq. (3.16), it is convenient to
expand the integrand in a series (with the assumption r > ρ) as follows:
1

r2 + ρ2 −2rρ cos γ
= 1
r

1 + ρ
r cos γ + 1
2(ρ
r )2(3 cos2 γ −1)
+ 1
2(ρ
r )3 cos γ(5 cos2 γ −3) + . . .

,
(3.17)
or,
1

r2 + ρ2 −2rρ cos γ
= 1
r

P0(cos γ) + ρ
r P1(cos γ) + (ρ
r )2P2(cos γ)
+ . . . + (ρ
r )nPn(cos γ) + . . .

,
(3.18)
where Pn(ν) is the Legendre polynomial of degree n. The ﬁrst few Legendre
polynomials are the following:

3.3 Gravity of an Axisymmetric Planet
49
Equatorial
Plane
X
Z
Gi
Y
ri
S
C
G
M
R
r
dM
mx
Fig. 3.1. A test mass, m, and an elemental planetary mass, dM, in a planet-centered
coordinate frame.
P0(ν) = 1,
P1(ν) = ν,
P2(ν) = 1
2(3ν2 −1),
(3.19)
P3(ν) = 1
2(5ν3 −3ν),
P4(ν) = 1
8(35ν4 −30ν2 + 3),
P5(ν) = 1
8(63ν5 −70ν3 + 15ν) .
Some important properties of Legendre polynomials are as follows:
Pn(1) = 1,
Pn(−1) = (−1)n,
(3.20)
Pn(−ν) = (−1)nPn(ν) .
A Legendre polynomial can be generated from those of lower degree with the
help of recurrence formulas, such as
Pn(ν) = (2n −1)νPn−1(ν) −(n −1)Pn−2(ν)
n
.
(3.21)
Other formulas, called generating functions, are also useful in determining the
Legendre polynomials, such as the following [5]:
Pn(ν) =
1
2nn!
dn
dνn (ν2 −1) .
(3.22)

50
3 Planetary Form and Gravity
From the above given properties, it is clear that the Legendre polynomials sat-
isfy the condition | Pn(cos γ) |< 1, which implies that the series in Eq. (3.18)
is convergent. Therefore, we can approximate the integrand of Eq. (3.16) by
retaining only a ﬁnite number of terms in the series. The exact gravitational
potential is expressed as follows:
Φ = G
r
∞

n=0

(ρ
r )nPn(cos γ)dM .
(3.23)
It is possible to further simplify the gravitational potential before carrying
out the complete integration. The integral arising out of P0(cos γ) in Eq. (3.23)
yields the mass, M, of the planet; hence, we have
G
r

P0(cos γ)dM = GM
r
.
(3.24)
Furthermore, the integral containing P1(cos γ) vanishes, because the axis ρ = 0
is the axis of symmetry of the planet.3 Therefore, the gravitational potential
can be expressed in terms of the Legendre polynomials of the second and
higher degrees as
Φ = GM
r

1 +
∞

n=2

(ρ
r )nPn(cos γ)dM
M

.
(3.25)
A further simpliﬁcation of the gravitational potential requires the planetary
mass distribution. Let the planet’s mass density be given by D(ρ, β, λ) in
terms of the spherical coordinates of Fig. 3.1. Hence, the elemental mass can
be expressed as
dM = D(ρ, β, λ)ρ2 sin βdρdβdλ ,
(3.26)
where β and λ are the co-latitude and longitude, respectively, of the elemen-
tal mass. The assumption of symmetry about the polar axis translates into
neglecting any longitudinal dependence of the mass distribution; thus, we have
dM = D(ρ, β)ρ2 sin βdρdβdλ .
(3.27)
Using the spherical trigonometry [2] of Fig. 3.1, we can write
cos γ = cos β cos φ + sin β sin φ cos(θ −λ) ,
(3.28)
where φ and θ are the co-latitude and longitude, respectively, of the test mass,
m, as shown in Fig. 3.1. Upon neglecting longitudinal variations in the mass
distribution, we have from Eq. (3.28)
3 Axial symmetry is common to all heavenly bodies, with rare exceptions, such as
the asteroids, and some moons. However, the mass distribution of even an ax-
isymmetric planet is never exactly axisymmetric and displays a slight longitudinal
dependence (which we shall ignore here for our purposes).

3.3 Gravity of an Axisymmetric Planet
51
Pn(cos γ) = Pn(cos β)Pn(cos φ) ,
(3.29)
resulting in
Φ(r, φ) = GM
r
+
∞

n=2
An
rn+1 Pn(cos φ) ,
(3.30)
where
An .= G

D(ρ, β)ρn+2Pn(cos β) sin βdρdβdλ .
(3.31)
A more useful expression for the gravitational potential can be obtained as
follows in terms of the nondimensional distance,
r
Re (where Re is the equatorial
radius of the planet):
Φ(r, φ) = GM
r

1 −
∞

n=2
Re
r
n
JnPn(cos φ)

,
(3.32)
where
Jn .= −
An
GMRe
n
(3.33)
are called Jeﬀery’s constants and are unique for a planet. Jeﬀery’s constants
represent spherical harmonics of the planetary mass distribution, and dimin-
ish in magnitude as the order, n, increases. The largest of these constants, J2,
denotes a nondimensional diﬀerence between the moments of inertia about
the polar axis, SZ, and an axis in the equatorial plane (SX or SY in Fig. 3.1),
and is a measure of ellipticity, or oblateness, of the planet. In Chapter 6, we
shall study the profound eﬀect of J2 upon the the orbital plane of a satellite.
The higher-order term, J3, indicates the pear-shaped, or triangular, harmonic,
whereas J4 and J5 are the measures of square and pentagonal shaped harmon-
ics, respectively. The approximate spherical harmonics corresponding to the
Jeﬀrey’s constants are indicated in Fig. 3.2 (the actual harmonics do not have
the sharp corners shown in the ﬁgure). It is seldom necessary to include more
than the ﬁrst four Jeﬀery’s constants in a gravity model. For example, the
earth’s spherical harmonics are given by J2 = 0.00108263, J3 = −0.00000254,
and J4 = −0.00000161.
The acceleration due to gravity of a nonspherical, axisymmetric planet can
be obtained according to Eq. (3.9) by taking the gradient of the gravitational
potential, Eq. (3.32), with respect to the position vector, r = rir + rφiφ, as
follows:
g = −(∂Φ
∂r )T = −∂Φ
∂r ir −∂Φ
r∂φiφ ,
(3.34)
or,
g = grir + gφiφ ,
(3.35)
where

52
3 Planetary Form and Gravity
J2
J3
J4
J5
Fig. 3.2. Spherical harmonics of an axisymmteric planet.
gr = −GM
r2

1 −3J2(Re
r )2P2(cos φ) −4J3(Re
r )3P3(cos φ)
−5J4(Re
r )4P4(cos φ)

,
(3.36)
and
gφ = 3GM
r2
(Re
r )2 sin φ cos φ

J2 + 1
2J3(Re
r ) sec φ(5 cos2 φ −1)
+ 5
6J4(Re
r )2(7 cos2 φ −1)

.
(3.37)
The unit vectors ir and iφ denote the radial and southward directions in the
local horizon frame attached to the test mass (Fig. 3.1). Due to a nonzero
transverse gravity component, gφ, the direction of g diﬀers from the radial
direction, while its radial component, gr, is smaller in magnitude compared
to that predicted by a spherical gravity model. These deviations are quite
important in applications such as the ﬂight of an atmospheric entry vehicle,
and the long-range navigation of airplanes and missiles. For example, by ig-
noring the nonspherical gravity, one may commit an error of several hundred
kilometers in an entry trajectory from a low earth orbit.

3.3 Gravity of an Axisymmetric Planet
53
Example 3.1. Construct a model of the earth’s gravity using the ﬁrst four
Jeﬀery’s constants in the series expansion of gravitational potential. Compare
the acceleration due to gravity with that of the spherical earth model (R =
Re = 6378.14 km) for a trajectory in which the latitude (in degrees) varies
with altitude, h = r −Re (in kilometers), as follows:
δ = h −100,
(0 ≤h ≤200 km) .
A MATLAB program called gravity.m, tabulated in Table 3.1, calculates
the acceleration due to gravity according to Eqs. (3.36) and (3.37), but reverses
the direction of the radial and transverse components, i.e., g .= −gcir −gδiφ,
such that the components, gc, gδ, are along unit vectors toward the planetary
center and north, respectively. This arrangement is useful when the equations
of motion are expressed a north–east–down local horizon frame.
Table 3.1. M-ﬁle gravity.m for Acceleration due to Gravity in Radially Upward
and North Directions
function [gc,gnorth]=gravity(r,lat);
% (c) 2006 Ashish Tewari
phi=pi/2-lat;
mu=3.986004e14;%mu=GMe
Re=6378.135e3;
J2=1.08263e-3;
J3=2.532153e-7;
J4=1.6109876e-7;
gc=mu*(1-1.5*J2*(3*cos(phi)^2-1)*(Re/r)^2-2*J3*cos(phi)...
*(5*cos(phi)^2-3)*(Re/r)^3-(5/8)*J4*(35*cos(phi)^4...
-30*cos(phi)^2+3)*(Re/r)^4)/r^2;
gnorth=-3*mu*sin(phi)*cos(phi)*(Re/r)*(Re/r)...
*(J2+0.5*J3*(5*cos(phi)^2-1)...
*(Re/r)/cos(phi)...
+(5/6)*J4*(7*cos(phi)^2-1)*(Re/r)^2)/r^2;
The program is executed, and its results compared with the spherical
model, for the given trajectory as follows:
dtr=pi/180;
lat=100*dtr;r=6578.14e3;
for i=1:200
[GC(:,i),GN(:,i)]=gravity(r,lat);
GS(:,i)=3.986004e14/r^2;
R(:,i)=r;
LAT(:,i)=lat;
r=r-1000;
lat=lat-dtr;
end
plot(LAT/dtr,GC,LAT/dtr,GS,’:’),xlabel(’Latitude,\delta (deg.)’),...
ylabel(’-g_r (m/s^2)’),legend(’Nonspherical model’,’Spherical model’)

54
3 Planetary Form and Gravity
figure
plot(LAT/dtr,-GN,LAT/dtr,zeros(size(GS)),’:’),xlabel(’Latitude,\delta (deg.)’),...
ylabel(’g_{\phi} (m/s^2)’),legend(’Nonspherical model’,’Spherical model’)
The resulting plots of −gr and gφ are shown in Figs. 3.3 and 3.4, re-
spectively. In these ﬁgures, it must be remembered that h = 200 km when
δ = 100◦, and h = 0 when δ = −100◦. Clearly, both the components display
an oscillatory dependence on the latitude. The diﬀerence with the spherical
model vanishes for gr at δ = ±45◦, and for gφ at the equator and the poles.
The maximum departure from the spherical model is observed for gr at the
poles, and for gφ at δ = ±45◦. Evidently, while no trajectory can completely
escape gravitational variations due to the nonspherical planet, they are the
least in magnitude for a ﬂight conﬁned entirely to the equatorial plane.
−100
−50
0
50
100
9.1
9.2
9.3
9.4
9.5
9.6
9.7
9.8
Latitude, δ (deg.)
−gr (m/s2)
Nonspherical model
Spherical model
Fig. 3.3. Radial component of acceleration due to earth’s gravity for a reference
trajectory.
3.4 Radius of a Nonspherical Planet
For a nonspherical planet, the equatorial radius Re—being larger than the
polar radius Rp—cannot be taken to be a reference surface radius. In order to
deﬁne a datum sea level, which is useful in accounting for atmospheric varia-
tions (Chapter 9), a surface radius, R, is required as a function of the local,

3.4 Radius of a Nonspherical Planet
55
−100
−50
0
50
100
−0.02
−0.015
−0.01
−0.005
0
0.005
0.01
0.015
Latitude, δ (deg.)
gφ (m/s2)
Nonspherical model
Spherical model
Fig. 3.4. Transverse component of acceleration due to earth’s gravity for a reference
trajectory.
planetcentric latitude, δ. Britting [7] derived the following series expansion for
R:
R = Re[1 −ϵ
2(1 −cos 2δ) + 5ϵ2
16 (1 −cos 4δ) −. . .] ,
(3.38)
where
ϵ = 1 −Rp
Re
(3.39)
is called the ellipticity of the planet. Generally, ϵ is a small number (for the
earth, ϵ =
1
298.257), and thus the series in Eq. (3.38) is absolutely convergent.
Furthermore, in most cases it is suﬃciently accurate to retain only the ﬁrst
two terms of the series, leading to the approximation
R ≈Re(1 −ϵ sin2 δ) .
(3.40)
It is important to note that the vertical direction is indicated by the local
normal to the nonspherical planetary surface, and departs from the radial
direction. This deﬂection of the vertical at the surface can be expressed by the
angle, D, between the local vertical and radial directions, given by Britting [7]
as the following series:
D = ϵ sin 2δ −ϵ2
4 sin 2δ + 2ϵ2 sin 2δ sin2 δ + . . . .
(3.41)

56
3 Planetary Form and Gravity
It is seldom necessary to employ more than the ﬁrst term in this series.
Example 3.2. Plots of the radius, R, and deﬂection of the vertical, D, for the
earth over 0 ≤δ ≤90◦, using the ﬁrst two terms of each series, are shown
in Fig. 3.5. Clearly, the minimum radius, R = Rp = 6356.755 km, occurs at
the pole, while the maximum deﬂection of the vertical, D = 0.192◦, occurs at
δ = 45◦.
0
10
20
30
40
50
60
70
80
90
6355
6360
6365
6370
6375
6380
Latitude, δ (deg.)
R (km)
0
10
20
30
40
50
60
70
80
90
0
0.1
0.2
Latitude, δ (deg.)
D (deg.)
Nonspherical Earth 
Spherical Earth 
Fig. 3.5. Earth’s radius and deﬂection of the vertical in the northern hemisphere.
3.5 Gravitational Anomalies
The nonspherical gravity model presented above essentially treats the plane-
tary surface to be an axisymmetric ellipsoid generated by the surface contour
of a constant gravitational potential (called an equipotential surface). The ac-
tual mass distribution of the planet, however, slightly diﬀers from this model,
leading to small gravitational anomalies. One has to consider longitudinal
variations in the mass distribution (called sectorial and tesseral eﬀects), as
well as local variation in mass due to the presence of surface and sub-surface

3.6 Summary
57
features (mountains, valleys, plains, tectonic zones, etc.), in order to arrive at
a more accurate gravity model. The modiﬁed equipotential surface obtained
with the inclusion of gravitational anomalies is called a geoid. Rather than
theoretically accounting for density anomalies, it is much simpler to actually
measure the acceleration due to gravity over various points on the planetary
surface and then construct either a geoid, or a detailed map, of g. Such a
mapping is usually carried out through specially instrumented spacecraft in
circular orbits, such as NASA’s Lageos, TOPEX/Poseidon, and GRACE—as
well as the French SPOT-2/Doris—missions for the earth. Although the longi-
tudinal and local gravitational anomalies are negligible in most ﬂight dynamic
applications, there are certain cases, such as that of a geostationary satellite,
where even small changes in g may cause a signiﬁcant trajectory change over
a long period of time (months and years). For such special applications, the
spherical harmonics are carefully modeled [2], using Legendre functions [5]
(also called associated Legendre polynomials), P m
n . Legendre functions are re-
lated to Legendre polynomials by Pn = P 0
n. In a general gravity model, the
spherical harmonic coeﬃcients are denoted Cm
n , where m is the order, and n
the degree, of harmonics. Jeﬀery’s constants are the negative of the zeroth-
order harmonic coeﬃcients of the same degree, Jn = −C0
n, which are referred
to as zonal harmonic coeﬃcients, while the coeﬃcients with m ̸= 0 are due to
a nonaxisymmetric mass distribution, and display longitudinal dependence of
gravity. These are clubbed into the sectorial harmonic coeﬃcients, Cn
n, and the
tesseral harmonic coeﬃcients with n ̸= m. The Mars Global Surveyor (MGS)
spacecraft of NASA has carried out extensive gravitational acceleration mea-
surements beginning in 1997, which provide data for spherical harmonics of
order, m = 80, and degree n = 80. These data [6] include gravitational anom-
alies due to local surface features, such as the gorge Valles Marineris, the
mountain Olympus Mons, and the plateau Tharsis.4
3.6 Summary
While a spherical gravity model serves most atmospheric ﬂight applications
reasonably well, it is necessary to model the spherical harmonics of a non-
spherical mass distribution for accurate space-ﬂight, rocket-ascent, and entry-
ﬂight trajectories. Both the magnitude and direction of the gravity force are
modiﬁed by the spherical harmonics and can be expanded in inﬁnite series,
the largest term of which is due to oblateness (J2). In addition to spheri-
cal harmonics, there are gravitational anomalies caused by nonaxisymmetric
4 The spherical harmonic coeﬃcients are often normalized by
¯
Cm
n = Cm
n N, where
N .=
(n + m)!
k(2n + 1)(n −m)! ,
with k = 1 if m = 0, and k = 2 if m ̸= 0 [8].

58
3 Planetary Form and Gravity
sectorial and tesseral eﬀects and local features, whose geoid model requires
accurate experimental data generated by satellite mapping missions.
Exercises
3.1. Using an appropriate rotation matrix (Chapter 2), transform the gravi-
tational acceleration [Eq. (3.35)] to a stationary coordinate frame, XYZ, with
origin at planet’s center (Fig. 3.1). Express your answer in terms of the co-
latitude, φ, and longitude, λ.
3.2. Model the variation of Mars’ acceleration due to gravity with latitude at
an altitude of h = 100 km, using the following data provided by the Mars
Global Surveyor (MGS) mission of NASA [6]:
GM = 42828.371901284 km3/s2,
Re = 3397 km,
J2 = 0.00195545367944545,
J3 = 3.14498094262035 × 10−5,
J4 = −1.53773961526397 × 10−5,
J5 = 5.71854718418134 × 10−6 .
3.3. Gravity gradient, Gg, at a point located at r from the center of a planet
is deﬁned by the gradient of the gravitational acceleration, g, with respect to
r:
Gg .= ∂g
∂r .
Derive an expression for the square matrix Gg5 for a spherical planet of mass
M.
5 Since the gradient of a scalar with respect to a column vector is a row vector, the
gradient of a column vector with respect to another is a square matrix.

4
Translational Motion of Aerospace Vehicles
4.1 Aims and Objectives
•
To introduce analytical (Newtonian) dynamics useful in ﬂight dynamic
derivations and analyses.
•
To oﬀer the tools for a rigorous derivation of the translational motion
model.
•
To establish a relationship between translational and rotational dynamics
of a ﬂight vehicle.
•
To present the basic kinetic equations of aerospace ﬂight, covering
dynamics in moving frames, variable mass bodies, the N -body
gravitational problem in space dynamics, and its specialization to
two-body trajectories with analytical and numerical solutions.
4.2 Particle and Body
The complete description of aerospace vehicle dynamics consists of the trans-
lational motion of a point on the vehicle, and the rotational motion of the
vehicle about that point. When we are merely interested in the trajectory (or
ﬂight path) of a vehicle, we can disregard the rotational motion of the vehicle
and conﬁne our attention to translation. Reducing the vehicle dynamics to
the motion of a speciﬁc point on the vehicle is tantamount to approximat-
ing the aerospace vehicle by a point mass, or a particle. A particle can be
deﬁned as an object of inﬁnitesimal dimensions, which occupies a point in
space. Consequently, the position, velocity, and acceleration of a particle are
each determined by only three scalar quantities; thus a particle has three de-
grees of freedom. No physical object fulﬁlls the precise deﬁnition of a particle.
The particle is thus a mathematical abstraction, which is used whenever we
are interested in studying the path of a physical object, ignoring its size and
rotational (or angular) motion. A baseball can be regarded as a particle, if we
want to study its trajectory from the time it leaves the hand of the pitcher,

60
4 Translational Motion of Aerospace Vehicles
and prior to its reaching the bat, provided we ignore the dimensions of the
ball and its spin. However, the particle approximation of an object gives an
incomplete description of its motion. For example, ignoring the size of the
baseball will prevent us from studying how closely the bat misses the ball, or
whether the bat hits the ball squarely in its middle. Furthermore, the ignored
spin of the baseball would be quite important not only in its interaction with
the bat, but also in the deviation of its trajectory caused by aerodynamic
forces. Hence, a particle approximation will be inadequate if the baseball’s
motion is to be accurately simulated.
The particle approximation implies that we can separate the translational
and rotational motions of an aerospace vehicle. The translational and rota-
tional motions can be accurately separated for spacecraft in most circum-
stances, but for an aircraft the two motions are intertwined, because the
aerodynamic forces inﬂuencing the translational motion depend on the an-
gular orientation (attitude) of the aircraft with respect to the instantaneous
ﬂight path, and the attitude is governed by the rotational dynamics of the
aircraft. However, since attitudinal rotations usually involve a smaller time
scale compared to that of translational dynamics, a good ﬁrst approximation
of the aircraft trajectory can be obtained by considering only the particle dy-
namics and treating the aerodynamic forces as functions of the angles deﬁning
the attitude relative to the instantaneous ﬂight path. In such an approxima-
tion, the angles relative to the ﬂight path are either speciﬁed functions of
time, or treated as instantaneously variable control inputs for the trajectory,
completely disregarding the rotational dynamics of the aircraft.
A body is a collection of particles. If the distance between any two particles
of a body remains ﬁxed, then it is referred to as a rigid body. In Chapter 2 we
saw how each of the position, velocity, and acceleration of a coordinate frame
(rigid body) require six (rather than three) scalar quantities (six degrees of
freedom). An aerospace vehicle is treated as a rigid body whenever we are
interested in simulating its rotational motion. Sometimes, the rigid-body as-
sumption is inadequate. Most aerospace vehicles have lightweight structures,
which are quite ﬂexible. If the structural vibration of a vehicle is to be stud-
ied, then the structural deformation becomes important, and the rigid-body
approximation cannot be applied. If a ﬂight vehicle has moving internal parts
(such as engines or gyroscopes), then it too cannot be treated as a single
rigid body; in such a case, we may take the vehicle as consisting of sev-
eral rigid bodies, moving with respect to each other. The presence of liquid
fuel (or propellant) inside a vehicle also causes a departure from the rigid-
body assumption. A nonrigid (or ﬂexible) body requires thrice as many scalar
quantities as the total number of individual particles to specify its position,
velocity, or acceleration. Since a continuous structure consists of an inﬁnite
number of particles, it possesses inﬁnite degrees of freedom. However, the
structural deformations and sloshing of liquids are small in magnitude com-
pared to the translation of a vehicle’s center of mass, and generally occur at
smaller time scales compared to the rotational dynamics of the vehicle as a

4.2 Particle and Body
61
rigid body. The eﬀects of nonrigidity become important only when there is
a signiﬁcant coupling between themselves and the motion of the vehicle as
a rigid body, or with the aerodynamic loads. Under certain circumstances,
such a coupling may cause the structural deformation (or liquid sloshing) to
grow in an unbounded manner, which can be catastrophic. Coupling between
rigid and ﬂexible motions is important whenever the associated time scales
are comparable, or when aerodynamic loads begin feeding the ﬂexible motion.
For a spacecraft, the dissipation of energy caused by nonrigid internal motions
can be important in studying rotational stability.
The purpose of this chapter is to develop the equations of translational
motion for aerospace vehicles employing the particle idealization, and to ap-
ply them to certain interesting trajectories for which analytical solutions are
possible. Later in the book, we will address the numerical simulation of the
more general trajectories.
4.2.1 Particle Kinematics in a Moving Frame
The velocity and acceleration of a particle can be expressed in any coordi-
nate frame. However, only a stationary frame can measure the true (or total)
velocity and acceleration. Consider a particle, p, instantaneously located by
the position vector, R, relative to a stationary frame of reference, (SXYZ)
(Fig. 4.1). We would like to derive the velocity and acceleration of the particle
relative to another frame, (oxyz), which is rotating with an angular velocity,
ω, and whose origin, o, is instantaneously located at R0 with respect to the
stationary frame.
From the vector triangle in Fig. 4.1 we can write
R = R0 + r .
(4.1)
y
Z
Y
R
Z
o
p
r
R0
S
X
z
x
Fig. 4.1. A particle in a moving frame.

62
4 Translational Motion of Aerospace Vehicles
Equation (4.1) deﬁnes the position, r, of the particle relative to the moving
frame. Diﬀerentiating both sides of Eq. (4.1) with time, we get
dR
dt = dR0
dt
+ dr
dt .
(4.2)
Note that the total derivative of the relative position can be expressed as
follows, in accordance with Section 2.2 concerning the derivative of a vector
in a rotating reference frame:
dr
dt = ∂r
∂t + ω × r.
(4.3)
The partial derivative in Eq. (4.3) represents the rate of change of relative
position, r, as seen by an observer located in the moving frame, (oxyz).1
Introducing the velocity vector of the particle, v .=
dR
dt , and deﬁning the
velocity of the point o by v0 .= dR0
dt , we can write Eq. (4.2), after substituting
Eq. (4.3), as
v = v0 + ∂r
∂t + ω × r .
(4.4)
Note that Eq. (4.4) relates the total velocity of a particle (left-hand side),
with the velocity measured in a coordinate frame rotating with angular velo-
city, ω, and whose origin has a linear velocity, v0 (right-hand side). While
here ω and v0 are measured in a stationary frame, Eq. (4.4) represents a
more general relationship between for any two coordinate frames that have a
relative motion described by ω and v0. Hence, Eq. (4.4) represents a coordi-
nate transformation for the velocity of a particle from one frame to another,
where the two frames have a relative angular velocity, ω, and a relative linear
velocity, v0.
In order to ﬁnd an expression for acceleration, we diﬀerentiate Eq. (4.4)
with time using the chain rule of diﬀerentiation, and decompose the total
derivatives on the right-hand side according to the vector derivative rule of
Section 2.2, as follows:
dv
dt = dv0
dt + dω
dt × r + ω × dr
dt + ∂2r
∂t2 + ω × ∂r
∂t ,
(4.5)
dv
dt = dv0
dt + dω
dt × r + ω ×
∂r
∂t + ω × r

+ ∂2r
∂t2 + ω × ∂r
∂t ,
(4.6)
dv
dt = dv0
dt + dω
dt × r + 2ω × ∂r
∂t + ω × (ω × r) + ∂2r
∂t2 .
(4.7)
1 The partial derivative in the calculus of variations refers to the diﬀerentiation
of a multivariable functional with respect to one of the independent variables.
However, as we do not normally concern ourselves with variational calculus in
this book, the partial derivative stands for the time derivative of a vector quantity
with reference to a rotating frame, unless stated otherwise.

4.2 Particle and Body
63
In Eq. (4.7), we can identify the left-hand side as the total acceleration of the
particle in the stationary frame, a .= dv
dt , and the acceleration of the origin of
the moving frame, o, as a0 .= dv0
dt . Hence, we write the total acceleration of
the particle, p, as follows:
a = a0 + ∂2r
∂t2 + dω
dt × r + 2ω × ∂r
∂t + ω × (ω × r).
(4.8)
Equation (4.8) is an expression of coordinate transformation for the acceler-
ation of a particle from one frame to another, where the two frames have a
relative angular velocity, ω, and a relative linear acceleration, a0. The second
term on the right-hand side of Eq. (4.8) represents the linear acceleration of
the particle, p, relative to the moving frame. This is the acceleration of a
sandwich thrown from a car traveling in a straight line. The third term on the
right-hand side is the contribution to the total acceleration due to the rela-
tive angular acceleration of the moving frame, dω
dt , whereas the fourth term
is called the Coriolis acceleration, caused by the linear velocity of the parti-
cle relative to the moving frame, ∂r
∂t . The last term in Eq. (4.8) is called the
centripetal acceleration and acts toward the origin, o, of the moving frame.
An insect crawling along the wheel-spoke of a moving bicycle experiences all
the relative acceleration terms on the right-hand side of Eq. (4.8). However,
the relative acceleration experienced by the insect would be opposite in direc-
tion to that seen by an observer located in the stationary frame. We are all
familiar with the centrifugal acceleration, which tends to throw us in our car
seat away from the direction of a turn; but an observer standing on the road
sees us turning with the car in the same direction as that of the turn (cen-
tripetal acceleration). In order to avoid confusion, we must remember that all
the acceleration terms in Eq. (4.8) are measured by a stationary observer.
If the points o and p are located on a rigid body, then the time derivatives
of the relative position, r, vanish from Eqs. (4.4) and (4.8); thus we can write
v = v0 + ω × r,
(4.9)
a = a0 + dω
dt × r + ω × (ω × r).
(4.10)
Example 4.1. Consider the launch of a rocket from the earth’s surface. If the
launch speed relative to the earth’s surface is V, let us ﬁnd an expression
for the total velocity and acceleration of the rocket at launch. The direction
of launch is speciﬁed by two angles, called azimuth, A, and elevation, E, as
shown in Fig. 4.2.
Let us begin by choosing a stationary frame of reference, (SXYZ), located
at the earth’s center, but not rotating with the earth. By denoting the frame
(SXYZ) stationary, we are eﬀectively ignoring the orbital motion of the earth
around the sun, which is acceptable for the limited purpose of studying the
rocket’s ﬂight relative to the earth. Hence, we can assume the frame (SXYZ)

64
4 Translational Motion of Aerospace Vehicles
M
E
8
o
E
V
A
S
y
(east) 
z (up) 
X
Y
x (south) 
Z
Fig. 4.2. Launch of a rocket from the surface of a rotating earth.
to be ﬁxed with respect to the distant stars; such a coordinate frame is called
a celestial frame. The launch point is located in the stationary frame by two
angles, namely the celestial longitude, λ, and the latitude, δ (Fig. 4.2). Note
that earth’s rotation about the axis SZ causes the celestial longitude of the
launch point to change with time. Let the unit vectors I, J, K be along the
axes SX, SY, and SZ, respectively. The earth’s angular velocity relative to the
stationary frame is then ω = ΩK, whereas the location of the launch point,
o, is given by
R0 = R0 cos δ cos λI + R0 cos δ sin λJ + R0 sin δK .
(4.11)
The velocity of point, o, is merely due to the rotation of the vector R0; thus,
applying Eq. (4.3), we can write
v0 .= dR0
dt
= ω × R0 = ΩR0 cos δ cos λJ −ΩR0 cos δ sin λI.
(4.12)
Similarly, the acceleration of point, o, is obtained by applying Eq. (4.3) to the
derivative of v0 as follows:
a0 .= dv0
dt = ω × v0 = −Ω2R0 cos δ cos λI −Ω2R0 cos δ sin λJ.
(4.13)
Next, let us choose the orientation of the moving frame (oxyz) ﬁxed to
the earth’s surface at the launch point, such that ox is toward south, oy is
toward the east, and oz is vertically upward; the unit vectors i, j, k speciﬁy
the directions of the axes ox, oy, and oz, respectively. In the moving frame,
the rocket’s relative velocity is written as

4.2 Particle and Body
65
∂r
∂t = V cos E cos Ai + V cos E sin Aj + V sin Ek.
(4.14)
At the time of launch, r = 0. Substituting Eqs. (4.12) and (4.14) into Eq. (4.4),
the total velocity of the rocket is given by
v = ΩR0 cos δ(cos λJ−sin λI)+V (cos E cos Ai+cosE sin Aj+sin Ek). (4.15)
Equation (4.15) is a jumble of unit vectors of two diﬀerent frames, and we
would like to express i, j, k in the stationary frame. According to Section 2.3,
a rotation matrix describes the transformation between any two frames.
Z,zc
S,o
E
M
yc,y
M
E
xc
x
z
Y
X
Fig. 4.3. The orientation of moving frame, (oxyz), relative to stationary frame,
(SXYZ).
Figure 4.3 depicts the two elementary rotations required to obtain the rel-
ative orientation between I, J, K and i, j, k. The rotation matrix representing
this orientation is thus derived as a product of the two individual rotation
matrices—a rotation by angle λ about the axis, SZ, and a rotation by angle
π
2 −δ about the intermediate axis, Sy′, as follows:
⎧
⎨
⎩
i′
j′
k′
⎫
⎬
⎭=
⎛
⎝
cos λ
sin λ 0
−sin λ cos λ 0
0
0
1
⎞
⎠
⎧
⎨
⎩
I
J
K
⎫
⎬
⎭,
(4.16)
⎧
⎨
⎩
i
j
k
⎫
⎬
⎭=
⎛
⎝
sin δ 0 −cosδ
0
1
0
cos δ 0
sin δ
⎞
⎠
⎧
⎨
⎩
i′
j′
k′
⎫
⎬
⎭,
(4.17)
⎧
⎨
⎩
i
j
k
⎫
⎬
⎭=
⎛
⎝
sin δ 0 −cos δ
0
1
0
cos δ 0
sin δ
⎞
⎠
⎛
⎝
cos λ
sin λ 0
−sin λ cos λ 0
0
0
1
⎞
⎠
⎧
⎨
⎩
I
J
K
⎫
⎬
⎭,
(4.18)

66
4 Translational Motion of Aerospace Vehicles
or,
⎧
⎨
⎩
i
j
k
⎫
⎬
⎭=
⎛
⎝
sin δ cos λ sin δ sin λ −cos δ
−sin λ
cos λ
0
cos δ cos λ cos δ sin λ
sin δ
⎞
⎠
⎧
⎨
⎩
I
J
K
⎫
⎬
⎭,
(4.19)
where i′, j′, k′ are the unit vectors denoting the intermediate axes, Sx, Sy, and
Sz, respectively. Substituting Eq. (4.19) into Eq. (4.15) and collecting terms,
we can ﬁnally express the total velocity of the rocket as
v = [V (cos E cos A sin δ cos λ −cos E sin A sin λ + sin E cosδ cos λ)
−ΩR0 sin δ sin λ]I
+ [V (cos E cos A sin δ sin λ + cos E sin A cos λ + sin E cos δ sin λ)
−ΩR0 sin δ cos λ]J
+ V (−cosE cos A cos δ + sin E sin δ)K.
(4.20)
The rocket’s acceleration is derived using the facts that the angular velocity
of the moving frame is constant and that r = 0, which, when substituted into
Eq. (4.8), yield
a = a0 + ∂2r
∂t2 + 2ω × ∂r
∂t .
(4.21)
The expressions for a0 and ∂r
∂t are available from Eqs. (4.13) and (4.14), respec-
tively. An expression for ∂2r
∂t2 is derived by diﬀerentiating Eq. (4.14) partially
with time (i.e., the time derivative is taken with respect to the moving frame)
as
∂2r
∂t2 = ( ˙V cos E cos A −V ˙E sin E cos A −V ˙A cos E sin A)i
+ ( ˙V cos E sin A −V ˙E sin E sin A + V ˙A cos E cos A)j
+ ( ˙V sin E + V ˙E cos E)k,
(4.22)
where the dot represents the partial derivative, ∂
∂t. We can transform Eq. (4.22)
to the stationary frame using Eq. (4.19), and write
∂2r
∂t2 =
⎧
⎨
⎩
( ˙V cosE cos A −V ˙E sin E cos A −V ˙A cos E sin A)
( ˙V cos E sin A −V ˙E sin E sin A + V ˙A cos E cos A)
( ˙V sin E + V ˙E cos E)
⎫
⎬
⎭
T
×
⎛
⎝
sin δ cos λ sin δ sin λ −cosδ
−sin λ
cos λ
0
cos δ cos λ cos δ sin λ
sin δ
⎞
⎠
⎧
⎨
⎩
I
J
K
⎫
⎬
⎭.
(4.23)
The last term on the right-hand side of Eq. (4.21) is
2ω× ∂r
∂t = 2ΩV [cos E cos A(K×i)+cosE sin A(K×j)+sin E(K×k)], (4.24)

4.2 Particle and Body
67
which, using the rotation matrix of Eq. (4.19), becomes
2ω × ∂r
∂t = 2ΩV [cos E cos A(sin δ cos λJ −sin δ sin λI)
+ cos E sin A(−sin λJ) −cos λI)
+ sin E(cos δ cos λJ −cos δ sin λI)].
(4.25)
When we substitute Eqs. (4.13), (4.23), and (4.25) into Eq. (4.21) and collect
terms, the total acceleration is expressed as follows:
a = [( ˙V cos E cos A −V ˙E sin E cos A −V ˙A cos E sin A) sin δ cos λ
−( ˙V cos E sin A −V ˙E sin E sin A + V ˙A cos E cos A) sin λ
+ ( ˙V sin E + V ˙E cos E) cos δ cos λ −Ω2R0 sin δ cos λ
−2ΩV (cos E cos A sin δ sin λ + cos E sin A cos λ + sin E cos δ sin λ)]I
+ [( ˙V cos E cos A −V ˙E sin E cos A −V ˙A cos E sin A) sin δ sin λ
+ ( ˙V cos E sin A −V ˙E sin E sin A + V ˙A cos E cos A) cos λ
+ ( ˙V sin E + V ˙E cos E) cos δ sin λ −Ω2R0 sin δ sin λ
+ 2ΩV (cos E cos A sin δ cos λ −cos E sin A sin λ + sin E cos δ cos λ)]J
[−( ˙V cos E cos A −V ˙E sin E cos A −V ˙A cos E sin A) cos δ
+ ( ˙V sin E + V ˙E cos E) sin δ]K.
(4.26)
Note that the total acceleration could also be obtained by taking the vector
derivative of the total velocity derived in Eq. (4.20), according to
a .= dv
dt = ∂v
∂t + ω × v.
(4.27)
This can be veriﬁed by the reader.
Example 4.2. Consider an aircraft whose position and angular velocity relative
to a ground station, (SXYZ), with unit vectors I, J, K, are R0 = −0.2t2I +
0.5t2J+30tK m and ω = 0.02J−0.01K rad/s, respectively. The orientation of
a coordinate frame (oxyz) ﬁxed to the aircraft with unit vectors i, j, k is deﬁned
by Euler angles, θ (pitch angle), φ (roll angle), and ψ (yaw angle), as shown
in Fig. 4.4. A restless passenger is walking up and down the aisle such that
her position relative to the point, o, in the aircraft is r = cos( t
10)i −sin( t
10)j
m. Find the total velocity and acceleration of the passenger at time t = 100 s
if the initial orientation of the aircraft at t = 0 is given by θ = 0, φ = 0, and
ψ = 0.
From Section 2.5, we know the rotation from (SXYZ) to (oxyz) in terms
of the Euler angles of Fig. 4.4 is the following:

68
4 Translational Motion of Aerospace Vehicles
G
Y
X
G
R
S,o
y
z
zs
Z,zc
Z
Z
xc
xs,x
R
yc,ys
Fig. 4.4. The orientation of aircraft axes, (oxyz), relative to groundstation, (SXYZ).
⎧
⎨
⎩
i
j
k
⎫
⎬
⎭=
⎛
⎝
cos θ cos ψ
cos θ sin ψ
−sin θ
(−cos φ sin ψ + sin θ sin φ cos ψ)
(cos φ cos ψ + sin θ sin φ sin ψ)
cos θ sin φ
(sin φ sin ψ + sin θ cos φ cos ψ)
(−sin φ cos ψ + sin θ cos φ sin ψ) cos θ cos φ
⎞
⎠
×
⎧
⎨
⎩
I
J
K
⎫
⎬
⎭.
(4.28)
The evolution of Euler angles is related to the aircraft’s angular velocity as
follows (Fig. 4.4):
ω = ˙φi + ˙θj′ + ˙ψK
= ˙φ(cos θ cos ψI + cos θ sin ψJ −sin θK) + ˙θ(−sin ψI + cos ψJ) + ˙ψK
= ( ˙φ cos θ cos ψ −˙θ sin ψ)I + ( ˙φ cos θ sin ψ + ˙θ cos ψ)J + ( ˙ψ −˙φ sin θ)K
= 0.02J −0.01K.
(4.29)
Equation (4.29) results in the following diﬀerential equations for the Euler
angles:
˙φ cos θ cos ψ −˙θ sin ψ = 0,
˙φ cos θ sin ψ + ˙θ cos ψ = 0.02,
˙ψ −˙φ sin θ = −0.01.
(4.30)
In order to numerically integrate the nonlinear diﬀerential equations of
Eq. (4.30), we resort to a fourth-order, variable time step, Runge–Kutta algo-
rithm (see Appendix A), as programmed in the MATLAB routine ode45. For

4.2 Particle and Body
69
this purpose, an M-ﬁle named eulerevolve.m (Table 4.1) is written to calculate
the Euler angle derivatives, at each time step, using Eq. (4.30). Of course, we
must recall (Chapter 2) that the point of singularity of Euler angle representa-
tion (θ = 90◦) would render this procedure useless (in such a case, a diﬀerent
representation, e.g., quaternion, should be used). From the resulting plot of
the Euler angles (Fig. 4.5), it is evident that the singularity has not been en-
countered for the given angular velocity and initial condition. The following
MATLAB commands are used to solve this example:
>> [t,x]=ode45(@eulerevolve, [0 100], [0 0 0]’);% Integration of Eq. (4.30)
>> plot(t,x*180/pi),xlabel(’Time (s)’),ylabel(’Euler Angles (deg.)’) %(Fig 4.5)
>> size(x) % size of solution vector
ans =
61
3
>> phi=x(61,1),thet=x(61,2),psi=x(61,3) %Euler angles at t=100 s
phi =
-1.9971
thet =
0.7806
psi =
-2.6235
>> C=[cos(thet)*cos(psi) cos(thet)*sin(psi) -sin(thet);
-cos(thet)*sin(psi)+sin(thet)*sin(phi)*cos(psi) cos(phi)*cos(psi)+sin(phi)*sin(thet)
*sin(psi)...cos(thet)*sin(phi);
sin(phi)*sin(psi)+sin(thet)*cos(phi)*cos(psi)
-sin(phi)*cos(psi)+sin(thet)*cos(phi)
*sin(psi)...cos(thet)*cos(phi)] % Rotation matrix at t=100 s
C =
-0.6173
-0.3518
-0.7037
0.9085
0.6765
-0.6469
0.7037
-0.6469
-0.2938
>> R0=[-0.2*100^2;0.5*100^2;30*100];omega=[0;0.02;-0.01]; % Origin; angular velocity
>> v0=[-40;100;30];a0=[-0.4;1;0]; %Velocity and acceleration of point o
>> r=C’*[cos(10);-sin(10);0] % Relative position
r =
1.0122
0.6633
0.2385
>> rdot= C’*[-sin(10)/10;-cos(10)/10;0]%Relative velocity
rdot =
0.0426
0.0376
-0.0926
>> v=v0+rdot+cross(omega,r) %Total velocity of passenger
v =
-39.9460
100.0275
29.8872
>> rdotdot= C’*[-cos(10)/100;sin(10)/100;0]%Relative acceleration
rdotdot =
-0.0101
-0.0066
-0.0024
>> a=a0+rdotdot+2*cross(omega,rdot)+cross(omega,cross(omega,r))%Total acceleration
a =
-0.4136
0.9924
-0.0043
Hence, the total velocity and acceleration vectors of the passenger at t =
100 s in the chosen stationary frame are v = −39.946I+100.0275J+29.8872K
m/s and a = −0.4136I + 0.9924J −0.0043K m/s2.

70
4 Translational Motion of Aerospace Vehicles
Table 4.1. M-ﬁle eulerevolve.m for Calculating the Euler Angle Derivatives
function xdot=eulerevolve(t,x)
%x(1)=phi, x(2)=theta, x(3)=psi
%(c) 2006 Ashish Tewari
omega=[0,0.02,-0.01]’;% angular velocity in rad/s
xdot(2,1)=omega(2)/(tan(x(3))*sin(x(3))+cos(x(3)));
xdot(1,1)=(xdot(2,1)*sin(x(3))+omega(1))/(cos(x(3))*cos(x(2)));
xdot(3,1)=xdot(1,1)*sin(x(2))+omega(3);
Fig. 4.5. Evolution of the aircraft Euler angles with time.
4.3 Newton’s Laws of Motion
In 1687, Newton published the three laws of universal motion of particles in
his Philosophiae Naturalis Principia Mathematica. Stated brieﬂy, they are
1. A particle at rest remains at rest, and a particle in uniform rectilinear
(straight-line) motion remains in uniform rectilinear motion unless acted upon
by a force.
2. The force applied on a particle equals the mass of the particle multiplied
by its total acceleration.
3. Every applied force on a particle is opposed by an equal reaction from the
particle.

4.3 Newton’s Laws of Motion
71
The three laws of motion form the fundamental basis of classical mechan-
ics. Note that in the previous section we had deﬁned total velocity and accel-
eration as being measured in a stationary frame. However, since the laws of
motion do not distinguish between a stationary frame and a frame moving uni-
formly in a straight line, we will relax our requirement of total acceleration,
and redeﬁne the latter as being measured in an inertial frame; an inertial
frame is a frame that has zero acceleration relative to a stationary frame.
Hence, a stationary frame, and a frame moving uniformly in a straight line,
are both inertial. An application of Eq. (4.8) to an inertial frame reveals that
no modiﬁcation is required in the expression for total acceleration. However,
Eq. (4.4) implies that the total velocity (which is unimportant according to
Newton’s laws) should still be deﬁned as being measured relative to a station-
ary frame.
Since Newton’s laws are valid only in an inertial frame, we must make
a suitable choice for our frame of reference. The previous section illustrated
how the velocity and acceleration relative to a stationary frame can be ob-
tained, using the quantities measured relative to a moving frame, provided
the velocity and acceleration of the moving frame itself are known. Hence, we
are suitably equipped to apply Newton’s laws of motion by measuring accel-
eration in a moving, rather than an inertial, frame. This is quite useful, as
an inertial frame is non-existent in practice. However, we usually need not
reduce the acceleration to an absolutely inertial frame before applying New-
ton’s laws. Most often, an approximately inertial frame is good enough, since
the acceleration of the moving frame might be negligible in comparison with
the relative acceleration of the particle. Recall that in Examples 4.1 and 4.2,
we had approximated two diﬀerent frames as being stationary: a frame at the
earth’s center (but not rotating with the earth), and a frame attached to the
earth’s surface (and rotating with the earth). In each case, we had ignored the
acceleration of the “inertial” frame, with a diﬀering degree of approximation.
For instance, the frame chosen as being stationary in Example 4.2 ignored the
earth’s rotation on its axis, the orbital motion of the earth around the sun,
the orbital motion of the sun around the center of our galaxy, and so on, with
the higher-order eﬀects having a progressively diminishing order of magnitude
of acceleration. The largest ignored acceleration term of the stationary frame
(i.e., the earth’s rotation) in Example 4.2 would aﬀect the total acceleration
by less than 0.1%. In some applications, such as naval gunnery, or ﬂight of
ballistic missiles, the error caused by ignoring the earth’s rotation could be
signiﬁcant in trajectory calculations. Hence, one must carefully examine the
magnitude of the largest ignored acceleration terms in choosing an adequate
inertial frame.
A mathematical statement of Newton’s second law applied to a particle of
constant mass, m, is as follows:
f = ma = mdv
dt = d(mv)
dt
= md2R
dt2 ,
(4.31)

72
4 Translational Motion of Aerospace Vehicles
where a is the total acceleration of the particle, and f is the total force applied
on the particle. Recall that the total acceleration is the acceleration of the par-
ticle relative to an inertial frame. If the applied force is zero, then Eq. (4.31)
implies a = 0, which is the mathematical statement of Newton’s ﬁrst law,
and represents the principle of conservation of linear momentum, mv. If the
applied force is known as a function of time, or as a functional of the posi-
tion and velocity vectors, then Eq. (4.31) can be successively integrated to
ﬁnd the velocity v = dR
dt and the position R of the particle as functions of
time, subject to known initial conditions. The force acting on a ﬂight vehicle
can be represented as a vector sum of gravitational, aerodynamic, and propul-
sive forces, each of which can be prescribed in terms of position and velocity
vectors.
Note that since a particle has three degrees of freedom, Eq. (4.31) rep-
resents three second-order, scalar diﬀerential equations, called translational
equations of motion. Generally, the motion of a particle is governed by
Eq. (4.31) and a set of additional relationships called constraints. The con-
straints arise due to kinematic restrictions on the position and velocity vectors.
For example, a constraint on the position of a ﬂight vehicle is that its altitude
(height above the earth’s surface) must be greater than, or equal to, zero. The
constraints imply that the coordinates of a particle are no longer independent
variables, and hence the degrees of freedom are reduced from three. When the
constraints are expressed as equations relating the particle’s coordinates (and
time) in the form
F[R(X, Y, Z), t] = 0,
(4.32)
where F[.] denotes a vector function, they are called holonomic constraints.
An example of a holonomic constraint is the equation of a curve along which
a particle is constrained to move (such as a simple pendulum constrained to
move in a planar arc). However, many constraints are either inequalities, or
equations that cannot be expressed as Eq. (4.32), and are said to be nonholo-
nomic. We have to solve Eq. (4.31) subject to the constraints, in order to ﬁnd
the trajectory of a ﬂight vehicle. An analytical—or numerical—integration of
Eq. (4.31) subject to constraints involves solving nonlinear, ordinary, coupled,
scalar, diﬀerential equations, subject to constraint equations, or inequalities.
Hence, Eq. (4.31), along with the constraints, governs the motion of a parti-
cle. However, it is seldom that the solution to the equations can be obtained
analytically in a closed form.
When Newton’s laws are applied to a body, we can obtain equations for
both the translation and rotation of the body. We begin by considering a body
of constant mass m acted upon by force f as a collection of a large number of
particles of elemental mass ∂m, such that m =  ∂m. Applying Newton’s law
of motion, Eq. (4.31), to individual particles, and summing over all particles,
we may write

∂f =

∂ma = d
dt

v∂m,
(4.33)

4.3 Newton’s Laws of Motion
73
S
X
Y
Z
y
z
o
p
wf
m
w
r
R
x
Fig. 4.6. A body of particles.
since the elemental mass is invariant. Due to Newton’s third law, the internal
forces acting between any two particles are equal and opposite and thus add
to zero; hence, we can write f =  ∂f, the net external force. Now, let us
choose a point, o, on the body at which a frame (oxyz) is ﬁxed to the body
(Fig. 4.6). It follows from Eq. (4.2) that the inertial velocity of an elemental
particle is given by
v = v0 + dr
dt ,
(4.34)
which, when substituted into Eq. (4.33), yields
f = d(mv0)
dt
+ d2
dt2

r∂m.
(4.35)
There is a special point associated with every body, called the center of mass,
such that the mass moment,  r∂m, vanishes about that point. It is not
necessary that the center of mass be one of the particles constituting the
body. If we choose the point o to be the center of mass, then we can write
f = d(mv0)
dt
= mdv0
dt ,
(4.36)
which governs the translation of the body. Equation (4.36) states that the rate
of change of linear momentum of the body, deﬁned by mv0, is proportional
to the net external force. If there is no net force acting on the body, its linear
momentum is conserved. It is clear from a comparison of Eqs. (4.31) and (4.36)
that for the limited purpose of studying the translational motion of a body, we
can regard the body as if all its mass were concentrated at the center of mass,
and the net external force were applied at the center of mass. Hence, we regard

74
4 Translational Motion of Aerospace Vehicles
the translation of a body as the motion of its center of mass, which forms the
basis for the idealization of the body as a particle. Note that we have not
made the assumption that the body is rigid. Hence, Eq. (4.36) is applicable
to a loose collection of particles, whose relative distance is not ﬁxed, such as a
ﬂight vehicle with a ﬂexible structure, a rocket ejecting propellant gases, and
the bodies in the solar system attracted by mutual gravitation.
4.3.1 Variable Mass Bodies
A ﬂight vehicle’s mass changes with time due to the burning and ejection of
the propellant mass. For aerospace vehicles powered by rocket engines (such
as missiles and launch vehicles), the instantaneous rate of change of mass
is large and generates the reactive thrust force. For all other vehicles, the
instantaneous rate of change of mass is relatively small, and the vehicle’s
mass can be assumed constant over short portions of ﬂight. Other examples
of variable mass systems includes the expenditure of munitions from a vehicle,
and a docking of two spacecraft. When the instantaneous rate of change of
mass is not negligible, it is rather diﬃcult to apply Eq. (4.36), where m denotes
the total mass of the system of particles constituting the body, including the
mass of ejected particles. In order to write the equation for the translational
motion of a vehicle with variable mass, consider Fig. 4.7, which depicts a
vehicle of mass m −Δm, where Δm is the mass of ejected particles. Let the
point o′ denote the center of mass of the vehicle, while o is the center of mass
of the entire body of particles. Let v0′ denote the instantaneous velocity of
the vehicle’s center of mass, o′. The center of mass of the ejected body has a
relative velocity, vR, with respect to o′. Of course, the net external force, f,
acting at o, does not include the internal reactive force on both bodies caused
by the ejection of mass.
Since there is no change in the net linear momentum of the system due to
mass ejection (or accretion), we can write
mv0 = (m −Δm)v0′ + Δm(v0′ + vR),
(4.37)
which yields
v0 = v0′ + Δm
m vR.
(4.38)
Substituting Eq. (4.38) into Eq. (4.36), we get
f = mdv0
dt = mdv0′
dt
+ ΔmdvR
dt
+ vR
dΔm
dt ,
(4.39)
or, substituting Eq. (4.37) into Eq. (4.39),
f = (m −Δm)dv0′
dt
+ Δmd(v0′ + vR)
dt
+ vR
dΔm
dt .
(4.40)

4.3 Newton’s Laws of Motion
75
Fig. 4.7. A body ejecting (or accruing) mass, Δm.
Equation (4.40) describes the motion of the primary body of mass m −Δm
in terms of the acceleration of its center of mass, dv0′
dt . The last two terms on
the right-hand side of (4.40) are the opposite of the reactive thrust caused on
the primary body due to mass ejection, which is expressed as follows:
fT = −Δmd(v0′ + vR)
dt
−vR
dΔm
dt
.
(4.41)
Thus, Eq. (4.40) is rewritten as
f + fT = (m −Δm)dv0′
dt ,
(4.42)
Note that f + fT is the net external force acting on the primary body of
variable mass m −Δm. Also, note the similarity between Eq. (4.42) and the
particle idealization of Eq. (4.31), where the mass is constant. If we let the
mass m in Eq. (4.31) vary with time, we can apply it to represent the motion
of a vehicle with a changing mass, with the understanding that f includes the
reactive force fT.
Example 4.3. Let us derive the governing equations of translational motion
for the rocket of Example 4.1. Continuing with the particle idealization, let
us write the net external force on the rocket as consisting of gravity, fg, the
reactive thrust, fT, and the aerodynamic force, fa:
f = fg + fT + fa.
(4.43)
The gravitational force—assuming a uniform, spherical earth—is expressed
according to Newton’s law of gravitation (Chapter 3) as follows:

76
4 Translational Motion of Aerospace Vehicles
fg = −GMem R
|R|3 = −GMem R
R3 ,
(4.44)
where G is the universal gravitational constant and Me is the earth’s mass.
The thrust force has a time-varying magnitude fT and makes an angle, ϵ, with
the velocity vector, v, and can be expressed as
fT = fT cos ϵ v
V + fT sin ϵn,
(4.45)
where n is a unit vector normal to v and lying in the plane formed by fT and
v. The aerodynamic force is assumed to be only the drag (see Chapter 10)
given by
fa = −1
2ρV SCDv.
(4.46)
Here, ρ is the atmospheric density (a function of R, Chapter 9), S is a reference
area of the rocket, and CD is the nondimensional drag coeﬃcient (a function of
both R and v). The mass, m, is an explicit function of time due to propellant
consumption. Substituting Eqs. (4.43)–(4.46) into Eq. (4.31), we can write
−GMem R
R3 + fT cos ϵ v
V + fT sin ϵn −1
2ρV SCDv = ma.
(4.47)
A constraint on the rocket’s ﬂight is that its altitude must not be negative,
which in terms of the coordinates of Example (4.1), can be written as
z ≥0 (R ≥R0).
(4.48)
The rocket’s instantaneous position, R, is to be solved for by integrating
Eq. (4.47), subject to the nonholonomic constraint of inequality Eq. (4.48),
given the initial condition at launch (when R = R0) and the input variables
ϵ, fT , and n. The velocity and acceleration vectors required in Eq. (4.47) have
already been derived in Eqs. (4.20) and (4.26), respectively, at the time of
launch. They need to be evolved in time using Eqs. (4.4) and (4.8), respec-
tively, with r = R −R0 at each time step. The input variables ϵ, fT , and
n have to be speciﬁed at each time instant in obtaining a solution. Due to
the nonlinear nature of Eq. (4.47), where the forcing terms are complicated
functions of position and velocity, an analytical solution cannot be obtained.
This is usually true for any atmospheric ﬂight problem. Instead, a numerical
scheme must be employed, such as those implemented in Chapter 12.
4.3.2 Rotation and Translation of a Body
By taking the cross product of both sides of Eq. (4.31) applied to a constituent
particle of mass ∂m (Fig. 4.6), with r, we write
r × ∂f = r × ∂ma = r × ∂mdv
dt .
(4.49)

4.3 Newton’s Laws of Motion
77
Summing over all the particles, and noting that all internal torques cancel
each other by virtue of Newton’s third law, the equation of rotational motion
of a body is written as follows:
M =
 
r × ∂mdv
dt

,
(4.50)
where M
.=  (r × ∂f) is the net external torque about o. Substituting
Eq. (4.34) into Eq. (4.50), we can write
M = d
dt

(r × ∂mv) −
 dr
dt ∂m

× v0.
(4.51)
If the point o is ﬁxed in space, v0 = 0 and the second term on the right-hand
side of Eq. (4.51) vanishes. Alternatively, if the point o is chosen to be the
center of mass, then it follows from the deﬁnition of the center of mass that
 dr
dt ∂m = d
dt

r∂m = 0 ,
(4.52)
and the second term on the right-hand side of Eq. (4.51) again vanishes.
Therefore, if the point o is either a stationary point, or the center of mass of
the body, we have
M = d
dt

(r × ∂mv) .
(4.53)
Equation (4.53) is the equation for the rotational motion of the body about
either a ﬁxed point or its center of mass, which we will later discuss in detail.
Since ﬁxed points in space are diﬃcult to ﬁnd, it is a common practice to
choose o as the center of mass. Considering Eqs. (4.36) and (4.53), we note
that the general motion of a body can be described by the translation of the
center of mass and the rotation of the body about its center of mass. In order
to solve Eq. (4.53), one must know r(t) for all the N particles constituting
the body, which requires that additional (3N −6) scalar quantities, describ-
ing the relative motion of the particles with respect to the center of mass, be
obtained by integrating additional diﬀerential equations in time. Such equa-
tions of relative motion are obtained by taking into account the internal forces
acting on the individual particles. However, if the body is rigid, the relative
distances of all particles with respect to the center of mass are ﬁxed, and
Eqs. (4.36) and (4.53) are suﬃcient for describing its general motion. The
translational and rotational motions represented by Eqs. (4.36) and (4.53),
respectively, can be studied separately, provided the net force and moment
vectors do not depend upon the rotational and translational motions, respec-
tively. For an atmospheric ﬂight vehicle, the aerodynamic force depends upon
the vehicle’s attitude (rotational variables), and aerodynamic and thrust mo-
ments depend upon the speed and altitude (translational variables); thus, the
two motions are inherently coupled. However, when the time scale of rotation

78
4 Translational Motion of Aerospace Vehicles
is much smaller than that of translation, then, the two can eﬀectively be de-
coupled. In such a case, the instantaneous rotational parameters are treated
as inputs to the translatory motion, and the position and velocity are treated
as almost constant parameters for the rotational motion. The decoupling of
rotational and translational motions may not be a good approximation for a
high-performance aircraft, or a missile, which would require a simultaneous
solution of the two sets of equations [Eqs. (4.36) and (4.53)].
Returning to the translation of a ﬂight vehicle, the aerodynamic and thrust
forces are usually expressed in a frame ﬁxed to the body (called body-ﬁxed
frame), (oxyz), at the center of mass, o. Therefore, it becomes imperative to
write Eq. (4.36) in a moving, body-ﬁxed frame, employing the convention of
Subsection 4.1.1 as follows:
dv0
dt = ∂v0
∂t + ω × v0,
(4.54)
where ω is the angular velocity of the body about its center of mass. Substi-
tuting Eq. (4.54) into Eq. (4.36), we get
f = m∂v0
∂t + m(ω × v0).
(4.55)
The coupling of rotational and translational motions is evident in Eq. (4.55),
where ω is obtained from the solution to the rotational equation, Eq. (4.53).
Example 4.4. Reconsider Example 4.2, where the total velocity and accel-
eration of a passenger walking inside a maneuvering aircraft were deter-
mined relative to a ground station, (SXYZ), at t = 100 s to be v =
−39.946I+100.0275J+29.8872K m/s and a = −0.4136I+0.9924J−0.0043K
m/s2. Let us apply Newton’s laws of motion to ﬁnd the instantaneous net
external force experienced by the passenger and the aircraft, relative to a
body-ﬁxed frame, (oxyz), if o is the aircraft’s center of mass. We can take the
masses of the passenger and the aircraft as 75 kg and 10,000kg, respectively.
Since the rotation matrix, C, from (SXYZ) to (oxyz) in terms of the in-
stantaneous Euler angles has already been computed in Example 4.2 using
Eq. (4.2), we can directly calculate the inertial acceleration of the passenger
in the body-ﬁxed coordinates as follows:
>> fp=75*C*a
%force in body-fixed coordinates on the passenger (N)
fp =
-6.8131
22.3856
-69.8815
Hence, the total force the passenger experiences is fp = −6.8131i +
22.3856j −69.8815k N, or fp = 75(−0.4136I + 0.9924J −0.0043K) N. Now,
let us calculate the net force on the aircraft as follows:
fa = mdv0
dt = 104C d2
dt2 (−0.2t2I + 0.5t2J + 30tK) |t=100,
(4.56)
which is computed using MATLAB as follows:

4.3 Newton’s Laws of Motion
79
>> fa=10^4*C*a0
fa =
1.0e+003 *
-1.0494
3.1316
-9.2838
Hence, the net force the aircraft experiences is fa = (−1.0494i−3.1316j−
9.2838k) × 103 N. However, since the aircraft is rotating with an angular
velocity ω = 0.02J −0.01K rad/s, it may also experience a net torque by
virtue of Eq. (4.53), which we will further explore in Chapter 13.
In atmospheric ﬂight dynamics it is often very useful to employ a particular
orientation of the moving frame located at the vehicle’s center of mass, such
that one of the axes is along the velocity vector relative to the atmosphere.
Although the origin of the axes is instantaneously made to coincide with the
vehicle’s center of mass, its velocity (being that of the wind) is diﬀerent from
the velocity of the center of mass. Such a moving frame is referred to as
the wind axes. The aerodynamic (Chapter 10) and air-breathing propulsion
(Chapter 11) forces are generally resolved along the wind axes, so that the
thrust is along, the drag is opposite to, and the lift is perpendicular to the
aircraft’s velocity relative to the atmosphere.
Example 4.5. Consider an aircraft of mass, m = 5000 kg, ﬂying at a con-
stant altitude with acceleration due to gravity, g = 9.8 m/s2, airspeed,
v∞= 100 m/s, bank angle, μ, lift, L, drag, D, side force, fY , and air-breathing
thrust, fT . If a steady wind of 10 m/s is blowing from the northwest, what
should be the constraints for the lift and the bank angle, such that the aircraft
makes a steady, coordinated, horizontal turn (Chapter 12) of rate 10 deg/s in
the clockwise direction with reference to a groundstation?
Let us choose a stationary frame attached to the groundstation, (SXYZ),
with unit vectors I, J, K, and wind axes, (oxyz), with unit vectors i, j, k whose
origin o coincides with the aircraft’s center of mass and has velocity v0 equal
to the wind velocity, such that ox is along the velocity vector of the aircraft
relative to the atmosphere, v∞(Fig. 4.8). The vector v is the aircraft’s total
velocity. As the aircraft turns relative to the groundstation, both v∞and
v rotate with an angular velocity ω = −ωK = −π
18K rad/s, but the wind
velocity remains constant at v0 = v0(I+J) = 10
√
2(I+J) m/s. The magnitudes
v and v∞are called the groundspeed and airspeed, respectively. The bank
angle, μ, is positive when oy is below the horizon (a plane parallel to SXY ).
For a clockwise horizontal turn, the aircraft must bank to the right as shown
in Fig. 4.8, so that a component of the lift points toward SZ. The net force
resolved in the wind axes is f = (fT −D)i+(fY +mg sin μ)j+(mg cos μ−L)k.
For a steady, coordinated turn, fT = D, and fY = 0 (see Chapter 12); hence
Eq. (4.36) yields
(mg cos φ −L)k + mg sin μj = mdv
dt = m(ω × v) .
(4.57)

80
4 Translational Motion of Aerospace Vehicles
S
Y (east) 
Z (up) 
X (south)
y
x
z
o
v0
vf
v
Z
μ
Horizon
Fig. 4.8. The wind axes, (oxyz), relative to a groundstation, (SXYZ).
Note that v = v0 + v∞= v0(I + J) + v∞i m/s, by virtue of Eq. (4.4). In Ex-
ample 4.2 we employed the rotation matrix, C, for coordinate transformation
from (SXYZ) to (oxyz) in terms of the instantaneous Euler angles [Eq. (4.2)].
Comparing Figs. 4.4 and 4.8, we note that the pitch angle is zero, the roll
angle is given by φ = π + μ, and the yaw angle, ψ, varies linearly with time
according to ψ = −ωt = −π
18t rad if we begin measuring time when ψ = 0.
Substituting the Euler angles into (Eq. (4.2), we can write
⎧
⎨
⎩
i
j
k
⎫
⎬
⎭=
⎛
⎝
cos ψ
sin ψ
0
cos μ sin ψ
−cosμ cos ψ −sin μ
−sin μ sin ψ
sin μ cos ψ
−cosμ
⎞
⎠
⎧
⎨
⎩
I
J
K
⎫
⎬
⎭.
(4.58)
We note from Eq. (4.58) that K × i = cos ψJ −sin ψI, and that while
the airspeed, v∞, is a constant, the groundspeed is a variable given by
v =

2v2
0 + v2∞+ 2v0v∞(cos ψ + sin ψ). Let us substitute the expression
v = v0(I + J) + v∞(cos ψI + sin ψJ) m/s into Eq. (4.57) to obtain
(mg cos μ −L)(−sin μ sin ψI + sin μ cos ψJ −cos μK)
+ mg sin μ(cos μ sin ψI −cos μ cosψJ −sin μK)
= −mω[v0(J −I) + v∞(cos ψJ −sin ψI)] .
(4.59)
Equating the vector components on both sides of Eq. (4.59) and simplifying,
we can write
L cosμ = mg,
(L sin μ −mωv∞) sin ψ = mωv0,
(L sin μ −mωv∞) cos ψ = mωv0 .
(4.60)

4.4 Energy and Angular Momentum
81
We can combine the last two of Eqs. (4.60) into a single equation; thus, the
restriction on the aircraft motion is given by
L cosμ = mg,
L sin μ = mω[v∞+ v0(cos ψ + sin ψ)] .
(4.61)
Equations (4.61) represent the conditions to be satisﬁed by the lift, L, and
the bankangle, μ, for executing a horizontal, coordinated, ground-referenced
circular turn in the presence of a steady wind from the northwest. These con-
ditions result from the kinematic constraint of having to move in a horizontal
circle. They imply that the required lift must be greater than the weight, mg,
and the horizontal component of lift (caused by banking) must be suﬃciently
large to create the desired turnrate, while overcoming the eﬀect of the wind.
For a constant airspeed, v∞, the magnitude of lift, L, is controlled by adjust-
ing the attitude of the aircraft relative to the wind axes (which is also how
the sideforce, fY , is maintained at zero), while its direction is controlled by
changing μ. Hence, the lift vector (determined by L and μ) is a force arising
out of the constrained motion and is called the force of constraint, rather anal-
ogous to the tension in the simple pendulum, which is constrained to move
in an arc. By modulating the lift vector according to Eq. (4.61), the pilot (or
an automatic ﬂight control system) can ﬂy a horizontal turn about a ﬁxed
point. Let us numerically determine the lift vector of the present example,
using MATLAB as follows:
>> omeg=pi/18;v0=10/sqrt(2);vinf=100;m=5000;g=9.8;% constant parameters
>> t=0:2*pi/omeg;psi=-omeg*t; % time points and yaw angle profile for one full turn
>> mu=atan(omeg*(vinf+v0*(cos(psi)+sin(psi)))/g); % required bank angle profile
>> L=m*g./cos(mu); % lift profile
>> subplot(211),plot(t,180*mu/pi),hold on,subplot(212),plot(t,L)% plots
The resulting plots of L and μ for a complete turn are shown in Fig. 4.9.
Note that the lift magnitudes are nearly double the weight for the given turn
rate and wind velocity. Also, the maximum bank angle and lift are required
when the aircraft is banking into the wind, which happens in this case for
ψ = 45◦(i.e., southwest orientation of ox) at t = 31.5 s.
4.4 Energy and Angular Momentum
We have seen that the equations of motion for the translation of a particle
result in the conservation of linear momentum when there is no net force
acting on the particle. In such a case, Newton’s laws imply that the particle
continues to be in a state of uniform rectilinear motion. The same can be said
about a body, by considering the motion of its center of mass. Even when the
net force is nonzero, the magnitude and direction of the force can be such that
certain quantities, called the energy and angular momentum of the particle,
are conserved. These quantities are quite useful in describing the motion of a
particle or a system of particles (body).
Let us deﬁne the work done, δW, by a force, f, acting on the particle as
the dot product between the force and the resulting small displacement of the
particle, δR, given by

82
4 Translational Motion of Aerospace Vehicles
0
5
10
15
20
25
30
35
40
58
59
60
61
62
63
μ (deg.)
0
5
10
15
20
25
30
35
40
9
10
11
L (×104 N)
Time (s)
Fig. 4.9. The lift vector modulation for a horizontal, circular turn in the presence
of wind.
δW = f · δR.
(4.62)
In this deﬁnition, the assumption of small displacement is employed to ensure
that the force, f, remains unchanged while the particle is displaced. This
is necessary, because f generally depends upon the instantaneous position R.
However, we can calculate the net work a force does when the particle traverses
a known path joining two arbitrary positions, by employing a summation of
the work done over a number of small path segments, during each of which
Eq. (4.62) is valid. Hence, the total work done W12 by f when the particle is
displaced from R1 to R2 is given by
W12 =
 R2
R1
f · dR ,
(4.63)
where the path between R1 and R2 is speciﬁed by a curve, R(t). Note that
W12 depends upon the initial and ﬁnal particle positions, as well as the path
R(t) joining the two positions. Since there can be several possible paths joining
any two points, the work done along each can be diﬀerent. The restrictions on
the possible paths are that they must be the solution to Eq. (4.31) and obey
the kinematic constraints on the motion of the particle.

4.4 Energy and Angular Momentum
83
There are certain forces whose work done is path-independent, i.e., W12
depends only upon the initial and ﬁnal particle positions, but not on the path
R(t) joining the two positions. Such a force is said to be conservative, because
the net work done by returning the particle to its original position, R1, by
a diﬀerent path would always be zero (i.e., W12 = −W21, irrespective of the
path). Since a closed curve is formed if we return the particle to the original
position by a diﬀerent path, we write the following for a conservative force:
!
f · dR = 0,
(4.64)
where " denotes the integral carried out along a closed curve. Very few phys-
ical forces are conservative. From our everyday experience, we can say that
friction and other dissipative forces are not conservative. However, the force
of gravity is conservative. There must be a speciﬁc functional form of the
conservative force, f(R), that meets the requirement of Eq. (4.64). It can be
shown by vector calculus [4] that the necessary and suﬃcient condition for
Eq. (4.64) to be satisﬁed is that f should be determined by the gradient of a
scalar function of position, Φ(R), as follows:
f(R) = m∇Φ(R)T .= m
 ∂Φ
∂R
T
.
(4.65)
The scalar function, Φ(R), whose gradient gives the acceleration caused by
the conservative force, is called a potential function. Note that the gradient
∇Φ(R) is the derivative of a scalar with respect to a vector and is represented
by a row vector, whose elements are partial derivatives of Φ with respect to
corresponding elements of RT . An important caveat for a force to be conser-
vative is that it should not explicitly depend upon time, i.e., a force f(R, t)
satisfying Eq. (4.65) is not conservative.
Substituting Eq. (4.31) into Eq. (4.63), and noting that dR = vdt, we
have
W12 =
 t2
t1
mdv
dt · vdt = 1
2m
 t2
t1
d
dtv · vdt ,
(4.66)
or,
W12 = 1
2m(v2
2 −v2
1) .= T2 −T1 ,
(4.67)
where v2 = v·v, and T .= 1
2mv2 is deﬁned as the kinetic energy of the particle.
Hence, the work done by a force upon a particle is equal to the change in its
kinetic energy. The kinetic energy, being proportional to the square of the
speed, is a measure of the energy of motion.
If the force applied to a particle is conservative, we can substitute Eq. (4.65)
into Eq. (4.63) to write
W12 = m
 R2
R1
 ∂Φ
∂R
T
· dR = m[Φ(R2) −Φ(R1)] ,
(4.68)

84
4 Translational Motion of Aerospace Vehicles
or,
W12 = V2 −V1 ,
(4.69)
where −V .= −mΦ(R) is deﬁned as the potential energy of the particle. Com-
paring Eq. (4.69) with Eq. (4.67), we can eliminate the work done by a con-
servative force to write T2 −T1 = V2 −V1, or
E .= T −V = constant.
(4.70)
Equation (4.70) states the important principle that the sum of kinetic and
potential energies (called total energy, E) of a particle acted upon by a con-
servative force is conserved. The potential energy is thus seen to be stored,
which can be exchanged for kinetic energy, and vice versa. This principle can
be easily extended to a body of particles, by focusing on the translation of
the center of mass. For a spacecraft acted upon only by gravity, which is a
conservative force, the law of energy conservation is very useful in determining
orbits and in designing orbital maneuvers. An aircraft ﬂying with the thrust
equal to the drag has a zero net nonconservative force along the velocity vec-
tor, and the resulting trajectory can be analyzed by applying the principle of
energy conservation.
For a general, nonconservative force, f, the total energy, E, is not con-
served, and we can write
dW
dt
.= dT
dt = mv dv
dt ,
(4.71)
which implies that the rate of work done (called power) by f is equal to the
rate of change of kinetic energy.
We can obtain the net potential and kinetic energies of a system of particles
by summing up Eqs. (4.69) and (4.67), respectively, for all the particles. Let
us consider a system of N particles constituting a body. The total kinetic
energy of the system is
T = 1
2
N

i=1
miv2
i ,
(4.72)
where v2
i = vi · vi. We can express the velocity of particle i as vi = v0 + ui,
where v0 is the velocity of the center of mass, and ui is the velocity of the
particle relative to the center of mass. Therefore, the kinetic energy of the
system becomes
T = 1
2
N

i=1
mi(v0 + ui) · (v0 + ui)
= 1
2
N

i=1
miv2
0 + 1
2
N

i=1
miu2
i + v0 · d
dt
# N

i=1
miri
$
= 1
2mv2
0 + 1
2
N

i=1
miu2
i ,
(4.73)

4.4 Energy and Angular Momentum
85
where ri is the particle’s location relative to the center of mass. The last step
of Eq. (4.73) follows from the deﬁnition of the center of mass. Hence, the
total kinetic energy of a system of particles is sum of the kinetic energy of
the center of mass and the kinetic energy of the motion of particles about the
center of mass. [If the body is rigid, there is no translation of the particles
relative to the center of mass, and the last term in Eq. (4.73) is due to the
rotation of the body about the center of mass.] The work the net external
force f does in moving the body from an initial conﬁguration of particles to a
ﬁnal conﬁguration is equal to the change in the total kinetic energy, given by
Eq. (4.67).
If the forces acting on all the particles are conservative, then the net work
done is equal to the change in potential energy of the system, and the total en-
ergy, T −V , is conserved [Eq. (4.69)]. The potential energy of the conservative
system is then written as follows:
−V = −
N

i=1
V (e)
i
+ 1
2
N

i=1
N

j̸=i
Vij ,
(4.74)
where −V (e)
i
is the potential energy associated with the external force, f (e)
i
,
and −Vij denotes the potential energy due to the internal force fij between
particles i and j. In the remainder of the chapter, we will consider the modeling
of interesting conservative systems.
A system of particles (body) may be simultaneously acted upon by both
conservative and nonconservative forces, e.g., the rocket of Example 4.3. In
such a case, the total energy is not conserved, but we can still talk of a po-
tential energy by limiting the summations in Eq. (4.74) to those particles and
forces that constitute a conservative subsystem. The utility of the potential
energy in a partially conservative (thus complex) system lies in deriving the
equations of motion by an approach based upon variational principles (also
known as the Lagrangian method) rather than Newton’s laws of motion. Such
an approach becomes valuable when the equations of relative motion among
the particles of a nonrigid body are to be derived. We shall discuss the La-
grangian method for analyzing ﬂexible aerospace structures in Chapter 15.
Let us now deﬁne another quantity of particle motion, namely angular
momentum, H, as the moment of linear momentum, H .= r × mv, where r is
the relative position of the particle, p, with respect to a point o, which need
not be stationary (Fig. 4.1). From Eq. (4.49)—which can be rewritten for the
particle replacing ∂m by m and ∂f by f—as
r × f = dH
dt −dr
dt × (mv) ,
(4.75)
it is clear that the angular momentum is related to the rotational motion of
the particle about the point o, because the left-hand side of Eq. (4.75) is the
torque about o, denoted by M .= r × f. A zero angular momentum implies

86
4 Translational Motion of Aerospace Vehicles
parallel position and velocity vectors, which is the case of rectilinear (straight-
line) motion. If o is stationary, then v = dr
dt . Consequently, the second term
on the right-hand side of Eq. (4.75) vanishes; thus, it follows that
M = dH
dt .
(4.76)
Hence, if the applied torque about a ﬁxed point is zero, then dH
dt = 0, which
implies that H is a constant vector. This is the principle of the conservation
of angular momentum for a particle.
Example 4.6. Let us calculate the angular momentum of the aircraft of Ex-
ample 4.5, about the vertical axis, SZ (Fig. 4.8), as follows:
H = R × (mv)
= R(cos ψI + sin ψJ) × [v0(I + J) + v∞i]
= R[v0(cos ψ −sin ψ)K + v∞(sin ψ cos ψ −sin ψ cos ψ)K]
= Rv0(cos ψ −sin ψ)K ,
(4.77)
where R is the constant radius of turn. Taking the time derivative of H, we
ﬁnd that
dH
dt = −Rv0(sin ψ + cos ψ) ˙ψK = Rv0ω(sin ψ + cos ψ)K.
(4.78)
Hence, dH
dt ̸= 0, due to the steady wind of speed v0. Had there been no wind,
the angular momentum would have been conserved. We will get the same
conditions on lift and bank angle as obtained in Eq. (4.61) for executing a
steady, horizontal turn in the blowing wind by applying Eq. (4.76) to the
present example, with M = R × [(mg cos μ −L)k + mg sin μj]. This is left as
an exercise at the end of the chapter.
Angular momentum can also be deﬁned for a body by summing the an-
gular momenta of all the constituent particles, as H .=  (r × ∂mv), which,
when substituted into Eq. (4.53), leads to Eq. (4.76) for a body. Recall that
in Eq. (4.53), o is the center of mass of the body. Therefore, if the net torque
about the center of mass is zero, the angular momentum of the body about
its center of mass is conserved. We again note the similarity between a par-
ticle and the center of mass of a body, even where the rotational motion is
concerned. We have seen above that the rotational motion of a body about
its center of mass is similar to that of a particle about a ﬁxed point. There
are several important instances—often in spacecraft dynamics, where the net
force passes through the center of mass—when we can apply the principle of
angular momentum conservation for a body. We reiterate that in the above
analysis we have not assumed the body to be rigid. If a body is nonrigid, we
must take into account the relative motion among the particles constituting
the body.

4.4 Energy and Angular Momentum
87
4.4.1 The N -Body Problem
The problem of determining the motion of N bodies under the inﬂuence of
mutual gravitational attraction is one of the fundamental problems of astron-
omy. More generally, the N -body problem is applicable to any system where
the mutual forces between any two bodies act along the line joining their
centroids (such as electrostatic, gravitational, and impact forces). In all such
cases, the net external force and torque about any point are both equal to
zero by virtue of Newton’s third law, and consequently, the linear and angu-
lar momenta of the system are conserved. Our solar system is the example
of the N -body problem, where the sun, planets, comets, and asteroids are
all gravitationally bound. In ﬂight dynamics, an N -body problem may result
from studying the motion of a spacecraft under the inﬂuence of one or more
celestial bodies (such as the earth, the moon, and the sun). Since the distances
between the bodies are generally large in comparison with their dimensions,
it is a standard assumption to treat the N -body problem as a collection of N
particles, mutually attracted by the Newton’s inverse-square law of gravita-
tion (Chapter 3). As the net external force on the system of total mass, m,
is zero, we can write the equation of motion of the system’s center of mass
according to Eq. (4.36) as follows:
mdv0
dt = md2R0
dt2
= 0 ,
(4.79)
which can be successively integrated in time to yield
R0 = v0t + c ,
(4.80)
where v0 and c are constant vectors, denoting the velocity and initial position
of the center of mass. These two vectors lead to six known scalar quantities,
called the integrals of motion. However, the N -body problem has a total of 3N
degrees of freedom, which require the solution of a system of 3N second-order,
ordinary diﬀerential equations for the positions of all particles, resulting in 6N
motion variables. If we conveniently choose the origin of the inertial frame to
be at the center of mass, then v0 = c = 0, and Ri denotes the position of the
particle i.
Let us see whether we can determine the remaining (6N −6) variables
in order to solve the N -body problem. Since the net external torque on the
system is zero, we can write the rotational equations of motion, Eq. (4.53), in
the following form:
d
dt
N

i=1
(Ri × mivi) = 0,
(4.81)
where mi, vi represent the mass and velocity of particle i. It is clear that a
constant angular momentum vector, H, whose time derivative is equal to the
left-hand side of Eq. (4.81), can be speciﬁed for the system. Hence, we can
express the three new integrals of motion (components of H) as

88
4 Translational Motion of Aerospace Vehicles
H .=
N

i=1
(Ri × mivi) =
N

i=1

Ri × mi
dRi
dt

.
(4.82)
The conservation of total angular momentum is responsible for the near planar
shape of the solar system.
In order to derive another integral of motion, the equations of motion for
the bodies—idealized as the translation of their respective centers of mass—
can be written as follows:
mi
d2Ri
dt2
= fi
(i = 1, 2, ..., N),
(4.83)
where fi is the net force acting on the particle i, and can be expressed by
Newton’s law of gravitation as follows:
fi = G
N

j̸=i
mimj
R3
ij
(Rj −Ri) ,
(4.84)
where G is the universal gravitational constant, and Rij .=| Rj −Ri |. Sub-
stituting Eq. (4.84) into Eq. (4.83), we get
d2Ri
dt2
= G
N

j̸=i
mj
R3
ij
(Rj −Ri) ;
(i = 1, 2, ..., N).
(4.85)
Since the gravitational force fi is conservative, we can deﬁne a gravitational
potential, Φi such that its gradient (Chapter 3) with respect to Ri determines
the force as follows:
fiT = mi
∂Φi
∂Ri
.
(4.86)
When we compare Eq. (4.86) with Eq. (4.84), it is clear that
Φi .= G
N

j̸=i
mj
Rij
.
(4.87)
The total potential energy of the system is thus given by −V , where, according
to Eq. (4.74),
V .= 1
2
N

i=1
miΦi .
(4.88)
Note that the potential energy represents the work done in bringing the N
bodies from inﬁnite mutual separation to their present positions. It is also
clear that
fiT = ∂V
∂Ri
.
(4.89)

4.5 The Two-Body Problem
89
From Eq. (4.70) we expect the total energy of the system to be conserved. In
order to show this, we write the time derivative of V as follows:
dV
dt =
N

i=1
∂V
∂Ri
dRi
dt
=
N

i=1
fi · vi .
(4.90)
Substituting Eq. (4.31) for the particle i into Eq. (4.90), we have
dV
dt =
N

i=1
mi
dvi
dt · vi
= dT
dt ,
(4.91)
where T
.=
1
2
 N
i=1 mivi · vi =
1
2
 N
i=1 miv2
i is the total kinetic energy of
the system. Therefore, it follows from Eq. (4.91) that the total energy, E =
T −V , is conserved, which gives us another integral of motion. Thus, we have
obtained a total of 10 integrals of motion (v0 , c , H, and E), whereas 6N
integrals are required for the complete solution. In the next section, it will be
shown that two additional integrals can be obtained when N = 2 from the
considerations of relative motion of the two bodies. Hence, a two-body problem
is analytically solvable. However, with N > 2, the number of unknown motion
variables exceeds the total number of integrals; thus, no analytical solution
exists for the N -body problem when N > 2. Due to this reason, we cannot
mathematically prove certain observed facts (such as the stability of the solar
system) concerning N -body motion. The best we can do is to approximate
the solution to the N -body problem either by a set of two-body solutions or
by numerical solutions.
4.5 The Two-Body Problem
The problem of two spherical bodies in mutual gravitational attraction is the
fundamental problem of translational motion in space dynamics, and has a
complete, analytical solution. The motion of a spacecraft under the inﬂuence
of a celestial body in the solar system is usually approximated as a two-body
problem by ignoring the gravitation caused by the other objects, as well as
the actual, nonspherical shapes of the two bodies. Such an approximation is
valid when the gravitational attraction of the remaining N −2 bodies and
gravitational asymmetry resulting from nonspherical shapes are negligible in
magnitude. Compare with the inverse-square gravitational attraction between
the two primary bodies (called primaries). With some exceptions, such as

90
4 Translational Motion of Aerospace Vehicles
a lunar trajectory, such an assumption can generally be applied. When a
spacecraft is one of the primaries, we can get an accurate representation of its
trajectory by including the small perturbations caused by the departure from
the two-body solution, using an appropriate numerical scheme. However, the
starting point of such a scheme is usually the two-body solution, for which a
total of 12 integrals are necessary. We have already obtained the 10 known
integrals of the N -body problem in the previous section. Rather than trying
to ﬁnd the remaining two integrals in terms of translation of and rotation
about the center of mass, it is simpler to separate the two-body motion into
two parts: the motion of the center of mass [for which six integrals of motion
are available from Eq. (4.80)], and the relative motion between the two bodies.
There is a historical basis for such a separation, beginning with the earliest
astronomical observations of celestial bodies from the earth. Also, it is more
convenient to study the motion of a spacecraft relative to a coordinate frame
ﬁxed at the center of the other primary body. In order to get the remaining
six integrals of motion, we write Eq. (4.85) for i = 1, 2, and subtract the two
equations of motion from one another:
d2R12
dt2
+ G(m1 + m2)
R3
12
R12 = 0,
(4.92)
where R12 .= R2 −R1 is the position of m2 relative to m1. For simplicity of
notation, let us replace R12 by r, and denote μ .= G(m1 + m2), resulting in
the following equation of relative motion:
d2r
dt2 + μ
r3 r = 0 .
(4.93)
Since Eq. (4.93) is a nonlinear vector diﬀerential equation, we do not expect
it to have a closed-form solution, i.e., an explicit expression for the relative
position as a function of time, r(t). However, we can analytically determine
the necessary integrals of motion governing the problem, which allow us to
represent the trajectory either as an inﬁnite series expansion, or by related
numerical approximations.
Let us begin by taking the vector product of Eq. (4.93) with r:
r × d2r
dt2 + μ
r3 (r × r) = 0 ,
(4.94)
or,
d
dt

r × dr
dt

−dr
dt × dr
dt = 0 ,
(4.95)
which implies that
d
dt

r × dr
dt

= 0 .
(4.96)
Therefore, it follows that the speciﬁc angular momentum of m2 relative to
m1, deﬁned by

4.5 The Two-Body Problem
91
y
z
o
1
m
h
r
R
v
2
m
S
X
Y
Z
x
Fig. 4.10. The two-body motion.
h .= r × dr
dt = r × v ,
(4.97)
is conserved, where v .= dr
dt is the relative velocity. We emphasize that h is
the angular momentum per unit mass of m2 about m1 and is not the total
angular momentum of the two-body system about the common center of mass,
H [Eq. (4.82)]. Since h is a constant vector, it represents three scalar integrals
of motion. There are two important consequences of a constant h:
(a) The direction of h is a constant, which implies that the vectors r and
v are always in the same plane, and h is normal to that plane. (You may
verify this fact by showing r · h = 0 and v · h = 0.) Hence, we can choose a
coordinate frame (Fig. 4.10) attached to m1 such that the z-axis is along h
and the relative motion occurs in the xy-plane.
(b) The magnitude of h is constant. In terms of polar coordinates, (r, θ), the
magnitude of h is written as
h =| r × v |= r2 dθ
dt ,
(4.98)
which implies that the radius vector, r, sweeps out area at a constant rate
1
2r2 dθ
dt , called areal velocity. This is the general form of Kepler’s second law
of planetary motion,2 which was restricted to elliptical trajectories. The two-
body trajectories can be classiﬁed according to the magnitude and direction
2 Johannes Kepler (1571–1630) discovered the three laws of planetary motion after
a careful analysis of the observational data of the planet Mars, painstakingly
gathered by the Danish astronomer Tycho Brahe (1546–1601):

92
4 Translational Motion of Aerospace Vehicles
of a constant h. The case of h = 0 represents rectilinear motion along the line
joining the two bodies, while h ̸= 0 represents the more common trajectory
involving rotation of m2 about m1.
A further classiﬁcation of the trajectories is possible by taking the vector
product of Eq. (4.93) with h:
d2r
dt2 × h + μ
r3 (r × h) = 0 .
(4.99)
We note that
d2r
dt2 × h = d
dt(v × h) ,
(4.100)
since h is constant. Also, an interesting elementary identity can be obtained
by diﬀerentiating r2:
dr2
dt = 2rdr
dt = 2r ˙r
= d(r · r)
dt
= ˙r · r + r · ˙r
= 2r · ˙r = 2r · v ,
(4.101)
from which it follows that r · v = r ˙r (dot represents time derivative). We use
this and another vector identity to evaluate the second term in Eq. (4.99) as
follows:
μ
r3 (r × h) = μ
r3 (r × (r × v)
= μ
r3 [(r · v)r −(r · r)v]
= μ ˙r
r2 r −μ
r v
= −μ
v
r −˙r
r2 r

= −μ d
dt
%r
r
&
.
(4.102)
Substituting Eqs. (4.100) and (4.102) into Eq. (4.99), we have
d
dt
%
v × h −μr
r
&
= 0.
(4.103)
Hence, we can deﬁne a constant vector e, called the eccentricity vector, such
that μe .= v × h −μr
r . Since e is a constant vector, we expect it to provide
1. The planets orbit the sun in elliptical orbits, with the sun at one focus.
2. The straight line joining a planet and the sun sweeps out equal areas in equal
times.
3. The square of the orbital period of a planet is proportional to the cube of the
ellipse’s semi-major axis.

4.5 The Two-Body Problem
93
three more scalar integrals of motion; however, since e and h are related by
e · h = 0, we get a total of only ﬁve scalar integrals from the two constant
vectors. It is also clear that e, being perpendicular to h, lies in the plane of
motion formed by r and v.
An important insight into the two-body motion is obtained by writing the
magnitude of the eccentricity vector (called eccentricity) as follows:
e2 = e · e = 1
μ2 (v × h) · (v × h) −2
μrr · (v × h) + 1 .
(4.104)
Since v and h are mutually perpendicular, it follows that (v × h) · (v × h) =
v2h2. Furthermore, it is true that r · (v × h) = (r × v) · h = h2. Therefore,
Eq. (4.104) yields the following:
1 −e2 = v2h2
μ2
−2h2
μr + 1 = h2
μ
2
r −v2
μ

.
(4.105)
Let us deﬁne parameter, p, and another constant, a, both having units of
length, by
p .= h2
μ ;
1
a = 2
r −v2
μ ,
(4.106)
which are related by p = a(1 −e2). If we use the deﬁnition of a, another
integral of motion is deﬁned as
ε .= −μ
2a = v2
2 −μ
r .
(4.107)
Note that v2
2 is the speciﬁc kinetic energy and −μ
r is the speciﬁc potential
energy of relative motion of m2 about m1. Hence, we call ε the energy integral
of the relative motion.3 However, ε is not the total energy, E, of the two-body
system, because it does not include the kinetic energy of m1. The energy
integral can be used to describe the various kinds of trajectories of the two-
body motion. For a bound orbit of m2 about m1, the magnitude of potential
energy must be greater than the kinetic energy, which implies ε < 0 and
1
a > 0. For m2 to escape the gravity of m1, the relative kinetic energy must
be greater than or equal to the magnitude of potential energy, implying ε ≥0
and 1
a ≤0. Note that since, by deﬁnition, p ≥0, the eccentricity, e, can also be
used to determine if the orbit is closed (e < 1) or open (e ≥1). All practical
orbits have p > 0.
From everyday observation of celestial bodies, we suspect that a possible
two-body trajectory is the circular orbit of m2 about m1, implying a constant
radius, r. Let us see whether a circular trajectory satisﬁes Eq. (4.93) by writing
r = rir, where ir is the unit vector along r, and by noting that v = dr
dt =
3 The name vis viva, or living force, was historically used for the energy integral,
as it is responsible for causing motion.

94
4 Translational Motion of Aerospace Vehicles
ω × r = rω × ir, and d2r
dt2 = ω × (ω × r) = −ω2r, where ω = ωih is the
angular velocity in the direction of h (denoted by the unit vector ih). Upon
substitution into Eq. (4.93), we have
−ω2r + μ
r3 r = 0 ,
(4.108)
which would be satisﬁed if and only if ω2 = μ
r3 . This is Kepler’s third law for
a circular orbit. From the v expressed above, we have v = rω, which implies
v2 = r2ω2 = μ
r , and substituted into the energy integral, Eq. (4.107), leads to
−μ
2a = v2
2 −μ
r = μ
2r −μ
r = −μ
2r ,
(4.109)
or, r = a. Also, since h = r × v = rvih, it follows that p = h2
μ = r2v2
μ
=
r4ω2
μ
= r. Thus, for circular orbit, r = a = p, which implies e = 0.
Example 4.7. Determine the total change in velocity required to launch a space
shuttle from the surface of the earth to achieve a circular orbit of 200 km
altitude. What is the period of the satellite in its orbit? For earth, Gm1 =
398, 600.4 km3/s2 and surface radius R0 = 6378.14 km.
We begin by noting that the shuttle’s mass is negligible in comparison with
that of the earth. Hence, we can approximate μ .= G(m1 + m2) ≈Gm1. Such
an assumption is commonly applied in a two-body problem, because usually
there is a large diﬀerence between the two masses. Thus, the velocity of the
shuttle in a circular orbit of radius r = 6378.14 + 200 = 6578.14 km relative
to the earth’s center is calculated as follows:
v =
'μ
r =
'
μ
R0 + h =
'
398600.4
6578.14 = 7.7842596 km/s.
This is the total change in the velocity required for launching the space
shuttle into the given circular orbit. A small part of this velocity comes from
the earth’s rotation about its axis, which we saw in Example 4.1 translating
into the velocity of the launch point according to Eq. (4.12). The remaining
velocity must be imparted by the engines. The shuttle’s orbital period, P, can
be calculated from the orbital rotational rate, ω, by
P = 2π
ω = 2πr
v
= 2π(6578.14)
7.7842596
= 5309.65 s (88.49 min).
4.5.1 Geometry of Two-Body Trajectories
In the previous subsection, we were able to derive a special trajectory of the
two-body motion, namely a circular orbit where e = 0. However, in order to
determine the shape of a general trajectory where e ̸= 0, let us take the scalar
product of μe with the position, r, to write

4.5 The Two-Body Problem
95
r + e · r = 1
μr · (v × h) = p .
(4.110)
Furthermore, let us deﬁne the angle between the vectors, r and e, as the
true anomaly, θ, which, when substituted into Eq. (4.110), leads to
r =
p
1 + e cos θ ,
(4.111)
deﬁning the shape of the trajectory in polar coordinates, r and θ. There is
no change in r if the sign of θ is changed, which imples that the trajectory
is symmetrical about e. Furthermore, the minimum separation of the two
bodies (called periapsis4), r =
p
1+e, occurs when θ = 0, which indicates that
e points toward the periapsis. [The maximum separation of the two bodies
(called apoapsis), r =
p
1−e, occurs when θ = π for e ≤1.] Equation (4.111)
is called the orbit equation because it speciﬁes the shape of the orbit. By
plotting Eq. (4.111) (or converting it to Cartesian coordinates), it is clear
that the general orbit is a conic section, i.e., the shape we get by cutting a
right-circular cone in a particular way. In each case, the focus of the orbit is
at the center of m1, and the constant a is called the semi-major axis, which
has a special geometrical signiﬁcance. For e < 1, the orbit is an ellipse, with
a > 0 and p = a(1 −e2) > 0. The circle is a special ellipse with e = 0 and
r = a = p. For e = 1, the orbit is a parabola, with 1
a = 0 (or a = ∞), and
p ≥0. The rectilinear trajectory is a special parabola with p = 0. For e > 1,
the orbit is a hyperbola, with a < 0 and p = a(1 −e2) > 0. Figure 4.11 depicts
the three general orbits. In Fig. 4.11, the periapsis location relative to the
focus is denoted by qe, where q = a( 1
e −1) for the ellipse and the hyperbola,
and q = p
2 for the parabola. In each case, the parameter, p, is the length of the
chord (also called semi-latus rectum) drawn from the focus to the trajectory.
Since the chord is perpendicular to the major axis, the frame having p and
qe as the two Cartesian axes is a convenient choice of a coordinate system for
the two-body motion in the orbital plane. Such a coordinate system is called
a perifocal frame. Another possible coordinate system is a moving frame with
origin at m2, having mutually perpendicular axes along the radial direction,
ir, and the tangential direction, iθ, with the velocity vector making an angle
above the local horizon, φ, called the ﬂight path angle (Fig. 4.11):
v = v cos φiθ + v sin φir.
(4.112)
The moving polar frame, (ir, iθ), is used to represent v in terms of r. By
taking the vector product of the angular momentum vector with μe, we have
μh × e = h × (v × h) −μ
r h × r,
(4.113)
which leads to
4 The general apsis in periapsis (and apoapsis) is replaced by a more speciﬁc gee
when m1 is the earth, and helion when m1 is the sun.

96
4 Translational Motion of Aerospace Vehicles
Periapsis
Line of Apsides 
ae
b
b
Apoapsis
p
qe
r
v
G
R
Focus
2a
(a) Elliptical orbit 
Periapsis
Focus qe
R
p
r
v
Asymptote
r
p
qe
R
Focus
C
Periapsis
b
-a
-ae
v
G
G
        (b) Parabolic orbit. 
(c) Hyperbolic orbit. 
Fig. 4.11. The two-body orbits.
v = μ
hih(e × ir) ,
(4.114)
because h and v are orthogonal. Note that ih emerges out of the page for the
orbits depicted in Fig. 4.11. We can express h in terms of φ as follows:
h = r × v = rv cos φih.
(4.115)
On substituting Eq. (4.111) into Eq. (4.115), with the deﬁnition of p given in
Eq. (4.106), we have
cos φ = μ(1 + e cos θ)
hv
.
(4.116)

4.5 The Two-Body Problem
97
Furthermore, the radial velocity magnitude is identiﬁed from Eq. (4.112) and
is equal to the time derivative of Eq. (4.111):
˙r = v sin φ =
ep sin θ
(1 + e cos θ)2
dθ
dt .
(4.117)
On substituting Eq. (4.98) for dθ
dt , we have
sin φ = μe sin θ
hv
.
(4.118)
Equations (4.116) and (4.118) determine φ from θ without quadrant ambigu-
ity, or we can divide one by the other, obtaining
tan φ =
e sin θ
1 + e cosθ .
(4.119)
Clearly, positive values of the ﬂight-path angle occur in the range 0 < θ < π,
and negative for π < θ < 2π.
Example 4.8. A space shuttle in a circular earth orbit of 200 km altitude
is de-boosted by ﬁring rocket thrusters along the velocity vector, such that
the speed instantaneously decreases by 500 m/s. Neglecting the eﬀects of the
earth’s atmosphere, calculate the speed and ﬂight-path angle when the shuttle
reaches an altitude of 100 km.
In Example 4.7, we calculated the circular orbital speed to be 7.7842596
km/s. The speed immediately after de-boost is v = 7.2842596 km/s. The
resulting trajectory is no longer circular, but an ellipse with the point
of de-boost being an apogee, because it has φ = 0 and a decreasing ra-
dius thereafter. The trajectory is deﬁned by a constant angular momentum,
h = rv = (6578.14)(7.2842596) = 47916.8795 km2/s, which implies p = h2
μ =
47916.87952
398600.4
= 5760.223 km, e = 1 −
p
a(1+e) = 1 −5760.223
6578.14 = 0.124338588, and
a = 6578.14
1+e
= 5850.6753 km. The speed at 100 km altitude is calculated using
the energy integral, Eq. (4.107), as follows:
v =
'
2μ
r −μ
a =
(
398600.4

2
6378.14 + 100 −
1
5850.6753

= 7.4115573 km/s,
from which it follows that cos φ =
h
rv =
47916.8795
(6478.14)(7.4115573) = 0.99799583. Due
to quadrant ambiguity involved in cosine inverse, we also require sinφ from
Eq. (4.118). The true anomaly at 100 km altitude is calculated from the orbit
equation as cos θ =
p
er −1
e = −0.89128738, which leads to θ = ±153.0355◦.
Both values of θ are theoretically possible. However, θ = 153.0355◦implies
a return from the perigee, which is impractical, because the perigee radius is
r = a(1 −e) = 5123.211 km, a value less than the earth’s radius, implying a

98
4 Translational Motion of Aerospace Vehicles
violation of the constraint that the altitude is always nonnegative. Therefore,
this earth intersecting trajectory has θ = −153.0355◦= 206.96453◦at 100 km
altitude. From Eq. (4.118), we get sin φ = μe sin θ
hv
= −0.06332201, which ﬁxes
the ﬂight-path angle at φ = −3.628084◦.
Example 4.9. A spacecraft is tracked at an altitude of 5000km and ﬂight-path
angle 10◦, to be moving at speed 10 km/s relative to a nonrotating earth.
Determine the trajectory of the spacecraft.
We begin by calculating the semi-major axis from the energy integral as
follows:
a = −μ
2ε =
2
r −v2
μ
−1
=

2
6378.14 + 5000 −
100
398600.4
−1
= −13, 315.1949 km.
The negative semi-major axis indicates a hyperbolic orbit. The angular mo-
mentum is calculated next as h = rv cos φ = (6378.14 + 5000)(10) cos10◦=
112, 052.8049 km2/s, from which the parameter follows, p = h2
μ = 31, 499.7955
km, leading to e =

1 −p
a = 1.8345852. The orbit’s shape in its plane is com-
pletely determined by any suitable pair of constants, (a, e), (a, p), (p, e), (h,
a), etc. An interesting orbital parameter is the angle of the asymptote, β. From
Fig. 4.11(c) and the orbit equation, it is evident that β = π −limr→∞θ =
π −cos−1 −1
e = cos−1 1
e = 56.9697◦. Hence, the object will depart the earth’s
gravity (limr→∞) along the asymptote inclined at 56.9697◦to the line of ap-
sides. The speed of departure at inﬁnity, called hyperbolic excess speed v∞,
can also be calculated by v∞= limr→∞

2μ
r −μ
a =

−μ
a = 5.4713576 km/s.
The hyperbolic excess velocity is vectorially added to the earth’s velocity rel-
ative to the sun, in order to determine the speed at which a spacecraft is
launched on an interplanetary voyage. The lowest velocity of departure at a
radius, r, is obtained for the parabolic trajectory (e = 1) and is called the
parabolic escape velocity, vesc =

2μ
r .
4.5.2 Lagrange’s Coeﬃcients
The two-body trajectory expressed in the perifocal frame with Cartesian axes
along e, p, and h (represented by the unit vectors ie, ip, and ih, respectively)
is the following:
r = r cos θie + r sin θip,
v = v(sin φ cos θ −cos φ sin θ)ie + v(sin φ sin θ + cos φ cos θ)ip. (4.120)
The second of Eqs. (4.120) is directly obtained from Eq. (4.114). On elimi-
nating the ﬂight-path angle with the use of Eqs. (4.116) and (4.118), we have

4.5 The Two-Body Problem
99
v = −μ
h sin θie + μ
h(e + cos θ)ip .
(4.121)
Given the position and velocity at some time, t0, we would like to determine
the position and velocity at some other time, t. In order to do so, we write
the known position and velocity as
r0 = r0 cos θ0ie + r0 sin θ0ip,
v0 = −μ
h sin θ0ie + μ
h(e + cos θ0)ip,
(4.122)
or, in the matrix equation form as
 r0
v0

=
 r0 cos θ0
r0 sin θ0
−μ
h sin θ0
μ
h(e + cos θ0)
  ie
ip

.
(4.123)
Since the square matrix in Eq. (4.123) is nonsingular (its determinant is equal
to h), we can invert the matrix to obtain ie and ip as follows:
 ie
ip

=
 1
p(e + cos θ0)
−r0
h sin θ0
1
p sin θ0
r0
h (e + cos θ0)
  r0
v0

.
(4.124)
On substituting Eq. (4.124) into Eqs. (4.120) and (4.121), we have

r
v

=

r cos θ
r sin θ
−μ
h sin θ
μ
h(e + cos θ)
  1
p(e + cos θ0)
−r0
h sin θ0
1
p sin θ0
r0
h (e + cos θ0)
 
r0
v0

,
(4.125)
or,
 r
v

=
 f g
˙f
˙g
  r0
v0

,
(4.126)
where
f .= 1 + r
p[cos(θ −θ0) −1],
g .= rr0
h sin(θ −θ0),
˙f .= df
dt = −h
p2 [sin(θ −θ0) + e(sin θ −sin θ0)],
˙g .= dg
dt = 1 + r0
p [cos(θ −θ0) −1].
(4.127)
The functions f and g were ﬁrst derived by Lagrange and are thus called
Lagrange’s coeﬃcients. They are very useful in determining the trajectory
from a known location and velocity. The matrix
Φ(t, t0) .=
f g
˙f
˙g

,
(4.128)

100
4 Translational Motion of Aerospace Vehicles
called the state transition matrix, has a special signiﬁcance because it uniquely
determines the current state, (r, v), from the initial state, (r0, v0), according
to Eq. (4.126). Such a relationship between the initial and ﬁnal states is rarely
possible for the solution to a nonlinear diﬀerential equation and is thus a
valuable property of the two-body problem. The state-transition matrix is
seen to have the following properties:
1. From the conservation of angular momentum,
h = r × v = (f ˙g −g ˙f)r0 × v0 = r0 × v0,
(4.129)
it follows that
| Φ |= f ˙g −g ˙f = 1.
(4.130)
A consequence of the unity determinant is that the inverse of the state-
transition matrix is given by
Φ−1 .=
 ˙g
−g
−˙f
f

.
(4.131)
Such a matrix is said to be symplectic.
2. Given any three points (t0, t1, t2) along the trajectory, it is true that
Φ(t2, t0) = Φ(t2, t1)Φ(t1, t0).
(4.132)
Example 4.10. Let us calculate the perifocal position and velocity of the space
shuttle of Example 4.8 at 100 km altitude, given the position and velocity at
the de-boost point. We begin by computing Lagrange’s coeﬃcients for θ =
206.96453◦, θ0 = 180◦, r0 = 6578.14 km, and r = 6478.14 km in a trajectory
deﬁned by e = 0.124338588 and p = 5760.223 km:
f = 1 + r
p[cos(θ −θ0) −1] = 0.8777381487,
g = rr0
h sin(θ −θ0) = 403.258618476,
˙f = −h
p2 [sin(θ −θ0) + e(sin θ −sin θ0)] = −0.000573409435,
˙g = 1 + r0
p [cos(θ −θ0) −1] = 0.875850850.
(4.133)
These computations are veriﬁed by ensuring that f ˙g−g ˙f = 1. Since the point
of de-boost is the apogee, r0 = −6578.14ie km and v0 = −7.2842596ip km/s.
Therefore, we have
r = fr0 + gv0 = −5773.88443ie −2937.44045ip km,
v = ˙fr0 + ˙gv0 = 3.7719675388ie −6.3799249319ip km/s.
Using MATLAB, we can verify our calculations of r and v as follows:

4.5 The Two-Body Problem
101
>> R=[-f*r0 -g*v0 0]’,V=[-fd*r0 -gd*v0 0]’% r, v vectors from Lagrangian coeffs.
>> r=norm(R)
r = 6.478139991426316e+003
>> v=norm(V)
v = 7.41155727563704
>> costheta=dot(R,[1 0 0]’)/r %cosine of true anomaly
costheta =
-0.89128737961147
>> H=cross(R,V) %angular momentum
H =
1.0e+004 *
0
0
4.79168792196865
>> cosphi=norm(H)/(norm(R)*norm(V)) %cosine of flight-path angle
cosphi =
0.99799583123837
>> sinphi=dot(R,V)/(norm(R)*norm(V)) %sine of flight-path angle
sinphi =
-0.06327970315068
These values agree with those calculated in Example 4.8.
As seen above, the vectors h and e (or r0 and v0) completely determine
the shape and orientation of a two-body trajectory but provide only ﬁve of
the six required scalar integrals of motion. The missing information is the
location of m2 along the trajectory at a particular time. Hence, the sixth
integral of motion can be regarded as the value of the true anomaly θ (thus
r) at a given time. A convenient choice of the remaining constant is the time
of periapsis, τ, which ﬁxes the time when θ = 0. On substituting the orbit
equation, Eq. (4.111), into Eq. (4.98), we have
dθ
(1 + e cosθ)2 =
' μ
p3 dt .
(4.134)
The integration of Eq. (4.134) provides the integration constant, τ, thereby
determining the variation of θ with time, and completing the solution to the
two-body problem. Attempts to carry out this integration in a closed form
have occupied the minds of the greatest mathematicians (Euler, Lagrange,
Laplace, Bessel, Fourier, Gauss, Cauchy, Leibnitz, and Newton) for more
than the past three centuries, and have led to signiﬁcant developments in all
branches of mathematics. The integrated form of Eq. (4.134) for an elliptical
orbit is called Kepler’s equation.5
4.5.3 Kepler’s Equation for Elliptical Orbit
When the two-body trajectory is elliptical, Eq. (4.134) can be written as
follows:
(1 −e2)
3
2 dθ
(1 + e cos θ)2 = ndt,
(4.135)
where
n .=
' μ
a3 ,
(4.136)
5 An interesting historical perspective on the solution to Kepler’s equation is found
in Battin [11].

102
4 Translational Motion of Aerospace Vehicles
is referred to as the mean motion. It is clear from Eq. (4.135) that the true
anomaly, θ, does not vary uniformly with time. However, as seen above, when
e = 0, the motion is uniformly circular, with the frequency given by n. It
remains to be seen whether the mean motion, n, represents the frequency of
the periodic motion when e ̸= 0. Let us introduce an angle called the eccentric
anomaly, E, deﬁned by
cos E .= e + cos θ
1 + e cos θ.
(4.137)
R
b
qe
Focus
r
Tangent
Circle
E
a
Fig. 4.12. The eccentric anomaly, E.
The geometric signiﬁcance of the eccentric anomaly is shown in Fig. 4.12,
where E describes a corresponding motion in a tangent circle of radius a,
sharing the ellipse’s center (not the focus). Note that E = 0 when θ = 0, and
E = π when θ = π. Also, r = a(1 −e cos E). On diﬀerentiating Eq. (4.137)
with time, we have
sin EdE = (1 −e2) sin θdθ
(1 + e cosθ)2
.
(4.138)
But
sin E =

1 −cos2 E =
√
1 −e2 sin θ
1 + e cosθ
.
(4.139)
Furthermore, from Eq. (4.137) it is clear that
1 + e cos θ =
1 −e2
1 −e cosE .
(4.140)
Therefore, on substituting Eqs. (4.139) and (4.140) into Eq. (4.138), we have
(1 −e cos E)dE = ndt .
(4.141)
Upon integrating from the periapsis (t = τ , E = 0) to the present location
(t, E), we derive the famous Kepler’s equation, written as

4.5 The Two-Body Problem
103
E −e sin E = n(t −τ) .
(4.142)
Note that τ is an integral of motion, which, along with a and e (or any other
pair of scalar constants), completely determines the trajectory in the plane of
motion. It is clear from Kepler’s equation, Eq. (4.142), that the time taken
to complete one revolution (the period of motion, P) involves E = 2π and is
given by
P = 2π
n
.= 2π
(
a3
μ ,
(4.143)
which conﬁrms Kepler’s third law of motion (P 2 ∝a3). Hence, the mean
motion, n, is indeed the frequency of the elliptical orbit.
The eccentric anomaly is related to the true anomaly (without quadrant
ambiguity) using the half-angle trigonometric identities of Eqs. (4.137) and
(4.139), written as follows:
tan θ
2 =
'
1 + e
1 −e tan E
2 .
(4.144)
Note that E
2 and θ
2 are always in the same quadrant.
Example 4.11. Calculate the time taken by the space shuttle in Example 4.8
to reach the 100 km altitude after de-boost from the 200 km altitude circular
orbit.
In Example 4.8 we had calculated the true anomaly at 100 km alti-
tude to be θ = 206.96453◦, which, according to Eq. (4.144), implies E =
3.67212805663 rad (210.39744◦). With a semi-major axis, a = 5850.6753 km,
the mean motion is calculated to be n =

398600.4
5850.67533 = 0.001410782 rad/s.
Using Kepler’s equation, the time since perigee is obtained as t −τ =
E−e sin E
n
= 2647.4984 s, and the time since de-boost at apogee is thus
t −τ −P
2 = 2647.4984 −
π
0.001410782 = 420.6534 s.
Usually, the right-hand side of Kepler’s equation is expressed as another
angle, called the mean anomaly, M = n(t −τ), which results in
E −e sin E = M .
(4.145)
Kepler’s equation is a transcendental equation in E, whose solution in a closed
form has beaten the greatest minds in the last three centuries. Given time, t
(or mean anomaly, M ), obtaining the location, E, from the Kepler’s equation
solution is thus a nontrivial task, requiring a numerical approximation. New-
ton was the ﬁrst to present such an approximation, employing a Taylor series
expansion of the function f(E) = E −e sin E −M, as follows:
f(E + ΔE) =
∞

k=0
f (k)(E)(ΔE)k
k!
,
(4.146)

104
4 Translational Motion of Aerospace Vehicles
where f (k) .=
dkf(E)
dEk . When this inﬁnite series is approximated by a ﬁnite
number of terms, the accuracy of the approximation depends upon the step
size, ΔE, as well as on the number of retained terms. When only the ﬁrst two
terms of the inﬁnite series are retained, Newton’s approximation results are
given by
f(E + ΔE) ≃f(E) + f (1)(E)(ΔE).
(4.147)
With the help of Eq. (4.147), Newton’s method 6 of solving Kepler’s equation
can be summarized as follows:
1. Given a mean anomaly, M, guess an initial value for the eccentric anomaly,
E. (A good starting guess is E = M + e sin M, although other, more reﬁned
estimates are possible.7)
2. Calculate the change required in the value of E so that f(E + ΔE) = 0,
using
ΔE = −f(E)
f (1)(E) = −E + e sin E + M
1 −e cos E
.
(4.148)
3. Update E, using E = E + ΔE.
4. Calculate f(E) = E −e sin E −M.
5. If the magnitude of f(E) is less than or equal to a preselected small num-
ber, δ, called the tolerance, then the new value of E is acceptable. Otherwise,
go back to step 2, and determine a new change in E.
This scheme normally converges in a few iterations to a very small toler-
ance. A larger number of iterations may be necessary when the eccentricity,
e, is close to unity or when M is small. The number of iterations also depends
upon the initial guess for E in the ﬁrst step. It is rare for the scheme to re-
quire more than six iterations, even in extreme cases. One can easily write a
program in MATLAB for solving Kepler’s equation using Newton’s method,
as demonstrated in the following example.
Example 4.12. Determine the position and velocity of the space shuttle in
Example 4.8 nine minutes after de-boost, neglecting the eﬀects of the earth’s
atmosphere.
We begin by calculating the mean anomaly nine minutes after de-boost
(apogee) as M = n(t −τ) = π + (0.001410782)(9)(60) = 3.903414864528 rad.
Next, we write a program called kepler.m, for the solution of Kepler’s equation
using Newton’s method, which is tabulated in Table 4.2, and is executed as
follows:
>> E=kepler(e,M)
fE =
-2.089455640508220e-006
i
=
1
fE =
-1.421085471520200e-013
i
=
2
E
=
3.82491121296282
6 Newton’s method, when applied to the solution of a general transcendental equa-
tion, is called the Newton–Raphson method.
7 See, for example, page 45 of Chobotov [9].

4.5 The Two-Body Problem
105
The speciﬁed tolerance, δ = 1 × 10−10, is thus met in two iterations, with
the eccentric anomaly calculated to be E = 3.82491121296282 rad (219.15127◦).
The true anomaly is then calculated according to Eq. (4.144) to be θ =
3.74977535060384 rad (214.84630◦). Then, by using the orbit equation, we
may calculate the radius as r =
p
1+e cos θ
= 6414.8109 km, which im-
plies an altitude of 36.6709 km. The position vector is uniquely deter-
mined by (r, θ). The speed at this point is calculated using the energy in-
tegral as v =

398600.14(
2
6414.8109 −
1
5850.6753) = 7.493068197 km/s. The
ﬂight-path angle is obtained from Eq. (4.119) to be φ = tan−1
e sin θ
1+e cos θ =
−0.07895315 rad (−4.52368239◦). The velocity vector is uniquely determined
by (v, φ, θ).
Table 4.2. M-ﬁle kepler.m for Solving Kepler’s Equation
function E=kepler(e,M)
%(c) 2006 Ashish Tewari
E=M+e*sin(M);
fE=E-e*sin(E)-M;
fpE=1-e*cos(E);
dE=-fE/fpE;
E=E+dE;
eps=1e-10; %tolerance
i=0;
while abs(fE)>eps
fE=E-e*sin(E)-M
fpE=1-e*cos(E);
dE=-fE/fpE;
E=E+dE;
i=i+1 %iteration number
end
The perifocal frame (ie, ip, ih) is a convenient axes system for represent-
ing the elliptical trajectory using Lagrange’s coeﬃcients of Eq. (4.127). We
can directly solve the problem in Example 4.12 by determining r and v in
the perifocal frame. This requires ﬁrst determining the elliptical trajectory
from r0 and v0, and then calculating the true anomaly from the trajectory
parameters a, e, and τ, and Kepler’s equation. However, the position and ve-
locity vectors in an elliptical orbit can be expressed directly in terms of the
eccentric anomaly, thereby eliminating the step requiring the calculation of
the true anomaly. By substituting Eqs. (4.137) and (4.139) into Eqs. (4.120)
and (4.121) for r and v in the perifocal frame, we have
r = a(cos E −e)ie + √ap sin Eip,
v = −
√μa
r
sin Eie +
√μp
r
cos Eip.
(4.149)

106
4 Translational Motion of Aerospace Vehicles
Given the position and velocity at some time, t0, we can employ the Lagrange
coeﬃcients (Eq. (4.127)) expressed as functions of the eccentric anomaly to
determine the current position and velocity:
f .= 1 + a
r0
[cos(E −E0) −1],
g .= aα0
μ [1 −cos(E −E0)] + r0
' a
μ sin(E −E0),
˙f .= df
dt = −
√μa
rr0
sin(E −E0),
(4.150)
˙g .= dg
dt = 1 + a
r [cos(E −E0) −1],
(4.151)
where α0 = r0·v0. Note that Eqs. (4.150) involve the diﬀerence in the eccentric
anomaly, E −E0, which is convenient.
Example 4.13. Determine the perifocal trajectory of the space shuttle in Ex-
ample 4.8 from de-boost until earth impact, neglecting the eﬀects of the earth’s
atmosphere, and assuming no further maneuvering.
Fig. 4.13. The space shuttle’s in-vacuo, nonmaneuvering trajectory after de-boost.

4.5 The Two-Body Problem
107
Table 4.3. M-ﬁle trajE.m for Determining Elliptical Trajectory
% This code requires ’kepler.m’
% (c) 2006 Ashish Tewari
function [R,V]=trajE(mu,t0,R0,V0,t)
eps=1e-10;
r0=norm(R0);
v0=norm(V0);
alpha=dot(R0,V0);
H=cross(R0,V0);
h=norm(H);
p=h*h/mu;
ecv=cross(V0,H)/mu-R0/r0;
e=norm(ecv);
ecth0=p/r0-1;
esth0=norm(cross(ecv,R0))/r0;
if abs(ecth0)>=eps;
th0=atan(esth0/ecth0);
if ecth0<0
if esth0>=0;
th0=th0+pi;
end
elseif esth0<0
th0=th0+2*pi;
end
elseif esth0>=0
th0=pi/2;
else
th0=3*pi/2;
end
ainv=-(v0*v0)/mu+2/r0;
a=1/ainv;
n=sqrt(mu/a^3);
E0=2*atan(sqrt((1-e)/(1+e))*tan(0.5*th0));
tau=t0+(-E0+e*sin(E0))/n;
M=n*(t-tau);
E=kepler(e,M);
r=a*(1-e*cos(E));
f=1+a*(cos(E-E0)-1)/r0;
g=a*alpha*(1-cos(E-E0))/mu+r0*sqrt(a/mu)*sin(E-E0);
fd=-sqrt(mu*a)*(sin(E-E0))/(r*r0);
gd=1+a*(cos(E-E0)-1)/r;
R=f*R0+g*V0;
V=fd*R0+gd*V0;
We begin by writing a MATLAB program for determining the elliptical
trajectory from the initial position and velocity, employing Lagrange’s coef-
ﬁcients according to Eqs. (4.150). Such a program is tabulated in Table 4.3.
Next, the program is executed and the trajectory plotted using the following
MATLAB statements:
>> mu=398600.4;
>> r=[-6578.14,0,0]’;v=[0,-sqrt(398600.4/6578.14)+0.5,0]’;%initial position velocity
>> t=0; i=0;
>> dt=1; %time step size (1 s)
>> z=norm(r)-6378.14; %altitude (km)
>>
while z>=0;[r,v]=trajE(mu,t,r,v,t+dt);i=i+1;t=t+dt;...
z=norm(r)-6378.14;...
R(:,i)=norm(r);V(:,i)=norm(v);T(:,i)=t;...
costheta=dot(r,[1 0 0]’)/norm(r);...
theta=acos(costheta);...
cosphi=norm(cross(r,v))/(norm(r)*norm(v));...
sinphi=dot(r,v)/(norm(r)*norm(v));...
phi=asin(sinphi);...

108
4 Translational Motion of Aerospace Vehicles
th(:,i)=theta;ph(:,i)=phi;...
end
>> subplot(221),plot(T,R-6378.14),grid,hold on,...%altitude vs. time
subplot(222),plot(T,th*180/pi),grid,...%true anomaly vs. time
hold on, subplot(223),plot(T,V),grid,...%speed vs. time
hold on,subplot(224),plot(R-6378.14,ph*180/pi),grid%flt.-path angle vs. altitude
The resulting plots are shown in Fig. 4.13.
4.5.4 Position and Velocity in a Hyperbolic Trajectory
An analog of Kepler’s equation can be obtained for hyperbolic orbits by in-
troducing the hyperbolic anomaly, H, and the hyperbolic functions. The para-
metric equation of a hyperbola centered at x = 0, y = 0, with semi-major axis
a, can be written as x = a cosh H, or r cos θ = a(cosh H −e). It follows that
the magnitude of the radius vector is r = a(1 −e cosh H); consequently, the
relationship between the hyperbolic anomaly and the true anomaly is given
by
cos θ = cosh H −e
1 −e cosh H ,
(4.152)
or,
sin θ = ±
√
e2 −1 sinh H
1 −e cosh H .
(4.153)
Both signs are possible for the term on the right-hand side of Eq. (4.153). If
we take the negative sign, we have
sin θ = −
√
e2 −1 sinh H
1 −e coshH
,
(4.154)
and we can write the second parametric equation for the hyperbola as y =
−b sinh H, where b = a
√
e2 −1 is the semi-minor axis. Another relationship
between H and θ can be obtained by using the half-angle identities:
tan θ
2 =
'
1 + e
e −1 tanh H
2 .
(4.155)
Employing Eqs. (4.120) and the foregoing relations, we can write the position
and velocity in a hyperbolic orbit of eccentricity e as follows:
r = a(cosh H −e)ie −√−ap sinh Hip,
v = −
√−μa
r
sinh Hie +
√μp
r
cosh Hip .
(4.156)
Upon diﬀerentiating Eq. (4.152), we have
dθ =
sin θ
sinh H dH = −b
rdH .
(4.157)

4.5 The Two-Body Problem
109
From the law of areas, we have
r2dθ = hdt .
(4.158)
On substituting Eq. (4.157) into Eq. (4.158), we can write
(e cosh H −1)dH =
'
−μ
a3 dt ,
(4.159)
which, upon integration from H = 0, t = τ, yields
e sinh H −H = n(t −τ) ,
(4.160)
where the hyperbolic mean motion, n, is given by
n =
'
−μ
a3 .
(4.161)
Equation (4.160) is the analog of Kepler’s equation for a hyperbolic trajec-
tory8, and can be solved numerically using Newton’s method in a manner
similar to Kepler’s equation.
Example 4.14. Determine the perifocal position and velocity of the spacecraft
in Example 4.9, 10 hours after its altitude, ﬂight-path angle, and speed relative
to earth are observed to be 5000 km, 10◦, and 10 km/s, respectively.
In Example 4.9, the trajectory parameters for the spacecraft were deter-
mined from the initial position and velocity to be a = −13, 315.1949 km,
p = 31, 499.7955 km, and e = 1.8345852. Hence, the hyperbolic anomaly for
the initial position is obtained as follows:
H0 = cosh−1
1
e −r0
ae

= 0.147296252 rad,
n =
'
−μ
a3 = 4.109108 × 10−4 rad/s,
which yields the time of periapsis as follows:
τ = H0 −e sinh H0
n
= −301.54837 s,
and the mean anomaly is calculated as M = n(t −τ) = 4.109108 × 10−4(10 ∗
3600 + 301.54837) = 14.91669882225 rad.
Now we are ready to solve the hyperbolic analog of Kepler’s equation
using the MATLAB ﬁle keplerhyp.m listed in Table 4.4. Note that in this
program, we have used the mean anomaly to be the initial guess for the
hyperbolic anomaly. Other, more sophisticated techniques are available9 to
make the initial guess for H such that the iterations for a given tolerance are
minimized. The program keplerhyp.m is executed, resulting in the following:
8 If we take the positive sign in Eq. (4.153), we would get H −e sinh H = n(t −τ).
9 For example, see Vallado [8], pp. 78–83.

110
4 Translational Motion of Aerospace Vehicles
>>H=keplerhyp(e,M)
i=1 fH = 1.014952224618536e+006 H = 12.91673669562873
i=2 fH = 3.733730704786804e+005 H = 11.91680855810042
i=3 fH = 1.373495542042516e+005 H = 10.91699660866798
i=4 fH = 5.052161961527040e+004 H = 9.91748791373650
i=5 fH = 1.857967289437311e+004 H = 8.91876908491407
i=6 fH = 6.829154325531749e+003 H = 7.92210179750439
i=7 fH = 2.506650999181199e+003 H = 6.93073915098228
i=8 fH = 9.167713602887050e+002 H = 5.95297547031013
i=9 fH = 3.321910110827640e+002 H = 5.00942645299948
i=10
fH = 1.174954146079913e+002 H = 4.14823643033086
i=11
fH = 39.00559087243553
H = 3.46512025582047
i=12
fH = 10.92479558757285
H = 3.07995585735341
i=13
fH = 1.91912604037694
H = 2.97894975852874
i=14
fH = 0.09824238098464
H = 2.97320027715255
i=15
fH = 2.968357362309604e-004 H = 2.97318279979355
i=16
fH = 2.732342352373962e-009 H = 2.97318279963267
i=17
fH = 0
H = 2.97318279963267
Hence, the hyperbolic anomaly converges to double precision (tolerance
less than 10−16) as H = 2.97318279963267 rad in 17 iterations. Finally, we
compute the perifocal position and velocity as follows:
>>R=a*[cosh(H)-e
-sqrt(e^2-1)*sinh(H) 0]’ %position vector (km)
R =
-106095.654013018
199708.803081263
0
>> r=norm(R)
%radius (km)
r = 2.261413138473391e+005
>> V=sqrt(-mu*a)*[-sinh(H)
sqrt(e^2-1)*cosh(H) 0]’/r %velocity vector (km/s)
V =
-3.14146550904969
4.85717833269184
0
>> v=norm(V) %speed (km/s)
v =
5.78454725109234
>> theta=acos(a*(cosh(H)-e)/r) %true anomaly (rad.)
theta =
2.05913165393277
>> h=norm(cross(R,V)) %angular momentum magnitude (km^2/s)
h =
1.120528048685832e+005
>> phi=acos(h/(r*v))
%flight-path angle (rad)
phi = 1.48503213738220
Table 4.4. M-ﬁle keplerhyp.m for Determining Hyperbolic Anomaly
%(c) 2006 Ashish Tewari
function H=keplerhyp(e,M);
H=M;
fH=e*sinh(H)-H-M;
fpH=e*cosh(H)-1;
dH=-fH/fpH;
H=H+dH;
eps=1e-10;
i=0;
while abs(fH)>eps
i=i+1
fH=e*sinh(H)-H-M
fpH=e*cosh(H)-1;
dH=-fH/fpH;
H=H+dH
end

4.5 The Two-Body Problem
111
Lagrange’s coeﬃcients for a hyperbolic orbit can be easily derived from
Eqs. (4.127) to be the following:
f = 1 + a
r0
[cosh(H −H0) −1],
g = t −t0 −sinh(H −H0) −(H −H0)
n
,
˙f = −
√−μa
rr0
sinh(H −H0),
(4.162)
˙g = 1 + a
r [cosh(H −H0) −1].
(4.163)
4.5.5 Parabolic Escape Trajectory
Whereas an elliptical orbit represents a closed trajectory with negative rela-
tive energy, a hyperbolic trajectory is that of escape from (or arrival at) a
planet’s gravity with positive relative energy. The boundary between these
two trajectories is that of the parabolic trajectory, which has zero relative
energy. A parabolic orbit is thus the minimum energy trajectory for escaping
the gravitational inﬂuence of a planet. While not practical for interplanetary
travel (due to a zero velocity at inﬁnite radius), the parabolic trajectory is
sometimes a valuable mathematical aid for quickly determining the minimum
fuel requirements for a given mission. Equation (4.134) for a parabolic orbit
is simply
1
4 sec4 θ
2dθ =
' μ
p3 dt ,
(4.164)
which, on integration, results in
tan3 θ
2 + 3 tan θ
2 = 6
' μ
p3 (t −τ) .
(4.165)
Equation (4.165) represents the parabolic form of Kepler’s equation and is
called Barker’s equation. Fortunately, a closed-form, real solution to Barker’s
equation exists and is unique. It can be obtained by substituting
tan θ
2 = α −1
α ,
(4.166)
and solving the resulting quadratic equation for α3, yielding
tan θ
2 = (C +

1 + C2)
1
3 −(C +

1 + C2)−1
3 ,
(4.167)
where
C .= 3
' μ
p3 (t −τ)
(4.168)
is an equivalent mean anomaly.

112
4 Translational Motion of Aerospace Vehicles
Example 4.15. Obtain the position and velocity of a spacecraft in a parabolic
orbit, 10 hours after its velocity relative to earth is measured as 10 km/s, with
the ﬂight-path angle of 10◦.
We begin by obtaining the initial radius as r0 = (2)(398600.4)
102
=7972.008 km).
Next, the angular momentum is calculated to be h = (10)(7972.008) cos10◦=
78, 508.95286 km2/s, which yields the parameter as p =
78508.952862
398600.4
=
15, 463.2451 km. The initial true anomaly is thus θ0 = cos−1( p
r0 −1) =
0.34906585 rad. From Barker’s equation, we can ﬁnd the time of periapsis
as
τ = −tan3 θ0
2 + 3 tan θ0
2
6

μ
p3
= −271.29927 s,
and the equivalent mean anomaly is calculated as C = 3

μ
p3 (36000 −τ) =
35.72747082559 rad. The true anomaly is ﬁnally obtained from Eq. (4.167) as
θ = 2 tan−1[(C +

1 + C2)
1
3 −(C +

1 + C2)−1
3 ] = 2.64068857 rad.
We can now calculate the ﬁnal radius, speed, and ﬂight-path angle as r =
p
1+cos θ = 125, 869.675 km, v =

2μ
r = 2.5166528 km/s, and φ = cos−1 h
rv =
1.3203442868 rad (75.65◦).
4.6 Summary
A trajectory model is based upon the particle assumption of a ﬂight vehicle
where the rotational motion is disregarded. The resulting translational model
has only three degrees of freedom. While the laws of motion are valid in an
inertial frame, it is often necessary to express the velocity and acceleration in
a moving frame, because the force acting on the vehicle is generally resolved
in such a frame. Acceleration resolved in a moving frame consists of linear,
angular, centripetal, and Coriolis accelerations, as well as the acceleration of
the frame’s origin. The ﬂight dynamic equations motion in a moving frame are
inherently nonlinear and require an iterative numerical solution procedure. A
vehicle with variable mass is capable of producing thrust due to reaction of
the ejected mass by Newton’s third law of motion. The general motion of a
body can be described by the translation of the center of mass and the ro-
tation of the body about its center of mass. Energy and angular momentum
are very useful in describing the general motion of a body. The work done by
a conservative force is indepedent of the path the body follows. A system of
N bodies in mutual gravitational attraction is a conservative system, whose
analytical solution is possible only if N = 2. The integrals of the two-body
problem satisfy Kepler’s laws of elliptical planetary orbits, but are more gen-
eral in that they can also describe open trajectories. While the shape of a
two-body trajectory can be obtained in a closed form, the relative position as

4.6 Summary
113
a function of time generally requires an iterative solution. Lagrange’s coeﬃ-
cients provide a compact representation of both relative position and velocity
of the two-body motion.
Exercises
4.1. A space object is being tracked by a ground-based radar situated in the
orbital plane. When the radial line joining the radar and the center of mass
of the object makes an angle θ = 20◦with the vertical, the radial distance,
radial speed, and angular speed relative to the station are measured as r =
250 km, ˙r = 3 km/s, and ˙θ = 1◦/s, respectively. Assuming that the object
experiences only the gravitational acceleration, g = 9.081 m/s2, at the given
point, calculate the speed, radial acceleration, and angular acceleration of the
object relative to the groundstation.
4.2. A wheel of radius R rolls without slipping on a horizontal plane. The
velocity and acceleration of the center of the wheel are v0 and a0, respectively.
Derive expressions for the velocity and acceleration of a point located on the
wheel at radius r and angle θ, measured along the direction of rotation from
the horizontal. For given r, R, and a0, what are the values of v0 and θ for
which the particle experiences no acceleration?
+
r
X
Fig. 4.14. A sliding body in a rotating slot.
4.3. A slot (Fig. 4.14) with a small sliding body inside is rotating about
its midpoint with a constant angular speed, ω. The instantaneous postion,
velocity, and acceleration of the body relative to the slot are given by r, ˙r, ¨r,
respectively. Derive expressions for the inertial velocity and acceleration of
the sliding body.

114
4 Translational Motion of Aerospace Vehicles
4.4. The acceleration due to gravity, g, of a spherical, nonrotating planet is
given by Eq. (3.3). What would be the eﬀective gravitational acceleration, ge,
experienced by an observer standing on the planet at latitude δ if the planet
were rotating at a rate ω from west to east? Express your answer in a north
(in), east (ie), down (id) reference frame with the observer at its origin.
4.5. A particle of mass m is constrained to move along a parabolic path
y = x2. Apart from the force of constraint, the particle is acted upon by a
force −r3r + y2i −x2j, where r = xi + yj. If the particle passes through the
point (1, 1) with speed v, ﬁnd its speed at the point (0, 0).
4.6. Derive a potential function for each conservative force among the follow-
ing (if any):
(a) f = i −zj + xk.
(b) f = yzi + xzj + xyk.
(c) f = sin ωt.
(d) f = x2i + yj.
4.7. Derive the equation of motion for a simple pendulum consisting of a
massless rigid link of length L, suspended from a frictionless pivot, and a bob
of mass m, constrained to move in a plane. If the constraint is removed and
the pendulum is free to swing in any direction, ﬁnd the force acting on the
bob due to the rotation of the earth. [Hint: Assume a latitude, δ, and express
the horizontal position of the bob by polar coordinates (r, θ).]
4.8. Assuming a spherical, nonrotating planet of radius R0 and surface gravity
g0, derive the following equations of atmospheric ﬂight in the vertical plane.
Use the wind axes to resolve the force components, as discussed in Exam-
ple 4.5.
˙h = v sin φ,
˙δ = v cos φ
Re + h,
˙v = fT −D
m
−

g −v2 cos2 φ
Re + h

sin φ,
˙φ = L
mv −
g
v −v cos2 φ
Re + h

cos φ,
g = g0

R0
R0 + h
2
.
4.9. A spacecraft was observed with altitude, speed, and ﬂight-path angle
relative to earth of 1000 km, 10 km/s, and −25◦, respectively. Determine the
position and velocity 20 hours after the observation was taken.
4.10. Express the ﬂight-path angle for an elliptical orbit in terms of the ec-
centric anomaly.

4.6 Summary
115
4.11. Taking the limiting case of a parabola, determine the smallest asymp-
tote angle for a hyperbolic trajectory. What would be the asymptote angle in
the limit that μ vanishes?
4.12. What is the maximum possible ﬂight-path angle in a hyperbolic trajec-
tory?
4.13. A hyperbolic earth departure trajectory has a perigee velocity of 15
km/s at an altitude of 300 km. Calculate the (a) hyperbolic excess velocity,
(b) radius and velocity when the true anomaly is 100◦, (c) time since perigee
to a true anomaly of 100◦.
4.14. Repeat Problem 4.9 with an observed speed of 12 km/s, and the other
quantities unchanged.
4.15. A spacecraft’s closest approach to Jupiter was at a periapsis radius of
300,000km, and the hyperbolic excess velocity was 8.51 km/s. What was the
angle through which the spacecraft’s velocity vector was turned by Jupiter?
(For Jupiter, Gm1 = 126, 711, 995.4 km3/s2.)
4.16. Halley’s comet’s last perihelion was on February 9, 1986. It has a
semi-major axis of 17.9564 a.u. and eccentricity, e = 0.967298. Predict the
next perihelion, and the current heliocentric position of the comet. (1 a.u. =
149, 597, 870.691 km. For the sun, Gm1 = 132, 712, 440, 018 km3/s2.)

5
Orbital Mechanics
5.1 Aims and Objectives
•
To present orbital mechanics in a comprehensive manner, including
orbital maneuvers, relative motion in orbit, and orbit determination for
three-dimensional guidance.
•
To introduce special coordinate frames (celestial, local horizon,
planetary) that can be used to derive equations of translational motion
in subsequent chapters.
•
To numerically solve the three-dimensional Lambert problem, which is
useful in designing trajectories for nonplanar rendezvous (either orbital
or interplanetary).
5.2 Celestial Frame and Orbital Elements
In the previous chapter, we saw that a two-body trajectory is completely de-
scribed by six scalar constants, which we shall call orbital elements. Several
diﬀerent sets of orbital elements can be chosen, depending upon the appli-
cation. An obvious choice is the set formed by the elements of the initial
position and velocity vectors, r0, v0, which, once speciﬁed, determine the or-
bit without ambiguity. Since the orbital motion is planar, one can ﬁx the
position and velocity by deﬁning the plane of the motion and then specify-
ing the two-dimensional position and velocity in the orbital plane. We have
already employed various sets of scalar constants that give us the position in
the orbital plane: (r, θ, τ), (v, φ, τ), (a, e, τ), or (r0, θ −θ0, t −t0), etc. What
remains is to specify the orientation of the orbital plane by using at least three
more scalar constants. In Chapter 2, we saw how the orientation of a coor-
dinate frame can be described using various kinematical parameters (Euler
angles, quaternion, modiﬁed Rodrigues parameters, etc.), each set having its
advantages and disadvantages. Traditionally, Euler angles (Chapter 2) have

118
5 Orbital Mechanics
Z
Y
X
S
8
X
e
n
R
v
r
i
Periapsis
p
h
Ascending Node 
Vernal Equinox 
Fig. 5.1. Euler angle representation of the orbital plane.
been used to represent the orbital plane. Combined with Keplerian parame-
ters for representing a conic section, a, e, and the time of periapsis, τ, the
three Euler angles form the set of classical orbital elements. The Euler angles,
Ω, ω, i, for describing the orientation of the perifocal orbital plane relative to a
planet-centered, stationary coordinate frame, (SXYZ), are shown in Fig. 5.1.
The cartesian frame, (SXYZ), is ﬁxed relative to distant stars and is called a
celestial frame. The axis SX is usually taken to be in the ﬁxed direction of the
vernal equinox, which indicates the location of the sun against a background
of distant stars, as it crosses the equatorial plane from the south to the north.
The vernal equinox thus indicates a direction along the intersection of the
planet’s equatorial plane and the plane of the orbit of the planet around the
sun (called ecliptic plane). On earth, vernal equinox occurs at noon on the
ﬁrst day of spring, around March 21. The axis SZ is either the rotational axis
of the planet or the axis normal to the plane of ecliptic, while SY completes
the orthogonal triad. Normally, the equatorial plane is used as the reference
plane, SXY, when an orbit close to a planet is concerned, while the ecliptic
plane is used for interplanetary trajectories. We recall from Chapter 4 that
the orbital plane is represented by the unit vectors ie, ip, ih, which indicate
the respective directions of the eccentricity, parameter, and angular momen-
tum vectors. The intersection of the orbital plane with the reference plane,
SXY, yields the line of nodes. The ascending node is the name given to the
point on the line of nodes where the orbit crosses the plane SXY from the
south to the north. A unit vector, n, pointing toward the ascending node
makes an angle Ω with SX. The angle Ω is measured in the plane SXY in

5.2 Celestial Frame and Orbital Elements
119
a counter-clockwise direction (Fig. 5.1), and represents a positive rotation of
SX about SZ according to the right-hand rule (Chapter 2) to produce n. It
is called the right ascension of the ascending node. The inclination, i, is the
angle between the orbital plane and SXY and is the positive rotation about
n required to produce ih from SZ. The angle ω represents a positive rotation
of n about ih to produce ie in the orbital plane and is called the argument of
periapsis. Using the Euler angle representation, (Ω)3, (i)1, (ω)3 (Chapter 2),
we can derive the rotation matrix representing the orientation of ie, ip, ih, in
terms of (SXYZ), as follows:
C = C3(ω)C1(i)C3(Ω) .
(5.1)
However, it is more useful to transform the perifocal position and velocity
(which are calculated using the methods of Chapter 4) to the celestial, carte-
sian frame, (SXYZ). In order to do so, we require the inverse transformation
⎧
⎨
⎩
I
J
K
⎫
⎬
⎭= C∗
⎧
⎨
⎩
ie
ip
ih
⎫
⎬
⎭,
(5.2)
where the triad I, J, K denotes the frame, (SXYZ), and C∗is the following
rotation matrix representing the orientation of the celestial frame relative to
the perifocal frame:
C∗.= CT = C3
T (Ω)C1
T (i)C3
T (ω) =
⎛
⎝
c∗11 c∗12 c∗13
c∗21 c∗22 c∗23
c∗31 c∗32 c∗33
⎞
⎠,
(5.3)
where
c∗11 = cos Ω cos ω −sin Ω sin ω cos i,
(5.4)
c∗12 = −cos Ω sin ω −sin Ω cos ω cos i,
(5.5)
c∗13 = sin Ω sin i,
(5.6)
c∗21 = sin Ω cos ω + cos Ω sin ω cos i,
(5.7)
c∗22 = −sin Ω sin ω + cos Ω cos ω cos i,
(5.8)
c∗23 = −cos Ω sin i,
(5.9)
c∗31 = sin ω sin i,
(5.10)
c∗32 = cos ω sin i,
(5.11)
c∗33 = cos i.
(5.12)
It is easy to see that the Euler angle representation, (Ω)3, (i)1, (ω)3, has singu-
larities at i = 0, ±π. Furthermore, the argument of periapsis, ω, is undeﬁned
for a circular orbit, e = 0. Thus, the utility of the classical orbital elements,
a, e, τ, Ω, ω, i, is limited to noncircular orbits, which do not lie in the plane
SXY.

120
5 Orbital Mechanics
Example 5.1. For an earth orbit with a = 8000 km, e = 0.5, τ = −1000 (s), Ω =
60◦, ω = −85◦, and i = 98◦, determine the celestial position and velocity at
t = 50 min.
We begin by calculating the perifocal velocity and position as follows. First,
the mean motion, n =
 μ
a3 = 8.8234 × 10−4 rad/s, and the mean anomaly,
M = n(t −τ) = 3.52934307 rad, are computed. Then, Kepler’s equation is
solved numerically (Chapter 4), to yield E = 3.40106012608 rad, leading to
r = a(cos E −e)ie + a
√
1 −e2 sin Eip = −11732.214ie −1777.541ip km, and
v = an(−sin Eie+
√
1−e2 cos Eip)
1−e cos E
= 1.22097ie −3.983365ip km/s. The rotation
matrix is computed using Eq. (5.3) as follows:
C∗=
⎛
⎝
−0.0765 0.5086
0.8576
0.1448
0.8567 −0.4951
−0.9865 0.0863 −0.1392
⎞
⎠,
from which the celestial position and velocity follow:
r = C∗
⎧
⎨
⎩
−11732.214
−1777.541
0
⎫
⎬
⎭=
⎧
⎨
⎩
−6.653
−3221.591
11420.412
⎫
⎬
⎭km
= −6.653I −3221.591J + 11420.412K km,
v = C∗
⎧
⎨
⎩
1.22097
−3.983365
0
⎫
⎬
⎭=
⎧
⎨
⎩
−6.653
−3221.591
11420.412
⎫
⎬
⎭km/s
= −2.1193I −3.2356J −1.5483K km/s .
5.2.1 Orbit Determination
Frequently, one is required to address the inverse problem of the one presented
in Example 5.1, i.e., the determination of the orbit from measured position and
velocity at a given instant. Finding the shape of the orbit, deﬁned by a, e, τ,
from the position and velocity vectors, has been addressed in Chapter 4. In
order to determine the Euler angles, Ω, ω, i, from the measured position and
velocity in the celestial frame, we can utilize the relationships obtained from
the elementary rotations constituting the rotation matrix, C, of Eq. (5.1). The
ﬁrst step is to compute the unit angular momentum vector from the known
position and velocity vectors, r0, v0, as follows:
ih =
r0 × v0
| r0 × v0 | .
(5.13)
Then the ascending node vector can be calculated by
n =
K × ih
| K × ih | ,
(5.14)

5.2 Celestial Frame and Orbital Elements
121
and, using the elementary rotation C3 about SZ, it follows that
n = I cos Ω + J sin Ω ,
(5.15)
from which the right ascension of ascending node, Ω, is obtained without
quadrant ambiguity. The orbital inclination, i, is also obtained from the an-
gular momentum unit vector simply as
cos i = K · ih ,
(5.16)
from which a unique i follows since 0 ≤i ≤π. The argument of periapsis, ω,
requires the computation of the eccentricity vector by
e = v0 × (r0 × v0)
μ
−r0
r0
,
(5.17)
which leads to the unit eccentricity vector, ie = e
e. From the last elementary
rotation, C3, about ih, we have
cos ω = n · ie,
(5.18)
sin ω = ih · (n × ie) ,
which yield a unique value of ω.
Example 5.2. A spacecraft was observed with the earth-centered, celestial po-
sition and velocity of r = −5000I + 12, 500K km, and v = 5I −8J km/s.
Determine the classical orbital elements of the trajectory.
We solve this problem using the following MATLAB statements:
>>mu=398600.4; %gravitation constant for earth (km^3/s^2)
>> R0=[-5000;0;12500];V0=[5;-8;0]; %initial position (km), velocity (km/s)
>> H=cross(R0,V0),h=norm(H),iH=H/h %angular mom. vector, magnitude, unit vector
H = 100000
h = 1.245240940541227e+005
iH =
8.030574384788244e-001
62500
5.019108990492652e-001
40000
3.212229753915297e-001
>> N=cross([0;0;1],iH)/norm(cross([0;0;1],iH)) %ascending node vector
N =
-5.299989400031800e-001
8.479983040050881e-001
0
>> Omega=acos(N(1,1)) %right ascension of ascending node (rad.)
Omega =
2.129395642138459e+000
%Note: The correct quadrant of Omega is obtained as sin(Omega)>0 and
%
cos(Omega)<0.
>> i=acos(dot([0;0;1],iH))
% orbital inclination (rad.)
i =
1.243775706076561e+000
>> ec=cross(V0,H)/mu-R0/norm(R0),e=norm(ec),ie=ec/e %eccentricity vector
ec = -4.314183524376385e-001
e = 1.976596144782186e+000
ie = -2.182632772893419e-001

122
5 Orbital Mechanics
-5.017556429948389e-001
-2.538483363530645e-001
1.862539073273533e+000
9.422962187750184e-001
>> cosomega=dot(N,ie), sinomega=dot(iH,cross(N,ie)) %cosine, sine of omega
cosomega = -9.958365309694045e-002
sinomega =
9.950291935596002e-001
>> omega=acos(cosomega) %argument of perigee (rad)
omega =
1.670545312360925e+000
%Note: The correct quadrant of omega is obtained as sin(omega)>0 and
%
cos(omega)<0.
>> p=h^2/mu, a=p/(1-e^2) %parameter, semi-major axis (km)
p = 3.890174219594361e+004
a =
-1.338240382621893e+004
>> costheta0=dot(ie,R0)/norm(R0) %cosine of true anomaly
costheta0 =
9.559610212176732e-001
>> p=norm(R0)*(1+e*costheta0) %confirm parameter (km)
p =
3.890174219594361e+004
>> ip=cross(iH,ie) %unit parameter vector
ip =
5.544906602376137e-001
-8.268291670873370e-001
-9.430607702007031e-002
>> sintheta0=dot(ip,R0)/norm(R0) %sine of true anomaly
sintheta0 =
-2.934936556596461e-001
>> theta0=2*pi+asin(sintheta0) %true anomaly (rad)
theta0=
5.985305908740866e+000
>> H=2*atanh(tan(theta0/2)*sqrt((e-1)/(1+e))) %hyperbolic anomaly
H = -1.723212710379634e-001
>> a*(1-e*cosh(H))/norm(R0) %check hyperbolic anomaly
ans =
1
>> tau=(H-e*sinh(H))/sqrt(-mu/a^3) %time of perigee (s)
tau = 4.167937786907602e+002
Hence, the classical orbital elements are
a = −13, 382.404 km,
e = 1.9765961448,
τ = 416.7938 s,
Ω = 122.0054◦,
ω = 95.7152◦,
i = 71.2631◦.

5.3 Spherical Celestial Coordinates and Local Horizon
123
Note that a positive τ indicates that the spacecraft is approaching the earth
(which is also evident from a true anomaly in the fourth quadrant).
Rather than using the position and velocity vectors at a given time to
ﬁnd the orbit, we can derive the orbital elements from the position vector
at two diﬀerent time instants. The determination of the orbit from two po-
sition vectors, r(t1), r(t2), is known as Lambert’s problem and is very useful
in the navigation and rendezvous of spacecraft, and targeting of long-range,
surface-to-surface missiles. Lambert’s problem is a two-point, boundary-value
problem, because its solution must satisfy conditions at two diﬀerent points.
Generally, a closed-form solution to such a problem is not possible, and we
have to resort to an iterative numerical solution procedure. We shall have an
occasion to discuss Lambert’s problem later in this chapter.
5.3 Spherical Celestial Coordinates and Local Horizon
G
M
E
X
Z
Y
x (up)
y
(east)
S
A
v
O
z
(north)
r
N
Orbit
Equator
M
i
Fig. 5.2. Spherical celestial coordinates and the local horizon.
A spherical coordinate system based upon the celestial frame can be derived
using the radial distance, r, and two angles, δ, λ, as shown in Fig. 5.2. The
angle δ called the declination, or, celestial latitude, is the angle between the
position vector, r, with the equatorial plane, SXY (deﬁned positive above
the plane), while λ—called the right ascension, or celestial longitude—is the
angle made by the projection of r on SXY with the vernal equinox direction,

124
5 Orbital Mechanics
SX, deﬁned positive toward the east. In order to specify the velocity vector,
v, a moving local horizon frame (oxyz) (denoted by the triad i, j, k), can be
employed, as depicted in Fig. 5.2. The axis, ox, is along r, while oy and oz
point toward the east and north, respectively. The velocity vector, v, makes
an angle, φ—called the ﬂight-path angle—with the local horizontal plane,
oyz, deﬁned positive above the plane. The horizontal projection of v makes
an angle, A, with oz (north), called the velocity azimuth, and deﬁned positive
toward the east. The parameters (r, λ, δ, v, φ, A) form an alternative set of
orbital parameters for determining the position and velocity.
The orientation of the local horizon frame, (oxyz), relative to the Carte-
sian, celestial frame, (SXYZ), can be obtained using the Euler angle represen-
tation, (λ)3, ( π
2 −δ)2, ( −π
2 )2. Therefore, the rotation matrix relating the two
frames is obtained as
⎧
⎨
⎩
i
j
k
⎫
⎬
⎭= CLH
⎧
⎨
⎩
I
J
K
⎫
⎬
⎭,
(5.19)
where
CLH = C2
−π
2

C2
%π
2 −δ
&
C3(λ)
(5.20)
=
⎛
⎝
cos δ cos λ
cos δ sin λ
sin δ
−sin λ
cos λ
0
−sin δ cos λ −sin δ sin λ cos δ
⎞
⎠.
The spherical coordinates, r, δ, λ, can be derived from the celestial, Carte-
sian coordinates deﬁning the position vector, r = rXI + rY J + rZK, by using
the rotation matrix of Eq. (5.20) as follows:
r = ri = r(cos δ cos λI + cos δ sin λJ + sin δK) ,
(5.21)
from which we have r =| r |=
√
rX 2 + rY 2 + rZ 2,
δ = sin−1 rZ
r = sin−1 r · K
r
,
(5.22)
and
sin λ =
rY
r cos δ =
r · J
r cos δ ,
(5.23)
cos λ =
rX
r cos δ =
r · I
r cos δ .
The spherical coordinates, v, φ, A, are derived from the celestial, Cartesian
coordinates deﬁning the velocity vector, v = vXI +vY J +vZK, by expressing
the same in the local horizon frame as
v = CLH
⎧
⎨
⎩
vX
vY
vZ
⎫
⎬
⎭
= v(sin φi + cos φ sin Aj + cos φ cos Ak) ,
(5.24)

5.3 Spherical Celestial Coordinates and Local Horizon
125
resulting in v =| v |= √vX2 + vY 2 + vZ 2,
φ = sin−1 v · i
v
,
(5.25)
and
sin A =
v · j
v cos φ,
(5.26)
cos A =
v · k
v cos φ .
A useful relationship among the declination, δ, orbital inclination, i, and
the velocity azimuth, A, is given by the following equation of spherical
trigonometry1 for the right spherical triangle formed by the arcs MO, ON,
and NM (Fig. 5.2):
cos i = cos δ sin A ,
(5.27)
which can also be derived by substituting Eqs. (5.21) and (5.24) into Eq. (5.16).
Another relationship arising out of the same right spherical triangle is the fol-
lowing:
tan i sin(λ −Ω) = tan δ .
(5.28)
It is clear from Eq. (5.27) that the minimum orbital inclination possible for
a given declination is obtained for A = 90◦, which denotes a ﬂight path due
east, and is equal to the local declination. Thus, it is not possible to launch
a spacecraft into an orbit with an inclination smaller than the latitude of the
launch site. Of course, as seen later in this chapter, the orbital inclination
can be changed using propulsive maneuvers, but these are quite expensive
and signiﬁcantly increase the cost of launch. An zero inclination orbit can be
obtained from an equatorial launch site without requiring a propulsive plane
change. Such a launch site also gives the maximum velocity advantage due to
the earth’s rotation for an eastward launch. The market for geosynchronous
satellite launches, which is currently the most lucrative, requires a zero orbital
inclination, thus dictating that the launch sites be located as close to the
equator as physically possible.
Example 5.3. For the spacecraft in Example 5.1, determine the declination,
right ascension, ﬂight-path angle, and velocity azimuth 50 min after the
present time.
The celestial position and velocity vectors have already been calculated
at t = 50 min to be r = −6.653I −3221.591J + 11, 420.412K km and v =
−2.1193I −3.2356J −1.5483K km/s, respectively. We begin by computing
1 Spherical trigonometry is a branch of mathematics devoted to the study of angular
relationships among the arcs on the surface of a sphere (the common, plane
trigonometry studies the angular relationships among the straight lines on a ﬂat
plane). A useful textbook on spherical trigonometry is by Smail [60].

126
5 Orbital Mechanics
the radius, r =| r |= 11, 866.107 km, and speed, v =| v |= 4.166 km/s. From
Eqs. (5.22) and (5.23), we have
δ = sin−1 11420.412
11866.107 = 74.2467◦,
sin λ =
−3221.591
11866.107 cos(74.2467◦) = −0.9999979
cos λ =
−6.653
11866.107 cos(74.2467◦) = −0.00206506,
which yield λ = 269.8817◦. The rotation matrix of the local horizon frame is
the following, according to Eqs. (5.19):
CLH =
⎛
⎝
−0.0005607 −0.2714952 0.9624396
0.9999979
−0.0020651
0
0.0019875
0.9624376
0.2714958
⎞
⎠.
The velocity components in the local horizon frame are now obtained as
v = CLH
⎧
⎨
⎩
−2.1193
−3.2356
−1.5483
⎫
⎬
⎭
= −0.6104843i −2.1126542j −3.5386385k .
Finally, by employing Eqs. (5.25) and (5.26), we get the ﬂight-path angle and
velocity azimuth as follows:
φ = sin−1 −0.6104843
4.166
= −8.4259◦,
sin A =
−2.1126542
4.166 cos(−8.4259◦) = −0.51261604,
cos A =
−3.5386385
4.166 cos(−8.4259◦) = −0.85861796,
which yield A = 210.8382◦. Finally, we conﬁrm that Eqs. (5.27) and (5.28)
are satisﬁed for the calculated values of δ, λ, and A by checking cos i =
−0.13917310096 = cosδ sin A and tan δ = 3.54495 = tan i sin(λ −Ω).
5.4 Planet Fixed Frame
Instead of a celestial frame, it is often more useful to use a spherical coordinate
system that is ﬁxed to the planet and rotates with it. Such a planet-centered,

5.4 Planet Fixed Frame
127
Ga
E
Z
Yc
Xc
x (up)
y
(east)
S
Ac
l
O
z
(north)
r
Y
Equator
Orbit
M
X
G
et
M
X
+
vc
Fig. 5.3. Planet ﬁxed, rotating coordinates and the local horizon.
rotating frame, (SX′Y ′Z), which shares the axis SZ with the celestial frame,
(SXYZ), is shown in Fig. 5.3. A set of spherical coordinates in the planet ﬁxed
frame is r, δ, l, denoting the radius, latitude (or declination), and longitude,
respectively. For the velocity relative to the rotating frame, v′, the spherical
coordinates v′, φ′, A′ can be employed, representing the relative magnitude,
ﬂight-path angle, and velocity azimuth measured in the local horizon frame
(oxyz). Of course, the relationship between the inertial velocity, v, and the
velocity relative to the rotating frame, v′, is given by
v = v′ + ω × r ,
(5.29)
where ω = ωeK is the angular velocity of the planet, and r = ri. It is pos-
sible to obtain the relationship between the inertial and relative velocity co-
ordinates. We begin by expressing the relative velocity as v′ = v′(sin φ′i +
cos φ′ sin A′j + cos φ′ cos A′k), and substitute it along with Eq. (5.24), into
Eq. (5.29) to yield
v(sin φi + cos φ sin Aj + cos φ cos Ak)
= v′(sin φ′i + cos φ′ sin A′j + cos φ′ cos A′k) + ωer cos δj.
(5.30)
On comparing the respective vector components on both sides of Eq. (5.30),
we have
v sin φ = v′ sin φ′,
v cos φ sin A = v′ cos φ′ sin A′ + ωer cos δ,
(5.31)
v cos φ cos A = v′ cos φ′ cos A′ .

128
5 Orbital Mechanics
Thus, the explicit relationships between the inertial and relative velocity co-
ordinates are given by the following sequence:
tan A′ = tan A −
ωer cos δ
v cos φ cos A,
tan φ′ = tan φcos A′
cos A ,
(5.32)
v′ = v sin φ
sin φ′ .
Example 5.4. A spacecraft is to be launched into an earth orbit of inclination
80◦such that the inertial speed of the ascending orbit at an altitude of 200 km
and latitude 10◦is 8 km/s, with a ﬂight-path angle of 5◦. What is the velocity
of the spacecraft relative to the earth at the given point?
We begin by computing the inertial velocity azimuth at the given point us-
ing Eq. (5.27) as A = sin−1 cos(80◦)
cos(10◦) = 10.1559◦, or 169.8441◦. Since the given
point is on the ascending node of the latitude crossing, the correct velocity
azimuth is A = 10.1559◦. The rotational speed of the earth is calculated from
the mean sidereal day (23 hours, 56 minutes, and 4.09 seconds)2 as follows:
ωe =
2π
23 × 3600 + 56 × 60 + 4.09 = 7.29211 × 10−5 rad/s .
Finally, we calculate the relative velocity coordinates from Eq. (5.32) by sub-
stituting r = 6578.14 km, v = 8 km/s, and φ = 5◦:
A′ = tan−1

tan A −
ωer cos δ
v cos φ cos A

= 6.7815◦,
φ′ = tan−1

tan φcos A′
cos A

= 5.0438◦,
v′ = v sin φ
sin φ′ = 7.9307 km/s .
Note that the change in speed and velocity azimuth caused by the earth’s
rotation is signiﬁcant, while that in the ﬂight-path angle is relatively small.
The rotation matrix representing the orientation of (SX′Y ′Z) relative to
(SXYZ) is obtained simply as follows:
⎧
⎨
⎩
I′
J′
K
⎫
⎬
⎭= Cpf
⎧
⎨
⎩
I
J
K
⎫
⎬
⎭,
(5.33)
where
2 The mean sidereal day is the average time the earth takes to complete one rotation
against the background of distant stars, and is obtained by adding
360◦
365.25 to the
360◦angle rotated in 24 hours relative to the sun (the mean solar day).

5.5 Single Impulse Orbital Maneuvers
129
Cpf = C3(λ −l) =
⎛
⎝
cos(λ −l)
sin(λ −l) 0
−sin(λ −l) cos(λ −l) 0
0
0
1
⎞
⎠.
(5.34)
Thus, the coordinate transformation between planet ﬁxed and local horizon
frames is given by
⎧
⎨
⎩
i
j
k
⎫
⎬
⎭= CLHCpf
T
⎧
⎨
⎩
I′
J′
K
⎫
⎬
⎭.
(5.35)
It is clear from above that the longitude, l, is an important planet ﬁxed coordi-
nate. Lines of constant longitude on the planet’s surface are called meridians.
The ﬁxed stars cross each meridian at the same local time; thus, a meridian
and its local time have been synonymous since the earliest days of navigation.
In order to utilize the planet ﬁxed coordinates, the longitude, l, must be
calculated at a given time, t, from the current right ascension, λ, and the right
ascension of the zero longitude line, SX′ (the Greenwich meridian on earth),
λG, known at some previous time, t = 0, as follows (Fig. 5.3):
l = λ −λG −ωet.
(5.36)
The right ascension of SX′ is usually available from periodically published
astronomical (or ephemeris) charts, such as the American Ephemeris and
Nautical Almanac for the right ascension of the Greenwich meridian.
Example 5.5. Calculate the longitude of the spacecraft in Example 5.3 at t =
50 min if the right ascension of the Greenwich meridian at t = 0 is 154◦.
In Example 5.3, we had obtained the current right ascension, λ = 269.8817◦.
On substituting λG = 154◦, ωe = 0.004178074648◦/s, and t = (50)(60) s
into Eq. (5.36), we have l = 269.8817◦−154◦−(0.004178074648)(3000) =
103.3475◦. The decrease in the longitude caused by the earth’s rotation is
ωet = 12.5342◦.
5.5 Single Impulse Orbital Maneuvers
It is often necessary to change a spacecraft’s trajectory by the use of propulsive
maneuvers. Since the duration of the rocket thrust applied in such a maneuver
is negligible in comparison to the orbital time period (or the time scale
2π√
p3
√μ
for the open orbits), it is reasonable to assume that the velocity change occurs
instantaneously at the point of thrust application. Hence, orbital maneuvers
are usually regarded as being impulsive, and the velocity change is given by
the magnitude and direction of a velocity impulse. The simplest impulsive
maneuver is the case of intersecting initial and ﬁnal trajectories, as shown
in Fig. 5.4, where a single velocity impulse, Δv, is suﬃcient to produce a
velocity change from vi to vf at a given orbital position, r. The vector vf

130
5 Orbital Mechanics
B
vi
vf
vf cos
-vi (=%vcos
)
B
C
vf sin
 (='v sinC )
B
%v
C
Fig. 5.4. Impulsive maneuver for intersecting initial and ﬁnal trajectories.
makes an angle α with vi. From the vector triangle in Fig. 5.4, we see that
the relationship among the magnitudes, vi, vf, Δv, is given by
Δv =

vi2 + vf 2 −2vivf cos α .
(5.37)
A general, single impulse maneuver may change both the shape and the plane
of the orbit. Sometimes, it is necessary to change only the orbital shape with-
out aﬀecting the orbital plane. Such maneuvers are said to be coplanar. In a
coplanar maneuver, there can be a simultaneous change in the speed, (vf −vi),
and the ﬂight-path angle, α, leading to a new, coplanar trajectory. Often it is
required to change the plane of the orbit without changing its shape. Such a
maneuver is called a plane change maneuver and does not involve a modiﬁ-
cation of either the speed or the ﬂight-path angle at the point of the impulse.
From Eq. (5.37), it is clear that a plane change by angle α at a constant speed,
vi, requires the following impulse magnitude, applied at an angle β = α
2 + 90◦
to vi:
Δv = 2vi sin α
2 .
(5.38)
It is evident from Eq. (5.38) that the velocity impulse magnitude for a plane
change by a given angle is directly proportional to the speed at which the
change is performed. Hence, a plane change by even a small angle can require
a large velocity impulse, which translates into a considerable increase in the
required propellant mass (causing a reduction in the payload). For this reason,
plane changes should be carried out at the smallest possible speed (e.g., apogee
of an elliptical orbit). For a plane change by 60◦, the impulse magnitude is
equal to the ﬂight speed.
Example 5.6. A spacecraft in a circular, earth orbit of altitude 500 km and
inclination 10◦has to be sent to an elliptical orbit with a perigee altitude of
200 km, an apogee altitude of 700 km, and an inclination of 5◦. Calculate the
magnitude of the velocity impulses required for the transfer.

5.5 Single Impulse Orbital Maneuvers
131
It is clear that an impulse can be provided at the intersection of two
coplanar orbits whose shapes are identical to those of the initial and ﬁnal
orbits. Since the ﬁnal orbital plane is not uniquely speciﬁed, it is suﬃcient to
send the spacecraft to any plane with the given inclination. Thus, we have a
choice of where to apply the required inclination change. The most desirable
point for making the plane change is at the apogee of the elliptical orbit,
because it requires the least impulse magnitude. We calculate the shape of
the ﬁnal orbit, and the ﬁrst velocity impulse at an intersection point, r =
ri = 6878.14 km, as follows:
e = ra −rp
ra + rp
= 0.03661319,
a =
rp
1 −e = 6828.14 km,
vp =
(
2μ
rp
−μ
a = 7.9254818 km/s,
vi =
' μ
ri
= 7.6126061 km/s,
vf =
'
2μ
ri
−μ
a = 7.5846827 km/s,
cos α = cos φ = rpvp
rivf
= 0.999356306,
Δv1 =

vi2 + vf 2 −2vivf cos α = 0.27406656 km/s .
The transfer angle, α, is determined from α = cos−1 0.999356306 = ±2.0559◦,
each sign denoting one of the two possible intersection points. The direction of
the ﬁrst impulse in the orbital plane is given by β = sin−1 vf sin α
Δv
= ±83.1252◦
(Fig. 5.4). Finally, we apply the second velocity impulse at the apogee, r =
ra = a(1 + e), of the elliptical orbit resulting from the ﬁrst impulse, in order
to change the orbital inclination by 5◦:
va =
'
2μ
ra
−μ
a = 7.3656256 km/s,
Δv2 = 2va sin 5◦
2 = 0.64256815 km/s .
The second impulse makes an angle β = 92.5◦with the initial orbital plane.
The total velocity impulse magnitude for the orbital change is Δv = Δv1 +
Δv2 = 0.91663471 km/s.
When the initial and ﬁnal orbital planes are unambiguously deﬁned by the
given sets of Ω, ω, i, we cannot choose the point of plane change arbitrarily.
For the general plane change, we must wait until the spacecraft reaches the
line of nodes formed by the intersection of the two orbital planes, at which

132
5 Orbital Mechanics
v
Final Orbit 
Initial Orbit 
nif
hi
hf
B
B
%
vf
vi
Fig. 5.5. Impulsive maneuver for a general plane change.
point a velocity impulse is applied to change the orbital plane. Of course, if
the maneuver has to be performed by a single velocity impulse, the two orbits
should also intersect at the line of nodes, which is true only for circular orbits
of equal radii. Figure 5.5 describes the geometry of the general plane change in
terms of the initial and ﬁnal orbital angular momenta, hi and hf, respectively.
The nodal vector between the two planes denoting the point of application of
the velocity impulse is given by
nif =
hi × hf
| hi × hf | .
(5.39)
The impulsive maneuver is carried out at ri = rinif, from which the speed of
plane change, vi, is calculated. The cosine of the angle, α, between the two
planes is obtained as follows:
cos α = hi · hf
hihf
.
(5.40)
The direction of the plane change impulse relative to the initial velocity vector
is given by β =
α
2 + 90◦, which results in the following expression for the
velocity impulse:
Δv = Δv(cos β vi
vi
+ sin β hi
hi
) ,
(5.41)
leading to
vf = vi + Δv = vi + Δv(cos β vi
vi
+ sin β hi
hi
) .
(5.42)
It is clear from Eqs. (5.38) and (5.42) that in order to achieve a plane change
without aﬀecting the speed (i.e., vf = vi), the angle β must be greater than
90◦.

5.5 Single Impulse Orbital Maneuvers
133
Example 5.7. A spacecraft is in an elliptical, earth orbit of a = 6900 km, e =
0.6 s, Ω = 120◦, ω = 25◦, and i = 10◦. When the spacecraft is at its apogee, a
velocity impulse is applied at an angle β = 100◦to the orbital plane, measured
in a counter-clockwise direction from the initial velocity vector, such that there
is no change in the speed. Determine the new orbit of the spacecraft.
Since the impulse is applied out of the orbital plane, at an angle greater
than 90◦, it does not aﬀect the orbital speed, or the ﬂight-path angle; thus
a and e are unchanged, and the shape of the orbit is not modiﬁed. The
magnitude of the impulse is obtained from Eq. (5.38)by substituting α =
2β−180◦= 20◦. A major component of the velocity impulse is in the direction
of the initial angular momentum vector, hi; thus, it would tend to increase
the orbital inclination, i, and decrease the right ascension of the ascending
node, Ω. We begin the solution by deriving the angular momentum vector
of the initial orbital planes from the perifocal apogee position and velocity,
transformed into the celestial frame, by the rotation matrix, C∗. The nodal
vector, nif, essentially lies toward the apogee. The ﬁnal velocity at the orbit
intersection is obtained by vectorially adding the velocity impulse to the initial
velocity. Thus, the ﬁnal angular momentum can be calculated, and the orbital
elements deﬁning the new orbital plane obtained. The necessary computations
are performed using the following MATLAB statements and the program
rotation.m, which is tabulated in Table 5.1:
>> mu=398600.4; %gravitation constant for earth (km^3/s^2)
>> a=6900; e=0.6; %semi-major axis (km) and eccentricity
>> n=sqrt(mu/a^3); %mean motion (rad/s)
>> ra=[-a*(1+e);0;0],va=[0;-a*n*sqrt(1-e^2)/(1+e);0] %position(km), velocity(km/s)
ra =
-11040
va =
0
0
-3.80026886920661
0
0
>> dtr=pi/180; Ci=rotation(10*dtr,120*dtr,25*dtr) %rotation matrix for initial orbit
Ci =
-0.8136
-0.5617
0.1504
0.5768
-0.8123
0.0868
0.0734
0.1574
0.9848
>> rai=Ci*ra; vai=Ci*va; hi=cross(rai,vai) %angular momentum of initial orbit(km^/s)
hi =
6309.34476083312
3642.70189607715
41317.5780750187
>> magdv=2*norm(va)*sin(10*dtr) %magnitude of velocity impulse (km/s)
magdv =
1.31981952756419
>> dv=magdv*(cos(100*dtr)*vai/norm(vai)+sin(100*dtr)*hi/norm(hi)) %vel.change(km/s)
dv =
0.0667421843481491
-0.0733077336502738
1.31609081842981
>> vf=vai+dv %final velocity (km/s)
vf =
2.20117178698127
3.01352761007753
0.718009460772585
>> norm(vf)/norm(vai) %check that final and initial speeds are equal

134
5 Orbital Mechanics
ans = 1
>> hf=cross(rai,vf) %angular momentum of final orbit (km^/s)
hf =
-2130.55310771777
-8232.56883673061
41084.120049037
>> norm(hf)/norm(hi) %check that angular momentum magnitude is constant
ans =
1
>> iH=hf/norm(hf);N=cross([0;0;1],iH)/norm(cross([0;0;1],iH)) %ascending node
N =
0.968105836625469
-0.250541591540609
0
>> Omega=asin(N(2,1)) %right ascension of ascending node (rad)
Omega = -0.253239648907155
>> i=acos(dot([0;0;1],iH))
%orbital inclination (rad)
i = 0.204102644403926
>> ec=cross(vf,hf)/mu-rai/norm(rai),e=norm(ec),ie=ec/e %eccentricity vec.
ec =
-0.488155025991245
e =
0.6
ie =
-0.813591709985409
0.346072018114803
0.576786696858004
0.0440321346000229
0.0733868910000383
>> cosomega=dot(N,ie), sinomega=dot(iH,cross(N,ie))%cosine, sine of omega
cosomega = -0.932151940077225
sinomega = 0.362067342645351
>> omega=acos(cosomega) %argument of perigee
omega = 2.77110789553964
%confirm Euler angles by checking whether the apogee position is correctly
%transformed from perifocal to celestial frame by comparing with the apogee
%position of the initial orbit (both must be the same).
>> Cf=rotation(i,Omega,omega);raf=Cf*ra, rai
raf =
8982.05247823891
rai = 8982.05247823891
-6367.72513331237
-6367.72513331237
-810.191276640425
-810.191276640422
The ﬁnal orbital plane is thus described by Ω = −14.5096◦, i = 11.6942◦,
and ω = 158.7728◦, which implies an increase of about 1.7◦in the inclination, a
decrease of about 134.5◦in right ascension of ascending node, and an increase
of about 133.8◦in the argument of perigee.
When both the shape and the plane of an orbit are to be changed, we can
choose the sequence of the coplanar and plane change maneuvers, depending
upon the speeds at which they are to be performed (plane change is more
eﬃcient at the smaller speed). However, when the coplanar and the plane
change maneuvers are to be performed at the same radius, it is more eﬃcient
to combine the two maneuvers into a single impulse maneuver, rather than

5.6 Multi-Impulse Orbital Transfer
135
Table 5.1. M-ﬁle rotation.m for Calculating the 3-1-3 Euler Angle Rotation Matrix
function C=rotation(i,Om,w)
%Rotation matrix of 3-1-3 Euler angles (radians)
%i=orbital inclination
%Om=right ascension of ascending node
%w=argument of periapsis
%(c) 2006 Ashish Tewari
L1=cos(Om)*cos(w)-sin(Om)*sin(w)*cos(i);
L2=-cos(Om)*sin(w)-sin(Om)*cos(w)*cos(i);
L3=sin(Om)*sin(i);
M1=sin(Om)*cos(w)+cos(Om)*sin(w)*cos(i);
M2=-sin(Om)*sin(w)+cos(Om)*cos(w)*cos(i);
M3=-cos(Om)*sin(i);
N1=sin(w)*sin(i);
N2=cos(w)*sin(i);
N3=cos(i);
C=[L1 L2 L3;M1 M2 M3;N1 N2 N3];
carrying out each separately. In such a case, the velocity impulses required
for the separately performed individual maneuvers form two sides of a vector
triangle, whose resultant is the impulse required for the combined maneuver
(Fig. 5.4). An example is the combination of the circularization maneuver—
required for converting an elliptical orbit into a coplanar, circular one—with
the plane change maneuver at the apogee.
5.6 Multi-Impulse Orbital Transfer
When the initial and ﬁnal orbits do not intersect, the orbital transfer cannot be
made by a single impulse, and a multi-impulse maneuver becomes necessary.
Even for intersecting, coplanar orbits, it is often more eﬃcient to employ a
multi-impulse transfer rather than a single impulse maneuver. It is evident
from Eq. (5.37) that in a coplanar maneuver, the minimum velocity impulse
magnitude for a given pair of initial and ﬁnal speeds, vi, vf, corresponds to
the case of α = 0, which implies that the velocity impulse is applied in the
direction of the initial (and ﬁnal) velocity vector. Such an impulse is said to be
tangential. Therefore, a coplanar maneuver involving the minimum possible
total velocity change arising out of tangential velocity impulses requires the
least propellant mass and is said to be optimal between a given pair of initial
and ﬁnal orbits. The trajectory connecting the initial and ﬁnal orbits must
essentially be elliptical, and the tangential velocity impulses can occur at the
periapsis and the apoapsis of this emphtransfer ellipse.
Example 5.8. Calculate the smallest total velocity change required in a two-
impulse orbital transfer from the circular earth orbit of 500 km altitude to
the intersecting elliptical, earth orbit of Example 5.7.
The optimal maneuvers between coplanar circular and elliptical orbits in-
volve the smallest total magnitude of tangential impulses applied at the initial
and ﬁnal orbits. Since the initial orbit is circular, any point can be chosen to

136
5 Orbital Mechanics
apply a tangential impulse. However, in the ﬁnal elliptical orbit, there are
only two points where tangential velocity changes can take place, namely the
perigee and the apogee. The smallest possible transfer ellipse ends at either
the perigee or the apogee of the ﬁnal elliptical orbit, and begins at a point
in the circular orbit that is directly opposite to the terminating point. The
required transfer ellipse in each case is shown in Fig. 5.6.
%v2
Final Orbit 
Initial Orbit 
ri
rp
Transfer
Ellipse
#1
%v1c
Transfer
Ellipse
#2
%v2c
ra
%v1
Fig. 5.6. Optimal transfers between coplanar, circular, and elliptical orbits.
When the initial and ﬁnal orbits are circular, the optimal maneuver is
called a Hohmann transfer. As shown in Fig. 5.7, a Hohmann transfer consists
of two tangential velocity impulses, each applied when the spacecraft is at the
initial and ﬁnal radius, respectively.
The magnitudes of the two velocity impulses in a Hohmann transfer are
easily obtained by merely subtracting the initial speed from the ﬁnal speed at
respective instants as follows:
Δv1 = vf1 −vi1 =
'
2μ
ri
−μ
a −
' μ
ri
,
(5.43)
and
Δv2 = vf2 −vi2 =
' μ
rf
−
(
2μ
rf
−μ
a ,
(5.44)

5.6 Multi-Impulse Orbital Transfer
137
Final Orbit 
%v2
%v1
ri
rf
Transfer
Ellipse
Initial Orbit 
Fig. 5.7. Hohmann transfer between two circular, coplanar orbits.
where ri, rf are the initial and ﬁnal circular orbit radii, respectively, and a
refers to the semi-major axis of the transfer ellipse. From Fig. 5.7, it is clear
that a = ri+rf
2
. The time required for a Hohmann transfer, tH, is half the
period of the transfer ellipse and is given by
tH = π
(
a3
μ = π(ri + rf)
3
2
√8μ
.
(5.45)
Example 5.9. Calculate the velocity impulses and the time required for a
Hohmann transfer from a circular, earth orbit of altitude 250 km (parking
orbit) to a geosynchronous orbit.
A geosynchronous orbit is a circular, equatorial earth orbit with the orbital
period equal to the sidereal rotational rate of earth. Thus, a satellite placed
in a geosynchronous orbit appears to be ﬁxed above a given point on the
earth’s surface. The radius of the geosynchronous orbit is easily calculated
from earth’s sideral period, Ts = 23 hr, 56 min, 4.09 s as follows:
rf =
Ts√μ
2π
 2
3
= 42, 164.17 km.
The semi-major axis of the transfer ellipse is thus a = ri+rf
2
= 24, 396.155 km.
The two impulse magnitudes are then calculated by
Δv1 =
'
2μ
ri
−μ
a −
' μ
ri
= 2.44 km/s,
Δv2 =
' μ
rf
−
' μ
rf
−μ
a = 1.472 km/s .

138
5 Orbital Mechanics
Both the impulses are applied in the direction of motion. The Hohmann trans-
fer time is computed as follows:
tH = π
(
a3
μ = 18, 961.08 s (5 hr, 16 min, 1.08 s).
5.7 Relative Motion in Orbit
The relative motion between two spacecraft is an important dynamic problem
from the viewpoint of rendezvous with an orbiting space station, targeting of
satellites, and ejecting of small items from spacecraft. Many texts on space
dynamics model such relative motion by approximate, linearized equations,
called Clohessy–Wiltshire equations [9]. However, such a model is invalid when
considering moderately large separation between spacecraft. We shall adopt
the more general approach of exact two-body equations of relative motion,
expressed in a rotating frame attached to the spacecraft in the circular orbit
(called the target). In such a case, the orbital equations of the two objects are
simultaneously solved, and the relative separation and velocity obtained by
vector subtraction.
Hohmann transfer can be utilized in a planar orbital rendezvous between
two spacecraft, initially in concentric circular orbits of diﬀerent radii. Let the
target spacecraft be in the higher orbit. The initial angular separation (phase
angle) of the two spacecraft is given by the lead angle Δθ. Since the rendezvous
in a Hohmann transfer must take place at the apogee (Fig. 5.7), the object
spacecraft must wait for some time prior to launching, until the phase angle
becomes just right (θ = θH) for a successful rendezvous. This ideal value of
the phase angle is calculated from the initial and ﬁnal orbital radii as follows:
(π −θH)
2π
Tf = π(ri + rf)
3
2
√8μ
,
(5.46)
or,
θH = π
⎡
⎣1 −
#1 + ri
rf
2
$ 3
2 ⎤
⎦.
(5.47)
Clearly, 0 ≤θH ≤116.36◦. The waiting time, tw, necessary for the object
spacecraft depends upon the value of the actual phase angle θH + Δθ. The
maximum value of tw occurs when Δθ = 2π and is called the synodic period,
Ts, given by
Ts =
2π
ni −nf
,
(5.48)
where ni, nf are the orbital frequencies of the initial and ﬁnal orbits, respec-
tively. If the diﬀerence between the two orbital radii is small, the synodic

5.7 Relative Motion in Orbit
139
period can be very large. For example, a transfer between earth orbits of al-
titudes 185 km and 222 km involves a synodic period of approximately one
week. The waiting period is related to the synodic period by
tw = Δθ
2π Ts .
(5.49)
Thus, we arrive at the concept of launch window for achieving the Hohmann
transfer for rendezvous with a space station, or a planet.
RT
Y
X
S
Z
VT
R
r
y
x
z
Target
spacecraft
Object
spacecraft
V
Fig. 5.8. Geometry of relative motion in orbit.
The actual problem of relative motion between two orbits is much more
complicated than Hohmann transfer, due to an inherently three-dimensional
character. Consider the maneuvering spacecraft (called the object), located by
R in the planet centered celestial frame, I, J, K, with orbital velocity V. The
target spacecraft is in an orbit deﬁned by either the classical orbital elements,
a, e, i, Ω, ω, τ, or an initial condition, with instantaneous position and velocity,
RT, VT. The relative position and velocity of the object are expressed in the
local horizon frame ﬁxed to the center of mass of the target, i, j, k (Fig. 5.8),
as follows:
r .= R −RT = xi + yj + zk,
v .= V −VT = ˙xi + ˙yj + ˙zk.
(5.50)
It is assumed that the initial conditions of the object at time t = 0 are known
and given by the relative position and velocity, r0, v0. We can write a program

140
5 Orbital Mechanics
for propagating the position of the two spacecraft in their respective orbits,
using an appropriate method such as Lagrange’s coeﬃcients (Chapter 4):

R
V

=
 f g
˙f
˙g
 
R0
V0

,
(5.51)
and

RT
VT

=
fT gT
˙fT
˙gT
 
RT0
VT0

.
(5.52)
The transformation from the respective orbital perifocal frames to the com-
mon celestial frame requires the rotation matrix, C∗, given by Eq. (5.3) for
each each spacecraft. Finally, one needs to transform the relative position and
velocity, r, v, from the celestial frame, I, J, K, to the target spacecraft’s local
horizon frame, i, j, k, using the rotation matrix CLH given by Eq. (5.20).
Example 5.10. A spacecraft is launched into an earth orbit of a = 6700 km, e =
0.01 s, Ω = 120◦, ω = −50◦, i = 91◦, and τ = −2000 s. In order to avoid
a possible collision, another spacecraft (originally in a circular orbit) ﬁres its
rockets, sending it into an orbit with a = 6600 km, e = 0.1 s, Ω = 110◦, ω =
−25◦, i = 10◦, and τ = −1000 s. Plot the relative velocity and position of the
second spacecraft with respect to the ﬁrst for the ﬁrst two orbital periods of
the ﬁrst (target) spacecraft.
A program called relative.m for the required computation is tabulated in
Table 5.2. This code requires the trajectory code, trajE.m (Table 4.3), which
in turn calls kepler.m (Table 4.2). The results are plotted in Fig. 5.9 up to
t = 2.25Tt, where Tt = 2π

mu/a3
t, the period of the target spacecraft.
5.8 Lambert’s Problem
Lambert’s problem is the name given to the general two-point boundary-value
problem resulting from a two-body orbital transfer between two position vec-
tors in a given time. Such a problem is typical in the guidance of spacecraft
and ballistic missiles, as well as in the orbital determination of space objects
from two observed positions separated by a speciﬁc time interval. Lambert’s
problem attracted the attention of the greatest mathematicians, such as Euler,
Gauss, and Lagrange, and is responsible for advances in analytical and com-
putational mechanics. We depict Lambert’s problem in Fig. 5.10 by initial
and ﬁnal positions, Pi, Pf, given by ri, rf, and the transfer angle, θ, for the
time of ﬂight, tf −ti. Since the transfer orbit is coplanar with ri, rf, the two
positions are uniquely speciﬁed through the radii, ri, rf, and the true anom-
alies, θi, θf. Lambert’s theorem states that the transfer time is a function of
the semi-major axis, a, of the transfer orbit, the sum, ri + rf, as well as of
the chord, c =| rf −ri |, joining the two positions. For an elliptical transfer

5.8 Lambert’s Problem
141
0
0.5
1
1.5
2
−10
−5
0
5
10
r (x1000 km)
0
0.5
1
1.5
2
−10
0
10
20
t/Tt
v (km/s)
dz/dt
dx/dt
x
y
z
r
v
dy/dt
Fig. 5.9. Relative position and velocity of two spacecraft in elliptical orbits.
orbit, Lagrange derived the following equation [11] for the transfer time, using
Kepler’s equation:
√μ(tf −ti) = 2a
3
2 (ψ −cos φ sin ψ) ,
(5.53)
where
cos φ = e cos 1
2(Ei + Ef)
ψ = 1
2(Ef −Ei) ,
(5.54)
and Ei, Ef denote the eccentric anomalies of the initial and ﬁnal positions,
repectively. Noting that
ri + rf = 2a(1 −cos φ cos ψ),
c = 2a sin φ sin ψ ,
(5.55)
the proof of Lambert’s theorem can be obtained for the elliptical orbit. The fol-
lowing analogous expression was obtained by Euler for the parabolic transfer
using Barker’s equation (Chapter 4) and is relevant to orbital determination
of comets:
6√μ(tf −ti) = (ri + rf + c)
3
2 ± (ri + rf −c)
3
2 ,
(5.56)

142
5 Orbital Mechanics
Table 5.2. M-ﬁle relative.m for Computing Relative Motion between Two Space-
craft in Elliptical Orbits
function [r,v]=relative(orb1,orb2,t)
%program for relative position and velocity of ’orb2’ with respect to
%’orb1’ in elliptical orbits. Each of ’orb1’ and ’orb2’ must have the
%following elements: 1x1: a; 2x1:e; 3x1:i; 4x1:w; 5x1: Om; 6x1: tau.
%This program calls ’trajE.m’, which in turn calls ’kepler.m’
%(c) 2005 Ashish Tewari
mu=398600.4; %earth
%target spacecraft:
a=orb1(1);e=orb1(2);i=orb1(3);w=orb1(4);Om=orb1(5);tau=orb1(6);
n=sqrt(mu/a^3);
M=-n*tau;
E=kepler(e,M);
r0=a*(1-e*cos(E));
R0=a*[cos(E)-e;sqrt(1-e^2)*sin(E);0];
V0=sqrt(mu*a)*[-sin(E);sqrt(1-e^2)*cos(E);0]/r0;
[Rt,Vt]=trajE(mu,0,R0,V0,t);
C=rotation(i,Om,w);
Rt=C*Rt;
Vt=C*Vt;
%Object spacecraft:
a=orb2(1);e=orb2(2);i=orb2(3);w=orb2(4);Om=orb2(5);tau=orb2(6);
n=sqrt(mu/a^3);
M=-n*tau;
E=kepler(e,M);
r0=a*(1-e*cos(E));
R0=a*[cos(E)-e;sqrt(1-e^2)*sin(E);0];
V0=sqrt(mu*a)*[-sin(E);sqrt(1-e^2)*cos(E);0]/r0;
[R,V]=trajE(mu,0,R0,V0,t);
C=rotation(i,Om,w);
R=C*R;
V=C*V;
%relative position and velocity:
r=R-Rt;
v=V-Vt;
rt=norm(Rt);
lat=asin(dot(Rt,[0;0;1])/rt);
slon=dot(Rt,[0;1;0])/(rt*cos(lat));
clon=dot(Rt,[1;0;0])/(rt*cos(lat));
long=atan(slon/clon);
if slon<0 && clon>0
long=asin(slon);
elseif slon>0 && clon<0
long=acos(clon);
end
CLH=INtoLH(lat,long);
r=CLH*r;
v=CLH*v;
where the positive sign is taken for the transfer angle, θ > π, and the negative
for θ < π. Clearly, Lambert’s theorem is also valid for the parabolic transfer.
For a hyperbola, Lambert’s theroem can be proved similarly by writing
√μ(tf −ti) = 2(−a)
3
2 (cosh φ sinh ψ −ψ) ,
(5.57)
where
cosh φ = e cosh 1
2(Hi + Hf),

5.8 Lambert’s Problem
143
ψ = 1
2(Hf −Hi) ,
(5.58)
and Hi, Hf denote the hyperbolic anomalies of the initial and ﬁnal positions,
repectively. The expressions for the sum of radii and chord for the hyperbolic
case are
ri + rf = 2a(1 −cosh φ cosh ψ),
c = −2a sinh φ sinh ψ .
(5.59)
For convenience in solving Lambert’s problem, we deﬁne the semi-parameter,
s, of the triangle SPiPf, as
s .= ri + rf + c
2
.
(5.60)
c
Pf
Pi
R
rf
ri
S
Fig. 5.10. Geometry of Lambert’s problem.
Note that for θ = π, we have c = ri + rf, or, s = c. We are usually
interested in the minimum transfer energy, which corresponds to the smallest
value of orbital energy ϵ = −μ/2a. Clearly, the minimum energy orbit involves
the smallest positive value of the semi-major axis, a, joining the two points,
Pi, Pf. Let this minimum energy elliptical orbit have the semi-major axis
am. Then, it can be shown from geometry that am = s/2. Thus, the semi-
parameter, s, has a physical signiﬁcance in terms of the minimum energy of
transfer.
A solution to Lambert’s problem was ﬁrst presented by Gauss in his Theo-
ria Motus (1801), using three angular positions of the asteroid Ceres at three

144
5 Orbital Mechanics
time instants. The numerical solution procedure adopted by Gauss for ellipti-
cal orbits was singular for θ = 180◦. A modern solution to Lambert’s problem
invariably involves a more sophisticated algorithm for an eﬃcient implemen-
tation on a digital computer, without convergence and singularity issues. We
shall utilize the universal variable approach by Battin [10] in deriving a gen-
eral algorithm for Lambert’s problem, that is applicable to elliptical, parabolic,
and hyperbolic transfer trajectories. Let us deﬁne an auxiliary variable, x, by
x .= E√a ,
(5.61)
where E .= Ef −Ei is the diﬀerence between the eccentric anomalies of the
ﬁnal and initial positions, and a is the semi-major axis of the transfer orbit.
In terms of x, the Lagrange’s coeﬃcients, f, g (Chapter 4) can be expressed
as follows [10]:
f = 1 −x2
ri
C(z),
˙f =
√μ
rirf
[xzS(z) −x],
g = tf −ti −
1
√μx3S(z),
(5.62)
˙g = 1 −x2
rf
C(z),
where
z .= x2
a ,
(5.63)
and C(z), S(z) are the following inﬁnite series, called Stumpﬀfunctions [56]:
C(z) = 1
2! −z
4! + z2
6! −. . . ,
S(z) = 1
3! −z
5! + z2
7! −. . . .
(5.64)
It can be shown that Stumpﬀfunctions converge to the following for an ellip-
tical transfer orbit (z > 0):
C(z) = 1 −cos √z
2
,
S(z) =
√z −sin √z
z
3
2
,
(5.65)
whereas for a hyperbolic transfer (z < 0), we have
C(z) = cosh √−z −1
−z
,
S(z) = −√−z + sinh √−z
(−z)
3
2
.
(5.66)

5.8 Lambert’s Problem
145
Obviously, the parabolic case, z = 0, has C(0) = 1
2, S(0) = 1
6. In order to
solve for the unknown variable x, another related auxiliary parameter, y is
deﬁned as follows:
y .= rirf
p (1 −cos θ) ,
(5.67)
where p is the parameter of the transfer orbit. Then, comparing Eq. (5.62)
with the following deﬁnitions of Lagrange’s coeﬃcients (Chapter 4):
f = 1 −rf
p (1 −cos θ),
˙f =
'μ
p
1 −cos θ
θ
 1 −cos θ
p
−1
ri
−1
rf

,
g = rirf
√μp sin θ,
(5.68)
˙g = 1 −ri
p (1 −cos θ) ,
we have
x =
'
y
C(z) ,
(5.69)
where x is the solution to the following cubic equation:
√μ(tf −ti) = A
√
Cx + Sx3 ,
(5.70)
and A is the following:
A .= sin θ
'
rirf
1 −cos θ .
(5.71)
In terms of the universal variables, it is now a simple matter to write
f = 1 −y
ri
,
g = A
' y
μ,
(5.72)
˙g = 1 −y
rf
.
(5.73)
The fourth Lagrange coeﬃcient, ˙f, is obtained from the relationship f ˙g−g ˙f =
1 (Chapter 4). Finally, we can determine the initial and ﬁnal velocities of the
transfer as follows:
vi = 1
g(rf −fri),
vf = ˙fri + ˙gvi) .
(5.74)
Based upon the above given formulation, the following iterative algorithm
can be devised for the solution to Lambert’s problem:

146
5 Orbital Mechanics
(a) Based upon the initial and ﬁnal position vectors, determine the trans-
fer angle based upon whether the transfer orbit is direct (i ≤90◦) or ret-
rograde (i > 90◦). For direct orbits, the transfer angle is calculated as
follows:
θ =
⎧
⎨
⎩
cos−1 %
ri·rf
rirf
&
,
(α > 0),
2π −cos−1 %
ri·rf
rirf
&
,
(α < 0),
(5.75)
where
α .= K · (ri × rf) .
(5.76)
(b) Calculate A using Eq. (5.71).
(c) Assume a value for z, usually a small, positive number.
(d) Compute the Stumpﬀfunctions, C(z), S(z), from Eq. (5.64).
(e) Calculate y, x, and ﬁnally the transfer time using Eq. (5.70).
(f) If the transfer time is close to the desired value within a speciﬁed tolerance,
then go to step (h).
(g) Estimate a new value of z by Newton’s method, without taking into ac-
count the dependence of the Stumpﬀfunctions on z, and go back to step (d).
(h) The solution, z, has converged within the speciﬁed tolerance. Find La-
grange’s coeﬃcients through Eq. (5.72), and the initial and ﬁnal velocities by
Eq. (5.74).
The algorithm given above is programmed in the code lambert.m (Ta-
ble 5.3). It is to be noted that the logic for transfer angle determination
in step (a) must be reversed for a retrograde transfer orbit. Also note the
ﬁne tolerance of 10−9 s speciﬁed in the code for transfer time convergence.
In most cases, such a small tolerance is achieved in about 20 iterations. Of
course, increasing the tolerance results in a smaller number of iterations. Bat-
tin [11] presents an alternative procedure through the use of hypergeometric
series evaluated by continued fractions, instead of the Stumpﬀfunctions. Such
a formulation, although diﬃcult to program, improves the convergence and
renders the method insensitive to initial choice of z.
Example 5.11. It is decided to make a rendezvous between the two space-
craft of Example 5.10, by maneuvering the object spacecraft, such that it
attains the same position and velocity as that of the target after 2000 sec.
Find the maneuvering impulse magnitudes and directions in the celestial
frame.
In order to solve the problem, we need the initial position and velocity of
the object, as well as the ﬁnal position and velocity of the target, which are
easily computed from the given orbits to be the following:
R(0) =
⎛
⎝
−6069.39667
1845.10683
894.38397
⎞
⎠km,
V(0) =
⎛
⎝
−2.9185425
−7.3934070
0.9294595
⎞
⎠km/s,

5.8 Lambert’s Problem
147
Table 5.3. M-ﬁle lambert.m for Solving Lambert’s Problem
function [p,Vi,Vf]=lambert(mu,Ri,Rf,t)
%Solution to Lambert’s two-point boundary-value problem in space navigation.
%mu: gravitational constant of central mass
%Ri: initial position vector in celestial frame
%Rf: final position vector in celestial frame
%t: transfer time
%The transfer orbit is assumed to be direct (0<i<90 deg.)
%(For a retrograde orbit, the logic based upon sign of ’q’ must be reversed.)
%(c) 2005 Ashish Tewari
ri=norm(Ri); rf=norm(Rf);
q=dot([0;0;1],cross(Ri,Rf));
theta=acos(dot(Ri,Rf)/(ri*rf)); %transfer angle
if q<0
theta=2*pi-theta;
end
A=sqrt(ri*rf/(1-cos(theta)))*sin(theta);
z=0.01;
n=1;
[C,S]=stumpff(z,5);
y=ri+rf-A*(1-z*S)/sqrt(C);
x=sqrt(y/C);
tc=(x^3*S+A*sqrt(y))/sqrt(mu);
%Newton’s iteration for ’z’ follows:
while abs(t-tc)>1e-9
fx=A*sqrt(C)*x+S*x^3-t*sqrt(mu);
fxp=A*sqrt(C)+3*S*x^2;
dx=-fx/fxp;
x=x+dx;
n=n+1;
y=C*x*x;
tc=(x^3*S+A*sqrt(y))/sqrt(mu);
z=(1-sqrt(C)*(ri+rf-y)/A)/S;
[C,S]=stumpff(z,20);
end
n
z
p=ri*rf*(1-cos(phi))/y;
f=1-y/ri;
g=A*sqrt(y/mu);
gd=1-y/rf;
Vi=(Rf-f*Ri)/g;
Vf=(gd*Rf-Ri)/g;
Table 5.4. M-ﬁle stumpﬀ.m for StumpﬀFunctions Required in lambert.m
function [C,S]=stumpff(z,n)
%Stumpff functions evaluation:
C=0.5;
S=1/6;
for i=1:n
C=C+(-1)^i*z^i/factorial(2*(i+1));
S=S+(-1)^i*z^i/factorial(2*i+3);
end

148
5 Orbital Mechanics
−5000
0
5000
−6000
−4000
−2000
0
−4000
−2000
0
2000
4000
6000
Y (km)
X (km)
Z (km)
Target
Object’s
initial orbit 
Transfer
orbit
Fig. 5.11. Nonplanar orbital maneuver for rendezvous between two spacecraft using
the solution to Lambert’s problem.
RT(2000) =
⎛
⎝
2767.54394
−4920.02168
−3623.44589
⎞
⎠km,
VT(2000) =
⎛
⎝
−2.2105642
3.6039760
−6.4403484
⎞
⎠km/s .
Thus, we have Ri = R(0), Rf = RT(2000), and tf −ti = 2000 s. The
Lambert’s for this example is solved through the program lambert.m (Table
5.3) and the following MATLAB statements:
>> [p,Vi,Vf]=lambert(398600.4,Ri,Rf,2000)
theta = 2.31520925333295
n =
15
z = 5.59221293727655
p = 6.482521562308273e+003
Vi =
-2.73191506291483
-5.72927382287410
-4.76913693051223
Vf =
6.83337026980329
2.23793401599097
2.39519863911652
>> dv1=Vi-V
%first velocity impulse (t=0) (km/s)
dv1 =
0.18662745639649
1.66413315097974
-5.69859646882602

5.9 Summary
149
>> dv2=VT-Vf
%second velocity impulse (t=2000s) (km/s)
dv2 =
-9.04393442646690
1.36604201944881
-8.83554699120937
Therefore, for the transfer angle of θ = 2.3152 rad (132.65◦), the necessary
impulse magnitudes are Δv1 = 5.939543 km/s and Δv2 = 12.717142 km/s,
which are enormous due to the plane change involved in the maneuver. Fur-
thermore, the target is in a retrograde orbit, while the object’s initial orbit
is direct; hence, a switching of direction takes place in the transfer orbit. A
three-dimensional plot of the maneuver is depicted in Fig. 5.11.
The maneuver shown in this example is an extreme case, thereby requiring
a large propellant expenditure. A practical orbital rendezvous takes place
between spacecraft in nearly coplanar orbits, moving in the same direction.
The same can be said for Lambert’s problem arising out of interplanetary (or
lunar) travel.
5.9 Summary
The classical orbital elements, a, e, τ, Ω, ω, i, are very useful in describing the
position and velocity of a spacecraft in the celestial coordinate frame. The
problem of orbit determination involves determining the orbital elements from
the measured position and velocity at a given time. When a planet ﬁxed frame
is employed, an appropriate coordinate transformation must be carried out
taking into account the planetary rotation in terms of terrestrial and celestial
longitudes. Impulsive orbital maneuvers are a reasonable approximation of the
actual changes in the orbit caused by rocket thrusters. The simplest maneuver
consists of a single-velocity impulse and is capable of changing both the shape
and the plane of the orbit. Plane change maneuvers are the most expensive
and must be performed at the smallest possible velocity. The most eﬃcient
two impulses, planar orbital maneuvers are those that involve only tangential
impulses (such as Hohmann transfer between two circular orbits). An orbital
rendezvous requires appropriate phasing between the object and the target
spacecraft, as well as orbital transfer. A general three-dimensional rendezvous
in a speciﬁed time results in a two-point boundary-value problem—called
Lambert’s problem—and forms the basis of orbital and interplanetary mission
design. The solution of Lambert’s problem invariably requires an iterative
numerical procedure based upon a general formulation in terms of auxiliary
variables and Lagrange’s coeﬃcients.
Exercises
5.1. The angle, ϵ, is the inclination of the celestial, equatorial frame, (SXY ′Z′),
relative to the celestial, ecliptic frame, (SXYZ), about the common axis, SX,

150
5 Orbital Mechanics
and is called obliquity of ecliptic. Derive the relationships between the ecliptic
spherical coordinates, λ′, δ′, and the equatorial speherical coordinates λ, δ.
5.2. A spacecraft is returning from Mars with the following approach velocity
relative to the earth in a geocentric (equatorial) frame:
v = 3I + 3J + 2K km/s ,
where K is the north polar axis. Given that the spacecraft should enter the
earth’s atmosphere at altitude 100 km and latitude 8◦, ﬁnd the length, ra, of
the radial line from the earth’s center that is perpendicular to an asymptote of
the approach hyperbola. (This length is called the aiming distance and is the
distance by which the spacecraft would miss the planet, were it not inﬂuenced
by the planetary gravity.) Also, calculate the ﬂight path angle of atmospheric
entry.
5.3. A satellite is in an orbit of e = 0.00132, i = 89.1◦and ω = 261◦. Its
perigee altitude is 917 km. What is the maximum height achieved by the
spacecraft above the equatorial plane at any time in the orbit?
5.4. Using the coordinate transformation between the celestial and local hori-
zon frames, derive the relationship between orbital inclination, inertial velocity
azimuth, and declination given by Eq. (5.27).
5.5. A spacecraft is de-orbited from a circular, earth orbit of altitude 300
km and equatorial inclination 60◦, by ﬁring a retro-rocket that reduces the
speed instantaneously by 200 m/s, without changing either the ﬂight-path
angle or the orbital inclination. The ﬁring occurs at a declination of 45◦, and
a right ascension of 20◦, when the spacecraft is moving toward higher latitudes.
Determine the celestial position and velocity vectors, as well as declination,
right ascension, ﬂight-path angle, and inertial velocity azimuth 15 min after
the ﬁring of the retro-rocket.
5.6. A spacecraft is to be launched to a circular earth orbit of altitude 200
km from Cape Canaveral (latitude 28.5◦). Assuming that the entire launch
sequence can be approximated by a single-velocity impulse at the earth’s
surface, and that the atmospheric drag and thrust losses have no eﬀect on
the ﬂight path, other than requiring an addition of 1 km/s to the magnitude
of the initial velocity impulse, calculate the magnitude and direction of the
launch velocity in the planet ﬁxed frame.
5.7. A spacecraft is required to undergo a plane change by 20◦, as well as
a speed change from 7.3 km/s to 8.2 km/s, with a 5◦increase in the ﬂight-
path angle. Determine the total velocity impulse required when (a) the speed
and ﬂight path are changed together, while the plane change is separately
performed, and (b) all the three changes take place simultaneously.

5.9 Summary
151
5.8. A spacecraft is in an earth orbit of e = 0.7. When its altitude is 500 km
and the speed is 7.4 km/s, a velocity impulse of magnitude 500 m/s is applied
at an angle 60◦from the initial ﬂight direction, in order to increase the speed
and ﬂight-path angle simultaneously, but without changing the orbital plane.
Determine the new orbit of the spacecraft.
5.9. An earth communications satellite has achieved an equatorial orbit, but
the apogee altitude is 41,756km while the eccentricity is 0.0661. What mini-
mum total velocity change is required to place the satellite in the geosynchro-
nous orbit?
5.10. Estimate the time of ﬂight and total velocity change required for a
Mars mission if the angular heliocentric positions of the earth and Mars at
the time of launch, measured along the respective orbits from the intended
rendezvous point, are 90◦and 140◦, respectively. Assume that Mars’ orbital
plane is inclined at 2◦to the ecliptic, and its sidereal orbital period is 1.881
times that of the earth. Also, assume that the planetary orbits are circular,
and the planetary gravitation on the spacecraft is negligible. (Take μsun =
1.32712440018 × 1011 km3/s2).
5.11. An outer bi-elliptic transfer is a three-impulse orbital transfer between
two concentric circular orbits, such that all the impulses are applied tangen-
tially, and the two transfer ellipses have semi-major axes greater than the
radius of the larger circle. Show that an outer bi-elliptic transfer with an
initial phase angle θH + Δθ has the total transfer time given by
t = tH + Tf
2

3 −Δθ
π

,
which is smaller than that required for Hohmann transfer if Δθ > 3π(1 −
Ti/Tf).
5.12. Show that an outer bi-elliptic transfer between two concentric circular
orbits is more economical than Hohmann transfer between the same orbits if
the ratio of the two orbital radii is greater than 15.6.
5.13. It is possible to exactly solve the equations of relative motion between
a target in a circular orbit, and an object in a general orbit, which is always
coplanar with that of the target. Derive an algorithm for analytically deter-
mining the relative position and velocity after some time, given the initial
nondimensional relative coordinates x0, y0, ˙x0, ˙y0, deﬁned by
r .= R −RT
RT
= xi + yj,
v .= V −VT
VT
= ˙xi + ˙yj,
as well as the initial angular separation, θ0.

152
5 Orbital Mechanics
5.14. A small experimental satellite is ejected radially outward with a speed
1
10 the orbital speed, from a spacecraft in a circular earth orbit of period
120 min. Using the exact solution devised in Exercise 5.13, ﬁnd the relative
distance of the satellite after one complete orbital period of the spacecraft.
5.15. Repeat the calculation of Example 5.11 using a transfer time of 3000 s.
What are the impulse magnitudes for this rendezvous maneuver?
5.16. The orbital elements of the planet Mars referred to the mean ecliptic
plane are a = 1.52372 a.u., e = 0.09331 s, Ω = 49.55◦, ω = 336.011◦,
and i = 1.8498◦. Assuming Mars and earth last passed perihelion exactly
300 and 55 days ago, respectively, design a transfer orbit for a spacecraft
launched from the earth (a = 1 a.u., e = 0.01667 s, ω = 103.059◦, and
i = 0◦) in order that it reaches Mars at the next Mars aphelion. Also, ﬁnd
the velocity impulses necessary to perform the ﬂight. Neglect the eﬀects of
planetary gravitation on the spacecraft (1 a.u. = 149597870.691 km, μsun =
1.32712440018 × 1011 km3/s2).
(Hint: Use relative.m with appropriate μ for relative positions of the earth
and Mars at launch and arrival, respectively. Then solve the given Lambert’s
problem, and get the transfer orbital elements, as well as the initial and ﬁnal
velocity impulses.)

6
Perturbed Orbits
6.1 Aims and Objectives
•
To model the eﬀects of orbital perturbations caused by gravitational
asymmetry due to oblateness and presence of a third body.
•
To present a simple atmospheric model for predicting the life of a
satellite in a low orbit.
•
To introduce the concept of sphere of inﬂuence and the patched conic
approach for the design and analysis of lunar and interplanetary missions.
•
To solve the perturbed two-body problem using numerical integration
(Cowell’s and Encke’s methods).
6.2 Perturbing Acceleration
The Keplerian motion presented in Chapter 5 is often perturbed by external
disturbances, leading to deviation from the orbits obtained from the exact,
closed-form solutions to the two-body problem. Examples of such disturbances
include a nonuniform gravitational ﬁeld due to an aspherical planetary mass
(Chapter 3), atmospheric drag (Chapter 9), gravitational inﬂuence of a third
body (Chapter 7), thrust of rocket engines (Chapter 8), and solar radiation
pressure. Often, one can identify the largest disturbances acting on the space-
craft, and model the vehicle’s motion accordingly. For example, a vehicle in
a low orbit experiences the largest orbital perturbations due to atmospheric
drag and nonspherical gravity ﬁeld, while a satellite in a high earth orbit feels
negligible atmospheric drag and planetary gravitational anomaly but an ap-
preciable tug from lunar and solar gravitation, as well as some eﬀects of solar
radiation. A spacecraft on an interplanetary voyage is aﬀected by gravitational
attraction of a planet, near which it may be passing, apart from solar grav-
itation. Such a spacecraft, when ﬂying toward the inner planets (Venus and
Mercury), may experience a signiﬁcant increase in solar radiation pressure.
Our objective in this chapter is to present the modeling and simulation of the

154
6 Perturbed Orbits
two-body orbits perturbed by various disturbances, as well as to introduce
the strategy commonly adopted in designing interplanetary trajectories.
The equation of perturbed relative motion in the two-body problem (Chap-
ter 4) can be expressed as follows:
d2r
dt2 + μ
r3 r = ad ,
(6.1)
where ad is the perturbing acceleration on mass m2, whose position relative
to m1 is r (Fig. 4.8). The perturbing force, m2ad, can be either conservative, 1
such as the gravitational anomalies due to aspherical shape and other bodies,
or nonconservative, such as atmospheric drag, rocket thrust, and solar radia-
tion pressure. We have seen in Chapters 3 and 4 how a conservative force can
be expressed by the gradient of a scalar potential function, Φ, with respect to
the position vector, r. Thus, for a conservative perturbation, we have
adT = ∂Φ
∂r .
(6.2)
This form of conservative acceleration allows us to express the solution to
the perturbed problem in inﬁnite series, such as those involving the Legendre
polynomials (Chapter 3), and enables approximate computation. However,
such a simple evaluation is not possible for a nonconservative disturbance.
6.3 Eﬀects of Planetary Oblateness
Lagrange devised the following method of variation of parameters [11] for
expressing the changes in the orbital parameters with time caused by a con-
servative perturbation. Upon substituting Eq. (6.2) into Eq. (6.1), we have
dv
dt + μ
r3 r =
∂Φ
∂r
T
,
(6.3)
where
v .= dr
dt
(6.4)
is the relative velocity. We can express the position and velocity as functions
of the six scalar constants of the undisturbed two-body orbital motion com-
prising the vector c as follows:
r = r(t, c),
v = v(t, c) .
(6.5)
Note that the orbital parameters, c, are allowed to vary with time under the
inﬂuence of the perturbation. Since the position and velocity are functions
1 See Chapter 4 for the deﬁnition of a conservative force.

6.3 Eﬀects of Planetary Oblateness
155
not only of time, but also of the varying parameters, c, the equations of
undisturbed motion can be expressed as follows:
∂v
∂t + μ
r3 r = 0,
∂r
∂t = v.
(6.6)
The velocity and acceleration of the disturbed motion are given by
dr
dt = ∂r
∂t + ∂r
∂c
dc
dt ,
dv
dt = ∂v
∂t + ∂v
∂c
dc
dt .
(6.7)
Considering the particular form of the linear diﬀerential equations, Eqs. (6.3)
and (6.4), the following conditions must be satisﬁed by the time derivatives
of the parameters:
∂r
∂c
dc
dt = 0,
∂v
∂c
dc
dt =
∂Φ
∂r
T
.
(6.8)
These are then the six scalar ordinary diﬀerential equations to be solved for
the orbital parameters, c(t). A slight manipulation of Eq. (6.8) yields
Ldc
dt =
∂Φ
∂r
T
,
(6.9)
where L is the following six-dimensional square matrix, called the Lagrange
matrix:
L .=
∂r
∂c
T ∂v
∂c −
∂v
∂c
T ∂r
∂c .
(6.10)
It can be easily shown that L has the following properties:
LT = −L,
∂L
∂t = 0 .
(6.11)
Thus, L is a skew-symmetric matrix and does not depend explicitly on time.
The latter feature of the Lagrange matrix is very useful in solving for the
parameters, c(t). Selecting an appropriate set of orbital parameters, such as
the classical orbital elements cT = (a, e, i, ω, Ω, τ), the equations of parametric
variations can be expressed in the form of six scalar diﬀerential equations,
called Lagrange’s planetary equations.
Lagrange’s planetary equations lend themselves easily to the determina-
tion of the eﬀect of planetary oblateness, measured by the largest Jeﬀrey’s

156
6 Perturbed Orbits
constant, J2 (Chapter 3). For a satellite in an elliptical orbit, it can be shown
that a substitution of Eq. (3.32) into Eq. (6.9) results in
d¯a
dt = 0,
d¯e
dt = 0,
d¯ω
dt = 3
4nJ2
Re
p
2
(5 cos2 i −1),
(6.12)
d ¯Ω
dt = −3
2nJ2
Re
p
2
cos i,
where the bar represents the average of the particular parameter taken over
a complete orbit. Thus, the planetary oblateness has no eﬀect on the semi-
major axis and eccentricity, while the line of apsides as well as the line of
nodes rotate at ﬁxed rates. For a direct orbit (0 < i < 90◦), the line of nodes
rotates backwards, such that the value of Ω continuously decreases. This be-
havior is called regression of nodes. The movement is in opposite direction for
a retrograde orbit. For the apsidal rotation, there is a critical value of incli-
nation, ic = cos−1
1
√
5, which determines the direction of change of argument
of periapsis, ω. If i > ic, the line of apsides regresses. Clearly, both nodal and
apsidal rotation rates diminish as the orbit size increases (larger p, smaller n)
and are directly proportional to the oblateness, J2.
6.3.1 Sun Synchronous Orbits
A beneﬁcial eﬀect of nodal regression is the sun synchronous orbit utilized
eﬀectively in all photographic mapping and observation satellites. The sun
synchronous orbit yields a constant sun elevation angle at a given point, which
is highly desirable for taking photographs of surface features. A satellite’s
orbital plane continuously departs from the line joining the sun and the planet
(the direction of sun visible from the satellite). The sun synchronization is
achieved by matching the rate of departure of the satellite’s orbital plane from
the sun’s direction,
360◦
365.25 = 0.9856◦/day, with an equal and opposite rate of
nodal regression, ˙Ω, thereby rendering a constant sun direction relative to the
orbital plane. Such a synchronous orbit would cross a given latitude at a ﬁxed
solar (local) time; thus, photographs of ﬁxed points on the surface can be taken
in approximately the same lighting conditions. Since J2 is a positive number,
a positive nodal regression rate can be achieved only by having cos i < 0,
implying i > 90◦. Hence, a sun synchronous orbit is always retrograde. For
planets such as the earth and Mars, the low sun synchronous orbits used in
photography missions are nearly polar, which gives the additional advantage
of covering the whole planet in a relatively small number of orbits.

6.4 Eﬀects of Atmospheric Drag
157
Example 6.1. Calculate the orbital inclination of a sun synchronous earth
satellite of a = 6700 km and e = 0.01.
The parameter and mean motion of the satellite are determined as follows:
p = a(1 −e2) = 6699.33 km,
n =
' μ
a3 = 0.094231057 rad/s .
For earth, Re = 6378.14 km, J2 = 0.00108263 (Chapter 3), which results in
the following calculation of the orbital inclination by the last of Eq. (6.12):
2π
(365.25)(24)(3600) = −3
2nJ2
Re
p
2
cos i,
i = cos−1(−0.00143544) = 90.082245◦.
As the size of the orbit increases, the inclination angle for sun synchroniza-
tion also increases. For example, the LANDSAT series of earth observation
satellites with a near circular orbit of 709 km altitude has a sun synchronous
orbit of i = 98.2◦, which crosses the equator at the 9:30 a.m. local time.
6.3.2 Molniya Orbits
Another class of special orbits designed with a consideration of oblateness
eﬀects are the Molniya orbits Russia uses for communication at high latitudes,
where most of that country is conﬁned. The requirement of remaining at
high latitudes for long periods results in highly elliptical orbits (e = 0.73)
of approximately a 12-hour period, with apogee near the north pole. For a
Molniya orbit, it is crucial that the perigee latitude must not change with
apsidal rotation due to oblateness. Hence, a Molniya orbit always has the
critical inclination, i = ic = 63.435◦, for which ˙ω = 0. This high inclination
is conveniently achieved through a launch from Plesetsk located at a latitude
of 62.8◦. The nodal regression causes the orbital plane to change at a rate
˙Ω = −0.0024◦/day.
6.4 Eﬀects of Atmospheric Drag
Spacecraft in a low-orbit experience a signiﬁcant atmospheric drag, whose
magnitude is proportional to the product of atmospheric density, ρ, and square
of relative speed, ˙r2. Since drag opposes the orbital motion, we can express
the perturbed equation of motion by
d2r
dt2 + μ
r3 r = −q ˙r˙r ,
(6.13)

158
6 Perturbed Orbits
where
q .= 1
2ρCDA
m2
,
(6.14)
and CD is the drag coeﬃcient (Chapter 10) of the spacecraft based upon a
reference area, A. Generally, the free-molecular ﬂow assumption is valid at
the orbital altitudes, which according to the methods of Chapter 10 produces
a drag-coeﬃcient value, CD ≈2, for most shapes, based upon the maximum
cross-sectional area facing the ﬂow. The dependence of drag on velocity, rather
than on position, renders it a nonconservative force, which results in a decline
of the orbital energy, ϵ = −μ
2a, and hence, the semi-major axis, a. Taking the
scalar product of the deceleration due to drag with the relative velocity, we
have the rate of change of orbital energy
˙ϵ =
μ
2a2 ˙a = −q ˙r˙r · ˙r = −qv3 ,
(6.15)
or
˙a = −2a2
μ qv3 ,
(6.16)
where v .= ˙r. Clearly, the rate of decline of the orbit increases proportionally
with q and diminishes as the orbit size increases. The atmospheric density at
orbital altitudes can be approximated as an exponentially decaying function
of the altitude, z .= r−Re, whereby ρ = ρ0e−z
H (Chapter 9), and we can write
˙a = −a2CDA
m2μ ρ0v3e−z
H .
(6.17)
The rate of decline of the orbit due to atmospheric drag is an important factor
in determining the life of the satellite in a low orbit. However, the prediction
of a satellite’s orbital life involves an accurate estimate of the atmospheric
properties at high altitudes over long periods (years and decades), which is
seldom possible due to random external disturbances of solar radiation and
geomagnetic ﬁeld (Chapter 9).
Taking the vector product of the deceleration due to drag with the relative
velocity, we have the rate of change of angular momentum,
˙h = −r × q ˙r˙r = −q ˙rh .
(6.18)
Now, it is to be noted that taking the time derivative of the equation h2 = h·h
results in the following:
h˙h = h · ˙h .
(6.19)
Substitution of Eq. (6.19) into Eq. (6.18) yields
h˙h = −q ˙rh · h = −q ˙rh2 ,
(6.20)
or
˙h = −q ˙rh .
(6.21)

6.5 Third-Body Perturbation and Interplanetary Flight
159
Now, since h = hih, we have
˙h = ˙hih + hdih
dt .
(6.22)
Substituting Eqs. (6.18) and (6.21) into Eq. (6.22), we have
hdih
dt = q ˙rhih −q ˙rh = 0,
(6.23)
dih
dt = 0 .
(6.24)
Therefore, there is no change in the orbital plane due to atmospheric drag;
hence, the Euler angles, i, ω, Ω, deﬁning the orbital plane, remain invariant
with time.
The above-demonstrated invariance of the orbital plane due to drag can
be advantageously utilized in eﬀectively braking a spacecraft as it arrives at
a planet from an interplanetary ﬂight. Due to the exponential increase in
the density with a decrease in the altitude, an elliptical orbit experiences the
largest drag at its periapsis. The planetary atmospheres on the earth and Mars
have a negligible density above about 150 km altitude. Thus, a highly ellipti-
cal orbit with a periapsis altitude less than 150 km around either the earth or
Mars experiences a negative velocity impulse everytime it passes the periapsis,
which remains ﬁxed in space. Hence, if a spacecraft’s arrival hyperbola is con-
verted into a highly eccentric elliptical orbit, either by retro-rockets (called
orbit insertion burn) or by an initial pass through the atmosphere (called
aerocapture), the orbital eccentricity as well as the semi-major axis can be
reduced by making successive passes through the atmosphere. Such an ap-
proach is referred to as aeroassited orbital transfer, or aerobraking [57], and
has been employed in several spacecraft, such as the Magellan Venus mission,
the Mars Global Surveyor (MGS), and the Mars Odyssey mission.
6.5 Third-Body Perturbation and Interplanetary Flight
The third-body gravitational perturbation on a two-body orbit is modeled in
a manner similar to the nonspherical gravity of the primary body. Consider
the mutual orbit of m1, m2 perturbed by the presence of m3, as shown in
Fig. 6.1. The equations of motion for the two orbiting bodies can be written
as follows:
¨R1 −Gm1
r3
12
r12 −Gm3
r3
13
r13 = 0,
¨R2 + Gm2
r3
12
r12 −Gm3
r3
23
r23 = 0,
(6.25)
where R1, R2, R3 denote the respective inertial position of the three bodies,
and r12 .= R2 −R1, r13 .= R3 −R1, and r23 .= R3 −R2. Upon subtracting

160
6 Perturbed Orbits
the two equations from each other, we obtain the equation of relative motion
between m1 and m2 to be
¨r + μ
r3 r = Gm3
 1
r3
23
r23 −1
r3
13
r13

,
(6.26)
where r, μ have their usual nomenclature in the two-body problem. Since the
third body is usually at a large distance compared to the separation between
the orbiting bodies (r13 ≫r, r23 ≫r), we are often computing the diﬀerence
between two nearly equal numbers in the term on the right-hand side. For
convenience in such a computation of the disturbing acceleration, we deﬁne
r32 .= −r23 and a disturbance potential function, Φ, given by
Φ .= Gm3
 1
r32
−r · r13
r3
13

.
(6.27)
Since it is true that
1
r3
23
r23T −1
r3
13
r13T = ∂
∂r
 1
r32
−r · r13
r3
13

,
(6.28)
we have the orbital equation in the same form as Eq. (6.3):
¨r + μ
r3 r =
∂Φ
∂r
T
.
(6.29)
If we want to consider the disturbance caused by more bodies, we only have
to add the gradients of disturbance potentials of the additional bodies on the
right-hand side of Eq. (6.29). Thus, no qualitative insight has to be had by
additional perturbation potentials, and we restrict ourselves to only the third-
body disturbance. This is usually suﬃcient in most spacecraft missions, where
at any given time the spacecraft experiences the gravitational attraction of
no more than two primary bodies. As in the case of the nonspherical gravity
perturbation [Eq. (3.23)], we expand the disturbance potential in an inﬁnite
series of Legendre polynomials as follows:
Φ = Gm3
r13

1 +
∞

n=2
 r
r13
n
Pn(cos γ)

,
(6.30)
where γ is the angle between r and r13, as depicted in Fig. 6.1. The primary
advantage of Eq. (6.30) is the independence of the disturbance potential from
r32 that is continuously changing in an orbit of m2 relative to m1. Therefore,
the gradient of potential is easily calculated, and the perturbed equation of
motion becomes
¨r + μ
r3 r = Gm3
r2
13
∞

n=1
 r
r13
n 
P ′
n+1(cos γ)r13
r13
−P ′
n(cos γ)r
r

,
(6.31)

6.5 Third-Body Perturbation and Interplanetary Flight
161
3
m
r13
r23
1
m
2
m
 r=r12
H
Fig. 6.1. The orbit of m2 relative to m1, perturbed by m3.
where the prime indicates the derivative of a Legendre polynomial with respect
to its argument. From the properties of Legendre polynomials (Chapter 3),
we have the following useful recurrence formula:
P ′
n(ν) = νP ′
n−1(ν) + nPn−1(ν) .
(6.32)
Before addressing how the third-body perturbed orbital equation can be
numerically tackled, let us discuss an important approximation made in de-
signing interplanetary missions.
6.5.1 Sphere of Inﬂuence and Patched Conics
The unavailability of a closed-form solution to the perturbed two-body prob-
lem leads one to search for approximations involving the two-body trajectories.
The concept of sphere of inﬂuence is such a method. Devised by Laplace when
studying the motion of a comet passing close to Jupiter, the method assigns
a spherical region to each planet, such that within the region the planet’s
gravity dominates, while outside it the sun’s gravitation is predominant. We
can express the motion of m2 by either of the following equations of motion:
¨r + G(m1 + m2)
r3
r = −Gm3
 1
r3
32
r32 + 1
r3
13
r13

,
¨r32 + G(m2 + m3)
r3
32
r32 = −Gm1
 1
r3 r −1
r3
13
r13

.
(6.33)
We can derive the radius of the sphere of inﬂuence, rs, for the planetary mass,
m1, by comparing the magnitudes of the perturbation on the right-hand sides
of the two equations, Eq. (6.33). Which equation of motion oﬀers the better
model depends upon which of the two equations has a smaller magnitude of
the ratio of the perturbation, ad, to the primary two-body acceleration. On

162
6 Perturbed Orbits
the boundary of the region of inﬂuence, the two concerned ratios are identical.
Equating the two ratios, we have the approximation
rs
r13
=

m1 + m2
m3(m2 + m3
 1
3
(1 + 3 cos2 γ)−1
6 ,
(6.34)
which can be further approximated as follows, assuming m3 ≫m1 ≫m2 and
r13 ≫r, resulting in the following spherical region:
rs
r13
≈
m1
m3
 2
5
.
(6.35)
For all planets, the sphere of inﬂuence is a good approximation and depends
upon the ratio of the masses of the primary and disturbing bodies as well as
the distance r13 between them. Thus, a small planet orbiting very close to the
sun has a small sphere of inﬂuence, while that of a massive planet far away
from the sun is a large region. In the solar system, the spheres of inﬂuence
range from rs = 0.111 × 106 km for Mercury to rs = 80.196 × 106 km for
Neptune. For a planetary subsystem, such as the earth–moon combination,
the sphere of inﬂuence concept is invalid, and Eq. (6.34) provides a much
better estimate of the nonspherical region of the moon’s inﬂuence.
Transfer
Trajectory
Rf
rA
rf
ri
rD
Sun
RA
Sphere of 
Original
Planet’s
Influence
Sphere of 
Target
Planet’s
Influence
RD
Ri
Fig. 6.2. An interplanetary trajectory.

6.5 Third-Body Perturbation and Interplanetary Flight
163
The concept of sphere of inﬂuence enables a quick estimation of an inter-
planetary trajectory by smoothly connecting the two-body trajectories cal-
culated by taking either m1 (planet) or m3 (the sun) as the primary body,
depending upon whether the spacecraft (m2) is inside or outside the region
of inﬂuence of m1. Such an approcah is called the patched-conic approxima-
tion. The main thrust in this method is the smooth patching of the two-body
solutions at the boundary of the sphere of inﬂuence, because the actual tra-
jectory does not encounter any discontinuity at that mathematical boundary.
Generally, the design of an interplanetary trajectory requires aiming the space-
craft from a given heliocentric initial position, Ri (usually in the vicinity of a
planet) to a ﬁnal position, Rf, close to another planet, in a given time, tf, as
shown in Fig. 6.2. Thus, the spacecraft transits from the spheres of inﬂuence
of the two planets through the intervening solar gravitation region outside the
two spheres. In order for us to design such a voyage using the patched-conic
approach, the following steps are necessary:
(a) Given the initial relative velocity and position, ri, estimate the heliocentric
position RD and velocity of the spacecraft along the departure hyperbola, at
the sphere of inﬂuence of the original planet. This step requires the solution
of the two-body problem with the planet as the primary mass.
(b) Select a point of arrival, RA, at the sphere of inﬂuence of the target planet,
and solve the Lambert’s problem associated with RD, RA, and tf, using the
sun as the primary body.
(c) From RA and the arrival velocity, estimate the hyperbolic trajectory rela-
tive to the target planet, and check whether it passes through the desired ﬁnal
relative position, rf.
(d) Iterate for RD and RA until the velocities from the relative hyperbolae
match with those of the heliocentric transfer ellipse.
The patched-conic approach is a practical procedure for designing inter-
planetary missions. However, it is not suﬃciently accurate to be used in the
navigation of spacecraft, where even a small error in the heliocentric position
results in the spacecraft completely missing the target planet. A spherical
patched-conic approximation for a lunar mission is demonstrated by Bat-
tin [11]. In treating lunar missions by the patched-conic method, we take
advantage of the fact that the moon’s orbit lies within the earth’s sphere of
inﬂuence (rs = 0.924 × 106 km). Therefore, solar gravity would equally per-
turb the earth, the moon, and the spacecraft during such a mission. However,
since the moon’s region of inﬂuence cannot be regarded as being spherical,
the patching of the conic solutions becomes complicated on the nonspherical
boundary. For this reason, it is much simpler (and more accurate) to determine
a lunar trajectory using the numerical solution of the restricted three-body
problem (Chapter 7).

164
6 Perturbed Orbits
6.6 Numerical Solution to the Perturbed Problem
We are often interested in integrating the perturbed equation of motion,
Eq. (6.1), in time, for obtaining the vehicle’s position and velocity. Such a pro-
cedure becomes necessary when we want to predict long-term orbital position
of a satellite and accurate position of an interplanetary spacecraft. Since the
patched-conic method for third-body perturbation is an iterative procedure,
and results in only a rough estimate of the actual trajectory, it is often prefer-
able to integrate the equation of perturbed motion by a numerical procedure,
such as the Runge–Kutta methods of Appendix A. Two distinct methods are
available for obtaining the perturbed solution; they were initially devised for
predicting cometary trajectories deviated by Jupiter:
(a) Cowell’s method for a direct numerical integration of Eq. (6.1),
(b) Encke’s method based upon deviation from the two-body orbital solution.
Of these, Cowell’s direct integration method is reasonable when ad is compa-
rable (or larger than) in magnitude to the primary acceleration, μ
r2 . However,
in a perturbed problem, ad is generally much smaller compared to
μ
r2 , which
requires a larger number of integration intervals for a given accuracy. Apart
from its ineﬃciency, Cowell’s method may also experience a numerical in-
stability due to the growth of truncation error over time, often leading to a
divergence of the iterative procedure. Hence, Encke’s method is considered
the better choice for solving long-term trajectory problems, such as those
associated with interplanetary navigation.
Encke’s method is based upon the deviation from an instantaneous two-
body solution, ¯r(t), ¯v(t), projected froward in time from the current position
and velocity, r(t0), v(t0). The instantaneous conic solution, called osculating
orbit, satisﬁes the following two-body orbital equation:
d2¯r
dt2 + μ
¯r3¯r = 0 .
(6.36)
The elements of the osculating orbit are calculated at time t0, from the true
position and velocity at the given instant, such that
¯r(t0) = r(t0),
¯v(t0) = v(t0).
(6.37)
At a slightly later time, t = t0 + Δt, we can write
r(t) = ¯r(t) + α(t),
v(t) = ¯v(t) + β(t).
(6.38)
Subtracting Eq. (6.36) from the true equation of motion, Eq. (6.1), we have
d2α
dt2 + μ
¯r3 α = μ
¯r3

1 −¯r3
r3

r + ad ,
(6.39)

6.6 Numerical Solution to the Perturbed Problem
165
which is, of course, subject to the initial conditions
α(t0) = 0,
˙α(t0) = β(t0) = 0.
(6.40)
Since r and ¯r are nearly equal, the term in the brackets on the right-hand
side of Eq. (6.39) may present numerical diﬃculties associated with machine
round-oﬀ. In order to avoid such a problem, we may write [11]
1 −¯r3
r3 = −x 3 + 3x + x2
1 + (1 + x)
3
2 ,
(6.41)
where
x .= α · (α −2r)
r2
.
(6.42)
The numerical implementation of Encke’s method can be expressed by the
following steps:
(a) Compute ¯r(t), ¯v(t) using the osculating orbit obtained at t0 from Eq. (6.37).
For this purpose, one can apply Lagrange’s coeﬃcients for the osculating or-
bit.
(b) Numerically integrate Eq. (6.39), and compute the true position and ve-
locity by Eq. (6.38).
(c) If at any time, the magnitudes of α, β exceed speciﬁed tolerances, rectify
the osculating orbit by making t0 = t and going back to step (a).
Due to the built-in rectiﬁcation procedure, the method never faces the like-
lihood of numerical instability. We can use a suﬃciently small time interval,
Δt, to ensure an essentially forward marching solution, such as that with a
ﬁnite-diﬀerence scheme.
Example 6.2. A spacecraft is on an outbound interplanetary voyage from the
earth. The current heliocentric position and the inertial velocity of the space-
craft referred to the ecliptic are given by
R(0) =
⎛
⎝
−27
147.5
0.1
⎞
⎠× 106 km,
V(0) =
⎛
⎝
−33
−10
1
⎞
⎠; km/s .
The earth’s orbital elements computed from ephemeris charts (Chapter 5) for
the present time are the following:
a = 149597870 km,
e = 0.01667,
τ = −100 mean solar days .
Determine the geocentric position and velocity of the spacecraft 100 mean
solar days from now.

166
6 Perturbed Orbits
In this example, the spacecraft’s initial position is well within the earth’s
sphere of inﬂuence. However, its velocity is quite large, implying that the
sphere of inﬂuence would be crossed in a few days, resulting in a diminish-
ing inﬂuence of the earth’s gravity. For carrying out the given computation,
we shall apply both Cowell’s and Encke’s methods and compare the results.
While a fourth-order Runge–Kutta algorithm (Appendix A) is chosen to inte-
grate the equations of perturbed motion with Cowell’s method, a rather crude
forward-diﬀerence approximation is applied for the time derivatives in a time-
marching solution by Encke’s method, with an update in the osculating orbit
per day. The programs necessary in the two methods are encoded in cowell.m
(Table 6.1), encke.m (Table 6.2), perturb.m (Table 6.3), and disturb.m (Ta-
ble 6.4). In addition, a code named orbit.m (Table 6.5) is necessary for the
orbital position of the earth in the ecliptic plane. The programs require the
elliptical trajectory code, trajE.m (Table 4.3), and Kepler’s equation solver,
kepler.m (Table 4.2). The plots resulting from the two simulations are com-
pared with the conic solution (unperturbed two-body solution) in Figs. 6.3–
6.5. The heliocentric coordinates of the spacecraft (Fig. 6.3) and the inertial
velocity components (Fig. 6.4) show a marked deviation from the conic so-
lution. The two perturbed solutions are also signiﬁcantly diﬀerent from one
another. The reason for the diﬀerence between the two solutions is the ﬁrst-
order, forward-diﬀerence approximation applied in Encke’s method, whereas
Cowell’s method is applied with a ﬁfth-order accuracy. When the radial dis-
tance and speed relative to the sun are compared in Fig. 6.5, we observe an
accumulation of the various errors, resulting in a larger diﬀerence among the
three methods. We can improve the accuracy of Encke’s method by choosing
a higher-order ﬁnite-diﬀerence approximation.
Table 6.1. M-ﬁle cowell.m for Integrating the Perturbed Equation of Motion
%Determination of spacecraft’s heliocentric position and velocity
%after time ’t’ disturbed by a planet of gravity constant ’mu3’ and
%’orb’ orbit around the sun, by direct numerical integration (Cowell’s method)
%(c) 2006 Ashish Tewari
global mu; mu=1.32712440018e11; %sun’s gravity constant
global mu3; mu3=398600.4; %earth’s gravity constant
global orb;orb=[149597870;0.01667;0;0;0;-100*24*3600];%earth’s orbital elements
R0=1e8*[-0.27;1.475;0.001]; %spacecraft initial position
V0=[-33;-10;1]; %spacecraft’s initial velocity
options=odeset(’RelTol’,1e-8);
[T,X]=ode45(’perturb’,[0 100*24*3600],[R0;V0]);

6.6 Numerical Solution to the Perturbed Problem
167
Fig. 6.3. Heliocentric position of a spacecraft on an interplanetary voyage.
Fig. 6.4. Velocity relative to the sun of a spacecraft on an interplanetary voyage.

168
6 Perturbed Orbits
0
20
40
60
80
100
28
30
32
34
36
V (km/s)
0
20
40
60
80
100
140
160
180
200
Time (days)
R(×106km)
Encke’s method
Cowell’s method
Conic solution
Fig. 6.5. Spacecraft’s radial distance and relative speed with respect to the sun.
Table 6.2. M-ﬁle encke.m for Integrating the Perturbed Equation of Motion by
Encke’s Method
%Determination of spacecraft’s heliocentric position and velocity
%after time ’t’ disturbed by a planet of gravity constant ’mu3’ and
%’orb’ orbit around the sun, by Encke’s method
%(c) 2006 Ashish Tewari
global mu; mu=1.32712440018e11; %sun’s gravity constant
global mu3; mu3=398600.4; %earth’s gravity constant
global orb;orb=[149597870;0.01667;0;0;0;-100*24*3600];%earth’s orbital elements
t=0;
i=1;
R0=1e8*[-0.27;1.475;0.001]; %spacecraft initial position
V0=[-33;-10;1]; %spacecraft’s initial velocity
R=R0;V=V0;
dt=24*3600;
tf=100*dt;
while t<=tf
alpha=zeros(3,1);
beta=zeros(3,1);
[Rb,Vb]=trajE(mu,t,R,V,t+dt);
rb=norm(Rb);
r=norm(R);
[R3,V3]=orbit(mu,orb,t);
ad=disturb(mu3,R,R3);
beta=mu*dt*(1-(rb/r)^3)/rb^3+ad*dt;
alfa=beta*dt;
R=Rb+alpha;
V=Vb+beta;
Rs(:,i)=R;Vs(:,i)=V;Ts(i,1)=t;
t=t+dt;
i=i+1;
end
end

6.6 Numerical Solution to the Perturbed Problem
169
Table 6.3. M-ﬁle perturb.m for Specifying the Perturbed Equation of Motion
function xdot=perturb(t,x)
%(c) 2006 Ashish Tewari
global mu;
global mu3;
global orb;
%program for the perturbed equations of motion
R=x(1:3,1); %position of s/c relative to primary
r=norm(R);
xdot(1:3,1)=x(4:6,1);
[R3,V3]=orbit(mu,orb,t); %position and velocity of third body
ad=disturb(mu3,R,R3); %disturbing acceleration
xdot(4:6,1)=-mu*R/r^3+ad;
Table 6.4. M-ﬁle disturb.m for Calculating the Disturbance Acceleration
function a=disturb(mu3,R,R3)
%Program for calculating the disturbance acceleration ’a’ caused by a third
%body on a two-body orbit
%mu3: gravitational constant of the disturbing body ’m3’
%R: position of mass ’m2’ relative to primary mass ’m1’
%R3: position of ’m3’ relative to ’m1’
%(c) 2006 Ashish Tewari
r=norm(R);
r3=norm(R3);
R23=R-R3;
r23=norm(R23);
fx=(r23/r3)^3-1;
a=-mu3*(R+fx*R3)/r23^3;
Table 6.5. M-ﬁle orbit.m for Calculating the Position and Velocity of the Disturbing
Body
function [r,v]=orbit(mu,orb,t)
%program for position and velocity of a body in ’orb’ elliptical orbit
%Elements of ’orb’: 1x1: a; 2x1:e; 3x1:i; 4x1:w; 5x1: Om; 6x1: tau
%(c) 2006 Ashish Tewari
a=orb(1);e=orb(2);i=orb(3);w=orb(4);Om=orb(5);tau=orb(6);
n=sqrt(mu/a^3);
M=-n*tau;
E=kepler(e,M);
r0=a*(1-e*cos(E));
R0=a*[cos(E)-e;sqrt(1-e^2)*sin(E);0];
V0=sqrt(mu*a)*[-sin(E);sqrt(1-e^2)*cos(E);0]/r0;
[R,V]=trajE(mu,0,R0,V0,t);
if abs(i)>=1e-6
C=rotation(i,Om,w);
else
C=eye(3);
end
r=C*R;
v=C*V;

170
6 Perturbed Orbits
6.7 Summary
The Keplerian motion is perturbed by external disturbances caused by a non-
uniform gravitational ﬁeld due to an aspherical planetary mass, gravitational
inﬂuence of a third body, atmospheric drag, thrust of rocket engines, and solar
radiation pressure. The conservative gravitational perturbations can be mod-
eled using analytical methods and lead to precession of the orbital plane. Sun
synchronous orbits take advantage of the regression of nodes due to orbital
precession, while highly eccentric Molniya orbits must have a critical inclina-
tion such that there is no rotation of apsides caused by orbital precession. The
nonconservative perturbations—such as atmospheric drag—change the shape
of the orbit, resulting in a variation of semi-major axis and eccentricity. The
sphere of inﬂuence is a useful concept for analyzing third-body perturbations
and results in the patched-conic approximation for interplanetary trajecto-
ries. For a numerical solution of the exact perturbed equations of motion,
two diﬀerent integration procedures can be employed: direct numerical inte-
gration (Cowell’s method), and deviation from the instantaneous two-body
solution (Encke’s method). Cowell’s method is eﬃcient when the perturbing
acceleration is comparable (or larger) in order of magnitude to the primary
acceleration. However, Encke’s method is a better choice for long-range inter-
planetary missions as it is both eﬃcient and robust with respect to numerical
instabilities, on account of its built-in rectiﬁcation procedure.
Exercises
6.1. The mean daily motion of Mars with respect to the sun is 0.524◦/day.
What is the inclination of a synchronous orbit of 300 km altitude around Mars?
6.2. Determine the elements of a Molniya orbit with a period of half-sidereal
day and a perigee of 500 km.
6.3. The motion of a spacecraft under a constant thrust, fT, can be treated
in a manner similar to the drag problem. Show that for a constant tangential
thrust, fT , the following closed-form expression can be derived for the orbital
speed, v, of a vehicle originally in a circular orbit of radius r0:
v .= ds
dt =
(
2fT
m s + μ
2
r −1
r0

,
where s denotes the orbital arc length. Furthermore, show that if the accelera-
tion due to thrust, fT
m , is so small that the vehicle follows a nearly circular
arc, the increasing radius of the spiral can be approximated by
r =
r0
1 −2fT s
mv2
0
,

6.7 Summary
171
where v0 is the initial speed. Derive an expression for the total time required
by such a spacecraft to escape the planet’s gravity.
6.4. Repeat Exercise 6.3 using a constant circumferential (rather than tangen-
tial) thrust. Which approach is more eﬃcient if a planetary escape is intended?
6.5. Write a program for numerically integrating the perturbed orbital equa-
tion for a spacecraft in a circular earth orbit of 400 km altitude, under a
constant tangential de-boost thrust deceleration of 2 m/s2 for a period of
500 s. Neglecting the mass variation caused by the ﬁring of rocket motors,
calculate the new orbital elements after the ﬁring ceases.
6.6. Assuming that the atmospheric density varies exponentially with the
altitude, h, such that
ρ = ρ0e−h
H ,
where ρ0 and H are atmospheric constants, derive an approximate expression
for the life of a satellite in a low-altitude, circular orbit (h0 ≪Re) around a
spherical planet of radius Re. Take the drag coeﬃcient, CD, reference area,
A, and mass, m, of the satellite.
6.7. Using the sixth-order R-K-N algorithm given in Appendix A, write a
program for solving the problem of interplanetary ﬂight given in Example 6.2
by Cowell’s method. Compare the ﬁnal position and velocity of the spacecraft
with those computed in the example by the R-K-4(5) method.

7
The Three-Body Problem
7.1 Aims and Objectives
•
To model the problem of three bodies in mutual gravitational attaction
and present its general solution by Lagrange.
•
To develop the restricted three-body problem for modeling the ﬂight of a
spacecraft under the gravitational inﬂuence of two massive bodies.
•
To discuss the solvability, equilibrium points, and numerical solutions of
the restricted three-body problem with examples of
earth–moon–spacecraft trajectories.
7.2 Equations of Motion
The three-body problem refers to the dynamical system comprising the motion
of three masses under mutual gravitational attraction. It usually arises when
we are interested in either the two-body orbital perturbations caused by a
distant third body, or the motion of a smaller body in the gravitational ﬁeld
formed by two larger bodies. The analysis of the former kind are undertaken
when considering either the orbital motion of a moon around a planet per-
turbed by the sun or that of a satellite around the earth perturbed by the
sun or moon. The latter model is generally applied to a comet under the com-
bined gravity of the sun and Jupiter, a spacecraft under mutual gravity of the
earth–moon system, or an interplanetary probe approaching (or departing)
a planet. The three-body problem is thus a higher-order gravitational model
compared to the two-body problem considered in Chapters 4 and 5 and is a
much better approximation of the actual motion of a spacecraft in the solar
system.
The three-body problem has attracted attention of mathematicians and
physicists over the past 300 years, primarily due to its promise of modeling
the erratic behavior of the moon. The ﬁrst analyses of the three-body problem
were undertaken by Newton and Euler, but the ﬁrst systematic study of its

174
7 The Three-Body Problem
equilibrium points was presented by Lagrange, both in the 18th century. One
could write the equations of motion for the three-body problem using the
N -body equations derived in Chapter 4 with N = 3 as follows:
d2Ri
dt2
= G
3

j̸=i
mj
R3
ij
(Rj −Ri)
i = 1, 2, 3,
(7.1)
where G is the universal gravitational constant, Ri denotes the position of the
center of mass of body i, and Rij .=| Rj −Ri | denotes the relative separation
of the centers of mass of bodies i,j. The potential energy of the three-body
system is given by
V .= 1
2G
3

i=1
mi
3

j̸=i
mj
Rij
= −G
m1m2
r12
+ m2m3
r23
+ m1m3
r13

,
(7.2)
while its kinetic energy is the following:
T .= 1
2
3

i=1
3

j̸=i
mi
dRij
dt
2
.
(7.3)
Since no external force acts upon the system, the total energy, E = T + V , is
conserved and represents a scalar constant. Another six scalar constants are
obtained by considering the motion of the center of mass, rc, which follows
a straight line at constant velocity, vc0, beginning from a constant initial
position, rc0, due to Newton’s ﬁrst law of motion (Chapter 4):
rc .=
 3
i=1 miRi
 3
i=1 mi
= vc0t + rc0 ,
(7.4)
while three more scalar constants arise out of the conserved angular momen-
tum H, of the system about the center of mass. There are thus a total of
only 10 scalar constants of the three-body problem, whereas we need 18 for a
complete analytical solution. The three-body problem has therefore resisted
attempts at a closed-form, general solution. However, Lagrange showed that
certain particular solutions of the problem exist when the motion of the three
bodies is conﬁned to a single plane. Such a coplanar motion of bodies is the
most common occurrence in the universe, such as the solar system. Before
attempting Lagrange’s particular solutions, let us rewrite the equations of
motion in the following form:
fi = Gmi
3

j̸=i
mj
R3
ij
(Rj −Ri)
i = 1, 2, 3,
(7.5)
where fi is the net force experienced by the mass mi due to the other two
masses.

7.3 Lagrange’s Solution
175
7.3 Lagrange’s Solution
The particular solution by Lagrange is conﬁned to a coplanar motion of the
three masses. Let us choose a rotating coordinate frame ﬁxed to the common
center of mass such that the three bodies appear to be moving radially in
the rotating frame. At any particular instant of time, the angle made by the
rotating frame, (i, j), with an inertial frame, (I, J), is θ(t). Then the coordinate
transformation between the two frames at that instant is given by

I
J

= C(t)

i
j

,
(7.6)
where the rotation matrix, C(t), is the following (Chapter 2):
C(t) .=

cos θ(t) −sin θ(t)
sin θ(t)
cos θ(t)

.
(7.7)
Now, in the rotating frame, the location of the mass mi at time t is given by
Ri(t) = a(t)Ri(0) ,
(7.8)
where Ri(0) is the initial location of the mass at t = 0. At any given instant, all
three bodies share the same values of θ(t) and a(t). However, due to the radial
movement of the bodies, the angular speed, ˙θ, of the frame keeps changing
with time due to conservation of angular momentum. By substituting Eq. (7.8)
into Eq. (7.5), we can express the net force experienced by mi as
fi(t) = fi(0)
a2
,
(7.9)
and the skew-symmetric matrix S(ω) of the frame’s angular velocity, ω = ˙θk,
is the following (Chapter 2):
S(ω) .= CT ˙C =
 0 −1
1
0

˙θ .
(7.10)
The net acceleration of mi expressed in the rotating frame is simply the fol-
lowing (Chapter 4):
d2Ri
dt2
= C
∂2Ri
∂t2 + 2ω × ∂Ri
∂t
+ dω
dt Ri + ω × [ω × Ri]

,
(7.11)
which can be written as follows (Chapter 2):
d2Ri
dt2
= C
∂2Ri
∂t2 + 2S(ω)∂Ri
∂t
+ ˙S(ω)Ri + S2(ω)Ri
&
,
(7.12)

176
7 The Three-Body Problem
or, substituting Eqs. (7.8) and (7.9), we have
mi
d2a
dt2 −a ˙θ2

I + 1
a
d(a2 ˙θ)
dt
J

Ri(0) = fi(0)
a2
,
(7.13)
where I is the identity matrix and
J =

0 −1
1
0

.
(7.14)
Since the net force experienced by mi is toward the common center of mass
(leading to its radial and rotary motion), we can express the force by
fi(t) = −mib2Ri(t) ,
(7.15)
where b is a constant. In a planar motion with radial acceleration, we have
R2
i ˙θ = constant ,
(7.16)
or,
da2 ˙θ
dt
= 0 .
(7.17)
Therefore, it follows from Eq. (7.13) that
d2a
dt2 −a ˙θ2 = −b2
a2 .
(7.18)
Clearly, Eqs. (7.17) and (7.18) represent a conic section (Chapter 4) in polar
coordinates, which is the equation of the relative motion of two bodies. Hence,
each mass in the coplanar three-body problem traces a conic section about
the common center of mass. This simple and elegant solution possesses several
interesting cases and oﬀers a valuable insight into an otherwise intractable
problem.
From the general, coplanar motion given above, certain stationary solu-
tions in terms of ﬁxed locations of the masses in the rotating frame can be de-
rived. These solutions represent equilibrium points of the three-body problem
and describe the three bodies moving in concentric, coplanar circles. Obvi-
ously, for a stationary solution with respect to the rotating frame, we require
a constant value of a = 1, which leads to a constant angular speed, ω = ˙θ, by
angular momentum conservation. The equations of motion in such a case are
written as follows:
ω2
G −m2
R3
12
−m3
R3
13

R1 + m2
R3
12
R2 + m3
R3
13
R3 = 0,
m1
R3
12
R1 +
ω2
G −m1
R3
12
−m3
R3
23

R2 + m3
R3
23
R3 = 0,
(7.19)
m1R1 + m2R2 + m3R3 = 0.

7.3 Lagrange’s Solution
177
Particular equilibrium solutions of Eq. (7.19) include the equilateral triangle
conﬁgurations of the three masses, wherein the masses are at the same con-
stant distance from the common center of mass (R12 = R13 = R23 = ρ).
Hence, the angular speed is given by
˙θ2 = G(m1 + m2 + m3)
ρ3
.
(7.20)
Another set of equilibrium points contains the colinear solutions, where
the three masses share a straight line. Let the axial location of the three
masses be given by x1, x2, x3, where we assume x1 < x2 < x3. Then the
equations of motion, written in terms of the distance ratio α .= R23/R12,
yield the following [11]:
x1 = −R12
m2 + (1 + α)m3
m1 + m2 + m3
,
ω2 = G(m1 + m2 + m3)
R3
12(1 + α)2
m2(1 + α)2 + m3
m2 + (1 + α)m3
(7.21)
(m1 + m2)α5 + (3m1 + 2m2)α4 + (3m1 + m2)α3
−(m2 + 3m3)α2 −(2m2 + 3m3)α −(m2 + m3) = 0 .
The last of Eq. (7.21), called the quintic equation of Lagrange, has only one
positive root, α, which can be seen by examining the signs of the coeﬃcients
(they change sign only once). However, for each speciﬁc conﬁguration of the
three colinear masses, the positive value of α is diﬀerent.
Example 7.1. Numerically determine the values of α for the colinear
(a) earth–moon–spacecraft system,
(b) sun–earth–moon system.
Assume the ratio of the moon’s mass to the earth’s mass is 1/81.3 and that
of the earth’s mass to the solar mass is 1/333, 400. The spacecraft’s mass is
negligible in comparison with the masses of heavenly bodies.
The required numerical computation is easily performed using the intrinsic
MATLAB function root and the last of Eq. (7.21) as follows:
>> m2=1/81.3; %moon between earth and spacecraft (m3=0,m1=1)
>> C=[1+m2
3+2*m2 3+m2 -m2 -2*m2 -m2];
>> roots(C)
ans =
-1.4932 + 0.8637i
-1.4932 - 0.8637i
0.1678
-0.0846 + 0.1310i
-0.0846 - 0.1310i
>> m3=1/81.3; %spacecraft between earth and moon (m1=1,m2=0)
>> C=[1
3 3 -3*m3 -3*m3 -m3];
>> roots(C)
ans =
-1.5014 + 0.8731i
-1.5014 - 0.8731i
0.1778
-0.0875 + 0.1236i
-0.0875 - 0.1236i

178
7 The Three-Body Problem
>> m3=1/81.3; %earth between spacecraft and moon (m1=0, m2=1)
>> C=[1
2 1 -1-3*m3 -2-3*m3 -1-m3];
>> roots(C)
ans =
1.0071
-0.5082 + 0.8660i
-0.5082 - 0.8660i
-0.9953 + 0.0785i
-0.9953 - 0.0785i
Thus, for the earth–moon–spacecraft problem, α = 0.1678, 0.1778, or
1.0071, depending upon whether the moon, the spacecraft, or the earth, re-
spectively, lies between the other two bodies. For the sun–earth–moon system,
the calculations of α are similarly carried out:
>> m3=333400; m2=1/81.3; %moon between earth and sun (m1=1)
>> C=[1+m2 3+2*m2 3+m2 -m2-3*m3 -2*m2-3*m3 -m2-m3];
>> roots(C)
ans =
-50.4637 +86.2542i
-50.4637 -86.2542i
98.9396
-0.5000 + 0.2887i
-0.5000 - 0.2887i
>> m3=333400*81.3; m2=81.3; %earth between moon and sun (m1=1)
>> C=[1+m2 3+2*m2 3+m2 -m2-3*m3 -2*m2-3*m3 -m2-m3];
>> roots(C)
ans =
-50.1385 +86.2542i
-50.1385 -86.2542i
99.2648
-0.5000 + 0.2887i
-0.5000 - 0.2887i
Thus, for the sun–earth–moon problem, α = 98.9396 or 99.2648, depending
upon whether the moon or the earth, respectively, lies between the other two
bodies. The sun is so much more massive compared to the earth and the moon
that the two values of α are very close together, the relative position of the
earth and moon with respect to the sun makes little diﬀerence.
7.4 Restricted Three-Body Problem
When the mass of one of the three bodies, say m3, is negligible in comparison
with that of the other two bodies (called primaries), a simpliﬁcation occurs
in the three-body problem, where we neglect the gravitational pull of m3 on
both m1 and m2. In such a case, the motion of m3 relative to the the primaries
executing circular orbits about the common center of mass is referred to as
the restricted three-body problem. The equations of motion of the restricted
problem are usually nondimensionalized by dividing the masses by the total
mass of the primaries, m1 + m2, and the distances by the constant separation
between the primaries, R12.
μ .=
m2
m1 + m2
,
r1 .= R13
R12
,
(7.22)
r2 .= R23
R12
.

7.4 Restricted Three-Body Problem
179
Furthermore, the value of gravitational constant is nondimensionalized such
that the angular velocity of the primaries, Eq. (7.20), becomes unity. Using
the methods of Chapter 4, we can write the equations of motion of m3 in
terms of its position, r = xi + yj + zk, relative to a rotating frame (i, j, k)
with origin at the common center of mass (Fig. 7.1), and rotating with the
nondimensional velocity, ω = k (Eq. (7.20)):
¨x −2 ˙y −x = −(1 −μ)(x −μ)
r3
1
−μ(1 −μ + x)
r3
2
,
¨y + 2 ˙x −y = −(1 −μ)y
r3
1
−μy
r3
2
,
(7.23)
¨z = −(1 −μ)z
r3
1
−μz
r3
2
.
Note that we have not assumed that m3 lies in the same plane as the primaries.
The set of coupled, nonlinear, ordinary diﬀerential equations has proved un-
solvable in a closed form over the past two centuries. However, we can obtain
certain important analytical insights into the problem without actually solving
it.
L4
L1
x
x
y
x
m3|0
L3
x
L2
x
o
r13
r23
r12
m2
m1
L5
x
Fig. 7.1. Geometry of the restricted three-body problem.

180
7 The Three-Body Problem
7.4.1 Lagrangian Points and Their Stability
We have just seen that certain equilibrium solutions are possible to the general
three-body problem. The equilibrium points for the restricted problem are
called Lagrangian points (or libration points) and can be obtained by equating
the time derivatives in Eq. (7.23) to zero, resulting in the following algebraic
equations:
x = (1 −μ)(x −μ)
r3
1
+ μ(1 −μ + x)
r3
2
,
y = (1 −μ)y
r3
1
+ μy
r3
2
,
(7.24)
0 = (1 −μ)z
r3
1
+ μz
r3
2
.
From the last of Eq. (7.24), we have the result z = 0 for all Lagrangian
points. Therefore, the equilibrium points always lie in the same plane as the
primaries. As we have discovered above, the coplanar equilibrium solutions
consist of the three possible colinear positions of m3, called the colinear La-
grangian points, L1, L2, L3, as well as the two equilateral triangle positions,
called triangular Lagrangian points, L4, L5, with the two primaries (Fig. 7.1).
The points L1, L2, L3 are obtained from the solution of the quintic equation
of Lagrange (the last of Eq. (7.21)), which for m3 = 0 is written as follows:
r5
2 + (3 −μ)r4
2 + (3 −2μ)r3
2 −μr2
2 −2μr2 −μ = 0 .
(7.25)
As seen above, for the small values of μ that are typical in the solar system, we
have only one real root of Eq. (7.25). The triangular Lagrangian points, L4, L5,
correspond to r1 = r2 = 1 and are given by the coordinates (μ −1
2, ±
√
3/2).
In order to investigate the stability of the Lagrangian points, we con-
sider inﬁnitesimal displacements, δx, δy, δz, from each equilibrium position,
x0, y0, 0. If the displacements remain small, the equilibrium point is said to
be stable, otherwise, unstable. Substituting x = x0 + δx, y = y0 + δy, z = δz
into the equations of motion, and neglecting second- and higher-order terms
involving the small displacements, we have the following equation of motion
for out-of-plane motion:
δ¨z +
(1 −μ)
r3
1
+ μ
r3
2

δz .
(7.26)
Now, for small displacements the denominator terms can be approximated
through binomial expansion as follows:
r−3
1
≈[(x0 −μ)2 + y2
0]−3
2 −3r−5
10 [(x0 −μ)δx + y0δy],
r−3
2
≈[(x0 + 1 −μ)2 + y2
0]−3
2 −3r−5
20 [(x0 + 1 −μ)δx + y0δy],
(7.27)

7.4 Restricted Three-Body Problem
181
where r10, r20 are the equilibrium values of r1, r2. Upon substitution of
Eq. (7.27) into Eq. (7.26), we have
δ¨z + cδz = 0 ,
(7.28)
where
c .= (1 −μ)[(x0 −μ)2 + y2
0]−3
2 + μ[(x0 + 1 −μ)2 + y2
0]−3
2
(7.29)
is a constant. Thus, the out-of plane motion is decoupled from that occurring
within the plane of the primaries. The general solution to Eq. (7.28) is written
as
δz = δz0e
√−ct ,
(7.30)
which represents a stable motion (constant amplitude oscillation) as long as
c ≥0, which is always satisﬁed. Hence, the out-of-plane small disturbance mo-
tion is unconditionally stable and can be safely ignored in a further analysis.1
For the small displacement, coplanar motion about a triangular La-
grangian point, say L4, we can write
δ¨x −2δ ˙y −3
4δx −3
√
3(μ −1
2)
2
δy = 0,
δ¨y + 2δ ˙x −3
√
3(μ −1
2)
2
δx −9
4δy = 0,
(7.31)
whose general solution (Chapter 14) to initial displacement δx0, δy0 can be
written as
δr = δr0eλt ,
(7.32)
where δr = (δx, δy)T , δr0 = (δx0, δy0)T , and λ is the eigenvalue [4] of the
following matrix:
A =
⎛
⎜
⎜
⎜
⎝
0
0
1
0
0
0
0
1
3
4
3
√
3(μ−1
2 )
2
0
2
3
√
3(μ−1
2 )
2
9
4
−2 0
⎞
⎟
⎟
⎟
⎠.
(7.33)
The resulting characteristic equation for λ is thus the following:
λ4 + λ2 + 27
4 μ(1 −μ) = 0 ,
(7.34)
whose roots are
λ2 = 1
2[±

1 −27μ(1 −μ) −1] .
(7.35)
1 Battin [11] presents the general solution to the large displacement, out-of-plane,
rectilinear motion about the center of mass (x0 = y0 = 0).

182
7 The Three-Body Problem
For stability, the values of λ must be purely imaginary, representing a har-
monic oscillation about the equilibrium point. If the quantity in the square-
root is negative, there is at least one value of λ with a positive real part
(unstable system). Therefore, the critical values of μ representing the bound-
ary between stable and unstable behavior of L4 are those that correspond
to
1 −27μ(1 −μ) = 0 .
(7.36)
Hence, for the stability of the triangular Lagrangian points, we require either
μ ≤0.0385209 or μ ≥0.9614791, which is always satisﬁed in the solar system.
Therefore, we expect that the triangular Lagrangian points would provide
stable locations for smaller bodies in the solar system. The existence of such
bodies for the sun–Jupiter system has been veriﬁed in the form of Trojan
asteroids. For the earth–moon system, μ = 0.01215 is well within the stable
region, hence one could expect the triangular points to be populated. However,
the earth–moon system is not a good example of the restricted three-body
problem because of an appreciable inﬂuence of the sun’s gravity, which renders
the triangular points of earth–moon system unstable. Hence, L4, L5 for the
earth–moon system are empty regions in space, where one cannot park a
spacecraft.
For a given system, one can determine the actual small displacement dy-
namics about the stable triangular Lagrangian points in terms of the eigen-
values, λ. For example, the earth–moon system has nondimensional natural
frequencies 0.2982 and 0.9545, which indicate long-period and short-period
modes of the small displacement motion. However, it is still left for us to
investigate how much energy expenditure is necessary to reach the stable tri-
angular points.
For the stability of the colinear Lagrangian points, we employ y0 = 0, and
the resulting equations of small displacement can be written as follows:
δ¨x −2δ ˙y −
 2(1 −μ)
(x0 −μ)3 +
2μ
(x0 + 1 −μ)3 + 1

δx = 0,
δ¨y + 2δ ˙x +

1 −μ
(x0 −μ)3 +
μ
(x0 + 1 −μ)3 −1

δy = 0 .
(7.37)
The eigenvalues of this system are the eigenvalues of the following square
matrix:
A =
⎛
⎜
⎜
⎝
0
0
1
0
0
0
0
1
α
0
0
2
0 −β −2 0
⎞
⎟
⎟
⎠,
(7.38)
where
α = 2(1 −μ)
(x0 −μ)3 +
2μ
(x0 + 1 −μ)3 + 1,
β =
1 −μ
(x0 −μ)3 +
μ
(x0 + 1 −μ)3 −1 .
(7.39)

7.4 Restricted Three-Body Problem
183
The resulting characteristic equation for the eigenvalues, λ, is the following:
λ4 + (4 + β −α)λ2 −αβ = 0 .
(7.40)
For the colinear Lagrangian points, α > 0 and β < 0, which implies that
the constant term in the characteristic equation is always positive. Therefore,
there is always at least one eigenvalue with a positive real part, hence the
system is unconditionally unstable. Thus, the colinear Lagrangian points of
any restricted three-body system are always unstable. However, a spacecraft
can successfully orbit a colinear point with small energy expenditure. Such an
orbit around a Lagrangian point is termed a halo orbit, and several spacecraft
have been designed to take advantage of halo orbits around the sun–earth L1
and L2 points for monitoring the interplanetary zone ahead of and behind
the earth. For instance, a spacecraft near the sun–earth L1 point can provide
useful data about an approaching solar wind, and another about L2 can ex-
plore the extent of the earth’s magnetic ﬁeld. Examples of spacecraft in halo
orbits include the International Sun-Earth Explorer (ISEE-3), the Microwave
Anisotropy Probe (MAP), the Advanced Composition Explorer (ACE), and
the GEOTAIL missions of NASA.
7.4.2 Jacobi’s Integral
Jacobi derived the only additional scalar constant of the restricted three-body
motion (out of the six necessary for a complete, closed-form solution), called
Jacobi’s integral. He deﬁned a scalar function, J, by
J .= 1
2(x2 + y2) + 1 −μ
r1
+ μ
r2
.
(7.41)
The equation of motion of the inﬁnitesimal mass can then be expressed as
follows in the frame rotating with angular velocity ω = k:
¨r + ω × ˙r = ∂J
∂r
T
,
(7.42)
where ˙r .= ˙xi+ ˙yj+ ˙zk is the velocity of the mass relative to the rotating frame,
and (∂J/∂r)T represents the gradient of J with respect to r (Chapter 3). By
taking the scalar product of Eq. (7.42) with ˙r, we have
¨r · ˙r = 1
2
d ˙r2
dt = ∂J
∂r
T
· ˙r = dJ
dt ,
(7.43)
which is an exact diﬀerential and can be integrated to obtain
C = 1
2v2 −1
2(x2 + y2) −1 −μ
r1
−μ
r2
.
(7.44)
Here, C is the constant of integration, called Jacobi’s constant, and v .= ˙r
is the relative speed of the mass in the rotating frame. The Jacobi constant

184
7 The Three-Body Problem
can thus be thought to represent a pseudo-energy of the mass m3, which is a
sum of the relative kinetic energy, the gravitational potential energy, and an
additional pseudo-potential energy, −1/2(x2+y2). The value of C at any point
is a measure of its relative energy. The most useful interpretation of Jacobi’s
integral lies in the contours of zero relative speed, v = 0, which represent the
boundary between a motion toward higher potential, or the return trajectory
to the lower potential. On such a boundary, the mass must stop and turn
back. Hence, the zero relative speed curves demarcate the regions accessible
to a spacecraft and cannot be crossed.
Example 7.2. Plot the zero relative speed contours of constant C for −1.5 ≤
C ≤−2.5 in the neighborhood of the Lagrangian points L1, L2, and L4 for
the earth–moon system with μ = 0.01215. Analyze the energy requirements
for reaching the given Lagrangian points.
The contours are plotted in Figs. 7.2 and 7.3, with the use of MATLAB
statements such as
>> m=0.01215; %mu for earth-moon system
>> x=-1:0.02:1;y=0.5:0.005:1;
>> for i=1:size(x,2);for j=1:size(y,2);X(i,:)=x(i);
Y(:,j)=y(j);r1=sqrt((x(i)-m)^2+y(j)^2);
r2=sqrt((x(i)+1-m)^2+y(j)^2);
C(i,j)=-0.5*(x(i)^2+y(j)^2)-(1-m)/r1-m/r2;end;end
>> surfc(Y,X,C) %surface contours of constant C in nbd. of L4
The contours of C are seen in Fig. 7.2 to enclose a small spherical space
in the vicinity of m2, and a large cylindrical region around the origin with
axis perpendicular to the orbital plane. We expect a similar spherical contour
around the other primary, m1. The closed zero-speed contours around a pri-
mary indicate that a ﬂight from one primary to the other is impossible. As the
value of C becomes less negative, the contours expand in size and may touch
one another for some special values of C. For example, the zero-speed con-
tours for C = −1.594 [which corresponds to C(L2)] touch at the Lagrangian
point L2, thereby indicating the possibility of crossing over from one primary
to the other through L2 in a closed ﬂight path, called free-return trajectory.
At a larger value of C corresponding to C(L1), the region around L2 opens
up, indicating ﬂight at nonzero relative velocity between the primaries, and
the contours touch at L1. For still larger C, corresponding to C(L3), the zero
speed contours touch at L3, while the region around L1 is opened up, indicat-
ing an escape from the gravitational inﬂuence of the primaries. In such a case,
contours enclose the triangular Lagrangian points, as depicted in Fig. 7.3, in-
dicating that a ﬂight to reach them is impossible from any of the primaries.
As the value of C becomes very large, the forbidden regions around L4, L5
shrink, but never actually vanish, thereby denoting that the stable triangular
Lagrangian points can be approached (but never reached) only with a very
high initial energy.

7.4 Restricted Three-Body Problem
185
−0.5
0
0.5
−1.5
−1
−0.5
−2.5
−2
−1.5
y
x
C
L1
L2
Fig. 7.2. Zero-speed contours of Jacobi’s constant in the neighborhood of earth–
moon L1 and L2.
7.4.3 Numerical Solution of the Restricted Problem
The restricted problem of three bodies appears more amenable to a solution
than the general problem, due to the availability of an additional integral of
motion, namely Jacobi’s integral. However, the restricted three-body prob-
lem is unsolvable in a closed form because it does not possess the adequate
number of scalar constants. With Jacobi’s integral, the total number of scalar
constants is only 13 whereas 18 are required for a closed-form solution. The
unsolvability of the restricted three-body problem was also demonstrated in
the 19th century by Poincar´e using phase-space surfaces. The problem is also
a member of a select group of mechanical systems, called chaotic systems,
where a small change in the initial condition results in an arbitrarily large
change in the response. Such systems are quite diﬃcult to model, and their
behavior is studied by a special branch of physics.
Numerical solutions to the problem have become possible since the availa-
bility of digital computers. When searching for a numerical solution, one de-
sires a periodic behavior, which allows numerical integration of the equations
of motion for only one time period, and a repetitive trajectory thereafter.
Such solutions are encountered in the two-body orbits. However, in the re-
stricted three-body problem, such periodic orbits are rarely encountered, and
generally we have solutions changing forever with time. Numerical integration

186
7 The Three-Body Problem
0.4
0.6
0.8
1
−1
0
1
−2.2
−2
−1.8
−1.6
−1.4
y
x
C
L4
Fig. 7.3. Zero-speed contours of Jacobi’s constant in the neighborhood of earth–
moon L4.
for such aperiodic solutions is frought with inaccuracies, due to truncation er-
rors (Appendix A) that accumulate over time, and may grow to unacceptable
magnitudes within a few orbital time periods of the primaries. Therefore, an
accurate time-integration scheme, such as a higher-order Runge–Kutta tech-
nique (Appendix A), is employed with close tolerances to achieve reasonably
accurate solutions.
Example 7.3. Simulate the trajectory of a spacecraft passing through the point
(0.1, 0) in the earth–moon system, with the following relative velocity compo-
nents:
(a) ˙x = 0, ˙y = 0.5,
(b) ˙x = −4, ˙y = 1,
(c) ˙x = −3.35, ˙y = 3,
(d) ˙x = −3.37, ˙y = 3,
(e) ˙x = −3.4, ˙y = 3,
(f) ˙x = −3.5, ˙y = 3,
(g) ˙x = −3.6, ˙y = 3.
We begin by writing a MATLAB program for the restricted three-body equa-
tions of motion, called res3body.m, tabulated in Table 7.1. This code pro-

7.4 Restricted Three-Body Problem
187
0
0.02
0.04
0.06
0.08
0.1
−0.035
−0.03
−0.025
−0.02
−0.015
−0.01
−0.005
0
0.005
0.01
x
y
Earth
Fig. 7.4. Spacecraft trajectory with initial conditions ˙x(0) = 0, ˙y(0) = 0.5 [case
(a)].
−0.3
−0.2
−0.1
0
0.1
0.2
0.3
−0.4
−0.3
−0.2
−0.1
0
0.1
0.2
0.3
x
y
Fig. 7.5. Spacecraft trajectory with ˙x(0) = −4, ˙y(0) = 1 [case (b)].

188
7 The Three-Body Problem
0
1
2
3
4
5
6
0
0.05
0.1
0.15
0.2
0.25
0.3
0.35
t
r1
Fig. 7.6. Time variation of the orbital radius of spacecraft with ˙x(0) = −4, ˙y(0) = 1
[case (b)].
vides the nonlinear diﬀerential equations to the intrinsic Runge–Kutta solver,
ode45.m. The trajectory for case (a) is simulated for t = 1 (one complete
revolution of the primaries in the nondimensional time is t = 2π, which is
about 30 days) and is plotted in Fig. 7.4. The orbits about the earth (μ, 0),
with both apsidal and nodal rotation of the orbital plane caused by moon’s
gravity, are evident. As the initial velocity is increased in case (b), the orbits
around the earth change into more energetic, highly eccentric trajectories, but
the vehicle is still unable to cross the zero velocity contour of C for a lunar
journey (Fig. 7.5). The time history of orbital radius, r1, over one complete
revolution of the primaries (t = 2π) in case (b) is shown in Fig. 7.6, indicating
a decay of the orbit with time due to the moon’s gravitation.
Figure 7.7 shows three free-return trajectories around the moon, arising
out of cases (c)–(e). These trajectories can be employed for lunar exploration,
without fuel expenditure for the return journey.2 In case (c), the initial veloc-
ity is suﬃciently large for a free-return trajectory around the moon and back
to the starting point in about t = 3.57. In this case, the spacecraft passes
slightly below the moon’s orbit around the earth, but beyond L2. The total
ﬂight time is reduced signiﬁcantly in case (d) to about t = 2.8, when the space-
2 The free-return concept formed the basis of Jules Verne’s famous novel From the
Earth to the Moon (1866), which was ultimately realized about a century later
by the manned lunar exploration through the Apollo program.

7.4 Restricted Three-Body Problem
189
craft passes around the moon, between L1 and L2. In the process, the return
trajectory has a slightly larger kinetic energy due to the boost provided by the
lunar swing-by. Lunar swing-by trajectories have been employed in cheaply
boosting several spacecraft to the sun–earth Lagrangian points, such as the
ISEE-3, MAP, and ACE missions of NASA [12]. In case (e), the round-trip
ﬂight time increases to about t = 3.45, as the spacecraft swings-by the moon
at a greater distance, passing beyond L1. For cases (f) and (g), plotted in
Fig. 7.8, qualitatively diﬀerent trajectories are observed. Case (f) is simulated
for a long time (t = 35), demonstrating that the spacecraft makes a ﬁrst pass
of the moon at a large distance from L1, but is unable escape the earth’s
gravity, which brings it closer to the moon in the next pass—crossing the
earth–moon line near L2—and ultimately brings the spacecraft into earth’s
orbit of ever-decreasing radius [somewhat similar to case (b)]. Case (f) illus-
trates a novel method of cheaply launching a satellite into the geosynchronous
orbit (r1 ≈0.1) with the use of multiple lunar swing-bys. A similar approach
of multiple planetary swing-bys has been found useful in reducing the mission
cost of spacecraft bound for distant planets. As the initial energy is increased
in case (g), the spacecraft does not return to earth but embarks on an escape
trajectory from the earth–moon system, as depicted in Fig. 7.8. In such a tra-
jectory, advantage is derived of gravity assist from the moon, thereby reducing
the fuel expenditure, and hence, total cost of an interplanetary mission.
−1.4
−1.2
−1
−0.8
−0.6
−0.4
−0.2
0
0.2
−0.8
−0.6
−0.4
−0.2
0
0.2
0.4
0.6
0.8
x
y
L2
L1
Moon
Earth
Case (c) 
Case (e) 
Case (d) 
Fig. 7.7. Free lunar return trajectories [cases (c)–(e)].

190
7 The Three-Body Problem
−3
−2
−1
0
1
2
3
4
5
−5
−4
−3
−2
−1
0
1
2
3
4
x
y
Moon
Earth
L1
L2
Case (f)
Case (g)
Fig. 7.8. Multiple lunar swing-by and escape trajectories [cases (f) and (g)].
Table 7.1. M-ﬁle res3body.m for Equations of Motion of the Restricted Three-Body
Problem
function Xdot=res3body(t,X)
%Equations of motion for the restricted three-body problem.
%(c) 2006 Ashish Tewari
m=0.01215; %nondimensional mass of second primary
x=X(1); %x-coordinate
y=X(2); %y-coordinate
r1=sqrt((x-m)^2+y^2); %distance from first primary
r2=sqrt((x+1-m)^2+y^2); %distance from second primary
%Equations of motion:
Xdot(1,1)=X(3);
Xdot(2,1)=X(4);
Xdot(3,1)=x+2*Xdot(2,1)-(1-m)*(x-m)/r1^3-m*(x+1-m)/r2^3;
Xdot(4,1)=y-2*Xdot(1,1)-(1-m)*y/r1^3-m*y/r2^3;
The general mission design in a restricted three-body transfer involves the
solution of a two-point boundary value problem, which requires special ana-
lytical and numerical techniques, similar to Lambert’s guidance problem for
two-body orbits (Chapter 5). These approaches range from the analytical
search for particular periodic solutions passing through the given points [13],
to the numerical patching of two-body Lambert solutions [14]. Such approx-
imate solutions are indispensible and have served well in practical mission

7.5 Summary
191
designs, keeping in mind the impossibility of solving the restricted three-body
problem in a closed form (or even an approximate analytical form), thereby
excluding the two-point boundary-value solutions of the actual problem.
7.5 Summary
The three-body problem arises when we are interested in either the two-body
orbital perturbations caused by a distant third body or the motion of a smaller
body in the gravitational ﬁeld formed by two larger bodies. The physical
conservation laws yield only 10 scalar constants of the three-body problem,
whereas 18 are required for a complete analytical solution. Lagrange obtained
particular solutions of the problem for a coplanar motion of the three bodies,
including the colinear and equilateral triangle equilibrium point solutions with
reference to a rotating frame. When the mass of one of the bodies is negligible
compared to that of the other two bodies, the restricted three-body problem
arises. Although the restricted problem is also unsolvable in a closed form, the
stability of its equilibrium points—called Lagrangian points—can be analyzed
using small disturbance approximation. While the colinear Lagrangian points
of any restricted three-body system are always unstable, the equilateral points
are conditionally stable (and the condition is always satisﬁed in the solar
system). There exists an additional scalar constant of the restricted three-
body motion, called Jacobi’s integral, the zero relative speed contours of which
provide an analysis of the accessible regions for the smallest body (spacecraft).
Careful numerical integration of the restricted three-body equations of motion
yields interesting trajectories and can be utilized to design and analyze lunar
and interplantery missions.
Exercises
7.1. A spacecraft is located 6600 km away from the earth’s center. What
should be the minimum relative velocity of the spacecraft at this point in
order to reach a triangular Lagrangian point of the earth–moon system?
7.2. Determine the locations of the Lagrangian points for the sun–Jupiter
system with μ = 0.00095369.
7.3. For the sun–Jupiter system, determine the nondimensional frequencies
of small displacement motion of the Trojan asteroids about the triangular
Lagrangian point.
7.4. Plot the zero relative speed contours of constant C for −1.5 ≤C ≤−2.5
in the neighborhood of the Lagrangian points L1, L2, and L4 for the sun–
Jupiter system.

192
7 The Three-Body Problem
7.5. Simulate the trajectory of a comet passing through the point (0.1, 0) in
the sun–Jupiter system, with a relative velocity of ˙x = −3.1, ˙y = 3, for a
complete revolution of the primaries. What is the time period of the comet’s
solar orbit compared to the time period of the primaries?
7.6. Simulate the trajectory of a comet having undergone a close pass of
Jupiter at the point (−1, 0) in the sun–Jupiter system, with a relative velocity
of ˙x = 0, ˙y = 1.5, for a complete revolution of the primaries. How much time
elapses until the next pass of the comet by Jupiter, compared to the time
period, T, of the primaries?
7.7. An approximate analysis of a comet’s trajectory having passed close to
Jupiter is possible using Tisserand’s criterion. Using the inertial velocity and
position of the comet, V, R, and the relationship between the inertial and
relative velocities (Chapter 5), derive the following alternative expression for
Jacobi’s constant:
C = 1
2V 2 −ω · (R × V) −1
2(x2 + y2) −1 −μ
r1
−μ
r2
,
where ω denotes the angular velocity of the rotating frame attached to the pri-
maries. Then, using the inertial angular momentum of the comet’s trajectory,
show that the following criterion is satisﬁed by the comet’s orbital elements:
1
a + 2
(
a(1 −e2)
r3
12
cos i = constant.
7.8. A comet is observed passing through the sun–Jupiter line at x = −1
with a relative velocity of 2 units. If the semi-major axis of the comet’s sub-
sequent orbit is 20 units, estimate its eccentricity. (Assume the comet’s orbit
is coplanar with that of Jupiter.)

8
Rocket Propulsion
8.1 Aims and Objectives
•
To introduce the elements of rocket propulsion useful in ﬂight dynamic
modeling.
•
To model the velocity impulse of single- and multi-stage rockets.
•
To discuss the optimal selection of stage payload ratios of multi-stage
rockets with examples.
8.2 The Rocket Engine
Rocket engines are indispensible for providing thrust to spacecraft. They are
also essential for launch vehicles and missiles, due to their superior perfor-
mance (thrust magnitude) as well as their relative simplicity of operation. Al-
though eﬀorts have been ongoing for quite sometime to replace rockets with
air-breathing engines in the atmospheric phase of ﬂight—due to the latter’s
higher eﬃciency—this alternative does not yet possess adequate reliability and
cost-eﬀectiveness for operation in long-range missiles and launch vehicles.
Rocket propulsion is based upon ejection of a propellant mass at a high
speed, thereby achieving thrust generation by Newton’s third law of motion
(Chapter 4). The high exhaust speed of the propellant is obtained by ﬁrst
producing a gaseous (or plasma) mixture with a high internal energy, and then
accelerating it in a nozzle. Theoretically, two categories of technologies are
possible for generating the high internal energy required by the particles of the
propellant: (a) thermal, which includes chemical, nuclear, and thermonuclear
reactions, and (b) electromagnetic, including magnetohydrodynamic (MHD)
devices for creating a hot plasma, and ionic for producing cold, ionized gas.
Of these, the most common and practical method (albeit with the lowest
eﬃciency) is that of a chemical rocket, wherein the propellants undergo a
chemical reaction in order to liberate the stored chemical energy as the internal
energy. Although ionic thrusters using cold, inert gas such as Argon have been

194
8 Rocket Propulsion
built, their thrust is very low, and their application is limited to low-thrust,
orbital transfers (e.g., the Deep-Space probes of NASA), which we will discuss
in a later section. An MHD, nuclear, or thermo-nuclear rocket is far from being
deployed (although some laboratory experiments have been carried out) due
to technical and environmental reasons.
A nozzle is the primary component of any rocket and is responsible for
converting the released internal energy into kinetic energy of the propellant
mass. In a thermal rocket, the nozzle is a ﬂow expansion device for expanding
the propellant gas to a lower pressure. When the propellant is a charged gas,
the nozzle consists of an electromagnetic or electrostatic ﬁeld for accelerating
the charged particles.
Nozzle
Thermal
Energy
Generator
Cold Propellants 
Exhaust Gases 
Fig. 8.1. Schematic diagram of a thermal rocket engine.
In this book, our discussion will be conﬁned to thermal, chemical rock-
ets. As depicted in Fig. 8.1, a thermal rocket has three primary components:
the propellants, which can be in solid, liquid, or gaseous form; a thermal
energy generator (combustion chamber); and a nozzle. The propellants of a
chemical rocket consist of a fuel and an oxidizer. Since they must carry an
oxidizer, the rockets are inherently less eﬃcient than air-breathing engines,
which derive the oxidizer required for combustion in the form of oxygen from
the atmosphere. One can choose between solid and liquid propellants. While
the solid propellants are easier to store, their chemical reaction cannot be
throttled, or even shut-oﬀ, like the liquid propellants. Once ignited, solid pro-
pellants continue to burn until they are exhausted. The combustion chamber
provides a mechanism for eﬃciently mixing and chemically combining the
propellants. The chemical reaction carried out in the combustion chamber is
called combustion, or burning.

8.2 The Rocket Engine
195
A simple expression relating the internal energy per unit mass, ei, to the
maximum possible exhaust speed, ve, of a propellant particle of mass, m,
obtained in the nozzle of a thermal rocket, can be derived by assuming a
perfect energy conversion
ei = 1
2mve2 .
(8.1)
From the kinetic theory1 of a perfect diatomic gas, we can write
ei = 5
2kT ,
(8.2)
where k = 1.38×10−23 J/K is Boltzmann’s constant, and T is the combustion
temperature in Kelvin (K). From Eq. (8.1), we have
ve =
'
2ei
m ,
(8.3)
which indicates that the largest possible exhaust velocity depends only upon
the propellants employed, with distinctive internal energy and particle mass.
A higher internal energy, and a lighter propellant, produce a larger exhaust
speed. For example, the largest exhaust velocity for a given chemical propel-
lant mass is that for the combination of liquid hydrogen (LH2) and liquid
ﬂuorine LF. However, as the combustion product, hydroﬂuoric acid, is highly
corrosive, the next best combination possible is that of liquid hydrogen and
liquid oxygen (LO2), whose ei is roughly the same as that of LH2/LF com-
bination, but with a slightly heavier combustion product (water vapour).
From Eqs. (8.1) and (8.2), we can derive the following expression for the
combustion temperature:
T = mve2
5k
,
(8.4)
which places a restriction on the maximum exhaust velocity due to material
considerations. For example, in the combustion chamber of a rocket employ-
ing LH2/LO2, the temperature is approximately 6000 K. Due to the fact that
the temperature increases with the square of the exhaust velocity, a signiﬁ-
cantly larger exhaust velocity with nonchemical, thermal technology (nuclear,
or thermo-nuclear) is materially impossible, even though the lightest possible
propellant (hydrogen gas) may be employed.
Being a variable mass vehicle, the reactive thrust, fT, of a rocket was
derived in Chapter 4. Generally, the exhaust gas of a thermal rocket is not
expanded to the ambient static pressure, pa, causing an additional term in the
thrust expression due to the aerostatic pressure of exhaust gas. The complete
expression for a rocket’s thrust is thus
1 Kinetic theory of a perfect gas is a branch of statistical thermodynamics, which
employs quantum mechanics for the microscopic description of gas particles. See,
for instance, Hill [16].

196
8 Rocket Propulsion
fT = −Δmd(v + ve)
dt
−ve
dΔm
dt
−A(pe −pa)ve
ve
,
(8.5)
where v is the velocity of the vehicle’s center of mass, ve is the velocity of
the exhaust gas relative to the vehicle’s center of mass, m and Δm are the
instantaneous masses of the vehicle and the exhaust gas, respectively, A is
the nozzle’s exit area (normal to ve), and pe is the static pressure of the
exhaust gas. The direction of ve is, by and large, opposite to that of v in
normal operation, or along v for reverse thrust (retro-rocket). For controlling
the trajectory and the attitude, all rockets employ swivelling of the nozzle to
produce thrust deﬂection from the nominal direction. Since the exit velocity
is generally constant in both magnitude and direction, we have
fT = −Δmdv
dt −ve
dΔm
dt
−A(pe −pa)ve
ve
.
(8.6)
The nozzle design of a thermal rocket is crucial to its performance and
eﬃciency. The magnitude of the thrust delivered in the rocket is directly pro-
portional to the mass ﬂow rate provided by a nozzle, which, in turn, is directly
proportional to the nozzle’s exit area. Thus, a larger nozzle delivers a higher
thrust, for the same exhaust speed. The static pressure of the exhaust gas is
rarely equal to the ambient static pressure at the nozzle exit. The thrust due
to aerostatic pressure at nozzle exit is positive in magnitude whenever pe > pa
(an underexpanded nozzle). This is the situation at very high altitudes, where
the ambient conditions are close to a vacuum (pa ≈0). However, in order
to utilize this additional thrust, the ﬂow expansion must occur inside rather
than outside the nozzle. There is a loss of propulsive eﬃciency due to under-
expansion of the ﬂow inside the nozzle, as the ﬂow kinetic energy is not fully
converted to thrust at the nozzle wall. On the other hand, there could be a
signiﬁcant loss of thrust caused by an overexpanded nozzle at low altitudes,
when pe < pa. This thrust loss is alleviated by a nozzle design that achieves
complete expansion (pe = pa) at a suitably moderate altitude. Unlike air-
breathing engines, the rocket nozzle is ﬁxed in geometry; thus, a complete ex-
pansion is possible only at a speciﬁc altitude. A design for complete expansion
at very high altitudes is infeasible due to weight and size considerations, while
choosing a low altitude for complete expansion increases the range of altitudes
where propulsive eﬃciency is lost by underexpansion. The novel concept of
an Aerospike nozzle, which has exposed sides, was evolved by Rocketdyne in
the 1970s and tested for the X-33 Single-stage to orbit (SSTO) program of
NASA in the 1990s (now cancelled). This nozzle design has an inherent alti-
tude compensation capability, not unlike a variable geometry nozzle, which,
combined with a signiﬁcant weight reduction, allows eﬃcient operation in a
large altitude range.

8.3 The Rocket Equation and Staging
197
8.3 The Rocket Equation and Staging
The net equation of motion of a rocket-powered vehicle due to Newton’s sec-
ond law (Chapter 4) is rewritten as
f + fT = (m −Δm)dv
dt ,
(8.7)
where f denotes the net external force acting on the vehicle’s center of mass,
arising due to gravity and aerodynamics. Upon substituting Eq. (8.6) into
Eq. (8.7), and noting that dΔm
dt
= −dm
dt , we can write
f = mdv
dt −ve
dm
dt + A(pe −pa)ve
ve
.
(8.8)
In order to obtain an insight into rocket propulsion, it is usual to take the
case of space ﬂight (zero aerodynamic force) and a negligible acceleration due
to gravity. These are valid assumptions for spacecraft maneuvers with small
ﬂight-path angles, for which the component of gravity along thrust direction
is negligible. Furthermore, we assume that the exhaust gas is ejected in a
direction opposite to the velocity vector (ve = −ve v
v ), and a complete ex-
pansion of the exhaust gas to zero static pressure takes place. Therefore, the
net external force, f, vanishes, and the resultant motion of the vehicle is di-
rectly opposite to the direction of the ejected gas. Under these assumptions,
Eq. (8.8) becomes the following scalar equation of motion:
−ve
dm
dt = mdv
dt .
(8.9)
We can integrate Eq. (8.9) between the limits of the initial and current values
of the mass and vehicle speed, m0, v0, and m, v, respectively, to obtain
v −v0 = ve ln m0
m .
(8.10)
When the exhaust gas is ejected in the same direction as the velocity vector
(a retro-rocket), ve = ve v
v , and Eq. (8.10) becomes v −v0 = −ve ln m0
m . Equa-
tion (8.10) is a simple, analytical expression relating the mass and change in
the speed of a rocket and is called the rocket equation. The most important
observation from Eq. (8.10) is the fact that the change in the rocket’s speed
is directly proportional to the relative exhaust speed, ve, for a given decrease
in the vehicle’s mass. Since the rocket operation in space is conﬁned to short
bursts compared to the total ﬂight time of the spacecraft (Chapter 5), it is of-
ten a good approximation to assume that the speed changes instantaneously.
Thus, the rocket provides a a velocity impulse of magnitude Δv = v −v0,
which is given by the rocket equation. It is easy to see from Eq. (8.9) that
since ve is constant, mΔv = −veΔm; thus, the exhaust velocity is equal to
the change in linear momentum per unit mass of the propellant consumed.

198
8 Rocket Propulsion
However, rather than using the exhaust speed, it is customary to deﬁne a
speciﬁc impulse, Isp, as the change in linear momentum per unit weight of the
propellant consumed, leading to
Isp = ve
g ,
(8.11)
where g is the acceleration due to gravity at standard sea level of the earth
(g = 9.81 m/s2). The various thermal rocket propellants are classiﬁed ac-
cording to the maximum speciﬁc impulse they can produce in an ideal rocket
engine [Eq. (8.3)]. Some practical values of Isp are 180–270s for solid pro-
pellants, 260–310s for nitrogen tetra-oxide (NO4)/mono-methyl hydrazine
(MMH), or NO4/unsymmetrical di-methyl hydrazine (UDMH) liquid, hyper-
golic2 propellants, 300–350s for kerosene/LO2, 455 s for LH2/LO2, and 475 s
for LH2/LF . For exotic technologies, theoretical Isp values using hydrogen
gas as propellant range from about 5000 s with nuclear ﬁssion to 10,000 s with
thermo-nuclear (fusion). However, the temperatures required in such high val-
ues of Isp dictated by Eq. (8.4) cannot be withstood by present materials. If a
cooling of the nuclear reactor by the propellant is employed in order to bring
the temperatures to tolerable levels, the resulting speciﬁc impulse would be
no larger than that of a chemical rocket. Similar considerations prohibit the
current use of cold ion, or plasma thrusters in launch vehicles and impulsive
maneuvers. Although the Isp of an ion rocket can be as high as 50,000 s, its
mass ﬂow rate cannot be substantial due to temperature restrictions, and,
consequently, the thrust is very small.
Example 8.1. Estimate the propellant mass and thrust required by an LH2/LO2
rocket of mass 2000 kg in a circular, earth orbit, in order to produce a velocity
impulse of magnitude 700 m/s in 5 s in the direction of the velocity vector.
In a circular orbit, the gravity is normal to the velocity direction (zero
ﬂight-path angle). Assuming complete expansion, we can, therefore, apply the
rocket equation. The exhaust speed is calculated from the speciﬁc impulse as
ve = gIsp = (9.81)(455) = 4463.55 m/s, and the ﬁnal mass is obtained from
the rocket equation,
m = m0.e−Δv
ve = 1709.706 kg ,
which implies a propellant consumption of Δm = 290.294 kg. The mass ﬂow
rate is obtained as
dm
dt = −Δm
Δt = −58.0588 kg/s .
Finally, the thrust is calculated by using Eq. (8.6) as follows:
2 Hypergolic propellants are chemicals that do not require an ignition source for
combustion, and react spontaneously with each other. Since it is easy to start
and stop combustion using hypergolic propellants, they are often used in reaction
control systems of spacecraft.

8.3 The Rocket Equation and Staging
199
fT = −ve
dm
dt = 259, 148.495 N .
The average acceleration due to thrust is Δv
Δt = 140 m/s2, which is greater
than 14 times the acceleration due to gravity at standard sea level.
Since the rocket equation does not consider either gravity, or the at-
mospheric forces, one must add a margin to the total velocity impulse obtained
from Eq. (8.10) in order to address the losses due to gravity and atmospheric
drag, and propulsive losses due to the maneuvering and static pressure dif-
ference at the nozzle exit. For example, a launch to the low earth orbit must
add about 1.5 km/s to the approximately 8 km/s of required orbital velocity
change, leading to a total required impulse of about 9.5 km/s from the rocket
equation. The necessary margin increases to about 2.0 km/s for a launch to
the geosynchronous orbit. Since rockets are launched almost vertically, the
initial thrust of a rocket must be greater than its weight and drag combined.
However, as the rocket ascends to orbital ﬂight, this requirement of a large
thrust is removed, and the assumptions of the rocket equation are nearly valid.
The total mass of a rocket consists of the propellant mass, the structural
mass, and the payload mass. Since the propellant mass can be very large in
a rocket, we must examine its eﬃciency in terms of the maximum payload
delivered for a given velocity impulse. On an intuitive basis, we can see that
a rocket’s eﬃciency can improve if it can shed some of its structural mass (re-
garded as dead weight) during its operation. The rocket equation, Eq. (8.10),
is valid only when all the propellant is consumed without a change in the
structural mass. This is referred to as a single-stage rocket. An alternative
approach is to build a rocket in several modules, called stages, each complete
with its own propellant tanks, combustion chamber, and nozzles. Such a ve-
hicle can discard a stage as soon as it has exhausted its propellants, thereby
reducing the structural mass. This process of shedding burn-out modules is
called staging. We shall ﬁrst examine the limitations of a single-stage rocket,
and then study the advantages oﬀered by staging.
8.3.1 The Single-Stage Rocket
Consider a single-stage rocket of payload mass, mL, structural mass, ms, and
propellant mass, mp. Thus, the initial mass is m0 = mL + ms + mp, and the
ﬁnal mass after all the propellant has been consumed is mf = mL + ms. The
ﬁnal to initial mass ratio is written as
mf
m0
=
ms
ms + mp
+
mpmL
m0(ms + mp
= σ + (1 −σ)λ ,
(8.12)
where
σ .=
ms
ms + mp
(8.13)
is called the structural ratio, and

200
8 Rocket Propulsion
λ .= mL
m0
(8.14)
is denoted the payload ratio. Note that the payload mass is not included in
the deﬁnition of the structural ratio, because a rocket is generally capable of
carrying diﬀerent payloads with the same structure. From the rocket equation,
Eq. (8.10), the total velocity impulse, using a single-stage rocket in space, and
for a negligible gravity along the velocity direction, is given by
Δv .= vf −v0 = −ve ln[σ + (1 −σ)λ] .
(8.15)
The higher the payload ratio, λ, for a given velocity impulse, the better is the
rocket’s eﬃciency (and utility). For a given set of propellants, a higher pay-
load ratio is possible only by reducing the structural ratio, σ. Since a rocket
must have a strong structure for storing the propellants and the payload, and
for withstanding external loads, σ cannot be reduced below a certain limit.
Usually, the net weight of the nozzles, guidance, control system, and other ac-
cessories is also included in the structural weight, which restricts the practical
value of σ to be no smaller than about 0.05. The performance of a rocket is
usually measured in terms of the fraction Δv
ve . Of course, the highest perfor-
mance is possible with a zero payload ratio. As the payload ratio is increased,
the performance diminishes, and becomes zero for λ = 1. Hence, performance
and eﬃciency are conﬂicting requirements for a single-stage rocket (as in any
vehicle). Usually, the performance is speciﬁed in terms of the orbital radius
for a given launch site. In order to meet such a requirement in the most ef-
ﬁcient manner, the payload ratio should be maximized. The variation of the
payload ratio of a single-stage rocket with the performance parameter, Δv
ve ,
for speciﬁc structural ratios is shown in Fig. 8.2. It is evident from this ﬁgure
that the maximum possible performance from a single-stage rocket occurs for
the minimum possible structural ratio, σ = 0.05, and is limited to Δv
ve < 3.0.
With a payload ratio λ = 0.01 (the lowest practical eﬃciency), the perfor-
mance drops down to Δv
ve = 2.82, which is insuﬃcient to launch a payload to
a low earth orbit, unless cryogenic (very low temperature) propellants (such
as LH2/LO2) are employed. Since cryogenic propellants are diﬃcult to man-
ufacture and store, their use in a single-stage rocket with a low payload ratio
is very expensive. It is also currently infeasible to build large enough tanks to
safely store a suﬃcient cryogenic propellant mass required for the single-stage
operation, as demonstrated by the cancelled X-33 project of NASA.3
3 The X-33 was an experimental scaled prototype of a larger re-usable, single-stage
launch vehicle, called VentureStar, that was to be built under NASA contract
by Lockheed Corporation. The wings and aerodynamic controls required for an
airplane-like horizontal landing led to the X-33’s structural ratio to be moderate
at σ = 0.108, leading to a total LH2/LO2 propellant mass of about 95,000 kg. In
order to keep the structural ratio low, the propellant tanks were to be constructed
out of composite materials, which proved technologically challenging, leading to
the project’s cancellation in 2001.

8.3 The Rocket Equation and Staging
201
0
0.5
1
1.5
2
2.5
3
10
−3
10
−2
10
−1
10
0
Δv/ve
λ = mL/m0
σ = 0.05
0.10
0.15
0.20
Fig. 8.2. Variation of payload ratio of a single-stage rocket with performance pa-
rameter Δv
ve .
8.3.2 The Multi-Stage Rocket
Staging is necessary in order to overcome the performance drawback of a
single-stage rocket. The rocket equation for a multi-stage rocket with a total
of N stages can be written as follows:
Δv = −
N

k=1
vek ln[σk + (1 −σk)λk] ,
(8.16)
where the subscript k denotes quantities pertianing to the kth stage of the
vehicle. It is assumed here that only one stage is burning at a given time, and
each stage is discarded immediately after its propellant is consumed. Such a
process is called serial staging. The initial mass of a given stage is the payload
mass for the previous stage, i.e., the payload ratio of the kth stage is
λk = m0(k+1)
m0k
,
(8.17)
resulting in the a rocket’s payload ratio of
λT .= mL
m01
=
N
-
k=1
λk .
(8.18)

202
8 Rocket Propulsion
0
1
2
3
4
5
6
7
10
−3
10
−2
10
−1
10
0
Δv/ve
λT
N = 1
2
3
4
10
Fig. 8.3. Variation of total payload ratio of a multi-stage rocket with performance
parameter Δv
ve .
In order to see the performance beneﬁts oﬀered by staging, consider the
simple case of N stages with the same exhaust velocity, structural ratio, and
payload ratio, i.e., ve1 = ve2 = · · · = veN = ve, σ1 = σ2 = · · · = σN = σ,
and λ1 = λ2 = . . . = λN = λ. The variation of the total payload ratio of
such a rocket with the performance parameter, Δv
ve , for a various number of
stages, obtained using σ = 0.05, is shown in Fig. 8.3. It is clear that the total
payload ratio, λT , increases with an increasing number of stages for a given
performance. Conversely, with the same total payload ratio, it is possible to
obtain a higher performance by increasing the number of stages. With N = 2
and λT = 0.01, a performance of Δv
ve = 3.86 is possible. A two-stage rocket
is capable of launching a payload to a low-earth orbit with λT = 0.033 using
hydrocarbon liquid propellants. With N = 3 and λT = 0.01, a performance
of Δv
ve = 4.1 can be attained. Hence, staging oﬀers a remarkable increase in
performance over the single-stage rocket, for the same total payload ratio.
However, the increase in performance is small with N > 3. Thus, even large
rockets (such as the Saturn-V booster used in the Apollo manned, lunar
missions during 1968–72) are limited to three stages, given the complexity
involved in a large number of stages.
In a practical design, each stage employs a diﬀerent propellant. The lower
stages often use solid or liquid hydrocarbon propellants with a smaller spe-

8.3 The Rocket Equation and Staging
203
ciﬁc impulse compared to the upper stages. This results in a large propellant
mass for the initial stage, which requires a large thrust to overcome gravity
at launch, and, in turn, large nozzles are required to produce the necessary
thrust with an adequate mass ﬂow rate. The mass ﬂow required by the upper
stages is much smaller (due to a reduced thrust requirement at near-orbital
speeds), which enables the use of (expensive) high speciﬁc impulse propellants
in smaller volumes for the upper-stage propulsion. The employment of cryo-
genic propellants in the smaller, upper stages improves the eﬃciency without
an enormous cost, and thus most launch vehicles (especially for medium to
high orbits) employ cryogenic upper stages. When the stages have diﬀerent
speciﬁc impulses, it is more eﬃcient to employ a diﬀerent payload ratio for
each stage, as seen in the next section.
Example 8.2. A three-stage launch vehicle employs a liquid, hydrocarbon pro-
pellant in the ﬁrst two stages with a speciﬁc impulse of 290 s, while the third
stage uses a cryogenic LH2/LO2 propellant of speciﬁc impulse 455 s. All stages
have the same structural ratio of σ = 0.07. The second and third stages’ pay-
load ratios are 1.2 and 0.65 times, respectively, that of the ﬁrst stage. Calculate
the propellant mass required to launch a payload of 1000 kg to the geosyn-
chronous orbit, for which a total velocity increase of 13 km/s is required,
considering gravity, drag, and thrust losses.
Since the payload ratios λ2, λ3 are referred to the unknown ﬁrst-stage
payload ratio, λ1, we must express the rocket equation, Eq. (8.16), in terms
of the nondimensional stage ratios βk .= vek
ve1 , αk .= λk
λ1 as follows:
Δv
ve1
= −
N

k=1
βk ln[σk + (1 −σk)αk].
(8.19)
We begin by solving Eq. (8.19) with N = 3, for λ1. Being a transcendental
equation, Eq. (8.19) has to be solved by an iterative technique. As in the case
of Kepler’s equation (Chapter 4), we employ Newton’s technique, which is
incorporated in the MATLAB program Nstage.m (Table 8.1). Note that the
initial guess for the ﬁrst-stage payload ratio is λ1 = 0.1, and a tolerance of
10−9 has been speciﬁed in the program for satisfying the rocket equation.
>> beta=[1;1;455/290]; sigma=0.07*[1;1;1]; alpha=[1;1.2;0.65]; %stage ratios
>> vf=13000/(9.81*290) %nondimensional speed change
vf = 4.5696
>> p=Nstage(vf,beta,sigma,alpha);%Newton’s iteration for first-stage payload ratio,p
p =
0.204373458571974
p =
0.247315220681014
p =
0.25385430821876
p =
0.254380998378698
p =
0.254418303118114
p =
0.254420916634985
p =
0.254421099591889
p =
0.254421112398925
p =
0.254421113295418
p =
0.254421113358172

204
8 Rocket Propulsion
Thus, a ﬁrst-stage payload ratio of λ1 = 0.254421113 satisﬁes the rocket
equation up to the ninth decimal place. Therefore, the total payload ratio of
the rocket is
λT = λN
1
N
-
k=1
αk = (0.254421113)3(1.2)(0.65) = 0.01284559 ,
from which the initial rocket mass follows as m01 = mL
λo = 77, 847.7296 kg,
with the second and third stage initial masses, m02 = λ1m01 = 19, 806.1060 kg
and m03 = λ2m02 = 6046.9099 kg, respectively. Since the structural ratio of
each stage is identical, we have the same ratio of a stage’s propellant mass to
its structural mass of mpk
msk = 1−0.07
0.07
= 13.285714286. The propellant masses
of the stages are thus mp3 = (m03 −mL) ∗(1 −0.07) = 4693.62617 kg,
mp2 = (m02 −m03) ∗(1 −0.07) = 12, 796.05244 kg, and mp1 = (m01 −m02) ∗
(1 −0.07) = 53, 978.7099 kg, which add up to a total propellant mass of
mp1 + mp2 + mp3 = 71, 468.3885 kg. Hence, 91.8% of the initial mass of this
rocket is the propellant mass.
Table 8.1. M-ﬁle Nstage.m for Calculating the Payload Ratio of a Multi-Stage
Rocket
function p=Nstage(vf,beta,epsilon,alpha);
%Program for solving the multi-stage (N) rocket equation for the first-stage
%payload ratio, p. (Copyright @2006 by Ashish Tewari)
%beta=(Nx1) vector of ratios of specific impulses to that of the first stage
%(beta(k)=Isp_k/Isp_1); first element of beta should be 1.0
%alpha= (Nx1) vector of ratios of payload ratios to that of the first stage
%(alpha(k)=lambda_k/lambda_1); first element of alpha should be 1.0
%epsilon= (Nx1) vector of structural ratios of the stages
%vf=ratio of total velocity impulse to exhaust speed of first stage
%(vf=Delta_v/v_e1)
%(c) 2006 Ashish Tewari
N=size(beta,1);
p=0.1;
f=vf;
tol=1e-9;
for k=1:N
f=f+beta(k)*log(epsilon(k)+alpha(k)*(1-epsilon(k))*p);
end
while abs(f)>tol
f=vf;
fp=0;
for k=1:N
f=f+beta(k)*log(epsilon(k)+alpha(k)*(1-epsilon(k))*p);
fp=fp+alpha(k)*beta(k)/(epsilon(k)+alpha(k)*(1-epsilon(k))*p);
end
d=-f/fp;
p=p+d
end

8.3 The Rocket Equation and Staging
205
8.3.3 Parallel Staging
A variation of the serial staging discussed above is parallel staging, where
some stages are burned simultaneously. Parallel staging oﬀers the advantage
of getting rid of the propellant mass more quickly, thereby increasing the
total eﬃciency when compared to serial staging. Therefore, all modern launch
vehicles employ parallel staging of some kind, usually at the beginning of
the launch phase when the propellant mass is the largest. A prime example of
parallel staged vehicles is the space shuttle, which has two solid rocket boosters
burning simultaneously with the main cryogenic engine as a combined stage.
Parallel staging also oﬀers the capability of modifying a rocket’s performance
by simply adding/removing a number of strap-on boosters outside the primary
vehicle (called the core vehicle). The strap-on stages burn simultaneously with
the ﬁrst stage of the core vehicle. The structural simplicity and ﬂexibility of
strap-on parallel stages is a common design feature in launch vehicles and
can be seen, for example, in the Delta, Atlas, and Titan rockets of the USA,
the Ariane of Europe, the Soyuz, Zenit, and Proton of Russia, the H-2 of
Japan, and the PSLV and GSLV of India. The analysis of a parallel staged
rocket is quite similar to the one presented above for a serial staged vehicle,
the main diﬀerence being in the nomenclature of the stages and deﬁnitions
of their structural and payload ratios. When the parallel boosters and the
core ﬁrst stage are burning simultaneously, they are taken together and called
the zeroth stage, while the propellant remaining in the core’s ﬁrst stage after
discarding the parallel boosters is called the ﬁrst stage of the rocket. The
thrust of the zeroth stage is written as follows:
fT = −veb
dmb
dt −ve1
dm1
dt
= −ve0
dm0
dt
,
(8.20)
where the subscripts p and 1 refer to the quantities pertaining to the parallel
boosters and the core ﬁrst stage, respectively, and ve0 and m0 are the average
exhaust speed and total mass, respectively, of the rocket’s zeroth stage. In
order to continue the analogy with a serial staged rocket, it remains to deﬁne
the equivalent structural and payload ratios. Let us assume that the core
vehicle’s ﬁrst stage has a total initial mass, m01, and a structural mass, ms1.
Of the total propellant mass, mp1, of the ﬁrst core stage, only mp10 is burned
in parallel with the boosters in the zeroth-stage operation. The boosters burn
a total propellant mass, mpb, and have a total structural mass, msb. Thus, the
structural and payload ratios of the zeroth-stage equivalent to a serial rocket
are given by
σ0 =
msb + ms1
msb + ms1 + mpb + mp10
,
(8.21)
and
λ0 = m01 −mp10
m00
,
(8.22)

206
8 Rocket Propulsion
respectively, where m00 = m01 + msb + mpb is the initial mass of the zeroth
stage (same as the initial mass of the entire rocket). Similarly, the equivalent
ratios for the rocket’s ﬁrst stage are
σ1 =
ms1
ms1 + mp1 −mp10
,
(8.23)
λ1 =
m02
m01 −mp10
.
(8.24)
Of course, the initial mass of the ﬁrst stage, m01 −mp10, is related to the
second stage’s initial mass, m02, by m01 −mp10 = m02 + ms1 + mp1 −mp10,
or m01 = m02 + ms1 + mp1, which is the familiar relationship between the
serial ﬁrst and second stages of the core vehicle. We are now ready to write
the rocket equation for the parallel staged vehicle as follows:
Δv = −
N

k=0
vek ln[σk + (1 −σk)λk] ,
(8.25)
where the average exhaust velocity of the zeroth stage is given from Eq. (8.20)
by
ve0 = veb
dmb
dt + ve1 dm1
dt
dm0
dt + dm1
dt
.
(8.26)
Upon comparing Eqs. (8.25) and Eq. (8.16), we ﬁnd no diﬀerence other than
the inclusion of the zeroth stage, with its average exhaust speed and equivalent
ratios, and the modiﬁed ﬁrst stage for the parallel staged vehicle.
Example 8.3. The three-stage rocket of Example 8.2 is modiﬁed by adding
four solid rocket, strap-on boosters of speciﬁc impulse 200 s, total propellant
mass 30,000kg, and structural ratio 0.05. If 25,000 kg of the core vehicle’s
ﬁrst stage is burned in parallel with the booster rockets, calculate the total
velocity impulse possible from the modiﬁed vehicle.
In Example 8.2, we derived the core vehicle’s stage masses as m01 =
77, 847.7296 kg, m02 = 19, 806.1060 kg, and m03 = 6046.9099 kg. The
core stages have a common structural ratio of σk = 0.07, which yields
ms1 = 4062.9137 kg. The total structural mass of the strap-on boost-
ers is msb =
(30000)(0.05)
1−0.05
= 1578.9474 kg. With mp10 = 25, 000 kg, and
m00 = 109, 426.677 kg, the equivalent ratios for the zeroth stage and the ﬁrst
stage are obtained as
σ0 =
msb + ms1
msb + ms1 + mpb + mp10
= 0.09303575,
λ0 = m01 −mp10
m00
= 0.48295106,
σ1 =
ms1
ms1 + mp1 −mp10
= 0.1229635,
λ1 =
m02
m01 −mp10
= 0.374776857.

8.3 The Rocket Equation and Staging
207
The second and third stage payload ratios remain unchanged from their core
values at λ2 = 0.305305336 and λ3 = 0.165373724, respectively, and their
structural ratios are also unmodiﬁed. It remains to calculate the average ex-
haust velocity of the zeroth stage by Eq. (8.26). In order to do so, we assume
that the parallel stages burn at constant mass ﬂow rates, dmb
dt
= 30000
t0
and
dm1
dt
= 25000
t0
, where t0 is the duration that the parallel stages are burning.
These, when substituted into Eq. (8.26) along with the speciﬁc impulses of
the parallel stages, yield
ve0 = (9.81)(25000)(290) + (30000)(200)
25000 + 30000
= 2363.31818 m/s ,
thereby leading to the following total speed change:
Δv = −
N

k=0
vek ln[σk + (1 −σk)λk] = 13, 393.7758 m/s .
Thus, the additional booster rockets in parallel with the ﬁrst stage increase
the total velocity impulse by 393.7758 m/s. However, there is a decline in
the eﬃciency measured by the total payload ratio, λT = mL
m00 = 0.0091, when
compared to λT = 0.0128 of the core rocket. An eﬃcient harnessing of the
performance increase can be achieved by sending a larger payload into the
geosynchronous orbit (Δv = 13 km/s). We can calculate the largest payload
the parallel-staged rocket can launch to a geosynchronous orbit by ﬁnding the
new third-stage ratios, with unchanged structural and propellant masses of
the lower stages, as follows:
ln[σ3 + (1 −σ3)λ3] = −
 2
k=0 vek ln[σk + (1 −σk)λk] −13000
(9.81)(455)
= −1.4087930669 ,
which implies σ3+(1−σ3)λ3 = 0.2444381. Now, since the structural and total
masses of the third stage are unchanged, we have
(1 −λ3)σ3 = ms3
m03
= 0.05842383896 .
Thus, we have two equations for the two unknowns, σ3, λ3, which are easily
solved to yield λ3 = 0.1860142867 and σ3 = 0.07177502. Finally, we obtained
the new payload mass to be
mL = m03λ3 = 1124.8116 kg .
Hence, there is an increase of 124.8116 kg, or 12.48%, in the payload to be
launched to the geosynchronous orbit. The propellant mass of the third stage
has to be decreased by 124.8116kg to obtain this beneﬁt, which increases the
third stage’s structural ratio slightly. The new launch eﬃciency given by λT =
.3
k=0 λk = 0.01028 is better than that of the original mission (λT = 0.0091)
with a payload of 1000 kg.

208
8 Rocket Propulsion
8.3.4 Mission Trade-Oﬀ
Modiﬁcations in the design of a rocket can signiﬁcantly change its performance
and eﬃciency. Such changes can occur naturally in the design process, where
the payload tends to grow both in mass and in volume due to an updated
mission. Also, there can be signiﬁcant changes in the design of the stages over
the lifetime of a rocket, due to improvements in the technology (generally,
lower structural ratios and higher speciﬁc impulses). As seen in Example 8.3,
an addition of strap-on booster stages is a practical way to address an increase
in the payload, with an attendant loss of eﬃciency. If the eﬃciency loss is to
be minimized, only small changes must be carried out in this manner. Thus, it
becomes necessary to study the changes in the payload, or stage ratios, that
can be tolerated within the opposing limits of eﬃciency and performance,
without completely redesigning a vehicle. The process of absorbing small de-
sign changes by trading performance with eﬃciency, or vice versa, is called
mission trade-oﬀ.
The most important parameters used in studying mission trade-oﬀare the
changes in the payload caused by modiﬁcations in the structural and payload
masses of the stages, without any change in the total velocity impulse. This
is reasonable, because (as seen in Examples 8.2 and 8.3) the total velocity
impulse is the primary mision objective, deﬁned by the ﬁnal orbit; hence, no
changes in it can be tolerated. The total velocity impulse can be expressed in
terms of the initial and ﬁnal masses of the stages as follows:
Δv = −
N

k=0
vek ln m0k
mfk
,
(8.27)
where
m0k = mL + mpk + msk +
N

n=k+1
(msn + mpn) ,
(8.28)
and
mfk = m0k −mpk = mL + msk +
N

n=k+1
(msn + mpn) .
(8.29)
The ﬁrst trade-oﬀparameter deﬁning the change of payload due to a
change in the structural mass of the kth stage is the partial derivative, ∂mL
∂msk .
It is obtained by diﬀerentiating Eq. (8.27) with respect to msk and setting
∂Δv
∂msk = 0:
∂mL
∂msk
= −
 k
n=0 ven(
1
m0n −
1
mfn )
 N
j=0 vej(
1
m0j −
1
mfj )
.
(8.30)
For the ﬁnal stage, k = N, we have
∂mL
∂msN = −1, which implies that an increase
in the structural mass of the ﬁnal stage is equal to the decrease in the payload

8.3 The Rocket Equation and Staging
209
mass, which is quite obvious. The decrease in the payload mass is less than
the increase in the structural mass of a lower stage.
The second trade-oﬀparameter is the partial derivative,
∂mL
∂mpk , obtained
by diﬀerentiating Eq. (8.27) with respect to mpk and setting
∂Δv
∂mpk = 0 as
follows:
∂mL
∂mpk
= −
 k
n=0
ven
m0n
 N
j=0 vej(
1
m0j −
1
mfj )
.
(8.31)
Clearly, the parameter
∂mL
∂mpk is always positive, because an addition in the
propellant mass of any stage leads to an increase in the payload. In Exam-
ple 8.3 we saw that the addition of parallel boosters to the core rocket caused
the mass of the zeroth stage to become nonzero, leading to an increase in the
payload mass for the same total velocity change.
Example 8.4. Let us calculate the trade-oﬀparameters for the three-stage core
vehicle with strap-on boosters of Example 8.3, designed for the baseline mis-
sion of launching an 1134.2061kg payload to the geosynchronous orbit, with a
total velocity impulse of 13 km/s. Using the data provided in the previous two
examples, we tabulate the two trade-oﬀparameters for each stage in Table 8.2.
Table 8.2. Mission Trade-oﬀParameters for a Geosynchronous Launch Vehicle
k vek
m0k
mfk
∂mL
∂msk
∂mL
∂mpk
(km/s) (kg)
0 2.3633
109426.677 54426.677 −0.008295 0.008209
1 2.8449
52847.730
23869.020 −0.033136 0.028669
2 2.8449
19806.106
7010.054
−0.132791 0.083263
3 4.4636
6046.910
1478.095
−1.0
0.363821
From Table 8.2 it is evident that the structural mass of the zeroth stage, or
the ﬁrst stage, trades for a very small payload, compared to that of the third
stage. The negligible change in the payload caused by structural modiﬁcations
in the zeroth stage enables good mission ﬂexibility through the use of strap-on
boosters of diﬀerent designs. It is also apparent in Table 8.2 that the payload
increase due to an increase in the propellant mass of the third stage is the
largest, followed in descending order by that of the lower stages. For example,
a 100 kg increase in the propellant mass of the third stage causes a payload
increase of 36.38 kg. The same change in the zeroth stage would result in a
payload increase of only 0.8 kg.

210
8 Rocket Propulsion
8.4 Optimal Rockets
From the foregoing discussion, it must be clear that the relative sizes of the
stages have a profound impact on both performance and eﬃciency. For given
mission performance and propellant for each stage, one can arrive at the
arrangement of stages that provides the highest eﬃciency in terms of the
total payload ratio, λT . Such a rocket, in which the total payload ratio is
maximum, subject to a given total velocity impulse, is said to be optimal.
The problem posed by the optimal, multi-stage rocket can have a unique
solution, provided the structural ratio and speciﬁc impulse of each stage are
speciﬁed. This is generally the case, because the mission speciﬁcations include
the type of propellants as well as the structural strength and material require-
ments. Therefore, let us consider a rocket with a ﬁxed total velocity impulse,
for which the speciﬁc impulse and structural ratio of each stage are known,
but the relative masses of the stages are open to adjustment. Let the payload
ratios and exhaust velocities be nondimensionalized with respect to the initial
stage (either the zeroth or the ﬁrst), for which a subscript designation of 1
will be employed. The nondimensional rocket equation for an N -stage rocket
can thus be written as follows:
Δv
ve1
= −
N

k=1
βk ln[σk + (1 −σk)αk] ,
(8.32)
where βk .= vek
ve1 , αk .= λk
λ1 . The optimization problem is then posed as follows:
Determine the relative payload ratios, αk (k = 2 . . . N), such that the total
payload ratio, λT = λ1
.N
k=1 αk, is maximized, subject to the rocket equation,
Eq. (8.31).
Generally, the solution of the constrained optimization problem posed
above requires nonlinear programming methods that either compute the gra-
dients of an objective function with respect to the vector of unknown N −1
variables, αk (k = 2 . . . N), or perform a nongradient search for the maxima
in an N -dimensional space. Without resorting to such methods, let us see
whether we can determine the solution of the problem in a simpler manner.
Since most rockets have either three or four stages, we are usually looking for
only two or three optimization variables. For up to two variables, a graphi-
cal method can be employed to search for the maxima of the function, λT .
However, we must ensure that the required variables, αk (k = 2 . . . N), satisfy
the rocket equation. In Example 8.2, we presented a computer program for
iteratively solving the rocket equation for the ﬁrst-stage payload ratio, given
a set of αk. Hence, when only two or three stages are concerned, we can adopt
the following computational procedure for designing an optimal rocket:
1. Select a set of αk (k = 2 . . . N).
2. Using an iterative scheme, solve for λ1 that satisﬁes Eq. (8.31) with the
given parameters.
3. Compute the total payload ratio, λT = λ1
.N
k=1 αk, and plot it as a point

8.4 Optimal Rockets
211
in the (N −1) dimensional space deﬁned by αk (k = 2 . . . N) as Cartesian
axes.
4. Repeat steps 2 and 3 with diﬀerent sets of αk (k = 2 . . . N) until a signiﬁ-
cant region in the (N −1)-dimensional space is covered.
5. Search for the maxima of λT in its graphical plot or through a comparison
of its stored values at diﬀerent points.
6. The values of αk (k = 2 . . . N) corresponding to the maxima of λT are the
optimal payload ratios of the rocket.
The search outlined above is usually rewarded by getting the maxima in a
few iterations. The number of iterations required depend primarily upon the
initial choice of αk. With the use of a programming aid, such as MATLAB,
the above algorithm is easily implemented.
8.4.1 Optimal Two-Stage Rocket
We will carry out the optimization presented above for designing an optimal
two-stage rocket, with the use of MATLAB. The program, Nstage.m, given in
Table 8.1, forms the basis of the procedure, wherein the payload ratio, λ1, is
computed for a given α2, the only variable of optimization.
Example 8.5. Design an optimal two-stage rocket for launching a payload of
5000kg into a low earth orbit, requiring a total velocity impulse of 9.5 km/s.
The structural ratio of the ﬁrst stage is 0.07, while that of the second stage
is 0.05. The ﬁrst stage employs a solid propellant with speciﬁc impulse
200 s. Examine two propellants as candidates for the second stage, namely
UDMH/NO4 and kerosene/LO2, for which β2 = 1.5 and 1.75, respectively.
Let us specify an initial value of α2 = 0.05 and vary it in steps of 0.0005
1000 times, computing λ1 by solving the rocket equation for each value of α2.
This procedure is repeated for both values of β2. The total payload ratio λT
is plotted against α2 and its maximum value obtained, for each value of β2.
The following MATLAB statements are employed for this purpose:
>> Isp1=200; vf=9500/(9.81*Isp1);epsilon=[0.07;0.05];beta=1.5; %parameters
>> A=[];P=[];mp=[];aopt=[];popt=[]; %storage matrices initialization
>> for j=1:2;
%beta iteration
a=0.05;
%alpha initial value
for k=1:1000;
%alpha iteration
p=Nstage(vf,[1;beta],epsilon,[1;a]); %rocket equation iterative solution
P(j,k)=p;
A(j,k)=a;
a=a+0.0005;
end
plot(A(j,:),P(j,:).*P(j,:).*A(j,:)); hold on;
[mp(:,j),K]=max(P(j,:).*P(j,:).*A(j,:));
aopt(:,j)=A(j,K);
popt(:,j)=P(j,K);
beta=beta+0.25;
end
>> mp, aopt, popt
%optimal total payload, alpha, and first-stage payload ratios
mp =
0.0101722144142938
0.0211756475762429

212
8 Rocket Propulsion
aopt =
0.245
0.1165
popt =
0.203762711277902
0.426339319376855
0
0.1
0.2
0.3
0.4
0.5
0.006
0.008
0.01
0.012
0.014
0.016
0.018
0.02
0.022
α2 = λ2/λ1
λT
β2 = 1.75
β2 = 1.50
Fig. 8.4. Variation of total payload ratio of a two-stage rocket with α2 = λ2
λ1 .
The plot of λT against α2 is shown in Fig. 8.4 for the two given values of
β2. The kerosene/LO2 (β2 = 1.75) combination for the second stage results in
a total payload ratio, λT = 0.021176, implying a total initial mass of m01 =
mL
λT = 236, 120.288 kg. The lower speciﬁc impulse propellant, UDMH/NO4,
for the second stage yields, λT = 0.010172, which translates into a a total
initial, ﬁrst-stage mass of m01 = mL
λT = 491, 535.058 kg, which is more than
twice that of the kerosene/LO2 option. As shown in Fig. 8.5, the optimal
second-stage payload ratios in the both cases are almost the same at λ2 =
0.05, which implies the same second-stage propellant mass for both propellant
options.
As seen above, the two-stage rocket prefers more propellant mass of the higher
speciﬁc impulse. However, in general, the propellant with the higher speciﬁc
impulse is more expensive per unit volume. Hence, in practice, the value of
α2 that produces the more cost-eﬀective option is employed, rather than the
one obtained here for the maximum total payload ratio.
A word of caution is necessary in the optimization algorithm presented
above. If a very small value of α2 is employed, the iterative solution of the

8.4 Optimal Rockets
213
0
0.02
0.04
0.06
0.08
0.1
0.1
0.2
0.3
0.4
0.5
0.6
0.7
λ2
λ1
β2 = 1.75
β2 = 1.50
Fig. 8.5. First- and second-stage payload ratios, and their optimal values.
rocket equation may sometimes produce an optimal λ1 > 1.0, which, of course,
is absurd. This might happen when β2 is large, which implies that there is
a large diﬀerence in the speciﬁc impulses of the two stages. In such a case,
one cannot employ the “optimal” solution, but a suitable value of α2 must be
chosen that leads to λ1 < 1.0.
8.4.2 Optimal Three-Stage Rocket
With three stages, the algorithm for optimal staging involves two optimization
variables, α2, α3. It is slightly more diﬃcult to choose the initial values and
range of variation for these variables, as compared to the two-stage rocket,
but a good starting point is generally α2 = α3 = 1, i.e., equal payload ratios
for all three stages. After a few trials, the possible range of optimal variables
can be narrowed down to a small two-dimensional region.
Example 8.6. Design an optimal, three-stage rocket meeting the requirements
presented in Example 8.5, such that the ﬁrst stage uses a solid propellant with
Isp1 = 200 s, the second stage employs UDMH/NO4, while the third stage
has the kerosene/LO2 propellant combination. The structural ratios of the
stages are σ1 = 0.07, σ2 = 0.05, and σ3 = 0.05.
Using the mission data of Example 8.5, we have
Δv
ve1 = 4.842, mL =
5000 kg, β2 = 1.5, and β3 = 1.75. With trial runs, it is noted that for

214
8 Rocket Propulsion
α2 < 0.1, α3 < 0.2, the absurd optimal value of λ1 ≥1.0 is obtained. Thus,
we restrict the range of optimization variables to α2 ≥0.1, α3 ≥0.2. After a
few more runs, the range is narrowed to α2 ≥0.17, α3 ≥0.2. The MATLAB
statements utilized in the optimization process are the following:
>>Isp1=200;vf=9500/(9.81*Isp1);epsilon=[0.07;0.05;0.05];beta=[1;1.5;1.75];
>> a2=0.2; %selection of initial alpha_3
>> A1=[];A2=[];TP=[];P=[];mpc=[];K=[];
>> for j=1:5;
a1=0.17; %selection of initial alpha_2
A2(:,j)=a2;
for k=1:300;
p=Nstage(vf,beta,epsilon,[1;a1;a2]);
P(k,j)=p;
A1(k,:)=a1;
TP(k,j)=a1*a2*p^3;
a1=a1+0.0005;
end
a2=a2+0.001;
end
>> surf(A2,A1,TP)
>> [mpc,K]=max(TP);
>> [mp,J]=max(mpc)
mp =
0.0335890188803516
J =
1
>> a1opt=A1(K(J))
a1opt =
0.1795
>> a2opt=A2(:,J)
a2opt =
0.2
>> popt=P(K(J),J)
popt =
0.978064786777034
A three-dimensional, perspective visualization of the total payload ratio
against the optimization variables is shown in Fig. 8.6. The optimal solution
is for the smallest possible α3, which in this case is α3 = 0.2, and α2 =
0.1795, which satisfy the rocket equation with the ﬁrst-stage payload ratio,
λ1 = 0.978065—a very large proportion. This implies an optimal ﬁrst-stage
propellant mass of only 3036.67 kg, which is almost negligible in comparison
with the total propellant mass of 136, 599.96 kg. This is not surprising, as
the optimal solution tends to reduce the mass of the smallest speciﬁc impulse
propellant. In comparison, the second and third stages have propellant masses
of 114, 030.646 kg and 19, 532.645 kg, respectively. The optimal total payload
ratio λT = 0.0336 is quite large in comparison with that of the two-stage
rocket (even with the higher speciﬁc impulse kerosene/LO2 option for the
second stage) in Example 8.5. The total initial mass of the ﬁrst stage, m01 =
5000
0.0336 = 148, 858.1735 kg, is less than one third of the lower initial mass (with
the higher speciﬁc impulse second-stage propellant option) in Example 8.5.
Thus, the three-stage design oﬀers a signiﬁcant improvement in eﬃciency over
the optimal two-stage rocket for the same mission. Of course, it is tempting
to do away with the ﬁrst stage entirely, resulting in a two-stage rocket with

8.4 Optimal Rockets
215
Fig. 8.6. Variation of total payload ratio of a three-stage rocket with α2 and α3.
Fig. 8.7. Relationship among the stage payload ratios of a three-stage rocket.

216
8 Rocket Propulsion
UDMH/NO4 in the ﬁrst stage, and the kerosene/LO2 propellant in the second
stage, but it is to be seen whether the resulting two-stage vehicle will have a
higher payload ratio (this design is left for you as an exercise at the end of
the chapter). Figure 8.7 depicts a graphical relationship among the payload
ratios, λ1, λ2, λ3, in the region of optimization. Note that a change in λ3
causes little variation in both λ1, λ2, which, in turn, are strong functions of
one another. The optimal values of the payload ratios are obtained from the
above calculation to be λ1 = 0.978065, λ2 = 0.17036, and λ3 = 0.156725.
8.5 Summary
Rocket engines power all spacecraft, launch vehicles, and long-range missiles.
Chemical rockets have the smallest propulsive eﬃciency compared to ther-
monuclear and electromagnetic rockets, yet they remain the most practical
due to technological and cost reasons. The rocket equation based upon spe-
ciﬁc impulse of the propellant mixture yields an accurate approximation of the
velocity impulse in space, but requires modiﬁcation due to losses within the
atmosphere. Staging improves a rocket’s performance signiﬁcantly, given the
total payload ratio. However, only a small improvement is obtained by using
more than three stages. It is important to study mission trade-oﬀby calcu-
lating the changes in the payload caused by modiﬁcations in the structural
and payload masses of the stages, without any change in the total velocity
impulse. The design of optimal multi-stage rockets is a crucial problem in sub-
orbital and space ﬂight and requires a maximization of the total payload ratio
for given mission performance and stage propellants, by varying the stage
payload ratios.
Exercises
8.1. A two-stage rocket has a payload of 1000 kg, the ﬁrst-stage speciﬁc im-
pulse of 200 s, and the second-stage speciﬁc impulse of 455 s. Both stages have
the same structural ratio of 0.07, and the same payload ratio of 0.2. It is de-
sired to use the same rocket, without any structural modiﬁcations, to launch
a heavier payload into a lower orbit. Find the new payload if the reduction in
the total velocity impulse compared to that of the original mission is 500 m/s.
8.2. A two-stage launch vehicle has a ﬁrst-stage speciﬁc impulse of 250 s, and
a second-stage speciﬁc impulse of 350 s. Both stages have the same structural
ratio of 0.05. Determine the minimum propellant mass required to place a 1000
kg payload into a 200 km high, circular earth orbit. (Assume an additional
1.5 km/s of velocity impulse required to overcome drag, gravity, and propulsive
losses.)

8.5 Summary
217
8.3. Repeat Exercise 8.2 such that the total cost of launching a payload,
 3
k=1 cpkmpk, is minimized, where cpk is the cost per kilogram of the kth
stage’s propellant. Assume that cp2 = 1.5cp1.
8.4. Repeat the the design of an optimal two-stage rocket with the mission
requirements and structural ratios of Example 8.5 with UDMH/NO4 in the
ﬁrst stage, and the kerosene/LO2 propellant in the second stage. Compare
the total payload ratio with that obtained for the optimal three-stage rocket
of Example 8.6.
8.5. Repeat the the design of an optimal three-stage rocket with the mission
requirements and structural ratios of Example 8.6, such that the solid pro-
pellant of the ﬁrst stage is burned along with a fraction of the core second
stage, as a combined parallel stage. Compare the total payload ratio with that
obtained for the optimal three-stage rocket of Example 8.6.

9
Planetary Atmosphere
9.1 Aims and Objectives
•
To develop a detailed planetary atmosphere model, including
nondimensional aerodynamic parameters for modeling
aerothermodynamic force, moment, and heat transfer during atmospheric
ﬂight.
•
To present a 21-layer standard atmosphere for the earth—ranging from
sea level to a geometric altitude of 700 km—for use in all simulations of
atmospheric and transatmospheric trajectories in subsequent chapters.
•
To present an exponential atmospheric model useful in obtaining
analytical insight into planetary entry trajectories.
9.2 Introduction
The atmosphere is a thin layer of gases clinging to the planetary surface
by gravitational attraction. All ﬂight vehicles have to pass through the at-
mosphere at one stage or the other. The aerothermal loads on an atmospheric
ﬂight vehicle depend on the thermodynamic properties of the atmospheric
gases, which, in turn, are variables of gravity, planetary rotation, chemical
composition, solar radiation, and planetary magnetic ﬁeld. Therefore, a model
of thermodynamic properties of the atmosphere is crucial for the analysis and
design of aerospace vehicles. At the low altitudes (less than 15 km on the
earth) of operation of most aircraft, the atmosphere can be regarded to be in
a thermal equilibrium, with negligible external inﬂuences (such as electromag-
netic disturbances and chemical reactions). This layer of the atmosphere is,
however, under constant perturbation by horizontal winds and two-phase non-
equilibria due to the presence of vapours (water on the earth, carbon dioxide
on Mars). These eﬀects constitute all the local phenomena collectively called
weather, such as evaporation, condensation, precipitation, lightning, and con-
vective winds. Although weather is what fascinates and aﬀects the earthbound

220
9 Planetary Atmosphere
creatures most, it has little impact on the mean thermodynamic properties
aﬀecting the ﬂight vehicle. On the other hand, all thermodynamic properties
vary greatly with the altitude, even when the atmosphere is at rest relative
to the planet. Hence, all atmospheric models focus on the vertical variation
of the thermodynamic variables and generally neglect the horizontal eﬀects
caused by weather and planetary rotation.
The basic variables representing the thermodynamic state of a gas are its
density, temperature, and pressure. The density, ρ, is deﬁned as the mass, m,
per unit volume, v, and has units of kg/m3. It can be deﬁned at a given point
in a gas by taking the limiting case of the volume tending to zero,
ρ .= lim
Δv→0
Δm
Δv = dm
dv .
(9.1)
The density aﬀects the gas in two ways. First, the weight of a given volume
of gas is directly proportional to its density. Thus, a stationary column of gas
would exert a force directly proportional to the density. Second, the density
determines the inertia of a ﬂowing gas. A denser packet of gas is accelerated to
a smaller speed when a force is applied on it. While the ﬁrst eﬀect is useful in
deriving the loads on a vehicle due to a stationary gas (called aerostatic loads),
the second comes into play whenever we are interested in understanding the
loads created by the relative motion between the vehicle and the atmosphere
(called aerodynamic loads).
A gas consists of a large number of inﬁnitesimal particles (molecules),
which are always in random relative motion due to mutual collisions, even-
though their net motion in any given direction (gas ﬂow) is zero. The tem-
perature, T, with units in Kelvin (K), is a measure of the average kinetic
energy (Chapter 4) of a gas particle, expressed as
3
2kT, where k is Boltz-
mann’s constant and has the value k = 1.38 × 10−23 J/K. Thus, a gas at a
higher temperature has particles whizzing past one another at a higher av-
erage speed. The absolute zero temperature, T = 0 K(−273◦c), denotes the
case of all gas particles at rest.
The pressure exerted by a gas on a solid surface is deﬁned as the net rate
of change of normal momentum of the gas particles striking per unit area, A,
of the surface. By Newton’s second law, the exchange of normal momentum
between the gas particles and the solid surface is responsible for a normal
force, fn, applied by the gas on the surface. Hence, the pressure at any given
point on the surface is the following:
p .=
lim
ΔA→0
Δfn
ΔA = dfn
dA .
(9.2)
By this deﬁnition, it is not necessary that a solid surface be actually present
at a point for the pressure to be deﬁned at the same point. Hence, pressure
can be regarded as the force per unit area that a hypothetical solid surface
would encounter, were it present at the given point. By Pascal’s law [22], a gas
at rest has the same pressure at all the points. By contrast, a ﬂowing gas has

9.3 Hydrostatic Equilibrium
221
pressure varying from point to point. A gas ﬂowing past a solid surface also
imparts a tangential momentum that is responsible for the force of relative
friction per unit area, called shear stress. We shall consider shear stress in
Chapter 10 when deﬁning the drag of atmospheric ﬂight vehicles.
While it would be nice to have a mathematical model for the atmosphere
that accounts for spatial (horizontal as well as vertical) and temporal (hourly
to monthly) variation of the thermodynamic variables, it is neither practical
nor necessary to do so. An aircraft is not designed to ﬂy only at a particular
place and time, hence horizontal and temporal atmospheric variations all over
the world are averaged out annually into a standard atmosphere that contains
a model of only the vertical variation of ρ, T, p. Such a standard atmosphere
can then be universally applied to analyze and design vehicles, and serves
as a common reference for the calibration of ﬂight instruments as well as a
benchmark for regulated operation of aircraft.
In the early days of aviation, there was little need to model the atmosphere
above 30 km altitude due to the limited ceiling of operational aircraft of the
day. However, after the second world war, there was a rapid increase in the alti-
tudes of operation of aircraft, ballistic missiles, launch vehicles, and satellites.
Thus, models of standard atmosphere after the 1950s extended well beyond
the 100 km altitude limit considered suﬃcient for most vehicles.1 However,
there is a large uncertainty in the modeled properties at altitudes above 100
km due to the eﬀects of solar radiation and sun-spot activity. These external
inﬂuences imply that the atmosphere is no longer in a thermal equilibrium.
Fortunately, most aircraft, missiles, and launch vehicles as well as entry vehi-
cles are unaﬀected by such an uncertainty. However, the life of a satellite in
a low orbit is drastically inﬂuenced by even small variations in the density at
altitudes extending up to (and beyond) 200 km.
9.3 Hydrostatic Equilibrium
Most standard atmospheric models consider air to be a perfect gas, with the
following equation of state relating the basic thermodynamic variables:
p = ρRT,
(9.3)
where R is the speciﬁc gas constant for a particular atmospheric gas mix-
ture. The gas constant is related to the universal gas constant, ¯R(= 8314.32
J/kg.mole.K), by
R =
¯R
m ,
(9.4)
1 The maximum atmospheric eﬀect at high altitudes is felt by the atmospheric entry
vehicles due to their extremely high speeds. For most entry vehicles, atmospheric
deceleration is negligible in magnitude when compared to the gravitational accel-
eration for altitudes above 100 km.

222
9 Planetary Atmosphere
where m is the molecular weight (in moles) of the gas. The molecular weight
varies with the chemical composition of the gas. For a gas in a thermal equi-
librium, the chemical composition is frozen, hence there is no variation in the
molecular weight. An alternative form of the equation of state for a perfect
gas is
p
ρn = constant ,
(9.5)
where n, the polytropic exponent, is a constant as long as the gas is in a
thermal equilibrium. When there is no heat transferred either to or from the
atmosphere, the adiabatic condition holds, for which n = γ, the speciﬁc heat
ratio. Apart from thermal equilibrium, which gives us constant values of R, γ,
we can assume that the atmosphere is at rest in the vertical direction. This as-
sumption is tantamount to neglecting vertical air currents that are responsible
for the convective weather phenomena and is called hydrostatic equilibrium.
A vertical column of gas in hydrostatic equilibrium has its pressure balanced
by its weight per unit area. Thus, we can write the following equation of hy-
drostatic equilibrium for a thin slice of atmosphere of altitude dh and a unit
cross-section area (Fig. 9.1):
dp = −ρgdh ,
(9.6)
where g denotes the acceleration due to gravity. Since we are interested in
modeling the vertical variation of the atmospheric properties, it is often con-
venient to deﬁne a geopotential altitude, hg, instead of the geometric altitude,
h, as follows:
g0dhg .= gdh ,
(9.7)
where g0 is the acceleration due to gravity at standard sea level (h = 0).
Consequently, the hydrostatic equation becomes
dp = −ρg0dhg .
(9.8)
(p+dp)A 
A
dh
pA
gA
S
dh
Fig. 9.1. A slice of atmosphere in hydrostatic equilibrium.

9.4 Standard Atmosphere
223
Note that the variation of g with altitude is absorbed into the geopotential
altitude, such that
hg = h
r0
r0 + h .
(9.9)
For earth, h and hg are virtually indistinguishable for h ≤65 km. Hence, at
the low altitudes of aircraft operation, we can substitute h for hg.
9.4 Standard Atmosphere
A standard atmosphere is generally modeled as comprising consecutive layers
of speciﬁed temperature variation with the altitude, T (h). At low altitudes, the
prevailing thermal and hydrostatic equilibrium can be represented by layers
with a linear variation of the temperature with altitude, while the nonequilib-
rium pheonomena at high altitudes generally requires a nonlinear temperature
model. The variation of molecular weight can be absorbed into the deﬁnition
of a molecular temperature, Tm, as follows:
Tm .= T m0
m ,
(9.10)
where m0 refers to the molecular weight at standard sea level. Clearly, while
Tm and T are indistinguishable for the layers in which thermal equilibrium
prevails, they diﬀer at higher altitudes where the molecular weight is a vari-
able. While being an artiﬁcial quantity, the molecular temperature is useful in
that its relationship with the geopotential altitude is linear even for those lay-
ers where nonequilibrium pheonomena occur. Here we shall conﬁne ourselves
to the derivation of atmospheric properties in layers with a linear temperature
variation. There are certain well-deﬁned atmospheric strata in all standard
atmospheric models for the earth, as depicted in Fig. 9.2. The troposphere,
extending from the standard sea level up to h = 11 km (tropopause), sees a
linearly decreasing temperature with the altitude, while the next higher layer,
11 < h ≤47 km, called the stratosphere, consists of three layers with constant
(isothermal) and linearly increasing temperature at diﬀerent rates, respec-
tively. The operation of most aircraft is limited to the troposphere and the
stratosphere. Immediately above the stratosphere lies the mesosphere, which
extends up to h = 86 km and has an isothermal layer, along with two con-
secutive layers with linearly decreasing temperature. With the mesosphere,
the assumption of thermal equilibrium ends, and the next stratum lying in
the range 86 < h ≤500 km is called the thermosphere, which experiences a
nonlinear decrease in the molecular weight with altitude due to thermal non-
equilibrium and associated chemical reactions. The thermodynamic properties
of thermosphere are strong functions of solar radiation, especially such peri-
odic phenomena as the sun-spot activity. Beyond the thermosphere lies the
exosphere, which is an indeﬁnite region dominated by electromagnetic eﬀects
of an ionized gas due to the interaction between solar wind and the earth’s

224
9 Planetary Atmosphere
11
47
0
86
500
Fig. 9.2. The distinct atmospheric strata.
magnetic ﬁeld. The exospheric temperature is usually considered constant,
but its value varies wildly between diﬀerent models.
Before considering a speciﬁc model, let us derive the basic atmospheric
variables in the layers having thermodynamic equilibrium. The linear vari-
ation of the temperature with the altitude in such a layer is expressed as
follows:
T = Ti + a(h −hi) ,
(9.11)
where the subscript i refers to the quantities at the base of the layer, and a is
a constant called the thermal lapse rate. By substituting Eqs. (9.3) and (9.5)
into Eq. (9.7), we have
a .= dT
dh = −(n −1)
n
g
R ,
(9.12)
which directly relates the lapse rate to the ploytropic exponent. The lapse
rate is crucial in determining the stability of the hydrostatic equilibrium of
an atmospheric layer. A negative lapse rate implies a cooling-oﬀof warm air
as it rises due to a small thermal disturbance from the equilibrium condition,
thereby causing the given air volume to become heavier and to descend back
to its equilibrium level. Therefore, an atmospheric layer with a < 0 is ther-
mally stable, and those with a > 0 are unstable. Whenever strong thermal
gradients are established due to local convective activity in the troposphere,
the prevailing negative lapse rate may become inverted, causing a tempera-
ture inversion and the formation of vertical air currents in the resulting locally
unstable region.

9.4 Standard Atmosphere
225
In order to derive the variation of density and pressure with the altitude, we
need to integrate the hydrostatic equation. In the past, analytical expressions
were obtained with the use of the geopotential altitude, hg. However, with the
availability of digital computers, there is no particular advantage in doing so at
present. Thus, we shall consider the geometric altitude, h, as the independent
variable that results in a physically meaningful model. The acceleration due
to gravity within the atmosphere (h ≪r0) can be approximated as follows:
g = g0

r0
r0 + h
2
≈g0

1 −2h
r0

.
(9.13)
Substitution of Eqs. (9.13) into Eq. (9.7) yields
dp
p = −
g0(1 −βh)
R[Ti + a(h −hi)] ,
(9.14)
where r0β .= 2. We can integrate Eq. (9.14) between (hi, pi) and (h, p) for a
layer with a ̸= 0 in order to obtain
p = pi

1 + a(h −hi)
RTi
−{
g0
aR[1+β(
Ti
a −hi)]}
e
βg0
aR (h−hi) .
(9.15)
For an isothermal layer, T = Ti and a = 0. Therefore, the integration of
Eq. (9.14) leads to the following expression for pressure:
p = pie−
g0(h−hi)
RTi
1−β(h−hi)
2
.
(9.16)
The density can be easily derived from the temperature and pressure using
the equation of state, Eq. (9.3), as follows:
ρ =
p
RT .
(9.17)
The analytical expressions derived above can easily be programmed into a
code for computing the temperature, pressure, and density at any point at
h < 86 km, where hydrostatic equilibrium is a valid assumption. The lapse
rates of individual layers are speciﬁed in various standard atmosphere models.
We shall follow the convention of the 1976 U.S. Standard Atmosphere [17] in
the range 0 ≤h ≤86 km. There are two layers in the 1976 U.S. Standard At-
mosphere above 86 km with nonlinear variation of temperature vs. altitude.
Hence, above 86 km altitude, we shall employ the 1962 U.S. Standard At-
mosphere [18], which conveniently models all the layers with linearly varying
temperature up to h = 2000 km. While the two models have a close agree-
ment in the altitude range 0 ≤h ≤86 km, there is a large diﬀerence in the
two models in the exospheric region, which is, however, of little concern to
atmospheric ﬂight vehicles. For a greater accuracy in the exospheric tempera-
ture, statistical models are usually employed that account for such phenomena

226
9 Planetary Atmosphere
Table 9.1. Standard Atmosphere Derived from 1976 and 1962 U.S. Standard At-
mospheres
i
hi
Ti
R
a
(km)
(K)
(J/kg.K) (K/km)
1
0
288.15
287.0
−6.5
2
11.0191
216.65
287.0
0.0
3
20.0631
216.65
287.0
1.0
4
32.1619
228.65
287.0
2.8
5
47.3501
270.65
287.0
0.0
6
51.4125
270.65
287.0
−2.8
7
71.8020
214.65
287.02
−2.0
8
86
186.946 287.02
1.693
9
100
210.02
287.84
5.0
10 110
257.0
291.06
10.0
11 120
349.49
308.79
20.0
12 150
892.79
311.80
15.0
13 160
1022.2
313.69
10.0
14 170
1103.4
321.57
7.0
15 190
1205.4
336.68
5.0
16 230
1322.3
366.84
4.0
17 300
1432.1
416.88
3.3
18 400
1487.4
463.36
2.6
19 500
1506.1
493.63
1.7
20 600
1506.1
514.08
1.1
21 700
1507.6
514.08
0.0
as solar ﬂares and sun-spot activity. Such models are useful in predicting the
drag (and life) of satellites in low orbits. The numerical values of the 21-layer,
hybrid standard atmosphere are tabulated in Table 9.1 and encoded in the
MATLAB M-ﬁle, atmosphere.m (Table 9.2). The highest layer in this model
ranges between 700 ≤h ≤2000 km. The code atmosphere.m will be employed
throughout the book for evaluation of atmospheric properties in the range
0 ≤h ≤2000 km.
Apart from the basic thermodynamic variables, the following additional
parameters useful in determining aerothermal loads on a vehicle are calculated
by the atmospheric model:
(a) the speed of sound, a∞.= √γRT
(b) Mach number, M .=
v
a∞, where v denotes the speed of the vehicle relative
to the atmosphere
(c) the dynamic viscosity coeﬃcient, μ, with the following Sutherland’s law:
μ = 1.458 × 10−6
T
3
2
T + 110.4 .
(9.18)

9.4 Standard Atmosphere
227
(d) Prandtl number,
Pr = μcp
kT
,
(9.19)
where kT is the coeﬃcient of thermal conductivity of the perfect gas, and cp
is its constant pressure speciﬁc heat, which can be calculated by
cp =
Rγ
γ −1 .
(9.20)
For perfect air, thermal conductivity is computed using the following empirical
formula [19]:
kT = 2.64638 × 10−3T
3
2
T + 245.4(10−12
T )
J/m.s.K .
(9.21)
(e) Knudsen number, Kn .= λ
lc , where λ is the mean free path of free-stream
molecules and lc is a characteristic length. The mean free path is based upon
the collision diameter, σ, and is calculated by
λ =
m
√
2πσ2ρNa
,
(9.22)
where m is the molecular weight in kg/mole, and Na = 6.0220978 × 1023 is
Avogadro’s number.
(f) The ﬂow regime parameter, d, is based upon Knudsen number. If d = 1, we
have a free-molecular ﬂow (Chapter 10), d = 2 represents a continuum ﬂow,
and d = 3 denotes the transition ﬂow regime lying between the two limits.
(g) Reynolds number, Re .= ρvlc
μ , representing the ratio of inertial and viscous
forces.
Example 9.1. Using the standard atmosphere model given above, plot the vari-
ation of density and pressure in the altitude range 0 ≤h ≤200 km.
The
results are plotted in Fig. 9.3 in altitude increments of 1 km on a logarithmic
scale using the program atmosphere.m. Clearly, both density and pressure be-
come negligible at h > 120 km. An interesting feature is observed in both pres-
sure and density plots: their variation in the altitude ranges 5 ≤h ≤80 km,
80 < h ≤120 km, and 130 ≤h ≤200 km is piecewise linear on a log-scale with
the altitude. This indicates that one can employ an exponential approximation
for the density and pressure variation in the given regions, which amounts to
the assumption of a constant temperature in each region [Eq. (9.16)]. Such a
simple isothermal atmospheric model is often applied within selected altitude
limits for analytical purposes.

228
9 Planetary Atmosphere
Table 9.2. M-ﬁle atmosphere.m for the Earth’s Standard Atmospheric Properties
function Y = atmosphere(h, vel, CL)
%(c) 2005 Ashish Tewari
R = 287; %sea-level gas constant for air (J/kg.K)
go = 9.806; %sea level acceleration due to gravity (m/s^2)
Na = 6.0220978e23; %Avogadro’s number
sigma = 3.65e-10; %collision diameter (m) for air
S = 110.4;
%Sutherland’s temperature (K)
Mo = 28.964; %sea level molecular weight (g/mole)
To = 288.15; %sea level temperature (K)
Po = 1.01325e5; %sea level pressure (N/m^2)
re = 6378.14e3; %earth’s mean radius (m)
Beta = 1.458e-6; %Sutherland’s constant (kg/m.s.K^0.5)
gamma = 1.405; %sea level specific-heat ratio
B = 2/re; layers = 21; Z = 1e3*[0.00; 11.0191; 20.0631; 32.1619;
47.3501; 51.4125;
71.8020; 86.00; 100.00; 110.00; 120.00; 150.00; 160.00; 170.00; 190.00;
230.00; 300.00; 400.00; 500.00; 600.00; 700.00; 2000.00];
T = [To; 216.65; 216.65; 228.65; 270.65; 270.65; 214.65; 186.946;
210.65; 260.65; 360.65; 960.65; 1110.60; 1210.65; 1350.65; 1550.65;
1830.65; 2160.65; 2420.65; 2590.65; 2700.00; 2700.0];
M = [Mo; 28.964; 28.964; 28.964; 28.964; 28.964; 28.962; 28.962;
28.880;
28.560; 28.070; 26.920; 26.660; 26.500; 25.850; 24.690;
22.660; 19.940; 17.940; 16.840; 16.170; 16.17];
LR = [-6.5e-3; 0; 1e-3; 2.8e-3; 0; -2.8e-3; -2e-3;
1.693e-3; 5.00e-3; 1e-2; 2e-2; 1.5e-2; 1e-2; 7e-3; 5e-3; 4e-3;
3.3e-3; 2.6e-3; 1.7e-3; 1.1e-3; 0];
rho0 = Po/(R*To); P(1) = Po; T(1) = To; rho(1) = rho0; for i =
1:layers
if ~(LR(i) == 0)
C1 = 1 + B*( T(i)/LR(i) - Z(i) );
C2 = C1*go/(R*LR(i));
C3 = T(i+1)/T(i);
C4 = C3^(-C2);
C5 = exp( go*B*(Z(i+1)-Z(i))/(R*LR(i)) );
P(i + 1) = P(i)*C4*C5;
C7 = C2 + 1;
rho(i + 1) = rho(i)*C5*C3^(-C7);
else
C8 = -go*(Z(i+1)-Z(i))*(1 - B*(Z(i + 1) + Z(i))/2)/(R*T(i));
P(i+1) = P(i)*exp(C8); rho(i+1) = rho(i)*exp(C8);
end
end for i = 1:21
if h < Z(i+1)
if ~(LR(i)== 0)
C1 = 1 + B*( T(i)/LR(i) - Z(i) );
TM = T(i) + LR(i)*(h - Z(i));
C2 = C1*go/(R*LR(i));
C3 = TM/T(i);
C4 = C3^(-C2);
C5 = exp( B*go*(h - Z(i))/(R*LR(i)) );
PR = P(i)*C4*C5; %Static Pressure (N/m^2)
C7 = C2 + 1;
rhoE = C5*rho(i)*C3^(-C7); %Density (kg/m^3)
else
TM = T(i);
C8 = -go*(h - Z(i))*(1 - (h + Z(i))*B/2)/(R*T(i));
PR = P(i)*exp(C8); %Static Pressure (N/m^2)
rhoE = rho(i)*exp(C8); %Density (kg/m^3)
end
MOL = M(i) + ( M(i+1)-M(i) )*( h - Z(i) )/( Z(i+1) - Z(i) );
TM = MOL*TM/Mo; %Kinetic Temperature

9.4 Standard Atmosphere
229
asound = sqrt(gamma*R*TM); % Speed of Sound (m/s)
MU = Beta*TM^1.5/(TM + S); % Dynamic Viscosity Coeff. (N.s/m^2)
KT = 2.64638e-3*TM^1.5/(TM + 245.4*10^(-12/TM));
Vm = sqrt(8*R*TM/pi); m = MOL*1e-3/Na; n = rhoE/m;
F = sqrt(2)*pi*n*sigma^2*Vm;
L = Vm/F; % Mean free-path (m)
Mach = vel/asound; % Mach Number
T0 = TM*(1 + (gamma - 1)*Mach^2/2);
MU0 = Beta*T0^1.5/(T0 + S);
RE0 = rhoE*vel*CL/MU0;
RE = rhoE*vel*CL/MU; % Reynold’s Number
Kn = L/CL; % Knudsen Number
Kno = 1.25*sqrt(gamma)*Mach/RE0;
%flow regime parameter
if Kn >= 10
d = 1; % free-molecule flow
elseif Kn <= 0.01
d = 2; % continuum flow
else
d = 3; % transition flow
end
Y = [TM; rhoE; Mach; Kn; asound; d; PR; MU; RE; KT];
return;
end
end
0
50
100
150
200
10
−5
10
0
10
5
p(N/m2)
h (km)
0
50
100
150
200
10
−10
10
−5
10
0
ρ(kg/m3)
h (km)
Fig. 9.3. The variation of density and pressure with altitude in the standard at-
mosphere.

230
9 Planetary Atmosphere
9.5 Exponential Model for Planetary Atmospheres
As seen in the example given above, the complex variation of temperature,
density, and pressure in a standard atmosphere can be simpliﬁed by employing
an isothermal approximation in selected altitude regions with appropriately
scaled average temperatures. Such an exponential model of density variation
is very useful in determining the properties of planetary atmospheres and
also enables a quick and accurate analysis. For an isothermal model, we can
express the density variation with the altitude as follows:
ρ = ρ0e−h
H ,
(9.23)
where ρ0 is a base density (not necessarily the sea level value), and H is a
scale height that depends upon the selected average isothermal temperature.
Both ρ0 and H are chosen such that a good ﬁt is obtained with the standard
atmosphere in a given range of altitudes.
Example 9.2. Using an exponential atmosphere with ρ0 = 1.752 kg/m3 and
H = 6.7 km, compare the density with that of the standard atmosphere in
the range 5 ≤h ≤120 km.
The required comparison is shown in Fig. 9.4 and displays an excellent
agreement between the two models in the range 5 ≤h ≤50 km. However, at
higher altitudes, there is a marked deviation in the predicted density proﬁles,
0
20
40
60
80
100
120
140
10
−8
10
−6
10
−4
10
−2
10
0
h (km)
ρ (kg/m3)
Exponential Atmosphere
Standard Atmosphere
Fig. 9.4. Comparison of density proﬁle with exponential and standard atmospheric
models.

9.6 Summary
231
especially in the 50 < h ≤100 km range that is crucial for most entry vehicles.
Thus, the exponential model is good enough for modeling ﬂight below 50
km altitude, which is the realm of most airplanes. It is also adequate for
analytically estimating the peak aerothermal loads encountered by entry and
ascent vehicles, which occur at h < 50 km.
The exponential approximation is often employed by planetary probes for
determining a rough atmospheric model of distant planets. Such probes are
usually equipped with accelerometers for measuring deceleration caused by
the atmospheric drag, which, ignoring the acceleration due to gravity, can be
expressed as
−˙v = 1
2ρ0e−h
H v2
e
SCD
m
,
(9.24)
where ve is the known entry speed and CD is a predetermined drag coeﬃcient
based upon the reference area, S. By plotting deceleration against altitude
(measured by radar) on a logarithmic scale, the constants ρ0 and H can be
determined. Examples of planetary atmospheric probes include the Galileo,
Viking, Pioneer, and Huygens for the atmospheres of Jupiter, Mars, Venus,
and Saturn’s moon Titan, respectively.
9.6 Summary
The aerothermal loads on an atmospheric ﬂight vehicle depend on the ther-
modynamic properties of the atmospheric gases, a careful model of which is
thus crucial for the analysis and design of aerospace vehicles. Standard at-
mospheric models are based upon the hydrostatic and thermal equilibrium
and consist of many layers, each having diﬀerent variations of temperature
with altitude. A linear variation of the temperature with geopotential altitude
is a standard approximation employed in most atmospheric models. However,
upper atmospheric layers (thermosphere and exosphere) do not have thermal
and chemical equilibrium and hence have an inherently nonlinear variation of
temperature with altitude. A suitable exponential model can be employed for
ﬁtting the variation of density with altitude in a speciﬁc (limited) range of
altitudes. Such a model is valuable in imparting analytical insight into entry
trajectories.
Exercises
9.1. For an earth’s atmospheric entry vehicle of drag coeﬃcient (Chapter
10), CD = 1.7 at h = 100 km, reference area, S = 10 m2, characteristic
length, lc = 1.75 m, and mass, m = 300 kg, compare the deceleration due
to drag and acceleration due to gravity if the entry speed is v = 8 km/s.
Use the standard atmospheric model of Table 9.1, as well as the exponential
atmosphere approximation of Eq. (9.23).

232
9 Planetary Atmosphere
9.2. Plot the dynamic pressure, Knudsen number, Reynold number, Mach
number, and Prandtl number against altitude for the vehicle in Exercise 9.1,
assuming that the speed varies linearly from v = 7.8 km/s at h = 65 km to
v = 3 km/s at h = 20 km.
9.3. A satellite in a circular earth orbit of 200 km altitude has drag coeﬃcient
(Chapter 10) CD = 2.2 based on reference area, S = 200 m2, characteristic
length, lc = 5 m, and mass, m = 1000 kg. Using the method of Exercise 6.6,
estimate the life of the satellite in orbit.
9.4. The average surface pressure, density, and temperature of Venus were
estimated by four Pioneer probes to be p0 = 92 × 105 N/m2, ρ0 = 65 kg/m3,
and T0 = 737 K, respectively. During the descent through the atmosphere, a
constant thermal lapse rate of a = −10.7 K/km was measured. If the accelera-
tion due to gravity and molecular weight at the surface are g0 = 8.88 m/s2
and m0 = 43.45 g/mole, respectively, derive a standard atmospheric model
for Venus. What would be the base density and scale height of the Venus
atmosphere for a good ﬁt with the standard atmosphere in the altitude range
0 ≤h ≤50 km?

10
Elements of Aerodynamics
10.1 Aims and Objectives
•
To introduce aerodynamics, ranging from elementary concepts to models
of viscous, hypersonic, and rareﬁed ﬂows by computational ﬂuid
dynamics.
•
To deﬁne the important aerothermodynamic variables and parameters
necessary in atmospheric ﬂight dynamic modeling.
•
To build an appropriate model of aerodynamic force and moment vectors
and coeﬃcients for each ﬂow regime.
10.2 Basic Concepts
Atmospheric ﬂight involves creation of forces with the interaction of the at-
mosphere. Such an interaction can take the form of either aerostatic force of
buoyancy that arises due to a lighter-than-air vehicle such as a hot-air balloon,
or an aerodynamic force generated due to the motion of the vehicle relative to
the atmosphere. As seen in the previous chapter, the aerostatic force can be
easily modeled with the use of the hydrostatic equation and will not receive
further discussion in the book. On the other hand, aerodynamic force requires
a careful modeling involving the motion of a ﬂowing gas relative to the vehi-
cle, with all the necessary ﬂuid dynamic and thermodynamic principles. It is
our objective in the present chapter to high-light the important aerodynamic
phenomena and their practical modeling for ﬂight dynamic applications.
10.2.1 Aerodynamic Force and Moment
An object moving in a straight line relative to the atmosphere with a velocity
vector, v, generally experiences two force components: one opposite to the
direction of motion (v), called drag, (D), and the other perpendicular to v,

234
10 Elements of Aerodynamics
called lift, (L). It is to be noted that the relative ﬂow the object experiences
is directly opposite to the direction of relative motion of the object. Children
are intimately acquainted with both of these force components through a
hand extended outside a moving car’s window. The relative magnitudes of
the lift and drag are primarily dependent upon the shape of the object and
its attitude relative to the direction of motion. For example, a ﬂat plate kept
either tangential or normal to the ﬂight direction would experience only the
drag, but also experiences lift when kept at an angle to the relative ﬂow. In
order to better model the aerodynamic force, it is necessary to introduce the
concept of the angle of attack (α), which is deﬁned as the angle made by
v with a reference plane ﬁxed to the vehicle. For a ﬂat plate, the reference
plane is the same as the plate, while for an airplane wing it is the chord
plane obtained by joining the leading edge and the trailing edge,1 as shown
in Fig. 10.1. From this deﬁnition, it is clear that a ﬂat plate with α ̸= 0 has
L ̸= 0, but with α = 0 we have L = 0. Also, we can say that for generating
large amounts of lift, ﬂattened surfaces, called lifting surfaces, are essential.
These surfaces are the wings and tails of an airplane and the ﬁns of a missile.
In contrast, the fuselage, nacelles, and missile bodies generate negligible lift
at zero angle of attack. An airplane wing placed at an angle of attack to
a uniform air ﬂow experiences drag, D, lift, L, and a pitching moment, M,
at any given point on the wing (Fig. 10.1). The lift is useful in balancing
the weight of the vehicle, whereby a sustained ﬂight through the atmosphere
becomes possible. On the other hand, drag is an undesirable force component,
which causes a dissipation of total energy into heat. Drag is partly created
by friction between adjacent layers of the ﬂuid ﬂowing past the vehicle. Since
energy loss due to drag must be overcome by fuel expenditure, the drag force
must be minimized for an eﬃcient vehicle design. In order to understand drag
a little better, let us consider the ﬂow past a ﬂat plate. When the plate is at
α = 0, drag is created solely by the relative friction between the plate and the
v
%
D
L
B
Relative Flow 
Fig. 10.1. Cross section of an airplane wing placed at an angle of attack to a
uniform air ﬂow.
1 Leading and trailing edges refer to the lines on an object that ﬁrst and last receive
the relative air ﬂow.

10.2 Basic Concepts
235
ﬂuid particles2 brushing past the plate [Fig. 10.2(a)]. Such a drag is called skin
friction drag. The friction, being a nonconservative force (Chapter 4), leads
to the conversion of a part of kinetic energy of the ﬂuid particles into heat
and is responsible for the deformation of the ﬂuid elements in a continuum
ﬂow regime (Sec. 11.2) as depicted in Fig. 10.2(a). When the ﬂat plate is
placed normal to the relative ﬂow (α = 90◦), as shown in Fig. 10.2(b), a ﬂuid
particle is incapable of making the right-angle turn for hugging the back of
the plate. This leads to a phenomenon called ﬂow separation, where the ﬂuid
particles depart from the solid surface, thereby exerting neither frictional force
nor normal pressure on the surface. The separated ﬂow, however, undergoes
a circulatory motion at the back of the plate, which causes no signiﬁcant
pressure change from the atmospheric pressure, pa. Consequently, the plate
experiences drag due to the diﬀerence in the pressure, p, exerted by the ﬂuid
particles on the front surface and the atmospheric pressure, pa, on the back
surface. The drag due to ﬂow separation is therefore called pressure drag and
can be regarded as the force that converts a part of the linear motion of
the ﬂuid particles (kinetic energy of translation) into useless rotary motion
(rotational kinetic energy). For the ﬂat plate at an intermediate angle, 0 <
α < 90◦, the drag consists of both skin friction and pressure drag. This is also
the situation for an airplane wing, or any general object placed in a uniform
ﬂow. In a low-speed ﬂight, the drag is caused by only the two mechanisms
described above, while a high-speed ﬂight involves a third mechanism that we
will discuss a little later. Minimizing the drag is a principal objective in the
design of atmospheric ﬂight vehicles. However, an attempt to reduce the skin
friction drag generally leads to an increase in the pressure drag, and vice versa.
Therefore, a compromise is struck between the two conﬂicting requirements
by selecting a shape that results in the total drag being minimized for a given
ﬂight condition. The most eﬃcient design is a streamlined shape (such as that
shown in Fig. 10.1) with a small external surface area, which allows a ﬂuid
particle to follow the surface to the largest possible extent, but without causing
excessive skin friction. An important factor in airplane design is the creation
of lift by wings. The streamwise cross section of an airplane wing is called an
airfoil, as depicted in Fig. 10.1. The airfoil is shaped in a particular way for
eﬃcient lift creation. Notice the sharp trailing edge and a rounded leading
edge in Fig. 10.1. Furthermore, the upper surface is much more curved than
the lower surface. As a result of this diﬀerence in curvature, two ﬂuid particles
arriving simultaneously at the trailing edge after following the upper and lower
surfaces would have traversed diﬀerent distances in the same time. This leads
to a larger average speed for the upper ﬂuid particle and consequently (as we
2 A ﬂuid particle is an inﬁnitesimal packet of ﬂuid, whose motion in a steady
ﬂow can be described by a ﬁxed line, called a streamline. In the continuum ﬂow
regime (discussed ahead), the ﬂuid particle is the same as a ﬂuid element, while
for a rareﬁed ﬂow, the term particle is understood to stand for an individual gas
molecule.

236
10 Elements of Aerodynamics
Relative flow
Un-deformed fluid
element
Fluid element
deformed by
 shear 
R
R
    (a) 
p
pa
Relative flow
    (b) 
Fig. 10.2. Skin-friction and ﬂow separation (pressure) drag of a ﬂat-plate.
will see ahead) a smaller pressure exerted by it on the upper surface, thereby
creating lift. Increasing the angle of attack causes the diﬀerence between the
upper and lower surface streamlines to increase, resulting in a larger lift.
However, operating a wing at a larger angle of attack also increases the drag
due to ﬂow separation, as the ﬂuid particles ﬁnd it increasingly diﬃcult to
follow a greatly curved path along the upper surface. There is a limiting angle
of attack, α ≤αs, called the stalling angle of attack, beyond which the ﬂow
on the upper surface becomes largely separated [Fig. 10.2(b)], leading to an
almost complete loss of lift. This phenomenon, called stall, is encountered by
all lifting surfaces.
The most eﬃcient shape for a lifting surface can generate an adequate
amount of lift at small values of α, in order to minimize the pressure drag.
Such an optimization of the ratio L
D forms the basis of airplane design. Up to
the stalling angle of attack, most lifting surfaces have a linear variation of the
lift with the angle of attack. Thus, we can write

10.2 Basic Concepts
237
L = L0 + Lαα (α ≤αs) ,
(10.1)
where L0 is the lift at zero angle of attack, and Lα is the slope of the lift
variation with α. For α > αs, the variation of lift with angle of attack is
nonlinear and depends primarily upon the shape of the leading edge, the ﬂow
speed, as well as the viscosity of the ﬂuid. As a ﬁrst-order approximation,
one can ignore the nonlinear lift and regard the maximum lift created at the
stalling angle of attack obtained simply as Lmax = L0 +Lααs. For a post-stall
ﬂight, one can assume L ≈0. Due to its dependence on the angle of attack,
the drag of a vehicle can be split into two parts: (a) lift-independent (parasite)
drag, which plays no part in lift generation, and (b) lift-dependent (induced)
drag, which arises because of the lift creation. Clearly, parasite drag must
be minimized in order to have the maximum possible lift-to-drag ratio. For
most vehicles in the linear lift range, the drag can be expressed as a parabolic
function of the lift:
D = D0 + KL2 (α ≤αs) ,
(10.2)
where D0 is the parasite drag, and the constant K is called the lift-dependent
drag factor. Finally, the aerodynamic pitching moment at a given point in the
vehicle can be expressed by the following linear dependence on the angle of
attack:
M = M0 + Mαα (α ≤αs) ,
(10.3)
where M0 is the moment at zero angle of attack, and Mα is the rate of change
of pitching moment with α. As discussed in Chapter 13, Mα determines the
static stability of an airplane’s pitching motion (Mα < 0 for stability), and
restricts the location of the airplane’s center of mass. On the other hand, for
an airplane to be in moment equilibrium (trim), we must have M0 = 0 for the
whole airplane, which is usually achieved by using horizontal tail (or canard)
surfaces. We will return to these concepts a little later.
The foregoing treatment of aerodynamic force and moment is restricted to
the most common ﬂight condition, wherein the motion occurs within the plane
of symmetry of the vehicle. As discussed in Chapter 12, most atmospheric
ﬂight vehicles possess at least one plane of symmetry. When the motion of
an atmospheric vehicle follows a general, three-dimensional curve, there is a
component of the relative velocity normal to the plane of symmetry, called
sideslip. The sideslip makes an angle, β, called the sideslip angle with the
symmetry plane. Furthermore, the swirling motion of the ﬂow caused by pro-
pellers and wing tips leads to an aerodynamic bank angle, σ. Due to the
sideslip and aerodynamic bank, additional aerodynamic force components,
called side-force, fY , and moment components, called rolling moment, L, and
yawing moment, N, are generated. These components vary with the sideslip
angle, β, in a manner quite similar to that of lift, drag, and pitching moment
with the angle of attack, as we will see in Chapter 13. Hence, our discussion
here of lift, drag, and pitching moment can be easily extended to the lateral
aerodynamic force and moment.

238
10 Elements of Aerodynamics
It is important to emphasize that all of the relationships given above are
valid only for a steady ﬂow, where the time-dependent ﬂow disturbances have
died out. In the case of unsteady ﬂow, there are additional terms describing
the dependence of lift, drag, and pitching moment on the time rate of change
of angle of attack, ˙α, which we will discuss in Chapters 13 and 15.
10.3 Fluid Dynamics
Fluid is a term that encompasses all ﬂowing matter, such as liquids, gases, and
ﬁne solid particles, and mixtures thereof. We can apply the basic principles
of mechanics (Chapter 4) to a ﬂuid element, after taking into account their
special characteristics. Our primary concern is the ﬂow of gaseous mixtures,
such as air, hence our discussion in this section will be conﬁned to gases. In
Chapter 9, we saw how an element of air can be in static equilibrium under
the inﬂuence of gravity and buoyancy. When the same element is moving past
a vehicle, it exerts pressure and shear stress on the solid surfaces of the latter,
thereby generating lift, drag, and pitching moment. Hence, our objective in the
present section is to understand ﬂuid dynamics, which is the science of moving
ﬂuids. For illustration, we will conﬁne ourselves to unidirectional ﬂows and
understand that the same principles are applicable to ﬂows in two and three
dimensions (with a greater mathematical complexity). Our present analysis
is largely restricted to steady ﬂow, while unsteady ﬂuid dynamics, important
for understanding short-period rotational dynamics of a vehicle (Chapter 13),
is discussed toward the end of the chapter.
10.3.1 Flow Regimes
Before continuing our discussion of ﬂuid dynamics, it is necessary to classify
the ﬂow according to some characteristic ﬂow regimes. Within each regime,
the nature of the ﬂow is markedly distinct, thereby requiring diﬀerent model-
ing methods for the various regimes. The primary classiﬁcation of ﬂow is that
of continuum and rareﬁed ﬂow. The average distance separating any two gas
molecules at any given time, called the mean free path, λ, is inversely propor-
tional to atmospheric density, which itself varies with altitude (Chapter 9). At
low altitudes, this average intermolecular distance is negligible, therefore a ve-
hicle moving relative to the atmosphere is fairly large compared to λ, and thus
encounters a continuous stream of molecules. In such a case, the ﬂuid is mod-
eled as a continuous medium, without any voids, and the principles of ﬂuid
dynamics based on this assumption are called continuum ﬂuid dynamics. At
high altitudes, the atmosphere becomes tenuous in nature, with the mean free
path becoming of the order of meters, which is comparable to the vehicle’s
dimensions. Consequently, the vehicle experiences an intermittent collision
with the molecules, and the ﬂuid is modeled as a noncontinuum or rareﬁed

10.3 Fluid Dynamics
239
medium. While the principles of continuum ﬂuid dynamics are based on diﬀer-
ential calculus, those of rareﬁed ﬂuid dynamics involve a statistical approach
based upon a stochastic model of ﬂuid–solid interaction. The non-dimensional
Knudsen number, deﬁned as the ratio of the mean free path of undisturbed
molecules and a characteristic length of the vehicle, Kn .= λ/lc, is the gov-
erning parameter for rareﬁed ﬂows. As pointed out in Chapter 9, ﬂows with a
small value of Kn are considered to be continuum ﬂows, while those having a
large Knudsen number fall into the rareﬁed category. Generally, Kn ≤0.01 is
considered the continuum regime, while Kn > 0.01 is called rareﬁed ﬂow. As
we shall ﬁnd out, within each ﬂow regime are additional subregimes, primarily
based upon the particular mathematical modeling procedures.
10.3.2 Continuum Flow
The continuum ﬂow assumption is based upon disregarding the intermolecular
separation and treating the ﬂuid as a continuous medium, whose volume can
shrink to inﬁnitesimal dimensions. Such a small packet of ﬂuid is called a
ﬂuid element and is useful in deriving the governing equations of momentum
and energy. Continuity of the ﬂow is an important aspect of continuum ﬂuid
dynamics. Consider a ﬂuid moving steadily in the direction indicated by the
distance x. If we ﬁx a volume in the space—called a control volume—indicated
by dotted lines in Fig. 10.3(a), the net mass ﬂow through the given control
volume must be a constant by the law of mass conservation, which states that
matter can be neither created nor destroyed in the process of merely ﬂowing
from one point to the other. Thus, we have
˙m .= ρA(x)v(x) = constant ,
(10.4)
where A(x) denotes the cross-section area of the control volume at a given dis-
tance x. Equation (10.4) is called the continuity equation for one-dimensional
ﬂow. The concept of control volume can be extended to a volume bounded by
any set of streamlines, called a streamtube. In such a case, the area of cross
section, A(x), is determined solely by the shape of the streamtube, which in
turn, depends upon the geometry of the ﬂow. For example, the ﬂow on the
upper surface of an airfoil can be modeled by a converging-diverging stream-
tube, while that adjacent to the lower surface is treated as a converging
streamtube. Gases are compressible ﬂuids, which implies that their density
can change from point to point under the inﬂuence of changing pressure and
temperature. In contrast, liquids are largely incompressible in nature, thereby
implying a roughly constant density despite small pressure and temeperature
variations. A gas moving at suﬃciently low speeds mimics the behavior of a
liquid, because the pressure and temperature changes caused by its motion are
not large enough to cause appreciable density variations. Hence, a low-speed
gas ﬂow is accurately regarded as an incompressible ﬂow where ρ ≈constant.
For an incompressible ﬂow, the continuity equation simply becomes

240
10 Elements of Aerodynamics
Fig. 10.3. Mass, pressure, and shear in a unidirectional ﬂow.
A(x)v(x) = constant ,
(10.5)
which is a direct relationship between the speed and streamtube area. For
example, in a low-speed ﬂight, we can say that the ﬂow speed on the upper
surface of an airfoil ﬁrst increases and then decreases, while that on the lower
surface continuously increases. However, in a compressible ﬂow, we do not
have such a simple area-velocity relationship.
The general form of the continuity equation for an unsteady, three-
dimensional, continuum ﬂow is the following:
∂ρ
∂t + ∇· (ρv) ,
(10.6)
where ∇is the following vector gradient operator:

10.3 Fluid Dynamics
241
∇.= i ∂
∂x + j ∂
∂y + k ∂
∂z .
(10.7)
Clearly, the solution of the equation for a compressible ﬂow is complicated
by the fact that the changes in the density are also caused by changes in
the pressure due to the ﬂuid motion represented by v. Hence, another set
of equations is required for modeling the pressure variation due to change in
velocity.
Consider a ﬂuid element moving in the x-direction, as depicted in
Fig. 10.3(b). The element has an inﬁnitesimal thickness, Δx, and a unit cross-
sectional area. We assume that the element is far enough from any solid inter-
face, so that the rotation caused by shear stresses is negligible, and therefore,
there is no energy lost as the rotational kinetic energy. Such an assumption is
called the inviscid ﬂow (or irrotational ﬂow) approximation. We shall discuss
below why the inviscid ﬂow is a good assumption for most pressure calcula-
tions. Furthermore, the small size of the ﬂuid element ensures that its weight
is negligible in comparison with the force developed due to pressure diﬀerences
across the element. This aerodynamic force is merely dp on the unit area and
acts opposite to the direction of motion, as shown in Fig. 10.3(b). On applying
Newton’s second law of motion to the ﬂuid element, we can write
dp = −ρdxdv
dt = −ρdxdv
dx
dx
dt = −ρvdxdv
dx ,
(10.8)
or,
dp = −ρvdv.
(10.9)
Equation (10.9) is called Euler’s equation and represents the rate of change
of momentum per unit volume in a steady, inviscid ﬂow for a ﬂuid element.
This equation lets us calculate the pressure diﬀerence between any two points
along a streamline and is thus useful for estimating lift and pitching moment.
For example, ignoring the density changes, we can say that the ﬂow on the
upper surface of an airfoil results ﬁrst in a reduction of pressure due to an
accelerating ﬂow and then in an increase in the pressure due to ﬂow decel-
eration. However, Euler’s equation does not give an accurate estimate of the
drag due to the neglect of viscosity. In an unsteady, three-dimensional ﬂow,
Euler’s equation is generalized as the following vector diﬀerential equation:
∇p = −ρ∂v
∂t −ρv(∇· v).
(10.10)
For the case of an incompressible, steady, inviscid ﬂow, Euler’s equation is
directly integrated along a a streamline to yield the following result:
p + 1
2ρv2 = p0 = constant ,
(10.11)
which is known as the Bernoulli equation. The Bernoulli equation is a quick
and simple method for calculating the pressure distribution on a slowly ﬂying

242
10 Elements of Aerodynamics
airplane, for which the incompressible ﬂow approximation is valid. It is also
utilized for calibrating the airspeed indicator for indicating the speed through
the atmosphere (called airspeed) of slow aircraft. In such a case, the airspeed
indicator senses the barometric pressure diﬀerence between a pitot probe with
an opening normal to the relative ﬂow for measuring the stagnation pressure,
p0, and a static vent tangential to the relative ﬂow for estimating the static
pressure, p. The diﬀerence, p0 −p = 1/2ρv2, is called the dynamic pressure,
which is directly proportional to the square of the airspeed at a given alti-
tude (ρ = constant). The airspeed indicator is calibrated for a ﬁxed density,
usually the standard sea level value, and thus requires a density correction
for converting the indicated airspeed to the true airspeed at any given alti-
tude. A separate device, called the altimeter, for measuring p and converting
it to a standard altitude, provides the pilot with the approximate standard
altitude for making the necessary density correction for the airspeed. These
two basic instruments have provided the fundamental navigational reference
in all aircraft over the 100 years of manned atmospheric ﬂight. However, it is
important to remember that airspeed measurements based on the Bernoulli
equation would be in gross error when ﬂying at higher speeds for which in-
compressible ﬂow assumption is invalid.
10.3.3 Continuum Viscous Flow and the Boundary Layer
A ﬂuid element in close vicinity of a solid surface experiences a shear deforma-
tion due to ﬂuid viscosity and a tangential velocity component relative to the
surface. This situation is depicted in Fig. 10.3(c). The shearing action leads
to a shear stress along the ﬂow direction (x), τx, in the ﬂuid elements, which
is regarded as being directly proportional to the rate of deformation of the
element, ∂v/∂y, where y is the distance perpendicular to the ﬂow. The linear
relationship between the shear stress and rate of deformation is expressed as
τx .= μ∂v
∂y ,
(10.12)
where μ is the coeﬃcient of dynamic viscosity. Most liquids and gases obey
the linear stress–strain relationship of Eq. (10.12) and are called Newtonian
ﬂuids.3 The air ﬂow past a solid surface experiences shear in a thin region
close to the surface, called the boundary layer (Fig. 10.4). Within a bound-
ary layer, the momentum equation must include the viscous term for shear
stress, which makes the equation diﬃcult to solve. However, because of the
thin region of the boundary layer,4 and due to the fact that the pressure nor-
mal to the layer remains essentially unchanged by shear, approximate closed
3 However, ﬂuids consisting of solid particles and slurries do not have such a simple
behavior and fall into the category of non-Newtonian ﬂuids.
4 The boundary layer grows to a thickness less than 3 cm at x = 3.5 m on the wing
of an airliner cruising near 11 km altitude.

10.3 Fluid Dynamics
243
form and semi-empirical solutions have been derived for the ﬂow inside the
boundary layer [21]. The character of the boundary layer ﬂow may be either
smooth and layer-like, called laminar ﬂow, or rough and ﬂuctuating, called
turbulent ﬂow. A boundary-layer ﬂow usually begins as laminar, but even-
tually transitions into turbulent ﬂow. The causes of transition are not very
well understood but depend largely upon the surface roughness, ﬂow speed,
and viscosity. While the laminar ﬂow has a smaller value of μ compared to
the turbulent ﬂow, thereby causing a smaller skin friction drag, the laminar
boundary layer ﬁnds it more diﬃcult (compared to turbulent ﬂow) to adhere
to the solid surface when the ﬂow is decelerating. We recall that the ﬂow sep-
aration is caused by a decelerating ﬂow, which according to Euler’s equation,
implies an increasing pressure (or a positive pressure gadient), ∂p/∂x > 0.
Hence, a laminar layer separates more easily in a positive pressure gradient,
compared to a turbulent layer, thereby creating a larger pressure drag. For
this reason, some airplanes use small strategically placed rough patches, or
protuberances, on top of the wings in order to facilitate transition of laminar
ﬂow into a turbulent ﬂow, and thus reducing the chances of ﬂow separation
in the region of positive pressure gradient. A similar rationale is used in the
dimpled golf balls, whose reduced pressure drag due to turbulence guarantees
a better range. However, in regions of negative pressure gradient, it pays to
have laminar ﬂow to the largest possible extent by having an extra-smooth
surface. Some low- to medium-speed airfoils are especially designed to main-
tain laminar ﬂow over large portions, thereby reducing skin friction. This is
primarily achieved by minimizing the region of positive pressure gradient.
Inviscid Flow 
Boundary Layer 
0
p
x
w
!
w
x
0
p
y
w
|
w
y
v
Inviscid Flow 
Fig. 10.4. The boundary layer and the outer, inviscid region.
Outside the boundary layer, the eﬀects of viscosity are negligible, be-
cause the shearing action is virtually absent. Hence, the region external to
the boundary layer (which is a large domain) is accurately regarded as being
inviscid. From the mass conservation consideration, it can be seen that the
boundary layer tends to grow in thickness, even over a ﬂat plate at zero angle
of attack. This growth is tantamount to a normal displacement of the inviscid
ﬂow region external to the layer. Furthermore, since the pressure normal to

244
10 Elements of Aerodynamics
the boundary layer is transferred to the surface virtually unchanged, we can
treat the outer edge of the boundary layer as the solid surface itself and apply
Euler’s equation for computing pressure by the inviscid approximation on the
slightly thickened object. This two-layer approach is often utilized in comput-
ing pressure distribution on streamlined shapes. There is a feedback between
the two solutions such that the thickness of the boundary layer inﬂuences
the outer, inviscid region, while the pressure distribution computed by the
inviscid assumption aﬀects the growth and separation of the boundary layer,
which is modeled by a diﬀerent set of viscous equations [21]. Alternatively, a
uniﬁed computational approach is applied in which the entire ﬂow is modeled
by the fully viscous governing equations, called Navier–Stokes equations [22],
written as follows:
ρ∂v
∂t + ρv(∇· v) = −∇p + ∇⊙τ ,
(10.13)
where τ is the following symmetric square matrix, called stress tensor, com-
prising the stresses acting on the ﬂuid element:
τ .=
⎛
⎝
τxx τxy τxz
τxy τyy τyz
τxz τyz τzz
⎞
⎠.
(10.14)
The operator ⊙represents a dot product between the column vector, ∇, and
the square matrix, τ, resulting in a column vector consisting of the scalar
products between ∇and the individual rows of τ:
∇⊙τ .=
⎧
⎨
⎩
∇· τx
∇· τy
∇· τz
⎫
⎬
⎭,
(10.15)
where
τx .= τxxi + τxyj + τxzk,
τy .= τxyi + τyyj + τyzk,
(10.16)
τz .= τxzi + τyzj + τzzk.
The stresses can be divided into normal stresses,
τxx .= λ(∇· v) + 2μ∂vx
∂x ,
τyy .= λ(∇· v) + 2μ∂vy
∂y ,
(10.17)
τzz .= λ(∇· v) + 2μ∂vz
∂z ,

10.3 Fluid Dynamics
245
and shear stresses,
τxy .= μ
∂vy
∂x + ∂vx
∂y

,
τyz .= μ
∂vy
∂z + ∂vz
∂y

,
(10.18)
τxz .= μ
∂vz
∂x + ∂vx
∂z

,
where v .= vxi + vyj + vzk is the velocity of the ﬂuid element, and λ is the
coeﬃcient of bulk viscosity, approximated by λ = −2/3μ. Usually, the viscosity
coeﬃcient, μ, due to turbulent ﬂow is modeled by an appropriate statistical
or empirical turbulence model. However, turbulence remains an ill-understood
phenomenon.
The Navier–Stokes equations are the most diﬃcult to solve among all ﬂuid
dynamic models and require enormous computational resources for an accu-
rate solution. Their solution, subject to speciﬁc boundary conditions along
the solid surface and on the far-ﬁeld boundaries, requires iterative numerical
procedures. We shall refer the reader to a textbook on computational ﬂuid
dynamics [23] for a deeper insight into the continuum, viscous ﬂow modeling
and computation aspects.
The governing parameter for viscous ﬂow is the local Reynolds number,
given by
Rex .= ρvx
μ ,
(10.19)
where x denotes distance along the streamwise direction on the solid sur-
face, measured from the leading edge. The Reynolds number represents a
non-dimensional ratio of linear momentum of a ﬂuid element to its viscous
force per unit mass in a steady ﬂow. If the element is moving very rapidly, its
linear momentum is quite large, and consequently it experiences a small ac-
celeration due to viscosity. Thus, a larger Reynolds number indicates smaller
viscous eﬀects. However, if the Reynolds number is increased beyond a certain
value for a given object, the nature of the viscous ﬂow undergoes a change
from laminar to turbulent. There exists a critical Reynolds number, Recr for
each surface, such that Rex < Recr denotes the extent of laminar ﬂow on the
surface, while Rex ≥Recr represents the turbulent ﬂow region. The point on
the surface where Rex = Recr is called the transition point. As pointed out
above, transition is a poorly understood phenomenon, hence Recr is diﬃcult
to predict for a given surface and can only be estimated experimentally. The
skin friction in a boundary layer depends greatly upon its laminar or turbu-
lent nature. Let us deﬁne a nondimensional skin friction coeﬃcient, Cf, in a
unidirectional ﬂow as follows:
Cf .= τxy
1
2ρv2 .
(10.20)

246
10 Elements of Aerodynamics
By the boundary-layer approximation, the skin friction coeﬃcient on a ﬂat
plate in an incompressible ﬂow at zero angle of attack is given according to
Blasius [21] as
Cf = 0.664
√Rex
.
(10.21)
In a ﬂat plate of chord length c fully immersed in incompressible turbulent
ﬂow at zero angle of attack, the skin friction coeﬃcient is given by
Cf = 0.074
Re
1
5c
,
(10.22)
where Rec is the Reynolds number based on c. Clearly, the skin friction is
larger for a turbulent ﬂow, compared with the laminar ﬂow of the same length.
However, the turbulent boundary layer is much more resistant to the adverse
pressure gradient that causes ﬂow separation. The skin friction of most sur-
faces can be estimated by stretching out the external area exposed to the ﬂow
(called the wetted area) into an equivalent ﬂat plate and then applying either
Eq. (10.21) or Eq. (10.21) (or a combination thereof in case the ﬂow is partly
turbulent).
The Reynolds number is an important ﬂow parameter that must be
matched for a wind-tunnel test model and a full-scale vehicle, in order to
faithfully reproduce the viscous ﬂow on the latter. Most airplanes encounter
turbulent ﬂow in their normal cruising ﬂight, and thus experimental investiga-
tion on a scaled model with the Reynolds number matching becomes crucial
for accurate drag prediction. However, apart from the Reynolds number, there
is another governing parameter in a viscous, compressible ﬂow.
Invariably, friction is accompanied by heat transfer, which takes the form of
conduction across the boundary layer in the y-direction, and convection along
the ﬂow direction, x. The heat transfer is usually modeled as conduction across
the boundary layer, which changes the temperature at the boundary-layer
edge. This temperature increase then aﬀects the ﬂow in the inviscid region
through convection. At the very high speeds encountered during atmospheric
entry, the third mode of heat transfer, namely radiation, also becomes impor-
tant. The conductive rate of heat transfer per unit area in the boundary layer
is given by
˙Qy = −kT
∂T
∂y ,
(10.23)
where kT is the coeﬃcient of thermal conductivity. For a gas ﬂow, kT is
obtained either from the kinetic theory of gases, which involves statistical
thermodynamics, or from empirical formulas, such as Eq. (9.20) for perfect
air [19]. The nondimensional parameter governing conductive heat transfer
caused by viscous dissipation is the Prandtl number, Pr, deﬁned by
Pr = μcp
kT
,
(10.24)

10.3 Fluid Dynamics
247
where cp is the constant-pressure speciﬁc-heat coeﬃcient. The Prandtl number
represents the ratio of heat generation by viscous eﬀects and heat transfer by
conduction. Pr is a function of temperature and pressure and has diﬀerent
values for diﬀerent gases. For air up to a temperature of 600 K, Pr ≈0.71.
At higher temperatures, air is dissociated and consequently Pr becomes a
function of temperature and pressure.
10.3.4 Continuum Compressible Flow
When modeling compressible gas ﬂows, we must account for the variation of
temperature caused by velocity gradients in the ﬂow ﬁeld. Such considerations
are inconsequential in a constant-density (incompressible) ﬂow and are given
the name gas dynamics. Gas dynamics essentially involves energy conversion
through thermodynamic principles. Our treatment of gas dynamics begins
with the assumption of perfect gas for the atmospheric gas mixture, which
follows the ideal equation of state,
p = ρRT ,
(10.25)
where R is the speciﬁc gas constant (Chapter 9). A perfect gas has negligi-
ble intermolecular cohesion, as well as a frozen chemical composition. The
operation of most ﬂight vehicles (with the exception of atmospheric entry ve-
hicles) does not occur at speeds where perfect gas assumption does not hold.
In addition to the equation of state, a perfect gas obeys the following rela-
tionships between R, the constant-pressure and constant-volume speciﬁc-heat
coeﬃcients, cp, cv, and their constant ratio, γ .= cp/cv:
cv .=
R
γ −1,
cp .=
γR
γ −1 .
(10.26)
The speciﬁc-heat ratio, γ, depends upon the degrees of freedom in a gas mole-
cule. For a monoatomic gas, γ = 1.67, while a diatomic gas has γ = 1.41. We
can regard air to be a perfect diatomic gas with R = 287 J/kg.K.
The speed of sound, a, deﬁned as the speed at which inﬁnitesimal pressure
disturbances travel in an otherwise undisturbed medium, is an important
compressible ﬂow variable. A governing parameter in an compressible ﬂow
is the Mach number, M, deﬁned as the ratio of the ﬂow speed and the speed
of sound, M .= v/a, prevailing at a given point. A ﬂow with M < 1 is said to
be subsonic, while that with M > 1 is called supersonic ﬂow. The boundary
between subsonic and supersonic ﬂow, M ≈1, is termed transonic ﬂow regime.
The nature of the compressible ﬂow is markedly diﬀerent in each of these
regimes.
In order to study compressible ﬂow, we assume that a perfect gas element
is free from all irreversible thermodynamic eﬀects and does not experience

248
10 Elements of Aerodynamics
appreciable heat transfer. Such a reversible, adiabatic ﬂow conserves entropy
and is called isentropic ﬂow. The isentropic assumption is usually valid in the
outer, inviscid region of a subsonic ﬂow. In transonic and supersonic ﬂow, the
nonisentropic phenomenon of shock waves is present in the inviscid region.
However, since shock waves are treated as discontinuities, we can still apply
isentropic ﬂow approximation in regions bounded by shock waves. For an
isentropic ﬂow of a perfect gas, we have
p
ργ = constant.
(10.27)
Furthermore, in an isentropic ﬂow of a perfect gas, the local speed of sound
can be expressed as follows:
a =
'
γ p
ρ =

γRT.
(10.28)
Since energy is conserved in an adiabatic ﬂow, we can write the energy equa-
tion as follows:
cpT + v2
2 = cpT0 = constant.
(10.29)
From the energy equation, it follows that the stagnation temperature, T0, de-
ﬁned as the temperature of the ﬂow brought to rest adiabatically, is constant.
This is a powerful relation between the speed of an adiabatic ﬂow and its
temperature and can be applied even across a shock wave, because the latter
is an adiabatic (though irreversible, and thus nonisentropic) process.
The energy equation in terms of the Mach number is the following:
T0
T = 1 + γ −1
2
M 2 .
(10.30)
By substituting the equation of state and Eq. (10.27) into the energy equation,
we can write the following additional relationships between the static and
stagnation quantities in an isentropic ﬂow:
ρ0
ρ =

1 + γ −1
2
M 2

1
γ−1
,
p0
p =

1 + γ −1
2
M 2

γ
γ−1
.
(10.31)
We need the above-derived isentropic ﬂow relations for the calculation of ﬂow
properties, given the local Mach number. However, the validity of these ex-
pressions is limited to an inviscid, adiabatic ﬂow, without shock waves. An
incompressible ﬂow is practically regarded as that in which density changes
caused by the ﬂow do not exceed 5% in magnitude. Using the isentropic re-
lation for density, we can easily show that for | ρ0 −ρ |≤0.05ρ0, we need
M ≤0.3, which is the ﬂow regime of low-speed aircraft, and also the take-oﬀ

10.3 Fluid Dynamics
249
and landing speed for all aircraft. When we apply the isentropic relations in
a supersonic ﬂow, we ﬁnd that the usual intuitive variation of ﬂow speed, v,
with cross-section area, A, is no longer valid and is, in fact, reversed from
that experienced at subsonic speeds. Thus, a supersonic ﬂow with an increas-
ing area is accelerated, while that with a decreasing A is slowed down. This
ﬂow behavior is caused by the extreme density variations with the speed in
a supersonic ﬂow. In order to understand the phenomenon of compressibility,
let us consider an object moving at M ≤0.3. The speed of motion of the
object through the atmosphere is negligible compared to the speed of sound.
Consequently, the small pressure disturbance created by the object’s motion
spreads out uniformly in all directions, almost at inﬁnite speed compared with
that of the object. This situation is depicted by uniformly expanding spher-
ical pressure waves emanating from an almost stationary object, such as the
waves caused by dropping a stone in a pool of water. Next, consider the same
object moving at a larger speed, but still smaller than the speed of sound
(0.3 < M < 1). Now the waves propagating along the direction of motion are
compressed into a smaller space in front of the object, while those at the back
are stretched out due to the object’s motion [Fig. 10.5(a)]. However, the ﬂuid
elements upstream of the object get an advance warning of the approaching
object, which they try to accommodate by stepping aside, thereby causing
a curvature in the streamlines—a hallmark of subsonic ﬂow. As the Mach
number of the object increases, the waves in the front are squeezed tighter
together, until they all coalesce into a single wave at M = 1, as shown in
Fig. 10.5(b). This limiting wave normal to the relative transonic ﬂow, and
comprising a ﬁnite pressure disturbance, which is obtained by adding a large
number of small pressure disturbances, is called a normal shock wave. Since
the shock wave and the object are moving at the same speed, no advance no-
tice of the approaching object is available to an upstream ﬂuid element, which
experiences the entire pressure disturbance caused by the object only when
the latter has reached the given point. Now consider the given object moving
at a supersonic speed (M > 1). In this case, the object has overtaken its own
pressure disturbance. Hence, all pressure disturbances created by the object
lag behind and are conﬁned to a conical region behind the object, called the
shock cone, or an oblique shock wave. Since the ﬂuid elements upstream and
abreast of the object are undisturbed, the supersonic ﬂow is characterized by
parallel streamlines [Fig. 10.5(c)]. The angle, β, made by the cone with the
relative ﬂow direction is a function of the Mach number as well as of the shape
of the object. For the limiting case of an extremely slender object, which can
create only an inﬁnitesimal pressure disturbance, the shock wave is called a
Mach wave, and β ≈sin−1(1/M). The shock wave is a nonisentropic process.
Behind the object moving at supersonic speed, we have the isentropic phe-
nomenon of ﬂow expansion, which is modeled by expansion fan, as discussed
ahead.
Shock waves are extremely thin regions (spanning only a few mean free-
path lengths) in a continuum ﬂow. Hence, they are modeled as discontinuous

250
10 Elements of Aerodynamics
    (a) 
M<1
    (b) 
M=1
Normal Shock-Wave 
M>1
    (c) 
Fig. 10.5. Compressible ﬂow and shock waves.
jumps in the pressure, density, and temperature. A normal shock wave is mod-
eled as a one-dimensional, perfect gas ﬂow, with a sudden, irreversible jump
from the quantities upstream (indicated by subscript 1) to those downstream
(indicated by subscript 2), according to the following expressions:
M 2
2 = 2 + (γ −1)M 2
1
2γM 2
1 −γ + 1 ,
p2
p1
= 1 +
2γ
γ + 1(M 2
1 −1),
(10.32)
ρ2
ρ1
= u1
u2
=
(γ + 1)M 2
1
2 + (γ −1)M 2
1
.
The temperature jump across the normal shock can be calculated using the
above relations and the perfect gas equation of state. It is clear from above

10.3 Fluid Dynamics
251
that for a normal shock, the downstream Mach number is always subsonic
(M2 < 1), and there is a sudden increase in the static pressure, density, and
temperature. The limiting case of M1 = 1 yields a normal Mach wave of zero
strength (i.e., no pressure change). It is clear that the pressure jump across
a normal shock is responsible for additional drag on the object, called wave
drag.
An oblique shock is to be regarded merely as a normal shock slanted to
the relative ﬂow at an angle β and is caused by a sudden inward turn of
the ﬂow by a deﬂection angle, θ [Fig. 10.6(a)]. Hence, the ﬂow component
normal to the oblique shock is treated in exactly the same manner as the
ﬂow through a normal shock, while the tangential ﬂow component passes
through unchanged. Therefore, the oblique shock relations can be obtained
by replacing M1 in Eq. (10.32) by the normal Mach number, M1 sin β, and
M2 by the normal component, M2 sin(β −θ). The resulting equations display
the fact that the strength of the oblique shock increases with the increase of
either M1, or β. However, M1 and β are not independent quantities, but they
are related through the ﬂow deﬂection angle, θ. It can be shown [22] that the
relationship among θ, β, and M1 for an oblique shock is the following:
tan θ = 2 cot β
M 2
1 sin2 β −1
2 + M 2
1(γ + cos 2β) .
(10.33)
This implicit relationship is plotted in oblique shock charts in gas dynamics
textbooks and gives the following important insight about the ﬂow:
(a) For each value of M1, there exists a maximum possible ﬂow deﬂection, θm,
for which the shock wave remains straight and attached to the solid surface.
For a ﬂow with θ > θm, we have a detached, curved shock wave. A detached
shock is much stronger than an attached one, because a portion of it is normal
to the ﬂow and thus causes a much greater drag. Hence, the solid surface must
be properly designed to avoid detached shock in its design range of Mach
numbers.
(b) For θ < θm, two values for the shock angle, β, can satisfy Eq. (10.33).
The larger of these is called the strong shock solution, while the other is the
weak shock solution. Practically in all cases of straight, attached shock the
weak solution prevails, which is beneﬁcial for wave drag reduction. In a weak
shock, the downstream Mach number, M2, is always supersonic. For θ = 0,
such as a ﬂat plate at zero angle of attack, the weak shock solution yields
β = sin−1(1/M1), which is the case for a Mach wave, as noted above. However,
in such a case the strong shock solution, with β = 90◦, usually prevails, as
depicted in Fig. 10.5(b) for M1 = 1.
(c) In the limit of very high incident Mach number, M1, the shock wave angle
becomes small and approaches the limit, β →(γ + 1)θ/2. In such a case,
the pressure, density, and temperature jump quantities become essentially
invariant with Mach number. This is known as the continuum hypersonic limit,
or the Newtonian ﬂow limit. Usually, for M1 ≥5, we can assume hypersonic

252
10 Elements of Aerodynamics
Fig. 10.6. An oblique shock-wave and an expansion fan.
ﬂow and approximate the nondimensional jump quantities by appropriate
constants. Such a behavior of ﬂow quantities at high Mach numbers is referred
to as the Mach number independence principle. When the supersonic ﬂow
deviates around an outward corner, it undergoes an expansion due to the
increase in the ﬂow area, as noted above. Such an expansion is modeled by
an isentropic process through a set of Mach waves appearing at the expansion
corner, called an expansion fan, and is shown in Fig. 10.6(b). Each wave in
the expansion fan is a Mach wave, inclined at angle μ = sin−1(1/M) to the
local ﬂow, and causes an inﬁnitesimal turning of the ﬂow. The net eﬀect of the
expansion fan is a ﬂow turned by the deﬂection angle, θ, with an attendant
increase of Mach number from M1 to M2. The relationship among M1, M2,
and θ in an expansion fan is given by
θ = ν(M2) −ν(M1) ,
(10.34)
where ν(M) is the following Prandtl–Meyer function [22]:

10.3 Fluid Dynamics
253
ν(M) =
'γ + 1
γ −1 tan−1
'γ −1
γ + 1(M 2 −1) −tan−1 
M 2 −1.
(10.35)
Expansion charts and tables can be prepared based upon Eq. (10.34), in order
to calculate the Mach number at the end of expansion.
Supersonic ﬂow over most surfaces of aeronautical interest can be modeled
using a combination of oblique shocks and expansion fans. However, diﬃculties
arise in such a shock expansion model when there is an interaction between
two shock waves, a shock wave and an expansion fan, or a reﬂection of a
shock wave by another solid surface. In such a case, diﬀerent computational
techniques can be applied, such as the method of characteristics [22], or ﬁnite-
diﬀerence solution of governing Euler’s, continuity, and energy equations [23].
Finally, we note that viscous eﬀects in a compressible ﬂow are taken into
account in a manner similar to that of incompressible ﬂow. The boundary-layer
approximation is still valid, although the viscous eﬀects are now functions of
the Mach number, as well as the Reynolds number. The same holds for a fully
viscous model using the compressible Navier–Stokes equations, which, how-
ever, become even more intractable with regard to numerical solution. Certain
well-known similarity rules exist between incompressible and compressible,
subsonic ﬂows on lifting surfaces, such as that by Prandtl–Glauert [22], which
yield a quick and simple evaluation of pressure and shear stress. In supersonic
and hypersonic ﬂows, viscous eﬀects are more complex and involve interac-
tion between shock waves and the boundary layer. Such interactions are most
amenable to either experimental studies or computational ﬂuid dynamic mod-
eling through the Navier–Stokes equations [22], [23].
10.3.5 Rareﬁed Flow
Rareﬁed ﬂow can be described as the one in which the mean free path of
molecules becomes comparable to the characteristic ﬂow length. When de-
scribing the aerodynamics of complete vehicles, we encounter rareﬁed ﬂow at
high altitudes for which Kn > 0.01, based on a vehicle’s characteristic length.
However, sometimes rareﬁed ﬂow is encountered when we study the ﬂow on a
smaller scale than that of the complete vehicle, such as the ﬂow near the lead-
ing edge of an airfoil, even at low altitudes. The general rareﬁed ﬂow is diﬃcult
to model due to the complex nature of the governing Boltzmann equation [25].
However, simpler empirical models are usually employed such as those based
on a subdivision of rareﬁed ﬂow into free molecular ﬂow and transition ﬂow
regimes. For very large Knudsen numbers, such as Kn > 10, the gas particles
are so widely separated that there is virtually no interaction among them.
Hence, the incident gas stream is undisturbed by the object, and a simple sta-
tistical model for momentum and energy transfer can be constructed taking
into account only the collision of a single gas particle with the solid surfaces.
Such a ﬂow is called the free molecular (or collisionless ﬂow). There are two
extremes of the particle–surface interaction models, ﬁrst devised by Maxwell

254
10 Elements of Aerodynamics
in 1879: (a) specular reﬂection in which the particles are assumed to be per-
fectly elastic spheres, with no change in their tangential momentum due to
surface interaction, and (b) diﬀuse reﬂection that accounts for surface rough-
ness, and thus transfer of both tangential and normal momentum. Interaction
of most engineering surfaces with air approximately follows the diﬀuse model.
Maxwell treated the reﬂected particles in the diﬀuse model according to a
random statistical behavior, such that all directions were equally probable,
and the speed of a reﬂected particle was independent of that of the incident
particles, but obeys a Maxwellian distribution that depends only on the tem-
perature of the reﬂected particle. A ﬂat elemental surface inclined at angle
θ to a free molecular ﬂow with the Maxwellian velocity distribution has the
following pressure, shear stress, and rate of heat transfer per unit area [24]:
Δp = q
#
sin θ
s√π + 1
2s2
'
Tw
T
$
e−s2 sin2 θ
+
#
1
2s2 + sin2 θ +
√π sin θ
2s
'
Tw
T
$
[1 + erf(s sin θ)]

,
(10.36)
Δτ = q cos θ
√π
#
e−s2 sin2 θ
s
√π sin θ[1 + erf(s sin θ)]
$
,
(10.37)
˙Q =
ρ
4β3√π

s2 +
γ
γ −1 −
γ + 1
2(γ −1)
Tw
T

× {e−s2 sin2 θ + s√π sin θ[1 + erf(s sin θ)]}−1
2e−s2 sin2 θ

,(10.38)
where ρ, T are density and temperature of incident stream, Tw is the tem-
perature of the solid surface, s is the molecular speed ratio of incident stream
given by
s .= vβ =
v
√
2RT
,
(10.39)
and erf(x) is the error function given by
erf(x) =
2
√π
 x
0
e−y2dy .
(10.40)
With the use of Eqs. (10.36) and (10.37), we can estimate the aerodynamic
force and moment on a general object by employing a ﬂat-panel approximation
wherein a number of ﬂat panels are used, each at a speciﬁc inclination to the
ﬂow, such that the force and moment caused by pressure and shear stress on
the elemental panels are summed vectorially.
In the rareﬁed transition regime, 0.01 < Kn < 10, a bridging relation is
used to interpolate between the quantities in the continuum and free-molecular
limits. Such interpolations often take the form of exponential variation of the
given quantity with the Knudsen number, which are written as linear functions

10.4 Force and Moment Coeﬃcients
255
of the logarithm of Kn [24]. We shall employ one such bridging relation in the
simulation of a ballistic entry vehicle in Chapter 12.
10.4 Force and Moment Coeﬃcients
We have seen that the aerodynamic force and moment are created due to the
combined eﬀects of pressure and shear stress distributions over the vehicle’s
surfaces. The magnitudes of the aerodynamic force and moment depend upon
the size of the vehicle, its dynamic pressure, angle of attack, sideslip angle,
aerodynamic bank angle, as well as the nondimensional governing ﬂow para-
meters of a particular ﬂow regime, such as the Knudsen, Reynolds, Prandtl,
and Mach numbers. Usually, it is beneﬁcial to remove the dependence on size
while studying aerodynamic eﬀects. This leads to the introduction of nondi-
mensional force and moment coeﬃcients. The force coeﬃcients are rendered
nondimensional by dividing them by the product of the free-stream5 dynamic
pressure, q∞, and a reference area, S, which is often the wing-platform area
of a lifting vehicle, and the base area of a nonlifting (ballistic) vehicle. For
nondimensional moment coeﬃcients, the product q∞Slc is employed, where
lc is a characteristic length. In case of pitching moment, lc = ¯c, a mean chord
of the wing, while lc = b, the wing span for the rolling and yawing moments.
From Eqs. (10.1)–(10.3), the lift, drag, and pitching moment coeﬃcients of a
generic ﬂight vehicle (airplane) in steady ﬂow are expressed as follows:
CL .=
L
q∞S = CL0 + CLαα (α ≤αs) ,
(10.41)
CD .=
D
q∞S = CD0 + KC2
L (α ≤αs) ,
(10.42)
and
Cm .=
M
q∞S¯c = Cm0 + Cmαα (α ≤αs) ,
(10.43)
where αs is the stalling angle of attack at which the maximum lift coeﬃcient
is CLmax. The nondimensional lift curve slope, CLα
.= Lα/q∞S, lift coeﬃ-
cient at zero angle of attack, CL0, the longitudinal static margin (Chapter
13), Cmα
.= Mα/q∞S¯c, pitching moment coeﬃcient at zero angle of attack,
Cm0, the parasite drag coeﬃcient, CD0, and the lift-dependent drag factor,
K, are the parameters deﬁning the aerodynamic characteristics of a given
object. These parameters depend upon Kn, Re, and M. The dependence of
these nondimensional aerodynamic coeﬃcients on the governing nondimen-
sional ﬂow parameters is termed similarity rule, which is crucial in experimen-
tal investigation of vehicles through their appropriately scaled, wind-tunnel
models. The aerodynamic behavior of an entire vehicle can be described by
5 Free stream refers to the undisturbed air ﬂow far upstream of the vehicle. The
ﬂow quantities in the free stream are denoted by the subscript ∞.

256
10 Elements of Aerodynamics
                           (a) Airfoil geometry.
-
LE
r
Chord line, c
/t c
LE
-
t
c
b/2
                          (b) Wing planform geometry.
Fig. 10.7. A typical wing geometry.
Eqs. (10.41)–(10.43), with the appropriate values of the nondimensional con-
stants. It must be noted that the fuselage and nacelles do not contribute much
to the lift; hence their drag is primarily the parasite drag, CD0. Consequently,
the lifting parameters, namely CLα, CL0, K, receive their main contribution
from the lifting surfaces (wings, tails, and canards). However, the pitching
moment coeﬃcient is caused by both lifting surfaces and nonlifting bodies.
The values of the aerodynamic coeﬃcients are either established experimen-
tally or estimated through numerical and analytical methods. We shall brieﬂy
consider the modeling of aerodynamic behavior in each ﬂow regime.
At low speeds of operation of small aircraft, M < 0.3, we can regard
the coeﬃcients CLα, CL0, Cmα, Cm0, CD0, K as constants. The incompressible
regime has received attention since the earliest days of ﬂying, beginning with
the Wright brothers themselves who built a small wind tunnel to investi-
gate various wing airfoil shapes. A vast compendium of analytical literature
has become available over the last century, which has been reinforced by

10.4 Force and Moment Coeﬃcients
257
experimental and computational research, leading to simple empirical rela-
tions. For an inﬁnite span, straight wing in incompressible ﬂow, ideal ﬂow
theory predicts CLα ≈2π. However, a real airfoil has a lift curve slope about
ten-percent smaller than the ideal value. The exact value of two-dimensional
lift-curve slope depends greatly upon the airfoil geometry, which is governed
by thickness ratio, t/c, shape of the camber line,6 and leading edge radius,
rLE [Fig. 10.7(a)]. There is a reduction in the value of CLα due to the ﬁnite
wing span, b, due to the presence of wing-tip vortices.7 A nondimensional geo-
metric parameter, A .= b2/S, called the aspect ratio, governs the strength of
the wing-tip vortices. For a ﬁnite-span wing, the lift-curve slope is a complex
function of the wing planform geometry (apart from the airfoil shape), and
depends upon the aspect ratio and the sweep angles, ΛLE, Λt/c [Fig. 10.7(b)].
The value of CLα increases by increasing A, reducing the wing sweep, and
increasing the airfoil thickness, t/c. The value of CL0 at low speeds is de-
termined by a combination of the airfoil camber and the lift curve slope. A
symmetrical airfoil has CL0 = Cm0 = 0, whereas a positively cambered airfoil
has CL0 > 0, but Cm0 < 0. While symmetrical airfoils are used in tail (or
canard) surfaces, the wings usually employ positively cambered airfoils for a
better lift.
The lift-dependent drag (also called induced drag) is inversely proportional
to the aspect ratio. Hence, the following expression is used for the incompress-
ible value of K:
K =
1
πAe ,
(10.44)
where e is a measure of the lifting eﬃciency of the wing, and is called Oswald’s
span eﬃciency factor. For most wings, 0.6 ≤e ≤0.85, at low speeds. Often,
a wing twist is employed to reduce the lift-induced drag as well as to improve
the ﬂow behavior near the stall, which results in an airfoil close to the wing-tip
having a smaller geometric angle of attack, compared to that near the wing
root (washout).
The value of Cm0 primarily depends upon the wing airfoil camber and
the tail (or canard) lift at zero angle of attack. A positively cambered wing
by itself has a negative Cm0. However, in order to ﬂy at positive angles of
6 Camber refers to the diﬀerence in the positive and negative curvatures, respec-
tively, of the upper and lower surfaces of an airfoil. A positively cambered airfoil
has a greater positive curvature of the upper surface. Camber line is a line joining
the leading and trailing edges such that it lies equidistant from the upper and
lower surfaces. A symmetrical airfoil has identical chord and camber lines.
7 Wing-tip vortices refer to the rotary ﬂow due the leakage around wing tips of
high-pressure air from the lower surface to the lower-pressure region of the upper
surface. Due to this leakage of low, there is a loss of lift, because of reduction in
the pressure diﬀerence between the lower and upper surfaces, when compared to
a wing of inﬁnite span. There is also an increase in the lift-dependent drag due
to wing tip vortices, because the wing must operate at a higher angle of attack
to overcome the loss in lift.

258
10 Elements of Aerodynamics
attack, a stable aircraft must have Cm0 > 0, which is acheived through the
presence of a horizontal tail (or canard). The pitch stability of an airplane is
determined by the sign of Cmα. For static stability, Cmα < 0, otherwise the
angle of attack would diverge after even a small disturbance. The value of
Cmα is primarily inﬂuenced by the wing and the horizontal stabilizer (tail or
canard).
All aerodynamic coeﬃcients display a signiﬁcant variation with the ﬂight
Mach number. In the range 0.3 < M < 0.8, most lifting surfaces obey the
Prandtl–Glauert similarity rule [22], which relates the incompressible and
compressible pressure coeﬃcients, Cp .= (p −p∞)/q∞, on an airfoil by
Cp = Cp|M=0
√
1 −M 2
(0.3 < M < 0.8).
(10.45)
Consequently, the lift-related coeﬃcients (CLα, CL0, K) display an increase
in magnitude with the subsonic Mach number. In the supersonic regime, a
similar relationship holds between the pressure coeﬃcient at M =
√
2 and
that at a diﬀerent supersonic Mach number according to Ackeret’s similarity
rule, given by
Cp = Cp|M=
√
2
√
M 2 −1
(M > 1.2).
(10.46)
Thus, the coeﬃcients CLα, CL0 undergo a decrease from their value at M =
1.2. In the transonic range, 0.8 < M < 1.2, often a smooth curve is ﬁtted
between the subsonic and supersonic values, such that the maximum value
of the lift-related coeﬃcient occurs around M ≈1. The Prandtl–Glauert
and Ackeret rules are applicable to wings with moderate aspect ratio and
sweep. For a highly swept wing of low aspect ratio (such as those found on
some ﬁghter aircraft), the lifting characteristics become nonlinear, wherein
Eqs. (10.41)–(10.43) are invalid. Such a wing has ﬂow that separates right at
the leading edge, but re-attaches at a downstream location, thereby creating a
leading-edge vortex. The leading-edge vortex appreciably increases the lift of
a low aspect-ratio wing, and thus helps improve the ﬂight performance. How-
ever, such vortex dominated ﬂows are rather diﬃcult to predict theoretically,
and essentially require either an experimental investigation, or the solution of
Euler’s or Navier–Stokes equations. The leading-edge suction analogy analogy
by Polhamus [26], however, gives a quick estimate of the nonlinear, vortex
lift at a particular angle of attack. Leading-edge suction (LES) is a thrust
force acting on the leading edge of a round-nosed airfoil due to the streamline
curvature around the leading edge. While leading-edge suction occurs only for
well-rounded leading edges at small to moderate sweep, its loss in a sharp,
highly swept leading edge results in the vortex lift equal in magnitude to the
loss of LES.
The lift-dependent drag factor is especially diﬃcult to model at super-
sonic speeds, due to its dependence upon leading-edge suction. Generally,
K increases signiﬁcantly for M > 1.2 due to a drastic reduction in the Os-
wald’s eﬃciency, e. The value of e, however, is diﬃcult to predict at supersonic

10.4 Force and Moment Coeﬃcients
259
speeds. The alternative semi-empirical method based upon LES allows for the
variation of K with Mach number and lift coeﬃcient, CL. A 100% LES would
completely prevent ﬂow separation and yield the maximum Oswald’s eﬃciency
(e = 1). However, a thin airfoil with a sharp leading edge would have almost
no LES, for which the ﬂow separates right at the leading edge, forming a
leading-edge vortex, and thus the largest possible value of lift-induced drag,
for which K = 1/CLα. Since the actual amount of LES would lie somewhere
between these two extremes, we can write
K = sK100 + (1 −s)K0 ,
(10.47)
where s is the actual fraction of LES, K100 = 1/(πA) and K0 = 1/CLα.
Leading-edge suction, s, primarily depends upon the Mach number normal to
the leading edge. A sonic or supersonic leading edge cannot have LES, and
thus has s = 0. For a subsonic leading edge, s depends upon the leading-edge
radius, rLE, as well as the lift coeﬃcient of the wing. This dependence of
s upon CL is diﬃcult to predict and often requires either a computational
(Euler’s or Navier–Stokes) model, or an experimental study.
The variation of the parasite drag coeﬃcient, CD0, with Mach number
is mainly caused by the presence of shock waves. As a result, there is little
variation in CD0 below a certain subsonic critical Mach number, Mcr, which
is deﬁned as the ﬂight Mach number for which local sonic ﬂow ﬁrst appears
on the given object. For an airfoil, this happens on the upper surface, close
to the point of maximum thickness. As the Mach number is increased beyond
Mcr, the locally sonic ﬂow quickly expands into a supersonic bubble, thereby
causing a standing normal shock, which causes an increase in ﬂow separation
as well as a wave drag. The ﬂight Mach number for which the shock wave
ﬁrst appears on the object, leading to an almost exponential rise in CD0
with Mach number, is called the drag-divergence Mach number, MDD. The
value of CD0 continues rising with the Mach number in the region MDD <
M ≤1, reaching a maximum at M ≈1. Thereafter, there is a decline in
CD0 with the Mach number, due to the movement of the normal shock to
the leading edge and its transformation into an attached oblique shock. Such
variation of CD0 with the Mach number is depicted in Chapter 12 for a ﬁghter
aircraft and an atmospheric entry vehicle. Due to the transonic drag rise, many
subsonic vehicles are unable to cross into the supersonic regime due to thrust
limitations. This was the reason why many people considered sonic ﬂight
impossible before 1947. However, the peak CD0 can be signiﬁcantly reduced
by a combination of slender bodies and thin lifting surfaces, such that the
total cross-section area changes smoothly with the downseam station. This
concept of reducing wave drag by a smooth volume distribution is known as
area ruling, and is employed in designing supersonic vehicles that must not
only cross the transonic region but also cruise at M > 1. Examples of such
vehicles include the Anglo-French Concorde, the American SR-71, and many
supersonic cruise missiles (such as the Indo-Russian Brahmos-3).

260
10 Elements of Aerodynamics
Subsonic and supersonic aerodynamic characteristic of commonly em-
ployed shapes have been thoroughly investigated and carefully documented in
texts and reports [27], [28]. Consequently, it has become possible to concep-
tually design vehicles based solely on semi-empirical relations and graphical
data. However, an accurate prediction of aerodynamic force and moment still
require experimental investigation and computational analysis based upon the
governing Euler or Navier–Stokes equations.
When crossing into the hypersonic regime, we ﬁnd a lack of empirical data,
due to the complex aerothermochemistry prevailing at those speeds. The hy-
personic region is often considered to begin at M ≈5 and is dominated by
phenomena absent at lower speeds. It is clear from the inviscid oblique shock
relations that the shock-wave angle, β, becomes small for a given value of
deﬂection angle, θ, and approaches β ≈1.2θ for undissociated air. Due to the
vicinity of the shock wave to the body surface, strong entropy gradients and
viscous interactions with the appreciably thickened boundary layer take place,
leading to complex ﬂow patterns and a rise in temperature and pressure. These
eﬀects, combined with the temperature rise across the strong shock wave, lead
to high-temperature eﬀects, which are responsible for exciting the vibrational
motion, and ultimately cause their dissociation and ionization. Due to these
endothermic phenomena, a further rise in the temperature is prevented, but
the ﬂow ﬁeld becomes enormously complicated, requiring multispecies con-
tinuity and energy equations for modeling the chemical reactions, as well as
nonperfect, real gas eﬀects in the momentum equations. Furthermore, the high
speed causes the chemical reactions to occur with diﬀerent rates in diﬀerent
directions, leading to a chemical nonequlibrium. At the large speeds of at-
mospheric entry vehicles (M > 15), the ﬂow of ionized gases (plasma) leads
to electric currents, and the associated electromagnetic considerations bring
in additional nonlinear, governing partial diﬀerential equations (Maxwell’s
equations), which must be solved in tandem with either the Navier–Stokes or
Boltzmann equation, depending upon the Knudsen number of the ﬂow. Conse-
quently, much of aerothermodynamic and plasmadynamic modeling required
in very high-speed ﬂows falls in the realm of physics rather than aerodynamics.
The hypersonic continuum regime in the range 5 ≤M ≤10 is often
amenable to the Newtonian approximation, which predicts the pressure coef-
ﬁcient on an elemental windward surface inclined at an angle θ to the oncoming
ﬂow
Cp = 2 sin2 θ .
(10.48)
The leeward side of the same surface does not experience any molecular col-
lisions, and thus has Cp = 0. This ﬂow model based upon particle impacts,
wherein the entire normal momentum of the impinging gas is absorbed by the
solid surface, was proposed by Newton to (incorrectly) model the low-speed
ﬂow, but is quite accurate in the continuum hypersonic regime. In the limiting
case of M →∞, the oblique shock relations with γ = 1 yield the same ex-
pression as the Newtonian approximation. Also, it is interesting to note that

10.5 Summary
261
the Newtonian approximation can also be obtained from the free-molecular
pressure distribution in the limit M →∞, with zero tangential momentum
transfer (Δτ = 0). While the Newtonian model predicts a zero shear stress,
we can employ a suitable boundary-layer approximation based upon semi-
empirical relations [29], in order to estimate the shear stress on the surface,
in combination with the Newtonian approximation. When integrated over a
given surface, the pressure and shear-stress distribution yield aerodynamic
force and moment coeﬃcients with a reasonable accuracy. A modiﬁcation of
the Newtonian approximation is used for an object with a blunt nose, due to
the essentially normal shock prevailing near the stagnation point, θ = 0. The
normal shock relations [Eq. (10.32] result in
Cp = Cp0 sin2 θ ,
(10.49)
where8
Cp0
.= p02 −p1
1
2γp1M 2
1
=
2
γM 2
1
p02
p1
−1

.
(10.50)
The modiﬁed Newtonian pressure distribution compares well with experimen-
tal measurements, especially near the stagnation region. The success of both
Newtonian and modiﬁed Newtonian approximations in modeling hypersonic
ﬂow is entirely due to the extreme vicinity of the shock wave to the body,
which results in a momentum exchange approximately normal to the surface.
10.5 Summary
Aerodynamic force and moment vectors arise out of pressure and shear-stress
distribution on the external surface of a ﬂight vehicle. While all shapes im-
mersed in a ﬂow experience drag, generating large amounts of lift and mo-
ment components, ﬂattened lifting surfaces—such as the wings and tails of an
airplane and ﬁns of a rocket—are necessary. Flight eﬃciency through the at-
mosphere is improved by maximizing the lift-to-drag ratio. The most eﬃcient
design for an atmospheric vehicle is a streamlined shape with a small external
surface area, which allows a ﬂuid particle to follow the surface to the largest
possible extent, but without causing excessive skin friction. The arrangement
of lifting and control surfaces should be such that moment equilibrium (trim)
can be achieved in all possible ﬂight conditions for which the vehicle has been
designed. A review of basic ﬂuid mechanics and thermodynamics is necessary
for understanding the aerodynamic force, moment, and thermal gradient. The
conservation principles of mass, momentum, and energy conservation form the
8 Note that in a compressible ﬂow, the dynamic pressure can be expressed as
q = 1
2ρv2 = 1
2γpM 2 .
.

262
10 Elements of Aerodynamics
basis of ﬂuid mechanics and thermodynamics. According to the nature of the
ﬂow a vehicle experiences, certain simplifying assumptions are employed in
the governing diﬀerential equations and their boundary conditions, resulting
in speciﬁc ﬂow regimes. Each ﬂow regime is classiﬁed according to the range
of important nondimensional parameters, such as the Knudsen, Mach, and
Reynolds numbers. Useful modeling assumptions in continuum ﬂow include
the concepts of boundary layer and shock wave, whereas in the rareﬁed regime
the free-molecular ﬂow and bridging relations for transition ﬂow are valuable
approximations. Certain nondimensional aerodynamic force and moment co-
eﬃcients (useful in ﬂight dynamic calculations) are derived from the vehicle’s
geometry and the governing ﬂow parameters in each regime, using either em-
pirical and computational models or suitably scaled experimental results.
Exercises
10.1. Estimate the indicated and true airspeed of an airplane ﬂying straight
and level at a standard altitude of 3 km if the pitot-static system on the
airplane registers the stagnation and static pressures of p0 = 7.2 × 104 N/m2
and p = 6.95 × 104 N/m2, respectively. What is the Mach number of the
airplane?
10.2. The velocity proﬁle in the normal direction, y, in an incompressible
boundary layer at a streamwise location on an airplane wing is given by
v
ve
= 1 −
%
1 −y
δ
&2
,
where ve is the ﬂow speed at the edge of the boundary layer, and δ is the
boundary-layer thickness. Derive an expression for the skin friction coeﬃcient
on the wing surface at the given location.
10.3. Suppose the airplane in Exercise 10.2 is ﬂying at a standard altitude of
5 km, and the speciﬁed streamwise location is at x = 25 cm from the leading
edge, where ve = 85 m/s and δ = 0.3 cm. Calculate the surface shear stress
and the local Reynolds number at the given point, assuming the coeﬃcient
of viscosity at the concerned altitude is μ = 1.628 × 10−5 N.s. How does the
shear stress compare with the equivalent ﬂat-plate models for laminar and
turbulent boundary layers?
10.4. Write
the
Navier–Stokes
equations
for
an
incompressible,
two-
dimensional ﬂow past a circular cylinder of radius r0. Express the equations in
the polar coordinates, (r, θ), where r is the radial distance of the ﬂuid element
from the center, and θ is the angle measured from the relative ﬂow direction.
10.5. Answer either true or false for each of the following:
(a) An adiabatic ﬂow is also an isentropic ﬂow.

10.5 Summary
263
(b) An isentropic ﬂow is also an adiabatic ﬂow.
(c) Energy in a nonisentropic ﬂow can be conserved.
(d) Stagnation temperature in a nonisentropic process can be a constant.
10.6. Repeat Exercise 10.1 if the stagnation and static pressures measured
by the pitot-static system are p0 = 7.6 × 104 N/m2 and p = 6.8 × 104 N/m2,
respectively, assuming
(a) subsonic ﬂow
(b) supersonic ﬂow.
10.7. Using the program atmosphere.m (Chapter 9), estimate the thickness
of a normal shock wave at standard sea level and 100 km altitude, assuming
that the thickness is equal to ﬁve molecular mean free-path lengths.
10.8. Calculate the static pressure, temperature, density, and Mach number
behind an oblique shock wave on a wedge of semi-vertex angle 15◦ﬂying at
a Mach number 2.3 at a standard altitude of 12 km. What is the minimum
Mach number of the wedge at which the shock wave will remain attached to
it?
10.9. Using the shock-expansion method, derive the expressions for the lift
and wave drag coeﬃcients on a ﬂat plate ﬂying at a supersonic Mach number
and a small angle of attack.
10.10. For a sharp, right circular cone of semivertex angle θ, derive an expres-
sion for the total drag coeﬃcient at zero angle of attack in the free-molecular
ﬂow regime. Compare the derived expression with that in the continuum hy-
personic regime using the Newtonian approximation.
10.11. For a sphere, derive an expression for the total drag coeﬃcient in
the free-molecular ﬂow regime. Compare the result with that obtained in the
continuum hypersonic regime using the modiﬁed Newtonian approximation.

11
Airbreathing Propulsion
11.1 Aims and Objectives
•
To introduce elements of airbreathing propulsion from the viewpoint of
ﬂight dynamic modeling of the thrust vector and the rate of fuel
consumption.
•
To discuss the characteristics and operational limitations of airbreathing
engines—such as piston propeller, turbine, and ramjet—in a
comprehensive and self-contained manner.
•
To present a numerical model for the thrust and speciﬁc fuel
consumption of a low-bypass turbofan engine to be utilized in subsequent
simulation examples of airplane trajectories.
Airbreathing propulsion is the name given to the means employed for generat-
ing thrust, using the atmosphere as a medium as well as the source of oxygen
for combustion. Most atmospheric vehicles employ airbreathing propulsion
due to its higher eﬃciency compared with rocket propulsion (Chapter 8). Air-
breathing engines can be subdivided into two broad categories: those that
employ propellers for thrust generation, and those creating thrust through
jet exhaust of gases. Both propeller and jet engines “push” the atmosphere
“backwards” in order to generate thrust force in the forward (ﬂight) direc-
tion by Newton’s third law of motion (Chapter 4). We begin the analysis of
airbreathing engines by modeling them as ideal momentum exchange devices.
11.2 Ideal Momentum Theory
We can understand the thrust generation by both propeller and jet engines
by simply modeling them as mechanisms of pure momentum (and energy)
transfer, without any losses caused by friction, ﬂow rotation, and heat transfer.
Such an ideal model assumes air to be a perfect gas ﬂowing at a speed small

266
11 Airbreathing Propulsion
v0
Actuator
Disk
p1
p0
pf
pf
vs
vf
Fig. 11.1. Flow through an ideal airbreathing engine modeled as actuator disk.
enough for the ﬂow to be treated as being incompressible (ρ = constant), and
the engine is regarded as an actuator disk of small thickness that causes a
sudden increase in the static pressure of the relative air ﬂow. This situation
is depicted in Fig. 11.1, where an actuator disk of cross-sectional area A is
placed in a free stream of speed, v∞, and static pressure, p∞. As the ﬂow
approaches the disk, it accelerates to a speed v0 near the disk. Immediately
upstream of the disk, the static pressure, p0, is obtained using the Bernoulli
equation (Chapter 10) as follows:
p0 = p∞+ 1
2ρ(v2
∞−v2
0) .
(11.1)
Since v0 > v∞, it follows that p0 < p∞. The disk imparts linear momentum
to the ﬂow such that its static pressure immediately downstream of the disk
increases to p1 > p0. Far downstream of the disk, the ﬂow must expand
to the prevailing atmospheric pressure, p∞, leading to a slipstream speed, vs.
Hence, the static pressure p1 is related to the atmospheric pressure by another
application of the Bernoulli equation downstream of the disk:
p1 = p∞+ 1
2ρ(v2
s −v2
0) .
(11.2)
The thrust the disk experiences is simply
fT = A(p1 −p0) = ρA
2 (v2
s −v2
∞) = ρA(vs + v∞)
2
(vs −v∞) .
(11.3)
However, Newton’s second law of motion also relates the thrust to the net
rate of change of linear momentum of the ﬂuid passing through the disk, or
fT = ˙m(vs −v∞) ,
(11.4)
where ˙m is the mass ﬂow rate of the ﬂuid, given by
˙m = ρAv0 .
(11.5)

11.2 Ideal Momentum Theory
267
Upon substitution of Eq. (11.5) into Eq. (11.4), and comparison with Eq. (11.3),
we have the important relationship among the ﬂow speed at the three stations:
v0 = (vs + v∞)
2
.
(11.6)
This ideal relationship gives an important insight into the mechanism of thrust
generation, namely the thrust is directly proportional to the mass ﬂow rate,
which is constant for a given value of v0. Furthermore, the thrust is directly
proportional to the net speed increment imparted by the engine to the relative
air ﬂow.
It is necessary to deﬁne a propulsive eﬃciency, ηp, as the ratio of the
thrust-power output,1 fT v∞, to the total power delivered by the engine. It
is important to note that the total power of the engine in the ideal case is
the sum of the thrust power and the power lost as the kinetic energy of the
slipstream, 1/2 ˙m(vs −v∞)2. Therefore, the ideal propulsive eﬃciency is given
by
ηp .=
fT v∞
fTv∞+ 1
2 ˙m(vs −v∞)2
=
2v∞
v∞+ vs
.
(11.7)
The propulsive eﬃciency is a measure of the success in converting the total
mechanical power delivered by the engine into thrust. Clearly, ηp decreases
with an increasing value of the slipstream speed, vs. Hence, from Eqs. (11.5)
and (11.7), we see that the propulsive eﬃciency is maximized by increasing the
mass ﬂow rate for a given thrust, which minimizes v0 (thus, vs). A propeller
engine with a large propeller (thus, a large ﬂow area) delivers its thrust at
the maximum possible propulsive eﬃciency, due to its smallest slipstream
velocity. However, large propellers have serious limitations in terms of ﬂight
speed, v∞, as discussed ahead. Furthermore, the propulsive eﬃciency is an
incomplete criterion. All engines develop their mechanical power through a
combustion of fuel. Hence, the overall eﬃciency, ηo, deﬁned as the ratio of
thrust power output and the energy spent in burning fuel per unit time, is a
much better criterion for an engine’s eﬃciency and is expressed as follows:
ηo .= fT v∞
˙mfhf
,
(11.8)
where ˙mf is the mass ﬂow rate of fuel through the engine, and hf is the heat
developed by a unit mass of fuel, called the heating value (or caloriﬁc value)
of the fuel. The overall eﬃciency is expressed as the product of ηp and the
thermal eﬃciency, ηt, deﬁned as the ratio of mechanical power developed and
the heating rate by fuel combustion,
1 Thrust power is the rate of work done by the thrust as the vehicle moves forward
through the atmosphere at a constant speed, v∞.

268
11 Airbreathing Propulsion
ηt .= fT v∞+ 1
2 ˙m(vs −v∞)2
˙mfhf
= Pesh
˙mfhf
,
(11.9)
where Pesh .= fTv∞+ 1
2 ˙m(vs −v∞)2 is the total mechanical power developed,
called the equivalent shaft power, and is the sum of thrust power and the
power lost in accelerating the ﬂow. In the actual case, there is an additional
term in the expression for Pesh representing the power lost as the rotational
kinetic energy of the slipstream. When the ﬂight Mach number is greater than
about 0.3, the ﬂow compressibility, a smaller pressure diﬀerence is developed
across the propeller due to the loss of energy in compressing the ﬂow, leading
to a decrease of thrust from the incompressible value with a given shaft power
and, thus, a decline in the propulsive eﬃciency.
The net mass ﬂow through the engine is a sum of fuel and air mass ﬂows,
˙m = ˙mf + ˙ma. Therefore, the ideal thermal eﬃciency can be approximated
as follows, in terms of the fuel–air ratio, f .= ˙mf/ ˙ma ≪1:
ηt ≈v∞(vs −v∞)
fhf
.
(11.10)
The thermal eﬃciency can be increased for a given fuel by decreasing the
fuel mass per unit equivalent shaft power, called the power-speciﬁc fuel con-
sumption. However, with the available fuels, thermal eﬃciency is restricted to
ηt ≤0.3 in the earth’s atmosphere. Hence, for improving the overall eﬃciency,
we are left with maximizing the propulsive eﬃciency.
11.3 Propeller Engines
A propeller is a mechanical device for converting the mechanical power devel-
oped by the engine into thrust, with the use of a set of rotating blades that
produce lift normal to the plane of rotation. By placing the propeller’s plane
normal to the ﬂight path, the net lift of all the blades translates into a thrust
for the vehicle. The propeller is closest to the actuator disk idealization due to
its relatively thin work volume. However, the slipstream rotation a propeller
causes is usually large and often represents an appreciable portion of the lost
mechanical power.
In the early days of aviation (1903–1950), an internal combustion (or pis-
ton) engine was the only practical means available of powering a propeller. A
piston engine works on a closed thermodynamic cycle, wherein the reciprocat-
ing motion of the piston is timed through a camshaft to open and close the in-
take and exhaust valves as well as to compress fuel–air mixture prior to a rapid
combustion. The reciprocating motion of the piston powered by combustion
is converted into a rotary motion of the propeller (crank) shaft by connecting
rods. Such an engine often consists of multiple cylinders, and the piston of
each cylinder is synchronized with those of the other cylinders through sequen-
tial ignition of the fuel–air mixture inside each cylinder, thereby producing

11.3 Propeller Engines
269
a smooth power delivery to the propeller. The piston engines are classiﬁed
into two distinct categories according to the type of thermodynamic cycle:
(a) petrol (or gasoline) engines based upon the Otto cycle, and (b) diesel en-
gines based upon the Diesel cycle. The petrol engines are further classiﬁed
into two-stroke or four-stroke engines, depending upon the number of dis-
tinct strokes, or piston movements, occurring inside the cylinder during one
complete revolution of the shaft. A four-stroke engine has distinctly deﬁned
intake, compression, power (combustion), and exhaust strokes, whereas in a
two-stroke engine the intake and compression are carried out simultaneously
in a stroke, and combustion and exhaust are combined into the other stroke.
Other classiﬁcations arise out of the number of cylinders per engine and their
arrangement (radial, in-line, V, or rotary).
The mechanical power delivered to the propeller shaft, Psh, is directly pro-
portional to the number of revolutions per second, n. For a given value of n,
Psh is directly proportional to the mean-eﬀective pressure, pm, acting on the
piston’s face during the power stroke. The mean eﬀective pressure, in turn,
is roughly proportional to the intake manifold pressure, which is the static
pressure at the intakes of all the cylinders connected together by a common
vent, called an intake manifold. An engine with the intake manifold directly
open to the atmosphere is said to be normally aspirated. Clearly, the intake
manifold pressure of a normally aspirated engine is approximately equal to the
atmospheric pressure prevailing at a given altitude. Consequently, a normally
aspirated engine sees its power drop oﬀalmost in direct proportion with the
atmospheric pressure, p∞. Airplanes powered by such engines have their max-
imum operating altitude (ceiling) limited to about 5 km. In order to improve
the power at any given altitude, a turbo-charger is often employed, which is a
small turbine-driven pump for increasing the air pressure in the intake man-
ifold. With the use of a turbo-charger, the piston-powered airplane’s perfor-
mance is signiﬁcantly boosted, leading to ceilings of about 11 km. The ﬁghters,
bombers, and airliners of the 1940—1950 period were usually equipped with
large turbo-charged (or supercharged) piston engines. The variation of Psh
with altitude is usually linear for a normally aspirated engine, and piecewise
linear for the same engine with a turbo-charger, as shown in Fig. 11.2. As
pointed out earlier, Psh is also proportional to the thermal eﬃciency, ηt, of
the engine. The nonisentropic process by which Psh is developed includes the
heat lost during combustion, as well as frictional losses due to the engine’s
moving parts. The size of a piston engine is measured in terms of the to-
tal volume displaced by the movement of the pistons in all the cylinders. As
the displacement volume in each cylinder increases, the net heat loss during
combustion also increases. This indicates that the thermal eﬃciency can be
improved by employing a larger number of smaller cylinders, for a given to-
tal power. However, as the number of cylinders in an engine increases,2 the
2 The giant Wright R-3350 “Cyclone” engine of the Lockheed Super-Constellation
airliner of the 1950s had as many as 18 cylinders per engine.

270
11 Airbreathing Propulsion
Fig. 11.2. Variation of shaft power of a piston engine with altitude.
frictional losses also increase, thereby providing an upper limit to the thermal
eﬃciency.
The thrust developed by a propeller is usually expressed in terms of the
propeller’s propulsive eﬃciency, ηp, as follows [Eq. (11.7)]:
fT = ηp
Psh
v∞
.
(11.11)
Since there is no change in the shaft power of the internal combustion engine
with ﬂight speed, the thrust the propeller delivers is inversely proportional
to v∞, provided the propulsive eﬃciency remains constant. The angle made
by the blade airfoil’s chord line with the plane of rotation is called the blade-
pitch angle, β. The propeller blades are twisted such that β is a function of
the radial location, r. This is necessary in order that the airfoils at all ra-
dial locations receive the airﬂow, which has a varying relative speed (thus,
angle of attack) from the root to the tip, at roughly the same angle of attack
[Fig. 11.3(a)]. Therefore, a twisted propeller blade can be regarded as a rotat-
ing wing, whose lift is approximately proportional to the angle of attack up
to the stall condition. The angle of attack at a given radial location can be
approximated by α ≈β −v∞/(nr), where n is the angular speed of the pro-
peller. A propeller with a ﬁxed twist distribution, β(r)—called a ﬁxed-pitch
propeller—has ηp varying with the ﬂight speed in a nonlinear fashion, such
that the maximum thrust is produced for a speciﬁc value of the ratio, v∞/n.
Consequently, the propulsive eﬃciency is usually plotted as a function of the
nondimensional advance ratio, J .= v∞/nd, as depicted in Fig. 11.3(b), where
d denotes the propeller diameter. The ﬁgure depicts a variable-pitch propeller,
in which β(r) can be varied in-ﬂight through mechanical adjustment, such that
maximum eﬃciency occurs at diﬀerent advance ratios. For airplanes having a

11.3 Propeller Engines
271
Fig. 11.3. Propeller pitch, advance ratio, and optimum propulsive eﬃciency.
signiﬁcantly large speed range, a closed-loop control system is often employed,
which maintains a constant angular speed, n, and automatically adjusts the
blades to their optimum pitch distribution depending upon the prevailing
ﬂight speed (thus, advance ratio). Such an automatic mechanism is called a
constant-speed propeller. Clearly, a constant-speed propeller always operates
close to its maximum eﬃciency, and thus ηp can be regarded as being con-
stant, irrespective of the ﬂight speed. The design and analysis of a propeller
blade for its propulsive eﬃciency require a modeling of the aerodynamics of
a typical blade element and are called blade-element theory. Typically, the
maximum propeller eﬃciency lies in the range 0.8–0.85. At very low speeds,
such as during take-oﬀ, the thrust a propeller develops is termed the static
propeller thrust and cannot be obtained from the eﬃciency vs. advance-ratio
charts due to the singularity in Eq. (11.11) at zero speed. Separate charts are
provided by the manufacturer for the variation of the static thrust with the
shaft power, usually in the nondimensional coeﬃcient form.

272
11 Airbreathing Propulsion
After 1950, a second means of power delivery to the propeller became
available in the form of a turboprop engine. A turboprop consists of an external
combustion engine called a turbine core, which is identical to a turbojet engine
discussed ahead. The turbine core provides the shaft power, Psh, to drive the
propeller and generates a small amount of jet thrust, fTj, though the exhaust
gases expanded in a nozzle. Consequently, the equivalent shaft power of a
turboprop engine is expressed as follows:
Pesh = Psh + fTjv∞
ηp
.
(11.12)
In a typical case, the jet thrust is about 10–15% of the total turboprop thrust.
The variation of Pesh with altitude for a turboprop is similar to that of a jet
engine’s thrust. Generally, Pesh can be assumed to be directly proportional
to the atmospheric density. This gives a turboprop a great advantage over a
normally aspirated piston engine of the same power rating, since the latter has
its power lapsing proportionally with the atmospheric pressure. A turboprop
is also much lighter compared to a similarly rated piston engine. Due to these
advantages, turboprops have replaced piston engines in the medium-speed
range (Mach 0.4–0.7).
A measure of the thermal eﬃciency of a propeller engine is its power-
speciﬁc fuel consumption (PSFC), given by
cP =
˙mf
Pesh
.
(11.13)
An engine with a smaller value of cP consumes less fuel for each horsepower of
Pesh developed and is thus more eﬃcient. Generally, turboprop engines achieve
much smaller PSFC than piston engines and are thus regarded as being more
fuel eﬃcient. When combined with their smaller size (and weight) per unit
power, this makes turboprop engines an attractive choice for powering low-
to medium-speed airplanes. A variation of the turboprop is the turboshaft
engine, typically used in rotorcraft, wherein no direct jet thrust is developed;
therefore, Pesh = Psh.
A propeller suﬀers from the eﬀects of compressibility at high ﬂight speeds,
which typically causes a resultant sonic ﬂow at the tips, even when the ﬂight
Mach number is less than 0.7. The sonic ﬂow at the tips plays havoc with
the propeller eﬃciency and also creates serious structural vibration problems,
often leading to outright structural failure of the blades. Consequently, the
operation of propeller airplanes is generally restricted to M < 0.7.3
3 The Russian Tu-95 bomber and its Tu-142 maritime reconnaissance version de-
signed in the 1950s are the fastest operational propeller airplanes, with a ﬂight
Mach number of 0.87 at 40,000 ft. altitude. This speed was achieved through
swept-back wings and a special propeller design, in which each engine drives two,
four-blade, counter-rotating propellers. The aircraft is powered by four legendary
Kuznetsov NK-12 turboprops (the largest ever built), each generating a maximum
sea level equivalent shaft power of about 15,000 HP.

11.4 Jet Engines
273
11.4 Jet Engines
At ﬂight speeds above Mach 0.7, jet engines are usually the only option for
powering airplanes. A jet engine is an external combustion engine, where the
inlet airﬂow is compressed, mixed with fuel and burnt, and the exhaust gases
are expanded in a nozzle to produce thrust in a manner similar to a rocket
engine. The jet engines are classiﬁed into two broad categories: (a) the ram-
jets and (b) turbine engines. A ramjet is operated at a ﬂight speed suﬃciently
high for direct compression of air in a diﬀuser. Consequently, it does not re-
quire a mechanical compressor and the associated moving parts. A turbine
engine, however, is capable of operation even at zero speed, because it con-
tains a mechanical compressor to carry out the necessary compression before
combustion. The compressor is rotated using a turbine, which absorbs a part
of the kinetic energy of the exhaust and converts it into rotary motion like
a pinwheel. The turbine engines are further classiﬁed into turbojet, turbofan,
turboprop, and turboshaft, all of which share the common turbine core consist-
ing of a compressor, combustion chamber, and turbine, but have additional
features. We brieﬂy introduced the turboprop and turboshaft, and now we
will describe the remaining jet engine variants.
A typical jet engine departs from the ideal actuator disk assumption in
that the ﬂow undergoes an appreciable acceleration over the ﬁnite length of
the engine. Consequently, the thin disk approximation, Eq. (11.4), is replaced
by the following jet equation, which allows the exhaust static pressure, pe, to
be diﬀerent from the atmospheric pressure:
fT = ˙m(ve −v∞) + Ae(pe −p∞) ,
(11.14)
where ve and Ae refer to the relative ﬂow speed and area in the exit plane of
the nozzle. The jet engines usually have underexpanded nozzles (Chapter 8)
(pe > p∞), hence a small amount of thrust is added due to the exhaust
pressure diﬀerence (provided a variable geometry nozzle is employed to allow
the expansion to occur inside rather than outside the nozzle).
A jet engine’s overall eﬃciency is indicated by its thrust-speciﬁc fuel con-
sumption (TSFC), deﬁned by
cT = ˙mfg0
fT
,
(11.15)
where g0 = 9.8 m/s2 is the acceleration due to gravity at standard sea level.
The standard unit of TSFC is 1/hr. Clearly, a smaller value of TSFC represents
a more eﬃcient engine.
11.4.1 Ramjet Engines
A ramjet is the simplest of all engines in construction. It consists of a long,
hollow tube, with an intake and diﬀuser at one end and a nozzle at the other

274
11 Airbreathing Propulsion
pf
vf
Inlet Diffuser
Combustion
Chamber
f
m
pe
Nozzle
ve
Fig. 11.4. A supersonic ramjet engine.
(Fig. 11.4). In between lies the combustion chamber with a suitable appara-
tus for eﬃciently mixing and burning the fuel with the rapidly ﬂowing air at
nearly constant pressure. Some have likened the design of a ramjet combus-
tion chamber to an attempt to light a candle in the middle of a wind-storm.
However, the problem of combustion is less severe at subsonic speeds when
compared to that at supersonic speeds. Considering a subsonic ramjet ﬁrst,
we can express the isentropic diﬀusion process by the following pressure rise
within the inlet (Chapter 10):
p0
p∞
≈

1 + γ −1
2
M 2
∞

γ
γ−1
.
(11.16)
Here we assume that the rise in the pressure in the diﬀuser is large enough for
the ﬂow to be slowed down to an incompressible speed M ≈0 at the end of the
compression process. The ram compression is quite poor ( p0
p∞≤1.28) below
Mach 0.6, which indicates that a ramjet needs to be ﬂown at M > 0.6 just to
start its operation, which typically requires
p0
p∞> 1.3. Another disadvantage
of the ramjet in subsonic operation is the almost inverse proportionality of
the TSFC with Mach number at M < 1. The typical subsonic TSFC values of
a ramjet lie between 3.5–5, but rapidly decline to less than half at supersonic
ﬂight speeds. Hence, a ramjet is ideally suited for supersonic operation, with
the minimum TSFC occurring near M = 3.5.
In supersonic operation, we can no longer assume isentropic diﬀusion, but
a staged compression via a series of oblique shocks in a carefully designed su-
personic inlet. There are two options for the supersonic operation of a ramjet:
(a) subsonic combustion and (b) supersonic combustion. The subsonic com-
bustion requires a deceleration of the ﬂow across a ﬁnal normal shock wave
to subsonic speed. Since a shock wave is considered as an adiabatic process
(Chapter 10), we can express the stagnation temperature prior to combustion
as follows using the energy equation:
T0 = T∞

1 + γ −1
2
M 2
∞

.
(11.17)

11.4 Jet Engines
275
The energy equation indicates that for M = 5, the subsonic combustion ramjet
encounters a six-fold rise in the temperature through the diﬀuser, which can
be tolerated by the structure, since there are no moving parts. However, at
larger Mach numbers, say at M = 5.85, the temperature rise in the diﬀuser is
about eight-fold, which may cause structural failure in either the walls of the
combustion chamber or the nozzle. Furthermore, heat added to the fuel at such
high temperatures generally causes a decomposition of the hydrocarbon fuels,
thereby leading to an endothermic (rather than exothermic) reaction and a
negative thrust. For these reasons, subsonic combustion ramjets are limited in
operation to below Mach 5. Therefore, in a hypersonic application, the only
option available is a supersonic combustion ramjet (Scramjet) engine, which
does not require a diﬀusion of the inlet ﬂow to subsonic speeds, and thus avoids
the high temperature prior to combustion. A Scramjet engine requires an
eﬃcient mixing and burning of fuel with a supersonic airﬂow passing through
the combustion chamber. The design of a suitable combustion technology is,
therefore, the crux of Scramjet development and has been an area of active
research for the last two decades.4
The greatest utility of a ramjet is thought to be its use as a replacement
for rocket engines in atmospheric ﬂight, especially in hypersonic and single-
stage to orbit (SSTO) launch operations. However, its practical use may be
most eﬃcient in a hybrid turbo-ram-rocket engine, which sequentially switches
between turbine, ramjet, and rocket operations.
11.4.2 Turbojet and Turbofan Engines
A modern airplane requires eﬃcient and versatile operation in the high sub-
sonic to supersonic ﬂight regime, which is best fulﬁlled by turbojet and turbo-
fan engines. A revolution in the aeronautical technology, equal in magnitude
to the invention of the airplane by Wright Brothers, occurred in the 1930s
with the advent of the ﬁrst turbojet-powered airplanes. As a result, the pro-
peller engine was largely relegated to low-speed, general aviation aircraft and
replaced by the turbojet engines in the military and civilian transports, ﬁght-
ers, and bombers at the end of the 1950s. The turbojet (shown in Fig. 11.5)
is the primary jet engine consisting of a relatively lightweight and compact
turbine core comprising an inlet diﬀuser, a turbine-driven compressor, a com-
bustion chamber, and a nozzle (Fig. 11.5). Usually, the compressor and turbine
consist of several stator and rotor stages in order to prevent the losses due to
large ﬂow angles. The operation of a turbojet is based upon the ideal Brayton
cycle [31], which consists of an isentropic compression through the subsonic
4 NASA’s X-43A pilot-less, technology demonstrator experimental vehicle ﬂew to
M = 9.6 with a Scramjet engine in November 2004, which is currently the record
for the fastest operation of an airbreathing vehicle. It was launched from a Pega-
sus rocket booster at 33 km altitude, and then sustained its speed by Scramjet
operation for 10 seconds. The Pegasus rocket itself was launched from a B-52
bomber at an approximate altitude of 12 km.

276
11 Airbreathing Propulsion
Turbine
f
m
Inlet
vf
pf
ve
pe
Nozzle
Combustion Chamber
Compressor 
Fig. 11.5. A turbojet engine.
inlet and compressor, a constant pressure combustion, and an isentropic ex-
pansion through the turbine and nozzle. In supersonic operation, a supersonic
inlet is added, which comprises either a two-dimensional ramp or a movable
axisymmetric spike, in order to produce a series of oblique shock waves, cul-
minating in a weak normal shock, which achieves the ﬂow deceleration to
subsonic speeds. Often, turbojets employ an additional burning of the fuel
after the turbine, in an afterburner for boosting thrust during take-oﬀ, climb,
or acceleration through the transonic regime. Turbojet engines can achieve a
TSFC of 1–1.2/hr without afterburner, and 2–2.5/hr with afterburner. The al-
most doubling of TSFC in afterburner operation restricts its use for only brief
intervals. In order to improve the overall eﬃciency of a turbojet, some airﬂow
is bypassed outside the turbine core with the use of a fan, which helps in a
simultaneous reduction of both speed and temperature of the exhaust gases.
The resulting modiﬁcation is termed a turbofan engine and is schematically
depicted in Fig. 11.6. The ratio of the bypassed mass ﬂow rate to that passing
through the core is called the bypass ratio. Using a higher bypass ratio results
in a smaller TSFC. Therefore, the modern airliners, such as the Boeing-777
and Airbus-A340, utilize bypass ratios of 7–8, which reduces the TSFC to be-
low 0.45/hr, and directly translates into an economical, long-range operation.
However, a high-bypass ratio requires a large fan in front of the compressor,
which creates problems associated with size, weight, and drag. Hence, a large
bypass ratio is not feasible in ﬁghter-type aircraft, which need a compact
and lightweight powerplant. Consequently, the bypass ratios used in such air-
planes do not exceed 1.5. In modern airplanes, turbojets have been replaced
by turbofans, which, in turn, have evolved into lighter and more eﬃcient pow-
erplants through new materials and digital control for optimum fuel delivery.
However, the turbojet and turbofan are generally limited to operation below
Mach 3 due to the restriction arising out of turbine-inlet temperature. As the
ﬂight speed increases beyond M = 3, the temperature after the combustion
chamber may become suﬃciently high for causing structural failure in the

11.4 Jet Engines
277
f
m
vf
pf
ve
pe
Nozzle
Combustion Chamber
Compressor
Turbine
Spool
Gear
Box
Bypass Duct 
Fan
Fig. 11.6. A turbofan engine.
rapidly spinning turbine blades, which are under high thermal and centrifugal
stress. Well before reaching this limit, a turbofan is already operating with an
increased TSFC due to sonic ﬂow at fan tips. Hence, a turbofan is typically
restricted to ﬂight Mach numbers less than about 2.5.
Both the turbojet and turbofan display a negligible variation of thrust with
either ﬂight speed or Mach number in normal subsonic cruise conditions. This
is evident from the thrust equation, Eq. (11.14), which shows that an increase
of speed leads to an increase of ˙m, but a decrease of ve −v∞, which tends
to render the thrust invariant with speed. However, there is an appreciable
variation of the thrust with ﬂight speed in the low-speed (static) limit, and
with Mach number in supersonic operation (largely due to the supersonic
inlet). Since the underexpanded nozzle produces only a relatively small thrust,
an increase of altitude leads to the thrust declining in direct proportion with
the atmospheric density due to the reduction in the mass ﬂow rate, ˙m = ρAv.
The turboprop can be derived from the turbofan by replacing the fan with
a propeller and removing the outer wall of the bypass duct. Thus, the size
of the propeller determines the bypass ratio. Clearly, a turboshaft, which has
a negligible thrust due to jet exhaust, represents the limiting case of inﬁnite
bypass ratio.
While the ideal jet equation is useful in understanding how jet engines
work, the actual operation may signiﬁcantly depart from the ideal behavior
due to losses in the diﬀuser, compressor, and nozzle. Consequently, detailed
engine performance charts are necessary for accurately modeling a turbine
engine. Such charts are usually provided by the manufacturer, or can be esti-
mated by an actual cycle analysis [32].

278
11 Airbreathing Propulsion
0
2000
4000
6000
8000
10000
12000
14000
16000
0
0.5
1
1.5
2
2.5
Standard Altitude, h (m)
Thrust, fT (×105 N)
M=2.25
2.0
1.75
1.5
1.25
1.0
0.75
0.5
0
0.25
Fig. 11.7. Variation of maximum power thrust with altitude and Mach number for
a low-bypass, afterburning turbofan.
An additional loss in thrust and an increase in speciﬁc fuel consumption
occur when an engine is installed in an airframe. Such losses occur mainly
due to inlet and nozzle design for matching the pressures with those expected
in ﬂight and are termed installation losses. They can be roughly estimated
by semi-empirical expressions [33], but require detailed experimental tests for
an accurate evaluation. Many an airplane has observed unsatisfactory perfor-
mance due to unexpectedly high or poorly modeled installation losses.
Example 11.1. Consider a low-bypass turbofan engine with an afterburner [33].
The standard sea level static thrust of the engine with full power and after-
burner (called military power) is fT 0 = 133, 636.36 N, while the TSFC at the
same condition is cT = 1.64/hr. The variation of the maximum thrust with
altitude for speciﬁc Mach numbers is plotted in Fig. 11.7, while the equiva-
lent plot of TSFC variation at maximum power is given in Fig. 11.8. Write a
MATLAB program for calculating the thrust and TSFC at a speciﬁc pair of
altitude and a Mach number by interpolation of the given engine performance
data.
The necessary program is tabulated in Table 11.1 and uses data picked
from the performance charts, Figs. 11.7 and 11.8, at selected values of altitude
and Mach number.

11.5 Summary
279
0
2000
4000
6000
8000
10000
12000
14000
16000
1.6
1.7
1.8
1.9
2
2.1
2.2
2.3
2.4
2.5
Standard Altitude, h (m)
TSFC, cT (1/hr)
M=2.25
2.0
1.75
1.5
1.25
1.0
0
0.25
0.5
0.75
Fig. 11.8. Variation of maximum power TSFC with altitude and Mach number for
a low-bypass, afterburning turbofan.
11.5 Summary
Airbreathing engines—propeller and jet—generate thrust by the reaction of
exhaust gases against the atmosphere, and the ideal momentum theory gives
an important insight into the thrust creation mechanism. Detailed models,
however, are necessary to accurately represent the performance, eﬃciency,
and operational characteristics (variation of thrust and eﬃciency with speed
and altitude) of a speciﬁc engine. Propeller engines are most eﬃcient at low
subsonic speeds and up to moderate altitudes, while turbojet and ramjet
engines achieve their maximum eﬃciency at high-subsonic and supersonic
speeds, respectively, at altitudes near, or higher than, the tropopause. At
hypersonic speeds, a supersonic combustion ramjet (or Scramjet) is the only
practical airbreathing propulsion alternative. The eﬃciency of a turbine engine
is increased by having a higher bypass ratio. A realistic engine model must
include the installation losses and oﬀ-design performance, which are either
obtained from experimental data (manufacturer’s charts) or estimated by an
empirical, actual cycle analysis.

280
11 Airbreathing Propulsion
Table 11.1. M-ﬁle engine.m for Thrust and TSFC Data for a Low-Bypass, Turbofan
Engine.
function [T,cT]=engine(alt,mach)
%program for thrust and TSFC of a low-bypass, afterburning turbofan at
%maximum power setting
M=[0 0.25 0.5 0.75 1 1.25 1.5 1.75 2 2.25]; %Mach number
h=[0 10 20 30 36 40 50]*1000/3.28; %std. altitude (m)
Thrust=[30 21.5 15 10 8 6.5 4;
29 21 14.5 9.8 7.5 6 3.8;
32 22.5 16 10.5 8.5 7 4.5;
33 28 19 12.5 10 8 5;
35 29 23.5 16 12.5 10 6;
37 31 25.5 21 16 13 8.5;
42.5 35 28 22.5 19.5 15.5 9.2;
43.5 38 33 25 21.5 17.5 10.5;
46 39 34 28 24.5 19 11.5;
48 42 35 29 26 21.5 13]*1000*9.8/2.2; %thrust (N)
TSFC=[1.64 1.66 1.68 1.7 1.71 1.71 1.71;
1.74 1.76 1.77 1.78 1.79 1.79 1.79;
1.78 1.79 1.8 1.815 1.82 1.82 1.82;
1.86 1.8 1.81 1.82 1.825 1.825 1.825;
1.93 1.84 1.78 1.79 1.79 1.79 1.79;
2 1.9 1.825 1.76 1.75 1.75 1.75;
2.04 1.96 1.87 1.79 1.74 1.74 1.74;
2.16 2.05 1.92 1.84 1.79 1.79 1.79;
2.32 2.14 1.98 1.88 1.83 1.83 1.83;
2.44 2.26 2.1 1.97 1.88 1.88 1.88]; %(per hour)
[X,Y]=meshgrid(h,M);
T=interp2(X,Y,Thrust,alt,mach);
cT=interp2(X,Y,TSFC,alt,mach);
Exercises
11.1. Compare the maximum equivalent shaft power of a piston engine and a
turbine engine, both rated at the maximum sea level power of 2000 HP, when
operating at a standard altitude of 11 km.
11.2. The ideal momentum theory can be applied to a helicopter’s rotor blade
in order to estimate the net thrust in a vertical ﬂight. Assuming a steady,
vertical ascent of the helicopter with a rotor diameter d, derive an expression
for the ideal thrust. Also, derive the ideal thrust in a hover (stationary ﬂight),
assuming a ﬂow speed, v0, through the rotor, and a slipstream speed, vs.
What is the mass ﬂow rate through the rotor of a Bell 206B helicopter with
d = 10.16 m and mass 1450 kg, hovering at standard sea level?
11.3. Calculate the thrust of a turbojet engine with inlet and exit areas, 1.0
and 0.5 m2, respectively, with pressure and relative ﬂow speed at exit plane
of 500 m/s and 22800 N/m2, respectively, when ﬂying at 11 km standard
altitude at Mach 0.85.
11.4. Estimate the fuel mass ﬂow rate of the engine in Exercise 11.3 if the
TSFC at the given ﬂight condition is 0.7 per hour.

11.5 Summary
281
11.5. The engine in Exercise 11.3 is to be modiﬁed by adding a fan, such that
the TSFC at the given ﬂight condition is reduced to 0.5 per hour, without
changing the thrust, exit speed, and the fuel–air ratio of the turbine core.
Estimate the bypass ratio of the modiﬁed engine, assuming that the exit
speed of the bypass ﬂow is 270 m/s and its density is roughly the same as the
atmospheric density.

12
Atmospheric and Transatmospheric
Trajectories
12.1 Aims and Objectives
•
To derive the general equations of motion of translational ﬂight in the
planet-ﬁxed frame from ﬁrst principles in a systematic fashion. These
equations govern the ﬂight of all aerospace vehicles (airplanes, rockets,
spacecraft, and entry vehicles).
•
To present three-degree-of-freedom atmospheric ﬂight models, including
planetary form, rotation, aerodynamics, and propulsion.
•
To simulate the important atmospheric and transatmospheric
trajectories with detailed analytical insight into airplane ﬂight, rocket
ascent, and planetary entry.
12.2 Equations of Motion
Atmospheric ﬂight is dominated by the presence of atmospheric forces, which
can be divided into aerostatic and aerodynamic categories. While the aerosta-
tic force does not require a special frame of reference, the aerodynamic force,
with which we are primarily concerned, arises solely due to the motion of
the vehicle relative to the atmosphere, and thus requires a frame ﬁxed to the
atmosphere. Since a planet’s atmosphere rotates with it, we shall employ a
planet-ﬁxed reference frame for expressing the equations of atmospheric ﬂight.
Such a planet-centered, rotating frame (SXY Z), with axes represented by the
unit vectors, I, J, K, respectively, is shown in Fig. 12.1. We had employed a
similar frame in Chapter 5 for describing orbital ﬂight, using a set of spherical
coordinates, r, δ, λ, denoting the radius, latitude, and longitude, respectively.
Unlike Chapter 5, we will not use primed symbols here to denote the relative
quantities. The velocity relative to the rotating frame, v, can be expressed in
terms of the the spherical coordinates v, φ, A, representing the relative mag-
nitude, ﬂight-path angle, and velocity azimuth, respectively, measured in the

284
12 Atmospheric and Transatmospheric Trajectories
local horizon frame, (oxyz), which has axes ox (i), oy (j), and oz (k), along
local vertical (up), local east, and local north, respectively (Fig. 12.1):
v = v(sin φi + cos φ sin Aj + cos φ cos Ak).
(12.1)
The expression for the inertial velocity vI is given by
vI = v + ω × r = v + ωrK × i ,
(12.2)
where ω = ωK is the angular velocity of the planet, and r = ri. As seen
in Chapter 5, the coordinate transformation between the planet-centered and
local horizon frames is given by
⎧
⎨
⎩
i
j
k
⎫
⎬
⎭= CLH
⎧
⎨
⎩
I
J
K
⎫
⎬
⎭,
(12.3)
where
CLH = C2
−π
2

C2
%π
2 −δ
&
C3(λ)
(12.4)
=
⎛
⎝
cos δ cos λ
cos δ sin λ
sin δ
−sin λ
cos λ
0
−sin δ cos λ −sin δ sin λ cos δ
⎞
⎠.
Thus, K × i = cos δj, and we have
vI = v + ωr cos δj .
(12.5)
The time derivative of the inertial velocity is the inertial (total) acceleration,
aI, which is required to write the dynamic equations of translational motion
according to Newton’s second law. The inertial acceleration is thus calculated
in the local horizon frame as follows:
aI .= dvI
dt = ˙v + ω( ˙r cos δ −r ˙δ sin δ)j + ωr cos δ(ωK × j) ,
(12.6)
where the dot represents the time derivative, d
dt. Before simplifying this equa-
tion any further, we write the relative velocity as follows:
v = ˙ri + Ω × (ri) ,
(12.7)
where
Ω .= Ωxi + Ωyj + Ωzk
(12.8)
is the angular velocity of the local horizon frame (oxyz) relative to the planet
centered frame (SXYZ). Upon substitution of Eq. (12.8) into Eq. (12.7), we
have
v = ˙ri + rΩzj −rΩyk .
(12.9)

12.2 Equations of Motion
285
Fig. 12.1. Planet-ﬁxed and local horizon frames for atmospheric ﬂight.
A comparison of Eqs. (12.9) and (12.1) results in the following kinematic
relationships:
˙r = v sin φ,
(12.10)
Ωy = −v
r cos φ cos A,
(12.11)
Ωz = v
r cos φ sin A.
(12.12)
From the coordinate transformation of Eq. (12.4), it is clear that (Chapter 2)
Ω = ˙λK −˙δj = ˙λ sin δi −˙δj + ˙λ cos δk ,
(12.13)
which, upon comparison with Eqs. (12.11) and (12.12), yields
˙δ = v
r cos φ cos A,
(12.14)
˙λ = v cos φ sin A
r cos δ
.
(12.15)
Equations (12.10), (12.14), and (12.15) are the kinematic equations of motion
relative to a rotating planet. Once the relative velocity vector, (v, φ, A), is
determined from the solution of the dynamic equations (derived ahead), the
position vector, (r, δ, λ), is calculated from the kinematic equations, thereby
completing the solution for the trajectory. It is to be noted that the same kine-
matic equations can be employed in orbital mechanics. Hence, the kinematic

286
12 Atmospheric and Transatmospheric Trajectories
Fig. 12.2. Orientation of the wind axes relative to the local horizon frame.
equations of motion bridge the gap between the trajectory models for at-
mospheric and space ﬂight. It now remains to write the dynamic equations of
translational motion. As seen in Chapter 10, the aerodynamic forces are gen-
erally resolved in a right-handed, coordinate frame (Sxvyvzv), which has axes
Sxv (iv), Syv (jv), and Szv (kv), along the instantaneous, relative velocity
vector, v, and two mutually perpendicular directions normal to v, respec-
tively. This frame can be conveniently used to write the vehicle’s equations of
motion by ﬁxing its origin at the planet’s center, while orienting its axes along
and perpendicular to v. Since the frame (Sxvyvzv) has axes in the directions
opposite and normal to that of the relative wind velocity, −v, it is called the
wind axes frame. Since atmospheric ﬂight vehicles commonly have a plane of
symmetry, it is convenient to choose the axis Syv (jv), normal to the plane
of symmetry. The orientation of the wind axes,(Sxvyvzv), relative to the lo-
cal horizon frame (oxyz), is depicted in Fig. 12.2. Hence, the two frames are
related by
⎧
⎨
⎩
iv
jv
kv
⎫
⎬
⎭= CW
⎧
⎨
⎩
i
j
k
⎫
⎬
⎭,
(12.16)
where
CW = C1
−π
2

C3
%π
2 −φ
&
C1
%π
2 −A
&
= C2
%
φ −π
2
&
C1(−A)
=
⎛
⎝
sin φ
cos φ sin A cos φ cos A
0
cos A
−sin A
−cosφ sin φ sin A sin φ cos A
⎞
⎠.
(12.17)

12.2 Equations of Motion
287
Fig. 12.3. External force resolved in the wind axes.
The dynamic equations of translational motion in the vector form are ob-
tained from Newton’s second law expressed as
f = maI = mdvI
dt ,
(12.18)
where f denotes the net external force, and m stands for the total mass of the
vehicle. Since f consists of the aerodynamic force vector, (−Div+fY jv−Lkv)
(Chapter 10), thrust, fT (Chapter 11), and gravity force, −mgci + mgδk,
(Chapter 3),1 resolved in the wind axes (as shown in Fig. 12.3), we have
f = (fT cos ϵ cosμ −D −mgc sin φ + mgδ cos φ cos A)iv
+(fT sin μ + fY −mgδ sin A)jv
+(−fT sin ϵ cosμ −L + mgc cos φ + mgδ sin φ cos A)kv . (12.19)
Now, since the force vector is conveniently resolved along the wind axes, we
must transform the inertial acceleration of the vehicle’s center of mass, aI
[Eq. (12.6)] in the wind axes frame in order to write the dynamic equations
of motion, Eq. (12.18), in a scalar form. We begin by resolving the individual
terms on the right-hand side of Eq. (12.6) in the local horizon frame as follows:
˙v = ¨ri + ˙r(Ωzj −Ωyk) + r( ˙Ωzj −˙Ωyk)
+ ˙r(Ω + ω) × i + rΩz(Ω + ω) × j
−rΩy(Ω + ω) × k ,
(12.20)
1 Recall that in Chapter 3 we denoted acceleration due to gravity by g = grir+gφiφ,
expressed here as g = −gci+gδk, where gc = −gr, gδ = −gφ, i = ir, and k = −iφ.

288
12 Atmospheric and Transatmospheric Trajectories
where Ω + ω is the total angular velocity of the local horizon frame, obtained
from Eq. (12.13) to be
Ω + ω = ( ˙λ + ω) sin δi −˙δj + ( ˙λ + ω) cos δk .
(12.21)
Thus, we have
(Ω + ω) × i = ˙δk + ( ˙λ + ω) cos δj,
(Ω + ω) × j = ( ˙λ + ω) sin δk −( ˙λ + ω) cosδi,
(12.22)
(Ω + ω) × k = −˙δi −( ˙λ + ω) sin δj.
Substitution of Eqs. (12.22) and (12.13) into Eq. (12.20) results in
˙v = ¨ri + ˙r( ˙λ cos δj + ˙δk) + r[(¨λ cos δ −˙λ ˙δ sin δ)j + ¨δk]
+ ˙r[( ˙λ + ω) cos δj + ˙δk] + r ˙λ( ˙λ + ω) cos δ(sin δk −cos δi) (12.23)
−r ˙δ[ ˙δi + ( ˙λ + ω) sin δj] .
The last term on the right-hand side of Eq. (12.6) is expressed in the local
horizon frame as follows:
ωr cos δ(ωK × j) = ωr( ˙λ + ω) cos δ(sin δk −cos δi).
(12.24)
Collecting all the terms from Eqs. (12.23) and (12.24), and substituting them
into Eq. (12.6), we have
aI = [¨r −r ˙δ2 −r( ˙λ + ω)2 cos2 δ]i
+[r¨λ cos δ + 2 ˙r( ˙λ + ω) cos δ −2r ˙δ( ˙λ + ω) sin δ]j
(12.25)
+[r¨δ + 2 ˙r ˙δ + r( ˙λ + ω)2 sin δ cos δ]k .
The components of the inertial acceleration in the local horizon frame—given
by Eq. (12.25)—are denoted in short hand by ax, ay, az. These are more useful
when expressed in terms of the relative velocity components by substituting
the kinematic equations, Eqs. (12.10), (12.14), and (12.15), into Eq. (12.25),
yielding:
ax = ˙v sin φ + v ˙φ cos φ −v2
r cos2 φ −2ωv cos φ sin A cos δ −rω2 cos2 δ,
ay = ˙v cos φ sin A −v( ˙φ sin φ sin A −˙A cos φ cos A)
+2ωv(sin φ cos δ −cos φ cos A sin δ)
+v2
r cos φ sin A(sin φ −cos φ cos A tan δ),
(12.26)
az = ˙v cos φ cos A −v ˙φ sin φ cos A −v ˙A cos φ sin A + ω2r sin δ cos δ
+2ωv cos φ sin A sin δ + v2
r cos φ(sin φ cos A + cos φ sin2 A tan δ).

12.2 Equations of Motion
289
Finally, we make the coordinate transformation from the local horizon frame
to the wind axes with the use of Eq. (12.16) as follows:
⎧
⎨
⎩
axv
ayv
azv
⎫
⎬
⎭= CW
⎧
⎨
⎩
ax
ay
az
⎫
⎬
⎭,
(12.27)
where aI = axviv + ayvjv + azvkv, which leads to
axv = ˙v + ω2r cos δ(cos φ cos A sin δ −sin φ cos δ),
ayv = v cos φ ˙A −v2
r cos2 φ sin A tan δ −ω2r sin A sin δ cos δ
+2ωv(sin φ cos A cos δ −cos φ sin δ),
(12.28)
azv = −v ˙φ + v2
r cos φ + 2ωv sin A cos δ
+ω2r cos δ(sinφ cos A sin δ + cos φ cos δ) .
Upon substituting the acceleration components from Eq. (12.28), and the
force components from Eq. (12.19) (both resolved in the wind axes) into Eq.
(12.18), we can write the dynamic equations of motion as follows:
m˙v = fT cos ϵ cosμ −D −mgc sin φ + mgδ cos φ cos A
−mω2r cos δ(cos φ cos A sin δ −sin φ cos δ),
mv cos φ ˙A = mv2
r cos2 φ sin A tan δ + fT sin μ + fY −mgδ sin A
+mω2r sin A sin δ cos δ
−2mωv(sin φ cos A cos δ −cos φ sin δ),
(12.29)
mv ˙φ = mv2
r cos φ + fT sin ϵ cosμ + L −mgc cos φ −mgδ sin φ cos A
+mω2r cos δ(sinφ cos A sin δ + cos φ cos δ)
+2mωv sin A cos δ .
Here, the left-hand side of the ﬁrst equation denotes the acceleration along
the instantaneous ﬂight path, whereas that of the second and third equations
represents the centripetal acceleration caused by the curvature of the ﬂight
path in the local horizontal and local vertical directions, respectively. The cen-
tripetal and Coriolis acceleration terms (Chapter 4) due to planetary rotation
appear on the right-hand side of these equations of motion, along with the
respective components of the external force.
The complete set of governing equations for translation within the at-
mosphere consists of the kinematic equations [Eqs. (12.10), (12.14), (12.15)],
and the dynamic equations [Eq. (12.29)]. All atmospheric trajectories must
satisfy these equations. Their solution vector, r(t), λ(t), δ(t), v(t), φ(t), A(t),
yields the position and velocity as functions of time. However, a ﬂight dy-
namic model is incomplete without gravity, atmospheric, aerodynamic, and

290
12 Atmospheric and Transatmospheric Trajectories
propulsive models. While it is common to employ constant acceleration due
to gravity (ﬂat-planet approximation) or, at best, Newton’s law of gravitation
(spherical planet model), for atmospheric ﬂight we shall take into account the
radial and latitudinal gravity variations (nonspherical planet model) (Chap-
ter 3). Our atmospheric model will also be as general as possible, such as the
21-layer, U.S. Standard Atmosphere of 1976 for earth (Chapter 9). The aero-
dynamic model considers the variation of the aerodynamic force with position
(altitude) and velocity. Such functional forms of nondimensional aerodynamic
coeﬃcients are employed as dictated by the ﬂow regime (Chapter 10). Finally,
the propulsion model must account for the variation of thrust with altitude
and velocity, and the fuel consumption, which, in turn, determines the instan-
taneous vehicle mass. The additional set of nonlinear, ordinary diﬀerential
equations resulting from these models is combined with the kinematic and
dynamic equations derived previously.
Being nonlinear, coupled, ordinary diﬀerential equations, their integration
in time, with given initial condition, is generally not possible in a closed form,
but requires an iterative, numerical solution procedure, such as the Runge–
Kutta methods presented in Appendix A. We shall now consider the speciﬁc
atmospheric trajectories obtained by integrating the kinematic and dynamic
equations of motion with appropriate models for aerodynamics and propul-
sion.
12.3 Airplane Flight Paths
Airplane ﬂight is the most common example of atmospheric ﬂight and consists,
by and large, of horizontal (level), straight ﬂight at a constant speed. Such a
ﬂight is known as the cruise. It is evident from above that a steady (˙v = 0),
horizontal ﬂight (φ = 0) requires that the terms on the right-hand side of the
ﬁrst two equations of Eq. (12.29) add up to zero. This is possible if the thrust
is large enough to overcome the drag (which is the largest opposing term in
the ﬁrst equation) and acts along the velocity vector, while the lift balances
the weight (the largest opposing term in the second equation). The problem
of steady, horizontal ﬂight through the air was ﬁrst solved by the Wright
brothers in 19032 by separately generating the aerodynamic lift by the wings,
and the thrust from the propellers powered by an engine. This separation of
lift and thrust was the crucial step missing from the failed attempts of earlier
aeronauts, who adopted various complex mechanisms for the simultaneous
creation of the two force components (such as by ﬂapping wings). However,
it is not suﬃcient to merely be able to ﬂy horizontally. One also must be able
2 The Wright Flyer of 1903 was the ﬁrst successful airplane. It had a bi-plane wing
and canard conﬁguration of lifting surfaces, with two pusher, counter-rotating
propellers driven by a 12.5 BHP piston engine (also designed and constructed by
the Wright brothers). Due to its conﬁguration and center of gravity, the airplane
was longitudinally unstable and, therefore, very diﬃcult to ﬂy.

12.3 Airplane Flight Paths
291
to control the direction of the horizontal ﬂight (so as to reach the desired
destination, while avoiding obstacles). If not, an aviator’s plight would be no
better than that of a balloonist, who is placed entirely at the mercy of the
winds. The control of the horizontal ﬂight direction, A, requires that the side
force must create a horizontal centripetal acceleration, as dictated by the last
equation of Eq. (12.29). In order to do so, the ingenious procedure of warping
the wings to bank the aircraft,3 so as to provide a component of the wing
lift in the horizontal plane (side force), was another invention of the Wright
brothers. Thus, the balancing of drag by thrust, weight by lift, and creation
of horizontal centripetal acceleration by the side force obtained by banking
the wings form the essence of airplane ﬂight and are adopted even in this age
of modern aviation.
From the foregoing discussion, it is clear that an airplane, by deﬁnition,
possesses a plane of symmetry through its primary function of a straight and
level ﬂight. Although there are rare exceptions,4 this symmetrical design incor-
porates streamlined bodies (fuselages and nacelles) for housing the payload,
engines, and other essentials, along with a set of lifting surfaces, which are
capable of acting as wings as well as stabilizing surfaces (tails, or canards).
In the interest of low drag, it is important that in the normal operation of
an airplane, the lifting surfaces and the streamlined bodies should be aligned
with the relative ﬂow direction, i.e., the relative velocity vector. Hence, the
velocity vector should lie in the plane of symmetry, the axes of symmetry of
the bodies should be parallel to this plane, while the essentially ﬂat lifting
surfaces must be approximately normal to the same plane. It is clear that
such a symmetrical conﬁguration would not, by its own, create a side force
in the normal operation. However, a sideslip would cause a side force to be
generated in addition to an increase in drag (Chapter 10), which is generally
undesirable. The normal attitude of the airplane is thus without a sideslip,
and is called coordinated ﬂight. The airplane is carefully designed to achieve
this equilibrium attitude through the shape of the bodies and arrangement of
lifting surfaces, in the presence of a disturbance that would otherwise tend to
create a sideslip. The important tendency of seeking an equilibrium with zero
sideslip is called weathercock—or static, directional—stability (Chapter 13).
In a coordinated ﬂight, the airplane must be banked (i.e., rotated about the
instantaneous velocity vector) in order to produce the necessary side force
3 The wing-warping technique adopted in the Wright gliders and airplanes, was
found to be cumbersome and later replaced by the more eﬃcient ailerons. The
ailerons, invented by Farman brothers in 1909 and used in all airplanes since
then, are a pair of trailing-edge control surfaces, deployed in opposite directions
on either side of the airplane, thereby creating a rolling moment.
4 The Boomerang experimental, twin-propeller engine airplane designed by Burt
Rutan has an unconventional, asymmetric conﬁguration, with forward-swept
wings of unequal sweeps and spans and two unsimilar fuselages in a “twin-boom”
style. One engine is mounted ahead of the other, and both produce unequal thrusts
for maintaining directional balance.

292
12 Atmospheric and Transatmospheric Trajectories
Fig. 12.4. The orientation of the airplane’s plane of symmetry, oxbzb, relative to
the vertical plane, oxvzv.
for making a horizontal turn. We must relate the “lift” produced by the lift-
ing surfaces, to our deﬁnition of lift, drag, and side force as components of
the net aerodynamic force resolved in the wind axes. For this purpose, we
select a body-ﬁxed frame, oxbybzb, such that the oxbzb plane is the plane of
symmetry. The airplane’s sideslip angle, β, is the angle made by the relative
velocity vector with the plane of symmetry. Furthermore, the airplane’s net
angle of attack, α, is deﬁned as the angle between the projection of the rela-
tive velocity vector in the plane of symmetry and the axis oxb. Finally, σ is
the bank angle, deﬁned as the angle between the plane of symmetry and the
local vertical plane, oxvzv. The two planes, oxbzb and oxvzv, are depicted in
Fig. 12.4. Then the net aerodynamic force can be expressed as
fa = −Div + fY kv −Lkv = −Dbib + fY bjb −Lbkb ,
(12.30)
where Lb, Db, fY b are the lift, drag, and side force resolved in the body-ﬁxed
frame. The coordinate transformation between the body-ﬁxed frame and the
wind axes is given by
⎧
⎨
⎩
iv′
jv′
kv′
⎫
⎬
⎭= C
⎧
⎨
⎩
ib
jb
kb
⎫
⎬
⎭,
(12.31)

12.3 Airplane Flight Paths
293
where
C =
⎛
⎝
cos α cos β
cos α sin β
−sin α
(sin σ sin α cos β −cos σ sin β) (sin σ sin α sin β + cos σ cos β) sin σ cos α
(cos σ sin α cos β + sin σ sin β) (cos σ sin α sin β −sin σ cos β) cos σ cos α
⎞
⎠.
(12.32)
Usually, the airplane is capable of generating suﬃcient lift with a small angle of
attack (except in large maneuvers). Hence, for the typical case of a coordinated
ﬂight (β = 0, fY b = 0), with small angle of attack, we can assume cos α ≈
1, sin α ≈α. Thus, we have
D ≈Db + Lbα cos σ,
fY ≈Lb sin σ,
(12.33)
L ≈Lb cos σ −Dbα.
It is thus clear that a coordinated ﬂight with zero bank angle is essentially
conﬁned to the vertical plane. If the bank angle and the angle of attack are
selected to make ˙v = ˙φ = ˙A = 0 in Eq. (12.29) while keeping β = 0, we have
a steady, coordinated, horizontal turn.
For most airplanes, the thrust lies in the plane of symmetry. Exceptions to
this rule are airplanes that employ thrust-vectoring for directional stability,
such as the ﬁnless B-2 stealth bomber,5 or for creating a side force without
banking.6 Other exceptions are airplanes driven by a single propeller, which
are designed with the axis of the propeller slightly oﬀset from the longitudinal
axis in order to reduce propulsive inﬂuence (propeller p-eﬀect) on stability and
control. Furthermore, if we exclude the aircraft using a part of the thrust for
lift enhancement, such as the vertical/short take-oﬀand landing (V/STOL)
Harrier and Sea-Harrier 7 and the thrust-vectoring F-22 8 and Sukhoi Su-
30MKI 9 ﬁghter airplanes, the thrust can be considered to be aligned with
5 The B-2 bomber has a ﬂying-wing design without vertical or horizontal tails, as
dictated by low-radar observability (stealth) requirements.
6 The generation of a side force without banking allows a greater horizontal ma-
neuverability, called direct side-force turning, and has been ﬂight-tested in the
experimental F-16D VISTA ﬁghter with a multi-axis, thrust-vectoring nozzle.
NASA has also undertaken experimental investigations into multi-axis thrust-
vectoring [35].
7 The Harrier and Sea Harrier are British subsonic, V/STOL ﬁghter aircraft,
whose larger attack variants, AV-8A and AV-8B, respectively, are produced in
the USA.
8 The F-22 is an advanced American ﬁghter, capable of supersonic cruise and high
maneuverability through thrust vectoring in the plane of symmetry.
9 Su-30MKI is a highly maneuverable version of the Russian Su-30 ﬁghter, with
thrust-vectoring nozzles and small canards, especially designed to meet Indian
Air Force requirements.

294
12 Atmospheric and Transatmospheric Trajectories
the longitudinal axis, oxb. Hence, in most cases we have ϵ = α, μ = β. For a
coordinated ﬂight without thrust vectoring,
fT = fT cos αiv + fT sin αkv = fT ib ,
(12.34)
which implies that the thrust lies in the vertical plane.
Since airplane ﬂight generally occurs close to the planetary surface at
a small relative speed, the planetary rotational and curvature terms in
Eqs. (12.10), (12.14), (12.15), and (12.29) are quite small. Hence, the tra-
ditional approach of studying airplane ﬂight [34] by ignoring these terms—
called the ﬂat-planet approximation—is often valid. However, in considering
long-duration airplane ﬂight, the acceleration terms due to curvature and
planetary rotation can cause a signiﬁcant deviation of the ﬂight path over
time. We shall keep all the terms in the equations of motion, because of our
objective of faithfully modeling the ﬂight dynamics.
Before beginning simulations of airplane trajectories, let us brieﬂy exa-
mine certain aspects of airplane ﬂight derived analytically in an approximate
analysis [34]. The approximate forms of Eqs. (12.10) and (12.29) indicate that
a steady climb is possible by holding ˙v = ˙φ = 0 with the use of L ≈mgc cos φ
and fT −D ≈mgc sin φ. Such an equilibrium ﬂight condition, however, cannot
be held for long without adjusting the relative speed, due to the variation of
the aerodynamic forces with altitude. Hence, in practice, a constant ﬂight-
path angle is achieved by having a quasi-steady climb in which the speed
slowly changes with the altitude. This is also true for a descent. Thus, while
being designed expressly for a level cruising ﬂight, an airplane is capable
of changing its altitude within its thrust capability. The maximum angle of
climb at a given altitude clearly depends on the speciﬁc excess thrust, fT −D
mgc ,
while the maximum rate of climb, ˙r = v sin φ, is determined by the maximum
speciﬁc excess power, (fT −D)v
mgc
. Since the thrust of airbreathing engines used
in airplanes diminishes with altitude more rapidly than the drag, an airplane
cannot go on climbing indeﬁnitely. An absolute ceiling is be deﬁned as the
altitude where the speciﬁc excess thrust and power become zero. However, a
service ceiling, deﬁned as the altitude where the quasi-steady rate of climb
becomes 100 ft/min, is more practical in analyzing airplane performance.
A special kind of quasi-steady climb is the slow increase in altitude in
a long-duration cruise due to the decrease in weight by fuel consumption.
This is referred to as a cruise climb. While all airplanes are capable of quasi-
steady climb in which the speed gradually decreases as the airplane climbs,
modern ﬁghter-type airplanes can increase their speed while climbing due to
their high thrust-to-weight ratio. An accelerated climb, being an unsteady
ﬂight, is analyzed very diﬀerently from the quasi-steady climb. Apart from
climbing, a measure of a ﬁghter aircraft’s performance is its capability of
making horizontal and vertical turns, termed as maneuverability. Horizontal
maneuverability is indicated by the maximum sustained turn rate, which is
the steepest horizontal turn made without losing altitude, and the maximum
instantaneous turn rate, where the airplane is allowed to lose altitude while

12.3 Airplane Flight Paths
295
turning. From the second equation of both Eq. (12.29) and Eq. (12.33), we can
see that a conventional airplane without thrust vectoring can make a steady,
coordinated turn of maximum instantaneous rate
˙A ≈Lb sin σ
mv
,
(12.35)
where the wing lift in the body frame, Lb, is limited by aerodynamic and struc-
tural constraints. However, while turning at the maximum instantaneous rate,
it is seldom possible to maintain level ﬂight (because fT < D), and the air-
plane loses altitude steadily [the ﬁrst equation of Eq. (12.29) and Eq. (12.10)].
Since fT ≈D must be maintained to keep a constant altitude, it is clear
that the sustained turn rate is also inﬂuenced by the thrust capability of
the aircraft in addition to the aerodynamic and structural limitations. Thus,
the sustained rate of turn cannot exceed the maximum instantaneous turn
rate.
We shall now lay down the aerodynamic and structural limitations of air-
plane ﬂight. From the stall limit of the maximum lift coeﬃcient (Chapter 10),
we have
CL .=
Lb
1
2ρv2S ≤CL max ,
(12.36)
where CL max is the maximum lift coeﬃcient of the airplane, based upon the
total wing platform area, S. We know from Chapter 10 that CL max depends
upon the Mach number and the lifting conﬁguration (deployment of high-lift
devices and spoilers).
It is important to note that the airplane’s maximum lift is generally less
than the sum of the maximum lift forces of individual lifting surfaces (due to
mutual interference) and the balance (trim) requirement (Chapter 13). Since
the lifting surfaces are essentially ﬂat, lightweight structures, their dynamic
load arising out of the airplane’s acceleration is limited by tensile strength lim-
its. If the weakest part of the airplane (usually a lifting surface) can sustain, at
most, an acceleration of ¯a, it is clear from Eqs. (12.18), (12.19), and (12.33)—
as well as the fact that in a coordinated airplane ﬂight fT −D ≪L−mgc—that
| f |≈| Lb −mg |≤m¯a ,
(12.37)
where g =

g2c + g2
δ. It is more common to express the structural constraints
in terms of acceleration above due to gravity, with the use of a load factor, n,
deﬁned by aI = (n −1)g. Hence, we have
| Lb |≤mg¯n ,
(12.38)
where ¯n = ¯a
g + 1 is the limit load factor of the airplane. Hence, the normal
load on the airplane, Lb = nmg, is restricted by the limit load factor and the
normal acceleration by ¯a −g. Generally, the limit load factor incorporates a
margin of safety and is less than the actual maximum load factor (called design
load factor) by a factor of safety of 1.5–2. The aerodynamic and structural

296
12 Atmospheric and Transatmospheric Trajectories
constraints are usually incorporated in a single diagram showing the allowable
variation of load factor with speed, called a v-n diagram. Since an airplane
requires a smaller magnitude of negative lift in its design life, compared to
the maximum positive lift, a considerable structural weight can be saved by
selecting a smaller-limit load factor for negative values of Lb. In terms of the
load factor, the stall limit can be expressed as
CL = nmg
1
2ρv2S ≤CL max.
(12.39)
Another structural limitation is the maximum dynamic pressure, qmax =
1
2ρv2
max, that can be safely tolerated by the structure, which gives the maxi-
mum speed, vmax, at a given altitude. Clearly, the value of vmax is smallest at
the sea level and increases with altitude. Since most airplane lifting surfaces
are rather ﬂexible, the dynamic pressure restriction comes from aeroelastic
concerns of divergence, control surface reversal, and ﬂutter. These phenom-
ena provide a smaller dynamic pressure limit than that possible by assuming
a rigid structure. In airplanes capable of high-subsonic and supersonic ﬂight,
there is also a Mach number limitation (M < Mmax) due to dynamic loads
caused by shock waves that can destroy a propeller, and excite aeroelastic
phenomena, such as buzz of control surfaces and air intakes. We will brieﬂy
study the modeling of aeroelastic eﬀects in Chapter 15.
The modeling of thrust variation with speed and altitude is essential in
a ﬂight simulation. As seen in Chapter 11, the propeller thrust varies with
both speed and altitude, whereas a jet engine’s thrust can be considered con-
stant with relative speed during cruise, and changes almost linearly with the
atmospheric density. A turboprop engine displays a similar variation of the
equivalent shaft power with density. However, the rate of decline in power
of a normally aspirated piston engine with altitude is larger than that of a
turboprop with the same maximum shaft power, which results in a smaller
ceiling for a piston-powered airplane. As discussed in Chapter 11, the power-
lapse rate of a piston engine with altitude can be reduced with the help of a
turbo-charger. In all engines, the variation of thrust with Mach number must
be properly taken into account. A rocket engine (Chapter 8) (rarely employed
in airplanes) does not have a signiﬁcant thrust variation with speed, altitude,
and Mach number.
Finally, the drag description of an airplane is generally by a parabolic
variation of the drag coeﬃcient with the lift coeﬃcient (Chapter 10),
CD = CD0 + KC2
L,
(12.40)
where CD0, K are functions of the Mach number and aerodynamic conﬁgu-
ration (deployment of high-lift devices, spoilers, brakes, and ground vicinity)
(Chapter 10). The parabolic drag polar is applicable at both subsonic and
supersonic speeds and breaks down in a stalled ﬂight or through the transonic
regime where normal shock waves are present.

12.3 Airplane Flight Paths
297
12.3.1 Long-Range Cruising Flight
Consider the long-range cruising ﬂight of an airplane, such as a modern air-
liner. In order to maximize the range with a given fuel mass, the airplane must
ﬂy at an altitude and speed where the drag and speciﬁc fuel consumption are
minimized. All jet-powered airplanes normally cruise close to the tropopause
(Chapter 9), h = 11 km, because the thrust-speciﬁc fuel consumption (TSFC)
of jet engines remains small at the tropopause (Chapter 11) and increases
rapidly at higher altitudes. On the other hand, propeller-engined airplanes
have their power-speciﬁc fuel consumption (PSFC) minimized at approximat-
ley half the jet airplane altitude. While the propeller airplanes must ﬂy near a
speed (or lift coeﬃcient) that maximizes the lift-to-drag ratio, L
D, in order to
maximize the range, the jet-powered airplanes have to maximize v L
D (called
the Breguet range condition) for the same objective [34]. Once the optimum
speed and altitude are estimated, the cruise is carried out close to that condi-
tion. Modern airliners are equipped with a ﬂight management system (FMS),
which is a sophisticated autopilot that controls the airplane’s attitude and
speed to meet a desired trajectory, subject to aerodynamic, propulsive, and
structural constraints. Usually, this translates into a coordinated ﬂight with-
out banking, at a constant angle of attack and a constant throttle setting. The
FMS has access to real-time ﬂow angles, airspeed, and altitude from a central
air-data acquisition system (CADS), and airplane attitude, latitude, and lon-
gitude from inertial measurement unit (IMU) and global positioning system
(GPS). Other navigation systems based on ground radio networks provide dis-
tance and angular positions (bearings) relative to the selected radio stations.
An airplane unequipped with the FMS, CADS, or IMU has to be ﬂown by
less-sophisticated autopilots that can hold azimuth (heading), airspeed, and
altitude, or follow a series of speciﬁc GPS waypoints (ﬁxed enroute positions).
In airplanes that do not have an autopilot, the pilot has to ﬂy manually either
by sight using landmarks and aeronautical charts by a procedure known as
dead reckoning, or by available navigational aids (such as ground radio net-
work and GPS). The former method can be employed only in clear weather
situations according to visual ﬂight rules (VFR), whereas the latter is indis-
pensible in bad weather when landmarks are invisible, and is called ﬂight by
instrument ﬂight rules (IFR). Even the most basic airplanes have a certain
minimum set of instruments, such as the airspeed indicator (ASI), altimeter,
vertical speed indicator (VSI), turn, bank, and slip indicator, directional gyro,
and magnetic compass, in order to provide suﬃcient data for safely ﬂying the
airplane. For example, the pilot can maintain a level ﬂight with the help of the
altimeter, and ensure coordination, direction, and rate of turn with the help
of turn, bank, and slip indicator. Furthermore, the optimum cruise condition
can be ensured through the ASI. The ASI is an aneroid barometer calibrated
to convert the dynamic pressure to an indicated airspeed, vi, assuming a con-
stant atmospheric density, ρ0 (usually the standard sea level value). Since the
lift coeﬃcient in a straight and level ﬂight can be expressed as

298
12 Atmospheric and Transatmospheric Trajectories
CL .=
mg
1
2ρv2S =
mg
1
2ρ0v2
i S ,
(12.41)
the pilot can ensure an optimal lift coeﬃcient by maintaining a constant in-
dicated airspeed (after correcting for instrument errors), irrespective of the
altitude. Thus, the ASI can serve as an indicator of the lift coeﬃcient (hence,
angle of attack). A magnetic compass, or a directional gyro, can be calibrated
to accurately indicate the velocity azimuth with a known wind velocity. Since
the early days of aviation, many long-range ﬂights have been undertaken suc-
cessfully with only the basic ﬂight instruments.10
The variation of the airplane’s mass during cruise is given by (Chapter 11)
˙m = −cTfT
g0
,
(12.42)
where g0 = 9.8 m/s2. Since fT , cT are essentially constants, this implies a
linear variation of mass with time. As the mass decreases, the airplane climbs
and its speed changes in order to ﬁnd equilibrium at the new altitude. These
changes are, however, small in magnitude as the rate of change of mass is a
small quantity. Due to a small variation in the Mach number, it is a good
approximation to assume constant drag polar coeﬃcients, CD0, K. For the
same reason, the Mach number variation of thrust and TSFC can be neglected
during cruise.
Example 12.1. We will demonstrate in this example how a long-range, inter-
continental ﬂight is undertaken. Let us simulate the ﬂight of a jet airliner
with total wing planform area, S = 223.0815 m2, and mean aerodynamic
chord, ¯c = 5.42 m, which begins its level cruise at a standard altitude of
11 km over London’s Heathrow airport (δ = 51.5◦, λ = 0), with an ini-
tial mass, m = 84890.909 kg, speed, v = 270 m/s, and velocity azimuth,
A = 287.2◦. Since the expected Mach number variation during cruise is
small, it can be assumed that the drag polar is given by constant coeﬃ-
cients, CD0 = 0.015, K = 0.08. The maximum lift coeﬃcient in the cruis-
ing conﬁguration is CL max = 1.2, while the structural limitations are given
by ¯n = 3.5, qmax = 17, 200 N/m2, Mmax = 0.985. A constant power set-
ting is maintained throughout the cruise, such that fT = 63, 131.63 N and
cT = 0.54907 1/hr at h = 11 km, and varies in direct proportion to the
atmospheric density thereafter. Let us assume that during cruise, the FMS
maintains a zero sideslip, zero bank angle, and a constant angle of attack,
such that the lift coeﬃcient remains constant at CL = 0.2783. Since the lift
coeﬃcient and bank angle are kept constant, there is no need to enforce the
stall and load-factor limits in the simulation. However, the dynamic pressure
10 The early aviation pioneers, such as Charles Lindbergh, who ﬂew across the At-
lantic in 1927, and Wiley Post, who ﬂew around the world in 1931, both in small,
single-propeller airplanes, relied upon the basic ﬂight instruments and dead reck-
oning.

12.3 Airplane Flight Paths
299
and Mach number limits are enforced by the FMS with the decrease of throt-
tle setting, which reduces the thrust by 50% and the TSFC by 10% whenever
either limit is violated. The airplane contains a fuel mass of 21, 222.66 kg,
which is calculated to be suﬃcient for a six-hour cruise with initial thrust
and TSFC. Of course, when the entire fuel is exhausted, the thrust falls to
zero and the airplane begins a descent. We will carry out the simulation for
t = 5.73 hr.
We begin by writing a MATLAB program called airﬂight3dof.m (Ta-
ble 12.1), which calculates the time derivatives of all the motion variables,
r, δ, λ, v, φ, A, m, according to the kinematic and dynamic equations of mo-
tion, mass variation, as well as aerodynamic and structural constraints. These
time derivatives are provided as inputs to the MATLAB’s intrinsic Runge–
Kutta solver, ode45.m, at each time step. The atmospheric properties are
calculated using the 1976 U.S. Standard Atmosphere, programmed in at-
mosphere.m (Chapter 9), while the acceleration due to gravity of nonspherical
earth is calculated by the program gravity.m (Chapter 3). Another program,
called runairﬂight3dof.m (Table 12.2), speciﬁes the initial condition and in-
vokes ode45.m. The resulting plots of the motion variables and aerodynamic
parameters are shown in Figs. 12.5–12.9.
Fig. 12.5. The ground track of a jet airplane in a long-range cruise.

300
12 Atmospheric and Transatmospheric Trajectories
Table 12.1. M-ﬁle airﬂight3dof.m for Airplane’s Governing State Equations
function xdot = airflight3dof(t,x)
global dtr; global S; global c; global rm; global omega; global CD0;
global K; global qmax; global Mmax; global CL; global fT0;
global tsfc0; global mfinal; global f8;
%acceleration due to gravity (nonspherical earth):
[g,gn]=gravity(x(3),x(2));
lo = x(1);la = x(2);
clo = cos(lo); slo = sin(lo);
cla = cos(la); sla = sin(la);
fpa = x(5); chi = x(6);
cfpa = cos(fpa); sfpa = sin(fpa);
cchi = cos(chi); schi = sin(chi);
%atmospheric properties:
if x(3)<rm
x(3)=rm;
end
alt = x(3) - rm; %altitude
v
= x(4); %speed
atmosp = atmosphere(alt,v,c);
rho = atmosp(2); %atmospheric density
mach = atmosp(3); %Mach number
%aerodynamics and propulsion module:
Qinf = 0.5*rho*v^2;
if Qinf>=qmax || mach>=Mmax
fT=fT0*0.85;
tsfc=tsfc0*0.95;
else
fT=fT0;
tsfc=tsfc0;
end
m=x(7);
if m<=mfinal
fT=0;
end
CD=CD0+K*CL^2;
D=Qinf*S*CD;
Xfo = fT*rho/0.3663-D;
Yfo = 0;
Zfo = Qinf*S*CL;
fprintf(f8,’\t%1.5e\t%1.5e\t%1.5e\t%1.5e\t%1.5e\n’,...
alt, mach, Qinf, Xfo, Yfo);
%state equations:
longidot= x(4)*cfpa*schi/(x(3)*cla);
latidot=
x(4)*cfpa*cchi/x(3);
raddot= x(4)*sfpa;
veldot= -g*sfpa+gn*cchi*cfpa+Xfo/m+...
omega*omega*x(3)*cla*(sfpa*cla-cfpa*cchi*sla);
gammadot=(x(4)/x(3)-g/x(4))*cfpa-gn*cchi*sfpa/x(4)...
+Zfo/(x(4)*m)+2*omega*schi*cla...
+omega*omega*x(3)*cla*(cfpa*cla+sfpa*cchi*sla)/x(4);
headdot=x(4)*schi*tan(x(2))*cfpa/x(3)-gn*schi/x(4)...
-Yfo/(x(4)*cfpa*m)-2*omega*(tan(x(5))*cchi*cla-sla)...
+omega*omega*x(3)*schi*sla*cla/(x(4)*cfpa);
mdot=-tsfc*fT/(9.8*3600);
%time derivatives vector:
xdot=[longidot;latidot;raddot;veldot;gammadot;headdot;mdot];

12.3 Airplane Flight Paths
301
Table 12.2. M-ﬁle runairﬂight3dof.m for Solving Airplane’s State Equations
global dtr; dtr=pi/180; %degree to radian
global S; S=223.0815; %wing-planform area (m^2)
global c; c=5.42; %wing mean aerodynamic chord (m)
global rm; rm=6378140; %earth’s radius (m)
global omega; omega=2*pi/(23*3600+56*60+4.0905);%earth’s rot. speed (rad/s)
global CD0; CD0=0.015; %zero-lift drag coefficient
global K; K=0.08; %lift-dependent drag factor
global qmax; qmax=17200; %maximum dynamic pressure (N/m^2)
global Mmax; Mmax=0.985; %maximum Mach number
global CL; CL=0.2783; %constant lift coefficient
global fT0; fT0=63131.63; %initial thrust (N)
global tsfc0; tsfc0=0.54907; %initial TSFC (per hour)
global mfinal; mfinal=84890.909-21222.66; %zero fuel mass (kg)
global f8;f8=fopen(’data8.mat’,’a’);%file for aero-propulsive results
%Initial condition:
long = 0*dtr;
%initial longitude
lat = 51.5*dtr;
%latitude
rad=rm+11000;
%radius
vel=270;
%speed (m/s)
fpa=0;
%flight-path angle
chi=287.2*dtr;
%velocity azimuth (from north)
m=84890.909;
%aircraft mass (kg)
%initial condition state vector:
init = [long; lat; rad; vel; fpa; chi; m];
%Runge-Kutta integration of state equations:
[t, o] = ode45(’airflight3dof’,[0, 5.73*3600], init);
fclose(’all’);
0
50
100
150
200
250
300
350
10.5
11
11.5
12
12.5
13
Time (min.)
Altitude, h (km)
0
50
100
150
200
250
300
350
268
269
270
271
272
273
Time (min.)
Speed, v (m/s)
Fig. 12.6. The relative speed and altitude time history of a jet airplane in a long-
range cruise.

302
12 Atmospheric and Transatmospheric Trajectories
0
50
100
150
200
250
300
350
−0.1
−0.05
0
0.05
0.1
Time (min.)
φ (deg.)
0
50
100
150
200
250
300
350
220
240
260
280
300
Time (min.)
A (deg.)
Fig. 12.7. The ﬂight-path angle and velocity azimuth vs. the altitude of a jet
airplane in a long-range cruise.
Figure 12.5 shows a variation of the longitude vs. latitude in the resulting
ﬂight. Such a plot is known as a ground track and is valuable in navigation.
The ﬂight, originating near London, is seen to terminate close to New York’s
JFK airport (δ = 40.4◦, λ = −73.5◦). The initial velocity azimuth and time of
ﬂight were selected through trial and error to yield this result. Interestingly,
the ground track is almost identical with the great circle route between London
and New York, which is the shortest distance between any two points on the
earth’s surface11 (Fig. 12.5). This result is very important, because fuel and
time are both minimized by ﬂying the great circle route. The slight diﬀerence
between the ground track and the great circle is due to the gravity of an oblate
earth, which pulls the track more toward the equator.
11 The equation for the great circle passing between two points on a sphere, λ1, δ1
and λ2, δ2, is the following [2]:
tan δ =
tan δ1 sin(λ−λ1+β)
sin β
,
δ1 ̸= 0,
tan δ2 sin(λ−λ1+β)
sin(λ2−λ1)
,
δ1 = 0,
where
cot β =
tan δ2
tan δ1 sin(λ2 −λ1) −cot(λ2 −λ1) .
.

12.3 Airplane Flight Paths
303
10.5
11
11.5
12
12.5
13
600
700
800
900
Altitude, h (km)
L(×1000 N)
10.5
11
11.5
12
12.5
13
−2
−1
0
1
Altitude, h (km)
fT −D (×1000 N)
Fig. 12.8. The aerodynamic and thrust force components vs. the altitude of a jet
airplane in a long-range cruise.
The altitude and speed time history are shown in Fig. 12.6, depicting a
shallow climb to h = 12.8 km, a slight decrease, and then increase in the
speed by −2, +3 m/s over a period of 5.73 hr. This is the typical cruise climb
caused by fuel consumption. The change in the ﬂight-path angle is seen to be
negligible in Fig. 12.7, while the velocity azimuth almost steadily decreases
by 55.2◦over the ﬂight. It is important to note that the airplane has made
no turns; it has ﬂown a straight and level trajectory. Therefore, the varia-
tion of azimuth and, thus, curvature in the ground track, are caused entirely
by the centripetal and Coriolis acceleration due to the earth’s curvature and
rotation. The decrease in the lift is steady due to the linear weight reduc-
tion, and the diﬀerence between thrust and drag changes slightly due to the
slight altitude increase, as seen in Fig. 12.8. The Mach number changes very
slightly (by 0.01), while the dynamic pressure steadily decreases, and both
remain well below their structural limits without the need of FMS throttle in-
tervention (Fig. 12.9). This example shows the simplicity of cruising for long
distances by merely maintaining a constant lift coeﬃcient and throttle set-
ting, where a straight and level ﬂight is converted into a great circle route by
the earth’s rotation and curvature, without any maneuvers by the FMS. This
navigation procedure is used in a long-range cruise. However, when a steady

304
12 Atmospheric and Transatmospheric Trajectories
10.5
11
11.5
12
12.5
13
0.9
0.91
0.92
0.93
0.94
Altitude, h (km)
M
10.5
11
11.5
12
12.5
13
10
11
12
13
14
Altitude, h (km)
1/2ρv2(×1000N/m2)
Fig. 12.9. The Mach number and dynamic pressure vs. the altitude of a jet airplane
in a long-range cruise.
wind is present, the ground track deviates from the great circle route, thereby
requiring FMS (or pilot) inputs to prevent such a deviation.
12.3.2 Eﬀect of a Steady Wind on an Airplane Flight
The atmosphere is never completely at rest relative to the earth. At low al-
titudes of airplane ﬂight, there can be strong horizontal air currents, called
winds, capable of aﬀecting the ﬂight paths. Most airplanes are subjected to
winds of various intensities during their ﬂight. During cruise, the altitude
is large enough for the atmospheric turbulence caused by the ground to die
down, resulting in a wind of nearly constant speed and direction at a given
altitude. Careful periodic observations of the wind velocities above selected
weather stations yield hourly winds-aloft data at a series of altitudes, which
the pilots use in ﬂight planning. Often, the prevailing winds, such as the east-
erly trade winds in the subtropical belt near the equator, or the westerlies at
the mid-latitudes, are strong enough to drastically change the ground track
of airplanes, which may cause an increase in ﬂight time, and even fuel starva-
tion, if not properly compensated for. At the cruising altitudes of jet airplanes
(near the tropopause), a very strong west-to-east wind is sometimes encoun-
tered, called a jetstream. This is a “river of air” conﬁned to a narrow altitude
range and width of a few kilometers, but covering almost the entire globe,

12.3 Airplane Flight Paths
305
with core winds reaching 500 km/hr. With the jetstream along the ﬂight di-
rection, an airplane is “helped along” to its destination, saving time and fuel.
Consequently, many eastward ﬂights are planned to encounter the jetstream,
even at the cost of deviating from the great circle route. However, a jetstream
crossing should be avoided due to the high wind shear 12 and the associated
turbulence, which can cause severe structural damage to lifting surfaces.
In a coordinated ﬂight with a constant angle of attack, an airplane does not
“feel” the presence of a steady wind, as the aerodynamic force and moment,
which depend only on the velocity relative to the atmosphere, are unaﬀected.
However, a change in the wind strength, or direction, manifests itself into
changes in the angle of attack, sideslip, and bank angle, causing a change in
the aerodynamic force and moment. The ground track, on the other hand, is
aﬀected even by a steady wind. Let the aiplane’s velocity relative to the earth
be v, while a wind of velocity,
vw = vw(sin Awj + cos Awk) ,
(12.43)
resolved in the local horizon frame, is blowing steadily. The airplane’s velocity
relative to the atmosphere, v′, is given by
v′ = v −vw
= v sin φi + (v cos φ sin A −vw sin Aw)j
+(v cos φ cos A −vw cos Aw)k .
(12.44)
We can express the relative velocity in the wind axes as v′ = v′iv′, where
v′ =

v2 + v2w −2vvw cos φ cos(A −Aw) .
(12.45)
The governing kinematic equations, Eqs. (12.10), (12.14), (12.15), as well as
the acceleration due to gravity, the earth’s curvature, and the rotation in the
dynamic equations, Eq. (12.29), are unmodiﬁed. However, the aerodynamic
and propulsive forces, which are resolved in the axes iv, jv, kv in Eq. (12.29),
are changed due to the wind, because of the change in airspeed [Eq. (12.45)],
and the modiﬁed wind axes, iv′, jv′, kv. Let the aerodynamic and propulsive
force in a coordinated ﬂight be expressed as
fa + fT = (f ′
T −D′)iv′ −L′kv
= (fT −D)iv + fY jv −Lkv ,
(12.46)
where prime denotes the wind-modiﬁed force magnitudes. Employing the co-
ordinate transformation between iv, jv, kv and iv′, jv′, kv, we have
12 Wind shear is the name given to abrupt changes in the wind speed and direction,
which can suddenly increase the angle of attack, sideslip, and bank angle, thereby
putting enormous impulsive loads on the airplane. The high-altitude wind shear
is also referred to as clear-air turbulence (CAT), as it is unaccompanied by clouds
and, hence, gives no advance warning to the pilot.

306
12 Atmospheric and Transatmospheric Trajectories
iv′ · iv = jv′ · jv = cos β ,
(12.47)
where β is the eﬀective sideslip angle caused due to the wind, given by
v′ cos β = v sin2 φ + (v cos φ sin A −vw sin Aw) cos φ sin A
+(v cos φ cos A −vw cos Aw) cos φ cos A .
(12.48)
Substituting Eq. (12.47) into Eq. (12.46), we have
(fT −D) = (f ′
T −D′) cos β,
fY = (f ′
T −D′) sin β,
(12.49)
L = L′.
Therefore, the wind generates a side force in the original (no-wind) wind axes,
even though the ﬂight is coordinated in reference to the modiﬁed wind axes.
If the angle of attack is kept unchanged in the presence of the wind, the lift
coeﬃcient would remain unmodiﬁed from its no-wind value.
Example 12.2. Let us repeat the simulation presented in Example 12.1 with a
steady wind. In order to do so, we will modify the aerodynamic and propulsive
force calculations in the program airﬂight3dof.m as follows:
v=x(4);
vp=sqrt(v^2+vw^2-2*v*vw*cfpa*cos(chi-Aw));
cosbeta=(v*sfpa^2+(v*cfpa*schi-vw*sw)*cfpa*schi...
+(v*cfpa*cchi-vw*cw)*cfpa*cchi)/vp;
beta=acos(cosbeta);
Qinf = 0.5*rho*vp^2;
if Qinf>=qmax || machb>=Mmax
fT=fT0*0.85;
tsfc=tsfc0*0.95;
else
fT=fT0;
tsfc=tsfc0;
end
m=x(7);
if m<=mfinal
fT=0;
end
CD=CD0+K*CL^2;
D=Qinf*S*CD;
Xfo = (fT*rho/0.3663-D)*cosbeta;
Yfo = (fT*rho/0.3663-D)*sin(beta);
Zfo = Qinf*S*CL;
We study two normally encountered wind conditions: (a) a wind speed of
50 km/hr from the southeast (Aw = 135◦), and (b) a wind speed of 50 km/hr
from the northwest (Aw = 315◦). The resulting ground tracks are compared
with that of zero wind in Fig. 12.10. It is clear that in both wind conditions, the
airplane departs signiﬁcantly from the zero-wind, great circle route. At the end
of the 5.73 hr ﬂight, the airplane has deﬂected by approximately (a) 489 km
and (b) 508.2 km from the intended destination (New York’s JFK airport).
One can ensure that the original destination is reached in the presence of

12.3 Airplane Flight Paths
307
wind by either selecting a diﬀerent initial azimuth and following a straight
ﬂight, or constantly adjusting the lift coeﬃcient, thrust, and bank angle in
order to follow the great circle route (such as the lift and bank modulation
presented in Example 4.5). However, while the former option will increase
both the time and fuel of ﬂight due to its longer path (and may cause fuel
starvation before reaching the destination), the latter requires a precise control
of the ﬂight path (called closed-loop guidance), which is generally feasible only
with a computerized FMS. Therefore, a steady wind of even a relatively small
strength can have an insidious eﬀect on the ﬂight if not properly planned for
by making the necessary course corrections and carrying the extra fuel an
adverse wind requires.
Fig. 12.10. The ground track of a jet airplane in a long-range cruise with a steady
wind.
Another simulation of the wind’s eﬀect on an airplane ﬂight was presented in
Chapter 4 (Example 4.5), where we considered a ground-referenced, horizontal
turn in the presence of a steady wind. Example 4.5 considers a turn close
to a ground station, where it was unimportant to include the eﬀects of the
earth’s curvature and rotation. In a manner similar to Example 4.5, we can
derive the modulation in the lift coeﬃcient and bank angle for maintaining
either a desired straight ground track (great circle route) or a large-radius turn
(such as a surveillance aircraft observing a facility from a distance), where the
additional terms due to planetary curvature and rotation may be necessary.

308
12 Atmospheric and Transatmospheric Trajectories
By carrying out a simulation with the modulated lift and bank angle, we can
test whether the airplane follows the desired, closed-loop guided path.
12.3.3 Take-OﬀManeuver
The take-oﬀis a complex maneuver, with a changing speed, ﬂight-path angle,
and variations in the aerodynamic and propulsive forces due to changes in air-
speed, angle of attack, and vicinity of the ground.13 A conventional take-oﬀ
can be divided into three distinct phases: (a) ground run, where the airplane
accelerates with all wheels in contact with the ground; (b) transition from level
to a climbing attitude, at the end of which the airplane becomes airborne; and
(c) a quasi-steady climb. At take-oﬀ, high-lift devices, such as leading- and
trailing-edge ﬂaps, are employed at less than maximum angles in order to
increase the lift coeﬃcient without a large increase in the zero-lift drag. Con-
sequently, the lift coeﬃcient during take-oﬀis only 60–80% of the maximum
possible value, with the full deployment of high-lift devices. During ground
run, the airplane’s angle of attack is limited by geometry to a small, constant
value, which provides a small lift coeﬃcient, CLG. The ground run is allowed
to continue until the airspeed exceeds the level stalling speed, vs, usually by
10%. Although the airspeed becomes slightly larger than the stalling speed,
the airplane remains on the ground due to the fact that CLG ≪CL max. Until
the airplane becomes airborne, a ground frictional force, fμ, acts opposite to
the direction of motion. This force is modeled as the net normal reaction on
the wheels, multiplied by a rolling friction coeﬃcient, μr,
fμ = −μr(mg −L)iv .
(12.50)
The value of μr depends upon the nature of the tires and the runway, and
typically ranges from 0.03 for dry concrete to 0.08 for wet grass. When brakes
are applied, this range of μr changes to 0.3–0.5 for dry concrete and 0.2 for
wet grass.
In the transition phase, the angle of attack is increased by rotating the nose
upward, such that the lift coeﬃcient becomes close to (approximately 80%)
the maximum lift coeﬃcient. During this time, the airspeed has increased to
approximately 1.2vs. This combination of airspeed and lift coeﬃcient produces
a lift greater than the weight, and the ﬂight-path angle increases due to the
larger-than-unity load factor, n ≈(0.8)(1.2)2 = 1.152. Thus, the airplane
assumes a positive ﬂight-path angle at the end of transition. At this time, the
pilot adjusts the lift coeﬃcient such that a quasi-steady climb is established
at v ≈1.2vs. The take-oﬀmaneuver is considered complete when all ground
obstacles have been avoided, and a climb has been established. The airplane
certifying agencies [such as the Federal Aviation Administration (FAA) of the
13 The discussion presented here can be applied—with appropriate modiﬁcations—
to a ship-board take-oﬀand take-oﬀfrom a liquid surface. Hence, the generic
term “ground” is taken to refer to any ﬂat surface.

12.3 Airplane Flight Paths
309
U.S.] lay down speciﬁc deﬁnitions of the take-oﬀdistance and the requirements
of a quasi-steady climb angle (or rate) for a safe take-oﬀ. These speciﬁcations
dependent on the airplane category (such as normal, utility, or transport) and
the number and type of engines. For example, the take-oﬀdistance of a single
piston-propeller engined, normal airplane is deﬁned under FAA regulation
FAR Part 23 [33] as the distance from brakes release to the top of a 50-
ft-high obstacle, and the safe rate of climb with landing gear retracted is
considered to be 300 ft/min at standard sea level. Multi-engined airplanes
have much more complex take-oﬀspeciﬁcations and include the distance and
climb requirements with one engine inoperative. Here we present a strategy for
simulating an airplane take-oﬀ, which can be applied with due modiﬁcation
to any realistic situation (presence of a steady wind, engine failure during
take-oﬀ, etc.).
Generally, the eﬀects of planetary curvature, rotation, and oblateness are
neglected during take-oﬀ, which involves small relative speeds and duration.
However, we shall keep all the terms in the equations of motion and study
their possible eﬀects in the ensuing trajectory. During the ground roll, the
pilot ensures the changes in the heading (velocity azimuth, A) are negligi-
ble, by keeping the nose pointed along the runway center line, even in the
presence of a cross-wind. Hence, we will neglect the variation in the heading
and ﬂight-path angle until the time the airplane becomes completely airborne.
Thereafter, the trajectory is free to be modiﬁed by the eﬀects of planetary ro-
tation, curvature, oblateness, and wind. Generally, the pilot turns to a desired
heading at the completion of take-oﬀ, in order to establish a cruise toward a
destination, as discussed above. Sometimes, the time taken to rotate a heavy
airplane during the transition period could be suﬃciently large (1–2 seconds)
to aﬀect the total take-oﬀdistance. For this reason, a distinct rotation phase
is often added immediately preceding the transition. An accurate estimation
of the rotational maneuver is possible by taking into account the equation
for the pitching motion (Chapter 13), with the required moment of inertia
and pitching moment contributions from the wing, fuselage, tail, engines, and
landing gear. We will postpone the discussion of rotational dynamics until
Chapter 13, and assume an instantaneous change in the lift coeﬃcient from
CLG to 0.8CL max, which is reasonably accurate for most airplanes.
A ground-eﬀect phenomenon is encountered during take-oﬀand landing
when the airplane’s wings are in the vicinity of the ground (less than a wing
span away). We saw in Chapter 10 that the lift-induced drag of a wing de-
pends, in part, on the strength of the rotational ﬂow near the wing tips (tip
vortices). Due to the ground eﬀect, the strength of the tip vortices diminish,
thereby directly reducing the lift-induced drag. Thus, the lift-dependent drag
factor, K, is modiﬁed by the ground eﬀect to an eﬀective value, K′, whose
semi-empirical expression can be derived to be the following [36]:
K′ = K
33( h
b )
3
2
1 + 33( h
b )
3
2 ,
(12.51)

310
12 Atmospheric and Transatmospheric Trajectories
where b is the wing span, and h denotes the height of the wing plane above
the ground.14 During ground run and transition, h ≪b, thereby making K′
much smaller than K. The reduced drag in the ground eﬀect causes a tendency
of accelerating and climbing more rapidly at take-oﬀ, or “ﬂoating” without
touching down during landing, as compared to ﬂights without ground eﬀect.
When h > b, the ground eﬀect vanishes, and there is a tendency to sink
at that point, which could be dangerous in some cases (some accidents are
caused when airplanes are too heavy to be ﬂown “outside” the ground eﬀect,
but they nevertheless take-oﬀmomentarily due to ground eﬀect). This is the
main reason why minimum climb requirements during take-oﬀare speciﬁed
for airplane certiﬁcation.
The variation of thrust during take-oﬀis an important modeling parame-
ter. An airbreathing engines display a change of thrust with airspeed at small
take-oﬀvelocities when compared to a static situation immediately prior to
the beginning of take-oﬀ. For airplanes with propeller engines, this variation
is modeled by taking into account the static thrust coeﬃcient (Chapter 11),
which is only a function of the power coeﬃcient and is available from the pro-
peller charts provided by the manufacturer. Since take-oﬀnormally occurs at
the maximum throttle setting, the static thrust coeﬃcient can be determined
from the maximum power developed at the atmospheric conditions prevail-
ing at the airport. As the airspeed becomes suﬃciently large and constant
(approximately 1.2vs), a model for the propeller eﬃciency in terms of the
advance ratio (Chapter 11) is employed for predicting the thrust. Hence, a
smooth interpolation from the constant static thrust to the thrust value at
v = 1.2vs can be used for a propeller airplane. A similar approach can be
applied for jet-engined airplanes, where the rated static sea level thrust can
be corrected for atmospheric density and installation losses, the level ﬂight
thrust at the airport altitude and Mach number corresponding to v = 1.2vs is
obtained from engine data, and a smooth interpolation is employed between
the two points.
Example 12.3. Consider the take-oﬀof a jet airliner with total wing planform
area S = 223.0815 m2, mean aerodynamic chord ¯c = 5.42 m, and span,
b = 41.2 m, beginning at v = 0 at a standard altitude of 3 m (the height of
the airplane’s center of mass during ground-run) at δ = 51.45◦, λ = 0, with
initial mass m = 84, 890.909 kg and (heading) velocity azimuth A = 270◦. The
aerodynamic coeﬃcients during take-oﬀare CL max = 1.6, CLG = 0.1, CD0 =
0.015, and K = 0.055, while the rolling friction coeﬃcient between the tires
and the runway is μr = 0.03. The maximum throttle setting is maintained
throughout the take-oﬀsuch that the static thrust is fT = 211, 128.17 N and
static TSFC, cT = 0.4 1/hr. Both the thrust and the TSFC vary linearly with
airspeed until achieving a constant value of 90% of static thrust and 110%
of static TSFC, respectively, at the level stalling speed, vs. Thereafter, both
14 Although wings are nonplanar surfaces, we can associate an average (or median)
plane, such as the one containing the mean aerodynamic chords of the wings.

12.3 Airplane Flight Paths
311
thrust and TSFC are assumed invariant with airspeed, but the thrust varies in
direct proportion to the atmospheric density. The lift coeﬃcient is maintained
constant at CL = 0.8CL max after lift-oﬀ. The pilot maintains a straight-line
path until the airplane becomes airborne, and thereafter no corrections in the
heading are made. The landing gear and high-lift devices are not retracted in
the take-oﬀsimulation. No wind is assumed (although a steady wind can be
easily modeled using the approach given in the previous subsection). It is best
to simulate the take-oﬀin its ﬁrst minute.
A MATLAB program called takeoﬀ.m (Table 12.3) is written to compute
the time derivatives of all motion variables, r, δ, λ, v, φ, A, m, according to the
kinematic and dynamic equations of motion, mass variation, as well as the
variation of aerodynamic and propulsive parameters during take-oﬀ. These
time derivatives are provided as inputs to the MATLAB’s intrinsic Runge–
Kutta solver, ode45.m, at each time step. Another program, called runtake-
oﬀ.m (Table 12.4), speciﬁes the initial condition and invokes ode45.m. As
before, the standard atmospheric and nonspherical earth gravity models are
provided by atmosphere.m (Chapter 9) and gravity.m (Chapter 3), respec-
tively.
The resulting plots of the important motion variables and related quanti-
ties are shown in Figs. 12.11–12.15. It is evident from the airspeed vs. altitude
plot, Fig. 12.11, that the stall boundary is not violated after the airplane be-
comes airborne. It reaches an altitude of approximately 245.45 m at the end
of 60 s after brake release, and covers a total distance of about x = 5000 m
down-range of the starting point in this duration (Fig. 12.12). Using the stan-
dard FAA deﬁnition of take-oﬀdistance for a jet transport with all engines
operating at 115% of the distance covered along the runway until a 35-ft ob-
stacle is cleared, we arrive at a ﬁgure of (1.15)(2690) = 3093.5 m as the total
take-oﬀdistance. After the airplane has become airborne, its heading changes
slightly due to the combined eﬀects of nonspherical earth gravity and the
earth’s curvature and rotation. This change in heading causes a drift normal
to the runway, called the cross-range, y. As shown in Fig. 12.13, the total
cross-range drift at the end of 60 sec is less than 6.3 m. Such a drift would
be much larger in the presence of a cross-wind if uncorrected. The ﬂight-
path angle (or the angle of climb), φ, during take-oﬀis plotted in Fig. 12.14,
which displays an overshoot to φ = 16◦, before stabilizing at a nearly constant
value, φ ≈8◦at the end of about 50 sec. The transition from a level, accel-
erating ﬂight to a quasi-steady climb with a nearly constant airspeed is also
evident in Fig. 12.15, which plots the time history of airspeed, v, and rate of
climb, ˙h = v sin φ. After 50 sec, a quasi-steady rate of climb of about 10 m/s
is reached with a constant airspeed of approximately 74 m/s, which is quite
close to the desired speed [v = 1.2vs = (1.2)(61.66) = 74 m/s]. This is indeed
remarkable, as the pilot maintains a constant lift coeﬃcient, CL = 0.8CL max,
after lift-oﬀ. Thus, the airplane automatically seeks to establish a quasi-steady
climb after the lift coeﬃcient and thrust are set, without any further input
from the pilot. The initial oscillation in the ﬂight-path angle is caused by

312
12 Atmospheric and Transatmospheric Trajectories
Table 12.3. M-ﬁle takeoﬀ.m for an Airplane’s Governing State Equations during
Take-Oﬀ
function deriv = takeoff(t,o)
global dtr; global mu; global omega; global S; global c; global rm;
global CD0; global K; global b; global CLmax; global CLG;
global fT0; global tsfc0; global mur;
%acceleration due to gravity (nonspherical earth):
[g,gn]=gravity(o(3),o(2));
lo = o(1);la = o(2);
clo = cos(lo); slo = sin(lo);
cla = cos(la); sla = sin(la);
fpa = o(5); chi = o(6);
cfpa = cos(fpa); sfpa = sin(fpa);
cchi = cos(chi); schi = sin(chi);
%%%atmosphere determination
if o(3)<rm+3
o(3)=rm+3;
end
alt = o(3) - rm;
v
= o(4);
atmosp = atmosphere(alt,v,c);
rho = atmosp(2);
machb = atmosp(3);
%%%end:atmosphere determination
[t alt v]
Qinf = 0.5*rho*v^2;
if alt<=b
Keff=K*33*(alt/b)^1.5/(1+33*(alt/b)^1.5);
else
Keff=K;
end
m=o(7);
vstall=sqrt(2*m*g/(1.2249*S*CLmax));
if v<=vstall
fT=fT0-0.1*fT0*v/vstall;
tsfc=tsfc0+0.1*tsfc0*v/vstall;
else
fT=0.9*fT0;
tsfc=1.1*tsfc0;
end
if v<1.2*vstall
CL=CLG;
else
CL=0.8*CLmax;
end
CD=CD0+Keff*CL^2;
D=Qinf*S*CD;
L=Qinf*S*CL;
if alt==3
Xfo = fT-D-mur*(m*g-L);
else
Xfo = fT*rho/1.2249-D;
end
Zfo = L;
Yfo = 0;
%trajectory equations follow:
longidot = o(4)*cfpa*schi/(o(3)*cla); %longitude
latidot =
o(4)*cfpa*cchi/o(3); %latitude
raddot = o(4)*sfpa;
%radius
veldot=-g*sfpa+gn*cchi*cfpa...
+Xfo/m+omega*omega*o(3)*cla*(sfpa*cla-cfpa*cchi*sla);
if v<1.2*vstall && alt==3
gammadot=0;
headdot=0;
else

12.3 Airplane Flight Paths
313
gammadot=(o(4)/o(3)-g/o(4))*cfpa-gn*cchi*sfpa/o(4)...
+Zfo/(o(4)*m)+2*omega*schi*cla...
+omega*omega*o(3)*cla*(cfpa*cla...
+sfpa*cchi*sla)/o(4);
headdot =o(4)*schi*tan(o(2))*cfpa/o(3)...
-gn*schi/o(4)-Yfo/(o(4)*cfpa*m)...
- 2*omega*(tan(o(5))*cchi*cla-sla)...
+omega*omega*o(3)*schi*sla*cla/(o(4)*cfpa);
end
mdot=-tsfc*fT/(9.8*3600);
%time derivatives:
deriv=[longidot;latidot;raddot;veldot;gammadot;headdot;mdot];
Table 12.4. M-ﬁle runtakeoﬀ.m for Solving an Airplane’s State Equations during
Take-Oﬀ
global dtr; dtr = pi/180;
global mu; mu = 3.986004e14; %earth’s grav. const (m^3/s^2)
global omega; omega=2*pi/(23*3600+56*60+4.0905); %(rad/sec)
global S; S =
223.0815; %wing planform area (m^2)
global c; c=5.42; %wing mean aerodynamic chord (m)
global rm; rm = 6378140 ; %earth’s radius (m)
global CD0; CD0=0.02;
global K; K=0.055;
global b; b=41.2; %wing span (m)
global CLmax; CLmax=1.6;
global CLG; CLG=0.1; %lift coeff. during ground run
global fT0; fT0=211128.17; %sea level static thrust (N)
global tsfc0; tsfc0=0.4; %sea level static TSFC (per hour)
global mur; mur=0.03; %rolling friction coefficient
%Initial condition:
long = 0*dtr;
%initial longitude
lat = 51.45*dtr;
%latitude
rad=rm+3;
%radius (m)
vel=0.001;
%speed (m/s)
fpa=0;
%flight-path angle
chi=270*dtr;
%velocity azimuth (from north)
m=84890.909;
%aircraft mass (kg)
init = [long; lat; rad; vel; fpa; chi; m];
[t, o] = ode45(’takeoff’,[0, 60], init);
fclose(’all’);
the fact that the airspeed at lift-oﬀis much larger than that required for
achieving a quasi-steady climb with the given lift coeﬃcient. In the ensuing
ﬂight-path oscillation, the airspeed is reduced to the required value, and a con-
stant climb angle is achieved, whose value is dictated by the speciﬁc excess
thrust, φ ≈fT −D
mg . The mass variation is nearly linear, with the net change in
mass during the ﬁrst 60 sec (not plotted) of about 143kg (0.17% of the initial
mass).
The landing maneuver can be regarded as the reverse of the take-oﬀ, with
the objective of bringing the airplane to rest on the ground from a quasi-steady
descent. The landing approach is normally begun at a speed approximately
30% higher than the level stalling speed, vs, with the maximum deployment
of high-lift devices, and a small power setting. The power setting is adjusted
in order to achieve the desired rate of descent in a high-drag conﬁguration.

314
12 Atmospheric and Transatmospheric Trajectories
Fig. 12.11. The airspeed vs. altitude plot of a jet airplane during take-oﬀ.
Fig. 12.12. The down range vs. altitude plot of a jet airplane during take-oﬀ.

12.3 Airplane Flight Paths
315
Fig. 12.13. The down range vs. cross-range plot of a jet airplane during take-oﬀ.
0
10
20
30
40
50
60
0
2
4
6
8
10
12
14
16
Time (s)
φ (deg.)
Fig. 12.14. The ﬂight-path angle time history of a jet airplane during take-oﬀ.

316
12 Atmospheric and Transatmospheric Trajectories
0
10
20
30
40
50
60
0
10
20
30
40
50
60
70
80
Time (s)
(m/s)
v
dh/dt(=v sinφ)
Fig. 12.15. The airspeed and rate of climb of a jet airplane during take-oﬀ.
Usually, there is also an angle of descent required by either a glide-slope indi-
cator (GSI), which is a ground-based radio beacon, transmitting in a narrow
beam at a ﬁxed angle (about 3◦) above the runway, or a visual approach-slope
indicator consisting of color-coded lights near the runway indicating the ap-
proximate angle of approach. When the airplane arrives at a prescribed height
above the runway, a pitch maneuver is executed in order to reduce the angle
of descent and airspeed, such that the airplane touches down on the main
wheels with a near-zero ﬂight-path angle, φ, and an airspeed just above the
level stalling speed (v ≈1.1vs). The touch down is followed by a brief period
of rotation during which the airplane is brought to its normal attitude on the
ground, with all wheels in contact with the runway. Finally, brakes and other
retardation devices (such as reverse thrust) are applied to bring the airplane
to rest. It is easy to modify the program given earlier for take-oﬀ, in order to
simulate a landing maneuver.
12.3.4 Accelerated Climb
While all airplanes are capable of a quasi-steady climb at nearly constant
airspeed, some airplanes can accelerate while climbing. This requires a high
thrust-to-weight (or power-to-weight) ratio. Most ﬁghter airplanes can per-
form the accelerated climb to supersonic speeds, with some even able to climb
vertically for limited periods. The simulation of an accelerated climb of a

12.3 Airplane Flight Paths
317
ﬁghter airplane requires that one should account for the simultaneous varia-
tion of the thrust and drag with both altitude and Mach number. The vari-
ation of the parasite drag coeﬃcient, CD0, with Mach number is possible by
taking into account subsonic compressibility eﬀects, as well as transonic and
supersonic wave drag (Chapter 10). The lift-dependent drag factor, K, also
varies with M due to compressibility and wave drag and is best modeled by
the leading-edge suction analogy (Chapter 10). The amount of leading-edge
suction, s, depends on whether the leading edge is subsonic as well as the
lift coeﬃcient, CL. Modern ﬁghter aircraft are powered by low-bypass, after-
burning turbofan engines, the variation of whose thrust and TSFC with the
altitude and Mach number was presented by a typical example in Chapter 11.
Thus, we are well prepared to appropriately model an accelerated climb.
Example 12.4. Consider a modern ﬁghter airplane of wing-planform area
S = 56.5 m2, span b = 14.1512 m, mean aerodynamic chord ¯c = 3.9926 m,
initial mass m = 17350 kg, leading-edge sweep angle ΛLE = 50◦, and the
maximum lift coeﬃcient in clean conﬁguration, CL max = 1.5. Structurally,
the airplane is limited by ¯n = 7.5, qmax = 49, 000 N/m2, Mmax = 2.5. The
airplane is equipped with two low-bypass-ratio, afterburning turbofan engines
whose characteristics of installed thrust and TSFC were given in Example 12.1
and coded in the M-ﬁle engine.m. The airplane begins a climb with maximum
afterburning thrust setting after retracting the landing gear and ﬂaps follow-
ing a take-oﬀ, with initial altitude h = 200 m, position δ = 20◦, λ = 70◦,
relative speed v = 69 m/s, azimuth A = 270◦, and ﬂight-path angle φ = 40◦.
It is best to simulate the climb for 80 seconds, during which the lift coeﬃcient
is modulated to follow the instantaneous quasi-steady climb value
CL = 2mg cos φ
ρSv2
,
in order that the ﬂight-path curvature remain small. The eﬀects of steady
wind are neglected, but can be easily incorporated.
A MATLAB program named accelclimb.m (Table 12.5) is written to com-
pute the time derivatives of the motion variables, r, δ, λ, v, φ, A, m, which uses
the programs parasite.m (Table 12.6) for CD0, liftddf.m for K by the leading-
edge suction analogy (Table 12.7), and engine.m for afterburning turbofan
engine characteristics with maximum power, along with atmosphere.m (Chap-
ter 9) and gravity.m (Chapter 3). The time derivatives are provided as inputs
to ode45.m, which is invoked by another program, called runaccelclimb.m (Ta-
ble 12.8), along with the relevant parameters and initial condition. The plot
of parasite drag coeﬃcient with Mach number is given in Fig. 12.16, while
the variation of the zero-suction and full-suction values of the lift-dependent
drag factor, K0 and K100, respectively, are plotted in Fig. 12.17. We recall
from Chapter 10 that the net lift-dependent drag factor, K, depends upon the
actual amount of the leading-edge suction, s, according to
K = sK100 + (1 −s)K0 .

318
12 Atmospheric and Transatmospheric Trajectories
Table 12.5. M-ﬁle accelclimb.m for an Airplane’s State Equations during Acceler-
ated Climb
function deriv = accelclimb(t,o)
global dtr; global mu; global omega; global S; global c;
global rm; global b; global CLmax; global sweep;
global f8;
%acceleration due to gravity (nonspherical earth):
[g,gn]=gravity(o(3),o(2));
lo = o(1);la = o(2);
clo = cos(lo); slo = sin(lo);
cla = cos(la); sla = sin(la);
fpa = o(5); chi = o(6);
cfpa = cos(fpa); sfpa = sin(fpa);
cchi = cos(chi); schi = sin(chi);
%%%atmospheric properties:
if o(3)<rm
o(3)=rm;
end
alt = o(3) - rm;
v
= o(4);
atmosp = atmosphere(alt,v,c);
rho = atmosp(2);
Qinf = 0.5*rho*v^2;
mach = atmosp(3);
%%%engine data:
[fT,tsfc]=engine(alt,mach);
fT=2*fT;
m=o(7);
%%%drag data:
CD0=parasite(mach);
CL=m*g*cfpa/(Qinf*S);
if CL>CLmax
CL=0
end
K=liftddf(mach,CL,sweep,b^2/S);
[t alt mach CL]
if alt<=b
Keff=K*33*(alt/b)^1.5/(1+33*(alt/b)^1.5);
else
Keff=K;
end
CD=CD0+Keff*CL^2;
D=Qinf*S*CD;
%%%aero-propulsive force components:
L=Qinf*S*CL;
Xfo = fT-D;
Zfo = L;
Yfo = 0;
fprintf(f8,’\t%1.5e\t%1.5e\t%1.5e\t%1.5e\t%1.5e\n’,...
t,alt,CL,mach,Qinf);
%%%trajectory equations:
longidot = o(4)*cfpa*schi/(o(3)*cla);
latidot =
o(4)*cfpa*cchi/o(3);
raddot = o(4)*sfpa;
%Radius
veldot = -g*sfpa +gn*cchi*cfpa + Xfo/m...
+omega*omega*o(3)*cla*(sfpa*cla-cfpa*cchi*sla);
gammadot=o(4)/o(3)-g/o(4))*cfpa-gn*cchi*sfpa/o(4)...
+Zfo/(o(4)*m)+ 2*omega*schi*cla...
+ omega*omega*o(3)*cla*(cfpa*cla...
+ sfpa*cchi*sla)/o(4);
headdot = o(4)*schi*tan(o(2))*cfpa/o(3)...
-gn*schi/o(4)-Yfo/(o(4)*cfpa*m)...
- 2*omega*(tan(o(5))*cchi*cla - sla)...
+ omega*omega*o(3)*schi*sla*cla/(o(4)*cfpa);
mdot=-tsfc*fT/(9.8*3600);
%%%Time derivatives:
deriv = [longidot; latidot; raddot;...
veldot; gammadot; headdot; mdot];

12.3 Airplane Flight Paths
319
0
0.5
1
1.5
2
2.5
0.012
0.014
0.016
0.018
0.02
0.022
0.024
0.026
0.028
M
CD0
Fig. 12.16. The parasite drag coeﬃcient of a jet ﬁghter in clean conﬁguration.
Table 12.6. M-ﬁle parasite.m for the Parasite Drag Coeﬃcient of a Fighter Airplane
function cd0=parasite(mach)
%parasite drag coefficient of a fighter airplane (tabular data)
M=[0 0.5 0.87 0.9 0.925 0.95 0.96 0.97 1 1.02...
1.03 1.04 1.05 1.06 1.07 1.08 1.09 1.1 1.11...
1.12 1.15 1.16 1.2 1.5 1.75 2.0 2.25 2.5];
cd=[0.0127 0.013 0.0135 0.0137 0.0143 0.0155 0.016...
0.01654 0.01875 0.02095 0.02225 0.02335 0.024...
0.024325 0.0246 0.02482 0.0249 0.025 0.025 0.025...
0.024855 0.02478 0.024 0.022 0.021 0.0205 0.02 0.0197];
cd0=interp1(M,cd,mach);
We have assumed the following variation of s with CL:
s =
⎧
⎨
⎩
0.9,
CL ≤0.1,
0.1
CL −0.1, 0.1 < CL ≤1,
0,
CL > 1.
Of course, s = 0 when the leading edge is supersonic, i.e., M > sec ΛE.
The simulation results are shown in Figs. 12.18–12.22. The accelerated
climb is evident from Fig. 12.18, which shows a continuous increase in both
airspeed and altitude until h = 11, 390 m, where the speed attains a maximum
value of v = 387 m/s, followed by a decline in the speed to v = 361.8 m/s,
at the maximum altitude of h = 15, 215 m. The stall boundary dictated by

320
12 Atmospheric and Transatmospheric Trajectories
0
0.5
1
1.5
2
0.05
0.1
0.15
0.2
0.25
0.3
0.35
0.4
Mach Number, M
K100
K0
Fig. 12.17. The lift-dependent drag factors of a jet ﬁghter with zero and full leading-
edge suction.
Table 12.7. M-ﬁle liftddf.m for the Lift-Dependent Drag Factor of a Fighter Air-
plane
function K=liftddf(mach,CL,sweep,AR)
%lift-dependent drag factor with leading-edge suction
%method
M=[0 0.5 1 1.2 1.5 1.8 2];
k0=[0.32 0.3 0.26 0.24 0.27 0.28 0.3];
k100=[1 1 1 1.2222 1.8889 3.1111 3.3333]/(pi*AR);
K0=interp1(M,k0,mach);
K100=interp1(M,k100,mach);
if mach>1/cos(sweep)
s=0;
elseif CL<=0.1
s=0.9;
else
s=0.1/CL-0.1;
end
if s<0
s=0;
end
K=s*K100+(1-s)*K0;

12.3 Airplane Flight Paths
321
0
2000
4000
6000
8000
10000 12000 14000 16000
50
100
150
200
250
300
350
400
Altitude, h (m)
v (m/s)
Stall Boundary, vs(h)
v(h)
Fig. 12.18. The airspeed vs. altitude plot of a jet ﬁghter during accelerated climb.
Table 12.8. M-ﬁle runaccelclimb.m for Solving an Airplane’s State Equations dur-
ing Climb
global dtr; dtr = pi/180;
global mu; mu = 3.986004e14; %(m^3/s^2)
global omega; omega = 2*pi/(23*3600+56*60+4.0905); %(rad/s)
global S; S =
56.5;
%ref area (m^2)
global c; c=3.9926; %mean aerodynamic chord (m)
global rm; rm = 6378140 ;
%Earth’s radius (m)
global b; b=14.1512; % wing-span (m)
global CLmax; CLmax=1.5;
global sweep; sweep=50*pi/180; %LE sweep angle (rad.)
global f8; f8 = fopen(’data8.mat’, ’a’);
%initial condition:
long =70*dtr;
%initial longitude (rad)
lat = 20*dtr;
%latitude (rad)
radint=rm+200;
%radius (m)
velint=69;
%speed (m/s)
fpaint=40*dtr;
%flight-path angle (rad)
chiint=270*dtr;
%velocity azimuth (from north) (rad)
m=17350;
%aircraft mass (kg)
%solution of state equations:
options=odeset(’RelTol’,1e-4);
init = [long; lat; radint; velint; fpaint; chiint; m];
[t, o] = ode45(’accelclimb’,[0, 80], init,options);
fclose(’all’);

322
12 Atmospheric and Transatmospheric Trajectories
0
10
20
30
40
50
60
70
80
39.95
40
40.05
40.1
Time (s)
φ (deg.)
0
10
20
30
40
50
60
70
80
269.6
269.7
269.8
269.9
270
Time (s)
A (deg.)
Fig. 12.19. The ﬂight-path and heading angles of a jet ﬁghter during accelerated
climb.
the level stalling speed, vs, also plotted in Fig. 12.18, is never violated during
the climb.15 The ﬂight-path angle, φ, and the velocity azimuth (heading),
A, show only a small variation in Fig. 12.19, thereby conﬁrming an almost
straight-line trajectory, whose ground track is plotted in Fig. 12.20. The speed
and rate of climb time history are shown in Fig. 12.21, which depicts an
almost uniformly increasing rate of climb, attaining a maximum value of ˙h =
248.77 m/s at t = 64.26 s, and thereafter declining to ˙h = 232.44 m/s at
t = 80 s. Figure 12.22 shows time-history plots of the Mach number, lift
coeﬃcient, dynamic pressure, q, and mass of consumed fuel. The Mach number
attains a maximum of M = 1.3119 at t = 65.06 s, and then declines to
M = 1.2256 at t = 80 s. The lift coeﬃcient decreases for the ﬁrst 39.25 s, when
it reaches a minimum of CL = 0.05674, and then increases to CL = 0.1768
at the end of simulation. The dynamic pressure reaches a maximum value of
q = 39, 430 N/m2 nearly at the same time as the lift coeﬃcient becomes a
minimum, and then declines almost steadily due to increasing altitude and a
decreasing speed. This behavior of the dynamic pressure can be understood
from the fact that the lift, L = mg cos φ, remains nearly constant due to a
small variation in the mass and ﬂight-path angle and, thus, q varies almost
15 In a climb, the stall boundary is exactly given by vs cos φ rather than vs. Thus,
it is more conservative to restrict v ≥vs.

12.3 Airplane Flight Paths
323
69.75
69.8
69.85
69.9
69.95
70
19.9993
19.9994
19.9995
19.9996
19.9997
19.9998
19.9999
20
λ (deg.)
δ (deg.)
Fig. 12.20. The ground track of a jet ﬁghter during accelerated climb.
0
10
20
30
40
50
60
70
80
0
50
100
150
200
250
300
350
400
Time (s)
(m/s)
dh/dt (=v sinφ)
v
Fig. 12.21. The airspeed and rate of climb of a jet ﬁghter during accelerated climb.

324
12 Atmospheric and Transatmospheric Trajectories
0
10
20
30
40
50
60
70
80
0
0.2
0.4
0.6
0.8
1
1.2
1.4
Time (s)
M
CL
q(×105N/m2)
Fuel consumption (×1000 kg)
Fig. 12.22. Additional ﬂight parameters of a jet ﬁghter during accelerated climb.
inversely with CL. The total fuel consumption during the simulated ﬂight is
809.665 kg (4.67% of initial mass).
By employing a diﬀerent initial climb angle, we can obtain a very diﬀerent
trajectory. Hence, the ﬂight-path angle can be regarded as the primary control
input in an accelerated climb. In the earlier jet ﬁghters of much smaller thrust,
it was often impossible to penetrate the transonic regime of high wave drag in
a climbing ﬂight. Therefore, a suitable variation of the ﬂight-path angle was
employed, such that the accelerated climb was performed at subsonic Mach
numbers, followed by an almost level (or even diving) acceleration through
the transonic regime, and a supersonic climb. In the modern ﬁghters, such a
variation of φ is unnecessary, as demonstrated by Example 12.4. Traditionally,
the modulation of φ to achieve optimum climb trajectories, such as those that
minimize the time or the fuel consumption, were carefully constructed out
of quantities pertaining to a quasi-steady climb. The process of optimizing
the accelerated climb consisted of plotting a trajectory on the airspeed vs.
altitude (or Mach number vs. altitude) map, such that it always followed
the maximum instantaneous value of the quantity under maximization. For
example, if a minimum time to a pair of speed (or Mach number) and altitude,
(h, v), is required, the airplane must always follow a trajectory that passes
through the maximum instantaneous values of the speciﬁc excess power (SEP),
Ps = (fT −D)v
mgc
(which is also the instantaneous rate of quasi-steady climb).

12.3 Airplane Flight Paths
325
The pair (h, v) thus represents the total speciﬁc energy level (sum of potential
and kinetic energies per unit mass) of the airplane, whose rate of change is
the SEP. The minimum-time trajectory is thus obtained by plotting a path
on the h vs. v (or M ) diagram, where the contours of the maximum SEP
are tangential to the contours of the speciﬁc energy level, h + v2
2gc . Similarly,
the minimum-fuel trajectory can be constructed out of line joining the points
of tangency of energy-level contours and the contours of fuel-speciﬁc energy,
Ps
cT fT [33]. However, with the direct simulation of accelerated climb (presented
above), the optimization process is greatly simpliﬁed and consists of variation
in the initial condition. For instance, the trajectory obtained in Example 12.4
is very close to the minimum-time trajectory to h = 15, 200 m, M = 1.2.
12.3.5 Maneuvers and Supermaneuvers
Maneuver is the name given to a deliberately curved ﬂight path through an
aero-propulsive force vector normal to the ﬂight path. As discussed earlier
in the chapter, a desired general ﬂight-path curvature can be achieved either
by a combination of lift modulation and banking in a coordinated ﬂight, or
through direct side force and normal force generated by thrust vectoring in
an airplane equipped accordingly. Such maneuvers can be performed by either
airplanes or missiles; hence we make no further distinction between the two
kinds of atmospheric vehicles.16 Normally, an airplane maneuver is conﬁned
to either the vertical or the horizontal plane. In both the cases, the necessary
centripetal acceleration is produced by a lift force greater than the weight.
This is accomplished by ﬂying at a large angle of attack, thereby increasing
the lift coeﬃcient. The maximum lift coeﬃcient is limited by aerodynamic
(stall) and structural constraints, as discussed above. Certain well-deﬁned an-
alytical results are possible by studying approximate equations of motion in a
maneuvering ﬂight [34]. It is a common practice to neglect airspeed variations
during a horizontal turn, which is called a steady turn approximation. In a
vertical turn (also known as a pitch maneuver), either the lift coeﬃcient or
the load factor can be assumed constant. Furthermore, there is a special class
of analytical trajectories called conservative maneuvers, in which the non-
conservative force (drag) is balanced by the thrust force (fT = D). If the drag
is neutralized, there is no other force opposing the motion, hence the total en-
ergy (speciﬁc energy level) is conserved. In a conservative horizontal turn, the
airplane maintains its speed and altitude, while a conservative vertical turn is
an exchange between potential energy (altitude) and kinetic energy (speed).
We refer the reader to Miele [34] for an excellent treatment of conservative
maneuvers.
Since the earliest days of ﬂying, both vertical and horizontal maneuvers
have been extensively studied and adopted in aerobatic and ﬁghter airplanes.
16 Certain air-to-air missiles are spin-stabilized and create a normal aerodynamic
force out of the Magnus eﬀect due to the spinning motion in a sideslip. Their
modeling must include the rolling motion, and is thus postponed until Chapter 13.

326
12 Atmospheric and Transatmospheric Trajectories
An air-combat ﬁghter airplane is primarily designed to turn horizontally at
a high rate in order to achieve the ﬁring-position advantage over an enemy.
Since a loss of energy during turning is disadvantageous, a conservative turn
is desirable whenever possible. However, due to thrust limitation, we often
have fT < D in the high-drag ﬂight of the maximum lift coeﬃcient and load
factor, which is required for the maximum instantaneous turn rate given by
Eq. (12.35). The airspeed at its minimum possible value (the stalling speed)
for the maximum possible load factor, ¯n, that maximizes the instantaneous
turn rate, is called the corner speed, because it occurs at the intersection of
the curves for CL = CL max and n = ¯n on a v-n diagram, and is given by
vc =
'
2¯nmg
ρSCL max
.
(12.52)
It is clear the corner speed is ﬁxed for a given altitude. Since a turn at the
corner speed is often nonconservative, neither the speed nor the altitude will
remain constant during the maximum instantaneous turn. Turning at the
maximum possible rate is often a matter of survival and is thus indispensible.
For this reason, a dog-ﬁght that begins at a high altitude normally ends near
the sea level. This limitation of air-combat maneuverability by coordinated
turning has plagued all ﬁghter airplanes from the Sopwith Camel and Albatross
D-V of the ﬁrst world war, to the F-16 and F-22 of the present day.17
In order to increase the maneuverability of airplanes without an excessive
loss of energy, the concept of supermaneuvers is under investigation. A su-
permaneuver refers to a maneuver assisted by thrust vectoring, where thrust
components enhance the lift and the side force. Since it is no longer necessary
to balance both weight and centripetal acceleration by aerodynamic lift in a
supermaneuver, the stalling restriction is eﬀectively removed as a constraint.
Furthermore, since the wings have to produce less lift in a supermanuever,
the load factor on the wing is reduced, thereby also alleviating the structural
constraint. However, a supermaneuverable airplane must have a much greater
thrust (due to a high post-stall drag) than a conventional airplane of similar
size, as well as a capability to provide balancing moments either by addi-
tional lifting surfaces (such as canards) or by small jet thrusters, and should
be equipped with an automatic ﬂight control system (for the rapid modula-
tion and precision required in thrust vectoring while maneuvering). NASA’s
X-31 technology-demonstrator airplane explored the concept of supermaneu-
verability by having a paddle-type thrust-vectoring nozzle, canard surfaces,
and a computerized, ﬂy-by-wire, ﬂight control system. It demonstrated suc-
cessful thrust-induced maneuvering at angles of attack of about 70◦[37], while
the stalling angle of attack of the airplane was approximately 30◦. The X-31
17 Although the close combat of the former era has been largely replaced by the
beyond visual range (BVR) combat with radar-guided missiles, the guns have not
been entirely removed from the modern ﬁghters. This implies that the classic
combat is still a part of a modern ﬁghter’s mission.

12.3 Airplane Flight Paths
327
also displayed the advantage of fuselage pointing, which is the name given
to willfully pointing the airplane’s nose in a given direction without turning
the velocity vector by a maneuver. Fuselage pointing is very valuable in air
combat, as it enables aiming and ﬁring of weapons in a direction diﬀerent
from the velocity vector.
We shall now simulate the conventional maneuvers and a supermaneuver
of a ﬁghter airplane.
0
5
10
15
20
25
30
12
12.002
12.004
12.006
12.008
Time (s)
h (km)
0
5
10
15
20
25
30
379.6
379.8
380
380.2
380.4
Time (s)
v (m/s)
Fig. 12.23. The airspeed and altitude time history of a jet ﬁghter during a sustained
turn.
Example 12.5. Consider a horizontal maneuver of the ﬁghter airplane of Ex-
ample 12.4, beginning from a straight and level ﬂight toward the west at initial
altitude h = 12 km, position δ = 20◦, λ = 70◦, relative speed v = 450 m/s,
and mass m = 16, 350 kg. We consider the following options:
(a) A turn with a constant bank angle σ = 77.07◦, during which the lift coef-
ﬁcient is modulated in order to maintain a nearly level ﬂight with a constant
load factor, n = sec σ, such that
CL = 2nmg
ρSv2 .
(b) A nearly level turn with the maximum lift coeﬃcient, CL max = 1.5, at
v < vc, and the bank angle modulated to achieve the maximum possible load

328
12 Atmospheric and Transatmospheric Trajectories
0
5
10
15
20
25
30
0
0.05
0.1
Time (s)
φ (deg.)
0
5
10
15
20
25
30
−200
−150
−100
−50
0
Time (s)
A (deg.)
Fig. 12.24. The ﬂight-path and heading angles of a jet ﬁghter during a sustained
turn.
factor (limited by ¯n = 7.5) at a given instant. For v > vc, the maximum
bank angle is employed for which n = ¯n, while the lift coeﬃcient (limited by
CL max) is modulated to achieve level ﬂight. Such a proﬁle would yield the
maximum turn rate for the instantaneous airspeed.
(c) A supermaneuver with μ = 0 and the angle ϵ modulated in such a way
that the level turn of case (b) occurs at an enhanced rate. The angle ϵ is held
constant at diﬀerent values for airpseeds above and below the corner speed
vc, such that the lift coeﬃcient is enhanced for v > vc, while the load factor
is enhanced for v < vc.
The structural limitations of Example 12.4 are valid in all the cases.
We present a MATLAB program maneuver.m for case (a) in Table 12.9 and
assume that the global variables and the initial condition are duly speciﬁed
in a calling program. The resulting plots for case (a) simulated for 28 seconds
are shown in Figs. 12.23–12.26. The turn at a sustained rate is evident from
Fig. 12.23, showing that the altitude and airspeed are nearly constant during
the almost 180◦turn (Fig. 12.24), which gives a nearly circular ground track
(Fig. 12.25) and almost constant values of M, CL, and q (Fig. 12.26). The
average turn rate in case (a) is 180◦
28
= 6.4286◦/s.
For the simulation of
cases (b) and (c), the program maneuver.m is modiﬁed to supmaneuver.m
(Table 12.10), where the bank angle is no longer constant, but depends upon

12.3 Airplane Flight Paths
329
Table 12.9. M-ﬁle maneuver.m for an Airplane’s State Equations during a Hori-
zontal Turn
function deriv = maneuver(t,o)
global dtr; global mu; global omega; global S; global c;
global rm; global b; global CLmax; global sweep;
global n; global bank;
global f8; %data file for additional flight parameters
%acceleration due to gravity (nonspherical earth):
[g,gn]=gravity(o(3),o(2));
lo = o(1);la = o(2);
clo = cos(lo); slo = sin(lo); cla = cos(la); sla = sin(la);
fpa = o(5); chi = o(6);
cfpa = cos(fpa); sfpa = sin(fpa); cchi = cos(chi); schi = sin(chi);
%atmospheric properties:
if o(3)<rm
o(3)=rm;
end
alt = o(3) - rm;
v
= o(4);
atmosp = atmosphere(alt,v,c);
rho = atmosp(2);
Qinf = 0.5*rho*v^2;
mach = atmosp(3);
if mach<0
mach=0;
elseif mach>2.25
mach=2.25;
end
%aero-propulsive parameters:
[fT,tsfc]=engine(alt,mach);
fT=2*fT;
m=o(7);
CD0=parasite(mach); CL=n*m*g/(Qinf*S);
if CL>CLmax
%stall condition
CL=0
end
K=liftddf(mach,CL,sweep,b^2/S);
%ground effect:
if alt<=b
Keff=K*33*(alt/b)^1.5/(1+33*(alt/b)^1.5);
else
Keff=K;
end
CD=CD0+Keff*CL^2;
D=Qinf*S*CD; L=Qinf*S*CL;
Xfo = fT-D; Zfo = L*cos(bank); Yfo = L*sin(bank);
fprintf(f8,’\t%1.5e\t%1.5e\t%1.5e\t%1.5e\t%1.5e\n’,t,alt,CL,mach,Qinf);
%state equations:
longidot = o(4)*cfpa*schi/(o(3)*cla);
latidot =
o(4)*cfpa*cchi/o(3);
raddot = o(4)*sfpa;
veldot = -g*sfpa +gn*cchi*cfpa + Xfo/m...
+ omega*omega*o(3)*cla*(sfpa*cla-cfpa*cchi*sla);
gammadot=(o(4)/o(3)-g/o(4))*cfpa-gn*cchi*sfpa/o(4)...
+Zfo/(o(4)*m)+ 2*omega*schi*cla...
+omega*omega*o(3)*cla*(cfpa*cla + sfpa*cchi*sla)/o(4);
headdot=o(4)*schi*tan(o(2))*cfpa/o(3)-gn*schi/o(4)...
-Yfo/(o(4)*cfpa*m)-2*omega*(tan(o(5))*cchi*cla-sla)...
+omega*omega*o(3)*schi*sla*cla/(o(4)*cfpa);
mdot=-tsfc*fT/(9.8*3600);
%time derivatives:
deriv=[longidot; latidot; raddot; veldot; gammadot; headdot; mdot];

330
12 Atmospheric and Transatmospheric Trajectories
Table 12.10. M-ﬁle supmaneuver.m for an Airplane’s State Equations during a
Horizontal Supermaneuver
function deriv = maneuver(t,o)
global dtr;global mu;global omega;global S;global c;global rm;
global b;global CLmax;global sweep;global n;
global f8;
%data file for additional flight parameters
%acceleration due to gravity (nonspherical earth):
[g,gn]=gravity(o(3),o(2));
lo = o(1);la = o(2);
clo = cos(lo); slo = sin(lo); cla = cos(la); sla = sin(la);
fpa = o(5); chi = o(6);
cfpa = cos(fpa); sfpa = sin(fpa); cchi = cos(chi); schi = sin(chi);
%atmosphere determination:
if o(3)<rm
o(3)=rm;
end
alt = o(3) - rm;
v=o(4);
m=o(7);
atmosp = atmo_sre(alt,v,c);
rho = atmosp(2);
mach = atmosp(3);
if mach<0
mach=0;
elseif mach>2
mach=2;
end
Qinf = 0.5*rho*v^2;
[fT,tsfc]=engine(alt,mach);
fT=2*fT;
CD0=parasite(mach);
vc=sqrt(2*n*m*g/(rho*S*CLmax)); %corner speed (m/s)
if v>=vc
nb=n;
epsilon=13.5*dtr;
CL=n*(m*g-fT*sin(epsilon))/(Qinf*S);
if CL>CLmax
CL=CLmax;
epsilon=0;
end
else
CL=CLmax;
epsilon=32*dtr;
nb=Qinf*S*CLmax/(m*g-fT*sin(epsilon));
if nb>n
nb=n;
epsilon=0;
end
end
if nb>1
bankb=acos(1/nb);
else
bankb=0;
end
K=liftddf(mach,CL,sweep,b^2/S);
if alt<=b
Keff=K*33*(alt/b)^1.5/(1+33*(alt/b)^1.5);
else
Keff=K;
end
CD=CD0+Keff*CL^2;
D=Qinf*S*CD; L=Qinf*S*CL;
Xfo = fT*cos(epsilon)-D; Zfo = fT*sin(epsilon)+L*cos(bankb);
Yfo = L*sin(bankb);

12.3 Airplane Flight Paths
331
%trajectory equations:
longidot = v*cfpa*schi/(o(3)*cla);
latidot =
v*cfpa*cchi/o(3);
raddot = v*sfpa;
%Radius
veldot = -g*sfpa +gn*cchi*cfpa + Xfo/m...
+ omega*omega*o(3)*cla*(sfpa*cla-cfpa*cchi*sla);
gammadot = (v/o(3)-g/v)*cfpa-gn*cchi*sfpa/v...
+ Zfo/(v*m) + 2*omega*schi*cla...
+ omega*omega*o(3)*cla*(cfpa*cla + sfpa*cchi*sla)/v;
headdot = v*schi*tan(o(2))*cfpa/o(3)-gn*schi/v...
- Yfo/(v*cfpa*m)- 2*omega*(tan(o(5))*cchi*cla - sla)...
+ omega*omega*o(3)*schi*sla*cla/(v*cfpa);
mdot=-tsfc*fT/(9.8*3600);
fprintf(f8,’\t%1.5e\t%1.5e\t%1.5e\t%1.5e\t%1.5e\n’,t,CL,mach,nb,headdot);
%time derivatives:
deriv = [longidot; latidot; raddot; veldot; gammadot; headdot; mdot];
the airspeed. Furthermore, the lift coeﬃcient is also modulated with airspeed,
as discussed above. The simulation for case (b) is obtained by setting ϵ = 0
at all times in supmaneuver.m, while in case (c) ϵ = 13.5◦for v ≥vc, and
ϵ = 32◦for v < vc. These values of ϵ are selected by trial and error to
yield the maximum turn angle in a nearly level ﬂight. Cases (b) and (c)
are simulated for 45 seconds, and their results are compared in Figs. 12.27–
12.31. It is evident in Fig. 12.27 that the total change in azimuth by the
69.94
69.95
69.96
69.97
69.98
69.99
70
20
20.005
20.01
20.015
20.02
20.025
20.03
20.035
20.04
λ (deg.)
δ (deg.)
Fig. 12.25. The ground track of a jet ﬁghter during a sustained turn.

332
12 Atmospheric and Transatmospheric Trajectories
0
5
10
15
20
25
30
0.54
0.55
0.56
CL
0
5
10
15
20
25
30
1.286
1.288
1.29
1.292
M
0
5
10
15
20
25
30
22.55
22.6
22.65
22.7
Time (s)
q (×1000N/m2)
Fig. 12.26. The Mach number, lift-coeﬃcient, and dynamic pressure of a jet ﬁghter
during a sustained turn.
supermaneuver [case (c)] is much larger than that due to the normal maneuver
[case (b)] in the same time, which indicates a higher average turn rate of the
former. The airspeed in the normal maneuver is always smaller than that in
the supermaneuver, while the ﬂight-path angle changes little in both cases
(| φ |≤0.6◦), indicating a nearly constant altitude (level turn). The latter
observation is conﬁrmed by Fig. 12.28, showing the time-history plots of the
speciﬁc potential energy (indicated by the altitude, h), the speciﬁc kinetic
energy, v2
2g, and the total energy level, he = h + v2
2g . It is clear that a much
larger energy level is maintained in the supermaneuver when compared to
that in the normal maneuver. The nonconservative nature of both maneuvers
is evident by the fact that the energy level is not constant in either case.
The ground track plotted in Fig. 12.29 depicts a larger angle of turn and
also a higher average turn radius (due to the higher speed) for the superma-
neuver. Hence, a higher turn rate does not always imply a smaller turn radius.
The load factor, instantaneous turn rate, and bank angle are plotted with re-
spect to the Mach number in Fig. 12.30. It is clear that the maximum load
factor, n = ¯n = 7.5 (and the corresponding bank angle, σ = cos−1 1
¯n = 82.34◦)
is maintained for a much longer time, even during a part of subsonic ﬂight,
in the supermaneuver, whereas the normal maneuver has n = ¯n only at su-
personic speeds. Also, the load factor of the supermaneuver is always higher

12.3 Airplane Flight Paths
333
0
5
10
15
20
25
30
35
40
45
11.95
12
12.05
h (km)
0
5
10
15
20
25
30
35
40
45
0
5
10
15
v2/(2g) (km)
0
5
10
15
20
25
30
35
40
45
10
15
20
25
Time (s)
h + v2/(2g) (km)
Normal maneuver
Supermaneuver
Fig. 12.27. The energy level vs. altitude of a jet ﬁghter during instantaneous turns
with and without thrust vectoring.
than that of the normal maneuver. Hence, the supermaneuver maintains a
high instantaneous turn rate over a larger portion of the ﬂight compared to
the normal maneuver, leading to a higher average turn rate. The Mach num-
ber and lift coeﬃcient time-history plots are shown in Fig. 12.31. The slower
trajectory of the normal maneuver (smaller M, larger CL) compared to the su-
permaneuver is clear in this ﬁgure. While the normal maneuver is performed
at the stalling speed for almost 30 seconds (out of 45), the supermaneuver
requires CL = CL max for only the last 11 seconds. This is due to the en-
hanced lift provided by thrust vectoring, precluding the necessity of ﬂying at
the stalling speed most of the time.
The supermaneuver can be further enhanced by employing a sideways
thrust deﬂection (μ ̸= 0), thereby increasing the instantaneous rate of turn.
However, since the deﬂected thrust decreases the forward thrust component,
fT cos ϵ cosμ, the net deceleration would increase in this case, leading to a
smaller speed and loss of energy level. Hence, the sideways deﬂection of thrust
is employed only when the available thrust, fT , is very much larger than the
drag.

334
12 Atmospheric and Transatmospheric Trajectories
0
10
20
30
40
50
−1
0
1
φ (deg.)
0
5
10
15
20
25
30
35
40
45
−400
−200
0
A (deg.)
0
5
10
15
20
25
30
35
40
45
100
200
300
400
Time (s)
v (m/s)
Normal maneuver
Supermaneuver
Fig. 12.28. The ﬂight-path angle, heading angle, and airspeed of a jet ﬁghter during
instantaneous turns with and without thrust vectoring.
12.4 Entry Trajectories
The problem of atmospheric entry from an orbital or suborbital trajectory is
of primary interest in manned space missions, aeroassisted orbital transfers,
robotic lander and sample return missions, as well as in the ﬂight of surface-
to-surface missiles. The ubiquitous meteors are the earliest known and most
common entry objects [38], which awed the ﬁrst humans as shooting stars.
They were recognized as rocks from space only in the late 19th century. The
study of meteoric trajectories ﬁrst employed an approximate form of equa-
tions of motion derived in the previous section. Apart from the equations of
motion, it is also necessary to include the aerothermal loads (Chapter 10)
caused by the high speeds of atmospheric entry, which, in turn, are capa-
ble of modifying the shape and size of the object or even of disintegrating
it into several smaller objects. Therefore, when modeling a re-entry trajec-
tory, one must take into account the loads caused by high heating rates and
dynamic pressures, as well as the structural and material changes brought
upon by these loads, in the form of additional diﬀerential equations. While it
is beyond the scope of this book to derive such equations in a general case,
we mention here that the aerothermal loads can be estimated by statistical
(or semi-empirical) aerothermal models or, more accurately, by sophisticated
computational aerothermodynamic models, as pointed out in Chapter 10.

12.4 Entry Trajectories
335
69.94
69.95
69.96
69.97
69.98
69.99
70
70.01
19.98
19.99
20
20.01
20.02
20.03
20.04
λ (deg.)
δ (deg.)
Normal maneuver
Supermaneuver
Fig. 12.29. The ground track of a jet ﬁghter during instantaneous turns.
Since the objective of a re-entry vehicle is to slow down, while safely
dissipating the kinetic energy of entry into the atmosphere, we shall begin
our analysis of re-entry trajectories by dropping the propulsive terms from
Eq. (12.29), resulting in
m˙v = −D −mgc sin φ + mgδ cos φ cos A −mω2r cos δ(cos φ cos A sin δ
−sin φ cos δ),
mv cos φ ˙A = mv2
r cos2 φ sin A tan δ + fY −mgδ sin A
+mω2r sin A sin δ cos δ
−2mωv(sin φ cos A cos δ −cos φ sin δ),
(12.53)
mv ˙φ = mv2
r cos φ + L −mgc cos φ −mgδ sin φ cos A
+mω2r cos δ(sinφ cos A sin δ
+ cosφ cos δ) + 2mωv sin A cos δ .
The kinematic equations, Eqs. (12.10), (12.14), and (12.15), remain un-
changed. The aerodynamic forces of lift, L, drag, D, and side force, fY , chieﬂy
determine the atmospheric entry trajectory. These forces, in turn, are depen-
dent upon the vehicle’s shape and size, as well as on its relative speed, altitude,
and attitude. Since the relative speed, altitude, and attitude vary with time,

336
12 Atmospheric and Transatmospheric Trajectories
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
1
2
4
6
8
n
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
0
5
10
15
˙A (deg/s)
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
0
50
100
M
σ (deg.)
Supermaneuver
Normal Maneuver
Fig. 12.30. The load factor, turn rate, and bank angle of a jet ﬁghter during
instantaneous turns.
we must specify aerodynamic relationships as additional equations for deter-
mining the instantaneous aerodynamic forces as functions of time. As pointed
out in Chapter 4, it is generally a good approximation to specify the attitude
parameters as external inputs to the translational motion, due to the smaller
time scales of rotational maneuvers. However, for greater accuracy, both trans-
lational and rotational equations of motion must be solved simultaneously to
yield a six-degree-of-freedom simulation (Chapter 15).
There are two broad categories of atmospheric entry trajectories: (a) the
ballistic entry, where the lift and side force are negligible in comparison with
the drag, and (b) the maneuvering entry, wherein the lift and side force are
signiﬁcant and are used to change the ﬂight-path direction. If the vehicle’s
shape is nearly axisymmetric with respect to the velocity vector, such as in
the ballistic missile warheads, and the Soyuz, Mercury, Gemini, and Apollo
manned capsules, the assumption of ballistic re-entry is valid. In a ballistic
re-entry, either the vehicle’s shape and the center of gravity—through de-
liberate design—ensure static aerodynamic stability, essentially aligning the
vehicle’s axis of symmetry along the ﬂight direction (somewhat like a bad-
minton shuttle), or an active attitude control system can be employed for the
same purpose. This is important for meeting the ballistic constraint, because
even a re-entry capsule, shaped like an inverted bottle, can produce an appre-
ciable lift (or side force) when operated at an angle of attack (or sideslip). The

12.4 Entry Trajectories
337
0
10
20
30
40
50
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
Time (s)
CL
M
Normal Maneuver 
Supermaneuver
Fig. 12.31. The Mach number and lift coeﬃcient of a jet ﬁghter during instanta-
neous turns.
Apollo re-entry capsules employed such a lifting maneuver for controlling the
initial ﬂight path at re-entry. NASA’s space shuttle is a maneuvering re-entry
vehicle, which employs large bank angles to produce both lift and side force
from its wings during re-entry. By changing the bank angle in a speciﬁc man-
ner, the re-entry ﬂight path can be controlled. Up to a certain extent, the lift
coeﬃcient can also be varied by changing the angle of attack. The modulation
of the lift and side force through the bank angle and angle of attack forms the
basis for the re-entry guidance and control.
In any entry trajectory, the rate of heat transfer is of utmost important.
The total rate of convective heat transfer over an a ballistic entry vehicle, ˙Q,
can be related semi-empirically [19] to its drag coeﬃcient as follows:
˙Q = 1
2ρv3 SCD
20
,
(12.54)
which implies that the heating rate increases with the cube of the relative
speed. Equation (12.54) entails a boundary-layer approximation (Chapter 10),
with the assumption that about one tenth of the vehicle’s drag is caused by
the skin friction (which is responsible for heat transfer from the atmosphere
to the vehicle). As we know from Chapter 10, the remaining drag is pressure-
induced and includes the wave drag and ﬂow separation drag. A lifting entry
vehicle would have a much larger portion of drag caused by skin friction.

338
12 Atmospheric and Transatmospheric Trajectories
12.4.1 Ballistic Entry
The equations of dynamic translational motion during a ballistic re-entry can
be easily obtained by dropping the lift and side force from Eq. (12.53), yielding
m˙v = −D −mgc sin φ + mgδ cos φ cos A −mω2r cos δ(cos φ cos A sin δ
−sin φ cos δ),
mv cos φ ˙A = mv2
r cos2 φ sin A tan δ −mgδ sin A
+mω2r sin A sin δ cos δ
−2mωv(sin φ cos A cos δ −cos φ sin δ),
(12.55)
mv ˙φ = mv2
r cos φ −mgc cos φ −mgδ sin φ cos A
+mω2r cos δ(sinφ cos A sin δ + cos φ cos δ)
+2mωv sin A cos δ .
As before, there is no change in the equations of kinematic motion, Eqs. (12.10),
(12.14), and (12.15). The variation of the drag with relative speed and altitude
can be represented by
D = 1
2ρv2SCD(Kn, M, Re),
(12.56)
where ρ is the atmospheric density, S is a reference area for aerodynamics,
CD is the drag coeﬃcient based on S, being a function of the Knudsen num-
ber, Kn, the Mach number, M, and the Reynolds number, Re, which are the
governing nondimensional ﬂow parameters (Chapter 10). Diﬀerent expres-
sions are employed for CD in each ﬂow regime, such as the free molecular
(Kn > 10), rareﬁed transitional (0.1 < Kn < 10), or continuum (Kn < 0.1)
based upon the Knudsen number, hypersonic continuum (M ≫1), supersonic
continuum (M > 1), transonic continuum (M ≈1), or subsonic continuum
(M < 1) in terms of the Mach number, and laminar continuum, or turbulent
continuum in terms of the Reynolds number. In each regime, the drag coef-
ﬁcient is expressed as a function of the deﬁning ﬂow parameter. In a typical
atmospheric entry trajectory, the critical Reynolds number is easily crossed,
and we are primarily dealing with turbulent ﬂow in the continuum regime.
Furthermore, the drag coeﬃcient becomes independent of the Mach number
for speeds larger than a critical hypersonic Mach number in the continuum
regime (Chapter 10). In the transitional, rareﬁed ﬂow regime, a suitable in-
terpolation of the drag coeﬃcient with the Knudsen number is employed. It
would be suﬃcient for our purpose of modeling and simulation to assume that
the functions deﬁning the drag coeﬃcient are known, and thus there is no dif-
ﬁculty in calculating CD at a given combination of r and v. For an analytical
insight into ballistic entry, further simplifying assumptions can be made, such
as a ﬂat, nonrotating planet, planar motion, etc., which we shall not employ

12.4 Entry Trajectories
339
here, as they depart from our objective of accurate modeling. A reader can
refer to the excellent textbooks devoted to analytical atmospheric entry me-
chanics, [39], [40], and [19].
Example 12.6. Simulate the ballistic entry into the earth’s atmosphere of a
space capsule of mass 350 kg from an orbit of perigee altitude 200 km, eccen-
tricity 0.2, inclination 80◦, argument of perigee, 265◦, and right ascension of
ascending node, 100◦. The de-boost impulse is applied tangentially when the
right ascension and east longitude are 0◦and −10◦, respectively. Carry out
the simulation with diﬀerent de-boost impulse magnitudes in the range 0.1 to
0.2 times the perigee speed. The capsule possesses longitudinal static stability
that tends to achieve an equilibrium attitude with zero angle of attack and
sideslip, for which condition its drag coeﬃcient (referred to the base area,
S = 4 m2) is the following:
CD = CDc (Kn < 0.0146)
CD = CDfm (Kn > 14.5),
CD = CDc + (CDfm −CDc)
1
3 log10
Kn
sin 30◦+ 0.5113

(0.0146 < Kn < 14.5),
where CDc is the drag coeﬃcient in the continuum limit, plotted in Fig. 12.32
as a function of Mach number, CDfm is the drag coeﬃcient in the free-
molecular ﬂow limit with cold-wall approximation (Chapter 10), given by
CDfm = 1.75 +
√π
2s ,
with s =
v
√
2RT denoting the molecular speed ratio (Chapter 10), and the
Knudsen number, Kn, is based on a nose radius of 0.5 m. Note that in
Fig. 12.32, the hypersonic Mach number independence principle (Chapter 10)
is valid; thus CDc becomes essentially invariant with M for M > 8. Before we
begin the simulation, we must obtain the initial condition for ballistic entry.
This involves the assumption of Keplerian motion (no drag and a spherical
earth gravity) for the orbit. The semi-major axis of the initial orbit is easily
calculated as
a =
rp
1 −e = 6578.14
0.8
= 8222.675 km ,
from which the perigee speed is obtained as
vp =
(
μ
 2
rp
−1
a

= 8.527229115 km/s .
It still remains to determine the radius, r0, latitude, δ0, and inertial velocity
when the spacecraft reaches the de-boost point. The latitude of the de-boost

340
12 Atmospheric and Transatmospheric Trajectories
Fig. 12.32. Variation the capsule’s continuum drag-coeﬃcient with Mach number.
point, δ0, can be obtained by considering its zero right ascension and spherical
trigonometry (Chapter 5) as follows:
δ0 = tan−1[−tan(80◦) sin(100◦)] = −79.8489182889◦.
The rotation matrix representing the orientation of the celestial frame relative
to the perifocal frame (Chapter 5) is calculated to be the following:
C∗.= C3
T (100◦)C1
T (80◦)C3
T (265◦)
=
⎛
⎝
0.185493763
−0.158082884 0.969846310
−0.055792706
0.983688329
0.171010072
−0.981060262 −0.085831651 0.173648178
⎞
⎠,
from which a relationship between the latitude, δ0, and the true anomaly, θ0,
of the de-boost point is obtained to be
r0
⎧
⎨
⎩
cos δ0
0
sin δ0
⎫
⎬
⎭= r0C∗
⎧
⎨
⎩
cos θ0
sin θ0
0
⎫
⎬
⎭,
which yields
cos θ0 = 0.998395412021,
sin θ0 = 0.056626859843 ,

12.4 Entry Trajectories
341
or, θ0 = 3.2462165419◦. Thus, we have the radius and inertial speed immedi-
ately before de-boost as
r0 =
a(1 −e2)
1 + e cos θ0
= 6579.89967 km,
v∗0 =
(
μ
 2
r0
−1
a

= 8.5253285295 km/s .
The perifocal velocity at the de-boost point is given by
v∗0 =
'μ
p [−sin θ0ie + (e + cos θ0)ip]
= −0.40239183995ie + 8.515826873757ip ,
which yields the following celestial velocity at the de-boost point:
v∗0 = C∗
⎧
⎨
⎩
−0.40239183995
8.515826873757
0
⎫
⎬
⎭=
⎧
⎨
⎩
−1.42084764924
8.3993700404
−0.33615683771
⎫
⎬
⎭.
In order to compute the celestial velocity azimuth and elevation at the de-
boost point, we require the rotation matrix relating the local horizon frame
to the celestial frame (Chapter 5),
CLH =
⎛
⎝
cos δ0
0 sin δ0
0
1
0
−sin δ0 0 cos δ0
⎞
⎠,
or,
CLH =
⎛
⎝
0.176244384228 0 −0.984346441568
0
1
0
0.984346441568 0
0.176244384228
⎞
⎠,
which leads to the following inertial velocity in the local horizon frame:
v∗0 = CLH
⎧
⎨
⎩
−1.42084764924
8.3993700404
−0.33615683771
⎫
⎬
⎭=
⎧
⎨
⎩
0.08047836799
8.39937004035
−1.45785208241
⎫
⎬
⎭.
The inertial velocity azimuth, A∗, and ﬂight-path angle, φ∗, are thus calcu-
lated as follows:
φ∗= sin−1 0.08047836799
8.5253285295 = 0.540875◦,
sin A∗=
8.39937004035
8.5253285295 cos(0.540875◦) = 0.98526928065,
cos A∗=
−1.45785208241
8.5253285295 cos(0.540875◦) = −0.17101007166 ,
or, A∗= 99.846552◦.

342
12 Atmospheric and Transatmospheric Trajectories
Let us take the tangential de-boost impulse to be alternately 8.95, 10,
and 15%, of the perigee speed. For instance, in the ﬁrst case of 10% tangen-
tial de-boost, the spacecraft’s inertial speed is instantaneously decreased by
Δv = 0.8527229115 km/s at the point of de-boost. Hence, the inertial speed
immediately after de-boost is v∗0 = 7.67260561806 km/s. Then we transform
the inertial velocity immediately following de-boost into the velocity relative
to the atmosphere as follows:
A = tan−1

tan A ∗−
ωr0 cos δ0
v ∗0 cos φ ∗cos A∗

= 99.955734◦,
φ = tan−1

tan φ ∗cos A
cos A∗

= 0.54681217◦,
v0 = v ∗0
sin φ∗
sin φ = 7.58930433867 km/s.
Similarly, for the other two cases, we have
Δv = 0.15vp = 1.27908436725 km/s,
A = 99.962233◦,
φ = 0.54716522◦,
v0 = 7.16294370544 km/s,
and
Δv = 0.0895vp = 0.7631870057925 km/s,
A = 99.954461◦,
φ = 0.5467426866◦,
v0 = 7.67884008322 km/s.
Clearly, the ﬂight-path angle and the azimuth change little by a changing
impulse magnitude. We are now ready to begin the simulation of the ballistic
entry trajectory.
A MATLAB program called reentry.m (Table 12.11) is written to compute
the time derivatives of all the motion variables, r, δ, λ, v, φ, A, according to the
kinematic and dynamic equations of motion, as well as the variation of aerody-
namic parameters during atmospheric entry. These time derivatives are pro-
vided as inputs to the MATLAB’s intrinsic Runge–Kutta solver, ode45.m, at
each time step. Another program, called runreentry.m (Table 12.12), speciﬁes
the initial condition and invokes ode45.m. As before, the standard atmospheric
and nonspherical earth gravity models are provided by atmosphere.m (Chap-
ter 9) and gravity.m (Chapter 3), respectively.
The simulations are carried
out in each case until the capsule reaches an altitude of approximately 5 km,
after which the capsule lands gently under parachutes (not modeled here). The
results of the simulation are plotted in Figs. 12.33–12.37. Figures 12.33 and
12.34 show the position and velocity of the capsule relative to the earth for

12.4 Entry Trajectories
343
Table 12.11. M-ﬁle reentry.m for State Equations during a Ballistic Entry
function Y = reentry(t,o)
global dtr; global mu; global S; global c; global m;
global rm; global omega; global Gamma;
global f8; %Data tape for storing aerothermal results
%acceleration due to gravity (nonspherical earth):
[g,gn]=gravity(o(3),o(2));
lo = o(1);la = o(2);
clo = cos(lo); slo = sin(lo);
cla = cos(la); sla = sin(la);
fpa = o(5); chi = o(6);
cfpa = cos(fpa); sfpa = sin(fpa);
cchi = cos(chi); schi = sin(chi);
%atmospheric properties and flow parameters:
if o(3)<rm
o(3)=rm;
end
alt = o(3) - rm;
v
= o(4);
atmosp = atmosphere(alt, v, c);
rho = atmosp(2);
Qinf = 0.5*rho*v^2;
mach = atmosp(3);
[t alt v mach]
Kn=atmosp(4);
CDC=conticap(mach);
s = mach*sqrt(Gamma/2);
CDFM=1.75+sqrt(pi)/(2*s);
iflow=atmosp(6);
if iflow==2
%continuum regime
CD=CDC;
elseif iflow==1 %free-molecular flow regime
CD=CDFM;
else
%transition regime
CD = CDC + (CDFM - CDC)*(0.333*log10(Kn/sin(pi/6))+0.5113);
end
Xfo=-Qinf*S*CD;
Qdot=Qinf*v*S*CD/20; %rate of heat transfer (W)
%trajectory equations follow:
longidot = o(4)*cfpa*schi/(o(3)*cla);
latidot =
o(4)*cfpa*cchi/o(3);
raddot = o(4)*sfpa;
veldot = -g*sfpa +gn*cchi*cfpa+Xfo/m...
+omega*omega*o(3)*cla*(sfpa*cla-cfpa*cchi*sla);
gammadot = (o(4)/o(3) - g/o(4))*cfpa-gn*cchi*sfpa/o(4)...
+ 2*omega*schi*cla+ omega*omega*o(3)*cla*(cfpa*cla...
+ sfpa*cchi*sla)/o(4);
headdot = o(4)*schi*tan(o(2))*cfpa/o(3)-gn*schi/o(4)...
- 2*omega*(tan(o(5))*cchi*cla - sla)...
+ omega*omega*o(3)*schi*sla*cla/(o(4)*cfpa);
Y = [longidot; latidot; raddot;...
veldot; gammadot; headdot]; %time derivatives
if alt<=120e3
fprintf(f8,’\t%1.5e\t%1.5e\t%1.5e\t%1.5e...
\t%1.5e\t%1.5e\n’,alt,CD,mach,veldot,Qinf,Qdot);
end

344
12 Atmospheric and Transatmospheric Trajectories
0
1000
2000
3000
4000
5000
6000
7000
0
50
100
150
200
250
h (km)
0
1000
2000
3000
4000
5000
6000
7000
0
100
200
300
400
λ (deg.)
0
1000
2000
3000
4000
5000
6000
7000
−90
−45
0
45
90
δ (deg.)
Time (s)
Δv = 0.15vp
Δv = 0.1vp
Δv = 0.0895vp
Fig. 12.33. The altitude, longitude, and latitude of a ballistic entry capsule.
Table 12.12. M-ﬁle runreentry.m for Integrating the State Equations for a Ballistic
Entry
global dtr; dtr = pi/180;
global mu; mu = 3.986004e14;
global S; S = 4;
global c; c=0.5;
global m; m =
350;
global rm; rm = 6378140;
global omega; omega = 2*pi/(23*3600+56*60+4.0905);
global Gamma; Gamma=1.41;
global f8; f8 = fopen(’data8.mat’, ’a’);
long = -10*dtr;
%initial longitude
lat = -79.8489182889*dtr; %initial latitude
rad= 6579.89967e3;
%initial radius (m)
vel= 7589.30433867; %initial velocity (m/s)
fpa= 0.54681217*dtr;%initial flight-path angle
chi= 99.955734*dtr; %initial heading angle (measured from north)
options = odeset(’RelTol’, 1e-8);
orbinit = [long; lat; rad; vel; fpa; chi];
[t, o] = ode45(’reentry’,[0, 1750],orbinit,options);
fclose(’all’);

12.4 Entry Trajectories
345
0
1000
2000
3000
4000
5000
6000
7000
0
2
4
6
8
v (km/s)
0
1000
2000
3000
4000
5000
6000
7000
−90
−60
−30
0
φ (deg.)
0
1000
2000
3000
4000
5000
6000
7000
0
60
120
180
A (deg.)
Time (s)
Δv = 0.1vp
Δv = 0.15vp
Δv = 0.0895vp
Fig. 12.34. The relative speed, ﬂight-path angle, and heading angle of a ballistic
entry capsule.
the three trajectories. The trajectory with the smallest de-boost impulse mag-
nitude, Δv = 0.0895vp, is seen to have the longest ﬂight time (6250 s), which
is more than triple the ﬂight time for Δv = 0.1vp (1750 s). As the de-boost
impulse is increased to Δv = 0.15vp, we do not observe the same decrease in
the ﬂight time (Fig. 12.33). The ground tracks traveled in the three cases dif-
fer very slightly, and the landing point is a point on the each track where the
altitude becomes approximately 5 km, after which the ﬂight path is nearly ver-
tical (φ ≈−90◦) (Fig. 12.34). Therefore, the landing point is dictated by the
time of ﬂight, which in turn strongly depends on the de-boost impulse magni-
tude. There is a large diﬀerence between the landing points of Δv = 0.0895vp
(δ = −42.62◦, λ = 55.5◦) and Δv = 0.1vp (δ = 8.52◦, λ = 85.3◦) even though
the diﬀerence in the velocity is quite small.
A plot of ﬂight-path angle vs. altitude, Fig. 12.35, indicates the fundamen-
tally diﬀerent ballistic entry in each case. For Δv = 0.0895vp, the ﬂight-path
angle undergoes a loop at h ≈110km, after which the altitude starts increas-
ing until φ again becomes negative. This is known as a skip entry, wherein
the vehicle does not have a suﬃciently large, negative ﬂight-path angle for
a normal ballistic entry and is similar to a stone skipping a pond’s surface
when launched at a particularly shallow angle. Due to the skip, the capsule
travels further along the ground track before dipping down again for a normal

346
12 Atmospheric and Transatmospheric Trajectories
0
50
100
150
200
250
−6
−5
−4
−3
−2
−1
0
1
Altitude, h (km)
φ (deg.)
Δv = 0.0895vp
Δv = 0.1vp
Δv = 0.15vp
Fig. 12.35. The ﬂight-path angle as a function of altitude during ballistic entry.
entry. The skip is evident in Fig. 12.33 from about 3800 s to 5300 s into the
ﬂight, during which the altitude stays above 110 km. The case Δv = 0.0895vp
leads to only a “modest” skip, while a smaller de-boost impulse magnitude
would result in a more extreme skip, where the ensuing altitude and time of
ﬂight are increased drastically, even leading to several successive skips. Such
an extreme trajectory would be undesirable if unplanned because of the large
dispersion of the landing point as well as an increase in the ﬂight time (which
is unsuitable in a manned mission due to limited oxygen supply). The other
two cases show a normal entry, albeit at diﬀerent initial ﬂight-path angles.
The values of φ for entry with Δv = 0.15vp are always much smaller than
those of the Δv = 0.1vp entry (Fig. 12.35).
From the above results, it is clear that the conditions at an altitude of
approximately 120 km (where the earth’s atmosphere begins to cause an ap-
preciable deceleration) are extremely important for an entry trajectory. Hence,
for most entry vehicles, h = 120 km can be regarded as the entry altitude at
which the speed and ﬂight-path angle must be carefully managed (by a suit-
able de-boost impulse) to achieve a desired landing point and time of ﬂight.
Let us now consider the approximate aerothermal loads during entry. The
Mach number and drag coeﬃcient, plotted in Fig. 12.36, have almost the same
variation with the altitude in all three cases. The value of CD decreases al-
most linearly with the altitude from the near free-molecular ﬂow condition at

12.4 Entry Trajectories
347
Fig. 12.36. The drag coeﬃcient, Mach number, and dynamic pressure vs. altitude
during ballistic entry.
h = 120 km, until h = 83 km, and then remains constant in the continuum
hypersonic regime, 32 ≤h < 83 km, during which the Mach number remains
above 5. At lower altitudes, the drag coeﬃcient shows an increase through
the supersonic regime, reaching a peak at M ≈1, and then declining through
the subsonic regime. The dynamic pressure, q = 1
2ρv2 = 1
2γpM 2, also plotted
in Fig. 12.36, is much higher for the trajectory with Δv = 0.15vp than that
for the other two cases. The smallest dynamic pressure is observed for the
skip entry trajectory (Δv = 0.0895vp), indicating a decay in the speed during
skip, leading to entry with a smaller kinetic energy. Since the aerothermal
loads are directly proportional to the dynamic pressure, it is expected that
they would be smallest in magnitude for the skip entry, and largest for the
entry with the maximum de-boost impulse (Δv = 0.15vp). These deductions
are conﬁrmed in Fig. 12.37, which contains plots of the rate of heat trans-
fer, ˙Q, and axial acceleration, ˙v, vs. altitude. These two parameters are the
primary indicators of the structural loads on the vehicle, and their maximum
magnitudes are very important in design. The entry with the largest de-boost
impulse (Δv = 0.15vp) achieves a maximum heating rate of ˙Q = 9.2 × 106 W
at an altitude of approximately 47 km, and the maximum axial deceleration of
−117 m/s2 at the altitude of 42.5 km (which is also the altitude for the maxi-

348
12 Atmospheric and Transatmospheric Trajectories
0
20
40
60
80
100
120
0
5
10
˙Q(×106 W)
0
20
40
60
80
100
120
−150
−100
−50
0
50
Altitude, h (km)
˙v (m/s2)
Δv = 0.1vp
Δv = 0.15vp
Δv = 0.0895vp
Fig. 12.37. The rate of heat transfer and deceleration vs. altitude during ballistic
entry.
mum dynamic pressure).18 In comparison, the skip entry yields a maximum
heating rate of only ˙Q = 4.95 × 106 W at 49 km altitude, and the maximum
axial deceleration of −75 m/s2 at the altitude of 42 km. Although the mag-
nitudes of the aerothermal loads are approximate, their trend with altitude
is quite accurate. The smaller aerothermal loads of a skip entry, combined
with its longer range and endurance after de-boost, make it an attractive
ﬂight path for various purposes. For example, during World War II the Swiss
engineer Eugen S¨anger proposed a bomber of global range using successive
skips, whereas Walter Hohmann originated aeroassisted orbital transfer and
aerobraking of spacecraft from a high-energy trajectory to one with a lower
energy, using successive passes through the atmosphere. While S¨anger’s an-
tipodal bomber did not materialize, Hohmann’s concept of aeroassisted orbital
transfer has been suceessfully implemented in various interplanetary missions,
such as NASA’s Magellan mission to Venus in 1992, and Mars Global Sur-
veyor (MGS) in 1997. The Apollo earth-return capsule employed a partial skip
entry in order to reduce the excessive aerothermal loads. A precise attitude
control was employed to make the small lift force point downward, such that
the capsule did not leave the atmosphere on an extreme skip trajectory (which
18 A good estimate of the altitudes for maximum deceleration and heat transfer can
also be obtained from an approximate analysis, such as by Loh [39].

12.4 Entry Trajectories
349
would have been disastrous for the astronauts). The resulting “double-dip”
trajectory was quite similar in trend to the Δv = 0.0895vp case below 120
km altitude. The chief drawback of a skip entry is the extreme sensitivity of
the shallow trajectory to the speed and ﬂight-path angle at entry. For exam-
ple, a change by ±0.001◦in the ﬂight-path angle at 120 km altitude for the
Δv = 0.0895vp case presented above would cause a dispersion in the landing
point by ±520 km. It is seldom possible to maintain such accurate control of
the ﬂight path at the point of entry, thereby implying an unacceptably high
uncertainty in the landing point in the case of a skip entry. For this reason,
the classical nonskipping entry (such as the Δv = 0.15vp case) is usually used,
which is less sensitive to variations in the ﬂight path at entry, and where the
higher aerothermal loads are absorbed with a thicker heat shield.19
12.4.2 Maneuvering Entry
The main disadvantage of a ballistic entry vehicle is its lack of maneuverabil-
ity within the atmosphere. Furthermore, the high heating rates in a normal
ballistic entry restrict the vehicle to a single mission. In order to have some
control over the entry trajectory, as well as to enter at a smaller negative
ﬂight-path angle (which reduces the aerothermal loads), a re-usable vehicle
must necessarily produce lift. This requirement can be met by wings, such as
in NASA’s space shuttle, or by a more structurally robust lifting-body con-
ﬁguration, such as the Lockheed X-33. Although the hypersonic lift-to-drag
ratios of such lifting entry vehicles are modest (less than or equal to unity),
they are capable of greatly modifying the trajectory, thereby enabling con-
trol of the landing point. Another advantage of the lifting conﬁguration is
the added ability to lose speed through maneuvering. The lift generation in
a maneuvering entry vehicle entails a larger portion of the drag due to skin
friction, because of its ﬂatter shape, compared to a similar-sized ballistic en-
try vehicle at the same angle of attack. Hence, the rate of heat transfer at a
given speed is higher for the lifting vehicle. Therefore, a shallow trajectory,
and a rapid bleeding of the entry speed through banking maneuvers, becomes
an indispensible requirement of a lifting entry vehicle. The space shuttle uses
such a maneuvering entry, through a series of sharply banked S-turns at en-
try for increased deceleration. Of course, a banking trajectory would increase
the normal acceleration (load factor), as seen above. However, the increase in
aerothermal loading can be spread out over a larger portion of the trajectory
by a suitable adjustment of the bank angle, which would maximize decelera-
tion without exceeding the limits on load factor and heating rate. Therefore,
the maneuvering entry quickly becomes an optimal guidance problem, whose
19 The ﬁrst entry capsule, the Vostok, was a simple spherical design that used a heat
shield all around the vehicle. The later bottle-shaped designs, Mercury, Gemini,
Soyuz, and Apollo, as well as the sphero-conical ballistic missile warheads, have
used heat shielding of selected portions of the body, which necessitate either some
form of attitude control or an inherent attitude stability during entry.

350
12 Atmospheric and Transatmospheric Trajectories
solution involves a series of carefully executed turns. Such an optimal tra-
jectory is ﬂown by an automatic ﬂight control system every time the space
shuttle returns from orbit.
The normal acceleration magnitude of a manuevering vehicle can be ex-
pressed as follows:
an = v

˙φ2 + ˙A2 ,
(12.57)
which is related to the normal load factor, nn
.=
an
g + 1, where g is the
magnitude of acceleration due to gravity. One can also deﬁne an axial load
factor, na .=
˙v
g + 1. Generally, we have nn ≫1 and | na |≫1 during entry,
which allows the gravitational acceleration to be ignored in an approximate
analysis [19].
Example 12.7. Consider a maneuvering entry vehicle derived from the capsule
of Example 12.6 such that the drag coeﬃcient referred to the same area is
unmodiﬁed, but some lift is generated through ﬂattened portions of the body
in the design entry attitude. Simulate the entry of the lifting vehicle from the
same orbit and initial position as in Example 12.6, with a de-boost impulse
magnitude of Δv = 0.15vp, such that a constant lift-to-drag ratio of 0.5 is
maintained throughout the ﬂight. It can be assumed that the skin friction drag
is one ﬁfth the total drag at any given point in the lifting entry trajectory. This
implies that the rate of heat transfer can be approximated by ˙Q = 0.1qvSCD,
where q is the dynamic pressure.
Simulate the following maneuver proﬁles:
(a) No banking is carried out during entry (σ = 0).
(b) The bank angle is held at σ = 90◦during 450 ≤t < 500 s, and reversed
to σ = −90◦during 500 ≤t < 550 s. At all other times, σ = 0. In order to
perform the simulation for lifting entry, we modify the program reentry.m to
liftentry.m (Table 12.13), which has provision for lift and side force generated
by banking and a nonzero lift coeﬃcient. The atmospheric, drag, and gravity
models are unchanged. The program evaluates the normal acceleration ac-
cording to Eq. (12.57), in addition to the axial acceleration and heating rate,
at altitudes below 120 km.
The resulting plots of simulation data for the two maneuver proﬁles are
contained in Figs. 12.38–12.42. In these plots, the time is measured from the
de-boost point, and the trajectory for t < 400 s is the same as the ballistic
case (Example 12.6). Figures 12.38 and 12.39 show the position and velocity
of the vehicle. It is clear that the lifting trajectories have larger ﬂight time
and (positive) ﬂight-path angle compared to the ballistic trajectory discussed
in Example 12.6. Consequently, the vehicle covers a longer distance along the
ground track. This increase in the range due to lift is often considered useful
in a military mission, such as the cancelled Dyna-Soar design project of the
U.S. Air Force in the 1960s. The stretched ﬂight of a lifting entry is sometimes
referred to as a gliding entry. However, a more desirable trajectory is the one
in which the vehicle loses both speed and altitude quickly, in preparation for

12.4 Entry Trajectories
351
Table 12.13. M-ﬁle liftentry.m for State Equations during a Maneuvering Entry
function Y = liftentry(t,o)
global dtr; global mu; global S; global c; global m; global rm;
global omega; global Gamma;
global f8;
%data tape for storing aerothermal results
[g,gn]=gravity(o(3),o(2)); %acceleration due to gravity
lo = o(1);la = o(2);
clo = cos(lo); slo = sin(lo);
cla = cos(la); sla = sin(la);
fpa = o(5); chi = o(6);
cfpa = cos(fpa); sfpa = sin(fpa);
cchi = cos(chi); schi = sin(chi);
%atmospheric properties and flow parameters:
if o(3)<rm
o(3)=rm;
end
alt = o(3) - rm;
v
= o(4);
atmosp = atmosphere(alt, v, c);
rho = atmosp(2);
Qinf = 0.5*rho*v^2;
mach = atmosp(3);
[t alt v mach]
Kn=atmosp(4);
CDC=conticap(mach);
s = mach*sqrt(Gamma/2);
CDFM=1.75+sqrt(pi)/(2*s);
iflow=atmosp(6);
if iflow==2
CD=CDC;
elseif iflow==1
CD=CDFM;
else
CD=CDC+(CDFM-CDC)*(0.333*log10(Kn/sin(pi/6))+0.5113);
end
CL=0.5*CD;
if t>=450 && t<=500
%bank=pi/2;
bank=0;
elseif t>500 && t<=550
%bank=-pi/2;
bank=0;
else
bank=0;
end
Xfo=-Qinf*S*CD;
Zfo=Qinf*S*CL*cos(bank);
Yfo=Qinf*S*CL*sin(bank);;
%trajectory equations follow:
longidot = o(4)*cfpa*schi/(o(3)*cla); %longitude
latidot =
o(4)*cfpa*cchi/o(3); %latitude
raddot = o(4)*sfpa;
%radius
veldot =-g*sfpa +gn*cchi*cfpa + Xfo/m+...
omega*omega*o(3)*cla*(sfpa*cla-cfpa*cchi*sla);
gammadot=(o(4)/o(3)-g/o(4))*cfpa-gn*cchi*sfpa/o(4)+...
Zfo/(o(4)*m) + 2*omega*schi*cla...
+ omega*omega*o(3)*cla*(cfpa*cla...
+ sfpa*cchi*sla)/o(4);
headdot=o(4)*schi*tan(o(2))*cfpa/o(3)-gn*schi/o(4)...
- Yfo/(o(4)*cfpa*m)...
- 2*omega*(tan(o(5))*cchi*cla - sla)...
+omega*omega*o(3)*schi*sla*cla/(o(4)*cfpa);
Y = [longidot ; latidot ; raddot ;...
veldot ; gammadot ; headdot ];
if alt<=120e3
Qdot=Qinf*v*S*CD/10;
transacc=v*sqrt(gammadot^2+headdot^2);
fprintf(f8,’\t%1.5e\t%1.5e\t%1.5e\t%1.5e...
\t%1.5e\t%1.5e\n’,alt,mach,veldot,transacc,Qinf,Qdot);
end

352
12 Atmospheric and Transatmospheric Trajectories
0
20
60
100
140
h (km)
70
75
80
λ (deg.)
400
500
600
700
800
900
1000
1100
1200
1300
−60
−50
−40
Time (s)
δ (deg.)
σ = ±90◦
σ = 0
Fig. 12.38. The altitude, longitude, and latitude in maneuvering entry.
a landing (such as NASA’s space shuttle). This is seen to be accomplished
by the extremely sharp banking proﬁle of σ = ±90◦in the period 450 ≤t ≤
550 s, which causes a reduction in the total ﬂight time by about 70 s, with an
attendant decrease in the speed by more that 1 km/s in the crucial altitude
range of 40 ≤h ≤80 km, compared to the trajectory with σ = 0. However,
the ﬂight-path angle in the same altitude range becomes more negative due
to banking, which brings the vehicle deeper into the atmosphere, causing an
increase in the peak dynamic pressure near 60 km altitude (Fig. 12.40), leading
to a sharp increase in the axial and normal acceleration (Fig. 12.41), as well
as the rate of heat transfer (Fig. 12.42), when compared to the trajectory
without banking.
The advantage of lifting entry is evident from a comparison of the dynamic
pressure, axial deceleration, and heating rate for the ballistic case (Exam-
ple 12.6). When no banking is employed, the dynamic pressure and maximum
deceleration are cut to one third, and the maximum heating rate is about one
mega-Watt lower when compared to the ballistic entry with the same mass,
reference area, and drag coeﬃcient (despite the doubling of the heating rate
at a given speed due to the higher skin friction of the lifting vehicle). This
is due to the higher altitude of the lifting trajectory at any given speed in
the hypersonic portion of ﬂight. The reduction of aerothermal loads is thus
the primary advantage of a maneuvering entry trajectory, which enables a re-

12.5 Rocket Ascent Trajectories
353
0
2
4
6
8
v (km/s)
−60
−40
−20
0
φ (deg.)
400
500
600
700
800
900
1000
1100
1200
1300
10
15
20
Time (s)
A (deg.)
σ=±90°
σ=0
Fig. 12.39. The relative speed, ﬂight-path angle, and heading angle in maneuvering
entry.
usable entry vehicle through a permanent thermal protection system (such as
the heat soaking tiles of the space shuttle). The amount of banking allowable
in the actual entry trajectory is determined by the design axial and normal
load factors, as well as the rate of heat transfer safely tolerated by the thermal
protection system.
12.5 Rocket Ascent Trajectories
Finally, we draw our attention to the ascent trajectories of rocket-powered ve-
hicles. A rocket ascent is fundamentally diﬀerent from the accelerated climb of
the high-performance ﬁghter airplane, mainly due to the former’s more rapid
decrease in mass, and a nearly constant thrust, with altitude. For these rea-
sons, a rocket can deliver a payload to an orbital trajectory in a fraction of
the time an airplane needs to reach its cruising altitude. The simplest rocket
ascent is the vertical trajectory of a sounding rocket, which is commonly em-
ployed in weather observations of upper-atmospheric strata, and for which a
closed-form solution is easily carried out. However, the curving ascent of a
spacecraft launch vehicle, from φ = 90◦to φ ≈0, is much more interesting
from a modeling viewpoint. It is important to note that such an ascent must
be performed at zero lift, because even a slight build-up of normal load factor

354
12 Atmospheric and Transatmospheric Trajectories
0
20
40
60
80
100
120
0
10
20
30
M
0
20
40
60
80
100
120
0
2
4
6
8
10
12
Altitude, h (km)
q (×103 N/m2)
σ = ±90◦
σ = 0
Fig. 12.40. The Mach number and dynamic pressure vs. altitude during maneu-
vering entry.
would cause the thin, shell-like structure of the launch vehicle (often almost
completely full of liquid propellants) to disintegrate. Therefore, since maneu-
vering is completely ruled out during launch, it is natural to inquire what
causes the launch vehicle to change its ﬂight path from vertical to nearly
horizontal. The answer lies in the combined eﬀects of gravity and planetary
rotation. The naturally curving trajectory from the planetary surface to orbit
is called a gravity turn.
An attitude control system is an indispensible feature of the launch vehi-
cle, which always maintains a zero angle of attack despite small atmospheric
disturbances. The attitude control of a rocket is carried out through thrust-
vectoring by a gyro-based feedback mechanism and a control law that main-
tains the vehicle at its open-loop, inherently unstable equilibrium (Chap-
ter 14). In addition to the attitude control, a guidance system is required for
maintaining a near-vertical ﬂight in the ﬁrst few seconds after launch, during
which the launch tower is cleared, and the trajectory is unstable due to a near-
zero ﬂight speed. The gravity turn is initiated by discontinuing the automatic
guidance system as soon as the vehicle has accelerated suﬃciently for | ˙φ | to
become small [Eq. (12.29)]. However, the attitude control is always perform-
ing its task of maintaining zero angles of attack and sideslip throughout the
launch. Since we have adopted a complete set of translational equations in

12.5 Rocket Ascent Trajectories
355
0
20
40
60
80
100
120
−60
−40
−20
0
˙v (m/s2)
0
20
40
60
80
100
120
0
10
20
30
Altitude, h (km)
an (m/s2)
σ = ±90◦
σ = 0
Fig. 12.41. The axial and normal acceleration vs. altitude during maneuvering
entry.
this chapter, we are well equipped to model the gravity turn trajectories of
launch vehicles without any further assumption or modiﬁcation.
Before considering a simulation example, it is necessary to point out some
important aspects of a rocket. In Chapter 8, we considered the optimal se-
lection of stage payload ratios that maximized the total payload ratio for a
given total velocity impulse. However, the rocket equation of Chapter 8 as-
sumed zero drag and gravity, as well as an impulsive thrust. Neither of these
assumptions is valid in the actual rocket performance. Therefore, additional
design parameters become important, namely the duration of operation of
each stage, which depends in turn on the mass ﬂow rate (thus, the thrust)
developed in the nozzle. The best performance is usually obtained if the burn
times are in the same proportion as the speciﬁc impulses. The selection of stage
burn time requires simulating the actual trajectory in the presence of drag,
gravity, and propulsive losses due to nonimpulsive burning. Furthermore, the
launch direction is another important parameter for optimizing a rocket’s per-
formance. Due to the planet’s rotation, there is a particular velocity azimuth
at launch (depending upon the latitude of launch site) that maximizes the
orbit achieved at burn-out. This optimal direction is again selected through
simulated trajectories. We illustrate a rocket launch by the following example.

356
12 Atmospheric and Transatmospheric Trajectories
0
20
40
60
80
100
120
0
1
2
3
4
5
6
7
8
9
10
11
12
13
Altitude, h (km)
˙Q (×106 W)
σ = ±90◦
σ = 0
Fig. 12.42. The rate of heat transfer vs. altitude during maneuvering entry.
Example 12.8. Consider an optimal, two-stage, serial rocket for launching a
350 kg payload to a circular earth orbit. The ﬁrst stage employs a solid pro-
pellant with speciﬁc impulse 200 s, while the second stage has kerosene/LO2
with a speciﬁc impulse 350 s. The structural ratio of the ﬁrst stage is 0.07,
while that of the second stage is 0.05. Design the optimal payload ratios of
the stages using the methods of Chapter 8, for the total velocity impulses of
(a) 9.5 and (b) 10.5 km/s, respectively. In the resulting rockets, design (a) has
ﬁrst- and second-stage burn times of 50 and 87.5 s, respectively, whereas the
burn times are doubled in design (b). Simulate the actual launch trajectories
for each design, assuming that the thrust loss due to incorrect expansion of
exhaust gases (Chapter 8) is negligible, and the parasite drag coeﬃcient of
the payload, CDp, is the same as that of the ballistic capsule of Example 12.6,
while that of the ﬁrst and second stage is 5CDp and 2.2CDp, respectively, in
design (a) and 8CDp and 3CDp, respectively, in design (b). The launch is to be
carried out from Cape Canaveral (δ = 28.5◦, λ = −80.55◦) with an initial rel-
ative ﬂight path of φ = 90◦, A = 170◦, which translates into the best inertial
launch direction (due east) for taking advantage of the earth’s rotation.
An optimal design of this two-stage rocket for Δv = 9.5 km/s was car-
ried out in Example 9.5 using the program Nstage.m. The relevant case is
that of β2 = 1.75, for which the optimal total payload ratio, λT = 0.021176,
and the optimal ﬁrst-stage payload ratio, λ1 = 0.4263393, were obtained,

12.5 Rocket Ascent Trajectories
357
implying a ﬁrst-stage initial mass, m01 = 350
λT = 16, 528.420 kg, and a second-
stage initial mass, m02 = λ1m01 = 7046.715 kg. This leads to the ﬁrst-stage
propellant mass, mp1 = (m01 −m02) ∗(1 −0.07) = 8817.985 kg, and the
second-stage propellant mass, mp2 = (m02 −mL) ∗(1 −0.05) = 6361.880 kg.
Assuming constant mass ﬂow rates during each stage, we get the mass ex-
haust rates of the two stages to be
˙m1 =
mp1
50
= −176.3597 kg/s and
˙
m2 = mp2
87.5 = −72.7072 kg/s. Assuming no thrust losses due to overexpan-
sion, we have the approximate thrust developed in the respective stages to be
fT 1 = −˙m1g0Isp1 = 346, 017.7314 N and fT 2 = −˙m2g0Isp2 = 249, 640.1712 N
for design (a).
In design (b) with Δv = 10.5 km/s, the optimal case is for α2 = 0.1582
(λ1 = 0.267767) (Fig. 12.43), yielding λT = 0.011342824. This results in
m01 = 30, 856.513 kg, m02 = 8262.362 kg, mp1 = 21, 012.561 kg, mp2 =
7516.744 kg, fT 1 = 412, 266.44 N and fT 2 = −˙m2g0Isp2 = 147, 478.51 N.
0.05
0.1
0.15
0.2
0.25
0.0096
0.0098
0.01
0.0102
0.0104
0.0106
0.0108
0.011
0.0112
0.0114
α2 = λ2/λ1
λT
Fig. 12.43. Payload ratio optimization for the two-stage rocket with Δv =
10.5 km/s.
The ascent trajectories of the two designs are simulated through the pro-
gram rocket.m, which is tabulated in Table 12.14. This program supplies the
time derivatives of the state vector, r, δ, λ, v, φ, A, for integration by an ap-
propriate procedure, such as the Runge–Kutta method. The initial condition
and the global parameter values must be declared in the calling program.

358
12 Atmospheric and Transatmospheric Trajectories
0
200
400
600
800
1000
0
1000
2000
3000
4000
h (km)
0
200
400
600
800
1000
0
2
4
6
8
Time (s)
v (km/s)
Design (b)
Design (a)
Fig. 12.44. Altitude and relative speed time histories for the two rocket designs.
0
200
400
600
800
1000
90
120
150
180
φ (deg.)
0
200
400
600
800
1000
0
50
100
150
200
Time (s)
A (deg.)
Design (b)
Design (a)
Fig. 12.45. Relative ﬂight-path angle and azimuth for the two rocket designs.

12.5 Rocket Ascent Trajectories
359
−115
−110
−105
−100
−95
−90
−85
−80
−10
−5
0
5
10
15
20
25
30
λ (deg.)
δ (deg.)
Design (b)
Design (a)
Fig. 12.46. Ground tracks for the two rocket designs.
0
200
400
600
800
1000
0
2
4
6
8
v∗(km/s)
0
200
400
600
800
1000
0
30
60
90
φ∗(deg.)
0
200
400
600
800
1000
90
180
270
Time (s)
A∗(deg.)
Design (a)
Design (b)
Fig. 12.47. Inertial velocity components for the two rocket designs.

360
12 Atmospheric and Transatmospheric Trajectories
Table 12.14. M-ﬁle rocket.m for State Equations during Ascent of a Launch Vehicle
function deriv = rocket(t,o)
global dtr; global mu; global omega; global S; global c; global rm;
global tb1; global tb2; global fT1; global fT2; global m01;
global m02; global mL; global mp1; global mp2; global Gamma;
global f8; %file for storing additional flight data
%acceleration due to gravity (nonspherical earth):
[g,gn]=gravity(o(3),o(2));
lo = o(1);la = o(2);
clo = cos(lo); slo = sin(lo); cla = cos(la); sla = sin(la);
fpa = o(5); chi = o(6);
cfpa = cos(fpa); sfpa = sin(fpa); cchi = cos(chi); schi = sin(chi);
%atmospheric properties:
if o(3)<rm
o(3)=rm;
end
alt = o(3) - rm;
v
= o(4);
if v<0
v=0;
end
if alt<=2000e3
atmosp = atmosphere(alt,v,c);
rho = atmosp(2);
Qinf = 0.5*rho*v^2;
mach = atmosp(3); Kn=atmosp(4);
CDC=conticap(mach); s = mach*sqrt(Gamma/2);
CDFM=1.75+sqrt(pi)/(2*s); iflow=atmosp(6);
if iflow==2
CD=CDC;
elseif iflow==1
CD=CDFM;
else
CD =CDC+(CDFM-CDC)*(0.333*log10(Kn/sin(pi/6))+0.5113);
end
else
rho=0;Qinf=0;CD=0;mach=0;
end
if t<=tb1
fT=fT1; m=m01-mp1*t/tb1; CD=8*CD;
elseif t<=(tb1+tb2)
fT=fT2; m=m02-mp2*(t-tb1)/tb2; CD=3*CD;
else
fT=0; m=mL;
end
[t alt m mach]
D=Qinf*S*CD;
Xfo = fT-D; Yfo = 0; Zfo = 0;
%trajectory equations follow:
longidot = o(4)*cfpa*schi/(o(3)*cla);
latidot =
o(4)*cfpa*cchi/o(3);
raddot = o(4)*sfpa;
veldot = -g*sfpa +gn*cchi*cfpa + Xfo/m...
+omega*omega*o(3)*cla*(sfpa*cla-cfpa*cchi*sla);
if t<=10;
headdot=0; gammadot=0;
else
gammadot=(o(4)/o(3)-g/o(4))*cfpa-gn*cchi*sfpa/o(4)...
+Zfo/(o(4)*m)+2*omega*schi*cla...
+omega*omega*o(3)*cla*(cfpa*cla+ sfpa*cchi*sla)/o(4);
if abs(cfpa)>1e-6
headdot=o(4)*schi*tan(o(2))*cfpa/o(3)-gn*schi/o(4)-Yfo/(o(4)*cfpa*m)...
-2*omega*(tan(o(5))*cchi*cla - sla)...
+omega*omega*o(3)*schi*sla*cla/(o(4)*cfpa);

12.5 Rocket Ascent Trajectories
361
else
headdot=0;
end
end
%Time derivatives:
deriv = [longidot; latidot; raddot; veldot; gammadot; headdot];
if alt<=120e3
Qdot=Qinf*v*S*CD/20;
fprintf(f8,’\t%1.5e\t%1.5e\t%1.5e\t%1.5e\t%1.5e\t%1.5e\t%1.5e\n’,...
t,alt,m,mach,veldot,Qinf,Qdot);
end
0
20
40
60
80
100
120
0
5
10
15
M
0
20
40
60
80
100
120
0
100
200
˙v (m/s2)
0
20
40
60
80
100
120
0
1
2
3
4
5
˙Q (×106 W)
Altitude, h (km)
Design (a)
Design (b)
Fig. 12.48. Mach number, dynamic pressure, and heating rate until burn-out for
the two rocket designs.
The altitude and relative speed time-history plots are shown in Fig. 12.44.
Design (a) reaches a higher altitude but a lower relative speed at second-stage
burn-out compared to design (b). Also, the rate of decrease of speed after
burn-out is higher for design (a), indicating an orbit of higher eccentricity
when compared to that of design (b). Consequently, the relative speed at the
end of 1000 s for design (a) is about one fourth that of design (b). Our deduc-
tions about orbital eccentricity are conﬁrmed in the ﬂight-path angle plot in
Fig. 12.45, which also depicts the natural variation in φ and A due to gravity
and the earth’s rotation (gravity turn). While design (b) achieves a nearly
horizontal attitude at t = 1000 s, design (a) is still traveling almost vertically
at that time. The variation of azimuth, A, in Fig. 12.45 is quite rapid ini-

362
12 Atmospheric and Transatmospheric Trajectories
tially but changes much more gradually due to gravity turn and settles down
at A ≈81◦for design (a) and A ≈39◦for design (b) at t = 1000 s. The
easterly launch direction is optimum for design (a), making the maximum
use of the earth’s rotation. The ground track covered in 1000 s after launch
is plotted in Fig. 12.46. The much smaller ground track for design (a) in the
same ﬂight time conﬁrms the near-vertical ﬂight path of that case. It must be
remembered that the ground track is relative to a rotating earth and is thus
diﬀerent from the orbital projection in the celestial frame (Chapter 5). The
characteristic of the resulting orbit in each case can be obtained by converting
the relative velocity into the inertial velocity components, v∗, φ∗, A∗, as ex-
plained in Chapter 5. The plots of the inertial velocity components are shown
in Fig. 12.47, where it is conﬁrmed that the inertial ﬂight-path angle varies
from about 16◦at burn-out time, t = 275 s, to almost zero at t = 1000 s,
for design (b), indicating an orbit of small eccentricity. On the other hand, a
highly eccentric orbit is indicated for design (a). The inertial launch azimuth,
A*, is south-easterly for design (a), indicating a direct (or prograde) orbit, and
south-westerly for design (b), which implies a retrograde trajectory (Chapter
5). The position and inertial velocity at orbit initialization (second-stage burn-
out) are tabulated for the two launch vehicles in Table 12.15. These data are
useful in determining the ensuing orbits. For example, the orbital inclination,
i, is obtained in each case from the spherical trigonometric relationship of
Chapter 5, cos i = cos δ sin A∗:
i = 51.0941395◦,
Design(a),
i = 125.013428◦,
Design(b),
which conﬁrms the retrograde motion in design (b). Similarly, the eccentricity,
e, and semi-major axis, a, are estimated (assuming spherical earth) to be
a = 5008.815276 km,
Design(a),
a = 5471.659128 km,
Design(b),
and
e = 0.9996533,
Design(a),
e = 0.3331435,
Design(b),
which conﬁrm our earlier remarks about the nature of each orbit. Design (a)
is a near-parabolic orbit, which is an escape trajectory to inﬁnite radius (and
zero speed), while design (b) is an elliptical, earth-crossing (suborbital) tra-
jectory. If we extend the simulation for design (b) to a larger time, we would
observe a re-entry of the capsule (payload) into the earth’s atmosphere. The
time of re-entry at h = 120 km can be estimated from Kepler’s equation
(Chapter 4).
It is interesting to compare the aerothermal parameters during the as-
cents of the two designs. Figure 12.48 shows the altitude history plots of the

12.6 Summary
363
Table 12.15. Orbit Initialization Conditions for the Two Launch Vehicle Designs
Design (a)
Design (b)
r (km)
6538.839304
6528.693364
λ (deg.)
−80.6096093
−82.7620887
δ (deg.)
28.4758704
26.3762164
v* (m/s)
6506.766314
7018.480802
φ∗(deg.)
88.4154386
16.05878
A* (deg.)
134.3992248
219.824687
Mach number, acceleration, and rate of heat transfer in the two cases for
0 ≤h ≤120 km. It is evident that design (a) encounters a much higher
acceleration due to its larger excess thrust, but a smaller heating rate be-
cause of its higher trajectory (smaller dynamic pressure). In essence, design
(a) leaves the atmosphere much more rapidly, thereby experiencing smaller
drag and heat transfer. Both trajectories display an almost-steady increase of
Mach number with altitude. Due to its higher velocity at a particular altitude,
the Mach number of design (a) is larger than that of design (b) in the range
15 ≤h ≤110 km.
12.6 Summary
Atmospheric ﬂight is inﬂuenced by atmospheric forces—created by the motion
of the vehicle relative to the atmosphere—and requires a frame ﬁxed to the ro-
tating planet. The kinematic equations of motion relative to a rotating planet
are the same as those employed in orbital mechanics. The dynamic equations
of motion are derived by expressing the inertial acceleration and force vectors
in a wind axes frame, having axes in the directions opposite and normal to that
of the relative wind velocity, and include the centripetal and Coriolis acceler-
ations due to planetary rotation and ﬂight-path curvature. The equations of
atmospheric translation require accurate atmospheric, gravity, aerodynamic,
and propulsion models and are inherently nonlinear in nature, requiring an
iterative, numerical solution procedure, such as the Runge–Kutta methods.
An airplane is a generic atmospheric vehicle with a plane of symmetry and
separate mechanisms for generating aerodynamic lift and thrust necessary for
a steady, level ﬂight. Coordinated airplane ﬂight requires that the side force
for horizontal turns must be generated by banking the wings rather than by
having a nonzero sideslip angle. The angle of attack is the primary variable
employed in controlling the magnitude of the lift (and drag). Hence, airplane
trajectories are governed by the angle of attack and the bank angle as well
as the thrust magnitude and direction. Interesting airplane ﬂight examples
are long-range cruise, take-oﬀ, accelerated climb, maneuvers, and superma-
neuvers. Transatmospheric ﬂight-of-entry vehicles require the consideration

364
12 Atmospheric and Transatmospheric Trajectories
of aerothermal loads due to excessive ﬂight speeds. A ballistic entry vehicle is
incapable of maneuvering within the atmosphere, whereas a lifting entry ve-
hicle possesses moderate down-range and cross-range maneuvering capability,
as well as reduced aerothermal loads by having a shallow trajectory. Rocket
ascent trajectories are characterized by a rapidly decreasing mass and a nearly
constant thrust, resulting in high rates of climb and transatmospheric acceler-
ation. An interesting ballistic rocket ascent trajectory is the gravity turn most
launch vehicles use for achieving a continuously curving ﬂight in absence of lift.
Exercises
12.1. Derive the equations of motion for an atmospheric ﬂight vehicle as-
suming a nonrotating, spherical planet. Such an approximate model is often
employed for a preliminary analysis into the vehicle’s trajectory.
12.2. Carrying forward the approximations of Exercise 12.1, derive the equa-
tions of translational motion assuming further that the vehicle maintains zero
side force and bank angle and is ﬂying in an absence of wind.
12.3. If the planetary curvature is ignored in Exercise 12.2 (ﬂat-planet ap-
proximation), what is the nature of possible trajectories, and what are the
relevant equations of motion? Such an approximation is commonly employed
in analyzing short-range ﬂights.
12.4. Using the assumptions of Exercise 12.3, with ϵ = 0, the parabolic drag
polar of Eq. (12.40) with constant parameters CD0, K, and the ideal power-
plant characteristics (Chapter 11), determine
(a) the lift coeﬃcient required for the maximum gliding range (fT = 0), as-
suming a small (constant) glide angle, −φ.
(b) the lift coeﬃcient required for the maximum cruising range of a jet air-
plane, assuming level ﬂight and a constant thrust setting (fT , cT constants).
(c) the lift coeﬃcient required for the maximum cruising range of a propeller
airplane, assuming level ﬂight and a constant power setting (Pesh, cP con-
stants).
12.5. Using the assumptions of Exercise 12.3, estimate how long a Diamant-
18 glider (weight 441 kg, aspect ratio 22.7, wing span 18 m, K = 0.0171, and
the maximum L/D of 45) can stay airborne in a ﬂight beginning at 1 km
standard altitude.
12.6. Employing the assumptions given in the preamble to Exercise 12.4,
estimate the following for Boeing-737 jetliner at the cruising altitude of 11 km
(data for the airplane during cruise are CD0 = 0.017, K = 0.047, cT =
0.75 1/hr, wing area 91.05 m2, empty mass 27,310kg, payload 16,000kg, and
take-oﬀmass 52,400 kg):

12.6 Summary
365
(a) maximum lift-to-drag ratio during cruise.
(b) maximum range and corresponding lift-to-drag ratio.
(c) maximum endurance and corresponding lift-to-drag ratio.
12.7. With the assumptions of Exercise 12.4, derive the following expressions
for the speeds at which level ﬂight is possible for a jet airplane at a given
altitude and thrust setting:
v = vx

x ±

x2 −1 ,
where
vx =
(
2mg
√
K
ρS√CD0
is the level ﬂight speed corresponding to the maximum lift-to-drag ratio,
(L/D)max, and x .= fT (L/D)max
mg
.
12.8. How important are the acceleration terms due to the earth’s rotation
and curvature in the long-distance ﬂight of a jet airliner? Try to answer this
question by repeating the simulation of the trajectory of the airplane in Exam-
ple 12.1 without the terrestrial rotation and curvature terms, and comparing
the ﬁnal position of the aircraft with that computed in the example.
12.9. Carry out the simulation of the jet airliner’s trajectory given in Ex-
ample 12.1 until 2 min after all the fuel is exhausted, i.e., t = 6 hr, 2 min.
Assume that the FMS continues maintaining the constant lift coeﬃcient.
12.10. Repeat Example 12.2 in the presence of a steady, 50 km/hr wind from
the southeast. What is the initial heading such that the intended destination
can be reached in a straight ﬂight? What is the total time of ﬂight?
12.11. Modify the programs of Example 12.1 for simulating the trajectory of
a turboprop airplane with wing platform area, S = 45 m2, mean aerodynamic
chord, ¯c = 2.49 m, which begins its level cruise at a standard altitude of
18,000ft over London’s Heathrow airport (δ = 51.5◦, λ = 0, with an initial
mass, m = 22, 000 kg, speed, v = 140 m/s, and velocity azimuth, A = 100◦).
The drag polar is given by constant coeﬃcients, CD0 = 0.02, K = 0.055.
The structural limitations are given by qmax = 9000 N/m2, Mmax = 0.51.
A constant power setting is maintained throughout the cruise such that Pesh =
1800.93 SHP and cP = 0.61 kg/hr/SHP at h = 18, 000 km, and Pesh varies in
direct proportion to the atmospheric density thereafter. Assume that during
cruise, the autopilot maintains a zero sideslip, zero bank angle, and a constant
angle of attack, such that the lift coeﬃcient remains constant at CL = 0.45.
The total fuel mass is 3300 kg, suﬃcient for a 3−hr cruise. Run the simulation
for a 2.75-hr cruise, and plot the state variables and relevant aerodynamic and
propulsive parameters.

366
12 Atmospheric and Transatmospheric Trajectories
12.12. Repeat Exercise 12.8 for the airplane ﬂight of Exercise 12.11.
12.13. Carry out the simulation of a New York–London cruise of a Concorde
supersonic airliner (S = 358.25 m2, mean aerodynamic chord, ¯c = 14.02 m)
initial mass, m = 175, 000 kg, initial fuel mass 90,000kg, at a constant Mach
number, M = 2, and initial altitude 55,000 ft. Assume CD0 = 0.02, K = 0.25
at M = 2, and a constant TSFC, cT = 1.8 1/hr. The service ceiling of a Con-
corde is 60,000ft, which limits the maximum altitude during the cruise-climb.
Select the initial heading, A, such that a great-circle route in the zero-wind
condition is obtained. The airplane is to be ﬂown at the constant Mach number
while maintaining a coordinated, straight ﬂight. There is little possibility of
structural constraints being violated in such a ﬂight proﬁle (in the absence of
wind gusts). Plot the time history of all relevant ﬂight parameters, including
lift coeﬃcient and fuel mass.
12.14. Repeat Exercise 12.13 in the presence of a steady, 100 km/hr wind
from the northeast. Would the airplane reach London with the available fuel?
12.15. Assuming a quasi-steady climb with a small, constant climb angle
and the preamble of Exercise 12.4, constant thrust (or power) setting, and a
given altitude, derive the expressions for the maximum rate of climb (and the
corresponding lift coeﬃcient and speed) for
(a) a jet airplane.
(b) a propeller airplane.
12.16. For the airplane of Exercise 12.16, estimate the maximum quasi-steady
rate of climb and the corresponding speed at standard sea level if the airplane
is powered by two engines, each rated at sea level thrust of 66,708 N. How
good is the assumption of small climb angle in this case?
12.17. Simulate the accelerated climb of a Lockheed SR-71 reconnaisance air-
craft20 with wing planform area S = 167.22 m2, wing span b = 16.9461 m,
mean aerodynamic chord ¯c = 9.868 m, initial mass m = 77, 000 kg, initial
fuel mass 36,290kg, beginning at δ = 40◦, λ = −120◦, speed v = 250 m/s,
ﬂight-path angle φ = 30◦, and velocity azimuth A = 40◦. Since the actual
aero-propulsion data of this airplane are unavailable in literature, assume the
engine thrust and TSFC can be obtained from engine.m by multiplying the
values resulting from the code by 2.17 and 1.5, respectively. Furthermore, as-
sume that the parasite drag coeﬃcient, CD0, and lift-dependent drag factor,
20 The SR-71 Blackbird is the world’s fastest operational airplane. Its ﬁrst few years
of existence in the 1960s were undisclosed, due to the secret nature of its mission
of ﬂying above Mach 3.2 and 80,000 ft altitude over hostile territories. Due to its
low-observable technology, the SR-71 was routinely undetected, and its ﬂight path
was commonly beyond the reach of most surface-to-air missiles and interceptor
ﬁghters. Although the SR-71 is now in museum, most of its ﬂight characterstics
are held secret.

12.6 Summary
367
K, can be obtained from parasite.m and liftddf.m by multiplying the results
by 0.5 and 2.04, respectively. The structural limitations can be approximated
by qmax = 26, 000 N/m2, Mmax = 3.55.
12.18. Develop the approximate equations of motion for the ground-run phase
of the take-oﬀmaneuver such that the assumptions of Exercise 12.4 are valid.
Furthermore, derive an approximate expression for the ground-run distance,
sG, assuming that the reciprocal of acceleration is a linear function of the
square of speed, i.e., 1/ ˙v ≈A + Bv2, where A, B are constants.
12.19. Airplane vertical maneuvers are often analyzed by assuming either
(a) constant speed or (b) constant energy (conservative) ﬂight. The load fac-
tor, n, is taken to be a constant in both cases. Solve the approximate equations
of ﬂight in a vertical plane with the assumptions of Exercise 12.4 for each case,
given the initial condition v0, h0, φ0.
12.20. A ﬁghter airplane with mg/S = 4000 N/m2, subsonic aerodynamic
parameters (M < 0.9), CL max = 1.6, CD0 = 0.012, (L/D)max = 12, nmax = 9,
and a standard sea level thrust-to-weight ratio (fT /mg)SL = 1.2 executes a
conservative pull-up of n = 6 from level ﬂight at standard sea level. Using the
analytical results of Exercise 12.19 and neglecting density variations during
the maneuver, calculate the minimum initial speed v0 required for completing
a vertical loop without stalling. What is the altitude at the top of the loop?
12.21. The ﬁghter airplane of Exercise 12.20 executes a constant speed pull-
up of v = 300 m/s from level ﬂight at standard sea level. What is the highest
load factor possible for a complete vertical loop? (Ignore atmospheric density
variations during the maneuver.)
12.22. Horizontal turns without thrust vectoring are usually analyzed by as-
suming steady and coordinated ﬂight with a constant load factor, n = sec σ.
Using these assumptions, estimate (a) the maximum instantaneous and (b) the
maximum sustained turn rates of the ﬁghter airplane given in Exercise 12.20 at
standard sea level. Also, calculate the corresponding speeds and load factors.
12.23. Repeat the calculations of Exercise 12.22 at a standard altitude of
11 km, assuming the thrust is directly proportional to atmospheric density,
and the supersonic aerodynamic parameters (1.5 < M < 1.8) of the airplane
are CL max = 0.9, CD0 = 0.018, (L/D)max = 8.
12.24. Repeat case (c) of Example 12.5 using a sideways thrust deﬂection by
employing μ = 45◦throughout the turn. What is the net change (if any) in
the ﬁnal azimuth, speed, and altitude from that presented in the example?
12.25. Use the nonrotating, ﬂat-planet approximation (Exercise 12.3) to de-
rive the approximate equations for a ballistic entry. Choose the altitude, h,
as the independent variable, and range, s =

x2 + y2, square of speed, and
ﬂight-path angle as dependent variables.

368
12 Atmospheric and Transatmospheric Trajectories
12.26. Of the several possible analytical solutions to the approximate ballistic
entry equations derived in Exercise 12.25, a popular one involves the assump-
tion that the component of acceleration due to gravity along the ﬂight path is
negligible compared to the deceleration caused by drag (i.e., g sin φ ≪D/m).
Furthermore, since entry speeds are quite large, the variation of the ﬂight-
path angle during ballistic entry is usually taken to be negligible. With these
assumptions, along with an exponential atmospheric model, ρ = ρ0e−h/H,
and a constant drag coeﬃcient, CD, obtain a closed-form expression for the
variation of speed with altitude, and estimate the maximum deceleration and
rate of heat transfer [Eq. (12.54)] with the corresponding altitudes. Take the
initial condition at entry to be (hi, vi, φi).
12.27. Repeat the ballistic entry simulation of Example 12.6 assuming that
the de-boost is performed at the apogee of the given orbit, with a 10% impul-
sive reduction in the inertial speed.
12.28. Repeat the maneuvering entry simulation of Example 12.7 with a
smooth variation of the bank angle during 450 ≤t < 550 s, given by
σ(t) = 90◦sin π(t −450)
50
.
What is the diﬀerence, if any, in the resulting trajectory and the landing point
location compared with cases (a) and (b) of Example 12.7?
12.29. Use the nonrotating, ﬂat-planet approximation (Exercise 12.3) with
ϵ = 0 to develop the approximate equations for the vertical ascent of a rocket.
Assuming an ideal, single-stage rocket, negligible drag, and a linear variation
of mass with time, solve for the altitude and speed at burn-out, given the
initial and ﬁnal mass to be m0 and mf, respectively.
12.30. Calculate the remaining classical orbital elements (Chapter 5) of the
resulting orbits for the two launch vehicle designs in Example 12.8, from the
data of Table 12.15. Which of the two orbits has the higher energy, and why?
12.31. Repeat the launch trajectory simulation of design (b) in Example 12.8,
and tabulate the resulting orbital elements using the following initial relative
velocity azimuth:
(a) A = 90◦.
(b) A = 0◦.
(c) A = 270◦.
Is there any diﬀerence in the trajectories of cases (a) and (c)? Explain.
12.32. Extend the launch trajectory simulation of design (b) in order to pre-
dict the latitude and longitude of landing point (5 km altitude) after the cap-
sule’s re-entry.

13
Attitude Dynamics
13.1 Aims and Objectives
•
To present the universal rotational dynamics model applicable to all
aerospace vehicles, emphasizing the commonality between the stability
and control characteristics of aircraft and spacecraft.
•
To derive several attitude dynamics models based on the useful
kinematic parameters introduced in Chapter 2.
•
To introduce single-axis, open-loop, time-optimal impulsive maneuvers.
•
To present a rigorous derivation of the attitude motion model for
atmospheric ﬂight.
•
To model and simulate important aerospace attitude motion examples,
ranging from spin-stabilized, rotor- and thruster-controlled spacecraft, to
gravity gradient satellites, thrust-vectored rockets, and
six-degree-of-freedom, inertia-coupled, ﬁghter airplanes.
13.2 Euler Equations of Rotational Motion
Up to this point, we have largely conﬁned our attention to the translational
motion of ﬂight vehicles, which is represented by the motion of the center of
mass. The rotational motion of a vehicle is important for various reasons (aero-
dynamics, pointing of weapons, payload, or antennas, etc.) and governs the
instantaneous attitude (orientation). In Chapter 2, we saw how the attitude
of a coordinate frame can be described relative to a reference frame. It was
evident that the instantaneous attitude depends not only upon the rotational
kinematics, but also on rotational dynamics which determine how the attitude
parameters change with time for a speciﬁed angular velocity. If we consider
a ﬂight vehicle to be rigid, a reference frame attached to the vehicle could be
used to represent the vehicle’s attitude. However, in such a case, the angular
velocity cannot be an arbitrary parameter but must satisfy the laws of rota-
tional dynamics that take into account the mass distribution of the vehicle. In

370
13 Attitude Dynamics
this chapter we shall derive the governing equations of rotational dynamics,
which are equivalent to Newton’s laws for translational dynamics (Chapter 4).
In Chapter 4, the rotational dynamics of a body—taken to be a collection
of particles of elemental mass, ∂m—was seen to be described by the following
equation of motion derived from Newton’s second law by taking moments
about a point o, which is either stationary or the body’s center of mass:
M =
 
r × ∂mdv
dt

.
(13.1)
Here v is the total (inertial) velocity of the particle, r is the relative position
of the particle with respect to the point o (which serves as the origin of a
reference coordinate frame), and M .=  (r × ∂f) is the net external torque
about o. In the derivation of Eq. (13.1), it has been assumed that all internal
torques cancel each other by virtue of Newton’s third law. This is due to the
fact that the internal forces between any two particles constituting the body
act along the line joining the particles.1 By taking the limit ∂m →0, we can
replace the summation over particles by an integral over mass, and write
M =
 
r × dv
dt

dm .
(13.2)
In Chapter 4, we also deﬁned a particle’s angular momentum by ∂H .= r ×
∂mv. By integration, the total angular momentum of the body can be written
as follows:
H =

r × vdm .
(13.3)
Assuming that the body has a constant mass, let us diﬀerentiate Eq. (13.3)
with time, leading to
dH
dt =

v × vdm +

r × dv
dt dm .
(13.4)
The ﬁrst term on the right-hand side of Eq. (13.6) is identically zero, while the
second term is easily identiﬁed from Eq. (13.2) to be the net external torque,
M; thus, we have
dH
dt = M .
(13.5)
Note that in the above derivation, o is either a stationary point or the body’s
center of mass. When applied to the general motion of a ﬂight vehicle, it is
useful to select o to be the center of mass. In such a case, the moving reference
frame, (oxyz), is called a body frame.
Now, let us assume that the body is rigid, i.e., the distance between
any two points on the body does not change with time. The rigid-body
1 Most forces of interaction among particles obey this principle, with the exception
of the magnetic force.

13.2 Euler Equations of Rotational Motion
371
assumption—valuable in simplifying the equations of motion—is a reason-
able approximation for the rotational dynamics of most ﬂight vehicles. Then
it follows that since the center of mass is a point ﬁxed relative to the body
(although it may not always lie on the body), the magnitude of the vector r
is invariant with time. Hence, we can write the total (inertial) velocity of an
arbitrary point on the rigid body located at r relative to o as follows:
v = v0 + ω × r ,
(13.6)
where v0 denotes the velocity of the center of mass, o, and ω is the angular
velocity of the reference coordinate frame with the origin at o. Therefore, for
a rigid body, Eqs. (13.3) and (13.6) lead to the following expression for the
angular momentum:
H =

r × v0dm +

r × (ω × r)dm .
(13.7)
The ﬁrst term on the right-hand side of Eq. (13.7) can be expressed as

r × v0dm =

rdm

× v0 ,
(13.8)
which vanishes by the virtue of o being the center of mass (
/
rdm = 0). Thus,
we have
H =

r × (ω × r)dm .
(13.9)
We choose to resolve all the vectors in the body frame with axes ox, oy, oz
along unit vectors i, j, k, respectively, such that
r = xi + yj + zk,
(13.10)
ω = ωxi + ωyj + ωzk,
(13.11)
H = Hxi + Hyj + Hzk,
(13.12)
M = Mxi + Myj + Mzk.
(13.13)
By substituting the vector components into Eq. (13.9) and simplifying, we
have the following matrix-vector product for the angular momentum:
H = Jω ,
(13.14)
where J is the inertia tensor, given by
J .=
⎛
⎝
/
(y2 + z2)dm
−
/
xydm
−
/
xzdm
−
/
xydm
/
(x2 + z2)dm
−
/
yzdm
−/ xzdm
−/ yzdm
/ (x2 + y2)dm
⎞
⎠.
(13.15)
Clearly, J is a symmetric matrix. In terms of its components, J is written as
follows:

372
13 Attitude Dynamics
J .=
⎛
⎝
Jxx Jxy Jxz
Jxy Jyy Jyz
Jxz Jyz Jzz
⎞
⎠.
(13.16)
The components of the inertia tensor are divided into the moments of inertia,
Jxx, Jyy, Jzz, and the products of inertia, Jxy, Jyz, Jxz. Recall that ω is the
angular velocity of the reference coordinate frame, (oxyz). This frame has
its origin, o, ﬁxed at the center of mass of the rigid body. However, if the
axes of the frame are not ﬁxed to the rigid body, the angular velocity of the
body would be diﬀerent from ω. In such a case, the moments and products of
inertia would be time-varying. Since the main advantage of writing the angular
momentum in the form of Eq. (13.14) lies in the introduction of an inertia
tensor, whose elements describe the constant mass distribution of the rigid
body, we want to have a constant inertia tensor. If we deliberately choose to
have the axes of the body frame, (oxyz), ﬁxed to the body, and thus rotating
with the same angular velocity, ω, as that of the body, the moments and
products of inertia will be invariant with time. Such a reference frame, with
axes tied rigidly to the body, is called a body-ﬁxed frame. From this point
forward, the body frame (oxyz) will be taken to be the body-ﬁxed frame.
Hence, ω in Eq. (13.14) is the angular velocity of the rigid body, and J is a
constant matrix.
The equations of rotational motion of the rigid body can be obtained in
the body-ﬁxed frame by substituting Eq. (13.14) into Eq. (13.5) and applying
the rule of taking the time derivative of a vector (Chapter 2):
M = J∂ω
∂t + ω × (Jω) ,
(13.17)
where the partial time derivative represents the time derivative taken with
reference to the body-ﬁxed frame,
∂ω
∂t
.=
⎧
⎨
⎩
dωx
dt
dωy
dt
dωz
dt
⎫
⎬
⎭=
⎧
⎨
⎩
˙ωx
˙ωy
˙ωz
⎫
⎬
⎭.
(13.18)
By replacing the vector product in Eq. (13.17) by a matrix product (Chap-
ter 2), we can write
M = J∂ω
∂t + S(ω)Jω ,
(13.19)
where
S(ω) =
⎛
⎝
0
−ωz
ωy
ωz
0
−ωx
−ωy
ωx
0
⎞
⎠.
(13.20)
Equation (13.19) represents three scalar, coupled, nonlinear, ordinary diﬀeren-
tial equations, called Euler’s equations of rotational dynamics. These are the
governing equations for rotational dynamics of rigid bodies, and their solution

13.3 Rotational Kinetic Energy
373
gives the angular velocity, ω, at a given instant. In Chapter 2, we derived the
kinematic equations for the rotation of a coordinate frame in terms of var-
ious alternative attitude representations. These kinematic equations, along
with Euler’s equations of rotational dynamics, complete the set of diﬀerential
equations needed to describe the changing attitude of a rigid body under the
inﬂuence of a time-varying torque vector, M. The variables of the rotational
motion are thus the kinematical parameters representing the instantaneous
attitude of a body-ﬁxed frame, and the angular velocity of the rigid body
resolved in the same frame.
13.3 Rotational Kinetic Energy
In Chapter 4, we derived the kinetic energy for a system of N particles
T = 1
2mv2
0 + 1
2
N

i=1
miu2
i ,
(13.21)
where ui is the speed of the ith particle (of mass mi) relative to the center
of mass o, which is moving with a speed v0. When applied to a body, the
summation over particles is replaced by an integral over mass, and we have
T = 1
2mv2
0 + 1
2

u2dm .
(13.22)
It is clear from Eq. (13.6) that for a rigid body, u2 = (ω × r) · (ω × r), and
we can write
T = 1
2mv2
0 + 1
2

(ω × r) · (ω × r)dm .
(13.23)
The same result could be obtained by using the following deﬁning expression
of the kinetic energy, and substituting Eq. (13.6) for a rigid body:
T = 1
2

v · vdm .
(13.24)
The ﬁrst term on the right-hand side of Eq. (13.23) represents the kinetic
energy due to the translation of the center of mass, whereas the second term
denotes the kinetic energy of rotation about the center of mass. The expression
for the rotational kinetic energy of the rigid body, Trot can be simpliﬁed by
utilizing the angular momentum [Eq. (13.9)], leading to
Trot .= 1
2

(ω × r) · (ω × r)dm = 1
2ω · H = 1
2ωT Jω .
(13.25)
This expression for the rotational kinetic energy of a rigid body is very useful
in simplifying Euler’s equations.

374
13 Attitude Dynamics
The rotational kinetic energy is conserved if there is no external torque
applied to the rigid body. This fact is evident by taking the time derivative
of Eq. (13.25), and substituting Euler’s equations, Eq. (13.18), with M = 0:
dTrot
dt
= 1
2
dω
dt · H + 1
2ω · dH
dt = 0 .
(13.26)
Since M = 0, the second term on the right-hand side of Eq. (13.26) vanishes
due to Eq. (13.5), while the ﬁrst term vanishes by the virtue of Eq. (13.18),
which produces dω
dt · H = −ω · (ω × H) = 0. In the absence of an external
torque (such as in spacecraft applications), the conservation of both rotational
kinetic energy and angular momentum can be eﬀectively utilized in obtaining
analytical relationships between the angular velocity and the inertia tensor.
13.4 Principal Body Frame
As seen in Chapter 2, the translation of a frame is trivially handled by merely
shifting the origin of the coordinate frame. In terms of the body-ﬁxed frame,
such a translation of the origin (center of mass of rigid body) would produce a
modiﬁcation of the inertia tensor easily obtained by the parallel axes theorem
(discussed later in this chapter). However, a rotation of the body-ﬁxed frame
about the same origin is nontrivial. The body-ﬁxed frame used above in deriv-
ing Euler’s equations has an arbitrary orientation relative to the rigid body.
There are inﬁnitely many ways in which these axes can be ﬁxed to a given
rigid body at the center of mass. A great simpliﬁcation in Euler’s equations is
possible by choosing a particular orientation of the body-ﬁxed frame relative
to the rigid body such that the products of inertia, Jxy, Jyz, Jxz, vanish. Such
a frame is called the principal body-ﬁxed frame. The inertia tensor resolved
in the principal body frame is a diagonal matrix, Jp. In order to derive the
coordinate transformation that produces the principal frame, ip, jp, kp, from
an arbitrary body-ﬁxed frame, i, j, k, consider the rotation matrix, Cp, deﬁned
by
⎧
⎨
⎩
i
j
k
⎫
⎬
⎭= Cp
⎧
⎨
⎩
ip
jp
kp
⎫
⎬
⎭.
(13.27)
The relationship between a vector resolved in the principal frame and the same
vector in an arbitrary body-ﬁxed frame is thus through the rotation matrix,
Cp. If we continue to denote the vectors resolved in the principal frame by the
subscript p, we have
ω = Cpωp .
(13.28)
Now, since there is no change in the rotational kinetic energy caused by the
coordinate transformation, we can utilize Eq. (13.25) and write
Trot = 1
2ωT Jω = 1
2ωpT Jpωp .
(13.29)

13.4 Principal Body Frame
375
Upon substituting Eq. (13.28) into Eq. (13.29), and comparing the terms on
both the sides of the resulting equation, we have
ωp
T Jpωp = ωT Jω = ωp
T Cp
T JCpωp ,
(13.30)
which, on applying the orthogonality property of the rotation matrix, yields
Jp = Cp
T JCp .
(13.31)
Since Jp is a diagonal matrix, it easily follows [4] that the diagonal elements
of Jp are the distinct eigenvalues of J, while Cp has the eigenvectors of J as
its columns. Thus, Eq. (13.31) is the formula for deriving the inertia tensor in
the principal frame and the coordinate transformation matrix, Cp, from the
eigenvalue analysis of J.
Example 13.1. A rigid body has the following inertia tensor:
J =
⎛
⎝
100
10
35
10
250
50
35
50
300
⎞
⎠kg.m2 .
Find the inertia tensor in the principal frame and the coordinate transforma-
tion matrix, Cp.
This problem is easily solved with the following MATLAB statements em-
ploying the intrinsic eigenvalue analysis function eig.m:
>> J=[100 10 35;10 250 50;35 50 300]; %inertia tensor
>> [Cp,Jp]=eig(J) %rotation matrix & principal inertia tensor
Cp =
0.9862
-0.0754
0.1473
-0.0103
0.8605
0.5094
-0.1651
-0.5039
0.8479
Jp =
94.0366
0
0
0
219.8462
0
0
0
336.1172
>> Cp’*J*Cp %check the rotation matrix
ans =
94.0366 0.0000
-0.0000
0.0000
219.8462
-0.0000
-0.0000
-0.0000
336.1172
Thus, the principal inertia tensor is
Jp =
⎛
⎝
94.0366
0
0
0
219.8462
0
0
0
336.1172
⎞
⎠kg.m2 .
The computed rotation matrix represents the orientation of the currently em-
ployed body-ﬁxed frame with respect to the principal frame.

376
13 Attitude Dynamics
The inertia tensor can be diagonalized by the foregoing procedure to pro-
duce the principal inertia tensor if and only if the principal moments of inertia
are distinct, which is the case for an asymmetric object. For an axisymmetric
body, two principal moments of inertia are equal, but it is neither necessary,
nor feasible, to follow the above approach for obtaining the principal moments
of inertia (since the principal axes are easily identiﬁed from symmetry). Hence,
for all practical purposes we shall work only in the principal body frame, and
the following discussion pertains to the principal body axes, without explicitly
carrying the subscript p.
13.5 Torque-Free Rotation of Spacecraft
A spacecraft’s rotational motion is generally in the absence of external torques.
In order to analyze the rotational stability and control characteristics of space-
craft, it thus becomes necessary to study the torque-free motion of rigid bod-
ies. Since the external torque is zero, the angular momentum of the rigid
body about its center of mass (or a ﬁxed point) is conserved by the virtue of
Eq. (13.5). Thus, we can express Euler’s equations for the torque-free motion
(M = 0) of a rigid body in the principal frame as follows:
Jxx ˙ωx + ωyωz(Jzz −Jyy) = 0,
Jyy ˙ωy + ωxωz(Jxx −Jzz) = 0,
(13.32)
Jzz ˙ωz + ωxωy(Jyy −Jxx) = 0,
where the dot represents the time derivative,
d
dt. For a general, asymmetric
body possessing nonzero angular velocity components about all three axes,
Eq. (13.32) is diﬃcult to solve in a closed form, but is amenable to numerical
integration in time.
Since a torque-free rigid body does not have a mechanism for energy dis-
sipation, its rotational kinetic energy is conserved according to Eq. (13.26).
However, a spacecraft is an imperfect rigid body, generally consisting of sev-
eral rigid bodies rotating relative to each other (e.g., reaction wheels and
control gyroscopes), as well as containing liquid propellants. The rotors and
liquid propellants provide mechanisms for internal dissipation of the rotational
kinetic energy through friction and sloshing motion, respectively. When an-
alyzing the rotational stability of spacecraft, it is therefore vital to regard
them as semirigid objects that continually dissipate kinetic energy until a sta-
ble equilibrium is achieved. For a semirigid body, Euler’s equations remain
valid (as the external torque remains zero), but the rotational kinetic energy
is not conserved.
Before solving torque-free Euler equations for a general case, let us use
them to analyze rotational stability characteristics of rigid spacecraft. Such
an analysis would reveal the axes about which a stable rotational equilib-
rium can be achieved. The process of obtaining a stable equilibrium through

13.5 Torque-Free Rotation of Spacecraft
377
constant speed rotation about a principal axis is called spin stabilization.
Although spin stabilization is strictly valid only for a spacecraft, it can be
applied approximately to some atmospheric ﬂight vehicles that have a small
aerodynamic moment about the spin axis, such as certain missiles and projec-
tiles. A riﬂe bullet is a good example of a spin-stabilized object. Furthermore,
spin stabilization is also the principle of operation of gyroscopic instruments,
which are commonly used in aerospace vehicles.
Stability is a property of an equilibrium and can be deﬁned in many ways.
For our purposes, we shall deﬁne a stable equilibrium as the one about which
a bounded disturbance does not produce an unbounded response. The distur-
bance can be regarded as the initial condition, expressed in terms of an initial
deviation of the motion variables from the equilibrium. In a stability analy-
sis, it is suﬃcient to study the response to a small initial deviation, because
stability is not inﬂuenced by the magnitude of the disturbance.
13.5.1 Axisymmetric Spacecraft
When the spacecraft possesses an axis of symmetry, Euler’s equations are
further simpliﬁed. Consider a spacecraft rotating about its axis of symmetry,
oz, called the longitudinal axis. Due to axial symmetry, Jxx = Jyy, and we
have
Jxx ˙ωx + ωyωz(Jzz −Jxx) = 0,
Jxx ˙ωy + ωxωz(Jxx −Jzz) = 0,
(13.33)
Jzz ˙ωz = 0.
It is clear from Eq. (13.33) that the spacecraft is in a state of equilibrium
whenever ωx = ωy = 0, called pure spin about the axis of symmetry. It is
also evident from the last of Eq. (13.33) that ˙ωz = 0, or ωz = n = constant,
irrespective of the magnitudes of ωx, ωy = 0. Let us assume that the spacecraft
was in a state of pure spin when a disturbance, ωx(0), ωy(0), is applied at time
t = 0. Let us examine the resulting motion of the spacecraft by solving the
ﬁrst two equations of Eq. (13.33), which are written in the following vector
matrix form:
 ˙ωx
˙ωy

=
 0 −k
k
0
 ωx
ωy

,
(13.34)
where k = n (Jzz−Jxx)
Jxx
. Equation (13.34) represents linear, time-invariant state
equations
(Chapter
14)
whose
solution
with
the
initial
condition,
ωx(0), ωy(0) at t = 0, is easily written in a closed form as follows:
 ωx(t)
ωy(t)

= eKt
ωx(0)
ωy(0)

,
(13.35)

378
13 Attitude Dynamics
where eKt is the matrix exponential (Chapter 14), and
K =
 0 −k
k
0

.
(13.36)
Using one of the methods of Chapter 14, we can write the matrix exponential
by taking the inverse Laplace transform of the resolvent as follows:
eKt = L−1(sI −K)−1 =
cos(kt) −sin(kt)
sin(kt)
cos(kt)

.
(13.37)
Therefore, the solution is given by
ωx(t) = ωx(0) cos(kt) −ωy(0) sin(kt),
ωy(t) = ωx(0) sin(kt) + ωy(0) cos(kt).
(13.38)
Equation (13.33) implies that the rotational motion of an axisymmetric, rigid
spacecraft, disturbed from the equilibrium state of pure spin about the lon-
gitudinal axis by a disturbance ωx(0), ωy(0), is oscillatory in the oxy plane
(called the lateral plane), while the spin rate, ωz = n, remains unaﬀected.
This causes a coning motion of the disturbed body about the axis of symme-
try. An important characteristic of the solution given by Eq. (13.38) is easily
seen to be the following:
ω2
xy
.= ω2
x + ω2
y = ω2
x(0) + ω2
y(0) = constant,
(13.39)
which implies that the magnitude of the angular velocity component in the
lateral plane is constant. This lateral angular velocity component, ωxy, is
responsible for the coning motion called precession. Since precession is a
constant amplitude oscillation, whose magnitude is bounded by that of the
applied disturbance, we say that the motion of a rigid spacecraft about its
axis of symmetry is unconditionally stable. Figure 13.1 shows the geome-
try of precessional motion, where the angular velocity, ω, makes a constant
angle, α = tan−1 ωxy
n , with the axis of symmetry, oz. Furthermore, the an-
gular momentum, H = Jxx(ωxi + ωyj) + Jzznk, makes a constant angle,
β = tan−1 Jxxωxy
Jzzn , with the axis of symmetry, called the nutation angle. The
axis of symmetry thus describes a cone of semivertex angle α, called the body
cone, about the angular velocity vector, and a cone of semivertex angle β,
called the space cone, about the angular momentum vector. Note that while
ω is a rotating vector, H is ﬁxed in inertial space due to the conservation
of angular momentum. In Fig. 13.1, Jxx > Jzz is assumed, for which β > α.
While a rigid, axisymmteric spacecraft’s precessional motion is uncondition-
ally stable (as seen above), the same cannot be said for a semirigid spacecraft.
Since most spacecraft carry some liquid propellants, they must be regarded
as semirigid, wherein the angular momentum is conserved, but the rotational
kinetic energy dissipates due to the sloshing of liquids caused by precession.

13.5 Torque-Free Rotation of Spacecraft
379
H
o
z
Space cone 
n
Body cone 
C
B Z
Fig. 13.1. Precession of an axisymmetric spacecraft.
Whenever energy dissipation is present in a dynamical system, there is a ten-
dency to move toward the state of equilibrium with the lowest kinetic energy.
In a state of pure spin about a principal axis, there is no energy dissipation
because the liquids rotate with the same speed as the spacecraft. Thus, pure
spin about a principal axis spin is a state of equilibrium for a semirigid space-
craft. For the torque-free rotation of spacecraft, the lowest kinetic energy is
achieved for pure spin about the major principal axis. This can be seen from
Eq. (13.25), while applying the law of conservation of angular momentum.
Hence, the internal energy dissipation eventually converts the precessional
motion into a spin about the major axis. Therefore, a semirigid spacecraft
can be spin-stabilized only about its major axis. In applying the foregoing
results to such a spacecraft, it is necessary that Jzz > Jxx. If the axis of sym-
metry is the minor axis, pure spin about it would eventually be converted into
a tumbling motion about the major principal axis in the presence of inevitable
disturbances and liquid propellants. This phenomenon was encuntered in the
ﬁrst satellite launched by NASA, named Explorer, rendering the long cylin-
drical spacecraft useless after a few days in orbit. For this reason, all spinning
satellites are designed to have the axis of symmetry as the major axis. One
may study the attitudinal kinematics of axisymmetric spacecraft, spin sta-
bilized about the longitudinal axis, by simultaneously solving the kinematic
equations of motion (Chapter 2) with the Euler equations. Since the angular
momentum vector, H, is ﬁxed in space, an obvious choice of the reference in-
ertial frame is with the axis K along H. The most commonly used kinematic
parameters for spin-stabilized spacecraft are the (ψ)3, (θ)1, (φ)3 Euler angles
(Chapter 2). Since the spin axis of the precessing spacecraft is never exactly
aligned with the angular momentum (θ ̸= 0), the singularity of this attitude

380
13 Attitude Dynamics
z
o
H
R
n
G
Z
y
x
Y
X
Z
Fig. 13.2. Attitude of a precessing, axisymmetric spacecraft via 3-1-3 Euler angles.
representation at θ = 0, 180◦is not encountered, thereby removing the main
disadvantage of Euler’s angle representation. Therefore, the constant nutation
angle is given by β = θ, and from Fig. 13.2 depicting Euler’s angles, we have
sin θ = Jxxωxy
H
=
Jxxωxy

Jxxω2xy + Jzzn2 ,
cos θ = Jzzn
H
=
Jzzn

Jxxω2xy + Jzzn2 .
(13.40)
The general kinematic equations for the (ψ)3, (θ)1, (φ)3 Euler angles were
derived in Chapter 2 and are repeated here as follows:
⎧
⎨
⎩
˙ψ
˙θ
˙φ
⎫
⎬
⎭=
1
sin θ
⎛
⎝
sin φ
cos φ
0
cos φ sin θ
−sin φ sin θ
0
−sin φ cos θ −cos φ cos θ sin θ
⎞
⎠
⎧
⎨
⎩
ωx
ωy
ωz
⎫
⎬
⎭.
(13.41)
Upon substitution of ωz = n, and Eq. (13.39) into Eq. (13.41) we have
˙ψ = ωxy
sin θ,
˙θ = 0,
(13.42)
˙φ = n −ωxy
tan θ.
Since both θ and ωxy are constants [Eqs. (13.39) and (13.40)], the angular
rates ˙ψ and ˙φ are also constants, whose alternative expressions are obtained
by substituting Eq. (13.40) into Eq. (13.42) as

13.5 Torque-Free Rotation of Spacecraft
381
˙ψ =

Jxxω2xy + Jzzn2
Jxx
,
˙θ = 0,
(13.43)
˙φ = n(1 −Jzz
Jxx
) = −k .
The angular rate ˙ψ represents the frequency of precession and is called the
precession rate, while ˙φ represents the total spin rate of the body in the inertial
frame and is known as the inertial spin rate. If Jxx > Jzz, the axisymmetric
body is said to be prolate, and ˙ψ has the same sign as that of ˙φ. For the
case of an oblate body (Jxx < Jzz), the angular rates ˙ψ and ˙φ have opposite
signs. The solution for the Euler angles is easily obtained by integration of
Eq. (13.43)—with the initial orientation at t = 0 speciﬁed as ψ(0), θ(0), φ(0)—
to be the following:
ψ = ψ0 +

Jxxω2xy + Jzzn2
Jxx
t,
θ = θ(0),
(13.44)
φ = φ(0) −kt = φ(0) −n(1 −Jzz
Jxx
)t.
The angles ψ and φ thus vary linearly with time due to a constant precession
rate, ωxy.
13.5.2 Asymmetric Spacecraft
Let us assume that an asymmetric spacecraft is in a state of pure spin of
rate n about the principal axis oz, prior to the time t = 0 when a small dis-
turbance, ωx(0), ωy(0), is applied. At a subsequent time, the angular velocity
components can be expressed as ωz = n + ϵ, and ωx, ωy. Since a small distur-
bance has been applied, we can treat ϵ, ωx, ωy as small quantities and solve
Euler’s equations. If the solution indicates that ϵ, ωx, ωy grow with time in an
unbounded fashion, it will be evident that our assumption of small deviations
remaining small is false, and we are dealing with an unstable equilibrium.
Otherwise, we have a stable equilibrium. Hence, with the assumption of small
deviation from equilibrium, we can write the approximate, linearized Euler
equations as follows:
Jxx ˙ωx + nωy(Jzz −Jyy) ≈0,
Jyy ˙ωy + nωx(Jxx −Jzz) ≈0,
(13.45)
Jzz ˙ϵ ≈0,
in which we have neglected second- (and higher-) order terms involving
ϵ, ωx, ωy. The ﬁrst two equations of Eq. (13.45) can be written in the fol-
lowing vector matrix form:

382
13 Attitude Dynamics
 ˙ωx
˙ωy

=
 0
−k1
k2
0
  ωx
ωy

,
(13.46)
where k1 = n (Jzz−Jyy)
Jxx
and k2 = n (Jzz−Jxx)
Jyy
. Being in a linear, time-invariant
state-space form, these approximate equations are solved using the matrix
exponential as follows:
 ωx(t)
ωy(t)

= eAt
 ωx(0)
ωy(0)

,
(13.47)
where eAt is the matrix exponential denoting the state transition matrix
(Chapter 14) and
A =
 0
−k1
k2
0

.
(13.48)
The eigenvalues of A determine whether the ensuing motion will be bounded,
and thus denote stability or instability. They are obtained as follows:
| sI −K |= s2 + k1k2 = 0 ,
(13.49)
or,
s1,2 = ±

−k1k2 .
(13.50)
From the eigenvalues of A, it is clear that two possibilities exist for the re-
sponse: (a) k1k2 < 0, for which one eigenvalue has a positive real part, in-
dicating exponentially growing (unbounded) motion, or (b) k1k2 > 0, for
which both eigenvalues are imaginary, and the motion is a constant ampli-
tude (bounded) oscillation about the equilibrium. Therefore, for stability we
must have k1k2 > 0, which implies that either (Jzz > Jxx, Jzz > Jyy) or
(Jzz < Jxx, Jzz < Jyy). Hence, spin stabilization of a rigid, asymmetric space-
craft is possible about either the major principal axis or the minor principal
axis. This conﬁrms our conclusion of the previous section, where the axisym-
metric spacecraft (which, by deﬁnition, has only major and minor axes) was
seen to be unconditionally stable. However, if we take into account the inter-
nal energy dissipation, the analysis of the previous section dictates that an
asymmetric, semirigid spacecraft can be spin-stabilized only about the major
axis.
There is a major diﬀerence in the stable oscillation of the asymmetric
spacecraft from that of the axisymmetric spacecraft studied in the previous
section. Due to the presence of a nonzero, bounded disturbance, ϵ, about
the spin axis, the angular velocity component, ωz = n + ϵ, does not remain
constant in the case of the asymmetric body. This translates into a nodding
motion of the spin axis, wherein the nutation angle, β, changes with time.
Such a motion is called nutation of the spin axis and is superimposed on the
precessional motion.2
2 Certain textbooks and research articles on space dynamics use nutation inter-
changeably with precession, which is incorrect and causes untold confusion. The

13.5 Torque-Free Rotation of Spacecraft
383
Assuming k1k2 > 0, we have from Eq. (13.47),
eKt = L−1(sI −K)−1 =
⎛
⎝
cos(√k1k2t)
−

k1
k2 sin(√k1k2t)

k2
k1 sin(√k1k2t)
cos(√k1k2t)
⎞
⎠. (13.51)
Therefore, the approximate, linearized solution for precessional motion for
small disturbance is given by
ωx(t) = ωx(0) cos(

k1k2t) −ωy(0)
'
k1
k2
sin(

k1k2t),
ωy(t) = ωx(0)
'
k2
k1
sin(

k1k2t) + ωy(0) cos(

k1k2t).
(13.52)
In order to solve for the nutation angle, we must integrate the last equation
of Eq. (13.32). However, by consistently neglecting the second-order term,
ωxωy, in this equation due to the assumption of small disturbance, we have
obtained an erroneous result of ˙ϵ = 0, or ϵ = constant in Eq. (13.45). Hence,
the linearized analysis is insuﬃcient to model the nutation of an asymmetric
body. We must drop the assumption of small disturbance and numerically
integrate the complete, torque-free, nonlinear Euler equations, Eq. (13.32),
for an accurate simulation of the combined precession and nutation.3
The kinematic equations for the instantaneous attitude of the asymmetric
spacecraft in terms of the Euler angles are given by Eq. (13.41), with the
choice (as before) of the constant angular momentum vector as the K-axis
of the inertial frame. By a simultaneous, numerical integration of the kine-
matic equations along with the nonlinear Euler’s equations, we can obtain the
instantaneous attitude of the asymmetric, rigid spacecraft.
Example 13.2. A rigid spacecraft with principal moments of inertia Jxx =
4000 kg.m2, Jyy = 7500 kg.m2, and Jzz = 8500 kg.m2 has initial angular
velocity ω(0) = (0.1, −0.2, 0.5)T rad/s and an initial attitude ψ(0) = 0, θ(0) =
π
2 , φ(0) = 0. Simulate the subsequent rotation of the spacecraft.
Since the given initial condition is relatively large, the approximation of
small disturbance is invalid, and both precession and nutation must be prop-
erly simulated. We carry out the three-degree-of-freedom simulation by solv-
ing the nonlinear, torque-free Euler equations, and the kinematic equations,
dictionary in this regard is very helpful: “precession” is derived from the Latin
word praecedere, which means the act of preceding and is directly relevant to the
motion of a spinning, axisymmetric, prolate body, wherein the rotation of spin
axis, ˙ψ, precedes the spinning motion, ωz = n, itself. On the other hand, “nuta-
tion” is derived from the Latin word nutare, which means to nod and describes
the nodding motion, ˙θ, of the spin axis.
3 Jacobi [41] derived a closed-form solution for Euler’s equations of torque-free,
asymmetric spacecraft [Eq. (13.32)] in terms of the Jacobian elliptic functions.
However, due to the complexity in evaluating these functions [2], we shall avoid
their use here and carry out numerical integration of Eq. (13.32).

384
13 Attitude Dynamics
Eq. (13.41), with the use of a fourth-order Runge–Kutta algorithm (Appen-
dix A) encoded in the intrinsic MATLAB function, ode45.m. The time deriva-
tives of the motion variables, ωx, ωy, ωz, ψ, θ, φ, required by ode45.m are sup-
plied by the program spacerotation.m, which is tabulated in Table 13.1. The
simulation is carried out for 40 s by specifying the initial condition in the call
for ode45.m as follows:
>> [t,x]=ode45(@spacerotation,[0 40],[0.1 -0.2 0.5 0 0.5*pi 0]’);
>> subplot(121),plot(t,x(:,1:3)*180/pi),hold on,...
subplot(122),plot(t,x(:,4:6)*180/pi)%time evolution of motion variables
Table 13.1. M-ﬁle spacerotation.m for the Torque-free Equations of Rotational
Motion
function xdot=spacerotation(t,x)
%program for torque-free rotational dynamics and Euler 3-1-3 kinematics
%of rigid spacecraft
%x(1)=omega_x, x(2)=omega_y, x(3)=omega_z (angular velocity in rad/s)
%x(4)=psi, x(5)=theta, x(6)=phi (rad)
%(c) 2006 Ashish Tewari
J1=4000; J2=7500; J3=8500; %principal moments of inertia (kg.m^2)
xdot(1,1)=x(2)*x(3)*(J2-J3)/J1;
xdot(2,1)=x(1)*x(3)*(J3-J1)/J2;
xdot(3,1)=x(1)*x(2)*(J1-J2)/J3;
xdot(4,1)=(sin(x(6))*x(1)+cos(x(6))*x(2))/sin(x(5));
xdot(5,1)=cos(x(6))*x(1)-sin(x(6))*x(2);
xdot(6,1)=x(3)-(sin(x(6))*cos(x(5))*x(1)+cos(x(6))*cos(x(5))*x(2))/sin(x(5));
The resulting time-history plots of the motion variables are shown in
Fig. 13.3. The precession is evident in the oscillation of ωx, ωy, ψ, φ, while
the nutation is observed in the the oscillation of ωz, θ. Such a complex motion
would be completely missed in a simulation with the approximate, linearized
equations, Eq. (13.45), whereby an erroneous result of ωz = 0.5 rad/s (=
28.65◦/s) would be obtained.
13.6 Spacecraft with Attitude Thrusters
Spin stabilization of torque-free spacecraft is a cheap (fuel-free) and simple
procedure, compared to stabilization with externally applied torques. How-
ever, controlling the motion of a spinning body for carrying out the necessary
attitude maneuvers is a complex task. Generally, all spacecraft have a reaction
control system (RCS) that employs a pair of rocket thrusters—called atti-
tude thrusters—about each principal axis for performing attitude maneuvers.
When torques about each principal axis are applied for stability and control,
the spacecraft is said to be three-axis stabilized, as opposed to spin-stabilized.
The attitude thrusters of an RCS are operated in pairs with equal and
opposite thrust, such that the net external force remains unaﬀected. The

13.6 Spacecraft with Attitude Thrusters
385
0
10
20
30
40
−15
−10
−5
0
5
10
15
20
25
30
35
Time (s)
ωx,ωy,ωz (deg./s)
0
10
20
30
40
−200
0
200
400
600
800
1000
1200
1400
Time (s)
ψ,θ,φ (deg.)
ωz
ωy
ωx
φ
θ
ψ
Fig. 13.3. Simulated precession and nutation of an asymmetric spacecraft.
ﬁring of thrusters is limited to short bursts, which can be approximated by
torque impulses. A torque impulse is deﬁned as a torque of inﬁnite magnitude
acting for an inﬁnitesimal duration, thereby causing an instantaneous change
in the angular momentum of the spacecraft about the axis of application.
The concept of the torque impulse is very useful in analyzing the single-axis
rotation of spacecraft, as it allows us to utilize the well-known linear system
theory [43], wherein the governing linear diﬀerential equation is solved in a
closed form with the use of the unit impulse function, δ(t), which denotes an
impulse of unit magnitude.4 The change in angular momentum caused by an
impulsive torque, M(t) = M(0)δ(t), can be obtained as the total area under
the torque vs. time graph, given by
ΔH .=
 ∞
−∞
M(t)dt =
 ∞
−∞
M(0)δ(t)dt = M(0) .
(13.53)
4 The unit impulse function (also known as the Dirac delta function), δ(t −t0),
denoting a unit impulse applied at time t = t0, has the useful property,
∞
−∞
f(t)δ(t −t0)dt = f(t0) ,
where f(t) is a single-valued function.

386
13 Attitude Dynamics
Thus, the torque impulse causes an instantaneous change in the angular mo-
mentum, equal to the value of the torque at the instant of impulse application,
t = 0.
13.6.1 Single-Axis Impulsive Rotation
A complex maneuver can be designed as a sequence of single-axis rotations,
for which the time-optimal, linear control theory [42] is most amenable.5 Con-
sider a rigid spacecraft with moment of inertia, Jzz, about the axis of desired
rotation, oz, and equipped with a pair of attitude thrusters capable of exerting
a large, maximum torque, Mz(0), for an inﬁnitesimal duration, Δt →0, which
causes an instantaneous change in the angular momentum by ΔHz = Mz(0).
Since the torque as a function of time is given by Mz(t) = Mz(0)δ(t), Euler’s
equations reduce to the following:
˙ωx = 0,
˙ωy = 0,
(13.54)
Jzz ˙ωz = Mz(0)δ(t).
In terms of the angular displacement about oz, θ, the last of Eq. (13.54) can
be written as
¨θ = Mz(0)
Jzz
δ(t) ,
(13.55)
whose solution is easily obtained by successive integration using Laplace trans-
form [4] to be
ωz(t) = ˙θ = ωz(0) + Mz(0)
Jzz
us(t),
θ(t) = θ(0) + ωz(0)t + Mz(0)
Jzz
r(t),
(13.56)
where θ(0), ωz(0) refer to the initial condition immediately before torque ap-
plication, us(t) .=
/
δ(t)dt is the unit step function applied at t = 0, deﬁned
by
us(t −t0) =

0,
t < t0 ,
1,
t ≥t0,
(13.57)
5 Time-optimal control, as the name implies, is a special branch of optimal control
theory, which deals with the problem of optimizing time in a general dynamical
system. When the applied inputs are limited in magnitude (such as in the case
of rocket thrusters), and the system is governed by linear diﬀerential equations,
the maximum principle of Pontryagin dictates that the inputs of the maximum
possible magnitude should be applied in order to minimize the total time of a
given displacement of the system. Pontryagin’s principle is directly applicable to
single-axis maneuvers of rigid spacecraft by attitude thrusters.

13.6 Spacecraft with Attitude Thrusters
387
and r(t) .=
/
us(t)dt is the unit ramp function applied at t = 0, deﬁned by
r(t −t0) =

0,
t < t0 ,
t −t0,
t ≥t0 .
(13.58)
In a practical application, the thruster torque, Mz(0), is not inﬁnite, and the
time interval, Δt, over which the torque acts, tends to zero. However, since
Δt is much smaller than the period of the maneuver, it is a good approxi-
mation (and a valuable one) to assume an impulsive thruster torque, and to
employ Eq. (13.56) as the approximate solution. Equation (13.56) implies that
the response to a single impulse is a linearly increasing displacement and a
step change in the speed. Therefore, if the maneuvering requirement is for a
step change in angular velocity (called a spin-up maneuver), a single impulse
is suﬃcient. However, if a given single-axis displacement is desired—called a
rest-to-rest maneuver—one has to apply another impulse of opposite direc-
tion, −Mz(0)δ(t −τ), in order to stop the rotation at time t = τ, when the
desired displacement has been reached. Since the governing diﬀerential equa-
tion, Eq. (13.55), is linear, its solution obeys the principle of linear superpo-
sition [43], which allows a weighted addition of the responses to individual
impulses to yield the total displacement caused by multiple impulses. There-
fore, the net response to two equal and opposite impulses applied after an
interval t = τ is given by
ωz(t) = Mz(0)
Jzz
[us(t) −us(t −τ)],
θ(t) = Mz(0)
Jzz
[r(t) −r(t −τ)] + ωzτ = θd .
(13.59)
Hence, the angular velocity becomes zero, and a desired constant displace-
ment, θ(t) = θd, is reached at t = τ. The magnitude of θd can be controlled
by varying the time τ at which the second impulse is applied (Fig. 13.4).
The application of two equal and opposite impulses of maximum magnitude
for achieving a time-optimal displacement is called bang-bang control. This is
an open-loop control, requiring only the desired displacement, as opposed to
closed-loop control [43], for which the knowledge of instantaneous displace-
ment, θ(t), is also required. The bang-bang, time-optimal, open-loop control
is exactly applicable to any linear system without resistive and dissipative
external forces. However, even when a small damping force is present, one can
approximately apply this approach to control linear systems.
13.6.2 Attitude Maneuvers of Spin-Stabilized Spacecraft
Attitude thrusters can be used for controlling the attitude of a spin-stabilized,
axisymmetric spacecraft, which involves multi-axis rotation (precession). If the
spin rate is constant (ωz = n), the governing diﬀerential equations describing

388
13 Attitude Dynamics
( )
M
t
z
(a)
(b)
U
0
0
( )
z t
X
(0)
z
zz
M
J
0
U
(0)(
)
z
zz
M
t
J
U

(0)
z
zz
M
J
U
(0)
z
M
(0)
z
zz
M
t
J
0
t
(0)
z
M

( )t
R
t
Fig. 13.4. Time-optimal, rest-to-rest, single-axis attitude maneuver using thrusters
with θ(0) = ωz(0) = 0.
precession, Eq. (13.42), are linear, thus enabling the use of time-optimal, bang-
bang, open-loop control in the same manner as the single-axis rotation. In
order to apply the bang-bang approach, the precessional motion is excited by
applying a torque normal to the spin axis and then exerting another equal and
opposite torque to stop the precession when the desired spin-axis orientation
has been reached. However, contrary to single-axis rotation, the principal axes
of a precessing body are not ﬁxed in space. Hence, the directions of the two
torque impulses are referred to the inertial axes.
Let a change of the spin axis be desired through application of thruster
torque impulses, as shown in Fig. 13.5. After the application of the ﬁrst im-

13.6 Spacecraft with Attitude Thrusters
389
pulse, ΔH1, the angular momentum changes instantaneously from H0 =
Jzznk to its new value H1 = H0 + ΔH1, such that a nutation angle of
β =
θd
2
is obtained. We select the orientation of the inertial frame such
that oZ is along the intermediate angular momentum vector, H1, and oX
coincides with the principal axis ox at time t = 0. Therefore, we have
ψ(0) = 0, θ(t) = θd
2 , φ(0) = 0 in terms of the 3-1-3 Euler angles. It is clear
from Fig. 13.5 that the ﬁrst torque impulse applied normal to the spin axis
at t = 0 is equal to
ΔH1 = Jzzn tan θd
2

cos θd
2 J + sin θd
2 K

= Jzzn tan θd
2 j
(13.60)
and causes a positive rotation of the angular momentum vector about −I.
Since the angular momentum has been deﬂected from the spin axis, the pre-
cessional motion is excited and is allowed to continue for half inertial spin
(φ = π) until i = −I. At that precise instant, the second impulse,
ΔH2 = Jzzn tan θd
2

cos θd
2 J −sin θd
2 K

= Jzzn tan θd
2 j ,
(13.61)
is applied in order to stop the precession by causing a positive rotation of the
angular momentum vector about I. The angular momenta at the beginning
and end of the precession are given in terms of the instantaneous principal
axes by
H1 = Jzznk + Jzzn tan θd
2 j,
H2 = Jzznk .
(13.62)
It is important to emphasize that the principal axes used in the expressions
for H1 and H2 are at diﬀerent instants, separated in time by half the inertial
spin time period. The time taken to undergo half inertial spin is given by
Eq. (13.42) to be
t1/2 = π/ ˙φ =
Jxxπ
n | Jxx −Jzz | .
(13.63)
It is clear from Eq. (13.63) that the time it takes to reach the ﬁnal position
is large if the spin rate, n, is small or if the two moments of inertia are close
to each other.
Although the two impulses are opposite in direction relative to the inertial
frame, they have the same orientation in the the instantaneous body-ﬁxed
principal frame. Hence, the same pair of attitude thrusters can be used to
both start and stop the precession after multiples of half inertial spin (φ =
±π, 2π, . . .). However, in order to achieve the largest possible deﬂection of the
spin axis—which is equal to θd and happens when H0, H1, H2 all lie in the
same plane—the precession angle, ψ, must have changed exactly by ±180◦
when the precession is stopped, which requires that | ˙ψ |=| ˙φ |. On equating
the magnitudes of the inertial spin and precession rates in Eq. (13.42), it is

390
13 Attitude Dynamics
Fig. 13.5. Time-optimal attitude control of a spin-stabilized, axisymmetric space-
craft using thrusters.
clear that the matching of precession with inertial spin is possible if and only
if
cos θd
2 =
Jzz
| Jxx −Jzz | .
(13.64)
Because the cosine of an angle cannot exceed unity, this implies that precession
and inertial spin can be synchronized only for prolate bodies with Jxx >
2Jzz. Equation (13.64) gives the largest possible angular deﬂection of the spin
axis (θd) that can be achieved with a given pair of attitude thrusters and is
obtained when | ψ |=| φ |= π. Since the nutation angle, β = θd
2 , is determined
purely by the impulse magnitude, its value can be diﬀerent from that given by
Eq. (13.64), in which case the total angular deviation of the spin axis is less
than 2β. From the foregoing discussion, it is clear that for a greater ﬂexibility
in performing spin-axis maneuvers, more than one pair of attitude thrusters
(or more than two impulses) should be employed.
Since the applied torque magnitude for each impulse, My, is proportional
to tan( θd
2 ), it follows that a change of spin axis by θd = 180◦would be inﬁnitely
expensive. Because impulsive maneuvers are impossible in practice, one must
take into account the nonzero time, Δt, of thruster ﬁring, which leads to an
average thruster torque requirement My = ΔH1
Δt . In simulating the spacecraft
response due to thruster ﬁring, one must carefully model the actual variation
of the thruster torque with time. There are two distinct ways of simulating
the bang-bang, impulse response of spin-stabilized, axisymmetric spacecraft:
(a) calculating the precessional angular velocity components, ωx, ωy, due to
the applied impulses, and using them as an initial condition to simulate the
ensuing torque-free motion, or (b) directly simulating the response to the

13.6 Spacecraft with Attitude Thrusters
391
applied impulses by solving the equations of motion with a nonzero torque.
Of these two, the former is an initial response describing precession between
the two impulses, while the latter includes the impulse response caused by
the impulses themselves. Since θ ̸= 0 for the ﬁrst method, we can use the
3-1-3 Euler angles for a nonsingular attitude simulation. However, the second
approach begins with a zero nutation angle before the application of the ﬁrst
impulse; thus, the 3-1-3 Euler angle representation is unsuitable; instead, the
3-2-1 Euler angle representation should be employed in (b). The kinematic
equations of motion in terms of the (ψ)3, (θ)2, (φ)1 Euler angles are easily
derived using the methods of Chapter 2 to be
⎧
⎨
⎩
˙ψ
˙θ
˙φ
⎫
⎬
⎭=
1
cos θ
⎛
⎝
0
sin φ
cos φ
0 cos φ cos θ −sin φ cos θ
1 sin φ sin θ
cos φ sin θ
⎞
⎠
⎧
⎨
⎩
ωx
ωy
ωz
⎫
⎬
⎭.
(13.65)
Here we employ the initial angular momentum vector, H0, to be the inertial
axis, oZ. Therefore, the nutation angle, β, is given by
cos β .= K · k = cos θ cos φ ,
(13.66)
which determines β uniquely, as β ≤π. However, in this case, the nutation
angle, β, denotes the total deviation of the spin axis from its original position
(rather than the deviation from the intermediate angular momentum, H1, of
the 3-1-3 Euler angle representation shown in Fig. 13.5). We have seen above
that a 180◦deﬂection of the spin axis requires an inﬁnite impulse magni-
tude, which is practically impossible. Hence, we are necessarily simulating an
impulse response with β < π, for which the 3-2-1 Euler angles are nonsin-
gular. We shall apply both simulation methods, (a) and (b), in the following
example.
Example 13.3. Consider an axisymmetric, spin-stabilized, rigid spacecraft with
principal moments of inertia Jxx = Jyy = 1500 kg.m2 and Jzz = 500 kg.m2
and spin rate ωz = 1 rad/s. A pair of attitude thrusters mounted normal
to the spin axis produces a constant torque at each one-hundredth second
ﬁring. Simulate the bang-bang response to two thruster ﬁrings spaced half a
precession period apart, in order to achieve the maximum spin-axis deﬂection.
We begin by using the approach of simulating the response to initial con-
ditions by writing a program called spacesymmthrust.m, which is tabulated
in Table 13.2. This program calculates the necessary impulse magnitudes for
achieving the maximum spin-axis deviation possible with a synchronization
of the inertial spin with precession, such that ψ = −φ = π at the end of
the second impulse. The resulting impulse magnitudes are translated into the
initial conditions for the angular velocity and nutation angle, and response
to the initial conditions following the impulses is simulated by solving the
torque-free equations—encoded as spacesymm.m (Table 13.3)—by the MAT-
LAB Runge–Kutta solver, ode45.m. The MATLAB statement for invoking the
program, and its eﬀects, is given as follows:

392
13 Attitude Dynamics
>> spacesymmthrust
thd2 = 1.0472
Ts = 4.7124
which implies
θd
2
= 1.0472 rad (60◦) and t1/2 = 4.7124 s. The impulsive
thruster torque required for this maneuver is calculated as follows:
My = Jzzn tan θd
2
Δt
= (500)(1) tan 60◦
0.01
= 86, 602.54 s,
which is a rather large magnitude, considering the size of the spacecraft (e.g.,
a pair of thrusters symmetrically placed 2 m away from oy must produce a
thrust of 21, 650.64 N for 0.01 s). The resulting plots of ωx(t), ωy(t), ωxy(t)
and ψ(t), φ(t) are shown in Figs. 13.6 and 13.7, respectively. It is clear from
these plots that the inertial spin and precession are synchronous, with both ψ
and φ reaching 180◦simultaneously at the end of the second applied impulse
(t = t1/2). The eﬀect of the two impulses is to instantaneously increase the
angular velocity component, ωy, thereby starting and stopping precession.
Since φ and ψ are synchronized, the single pair of attitude thrusters ﬁring
about oy achieves the maximum possible deﬂection of the spin axis by 120◦.
0
1
2
3
4
5
6
−40
−30
−20
−10
0
10
20
30
40
Time (s)
(deg./s)
ωx
ωy
ωxy
Fig. 13.6. Angular velocity response of a prolate, spin-stabilized spacecraft under-
going impulsive attitude maneuver (simulation by initial response).

13.6 Spacecraft with Attitude Thrusters
393
Table 13.2. M-ﬁle spacesymmthrust.m for the Simulation of Impulsive Attitude
Maneuver of a Spin-stabilized Spacecraft
%program for rotational dynamics and Euler 3-1-3 kinematics
%of rigid, axisymmetric, spin-stabilized spacecraft
%due to torque pulses about ’oy’ principal axis
%x(1)=omega_x, x(2)=omega_y (angular velocity in rad/s)
%x(3)=psi, x(4)=phi (rad)
%u = impulsive torque about ’oy’ axis (N-m)
%(c) 2006 Ashish Tewari
J1=1500; J3=500; %principal moments of inertia (kg.m^2)
thd2=acos(J3/(J1-J3))
T=0.01;
n=1; %rad/s
%thd2=atan(umax*T/(n*J3))
Ts=pi/abs(n*(1-J3/J1))
x=[];
x(1,1)=0;
x(2,1)=J3*n*tan(thd2)/J1;
x(3,1)=0;x(4,1)=0;
[t1,x1]=ode45(@spacesymm,[0 Ts],x);
N=size(t1,1);
x(1,1)=0;
x(2,1)=0;
x(3,1)=x1(N,3);x(4,1)=x1(N,4);
[t2,x2]=ode45(@spacesymm,[Ts+T Ts+T+1.5],x);
t=[t1;t2];x=[x1;x2];
dtr=pi/180;
plot(t,x(:,1:2)/dtr,t,sqrt(x(:,1).*x(:,1)+x(:,2).*x(:,2))/dtr),...
xlabel(’Time (s)’),ylabel(’Precession angular velocity (deg./s)’)
figure
plot(t,x(:,3)/dtr,t,x(:,4)/dtr),xlabel(’Time (s)’),...
ylabel(’Precession angle, \psi, inertial spin angle, \phi (deg.)’)
Table 13.3. M-ﬁle spacesymm.m for the Torque-free Equations for a Rigid, Ax-
isymmetric, Spinning Spacecraft
function xdot=spacesymm(t,x)
%program for rotational dynamics and Euler 3-1-3 kinematics
%of rigid, axisymmetric, spin-stabilized spacecraft
%x(1)=omega_x, x(2)=omega_y (angular velocity in rad/s)
%x(3)=psi, x(4)=phi (rad)
%(c) 2006 Ashish Tewari
J1=1500; J3=500; %principal moments of inertia (kg.m^2)
n=1; %rad/s
%umax=1000;%torque magnitude
%T=0.01;%impulse duration
%thd2=atan(umax*T/(n*J3));%nutation angle
thd2=acos(J3/(J1-J3));
xdot(1,1)=x(2)*n*(J1-J3)/J1;%Euler’s eqn.(1)
xdot(2,1)=x(1)*n*(J3-J1)/J1;%Euler’s eqn.(2)
xdot(3,1)=(sin(x(4))*x(1)+cos(x(4))*x(2))/sin(thd2); %precession rate
xdot(4,1)=n*(1-J3/J1); %inertial spin rate

394
13 Attitude Dynamics
0
1
2
3
4
5
6
0
50
100
150
200
250
Time (s)
ψ,φ (deg.)
ψ
φ
Fig. 13.7. Precession and inertial spin angles of a prolate, spin-stabilized spacecraft
undergoing impulsive attitude maneuver (simulation by initial response).
Next we consider direct simulation using numerical integration of the
spacecraft Euler’s equations and 3-2-1 Euler kinematics with bang-bang
torque impulses. For this purpose, a program called spaceimpulse.m (Ta-
ble 13.4) provides the diﬀerential equations of motion to the MATLAB Runge–
Kutta solver, ode45.m. The numerical integration requires a smaller maximum
time step and relative tolerance than the default values of ode45.m because of
the necessity of modeling impulsive torque. The statements for the execution
of the program are given below, and the resulting plots of the state variables
are shown in Figs. 13.8 and 13.9. The angular velocity response (Fig. 13.8)
is identical to Fig. 13.6, whereas the 3-2-1 Euler angles produce a spin-axis
deviation of β = 120◦, as expected at the end of the impulse sequence. It is
again emphasized that this extremely large and rapid maneuver is atypical of
the actual spacecraft.
>> options=odeset(’MaxStep’,0.001,’RelTol’,1e-5);
>> [t,x]=ode45(@spaceimpulse,[0 6],[0 0 0 0 0]’,options);
13.6.3 Asymmetric Spacecraft Maneuvers by Attitude Thrusters
Unfortunately, the foregoing discussion of time-optimal, bang-bang control
cannot be extended to a simultaneous, arbitrary rotation of an asymmetric

13.6 Spacecraft with Attitude Thrusters
395
0
1
2
3
4
5
6
−40
−30
−20
−10
0
10
20
30
40
Time (s)
(deg./s)
ωx
ωy
ωxy
Fig. 13.8. Angular velocity response of a prolate, spin-stabilized spacecraft under-
going impulsive attitude maneuver (direct simulation with torque impulses).
Table 13.4. M-ﬁle spaceimpulse.m for State Equations of a Spin-stabilized Space-
craft with Bang-Bang Torque Impulses
function xdot=spaceimpulse(t,x)
%program for rotational dynamics and Euler (psi)_3 (theta)_2 (phi)_1
%kinematics of a rigid, axisymmetric spacecraft under the
%application of two torque impulses about ’oy’ axis, spaced
%half-precession period apart
%x(1)=omega_x, x(2)=omega_y
(angular velocity in rad/s)
%x(3)=psi, x(4)=theta, x(5)=phi (rad)
%(c) 2006 Ashish Tewari
J1=1500; J3=500; %principal moments of inertia (kg.m^2)
thd2=acos(J3/(J1-J3));
n=1; %spin rate (rad/s)
T=0.01; %duration of impulse (s)
umax=J3*n*tan(thd2)/T; %maximum torque of impulse (N-m)
Ts=T+pi/abs(n*(1-J3/J1)); %time of application of second impulse (s)
if t>=0 && t<=T
u=umax;
elseif t>Ts && t<=Ts+T
u=umax;
else
u=0;
end
xdot(1,1)=x(2)*n*(J1-J3)/J1;
xdot(2,1)=x(1)*n*(J3-J1)/J1+u/J1;
xdot(3,1)=(sin(x(5))*x(2)+cos(x(5))*n)/cos(x(4));
xdot(4,1)=cos(x(5))*x(2)-sin(x(5))*n;
xdot(5,1)=x(1)+(sin(x(5))*x(2)+cos(x(5))*n)*tan(x(4));

396
13 Attitude Dynamics
0
1
2
3
4
5
6
−100
−50
0
50
100
150
200
250
Time (s)
(deg.)
ψ
θ
φ
β = cos−1(cos θ cos φ)
Fig. 13.9. 3-2-1 Euler angles and nutation angle of a prolate, spin-stabilized space-
craft undergoing impulsive attitude maneuver (direct simulation with torque im-
pulses).
spacecraft about two or three axes. This is due to the nonlinear nature of
asymmetric Euler’s equations when more than one angular velocity compo-
nents is nonzero, in which case the linear superposition of solutions does not
hold, and the time-optimal control is not possible in a closed form. However,
if the rotations are small, Euler’s equations are rendered linear by approxima-
tion, and the bang-bang approach is valid. A practical method of dealing with
large, multi-axis, rest-to-rest rotations is to apply them in a sequential man-
ner. For such an approach, attitude thrusters about any two principal axes are
capable of producing an arbitrary orientation (such as the 3-1-3 Euler angle
attitude representations). Of course, one may choose to ﬁx attitude thrusters
about the minor and major axes, thereby precluding the unstable intermediate
axis rotation. We have already covered single-axis rotations; thus, modeling
of multiple, sequential, single-axis rotations requires no further discussion.
There are advanced closed-loop control algorithms [44] for deriving thruster
torques for a large and rapid maneuver of asymmetric spacecraft. Simulat-
ing the attitude response of a spacecraft to such torques with simultaneous,
large, multi-axis rotations is therefore essential. Numerical integration of non-
linear, coupled Euler’s equations with applied torque and kinematic diﬀeren-
tial equations is feasible through Runge–Kutta and other iterative methods

13.7 Spacecraft with Rotors
397
(Appendix A). Let us simulate a general impulsive maneuver with the stan-
dard Runge–Kutta solver of MATLAB, ode45.m.
Example 13.4. A rigid spacecraft with principal moments of inertia Jxx =
400 kg.m2, Jyy = 750 kg.m2, and Jzz = 850 kg.m2 has three pairs of thrusters,
each capable of generating a torque with adjustable magnitude and duration
about a principal axis. The spacecraft is initially at rest, with initial attitude in
terms of the 3-1-3 Euler angles given by ψ(0) = 0, θ(0) = π
2 , φ(0) = 0. Simulate
the attitude response of the spacecraft for 10 s to the following torque proﬁle:
M =
⎧
⎨
⎩
1000i −1000k N.m,
0 ≤t ≤1 s,
−1000i −750j + 750k N.m,
5 < t ≤5.97 s,
0,
t > 5.97 s .
We begin by writing a program called spacethruster.m (Table 13.5) to
provide the governing diﬀerential equations of motion with the speciﬁed torque
to the MATLAB Runge–Kutta solver, ode45.m. The numerical integration is
carried out with a smaller relative tolerance (10−5) than the default value
used in ode45.m because of the step changes in the torque. The statements
for the execution of the program are given below, and the resulting plots
of the state variables are shown in Figs. 13.10 and 13.11. There is a large
change of attitude and angular velocity during the maneuver. At the end of
the maneuver, the angular velocity becomes a near-zero constant, resulting in
an almost constant attitude. It is possible to reduce the residual angular velo-
city to exactly zero by either using bang-bang thruster impulses as explained
above, or using momentum wheels described in the next section.
>> options=odeset(’RelTol’,1e-5);
>> [t,x]=ode45(@spacethruster,[0 10],[0 0 0 0 pi/2 0]’,options);
13.7 Spacecraft with Rotors
As the frequent use of the attitude thruster reaction control system (RCS) for
stabilization and control entails a large fuel expenditure, most three-axis sta-
bilized spacecraft additionally employ momentum exchange devices (MED),
which consist of spinning rotors capable of exerting an internal torque on the
spacecraft about each principal axis. As the MED are rotated by electric mo-
tors that derive their power from solar arrays of the spacecraft, they provide
a fuel-free means of attitude control in the normal operation of the space-
craft. We shall consider here how a spacecraft with MED can be modeled and
simulated accurately.
Consider a spacecraft with principal inertia tensor J and angular velocity
resolved in the principal axes ω = (ωx, ωy, ωz)T . Now consider a rotor with
inertia tensor, Jr, about the spacecraft’s principal axes, rotating with an angu-
lar velocity relative to the spacecraft, ωr = (ωrx, ωry, ωrz)T , also resolved in

398
13 Attitude Dynamics
0
2
4
6
8
10
−100
−50
0
50
100
150
Time (s)
(deg./s)
ωx
ωy
ωz
Fig. 13.10. Angular velocity response of an asymmetric spacecraft to the prescribed
torque proﬁle.
Table 13.5. M-ﬁle spacethruster.m for State Equations of an Asymmetric Space-
craft with Speciﬁed Torque Proﬁle
function xdot=spacethruster(t,x)
%program for rotational dynamics and Euler 3-1-3 kinematics
%of rigid spacecraft with arbitrary torque profile
%x(1)=omega_x, x(2)=omega_y, x(3)=omega_z (angular velocity in rad/s)
%x(4)=psi, x(5)=theta, x(6)=phi (rad)
%(c) 2006 Ashish Tewari
J1=400; J2=750; J3=850; %principal moments of inertia (kg.m^2)
if t>=0 && t<=1
u=[1000;0;-1000];
elseif t>5 && t<=5.97
u=[-1000;-750;750];
else
u=[0;0;0];
end
xdot(1,1)=x(2)*x(3)*(J2-J3)/J1+u(1)/J1;
xdot(2,1)=x(1)*x(3)*(J3-J1)/J2+u(2)/J2;
xdot(3,1)=x(1)*x(2)*(J1-J2)/J3+u(3)/J3;
xdot(4,1)=(sin(x(6))*x(1)+cos(x(6))*x(2))/sin(x(5));
xdot(5,1)=cos(x(6))*x(1)-sin(x(6))*x(2);
xdot(6,1)=x(3)-(sin(x(6))*cos(x(5))*x(1)+cos(x(6))*cos(x(5))*x(2))/sin(x(5));

13.7 Spacecraft with Rotors
399
0
2
4
6
8
10
−400
−300
−200
−100
0
100
200
Time (s)
(deg.)
ψ
θ
φ
Fig. 13.11. Attitude response of an asymmetric spacecraft to the prescribed torque
proﬁle.
the spacecraft’s principal frame.6 The net angular momentum of the system
(spacecraft and rotor) is the following:
H = Jω + Jr(ω + ωr) ,
(13.67)
6 A transformation of the inertia tensor in the rotor’s principal frame to that in
the spacecraft’s principal frame can be easily performed through the parallel axes
theorem. The theorem states that the inertia tensor of a mass, m, about a par-
allelly displaced body frame, J, can be derived from that in the original body
frame, J′, by the following expression:
J = J′ + m
Δy2 + Δz2
−ΔxΔy
−ΔxΔz
−ΔxΔy
Δx2 + Δz2
−ΔyΔz
−ΔxΔz
−ΔyΔz
Δx2 + Δy2
,
where Δx, Δy, Δz are the components of the parallel displacement of the body
frame. After translating the principal frame of the rotor to the spacecraft’s center
of mass by the parallel displacement, a rotation is performed to align the rotor’s
principal axes with that of the spacecraft. If this rotation is represented by the
coordinate transformation of Eq. (13.27), the inertia tensor transformed through
the rotation is given by Eq. (13.31). The parallel axis theorem is also useful in
deriving the inertia tensor of a complex shaped body composed of several smaller
bodies with known inertia tensors.

400
13 Attitude Dynamics
the time derivative of which is zero (because no external torque acts on the
system), and is written as follows:
dH
dt = (J + Jr)dω
dt + dJ
dt ω + Jr
dωr
dt + dJr
dt ωr = 0 ,
(13.68)
or,
J∂ω
∂t +S(ω)Jω = −Jr
∂(ω + ωr)
∂t
+ S(ω)ωr

−S(ω+ωr)Jr(ω+ωr) , (13.69)
where S(ω) is the skew-symmetric matrix function of ω given by Eq. (13.19).
On comparison with Euler’s equations for a rigid body [Eq. (13.32)], we see
in Eq. (13.69) that the spacecraft can be treated as a rigid body, with the
terms on the right-hand side treated as the torque applied by the rotor on
the spacecraft. If several rotors are in the spacecraft, the right-hand side of
Eq. (13.69) is replaced by a summation of the corresponding terms of all the
rotors.
Equation (13.69) is a general equation for the rotation of a spacecraft with
a rotor whose angular velocity can be changing in time due to a varying spin
rate as well as a varying spin axis. If there is no change in the spin axis of
the rotor relative to the spacecraft, the rotor’s angular momentum about a
given principal axis is directly exchanged with that of the spacecraft by merely
changing the rotor’s spin rate. Such a rotor with its axis ﬁxed relative to the
spacecraft is called a reaction wheel when used in a nonspin-stabilized space-
craft. When a large rotor is used to control a spin-stabilized, axisymmetric
spacecraft, with its axis aligned with the spacecraft’s spin axis, the conﬁg-
uration is called a dual-spin spacecraft. Alternatively, if the rotor’s angular
velocity relative to the spacecraft is ﬁxed, but its axis is capable of tilting with
respect to the spacecraft, thereby applying a gyroscopic torque arising out of
the last term on right-hand side of Eq. (13.69) the rotor can be used to control
the attitude of a nonspinning, asymmetric spacecraft. Such a rotor with a vari-
able spin axis is called a control moment gyroscope (CMG). In some advanced
spacecraft, the rotor can have a variable spin rate as well a variable axis and
is called a variable-speed control moment gyroscope (VSCMG). Therefore, a
VSCMG is the most general momentum exchange device, and the models for a
reaction wheel and a CMG can be easily derived from it by simply neglecting
some speciﬁc terms on the right-hand side of Eq. (13.69). We will brieﬂy con-
sider how a VSCMG and a dual-spin spacecraft can be modeled appropriately.
13.7.1 Variable-Speed Control Moment Gyroscope
Consider an axisymmetric rotor with a variable spin rate, mounted at a rigid
spacecraft’s center of mass in such a way that its spin axis is free to rotate in
all directions (Fig. 13.12). Such a rotor is termed a fully gimbaled gyroscope,
and the arrangement that allows it to rotate freely about the spacecraft is

13.7 Spacecraft with Rotors
401
called gimbaling. Gimbaling can be carried out either using mechanical rotor
supports hinged about the three principal axes of the spacecraft (called gim-
bals) or using a magnetic suspension. Of these, the former is more commonly
employed. A motor is used to apply the necessary torque on the VSCMG ro-
tor relative to the spacecraft about each principal axis, in order to move the
rotor in a desired manner, thereby controlling the motion of the spacecraft.
Let Mr be the torque applied on the rotor. Then we can write the equations
of motion of the rotor relative to the spacecraft as follows:
Mr = Jr
∂ωr
∂t + S(ωr)Jrωr ,
(13.70)
where S(ωr) is the skew-symmetric matrix form of ωr given by Eq. (13.19).
The motion of the spacecraft is described by the dynamic equations, Eq. (13.69),
and the kinematic equations representing the attitude. Since the instanta-
neous attitude of the spacecraft’s principal axes can be arbitrary, we will
employ the nonsingular quaternion representation, q, q4 (Chapter 2). The at-
titude kinematics of the spacecraft in terms of the quaternion are given by
(Chapter 2)
d{q, q4}T
dt
= 1
2Ω{q(t), q4(t)}T ,
(13.71)
where Ω is the following skew-symmetric matrix of the angular velocity com-
ponents:
Ω =
⎛
⎜
⎜
⎝
0
ωz
−ωy ωx
−ωz
0
ωx
ωy
ωy
−ωx
0
ωz
−ωx −ωy −ωz
0
⎞
⎟
⎟
⎠.
(13.72)
For the general simulation of an attitude maneuver, Eqs. (13.69), (13.70), and
(13.71) must be integrated in time, with given initial conditions, ω(0), ωr(0),
and q(0), q4(0), and a prescribed motor torque proﬁle, M(t). In addition, the
rotor’s inertia tensor, Jr, which depends on the orientation of the rotor relative
to the spacecraft, must be known at the beginning of the maneuver.
Example 13.5. For the spacecraft with the inertia tensor and initial condition
given in Example 13.2, consider the a rotor, initially at rest relative to the
spacecraft, with the following inertia tensor in the spacecraft’s principal frame
(not included in J):
Jr =
⎛
⎝
50
−10
0
−10 100
15
0
15
250
⎞
⎠kg.m2 .
A three-axis motion of the rotor is initiated by the application of the following
motor torque proﬁle beginning at t = 0:
Mr =
⎧
⎨
⎩
7i −10j −200k N.m,
0 ≥t < 5 s ,
−7i + 10j N.m,
5 < t < 10 s ,
0,
t ≥10 s,

402
13 Attitude Dynamics
Z
Zr
i
k
j
Fig. 13.12. A spacecraft with a VSCMG.
Simulate the response of the spacecraft for 0 ≤t ≤40 s.
Assuming the spacecraft and the VSCMG rotor to be rigid bodies. Neglect-
ing friction in the rotor gimbals, we can model the system with Eqs. (13.69),
(13.70), and (13.71), which are integrated in time using the Runge–Kutta al-
gorithm of MATLAB, ode45.m. The time derivatives of the state variables,
ω, ωr, q, q4, are obtained from the equations of motion and are programmed
in the M-ﬁle spacevscmg.m (Table 13.6), along with the given motor torque
proﬁle. Another program, called skew.m (Table 13.7), is written for evalu-
ation the skew-symmetric form of a vector according to Eq. (13.19) within
spacevscmg.m. The following MATLAB statements are used to specify the
initial condition (through rot313.m and quaternion.m of Chapter 2) and in-
tegrate the equations of motion:
>> C=rot313(0.5*pi,0,0) %rotation matrix for the initial s/c attitude
C = 1.0000
0
0
0
0.0000
1.0000
0
-1.0000
0.0000
>> q0=quaternion(C) %initial quaternion of s/c
q0 =
0.707106781186547
0
0
0.707106781186547
>> [t,x]=ode45(@spacevscmg,[0 40],[0.1 -0.2 0.5 0 0 0 q0]’);
The rotor’s relative angular velocity response and the angular velocity
and attitude response of the spacecraft to the VSCMG motion are plotted in
Figs. 13.13–13.15. Note that the VSCMG attains an almost constant relative
speed about the principal axis oz after 5 s, with small amplitude oscillation
about a mean value of −225◦/s (−3.93 rad/s). The relative angular veloc-
ity components, ωrx, ωry, however, display much larger amplitude oscillations

13.7 Spacecraft with Rotors
403
Table 13.6. M-ﬁle spacevscmg.m for the Equations of Motion of a Rigid Spacecraft
with a VSCMG
function xdot=spacevscmg(t,x)
%program for torque-free rotational dynamics and quaternion kinematics
%of rigid spacecraft with a VSCMG
%x(1)=omega_rx, x(2)=omega_ry, x(3)=omega_rz (rotor relative ang. vel. (rad/s))
%x(4)=omega_x, x(5)=omega_y, x(6)=omega_z (spacecraft ang. vel. (rad/s))
%x(7)=q1, x(8)=q2, x(9)=q3, x(10)=q(4) (quaternion)
%this function needs the m-file "skew.m"
%(c) 2006 Ashish Tewari
J=diag([4000;7500;8500]); %principal inertia tensor (kg.m^2)
Jr=[50 -10 0;-10 100 15;0 15 250]; %rotor’s inertia tensor (kg.m^2)
if t>=0 && t<5
Mr=[7;-10;-200];
elseif t>5 && t<10
Mr=[-7;10;0];
else
Mr=[0;0;0];
end
wr=[x(1);x(2);x(3)];
w=[x(4);x(5);x(6)];
q=[x(7);x(8);x(9);x(10)];
dwr=inv(Jr)*(Mr-skew(wr)*Jr*wr);
dw=-inv(J+Jr)*(skew(w)*J*w+Jr*(dwr+skew(w)*wr)+skew(w+wr)*Jr*(w+wr));
S=[0 w(3,1) -w(2,1) w(1,1);
-w(3,1) 0 w(1,1) w(2,1);
w(2,1) -w(1,1) 0 w(3,1);
-w(1,1) -w(2,1) -w(3,1) 0];
dq=0.5*S*q;
xdot(1,1)=dwr(1,1);
xdot(2,1)=dwr(2,1);
xdot(3,1)=dwr(3,1);
xdot(4,1)=dw(1,1);
xdot(5,1)=dw(2,1);
xdot(6,1)=dw(3,1);
xdot(7,1)=dq(1,1);
xdot(8,1)=dq(2,1);
xdot(9,1)=dq(3,1);
xdot(10,1)=dq(4,1);
Table 13.7. M-ﬁle skew.m for the Evaluation of a Skew-symmetric Matrix
function S=skew(v)
%skew-symmetric matrix, S (3x3), form of vector v (3x1)
S=[0 -v(3) v(2);v(3) 0 -v(1);-v(2) v(1) 0];
about mean values of 0 and −22.5◦/s (−0.393 rad/s), respectively. Due to
this motion of the rotor, the spacecraft displays a much smoother angular
velocity response in the given duration, when compared to the response of the
same spacecraft to the speciﬁc initial condition without the VSCMG. This
implies that a part of the spacecraft’s angular momentum is absorbed by the
rotor. However, the response has by no means reached a steady state, and
the angular velocity components ωx, ωy show a divergent (unstable) behavior
(Fig. 13.13). In order to study the long-term response, we plot the angular
speed, | ω |, and principal angle, Φ, of the spacecraft in Fig. 13.16. It is evi-
dent that the spacecraft’s rotation keeps on increasing almost steadily with

404
13 Attitude Dynamics
0
5
10
15
20
25
30
35
40
−250
−200
−150
−100
−50
0
50
Time (s)
ωr (deg./s)
ωrx
ωry
ωrz
Fig. 13.13. Simulated VSCMG rotor angular velocity relative to the spacecraft.
time, and the principal angle has a randomly oscillatory tendency due to the
transfer of kinetic energy from the rotor. Such an unstable response is caused
by the undamped motion of the VSCMG, after the motors have ceased apply-
ing a torque. In an realistic case, bearing friction would eventually bring the
rotor to rest relative to the spacecraft, thereby damping spacecraft’s motion.
In a practical application, the motor torque is carefully controlled in order to
achieve a desired spacecraft orientation and velocity. This generally requires
a feedback loop (Chapter 14) for measuring spacecraft’s attitude and angular
velocity, and applying it as an input to a controller in order to generate a
control torque in real time.
13.7.2 Dual-Spin Spacecraft
Often, spacecraft are required to be prolate in shape. This is because a prolate
spacecraft ﬁts neatly into the long, aerodynamically eﬃcient payload bays of
the launch vehicles. As we have seen earlier, spin about the minor axis is
unstable because of internal energy dissipation. However, by using a rotor in
a dual-spin conﬁguration, the prolate spacecraft can be spin stabilized about
its (minor) axis of symmetry. Such an approach is commonly employed in
spin stabilizing communications satellites. Consider a prolate spacecraft with

13.7 Spacecraft with Rotors
405
0
50
100
150
200
250
300
350
400
−4
−2
0
2
4
6
8
Time (s)
ω (deg./s)
ωx
ωy
ωz
Fig. 13.14. Simulated angular velocity response of the spacecraft with a VSCMG
rotor.
a large rotor about its axis of symmetry, and a platform on which a commu-
nications payload is mounted (Fig. 13.17). It is required that the platform
must be spinning at a very small rate (generally the rate of rotation of the
planet relative to the orbit), ωp, such that the communications antennae are
always pointed toward the receiving station. The net angular momentum of
the dual-spin conﬁguration in the presence of a lateral disturbance, ωx, ωy, is
obtained from Eq. (13.67) to be
H = [Jpωp + Jr(ωp + ωr)]k + Jxy(ωxi + ωyj) ,
(13.73)
where Jp is the moment of inertia of the platform about the spin axis, Jr is
the moment of inertia of the rotor about the spin axis, and Jxy is the moment
of inertia of the total system (platform and rotor) about the lateral (major)
axis. The rotational kinetic energy of the system can be expressed as
T = 1
2(Jp + Jr)ω2
p + 1
2Jrω2
r + Jrωrωp + 1
2Jxyω2
xy ,
(13.74)
where ω2
xy = ω2
x + ω2
y. Although the net angular momentum is conserved, the
rotational kinetic energy is not conserved due to internal energy dissipation
caused by friction between the platform and the rotor, and sloshing of the
propellants in the RCS mounted on the rotor. The internal dissipation of

406
13 Attitude Dynamics
0
50
100
150
200
250
300
350
400
−1
−0.8
−0.6
−0.4
−0.2
0
0.2
0.4
0.6
0.8
1
Time (s)
q
q1
q2
q3
q4
Fig. 13.15. Simulated attitude response of the spacecraft with a VSCMG rotor.
0
50
100
150
200
250
300
350
400
0
2
4
6
8
10
|ω| (deg./s)
0
50
100
150
200
250
300
350
400
50
100
150
200
250
300
Time (s)
Φ (deg.)
Fig. 13.16. Spacecraft’s angular speed and principal rotation caused by VSCMG.

13.7 Spacecraft with Rotors
407
Platform
p
X
r
X
xy
X
Rotor
Fig. 13.17. A dual-spin spacecraft.
kinetic energy for the platform is diﬀerent from that of the rotor, and one
must model each as a separate rigid body with diﬀerent frictional torques.
The rate of change of total rotational kinetic energy is given by
˙T = Jpωp ˙ωp + Jr(ωp + ωr)( ˙ωp + ˙ωr) + Jxyωxy ˙ωxy .
(13.75)
Noting that the rate of change of angular momentum magnitude is zero, we
have the following from Eq. (13.73):
H ˙H = [Jpωp + Jr(ωp + ωr)][Jp ˙ωp + Jr( ˙ωp + ˙ωr)] + J2
xyωxy ˙ωxy = 0 , (13.76)
from which the term pertaining to the rate of change of kinetic energy by
precession can be calculated as
Jxyωxy ˙ωxy = −1
Jxy
[Jpωp + Jr(ωp + ωr)][Jp ˙ωp + Jr( ˙ωp + ˙ωr)] .
(13.77)
By substituting Eq. (13.77) into Eq. (13.75) we have
˙T = ˙Tp + ˙Tr ,
(13.78)
where ˙Tp and ˙Tr represent the rate of change of kinetic energy of the platform
and rotor, respectively, given by
˙Tp = Jp[ωp −
1
Jxy
{Jpωp + Jr(ωp + ωr)}] ˙ωp ,
(13.79)
and
˙Tr = Jr[ωr + ωp −
1
Jxy
{Jpωp + Jr(ωp + ωr)}]( ˙ωp + ˙ωr) .
(13.80)

408
13 Attitude Dynamics
Both ˙Tp and ˙Tr are negative, because of internal energy dissipation due to
friction and sloshing liquids. However, stability of the motion depends upon
the relative magnitude of these dissipation terms, in order that the kinetic
energy of precession is reduced to zero. Therefore, for stability it is crucial
that the rotor provides an energy sink for the precessional motion, i.e.,
Jxyωxy ˙ωxy = ( ˙Tp −Jpωp ˙ωp) + [ ˙Tr −Jr(ωp + ωr)( ˙ωp + ˙ωr)] < 0 ,
(13.81)
or,
−Jxyωxy ˙ωxy = [Jpωp + Jr(ωp + ωr)]
 Jp
Jxy
˙ωp + Jr
Jxy
( ˙ωp + ˙ωr)

> 0 , (13.82)
which leads to the requirement
Jp ˙ωp + Jr( ˙ωp + ˙ωr) > 0 ,
(13.83)
because ωp > 0 and ωr > 0. Since ωp is small, we can neglect second-order
terms involving it and its time derivative, leading to the approximations
˙Tp ≈−JpJr
Jxy
(ωp + ωr) ˙ωp,
˙Tr ≈Jr

1 −Jr
Jxy

(ωp + ωr)( ˙ωp + ˙ωr) .
(13.84)
It is to be noted that both the energy dissipation terms are negative. There-
fore, if the rotor is oblate (Jxy < Jr), it follows from Eq. (13.84) that ˙ωp > 0
and ˙ωr > 0. For a prolate rotor (Jxy > Jr), and ˙ωr < 0. Hence, the platform
and an oblate rotor speed up, while a prolate rotor slows down in the presence
of the lateral disturbance, ωxy. Thus, the stability requirement of Eq. (13.83)
is unconditionally met by an oblate rotor. However, in a practical case the
rotor is usually prolate, for which stability requires that
(Jp + Jr) ˙ωp > −Jr ˙ωr .
(13.85)
In terms of the energy dissipation terms, the stability requirement for a prolate
rotor is obtained by eliminating ˙ωp and ˙ωr from Eqs. (13.84) and (13.85), and
making the assumption ωp ≪ωr:
−˙Tp > −˙Tr
Jr
Jxy −Jr
.
(13.86)
Hence, for a stable conﬁguration of a prolate spacecraft with a small spin rate
coupled with a prolate rotor, the platform must lose kinetic energy at a greater
rate than the rotor. Due to friction between the rotor and the platform, the
rotor’s spin rate decreases, and the platform speeds up, even in the absence
of a lateral disturbance. If uncorrected, both rotor and platform will be even-
tually spinning at the same rate, which leads to an unstable conﬁguration. In

13.7 Spacecraft with Rotors
409
order to prevent this, a motor is used to continually apply a small torque to
the rotor bearing. Most communications satellites employ a dual-spin conﬁg-
uration. A recent interesting application of the dual-spin stabilization was in
the Galileo interplanetary spacecraft of NASA. This spacecraft had an iner-
tial (nonspinning) platform for carrying out communications with the earth
during its six-year-long voyage to Jupiter, while its rotor, on which several
navigational and scientiﬁc sensors were mounted, rotated at three revolutions
per minute.
In summary, a prolate spacecraft is unconditionally stabilized about its mi-
nor spin axis by an oblate rotor. However, if a prolate rotor is to be used for
the same purpose, the spacecraft must lose its kinetic energy at a greater rate
than that of the rotor. In order to model the dynamics of a dual-spin space-
craft by diﬀerential equations, one has to apply the conservation of angular
momentum [Eq. (13.68)] to the system, as well as derive Euler’s equations for
the rotor alone, taking into account the internal energy dissipation by friction
and sloshing.
13.7.3 Gravity Gradient Spacecraft
A spacecraft in a low-altitude orbit can generate an appreciable torque due to
the variation of the gravity force along its dimensions, called the gravity gra-
dient torque. Such a torque is considered negligible in atmospheric ﬂight, be-
cause of the much larger aerodynamic moments. However, in space, the gravity
gradient torque is large enough to exert a stabilizing (or de-stabilizing) inﬂu-
ence over a spacecraft. The magnitude of gravity gradient can be increased by
employing a long boom in the desired direction. For a large spacecraft (such
as the space station) in low orbit, the gravity gradient torque is capable of
overwhelming the attitude control system over time if not properly compen-
sated for. This was an important reason why the Skylab mission came to a
premature end in the 1970s. We shall model the gravity gradient dynamics
and carry out a linear stability analysis for determining stable spacecraft at-
titudes. Consider a spacecraft in a low, circular orbit. The gravity gradient
torque experienced by the craft can be written as follows:
Mg =

ρ × gdm ,
(13.87)
where ρ locates an elemental mass, dm, relative to the spacecraft’s center
of mass (Fig. 13.18). The acceleration due to gravity, g, is appoximated by
Newton’s law of gravitation for a spherical planet,7 and can be expanded using
the binomial theorem as follows:
7 The oblateness eﬀects have a negligible inﬂuence on the gravity gradient torque
and are ignored in a linear stability analysis.

410
13 Attitude Dynamics
U
dm
z
r
o
y
x
v
Fig. 13.18. A gravity gradient spacecraft with principal axes oxyz.
g = −GM
r + ρ
| r + ρ |3
= GM(r + ρ)
r3
%
1 −3r · ρ
r2
+ . . .
&
,
(13.88)
where M denotes the planetary mass. Ignoring the second- and higher-order
terms in Eq. (13.88), and carrying out the integral of Eq. (13.87) in terms of
the body-referenced components of r = Xi + Y j + Zk and ρ = xi + yj + zk
(where i, j, k are the spacecraft’s principal body axes), we have
Mg = Mgxi + Mgyj + Mgzk ,
(13.89)
where
Mgx = 3GM
r5
Y Z(Jzz −Jyy),
Mgy = 3GM
r5
XZ(Jxx −Jzz),
(13.90)
Mgz = 3GM
r5
XY (Jyy −Jxx).
Substituting the gravity gradient torque components into Euler’s equations,
Eq. (13.19), we have

13.7 Spacecraft with Rotors
411
Jxx ˙ωx + ωyωz(Jzz −Jyy) = 3GM
r5
Y Z(Jzz −Jyy),
Jyy ˙ωy + ωxωz(Jxx −Jzz) = 3GM
r5
XZ(Jxx −Jzz),
(13.91)
Jzz ˙ωz + ωxωy(Jyy −Jxx) = 3GM
r5
XY (Jyy −Jxx).
The equations of motion, Eq. (13.91), possess three distinct equilibrium at-
titudes (and their mirror images) for which any two of the angular velocity
components vanish, and the third equals the orbital frequency, n. Hence, one
of the principal axes of the spacecraft must be normal to the orbital plane in
the equilibrium attitude. Let the principal axis normal to the orbit plane be j.
In order to investigate the stability of the equilibrium points, we consider the
general equilibrium attitude where the remaining two principal axes are along
the velocity direction (i) and toward the planet’s ceter (k), respectively. The
relative magnitudes of the principal moments of inertia, Jxx, Jyy, Jzz, would
determine the stability of the equilibrium points. We shall consider small per-
turbations from the general equilibrium attitude, represented by the 3-2-1
Euler angles ψ (yaw), θ (pitch), and φ (roll), respectively. Such an attitude
representation is common in aircraft applications.
Let the equilibrium attitude of the spacecraft be given by the undisturbed
body axes, ie, je, ke. The inertial angular velocity of the undisturbed triad,
ie, je, ke, resolved in the instantaneous body axes, i, j, k, after a small attitude
perturbation, φ, θ, ψ, is nje = nψi + nj −nφk, while the angular velocity
disturbance from the equilibrium attitude is given by ˙φi + ˙θj + ˙ψk. Therefore,
the inertial angular velocity of the spacecraft becomes
ω = ( ˙φ + nψ)i + (n + ˙θ)j + ( ˙ψ −nφ)k .
(13.92)
The position vector resolved in the body axes is
r = r(−sin θi + sin φ cos θj + cos φ cos θk) ,
(13.93)
which leads to X ≈−rθ, Y ≈rφ, and Z ≈r for the small perturbation, which,
substituted into the Euler’s equations, Eq. (13.91), along with the angular
velocity, Eq. (13.92), yield the following linearized equations of rotational
motion:
¨φ = (Jxx −Jyy + Jzz)n
Jxx
˙ψ −4n2(Jyy −Jzz)
Jxx
φ
(13.94)
¨θ = −3n2(Jxx −Jzz)
Jyy
θ,
(13.95)
¨ψ = −(Jxx −Jyy + Jzz)n
Jzz
˙φ −n2(Jyy −Jxx)
Jzz
ψ.
(13.96)
Clearly, the small-disturbance, linear pitching motion is decoupled from the
roll-yaw dynamics and can be solved in a closed form. If Jxx > Jzz, the
pitching motion is a stable oscillation of constant amplitude given by

412
13 Attitude Dynamics
θ(t) = θ(0) cos n
(
3(Jxx −Jzz)
Jyy
t .
(13.97)
This undamped pitching oscillation is called libration and requires an active
damping mechanism, such as through a reaction wheel (Chapter 14). The
coupled roll-yaw dynamics, Eqs. (13.94) and (13.96)—also called nutation—is
seen to have the following characteristic equation:
s4 + n2(1 + 3jx + jxjz)s2 + 4n4jxjz = 0 ,
(13.98)
where
jx .= Jyy −Jzz
Jxx
,
jz .= Jyy −Jxx
Jzz
.
(13.99)
For stability, all roots, s, of the characteristic equation should have non-
positive real parts (Chapter 14), which implies real and negative values of
both the quadratic solutions, s2, and leads to the following necessary and
suﬃcient stability conditions:
1 + 3jx + jxjz ≥4

jxjz,
jxjz > 0.
(13.100)
It can be shown [2] that for a spacecraft with internal energy dissipation, the
only stable gravity gradient attitude is the one with Jyy > Jxx > Jzz, since it
results in the lowest kinetic energy, apart from satisfying the stability criteria,
Eq. (13.100). Thus, the minor axis should point toward (or away from) the
planet’s center, while the major axis should lie along the orbit normal. Such
an attitude is adopted for most asymmetric spacecraft in low orbits and is
also the common attitude of the moons in our solar system. For small—or
nearly axisymmetric—satellites, a long boom with an end mass can provide
an eﬀective gravity gradient stabilization.
Example 13.6. Consider the International Space Station (ISS) with the fol-
lowing inertia tensor [47]:
J =
⎛
⎝
127908568
3141229
7709108
3141229
107362480
1345279
7709108
1345279
200432320
⎞
⎠kg.m2.
Simulate the gravity gradient motion of the ISS in a stable attitude at 93-min
circular earth orbit, in response to an initial yaw-rate disturbance of 10−5 rad.

13.7 Spacecraft with Rotors
413
Table 13.8. M-ﬁle gravitygrad.m for Gravity Gradient Spacecraft’s Nonlinear State
Equations
function xdot=gravitygrad(t,x)
%program for gravity gradient rotational dynamics and Euler 3-2-1 kinematics
%of rigid spacecraft
%x(1)=omega_x, x(2)=omega_y, x(3)=omega_z (angular velocity in rad/s)
%x(4)=phi, x(5)=theta, x(6)=psi (rad.)
%(c) 2006 Ashish Tewari
mu = 3.986004e14;
Jzz=106892554.975429;
Jxx=127538483.852694;
Jyy=201272329.171876;
n=2*pi/(60*93);
r=(mu/n^2)^(1/3);
X=-r*sin(x(5));
Y=r*sin(x(4))*cos(x(5));
Z=r*cos(x(4))*cos(x(5));
pdot=-(Jzz-Jyy)*(x(2)*x(3)-3*mu*Y*Z/r^5)/Jxx;
qdot=-(Jxx-Jzz)*(x(1)*x(3)-3*mu*X*Z/r^5)/Jyy;
rdot=-(Jyy-Jxx)*(x(1)*x(2)-3*mu*X*Y/r^5)/Jzz;
phidot=x(1)+(x(2)*sin(x(4))+x(3)*cos(x(4)))/cos(x(5));
thetadot=x(2)*cos(x(4))-x(3)*sin(x(4));
psidot=(x(2)*sin(x(4))+x(3)*cos(x(4)))/cos(x(5));
xdot=[pdot;qdot;rdot;phidot;thetadot;psidot];
We begin by computing the principal inertia tensor as follows:
>> J=[127908568
3141229
7709108;
3141229
107362480
1345279;
7709108
1345279
200432320];
>> [V,D]=eig(J)
V=
0.1471
0.9835
0.1052
-0.9891
0.1460
0.0178
0.0021
-0.1067
0.9943
D = 106892554.98
0
0
0
127538483.85
0
0
0
201272329.17
For a stable gravity gradient attitude, we require Jxx = 127, 538, 483.85
kg.m2, Jyy = 201, 272, 329.17 kg.m2, and Jzz = 106, 892, 554.98 kg.m2. The
coordinate transformation matrix to the principal body axes is given by V
computed above. We choose to employ the complete set of nonlinear Euler
equations, Eq. (13.91), along with the 3-2-1 Euler kinematics (Chapter 2)
for a faithful simulation of the coupled motion. The simulation is carried
out for two complete orbits using the stiﬀRunge–Kutta solver of MATLAB,
ode23s. The equations of motion are encoded in the M-ﬁle gravitygrad.m,
which is tabulated in Table 13.8. The response of the spacecraft is plotted
in Figs. 13.19 and 13.20. The stability of the equilibrium attitude is evident,
with the yaw response being of the largest angle, while roll response has
the highest rate. The weak coupling between roll-yaw (nutation) and pitch
(libration) motions is clear in this example. The frequency of roll oscillation is
observed to be approximately 0.0016755 rad/s, which falls between the linear
roll-yaw frequencies, 0.000919 rad/s and 0.00197 rad/s. The pitch and yaw

414
13 Attitude Dynamics
oscillations are nonharmonic due to the nonlinear coupling eﬀects, which are
signiﬁcant even for the small yaw disturbance considered here.
Fig. 13.19. Angular rate response of the gravity gradient ISS to an initial yaw-rate
disturbance.
13.8 Attitude Motion in Atmospheric Flight
The trajectory of an atmospheric ﬂight vehicle is very sensitive to aerody-
namic force, which are strong functions of the vehicle’s attitude relative to
the ﬂight path. Thus, rotational motion about the center of mass is crucial
for atmospheric ﬂight stability and control. When considering the rotational
dynamics of aerospace vehicles within the atmosphere, one can still employ
Euler’s equations, Eq. (13.18), with the assumption of a rigid vehicle, and
taking into account the aerodynamic torque generated by the rotation of the
vehicle, as well as a control torque applied either by the pilot, or by an auto-
matic control system. Since the torque generated by gravity is always negligi-
ble in comparison with the aerodynamic torque, the vector M in Eq. (13.18) is
almost entirely a sum of the aerodynamic torque and the control torque. The
aerodynamic torque can be a nonlinear function of the vehicle’s attitude and
angular velocity relative to the atmosphere, and can be obtained through ex-
perimental, semi-empirical, or computational ﬂuid dynamics data. The control

13.8 Attitude Motion in Atmospheric Flight
415
0
2000
4000
6000
8000
10000
12000
−0.05
0
0.05
φ (deg.)
0
2000
4000
6000
8000
10000
12000
−5
0
5
10
θ (×10−5deg.)
0
2000
4000
6000
8000
10000
12000
0
0.5
1
Time (s)
ψ (deg.)
Fig. 13.20. Euler angle response of the gravity gradient ISS to an initial yaw-rate
disturbance.
torque can be generated either by aerodynamic means through the deﬂection
of control surfaces, or by propulsive means through thrust deﬂection. Most
atmospheric ﬂight vehicles employ aerodynamic control torques of one kind
or another, due to the ease by which such torques can be created. However,
there are certain ﬂight situations where an aerodynamic control torque is in-
feasible, such as the vertical take-oﬀof airplanes and launch vehicles, and the
initial phase of atmospheric entry, wherein the dynamic pressure is not large
enough to create a suﬃcient control torque. Moreover, in certain highly agile
missiles and ﬁghter airplanes, the vehicle’s design precludes the generation of
required control torque purely by aerodynamic means. In all such cases, thrust
vectoring is employed by rotating the thrust vector relative to the body axes,
in order to create the required control torque.
Since most atmospheric ﬂight vehicles are designed to operate eﬃciently
with a low drag, their attitude maneuvers do not create large ﬂow distur-
bances in normal operation. Therefore, the assumptions of small-disturbance
aerodynamics (Chapter 10) remain valid during a general attitude maneu-
ver within the atmosphere. However, there are special circumstances where
the small-disturbance approximation is invalid, namely the separated ﬂow-
ﬁeld of a stalled ﬂight, strong normal shock waves during transonic ﬂight,
and strong viscous interactions and entropy gradients in hypersonic ﬂight. In
such cases, the aerodynamic forces and moments must be derived through

416
13 Attitude Dynamics
wind-tunnel tests, ﬂight tests, or by advanced computational ﬂuid dynamic
models of the nonlinear, turbulent ﬂow. It is beyond the scope of this book
to discuss modeling of nonlinear aerodynamic phenomena. We shall generally
follow the common practice of employing linearized aerodynamics that results
from the assumption of small disturbances in the ﬂow ﬁeld. Wherever such an
approximation cannot be applied (such as post-stall meneuvers of ﬁghter air-
craft, rolling missiles, and atmospheric entry vehicles), we shall either employ
simple empirical methods, or experimental aerodynamic data.
13.8.1 Equations of Motion with Small Disturbance
The governing equations of rotational motion of a rigid vehicle during at-
mospheric ﬂight consist of Euler’s equations with aerodynamic and propul-
sive moments, kinematic equations of rotational motion, as well as the dy-
namic and kinematic equations of translation. The latter are necessary be-
cause the aerodynamic moments depend upon the relative velocity through
the atmosphere, as well as the position (altitude) within the atmosphere.
Therefore, it would appear that a six-degree-of-freedom simulation is indis-
pensible for a ﬂight vehicle. However, when employing the small-disturbance
theory, a simpliﬁcation of equations of motion results, enabling the de-coupling
of the degrees of freedom, as seen below.
Let us begin with the vehicle initially in a steady, ﬂight dynamic equi-
librium, with planet-centered position, re, δe, le, and relative velocity in the
local horizon frame, ve, φe, Ae. This equilibrium condition is chosen such that
the velocity of the center of mass relative to the atmosphere is a constant,
and the angular velocity components of the vehicle about the center of mass,
referred to a body-ﬁxed frame, are time-invariant. Such an equilibrium con-
dition could be an unaccelerated, rectilinear ﬂight, or a steady, curved ﬂight
(steady coordinated turn, steady roll, entry trajectory, etc.). In this regard,
our treatment of small-disturbance rotational motion is more general than
the rectilinear ﬂight equilibrium commonly found in textbooks on ﬂight sta-
bility and control [45], [46]. The equilibrium condition generates a reference
trajectory about which the vehicle’s rotation is to be studied, after a small
ﬂow disturbance is applied to the vehicle at some time, taken to be t = 0.
The equilibrium prevailing immediately before the disturbance is called the
equilibrium point. The aerodynamic force and moment vectors (and their com-
ponents), as well as the state variables, at the equilibrium point are denoted
by the superscript e, whereas the quantities immediately following the appli-
cation of the disturbance, are denoted by prime. The disturbances themselves
are indicated by normal symbols. A disturbed quantity, such as the relative
velocity, v′, is thus written as
v′ = ve + Δv .
(13.101)
The ﬂow-ﬁeld disturbance applied at t = 0 causes an instantaneous deﬂec-
tion of the relative velocity vector and serves as the initial condition for the

13.8 Attitude Motion in Atmospheric Flight
417
vehicle’s motion. In order to study the stability of the equilibrium point, it
is suﬃcient to study the vehicle’s response to a small disturbance, which, as
pointed out above, is easier to model than that of a large ﬂow disturbance.
The primary objective of the rotational stability analysis is, thus, to model the
small-disturbance attitude motion caused by an instantaneous change in the
relative velocity. The attitude motion, in turn, causes a change in the external
force and moment. It must be clear that instead of considering the response of
the ﬂight vehicle to the application of an external force and moment, we are
interested in the changes in the external force and moment caused by a small
disturbance in the vehicle’s velocity, which results in a rotational motion of
the vehicle. If the ensuing motion beginning from a given equilibrium point
is such that the ﬂow-disturbance increases with time, we have an unstable
equilibrium point. On the other hand, if the changes in the external force and
moment caused by the rotational motion tend to alleviate the disturbance,
the equilibrium point is said to be stable. Consider a body-ﬁxed frame (oxyz)
vx c
C
B
,
e
vx
x
,
e
vz
z
o
vz c
C
vy c
T
B
T
vc
ve
,
e
vy
y
Fig. 13.21. The stability axes, (oxyz), and the disturbed wind axes, (ox′
vy′
vz′
v) .
with origin at the vehicle’s center of mass such that the axis ox along the
instantaneous relative velocity vector at the equilibrium point. The axes of
oxyz can thus be chosen to be parallel to the wind axes, (Sxvyvzv) (Chapter
12), at the equilibrium point, t = 0. Such a coordinate system, depicted in
Fig. 13.21, is referred to as the stability axes, and is quite useful in represent-
ing aerodynamic force and moment, as well as in analyzing the stability of the
rotational motion. The instantaneous rotation of the velocity vector caused
by the applied ﬂow disturbance leads to the displaced wind axes, whose ori-
entation can be described relative to the stability axes using the 3-2-1 Euler

418
13 Attitude Dynamics
angles, C = C1(σ)C2(α)C3(β), as shown in Fig. 13.21, where σ, α, β denote the
changes in the aerodynamic bank angle, the angle of attack, and the sideslip
angle, respectively. Therefore, the instantaneous changes in the ﬂight-path
angle and the velocity azimuth are φ = α and A = β, and the velocity vector,
immediately after the ﬂow disturbance at t = 0, is given by
v′ = ve + v,
φ′ = φe + α,
(13.102)
A′ = Ae + β.
The quantities v, α, β are to be regarded as the instantaneous ﬂow disturbance,
to which the rotational response is desired. The instantaneously displaced
wind axes brought to the center of mass, ox′
vy′
vz′
v, are depicted in Fig. 13.21.
The coordinate transformation between the stability and wind axes is given
by
⎧
⎨
⎩
iv′
jv′
kv′
⎫
⎬
⎭= C
⎧
⎨
⎩
i
j
k
⎫
⎬
⎭,
(13.103)
where
C =
⎛
⎝
cos α cos β
cos α sin β
−sin α
(sin σ sin α cos β −cos σ sin β) (sin σ sin α sin β + cos σ cos β) sin σ cos α
(cos σ sin α cos β + sin σ sin β) (cos σ sin α sin β −sin σ cos β) cos σ cos α
⎞
⎠.
(13.104)
Since the ﬂow disturbance is small, we may assume the angles σ, α, β to be
small, such that sin α ≈α, cos α ≈1, etc., and ignore products of angles. This
leads to the following skew-symmetric approximation of the rotation matrix:
C ≈
⎛
⎝
1
β
−α
−β
1
σ
α
−σ
1
⎞
⎠.
(13.105)
The kinematic relationship between the disturbance caused in the direction
of the velocity vector (given by φ, A), and the ﬂow-disturbance angles, α, β,
is then derived as follows:
v′ ≈vei + vi + veAj −veφk
= (ve + v)iv
′ = (ve + v)(i + βj −αk)
(13.106)
≈(ve + v)i + veβj −veαk ,
from which it follows that φ ≈α and A ≈β.
The net translational acceleration of the center of mass relative to the
wind axes was derived in Chapter 12, whose equilibrium and disturbed values
are denoted here by ave and av′, respectively, such that

13.8 Attitude Motion in Atmospheric Flight
419
av′ = ave + av .
(13.107)
However, it is desired to express all motion variables in the stability axes,
which is a body-ﬁxed frame. Let ωe be the angular velocity of the stability
axes relative to the wind axes at the equilibrium point. Following the usual
aeronautical nomenclature of roll rate, P e .= ωe
x, pitch rate, Qe .= ωe
y, and yaw
rate, Re .= ωe
z, we can express the disturbed angular velocity of the vehicle
about its center of mass referred to the stability axes as
ω′ = P ′i + Q′j + R′k
= (P e + P)i + (Qe + Q)j + (Re + R)k
= P ei + Qej + Rek + Pi + Qj + Rk
(13.108)
= ωe + ω ,
where P,Q,R are the angular rate disturbances. The translational acceleration
at equilibrium point, referred to the stability axes is then obtained as follows:
ae = ave −ωe × ve
= av
e −(P ei + Qej + Rek) × (vei)
(13.109)
= ave −ve(Rej −Qek) .
Similarly, the disturbed translational acceleration referred to the stability axes
is given by
a′ = av′ −ω′ × v′
= av′ −(P ′i + Q′j + R′k) × (v′iv′)
= av′ −ve[−(αQe + βRe)i + (αP e + Re + R)j
(13.110)
+(βP e −Qe −Q)k] + v(Qek −Rej) ,
where the small-disturbance assumption has been made. Finally, the distur-
bance translational acceleration is obtained by subtracting Eq. (13.109) from
Eq. (13.110) as
a = a′ −ae
= av −ve[−(αQe + βRe)i + (αP e + R)j + (βP e −Q)k] (13.111)
+v(Qek −Rej) .
Another kinematic relationship is possible by considering the angular ve-
locity of the stability axes relative to the instantaneous wind axes. This
diﬀerence in the angular velocities of the two frames can be written as
ω = Pi + ¯Qj + ¯Rk, where ¯Q, ¯R are the diﬀerential pitch and yaw rates due to
the relative rotation. We can diﬀerentiate Eq. (13.103) to obtain (Chapter 2)
dC
dt = −CS(ω) ,
(13.112)

420
13 Attitude Dynamics
where
S(ω) =
⎛
⎝
0
−¯R
¯Q
¯R
0
−P
−¯Q
P
0
⎞
⎠,
(13.113)
resulting in
˙σ ≈P .
(13.114)
Here, we have chosen not to express the time derivatives of α, β in terms of
the unknown variables ¯Q, ¯R, which have to be obtained from the solution of
the combined translation and rotational equations of motion. Instead, we can
derive these derivatives in the following manner.
It is our objective to derive the time derivatives of the velocity components
from the disturbance translational dynamic equation of motion, expressed in
the stability axes as follows:
f = ma ,
(13.115)
where f = f ′ −f e is the net disturbance force resolved is the stability axes.
From Chapter 12, it is clear that the net external force is a vector sum of
the gravity, aerodynamic, and thrust forces. It can be generally assumed that
the changes in the position, r, δ, l, are negligible during the small-disturbance
motion. Thus, we have
r′ ≈re,
δ′ ≈δe,
l′ ≈le,
g′
c ≈ge
c,
g′
δ ≈ge
δ .
(13.116)
These assumptions make the magnitude of the gravity force essentially un-
changed by the small disturbance. However, its components resolved in the
stability axes are functions of the disturbances. It is also to be noted that
the gravitational components depend upon the instantaneous vehicle attitude
relative to the local horizon, and are independent of the translatory motion
represented by α, β. Therefore, it is necessary to model the gravity disturbance
in terms of the stability axes rotation, such as through the 3-2-1 Euler angles,
Ψ (yaw angle), Θ (pitch angle), and Φ (roll angle), representing the change in
the body attitude relative to a north, east, down (NED) triad, I, J, K. Since
Φ, Θ, Ψ are small, the Euler angle singularity (Chapter 2) is avoided. The co-
ordinate transformation between the stability axes and the NED local horizon
frame is given by
⎧
⎨
⎩
i
j
k
⎫
⎬
⎭= C1(Φ)C2(Θ)C3(Ψ)
⎧
⎨
⎩
I
J
K
⎫
⎬
⎭.
(13.117)
The acceleration due to gravity in the NED frame is the following:
fge
m
.= ge = ge
cK + ge
δI.
(13.118)

13.8 Attitude Motion in Atmospheric Flight
421
Using the small-disturbance approximation, the gravity disturbance can be
resolved in the stability axes as follows:
g = g′ −ge
= ge
c[−Θ cos Θei + (Φ cos Φe cos Θe −Θ sin Φe sin Θe)j
−(Θ cos Φe sin Θe + Φ sin Φe cos Θe)k]
+ge
δ[−(Θ sin Θe cos Ψ e + Ψ cos Θe sin Ψ e)i
(13.119)
+(Φ cos Φe sin Θe cos Ψ e + Θ cos Θe sin Φe cos Ψ e −Ψ sin Φe sin Θe sin Ψ e
+Φ sin Φe sin Ψ e −Ψ cos Φe cos Ψ e)j
+(−Φ sin Φe sin Θe cos Ψ e + Θ cos Φe cos Θe cos Ψ e −Ψ cos Φe sin Θe sin Ψ e
+Φ cosΦe sin Ψ e + Ψ sin Φe cos Ψ e)k] .
In the derivation of Eq. (13.119)—and in other following derivations—we
have used the approximations in the trigonometric terms involving small-
disturbance angles, such as
sin(Φe + Φ) = sin Φe cos Φ + cos Φe sin Φ ≈sin Φe + Φ cos Φe,
cos(Φe + Φ) = cos Φe cos Φ −sin Φe sin Φ ≈cos Φe −Φ sin Φe. (13.120)
It is to be noted that the equilibrium attitude of the vehicle is that of the
undisturbed stability axes and is given by Θe = φe, Ψ e = Ae.
The sum of disturbed aerodynamic and propulsive force vectors, resolved
in the displaced wind axes, is the following:
fa
′ + fT
′ = (f ′
T cos ϵe cos μe −D′)iv
′
+(f ′
Y + f ′
T sin μe)jv′
(13.121)
−(f ′
T sin ϵe cos μe + L′)kv
′ ,
where we have assumed that the equilibrium thrust angles, ϵe, μe, are un-
changed by the ﬂow disturbance. This is true for most well-designed vehicles,
where the thrust is generated either by aerodynamic means or by a rocket
engine having a freely swiveling nozzle that always maintains a ﬁxed orienta-
tion relative to the wind axes. The equilibrium sum of the aerodynamic and
propulsive forces is
fae + fTe = (f e
T cos ϵe cos μe −De)i
+(f e
Y + f e
T sin μe)j
(13.122)
−(f e
T sin ϵe cos μe + Le)k .
Employing the small-disturbance approximation, the disturbance force arising
out of aerodynamics and propulsion is written as:

422
13 Attitude Dynamics
fa + fT = [fT cos ϵe cos μe −D −β(f e
Y + f e
T sin μe)
−α(f e
T sin ϵe cos μe + Le)]i
+[fY + fT sin μe + β(f e
T cos ϵe cosμe −De)
+σ(f e
T sin ϵe cos μe + Le)]j
(13.123)
+[−fT sin ϵe cos μe −L + σ(f e
Y + f e
T sin μe)
−α(f e
T cos ϵe cos μe −De)]k .
We remind ourselves that the aerodynamic and propulsive disturbance terms,
L, D, fY , fT, depend upon the ﬂow disturbances, α, β, σ. We shall express the
linearized relationships of these disturbance terms a little later.
It now remains to obtain an expression for the disturbance translational
acceleration of the center of mass, av, resolved in the stability axes. In order
to do so, we shall ﬁrst write the translational acceleration at equilibrium by
substituting ˙ve = ˙φe = ˙Ae = 0 into the acceleration derived in Chapter 12,
leading to
av
e = ae
xvi + ae
yvj + ae
zvk
= ve0
−ve
re cos2 φe sin Ae tan δe
+2Ω(sin φe cos Ae cos δe −cos φe sin δe)
1
j
(13.124)
+
%ve
re cos φe + 2Ω sin Ae cos δe&
,
where the centripetal acceleration terms due to planetary rotational velocity,
Ω, are neglected, as they are several orders of magnitude smaller than the
other terms. However, we shall (for the time being) retain the Coriolis ac-
celeration terms due to planetary rotation. These are generally negligible for
most atmospheric vehicles, except an atmospheric entry vehicle.8 The distur-
bance acceleration, av, is obtained as follows by subtracting Eq. (13.65) from
the disturbed acceleration, av′, resolved in stability axes, and applying the
small-disturbance approximation:
av = (˙v −βae
yv + αae
zv)i
+
0
ve ˙β + ve
re cos φe tan δe(veα sin φe sin Ae
−veβ cos φe cos Ae −2v cos φe sin Ae)
8 For a typical entry from a low earth orbit, ve = 8 km/s and re = 6500 km.
This yields the maximum centripetal acceleration, Ω2re ≈0.03 m/s2, maximum
Coriolis acceleration, 2Ωve ≈1 m/s2, and maximum acceleration due to plane-
tary curvature, ve2
re ≈10 m/s2. Thus, curvature and Coriolis acceleration cannot
be ignored, as they are of the same order, and one tenth, respectively, of the
magnitude of acceleration due to gravity. The centripetal acceleration terms van-
ish below ﬁrst order, when multiplied with a small disturbance, and are thus
neglected in a stability analysis.

13.8 Attitude Motion in Atmospheric Flight
423
+ 2Ω{v(cos δe sin φe cos Ae −sin δe cos φe)
+ veα(cos δe cos φe cos Ae + sin δe sin φe)
(13.125)
−veβ cos δe sin φe sin Ae} + βae
xv −σae
zv
1
j
+
0
−ve ˙α + ve
re (2v cos φe −veα sin φe)
+ 2Ω cos δe(v sin Ae + veβ cos Ae)
−αae
xv + σae
yv
1
k .
Collecting all the terms from Eqs. (13.125), (13.119), (13.123), and (13.111),
and substituting them into Eq. (13.115), we have the disturbance force equa-
tions:
fT cos ϵe cos μe −D −β(f e
Y + f e
T sin μe) −α(f e
T sin ϵe cos μe + Le)
−mge
cΘ cos Θe −mge
δ(Θ sin Θe cos Ψ e + Ψ cos Θe sin Ψ e)
(13.126)
= m[˙v −βae
yv + αae
zv + ve(αQe + βRe)] .
fY + fT sin μe + β(f e
T cos ϵe cos μe −De)
+σ(f e
T sin ϵe cos μe + Le)
+mge
c(Φ cos Φe cos Θe −Θ sin Φe sin Θe)
+mge
δ(Φ cos Φe sin Θe cos Ψ e + Θ cos Θe sin Φe cos Ψ e
−Ψ sin Φe sin Θe sin Ψ e + Φ sin Φe sin Ψ e −Ψ cos Φe cos Ψ e)
= m
0
ve ˙β + ve
re cos φe tan δe(veα sin φe sin Ae
(13.127)
−veβ cos φe cos Ae −2v cos φe sin Ae)
+2Ω{v(cosδe sin φe cos Ae −sin δe cos φe)
+veα(cos δe cos φe cos Ae + sin δe sin φe)
−veβ cos δe sin φe sin Ae} + βae
xv
−σae
zv −ve(αP e + R) −vRe1
.
−fT sin ϵe cos μe −L + σ(f e
Y + f e
T sin μe)
−α(f e
T cos ϵe cos μe −De)
−mge
c(Θ cos Φe sin Θe + Φ sin Φe cos Θe)
+mge
δ(−Φ sin Φe sin Θe cos Ψ e
+Θ cos Φe cos Θe cos Ψ e −Ψ cos Φe sin Θe sin Ψ e
(13.128)
+Φ cos Φe sin Ψ e + Ψ sin Φe cos Ψ e)
= m
0
−ve ˙α + ve
re (2v cos φe −veα sin φe)
+2Ω cos δe(v sin Ae + veβ cos Ae)
−αae
xv + σae
yv −ve(βP e −Q) + vQe1
.

424
13 Attitude Dynamics
These equations will be further expanded when we take into account the linear
variation of the aerodynamic and thrust forces with the ﬂow disturbances.
At equilibrium, the vehicle is rotating with a constant, body-referenced
angular velocity, ωe = P ei + Qej + Rek, and equilibrium torque, Me =
Lei+Mej+N ek, where Le is called the rolling moment, Me the pitching mo-
ment, and N e the yawing moment—in standard aeronautical nomenclature—
at the equilibrium point. Therefore, Euler’s equations of rotational motion
Eq. (13.18), expressed in the stability axes at equilibrium, yield the following
equations for the torque components at equilibrium:
Le = Qe[Re(Jzz −Jyy) −P eJxz −QeJyz] + Re(P eJxy + ReJyz),
Me = P e[Re(Jxx −Jzz) + QeJyz + P eJxz] −Re(QeJxy + ReJxz),
N e = Qe[P e(Jyy −Jxx) + QeJxy + ReJxz] −P e(ReJyz + P eJxy)
(13.129)
where we note the presence of products of inertia, which are nonzero because
(oxyz) is not the principal frame. Most atmospheric ﬂight vehicles possess a
plane of symmetry, and often the equilibrium ﬂight condition is such that
the velocity vector lies in the plane of symmetry. Such an assumption would
greatly simplify Eq. (13.129). However, we shall reserve this assumption for
later, because a general ﬂight path may not obey this restriction (e.g., the
steady sideslip maneuver of aircraft). In a manner similar to the disturbance
force, we can derive the disturbance torque components by subtracting the
equilibrium torque from the disturbed torque, resulting in
L = Jxx ˙P −Jxy ˙Q −Jxz ˙R −Jxz(QP e + PQe) + 2Jyz(RRe −QQe)
+Jxy(RP e + PRe) + (Jzz −Jyy)(QRe + RQe) .
(13.130)
M = Jyy ˙Q −Jxy ˙P −Jyz ˙R −Jxy(RQe + QRe) + 2Jxz(PP e −RRe)
+Jyz(QP e + PQe) + (Jxx −Jzz)(RP e + PRe) .
(13.131)
N = Jzz ˙R −Jxz ˙P −Jyz ˙Q −Jyz(RP e + PRe) + 2Jxy(QQe −PP e)
+Jxz(RQe + QRe) + (Jyy −Jxx)(QP e + PQe) .
(13.132)
The rate of rotation of the stability axes is aﬀected by the disturbance torque,
which in turn, is changed by the ﬂow disturbance. However, due to the rotary
inertia of the vehicle, the change in the vehicle’s attitude is not instantaneous,
but occurs over a period of time. Since the attitude of the vehicle is described
by the orientation of the body-ﬁxed stability axes, an appropriate represen-
tation can be used for the instantaneous orientation of oxyz. If the vehicle is
initially at rest, the 3-2-1 Euler angle representation would be non-singular
during the rotational motion caused by the small disturbance. For this reason,
the 3-2-1 body attitude representation is most popular in aircraft applications.
In such a case, the vehicle’s attitude at t = 0 is given by the equilibrium at-
titude, Ψ e, Θe, Φe, while the perturbation from this attitude is given by the

13.8 Attitude Motion in Atmospheric Flight
425
disturbance angles, Ψ, Θ, Φ. However, when the equilibrium state is a general
rotary motion, a more appropriate attitude description is via the quaternion
(Chapter 2), q, q4, whose kinematic equations are written as follows:
d{q, q4}T
dt
= 1
2Ω{q(t), q4(t)}T ,
(13.133)
where Ω is the following skew-symmetric matrix:
Ω =
⎛
⎜
⎜
⎝
0
(Re + R)
−(Qe + Q) (P e + P)
−(Re + R)
0
(P e + P)
(Qe + Q)
(Qe + Q)
−(P e + P)
0
(Re + R)
−(P e + P) −(Qe + Q) −(Re + R)
0
⎞
⎟
⎟
⎠.
(13.134)
The kinematic equation is to be integrated with the initial condition speciﬁed
by the equilibrium point attitude, qe, qe
4.
The equations of a small-disturbance, rotational motion of an atmospheric
ﬂight vehicle, therefore, consist of the coupled set of diﬀerential equations,
Eqs. (13.114), (13.126)–(13.128), (13.131)–(13.134). The additional coupling
terms due to aerodynamics and propulsion in these equations are derived by
the linearized stability derivatives.
13.8.2 Stability Derivatives and De-coupled Dynamics
The stability analysis of an atmospheric vehicle requires the functional depen-
dence of the aerodynamic and propulsive force and moment on the disturbance
variables. In a general unsteady motion of a ﬂight vehicle, such relationships
are non-existent in a closed form, due to the complex eﬀects of turbulence,
compressibility, ﬂow separation, and non continuity. Even when simplifying
assumptions are made, rarely do we have a closed-form description of the ﬂow
ﬁeld (Chapter 10), and an approximate, numerical solution of partial diﬀer-
ential equations is the norm. However, one can employ the small-disturbance
approximation to render all aerodynamic relationships essentially linear, ir-
respective of the ﬂow regime in which the equilibrium point is located. The
hallmark of linear dependence of the aero-propulsive force and moment on
the disturbance variables is a Taylor series expansion, truncated to ﬁrst-order
terms, such as the following expression for the disturbed pitching moment,
M′, of an airplane:
M′ = Me + ∂M
∂v v + ∂M
∂α α + ∂M
∂˙α ˙α + ∂M
∂Q Q ,
(13.135)
where the partial derivatives are evaluated at the equilibrium point and are
referred to as stability derivatives. It is useful to express the stability deriva-
tives in a nondimensional form, which allows us to analyze the characteristics
of a particular conﬁguration without having to consider the eﬀects of size,
equilibrium speed, and altitude. This is accomplished by dividing the forces

426
13 Attitude Dynamics
by qS, moments by qSlc, and speed by ve, where q is the dynamic pressure,
S is the reference wing planform area, and lc is a characteristic length. The
angular rates are traditionally expressed in a nondimensional time, ˆt .= t 2ve
lc ,
which results in the corresponding nondimensional stability derivatives be-
ing multiplied by the factor,
lc
2ve , in the equations of motion. For example,
the nondimensionalized pitching moment disturbance can be expressed using
Eq. (13.135) in the standard NACA nomenclature as follows:
Cm .= M
qS¯c = Cmuu + Cmαα +
¯c
2ve Cm ˙α ˙α +
¯c
2ve CmqQ ,
(13.136)
where
Cmu
.= ve
qS¯c
∂M
∂v ,
Cmα
.=
1
qS¯c
∂M
∂α ,
Cm ˙α
.=
1
qS¯c
2ve
¯c
∂M
∂˙α ,
(13.137)
Cmq
.=
1
qS¯c
2ve
¯c
∂M
∂Q ,
u .= v
ve ,
(13.138)
and ¯c is the wing’s mean-aerodynamic chord, representing the characteristic
length. The characteristic length (and thus the nondimensional time) indicates
the time scale of motion and may be diﬀerent for the various stability axes.
Furthermore, the force and moment relative to each stability axis may depend
upon a diﬀerent set of disturbance quantities. Before pursuing the concept of
stability derivatives any further, it is important to deﬁne the set of motion
variables particular to each stability axis.
All atmospheric ﬂight vehicles possess some form of symmetry, which en-
ables them to achieve a stable equilibrium in normal operation. The least
symmetric atmospheric ﬂight vehicle is a lifting conﬁguration—such as the
airplane—having only one plane of symmetry, oxz, while a thrust-controlled
missile is an axisymmetric vehicle with inﬁnitely many planes of symmetry
(and thus non-unique stability axes). In between these two extremes lie most
launch vehicles and missiles, with a varying number of symmetry planes. A ve-
hicle with more than one plane of symmetry enjoys inter-exchangeability of
two (or more) stability axes, for which the equations of motion are identi-
cal. Therefore, the airplane is taken to be the reference vehicle for deﬁning
the dependent motion variables for each stability axis, as it results in the
most general description of aerodynamic motion. Assuming oxz to be a plane
of symmetry, we have Jxy = Jyz = 0. Furthermore, it follows that the mo-
tion in the plane of symmetry, called longitudinal dynamics, is fundamentally
diﬀerent—and separable from—that outside the plane, which we will refer to

13.8 Attitude Motion in Atmospheric Flight
427
as lateral dynamics. Hence, longitudinal and lateral dynamics should have dis-
tinct sets of motion variables. Clearly, the lateral dynamics involves changes in
the “unsymmetrical” variables β, Φ, Ψ, P, R, whereas longitudinal motion in-
volves the remaining variables, namely u, α, Θ, Q. With these assumptions, we
can de-couple the longitudinal and lateral dynamics and separate the stability
derivatives into the two categories.
13.8.3 Longitudinal Dynamics
The longitudinal dynamic equations—Eqs. (13.126), (13.128), and (13.131)—
involve a three-degree-of-freedom motion (translation along ox, oz, and rota-
tion about oy). For a ﬂight in the plane of symmetry, β = Φ = Ψ = Φe =
μe = P e = Re = 0. Hence, the longitudinal equations of motion are written
in the following de-coupled form:
m[ve ˙u + α(ae
zv + veQe)]
= qS[Cxuu + Cxα −Θ

cos Θe mge
c
qS
(13.139)
+ sin Θe cos Ψ e mge
δ
qS

+
¯c
2ve (Cx ˙α ˙α + CxqQ)] .
m[ve ˙α −ve
re (2v cos φe −veα sin φe) −2uveΩ cos δe sin Ae
+αae
xv −uveQe −Qve)]
= qS[Czuu + Czαα −Θ

sin Θe mge
c
qS −cos Θe cos Ψ e mge
δ
qS

+ ¯c
2ve (Cz ˙α ˙α + CzqQ)].
(13.140)
Jyy ˙Q = qS¯c[Cmuu + Cmαα +
¯c
2ve (Cm ˙α ˙α + CmqQ)] .
(13.141)
Upon comparison with Eqs. (13.126) and (13.128), some of the longitudinal
force derivatives are directly obtained to be the following:
Cxu = 2(CT cos ϵe −CD) −u∂CD
∂u + u cos ϵe ∂CT
∂u ,
(13.142)
Cxα = −CT sin ϵe −CL −∂CD
∂α + cos ϵe ∂CT
∂α ,
(13.143)
Czu = −2(CT sin ϵe + CL) −u∂CL
∂u −u sin ϵe ∂CT
∂u ,
(13.144)
Czα = CT cos ϵe −CD −∂CL
∂α −sin ϵe ∂CT
∂α .
(13.145)
Here, CL, CD, CT refer to the lift, drag, and thrust coeﬃcients (Chapters
10 and 11). Except for propeller-engined airplanes, the variation of CT with
speed and angle of attack is negligible. The variation of drag coeﬃcient with

428
13 Attitude Dynamics
speed occurs due to compressibility eﬀects and is especially important in the
transonic regime (Chapter 10). Hence, we commonly calculate such derivatives
using the Mach number, M, as
u∂CD
∂u
= M ∂CD
∂M .
Generally, a well-designed airplane has Cmu ≈0.
Cmα is the most important longitudinal stability derivative and represents
the static longitudinal stability of the vehicle. It is directly proportional to the
distance, Δx, by which the aerodynamic center 9 of the vehicle lies aft of the
center of mass. For this reason, the said distance is called the longitudinal sta-
tic margin. The longitudinal static margin is aﬀected by the pitching moment
contributions of the various components of the vehicle, such as wing, tail (or
canard), fuselage, and nacelles. The primary contribution comes from the tail
(or canard), where a change in the downwash (or upwash) is caused by the
wing due to a change in the angle of attack. In addition, there can be sig-
niﬁcant changes in the static margin caused by the slipstream of a propeller.
Clearly, for longitudinal static stability the vehicle must pitch in the negative
direction (“downward” in pilot’s viewpoint), whenever the angle of attack in-
creases (Cmα < 0). A large majority of atmospheric vehicles have Cmα < 0,
although some airplanes have been designed to be statically unstable from
maneuverability considerations and require either exceptional piloting skills
(Wright 1903 Flyer) or a closed-loop pitch stabilization system (the F-16
ﬁghter) for maintaining equilibrium. The static stability also translates into
the requirement that the vehicle must produce a positive pitching moment at
α = 0 for an ability to maintain equilibrium (Cm = 0) at positive values of an-
gle of attack (which is the normal situation for airplanes). Since an airplane’s
wing normally produces a negative pitching moment in order to generate lift
at α = 0, a stable airplane needs a horizontal stabilizing surface (either a tail,
or a canard) to provide the positive Cm at α = 0.
The derivatives Cxα and Czα largely represent the variation of drag and
lift coeﬃcients with angle of attack. Of these, Czα, approximately equaling
the negative of lift–curve–slope (CLα), is the more important and typically
falls in the range of 4–6. The lifting eﬀectiveness of the vehicle is measured
by the magnitude of Czα.
The changes in aerodynamic force and moment do not occur instanta-
neously with the change in the angle of attack, but generally involve a time-lag
due to the essentially circulatory ﬂow over the lifting surfaces (Chapter 15).
9 As deﬁned for a lifting surface in Chapter 10, the aerodynamic center is the
unique point about which the pitching moment is independent of the angle of
attack. The concept of aerodynamic center can be extended for the whole vehicle,
which may have several lifting surfaces. Usually, a vehicle’s aerodynamic center
is called the neutral point, as it indicates the center of mass location for zero
longitudinal static margin.

13.8 Attitude Motion in Atmospheric Flight
429
This aerodynamic time lag is referred to aerodynamic inertia and is repre-
sented by the ˙α derivatives. Generally, Cx ˙α ≈0, as thrust and drag are essen-
tially noncirculatory in nature. On the other hand, the lag in lift and pitching
moment can be large for a conventional airplane equipped with a horizontal
stabilizer (tail) and have typical values of Cz ˙α ≈−1 and Cm ˙α ≈−3, respec-
tively. We can derive Cz ˙α from Cm ˙α using the tail arm, lt, as
Cz ˙α = ¯c
lt
Cm ˙α .
At hypersonic speeds encountered by re-entry vehicles, the aerodynamic lag is
negligible, which results in all aerodynamic inertia derivatives approximated
by zeros.
Finally, the stability derivatives Cxq, Czq and Cmq represent the eﬀects
of the pitch rate on lift and pitching moment. They are caused largely by
the change in the angle of attack experienced by the lifting surfaces due to
the curvature in the ﬂight path. The derivative Cmq greatly inﬂuences the
damping in the natural pitching oscillations and is thus known as damping in
pitch. Generally, Cxq ≈0, while Czq can be obtained by dividing Cmq by the
nondimensional tail (or canard) arm, lt
¯c .
The kinematic attitude relations for the longitudinal motion are expressed
as follows:
˙Θ = Q ,
(13.146)
where Θ, the disturbance in the pitch angle, is related to angle of attack and
disturbance in the ﬂight-path angle by
α = Θ −φ .
(13.147)
From the last equation, it follows that Θe = φe, because we have employed
the stability axes.
Example 13.7. A tail-less, delta-winged ﬁghter airplane with m = 10, 455 kg,
Jyy = 121, 567 kg.m2, ¯c = 6.95 m, and S = 60.5 m2, is undergoing a pitch-up
manuever with Ae = 0 and a constant Mach number, M = 0.94. The stability
derivatives at the given Mach number are the following:
Cmα = −0.31/rad,
Cmq = −1.44/rad,
Cm ˙α = −1/rad,
Czα = −2.85/rad,
Czq = −2/rad,
Cz ˙α = −1.39/rad,
Czu = −0.37,
Cxα = −0.144/rad,
Cxu = −0.048,
CL = 0.146.

430
13 Attitude Dynamics
Simulate the ensuing motion of the airplane after reaching he = 2000 m and
δe = 45◦, where an angle of attack disturbance is encountered with v = 0 and
initial condition
(a) φe = 0, Qe = 0, α = 0.01 rad.
(b) φe = 0.1 rad, Qe = 0.15 rad/s, α = −0.1 rad.
Table 13.9. M-ﬁle pitchup.m for Airplane’s Longitudinal State Equations
function xdot = pitchup(t,x)
%(c) 2006 Ashish Tewari
global S; global c; global m; global Jyy; global rm; global omega;
global v0; global phi0; global A0; global Q0; global Cma; global Cmad;
global Cmq; global Cxu; global Cxa; global Czu; global Cza; global Czad;
global Czq;
%acceleration due to gravity (oblate earth):
delta=x(6)
alt = x(1)
[g,gn]=gravity(alt+rm,delta);
%atmospheric properties:
v
= v0*(1+x(2));
atmosp = atmosphere(alt, v, c);
rho = atmosp(2);%density
q = 0.5*rho*v^2;%dynamic pressure
mach = atmosp(3);
CL=m*g/(q*S);
[t alt v mach]
phi=x(4)-x(3); %flight-path angle
%longitudinal dynamics:
hdot=v*sin(phi);
udot = -Q0+q*S*(Cxu*x(2)+Cxa*x(3)...
+phi*(-cos(phi0)*CL+sin(phi0)*sin(A0)*m*gn/(q*S)))/(m*v0);
alphadot = (2*x(2)*omega*cos(delta)*sin(A0)...
+2*x(2)*v0/(rm+alt)+x(2)*Q0+x(5)+q*S*(Czu*x(2)+Cza*x(3)...
+phi*(sin(phi0)*CL-cos(phi0)*cos(A0)*m*gn/(q*S))...
+c*Czq*x(5)/(2*v0))/(m*v0))/(1-q*S*c*Czad/(2*m*v0^2));
thetadot = x(5);
Qdot = q*S*c*(Cma*x(3)+c*(Cmad*alphadot+Cmq*x(5))/(2*v0))/Jyy;
deltadot=v*cos(phi)*cos(A0)/(rm+alt);
xdot = [hdot; udot; alphadot; thetadot; Qdot; deltadot];
The simulation requires a numerical solution to the longitudinal dynamic
and kinematic equations, with the prescribed initial condition. The aerody-
namic force and moment are allowed to vary with a changing dynamic pres-
sure in this simulation. The necessary computation is performed by the M-ﬁle
pitchup.m tabulated in Table 13.9, which integrates the nonlinear diﬀerential
equations of motion with the intrinsic MATLAB Runge–Kutta solver ode45.m.
The results are plotted in Figs. 13.22–13.24. The departure from straight and
level equilibrium condition [Case (a)] displays two distinct time scales of the
airplane’s motion: a rapid and well-damped oscillation in the variables α, Θ, Q
with settling time10 about 1 s and an insigniﬁcant change in speed and alti-
10 In Chapter 14, settling time is deﬁned as the time required for the response to
decay to within ±2% of the steady state.

13.8 Attitude Motion in Atmospheric Flight
431
tude (Fig. 13.22), and a slower, less damped oscillation in altitude, speed, and
pitch angle with a settling time of about 150s with no appreciable variation
in the angle of attack (Fig. 13.23). The clearly deﬁned short- and long-period
oscillations form the basis of the approximate longitudinal modes, as discussed
ahead. The departure from a steady pitch-up maneuver [Case (b)] is plotted
in Fig. 13.24. The steadily increasing altitude and a declining speed with a
long-period oscillation in pitch are combined with a short-period pitching mo-
tion with variation in the angle of attack. If allowed uncorrected, the motion
would quickly lead to the ﬂight speed becoming zero, and then negative (called
a tail slide).11 Note that the angle of attack remains small, thus the linear
aerodynamic model remains valid, even though the speed falls to zero.
0
0.5
1
1.5
2
−0.2
0
0.2
0.4
0.6
α (deg.)
0
0.5
1
1.5
2
−0.6
−0.4
−0.2
0
Θ (deg.)
0
0.5
1
1.5
2
−2
−1
0
1
Time (s)
Q (deg./s)
Fig. 13.22. The short-period response to angle of attack disturbance from straight
and level ﬂight.
13.8.4 Airplane Longitudinal Modes
The most common equilibrium condition encountered in an airplane is that of
straight and level ﬂight (Θe = Qe = ae
xv = ae
zv = 0). In such a condition,
11 A tail slide is normally avoided, as it causes destruction of trailing-edge control
surfaces.

432
13 Attitude Dynamics
0
50
100
150
1960
1980
2000
h (m)
0
50
100
150
−1
0
1
2
u (×10−3)
0
50
100
150
−0.5
0
0.5
Time (s)
Θ (deg.)
Fig. 13.23. The long-period response to angle of attack disturbance from straight
and level ﬂight.
a small disturbance caused by either the atmosphere or pilot input leads
to two characteristic motions: (a) a long-period (or phugoid) oscillation in
speed and altitude, in which the angle of attack remains constant, and (b) a
rapid, short-period motion in which the angle of attack oscillates, but the
speed remains unchanged. Approximate equations of motion for the phugoid
and short-period modes can be easily derived from Eqs. (13.139)–(13.141), by
making the relevant assumptions. In case of the phugoid oscillation, we neglect
all variations with respect to the angle of attack and its time derivative, which
amounts to disregarding the pitching motion caused by the change in the angle
of attack, and taking α ≈0 in the remaining equations. Therefore, Θ ≈φ,
and the resulting equations for phugoid approximation are the following, after
neglecting the terms involving planetary rotation and curvature:
mve
qS ˙u = Cxuu −Θmge
c
qS .
(13.148)
−mve
qS Q = Czuu + Θ cos Ψ e mge
δ
qS +
¯c
2ve CzqQ.
(13.149)

13.8 Attitude Motion in Atmospheric Flight
433
2000
2100
2200
h (m)
−1
−0.5
0
u
−6
−4
−2
0
2
α(deg.)
5
10
15
20
25
Θ(deg.)
0
1
2
3
4
5
6
−10
0
10
20
30
Time (s)
Q(deg./s)
Fig. 13.24. Response to angle of attack disturbance from a steady pitch-up ma-
neuever.
On substituting Eqs. (13.146) and (13.149) into (13.148), we have
mve
qS
2
1
Czu
+ m¯c
2qS
Czq
Czu

¨Θ +
 mvea
qSCzu
−Cxu
Czu
mve
qS +
¯c
2ve Czq

˙Θ
−qS

CL + aCxu
Czu

Θ = 0,
(13.150)
u = −
mve
qS +
¯c
2ve Czq

˙Θ
Czu
−
a
Czu
Θ ,
(13.151)
where
CL .= mge
c
qS
(13.152)
is the equilibrium lift coeﬃcient and
a .= cos Ψ e mge
δ
qS .
(13.153)
Taking the Laplace transform of Eq. (13.150), we can write the characteristic
equation for the second-order system (Chapter 14) as follows:
s2 + 2ζωs + ω2 = 0 ,
(13.154)

434
13 Attitude Dynamics
where the natural frequency, ω, of the phugoid mode is given by
ω2 =
−Czu
2
CL + a Cxu
Czu
3
2 mve
qS
32 + m¯c
2qS Czq
,
(13.155)
and the phugoid damping ratio, ζ, is
ζ =
mvea
qS
−Cxu
2 mve
qS +
¯c
2ve Czq
3
2ω
42 mve
qS
32 + m¯c
2qS Czq
5
.
(13.156)
Thus, the phugoid mode is a pure pitching motion, whose frequency
and damping depend on the lift coeﬃcient, mass, and stability derivatives
Cxu, Czu, Czq. Usually, the phugoid frequency and damping are both quite
small, representing an almost-constant amplitude, long-period oscillation. The
approximately conservative ﬂight path (Chapter 12) indicates a slow exchange
between the potential and kinetic energies.
Example 13.8. Find the phugoid characteristics (frequency and damping) of
a jet transport airplane [46] with m = 84, 891 kg, Jyy = 3, 564, 403 kg.m2,
¯c = 6.16 m, S = 223 m2, ¯lt = 17.8 m, ﬂying straight and level at 12.2 km
altitude, Ψ e = 30◦, and M = 0.62, where ve = 182 m/s, q = 5036.79 N/m2,
and
Cmα = −0.619/rad,
Cmq = −11.4/rad,
Cm ˙α = −3.27/rad,
Czα = −4.46/rad,
Czq = Cmq
¯c
lt
= −3.94/rad,
Cz ˙α = Cm ˙α
¯c
lt
= −1.13/rad,
Czu = −1.48,
Cxα = 0.392/rad,
Cxu = −0.088,
CL = 0.74.
Substituting these values into Eqs. (13.155) and (13.156), we get the phugoid
frequency and damping ratio to be the following:
ω = 0.07627 rad/s,
ζ = 0.04215 ,
which results in the time period of T =
2π
ω = 82.38 s and a settling time
(Chapter 14) of ts =
4
ζω = 1244 s.

13.8 Attitude Motion in Atmospheric Flight
435
The short-period longitudinal mode for an airplane is represented by ne-
glecting the variation in the forward speed (u = ˙u = 0) from a straight and
level equilibrium ﬂight, as well as the eﬀects of planetary rotation and curva-
ture. Furthermore, for an airplane the term involving oblate gravitation, ge
δ,
is usually ignored, resulting in a gravity-free dynamical model, given by
mve
qS ( ˙α −Q) = Czαα +
¯c
2ve (Cz ˙α ˙α + CzqQ),
(13.157)
Jyy
qS¯c
˙Q = Cmαα +
¯c
2ve (Cm ˙α ˙α + Cmq ˙Θ) .
(13.158)
Here, the equation for forward translation has been discarded. The short-
period mode is thus a two-degree-of-freedom motion involving pitch and ver-
tical translation (plunge). The predominant stability derivatives in the short-
period mode are Cmα, Czα, Cmq, Czq. A state-space representation (Chapter
14) of the short-period dynamics is written as follows:
⎧
⎨
⎩
˙α
˙Θ
˙Q
⎫
⎬
⎭=
⎡
⎢⎢⎣
Czα
Δ
0
mve
qS +
¯cCzq
2ve
Δ
0
0
1
qS¯c
Jyy (Cmα +
¯c
2ve Cm ˙αCzα
Δ
) 0
qS¯c2
2veJyy (Cmq + Cm ˙α
mve
qS +
¯cCzq
2ve
Δ
)
⎤
⎥⎥⎦
·
⎧
⎨
⎩
α
Θ
Q
⎫
⎬
⎭,
(13.159)
where
Δ = mve
qS −¯cCz ˙α
2ve .
Example 13.9. Find the longitudinal short-period characteristics (frequency
and damping) of the jet transport airplane of Example 13.8.
The necessary computations are performed with the use of Eq. (13.159)
and the following MATLAB statements (assuming all the necessary constants
have been deﬁned in the workspace):
>> D=m*v/(q*S)-c*Czad/(2*v);
>> A=[Cza/D 0 (m*v/(q*S)+c*Czq/(2*v))/D;
0 0 1;
(q*S*c/Jyy)*(Cma+c*Cmad*Cza/(2*v*D)) 0...
(q*S*c^2/(2*v*Jyy))*(Cmq+Cmad*(m*v/(q*S)+c*Czq/(2*v))/D)]
A =
-0.3238 0
0.9938
0
0
1.0000
-1.1668 0
-0.4812
>> damp(A)

436
13 Attitude Dynamics
Eigenvalue
Damping
FrEq.~(rad/s)
0.00e+000
-1.00e+000
0.00e+000
-4.03e-001 + 1.07e+000i
3.51e-001
1.15e+000
-4.03e-001 - 1.07e+000i
3.51e-001
1.15e+000
Thus, the short-period natural frequency and damping-ratio are given by
ω = 1.15 rad/s,
ζ = 0.351 ,
which results in the time period of T = 2π
ω = 5.46 s and a settling time of
ts =
4
ζω = 9.91 s.
The analysis presented above is that of the controls-ﬁxed case, where no
activation of the aerodynamic control takes place. This condition is rarely met
in practice as the control surfaces are not rigidly attached to the vehicle, and
thus undergo some deﬂection whenever the relative ﬂow changes due to the
vehicle’s motion. The aerodynamic control surface for longitudinal dynamics
is the elevator. The elevator can take various forms, such as the conventional
trailing-edge device on the horizontal tail, the all-moving stabilizer, and the
elevons of a tail-less aircraft. The vertical force and pitching moment contri-
butions of the elevator are assumed linear and are modeled by the stability
derivatives Czδ, Cmδ. Often it is necessary to model the actuating mechanism
of the elevator using a second-order dynamical system called the actuator. In
addition, it is also necessary to model the airplane’s motion with a free ele-
vator, where the surface is completely free to assume an equilibrium position
depending upon the angle of attack it experiences. Needless to say, the ideal
controls-free condition is rarely met in practise due to inertia, friction, and
stiﬀness of the acuating mechanism. Since the controls-free condition is also
the case of zero control force (or moment) exerted by the actuating mecha-
nism, it is desirable to control the free-elevator deﬂection, often using a smaller
trailing-edge surface called a trim tab. A pilot uses a trim tab whenever small
pitch adjustments are required, and is very useful in relieving the control
force. Hence, a trim tab is somewhat like the momentum wheel in a space-
craft, where small attitude changes can be made without direct external force
of the rocket thrusters. A variation of the trim tab is the servo-tab, wherein
the deﬂection of an all-moving stabilizing surface is controlled by a gearing
mechanism.
13.8.5 Lateral Dynamics
The lateral dynamic equations—Eqs. (13.127), (13.130), and (13.132)—involve
three degrees of freedom, namely translation along oy (sideslip), and rotation
about ox (roll) and oz (yaw). In a nondimensional form, with no longitudinal
coupling (φ = α = ϵ = Θ = Q = v = 0), these equations can be written as
follows:

13.8 Attitude Motion in Atmospheric Flight
437
m(ve ˙β −ve2
re cos2 Θe tan δe cos Ψ eβ
−2Ωveβ cos δe sin Θe sin Ψ e + veR)
= mge
cΦ cos Φe cos Θe + mge
δ(Φ cos Φe sin Θe cos Ψ e
(13.160)
−Ψ sin Φe sin Θe sin Ψ e + Φ sin Φe sin Ψ e −Ψ cos Φe cos Ψ e)
+qS[Cyββ +
b
2ve (Cy ˙β ˙β + CypP + CyrR)].
Jxx ˙P −Jxz ˙R + (Jzz −Jyy)RQe
= qSb[Clββ +
b
2ve (Cl ˙β ˙β + ClpP + ClrR)] .
(13.161)
Jzz ˙R −Jxz ˙P + JxzRQe + (Jyy −Jxx)PQe
= qSb[Cnββ +
b
2ve (Cn ˙β ˙β + CnpP + CnrR)] .
(13.162)
The lateral motion thus consists of a translational (sideslip) and two rota-
tional (roll and yaw) degrees of freedom. The lateral stability derivatives are
deﬁned in the same manner as that of the longitudinal derivatives, except
that the characteristic length is the wing span, b. The derivatives Cyβ (side-
force due to steady sideslip), Cnβ (static directional stability), Clβ (dihedral
eﬀect), Cnr (damping in yaw), and Clp (damping in roll) are the predominant
lateral stability derivatives. While the sideslip and yaw rate derivatives are
inﬂuenced by the fuselage and the vertical tail (ﬁn), the roll-rate derivatives
are mainly due to the wing. The static directional stability, Cnβ, determines
the ability of the aircraft to regain its equilibrium heading, Ψ e, once displaced
by a sideslip. Also known as weathercock stability, Cnβ > 0 is required for
directional stability and increases with the nondimensional product (called
ﬁn volume ratio) of the ﬁn arm, lv, and ﬁn area, Sv. While the predominant
contribution to directional stability comes from the fuselage, ﬁn, and nacelles,
a swept wing can have a signiﬁcant stabilizing inﬂuence. The dihedral eﬀect,
Clβ, is caused by the eﬀective dihedral angle of the wing, as well as the lift
produced by the ﬁn. Due to the positive dihedral angle, a negative value of
Clβ is created, which turns the aircraft by banking it in the direction oppo-
site to the sideslip. The damping in yaw is caused by the change in the ﬁn’s
angle of attack due to a yaw rate, which tends to apply an opposite yawing
moment (Cnr < 0). The damping in roll is due to the change in the wing
angle of attack due to a roll rate and is such that an opposing rolling mo-
ment is created (Clp < 0). The derivative Cnp is due to the same eﬀect as
Clp0, which causes a diﬀerential drag on the two wings, thereby generating
an adverse yawing moment (Cnp < 0). The other roll-yaw coupling derivative
is Clr, which is due to a diﬀerential lift on the two wings due to a yaw rate.
The other rate derivatives (Cyr, Cyp, Cy ˙β, Cn ˙β) are usually negligible and are
ignored in a stability analysis.
The rudder is the aerodynamic control surface for yaw and sideslip, while
the rolling motion is controlled by the ailerons. The rudder is a trailing-edge

438
13 Attitude Dynamics
control surface on the ﬁn and acts like the elevator, while the ailerons are
mounted on the wing trailing edges and are diﬀerentially deployed to create a
rolling moment. The control derivatives, Cnδa , Clδa , Cnδr , Clδr , Cyδr , model the
linear eﬀects of deploying the aileron and rudder by the respective deﬂection
angles, δa and δr.
All lateral stability derivatives are strong functions of the Mach num-
ber, and some of them can change sign while crossing through the transonic
regime. This is especially true for the yawing moment derivatives. Due to
reduced static directional stability and yaw damping at supersonic speeds,
most supersonic aircraft require a yaw stability augmentation system with a
closed-loop activation of rudder.
The kinematic attitude relations for the small-disturbance lateral motion
can be expressed in terms of the 3-2-1 Euler angles as follows (Chapter 2):
˙Φ = P + R tan Θe,
(13.163)
˙Ψ = R sec Θe.
(13.164)
Clearly (as pointed out in Chapter 2), Θe = ±90◦is a point of singularity for
this attitude representation.
Example 13.10. Simulate the lateral response of an axisymmetric, ballistic re-
entry vehicle with the following parameters to be an initial sideslip and roll
disturbance of β = 0.01 rad and P = −0.001 rad/s: m = 92 kg, Jxx =
0.972 kg.m2, Jyy = Jzz = 9.32 kg.m2, base radius, b = 0.22 m, and base area,
S = 0.152 m2. The stability derivatives of the vehicle based upon the base
area and base radius at the equilibrium ﬂight condition of ve = 5000 m/s,
he = 25 km, δe = 45◦, Ψ e = 190◦, and Θe = −85◦are the following:
Cmα = −Cnβ = −0.52/rad,
Cmq = Cnr = −8/rad,
Czα = Cyβ = −2.15/rad,
Czq = Cyr = −0.35/rad,
Cxu = −2CD = −0.2,
Clp = −0.002/rad,
CD = 0.1.
The other stability derivatives vanish due to the absence of lifting surfaces
and the hypersonic speed.
In order for us to perform the simulation, a program named lateralentry.m,
which is tabulated in Table 13.10, is written to integrate the equations of
lateral motion with the intrinsic MATLAB Runge–Kutta solver ode45.m. The
results are plotted in Figs. 13.25 and 13.26. The sideslip, roll, and yaw angles,
as well as the yaw rate, are seen to oscillate in Fig. 13.25 with a decreasing
amplitude for the 2 s of simulation, while the roll rate remains nearly constant
in the given duration. The decay of roll rate is much slower than the yaw

13.8 Attitude Motion in Atmospheric Flight
439
Table 13.10. M-ﬁle lateralentry.m for Lateral State Equations of a Re-entry Vehicle
function xdot= lateralentry(t,x)
%(c) 2006 Ashish Tewari
global dtr; global mu; global S; global b; global m; global rm; global omega;
global Jxx; global Jyy; global Cnb; global Cyb; global Cnr; global Cyr; global Clp;
global CD; global v0; global Th0; global Psi0; global lat0;
%acceleration due to gravity (oblate earth)
[g,gn]=gravity(x(1),x(2));
chi = Psi0;
cfpa=cos(Th0);sfpa=sin(Th0);
cchi = cos(chi); schi = sin(chi);
cla=cos(lat0);sla=sin(lat0);
%%%atmospheric properties and flow parameters
if x(1)<rm
x(1)=rm;
end
alt = x(1) - rm;
v
= x(2);
atmosp = atmosphere(alt, v, b);
rho = atmosp(2);
q = 0.5*rho*v^2;
mach = atmosp(3);
[t alt v mach]
Xfo=-q*S*CD;
%state-equations:
raddot = v*sfpa;
veldot=-g*sfpa +gn*cchi*cfpa + Xfo/m...
+omega*omega*x(1)*cla*(sfpa*cla-cfpa*cchi*sla);
betadot=-x(7)+v*cfpa^2*cchi*tan(lat0)*x(3)/x(1)...
+2*omega*cla*sfpa*schi*x(3)...
+g*x(4)*cfpa/v+gn*(x(4)*sfpa*cchi-x(6)*cchi)...
+q*S*(Cyb*x(3)+b*Cyr*x(7)/(2*v))/(m*v);
phidot=x(5)+x(7)*tan(Th0);
Pdot=q*S*b^2*Clp*x(5)/(2*Jxx*v);
psidot=x(7)/cfpa;
Rdot=q*S*b*(Cnb*x(3)+b*Cnr*x(7)/(2*v))/Jyy;
xdot=[raddot; veldot; betadot; phidot; Pdot; psidot; Rdot];
rate due to a much smaller damping factor
2 |Clp|
Jxx
≪
|Cnr |
Jzz
3
. In the 2 s of
simulated ﬂight, the altitude drops by nearly 10 km while the speed decays
to approximately 4650 m/s. The Mach number stays in the hypersonic range,
which implies that the assumption of constant-stability derivatives in the given
time is reasonable.
Clearly, the axisymmetric re-entry vehicle of Example 13.10 displays two
distinct modes: a short-period dynamics involving β, Φ, Ψ, R, and a long-period
pure-rolling mode. The timescales of the two motions depend on the respective
moments of inertia and damping derivatives. For an airplane, the presence
of wings and stabilizing surfaces increases the roll damping, and gives rise to
other stability derivatives (such as the dihedral eﬀect), which result in distinct
lateral modes unique to an airplane.
13.8.6 Airplane Lateral Modes
As in the longitudinal dynamics, the lateral motion of an airplane can be
represented by a combination of distinct modes, each of which is obtained as

440
13 Attitude Dynamics
Fig. 13.25. Lateral dynamic response of a re-entry vehicle.
an approximation of the actual equations of motion. The common airplane
equilibrium of straight and level ﬂight (Θe = Qe = ae
xv = ae
yv = ae
zv = Φe =
P e = Re = 0) is the starting point for the lateral modes, the simplest of
which is the pure rolling motion created by an aileron input, called the roll-
subsidence mode, and described by the following rolling moment equation:
Jxx
qSb
˙P =
b
2ve ClpP ,
(13.165)
where P = ˙Φ. Clearly, the mode is a ﬁrst-order dynamical system with an
exponentially decaying response,
P(t) = P(0)e
qSb
Jxx
b
2ve Clpt .
(13.166)
For a given speed and altitude, the rapidity with which the roll rate goes
to zero is primarily dependent upon the ratio
Sb2Clp
Jxx . However, since Jxx is
roughly proportional to the square of the wing span, the rate of decay of roll
rate is primarily determined by the magnitude of Clp. The bank angle can be
obtained by integrating Eq. (13.166) as follows:
Φ(t) =

P(t)dt = Φ(0) + P(0) 2veJxx
qSb2Clp
e
qSb
Jxx
b
2ve Clpt .
(13.167)

13.8 Attitude Motion in Atmospheric Flight
441
15
20
25
4600
4650
4700
4750
4800
4850
4900
4950
5000
Altitude, h (km)
Speed, v (m/s)
Fig. 13.26. Speed vs. altitude of a re-entry vehicle undergoing lateral motion.
Another lateral approximation is the short-period Dutch-roll mode, where
the sideslip and yaw are coupled. Such a motion is normally generated by a
rudder input. By assuming a negligible rolling motion, the airplane’s attitude
remains nearly wings’ level, and we have β ≈−Ψ. Hence, the rolling moment
and sideslip equations are discarded, and the Dutch-roll dynamics is given by
the following yawing moment equation:
Jzz
qSb
¨β −
b
2ve Cnr ˙β + Cnββ = 0.
(13.168)
Clearly, the frequency and damping of the Dutch-roll mode are the following:
ω =
(
qSbCnβ
Jzz
,
(13.169)
ζ = −Cnr
(
qSb3
32JzzCnβ
.
(13.170)
Thus, the damping in the Dutch-roll is directly proportional to Cnr, while its
frequency is determined by the ratio
Cnβ
Jzz . The assumption of negligible roll
in the traditional Dutch-roll approximation is valid only if the dihedral eﬀect,
Clβ, is reasonably small in magnitude. For an airplane with a signiﬁcantly large

442
13 Attitude Dynamics
magnitude of Clβ, the Dutch-roll mode includes a distinct rolling motion with
a reduced damping ratio and can be uncomfortable for passengers as well as
bad for weapons-aiming purposes.
A third lateral mode is the spiral divergence, which consists of an ever-
increasing bank angle, coupled with the yaw angle. The ﬂight path is a slowly
steepening coordinated turn. The equations of motion for the spiral mode can
be obtained by neglecting the sideslip equation, and putting β = 0 in the roll
and yaw equations:
Jxx ˙P −Jxz ˙R = qSb2
2ve (ClpP + ClrR),
(13.171)
Jzz ˙R −Jxz ˙P = qSb2
2ve (CnpP + CnrR) .
(13.172)
The coupled roll-yaw motion leads to a single-degree-of-freedom, ﬁrst-order
dynamical system with a real, positive eigenvalue for the usually unstable
spiral mode. However, the eigenvalue is generally small in magnitude, leading
to a large time constant. Due to its long-period characteristic, the slowly
diverging spiral is easily compensated for by the pilot. The requirement of
stability in the spiral mode can be obtained by examining the constant term
in the lateral characteristic equation [45],
ClβCnr −CnβClr ,
(13.173)
which must be positive for the real root to lie in the left-half Laplace plane
(stable spiral mode). Hence, for spiral stability we require ClβCnr > CnβClr.
The yawing moment derivatives, Cnr, Cnβ are similarly aﬀected by the size
of the ﬁn, hence increasing one also results in the increase of the other. The
cross-derivative Clr is primarily dependent upon the lift coeﬃcient, and thus
cannot be arbitrarily selected at a given speed–altitude combination. This
leaves only the dihedral eﬀect, Clβ, as the design parameter, which can be
selected through a proper wing dihedral angle. However, increasing the mag-
nitude of the dihedral eﬀect—while leading to a greater spiral stability—causes
the rolling moment in the Dutch-roll motion to become large, resulting in a
reduced damping in the coupled roll-yaw-sideslip dynamics. Since damping of
the short-period Dutch-roll motion must remain adequate in most airplanes,
a small amount of long-period spiral instability is accepted as a compromise
in the design.
13.8.7 Rotational Motion of a Launch Vehicle
The atmospheric trajectory of a launch vehicle (or a ballistic missile) may
involve an appreciable aerodynamic torque due to the presence of stabiliz-
ing ﬁns. As discussed in Chapter 12, it is crucial for a launch vehicle to be
maintained at a zero angle of attack and sideslip due to aerodynamic load

13.8 Attitude Motion in Atmospheric Flight
443
considerations. The attitude control of launch vehicles primarily involves con-
trol torque, Mc = Mcxi+Mcyj+Mczk, produced by thrust vectoring. Euler’s
equations of motion for a launch vehicle with pitch-yaw symmetry (Jyy = Jzz)
can thus be written as follows:
Jxx ˙P = Mcx + qSb b
2vClp,
(13.174)
Jyy ˙Q + PR(Jxx −Jyy) = Mcy + qSb[ b
2v(CmqQ + Cm ˙α ˙α) + Cmαα],
Jyy ˙R + PQ(Jyy −Jxx) = Mcz + qSb[ b
2v(CnrR + Cn ˙β ˙β) + Cnββ] ,
where b refers to the maximum ﬁn span, or the maximum body diameter in
case of a vehicle without ﬁns. Due to axisymmetry, the stability derivatives due
to pitch and yaw are indistinguishable from one another. Thus, we have Czα =
Cyβ, Cmq = Cnr, Cmα = −Cnβ, and Cm ˙α = −Cn ˙β. For most launch vehicles
and ballistic missiles, the stability derivatives representing aerodynamic lag
in lift and side force are negligible, because of the small size of the lifting
surfaces. Thus, we can assume Cz ˙α = Cy ˙β ≈0. Generally, the roll rate, P, is
quite small; hence, no appreciable force is created by the Magnus eﬀect [22].
The control torque components Mcy and Mcz are created by the small thrust
deﬂection angles, ϵ and μ (Fig. 13.27),
Mcy = lxfTϵ,
Mcz = −lxfT μ ,
(13.175)
where lx is the longitudinal distance of the nozzle from the center of mass,
and fT denotes the thrust. The rolling control torque, Mcx, is generated aero-
dynamically through control surface deﬂection, δ, and is given by the linear
relationship
Mcx = Clδδ .
(13.176)
The control by thrust vectoring produces undesirable lift and side force if
there are no opposing aerodynamic force components generated by the body
and ﬁns. This is the case during initial lift-oﬀwhen the airspeed is too small for
the opposing aerodynamic force to be created. In such a situation, the lateral
support is provided to the vehicle either by the launch tower or by rocket
thrusters near the nose of the vehicle. We shall make the assumption that
lateral translation of the vehicle is prevented by such a mechanism; therefore,
it is not necessary to consider the translational motion when the aerodynamic
force and moment are negligible. As the speed increases within a few seconds
after launch, the aerodynamic force and moment become suﬃciently large
for the vehicle to be treated in a manner similar to an aircraft, but with
additional pitch-yaw symmetry. It is to be noted that due to the continuously
active attitude stabilization system, the angle of attack and sideslip are kept
small; thus, the assumption of small disturbances is more valid for the launch

444
13 Attitude Dynamics
F
c.m. 
Tf
xl
μ
Fig. 13.27. Thrust deﬂection angles, ϵ and μ.
vehicle than the airplane. Hence, we can conﬁdently utilize the results of
the linearized longitudinal translation model presented earlier and write the
vehicle’s angle of attack (and sideslip) dynamical equations by the short-
period approximation relative to a spherical gravity model as follows:
mv
qS ˙α = mv
qS Q −Θmg
qS sin Θe + Czαα + fT ϵ
qS
(13.177)
and
mv
qS
˙β = −mv
qS R + mg
qS Ψ sin Θe + Cyββ + fT μ
qS .
(13.178)
Note that we have adopted the Euler angle representation, (Ψ)3, (Θ)2, (Φ)1,
for the vehicle’s attitude relative to the local horizon, which is nonsingular
as long as Θe ̸= ±90◦. This is acceptable, because the vertical pitch angle
occurs only at lift-oﬀ, which lies outside our domain of analysis (due to zero
aerodynamic force and moment at that point). Furthermore, the angles of
attack and sideslip are assumed negligible in comparison with the pitch and
yaw angles in the gravity terms.
Example 13.11. Consider the Vanguard ballistic missile with the following
parameters [46] at ﬂight condition of maximum dynamic pressure, q =
28, 035 N/m2, which occurs 75 s after launch at relative speed, v = 392 m/s,
standard altitude 11 km, and mass m = 6513.2 kg:

13.8 Attitude Motion in Atmospheric Flight
445
b = 1.1433 m,
S = 1.0262 m2,
lx = 8.2317 m,
Clp = Cm ˙α = Clδ = 0,
Θe = 68.5◦,
Czα = −3.13 /rad,
Cmα = 11.27 /rad,
fT = 133, 202.86 N,
Jyy = 156, 452.8 kg.m2,
b
2v Cmq = −0.321 s.
(13.179)
Since the missile is not equipped with ﬁns and aerodynamic control surfaces,
we do not require roll control; therefore, the ﬁrst Euler equation yields a mis-
sile spinning at a constant rate, which we can take to be zero without any loss
of generality.12 For P = 0, the dynamic and kinematic equations of motion of
the missile can be represented by the following set of linear diﬀerential equa-
tions (state equation of Chapter 14) at the given ﬂight point:
⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎩
˙Q
˙R
˙Θ
˙Ψ
˙α
˙β
⎫
⎪
⎪
⎪
⎪
⎪
⎪
⎬
⎪
⎪
⎪
⎪
⎪
⎪
⎭
=
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎝
qSb2
2vJyy Cmq
0
0
0
qSb
Jyy Cmα
0
0
qSb2
2vJyy Cmq
0
0
0
−qSb
Jyy Cmα
1
0
0
0
0
0
0
1
cos Θe
0
0
0
0
1
0
−g sin Θe
v
0
qS
mv Czα
0
0
−1
0
g sin Θe
v
0
qS
mvCzα
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎠
⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎩
Q
R
θ
ψ
α
β
⎫
⎪
⎪
⎪
⎪
⎪
⎪
⎬
⎪
⎪
⎪
⎪
⎪
⎪
⎭
+
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎝
lxfT
Jyy
0
0
−lxfT
Jyy
0
0
0
0
fT
mv
0
0
fT
mv
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎠
 ϵ
μ

.
12 The axisymmetric missile without ﬁns would remain nonrolling after being
launched at a zero roll rate. Conversely, a riﬂe bullet continues rolling at a ﬁxed
rate after leaving the barrel.

446
13 Attitude Dynamics
Let us simulate the vehicle’s response for 0.1 s due to a step change in both ϵ
and μ by 1◦at the given ﬂight point using the Simulink block diagram shown
in Fig. 13.28. The exponentially increasing response, Fig. 13.29, indicates an
unstable equilibrium, which requires an automatic attitude stabilization sys-
tem. The instability is caused by a positive value of Cmα(= −Cnβ), as well
as the eﬀect of gravity on the angle of attack (and sideslip) due to θe ̸= 0. If
large ﬁns are added near the aft part of the vehicle, it could be made statically
stable like an airplane and some surface-to-air missiles. The response shown
in Fig. 13.29 would diﬀer appreciably from that of the actual vehicle, because
we have not modeled structural ﬂexibility and fuel-slosh dynamics.
mu
epsilon
x' = Ax+Bu
 y = Cx+Du
Vanguard Missile
x
To Workspace
Fig. 13.28. Simulink diagram for step response of the Vanguard missile without
attitude stabilization.
13.8.8 Inertia Coupled Dynamics
The separation of atmospheric rotational dynamics into longitudinal and lat-
eral motions involves the assumption of small angular rate disturbances. For
some vehicles, such as modern ﬁghter airplanes and missiles, the concentration
of mass in the fuselage results in a large diﬀerence between the rolling moment
of inertia and the pitching (and yawing) inertia. Consequently, the nonlinear
coupling terms—such as (Jxx −Jzz)PR in the pitching moment equation—
become signiﬁcant, thereby causing an interaction between the longitudinal
and lateral dynamics for even moderate body rates. Inertial coupling has
caused some ﬁghter airplanes (e.g., the Lockheed F-104) to become unsta-
ble when rolling at high rates. While an approximate linear stability analysis
is possible by considering the coupled longitudinal short-period and Dutch-
roll dynamics [46], it is often necessary to simulate the complete six-degree-
of-freedom dynamics of an inertia coupled vehicle, as discussed in Chapter
15. Controlling the inertia coupled dynamics usually requires a multivariable
control system (Chapter 14). The case of aerodynamic missiles and artillery
shells rolling at high rates is further aggravated by the aerodynamic cou-
pling caused by the Magnus eﬀect [22] and generally results in additional
stability derivatives in a linearized stability analysis [45]. The aerodynamic
behavior of a ﬁghter aircraft rolling at a large angle of attack is essentially

13.8 Attitude Motion in Atmospheric Flight
447
Fig. 13.29. Step response of the Vanguard missile without attitude stabilization.
nonlinear and leads to a complex motion (Chapter 15). Here, we neglect the
aerodynamic coupling eﬀects and conﬁne our attention to the inertia cou-
pled dynamics. Euler’s equations of rotational dynamics of an inertia coupled
vehicle, Eq. (13.19), can be expressed as follows:
˙P = Jxz(Jzz + Jxx −Jyy)PQ −[J2
xz + Jzz(Jzz −Jyy)]QR + JxzN + JzzL
JxxJzz −J2xz
,
˙Q = Jxz(R2 −P 2) + (Jzz −Jxx)PR + M
Jyy
,
(13.180)
˙R = Jxz( ˙P −QR) + (Jxx −Jyy)PQ + N
Jzz
,
where L, M, N are the external torque components acting on the vehicle. In
addition to the rotational dynamic equations, the linear equations of small-
disturbance aerodynamic translation, u, α, β [Eqs. (13.126)–(13.128)], are re-
quired for propagating the aerodynamic force and moment in time. Finally,
the attitude kinematics are represented by a suitable representation, such as
3-2-1 Euler angles, or the quaternion.
Example 13.12. Simulate the inertia-coupled response of the ﬁghter airplane
to an initial roll-rate disturbance of 0.5 rad/s when ﬂying straight and level at
standard sea level and δ = 45◦, with Ae = 45◦and Mach number, M = 0.797.

448
13 Attitude Dynamics
The lateral dynamic data of the airplane at the prescribed Mach number
are given in Exercise 13.14, while its longitudinal characteristics are given by
Jyy = 36, 110.67 kg.m2, ¯c = 1.95 m, lt = 5.64 m, and the following stability
derivatives:
Cmα = −0.44/rad,
¯c
2ve Cmq = −0.0305/rad,
¯c
2ve Cm ˙α = −0.0159/rad,
Czα = −5.287/rad,
¯c
2ve Czq = −0.01055/rad,
¯c
2ve Cz ˙α = −0.0055/rad,
Czu = −0.185,
Cxα = 0/rad,
Cxu = −0.0426.
The six-degree-of-freedom simulation is performed with the coupled equa-
tions of motion encoded in aircoupled.m (Table 13.11). The response of the
aircraft is plotted in Figs. 13.30–13.32. The observed response to the large roll
rate can be broken into three distinct phases:
(a) 0 < t ≤10 s, during which the roll rate, yaw rate, and sideslip angle un-
dergo a rapidly decaying oscillation. During this time, the speed, pitch angle,
pitch rate, and angle of attack are unchanged, while the bank and yaw angles
increase slowly with time.
(b) 10 < t ≤170 s, in which all variables except the roll rate undergo an
unstable long-period oscillation and reach their maximum values near the end
of the interval. This interval represents a diving attitude, with ever-increasing
peak speed and increasingly negative angle of attack, which leads to a super-
sonic Mach number and more than double the equilibrium speed at t = 110 s.
The attitude angles also build up in this phase, with the pitch angle reaching
a maximum magnitude of Θ = −220◦at t = 108 s, which is a case of inverted
ﬂight. By this time, a steep bank and dive are established. The main reason
for the increase in the pitch rate during this interval is the small damping in
pitch, Cmq, at the given Mach number.
(c) t > 170 s, which sees the airplane trying to recover from the unusual pitch
attitude in stable pitching oscillations that converge to a steady pitch angle of
Θ = −90◦. In this phase, rolling and yawing motions increase exponentially,
leading to an ever-steepening, downward spiral. This is the classical spiral
divergence discussed above. There is a negligible variation in the speed and
angle of attack in this phase, while the sideslip angle shows a steep rise in
magnitude.

13.8 Attitude Motion in Atmospheric Flight
449
Table 13.11. M-ﬁle aircoupled.m for Six Degree-of-Freedom, Nonlinear State Equa-
tions of Aircraft
function xdot=aircoupled(t,x)
%program for inertia-coupled rotational dynamics and Euler 3-2-1 kinematics
%of aircraft and missiles
%x(1)=P, x(2)=Q, x(3)=R (angular velocity in rad/s)
%x(4)=phi, x(5)=theta, x(6)=psi (rad), x(7)=alpha (rad),
%x(8)=beta (rad), x(9)=u
%(c) 2006 Ashish Tewari
global dtr; global S; global c; global b; global lt; global m; global rm;
global omega; global Jxx; global Jyy; global Jzz; global Jxz; global v0;
global phi0; global A0; global Q0; global delta; global h0; global Cma;
global c2vCmad; global c2vCmq; global Cxu; global Cxa; global Czu;
global Cza; global c2vCzad; global c2vCzq; global Cyb; global Cnb;
global Clb; global Cnr; global Cnp; global Clp; global Clr; global Cyr;
%acceleration due to gravity (oblate earth):
[g,gn]=gravity(h0+rm,delta);
%atmospheric properties:
v
= v0*(1+x(9));
atmosp = atmo_sre(h0, v, c);
rho = atmosp(2);%density
q = 0.5*rho*v^2;%dynamic pressure
mach = atmosp(3);
CL=m*g/(q*S);
[t v mach]
%coupled attitude dynamics
udot = -Q0+q*S*(Cxu*x(9)+Cxa*x(7)...
+x(5)*(-cos(phi0)*CL+sin(phi0)*sin(A0)*m*gn/(q*S)))/(m*v0);
alphadot = (2*x(9)*omega*cos(delta)*sin(A0)...
+2*x(9)*v0/(rm+h0)+x(9)*Q0+x(2)+q*S*(Czu*x(9)+Cza*x(7)...
+x(5)*(sin(phi0)*CL-cos(phi0)*cos(A0)*m*gn/(q*S))...
+c2vCzq*x(2))/(m*v0))/(1-q*S*c2vCzad/(m*v0));
L=q*S*b*(Clb*x(8)+0.5*b*(Clp*x(1)+Clr*x(3))/v);
M=q*S*c*(Cma*x(7)+c2vCmq*x(2)+c2vCmad*alphadot);
N=q*S*b*(Cnb*x(8)+0.5*b*(Cnp*x(1)+Cnr*x(3))/v);
jxz=Jxx*Jzz-Jxz^2;
P=x(1);Q=x(2);R=x(3);
pdot=(Jxz*(Jzz+Jxx-Jyy)*P*Q-(Jxz^2+Jzz*(Jzz-Jyy))*Q*R+Jxz*N+Jzz*L)/jxz;
qdot=(Jxz*(R^2-P^2)+(Jzz-Jxx)*P*R+M)/Jyy;
rdot=(Jxz*(pdot-Q*R)+(Jxx-Jyy)*P*Q+N)/Jzz;
phidot=x(1)+(x(2)*sin(x(4))+x(3)*cos(x(4)))/cos(x(5));
thetadot=x(2)*cos(x(4))-x(3)*sin(x(4));
psidot=(x(2)*sin(x(4))+x(3)*cos(x(4)))/cos(x(5));
betadot=-x(3)+v*cos(phi0)^2*cos(A0)*tan(delta)*x(8)/(rm+h0)...
+2*omega*cos(delta)*sin(phi0)*sin(A0)*x(8)...
+g*x(4)*cos(phi0)/v+gn*(x(4)*sin(phi0)*cos(A0)-x(6)*cos(A0))...
+q*S*(Cyb*x(8)+b*Cyr*x(3)/(2*v))/(m*v);
xdot=[pdot;qdot;rdot;phidot;thetadot;psidot;alphadot;betadot;udot];
It is important to note that the ﬂow angles α, β remain small during this
nonlinear simulation, thereby validating the assumption of linearized aero-
dynamics. Hence, the large body rates and angles are not caused by large
aerodynamic disturbances, but rather by inertia coupling. The increase in the
speed during the steep dive resulting from the high roll-rate disturbance leads
to the airplane’s entering the supersonic regime. We have not accounted for
the variation of the stability derivatives at transonic and supersonic Mach
numbers in this simulation, which may cause the aerodynamic torque to be
appreciably modiﬁed in the last phase. A common condition in transonic

450
13 Attitude Dynamics
0
20
40
60
80
100
120
140
160
180
−15
0
15
30
P (deg./s)
0
20
40
60
80
100
120
140
160
180
0
5
10
15
Q (deg./s)
0
20
40
60
80
100
120
140
160
180
−5
5
15
25
35
R (deg./s)
Time (s)
Fig. 13.30. Body-rate response of a ﬁghter aircraft to a large initial roll-rate dis-
turbance.
ﬂight is the tuck-under phenomenon, wherein the aerodynamic center moves
aft, and the damping derivatives diminish in magnitude as the Mach number
increases.
Another situation where inertia coupling becomes important is when the
angular momentum of rotors in aircraft engines is taken into account. In such
situations, the modeling of inertia coupling is carried out in the same manner
as that given above for spacecraft with rotors, by adding the constant angular
momenta of the spinning rotors to Euler’s equations.
13.9 Summary
Euler’s equations of rotational motion govern the rotational dynamics of
rigid bodies, and their solution gives the angular velocity at a given instant.
Along with the kinematic equations, Euler’s equations completely describe the
changing attitude of a rigid body under the inﬂuence of a time-varying torque
vector. When expressed in a body-ﬁxed frame, Euler’s equations involve con-
stant moments and products of inertia. In a principal body-ﬁxed frame, the
products of inertia vanish, yielding a diagonal inertia tensor. Torque-free mo-
tion of rigid spacecraft is an example of conservative rotational maneuvers,

13.9 Summary
451
0
20
40
60
80
100
120
140
160
180
−180
180
540
900
1260
1620
1900
Φ (deg.)
0
20
40
60
80
100
120
140
160
180
−180
−90
0
Θ (deg.)
0
20
40
60
80
100
120
140
160
180
−180
180
540
900
1260
1620
1900
Ψ (deg.)
Time (s)
Fig. 13.31. Attitude response of a ﬁghter aircraft to a large initial roll-rate distur-
bance.
wherein both angular momentum and rotational kinetic energy are conserved.
While a rigid spacecraft’s rotation about either the minor or the major axis is
unconditionally stable, a semirigid spacecraft always tends toward the state
of equilibrium with the lowest rotational kinetic energy—a pure spin about
the major axis. Time-optimal maneuvers are an important open-loop method
of controlling the spin and attitude of spacecraft and consist of at least a pair
of suitably timed, equal and opposite torque impulses (bang-bang control).
Other methods of stabilizing and controlling spacecraft’s attitude motion are
the use of rotors (dual-spin, reaction/momentum wheels, and control moment
gyroscope), gravity gradient and magnetic torques. When considering the ro-
tational dynamics within the atmosphere, Euler’s equations are employed with
the assumption of a rigid vehicle, and taking into account the aerodynamic
torque generated by the rotation of the vehicle, as well as the control torque
applied either by the pilot, or by an automatic control system. The airplane is
the generic atmospheric ﬂight vehicle for attitude motion models. The Corio-
lis acceleration terms due to planetary rotation and ﬂight-path curvature are
generally negligible in a rotational model, except for that of an atmospheric
entry vehicle. The linearized aerodynamic model employed for airplane sta-
bility and control applications is based upon small ﬂow perturbations from
an equilibrium point. The small-disturbance approximation also results in the
concept of linear stability derivatives, irrespective of the ﬂow regime in which

452
13 Attitude Dynamics
0
20
40
60
80
100
120
140
160
180
−1.2
−0.8
−0.4
0
α (deg.)
0
20
40
60
80
100
120
140
160
180
0
1
2
β (deg.)
0
20
40
60
80
100
120
140
160
180
0
0.4
0.8
1.2
u
Time (s)
Fig. 13.32. Flow angle and speed response of a ﬁghter aircraft to a large initial
roll-rate disturbance.
the equilibrium point is located. Using the plane of symmetry existing in all
atmospheric vehicles, one can separate the rotational motion in the plane of
symmetry, called longitudinal dynamics, from that outside the plane referred
to as lateral dynamics. A further assumption of de-coupled longitudinal and
lateral modes enables a linearized stability analysis commonly applied to air-
planes. The attitude control of non-aerodynamic missiles and launch vehicles
primarily involves a control torque produced by thrust vectoring, generally
leading to a statically unstable conﬁguration. For modern ﬁghter airplanes
and missiles, the concentration of mass in the fuselage results in a large dif-
ference between the rolling moment of inertia and the pitching (and yawing)
inertia. Consequently, the nonlinear, inertial coupling terms in Euler’s equa-
tions become signiﬁcant, thereby causing an interaction between the longitu-
dinal and lateral dynamics for even moderate body rates. Hence, a complete
six-degree-of-freedom modeling and simulation become necessary for stability
and control analysis of inertia-coupled vehicles.
Exercises
13.1. Calculate the principal inertia tensor, Jp, and the principal rotation
matrix, Cp, for a spacecraft with the following inertia tensor:

13.9 Summary
453
J =
⎛
⎝
12500 −1000
3500
−1000 62500
−500
3500
−500
32000
⎞
⎠kg.m2.
Use the result to ﬁnd the angular velocity in the principal frame if the angular
velocity in the current body frame is ω = (0.15, −0.25, −0.8)T rad/s.
13.2. Using the kinematic equations, Eq. (13.40), show that the precession of
an axisymmetric spacecraft obeys the relationship tan φ = ωx
ωy .
13.3. Write a program to carry out direct numerical simulation of a bang-
bang, impulsive attitude maneuver of the spacecraft with the same moments
of inertia as in Example 13.3, but with a spin rate of n = 0.1 rad/s, and
realistic thruster torque impulses of magnitude 1000 N.m, each applied for
Δt = 0.01 s. What is the time between the impulses and the ﬁnal deviation
of the spin axis?
13.4. Repeat Exercise 13.3 using a reaction wheel spinning about oy instead
of the attitude thrusters. The moments of inertia of the wheel in the spacecraft
principal axes are Jxx = Jzz = 50 kg.m2 and Jyy = 150 kg.m2. Consider the
reaction wheel to be initially at rest relative to the spacecraft. What is the
ﬁnal spin rate of the wheel at the end of the maneuver?
13.5. It is desired to exactly null the ﬁnal angular velocity of the spacecraft
in Example 13.4 by using thruster torque impulses. Design a maneuver that
achieves this using linearized Euler’s equations with small angular velocity
approximation. Determine the smallest number and magnitude of the torque
impulses if thruster ﬁring is limited to 0.01 s.
13.6. Carry out the attitude simulation of the VSCMG-equipped spacecraft
in Example 13.5 using the modiﬁed Rodrigues’ parameters (MRP) deﬁned
in Chapter 2, and compare the principal rotation angle with that plotted in
Fig. 13.16.
13.7. Derive the governing equations of motion for a rigid, asymmetric space-
craft equipped with two reaction wheels, having their spin axes along the
major and minor axes of the spacecraft, respectively. Modify the program
spacevscmg.m to simulate the response of the spacecraft in Example 13.2
with the two reaction wheels of equal moment of inertia of 10 kg.m2 about
their spin axes. Assume that the wheels are initially at rest relative to the
spacecraft, whose initial attitude and angular velocity are speciﬁed in Ex-
ample 13.2. At time t = 0, a torque of 10 N.m begins acting on each wheel
about the spin axis, and remains constant for a period of 10 s, after which it
instantaneously drops to zero. Neglect friction in the reaction wheel bearings.
13.8. Write a program to simulate the response of an axisymmetric spacecraft
platform with an oblate rotor in dual-spin conﬁguration. The spacecraft has

454
13 Attitude Dynamics
a moment of inertia of 1000 kg.m2 about its spin axis, and 2000 kg.m2 about
a lateral principal axis. The rotor’s moment of inertia about its spin axis
is 250 kg.m2 and 100 kg.m2 about a lateral principal axis. The centers of
mass of the platform and the rotor are oﬀset from the center of mass of the
dual-spin conﬁguration by 0.5 m and 2.5 m, respectively. Initially, both the
platform and the rotor are spinning in the same direction with angular speeds
of 7.27 × 10−5 rad/s and 5 rad/s, respectively, when a lateral angular velocity
disturbance of ωxy = 0.01 rad/s, is encountered. Neglect the friction in the
rotor bearing.
13.9. Estimate the natural frequencies of gravity gradient motion of the Seasat
spacecraft with the following characteristics:
Jxx = Jyy = 25, 100 kg.m2,
Jzz = 3000 kg.m2,
n = 0.00105 rad/s.
Simulate the coupled nonlinear response of the spacecraft to an initial yaw-
rate disturbance of 10−5 rad.
13.10. Find the phugoid and short-period characteristics of the delta-winged
ﬁghter of Example 13.7 if the equilibrium ﬂight path is the straight and level
ﬂight of Case (a). How do the settling times compare with those observed in
the simulated response of Example 13.7?
13.11. Find the phugoid and short-period characteristics of the jet transport
of Example 13.8 if the equilibrium ﬂight path is a quasi-steady climb at stan-
dard sea level with δe = 45◦, ve = 150 m/s, and φe = 30◦.
13.12. Simulate the longitudinal response of the re-entry vehicle of Example
13.10 to an initial angle of attack disturbance, α = 0.002 rad. What are the
phugoid and short-period characteristics of the vehicle?
13.13. Model the combined lateral and longitudinal dynamics of the re-entry
vehicle of Example 13.10 using the quaternion instead of Euler angles. Use
the model to repeat the simulation of Example 13.10 with the given initial
condition, except that the initial pitch angle is Θe = −90◦. Will there be any
change in the pitch angle during the resulting motion? Why?
13.14. The aerodynamic data for the F-94 ﬁghter [46] with m = 6178.15 kg,
Jxx = 15, 004.5 kg.m2, Jxz = 455.75 kg.m2, Jzz = 50, 066.26 kg.m2, b =
11.37 m, S = 22.22 m2, Ae = 0, at Mach number M = 0.797 and standard
sea level are the following:
Cnβ = 0.1/rad,
Cnr = −0.134/rad,

13.9 Summary
455
Cyβ = −0.546/rad,
Cyr = 0.287/rad,
Clp = −0.39,
Clβ = −0.0654/rad,
Clr = 0.043,
CL = 0.0605 .
Simulate the lateral motion of the ﬁghter to an initial sideslip of 0.01 rad from
straight and level ﬂight, and identify its lateral modes.
13.15. Repeat the simulation of the Vanguard missile dynamics of Example
13.11 using the quaternion for attitude representation.

14
Attitude Control Systems
14.1 Aims and Objectives
•
To present modeling and simulation of closed-loop control systems for a
large variety of aerospace applications based upon modern control
concepts.
•
To introduce linear systems theory.
•
To provide examples of multivariable control systems applied to aircraft,
spacecraft, and rockets.
14.2 Introduction
In the previous chapter we saw how the attitude of an atmospheric ﬂight
vehicle can inﬂuence its ﬂight path. Maintaining a speciﬁc orientation, or
changing the orientation with time in a speciﬁc manner, is also crucial for
mission eﬀectiveness of most spacecraft. Therefore, it is necessary to exercise
some form of attitude control in all ﬂight vehicles. In an unmanned vehicle,
such control is possible only by an automatic mechanism. Even piloted vehicles
routinely employ an automatic attitude control system in order to reduce the
pilot work load. In the present chapter, we shall brieﬂy discuss the modeling
and simulation of attitude control systems.
Control is the name given to the task of achieving a desired result. The ob-
ject to be controlled (a ﬂight vehicle) is referred to as plant, while the process
that exercises the control is called the controller. Both plant and controller
are systems, deﬁned as a self-contained set of physical processes under study.
One could graphically depict a system by a box [Fig. 14.1(a)] connected by
two arrows, one leading to, and the other away from, the box, called the input
and output, respectively. Such a representation of the system is called a block
diagram. The input and output each consists of several scalar variables and are
mathematically represented as vectors. Figure 14.1(a) shows a system with m
scalar input variables and p output variables. In modeling a system, one must

458
14 Attitude Control Systems
account for the relationship between the input and output. This relationship
generally takes the form of a diﬀerential equation in time if the system is gov-
erned by known physical laws, such as the laws of motion (Chapter 4). Such
a system is said to be deterministic, whereas a system with unknown (or par-
tially known) physical laws is called nondeterministic, or stochastic. All ﬂight
vehicles are designed as deterministic systems, even though some of their in-
put variables may be governed by stochastic processes (such as wind gusts).
Similarly, the ﬂight vehicles’ control systems are generally deterministic and
thus can be modeled by diﬀerential equations in time. The condition, or state,
of a system at a given time is deﬁned by another set of scalar variables, called
state variables. For example, a ﬂight vehicle’s attitude can be described by the
quaternion, q(t), q4(t), and the body-referenced angular velocity components,
omega(t). Thus, the state vector of a ﬂight vehicle’s attitude dynamics is
x(t) = {q(t), q4(t), omega(t)}T . The vector space formed by the state vector,
x(t), is called a state space. Clearly, the state space is not unique (as seen in
Chapter 2 for the attitude kinematics), and any system can be described by an
inﬁnite number of diﬀerent state-space representations. A system consisting of
Fig. 14.1. Block-diagram representation of control systems.

14.2 Introduction
459
the plant and the controller is called a control system. The controller exercises
control over the plant through the control input, u(t), which is an input to
the plant, but an output of the controller. In physical terms, this output can
take the form of either a force or a torque (or both) applied to a ﬂight vehicle.
It is often necessary to model the process by which such a force, or torque, is
generated, called an actuator. Generally, there are as many actuators as the
number of scalar control inputs. The most common task of a control system
is bringing the plant to a desired state, xd(t), in the presence of unwanted
input variables, v(t), called disturbances. This task can generally be achieved
by two kinds of control systems: (a) open loop, or (b) closed loop [Fig. 14.1(b),
(c)]. In an open-loop control system, the controller has no knowledge of the
actual state of the plant, x(t), at a given time, and the control is exercised
based upon a model of the plant dynamics as well as an estimate of its initial
condition, x(0). Obviously, such a “blind” application of control would be suc-
cessful in driving the plant to a desired state, only if the plant model is exact
and the disturbances are properly accounted for. It is seldom possible to meet
these requirements, and there are always some discrepancies in our estimates
of the plant dynamics, initial condition, and the disturbances. Therefore, often
a closed-loop control system is utilized, in which the actual state of the plant is
provided to the controller through a feedback mechanism, so that the control
input, u(t), can be appropriately adjusted. Practically, this feedback consists
of either direct measurements of all state variables, which is rarely possible,
or an indirect reconstruction of the plant’s state x(t), through a measurement
of the plant’s output, y(t), as shown in Fig. 14.1(c). When the plant’s output
is fed back, the control system is called an output feedback system. When the
state vector is fed back (either through direct measurement, or by indirect re-
construction through the output), the control system is called a state feedback
system. Whenever a measurement of a variable is involved, it is necessary to
model the dynamics of the measurement process, called the sensor. Gener-
ally, there are as many sensors as the number of measured scalar variables. In
an output feedback system, the plant’s output is continually compared with
a desired output, yd(t), as shown in Fig. 14.1(c). The round symbol with a
cross in Fig. 14.1(c) represents a summing junction, where the various incom-
ing variables are added with appropriate signs (a negative sign indicated near
the arrow of a variable implies that the variable is to be subtracted from the
other incoming variables), and the result of the arithmetic sum is the variable
shown by the outgoing arrow. For example, the input to the controller from
the summing junction in Fig. 14.1(c) is the error vector,1
e(t) = yd(t) −y(t) .
(14.1)
The closed-loop control system works by attempting to drive the error e(t)
to zero over a reasonable time interval through the application of the control
1 In a state feedback system, the error is deﬁned as the diﬀerence between the
desired state, xd(t), and the plant’s state, x(t).

460
14 Attitude Control Systems
input, u(t). Of course, u(t) should be made dependent upon e(t). Furthermore,
u(t) may also depend explicitly upon the desired output (or desired state).
Thus, it is also necessary to provide the controller with the desired output (or
state) through a feedforward path, shown in Fig. 14.1(c).
In a modern control system, the actuators are operated through electrical
signals as inputs, while the sensors produce electrical signals as their outputs.
A controller must manipulate these electrical signals through either analog
or digital processes, which basically regard the signals as continuous or dis-
crete variables of time [43]. One has the option of clubbing the sensors and
actuators with either the controller or the plant. Sometimes it may be conve-
nient to model actuators and sensors as separate systems. In Fig. 14.1(b) and
(c), we have adopted the convention of including sensors and actuators into
the model for the plant. In a general control system, the controller represents
mathematical relationships between the plant’s output, y(t), the desired state,
xd(t), the control input, u(t), and time, t. These relationships are referred to
as control laws, and their derivation is the main objective of control theory.
We shall not attempt to explore control theory, but refer the reader to related
textbooks, such as [43]. We shall assume that a control law has been appropri-
ately derived to achieve the desired control system dynamics, and then model
the control system accordingly.
The performance of a control system is assessed primarily by the time the
plant’s output takes (which is also the output of the control system) to come
close to (within a speciﬁc percentage) the desired state, its deviations from
the desired state (called overshoots) in the meantime, and the magnitudes of
the control input required in the process. Thus, we analyze the behavior of
the system at a large time, t →∞, called the steady-state response, as well as
that at small values of time when large overshoots from the desired state could
occur. A successful control system is the one in which the maximum overshoot
is small and the time taken to reach within a small percent of the desired state
is also reasonably small. Therefore, a control system is usually approximated
by a linear diﬀerential equation, resulting from the assumption of small devia-
tions from the desired state (which is regarded as the equilibrium of the linear
system, as discussed in Chapter 13). A great simpliﬁcation occurs by making
such an assumption, because we can apply the principle of linear superposi-
tion (Chapter 13) to a linearized system, which allows a weighted addition
of the system output vectors to individual input vectors, in order to yield
the total output due to a linear combination of several input vectors. Linear
superposition enables us to utilize operational calculus and linear algebraic
methods for analysis. Most of the nonlinear systems can be linearized about
equilibrium points, and a linear stability analysis would reveal the tendency
of either remaining close to, or departing from, a given equilibrium point. We
have already carried out linear stability analyses of some equilibrium points
in Chapter 13. The same approach can now be extended to linear control
systems.

14.3 Linear Systems
461
14.3 Linear Systems
Linear system theory is a well-established art [43] and refers to the analysis
of a system linearized about a particular equilibrium point. A system is said
to be linear if its output to the input, u(t) = c1u1(t) + c2u2(t), is given by
y(t) = c1y1(t) + c2y2(t), where y1(t) and y2(t) are the outputs of the system
to u1(t) and u2(t), respectively, and c1, c2 are arbitrary scalar constants.
By inspecting the governing diﬀerential equations of a system, it is possible
to determine whether it is linear. If the governing diﬀerential equations do
not contain products and transcendental functions of the state and input
variables and their time derivatives, the system is linear. Consider a linear
system described by a set of ﬁrst-order, ordinary diﬀerential equations, written
in the following matrix form:
˙x(t) = A(t)x(t) + B(t)u(t) ,
(14.2)
with initial condition
x(0) = x0 .
(14.3)
Here, x(t) is a state vector of the linear system, while u(t) is the input vector.
For the time being, we are ignoring the disturbance inputs to the system,
which can be easily included through an additional term on the right-hand
side. The set of ﬁrst-order, ordinary diﬀerential equations, Eq. (14.2), is called
the state equation of the system.2 The dimension of the state vector is referred
to as the order of the system. Any set of ordinary diﬀerential equations govern-
ing the system’s behavior can be converted into a state equation by suitably
deﬁning the state vector. As pointed out above, a state equation and its initial
condition, although nonunique, completely describe the behavior of a system
at all time instants, t ≥0. The coeﬃcient matrices, A(t) and B(t), can be
generally time-varying, and their dimensions depend upon the order of the
system as well as the size of the input vector, u(t).
The general solution of Eq. (14.2), subject to the initial condition of
Eq. (14.3), can be written as follows [43]:
x(t) = Φ(t, 0)x0 +
 t
0
Φ(t, τ)B(τ)u(τ)dτ ,
(14.4)
where Φ(t, t0) is called the state-transition matrix. The state-transition matrix
has the property of transforming the state at time t0 to another time t if the
applied input is zero (u(t) = 0), according to
x(t) = Φ(t, t0)x(t0) .
(14.5)
For u(t) = 0, the state equation becomes the following homogeneous equation:
˙x(t) = A(t)x(t) .
(14.6)
2 We can describe nonlinear systems also by a state equation.

462
14 Attitude Control Systems
Hence, Φ(t, 0) gives the solution to the homogeneous state equation, with
the initial condition of Eq. (14.3). Some important properties of the state-
transition matrix are the following:
Φ(t, t0) = −Φ(t0, t),
(14.7)
Φ(t, t0) = Φ(t, t1)Φ(t1, t0),
(14.8)
dΦ(t, t0)
dt
= A(t)Φ(t, t0).
(14.9)
Equations (14.7)–(14.9) are said to represent the inverse, associative, and
derivative properties of the state-transition matrix.
The derivation of the state-transition matrix is a formidable task for a
general linear system with time-varying coeﬃcient matrices (called a time-
varying, linear system). Only in some special cases can the exact, closed-form
expressions for Φ(t, t0) be derived. Whenever Φ(t, t0) cannot be obtained in
a closed form, it is necessary to apply approximate numerical techniques for
the solution of the state equation, as discussed in Appendix A.
14.3.1 Time-invariant, Linear Systems
Generally, the timescale of rotational dynamics is so small that most ﬂight ve-
hicles can be assumed to have nearly constant coeﬃcient matrices of attitude
dynamics at a given equilibrium point. In such a case, the system is approx-
imated to be a time-invariant, linear system, with A, B treated as constant
matrices. A time-invariant case is easily handled by writing
Φ(t, t0) = eA(t−t0) ,
(14.10)
where eM is called the matrix exponential of a square matrix, M, and is deﬁned
by the following inﬁnite series (similar to a scalar exponential):
eM .= I + M + 1
2M2 + . . . + 1
n!Mn + . . . .
(14.11)
While the evaluation of eA(t−t0) by this inﬁnite series would be impossible
in practice, a suitable numerical approximation of Eq. (14.11) with only a
ﬁnite number of terms can be utilized by breaking the time interval, t −t0,
into a number of small intervals. This forms the basis of numerical evaluation
of the state-transition matrix for time-invariant, linear systems. However, for
a small-order system, an exact, closed-form expression for eA(t−t0) can be
obtained with the use of Laplace’s transform.
Consider the Laplace transform of the state equation, Eq. (14.2), for a
time-invariant system, subject to the initial condition of Eq. (14.3):
sX(s) −x0 = AX(s) + BU(s) ,
(14.12)

14.3 Linear Systems
463
where X(s) and U(s) are the Laplace transforms of x(t) and u(t), respec-
tively.3 In order to derive the state-transition matrix, we make the input
vanish, which leads to
(sI −A)X(s) = x0 ,
(14.13)
or,
X(s) = (sI −A)−1x0 .
(14.14)
By taking the inverse Laplace transform of Eq. (14.14), we have
x(t) = L−1(sI −A)−1x0 ,
(14.15)
which, upon comparison with Eq. (14.5), yields
eAt = L−1(sI −A)−1 .
(14.16)
We have already utilized this expression of the state-transition matrix while
analyzing the rotational dynamics of spacecraft in Chapter 13.
By substituting Eq. (14.10) into Eq. (14.4), we can write the following
general expression for the state of a linear, time-invariant system in the pres-
ence of an arbitrary, Laplace transformable input, which begins to act at time
t = 0 when the system’s state was x(0) = x0:
x(t) = eAtx0 +
 t
0
eA(t−τ)B(τ)u(τ)dτ .
(14.17)
The ﬁrst term on the right-hand side of Eq. (14.17) is called the initial response
(or transient response), which decays to zero for an asymptotically stable
system in the limit t →∞. However, in the same limit, the integral term
may either converge to a ﬁnite value (called the steady state), or assume the
same functional form as that of the input (called the forced response). The
solution of the linear state equation given by Eq. (14.17) can be obtained by
discretization of time into small intervals, and evaluating the initial response
as well as the integral term by appropriate approximations, as discussed in
[43]. Such an approach is programmed in the intrinsic MATLAB function lsim,
which can also be invoked by a Simulink block diagram (as we will see in the
examples discussed ahead).
14.3.2 Linear Stability Criteria
Apart from determining the state-transition matrix, the Laplace transform
approach is also useful in a linear stability analysis. Equation (14.13) rep-
resents an eigenvalue problem, whose solution yields the eigenvalues, s, and
eigenvectors, X(s). The eigenvalues of the linear system are obtained by the
3 We assume that both x(t) and u(t) satisfy the conditions for the existence of a
Laplace transform, i.e., they are piecewise-continuous functions bounded by an
exponential.

464
14 Attitude Control Systems
following characteristic equation, which results from a nontrivial solution of
Eq. (14.13):
| sI −A |= 0 .
(14.18)
Hence, the eigenvalues of the constant-coeﬃcient matrix, A, are the roots of
the characteristic equation, Eq. (14.18). Generally, the characteristic equation
of a system of order n is expressed as a polynomial equation as follows:
| sI −A |= sn + an−1sn−1 + an−2sn−2 + . . . + a1s + a0 = 0 ,
(14.19)
where the characteristic coeﬃcients, ai, i = 0 . . . (n −1), are invariant with
the choice of the state variables (i.e., they are unique parameters of the sys-
tem). The n complex roots of the characteristic equation (eigenvalues of A)
signify an important system property, called stability. There are many deﬁni-
tions of stability, but we will regard stability as the system’s quality wherein
the output to any bounded input is bounded, and the linear system has a ten-
dency to remain close to its equilibrium point after a small, arbitrary initial
deviation from it. From the expression of the system’s state, Eq. (14.15), it
can be deduced that variation of the system’s state with time is given by terms
containing est.4 When an eigenvalue, sk, is repeated p times, its contribution
to the system’s state involves terms of the form tieskt, i = 0 . . . (p −1). Con-
sidering that an eigenvalue is generally complex, its imaginary part denotes
the frequency of oscillation of the characteristic vector about the equilibrium
point, and the real part signiﬁes the growth (or decay) of its amplitude with
time. We can now state the following criteria for the stability of a linear, time-
invariant system:
(a) If all eigenvalues have negative real parts, the linear system is sta-
ble about its equilibrium point. Such a system is called asymptotically sta-
ble. A system having an eigenvalue with zero real parts (and the remaining
eigenvalues with negative real parts) displays oscillatory behavior of a con-
stant amplitude and is said to be stable (but not asymptotically stable). If at
least one eigenvalue has a positive real part, its contribution to the system’s
state is an exponentially growing amplitude, and the system is said to be
unstable.
(b) If a multiple eignevalue of multiplicity p has a zero real part, its contribu-
tion to the system’s state has terms containing the factors ti, i = 0 . . . (p−1),
which signify an unbounded behavior with time. In such a case, the linear
system would be unstable about its equilibrium. Since complex eigenvalues
4 It is easily seen that a characteristic vector, x(t) = Xkeskt, satisﬁes the homoge-
neous state equation, where Xk is the eigenvector corresponding to the eigenvalue,
sk. The general solution, which must also satisfy the initial condition, x(0) = x0,
is a combination of all n characteristic vectors. The decomposition of a system’s
state into the characteristic vectors (or modes) is an alternative way of computing
the state-transition matrix [43].

14.3 Linear Systems
465
occur in conjugate pairs, a repeated eigenvalue with zero real part must also
have a zero imaginary part, i.e., s = 0.
The stability criteria can be applied to numerically determined eigenvalues
from the coeﬃcient matrix, A, or indirectly by inspection of the characteristic
polynomial (Routh–Hurwitz stability criteria [48]). Since we would normally
have a numerical procedure available to us via MATLAB, we can adopt the
direct evaluation of the eigenvalues. Much of linear systems theory is tra-
ditionally devoted to stability analysis by analytical and graphical methods
such as Root–Locus and Nyquist diagrams [43]. However, these classical meth-
ods, while imparting signiﬁcant insight into the system’s behavior, are largely
limited to single-input, single-output (SISO) systems.
14.3.3 Transfer Matrix and Second-Order Systems
When evaluating a linear, time-invariant SISO system’s response to an input,
subject to zero initial condition, the concept of a transfer function is a valuable
system representation. The transfer function, G(s), is deﬁned as the ratio of
the scalar output’s Laplace transform, Y (s), to that of the scalar input, U(s),
subject to a zero initial condition,
G(s) .= Y (s)
U(s) .
(14.20)
We shall extend the transfer function concept to a multivariable system by
deﬁning a transfer matrix, G(s), as follows:
Y(s) = G(s)U(s) ,
(14.21)
which is also derived from the system’s state equation with a zero initial
condition. In order to obtain the transfer matrix, we need an output equation
relating the system’s output vector, y(t), to the state and input vectors as
follows:
y(t) = Cx(t) + Du(t) ,
(14.22)
where C, D are constant-coeﬃcient matrices. If D = 0, there is no direct re-
lationship between the input and the output, and the system is said to be
strictly proper. By taking the Laplace transform of Eq. (14.22) and substitut-
ing Eq. (14.12) with x0 = 0, we have
Y(s) = [C(sI −A)−1B + D]U(s) ,
(14.23)
which yields the transfer matrix as
G(s) = [C(sI −A)−1B + D] .
(14.24)
From Eq. (14.24) it is clear that the characteristic polynomial is the common
denominator | sI −A | of the elements of G(s), which are rational functions in

466
14 Attitude Control Systems
the Laplace variable, s. For this reason, the characteristic roots (eigenvalues)
are also called the system’s poles.
Apart from the transfer function (or matrix), a linear, time-invariant sys-
tem is also represented by its outputs to some specialized inputs, subject to
zero initial condition. Examples of such inputs are the singularity functions
(unit step, impulse, and ramp functions), as well as the purely oscillatory
(sine or cosine) inputs. The system’s response to these inputs utilizes well-
established linear system theory and enables a convenient classiﬁcation of its
behavior [43]. For example, the response to a unit step function (called step,
or indicial response) is valuable in studying a stable linear control system’s
performance to a step change in the desired output. The time derivative of the
step response is the impulse response, whose Laplace transform for the SISO
system yields the transfer function. The time integral of the step response
is the ramp response, which is useful in such applications as tracking an ob-
ject moving with a constant speed. Apart from the singularity functions, some
smooth test functions are also applied as inputs for analyzing an unknown sys-
tem. The response to a simple harmonic input at a particular frequency (called
frequency-response) reveals important control system properties such as the
natural frequencies, and the behavior in the presence of high-frequency, un-
modeled disturbances (noise). For a detailed information about the responses
to special inputs, and their estimation using MATLAB/Simulink, please refer
to [43].
Most sensors, actuators, and some SISO plants can be represented as lin-
ear, time-invariant, second-order systems by the generic diﬀerential equation
m¨y(t) + c ˙y(t) + ky(t) = u(t) ,
(14.25)
where the constants m,c,k are referred to as inertia, damping, and stiﬀness
parameters, respectively. The transfer function of the second-order system can
be expressed as follows:
Y (s)
U(s) =
1
ms2 + cs + k ,
(14.26)
or in the traditional form,
Y (s)
U(s) =
1
m(s2 + 2ζωns + ω2n) ,
(14.27)
where ωn .=

k
m is called the natural frequency, and ζ .=
c
2mωn is the damping
ratio. It is clear that the stability of the second-order system depends upon
the roots of the characteristic equation s2+2ζωns+ω2
n = 0, which are written
as
s1,2 = −ζωn ± ωn

ζ−1 .
(14.28)
Applying the linear stability criteria, it is evident that the system is stable
for ζ ≥0, and unstable for ζ < 0. Furthermore, if 0 ≥ζ < 1, the eigenvalues

14.3 Linear Systems
467
are complex conjugates, and the unforced system’s initial response displays
an oscillatory behavior with time, while ζ > 1 is the case of real, negative
eigenvalues, representing a purely exponential behavior. Most second-order
control systems are designed with 0 ≥ζ < 1, since the overdamped case of
ζ ≥1 generally requires large control input magnitudes. The performance of
a stable second-order control system is often analyzed by its indicial response
[response to a unit step function, U(s) = 1
s, applied at t = 0, with zero initial
condition], given by
y(t) =
1
mω2n

1 −e−ζωnt
#
cos ωdt +
ζ

1 −ζ2 sin ωdt
$
(t > 0) ,
(14.29)
where ωd .= ωn

1 −ζ2 is the damped natural frequency of the system. Fig-
ure 14.2 plots mω2
ny(t) of Eq. (14.29) against the nondimensional time, ωnt
2π ,
for diﬀerent values of ζ in the stable range. It is clear that as ζ is increased,
the system takes a longer time to reach the desired value of unity for the ﬁrst
time, called the rise time. Another indicator of the speed of response is the
settling time, deﬁned as the time the amplitude takes to settle within ±2%
of the steady-state value. The settling time and rise time are nearly the same
in the nonoscillatory response of system with ζ ≥1. On the other hand, for
ζ < 1, the system does not stop at the desired output when it reaches it for
the ﬁrst time, but overshoots it (by larger and larger amount as ζ is reduced)
and crosses it repeatedly in an expectedly oscillatory response with a decaying
amplitude. The rise time, maximum overshoot, and settling time are impor-
tant performance parameters of the system’s indicial response. It is evident
in Fig. 14.2 that the increase in speed and decrease of maximum overshoot
are contradictory design requirements. A trade-oﬀbetween the two can be
obtained by selecting a value of ζ that is neither too large (causing a sluggish
response) nor too small (leading to a large overshoot). In most design appli-
cations, ζ =
1
√
2 = 0.707 (shown as a dotted line in Fig. 14.2) is considered
ideal in striking the best compromise between speed and maximum overshoot.
The concept of second-order system design and analysis can be extended to
higher-order systems, which have a dominant pair of complex-conjugate poles
near the imaginary axis.5 In such a case, the system can be approximated by
the dominant second-order system. This modeling approach is often valid in
even multivariable control systems. For this reason, the concept of a second-
order system is a valuable analysis tool, and terms such as “damping ratio”
and “natural frequency” are commonly applied to each pair of complex poles
in a large-order system.
5 Poles (eigenvalues) of a system that have the smallest real part magnitude dom-
inate a system’s transient response and are thus called dominant poles.

468
14 Attitude Control Systems
0
0.5
1
1.5
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
ωnt
2π
mω2
ny(t)
ζ = 0.2
0.4
0.7
1.0
1.2
Fig. 14.2. Indicial response of a second-order, SISO system.
14.4 Basic Closed-Loop Systems
We shall now discuss the common SISO control systems. In each case, the prin-
ciple can be extended to multivariable systems by considering additional feed-
back loops and feedforward paths. For simplicity, we shall only consider analog
control systems, keeping in mind that their modern applications commonly
involve implementation through digital electronic circuits [43]. The most com-
mon closed-loop control system is a switching relay [Fig. 14.3(a)] in which the
control input is provided by closing a switch whenever the plant’s output
falls below the desired output, and opening the same switch as soon as the
desired output is reached. Such nonlinear control systems are commonly em-
ployed for temperature control through a thermostat. However, in faster plant
dynamics (such as atmospheric ﬂight vehicles), switching systems have an un-
acceptable transient response. Also, the limitation of a unidirectional control
input is inadequate in an attitude control application. A modiﬁcation of the
on–oﬀswitching relay system is to have two identical actuators (instead of
only one) that apply equal but mutually opposite inputs, and a three-position
switch capable of choosing among positive, negative, or zero control inputs.
Such a control system (called bang-bang control), depicted in Fig. 14.3(b), is
capable of controlling the attitude of ﬂight vehicles. However, since the max-
imum possible control input magnitude is always applied, bang-bang control
is unsuitable in atmospheric ﬂight vehicles, wherein control surfaces are em-

14.4 Basic Closed-Loop Systems
469
Fig. 14.3. Switching control systems.

470
14 Attitude Control Systems
ployed to generate aerodynamic torques with speed-dependent magnitudes.
Hence, bang-bang control is normally utilized in vehicles equipped with rocket
thrusters (spacecraft and missiles), which always produce a constant, maxi-
mum thrust when ﬁred. In a closed-loop bang-bang control, the control input,
u, can be related to the error, e(t) = yd(t)−y(t), by the following control law:
u =
⎧
⎨
⎩
umax
if e > e2,
0
if e1 ≤e ≤e2,
−1
if e < e1,
(14.30)
where umax is the maximum control input magnitude. The control law of
Eq. (14.30) is nonlinear in nature, and produces a discontinuous input proﬁle
shown in Fig. 14.3(c). The dead zone, u = 0, can be either intentional, or
inadvertent through the inherent actuator dynamics in switching between
positive and negative inputs. If the dead zone is eliminated, the ideal bang-
bang control law is given by
u = umaxsgn(e),
(14.31)
where sgn(e) is the following signum function of the error, e:
sgn(e) =
⎧
⎨
⎩
1
if e > 0,
0
if e = 0,
−1
if e < 0.
(14.32)
As discussed in Chapter 13, the ideal open-loop, bang-bang control of
spacecraft attitude results in the fastest possible rotation with the given maxi-
mum torque, umax (time-optimal control). However, the main drawbacks of
bang-bang control are the excitation of unwanted dynamics (such as structural
vibrations and fuel sloshing) and high transient rates, due to the discontinuous
input proﬁle. These disadvantages can be alleviated by employing a smooth
input proﬁle. A large class of control systems utilizes such control laws, which
result in a linear transfer function between the error and the control input.
As pointed out earlier, a linear transfer function is much easier to analyze and
design when compared to a nonlinear control law, where the transfer function
concept breaks down. The simplest linear control law is proportional control,
u = Ke ,
(14.33)
where K is a positive constant, called the gain. With a suitable choice of gain,
an acceptable closed-loop performance may be obtained. However, this is not
always guaranteed, as the proportional feedback can amplify even small errors
(perhaps due to measurement noise), leading to a high sensitivity to distur-
bances. Thus, the proportional controller often acts analogous to a spring. In
order to damp out the oscillations caused by the proportional gain, either the
plant must possess satisfactory damping, or an artiﬁcial damping mechanism
must be provided by the controller. Therefore, a proportional-derivative (PD)
control,

14.4 Basic Closed-Loop Systems
471
u = KP e + KD ˙e ,
(14.34)
is often applied instead of proportional control, especially if the plant has
inadequate damping characteristics. A properly designed PD control possesses
a satisfactory transient behavior, but can cause a large steady-state error,
ess .= limt→∞e(t), in plants which do not have a suﬃcient number of poles
at the origin (s = 0) [43]. In such cases, it becomes imperative to add a
controller pole at the origin, which translates into an integral action in time.
The resulting control law is termed proportional-integral-derivative (PID) and
is given by
u = KP e + KD ˙e + KI

edt .
(14.35)
The gains, KP , KD, KI, are suitably chosen by a design process called PID
tuning in order to achieve a good transient response, a low sensitivity to
expected disturbances, as well as a zero steady-state error for given desired
output function, yd(t). Due to their excellent properties, PID controllers are
the most commonly used closed-loop devices, especially in SISO plants. A
block diagram of PID controller is shown in Fig. 14.4. In some ﬂight-control
Fig. 14.4. Block diagram of a proportional-integral-derivative (PID) control system.
applications, the classical PID control may not oﬀer the most eﬃcient choice
of feedback control, especially when multiple inputs and outputs are involved.
Since a generic ﬂight vehicle is a multivariable plant, a simultaneous minimiza-
tion of all transient errors is often required for an acceptable performance with
the smallest possible control input magnitudes. Such an approach is called
optimal control [43]. Derivation of an optimal control law for a multivariable
plant is feasible only through the state-space representation (rather than the
classical transfer-function approach). Without considering the optimization
problem to be solved, we shall conﬁne ourselves to the modeling of the opti-
mal control laws. The most general representation of a multivariable, linear
control law is as follows:
u = Kˆe + Kdxd ,
(14.36)
where ˆe is the estimated error,
ˆe = xd −ˆx ,
(14.37)
and K and Kd are the feedback and feedforward gain matrices, respectively.
In Eq. (14.37), ˆx is the estimated state, whose estimation (or observation) is

472
14 Attitude Control Systems
based upon the measured output, y. The process by which the state is esti-
mated is known as an observer, whose linear, asymptotically stable dynamics
can be represented by [43]
˙ˆx = (A −LC)ˆx + (B −LD)u + Ly ,
(14.38)
where L is the observer gain matrix.6 The linear control system design pro-
cedure consists of separately designing the linear controller [Eq. (14.36)] and
the linear observer [Eq. (14.38)], such that a satisfactory closed-loop perfor-
mance is achieved [43]. However, a linear observer can be designed for only
those plants, observable with respect to the measured output, while a lin-
ear feedback controller can succeed in only those plants that are controllable
with respect to the given control input. The properties of controllability and
observability are thus crucial in designing a control system [43] for a given
plant.
Upon substituting Eqs. (14.36)–(14.38) in the linear, time-invariant plant’s
state and output equations, we arrive at the following state equation for the
closed-loop dynamics:
 ˙x
˙ˆx

=
 A
−BK
LC (A −LC −BK)
  x
ˆx

+
 B(K −Kd)
B(K −Kd)

xd .
(14.39)
While the feedback and observer gain matrices are selected based upon an
asymptotically stable closed-loop response, the feedforward gain matrix, Kd,
must be chosen such that the estimated error ˆe does not depend upon the
desired state, xd. This requirement translates into the following condition to
be satisﬁed by the feedforward gain [43]:
(Ad −A + BKd)xd = 0 ,
(14.40)
where Ad is the coeﬃcient matrix for the linear, desired state dynamics,
˙xd = Adxd .
(14.41)
It may not always be possible to satisfy Eq. (14.41), which means that a given
plant can be made to track only some desired state dynamics with closed-loop
asymptotic stability [43].
We are now prepared to discuss some important ﬂight-control systems.
14.5 Implementation of Control System Elements
A classical PID SISO controller, and a linear, multivariable, observer-based
tracking system considered above, involve common mathematical operations,
6 The observer given by Eq. (14.38) is called a full-order observer, because it re-
constructs the entire state vector from the measured output. However, some state
variables can often be directly obtained from the output. Hence, a reduced-order
observer, which only estimates those state variables that cannot be directly mea-
sured, leads to a more eﬃcient model [43].

14.5 Implementation of Control System Elements
473
namely addition (or subtraction), multiplication, diﬀerentiation, and integra-
tion in time. These operations are performed upon the error and desired state
(or output) variables, in order to produce the control inputs. For practical
implementation, we must be able to construct such controllers through physi-
cal processes that mimic these common operations. This is the basis of analog
devices, which act as mechanical, electrical, or electromechanical analogs of el-
ementary mathematical operations.7 The principal analog devices employed in
ﬂight-control applications are gyroscopic sensors, accelerometers, mechanical,
hydraulic, or electromechanical actuators of aerodynamic control surfaces and
nozzle gimbals, rocket thrusters, and various electric networks for controller
elements (summing junction, gain ampliﬁers, integrators, etc.) representing
mathematical operations. Most linear actuators and mechanical sensors are
generally modeled as second-order systems with equivalent inertia, stiﬀness,
and viscous damping. Primary exceptions are the rocket thrusters employed
in reaction control systems (RCS) of spacecraft, which have a discontinuous,
piecewise-linear dependence upon the actuating signal.
Analog electrical networks representing controller elements can have pas-
sive elements (resistors, inductors, and capacitors), or active elements, such as
transformers and operational ampliﬁers. For example, the inexpensive lead-lag
passive network can provide an approximate form of PID control [43], while
an operational ampliﬁer can act as a gain, summing device, integrator, or even
a nonlinear limiter in more expensive, active networks. In the period 1945–
1970, analog network-based ﬂight controllers were in wide use until overtaken
by the more versatile and robust digital controllers. This was also the era
of the analog computers, which could occupy whole buildings and be pro-
hibitively expensive and cantankerous in performing tasks similar to those of
a modern pocket calculator.
The analog electrical networks have been largely replaced by equivalent
digital, integrated electronic circuits, which are easier to program and oﬀer
more accurate as well as robust operation. Similarly, the traditional mechan-
ical and hydraulic linkages between the controller and the actuators are re-
placed by electrical wires (ﬂy-by-wire) in modern atmospheric vehicles, since
electric motors are now the norm as actuating mechanisms. Furthermore, the
mechanical gyroscopes and accelerometers are now available in more compact
and rugged electronic replacements, such as ring-laser gyros and piezo-electric
accelerometers. We shall not attempt to model the electronic and electro-optic
dynamical features of the modern sensors, but assume that their suitable
transfer functions are known. It is more apt for our purposes to study the
7 Although the term analog devices originally referred to the physical equivalents
of mathematical processes, this term is now applied solely to describe systems
whose inputs and outputs are continuous functions of time. In contrast, a digital
device is a system that has discrete (or discontinuous) inputs and outputs in the
time domain.

474
14 Attitude Control Systems
modeling of mechanical gyroscopes, which continue to ﬁnd wide application
in aerospace vehicles due to their versatile and inexpensive nature.
14.5.1 Gyroscopic Sensors
The ﬁrst practical analog feedback device employed in a closed-loop ﬂight
control system was a gyroscope (also called gyro in short), wherein a spinning
rotor mounted on a restrained gimbal could act as either a multiplier (gain)
or an integrator of the error signal (an angular rate). For illustration, let us
consider a gyroscope used to sense a single-axis rotation of the ﬂight vehicle.
As depicted in Fig. 14.5, the single-degree-of-freedom gyroscopic sensor con-
sists of a rotor spun about the vehicle’s body axis ox relative to the gimbal at
a constant angular momentum, Hr, by the use of a servo-motor.8 The gimbal
axis, oy, can turn by a small angle relative to the ﬂight vehicle through a re-
straining mechanism. Finally, the ﬂight vehicle is assumed to rotate about the
body axis, oz, by an inertial angle, ψ. The gimbal axis is usually restrained
by a torsional spring of stiﬀness k, which generates a resisting torque pro-
portional to the small angular displacement, θ, of the gimbal relative to the
vehicle. Due to friction in the gimbal axis, some damping is invariably present,
which can be enhanced by the addition of a viscous damper. Hence, the net
viscous damping constant, c, is assumed to provide a resisting torque propor-
tional to the small gimbal rate, ˙θ. Since the angular speed of the rotor relative
to gimbal is constant, and the direction of its angular momentum, Hr, does
not change relative to the gimbal (due to a rigid construction), there is no
change in the rotor’s angular momentum relative to the gimbal. Thus, the
rate of change of Hr in the inertial space due to the combined rotation of the
vehicle and gimbal is expressed as (Chapter 13)
˙Hr = ωr × Hr = ( ˙θj + ˙ψk) × Hr(cos θi −sin θk)
= Hr[−˙θ(cos θk + sin θi) + ˙ψ cos θj] .
(14.42)
This change of angular momentum results in a torque about the gimbal axis,
oy, as well as small transverse torques about ox and oz. While the axial
torque causes gimbal rotation, the transverse torques are absorbed by the
rotor-gimbal bearing. Since both gimbal angle, θ, and gimbal rate, ˙θ, are kept
small by the restraining spring and damper, we can approximate Eq. (14.42)
by the linear relationship
˙Hr ≈Hr ˙ψj .
(14.43)
By Newton’s second law for rotational dynamics (Chapter 13), the rate of
change of the rotor’s angular momentum is equal to the net torque experienced
by the rotor, which, by Newton’s third law, is equal and opposite to the
8 A servo-motor is a feedback control system for maintaining a constant angular
speed through a tachometer (or an angle encoder) as a sensor and a direct-current
(DC) motor.

14.5 Implementation of Control System Elements
475
Z
c
z
o
x
Hr
Gimbal
R
Hr
y
k
Fig. 14.5. A single-degree-of-freedom rate gyroscope.
torque applied by the rotor on the gimbal. Therefore, the gimbal’s linearized
dynamical equation can be written as follows:
J ¨θ(t) + c ˙θ(t) + kθ(t) = −Hr ˙ψ(t) ,
(14.44)
where J is the moment of inertia of the gimbal and rotor assembly about the
axis oy. Equation (14.44) has the following equilibrium solution, θ(t) = θe, in
the steady state (t →∞), obtained by letting θ = ˙θ = 0:
θe = −Hr ˙ψ
k
,
(14.45)
which implies a gimbal angle proportional to the vehicle’s rotation rate. For
this reason, the gyroscope of Fig. 14.5 is called a rate gyro, as it can be cali-
brated to measure a vehicle’s steady rate about the input axis. Two (or more)
rate gyros mounted on mutually perpendicular body axis can provide infor-
mation about a vehicle rotating steadily about multiple body axes. A sudden
change in the vehicle’s rate, however, will take some time to be registered as
the equilibrium gimbal angle output. The time taken to reach the steady state
for a given change in the vehicle’s rate depends upon the damping constant, c,
as well as the moment of inertia, J, while the equilibrium value of the gimbal
angle, Eq. (14.45), depends only upon the ratio of the rotor’s angular momen-
tum, Hr with the spring stiﬀness, k. By adjusting this latter ratio, the rate

476
14 Attitude Control Systems
gyro can be made more (or less) sensitive to the vehicle’s rate. On the other
hand, by adjusting the damping constant, the gyro dynamics can be speeded
up, or slowed down, making it respond quickly (or slowly) to a change in the
vehicle’s rate.
Taking the Laplace transform of Eq. (14.44) with zero initial conditions
[θ(0) = ˙θ(0) = 0 and ψ(0) = ˙ψ = 0], we have the following transfer function
for the rate gyro, relating the Laplace transforms of the gimbal angle (output),
Θ(s), and the vehicle’s inertial rotation (input), Ψ(s):
Θ(s)
Ψ(s) = −
Hrs
Js2 + cs + k .
(14.46)
Fig. 14.6. Simulink block diagram for the step, impulse, and ramp response of a
rate gyroscope.
Example 14.1. Consider the MIT [46] rate gyro with the following character-
istics: Hr = 104 g −cm2/s, J = 34 g −cm2, k = 3.03 × 105 g −cm2/s2, and
c = 5000 g −cm2/s. Evaluate the gimbal angle response for
(a) an impulsive angular displacement of the vehicle by 0.1 rad.
(b) a step change in the vehicle’s angular orientation by 0.1 rad.
(c) a step change in the vehicle’s angular rate by 0.1 rad/s.

14.5 Implementation of Control System Elements
477
Fig. 14.7. Step, impulse, and ramp gimbal angle response of a rate gyroscope.
The ﬁnal value theorem of the Laplace transform [4] applied to Eq. (14.46)
leads to the following steady-state value of the equilibrium gimbal angle to a
change in the vehicle’s angular orientation:
θe = lim
s→0 sΘ(s) = lim
s→0 −Hrs2Ψ(s)
Js2 + cs + k .
Clearly, the rate gyro would not respond to either an impulsive or a step
change in the angular displacement of the vehicle [Ψ(s) = 0.1, or Ψ(s) = 0.1
s ],
leading to θe = 0 in both (a) and (b). However, in case (c), the step change
in ˙ψ [Ψ(s) = 0.1
s2 ] leads to
θe = −(0.1)(104)
3.03 × 105 = −0.0033 rad (−0.1891◦) .
This steady-state output is the same as the one resulting from a constant
vehicle rate of 0.1 rad/s in Eq. (14.45). The response to a step change in the
angular rate is the same as the response to a ramp input of the given slope in
the angular displacement.
The time history of the gimbal angle in the three cases is calculated by the
linear Simulink block diagram shown in Fig. 14.6, whose outputs are plotted
in Fig. 14.7. Our expectations for the step, impulse, and ramp responses are
borne out in this simulation, which is performed with a relative tolerance of
10−3 with a variable-step Runge–Kutta solver of the fourth order.

478
14 Attitude Control Systems
If the restraining spring is removed from the rate gyro, the transfer function
of the resulting mechanism (called rate-integrating—or displacement—gyro)
becomes
Θ(s)
Ψ(s) = −
Hr
Js + c .
(14.47)
It is clear that the rate-integrating gyro is capable of measuring the vehicle’s
angular displacement, ψ, by a proportional, steady-state, equilibrium gimbal
angle, θe,
θe = −Hrψ
c
.
(14.48)
Clearly, the rate-integrating gyro can be made more (or less) sensitive to the
vehicle’s displacement angle by adjusting the viscous damping constant, c.
The ﬁrst-order transfer function of the rate-integrating gyro implies an expo-
nentially varying gimbal angle output for an indicial change in the vehicle’s
attitude,
θ(t) = −Hr
c
2
1 −e−c
J t3
.
(14.49)
The time lag with which the gyro can track a changing vehicle attitude is thus
given by the time constant, T = J
c . By increasing c, the speed of response is
increased, but the sensitivity is reduced [Eq. (14.48)]. Hence, a balance must
be struck between the speed and sensitivity of a rate-integrating gyro.
The integral action provided by the rate-integrating gyro is a valuable fea-
ture in reducing the steady-state error in a closed-loop system and enables
PID controller implementation. A combination of rate and rate-integrating
gyroscopes can handle most practical attitude control tasks. The Sperry au-
topilot of 1909 was based on such a combination and was tasked principally
with maintaining a wings’-level (unbanked) attitude during cruise of the early
aircraft. Its utility was demonstrated in the long-distance ﬂights by many
aviation pioneers, often in bad weather, or at night (such as the solo, transat-
lantic ﬂight undertaken by Lindbergh in 1927). In the 1930s and 1940s, the
gyroscopic ﬂight-control systems advanced to such applications as unmanned
aerial vehicles (V-1 “ﬂying bomb”) and ballistic missiles (V-2 rocket), and
have continued to be useful in the present age in the form of inertial navigation
systems for airliners, long-range missiles, and spacecraft. When gyroscopes
are used as analog devices, their output is an angular rate (or displacement),
which can be converted into an electrical signal by a tachometer (or an angle
encoder). The resulting current can be ampliﬁed and used to drive an electric
motor, which, in turn, generates a torque for the movement of a control sur-
face (or a rocket nozzle). Therefore, a gyroscope can act as both a sensor and
a controller in attitude-control applications. Alternatively, the sensed electri-
cal signal from a gyroscope (or another analog sensor) can be processed by
special electrical networks that act as analog controllers.

14.6 Single-Axis, Closed-Loop Attitude Control
479
14.6 Single-Axis, Closed-Loop Attitude Control
The most common application of a ﬂight-control system is in single-axis rota-
tion of the vehicle, which is modeled as an SISO closed-loop system. Examples
include spacecraft, which are not spin-stabilized, and roll control of aircraft
and missiles. Even when a multi-axis spacecraft rotation is required, it is fre-
quently performed through a sequence of single-axis rotations, with the use
of strategically located sensors and actuators about each principal axis. We
shall now consider examples of single-axis attitude control.
14.6.1 Control of Single-Axis Spacecraft Maneuvers
Rigid spacecraft rotating about a single principal axis are represented by
the following second-order transfer function relating the angular displacement
output, Ψ(s), and input torque, M(s):
Ψ(s)
M(s) =
1
Js2 ,
(14.50)
where J is the moment of inertia about the concerned axis. Since the transfer
function has a double pole at s = 0, the spacecraft is unstable when the output
is the angular displacement, ψ(t). However, the transfer function between the
angular rate, ˙ψ(t), and the input torque has a single pole at s = 0, indicating
a stable plant in terms of angular rate. In Chapter 13, we saw how an open-
loop control of rigid, nonspinning spacecraft’s single-axis rotations can be
performed using a well-designed sequence of impulses provided by a pair of
rocket thrusters. Our interest here is in doing the same with the use of closed-
loop control. There are two kinds of spacecraft maneuvers: (a) spin maneuver
and (b) rest-to-rest slew. In a spin maneuver, the objective is to achieve a
given angular velocity in the steady state, while the rest-to-rest slew refers to
bringing the spacecraft to a desired rest attitude from another rest attitude.
Clearly, the spin maneuver can be easily controlled using a rate gyro and a
pair of attitude thrusters in a closed loop. It is more interesting to consider
control of a single-axis angular displacement. From our previous remarks and
Example 14.1, it is clear that controlling angular displacement requires a rate-
integrating gyro (rather than a rate gyro).
We will consider RCS simulation examples with Simulink block diagrams.
The plant and gyro sensors can be modeled using the continuous-system
Simulink blocks with appropriate transfer functions [49]. The modeling of the
controller and actuator dynamics comprising attitude thrusters and a switch-
ing control law is through the nonlinear relationship of Eq. (14.30), which can
be easily incorporated in a Simulink model by the sum, dead zone, sign, and
constant gain blocks [49]. In addition, a random disturbance input, arising out
of solar radiation and gravity gradient torques, can be added by using a white-
noise [43] Simulink block generating normally distributed random numbers
with a speciﬁed intensity, in order to make the model more realistic.

480
14 Attitude Control Systems
Fig. 14.8. Simulink block diagram for step response of spacecraft control system
with rate-integrating gyro.
Fig. 14.9. Step response of spacecraft control system with rate-integrating gyro for
various dead zones.

14.6 Single-Axis, Closed-Loop Attitude Control
481
Example 14.2. Consider the control of a spacecraft displacement about a prin-
cipal axis with moment of inertia, J = 1000 kg–m2, using a pair of attitude
thrusters that can exert constant torque of 2 N–m about the concerned axis.
A rate-integrating gyro with properties given in Problem 14.1 is used as a
feedback sensor. It is required to track a step angular displacement of the
spacecraft by 0.1 rad. The dead zone of the controller/actuator combination
can be ﬁxed at speciﬁc values of angle error, e2 = −e1, called the deadband,
in reference to Eq. (14.30). We shall explore the following deadbands:
(a) e2 = −e1 = 0.05 rad.
(b) e2 = −e1 = 0.1 rad.
(c) e2 = −e1 = 0.2 rad.
The Simulink block diagram encoded for the required simulation is shown
in Fig. 14.8, and the simulated spacecraft angular response for each of the
three values of the dead zone is plotted in Fig. 14.9. A white-noise torque
disturbance of intensity (power spectral density [43]) 0.01 N.m is speciﬁed in
the simulation with the band-limited white-noise Simulink block. This leads
to a disturbing torque amplitude of 4 N.m. The simulation is performed for
300 s using the variable-step ode45 Runge–Kutta algorithm with a relative
tolerance of 10−3. It is clear that the deadband of ±0.05 rad produces a
rapidly oscillating response (40 s wavelength and 0.1 rad. amplitude) about
the desired steady state of ψe = 0.1 rad, while the larger error deadbands
yield a much slower and irregular spacecraft rotation with time. In none of
the cases is the desired angular displacement achieved, which indicates that
the rate-integrating gyro by itself is inadequate in meeting the attitude control
requirement.
The push-pull nature of the discontinuous switching actuator torque can
excite large spacecraft oscillations for small deadband values if the control
is based only on angular displacement. For larger deadbands, the sensitivity
of control input to varying displacement error is reduced, thereby lessening
the frequency of oscillation, but produces an irregular angle response with
large deviations. Hence, pure angular position feedback is unacceptable. The
plant transfer function is quite capable of converging to a zero steady-state
error for a step change in displacement (due to its double pole at s = 0 [43]),
provided a damping mechanism (which is absent in the closed-loop system
with a rate-integrating gyro). Hence, the PD control, possible by combining
the feedbacks through a rate-integrating gyro and a rate gyro, can achieve an
acceptable closed-loop performance.
Example 14.3. Repeat the simulation of Example 14.2 by adding the rate gyro
of Example 14.1 in parallel feedback with the rate-integrating gyro. The dead
zone is almost entirely eliminated with the actuator deadband of ±0.001 rad.
The output of the rate gyro is multiplied by a scaling gain, KD, such that the
desired level of closed-loop damping is achieved. Try the following values of
KD:

482
14 Attitude Control Systems
Fig. 14.10. Simulink block diagram for step response of spacecraft RCS with rate
and rate-integrating gyros.
0
20
40
60
80
100
0
0.02
0.04
0.06
0.08
0.1
0.12
0.14
0.16
0.18
0.2
Time (s)
Ψ (rad.)
KD = 30.3
KD = 10
KD = 50
Fig. 14.11. Step response of spacecraft RCS with rate and rate-integrating gyros
for various rate gyro gains.

14.6 Single-Axis, Closed-Loop Attitude Control
483
(a) KD = 10.
(b) KD = 30.3.
(c) KD = 50.
The Simulink block diagram for the modiﬁed RCS is shown in Fig. 14.10,
and the simulated spacecraft angular response for each of the three values
of the rate gyro gain is plotted in Fig. 14.11. It is evident that the use of
a rate gyro enables the desired angle of 0.1 rad to be achieved quickly and
without too many oscillations, in a manner quite similar to a linear, second-
order system (even though the RCS is a nonlinear system). The maximum
overshoot and settling time are modiﬁed by changing the rate gyro gain,
KD, whose increase causes an increase in the “damping.” Thus, while KD =
10 leads to the smallest overshoot and the largest settling time, KD = 50
brings the system to the desired state in the smallest time, but with a larger
maximum overshoot. A compromise between the conﬂicting requirements can
be achieved by adopting KD = 30.3.
Fig. 14.12. Simulink block diagram for step response of roll autopilot for a ﬁghter
airplane with a rate-integrating gyro.

484
14 Attitude Control Systems
0
10
20
30
40
50
−5
0
5
Time (s)
δa (deg.)
0
10
20
30
40
50
0
10
20
30
Φ (deg.)
Fig. 14.13. Step response of ﬁghter airplane with a rate-integrating gyro-based roll
autopilot.
14.6.2 Roll Control of Aircraft and Missiles
Let us consider the control of the single-degree-of-freedom rolling mode of
aircraft and aerodynamically controlled missiles. Such a mode arises from the
de-coupling of roll from the pitch and yaw in a linear approximation of the
vehicle’s rotational dynamics (Chapter 13) and is represented by the following
transfer function between the bank angle, Φ(s), and the aileron deﬂection
angle, δa:
Φ(s)
δa(s) =
Clδa
s( J
qSbs −
b
2vClp) ,
(14.51)
where J is the moment of inertia about the roll axis, Clp is the stability
derivative representing damping in roll, and Clδa is the stability derivative
representing the rolling moment due to aileron deﬂection angle. This plant
has a ﬁrst-order time constant, T = −
2vJ
qSb2Clp , in addition to a pole at s = 0.
The aileron actuator can be assumed to be a linear, second-order transfer
function with nonlinear saturation limits, | δa |≤δmax. Since the plant has a
pole at origin, it can produce a desired step change in bank angle in a closed-
loop, proportional feedback control system, such as the one approximately
provided by a rate-integrating gyro.

14.6 Single-Axis, Closed-Loop Attitude Control
485
Example 14.4. Consider a ﬁghter airplane with wing span, b = 14 m, planform
area, S = 56.5 m2, moment of inertia about roll axis, J = 34, 700 kg–m2,
ﬂying straight and level at constant speed, v = 236.2 m/s at standard altitude
12.195 km where the dynamic pressure is q = 8439.4 N/m2, Clp = −0.27/rad,
and Clδa = 0.045/rad. The airplane is equipped with an aileron actuator with
the following ﬁrst-order transfer function between the commanded aileron
deﬂection angle, δac(s), and the actual aileron deﬂection angle, δa:
δa(s)
δac(s) =
20
s + 20 .
Structural limitations restrict the maximum aileron deﬂection at the given
speed to | δa |≤10◦. A roll autopilot is designed with the rate-integrating gyro
of Problem 14.1 as the feedback device. Simulate the closed-loop response to
a desired step change in bank angle by 20◦in the presence of white-noise
disturbance of amplitude 0.04 N–m caused by atmospheric turbulence and
structural ﬂexibility.
The simulation is carried out by the Simulink block diagram shown in
Fig. 14.12, and the simulated aircraft response, φ(t), δa(t), is plotted in
Fig. 14.13. It is seen that the autopilot successfully attains the desired bank
angle, within the accuracy of ±0.4◦. This accuracy can be improved by em-
ploying a ﬁlter (a linear system with suitable high-frequency response) for the
disturbance input [43]. However, another simple method of reducing sensitiv-
ity of a bank angle to rolling moment disturbance is to employ a rate gyro in
parallel feedback with the rate-integrating gyro, as seen in the next example.
Example 14.5. Let us simulate the modiﬁed roll autopilot for the ﬁghter of
Example 14.4 by adding the rate gyro of Example 14.1 with scaling gain
KD = 30.3 in the feedback loop. The modiﬁed Simulink block diagram is
shown in Fig. 14.14, with the simulated bank and aileron angle responses
plotted in Fig. 14.15. Note the dramatic improvement in both transient and
steady-state bank angle response, which has no overshoot or oscillation, and an
accuracy of about ±0.1◦in achieving the desired angle. However, the aileron
angle is seen to oscillate more rapidly (albeit with a small amplitude) in
response to the disturbance input. Such an autopilot is ideally suited in those
applications where the ﬂight vehicle must provide a stable platform for aiming
and ﬁring weapons. Obviously, the aileron in such a control system will always
be active for absorbing the rolling moment disturbances.
As seen in Examples 14.3 and 14.5, a stable platform can be provided
using a rate gyro coupled in parallel feedback with a rate-integrating gyro.
This is the basis of an inertially stabilized platform about multiple axes using
a pair of rate and rate-integrating gyros about each axis, and forms the core of
an inertial navigation system (INS) employed in long-range aircraft, missiles,
and spacecraft.

486
14 Attitude Control Systems
Fig. 14.14. Simulink block diagram for step response of roll autopilot with rate
and rate-integrating gyros.
14.7 Multi-Axis Closed-Loop Attitude Control
Most ﬂight-control applications involve multi-axis rotation, as indicated in
Chapter 13. The design and analysis of multivariable control systems require a
state-space vector-matrix representation of subsystems and often incorporate
the linear, time-invariant approximation. We will consider the modeling and
simulation examples of some interesting multivariable ﬂight-control systems,
and leave it to the reader to extend the methods to other similar applications.
14.7.1 Attitude Stabilization of a Launch Vehicle
As pointed out earlier, all launch vehicles and ballistic missiles are inherently
unstable and require an attitude stabilization system for successful operation.
At lift-oﬀ, a launch vehicle is moving too slowly for aerodynamic stabilization
through ﬁns. A similar situation prevails once the vehicle leaves the sensible
atmosphere above an altitude of about 100 km. The use of multi-axis rate
gyroscopes to sense and feed back the vehicle’s departure from the desired
equilibrium is a traditional method of attitude stabilization, which was ﬁrst
operationally incorporated in the German V-2 rocket during World War II.
In this vehicle, a simple clockwork mechanism was employed in conjunction
with gyroscopic sensors and movable exhaust vanes to navigate toward a ﬁxed

14.7 Multi-Axis Closed-Loop Attitude Control
487
0
10
20
30
40
50
0
5
10
15
20
Φ (deg.)
0
10
20
30
40
50
−2
0
2
4
6
Time (s)
δa (deg.)
Fig. 14.15. Step response of ﬁghter airplane with rate and rate-integrating gyro-
based roll autopilot.
burn-out point. The guidance techniques have since evolved into more accu-
rate techniques, and the necessity of maintaining the vehicle in a precisely
controlled attitude has become even more stringent.
Apart from the rate gyro, an accurate sensor of the vehicle’s rotational
motion is an accelerometer, which converts the acceleration sensed normal
to a particular axis into electrical voltage. Since acceleration involves the
time derivative of a rotational rate, it provides a more sensitive measure of
departure from the desired attitude than a rate gyro. The use of multiple
accelerometers is also valuable in sensing structural vibration. Consider a
single-axis accelerometer calibrated to measure normal acceleration along oz
and mounted at distance x from the center of mass, o, normal to the axis of
rotation, oy. The normal acceleration measured by the accelerometer is due
to the combined eﬀects of pitching and z-translation and can be expressed as
az = −x ˙Q + v ˙α .
(14.52)
Since a normal acceleration measurement provides information about a linear
and a rotational acceleration, an observer based upon such an output can be
used to estimate the concerned state variables. For this reason, and due to
their smaller size and cost, accelerometers are replacing rate gyros as primary
motion sensors.

488
14 Attitude Control Systems
Example 14.6. Let us simulate the attitude stabilization system for the Van-
guard ballistic missile discussed in Chapter 13. The model parameters for this
vehicle are provided by Blakelock [46], and extended here in a multivariable
control system. A state-space model for the vehicle was constructed in Chap-
ter 13, based on state variables Q, R, θ, ψ, α, β. We will select the pitch and
yaw rates, Q,R, as well as the normal acceleration, ay, az, measured at loca-
tion x = 5 m from the center of mass, as the four output variables on which
the attitude stabilization system is based. A linear, time-invariant state-space
model of the nonrolling missile 75 s after launch is given by
A =
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎝
−0.0675
0
0
0
2.3694
0
0
−0.0675
0
0
0
−2.3694
1
0
0
0
0
0
0
2.7285
0
0
0
0
1
0
−0.02326
0
−0.03527
0
0
−1
0
0.02326
0
−0.03527
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎠
,
B =
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎝
7.0084
0
0
−7.0084
0
0
0
0
0.05217
0
0
0.05217
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎠
,
C =
⎛
⎜
⎜
⎝
1
0
0
0
0
0
0
1
0
0
0
0
392.3374
0
−9.1181
0
−11.8469
0
0
−392.3374
0
9.1181
0
−11.8469
⎞
⎟
⎟
⎠,
and
D =
⎛
⎜
⎜
⎝
0
0
0
0
20.4512
0
0
20.4512
⎞
⎟
⎟
⎠.
The unstable plant has the following eigenvalues of A:
s1 = 1.4758,
s2 = −1.6019,
s3 = 0.0233,
s4 = −1.6206,
s5 = 1.4540,
s6 = 0.0638.
Using the methods of linear optimal control [43], a feedback gain matrix,
K, and a full-order observer gain matrix, L, have been obtained in order to
stabilize the plant, and are given as follows:

14.7 Multi-Axis Closed-Loop Attitude Control
489
K =
 0.42438
0
0.20235
0
0.46026
0
0
−0.43085
0
−0.13572
0
0.3087

,
L =
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎝
93.39015
0
−0.11292
0
0
118.76447
0
0.17771
27.24025
0
−0.06689
0
0
74.18608
0
0.18239
26.5547
0
−0.06421
0
0
−26.86064
0
−0.06507
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎠
.
The closed-loop system, constructed according to Eq. (14.39), with xd = 0,
has the following eigenvalues:
s1 = −1.4758,
s2 = −1.6019,
s3 = −0.0233,
s4 = −1.6206,
s5 = −1.4540,
s6 = −0.0638,
s7 = −49.1483,
s8 = −49.1068,
s9 = −1.4037,
s10 = −2.4586,
s11 = −0.0099,
s12 = −0.01541.
Clearly, the closed-loop system is asymptotically stable, with the dominant
poles being s3, s6, s11, s12.
In order to build a realistic model, we assume the following second-order
transfer function for the two gimbal actuators (called servos) [46]:
Gservo =
2750
s2 + 84s + 2750 .
(14.53)
This transfer function relates the commanded and actual values of the gim-
bal angles, ϵ, μ. It is further assumed that the gimbal angles are limited
to ±0.1 rad. In addition, the pitch and yaw rate feedback channels are as-
sumed to carry a white noise of nominal amplitude 3 × 10−5 rad/s, which is
later increased to an oﬀ-nominal value of 10−3 rad/s representing especially
noisy (bad) gyros. A simulation of response to an initial ﬂow disturbance,
α(0) = β(0) = 0.01 rad, is carried out by the Simulink block diagram shown in
Fig. 14.16, using the variable step ode23s stiﬀequations Runge–Kutta solver.9
The simulated response, Q(t), R(t), az(t), ay(t), ϵ(t), μ(t), for the nominal and
oﬀ-nominal cases is plotted in Figs. 14.17 and 14.18, respectively.
9 A set of ﬁrst-order, ordinary diﬀerential equations with very diﬀerent time scales
is said to be stiﬀ, as it requires a special algorithm for an eﬃcient solution.

490
14 Attitude Control Systems
Fig. 14.16. Simulink block diagram for initial response of Vanguard missile stabi-
lization system.
0
2
4
6
8
10
−0.5
0
0.5
(deg./s)
0
2
4
6
8
10
−4
−2
0
2
(m/s2)
0
2
4
6
8
10
−0.4
−0.2
0
Time (s)
(deg.)
μ
ϵ
az
ay
Q
R
Fig. 14.17. Nominal initial response of Vanguard missile stabilization system to
ﬂow disturbance.

14.7 Multi-Axis Closed-Loop Attitude Control
491
0
2
4
6
8
10
−0.5
0
0.5
(deg./s)
0
2
4
6
8
10
−4
−2
0
2
(m/s2)
0
2
4
6
8
10
−0.4
−0.2
0
0.2
0.4
Time (s)
(deg.)
ϵ
μ
az
ay
R
Q
Fig. 14.18. Oﬀ-nominal (noisy gyro) initial response of Vanguard missile stabiliza-
tion system to ﬂow disturbance.
It is clear that the response in both the cases remains below 0.3◦/s in rate
and 2.5 m/s2 in normal acceleration, while the gimbal angles do not exceed
0.5◦magnitude. Although there is a distinct deterioration in the response due
to increased measurement noise in the rate channels, the control system is
seen to be eﬀective in maintaining equilibrium. The simulation is carried out
for 10 s as a longer time would involve changes in the model parameters due
to the time-varying nature of the actual plant. A practical method of control
system implementation is to vary the gain matrices with the time of ﬂight in a
scheduled manner, while employing a time-invariant plant model for obtaining
the gains at a given time. This approach is referred to as gain scheduling and
is commonly employed in high-performance aircraft and missiles.
14.7.2 Reaction Wheel and Magnetic Denutation of Gravity
Gradient Spacecraft
Satellites in low- to medium-altitude orbits encounter an appreciable gravity
gradient torque—as discussed and modeled in Chapter 13—the presence of
which may not always be stabilizing. Therefore, an attitude control system
is required for keeping the vehicle pointed in the desired direction, despite
environmental torque disturbances. Since the use of RCS thrusters for atti-
tude stabilization is expensive and reduces satellite life, reaction wheels and

492
14 Attitude Control Systems
magnetic coils are commonly employed as actuators for attitude stabilization.
The reaction wheels are especially valuable as they can provide appreciable
damping due to gyroscopic eﬀects and can simultaneously act as motion sen-
sors.
The spacecraft considered here must maintain a principal axis, oz, pointed
toward the planet’s center, and another axis, ox, along the velocity vector.
Thus, a constant pitch rate equal to the orbital period, n, is required in the
near-circular orbit. The spacecraft is equipped with momentum wheels that
generate an angular momentum h = (hx, hy, hz)T relative to the spacecraft.
As seen in Chapter 13, we can model the small-disturbance attitude motion
of the gravity gradient spacecraft in terms of the (ψ)3, (θ)2, (φ)1 Euler angles
and the associated roll, pitch, and yaw rates, P,Q,R, by the following linear,
time-invariant state equations:
˙P = hy + (Jxx −Jyy + Jzz)n
Jxx
R −4n2(Jyy −Jzz) −hyn
Jxx
φ + hzn −˙hx
Jxx
+ Mx
Jxx
,
(14.54)
˙Q = −3n2(Jxx −Jzz)
Jyy
θ −
˙hy
Jyy
+ My
Jyy
,
(14.55)
˙R = −hy + (Jxx −Jyy + Jzz)n
Jzz
P −n2(Jyy −Jxx) −hyn
Jzz
ψ−hxn + ˙hz
Jzz
+ Mz
Jzz
,
(14.56)
˙φ = P,
˙θ = Q,
(14.57)
˙ψ = R .
Here, the external torque, M = (Mx, My, Mz)T , is the sum of external con-
trol torques supplied by RCS thrusters and magnetic torquers, as well as
torques due to environmental disturbances such as solar radiation pressure
and atmospheric drag. In our analysis, we will assume the disturbances to be
modeled by a white noise of suitable intensity.
It is clear from the state equation that the small-disturbance pitch motion
is uncoupled from the roll-yaw motion. The roll-yaw coupling is provided by
the bias angular momentum component, hy, as well as the orbital rate, n.
Two distinct control systems are commonly utilized, namely those utilizing
magnetic torquers and reaction wheels, respectively.
Example 14.7. Consider the Seasat earth-referenced satellite [2] with roll-yaw
reaction wheels, and the following control law:
˙hx = Kφφ + KP P + nhz,
˙hz = −Kyφ −nhx,

14.7 Multi-Axis Closed-Loop Attitude Control
493
where Kφ, KP , Ky are constant gains to be determined by design. The feed-
back is based on the roll error signal measured by a horizon scanner. The
roll control law has proportional and derivative terms, while yaw control has
cross-coupling with roll. The importance of suppressing roll-yaw oscillations
is thus the primary objective. The additional terms depending on orbital fre-
quency cancel like terms in the state equations, and the spacecraft is made
gravity gradient stable in pitch by having Jxx > Jzz. A wheel about the pitch
axis acts as a gyro with a constant angular speed that provides a momentum
bias, hy, for strengthening roll-yaw coupling. This increases the controllability
of the plant in roll-yaw motion. The spacecraft is axisymmetric about oz and
has the following parameters:
e = 0,
i = 108◦,
Jxx = Jyy = 25, 100 kg.m2,
Jzz = 3000 kg.m2,
n = 0.00105 rad/s,
hy = −24.4 N.m.s.
A control system design [2] reveals the following suitable gain values:
Kφ = 0.39 N.m,
KP = 116 N.m.s,
Ky = 0.08 N.m.
We will simulate the response of the control system to a white-noise distur-
bance of amplitude 0.005 N.m in the roll-yaw torque components, which can
be taken to be due to the combined eﬀects of solar radiation, fuel sloshing, and
structural vibration. The state-space coeﬃcient matrices of the model based
on the state vector, x = (P, Q, R, φ, θ, ψ)T , are given as follows:
A =
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎝
0
0 −0.0008466 −4.9 × 10−6
0
0
0
0
0
0
−2.91 × 10−6
0
0.0070833 0
0
0
0
−8.54 × 10−6
1
0
0
0
0
0
0
1
0
0
0
0
0
0
1
0
0
0
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎠
,
B =
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎝
3.98406 × 10−5
0
0
0
0
0.0003333
0
0
0
0
0
0
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎠
.

494
14 Attitude Control Systems
Fig. 14.19. Simulink block diagram for initial response of reaction wheel stabiliza-
tion system for Seasat spacecraft.
Fig. 14.20. Initial response of reaction wheel stabilization system for Seasat space-
craft.

14.7 Multi-Axis Closed-Loop Attitude Control
495
The two control inputs are the torque components generated by the roll and
yaw reaction wheels,
u = (hzn −˙hx)i −(hxn + ˙hz)k ,
and are given by the linear control law, u −Kx, where
K =
 116 0 0
0.39
0 0
0
0 0 −0.08 0 0

.
The Simulink block diagram for simulating the response for one orbital period
to an initial angle error of θ = 0.002, φ = 0.01 rad in the presence of the given
white-noise disturbance is shown in Fig. 14.19 and the resulting state-variable
time history is plotted in Fig. 14.20. It is clear that while the pitch response
is simple harmonic due to gravity gradient stabilization, the reaction wheels
successfully damp out the initial roll error and absorb the disturbing torques
with a steady-state accuracy of ±0.1◦in roll and yaw angles. If the pitch wheel
gyro is converted into a reaction wheel and a pitch angle sensor is added to
the spacecraft, the single-degree-of-freedom pitch oscillation can be damped
out in the same manner as roll-yaw dynamics.
Example 14.8. Consider the magnetic torque stabilization of the GEOS-3
satellite in a near-polar, circular earth orbit of period 100 min. The axi-
symmetric (Jxx = Jyy) spacecraft is equipped with a pitch reaction wheel
for roll-yaw momentum biasing, an extensible boom with end mass for large
gravity gradient torque, and a magnetic eddy current damper10 that generates
the following control torque [2]:
M = kDB × ˙B ,
(14.58)
where kD is the damping constant and B is the strength of the earth’s mag-
netic ﬁeld, B0, transformed to the body frame by
B = CB0 ,
(14.59)
C being the rotation matrix between the geocentric and the body-ﬁxed frames
(Chapter 13), approximated for small 3-2-1 Euler angle deﬂections, φ, θ, ψ by
C ≈
⎛
⎝
1
ψ
−θ
−ψ
1
φ
θ
−φ
1
⎞
⎠.
(14.60)
10 A magnetic eddy current damper consists of a conductor plate moving between
the poles of an electromagnet and provides a damping force proportional to the
relative velocity between the plate and the magnet. The magnet is mounted on
a ﬂoating platform, such that it can align itself instantaneously with the planet’s
magnetic ﬁeld. For details, please refer to [50].

496
14 Attitude Control Systems
The geomagnetic ﬁeld in a geocentric frame for a spacecraft in a polar orbit
is given in Teslas by
B0 = 7.96 × 106
r3
⎧
⎨
⎩
cos δ
0
sin δ
⎫
⎬
⎭,
(14.61)
where r is the radial distance of the spacecraft in kilometers, and δ is the lati-
tude, which varies in a circular, polar orbit as ˙δ = n. Substituting Eqs. (14.59)–
(14.61) into Eq. (14.58), we have
M = −kDe ,
(14.62)
where the error e is given by
e =
⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎩
4P sin2 δ −R sin 2δ + 2nψ
cos2 δ + 4 sin2 δ
Q +
2n
cos2 δ + 4 sin2 δ
−P sin 2δ + R cos2 δ −2nφ
cos2 δ + 4 sin2 δ
⎫
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎬
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎭
.
(14.63)
We can employ the spacecraft dynamic equations, Eqs. (14.54)–(14.57) with
hx = hz = 0 and the above-derived magnetic control torque for modeling a
general spacecraft in a polar, circular orbit. Due to the dependence of the
control torque on latitude, the controller is essentially a linear, time-varying
system. For the GEOS-3 satellite, the parameters are given in [2] as follows:
e = 0.0054,
i = 115◦,
Jxx = Jyy = 2157 kg.m2,
Jzz = 35.5 kg.m2,
n = 0.00103 rad/s,
hy = −2.41 N.m.s.
A nominal controller constant of kD = 0.012 N.m.s is selected for obtaining
an acceptable steady-state accuracy (at the cost of transient performance).
Let us simulate the response of the spacecraft to an initial angle error of
θ = 0.002, φ = 0.01 rad with the roll-pitch-yaw random disturbing torque of
amplitude 6 × 10−5 N.m. The simulation begins when the spacecraft is over
the south pole (δ = 0) and continues for two complete orbits. The plant’s
state-space parameters based on the state vector, x = (P, Q, R, φ, θ, ψ)T , and
input magnetic torque, u = M, are given by

14.7 Multi-Axis Closed-Loop Attitude Control
497
Fig. 14.21. Simulink block diagram for initial response of magnetically torqued
stabilization system for GEOS-3 spacecraft.
A =
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎝
0
0 −0.0011 −5.325 × 10−6
0
0
0
0
0
0
−3.13 × 10−6
0
0.066857 0
0
0
0
−6.99 × 10−5
1
0
0
0
0
0
0
1
0
0
0
0
0
0
1
0
0
0
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎠
,

498
14 Attitude Control Systems
Fig. 14.22. Transient response of magnetically torqued stabilization system for
GEOS-3 spacecraft.
B =
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎝
0.0004636
0
0
0
0.0004636
0
0
0
0.028169
0
0
0
0
0
0
0
0
0
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎠
.
The Simulink block diagram for simulating the initial response for two or-
bital periods in the presence of the given white-noise disturbance is shown in
Fig. 14.21 and the resulting state variable time history is plotted in Fig. 14.22.
The main modeling eﬀort occurs in deriving the controller torque components
through a separate Latitude Functions subsystem block, and providing them
as inputs to the spacecraft’s state-space model. The transient response shows
oscillations in all variables—the largest being in yaw angle and rate—which
shows no tendency of subsiding in the span of the ﬁrst two orbits. In fact, the
magnetically damped system has a very large settling time of about 4.2 days,
after which the root-mean-square error in Euler angles stays below ±0.5◦. The
long-period dynamics can be studied by extending the simulation to 5 days
and plotting the response with a larger sampling interval. This is carried out
in Fig. 14.23, which has a sampling interval of 104 s. The damping of tran-
sient response is evident in this plot, and an accuracy of ±0.5◦in all the

14.7 Multi-Axis Closed-Loop Attitude Control
499
attitude angles is observed after about 72 hours. The inadequate damping of
magnetic torquers can be improved either by adding roll-yaw reaction wheels
or by reducing the pitch-roll inertia for a smaller gravity gradient restoring
torque (and thus smaller-amplitude libration). The latter is easily achieved
by reducing the deployed boom length at a suitable time.
Fig. 14.23. Long-term response of magnetically torqued stabilization system for
GEOS-3 spacecraft.
14.7.3 Control of Aircraft and Missiles with Inertia Coupling
We saw in Chapter 13 how inertia coupling could result in an unintended
departure from equilibrium about an axis (pitch) not involved in maneuvering.
The eﬀects of inertia coupling are largely conﬁned to ﬁghter airplanes and
aerodynamic missiles rolling at high rates. Since the motion is a multi-axis
rotation, along with plunge and sideslip, it requires a six-degree-of-freedom,
nonlinear model (Chapter 13). From the controls’ perspective, inertia coupling
oﬀers the advantage of a greater controllability with a given control input. For
example, a rudder input is capable of aﬀecting the pitch rate in an inertia-
coupled vehicle. This indicates that a single control loop, say about the yaw
axis, may be adequate for damping out the coupled dynamic response about
the other axes. However, for a better closed-loop performance, as well as

500
14 Attitude Control Systems
increased damping, a multi-axis control system is beneﬁcial. We shall see
here how such a control system can be modeled for a ﬁghter aircraft. The
application to aerodynamics is similar, if less complex, due to multiple planes
of symmetry (Jxz = 0, Jyy = Jzz).11
Example 14.9. Let us model a ﬂight-control system for damping the inertia-
coupled dynamics of the initially rolling ﬁghter aircraft of Example 14.12. The
control system consists of yaw- and pitch-rate gyro feedback, as well as a pitch-
angle feedback from a rate-integrating gyro. The rate gyros are essentially
damping devices, while the integrating gyro is necessary for keeping the angle
of attack small during the transient motion. For modeling the closed-loop
system, the program aircoupled.m for the six-degree-of-freedom dynamics is
modiﬁed by adding the dynamics of the elevator and rudder servos, and the
feedback control laws, in addition to the control stability derivative terms in
the dynamical model. The modiﬁed statements are tabulated in Table 14.1
for numerical integration of the nonlinear, closed-loop dynamics. The elevator
and rudder servos are modeled as the following ﬁrst-order actuators:
δe(s)
δec(s) =
20
s + 20 ,
δr(s)
δrc(s) =
20
s + 20.
The control laws for commanded elevator and rudder angles are based on the
following feedback of the pitch and yaw rate-integrating gyros, as well as a
sideslip sensor:
δec(s) = 0.1Q(s)
s
(| Q |≥0.001 rad),
δrc(s) = 0.025R(s)
s
−0.05β(s)
(| R |≥0.001 rad).
These transfer functions are converted into diﬀerential equations in time be-
fore putting them in the MATLAB program. The rate feedbacks are delib-
erately avoided due to the possibility of self-induced, growing oscillations in
the coupled nonlinear dynamics. Furthermore, the control is not activated im-
mediately, but is delayed until the pitch and yaw rates grow to 0.001 rad, in
order that the longitudinal short-period and Dutch-roll open-loop dynamics
are unhindered during the ﬁrst few seconds, after which inertia coupling man-
ifests itself in the rapid growth of pitch and yaw rates. If a feedback control is
applied in this incipient stage, there is a possibility that the inertia coupling
might become ampliﬁed, leading to large transient errors, and even instability.
11 It can be easily seen from Chapter 13 that a ﬁghter aircraft can encounter inertia
coupling even for a zero roll rate, while a missile with P = 0 has de-coupled
lateral and longitudinal dynamics.

14.8 Summary
501
Fig. 14.24. Body rates for the controlled and uncontrolled inertia-coupled dynamics
of a ﬁghter aircraft.
The resulting closed-loop simulation plots for the ﬁrst 40 s are compared
with the corresponding plots for uncontrolled inertia-coupled dynamics in
Figs. 14.24–14.26, while the closed-loop elevator and rudder deﬂections are
plotted in Fig. 14.27. It can be seen that the roll rate is brought down to
a small magnitude without letting the pitch and yaw rates diverge for the
controlled case. The pitch and yaw angle deviations are also kept small for
the closed-loop system, which is also successful in maintaining small angles of
attack and sideslip, with a negligible change in the forward speed compared
to that of the open-loop system. For the selected values of the feedback gains,
the elevator and rudder angles stay well below their allowable maximum mag-
nitude of 0.3 rad. The aircraft continues turning at a small yaw rate after 40 s.
The unstable, long-period spiral mode can be easily controlled by the pilot
after the eﬀects of inertia coupling have been removed by the control system.
14.8 Summary
It is necessary to have an attitude control system in all ﬂight vehicles, the most
useful design and analysis of which is by the linear systems theory. While a
single-input, single-output plant is modeled by a transfer function, multivari-
able plants are more easily handled by a state-space approach consisting of

502
14 Attitude Control Systems
Table 14.1. Modiﬁcations in the M-ﬁle aircoupled.m (Chapter 13) for Control of
Inertia Coupling
%(c) 2006 Ashish Tewari
%control laws
decdot=0; drcdot=0; if abs(x(2))>=0.001
decdot=0.1*x(2);
end if abs(x(3))>=0.001
drcdot=0.025*x(3)-0.05*x(8);
end
dec=x(12); %commanded elevator angle
drc=x(13); %commanded rudder angle
da=0; %aileron angle
%servo dynamics
de=x(10); dr=x(11); dedot=20*(dec-de); drdot=20*(drc-dr); if
abs(de)>=0.3
de=0.3*sign(de);
dedot=0;
end if abs(dr)>=0.3
dr=0.3*sign(dr);
drdot=0;
end
%coupled attitude dynamics
udot = -Q0+q*S*(Cxu*x(9)+Cxa*x(7)...
+x(5)*(-cos(phi0)*CL+sin(phi0)*sin(A0)*m*gn/(q*S)))/(m*v0);
alphadot = (2*x(9)*omega*cos(delta)*sin(A0)...
+2*x(9)*v0/(rm+h0)+x(9)*Q0+x(2)+q*S*(Czu*x(9)+Cza*x(7)+Czde*de...
+x(5)*(sin(phi0)*CL-cos(phi0)*cos(A0)*m*gn/(q*S))...
+c2vCzq*x(2))/(m*v0))/(1-q*S*c2vCzad/(m*v0));
L=q*S*b*(Clb*x(8)+0.5*b*(Clp*x(1)+Clr*x(3))/v+Clda*da+Cldr*dr);
M=q*S*c*(Cma*x(7)+c2vCmq*x(2)+c2vCmad*alphadot+Cmde*de);
N=q*S*b*(Cnb*x(8)+0.5*b*(Cnp*x(1)+Cnr*x(3))/v+Cndr*dr+Cndrd*drdot+Cnda*da);
jxz=Jxx*Jzz-Jxz^2; P=x(1);Q=x(2);R=x(3);
pdot=(Jxz*(Jzz+Jxx-Jyy)*P*Q-(Jxz^2+Jzz*(Jzz-Jyy))*Q*R+Jxz*N+Jzz*L)/jxz;
qdot=(Jxz*(R^2-P^2)+(Jzz-Jxx)*P*R+M)/Jyy;
rdot=(Jxz*(pdot-Q*R)+(Jxx-Jyy)*P*Q+N)/Jzz;
phidot=x(1)+(x(2)*sin(x(4))+x(3)*cos(x(4)))/cos(x(5));
thetadot=x(2)*cos(x(4))-x(3)*sin(x(4));
psidot=(x(2)*sin(x(4))+x(3)*cos(x(4)))/cos(x(5));
betadot=-x(3)+v*cos(phi0)^2*cos(A0)*tan(delta)*x(8)/(rm+h0)...
+2*omega*cos(delta)*sin(phi0)*sin(A0)*x(8)...
+g*x(4)*cos(phi0)/v+gn*(x(4)*sin(phi0)*cos(A0)-x(6)*cos(A0))...
+q*S*(Cyb*x(8)+Cydr*dr+b*Cyr*x(3)/(2*v))/(m*v);
xdot=[pdot;qdot;rdot;phidot;thetadot;psidot;alphadot;betadot;udot;
dedot;drdot;decdot;drcdot];
a set of ﬁrst-order, ordinary diﬀerential equations in time. Time-invariant,
linear systems are commonly used to model a ﬂight-control system with well-
established stability and performance criteria. While the controller design by
the transfer function approach is based upon the concept of second-order
system—extended to higher-order systems with a dominant pair of complex
conjugate poles—and a general proportional-integral-derivative (PID) con-
troller, the state-space design is generally based upon the optimal control
theory. The basic attitude control system in practically all ﬂight vehicles is
based upon gyroscopes as feedback mechanisms, which can provide either pro-
portional (rate gyro) or integral action (rate-integrating gyro) for a PID—or

14.8 Summary
503
0
5
10
15
20
25
30
35
40
−50
0
50
100
Φ (deg.)
0
5
10
15
20
25
30
35
40
−40
−20
0
20
Θ (deg.)
0
5
10
15
20
25
30
35
40
0
50
100
150
Ψ (deg.)
Time (s)
Controlled
Uncontrolled
Fig. 14.25. Euler angles for the controlled and uncontrolled inertia-coupled dynam-
ics of a ﬁghter aircraft.
a multivariable—controller setup. Examples of gyro-based control systems in-
clude autopilots for airplanes, missiles, and rotating spacecraft. Apart from
the rate gyro, a sensitive and accurate sensor of the vehicle’s rotational mo-
tion is an accelerometer, which has the additional advantage of compact and
rugged design. Accelerometer output can provide necessary information for
reconstruction of state vector in an observer based control system—such as
that employed in thrust vector-controlled, nonrolling ballistic missiles and
launch vehicles. Since the use of attitude thrusters for attitude stability and
control is expensive and reduces satellite life, reaction/momentum wheels and
magnetic coils are commonly employed as actuators in spacecraft. The con-
trol of inertia-coupled dynamics of aircraft and missiles requires a multi-axis
rotational, six-degree-of-freedom, nonlinear model, which oﬀers the advan-
tage of greater controllability with a given control input, but is diﬃcult to
model and analyze. Although a single control loop is adequate for damping
out the coupled dynamic response about the other axes, for a better closed-
loop performance, as well as increased damping, a multi-axis control system
is beneﬁcial.

504
14 Attitude Control Systems
0
5
10
15
20
25
30
35
40
−0.1
0
0.1
α (deg.)
0
5
10
15
20
25
30
35
40
−0.5
0
0.5
β (deg.)
0
5
10
15
20
25
30
35
40
0
0.1
0.2
u
Time (s)
Controlled
Uncontrolled
Fig. 14.26. Flow angles and forward speed ratio for the controlled and uncontrolled
inertia-coupled dynamics of a ﬁghter aircraft.
Exercises
14.1. Repeat Example 14.1 for the Honeywell HIG-4 [46] rate-integrating
gyro with the following characteristics [46]: Hr = 104 g–cm2/s, J = 35 g–cm2,
and c = 104 g–cm2/s. What diﬀerences do you observe compared to the rate
gyro considered in the example?
14.2. Simulate a spin maneuver of the spacecraft of Example 14.2 controlled
by the given attitude thrusters and the rate gyro of Example 14.1. The ma-
neuver involves a step change in the angular rate by 0.1 rad. Try the following
gains multiplying the rate gyro output:
(a) KD = 10.
(b) KD = 30.3.
(c) KD = 50.
14.3. Redesign the multivariable control system for the Vanguard missile (Ex-
ample 14.6) using the MIT rate gyros for pitch and yaw rate feedback, and
a PD feedback of the normal accelerations, by adjusting the gains for each
channel until a satisfactory closed-loop response is obtained for a simultaneous
desired step change of 0.01 rad/s in the pitch and yaw rates.

14.8 Summary
505
0
5
10
15
20
25
30
35
40
−1
0
1
2
3
4
δe (×10−3 deg.)
0
5
10
15
20
25
30
35
40
−0.1
0
0.1
0.2
0.3
δr (deg.)
Time (s)
Fig. 14.27. Closed-loop elevator and rudder deﬂections for the controlled inertia-
coupled dynamics of a ﬁghter aircraft.
14.4. Convert the pitch gyro to a pitch reaction wheel, and add a pitch sensor
to damp out the gravity gradient oscillation of the Seasat satellite of Exam-
ple 14.7. Then, by using a PD control law similar to the roll reaction wheel,
compare the response of the modiﬁed control system to the same initial an-
gular errors and disturbing torques with that given in the example.
14.5. Consider a spacecraft in a geosynchronous orbit (n = 0.000073 rad/s),
which makes the gravity gradient torques negligible. The spacecraft has the
same wheel conﬁguration and controller gains as in Seasat, but the moments
of inertia are Jxx = Jzz = 1000 kg.m2 and Jyy = 200 kg.m2. In addition to
the roll-yaw reaction wheels of Example 14.7, a pitch wheel control system is
added, such as in Exercise 14.4, to provide three-axis stabilization. Simulate
the response of the spacecraft to an initial error of θ = φ = ψ = 0.01 rad in the
presence of a random torque disturbance of maximum magnitude 10−4 N.m.
14.6. Repeat the simulation of the GEOS-3 magnetically damped control
system of Example 14.8 with a shorter gravity gradient boom, which reduces
the pitch-roll moment of inertia to Jxx = Jyy = 300 kg.m2 without aﬀecting
the other parameters. How does the new spacecraft respond to the same initial
error and disturbance as given in Example 14.8?

506
14 Attitude Control Systems
14.7. Simulate the closed-loop, inertia-coupled dynamics of the ﬁghter aircraft
of Example 14.9 with a modiﬁed rudder control law based only upon the yaw-
rate gyro feedback, along with the given pitch rate-integrating gyro feedback.
Try diﬀerent values of rate-gyro gains in the range −0.1 to 0.02, and select
the value that gives the best inertia-coupled damping without large changes
in the ﬂow angles and the forward speed. What improvement, if any, do you
observe over the simulation presented in Example 14.9?

15
Advanced Modeling and Simulation Concepts
15.1 Aims and Objectives
•
To introduce advanced modeling and simulation concepts useful in ﬂight
dynamics.
•
To provide additional six-degree-of-freedom simulation examples.
•
To address modeling of ﬂexible vehicle dynamics with Lagrangian
approach.
•
To discuss the importance and modeling of unsteady aerodynamics,
aeroelasticity, and propellant slosh dynamics in ﬂight dynamic
applications.
We have considered above how the translational and rotational motions
of an aerospace vehicle can be modeled appropriately, either with or with-
out an automatic control system. In many cases, we have applied relevant
assumptions that led to a decoupling of the degrees of freedom, such as small-
disturbance atmospheric ﬂight, and modeled additional dynamics as well as
disturbances as white-noise inputs. The accuracy of a simulation can be im-
proved by modeling additional degrees of freedom of the vehicle, such as struc-
tural ﬂexibility and propellant slosh dynamics, as well as by taking unsteady
aerodynamic eﬀects into consideration. Furthermore, external disturbances—
such as atmospheric gusts—can be modeled using statistical methods. Finally,
control system dynamic models can be enhanced by including nonlinear sensor
and actuator dynamics, as well as advanced ﬂight-control laws. In this chap-
ter, we will brieﬂy discuss the modeling and simulation of additional vehicle
dynamics.
15.2 Six-Degree-of-Freedom Simulation
An atmospheric ﬂight vehicle has inherently coupled rotational and transla-
tional dynamics due to the nature of aerodynamic force and moment. Such a

508
15 Advanced Modeling and Simulation Concepts
coupling is, however, absent in a spacecraft, where the rotational and transla-
tional motions can be studied using separate three-degree-of-freedom models.
In most airplanes and lifting entry vehicles, the small-disturbance aerodynam-
ics lead to a decoupling of the motion into linearized longitudinal and lateral
dynamics, each of which is modeled as separate three-degree-of-freedom mo-
tions. However, there are several instances where the lateral and longitudinal
dynamics cannot be decoupled, such as the inertial and aerodynamic coupling
caused by a rapidly rolling ﬁghter airplane, missile, or a ballistic entry cap-
sule. In Chapter 13 we considered the inertia-coupled dynamics of a ﬁghter
airplane—which can be extended to a rolling missile—and the same was con-
trolled using a multi-axis feedback control system in Example 14.9. In such a
case, the six-degree-of-freedom dynamics is modeled by nonlinear state equa-
tions, in which the aerodynamic force and moment are governed by linear
models. A rapidly maneuvering airplane at a large angle of attack is, how-
ever, modeled using nonlinear aerodynamic models, due to the near-stall, or
post-stall separated ﬂow on the vehicle. In this section, we shall consider two
examples of six-degree-of-freedom simulation, namely a rapidly rolling ﬁghter
airplane ﬂying at a large angle of attack and a ballistic entry capsule.
Fig. 15.1. Body-rate response of a ﬁghter aircraft undergoing wing-rock motion.

15.2 Six-Degree-of-Freedom Simulation
509
0
10
20
30
40
50
60
−2
0
2
4
6
Φ (deg.)
0
10
20
30
40
50
60
−2
−1
0
1
Θ (deg.)
0
10
20
30
40
50
60
0.5
1
1.5
2
Time (s)
Ψ (deg.)
Fig. 15.2. Attitude time history of a ﬁghter aircraft undergoing wing-rock motion.
Fig. 15.3. Phase-plane plot of bank angle vs. roll rate during wing-rock motion.

510
15 Advanced Modeling and Simulation Concepts
15.2.1 Wing-Rock Motion of a Fighter Airplane
While considering the inertia coupling in Chapter 13, we conﬁned our at-
tention to small-disturbance aerodynamics. Our assumption was validated
by the simulation results in Example 13.12, where a rolling departure of a
ﬁghter airplane from a straight and level ﬂight produced only small angles
of attack and sideslip, even though the body rates had become large. How-
ever, when a ﬁghter airplane is operated at a large angle of attack, its small
aspect-ratio wings and long, pointed forebody generate strong leading-edge
vortices (Chapter 10), which modify the lift, rolling- and yawing-moment co-
eﬃcients in a nonlinear fashion, leading to a lateral instability called wing-
rock. The wing-rock motion is essentially a self-induced, limit-cycle1 roll-yaw
motion. The unsteady vortical ﬂow near stall, causing the wing-rock motion
in ﬁghter-type aircraft has been extensively studied experimentally [58], re-
sulting in theoretical models that describe the nonlinear aerodynamics using
simple semi-empirical relations [59]. While several studies have been under-
taken of dynamics and control of the wing-rock motion with only one or two
degrees of freedom, we shall derive a complete six-degree-of-freedom model
by making appropriate changes in the aerodynamic coeﬃcients and stability
derivatives. Let us consider the following expression for the rolling-moment
coeﬃcient of a ﬁghter airplane at a large angle of attack:
Cl = f(Φ, ¯P) + Clββ + Clδa δa ,
(15.1)
where
f(Φ, P) = a1 ¯P + a2 ¯P 3 + a3Φ2 ¯P + a4Φ ¯P 2 ,
(15.2)
¯P .=
b
2vP is the nondimensional roll rate, and the coeﬃcients a0, . . . , a4 are
functions of the angle of attack. Clearly, the stability derivative, Clp, is no
longer a constant. Typically, wing-rock occurs at a nearly constant angle of
attack, thus a0, . . . , a4 can be considered to be constants during the motion.
For the same reason, the lift coeﬃcient can be considered constant at the
maximum value in the near-stall ﬂight condition.
Example 15.1. Suppose the ﬁghter airplane in Example 13.12 is ﬂying straight
and level at standard sea level and δ = 45◦, with Ae = 45◦, near its stalling
angle of attack, for which CL = 1.6, a1 = −0.04, a2 = 0.0126, a3 = −0.1273,
and a4 = 0.5197. Simulate the response of the aircraft to an initial disturbance
of 0.1 rad in the bank angle.
In order to carry out the required simulation, we ﬁrst calculate the initial
speed by
v =
' 2mg
ρSCL
= 52.7488 m/s.
Next, the program aircoupled.m (Table 13.11) is modiﬁed for the present task
by changing the rolling-moment equation to the following statement:
1 Limit cycle is a sustained, constant-amplitude oscillation at a ﬁxed frequency.

15.2 Six-Degree-of-Freedom Simulation
511
L=q*S*b*(Clb*x(8)+0.5*b*(Clr*x(3)-0.04*x(1))/v+0.0126*(0.5*x(1)*b/v)^3...
-0.1273*(0.5*x(1)*b/v)*x(4)^2+0.5197*(0.5*x(1)*b/v)^2*x(4));
0
10
20
30
40
50
60
−0.4
−0.2
0
α (deg.)
0
10
20
30
40
50
60
−2
0
2
β (deg.)
0
10
20
30
40
50
60
0
0.05
0.1
Time (s)
u
Fig. 15.4. Flow angles and speed disturbance of a ﬁghter aircraft undergoing wing-
rock motion.
The simulated state variables are plotted in Figs. 15.1–15.4 for the ﬁrst
60 s. The bank angle, Φ, and the roll rate, P, display an increasing amplitude
rolling oscillation that reaches a limit cycle in about 60 s. The associated os-
cillation in the heading angle, Ψ, is superimposed on a steady increase with
time, while the yaw rate, R, reaches a nearly constant amplitude almost si-
multaneously with Φ, P. The longitudinal coupling with the lateral motion
is evident in an oscillating pitch angle, Θ, and pitch rate, Q. Due to the in-
herently nonlinear nature of the inertia coupling, the pitch oscillation is not
simple harmonic and shows an increasing tendency. The plot of Φ against
P (Fig. 15.3)—called a phase-plane plot—reveals the limit-cycle behavior of
the rolling motion. A nonlinear stability analysis usually requires phase-plane
plots, wherein the tendency to remain near an equilibrium point can be easily
investigated. Finally, we analyze the disturbances caused in the translational
motion by studying the time history of u, α, β, plotted in Fig. 15.4. It is inter-
esting to observe that while the sideslip angle, β, has a simple-harmonic limit-
cycle response about β = 0, that of the angle of attack, α, is non-harmonic
and takes place around an equilibrium value of α = −0.2◦. The amplitude of

512
15 Advanced Modeling and Simulation Concepts
0
50
100
150
200
−10
−5
0
5
P (deg/s)
0
50
100
150
200
0
20
40
Q (deg/s)
0
50
100
150
200
−0.1
0
0.1
0.2
0.3
Time (s)
R (deg/s)
Fig. 15.5. Long period time-history of body-rates in wing-rock motion.
α is about one tenth that of β and is suﬃciently small (less than 0.4◦) for
the constant α assumption in the aerodynamic model to be valid. Due to the
negative α, there is a tendency for the speed to increase slightly (u ≤0.12),
reach a maximum around 60 s, and then to begin a shallow decline, thereby
indicating a long-period oscillation. Therefore, the airplane does not stall and
continues its wing-rock motion. However, as the simulation is increased to a
longer time (200 s), the inertia coupling ultimately leads to a divergence in
the pitch rate, as shown in Fig. 15.5, causing a steep nose-down attitude, and
a dive (Fig. 15.6) in which the wing-rock cycle is broken and the roll rate,
sideslip, and yaw rate return to small, nearly constant values. The control of
wing-rock motion essentially involves breaking the limit cycle by additional
damping provided by a closed-loop aileron (or rudder) input based on roll-rate
feedback (Chapter 14).
15.2.2 Trajectory and Attitude of a Ballistic Entry Vehicle
Atmospheric entry vehicles experience increasing aerodynamic force and mo-
ment as the ﬂight progresses. The ever-changing ﬂow from rareﬁed to contin-
uum subsonic causes large changes in the force and moment, while the inertia
coupling leads to the simultaneous excitation of all the degrees of freedom,
especially if the vehicle is rotating during the exo-atmospheric phase. Conse-
quently, six-degree-of-freedom simulations are necessary for entry vehicles. In

15.2 Six-Degree-of-Freedom Simulation
513
0
50
100
150
200
−4
−2
0
α (deg.)
0
50
100
150
200
−4
−2
0
2
4
β (deg.)
0
50
100
150
200
0
2
4
Time (s)
u
Fig. 15.6. Long-period time history of ﬂow angles and speed disturbance in wing-
rock motion.
Chapter 10 we considered the modeling of aerothermal loads in rareﬁed and
continuum regimes, while in Chapter 12 the translational dynamics of both
ballistic and lifting entry vehicles were simulated. Here, we shall additionally
take into account the aerodynamic moments generated during entry. In order
to do so, a panel approximation is employed wherein the vehicle’s external sur-
face is approximated by a number, N, of ﬂat panels. On each panel, we carry
out the pressure and shear-stress calculation using the free-molecular ﬂow
[Eqs. (10.36)–(10.37)], the continuum hypersonic ﬂow by Newtonian approx-
mation of Eq. (10.48), and a suitable boundary-layer model, or the rareﬁed
transition regime by exponential bridging relations in the Knudsen number
for interpolation between the quantities in the continuum and free-molecular
limits. The pressures and shear stresses of all the panels are then summed
vectorially for the aerodynamic force over the vehicle as follows:
fa
qS = 1
q
N

i=1
{−Δpini + Δτi[ni × (v × ni)]} ΔSi ,
(15.3)
where v, q denote the free-stream speed and dynamic pressure, and ΔSi, ni
are the area and unit normal of the ith panel. The aerodynamic moment is
similarly computed by taking the weighted vector summation of the elemental
pressure and shear stress by multiplying with appropriate moment arms:

514
15 Advanced Modeling and Simulation Concepts
Ma
qSlc
= 1
q
N

i=1
[ri × {−Δpini + Δτi[ni × (v × ni)]}] ΔSi .
(15.4)
Here, ri denotes the location of the centroid of the ith panel relative to the
vehicle’s center of mass. The rate of aerodynamic heat transfer over the vehi-
cle’s surface can be directly integrated by carrying out scalar summation of
all the panels.
The coding of such a panel model is left as an exercise for the reader.
While a panel method gives aerodynamic force and moment with a reason-
able accuracy (especially with a large number of panels), a more accurate ﬂow
model requires numerical integration of the pressure and shear-stress distrib-
ution computed over the vehicle’s surface with a computational ﬂuid dynamic
(CFD) model, employing the inviscid (Euler) equations for continuum regime,
and the Boltzmann equations in the rareﬁed regime.
Since the entry motion is expected to involve large rotations, the Euler an-
gle representation would be unsuitable here. Therefore, a quaternion attitude
model (Chapter 2) is employed, with the following additional state equations:
d{q, q4}T
dt
= 1
2Ω{q(t), q4(t)}T ,
(15.5)
where
Ω =
⎛
⎜
⎜
⎝
0
R
−Q P
−R
0
P
Q
Q
−P
0
R
−P −Q −R 0
⎞
⎟
⎟
⎠.
(15.6)
The ﬂow angles α, β, μ are calculated from the attitude of the body axes
relative to the wind axes (Chapter 13).
Example 15.2. Consider the ballistic entry vehicle, with entry conditions de-
scribed in Example 12.6. Instead of the approximate drag coeﬃcient, we shall
employ the ﬂow model based upon the above-described panel approximation.
The conﬁguration is a ﬂared sphere cone, with base area S = 3.24 m2, mass
350 kg, and length 1.63 m. The panel conﬁguration of the capsule with N = 21
is graphically depicted in Fig. 15.7, with all axes in meters, while its principal
moments of inertia about the body axes are Jxx = 80, Jyy = 120, Jzz =
130 kg/m2.
We shall simulate the coupled translational and rotational motions of the
vehicle from the same nominal geocentric position and velocity as given in
Example 12.6, and with additional initial condition of P = 1, Q = 0.1, R =
−0.1 rad/s, α = β = μ = 0. The plots resulting from the simulation are given
in Figs. 15.8–15.12. Figures 15.8–15.10 are the plots describing the trajectory,
and are quite similar to those obtained in Example 12.6. The latitude and lon-
gitude of the impact point (near which the ﬂight path becomes vertical) are
obtained as δ = 85.48◦, λ = 10.072◦. The rotational motion of the vehicle is
completely described by the time history of the body rates (Fig. 15.11), and

15.2 Six-Degree-of-Freedom Simulation
515
−1
−0.5
0
0.5
1
−1.5
−1
−0.5
0
0.5
1
1.5
−1
−0.5
0
0.5
1
Fig. 15.7. Panel approximation of the ballistic entry vehicle.
0
200
400
600
800
1000
1200
1400
1600
1800
0
50
100
150
200
250
h (km)
0
200
400
600
800
1000
1200
1400
1600
1800
0
2
4
6
8
Time (s)
v (km/s)
Fig. 15.8. Relative speed and altitude time history of a ballistic entry vehicle.

516
15 Advanced Modeling and Simulation Concepts
0
200
400
600
800
1000
1200
1400
1600
1800
0
50
100
λ (deg.)
0
200
400
600
800
1000
1200
1400
1600
1800
−80
−60
−40
−20
0
20
Time (s)
δ (deg.)
Fig. 15.9. Latitude and longitude time history of a ballistic entry vehicle.
0
200
400
600
800
1000
1200
1400
1600
1800
−90
−80
−70
−60
−50
−40
−30
−20
10
0
10
φ (deg.)
0
200
400
600
800
1000
1200
1400
1600
1800
0
50
100
Time (s)
A (deg.)
Fig. 15.10. Relative ﬂight-path and azimuth angles of a ballistic entry vehicle.

15.2 Six-Degree-of-Freedom Simulation
517
the attitude parameters (quaternion) (Fig. 15.12). It is interesting to note
that the body rates undergo a rapid and stable oscillation in the altitude
range 50 < h < 100 km, and decay to nearly zero below 40-km altitude.
Such a behavior indicates the inherent static stability (Cmα = −Cnβ) of the
capsule in the rareﬁed entry regime, somewhat like a badminton shuttle-cock.
The statically stable conﬁguration is crucial for mission success, as the selec-
tive heat shielding of the capsule requires a precise attitude during the peak
thermal loads regime below an altitude of 50 km (Chapter 12).
Fig. 15.11. Time history of the body rates of a ballistic entry vehicle.
Other examples of six-degree-of-freedom simulation include missiles, launch
vehicles, and lifting entry vehicles, some of which are left to the reader as
exercises. The Aerospace Block-Set of MATLAB/Simulink (Rel.14.1) soft-
ware contains modular building blocks for six-degree-of-freedom simulation
of aircraft with a nonrotating, ﬂat-earth, and linearized aerodynamics (sub-
sonic/supersonic), along with various wind turbulence models and linear
control-system blocks. Examples of six-degree-of-freedom simulation con-
tained in the Aerospace Block-Set are NASA’s HL-10 lifting-body vehicle at
low speed and high angle of attack, with nonlinear, subsonic aerodynamics,
and an aerodynamically controlled, supersonic air-to-air missile with quater-
nion for attitude modeling.

518
15 Advanced Modeling and Simulation Concepts
0
450
900
1350
1800
−1
−0.5
0
0.5
1
Time (s)
q4
0
450
900
1350
1800
−1
−0.5
0
0.5
1
Time (s)
q1
0
450
900
1350
1800
−1
−0.5
0
0.5
1
Time (s)
q2
0
450
900
1350
1800
−1
−0.5
0
0.5
1
Time (s)
q3
Fig. 15.12. Attitude time history of a ballistic entry vehicle in terms of the quater-
nion.
15.3 Structural Dynamics
Up to now we have neglected the eﬀects of structural ﬂexibility of ﬂight vehi-
cles, the modeling of which requires additional degrees of freedom. Typically,
all ﬂight vehicles incorporate light-weight structures that are quite ﬂexible. In
many cases the time scales associated with structural vibration are negligible
in comparison with the rotational dynamics of the vehicle, which, in turn,
involves a smaller time period compared to the translational motion. In such
cases, the coupling between the six-degree-of-freedom motion of the vehicle
and the structural dynamics can be ignored. Examples of such vehicles are mis-
siles, launch vehicles, entry vehicles, and some ﬁghter-type aircraft with small
aspect ratio, “stiﬀ” wings. However, the rotational motion of spacecraft with
large appendages, as well as that of aircraft with moderately large aspect-ratio
wings and/or long fueselages, is inherently coupled with that of the structural
vibration of the appendages, wings, or fuselages. For example, certain airline
transports have the primary wing-bending frequency roughly of the same or-
der as that of the longitudinal short-period mode, while a slender, supersonic
bomber can have a fuselage bending mode very close to both short-period
and Dutch-roll modes. In such cases, complex interactions can take place be-
tween the rigid-body motion, and the structural dynamic response, leading

15.3 Structural Dynamics
519
to a signiﬁcant modiﬁcation of the stability derivatives, as well as structural
instabilities.
The modeling for structural dynamics is based upon the analogy with the
single-degree-of-freedom spring-mass-damper system, for which a small spring
deﬂection from a static equilibrium position, x, is given by the diﬀerential
equation
m¨x + c ˙x + kx = f ,
(15.7)
where m, c, k, and f are the mass, damping constant, spring stiﬀness, and
applied force, respectively. For a continuous structure with inﬁnite degrees
of freedom, an analogous system of equations can be derived using a gener-
alization of the sping-mass-damper system, and written in a matrix form as
follows:
M¨z + C˙z + Kz = f ,
(15.8)
where z is a vector of discrete variables called the generalized coordinates
representing small displacement from the static equilibrium position of the
structure, f is a vector of generalized forces, and M, K, C are called the gen-
eralized mass, stiﬀness, and damping matrices, respectively. The generalized
displacements do not necessarily have a physical signiﬁcance, and arise solely
out of mathematical convenience. Note that for an exact representation, z
must have an inﬁnite dimension. However, one ﬁnds it suﬃcient to approxi-
mate the motion by only ﬁnite degrees of freedom, N, the number of which
depends upon the range of natural frequencies (bandwidth) of interest. Identi-
fying approximate discrete degrees of freedom for a continuous structure is the
realm of elasticity, and the methods employed include the classical Rayleigh–
Ritz and ﬁnite-element methods, the weighted-residual methods consisting
of the Galerkin and collocation methods, and the assumed-modes method.
While a detailed discussion of these structural dynamic models is beyond our
approach, the reader may refer to introductory texts on elasticity, such as
Meirovitch [61].
In the derivation of the discrete set of equations of motion, Eq. (15.8),
the energy approach (also called Lagrangian, or variational method) is often
utilized, elements of which were discussed in Chapter 4. In this approach, the
work done by an external, nonconservative generalized force on a holonomic
system (Chapter 4) described by the generalized coordinates, z, results in a
variation of the kinetic energy, T, and potential energy, −V , and leads to the
following set of equations, called Lagrange’s equations:
d
dt
 ∂L
∂˙zi

−∂L
∂zi
= fi (i = 1 . . . N) ,
(15.9)
where L .= T + V is the Lagrangian of the system. The Lagrangian approach
oﬀers a convenient alternative to Newton’s laws in deriving equations of mo-
tion of a complex dynamical system, because it is based upon scalar variables
(generalized coordinates, generalized forces, and energy) rather than the vec-
tor variables required in the application of Newton’s laws.

520
15 Advanced Modeling and Simulation Concepts
The generalized mass and stiﬀness matrices are obtained using conserv-
ative strain energy considerations, which are fairly easily modeled. However,
a modeling of the generalized structural damping matrix involves complex
considerations of energy dissipation mechanisms within the structure and is
generally ignored in a ﬁrst-order analysis. Assuming one has derived the linear
structural dynamic model, Eq. (15.8), in the form of M, K, and identiﬁed the
generalized force vector, f(t), as a function of time, a solution z(t) can be com-
puted using the linear algebraic methods introduced in Chapter 14. The linear
equations of motion of an undamped structure in generalized coordinates lead
to the following decoupled modal form
mi¨zi + miω2
i zi = fi
(i = 1, . . . , N) ,
(15.10)
where ωi is the natural frequency of the ith mode of the structure obtained
by solving the eigenvalue problem associated with the unforced system,
(Mω2
i + K)z0i
(i = 1, . . . , N) .
(15.11)
The mode shape of deformation is indicated by the eigenvector, z0i. Generally,
higher modes have a diminishing eﬀect on the structural response. Therefore,
only the ﬁrst few modes are considered important and retained in a model.
However, when several modes have nearly the same natural frequency, all of
them must be retained for accuracy. For a spacecraft, the above-given ap-
proach is commonly employed, and the coupled rotational and structural dy-
namics are easily modeled. In such a case, f(t) consists of control force and
external disturbance due to gravity gradient, solar radiation, or atmospheric
drag. For atmospheric vehicles, however, the generalized force arises due to
aerodynamic eﬀects and depends upon the relative velocity of the structure
determined by ˙z. Furthermore, the forced vibration frequencies diﬀer signif-
icantly from the unforced (or in-vacuo) natural frequencies of the structure.
In order to obtain a solution, this coupling between the aerodynamics and
structural dynamics, called aeroelasticity, must be carefully modeled, which
is the subject of the next section.
Example 15.3. Consider the single-axis rotation of a spacecraft with a rigid
hub and two symmetrically located radial, ﬂexible appendages mounted with
tip masses. If we use a ﬁnite-element approach [62], the ﬁrst eight structural
modal frequencies of the spacecraft (apart from the rigid-body mode, ω0 = 0)
are obtained and tabulated in Table 15.1. A closed-loop vibration suppres-
sion system consisting of hub torque input and a normal acceleration output,
aN, at a selected point on one of the appendages, is designed based upon
a novel technique [63], wherein an optimal feedback controller penalizes ˙aN
and follows a desired hub displacement proﬁle, generated by a feedforward,
multi-mode, time-optimal input-shaping method. One can choose a priori how
many structural modes are to be suppressed, while rotating the spacecraft by
a desired angle, θd. Figure 15.13 shows the closed-loop response of the nor-
mal acceleration, hub angle and rate, and the torque input for moving the

15.4 Unsteady Aerodynamics and Aeroelasticity
521
spacecraft by 1 rad in a rest-to-rest maneuver, while suppressing the ﬁrst 2
to 8 modes of the structure. It is clear that as the number of modes to be
suppressed increases to six, there is a signiﬁcant reduction in the peak mag-
nitudes of aN, ˙θ, as well as the input torque (which is based upon a feedback
of aN and θ). However, taking into account higher modes does not oﬀer any
signiﬁcant advantage, but only leads to an increase in the size of the control
system, which is undesirable.
Table 15.1. The Natural Frequencies of a Flexible Spacecraft
i
ωi (rad/s)
1
0.763435
2
2.223379
3
5.559157
4 10.77793
5 17.93344
6 27.00576
7 41.35808
8 56.56352
15.4 Unsteady Aerodynamics and Aeroelasticity
The assumption of steady ﬂow becomes invalid when we consider a time-
dependent relative ﬂow velocity, thereby necessitating unsteady aerodynamic
modeling. The unsteady aerodynamics arise when a ﬂight vehicle is suddenly
started from rest, encounters a wind gust, or experiences oscillatory motion.
The modeling and analysis of unsteady aerodynamics are a complex task, gen-
erally requiring the solution of unsteady Euler (or Navier–Stokes) equations
(Chapter 10). However, over the past 75 years, a vast compendium of ana-
lytical techniques and semi-empirical methods has accumulated for modeling
unsteady aerodynamics. The largest contribution of unsteady aerodynamic
eﬀects is due to lifting surfaces, which experience a time-dependent lift and
pitching moment due to a change in the ﬂow direction. As a result, the lift and
moment do not adjust themselves instantaneously to changes in the speed and
direction of the ﬂow. The most common model applied to a lifting surface is
that of small ﬂow disturbances, for which the inviscid ﬂow assumption remains
valid, and approximate linearized analysis in terms of stability derivatives can
be applied. However, for nonlifting bodies, and surfaces encountering large
ﬂow disturbances, the inviscid ﬂow assumption breaks down due to substan-
tial ﬂow separation.
For an illustration of unsteady aerodynamics, we shall consider the small-
disturbance motion of a thin airfoil in incompressible ﬂow. This is the earliest
and the most analyzed unsteady aerodynamics problem, attacked ﬁrst by

522
15 Advanced Modeling and Simulation Concepts
0
10
20
30
40
50
60
70
−0.1
−0.05
0
0.05
0.1
aN (m/s2)
Time (s)
0
10 20 30 40 50 60 70
0
0.2
0.4
0.6
0.8
1
Time (s)
θ (rad)
0
20
40
60
30
50
70
0
0.02
0.04
0.06
Time (s)
˙θ (rad/s)
0
10 20 30 40 50 60 70
−0.03
−0.02
−0.01
0
0.01
0.02
Hub torque, u (Nm)
Time (s)
6 modes
8 modes
2 modes
4 modes
Fig. 15.13. Closed-loop response of a ﬂexible spacecraft with an active vibration
suppression system.
researchers in the 1920s and 1930s (Birnbaum, Wagner, Glauert, Theodorsen,
K¨ussner), and is still in wide use for predicting the aeroelastic behavior of large
aspect-ratio wings. The assumption of inviscid, incompressible (potential) ﬂow
oﬀers the advantage of analytical methods in complex variables and enables
closed-form expressions for unsteady lift and pitching moment. We begin by
presenting the steady potential ﬂow condition over a thin airfoil at a small
angle of attack, where the lift generation involves a circulation2 of the ﬂow over
the airfoil. The linear relationship between the strength of the circulation and
lift is given by the Kutta–Joukowski theorem of potential ﬂow, which requires
that the ﬂow at the trailing edge be tangential to the airfoil’s chord line
(Kutta condition) [22]. The Kutta condition is a physical phenomenon and
remains approximately valid even in the small-disturbance, unsteady ﬂow.
For an inviscid ﬂow, the circulation remains constant around a closed curve
containing the same ﬂuid elements, due to Kelvin’s theorem [22]. This implies
that whenever there is a change of circulation around an airfoil, there must
be an equal and opposite circulation of the ﬂuid moving past the airfoil in
2 Circulation, Γ, is deﬁned as the line integral of ﬂow velocity over a closed curve,
C,
Γ .=
C
v · ds .

15.4 Unsteady Aerodynamics and Aeroelasticity
523
its wake. Such a circulation in the wake causes a rotation (vorticity) of the
ﬂuid elements in the wake region and is called vortex shedding. Hence, an
unsteady airfoil motion causes an unsteady wake, which, in turn, induces a
vertical velocity component on the airfoil, representing a further change in the
eﬀective angle of attack experienced by the airfoil. This complex interaction
with wake vortex shedding is a hallmark of unsteady ﬂow. However, there is
another mechanism of lift generation in unsteady ﬂow that does not involve a
circulation of the ﬂow. Such a phenomenon is easily visualized by considering a
ﬂat plate accelerated in the normal direction, which generates lift by displacing
the ﬂuid normal to its surface. In a noncirculatory ﬂow, the ﬂuid exerts a
normal force on the solid surface which is proportional to the mass of the
ﬂuid being displaced and is thus called the aerodynamic inertia eﬀect. A
ﬂapping airfoil can thus generate a noncirculatory lift even when the forward
ﬂow speed is zero. With these preliminaries, we now consider an airfoil of
chord c = 2b capable of executing both vertical translation (plunge), h, and
a rotation about a ﬁxed axis (pitch), α. The airfoil can be regarded as a
typical section of a large aspect-ratio wing and encounters plunge and pitch
due to the bending and torsion, respectively, of the wing. Consequently, in
an aeroelastic model we restrain the airfoil’s motion by a linear and torsional
spring representing the local bending and torsional wing stiﬀnesses. Such a
model is in keeping with the approach of generalized displacement presented
above, where h, α can be derived from the generalized displacement vector, z,
governing the structural motion. Theodorsen (1935) devised a circulatory ﬂow
function, C(k), which can be used to represent the unsteady lift and pitching
moment of the airfoil oscillating at a frequency ω as follows [64]:
L = πρb2[¨h + v ˙α −ab¨α] + 2πρvbC(k)

˙h + vα + b
1
2 −a

˙α

,(15.12)
M = πρb2

ab¨h −vb
1
2 −a

˙α −b2
1
8 + a2

¨α

+2πρvb2

a + 1
2

C(k)

˙h + vα + b
1
2 −a

˙α

.
(15.13)
Here, a = x
b is the nondimensional location of the pitch axis (Fig. 15.14), k .=
ωb
v is a nondimensional frequency of oscillation, called the reduced frequency,
and
C(k) .=
/ ∞
1
y
√
y2−1e−ikydy
/ ∞
1

y+1
y−1e−ikydy
.
(15.14)
The unsteady lift and pitching moment are seen to contain noncirculatory
terms [those that are independent of C(k)] as well as the circulatory terms
involving C(k). The Theodorsen function, C(k), is thus a complex function
of the reduced frequency, k. For a simple harmonic motion, k is real, while a
slightly divergent oscillation is represented by a complex k, with a negative

524
15 Advanced Modeling and Simulation Concepts
v
B
h
2
c
b
 
x
ab
 
Fig. 15.14. A typical wing airfoil section.
imaginary part. In both of these cases, it is not necessary to evaluate the
improper integrals in Eq. (15.14) (which are not always convergent), and C(k)
can be computed using the Hankel functions of the second kind [5], H(2)
n , as
follows:
C(k) = F(k) + iG(k) =
H(2)
1
H(2)
1
+ iH(2)
0
.
(15.15)
Unfortunately, Hankel functions (also called Bessel functions of the third kind)
are unavailable in a closed form and require a numerical approximation [5],
such as that by the intrinsic MATLAB function besselh. In a general applica-
tion, it is more advantageous to transform C(k) to the Laplace domain. For
this purpose, it may be beneﬁcial to consider a related model called Wagner’s
function, φ(¯t), which is the inverse Fourier transform of C(k)
ik :
φ(¯t) .=
1
2πi
 ∞
−∞
C(k)
k
eik¯tdk ,
(15.16)
where ¯t .= vt
b is a nondimensional time. Wagner’s function is especially useful
in calculating the indicial lift (and pitching moment) that arises due to a
sudden change in the angle of attack (such as a starting motion, or a sudden
vertical gust). A rough approximation of φ(¯t) was given by Garrick [65]:
φ(¯t) ≈1 −
2
¯t + 4 .
(15.17)
A wide range of unsteady problems can be solved using Theodorsen’s func-
tion, such as the dynamic aeroelastic phenomena of ﬂutter and control sur-
face reversal [64], the arbitrary motion of the airfoil in the presence of a
gust, and estimation of unsteady stability derivatives (such as Cz ˙α, Cm ˙α). For
wings of ﬁnite span oscillating in subsonic (compressible) as well as supersonic

15.4 Unsteady Aerodynamics and Aeroelasticity
525
speeds, a modiﬁcation of the above approach in the form of a lifting surface,
panel methods can yield accurate unsteady aerodynamic models. Such panel
methods include the subsonic Doublet–Lattice method [66], the supersonic
Potential–Gradient method [67], and the subsonic [68] and supersonic [69]
Doublet–Point methods. However, a linearized unsteady aerodynamic model-
ing is nearly impossible in the transonic regime due to the inherently nonlinear,
small-disturbance governing equations of motion, as well as the presence of
oscillating shock waves and the attendant unsteady ﬂow separation.
For a practical application, the generalized unsteady aerodynamic force,
f, must be available in either the time domain or the Laplace domain. In
order to develop such a model, a method of analytic continuation from the
imaginary axis of the Laplace plane is employed in terms of an aerodynamic
transfer matrix, Q(s) deﬁned by
F(s) = Q(s)Z(s) ,
(15.18)
where F(s), Z(s) are the Laplace transforms of f(t), z(t), respectively. The ele-
ments of the transfer matrix, Q(s), are approximated by linear, time-invariant,
ﬁnite-state, rational functions in s. The numerator coeﬃcients of the rational
transfer functions, Qij(s), are determined by a curve ﬁt with the simple har-
monic data obtained from a panel method in the limit s →iω. The determi-
nation of the denominator constants (called lag parameters) of the rational
functions, Qij(s), require additional conditions, such as the minimization of
the total least-squares curve ﬁt error summed over a range of frequencies [70].
In the process of modeling Q(s), attention has to be given to the number
of additional state variables (Chapter 14) arising out of the lag parameters.
If the additional lag-state variables are large, the modeling (and associated
closed-loop design) becomes unwieldy. It is observed [70] that employing re-
peated pole transfer functions for Qij(s) reduces the size of the model for a
given ﬁt accuracy.
Aeroelasticity refers to the interaction between structural dynamics and
unsteady aerodynamics. Using the generalized displacements, the equations
for aeroelastic motion can be written in the Laplace domain as follows:
[s2M + sC + K]Z(s) = Q(s)Z(s) ,
(15.19)
where the generalized aerodynamics coeﬃcient matrix is given by an appro-
priate rational-function approximation. In order to conduct an aeroelastic
stability analysis, one must determine the roots of the following characteristic
equation
| s2M + sC + K −Q(s) |= 0 ,
(15.20)
which can be accomplished numerically by linear algebraic methods. This
is the basis of aeroelastic stability analysis. When some characteristic roots
(eigenvalues) cross into the right-half s-plane, we have an aeroelastic instabil-
ity. The aeroelastic instabilities can be either static (divergence and control

526
15 Advanced Modeling and Simulation Concepts
surface reversal) or dynamic (ﬂutter and control-surface buzz) [64]. Among
these, divergence and ﬂutter are the most dangerous, because they cause
catastrophic structural failures. Flutter has received special attention by the
airplane designers, since it is rather diﬃcult to predict and is inﬂuenced by
mass distribution as well as stiﬀness. At the characteristic ﬂutter speed, the
harmonic wing response achieves a near resonance with the unsteady aero-
dynamics, leading to large amplitude oscillation. A large aspect-ratio wing
generally experiences the classical bending-torsion ﬂutter, involving only the
ﬁrst two (or three) structural modes, and a simpliﬁed aerodynamic model
based upon typical wing sections (strip method). On the other hand, a small
aspect-ratio wing of a ﬁghter-type airplane may require the inclusion of higher-
frequency modes and sophisticated aerodynamic panel methods in a ﬂutter
analysis. Flutter can be controlled either passively through wing redesign or
actively by employing a control surface in a closed loop with normal wing ac-
celeration. When additional degrees of freedom of control surface deﬂections—
driven by a feedback control law, or vibrating freely—are included in the
aeroelastic model, the resulting analysis is termed aeroservoelasticity. Exam-
ples of aeroservoelasticity include active ﬂutter suppression, active gust-load
alleviation, and inadvertent structural modal excitation by an active ﬂight-
control system. The last has been a common experience in modern ﬁghter
designs, which invariably employ some form of automatic ﬂight stability aug-
mentation. If the adverse aeroservoelastic interactions are not carefully mod-
eled and designed out of the closed-loop system, serious accidents may occur,
leading to a complete loss of the aircraft.3
Example 15.4. Consider the active ﬂutter suppression of a typical wing sec-
tion, by a trailing-edge control-surface deﬂection, δ. Using the following
rational-function approximation of Theodorsen’s function [71]:
C(k) = 0.9962 −0.1667(ik)
ik + 0.0553 −0.3119(ik)
ik + 0.2861 ,
and a normal acceleration, aN, feedback, we arrive at a linear, time-invariant
state-space representation of a 12th-order aeroservoelastic plant. We test two
active control laws for suppressing ﬂutter: (a) the traditional linear, quadratic
regulator (LQR) optimal controller, and (b) a novel optimal method based
upon the minimization of the output rate (ORW) [72]. The closed-loop re-
sponses of the two controllers at the open-loop ﬂutter speed in terms of nor-
mal acceleration output, and control-surface input, are plotted in Fig. 15.15.
Note the smoother acceleration of a smaller magnitude, as well as a much
smaller control input of the ORW controller. However, ORW control requires
the control surface to be oscillated more rapidly than the LQR method.
Certain aeroelastic phenomena require nonlinear modeling techniques. One
such behavior is the airframe buﬀet encountered when maneuvering near stall,
3 Adverse aeroservoelasticity has been encountered by the Lockheed F-22 and F-
117 ﬁghters, as well as Taiwan’s IDF ﬁghter prototype.

15.5 Propellant Slosh Dynamics
527
0
5
10
15
20
25
30
35
−0.04
−0.02
0
0.02
0.04
0.06
Time (s)
δ (deg.)
0
5
10
15
20
25
30
35
−0.8
−0.6
−0.4
−0.2
0
0.2
aN (m/s2)
LQR control
ORW control
Fig. 15.15. Active ﬂutter suppression of a typical wing airfoil section by two control
techniques.
or in the transonic regime, due to unsteady separated ﬂow. The mechanism
of buﬀet is complex and requires an unsteady, turbulent ﬂow model. Other
nonlinear aeroelastic eﬀects arise out of large amplitudes or large reduced
frequencies and sometimes involve nonlinear structural dynamics.
15.5 Propellant Slosh Dynamics
Many aerospace vehicles contain large liquid propellant masses, whose motion
relative to the vehicle—called slosh—can excite unwanted rigid and/or struc-
tural modes. The vehicles for which slosh becomes a critical issue are launch
vehicles and spacecraft with liquid propellants. As a launch vehicle ascends,
the propellant is rapidly consumed, leading to partially ﬁlled tanks, which ag-
gravates the slosh problem (somewhat like a half-empty soda can). An extreme
case of slosh interacting with the vehicle’s dynamics and propulsion system
is the longitudinal vibration of the entire vehicle, called pogo oscillation. An
example of pogo was encountered in the Titan-II rocket, with a natural fre-
quency of about 10 Hz and a peak acceleration of ±5 g. The slosh dynamics
are much more critical in a spacecraft, where the absence of a strong gravity
ﬁeld increases the amplitude of relative motion. As discussed in Chapter 13,
slosh can render the rotational motion about the minor axis unstable.

528
15 Advanced Modeling and Simulation Concepts
The modeling of slosh ranges from the second-order linear dynamics when
the amplitude of the motion is small, to complex nonlinear models that take
into account the changing volume of the propellant due to combined eﬀects
of gravity, vapor pressure, and the capillary action of internal baﬄes and
guides. Some sophisticated slosh models even incorporate computational ﬂuid
dynamics (CFD) of the two-phase ﬂuid comprising the liquid and gaseous
vapour [73] in a microgravity environment. Vreeburg [74] presents a dynamic
slosh model with the spacecraft translational and rotational dynamics includ-
ing a spherical ball of liquid, as well as the attitude of spacecraft. In the
resulting 22-order model, the liquid sphere is governed by a variable density
and a radial ﬂowﬁeld, along with angular momentum and surface tension.
The variable liquid surface determines its instantaneous moment of inertia,
which aﬀects spacecraft rotation. In addition, momentum between the liquid
and the tank walls is exchanged as pressure and shear stress, according to
the relative linear and angular velocity at a given point. The kinetic energy
dissipation of the spacecraft is thus modeled as a nonlinear, second-order or-
dinary diﬀerential equation. The model can be validated using either CFD
or experimental data. An experimental spacecraft called Sloshsat was espe-
cially designed, instrumented, and launched in 2005 by the European Space
Agency (ESA) in order to validate such sophisticated slosh models and to
gather valuable experimental data.
15.6 Summary
The accuracy of a simulation can be improved by modeling additional de-
grees of freedom of the vehicle, including structural ﬂexibility, propellant slosh
dynamics, unsteady aerodynamic, and aeroelasticity, as well as realistic dis-
turbance eﬀects. A complete six-degree-of-freedom model and simulation are
necessary in all cases where the lateral and longitudinal rotational dynam-
ics cannot be decoupled from the translational motion, such as in a rapidly
rolling ﬁghter airplane, missile, and a ballistic entry vehicle. Modeling of struc-
tural dynamics by Lagrangian methods is necessary whenever the coupling
between the six-degree-of-freedom motion of the vehicle and the structural
dynamics cannot be ignored. When applied to atmospheric vehicles, an ac-
curate model of unsteady aerodynamics and aeroelasticity is required in all
cases where structural ﬂexibility is important. Unsteady aerodynamic mod-
els are also necessary for rigid vehicles whenever a time-dependent relative
ﬂow occurs, such as in a rapidly rotating or suddenly started winged vehicle.
Interaction among structural dynamics, unsteady aerodynamics, and control
systems (aeroservoelasticity) must be carefully modeled and analyzed for pos-
sible instabilities. Modeling of slosh dynamics and its coupling with the ve-
hicle’s motion—by semi-empirical or sophisticated CFD models—is a critical
issue for launch vehicles and spacecraft with liquid propellants.

15.6 Summary
529
Exercises
15.1. Carry out a closed-loop simulation of the ﬁghter aircraft of Example 15.1
with the control system given in Example 14.9. Is the wing-rock suppressed
by this control system? Can we suppress the wing-rock, as well as maintain
ﬂight equilibrium using only the roll-rate feedback control?
15.2. Build a closed-loop, six-degree-of-freedom simulation for the missile of
Example 13.11 using a code that incorporates rocket.m (Table 12.14) for the
translational motion of a rocket’s ascent through the atmosphere, along with
the state equations arising out of the control system given in Example 14.6.
Use the same stage ratios as given in Example 12.8, but modify the values
of mass and thrust at 75 s after launch to be the same as those given for the
Example 13.11. Carry out the simulation for ﬂight up to the second-stage
separation, and plot the relevant state variables with time.
15.3. Consider a bomber aircraft with a long, slender fuselage. The fuselage
is so ﬂexible that the motion of the ﬂight crew in their seats can excite
the primary bending mode of natural frequency 6.05 rad/s. The aircraft’s
aeroelastic motion can be described adequately by a second-order longitudi-
nal short-period mode, a second-order fuselage bending mode, two ﬁrst-order
control-surface (canard and elevator) actuators, and a normal acceleration
and a pitch-rate output, resulting in the following state-space model [43]:
A =
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎝
0.4158
1.025
−0.00267 −0.00011 −0.08021
0
−5.5
−0.8302 −0.06549
−0.0039
−5.115
0.809
0
0
0
1
0
0
−1040
−78.35
−34.83
−0.6214
−865.6
−631
0
0
0
0
−75
0
0
0
0
0
0
−100
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎠
BT =
0 0 0 0 75
0
0 0 0 0
0
100

C =
−1491 −146.43 −40.2 −0.9412 −1285 −564.66
0
1
0
0
0
0

,
D =
0 0
0 0

.
Determine the initial response of the airplane to a squirming pilot, resulting
in the initial condition x(0) = (0, 0, 1, 0, 0, 0)T ft/s. How long does the motion
take to damp out, and what are the peak normal acceleration and pitch rate?

A
Numerical Integration of Ordinary Diﬀerential
Equations
A general set of n ordinary diﬀerential equations can be expressed in a vector
form as follows:
dy
dt = f(t, y) ,
(A.1)
with the initial condition
y(0) = y0 .
(A.2)
The nonlinear functional, f, possesses continuous time derivatives up to an
indeﬁnite order and satisﬁes the following Lipschitz condition:
| f(t, y1) −f(t, y2) |≤c | y1 −y2 | ,
(A.3)
for some constant c. In such a case, the existence of a unique solution to the
diﬀerential equation is guaranteed [51]. However, such a solution can rarely
be found in a closed form and often requires numerical approximation. The
approximate numerical solution to Eq. (A.1) involve series expansions of the
solution around the given initial condition and can be divided into various
categories depending upon the determination of the coeﬃcients of the series.
A.1 Fixed-Step Runge–Kutta Algorithms
A Runge–Kutta algorithm of ﬁxed integration time step h, order p, and s
stages expresses the solution by the following truncated series:
y(h) = y0 + h
s−1

k=0
akfk + O(hp+1) ,
(A.4)
where the neglected part of the series, O(hp+1), is called the truncation error,
ΔT E. The stages refer to the number of evaluations of the functional required
at each time step, apart from that at the initial time (t = 0):

532
A Numerical Integration of Ordinary Diﬀerential Equations
f0 = f(0, y0),
fk = f
#
bkh, y0 + h
k−1

i=0
ckifi
$
(k = 1, 2, . . ., s −1) .
(A.5)
The coeﬃcients ak, bk, cki are chosen such that the solution is identical to that
of a Taylor series approximation of the same order, p, given by:
y(h) = y0 + h
p

k=1
hk
k!
∂k−1f
∂tk−1 |t0,y0 .
(A.6)
The determination of the unknown coeﬃcients through comparison with the
equivalent Taylor series involves constraint equations, which are typically
smaller in number than the number of unknowns. Therefore, some of the
unknown coeﬃcients are chosen arbitrarily, called free parameters. As the or-
der of the method increases, the number of free parameters also increases.
The ﬁxed-step algorithms suﬀer from a large p for a speciﬁc truncation error,
thereby requiring a large number of constraint equations per time-step.
A.2 Variable-Step Runge–Kutta Algorithms
In order to improve the eﬃciency of Runge–Kutta algorithms, the time-step
size, h, is made variable in Eq. (A.4), such that the accuracy of the next
higher-order algorithm is achieved at each step. The higher-order solution, ˆy,
of stage r is given by
ˆy(h) = y0 + h
r−1

k=0
ˆakfk + O(hp+2) ,
(A.7)
where the functional evaluations are now carried out as follows:
f0 = f(0, y0),
fk = f
#
bkh, y0 + h
k−1

i=0
ckifi
$
(k = 1, 2, . . . , m −1),
(A.8)
where the number of stages m in the solution is the higher of s and r
[m = max(s, r)]. Note that the coeﬃcients bk, cki remain the same for the
two solutions of adjacent order. The time step is chosen such that the trun-
cation error, which is the diﬀerence between the adjacent order solutions,
ΔT E = y(h) −ˆy(h) = h
r−1

k=0
(ak −ˆak)fk + O(hp+2) ,
(A.9)

A.2 Variable-Step Runge–Kutta Algorithms
533
remains below a speciﬁed tolerance, Δ. By expressing Eq. (A.9) as
ΔT E = Khp+1 ,
(A.10)
we can select the time-step size of the next step, h′, from the speciﬁed tolerance
as follows:
h′ = h
 Δ
ΔT E

1
p+1
(ΔT E ≤Δ) ,
(A.11)
assuming K remains constant over the next step. In this manner, an accuracy
of order p + 1 is achieved with a method of order p, albeit with an increased
number of stages. Therefore, the variable-step Runge–Kutta algorithms are
also referred to as Runge–Kutta methods of order p(p + 1).
Example A.1. The Runge–Kutta 4(5) algorithm [52], implemented in the
MATLAB’s intrinsic function ode45.m and employed extensively in this book,
has coeﬃcients tabulated in Table A.1 and results in the following truncation
error:
ΔT E = h

−1
360f0 + 128
4275f2 + 2197
75240f3 −1
50f4 −2
55f5

.
(A.12)
Of course, the coeﬃcients in Table A.1 are by no means unique, since they
depend upon the choice of the free parameter values. Fehlberg [52] gives two
sets of values for these coeﬃcients. Expressing the coeﬃcients in fractional
form makes them independent of the machine round-oﬀerrors.
Table A.1. The Coeﬃcients of Runge–Kutta 4(5) Algorithm
k:
0
1
2
3
4
5
ak:
25
216
0
1408
2565
2197
4104
−1
5
-
ˆak:
16
135
0
6656
12825
28561
56430
−9
50
2
55
bk:
0
1
4
3
8
12
13
1
1
2
ck0: 0
1
4
3
32
1932
2197
439
216
−8
27
ck1: -
-
9
32
−7200
2197
−8
2
ck2: -
-
-
7296
2197
3680
513
−3544
2565
ck3: -
-
-
-
−845
4104
1859
4104
ck4: -
-
-
-
-
−11
40
Apart from the Runge–Kutta methods, other choices are available for low-
order integration algorithms, some of which are options in a Simulink [49]
simulation:

534
A Numerical Integration of Ordinary Diﬀerential Equations
(a) The ﬁnite-diﬀerence (or Euler’s) methods, where approximate values are
prescribed for the solution at a number of grid points, at which the solution is
propagated in time using the values at previous times. These methods, while
simple to implement, are computationally ineﬃcient.
(b) The multistep explicit and implicit algorithms, such as the Adams, Adams–
Bashforth, and Adams–Moulton algorithms [51].
(c) The predictor-corrector methods, such as those by Milne and Shampine–
Gordon [51].
The multistep and predictor-corrector methods require sophisticated pro-
gramming, as their dependence on starting estimates and step sizes may cause
convergence and numerical stability problems. In comparison, Runge–Kutta
methods are much simpler to program, mainly because their solution begins
from a known initial condition, and their truncation error is easily controlled
in a straightforward manner by a variable step size. To solve a set of diﬀeren-
tial equations with a large diﬀerence in the time scales (called stiﬀequations),
certain implicit multistep algorithms have been especially adapted, such as the
ode23tb and ode23s algorithms of MATLAB [53].
A.3 Runge–Kutta–Nystr¨om Algorithms
When solving a certain class of astronautical problems, such as those involving
Cowell’s and Encke’s formulations for lunar and interplanetary travel (Chap-
ter 6), the low-order time-integration methods given above prove unsuitable,
as they result in an accumulation of truncation error over the long times
of ﬂight. For such problems, the equations of motion can be written in the
following form:
dx
dt = y(t),
dy
dt = f(t, x),
(A.13)
with the initial condition
x(0) = x0; y(0) = y0 .
(A.14)
The Runge–Kutta–Nystr¨om (RKN) method is suitable for integrating the
above set of implicit diﬀerential equations with a high order (thus small trun-
cation error), and a relatively smaller number of stages compared with the
traditional Runge–Kutta algorithm of the same order. The RKN solution of
order p and stages s is expressed as follows:
x(h) = x0 + hy0 + h2
s−1

k=0
akzk + O(hp+1),
y(h) = y0 + h
s−1

k=0
bkzk + O(hp+1),
(A.15)

A.3 Runge–Kutta–Nystr¨om Algorithms
535
where zk refers to the following functional evaluations:
zk = f
#
αkh, x0 + αkhy0 + h2
k−1

i=0
ckizi
$
(k = 1, 2, . . ., m −1) .
(A.16)
Although the number of stages for a given order is reduced in the RKN al-
gorithms, the determination of coeﬃcients ak, bk, αk, cki requires the solution
of nonlinear constraint equations. Battin [11] presents the procedure for solv-
ing the constraint equations for RKN algorithms up to the eighth order. For
p = 8, we have s = 8, but 36 constraint equations and 5 free parameters.
Consequently, a signiﬁcant eﬀort is necessary for evaluating the coeﬃcients,
which are then stored and utilized in the solution.
It is possible to achieve a still-higher accuracy with the use of time-step
control in a higher-order RKN algorithm. In such a case, time-step control
may consider minimizing the truncation error in either x only [55] or both
x, y simultaneously [54]. In such applications with adjacent order solutions,
the higher-order solution is used to control the step size, h, while the free
parameters of the lower-order solution are retained for eﬃciency.
Example A.2. Battin [11] presents the following elegant formulation for a
sixth-order RKN algorithm with only ﬁve stages:
x(h) = x0 + hy0 + 1
24h2[2z0 + (5 +
√
5)z2 + (5 −
√
5)z3] + O(h7),
y(h) = y0 + 1
12h(z0 + 5z2 + 5z3 + z4) + O(h7) ,
(A.17)
where
z0 = f(0, x0),
z1 = f
 1
20(5 −
√
5)h, x0 + 1
20(5 −
√
5)hy0 + 1
80(3 −
√
5)h2z0

,
z2 = f
 1
10(5 −
√
5)h, x0 + 1
10(5 −
√
5)hy0
+ 1
60h2[(3 −
√
5)z0 + (6 −2
√
5)z1]

,
(A.18)
z3 = f
 1
10(5 +
√
5)h, x0 + 1
10(5 +
√
5)hy0
+ 1
60h2[(6 + 2
√
5)z0 −(8 + 4
√
5)z1 + (11 + 5
√
5)z2]

,
z4 = f

h, x0 + hy0 −1
12h2[(3 +
√
5)z0
−(2 + 6
√
5)z1 + (2 + 2
√
5)z2 −(9 −3
√
5)z3]

.
This algorithm involves only four free parameters.

Answers to Selected Exercises
Chapter 2
2.2 θ = cos−1 c33, ψ = tan−1 −c31
c32 , φ = tan−1 c13
c23 . Singularities: θ = 0, ±π.
2.3 For a symmetric set, (ψ, θ, φ): cos Φ
2 = cos θ
2 cos ψ+φ
2 ,
e =
1
2 sin Φ
⎛
⎝
sin θ(cos ψ + cos φ)
sin θ(sin ψ −sin φ)
(1 + cos θ) sin(ψ + φ)
⎞
⎠.
No.
2.7 (a) q1 = c12+c21
4q2
, q3 = c23+c32
4q2
, q4 = c31−c13
4q2
, q2 = ± 1
2
√1 −c11 + c22 −c33.
2.12
p = tan Φ
4
2 sin Φ
⎛
⎝
c23 −c32
c31 −c13
c12 −c21
⎞
⎠,
where Φ = cos−1{ 1
2(traceC −1)}.
2.14
dC
dt = −CS(ωI).
2.15
⎧
⎨
⎩
˙φ
˙θ
˙ψ
⎫
⎬
⎭=
⎛
⎝
1 sin φ tan θ cos φ tan θ
0
cos φ
−sin φ
0 sin φ sec θ cos φ sec θ
⎞
⎠
⎧
⎨
⎩
ωx
ωy
ωz
⎫
⎬
⎭.
Chapter 3
3.1
g =
⎧
⎨
⎩
gφ cos φ cos λ + gr sin φ cos λ
gφ cos φ sin λ + gr sin φ sin λ
−gφ sin φ + gr cos φ
⎫
⎬
⎭.

538
Answers to Selected Exercises
3.3 Gg = −GM
r3 [I −3irirT ], where ir = r/r.
Chapter 4
4.1 5.29515 km/s, 67.621 m/s2, −4.06455 × 10−4 rad/s2.
4.2 sin θ = r
R, v2
0 = a2
0
R
r
√
R2 −r2.
4.4 ge = (g −ω2R0 cos2 δ)id −ω2R0 cos δ sin δin.
4.5

v2 +
1
2m +
3
5m.
4.7 −2mΩ sin δ ˙riθ.
4.9
r = 87, 402.0875 km, θ = 187.6474◦, v = 1.0353996 km/s, φ =
−42.361169◦.
4.13 (a) 10.2774 km/s, (b) 48,499.955 km and 11.048 km/s, (c) 4141.709 s.
4.15 117.2187◦.
4.16
March 14, 2062. Position on July 6, 2006: r = 30.32896 a.u., θ =
173.95◦.
Chapter 5
5.2 ra = 6503.555 km, φ = −66.985◦.
5.3 7313.401 km.
5.5 r = (−1759.71083, 3563.80532, 5152.49334)T,
v = (−7.1299085, 0.1594425, −2.9848405)T,
δ = 52.35377◦, λ = 116.2789◦,
φ = −2.5799376◦, A = 125.053136◦.
5.7 (a) 3.66024 km/s, (b) 2.9083 km/s.
5.8 a = 6969.325 km, e = 0.73824595.
5.9 0.10002 km/s. Both impulses are opposite to instantaneous ﬂight direc-
tion.
5.10 442.57 mean solar days, 6.4367 km/s.
5.14 776.3544 km.
Chapter 6
6.1 92.6495◦.

Answers to Selected Exercises
539
6.2 a = 26561.76 km, e = 0.74105, i = 63.435◦, ω = 270◦.
6.6
t =
H
ρ0
√μRe
CDA
m
(e
h0
H −1) .
Chapter 7
7.1 10.8562 km/s.
7.3 0.0805 and 0.997.
7.6 t = 2.88T .
7.8 e = 0.9944.
Chapter 8
8.1 1151.72 kg.
8.2 30124.75 kg.
Chapter 9
9.3 18.3642 days.
9.4 ρ0 = 65 kg/m3, H = 15.9 km.
Chapter 10
10.1 63.9 m/s (indicated); 74.1 m/s (true); M = 0.226.
10.7 3.3163 × 10−7 m and 0.6538 m.
10.10
CD = sin2 θ + 1
s
'
π Tw
T sin θ + 2 cos2 θ.
10.11
CD = 2 + 2
3s
'
π Tw
T .

540
Answers to Selected Exercises
Chapter 11
11.2
˙m = 840.45 kg/s.
11.3 fT = 22, 861.45 N.
11.4
˙mf = 0.4536 kg/s.
11.5 5.3.
Chapter 12
12.2
˙r = v sin φ,
˙δ = v
r cos φ cos A,
˙λ = v cos φ sin A
r cos δ
,
m˙v = fT cos ϵ −D −mg sin φ,
˙A = v
r cos φ sin A tan δ,
mv ˙φ = mv2
r cos φ + fT sin ϵ + L −mg cos φ.
12.3 Flight is conﬁned to a vertical plane (A = const.):
˙h = v sin φ,
˙x = v cos φ cos A,
˙y = v cos φ sin A,
m˙v = fT cos ϵ −D −mg sin φ,
˙A = 0,
mv ˙φ = fT sin ϵ + L −mg cos φ.
12.4 (a) CL =

CDo
K . (b) CL =

CDo
3K . (c) CL =

3CDo
K .
12.5 30 min, 12 s.
12.6 (a) (L/D)max = 0.5/√KCD0 = 17.69. (b) smax = 4181.55 km; (L/D) =
15.32.
12.10 A = 288.2◦; 6.2 hr.
12.15 (a) ˙hmax =
fT −1
2 ρv2
j S(CD0+KC2
L)
mg
,
where
v = vx

x +
√
x2 + 3
√
3
,
CL = 2mg
ρSv2 ,
with x, vx given in Exercise 12.7.

Answers to Selected Exercises
541
(b) CL =

3CDo
K ; ˙hmax =
Pesh−2ρv3
pSCD0
mg
,
where
vp =
(
2mg
√
K
ρS√3CD0
.
12.16 ˙hmax = 35.49 m/s; v = 220.28 m/s; φ ≈9.3◦(small).
12.18
˙s = v,
m˙v = fT −D −μr(mg −L),
sG ≈
v2
T O
2 ˙v|v= vT O
√
2
,
where vT O = 1.2vs.
12.19
(a)

n −cos φ
n −cos φ0
 = e
−g
v2
0
(h−h0) .
(b) v = v0

n −cos φ0
n −cos φ
 .
12.20 v0 = 219.09 m/s; h = 1199.5 m.
12.21 n = 1.816.
12.22 (a) ˙A = g
√
n2 −1/v = 26.23◦/s; n = 9; v = 191.663 m/s.
(b) ˙A = 18.78◦/s; n = 9; v = 267.643 m/s.
12.23 (b) Subsonic: ˙A = 3.08◦/s; n = 1.767; v = 266 m/s.
Supersonic: ˙A = 3.23◦/s; n = 2.86; v = 466.57 m/s.
12.25
ds
dh = cot φ,
dv2
dh = −2

D
m sin φ + g

,
dφ
dh = −g
v2 cot φ.
12.26
v = vie−Be−h/H ,
where B .= −ρ0SHCD
2m sin φi is called the ballistic parameter.
For B > 0.5: maximum deceleration,
−˙v = −v2
i sin φi
2He,
occurs at h = H ln 2B.

542
Answers to Selected Exercises
For B ≤0.5: the largest deceleration,
−˙v = −v2
i Be−2B sin φi
H
,
occurs at h = 0.
For B > 1/3:
˙Qmax = −mv3
i sin φi
60He
occurs at h = H ln 3B.
For B ≤1/3: the largest heating rate,
˙Q = −mBe−3Bv3
i sin φi
20H
,
occurs at h = 0.
12.29
˙h = v,
m˙v = −˙mve −D −mg,
hf = −g (mf −m0)2
˙m2
+ ve
˙m

m0 −mf + mf ln mf
m0

,
vf = g mf −m0
˙m
−ve ln mf
m0
.
Chapter 13
13.10 ωp = 0.269 rad/s, ζp = 0.102, tsp = 145.7 s.
ωs = 8.71 rad/s, ζs = 0.511, tss = 0.9 s.
Chapter 15
15.1 Yes; no.
15.3 12 s, −40 ft/s2, 0.012 rad/s.

References
[1]
Whittaker, E.T.: Analytical Dynamics of Particles and Rigid Bodies. Cam-
bridge University Press, Cambridge (1965).
[2]
Wertz, J.R. (ed.): Spacecraft Attitude Determination and Control. Kluwer Aca-
demic Publishers, Dordrecht (1978).
[3]
Shuster, M.D.: A survey of attitude representations. J. Astronautical Sci., 41,
439–517 (1993).
[4]
Kreyszig, E.: Advanced Engineering Mathematics. Wiley, New York (2001).
[5]
Abramowitz, M., and Stegun, I.A.: Handbook of Mathematical Functions. Dover
Publications, New York (1974).
[6]
Lemoine, F.G., Smith, D.E., Rowlands, D.D., Zuber, M.T., Neumann, G.A.,
and Chinn, D.S.: An improved solution of the gravity ﬁeld of Mars (GMM-
2B) from Mars Global Surveyor. J. Geophysical Res., 106(E10), 23359–23376
(2001).
[7]
Britting, K.R.: Inertial Navigation Systems Analysis. Wiley Interscience, Som-
erset, NJ (1971).
[8]
Vallado, D.A.: Fundamentals of Astrodynamics and Applications. Kluwer Aca-
demic Press, Dordrecht (2001).
[9]
Chobotov, V.A.: Orbital Mechanics. American Institute of Aeronautics and
Astronautics (AIAA), Education Series, Washington, DC (1996).
[10]
Battin, R.H.: Astronautical Guidance. McGraw-Hill, New York (1964).
[11]
Battin, R.H.: An Introduction to the Mathematics and Methods of Astrody-
namics. AIAA Education Series, Reston, VA (1999).
[12]
Dunham, D.W., and Davis, S.A.: Optimization of a multiple Lunar–Swingby
trajectory sequence. J. Astron. Sci., 33, 275–288 (1985).
[13]
Well, K.H.: Use of the method of particular solutions in determining periodic
orbits of the earth-moon system. J. Astronautical Sci., 19, 286–296 (1972).
[14]
Byrnes, D.V.: Application of the pseudostate theory to the three-body Lambert
problem. J. Astronautical Sci., 37, 221–232 (1989).
[15]
Szebehely, V.: Theory of Orbits. Academic Press, New York (1967).
[16]
Hill, T.: An Introduction to Statistical Thermodynamics. Addison-Wesley,
Boston, MA (1960).
[17]
Committee on Extension to the Standard Atmosphere (COESA): U.S. Stan-
dard Atmosphere 1976. U.S. Government Printing Oﬃce, Washington, DC
(1976).

544
References
[18]
COESA: U.S. Standard Atmosphere 1962. U.S. Government Printing Oﬃce,
Washington, DC (1962).
[19]
Regan, F.J., and Anandakrishnan, S.M.: Dynamics of Atmospheric Re-entry.
AIAA Education Series, Washington, DC (1993).
[20]
Houghton, J.T.: The Physics of Atmospheres. Cambridge University Press,
Chester, NY (1977).
[21]
Schlichting, H.: Boundary Layer Theory. McGraw-Hill, New York (1962).
[22]
Anderson, J.D.: Fundamentals of Aerodynamics. McGraw-Hill, New York
(1991).
[23]
Anderson, D.A., Tannehill, J.C., and Pletcher, R.H.: Computational Fluid Me-
chanics and Heat Transfer. Hemisphere, Washington, DC (1984).
[24]
Schaaf, S.A., and Chambre, P.L.: Flow of Rareﬁed Gases. High-Speed Aero-
dynamics and Jet Propulsion, III, Fundamentals of Gas Dynamics, Princeton
University Press, Princeton, NJ (1958).
[25]
Chapman, S., and Cowling, T.G.: The Mathematical Theory of Non-Uniform
Gases. Cambridge University Press, Cambridge, U.K. (1991).
[26]
Polhamus, E.C.: Predictions of vortex-lift characteristics by a leading-edge
suction analogy. J. Aircraft, 8, 193–199 (1971).
[27]
Abbot, I., and Doenhoﬀ, A.: Theory of Wing Sections. McGraw-Hill, New York
(1949).
[28]
Hoak, D.E., et al.: USAF Stability and Control Datcom. Air Force Flight
Dynamics Laboratory, Wright-Patterson AFB, OH (1978).
[29]
Hayes, W.D., and Probstein, R.F.: Hypersonic Flow Theory. Academic Press,
New York (1959).
[30]
Kerrebrock, J.L.: Airbreathing Engines. MIT Press, Cambridge, MA (1974).
[31]
Hill, P.G., and Peterson, C.R.: Mechanics and Thermodynamics of Propulsion.
Addison-Wesley, Reading, MA (1964).
[32]
Mattingly, J.D., Heiser, W., and Daley, D.H.: Aircraft Engine Design. AIAA
Education Series, New York (1987).
[33]
Raymer, D.P.: Aircraft Design: A Conceptual Approach. AIAA Education Se-
ries, Washington, DC (1999).
[34]
Miele, A.: Flight Mechanics. Addison-Wesley, Reading, MA (1962).
[35]
Wing, D.J., et al.: Static internal investigation of a multiaxis thrust vectoring
nozzle with variable internal contouring ability. NASA Technical Paper, TP-
3628 (1997).
[36]
Hoerner, S., and Borst, H.: Fluid Dynamic Lift. Hoerner Fluid Dynamics,
Bricktown, NJ (1975).
[37]
Stoliker, P.C., and Bosworth, J.T.: Evaluation of high-angle-of-attack han-
dling qualities for the X-31A using standard evaluation maneuvers. NASA
TM-104322 (1996).
[38]
Opik, E.J.: Physics of Meteor Flight in the Atmosphere. Wiley Interscience,
Somerset, NJ (1958).
[39]
Loh, W.H.T.: Dynamics and Thermodynamics of Planetary Entry. Prentice-
Hall, Englewood Cliﬀs, NJ (1963).
[40]
Vinh, N.X.: Hypersonic and Planetary Entry Flight Mechanics. University of
Michigan Press (1980).
[41]
Jacobi, C.G.J.: Journal fur Math., 39, 293 (1849).
[42]
Junkins, J.L., and Turner, J.D.: Optimal Spacecraft Rotational Maneuvers.
Elsevier, Amsterdam (1986).

References
545
[43]
Tewari, A.: Modern Control Design with MATLAB and Simulink. Wiley, Chich-
ester (2002).
[44]
Tewari, A.: Optimal nonlinear spacecraft attitude control through Hamilton–
Jacobi formulation. J. Astronautical Sci., 50, 99–112 (2002).
[45]
Etkin, B., and Reid, L.D.: Dynamics of Flight: Stability and Control. Wiley,
New York (1995).
[46]
Blakelock,
J.H.:
Automatic
Control
of
Aircraft
and
Missiles.
Wiley-
Interscience, New York (1991).
[47]
Kim, J.W., Crassidis, J.L., Vadali, S.R., and Dershowitz, A.L.: International
Space Station leak localization using vent torque estimation. Proc. Intl. Astro-
nautical Congress, Paper IAC-04-A.4.10 (2004).
[48]
D’Azzo, J.J., and Houpis, C.H.: Linear Control System Analysis and Design:
Conventional and Modern. McGraw-Hill, New York (1988).
[49]
Using Simulink R⃝–Simulation and Model-based Design (Version 6). Math-
Works Inc., Natick, MA (2004).
[50]
Haines, G.A., and Leondes, C.T.: Eddy current nutation dampers for dual-spin
satellites. J. Astronautical Sci., 21, 1 (1973).
[51]
Atkinson, K.E.: An Introduction to Numerical Analysis. Wiley, New York
(2001).
[52]
Fehlberg, E.: Low-order classical Runge–Kutta formulas with stepsize control
and their application to some heat transfer problems. NASA TR R-315 (1969).
[53]
MATLAB R
⃝Mathematics (Version 7). MathWorks Inc., Natick, MA (2004).
[54]
Bettis, D.: Runge–Kutta–Nystr¨om algorithms. Celestial Mechanics, 8, 229–233
(1973).
[55]
Fehlberg, E.: Classical eighth- and lower-order Runge–Kutta–Nystr¨om formu-
las with stepsize control for special second-order diﬀerential equations. NASA
TR R-381 (1972).
[56]
Stiefel, E.L., and Scheifele, G.: Linear and Regular Celestial Mechanics.
Springer-Verlag, New York (1971).
[57]
Mrinal, K., and Tewari, A.: Trajectory and attitude simulation for aerocapture
and aerobraking. J. Spacecraft and Rockets, 42, 684–693 (2005).
[58]
Ericsson, L.E., Mendenhall, M.R., and Perkins, S.C.: Review of forebody in-
duced wing rock. J. Aircraft, 33, 253–259 (1996).
[59]
Hsu, C.H., and Lan, C.E.: Theory of wing rock. J. Aircraft, 22, 920–924 (1985).
[60]
Smail, L.L.: Trigonometry: Plane and Spherical. McGraw-Hill, New York
(1952).
[61]
Meirovitch, L.: Elements of Vibration Analysis. McGraw-Hill, New York
(1986).
[62]
Tewari, A.: Robust model reduction for a ﬂexible spacecraft. J. Guidance,
Control, and Dynamics, 21, 809–812 (1998).
[63]
Tewari, A.: Active vibration suppression of spacecraft with rate-weighted opti-
mal control and multi-mode command shaping. AIAA-2004-5296, AIAA/AAS
Astrodynamics Specialist Conference, Providence, RI (2004).
[64]
Bisplinghoﬀ, R.L., Ashley, H., and Halfman, R.L.: Aeroelasticity. Addison-
Wesley, Cambridge, MA (1955).
[65]
Garrick, I.E.: On some reciprocal relations in the theory of nonstationary ﬂows.
NACA TR 629 (1938).
[66]
Albano, E., and Rodden, W.P.: A doublet-lattice method for calculating lift
distributions on oscillating lifting surfaces in subsonic ﬂows. AIAA Journal, 7,
279–285 (1969).

546
References
[67]
Appa, K.: Constant pressure panel method for supersonic unsteady airload
analysis. J. Aircraft, 24, 696–702 (1987).
[68]
Ueda, T., and Dowell, E.H.: A new solution method for lifting surfaces in
subsonic ﬂow. AIAA Journal, 22, 348–355 (1984).
[69]
Tewari, A.: Doublet-point method for supersonic unsteady aerodynamics of
nonplanar lifting-surfaces. J. Aircraft, 31, 745–752 (1994).
[70]
Eversman, W., and Tewari, A.: Consistent rational function approximation for
unsteady aerodynamics. J. Aircraft, 28, 545–552 (1991).
[71]
Eversman, W., and Tewari, A.: Modiﬁed exponential series approximation for
Theodorsen function. J. Aircraft, 28, 553–557 (1991).
[72]
Tewari, A.: Output-rate weighted optimal control of aeroelastic systems. J.
Guidance, Control, and Dynamics, 24, 409–411 (2001).
[73]
Vreeburg, J.P.B., and Veldman, A.E.P.: Transient and sloshing motions in an
unsupported container. Physics of Fluids in Microgravity, 293–321 (2001).
[74]
Vreeburg, J.P.B.: Dynamics and control of a spacecraft with a moving, pulsat-
ing ball in a spherical cavity. Acta Astronautica, 40, 257–274 (1997).

Index
N -body problem, 47, 87
S-turns, 349
v-n diagram, 296, 326
absolute ceiling, 294
accelerated climb, 316
acceleration, 13, 61
accelerometer, 473, 487
Ackeret’s similarity rule,
258
active elements, 473
active ﬂutter suppression,
526
actuator, 436, 459
actuator disk, 266, 273
adiabatic, 222, 248, 274
advance ratio, 270
adverse yawing moment,
437
aeroassisted orbital
transfer, 334, 348
aeroassited orbital
transfer, 159
aerobraking, 159, 348
aerocapture, 159
aerodynamic, 2
aerodynamic bank angle,
237, 418
aerodynamic center, 428
aerodynamic control
torque, 415
aerodynamic force, 72,
233, 283
aerodynamic inertia, 429,
523
aerodynamic stabiliza-
tion, 486
aerodynamics, 415
aeroelasticity, 296, 520,
525
aeroservoelasticity, 526
Aerospace Block-Set, 5,
517
aerostatic, 2, 220, 233,
283
aerothermal loads, 334,
346
aerothermochemistry,
260
aerothermodynamic, 260,
334
afterburner, 276
ailerons, 2, 291, 437
aiming distance, 150
air-breathing, 79
airbreathing propulsion,
265
aircraft, 2
airfoil, 235, 256
airplane, 2, 234, 290
airplane category, 309
airspeed, 79, 242
airspeed indicator, 242,
297
altimeter, 242, 297
analog system, 460
analytic continuation,
525
analytical solution, 89
angle of attack, 234, 292,
418, 428
angular acceleration, 63
angular momentum, 81,
85, 370
angular momentum
conservation, 86,
100
angular velocity, 12, 31,
61, 78, 94, 284, 369
apoapsis, 95
apsidal rotation, 156
area ruling, 259
areal velocity, 91
argument of periapsis,
119, 339
arrival hyperbola, 159
ascending node, 118
aspect ratio, 257
asteroid, 143
asymmetric spacecraft,
381
asymptotically stable,
463, 464
atmosphere, 219
atmospheric density, 76,
171, 220, 296, 338
atmospheric entry, 334
atmospheric ﬂight, 2, 79,
233, 283, 414

548
Index
atmospheric pressure,
220
atmospheric temperature,
220
attitude, 19, 60
attitude control system,
354, 409, 457
attitude dynamics, 33
attitude kinematics, 30
attitude thrusters, 384
automatic ﬂight control
system, 326, 350
autopilot, 478
auxiliary variable, 144
Avogadro’s number, 227
axial load factor, 350
axisymmetric planet, 46
axisymmetric spacecraft,
377
azimuth, 63
ballistic entry, 336, 338,
512
ballistic vehicle, 2
bang-bang control, 387,
468
bank angle, 79, 298
Barker’s equation, 111
base density, 230
bending, 523
Bernoulli equation, 241,
266
Bessel functions, 524
blade-element theory, 271
blade-pitch angle, 270
block diagram, 457
body, 60, 85
body cone, 378
body frame, 370
body-ﬁxed frame, 78,
292, 372, 417, 495
Boltzmann equation, 253
Boltzmann’s constant,
195, 220
boundary layer, 242
boundary-layer, 337
Brayton cycle, 275
Breguet range condition,
297
bridging relation, 254
bulk viscosity, 245
burn-out, 355, 487
bypass ratio, 276
caloriﬁc value, 267
camber line, 257
canards, 2
ceiling, 269
celestial frame, 64, 118
center of mass, 45, 73, 77,
174, 287, 370, 416
central air-data ac-
quisition system,
297
centripetal acceleration,
63, 289, 422
Ceres, 143
chaotic systems, 185
characteristic coeﬃcients,
464
characteristic equation,
412, 433, 464
characteristic length, 227,
255
characteristic polynomial,
464
chemical nonequlibrium,
260
chord, 95
chord plane, 234
circular orbit, 93
circularization, 135
circulation, 522
circulatory ﬂow, 428
circumferential, 171
classical, 20, 118
closed form solution, 377
closed loop control, 459
closed-form solution, 90,
111, 170, 353
closed-loop control, 387
closed-loop guidance, 307
closest approach, 115
co-latitude, 50
colinear Lagrangian
points, 180
colinear solutions, 177
collision diameter, 227
combustion, 194
combustion chamber,
194, 274
complete expansion, 196,
198
complex conjugates, 17
complex plane, 17
components, 9
composition rule, 25, 28,
31
compressible ﬂow, 239,
247
computational ﬂuid
dynamics, 245
conduction, 246
conic section, 95
conservative, 46, 83, 154
conservative maneuver,
325
constant pressure speciﬁc
heat, 227
constant-pressure
speciﬁc-heat, 247
constant-speed propeller,
271
constant-volume speciﬁc-
heat, 247
constraint, 72
constraint equations, 532
continuity equation, 239
continuum ﬂow, 227, 238,
239, 339
continuum hypersonic
limit, 251
contol surface, 2
control, 457
control input, 459
control laws, 460, 500
control moment gyro-
scope, 400
control surface reversal,
296, 524
control system, 459
control theory, 460
control volume, 239
controllable plant, 472
controller, 404, 457
controls-ﬁxed condition,
436

Index
549
controls-free condition,
436
convection, 246
convergence, 5, 104, 110,
146
coordinate frame, 3, 9
coordinate transfor-
mation, 10, 284,
374
coordinated ﬂight, 291
coordinated turn, 79
coplanar maneuver, 130
coplanar motion, 175
core vehicle, 205
Coriolis acceleration, 63,
289, 422
corner speed, 326
Cowell’s method, 164
critical Mach number,
259
critical Reynolds number,
245
cross-wind, 309
cruise, 290
cruise climb, 294
cruising range, 364
cryogenic, 200
damped natural fre-
quency, 467
damping, 466
damping in pitch, 429
damping in roll, 437
damping in yaw, 437
damping ratio, 466
de-boost, 97, 103, 104,
171, 339
dead reckoning, 297
dead zone, 470, 481
deadband, 481
declination, 123
degrees of freedom, 3, 60,
72, 87, 247, 416
departure trajectory, 115
design load factor, 295
desired output, 459
desired state, 459
deterministic system, 458
Diesel cycle, 269
diﬀerential equations, 5,
33, 68, 77, 90, 179,
290, 372, 458
diﬀuse reﬂection, 254
diﬀuser, 273
diﬀusion, 274
digital controller, 473
digital system, 460
dihedral eﬀect, 437
direct, 146
directional gyro, 297
discretization, 463
displacement, 13, 81
disturbance, 416, 459
divergence, 296, 526
dominant poles, 467
downwash, 428
drag, 76, 79, 233, 290
drag coeﬃcient, 76, 158,
255, 296
drag-divergence Mach
number, 259
dual-spin spacecraft, 400,
404
Dutch-roll mode, 441
dynamic equations, 4,
284, 287, 338
dynamic pressure, 242
dynamic viscosity
coeﬃcient, 226, 242
earth–moon, 162, 173,
182
eccentric anomaly, 102
eccentricity, 93, 361
eccentricity vector, 92
ecliptic plane, 118
eigenvalue problem, 463
eigenvalues, 16, 375, 382,
463
eigenvectors, 16, 375, 463
electromagnetic rocket,
193
elementary rotation, 18,
20, 65, 121
elevation, 63
elevator, 2, 436
elevons, 436
ellipse, 95
ellipsoid, 56
elliptical orbit, 101
ellipticity, 51, 55
empennage, 2
Encke’s method, 164
energy, 81
energy conservation, 84
energy dissipation, 379,
382
energy equation, 248, 274
energy integral, 93
entropy, 248
entropy gradient, 260
entry capsule, 3
ephemeris, 129
equation of state, 221,
247
equations of motion, 3,
72, 87, 420
equator, 46
equatorial plane, 118
equilateral triangle
solutions, 177
equilibrium, 416
equilibrium attitude, 411
equilibrium point, 176,
416, 461, 511
equivalent shaft power,
268, 296
error, 459
estimated state, 471
Euler angles, 19, 67, 78,
80, 118, 379, 391,
411, 418, 438, 492
Euler axis, 16, 21
Euler symmetric
parameters, 23
Euler’s equation, 241
Euler’s equations of ro-
tational dynamics,
372
Euler’s formula, 24, 43
Euler’s theorem, 16
evolution, 30, 37
exosphere, 223
expansion fan, 249, 252
exponential atmosphere,
230
external force, 78

550
Index
external torque, 77, 370
factor of safety, 295
feedback, 404, 459
feedforward, 460
ﬁlter, 485
ﬁn volume ratio, 437
ﬁnal value theorem, 477
ﬁnite-diﬀerence method,
253, 534
ﬁnite-element method,
519, 520
ﬁns, 2, 234
ﬁxed-pitch propeller, 270
ﬁxed-step, 532
ﬂat-panel approximation,
254
ﬂat-planet approxima-
tion, 290, 294,
364
ﬂexible body, 60
ﬂight management
system, 297
ﬂight path, 59
ﬂight path angle, 95, 124,
418
ﬂow regimes, 227, 238
ﬂow separation, 235
ﬂuid dynamics, 238
ﬂuid element, 239
ﬂutter, 296, 524, 526
ﬂy-by-wire, 473
focus, 95
force of constraint, 81
forced response, 463
forward-diﬀerence, 166
four-stroke engine, 269
free molecular ﬂow, 253,
338
free parameters, 532
free-molecular ﬂow, 158,
227, 339
free-return trajectory,
184
free-stream, 255
frequency response, 466
frozen, 222, 247
fuel, 194
fuel–air ratio, 268
fuel-speciﬁc energy, 325
full-order observer, 472,
488
fully gimbaled gyroscope,
400
functional, 531
fuselage, 2, 234
fuselage pointing, 327
fusion rocket, 198
gain, 470
gain matrices, 471
gain scheduling, 491
gas dynamics, 247
generalized coordinates,
519
generalized mass, 519
generalized stiﬀness, 519
generating functions, 49
geoid, 57
geometric altitude, 222
geopotential altitude, 222
geosynchronous, 3, 137,
189, 199, 203
gimbal, 474
gimbal angle, 474
gimbal lock, 43
gimbal rate, 474
gimbaling, 401
glider, 2
gliding entry, 350
gliding range, 364
global positioning system,
297
gradient, 46, 83, 88, 160,
183
gravitational accelera-
tion, 46
gravitational potential,
47, 88
gravity gradient, 58
gravity gradient stabi-
lization, 412, 493,
495
gravity gradient torque,
409
gravity turn, 354
great circle, 302
Greenwich meridian, 129
ground eﬀect, 309
ground run, 308
ground track, 302, 332,
345, 350
groundspeed, 79
guidance, 354
gyroscope, 42, 474
gyroscopic ﬂight-control
system, 478
gyroscopic sensors, 473
Halley’s comet, 115
halo orbit, 183
Hankel functions, 524
heat shield, 349
helicopter, 280
heliocentric, 115, 163
Hermitian conjugate, 16
high-lift devices, 295,
296, 308, 313
high-temperature eﬀects,
260
Hohmann transfer, 136
holonomic, 72
homogeneous state
equation, 461
horizon, 79
horizon scanner, 493
horizontal stabilizer, 428
horizontal turn, 79
hover, 280
hydrostatic equilibrium,
222
hyperbola, 95
hyperbolic anomaly, 108
hyperbolic excess
velocity, 98
hyperbolic functions, 108
hyperbolic mean motion,
109
hyperbolic orbit, 108
hypergolic, 198
hypersonic ﬂow, 252
ideal momentum theory,
265, 280
idealization, 3, 74
impulse response, 466
impulsive maneuver, 129

Index
551
inclination, 119, 339
incompressible ﬂow, 239
indicial response, 466
induced drag, 237, 257
inertia, 466
inertia coupled dynamics,
446, 499
inertia tensor, 371
inertial, 32
inertial frame, 71
inertial measurement
unit, 297
inertial navigation
system, 478, 485
inertial spin rate, 381
initial condition, 5, 76,
185, 290, 377, 386
initial response, 463
input, 76, 457
input-shaping, 520
installation losses, 278
instantaneous turn rate,
294, 326
instrument ﬂight rules,
297
intake, 273
intake manifold pressure,
269
integrals of motion, 87,
91
internal combustion, 268
internal energy, 193
internal torque, 397
interplanetary, 3, 98, 163,
173
inverse-square rule, 45
inviscid ﬂow, 241
ion rocket, 193, 198
irrotational ﬂow, 241
isentropic ﬂow, 248
isothermal, 223
iterations, 104, 146, 211
Jacobi’s constant, 183
Jacobi’s integral, 183
Jeﬀery’s constants, 51
jet engine, 265, 273, 296
jet equation, 273
jetstream, 304
Jupiter, 115, 173
Kelvin’s theorem, 522
Kepler’s equation, 101,
102
Kepler’s laws of planetary
motion, 91
kinematic equations, 4,
29, 285, 335, 380
kinetic energy, 83, 174,
220
kinetic theory, 195, 246
Knudsen number, 227,
239, 338
Kutta condition, 522
Kutta–Joukowski
theorem, 522
lag parameters, 525
Lagrange matrix, 155
Lagrange’s coeﬃcients,
99, 106, 111, 144
Lagrange’s equations, 519
Lagrange’s planetary
equations, 155
Lagrange’s solution, 175
Lagrangian, 519
Lagrangian method, 85,
519
Lagrangian points, 180
Lambert’s problem, 123,
140, 163
Lambert’s theorem, 140
laminar ﬂow, 243, 338
landing, 313
landing gear, 309
Laplace transform, 386,
433, 462, 463, 525
lateral dynamics, 427,
436
lateral modes, 439
lateral plane, 378
latitude, 64
latitude functions, 498
launch direction, 356
launch vehicle, 3, 354
launch window, 139
leading edge, 234
leading edge radius, 257
leading-edge suction, 258,
317
leading-edge vortex, 258,
510
Legendre functions, 57
Legendre polynomials,
48, 154, 160
level ﬂight, 290
libration, 412, 499
lift, 79, 234, 290
lift coeﬃcient, 255, 296
lift coeﬃcient at zero
angle of attack, 255
lift curve slope, 255
lift-dependent drag
factor, 237, 255, 317
lift-to-drag ratio, 297,
349
lifting surface, 234
lifting-body, 349
limit cycle, 510
limit load factor, 295
line of nodes, 118
linear acceleration, 63
linear momentum, 72, 73
linear superposition, 460
linear system, 460
linear system theory, 385,
461
Lipschitz condition, 531
load factor, 295
local horizon frame, 52,
124, 284, 416
long-period modes, 182
long-range ﬂight, 297
longitude, 50, 64
longitudinal axis, 377
longitudinal dynamics,
426, 427
longitudinal modes, 431
longitudinal static
margin, 255, 428
longitudinal static
stability, 339
low-earth orbit, 3
lunar, 3
Mach number, 226, 247,
338

552
Index
Mach number indepen-
dence principle,
252, 339
magnetic eddy current
damper, 495
magnetic ﬁeld, 495
magnetic torquer, 492
Magnus eﬀect, 443
major principal axis, 379,
382
maneuver, 325, 394
maneuverability, 294,
326, 349
maneuvering entry, 336,
349
Mars, 159
mass distribution, 45, 50
MATLAB/Simulink, 5
matrix exponential, 38,
378, 382, 462
maximum lift coeﬃcient,
255, 295
maximum overshoot, 460
Maxwell’s equations, 260
Maxwellian distribution,
254
mean aerodynamic chord,
426
mean anomaly, 103
mean chord, 255
mean free path, 227, 238,
253
mean motion, 102
mean sidereal day, 128
mean solar day, 128
mean-eﬀective pressure,
269
Mercury, 162
meridian, 129
mesosphere, 223
method of characteristics,
253
military power, 278
minimal representation,
22, 29
minimum-fuel trajectory,
325
minimum-time trajectory,
325
minor principal axis, 382
missile, 3, 234
mission trade-oﬀ, 208
modal form, 520
modal frequency, 520
mode shape, 520
modeling, 3
modiﬁed Rodrigues
parameters, 29
molecular temperature,
223
molecular weight, 222
Molniya orbit, 157
moments of inertia, 372
momentum bias, 493
momentum exchange
devices, 397
multi stage rocket, 201
multi-axis rotation, 486,
499
multi-impulse transfer,
135
multistep method, 534
multivariable control
system, 486
nacelles, 2, 234
natural frequency, 466
Navier–Stokes equations,
244
navigation, 297, 302
Neptune, 162
neutral point, 428
Newton’s law of
gravitation, 45, 87
Newton’s laws of motion,
70
Newton’s method, 104,
146
Newtonian approxima-
tion, 260
Newtonian ﬂuids, 242
noise, 466
noncirculatory ﬂow, 523
nonconservative, 84, 235
nonequilibrium, 223
nonlinear, 68, 72, 76, 90,
179, 290, 372
nonlinear saturation, 484
nonrotating planet, 114
nonspherical gravity, 46
nonspherical planet
model, 290
normal acceleration, 295,
350, 529
normal load factor, 350
normal shock wave, 249,
274
normal stress, 244
normalized, 57
normally aspirated, 269
nozzle, 193
numerical integration, 5,
68, 164, 185, 376,
383, 394, 397, 500
numerical stability, 534
nutation, 382, 412
nutation angle, 378, 383
object, 139
oblate, 46, 381
oblique shock wave, 249
obliquity of ecliptic, 150
observable plant, 472
observer, 472
observer gain matrix, 472
open loop control, 459
open-loop control, 387
optimal, 135
optimal control, 471, 488,
520
optimal rocket, 210, 356
optimum climb trajecto-
ries, 324
orbit determination, 120
orbit equation, 95
orbit insertion burn, 159
orbital elements, 117, 192
orbital plane, 95
order of the system, 461
orthogonal, 10, 15, 17, 96
orthogonality, 32
osculating orbit, 164
Oswald’s span eﬃciency
factor, 257
Otto cycle, 269
outer bi-elliptic transfer,
151

Index
553
output, 457
output equation, 465
output feedback, 459
output rate, 526
overall eﬃciency, 267
overexpanded nozzle, 196
oxidizer, 194
p-eﬀect, 293
panel method, 514, 525
parabola, 95
parabolic drag polar, 296
parabolic escape velocity,
98
parabolic orbit, 111
parallel axes theorem,
374, 399
parallel feedback, 485
parallel staging, 205
parameter, 93
parasite drag, 237
parasite drag coeﬃcient,
255, 356
parking orbit, 137
partial derivative, 62
particle, 3, 45, 59, 81
passive elements, 473
patched-conic approxi-
mation, 163
path-independent, 83
payload ratio, 200, 355
pear-shaped, 51
pentagonal, 51
perfect gas, 221, 247, 265
performance, 200, 466
periapsis, 95
perifocal frame, 95, 105
period of motion, 103
perturbing acceleration,
154
phase angle, 138
phase-plane plot, 511
phugoid damping ratio,
434
phugoid mode, 432
phugoid natural fre-
quency, 434
PID tuning, 471
piecewise continuous, 463
piston engine, 268
pitch, 20, 411
pitch angle, 67, 80
pitch rate, 419
pitch-up manuever, 429
pitching moment, 234,
424
pitching moment
coeﬃcient, 255
pitot probe, 242
plane change maneuver,
130
plane of symmetry, 237,
286, 292, 424
planet-ﬁxed frame, 126,
283
planets, 46
plant, 457
plunge, 523
pogo oscillation, 527
polar coordinates, 91, 95
poles, 46, 466
polytropic exponent, 222
Pontryagin’s maximum
principle, 386
position, 72, 76
position vector, 45
post-stall ﬂight, 326, 508
potential energy, 84, 88,
174
potential function, 83
power, 84
power spectral density,
481
power-speciﬁc fuel
consumption, 268,
297
Prandtl number, 227, 246
Prandtl–Glauert similar-
ity rule, 253
Prandtl-Glauert similar-
ity rule, 258
precession, 378, 387
precession rate, 381
predictor-corrector
method, 534
pressure coeﬃcient, 258
pressure drag, 235, 243
pressure gradient, 243
principal angle, 16, 21,
40, 403
principal body-ﬁxed
frame, 374
principle of linear
superposition, 387
products of inertia, 372,
424
prolate, 381
propellants, 194
propeller engine, 296
propeller engines, 265,
268
proper, 15, 16
proportional control, 470
proportional derivative,
470
proportional integral
derivative, 471
propulsive eﬃciency, 267
propulsive force, 72
quasi-steady, 38
quasi-steady climb, 294,
308, 366
quaternion, 23, 25, 425,
514
quintic equation of
Lagrange, 177
radial velocity, 97
radiation, 246
ramjet engine, 273
ramp response, 466
random disturbance, 479
rareﬁed ﬂow, 238, 253,
338
rate gyro, 475
rate of climb, 294
rate of heat transfer, 246,
337, 352, 363
rate-integrating gyro, 478
rational function, 525
reaction control system,
384, 473
reaction wheel, 400, 412,
492
rectilinear, 70, 86

554
Index
rectilinear motion, 92, 95,
181
recurrence formula, 49,
161
reduced frequency, 523
reduced-order observer,
472
reference area, 255, 338
reference trajectory, 416
regression of nodes, 156
relative motion, 138, 160,
220, 234
rendezvous, 138
resolvent, 378
rest-to-rest maneuver,
387, 479, 521
restricted three-body
problem, 178
retro-rocket, 196
retrograde, 146, 362
Reynolds number, 227,
245, 338
right ascension, 123, 339
right ascension of
ascending node, 339
right ascension of the
ascending node, 119
right-hand rule, 10, 16
right-handed frame, 10,
13, 15
rigid body, 3, 32, 48, 60,
370
rise time, 467
rocket, 129, 193, 296, 353
rocket engine, 74
rocket equation, 197, 355
Rodrigues parameters, 27
roll, 20, 411, 436
roll angle, 67, 80
roll autopilot, 485
roll rate, 419
roll-subsidence mode, 440
rolling friction coeﬃcient,
308
rolling moment, 237, 291,
424
rotation, 13, 16
rotation matrix, 15, 65,
119, 374, 495
rotational dynamics, 370
rotational kinetic energy,
373, 376
rotational motion, 3, 59,
77, 369
rotorcraft, 2
round-oﬀ, 533
rudder, 2, 437
Runge–Kutta, 36, 68,
164, 290, 531
Runge–Kutta–Nystr¨om,
534
scalar part, 23
scalar product, 10
scale height, 230
Scramjet engine, 275
second-order system, 433,
466
sectorial, tesseral gravity,
56
semi-major axis, 95
semi-minor axis, 108
semi-parameter, 143
semirigid spacecraft, 378
sensor, 459
serial staging, 201
service ceiling, 294
servo-motor, 474
servo-tab, 436
servos, 489, 500
settling time, 430, 467
shear stress, 221, 242
shock cone, 249
shock expansion method,
253
shock wave, 248
short-period damping-
ratio, 436
short-period mode, 182,
432
short-period natural
frequency, 436
side force, 79, 237, 291
side force due to steady
sideslip, 437
sideslip, 237, 436
sideslip angle, 237, 292,
418
signum function, 470
similarity rule, 255
simulation, 5
single stage to orbit, 196
single-axis rotation, 385,
386, 474, 479
single-input, single-
output system,
465
single-stage rocket, 199
single-stage to orbit, 275
singular representation,
22, 23, 28, 29, 35
singularity functions, 466
six-degree-of-freedom
model, 499, 508
six-degree-of-freedom
simulation, 448, 507
skew-symmetric matrix,
24, 28, 29, 31, 37,
42, 155, 400
skin friction coeﬃcient,
245
skin friction drag, 235,
243, 337, 350
skip entry, 345
slipstream speed, 266
slosh, 527
solar radiation pressure,
492
solar system, 162
sounding rocket, 353
space capsule, 336, 339
space cone, 378
Space Shuttle, 337
space shuttle, 94, 103,
104, 106, 349
spacecraft, 3
speciﬁc angular momen-
tum, 90
speciﬁc energy level, 325
speciﬁc excess power,
294, 324
speciﬁc excess thrust, 294
speciﬁc gas constant, 221,
247
speciﬁc heat ratio, 222
speciﬁc impulse, 198
speciﬁc-heat ratio, 247

Index
555
specular reﬂection, 254
speed of sound, 226, 247
sphere of inﬂuence, 161
spherical coordinates,
127, 283
spherical harmonics, 46
spherical planet model,
290
spherical trigonometry,
125, 362
spin maneuver, 479
spin stabilization, 377,
387
spin-up maneuver, 387
spiral divergence mode,
442
spoilers, 295, 296
stability, 5, 180, 377, 464
stability axes, 417
stability criteria, 465
stability derivatives, 425
stable equilibrium, 376,
381
stages, 199
stagnation pressure, 242
stagnation temperature,
248, 274
stall, 236, 295, 325
stalling angle of attack,
236, 255
stalling speed, 308, 313
standard atmosphere,
221, 223
standard sea level, 222
state, 458
state equation, 461
state equations, 377
state feedback, 459
state space, 458
state variables, 458
state-transition matrix,
100, 382, 461
static directional
stability, 437
static equilibrium, 519
static longitudinal
stability, 428
static propeller thrust,
271
static stability, 237
static vent, 242
stationary frame, 34, 61,
71
steady, 79
steady ﬂow, 238
steady state, 463
steady wind, 305
steady-state error, 471
steady-state response,
460
stiﬀequations, 489, 534
stiﬀness, 466
stochastic system, 458
strap-on boosters, 205
stratosphere, 223
streamline, 235
streamtube, 239
stress tensor, 244
strictly proper, 465
strong shock solution,
251
structural dynamics, 518
structural ratio, 199, 356
structural vibration, 487
Stumpﬀfunctions, 144
suborbital trajectory, 362
subsonic combustion, 274
subsonic ﬂow, 247
summing junction, 459
sun synchronous, 156
sun–Jupiter, 182, 191
supercharged, 269
supermaneuver, 326
supersonic combustion,
274
supersonic ﬂow, 247
sustained turn rate, 294
Sutherland’s law, 226
swing-by, 189
switching relay, 468
symmetric, 20
symmetrical airfoil, 257
synodic period, 138
system, 457
tail, 2, 234
tail slide, 431
take-oﬀ, 308
take-oﬀdistance, 309
take-oﬀrotation phase,
309
take-oﬀtransition phase,
308
tangent circle, 102
tangential velocity
impulse, 135
target, 138
Taylor series, 103, 425,
532
temperature inversion,
224
Theodorsen function, 523
thermal conductivity
coeﬃcient, 227, 246
thermal eﬃciency, 267
thermal equilibrium, 219
thermal lapse rate, 224
thermal protection
system, 353
thermal rocket, 193
thermodynamic variables,
220
thermosphere, 223
thickness ratio, 257
third-body perturbation,
159
three-axis stabilized, 384
three-body problem, 173
throttled, 194
thrust, 75, 79, 129, 193,
290
thrust power, 267
thrust vectoring, 293,
326, 354, 415, 443
thrust-speciﬁc fuel
consumption, 273,
297
thrust-to-weight ratio,
294, 316
time derivative, 12, 31,
38, 89, 166, 284,
376, 420
time lag, 428
time of periapsis, 101
time step, 33, 531
time-invariant, 377, 462
time-marching, 33, 166

556
Index
time-optimal control,
386, 470
time-varying, 33, 38, 461,
462, 491, 496
Tisserand’s criterion, 192
tolerance, 104, 110, 146,
397
torque impulse, 385
torque-free motion, 376
torsion, 523
total acceleration, 63, 78
total energy, 46, 84
total velocity, 71, 78
touch down, 316
trace, 17
trailing edge, 234
trajectory, 59
transatmospheric ﬂight, 3
transfer function, 465
transfer matrix, 465, 525
transition ﬂow, 227, 253
translation, 13
translational motion, 3,
59, 77, 284
transonic, 247
transpose, 10
triangular Lagrangian
points, 180
trim, 237, 295
trim tab, 436
Trojan asteroids, 182
tropopause, 223, 297
troposphere, 223
true anomaly, 95
truncation error, 5, 531
tuck-under, 450
turbine core, 272, 273
turbine engines, 273
turbine-inlet tempera-
ture, 276
turbo-charger, 269, 296
turbo-ram-rocket, 275
turbofan, 273, 275, 276
turbojet, 272, 273, 275
turboprop, 272, 273, 296
turboshaft, 273
turboshaft engine, 272
turbulent ﬂow, 243, 338
turn, bank, and slip
indicator, 297
two-body problem, 89
two-point boundary-value
problem, 140, 190
two-stage, 356
two-stroke engine, 269
underexpanded nozzle,
196, 273
unit impulse, 385, 466
unit ramp, 387, 466
unit step, 386, 466
unit vector, 9
universal gas constant,
221
universal gravitational
constant, 45, 76, 88,
174
universal variable, 144
unstable, 182, 464, 486
unsteady aerodynamics,
521
variable mass body, 74
variable-pitch propeller,
270
variable-speed control
moment gyroscope,
400
variable-step, 533
variation of parameters,
154
vector, 9
vector product, 10
velocity, 13, 61
velocity azimuth, 124,
418
velocity impulse, 129, 197
Venus, 159
vernal equinox, 118
vertical speed indicator,
297
vertical/short take-oﬀ
and landing, 293
vibration, 518
vibration suppression,
520
viscous interactions, 260
visual approach-slope
indicator, 316
vortex shedding, 523
Wagner’s function, 524
washout, 257
wave drag, 251, 317
weak shock solution, 251
weathercock stability, 291
wetted area, 246
white noise, 479, 485,
489, 492
wind, 79
wind axes, 79, 286, 417,
514
wind shear, 305
winds, 304
winds-aloft, 304
wing twist, 257
wing-rock motion, 510
wing-tip vortices, 257
wings, 2, 234, 290
work done, 81, 88
yaw, 20, 411, 436
yaw angle, 67, 80
yaw rate, 419
yawing moment, 237, 424

