1 
Introduction To Genetic 
Algorithms 
               Cse352 
Professor Anita Wasilewska 

2 
Overview 
n  Introduction To Genetic Algorithms (GA) 
n  GA Operators and Parameters 
n  Genetic Algorithms To Solve The Traveling 
Salesman Problem (TSP) 
n  Summary 
 

3 
References 
 
n  D. E. Goldberg, ‘Genetic Algorithm In Search, 
Optimization And Machine Learning’, New York: 
Addison – Wesley (1989) 
n  John H. Holland ‘Genetic Algorithms’, Scientific 
American Journal, July 1992. 
n  Kalyanmoy Deb, ‘An Introduction To Genetic 
Algorithms’, Sadhana, Vol. 24 Parts 4 And 5. 
n  T. Starkweather, et al, ‘A Comparison Of Genetic 
Sequencing Operators’, International Conference On 
Gas (1991) 
n  D. Whitley, et al , ‘Traveling Salesman And Sequence 
Scheduling: Quality Solutions Using Genetic Edge 
Recombination, Handbook Of Genetic Algorithms, New 
York 

4 
References 
WEBSITES 
n  www.iitk.ac.in/kangal 
n  www.math.princeton.edu 
n  www.genetic-programming.com 
n  www.garage.cse.msu.edu 
n  www.aic.nre.navy.mie/galist 

5 
History Of Genetic Algorithms 
n  “Evolutionary Computing” was introduced in the 1960s 
by I. Rechenberg 
n  John Holland wrote the first book on Genetic 
Algorithms ‘Adaptation in Natural and Artificial 
Systems’ in 1975 
n  In 1992 John Koza used genetic algorithm to evolve 
programs to perform certain tasks 
n   He called his method “Genetic Programming” 
 

6 
What Are Genetic Algorithms? 
    
 
   Genetic Algorithms are search 
   and optimization techniques 
   based on Darwin’s Principle of  
   Natural Selection 

7 
 Darwin’s Principle Of Natural Selection
  
n  IF there are organisms that reproduce, and  
n  IF offsprings inherit traits from their progenitors, and  
n  IF there is variability of traits, and  
n  IF the environment cannot support all members of a 
growing population,  
n  THEN those members of the population with less-
adaptive traits (determined by the environment)  
    will die out, and  
n  THEN those members with more-adaptive traits 
(determined by the environment) will thrive  
 
The result is the evolution of species 

8 
Basic Idea Of Principle Of Natural 
Selection 
 
 
“Select The Best, 
 Discard The Rest” 

9 
An Example of Natural Selection 
n  Giraffes have long necks    
     
     Giraffes with slightly longer necks could feed on leaves of higher 
branches when all lower ones had been eaten off 
     à   They had a better chance of survival. 
     !   Favorable characteristic propagated through generations of 
giraffes. 
     !   Now, evolved species has long necks. 
 
     NOTE: Longer necks may have been a deviant characteristic 
(mutation) initially but since it was favorable, was propagated over 
generations. Now an established trait. 
 
     So, some mutations are beneficial  

10 
Evolution Through Natural Selection 
 
   Initial Population Of Animals 
 
 Struggle For Existence-Survival Of the Fittest 
  
 Surviving Individuals Reproduce, Propagate Favorable 
Characteristics 
 
  Millions Of Years 
Evolved Species  
(Favorable Characteristic Now  A Trait Of Species) 

11 
    
 
   Genetic Algorithms implement 
Optimization Strategies  
   by simulating  
   evolution of species through natural 
selection 

12 
Working Mechanism Of GA 
Begn
n 
Initialize 
population 
Optimum 
Solution? 
T=T+1 
Selection 
Crossover 
Mutation              
N 
Evaluate 
Solutions 
Y 
Stop 
T =0 

13 
Simple Genetic Algorithm 
Simple_Genetic_Algorithm() 
 { 
 Initialize the Population; 
 Calculate Fitness Function; 
 
 While(Fitness Value != Optimal Value) 
 
 { 
 
 Selection;//Natural Selection, Survival 
Of Fittest
 
 
 
  
 
 
 Crossover;//Reproduction, Propagate 
favorable characteristics 
 
 
 
 Mutation;//Mutation 
 
 
 Calculate Fitness Function; 
 
 } 
 } 

14 
Nature to Computer Mapping 
Nature 
Computer 
Population 
Individual 
Fitness 
Chromosome 
Gene 
Reproduction 
Set of solutions. 
Solution to a problem. 
Quality of a solution. 
Encoding for a Solution. 
Part of the encoding of a solution. 
Crossover 

15 
GA Operators and 
Parameters 
 
 

16 
Encoding 
    
ENCODING  is a  process of representing the 
solution in the form of a string that conveys the 
necessary information. 
 
n  Just as in a chromosome, each gene controls a 
particular characteristic of the individual, similarly, each 
bit in the string represents a characteristic of the solution 
 

17 
Encoding Methods 
n  Binary Encoding – Most common method of 
encoding. 
n  Chromosomes are strings of 1s and 0s and each 
position in the chromosome represents a particular 
characteristic of the problem. 
 
 
 
11111110000000011111 
Chromosome B 
10110010110011100101 
Chromosome A 

18 
Encoding Methods 
n  Permutation Encoding – Useful in ordering 
problems such as the Traveling Salesman Problem 
(TSP) 
n    In TS  every chromosome is a string of numbers, 
each of which represents  a city to be visited. 
 
8  5  6  7  2  3  1  4  9 
Chromosome B 
1  5  3  2  6  4  7  9  8 
Chromosome A 

19 
Encoding Methods 
n  Value Encoding – Used in problems where 
complicated values, such as real numbers, are used and 
where binary encoding would not suffice. 
    Good for some problems, but often necessary to develop 
some specific crossover and mutation techniques for 
these chromosomes.  
 
(left), (back), (left), (right), (forward) 
Chromosome B 
1.235  5.323  0.454  2.321  2.454 
Chromosome A 

20 
Fitness Function 
 
   A fitness function quantifies the optimality of a 
solution (chromosome) so that that particular 
solution may be ranked against all the other 
solutions.  
n   A fitness value is assigned to each solution depending 
on how close it actually is to solving the problem  
 
n   Ideal fitness function correlates closely to goal  and   
is quickly computable. 
 
n  In TSP, f(x) is the  sum of distances between the cities 
in solution 
n   The lesser the value, the fitter the solution is 

21 
Recombination 
 
   Recombination is a process that determines 
which solutions are to be preserved and allowed 
to reproduce and which ones deserve to die out 
 
n  The primary objective of the recombination operator is 
to emphasize the good solutions and eliminate the bad 
solutions in a population, while keeping the population 
size constant  
 
n  “Selects The Best, Discards The Rest” 
n  “Recombination” is different from “Reproduction” 

22 
Recombination 
n 
Identify the good solutions in a population. 
 
n 
Make multiple copies of the good solutions. 
 
n 
Eliminate bad solutions from the population 
so that multiple copies of good solutions 
can be placed in the population. 

23 
Roulette Wheel Selection 
 
n  Each current string in the population has a slot 
assigned to it which is in proportion to it’s fitness 
n  We spin the weighted roulette wheel thus defined 
    n times (where n is the total number of solutions) 
 
n  Each time Roulette Wheel stops, the string 
corresponding to that slot is created 
 
    Strings that are fitter are assigned a larger slot and 
hence have a better chance of appearing in the new 
population 

24 
Example Of Roulette Wheel Selection 
No. 
String 
Fitness 
% Of Total 
1 
          01101 
169 
 
  14.4 
2 
         11000      
576 
49.2 
3 
         01000 
64    
 
   5.5 
 
4 
         10011 
361 
 30.9 
Total 
1170 
100.0 

25 
Roulette Wheel For Example 

26 
Crossover 
 
   Crossover is the process in which two 
chromosomes (strings) combine their genetic 
material (bits) to produce a  new offspring which 
possesses both their characteristics. 
 
n  Two strings are picked from the mating pool at random to 
cross over 
 
n  The method chosen depends on the Encoding Method 
 

27 
Crossover Methods 
n  Single Point Crossover-  a random point is 
chosen on the individual chromosomes (strings) and 
the genetic material is exchanged at this point 
 
 

28 
Crossover Methods 
n  Single Point Crossover 
Chromosome1 
11011 | 00100110110 
Chromosome 2 
11011 | 11000011110 
Offspring 1 
11011 | 11000011110 
Offspring 2 
11011 | 00100110110 

29 
Crossover  Methods 
n  Two-Point Crossover- two random points are 
chosen on the individual chromosomes (strings) and 
the genetic material is exchanged at these points 
Chromosome1 
11011 | 00100 | 110110 
Chromosome 2 
10101 | 11000 | 011110 
Offspring 1 
10101 |  00100 |  011110 
Offspring 2 
11011 |  11000 |  110110 
NOTE: These chromosomes are different from the last example 

30 
Crossover Methods 
n  Uniform Crossover- each gene (bit) is selected 
randomly  from one of the corresponding genes of the 
parent chromosomes 
 
Chromosome1 
11011 | 00100 | 110110 
Chromosome 2 
10101 | 11000 |  011110 
Offspring  
10111 | 00000 |  110110 
NOTE: Uniform Crossover yields ONLY 1 offspring 

31 
Crossover 
n  Crossover between 2 good solutions 
n   MAY NOT ALWAYS yield a better or as good a 
solution 
 
n  Since parents are good, probability of the child 
being good is high 
 
n  If offspring is not good (poor solution), it will be 
removed in the next iteration during “Selection”  

32 
Elitism   
   Elitism is a method in  which copies the best 
chromosome  are added to the new 
offspring population before crossover and 
mutation 
 
n  When creating a new population by crossover or 
mutation the best chromosome might be lost 
 
n  Elitism  lets GA to retain some number of the best 
individuals at each generation 
n   It has been found that elitism significantly improves 
performance 
 

33 
Mutation 
   Mutation is the process by which a string is 
deliberately changed so as to maintain diversity 
in the population set 
 
   We saw in the giraffes’ example, that mutations could be 
beneficial 
 
   Mutation Probability- determines how often the 
parts of a chromosome will be mutated.  

34 
Example Of Mutation 
n  For  chromosomes using Binary Encoding, randomly 
selected bits are inverted. 
Offspring 
11011 00100 110110 
Mutated Offspring 11010 00100 100110 
 
NOTE: The number of bits to be inverted depends on the Mutation Probability 

35 
Advantages Of GA 
n  Global Search Methods: GAs search for the 
function optimum starting from a population of points 
of the function domain, not a single one 
n   This characteristic suggests that GAs are global search 
methods 
n   They can, in fact, climb many peaks in parallel, reducing 
the probability of finding local minima, which is one of the 
drawbacks of traditional optimization methods 

36 
Advantages of GA 
n  Blind Search Methods:  
n  GAs only use the information about the objective 
function 
n   GAs do not require knowledge of the first derivative or 
any other auxiliary information 
n  They  allow a number of problems to be solved without 
the need to formulate restrictive assumptions 
n   For this reason, GAs are often called blind search 
methods.] 
 

37 
Advantages of GAs 
n  GAs use probabilistic transition rules 
  during iterations, unlike the traditional methods that 
    use fixed transition rules 
   This makes them more robust and applicable to a large 
range of problems. 

38 
Advantages of GAs 
n  GAs can be easily used in parallel machines 
n   Since in real-world design optimization problems, 
most computational time is spent in evaluating a solution, 
with multiple processors all solutions in a population can 
be evaluated in a distributed manner 
n   This reduces the overall computational time 
substantially 

39 
Genetic Algorithms To Solve 
The Traveling Salesman 
Problem (TSP) 

40 
The Problem 
 
 
  The Traveling Salesman Problem is defined 
as:   
   ‘We are given a set of cities and a symmetric distance 
matrix that indicates the cost of travel from each city to 
every other city.  
    The goal is to find the shortest circular tour, visiting 
every city exactly once, so as to minimize the total 
travel cost, which includes the cost of traveling from the 
last city back to the first city’. 

41 
Encoding 
n  We  represent every city with an integer  
 
n  Consider 6 Indian cities – 
    Mumbai,  Nagpur , Calcutta, Delhi , Bangalore and  
Chennai and assign a number to each. 
 
 
 Mumbai             1 
 
 
 Nagpur              2 
 
 
 Calcutta             3 
 
 
 Delhi                  4 
 
 
 Bangalore          5 
 
 
 Chennai             6 
 

42 
Encoding 
n  Thus a path would be represented as a sequence of 
integers from 1 to 6 
 
n  The path [1 2 3 4 5 6 ] represents a path from Mumbai to 
Nagpur, Nagpur to Calcutta, Calcutta to Delhi, Delhi to 
Bangalore, Bangalore to Chennai, and finally from 
Chennai to Mumbai  
n  This is an example of Permutation Encoding as the 
position of the elements determines the fitness of the 
solution. 

43 
Fitness Function 
n  The fitness function will be the total cost of the tour 
represented by each chromosome. 
 
n  This can be calculated as the sum of the distances 
traversed in each travel segment  
 
   The Lesser The Sum, The Fitter The Solution 
Represented By That Chromosome 

44 
Distance/Cost Matrix For TSP 
       Cost matrix for six city example.  
Distances in Kilometers 
1 
2 
3 
4 
5 
6 
1 
0 
863 
1987 
1407 
998 
1369 
2 
863 
0 
1124 
1012 
1049 
1083 
3 
1987 
1124 
0 
1461 
1881 
1676 
4 
1407 
1012 
1461 
0 
2061 
2095 
5 
998 
1049 
1881 
2061 
0 
331 
6 
1369 
1083 
1676 
2095 
331 
0 

45 
Fitness Function 
n  So, for a chromosome [4 1 3 2 5 6], the total cost of 
travel or fitness will be calculated as shown below 
 
n  Fitness   = 1407 + 1987 + 1124 + 1049 + 331+ 2095 
 
         = 7993 kms. 
n  Since our objective is to Minimize the distance, the 
lesser the total distance, the fitter the solution. 

46 
Selection Operator 
   We use Tournament Selection  
 
    As the name suggests tournaments are played between 
two solutions and the better solution is chosen and 
placed in the mating pool  
  
    Two other solutions are picked again and another slot in 
the mating pool is filled up with the better solution  

47 
Tournament 
6  3   4   5  2   1
8479
2  6   3  4   5  1
8142
4  1   3   2  5   6
7993
4   3  2   1  5   6
6872
3   6   4   1  2  5
8971
 4   1  3  2  5   6
7993
4   3   2  1  5   6
6872
 6  3   4   5  2   1
8479
 3   6   4  1   2  5
8971
5  2   6   4  3   1
8673
5   2   6  4  3   1
8673
 2   6   3  4  5   1
8142
4   3   2   1  5   6
6872
5   2  6   4  3   1
8673
4  1   3   2  5   6
7993
2  6   3   4  5  1
8142
4  3   2   1  5   6
6872
2   6  3   4  5   1
8142
Mating Pool

48 
Why we cannot use single-point 
crossover: 
 
n  Single point crossover method randomly selects a 
crossover point in the string and swaps the substrings.  
n  This may produce some invalid offsprings as shown 
below. 
   
 
4 1 3 2 5 6
  
4 3 2 1 5 6
4 1 3 1 5 6
4 3 2 2 5 6

49 
Crossover Operator 
 
n  We use the Enhanced Edge Recombination operator 
(T.Starkweather, et al,  'A Comparison of Genetic 
Sequencing Operators, International Conference of GAs, 
1991  ) . 
 
n  This operator is different from other genetic sequencing 
operators in that it emphasizes adjacency information 
instead of the order or position of items in the sequence.  
n  The algorithm for the Edge-Recombination Operator 
involves constructing an Edge Table first 

50 
Edge Table 
   The Edge Table is an adjacency table that lists links into 
and out of a city found in the two parent sequences. 
 
    If an item is already in the edge table and we are trying to 
insert it again, that element of a sequence must be a 
common edge and is represented by inverting it's sign.  

51 
Finding The Edge Table 
Parent 2
Parent 1
4  1   3  2   5  6
4  3   2  1   5  6
-4 
-5 
6 
-6 
2 
1 
5 
3 
1 
-6 
4 
  
4 
-2 
1 
3 
  
1 
5 
-3 
2 
5 
2 
3 
4 
 1 

52 
Enhanced Edge Recombination Algorithm 
1. 
Choose the initial city from one of the two parent tours. (It can be 
chosen randomly as according to criteria outlined in step 4). This 
is the current city 
2. 
Remove all occurrences of the current city from the left hand side 
of the edge table.( These can be found by referring to the edge-list 
for the current city) 
3. 
If the current city has entries in it's edge-list, go to step 4 
otherwise go to step 5 
4. 
Determine which of the cities in the edge-list of the current city has 
the fewest entries in it's own edge-list. The city with fewest entries 
becomes the current city. In case a negative integer is present, it 
is given preference. Ties are broken randomly. Go to step 2. 
5. 
If there are no remaining unvisited cities, then stop. 
6. 
 Otherwise, randomly choose an unvisited city and go to step 2. 

53 
 
 
 
 
 
 
 
 
Example Of Enhanced Edge 
Recombination Operator 
5 
2 
3 
4 
1 
 4 
 4  6 
-4 
-5 
6 
-6 
2 
3 
5 
3 
1 
-6 
4 
  
4 
-2 
1 
3 
1 
5 
-3 
2 
-5 
6 
  
-6 
2 
3 
5 
3 
1 
-6 
4 
-2 
1 
3 
1 
5 
-3 
2 
5 
2 
3 
1 
Step 1 
Step 2 

54 
Example Of Enhanced Edge 
Recombination Operator 
 4   6    5 
 4    6  5   1 
  
6 
2 
3 
5 
3 
1 
4 
-2 
1 
3 
1 
-3 
2 
2 
3 
1 
  
-5 
 
6 
  
2 
3 
5 
  
3 
1 
4 
  
-2 
1 
3 
  
1 
5 
-3 
2 
5 
2 
3 
1 
  
 
Step 3 
Step 4 

55 
Example Of Enhanced Edge 
Recombination Operator 
4     6     5    1   3 
6 
2 
3 
5 
3 
4 
  
-2 
3 
-3 
2 
2 
3 
1 
4    6    5     1    3    2 
  
6 
2 
5 
4 
-2 
3 
  
2 
2 
1 
 
 
 
 
Step 5 
Step 6 

56 
Mutation Operator 
 
n  The mutation operator induces a change in the 
solution, so as to maintain diversity in the population and 
prevent Premature Convergence 
n  We mutate the string by randomly selecting any two 
cities and interchanging their positions in the solution, 
thus giving rise to a new tour.  
 
4 
1 
3 
2 
5 
6 
  
4 
5 
3 
2 
1 
6 
  

57 
Input To Program 

58 
Initial Output For 20 cities : Distance=34985 km  
Initial Population 

59 
Final Output For 20 cities : Distance=13170 km 
Generation 4786 

60 
Summary 

61 
n  Genetic Algorithms (GAs) implement optimization 
strategies based on simulation of the natural law of 
evolution of a species by natural selection  
 
n  The basic GA Operators are: 
 
 Encoding 
 
 Recombination 
 
 Crossover 
 
 Mutation 
 
n  GAs have been applied to a variety of function 
optimization problems, and have been shown to be 
highly effective in searching a large, poorly defined 
search space even in the presence of difficulties such as 
high-dimensionality, multi-modality, discontinuity and 
noise. 

