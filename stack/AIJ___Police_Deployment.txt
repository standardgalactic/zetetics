When Security Games Hit Trafﬁc:
A Deployed Optimal Trafﬁc Enforcement System
Ariel Rosenfeld, Oleg Maksimov, Sarit Kraus
Bar-Ilan University
Israel
Abstract
Road accidents are the leading causes of death among youths and young adults worldwide. Efﬁcient trafﬁc enforcement is
an essential, yet complex, component in preventing road accidents. In this article, we present a novel model, an optimizing
algorithm and a deployed system which together mitigate many of the computational and real-world challenges of trafﬁc
enforcement allocation in large road networks. Our approach allows for scalable, coupled and non-Markovian optimiza-
tion of multiple police units and guarantees optimality. Our deployed system, which utilizes the proposed approach, is
used by the Israeli trafﬁc police and is shown to provide meaningful beneﬁts compared to existing standard trafﬁc police
enforcement practices.
Keywords: Security, Trafﬁc Enforcement, Deployed System
1. Introduction
1
About 1.35 million people die worldwide each year as a result of road accidents and between 20 and 50 million people
2
suffer disability or other severe injuries [1]. An essential component in mitigating serious trafﬁc accidents (accidents that
3
cause death or injury) is efﬁcient trafﬁc enforcement, which is based on giving drivers the feeling that they are likely to be
4
caught and sanctioned when breaking the law [2]. In fact, recent studies suggest that drivers respect trafﬁc laws mainly due
5
to enforcement concerns, rather than safety concerns (e.g., [3]). As a result, efﬁcient trafﬁc enforcement has been shown
6
to reduce a wide range of high-risk, illegal driving behaviors, including driving while under the inﬂuence of drugs/alcohol,
7
speeding, lack of seatbelt use and red-light running, and thus reduces road accidents (e.g., [4, 5, 6, 7] to name a few).
8
Unfortunately, trafﬁc police cannot cover the entire road network given its limited number of police cars and ofﬁcers [8].
9
Within the Security Games (SG) ﬁeld, optimal police allocation mechanisms for mitigating various types of crimes
10
Email address: ariel.rosenfeld@biu.ac.il (Ariel Rosenfeld)
Preprint submitted to Elsevier
October 28, 2020

have been developed. The generic SG framework consists of a defender (trafﬁc police) who has a limited number of
11
resources (police cars) to protect a large set of targets (road segments) from an adversary (reckless drivers) [9, 10]. To the
12
best of our knowledge, [11] is the only work in the scope of SG which addresses trafﬁc enforcement. The authors model
13
the problem as a Stackelberg Security Game (SSG) where trafﬁc police seek to apprehend reckless drivers who in turn
14
seek to avoid apprehension. In a SSG, the trafﬁc police commit to a mixed strategy where drivers can ﬁrst observe and
15
then respond as best as possible. In practice, trafﬁc enforcement seeks to reduce trafﬁc accidents (and not necessarily to
16
apprehend reckless drivers) [12]. Furthermore, due to the dynamic environmental factors which inﬂuence driving behavior
17
(weather, trafﬁc jams, etc.), drivers have been shown to act in a less strategical manner, responding to changes in their
18
environment, including the observed police presence in current and past rounds [13]. Therefore, SSGs seem unsuitable to
19
the task of preventing serious road accidents.
20
Non-strategical adversaries in SG settings have recently been modeled as opportunistic criminals which choose where
21
and when to commit a crime in real-time based on police presence and the attractiveness of the potential targets [14].
22
Opportunistic criminals are reactive to police actions and do not consider their behaviors’ effect on future police actions.
23
We adopt this approach here, modeling the drivers, and consequently accidents, as reactive to police allocations. However,
24
unlike [14], drivers may react to both present and past police enforcement allocations, making the authors’ Markovian
25
assumption unsuitable. For example, it has been shown that drivers continue to react to police presence long after the
26
enforcement operation has ceased (a phenomena also known as time and distance halo) [13]. Basilico et al. [15] have
27
investigated non-Markovian strategies for robotic patrols. However, the authors assume that the attacker is strategic, and
28
therefore the approach is inapplicable. To our knowledge, no work has efﬁciently addressed the non-Markovian property
29
in SG.
30
Most allocation mechanisms in SG simplify the computational task by assuming that planning for each police unit
31
separately will bring about a (near-)optimum solution [16]. However, this is not the case in trafﬁc enforcement. For
32
example, experts from the Israeli Trafﬁc Police (ITP) claim that if police cars are stationed at the same place and time,
33
their effectiveness in reducing trafﬁc accidents cannot be assumed to be greater than the effectiveness of a single police car
34
at the same point and time, a fact we leverage in this work. Furthermore, signiﬁcant beneﬁts may accrue from coordination
35
across multiple police units, e.g., allocating two police cars in adjacent road segments could have a stronger impact than
36
allocating a single police car. This notion relates to the coordinated actions notion in [17] which captures the combined
37
effects of multiple defenders guarding the same target simultaneously. As a result, the computational task of deriving
38
optimal trafﬁc enforcement allocation in order to prevent serious road accidents is both coupled and non-Markovian,
39
which makes it computationally intractable. Namely, the optimal allocation of trafﬁc enforcement at time t could depend
40
on the trajectories of all police cars (i.e., coupled) up to time t (i.e., non-Markovian).
41
2

In order to address these shortcomings, we ﬁrst formulate the TRAFFIC ENFORCEMENT ALLOCATION PROBLEM
42
(TEAP). We prove that deriving or approximating the optimal solution to a TEAP is NP-Hard, and remedy this hardness
43
by introducing an optimal novel algorithm called the RELAXED OPTIMIZATION SOLVER ENHANCER, or ROSE for short.
44
ROSE uses a master/slave optimization approach, aimed at reducing the computational burden of directly solving the
45
TEAP, and leverages common characteristics of TEAPs that have not been investigated in previous works. In an extensive
46
set of lab-based empirical evaluations, we show that ROSE favorably compares to several baseline approaches, achieving
47
a signiﬁcant speed-up, using both synthetic and real-world road networks.
48
Based on the promising results obtained in our lab-based evaluation (Section 4.1), we extended our model to make
49
it suitable for real-world deployment. Through a four month-long controlled ﬁeld study with the ITP, we show that the
50
results obtained in our lab-based evaluation translate well to the ﬁeld, resulting in an improved trafﬁc enforcement policy
51
as depicted by the number of accidents and average driving speeds in the deployment district compared to the control
52
condition.
53
As such, the contribution of this article is twofold: First, the theoretical TEAP modeling and the novel ROSE solution
54
technique. Second, the adaptation of these lab-based developments into a beneﬁcial real-world application which can be
55
adopted and extended by researchers and practitioners in the trafﬁc safety and security games ﬁelds.
56
All code and procedures used in this study are available at http://www.biu-ai.com/trafficPolice in order
57
to encourage other researchers to tackle the important and challenging task of preventing serious trafﬁc accidents.1
58
The remainder of this article is structured as follows: Section 2 presents the TEAP formulation and analyzes its proper-
59
ties. In Section 3 we present our solution approach, followed by its evaluation in the lab and in the ﬁeld (Section 4). Then,
60
in Section 5, we discuss the obtained results. Lastly, we summarize the work and highlight future research directions in
61
Section 7.
62
2. Trafﬁc Enforcement Allocation
63
We model the interaction between drivers and police as a repeated game over T(< ∞) rounds, which takes place on a
64
road network, represented as a graph G = ⟨V, E⟩where V = {v} is the set of intersections and E = {e = (u, v)} is the
65
set of road segments. We assume that no accidents occur off-road, and therefore E is the set of enforcement targets in this
66
work (intersection v is considered part of the road segments that share v, thus there is no need to consider v as a different
67
1Unfortunately, we are unable to release conﬁdential data provided by the ITP such as the number of police resources used, where and when trafﬁc
citations where given, etc.
3

target). Without losing generality, we assume that the time it takes to travel through each road segment is 1 round; this
68
assumption can be relaxed by including dummy vertices.
69
The trafﬁc police has k(<< |E|) police cars at its disposal. At each round t, the police places enforcement on a subset
70
of size k from E, which we refer to as the allocation at round t denoted at, such that the allocation respects the graph’s
71
connectivity constraints and no more than a single police car is assigned to any edge. Namely, at round t, each police car
72
can either stay in its current road segment (enforcing for a longer period of time) or move to an adjacent edge given at−1.
73
a1 can assume any subset of size k of E. We denote the trafﬁc police allocation history at round t as Ht = ⟨a1, . . . , at⟩.
74
We use the notation et to denote road e at round t, and H[et] as an indicator of whether a police car is assigned to road e
75
at round t. Simultaneously, drivers choose whether to obey the law (drive safely) or not at each road segment e ∈E.
76
We assume that drivers’ actions at round t are visible to the police. For example, the ITP, as with many other police
77
departments, uses anonymous cellular reports provided by commercial companies to evaluate the distribution of speeds on
78
each road in real-time. Other technological aids such as speed cameras are also in use. Note that while the police does
79
not consider the behavior of each driver individually, they do obtain aggregated statistics on trafﬁc behavior for the entire
80
road network. On the other hand, drivers are only exposed to a noisy signal regarding the police allocation. For example,
81
common applications such as WAZE and other technological instruments such as police scanners allow drivers to have an
82
indicator of police presence at et. However, these indicators are not completely accurate (police presence in a road segment
83
is not always reported in WAZE, an indicator of police presence may not be up-to-date, a police car may be covert, etc.).
84
As a result, the game is conducted under one-sided uncertainty. Due to this uncertainty, the drivers base their actions at et
85
according to at (although not completely visible) and the police’s past allocations (Ht−1), which together constitute Ht.
86
Following recent advancements in predictive policing, including the prediction model constructed in the course of this
87
study, and in the same spirit as done in previous works such as [18], we deﬁne the risk of accidents occurring at et as
88
risk(et). The risk function measures the likelihood that a serious trafﬁc accident will occur at et in the absence of police
89
enforcement (in the [0,1] range). We further deﬁne the effectiveness of enforcement as eff(Ht, et). eff measures the
90
effect that the police allocation history has on the risk of accidents occurring at et.
91
The trafﬁc police is interested in minimizing the total expected number of accidents occurring throughout the game.
92
Formally, it seeks to minimize the following objective of the optimization problem we denote as the TRAFFIC ENFORCE-
93
MENT ALLOCATION PROBLEM (TEAP):
94
minHT
X
t=1,...,T
X
e∈E
risk(et)(1 −eff(et, Ht))
(1)
risk(et) cannot be inﬂuenced by police enforcement but rather through modiﬁcation of the road’s characteristics (e.g.,
95
4

notation
meaning
t ≤T
Game round index.
et
Road segment e at round t.
at
Defender’s allocation in round t.
Ht
Defender’s allocation history at round t.
H[et]
Indicator whether police is present at et.
risk(et)
Likelihood of a car accident occurring at et
in the absence of police enforcement.
eff(et, Ht)
The effectiveness of police enforcement on et.
Table 1: Summary of key notations.
number of lanes), trafﬁc (e.g., reducing speed-limit), etc. On the other hand, eff heavily depends on police enforcement,
96
Ht. We assume both risk(et) and eff(et, Ht) are known to the police and can be computed in polynomial time.
97
A summary of the notations used in this article is available in Table 1.
98
The solution to Eq. (1) prescribes a pure strategy for the trafﬁc police. The police could optimize over all rounds
99
simultaneously, however this approach is computationally expensive; it needs to solve a possibly non-convex optimization
100
problem as the police must consider drivers’ responses (modeled within eff). Unfortunately, approximating the optimal
101
solution to a TEAP, within any constant factor, is hard even for a single driver and a single police car.
102
Theorem 1. TEAP cannot be approximated within any factor of c ≥1 in polynomial time, unless P = NP.
103
Proof. In order to prove the theorem, we give a reduction from SAT to TEAP with one driver and one police car: On input
104
Φ(x1, . . . , xn), construct n + 1 nodes V = {vi}, i = 1, . . . , n + 1. Then connect node i with node i + 1 (i = 1, . . . , n)
105
using 2 directed edges, one for xi = True and one for xi = False and a single directed edge from vn+1 to v1 representing
106
Satisfiable (S). Consider the resulting graph G = (V, E) as the road network for a TEAP with T = n + 1. A single
107
police car starts at v0. Let risk assume 0 for all edges at all rounds except for edge S at round t + 1, which assumes the
108
value of 1. Let eff assume 0 for all edges, rounds and allocation histories except for eff(S, Ht), which assumes the value
109
of 1 if the police trajectory (Ht) corresponds to a satisfying assignment for Φ(x1, . . . , xn) and 0 otherwise. Clearly, the
110
driver’s action (causing an accident at edge S or not) can be decided in polynomial time.
111
The above construction takes polynomial time. Assume to the contrary that such an approximation polynomial time
112
algorithm App(G) exists. If there is no satisfying assignment to Φ, then every trajectory the police car may take will
113
5

bring about an objective value of 1, thus App(G) ≥c. If there is a satisfying assignment, then the defender can take the
114
respective trajectory and receive a value of 0, hence App(G) = 0.
115
Two key computational challenges arise from the TEAP formulation. First, the arbitrary risk and eff, which can take
116
any polynomial time computable form and depend on an unbounded history of police actions (eff), pose a signiﬁcant opti-
117
mization challenge. Second, the space of possible police strategies (joint schedules for all police cars) grows exponentially
118
in the number of resources and the number of time steps which make the computation even more challenging.
119
3. Optimizing Police Strategy
120
In this work we derive an optimal pure strategy for trafﬁc enforcement for T steps. Our goal is to ﬁnd the pure strategy
121
that would minimize the total expected number of serious accidents. In our framing, any randomized mixed-strategy, which
122
is the combination of pure strategies, results in a greater or equal number of accidents than the optimal pure strategy, as in
123
[14].
124
Given Theorem 1, we resort to remedying the hardness of solving the TEAP by introducing an optimal novel algorithm
125
called the RELAXED OPTIMIZATION SOLVER ENHANCER, or ROSE for short. ROSE uses a master/slave optimization
126
approach, aimed at reducing the computational burden of directly solving the TEAP. It exploits the fact that no two police
127
cars are allowed to enforce the same road segment at the same time. ROSE is guaranteed to return an optimal solution,
128
hence, in the worst case, ROSE will run in exponential time. Nevertheless, experimental results (see Section 4) on both
129
synthetic and the Israeli road networks demonstrate that ROSE is able to derive an optimal solution signiﬁcantly faster
130
than competing approaches under various real-world conditions.
131
Before introducing ROSE, we ﬁrst cast the TEAP as a binary graph ﬂow problem and present an exponential sized
132
Binary Integer Program (BIP) for solving it.
133
3.1. TEAP as Graph Flow
134
Similar to other transition-based security formulations, we model the TEAP using a transition graph [19]. The transi-
135
tion graph is a compact representation which captures the spatio-temporal structure of the road network and allows us to
136
handle the exponential strategy space by avoiding the enumeration of all pure strategies. Technically, given a road network
137
G, we transform it into a T time-expanded graph GT such that each vertex v (edge e) is replicated T times, one for each
138
round, denoted vt (et).
139
Each vt in the transition graph is associated with the number of police cars that start their trajectories in it minus the
140
number of police cars that end their trajectory in it, denoted bvt. For example, bvt = 0 means that either no police cruiser
141
6

starts or ends its route in v at time t, or, more generally, the same number of police cruisers start and end their route in v at
142
time t. bvt is assumed to be known in advance and cannot be changed by the police.2 The resulting ﬂow problem can be
143
formulated as the following mathematical program:
144
min
HT
X
t
X
et
risk(et) · (1 −eff(et, Ht))
(2)
s.t
X
v′
t−1
Ht[(v′
t−1, vt)t−1]−
X
v′
t+1
Ht+1[(vt, v′
t+1)t+1] = bvt
∀vt ∈GT
(3)
HT [et] ∈{0, 1}
∀e, t
(4)
Constraints (3) and (4) are standard binary ﬂow constraints. Let Sol = {et|HT [et] = 1} denote the set of ets that were
145
assigned a unit of ﬂow (a police car) in the optimal assignment.
146
We transform the above mathematical program into a 0-1 integer linear program (or Binary Integer Problem, BIP for
147
short) of exponential size, using the following non-standard procedure. The procedure is intended to cast the original
148
optimization problem formulation into a unique structure that will then be exploited by our novel optimization technique –
149
ROSE (Section 3.2). risk(et) and eff(et, Ht) are enumerable; for every et and possible Ht (which is bounded in size by
150
2|V ||E||T |) one can conceptually calculate the value of risk(et)·(1−eff(et, Ht)) ofﬂine and store it in a table. For every
151
entry i in the table, let V aluei denote the value of risk(et)·(1−eff(et, Ht)) for a given et and assumed allocation history
152
Ht. We denote V isitedi = {et|Ht[et] = 1} as the set of ets that assumed the value of 1 under the allocation history of
153
table entry i. For every entry i we create a new binary variable pi which takes the value of 1 if Sol ∩V isitedi = V isitedi.
154
Mathematically, we add the constraint:
155
pi =
Y
et∈{V isitedi}
HT [et]
(5)
Equation (5) might seem non-linear at ﬁrst. However, it is rather easy to linearize it using a ﬁx-sized set of linear
156
constraints that will force the indicator pi to assume the correct value (an explanation of the procedure is available in
157
Appendix B).
158
For all table entries i, other than the empty allocation HT = ∅, there exists at least one table entry j such that V isitedj
159
is a strict (proper) subset of V isitedi. As such, if pi = 1 then pj = 1. In order to “isolate” the true value of some HT ,
160
2This formulation allows police cars to start and ﬁnish their paths at different times and locations.
7

we modify the optimization objective (2) using the inclusion-exclusion principle as follows: Let Pow(i) be the set of all
161
strict (proper) subsets of V isitedi.
162
minHT
X
t
X
et
X
i
pi(V aluei +
X
V isitedj∈P ow(i)
(−1)|V isitedj∩V isitedi|+1V aluej)
(6)
Intuitively, given an HT , we derive the true value of HT by appropriately adding and deducting the values associated
163
with all proper subsets of the visited ets according to the inclusion-exclusion rule. For interperability purposes, for a given
164
et and i, we shall refer to a summed term as penalty if the summed term is positive, and reward otherwise.
165
Clearly, the result is a BIP. Furthermore, the resulting BIP is not sensitive to the number of police cars. The correctness
166
of the above procedure easily follows that of the inclusion-exclusion principle. In order to understand the procedure better,
167
consider the following example:
168
Example 1. Assume a time-expanded graph with 2 vertices (v, u) expanded over 3 time steps (v1, u1, v2, u2, v3, u3) such
169
that v1 and u1 are connected to v2 and u2, and v2 and u2 are connected to v3 and u3. There are 2 guards, starting at
170
nodes v1 and u1, and they ﬁnish their trajectories at v3 and u3. Overall, the problem induces 8 binary decision variables,
171
written in short as Iv1,v2, Iv1,u2, Iu1,v2, Iu1,u2, etc. risk is set to 1 for all edges. eff is set to 1 for all edges and strategies
172
except for (v1, v2) which is set to 0.6 if Iv1,v2 = 1, 0.8 if Iu1,v2 = 1 and to 0.5 if both Iv1,v2 = 1 and Iu1,v2 = 1.
173
Technically, one can deﬁne 28 −1 new variables, each corresponding to a non-empty subset of the 8 binary decision
174
variables deﬁned above. However, given that only Iv1,v2 and Iu1,v2 = 1 bear an effect on the objective, it is sufﬁcient to
175
consider only three new variables, p1, p2 and p3, and the following three new constraints: p1 = Iv1,v2, p2 = Iu1,v2 and
176
p3 = Iv1,v2 · Iu1,v2. In simple words, p1 = 1 iff a guard traverses the (v1, v2) edge, p2 = 1 iff a guard traverses the
177
(u1, v2) edge and p3 = 1 iff p1 = p2 = 1. Considering the above 3 new variables, the modiﬁed optimization objective
178
is: minI 8 + (0.6 −1)p1 + (0.8 −1)p2 + (0.5 −(0.6 + 0.8) + 1)p3. Note that the terms associated with p1 and p2 are
179
rewards as placing a guard on the corresponding edges helps the optimizer lower the objective. The term associated with
180
p3 is a penalty as it lowers the effectiveness of the guards obtained though p1 and p2, thus obstructing the optimizer from
181
lowering the objective.
182
183
8

3.2. Linear Optimization Using ROSE
184
The resulting BIP of the procedure above cannot scale up due to the exponential number of variables and constraints
185
(see evaluation in Section 4). To overcome this limitation we introduce a novel master/slave-based optimization algorithm,
186
ROSE, Algorithm 1. The Master program consists of two levels: At the high level the Master program maintains a subset
187
of penalty terms, denoted P. At the low level a BIP solver is used to solve a relaxed BIP in which only a subset of penalty
188
terms are introduced along with their associated binary variables, pi. At the beginning of the execution, P contains all
189
penalty terms extracted from Eq. (6) (Line 3) and the low level solver generates a solution, Sol (Line 6), while considering
190
only pi variables associated with reward terms (Line 2) . Simply put, the solver is executed on a smaller scale optimization
191
problem which consists of only a subset of penalty terms (at the initial execution, an empty set). Given Sol, the Slave
192
program is used to examine whether any penalty term p ∈P is triggered (Line 7), that is, the Slave program (Lines 12-14)
193
checks whether any binary variable pi associated with a penalty term in P should assume the value of 1 given Sol. If no
194
penalty terms from P are triggered, the Slave returns an empty set, indicating that an optimal solution has been found and
195
ROSE terminates (Lines 8 and 9); otherwise, a set of penalty terms P ′ ⊆P is returned. The returned P ′ is injected into
196
the relaxed BIP, P ′ is removed from P by the Master and the process is repeated (Lines 10 and 11).
197
The Slave program can return any subset P ′ ⊆P as long as it obeys the following two rules: 1) P ′ = ∅if no penalty
198
terms from P are triggered under Sol; and 2) P ′ contains at least one penalty term (if such exists). We use an elementary
199
implementation of the Slave program, returning all triggered penalty terms from P. Namely, we enumerate all (relevant)
200
subsets of Sol and return the triggered penalty terms. The investigation of more elaborate Slave programs which predict
201
which penalty terms are most beneﬁcial to introduce, in terms of minimizing ROSE ’s run-time, is left for future work.
202
We demonstrate the use of ROSE in the following example:
203
Example 2. Using the same setup of Example 1, the set of penalty terms extracted from the original formulation consists
204
of only p3 and its associated value. Therefore, the relaxed BIP’s objective is: minI 8 + (0.6 −1)p1 + (0.8 −1)p2. With
205
the constraints of Example 1 in mind, it is clear that the generated solution Sol will result in p1 = p2 = 1. The Slave
206
program will then detect that p3 ∈P assumes the value of 1 and therefore injects it into the relaxed BIP and the process is
207
repeated. In the second iteration, no new penalty terms are triggered (as there are none), and the process is concluded.
208
It is well known that BIP solvers are sensitive to the number of constraints. Therefore, ROSE’s computational perfor-
209
mance depends on the number of penalty terms in P which can be avoided in the iterative penalty generation process. it is
210
hard to guarantee the computational beneﬁt of the approach in the general case. While ROSE may be inefﬁcient in some
211
cases (e.g., no penalty term can be avoided regardless of Slave implementation, as is the case in Example 2), in several
212
9

Algorithm 1 ROSE
Require: Time-expanded graph GT , BIP Solver Solver.
1: function MASTER
2:
BIP ←Initialize BIP with reward terms
3:
P ←Penalty terms
4:
Sol ←∅
5:
repeat
6:
Sol ←Solver(BIP)
7:
P ′ ←Slave(Sol, P)
8:
if P ′ = ∅then
9:
return Sol
10:
P = P \ P ′
11:
Introduce P ′ into BIP
12: function SLAVE(Sol,P)
13:
P ′ = {p|p ∈P ∧p is triggered by Sol}
14:
return P ′
settings, including realistic and real-world trafﬁc enforcement settings, it can bring about a signiﬁcant improvement in
213
runtime without jeopardizing the solution quality (see Theorem 1).
214
Proposition 2. ROSE always terminates and returns an optimal solution.
215
Proof. The Slave program introduces at least one penalty term to the relaxed BIP at each non-terminal iteration. Due to the
216
ﬁnite number of penalty terms, ROSE terminates after a ﬁnite number of steps. At each iteration, the value of each feasible
217
solution cannot decrease as ROSE only introduces penalty terms to the objective function. When ROSE terminates, all
218
penalty terms triggered by Sol have been injected into the relaxed BIP, therefore the relaxed BIP’s objective value under
219
Sol is the optimal value under both the relaxed BIP and the original BIP, and its objective value would not change if any
220
additional penalties from P were to be added to the objective function.
221
ROSE bears some similarity to the classic column generation approach [20]. The premise of both approaches is that
222
most of the variables will assume a value of zero in the optimal solution. As such, only a subset of variables needs to
223
be considered when solving the problem. However, the two differ in that column generation leverages the above idea to
224
generate only the variables which have the potential to improve the objective function while ROSE introduces variables
225
10

which deﬁnitely deteriorate the objective function yet must be taken into account in order to assert optimality.
226
Similar to other security settings, eff is assumed to be submodular [17]. Namely,
227
Deﬁnition 3. eff is submodular if for every et, e′
t and Ht ⊆H′
t, eff(et, Ht ∪{e′
t}) −eff(et, Ht) ≥eff(et, H′
t ∪
228
{e′
t}) −eff(et, H′
t)
229
A submodular eff means that performing an additional enforcement activity (allocating a police car at e′
t) has dimin-
230
ishing gains in effectiveness. In Section 4 we show the signiﬁcant runtime beneﬁts that can be generated by ROSE when
231
this property holds.
232
4. Evaluation
233
We evaluate our approach in two experimental settings: First, we perform a lab-based evaluation using a newly built
234
realistic simulation environment consisting of both synthetic and the Israeli road networks. Through this examination, we
235
demonstrate the strengths and limitations of ROSE . Second, following a year and a half-long process, we perform an
236
in-the-ﬁeld evaluation of our approach in a controlled study with the ITP. For reproducibility purposes and to facilitate
237
future research on trafﬁc enforcement, we release our simulation environment. Complete details, source code and data are
238
provided in http://www.biu-ai.com/trafficPolice.
239
4.1. Lab-based Evaluation
240
We ﬁrst describe our simulation environment followed by the competing approaches evaluated in this part of the study.
241
Then, we report the results obtained for the synthetic and the Israeli road networks.
242
4.1.1. Simulation Environment
243
Our simulation environment consists of 3 components: 1) Synthetic and Israeli road networks; 2) A state-of-the-art
244
prediction model for modeling risk; and 3) A submodular eff function. risk and eff are derived from 11 years of
245
accident data, extensive literature review on accident prevention and analysis and human expert knowledge from the ITP.
246
We will describe the main components below.
247
risk. We obtained a record of 11 years of accident reports from the Israeli Central Bureau of Statistics (2005-2015).
248
By cross-referencing these reports with additional sources such as the Israeli GIS database and weather reports, we were
249
able to characterize each accident using 117 features, including infrastructure characteristics (e.g., number of lanes), date
250
and time characteristics (e.g., weekend/weekday), weather (e.g., precipitation), trafﬁc (e.g., average speed), etc. The full
251
11

list of features is available in Appendix A. To the best of our knowledge, this is the largest set of features ever to be
252
used to predict serious car accidents. For comparison, the Indiana trafﬁc police use an intelligent accident prediction tool
253
http://www.in.gov/isp/ispCrashApp/main.html which is based on approximately 90 features which we
254
also use here. Experts in trafﬁc enforcement claim that only the Indiana and Tennessee State trafﬁc police use accident
255
prediction tools but we were only able to obtain the latter’s features. Using more than 30,000 accident records and under
256
sampling the “non-accident” class (see [21]), we trained a deep neural network model that, given 110 features representing
257
et, returns a value in the [0,1] range, acting as a proxy to the likelihood of an accident occurring at et.3 We compared our
258
prediction model to several baseline prediction models such as logistic regression, SVM and XGBoost (which is currently
259
in use by the Indiana trafﬁc police). Our model achieves an AUC of 0.87, outperforming logistic regression, SVM and
260
XGBoost which recorded 0.78, 0.77 and 0.82, respectively.
261
eff. We base eff on [22], which used a unique database to track the exact location of the Dallas Police Department’s
262
patrol cars throughout 2009 and cross-referenced it with the car accidents of that year. To the best of our knowledge, this
263
is the most recent investigation of the topic. The author found that if et is enforced, eff should assume a value of 36%.
264
However, enforcement effects are not restricted to the speciﬁc time and space in which the enforcement is performed. For
265
example, Time halo is the time and the intensity to which the effects of enforcement on drivers’ behavior continue after
266
the enforcement operations have been concluded. It has been recorded that longer enforcement efforts cause more intense
267
time halo effects that can last for hours and inﬂuence the next day(s) or even week(s) during the same time of day as
268
the enforcement. Distance halo is deﬁned as the distance over which the effects of an enforcement operation last after a
269
driver passes the enforcement site. The most frequent distance halo effects are in the range of 1.5 - 3.5 kilometers from the
270
enforcement site (see [13] for a review). Currently, there is no consensus on a mathematical modeling of these two halo
271
effects, separately or combined. In the absence of real-world data such as was used in [22], we resort to an expert-based
272
approach [23] and deﬁne eff in accordance with the ITP’s estimations.
We deﬁne time halo effects in the exponential
273
diminishing form 36
2k % where k ≥0 is the number of time-steps that have passed since the enforcement effort. To avoid
274
negligible effects, we prune the effect at k = 3. The Distance halo effect is deﬁned to be 5%, given that the two road
275
segments are adjutant. Given the police allocation, eff assumes a simple submodular form where eff takes the largest
276
applicable effect and adds half of each of the smaller appropriate effects to it. For example, if both et and et+1 are enforced
277
(and no other time or distance halo effects are appropriate), eff assumes 45% (= 36% + 18
2 %).
278
3Note that serious accidents are sporadic events in both time and space. Therefore, directly estimating the probability of accidents occurring at et is
extremely challenging.
12

We are currently investigating a more data-driven approach for modeling eff in Israel.
279
4.1.2. Competing Approaches
280
ROSE is compared with 4 baseline solutions: First, a Na¨ıve solver which solves the entire BIP (Eq. (6)) in its
281
general form. Second, a Random solver which for each police unit selects an action at random at each time step, resolving
282
conﬂicts locally. Third, a Greedy solver, which computes a greedy path for each individual police car iteratively, capturing
283
a (wrongly) assumed additivity in individual police car gains. Greedy considers a simpliﬁed version of eff which only
284
accounts for the marginal gains that an enforcement in a road segment will generate given the current allocation of other
285
police cars. Given the calculated path, Greedy updates the simpliﬁed eff given the visited road segments and continues
286
to the next police car. Finally, we compare ROSE with Domain Expert allocations from the ITP. We could not evaluate
287
Cartesian product solutions, which capture the joint effects of all police units, such as the ones presented in [24, 14], due
288
to their lack of scalability in the number of road segments (we were unable to solve road networks larger than 5 road
289
segments, which are unrealistic).
290
The resulting allocations are evaluated on the basis of two criteria: 1) Accidents, the expected number of accidents
291
(i.e., the objective value of Eq. (6)) normalized by the no-police enforcement condition; 2) Runtime and Scalability of
292
the deployed algorithm with respect to the number of police cars, road segments and the density of the road network [25].
293
The evaluation was done on a personal computer with 16 GB RAM and a CPU with 4 cores each operating at 4 GHz.
294
The BIP solver was GUROBI [26].
295
4.1.3. Synthetic Road Networks
296
We evaluate ROSE, Na¨ıve, Random and Greedy on a series of synthetic road networks. We used 2 sets of synthetic road
297
networks: Small networks (each consists of between 40 and 100 road segments in intervals of 10) and realistic networks
298
(each consists of between 200 and 400 road segments in intervals of 100). Connectivity between road segments (i.e.,
299
the network density) is randomized such that each two road segments are connected by an intersection with a probability
300
ranging between 0.05 and 0.15 (in intervals of 0.05), allowing for different topologies. risk uniformly samples a value
301
in the [0, 1] interval for each road segment and round and eff is deﬁned as in our simulation environment. The number
302
of police cars is set to either 5, 10 or 15 and T is set for either 8, 16 or 24. Overall, 270 networks were evaluated. A 30
303
minute timeout was set for all conditions and networks.
304
Accidents. As expected, ROSE and Na¨ıve return optimal allocations. On average, they reduce 22.7% and 5.3% of the
305
no-enforcement objective value (the expected number of accidents) in small and realistic networks, respectively. On the
306
other hand, on average, Random and Greedy reduce 1% of the no-enforcement objective value in both small and realistic
307
13

(a) Accidents/Police cars (T=8)
(b) Runtime/Police cars (T=24)
(c) Runtime/Size (T=24)
(d) Runtime/Density (T=24)
Figure 1: Synthetic road networks: results for the small networks set. In all Figures, the lower - the better.
networks. In realistic networks Greedy exceeded the timeout for all networks of size 300 and 400 and thus its quality
308
cannot be evaluated properly. In our trials, Random and Greedy did not come up with an optimal allocation in any of the
309
cases. Figures 1a and 2a present the results.
310
Runtime and Scalability. We begin by analyzing the non-optimal algorithms, aimed at reducing runtime. Random takes
311
negligible time under all settings (< 3 seconds). Greedy is linear in the number of police cars (it iteratively solves the
312
problem for each police car separately) but exponential in the size of the network. For example, for a network of size 100
313
with a density of 0.1, 10 police cars and T = 16, ROSE takes exactly 1 second to derive an optimal solution while Greedy
314
takes 289 seconds, and produces a suboptimal solution. Greedy reached the timeout for all realistic networks.
315
Analyzing the Na¨ıve and ROSE conditions head-to-head provides interesting insights. First, in all tested networks,
316
ROSE performed faster than Na¨ıve. On average, for small networks, ROSE requires only 19% of the runtime needed by
317
Na¨ıve. We were able to manually engineer circumstances in which Na¨ıve outperforms ROSE, mainly in very small net-
318
14

(a) Accidents/Police cars (T=8)
(b) Runtime/Police cars (T=24)
(c) Runtime/Size (T=24)
(d) Runtime/Density (T=24)
Figure 2: Synthetic road networks: results for the realistic networks. In all Figures, the lower - the better. Note that Na¨ıve and Greedy
exceeded the timeout and thus do not appear.
works (size < 40) or in networks with a high number of police cars (> 25). The runtime difference increases signiﬁcantly
319
depending on the network’s size and density but slightly decreases in the number of police cars and the network’s density.
320
Similar to Greedy, Na¨ıve was unable to solve most networks of size 200 and all networks of size 300 (and above) in 30
321
minutes time. See Figures 1b,1c, 1d, 2b, 2c and 2d.
322
4.1.4. Real-World Road Network
323
We evaluate ROSE using of the Israeli road network. Unlike for synthetic networks, for the Israeli road network we
324
used the risk prediction model available in our simulation environment. T was set to 8, 16 and 24, and the number of
325
police cars varied between 5 and 40 (in intervals of 5), with 24 settings in total. We also evaluate a Domain Expert condition
326
in which we asked an experienced ITP superintendent who specialized in trafﬁc enforcement to provide an allocation.
327
The Israeli road network is much larger than the synthetic networks analyzed previously, consisting of 715 road seg-
328
ments, but with a very low density (on average, each intersection connects between 3 and 4 road segments). Therefore, the
329
results display slightly different patterns.
330
15

The results show that for cases with 30 or fewer police cars, both in terms of quality and runtime, ROSE outperforms
331
the Na¨ıve, Greedy and Domain Expert conditions by a large margin. Speciﬁcally, in these cases, Na¨ıve achieves the
332
same solution quality as ROSE (a 5.5% decrease in the number of expected accidents), but requires up to 6 times longer
333
for runtime. For example, under T = 16 and 10 police cars, ROSE requires only 45 seconds compared to almost 4
334
minutes required by Na¨ıve. However, a transition occurs between 30 and 35 police cars. Speciﬁcally, while Na¨ıve and
335
ROSE achieve the same solution quality (averaging an 8% decrease in the number of expected accidents), Na¨ıve favorably
336
compares to ROSE . See Table 2 for the results.
337
Greedy and Random produced extremely poor solutions across the conditions, averaging less then 1% improvement
338
over the no-enforcement condition. Greedy required a signiﬁcantly longer runtime than ROSE and reached our timeout of
339
30 minutes in most cases. As expected, Random required negligible runtime under all settings (< 2 seconds). The Domain
340
Expert produced allocations where police cars were allocated permanently at the most risky road segments. The quality of
341
the proposed allocation was about 1%.
342
Note that Table 2 further shows that the runtime beneﬁts of ROSE are diminished as the number of police units
343
increases. The reason is simple: with the increase in the number of police cars, penalty terms are more likely to be
344
triggered by feasible solutions and thus more iterations are needed. Next, in the online evaluation of our approach, we
345
demonstrate that the real-world beneﬁts are, in fact, substantial.
346
4.2. Online Evaluation
347
Based on the promising results obtained through our lab-based settings (Section 4.1), we began the process of making
348
our approach suitable for real-world deployment. First, several technical issues had to be addressed in order to make our
349
approach suitable for real-world deployment. These include extending the TEAP formulation to include the scheduling
350
of lunch breaks for the ofﬁcers such that a minimum number of ofﬁcers are always on duty, allowing ofﬁcers to “transit”
351
through road segments without enforcing the trafﬁc laws (i.e., bypassing our restriction to a single police cruiser at each
352
road segment and time), etc. As these modiﬁcations are mostly technical in nature and do not alter our underling approach,
353
solution technique and theoretical properties, they are reported in Appendix C. Next, we discuss the design of our controlled
354
ﬁeld experiment and its evaluation metrics. We then present and analyze the results.
355
4.2.1. Setup
356
After attaining the approval of the ITP’s commander of the trafﬁc police forces (in the rank of a Major General), we
357
began a controlled ﬁeld experiment for a period of four months from January up to and including April 2019. The ITP has
358
16

T = 8
T = 16
T = 24
Police Cars
ROSE
Na¨ıve
ROSE
Na¨ıve
ROSE
Na¨ıve
5
5
33
31
153
58
352
10
7
36
45
191
212
402
15
11
36
219
301
384
875
20
12
40
119
263
471
695
25
21
53
394
487
1432
1520
30
36
40
479
520
N/A
N/A
35
53
51
611
591
N/A
N/A
40
85
53
1072
836
N/A
N/A
Table 2: Runtime of ROSE and Na¨ıve for the Israeli road network with varying numbers of police cars and T. Runtime is measured in
seconds. N/A means that a timeout of 30 minutes was reached.
chosen the “Shfela”4 district to test out our system. The Shfela district includes approximately 100 road segments.
359
During the evaluation period, a 24-hour schedule (T = 24) was automatically provided to the ITP every morning
360
around 6am5 given the number of police units at our disposal and the operational constraints imposed by the ITP on
361
that day6. The use of a single schedule for 24 hours is naturally ﬂawed as unexpected delays, operational constraints
362
and changes in manpower may occur during that time, making the pre-calculated schedule infeasible or sub-optimal. In
363
full-scale deployment, one may need to recalculate an allocation for all police cars when such unexpected events occur.
364
However, for this evaluation, the ITP had used ad-hoc local adjustments to follow the schedule “to the best of their ability”.
365
4https://en.wikipedia.org/wiki/Shfela
5At this point in time, the ITP preferred not to integrate our system in their computer network due to security considerations.
6The exact number of police cars available on each day and time is withheld at the ITP’s request.
17

Only sporadically, when these local adjustments were too complex to perform, had the ITP requested a new schedule to
366
replace an existing one. These adjustments were not made available to us.
367
Recall that several technical changes were made to the original TEAP formulation (e.g., the inclusion of lunch breaks
368
for the ofﬁcers such that a minimum number of ofﬁcers are always on duty. See Appendix C). As such, we report an
369
additional comparison of ROSE and the Na¨ıve algorithm next in Section 4.2.2.
370
As in many security settings, it is hard to expect that a comparison over a relatively short time frame will yield a
371
statistically signiﬁcant difference [27]. In our case, it is unlikely that we will observe a statistically signiﬁcant decrease
372
in the number of serious accidents, due to the fact that road accidents are very sporadic. Therefore, in addition to the
373
evaluation of the number of severe accidents, we deﬁne a more subtle metric which is well-known to correlate with our
374
system’s main objective - average speed. Average speed is strongly associated with trafﬁc safety, inﬂuencing both the risk
375
of a trafﬁc accident and the severity of the injury that results from an accident [28, 29]. In order to evaluate the average
376
speed of drivers, we used anonymized cellular reports purchased from Decell Technologies7 which have been shown to
377
match drivers’ average speeds as measured by other (more conventional) instruments in Israel [30].
378
The use of alternative metrics which are not directly optimized by the system is not unique to this study. For example,
379
in PAWS [31], the authors faced a similar challenge in quantifying the number of saved wildlife due to their provided
380
ranger patrols. The authors used human and animal signs as indicators that PAWS patrols prioritize areas with higher
381
animal and poacher activity. In the same spirit, in this study, we use drivers’ average speed as an additional metric.
382
If our model is capable of successfully prioritizing dangerous road segments and times, it is reasonable to expect it
383
to prioritize road segments and times in which the average speed is high. It is important to stress once more that both
384
the TEAP formulation and the existing ITP practices do not explicitly optimize for police presence in roads segments and
385
times with high average speeds.
386
4.2.2. Results
387
Runtime. Recall that some technical changes were made to our initial model (see Appendix C). As such, we compared the
388
ROSE approach to the Na¨ıve algorithm once more in order to quantify its runtime beneﬁt. As was the case in the ofﬂine
389
evaluation, ROSE performs more than twice as fast as the Na¨ıve algorithm, averaging less than 5 minutes compared to 11.5
390
minutes. However, a closer examination of the results demonstrates different patterns compared to the ofﬂine evaluation.
391
As shown in Table 3, when the number of police cars is small (i.e., 5 or 10), ROSE outperforms the Naive algorithm by a
392
signiﬁcant margin. For example, for the case of 5 police cars and T = 24, ROSE demonstrates a runtime of 43 seconds
393
7http://www.decell.com/
18

compared to the more than 10 times slower Na¨ıve algorithm (8.5 minutes). However, for cases with many police cars (i.e.,
394
25 and 30), we see that Na¨ıve consistently outperforms ROSE . It is important to recall that the Shfela district consists
395
of only 100 road segments (about one seventh of the entire Israeli road network). As such, the bottom half of the table
396
is considered very unrealistic as there is no trafﬁc police force that can cover up to 30% of its road network at any given
397
moment. According to the ITP, most police forces do not have enough police cars and ofﬁcers to cover more than 10% of
398
any district at any given moment. Averaging over these cases alone in Table 3 shows that ROSE outperforms the Na¨ıve
399
algorithm by averaging 36 seconds compared to about 5 minutes, respectively.
400
T = 8
T = 16
T = 24
Police Cars
ROSE
Na¨ıve
ROSE
Na¨ıve
ROSE
Na¨ıve
5
4
42
25
218
43
509
10
18
57
31
287
97
619
15
68
59
328
364
452
615
20
126
67
359
531
636
931
25
410
104
625
664
1831
1373
30
861
193
1707
752
3805
2026
Table 3: Runtime of ROSE and Na¨ıve for the Shfela road network with varying numbers of police cars and T. Runtime is measured in
seconds. N/A means that a timeout of 30 minutes was reached.
Recall that in full-scale deployment, one may need to execute ROSE again and again given unexpected events. As
401
such, the runtime differences between Na¨ıve and ROSE may prove very substantial in practice.
402
Accidents. We ﬁrst analyze the number of serious accidents that occurred in the Shfela district during the evaluation period.
403
For comparison, we consider the adjacent “HaSharon”8 district which is highly similar in its size and land use, with many
404
8https://en.wikipedia.org/wiki/Sharon_plain
19

roads spanning across the two districts and the general trend in all other parts of Israel. To that end, we use ofﬁcial data
405
published by the Israeli CBS. Prior to the deployment of our system, the number of serious accidents in the Shfela district
406
decreased from 84 in January-April of 2017 to 77 in the same period of 2018 (8% decrease). In the same period in 2019,
407
while using our system, 65 serious accidents were reported (15.5% decrease from 2018). During the same time frame,
408
the number of serious accidents in the HaSharon district and in all other parts of Israel decreased by 8% and 7% from
409
2017 to 2018, and by an additional 9.5% and 11% from 2018 to 2019, respectively. The Shfela district has demonstrated
410
the sharpest decrease in the number of serious accidents among all Israeli districts. See Figure 3 for a month-by-month
411
analysis. Part of the decrease in the number of accidents in Israel (and in the Shfela and HaSharon districts in particular)
412
is naturally attributed to the increased prevalence of automotive safety measures such as MobileEye9 and to the increased
413
number of vehicles on the roads which translate into slower average driving speeds. To our knowledge, no other signiﬁcant
414
trafﬁc-related changes have occurred during the above-mentioned period, speciﬁcally enforcement-related changes.
415
A month-by-month analysis reveals some sharp changes in the number of accidents in January and February 2019 in
416
the Shfela district (a decrease of more than 30%) while only a modest decrease is recorded for the other Israeli districts
417
(less than 10%). Inconsistency in the number of serious accidents is also demonstrated in the HaSharon district. On the
418
other hand, the change in the number of serious accidents in all other Israeli districts displays low variance (maximum of
419
13% and minimum of 7.5%). The high variance in both districts is mostly attributed to the sporadic nature of accidents
420
while the low variance in the Israeli measurement is due to the aggregative calculation of accidents outside the Shfela
421
distinct which “balances” the differences encountered in each individual district.
422
Average Speed. To provide some additional insights into the evaluation, we take a closer look at the average speed on
423
road segments and times which were enforced by ofﬁcers using our system and compare it to the average speed on roads
424
enforced by ofﬁcers not using our system in the HaSharon district. Using a standard t-test, we cannot reject the null
425
hypothesis that the average speed limits of the two districts are the same (p = 0.99), nor can we reject the null hypothesis
426
that the average of speeds across the two districts are the same (p = 0.96), thus supporting our hypothesis that the two
427
districts are indeed similar.
428
On average, police ofﬁcers in the Shfela district were allocated to roads and times with an average speed 8% higher as
429
compared to the locations and times that police ofﬁcers in the adjutant district were allocated. The difference is statistically
430
signiﬁcant using a standard t-test (p < 0.05). Namely, police ofﬁcers in the Shfela district (who use our system) were
431
allocated to road segments and times which are assumed to be more dangerous than the ones in which the ofﬁcers from
432
9http://www.mobileye.com
20

Figure 3: A month-by-month comparison of the number of serious accidents between 2018 and 2019.
the adjutant district were allocated (using standard police practices), assuming that police presence does not increase the
433
average speed. Under the assumption that the presence of a police cruiser reduces the average speed on a road segment
434
at a certain time to a similar extent (e.g., reduce it by 20%) this would mean that the absolute reduction in average speed
435
is greater in the Shfela district. The above assumption seems reasonable as the two districts are very similar and drivers
436
cannot distinguish between ofﬁcers who use our system and those who do not.
437
It is, however, important to note that the two districts do not signiﬁcantly differ in the average speed across all segments
438
even after using our system (p = 0.94). The reason is simple: the ITP’s limited resources can affect the average speed for
439
only a (very) small subset of road segments. In turn, these changes do not translate into statistically signiﬁcant differences
440
at the entire district level.
441
5. Discussion
442
The results of our evaluation (Section 4), both in the lab and in real-world deployment settings, show that our approach
443
can successfully address the computational challenges associated with trafﬁc enforcement (compared to the competing
444
optimization approaches) and outperform existing police practices. The latter is measured in terms of both the number of
445
accidents and the average speeds in the deployment site compared to the control condition.
446
21

When presented with the results, ITP ofﬁcials stated that they were “very happy” with the system and the outcomes.
447
They are currently considering deployment in additional districts.
448
However, when presenting a new formulation such as TEAP, new solution techniques such as ROSE, and an in-the-
449
ﬁeld evaluation of a deployed system, it is worth discussing limitations.
450
ROSE allows us to optimally solve large TEAPs with signiﬁcant runtime improvement compared to baseline ap-
451
proaches. This improvement is most signiﬁcant for large, dense networks. However, ROSE’s runtime is impaired with the
452
increase in the number of police units. The reason is simple: with the increase in the number of police cars, penalty terms
453
are more likely to be triggered by feasible solutions. Therefore, in a “congested” TEAP (i.e., a small network with many
454
police cars), ROSE could be counterproductive. According to ITP experts, trafﬁc police worldwide use a network size –
455
police car ratio similar to the one deployed in Israel. Therefore, in real-world deployment in other countries, one is most
456
likely to encounter large networks with a relatively low number of police resources, like the settings investigated in this
457
article.
458
The TEAP solution is a pure strategy for the police, which makes predictability an issue. Unlike various other security
459
models such as adversarial robotic patrolling (e.g., [32, 33, 34]), in this article TEAP assumes that the drivers are reactive
460
to police presence and essentially do not learn the police’s actual policy. This assumption may lead to repetitive police
461
allocations which drivers may (eventually) understand and anticipate. A possible indication for the occurrence of such
462
a phenomena in practice can be seen in Figure 3. The beneﬁt from our system in the ﬁrst half of the evaluation period
463
was much larger than the beneﬁt in the second half. It is, however, possible that factors of which we are unaware have
464
caused this discordance, such as operational constraints or natural noise in the data. All the same, a practical solution to
465
this concern is to (periodically) deﬁne additional allocation constraints that impose or restrict the enforcement of a speciﬁc
466
road segment, similar to the entropy-based approach suggested in [11]. Today, police forces occasionally deﬁne road
467
segments that must or must not be visited during a shift due to special enforcement needs (e.g., road work). The injection
468
of these constraints in the TEAP formulation is straightforward, yet the injection itself was not performed in our online
469
evaluation following the ITP’s request. An automatic process may also randomly select which road segments must/must
470
not be enforced in a given allocation such that every road segment has at least a user-deﬁned ϵ probability of being enforced
471
at every time step. Note that the adoption of SSG for preventing serious road accidents seems unsuitable as it can be argued
472
that drivers follow an opportunistic behavioral model rather than a strategic one.
473
A common challenge to many human-centered problems and systems, such as TEAP, is the efﬁcient adaption to human-
474
driven changes in the environment. For example, adapting to a human’s changing preferences or abilities (e.g., [35]). In
475
trafﬁc enforcement, this challenge may manifest itself as a police cruiser being delayed, which might make the proposed
476
allocation undesirable or infeasible. An efﬁcient way to resolve this issue is for central command to allocate the police
477
22

cars, assuming perfect execution. Only after a non-default transition occurs does the central command resolve the TEAP,
478
starting from the current state [16]. Given the positive runtime results of ROSE, especially the ones demonstrated in our
479
online evaluation (Section 4.2.2), such reallocation should not pose a signiﬁcant computational concern and the former’s
480
runtime advantage accrues over time.
481
As with any in-the-ﬁeld experiment, one is limited by the data he or she is exposed to and by the natural noise it contains.
482
In our case, as discussed before, the number of accidents and average speeds recorded during our evaluation period should
483
be partially attributed to additional factors which we cannot control and observe. For example, unexpected operational
484
constraints may have inﬂuenced the ITP’s ability to follow our schedule (e.g., a police ofﬁcer took an unexpected sick
485
day). Similarly, special circumstances such as sports events, road work, political events10 and others may have inﬂuenced
486
both the occurrence of accidents as well as the recorded average speeds. Unfortunately, the ITP does not record most of
487
these events in their systems and they are unable to report them to us (both in real time and in retrospect). In addition,
488
considering 2018 as a baseline introduces additional noise as we have little information on trafﬁc-related circumstances
489
other than the fact that the number of police ofﬁcers has not changed. For example, In March 2019, a slight increase in the
490
number of accidents was recorded.
491
6. Related Notions in Trafﬁc Enforcement
492
It has been established that a signiﬁcant reduction in the occurrence of serious trafﬁc accidents can be achieved by
493
efﬁcient trafﬁc police allocation [2]. Speciﬁcally, efﬁcient trafﬁc enforcement has been shown to reduce a wide range of
494
high-risk, illegal driving behaviors, including driving while under the inﬂuence of drugs/alcohol, speeding, lack of seat
495
belt use and red-light running, and thus reduces trafﬁc accidents (e.g., [5, 6]). Therefore, recently, trafﬁc police forces
496
have begun implementing the predictive policing paradigm [36] through which police ofﬁcers can identify people and
497
locations at increased risk. From a methodological standpoint, the effort of predicting trafﬁc accidents has mainly focused
498
on aggregative analysis, speciﬁcally on the prediction of the annual number of serious accidents per road segment using
499
statistical methods such as Poisson or negative binomial regression models [37]. Such aggregation is limited in its use to
500
police forces as the allocation of trafﬁc police enforcement requires a prediction on a much more ﬁnely-grained level. To
501
the best of our knowledge, the state-of-the-art prediction models provide prediction for three hour time-frames. Overall,
502
despite its promise and successful implementation, predictive policing does not provide police ofﬁcers with a means to
503
derive optimal enforcement allocations. In this study, we were able to construct a prediction model that provides beneﬁcial
504
10General elections took place on April 4th.
23

predictions for one hour time-frames by using a unique set of features and 11 years of collected data.
505
The Gambler’s Fallacy is the phenomenon where people tend to put ample weight on previous events, believing that
506
they inﬂuence future outcomes. This phenomenon manifests itself in the context of trafﬁc enforcement in the form of halo
507
effects. For over 4 decades trafﬁc halo effects have been validated repeatedly, showing that enforcement effects are not
508
restricted to the speciﬁc time and space in which the enforcement is performed. Two such effects are called time-halo
509
and distance-halo [13]. To our knowledge, this is the ﬁrst work to formulate and integrate halo effects in enforcement
510
optimization. Existing works on modeling human behavior in SG settings such as [38, 39, 40] consider the adaptive nature
511
of human behavior to successes and failures in past rounds. However, the integration of halo effects in such models is not
512
straightforward.
513
7. Conclusions
514
This article introduces a novel framework for optimizing trafﬁc police allocation in real-world settings. First, we
515
model the interaction between drivers and trafﬁc police as a Trafﬁc Enforcement Allocation Problem (TEAP) and prove
516
that accurately solving or approximating the optimal solution of a TEAP is hard. Next, we cast the TEAP as a binary
517
graph ﬂow problem, which in turn is translated into a unique binary optimization problem, and we show how to solve it
518
efﬁciently and optimally by a new algorithm called the RELAXED OPTIMIZATION SOLVER ENHANCER, ROSE. Extensive
519
empirical evaluation, both in lab-based settings and in a controlled ﬁeld experiment in Israel, demonstrates the beneﬁts of
520
our approach and its applicability.
521
We hope that this study will encourage other researchers to tackle the important and challenging task of preventing
522
serious trafﬁc accidents. To assist others with this challenge, we also provide a realistic simulation environment, which we
523
name SECURE, that includes a state-of-the-art accident prediction model along with useful road networks and data.
524
In future work, we intend to extend our investigation in two ways: First, we wish to study the use of police resources
525
which vary in their capabilities. For example, breathalyzers are often used by police ofﬁcers to detect the blood alcohol
526
content of drivers. The decision of which ofﬁcers should be equipped with breathalyzers and when has yet to be captured
527
in our proposed model and, to the best of our knowledge, has yet to be captured by any optimization-based model. A
528
similar challenge of integrating trafﬁc enforcement drones within our framework was recently addressed in [41]. Second,
529
we seek to investigate additional security settings in which the submodularity assumption does not hold, yet other structural
530
properties, such as supermodularity, may prove useful.
531
Acknowledgments
532
24

This article extends two previous reports: 1) [42] from the 2017 International Joint Conference on Artiﬁcial Intelligence
533
(IJCAI); and 2) [43] from the 2017 International Conference on Decision and Game Theory for Security (GameSec). The
534
former paper discusses the main components of our model and solution technique while focusing on lab-based synthetic
535
instances. The latter paper then extends the initial model and solution technique to properly account for some of the
536
(then expected) real-world deployment challenges. In this article we elaborate and extend the two papers in two major
537
aspects: First, we examine the real-world deployment of our approach through an in-the-ﬁeld four-month long study with
538
the ITP (see Section 4). The results clearly demonstrate the potential impact of our approach in the real-world as well as
539
support and strengthen our results, which were obtained in prior lab-based settings. Second, we provide full details of both
540
the development and deployment process of our model, solution technique and deployed system which will, hopefully,
541
allow trafﬁc enforcement researchers and practitioners to replicate and adapt our approach to additional deployment sites
542
across the globe. Additional explanations, more detailed descriptions of our assumptions, model, solution techniques and
543
evaluation and more thorough examples are now also provided.
544
This work was supported in part by the LAW-TRAIN project which received funding from the European Union Horizon
545
2020 research and innovation program under grant agreement 653587 and in part by a grant from the Ministry of Science
546
& Technology, Israel & the Japan Science and Technology Agency (jst), Japan.
547
Appendix A. Modeling risk
548
We characterize each road segment in time using a unique set of 117 features. The features are divided into 3 categories:
549
1) infrastructure features; 2) date and time features; and 3) trafﬁc features. To the best of our knowledge, this is the largest
550
set of features ever to be used to predict severe car accidents.
551
Infrastructure Features
552
The geography of Israel is very diverse, with desert conditions in the south and snow-capped mountains in the north.
553
It is customary to divide Israel into 3 regions: North, South and Center. These three regions differ signiﬁcantly in their
554
population and land use. For example, the central region is a metropolitan area (e.g, the Tel-Aviv metropolis) characterized
555
by dense urban building and high-tech land use, whereas the southern region is mostly a desert which for the most part
556
consists of rural low-density residential areas [3 features]. The ITP further divides Israel into 15 districts according to
557
geographic criteria [15 features].
558
Each road segment is characterized according to its type (e.g., highway) [7 features], its length in KM [1 feature], the
559
number of lanes [7 features], the posted speed limit [5 features], road signals [2 features], road width [5 features], whether a
560
25

trafﬁc light is present on the road segment [2 feature], road surface conditions (e.g., gravel/paved) [6 features] and whether
561
the road is lit up at night [5 features]. Unfortunately, to date, we were unable to obtain additional features that have been
562
shown to affect the prevalence of road accidents in past literature. These features include the existence of road shoulders,
563
the road segment’s curvature, incline/decline etc.
564
Date and Time Characteristics
565
We characterize the date using the month of the year [12 features], day of the week [7 features] and an indicator whether
566
it is a weekday, weekend, holiday, holiday evening or another type of special day [5 features]. Time is characterized on an
567
hourly scale [24 features] and by an indicator of whether it is daytime or nighttime [2 features].
568
In addition, we characterize the weather in the vicinity of the road segment at the given time using the publicly available
569
IMS reports and forecasts [4 features].
570
Trafﬁc Characteristics
571
While the infrastructure characteristics do not change frequently, the trafﬁc that goes through the road segments changes
572
rapidly over time. We characterize the trafﬁc by its volume [1 feature]. Trafﬁc volume is provided by the CBS and average
573
speeds are provided by the ITP. We further identify the number of severe accidents which have occurred on that road
574
segment in the prior 30, 90, 180 and 365 days [8 features].
575
Appendix A.1. Training a Deep Neural Network
576
Our network consists of 3 layers, 1024x512x1, where the hidden layer uses the common RelU activation function.
577
Several other architectures were tested and found to be of lower quality in terms of AUC.
578
Appendix B. Linearization Technique
579
Let us assume a product term of n binary variables denoted x1 · · · xn.
580
Deﬁne a new binary variable z which will represent the product term using the following n + 1 constraints:
z ≤xi for i = 1, . . . , n
z ≥
n
X
1
xi −(n −1)
It is easy to verify that z will be forced to take the value of 0 if at least one xi = 0 (ﬁrst n constraints) and that it must
581
take the value of 1 otherwise (last constraint).
582
26

Appendix C. From the Lab to the Roads
583
A few steps needed to be taken before our approach could be deployed in the ﬁeld.
584
Security Clearance. Before any meaningful intersection with the ITP could take place (e.g., allowing us access to their
585
conﬁdential data), the ﬁrst two authors had to obtain security clearance, including a 2-hour background check and an
586
interview at the ITP headquarters. The clearance came through about 6 months into the process.
587
Adding Transit Edges. The ITP has requested the addition of transit commands to their schedule. Namely, in addition to
588
directing police cruisers to enforce different road segments, they have requested that we explicitly model the option of a
589
police car traveling through a road segment without enforcing the law. To that end, when time-extending the road network
590
G such that each vertex v is replicated T times, two types of edges are added for each t < T to the transition graph.
591
Speciﬁcally, transit edges are added from each vertex ut to vt+l(e,t) where l(e, t) is the estimated travel time to cross
592
e at time t according to Google Maps (https://maps.google.com).11 Unfortunately, the above does not sufﬁce.
593
Speciﬁcally, the TEAP’s formulation relies on the assumption that no two police cars should enforce the same road segment
594
at the same time. However, this rule does not necessarily apply to transit actions, where more than one police car can be
595
present on the same road and at the same time. We investigated this issue empirically; ﬁrst we duplicated each transit edge
596
by the number of police cars available. Practically, under various conditions, we did not encounter any realistic settings in
597
which more than a single police car was present on the same road segment at the same time in Israel.
598
Logistics. According to the ITP, during an 8-hour shift, each police car should have a break of about 1 hour to eat and
599
reach its next destination. The rationale is that the ITP has arranged various different places for police ofﬁcers to eat and
600
therefore no special requirements should be implemented as to where a police car should have its break. This break is
601
scheduled for different times, for example, interleaving during the 4th hour of work so as to avoid having all ofﬁcers on
602
break at the same time. Speciﬁcally, ofﬁcers are interleaved as to when they would go on a break during the 4th hour of
603
work such that at least k police cars are not on break at any given moment (k is a police deﬁned constant). We amend our
604
model by adding designated “break” vertices during the 4th hour. These vertices are accessible from any vertex during
605
the 4th hour and are connected to all vertices which are one hour later. For example, a police car can go on a break from
606
any location at 12:00, and continue its schedule from any vertex at 13:00. This formulation was speciﬁcally tailored at the
607
request of the ITP. To make sure each police car goes on a single break, nodes during the 4th hour were duplicated such
608
that every node had two copies – “pre-break” and “post-break”. Then, pre-break nodes were disconnected from 5th hour
609
11Time was discretized in 10 minute time-frames.
27

nodes and post-break nodes were disconnected such that they are only accessible from break nodes or other post-break
610
nodes. Simply put, a police crusier can only reach the 5th hour of the shift if it goes though a post-break node. Naturally,
611
the post-break nodes do not allow re-access to a break node, ensuring that each police car visits only a single break node
612
on its path.
613
Non-default transition. Note that, given a non-default transition, we recalculate the allocation for all police cars, as local
614
adjustments may produce suboptimal allocations. We plan to investigate local methods for adjusting infeasible or undesired
615
allocations in future work.
616
References
617
[1] World Health Organization. Road trafﬁc injuries fact sheet. Technical report, December 2018. URL https:
618
//www.who.int/news-room/fact-sheets/detail/road-traffic-injuries.
619
[2] Rune Elvik, Truls Vaa, Alena Erke, and Michael Sorensen. The handbook of road safety measures. Emerald Group
620
Publishing, 2009.
621
[3] Edna Schechtman, Hillel Bar-Gera, and Oren Musicant. Driver views on speed and enforcement. Accident Analysis
622
& Prevention, 89:9–21, 2016.
623
[4] Nicole Adler, Alfred Shalom Hakkert, Jonathan Kornbluth, Tal Raviv, and Mali Sher. Location-allocation models for
624
trafﬁc police patrol vehicles on an interurban network. Annals of Operations Research, 221:9–31, 2014.
625
[5] Lyndel Bates, David Soole, and Barry Watson. The effectiveness of trafﬁc policing in reducing trafﬁc crashes. In
626
Policing and security in practice, pages 90–109. Springer, 2012.
627
[6] Jenna K Simandl, Andrew J Graettinger, Randy K Smith, Steven Jones, and Timothy E Barnett. Making use of big
628
data to evaluate the effectiveness of selective law enforcement in reducing crashes. Transportation Research Record:
629
Journal of the Transportation Research Board, (2584):8–15, 2016.
630
[7] Jos´e I Castillo-Manzano, Mercedes Castro-Nu˜no, Lourdes L´opez-Valpuesta, and Diego J Pedregal. From legislation
631
to compliance: The power of trafﬁc law enforcement for the case study of spain. Transport policy, 75:1–9, 2019.
632
[8] Gregory DeAngelo and Benjamin Hansen. Life and death in the fast lane: Police enforcement and trafﬁc fatalities.
633
American Economic Journal: Economic Policy, 6(2):231–257, 2014.
634
28

[9] Praveen Paruchuri, Jonathan P Pearce, Janusz Marecki, Milind Tambe, Fernando Ordonez, and Sarit Kraus. Playing
635
games for security: An efﬁcient exact algorithm for solving bayesian stackelberg games. In Proceedings of the 2008
636
International Conference on Autonomous Agents & Multiagent Systems, pages 895–902, 2008.
637
[10] Milind Tambe. Security and game theory: algorithms, deployed systems, lessons learned. Cambridge University
638
Press, 2011.
639
[11] Matthew Brown, Sandhya Saisubramanian, Pradeep Reddy Varakantham, and Milind Tambe. Streets: game-theoretic
640
trafﬁc patrolling with exploration and exploitation. In Proceedings of the 2014 AAAI Conference on Artiﬁcial Intelli-
641
gence, 2014.
642
[12] European Transport Safety Council. How trafﬁc law enforcement can contribute to safer roads: Pin ﬂash report
643
31. Technical report, June 2016. URL http://etsc.eu/wp-content/uploads/NEW_PIN_FLASH31_
644
final.pdf/.
645
[13] MA Elliott, Jeremy Broughton, et al. How methods and levels of policing affect road casualty rates. Transport
646
Research Laboratory, 2005.
647
[14] Chao Zhang, Shahrzad Gholami, Debarun Kar, Arunesh Sinha, Manish Jain, Ripple Goyal, and Milind Tambe. Keep-
648
ing pace with criminals: An extended study of designing patrol allocation against adaptive opportunistic criminals.
649
Games, 7(3):15, 2016.
650
[15] Nicola Basilico, Nicola Gatti, and Francesco Amigoni. Leader-follower strategies for robotic patrolling in environ-
651
ments with arbitrary topologies. In Proceedings of the 2009 International Conference on Autonomous Agents &
652
Multiagent Systems, pages 57–64, 2009.
653
[16] Francesco Maria Delle Fave, Albert Xin Jiang, Zhengyu Yin, Chao Zhang, Milind Tambe, Sarit Kraus, and John P
654
Sullivan. Game-theoretic patrolling with dynamic execution uncertainty and a case study on a real transit system.
655
Journal of Artiﬁcial Intelligence Research, 50:321–367, 2014.
656
[17] Francesco Maria Delle Fave, Eric Shieh, Manish Jain, Albert Xin Jiang, Heather Rosoff, Milind Tambe, and John P
657
Sullivan. Efﬁcient solutions for joint activity based security games: fast algorithms, results and a ﬁeld experiment on
658
a transit system. Autonomous Agents and Multi-Agent Systems, 29(5):787–820, 2015.
659
[18] Eric Shieh, Bo An, Rong Yang, Milind Tambe, Craig Baldwin, Joseph DiRenzo, Ben Maule, and Garrett Meyer.
660
Protect: A deployed game theoretic system to protect the ports of the united states. In Proceedings of the 2012
661
International Conference on Autonomous Agents & Multiagent Systems, pages 13–20, 2012.
662
29

[19] Zhengyu Yin, Albert Xin Jiang, Matthew Paul Johnson, Christopher Kiekintveld, Kevin Leyton-Brown, Tuomas
663
Sandholm, Milind Tambe, and John P Sullivan. Trusts: Scheduling randomized patrols for fare inspection in transit
664
systems. In Proceedings of the 2012 Innovative Applications of Artiﬁcial Intelligence, 2012.
665
[20] Marco E L¨ubbecke and Jacques Desrosiers. Selected topics in column generation. Operations research, 53(6):
666
1007–1023, 2005.
667
[21] Nitesh V Chawla. Data mining for imbalanced datasets: An overview. In Data mining and knowledge discovery
668
handbook, pages 853–867. Springer, 2005.
669
[22] Sarit Weisburd. Does police presence reduce car accidents? Technical report, Auguest 2016.
670
[23] Ariel Rosenfeld and Sarit Kraus. Predicting human decision-making: From prediction to action. Synthesis Lectures
671
on Artiﬁcial Intelligence and Machine Learning, 12(1):1–150, 2018.
672
[24] Rong Yang, Albert Xin Jiang, Milind Tambe, and Fernando Ordonez. Scaling-up security games with boundedly ra-
673
tional adversaries: A cutting-plane approach. In Proceedings of the 2013 International Joint Conference on Artiﬁcial
674
Intelligence, 2013.
675
[25] Paul Black. Dictionary of Algorithms and Data Structures, U.S. National Institute of Standards and Technology,
676
https://xlinux.nist.gov/dads/, 2005.
677
[26] Inc. Gurobi Optimization. Gurobi optimizer manual, 2016. URL http://www.gurobi.com.
678
[27] Matthew E Taylor, Christopher Kiekintveld, Craig Western, and Milind Tambe. A framework for evaluating deployed
679
security systems: Is there a chink in your ARMOR? Informatica, 34(2), 2010.
680
[28] G¨oran Nilsson. Trafﬁc safety dimensions and the power model to describe the effect of speed on safety. PhD thesis,
681
Lund Institute of Technology, Department of Technology and Society, Trafﬁc Engineering, Lund, Sweden., 2004.
682
[29] Rune Elvik. A re-parameterisation of the power model of the relationship between the speed of trafﬁc and the number
683
of accidents and accident victims. Accident Analysis & Prevention, 50:854–860, 2013.
684
[30] Hillel Bar-Gera. Evaluation of a cellular phone-based system for measurements of trafﬁc speeds and travel times: A
685
case study from israel. Transportation Research Part C: Emerging Technologies, 15(6):380–391, 2007.
686
30

[31] Rong Yang, Benjamin Ford, Milind Tambe, and Andrew Lemieux. Adaptive resource allocation for wildlife pro-
687
tection against illegal poachers. In Proceedings of the 2014 international conference on Autonomous agents and
688
multi-agent systems, pages 453–460, 2014.
689
[32] Noa Agmon, Gal A Kaminka, and Sarit Kraus. Multi-robot adversarial patrolling: facing a full-knowledge opponent.
690
Journal of Artiﬁcial Intelligence Research, 42:887–916, 2011.
691
[33] Efrat Sless, Noa Agmon, and Sarit Kraus. Multi-robot adversarial patrolling: facing coordinated attacks. In Proceed-
692
ings of the 2014 International Conference on Autonomous Agents & Multiagent Systems, pages 1093–1100, 2014.
693
[34] Noa Agmon, Sarit Kraus, Gal A Kaminka, and Vladimir Sadov. Adversarial uncertainty in multi-robot patrol. In
694
Proceedings of the 2009 International Joint Conference on Artiﬁcial Intelligencee, pages 1811–1817, 2009.
695
[35] Ariel Rosenfeld, Moshe Cohen, Sarit Kraus, and Joseph Keshet. Online prediction of time series with assumed
696
behavior. Engineering Applications of Artiﬁcial Intelligence, 88, 2020.
697
[36] Walt L Perry. Predictive policing: The role of crime forecasting in law enforcement operations. Rand Corporation,
698
2013.
699
[37] Li-Yen Chang. Analysis of freeway accident frequencies: negative binomial regression versus artiﬁcial neural net-
700
work. Safety science, 43(8):541–557, 2005.
701
[38] Raz Lin, Sarit Kraus, Noa Agmon, Samuel Barrett, and Peter Stone. Comparing agents’ success against people in
702
security domains. In Proceedings of the 2011 AAAI Conference on Artiﬁcial Intelligence, pages 809–814, 2011.
703
[39] Debarun Kar, Fei Fang, Francesco Delle Fave, Nicole Sintov, and Milind Tambe. A game of thrones: when human be-
704
havior models compete in repeated stackelberg security games. In Proceedings of the 2015 International Conference
705
on Autonomous Agents & Multiagent Systems, pages 1381–1390, 2015.
706
[40] Fei Fang, Peter Stone, and Milind Tambe. When security games go green: Designing defender strategies to prevent
707
poaching and illegal ﬁshing. In Proceedings of the 2015 international joint conference on Artiﬁcial Intelligence,
708
2015.
709
[41] Ariel Rosenfeld and Oleg Maksimov. Optimal cruiser-drone trafﬁc enforcement under energy limitation. Artiﬁcial
710
Intelligence, 277:103–166, 2019.
711
31

[42] Ariel Rosenfeld and Sarit Kraus. When security games hit trafﬁc: Optimal trafﬁc enforcement under one sided
712
uncertainty. In Proceedings of the Twenty-Sixth International Joint Conference on Artiﬁcial Intelligence, IJCAI-17,
713
pages 3814–3822, 2017. doi: 10.24963/ijcai.2017/533.
714
[43] Ariel Rosenfeld, Oleg Maksimov, and Sarit Kraus. Optimizing trafﬁc enforcement: From the lab to the roads. In
715
International Conference on Decision and Game Theory for Security, pages 3–20. Springer, 2017.
716
32

