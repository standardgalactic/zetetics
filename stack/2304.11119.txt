Phase transition in Random Circuit Sampling
Google Quantum AI and Collaborators
Quantum computers hold the promise of executing tasks beyond the capability of classical com-
puters. Noise competes with coherent evolution and destroys long-range correlations, making it an
outstanding challenge to fully leverage the computation power of near-term quantum processors. We
report Random Circuit Sampling (RCS) experiments where we identify distinct phases driven by
the interplay between quantum dynamics and noise. Using cross-entropy benchmarking, we observe
phase boundaries which can deﬁne the computational complexity of noisy quantum evolution. We
conclude by presenting an RCS experiment with 70 qubits at 24 cycles. We estimate the computa-
tional cost against improved classical methods and demonstrate that our experiment is beyond the
capabilities of existing classical supercomputers.
The computational complexity of quantum systems
arises from the exponential growth of the Hilbert space
dimensions with system size. On near-term quantum pro-
cessors whose practical complexity is limited by noise,
random circuit sampling (RCS) has emerged as the most
suitable candidate for a beyond-classical demonstration,
as it allows for quantum correlation to spread at the max-
imized speed [1, 2]. In addition, RCS also relies on a min-
imal number of complexity theoretical assumptions com-
pared to other proposals, such as related sampling prob-
lems [3, 4] or integer factorization, for overturning the
Extended-Church Turing thesis in the noiseless case [1, 5–
8].
The interplay between computational complexity and
noise is highlighted by recent RCS experiments, starting
with a 53-qubit Sycamore quantum processor in 2019 [9].
Ever since, similar experiments with expanded system
sizes and reduced noise have been reported [10, 11],
while classical algorithms have also advanced substan-
tially [12–17]. This intensifying quantum-classical com-
petition motivates two questions: does there exist well-
deﬁned boundaries for the region where the exponen-
tially large Hilbert space is, in fact, leveraged by a noisy
quantum processor?
More importantly, can we estab-
lish an experimental observable that directly probes these
boundaries?
In this work, we provide direct insight to these two
questions using RCS on a second generation of Sycamore
processors.
We demonstrate that the interplay be-
tween quantum dynamics and noise can drive the sys-
tem into distinct phases, whose boundaries are resolved
using ﬁnite-size studies with cross-entropy benchmark-
ing (XEB) [1, 9, 18, 19]. Reaching the desired phase of
maximized complexity requires a noise rate per cycle be-
low a critical threshold whose value is determined by the
growth rate of quantum correlations. Finally, we report
a 70-qubit RCS experiment and compare its results with
calculations using tensor network contraction and matrix
product states. After estimating the needed computa-
tion resources and achievable ﬁdelity bound for improved
classical methods, we conclude that our demonstration is
ﬁrmly in the regime of beyond-classical quantum compu-
tation.
The structure of these phases is schematically illus-
noise
number of cycles
system size
noise
anti-concentration
A
B
Dynamical phase transition
noise induced phase transition
strong noise
weak noise
2n proba.
log proba.
2n proba.
log proba.
FIG. 1. Noise on Random Circuit Sampling: A: Phase
transition between a concentrated output distribution of bit-
strings from RCS at low number of cycles to a broad distribu-
tion. In a noiseless system, the phase transition between the
two regimes is the anti-concentration point [20], in a noisy sys-
tem, the transition point is lowered. B: At a suﬃcient number
of cycles and for a ﬁnite size system, noise induces a phase
transition from a regime where correlations extend to the full
system to a regime where the system may be approximately
represented by the product of multiple uncorrelated subsys-
tems. In the strong noise regime, XEB on the full device also
fails to give a faithful estimate of the underlying ﬁdelity.
trated in Fig. 1. Driven by the circuit depth, the system
ﬁrst goes through a dynamic phase transition, where the
output distribution is no longer concentrated in a frac-
tion of bitstrings. This suggests that the system becomes
suﬃciently delocalized in the computational basis for lin-
ear XEB to become a good estimator of system ﬁdelity
(Fig. 1A). Noise drives the output towards the uniform
distribution. As a consequence, the transition occurs at
an earlier time, with a depth determined by the level
of noise. Anticoncentration is a key ingredient of mathe-
matical arguments on the complexity of simulating noise-
less RCS [1, 5, 6, 20]. Nevertheless, this is a necessary
arXiv:2304.11119v1  [quant-ph]  21 Apr 2023

2
but not suﬃcient condition for global entanglement (see
SM F) which maximizes computational cost.
The second is a transition driven by noise, speciﬁcally
error rate per cycle ϵ×n, where ϵ is the error per gate and
n is the number of qubits. As illustrated in Fig. 1B, the
behavior of quantum correlations falls into two regimes:
when the error rate per cycle is large, the wavefunction
of the system may be approximately represented by mul-
tiple uncorrelated subsystems. This leaves the quantum
system open to spooﬁng by classical algorithms that rep-
resent only part of the system at a time [9, 21–24]. In the
regime where the error rate per cycle is suﬃciently low,
correlations span the entire system restoring its compu-
tational complexity.
The boundary between these two
phases is determined by the competition between the er-
ror rate per cycle and the convergence of the system to
the ergodic state.
We ﬁnd that XEB is a proper observable to resolve
the aforementioned regimes experimentally. Speciﬁcally
linear XEB is measured as
XEB = ⟨2npsim(s) −1⟩experiment ,
(1)
where n is the number of qubits, psim are ideal (simu-
lated) probabilities and the average is over experimen-
tally observed bitstrings. We measure XEB as a function
of the number of cycles d for diﬀerent system sizes to
resolve the dynamical phase transition (Fig. 1A). The
experimental results are shown in Fig. 2A and Fig. 2B
for 1D and 2D systems, respectively. We ﬁnd that XEB
increases with system size for small d, where the system
wavefunction is concentrated in a fraction of basis states.
However, for large d, XEB decays exponentially and ap-
proximates the circuit ﬁdelity. At intermediate depth we
observe a critical crossing point where all the measured
XEB curves intersect at a single point where the value
of XEB is approximately independent of the system size.
This behavior can be understood in the following way:
at d = 0 the system is in a single basis state and psim(s)
is a delta function.
Here XEB equals 2n −1, i.e.
in-
creases with n exponentially. This exponential growth
with n is preserved at short times with a depth depen-
dence exp(ne−d) (see also Ref. [20]). At a later time the
trend switches and it decays exponentially as F d where
F ≈exp(−ϵn) is the ﬁdelity per cycle (i.e. the digital
error model [9]). The phase transition between these two
trends corresponds to the depth where the exponents e−d
and ϵd are approximately equal.
Having identiﬁed the minimum depth at which XEB
approximates the system ﬁdelity, we now formulate an
experimental protocol for locating the transition between
the strong and weak noise regimes (Fig. 1B). A conceptu-
ally simple setup that highlights the underlying physics
for this transition is the so-called weak-link model, where
two subsystems of size n/2 are coupled via an entangling
gate applied every T cycles. In the limit where T = ∞,
i.e. no weak link is applied, the subsystems are uncou-
pled and the overall system converges to a product state
ρA ⊗ρB, where ρA (ρB) is the pure ergodic state of each
subsystem. Adding noise, we assume the so-called de-
polarizing channel noise model for the density matrix of
each subsystem A/B: F d/2ρA/B + (1 −F d/2)IA/B/2n/2,
where IA (IB) is the identity matrix. Direct substitu-
tion of this density matrix into Eq. (1) gives XEB =
F d + 2F d/2 using XEB = 1 for ρA/B and XEB = 0 for
IA/B/2n.
We now analyze the case of ﬁnite yet large T, such that
each subsystem approaches the ergodic state in less than
T cycles. In the average evolution of linear XEB over
random circuits [2, 23] (see SM D), the application of
each gate between the two systems entangles them with
probability 1 −λ. Entanglement evolves the subsystem
ergodic state ρA (or ρB) towards the overall ergodic state
ρAB. The probability λ depends on the entangling gate
and is 1/4 for the iSWAP-like gates employed in our ex-
periment. Therefore, a simpliﬁed model for linear XEB
is
XEB ≈2λd/T F d/2 + F d.
(2)
We probe this expected behavior by measuring XEB
experimentally as a function of d, shown in Fig. 2C. Here
we have employed a noise-injection protocol that eﬀec-
tively changes gate ﬁdelities in our quantum circuits (see
SM C2 for details) and show results corresponding to
diﬀerent noise levels. In the rest of the paper we use a
discrete set of single-qubit gates chosen randomly from
ZpX1/2Z−p with p ∈{−1, −1/4, −1/2, . . . , 3/4}. We ob-
serve that in the weak noise regime, XEB converges to the
expected ﬁdelity of the entire system, F d. This is because
F is suﬃciently high such that F d dominates the contri-
bution to XEB. On the other hand, we observe that XEB
is signiﬁcantly above F d in the strong noise regime ow-
ing to the dominant contribution of 2λd/T F d/2 to XEB.
These results are preliminary indications of the two dif-
ferent noise induced phases and exemplify the compe-
tition between the exponential decay of global correla-
tions ∝ϵn, and the entangling rate between subsystems
(∝1/T in this example).
The transition between the two diﬀerent noise induced
phases is more clearly seen by ﬁxing d to a few values
past the dynamical phase transition in Fig. 1A. We then
vary the eﬀective noise level (i.e. F) and measure XEB
at these ﬁxed cycles (Fig. 2D). We observe XEB exhibits
a nontrivial scaling distinct from F d. In particular, we
see that the rate of decay with respect to errors decreases
at higher error rates. This is again consistent with the
fact that 2λd/T F d/2 dominates at high errors.
To experimentally locate the critical value of error per
cycle (or equivalently, F) where the dynamical exponent
of XEB changes, we deﬁne a modiﬁed order parameter
F d/XEB, which asymptotes to a distinct value of 1 (0) in
the weak (strong) noise regime. The transition between
the two limits becomes a discontinuity when d →∞,
indicating a phase transition for ﬁnite ϵn ≈κc, where
the critical value κc may be a function of λ and T. In
the transition region we can observe the ﬁnite size criti-
cal behavior where F d/XEB is approximately a function

3
finite size crossing
finite size crossing
~ Fidelity ~ e-εnd
A
Number of cycles, d
0
10
20
30
40
Linear XEB
103
10-1
100
101
102
10-2
104
Linear XEB
Linear XEB
103
10-1
100
101
102
10-2
104
Linear XEB
B
Number of cycles, d
0
20
60
40
system size
10
17
24
21
14
chain size
6 8
24
...
~ Fidelity ~ e-εnd
~2n
~2n
C
D
0.1
0.2
0.3
100
10-4
10-3
10-2
10-1
strong noise
weak noise
chain with 
weak-link
10-1
10-2
10-3
10-4
error per cycle, ε × n
14-th cycle
26-th cycle
38-th cycle
0.1
1
Pred./Meas.
FIG. 2. At low depth, XEB grows with the size of the system. In a noiseless device, XEB will converge to 1 with the number
of cycles. In the presence of noise XEB becomes an estimator of the system ﬁdelity. In A and B, we observe experimentally
a dynamical phase transition at a ﬁxed number of cycles between these two regimes in 1D and 2D respectively. The random
circuits here use Haar random single-qubit gates and an iSWAP-like gate as an entangler. In C and D we probe experimentally
a noise induced phase transition using a weak-link model (see main text), where the weak link is applied every 12 cycles (discrete
gate set, see main text). In C we show the two diﬀerent regimes: in the weak noise regime, XEB converges to the ﬁdelity,
whereas in the strong noise regime, XEB remains higher than predicted by the digital error model. In D, we induce errors
to scan the transition from one regime to the other. We show in the inset that there is a crossing point indicating a phase
transition induced by noise.
of (ϵn −κc)d. This is revealed in the order parameter
for diﬀerent depths d crossing at a single point, as can
be veriﬁed from Eq (2) and numerically for the circuits
used in the experiment.
The experimentally obtained
F d/XEB, shown in the inset of Fig. 2D, indeed manifests
the expected critical behavior: for ϵn ≲0.17, the order
parameter increases as d increases whereas for ϵn ≳0.17,
the order parameter decreases as d increases. At a critical
point ϵn ≈0.17, the data sets cross and the order param-
eter is approximately independent of d. We attribute the
slight drift in the crossing point between diﬀerent data
sets to potential systematic errors in the experimental
estimation of F.
We now explore the physical mechanism underlying
the noise induced phase transition further. As discussed
earlier, the period T in the weak-link model eﬀectively
controls the rate of coherent entanglement between the
two subsystems and consequently the critical error rate
per cycle associated with the transition. The results are
illustrated in Fig. 3A-C, where the T varies between val-
ues of 8, 12 and 18 cycles. For each value of T, we ob-
serve a ﬁnite-depth crossing in the noise dependence of
F d/XEB, rendering the critical noise rate nϵ which de-
creases as we increase the value of T. This result is in-
tuitively expected: by increasing the period of the weak
link, we reduce the entanglement generation rate between
the two subsystems, making the entire system more sus-
ceptible to noise induced correlation localization. To con-
struct the corresponding phase diagram, we extract the
value of critical noise rate and plot them against 1/T -
the link frequency (red dots), as shown in Fig. 3D. They
are in good agreement with numerical simulations with
noise (blue dots), marking the phase boundary between
the weak and strong noise regimes.
When comparing
with the functional form nϵ ≃4/T log 2 predicted by the
analytical weak-link model, we observe appreciable de-
viations when link frequency is approaching 1/2, which
corresponds to the regular 1D chain. The deviation re-

4
A
error per cycle, ε × n
0.1
0.4
0.2
0.3
0.5
error per cycle, ε × n
0.1
0.4
0.2
0.3
0.5
error per cycle, ε × n
0.1
0.4
0.2
0.3
0.5
error per cycle, ε × n
0.1
1
XEB ratio (pred./meas.)
100
10-1
10-th cycle
18-th cycle
26-th cycle
14-th cycle
26-th cycle
38-th cycle
20-th cycle
38-th cycle
56-th cycle
link frequency (1/T)
0.1
0.0
0.2
0.3
0.4
0.5
numerics
exp.
analytics
weak noise
strong noise
T = 8
T = 12
T = 18
A
B
C
D
XEB ratio (pred./meas.)
100
10-1
10-3
10-2
error per cycle, ε × n
0.4
0.2
0.6
0.8
error per cycle, ε × n
1
weak noise
strong noise
12-th cycle
16-th cycle
20-th cycle
8-th cycle
12-th cycle
16-th cycle
pattern = ACBD
pattern = EGFH
1
2
0
E
F
G
links per 4-cycles
0.6
0.2
0.4
error per cycle, ε × n
0.4
0.2
0.6
0.8
staggered
non staggered
D
C
B
E
H
G
F
EGFH
ACBD
ABCD-CDAB
4x4 4x6
size
A
A
A
C
C
C
B
B
B
D
D
D
E
E
E
F
F
F
G
G
G
H
H
H
FIG. 3. Noise Induced Phase Transition:. A, B, C: Experimental noise induced phase transition as a function of the error
per cycle for several periods T of the weak-link model described in Fig. 2 (discrete gate set). As the period increases, the critical
value of noise or error per cycle gets lower. D: Phase diagram of the transition with analytical, numerical and experimental
data. The experimental data is extracted from the crossing of the largest depth scan. E, F: Experimental transition in 2D with
diﬀerent patterns: staggered ACBD and non-staggered EGFH respectively (discrete gate set). G: Numerical phase diagram
of the 2D phase transition. We show the critical point for diﬀerent sizes and patterns, including the pattern used for the
beyond-classical RCS experiment presented in this manuscript (staggered ABCD-CDAB, see Fig. 4). The qubits are arranged
as in the inset of panel E. For ﬁxed size we vary the number of bridges (such as the red coupler in panel E) up to the point
when all bridges are applied (4 and 6 for the 4 × 4 and 4 × 6 systems, respectively), denoted as links per 4-cycles in the panel
G. For all the patterns, we delimit a pessimistic critical error rate of 0.47 error per cycle to separate the region of strong noise
where XEB fails to characterize the underlying ﬁdelity and global correlations are subdominant. The experiment of Fig. 4 is
represented by a red star and is well within the weak noise regime.
ﬂects that the interaction between the correlation length
and noise is not fully captured in the simple analytical
model. [25]
With the ultimate goal of demonstrating and verifying
the beyond-classical performance for our 70-qubit device,
it is critical to construct a similar phase diagram for the
full 2D structure to ensure that our system is in the re-
quired weak noise regime, which in turn guarantees XEB
is a proper estimate of the ﬁdelity. However, performing
the same experiment and analysis at the level of 70 qubits
is classically intractable to begin with. Instead, we per-
formed investigations at reduced system sizes, combining
experiments with the numerical analysis to give a proper
bound that is applicable to larger sizes. The experimen-
tal results are shown in Fig. 3E-F for a 4×4 square grid of
qubits and two diﬀerent circuit structures, whereby the
two-qubit gates are applied either in a staggered (Fig. 3E)
or a non-staggered (Fig. 3F) fashion. Similarly to 1D, the
16-qubit system is divided into two halves that are con-
nected by a single iSWAP-like gate applied every 4 cycles.
For both circuit structures, we observe a similar cross-
ing between F d/XEB measured at three diﬀerent cycles,
with a higher value of nϵ observed for the non-staggered
patterns.
We performed further investigations by numerically
evaluating critical noise rates for systems of diﬀerent sizes
and circuit structures, including both the staggered and
non-staggered patterns and the ABCD-CDAB pattern
used in the 2019 and the current beyond-classical demon-
strations. As the illustrated in Fig. 3G, 2D gate patterns
introduce qualitatively diﬀerent behavior for quantum
correlations under noise. Compared with 1D, the critical
noise rates in 2D systems demonstrate a much weaker
dependence on the applied link frequency, assuming a
narrow range of nϵ between 0.5 to 0.6. This reduced sen-
sitivity comes from the fact that in 2D, the dynamics are
dominated by the bulk eﬀect within each subsystem and
less by the the weak link itself. This weak dependence is

5
also observed on the system size. When being increased
from 4 × 4 (dots) to 4 × 6 (triangles), we found that nϵ
remains within the same range. The suggested weak de-
pendence provided us the conﬁdence to conclude a lower
bound to separate the weak noise regime from the strong
noise regime. As the solid black line shown in Fig. 3G,
we identiﬁed the lowest transition point observed in the
weak-link model and use it as the empirical boundary for
the noise induced phase transition. With the phase dia-
gram constructed, we compare it with our 70-qubit RCS
experiment that we will present next. It is evident that
our system falls well within the weak noise regime, satis-
fying the requirement to fully utilize the computational
capacity of the noisy quantum processors.
Finally, we show in Fig. 4 evidence for the demonstra-
tion of beyond-classical RCS by performing the experi-
ment on a 70-qubits Sycamore chip. The random circuits
follow the same 2-dimensional pattern as Ref. [9] ABCD-
CDAB, where single-qubit gates are chosen randomly
from ZpX1/2Z−p with p ∈{−1, −1/4, −1/2, . . . , 3/4}.
We show in SM B the ﬁdelity of the elementary opera-
tions of the random circuit. On average, we achieve a
single-qubit Pauli error rate of 1.1(0.6) × 10−3, a read-
out ﬁdelity of 1.3(0.4) × 10−2, and a dressed two-qubit
Pauli error rate of 6.7(2.5) × 10−3 (simultaneous two-
qubit gates and single-qubit gates), corresponding to an
intrinsic two-qubit simultaneous error rate of 4(2)×10−3.
We validate the digital error model by looking at patched
variations of the random circuit (see inset in Fig. 4A),
where slices of two-qubit gates have been removed, cre-
ating patched circuits for which each patch XEB can be
veriﬁed at modest computational cost. The total ﬁdelity
is then the product of the patch ﬁdelities. The diﬀerence
between the two-patch and the three-patch ﬁdelities is
explained by the larger error rate of the two-qubit gates
compared to the idling of the qubits for which two-qubit
gates have been removed. Computing XEB over full cir-
cuits is currently an intractable classical task. We thus
give an estimate of the ﬁdelity obtained after 24 cycles
–marked by a star in Fig. 4A– using the discrete error
model. For this data point, we have collected 70 million
sample bitstrings for a single circuit, for which we esti-
mate a ﬁdelity above 0.1%. In SM C1 we report ﬁdelities
for the phased-matched version of this experiment.
We now study the two main numerical methods used to
perform RCS on classical hardware. The ﬁrst method is
tensor network contraction [12–17, 26]: Ref. [16] showed
sampling from the largest circuits of Ref. [9] in 15 hours
using 512 GPUs and Ref. [26] computed the correspond-
ing XEB. The second method is based on Matrix Product
States (MPS), a popular tensor network variational rep-
resentation of 1D quantum states with limited entangle-
ment [27, 28]. Contrary to the claim of Ref. [29], we ﬁnd
that given current supercomputer memory constraints
this method fails to reach a ﬁdelity comparable to the ex-
perimental one, and furthermore oﬀer worse performance
than tensor network contraction.
We report improvements in tensor network contrac-
Exp.
1 amp.
1 million noisy samples
FLOPs
FLOPs
XEB ﬁd.
Time
SYC-53 [9] 6.44 · 1017 2.60 · 1017 2.24 · 10−3
6.18 s
ZCZ-56 [10] 6.24 · 1019 6.40 · 1019 6.62 · 10−4 25.3 min
ZCZ-60 [11] 1.32 · 1021 1.41 · 1023 3.66 · 10−4 38.7 days
This work 4.74 · 1023 6.27 · 1025 1.68 · 10−3
47.2 yr
TABLE I. Estimated computational cost of simulation:
The second column shows the number of FLOPS needed for
the computation of a single output amplitude from the ran-
dom circuit assuming no memory constraints. This serves as
a lower bound to the computational hardness of the simula-
tion of sampling from each circuit. The last three columns
refer to the cost of the simulation of noisy sampling of 1 mil-
lion bitstrings. We use the speciﬁcations of Frontier for our
estimates, with 1.685 × 1018 FLOPS of theoretical peak per-
formance spread across GPUs with 128 GB of RAM each.
We assume a 20% FLOP eﬃciency [14–16] and account for
the low target ﬁdelity of the simulation in the computational
cost [14, 15, 21, 30].
tion techniques, which result in lower estimated compu-
tational costs for simulated RCS (see SM E). In Fig. 4B
we show the FLOP count (the number of multiplications
and additions) as a function of number of qubits and cy-
cles required to compute a single amplitude at the output
of a random circuit without memory constraints. This
serves as a proxy lower bound for the hardness of both
sampling and veriﬁcation. For a ﬁxed number of qubits
and increasing depth, there is a crossover in the scal-
ing of the computational cost from exponential to lin-
ear. Given a noisy experimental setup, this implies an
optimal depth for the trade oﬀbetween computational
hardness and ﬁdelity: beyond the crossover, ﬁdelity de-
creases faster than the hardness increases. The crossover
depth is consistent with a scaling √n, as indicated with
a dashed line. Note that this is a stronger requirement
than the anti-concentrated output distribution (Fig. 1A),
and is related to the depth at which “typical” entangle-
ment is achieved (see SM F). At 70 qubits, 24 cycles is
deep enough to saturate the exponential growth of com-
putational cost. The inset of Fig. 4A shows the growth
in computational hardness (FLOP count) over the last
few years.
A practical estimate of the computational resources
needed to simulate RCS needs to take into account the ﬁ-
nite FLOPS computational eﬃciency of a supercomputer
as well as its memory constraints and other limitations
such as ﬁnite bandwidth. Table I shows estimates of the
runtime for the approximate simulation of the largest in-
stances of RCS from Refs. [9–11] and the m = 24 instance
of the current work when using the state-of-the-art meth-
ods discussed in SM E. In these estimates, we consider
sampling 1 million uncorrelated bitstrings at a ﬁdelity
similar to that of the experiment using the current top-
performing supercomputer, Frontier. This requires the
computation of 10 million approximate probability am-

6
Flops for Tensor Network Contraction
Bond dimension for MPS to reach FXEB =10-4 
Number of cycles, d
10
20
30
40
cluster node
(RAM)
laptop
(RAM)
Frontier
(RAM)
Frontier
(storage)
B
Cross-entropy benchmarking, FXEB
10-3
10-2
Number of cycles, d
16
18
20
22
24
26
A
Number of qubits, n
20
40
60
80
100
120
Number of cycles, d
10
20
30
40
C
100
104
108
1012
108
1016
1024
1032
1 year
1 hour
1 second
1 million
years
1000
years
3 patches 
2 patches
Full
Prediction for the full circuit
2020
2022
2024
LogLog Hardness
Sycamore-53
Zuchongzhi-56
Zuchongzhi-60
Sycamore-70
FIG. 4. Demonstration of quantum advantage A: Veriﬁcation of RCS with logarithmic XEB. The full device is divided
into two (green) or three (blue) patches to allow for XEB ﬁdelity estimation with modest computational cost. We use the
discrete gate set of single-qubit gates chosen randomly from ZpX1/2Z−p with p ∈{−1, −1/4, −1/2, . . . , 3/4}. For each depth,
20 circuit instances are sampled with 100 thousand shots each. The solid lines indicate the estimated XEB from the digital
error model. The star represents the estimated XEB of a single random circuit on the full processor sampled 70 million times.
In the inset we show the evolution of the computational hardness of the RCS experiments, which is not inconsistent with a
doubly-exponential growth. As a working deﬁnition of hardness we consider the estimated FLOPS –number of multiplications
and additions– needed to compute the probability of a single bitstring assuming no memory constraints. B: Estimated hardness
as a function of the number of qubits and the number of cycles for a set of circuits over layouts similar to Sycamore. Hardness
serves as a proxy for the classical computational cost of RCS. We also indicate with the contour lines the computation time from
the FLOP count if Frontier –the current largest supercomputer– ran at peak performance and without memory constraints.
C: Bond dimension needed to achieve a ﬁnite ﬁdelity of 10−4 with an MPS related method. We use the bond dimension (and
therefore memory) as an indicator of computational cost. We show that the current experiment is well beyond the memory
capacity of Frontier.
plitudes of uncorrelated bitstrings using rejection sam-
pling [21].
Let us shift our attention to MPS simulation meth-
ods.
The amount of entanglement represented by an
MPS (and the corresponding computational cost) is con-
trolled by the so-called bond dimension χ. Note that the
required FLOPs scale as O(2nχ) if we represent the state
with two equal size tensors. We focus on partitioning the
system in two halves in order to ﬁnd a lower bound to
the bond dimension χ required to achieve a given ﬁdelity
for the simulation of RCS using MPS methods. We give
in SM F a precise method to compute this lower bound,
and pinpoint the depth of a sharp transition to the “typ-
ical” (quasi-maximum) entanglement (see also Ref. [31]).
We also show that linear XEB remains a good estimator
of ﬁdelity in this case [32].
In order to be of any practical use, χ must be much
smaller than the Hilbert space dimension of the halves,
with χ ≲103 for most realistic implementations. Fig. 4C
shows the required χ to reach a ﬁdelity of F ≈10−4,
as a function of the number of qubits and cycles. The
reported memory footprint is the required memory to
store two complex arrays of sizes 2n/2 × χ. For 70 qubits
and 24 cycles, the bond dimension χ required is of the
order of 107 (with 35 qubits in each half), which is well
beyond the capacity of Frontier.
In conclusion, we present a new RCS experiment with
an estimated ﬁdelity of 1.7 · 10−3 at 70 qubits and
24 cycles, representing an increase of circuit volume of
about 60% for the same ﬁdelity. Looking forward, de-
spite the successes of RCS achieved so far, ﬁnding prac-
tical applications for near-term noisy quantum proces-
sors still remains as an outstanding challenge. The ex-
periments reported here provide direct insights on how
quantum dynamics interacts with noise. The observed
phase boundaries lay out quantitative guidance to the

7
regimes where noisy quantum devices can properly lever-
age their computational power. The fact that global cor-
relations dominate XEB in the weak noise phase protects
RCS against “spooﬁng” attacks, in contrast to Boson-
Sampling [3], where all known metrics for recent exper-
iments [33–35] are dominated by local correlations [36].
These are the regimes where future applications should
be designed.
Certiﬁed randomness generation [37–39]
could be a promising candidate for such an application
(see SM G).
Author contribution:
Y. Chen and S. Boixo led the overall project. A. Mor-
van and X. Mi performed the experiment. A. Bengts-
son contributed to readout developments.
X. Mi and
P. V. Klimov contributed to gate developments. B. Vil-
lalonga developed and ran the tensor network contrac-
tion simulations and optimizations.
S. Mandr`a devel-
oped and ran the MPS simulations. A. Morvan, Z. Chen,
S. Hong, C. Erickson, P. V. Klimov and I. K. Droz-
dov contributed to large-system calibration and stability
improvements. I. Aleiner and K. Kechedzhi developed
theories and performed numerical simulations of phase
transitions. J. Chau, G. Laun, R. Movassagh, L. T.A.N.
Brand˜ao and R. Peralta worked on certiﬁed randomness.
A. Asfaw provided technical program management to the
project. All authors contributed to building the hardware
and software infrastructures and writing the manuscript.
Acknowledgment:
S. Mandr`a is partially supported by the Prime Con-
tract No. 80ARC020D0010 with the NASA Ames Re-
search Center and acknowledges funding from DARPA
under IAA 8839.
We would like to acknowledge Carl
Miller for discussions on certiﬁed randomness and Kevin
Jeﬀery Sung for his work on randomness extractors.
Competing interests
The authors declare no competing interests.
Google Quantum AI and Collaborators
A. Morvan1,‡, B. Villalonga1,‡, X. Mi1,‡, S. Mandr`a1, 2, 3,‡, A. Bengtsson1, P. V. Klimov1, Z. Chen1, S. Hong1, C. Erickson1,
I. K. Drozdov1, 4, J. Chau1, G. Laun1, R. Movassagh1, A. Asfaw1, L. T.A.N. Brand˜ao5, R. Peralta5, D. Abanin1, R.
Acharya1, R. Allen1, T. I. Andersen1, K. Anderson1, M. Ansmann1, F. Arute1, K. Arya1, J. Atalaya1, J. C. Bardin1, 6, A.
Bilmes1, G. Bortoli1, A. Bourassa1, J. Bovaird1, L. Brill1, M. Broughton1, B. B. Buckley1, D. A. Buell1, T. Burger1, B.
Burkett1, N. Bushnell1, J. Campero1, H.-S. Chang1, B. Chiaro1, D. Chik1, C. Chou1, J. Cogan1, R. Collins1, P. Conner1, W.
Courtney1, A. L. Crook1, B. Curtin1, D. M. Debroy1, A. Del Toro Barba1, S. Demura1, A. Di Paolo1, A. Dunsworth1, L.
Faoro1, E. Farhi1, R. Fatemi1, V. S. Ferreira1, L. Flores Burgos1 E. Forati1, A. G. Fowler1, B. Foxen1, G. Garcia1, ´E.
Genois1 W. Giang1, C. Gidney1, D. Gilboa1, M. Giustina1, R. Gosula1, A. Grajales Dau1, J. A. Gross1, S. Habegger1, M.
C. Hamilton1, 7, M. Hansen1, M. P. Harrigan1, S. D. Harrington1, P. Heu1, M. R. Hoﬀmann1, T. Huang1, A. Huﬀ1, W. J.
Huggins1, L. B. Ioﬀe1, S. V. Isakov1, J. Iveland1, E. Jeﬀrey1, Z. Jiang1, C. Jones1, P. Juhas1, D. Kafri1, T. Khattar1, M.
Khezri1, M. Kieferov´a1, 8, S. Kim1, A. Kitaev1, A. R. Klots1, A. N. Korotkov1, 9, F. Kostritsa1, J. M. Kreikebaum1, D.
Landhuis1, P. Laptev1, K.-M. Lau1, L. Laws1, J. Lee1, 10, K. W. Lee1, Y. D. Lensky1, B. J. Lester1, A. T. Lill1, W. Liu1, A.
Locharla1, F. D. Malone1, O. Martin1, S. Martin1, J. R. McClean1, M. McEwen1, K. C. Miao1, A. Mieszala1, S. Montazeri1,
W. Mruczkiewicz1, O. Naaman1, M. Neeley1, C. Neill1, A. Nersisyan1, M. Newman1, J. H. Ng1, A. Nguyen1, M. Nguyen1,
M. Yuezhen Niu1, T. E. O’Brien1, S. Omonije1, A. Opremcak1, A. Petukhov1, R. Potter1, L. P. Pryadko11, C. Quintana1, D.
M. Rhodes1, C. Rocque1, P. Roushan1, N. C. Rubin1, N. Saei1, D. Sank1, K. Sankaragomathi1, K. J. Satzinger1, H.
F. Schurkus1, C. Schuster1, M. J. Shearn1, A. Shorter1, N. Shutty1, V. Shvarts1, V. Sivak1, J. Skruzny1, W. C. Smith1, R.
D. Somma1, G. Sterling1, D. Strain1, M. Szalay1, D. Thor1, A. Torres1, G. Vidal1, C. VollgraﬀHeidweiller1, T. White1, B.
W. K. Woo1, C. Xing1, Z. J. Yao1, P. Yeh1, J. Yoo1, G. Young1, A. Zalcman1, Y. Zhang1, N. Zhu1, N. Zobrist1,
E. G. Rieﬀel2, R. Biswas2, R. Babbush1, D. Bacon1, J. Hilton1, E. Lucero1, H. Neven1, A. Megrant1, J. Kelly1, I. Aleiner1,
V. Smelyanskiy1, K. Kechedzhi1,§, Y. Chen1,§, S. Boixo1,§,
1 Google Research
2 Quantum Artiﬁcial Intelligence Laboratory, NASA Ames Research Center, Moﬀett Field, California 94035, USA
3 KBR, 601 Jeﬀerson St., Houston, TX 77002, USA
4 Department of Physics, University of Connecticut, Storrs, CT
5 National Institute of Standards and Technology (NIST), USA
6 Department of Electrical and Computer Engineering, University of Massachusetts, Amherst, MA
7 Department of Electrical and Computer Engineering, Auburn University, Auburn, AL
8 QSI, Faculty of Engineering and Information Technology, University of Technology Sydney, NSW, Australia
9 Department of Electrical and Computer Engineering, University of California, Riverside, CA
10 Department of Chemistry, Harvard University, Boston, NY
11 Department of Physics and Astronomy, University of California, Riverside, CA
‡ These authors contributed equally to this work.
§ Corresponding author: boixo@google.com

8
§ Corresponding author: bryanchen@google.com
§ Corresponding author: kostyantyn@google.com
[1] S. Boixo, S. V. Isakov, V. N. Smelyanskiy, R. Babbush,
N. Ding, Z. Jiang, M. J. Bremner, J. M. Martinis, and
H. Neven, Characterizing quantum supremacy in near-
term devices, Nature Physics 14, 595 (2018).
[2] X. Mi, P. Roushan, C. Quintana, S. Mandra, J. Mar-
shall, C. Neill, F. Arute, K. Arya, J. Atalaya, R. Bab-
bush, et al., Information scrambling in quantum circuits,
Science 374, 1479 (2021).
[3] S. Aaronson and A. Arkhipov, The computational com-
plexity of linear optics, in Proceedings of the forty-third
annual ACM symposium on Theory of computing (2011)
pp. 333–342.
[4] M. J. Bremner, A. Montanaro, and D. J. Shepherd,
Average-case complexity versus approximate simulation
of commuting quantum computations, Physical review
letters 117, 080501 (2016).
[5] A. Bouland, B. Feﬀerman, C. Nirkhe, and U. Vazirani,
On the complexity and veriﬁcation of quantum random
circuit sampling, Nature Physics 15, 159 (2019).
[6] R. Movassagh, Quantum supremacy and random circuits,
arXiv preprint arXiv:1909.06210 (2019).
[7] Y. Kondo,
R. Mori, and R. Movassagh, Quantum
supremacy and hardness of estimating output probabili-
ties of quantum circuits, in 2021 IEEE 62nd Annual Sym-
posium on Foundations of Computer Science (FOCS)
(IEEE, 2022) pp. 1296–1307.
[8] A. Bouland, B. Feﬀerman, Z. Landau, and Y. Liu, Noise
and the frontier of quantum supremacy, in 2021 IEEE
62nd Annual Symposium on Foundations of Computer
Science (FOCS) (IEEE, 2022) pp. 1308–1317.
[9] F. Arute, K. Arya, R. Babbush, D. Bacon, J. C. Bardin,
R. Barends, R. Biswas, S. Boixo, F. G. S. L. Brandao,
D. A. Buell, B. Burkett, Y. Chen, Z. Chen, B. Chiaro,
R. Collins, A. Dunsworth, E. Farhi, B. Foxen, A. Fowler,
C. Gidney, M. Giustina, R. Graﬀ, K. Guerin, S. Habeg-
ger, M. P. Harrigan, M. J. Hartmann, A. Ho, M. Hoﬀ-
mann, T. Huang, T. S. Humble, S. V. Isakov, E. Jeﬀrey,
Z. Jiang, D. Kafri, K. Kechedzhi, J. Kelly, P. V. Klimov,
S. Knysh, A. Korotkov, F. Kostritsa, D. Landhuis,
M. Lindmark, E. Lucero, D. Lyakh, S. Mandr`a, J. R. Mc-
Clean, M. McEwen, A. Megrant, X. Mi, K. Michielsen,
M. Mohseni, J. Mutus, O. Naaman, M. Neeley, C. Neill,
M. Y. Niu, E. Ostby, A. Petukhov, J. C. Platt, C. Quin-
tana, E. G. Rieﬀel, P. Roushan, N. C. Rubin, D. Sank,
K. J. Satzinger, V. Smelyanskiy, K. J. Sung, M. D. Tre-
vithick, A. Vainsencher, B. Villalonga, T. White, Z. J.
Yao, P. Yeh, A. Zalcman, H. Neven, and J. M. Marti-
nis, Quantum supremacy using a programmable super-
conducting processor, Nature 574, 505 (2019).
[10] Y. Wu, W.-S. Bao, S. Cao, F. Chen, M.-C. Chen,
X. Chen, T.-H. Chung, H. Deng, Y. Du, D. Fan, M. Gong,
C. Guo, C. Guo, S. Guo, L. Han, L. Hong, H.-L. Huang,
Y.-H. Huo, L. Li, N. Li, S. Li, Y. Li, F. Liang, C. Lin,
J. Lin, H. Qian, D. Qiao, H. Rong, H. Su, L. Sun,
L. Wang, S. Wang, D. Wu, Y. Xu, K. Yan, W. Yang,
Y. Yang, Y. Ye, J. Yin, C. Ying, J. Yu, C. Zha, C. Zhang,
H. Zhang, K. Zhang, Y. Zhang, H. Zhao, Y. Zhao,
L. Zhou, Q. Zhu, C.-Y. Lu, C.-Z. Peng, X. Zhu, and J.-
W. Pan, Strong quantum computational advantage using
a superconducting quantum processor, Phys. Rev. Lett.
127, 180501 (2021).
[11] Q. Zhu, S. Cao, F. Chen, M.-C. Chen, X. Chen, T.-H.
Chung, H. Deng, Y. Du, D. Fan, M. Gong, C. Guo,
C. Guo, S. Guo, L. Han, L. Hong, H.-L. Huang, Y.-
H. Huo, L. Li, N. Li, S. Li, Y. Li, F. Liang, C. Lin,
J. Lin, H. Qian, D. Qiao, H. Rong, H. Su, L. Sun,
L. Wang, S. Wang, D. Wu, Y. Wu, Y. Xu, K. Yan,
W. Yang, Y. Yang, Y. Ye, J. Yin, C. Ying, J. Yu, C. Zha,
C. Zhang, H. Zhang, K. Zhang, Y. Zhang, H. Zhao,
Y. Zhao, L. Zhou, C.-Y. Lu, C.-Z. Peng, X. Zhu, and
J.-W. Pan, Quantum computational advantage via 60-
qubit 24-cycle random circuit sampling, Science Bulletin
67, 240 (2022).
[12] I. L. Markov and Y. Shi, Simulating quantum computa-
tion by contracting tensor networks, SIAM Journal on
Computing 38, 963 (2008).
[13] S.
Boixo,
S.
V.
Isakov,
V.
N.
Smelyanskiy,
and
H. Neven, Simulation of low-depth quantum circuits
as complex undirected graphical models, arXiv preprint
arXiv:1712.05384 (2017).
[14] J. Gray and G. K. Chan, Hyper-optimized compressed
contraction of tensor networks with arbitrary geometry,
arXiv:2206.07044 (2022).
[15] C. Huang, F. Zhang, M. Newman, J. Cai, X. Gao,
Z. Tian, J. Wu, H. Xu, H. Yu, B. Yuan, et al., Clas-
sical simulation of quantum supremacy circuits, arXiv
preprint arXiv:2005.06787 (2020).
[16] F. Pan, K. Chen, and P. Zhang, Solving the sampling
problem of the sycamore quantum circuits, Physical Re-
view Letters 129, 090502 (2022).
[17] G.
Kalachev,
P.
Panteleev,
P.
Zhou,
and
M.-H.
Yung, Classical sampling of random quantum circuits
with bounded ﬁdelity, arXiv preprint arXiv:2112.15083
(2021).
[18] C. Neill, P. Roushan, K. Kechedzhi, S. Boixo, S. V.
Isakov,
V.
Smelyanskiy,
A.
Megrant,
B.
Chiaro,
A.
Dunsworth,
K.
Arya,
et
al.,
A
blueprint
for
demonstrating quantum supremacy with superconduct-
ing qubits, Science 360, 195 (2018).
[19] Y. Liu, M. Otten, R. Bassirianjahromi, L. Jiang, and
B. Feﬀerman, Benchmarking near-term quantum com-
puters via random circuit sampling, arXiv preprint
arXiv:2105.05232 (2021).
[20] A. M. Dalzell, N. Hunter-Jones, and F. G. S. L. Brand˜ao,
Random quantum circuits anticoncentrate in log depth,
PRX Quantum 3, 010333 (2022).
[21] I. L. Markov, A. Fatima, S. V. Isakov, and S. Boixo,
Quantum supremacy is both closer and farther than it
appears, arXiv preprint arXiv:1807.10749 (2018).
[22] A. Zlokapa, S. Boixo, and D. Lidar, Boundaries of
quantum supremacy via random circuit sampling, arXiv
preprint arXiv:2005.02464 (2020).

9
[23] X. Gao, M. Kalinowski, C.-N. Chou, M. D. Lukin,
B. Barak, and S. Choi, Limitations of linear cross-entropy
as a measure for quantum advantage, arXiv preprint
arXiv:2112.01657 (2021).
[24] D. Aharonov, X. Gao, Z. Landau, Y. Liu, and U. Vazi-
rani, A polynomial-time classical algorithm for noisy ran-
dom circuit sampling, arXiv preprint arXiv:2211.03999
(2022).
[25] Note that the transition discussed here is qualitatively
diﬀerent from the quantum to classical transition dis-
cussed in Ref. 40. The transition discussed here is a com-
petition between the ﬁnite rate of convergence to the
overall ergodic state and the ﬁdelity per cycle. The transi-
tion in Ref. 40 is a competition between local interactions
and the error rate per qubit.
[26] Y. Liu, Y. Chen, C. Guo, J. Song, X. Shi, L. Gan, W. Wu,
W. Wu, H. Fu, X. Liu, et al., Validating quantum-
supremacy experiments with exact and fast tensor
network contraction, arXiv preprint arXiv:2212.04749
(2022).
[27] S. R. White, Density-matrix algorithms for quantum
renormalization groups, Physical review b 48, 10345
(1993).
[28] G. Vidal, Eﬃcient classical simulation of slightly entan-
gled quantum computations, Physical review letters 91,
147902 (2003).
[29] T. Ayral, T. Louvet, Y. Zhou, C. Lambert, E. M.
Stoudenmire, and X. Waintal, A density-matrix renor-
malisation group algorithm for simulating quantum cir-
cuits with a ﬁnite ﬁdelity, arXiv:2207.05612 (2022).
[30] B. Villalonga, S. Boixo, B. Nelson, C. Henze, E. Rieﬀel,
R. Biswas, and S. Mandr`a, A ﬂexible high-performance
simulator for verifying and benchmarking quantum cir-
cuits implemented on real hardware, npj Quantum Infor-
mation 5, 86 (2019).
[31] R. Oliveira, O. Dahlsten, and M. Plenio, Generic entan-
glement can be generated eﬃciently, Physical review let-
ters 98, 130502 (2007).
[32] Ref. [29] claims that using MPS methods the linear XEB
scales as the square root of the ﬁdelity, which contradicts
our ﬁndings. This is because a) at low depth they com-
pute XEB before the anti-concentration point and b) at
high depth they plot the absolute value of the linear XEB
(instead of the linear XEB itself).
[33] H.-S. Zhong, H. Wang, Y.-H. Deng, M.-C. Chen, L.-C.
Peng, Y.-H. Luo, J. Qin, D. Wu, X. Ding, Y. Hu, et al.,
Quantum computational advantage using photons, Sci-
ence 370, 1460 (2020).
[34] H.-S. Zhong, Y.-H. Deng, J. Qin, H. Wang, M.-C. Chen,
L.-C. Peng, Y.-H. Luo, D. Wu, S.-Q. Gong, H. Su, Y. Hu,
P. Hu, X.-Y. Yang, W.-J. Zhang, H. Li, Y. Li, X. Jiang,
L. Gan, G. Yang, L. You, Z. Wang, L. Li, N.-L. Liu, J. J.
Renema, C.-Y. Lu, and J.-W. Pan, Phase-programmable
gaussian boson sampling using stimulated squeezed light,
Phys. Rev. Lett. 127, 180502 (2021).
[35] L. S. Madsen, F. Laudenbach, M. F. Askarani, F. Rortais,
T. Vincent, J. F. F. Bulmer, F. M. Miatto, L. Neuhaus,
L. G. Helt, M. J. Collins, A. E. Lita, T. Gerrits, S. W.
Nam, V. D. Vaidya, M. Menotti, I. Dhand, Z. Vernon,
N. Quesada, and J. Lavoie, Quantum computational ad-
vantage with a programmable photonic processor, Nature
606, 75 (2022).
[36] B. Villalonga, M. Y. Niu, L. Li, H. Neven, J. C. Platt,
V. N. Smelyanskiy, and S. Boixo, Eﬃcient approximation
of experimental gaussian boson sampling, arXiv preprint
arXiv:2109.11525 (2021).
[37] S.
Aaronson,
Certiﬁed
randomness
from
quantum
supremacy, Talk at CRYPTO 2018 (2018).
[38] R. Bassirian, A. Bouland, B. Feﬀerman, S. Gunn, and
A. Tal, On certiﬁed randomness from quantum advantage
experiments, arXiv preprint arXiv:2111.14846 (2021).
[39] S. Aaronson and S.-H. Hung, Certiﬁed randomness from
quantum supremacy, arXiv preprint arXiv:2303.01625
(2023).
[40] D. Aharonov, Quantum to classical phase transition
in noisy quantum computers, Physical Review A 62,
10.1103/physreva.62.062311 (2000).

Supplement to Phase transition in Random Circuit Sampling
Google Quantum AI and Collaborators
CONTENTS
A. General RCS with XEB theory
1
B. Device characterization and benchmarking
2
1. Gate Optimization
2
2. Benchmarking of gates and readout
4
C. Additional experimental data
4
1. Phase-matching RCS experiment
4
2. Adding noise
6
3. Noise phase transition extended data
6
D. Linear XEB via population dynamics
6
1. Population dynamics for the uniformly random
single qubit gate ensemble
6
2. Convergence of population dynamics to
Porter-Thomas
8
3. Weak-link model analytical solution
8
4. Numerical analysis of the phase transitions
9
E. Simulation of random circuit sampling using
tensor network contraction
11
F. Bounds to approximate tensor representations
11
1. Fidelity for Haar random states
12
2. Fidelity bound for arbitrary states
12
3. Open and close simulations using approximate
tensor representations
13
4. XEB for approximate tensor representations
14
5. Quantifying entanglement with Cliﬀord
circuits
17
6. Reduced purity and distribution of singular
values
18
7. Bounding the approximate tensor
representation performance for close
simulations
18
G. Client-certiﬁed randomness generation with RCS 19
1. Entropy estimation
20
a. Entropy estimation for an honest server
20
b. Correction to the min-entropy
21
2. Repeated bitstrings
22
a. Probabilities for repeated bitstrings
22
b. Linear cross-entropy with unique bitstrings 23
c. Adversarial postselection of repetitions
24
3. Additional statistical tests
24
a. Hamming distance ﬁlter
24
b. Statistical test of large probabilities
25
4. Randomness extractor
25
a. Trevisan’s extractor and HMAC
26
b. Benchmark results
26
c. A faster randomness extractor using
HMAC
26
References
28
Appendix A: General RCS with XEB theory
We show in this appendix that, under quite general
conditions (see Eq. (A10)), the eﬀect of noise in XEB
can be approximated as a globally depolarizing channel.
We use this to write an XEB estimator from any smooth
and O(1) function f(pj) of the ideal probabilities pj.
It is non-trivial but true that the density of probabili-
ties from a Haar random pure quantum state is uniform
in the probability simplex [1–3]
dP(p1, . . . , pD) = (N −1)! dp1 · · · dpD ,
(A1)
where D = 2n for n qubits. The corresponding marginal
distribution for any one probability pj is the Porter-
Thomas (exponential or beta) distribution [4]. That is,
for all j we have
dP(pj) = (D −1)(1 −pj)D−2dpj
(A2)
→De−Dpjdpj .
(A3)
In the previous expression the bitstring index j is ﬁxed,
and the distribution is over quantum states sampled uni-
formly in Hilbert space (Haar measure).
One can sample a vector of the probabilities corre-
sponding to a Haar random pure quantum state by
sampling D probabilities according to the distribution
of Eq. (A3), and then normalizing the result so that
P
j pj = 1 [1, 2, 5]. Note that the sum of the independent
pj is already P
j pj = 1+O(1/
√
D) before normalization.
That is, for large D the normalization introduces a small
correlation between the previously independent pj that
can be typically ignored.
Approximate sampling of a random quantum circuit
can be described by the probabilities
pF
j = Fpj + (1 −F)Ξj
(A4)
where F corresponds to the ﬁdelity, pj is the ideal or
simulated probability for the jth bitstring output of the
quantum circuit, and Ξj is a function over bistrings corre-
sponding to the eﬀect of noise. In the quantum case, ρ is
the output of an experiment, pF
j = ⟨j| ρ |j⟩, F = ⟨ψ| ρ |ψ⟩
where |ψ⟩is the ideal noiseless output, and Ξ is de-
ﬁned by the equation ρ = F |ψ⟩⟨ψ| + (1 −F)Ξ. Note
that P
j Ξj = 1.
For simplicity we sometimes denote
Ξj = 1/D, the global depolarizing channel.
arXiv:2304.11119v1  [quant-ph]  21 Apr 2023

2
In cross-entropy benchmarking (XEB) we use the ex-
pectation value of a random variable f(pj), which is de-
ﬁned as a function of the ideal probabilities pj.
That
is, we associate the real value f(pj) to each sampled
bistring |j⟩. We require f(pj) to be O(1) and f smooth.
For linear XEB f(pj) = Dpj −1 and for log XEB
f(pj) = log(Dpj) + Euler constant [6].
In the follow-
ing we assume that the output distribution is suﬃciently
close to the Porter-Thomas distribution, see Refs. [4, 6]
and below.
The expectation value of f(pj) when sampling with
noisy probabilities pF
j is
X
j
pF
j f(pj) = F
X
j
pjf(pj) + (1 −F)
X
j
Ξjf(pj) .
The sum in the left hand side is an expectation value
estimated with RCS sampling, within an statistical error
O(1/
√
k) where k is the size of the sample. We explain
below how to obtain the value of the two sums in the
right hand size analytically for large circuits. Therefore
solving for F we obtain an estimator of the ﬁdelity for
any function f(pj) as speciﬁed above.
Consider ﬁrst the term pjf(pj). The expectation value
over random circuits for ﬁxed j is
⟨⟨pjf(pj)⟩⟩= D
Z ∞
0
dp e−Dp pf(p) ,
(A5)
where ⟨⟨·⟩⟩is the average over random circuits.
Note
that from the assumptions on f above it also follows that
⟨⟨pjf(pj)⟩⟩is O(1/D). Furthermore, the variance over
random circuits for ﬁxed j is
Var(pf(p)) ∈O
 1
D2

.
(A6)
We saw above that the probabilities pj are almost in-
dependent. Treating the sum over j as a sum of inde-
pendently and identically distributed (i.i.d) random vari-
ables, we have, by the central limit theorem,
X
j
pjf(pj) = D2
Z ∞
0
dp e−Dp pf(p) + O
 1
√
D

(A7)
Now we consider the term Ξjf(pj). We assume that,
when averaged over random circuits for ﬁxed j, the ran-
dom variables Ξj and f(pj) are independent. Therefore
⟨⟨Ξjf(pj)⟩⟩= ⟨⟨Ξj⟩⟩⟨⟨f(p)⟩⟩,
(A8)
where
⟨⟨f(p)⟩⟩= D
Z ∞
0
dp e−Dp f(p) .
(A9)
We also assume that
⟨⟨Ξj⟩⟩∈O
 1
D

.
(A10)
Therefore
Var(Ξjf(pj)) ∈O
 1
D2

.
(A11)
Treating again the sum over j as a sum of i.i.d variables
we obtain
X
j
Ξjf(pj) = ⟨⟨f(p)⟩⟩
X
j
⟨⟨Ξj⟩⟩+ O
 1
√
D

(A12)
= ⟨⟨f(p)⟩⟩+ O
 1
√
D

,
(A13)
where we used P
j Ξj = 1. We conclude that the aver-
aged eﬀect of noise Ξj can be approximated as a totally
depolarizing channel.
For linear XEB we have f(p) = Dp −1 and therefore
X
j
pjf(pj) = D2
Z ∞
0
dp e−Dp p(Dp −1) + O
 1
√
D

= 1 + O
 1
√
D

(A14)
X
j
Ξjf(pj) = D
Z ∞
0
dp e−Dp (Dp −1) + O
 1
√
D

= 0 + O
 1
√
D

.
(A15)
We obtain the same result for log XEB f(pj)
=
log(Dpj) + Euler constant [6]. Therefore we have
F ≃⟨Dp −1⟩experiment
(A16)
≃⟨log(Dpj) + Euler constant⟩experiment .
(A17)
We now check numerically at what depth the output
distribution becomes Porter-Thomas.
Figure 1 shows
that the probabilities pj truly follow a Porter-Thomas
distribution (as measured by the Kolmogorov-Smirnov
test) only if the linear XEB is exponentially close to its
limit value.
The scaling in the x axis come from the
variance (see also Ref. [6])
Var (lin XEB) ≃D2 Var
 p2
j

= 2
D.
(A18)
Nevertheless, we ﬁnd numerically and experimentally
that XEB serves as an estimator of ﬁdelity before this
point, and closer to the transition point in Fig. 1A of
the main text, as we don’t require exponential O(1/
√
D)
precision for this estimation.
Appendix B: Device characterization and
benchmarking
1.
Gate Optimization
The gate ﬁdelities of the quantum processor are care-
fully optimized through a series of steps. The ﬁrst step

3
10
4
10
2
100
102
104
106
|lin XEB
1|/ 2/D
0.0
0.2
0.4
0.6
0.8
1.0
Kolmogorov-Smirnov p-value
FIG. 1. The y-axis is the Kolmogorov-Smirnov p−value be-
tween the probabilities pj at a given cycle and the Porter-
Thomas distribution.
The x axis is the distance of linear
XEB to the ideal value in units of standard deviation. Each
point corresponds to a diﬀerent circuit size (with number of
qubits ranging from n = 8 to n = 25) for a given ﬁxed cycle.
Lighter points correspond to datapoints outside the 90%. For
all the instances, the pattern ABCDCDAB is used.
ω1
ω2
g
tr
A
Integrated Histogram
1.0
0.8
0.6
0.4
0.2
0.0
1e-4
1e-3
Leakage rate, rl
tr = 0 ns
tr = 2 ns
tr = 4 ns
B
Initial bringup (1.01e-2)
Pulse optimization (8.4e-3)
Grid optimization (6.5e-3)
Short SQ Gates (5.9e-3)
1.0
0.8
0.6
0.4
0.2
0.0
Integrated Histogram
1e-1
1e-2
XEB Cycle Pauli error, rp
FIG. 2.
Gate ﬁdelity optimizations.
(A) Upper panel:
Schematic showing the ﬂux pulses which detune the qubit
frequencies (ω1 and ω2) and the inter-qubit coupling g during
the iSWAP-like gate. A cosine ﬁlter with a rise time tr is ap-
plied to the pulse on g. Lower panel: Integrated histograms
of leakage per iSWAP-like gate, measured with three diﬀer-
ent values of tr. Each histogram includes an identical set of
19 qubit pairs. (B) Integrated histograms of two-qubit Pauli
error per cycle (which includes contributions from two single-
qubit gates and one iSWAP-like gate) obtained from parallel
XEB taken after diﬀerent optimization steps indicated by the
legend. Each histogram includes all qubit pairs on the quan-
tum device. The median values of diﬀerent histograms are
quoted within the parentheses of the legend.
involves shaping of the ﬂux pulses used to realize the
iSWAP-like gates, schematically shown in Fig. 2A. Here
the computational states of two qubits, |10⟩and |01⟩, are
brought into resonance by pulsing the qubit frequencies
ω1 and ω2 to nearly identical values. An inter-qubit cou-
pling g is then pulsed to a maximum value of gmax ∼−13
MHz over tp = 20 ns to enable a complete population
transfer from |10⟩to |01⟩.
An important error channel for such a two-qubit gate
is the oﬀ-resonant oscillation between the |11⟩and |02⟩
(as well as |20⟩) states, which may result in apprecia-
ble leakage outside the computational space at the end
of the pulses. One possible strategy for mitigating leak-
age is through simultaneous optimization of gmax and tp
such that the minima in leakage and iSWAP angle er-
rors are synchronized [7]. However, due to the spread
in qubit anharmonicities, such an optimization needs to
be done for each individual qubit pair and is therefore
a time-consuming process. An alternative method is to
increase the rise time of the coupler pulse such that the
transitions |11⟩↔|02⟩and |11⟩↔|20⟩are both adia-
batic, thereby eliminating the need for synchronization.
The leakage rates per iSWAP gate rl, measured using a
method adapted from Floquet calibration and applied to
the two-exitation subspace [8], are shown in the bottom
panel of Fig. 2A. We observe that for short rise times
in the coupler pulse (tp = 0 ns), rl in excess of 10−3 is
observed for most qubit pairs. The leakage rate is sup-
pressed as tp is increased to 2 ns, although outlier qubit
pairs with rl > 10−3 are still observed. For tp = 4 ns,
all pairs tested show rl < 4 × 10−4. We therefore employ
tp = 4 ns for experiments described in this work.
The pulse shape optimization of the iSWAP-like gates
has led to a reduction in two-qubit cycle Pauli errors rp
in parallel two-qubit XEB from an initial median value
of 1.01 × 10−2 to 8.4 × 10−3, as shown in Fig. 2B. In the
same plot, we show two additional optimization steps
that have further improved gate ﬁdelities: By optimizing
qubit frequency placements on the 2D grid [9] to miti-
gate cross-talk and coupling to two-level system (TLS)
defects, we reduce rp to 6.5×10−3. Finally, rp is reduced
to only 5.9 × 10−3 by shortening the execution time for
the single-qubit gates from 25 ns to 18 ns.
After minimizing the cycle errors in two-qubit parallel
XEB experiments, we benchmark performance of larger
system sizes by performing a 4-qubit XEB experiment
on ten diﬀerent choices of 4 qubits across the quantum
processor.
We detect a substantial diﬀerence between
the measured four-qubit cycle error and the predicted
four-qubit cycle error based on two-qubit XEB measure-
ments, as shown in the left panel of Fig. 3A. The average
4-qubit cycle errors are over 30% higher than predicted
values. Through further characterizations, this discrep-
ancy is understood to be arising from distortions in qubit
ﬂux pulses which lead to a slow settling of the qubit
frequencies even after the pulses have nominally ended
(a.k.a. “z-tails”). To mitigate the impact of z-tails, we
pad the moments between the two-qubit gates and single-
qubit gates in the random circuits by an idling time. The
right panel of Fig. 3A shows the average diﬀerence be-
tween the measured and predicted four-qubit XEB cycle
errors as a function of the padding time, where we ob-
serve that a padding time of 4 ns is suﬃcient to reduce

4
A
0
2
4
6
8
4Q Location
0
1e-2
2e-2
Cycle Pauli error, rp
Measured (Mean = 1.85e-2)
Predicted (Mean = 1.38e-2)
4e-3
2e-3
0
Pauli Error Difference
0
2
4
6
8
10
Padding time after 2Q gates (ns)
4-Qubit XEB
B
0
2
4
6
16Q Location
Cycle Pauli error, rp
Measured (Mean = 6.58e-2)
Predicted (Mean = 5.32e-2)
16-Qubit XEB
6e-2
8e-2
4e-2
2e-2
0
2
4
6
Cycle Pauli error, rp
Measured (Mean = 5.63e-2)
Predicted (Mean = 5.36e-2)
6e-2
8e-2
4e-2
2e-2
16Q Location
FIG. 3. Mitigating impact of z-tails. (A) Left panel: Com-
parison between the cycle Pauli error of a 4-qubit XEB ex-
periment and the prediction from parallel 2-qubit XEB ex-
periments. Horizontal axis corresponds to diﬀerent 4-qubit
choices. Dashed line indicates the mean values of the mea-
sured and predicted errors.
Right panel: Mean diﬀerence
between the measured and predicted 4Q XEB cycle errors
as a function of padding times after the iSWAP-like gates.
(B) Left panel: Comparison between the cycle Pauli error of
a 16-qubit XEB experiment and the prediction from parallel
2-qubit XEB experiments. Horizontal axis corresponds to dif-
ferent 16-qubit choices. Dashed line indicates the mean values
of the measured and predicted errors. Right panel: Same as
the left panel but with median qubit detunings during the
iSWAP-like gate reduced from 80 MHz to 40 MHz.
the diﬀerence to nearly 0. This additional padding time
has been applied to experiments described in this work.
Having reached agreements between two-qubit and
four-qubit XEB experiments, we compare two-qubit par-
allel XEB predictions with 16-qubit XEB experiments.
The initial result is shown in Fig. 3B, where we again
ﬁnd that the measured 16-qubit XEB cycle errors are
24% higher than predictions, even with padding between
single- and two-qubit gates. To reduce this discrepancy,
we have re-optimized the qubit frequency placements and
reduced the detunings of the qubits during the iSWAP-
like gates by a factor of two.
The 16-qubit parallel
XEB cycle errors measured after this qubit frequency
re-optimization agrees closely with the predicted values
from two-qubit parallel XEB measurements.
2.
Benchmarking of gates and readout
In order to construct the error model for a random
circuit, we use several experiments to predict the er-
ror rate of each element. The single qubit error is cal-
ibrated through Randomized Benchmarking using only
π/2-pulses. For the RB, we use 5 diﬀerent cycles log-
arithmically spaced up to a thousand Cliﬀord, with 10
random Cliﬀord circuit instances with 600 repetition per
number of cycles and circuit. The two-qubit dressed er-
ror is measured through parallel XEB after optimizing
for a phased-fSim model. We used 20 random circuit in-
stances, with 10 linearly spaced depths up to 150 cycles.
The readout error is measured by preparing a random
bitstring state and measuring the Probability of wrong
labeling of each qubit. The error is average between the
measurement error of the state |0⟩and |1⟩. Finally, T1
and T2 Echo, used for the idling on the edges of each
patches, is measure through standard population decay
experiment and Echo measurement. Fig. 4F shows the
improvement over the results from [6] with the dash line
reporting the average ﬁdelity achieved at the time. Every
aspect of the experiment has improved, with a notable
contribution from readout ﬁdelity.
In Fig. 5, we report the angles of the iSWAP-like gate
measured with parallel XEB. We note that the C-phase
of the gate is now closer to π/10 compared to π/6 in [6].
Appendix C: Additional experimental data
1.
Phase-matching RCS experiment
When performing a two-qubit gate, the actual unitary
applied to the qubits diﬀers from the ideal fSim by extra
single-qubit Z-rotations from two sources: 1) the qubits
are detuned during the gate, and 2) the qubit interac-
tion Hamiltonian terms are not time-independent but
rather oscillate due to the frequency diﬀerence between
the qubits. The rotations arising from (1) do not depend
on the time when the gate is applied, but the rotations
arising from (2) do depend on this time, with a time-
dependent phase γ(t) = 2π(f1 −f0)t.
When running quantum circuits, we typically imple-
ment Z-rotations as ”virtual” gates by changing the
phase of applied microwave pulses. This is equivalent to
a circuit-level transformation where Z gates are pushed
through the circuit by commuting them past other gates.
The extra Z rotations associated with fSim gates can also
be handled in this way by compiling them into the pulse
sequence; in this case we say the fSim gates are ”phase-
matched”. We can also ignore these extra Z rotations
when compiling and then account for them in simula-
tion by applying the appropriate time-dependent unitary
for each gate instead of the ideal fSim unitary; in this
case we say the fSim gate ”non-phase-matched”. Note
that Z-rotations only commute through fSim when θ is
0 or π/2, that is, for cphase-like or iswap-like gates. If
the gate is not exactly iswap-like, then commuting Z-
rotations through it for phase-matching introduces some
error, which we can see in the slightly lower XEB ﬁdelity
when using phase-matched gates.
We have also run the RCS experiment on 70 qubits
using frame tracked and phased matched gate. To avoid

5
Single qubit Pauli error (x1000)
column
0.5
1.0
1.5
2.0
2.5
3.0
Readout error (x100)
3.0
2.5
2.0
1.5
1.0
row
1
2
3
4
5
7
6
9
8
11
10
1
2
3
4
5
7
6
9
8
0
10
column
1
2
3
4
5
7
6
9
8
0
10
row
1
2
3
4
5
7
6
9
8
11
10
Two-Qubit Pauli error (x1000)
row
column
1
2
3
4
5
7
6
9
8
0
10
4
6
8
10
12
14
18
16
1
2
3
4
5
7
6
9
8
11
10
T1 (μs)
column
1
2
3
4
5
7
6
9
8
0
10
row
1
2
3
4
5
7
6
9
8
11
10
30
24
18
12
6
row
1
2
3
4
5
7
6
9
8
11
10
column
1
2
3
4
5
7
6
9
8
0
10
24
20
16
12
8
T2 Echo (μs)
Error rate
10-4
Single qubit
two-qubits
intrinsic
two-qubits
dressed
Readout
10-3
10-2
CDF
B
A
C
D
E
F
FIG. 4. Benchmarking of the device: Benchmarking of the random circuits elements. A: Single qubit Pauli Error rate
measured with Randomized Benchmarking. B: Readout error rate measured by preparing random bitstrings and averaging the
errors over the bitstrings. C: Two qubit Pauli Error rate measured with parallel 2-qubit XEB. D and E: T1 and T2 Echo times.
E CDF of the diﬀerent errors, continuous vertical line is the average, and dashed line corresponds to the average from Ref. [6].
row
1
2
3
4
5
7
6
9
8
11
10
1
2
3
4
5
7
6
9
8
11
10
row
column
1
2
3
4
5
7
6
9
8
0
10
column
1
2
3
4
5
7
6
9
8
0
10
θ/π
φ/π
0.52
0.48
0.50
0.14
0.08
0.10
0.12
A
B
FIG. 5. ISWAP-like characterization: Measured angle of the iSWAP-like gate. On average, the angles are θ = 0.495(0.009)×
π and φ = 0.09(0.01) × π
adding extra physical Z-gate, we assume that all the gates
have a perfect swap angle and use virtual Z gates to do
both frame tracking and phase matching. The result can
be seen in Fig. 6. Due to the imperfection in the cal-
ibration of the swap angle, the total ﬁdelity of the cir-
cuits is lower than the non-phased matched, non frame
tracked case presented in the main text. However, the er-
ror model correctly takes into account this discrepancy.
We also present in this dataset a beyond classical exper-

6
Cross-entropy benchmarking, FXEB
10-3
10-2
Prediction for the full circuit
Number of cycles, m
16
18
20
22
24
26
3-patches
2-patches
FIG. 6.
Phased matched Random Circuit Sampling
experiment: We validate our error model with 2-patches
and 3- patches XEB similar to the data in main text. The
red star represent the estimated ﬁdelity of the beyond classical
experiment.
iment with a ﬁdelity predicted above 0.7 × 10−3.
2.
Adding noise
In order to probe the noise induced phase transition,
we artiﬁcially increase the single qubit error rate by
adding random rotations after each layer of single qubit
gates in the circuit run on the hardware. The random
single qubit gates are of the form:
U = ZzZaXxZ−a
(C1)
where z and x are sampled from a normal distribution
center on zero and with a standard deviation given by
the injected noise amplitude A. The axis a is randomly
sampled from a normal distribution centered on −1 wth
a standard deviation of 1. In order to avoid correlated
noise, the random gates are diﬀerent from layer to layer
in a single circuit and from circuit to circuit. These extra
gates are not used in the classical simulation. Figure 7 A
shows the insertion of the random single qubits gates is
done on each single qubit cycle of a random circuit. In
Figure 7 B we verify that adding these extra single qubit
gates results in an average noise that scales as the square
of the error angle, as expected.
3.
Noise phase transition extended data
In this appendix, we show the full dataset used for
the characterization of the Noise induce phase transitions
identiﬁed in the main text. See Figs. 8 and 9.
Injected noise amplitude (mrad)
20
30
40
50
Single qubit error per cycle (%)
1.8
1.0
1.2
1.4
1.6
0.6
0.8
0.4
measured
parabola fit
Injected 
noise
Single
qubit
layer
Entangler
layer
A
B
FIG. 7.
Controlling error rate.
A: Singles qubit gates
with random rotations are added after each single qubit layer.
B: Single qubit error rate with the added random rotations
measured with single qubit XEB. The error rate follows a
parabolic law.
Appendix D: Linear XEB via population dynamics
1.
Population dynamics for the uniformly random
single qubit gate ensemble
The linear XEB over circuits may be written as
XEB(t) = 2nC −1,
(D1)
C =
X
z
⟨z| Uρ0U † |z⟩⟨z| E

Uρ0U †
|z⟩,
(D2)
where E corresponds to a noisy evolution channel. We
now explain how it’s average can be calculated via pop-
ulation dynamics [10, 11].
Consider ﬁrst a noise free evolution.
Note that the
average probability has the form of an out-of-time or-
dered correlator, C = P
z Tr{Ozρ0(t)Ozρ0(t)} where
Oz = |z⟩⟨z|, and |z⟩= ⊗n
i=1 |zi⟩, zi = {0, 1} is an n
qubit computational basis state. It can be described in
terms of two copies of the evolution ρ0(t) ⊗ρ0(t). Af-
ter averaging over uniformly random (Haar) single qubit
gates the dynamics in such doubled operator space is
fully described in terms of two invariants: identity oper-
ator 11 and B = (1/3) P
α=x,y,z σα ⊗σα, where σα are
Pauli operators.
The average dynamics of a pair of identical operators
O(t) ⊗O(t) in the n qubit system subject to a circuit
consisting of cycles with two-qubit gates can be described
by a time dependent distribution P ({vi}, t) over an n
bit register {vi}, vi ∈{0, 1} corresponding to {11i, Bi},
respectively. That is,
O(t) ⊗O(t) =
X
{vi}
P({vi}, t)
O
i
((1 −vi)11i + Bivi) .
(D3)
For operators which satisfy O2 = 1 (true for Pauli
operators) the coeﬃcients are normalized probabilities

7
error per cycle, ε × n
0.2
0.4
error per cycle, ε × n
0.1
0.2
0.3
0.05
0.10
0.15
error per cycle, ε × n
0.20
10-th cycle
18-th cycle
26-th cycle
14-th cycle
26-th cycle
38-th cycle
20-th cycle
38-th cycle
56-th cycle
XEB ratio (pred./meas.)
linear XEB
100
10-1
10-2
10-3
100
10-1
measured
predicted
T = 8
T = 12
T = 18
A
B
C
D
E
F
FIG. 8. Weak-link model: See main text Fig. 4 for more details. The ﬁrst row shows the measured XEB value as a function
of the error per cycle. In the strong noise regime, the measured XEB value is far from the expected value, whereas in the weak
noise, and suﬃcient depth, the measured value is correctly predicted by the component ﬁdelity of the circuit. The second row
shows the XEB ratio.
P
{vi} P({vi}, t) = 1.
Each two-qubit gate deﬁnes a
Markov process with the update matrix,
P ({vi}, t + 1) =
X
v′
jv′
k
Ωvjvk,v′
jv′
kP ({v′
i}, t) .
(D4)
where the indexes j and k correspond to the qubits in-
volved in the corresponding two-qubit gate.
We can take the two-qubit gate to be approximately
equal to an iSWAP, Uij = exp
 −i π
4 (XiXj + YiYj)

, for
which the population dynamics update corresponds to
ˆΩ(i,j) =




1 0 0 0
0 0
1
3
2
9
0
1
3 0
2
9
0
2
3
2
3
5
9



.
(D5)
Elements of the matrix ˆΩcorrespond to the transition
probabilities between diﬀerent conﬁgurations induced by
the application of a two-qubit gate. ˆΩ10,01 corresponds
to B hoping from one qubit to another (Ω10,01 = 1
3 for
iSWAP) whereas Ω10,11 corresponds to creation of a new
B (Ω10,11 = 2
3 for iSWAP).
The contribution of each conﬁguration to XEB is de-
termined by individual invariants, (11i, Bi) →(1, 1/3) as
XEB = 2n X
{vi}
1
3
P vi P({vi}, t) −1.
(D6)
To include the eﬀects of noise the two-qubit gate cycle
update rules need to be supplemented with the noise-
induced decay rules at each two qubit cycle [10],
11i11j →11i11j,
(D7)
Bi11j →exp(−16
15p2)Bi11j,
(D8)
BiBj →exp(−16
15p2)BiBj,
(D9)
where p2 is the two-qubit depolarizing error.

8
error per cycle, ε × n
0.2
0.4
XEB ratio (pred./meas.)
linear XEB
0.6
error per cycle, ε × n
0.2
0.4
0.6
0.8
100
10-1
10-2
10-3
100
10-1
10-2
12-th cycle
16-th cycle
20-th cycle
8-th cycle
12-th cycle
16-th cycle
weak-link, non-staggered pattern
weak-link, staggered pattern
A
B
C
D
measured
predicted
FIG. 9. Noise phase transition in 2D: The ﬁrst row shows the measured XEB as a function of the error per cycle. In the
strong noise regime, the measured XEB value is far from the expected value. See main text Fig. 4 for more details about the
diﬀerent patterns. For very strong noise, and large number of cycles the linear XEB value starts to be hard to measure and
requires a large number of repetitions, making these measurements challenging.
2.
Convergence of population dynamics to
Porter-Thomas
The initial state for population dynamics is obtained
by averaging the initial bitstring ρ0 = Q
i(11i + Zi)/2
over the ﬁrst layer of single qubit gates. The result of
this averaging is Q
i(11i + Bi)/4. It can be interpreted
as equal weight distribution P({vi}, 0) = 1/2n over all
conﬁgurations {vi}.
After the ﬁrst layer of one qubit
gates XEB = (4/3)n.
In a multi-qubit system a layer of gates corresponds to
the evolution under ˆΩ(i,j) applied to each pair of qubits
subject to a gate of the layer. The circuit can be char-
acterized by a transfer matrix ˆT that consists of a prod-
uct of the layers that appears periodically, such that the
whole circuit corresponds to ˆT d.
There are two steady states of this Markov chain: (i)
the vacuum {vi = 0} for all i, (ii) the thermal state that
corresponds to P({vi}) = Q
i p(vi), where p(0) = 1/4
and p(1) = 3/4. At long times in the noise free Porter-
Thomas limit, C = 2/(2n + 1), and XEB ≈1. Note that
the vacuum conﬁguration 11⊗n does not evolve, and in the
presence of noise in the long depth limit the vacuum is
the only remaining conﬁguration. This produces the only
non-vanishing contribution to C, resulting in XEB=0.
3.
Weak-link model analytical solution
In this section we provide details justifying Eq. (2) of
the main text. We consider an example that can be an-
alyzed analytically: a chain with a weak link connecting
its two halves A and B, that was introduced in the main
text. At the weak link a two-qubit gate is applied only
at depths mT where T is the number of layers applied to
the rest of the chain. We describe the dynamics of XEB
using the population dynamics formalism introduced in
Ref. [10].
We assume T is long enough to establish the “ther-
mal” (or Porter-Thomas) state in each half of the chain

9
independently. We introduce probabilities of four pos-
sible population dynamics conﬁgurations after time T:
g00, g01, g10, g11 corresponding to both halves in the vac-
uum state, one half in the vacuum state and one in the
thermal state and both halves in the thermal state. Ini-
tially all four conﬁgurations gij give order one contribu-
tions to linear XEB, despite having expontially diﬀerent
probability in the {vi} basis, due to the term 1/3
P
vi in
Eq. D6.
A single application of the weak link gate after T cycles
updates these probabilities as follows,
g00(t + T) = g00(t),
(D10)
g01(t + T) = F T/2 1
4g01(t),
(D11)
g10(t + T) = F T/2 1
4g10(t),
(D12)
g11(t + T) ≃F T g11(t),
(D13)
where as before F is the ﬁdelity per layer for the whole
chain excluding the weak link, and the factor 1/4 comes
form the two-qubit iSWAP gate.
In the last equation
we drop the contribution of g10 to g11 because it adds
only an exponentially small contribution to XEB. This
is because the initial thermal + vacuum state has ex-
ponentially smaller probability, as explained above. We
therefore ﬁnd
XEB(mτ) = F mT + 2
1
4F T/2
m
.
(D14)
This gives a criteria for XEB to serve as a good ﬁdelity
estimate for the chain with weak link,
F T > 1
16.
(D15)
4.
Numerical analysis of the phase transitions
In this section we provide numerical simulation of XEB
dynamics justifying the analysis of the data in the main
text. Linear XEB is calculated numerically using the ex-
act mapping on population dynamics introduced above,
see Eq. (D6). The time dependence of weights P({vi}, t)
is computed by applying the transfer matrices corre-
sponding to each two-qubit gate, Eq. (D4). This method
requires memory that scales exponentially as 2n because
we evolve the full probability vector. At the same time it
predicts the dynamics of the average linear XEB in the
presence of noise and is quadratically more eﬃcient than
direct simulation of a noisy density matrix. Without loss
of generality we simulate a simpliﬁed model of the noise
including only single qubit noise applied to each qubit
after each layer of two qubit gates.
We ﬁrst demonstrate the ﬁnite size critical scaling near
the dynamical transition. Fig. 10 is a numerical analog of
Fig. 2 A of the main text, showing the depth dependence
of linear XEB for a ﬁxed error rate per qubit ϵ = 0.01
0
5
10
15
20
25
30
depth
10
3
10
2
10
1
100
101
102
103
XEB
n = 12
n = 14
n = 16
n = 18
n = 20
n = 22
n = 24
6.5
7.0
7.5
tcrit
0.01
0.02
0.03
0.04
FIG. 10. XEB as a function of depth for diﬀerent size n qubit
chains. The error per qubit per unit time is ϵ = 0.01. Inset
shows the dependence of the critical depth on the error per
qubit per unit time.
and diﬀerent size chains. The scaling of linear XEB with
the system size changes from growth to decay at the tran-
sition point, whose value is approximately size indepen-
dent.
This transition can be analytically continued to
the anti-concentration point identiﬁed for noise free ran-
dom circuits [12]. The population dynamics expression
for the linear XEB, Eq. (D6) can be interpreted as a
partition function of a t × n classical Ising model, where
t is the depth. Discontinuity in this partition function
therefore indicates a phase transition. The appropriate
thermodynamic limit corresponds to scaling depth with
the logarithm of the system size t = τ log2 n. The transi-
tion point is τ ≈1 with corrections due to error per cycle
ϵn ∼O(n0).
The noise induced phase transition (NIPT) is charac-
terized by the change in the depth dependence of the or-
der parameter Θ ≡exp(−ϵnd)/XEB. Fig. 11 shows the
depth dependence of Θ for diﬀerent values of the error
per cycle 0 ≤ϵn ≤1.34. At low error the order param-
eter converges to a constant, whereas in the presence of
a suﬃciently large error per cycle the order parameter
converges to zero. These to regimes are separated by the
phase transition where the order parameter is roughly
depth independent. This transition can also be under-
stood in terms of the partition function of the classical
t×n Ising model. The thermodynamic limit corresponds
to t →∞.
In the case of the weak link model introduced in the
main text and in Sec. D 3, where the system is split into

10
0
2
4
6
8
10
12
14
16
18
depth, t
10
6
10
5
10
4
10
3
10
2
10
1
100
e
nt/XEB
FIG. 11.
Order parameter of the noise induced phase tran-
sition as a function of depth for diﬀerent levels of noise for
0 ≤ϵn ≤1.34 (red to purple) on a n = 18 qubit chain. The
link frequency is T = 1.
0.0
0.1
0.2
0.3
0.4
 n
0.0
0.2
0.4
0.6
0.8
1.0
e
nt/XEB
t = 10
t = 19
t = 28
t = 37
FIG. 12.
Order parameter of the noise induced phase tran-
sition as a function of error per unit time for diﬀerent depths
on a n = 18 qubit chain. The link frequency is T = 1/18.
The dashed line corresponds to the t →∞limit.
0.2
0.3
0.4
0.6
1
 n
0.2
0.4
0.6
0.8
1.0
link frequency
FIG. 13. Comparison of the transition point dependence on
the weak link period T for the discrete gate set used in the
experiment and uniformly random ensembles of single qubit
gates. Black squares and magenta rhombus correspond to n =
16 (4 × 4) ABCD pattern for the experimental discrete gate
set and continuous ensemble, respectively. Green squares and
red circles correspond to n = 16 chain for the experimental
and uniformly random gate set.
two parts with the gates entangling the two parts applied
suﬃciently rarely, there is a less data intensive procedure
to identify the NIPT. This relies on the crossing point
of the order parameter Θ as a function of ϵn for diﬀer-
ent depths of the circuit (separated by a circuit period),
shown Fig. 12. This procedure was used to identify the
transition experimentally in Fig. 3 of the main text, and
works well for weak link frequency T < 1 in 1D. In the
absence of the weak link time dependence of the order
parameter the method ilustrated in Fig. 11 was used to
identify the transition point. Numerical simulations for
2D circuits give similar results for the order parameter.
The extracted transition points are summarized in the
phase diagram presented in Fig. 3 G of the main text.
We compare the transition point in linear XEB for an
uniformly random ensemble of single qubit gates intro-
duced above to the discrete single qubit gate set used
in the experiment. The latter maps onto population dy-
namics in a space of three states per qubit and is more
costly to implement, requiring memory 3n. Fig. 13 shows
a comparison of the NIPT location for 16 qubit systems
of two diﬀerent geometries: a chain and a 4 × 4 system.
The role of the ensemble of single qubit gates does not
appear to be signiﬁcant for the NIPT point.

11
Appendix E: Simulation of random circuit sampling
using tensor network contraction
Tensor network contraction has been used extensively
in the simulation of RCS over the last few years [13–20].
Given a quantum circuit, it is straightforward to generate
a tensor network whose contraction yields one or many
of its output amplitudes. In this tensor network, each
one-qubit gate is expressed by a rank-2 tensor, each two-
qubit gate is expressed by a rank-4 tensor, and the input
state |0⟩⊗n is expressed by the tensor product of n rank-1
tensors.
The time and memory complexities of the contraction
of such a tensor network depend strongly on the order in
which tensors are contracted. Its time complexity has a
lower bound related to the treewidth of the line graph of
the tensor network. Ref. [21] introduced a method to al-
leviate the memory requirements for the contraction of a
tensor network at the expense of a larger time complexity.
This method involves slicing (projecting) certain care-
fully chosen indices in the network to the diﬀerent values
in their support. Each slice yields a tensor network that
requires less memory to be contracted, although one has
to contract a number of tensor networks that scales ex-
ponentially in the number of indices sliced. Refs. [15, 16]
made substantial improvements in the optimization of
contraction orderings and choice of slices.
These works focused on the contraction of an indepen-
dent tensor network per output bitstring, which results
in a simulation runtime that scales linearly in the num-
ber of bitstrings sampled. Speciﬁcally, an algorithm to
sample from the output distribution of a quantum circuit
is as follows: 1) sample bitstrings uniformly at random;
2) calculate the ideal probabilities for these bitstrings;
3) perform rejection sampling to select a subset of these
bitstrings as the output. The frugal rejection sampling
proposed in Ref. [22] requires computing only about 10
probabilities per output bitstring sampled. We can calcu-
late the probabilities of ≳10 very similar bitstrings with
just one contraction, and as we will only select one using
rejection sampling and the probabilities are still uncorre-
lated, the result is the same as the algorithm above [23].
Ref. [19] introduced a method to compute amplitudes
of a large number of uncorrelated bitstrings with a much
lower overhead than linear. This implies the sparsiﬁca-
tion of the output of the tensor network as output tensors
are being contracted: only those tensor entries that will
lead to the computation of an amplitude of a bitstring
in a pre-speciﬁed set are kept.
In addition, Ref. [19]
managed to make use of a special property of the fSim
gate [6] in order to propagate the slicing of certain in-
dices to other “related” indices at no extra cost. These
two advancements allowed Ref. [19] to simulate sampling
1 million uncorrelated bitstrings from the largest circuit
of Ref. [6] in 15 hours using 512 NVIDIA Tesla V100
SXM3 GPUs with 32GB of RAM each.
Similarly, Ref. [18] introduced dynamic programming
techniques to reuse certain computations across the dif-
ferent instances of the slices taken over a tensor net-
work. This allowed them to simulate the largest circuit of
Ref. [6] in 14.5 days using 32 NVIDIA Tesla V100 GPUs
with 16GB of RAM each.
In the present work we incorporate all of these ad-
vancements into a highly eﬃcient simulated annealing
optimizer in order to further reduce the time estimates
for the simulation of RCS experiments. Tensor network
contraction orderings, choice of sliced indices, sparsiﬁca-
tion of the output of the circuit, and reuse of interme-
diate computation across slicing instances, are all taken
into account simultaneously in the optimization. This al-
lows us to reduce the number of FLOPs required for the
noisy simulated sampling of 1 million bitstrings from the
hardest circuit of Ref. [6] by about an order of magni-
tude compared to the requirements of Refs. [19] and [18]
when using a similar cluster with similar GPUs. When
running on a Google Cloud CPU with 12 TB of memory,
we estimate FLOP counts about two orders of magnitude
lower than in Refs. [19] and [18]. We estimate a runtime
of 2 days using a single CPU with a 20% FLOP eﬃciency,
similar to the eﬃciency found in Refs. [15, 16, 19]. Ta-
ble I of the main text shows the runtime estimates for the
simulation of the experiments of Refs. [6, 24, 25] and the
present work when run on the Frontier supercomputer.
Appendix F: Bounds to approximate tensor
representations
The most promising numerical methods for more ef-
ﬁcient approximations to random circuit sampling are
based on approximate tensor representations [15, 26, 27].
Let’s write the state on n qubits as
|ψ⟩=
X
j1,j2,...,jn
ψj1,j2,...,jn |j1, j2, . . . , jn⟩.
(F1)
We study the simplest but illustrative case where the
state is approximated with two tensors M (1) and M (2)
as [27]
˜ψj1,j2,...,jn =
χ
X
α=1
M (1)
j1,j2,...,jl,αM (2)
α,jl+1,jr+2,...,jn .
(F2)
The index α is called a virtual index and χ is called the
bond dimension. The state is broken into qubits on the
left [1 . . l] and the right [l + 1 . . n], with the virtual
index encoding the entanglement between these spaces.
The size of the two sub-Hilbert spaces are respectively
D1 = 2l and D2 = 2n−l.
Given a quantum state |ψ⟩and bond dimension χ, the
best approximation of the form (F2) can be found keep-
ing the largest χ singular values (Schmidt coeﬃcients)
of a matrix with entries corresponding to the amplitudes
of |ψ⟩, and row and column dimensions corresponding to

12
the left and right spaces. This gives the approximation
| ˜ψ⟩=
1
pPχ
α=1 S2α
χ
X
α=1
Sα |lα⟩|rα⟩,
(F3)
based on the Schmidt decomposition, where the Schmidt
coeﬃcients S are ordered from large to small. This rep-
resentation is exact if the bond dimension is larger than
the Schmidt rank.
For approximate matrix-product state (MPS) simula-
tions [26, 27], the initial state is a product state with
Schmidt rank equal zero.
Gates involving only qubits
on the left (or right) merely modify the tensor M (1)
(or M (2)) without aﬀecting the Schmidt rank. However,
multi-qubit gates applied on qubits belonging to both left
and right partition, generally increase the Schmidt rank.
The truncation of the quantum state to a ﬁxed bond di-
mension χ ≪2min(l,n−l) eventually reduces the ﬁdelity
to F = |⟨ψ| ˜ψ⟩|2 = Pχ
α=1 S2
α. In the next paragraphs, we
quantify the ﬁdelity for random Haar states, and we pro-
vide both numerical and analytical bounds for arbitrary
states.
1.
Fidelity for Haar random states
The output state of a suﬃciently deep quantum ran-
dom circuit can often be approximated as a Haar random
state.
Therefore, we can explain the ﬁdelity obtained
with representation (F2) using the distribution of singu-
lar values of a complex matrix with Gaussian entries [3]
and dimension D1 ×D2, where D1 (D2) is the dimension
of the left (right) Hilbert space. We extend the study of
Ref. [27] to the case D1 ̸= D2, and we assume without
loss of generality D1 ≤D2.
Let S denote singular values and s = √D1S denote
normalized singular values. The distribution of the nor-
malized singular values follows the Marˇcenko–Pastur dis-
tribution [28]
pλ(s) = 1
π
q
(λ2
+ −s2)(s2 −λ2
−)
λs
,
(F4)
with D1 ≤D2, λ = D1/D2, λ± = (1 ±
√
λ) and s ∈
[λ−, λ+]. For λ = 1, pλ(s) reduces to:
p(s) = 1
π
p
4 −s2.
(F5)
For a given bond dimension χ the fraction of singular
values is r = χ/D1. Let us deﬁne the cumulative distri-
bution of singular values
Cλ(s′) =
Z λ+
s′
ds pλ(s)
(F6)
Note that r = Cλ(s′) is the fraction of singular values
up to a given normalized singular value s′, starting from
the largest singular values.
Therefore, the normalized
singular value corresponding to a given fraction r is:
sλ(r) = C−1
λ (r).
(F7)
For λ = 1 one obtains [27]
sλ=1(r) = 2 cos
1
2A−1(πr)

,
(F8)
where A(θ) = θ −sin θ.
The ﬁdelity for a given fraction r of singular values is
given by
Fλ(r) =
Z λ+
s(r)
ds s2pλ(s).
(F9)
Recalling that
dsλ(r)
dr
= dC−1
λ (r)
dr
=
1
dCλ
ds

s=sλ(r)
= −
1
pλ(sλ(r)),
one also gets an alternative expression
Fλ(r′) = −
Z 0
r′ dr
1
pλ(sλ(r))s2
λ(r) pλ(sλ(r))
=
Z r′
0
dr s2
λ(r) .
(F10)
For χ ≪D1 we have
Fλ(χ/D1) ≤dFλ(r)
dr

r=0
χ
D1
= λ2
+
χ
D1
,
(F11)
where we used the fact that Fλ is a monotoni-
cally increasing and strictly concave function (that is,
d2Fλ/dr2 = −2sλ(r)/pλ(sλ(r)) ≤0). For λ = 1 [27],
the bound reduces to Fλ=1 ≤
4χ
√
D. This gives an up-
per bound for the ﬁdelity of a single projection into the
ansatz of Eq. (F2) once the ideal state is suﬃciently en-
tangled.
2.
Fidelity bound for arbitrary states
The ﬁdelity of a Schmidt-decomposed state as in
Eq. (F3) is
F =
χ
X
α=1
S2
α.
(F12)
Using the Jensen’s inequality, it follows that
χ2
 
1
χ
χ
X
α=1
S2
α
!2
≤χ
χ
X
α=1
S4
α
(F13)

13
and therefore
F ≤
v
u
u
tχ
χ
X
α=1
S4α ≤
q
χ tr ρ2
L,
(F14)
with tr ρ2
L = PD1
α=1 S4
α being the reduced purity after
tracing out the qubits on the right. Using exact numerics
for small systems (see Fig. 14), one can ﬁnd a tighter
bound
F ≲Fλ
 χ tr ρ2
L

≤λ2
+ χ tr ρ2
L,
(F15)
with Fλ being the ﬁdelity for Haar random states (see
Eq. F10), and the average is at ﬁxed depth.
Equa-
tions (F14) and (F15) gives an upper bound for the ﬁ-
delity of a single projection for an arbitrary quantum
state in the form (F2).
We can compare the numerical bound Eq. (F15)
with the ﬁdelity for Haar random states Eq. (F11) for
D1 =
√
D. The average purity for a Haar random state
when D1 =
√
D is:
⟨⟨tr ρ2
L⟩⟩=
D1
X
α=1
⟨⟨S4
α⟩⟩= 1
D2
1
D1
X
α=1
⟨⟨s4
α⟩⟩
= 1
D1
Z 2
0
s4 1
π
p
4 −s2ds =
2
√
D
.
(F16)
Therefore,
for
small
χ/
√
D,
the
numerical
bound
Eq. (F15) is only twice larger than the correct ﬁdelity
in this case.
3.
Open and close simulations using approximate
tensor representations
As described in [27], approximated tensor representa-
tions can be used to sample bitstrings with a given target
ﬁdelity F. More precisely, authors of [27] present two dif-
ferent protocols: “open” and “close” simulations.
For open simulations at ﬁxed bond dimension χ, the
circuit C is split in k sub-circuits such that C
=
Ck · · · C1C0. Starting from the initial state |ψ0⟩= |0⟩,
a new approximate state | ˜ψ1⟩is obtained by truncat-
ing the state |ψ1⟩= C1 |ψ0⟩using its χ largest singular
values {Sα,1} only. The approximate state | ˜ψ1⟩is then
evolved to get |ψ2⟩= C2 | ˜ψ1⟩, which is again truncated
to its largest χ singular values to obtain the approximate
state | ˜ψ2⟩. Calling fk = | ⟨ψk| ˜ψk⟩|2 = Pχ
α=1 S2
α,k the
partial ﬁdelity of the approximate state | ˜ψk⟩, Ref. [27]
shows that, for random circuits, the ﬁnal ﬁdelity can be
expressed as the product of all the partial ﬁdelity, that
is F = | ⟨˜ψk|C|ψ0⟩|2 = f1f2 · · · fk.
For a large number of qubits, computing |ψi⟩=
Ci |ψi−1⟩and ﬁnding its singular values to get the ap-
proximate state | ˜ψi⟩is numerically intractable. To over-
come this limitation, authors of [27] introduce a varia-
tional approach to compute | ˜ψi⟩without the need of the
0.0
0.2
0.4
0.6
0.8
1.0
( tr
2
L)
0.0
0.2
0.4
0.6
0.8
1.0
F
n = 8
n = 12
n = 13
n = 15
n = 16
n = 18
n = 18
n = 18
n = 20
n = 20
n = 21
n = 24
n = 24
0.00
0.01
0.02
2e-03
4e-03
6e-03
FIG. 14. Numerical ﬁdelity bound. The plot compares the ex-
act ﬁdelity F for diﬀerent Sycamore layouts of diﬀerent sizes,
cycles, and bond dimensions χ to the numerical upper-bound
Fλ
 χ trρ2
L

, with Fλ and trρ2
L being respectively the ﬁdelity
in the Haar limit and the reduced purity. The dotted-gray line
corresponds to the bound Fλ
 χ trρ2
L

≤λ2
+χ trρ2
L ≤4 χ trρ2
L.
For all the instances, the pattern ABCDCDAB is used, and
the qubits are partitioned in two equal halves using a diagonal
cut.
intermediate state Ci | ˜ψi−1⟩and without explicitly com-
puting its singular values. More precisely, for any Ci, a
new random approximate tensor |˜φi⟩of bond dimension
χ is used to compute the objective:
˜fi(|˜φi⟩) = | ⟨˜ψi−1|C|˜φi⟩|2.
(F17)
Recalling that both | ˜ψi−1⟩and |˜φi⟩are MPS of bond
dimension χ, computing ˜fi for suﬃciently shallow Ci and
small χ is doable even for a large number of qubits [27].
Using the update strategy proposed in [27], one can ﬁnd
| ˜ψi⟩as
| ˜ψi⟩= argmax
| ˜φi⟩
˜fi(|˜φi⟩).
(F18)
Because the quantum system becomes more and more
entangled by applying the sub-circuits Ci,
one ex-
pects that fi+1 ≤fi, reaching the saturation value of
Fλ(χ/D1) when the quantum state reaches the random
Haar limit.
Close simulations at ﬁxed bond dimension χ are useful
to sample bitstrings with an improved target ﬁdelity than
the corresponding open simulations with the same bond
dimension. To start, the circuit is split in three parts
C = C2CMC1. Using the open simulation protocol, the
approximate state |˜Ψ1⟩is computed by using |0⟩as initial
state and C1 as circuit. Similarly, the approximate state
|˜Ψ2(x)⟩is computed by using the open simulation proto-
col with |x⟩as initial circuit and C†
2 as circuit. Finally,

14
10
2
10
1
F
10
2
10
1
F1F2
n = 12
n = 15
n = 18
3.5e-3 4.0e-3 4.5e-3
3.5e-3
4.0e-3
4.5e-3
FIG. 15. Fidelity for close simulations F1F2 (see App. F 3),
compared to the exact ﬁdelity F.
The bond dimension is
ﬁxed to χ = 8. Each point correspond to a diﬀerent circuit,
with the average being performed over bitstrings. Circuits are
split in three parts of |C1| = 8, |CM| = 4 and |C2| = 8 cycles
respectively. For all the instances, the pattern ABCDCDAB
is used, and the qubits are partitioned in two equal halves
using a diagonal cut.
the approximate amplitude ˜ax is computed as:
˜ax = ⟨Ψ2(x)|CM|Ψ1⟩.
(F19)
As discussed in [27], ˜ax can be seen as amplitudes ex-
tracted from a quantum state with a ﬁdelity F = F1F2,
with F1 and F2 being the ﬁdelity of |˜Ψ1⟩and the average
ﬁdelity of |˜Ψ2(x)⟩respectively. Because both |0⟩and |x⟩
are MPS with bond dimension 0, F1F2 might be larger
than the ﬁdelity one obtains with the open simulation
protocol. However, unlike the open simulation, multiple
runs are needed to get the required number of bitstrings.
Fig. 15 shows the ﬁdelity of amplitudes sampled using
the close simulation protocol at ﬁxed bond dimension
χ = 8, compared to the exact ﬁdelity. Each point corre-
spond to a diﬀerent circuit, and circuits are split so that
C1 and C2 contain 8 cycles while CM contains 4 cycles.
The average is performed over bitstrings.
4.
XEB for approximate tensor representations
We now explain why, at suﬃciently large depth, XEB
is still a good estimator of ﬁdelity for approximate tensor
representations. The optimal approximate tensor repre-
sentation Eq. (F3) is based on the Schmidt decomposi-
tion, that is
| ˜ψ⟩=
1
√
F
χ
X
α=1
Sα |να⟩,
(F20)
where |να⟩= |lα⟩|rα⟩and F = Pχ
α=1 S2
α is the ﬁdelity.
We ﬁrst show that in the limit of large depth the left
and right singular vectors {|lα⟩} and {|rα⟩} are Haar ran-
dom states. Note that these are the singular vectors of
a matrix M with Gaussian entries (a Haar random ma-
trix), see App. F 1. For any unitaries U and V we also
have that UMV † is a matrix with Gaussian entries. This
implies that the distribution of singular vectors is invari-
ant under unitary transformation, that is, the singular
vectors are Haar random.
Therefore, we approximate
the singular vectors as having i.i.d Gaussian random real
and imaginary parts.
We ﬁrst give an explanation for why XEB is a good
estimator of ﬁdelity in this case, followed by a formal
proof. We can write
|ψ⟩=
√
F | ˜ψ⟩+
√
1 −F |⊥⟩
(F21)
where
|⊥⟩=
1
√
1 −F
D1
X
α=χ+1
Sα |να⟩.
(F22)
In the case of linear XEB, f(pj) = Dpj, we have
D
X
j
˜pjpj = F
X
j
D˜p2
j + (1 −F)D
X
j
˜pj ⊥j
+
p
F(1 −F)D
X
j
2Re(⟨j| ˜ψ⟩⟨⊥|j⟩) ,
(F23)
where pj are the ideal probabilities pj = | ⟨j|ψ⟩|2 and
˜pj = | ⟨j| ˜ψ⟩|2.
For D1 ≫χ ≫1 both | ˜ψ⟩and |⊥⟩
converge to independent Haar random states. Therefore
D
X
j
˜p2
j ≃2
(F24)
D
X
j
˜pj ⊥j≃D2 ⟨⟨˜pj ⊥j⟩⟩
≃D2 ⟨⟨˜pj⟩⟩⟨⟨⊥j⟩⟩≃1
(F25)
2D
X
j
Re(⟨j| ˜ψ⟩⟨⊥|j⟩) ≃0 ,
(F26)
where ⟨⟨·⟩⟩denotes average over random states |ψ⟩(or
circuits, see App. A). Therefore
D
X
j
˜pjpj ≃F ,
(F27)
as we wanted.
We note that for very small χ, such as χ = 1, linear
XEB overestimates the ﬁdelity. Indeed, in this case we
have
D
X
j
˜p2
j
= D
X
a,b
| ⟨a|lα⟩|4| ⟨b|rα⟩|4
≃4 .
(F28)

15
10
3
10
2
10
1
F
10
3
10
2
10
1
lin XEB
n = 12
n = 15
n = 18
FIG. 16. The plot compares the exact ﬁdelity F to the linear
XEB for close simulations with a ﬁxed bond dimension of
χ = 8. Circuits for the close simulations are split in three
parts of |C1| = 8, |CM| = 4 and |C2| = 8 cycles respectively.
The error is obtained by averaging over multiple circuits. For
all the instances, the pattern ABCDCDAB is used.
Nevertheless, this case is uninteresting for simulations, as
F ≃λ2
+/D1 corresponds to a very small ﬁdelity. Numer-
ical results for small quantum systems, Fig. 16, conﬁrm
the correspondence between exact ﬁdelity and the XEB
for approximate quantum states using close simulations.
We now give a detailed proof. Below till the end of
this subsection, for the simplicity of notation, we will use
E[·] to denote the average over states ⟨⟨·⟩⟩.
We recall that for a L×L random β−Haar distributed
unitary Q (β = 1 for real and β = 2 for complex and
β = 4 for quaternion unitaries) with entries qi,j we have
the following expectations (see Table IV in [29]):
expectation values
E[|qi,j|4] =
β+2
L(βL+2)
E[|qi,jqi,k|2] =
β
L(βL+2)
We remind the reader that the exact and approxima-
tion outputs (from Eqs. (F3) and (F20)) are
|ψ⟩:=
√
D
X
α=1
Sα|lα⟩⊗|rα⟩:=
√
D
X
α=1
Sα|να⟩
| ˜ψ⟩:=
1
√
F
χ
X
α=1
Sα|lα⟩⊗|rα⟩:=
1
√
F
χ
X
α=1
Sα|να⟩.
Let pj := |⟨j|ψ⟩|2 and ˜pj := |⟨j| ˜ψ⟩|2. We have ⟨j|ψ⟩=
P√
D
α=1 Sα⟨j|να⟩
pj =

√
D
X
α=1
Sα⟨j|να⟩

2
=
√
D
X
α,β=1
SαSβ ⟨j|να⟩⟨νβ|j⟩,
˜pj = 1
F

χ
X
α=1
Sα⟨j|να⟩

2
= 1
F
χ
X
α,β=1
SαSβ ⟨j|να⟩⟨νβ|j⟩.
As stated above ⟨j|να⟩= ⟨j|(|lα⟩⊗|rα⟩) = vαwα is simply
a product of two complex numbers, where vα and wα
represent an entry of |lα⟩and |rα⟩respectively.
Lemma 1. DE
hP
j pj ˜pj
i
−1 ≈F + O(1/
√
D), where
the expectation is over the random haar vectors |lα⟩and
|rα⟩and singular values Sα.
Proof. We ﬁrst compute E[pj ˜pj]. Treating singular values
as independent from the vectors we have
E[pj ˜pj] = 1
F
P√
D
α,β=1
Pχ
c,d=1{E[SαSβScSd] ×
E[⟨j|να⟩⟨νβ|j⟩⟨j|νc⟩⟨νd|j⟩]}
= 1
F
P√
D
α,β=1
Pχ
c,d=1 E{[SαSβScSd] ×
E[vαwαvβwβvcwcvdwd]} .
(F29)
First of all the vectors |lα⟩and |rα⟩are independent and
power of their entries vanish over the complex ﬁeld be-
cause of the invariance of Haar measure. Let
gj,χ,D := 1
F
P√
D
α,β=1
Pχ
c,d=1{E[SαSβScSd] E[vαvcvβvd] ×
E[wαwcwβwd]}.
(F30)
The non-zero contributions in the sum are three cases:
case 1: α = β ̸= c = d
case 2: α = d ̸= c = β
case 3: α = d = c = β
Before we indulge in computing these cases one by one,
let us focus on the expectation with respect to the entries
as the entries of a Haar unitary have correlations. When
α = β ̸= c = d and vα and vc do not belong to the
same row of the unitary matrix induced by singular value
decomposition whose columns are |lα⟩, we have
E[|v(1)
α |2|v(2)
c |2] = 1
D
√
D(
√
D −1) 1
D = 1
D(1 −
1
√
D
).
However, when α = β ̸= c = d and vα and vc come from
the same row or column of the unitary matrix, then from
the second row of the Table above we have
E[|v(1)
α |2|v(1)
c |2] = 1
D
√
D
β
√
D

β
√
D + 1

= 1
D
β

β
√
D + 1

=
1
D
√
D

1 −
1
β
√
D

.
(F31)

16
The latter is of lower order. We ignore the terms of lower
order below and proceed to calculate the three cases by
assuming that the entries do not come from the same row
or column of the inducing random haar unitary matrix.
Recall from the asymptotic scaling of the purity
Eq. (F16) that Pχ
c=1 E[S4
c] ≤2/
√
D.
Case 1: α = β ̸= c = d. We have up to O(1/
√
D)
from Eq. (F30)
gj,χ,D = 1
F
√
D
X
α=1,α̸=c
χ
X
c=1
E[S2
αS2
c] E[|vα|2|vc|2] E[|wα|2|wc|2]
=
1
FD2
√
D
X
α=1,α̸=c
χ
X
c=1
E[S2
αS2
c]
=
1
FD2


√
D
X
α=1
χ
X
c=1
E[S2
αS2
c] −
χ
X
c=1
E[S4
c]


=
1
FD2

F
√
D
X
α=1
E[S2
α] −
χ
X
c=1
E[S4
c]


=
1
FD2

F
√
D
X
α=1
E[S2
α] −O(1/
√
D)


= 1
D2

1 −O(1/
√
D)

.
(F32)
Case 2: α = d ̸= c = β. We have up to O(1/
√
D)
from Eq. (F30)
gj,χ,D = 1
F
χ
X
α=1,α̸=c
χ
X
c=1
E[S2
αS2
c] E[|vα|2|vc|2] E[|wα|2|wc|2]
=
1
FD2
χ
X
α=1,α̸=c
χ
X
c=1
E[S2
αS2
c]
=
1
FD2
 χ
X
α=1
χ
X
c=1
E[S2
αS2
c] −
χ
X
c=1
E[S4
c]
!
=
1
FD2
 χ
X
α=1
χ
X
c=1
E[S2
αS2
c] −O(1/
√
D)
!
=
1
FD2
 
F
χ
X
α=1
E[S2
c] −O(1/
√
D)
!
= 1
D2
 χ
X
α=1
E[S2
α] −O(1/
√
D)
!
= F
D2

1 −O(1/
√
D)

.
Case 3: α = β = c = d. From Eq. (F30) and the ﬁrst
row of the Table above, we have
gj,χ,D = 1
F
χ
X
c=1
E[S4
c] E[|vc|4]E[|wc|4]
= 1
F

β + 2
2
√
D(
√
D + 1)
2
χ
X
c=1
E[S4
c]
≈4
D2
Pχ
c=1 E[S4
c]
F

1 −
2
D1/2

= O(D−5/2).
(F33)
We can now compute the desired result. First of all
from Eq. (F29) and the above 3 cases we have
E
X
j
˜pjpj = 1
D + F
D + O(D−3/2) .
Therefore,
DE

X
j
˜pjpj

−1 = F + O(1/
√
D),
(F34)
which proves our result.
We now consider the special case of χ = 1 where the
approximate state | ˜ψ⟩is taken to be a product state.
Corollary 1. When χ = 1, then DE
hP
j ˜pjpj
i
−1 =
3F + O(F/
√
D).
Proof. In this case
E[pj ˜pj] =
√
D
X
α,β=1
E[SαSβ] E[vαwαvβwβ|v1|2|w1|2] (F35)
The only non-zero contributions come from α = β = 1
and α, β ≥2. We have
E[pj ˜pj] = E[S2
1] E[|v1|4|w1|4]
+
√
D
X
α,β=2
E[SαSβ] E[vαwαvβwβ|v1|2|w1|2]
= F E[|v1|4]E[|w1|4]
+
√
D
X
α=2
E[S2
α] E[|vα|2]E[|wα|2]E[|v1|2]E[|w1|2]
= F E[|v1|4]E[|w1|4] + 1
D2 (1 −F)
= F

β + 2
2
√
D(
√
D + 1)
2
+ 1
D2 (1 −F)
= F
4
D2
1

1 + 1/
√
D
2 + 1
D2 (1 −F)
= F
4
D2

1 −2/
√
D

+ 1
D2 (1 −F)
= 3F
D2 + 1
D2 + O(F D−5/2).

17
We conclude the desired ﬁnal result
D
X
j
E[pj ˜pj] = 3F + 1 + O(F D−1/2).
5.
Quantifying entanglement with Cliﬀord circuits
We derived an analytical and numerical bound on the
ﬁdelity of the tensor product approximation, Eqs. (F14)
and (F15), which depend on the reduced purity. We now
study the reduced purity growth rate in phase matched
circuits (see SM C 1). The average Pauli error between
the fsim gates used in the experiment and the Cliﬀord
gate iSWAP−1 is ∼1%.
For the purposes of quanti-
fying reduced purity growth we therefore approximate
fsim gates with iSWAP−1.
The one-qubit gates are
ZpX1/2Z−p with p ∈{−1, −1/4, −1/2, . . . , 3/4} [30].
We can study a related ensemble of Cliﬀord circuits by
reducing the parameter p of the one-qubit gates to the
set p ∈{−1, −1/2, −1, 1/2}. Note that the reduced pu-
rity produced by Cliﬀord circuits is eﬃcient to calculate
numerically [31].
Consider the average purity of the reduced state
⟨⟨tr ρ2
L⟩⟩, where ρL is the partial trace of |ψ⟩on the left
qubits. We now show that layer by layer this average is
the same for the random circuits and the corresponding
Cliﬀord circuits of the previous paragraph. One intuition
why this might be true is that Cliﬀord circuits are a two-
design.
Nevertheless, we are interesting in the growth
rate, not the average over Cliﬀord circuits. Therefore,
we use a diﬀerent technique.
First note that tr ρ2
L can be written as
X
zL
⟨zL|
X
zR
⟨zR| ρ |zR⟩|zL⟩⊗⟨zL|
X
zR
⟨zR| ρ |zR⟩|zL⟩,
where {zL} ({zR}) is a basis for the left (right) patch.
Therefore, this quantity can be calculated from two repli-
cas of the output state of the circuit of interest ρ ⊗ρ. As
shown in SM D and Ref. [10], for the circuits of interest,
the average of an observable with two replicas can be cal-
culated with a Markov chain describing the evolution of
the density matrix in the basis of Pauli strings. If we de-
note the basis of normalized Pauli strings as {s} we can
write any operator as ρ = P
s tr(ρs)s. It follows that
Uρ U † =
X
s
tr(ρs)
X
s′
tr(s′Us U †)s′ .
(F36)
Using this relation repeatedly we reduce the evolution of
a circuit to the evolution of gates over Pauli strings. Fur-
thermore, the average over random circuits is composed
of averages over the corresponding set {g} of random
gates. In the case of the evolution of two replicas the
elementary step is
Eg[σα ⊗σα′] =
(F37)
X
β,β′
1
|g|
X
g
tr(σβ ⊗σβ′g ⊗g σα ⊗σα′ g† ⊗g†) σβ ⊗σβ′
where the tensor product is between the two replicas, and
each gate is the same for both replicas. The initial state
of each qubit with two replicas is
|0⟩⟨0| ⊗|0⟩⟨0| = 1 + Z
2
⊗1 + Z
2
.
(F38)
We obtain, both the Cliﬀord and non-Cliﬀord single-
qubit gates above,
E[II] = II
(F39)
E[IZ] = E[ZI] = 0
(F40)
E[ZZ] = 1
2(XX + Y Y ) ≡⊥
(F41)
where we also deﬁne the symbol ⊥. For shorthand, we
also introduce the notation Z = ZZ and I = II. We
also obtain, again for both the Cliﬀord and non-Cliﬀord
gates,
E[⊥] = 1
2(Z+ ⊥) .
(F42)
Finally the transformation from applying iSWAP−1 to
two qubits in each replica gives
IZ →ZI
(F43)
I ⊥→⊥Z
(F44)
ZZ →ZZ
(F45)
⊥⊥→⊥⊥
(F46)
⊥Z →I ⊥
(F47)
Therefore the average purity of the reduced state ⟨⟨ρL⟩⟩
is the same for both ensembles, as the transformations
for the initial state of interest is the same for the average
of Cliﬀord and non-Cliﬀord gates.
Entanglement is typically measured with the von Neu-
mann entropy −ρL tr ρL. Using Jensen’s inequality this
can be bounded with the R´enyi entropy
−tr ρL log2 ρL ≥−log2 tr ρ2
L .
(F48)
The average R´enyi entropy can be bounded with purity
of the reduced states using Jensen’s inequality as
−⟨⟨log2 tr ρ2
L⟩⟩≥−log2 ⟨⟨tr ρ2
L⟩⟩.
(F49)
Figure 17 shows the reduced purity, as a function of
the number of cycles, for diﬀerent circuit sizes and cuts.
Dashed lines are the reduced purity limit values (see
Eq. F50). For Sycamore-70 (this work), the reduced pu-
rity is close to its limit value at cycle 10.

18
0
5
10
15
20
25
Number of cycles, d
2
44
2
37
2
30
2
23
2
16
2
9
2
2
tr
2
L
n = 18
n = 32
n = 53
n = 70
n = 98
0
5
10
15
20
25
Number of cycles, d
2
44
2
37
2
30
2
23
2
16
2
9
2
2
tr
2
L
n = 18
n = 32
n = 53
n = 70
n = 98
FIG. 17. The plots show the reduced purity as a function of
the number of cycles, for diﬀerent circuit sizes and cuts (di-
agonal cut for the top ﬁgure, and vertical cut for the bottom
ﬁgure), using Cliﬀord gates only.
The dashed lines corre-
spond to the reduced purity pur in the random Haar limit.
(see Eq. F50). For all the instances, the pattern ABCDCDAB
is used.
6.
Reduced purity and distribution of singular
values
We will now show numerically that the reduced purity
is a good witness for the distribution of singular values,
which undergoes through a sharp transition to its limiting
value. We ﬁrst need to understand what is the expected
reduced purity and the corresponding standard deviation
for a Haar random state. In Sec. F 1 we gave the dis-
tribution of the normalized singular values s = √D1S,
where D1 is the small Hilbert space dimension (between
the halves in which the state is being divided). The ex-
pected purity is
pur =
DD D1
X
α=1
S4
α
EE
≃1
D2
1
DD D1
X
α=1
s4
α
EE
= 1
D1
⟨⟨s4
α⟩⟩.
(F50)
The variance is
Var(pur) = Var
 D1
X
α=1
S4
α
!
≃1
D4
1
D1
X
α=1
Var(s4
α)
= 1
D3
1
Var(s4
α) .
(F51)
Therefore, we can say that the reduced purity has con-
verged to its limiting value at a given depth when
tr ρ2
L −pur
p
Var(pur)
∈O(1)
(F52)
Note that the variance decreases exponentially.
Figure 18-Top shows the distance of the reduced purity
in units of the standard deviation as a function of the
number of cycles. As expected, the depth for which the
reduced purity is exponentially close to its limit value
increases with the system size. Figure 18-Bottom shows
instead how the Kolmogorov-Smirnov p−value between
the singular values Sα and the Haar random distribution
of singular values (Eq. F10) transitions when the purity
reaches its limiting value in units of standard deviation.
As one can see, there is a sharp transition so that only
once the reduced purity is appropriately close to its limit
value, the distribution of Sα truly follows the distribution
of singular values in the random Haar limit.
7.
Bounding the approximate tensor representation
performance for close simulations
Using Eqs. (F14) and (F15), it is possible to lower
bound the required χ to achieve a target ﬁdelity F for
close simulations (see App. F 3). For our bounds, we split
circuits C of m cycles in three parts of |C1| = m −2,
|CM| = 4 and |C2| = m −2 cycles respectively. More-
over, we assume that it is possible to compute |˜Ψ1⟩and
|˜Ψ2(x)⟩with a single truncation each. While being un-
realistic for any practical purpose, it allows us to ﬁnd
analytical and semi-analytical bounds since every realis-
tic simulation would require more than one truncation.
Recalling that the ﬁnal ﬁdelity of a close simulation is
F = F1F2, with F1 and F2 being the ﬁdelity of |˜Ψ1⟩and
the average ﬁdelity |˜Ψ2(x)⟩respectively, it is possible to
get an estimate of the optimal bond dimension χ for a
given target ﬁdelity F as:
χan =
F
⟨⟨tr ρ2
L⟩⟩,
(F53a)
χnm = F−1
λ (
√
F)
⟨⟨tr ρ2
L⟩⟩≥
√
F
λ2
+ ⟨⟨tr ρ2
L⟩⟩,
(F53b)
with λ2
+ ≤2 being the largest singular value, and χan
and χnm being respectively the estimate for the bond
dimension using either the analytical or the numerical
bound. It is important to stress that the upper bounds

19
0
10
20
30
Number of cycles, d
10
3
101
105
109
1013
1017
1021
|tr
2
L - pur|/
Var(pur)
n = 98
n = 72
n = 50
n = 32
n = 18
10
4
10
2
100
102
104
106
|tr
2
L
pur|/
Var(pur)
0.0
0.2
0.4
0.6
0.8
1.0
Kolmogorov-Smirnov p-value
FIG. 18. (Top) Distance of the reduced purity from its limit
value in units of the standard deviation as a function of cy-
cles, using Cliﬀord gates only. The dashed line correspond
to 1.
(Bottom) Kolmogorov-Smirnov p−value between the
singular values Sα and the distribution of singular values for
large depth, Eq. F10, as a function of the distance between
the reduced purity and its limit value in units of standard de-
viation. Each point corresponds to a diﬀerent circuits (with
the number of qubits ranging from n = 8 and n = 24) at given
ﬁxed cycle. Lighter points correspond to datapoints outside
the 90%. For all the instances, the pattern ABCDCDAB is
used, and qubits are partitioned in two equal halves using a
diagonal cut.
provided by Eqs. F53 are valid for arbitrary depths and
bond dimensions χ, even if the quantum state has not
yet reached the Porter-Thomas limit. For small target
ﬁdelity F, the ratio between χan and χnm becomes:
χan
χnm
≈λ2
+
√
F.
(F54)
For a cut that split the qubits in two equal halves
(λ+ = 2), and for a target ﬁdelity of F = 10−4, one gets
χnm ≈25 χan, that is the numerical bound is only 25
times larger than the analytical bound. This is consis-
tent with what we observe in Fig. 19.
20
40
60
80
100
120
Number of qubits, n
10
20
30
40
Number of cycles, d
laptop
(RAM)
cluster node
(RAM)
Frontier
(RAM)
Frontier
(storage)
an, F
10
4 (analytical bound)
1012
100
104
108
Sycamore-53
Sycamore-70
Sycamore-105
20
40
60
80
100
120
Number of qubits, n
10
20
30
40
Number of cycles, d
laptop
(RAM)
cluster node
(RAM)
Frontier
(RAM)
Frontier
(storage)
nm, F
10
4 (numerical bound)
1012
100
104
108
Sycamore-53
Sycamore-70
Sycamore-105
FIG. 19.
Analytical (Top) and numerical (Bottom) upper
bounds for the required bond dimension to achieve a target
ﬁdelity of F = 10−4, by varying the number of qubits and
cycles. The memory footprint is computed as the amount of
memory required to store two complex32 tensors of dimen-
sion 2n/2 × χ. Laptop (RAM) = 32GB, cluster node (RAM)
= 256GB, Frontier (RAM) = 9.2PB and Frontier (storage) =
700PB. The density map is obtained by averaging circuits
with patterns ABCDCDAB/BADCDCBA and with diago-
nal/vertical cuts.
Appendix G: Client-certiﬁed randomness generation
with RCS
Randomness is a valuable resource with many applica-
tions and is a key resource in much of modern cryptogra-
phy. In classical physics, the outcome of any experiment
can in principle be determined from the initial condi-
tions, so there is no such thing as true randomness. On
the other hand, quantum physical systems exhibit true
randomness. The outcome of certain quantum processes
is inherently random, meaning that no amount of prior
information is suﬃcient to predict the outcome.
Client-certiﬁed randomness generation has been pro-
posed as a potential application of RCS [32–34].
The
proposed protocol works as follows. The client generates
challenge random quantum circuits which she sends to an

20
untrusted server that operates a quantum processor. The
server responds to each challenge by sending a requested
number of bitstrings within a given short amount of time.
When the server is honest, it produces the bitstrings by
sampling from the circuit using the quantum processor,
so the bitstrings contain entropy due to the inherent ran-
domness of quantum measurements. The client can then
pass the raw bitstrings through a randomness extractor
to obtain random bits of higher quality, in the sense of
being closer to the uniform distribution.
The client is able to gain conﬁdence that the returned
sample of bitstrings is consistent with executing the
challenge circuits by performing statistical tests, such
as XEB. For cryptographic certiﬁcation of randomness,
these tests need to account for the possibility that the
quantum operator is adversarial. Such an adversary will
try to construct a set of bitstrings that pass the statis-
tical tests despite having low or no entropy. Challenge
circuits must be executed with ﬁdelity greater than an
agreed value F.
In principle, the client allots a sam-
pling time suﬃciently shorter than the necessary time to
simulate the same sampling (number of bitstrings and
ﬁdelity) by all known classical algorithms using reason-
able computing resources. This way, the client can gain
conﬁdence that the bitstrings were indeed obtained us-
ing a quantum computer, and therefore are a source of
quantum randomness.
Unfortunately, in this protocol,
the client needs to perform classical simulations if she
wishes to certify the quantum randomness using XEB.
However, the client can do this simulation a posteriori,
running classical computations for a much longer time.
Furthermore, the client can in principle use a large num-
ber of challenge circuits and select only a subset of them
for veriﬁcation. This way the client can force an adver-
sarial server to perform expensive simulations on a large
number of circuits while only expending computing re-
sources verifying a much smaller subset.
There exist a tension between the need for practi-
cal veriﬁcation, which incurs an exponential cost in this
proposal, and the requirement that an adversary could
not pass the same test deterministically. Furthermore,
”spooﬁng” is typically a factor of F cheaper than the
veriﬁcation [22]. The 70 qubit circuits presented in this
work are currently too big to be veriﬁed with XEB. At
the same time, the computational cost of classical algo-
rithms keeps improving (see SM E), as well as the perfor-
mance of implementations in specialized hardware [35].
In this work we do not resolve this tension, and we leave
open the problem of ﬁnding an eﬃcient veriﬁcation pro-
tocol, perhaps along the line of cryptographically secure
proposals [36, 37], or more near-term obfuscation tech-
niques [38].
We nevertheless study how this protocol
could work if this problem is resolved or if a client is
willing to expend suﬃcient compute resources to gain
enough conﬁdence against a potential deterministic ad-
versarial server.
1.
Entropy estimation
The output of the protocol is produced by applying
a randomness extractor to the output of the quantum
computer; see Sec. G 4. A randomness extractor takes
an input from the source with a given min-entropy, to-
gether with a uniformly random seed, and it outputs a
near-uniformly random bitstring of length proportional
to the input min-entropy. The min-entropy of a random
variable X is deﬁned as minus the log of the maximum
probability:
min-entropy = −max
x
log2 (Pr[X = x]) .
(G1)
Below, we give bounds for the quantum min-entropy (see
also Ref. [39]).
a.
Entropy estimation for an honest server
The experimental output of a noisy quantum random
circuit can be described by (see SM A)
F |ψ⟩⟨ψ| + (1 −F)Ξ ,
(G2)
where F is the experimental ﬁdelity (probability of no
error), |ψ⟩is the ideal output of the quantum circuit, and
Ξ has trace one and is the result of errors. Measurement
of this state can be interpreted as measuring the ideal
quantum state |ψ⟩with probability F, and measuring
the operator Ξ with probability 1 −F. This is depicted
in the following diagram:
|ψ⟩
Ξ
Sampler
F
1 −F
(G3)
For the purposes of quantum randomness generation,
we take an adversarial approach with respect to the noise
operator Ξ and consider it to be deterministic. The rea-
son is that we are purely interested in the quantum en-
tropy that is generated experimentally, and not in us-
ing potential “noise” or “errors” in the experiment as a
source of entropy. Arguably, if we were willing to accept
an entropy source based on “noise”, there are simpler
setups that do not require the use of a quantum pro-
cessor. Furthermore, the potential entropy coming from
the noise cannot be certiﬁed. Therefore, we model the

21
sampling as depicted in the next diagram:
|ψ⟩
Deterministic
Sampler
F
1 −F
(G4)
Given the adversarial model above, the bitstring with
the highest probability is the deterministic noise with
probability 1 −F. Therefore for a sample of size k the
min-entropy is
min-entropy = −log2
 (1 −F)k
≈kF
(G5)
It is possible to obtain a tighter bound by ignoring the
very unlikely event that all outputs of the experiment cor-
respond to the “noise” term, which we are treating as de-
terministic. The approach is to use the ε-min-entropy or
smooth min-entropy, that is, we bound the min-entropy
ignoring events with cumulative probability smaller than
some suitable small ε.
In the simpliﬁed model given by (G4) within a sample
of size k the expected number of bitstrings obtained from
the ideal output |ψ⟩is kF with the variance kF(1 −F).
We wish to bound the probability of obtaining suﬃciently
many bitstrings from the ideal output. We now estimate
this probability for obtaining a sequence of bitstrings
from the ideal distribution up to a cumulative probability
of 1 −ε. Assuming that we are sampling from a quan-
tum processor with experimental ﬁdelity F, then we can
choose a constant c1 and upper-bound the probability of
obtaining at least
q := kF −c1
p
kF(1 −F)
(G6)
bitstrings from the ideal distribution, where c1 is the
number of standard deviations below the mean. Since the
sample size is large enough (order of millions) we can use
gaussianity where by c1 = 5 implies that ϵ = 1.5 × 10−12
rendering the probability of success 1 −1.5 × 10−12.
Suppose that the distribution of the ideal output prob-
abilities p(s) = | ⟨s|ψ⟩|2 follows the Porter-Thomas dis-
tribution with the probability density function
f(x) = e−x,
(G7)
where x = Dp(s) is the ideal bitstring probability scaled
by the Hilbert space dimension D = 2n. The average
of minus log of the probability of one bitstring from the
Porter-Thomas distribution is (see Eq. (A7))
−D2
Z ∞
0
log(p)e−Dpp dp = log(D) −1 + γ ,
(G8)
where γ is Euler’s constant. Then minus the log of the
probability of a sequence of q independent ideal bitstrings
is, by central limit theorem, a normal distribution with
average q(log(D)−1+γ). The variance is upper-bounded
by qπ2/6. Similar as above, we can choose a constant
c2 such that with high probability the ε-min-entropy is
q(log(D)−1+γ)−c2
p
qπ2/6. Putting it all together, we
obtain the following lower-bound for the ε-min-entropy
q(log(D) −1 + γ) −c2
r
qπ2
6 .
(G9)
b.
Correction to the min-entropy
The bound of Eq. (G9) represents the pure quantum
min-entropy obtained from sampling a random quantum
circuit. We now consider the situation in which a client
has only black-box access (say via the cloud) to the quan-
tum processor held by a server. We discuss deviations
from the scenario of the previous section due to poten-
tial adversarial actions of the server, while still assuming
that the server calls a quantum processor to obtain the
output bitstrings.
In the previous section we bounded the number q of
bitstrings obtained in a sample of size k using a quantum
processor of ﬁdelity F. An adversarial quantum server
might be able to oversample sq bitstrings with s ≥1
in the allotted time from the ideal quantum state be-
fore returning q bistrings. The server can also rearrange
the bistrings in any predetermined way before return-
ing them to the client. These operations lower the min-
entropy and do not necessarily aﬀect statistical tests such
as the cross entropy. In order to bound the min-entropy
of this multiset oversampling, we consider ﬁrst a sim-
pliﬁed model where the server samples from a uniform
distribution of size D instead of the ideal quantum state.
We now give an expression for the probability of ob-
taining a given multiset S of size q when sampling sq
times from the uniform distribution of D values. We can
assume q ≪D and that all the values in the set S are
distinct. Let Ai denote the set of all sequences missing
value i. We have
P(S) = 1 −
S
i∈S Ai

Dsq
.
(G10)
Note that

\
i∈I
Ai
 = (D −|I|)sq .
(G11)
Therefore, by the inclusion-exclusion principle, we have

[
i∈S
Ai
 =
q
X
j=1
(−1)j−1
q
j

(D −j)sq ,
(G12)
and
P(S) = 1 −
q
X
j=1
(−1)j−1
q
j
 D −j
D
sq
.
(G13)

22
Although this expression is exact, note that all the terms
have the same order in 1/D, so it does not result in a
compact estimate of the probability in the case of inter-
est, D →∞.
We can also write diﬀerent upper and lower bounds for
P(S). Let α denote a set of q indexes and Bα denote the
set of words with the q given values in positions α. We
ﬁrst have
P(S) ≤
P
α |Bα|
Dsq
.
(G14)
There are q! ways in which the q values can appear in
the α positions, and Dsq−q possible choices for the other
sq −q positions. Therefore
|Bα| = q!Dsq−q .
(G15)
There are are sq chose q ways to choose α. Therefore
P(S) ≤
sq
q
 q!
Dq = (sq)q
Dq
,
(G16)
where
(sq)q = Πq−1
j=0(sq −j)
(G17)
This gives the following bound for the min-entropy
min-entropy ≥q log D −log(sq)q .
(G18)
We can obtain a related lower bound by considering the
sets Cα including words with the q values of interest
in positions α, and none of those values anywhere else.
Then
P(S) ≥
P
α |Cα|
Dsq
(G19)
=
sq
q
q!(D −q)sq−q
Dsq
(G20)
= (sq)q
Dq

1 −q
D
q(s−1)
.
(G21)
Therefore, in the limit of D →∞, we have
P(S) = (sq)q
Dq

1 −O
q2s
D

(G22)
min-entropy = q log D −log(sq)q + O
q2s
D

(G23)
≃q log D −q log sq + q .
(G24)
We have seen that multiset sampling can lower the
min-entropy by a factor log((sq)q).
Applying this to
the honest server min-entropy bound, Eq. (G9), gives
a bound for the multiset sampling min-entropy
q(log(D) −1 + γ) −c2
r
qπ2
6
−log((sq)q) .
(G25)
2.
Repeated bitstrings
In the previous section we ignored the possibility of re-
peated bitstrings in the adversarial server sampling. We
study this now. We denote the total sampling budget
of the adversarial server (sq in the previous section) by
β. We will see that the client can require the server to
return unique bitstrings, and this has little eﬀect in the
linear XEB as long as β ≪D. An adversarial server can
also postselect to bistrings that appear at least twice to
artiﬁcially boost the nominal “ﬁdelity” as measured by
XEB. We will see that this eﬀect is negligible as long as
s ≪
p
D/q.
a.
Probabilities for repeated bitstrings
The probability that a bitstring j appears exactly c
times is
p′
j(c) =
β
c

pc
j(1 −pj)β−c .
(G26)
For large enough sampling budget β, there may oc-
cur collisions, i.e., repeated strings.
We can calculate
the expected number M of strings appearing with each
multiplicity c, and the corresponding ideal probability
value A.
In the following, we derive closed formulas
up to ﬁrst-order approximation, conﬁrming the formu-
las (G44), (G50) conjectured in Ref. [39, App. D].
Lemma 1. Assuming D + β ≫c, the expected number
of bitstrings that appear exactly c times is
Mβ,c =
β
c

D1−cc!

1 + β
D
c+1
 
1 + O
 r
(2c)!
D
!!
. (G27)
Proof. The expected number of bitstrings that appear
exactly c times is
Mβ,c =
X
j
p′
j(c) .
(G28)
First note that
Mβ,c =
X
j
p′
j(c)
(G29)
= D ⟨⟨p′(c)⟩⟩+ O
p
D Var(p′(c)

,
(G30)
where, as in App. A, we use the approximation that for
large D the probabilities p′
j(c) are i.i.d.
We can write
⟨⟨p′(c)⟩⟩=
β
c

I(β, c) ,
(G31)

23
where I(β, c) is the expectation value of pc(1 −p)β−c.
This can be calculated as
I(β, c) =
Z 1
0
pc(1 −p)β−cdF(p)
(G32)
=
Z 1
0
pc(1 −p)β−c(D −1)(1 −p)D−2dp
(G33)
= (D −1)c!(D + β −c −2)!
(D + β −1)!
(G34)
= (D −1)c!
1
(D + β −1)c+1
,
(G35)
where the last expression uses a falling factorial in the
denominator. Therefore
⟨⟨p′(c)⟩⟩=
β
c

(D −1)c!
(D + β −1)c+1
,
(G36)
We are interested in the value for large D, so we can use
the approximation
⟨⟨p′(c)⟩⟩≃
β
c

(D −1)c!
 D + β −1 −c
2
c+1 .
(G37)
This approximation is valid for
D + β ≫c ,
(G38)
which is always the case in the regime of parameters we
are interesting in.
We can also estimate the variance
Var(p′(c))
 β
c
2
(G39)
=
(D −1)(2c)!
(D + 2β −1 −c)2c+1
−
 
(D −1)c!
 D + β −1 −c
2
c+1
!2
(G40)
= D−2c
(1 −1
D)(2c)!

1 + 2 β
D −1
D −c
D
2c+1
−D−2c



(1 −1
D)c!

1 + β
D −1
D −
c
2D
c+1



2
. (G41)
Ignoring small terms we get
Var(p′(c)) =
β
c
2
D−2c  (2c)! −(c!)2 + O(β/D)

.
(G42)
Keeping only the dominant term (2c)! completes the
proof of the lemma.
Note that we also ignore terms O(1/D) and O(c/D) for
consistency with the ﬂuctuations from the variance.
In Eq. (G27) we can use β ≫c to write
β
c

≃
 β −c
2
c
c!
.
(G43)
Plugging this back and ignoring again terms O(1/D) and
O(c/D) we get
Mb,c ≃D
bc
(1 + b)c+1 ,
(G44)
where b = β/D.
We are also interested in the expected value of the
simulated or ideal probability for the bistrings that are
obtained exactly c times in a β-sample.
Lemma 2. The expected value of the ideal probability for
the bistrings that are obtained exactly c times is
Aβ,c = 1
D
c + 1
1 + b .
(G45)
Proof. The probabilities of bitstrings conditioned on ap-
pearing exactly c times are proportional to p′
j(c), normal-
ized so that their sum is 1. That is, the conditional prob-
abilities are p′
j(c)/Mb,c.
Therefore, the expected value
of the simulated probability conditioned on appearing c
times has the expression
Aβ,c =
1
Mβ,c
X
j
p′
j(c) pj .
(G46)
Using the same methodology as in Lemma 1 we have
Aβ,c =
R 1
0 pc+1(1 −p)β−cdF(p)
R 1
0 pc(1 −p)β−cdF(p)
(G47)
= I(β + 1, c + 1
I(β, c)
(G48)
= (c + 1)!
c!
(D + β −1)c+1
(D + β)c+2
(G49)
= 1
D
c + 1
1 + b .
(G50)
The expected number of unique bitsrings in a β-sample
follows from Eq. (G44) and is given by the expression
Mβ =
∞
X
c=1
Mβ,c = D
β
D + β .
(G51)
b.
Linear cross-entropy with unique bitstrings
Following the same logic as in Eq. (G46), we can calcu-
late the expected value of the linear cross entropy when

24
an honest server returns unique bitstrings. The probabil-
ities of bitstrings conditioned on appearing at least one
time are proportional to
p′′
j (c) =
∞
X
c=1
p′
j(c) ,
(G52)
normalized so that their sum is 1.
The corresponding
linear cross entropy is
D
X
j
p′′
j (c)
Mβ
pj −1 = D
Mβ
∞
X
c=1
Aβ,cMβ,c −1
(G53)
= 2 + b
1 + b −1 =
1
1 + b .
(G54)
The expectation value of the linear cross entropy is 1
when allowing repeated bitstrings if sampling from a
Haar random quantum state. Therefore, the perturba-
tion to the linear cross entropy when requiring unique
bitstrings can be ignored when b ≪1 or, equivalently,
β ≪D. Note that sampling with less ﬁdelity results in a
lower frequency of collisions.
c.
Adversarial postselection of repetitions
Consider now the situation where an adversarial server
is asked to return k unique bitstrings, but the server se-
cretly oversamples many more bitstrings to take advan-
tage of collisions. That is, the server can postselect bit-
strings that appear at least twice, and therefore, in the
ideal case of ﬁdelity 1, have a higher expectation value
for the simulated probability DAβ,2 ∼3, instead of the
usual average simulated probability ⟨Dp⟩= 2. In this
way, the server could pass the linear cross entropy test
returning a smaller number of quantum generated bit-
strings, that is, a sample with similar estimated ﬁdelity
but less quantum entropy.
Next we bound how many bitstrings can be oversam-
pled with still a negligible eﬀect in the estimated ﬁdelity
from linear cross entropy. In order to cover the case of an
adversarial server with non-ideal ﬁdelity φ < 1, we con-
sider an idealized model where errors are heralded. That
is, we treat sampling sk bitstrings with ﬁdelity φ as sam-
pling β = sq bitstrings with ﬁdelity 1, where q = φk. The
contribution to the linear cross entropy for bitstrings that
appear c = 2 times is
D
q Mβ,2Aβ,2 = D
q
β2
D2 3(1 + O(β/D))
(G55)
= 2s2q
D 3(1 + O(β/D)) .
(G56)
This eﬀect is negligible for s ≪
p
D/q.
3.
Additional statistical tests
We explained in the main text the conditions under
which XEB is an estimator of ﬁdelity, which is the main
test for experimental RCS (see also SM A). Ref. [6] also
introduced the idea of checking the consistency between
log and linear XEB, and a Kolmogorov-Smirnov test for
the simulated probabilities of the experimental bitstrings.
We now introduce two additional statistical tests which
might be useful in an adversarial setting such as client-
certiﬁed randomness generation.
a.
Hamming distance ﬁlter
In order to sample from the output distribution of a
quantum circuit one can use an independent tensor con-
traction per output bitstring using frugal rejection sam-
pling (see SM E and Refs. [22, 23]). This results in a
simulation runtime that scales linearly in the number of
bitstrings sampled.
Ref. [19] introduced a method to
compute amplitudes of a large number of uncorrelated
bitstrings with a much lower overhead than linear.
An adversarial server using tensor network contrac-
tions could avoid the remaining overhead from Ref. [19]
using less tensor network contractions to calculate the
probabilities of many bitstring with small Hamming dis-
tance between them, although this does not perform RCS
(see for instance Ref. [40]). We now give a Hamming dis-
tance ﬁlter test which detects this pseudo-sampling.
We can approximate a Porter-Thomas sampling as a
uniform sampling of bitstrings for the purpose of ana-
lyzing the Hamming distance between unique sampled
bitstrings. We denote the distance between bitstrings j
and k as hjk. For ﬁxed j, the distribution of the Ham-
ming distance to other bitstrings is binomial with n the
number of qubits and p = 1/2. As an example we can
consider n = 70 and Hamming distance 15. The proba-
bility of hjk ≤15 is
ph = 1
2n
15
X
c=0
70
c

= 8.26 · 10−7 .
(G57)
The experimental readout measurement error has a
bias which we can take into account.
Let e01 bet the
probability of measuring state 0 when the quantum state
is 1 and e10 the probability of measuring state 1 when
the quantum state is 0. This gives a bias b = e01 −e10.
The probability of sampling a 1 on a qubit is, on average,
pb = (1 −b)/2, while the probability of sampling a 0 is
1 −pb. The probability of obtaining a given Hamming
distance between two bitstrings is therefore given by a
binomial distribution with the slightly biased value of pb,
which is slightly higher than in the unbiased case.
For a given sample S with k bitstrings, we can elimi-
nate suﬃcient bitstrings so that there are no pairs of bit-
strings within Hamming distance less than some bound,
such as 15. One way to do this is to process the bitstrings
one by one in the sample S. For each bitstring, we elim-
inate all the other bitstrings at Hamming distance 15 or
less. With this method, we keep more than half of the
bitstrings if k = 106. Note that each random ordering

25
of bitstrings results in a diﬀerent sub-sample. Therefore,
this is equivalent to implementing bootstrapping in the
initial sample. That is, we can repeat this sub-sampling
a large number of times calculating the XEB ﬁdelity es-
timator each time. The average of the XEB of all the
sub-samples corresponds, in the honest case, to the sam-
ple average. We can do this for larger Hamming distances
also.
In conclusion, with some small computational cost we
can prevent a potential attack using a tensor network
algorithm to calculate probabilities of sets bitstrings with
small Hamming distance between them.
b.
Statistical test of large probabilities
The value of the XEB ﬁdelity estimator is higher if,
instead of sampling, an adversarial server outputs the
bitstrings with the highest simulated probabilities. This
might be detected already by tests introduced in Ref. [6],
such comparing linear and log XEB, or the Kolmogorov-
Smirnov test. Here we give another option, namely using
a truncated XEB ﬁdelity estimator which ignores the bit-
strings with simulated probability beyond some threshold
t.
Consider the XEB estimator based on the function (see
SM A)
ft(pj) := D pj 11pj≤t/D
(G58)
where pj is the simulated or ideal probability for bitstring
j, D = 2n is the Hilbert space dimension, and 11pj≤t is
an indicator function with value 1 if pj ≤t and value
0 in other case. As explained in SM A we can model
the sampling probabilities of a quantum processor with
ﬁdelity F as
pF
j = Fpj + 1 −F
D
.
(G59)
The expectation value of the sampling with function
(G58) is
X
j
pF
j D pj11pj≤t/D .
(G60)
Assuming that the simulated probabilities are distributed
according to the Porter-Thomas or exponential distribu-
tion we have
tXEB =
X
j
pF
j D pj11pj≤t/D
= D ⟨⟨pF
j D pj11pj≤t/D⟩⟩
(G61)
= D2
Z t
0
(Fx + 1 −F)xe−xdx
(G62)
= F + 1 −e−t  1 + t + (1 + t + t2)F

.
(G63)
As with any other XEB ﬁdelity estimator, we can es-
timate the value tXEB sampling bitstrings from an ex-
perimental implementation. This gives the tXEB ﬁdelity
estimator
F = tXEB −1 + e−t(1 + t)
1 −e−t(1 + t + t2)
.
(G64)
Note that we are interested in the case t ≳2, which
makes the denominator positive.
In order to calculate the variance of this estimators, we
need the expectation value of the square of tXEB. This
is
X
j
pF
j
 D pj11pj≤t/D
2
= D2
Z t
0
(Fx + 1 −F)x2e−xdx .
(G65)
This integral can be calculated analytically to obtain an
expression for the variance of the corresponding estima-
tor of ﬁdelity. For simplicity, we only give the variance
in the limit F →0, which is
VAR(tXEB) ≃1 −e−tt2 −e−2t(1 + 2t + t2)
(1 −e−t(1 + t + t2))2
.
(G66)
Table I shows the variance for diﬀerent values of the trun-
cation parameter. We see that in an experimental sam-
ple we can ignore all bitstrings with ideal probabilities
≥4/D without aﬀecting much the variance of the corre-
sponding tXEB estimator. This gives another statistical
test sensitive to a potential adversary which postselects
bitstrings with unusually large ideal probabilities.
VAR(F)
t
1.00557 10.
1.06288
7.
1.32601
5.
1.84472
4.
4.11632
3.
10.144
2.5
105.982
2.
TABLE I. Variance of the truncated XEB estimate of F
against the truncation parameter t.
4.
Randomness extractor
Randomness extractors are functions that convert bits
from a weak source of randomness into near-uniform ran-
dom bits [41]. In our protocol we apply a randomness
extractor to the output of a quantum computer, which
contains intrinsic randomness but is not uniformly dis-
tributed.
In this section, we describe the randomness
extractor we implemented and present some benchmark
results of its running time.
For general sources of randomness, randomness extrac-
tion is only possible if the extractor is also given a small
uniformly random input seed as a catalyst.

26
A weak random source has a distribution over {0, 1}n
which has some entropy. The most conservative estimate
of the unpredictability of the outcomes is given by the
min-entropy or equivalently the ∞−R´enyi entropy:
Deﬁnition 1. Let X be a probability distribution on the
hyper-cube {0, 1}n, and let px be the probability of the
string x ∈{0, 1}n. The minimum entropy of X is
min
x (−log2 px) = −max
x
log2 px = −log2 max
x
px
For an n−bit distribution X with min-entropy k, we say
that X is an (n, k) distribution.
We now formally deﬁne an extractor function.
Let
Ext : {0, 1}n × {0, 1}d →{0, 1}m be the function that
takes as input samples from an (n, k) distribution X and
a uniformly random d−bit string seed, and outputs an
m−bit string that is ε-close to uniform.
We say that
the extractor is (k, ε) if the output is ε close to uniform
random, where ε is the statistical distance. In extracting
randomness from random variables from the knowledge
of just a lower-bound on the min-entropy, a key concept
is k−source.
Deﬁnition 2. A random variable X is called a k−source
if its min-entropy is at least k. That is, Pr[X = x] ≥2−k.
a.
Trevisan’s extractor and HMAC
We implemented a randomness extractor based on Tre-
visan’s construction [42]. Since this extractor is some-
what slow, we describe in App. G 4 c an alternative con-
struction using the cryptographic primitive hash-based
message authentication code (HMAC) that is more eﬃ-
cient, though it is a heuristic, not a theoretically proven
extractor like Trevisan’s.
We implemented Trevisan’s extractor following pri-
marily the construction of Raz, Reingold, and Vad-
han [43] with some optimizations from [44]. The initial
extractor was implemented entirely in Python, and pro-
ﬁling was used to identify bottlenecks, which were then
rewritten in C++. In our case, over 99% of the running
time was spent evaluating polynomials in a subroutine
that computed Reed-Solomon codes. This code was mi-
grated to a C++ library using NTL [45].
For a ﬁxed ε, the extractor uses O(log2 n) additional
random bits. The theoretical optimal seed size for any
seeded extractor, is log(n −k) + 2 log(2/ε) + O(1). For
a ﬁxed seed size, min-entropy, and ε, the extractor takes
time linear in the size n of the input. However, our inputs
are several orders of magnitude larger than those con-
sidered by previous papers and previous benchmarked
implementations of Trevisan’s extractor, such as
[44]
and [46].
220
222
224
226
228
230
Input size
100
101
102
103
104
Throughput (bits/s)
FIG. 20. Throughput of the Trevisan randomness extractor
for various input sizes, when the output length is 4096 bits.
We used 64 threads. Each data point is the average of the
values obtained from 10 runs, and there are error bars of one
standard deviation (too small to see).
b.
Benchmark results
We tested the performance of our implementation of
Trevisan’s randomness extractor on various input sizes
ranging from 220 bits to 230 bits. We used a workstation
with an Intel Xeon Gold 6154 3.00GHz CPU which has
18 cores, each with 4 threads. We used 64 threads for
our benchmarking.
Part of the running time of our extractor is spent in
passing the input data from Python to C++. This con-
version occurred at a rate of about 44 Mbit/s. Once this
conversion has taken place, the extractor produces out-
put bits at a constant rate, which we term the throughput,
when the total length of the output is ﬁxed. In Figure 20,
we plot the throughput for the various input sizes when
the output length is ﬁxed to 4096 bits. At the input size
of 230, the throughput was 8.4 bits/s. As an example,
at the input size of 230, the Python to C++ conversion
took about 24 seconds, while the rest of the extraction
took about 490 seconds to produce the 4096 bits of out-
put. While this throughput is slow compared to, say, the
computation of a hash function like SHA-512, it is suf-
ﬁcient for many purposes. For example, a high-security
cryptographic key requiring 256 bits of entropy may be
used for days or weeks before needing to be refreshed.
c.
A faster randomness extractor using HMAC
Our implementation of Trevisan’s randomness extrac-
tor suﬀers from the disadvantage of being quite slow.
In practice, theoretically proven randomness extractors
are rarely used, with common eﬃcient heuristic cryp-
tographic primitives such as HMAC often used instead
[47, 48]. In this appendix, we explain how one can use

27
an HMAC to construct a heuristic randomness extractor
that works in our setting. Besides being a heuristic, our
construction suﬀers from the disadvantage of requiring a
rather large seed size (linear in the size of the output).
Nevertheless, it may be of more practical use in some
situations than the Trevisan extractor.
The main obstacle to overcome in using an HMAC
for randomness extraction is that the output length is
limited. For example, a SHA512-based HMAC will only
output 512 bits, even when the input has many more bits
of min-entropy. Here, we show, using Lemma 6.38 in [41],
that one can extend the output length of a randomness
extractor. The lemma says the following:
Lemma
3.
(Lemma
6.38
in
[41]):
Suppose
Ext1 : {0, 1}n × {0, 1}d1
→{0, 1}m1 is a (k1, ε1) ex-
tractor and Ext2 : {0, 1}n × {0, 1}d2 →{0, 1}m2 is a
(k2, ε2) extractor for k2 = k1 −m1 −log(1/ε3). Then
Ext′ : {0, 1}n × {0, 1}d1+d2
→
{0, 1}m1+m2
deﬁned
by Ext′(x, (y1, y2))
=
(Ext1(x, y1), Ext2(x, y2)) is a
(k1, ε1 + ε2 + ε3) extractor.
Changing notation, letting Ext(X, S) := Ext1 = Ext2,
m := m1 = m2, and ε := ε1 = ε2; and renaming the
independent variable ε3 as ε1 we can restate this lemma
as: if Ext(X, S) = Y is a (k, ε)-extractor with an m-
bit output, then (Ext(X, S1), Ext(X, S2)) is a (k + m +
log(1/ε1), 2ε + ε1)-extractor with a 2m-bit output.
Let us deﬁne Ud to be a uniform random seed of size
d bits. As explained in [41], k2 = k1 −m1 −log(1/ε3)
in Lemma 3 arises because if one conditions a k1-source
on the output of Ext1(X, Ud1), then the source still has a
conditional min-entropy of at least k1 −m1 −log(1/ε3) =
k2 except with probability ε3. Therefore, Ext2(X, Ud2)
can extract an additional m2 almost-uniform bits. We
can also ensure that Ext2(X, Ud2) can extract an addi-
tional m2 almost-uniform bits by instead requiring X to
be a (k2 + m1 + log(1/ε3))-source.
This analysis can be recursively applied.
Ext′′(X, (S1, S2, S3, S4))
≡(Ext(X, S1), Ext(X, S2), Ext(X, S3), Ext(X, S4))
(G67)
can be considered to be the combination of two (k +m+
log(1/ε1), 2ε + ε1)-extractors:
• the ﬁrst (k + m + log(1/ε1), 2ε + ε1)-extractor is
(Ext(X, S1), Ext(X, S2)) and
• the second (k + m + log(1/ε1), 2ε + ε1)-extractor is
(Ext(X, S3), Ext(X, S4))
Thus, selecting a new ε2, Ext′′(X, (S1, S2, S3, S4)) is a
(k′ + m′ + log(1/ε2), 2ε′ + ε2)-extractor, where
• k′ = k + m + log(1/ε1),
• m′ = 2m, and
• ε′ = 2ε + ε1.
So we get a

k + 3m + log

1
ε1

+ log

1
ε2

, 4ε + 2ε1 + ε2

-
extractor.
In general, to output 2tm bits, we can construct an
extractor
Extt(X, (S1, S2, ..., S2t))
≡(Ext(X, S1), Ext(X, S2), ..., Ext(X, S2t)).
(G68)
This would be lead to the following extractor
 
k + (2t −1)m +
t
X
i=1
log(1/εi), 2tε +
t
X
i=1
2t−iεi
!
This analysis demonstrates that given suﬃcient min-
entropy in the input X, we can repeatedly apply the same
randomness extractor with a fresh seed to extract the
desired number of output bits that are statistically close
to uniform.

28
Google Quantum AI and Collaborators
A. Morvan1,‡, B. Villalonga1,‡, X. Mi1,‡, S. Mandr`a1, 2, 3,‡, A. Bengtsson1, P. V. Klimov1, Z. Chen1, S. Hong1, C. Erickson1,
I. K. Drozdov1, 4, J. Chau1, G. Laun1, R. Movassagh1, A. Asfaw1, L. T.A.N. Brand˜ao5, R. Peralta5, D. Abanin1, R.
Acharya1, R. Allen1, T. I. Andersen1, K. Anderson1, M. Ansmann1, F. Arute1, K. Arya1, J. Atalaya1, J. C. Bardin1, 6, A.
Bilmes1, G. Bortoli1, A. Bourassa1, J. Bovaird1, L. Brill1, M. Broughton1, B. B. Buckley1, D. A. Buell1, T. Burger1, B.
Burkett1, N. Bushnell1, J. Campero1, H.-S. Chang1, B. Chiaro1, D. Chik1, C. Chou1, J. Cogan1, R. Collins1, P. Conner1, W.
Courtney1, A. L. Crook1, B. Curtin1, D. M. Debroy1, A. Del Toro Barba1, S. Demura1, A. Di Paolo1, A. Dunsworth1, L.
Faoro1, E. Farhi1, R. Fatemi1, V. S. Ferreira1, L. Flores Burgos1 E. Forati1, A. G. Fowler1, B. Foxen1, G. Garcia1, ´E.
Genois1 W. Giang1, C. Gidney1, D. Gilboa1, M. Giustina1, R. Gosula1, A. Grajales Dau1, J. A. Gross1, S. Habegger1, M.
C. Hamilton1, 7, M. Hansen1, M. P. Harrigan1, S. D. Harrington1, P. Heu1, M. R. Hoﬀmann1, T. Huang1, A. Huﬀ1, W. J.
Huggins1, L. B. Ioﬀe1, S. V. Isakov1, J. Iveland1, E. Jeﬀrey1, Z. Jiang1, C. Jones1, P. Juhas1, D. Kafri1, T. Khattar1, M.
Khezri1, M. Kieferov´a1, 8, S. Kim1, A. Kitaev1, A. R. Klots1, A. N. Korotkov1, 9, F. Kostritsa1, J. M. Kreikebaum1, D.
Landhuis1, P. Laptev1, K.-M. Lau1, L. Laws1, J. Lee1, 10, K. W. Lee1, Y. D. Lensky1, B. J. Lester1, A. T. Lill1, W. Liu1, A.
Locharla1, F. D. Malone1, O. Martin1, S. Martin1, J. R. McClean1, M. McEwen1, K. C. Miao1, A. Mieszala1, S. Montazeri1,
W. Mruczkiewicz1, O. Naaman1, M. Neeley1, C. Neill1, A. Nersisyan1, M. Newman1, J. H. Ng1, A. Nguyen1, M. Nguyen1,
M. Yuezhen Niu1, T. E. O’Brien1, S. Omonije1, A. Opremcak1, A. Petukhov1, R. Potter1, L. P. Pryadko11, C. Quintana1, D.
M. Rhodes1, C. Rocque1, P. Roushan1, N. C. Rubin1, N. Saei1, D. Sank1, K. Sankaragomathi1, K. J. Satzinger1, H.
F. Schurkus1, C. Schuster1, M. J. Shearn1, A. Shorter1, N. Shutty1, V. Shvarts1, V. Sivak1, J. Skruzny1, W. C. Smith1, R.
D. Somma1, G. Sterling1, D. Strain1, M. Szalay1, D. Thor1, A. Torres1, G. Vidal1, C. VollgraﬀHeidweiller1, T. White1, B.
W. K. Woo1, C. Xing1, Z. J. Yao1, P. Yeh1, J. Yoo1, G. Young1, A. Zalcman1, Y. Zhang1, N. Zhu1, N. Zobrist1,
E. G. Rieﬀel2, R. Biswas2, R. Babbush1, D. Bacon1, J. Hilton1, E. Lucero1, H. Neven1, A. Megrant1, J. Kelly1, I. Aleiner1,
V. Smelyanskiy1, K. Kechedzhi1,§, Y. Chen1,§, S. Boixo1,§,
1 Google Research
2 Quantum Artiﬁcial Intelligence Laboratory, NASA Ames Research Center, Moﬀett Field, California 94035, USA
3 KBR, 601 Jeﬀerson St., Houston, TX 77002, USA
4 Department of Physics, University of Connecticut, Storrs, CT
5 National Institute of Standards and Technology (NIST), USA
6 Department of Electrical and Computer Engineering, University of Massachusetts, Amherst, MA
7 Department of Electrical and Computer Engineering, Auburn University, Auburn, AL
8 QSI, Faculty of Engineering and Information Technology, University of Technology Sydney, NSW, Australia
9 Department of Electrical and Computer Engineering, University of California, Riverside, CA
10 Department of Chemistry, Harvard University, Boston, NY
11 Department of Physics and Astronomy, University of California, Riverside, CA
‡ These authors contributed equally to this work.
§ Corresponding author: boixo@google.com
§ Corresponding author: bryanchen@google.com
§ Corresponding author: kostyantyn@google.com
[1] W. K. Wootters, Random quantum states, Foundations
of Physics 20, 1365 (1990).
[2] C. M. Caves, Measures and volumes for spheres, the prob-
ability simplex, projective hilbert space, and density op-
erators, Unpublished (2001).
[3] D. Petz and J. R´eﬀy, On asymptotics of large haar dis-
tributed unitary matrices, Periodica Mathematica Hun-
garica 49, 103 (2004).
[4] S. Boixo, S. V. Isakov, V. N. Smelyanskiy, R. Babbush,
N. Ding, Z. Jiang, M. J. Bremner, J. M. Martinis, and
H. Neven, Characterizing quantum supremacy in near-
term devices, Nature Physics 14, 595 (2018).
[5] K. Zyczkowski and H.-J. Sommers, Induced measures in
the space of mixed quantum states, Journal of Physics
A: Mathematical and General 34, 7111 (2001).
[6] F. Arute, K. Arya, R. Babbush, D. Bacon, J. C. Bardin,
R. Barends, R. Biswas, S. Boixo, F. G. S. L. Brandao,
D. A. Buell, B. Burkett, Y. Chen, Z. Chen, B. Chiaro,
R. Collins, A. Dunsworth, E. Farhi, B. Foxen, A. Fowler,
C. Gidney, M. Giustina, R. Graﬀ, K. Guerin, S. Habeg-
ger, M. P. Harrigan, M. J. Hartmann, A. Ho, M. Hoﬀ-
mann, T. Huang, T. S. Humble, S. V. Isakov, E. Jeﬀrey,
Z. Jiang, D. Kafri, K. Kechedzhi, J. Kelly, P. V. Klimov,
S. Knysh, A. Korotkov, F. Kostritsa, D. Landhuis,
M. Lindmark, E. Lucero, D. Lyakh, S. Mandr`a, J. R. Mc-
Clean, M. McEwen, A. Megrant, X. Mi, K. Michielsen,
M. Mohseni, J. Mutus, O. Naaman, M. Neeley, C. Neill,
M. Y. Niu, E. Ostby, A. Petukhov, J. C. Platt, C. Quin-
tana, E. G. Rieﬀel, P. Roushan, N. C. Rubin, D. Sank,
K. J. Satzinger, V. Smelyanskiy, K. J. Sung, M. D. Tre-
vithick, A. Vainsencher, B. Villalonga, T. White, Z. J.
Yao, P. Yeh, A. Zalcman, H. Neven, and J. M. Marti-
nis, Quantum supremacy using a programmable super-
conducting processor, Nature 574, 505 (2019).
[7] R. Barends, C. M. Quintana, A. G. Petukhov, Y. Chen,
D. Kafri, K. Kechedzhi, R. Collins, O. Naaman, S. Boixo,
F. Arute, K. Arya, D. Buell, B. Burkett, Z. Chen,
B. Chiaro, A. Dunsworth, B. Foxen, A. Fowler, C. Gid-

29
ney, M. Giustina, R. Graﬀ, T. Huang, E. Jeﬀrey, J. Kelly,
P. V. Klimov, F. Kostritsa, D. Landhuis, E. Lucero,
M. McEwen, A. Megrant, X. Mi, J. Mutus, M. Nee-
ley, C. Neill, E. Ostby, P. Roushan, D. Sank, K. J.
Satzinger, A. Vainsencher, T. White, J. Yao, P. Yeh,
A. Zalcman, H. Neven, V. N. Smelyanskiy, and J. M.
Martinis, Diabatic gates for frequency-tunable supercon-
ducting qubits, Phys. Rev. Lett. 123, 210501 (2019).
[8] C. Neill, T. McCourt, X. Mi, Z. Jiang, M. Y. Niu,
W. Mruczkiewicz, I. Aleiner, F. Arute, K. Arya, J. Ata-
laya, R. Babbush, J. C. Bardin, R. Barends, A. Bengts-
son, A. Bourassa, M. Broughton, B. B. Buckley, D. A.
Buell, B. Burkett, N. Bushnell, J. Campero, Z. Chen,
B. Chiaro, R. Collins, W. Courtney, S. Demura, A. R.
Derk, A. Dunsworth, D. Eppens, C. Erickson, E. Farhi,
A. G. Fowler, B. Foxen, C. Gidney, M. Giustina, J. A.
Gross, M. P. Harrigan, S. D. Harrington, J. Hilton,
A. Ho, S. Hong, T. Huang, W. J. Huggins, S. V.
Isakov, M. Jacob-Mitos, E. Jeﬀrey, C. Jones, D. Kafri,
K. Kechedzhi, J. Kelly, S. Kim, P. V. Klimov, A. N. Ko-
rotkov, F. Kostritsa, D. Landhuis, P. Laptev, E. Lucero,
O. Martin, J. R. McClean, M. McEwen, A. Megrant,
K. C. Miao, M. Mohseni, J. Mutus, O. Naaman, M. Nee-
ley, M. Newman, T. E. O’Brien, A. Opremcak, E. Os-
tby, B. Pat´o, A. Petukhov, C. Quintana, N. Redd, N. C.
Rubin, D. Sank, K. J. Satzinger, V. Shvarts, D. Strain,
M. Szalay, M. D. Trevithick, B. Villalonga, T. C. White,
Z. Yao, P. Yeh, A. Zalcman, H. Neven, S. Boixo, L. B.
Ioﬀe, P. Roushan, Y. Chen, and V. Smelyanskiy, Accu-
rately computing the electronic properties of a quantum
ring, Nature 594, 508 (2021).
[9] P. V. Klimov, J. Kelly, J. M. Martinis, and H. Neven, The
snake optimizer for learning quantum processor control
parameters (2020), arXiv:2006.04594 [quant-ph].
[10] X. Mi, P. Roushan, C. Quintana, S. Mandra, J. Mar-
shall, C. Neill, F. Arute, K. Arya, J. Atalaya, R. Bab-
bush, et al., Information scrambling in quantum circuits,
Science 374, 1479 (2021).
[11] X. Gao, M. Kalinowski, C.-N. Chou, M. D. Lukin,
B. Barak, and S. Choi, Limitations of linear cross-entropy
as a measure for quantum advantage, arXiv preprint
arXiv:2112.01657 (2021).
[12] A. M. Dalzell, N. Hunter-Jones, and F. G. S. L. Brand˜ao,
Random quantum circuits anticoncentrate in log depth,
PRX Quantum 3, 010333 (2022).
[13] I. L. Markov and Y. Shi, Simulating quantum computa-
tion by contracting tensor networks, SIAM Journal on
Computing 38, 963 (2008).
[14] S.
Boixo,
S.
V.
Isakov,
V.
N.
Smelyanskiy,
and
H. Neven, Simulation of low-depth quantum circuits
as complex undirected graphical models, arXiv preprint
arXiv:1712.05384 (2017).
[15] J. Gray and G. K. Chan, Hyper-optimized compressed
contraction of tensor networks with arbitrary geometry,
arXiv:2206.07044 (2022).
[16] C. Huang, F. Zhang, M. Newman, J. Cai, X. Gao,
Z. Tian, J. Wu, H. Xu, H. Yu, B. Yuan, et al., Clas-
sical simulation of quantum supremacy circuits, arXiv
preprint arXiv:2005.06787 (2020).
[17] G. Kalachev, P. Panteleev, and M.-H. Yung, Multi-
tensor contraction for xeb veriﬁcation of quantum cir-
cuits, arXiv preprint arXiv:2108.05665 (2021).
[18] G.
Kalachev,
P.
Panteleev,
P.
Zhou,
and
M.-H.
Yung, Classical sampling of random quantum circuits
with bounded ﬁdelity, arXiv preprint arXiv:2112.15083
(2021).
[19] F. Pan, K. Chen, and P. Zhang, Solving the sampling
problem of the sycamore quantum circuits, Physical Re-
view Letters 129, 090502 (2022).
[20] Y. Liu, Y. Chen, C. Guo, J. Song, X. Shi, L. Gan, W. Wu,
W. Wu, H. Fu, X. Liu, et al., Validating quantum-
supremacy experiments with exact and fast tensor
network contraction, arXiv preprint arXiv:2212.04749
(2022).
[21] J. Chen, F. Zhang, C. Huang, M. Newman, and Y. Shi,
Classical simulation of intermediate-size quantum cir-
cuits, arXiv preprint arXiv:1805.01450 (2018).
[22] I. L. Markov, A. Fatima, S. V. Isakov, and S. Boixo,
Quantum supremacy is both closer and farther than it
appears, arXiv preprint arXiv:1807.10749 (2018).
[23] B. Villalonga, S. Boixo, B. Nelson, C. Henze, E. Rieﬀel,
R. Biswas, and S. Mandr`a, A ﬂexible high-performance
simulator for verifying and benchmarking quantum cir-
cuits implemented on real hardware, npj Quantum Infor-
mation 5, 86 (2019).
[24] Y. Wu, W.-S. Bao, S. Cao, F. Chen, M.-C. Chen,
X. Chen, T.-H. Chung, H. Deng, Y. Du, D. Fan, M. Gong,
C. Guo, C. Guo, S. Guo, L. Han, L. Hong, H.-L. Huang,
Y.-H. Huo, L. Li, N. Li, S. Li, Y. Li, F. Liang, C. Lin,
J. Lin, H. Qian, D. Qiao, H. Rong, H. Su, L. Sun,
L. Wang, S. Wang, D. Wu, Y. Xu, K. Yan, W. Yang,
Y. Yang, Y. Ye, J. Yin, C. Ying, J. Yu, C. Zha, C. Zhang,
H. Zhang, K. Zhang, Y. Zhang, H. Zhao, Y. Zhao,
L. Zhou, Q. Zhu, C.-Y. Lu, C.-Z. Peng, X. Zhu, and J.-
W. Pan, Strong quantum computational advantage using
a superconducting quantum processor, Phys. Rev. Lett.
127, 180501 (2021).
[25] Q. Zhu, S. Cao, F. Chen, M.-C. Chen, X. Chen, T.-H.
Chung, H. Deng, Y. Du, D. Fan, M. Gong, C. Guo,
C. Guo, S. Guo, L. Han, L. Hong, H.-L. Huang, Y.-
H. Huo, L. Li, N. Li, S. Li, Y. Li, F. Liang, C. Lin,
J. Lin, H. Qian, D. Qiao, H. Rong, H. Su, L. Sun,
L. Wang, S. Wang, D. Wu, Y. Wu, Y. Xu, K. Yan,
W. Yang, Y. Yang, Y. Ye, J. Yin, C. Ying, J. Yu, C. Zha,
C. Zhang, H. Zhang, K. Zhang, Y. Zhang, H. Zhao,
Y. Zhao, L. Zhou, C.-Y. Lu, C.-Z. Peng, X. Zhu, and
J.-W. Pan, Quantum computational advantage via 60-
qubit 24-cycle random circuit sampling, Science Bulletin
67, 240 (2022).
[26] Y. Zhou, E. M. Stoudenmire, and X. Waintal, What lim-
its the simulation of quantum computers?, Physical Re-
view X 10, 041038 (2020).
[27] T. Ayral, T. Louvet, Y. Zhou, C. Lambert, E. M.
Stoudenmire, and X. Waintal, A density-matrix renor-
malisation group algorithm for simulating quantum cir-
cuits with a ﬁnite ﬁdelity, arXiv:2207.05612 (2022).
[28] V. A. Marˇcenko and L. A. Pastur, Distribution of eigen-
values for some sets of random matrices, Mathematics of
the USSR-Sbornik 1, 457 (1967).
[29] R. Movassagh and A. Edelman, Isotropic entanglement,
arXiv preprint arXiv:1012.5039 (2010).
[30] We
study
the
circuit
ensemble
consisting
of
ran-
dom
choices
of
one-qubit
gates
ZpX1/2Z−p
with
p ∈{−1, −1/4, −1/2, . . . , 3/4} and the two-qubit gate
iSWAP−1. We obtain the same ensemble if use iSWAP
instead of iSWAP−1. This follows from iSWAP−1 =
iSWAP · (Z ⊗Z) = (Z ⊗Z) · iSWAP and the fact that

30
the set {ZZpX1/2Z−p} is the same as {ZpX1/2Z−pZ}.
Therefore we can move Z gates between layers as we
transform iSWAP−1’s to iSWAP’s.
[31] K. M. Audenaert and M. B. Plenio, Entanglement on
mixed stabilizer states: normal forms and reduction pro-
cedures, New Journal of Physics 7, 170 (2005).
[32] S.
Aaronson,
Certiﬁed
randomness
from
quantum
supremacy, Talk at CRYPTO 2018 (2018).
[33] R. Bassirian, A. Bouland, B. Feﬀerman, S. Gunn, and
A. Tal, On certiﬁed randomness from quantum advantage
experiments, arXiv preprint arXiv:2111.14846 (2021).
[34] S. Aaronson and S.-H. Hung, Certiﬁed randomness from
quantum supremacy, arXiv preprint arXiv:2303.01625
(2023).
[35] A. Morningstar, M. Hauru, J. Beall, M. Ganahl, A. G.
Lewis, V. Khemani, and G. Vidal, Simulation of quantum
many-body dynamics with tensor processing units: Flo-
quet prethermalization, PRX Quantum 3, 020331 (2022).
[36] Z. Brakerski, P. Christiano, U. Mahadev, U. Vazirani,
and T. Vidick, A cryptographic test of quantumness and
certiﬁable randomness from a single quantum device, in
2018 IEEE 59th Annual Symposium on Foundations of
Computer Science (FOCS) (IEEE, 2018) pp. 320–331.
[37] U. Mahadev, U. Vazirani, and T. Vidick, Eﬃcient certi-
ﬁable randomness from a single quantum device, arXiv
preprint arXiv:2204.11353 (2022).
[38] M.-H. Yung and B. Cheng, Anti-forging quantum data:
Cryptographic veriﬁcation of quantum computational
power, arXiv preprint arXiv:2005.01510 (2020).
[39] L.
Brand˜ao
and
R.
Peralta,
Notes
on
interro-
gating
random
quantum
circuits,
National
In-
stitute
of
Standards
and
Technology
(2020),
doi:
10.13140/RG.2.2.24562.94400.
[40] F. Pan and P. Zhang, Simulating the sycamore quan-
tum supremacy circuits, arXiv preprint arXiv:2103.03074
(2021).
[41] S. P. Vadhan, Pseudorandomness, Foundations and
Trends in Theoretical Computer Science 7, 1 (2012).
[42] L. Trevisan, Extractors and pseudorandom generators,
Journal of the ACM 48, 860 (2001).
[43] R. Raz, O. Reingold, and S. Vadhan, Extracting all the
randomness and reducing the error in Trevisan’s extrac-
tors, Journal of Computer and System Sciences 65, 97
(2002).
[44] W. Mauerer, C. Portmann, and V. B. Scholz, A modular
framework for randomness extraction based on trevisan’s
construction, arXiv preprint arXiv:1212.0520 (2012).
[45] V. Shoup, Ntl: A library for doing number theory (2020).
[46] X. Ma, F. Xu, H. Xu, X. Tan, B. Qi, and H.-K. Lo,
Postprocessing for quantum random-number generators:
Entropy evaluation and randomness extraction, Physical
Review A 87, 062327 (2013).
[47] National Institute of Standards and Technology, FIPS
PUB 198-1:
The Keyed-Hash Message Authentication
Code (HMAC) (National Institute for Standards and
Technology, 2008).
[48] Y. Dodis, R. Gennaro, J. H˚astad, H. Krawczyk, and
T. Rabin, Randomness extraction and key derivation
using the cbc, cascade and hmac modes, in Advances
in Cryptology – CRYPTO 2004, edited by M. Franklin
(Springer Berlin Heidelberg, Berlin, Heidelberg, 2004)
pp. 494–510.

