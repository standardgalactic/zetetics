Git 101
Petr Svarny, 2020

Versioning
http://phdcomics.com/comics/archive.php?comicid=1531 

Versioning

Versioning

Implicit versioning

Git 
https://m.xkcd.com/1597/

Why do you need to version?

●Sharing
●Annotated list of changes
●Back up (also from mistakes)
●Review and history
Why do you need to version?

How does Git work?
Start
add ingredients
we don't need ingredients header
●
History
○
List of changes
○
Change unit = commit or change set
●
+ means added line, - deleted line
○
If something changed, you will see previous 
state as deleted and new state as added
●
Commit reference the previous state (parent 
commit)
●
Tracking changes works well only for plain text 
ﬁles (i.e. not Word or images)

Git cheat sheet
GitHub-cheat-sheet-graphic-v1.jpg

Basic practice and insight
●
A visual representation of git working for learning purposes
●
SW Carpentry tutorial
●
Git Bash for Windows, Git for Linux
●
Git homepage

Conﬁgure git
●When using Git for the ﬁrst time on computer we need to 
conﬁgure
○Name and email address 
○Preferred text editor  (more information)
○Use these settings globally 
$ git conﬁg --global user.name "name surname"
$ git conﬁg --global user.email "name@example.com"

Exercise
●Conﬁgure Git on your computer 
○All settings are global
○Name
○Email
○Text editor

How does Git work
0.
Tell git that you want to use version control in this folder, a.k.a. "make git 
repository"
○
git init
1.
Make changes in ﬁles.
○
As usual, git is just watching.

How does Git work
2.
Prepare changes that will be saved as one commit.
○
git add

How does Git work 
3.
Save set of changes as commit.
○
git commit
○
I can return to this state whenever I want.
○
Describe change!

Git GUI and gutk
●Graphical user interface for git
○sudo apt-get install git-gui (Ubuntu)
○brew install git (MacOS)
■If you do not have brew install it using tutorial here
●Software to view branches
○sudo apt-get install gitk (Ubuntu)
○brew install gitk (MacOS)
●GitBash for Win has also Git GUI

Github/Gitlab
●
Github/Gitlab are servers to store your versioned software.
●
GUI for git.
●
Project management tools.
●
Create an account.

List of changes
git log

Create informative commit messages (see here)
https://m.xkcd.com/1296/

Sharing changes 
●
By e-mail… 
○
This is the way Linux is developed
○
Uncomfortable
●
… Or have changes on server
○
You don't want to host your own server
○
Services
■
GitHub.com (biggest one)
■
GitLab.com
■
Bitbucket.org

How does Git work
4.
Push changes to remote server
○
git push

Exercise
●Create account on  GitHub.com 

Sharing changes using git
1.
Creating project (called repository) at github.com 
2.
Linking local repository to the remote server
○
git remote add origin git@github.com:uživatel/projekt.git
3.
Downloading changes
○
git pull
4.
Sending my changes
○
only the ones I’ve already committed
○
git push


Branches in git
Start
add ingredients
we don't need ingredients 
header
add method
master
origin/master
●I added one commit and did 
not yet push it to server yet
●Naming convention
○Remote server - origin
○Main branch - master
+Bake 35 min 190 degr
+         

Branches in git
Start
add ingredients
we don't need ingredients 
header
add method
master
●
In meantime someone already added some 
changes
●
Now I can't do git push - it will delete changes 
on remote server
tips added
origin/master
+
+Tips
+
+Bake 35 min 190 degr
+         

Merging changes
Start
add ingredients
we don't need ingredients 
header
add method
●
We need to merge changes
○
Check if changes are not in conflict
○
Git is trying to help us, but it is not almighty
tips added
Merged changes with 
origin/master
master
origin/master
+
+Tips
+
+Bake 35 min 190 degr
+         
+
+Tips
+
+Bake 35 min 190 degr
+         

Merging changes
Start
add ingredients
We do not need ingredients 
header
add method
●
We can then send all changes on server
●
If something was added in the meantime, repeat 
this step again :-)
tips added
Merged changes with 
origin/master
master
origin/master
+
+Tips
+
+Bake 35 min 190 degr
+         
+
+Tips
+
+Bake 35 min 190 degr
+         

Branches in git
Start
add ingredients
we don't need ingredients 
header
master
mybranch
●
Created a named branch using
git checkout -b mybranch
●
Now the commit belongs
to two branches:
git checkout master
and git checkout mybranch
take me to the same commit.

Branches in git
Start
add ingredients
we don't need ingredients 
header
add method
master
●
Branches can evolve independently
●
They can be pushed to server too
○
You’ll have origin/master and 
origin/mybranch
tips added
mybranch
+
+Tips
+
+Bake 35 min 190 degr
+         

Merging changes
Start
add ingredients
We do not need ingredients 
header
add method
●
You already know merging. ;-)
●
From master:
git merge mybranch
●
Now, the branches
are the same again.
tips added
Merged changes with 
origin/master
master
mybranch
+
+Tips
+
+Bake 35 min 190 degr
+         
+
+Tips
+
+Bake 35 min 190 degr
+         

Fork
●
Your version of project of another person's project Github
●
To fork, just use Fork button on Github
●
Then download new project to your computer using
git clone https://github.com/YOUR-NAME/recipe-book
○
New folder named recipe-book will be created in the current directory
○
More information here: 
https://help.github.com/articles/cloning-a-repository/ 
●
Now you can make changes (commits)
git add file   # Or using git gui
git commit
●
Send your changes to Github
git push origin master

Review using GitHub/GitLab/Bitbucket/...
1.
“Fork” project from other person
2.
Make changes, git push to your project
3.
Create pull request with commented changes

Review using GitHub/GitLab/Bitbucket/...
4. Discussion started

Review using GitHub/GitLab/Bitbucket/...
5. Person reviewing pull request is happy, code is 
merged to master

Recapitulation
# make changes in files
git status
# download all changes from server
git pull origin master
# use git gui OR
git add filename # add file to commit
git commit -m 'fix name' # write commit 
message
git push origin master # push changes to 
remote server

Exercise
●Fork repository recipe-book
●Clone repository to your computer
●Add your favourite recipe
●Make Pull Request with your recipe

Merge conﬂict!
Two people made different changes in the same place.
Person, who will be resolving conﬂicts need to decide whether:
●Add both versions
●Choose one
●Combine versions somehow

Creating proﬁle page on github
1. Go to Github
2. Create a repository in the format <username>.github.io
3. Follow this tutorial

