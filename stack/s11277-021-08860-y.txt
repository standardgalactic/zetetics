Vol.:(0123456789)
Wireless Personal Communications (2021) 121:2989–3007
https://doi.org/10.1007/s11277-021-08860-y
1 3
Edge Detection in Digital Images Using Guided ­L0 Smoothen 
Filter and Fuzzy Logic
Akshi Kumar1 · Sahil Raheja2
Accepted: 8 August 2021 / Published online: 24 August 2021 
© The Author(s), under exclusive licence to Springer Science+Business Media, LLC, part of Springer Nature 2021
Abstract
Image segmentation is an important process in computer vision. Recently fuzzy logic 
based edge detection is heavily investigated as by changing the number of rules edge detec-
tion can be improved. However, due to large colour variations in the images false edges 
are detected and even using fuzzy rules they cannot be reduced significantly. These falsely 
detected edges can be controlled by using smoothen filter while controlling the degree of 
smoothness. This paper, presents fuzzy logic based edge detection mechanism while using 
Guided ­L0 smoothen filter for the smoothening of image under various degree of smooth-
ens. Simulation results for edge detection is presented for Canny, Sobel, Fuzzy logic based 
edge detection and finally fuzzy logic edge detection with inclusion of ­L0 smoothen filter. 
The results are compared with classical and modern methods. Simulation is performed on 
Berkley Segmentation Database (BSD) and USC-SIPI Image Database while considering 
more than 100 images. The obtained F-measure is as high as 0.848.
Keywords  Edge detection · Guided filter · Fuzzy logic · Image processing · Sparsity · L0 
smoothing filter
1  Introduction
Edge detection is a prominent area of interest in various fields of research and engi-
neering. An edge can be characterized as a collection of associated pixels separating 
two distinct boundary regions [1]. An Edge could be defined as a local concept yet the 
boundary could be defined as a global concept. An ideal edge is a set of pixels whose 
intensity changes abruptly like step function. Blurry edges are likewise obtained by 
the elements such as issues or imperfections occurred during of sampling, optics, and 
image acquisition. In this way, we can closely observe that an edge possess a ramp-like 
profile [2]. The slope of the ramp is associated with the measure of blurriness. The 
length of the ramp is termed as the thickness of the edge. Sharp edges are thin while 
blurred edges are thick. If intensity is constant than first derivative is zero, while in 
 *	 Sahil Raheja 
	
sahilrahejaphd@rediffmail.com
1	
Department of Information Technology, Netaji Subhas University of Technology, Delhi, India
2	
Department of Information and Technology, Delhi Technological University, Delhi, India

2990
	
A. Kumar, S. Raheja 
1 3
ramp intensity profile derivative is constant. Additionally in the 2nd derivative, we can 
easily notice that it is negative along the light side of the edge while positive along the 
dark side of the edge such as delta functions. Moreover, we can observe it as zero along 
and outside the ramp [3].
Edge detection in a grey image is based greatest gradient. In discrete images gradient 
is defined as pixel intensity difference between any two pixels. Considering 3 × 3 mask 
as in Fig. 1a, the center pixel position is denoted by (i, j) and other pixels positions 
are also shown, correspondingly pixels values are shown in Fig. 1b, and possible edge 
directions are shown in Fig. 1c.
Let us define pixels positions on pixel mapping is
The resultant image is shown in Fig.  1b. The corresponding edge directions are 
shown in Fig. 1c. The absolute difference in 135° and 45° can be evaluated as
Similarly in 0° and 90° the differences are
Finally, edge can be calculated as
The calculated edges depend on the chosen thresholds and pixel differences. There-
fore, if pixel difference and thresholds varies the detected edges also changes. If thresh-
old is high only dominent edges will be detected and if threshold is low, many unwanted 
edges will also be detcehed. In few applications, where only dominent edges need to 
be detected, unwanted edges need to be suppressed. The supression of unwanted edges 
can be done using smoothening of images. In this paper, guided ­L0 smoothen filter and 
fuzzy logic based edge detection method is proposed. Image smoothening is done using 
guided ­L0 smoothen filter and for edge detection fuzzy logic is used.
The rest of the paper is organised as follows: Sect. 2 presents a review of various 
edge detection mechanisms. In Sect. 3, the proposed edge detection mechanism along-
with mathematical formulation is discussed, and in Sect. 4, of the paper proposed edge 
dtection framework is described. The simulation results under various edge detection 
mechanism is reported in Sect. 5 of the paper, and the important conclusions are dis-
cussed in Sect. 6.
(1)
z1 = f(i −1, j −1),
z2 = f(i, j −1), …
and
z9 = f(i + 1, j + 1)
(2)
D1 = ||z5 −z1|| + ||z9 −z5||
and
D3 = ||z5 −z3|| + ||z7 −z5||
(3)
D2 = ||z5 −z2|| + ||z8 −z5||
and
D4 = ||z5 −z4|| + ||z6 −z5||
(4)
Ed = D1 + D2 + D3 + D4
Fig. 1   Traditional edge detection processes a 3 × 3 mask, b z notation conversion, c possible edge directions

2991
Edge Detection in Digital Images Using Guided ­L0 Smoothen…
1 3
2  Related Works
Edge detection is a prominent area of interest in various fields of research and engineer-
ing [2]. Therefore, both edge enhancement and detection is important in various classes of 
engineering applications. A number of methodologies have been proposed and examined 
for edge detection. Each one of these was introduced to deal with the limitations of the ear-
lier techniques [3]. The schemes can be characterized as follows:
2.1  Classical Methods
Classical methods are simple and based on the convolution. The image is convolve with a 
filter or well developed kernels. It is possible to recognize an edge due to the sudden vari-
ations in grey scale pixel intensities. The pioneer kernel based methods in edge detection 
are Robert [4], Canny [5] were proposed. Later on Genming and Bouzong [6] presented a 
5 × 5 kernel based method to locate edges in an image while considering a fixed threshold 
level. Later on two more kernel based methods Sobel [7], Prewitt [8] were proposed. Later 
on edge detection method based on Gabor filters were discussed [9, 10]. But results were 
not promising as fixed threshold was used.
2.2  Classical Learning Algorithms
The classical learning based methods are Mairal et al. [11], gPb (gradient descent) [12], 
dictionary learning [13], and structured forest [14] (decision trees). These methods outper-
formed state-of-the-art techniques based on low-level processes in the BSDS segmentation 
dataset at the time they were proposed [13], achieving the best F-measure values. In most 
of the cases results were good, but still these methods fail in complex edges.
2.2.1  Soft Computing Algorithms
Ongoing researches fuses techniques based on artificial and swarn intelligence like ant col-
ony optimization (ACO) [15], artificial neural networks [16], particle swarm optimization 
(PCO), genetic algorithms (GA) [17] and cuckoo search optimization [18]. In recent past, 
hybrid methods based on ACO and guided image filter were also proposed, in these works 
edge enhancement is done using guided image sharpening and various forms of ACO were 
used for the edge detection [19, 20].
2.2.2  Deep Learning Algorithms
Recently, Convolutional Neural Networks based methods have gain popularity in edge detec-
tion [10, 21–25]. An architecture based on VGG16 [26] and pre-trained with Image Net data-
set is proposed in HED [22]. The network constructs a multi-scale learning architecture by 
generating edges from each convolutional block. For each predicted edge-map, the training 
method employs a modified cross entropy loss function. Xie and Tu [22] and Liu et al. [24] 
have offered modifications based on the same design as their backbone. While each output is 
fed from each convolution from each block in [24], and in [22], a series of fusion backward 
processes is conducted using the data of each output. In general, most contemporary DL-based 

2992
	
A. Kumar, S. Raheja 
1 3
mode lsuse the convolutional blocks of VGG16 architecture as their backbone. Other DNN 
based methods are Deep-Contour [27], DeepEdge [28], and CSCNN [29]. Holistically method 
have automatic learning capability are based on deep learning phenomenon.
Other recent methods are Anisotropic Gaussian Kernels [30], Fuzzy cellular automata [31], 
single pixel imaging was proposed for edge detection in [32].
Recently, it was shown that in the presence of noise/pubturbation CNN based edge detec-
tion struggles to find correct edges [33] and accuracy of edge detection reduces significantly. 
Therefore, learning based methods are also not very effective in presence of noise.
2.2.3  Fuzzy Logic Based Approaches
In past, concept of fuzzy reasoing for the dege detection was discussed in [34–40]. Kim et al. 
discussed a method based on fuzzy rules; here 16 fuzzy rules were devised to characterize 
edges [37]. The performance of the edge detection method is quite accurate for noise free 
images, but in the presence of noise falsely detected edges rises sharply. More experiments 
have been performed in higher type of fuzzy logic particularly fuzzy type-2 to oblige more 
noteworthy vulnerabilities [41, 42]. The structure of type-2 fuzzy logic is complex and not 
much improvement is observed in edge detection.
In our recent work, we have shown that sharpening of image using guided filtering can 
improve edge detection significantly [43]. However, to correctly detect edges, sometime false 
edges need to be suppressed. This can be achieved using Guided ­L0 Smoothen Filter. The 
method proposed in this paper cosnider type-1 fuzzy logic for edge detection, and guided ­L0 
image filtering for the smoothening of the images. The main of smoothening is to reduce the 
strength of the undesired edges. The smoothening also very effective in case of small pertur-
bation where deep learning based methods fails very easily. The fuzzy logic is very useful 
in edge detection because it decision making capability between partial true and partial false 
with respect to true and false edges.
3  Proposed Method
Smoothness of an image can change detected edges, as smoothness reduces amplitude varia-
tion therefore unwanted edges can be diminished. In the spirit of edge preserve smoothening, 
various methods are proposed over the period of time. In the similar context ­L0 smoothing 
filter is proposed, in this method prominent edges are preserved by increasing the steepness of 
transition and diminishing the other edges, still maintaining the overall structure of an image. 
After smoothness of the image fuzzy logic based edge detection method is applied. For better 
understanding of the Guided ­L0 smoothen filter we first discuss ­L0 smoothing filter, thereaf-
ter ­L0 gradiant minimization is detailed which sharpen the dominant edges. Finally, Guided 
­L0 smoothen filter is discussed which has the edge-preserving smoothing property. There-
fore, Guided ­L0 smoothen filter takes the advantages of ­L0 gradiant minimization and guided 
filtering.
3.1  L0 Smoothing Filter
In this subsection, basic concept of ­L0 smoothing filter as discussed in [44]. In this method 
­L0 norm which define non-zero difference in pixel values, and the count (N) of non-zero 
difference i.e., |||zi,j −zi−1,j||| ≠0 in pixel values can be written as

2993
Edge Detection in Digital Images Using Guided ­L0 Smoothen…
1 3
where i, j and (i – 1), j represents neighboring samples (or pixels) indices. |zi,j −zi−1,j| is the 
forward difference of the intensity also known as gradient w.r.t. i. This is, the L0 norm of 
gradient. We consider objective function as (omitting index j)
where c(Ii) = α, denotes the number of non-zero gradient and the input discrete signal is 
denoted by variable Ii and its smoothed version is represented by variable Is. Thus, more 
appropriate objective function which represents the constraint optimization would be
This optimization is necessary to maintain the image structure as the value of α may be 
very large. The parameter λ is very important as it controls the sparsity of the image gradi-
ent and consequently the smoothness of the output image.
3.2  L0 Gradient Minimization
The ­L0 norm might be directly optimized for a piecewise stable output picture with the 
aid of ­L0 gradient minimization [44]. It sharpens noticeable edges by increasing transition 
steepness. As a result, problem (8) must be solved after minimization.
Referring Eq. (8), output smoothened image is denoted by I, and its gradients as ∇I 
the parameter I∗ is the observed image, and λ is a weight to control gradient. With the end 
purpose to overcome the issue of the objective function and to deal the discontinuity of the 
term ‖∇I‖0 , an auxiliary variable Ω is introduced, therefore (8) can be written as:
The similarity between ΔI and Ω is controlled by parameter 훽 and the degree of smooth-
ness is handelled by λ.
3.3  Guided ­L0 Smoothing Filter
In Fig. 2, detailed description of guided ­L0 smoohen filter is shown. In this process, first 
image is passed through guided filter thereafter ­L0 filter, and known as guided ­L0 filtering 
and when min operation is applied on input image and guided ­L0 filtering, the resultant 
image is defined as guided smoothen image.
Xu et al. introduced ­L0 gradient minimization, which sharpens the image while keeping 
dominating edges [44]. Ding et al. propose a guided ­L0 smoothing filter. It makes advan-
tage of both the ­L0 gradient minimization and guided filter capabilities [45].
To begin, Using, Ik , the parameter Ωk is optimized using
(5)
c(Ii) = N{i, j| |zi,j −zi−1,j| ≠0}
(6)
min
I
∑
i
(Ii −Is)2 s.t.,
c(Ii) = 훼
(7)
min
I
∑
i
(Is −Ii)2+휆c(Ii)
(8)
min
I
‖I −I∗‖2
2 + 휆‖∇I‖0
(9)
min
I

‖I −I∗‖2
2 + 훽‖Ω −∇I‖0

+ 휆‖Ω‖0

2994
	
A. Kumar, S. Raheja 
1 3
As detailed in [45], the parameter, Ωk can be defined as
Now both Ωk and Ik are known, we now evaluates Ik+1 using Eqs. (9) and (11):
The expression (12) while considering [Eq. (11)] can be written as
The solution of Eq. (13) using least squre and fast Fourier transform (Fr) as detailed in 
[33] is
In above, inverse fast Fourier transform is denoted by F−1
r  , in the horizontal and vertical 
directions, ∂x and ∂y are difference operators.
Defining new variable ‘s’ for smoothed image, then using, Ωk and sk we obtain sk+1 as
(10)
min
훿k 훽k‖‖‖∇I −Ωk‖‖‖
2
2 + 휆‖‖‖Ωk‖‖‖0(k = 1, 2, 3....)
(11)
Ωk =
{
0
∇Ik≤휆
훽
∇Ik
others
(12)
min
Ik+1
‖‖‖Ik+1 −I∗‖‖‖
2
2 + 훽k‖‖‖Ωk −∇Ik+1‖‖‖
2
2
(13)
⎧
⎪
⎪
⎨
⎪
⎪⎩
min
Ik+1 ‖Ik+1−I∗‖
2
2+훽k‖∇Ik+1−H∗∇Ik‖
2
2
H=
⎧
⎪
⎨
⎪⎩
0
Ωk = 0
(k = 1, 2, 3, ...)
1
Ωk ≠0
(14)
Ik+1 = F−1
r
⎛
⎜
⎜
⎜⎝
Fr(I∗) + 훽

Fr

휕T
x

Fr

Ωk
x

+ Fr

휕T
y

Fr

Ωk
y

Fr(1) + 훽

Fr
휕T
x
Fr
휕x
 + Fr

휕T
y

Fr

휕y

⎞
⎟
⎟
⎟⎠
Fig. 2   Guided ­L0 smoothen filter

2995
Edge Detection in Digital Images Using Guided ­L0 Smoothen…
1 3
The solution of (15) is:
Algorithm:
Input: Image s∗ , guided image I∗ , parameters λ, 훽0, 훽max , rate κ.
Initialization: I1 ←I∗, s1 ←s∗, 훽1 ←훽0, k ←1,
repeat:
with Ik , solve Ωk for in (13);
with Ik and Ωk , solve for Ik+1 in (14);
with sk and Ωk , solve for sk+1 in (16);
훽←휅훽, k + +;
Until 𝛽> 𝛽max.
Output: s.
4  Proposed Framework
The basic architecture configuration of the proposed fuzzy expert system for edge 
detection is shown in Fig.  3. M1, M2 and M3 are the three approaches discussed in 
this paper. On the input image, only fuzzy logic is applied directly to detect edges in 
method M1, and defined as fuzzy logic based edge detection. The input image is first 
smoothed with the L0 smoothen filter in method M2, and then fuzzy logic is employed 
to find edges and defined as ­L0 smoothen filter + fuzzy logic. The input image is first 
smoothed with the guided L0 smoothen filter in method M3, and then fuzzy logic is 
used to detect edges defined as Guided ­L0 smoothen filter + fuzzy logic. It is important 
(15)
⎧
⎪
⎪
⎨
⎪
⎪⎩
min
sk+1 ‖sk+1−s∗‖
2
2+훽k‖∇sk+1−H∗∇sk‖
2
2
H=
⎧
⎪
⎨
⎪⎩
0
Ωk = 0
(k = 1, 2, 3...)
1
Ωk ≠0
(16)
sk+1 = F−1
r
⎛
⎜
⎜
⎜⎝
Fr(s∗) + 훽

Fr

휕T
x

Fr

H. ∗∇sk
x

+ Fr

휕T
y

Fr

H. ∗∇sk
y

Fr(1) + 훽

Fr
휕T
x
Fr
휕x
 + Fr

휕T
y

Fr

휕y

⎞
⎟
⎟
⎟⎠
Fig. 3   Detailed architecture for edge detection mechanism

2996
	
A. Kumar, S. Raheja 
1 3
to note that for edge detection fuzzy logic is applied in all the methods. In the pro-
posed method fuzzy logic is used for the edge detection. In fuzzy logic, first of all the 
input image is fuzzified by properly choosing input and output membership functions. 
Next fuzzy rules are derived, the membership function alonwith fuzzy set rules are fed 
to the Mamdani fuzzy inference engine, and the obtained output is de-fuzzified using 
the centroid method to obtain crisp values, which identifies a pixel as edge or non-edge 
pixel.
For both input and output, we employ a triangle membership function in this study. 
The input triangular function is defined as: triangle(x;a, b, c) = max
(
min
(
x−a
b−a, c−x
c−b
)
, 0
)
 
as in Fig. 4. The output triangular membership functions for black, while and edge are 
very narrow as shown in Fig. 5.
4.1  Fuzzy rules
A total of 30 rules are defined for edge classification, by considreing 3 × 3 windows as 
shown in Fig. 6. In the figure white pixel is deonted by ‘W’ and black pixels by ‘B’ and 
edge pixel by ‘E’. The rules are devised by conidering center pixel as edge pixel (E), 
and surrounding 8 pixels are varied.
Fig. 4   Black and white pixel 
values membership functions
Fig. 5   Black, white, and edge outputs membership functions

2997
Edge Detection in Digital Images Using Guided ­L0 Smoothen…
1 3
Rules with 3 B and 5 W pixels in neighbourhood of edge pixel (E)
Rules with 4 B and 4 W pixels in neighbourhood of edge pixel (E)
Rules with 5 B and 3 W pixels in neighbourhood of edge pixel (E)
Rules with 6 B and 2 W pixels in neighbourhood of edge pixel (E)
Rules with 8 B or 8 W pixels in neighbourhood of non-edge pixel (NE)
Fig. 6   Fuzzy rules for the classification of edge and non-edge pixels

2998
	
A. Kumar, S. Raheja 
1 3
5  Results
5.1  Performance Measures
It’s difficult to design a generalized edge detection assessment since during edge detec-
tion mechanism some edges are falsely rejected, some are incorrectly accepted, and 
some change their positions. As a result, established metrics such as mean square error 
(MSE) and peak signal-to-noise ratio (PSNR) are ineffective. In this paper four meas-
ures Pratt’s Figure of Merit [43], Structure Similarity Image Metrics [43], F-Score [43] 
and Hausdorff Distance [43] is considered.
5.1.1  Pratt’s Figure of Merit (FoM)
By quantifying the displacement (d) of edge points identified from an ideal edge (IA), 
the Pratt’s Figure of Merit analyses edge location accuracy in edge detected images (IB), 
in contrast to ground truth images. The Figure of Merit is characterized by
The value of FoM lies between 0 and 1, when d = 0, FoM is 1, thus as FoM 
approaches 1, more accurate will be edge detection mechanism.
5.1.2  Structure Similarity Image Metrics (SSIM)
SSIM tries to estimate the changes in brightness, contrast, and structure in an image. 
The SSIM is given by
In above equation, mean, variance and cross-correlation of the images A and B is 
represented by 휇A , 휇B,휎2
A , 휎2
B and 휎AB respectively, and rest terms are constants.
5.1.3  Hausdorff Distance (HoD)
The Hausdorff distance between two images IA = {α1,…,αn} and IB = {β1,…,βn}, is given 
by
where
The function d(IA, IB) is the directed Hausdorff distance from IA to IB.
(17)
FoM =
1
max(IA, IB)
IB
∑
i=1
9
(9 + d2
i
)
(18)
SSIM(A, B) =
(
2휇A휇B + k1
)
(2휎AB + k2)
(휇2
A + 휇2
B + k1
)(휎2
A + 휎2
B + k2
)
H(IA, IB) = max(d(IA, IB), d(IB, IA))
(19)
d(IA, IB) = max
훼∈IA
min
훼∈IB ||훼−훽||

2999
Edge Detection in Digital Images Using Guided ­L0 Smoothen…
1 3
5.1.4  F‑Score
In binary classification, the F-measure is a test of accuracy. The test score is based on both 
precession and recall. F has a maximum value of 1 and a minimum value of 0. It is the 
harmonic mean of precession and recall with equal weightage. Considering characteristic 
matrix (Fig. 7) the precession and recall are defined as
5.2  Comparative Results (Proposed Methods)
However, to prove usefulness of proposed method and to cover wide varieties of experi-
ments results are presented on a single image considered from Berkley Segmentation Data-
base (BSD) [46]. Finally, in the comparative analysis results are presented using both BSD 
and USC-SIPI Image Database is considered [47].
5.2.1  Results ­M1 Method
In Fig. 8, results for edge detection are shown, using fuzzy logic only. It is clear from the 
figure that in edge detected images most of the edges are correctly detected with some 
more edges are falsely detected specially in Fig. 8c where at corners falsely detected edges 
can be easily seen.
5.2.2  Results ­M2 Method
The falsely detected edges can be suppressed using ­L0 smoothen filtering, but it should be 
kept in mind that more and more smoothness may leads to false rejection of edges. There-
fore degree of smoothness plays an important role in detected edges. The chosen param-
eters for smoothening are β0 = 2λ, βmax = 100,000, k = 2 and λ varies (0.05–0.2).
Precision (Pr
) =
True Positive
(True Positive + False Positive)
and
Recall (Rc
) =
True Positive
(True Positive + False Negative)
Fig. 7   Characteristic matrix

3000
	
A. Kumar, S. Raheja 
1 3
In Fig. 9, on the top row smoothen images are shown, using various level of degree 
of smoothness. As ­L0 is edge preserving filter therefore even in smoothened prominent 
edges are preserved. In bottom row results for edge detection using fuzzy logic is shown 
on the smoothen images. It is clear from the figure that as smoothness increases, the falsely 
detected edges are reduced while prominent edges are still preserved.
5.2.3  Results ­M3 Method
In Fig. 10, on the top row smoothen images are shown, using various level of degree of 
smoothness while considering guided filtering. As guided ­L0 is edge preserving filter there-
fore even in smoothened prominent edges are preserved. On the bottom row edge detected 
images are shown. Therefore, by varying the degree of smoothness and applied methods 
(M2 and M3) the detected edges can be controlled. This is the main advantage of the pro-
posed method where detected edges can be controlled.
In Fig. 11, comparison of various edge detection methods is shown, where in Fig. 11 
ground truth image is shown with marked white areas where notable changes takes place 
in different methods. In Sobel method, edges in circular mark region are not properly 
detected. In case of Canny method a large number of falsely detected edges are found. 
In fuzzy method obtained results are well in agreement with ground truth image, but 
variation in rectangular mark region can be seen, along with some more falsely accepted 
Fig. 8   a Original image, b ground truth, c detected edges using fuzzy logic
(a) λ=0.05
(b)λ=0.1
(c) λ=0.2
Fig. 9   Smoothen images using ­L0 smoothing filter

3001
Edge Detection in Digital Images Using Guided ­L0 Smoothen…
1 3
edges across the image. For ­L0 smoothen filter and fuzzy method obtained results are well 
in agreement with ground truth image and variation is small, and finally for guided ­L0 
smoothen filter and fuzzy method, here again results are very much similar to ­L0 smoothen 
filter and fuzzy method with minor inclusion of false edges in circular region, however 
oval mark section is best detected. It is clear from the figures that the variation is so small 
it is difficult to judge from naked eyes, therefore to judge the performance of the method 
three performance measure as discussed above are used and obtained results are shown in 
Figs. 12, 13 and 14.
In Figs.  12, 13 and 14, results for various edge detection techniques under three 
performance metrics are shown. Ideally FoM, SSIM should be one and HoD should be 
equal to zero. It is clear from the tables that FoM is lowest for canny edge detection, 
i.e., more pixels shift their position in comparison to other considered technique. In 
(a) λ=0.05  
 
(b) λ=0.1  
 
     (c) λ=0.2  
Fig. 10   Detected Edges in smoothen images using guided ­L0 smoothing filter
Fig. 11   Comparison of various edge detection methods

3002
	
A. Kumar, S. Raheja 
1 3
Fig. 12, FoM vs. λ is shown, It is evident that best FoM is obtained under Guided ­L0 
smoothen filter + fuzzy logic case. It is also observable that as degree of smoothness 
increases FoM increases up to a limit thereafter it starts to decreases. The best value of 
FoM is obtained for λ = 0.2. In Fig. 13, SSIM vs. λ is shown, again SSIM is compara-
tively better, for Guided ­L0 smoothen filter + fuzzy logic case, but first it increases with 
degree of smoothness, thereafter SSIM decreases. This is obvious more smoothening 
will lead to structural modifications. In the considered cases, best SSIM is obtained for 
degree of smoothness of 0.1. In the Fig. 14, Hausdorff Distance is plotted, for best case 
average minimum distance is 3.30. Again here with increases in λ, HoD first decreases 
and then increases. These results clearly reveal that Guided ­L0 smoothen filter + fuzzy 
logic provides better results for edge detection.
Fig. 12   Comparison of various 
edge detection methods (FoM 
vs. λ)
Fig. 13   Edge detection methods 
comparsions (SSIM vs. λ)

3003
Edge Detection in Digital Images Using Guided ­L0 Smoothen…
1 3
5.3  Comparative with Recent Methods
In order to compare our method with more recent edge detection techniques, results are 
compared with Gonzalez et al., work where edges are detected using sobel and type-2 
fuzzy logic method [48]. Results were tested on more than 100 images, and a few repro-
duced results are shown in Fig. 15.
In Fig. 15, four rows and four columns are shown, first column shows original image, 
and in second column results are shown for canny edge detection. In column 3 and 
4 results are shown for Gonzalez et  al. and proposed method respectively. In Canny 
method large numbers of false edges are accepted leads to the lowering of F-score. It is 
also observable that when intensity difference is less Canny method fail to detect edges 
(fourth row second column). Our method is comparable to Gonzalez et  al., methods 
with less number of falsely accepted edges (second row and second, third columns).
In Table 1, notable and recently proposed methods are compared in terms of F-score. 
For classical methods canny and sobel F-measure is 0.49 and 0.40 respectively. The 
recently proposed learning based methods have F-score ranging from 0.63 to 0.78. A 
new kernel based method with singular value decomposition [42] has F-score as high 
as 0.83. Our proposed methods, L0 smoothen filter + fuzzy logic (M2) and Guided L0 
smoothen filter + fuzzy logic (M3) attain F-score of 0.82 and 0.848 respectively.
The simulation is done ­MATLABR 2015a, on a syatem with quadcore processor, 
4 GB RAM, the rum time for fuzzy logic method (M1) is 3.67 s, while for L0 smoothen 
filter + fuzzy logic (M2) the runtime is 5.69  s. Finally, for Guided L0 smoothen fil-
ter + fuzzy logic (M3), the runtime is 7.43  s. Therefore, the proposed edge detection 
mechansim is fast enough that it can be applied to real time problems.
Fig. 14   Edge detection methods 
comparsions (HoD vs. λ)

3004
	
A. Kumar, S. Raheja 
1 3
Fig. 15   Each row left to right: original, Canny, Gonzalez, et al., and proposed
Table 1   Comparison of notable 
edge detection methods
Methods
Year
F-measure
Canny [5]
(1996)
0.49
Sobel [49]
(2009)
0.40
BEL [50]
(2006)
0.63
gPb [12]
(2011)
0.71
Sketch Token [51]
(2013)
0.73
Structure Forest [52]
(2013)
0.71
Holistically-nested edge detection [53]
(2015)
0.78
Gonzalez et al. [48]
(2018)
0.83
Akshi et al. [19]
(2020)
0.79
Akshi et al. [20]
(2020)
0.81
Fuzzy only ­(M1)
(2021)
0.77
L0 smoothen filter + fuzzy logic ­(M2)
(2021)
0.82
Guided ­L0 smoothen filter + fuzzy logic ­(M3)
(2021)
0.848

3005
Edge Detection in Digital Images Using Guided ­L0 Smoothen…
1 3
6  Conclusions
Edge detection has been an important area of research from past many years due to its 
utility in many fields like: image segmentation, medical, forensic and defense applica-
tions. In past years various methods based on kernels and soft computing based has 
been proposed, but they are all dependent on some kind of threshold mechanism and 
suffer from false acceptance/rejection. To deal such issues, in this paper a fuzzy based 
edge detection mechanism is proposed where edges are controlled using smoothen fil-
ters. In this paper two types of smoothen filters ­L0 smoothen and guided ­L0 smoothen 
filters are discussed, and using these filters prominent edges can be preserved and thus 
making edge detection more efficient. The performance of the edge detection methods 
are compared in terms of FoM, SSIM, F-measure and HoD, and it has been found that 
Guided ­L0 smoothen filter + fuzzy logic produces better results. It is also found that 
smoothen should be done carefully and it should be within limit to obtain better results 
otherwise SSIM slips down and image quality goes down.
References
	 1.	 Petrou, M., & Petrou, C. (2010). Image processing: The fundamentals. Wiley.
	 2.	 Bovik, A. C. (2010). Handbook of image and video processing. Academic Press.
	 3.	 Poobathy, D., & Chezian, R. M. (2014). Edge detection operators: Peak signal to noise ratio based 
comparison. International Journal of Image, Graphics and Signal Processing, 1(10), 55–61.
	 4.	 Roberts, L. G. (1965). Machine perception of three-dimensional solids. In J. T. T ippett (Ed.) Opti-
cal and electro-optical information processing (Ch. 9, pp. 159–197). MIT Press.
	 5.	 Canny, J. (1986). A computational approach to edge detection. IEEE Transactions on Pattern Anal-
ysis and Machine Intelligence, 6, 679–698.
	 6.	 Genming, C., & Baozong, Y. (1989). A new edge detector with thinning and noise resisting abili-
ties. Journal of Electronics, 6(4), 314–319.
	 7.	 Matthews, J. (2002). An introduction to edge detection: The sobel edge detector. http://​www.​gener​
ation5.​org/​conte​nt/​2002/​im01.​asp
	 8.	 Gonzalez, R. C., & Woods, R. E. (2002). Digital image processing (2nd ed.). Prentice Hall.
	 9.	 Grigorescu, C., Petkov, N., & Westenberg, M. A. (2003). Con-tour detection based on nonclassical 
receptive field inhibition. IEEE Transactions on Image Processing, 12(7), 729–739.
	10.	 Ganin, Y., & Lempitsky, V. (2014). n4fields: Neural network nearest neighbor fields for image 
transforms. In Asian conference on computer vision (pp. 536–551). Springer.
	11.	 Mairal, J., Leordeanu, M., Bach, F., Hebert, M., & Ponce, J. Discriminative sparse image models 
for class-specific edge detection and image interpretation. In European conference on computer 
vision (pp. 43–56). Springer.
	12.	 Arbelaez, P., Maire, M., Fowlkes, C., & Malik, J. (2011). Contour detection and hierarchical image 
segmentation. IEEE Transactions on Pattern Analysis and Machine Intelligence, 33(5), 898–916.
	13.	 Xiaofeng, R., & Bo, L. (2012). Discriminatively trained sparse code gradients for contour detec-
tion. In Advances in neural information processing systems (pp. 584–592).
	14.	 Dolĺar, P., & Zitnick, C. L. (2015). Fast edge detection using structured forests. IEEE Transactions 
on Pattern Analysis and Machine Intelligence, 37(8), 1558–1570.
	15.	 Verma, O. P., & Sharma, R. (2011). An optimal edge detection using universal law of gravity and 
ant colony algorithm. In Proc. information and communication technologies (WICT) (pp. 507–511).
	16.	 Naumenko, A., Lukin, V., & Egiazarian, K. (2012). SAR-image edge detection using artificial neu-
ral network. In Proc. international conference on mathematical methods in electromagnetic theory 
(MMET) (pp. 508–512).
	17.	 Setayesh, M., Zhang, M., & Johnston, M. (2012). Effects of static and dynamic topologies in par-
ticle swarm optimisation for edge detection in noisy images. In Proc. evolutionary computation 
(CEC) (pp. 1–8).

3006
	
A. Kumar, S. Raheja 
1 3
	18.	 Gonzalez, C. I., Castro, J. R., Melin, P., & Castillo, O. (2015). Cuckoo search algorithm for the optimi-
zation of type-2 fuzzy image edge detection systems. In 2015 IEEE congress on evolutionary computa-
tion (CEC) (pp. 449–455). IEEE.
	19.	 Kumar, A., & Raheja, S. (2020). Edge detection using guided image filtering and ant colony optimiza-
tion. In The international conference on recent innovations in computing (pp. 319–330). Springer.
	20.	 Kumar, A., & Raheja, S. (2020). Edge detection using guided image filtering and enhanced ant colony 
optimization. Procedia Computer Science, 173, 8–17.
	21.	 Bertasius, G., Shi, J., & Torresani, L. (2015). Deepedge: A multi-scale bifurcated deep network for 
top-down contour detection. In Proceedings of the IEEE conference on computer vision and pattern 
recognition (pp. 4380–4389).
	22.	 Xie, S., & Tu, Z. (2017). Holistically-nested edge detection. International Journal of Computer Vision, 
125(1–3), 3–18.
	23.	 Wang, Y., Zhao, X., & Huang, K. (2017). Deep crisp boundaries. In Proceedings of the IEEE confer-
ence on computer vision and pattern recognition (pp. 3892–3900).
	24.	 Liu, Y., Cheng, M.-M., Hu, X., Wang, K., & Bai, X. (2017). Richer convolutional features for edge 
detection. In Computer vision and pattern recognition (CVPR), 2017 IEEE Conference on (pp. 5872–
5881). IEEE.
	25.	 Marmanis, D., Schindler, K., Wegner, J. D., Galliani, S., Datcu, M., & Stilla, U. (2018). Classification 
with an edge: Improving semantic image segmentation with boundary detection. ISPRS Journal of 
Photogrammetry and Remote Sensing, 135, 158–172.
	26.	 Simonyan, K., & Zisserman, A. (2014). Very deep convolutional networks for large-scale image recog-
nition. arXiv preprint arXiv:​1409.​1556.
	27.	 Shen, W., Wang, X., Wang, Y., Bai, X., & Zhang, Z. (2015). Deepcontour: A deep convolutional fea-
ture learned by positive-sharing loss for contour detection. In Proceedings of the IEEE conference on 
computer vision and pattern recognition (pp. 3982–3991).
	28.	 Bertasius, G., Shi, J., & Torresani, L. (2015). Deepedge: A multiscale bifurcated deep network for top-
down contour detection. In CVPR.
	29.	 Hwang, J.-J., & Liu, T.-L. (2015). Pixel-wise deep learning for contour detection. In ICLR.
	30.	 Zhang, W., Zhao, Y., Breckon, T. P., & Chen, L. (2017). Noise robust image edge detection based upon 
the automatic anisotropic Gaussian kernels. Pattern Recognition, 63, 193–205.
	31.	 Farbod, M., Akbarizadeh, G., Kosarian, A., & Rangzan, K. (2018). Optimized fuzzy cellular automata 
for synthetic aperture radar image edge detection. Journal of Electronic Imaging, 27(1), 013030.
	32.	 Ren, H., Zhao, S., & Gruska, J. (2018). Edge detection based on single-pixel imaging. Optics express, 
26(5), 5501–5511.
	33.	 Cosgrove, C., & Yuille, A. L. (2019). Adversarial examples for edge detection: They exist, and they 
transfer. arXiv preprint arXiv:​1906.​0033.
	34.	 Kuo Y. H., Lee C. S., & Liu, C. C. (1997). A new fuzzy edge detection method for image enhance-
ment. In Proc. 6th IEEE international conference (Vol. 2, pp. 1069–1074).
	35.	 Russo, F. (1998). Edge detection in noisy images using fuzzy reasoning. In Proc. instrumentation and 
measurement technology conference (pp. 369–372). IMTC/98.1.
	36.	 El-Khamy S. E., Lotfy M., & El-Yamany N. (2000). A modified fuzzy Sobel edge detector. In Proc. 
radio science conference (pp. C32-1).
	37.	 Kim, D. S., Lee, W. H., & Kweon, I. S. (2004). Automatic edge detection using 3× 3 ideal binary pixel 
patterns and fuzzy-based edge thresholding. Pattern Recognition Letters, 25(1), 101–106.
	38.	 Alshennawy, A. A., & Aly, A. A. (2009). Edge detection in digital images using fuzzy logic technique. 
World Academy of Science, Engineering and Technology, 24(51), 1781–1786.
	39.	 Tab, F. A., Shahryari, O. K. (2009). Fuzzy edge detection based on pixel’s gradient and standard devia-
tion values. In Proc. computer science and information technology, IMCSIT’09, (pp. 7–10).
	40.	 Kaur, E. K., Mutenja, V., & Gill, E. I. (2010). Fuzzy logic based image edge detection algorithm in 
MATLAB. International Journal of Computer Applications, 1(22), 55–58.
	41.	 Hsu, C. H., & Juang, C. F. (2011). Evolutionary robot wall-following control using type-2 fuzzy 
controller with species-DE-activated continuous ACO. IEEE Transactions on Fuzzy Systems, 21(1), 
100–112.
	42.	 Chen, S. M., Chang, Y. C., & Pan, J. S. (2013). Fuzzy rules interpolation for sparse fuzzy rule-based 
systems based on interval type-2 Gaussian fuzzy sets and genetic algorithms. IEEE Transactions on 
Fuzzy Systems, 21(3), 412–425.
	43.	 Raheja, S., & Kumar, A. (2021). Edge detection based on type-1 fuzzy logic and guided smoothening. 
Evolving Systems, 12, 447–462.
	44.	 Xu, L., Lu, C., Xu, Y., & Jia, J. (2011). Image smoothing via ­L0 gradient minimization. ACM Transac-
tions on Graphics, 30(6), 174.

3007
Edge Detection in Digital Images Using Guided ­L0 Smoothen…
1 3
	45.	 Ding, X., Chen, L., Zheng, X., Huang, Y., & Zeng, D. (2016). Single image rain and snow removal via 
guided ­L0 smoothing filter. Multimedia Tools and Applications, 75(5), 2697–2771.
	46.	 https://​www2.​eecs.​berke​ley.​edu/​Resea​rch/​Proje​cts/​CS/​vision/​bsds/​BSDS3​00/​html/​datas​et/​images.​html
	47.	 http://​sipi.​usc.​edu/​datab​ase/​datab​ase.​php
	48.	 Gonzalez, C. I., Melin, P., Castro, J. R., Mendoza, O., & Castillo, O. (2016). An improved sobel edge 
detection method based on generalized type-2 fuzzy logic. Soft Computing, 20(2), 773–784.
	49.	 Vincent, O. R., & Folorunso, O. (2009). A descriptive algorithm for sobel image edge detection. Pro-
ceedings of Informing Science & IT Education Conference, 40, 97–107.
	50.	 Dollar, P., Tu, Z., & Belongie, S. (2006). Supervised learning of edges and object boundaries. In 
Computer vision and pattern recognition, 2006 IEEE computer society conference on (Vol. 2, pp 
1964–1971).
	51.	 Lim, J. J., Zitnick, C. L., & Dollár, P. (2013). Sketch tokens: A learned mid-level representation for 
contour and object detection. In Proceedings of the IEEE conference on computer vision and pattern 
recognition (pp. 3158–3165).
	52.	 Dollár, P., & Zitnick, C. L. (2013). Structured forests for fast edge detection. In Proceedings of the 
IEEE international conference on computer vision (pp. 1841–1848).
	53.	 Xie, S., & Tu, Z. (2015). Holistically-nested edge detection. In Proceedings of the IEEE international 
conference on computer vision (pp. 1395–1403).
Publisher’s Note  Springer Nature remains neutral with regard to jurisdictional claims in published maps and 
institutional affiliations.
Dr. Akshi Kumar  is an Associate Professor at the Department of Infor-
mation Technology, Netaji Subhas University of Technology, Delhi, 
India. She is a Post-doc from Federal Institute of Education, Science 
and Technology of Ceará, Fortaleza, Brazil and PhD from Faculty of 
Technology, University of Delhi, India. She was an Assistant Professor 
at the Delhi Technological University (formerly, Delhi College of 
Engineering), Delhi, India and has a total teaching experience of 16 
years.My core teaching and research interests are in the domains of 
Web Technologies and Intelligent Systems. I conduct research in the 
design, analysis, and applications of Web. I also use techniques from 
Machine Learning, Soft Computing, Natural Language Processing, 
Probability and Information Theory in my research.  I am ardently 
involved in projects on Sentiment Analysis in Web 2.0 Technologies. 
My focus lies in the area of investigating paradigms, devising tech-
niques and building tools that perform sentiment analysis on social 
media (Twitter, Facebook, Blog, Quora) with suitable practical appli-
cations for business and government intelligence.
Mr. Sahil Raheja  is a research scholar in the department of Information 
and Technology, Delhi Technological University. He has completed his 
M.Tech in Information systems from Delhi Technological University 
in 2012. He also worked as an assistant professor in School of comput-
ing science and engineering at Galgotias University, Greater Noida, 
India and has a total teaching experience of 10 years. His area of inter-
ests are Image and Video Processing, Machine Vision, Soft 
computing. 

