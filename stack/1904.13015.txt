Towards Coherent and Engaging Spoken Dialog Response Generation
Using Automatic Conversation Evaluators
Sanghyun Yi1, Rahul Goel2, Chandra Khatri3, Alessandra Cervone4, Tagyoung Chung5,
Behnam Hedayatnia5, Anu Venkatesh5, Raefer Gabriel5, Dilek Hakkani-Tur5
1Division of Humanities and Social Sciences, California Institute of Technology,
2Google, 3Uber AI, 5Alexa AI, Amazon
4Signals and Interactive Systems Lab, University of Trento
syi@caltech.edu, goelrahul@google.com,
{tagyoung,behnam,anuvenk,raeferg,hakkanit}@amazon.com,
chdrak@uber.com, alessandra.cervone@unitn.it
Abstract
Encoder-decoder based neural architectures
serve as the basis of state-of-the-art ap-
proaches in end-to-end open domain dialog
systems.
Since most of such systems are
trained with a maximum likelihood (MLE) ob-
jective they suffer from issues such as lack of
generalizability and the generic response prob-
lem, i.e., a system response that can be an an-
swer to a large number of user utterances, e.g.,
“Maybe, I don’t know.” Having explicit feed-
back on the relevance and interestingness of
a system response at each turn can be a use-
ful signal for mitigating such issues and im-
proving system quality by selecting responses
from different approaches. Towards this goal,
we present a system that evaluates chatbot re-
sponses at each dialog turn for coherence and
engagement.
Our system provides explicit
turn-level dialog quality feedback, which we
show to be highly correlated with human eval-
uation. To show that incorporating this feed-
back in the neural response generation models
improves dialog quality, we present two differ-
ent and complementary mechanisms to incor-
porate explicit feedback into a neural response
generation model: reranking and direct mod-
iﬁcation of the loss function during training.
Our studies show that a response generation
model that incorporates these combined feed-
back mechanisms produce more engaging and
coherent responses in an open-domain spoken
dialog setting, signiﬁcantly improving the re-
sponse quality using both automatic and hu-
man evaluation.
1
Introduction
Due to recent advances in spoken language under-
standing and automatic speech recognition, conver-
sational interfaces such as Alexa, Cortana, and Siri
have become increasingly common. While these
interfaces are task oriented, there is an increasing
interest in building conversational systems that can
engage in more social conversations. Building sys-
tems that can have a general conversation in an
open domain setting is a challenging problem, but
it is an important step towards more natural human-
machine interactions.
Recently, there has been signiﬁcant interest in
building chatbots (Sordoni et al., 2015; Wen et al.,
2015) fueled by the availability of dialog data sets
such as Ubuntu, Twitter, and Movie dialogs (Lowe
et al., 2015; Ritter et al., 2011; Danescu-Niculescu-
Mizil and Lee, 2011). However, as most chatbots
are text-based, work on human-machine spoken di-
alog is relatively under-explored, partly due to lack
of such dialog corpora. Spoken dialog poses addi-
tional challenges such as automatic speech recog-
nition errors and divergence between spoken and
written language.
Sequence-to-sequence
(seq2seq)
models
(Sutskever et al., 2014) and their extensions (Lu-
ong et al., 2015; Sordoni et al., 2015; Li et al.,
2015),
which are used for neural machine
translation (MT), have been widely adopted for
dialog generation systems. In MT, given a source
sentence, the correctness of the target sentence can
be measured by semantic similarity to the source
sentence. However, in open-domain conversations,
a generic utterance such as “sounds good” could
be a valid response to a large variety of statements.
These seq2seq models are commonly trained on
a maximum likelihood objective, which leads the
models to place uniform importance on all user
utterance and system response pairs. Thus, these
models usually choose “safe” responses as they
frequently appear in the dialog training data. This
phenomenon is known as the generic response
problem. These responses, while arguably correct,
are bland and convey little information leading to
short conversations and low user satisfaction.
Since response generation systems are trained by
maximizing the average likelihood of the training
arXiv:1904.13015v4  [cs.CL]  22 Nov 2019

data, they do not have a clear signal on how well
the current conversation is going. We hypothesize
that having a way to measure conversational suc-
cess at every turn could be valuable information
that can guide system response generation and help
improving system quality. Such a measurement
may also be useful for combining responses from
various competing systems. To this end, we build a
supervised conversational evaluator to assess two
aspects of responses: engagement and coherence.
The input to our evaluators are encoded conversa-
tions represented as ﬁxed-length vectors as well as
hand-crafted dialog and turn level features. The
system outputs explicit scores on coherence and
engagement of the system response.
We experiment with two ways to incorporate
these explicit signals in response generation sys-
tems. First, we use the evaluator outputs as input
to a reranking model, which are used to rescore the
n-best outputs obtained after beam search decod-
ing. Second, we propose a technique to incorporate
the evaluator loss directly into the conversational
model as an additional discriminatory loss term.
Using both human and automatic evaluations, we
show that both of these methods signiﬁcantly im-
prove the system response quality. The combined
model utilizing re-ranking and the composite loss
outperforms models using either mechanism alone.
The contributions of this work are two-fold.
First, we experiment with various hand-crafted fea-
tures and conversational encoding schemes to build
a conversational evaluation system that can provide
explicit turn-level feedback to a response gener-
ation system on the highly subjective task. This
system can be used independently to compare vari-
ous response generation systems or as a signal to
improve response generation. Second, we experi-
ment with two complementary ways to incorporate
explicit feedback to the response generation sys-
tems and show improvement in dialog quality using
automatic metrics as well as human evaluation.
2
Related Works
There are two major themes in this work. The
ﬁrst is building evaluators that allow us to estimate
human perceptions of coherence, topicality, and
interestingness of responses in a conversational
context. The second is the use of evaluators to
guide the generation process. As a result, this work
is related to two distinct bodies of work.
Automatic
Evaluation
of
Conversations:
Learning automatic evaluation of conversation
quality has a long history (Walker et al., 1997).
However, we still do not have widely accepted
solutions. Due to the similarity between conver-
sational response generation and MT, automatic
MT metrics such as BLEU (Papineni et al., 2002)
and METEOR (Banerjee and Lavie, 2005) are
widely adopted for evaluating dialog generation.
ROUGE (Lin and Hovy, 2003), which is also
used for chatbot evaluation, is a popular metric
for text summarization. These metrics primarily
rely on token-level overlap over a corpus (also
synonymy in the case of METEOR), and therefore
are not well-suited for dialog generation since a
valid conversational response may not have any
token-level or even semantic-level overlap with the
ground truths. While the shortcomings of these
metrics are well known for MT (Graham, 2015; Es-
pinosa et al., 2010), the problem is aggravated for
dialog generation evaluation because of the much
larger output space (Liu et al., 2016; Novikova
et al., 2017). However, due to the lack of clear
alternatives, these metrics are still widely used
for evaluating response generation (Ritter et al.,
2011; Lowe et al., 2017). To ensure comparability
with other approaches, we report results on these
metrics for our models.
To tackle the shortcomings of automatic metrics,
there have been efforts to build models to score
conversations. Lowe et al. (2017) train a model
to predict the score of a system response given
a dialog context. However, they work with tiny
data sets (around 4000 sentences) in a non-spoken
setting. Tao et al. (2017) address the expensive
annotation process by adding in unsupervised data.
However, their metric is not interpretable, and the
results are also not shown on a spoken setting. Our
work differs from the aforementioned works as the
output of our system is interpretable at each dialog
turn.
There has also been work on building evaluation
systems that focus on speciﬁc aspects of dialog. Li
et al. (2016c) use features for information ﬂow, Yu
et al. (2016) use features for turn-level appropriate-
ness. However, these metrics are based on a narrow
aspect of the conversation and fail to capture broad
ranges of phenomena that lead to a good dialog.
Improving
System
Response
Generation:
Seq2Seq models have allowed researchers to train
dialog models without relying on handcrafted dia-
log acts and slot values. Using maximum mutual

information (MMI) (Li et al., 2015) was one of the
earlier attempts to make conversational responses
more diverse (Serban et al., 2016b,a). Shao et al.
(2017) use a segment ranking beam search to pro-
duce more diverse responses. Our method extends
the strategy employed by Shao et al. (2017) utiliz-
ing a trained model as the reranking function and is
similar to Holtzman et al. (2018) but with different
kind of trained model.
More recently, there have been works which
aim to alleviate this problem by incorporating
conversation-speciﬁc rewards in the learning pro-
cess. Yao et al. (2016) use the IDF value of gen-
erated sentences as a reward signal. Xing et al.
(2017) use topics as an additional input while de-
coding to produce more speciﬁc responses. Li et al.
(2016b) add personal information to make system
responses more user speciﬁc.Li et al. (2017) use
distillation to train different models at different lev-
els of speciﬁcity and use reinforcement learning to
pick the appropriate system response. Zhou et al.
(2017) and Zhang et al. (2018) introduce latent fac-
tors in the seq2seq models that control speciﬁcity
in neural response generation. There has been re-
cent work which combines responses from multi-
ple sub-systems (Serban et al., 2017; Papaioannou
et al., 2017) and ranks them to output the ﬁnal sys-
tem response. Our method complements these ap-
proaches by introducing a novel learned-estimator
model as the additional reward signal.
3
Data
The data used in this study was collected during
the Alexa Prize (Ram et al., 2017) competition and
shared with the teams who were participating in
the competition. Upon initiating the conversation,
users were paired with a randomly selected chatbot
built by the participants. At the end of the conver-
sation, the users were prompted to rate the chatbot
quality, from 1–5, with 5 being the highest.
We randomly sampled more than 15K conversa-
tions (approximately 160K turns) collected during
the competition. These were annotated for coher-
ence and engagement (See Section 3.1) and used to
train the conversation evaluators. For training the
response generators, we selected highly-rated user
conversations, which resulted in around 370K con-
versations containing 4M user utterances and their
corresponding system response. One notable statis-
tic is that user utterances are typically very short
(mean: 3.6 tokens) while the system responses gen-
erally are much longer (mean: 23.2 tokens).
3.1
Annotations
Asking annotators to measure coherence and en-
gagement directly is a time-consuming task. We
observed that we could collect data much faster
if we asked direct “yes” or “no” questions to our
annotators. Hence, upon reviewing a user-chatbot
interaction along with the entire conversation to
the current turn, annotators1 rated each chatbot re-
sponse as “yes” or “no” on the following criteria:
• The system response is comprehensible:
The information provided by the chatbot made
sense with respect to the user utterance and is
syntactially correct.
• The system response is on topic: The chat-
bot response was on the same topic as the user
utterance or was relevant to the user utterance.
For example, if a user asks about a baseball
player on the LA Dodgers, then the chatbot
mentions something about the baseball team.
• The system response is interesting: The
chatbot response contains information which
is novel and relevant. For example, the chat-
bot would provide an answer about a baseball
player and give some additional information
to create a ﬂeshed-out response.
• I want to continue the conversation: Given
the current state of the conversation and the
system response, there is a natural way to
continue the conversation. For example, this
could be due to the system asking a question
about the current conversation subject.
We use these questions as proxies for measur-
ing coherence and engagement of responses. The
answers to the ﬁrst two questions (“comprehensi-
ble” and “on topic”) are used as a proxy for coher-
ence. Similarly, the answer to the last two questions
(“interesting” and “continue the conversation”) are
used as a proxy for engagement.
4
Conversation Evaluators
We train conversational response evaluators to as-
sess the state of a given conversation. Our models
are trained on a combination of utterance and re-
sponse pairs combined with context (past turn user
utterances and system responses) along with other
1The data was collected through mechanical turk. Annota-
tors were presented with the full context of the dialog up to
the current turn.

Model
TREC
SUBJ
STS
Average Emb.
0.80
0.90
0.45
Transformer
0.83
0.91
0.48
BiLSTM
0.84
0.90
0.45
Table 1: Sentence embedding performance.
features, e.g., dialog acts and topics as described in
Section 4.3. We experiment with different ways to
encode the responses (Section 4.1) as well as with
different feature combinations (Figure 1).
4.1
Sentence Embeddings
We pretrained models that produce sentence em-
beddings using the ParlAI chitchat data set (Miller
et al., 2017). We use the Quick-Thought (QT)
loss (Logeswaran and Lee, 2018) to train the em-
beddings. Our word embeddings are initialized
with FastText (Bojanowski et al., 2016) to capture
the sub-word features and then ﬁne-tuned. We
encode sentences into embeddings using the fol-
lowing methods:
a) Average of word embeddings (300 dim)
b) The Transformer Network (1 layer, 600
dim) (Vaswani et al., 2017)
c) Concatenated last states of a BiLSTM (1 layer,
600 dim)
The selected dimensions and network structures
followed the original paper (Vaswani et al., 2017).
All models were trained with a batch size of 400
using Adam optimizer with learning rate of 5e-4.
To measure the sentence embedding quality, we
evaluate our models on a few standard classiﬁca-
tion tasks. The models are used to get sentence
representation, which are passed through feedfor-
ward networks that are trained for the following
classiﬁcation tasks: (i) Semantic Textual Similar-
ity (STS) (Marelli et al., 2014), (ii) Question Type
Classiﬁcation (TREC) (Voorhees and Dang, 2003),
(iii) Subjectivity Classiﬁcation (SUBJ) (Pang and
Lee, 2004). Table 1 shows the different models’
performances on these tasks. Based on this, we
choose the Transformer as our sentence encoder as
it was overall the best performing while being fast.
4.2
Context
Given the contextual nature of the problem we ex-
tracted the sentence embeddings of user utterances
and responses for the past 5 turns and used a 1 layer
LSTM with 256 hidden units to encode conversa-
tional context. The last state of LSTM is used to
obtain the encoded representation, which is then
concatenated with other features (Section 4.3) in a
fully-connected neural network.
4.3
Features
Apart from sentence embeddings and context, the
following features are also used:
• Dialog Act: Serban et al. (2017) show that
dialog act (DA) features could be useful for
response selection rankers. Following this,
we use model (Khatri et al., 2018)-predicted
DAs (Stolcke et al., 1998) of user utterances
and system responses as an indicator feature.
• Entity Grid: Cervone et al. (2018); Barzilay
and Lapata (2008) show that entities and DA
transitions across turns can be strong features
for assessing dialog coherence. Starting from
a grid representation of the turns of the con-
versation as a matrix (DAs × entities), these
features are designed to capture the patterns of
topic and intent shift distribution of a dialog.
We employ the same strategy for our models.
• Named Entity (NE) Overlap:
We use
named entity overlap between user utterances
and their corresponding system responses as a
feature. Our named entities are obtained using
SpaCy2. Papaioannou et al. (2017) have also
used similar NE features in their ranker.
• Topic: We use a one-hot representation of a
dialog turn topic predicted by a conversational
topic model (Guo et al., 2017) that classiﬁes
a given dialog turn into one of 26 pre-deﬁned
classes like Sports and Movies.
• Response Similarity: Cosine similarity be-
tween user utterance embedding and system
response embedding is used as a feature.
• Length: We use the token-level length of the
user utterance and the response as a feature.
The above features were selected from a large pool
of features through signiﬁcance testing on our de-
velopment set. The effect of adding these features
can be seen in Table 2. Some of the features such
as Topic lack previous dialog context, which could
be updated to include the context. We leave this
extension for future work.
2https://spacy.io/

Evaluator
‘Yes’ Class Distr.
Accuracy
Precision
Recall
F-score
MCC
Comprehensible
0.80
0.84 (+3%)
0.83 (+1%)
0.85 (+15%)
0.84 (+8%)
0.37 (+107%)
On-topic
0.45
0.64 (+9%)
0.65 (+10%)
0.64 (+18%)
0.64 (+13%)
0.29 (+81%)
Interesting
0.16
0.83 (-1%)
0.77 (+10%)
0.80 (-5%)
0.78 (+2%)
0.12 (+inf%)
Cont. Conversation
0.71
0.75 (+4%)
0.73 (+5%)
0.72 (+31%)
0.72 (+17%)
0.32(+179%)
Table 2: Conversation Evaluators Performance. Numbers in parentheses denote relative changes when using our
best model (all features) with respect to the baseline (no handcrafted features, only sentence embeddings). Second
column shows the class imbalance in our annotations. Note that the baseline model had 0 MCC for Interesting
Figure 1: Conversation Evaluators
4.4
Models
Given the large number of features and their non-
sequential nature, we train four binary classiﬁers
using feedforward neural networks (FFNN). The
input to these models is a dialog turn. Each out-
put layer is a softmax function corresponding to
a binary decision for each evaluation metric form-
ing a four-dimensional vector. Each vector dimen-
sion corresponds to an evaluation metric (See Sec-
tion 3.1). For example, one possible reference out-
put would be [0,1,1,0], which corresponds to “not
comprehensible,” “on topic,” “interesting,” and “I
don’t want to continue.”
We experimented with training the evaluators
jointly and separately and found that training them
jointly led to better performance. We suspect this is
due to the objectives of all evaluators being closely
related. We concatenate the aforementioned fea-
tures as an input to a 3-layer FFNN with 256 hid-
den units. Figure 1 depicts the architecture of the
conversation evaluators.
5
Response Generation System
To incorporate the explicit turn level feedback pro-
vided by the conversation evaluators, we augment
our baseline response generation system with the
softmax scores provided by the conversation eval-
uators. Our baseline response generation system
is described in Section 5.1. We then incorporate
evaluators outputs using two techniques: reranking
and ﬁne-tuning.
5.1
Base Model (S2S)
We extended the approach of Yao et al. (2016)
where the authors used Luong’s dot attention (Lu-
ong et al., 2015). In our experiments, the decoder
uses the same attention (Figure 2a). As we want
to observe the full impact of conversational eval-
uators, we do not incorporate inverse document
frequency (IDF) or conversation topics into our ob-
jective. Extending the objective to include these
terms can be a good direction for future work.
To make the response generation system more
robust, we added user utterances and system re-
sponses from the previous turn as context. The
input to the response generation model is previous-
turn user utterance, previous-turn system response,
and current-turn user utterance concatenated se-
quentially. We insert a special transition token (Ser-
ban et al., 2016c) between turns. We then use a
single RNN to encode these sentences. Our word
embeddings are randomly initialized and then ﬁne-
tuned during training. We used a 1-layer Gated
Recurrent Neural network with 512 hidden units
for both encoder and decoder to train the seq2seq
model and MLE as our training objective.
5.2
Reranking (S2S RR)
In this approach, we do not update the underlying
encoder-decoder model. We maintain a beam to
get 15-best candidates from the decoder. The top
candidate out of the 15 candidates is equivalent to
the output of the baseline model. Here, instead of
selecting the top output, the ﬁnal output response
is chosen using a reranking model.
For our reranking model, we calculate BLEU
scores for each of the 15 candidate responses
against the ground truth response from the chat-
bot. We then sample two responses from the k-best
list and train a pairwise response reranker. The
response with the higher BLEU is placed in the
positive class (+1) and the one with lower BLEU is
placed in the negative class (-1). We do this for all
possible candidate combinations from the 15-best

(a) Baseline Response Generator (Seq2Seq with Attention)
(b) Reranking Using Evaluators. Top 15 candidates from beam
search are passed to the evaluators. The candidate that max-
imizes the reranker score is chosen as the output. Encoder-
decoder remain unchanged.
(c) Fine-tuning Using Evaluators. We minimize cross entropy
loss and maximize discriminator loss. The output of softmax,
i.e., likelihood over vocabulary for the length of output is passed
to the evaluator along with the input (x and context). Evalua-
tor generates the discriminative score over |V |×len generator
output, which is subtracted from the loss. The updated loss is
back-propagated to update encoder-decoder.
Figure 2: Response Model Conﬁgurations. The base-
line is shown at the top. The terms xn and yn corre-
spond to nth utterance and response respectively.
responses. We use the max-margin ranking loss
to train the model. The model is a three-layered
FFNN with 16 hidden units.
The input to the pairwise reranker is the soft-
max output of the 4 evaluators as shown in Fig-
ure 1. The input to the evaluators are described in
Section 4. The output of the reranker is a scalar,
which, if trained right, would give a higher value
for responses with higher BLEU scores. Figure 2b
depicts the architecture of this model.
5.3
Fine-tuning (S2S FT)
In this approach, we use evaluators as a discrimina-
tory loss to ﬁne-tune the baseline encoder-decoder
response generation system. We ﬁrst train the base-
line model and then, it is ﬁne-tuned using the eval-
uator outputs in the hope of generating more coher-
ent and engaging responses. One issue with MLE
is that the learned models are not optimized for the
ﬁnal metric (e.g., BLEU). To combat this problem,
we add a discriminatory loss in addition to the gen-
erative loss to the overall loss term as shown in
Equation 1.
(1)
loss =
len
X
i=1
p(yni|zn)log(q(ˆyni|zn))
−λ||Eval(xn, q(.|zn)||1
where zn = xn, yn−1, . . . , x0, y0 is the conver-
sational context where n is the context length.
q ∈R|V |×len of the ﬁrst term corresponds to the
softmax output generated by the response genera-
tion model. The term ˆyni refers to its corresponding
decoder response at nth conversation turn and ith
word generated. In the second term, the function
Eval refers to the evaluator score produced for a
user utterance, xn, and decoder softmax output, q.
In Equation 1, the ﬁrst term corresponds to the
cross-entropy loss from the encoder-decoder while
the second term corresponds to the discriminative
loss from the evaluator. In a standalone evaluation
setting, the evaluator will take one hot representa-
tion of the user utterance as input, i.e., the input
is len-tokens long which is passed through an em-
bedding lookup layer which makes it RD×len input
to rest of the network where D is the size of the
word embeddings. To make the loss differentiable,
instead of performing argmax to get a decoded
token, we use the output of the softmax layer (dis-
tribution of likelihood across entire vocabulary for
output length, i.e., R|V |×len) and use this to do a
weighted embedding lookup across the entire vo-
cabulary to get the same RD×len matrix as an input
to rest of the evaluator network. Our updated eval-
uator input becomes the following:
(2)
RD×len = RD×|V | × R|V |×len

The evaluator score is deﬁned as the sum of softmax
outputs of all 4 models.We keep the rest of the
input (context and features) for the evaluator as is.
We weight the discriminator score by λ, which
is a hyperparameter. We selected λ to be 10 using
grid search to optimize for ﬁnal BLEU on our de-
velopment set. Figure 2c depicts the architecture
of this approach. The decoder is ﬁne-tuned to max-
imize evaluator scores along while minimizing the
cross-entropy loss. The evaluator model is trained
on the original annotated corpus and parameters
are frozen.
5.4
Reranking + Fine-tuning (S2S RR FT)
We also combined ﬁne-tuning with reranking,
where we obtained the 15 candidates from the ﬁne-
tuned response generator and then we select the
best response using the reranker, which is trained
to maximize the BLEU score.
6
Experiments and Results
6.1
Conversation Evaluators
The conversation evaluators were trained using
cross-entropy loss. We used a batch size of 128,
dropout of 0.3 and Adam optimizer with a learning
rate of 5e-5 for our conversational evaluators. Sen-
tence embeddings for user utterances and system
responses are obtained using the fast-text embed-
dings and Transformer network.
Table 2 shows the evaluator performance com-
pared with a baseline with no handcrafted features.
We present precision, recall, and f-score measures
along with the accuracy. Furthermore, since the
class distribution of the dataset is highly imbal-
anced, we also calculate Matthews correlation co-
efﬁcient (MCC)(Matthews, 1975), which takes into
account true and false positives and negatives. It
is a balanced measure which can be used even if
the classes sizes are very different. With the pro-
posed features we observe signiﬁcant improvement
across all metrics.
We also performed a correlation study between
the model predicted scores and human annotated
scores (1 to 5) on 2000 utterances. The annotators3
were asked to answer a single question: “On a scale
of 1–5, how coherent and engaging is this response
given the previous conversation?” From Table 3, it
can be observed that evaluator predicted scores has
signiﬁcant correlation (moderate to high) with the
overall human evaluation score on this subjective
3Same setup as previously described
Metric
Pearson Corr
p-value
Comprehensible
0.2
<< 0.001
On-topic
0.4
<< 0.001
Interesting
0.25
<< 0.001
Cont. Conversation
0.3
<< 0.001
Table 3: Evaluators Correlation with Turn-level Rat-
ings
task (0.2 – 0.4 Pearson correlation with turn-level
ratings). Considering the substantial individual dif-
ferences in evaluating open-domain conversations,
we observe that our evaluators with moderate level
of correlation can be used to provide turn-level
feedback for a human-chatbot conversation.
6.2
Response Generation
We ﬁrst trained the baseline model (S2S) on the
conversational data set (4M utterance-response
pairs from the competition. Section 3). The data
were split into 80% training, 10% development,
and 10% test sets. The baseline model was trained
using Adam with learning rate of 1e-4 and batch
size of 256 until the development loss converges.
The vocabulary of 30K most frequent words were
used. And the reranker was trained using the 20K
number of beam outputs from the baseline model
on the development set. Adam with learning rate
of 1e-4 and batch size of 16 was used for the ﬁne-
tuning (S2S FT).
Table 5 shows the performance comparison of
different generation models (Section 5) on the
Alexa Prize conversational data set. We observed
that reranking n-best responses using the evaluator-
based reranker (S2S RR) provides nearly 100%
improvement in BLEU-4 scores.
Fine-tuning the generator by adding evalua-
tor loss (S2S FT) does improve the performance
but the gains are smaller compared to reranking.
We suspect that this is due to the reranker di-
rectly optimizing for BLEU. However, using a
ﬁne-tuned model and then reranking (S2S RR FT)
complements each other and gives the best per-
formance overall. Furthermore, we observe that
even though the reranker is trained to maximize the
BLEU scores, reranking shows signiﬁcant gains
in ROUGE scores as well. We also measured dif-
ferent systems performance using Distinct-2 (Li
et al., 2016a), which is the number of unique length-
normalized bigrams in responses. The metric can
be a surrogate for measuring diverse outputs. We
see that our generators using reranking approaches

Conversation 1
Conversation 2
User: yes
Chatbot: is there something speciﬁc you want to discuss
User: fox news
Ground Truth: my developers are working hard
to get you recent news you can say topics to hear some topics
S2S(Base): I found
S2S RR: I heard about this
S2S FT : I heard of a man it may be
interested in this news mentioned
S2S RR FT: I heard about this news talked about this
User: cool
Chatbot: back at you ok we could talk about movies or music
User: movies
Ground Truth: shall we chat about something else
I love talking about music and movies
S2S(Base): so do you
S2S RR: who would you want to talk
S2S FT : what actor love most
S2S RR FT: what actor
Table 4: Two randomly selected qualitative examples of responses
Metric
BLEU-4
ROUGE-2
Distinct-2
S2S (Base)
5.9
5.1
0.011
S2S RR
11.6(+97%)
6.3(+24%)
0.017(+54%)
S2S FT
6.2(+5%)
5.3(+4%)
0.011(-1%)
S2S RR FT
12.2(+107%)
6.8(+33%)
0.017(+53%)
Table 5: Generator performance on automatic metrics.
improve on this metric as well. Table 4 also shows
2 sampled responses from different models.
To further analyze the impact of reranker trained
to optimize on BLEU score, we trained a base-
line response generation system on a Reddit data
set4, which comprises of 9 million comments and
corresponding response comments. All the hyper-
parameter setting followed the setting of training
on the Alexa Prize conversational dataset.
We trained a new reranker for the Reddit data
using the evaluator scores obtained from the mod-
els proposed in Section 4. We show in Table 6
that even though the evaluators are trained on a dif-
ferent data set, the reranker learns to select better
responses nearly doubling the BLEU scores as well
as improving on the Distinct-2 score. Thus, the
evaluator generalizes in selecting more coherent
and engaging responses in human-human interac-
tions as well as human-computer interactions. As
ﬁne-tuning the evaluator is computationally expen-
sive, we did not ﬁne-tune it on the Reddit dataset.
The closest baseline that used BLEU scores for
evaluation in open-domain setting is from Li et al.
(2015) where they trained the models on Twitter
data using Maximum Mutual Information (MMI)
as the objective function. They obtained a BLEU
score of 5.2 in their best setting on Twitter data
(average length 23 chars), which is relatively less
complex than Reddit (average length 75 chars).
4We use a publicly available data (Baumgartner, 2015).
Metric
S2S(Base)
S2S RR
BLEU-4
3.9
7.9 (+103%)
ROUGE-2
0.6
0.8 (+33%)
Distinct-2
0.0047
0.0086 (+82%)
Table 6: Response Generator on Reddit Conversations.
Due to the size of the dataset we could not ﬁne tune
these models.
Metric
Coherence
Engagement
S2S(Base)
2.34
1.80
S2S RR
2.42
2.16
S2S FT
2.36
1.87
S2S RR FT
2.55
2.31
Table 7: Mean ratings for Qualitative and Human Eval-
uation of Response Generators
6.3
Human Evaluation
As noted earlier, automatic evaluation metrics may
not be the best way to measure chatbot response
generation performance. Therefore, we performed
human evaluation of our models. We asked anno-
tators to provide ratings on the system responses
from the models we evaluated, i.e., baseline model,
S2S RR, S2S FT, and S2S RR FT. A rating was
obtained on two metrics: coherence and engage-
ment. Coherence measures how much the response
is comprehensible and relevant to a user’s request
and engagement shows interestingness of the re-
sponse (Venkatesh et al. (2018)). We asked the
annotators to provide the rating based on a scale
of 1–5, with 5 being the best. We had four an-
notators rate 250 interactions. Table 7 shows the
performance of the models on the proposed met-
rics. Our inter-annotator agreement is 0.42 on Co-
hen’s Kappa Coefﬁcient, which implies moderate
agreement. We believe this is because the task is
relatively subjective and the conversations were
performed in the challenging open-domain setting.
The S2S RR FT model provides the best perfor-

mance across all the metrics, followed by S2S RR,
followed by S2S FT.
7
Conclusion
Human annotations for conversations show signiﬁ-
cant variance, but it is still possible to train models
which can extract meaningful signal from the hu-
man assessment of the conversations. We show that
these models can provide useful turn-level guid-
ance to response generation models. We design a
system using various features and context encoders
to provide turn-level feedback in a conversational
dialog. Our feedback is interpretable on 2 major
axes of conversational quality: engagement and co-
herence. We also plan to provide similar evaluators
to the university teams participating in the Alexa
Prize competition. To show that such feedback is
useful in building better conversational response
systems, we propose 2 ways to incorporate this
feedback, both of which help improve on the base-
lines. Combining both techniques results in the
best performance. We view this work as comple-
mentary to other recent work in improving dialog
systems such as Li et al. (2015) and Shao et al.
(2017). While such open-domain systems are still
in their infancy, we view the framework presented
in this paper to be an important step towards build-
ing end-to-end coherent and engaging chatbots.
References
Satanjeev Banerjee and Alon Lavie. 2005. Meteor: An
automatic metric for mt evaluation with improved
correlation with human judgments. In Proceedings
of the acl workshop on intrinsic and extrinsic evalu-
ation measures for machine translation and/or sum-
marization, volume 29, pages 65–72.
Regina Barzilay and Mirella Lapata. 2008. Modeling
local coherence: An entity-based approach. Compu-
tational Linguistics, 34(1):1–34.
Baumgartner. 2015.
Reddit.
https://archive.
org/details/2015_reddit_comments_
corpus. [Accessed: 2018-07-01].
Piotr Bojanowski, Edouard Grave, Armand Joulin, and
Tomas Mikolov. 2016. Enriching word vectors with
subword information. arXiv:1607.04606.
Alessandra Cervone, Evgeny Stepanov, and Giuseppe
Riccardi. 2018.
Coherence models for dialogue.
Proc. Interspeech 2018, pages 1011–1015.
Cristian Danescu-Niculescu-Mizil and Lillian Lee.
2011.
Chameleons in imagined conversations: A
new approach to understanding coordination of lin-
guistic style in dialogs. In Proceedings of the Work-
shop on Cognitive Modeling and Computational Lin-
guistics, ACL 2011.
Dominic Espinosa, Rajakrishnan Rajkumar, Michael
White, and Shoshana Berleant. 2010. Further meta-
evaluation of broad-coverage surface realization. In
EMNLP, pages 564–574.
Yvette Graham. 2015. Accurate evaluation of segment-
level machine translation metrics.
Fenfei Guo, Angeliki Metallinou, Chandra Khatri,
Anirudh Raju, Anu Venkatesh, and Ashwin Ram.
2017.
Topic-based evaluation for conversational
bots. arXiv:1801.03622.
Ari Holtzman, Jan Buys, Maxwell Forbes, Antoine
Bosselut, David Golub, and Yejin Choi. 2018.
Learning to write with cooperative discriminators.
arXiv preprint arXiv:1805.06087.
Chandra Khatri, Rahul Goel, Behnam Hedayatnia,
Angeliki Metanillou, Anushree Venkatesh, Rae-
fer Gabriel, and Arindam Mandal. 2018.
Con-
textual topic modeling for dialog systems.
In
2018 IEEE Spoken Language Technology Workshop
(SLT), pages 892–899. IEEE.
Jiwei Li, Michel Galley, Chris Brockett, Jianfeng
Gao, and Bill Dolan. 2015. A diversity-promoting
objective function for neural conversation models.
arXiv:1510.03055.
Jiwei Li, Michel Galley, Chris Brockett, Jianfeng Gao,
and Bill Dolan. 2016a. A diversity-promoting ob-
jective function for neural conversation models. In
Proceedings of NAACL-HLT, pages 110–119.
Jiwei Li, Michel Galley, Chris Brockett, Jianfeng Gao,
and Bill Dolan. 2016b. A persona-based neural con-
versation model. arXiv:1603.06155.
Jiwei Li, Will Monroe, and Dan Jurafsky. 2017. Data
distillation for controlling speciﬁcity in dialogue
generation. arXiv:1702.06703.
Jiwei Li, Will Monroe, Alan Ritter, Dan Jurafsky,
Michel Galley, and Jianfeng Gao. 2016c. Deep re-
inforcement learning for dialogue generation.
In
EMNLP, pages 1192–1202.
Chin-Yew Lin and Eduard Hovy. 2003.
Auto-
matic evaluation of summaries using n-gram co-
occurrence statistics. In NAACL-HLT, pages 71–78.
Chia-Wei Liu, Ryan Lowe, Iulian V Serban, Michael
Noseworthy, Laurent Charlin, and Joelle Pineau.
2016.
How not to evaluate your dialogue sys-
tem:
An empirical study of unsupervised eval-
uation metrics for dialogue response generation.
arXiv:1603.08023.
Lajanugen Logeswaran and Honglak Lee. 2018. An
efﬁcient framework for learning sentence represen-
tations. arXiv:1803.02893.

Ryan Lowe, Michael Noseworthy, Iulian V Serban,
Nicolas Angelard-Gontier, Yoshua Bengio, and
Joelle Pineau. 2017.
Towards an automatic tur-
ing test: Learning to evaluate dialogue responses.
arXiv:1708.07149.
Ryan Lowe, Nissan Pow, Iulian Serban, and Joelle
Pineau. 2015. The ubuntu dialogue corpus: A large
dataset for research in unstructured multi-turn dia-
logue systems. arXiv:1506.08909.
Minh-Thang
Luong,
Hieu
Pham,
and
Christo-
pher D Manning. 2015.
Effective approaches
to
attention-based
neural
machine
translation.
arXiv:1508.04025.
Marco Marelli, Stefano Menini, Marco Baroni, Luisa
Bentivogli, Raffaella Bernardi, Roberto Zamparelli,
et al. 2014. A sick cure for the evaluation of com-
positional distributional semantic models. In LREC,
pages 216–223.
Brian W Matthews. 1975.
Comparison of the pre-
dicted and observed secondary structure of t4 phage
lysozyme.
Biochimica et Biophysica Acta (BBA)-
Protein Structure, 405(2):442–451.
Alexander H Miller, Will Feng, Adam Fisch, Jiasen Lu,
Dhruv Batra, Antoine Bordes, Devi Parikh, and Ja-
son Weston. 2017. Parlai: A dialog research soft-
ware platform. arXiv:1705.06476.
Jekaterina Novikova, Ondˇrej Duˇsek, Amanda Cercas
Curry, and Verena Rieser. 2017.
Why we need
new evaluation metrics for nlg.
arXiv preprint
arXiv:1707.06875.
Bo Pang and Lillian Lee. 2004. A sentimental educa-
tion: Sentiment analysis using subjectivity summa-
rization based on minimum cuts. In ACL, page 271.
Ioannis Papaioannou, Amanda Cercas Curry, Jose L
Part, Igor Shalyminov, Xinnuo Xu, Yanchao Yu, On-
drej Duˇsek, Verena Rieser, and Oliver Lemon. 2017.
Alana: Social dialogue using an ensemble model
and a ranker trained on user feedback. Alexa Prize
Proceedings.
Kishore Papineni, Salim Roukos, Todd Ward, and Wei-
Jing Zhu. 2002. Bleu: a method for automatic eval-
uation of machine translation. In ACL, pages 311–
318.
Ashwin Ram, Rohit Prasad, Chandra Khatri, Anu
Venkatesh, Raefer Gabriel, Qing Liu, Jeff Nunn,
Behnam Hedayatnia, Ming Cheng, Ashish Nagar,
Eric King, Kate Bland, Amanda Wartick, Yi Pan,
Han Song, Sk Jayadevan, Gene Hwang, and Art Pet-
tigrue. 2017. Conversational ai: The science behind
the alexa prize. In 1st proceedings of Alexa Prize.
Alan Ritter, Colin Cherry, and William B Dolan. 2011.
Data-driven response generation in social media. In
Proceedings of the conference on empirical meth-
ods in natural language processing, pages 583–593.
ACL.
Iulian Serban, Alessandro Sordoni, Ryan Lowe, Lau-
rent Charlin, Joelle Pineau, Aaron Courville, and
Yoshua Bengio. 2016a. A hierarchical latent vari-
able encoder-decoder model for generating dia-
logues. arXiv:1605.06069.
Iulian V Serban, Chinnadhurai Sankar, Mathieu Ger-
main, Saizheng Zhang, Zhouhan Lin, Sandeep Sub-
ramanian, Taesup Kim, Michael Pieper, Sarath
Chandar, Nan Rosemary Ke, et al. 2017. A deep
reinforcement learning chatbot. arXiv:1709.02349.
Iulian V Serban, Alessandro Sordoni, Yoshua Bengio,
Aaron Courville, and Joelle Pineau. 2016b. Build-
ing end-to-end dialogue systems using generative hi-
erarchical neural network models. In AAAI.
Iulian V Serban, Alessandro Sordoni, Yoshua Bengio,
Aaron Courville, and Joelle Pineau. 2016c. Building
end-to-end dialogue systems using generative hierar-
chical neural network models. arXiv:1507.04808.
Louis Shao, Stephan Gouws, Denny Britz, Anna
Goldie, Brian Strope, and Ray Kurzweil. 2017.
Generating high-quality and informative conversa-
tion responses with sequence-to-sequence models.
arXiv:1701.03185.
Alessandro Sordoni, Michel Galley, Michael Auli,
Chris Brockett, Yangfeng Ji, Margaret Mitchell,
Jian-Yun Nie,
Jianfeng Gao,
and Bill Dolan.
2015.
A neural network approach to context-
sensitive generation of conversational responses.
arXiv:1506.06714.
Andreas Stolcke, Elizabeth Shriberg, Rebecca Bates,
Noah Coccaro, Daniel Jurafsky, Rachel Martin,
Marie Meteer, Klaus Ries, Paul Taylor, Carol Van
Ess-Dykema, et al. 1998. Dialog act modelling for
conversational speech.
Ilya Sutskever, Oriol Vinyals, and Quoc V Le. 2014.
Sequence to sequence learning with neural networks.
In NIPS, pages 3104–3112.
Chongyang Tao, Lili Mou, Dongyan Zhao, and Rui
Yan. 2017. Ruber: An unsupervised method for au-
tomatic evaluation of open-domain dialog systems.
arXiv:1701.03079.
Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob
Uszkoreit, Llion Jones, Aidan N Gomez, Łukasz
Kaiser, and Illia Polosukhin. 2017. Attention is all
you need. In NIPS, pages 6000–6010.
Anu Venkatesh, Chandra Khatri, Ashwin Ram, Fenfei
Guo, Raefer Gabriel, Ashish Nagar, Rohit Prasad,
Ming Cheng, Behnam Hedayatnia, Angeliki Met-
allinou, et al. 2018.
On evaluating and compar-
ing open domain dialog systems.
arXiv preprint
arXiv:1801.03625.
Ellen M Voorhees and Hoa Trang Dang. 2003.
Overview of the trec 2003 question answering track.
In TREC, volume 2003, pages 54–68.

Marilyn A Walker, Diane J Litman, Candace A Kamm,
and Alicia Abella. 1997. Paradise: A framework for
evaluating spoken dialogue agents. In EACL, pages
271–280.
TH Wen, M Gaˇsi´c, N Mrkˇsi´c, PH Su, D Vandyke,
and S Young. 2015. Semantically conditioned lstm-
based natural language generation for spoken dia-
logue systems. In EMNLP, pages 1711–1721.
Chen Xing, Wei Wu, Yu Wu, Jie Liu, Yalou Huang,
Ming Zhou, and Wei-Ying Ma. 2017. Topic aware
neural response generation.
In AAAI, volume 17,
pages 3351–3357.
Kaisheng Yao, Baolin Peng, Geoffrey Zweig, and
Kam-Fai
Wong.
2016.
An
attentional
neu-
ral conversation model with improved speciﬁcity.
arXiv:1606.01292.
Zhou Yu, Ziyu Xu, Alan W Black, and Alexander Rud-
nicky. 2016. Strategy and policy learning for non-
task-oriented conversational systems. In SIGDIAL,
pages 404–412.
Ruqing Zhang, Jiafeng Guo, Yixing Fan, Yanyan Lan,
Jun Xu, and Xueqi Cheng. 2018. Learning to con-
trol the speciﬁcity in neural response generation. In
ACL, volume 1, pages 1108–1117.
Ganbin Zhou, Ping Luo, Rongyu Cao, Fen Lin,
Bo Chen, and Qing He. 2017.
Mechanism-aware
neural machine for dialogue response generation. In
AAAI, pages 3400–3407.

