Compsci 201
Objects, Tradeoffs, NBody
1/24/2020
Compsci 201, Spring 2020
1
Susan Rodger
January 24, 2020

E is for …
• Encryption
• Why SSH and SSL work
• Exception
• A Throwable you may catch, sometimes you 
may rethrow
1/24/2020
Compsci 201, Spring 2020
2

Announcements
• Assignment P0 - grace period to today 11:59pm
• With late penalty last change one week later
• APT-1 due – now in grace  period today 11:59pm
• Do not accept after grace period
• Discussion 3 on January 27
• Prediscussion, do before
• APT-2 due January 28 
• Assignment P1 due Thursday, Jan 30
1/24/2020
Compsci 201, Spring 2020
3

When you submit an APT
• Submit a REFLECT form for each APT
• Submit REFLECT form for each Assignment
1/24/2020
Compsci 201, Spring 2020
4

From Last Time …
Go over 
WOTO: Correctness Counts 
http://bit.ly/201spring20-0122-2
1/24/2020
Compsci 201, Spring 2020
5

PFTD
• Objects from the ground up
• What is java.lang.Object? Its methods? 
• .equals(), .toString(), later .hashCode()
• Concepts in P1: Arrays, Scanners, Testing
• Completing P1 with minimal angst
• ArrayList from high to low level (mostly Friday)
• Fits into Collections hierarchy
• How to build it or do it yourself: diyad
1/24/2020
Compsci 201, Spring 2020
6

Charles Isbell
1/24/2020
Compsci 201, Spring 2020
7
http://www.pbs.org/newshour/bb/online-graduate-programs-offer-
degrees-significant-savings/
For me, the differences are simple to state: Computationalists grok that 
models, languages and machines are equivalent.
• Context matters: Threads
• Machine learning researcher
• Systems that interact intelligently 
with many other intelligence agents
• Dean College of Computing @ gtech
• Rethinking education: Online
Masters in Computer Science

Algorithmic Tradeoffs
• We will use a problem to understand algorithmic 
trade-offs and how ArrayList works
• java.util.ArrayList is "growable array", but more!
• What is the class, what is the package
• Package is a collection of related classes
• Given a list of words, find the unique words
• Algorithms with ArrayLists
• Alternative with Set data structure
1/24/2020
Compsci 201, Spring 2020
8

Array and ArrayList
• Array can hold primitive or Object types
• int[] and String[] work
• Fixed size, cannot grow
• Use java.util class ArrayList for growth, more
https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ArrayList.html
• Contain object types, not primitives
• Use .get(),.set() and not [] for indexing
1/24/2020
Compsci 201, Spring 2020
9

Look at Code: ArrayListUnique
• Problem
• Read words from  a file
• Want the unique words in sorted order
1/24/2020
Compsci 201, Spring 2020
10

Tradeoffs: Algorithmic Approaches
• https://coursework.cs.duke.edu/201spring20/classcode/src
• Read words from a file, store in ArrayList, class is 
ArrayListUnique – why array doesn't work?
• Tradeoffs in creating sorted list of unique words
• Algorithmic concepts with ArrayList methods
• Compare three different algorithmic approaches
• Reasoning with and learning about Java code
1/24/2020
Compsci 201, Spring 2020
11

Method A: Add each word to a sorted list
1/24/2020
Compsci 201, Spring 2020
12
• Code in methodA: process each word in list, add X 
to list of sorted, unique words
• If X already in sorted-list? Nothing to do
• If X greater than all words in list? Add at end
• Some word greater than X? shift to make room

Example: insert “egg”
1/24/2020
Compsci 201, Spring 2020
13
“egg”
“egg” comes after “cat”

Example: insert “egg”
1/24/2020
Compsci 201, Spring 2020
14
“egg”
“egg” comes after “dog”

Example: insert “egg”
1/24/2020
Compsci 201, Spring 2020
15
“egg”
“egg” comes before “go”

Method A: How to shift to add "in middle"
• Find first element bigger than String X at index k
• Shift right end to index > k, then add X there
1/24/2020
Compsci 201, Spring 2020
16
https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ArrayList.html#add(int,E)

Example: insert “egg”
1/24/2020
Compsci 201, Spring 2020
17
“egg”
Put “egg” between “dog” and “go”

Example: insert “egg”
1/24/2020
Compsci 201, Spring 2020
18
“egg”
Need to make room  for “egg”

Example: insert “egg”
1/24/2020
Compsci 201, Spring 2020
19
“egg”
Need to shift “toy” over

Example: insert “egg”
1/24/2020
Compsci 201, Spring 2020
20
“egg”
Need to shift “toy” over

Example: insert “egg”
1/24/2020
Compsci 201, Spring 2020
21
“egg”
Need to shift “me” over

Example: insert “egg”
1/24/2020
Compsci 201, Spring 2020
22
“egg”
Need to shift “hi” over

Example: insert “egg”
1/24/2020
Compsci 201, Spring 2020
23
“egg”
Need to shift “go” over

Example: insert “egg”
1/24/2020
Compsci 201, Spring 2020
24
“egg”
Now there is a free slot for “egg”

Example: insert “egg”
1/24/2020
Compsci 201, Spring 2020
25
“egg”
“egg” inserted in array 
array still in sorted order

Method A: Processing every string
• Add unique elements from list to ret, keep sorted
• Code reason: flag, break, best, worst cases …
1/24/2020
Compsci 201, Spring 2020
26

Method A: Details of shifting to add X
• Don't know about list.add(k,X) then …
• Shift from end to index > X, then add X
1/24/2020
Compsci 201, Spring 2020
27

Method B: Tradeoff: Sort first, keep unique
• There are duplicates in list, but it's sorted
• Process sorted elements, add to end if unique
• Use of copy,why for-loop starts at 1 (priming)
1/24/2020
Compsci 201, Spring 2020
28

Example: Sorted with duplicates
1/24/2020
Compsci 201, Spring 2020
29
copy
k

Example: Sorted with duplicates
1/24/2020
Compsci 201, Spring 2020
30
copy
k
ret

Example: Sorted with duplicates
1/24/2020
Compsci 201, Spring 2020
31
copy
k
ret

Example: Sorted with duplicates
1/24/2020
Compsci 201, Spring 2020
32
copy
k
ret

Example: Sorted with duplicates
1/24/2020
Compsci 201, Spring 2020
33
copy
k
ret

Example: Sorted with duplicates
1/24/2020
Compsci 201, Spring 2020
34
copy
k
ret

Example: Sorted with duplicates
1/24/2020
Compsci 201, Spring 2020
35
copy
k
ret

Example: Sorted with duplicates
1/24/2020
Compsci 201, Spring 2020
36
copy
k
ret

Example: Sorted with duplicates
1/24/2020
Compsci 201, Spring 2020
37
copy
k
ret

Comparing Tradeoffs: Performance
• Both methodA and methodB process every word 
in the list of words
• In loop body in methodA, shift happens
• Could every element be shifted every time?
• Shift 1, then 2, then 3, then … then shift N
• Total work done? 1 + 2 + … + N
1/24/2020
Compsci 201, Spring 2020
38

Sort first, why is this faster?
• Both methodA and methodB process every word 
in the list of words
• In loop body in methodB, NO shift happens
• But, all strings sorted before loop
• Sorting takes N x log N for N strings
• Shifting takes 1 + 2 + .. + N = N(N+1)/2
• If N = one million? One billion operations/second
• Sorting is 20 million, shifting is 0.5 trillion
1/24/2020
Compsci 201, Spring 2020
39

Method C: What if we use API, other classes
• A set contains no duplicates, a TreeSet maintains 
unique elements in sorted order
• Create set, contains no duplicates
• Create ArrayList from set
• Where are the loops?
1/24/2020
Compsci 201, Spring 2020
40

What you will know …
• Which of methodA, methodB, methodC is better?
• It depends, but on what does it depend?
• How does methodA scale as # words increases?
• 1 + 2 + … + N = N(N+1)/2, just say no!
• What is log2(1,024)? or log2(1,048,576)? 
• Well, 210 = 1024 so …
1/24/2020
Compsci 201, Spring 2020
41

Why is methodA slow?
• Add unique elements from list to ret, keep sorted
• Code reason: flag, break, best, worst cases …
1/24/2020
Compsci 201, Spring 2020
42

Java Concepts
• Loops execute until loop-guard is false
• break exits loop early
• continue re-checks guard, skipping body
• Some loops need initialization before loop guard
• aka "priming the loop", e.g., done = false
• if (!done) same as if (done == false)
1/24/2020
Compsci 201, Spring 2020
43

Tradeoff: Sort first, keep unique
• There are duplicates in list, but it's sorted
• Process sorted elements, add to end if unique
• Use of copy,why for-loop starts at 1 (priming)
1/24/2020
Compsci 201, Spring 2020
44

WOTO
http://bit.ly/201spring20-0124-1
1/24/2020
Compsci 201, Spring 2020
45

Measurement and Analysis
• We measured runtimes empirically
• Same on laptop tomorrow? Next year?
• What about your computer, super computer?
• Mathematical analysis of runtimes
• Machine independent
• Compare algorithms without timing them!
1/24/2020
Compsci 201, Spring 2020
46

Analysis via Pictures
• Reverse alphabetical order, shift all strings
• Shift 1, then 2, then …, finally N strings
• 1+2+ … + N = N(N+1)/2
• Roughly N2
• Square with side N?
1/24/2020
Compsci 201, Spring 2020
47

Joy Buolamwini
• Founded Algorithmic Justice League
• Rhodes Scholar, Anita Borg Scholar
• TedX: Fighting Algorithmic Bias
• Facial Recognition Bias
• MIT MS with Ethan Zuckerman
1/24/2020
Compsci 201, Spring 2020
48
And so in exploring this [facial recognition], I could have 
viewed my face not being consistently detected as, “Oh, 
this is a technical challenge” — but being in the space of 
the Center for Civic Media definitely orients me to [say], 
“This is not just a technical challenge … this is as much a 
reflection of society as other spaces where you see 
inequities that need to be addressed.”
https://mitadmissions.org/blogs/entry/interview-joy-buolamwini/

From Point to Nbody …
• Making a Point class to learn about objects
• What's familiar can be helpful
• Concepts for Nbody
• Constructing objects, reading from files
1/24/2020
Compsci 201, Spring 2020
49

Java is Object-Oriented
• Every class is-a Object, Java parlance: extends
• Inherits certain properties of Object.java
• API: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Object.html
• 201: toString(), equals(.), hashCode()
• New classes can override these methods
• How do you print yourself? Compare yourself?
• How can we remember this?
1/24/2020
Compsci 201, Spring 2020
50

What can an Object do to itself?
• Little known outtake Inaugural address 1961
• https://youtu.be/IVSuapKpFZk 
1/24/2020
Compsci 201, Spring 2020
51

And so my fellow Java programmers…
Ask not what you can do for an object,
ask what an object can do to itself
1/24/2020
Compsci 201, Spring 2020
52

What’s the Problem?
• Generate points and add to list if not there
• Which method called is static method below?
1/24/2020
Compsci 201, Spring 2020
53
https://coursework.cs.duke.edu/201spring20/classcode/blob/master/src/PointDriver.java

A Few ArrayList details
• Access to class via import statement
• Definition of ArrayList variable <…>
• What happens when list.add(..) called?
1/24/2020
Compsci 201, Spring 2020
54

Why does .contains fail ?
• Points (x,y) with 0 <= x < 2 and 0 <= y < 2
• How many are there? How many generated?
1/24/2020
Compsci 201, Spring 2020
55

What’s the solution?
• How does a.contains(x) work where a is an 
ArrayList<String>, ArrayList<Point>
• Code below is not ArrayList method, …
http://hg.openjdk.java.net/jdk8/jdk8/jdk/file/tip/src/share/classes/java/util/ArrayList.java
• Works for String, does NOT work for Point!
1/24/2020
Compsci 201, Spring 2020
56

WOTO (2+ minutes, correctness)
http://bit.ly/201spring20-0124-2
1/24/2020
Compsci 201, Spring 2020
62

