S-Nav: Semantic-Geometric Planning for Mobile Robots
Preprint, compiled July 6, 2023
Paul Kremer
ID 1∗, Hriday Bavle
ID 1, Jose Luis Sanchez-Lopez
ID 1, and Holger Voos
ID 1,2
1University of Luxembourg, Interdisciplinary Center for Security Reliability and Trust (SnT), 29 Av. J.F. Kennedy, L-1855
Luxembourg, Luxembourg
2University of Luxembourg, Faculty of Science, Technology and Medicine, 2 Avenue de l’Universit´e, L-4365 Esch-sur-Alzette,
Luxembourg
Abstract
Path planning is a basic capability of autonomous mobile robots. Former approaches in path planning exploit
only the given geometric information from the environment without leveraging the inherent semantics within
the environment. The recently presented S-Graphs constructs 3D situational graphs incorporating geometric,
semantic, and relational aspects between the elements to improve the overall scene understanding and the
localization of the robot. But these works do not exploit the underlying semantic graphs for improving the
path planning for mobile robots. To that aim, in this paper, we present S-Nav a novel semantic-geometric path
planner for mobile robots. It leverages S-Graphs to enable fast and robust hierarchical high-level planning in
complex indoor environments. The hierarchical architecture of S-Nav adds a novel semantic search on top of a
traditional geometric planner as well as precise map reconstruction from S-Graphs to improve planning speed,
robustness, and path quality. We demonstrate improved results of S-Nav in a synthetic environment.
License
For the purpose of Open Access, the author has applied a CC-BY-4.0 public copyright license to any Author Accepted Manuscript
version arising from this submission.
1
Introduction
Mobile robots have gained a lot of traction in recent years and have seen widespread use in different industries such as con-
struction, mining, etc., where they are used for autonomous inspection tasks. To date, they are mostly teleoperated or operated
semi-autonomously under the supervision of a human operator. Fully autonomous operation could thus significantly reduce costs,
however, several technical challenges such as perception, navigation, mapping, and localization are currently detrimental to this
mode of operation. Mobile robots should not only create meaningful maps of the environment while localizing within it but also
be able to exploit these maps to perform fast and efficient planning.
Traditionally, mobile robots build a geometric map [4], [5] of their environment using simultaneous localization and mapping
techniques (SLAM) in combination with their onboard sensors [7] (e.g., LiDAR). Recently, we presented S-Graphs a novel graph-
based semantic SLAM that combines traditional geometric SLAM with scene graphs [1], [2]. S-Graphs extracts the topological-
relational information of the environment such as wall surfaces, rooms, and doorways including the topological connections
between those semantic entities enabling the robot to reason about its environment in a way humans would. S-Graphs showed
promising results in terms of precise robot localization and high-level hierarchical map generation over a variety of datasets.
However, this scene knowledge is not yet leveraged for performing more intelligent and faster path planning for mobile robots.
To bridge this gap, we leverage the metric, semantic, and relational information in S-Graphs for the purpose of path planning. We
propose a novel hierarchical planner called S-Nav which leverages the semantic layer to improve planning on the geometric layer.
First, we perform a semantic graph search utilizing the semantic elements within the S-Graphs to generate a sparse undirected
graph of semantic elements such as rooms and doorways. The undirected global semantic graph is then divided into local
subproblems which can be solved in parallel and pose a set of simpler problems to the underlying geometric planner. The main
contributions of this work are:
• Novel hierarchical planner called S-Nav utilizing geometric, semantic, and relational information for faster planning.
• Semantic planner for faster global plans.
∗e-mail: p.kremer@uni.lu
arXiv:2307.01613v1  [cs.RO]  4 Jul 2023

Preprint – S-Nav: Semantic-Geometric Planning for Mobile Robots
2
S-Graphs
Semantic
Planner
Sampling-base
Planner
Global
Map
Geometric Planner
Graph
Structure
Semantic Planner
Graph Data
Query
S-Nav
Subproblem
Solver
Robot
Global Path
Semantic-geometric Path
Sensor Data
Subproblem
Subpath
Figure 1: Overview of S-Nav. A query (e.g., ’go from current position to the kitchen’) is first handled by the Semantic Planner
which provides an initial high-level semantic-geometric path based on the graph structure obtained from S-Graphs. Next, in the
Subproblem Solver, the semantic-geometric path is subdivided into smaller, easier problems that are individually solved by the
Geometric Planner. The individual paths between the subproblems are then reassembled into the final high-level path that is
passed to the robot.
• Semantic subproblem solver further simplifies the global plan into local subproblems for the underlying geometric
planner.
A brief summary of S-Graphs is given in section 2.1. S-Nav, the novel semantic-geometric planner, is introduced in section 3. The
main blocks are the Semantic Planner (section 3.1), the Subproblem Solver (section 3.2), and the Geometric Planner (section 3.4).
The evaluation and results are presented in section 4. This work is concluded in section 5.
2
System Overview
The complete system architecture is shown in fig. 1. S-Nav builds on top of S-Graphs and utilizes it as its main data source.
S-Nav itself is composed of the Semantic Planner, the Subproblem Solver, and the Geometric Planner. A path query is first
handled first by the Semantic Planner whose output serves as a rough initial guess that cascades into the Geometric Planner via
the Subproblem Solver.
2.1
Situational Graphs (S-Graphs)
S-Graphs is an optimizable graph structure built using online measurements such as LiDAR data or markers [1], [2], [6].
The graph structure consists of five layers that are summarized as:
Keyframes Layer: Composed by the robot’s pose MxRi ∈S E(3) constrained by the the robot’s odometry measurements.
Walls Layer: Each room is composed of four planes extracted from onboard sensor measurements. They are constrained using
pose-plane constraints.
Room Layer: A room is formed by its four planes constrained by a cost function consisting of the room center Mpi ∈R2 and wi
the distance between the opposite planar pairs.
Floor Layer: A floor is a collection of rooms optimized analogously to rooms by extracting the largest distance between the
opposite planar pairs.
Doorway Layer: A doorway marks the physical, traversable connection between two rooms defined by a center point Mdi ∈R2
and a width ri, and is constrained by the physical distance between the two rooms it connects.
S-Graphs serves as the main source of information for S-Nav. Therefore, this work makes extensive use of the room and doorway
layers. The presented architecture can, however, easily be expanded to include multiple floors and other semantic entities (e.g.,
objects).
3
S-Nav
S-Nav is our novel hierarchical semantic-geometric planning solution that combines S-Graphs with an informed geometric plan-
ner. Our solution provides the following benefits over traditional, purely geometric planners:

Preprint – S-Nav: Semantic-Geometric Planning for Mobile Robots
3
Semantic-Graph Layer
Room Contours
Geometric Layer
Signed Distance Field
Rooms
Doorways
Topology
Figure 2: The semantic-graph layer is an undirected topological graph of rooms and doorways extracted from features segmented
by S-Graphs. The results of this first layer cascade into the geometric layer which is formed by OMPL and Voxblox. The contour
layer reduces the valid state space of the geometric planner to do informed decisions on where to sample. The semantic path is
highlighted in green together with the room contours that have to be traversed along the path.
• The geometric search can greatly profit from a rough initial guess provided by the semantic layer by constraining the
areas the planner can visit and by providing subgoals toward the final goal.
• A query in natural form, e.g., ’go from here to the kitchen’, can easily be mapped to a semantic-geometric problem.
• Handling forbidden areas such as closed doors or rooms that should not be traversed is trivial on the semantic layer,
whereas it would require map changes on the geometric layer. Similarly, if a doorway is detected as untraversable,
replanning is very fast as the doorways node can easily be disconnected from the graph.
The structure of S-Nav is depicted in fig. 1 whilst the different layers are visualized in fig. 2. Its main parts are formed by the
Semantic Planner that cascades into the Geometric Planner via the Subproblem Solver (SPS). The final path is then passed to the
robot, potentially via additional layers such as local planning, trajectory generation, and motion control.
3.1
Semantic Search
The scene graph structure of S-Graphs encodes a high-level representation of the environment the robot is operating in. Herein,
this scene graph is converted into an undirected graph connecting the semantic elements of the scene. The connections (edges)
between the elements have an associated cost, i.e., for the room-to-doorway connections, a cost
cdr = ∥Mpi −Mdi∥2 + pd
(1)
is assigned, consisting of the distance between the center point of the room and the associated doorway, plus a fixed penalty for
doorway crossing. The fixed penalty pd can be used to prefer a slightly longer path with fewer (potentially closed) doorways.
Generally, the graph is sparse, featuring only a small number of nodes and edges. As such, a shortest-path search using, e.g., A*
is virtually free compared to a full search on the geometric layer.
For a given query ’ps →pg’ (read: from ps to pg), the semantic planner provides a solution of type
ps →dk →dk+1 →· · · →dk+n →pg
via: FR = Rs ∪Ri ∪· · · ∪Ri+n ∪Rg, FR ⊆S ⊂R3
(2)
where ps, pg, Rs, Rg are the start and goal positions and rooms, dk the doorway center points to traverse along the route, R(.) are
the rooms, i.e., the free space the robot has to pass through to reach its destination, S is the state space limited by the bounding
box of the map, and FR is the reduced free space obtained from the semantic planner that is passed to the geometric planner. By
restricting the geometric planner to FR, its sampler can be much smarter about the placement of the samples.
3.2
Semantic Search with Subproblems
The global problem in eq. (2) can further be simplified into a set of local subproblems that can be solved in parallel and, individ-
ually, pose a simpler problem to the geometric planner:
1 : ps
→dk,
via: Rs
2 : dk
→dk+1, via: Ri+1
3 : dk+1 →dk+2, via: Ri+2
· · ·
n : dk+n →pg,
via: Rg
(3)

Preprint – S-Nav: Semantic-Geometric Planning for Mobile Robots
4
a) IRRT*
b) IRRT*+S-Graphs
c) IRRT*+S-Graphs+SPS
Rooms
Geometric path
S-Graphs path+
contours
Doorways
Samples
Goal
Start
Figure 3: a) The na¨ıve approach using IRRT* creates an excessive amount of samples and yet ends up with a suboptimal path. b)
Restricting IRRT* to sample within the rooms that are part of the optimal path greatly enhances the solution with fewer samples.
c) Restricting IRRT* to sample within the rooms parts of the solution and decomposing the overall problem in subproblems
yields the best result (least amount of samples) as it effectively exploits the rapid convergence of IRRT* for the resulting simpler
problems.
Therefore, akin to informed geometric planners (e.g., informed RRT* [3]), herein the semantic planner adds an additional layer
of information that the geometric planner can profit from to find a solution faster. The subproblems are solved by the Subproblem
Solver in conjunction with the geometric planner. The resulting individual path segments are joined to a final, global path. If
the resulting path requires updating, e.g., due to a blocked path, the Subproblem Solver can efficiently reevaluate the changed or
newly created subproblems.
3.3
Global Map
Instead of relying on raw sensor readings, S-Nav features a global map reconstruction module that builds an accurate global map
from S-Graphs data, which in turn is generated on the fly by the robot, resp. provided to the robot if the environment is already
fully mapped. The global map is kept relatively simple, i.e., not featuring obstacles as this problem is more effectively handled
by the reactive planner on a local map.
S-Graphs provides the planes associated with each room, including the doorways that mark the connection between two rooms.
In the first step, for each room, the vertical planes (walls) are converted to a closed 2D contour which encompasses the free
space within a room. Room contours serve two purposes: First, to restrict the geometric planner’s sampler to sample only in
areas that effectively contribute to the final path. Second, to build an optimistic, clutter-free (yet accurate), signed distance field
representation of the physical environment that forms the basis for the geometric planner.
Doorways of a certain width and located at a certain point are added between the two closest walls of the two associated rooms.
Just like contours, they are also part of the signed distance field generation process.
3.4
Geometric Search
The geometric search within S-Nav features state-of-the-art geometric planners provided by the Open Motion Planning Library
(OMPL). Within S-Nav we use sampling-based planners (e.g., PRM, RRT, IRRT*), that create random (sometimes with a heuris-
tic) samples within the valid bounds of the state space. A priori, for any given problem, the whole global map has to be considered.
Therefore, a large number of samples is required to find the optimal path. Constraining the sampler to sample within the rooms
that have to be visited along the semantic path, greatly enhances the convergence rate of the planner as no samples are waste-
fully created in areas that are of no interest. Furthermore, using the SPS that decomposes the global problem into a set of local
problems effectively exploits the rapid convergence of certain planning algorithms (e.g., IRRT*) for the resulting simpler type of
problem. The problem is illustrated in fig. 3.
4
Evaluation
4.1
Methodology
A synthetic map (17 m×15 m) with 8 rooms and 10 doorways was created and passed to the recently presented iS-Graphs [6], an
S-Graphs extension that supports architectural (BIM) data. Within this environment, the three cases (IRRT*, IRRT*+S-Graphs,
and IRRT*+S-Graphs+SPS) shown in fig. 3 were benchmarked by performing 1000 queries for each. As OMPL termination
criteria, a timeout of 0.1 s was specified. The timeout is equally divided over all subproblems for the test series involving the

Preprint – S-Nav: Semantic-Geometric Planning for Mobile Robots
5
16
18
20
22
path length in meters
IRRT*+
S-Graphs+
SPS
IRRT*+
S-Graphs
IRRT*
500
1000
1500
2000
sample count
IRRT*+
S-Graphs+
SPS
IRRT*+
S-Graphs
IRRT*
Figure 4: Results: The semantic planner greatly improves the consistency of the results by reliably finding the shorter path
compared to plain IRRT*. The solution involving IRRT*, S-Graphs, and the SPS was able to create significantly more samples
in the allocated time.
SPS. Recorded were the number of samples created within the allocated time as well as the final path length. The measurements
were performed on a workstation equipped with an Intel Core i9-11950H.
4.2
Results and Discussion
The results are given in fig. 4. It is clear that IRRT* alone delivers the most inconsistent results with the widest spread. On
average, it also had the least number of samples generated. Restricting the sampled regions with the S-Graphs knowledge,
significantly improved the consistency of the results. Further, using S-Graphs and the SPS in combination with IRRT* yielded
consistently the shortest path, and was also able to generate significantly more samples. The higher number of samples is caused
by the comparatively cheaper state and motion validity checks based on the contours rather than the signed distance field alone.
5
Conclusion
Leveraging the geometric-semantic knowledge contained in S-Graphs for planning can greatly enhance the performance of the
underlying geometric planner. Herein, we presented S-Nav, a novel semantic-geometric planner that features a hierarchical
planner architecture that showed to significantly improve planning speed, resp., the consistency of the generated paths within
a given timeframe. Furthermore, we showed that decomposing the global problem into a set of local problems can be used to
effectively leverage the rapid convergence of (informed) sampling-based planners.
References
[1] Hriday Bavle, Jose Luis Sanchez-Lopez, Muhammad Shaheer, Javier Civera, and Holger Voos. Situational Graphs for Robot
Navigation in Structured Indoor Environments. IEEE Robotics and Automation Letters, 7(4):9107–9114, oct 2022. ISSN
2377-3766. doi:10.1109/LRA.2022.3189785. URL https://ieeexplore.ieee.org/document/9826367/.
[2] Hriday Bavle, Jose Luis Sanchez-Lopez, Muhammad Shaheer, Javier Civera, and Holger Voos.
S-Graphs+: Real-time
Localization and Mapping leveraging Hierarchical Representations. (1):1–10, dec 2022. URL http://arxiv.org/abs/
2212.11770.

Preprint – S-Nav: Semantic-Geometric Planning for Mobile Robots
6
[3] Jonathan D. Gammell, Siddhartha S. Srinivasa, and Timothy D. Barfoot. Informed RRT*: Optimal sampling-based path plan-
ning focused via direct sampling of an admissible ellipsoidal heuristic. In 2014 IEEE/RSJ International Conference on Intel-
ligent Robots and Systems, pages 2997–3004. IEEE, sep 2014. ISBN 978-1-4799-6934-0. doi:10.1109/IROS.2014.6942976.
URL https://ieeexplore.ieee.org/document/6942976/.
[4] Helen Oleynikova, Zachary Taylor, Marius Fehr, Roland Siegwart, and Juan Nieto.
Voxblox: Incremental 3D Eu-
clidean Signed Distance Fields for on-board MAV planning.
In 2017 IEEE/RSJ International Conference on Intelli-
gent Robots and Systems (IROS), volume 2017-Septe, pages 1366–1373. IEEE, sep 2017.
ISBN 978-1-5386-2682-5.
doi:10.1109/IROS.2017.8202315. URL http://ieeexplore.ieee.org/document/8202315/.
[5] Helen Oleynikova, Zachary Taylor, Roland Siegwart, and Juan Nieto. Sparse 3d topological graphs for micro-aerial vehicle
planning, 2018.
[6] Muhammad Shaheer, Jose Andres Millan-Romera, Hriday Bavle, Jose Luis Sanchez-Lopez, Javier Civera, and Holger Voos.
Graph-based Global Robot Localization Informing Situational Graphs with Architectural Graphs. mar 2023. URL http:
//arxiv.org/abs/2303.02076.
[7] Ji Zhang and Sanjiv Singh.
Low-drift and real-time lidar odometry and mapping.
Autonomous Robots, 41(2):401–
416, feb 2017.
ISSN 0929-5593.
doi:10.1007/s10514-016-9548-2.
URL http://link.springer.com/10.1007/
s10514-016-9548-2.

