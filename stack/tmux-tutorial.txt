Pair Programming
with tmux
Vaibhav Bajpai
A Practical Introduction
1
Thursday, April 5, 12

tmux
tmux is a terminal multiplexer. It lets 
us use a single environment to launch 
multiple terminals, or windows, each 
running its own process or program.
2
Thursday, April 5, 12

Outline
Installing and Starting tmux
Detaching and Attaching Sessions
Working with Windows and Panes
Working with Command Mode
Basics |
with shared accounts
with separate accounts
Pair Programming |
3
Thursday, April 5, 12

Installing tmux
$ sudo apt-get install tmux
$ brew install tmux
$ sudo port install tmux
or
Debian-based
Mac OS X
4
Thursday, April 5, 12

Starting tmux
Starting tmux with a Default Session
Exiting tmux
$ exit
$ tmux
Creating a Named Session
$ tmux new-session -s $NAME
$ tmux new -s $NAME
or
$ tmux new-session -d -s $NAME
Creating a Named Session in the Background
5
Thursday, April 5, 12

Attaching & Detaching Sessions
Listing existing Sessions
Detaching from a Session
CTRL-b d
$ tmux list-sessions
$ tmux ls
or
Attaching to a Session
$ tmux attach -t $NAME
Killing Sessions
$ tmux kill-session -t $NAME
6
Thursday, April 5, 12

Working with Windows
Creating a Named Window in an Existing Session
Creating a Named Window in New Session
$ tmux new -s $SNAME -n $WNAME
CTRL-b C
CTRL-b ,
New Window:
Rename a Window:
Moving between Windows
CTRL-b n
CTRL-b p
Next Window:
Previous Window:
Choose from a Window List:
CTRL-b w
Close a Window
CTRL-b &
7
Thursday, April 5, 12

Working with Panes
Create a Vertical Split:
CTRL-b %
Create a Horizontal Split: 
CTRL-b “
Cycle through Panes:
CTRL-b UP/DOWN/LEFT/RIGHT
Cycle through Pane Layouts:
CTRL-b SPACEBAR
Close a Pane:
CTRL-b X
8
Thursday, April 5, 12

Command Mode
Switch to Command Mode:
CTRL-b :
Creating a Named Window
: new-window -n $NAME
Create a Named Window and Start a Process
: new-window -n $NAME $PROCESS
Switch to Help:
CTRL-b ?
9
Thursday, April 5, 12

using shared accounts
Creating a shared account
[...]$ adduser tmux
[...]$ su tmux     
Copying one’s public ssh keys
[alice@...]$ ssh-copy-id tmux@server
[bob@...]$ ssh-copy-id tmux@server
Login as tmux
[alice@...]$ ssh tmux@server
[bob@...]$ ssh tmux@server
10
Thursday, April 5, 12

using shared accounts
Shared Session
[tmux@...]$ tmux new-session -s share
Grouped Sessions
[tmux@...]$ tmux attach -t share
alice:
bob:
[tmux@...]$ tmux new-session -s group
[tmux@...]$ tmux new-session -t group -s my
alice:
bob:
11
Thursday, April 5, 12

using separate accounts
Create a common group
$ sudo addgroup tmux
Create a folder to hold common sessions
$ sudo mkdir /var/tmux
$ sudo chgrp tmux /var/tmux
$ sudo chmod g+ws /var/tmux
Add each member to the common group
$ sudo usermod -aG tmux alice
$ sudo usermod -aG tmux bob
12
Thursday, April 5, 12

using separate accounts
Shared Session
[alice@...]$ tmux -S /var/tmux/share
[bob@...]$ tmux -S /var/tmux/share attach
alice:
bob:
13
Thursday, April 5, 12

References
tmux, Productive Mouse-Free 
Development, Brian P Hogan, 
Pragmatic Bookshelf 2012
14
Thursday, April 5, 12

