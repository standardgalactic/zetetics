Noname manuscript No.
(will be inserted by the editor)
Multi-Goal Economic Search using Dynamic Search
Structures
David Sarne · Efrat Manisterski · Sarit Kraus
Received: date / Accepted: date
Abstract This paper investigates cooperative search strategies for agents engaged in costly
search in a complex environment. Searching cooperatively, several search goals can be sat-
isﬁed within a single search effort. Given the searchers’ preferences, the goal is to conduct
a search in a way that the expected overall utility out of the set of opportunities found (e.g.,
products when operating in a market) minus the costs associated with ﬁnding that set is
maximized. This search scheme, given in the context of a group search, applies also to sce-
narios where a single agent has to search for a set of items for satisfying several different
goals. The uniqueness of the proposed mechanism is in the ability to partition the group of
agents/goals into sub-groups where the search continues for each group autonomously. As
we show throughout the paper, this strategy is favorable as it weakly dominates (i.e., can im-
prove but never worsen) cooperative and autonomous search techniques. The paper presents
a comprehensive analysis of the new search method and highlights the speciﬁc character-
istics of the optimal search strategy. Furthermore, we introduce innovative algorithms for
extracting the optimal search strategy in a range of common environments, that eliminates
the computational overhead associated with the use of the partitioning technique.
1 Introduction
In many Multi-Agent based environments autonomous agents are required to engage in
search in order to learn what opportunities and options are available to them. For example, a
buyer agent in an electronic marketplace often needs to explore and identify the available op-
portunities to buy a speciﬁc requested product [25]. In most cases, the search performed for
learning about new opportunities is costly. Search costs reﬂect the resources (not necessarily
monetary) that need to be invested/consumed for maintaining search-related activities, such
This work was supported in part by NSF grant no IIS0705587, the Israeli Science Foundation grants no 1685
and 1401/09 and BSF grant 2008-404. Kraus is also afﬁliated with UMIACS. Preliminary parts of the analysis
given in this paper appeared in [27].
Department of Computer Science,
Bar-Ilan University, Ramat Gan, 52900 Israel

2
as locating opportunities, analyzing and comparing them and negotiating over them with
other agents. The existence of search costs in Multi-Agent Systems (MAS) and the need to
take these into consideration when setting the agents’ strategies is widely recognized [1,9,
20]. The inﬂuence of these costs increases as a function of the amount and richness of oppor-
tunities that can be potentially found in the MAS environment.1 Therefore, a key principle
in an agent’s search process (referred to, in this context, as ”economic search”2) [24,29], is
to identify the point where the expected beneﬁt from further exploration of the environment
is smaller than the cost associated with the additional search effort.
An important form of ”economic search” is a multi-goal-satisfaction search, i.e., when
the information gathered along the search applies to several different goals that need to be
satisﬁed. The goals can either be of a single searcher or several different searchers, and
the idea is that instead of conducting a separate search for satisfying each goal, a coor-
dinated search takes place in a way that all goals are eventually satisﬁed. For example, a
single searcher may search for several different goods [14,8,7], e.g., presents for several of
her friends, when visiting different department stores. This way, instead of searching for a
present to one friend at a time (and upon buying a present restarting the search process for
a present to the next friend) the searcher can shop for all presents at the same time, as many
of the items sold may be of value as a present to more than one friend. Similarly, several
agents, possibly with different sets of preferences, may decide to coordinate their search, or
have one of them (or a designated new agent) search on their behalf [17,28]. For example,
consider a group of buyers interested in buying a new car of a speciﬁc brand and model. The
same type of car can be found in many dealerships and obviously each buyer values differ-
ently the different terms and conditions offered by each dealership (e.g., warranty period,
payment options, dealership’s reputation). Nevertheless, in order to learn these terms and
conditions offered by each dealership for the car one needs to physically visit the different
dealerships. This process is associated with a substantial search cost, as it involves spending
time (driving, querying sellers) and money (e.g., for fuel). Alternatively, we can think of a
cooperative-based search, by which one buyer is searching on behalf of the group and the
group compensates her for her search expenses or each buyer, in her turn, visits a different
dealership and shares the information with all others (in a way that the overall search cost
and effort are split among everyone). This does not necessarily imply that all buyers will
buy the car eventually at the same dealership, however in this manner the group can share,
reuse and re-allocate opportunities (that otherwise, if using separate searches, might have
been discarded) among themselves.
When considering a multi-goal search one needs to take into consideration additional
overhead costs. These costs can be of various forms. For example, in the single searcher’s
case, these costs can be the additional costs associated with the need to evaluate the value of
each opportunity found to each goal (e.g., when searching for presents to few of her friends
the searcher needs to consider, whenever introduced with a new product, the value of this
item to each friend to whom it might be suitable as a gift). In the multi-agent cooperative-
based search, these costs can be the communication, coordination and internal organization
costs, both for the formation of the cooperation and for its maintenance. This overhead is
usually modeled as an increasing function of the number of goals that need to be satisﬁed or
the number of agents coordinating their search [39,21,38].
1 Even in settings where technology can reduce the cost of exploring a single opportunity (e.g., when
buying a speciﬁc product over the internet) the cost of evaluating all possible opportunities available becomes
an important parameter affecting the agents’ search strategy.
2 ”Economic search” can also be considered as sampling. This, as opposed to the classical AI search [16]
in which an agent seeks a sequence of actions that will bring it from an initial state to a requested goal state.

3
Former analysis of multi-goal search [14,8,7,38] suggests a signiﬁcant potential im-
provement for the agents’ performance when using the multi-goal search method in various
environments (in comparison to individual searches [29]). However this improvement can-
not be generally guaranteed for all environments. This is principally because the strategies
proposed for the multi-goal search assume that the set of goals is ﬁxed throughout the en-
tire search process. This assumption limits the search strategy to the decision of whether to
continue the search as a whole or terminate the search completely. In this paper, we suggest
integrating in the search strategy also the option to continue the search with only a subset
of goals (while either satisfying the remaining goals with the ﬁndings obtained so far or
continuing the search for satisfying these unsatisﬁed goals as a parallel effort). This form of
search is more realistic and applicable in comparison to the models of ﬁxed goal-sets. For
example, a single searcher seeking for several different goods does not need to delay the
purchase of all items until obtaining satisfying price quotes for all the different products she
is interested in. Instead, she can buy some of the products when appealing opportunities to
buy them are found, and avoid the overhead associated with searching for these items any
further. Similarly, in the cooperative multi-agent search example, it might be beneﬁcial for
some of the agents to exploit some of the opportunities found so far and have the rest of the
agents continue the search, cooperatively, with smaller overall overhead (e.g., upon recog-
nizing a dealership that ﬁts perfectly the needs of a subgroup of buyers, have this subgroup
buy at that dealership, and the rest of the group continue the search with a signiﬁcantly
smaller overhead).
We show that the new search method generally guarantees at least the performance
achieved by having each agent search individually and the one obtained by the coopera-
tive search without the proposed enhancement. The main advantage of applying intelligent
restructuring (i.e., partitioning) strategies along the search is that it takes into considera-
tion the expected contribution of any subset of goals to the overall utility and to the cost
of search at any search stage. This, as opposed to merely considering the gain in having
the group maintains the search as a whole. The proposed cooperative search technique is
particularly valuable in scenarios where different goals reﬂect non-correlated (or partially
correlated) preferences. Here, we may identify opportunities in which it is more beneﬁcial
to terminate the search for some of the goals (taking advantage of any of the currently known
opportunities) while resuming the search cooperatively in a reduced form (e.g., continue the
search only for the remaining goals), hence with a smaller overhead.
While the analysis given in the paper is applicable both for the case of a single agent
search, when attempting to satisfy multiple goals, and for the case where the multi-goal
search is associated with a joint effort of several different agents, its formal presentation
is given within the framework of the latter model. This is primarily due to the fact that the
model of multi-goal search when performed cooperatively by a group of agents encompasses
a richer formulation and can be used as an infrastructure for further research, investigating
various important aspects of the process relating to the formation and maintenance of coop-
eration.
The contributions of this paper are twofold. First, we introduce and analyze a new coop-
erative search technique by which the search can be partitioned into several sub-efforts, each
conducted separately for satisfying a subset of goals, as part of the search strategy space.
The new search technique contributes directly both to multi-goal search and coalitional sam-
pling models, as part of the economic search-theory domain, and to coalition formation and
cooperation theories as developing the optimal cooperative search of a coalition lays the
foundations for analyzing important questions such as the formation of cooperation and
stability and payoff division mechanisms [34,45].

4
We use VSCS (Variable Structure Cooperative Search) to denote our new cooperative
search method, as opposed to the Fixed-Structure Cooperative Search technique, denoted
FSCS, by which the group continues as a whole throughout the search process [14,8,7,38].
The individual search technique (i.e., where each agent searches separately for satisfying
a single goal at a time is denoted SAS (Single Agent Search [29]). Alongside the formal
introduction of the model, we supply an in-depth theoretical analysis leading to the speciﬁc
characteristics of the optimal strategy to be used in the new search model. As we show
throughout the paper, both the cooperative (FSCS) and individual (SAS) search techniques
can be considered speciﬁc cases of our proposed search technique, VSCS (and are weakly
dominated by VSCS in terms of performance).
While the VSCS model improves the agents’ performance, it also signiﬁcantly affects
the computational complexity of computing the optimal search strategy. This is mainly be-
cause the strategy space in the new model increases immensely (due to the many partitioning
alternatives). As we show in the following sections, when constructing the new search strat-
egy, we are no longer concerned with only when to continue the search, but rather need to
decide under which structure to continue. For this purpose we need to evaluate the potential
beneﬁt from any possible partition of the search as well as additional future partitions of
any of the agent subsets throughout any future sequence of opportunities encountered. This
imposes a signiﬁcant computational challenge. Therefore, a second important contribution
of this paper is the introduction of a computational algorithmic-based means for facilitating
the calculation process of such a strategy in common MAS environments (e.g., environments
characterized by ﬁxed or non-increasing marginal search costs). The uniqueness of our algo-
rithm relates to the fact that its computational complexity is similar to the one characterizing
the FSCS model and does not depend on the potential number of partitions.
In the following section we address relevant literature in the area of MAS cooperation,
coalition formation and economic search which apply to single-agent multi-goal as well
as cooperative search. Then we formally introduce the VSCS model, present its analysis
and introduce appropriate computational means as described above. Since the superiority
of the new model over the two other methods is analytically straightforward, the focus of
the paper remains on strategy analysis. Consequently, the different speciﬁc characteristics
of the proposed model are illustrated using designated synthetic small-scale environments,
designed for this purpose. Nevertheless, towards the end of the paper we supply a compara-
tive example for the performance of the new cooperative search method, based on authentic
settings, fully correlated with a genuine eCommerce speciﬁc vertical market. Our computa-
tional algorithm runs within less than a second in this setting which contains thousands of
opportunities.
2 Related Work
The problem of a searcher operating in a costly environment, seeking to maximize his
long term utility is addressed in classical economic search theory ([24,29], and references
therein). Among the three main search models that were introduced (the ﬁxed sample size
model [40], the sequential search model [35,24] and the combined model [13,32]) the most
relevant for our model is the sequential search, where the searcher draws one observation at
a time, allowing multiple search stages. Attempts to adopt the sequential search model for
agent-based electronic trading environments associated with search costs are suggested in
[9,20]. The main focus of these works is on establishing the appropriate characteristics of
the environment and search strategy rather than the computational aspects of extracting it.

5
Few studies in the area of economic search theory have attempted to investigate the
problem of a single searcher, attempting to purchase several commodities (instead of one in
the classical economic search models) while facing imperfect information concerning prices
[14,8,7]. For example, Burdett and Malueg [7] extend the single search model and analyze
a consumer visiting one or more stores in order to minimize the total expenditure. Carlson
and McAfee in [8] extend Burdett and Malueg’s work and analyze the case where customers
have no perfect recall (i.e., the ability to exploit formerly explored opportunities). Gratti [14]
identiﬁes necessary and sufﬁcient conditions in an agent’s utility function that guarantee that
the optimal search strategy can be characterized by the reservation property. Common to all
these multi-goal-satisfaction models is that the set of goals to be satisﬁed throughout the
search is stationary and does not change along time.
Substantial research efforts have been devoted over the years for studying cooperation
among agents, as in many multi-agent environments autonomous agents may ﬁnd beneﬁt in
cooperating and coordinating their actions. The cooperation is mostly useful when an agent
is incapable of completing a task by itself or when operating as a group can improve the
overall performance [5,22,15]. Consequently, group based cooperative behavior has been
suggested in various domains [42,12,43,44]. The recognition of the advantages encapsu-
lated in teamwork and cooperative behaviors, is the main driving force of many coalition
formation models in the area of cooperative game theory and MAS [23,39]. A review of the
extensive literature on coalition formation can be found in [18]. While coalition formation
and coordination models can be widely found in the electronic market domain, most work
emphasizes mechanisms for forming cooperation for the purpose of aggregating demands
in order to obtain volume discount [43,44]. Additional coalition formation models for the
electronic marketplace consider extensions of transaction-oriented coalitions into long-term
ones [5], and for large-scale electronic markets [22]. Overall, the majority of cooperation and
coalition formation MAS-related research tends to focus in the way coalitions are formed
and consequently concerns issues such as the optimal division of agents into disjoint ex-
haustive coalitions [41,44], division of coalition payoffs [44] and enforcement methods for
interaction protocols [30]. Only several authors have considered the problem of determining
the strategy of a group once formed in the electronic commerce domain, once the coalition
is formed [17], and no work to date considers strategies for a cooperative search in a costly
environment where partitioning capabilities can be applied.
3 Cooperative Search
For exposition purposes, we adopt the legacy buyers-group application for the electronic
marketplace [43,44] and in particular the B2C (Business-to-Consumer) market, where sell-
ers can supply almost any volume of demand. Notwithstanding, we emphasize that the coop-
erative search strategy we present in this paper is general and can be applied to any scenario
where a single searcher can satisfy several of its search goals as part the same search process
or in the multi-agent case when the opportunities obtained are applicable to several agents.
Our environment description extends the multi-goal search [14,38,8] to support par-
titioning as part of the set of actions in the strategy deﬁnition. We consider an electronic
marketplace where numerous buyer and seller agents can be found, each interested in buy-
ing or offering to sell a well deﬁned product. A product can be offered by many different
seller agents under various terms and policies (including price). We assume that while buyer
agents are ignorant of individual seller agents’ offers, they are acquainted with or can learn
the overall distribution of opportunities (whereas an opportunity is deﬁned as the option to

6
buy the desired product under speciﬁc terms and policies) in the marketplace. The latter
assumption is standard and common in economic search models (e.g., [4,13,31,32]).3
In the absence of central matching mechanisms or mediators, each agent needs to search
for appropriate opportunities to buy its requested product. This process, in which a single
agent searches autonomously for satisfying a single search goal (SAS), is described and
analyzed in [29]. Throughout its search the buyer agent locates seller agents sequentially
(i.e., one at a time) and learns about their offers by interacting with them. Upon learning a
new opportunity details, the buyer agent evaluates it using its own utility function. Similar
to many consumer theories [11], we apply the multi-attribute utility theory (MAUT) [19]
when evaluating the different opportunities found. This enables a set of preferences to be
represented by a numerical utility function. We consider the agents to be heterogeneous;
each having its own utility function deﬁned over product attributes, terms and policies as
well as reputation and trust factors. Based on its evaluation the agent makes a decision
whether to exploit any of the opportunities encountered until this point (i.e., buy from any of
the sellers located) or to resume its search in a similar manner. The optimal search strategy
in a single-agent’s search is stationary (i.e., it does not change from one search stage to
another): the agent sets a lower limit stopping rule and terminates the search when reaching
an opportunity that yields a utility greater than or equal to this limit [29].
The search activity is assumed to be costly [9,20,28] in a way that each search stage
of the process induces a search cost. We assume utilities and costs are commensurable and
additive. Furthermore, as in other MAS cooperation models [18,36], we assume that there is
an option for side payments. Recognizing the beneﬁts of a cooperative search, buyer agents,
interested in similar products or interchangeable products, may decide to establish such a
cooperative search effort. This process, which can be seen as a coalition formation process
[41,43] involves several important aspects, relating to the way the coalition is generated and
the way it executes its cooperative search task and divides the generated value among the
coalition members [41,44]. The focus of this paper is in the cooperative search itself, i.e.,
ﬁnding an optimal cooperative search strategy for the coalition once it was formed, based
on the utilities reported by the different coalition members. The optimal cooperative search
strategy is the one that maximizes the overall utility of the coalition members as reﬂected by
their (not necessarily truthful) reported utilities less the costs accumulated along the search
process. This is equivalent to the problem of a single searcher in a multi-goal search as
the goal is to maximize the accumulated utility obtained from satisfying the different goals
while taking into account the cost of the search. The remaining coalition-formation-related
aspects are beyond the scope of this paper and can be investigated separately. In fact, given
the overall utility maximization goal, the coalition’s optimal cooperative search strategy is
not inﬂuenced by the coalition formation mechanisms but rather inﬂuences them. This is
because the agents can only beneﬁt (in terms of their reported utility) from any increase in
the coalition’s expected overall utility and thus the overall utility maximization strategy is
the preferred strategy by all agents at every stage of the search (i.e., no conﬂict of interests
as of how the cooperative search should be executed).4
3 There are several methods by which an agent can be acquainted with this distribution function. For
example, agents can rely on recent history (e.g., using spectators) and past experience. This method can
be useful even in dynamic on-line markets where despite frequent changes in individual opportunities, the
overall distribution remains steady (e.g., price dispersion in many well-established online retail markets [2,3,
6,10]. Another alternative that can be used is Bayesian sampling which can be added to the model. Since this
is not the main focus of the paper, we do not include these stochastic elements.
4 We leave stability issues out of the scope of this paper.

7
There are many ways cooperative search can take place, e.g., assigning a representative
agent that searches on behalf of the coalition or simply taking turns searching, each deriving
a different search cost overhead structure. For this paper’s purposes, there is no importance
to the method used, as long as the exploration of opportunities is performed sequentially.
Once the agents decide to cooperate, and set the rules for the cooperation they can simply be
treated as a coalition that encounters a single seller at each search stage, thus accumulating
new opportunities along time. As in various other coalition formation models, we assume
that the costs associated with maintaining the coalition are an increasing function of the size
of the coalition [39,21,28] (or of the number of goals that need to be satisﬁed in the single
searcher’s case, as each opportunity needs to be evaluated in the context of every goal).
The cooperative search strategy determines the action to be taken after obtaining and
reviewing a new opportunity for the coalition members (i.e., upon completion of each future
search stage). While in the ﬁxed structure model (FSCS) the set of possible actions for each
stage includes: (a) terminating the search; and (b) resuming the search while keeping the
current structure; in the new model (VSCS) the coalition can also choose to partition itself
into sub-coalitions (where each member in the partitioned coalition is assigned to one of the
sub-coalitions) that set their optimal search strategy from this point onward, independently
(i.e., search autonomously or terminate their search).5
Before moving on to the analsysis sections, and formally introducing the model, we
recap the assumption used and correlate them to the different entities combining the model:
– Agents/Goals - agents can form and restructure cooperation, and individuals can com-
bine and seperate goals into different search efforts; learn about the beneﬁt from different
opportunities through a costly search.
– Opportunities - complex however can be valued by a numerical utility function; each
potentially applies to all agents or satisfy all goals (and can be selected for as many
agents/goals requested eventually); the distribution of opportunities in the environment
is known or can be learned; can be evaluated only through costly search;
– The Search Process - assumed to be costly in a way that each search stage of the
process induces a search cost, which depends on the number of goals or the number
of cooperating agents; opportunities are explored sequentially, in a random order; the
optimal cooperative search strategy is the one that maximizes the overall utility of the
coalition members (or of all goals in a multi-goal search), while taking into account the
cost of the search.
– Utilities and Costs - are commensurable and additive.
4 Finding the Coalition’s Search Strategy
The following section formally deﬁnes the search environment and the coalition’s search
strategy. For convenience, all the notations given, and their meanings, are summarized in a
table at the end of the paper.
Let B = (B1,B2,...,B|B|) be the set of the attributes deﬁning any of the potentially avail-
able opportunities in the market, where each attribute Bi can be assigned a value from the
ﬁnite set (bi
min,...,bi
max). An opportunity’s type is deﬁned by the vector −→
oi = (b1,b2,...b|B|),
5 The suggested partitioning process can be seen as coalition reconstruction [33], and is very similar in its
nature to the coalition formation process. It is used whenever the coalition can increase its overall utility by
acting as several autonomous sub-coalitions. In fact, the partitioning principles can be determined and agreed
as a condition for forming the coalition.

8
assigning a value bi to each speciﬁc attribute Bi.6 Throughout the search, identical opportu-
nities (i.e., of the same type) may be encountered. We use O to denote the space of potential
opportunity types the coalition may encounter. The opportunity types’ distribution in the
marketplace is denoted by the probability function p(−→o ), ∑−→o ∈O p(−→o ) = 1. We consider a
coalition Ag = {a1,a2,...,a|Ag|}, where aj is the j −th buyer agent in the coalition. Each
buyer agent, aj, evaluates opportunities using a utility function Uj : O →R, where Uj(o) is
the agent’s utility from opportunity type o. The search cost associated with having a coali-
tion of size n (i.e., having n agents in the coalition) for each search round is denoted by the
function c(n).
We represent the world states of a coalition or a sub-coalition using the set of opportuni-
ties known to them. Given a set θ = {o1,...,ol} of opportunities known to coalition Ag (i.e.,
a set of l opportunities encountered at former search stages of coalition Ag), it is sufﬁcient
to maintain a subset s of θ to represent the current state of this coalition. Subset s stores
the opportunities from θ that maximize the utility of each of the agents in Ag. Formally, we
can calculate the state s of a coalition Ag acquainted with a set θ of known opportunities
by using the function: s = state(Ag,θ) = {os
a j|aj ∈Ag,os
aj ∈θ,Uj(os
aj) ≥Uj(o),∀o ∈θ}.7
We use SAg to denote the set of all possible states of a coalition Ag. Reaching a state s, the
expected utility of a coalition Ag when using its optimal strategy (from this point onwards)
is denoted V ∗(Ag,s).
The following example illustrates the computation of the current state of different coalitions
as a function of the information they have (i.e., the opportunities they are currently familiar
with).
Example 1 Consider the following environment:
Environment 1 There are 3 agents {a1,a2,a3} evaluating the usefulness of a cooperative
search in a market associated with 4 types of opportunities {o1,o2,o3,o4}, equally dis-
tributed (p(oi) = 0.25, ∀i). The agents’ utilities associated with each opportunity type are
presented in the following table:
Opportunities
a1
a2
a3
o1
0.1
0.2
1
o2
0.3
1
0.2
o3
1
0.1
0.3
o4
1.3
1.1
2.3
Given a coalition of agents and a set of known opportunities the coalition’s current state
includes the opportunities that maximize the coalitions members’ utilities. The following
table describes the different states of the different coalitions given some of the different
possible sets of opportunities encountered.
coalition \ θ
{o1,o2}
{o1,o2,o3}
{o1,o2,o3,o4}
{a1,a2,a3}
{o1,o2}
{o1,o2,o3}
{o4}
{a1,a2}
{o2}
{o2,o3}
{o4}
{a1,a3}
{o1,o2}
{o1,o3}
{o4}
{a2,a3}
{o1,o2}
{o1,o2}
{o4}
{a1}
{o2}
{o3}
{o4}
{a2}
{o2}
{o2}
{o4}
{a3}
{o1}
{o1}
{o4}
6 Notice that o is noted as a vector since it assigns a speciﬁc value to each of the different attributes, terms
and conditions associated with a speciﬁc opportunity. For example, a speciﬁc opportunity to buy a calculator
can be represented by the vector o = (scientific,20$,small Display, pocket,1YR warranty).
7 If more than one maximizing opportunity exists, state() will return a single opportunity according to a
predeﬁned order.

9
As can be seen from the example, in the proposed state presentation method only the effec-
tive opportunities in are sotored in the state set, thus many redundant states are represented
as a single state.
4.1 Coalition’s Optimal Strategy for a General Search Cost Structure
We begin our analysis by constructing the coalition’s expected utility as a function of the
coalition’s strategy along its future search. Consequently, we obtain the appropriate equa-
tions from which the optimal strategy can be extracted.
Consider the scenario where a coalition Ag chooses to terminate the search at state s.
Here, the coalition’s utility, denoted Vt(Ag,s), is the aggregated coalition member’s utilities
when each coalition member, aj, is assigned the opportunity os
aj which maximizes its utility
function, Uj, from the set of currently known opportunities in s:
Vt(Ag,s) = ∑
aj∈Ag
Uj(os
a j)
(1)
Next, we consider the scenarios in which coalition Ag resumes its search at state s while
keeping its current structure. Here we can divide the opportunities space into two sub-spaces,
Os
improve and Os
stay based on the resulting state transition incurred if the coalition locates an
opportunity of one of the types they contain. The sub-space Os
improve contains all opportunity
types that change the coalition state (if added to the set θ)8 while the sub-space Os
stay contains
all the opportunity types that will not change the coalition’s current state. More speciﬁcally
we consider the two following cases:
(1) When the coalition encounters an opportunity o that belongs to Os
stay, the coalition’s
current state is still s, i.e., state(Ag,s∪{o}) = s. In this case the coalition’s expected utility
does not change due to the new opportunity. This derives from the stationary nature of the
problem - if no better state is reached, the search resumes using the same strategy, yielding
the same expected utility from this point onward.
(2) When the coalition encounters opportunities that belong to Os
improve the coalition’s current
state changes to s′ = state(Ag,s∪{o}). Since we assume that the coalition will act according
to the optimal strategy at any future state s′ ̸= s, the coalition’s expected utility once it
reaches the new state s′ can be expressed as V ∗(Ag,s′).
Using the above distinction, the expected utility of the coalition when all agents in Ag resume
the search, denoted Vr(Ag,s), is attained by:
Vr(Ag,s)= ∑
o∈Os
improve
p(o)V ∗(Ag,state(Ag,s∪{o}))+ ∑
o∈Osstay
p(o)Vr(Ag,s)−c(|Ag|)
(2)
Applying some basic mathematic manipulations to the above equation, we obtain:
Vr(Ag,s) =
∑o∈Os
improve p(o)V ∗(Ag,state(Ag,s∪{o}))−c(|Ag|)
1−∑o∈Osstay p(o)
(3)
Since 1−∑o∈Osstay p(o) = ∑o∈Os
improve p(o), we obtain:
8 Notice that the transition is always to an improved state since the coalition can never worsen its state
when learning of a new opportunity.

10
Vr(Ag,s)=
∑o∈Os
improve p(o)V ∗(Ag,state(Ag,s∪{o}))−c(|Ag|)
∑o∈Os
improve p(o)
(4)
The third possible scenario is where coalition Ag = {a1,...,a|Ag|} partitions into a set P =
(A1,...,Ak) of disjoint non-empty sub-coalitions (Ai ∩Aj = ø, ∀i, j ≤k, i ̸= j, Sk
i=1 Ai = Ag
) that set their search strategy independently. We denote by MAg the set of all possible parti-
tions of coalition Ag. The selected partition will be the one yielding the maximum expected
utility, assuming all the sub-coalitions created use their optimal strategy. The expected utility
of the partitioned coalition Ag in this case, denoted Vp, is given by:
Vp(Ag,s) = max
P∈MAg
n
∑
Ai∈P
max

Vt(Ai,state(Ai,s)),Vr(Ai,state(Ai,s))
	o
(5)
It is notable that on the right hand side of Equation 5 above we consider only the scenar-
ios where all the members in the sub-coalitions formed resume or terminate the search. This
is principally because Vp(Ai,state(Ai,s)) has already been taken into account, when we go
over all possible partitions (as we choose maxP∈MAg ).
The optimal strategy is the mapping (Ag,s) →{resume,terminate,P}, maximizing the
expected utility V ∗(Ag,s) which can now be formulated as:9
V ∗(Ag,s) = max{Vr(Ag,s),Vt(Ag,s),Vp(Ag,s)}. This can also be expressed in a more efﬁ-
cient manner as:
V ∗(Ag,s) =
 max{Vt(Ag,s),Vr(Ag,s)}
if |Ag| = 1
max{Vr(Ag,s),maxAi,Aj{V ∗
Ai +V ∗
A j}} otherwise
(6)
where V ∗
Ai and V ∗
A j are the expected utilities of coalitions Ai and A j that fully partition coali-
tion Ag, i.e., V ∗
Ai = V ∗(Ai,state(Ai,s)), V ∗
A j = V ∗(A j,state(A j,s)), Ai ∪Aj = Ag, Ai ∩A j = /0,
i ̸= j, A j ̸= /0 and Ai ̸= /0. Notice that in the above equation for calculating V ∗(Ag,s) we
simpliﬁed the calculation to include only size-two partitions (i.e., partition into two sub-
coalitions) of coalition Ag. This is because every partition P ∈MAg has already been taken
into account recursively as part of the deﬁnition of V ∗(Ai,s) and V ∗(A j,s). Furthermore, the
latter deﬁnition used for representing a partition (only size-two partitions) also covers the
option in which all agents terminate the search.
While the above analysis relies on coalition costs associated with search, one may at-
tempt to also investigate models where the partitioning itself (into sub-coalitions) is associ-
ated with some cost (e.g., the creation of any new coalition has a ﬁxed cost). Such an ex-
tension of the model is straightforward and merely requires the subtraction of the applicable
partitioning cost elements in Equation 5, leaving the remaining of the analysis unchanged.
For example, consider a cost csplit(k) induced whenever the coalition partitions into k sub-
coalitions.10 Here, Equation 5 transforms into:
Vp(Ag,s) = max
P∈MAg
n
∑
Ai∈P
max

Vt(Ai,state(Ai,s)),Vr(Ai,state(Ai,s))
	
−csplit(|P|)
o
(7)
9 It is notable that attempting to solve the problem using dynamic programming requires the use of a
matrix storing the optimal values of all possible coalitions (2|Ag|) over all possible states, not to mention that
the solution for each case is not polynomial, thus the complexity is immense.
10 In this example the cost csplit(k) applies to scenarios where at least one sub-coalition continues its search.
The number of resulting sub-coalitions in each search round, k, includes also one sub-coalition containing all
the agents that terminate the search in this search round (if the search termination strategy applies to at least
one agent in the coalition).

11
4.2 New Challenges and Strategy Characteristics in VSCS
As expected, eliminating the constraint of keeping the coalition’s structure ﬁxed, and al-
lowing the coalition to partition itself as part of its strategy space result in several inherent
changes in the optimal search strategy’s characteristics in comparison to the model of a
ﬁxed coalition structure. In particular, an important set of features that are used for efﬁ-
ciently extracting the optimal strategy and overcoming the computational complexity in the
FSCS model [14,38,8] do not necessarily hold in our model. In the following paragraphs
we discuss and illustrate these changes.
Similar to any other general cooperative search model, the incentive to search in the
form of coalitions in our model derives from the potential opportunity to reduce the cost of
the search associated with obtaining and reviewing opportunities for the searching agents.
Nevertheless, in our model, the partition to be used in the optimal strategy is not necessar-
ily the (intuitive) division associated with the minimal search cost per search stage. This
non-intuitive result is related to the fact that partitioning decisions are affected both by the
coalition’s search cost structure and the heterogeneity level between the coalition members’
utility functions, as illustrated in the following example.
Example 2 Consider the following simple environment.
Environment 2 Three agents {a1,a2,a3} are evaluating the usefulness of a cooperative
search in a market associated with 3 types of opportunities {o1,o2,o3}, equally distributed
(p(oi) = 0.33, ∀i), where each opportunity yields a utility 1 for one of the agents and 0 for
the others (e.g., Ui(oj) = 1 ∀i = j, Ui(oj) = 0 ∀i ̸= j). The search cost of a single agent
is c(1) = 0.12, a coalition of 2 agents is associated with a search cost c(2) = 0.15 and a
cooperative search with a coalition of size 3 is associated with a cost c(3) = 0.3.
For this environment, the partition of the agents into sub-coalitions that minimizes the search
cost is the one where one of the agents searches by itself, and the two other agents search
cooperatively (i.e., c(1) + c(2) < c(3) < c(1) + c(1) + c(1)). Nevertheless, a detailed cal-
culation according to Equations 1-6 reveals that the best strategy, yielding the maximum
expected utility, is to start the search as a coalition of 3 agents (i.e., with a larger overall
search cost), and then partition as necessary according to the optimal strategy. The expected
utility of the optimal partition is 2.008, while the expected utility of the partitions that yield
the lowest search costs are: 1.885 for {a1},{a2,a3}, 1.948 for {a2},{a1,a3} and 1.9 for
{a3},{a2,a1}. Therefore, when considering potential alternatives in order to extract the op-
timal search strategy one needs to consider all possible partitioning options and cannot
eliminate speciﬁc conﬁgurations even if another speciﬁc partitioning of the coalition that is
associated with a smaller search cost can clearly be identiﬁed. Formally, even in a scenario
where c(|Ag|) > c(|Ai|)+c(|A j|), Ai ∪A j = Ag, coalition Ag can not be a-priori eliminated
from being the optimal coalition with which to continue the search.
An additional complexity in our VSCS model (in comparison to the FSCS which does
not include the partitioning option) derives from the absence of the inter-state consistency
that characterizes the FSCS model. In the FSCS model, the optimal strategy (in terms of
terminating or resuming the search) is fully consistent with former states. Namely, if the
coalition’s optimal strategy in state s is to resume the search then it is also its strategy in any
state s′ leading to state s. Contrarily, in VSCS, reaching a potential state s where according
to the optimal strategy a speciﬁc member of coalition Ag should resume the search, does
not indicate that the optimal strategy for this coalition member is to resume the search in
all possible former states s′ (for whom state s is a potential future state). This characteristic

12
of the model prevents us from using a simple backward induction mechanism to infer the
coalition’s strategy as in the FSCS model. Similarly, we cannot infer the coalition’s best
structure based on the optimal structure found in former stages of a backward induction
based mechanism. We present the following example in order to illustrate this inference.
Example 3 Consider the following environment:
Environment 3 Three agents {a1,a2,a3} are evaluating the usefulness of a cooperative
search in a market associated with 3 types of opportunities {o1,o2,o3}, equally distributed
(p(oi) = 0.33, ∀i). The search costs are c(1) = 0.2, c(2) = 0.25 and c(3) = 0.4. The agents’
utilities are given in the following table:
Opportunities
a1
a2
a3
o1
0.1
0.8
0.6
o2
0.2
0.82
0.9
o3
1
1
1
Now consider the coalition Ag = {a1,a2,a3} when in states s = {o2} and s′ = {o1}.
Obviously state s′ is a possible former state of s, since when the coalition’s current state is
s′ and it encounters opportunity o2 its state changes to s (according to the state deﬁnition).
Thus, knowing the coalition’s optimal strategy when in state s is a precondition for ﬁnding
the coalition’s optimal strategy at state s′. A detailed calculation (according to Equations
1-6) reveals that coalition Ag’s optimal strategy when in state s, is having agents a1 and a2
resume their search (cooperatively) and agent a3 terminate its search (the overall expected
utility in this case is 2.15). Nevertheless, the fact that agents a1 and a2 resume their search
in state s, does not necessarily indicate (as in the FSCS model) that this is their optimal
strategy when in state s′. For example, in our environment, the maximum expected utility
that can be achieved in a conﬁguration by which agents a1 and a2 resume their search when
in state s′ is through coalition {a1,a2,a3}, yielding 1.975. However, a detailed calculation
(according to Equations 1-6) reveals that coalition Ag’s optimal strategy when in state s′, is
having agents a3 and a1 resume the search cooperatively, whereas agent a2 should terminate
the search (the overall expected utility in this case is 2.075).
Example 3, reﬂects an additional inherent difference between the optimal strategy struc-
ture in the model with the partitioning option (VSCS) and the one which enforces a ﬁxed
structure (FSCS), associated with environments where the agents in the searching coalition
have correlated preferences. The agents described in Example 3 have correlated preferences
(i.e., the agents always produce the same ordinal sorting of the opportunities available in the
market). A correlated preferences scenario in the FSCS model yields a stationary optimal
search strategy equivalent to the one used by a single agent [28]. According to this strat-
egy the search is constantly resumed until an opportunity associated with an ordinal ranking
equal or greater than a preset ranking is reached. Nevertheless, as illustrated in Example 3,
the coalition’s optimal strategy is not stationary in the VSCS model. Consequently when we
have the favorable option of dividing the coalition into sub-coalitions, where agents have
correlated preferences, we cannot apply such an analogy in order to simplify computational
aspects as in the FSCS model.
Furthermore, even in the case of fully homogeneous agents in the coalition, the use of
a single agent equivalent search (as in the FSCS model) is implausible, as illustrated in the
following example:
Example 4 Consider the following environment:

13
Environment 4 Three agents {a1,a2,a3} are evaluating the usefulness of a cooperative
search in a market associated with 2 types of opportunities {o1,o2}, equally distributed
(p(o1) = p(o2) = 0.5). The agents’ utilities are 0 for opportunity o1 and 0.5 for opportunity
o2. The search costs are c(1) = 0.25, c(2) = 0.3 and c(3) = 0.8.
The coalition’s optimal strategy (computed according to Equations 1-6), when starting the
search, is to have only two agents resume the search cooperatively and one agent terminate
the search. Therefore, despite the fact that the agents are fully homogeneous, we cannot
apply the single agent approach.
Overall, in spite of the calculation complexity of the proposed VSCS model, its advan-
tage in terms of the coalition’s performance is obvious as the following proposition states.
Proposition 1 The new cooperative search model (VSCS) is a generalization of both the
FSCS and SAS models and weakly dominates them in terms of the overall performance
achieved (i.e., may improve the overall expected utility but never worsen it in comparison to
the other two methods).
The proof of the proposition is quite straightforward. FSCS and SAS are both speciﬁc
cases of the VSCS where the coalition always chooses to resume the search in its original
structure or partitions into a set of coalitions of size one (i.e., single agents), respectively.
Therefore, if one of these other two search mechanisms produces the maximum utility for
a given environment, then the coalition using VSCS will adopt this structure. Notice that
between the two methods, FSCS and SAS, none generally dominates the other (but rather the
selection of the optimal one is environment-dependent, as demonstrated in [38]). The only
advantage of these two methods in comparison to the VSCS is in terms of the computational
complexity of extracting the optimal strategy, due to the speciﬁc strategy characteristics that
do not necessarily hold in the VSCS, as illustrated above. Nevertheless, in many common
environments even the extended calculation complexity associated with the VSCS optimal
strategy extraction can be overcome and reduced to a level similar to the one obtained for
the FSCS model, as we demonstrate in the next section.
5 Reducing Complexity in VSCS
For the general case, the VSCS optimal strategy extraction is exponential in the num-
ber of agents. In the remaining of the paper we focus on environments characterized by
ﬁxed or non-increasing marginal search costs (formally, described as: c(n+2)−c(n+1) ≤
c(n+1)−c(n),∀n ≥0) to illustrate how this computational complexity can be substantially
reduced to become polynomial in the number of agents (Lemma 2). The non-increasing
marginal search cost structure is highly common in MAS and can be found in a wide range
of environments [26,37]. This is typically due to the fact that most of the coalition overhead
is associated with communication. A typical example of this is where in each stage of the
search one of the coalition members (or a representative agent) conducts the search on behalf
of the coalition. The agent conducting the search needs to send the results to the other agents.
The other agents do not have to communicate among themselves, therefore the search cost
is at most linear and depends on the number of coalition members. In such environments, as
we prove and demonstrate in the following paragraphs, many of the computational complex-
ities induced by allowing coalition partitioning can be overcome. We begin by introducing
the following Lemma 1 for environments of this kind, which lays the foundations for our
algorithmic-based solution to the problem.

14
Lemma 1 In environments characterized by non-increasing marginal search cost, for any
state s of a coalition Ag there exists an optimal strategy that involves at most one sub-
coalition that resumes the search.
The above Lemma 1 suggests that any strategy in which the coalition partitions in a way
that two or more sub-coalitions (or individual agents) resume their search in the following
search round is weakly dominated by a strategy in which k (k ≤n) coalition members termi-
nate their search at the current stage while the remaining n−k coalition members continue
the search cooperatively. Though the proof below is quite detailed, it is intuitive. If the op-
timal strategy is to have two sub-coalitions searching in parallel then merging them into
one coalition for just one search stage and then having them return to their initial coalition
structures will obviously yield a better performance (since the expected utility will remain
the same whereas the aggregated cost of such a move can only decrease).
Proof Assume that according to the optimal strategy, coalition Ag partitions into at least
two sub-coalitions that resume the search separately. Here, two scenarios may apply: (1)
Each coalition, separately, draws the opportunity it encounters from distribution P. (2) There
is a list of inﬁnite opportunities o1,o2... that were taken randomly from distribution P. All
coalitions in their ith search stage encounter the same opportunity, oi. The probability that a
coalition will encounter a given opportunity is exactly the same in both scenarios. Moreover
each coalition’s utility depends merely on the other opportunities it encounters and doesn’t
depend on the other coalitions’ utility. Therefore each coalition has the same expected utility
in both scenarios.
Given this observation, compare the case in which after coalition Ag partitions into sub-
coalitions, each sub-coalition resumes the search according to the second scenario with the
case that all sub-coalitions of Ag jointly conduct this search. Obviously the sub-coalitions
can only beneﬁt from searching together since their search costs can only decrease in the
cooperative setting. However after conducting the search in the current search round each
sub-coalition can still make the same decisions as in the second scenario. This applies to all
cases where a coalition partitions into sub-coalitions that resume the search separately.
5.1 Optimal Cooperative Search Strategy
The immediate implication of Lemma 1 is that in each state the coalition needs to decide on
the agents that will continue the search cooperatively and the agents that will terminate the
search. Since all agents that resume the search conduct the search together, there is no need
for them to decide which coalition to join.
Our analysis suggests a simple mechanism to determine the agents who will coopera-
tively continue the search at each state for any given coalition. For this purpose we introduce
several supporting deﬁnitions and notations, applicable for coalition Ag when in state s:
– Vone(s,aj) - the additional expected utility (without incorporating the search cost) that
agent aj ∈Ag obtains from terminating its search after conducting one additional search
stage rather than terminating the search in the current state s. Thus:
Vone(s,aj) =
∑
Uj(o)≥Uj(osa j )
p(o)(Uj(o)−Uj(os
aj))
(8)
where os
aj is the opportunity, among those known to the coalition in state s, that maxi-
mizes agent aj’s utility.

15
– Aorder = (a′
1,...,a′
|Ag|) - the list of agents in Ag sorted in a descending order according to
their Vone values.
– Ar = {a′
1,...,a′
k}, At = {a′
k+1,...,a′
n} - a partition of the sorted list Aorder, where k ≤n is
the ﬁrst index in Aorder satisfying both conditions: (C1) ∑k
j=1Vone(s,a′
j) > c(k); and (C2)
̸ ∃i,i > k that satisﬁes
i
∑
j=k+1
Vone(s,a′
j) > c(i)−c(k)
(9)
If k does not exist then Ar = Ø and At = Ag.
In the above deﬁnitions the condition (C1) is used to ensure that the incremental ex-
pected utility encapsulated in one additional search stage is greater than the search cost of
sub-coalition Ar. The second condition (C2) ensures that the additional utility obtained from
moving any subset of At to Ar results in a non-positive expected net utility. At this point, we
have all the necessary tools to establish the following theorem.
Theorem 1 The optimal strategy of coalition Ag when in state s is to have the agents in Ar
resume the search cooperatively and have the rest of the agents in Ag (i.e., the agents in At)
terminate the search.
The general sketch of the proof for Theorem 1 begins by proving that it is sufﬁcient
to consider the calculated value Vone for determining the optimal partition (rather than use
the actual additional expected utility of each agent when using its optimal strategy given
the option to resume its search in future states). The proof for this is achieved by showing
that each agent’s marginal expected utility obtained from resuming the search decreases
throughout the search whereas the marginal cost of adding the agent to the coalition that
keeps searching can only increase throughout the search (given the search cost structure and
the fact that the coalition size throughout the search can only decrease). Therefore if it is
not beneﬁcial for the agent to resume its search in the current state given the Vone criteria
above then this is also the case when using the optimal future strategies. Next we prove
that the optimal strategy for all agents in Ar is to resume their search cooperatively as one
coalition. This is achieved by showing that under condition (C2), a scenario by which one
of the agent’s expected additional utility from resuming the search is smaller than its own
induced cost will not exist.
Proof We begin by proving that all agents in At should terminate the search. We assume
by way of contradiction that a subgroup A1 ⊆At, A1 ̸= /0 exists such that according to the
optimal strategy subgroup A1 should resume the search in state s. Let subgroup A2 (A2 ⊆
A1 and A2 ̸= /0), be a coalition of agents and let s′ be a state in which: (1) according to
the optimal strategy it is possible for A2 to reach s′ during the search. (2) According to
the optimal strategy A2 resumes the search when in s′ and terminates the search when in
all future states of s′. State s′ must exist since the strategy in s is for all agents in A1 to
resume the search and the strategy in a state in which each agent obtains the maximum
utility (i.e., when the coalition has found the most appealing opportunities in the market for
all its members) is for all agents to terminate the search. Since the number of states is ﬁnite
we can conclude that such a state exists. Since k = |Ar| satisﬁes condition C2, ∀i > k (and
thus for i = |A2|+k = |A2|+|Ar|), we obtain:
|A2|+|Ar|
∑
j=|Ar|+1
Vone(s,a′
j) ≤c(|A2|+|Ar|)−c(|Ar|)
(10)

16
Since a′|Ar|+1,...,a′|A2|+|Ar| are the |A2| agents with the highest Vone(s,a′
j) values in At, then
the following holds:
∑
aj∈A2
Vone(s,aj) ≤
|A2|+|Ar|
∑
j=|Ar|+1
Vone(s,a′
j)
(11)
From 10 and 11 we obtain:
∑
aj∈A2
Vone(s,aj) ≤c(|A2|+|Ar|)−c(|Ar|)
(12)
Given a state s, a coalition Ag and an arbitrary future state s′ that Ag can reach during its
search, the following is satisﬁed: Vone(s′,aj) ≤Vone(s,a j), ∀a j ∈Ag. This claim stems di-
rectly from the calculation of Vone(s,aj) in Equation 8 and from the fact that Uj(os′
a j) ≤
Uj(os
aj), ∀aj ∈Ag. From this claim and Equation 12 we ﬁnd that
∑
aj∈A2
Vone(s′,aj) ≤c(|A2|+|Ar|)−c(|Ar|)
(13)
Since all agents in A2 terminate the search in all future states of s′, the left term in Equation
13 is the additional expected utility of a search, if all gents in A2 resume the search when in
s′. The term on the right hand side of Equation 13 is a lower bound to the cost (of a search in
state s′) when adding all agents in A2 to the coalition that resumes the search. This is because
at state s′ at most |Ar| agents will resume the search in addition to the agents in A2. This
along with the fact that the marginal cost does not increase suggests that the cost of adding
the agents in A2 to the coalition that resumes the search is at least c(|A2| + |Ar|) −c(|Ar|).
Therefore the overall utility of coalition Ag would not increase if all agents in A2 were to
resume the search, which is a contradiction.
Now we only have to prove that according to the optimal strategy all agents in Ar re-
sume the search at state s. We assume by way of contradiction that according to the optimal
strategy there is a coalition A3 ⊆Ar, A3 ̸= /0 that terminates the search at state s. We use
A4 to denote the complementary set (i.e., according to the optimal strategy the agents in Ar
resume the search when in state s), A4 = Ar \A3.
Since |Ar| is the ﬁrst index that satisﬁes both conditions C1 and C2, |A4| does not satisfy
either C1 or C2. Assume k = |A4| does not satisfy C1. From this assumption and the fact
that k = |Ar| satisﬁes C1 we obtain:
|Ar|
∑
j=|A4|+1
Vone(s,a j) > c(|Ar|)−c(|A4|)
(14)
Since agents a′|A4|+1...a′|Ar| are |Ar| −|A4| = |A3| agents with the lowest Vone values in Ar,
the following holds:
∑
aj∈A3
Vone(s,aj) ≥
|Ar|
∑
j=|A4|+1
Vone(s,a′
j)
(15)
From 14 and 15 we obtain:
∑
aj∈A3
Vone(s,aj) > c(|Ar|)−c(|A4|)
(16)
On one hand the right term in Equation 16 gives an upper bound to the cost of a search
in state s for adding all agents in A3 to the coalition that resumes the search. This is because

17
all agents in A4 resume the search. Therefore the size of the coalition that resumes the search
is at least |A4|. From this and the fact that the marginal cost does not increase, the cost of
adding the agents in A3 to the coalition that resumes the search is at most c(|Ar|)−c(|A4|).
On the other hand the left term in Equation 16 gives a lower bound to the additional expected
utility of a search in state s, if the agents in A3 resume the search (since the expected utility
according to the optimal search strategy is at least the expected utility when agents in A3
conduct a single search). Therefore the expected utility if the agents in A3 resume the search
is higher than the search cost of adding the agents in A3 to the coalition that resumes the
search. Thus the overall expected utility of coalition Ag will increase, if all agents in A3
resume the search. This is a contradiction to the assumption made.
Now assume k = |A4| does not satisfy C2. As a result ∃i > |A4| satisfying:
i
∑
j=|A4|+1
Vone(s,a′
j) > c(i)−c(|A4|)
(17)
Let A5 be the set of i −|A4| agents with the highest Vone values in At ∪A3. Since Ag =
A4 ∪At ∪A3, at most |A4| agents can have a higher utility than |A5| members, i.e.,
∑
aj∈A5
Vone(s,aj) ≥
i
∑
j=|A4|+1
Vone(s,a′
j)
(18)
From 17 and 18 we obtain
∑
a j∈A5
Vone(s,aj) > c(i)−c(|A4|)
(19)
Thus for similar considerations as above, we can derive that the overall expected utility of
coalition Ag will increase, if all the agents in A5 resume the search. Again this is a contra-
diction to the initial assumption made.
Before presenting an algorithm that is based on Theorem 1 for computing the coalition’s
optimal strategy we illustrate this theorem with the following example:
Example 5 Suppose there are 4 agents {a1,a2,a3,a4} conducting the search in a market
associated with 4 types of opportunities {o1,o2,o3,o4}.The search cost associated with a
coalition of n agents is given by c(n) = 0.4ln(n + 1). The utilities perceived by each agent
from each opportunity as well as the distribution of the opportunities are given in the fol-
lowing table:
Opportunities
probability
a1
a2
a3
a4
o1
0.2
5
4
7
8
o2
0.1
3
4.4
8.5
7.5
o3
0.1
9
5
3
8.5
o4
0.6
10
4
6
5
In order, for example, to ﬁnd the optimal strategy for the coalition Ag = {a1,a2,a3,a4}
when the only known opportunity is o1 (i.e., s = {o1}) we ﬁrst need to compute the value
Vone({o1},aj) ∀aj ∈Ag:
Vone({o1},a1) = p(o3)(U1(o3)−U1(o1))+ p(o4)(U1(o4)−U1(o1)) = 0.1(9−5)+0.6(10−
5) = 3.4
Vone({o1},a2) = p(o2)(U2(o2)−U2(o1))+ p(o3)(U2(o3)−U2(o1)) = 0.1(4.4−4)+0.1(5−
4) = 0.14
Vone({o1},a3) = p(o3)(U3(o3)−U3(o1)) = 0.1(8.5−7) = 0.15

18
Vone({o1},a4) = p(o2)(U4(o2)−U4(o1)) = 0.1(8.5−8) = 0.05
Consequently, the sorted agents list is Aorder = (a′
1,a′
3,a′
2,a′
4) = (a1,a3,a2,a4).
We start by checking whether the two conditions C1 and C2, are satisﬁed for k = 1 and
increase the value of k whenever one of the conditions is not satisﬁed. The process is sum-
marized in the following table:
Condition C1
Condition C2
k = 1
satisﬁed: Vone({o1},a′
1) = Vone({o1},a1) =
3.4 > c(1) = 0.277
not satisﬁed since Equation 9 holds for i = 3 (as Vone({o1},a′
2) +
Vone({o1},a′
3) = Vone({o1},a3) + Vone({o1},a2) = 0.14 + 0.15 =
0.29 > c(3)−c(1) = 0.277).
k = 2
satisﬁed:Vone({o1},a′
1) + Vone({o1},a′
2) =
3.4+0.15 = 3.55 > c(2) = 0.439
not satisﬁed since Equation 9 holds for i = 3 (as Vone({o1},a′
3) =
0.14 > c(3)−c(2) = 0.115)
k = 3
satisﬁed: Vone({o1},a′
1) + Vone({o1},a′
2) +
Vone({o1},a′
3) = 3.4+0.15+0.14 = 3.69 >
c(3) = 0.554.
satisﬁed
k = 4
satisﬁed
satisﬁed
Since k = 3 is the ﬁrst index that satisﬁes both conditions C1 and C2, we conclude
based on Theorem 1 that {a1,a2,a3} should resume the search and {a4} should terminate
the search.
5.2 Computation Algorithm
Based on Theorem 1 we present algorithm 1 for computing the optimal search strategy for
any coalition Ag given its current state s. The signiﬁcance of the algorithm is that it enables
Algorithm 1 Computing the optimal strategy for coalition Ag when reaching state s
Input: U = {U1,...,U|Ag|} - coalition members’ utility functions; s - the coalition’s current state, O - set of
potential opportunity types in the market; p(o) - opportunity types’ probability function; c(n) - search
cost function;
Output: (Ar, At) - the sub-coalition that needs to resume the search and the complimentary set of agents
that needs to terminate the search at the current stage, respectively.
1: Generate the sorted descending set Aorder = (a′
1,...,a′
|Ag|) by computing Vone(s,a j) ∀a j ∈Ag using Equa-
tion 8
2: size ⇐0;V addCoalition
one
⇐0
3: for index = 1 to |Aorder| do
4:
V addCoalition
one
⇐V addCoalition
one
+Vone(s,a′
index)
5:
if V addCoalition
one
> c(index)−c(size) then
6:
size ⇐index ; V addCoalition
one
⇐0
7:
end if
8: end for
9: return ({a′
1,...,a′
size},{a′
size+1,...,a′
|Ag|})
us to extract the optimal strategy for a coalition without considering all possible states. As
stated in Lemma 2 the computational complexity of the proposed algorithm depends merely
on the number of market opportunities and it is polynomial in the market opportunities and
agents.

19
Lemma 2 Algorithm 1 returns the optimal strategy of coalition Ag at state s in a polynomial
time of |O| and in |Ag|.
Proof Let k be the ﬁrst index that satisﬁes both conditions C1 and C2. If such a k does not
exist, algorithm 1 returns Ar = /0 and At = Ag, since the condition in step 5 is not satisﬁed for
any value of the variable index. If such a k exists we prove that at the end of algorithm 1, the
value stored in size is equal to k. In order to prove this we ﬁrst prove that the condition in step
5 is satisﬁed when index = k. Namely, we prove that V addCoalition
one
> c(index)−c(sizeind=k),
where sizeind=k denotes the current size of the coalition that resumes the search (where
index = k and the algorithm performs step 5).
In order to prove that V addCoalition
one
> c(index)−c(sizeind=k), where index = k we consider
two possible scenarios: (1) The current size of the coalition that resumes the search is 0, i.e.,
sizeind=k = 0; and (2) The complementary case, i.e., where sizeind=k > 0. In the ﬁrst scenario
we know that V addCoalition
one
= ∑k
j=1Vone(s,a′
j) and c(index) −c(sizeind=k) = c(k) −0 = c(k).
Since k satisﬁes condition C1, it follows that the condition in step 5 is satisﬁed.
In the second scenario (sizeind=k > 0) we assume by way of contradiction that V addCoalition
one
≤
c(index)−c(sizeind=k). The fact that k satisﬁes condition C2 and V addCoalition
one
≤c(index)−
c(sizeind=k), implies that sizeind=k satisﬁes condition C2. Moreover, since the set of agents
we add in step 6 to the coalition that resumes the search always satisﬁes the condition in step
5, sizeind=k also satisﬁes condition C1. In conclusion, we have shown that sizeind=k satisﬁes
both conditions C1 and C2 which contradicts the fact that k is the ﬁrst index which sat-
isﬁes both conditions C1 and C2. Consequently, in both cases V addCoalition
one
> c(index) −
c(sizeind=k) holds. Therefore in step 6 the algorithm increases the size of the coalition
that resumes the search to k. Furthermore, since k satisﬁes condition C2, the condition
V addCoalition
one
> (index) −c(sizeind=k) given in step 5 is not satisﬁed for index > k. There-
fore the algorithm does not continue to increase the size of the coalition that resumes the
search and its size remains k.
Now we only need to prove that algorithm 1 is polynomial in |O| and in |Ag|. The step
which affects the time complexity of the algorithm the most is step 1. This step requires
computing Vone(s,a′
j) for all agents. The complexity of computing Vone(s,a′
j) for a single
agent requires considering all opportunities in O and its complexity is the order of |O|.
Consequently the complexity of computing Vone(s,a′
j) for all agents is the order of |O||Ag|.
Finally the complexity of sorting the agents in Ag in order to generate Aorder is the order of
|Ag|log(|Ag|). The loop in step 3 is performed |Ag| times, where each iteration’s complexity
(the complexity of steps 4-6) is constant. Consequently, the global complexity of algorithm
1 is the order of |O||Ag|+|Ag|log(|Ag|).
5.3 Value Calculation
Algorithm 1 enables the extraction of the coalition’s optimal partitioning-enabled coop-
erative search strategy (VSCS). However, alongside knowing how to conduct the search
optimally, the agents might also be interested in having efﬁcient computational means for
calculating the performance (i.e., the expected overall utility) of the coalition, V ∗(Ag,s),
when searching cooperatively using the optimal VSCS strategy. In particular, having the
ability to calculate V ∗(Ag,s) enables and facilitates future payoff division and coalition sta-
bility mechanism design related research in the cooperative search domain. Obviously in this
case the calculation complexity increases in comparison to the case where only the optimal
strategy is needed. Nonetheless, we manage to supply this functionality with the complexity

20
(similar to the FSCS model) solely dependent on the number of states in SAg rather than on
the number of possible sub-coalitions.
Given state s and coalition Ag we use resume(Ag,s) (terminate(Ag,s)) to denote the
agents that resume (terminate) the search according to algorithm 1, respectively. The value
V ∗(Ag,s) can be computed using:
V ∗(Ag,s) = Vr(resume(Ag,s),sres)+Vt(terminate(Ag,s),ster)
(20)
where sres = state(resume(Ag,s),s) and ster = state(terminate(Ag,s),s). We use algorithm
2 to calculate Vr(resume(Ag,s),sres) in the above Equation 20. This algorithm makes use of
the following equation which is obtained by replacing V ∗(Ag,state(Ag,s∪{o})) in Equation
4 with the right hand side of Equation 20:
Vr(Ag,s) =
∑o∈Os
improve p(o)(Vr(A′
r,s′
res)+Vt(A′
t,s′
ter))−c(|Ag|)
∑o∈Os
improve p(o)
(21)
where s′ = state(Ag,s∪{o}), A′
r = resume(Ag,s′), A′
t = terminate(Ag,s′), s′
res = state(A′
r,s′)
and s′
ter = state(A′
t,s′).
Algorithm 2 ComputeVResum(Ag,s) - computing the value of resuming the search when in
a given state s, Vr(Ag,s)
Input: s - current state; Ag - coalition resuming search; U = {U1,...,U|Ag|} - coalition members’ utility
functions; O - set of potential opportunity types in the market; p(o) - opportunity types’ probability
function; c(n) - search cost function;
Output: Vresume - the collection of stored Vr(Ag,s) values
1: Os
improve ⇐all opportunities that change Ag’s current state
2: for all o ∈Os
improve do
3:
s′ ⇐state(Ag,s∪{o}), A′
r ⇐resume(Ag,s′)
4:
A′
t ⇐terminate(Ag,s′), s′
res ⇐state(resume(Ag,s′),s′)
5:
if Vr(A′
r,s′
res) /∈Vresume then
6:
ComputeVResum(A′
r,s′
res)
7:
end if
8: end for
9: Compute Vr(Ag,s) using Equation 21
10: Store Vr(Ag,s) in its corresponding place in Vresume
11: return Vresume
The computation of Vr(resume(Ag,s′),s′
res) is achieved by calling algorithm 2 recur-
sively, where each value calculated by the algorithm is stored in the collection Vresume.
This prevents redundant calculations where the same values are needed when considering
different sequences of opportunities (see step 5 in the algorithm).
Given a coalition Ag and a state s, we prove that the number of coalitions and states
whose values are calculated by algorithm 2 (and stored in Vresume) can be bounded by
|SAg|.
Lemma 3 Given coalition Ag and state s, the number of coalitions and states calculated by
algorithm 2 and stored in Vresume during the calculation of Vr(Ag,s) can be bounded by
|SAg|.
Proof Let |SAg| be the collection of all possible states for coalition Ag. For each s′ ∈SAg we
denote the sub coalition of coalition Ag that resumes the search in s′ by As′
r = resum(Ag,s′)

21
and the state of the coalition that resumes the search by ss′
r = state(As′
r ,s′). We show that for
each coalition A′
g and state s′ for which the Vr(A′
g,s′) value was stored during the algorithm
execution, there exists a state s1 ∈SAg such that (1) A′
g = As1r ; and (2) s′ = ss1r . Therefore the
size of the collection Vresume is bounded by |SAg|. Given coalition A′
g and state s′ for which
the algorithm calculates a value in step 6, let Os′
stay be the set of opportunities that does not
change coalition A′
g’s current state. The opportunities in Os′
stay are the only opportunities that
the coalition could have encountered until the current search stage, otherwise the current
state would not be s′. In order to create s1 we extend s′ in a way that s1 also includes the
opportunities that maximize the rest of the agents’ (Ag \A′
g) utilities when using the oppor-
tunities in Os′
stay, s1 = s′ ∪state(Ag \A′
g,Os′
stay). In order to prove that s1 satisﬁes condition (1),
we ﬁrst prove that A′
g ⊆resume(s1,Ag). We assume by way of contradiction that ∃A1 ⊆A′
g,
A1 ̸= /0 such that its strategy in s1 is to terminate the search. We use A2 to denote the agents
in A′
g that resume the search in s1, i.e., A2 = A′
g \A1. Since A′
g’s strategy in state s′ according
to algorithm 1 is to have all its agents resume the search (i.e., A′
g = resume(A′
g,s′)), we attain
from Theorem 1 that:
∑
a j∈A1
Vone(aj,s′) > c(|A′
g|)−c(|A2|)
(22)
From the deﬁnition of s1 it follows that Uj(os′
aj) = Uj(os1aj), ∀a j ∈A′
g. Therefore:
∑
a j∈A1
Vone(aj,s′) = ∑
aj∈A1
Vone(a j,s1)
(23)
From Equations 22 and 23 we obtain:
∑
aj∈A1
Vone(aj,s1) > c(|A′
g|)−c(|A2|)
(24)
The term on the left hand side of Equation 24 provides a lower bound for the additional
expected utility of continuing the search when in state s1, if all the agents in A1 resume
the search in this state. The term on the right hand side of Equation 24 provides an upper
bound for the search cost when adding the agents in A1 to the coalition that resumes the
search. This is because the size of the coalition that resumes the search in state s1 is at
least |A2| = |A′
g|−|A1|. Therefore the additional utility that can be obtained if A1 members
resume the search is greater than the additional search cost. As a result, the coalition’s overall
utility will increase, if A1 resumes the search in s1, which is a contradiction to the initial
assumption.
Next, we prove that resume(Ag,s1) ⊆A′
g. We assume by way of contradiction that ∃A3 ⊆
Ag \ A′
g, where a sub-coalition A3 ̸= /0 resumes the search in state s1 and all other agents in
Ag (that are not in A3 or in A′
g) terminate the search. The fact that algorithm 2 calculates the
A′
g value in state s′ in step 6, implies that all other agents, including A3’s members, terminate
their search earlier (as the algorithm calculates the value of the coalition that resumes the
search). Therefore a state s2 (a former state of s′) exists such that all members of A3 reach
s2, whereas a subset of A3 members, denoted A4, terminate the search in state s2. Since all
agents in A3 resume the search in state s1, all agents in A4 also resume the search. From
Theorem 1 we obtain that
∑
a j∈A4
Vone(s1,aj) > c(|A′
g|+|A3|)−c(|A3 \A4|+|A′
g|)
(25)
State s1 includes the opportunities that maximize A4 members’ utilities for all the oppor-
tunities the coalition Ag could encounter until coalition A′
g reaches state s′ including the

22
opportunities in s2. Thus Uj(os1aj) ≥Uj(os2aj), ∀aj ∈A4. This, along with the way Vone was
deﬁned, guarantee the following:
∑
aj∈A4
Vone(s2,aj) ≥∑
aj∈A4
Vone(s1,a j)
(26)
From Equations 25 and 26 we ﬁnd that
∑
aj∈A4
Vone(s2,aj) > c(|A′
g|+|A3|)−c(|A3 \A4|+|A′
g|)
(27)
The right term of Equation 27 is an upper bound for the cost of a search when in state s2
if adding the agents from A4 to the coalition that resumes the search when in state s2. This
is because the size of the coalition that resumes the search in s2 is at least the coalition
size when in s1 (there are at least |A′
g|+|A3 \A4| that resume the search in state s2) and the
marginal costs do not increase. The left term is a lower bound to the additional expected
utility of coalition A4 for a search in state s2. Therefore the overall utility will increase if A4
resumes the search in s2, which is a contradiction. As a result s1 satisﬁes condition (1). The
fact that state s1 satisﬁes condition (2) follows directly from condition (1) and the way s1 is
constructed.
As stated in Lemma 3 the usefulness of algorithm 2 is in the ability to extract a coalition’s
optimal strategy, given the partitioning capability, without considering all possible coalitions
(which is known to be exponential). Moreover the fact that we can determine the coalition
strategy without computing the coalition value, can signiﬁcantly reduce the complexity of
algorithm 2. This is because there are future states that we may not reach during the search.
For example if the coalition’s optimal strategy in a given state is to have all agents terminate
the search then the computation of V ∗(Ag,s) is immediate (equals to Vt(Ag,s)) and does not
depend on any future state of s.
Finally we note that the superiority of the VSCS model over the FSCS model (in envi-
ronments with marginal cooperative search costs) is when the agents are heterogenous (even
when agents have correlated preferences). However, as the following lemma states, when the
agents are fully homogenous the coalition’s optimal strategy returned by the VSCS model
is equal to the coalition’s optimal strategy returned by the FSCS model.
Lemma 4 Given state s and coalition Ag, if all agents are fully homogeneous then both
VSCS and FSCS models return the same optimal strategy.
Proof Since all agents are homogeneous, they share the same Vone(s,a j) values for each
state s. We consider the two following cases: (1) The agent’s marginal utility for conduct-
ing a single search exceeds the agent’s average share of the coalition’s search cost, i.e.,
Vone(s,aj) > c(|Ag|)/|Ag|; and (2) The complementary case, i.e., Vone(s,a j) ≤c(|Ag|)/|Ag|.
In the former case, condition C2 is not satisﬁed for each ind = 1,...,|Ag| (since the marginal
costs are non-increasing). Therefore according to Theorem 1 the optimal strategy is to have
all agents resume the search at state s. Moreover, the overall additional utility of the coali-
tion’s members from conducting a single search exceeds the coalition’s search cost since
Vone(s,Ag) = ∑
|Ag|
j=1Vone(s,aj) > ∑
|Ag|
i=1 c(|Ag|)/|Ag| = c(|Ag|). Therefore the optimal strategy
according to the FSCS model is to have all agents resume the search at state s (the same
search strategy as in VSCS model).
In the latter case where (Vone(aj,s) ≤c(|Ag|)/|Ag|), no index satisﬁes condition C1.
Therefore all agents terminate the search at state s in the VSCS model. Moreover the overall
additional utility of the coalition’s members from conducting a single search does not exceed

23
the coalition’s search cost, Vone(s,Ag) = ∑
|Ag|
j=1Vone(s,a j) ≤∑
|Ag|
i=1 c(|Ag|)/|Ag| = c(|Ag|). As
for the FSCS, a proof that the optimal coalition’s search strategy in such scenarios when
reaching state s is to have all agents terminate the search is given in [26].
6 Illustrative Comparison
In this section we exemplify certain properties of the VSCS model and illustrate the differ-
ences in the optimal strategy structure and in the overall performance between the proposed
VSCS model and the FSCS and SAS models. Notice that given Proposition 1 the superiority
of the VSCS over the FSCS and the SAS models is unquestionable. Therefore our goal is
mainly to demonstrate different aspects of the optimal search strategies in each of the differ-
ent search methods. Finally after demonstrating these aspects we illustrate the advantages
of the proposed model over currently known cooperative and individual search techniques,
using an environment based on authentic settings. These settings contain thousands of op-
portunity types. Nonetheless, with the use of the algorithms that were introduced in the
previous section, we can easily extract the coalition’s optimal strategy, demonstrating the
applicability of the proposed search method.
6.1 Demonstration of the Search Process in the VSCS model
We begin by demonstrating the general search process that takes place in the VSCS model
using the following synthetic environment.
Environment 5 A coalition of 5 agents Ag = {a1,a2,a3,a4,a5}, searching for opportuni-
ties in a marketplace characterized by three types of opportunities uniformly distributed.
The agents’ utility for the different opportunities as well as the coalition’s search cost as a
function of its size are given in table below:
The search cost of a single agent is c(1) = 0.22, a coalition of 2 agents is associated with
a search cost c(2) = 0.25, a coalition of 3 agents is associated with a search cost c(3) = 0.4,
a coalition of 4 agents is associated with a search cost c(4) = 0.55 and a coalition of 5
agents is associated with a search cost c(5) = 0.56.
Opportunities
a1
a2
a3
a4
a5
o1
1
1
2
2
2
o2
0.5
0.5
0.5
0.5
2
o3
2
2
1
1
2
Coalition size
1
2
3
4
5
Search Cost ($)
0.22
0.25
0.4
0.55
0.56
Note that the marginal cooperative search cost in Environment 5 has a mixed structure,
since on the one hand c(3)−c(2) > c(2)−c(1) and on the other c(5)−c(4) < c(4)−c(3).
Therefore, we expect the coalition to possibly partition itself to more than one active sub-
coalition throughout cooperative search.
Figure 1 shows all potential coalition structures and states that can occur during the
search process that takes place in Environment 5 (when the coalition uses its optimal strat-
egy). Each active coalition and its current state is represented by an oval. The squares detail
the coalition members that terminate the search and the opportunities that each of them ex-
ploits. For example, the optimal strategy of coalition {a1,a2,a3,a4,a5} at the beginning of
its search, where it encounters opportunity o1 is to have agents a3, a4 and a5 terminate the

24
search (as shown in the square) and agents {a1,a2} resume the search cooperatively, where
their current state is o1 (as shown in the oval). To simplify the ﬁgure we do not include
transitions (i.e., the ﬁnding of new opportunities) that do not change the coalition’s state. As
can be noticed from Figure 1, the coalition exploits the ability to partition itself in order to
improve its expected performance. For example agents a1, a2 and a5 terminate their search
after they encounter opportunity o3, which maximizes their utility. This reduces the coali-
tion size and yields a smaller coalition search cost for the remaining search. Moreover the
coalition can reduce its search cost by partitioning itself into sub-coalitions which conduct
the search separately. The partitioning can occur in each stage of the search and not neces-
sarily at the beginning of the search (before the coalition starts accumulating opportunities).
Indeed as depicted in Figure 1 the optimal strategy of coalition {a1,a2,a3,a4,a5} is to par-
tition into two sub coalitions {a1,a2} and {a3,a4} after it encounters o2 (when having no
opportunities to begin with).
{ a1,a2,a3,a4,a5}
{ }
{a1,a2}
{o1}
{a1,a2}
{o2}
{a3,a4}
{o2}
{ }
{ }
{a3,a4}
{o3}
a3-o1
a4-o1
a5-o1
o1
o2
a5-o2
a1-o3
a2-o3
a5-o3
a1-o3
a2-o3
o3
a3-o1
a4-o1
a1-o3
a2-o3
a3-o1
a4-o1
o3
o1
o3
o1
o1
o3
Fig. 1 The coalition’s optimal structure and its current state during the search process, when the marginal
cooperative search cost has a mixed structure.
Next we demonstrate the search process, when the marginal cooperative search cost has
a non-increasing structure (as used for the analysis given in section 5).
Environment 6 A coalition of 4 agents Ag = {a1,a2,a3,a4}, searching for opportunities
in a marketplace characterized by three types of opportunities uniformly distributed. The
search cost associated with n agents conducting the search is c(n) = 0.4 ∗ln(n + 1). The
agents’ utility from the different opportunities are given in the following table:
Opportunities
a1
a2
a3
a4
o1
1
10
4
3
o2
3
9.3
12
1
o3
10
9.4
2
9
Similar to Figure 1, Figure 2 shows the possible coalition structures that can occur dur-
ing the search process. Here (according to Lemma 1), in each stage of the search only one
sub coalition (at most) resumes the search. Moreover, as this ﬁgure illustrates, when the
coalition members terminate their search, they do not necessarily exploit the same oppor-
tunities. When the sub-coalition {a2,a3} (which is the reduced coalition after the grand
coalition encounters opportunity o3) encounters opportunity o2 it terminates its search while

25
its members exploit different opportunities (agent a2 exploits opportunity o3 and agent a3
exploits opportunity o2).
{ a1,a2,a3,a4}
{ }
{a1,a3,a4}
{o1}
{a2,a1,a4}
{o2}
{a2,a3}
{o3}
{ }
a2-o1
o2
a3-o2
a1-o3
a4-o3
a3-o2
o3
a1-o3
a4-o3
a2-o3
a1-o3
a4-o3
a3-o2
a2-o3
o1
o3
o1
o1
o2
{a1,a4}
o3
{o2,o1}
a1-o3
a4-o3
{a3}
{o1}
a2-o1
a2-o1
o3
o2
{ }
a3-o2
o2
Fig. 2 The coalition’s optimal structure and its current state during the search process in Environment 6
(where the marginal cooperative search cost has a non-increasing structure).
Finally we demonstrate the inﬂuence of the coalition’s partitioning capability in the
VSCS model on the coalition’s expected overall utility. In order to do so we consider the
following environment:
Environment 7 A coalition of 3 agents Ag = {a1,a2,a3}, conducting the search in a market
associated with 3 types of opportunities. The search cost is given by c(n) = 0.2 + 0.02n3.
The agents’ utility from the different opportunities are given in the following table:
Opportunities
probability
a1
a2
a3
o1
0.989
1
2
8
o2
0.001
270
270
1
o3
0.01
8
1
30
Figure 3 depicts the expected coalition’s overall utility with respect to the coalition’s parti-
tion at the beginning of the search (i.e., the ﬁrst search stage, before the agent knows about
any of the opportunities), assuming all the sub-coalitions created use their optimal strategy.
Here, we can see that the coalition’s expected utility is also inﬂuenced by the agents con-
stituting the sub-coalitions and not only by the size of the sub-coalitions. For example, the
three partitions {{a1},{a2,a3}}, {{a2},{a1,a3}} and {{a3},{a1,a2}} of the coalition di-
vide into two sub coalitions, one with 2 agents and the other with 1 agent yielding different
expected overall utilities. From this ﬁgure, we learn that the partition of the coalitions that
yields the maximum expected utility is {{a1,a2},{a3}}.
6.2 Inﬂuence of Environment Parameters
An important parameter that affects the performance (in terms of the expected utility) of
the searching coalition in the VSCS model (as well as in the FSCS model) is the marginal
search cost associated with each increase in the coalition’s size. In order to demonstrate this
affect we use the following environment:

26
5
15
25
35
45
55
{a1}{a2}{a3} {a1,a2}{a3} {a3,a2}{a1} {a2}{a1,a3}
{a1,a2,a3}
Fig. 3 The overall utility as a function of the initial partition at the beginning of the search.
Environment 8 A coalition of ﬁve agents, Ag = {a1,...,a5}, searching for opportunities in
a marketplace characterized by ten types of opportunities o1,...,o10 uniformly distributed.
The ﬁve agents are heterogeneous with respect to the way they evaluate each opportunity
type and their utility functions can be described using the function:
Uj(oi) =
(
7
i = j, j +5
1
otherwise.
(28)
The search cost of the coalition is assumed to be equal to the sum of some inter-
action cost (the cost of locating a seller and communicating with her to learn her of-
fer) and communication cost (for transferring the search results to the other n-1 agents),
i.e., c(n) = cinteraction + ccommunication ∗(n −1), where cinteraction = 1 (i.e., ccommunication is the
marginal cost when increasing the coalition size by one).
Figure 4 depicts the overall expected utility when using the three search methods (VSCS,
FSCS and SAS) as a function of the communication cost ccommunication (notice that the agents’
performance is not affected by this value in SAS, as it does not require any communica-
tion between the agents). As expected, VSCS dominates both methods for any ccommunication
value. From the graph we observe that the higher the value of ccommunication the greater the
relative improvement achieved when using the VSCS model in comparison to FSCS. This
observation can be explained by the additional reduction achieved in the search cost as a
result of resuming the search in a reduced coalition structure instead of keeping the original
coalition’s size. Moreover in the extreme case, where there is no overhead associated with
adding additional members to the coalition (i.e., ccommunication = 0), the VSCS performance
converges to the one exhibited by the FSCS. This is due to the fact that in this case the coali-
tion does not beneﬁt from reducing the search cost as a result of reducing the coalition size
(since adding additional agents does not change the coalition’s search cost). Consequently
the coalition’s optimal search strategy is to keep its original structure. On the other hand
as ccommunication decreases, a higher improvement is achieved by using the VSCS model in
comparison to the SAS model. In the extreme case where the communication cost of adding
an additional agent to the coalition that resumes the search is equal to the search cost of
an agent searching individually, ccommunication = cinteraction, the VSCS converges to the SAS
model’s performance.
As discussed in the previous sections, the ability to partition the coalition results in ex-
tended searches. Figure 5 emphasizes the differences in the search extent between the FSCS

27
6
10
14
18
22
0
0.2
0.4
0.6
0.8
1
Communication Cost
Expected Utility
VSCS
FSCS
SAS
Fig. 4 Overall expected utility for the different models in Environment 8
and the VSCS methods. This ﬁgure makes use of Environment 8. In this case, we simulated
the search of the initial coalition and kept track of the number of search rounds executed
in each method (ccommunication = 0.5). Each column in the graph represents the percentage
of coalitions (out of 1000 simulation runs) that lasted the speciﬁc search round (measured
on the horizontal axis) in the VSCS where the internal division maps the coalition size at
that search step as a percentage of the total coalitions. The line curve depicts the appropriate
percentage of coalitions continuing the search at that search stage in FSCS. As expected,
the adaptive nature of the VSCS allows the coalition to maintain the search far beyond the
point where the FSCS coalitions ﬁnd the option of resuming the search to be non-beneﬁcial
and thus terminate their search. Consequently, in VSCS the overall number of opportunities
encountered is greater than in FSCS.
0%
20%
40%
60%
80%
100%
1
3
5
7
9
11
13
15
17
19
Size 5
Size 4
Size3
Size2
Size1
FSCS
Fig. 5 Extent of search according to the different methods
Similar to the FSCS model, the level of heterogeneity in the utility functions of the dif-
ferent coalition members highly affects the coalition’s performance (in terms of the expected
utility achieved). In order to demonstrate this we use the following environment.
Environment 9 A coalition of four agents, Ag = {a1,a2,..,a4}, searching for opportunities
deﬁned by four attributes, B1, B2, B3 and B4, where each attribute has only two possible
values (1,2) with an equal probability. The utility functions associated with agents a1, a2,

28
a3 and a4 are:
U1(o) = 4(α∗B1 + 1−α
3 ∗B2 + 1−α
3 ∗B3 + 1−α
3 ∗B4))
U2(o) = 4∗( 1−α
3 ∗B1 +α∗B2 + 1−α
3 ∗B3 + 1−α
3 ∗B4)
U3(o) = 4∗( 1−α
3 ∗B1 + 1−α
3 ∗B2 +α∗B3 + 1−α
3 ∗B4)
U4(o) = 4∗( 1−α
3 ∗B1 + 1−α
3 ∗B2 + 1−α
3 ∗B3 +α∗B4)
Thus the deviation of the parameter α from the value 0.25 (in which the agents are fully ho-
mogeneous) indicates the level of the agents’ heterogeneity. The search cost of the coalition
is equal to the sum of the interaction cost and the communication cost of reporting the search
results to the other n −1 agents as before, i.e., c(n) = cinteraction + ccommunication ∗(n −1),
where cinteraction = 0.75 and ccommunication = 0.3.
Figure 6 depicts the overall expected utility in each of the search methods as a parameter
of α (which relates the similarity between the utility functions of the agents constituting
the coalition). As illustrated in the ﬁgure, the greater the heterogeneity level (the larger the
deviation of the parameter α from the value 0.25) the higher the improvement achieved
when using VSCS in comparison to FSCS. Note that for α = 0.25, where the agents are
fully homogenous, the overall expected utility of FSCS and VSCS models are equal. This
result is consistent with Lemma 4.
5.4
5.8
6.2
6.6
7
0.25
0.4
0.55
0.7
0.85
1
similarity level  (α)
Expected Utility
FSCS
SAS
VSCS
Fig. 6 Overall expected utility as a parameter of the similarity level between the agents’ utility functions
6.3 The VSCS Model in an Authentic Environment
While the previous illustrations used synthetic environments for emphasizing various as-
pects of the proposed model, we wish to illustrate the use of the proposed VSCS model in
authentic environment. For this purpose, we formed the following Environment 10 based on
opportunities collected over the internet and utility functions that were deﬁned by human
searchers we interviewed.
Environment 10 The searching coalition consists of seven agents interested in buying a
calculator. Each agent is associated with a different utility function, based on typical at-
tributes of calculators (price, handled\non-handled, display type, scientiﬁc functions, war-
ranty, calculator’s company, 2\1 line display, etc.). The utility functions of the different
agents were constructed according to real preferences of 7 people (evaluating the different
attributes using monetary units) that we interviewed. For example, the worth of a true frac-
tion display was set at $30 by one of the subjects that was searching for a handled scientiﬁc
calculator. Similarly, a calculator that does not have these features had no value at all to
this individual. The opportunities to buy the calculator in this environment are drawn from
a distribution that is based on current offerings over the internet on US-based ecommerce
web-sites. Cooperative search is executed by having one of the coalition members conduct

29
the search at each stage of the search and informing the search results to the other coalition
members. Therefore the search cost of the coalition is equal to the sum of the interaction
cost and the communication cost of reporting the search results to the other n-1 agents, i.e.,
c(n) = cinteraction +ccommunication ∗(n−1). The interaction cost we used was $0.01.
Figure 7 depicts the average overall utility over 10000 searches using the three methods
as a function of the communication cost (recall that the agents’ performance is not affected
by this value in the SAS model). As expected, the FSCS performs better than the SAS for
some ccommunication values (and the SAS performs better for others) while the VSCS domi-
nates both methods for any ccommunication value.
35
38
41
44
47
0.001
0.003
0.005
0.007
0.009
Communication Cost
Expected Utility
SAS
VSCS
FSCS
Fig. 7 Overall expected utility for the different models
Even though the above example is based on 3772 opportunity types, it took the coalition
only 2 seconds to compute the optimal search strategy (when running on a standard pentium
PC, and the algorithm programmed in C++). A typical simulation of a search process draws
on average 534 opportunities and lasts less than 2 seconds.
Assuming that the agents are searching cooperatively (or can form such cooperation),
the example given illustrates that a better overall expected utility can be obtained using
VSCS and that the extraction of the optimal strategy is relatively fast using the algorithms
supplied in this paper. Obviously, better examples could have been constructed in order to
motivate the formation of the cooperation in the ﬁrst place (i.e., with complex products and
higher variation in utilities). Yet, for the purposes of this section, the use of the calculator
example illustrates the different aspects of using VSCS without getting into complex utility
elicitation processes (as in the case of more complex real-life environments).
7 Discussion and Conclusions
As shown in the analysis section, the proposed cooperative search model is a generalization
of the ﬁxed-structure cooperative search (FSCS) and individual search (SAS) and its use is
always favorable when overall expected utility maximization is concerned. Therefore, the
option to partition the search, whenever searching cooperatively or having multiple goals
for the search, should always be considered. The integration of the new method in search
processes is straightforward for the single searcher, when having multiple search goals and
easy to implement in the multi-agent case since the ability to maintain an adaptive coali-
tion that can restructure itself is inherent in multi-agent domains [33]. The adaption of the
new search method results with a new search strategy, different in its structure in compar-
ison to the optimal strategy used in the ﬁxed structure cooperative search and inherently

30
different from the strategy used when each agent searches individually. Although we use the
electronic marketplace as a framework in this paper, the suggested analysis is general and
can be applied to various domains where agents can beneﬁt from cooperative search (e.g.,
searching a large database of potential candidates to ﬁll several positions). It is notable that
the effectiveness of the new method, as any cooperative search, is limited in the case where
the things being sought are rare (e.g., a collectible), as in this case conﬂict of interests, while
searching, may arise. Nonetheless, in various settings (e.g., B2C) all search goals can be
satisﬁed by any opportunities found.
The novelty of the analysis given is that it manages to signiﬁcantly reduce the computa-
tional complexity associated with extracting the optimal coalition strategy in environments
with a non-increasing marginal search cost. This search cost structure is highly common in
MAS environments. The algorithms we supply do not induce any computational increase
in comparison to the models without the proposed enhancement. This further increases the
potential for actual implementation of cooperative search, especially in the eCommerce do-
main, where buyer-groups are commonly formed (e.g., for obtaining a volume discount). In
this sense, the new method is yet another incentive for cooperation in such markets.
Alongside the contribution to economic search theory (in the context of multi-goal
search), the results highly apply to cooperation in multi-agent domains. While the focus
of this paper is on ﬁnding the coalition strategy that will maximize the overall utility, there
are many other aspects of the new model that should be addressed. These include coalition
stability, payoff division mechanisms (and in particular when partitioning the coalition along
its search) and truth telling [41,43]. Though these were not included within the framework
of the current paper, we wish to emphasize that the optimal cooperative search strategy is
not inﬂuenced by these factors but rather inﬂuences them. The analysis of these important
issues is based on the ability to properly derive the coalition’s utility given its initial speciﬁc
self structure (i.e., the number of agents it represents and their reported, not necessarily true,
utility functions) and the environment within which it operates. By supplying this function-
ality, we enable extensive important future research and support the integration of various
relevant ideas from the rich literature in the area of game theory and MAS research [41,23,
34,45] to the proposed model.
Furthermore, while the paper considers the proposed mechanism as a self-contained ef-
ﬁcient cooperative search method, we believe there is great potential in applying it as an
infrastructure for evaluating heuristics aiming towards further enhancing the cooperative
search performance. Such heuristics can consider ad-hoc or occasional communication be-
tween formerly partitioned sub-coalitions (and possibly the union of formerly partitioned
coalition). These kinds of models are extremely complicated and require heuristic-based ap-
proaches. The advantage of the proposed method (VSCS) in this context is threefold. First,
it can be used as a baseline for evaluating the performance of these heuristics. Second, its
performance can be used as a lower bound for the expected utility encapsulated in any sub-
coalition partitioned by the designed mechanism, thus supporting partitioning decisions.
Last, its expected number of search stages can be used as an upper bound for the time it will
take a sub-coalition to terminate its search (from the time of its creation), thus supporting
interaction initiation decisions of other sub-coalitions.
Finally, it is notable that the model is based on several assumptions originated from
classical search theory that should be carefully considered. For example, the agents are not
constrained in their ability to partition their cooperation, the distribution of opportunities in
the environment is known or can be learned and opportunities are explored sequentially, in
a random order. While these assumptions are often used in search theory, the applicability
of the proposed search model can be signiﬁcantly improved if they can be overcome.

31
References
1. Y. Bakos. Reducing buyer search costs: Implications for electronic marketplaces. Mgmt. Science, 43(12)
(1997) 1676–92.
2. M. Baye, J. Morgan, and P. Scholten. Temporal price dispersion: Evidence from an online consumer
electronics market. Journal of Interactive Marketing, 18(4):101–115, 2004.
3. M. Baye, J. Morgan, and P. Scholten. Persistent price dispersion in online markets. In D. Jansen, editor,
The New Economy and Beyond. Edward Elgar Press, Northampton, MA, 2006.
4. J. Benhabib and C. Bull. Job search: The choice of intensity. J. of Political Economy, 91(5) (1983)
747–764.
5. S. Breban and J. Vassileva. Long-term coalitions for the electronic marketplace. In B. Spencer, ed.,
Proceedings of E-Commerce Applications Workshop, Canadian AI Conference, Ottawa, 2001.
6. E. Brynjolfsson, E. Hu, and M. Smith. Consumer surplus in the digital economy: Estimating the value
of increased product variety at online bookseller. Management Science, 49(11):1580–1596, 2003.
7. K. Burdett and D. A. Malueg. The theory of search for several goods. Journal of Economic Theory,
24(3) (1981) 362–376.
8. J. A. Carlson and R. P. McAfee. Joint search for several goods. Journal of Economic Theory, 32(2)
(1984) 337–345.
9. S. Choi and J. Liu. Optimal time-constrained trading strategies for autonomous agents. In Proc. of
MAMA’2000, Wollongong, Australia, 2000.
10. K. Clay, R. Krishnan, E. Wolff, and D. Fernandes. Retail strategies on the web: Price and non-price
competition in the online book industry. Journal of Industrial Economics, 50:351–367, 2002.
11. E. David, R. Azoulay-Schwartz, and S. Kraus. Protocols and strategies for automated multi-attribute
auctions. In AAMAS ’02: Proceedings of the ﬁrst international joint conference on Autonomous agents
and multiagent systems, Bologna, Italy, 2002, pp. 77–85.
12. M. Dias. TraderBots: A New Paradigm for Robust and Efﬁcient Multirobot Coordination in Dynamic
Environments. Ph.D. thesis, Robotics Institute, CMU, 2004.
13. S. Gal, M. Landsberger, and B. Levykson. A compound strategy for search in the labor market. Interna-
tional Economic Review, 22(3) (1981) 597–608.
14. J.R.J. Gatti. Multi-commodity consumer search. Journal of Economic Theory, 86(2) (1999) 219–244.
15. C. V. Goldman and S. Zilberstein. Optimizing information exchange in cooperative multi-agent systems.
In AAMAS ’03: Proceedings of the second international joint conference on Autonomous agents and
multiagent systems, pages 137–144, New York, NY, USA, 2003. ACM Press.
16. P. E. Hart, N. J. Nilsson, and B. Raphael. ”A formal basis for the heuristic determination of minimum
cost paths”. IEEE Transactions on Systems, Science and Cybernetics, 4(2) (1968) 100–107.
17. T. Ito, H. Ochi, and T. Shintani. A group-buy protocol based on coalition formation for agent-mediated
e-commerce. International Journal of Computer and Information Science (IJCIS), 3(1) (2002) 11–20.
18. J.P. Kahan and A. Rapoport. Theories of coalition formation. Lawrence Erlbaum Associates, Hillsdale,
NJ, 1984.
19. R. Keeney and H. Raiffa. Decisions with Multiple Objectives: Preferences and Value Tradeoffs. John
Wiley & Sons, New York, 1976.
20. J. Kephart and A. Greenwald. Shopbot economics. Journal of Autonomous Agents and Multi-Agent
Systems, 5(3) (2002) 255–287.
21. D. Leech. Ownership concentration and the theory of the ﬁrm: a simple-game-theoretic approach. The
Journal of Industrial Economics, 35(3) (1987) 225–240.
22. K. Lermann and O. Shehory. Coalition formation for large scale electronic markets. In ICMAS’2000
Boston MA, 2000, pp. 216–222.
23. C. Li, S. Chawla, U. Rajan, and K. Sycara. Mechanisms for coalition formation and cost sharing in an
electronic marketplace. In EC03, Pittsburgh, Pennsylvania, USA, 2003, pp. 68 – 77.
24. S. Lippman and J. McCall. The economics of job search: A survey. Economic Inquiry, 14(2-3) (1976)
155–189.
25. P. Maes, R. H. Guttman, and A. Moukas. Agents that buy and sell. Commun. ACM, 42(3)(1999) 81–91.
26. E. Manisterski. Protocols and Strategies for Agents Teamwork. PhD thesis, Bar Ilan University, Ramat-
Gan, Israel, 2007.
27. E. Manisterski, D. Sarne, and S. Kraus. Enhancing mas cooperative search through coalition partitioning.
In Manuela M. Veloso, editor, IJCAI, pages 1415–1421, 2007.
28. E. Manisterski, D. Sarne, and S. Kraus. Cooperative Search with Concurrent Interactions. In Journal of
Artiﬁcial Intelligence Research (JAIR), 32 (2008) 1–36.
29. J. McMillan and M. Rothschild. Search. In Robert J. Aumann and Sergiu Hart, editors, Handbook of
Game Theory with Economic Applications, 1994, pp. 905–927.
30. P. Michiardi and R. Molva. Analysis of coalition formation and cooperation strategies in mobile ad hoc
networks. Ad Hoc Networks, 3:2005, 2005.

32
31. P. Morgan. Search and optimal sample size. Review of Economic Studies, 50(4) (1983) 659–675.
32. P. Morgan and R. Manning. Optimal search. Econometrica, 53(4) (1985) 923–944.
33. E. Ogston, B. Overeinder, M. Van Steen, and F. Brazier. A method for decentralized clustering in large
multi-agent systems. In AAMAS03, Melbourne, Australia, 2003, pp. 789–796.
34. T. Rahwan, S. D. Ramchurn, V. D. Dang, A. Giovannucci, and N. R. Jennings. Anytime optimal coalition
structure generation. In 22nd Conference on Artiﬁcial Intelligence (AAAI), pages 1184–1190, February
2007.
35. M. Rothschild. Searching for the lowest price when the distribution of prices is unknown. Journal of
Political Economy, 82(4) (1974) 689–711.
36. N. Ohta, A. Iwasaki, M. Yokoo, K. Maruono, V. Conitzer, and T. Sandholm. A compact representation
scheme for coalitional games in open anonymous environments. In AAAI06 Boston, MA, USA, 2006.
37. D. Sarne and S. Kraus. The search for coalition formation in costly environments. In In Proc. of CIA,
pages 117–136, 2003.
38. D. Sarne and S. Kraus. Cooperative exploration in the electronic marketplace. In Proc. of AAAI 2005,
Pittsburgh, Pennsylvania, USA, 2005, pp. 158–163.
39. O. Shehory and S. Kraus. Methods for task allocation via agent coalition formation. Artiﬁcial Intelli-
gence, 101(1-2) (1998) 165–200.
40. G. Stigler. The economics of information. Journal of Political Economy, 69(3) (1961) 213–225.
41. T. Sandholm, K. Larson, M. R. Andersson, O. Shehory, and F. Tohme. Coalition structure generation
with worst case guarantees. Artiﬁcial Intelligence, 111(1-2) (1999) 209–238.
42. S. Talukdar, L. Baerentzen, A. Gove, and P. S. de Souza. Asynchronous teams: Cooperation schemes for
autonomous agents. Heuristics, 4(4) (1998) 295–321.
43. N. Tsvetovat, K. Sycara, Y. Chen, and J. Ying. Customer coalitions in electronic markets. In Conference
on Electronic Commerce, Minnesota, MN, 2000, pp. 121–138.
44. J. Yamamoto and K. Sycara. A stable and efﬁcient buyer coalition formation scheme for e-marketplaces.
In Proceedings of the Fifth International Conference on Autonomous Agents, Montreal, CA, 2001, pp.
576–583.
45. D. Yun Yeh.
A dynamic programming approach to the complete set partitioning problem.
BIT,
26(4):467–474, 1986.

33
A Summary of Notations
Notation
Meaning
B = (B1,B2,...,B|B|)
The set of the attributes deﬁning any of the potentially
available opportunities in the market, where each at-
tribute Bi can be assigned a value from the ﬁnite set
(bi
min,...,bi
max).
O
The space of potential opportunity types the coalition may
encounter.
Ag
The coalition of agents.
Uj(o)
Agent A j’s utility from type o opportunity.
c(n)
The search cost associated with having a coalition of size
n.
θknown
The set of opportunities known to the coalition at a given
stage of its search.
SAg
The set of all possible states of coalition Ag.
state(Ag,θ)
The state of coalition Ag acquainted with a set θ of known
opportunities.
V ∗(Ag,s)
The expected utility of a coalition Ag at state s from this
point onwards when using its optimal strategy.
Vt(Ag,s)
The immediate utility of coalition Ag if it terminates the
search at state s.
Vr(Ag,s)
The expected utility that coalition Ag can obtain if it re-
sumes the search at state s.
Os
improve
The set of opportunities that changes the coalition’s cur-
rent state.
Os
stay
The set of opportunities that does not change the coali-
tion’s current state.
MAg
The set of all possible partitions of coalition Ag.
Vp(Ag,s)
The expected utility of the partitioned coalition Ag, where
the selected partition will be the one yielding the maxi-
mum expected utility.
Vone(s,aj)
The additional expected utility (without incorporating the
search cost) that agent a j ∈Ag obtains from terminating its
search after conducting one additional search stage rather
than terminating the search in the current state s it is in.
Aorder = (a′
1,...,a′
|Ag|)
The list of agents in Ag sorted in a descending order ac-
cording to their Vone values.
resume(Ag,s)
The agents that resume the search according to algorithm
1, where coalition Ag reaches state s.
terminte(Ag,s)
The agents that terminate the search according to algo-
rithm 1, where coalition Ag reaches state s.

