Cartesian Frames
Scott Garrabrant
Daniel A. Herrmann
Josiah Lopez-Wild
September 2021
Abstract
We introduce a novel framework, the theory of Cartesian frames (CF),
that gives powerful tools for manipulating sets of acts. The CF frame-
work takes as its most fundamental building block that an agent can freely
choose from a set of available actions. The framework uses the mathemat-
ics of Chu spaces to develop a calculus of those sets of actions, how those
actions change at various levels of description, and how diﬀerent agents’
actions can combine when agents work in concert. We discuss how this
framework might provide an illuminating perspective on issues in decision
theory and formal epistemology.
1
Background and Motivation
Acts are basic in decision theory. Once we have a set of acts available to an
agent, we can then use decision theory to evaluate the choice-worthiness of the
diﬀerent acts.
Much of the formal work philosophers have done to understand practical
rationality focuses on this decision-theoretic evaluation of acts (see for exam-
ple Jeﬀrey 1965; Nozick 1969; Savage 1972; Skyrms 1984; Skyrms 1990; Joyce
1999; Ahmed 2014).
In this paper we take a step back, and provide a for-
mal framework—the theory of Cartesian frames—for thinking about the acts
themselves in a more ﬁne-grained way.
The building blocks of the framework are Cartesian frames.1 Each Cartesian
frame is a frame in the sense that it is a particular way of carving up the world
into an agent and an environment. Each way of carving up the world leads to a
diﬀerent frame. The frames are Cartesian in the sense that, in any given frame,
the agent is formally separate from the environment, and we think of the agent
of that frame as able to freely choose between multiple acts. This ﬁts well with
Richard Jeﬀrey’s standard deﬁnition that an “act is then a proposition which is
within the agent’s power to make true if he pleases” (1965, p. 84).
1. This paper presents a fragment of the CF framework. The full description of the frame-
work, originally developed by Garrabrant (2020), appeared on the AI Alignment Forum here:
https://www.alignmentforum.org/s/2A7rrZ4ySx6R8mfoT.
1
arXiv:2109.10996v1  [math.CT]  22 Sep 2021

In this paper we focus on two ways in which the CF framework extends our
ability to pose and answer questions about agency. The ﬁrst is that it gives a
rigorous and precise way to think about acts at diﬀerent levels of description.
The second is that it gives us a systematic way to think about how diﬀerent
agents’ acts can combine to give us more powerful agents (think of a group of
people coming together to form a society), and how to decompose agents into
subagents (think of starting with a society, and then realizing we can think of
it as a collection of agents working together).
Though the focus of this paper is the framework itself, we provide here a
brief motivation for the framework.
Decisions at diﬀerent levels of description.
The theory of Cartesian frames
provides a powerful set of tools for expressing decision problems at diﬀerent
levels of description and for characterizing the relationships between the sets
of acts available at those diﬀerent levels of description. Understanding deci-
sion problems at diﬀerent levels of granularity has already born fruit in decision
theory. Consider a problem with which decision theorists are familiar: Savage’s
problem of small worlds (Savage 1972). When thinking about how to represent a
decision problem, Savage makes the distinction between small and large worlds
(Chapter 5, Section 5, 1972). A small world decision problem contains states,
acts, and outcomes that are known to the agent, whereas a large world prob-
lem does not. Intuitively, the small world is one level of description, a coarser
level that the agent can cognitively manage, whereas the large world problem
is a more ﬁne grained level, perhaps one which the agent lacks the conceptual
resources to consider (see Joyce (1999), p. 73 for a careful statement of prob-
lem). The problem of small worlds is the following: what guarantee can we
have that the best act in a small world would also be the best in a larger world?
One approach to this problem is to consider moving between diﬀerent levels of
description of a decision problem. Joyce takes such an approach, focusing on
the process of reﬁning decision problems (Joyce 1999, pp. 73-77). Given the
expressive power of the theory of Cartesian frames, we expect that it will pay
philosophical rent by allowing us to ﬂexibly manipulate levels of description of
decision problems, as well as connect these levels of description up to notions of
subagency, to which we now turn.
Subagency. A novel contribution of the CF framework is its ability to model
how diﬀerent agents’ actions are interrelated. This brings to the foreground
the notion of a subagent. Consider a corporation. At one level of description
it is useful to think of the corporation as a single agent taking actions in the
world.2 At another level of description, however, we can identify diﬀerent agents
that are parts of the bigger agent: for example, a sales department, a ﬁnance
department, and so on. Yet another level down we can identify diﬀerent agents:
a personal assistant, a janitor, a CEO, a sales rep, etc. In this case we would say
2. For a philosophical discussions of this, see List, Pettit, et al. (2011).
2

that the sales department is a subagent of the corporation, and (for example)
the personal assistant might be a subagent of both the sales department and the
corporation, but not of the ﬁnance department. The theory of Cartesian frames
has the resources to formally model these relationships. Level of description
plays a certain role here, but it is not always from one agent’s perspective; at
one level of description there might be one agent in the choice situation, at
another there might be more than one.
One area where we believe this rich calculus for subagency will be valuable
is in exploring the connection between individual and group rationality, which
is familiar to philosophers. The CF framework gives natural ways to consider
the options agents have when working together, and indeed when it makes sense
to consider them subagents of one composite agent (such as a group). Thus,
insofar as this question relies on individuals coming together to form a group,
the CF framework can help us by providing a precise and detailed way to think
of this process.
Consider, for example, the independence thesis, which is that (i) rational
agents might form irrational groups and (ii) irrational agents might form rational
groups.3 One way philosophers have tried to evaluate this thesis is to look at
whether learning strategies that are successful in isolation are successful in group
settings.4 In this case a group is considered rational if all of its members are
successful; the group itself does not have any actions available to it. Cartesian
frames give a diﬀerent way to approach this question that looks at the group
as an agent, since it gives operations that allow us to combine diﬀerent agents
into one superagent composed of those agents.
Thus the same standard of
rationality (for example, whether or not an agent maximizes expected utility)
can be applied at both the group and the individual level.
Note that this CF approach also diﬀers from how similar questions are inves-
tigated in social choice theory. For example, Arrow’s theorem asserts that there
are groups of rational individuals with certain preferences over a set of alterna-
tives that cannot be aggregated to a rational group preference over that same
set of alternatives in a way that satisﬁes certain desirable conditions.5 In this
context we want to know whether or not we can construct a group preference
that meets some conditions. The CF approach from the previous paragraph
is diﬀerent from this in two ways. The ﬁrst is that it operates at the level of
actions instead of preferences. The second is that the set of options available
to the group (the actions of the superagent) can be diﬀerent from the actions
available to the subagents, whereas in the social choice context the individual
agents’ preferences and the group’s preferences are all deﬁned over the same
domain. Thus, the theory of Cartesian frames oﬀers a novel way to investigate
the relationship between group and individual rationality.
3. For a thorough discussion of this thesis and how it relates to other positions see Mayo-
Wilson, Zollman, and Danks (2011).
4. Mayo-Wilson, Zollman, and Danks show that successful individual strategies can be
unsuccessful in group settings (2011, 2013).
5. For an excellent presentation and discussion of Arrow’s result see chapter 14 of Luce and
Raiﬀa’s Games and Decisions (1989).
3

Furthermore, such a formal framework allows us to ask new questions: are
the values of the subagents (the individuals) of this agent (the group) aligned
with the values of the agent? How sensitive to misaligned subagents is a supera-
gent’s ability to take successful action? Which subagents are most important to
keep aligned? Such questions mirror important questions in the ﬁeld of artiﬁcial
intelligence. See Gabriel (2020) for a philosophical discussion of alignment in
the context of AI.
Precise notions of subagency might also give us better traction on under-
standing preexisting agent-based models used to tackle certain philosophical
questions. For example, one thriving area of investigation in the philosophy of
language is the evolution of compositionality—how is it that we humans devel-
oped such a rich, compositional language? Lewis and Skyrms took important
ﬁrst steps to answering this question (and more basic ones about simpler lan-
guages) in their respective works Convention (2008) and Signals (2010). More
recently a number of authors have used hierarchical models to investigate this
question (Barrett, Skyrms, and Cochran 2018; Barrett, Cochran, and Skyrms
2020). A hierarchical model is a collection of agents that work together to de-
velop more sophisticated signalling systems. Applying the CF framework to
such collections of agents to characterize precisely the ways in which they can
combine to form more sophisticated agents could help us better understand ex-
isting hierarchical models, as well as suggest new directions of investigation. It
might also help provide a formal justiﬁcation for moving from models of lan-
guage learning in which we consider a community of learners (multiple agents)
to one in we consider a single agent learning (who is composed of subagents
working in concert).
Additionally, we can use the subagency notion to model the same agent
across time. In particular, we can model an agent before and after it makes a
commitment to do something. It is interesting that the same subagent notion
that we can use to understand the relationships between diﬀerent agents (as in
the cases above) easily generalizes to account for this case (treating the agent
with fewer options as a subagent of the earlier agent that hasn’t yet made a
commitment).6
We expect this framework to interface with many other topics in formal phi-
losophy. Indeed, it is often true that new areas of investigation open up once
we have a new vocabulary and formalism to express ideas. Thus, the primary
goal of this paper is to introduce core parts of the technical apparatus to a
philosophical audience, in the hopes that this will equip philosophers with tools
they can use to tackle old and new problems. Having provided a sketch of how
this framework might help with philosophical questions, we now turn to this
goal, conﬁdent that readers will see the utility of the framework for themselves.
In §2.1 and §2.2 we introduce essential elements of the framework. In §2.3 we
show how the framework provides a precise way to think about diﬀering levels
of description. In §2.4 we introduce the formal notion of subagency, and show
6. See §2.4.1 for the technical details of committing.
4

how the framework provides a calculus of subagency.
2
Technical Framework
2.1
Cartesian Frames
To motivate the following technical deﬁnitions, consider one common way of
representing decision problems. Decision problems are often represented by ma-
trices, where the rows represent a choice by the agent and the columns represent
choices by the other agent(s) in a game, or the state of the environment. For ex-
ample, in a Newcomb problem, the two rows represent the two options available
to the agent: either one-box or two-box. The two columns represent the pos-
sible states of the environment—in this case, whether the opaque box contains
money or does not. Finally, the entries in the matrix represent the outcome of
this interaction between the agent’s choice and the state of the environment.
So we can think of a decision problem matrix as a combination of three things:
(i) a set of options for the agent, (ii) a set of options for the environment,7 and
(iii) the outcome produced by the combination of an option for the agent and
an option for the environment. We can generalize this matrix representation:
Deﬁnition 1. Let W be a set. A Cartesian frame C over W is a triple C =
(A, E, ·), where A, E are sets and · : A × E →W is a function.
The intended interpretation is: W is a set, often possible worlds but occasionally
utilities, which we can think of as possible outcomes. A is the set of acts available
to the agent, E is the set of states of the environment, and given a ∈A, e ∈E,
a · e is the possible world resulting from taking act a in environment e. We can
represent this idea more concretely with the following matrix:
e1
e2
e3
 
!
a1
w1
w2
w3
a2
w4
w5
w6
a3
w7
w8
w9
Here A = {a1, a2, a3} represents an agent with three possible acts. Similarly
E = {e1, e2, e3} represents an environment with three possible states. Finally,
we represent the fact that the outcome, a possible world in W, is the result of
the joint interaction of the state of the agent and the state of the environment
by writing, e.g., a1 · e2 = w2.
Here we introduce a bit of notation. If C = (A, E, ·) is a Cartesian frame, we
write Agent(C) to denote A, the set of options for the agent; we write Env(C)
to denote E, the set of options for the environment; and we write Image(C) to
7. Which can include other agents and their acts.
5

denote the set {w ∈W : ∃a ∈A, ∃e ∈E(a·e = w)}. In other words, the image of
a Cartesian frame is the subset of W which appears in the matrix representation
of that frame; equivalently, the image is the subset of possible worlds that can
be produced by some choice of agent and some choice of environment in that
frame.
So a Cartesian frame can be considered as a generalized decision matrix.8
But we go a step further. One of the novel strengths of Cartesian frames is
the fact that one can deﬁne morphisms between two frames, allowing a sort of
transformation from one to the other:
Deﬁnition 2. A morphism from C = (A, E, ·) to D = (B, F, ⋆) is a pair of
functions (g : A →B, h : F →E) satisfying a · h(f) = g(a) ⋆f for all a ∈A, f ∈
F. We call this equation the adjointness condition for morphisms. For two
morphisms (g0, h0), (g1, h1), their composition is given by (g1, h1) ◦(g0, h0) =
(g1 ◦g0, h0 ◦h1).
Consider as an example a driver who is deciding whether to drive by the
seaside (as) or whether to drive on the highway (ah). There are three possible
weather conditions: rainy (er), cloudy (ec), and sunny (es). If there is sun and
she takes the seaside route then she will get to her destination on time and
she will enjoy a good view. If it is cloudy she will still get there on time, but
the view will be obscured. If it is rainy she will be late and the view will be
obscured. The highway is always fast, and so she will get to her destination on
time. We represent her decision situation with the following Cartesian frame,
where the worlds are numbers representing how much she likes each outcome.
er
ec
es


as
1
5
7
ah
5
5
5
Now imagine that the driver discovers a new road that goes through the
countryside and has a nice view. Imagine that this road is just as fast as the
highway, and is not aﬀected by weather. We can represent this diﬀerent set of
options with the frame
fr
fc
fs
 
!
bs
1
5
7
bh
5
5
5
bc
6
6
6
There is a morphism from the previous frame to this frame. (Consider the mor-
phism (g, h) where both g and h map elements to elements with corresponding
8. Note that there are no cardinality restrictions in Deﬁnition 1; thus the framework
allows inﬁnite decision matrices as well.
6

subscripts.) Morphisms are useful because they allow us to relate one Carteisan
frame to another, and in this way deﬁne other useful concepts (many of which
we will present in this paper). Note that in a morphism from C to D, one
function maps “forward” from the agent of C to the agent of D, whereas the
other function maps “backward” from the environment of D to the environment
of C.
Mathematically, Cartesian Frames are exactly Chu spaces. Chu spaces pro-
vide a natural generalization of matrices, algebras, posets, and related algebraic
structures. Most often Chu spaces are studied from a categorical perspective.
Categorically, Chu(W) is a category having as objects all Cartesian frames de-
ﬁned over W and having as arrows all morphisms between those frames. In the
main body of this paper we will focus on the matrix representation of Cartesian
frames, deferring categorical details to an appendix.9
2.2
Biextensional Equivalence
One can also deﬁne multiple notions of equivalence of Cartesian frames. These
equivalence notions will be useful for us because they will allow us to abstract
away inessential details of the Cartesian frames, helping us to focus on the
decision-relevant structure. As in other parts of mathematics, we can deﬁne a
notion of isomorphism:
Deﬁnition 3. A morphism (g, h) : C →D is an isomorphism if both g and h
are bijections. If there is an isomorphism between C and D, we say C ∼= D.
Isomorphism is a useful notion, but in fact we will need something more speciﬁc
to Cartesian frames.
Intuitively, two Cartesian frames might diﬀer and yet
represent the “same situation” by containing duplicate rows and columns—
that is, two or more rows or columns with exactly the same entries.
In a
sense, if two rows (acts) result in exactly the same outcomes, then as far as
the agent is concerned, they are the same act. So if we have two CFs—one
which has no duplicates, and another which is identical to the ﬁrst except that it
contains duplicates—then these two frames intuitively do not diﬀer in the choices
available to the agent.
Thus we want a way to identify two such Cartesian
frames mathematically, despite the fact that they are not isomorphic. We call
this identiﬁcation biextensional equivalence. We will deﬁne this relation in steps.
First, a Cartesian frame is biextensional just in case it contains no “duplicate”
rows and columns:
Deﬁnition 4. A Cartesian frame C = (A, E, ·) is called biextensional if when-
ever a0, a1 ∈A are such that a0 · e = a1 · e for all e ∈E, then a0 = a1, and
whenever e0, e1 ∈E are such that a · e0 = a · e1 for all a ∈A, then e0 = e1.
9. The mathematically inclined reader can ﬁnd more information about Chu spaces at
http://chu.stanford.edu/guide.html.
7

Of course, many frames are not biextensional. But from a given Cartesian frame
C we can generate a corresponding biextensional frame ˆC, called the biexten-
sional collapse of C. We do this by “deleting” duplicate rows and columns:
Deﬁnition 5. Given a Cartesian frame C = (A, E, ·), for a0, a1 ∈A, we say
a0 ∼a1 if a0·e = a1·e for all e ∈E. For e0, e1 ∈E, we say e0 ∼e1 if a·e0 = a·e1
for all a ∈A.
Then for a ∈A, let ˆa denote the equivalence class of a up to ∼. Let ˆA denote
the set of equivalence classes of ∼in A. Similarly, let ˆe denote the equivalence
class of e up to ∼, and let ˆE denote the set of equivalence classes of ∼in E.
Deﬁnition 6. Given a Cartesian frame C = (A, E, ·), the biextensional collapse
of C is given by ˆC = ( ˆA, ˆE,ˆ·), where ˆaˆ·ˆe = a · e.
Putting it all together, we get:
Deﬁnition 7. Given two Cartesian frames C and D, we say that C and D are
biextensionally equivalent, written C ≃D, just in case ˆC ∼= ˆD.
Claim 8 . For two Cartesian frames C and D, if C = D then C ∼= D, and if
C ∼= D then C ≃D.
Proof. If C = D, then (idA, idE) is an isomorphism between C and D.
For the proof of the second claim, see Appendix A.
We now have a precise way to express the idea that Cartesian frames with
duplicate rows/columns express “the same” situation. Two frames might be
nonisomorphic, yet if duplicates are deleted, the resulting biextensional collapses
might be isomorphic. For example, the following two frames are not isomorphic,
but they are biextensionally equivalent (consider deleting b3).
e1
e2
e3


a1
w1
w2
w3
a2
w4
w5
w6
f1
f2
f3
 
!
b1
w1
w2
w3
b2
w4
w5
w6
b3
w4
w5
w6
In general we will be working up to biextensional equivalence.10
We also introduce the dual of a Cartesian frame, which will be important in
what follows:
10. There is another handy equivalence relation on Cartesian frames called “homotopy equiv-
alence”. It is in fact provably equivalent to biextensional equivalence. We will not make use
of it until Appendix A.
8

Deﬁnition 9. Let −∗: Chu(W) →Chu(W)op be the functor given by (A, E, ·)∗=
(E, A, ⋆), where e ⋆a = a · e.11
Note that, if we consider a given Cartesian frame as a matrix, −∗is just trans-
position.
2.3
Coarse and Reﬁned Worlds
Cartesian frames are deﬁned over a set of possible worlds, say, V .
We can
think of these possible worlds as carving up the world at a certain level of
description. Perhaps V has separate possible worlds for the scenario where Amy
has a sandwich for lunch versus the scenario where Amy has spaghetti. But one
could easily imagine that the worlds in V do not distinguish, say, the scenario
where Amy has a sandwich and wears red socks versus the scenario where Amy
has a sandwich and wears yellow socks. Perhaps there’s only one world in V
in which Amy has a sandwich at all, and thus V cannot distinguish the above
scenarios. But one could instead consider a set of possible worlds W which does
include possible worlds that distinguish these scenarios. Thus, at least with
respect to Amy’s socks, W embodies a “ﬁner-grained” level of description of the
world. Cartesian frames oﬀer a natural mechanism for moving between such
levels of description.
Deﬁnition 10.
Given two sets W and V , and a function p : W →V , let
p◦: Chu(W) →Chu(V ) denote the functor that sends the object (A, E, ·) ∈
Chu(W) to (B, F, ⋆) ∈Chu(V ), where b ⋆f = p(a · e), and sends the morphism
(g, h) to the morphism with the same underlying functions, (g, h).12
These maps are functors between categories, hence the name.
If p is surjective, then we say that “W is a reﬁned version of V ”, or “V
is a coarse version of W”.
To see why, imagine representing the set W of
possible worlds as a two-dimensional plane. Each point is a speciﬁc possible
world. But we can draw boundaries around groups of worlds, thereby assigning
worlds to “neighborhoods”. We then treat the neighborhoods as possible worlds
themselves, and group them into a new set, V . Thus every world in W gets
mapped to a world in V , i.e., the function is surjective. Some propositions are
true (false) at each world in the neighborhood; these propositions are true (false)
at the new neighborhood-world. Other propositions are true at some worlds in
the neighborhood and false at others; these propositions are thus not settled
by the neighborhood-world. In other words, the neighborhood-world is “less
detailed” than the worlds it contains, or, equivalently, is a “coarse version” of
those worlds.13
11. Note that here we mean ‘functor’ in the categorical sense, i.e., a map from one category
to another which preserves domains and codomains of arrows, preserves composition of arrows,
and maps identities to identities.
12. Note that p◦preserves biextensional equivalence, i.e., if C ≃D then p◦(C) ≃p◦(D).
13. There’s a clear similarity here between coarsening/reﬁning functions between sets of
worlds and the coarsening/reﬁning relation found in possibility semantics (originally proposed
in Humberstone 1981, with substantial development in Holliday 2018.)
9

For example, let W = {a, o, c} and V = {2, 3}, and let p(a) = p(o) =
2, p(c) = 3. We can think of a, o, and c as apple, orange, and chocolate re-
spectively, with the elements of V representing subjective levels of enjoyment
of the agent. We can then think of p as encoding how much an agent enjoys a
particular snack. Now consider the following Cartesian frame, D, over W
O
A
OC
AC


C
o
a
c
c
¬C
o
a
o
a
where O and A are worlds in which there are only oranges and apples available
to the agent respectively, OC is a world in which both oranges and chocolate are
available, and AC is a world in which both apples and chocolate are available.
The agent has two options, asking for chocolate (C), and not asking for chocolate
(¬C). Clearly D is biextensional. Now consider p◦(D):
Or
Ap
OCh
ACh


Ch
2
2
3
3
¬Ch
2
2
2
2
≃
Fr
FrCh


Ch
2
3
¬Ch
2
2
Notice how p◦(D) loses the information about which fruit the agent gets,
and instead the worlds only describe how much the agent values their snack.
Furthermore, notice how once we coarsen the situation like this we can drop
decision-irrelevant environments by taking the biextensional collapse to yield
the Cartesian frame on the right. Thus we see how the CF framework gives us
an easy way to non-trivially move between decision problems at diﬀerent levels
of description.
Earlier we presented a surjective function p : W →V , and called the
codomain a “coarsening”. Given a set W and a coarsening, V , there is one
unique function from W to V , namely the function that assigns each world to
its “neighborhood”. But the reverse direction is not unique; given a neighbor-
hood, there are many worlds to which a function could map.
We solve this problem by introducing functors deﬁned from Cartesian frames,
rather than deﬁned from functions on sets of possible worlds. Intuitively, when
we deﬁne a functor from a Cartesian frame C, the agent of C chooses a neighbor-
hood in V , and the environment of C chooses a function that selects an element
in that neighborhood, i.e., the environment chooses a function q : V →W.
Deﬁnition 11. Let C = (V, E, ·) be a Cartesian frame over W, whose agent
is V .
Then C◦: Chu(V ) →Chu(W) is the functor that sends (B, F, ⋆) to
(B, F × E, ⋄), where b ⋄(f, e) = (b ⋆f) · e, and sends the morphism (g, h) to
(g, h′) where h′(f, e) = (h(f), e).
10

Note that this deﬁnition looks a bit like “currying”, the idea that there is a
natural correspondence between functions of n + 1 arguments and functions
from n arguments to a function space. For example, if f : A × B →C, there
is a corresponding “curried” function ˆf : A →CB. In our example we see a
natural correspondence between “functions” k : B × F →W E (i.e., (B, F, ⋆) is
deﬁned over V , the agent of C, which one could consider as a set of functions
from E to W) and ˆk : B × F × E →W.
2.4
Subagents
We arrive at the (in our opinion) most intriguing feature of Cartesian frames:
subagency.14 In order to give the categorical deﬁnition of a subagent, we intro-
duce one additional deﬁnition.
Deﬁnition 12. Given S ⊆W, ⊥S is the Cartesian frame ⊥S = (S, {e}, ⋆),
where ⋆is given by s ⋆e = s for all s ∈S. ⊥is the Cartesian frame ⊥W .
Deﬁnition 13 (Categorical deﬁnition of subagent). Let C and D be Cartesian
frames over W. We say that C is a subagent of D, written C ◁D, if for every
morphism φ : C →⊥there exists a pair of morphisms φ0 : C →D, φ1 : D →⊥
such that φ = φ1 ◦φ0 (i.e., φ factors through D). In other words, the following
diagram commutes:
C
⊥
D
φ
φ0
φ1
To get a feel for the signiﬁcance of this deﬁnition, consider the fact that the
morphisms φe : C →⊥correspond exactly to elements of E = Env(C). To
see this, let ⊥= (W, {j}, ⋆). Let the morphism (g, h) : C →⊥be given by
g(a) = a · e, and h(j) = e. This morphism satisﬁes the adjointness condition:
a · h(j) = a · e
= w
= w ⋆j
= g(a) ⋆j
So the categorical deﬁnition states that every element of Env(C) is the image
of some element of Env(D) under some morphism φ0 : C →D.
It will sometimes be useful for us to work with a diﬀerent deﬁnition of
subagency.
14. Recall our informal discussion of subagency in §1.
11

Deﬁnition 14. (Currying deﬁnition of subagent). Let C and D be Cartesian
frames over W. We say that C ◁D if there exists a Cartesian frame Z over
Agent(D) such that C ≃D◦(Z).
Claim 15. The categorical deﬁnition and the currying deﬁnition of subagency
are equivalent.
Proof. See Appendix B.
We can think of D◦and Z as “factoring” C’s agent into a further interaction
of an agent and an environment. Consider:
Z
D
D◦(Z) ≃C
f1
f2


b1
v1
v1
b2
v2
v3
e1
e2
 
!
v1
w0
w1
v2
w2
w3
v3
w4
w5
f1e1
f1e2
f2e1
f2e2


b1
w0
w1
w0
w1
b2
w2
w3
w4
w5
In this case, D is a frame whose agent is V and whose environment is E. Z is
a frame which represents a “factoring” of the agent of D; we see that it is the
interaction of an agent, B, and an environment, F, and their joint interaction
results in a choice vn ∈V . We can liken Z to the perspective of a single player,
B, in a team, V . The behavior of V is jointly determined by B’s behavior and
the behavior of the rest of the team, F.
So Z represents the interaction of a single player with the rest of the team.
But we can “zoom out” and consider the team’s interaction with its environ-
ment, E, from the perspective of B. That is, we can consider a frame whose
agent is B and whose environment is made up of both (i) choices made by the
rest of the team and (ii) states of the team’s environment. This is the action of
D◦on Z. Thus D◦(Z) represents the perspective of the single player interacting
with both their team and their team’s environment. This frame is biextension-
ally equivalent to C, so C can likewise be thought of as the perspective of a
single player in the original team. It is in this sense that we can claim that C
is a subagent of D.
Claim 16. ◁is transitive.
Proof. If C0◁C1 and C1◁C2, then, by the categorical deﬁnition, every morphism
φ0 : C0 →⊥factors through C1 and every morphism φ1 : C1 →⊥factors
through C2. Thus the following diagram commutes:
C0
⊥
C1
C2
φ0
φ1
12

So φ0 factors through C2.
Claim 17. ◁is reﬂexive. Further, if C ≃D, then C ◁D.
Proof. Let C = (A, E, ·) and D = (B, F, ⋆) be Cartesian frames over W, with
C ≃D. Consider the Cartesian frame Z over B given by Z = (B, {x}, ⋄), where
b ⋄x = b. Then D◦(Z) = (B, {x} × F, •). Observe that D ∼= D◦(Z), so C ◁D,
according to the currying deﬁnition.
Clearly C ≃C, so C ◁C.
Our notion of subagency can be further reﬁned into two distinct notions: addi-
tive and multiplicative subagents. Intuitively, an additive subagent is an agent
who faces the same environment but has fewer options. We call such a subagent
“additive” because one must simply add more options to the subagent to return
to the original superagent. A multiplicative subagent is better embodied by the
relationship between a team and an individual member. We call such a subagent
“multiplicative” because members act jointly to produce the action of the team;
in this sense, an action of a team can be “factored” into some tuple of actions
by the individual members, or equivalently, the team is the Cartesian product
of the members. We present two pairs of (equivalent) deﬁnitions of additive and
multiplicative subagent.
The ﬁrst deﬁnition of additive subagency is what we call the committing
deﬁnition. Intuitively, we are viewing C as the result of D making a commitment
to only select from some subset of their available acts.
Deﬁnition 18 (Committing deﬁnition). Given Cartesian frames C and D over
W, we say C ◁+ D, read “C is an additive subagent of D”, if there exist three
sets X, Y , and Z, with X ⊆Y , and a function f : Y × Z →W such that
C ≃(X, Z, ⋄) and D ≃(Y, Z, •), where ⋄and • are given by x ⋄z = f(x, z) and
y • z = f(y, z).
As an example, consider our earlier example of the driver with the following two
Cartesian frames:
er
ec
es


as
1
5
7
ah
5
5
5
fr
fc
fs
 
!
bs
1
5
7
bh
5
5
5
bc
6
6
6
The agent of the frame on the left is an additive subagent of the agent of the
frame on the right. We can think of the left frame as arising from the agent on
the right committing to not taking the country road.
We next give our ﬁrst deﬁnition of multiplicative subagency. We refer to this
deﬁnition as the externalizing deﬁnition of multiplicative subagency. Intuitively,
13

we are viewing C as the result of D sending some of its choices into the envi-
ronment. For example, if the agent of D is a team, then we can send some
members into the environment to obtain the subagent frame which represents
the remaining members.
Deﬁnition 19 (Externalizing deﬁnition). Given Cartesian frames C and D over
W, we say C◁×D, read “C is a multiplicative subagent of D”, if there exist three
sets X, Y, and Z, and a function f : X ×Y ×Z →W such that C ≃(X, Y ×Z, ⋄)
and D ≃(X × Y, Z, •), where ⋄and • are given by x ⋄(y, z) = f(x, y, z) and
(x, y) • z = f(x, y, z).
Consider our earlier example from the discussion of the currying deﬁnition of
subagency. D◦(Z) is in fact a multiplicative subagent of D. We see that D’s
actions can be factored into members of B and F, i.e., the joint interaction of
D◦(Z)’s agent and some other subagent of D; we relabel vi ∈V to reﬂect the
fact that they can be factored in this manner.
Z
D
D◦(Z) ≃C
f1
f2


b1
v1
v1
b2
v2
v3
e1
e2
 
!
b1f1 = v1
w0
w1
b2f1 = v2
w2
w3
b2f2 = v3
w4
w5
f1e1
f1e2
f2e1
f2e2


b1
w0
w1
w0
w1
b2
w2
w3
w4
w5
We now present another pair of deﬁnitions of additive and multiplicative sub-
agents, equivalent to the ﬁrst pair. While the ﬁrst pair of deﬁnitions emphasizes
the relationships between the sets of agent choices and the set of environment
states, this new pair will rely on the notion of “currying” we developed via
functors from Cartesian frames. We therefore refer to the following deﬁnitions
as the currying deﬁnitions of subagency.
Deﬁnition 20 (Currying deﬁnition of additive subagent). We say that C ◁+ D
if there exists a Cartesian frame M over Agent(D) with |Env(M)| = 1, such
that C ≃D◦(M).
Deﬁnition 21 (Currying deﬁnition of multiplicative subagent). We say that
C ◁× D if there exists a Cartesian frame M over Agent(D) with Image(M) =
Agent(D) such that C ≃D◦(M).
Claim 22.
The currying deﬁnitions of additive subagent is equivalent to the
committing deﬁnition, and the currying deﬁnition of multiplicative subagent is
equivalent to the externalizing deﬁnition.
Proof. See Appendix A.
14

We mention here a few nice properties of the additive and multiplicative sub-
agent relations:
Claim 23.
1. If C ◁+ D, then C ◁D. If C ◁× D, then C ◁D.
2. If C ◁+ D, C ≃C′, and D ≃D′, then C′ ◁+ D′. Similarly, if C ◁× D,
C ≃C′, and D ≃D′, then C′ ◁× D′.
3. Both ◁+ and ◁× are reﬂexive and transitive.
We are now in a position to prove our ﬁrst theorem:
Theorem 24 (Decomposition Theorem). C0 ◁C1 iﬀthere exists a C2 such that
C0 ◁× C2 ◁+ C1.
Proof. We will use the currying deﬁnitions of subagent and multiplicative sub-
agent, and the committing deﬁnition of additive subagent. Let C0 = (A0, E0, ·0)
and C1 = (A1, E1, ·1). If C0 ◁C1, then there exists some Cartesian frame D over
A1 such that C0 = C◦
1(D).
Let C2 = (Image(D), E1, ·2), where ·2 is given by a ·2 e = a ·1 e.
Since
Image(D) ⊆A1, C2 is created by deleting some possible agents from C1, so by
the committing deﬁnition of additive subagent, C2 ◁+ C1.
By the currying deﬁnition of multiplicative subagent, we want to show that
there is a Cartesian frame M over Agent(C2) with Image(M) = Agent(C2)
such that C0 ≃C◦
2(M). But C◦
1(D) = C◦
2(D), since C1 and C2 have the same
environment. Thus C0 = C◦
2(D), so C0 ≃C◦
2(D), and Image(D) = Agent(C2),
so C0 ◁× C2.
This theorem shows that if one agent is a subagent of another, then there is
always a way to break down that subagency relationship into (possibly) multiple
subagency relationships that are all multiplicative and additive. That is, we can
always gain clarity about a certain subagency relationship by expressing it in
terms of the more familiar multiplicative and additive relations.
2.4.1
Committing, Assuming, Externalizing, Internalizing
Our ﬁrst pair of deﬁnitions of additive and multiplicative subagents were called
“committing” and “externalizing”, to reﬂect the idea that one can generate sub-
agents from a CF in particular ways. We now deﬁne these operations and their
inverses more rigorously, providing us with a set of tools for decomposing agents
into subagents and composing agents into superagents. First, we introduce the
notion of a sub-environment, dual to subagent:
Deﬁnition 25 (Sub-environment). We say C is a sub-environment of D, written
C ◁∗D, if D∗◁C∗.
15

The notion of a sub-environment can naturally be reﬁned into additive and
multiplicative notions:
Deﬁnition 26. We say C is an additive sub-environment of D, written C ◁∗
+ D,
if D∗◁+ C∗.
Similarly, we say C is a multiplicative sub-environment of D,
written C ◁∗
× D, if D∗◁× C∗.
In fact, subagent and sub-environment coincide when the notion is multiplica-
tive:
Claim 27. C ◁× D iﬀC ◁∗
× D.
Proof. Assuming the externalizing deﬁnition of ◁×, we have D∗≃(Z, Y × X, ·)
and C∗≃(Z×Y, X, •). This is exactly the externalizing deﬁnition for D∗◁×C∗,
so C ◁∗
× D.
Conversely, if C ◁∗
× D, then D∗◁× C∗, so C ∼= (C∗)∗◁× (D∗)∗∼= D.
Deﬁnition 28 (Committing). Given a Cartesian frame C = (A, E, ·) and a
subset B ⊆A, let CommitB(C) denote the Cartesian frame (B, E, ⋆) with ⋆
given by b⋆e = b·e. Let Commit\B(C) denote the Cartesian frame (A\B, E, ⋄)
with ⋄given by a ⋄e = a · e.
CommitB represents the Cartesian frame which results from the agent of C
committing to choose an element of B (mutatis mutandis for \B). In other
words, the agent reduces their available acts to some subset of their original
available acts.
Deﬁnition 29 (Assuming). Given a subset F ⊆E, let AssumeF (C) denote
the Cartesian frame (A, F, ⋆), where ⋆is given by a ⋆f = a · f. Let Assume\F
denote the Cartesian frame (A, E \ F, ⋄), where a ⋄e = a · e.
AssumeF represents the Cartesian frame which results from assuming that the
environment is chosen from F (mutatis mutandis for \F).
We see that committing and assuming do indeed generate additive subagents
and additive super-environments, respectively:
Claim 30.
(1) For all B ⊆A, CommitB(C) ◁+ C and Commit\B(C) ◁+ C.
(2) For all F ⊆E, C ◁∗
+ AssumeF (C) and C ◁∗
+ Assume\F (C).
Proof. (1) is trivial from the committing deﬁnition of additive subagent. (2)
is trivial from the committing deﬁnition together with the deﬁnition of sub-
environment.
16

We also have two operations for generating multiplicative subagents and super-
environments.
Deﬁnition 31. Given a partition X of Y , let Y/X denote the set of all functions
q from X to Y such that q(x) ∈x for all x ∈X.
Deﬁnition 32 (Externalizing). Given a partition B of A, let ExternalB(C)
denote the Cartesian frame (A/B, B×E, ⋆), where ⋆is given by q⋆(b, e) = q(b)·e.
Let External/B(C) denote the Cartesian frame (B, A/B×E, ⋄) where ⋄is given
by b ⋄(q, e) = q(b) · e.
Here the partition, B, and the set of functions A/B represent two multiplicative
subagents of A. To see why, consider a two-person team, comprised of Players 1
and 2. Player 1 has some available acts, which grant Player 1 some agency over
which outcome the team eﬀects. But Player 1 does not completely determine
the team’s behavior, since the team equally requires Player 2’s input. So in a
sense, Player 1 can at most eﬀect some set of possible team behaviors; they can
reduce the set of possible outcomes to the subset consistent with their selected
action. For this reason it makes sense to represent Player 1 as a partition; they
can only partially determine the team’s act.
Then when Player 2 acts, the outcome space is reduced from the particular
subset which Player 1 selects to a particular outcome; in this way it makes sense
to represent Player 2 as a function from Player 1’s partition to the set of possible
worlds.
We now deﬁne the inverse operation, internalizing:
Deﬁnition 33 (Internalizing).
Given a partition F of E, let InternalF (C)
denote the Cartesian frame (F ×A, E/F, ⋆) where ⋆is given by (f, a)⋆q = a·q(f)
Let Internal/F (C) denote the Cartesian frame (E/F ×A, F, ⋄) where ⋄is given
by (q, a) ⋄f = a · q(f).
InternalF (C) represents the Cartesian frame which results from factoring the
environment into equivalence classes, selecting an element of each equivalence
class, and then sending the choice of a particular equivalence class into the
agent.
Similarly, Internal/F (C) represents the Cartesian frame which results from
the same factorization, but the choice of an element from each equivalence class
is sent into the agent.
We see that externalizing and internalizing do indeed generate multiplicative
subagents and multiplicative superagents, respectively:
Claim 34.
• For all partitions B of A, ExternalB(C) ◁× C and External/B(C) ◁× C.
• For all partitions F of E, C ◁× InternalF (C) and C ◁× Internal/F (C).
17

Proof. See Appendix A.
We note in passing that these four operations are well-deﬁned up to biextensional
equivalence. Further, all four operations are idempotent:
Claim 35. For any subset B ⊆A, and for any partition F of E,
• CommitB, Commit\B, AssumeB, and Assume\B are idempotent.
• ExternalF , External/F , InternalF , and Internal/F are idempotent.
Idempotence makes sense for these operations. For example, suppose that you
have some frame C and externalize some choice to the environment, producing
frame C′; if you try to externalize the same choice, you should just get back C′,
since in that frame the choice is already external. The same intuition holds for
committing, assuming, and internalizing.
3
Conclusion
We have presented the CF framework because we believe it can become a valu-
able tool for formal philosophy. Of course, there is plenty of work left to be
done. In addition to the avenues of philosophical investigation we discussed in
§1, we mention a few others.
It would be useful to understand how the introduction of a probability mea-
sure over environments interacts with the rest of the framework. Probability
would allow us to express claims like “an agent C chooses an action that maxi-
mizes expected utility” within the framework.15
It would also be valuable to get a better sense of the structure of the algebra
of subagency. Is there a way to generate a set of subagents for a certain frame
(or set of frames) that has desirable closure properties? If so, what kind of
structure does this yield?
On the more technical side, it would be interesting to develop the categorical
framework into an independent foundation for Cartesian frames, and see to
what extent this helps streamline proofs and helps to pose and solve problems
in formal philosophy. Furthermore, there is a deep connection between linear
logic and the theory of Cartesian frames, since one can deﬁne binary operations
on frames that correspond in a precise way to those of linear logic. It would be
interesting to see if this connection could prove fruitful for investigations of the
CF framework.
15. Similarly, it would be good to integrate a theory of utility into the framework, though
this seems more straightforward to do. The example in §2.3 with the fruit already points in
this direction.
18

Acknowledgements
We would like to thank Alex Appel, Rob Bensinger, Tsvi Benson-Tilsen, Andrew
Critch, Abram Demski, Sam Eisenstat, David Girardo, Evan Hubinger, Ed-
ward Kmett, Ramana Kumar, Alexander Gietelink Oldenziel, Steve Rayhawk,
Nate Soares, Brian Skyrms, Simon Huttegger, Jeﬀrey Barrett, Cailin O’Connor,
James Weatherall, Toby Meadows, Aydin Mohseni, and Claire Wang for helpful
discussion and comments on earlier drafts. We also want to thank the Formal
Social Epistemology research group at the University of California, Irvine for a
useful discussion of our paper.
This research was supported by the Machine Intelligence Research Institute.
Scott Garrabrant
Machine Intelligence Research Institute
Reno, NV, USA
scott@intelligence.org
Daniel A. Herrmann
Department of Logic and Philosophy of Science
University of California, Irvine
Irvine, CA, USA
daherrma@uci.edu
Josiah Lopez-Wild
Department of Logic and Philosophy of Science
University of California, Irvine
Irvine, CA, USA
jlopezwi@uci.edu
A
Proofs of Claims
Earlier in the paper we mentioned homotopy equivalence. It will be useful in
what follows, so we now deﬁne it and prove its equivalence to biextensional
equivalence. Since homotopy and biextensional equivalences are equivalent no-
tions, we use ‘≃’ to denote both (it will be clear from context which deﬁnition
is in use).
Deﬁnition 36 (Homotopic). Two morphisms (g0, h0), (g1, h1) : C →D are
homotopic if (g0, h1) is also a morphism.
One can think of (g0, h1) as a sort of “continuous deformation” from (g0, h0) to
(g1, h1), hence the term ‘homotopic’.
Deﬁnition 37 (Homotopy equivalence). C is homotopy equivalent to D, written
C ≃D, if there exists a pair of morphisms φ : C →D, ψ : D →C, such that
19

ψ ◦φ is homotopic to the identity on C, and φ ◦ψ is homotopic to the identity
on D.
One can view homotopy equivalence as a weakening of isomorphism. If φ
and ψ composed to equal the identity in both orders, then C and D would
be isomorphic. Instead we only require that their compositions are homotopic
to the identity in both orders.
As it turns out, homotopy equivalence and
isomorphism coincide for biextensional frames.
Claim 38. If C = (A, E, ·) and D = (B, F, ⋆) are biextensional, then C ≃D iﬀ
C ∼= D.
Proof. “⇐” If C ∼= D, then there is some morphism (g, h) : C →D such that
both of g, h are bijective. Then both of g, h have inverses g−1, h−1. Then (g, h)
and (g−1, h−1) compose to the identity in both orders, and C ≃D.
“⇒” Assume C ≃D. Then there is some φ : C →D and some ψ : D →C
that compose to something homotopic to the identity in both orders. We will
show that φ (and thus ψ) is an isomorphism. Let φ = (gφ, hφ) and ψ = (gψ, hψ).
Then (gψ ◦gφ, idE) is a morphism. That is,
gψ(gφ(a)) · e = a · e
for all a ∈A, e ∈E. If for some a, gψ(gφ(a)) ̸= a, then A has two identical
rows, i.e., C is not biextensional. So gψ ◦gφ = idA, and gψ, gφ are bijective.
We now show that hφ is bijective. hφ is injective, since if hφ(f1) = hφ(f2)
then for all a ∈A,
gφ(a) ⋆f1 = a · hφ(f1)
= a · hφ(f2)
= gφ(a) ⋆f2
So f1 and f2 are identical columns; but D is biextensional, so f1 = f2.
hφ is surjective, since if there is some e0 ∈E such that e0 ̸= hφ(f) for all
f ∈F, then hφ(hψ(e0)) ̸= e0. But
a · hφ(hψ(e0)) = gψ(gφ(a)) · e0
= a · e0
for all a ∈A. Thus e0 and hφ(hψ(e0)) are distinct duplicate columns, violating
C’s biextensionality. So there can be no such e0.
Claim 39. C and D are biextensionally equivalent iﬀthey are homotopy equiv-
alent.
Proof. We want to show that C ≃D (interpreted as homotopy equivalence) iﬀ
ˆC ∼= ˆD. To do this, we will show that C ≃ˆC. It follows that if C ≃D, then
ˆC ≃C ≃D ≃ˆD. Since we just showed that for biextensional frames, homotopy
20

equivalence and isomorphism coincide, it follows that ˆC ∼= ˆD. Conversely, if
ˆC ∼= ˆD, then C ≃ˆC ≃ˆD ≃D.
Thus we show that C ≃ˆC. We therefore construct a pair of morphisms
(g, h) : C →ˆC and (j, k) : ˆC →C. We deﬁne g : A →ˆA by g(a) = ˆa, and
k : E →ˆE by k(e) = ˆe. For h : ˆE →E and j : ˆA →A, we can send each
equivalence class to some member of that class.
We need to show that (g ◦j, k ◦h) is a morphism homotopic to the identity
on ˆC, and likewise that (j ◦g, h ◦k) is a morphism homotopic to the identity
on C. Clearly g ◦j and k ◦h are the identity on ˆA and ˆE, respectively, so we
are done with the ﬁrst case. For the second case, j ◦g and h ◦k need not be the
identity, but we see that j(g(a)) ∼a and h(k(e)) ∼e for all a ∈A, e ∈E. So
j(g(a)) · e = a · e, which implies that (j ◦g, idE) is a morphism.
We now prove results from the main text.
Claim 40. If C ∼= D then C ≃D.
Proof. If C ∼= D then there is some morphism (g, h) : C →D such that g
and h are bijective. Thus they have inverses which together form a morphism
(g−1, h−1). Then these two morphisms compose to the identity in both orders,
and C ≃D.
We now prove Claim 22.
Claim 41. The committing deﬁnition of additive subagent implies the currying
deﬁnition.
Proof. Let X, Y, Z be sets such that X ⊆Y . Assume C ≃(X, Z, ⋄) and D ≃
(Y, Z, •), and let p : Y × Z →W be such that x ⋄z = p(x, z) and y • z = p(y, z).
If D = (B, F, ⋆), then by assumption there are morphisms (g0, h0) : D →
(Y, Z, •) and (g1, h1) : (Y, Z, •) →D which compose to something homotopic to
the identity in both orders.
Now we want to show the existence of some Cartesian frame M such that
C ≃D◦(M) with |Env(M)| = 1. So we deﬁne M = (X, {e}, ·), where x · e =
g1(x). Then D◦(M) = (X, {e} × F, ⋆′) where
x ⋆′ (e, f) = (x · e) ⋆f
= g1(x) ⋆f
= x • h1(f).
We now show that D◦(M) ≃(X, Z, ⋄) by constructing morphisms (g2, h2) :
(X, Z, ⋄) →D◦(M) and (g3, h3) : D◦(M) →(X, Z, ⋄) which compose to some-
thing homotopic to the identity in both orders. We start simply: let g2, g3 be
the identity on X. Let h2(e, f) = h1(f) and h3(z) = (e, h0(z)).
21

Next we check that these are indeed morphisms:
g2(x) ⋆′ (e, f) = x ⋆′ (e, f)
= x • h1(f)
= x ⋄h1(f)
= x ⋄h2(e, f).
Also,
g3(x) ⋄z = x ⋄z
= x • z
= x • h1(h0(z))
= x ⋆′ (e, h0(z))
= x ⋆′ h3(z).
We also see that the two morphisms compose to something homotopic to the
identity in both orders, since g2 ◦g3 = idX = g3 ◦g2.
Thus we see C ≃(X, Z, ⋄) ≃D◦(M), and |Env(M)| = 1, concluding the
proof.
Claim 42. The currying deﬁnition of additive subagent implies the committing
deﬁnition.
Proof. Assume C ≃D◦(M) with |Env(M)| = 1. Let D = (Y, Z, •), and let
f : Y × Z →W be given by f(y, z) = y • z.
Let X ⊆Y be given by X = Image(M). Since |Env(M)| = 1, we have
M ≃⊥X. So, C ≃D◦(M) ≃D◦(⊥X).
But D◦(⊥X) = (X, {j}×Z, ·) where x·(j, z) = f(x, z), and hence is isomor-
phic to (X, Z, ⋄) where x ⋄z = f(x, z). So C ≃D◦(M) ≃D◦(⊥X) ∼= (X, Z, ⋄);
that is, C ≃(X, Z, ⋄) and D = (Y, Z, •) with X ⊆Y , as in the committing
deﬁnition.
Claim 43. The externalizing deﬁnition of multiplicative subagent implies the
currying deﬁnition.
Proof. Assume three sets X, Y, Z, and a function p : X × Y × Z →W such that
C ≃(X, Y ×Z, ⋄) and D ≃(X ×Y, Z, •) where x⋄(y, z) = (x, y)•z = p(x, y, z).
Let D = (B, F, ⋆). Then by assumption there are morphisms (g0, h0) : D →
(X × Y, Z, •) and (g1, h1) : (X × Y, Z, •) →D which compose to something
homotopic to the identity in both orders.
We now deﬁne a Cartesian frame M over B by M = (X, Y × B, ·) where,
if g0(b) = (x, y), then x · (y, b) = b, and otherwise x · (y, b) = g1(x, y). Clearly
Image(M) ⊆B; to show equality, consider that for any b ∈B, if we let g0(b) =
(x, y), then x · (y, b) = b.
22

Clearly (x · (y, b)) ⋆f = g1(x, y) ⋆f when (x, y) ̸= g0(b). As it turns out, this
equality holds even when (x, y) = g0(b):
(x · (y, b)) ⋆f = b ⋆f
= g1(g0(b)) ⋆f
= g1(x, y) ⋆f.
So now we have D◦(M) = (X, Y × B × F, ⋆′) where
x ⋆′ (y, b, f) = (x · (y, b)) ⋆f
= g1(x, y) ⋆f
= (x, y) • h1(f).
Our ﬁnal step is to show that (X, Y × Z, ⋄) ≃D◦(M). To do so we construct
a pair of morphisms (g2, h2) : (X, Y × Z, ⋄) →D◦(M) and (g3, h3) : D◦(M) →
(X, Y × Z, ⋄) that compose to something homotopic to the identity in both
orders.
We can let g2, g3 = idX.
Let h2(y, b, f) = (y, h1(f)), and let h3(y, z) =
(y, b, h0(z)) for some b ∈B (it does not matter which). We check that these
constructions are morphisms:
g2(x) ⋆′ (y, b, f) = x ⋆′ (y, b, f)
= (x, y) • h1(f)
= p(x, y, h1(f))
= x ⋄(y, h1(f))
= x ⋄h2(y, b, f).
And the other pair:
g3(x) ⋄(y, z) = x ⋄(y, z)
= p(x, y, z)
= (x, y) • z
= (x, y) • h1(h0(z))
= x ⋆′ (y, b, h0(z))
= x ⋆′ h3(y, z).
Finally, (g2, h2) and (g3, h3) compose to something homotopic to the identity in
both orders since g2, g3 are the identity on X. Thus, C ≃(X, Y ×Z, ⋄) ≃D◦(M)
and Image(M) = Agent(D), satisfying the currying deﬁnition.
Claim 44. The currying deﬁnition of multiplicative subagent implies the ex-
ternalizing deﬁnition.
23

Proof. Assume C ≃D◦(M), where M is a Cartesian frame over Agent(D) with
Image(M) = Agent(D). Explicitly, let M = (X, Y, ·) and D = (B, Z, ⋆), and
let f : X × Y × Z →W be given by f(x, y, z) = (x · y) ⋆z.
Thus D◦(M) = (X, Y ×Z, ⋄) where x⋄(y, z) = (x·y)⋆z = f(x, y, z). It suﬃces
to show that D ≃(X×Y, Z, •) where (x, y)•z = f(x, y, z). To do so we construct
morphisms (g0, h0) : D →(X × Y, Z, •) and (g1, h1) : (X × Y, Z, •) →D that
compose to something homotopic to the identity in both orders.
We can let h0, h1 be the identity on Z. Let g1(x, y) = x · y. We see that g1
is surjective since Image(M) = B, so g1 has a right inverse. Let g0 be any right
inverse to g1, so g1(g0(b)) = b for all b ∈B. We check that these are indeed
morphisms:
g1(x, y) ⋆z = (x · y) ⋆z
= f(x, y, z)
= (x, y) • z
= (x, y) • h1(z).
And also, if we let g0(b) = (x, y):
g0(b) • z = (x, y) • z
= f(x, y, z)
= (x · y) ⋆z
= g1(x · y) ⋆z
= g1(g0(b)) ⋆z
= b ⋆h0(z).
We see that (g0, h0) and (g1, h1) compose to something homotopic to the identity
since h0, h1 are the identity on Z. Thus D ≃(X × Y, Z, •), completing the
proof.
Claim 45. Let C = (A, E, ·). Then
(1) for all partitions B of A, ExternalB(C) ◁× C and External/B(C) ◁× C.
(2) for all partitions F of E, C ◁× InternalF (C) and C ◁× Internal/F (C).
Proof. (1) As one might expect, this result is nearly immediate from the exter-
nalizing deﬁnition of multiplicative subagent. Let ExternalB(C) = (A/B, B ×
E, ⋆) where q ⋆(b, e) = q(b) · e. Consider the Cartesian frame (A/B × B, E, ⋄)
where (q, b) ⋄e = q(b) · e. Clearly then we have our three sets, A/B, B, E with a
function f : A/B×B×E →W given by f(q, b, e) = (q, b)⋄e = q(b)·e = q⋆(b, e).
So we need that C ≃(A/B × B, E, ⋄).
So we construct two morphisms (g0, h0) : C →(A/B ×B, E, ⋄) and (g1, h1) :
(A/B × B, E, ⋄) →C which compose to something homotopic to the identity
in both orders. We can let h0, h1 be the identity on E. Let g0 : A →A/B × B
24

be given by g0(a) = (q, b) where q(b) = a. Let g1 : A/B × B →A be given by
g1(q, b) = q(b). Then we have
g0(a) ⋄e = (q, b) ⋄e
= q(b) · e
= a · h0(e)
and
g1(q, b) · e = q(b) · e
= (q, b) ⋄e
= (q, b) ⋄h1(e).
Clearly the two morphisms compose to something homotopic to the identity in
both orders since h0, h1 are the identity on E.16 The proof that External/B(C)◁×
C is similar.
(2) This follows from the fact that (InternalF (C))∗∼= ExternalF (C∗)◁×C∗
and (Internal/F (C))∗∼= External/F (C∗)◁×C∗and the fact that multiplicative
subagent is equivalent to multiplicative sub-environment.
B
Categorical Framework
This appendix develops the category-theoretic perspective on Cartesian frames.
Here we show how to develop the CF constructions found in the main body via
categorical deﬁnitions. We also prove the equivalence of the category-theoretic
constructions and those found in the main body.
As was stated above, Chu(W) is the category of Chu spaces (Cartesian
frames) deﬁned over the set W, having as arrows all morphisms between Chu
spaces, with composition deﬁned as in the main text. To prove that Chu(W)
is indeed a category, we need only show that composition of morphisms is well-
deﬁned and associative and that there exist identity morphisms.
Proof. For identity morphisms, (idA, idE) is clearly an identity on C = (A, E, ·),
where idX is the identity map from X to itself.
As deﬁned in the main body, given Cartesian frames Ci = (Ai, Ei, ·i) and
morphisms (g0, h0) : C0 →C1 and (g1, h1) : C1 →C2, their composition,
(g1, h1) ◦(g0, h0) is given by (g1 ◦g0, h0 ◦h1) : C0 →C2. Then, for all a0 ∈A0
and all e2 ∈E2:
a0 ·0 h0(h1(e2)) = g0(a0) ·1 h1(e2)
= g1(g0(a0)) ·2 e2
Thus g1 ◦g0 and h0 ◦h1 satisfy the adjointness condition, and (g1 ◦g0, h0 ◦h1)
is a morphism.
16. In fact these morphisms are bijective and so establish an isomorphism, as the reader can
verify.
25

Associativity follows from the fact that the new morphism is a pair of com-
positions of set functions, and composition is associative for set functions.
So Chu(W) is indeed a category. In fact, Chu(W) is a self-dual category; that
is, Chu(W) is isomorphic to its dual.17
Claim 46. −∗is an isomorphism between Chu(W) and Chu(W)op.
Proof. First we must show that −∗is a functor. By deﬁnition, the objects of
Chu(W) are the same as those of Chu(W)op, and the arrows from D to C in
Chu(W)op are the arrows from C to D in Chu(W), with composition in reverse
order. We see that −∗preserves identity arrows.
We now show that −∗preserves composition. To this end, we have
(g0, h0)∗◦op (g1, h1)∗= (h1, g1) ◦(h0, g0)
= (h1 ◦h0, g0 ◦g1)
= ((g0, h0) ◦(g1, h1))∗
We now show that it is an isomorphism. If we abuse notation and also write
−∗: Chu(W)op →Chu(W) as the functor given by (E, A, ⋆)∗= (A, E, ·), where
a · e = e ⋆a, then clearly −∗: Chu(W) →Chu(W)op and −∗: Chu(W)op →
Chu(W) compose to the identity in both orders.
For our purposes, the claim that Chu(W) is self-dual really just amounts to the
claim that the transpose of a Cartesian frame is itself a Cartesian frame. As a
particular case, we have (C∗)∗= C.
Chu(W) also has initial and terminal objects:
Deﬁnition 47. Let 0 = ({}, {e}, ·), where Agent(0) is empty, {e} is any sin-
gleton, and · is trivial. Let ⊤= ({a}, {}, ·), where Env(0) is empty, {a} is any
singleton, and · is trivial.
Claim 48. 0 is initial in Chu(W) and ⊤is terminal in Chu(W).
Proof. Let C = (A, E, ·) be a Cartesian frame over W. Then a morphism from
0 to C is a pair of functions (g, h), where g is a function from {} to A and h is
a function from E to {e}. Considered as objects in Set, the category of sets, {}
is initial, and any singleton is terminal. So g and h are unique, and 0 is initial.
The proof that ⊤is terminal is nearly identical.
Technically these terms are ill-deﬁned since the denoted frame is not unique
(there exists one for each singleton).
The obvious solution is to show that
each initial and terminal object is isomorphic (a trivial corollary), take the
equivalence classes of initial and terminal objects up to isomorphism, and let 0
and ⊤denote a member of these classes.
17. Chu(W) is known as a *-autonomous category, systematically studied by Barr 1979.
26

In addition to our deﬁnition of ⊥S, we require one more Cartesian frame for
what follows:
Deﬁnition 49. Given S ⊆W, 1S is the Cartesian frame 1S = ({a}, S, ⋆), where
⋆is given by a ⋆s = s for all s ∈S. 1 is the Cartesian frame 1W .
Note that (⊥S)∗= 1S and (1S)∗= ⊥S for any S ⊆W.
We introduce a ﬁnal deﬁnition of subagent for ease of use in proofs. It will
be shown to be equivalent to the other two.
Deﬁnition 50 (Covering deﬁnition of subagent).
Let C = (A, E, ·), D =
(B, F, ⋆) be Cartesian frames over W.
We say that C ◁D if for all e ∈E,
there is a morphism (g, h) : C →D and an f ∈F such that e = h(f).
We call this the covering deﬁnition because E is covered by F, or equivalently,
there is a morphism (g, h) with h surjective.
We’re now in a position to prove that the categorical and currying deﬁnitions
are equivalent. We’ll do this by a series of implications:
Currying
Categorical
Covering
Claim 51. The covering and categorical deﬁnitions of subagent are equivalent.
Proof. Recall that each arrow C →⊥corresponds uniquely to an element e of
the environment E of that frame; we denote the morphism associated with e by
φe. If C ◁D according to the categorical deﬁnition, then, for every φe : C →⊥,
there are arrows (g, h) : C →D, ψf : D →⊥such that φe = ψf ◦(g, h). But
ψf ◦(g, h) sends j to h(ψf(j)) = h(f), and thus equals e iﬀh(f) = e. This is
just the covering deﬁnition, so the two deﬁnitions are equivalent.
Claim 52. The covering deﬁnition of subagent implies the currying deﬁnition.
Proof. Let C = (A, E, ·) and D = (B, F, ⋆) be Cartesian frames such that C ◁D
according to the covering deﬁnition.
Let X = hom(C, D), and let Z = (A, X, ⋄) be a Cartesian frame over B,
with ⋄given by a ⋄(g, h) = g(a). Thus D◦(Z) = (A, X × F, •), where
a • ((g, h), f) = (a ⋄(g, h)) ⋆f
= g(a) ⋆f
for all a ∈A, (g, h) ∈X, and f ∈F.
27

We now want to show that C ≃D◦(Z). To do so, we will construct mor-
phisms (g0, h0) : C →D◦(Z) and (g1, h1) : D◦(Z) →C which compose to
something homotopic to the identity in both orders.
We can let g0, g1 be the identity on A. We let h0 : X × F →E be deﬁned
by h0((g, h), f) = h(f). Finally, we let h1 : E →X × F be given by h1(e) =
((g, h), f) such that h(f) = e. By the covering deﬁnition, there is always such
a morphism (g, h) and an f ∈F.
We now check that (g0, h0) is a morphism. We have
g0(a) • ((g, h), f) = a • ((g, h), f)
= g(a) ⋆f
= a · f
= a · h0((g, h), f).
Similarly, for (g1, h1) we have
g1(a) · e = a · e
= a · h(f)
= g(a) ⋆f
= a • ((g, h), f)
= a • h1(e)
since h1(e) = ((g, h), f), where h(f) = e. Clearly (g0, h0) and (g1, h1) compose
to something homotopic to the identity in both orders, since g0, g1 are the
identity on A.
Claim 53. The currying deﬁnition of subagent implies the categorical deﬁni-
tion.
Proof. Let C = (A, E, ·), D = (B, F, ⋆) be Cartesian frames over W.
Let
Z = (X, Y, ⋄) be a Cartesian frame over B such that C ≃D◦(Z). Explicitly,
D◦(Z) = (X, Y × F, •) where x • (y, f) = (x ⋄y) ⋆f. Then there are morphisms
σ : C →D◦(Z) and τ : D◦(Z) →C which compose to something homotopic to
the identity in both orders.
Let φe : C →⊥be a morphism corresponding to e ∈E. We want to show
that there are morphisms ξ : C →D, ψ : D →⊥such that φe = ψ ◦ξ. First,
note that for any y ∈Y we can deﬁne a morphism (gy, hy) from D◦(Z) to D by
gy(x) = x ⋄y
hy(f) = (y, f).
28

We check that (gy, hy) is indeed a morphism:
gy(x) ⋆f = (x ⋄y) ⋆f
= x • (y, f)
= x • hy(f).
Thus (gy, hy) ◦σ is a morphism from C to D for any y ∈Y .
We now construct a ψ : D →⊥such that ψ ◦((gy, hy) ◦σ) = φe, i.e., such
that the following diagram commutes:
C
⊥
D◦(Z)
D
φe
σ
(gy,hy)
ψ
This will show that φe factors through D, establishing our result. To do so we
will make use of the fact that σ and τ compose to something homotopic to the
identity in both orders. If we let σ = (gσ, hσ) and τ = (gτ, hτ) then we know that
hτ(hφe(j)) = (y, f) for some (y, f) ∈Y × F. Holding this (y, f) ﬁxed, we may
select the corresponding morphisms (gy, hy) and ψf. Then hy(hψf (j)) = (y, f).
Thus
gφe(gτ(x)) ·⊥j = x • hτ(hφe(j))
= x • (y, f)
= x • hy(hψf (j))
= gψf (gy(x)) ·⊥j
so φe ◦τ = ψf ◦(gy, hy). This implies that φe ◦τ ◦σ = ψf ◦(gy, hy) ◦σ. Finally,
we show that φe = φe ◦τ ◦σ:
gφe(gτ(gσ(a))) ·⊥j = a · (hσ(hτ(hφe(j))))
= a · e
= gφe(a) ·⊥j.
Thus φe = ψf ◦(gy, hy) ◦σ, and so φe factors through D.
So we see that the three deﬁnitions are equivalent. We can also give categorical
deﬁnitions of additive and multiplicative subagents, which are, as one might
expect, quite similar to the above categorical deﬁnition of subagent:
Deﬁnition 54 (Categorical deﬁnition of additive subagent). We say C ◁+ D
if there exists a single morphism φ0 : C →D such that for every morphism
φ : C →⊥there exists a morphism φ1 : D →⊥such that φ is homotopic to
φ1 ◦φ0.
Note that the diﬀerence between this deﬁnition and the categorical deﬁnition
of (general) subagent is that, in the case of additive subagents, we require the
morphism from C to D to be unique, and we require only homotopy, not equality.
29

Claim 55. The categorical deﬁnition of additive subagent implies the commit-
ting deﬁnition.
Proof. Let C = (A, E, ·) and D = (B, F, •) be Cartesian frames over W. Let
(g0, h0) : C →D be such that for all (g, h) : C →⊥, there exists a (g′, h′) : D →
⊥such that (g′, h′)◦(g0, h0) is homotopic to (g, h). As usual, let ⊥= (W, {j}, ⋆).
Let X = {g0(a) : a ∈A} ⊆B. Let p : B×F →W be given by p(b, f) = b•f.
Then we must show that C ≃(X, F, ⋄) where x⋄z = p(x, f) (i.e., (X, F, ⋄) is just
D with a restricted agent). To show homotopy equivalence we must construct
(g1, h1) : C →(X, F, ⋄) and (g2, h2) : (X, F⋄) →C which compose to something
homotopic to the identity in both orders.
So we deﬁne g1 : A →X by g1(a) = g0(a). g1 is surjective and thus has a
right inverse. We let g2 : X →A be any right inverse to g1. We let h1 : F →E
be h1(z) = h0(z). So (g1, h1) is (g0, h0) but with codomain (X, F, ⋄).
We deﬁne h2 : E →F by way of the fact that morphisms into ⊥are
completely determined by elements of the environment of the domain. Thus
given an e ∈E, let φe = (ge, he) : C →⊥be the corresponding morphism. Then
by assumption there is a morphism (g′
e, h′
e) : D →⊥such that (g′
e, h′
e) ◦(g0, h0)
is homotopic to (ge, he). We deﬁne h2 by h2(e) = h′
e(j).
Now we show that these do indeed form morphisms. (g1, h1) is a morphism
since (g0, h0) is. For (g2, h2) we see that
x ⋄h2(e) = g1(g2(x)) ⋄h′
e(j)
= g′
e(g0(g2(x))) ⋆j
= g2(x) · he(j)
= g2(x) · e.
As our ﬁnal step we check that these two morphisms compose to something
homotopic to the identity in both orders. Clearly (g1, h1) ◦(g2, h2) does since
g1 ◦g2 = idX. In the other order we have
g2(g1(a)) · e = g1(a) ⋄h2(e)
= g0(a) ⋄h′
e(j)
= g′
e(g0(a)) ⋆j
= a · he(j)
= a · e.
So C ≃(X, F, ⋄), and C ◁+ D according to the committing deﬁnition.
Claim 56. The committing deﬁnition of additive subagent implies the categor-
ical deﬁnition.
Proof. Let X, Y , and Z be sets such that X ⊆Y , let p : Y × Z →W, and let
C ≃(X, Z, ⋄) and D ≃(Y, Z, •).
30

By assumption there are morphisms (g1, h1) : C →(X, Z, ⋄) and (g2, h2) :
(X, Z, ⋄) →C which compose to something homotopic to the identity in both
orders, and similarly there are morphisms (g3, h3) : D →(Y, Z, •), (g4, h4) :
(Y, Z, •) →D which compose to something homotopic to the identity in both
orders. Further, we deﬁne (g0, h0) : (X, Z, ⋄) →(Y, Z, •) by letting g0 be the
inclusion X ,−→Y and h0 = idZ.
We deﬁne our single morphism φ : C →D by φ = (g4, h4)◦(g0, h0)◦(g1, h1),
so the following diagram commutes:
C
D
(X, Z, ⋄)
(Y, Z, •)
φ
(g1,h1)
(g0,h0)
(g4,h4)
Our goal now is to show that for any morphism (g, h) : C →⊥, we can construct
a morphism (g′, h′) : D →⊥such that (g, h) is homotopic to (g′, h′) ◦φ.
So let ⊥= (W, {j}, ⋆), C = (A, E, ·0), D = (B, F, ·1). We deﬁne h′ : {j} →
F by h′ = h3 ◦h2 ◦h. Let g′ : B →W be given by g′(b) = b ·1 h′(j). Then
(g′, h′) is a morphism:
g′(b) ⋆j = g′(b)
= b ·1 h′(j).
Our ﬁnal step is to show that (g, h) is indeed homotopic to (g′, h′)◦φ = (g′, h′)◦
(g4, h4) ◦(g0, h0) ◦(g1, h1). It suﬃces to show that (g, h1 ◦h0 ◦h4 ◦h′) is a
morphism; equivalently, since h0 is the identity and h′ = h3 ◦h2 ◦h, we show
that
(g, h1 ◦h4 ◦h3 ◦h2 ◦h)
is a morphism:
g(a) ⋆j = a ·0 h(j)
= a ·0 h1(h2(h(j)))
= g1(a) ⋄h2(h(j))
= g1(a) • h2(h(j))
= g1(a) • h4(h3(h2(h(j))))
= g1(a) ⋄h4(h3(h2(h(j))))
= a ·0 h1(h4(h3(h2(h(j))))).
Deﬁnition 57 (Categorical deﬁnition of multiplicative subagent). We say C ◁×
D if for every morphism φ : C →⊥, there exist morphisms φ0 : C →D,
φ1 : D →⊥such that φ = φ1 ◦φ0, and for every morphism ψ : 1 →D, there
31

exist morphisms ψ0 : 1 →C, ψ1 : C →D such that ψ = ψ1 ◦ψ0. That is, the
following diagrams commute:
C
⊥
D
φ
φ0
φ1
C
1
D
ψ1
ψ
ψ0
We will show that this deﬁnition is equivalent to the others by way of yet another
equivalent deﬁnition, this one in terms of sub-environments:
Deﬁnition 58 (Sub-environment deﬁnition of multiplicative subagent). We say
C ◁× D if C ◁D and C ◁∗D. Equivalently, C ◁× D if C ◁D and D∗◁C∗.
Claim 59. The categorical deﬁnition of multiplicative subagent is equivalent
to the sub-environment deﬁnition.
Proof. Clearly both deﬁnitions require that C ◁D.
The condition that for every morphism ψ : 1 →D, there are morphisms
ψ0 : 1 →C and ψ1 : C →D such that ψ = ψ1 ◦ψ0 is equivalent to the condition
that for every morphism ψ∗: D∗→⊥there are morphisms ψ∗
0 : C∗→⊥and
ψ∗
1 : D∗→C∗such that ψ∗= ψ∗
0 ◦ψ∗
1. This is the categorical deﬁnition of
D∗◁C∗.
Claim 60. The sub-environment deﬁnition of multiplicative subagent is equiv-
alent to the externalizing deﬁnition.
Proof. First we show that the sub-environment deﬁnition implies the external-
izing deﬁnition. Let C = (A, E, ·) and D = (B, F, ⋆) be Cartesian frames over
W with C ◁D and C ◁∗D. We deﬁne a function p : A × hom(C, D) × F →W
by
p(a, (g, h), f) = g(a) ⋆f
= a · h(f).
We want to show that C ≃(A, hom(C, D)×F, ⋄) and D ≃(A×hom(C, D), F, •),
where a ⋄((g, h), f) = p(a, (g, h), f) = (a, (g, h)) • f.
So we construct morphisms (g0, h0) : C →(A, hom(C, D)×F, ⋄) and (g1, h1) :
(A, hom(C, D)×F, ⋄) →C which compose to something homotopic to the iden-
tity in both orders.
Let g0, g1 be the identity on A.
Let h0 be deﬁned by
h0((g, h), f) = h(f). By the covering deﬁnition of subagent, h0 is surjective,
and has a right inverse. Let h1 be any right inverse to h0.
32

We check that these are indeed morphisms:
g0(a) ⋄((g, h), f) = a ⋄((g, h), f)
= p(a, (g, h), f)
= a · h(f)
= a · h0((g, h), f)
and, if h1(e) = ((g, h), f):
g1(a) · e = a · h0(h1(e))
= a · h0((g, h), f)
= a · h(f)
= p(a, (g, h), f)
= a ⋄((g, h), f)
= a ⋄h1(e).
We also see that the two morphisms compose to something homotopic to the
identity in both orders since g0, g1 are the identity on A. So C ≃(A, hom(C, D)×
F, ⋄).
We now want to show that D ≃(A × hom(C, D), F, •). To do so we con-
struct two morphisms (g2, h2) : D →(A × hom(C, D), F, •) and (g3, h3) :
(A × hom(C, D), F, •) →D which compose to something homotopic to the
identity in both orders.
We can let h2 and h3 be the identity on F. We deﬁne g3 by g3(a, (g, h)) =
g(a). By the covering deﬁnition of subagent and the fact that D∗◁C∗, g3 is
surjective and so has a right inverse. Let g2 be some right inverse to g3.
We check that these are indeed morphisms:
g3(a, (g, h)) ⋆f = g(a) ⋆f
= p(a, (g, h), f)
= (a, (g, h)) • f
= (a, (g, h)) • h3(f)
and, if g2(b) = (a, (g, h)):
g2(b) • f = (a, (g, h)) • f
= p(a, (g, h), f)
= g(a) ⋆f
= g3(a, (g, h)) ⋆f
= g3(g2(b)) ⋆f
= b ⋆h2(f).
Clearly the two morphisms compose to something homotopic to the identity in
both orders since h2, h3 are the identity on F. Thus D ≃(A×hom(C, D), F, •),
so C and D satisfy the externalizing deﬁnition of multiplicative subagent.
33

Conversely, if C ◁× D according to the externalizing deﬁnition, then we also
have D∗◁× C∗.
However, multiplicative subagent is a stronger notion than
subagent, so we have C ◁D and D∗◁C∗, or equivalently C ◁∗D.
In the main body we chose to present Cartesian frames from a primarily matrix-
centered point of view. We made this decision because matrices are more famil-
iar to the working decision theorist. But the category-theoretic constructions
may oﬀer powerful insights into the underlying mathematics. For this reason
we are interested in rewriting the CF framework from a purely categorical point
of view. We hope to pursue this project in the future.
References
Ahmed, Arif. 2014. Evidence, decision and causality. Cambridge University
Press.
Barr, Michael. 1979. *-Autonomous Categories. Springer-Verlag.
Barrett, Jeﬀrey A, Calvin Cochran, and Brian Skyrms. 2020. “On the Evolution
of Compositional Language.” Philosophy of Science 87 (5): 910–920.
Barrett, Jeﬀrey A, Brian Skyrms, and Calvin Cochran. 2018. “Hierarchical mod-
els for the evolution of compositional language.”
Gabriel, Iason. 2020. “Artiﬁcial intelligence, values, and alignment.” Minds and
Machines 30 (3): 411–437.
Garrabrant, Scott. 2020. “Cartesian Frames.” https://www.alignmentforum.
org/s/2A7rrZ4ySx6R8mfoT.
Holliday, Wesley H. 2018. “Possibility Frames and Forcing for Modal Logic.”
https://escholarship.org/uc/item/0tm6b30q#article main.
Humberstone, I. L. 1981. “From Worlds to Possibilities.” Journal of Philosoph-
ical Logic 10 (3): 313–339.
Jeﬀrey, Richard C. 1965. The logic of decision. University of Chicago Press.
Joyce, James M. 1999. The foundations of causal decision theory. Cambridge
University Press.
Lewis, David. 2008. Convention: A philosophical study. John Wiley & Sons.
List, Christian, Philip Pettit, et al. 2011. Group agency: The possibility, design,
and status of corporate agents. Oxford University Press.
Luce, R Duncan, and Howard Raiﬀa. 1989. Games and decisions: Introduction
and critical survey. Courier Corporation.
34

Mayo-Wilson, Conor, Kevin Zollman, and David Danks. 2011. “The Indepen-
dence Thesis: When Individual and Social Epistemology Diverge*.” Philos-
ophy of Science 78 (4): 653–677. issn: 00318248, 1539767X. http://www.
jstor.org/stable/10.1086/661777.
. 2013. “Wisdom of crowds versus groupthink: learning in groups and in
isolation.” International Journal of Game Theory 42 (3): 695–723.
Nozick, Robert. 1969. “Newcomb’s problem and two principles of choice.” In
Essays in honor of Carl G. Hempel, 114–146. Springer.
Savage, Leonard J. 1972. The foundations of statistics. Courier Corporation.
Skyrms, Brian. 1984. Pragmatics and Empiricism.
. 1990. The dynamics of rational deliberation. Harvard University Press.
. 2010. Signals: Evolution, learning, and information. Oxford University
Press.
35

