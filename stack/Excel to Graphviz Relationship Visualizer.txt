Excel to Graphviz Relationship Visualizer 
 
 
EXCEL TO GRAPHVIZ 
RELATIONSHIP 
VISUALIZER 
 
6/8/2018 
See the connections 
 
The Excel to Graphviz Relationship Visualizer makes it easy for you to 
collect pairs of data in Excel, and send the data through the open source 
Graphviz graphing engine to draw the data connections. The combination of 
these tools makes it quick and easy to draw complex data relationships. 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 1 
Excel to Graphviz Relationship 
Visualizer 
 
S E E  T H E  C O N N E C T I O N S  
Excel to Graphviz Relationship Visualizer 
Copyright © 2015-2018, Jeffrey J. Long. All rights reserved. 
Written and published by Jeffrey J. Long  
Published at: https://sourceforge.net/projects/relationship-visualizer/  
Contact the author at Relationship.Visualizer@gmail.com 
This program is free software; you can redistribute it and/or modify it under the terms of the GNU General 
Public License version 2.0 (GPLv2) as published by the Free Software Foundation; either version 2 of the 
License, or (at your option) any later version. See page 165 of this document for a copy of the license. 
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the 
implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General 
Public License for more details. 
You should have received a copy of the GNU General Public License along with this program; if not, write to 
the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA. 
 
Author Acknowledgements 
The Excel to Graphviz Relationship Visualizer incorporates Open Source content from the following sources: 
 
Graphviz 
Version: 2.38.0 (20140413.2041) 
Date: 13 April 2014 
 
Written By: AT&T Research 
http://www.graphviz.org  
Graphviz is free software licensed under the Eclipse Public License (EPL) v1.0 
 
Shell and Wait 
Version: unknown 
Date: 06 November 2013 
 

Excel to Graphviz Relationship Visualizer 
 
Page 2 
Written By: Charles H. Pearson 
http://www.cpearson.com/excel/ShellAndWait.aspx  
 
Copyright © 1997-2014, Charles H. Pearson.  
All of the formulas and VBA code are explicitly granted to the Public Domain. 
 
Brewer Color Schemes 
Apache-Style Software License for ColorBrewer software and ColorBrewer Color Schemes, Version 
1.1 
Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The Pennsylvania State University. All rights 
reserved. 
1. Redistribution and use in source and binary forms, with or without modification, are 
permitted provided that the following conditions are met: 
2. Redistributions as source code must retain the above copyright notice, this list of conditions 
and the following disclaimer. 
The end-user documentation included with the redistribution, if any, must include the 
following acknowledgment: 
This product includes color specifications and designs developed by Cynthia Brewer 
( http://colorbrewer.org/ ). 
Alternately, this acknowledgment may appear in the software itself, if and wherever such 
third-party acknowledgments normally appear. 
3. The name "ColorBrewer" must not be used to endorse or promote products derived from 
this software without prior written permission. For written permission, please contact 
Cynthia Brewer at cbrewer@psu.edu . 
4. Products derived from this software may not be called "ColorBrewer", nor may 
"ColorBrewer" appear in their name, without prior written permission of Cynthia Brewer. 
THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, 
BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A 
PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CYNTHIA BREWER, MARK 
HARROWER, OR THE PENNSYLVANIA STATE UNIVERSITY BE LIABLE FOR ANY DIRECT, INDIRECT, 
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED 
TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR 
BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN 
ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH 
DAMAGE. 
 

Excel to Graphviz Relationship Visualizer 
 
Page 3 
TABLE OF CONTENTS 
TABLE OF CONTENTS .......................................................................................................... 3 
FOREWARD ......................................................................................................................... 6 
INTRODUCTION ................................................................................................................... 7 
GETTING STARTED ............................................................................................................ 10 
Required Tools ....................................................................................................................................... 10 
Install Graphviz ...................................................................................................................................... 10 
Edit the System PATH Environment Variable .................................................................................... 12 
Test Graphviz from the Command Line ............................................................................................. 14 
Install the Relationship Visualizer Excel Spreadsheet Template .................................................. 15 
RELATIONSHIP VISUALIZER EXCEL WORKBOOK .............................................................. 18 
Overview ................................................................................................................................................. 18 
“data” Worksheet ................................................................................................................................. 18 
“graph” Worksheet ............................................................................................................................... 18 
“styles” Worksheet ................................................................................................................................ 18 
“style designer” Worksheet ................................................................................................................. 18 
“sql” Worksheet ..................................................................................................................................... 19 
“source” Worksheet .............................................................................................................................. 19 
“settings” Worksheet ............................................................................................................................ 19 
“HELP - shapes” Worksheet ................................................................................................................. 19 
“HELP - colors” Worksheet ................................................................................................................... 20 
“HELP – attributes” Worksheet ........................................................................................................... 20 
“about…” Worksheet ........................................................................................................................... 20 
“Graphviz” Ribbon Tab........................................................................................................................ 20 
“Style Designer” Ribbon Tab .............................................................................................................. 20 
“SQL” Ribbon Tab ................................................................................................................................. 20 
“Source” Ribbon Tab ............................................................................................................................ 20 
VISUALIZATION TERMINOLOGY ....................................................................................... 21 
Graph ...................................................................................................................................................... 21 
Node ........................................................................................................................................................ 21 
Edge ......................................................................................................................................................... 21 
Undirected Graph ................................................................................................................................. 21 
Directed Graph ...................................................................................................................................... 21 
Labels ....................................................................................................................................................... 21 
Splines ...................................................................................................................................................... 22 
Ports ......................................................................................................................................................... 22 
Clusters / Subgraphs ............................................................................................................................ 23 
Layout Engines ........................................................................................................................................ 23 
CREATING GRAPHS ........................................................................................................... 24 
Create a New Workbook from the Relationship Visualizer Template ....................................... 24 
Save the Workbook as a Macro-Enabled Workbook ................................................................... 25 

Excel to Graphviz Relationship Visualizer 
 
Page 4 
Creating Your First Graph ................................................................................................................... 29 
Constructing Simple Graphs ................................................................................................................ 32 
THE ‘GRAPHVIZ’ RIBBON TAB .......................................................................................... 40 
Graph to Worksheet ............................................................................................................................ 40 
Graph to File .......................................................................................................................................... 41 
Layout ...................................................................................................................................................... 43 
Options .................................................................................................................................................... 45 
Styles ........................................................................................................................................................ 47 
Debug ...................................................................................................................................................... 49 
‘data’ Worksheet................................................................................................................................... 50 
Help .......................................................................................................................................................... 51 
CREATING RELATIONSHIP VISUALIZATIONS .................................................................... 52 
Introduction ............................................................................................................................................. 52 
‘Happy Days’ Example ........................................................................................................................ 52 
Using the ‘style designer’ Worksheet ................................................................................................ 57 
Using the ‘styles’ Worksheet ................................................................................................................ 67 
Applying Custom Styles ........................................................................................................................ 70 
Modifying the Style of Individual Elements ...................................................................................... 85 
Grouping Information in Clusters ........................................................................................................ 87 
Adding Native Graphviz Directives ................................................................................................... 90 
Adding Images ....................................................................................................................................... 92 
Summary .................................................................................................................................................. 96 
CREATING VIEWS .............................................................................................................. 97 
Introduction ............................................................................................................................................. 97 
Views vs. Layers ..................................................................................................................................... 97 
Continuing Our Example ...................................................................................................................... 97 
PUBLISHING GRAPHS ...................................................................................................... 103 
Setting Output File Options ............................................................................................................... 103 
Specifying the Output File Format ................................................................................................... 104 
Graph to File ........................................................................................................................................ 104 
View the File ......................................................................................................................................... 104 
ADVANCED TOPICS, TIPS, AND TRICKS ......................................................................... 106 
HTML Labels ......................................................................................................................................... 106 
Keywords - ‘Graph’, ‘Node’, and ‘Edge’ Keywords ..................................................................... 108 
Clusters - Depicting a Relationship from or to a Cluster .............................................................. 110 
Clusters - Aligning Nodes across Clusters ....................................................................................... 116 
Nodes - Shape=“Record” .................................................................................................................. 118 
Nodes - Shape=“Record” With Ports Specified ........................................................................... 119 
Nodes - Skewing the Angle of Polygon Nodes ............................................................................. 120 
Nodes - Distorting the Length of Polygon Nodes .......................................................................... 121 
Edges - Consolidating Edges Using the ‘strict’ Option ................................................................. 122 
Edges - Changing the Order of Edges............................................................................................ 123 

Excel to Graphviz Relationship Visualizer 
 
Page 5 
Edges - Placing a Label at the Head or Tail of an Edge ............................................................ 124 
Edges - Drawing an Edge from or to the Center of a Node ...................................................... 125 
Graphs - Rotating Graphs 90 Degrees .......................................................................................... 126 
WORKING WITH LARGE DATA SETS ............................................................................... 127 
Large Data Set Example - ‘The Beatles’ Music Catalog .............................................................. 127 
Use Views to Simplify the Graphs.................................................................................................... 130 
Use a Data Subset to Get to Answers ............................................................................................. 134 
USING SQL TO IMPORT DATA FROM OTHER EXCEL SPREADSHEETS ............................. 137 
SQL Explained ..................................................................................................................................... 137 
ActiveX Data Objects (ADO) SQL Queries .................................................................................... 137 
SQL ......................................................................................................................................................... 139 
Visualize ................................................................................................................................................ 140 
Writing SQL Queries to create graphs ........................................................................................... 140 
For more information on Excel SQL ................................................................................................. 145 
WORKING WITH THE DOT LANGUAGE ........................................................................... 146 
Viewing DOT Source Code ................................................................................................................ 146 
Source .................................................................................................................................................... 149 
Clipboard .............................................................................................................................................. 149 
Visualize ................................................................................................................................................ 150 
Tools ....................................................................................................................................................... 150 
Web Resources .................................................................................................................................... 151 
Working Interactively with Graphviz on your Workstation ........................................................ 152 
Working Interactively with Graphviz over the Internet ............................................................... 155 
CHANGING MASTER SETTINGS ....................................................................................... 157 
Graph Options ..................................................................................................................................... 157 
Command Line Options ...................................................................................................................... 158 
‘styles’ Worksheet ............................................................................................................................... 159 
‘data’ Worksheet................................................................................................................................. 160 
‘source’ Worksheet .............................................................................................................................. 162 
‘sql’ Worksheet .................................................................................................................................... 163 
REFERENCES .................................................................................................................... 164 
GNU GENERAL PUBLIC LICENSE ...................................................................................... 165 
 

Excel to Graphviz Relationship Visualizer 
 
Page 6 
FOREWARD 
Relationships are the way in which two or more 
concepts, objects, or people are connected. 
Visualization is any technique for creating 
images, diagrams, or animations to communicate a 
message. Visualization through visual imagery has 
been an effective way to communicate both 
abstract and 
concrete ideas since 
the dawn of man. 
Examples from 
history include cave 
paintings, Egyptian 
hieroglyphs, Greek 
geometry, and 
Leonardo da Vinci's 
revolutionary 
methods of technical drawing for engineering and 
scientific purposes. 
Individuals often ask to be shown the “big picture”, 
that broad, overall perspective of a problem or 
situation. So much so that related common clichés 
or adages have found their way into our 
vocabulary. 
 
“A picture is worth a thousand words” refers 
to the notion that a complex idea can be 
conveyed with just a single still image. It 
also aptly characterizes one of the main 
goals of visualization, namely making it 
possible to absorb large amounts of data 
quickly. 
 
“He/she can’t see the forest for the trees” 
refers to the inability to discern an overall 
pattern from a mass of detail; or to see 
the broader, more general situation. 
If big picture views are so valued, then why are 
they so uncommon? The simple answer is that big 
picture views are hard to produce. Think of it this 
way, it is much easier to read a map than it is to 
draw a map. Often we are drowning in volumes of 
data, and drawing diagrams is a difficult and time 
consuming task.  
The Relationship Visualizer for Excel tool 
described in this manual derived from personal 
work to solve this conundrum. A philosophy of 
breaking a complex situation into descriptions of 
its simplest relationships guided the solution. Since 
people are comfortable collecting data in 
Microsoft Excel, it made for the ideal data entry 
tool. Finally, pairing Microsoft Excel with the free, 
open-source graphing engine Graphviz facilitated 
converting the data in spreadsheets into graphs 
and views providing alternate perspectives. 
The Relationship Visualizer tool was inspired by 
the work of Martin F. James, and his visualization 
tool Lego™ Charts for Excel which you can learn 
about and obtain at 
http://sourceforge.net/projects/legocharts/ . 
Martin’s tool is a brilliant piece of work and makes 
an excellent companion for the Relationship 
Visualizer. 
I hope you find this tool useful. 
Jeff Long 
Relationship.Visualizer@gmail.com 

Excel to Graphviz Relationship Visualizer 
 
Page 7 
INTRODUCTION 
Everything around us has relationships. These 
relationships can be between two or more 
concepts, objects, people, etc. Relationships 
describe the state of being connected. For 
example, an apple is related to an apple tree; an 
apple tree is related to an orchard; an orchard is 
related to a plot of land; a plot of land is related 
to an owner as well as a geographical location. 
It can be difficult to see the breadth of 
relationships because either the information about 
the connections is spread across many people and 
sources, or the volume of information makes the 
challenge of depicting the relationships too 
daunting. The Relationship Visualizer makes it easy 
to capture relationships using language, and see 
the relationships in pictures using graphs. 
Let’s look at a simple example. The states in the 
United States of America are related through the 
borders they share. 
 
Michigan shares a border with Ohio, 
Indiana, and Wisconsin. 
 
Wisconsin shares a border with Illinois, 
Iowa, Minnesota, and Michigan. 
 
And so on… 
In businesses throughout the world people like to 
step up to white boards and draw these 
relationships as shape and lines because it is 
simple to represent the concept, and as the old 
adages says “a picture is worth a thousand 
words”. Using the examples above, the pictures of 
the border relationships described above is 
graphed as follows: 
 
and 
 
As the number of relationships grow, people tend 
to abandon the pictures, and revert to collecting 
the information in lists. Microsoft Excel is an 
excellent tool for this task, and people find it easy 
to use. To capture the state border relationships in 
this example, one only needs two columns in Excel, 
a column containing the name of the state, and 
another column containing the name of the state 
which it borders. It only takes a small amount of 
time to collect the information for all 50 states in a 
table such as: 
 
Contrast entering information into Excel with 
illustrating the state border relationships for all 50 
states in a drawing. Most people would agree that 

Excel to Graphviz Relationship Visualizer 
 
Page 8 
it would be a tedious, time-consuming task. First 
you would need to have access to a drawing tool 
such as Visio. Next you would need to create 50 
shapes to depict each of the states. You would 
then need to connect all the shapes with lines, and 
finally you would need to arrange the shapes to 
optimize the drawing so that shapes are spaced 
evenly, and the lines do not cross over one 
another. Each time you move a shape it will 
require moving other shapes and lines until a crisp, 
balanced view is created. Most people are not 
willing devote the time necessary to create such a 
drawing when the information can be collected in 
Excel in a fraction of the time. 
While collecting the information in Excel might be 
expedient, some problems are easier to solve 
using a picture. If we were give the question 
“What is the least number of states you must pass 
through to get from Michigan to California, and 
what are the names of those states?” the answer 
can be found in the Excel table data, but it won’t 
be easy. Getting the answer however will take 
many, many enumerations, jumping from row to 
row.  
The easier way to solve this problem is to see the 
information in a graph, and walk the connections 
with your finger. Your eyes will scan ahead to see 
the shortest routes, and you can count which path 
leads to the lowest number. 
The Relationship Visualizer gives you the ability to 
use the ease of collecting relationship information 
as a list within Excel, and draw relationship graphs 
within seconds. Copying the data from the table 
above into the Relationship Visualizer and asking it 
to generate a graph turns the data into the 
following visual information: 
 
 
 
 
 
 
 
 
 
 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 9 
From here we can begin to determine that the 
route which connects Michigan and California 
through the least number of borders would occur 
approximately along a straight line from Michigan 
to California. This line is depicted by the blue 
arrow drawn on the graph below. 
We can draw orange arrows on this graph to 
depict a route which answers the question “What is 
the least number of states you must pass through to 
get from Michigan to California?” Our eyes quickly 
tell us that six states are least number of states 
that must be crossed.  
The graph shows us that there are multiple answers 
to the question “and what are the names of those 
states?” The answer we have drawn in orange 
arrows is “Wisconsin, Iowa, Nebraska, Wyoming, 
Utah, and Nevada”, however scanning the graph 
visually we can see there are alternate portions of 
the route which keeps the number of states at 6, 
but directs you through different states. These 
segments are depicted by the green, red, and 
purple arrows. 
A common thought when viewing a graph such as 
the one above is that it does not resemble the way 
that the United States are laid out geographically 
on a map. That is true. In this case, it the graph 
appears somewhat as an inverted version of the 
USA, with Maine’s location in the Southwest, while 
geographically it is in the Northeast. The reason 
for this depiction is that the Graphviz graphing 
engine does not know anything about geography. 
It builds the graph from the relationships, and lays 
them out in a manner which most efficiently utilizes 
the diagram space so that collisions between the 
shapes and lines is minimized.  
By releasing the mental paradigm of where shape 
and line placements should occur you will reap the 
benefit of rapid visualizations. Give the 
Relationship Visualizer a bunch of simple ‘A’ is 
related to ‘B’ statements, and it will give back a 
big-picture graphical depiction of the data. 

Excel to Graphviz Relationship Visualizer 
 
Page 10 
GETTING STARTED 
Required Tools 
The Relationship Visualizer is a macro-enabled 
Excel spreadsheet that facilitates the collection of 
relationship information. It works in conjunction with 
Graphviz, which is open-source graph visualization 
software1. Graphviz’s strength is the ability to 
generate diagrams programmatically. To fulfill this 
aim, Graphviz uses a simple but powerful graph 
description language known as DOT. 
The Relationship Visualizer is an Excel spreadsheet 
that removes much of the burden of understanding 
the DOT language. It allows you to express 
relationships through text in Excel rows and 
columns. Macros in the spreadsheet write the row 
and column data in DOT format into a text file, 
and then invoke Graphviz to read the text file and 
interpret the commands to create the graph. 
The Relationship Visualizer is not primarily an 
interactive tool. Given very high-level instructions, 
it will draw the relationship diagrams for you, 
considering all the low-level details such as the 
optimal placement of shapes and the lines that 
connect them. Though you have a large choice of 
customization options and can control the final 
output in many ways, it is not at all easy to force 
DOT to produce exactly what you want, down to 
the pixel. If you want to control every single pixel 
in your diagram, or if you are an artistic person 
who likes to draw free hand, then this tool is not 
for you.  
This tool is intended for the person who wants the 
visualization performed with the minimum effort 
and without caring too much about the details of 
how the diagram was produced. 
 
 
                                                
1 Graphviz is an open source project developed at 
AT&T and released under the Eclipse Public License 
v1.0. 
Install Graphviz 
Step 1 – Download the Graphviz installation 
media from 
http://www.graphviz.org/Download_windows.php  
Step 2 – Launch the installer file. You will receive a 
security warning since this file was downloaded 
over the internet. Select the “Run” button to accept 
the risk and begin the software installation. 
 
Step 3 – Select “Next >” on the “Welcome to the 
Graphviz Setup Wizard” splash page.
 

Excel to Graphviz Relationship Visualizer 
 
Page 11 
Step 4 – Specify the folder where Graphviz should 
be installed. Select the “Everyone” radio button, 
and then select the “Next >” button. 
 
Step 5 – Select the “Next >” button on the 
“Confirm Installation” screen to begin the install. 
 
The installer will copy the files and make Windows 
configuration changes. A status bar will indicate 
how the installation is progressing. 
 
Step 6 – Once the “Installation Complete” screen 
appears press the “Close” button. The software is 
installed. 
 
Step 7 – Confirm Graphviz is installed. If you 
select the Microsoft Windows start button and 
hover over “All Programs” you should see 
“Graphviz 2.38” as a program folder. Within the 
folder will be shortcuts to the gvedit.exe program, 
as well as the software manuals for the various 

Excel to Graphviz Relationship Visualizer 
 
Page 12 
graphing engines supplied by Graphviz. The start 
menu should look as follows: 
 
 
Edit the System PATH Environment 
Variable 
The Relationship Visualizer utilizes the command 
line programs provided by Graphviz. The 
Graphviz installer does not modify your PATH 
environment variable. It is your responsibility to 
perform this task manually.  
A summary of the steps is: 
1. Open Control Panel 
2. Select “System” on the Control Panel 
screen 
3. Select “Advanced System Settings” from 
the System 
4. Select “Environment Variables…” 
5. Highlight the PATH environment variable 
and select “Edit…” 
6. Add the file system path where you 
installed Graphviz to the end of the PATH 
list. 
7. Select OK to close the “Edit System 
Variable” dialog 
8. Select OK to close the “Environment 
Variables” dialog 
9. Select OK to close the “System Properties” 
dialog 
The detailed steps illustrated using a Microsoft 
Windows 7 operating system are as follows: 
Step 1 – Click the Start button and open Control 
Panel from the Start menu. Alternately, you may 
type “Control Panel” in the “Search programs and 
files” edit box and select the Control Panel icon 
when it appears. 
 
 
Step 2 - Select “System” on the Control Panel 
screen 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 13 
Step 3 – Select “Advanced systems settings” from 
the left column of the “System” control panel. 
 
 
Step 4 – Select the “Environment Variables…” 
button. 
 
 
Step 5 – Highlight the “Path” line in the Systems 
variables list, then select the “Edit…” button. 
 
 
Step 6 – In Step 4 of the previous section you 
specified a path such as C:\Program 
Files\Graphviz2.38 where Graphviz should 
be installed. Place your cursor in the “Variable 
value:” edit box and hit the ‘End’ key on your 
keyboard to go to the end of the path 
specification. Type a semi-colon ‘;’ to end the last 
path specification (not necessary if a semi-colon is 
already present).  
Next type or paste the location where you 
installed Graphviz (e.g. C:\Program 
Files\Graphviz2.38 ) and add the string 
\bin to the path. Adding \bin to the path is key 
as the ‘bin’ directory holds all the command line 
programs. The correct added path will appear 

Excel to Graphviz Relationship Visualizer 
 
Page 14 
such as C:\Program 
Files\Graphviz2.38\bin 
 
Step 7 – Select “OK” to close the “Edit System 
Variable” dialog. 
 
Step 8 - Select “OK” to close the “Environment 
Variables” dialog 
 
 
Step 9 - Select OK to close the “System Properties” 
dialog 
 
Step10 – (Optional) Restart Microsoft Windows. 
Technically this should not be necessary, but if you 
have already been running Excel there is the 
possibility that it may be holding an old copy of 
your environment variables. Restarting Windows 
will ensure that Excel will reference a current PATH 
environment variable. 
Test Graphviz from the Command 
Line 
At this point, you have completed all the steps 
necessary to install the Graphviz software. The 
Relationship Visualizer spreadsheet uses the 
command line programs to generate the graph 
visualizations. Testing the command line programs 
prior to using the spreadsheet can help ensure that 
everything is in place correctly so that the 
spreadsheet can perform properly. 
 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 15 
Testing Graphviz is simple. Open a command 
prompt window and enter the command:   
dot -V 
noting that the -V switch (for version) should be in 
uppercase, not lowercase. The dot program should 
respond with the message: 
dot – graphviz version 
2.38.0 (20140413.2041) 
in similar fashion to the screen print which follows: 
 
If you see the version message you have 
completed the installation steps successfully and 
you can move on to the next section in this 
document. 
If you receive a screen full of messages such as 
shown below: 
 
it means that you entered a lowercase -v switch 
(verbose mode) instead of an uppercase -V 
switch (show version) and the dot program is 
running in verbose mode, waiting for you to supply 
more input. The good news is that this also means 
Graphviz is installed properly. Hitting the Ctrl 
key + C key will break you from the dot 
program. 
If you receive the message: 
'dot' is not recognized as an 
internal or external command, 
operable program or batch file. 
It means one of the following things: 
 
You have specified the path to the 
Graphviz executables incorrectly and you 
should repeat the steps above. Things to 
check are: 
o Did you remember to separate the 
new entry from the existing entries 
with a semicolon? 
o Did you remember to add the \bin 
subdirectory to the Graphviz 
directory path? 
 
You opened the command prompt window 
prior to updating the PATH statement. This 
command window will only recognize the 
old path. Close the command window, 
open a new one, and repeat the dot -V 
command. 
Install the Relationship Visualizer 
Excel Spreadsheet Template 
Step 1 - In the root directory of the Relationship 
Visualizer distribution there is a macro-enabled 
Excel spreadsheet “Relationship Visualizer.xltm”. 
Double-click the mouse on the file to launch Excel. 
You will probably get a security warning that the 
spreadsheet contains macros. You need to enable 
macro support to use the Relationship Visualizer 
spreadsheets.  
 
Step 2 - Perform a “File -> Save As” operation. 
When it asks you where to store the file, navigate 
to the directory where you currently have the 
template file.  

Excel to Graphviz Relationship Visualizer 
 
Page 16 
Next, you will see the file name is “Relationship 
Visualizer1”. Change it back to “Relationship 
Visualizer”.  
Where is says “Save as type:” select “Excel 
Macro-Enabled Template” from the dropdown list. 
You will notice that the save location will change to 
your personal “Custom Office Templates” 
directory. Select OK, and Excel will place a copy 
of the template file into this directory.  
 
Step 3 – Close Excel. 
Step 4 – Launch Excel. Excel will offer a selection 
of built-in spreadsheet templates you can use 
under the title “FEATURED”. Since we want the 
Relationship Visualizer template, click on the title 
PERSONAL. 
 
Step 5 – The Relationship Visualizer template will 
be listed, along with a thumbnail image. Click on it, 
and Excel will create a file named “Relationship 
Visualizer1”. 
 
Step 6 – Click on the “Enable Content” button to 
permit the macros to run. 
 
The SECURITY WARNING bar should disappear. 
 
Step 7 – Perform a “FILE -> Save As” action to 
save the file as an “Excel Macro-Enabled 
Workbook”. Notice that last time we saved it as an 
“Excel Macro-Enabled Template” but going 
forward we will create new spreadsheets, 
populate them with data, and save them as macro-
enabled workbooks. You may save the workbook 
in the location of your choice, and under the name 

Excel to Graphviz Relationship Visualizer 
 
Page 17 
of your choice. The important thing is saving the 
file with the .xlsm file extension. 
 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 18 
RELATIONSHIP VISUALIZER EXCEL 
WORKBOOK 
Overview 
The Relationship Visualizer tool is a macro-enabled 
Excel workbook. It allows you to collect data in 
Excel’s familiar table format, and use Excel’s wide 
set of functions. 
The Relationship Visualizer uses multiple 
worksheets to accomplish its mission. Some 
worksheets provide the basic functions, while others 
assist in creating advanced visualizations, or 
presentation customizations. The sections that 
follow provide a basic overview of the worksheets 
to help you navigate the workbook. Later chapters 
describe how to use each worksheet. 
“data” Worksheet 
The “data” worksheet is the core of the 
Relationship Visualizer. This is the place where you 
will list the nodes and edge relationships to build 
your visualizations. 
 
“graph” Worksheet 
The “graph” worksheet is where image 
representations of data in the “data” worksheet is 
displayed whenever the “Graph to Worksheet” 
button is pressed within the workbook. 
 
“styles” Worksheet 
The “styles” worksheet is where you can create 
style definitions for nodes and edges. It works in 
theory in a manner like an HTML Cascading Style 
Sheet where you can define a style name, and 
how the style should appear (shape, color, font, 
etc.). A defined style can then be associated with 
many nodes or edges in the “data” worksheet. 
 
“style designer” Worksheet 
The “style designer” makes it easy for you to 
create style definitions for nodes and edges. It 
removes the burden of knowing the Graphviz 
attributes required to achieve a visual effect. The 
style designer provides the capability to change 
settings using dropdown lists, and see a preview 
example of how Graphviz renders the node, edge, 
or cluster from the attributes.  
The style designer lets you adjust the attributes 
until you are happy with the look, then allows you 
to save the style definition in the “styles” 
worksheet. 

Excel to Graphviz Relationship Visualizer 
 
Page 19 
 
“sql” Worksheet 
The “sql” worksheet provides capabilities to run 
Excel ADODB SQL statements to bring data from 
external Excel spreadsheets into the “data” 
worksheet for graphing. This worksheet is 
described in the section Using SQL to Import Data 
from other Excel Spreadsheets beginning on page 
137. 
 
“source” Worksheet 
The “source” worksheet is where you can see the 
DOT language source code created from the data 
in the “data” worksheet when a graphing button 
was pressed, which in-turn resulted in the graph in 
being created. The worksheet also contains links to 
Graphviz language editing/rendering tools that 
for experimenting with the DOT language. This 
worksheet is described in the section Viewing DOT 
Source Code beginning on page 146. 
 
“settings” Worksheet 
The “settings” worksheet provides capabilities to 
customize how Graphviz runs. 
 
“HELP - shapes” Worksheet 
The “HELP – shapes” worksheet is intended to 
provide a glossary of the node shapes which 
Graphviz supports along with the shape names. 
This reference can be of great assistance when 
using the “style designer” capabilities. 
 

Excel to Graphviz Relationship Visualizer 
 
Page 20 
“HELP - colors” Worksheet 
The “HELP – colors” worksheet is intended to 
provide a glossary of the color schemes and color 
names which Graphviz uses and what the color 
looks like. This reference can be of great 
assistance when using the “style designer” 
capabilities. 
 
“HELP – attributes” Worksheet 
The “HELP - attributes” worksheet provides 
detailed descriptions of the Graphviz language 
attributes and a cross-reference of where they are 
used, and what graphing layout programs 
recognize them. 
 
“about…” Worksheet 
The “about…” worksheet provides the Relationship 
Visualizer version number, contact information for 
reaching the program’s author, and licenses of the 
Relationship Visualizer and the open source 
components it incorporates. 
 
“Graphviz” Ribbon Tab 
The ‘Graphviz’ tab of the Excel Fluent UI ribbon 
provides action buttons and run-time graph option 
choices. See the section The ‘Graphviz’ Ribbon 
Tab beginning on page 40 for more details. 
 
“Style Designer” Ribbon Tab 
The ‘Style Designer’ tab of the Excel Fluent UI 
ribbon provides action buttons and run-time option 
choices pertaining to the ‘style designer’ 
worksheet. 
 
“SQL” Ribbon Tab 
The ‘SQL’ tab of the Excel Fluent UI ribbon 
provides action buttons and run-time option choices 
pertaining to the ‘sql’ worksheet. 
 
“Source” Ribbon Tab 
The ‘Source’ tab of the Excel Fluent UI ribbon 
provides action buttons and run-time option choices 
pertaining to the ‘source’ worksheet. 
 

Excel to Graphviz Relationship Visualizer 
 
Page 21 
VISUALIZATION TERMINOLOGY 
In mathematics and computer science, graph theory 
is the study of graphs, which are mathematical 
structures used to model pairwise relations 
between objects.  
The terms described in this chapter are used 
throughout the rest of this manual to explain how 
to construct visualizations. These terms have their 
roots in graph theory and/or the Graphviz tool. 
Graph 
The following picture illustrates a “graph”. 
 
Node 
A "graph" in this context is comprised of "nodes". 
 
Edge 
“Edges” are lines that connect nodes. 
 
Undirected Graph 
A graph may be “undirected”, meaning that there 
is no distinction between the two nodes associated 
with each edge. 
 
Directed Graph 
A graph may be “directed” meaning that there is 
an explicit direction from one node to another. 
 
Labels 
Nodes can have “labels”. Labels can be placed 
inside the node, and outside the node. 
 
Edges can also have labels. Edge labels can be 
placed on the edge, 
 
at the tail and/or head of the edge,  
 
Or outside the edge (however in my experience 
they tend to not always render well) 
 
Edge labels are helpful in stating what the 
relationship between the nodes is. For example, a 
set of family relationships might look as follows: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 22 
Splines 
The way in which edges are routed and drawn are 
called “splines”. Several spline types are available 
in the Relationship Visualizer. The spline type and 
a depiction of each follows: 
 
Curved – Edges are drawn as curved arcs 
between nodes 
 
 
Line – Edges are drawn as straight lines 
between nodes 
 
 
None – Edges (and edge labels) are not 
drawn between nodes, but the 
relationships described by the edges 
affects the placement of the nodes. 
 
 
Ortho – Edges are drawn with 90-degree 
angles in the routes between nodes. 
 
 
Polyline – Edges are drawn with straight 
lines and angular bends in the routes 
between nodes. 
 
 
Spline – Edges are drawn with straight and 
free-flowing (curvy) lines in the routes 
between nodes. 
 
Ports 
A port name can be combined with the node name 
to indicate where to attach an edge to the node. 
Graphviz has built-in port names N, S, E, W, NE, 
NW, SE, SW, C corresponding to compass points 
North, South, East, West, North East, North West, 
South East, South West and Center respectively.  
 
Custom ports can also be specified when using 
HTML labels or “record” as the node shape. This 
feature is explained later in this manual. 
 
 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 23 
Clusters / Subgraphs 
“Clusters” is a feature to draw nodes and edges in 
a separate rectangular layout region. Clusters 
exist as subgraphs of a parent graph internal to 
Graphviz.  
Only the “dot”, “fdp”, “neato” and “osage” layout 
engines (described in the next section) draw 
clusters.  
In the example that follows, the rectangles labeled 
“process #1” and “process #2” are clusters 
(subgraphs) within the overall graph. 
 
Layout Engines 
Graphviz contains several programs for drawing 
graphs. Each program has specializations in how 
they determine how to layout the nodes and 
edges. Choosing a layout engine to use is 
sometimes a trial and error exercise to find which 
output looks the best. (Authors note: ‘dot’, ‘fdp’ and 
‘sfdp’ generally give the best results).  
A description of the layout engines available (as 
documented on the Graphviz homepage) are as 
follows: 
 
dot - "hierarchical" or layered drawings of 
directed graphs. This is the default tool to 
use if you want to have some control 
regarding the direction of how the graph is 
drawn. 
 
fdp - "spring model'' layouts like those of 
neato, but does this by reducing forces 
rather than working with energy. 
 
sfdp - multiscale version of fdp for the 
layout of large graphs. 
 
neato - "spring model'' layouts.  This is the 
default tool to use if the graph is not too 
large (about 100 nodes) and you do not 
know anything else about it. Neato 
attempts to minimize a global energy 
function, which is equivalent to statistical 
multi-dimensional scaling. 
 
twopi - radial layouts, after Graham Wills 
97. Nodes are placed on concentric circles 
depending their distance from a given root 
node. 
 
circo - circular layout, after Six and Tollis 
99, Kauffman and Wiese 02. This is 
suitable for certain diagrams of multiple 
cyclic structures, such as certain 
telecommunications networks. 

Excel to Graphviz Relationship Visualizer 
 
 
Page 24 
 
CREATING GRAPHS 
If you have made it this far in this manual, Congratulations. We are past all the software installation steps, 
graph theory discussions, and definitions. It is time to have some fun and create some simple diagrams. 
Create a New Workbook from the Relationship Visualizer Template 
The first action is to launch Excel. When Excel starts, it will suggest sample spreadsheets you can create. This 
will contain the Relationship Visualizer template which you saved as a template as part of the installation 
steps. Select this template to create a new workbook. (Note: If you do not see it in the FEATURED list, click on 
PERSONAL to see your individual list.) 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 25 
Save the Workbook as a Macro-Enabled Workbook 
The workbook will appear as shown below.  
  
Perform a “FILE -> Save As” action. Choose a directory where you would like to save the file, and change 
the file name from “Relationship Visualizer1” to something meaningful to you.  
The most important step is to set the “Save as type:” dropdown list item as “Excel Macro-Enabled Workbook”. 
You will not be able to run the macros that create the visualizations unless the workbook is “macro-enabled”. 

Excel to Graphviz Relationship Visualizer 
 
Page 26 
 
You may or may not receive a security warning that the workbook contains macros. If you get such a warning, 
click the “Enable Content” button to acknowledge the risk and enable the macros. 
 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 27 
The Relationship Visualizer provides macros through four Excel Fluent UI ribbon tabs named ‘Graphviz’, ‘Style 
Designer’, ‘SQL’, and ‘Source’. The appropriate ribbon tab will activate as you change worksheets. 
 
Note: There is a known bug in Excel pertaining to custom ribbons. It occurs after a “File->Save 
As” action changes the Excel workbook file name. The ribbon holds a reference to the original 
file name and breaks the ability to programmatically switch the tab focus. You can manually 
switch tabs as you move between worksheets, or you can close the file, and reopen it to have 
the ribbon tabs automatically change according to worksheet selections. 
The ‘Graphviz’ tab contains the action buttons to create the graphs, and many Graphviz option choices to 
control how the graph will look. 
 
The ‘Graphviz’ ribbon tab is explained in more detain in The ‘Graphviz’ Ribbon Tab beginning on page 40. 
The ‘Style Designer’ ribbon tab contains the action buttons and settings to create style attribute strings for 
nodes, edges, and clusters. The ‘style designer’ worksheet uses this tab exlusively.  
 
The ‘Style Designer’ ribbon tab is explained in more detail in Using the ‘style designer’ Worksheet on page 57. 
The ‘SQL ribbon tab contains the action buttons to run Excel SQL statements. The ‘sql’ worksheet uses this tab 
exlusively.  
 
The ‘SQL’ ribbon tab is explained in more detail in Using SQL to Import Data from other Excel Spreadsheets 
on page 137. 
The ‘Source’ ribbon tab contains the action buttons to creating, viewing, and saving Graphviz source code 
from the information in the ‘data’ worksheet. The ‘source’ worksheet uses this tab exlusively.  

Excel to Graphviz Relationship Visualizer 
 
Page 28 
 
 
The ‘Source’ ribbon tab is explained in more detail in Working with the DOT Language on page 146. 
All ribbon controls contain tool tips which explain their purpose, such as example below for the “Graph to 
Worksheet” button on the ‘Graphviz’ ribbon tab. Simply pause the mouse over the control (1) to make the tool 
tips appear (2).  
 1 
1 2 
2 

Excel to Graphviz Relationship Visualizer 
 
Page 29 
Creating Your First Graph 
For our first example, we will make the simplest graph possible with the tool. This graph will be a directed 
graph from a node named ‘a’ to a node named ‘b’. To do so we must enter the edge information into the 
“data” worksheet. The “data” worksheet has 10 columns: 
1. Column A – The “Indicator” column. This column allows you to specify a flag to treat the row as a 
comment. To do so enter a ‘#” hash tag character in the column. The row will turn green, and no data 
in this row will be included in the graph. If errors are detected in your data a “!” exclamation mark 
character will appear in the column, the row will turn red, and an error message will be displayed in 
the “Messages” column (column H). 
2. Column B – The “Item” column. This column serves two purposes. For nodes, it is a unique identifier of 
the node. For edges, it is the unique identifier of the “from” node in a (“from”, “to”) node pairing. 
3. Column C – The “Label” column. This column is optional. When specified for nodes, the value is placed 
inside the shape; for edges, the value is placed near the spline. 
4. Column D – The “Outside Label” column. This column is also optional. When specified for nodes, the 
value is placed outside the shape, typically above and to the left of the shape; for edges, the value is 
placed away from the spline. If neither a “Label” or “Outside Label” is specified then the graph will 
default to showing the “Item” value as the inside label of nodes, and no data for edges. 
5. Column E – The “Tail Label” column. This column is only used when specifying a relationship. It is the 
text label to be placed near the tail of an edge. 
6. Column F – The “Head Label” column. This column is only used when specifying a relationship. It is the 
text label to be placed near the head of an edge. 
7. Column G – The “Is Related to Item” column. This column is only used when specifying a relationship. It 
is the unique identifier of the “to” node in a (“from”, “to”) node pairing. 
8. Column H – The “Style” column. Optional information in this column indicates what kind of data is in 
the row, and relates it back to a style definition in the “styles” worksheet which controls how the node 
or element should be graphed. For now, we will only use the styles of “edge” and “node” in our 
graphs. Later chapters will explain how you can create additional styles to introduce shapes, colors, 
and images into your graphs. 
9. Column I – The “Extra Style” column. Optional information in this column provides a means to add 
extra elements of style which will only apply to a single row. For example, you can place style 
attributes in this column which would allow you to illustrate the route from Michigan to California as 
described in the introduction to this manual.  
10. Column J – The “Messages” column. When the graphing macros run they check for common mistakes 
in the data, such as specifying only one node for an edge. When mistakes are found, they are 
reported in this column. In addition, and exclamation mark ‘!’ is placed in column 1, and the row is 
highlighted in red to draw your attention to the error. 
The columns for “Outside Label”, “Tail Label”, “Head Label” and “Extra Style Attributes”, and Messages 
(columns D, E, F, H, I, and J) are hidden by default, since they are less frequently used. Display of these 

Excel to Graphviz Relationship Visualizer 
 
Page 30 
columns can be quickly toggled to be visible by selecting the column name on the list of columns in the 
dropdown list beneath the “Show/Hide Columns” button. 
 
The simplest way to draw a graph is to place values in the “Item” and the “Is Related to Item” columns, then 
press the “Graph to Worksheet” button.  
 For our first graph, we will draw an ‘a’ is related to ‘b’ relationship.  
1. In row 3 type ‘a’ in the “Item” column, and ‘b’ in the “Is Related to Item” column.  
2. Click on the “Graphviz” ribbon tab to activate it (if it is not the current active tab) 
3. Press the “Graph to Worksheet” button  
 
4. See the result beside the data 

Excel to Graphviz Relationship Visualizer 
 
Page 31 
The results should resemble the following example: 
 
Congratulations, you have created your first graph! 
The next section will discuss the concepts of creating graphs in Excel. You only need to use the ‘Graph to 
Worksheet’ button of the ‘Graphviz’ ribbon tab for these tutorials. We explain ‘Graphviz’ ribbon tab details 
after the graphing concepts are mastered. 4 
4 1 
1 3 
3 2 
2 

Excel to Graphviz Relationship Visualizer 
 
Page 32 
Constructing Simple Graphs 
Next, lets expand upon the graph we just created to have additional relationships. Assume that: 
 
‘a’ is related to ‘b’ (already drawn) 
 
‘b’ is related to ‘c’ 
 
‘c’ is related to ‘a’ 
The Excel data appears as shown on rows 3-5. Press the ‘Graph to Worksheet’ button, and the Excel 
worksheet now looks like:  
 

Excel to Graphviz Relationship Visualizer 
 
Page 33 
Now, let us add data into the “Label” column to label the relationships. Fill in Column C as shown below. Press 
the ‘Graph to Worksheet’ button, and the Excel worksheet now looks like: 
 
 
The graph is how we want to see it, but the nodes need to be labeled. We do not want to change all our 
edges, however we would like to replace ‘a’ with ‘Alpha’, ‘b’ with ‘Bravo’, and ‘c’ with ‘Charlie’. The 
Relationship Visualizer assumes that when there is information in the “Item” column, but not in the “Is Related To 
Item” column that the data corresponds to a node.  
To label the nodes we will add 3 node definitions to the “data worksheet (rows 6, 7, 8) and press the ‘Graph 
to Worksheet’ button. The Excel worksheet now looks like: 
 
Graphviz decides what it thinks is the best placement of the head and tail of an edge to produce a balanced 
graph. Sometimes you might want to control where the edges begin or end. You can do that by specifying a 

Excel to Graphviz Relationship Visualizer 
 
Page 34 
port on the item id, in the same manner as a URL. Ports are identified by a colon character “:” and then a 
compass point (n, s, e, w, ne, nw, se, sw) or ‘c’ for center. 
If we change row 5 from the example above to say that “c” exiting from the south (c:s) is related to “a” 
entering at the north end of the node (a:n), the Excel data is changed slightly as shown in row 5. Press the 
‘Graph to Worksheet’ button, and the Excel worksheet now looks like: 
 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 35 
If you wish to cluster some elements of the graph you can do so by adding a row with an open brace “{” in 
the “Item” column above the first row of data to be placed in the group, and provide a title for the cluster in 
the “Label” column. Next, add row with a close brace “}” in the “Item” column after the last row of data.  
For example, this Excel worksheet does not have clusters. 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 36 
To cluster nodes a0, a1, and a2, calling the cluster “process #1” the worksheet is revised to add an open 
brace with the label “process #1” on row 3, and a close brace on rows 6 as follows. Press the “Graph to 
Worksheet” button, and the Excel worksheet now looks like:  
 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 37 
Graphviz permits clusters within clusters. Let us extend the example by adding an additional set of braces to 
cluster the relationship between a1 and a2. We will insert a new row 5 placing an open brace in the “Item” 
column with the Label column set to “process #2”, and a new row 7 with a close brace in the “Item” column. 
Press the “Graph to Worksheet” button, and the Excel worksheet now looks like: 
 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 38 
Graphviz does not limit the number of clusters you can have. In this example, we have added rows 10-14 to 
insert an additional cluster labeled “process #3”. Press the “Graph to Worksheet” button, and the Excel 
worksheet now looks like: 
 
 
What is important to note is that you must ensure that you have an equal number of open braces as you do 
close braces. If you have a mismatch between the number of open and close braces, then Graphviz will not 
draw the graph. 
Another feature of the Relationship Visualizer is the ability to specify a comma-separated list of Item names 
and have a relationship created for each Item. For example, we can say that Mr. Brady is the father of Greg, 
Peter, and Bobby on one row as follows: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 39 
The comma-separated list can also appear in the “Item” column, such as: 
 
 
Or a comma-separated list can be used in both the “Item”, and the “Is Related To Item” column such as the 
parental relationship below: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 40 
THE ‘GRAPHVIZ’ RIBBON TAB 
Now that you understand the basics to create graphs, let us look at the features contained in the ‘Graphviz’ 
ribbon tab. The ‘Graphviz’ ribbon tab is activated whenever the ‘data’ ‘graph’, ‘styles’, ‘settings’ or ‘about…’ 
worksheet is activated. It appears as follows: 
 
It contains the following major groups: 
 
Graph to Worksheet 
 
Graph to File 
 
Layout 
 
Graph 
 
Styles 
 
Nodes 
 
Edges 
 
Debug 
 
Help 
Graph to Worksheet 
 
Label 
Control Type 
Description 
Graph to Worksheet 
Button 
The action button that causes the Excel data to be graphed by 
Graphviz and then displayed within the Excel workbook. 
Image Type 
Dropdown list 
Image format to use when displaying the graph on the “data’ 
or “graph” worksheet of the Relationship Visualizer. 
Choices: 
 
bmp  – Microsoft Windows Bitmap format 
 
gif  – Graphics Interchange Format 
 
jpg  – Joint Photographic Experts Group format 
 
png  – Portable Network Graphics format 

Excel to Graphviz Relationship Visualizer 
 
Page 41 
Label 
Control Type 
Description 
Worksheet 
Dropdown list 
The worksheet in the current workbook where the graph should 
be displayed 
Choices: 
 
data    – The graph is displayed in the ‘data’ 
worksheet to the left of the data 
 
graph  – The graph is displayed in the ‘graph’ 
worksheet, and the ‘graph’ worksheet is activated. This 
setting is useful for large graphs as it allows you to use 
Excel’s magnification Zoom-In/Zoom-out feature. It is 
also useful when you want to flip back and forth 
between the data and the graph to correct errors in the 
data. 
Delete graph 
Button 
Clicking on this button will delete the graph from the worksheet. 
This is useful when adding rows as new rows will stretch the 
image. You may also find you want to delete the image before 
saving the file to reduce the file size. 
Graph to File 
 
A tutorial on how to use these ribbon options is contained in the section Publishing Graphs that begins on 
page 103. 
Label 
Control Type 
Description 
Graph to File 
Button 
The action button that causes the Excel data to be graphed by 
Graphviz and then written to a file. Note that this button is 
disabled until a valid output directory is specified. 
All views to File 
Button 
The action button that causes the Excel data to be graphed by 
Graphviz and then written to a file repeatedly for every view 
defined in the ‘Styles’ worksheet. Note that this button is 
disabled until a valid output directory is specified. 
Get Directory 
Button 
Brings up the Directory Selection dialog and stores/displays the 
directory where the files should be written to. Once a directory 
is selected the directory path replaces the “Get Directory” 
button label. 

Excel to Graphviz Relationship Visualizer 
 
Page 42 
Label 
Control Type 
Description 
File Prefix 
Edit box 
Base portion of the file name. For example: ‘Graph’. 
You may also build a file name using the following character 
strings in the file prefix to insert run-time values into the file 
name. 
 
%D - Current date 
 
%T - Current time 
 
%E - Graphviz engine 
 
%S – Splines 
 
%V - View name 
NOTE: you must check the appropriate options in the ‘Finale 
options’ dropdown list for the substitutions to occur. 
File Format 
Dropdown List 
File format of the output file. 
Choices: 
 
bmp  – Microsoft Windows Bitmap format 
 
gif  – Graphics Interchange Format 
 
jpg  – Joint Photographic Experts Group format 
 
pdf  – Portable Document Format 
 
png  – Portable Network Graphics format 
 
ps  
– Postscript format 
 
svg  – Scalable Vector Graphics format 
 
tiff  – Tagged Image File Format 
 
Dropdown List 
 
Add date/time to the 
filename 
Check box 
Option to add a date and time to the file name. 
 
checked, add the date and time 
 
unchecked, omit the date and time 
Add Engine/Splines to 
the filename 
Check box 
Option to add the layout engine and spline type to the file 
name. 
 
checked, add the options 
 
unchecked, omit the options 

Excel to Graphviz Relationship Visualizer 
 
Page 43 
Layout 
 
Label 
Control Type 
Description 
Engine 
Dropdown list 
Specifies which Graphviz layout program to use when drawing 
the graph. 
Choices: 
 
circo 
 
dot 
 
fdp 
 
neato 
 
osage 
 
patchwork 
 
sfdp 
 
twopi 
Direction 
Dropdown list 
This setting controls the way that shapes are placed when the 
“dot” layout engine is used. This option will be hidden from the 
ribbon if the graphing engine is set to anything other than 
“dot” 
Choices: 
 
top to bottom 
 
bottom to top 
 
left to right 
 
right to left 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 44 
Label 
Control Type 
Description 
 
 
Splines 
Dropdown list 
Specifies how the edges between nodes should be drawn. See 
the examples in the Splines section beginning on page 22. 
Choices: 
 
curved 
 
line 
 
none 
 
ortho 
 
polyline 
 
spline 

Excel to Graphviz Relationship Visualizer 
 
Page 45 
Options 
 
Label 
Control Type 
Description 
 
Dropdown List 
 
Directed graph 
Checkbox 
Specifies if the graph should be a directed graph (i.e. with 
arrows) or an undirected graph (i.e. no arrows). See the 
examples in the Undirected Graph and Directed Graph sections 
on page 21. 
Choices: 
 
Checked – Graph as a directed graph 
 
Unchecked – Graph as an undirected graph 
Strict 
Checkbox 
Specifies the strict attribute for the top-level graph. 
Describing the graph as strict forbids the creation of multi-
edges, i.e., there can be at most one edge with a given tail 
node and head node in the directed case. For undirected 
graphs, there can be at most one edge connected to the same 
two nodes. Subsequent edge statements using the same two 
nodes will identify the edge with the previously defined one 
and apply any attributes given in the edge statement. 
Choices: 
 
Checked – Includes the strict attribute 
 
Edges have been consolidated. 
 
Unchecked – Omits the strict attribute 
 
Edges have not been consolidated. 
Transparent 
Background 
Checkbox 
Toggles the background color between white and transparent. 
Transparent backgrounds are useful if you intend to layer the 

Excel to Graphviz Relationship Visualizer 
 
Page 46 
Label 
Control Type 
Description 
graphs in an image editor, or paste them into a Microsoft 
Word document. 
Choices: 
 
Checked – Background is transparent 
 
 
Unchecked – Graph background is white.  
 
Note: It is possible to set the graph background color to any 
valid color by specifying the bgcolor= attribute as a graph 
option on the ‘settings’ worksheet. 
 
Dropdown list 
 
Use blank “” in place 
of Item ID as the node 
label 
Checkbox 
Include or exclude blank node labels? 
When the “Label” column is blank on the data worksheet on a 
row which refers to a node it can mean two possible things. 
One interpretation is to remove the label from the node, as 
might be useful when using images to represent nodes. The 
other interpretation is to let the graph default to displaying the 
value in the “Item” column. 
Choices: 
 
Checked – use the blank label as the node’s label text 
 
Unchecked – show the value in the “Item” column as the 
label text 
Include island nodes 
which do not connect 
to other nodes 
Checkbox 
Include or exclude nodes without relationships (i.e. island 
nodes). 
When using views to exclude relationship edges there may be 
nodes left in the diagram that are not connected to anything. 

Excel to Graphviz Relationship Visualizer 
 
Page 47 
Label 
Control Type 
Description 
This setting specifies if these island nodes should be included or 
excluded from the diagram. 
Choices: 
 
Checked - retain the island nodes 
 
Unchecked - drop the island nodes from the diagram 
 
Dropdown list 
 
Include labels on 
edges 
Checkbox 
Include or exclude Edge Labels? 
Allows you to turn edge labels on/off in the graph. 
Choices: 
 
Checked – Include the edge label 
 
Exclude – Drop the edge label from the graph 
Include edges which 
reference undefined 
nodes 
Checkbox 
Include/Exclude relationships without nodes (i.e. orphan edges). 
When using views to exclude nodes there may be un-styled 
nodes included in the diagram due to edge references. This 
setting specifies if the edges should be included or excluded 
from the diagram. 
Choices: 
 
Checked - retain edges which have references to 
undefined nodes 
 
Unchecked - drop any edges which do not refer to 
defined nodes 
Styles 
 
Label 
Control Type 
Description 
View 
Dropdown list 
The name of the column in the ‘styles’ worksheet which controls 
which set of Yes/No values to use when creating the diagrams. 
This dropdown list is explained in more detail in the section 
Creating Views beginning on page 97 

Excel to Graphviz Relationship Visualizer 
 
Page 48 
Label 
Control Type 
Description 
Use style formats 
Dropdown list 
Specifies if the style attributes associated with the Style Name 
assigned to a node, edge, or cluster should be used when the 
graph is generated. 
Choices: 
 
Checked - use the style attributes 
 
Unchecked - do not use the style attributes (i.e. use 
default Graphviz rendering method) 
Use extra attributes 
Dropdown list 
Specifies if the “Extra Style Attributes” style attributes on the 
‘data’ worksheet should be included or omitted when the graph 
is generated. 
Choices: 
 
Checked - include the style attributes  
 
Unchecked - do not include the style attributes 
 

Excel to Graphviz Relationship Visualizer 
 
Page 49 
Debug 
 
Label 
Control Type 
Description 
Debug Labels 
Checkbox 
Turning this option to “on” causes additional information such as 
the row number and Item identifiers to be included in the labels 
of nodes, edges, and clusters. 
Choices: 
 
unchecked  – Do not add information to the labels 
 
checked  
– Add information to the labels 
 
 
 
Unchecked 
 
Checked 
Keep .gv file 
Checkbox 
Specifies what should be done with the text file sent to 
Graphviz after the graphing step is complete when “Graph to 
File” is used to create the graph. 
Choices: 
 
checked – retain the file. It will be in the same directory 
as the graph file with the same file name except for the 
file extension (which will be .gv). 
 
unchecked – delete the file 
 

Excel to Graphviz Relationship Visualizer 
 
Page 50 
‘data’ Worksheet 
 
Label 
Control Type 
Description 
Show/Hide Columns 
Dropdown List 
A list of column names on the ‘data’ worksheet which can be 
displayed or hidden. 
Choices: 
 
checked – show the column 
 
unchecked – hide the column 
Example: 
 
Clear all messages 
Button 
This button clears all error messages in column J. 
Reset data 
Button 
This button removes all the content in the ‘data’, ‘graph’ and 
‘source’ worksheets. 

Excel to Graphviz Relationship Visualizer 
 
Page 51 
Help 
 
Label 
Control Type 
Description 
Shapes 
Toggle button 
Specifies if the “HELP - shapes” worksheet should be visible.  
Choices: 
 
selected – shows the “HELP - shapes” worksheet 
 
not selected – hides the “source” worksheet 
Colors 
Toggle button 
Specifies if the “HELP - colors” worksheet should be visible.  
Choices: 
 
selected – shows the “HELP - colors” worksheet 
 
not selected – hides the “HELP - colors” worksheet 
Attributes 
Toggle button 
Specifies if the “HELP - attributes” worksheet should be visible.  
Choices: 
 
selected – shows the “HELP - attributes” worksheet 
 
not selected – hides the “HELP - attributes” worksheet 
 
 
 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 52 
CREATING RELATIONSHIP VISUALIZATIONS 
Introduction 
In the previous chapter, we saw how to use the basic features to create graphs. Now we will turn our attention 
to showing how to depict relationships, and add meaningful elements of style to the nodes and edges that 
help distinguish the relationships. 
The introduction section of this manual showed the power of using state border relationships to convert a list in 
Excel into a graph connecting the states. This was possible because there were individual rows for each state 
and the state it borders. This is a common way to represent data in Excel, and assumes there is an implied 
relationship from one column to another column. The relationship is typically described in the column heading. 
Since many spreadsheets collect data in this manner, they can all lend themselves to graphing. For example, 
spreadsheets containing organization chart information, lists of software installed on computers or the 
completion status and due dates of business projects, or team member and their skills can all be depicted. 
Readers of this manual work in different industries, so the example we will use is not industry-specific. This 
example uses the relationships between family and friends that should resonate across all readers. For this 
example, I am using the fictional Cunningham family from the 1970’s television program Happy Days. 
‘Happy Days’ Example 
Happy Days is an American television situation comedy that aired first-run from January 15, 1974, to 
September 24, 1984, on ABC. Created by Garry Marshall, the series presents an idealized vision of life in 
the mid-1950s to mid-1960s United States. 
Set in Milwaukee, Wisconsin, the series revolves 
around teenager Richie Cunningham and his 
family: his father, Howard, who owns a hardware 
store; traditional homemaker and mother, Marion; 
younger sister Joanie; and high school dropout, 
biker, auto mechanic and suave ladies' man Arthur 
"Fonzie"/"The Fonz" Fonzarelli, who would 
eventually become the Cunningham’s upstairs 
tenant. The earlier episodes revolve around Richie 
and his friends, Potsie Weber and Ralph Malph, 
with Fonzie as a secondary character. However, as the series progressed, Fonzie proved to be a favorite with 
viewers and soon more story lines were written to reflect his growing popularity. Fonzie befriended Richie and 
the Cunningham family. In later seasons, other characters were introduced including Fonzie's young cousin, 
Charles "Chachi" Arcola, who became a love interest for Joanie Cunningham, and married Joanie in a spin-off 
television series “Joanie Loves Chachi”. 
Restating this information in terms of relationships: 
 
Howard Cunningham (“Mr. C”) is the husband of Marion, Father of Richie, Father of Joanie, Landlord 
of Fonzie, and a Customer of Fonzie’s auto repair garage 
 
Marion Cunningham (“Mrs. C”) is the wife of Howard, Mother of Richie, Mother of Joanie 
 
Richard Cunningham (“Richie”) is the son of Howard, son of Marion, brother of Joanie, and friend of 
Fonzie, Ralph, and Potsie 

Excel to Graphviz Relationship Visualizer 
 
Page 53 
 
Joanie Cunningham (“Shortcakes”) is the daughter of Howard, daughter of Marion, sister of Richie, 
and eventually the wife of Chachi 
 
Ralph Malph (“Hector”) is a friend of Richie, Potsie, and Fonzie 
 
Warren Weber (“Potsie”) is a friend of Richie, Ralph, and Fonzie 
 
Arthur Fonzarelli (“Fonzie”, “The Fonz”) is a friend of Richie, Ralph, and Potsie; a tenant of Howard, 
Howard’s auto mechanic, and a cousin of Chachi 
 
Charles Arcola (“Chachi”) is a cousin of Fonzie, and eventually becomes Joanie’s husband. 
Collecting this information into an Excel spreadsheet table, it would look as follows: 
 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 54 
Let us put this information into the Relationship Visualizer spreadsheet and observe the connections. 
Step 1 – Create a new spreadsheet from the template and save it as an “Excel Macro-enabled Workbook” 
(xslm format) as previously described. 
Step 2 – Take the information in Columns A, B and create nodes in the Relationship Visualizer spreadsheet. Do 
this by copying the “Name” values to the “Item” column, and the “Full Name” values to the “Label” column. 
TIP: The Relationship Visualizer supports multi-line labels. Simply use Excel’s “Alt+Enter” 
keystroke combination to insert a carriage return within the label text. This tip has been 
illustrated below by entering carriage returns to place the nicknames in parenthesis below the 
formal names. 
Your data should look as follows: 
 
When you press the “Graph to Worksheet” button, you will see a graph such as: 
 
Step 3 – Create the edges. Copy into the Relationship Visualizer spreadsheet: 
 
the “Name” values in Column A into the “Item” column B 
 
the “Kind of Relationship” values in Column C into the “Label” column C 
 
the “Relationship To” values in Column D into the “Is Related To Item” E 

Excel to Graphviz Relationship Visualizer 
 
Page 55 
Your data should now look as follows: 
 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 56 
If you press “Graph to Worksheet” you will see a graph such as:
 
We have successfully drawn the relationships between the main Happy Days characters!  
Let us not be content, we can do better. The interconnections of the relationships determine the node 
placement, a very powerful concept. A shortcoming is that it is hard to distinguish the types of data, and the 

Excel to Graphviz Relationship Visualizer 
 
Page 57 
types of relationships. For example, it would be nice to know at a glance who are members of the 
Cunningham family, and who are not. It would also be nice to know at a glance what are the spouse 
relationships, the parent/child relationships, the friend relationships, and the business relationships. This is 
where the “styles” and “style designer” worksheets come into play. 
Using the ‘style designer’ Worksheet 
The Graphviz DOT language supports many attributes that can control the appearance of nodes and edges. 
The ‘style designer’ worksheet makes it easy for you to compose style specifications without having to know all 
the details of the DOT language. The ‘style designer’ worksheet appears as follows: 
 
It has three design modes controlled by the ‘Element’ dropdown list in the upper left corner that allow you to 
create node styles, edge styles, and cluster styles. The ribbon controls change dynamically as you make 
selections. 
Mode = “Node” 
 

Excel to Graphviz Relationship Visualizer 
 
Page 58 
Mode = “Edge” 
 
Mode = “Cluster” 
 
You define the styles by making selections on the “Style Designer” Fluent UI ribbon tab. As you make 
selections a format string is created and a sample rendering of the node/edge/cluster is created using the 
graphing engine and splines values from the “Graphviz” ribbon tab (more on that later). 
Since the Relationship Visualizer is an Excel spreadsheet, and not an installed application, there are limits to 
what visual choices can be offered in regards to shapes and colors in the ribbon. For this reason, there are 
two worksheets named “HELP – shapes” and “HELP – colors” which allow you to look up the Graphviz names 
associated with shapes and colors. Buttons on the ribbon will show/hide these worksheets. 
 
 
 
 
HELP – shapes 
HELP - colors 

Excel to Graphviz Relationship Visualizer 
 
Page 59 
TIP: When you see a shape you like on the ‘HELP – shapes’ worksheet, simply click on the 
picture of the shape to transfer the shape name to the ‘style designer’ worksheet ribbon. 
 
TIP: When you see a collection of colors you would like to use, simply click on the color scheme 
name hyperlink to transfer the color name to the ‘style designer’ worksheet ribbon. 
Use these as an aid to making your selections on the ‘style designer’ worksheet. 
We can use the Node Style mode to create a unique style for members of the Cunningham family. Let us play 
with different values and until we obtain something visually pleasing. For the Cunningham family: 
 
Enter “Richard Cunningham” into the ‘Node Label Text:” cell as representative of the labels. This is the 
longest name and we want to make sure the shape is large enough to hold it. 
 
 
Leave the ‘Label Location’ blank. The default value of “centered” will automatically apply. 
 
 
Leave the “Color Scheme” setting as blank for now. Graphviz supports 267 color schemes that are 
viewable on the ‘HELP – colors’ worksheet which you can use to expand/restrict the color choices. 

Excel to Graphviz Relationship Visualizer 
 
Page 60 
When the Color Scheme setting is blank the default “X11” color scheme colors will be listed. X11 is the 
largest set of defined colors, and will provide plenty of choices to pick from. 
 
 
Specify the ‘Shape’ as “rect” (i.e. rectangle). Note that the format string now says 
shape=”rect” and the node shape changes to a rectangle in the preview. 
 

Excel to Graphviz Relationship Visualizer 
 
Page 61 
 
Up to 3 border styles are selectable, and are additive making it possible to have styles such as bold 
edge and rounded corners. Set the ‘Style’ as “rounded” to give the rectangle rounded corners.  
 
 
Set the ‘Height:’ to ½” and ‘Width:’ to 2” inches (inches are Graphviz’s unit of measure). Also, set 
‘Fixed Size’ to “yes” to lock the size of the shape. Leave ‘Fixed Size’ blank or set it to “no” to allow 
the shape to grow if the label size exceeds the height and width specified.  
 

Excel to Graphviz Relationship Visualizer 
 
Page 62 
 
Set the ‘Fill Color:’ to “skyblue”. This setting will give the shape a background color, and automatically 
add “filled” to the list of ‘Style’ attributes. The preview image changes to look like: 
 
Notice that the ribbon dynamically changes once a Fill Color is specified to display a new choice for 
‘Gradient Fill Color’. 
A “Gradient Fill Color” allows you to select a second color which the Fill Color will gradually transition to. 
If you select “yellow” as the Gradient Fill Color the preview image changes to look like: 
 
Another set of dynamic changes occur as two additional choices ‘Type’ and ‘Angle’ appear beneath 
Gradient Fill Color which allow you to define how the transition occurs. 

Excel to Graphviz Relationship Visualizer 
 
Page 63 
 
The Gradient Type is either “filled” (i.e. linear) or “radial”. The differences are illustrated below: 
 
 
Gradient Type: filled 
Gradient Type: radial 
 
Changing the Gradient Angle moves the angle of the gradient fill. For linear fills, the colors transform 
along a line specified by the angle and the center of the object. For radial fills, a value of zero 
causes the colors to transform radially from the center; for non-zero values, the colors transform from 
a point near the object's periphery as specified by the value. 
If you change the Gradient Angle to 180 degrees, the preview images now appear as: 
 
 
Gradient Type: filled, Gradient Angle: 180 
Gradient Type: radial, Gradient Angle: 180 
 
For our Happy Days example, we do not want to use Gradient Fills as they will not add much visual 
impact to this example. Delete “yellow” from the ‘Gradient Fill Color:’ choice. Notice that the preview 
image reverts to the solid ‘skyblue’ background, and the options for Gradient Type, and Gradient 
Angle have disappeared. The preview image now looks as follows: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 64 
 
Set the ‘Border Color’ to ‘blue’. Leave the ‘Pen Width’ setting blank to use the default border line 
width (increasing the number will make the line thicker). Also, leave the ‘# Peripheries:’ setting blank to 
maintain a single border around the shape (increasing the number of peripheries will cause concentric 
borders to be added to the shape). The preview image now appears as follows: 
 
 
For the label, set the ‘Font Name:’ to “Arial”, the ‘Font Size:” to “10” points, and the ‘Font Color:’ to 
“black”. The preview image now appears as follows: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 65 
Notice that as we have been making selections the format string cell has been building a list of Graphviz style 
attributes in the cell highlighted below: 
 
This cell is also an active cell. You can make edits directly into this cell to tweak settings to use values not 
supplied in the dropdown lists. For example, a different font name, or font size.  
The style designer presents the most commonly used style attributes, however Graphviz supports many others. 
You can refer to the “HELP – attributes” attribute list which was derived from the content at 
http://www.graphviz.org/doc/info/attrs.html to find many more. These attributes can be typed into the 
“Node” Format cell and when you press enter or change to another cell the preview will be rendered.  
Note: Display of the “HELP – attributes” worksheet is triggered from the ‘Graphviz’ ribbon tab, not the ‘Style 
Designer’ ribbon tab. It contains filter switch columns which allow you to specify which layout engine you are 
using, and which type of attribute you seek. In the illustration below we are filtering on ‘node’ attributes, and 
the ‘dot’ layout engine: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 66 
Be aware that any change in the ribbon will cause any hand-made edits in the format string to 
be wiped out as ribbon changes result in a new format string being built. Conversely, deleting 
the contents of the format string cell will result in the ribbon settings getting reset to default 
values. 
Now we must bring the newly defined style definition into the graph. We will do that through the ‘styles’ 
worksheet. Select the ‘Copy’ button to prepare for this step. Pressing the ‘Copy’ button transfers the format 
string value to the clipboard for pasting into other cells in the spreadsheet. 
 

Excel to Graphviz Relationship Visualizer 
 
Page 67 
Using the ‘styles’ Worksheet 
The “styles” worksheet is where you can create style definitions for nodes and edges. It works in theory in a 
manner like an HTML Cascading Style Sheet where you can define a style name, and how the style should 
appear (shape, color, font, etc.). A defined style can then be associated with many nodes or edges in the 
“data” worksheet. 
The default “styles” worksheet is very sparse. This sparseness is intentional to use the built-in defaults of 
Graphviz. It appears as follows: 
 
The columns are as follows: 
 
Column A – The “Indicator” column. It allows you to place a “#” character to denote a comment. It can 
be used to comment out the style so it is excluded from the renderings. 
 
Column B – The “Style” column. This column is where you specify the Style name.  
 
Column C – The “Format” column. This column is where you paste the style definitions created on the 
‘style designer’ worksheet to create the visual definition for any graph elements which get associated 
with this style in the ‘data’ worksheet. 

Excel to Graphviz Relationship Visualizer 
 
Page 68 
 
Column D – The “Object Type” column. This column must have a value of “node”, “edge”, “subgraph-
open”, “subgraph-close”, “keyword”, or “native”. This string value tells the macros inside the 
Relationship Visualizer how to interpret the row and convert it into DOT language commands. 
 
Column E and beyond – The view switch columns. These columns are used for creating views of the 
data. It must contain a “Yes” or “No” value to indicate if the style should be included in the graph. This 
column’s use is discussed in Creating Views beginning on page 97. All spreadsheets created from the 
Relationship Visualizer Excel template will have the Column E heading row set to “All”, with “yes” 
values set for the style switches. This means that all styles should be included in the graphs when 
Column E controls the view. 
You may have noticed that the Style names in column B have a dark border around their outer edge. This is a 
visual cue of an Excel named-ranged used in the ‘data’ worksheet which allows you select from the styles in 
the “Style” column. 
Now that you understand the purpose of the “styles” worksheet, let’s add in the style definition we just 
created for the Cunningham family. 
 
Step 1 – Insert a row within the range marked by the dark border so that the style name is contained 
within the named range, and will appear in the dropdown list of style choices on the ‘data’ worksheet. 
For this example, let’s add the row under the existing style named “node” (i.e. a new row 3). 
 
Step 2 – Type “Cunningham Family” as the “Style” name 
 
Step 3 – Paste the style definition you copied to the clipboard into the “Format” cell. 
 
Step 4 – Set the “Object Type” value to “node” 
 
Step 5 – Set the switch in the “All” column to “yes”. 

Excel to Graphviz Relationship Visualizer 
 
Page 69 
The ‘styles” worksheet should now look as follows: 
 
 
Next, we will return to the “data” worksheet and use the new style definition. 

Excel to Graphviz Relationship Visualizer 
 
Page 70 
Applying Custom Styles 
Return to the “data” worksheet and unhide the blue columns H and I (if hidden) by selecting the + button 
above column J. 
If you click on a cell in the “Style” column you should see that “Cunningham” family is now a choice in the 
dropdown list: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 71 
Change the style from “node” to “Cunningham Family” for Howard, Marion, Richard, and Joanie Cunningham. 
The “data” worksheet should now look as follows: 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 72 
Press the “Graph to Worksheet” button and the relationship graph now appears as: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 73 
This change has made it very easy to see who the members of the Cunningham family are. Without repeating 
the details, let’s create two more node styles called “Fonzarelli Family” and “Friends”. Their styles look as 
follows: 
Style 
Format 
Preview 
Fonzarelli Family 
shape="rect" color="red" 
fillcolor="lightpink" 
fixedsize="True" fontcolor="black" 
fontname="Arial" fontsize="10" 
style="rounded,filled" height="0.50" 
width="2.00" 
 
 
Friends 
shape="rect" color="darkorange" 
fillcolor="lemonchiffon" 
fixedsize="True" fontcolor="black" 
fontname="Arial" fontsize="10" 
style="rounded,filled" height="0.50" 
width="2.00" 
 
 
 
After creating new rows, pasting the style definitions into the ‘styles’ worksheet, and filling in the other row 
cells the completed ‘styles’ worksheet with all 3 styles looks as follows: 

Excel to Graphviz Relationship Visualizer 
 
Page 74 
 
 
Returning to the ‘data’ worksheet, Arthur Fonzarelli and Charles Arcola are members of the Fonzarelli Family 
so associate that style with their names. Ralph Malph, and Warren Weber are friends of the Cunningham and 
the Fonzarelli families, so associate the “Friends” style with them. The ‘data’ worksheet now appears as: 

Excel to Graphviz Relationship Visualizer 
 
Page 75 
 
Press the “Graph to Worksheet” button and the relationship graph now appears as: 
 
Edges can have styles just as we have seen for nodes. If we return to the ‘style designer’ worksheet and 
change the design mode Element to “Edge”, we can create edge style definitions using the same method we 

Excel to Graphviz Relationship Visualizer 
 
Page 76 
used for nodes. Press the “Reset” button to clear all style values carried over from the node definitions, and 
change the Label Text to “Spouse”. 
 
Let us create edge relationships definitions for the relationships “spouse”, “parent/child”, “friend” and 
“business associate”. 
For the “Spouse” definition: 
 
Set “Style” to “solid” 
 
Set “Color 1” to “blue 
 
Set “Font Name:” to “Arial” 
 
Set “Font Size:” to “10” points 
 
Set “Font Color:” to “blue” 
 
Each change generates the “Edge” Format’ string, and renders a sample graph showing how the edge will 
look based upon the Layout Engine and Splines settings on the ‘settings’ worksheet. Note that the appearance 
may change due to how the layout engines render splines, head ports, and tail ports. For more information on 
these settings, see section Graph Options beginning on page 157.  

Excel to Graphviz Relationship Visualizer 
 
Page 77 
When the edge style is the way you want it to look, pressing the ‘Copy style’ button copies the format string 
to the clipboard ready to be pasted into a ‘styles’ worksheet cell. 
 
Next let us add the “spouse” style to the ‘styles’ worksheet. You do this the same way you did it for nodes with 
one key exception. For edge styles you must set the “Object Type” value to “edge”. Here are the steps: 
 
Step 1 – Insert a row within the range marked by the dark border (so that the style name appears 
within the named range). For this example, let’s add the row under the existing style named “edge”. 
 
Step 2 – Type “Spouse” as the “Style” name 
 
Step 3 – Paste the style definition you copied to the clipboard into the “Format” cell. 
 
Step 4 – Set the “Object Type” value to “edge” 
 
Step 5 – Set the switch in the “All” column to “Yes”. 

Excel to Graphviz Relationship Visualizer 
 
Page 78 
The ‘styles” worksheet should now look as follows: 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 79 
Without repeating all the details, let us create three more node styles called “Parent Child”, “Friend”, and 
“Business Associate”. The edge styles definitions and previews look as follows: 
Style 
Format 
Preview 
Parent Child 
style="solid" color="darkgreen" 
fontcolor="darkgreen" fontname="Arial" 
fontsize="10" 
 
Friend Of 
style="dashed" color="deeppink" 
fontcolor="deeppink" fontname="Arial" 
fontsize="10" 
 
Business 
Associate 
style="dotted" color="red" fontcolor="red" 
fontname="Arial" fontsize="10" 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 80 
After pasting the style definitions into the ‘styles’ worksheet, and filling in the other row cells the completed 
‘styles’ worksheet should now look as follows: 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 81 
Returning to the ‘data’ worksheet, assign the appropriate style to the relationship rows based upon the kind of 
relationship documented. The ‘data’ worksheet now appears as: 
 
 
 
 
 
 
 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 82 
Press the “Graph to Worksheet” button and the relationship graph now appears as: 
 
Now we begin to visualize the various types of relationships. We can also see that there are still a few rows 
remaining that do not have styles assigned. These rows represent the “Sister”, “Brother”, and “Cousin” 
relationships. These relationships are drawn in the default Graphviz style.  We need to go back and create a 
“Sibling”, and a “Cousins” edge style. Using the previous method, define two additional edge styles to look as 
follows: 

Excel to Graphviz Relationship Visualizer 
 
Page 83 
Style 
Format 
Preview 
Sibling 
style="solid" color="purple" fontcolor="purple" 
fontname="Arial" fontsize="10" 
 
Cousin 
style="solid" color="chocolate4" arrowtail="dot" 
dir="both" fontcolor="chocolate4" fontname="Arial" 
fontsize="10" 
 
 
Returning to the ‘data’ worksheet, assign the “Sibling” and “Cousin” style to the remaining rows which currently 
use the built-in style of “edge” based upon the kind of relationship documented.  

Excel to Graphviz Relationship Visualizer 
 
Page 84 
Press the “Graph to Worksheet” button and the relationship graph now appears as: 
 
At this point, it is up to an interested reader to divide the relationships to lower levels and add more styles. It 
is possible to split the styles we just created down to smaller levels such as Father, Son, Mother, Daughter, 
Sister, and Brother or even by business relationships such as Landlord and Tenant. There are additional 
relationships that can be added. For example, when Joanie married Chachi, Howard became Chachi’s father-
in-law, Marion became Chachi’s Mother-in-Law, Chachi became Howard and Marion’s Son-in-Law. Add these 
relationships to expand the model. Have fun with it. 

Excel to Graphviz Relationship Visualizer 
 
Page 85 
Modifying the Style of Individual Elements 
There may be times when you want to embellish the style of a node or an edge. The introduction to this 
manual described how to determine the route between two states. Perhaps you want to show the shortest 
route in a different color, make the lines thicker, or use a different style. The Relationship Visualizer has 
capabilities to support this requirement. 
The ‘data’ worksheet provides a column (hidden by default) called “Extra Style”. Adding additional style 
attributes here will only apply to that row of data. The “Graphviz” ribbon tab controls the “Extra Style” 
capability which can be turned on or off depending upon how you wish to depict the graph. 
The “Happy Days” introduction mentioned that Fonzie emerged as the star of the television show. In this case, 
it might be useful to use a ‘star’ shape to identify his node.  
Depict Fonzie as the star by pressing the [+] button over column H to expose the “Extra Style” column and 
find Fonzie’s name (it is on row 7). Add the style attributes  
shape=”star” height=”2.0” width=”2.0” fixedsize=”true” 
to the “Extra Style” column on his row. The height and width are changed to make the star a little larger 
than the other nodes, and the fixedsize attribute tells Graphviz to make the star exactly 2.0 x 2.0 inches 
(i.e. do not grow or shrink the star based upon the size of the label). 
The spreadsheet appears as: 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 86 
Press the “Graph to Worksheet” button and the relationship graph now appears as: 
 
Notice that the “Extra Style” attributes are additive. The star has rounded points because the “Fonzarelli 
Family” style associated with Arthur Fonzarelli has an attribute which includes style=”rounded”. 

Excel to Graphviz Relationship Visualizer 
 
Page 87 
Grouping Information in Clusters 
The DOT layout engine supports the cluster concept described previously in this manual. Other layout engines 
such as FDP and SFDP do not. This means that some of the style techniques described here will not work if you 
are not using the DOT layout engine. 
The Relationship Visualizer allows you to denote the start of a cluster with open brace “{”and close brace “}” 
characters in the “Item” column. The “Label”, “Style”, and “Extra Style” columns all work for clusters as was 
previously described for nodes and edges. 
In the previous graph Richie Cunningham is located at the bottom of the graph, while the other members of his 
family are at the top of the graph. We would like to group all the members of the Cunningham family 
together, so let’s add an open brace “{” above their rows with a label of “Cunningham Family”, and a close 
brace “}” below the row of the last Cunningham family member. We will also group the Fonzarelli family 
members, and group the Friends. To make the data more readable, we will also add comments by placing a 
“#” character in Column A, and comment text in the Item cells 
The spreadsheet now appears as: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 88 
Press the “Graph to Worksheet” button and the relationship graph now appears as: 
 
We can use the “Extra Style” capabilities for clusters, just as we did for nodes. For example, add the attribute 
bgcolor=”gray87” in the “Extra Style” column on the rows containing the open cluster “{“ characters: 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 89 
Press the “Graph to Worksheet” button and the relationship graph now appears as: 
 
The ‘style designer’ worksheet contains a “Cluster” design mode for creating Cluster style definitions. It works 
the same way as was explained for nodes and edges, and therefore an additional explanation here would 
probably bore the reader. The following picture provides an example of a “Cluster” style definition. 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 90 
Adding Native Graphviz Directives 
The Relationship Visualizer is intended to hide as much of Graphviz’s DOT language as possible so that you 
only manipulate rows and columns in Excel. You can take greater control of the diagram’s presentation by 
adding in Graphviz statements, assuming you take the time to learn the DOT language2.  
You can insert Graphviz commands into the DOT language file by specifying the character “>” in the Item 
column. The “>” character identifies the row as having a “native” command. When an Item of “>” is 
encountered the Excel macro code takes the value in the “Label” column and writes it to the text file which will 
be sent to the layout engine.  
Note: Labels are processed to convert Excel-style carriage returns into Graphviz-style 
carriage returns, as well as filter out special characters that Graphviz cannot process. Rows 
with native Graphviz commands are not inspected, and the value in the Label column is written 
directly as-is into the Graphviz file. 
For example, the Graphviz statements which will depict Howard and Marion Cunningham on a common plane, 
and Richie and Joanie Cunningham on a separate, yet common plane are: 
{rank="same”; “Howard”; “Marion”;} 
{rank="same”; “Richie”; “Joanie”;} 
These directives must be placed within the cluster where the Cunningham family is defined.  
Add two rows above the close brace “}”. In the “Item” column enter the character “>”, and in the “Label” 
column enter the Graphviz statements listed above.  
The Excel data now appears as: 
 
                                                
2 Readers interested in learning more about the DOT language should refer to http://www.graphviz.org/Documentation.php 
and http://www.graphviz.org/pdf/dotguide.pdf   

Excel to Graphviz Relationship Visualizer 
 
Page 91 
Press the “Graph to Worksheet” button and the relationship graph now appears as: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 92 
Adding Images 
As you develop more advanced relationship graphs you may want to use images to represent the nodes in 
combination with, or in place of the node shapes. Graphviz supports an “image=” attribute where you can 
provide a file name of an image to include in a node. 
The Relationship Visualizer by default will look in the directory where the spreadsheet is saved. If you wish to 
store the images in other locations, you must make a configuration change on the ‘settings’ worksheet to 
specify the location(s). The image path must be specified before you can use the “image=” attribute in a 
style definition. 
Switch to the ‘settings’ worksheet and locate the “Image Path:” setting in the ‘Graph Options’ section. To the 
right of the cell is a button with three dots […]. If you press that button it will bring up the standard directory 
selection dialog which you can use to choose the directory where the images are stored. Navigate to the 
directory and press the “OK” button to transfer the path to the cell.  
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 93 
Your settings should appear like this: 
 
Image name is an option on the ‘style designer’ worksheet that is useful when you want to create a common 
style definition where all nodes of a given style use a common icon. For example, it is possible to depict 
computers with one image, depict databases with another image, and depict computer programmers with yet 
another image.  
An example “Node” format style definition containing an image appears as follows: 
 
For our example, we are going to take it a step further by using the “Extra Style” column to insert a 
photograph of each character.  
The characters of Potsie and Ralph have not gotten very much attention in this example, so let us shift the focus 
to them. We have obtained JPEG images of these characters off the internet, cropped them to be square, 
scaled then down to a common size, and placed them in the directory where the Excel workbook is saved.  
Next, we want to specify the image file name on the character’s node row, and shift the label position to the 
bottom so that it is placed below the character’s picture.  

Excel to Graphviz Relationship Visualizer 
 
Page 94 
For Ralph, we will add extra style attributes: 
image=”Ralph_Malph.jpg” labelloc=”bottom” height=”1.6” width=”1.5” 
and for Potsie we will add:  
image=”Potsie_Weber.jpg” labelloc=”bottom” height=”1.6” width=”1.5” 
The labelloc attribute will move the label location from the default center position to the bottom of the 
shape. The height and width are adjusted from landscape rectangular dimensions on the ‘styles’ 
worksheet to a more square-like shape since the images being used are square. The height is made slightly 
larger than the width to provide space for the label below the image. 
The Excel data now appears as follows: 
 
 
Press the “Graph to Worksheet” button and the relationship graph now appears as: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 95 
Next we repeat these steps for the other characters. The final graph now appears as follows: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 96 
Summary 
In summary, we quickly built a relationship graph using Excel column data. Then using the “style designer” 
worksheet styles were placed in the “styles” worksheet which we associated to rows of data in the “data” 
worksheet. Additional style elements were added to individual rows.  
These actions have allowed us to transform the  
visualization from this default graph: 
 
 
to this style-based depiction: 
 
and finally, this style-based depiction with row refinements: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 97 
CREATING VIEWS 
Introduction 
The Relationship Visualize is capable of handling much larger data sets than can be illustrated in this manual. 
As the data sets get larger it sometimes becomes useful to see just certain views of the data. The Relationship 
Visualizer supports views by providing a mechanism on the “styles” worksheet which provides “Yes” or “No” 
switches to indicate which data to include in the graph. 
Views vs. Layers 
In this manual, the term “Views” is meant to represent a redrawing of the graph with just a subset of nodes 
and edges. Graphviz likes to optimize the layout of the nodes and edges based upon the connections, so 
often the shapes will move to new locations. Contrast this to the term “Layers”. Layers are a concept in tools 
such as Microsoft Visio where shapes can be layered in a manner so that they can be hidden or exposed. In a 
layered tool, the shapes never change position; they are just visible or invisible. 
Continuing Our Example 
Let us continue our “Happy Days” example. We have built a data set and a graph of the primary characters 
and their relationships, but what if we want to see a subset graph of just who is married? The way we do that 
is by defining a column of View switches in the ‘styles’ worksheet, and direct the Relationship Visualizer to 
create the graph using just the styles enabled in that column.  
Let us create a view for ‘Spouse’ relationships 
Step 1 – Switch to the ‘styles’ worksheet. 
Step 2 – Copy Column E with heading “All” to Column F. The ‘styles’ worksheet will appear as follows: 

Excel to Graphviz Relationship Visualizer 
 
Page 98 
 
Step 3 – Change the heading in cell F2 to “Spouses” and change all the switches in Column F from “yes” to 
“no” where the “Object Type” is “edge” EXCEPT for the row with the style named “Spouse”.  
We will also turn off the ability to add Graphviz directives by changing the “native” style’s switch from “yes” 
to “no”. 

Excel to Graphviz Relationship Visualizer 
 
Page 99 
The ‘styles’ worksheet should now appear as: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 100 
Step 4 – We now have to change a setting on the ‘Graphviz’ ribbon tab to tell the Relationship Visualizer to 
use only the styles we have enabled through “yes” settings in column F. Switch to the ‘data worksheet. The 
‘data’ worksheet should appear as follows: 
 
 
Step 5 – Change the name of the ‘View’ from “All” to “Spouses” in the ‘Styles’ section of the ‘Graphviz’ ribbon 
tab. The dropdown selections in this list are updated every time a new View column is added to the ‘styles’ 
worksheet. 
 

Excel to Graphviz Relationship Visualizer 
 
Page 101 
Step 6 – Press the “Graph to Worksheet” button. The new graph with just the view of the marriage 
relationships will appear as follows: 
 
As you can see, the other relationship edges are no longer in the graph. Graphviz has moved the nodes 
around to make the drawing compact. The graph continues to show all the Happy Days characters; regardless 
of if they do or do not have a marriage relationship. 
Sometimes when the amount of data is large, having nodes without relationships can be distracting. In the 
example above, we are interested in the marriage relationships, yet Richard Cunningham, Arthur Fonzarelli, 
Ralph Malph, and Warren Weber are also depicted.  The Relationship Visualizer has switches to remove 
these island nodes when the island nodes serve no purpose in the graph. 
Step 7 – Remove the check mark on the ‘Graphviz’ ribbon from the ‘Nodes’ – ‘Without Edges’ switch control. 
This means only include nodes that have an edge connection to another node.  
 

Excel to Graphviz Relationship Visualizer 
 
Page 102 
Step 8 – Press the “Graph to Worksheet” button. The graph should now appear as follows: 
 
Notice that the “Friends” cluster has disappeared along with the characters without a Spouse relationship. That 
is because Graphviz does its own filtering, and will not draw a cluster that does not contain any nodes. 
 

Excel to Graphviz Relationship Visualizer 
 
Page 103 
PUBLISHING GRAPHS 
One of the powers of the Relationship Visualizer is that you can collect large amounts of data and let it and 
Graphviz determine how to graph it efficiently. Graphs with lots of data tend to grow large; much larger 
than can easily be viewed in Excel. You may also want to print them, and you will need a tool such as Adobe 
Acrobat Reader that will provide the means to zoom in and out on the graph, and poster print the diagram 
using multiple sheets of paper. 
Setting Output File Options 
You must specify a directory where you want graph files written to, and provide a filename prefix for the 
file. Select the ‘Get Directory’ button on the ‘Graphviz’ ribbon tab to bring up the Microsoft Windows 
directory-picking dialog.  
 
Choose a directory, press OK, and the directory path is transferred to the Output Directory label beneath the 
‘Get Directory’ button. At this point, the ‘Graph to File’ button is enabled.  
 
Next, specify a File Name Prefix. This is a value that the filename will begin with.  
 
The heading value of the view column used to control which styles were included in the diagram will be 
appended to the prefix as part of the file name. In this example, we will continue to work with the ‘Spouses’ 
view. 
Two additional switches can append a date and time to the filename, and the graph options used (layout 
engine and spline setting) to create the graph. Timestamps on the filename help ensure file creation occurs 
when you are refining the graphs since Graphviz cannot generate a new file if a file by the same name is 
open in another tool, such as Acrobat reader. Recording graph options in the file name allows you to try 
different layout engines and spline settings top find the combination that produces the best-looking graph. 

Excel to Graphviz Relationship Visualizer 
 
Page 104 
Having this information in the filename is a handy way to recall which settings to use once you have made 
your decision. 
 
In this example, all the options have been enabled. 
Specifying the Output File Format 
Graphviz provides numerous file formats that the diagrams can be written as, such as gif, jpeg, pdf, or tiff. 
The Relationship Visualizer provides the most commonly used file formats in the ‘File Format’ dropdown list.  
 
Graph to File 
Press the “Graph to File” button. A graph is generated in the same fashion as when “Graph to Worksheet” 
was press, but the focus will remain on whatever worksheet was active when the button was pressed (the 
‘data’, ‘styles’, and ‘settings’ worksheets all provide this button). You will receive a message down in the status 
bar that will tell you what the filename is, and where the file is located. 
View the File 
Bring up Windows Explorer and find your file. 
 
Launch the file, and see it displayed. In this example, the graph is a PDF file. Adobe Acrobat Reader will 
display the file, and Acrobat Reader’s entire zoom, print, and annotation capabilities are available to you. 

Excel to Graphviz Relationship Visualizer 
 
Page 105 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 106 
ADVANCED TOPICS, TIPS, AND TRICKS 
This section describes several miscellaneous features in the Relationship Visualizer that can be used to create 
more elaborate graphs. 
HTML Labels 
Graphviz has a feature where if the value of a label attribute for nodes, edges, clusters, or graphs is given as 
an HTML string that is delimited by <...>, the label is interpreted as an HTML description. At their simplest, 
such labels can describe multiple lines of variously aligned text as provided by ordinary string labels. More 
generally, the label can specify a table like those provided by HTML, with different graphical attributes at 
each level. 
The features and syntax supported by these labels are modeled on HTML. However, there are many aspects 
that are relevant to Graphviz labels that are not in HTML and, conversely, HTML allows various constructs 
which are meaningless in Graphviz. The Graphviz creators generally refer to these labels as "HTML labels" 
but the reader is warned that these labels are not HTML. The grammar which Graphviz will accept is fully 
described at: http://www.graphviz.org/doc/info/shapes.html#html 
A basic HTML label can be constructed as text between <font> and </font> elements, then wrapped in 
the < and > delimiters as described above. For example, a label can be constructed as: 
<<font>This label has <b>bold</b>, <i>italic</i>, 
<u>underlined</u>, and <s>strikeout</s> text</font>> 
and entered as a label value for an edge. In this example, we will relate ‘a’ to ‘b’ as we are interested in 
seeing how the edge is drawn. The ‘data’ worksheet appears as: 
 
 
Pressing “Graph to Worksheet” produces the following graph: 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 107 
A slightly more complex example is to create a HTML table. In this example, the table contains one row with 
two cells: 
<<table> 
  <tr> 
    <td>Cell 1</td> 
    <td>Cell 2</td> 
  </tr> 
</table>> 
 
Using it to represent a node named ‘c’, the ‘data’ worksheet appears as: 
 
Pressing “Graph to Worksheet” produces the following graph: 
 
HTML labels can be used for Clusters, Nodes, and Edges. In the example below there are three Items named 
‘a’, ‘b’, and ‘c’. HTML labels have been added for node ‘a’, and the edges from ‘a’ to ‘b’ and from ‘b’ to ‘c’. 
The nodes and edges are wrapped with a border via a cluster that also has an HTML label.  

Excel to Graphviz Relationship Visualizer 
 
Page 108 
The ‘data’ worksheet appears as: 
 
Pressing “Graph to Worksheet” produces the following graph: 
 
Keywords - ‘Graph’, ‘Node’, and ‘Edge’ Keywords 
Graphviz has a built-in behavior where if a default attribute is defined using a node, edge, or graph 
statement, any object of the appropriate type defined afterwards will inherit this attribute value. This holds 
until the default attribute is set to a new value, from which point the new value is used. Objects defined 
before a default attribute is set will have an empty string value attached to the attribute once the default 
attribute definition is made.  
The Relationship Visualizer also supports this capability by reserving the values “graph”, “node”, and “edge” 
as keywords in the ‘Item’ column of the ‘data’ worksheet. Appropriate syntax statements are added to the 
DOT source code to put the styles defined by the values in the “Style” and “Extra Style” columns into effect 
(when these columns are enabled on the ‘settings’ worksheet) when these keywords are detected. 
In the following example, nodes have been defined with an Item ID of ‘a’ through ‘h”. On row 5 a node 
statement has been placed with an “Extra Style” definition which changes the font color to red (the node 
statement has conditional formatting which changes the cell background color and changes the font to bold 

Excel to Graphviz Relationship Visualizer 
 
Page 109 
italic to differentiate the keyword from ordinary data). All nodes from that point forward are rendered with 
a red font. This continues until a second node statement is encountered on row 10 that resets the font color to a 
null string, which tells Graphviz to resume using the default value. 
 
Pressing “Graph to Worksheet” produces the following graph: 
 
Likewise, this same capability exists for edges using the “edge” keyword. In the example below an edge 
keyword on row 13 sets the edge color to blue for the first 3 edges. A second edge keyword on row 17 
changes the color to red for all the remaining edges. 
 
Produces the following graph: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 110 
Note that a subgraph receives the attribute settings of its parent graph at the time of its definition. This can 
be useful; for example, one can assign a font to the root graph and all subgraphs will also use the font. For 
some attributes, however, this property is undesirable. If one attaches a label to the root graph, it is probably 
not the desired effect to have the label used by all subgraphs. Rather than listing the graph attribute at the 
top of the graph, and the resetting the attribute as needed in the subgraphs, one can simply defer the 
attribute definition in the graph until the appropriate subgraphs have been defined. 
Clusters - Depicting a Relationship from or to a Cluster 
You may have a situation where you are trying to represent a dependency diagram where you have nodes 
inside a cluster, and you want to be able to make nodes and/or clusters dependent on other nodes and/or 
clusters. In other words, you want an edge to begin and/or end at the border of a cluster. This goal can be 
accomplished in the Relationship Visualizer with a little bit of additional Graphviz knowledge. 
Let’s reproduce the diagram below which can be found at: 
http://stackoverflow.com/questions/2012036/graphviz-how-to-connect-subgraphs  
 
Let’s start by putting the ‘graph’, ‘node’ and ‘edge’ keyword features described in the previous section into a 
tangible example. In rows 4-6 below each keyword is specified along with style formatting for each object. 
These statements are not required to connect clusters, but are illustrative of the keyword feature which was 
just described, and will help visually distinguish elements of the graph. For graphs, nodes, and edges set the 
“Extra Style” cells with the following formatting information: 
 
Graph: fontname="Arial" fontsize="12" fontcolor="red" 
 
Node: fontname="Arial" 
 
Edge: fontname="Arial" fontsize="8" decorate="true" color="blue" 

Excel to Graphviz Relationship Visualizer 
 
Page 111 
The spreadsheet should look as follows: 
 
Next we need we enable the “compound” graph attribute which Graphviz sets to ‘false’ by default. Setting 
it to ‘true’ activates a Graphviz feature allowing edges to connect to clusters. The easiest way to do this is to 
follow the instructions previously described in Adding Native Graphviz Directives on page 90 to add a 
native Graphviz statement. Place a ‘>’ character in the Item column to indicate this is a native command, and 
enter compound=”true” in the Label column as shown below.  
 
The compound=”true” statement is then added to the body of the main graph. 
Next, define 2 clusters. To make the example clear we will label them as cluster0 and cluster1. Cluster0 will 
have 4 edge relationships using the letters a, b, c, and d as node names which will fall inside the cluster 
border. Likewise, cluster1 will have edge relationships using the letters e, f, and g as node names that fall 
inside a cluster border. 
Up until this point we have always defined the start of a cluster with an open brace ‘{‘. When the Relationship 
Visualizer sees an open brace, it generates an internal name for the cluster to makes things simpler for the 
user. A cluster must have an Item name to reference it by if we are to connect edges to it, so using the macro-
generated name could be haphazard, as the name will change if the cluster definition moves around within 
the Excel spreadsheet.  
The Relationship Visualizer solves that problem by allowing you to provide a name preceding the open brace 
(for example, “cluster0”) to designate a named subgraph. If the name of the subgraph begins with cluster, 
Graphviz notes the subgraph as a special cluster subgraph. If supported, the layout engine will do the layout 
so that the nodes belonging to the cluster are drawn together, with the entire drawing of the cluster contained 
within a bounding rectangle. Note that, for good and bad, cluster subgraphs are not part of the DOT 
language, but solely a syntactic convention adhered to by certain of the layout engines. If the name does not 
begin with cluster, then Graphviz treats the subgraph as an ordinary subgraph. 

Excel to Graphviz Relationship Visualizer 
 
Page 112 
The spreadsheet now looks as follows to define the clusters. Note in the illustration that the occurrence of the 
cluster name in the Item and Label columns. We will remove the label later in this example, but for now it 
helps make the lesson clearer. 
 
Once the clusters have been defined, we can specify edges that show relationships between the clusters. Five 
scenarios are depicted: 
1. A relationship from a node within a cluster to another node within a cluster (row 21) 
2. A relationship from a node within a cluster to a node outside of a cluster (row 22) 
3. A relationship from a node within a cluster to the border of another cluster (row 23) 
4. A relationship from the border of a cluster to a node within a cluster (row 24) 
5. A relationship from the border of a cluster to the border of another cluster (row 25) 
To specify the cluster were the edge should originate from you must specify a ltail attribute in the Extra 
Style column which specifies the name the cluster the edge should originate from. For example 
ltail=”cluster0”. Note that the item name in the “Item Name” column must reside within that cluster. 
When you want the arrow head of an edge to stop at the border you must specify a lhead attribute in the 
Extra Style column which specifies the name of the cluster to connect to. For example, lhead=”cluster1”. 
Note that the item name in the “Is Related to Item” column must reside within that cluster. 
The spreadsheet appears as follows to show the five scenarios described above. Descriptions of the scenarios 
have been added in the Label column to help explain this example. Later in the example we will hide them. 
 

Excel to Graphviz Relationship Visualizer 
 
Page 113 
At this point all the information necessary to create the graph has been entered. When you press the “Graph 
to Worksheet” button the graph appears as follows: 
 
The graph looks like our desired graph. Notice that each blue edge has a black line attached which 
underlines the label text, and the edge label describes the relationship depicted. The callout line effect was 
achieved by us adding the attribute decorate=”true” when the edge keyword was defined at the top 
of the spreadsheet. It was useful here to help see the scenario depicted as Graphviz sometimes places labels 
in locations which can cause confusion. 
Now that we see how the edge statements are graphed, we can hide the labels. An easy way to do that is to 
go to the ‘Graphviz ribbon tab, and in the “Edges” section and remove the check box from “Include labels”. 
 

Excel to Graphviz Relationship Visualizer 
 
Page 114 
Press the “Graph to Worksheet” button and the graph now appears as: 
 
This graph is almost the same as the graph from the Internet we are trying to duplicate. The only thing left to 
do is to remove the cluster labels that were included to illustrate this example. There is not a settings switch to 
turn these on/off, so here we must go back into the ‘data’ worksheet and delete the labels so that the data 
looks as follows: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 115 
Press the “Graph to Worksheet” button and the graph now appears as the graph on the left; the graph we 
are duplicating is on the right: 
 
Generated by Relationship Visualizer 
 
http://i.stack.imgur.com/Ka0t2.png 
The graph was purposely left with blue edges and a slightly smaller font size to differentiate it enough from 
the target graph to show it was not the original image, but keep it similar enough to show the goal was met.  
If you are interested in making the final changes to make the graphs truly identical you can edit the style 
definition for the edge keyword on row 5 to remove the color=”blue” attribute. Press the “Graph to 
Worksheet” button and the graph generated will be identical to the goal image. 
 

Excel to Graphviz Relationship Visualizer 
 
Page 116 
Clusters - Aligning Nodes across Clusters 
One of the ways Graphviz frees your time is by letting it choose the optimal way to lay out shapes and 
edges. Sometimes however you want to control the placement for esthetic reasons. Assume that you have the 
following graph: 
 
Created by this spreadsheet: 
 
For esthetic reasons, we would like “router1” and “router2” to be aligned. Two native Graphviz DOT 
commands need to be added to the spreadsheet to make this occur. The first command is shown on line 4, 
which adds newrank=”true” into the body of the main graph. (It appears that newrank is an 
undocumented attribute added in Graphviz 2.30 which activate a new ranking algorithm which allows 
defining rank=”same” for nodes which belong to clusters). 

Excel to Graphviz Relationship Visualizer 
 
Page 117 
 
The next step is to add the following native Graphviz command after the cluster definitions: 
{ rank=”same”; “router1”; “router2”; } 
as shown on row 13 below: 
 
Press the “Graph to Worksheet” button, and the graph contains router1 and router2 aligned as shown below: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 118 
Nodes - Shape=“Record” 
Visually, a record is a box, with fields represented by alternating rows of horizontal or vertical sub-boxes. 
The Mrecord shape is identical to a record shape, except that the outermost box has rounded corners. 
Flipping between horizontal and vertical layouts is done by nesting fields in braces "{...}". The top-level 
orientation in a record is horizontal. Thus, a record with label "A | B | C | D" will have 4 fields oriented left 
to right, while "{A | B | C | D}" will have them from top to bottom and "A | { B | C } | D" will have "B" over 
"C", with "A" to the left and "D" to the right of "B" and "C". 
The initial orientation of a record node depends on the rankdir attribute. If this attribute is “Top to Bottom” 
or Bottom to Top, corresponding to vertical layouts, the top-level fields in a record are displayed horizontally. 
If, however, this attribute is “Left to Right” or “Right to Left”, corresponding to horizontal layouts, the top-level 
fields are displayed vertically 
 
Results in: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 119 
Nodes - Shape=“Record” With Ports Specified 
You can specify port identifiers as part of the field values in a record shape. The first string in the field Id 
assigns a port name to the field and can be combined with the node name to indicate where to attach an 
edge to the node.) The second string is used as the text for the field; it supports the usual escape sequences 
\n, \l and \r. Therefore, if we specify the following (with color-coding added to highlight the ports): 
 
We will generate the following graph: 
 
If we change the graphing direction from “Top to Bottom” to “Left to Right” on the ‘Settings’ worksheet and 
regenerate the graph it will appear as follows: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 120 
Nodes - Skewing the Angle of Polygon Nodes 
Polygon shapes can be angled by changing the skew attribute. Positive values skew top of polygon to right; 
negative to left. This feature can be illustrated simply by defining seven nodes, and varying the skew 
attribute by 0.5 for a range of values from -1.5 to 1.5 in the ‘Extra Style’ column.  
The Excel data is defined as follows: 
 
 
Pressing the “Graph to Worksheet” button, the graph appears as: 
 
 
This feature works for any number of polygon sides. If the sides attribute on row 3 changes from 
sides=”4” to sides=”8”, the resulting graph appears as: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 121 
Nodes - Distorting the Length of Polygon Nodes 
Polygon shapes can be distorted by changing the distortion attribute. Positive values cause the top part 
of the polygon to be larger than the bottom; negative values do the opposite. This feature can be illustrated 
simply by defining seven nodes, and varying the distortion attribute by 0.5 for a range of values from -
1.5 to 1.5 in the ‘Extra Style’ column.  
Define the Excel data as follows: 
 
 
Pressing the “Graph to Worksheet” button, the graph appears as: 
 
 
This feature works for any number of polygon sides. If the sides attribute on row 3 changes from 
sides=”4” to sides=”8”, the resulting graph appears as: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 122 
Edges - Consolidating Edges Using the ‘strict’ Option 
Some sets of data will cause multiple edges to be drawn between the same nodes. A good example of this is 
the US state border example from the introduction of this document. Every state that shares a border with 
another state has two relationships. For example, Michigan shares a border with Ohio, and Ohio shares a 
border with Michigan.  
Plotting the state border relationships as an undirected graph, the following data: 
 
Generates the following graph: 
 
Graphviz can consolidate these duplicate relationships into one relationship. If Graphviz is told that the graph 
is strict, then multiple edges are not allowed between the same pairs of nodes. 
On the ‘Graphviz’ ribbon tab in the “Graph” section enable the “Strict” option to “yes” as shown below: 
 
Press the “Graph to Worksheet” button and the graph appears as:  
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 123 
Edges - Changing the Order of Edges 
Differences in style may be achieved by altering the edge ordering. If the value of the ordering attribute 
is "out", then the out edges of a node, that is, edges with the node as its tail node, must appear left-to-right 
in the same order in which they are defined in the input. If the value of the attribute is "in", then the in 
edges of a node must appear left-to-right in the same order in which they are defined in the input.  
Assume you have several edge relationships defined as follows: 
 
Pressing the “Graph to Worksheet” button, the graph appears as: 
 
ordering=”in” 
 
ordering=”out” 

Excel to Graphviz Relationship Visualizer 
 
Page 124 
Edges - Placing a Label at the Head or Tail of an Edge 
The default view of the Relationship Visualizer provides a Label column for labeling an edge. Graphviz also 
supports placing a label at the tail and/or head of an edge via the taillabel and headlabel 
attributes respectively. There are label columns on the ‘data’ worksheet which correspond to these attributes, 
however you must unhide the columns to use them. 
For example, if we have a simple relationship such as: 
 
Producing the graph: 
 
We can click the plus + button above column G to expose the additional label columns 
 
 
If we place the value “tail” at the tail of an edge, and “head” at the head of an edge, the data in the 
spreadsheet would look as follows:  
 
Pressing the “Graph to Worksheet” button creates the following graph:  
 

Excel to Graphviz Relationship Visualizer 
 
Page 125 
Edges - Drawing an Edge from or to the Center of a Node 
An edge is clipped to the boundary of a node shape by default. It is possible to override this behavior such 
that the edge will begin and/or end in the center of the node instead of the node boundary. The attributes 
headclip and tailclip control this behavior. When set to true (the default) an edge is clipped to the 
boundary of a node. When set to false the edge goes to the center of the node, or the center of a port if 
applicable. 
The data below: 
 
Creates the following graph:  
 
Note: The nodes have blank labels to make the illustration of edges coming from or going to the center of the 
node easier to see. Enabling the ‘Nodes’ graph option “Blank labels” on the ‘Graphviz’ ribbon tab is required to 
achieve this effect. 
 

Excel to Graphviz Relationship Visualizer 
 
Page 126 
Graphs - Rotating Graphs 90 Degrees 
Graphs can have their drawing orientation set to landscape by setting the rotate attribute equal to 90. The 
final output is rotated in the counter-clockwise direction. The data below: 
 
Creates the following graph:  
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 127 
WORKING WITH LARGE DATA SETS 
It is very easy to collect large amounts of data in Excel, and Graphviz has powerful algorithms to determine 
how to place nodes and draw the relationships. You can reach a saturation point where the graph appears as 
a jumbled mess. This chapter will describe how you can extract insights from a large data set. 
Large Data Set Example - ‘The Beatles’ Music Catalog 
The Beatles were an English rock band, formed in Liverpool in 1960. With members John Lennon, Paul 
McCartney, George Harrison and Ringo Starr, they became widely regarded as the foremost and most 
influential act of the rock era.  
The Beatles were very prolific in releasing music on various media such as 45 RPM records, LP records, EP 
records, and Compact Disc (CD) as technology changed over the years. In addition, songs were often 
regrouped into greatest hits compilations, or regional versions (US vs UK). Here are some statistics: 
 
289 Songs released over 16 years 
 
42 Singles (45 RPM) Released 
o 84 relationships between songs and 45 RPM singles 
 
19 EP albums released 
o 78 relationships between songs and EP albums 
 
29 LP albums (33 1/3 RPM) released  
o 391 relationships between songs and LP albums 
 
28 CDs Released 
o 568 relationships between songs and Compact Discs 
A Beatles Song Cross Reference at http://www.beatlesagain.com/btsongs.html was used to create a large 
data set within the Relationship Visualizer to give Graphviz a challenge. In most cases the spreadsheet will net 
be shown here, but it is provided in the “samples” directory of the Relationship Visualizer distribution.  
Graphviz is up to the challenge of graphing the large data set, but due to the large number of relationships 
the graph comes out to be a bit of a jumbled mess, as shown below: 

Excel to Graphviz Relationship Visualizer 
 
Page 128 
 
By creating the Graphviz output as a PDF file, text searches for songs such as “Yesterday” can be performed 
in Adobe Acrobat. Once the text is found once can zoom in to try to get a detailed view, as is shown below: 

Excel to Graphviz Relationship Visualizer 
 
Page 129 
 
This just serves to confirm that you can’t get much meaning out of this graph. Let’s look at some ways we can 
work with the data to get at the information. 

Excel to Graphviz Relationship Visualizer 
 
Page 130 
Use Views to Simplify the Graphs 
The first technique to simplify the graphs is to use views of the data. How to create views are described in 
Creating Views on page 97, and the lesson will not be repeated here. For the large data set, we created 
views by Year, Album, 45 RPM Single, CD, etc. which have ‘yes’ switches for the relevant media, and ‘no’ 
switches for the others.  
The resulting ‘styles’ worksheet appears as: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 131 
We can then iterate though the columns on the ‘settings’ worksheet to create the various views. 
Songs Released by Year 
 
Songs Released on LP Album 
 

Excel to Graphviz Relationship Visualizer 
 
Page 132 
Songs Released on 45 RPM Single 
 
Songs Released on CD 
 

Excel to Graphviz Relationship Visualizer 
 
Page 133 
These views are useful for searching for patterns such as what were the most prolific years, or what songs 
were regrouped and released on multiple albums.  
If we attempt to look at to the song level within the views, it has become a little easier to find the information 
we are looking for. If we continue to look for the song “Yesterday” we see: 
 
 
‘Yesterday’ shown as released on LP Album 
‘Yesterday’ shown as released on CD 
 
While this is a little more useful, it is still difficult to draw conclusions on individual songs. Let’s see how we can 
create a view which shows just the song ‘Yesterday’ and all the media it was released on. 

Excel to Graphviz Relationship Visualizer 
 
Page 134 
Use a Data Subset to Get to Answers 
We can take advantage of the two features in the Relationship Visualizer. One is the ability to eliminate data 
from the data set without deleting the rows by commenting out records. The second is the feature to drop 
orphan relationships. If we comment out all the songs but “Yesterday” the Relationship Visualizer will discard 
all nodes (i.e. media) and relationships which are not associated with that song.  
Commenting out the other songs with the “#” character turns the row green and makes the data appear as: 
 
On the ‘settings’ worksheet we must make sure that: 
1. The ‘styles’ section of the ‘Graphviz’ ribbon tab has the View setting set to “Songs Released on All 
Media”. This view will bring in all the various media types that the song “Yesterday” was released on. 
 

Excel to Graphviz Relationship Visualizer 
 
Page 135 
2. The ‘Nodes’ section of the ‘Graphviz’ ribbon tab has “Without edges” unchecked, and the “Edges” 
section has “Without nodes” unchecked. These settings cause unreferenced nodes and edges to be 
filtered out of the graph.  
 
When we press the “Graph to Worksheet” button we now get a simplified graph which looks as follows: 
 
Now it becomes quickly and visually apparent that “Yesterday” was released on 4 CDs, 3 LP albums, a 45 
RPM single, and an EP records. Each depiction provides the name of the media the song was released on. 
Now assume that we are trying to solve a problem of what is the ideal media to buy to obtain the songs 
“Yesterday” and “Yellow Submarine” (chosen for this example just because both songs start with the letter Y). 
Return to the ‘data’ worksheet and remove the comment indicator ‘#’ from the song “Yellow Submarine”.  

Excel to Graphviz Relationship Visualizer 
 
Page 136 
The data will now look as follows: 
 
When we press the “Graph to Worksheet” button we get a graph which looks as follows:  
 
The graph now depicts the additional media on which the song “Yellow Submarine” was released, but what 
we also see is that between the two songs there are some intersecting relationships. Both songs were released 
on 2 CDs (‘The Beatles 1’, and ‘The Beatles 1962-1966’) as well as an LP album (‘The Beatles 1962-1966’). 
The most efficient way to obtain both songs is to buy one media from those three choices. 

Excel to Graphviz Relationship Visualizer 
 
Page 137 
USING SQL TO IMPORT DATA FROM OTHER EXCEL SPREADSHEETS 
Have you ever wished that you could graph data that resides in some other spreadsheet? Do you have 
spreadsheets which change frequently, and thus need frequent re-graphing? The Relationship Visualizer 
provides a solution which lets you write Structured Query Language (SQL) statements which can pull in your 
data from other worksheets in an easily repeatable manner. Using this capability is optional. You do not have 
to use this feature to create graphs. This is a feature for the Relationship Visualizer power user and requires 
some working knowledge of how to write SQL statements. 
SQL Explained 
Structured Query Language (SQL) is a domain-specific language designed for stream processing in a 
relational data stream management system (RDSMS). It is particularly useful in handling structured data where 
there are relations between different entities/variables of the data.  
SQL SELECT statements are designed for a specific purpose: to query data contained in a relational 
database. The SQL SELECT statement selects data from a database, specifying column(s) headings, 
table(s) from which columns are to be selected, and the criteria for selection. SELECT * is used to select all 
columns from a table. The FROM clause in a SELECT statement specifies the Table from which columns are to 
be selected. The WHERE clause in a SELECT statement specifies the criteria for selection.  
Syntax: SELECT column_name FROM table_name [WHERE clause] 
ActiveX Data Objects (ADO) SQL Queries 
Excel can function as a flat-file RDBMS database that can be accessed using ActiveX Data Objects (ADO) and 
SQL queries. Microsoft Excel handles SQL via its own SQL dialect. See the references at the end of this 
chapter for detailed information on the Excel SQL dialect. 
The Relationship Visualizer contains a worksheet named ‘sql’ which hides most of the complexities of writing 
ADO SQL. It allows you to write SQL SELECT queries conforming to the ADO syntax conventions and it takes 
care of the rest. The SQL SELECT statements can reference either the Relationship Visualizer spreadsheet or 
another Excel spreadsheet as the source of the data. When the query is executed, the query results are 
written to the ‘data’ worksheet ready for graphing.  
ADO has a lot of powerful features, but the only features which the Relationship Visualizer uses are SQL 
SELECT queries of the form: 
SELECT [Country Code] as [Item], 
       [Country Name] as [Label] 
FROM   [Countries$] 
This is a standard SQL query, one that selects two columns in the database (which in our case is a worksheet) 
and names the results to correspond to the column names of the ‘data’ worksheet. Notice that we specify the 
name of an individual worksheet in the query, in the same way that we would specify an individual table 
name if we were we connecting to a database, with a couple of minor exceptions. The worksheet name is 
enclosed in square brackets and that the actual worksheet name – Countries – has a $ appended to it.  

Excel to Graphviz Relationship Visualizer 
 
Page 138 
Square brackets are also used to wrap the column names since the column names may have spaces present. 
The square braces inform ADO to treat the value inside as the column name. Square brackets are used 
instead of quotes because quotes denote a string value to place in the results.  
The results of the SELECT statements are processed by the Relationship Visualizer to place the selected values 
into the appropriate columns of the ‘data’ worksheet. The processing logic only recognizes the following 
column names, and will discard all other data: 
 
[Comment] 
 
[Item] 
 
[Label] 
 
[Outside Label] 
 
[Tail Label] 
 
[Head Label] 
 
[Is Related to Item] 
 
[Style Name] 
 
[Extra Style Attributes] 
Excel SQL also allows you to specify strings values as selection columns. The string is repeated for each row of 
the query results when the SQL is executed. This is a useful feature for specifying things such as a style name. 
Assume that there is a style defined on the ‘styles’ worksheet named “Country”. The query is modified as 
follows to add a style named “Country” to each row of the results: 
SELECT [Country Code] as [Item], 
       [Country Name] as [Label], 
       “Country”      as [Style Name] 
FROM   [Countries$] 
SQL allows you to specify WHERE conditions which control what information is returned. The WHERE clause, 
states the qualifying conditions for a query. Multiple conditions can be joined by the AND and OR clauses, 
optionally surrounded by (parentheses) to group them. Only the records that satisfy the specified criteria are 
returned by the query. 
Assume that we wanted a list of countries which use US Dollars as their national currency. The international 
code for US Dollars is “USD” so the SQL would be modified to appear as follows: 
SELECT [Country Code] as [Item], 
       [Country Name] as [Label], 
       “Country”      as [Style Name] 
FROM   [Countries$] 
WHERE  [Currency Code] = “USD” 
A column can contain duplicate values, and to list the distinct values, use the SELECT DISTINCT clause. The 
DISTINCT clause can be used to return only distinct values from a set of records. For example, if our worksheet 
contains the continent names where countries reside, we can obtain a list of the continents without duplicate 
rows using the following SQL statement: 

Excel to Graphviz Relationship Visualizer 
 
Page 139 
Assume that we wanted a list of countries which use US Dollars as their national currency. The international 
code for US Dollars is “USD” so the SQL would be modified to appear as follows: 
SELECT DISTINCT [Continent] as [Item], 
                [Continent] as [Label], 
                “Continent” as [Style Name] 
FROM            [Countries$] 
 
Now that you understand the basics of writing SQL SELECT statements, let us look at the features contained in 
the ‘SQL’ ribbon tab. The ‘SQL ribbon tab is activated whenever the ‘sql’ worksheet is activated. It appears as 
follows: 
 
It contains the following major groups: 
 
SQL 
 
Visualize 
SQL 
 
Label 
Control Type 
Description 
Run SQL Commands 
Button 
Sequentially runs the SQL statements in this worksheet, writing 
the results to the ‘data’ worksheet. 
Clear Status 
Button 
Clear the values from the ‘Status’ column. 

Excel to Graphviz Relationship Visualizer 
 
Page 140 
Visualize 
  
Label 
Control Type 
Description 
Graph to Worksheet 
Button 
Graphs the data in the ‘data’ worksheet and displays the 
results in Excel. This button does the same work as the like-
named button on the ‘Graphviz’ ribbon tab and is included 
here to speed the creation of graphs after running SQL 
statements. 
Graph to File 
Button 
Graphs the data in the ‘data’ worksheet and writes the graph 
to a file using the values specified on the Graphviz ribbon tab. 
This button does the same work as the like-named button on the 
‘Graphviz’ ribbon tab and is included here to speed the 
creation of graphs after running SQL statements. 
All views to File 
Button 
Graphs the data in the ‘data’ worksheet against all the views 
specified and writes the graphs to files using the values 
specified on the Graphviz ribbon tab. This button does the 
same work as the like-named button on the ‘Graphviz’ ribbon 
tab and is included here to speed the creation of graphs after 
running SQL statements. 
 
Writing SQL Queries to create graphs 
In the Relationship Visualizer download zip file there is a directory named “SQL – World Map” within the 
“samples” directory. We will use this example to show how to use the ‘sql’ worksheet. The “SQL – World 
Map” directory has in it a copy of the Relationship Visualizer spreadsheet containing SQL statements, and 
predefined styles on the ‘styles’ worksheet, as well as ‘data’ directory which has 5 representations of a 
“countries” worksheet corresponding to the supported file extensions of csv, xls, xlsb, xlsm, and xslx. All of the 
“countries” spreadsheets have the same data. The query logic has to treat each file extension a little 
differently (I won’t bore you with the details), and is included in the different formats simply for testing 
purposes. An example of a “countries” workbook appears as follows: 

Excel to Graphviz Relationship Visualizer 
 
Page 141 
 
Now open the file “Relationship Visualizer.xslm”, select the ‘sql’ worksheet. Note that there are 4 rows with 
SQL statements. We will use these statements to extract the values out the ‘countries’ workbooks and draw a 
graph view of the continents, countries, and connected borders. The ‘sql’ worksheet appears as follows: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 142 
The first SQL statement on row 2 selects the column “ISO” to represent the Item ID, as well as the node label. 
The country name is selected to be an outside label, and the continent name is selected to be the style name. 
Within the ‘styles’ worksheet there are 7 node style definitions which correspond to the continent names.  
The SQL is written as follows: 
SELECT   [ISO]                as [Item], 
         [ISO]                as [Label], 
         [Country]            as [Outside Label], 
         [Continent]          as [Style Name] 
FROM     [countries$] 
WHERE    [ISO] IS NOT NULL 
ORDER BY [Country] ASC 
The second SQL statement on row 3 will extract the 7 seven unique continent names from the list of countries 
by using the DISTINCT clause. The continent name will be used as the Item ID as well as the node label. A 
style name of “Continent” will be used for all the rows.  
The SQL is written as follows: 
SELECT DISTINCT [Continent]   as [Item], 
                [Continent]   as [Label], 
                "Continent"   as [Style Name] 
FROM     [countries$] 
ORDER BY [Continent] ASC 
The third SQL statement on row 4 creates edge relationship rows by selecting the ISO value as the Item ID, 
and the “Neighbors” column as the “Is related to item ID” value. The “Neighbors” column in the source 
worksheet contains comma-delimited ISO values which are neighboring countries to that row. The Relationship 
Visualizer has built-in logic to expand the comma-delimited list into multiple relationships. No style name is 
provided, so the default edge style will be used. Note that on the WHERE clause the directive “IS NOT 
NULL” has been added. This clause causes the query to skip rows with empty cells, as there are no values 
with which to express relationships.  
The SQL is written as follows: 
SELECT   [ISO]                as [Item], 
         [Neighbors]          as [Is Related to Item] 
FROM     [countries$] 
WHERE    [Neighbors] IS NOT NULL 
The fourth SQL statement on row 5 is used to group countries by continent. It creates edge relationships by 
placing the Continent name as the Item ID, and the ISO country code in the “Is related to item” column. The 
style name is specified as “ContinentToCountry”.  
The SQL is written as follows: 

Excel to Graphviz Relationship Visualizer 
 
Page 143 
SELECT   [Continent]          as [Item], 
         [ISO]                as [Is Related to Item], 
         "ContinentToCountry" as [Style Name] 
FROM     [countries$] 
WHERE    [ISO] IS NOT NULL 
 
Each of these queries have to specify the name of the workbook against which the SQL is to run. This 
information is contained in column C. There are two ways the file name may be specified.  
1. Specify the full path to the file as shown in the sample file. 
2. Leave the cell blank. If the cell is blank the Relationship Visualizer assumes that the data is contained 
within the current Relationship Visualizer workbook. 
Once the file paths are specified we can run the SQL. Press the “Run SQL Commands” button 
 
The SQL commands are run in sequence from top to bottom. Results are written to the ‘data’ worksheet, and 
the query result status is displayed in column D such as: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 144 
If we switch worksheets and go to the ‘data’ worksheet, it appears as follows: 
 
The data is all present and in the appropriate columns for graphing. In this example 678 rows of data have 
been created using 4 SQL statements! Press the “Graph to Worksheet” button to graph the data. Since this is 
a large data set, be prepared to wait a little while for the results.  
 
When Graphviz completes its work you should see a logical world graph which appears as follows (sent to 
‘graph’ worksheet with zoom level set to 30%): 

Excel to Graphviz Relationship Visualizer 
 
Page 145 
 
For more information on Excel SQL 
 
Writing SQL Queries against Excel files (Excel SQL) - https://querysurge.zendesk.com/hc/en-
us/articles/205766136-Writing-SQL-Queries-against-Excel-files  
 
SQL Query Reference - 
https://www.aquaclusters.com/app/home/project/public/aquadatastudio/wikibook/MS-
Excel/page/SQL-Query-Reference/SQL-Query-Reference  
 
Fundamental Microsoft Jet SQL for Access 2000 - https://docs.microsoft.com/en-us/previous-
versions/office/developer/office2000/aa140011%28v%3doffice.10%29  
 
Intermediate Microsoft Jet SQL for Access 2000 - https://docs.microsoft.com/en-us/previous-
versions/office/developer/office2000/aa140015%28v%3doffice.10%29  
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 146 
WORKING WITH THE DOT LANGUAGE 
The Relationship Visualizer is intended to remove the need to learn the DOT language but still create 
Graphviz graphs. It can, however, also be a very useful tool for learning the DOT language. This chapter will 
explain how you can access the DOT source code which is generated from the Excel worksheets and passed to 
the Graphviz layout engine. These capabilities allow you to graph relationships, and then see the underlying 
code. 
Viewing DOT Source Code 
The Relationship Visualizer contains a worksheet named ‘source’ which shows the source code which was 
generated whenever a graphing button is pressed.  
Click on the ‘source’ worksheet to make it the active worksheet, and it will look as follows: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 147 
You are probably thinking “but I don’t see any DOT source code”. That is correct. Whenever the “Graph to 
Worksheet” or “Graph to File” button is pressed the source code will be present.  
Consider the following example: 
 
To see the Graphviz source code switch to the ‘source’ worksheet. It appears as: 

Excel to Graphviz Relationship Visualizer 
 
Page 148 
 
Now that you understand the basics of viewing Graphviz source code, let us look at the features contained in 
the ‘Source’ ribbon tab. The ‘Source ribbon tab is activated whenever the ‘source’ worksheet is activated. It 
appears as follows: 
 
It contains the following major groups: 
 
Source 
 
Clipboard 
 
Visualize 
 
Tools 
 
Web Resources 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 149 
Source 
 
Label 
Control Type 
Description 
Save Source 
Button 
Saves the Graphviz source code displayed on the 'source' 
worksheet to a file. 
Create 
Button 
Creates the Graphviz source code from the information in the 
'data' worksheet without invoking Graphviz to render a graph. 
This action is useful if you want to change the indentation of the 
subgraphs. 
Indent 
Dropdown List 
Number of spaces equaling a tab indentation 
Renumber 
Button 
Updates all the line numbers for rows having data 
Reset 
Button 
Clears all data on the source worksheet, but leaves the 
headings. 
Clipboard 
 
Label 
Control Type 
Description 
Copy Source to 
Clipboard 
Button 
Selects all the Graphviz source code and copies it to the 
clipboard. 
Cut 
Button 
Standard Excel ‘Cut’  
Copy 
Button 
Standard Excel ‘Copy’ 
Paste 
Button 
Standard Excel ‘Paste’ 

Excel to Graphviz Relationship Visualizer 
 
Page 150 
Visualize 
 
Label 
Control Type 
Description 
Graph to Worksheet 
Button 
Graphs the Graphviz data on the source worksheet using the 
settings on the ‘Graphviz’ ribbon tab and displays the resulting 
graph on the ‘graph’ worksheet. 
If the graph fails to render you will receive a message saying it 
failed, but limitations of the code used to invoke Graphviz 
prevent returning the actual Graphviz error messages. To see 
those messages, you must use a different tool. 
Note also that the exchange of data is one direction. Changes 
made on the ‘data’ worksheet can be generated as ‘source’, 
but changes made on the ‘source’ worksheet will not be 
detected and fed back to the ‘data’ worksheet. 
Graph to File 
Button 
Graphs the Graphviz data on the source worksheet using the 
settings on the ‘Graphviz’ ribbon tab and writes the graph to a 
file. All the restrictions noted for the “Graph to Worksheet” 
button apply to this action as well. 
Tools 
 
Label 
Control Type 
Description 
GVEdit 
Button 
Launches the GVEdit tool which comes with Graphviz 

Excel to Graphviz Relationship Visualizer 
 
Page 151 
Web Resources 
 
The ‘Web Resources’ group dynamically supports 1-6 buttons which can launch the user’s default browser and 
display a web page. Button text, tool tips, and the URL are specified in the ‘settings’ worksheet. The worksheet 
as distributed contains three links to online Graphviz rendering tools. They are: 
Label 
Control Type 
Description 
Graphviz Fiddle 
Button 
GraphvizFiddle draws DOT language [directed] graphs. It is a 
dual-view Graphviz editor and playground for Graphviz 
written by Hermann Stamm-Wilbrandt. 
Pocket Reference 
Button 
An on-line code editor for Graphviz written by Josh Hayes-
Sheen for Computer Science students. 
Graphviz Online 
Button 
Online Graphviz editor with syntax highlighting. 
The values associated with these buttons are located in the ‘settings’ worksheet in the ‘Ribbon Options’ 
location, in the ‘Source Tab 
 

Excel to Graphviz Relationship Visualizer 
 
Page 152 
Working Interactively with Graphviz on your Workstation 
Graphviz provides an interactive editor named GVEdit for authoring DOT programs. You will see 2 buttons in 
the ribbon; “Copy to Clipboard”, and “GVEdit”. “Copy to Clipboard” does exactly what it says. Click on it to 
copy the DOT source code to the clipboard.  
If you installed Graphviz properly the ‘GVEdit’ button will be enabled. If the GVEdit program cannot be 
found on the PATH then the button will be grayed out. Next, press the “GVEdit” button. It will find the GVEdit 
program on your PATH and bring it up. It will look as follows upon startup: 
 
Select “File -> New” or click on the notepad icon  
 
to bring up a new text window.  

Excel to Graphviz Relationship Visualizer 
 
Page 153 
GVEdit will now look like this: 
 
Paste the DOT source code you copied to the clipboard into the text editor. GVEdit will now look like: 
 

Excel to Graphviz Relationship Visualizer 
 
Page 154 
Click on the button that looks like a person running to run the layout engine. 
 
The graph will be created, and displayed. GVEdit will now look like this: 
 
You can continue to make changes to the Graphviz DOT code, and run the layout engine.  
Refer back to the ‘HELP – attributes’ worksheet to learn more about the various graph, node, and edge 
attributes, and test them out in GVEdit. As you find combinations you like, and want use them in the 
Relationship Visualizer, move them into styles in the ‘styles’ worksheet, or “Extra Style” cells in the ‘data’ 
worksheet. 
 
 

Excel to Graphviz Relationship Visualizer 
 
Page 155 
Working Interactively with Graphviz over the Internet 
There are public web sites which will allow you to edit DOT code in a browser window which you may use to 
edit DOT code interactively. You can launch these sites through the ‘Web Resources’ button on the ‘Source’ 
ribbon. 
 
The sites appear as follows: 
 
http://stamm-wilbrandt.de/GraphvizFiddle/ 
 
http://graphs.grevian.org/graph 

Excel to Graphviz Relationship Visualizer 
 
Page 156 
 
http://dreampuf.github.io/GraphvizOnline/ 
These sites work best with small graphs, and cannot handle features like displaying images. There is no 
guarantee that these sites will continue to operate into the future. They do, however, make it easy to edit DOT 
graphs, quickly see the results, and learn the DOT programming language without having to install Graphviz. 

Excel to Graphviz Relationship Visualizer 
 
Page 157 
CHANGING MASTER SETTINGS 
The ‘settings’ worksheet is where you can customize settings overarching settings which control how the graph is 
created, specify directories containing images to use in the graph, control how long the graphing engine is 
allowed to run, specify Graphviz command line parameters, and modify the order in which the worksheet 
columns are laid out. The following sections provide a brief description of the settings: 
Graph Options 
 
These settings control the graph options used to produce the diagrams. 
Setting 
Description 
Image Path 
Specifies one or more directories when images to include in the 
graph are stored. The Relationship Visualizer looks for images in the 
same directory where the spreadsheet is stored first, followed by the 
directory specified here. The folder picker allows you to select one 
directory, however multiple directories can be specified if the 
directories are separated by a semi-colon “;”. 
If you use the ‘style designer’ worksheet to design an image node the 
directory containing the image will be automatically appended to 
the value here, unless the directory is already listed or is the 
directory where the Excel spreadsheet is stored. 
Additional Graph Options 
A means to insert additional Graphviz graph directives into the 
graph at the top-most level. To use this setting, you must understand 
how Graphviz works. This setting can be used to control aspects such 
as node spacing. For example: 
sep=”+30,30” 

Excel to Graphviz Relationship Visualizer 
 
Page 158 
Setting 
Description 
Cancel graphing if not complete in 
___ seconds 
The maximum number of seconds the graphing engine can run. If set 
to 0, no time limit exists. 
Command Line Options 
The ‘Command Line Options’ settings allow you to pass parameters to the Graphviz command line programs. 
 
Setting 
Description 
Additional CMD Parameters 
A means to pass additional command line parameters to the layout 
engine program. For example: 
-Efontsize=”8” –Efontname=”Arial” 
would override the default edge format. Setting the font size to 8 
points, and the font to Arial for all edges which do not have explicit 
style specifications. 

Excel to Graphviz Relationship Visualizer 
 
Page 159 
‘styles’ Worksheet 
The ‘‘styles’ Worksheet’ settings allow you to rearrange the column layout of the ‘styles’ worksheet, and 
specify the range of rows to be included in the style collection at run-time. 
 
Setting 
Description 
Comment Column 
The column used to place ‘#’ comment characters which indicate that 
the rows should be treated as a comment and not be included in the 
set of styles. 
Style Column 
The column where the name of the style is specified 
Format Column 
The column where the node, edge, or cluster format string is 
specified. 
Object-Type Column 
The column where the object-type is specified. The object-type is 
used to classify the style as a node, edge, subgraph-open, subgraph-
close, keyword, or native type. 
First Yes/No View Column 
The first column containing Yes/No switches which control which styles 
will comprise the view. 
Heading Row 
The row which contains the column headings. The heading value of 
the “Yes/No Switch Column” is included in the graph’s file name after 
the file name prefix. 
First Row 
First row of style definitions (i.e. where the definitions begin) 
Last Row 
Last row of style definitions. When set to 0 all rows after the First 
Row containing data are used. 

Excel to Graphviz Relationship Visualizer 
 
Page 160 
‘data’ Worksheet 
These settings allow you to rearrange the column layout of the ‘data’ worksheet, and restrict which rows get 
processed. 
 
Setting 
Description 
Comment/Error Flag Column 
The column used to place ‘#’ comment characters which indicate that 
the rows should be treated as a comment and not be included in the 
data to be graphed.  
This column also serves a second purpose when errors are found in 
the data. An exclamation point “!” character is placed in the column 
to signal an error, and direct you to look in the Messages column for 
the cause of the error. 
“Item” Column 
The column within the ‘data’ worksheet where the “Item” values are 
located. 
“Label” Column 
The column within the ‘data’ worksheet where the “Label” values are 
located. 
“Outside Label” Column 
The column within the ‘data’ worksheet where the “Outside Label” 
values are located. 

Excel to Graphviz Relationship Visualizer 
 
Page 161 
Setting 
Description 
“Tail Label” Column 
The column within the ‘data’ worksheet where the “Tail Label” values 
are located. 
“Head Label” Column 
The column within the ‘data’ worksheet where the “Head Label” 
values are located. 
“Is Related To Item” Column 
The within the ‘data’ worksheet column where the “Is Related to Item” 
values will be found 
“Style” Column 
The Column within the ‘data’ worksheet where the “Style” name 
values are located. 
“Extra Style” Column 
The column within the ‘data’ worksheet where the “Extra Style” style 
attributes are located. 
“Messages” Column 
The column located within the ‘data’ worksheet where error messages 
are to be written to. 
Heading Row 
The row containing the column headings 
First Row 
First row of data. 
Last Row 
Last row of data definitions. When set to 0 all rows after the First 
Row containing data are used. First Row and Last Row are useful 
during graph development for specifying a subset of data to process 
when the overall amount of data is large. 
 

Excel to Graphviz Relationship Visualizer 
 
Page 162 
‘source’ Worksheet 
These settings allow you to rearrange the column layout of the ‘source’ worksheet. 
 
Setting 
Description 
Line Number Column 
The column which contains the line number of the Graphviz DOT 
source code. 
Graphviz Source Column 
The column where the Graphviz DOT source code gets placed 
Heading Row 
The row containing the column headings 
First Row 
First row of data. 
Tab Indent Spaces 
The number of blanks to insert based upon the depth of subgraphs 
within the graph. 

Excel to Graphviz Relationship Visualizer 
 
Page 163 
‘sql’ Worksheet 
These settings allow you to rearrange the column layout of the ‘sql’ worksheet, and restrict which rows get 
processed. 
 
Setting 
Description 
Comment/Error Flag Column 
The column used to place ‘#’ comment characters which indicate that 
the rows should be treated as a comment and not be included in the 
set of SQL statements which get executed. 
SQL Statement Column 
The column containing the SQL SELECT statements to execute 
Excel File Column 
The column containing the paths to the Excel files containing the data 
which the SQL SELECT statements should be executed against. 
Status Column 
The column where the status (Success/Failure/Skipped) of the SQL 
SELECT statement, along with any error messages is written to. 
Heading Row 
The row containing the column headings 
First Row 
First row of SQL SELECT statements to execute. 
 
 

Excel to Graphviz Relationship Visualizer 
 
 
Page 164 
 
REFERENCES 
The following references were very helpful in the creation of the Relationship Visualizer for Excel. 
 
Visualization (computer graphics) 
https://en.wikipedia.org/wiki/Visualization_(computer_graphics) 
 
Graphviz Homepage 
http://www.graphviz.org/ 
 
Graphviz DOT Language 
https://graphviz.gitlab.io/_pages/doc/info/lang.html 
 
Graphviz for discrete math students 
http://graphs.grevian.org/ 
 
Using Graphviz, a Brief Tutorial 
http://www.orient-lodge.com/node/3408 
 
An Introduction to Graphviz 
http://www.linuxjournal.com/article/7275 
 
Happy Days 
https://en.wikipedia.org/wiki/Happy_Days 
 

Excel to Graphviz Relationship Visualizer 
 
Page 165 
GNU GENERAL PUBLIC LICENSE 
Version 2, June 1991 
Copyright (C) 1989, 1991 Free 
Software Foundation, Inc.   
51 Franklin Street, Fifth Floor, 
Boston, MA  02110-1301, USA 
 
Everyone is permitted to copy and 
distribute verbatim copies 
of this license document, but 
changing it is not allowed. 
Preamble 
The licenses for most software are designed 
to take away your freedom to share and 
change it. By contrast, the GNU General 
Public License is intended to guarantee your 
freedom to share and change free software--
to make sure the software is free for all its 
users. This General Public License applies to 
most of the Free Software Foundation's 
software and to any other program whose 
authors commit to using it. (Some other Free 
Software Foundation software is covered by 
the GNU Lesser General Public License 
instead.) You can apply it to your programs, 
too. 
When we speak of free software, we are 
referring to freedom, not price. Our General 
Public Licenses are designed to make sure 
that you have the freedom to distribute copies 
of free software (and charge for this service if 
you wish), that you receive source code or 
can get it if you want it, that you can change 
the software or use pieces of it in new free 
programs; and that you know you can do 
these things. 
To protect your rights, we need to make 
restrictions that forbid anyone to deny you 
these rights or to ask you to surrender the 
rights. These restrictions translate to certain 
responsibilities for you if you distribute copies 
of the software, or if you modify it. 
For example, if you distribute copies of such a 
program, whether gratis or for a fee, you must 
give the recipients all the rights that you have. 
You must make sure that they, too, receive or 
can get the source code. And you must show 
them these terms so they know their rights. 
We protect your rights with two steps: (1) 
copyright the software, and (2) offer you this 
license which gives you legal permission to 
copy, distribute and/or modify the software. 
Also, for each author's protection and ours, 
we want to make certain that everyone 
understands that there is no warranty for this 
free software. If the software is modified by 
someone else and passed on, we want its 
recipients to know that what they have is not 
the original, so that any problems introduced 
by others will not reflect on the original 
authors' reputations. 
Finally, any free program is threatened 
constantly by software patents. We wish to 
avoid the danger that redistributors of a free 
program will individually obtain patent 
licenses, in effect making the program 
proprietary. To prevent this, we have made it 
clear that any patent must be licensed for 
everyone's free use or not licensed at all. 
The precise terms and conditions for copying, 
distribution and modification follow. 
TERMS AND CONDITIONS FOR 
COPYING, DISTRIBUTION AND 
MODIFICATION 
0. This License applies to any program or 
other work which contains a notice placed by 
the copyright holder saying it may be 
distributed under the terms of this General 
Public License. The "Program", below, refers 
to any such program or work, and a "work 

Excel to Graphviz Relationship Visualizer 
 
Page 166 
based on the Program" means either the 
Program or any derivative work under 
copyright law: that is to say, a work containing 
the Program or a portion of it, either verbatim 
or with modifications and/or translated into 
another language. (Hereinafter, translation is 
included without limitation in the term 
"modification".) Each licensee is addressed 
as "you". 
Activities other than copying, distribution and 
modification are not covered by this License; 
they are outside its scope. The act of running 
the Program is not restricted, and the output 
from the Program is covered only if its 
contents constitute a work based on the 
Program (independent of having been made 
by running the Program). Whether that is true 
depends on what the Program does. 
1. You may copy and distribute verbatim 
copies of the Program's source code as you 
receive it, in any medium, provided that you 
conspicuously and appropriately publish on 
each copy an appropriate copyright notice 
and disclaimer of warranty; keep intact all the 
notices that refer to this License and to the 
absence of any warranty; and give any other 
recipients of the Program a copy of this 
License along with the Program. 
You may charge a fee for the physical act of 
transferring a copy, and you may at your 
option offer warranty protection in exchange 
for a fee. 
2. You may modify your copy or copies of the 
Program or any portion of it, thus forming a 
work based on the Program, and copy and 
distribute such modifications or work under 
the terms of Section 1 above, provided that 
you also meet all of these conditions: 
a) You must cause the modified files to 
carry prominent notices stating that you 
changed the files and the date of any 
change. 
b) You must cause any work that you 
distribute or publish, that in whole or in 
part contains or is derived from the 
Program or any part thereof, to be 
licensed as a whole at no charge to all 
third parties under the terms of this 
License. 
c) If the modified program normally reads 
commands interactively when run, you 
must cause it, when started running for 
such interactive use in the most ordinary 
way, to print or display an announcement 
including an appropriate copyright notice 
and a notice that there is no warranty (or 
else, saying that you provide a warranty) 
and that users may redistribute the 
program under these conditions, and 
telling the user how to view a copy of this 
License. (Exception: if the Program itself 
is interactive but does not normally print 
such an announcement, your work based 
on the Program is not required to print an 
announcement.) 
These requirements apply to the modified 
work as a whole. If identifiable sections of that 
work are not derived from the Program, and 
can be reasonably considered independent 
and separate works in themselves, then this 
License, and its terms, do not apply to those 
sections when you distribute them as 
separate works. But when you distribute the 
same sections as part of a whole which is a 
work based on the Program, the distribution 
of the whole must be on the terms of this 
License, whose permissions for other 
licensees extend to the entire whole, and thus 
to each and every part regardless of who 
wrote it. 
Thus, it is not the intent of this section to 
claim rights or contest your rights to work 

Excel to Graphviz Relationship Visualizer 
 
Page 167 
written entirely by you; rather, the intent is to 
exercise the right to control the distribution of 
derivative or collective works based on the 
Program. 
In addition, mere aggregation of another work 
not based on the Program with the Program 
(or with a work based on the Program) on a 
volume of a storage or distribution medium 
does not bring the other work under the 
scope of this License. 
3. You may copy and distribute the Program 
(or a work based on it, under Section 2) in 
object code or executable form under the 
terms of Sections 1 and 2 above provided 
that you also do one of the following: 
a) Accompany it with the complete 
corresponding machine-readable source 
code, which must be distributed under the 
terms of Sections 1 and 2 above on a 
medium customarily used for software 
interchange; or, 
b) Accompany it with a written offer, valid 
for at least three years, to give any third 
party, for a charge no more than your cost 
of physically performing source 
distribution, a complete machine-readable 
copy of the corresponding source code, to 
be distributed under the terms of Sections 
1 and 2 above on a medium customarily 
used for software interchange; or, 
c) Accompany it with the information you 
received as to the offer to distribute 
corresponding source code. (This 
alternative is allowed only for 
noncommercial distribution and only if you 
received the program in object code or 
executable form with such an offer, in 
accord with Subsection b above.) 
The source code for a work means the 
preferred form of the work for making 
modifications to it. For an executable work, 
complete source code means all the source 
code for all modules it contains, plus any 
associated interface definition files, plus the 
scripts used to control compilation and 
installation of the executable. However, as a 
special exception, the source code distributed 
need not include anything that is normally 
distributed (in either source or binary form) 
with the major components (compiler, kernel, 
and so on) of the operating system on which 
the executable runs, unless that component 
itself accompanies the executable. 
If distribution of executable or object code is 
made by offering access to copy from a 
designated place, then offering equivalent 
access to copy the source code from the 
same place counts as distribution of the 
source code, even though third parties are 
not compelled to copy the source along with 
the object code. 
4. You may not copy, modify, sublicense, or 
distribute the Program except as expressly 
provided under this License. Any attempt 
otherwise to copy, modify, sublicense or 
distribute the Program is void, and will 
automatically terminate your rights under this 
License. However, parties who have received 
copies, or rights, from you under this License 
will not have their licenses terminated so long 
as such parties remain in full compliance. 
5. You are not required to accept this 
License, since you have not signed it. 
However, nothing else grants you permission 
to modify or distribute the Program or its 
derivative works. These actions are prohibited 
by law if you do not accept this License. 
Therefore, by modifying or distributing the 
Program (or any work based on the 
Program), you indicate your acceptance of 
this License to do so, and all its terms and 
conditions for copying, distributing or 
modifying the Program or works based on it. 

Excel to Graphviz Relationship Visualizer 
 
Page 168 
6. Each time you redistribute the Program (or 
any work based on the Program), the 
recipient automatically receives a license 
from the original licensor to copy, distribute or 
modify the Program subject to these terms 
and conditions. You may not impose any 
further restrictions on the recipients' exercise 
of the rights granted herein. You are not 
responsible for enforcing compliance by third 
parties to this License. 
7. If, as a consequence of a court judgment or 
allegation of patent infringement or for any 
other reason (not limited to patent issues), 
conditions are imposed on you (whether by 
court order, agreement or otherwise) that 
contradict the conditions of this License, they 
do not excuse you from the conditions of this 
License. If you cannot distribute so as to 
satisfy simultaneously your obligations under 
this License and any other pertinent 
obligations, then as a consequence you may 
not distribute the Program at all. For example, 
if a patent license would not permit royalty-
free redistribution of the Program by all those 
who receive copies directly or indirectly 
through you, then the only way you could 
satisfy both it and this License would be to 
refrain entirely from distribution of the 
Program. 
If any portion of this section is held invalid or 
unenforceable under any particular 
circumstance, the balance of the section is 
intended to apply and the section as a whole 
is intended to apply in other circumstances. 
It is not the purpose of this section to induce 
you to infringe any patents or other property 
right claims or to contest validity of any such 
claims; this section has the sole purpose of 
protecting the integrity of the free software 
distribution system, which is implemented by 
public license practices. Many people have 
made generous contributions to the wide 
range of software distributed through that 
system in reliance on consistent application of 
that system; it is up to the author/donor to 
decide if he or she is willing to distribute 
software through any other system and a 
licensee cannot impose that choice. 
This section is intended to make thoroughly 
clear what is believed to be a consequence of 
the rest of this License. 
8. If the distribution and/or use of the Program 
is restricted in certain countries either by 
patents or by copyrighted interfaces, the 
original copyright holder who places the 
Program under this License may add an 
explicit geographical distribution limitation 
excluding those countries, so that distribution 
is permitted only in or among countries not 
thus excluded. In such case, this License 
incorporates the limitation as if written in the 
body of this License. 
9. The Free Software Foundation may publish 
revised and/or new versions of the General 
Public License from time to time. Such new 
versions will be similar in spirit to the present 
version, but may differ in detail to address 
new problems or concerns. 
Each version is given a distinguishing version 
number. If the Program specifies a version 
number of this License which applies to it and 
"any later version", you have the option of 
following the terms and conditions either of 
that version or of any later version published 
by the Free Software Foundation. If the 
Program does not specify a version number 
of this License, you may choose any version 
ever published by the Free Software 
Foundation. 
10. If you wish to incorporate parts of the 
Program into other free programs whose 
distribution conditions are different, write to 
the author to ask for permission. For software 
which is copyrighted by the Free Software 

Excel to Graphviz Relationship Visualizer 
 
Page 169 
Foundation, write to the Free Software 
Foundation; we sometimes make exceptions 
for this. Our decision will be guided by the two 
goals of preserving the free status of all 
derivatives of our free software and of 
promoting the sharing and reuse of software 
generally. 
NO WARRANTY 
11. BECAUSE THE PROGRAM IS 
LICENSED FREE OF CHARGE, THERE IS 
NO WARRANTY FOR THE PROGRAM, TO 
THE EXTENT PERMITTED BY APPLICABLE 
LAW. EXCEPT WHEN OTHERWISE 
STATED IN WRITING THE COPYRIGHT 
HOLDERS AND/OR OTHER PARTIES 
PROVIDE THE PROGRAM "AS IS" 
WITHOUT WARRANTY OF ANY KIND, 
EITHER EXPRESSED OR IMPLIED, 
INCLUDING, BUT NOT LIMITED TO, THE 
IMPLIED WARRANTIES OF 
MERCHANTABILITY AND FITNESS FOR A 
PARTICULAR PURPOSE. THE ENTIRE 
RISK AS TO THE QUALITY AND 
PERFORMANCE OF THE PROGRAM IS 
WITH YOU. SHOULD THE PROGRAM 
PROVE DEFECTIVE, YOU ASSUME THE 
COST OF ALL NECESSARY SERVICING, 
REPAIR OR CORRECTION. 
12. IN NO EVENT UNLESS REQUIRED BY 
APPLICABLE LAW OR AGREED TO IN 
WRITING WILL ANY COPYRIGHT HOLDER, 
OR ANY OTHER PARTY WHO MAY 
MODIFY AND/OR REDISTRIBUTE THE 
PROGRAM AS PERMITTED ABOVE, BE 
LIABLE TO YOU FOR DAMAGES, 
INCLUDING ANY GENERAL, SPECIAL, 
INCIDENTAL OR CONSEQUENTIAL 
DAMAGES ARISING OUT OF THE USE OR 
INABILITY TO USE THE PROGRAM 
(INCLUDING BUT NOT LIMITED TO LOSS 
OF DATA OR DATA BEING RENDERED 
INACCURATE OR LOSSES SUSTAINED BY 
YOU OR THIRD PARTIES OR A FAILURE 
OF THE PROGRAM TO OPERATE WITH 
ANY OTHER PROGRAMS), EVEN IF SUCH 
HOLDER OR OTHER PARTY HAS BEEN 
ADVISED OF THE POSSIBILITY OF SUCH 
DAMAGES. 
END OF TERMS AND CONDITIONS 
How to Apply These Terms to Your 
New Programs 
If you develop a new program, and you want 
it to be of the greatest possible use to the 
public, the best way to achieve this is to make 
it free software which everyone can 
redistribute and change under these terms. 
To do so, attach the following notices to the 
program. It is safest to attach them to the 
start of each source file to most effectively 
convey the exclusion of warranty; and each 
file should have at least the "copyright" line 
and a pointer to where the full notice is found. 
one line to give the program's 
name and an idea of what it does. 
Copyright (C) yyyy  name of 
author 
 
This program is free software; 
you can redistribute it and/or 
modify it under the terms of the 
GNU General Public License as 
published by the Free Software 
Foundation; either version 2 of 
the License, or (at your option) 
any later version. 
 
This program is distributed in 
the hope that it will be useful, 
but WITHOUT ANY WARRANTY; without 
even the implied warranty of 
MERCHANTABILITY or FITNESS FOR A 
PARTICULAR PURPOSE.  See the GNU 
General Public License for more 
details. 

Excel to Graphviz Relationship Visualizer 
 
Page 170 
 
You should have received a copy 
of the GNU General Public License 
along with this program; if not, 
write to the Free Software 
Foundation, Inc., 51 Franklin 
Street, Fifth Floor, Boston, MA  
02110-1301, USA. 
Also add information on how to contact you 
by electronic and paper mail. 
If the program is interactive, make it output a 
short notice like this when it starts in an 
interactive mode: 
Gnomovision version 69, Copyright 
(C) year name of author 
Gnomovision comes with ABSOLUTELY 
NO WARRANTY; for details 
type `show w'.  This is free 
software, and you are welcome 
to redistribute it under certain 
conditions; type `show c'  
for details. 
The hypothetical commands `show w' and 
`show c' should show the appropriate parts of 
the General Public License. Of course, the 
commands you use may be called something 
other than `show w' and `show c'; they could 
even be mouse-clicks or menu items--
whatever suits your program. 
You should also get your employer (if you 
work as a programmer) or your school, if any, 
to sign a "copyright disclaimer" for the 
program, if necessary. Here is a sample; alter 
the names: 
Yoyodyne, Inc., hereby disclaims 
all copyright interest in the 
program `Gnomovision' (which 
makes passes at compilers) 
written by James Hacker. 
 
signature of Ty Coon, 1 April 
1989 
Ty Coon, President of Vice 
This General Public License does not permit 
incorporating your program into proprietary 
programs. If your program is a subroutine 
library, you may consider it more useful to 
permit linking proprietary applications with the 
library. If this is what you want to do, use the 
GNU Lesser General Public License instead 
of this License. 
 

