CS2043 - Unix Tools & Scripting
Lecture 8
Vim and Tmux
Spring 2015 1
Instructor: Nicolas Savva
February 6, 2015
1based on slides by Hussam Abu-Libdeh, Bruno Abrahao and David Slater over the years
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

Announcements
Remaining CSUGLab accounts activated
A2 is due Saturday 02/07
A3 coming out within the next 24hrs
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

Today
Text editor: vim
Multiplexing terminals: screen / tmux
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

Vim = Awesome!
Vim is a powerful lightweight text editor.
The name “Vim” is an acronym for “Vi IMproved”
vi is an older text editor
Ports of Vim are available for all systems
including Microsoft Windows
Vim allows you to perform text editing tasks much faster than
most other text editors!
Though it does have a learning curve
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

A modal text editor
One of the reasons that Vim allows you to performs tasks
quickly is because it works in modes.
Without modes, users would have to either use command
menus (with a mouse or keyboard), or use complex/long
command shortcut keys involving the control key (ctrl) or
the alt key (alt).
Vim uses modes to speed up editing by not relying on
command keys or menus.
You can do all of your editing by just using the keyboard which is
super fast!!
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

The 3 main modes of Vim
Normal mode:
Launching pad to issue commands or go into other modes
Allows you to view the text but not edit it
Vim starts in normal mode
You can jump to normal mode by pressing the Escape (Esc)
key on your keyboard
Visual mode:
Used to highlight text and perform operations on selected text
You get to visual mode from normal mode by pressing the v
key on your keyboard
Insert mode:
Used to type text into the buﬀer (ﬁle)
This probably what you’re used to from your text editor
You get to the insert mode by pressing the i key on your
keyboard
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

Command line commands
You can issue “command-line commands” from inside Vim to
perform some functionalities
write to disk, quite, get help, split screen, ...etc
To issue a command, go to normal mode and the type :
followed by your command
Launching Vim help
:help
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

Moving around
Fast
You can use your mouse to move around in Vim (assuming a
graphical interface as in gVim
Faster
However it is much faster to just use your keyboard, and for that
you can just use the arrow keys to move up/down/left/right.
Fastest
You can even be more eﬃcient by not leaving the main area of the
keyboard and using “h” to go left, “j” to go down, “k” to go up,
and “l” to go right.
To start oﬀ, I recommend you just use the arrow keys.
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

Getting started
To get started, launch Vim and go through the built in help.
:help
You can search for help on a speciﬁc topic as well.
:help [topic to search for]
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

Helpful commands
I can’t possibly teach you about all the power of Vim in a few
minutes, however here are a few commands to help you get started.
Getting help
:help
Entering normal mode
<Esc>
Entering insert mode (from normal)
<i>
Entering visual mode (From normal)
<v>
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

Helpful commands
Save text to ﬁlename.txt
:w filename.txt
Exit
:q
Quit without saving
:q!
Open another ﬁle
:e [filename]
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

Helpful commands
Turn on syntax highlighting
:syntax on
Turn on line numbering
:set number
Turn on spell check
:set spell
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

Helpful commands
Split screen horizontally
:sp
Split screen vertically
:vsp
Move between split regions
<ctrl-w w>
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

The most helpful command
The Most Helpful Command By Far
:help
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

GUI + Vim
Vim can run right in your shell, but there are also implementations
of it that run in a nice GUI window (with menus, toolbars, and
mouse)
Use gVim for that
MacVim for Mac OS X
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

Useful links
Vim project website
http://www.vim.org/
Vim tips and tricks
http://www.cs.swarthmore.edu/help/vim/home.html
Vim recipes
http://vim.runpaint.org/toc/
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

Bash isn’t Perfect
There are a few problems with your basic BASH session. Some of
these you may even have encountered already:
Your session isn’t preserved if you close your ssh connection
It’s a pain to switch back and forth between ﬁles/the prompt.
Sometimes using two or three shells at once would be really
convenient!
All of these complaints can be resolved by using screen.
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

Intro To Screen
The screen command
screen - a screen manager with terminal emulation
Generally screen can be used just as you would normally use a
terminal window. However, special commands can be used to allow
you to save your session, create extra shells, or split the window
into multiple independent panes.
Passing Commands to screen
Each screen commands consists of a CTRL-a (hereafter referred
to as C-a) followed by another character.
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

Using Screen
Attach a screen
screen [options]
Opens a new screen for use
-a : include all capabilities
Resume a screen
screen -r [pid.tty.host]
Resumes a detached screen session
screen -x [pid.tty.host]
Attach to a non-detached screen session
If you only have one screen, the [pid.tty.host] string is unnecessary.
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

Identifying Screen Sessions
Screen Listing
screen -ls
or screen -list
Lists your screen sessions and their statuses
These screen sessions are the [pid.tty.host] strings required for
resuming
Resuming a screen
If screen -ls returns 15829.pts-9.rumman (Detached)
screen -r 15829.pts-9.rumman to resume the screen
Note: You only need to specify the full “name” of the session if
you have multiple sessions open. If you just have one session, just
use screen -r
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

Creating More Shells
Creates a New Shell Window
C-a c
Creates a new shell in a new window and switches to it
Useful for opening multiple shells in a single terminal
Similar to tabbed browsing/tabbed IMs
But how do we switch between windows? (hint: every window is
numbered by order of creation)
Window Selection
C-a 1
- switches to window 1 C-a 9
- switches to window 9
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

Splitting Screen
Split Screen Computing
C-a S
- splits your terminal area into multiple panes
C-a tab
- changes the input focus to the next pane
The ’S’ is case-sensitive
Each split results in a blank pane
Use C-a c to create a new shell in a pane
Use C-a <num> to move an existing window to a pane
Note:
When you reattach a split screen, the split view ill be gone. Just
re-split the view, then switch between panes and reopen the other
windows in each with C-a <num>
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

Now lets put this together to do something useful
Suppose you are doing some serious scientiﬁc computing and want
to run it on a remote server. We can put together what we have
learned to do this eﬃciently:
ssh into the remote machine
ssh slater@boom.cam.cornell.edu
start screen
screen
start mathematica
math < BatchJob.m
renice the math kernel so other uses can use the machine
renice -20 PID
Detach the screen, logout, and come back 8 hours later when
it is done
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

Terminal Multiplexer tmux
Concurrently view/manage multiple programs in one terminal
Read documentation (key-binding / conﬁguration)
Edit .tmux.conf
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

tmux - what it looks like
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

tmux - cheatsheet
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

tmux - check the website
http://tmux.sourceforge.net/
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

Next Time
Instructor: Nicolas Savva
CS2043 - Unix Tools & Scripting Lecture 8 Vim and Tmux

