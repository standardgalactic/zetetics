Topological Quantum Computation Through
the Lens of Categorical Quantum Mechanics
Fatimah Rita Ahmadi and Aleks Kissinger
Department of Computer Science
University of Oxford
November 15, 2022
Abstract
Unitary fusion categories formalise the algebraic theory of topological
quantum computation. We rectify confusion around a category describing
an anyonic theory and a category describing topological quantum compu-
tation. We show that the latter is a subcategory of Hilb. We represent
elements of the Fibonacci and Ising models, namely the encoding of qubits
and the associated braid group representations, with the ZX-calculus and
show that in both cases, the Yang-Baxter equation is directly connected
to an instance of the P-rule of the ZX-calculus. In the Ising case, this re-
duces to a familiar rule relating two distinct Euler decompositions of the
Hadamard gate as π/2 phase rotations, whereas in the Fibonacci case we
give a previously unconsidered exact solution of the P-rule involving the
Golden ratio. We demonstrate the utility of these representations by giv-
ing graphical derivations of the single qubit braid equations for Fibonacci
anyons and the single- and two-qubit braid equations for Ising anyons.
1
Introduction
One of the biggest obstacles in the construction of a quantum computer
is the prevalence of errors due to the delicate and highly-sensitive nature
of the physical systems typically used to encode quantum data. There are
essentially two ways ways to cope with errors in quantum computation.
The ﬁrst is to develop hardware that produces as few errors as possible,
and deal with the remaining errors via quantum error correction, i.e. by
introducing some extra quantum memory and computational overhead to
correct errors during the computation. The second, and in some ways
related, approach is to develop models of computation that are inherently
robust to local errors. Topological quantum computing [21] aims to be
such a model.
The main idea behind topological quantum computation is to exploit
features of the excitations of 2-dimensional topologically ordered systems
called anyons. Qubits are encoded in the mutual states of anyons, and
computation is done by exchanging, or braiding them over time [20]. Since
representations of braid groups represent anyonic statistics, and topologi-
cal charges of mutual states of anyons are robust under local perturbation,
making the computation is intrinsically resistant to errors.
1
arXiv:2211.03855v2  [quant-ph]  13 Nov 2022

Anyons break the standard physicists’ intuition about bosonic and
fermionic statistics. Exchanging a pair of identical bosons leaves the quan-
tum state invariant, whereas exchanging a pair of fermions introduces a
global phase of −1. However, exchanging abelian anyons multiplies the
state with non-trivial phase factor eiθ, and exchanging non-abelian anyons
applies a more generic unitary operation. In other words, we transition
from the symmetric group to the braid group, which carries some features
of anyons.
Another way to recognise abelian and non-abelian anyons is through
their fusion outcomes. If in an anyonic model, there exists an anyon, A,
whose fusion with another anyon B or itself has more than one outcome
or anyon, then anyon, A, is non-abelian. We also call such an anyonic
model, a non-abelian mode.
Computation with anyons and other particles, for example photons,
are diﬀerence.In computing with other particles, we encode qubits in states
of particles. For example, in spin of electron or photo polarisation. In
topological quantum computation, qubits are encoded in mutual statistics
of anyons. Hence, in this sense, one does not need to know the Hilbert
space of an anyon. So qubits are processes from an initial conﬁguration
of anyons to a ﬁnal conﬁguration. (We urge the reader to keep this punch
line in mind.)
To formalise an algebraic model of anyons and processes between them,
we need to do a drastic language shift from set theory to category theory.
The language shift happens naturally since categories generally are ag-
nostic to object properties [17]. Hence, all processes between anyons are
captured by morphisms in the category. Unitary fusion categories oﬀer a
suitable algebraic theory for anyonic models.
Another project started by Abramsky and Coecke tries to formalise
quantum mechanics with category theory [2]. Categorical quantum me-
chanics attempts to shift the idea from states to processes. It proposes
that quantum properties can be captured by examining the structural and
algebraic properties of the category of Hilbert spaces Hilb. A notable fea-
ture of the CQM programme is the focus on graphical calculi which make
use of the string diagram notation native to monoidal categories to cap-
ture and reason about processes. Perhaps the most notable one is the
ZX-calculus [8] which has been used extensively in the study of quantum
computation. We will discuss this further in the following sections.
A natural question to ask is the connection between these two pic-
tures. How is TQC related to CQM? To answer this question, we clarify
an existing confusion in the literature. Essentially, we demonstrates that
an anyonic category diﬀers from a topological quantum computation cate-
gory; while the former seems somewhat irrelevant to Hilb, the second is a
subcategory of Hilb. In other words, we show that any anyonic category
is enriched over a subcategory of Hilb. So this uniﬁes these two pictures
with CQM.
Having this sketch in mind, we represent elements of two well-deﬁned
models of topological quantum computation, namely Fibonacci and Ising,
with the ZX-calculus. We show the ZX-equivalent of Fibonacci and Ising
single qubit gates. We also derive a new P-rule for Fibonacci anyons that
precisely reduces and simpliﬁes a chain of Fibonacci angles.
2

((X ⊗Y ) ⊗Z) ⊗W
aX,Y,Z⊗idW
t
aX⊗Y,Z,W
*
(X ⊗(Y ⊗Z)) ⊗W
aX,Y ⊗Z,W

(X ⊗Y ) ⊗(Z ⊗W)
aX,Y,Z⊗W

X ⊗((Y ⊗Z) ⊗W)
idX⊗aY,Z,W
/ X ⊗(Y ⊗(Z ⊗W))
Figure 1: Pentagonal equation [15]
(X ⊗I) ⊗Y
aX,I,Y
/
rX⊗idY
&
X ⊗(I ⊗Y )
idX⊗lY
x
X ⊗Y
Figure 2: Triangle equation [15].
2
Topological Quantum Computation
We assume the reader has an elementary knowledge of category theory at
the level of Leinster’s Basic Category Theory [16].
We ﬁrst provide some necessary background on monoidal, semi-additive,
semi-simple, braided, ribbon, and unitary categories. We, then, outline a
description of TQC given these structures.
Deﬁnition 1. A monoidal category (C, ⊗, a, l, r, I) is a category with
the unit object, I, the functor ⊗: C × C −→C and a natural transfor-
mations a : (−⊗−) ⊗−−→−⊗(−⊗−) as associator and left- and
right-unitors l : I ⊗−−→−and r : −⊗I −→−such that they satisfy
pentagonal and triangle equations, Figure 1. If a, r, and l are identity
morphisms, the category is strict.
A well-developed example of a monoidal category is the category of
vector spaces with either direct sum or tensor product. But as we see
later, while a direct sum is a property of this category, a tensor product
is a structure, i.e. the nature of direct sum is a property of category and
stems from limits, but a tensor product is a functor on the category.
Another example is a group as a category, taking elements of a group
as objects and multiplication as a tensor product.
Deﬁnition 2. Let C be a monoidal category and V be an object in C. A
right dual to V is an object V ∗with two morphisms
eV : V ∗⊗V −→I
(1)
iV : I −→V ⊗V ∗
(2)
such that (idV ⊗eV )◦(iV ⊗idV ) = idV and (eV ⊗idV ∗)◦(idV ∗⊗iV ) = idV ∗.
A left dual correspondingly can be deﬁned by interchanging the roles
of V and V ∗in the deﬁnition above.
3

X ⊗(Y ⊗Z)
RX,Y ⊗Z/ (Y ⊗Z) ⊗X
aY,Z,X
(
(X ⊗Y ) ⊗Z
aX,Y,Z
6
RX,Y ⊗idz
(
Y ⊗(Z ⊗X)
(Y ⊗X) ⊗Z
aY,X,Z/ Y ⊗(X ⊗Z)
idy⊗RX,Z
6
Figure 3: Hexagonal equation
Deﬁnition 3. A monoidal category is rigid if every object has equivalent
right and left duals.
Note that ∗is just an equivalence from C to Copp. One can, further-
more, prove dual objects are unique up to a unique isomorphism.
We
deﬁned a more restrictive version of rigidity; in general, left and right
duals can be diﬀerent.
The desired category should have another structure that stems from
exchange statistics between anyons; as mentioned earlier, the anyonic ex-
change behaviour is captured by braid group rather than permutation
group. A braid can be deﬁned as a natural transformation between two
functors; tensor and opposite-tensor.
An opposite-tensor functor, is a functor which ﬁrst swap an ordered
pair of objects or morphisms then tensor them.
⊗opp : C × C −→C
(3)
⊗opp (A, B) = ⊗(B, A) = B ⊗A,
⊗opp(f, g) = ⊗(g, f) = g ⊗f
(4)
Deﬁnition 4. A monoidal category (C, ⊗, a, l, r, I) is braided, if there ex-
ists a natural transformation R : ⊗−→⊗opp which satisﬁes the hexagonal
equation 3.
Take the example of a group G as a category, the category is braided
only if group G is abelian. Note that for a braided tensor category, we
have
lX ◦RX,I = rX,
rX ◦RI,X = lX,
RI,X = R−1
X,I
(5)
If the category is strict, RI,X = R−1
X,I = idX.
Note also the equality
R ⊗R = id does not hold in general case.
It only holds if the cate-
gory is symmetric and swapping of particles is captured by permutation
group rather than braid group. An example of symmetric categories is
the category of vector spaces, Vec.
Earlier, it was mentioned braided categories are directly connected to
braid groups. Having hexagonal identities, one can prove the Yang-Baxter
equation obtainable as a corollary of Artin relations of braid group [14].
R12R13R23 = R23R13R12
(6)
Where, Rij, means keeping the third strand and braiding strands numbers
i and j. We will explicitly show this equation with the ZX-representation
of the Ising and Fibonacci model.
4

The next structure we need to deﬁne is a kind of trace, but before that
we need to deﬁne an isomorphism between an object X and its double
star (V ∗)∗.
Deﬁnition 5. In a rigid monoidal category if there exists isomorphisms
φX : X −→X∗∗such that they satisfy the following conditions, then the
monoidal category is pivotal.
φX⊗Y = φX ⊗φY
(7)
f ∗∗= f
(8)
Having these isomorphisms, we are able to deﬁne left and right traces
which are not equivalent in general. We are, however, interested in cate-
gories with equivalent left and right traces.
Deﬁnition 6. In a pivotal category, given f : X −→X, one can deﬁne
left and right traces as appears below,
trr(f) = eX∗◦(φX ⊗idX∗) ◦(f ⊗idX∗) ◦iX
(9)
trl(f) = eX ◦(eX∗⊗f) ◦(idX∗⊗φ−1
X ) ◦iX∗
(10)
Deﬁnition 7. In a pivotal category if for every morphisms f, the left and
right traces are equivalent, the category is called spherical.
So far pivotal and spherical structures are only deﬁned in rigid monoidal
categories, but one can further examine the interaction between φ and
braids in a braided rigid monoidal category. This results in the deﬁnition
of twist, with a rather interesting physical interpretation.
Deﬁnition 8. A braiding is compatible with a pivotal structure if isomor-
phisms θX = ψXφX where ψX = (idX ⊗eX∗)◦(RX∗∗,X ⊗idX∗)◦(idX∗∗⊗
iX) satisﬁes θX∗= θ∗
X. A ribbon category is a spherical braided category
with compatible braiding.
Next we need to deﬁne a notion of addition between objects. This
category can, furthermore, demand an addition between morphisms.
Deﬁnition 9. A semi-additive category is a category whose objects
have direct sums, X ⊕Y .
(A direct sum is an equivalent product and
coproduct of two objects.)
Deﬁnition 10. An additive category is a semi-additive category en-
riched over the category of vector spaces. (Meaning, all hom −sets are
vector spaces over a ﬁeld.)
Deﬁnition 11. An abelian category is an additive category if every
morphism has a kernel and a cokernel, and every monomorphism is a
kernel and every epimorphism is a cokernel.
One can also deﬁne an abelian category as a category enriched over
Ab, category of abelian groups. But it is not necessary a priori [5]. In the
next part, we deﬁne semi-simple categories. The semi-simplicity ensures
objects in the desirable category are restricted to only anyon types.
Deﬁnition 12. A sub-object of an object X is an isomorphism class of
monomorphisms.
i : Y ,→X
Deﬁnition 13. A simple object is an object whose sub-objects are only
zero object and itself.
Let us denote simple objects with some indices, Xi.
5

Deﬁnition 14. An abelian category is semi-simple if any object X is
isomorphic to a direct sum of simple objects.
X ∼=
M
i∈I
NiXi
The semi-simplicity condition guarantees a notion for anyon types.
Semi-simplicity as a condition for such a category was ﬁrst proposed by
Wang in [25]. From deﬁnition of simple objects, we conclude the only
morphism between two simple objects is the zero morphism, so-called
Schur’s Lemma. The non-zero integer coeﬃcients behind Xi count the
number of inequivalent projections and injections in hom-sets such as
hom(X, Xi).
hom(X, Y ) ∼= 0
(11)
The deﬁnitions laid out in previous parts provide ample structures for
fusion categories. As the name suggests, they are categories with enough
structure to capture fusion rules.
Deﬁnition 15. A category C is a fusion category if,
• C is a semi-simple category over complex numbers, C,
• the cardinality of the set of objects and hom-sets is ﬁnite,
• C is monoidal,
• C is rigid,
• for every simple object X, hom(X, X) ∼= C,
• the unit object I is simple, we assign index 0 to the unit object,
X0 = I.
Being semi-simple over complex numbers, C, implies the category is ad-
ditive and has simple objects. Considering this condition with monoidality
indicates any non-simple object including the tensor product of two sim-
ple ones can be re-written as a direct sum of simple objects. We refer to
each summand, Xk, of the direct sum as an outcome of fusion.
Xi ⊗Xj ∼=
M
k
N k
ijXk
(12)
The above equations specify an important property of any anyonic theory,
fusion rules, and N k
ij are called fusion coeﬃcients. So one can write,
N k
ij = dim(hom(Xi ⊗Xj, Xk))
(13)
We also call these hom-sets as fusion space and denote them by V k
ij.
In the similar fashion, we call V ij
k
decomposition space.
If one in-
spects hom-sets of fusion categories, one realises they are either fusion or
decomposition spaces or
hom(Xi, Xj) ∼= δijC
Associators and unitors correspondingly can be indexed in a fusion cate-
gory. So associators between tensor product of three consecutive objects
will be indexed by four labels, F l
ijk. Why four? because as we mentioned
earlier, the zero morphism is the only morphism between diﬀerent simple
objects, so the only non-zero morphisms are fusion matrices indexed as
F l
ijk between the same outcome Xl.
(Xi ⊗Xj) ⊗Xk
F l
ijk
∼= Xi ⊗(Xj ⊗Xk)
(14)
6

and unitors are indexed in the same manner,
Xi ⊗X0
ri∼= Xi,
X0 ⊗Xi
li∼= Xi
(15)
Similar to monoidal categories, we continue and add necessary structures
the desirable category demands such as; braiding, ribbon, unitarity.
Deﬁnition 16. A braided fusion category is a fusion category equipped
with braiding functor,
Xi ⊗Xj
Rij
∼= Xj ⊗Xi
(16)
Deﬁnition 17. A spherical braided fusion category with compatible braid-
ing is ribbon fusion category (RFC).
One of the computationally insightful properties of objects in a RFC is
their dimension. For every object Xi, we deﬁne di = tr(idi). This essen-
tially shows how computational space grows [19]. An important question
to answer is the sign of di. We show under unitarity condition for a RFC,
di ≥0. Hermitian and unitarity deﬁnition agree with deﬁnitions appeared
in [23].
Deﬁnition 18. A RFC is hermitian if for every morphism f ∈hom(X, Y )
the dagger of every morphism f † ∈hom(Y, X) satisﬁes below conditions,
(f †)† = f,
(f ⊗g)† = f † ⊗g†,(f ◦g)† = g† ◦f †,
(idi)† = idi
(17)
and braid and twist satisﬁes,
(Rij)† = R−1
ij ,
(θi)† = θ−1
i
(18)
Additionally, dual morphisms are compatible with †,
(ij)† = ej ◦Rjj∗◦(θi ⊗idj∗),
(ej)† = (idj∗⊗θ−1
j ) ◦R−1
j∗j ◦ij
(19)
Dagger in a RFC assigns to each morphism in fusion space, a morphism
in decomposition space, meaning, † : V k
ij −→V ij
k . Or you can also think
of it as, the dagger of a projection operator is an injection operator. We
are now in a proper position to deﬁne inner product on a hermitian RFC.
Deﬁnition 19. In a hermitian RFC, an inner product for a pair of mor-
phisms (f, g), the inner product is deﬁned as,
⟨, ⟩: hom(Y, X) × hom(X, Y ) −→C,
⟨f, g⟩=
1
p
dim(X)dim(Y )
tr(f †g)
(20)
we can check all properties of inner product. In general, tr(f †f) takes
positive and negative values but if it is always positive deﬁnite then the
category is unitary.
One can observe in a Unitary Ribbon Fusion category, URFC, the
dimension of each object di is positive. Without unitarity condition, we
could not conclude the following,
tr(idi∗, idi) ≥0
(21)
A URFC describes an anyonic theory. Simple objects of the category are
anyon types and Schur’s lemma guarantees selection and super selection
rules. Fusion rules are deﬁning rules of the theory, fusion matrices F are
7

solutions of pentagonal equations, and braiding matrices R result from
solving hexagonal equations.
An important and undiscussed point is the necessity of modularity
condition as physical requirement for anyonic models. Modular categories
ensure the theory has a corresponding topological background ﬁeld. We
did not discuss modularity condition because we are solely interested in
TQC. We refer you to [5] and [23] for further information.
Therefore, URFC completely captures the expected properties and
structures of an anyonic theory. However, as we mentioned, the category
describing an anyonic theory is often convoluted with TQC category. In
other words, it is often assumed the category of computation is similar
to the category of anyons. Here, we argue that a better perspective to
make sense of computation coherent with categorical quantum mechanics
is thinking of TQC as a subcategory of the category of Hilbert spaces
Hilb. In this framework, the matrix representation of F and R matrices
has a rather meaningful reasoning.
3
Categorical Quantum Mechanics
The idea of categorical quantum mechanics was proposed by Abramsky
and Coecke [2]. It was further developed in [9]. Categorical quantum me-
chanics essentially attempts to shift the perspective from quantum states
to processes. In other words, everything is treated as a process (includ-
ing states, which are just “preparation” processes) and quantum features
start to appear as one considers compositions of processes. For further
discussions of this approach and the relationship between this picture to
the usual formulation of quantum theory, see e.g. [7].
In addition to foundational purposes, CQM makes extensive use of
the graphical, string diagram notation for representing morphisms in a
monoidal category, upon which various graphical calculi have been based.
These are essentially sets of generators and relations that can (i) represent
generic linear maps (like those e.g. coming from quantum circuts) and
(ii) simplify and/or reason about representations of those maps (e.g. for
proving quantum circuit equalities).
The most well-known of these is the ZX-calculus, a convenient lan-
guage for quantum computations over qubits. We outline a short summary
of CQM and the ZX-calculus here and in the next section, we explain how
TQC ﬁts within this picture.
As we mentioned earlier, CQM aims to formulate quantum structures
in terms of categorical ones, namely those of a dagger symmetric monoidal
category. Well-developed examples of such a category are the category
of relations, Rel, and the category of ﬁnite dimensional Hilbert spaces,
FdHilb. FdHilb practically captures all properties of quantum systems;
so we only discuss this category and to shorten the acronym to Hilb.
The category of ﬁnite dimensional Hilbert spaces, Hilb, is a symmet-
ric monoidal category, and as such it comes with a convenient graphical
language called string diagram notation for representing morphisms. This
notation has its roots in Feyman diagrams and Penrose’s graphical nota-
tion for tensor contraction [18], and was formalised in the 1990s by Joyal
and Street for generic monoidal categories [13]. A notable feature of this
notation is that diagrams that can be deformed into each other (i.e. that
are topologically isotopic) describe the same morphism.
This topological representation of morphisms in monoidal categories
8

thus gives us a handle on the structure of braids and knots using categor-
ical tools [23].
The general string diagrammatic language is applicable to any quan-
tum system irrespective of their dimensions or speciﬁc properties.
For
example, be a system in a mixed state or pure state, 2-dimensional or
higher-dimensional, diagrammatic reasoning can be meaningfully applied
to gain an intuition and sometimes even to predict the outcome.
The vast majority of the literature on quantum computation con-
cerns operations on 2-dimensional systems, i.e. qubits, or tensor products
thereof. A prevalent graphical language for quantum computation is quan-
tum circuit notation. The ZX-calculus can be seen as a strict superset of
circuit notation, in the sense that quantum circuits can be readily inter-
preted as ZX-diagrams, but there furthermore exist many ZX-diagrams
that do not correspond to circuits.
ZX-diagrams consist of two kinds of nodes called Z spiders and X
spiders, which can be labelled by an angle and connected by wires. Spiders
have attached wires from left and right; wires entering from left are inputs
and those existing from right are outputs. Composition of spiders is done
through gluing outputs of a diagram to inputs of another; and tensoring
diagrams means stacking them vertically. Generally, there is no condition
on the number of inputs and outputs.
A spider with only one output
represents a state and with only one input eﬀect or measurement or dual
of state. We depict Z spiders as green nodes and X spiders as red nodes.1
α
...
...
:= |0...0⟩⟨0...0| + eiα|1...1⟩⟨1...1|
α
...
...
:= | + ...+⟩⟨+... + | + eiα| −...−⟩⟨−... −|
(22)
The ZX-calculus comes with a set of rules shown in Figure 4. These
rules can be applied while transforming diagrams back and forth to each
other.
Before delving into the relationship between topological quantum com-
putation and categorical quantum mechanics, we attract your attention
to two extra rules we will use throughout next sections, Hadamard ZX-
transformation and general Euler decomposition or P-rule for three con-
secutive red and green angles.
Deﬁnition 20. (Hadamard rule) A Hadamard matrix has an equivalent
ZX-representation of three π
2 (Z-X-Z) or (X-Z-X) spiders:
H =
π
2
π
2
π
2
=
π
2
π
2
π
2
(23)
Deﬁnition 21. (P-rule) Given a composition of (Z-X-Z) spiders, by us-
ing relation between angles below, one can ﬁnd an equivalent combination
of (X-Z-X) spiders and vice versa.
α
β
γ
=
α′
γ′
β′
(24)
z = cos(β
2 )cos(α + γ
2
) + isin(β
2 )cos(α −γ
2
)
(25)
z′ = cos(β
2 )sin(α + γ
2
) −isin(β
2 )sin(α −γ
2
)
(26)
1If you are reading this in black and white or have limited colour vision, Z spiders are the
lightly shaded nodes and X spiders are darkly shaded ones.
9

β
...
...
α
...
...
=
...
...
...
α+β
(-1)aα
=
aπ
aπ
aπ
α
...
...
aπ
aπ
α
=
aπ
aπ
α
...
=
α
...
=
=
=
eiaα
eiaα
√
2
√
2
Figure 4:
A convenient presentation for the ZX-calculus. These rules hold for
all α, β ∈[0, 2π) and a ∈{0, 1}. They also hold with the colours (red and green)
interchanged, and with the inputs and outputs permuted arbitrarily.
The equivalent three angles are:
(α′, β′, γ′) =





α′ = arg(z) + arg(z′)
β′ = 2arg( |z|
|z′| + i)
γ′ = arg(z) −arg(z′)
4
TQC and CQM
In Section 2, we discussed the properties and structures of unitary ribbon
fusion categories. Also, we brieﬂy touched on the fact that the category for
TQC is sometimes convoluted with the category describing anyonic theo-
ries. Given the structure of categorical quantum computing, the question
of interaction between TQC and CQM arises. We show TQC category is
a subcategory of Hilb.
Knowing this fact, another exciting area to explore is the representa-
tion of TQC models with the ZX-calculus. We show this explicitly for the
Fibonacci and Ising models, introduce new relations, and conclude that
while the Ising model is only the Cliﬀord fragment of the ZX-calculus,
the Fibonacci model represents a new fragment. This further results in
the introduction of a new P-rule.
Let us review the elements of TQC. For quantum computation, we
need a well-deﬁned anyonic theory. This means we have a set of anyon
types, fusion rules which essentially specify the outcome of the tensor
product between each pair of objects, and solutions of pentagonal and
hexagonal equations.
The computation space is not an anyonic space; instead, it is the fusion
space, V k
ij. Physically, we are encoding qubits in the possibility of diﬀerent
fusion outcomes between anyons. So if the outcome of (Xi ⊗Xj) ⊗Xk
has two possibilities, either with a single outcome with a multiplicity
coeﬃcient N k
ij = 2 or with more than one outcome, then one can take V k
ij
as the computation space.
Having this picture in mind, then solutions of pentagonal equations,
which we call F-matrices, are represented as matrices and linear isomor-
10

phisms between two isomorphic vector spaces V l
(ij)k ∼= V l
i(jk). However,
the building blocks of the spaces where we perform computations are fu-
sion spaces V k
ij, so any other space has an equivalent direct sum of these
fusion spaces.
V l
(ij)k ∼=
M
ek
V e
ij ⊗V l
ek
(27)
Similar to F matrices, it should not be surprising that hexagonal equa-
tions’ solutions, which we call R-matrices, are linear isomorphisms be-
tween two isomorphic spaces V k
ij ∼= V k
ji.
Deﬁnition 22. A TQC category consists of the following:
• Objects direct sums and tensor products of fusion spaces V k
ij.
• Morphisms R matrices, F matrices, and compositions and tensor
products thereof.
Pentagonal and hexagonal equations can be rewritten substituting
anyons with fusion spaces; one must solve these equations to ﬁnd F and
R solutions explicitly. There are some simplifying rules which reduce the
number of equations, for example, in the Fibonacci case from 32 to 1.
Because every fusion matrix has 5 indices and each index can be either
Fibonacci anyon or vacuum, but any matrix with at least one vacuum
index is identity, so only one non-trivial equation remains to solve, for
further information see [3].
This category is furthermore semi-simple:
simple objects are fusion spaces, and any other space is a direct sum of
fusion spaces.
V j
i1..in ∼=
M
k1...kn−1
V k1
i1i2 ⊗V k2
k1i3 ⊗... ⊗V j
kn−1in
(28)
Note that fusion spaces are hom-sets of a URFC. Hence, they come
equipped with a well-deﬁned inner product, transforming them to Hilbert
spaces. So the relationship between CQM and TQC should be evident
by now.
The described category is a subcategory of Hilb.
Given the
deﬁnition above, this category is also closed under the tensor product, and
the direct sum and the F and R matrices are well-behaved. Therefore, the
natural next step is to develop the ZX-representation of TQC. We show
our attempt for two well-studied models, Ising and Fibonacci.
4.1
ZX-representation of TQC
4.2
Ising Model
Ising anyons, also known as Majorana fermions, are the most simple real-
ization of non-Abelian anyons [22].
The Ising model includes two non-trivial anyons {σ, ψ} and the non-
trivial fusion rules are as below:
σ ⊗σ = 1 ⊕ψ,
σ ⊗ψ = σ,
ψ ⊗ψ = 1
(29)
where 1 is the trivial anyon. As should be clear from these rules, σ is
the non-Abelian anyon we use for encoding. It is called Ising or Majorana
fermion, because of the similarity of Ising anyons statistics with Majorana
fermions. To encode qubits, we need three Ising anyons so that based on
their internal charges; we can map them to qubits, {|1ψ⟩= |0⟩, |ψσ⟩=
|1⟩}.
11

σ
σ
σ
1, ψ
σ
Figure 5: Ising qubits or the braid group on three strands, B3.
Fixing this basis, the computational Hilbert space is H = ⊕xV x
σσ ⊗
V σ
xσ. One can solve pentagonal and hexagonal equations to ﬁnd F and R
matrices [25],
F isg = H =
1
√
2
1
1
1
−1

,
Risg
1
= −e
πi
8
1
0
0
−i

,Risg
2
= −e
−πi
8
√
2
1
i
i
1

,
(30)
Comparing with equation (22), we see that Risg
1
matrix is a Z-spider with
1 input, 1 output, and a phase angle of −π
2 . We mentioned before that
Hadamard also has a ZX-representation as a combination of three
π
2
angles. So Risg
2
= HRisg
1 H gives the other braid generator.
σ
σ
σ
σ
σ
σ
σ
σ
1, ψ
1, ψ
Figure 6: The braid group of six Ising qubits, B6.
For braid groups on 6-strands or 2-qubit gates, we need to ﬁnd matrix
representations of the braid group’s generators, B6. Based on the general
relation between Temperley-Lieb algebra and braid groups, the authors
of [12] present a 4-dimensional representation of the Ising braid group on
six strands or anyons as follows:
ρisg(σ1) = exp(πi
8 )




−1
0
0
0
0
−1
0
0
0
0
i
0
0
0
0
i



,
ρisg(σ2) = −exp( −πi
8 )
√
2




1
0
i
0
0
1
0
i
i
0
1
0
0
i
0
1




ρisg(σ3) = exp(πi
8 )




−1
0
0
0
0
i
0
0
0
0
i
0
0
0
0
−1



,
ρisg(σ4) = −exp( −πi
8 )
√
2




1
i
0
0
i
1
0
0
0
0
1
i
0
0
i
1




ρisg(σ5) = exp(πi
8 )




−1
0
0
0
0
i
0
0
0
0
−1
0
0
0
0
i




We extract two basic generators for constructing these matrices, called U-
generators.
U isg
1
= exp(πi
4 )
1
0
0
−i

= Z −π
2 ,
U isg
2
=
1
√
2
1
i
i
1

= X −π
2
12

Risg
1
=
,
Risg
2
=
F isg =
ρisg(σ1) =
, ρisg(σ2) =
, ρisg(σ3) =
ρisg(σ5) =
ρisg(σ4) =
,
−π
2
−π
2
π
2
π
2
π
2
−π
2
−π
2
−π
2
−π
2
−π
2
,
Figure 7: ZX-representation of Ising gates.
Given U-generators, we restate the 4-dimensional representations of the
Ising braid group on 6-anyons as below,
ρ(σ1)isg = −exp(iπ
8 )(U isg
1
⊗I) ≈(Z −π
2 ⊗I),
ρ(σ2)isg = −exp(−iπ
8 )(U isg
2
⊗I) ≈(X −π
2 ⊗I),
ρ(σ3)isg ≈(CNOT)(Z−π
2 ⊗I)(CNOT),
ρisg(σ4) = −exp(iπ
8 )(I ⊗U isg
2
) ≈(I ⊗X −π
2 )
ρisg(σ5) = −exp(−iπ
8 )(I ⊗U isg
1
) ≈(I ⊗Z −π
2 )
These generators yield the following braid relations:
[ρisg(σ1), ρisg(σi)] = 0∀i ̸= 2,
ρisg(σ1)ρisg(σ2)ρisg(σ1) = ρisg(σ2)ρisg(σ1)ρisg(σ2)
[ρisg(σ2), ρisg(σi)] = 0∀i ̸= 1, 3,
ρisg(σ2)ρisg(σ3)ρisg(σ2) = ρisg(σ3)ρisg(σ2)ρisg(σ3)
[ρisg(σ3), ρisg(σi)] = 0∀i ̸= 2, 4,
ρisg(σ4)ρisg(σ3)ρisg(σ4) = ρisg(σ3)ρisg(σ4)ρisg(σ3)
[ρisg(σ4), ρisg(σi)] = 0∀i ̸= 3, 5,
ρisg(σ4)ρisg(σ5)ρisg(σ4) = ρisg(σ5)ρisg(σ4)ρisg(σ5)
The ﬁrst column says that non-overlapping braids commute. These can
be shown straightforwardly using the ZX representation because either:
(i) the ZX representations act on diﬀerent wires or (ii) the representations
act on the same wire, but the ZX generators commute thanks to the spider
fusion law. For example, the commutation of ρisg(σ3) and ρisg(σ5) can
be proven as follows:
−π
2
−π
2
=
π
2
−π
2
=
−π
2
−π
2
The second column of braid relations are the Yang-Baxter equations.
These are all implied by variations on the P-rule, as we’ll show in Sec-
tions 4.4 and 4.5.
The Ising model is proved to be a non-universal model of quantum
computation [25, 20]. The above ZX-based relations, furthermore, concede
they represent the Cliﬀord fragment of the ZX-calculus, that indicates
non-universality.
13

4.3
Fibonacci Model
Fibonacci anyons present the simplest universal model of topological quan-
tum computation.
The label set has only one non-trivial anyon called
the Fibonacci anyon, {τ}. There is only one non-trivial Fibonacci rule,
namely when the Fibonacci anyon fuses with another Fibonacci anyon,
τ ⊗τ = 1 ⊕τ .
An technique for eﬃciently approximating single qubit gates and CNOT
was put forth in [6].
The universality of this model is also proved in
e.g. [25]. Further proposals for quantum gate synthesis based on a Monte
Carlo algorithm or reinforcement learning were suggested in [26]. Here, we
take a somewhat dual approach. Rather than translating quantum compu-
tational primitives to complex sequences of braid generators, we translate
individual braid generators to ZX-diagrams, which a more closely related
to quantum gates and can be reasoned about using the rules of the ZX-
calculus.
τ
τ
τ
1, τ
τ
Figure 8: Fibonacci qubits or the braid group on three strands, B3.
To encode qubits, we have to consider three Fibonacci anyons when
their total charge is τ. The internal charge x determines two basis states.
We map {|x = 1⟩, |x = τ⟩} to {|0⟩, |1⟩} respectively. Solving pentagonal
and hexagonal equations in this Hilbert space, H = Span({|0⟩, |1⟩}), we
obtain the following solutions for F and RF ib
1
matrices [25], if φ =
√
5+1
2
.
φ2 = φ + 1, 1 = φ−1 + φ−2,
(31)
F =
 
φ−1
φ
−1
2
φ
−1
2
−φ−1
!
=
1
0
0
i
  
φ−1
−φ
−1
2 i
−φ
−1
2 i
φ−1
! 1
0
0
i

(32)
RF ib
1
= exp(−4πi
5
)
1
0
0
exp( 7πi
5 )

, R = exp(7πi
5 )
(33)
RF ib
2
= F F ibRF ib
1
F F ib =
 
φ−2 + Rφ−1
φ
−3
2 (1 −R)
φ
−3
2 (1 −R)
φ−1 + Rφ−2
!
(34)
One can easily observe F = Z π
2 XθZ π
2 and RF ib
1
is a
7πi
5
green spider.
Considering the general form of Xθ-rotation,
Xθ = exp(θi
2 )
 cos( θ
2)
−isin( θ
2)
−isin( θ
2)
cos( θ
2)

we can ﬁnd θ for F F ib, which is θ = 2Arccos(φ−1) if π
2 ≺θ ≺π. Numer-
ically, it is θ ≈129π
224 .
RF ib
1
=
RF ib
2
α
π
π
2
α
π
2
θ
θ
,
(35)
θ
π
2
π
2
F =
(36)
Based on the explicit representation of R1 and R2, we can see the following
equalities which somehow simplify our next equations.
14

3R1 =
,
4R1 =
,
5R1 =
−2α π
−α
π
,
6R1 =
,
7R1 =
,
8R1 =
α
−2α
,
2α
π
9R1 =
−α
π
(37)
To ﬁnd the 4-dimensional representations of Fibonacci anyons, we need
to create two pairs of three anyons; the total charge of these six anyons is
vacuum or 1. However, the charge of a group of three anyons can be either
1 or τ. If it is τ, we are in the computational basis, and if it is 1, we are
in the non-computational basis. As it should be clear from the graph, the
computational space is 4-dimensional, and the non-computational space
is one-dimensional.
Unlike Ising anyons, Fibonacci anyons have the possibility of leakage
into the non-computational space. That is, while swapping the middle
anyons, anyons number 3 and 4, the state may change to non-computational
state. Note that this is admissible since it preserves the total charge 1
(parent node). So representations of braid group on six anyons, should
be actually mapped into this 5-dimensional space of H = HNC ⊕HC, or
H = Span({|NC⟩, |11⟩, |1τ⟩, |τ1⟩, |ττ⟩, }).
The same method of Temperly-Lieb algebra [11] gives representation
of Fibonacci B6. If R = exp( 7πi
5 ).
ρF ib(σ1) = exp(−4πi
5
)[R ⊕(RF ib
1
⊗I2)]
(38)
ρF ib(σ2) = exp(−4πi
5
)[R ⊕(FRF ib
1
F ⊗I2)]
(39)
ρF ib(σ3) = exp(−4πi
5
)[P14(R ⊕RF ib
1
⊕FRF ib
1
F)P14]
(40)
ρF ib(σ4) = exp(−4πi
5
)[R ⊕(I2 ⊗FRF ib
1
F)]
(41)
ρF ib(σ5) = exp(−4πi
5
)[R ⊕(I2 ⊗RF ib
1
)]
(42)
Unlike the 2-dimensional generators, the 5-dimensional ones do not give
us clue into their ZX diagrams. However, as one can observe from their
matrix form, they are block diagonal and easily representable by quantum
circuits. In the following part, we intend to ﬁnd these circuits and then
transform them into the ZX diagrams.
We ﬁrst need to cope with a dimension mismatch.
The 6-anyon
Fibonacci generators occupy a 5-dimensional space.
However, the ZX-
calculus, and indeed the usual circuit model, can only represent linear
operators on 2k-dimensional spaces. Hence, we can further “pad out” this
5D space to make it 23 = 8-dimensional, by introducing 3 extra “garbage”
basis elements. These have no physical interpretation beyond allowing us
to represent the generators above in a subspace of 3-qubit space.
We map the old basis states into new basis states as follows:
|NC⟩−→|011⟩, |11⟩−→|100⟩, |1τ⟩−→|101⟩,
|τ1⟩−→|110⟩, |ττ⟩−→|111⟩
Note that this mapping sends basis states in the computation subspace to
basis states whose ﬁrst qubit is 1, reserves |011⟩for the non-computational
state, and has extra “garbage” basis states |000⟩, |001⟩, and |010⟩.
15

U1 =
U2 =
7π
5
−7π
10
7π
5
7π
10
π
π
Figure 9: The ﬁrst two U-generators of Fibonacci B6
In our encoding to into this larger space, we perform an additional
simpliﬁcation step. The naïve encoding of the 5D generators is simply to
take the direct sum with the 3 × 3 identity matrix I3. However, since the
garbage basis states will have no signiﬁcance for our calculation, taking the
direct sum with any unitary matrix will do just as well. We take advantage
of this for the ﬁrst generator, where we instead take the direct sum with
RI3. This yields a much simpler unitary in the 3-qubit representation.
The embedded matrices allow us to identify the building blocks or U-
generators.
U F ib
1
=
RI4
0
0
I4

, U F ib
2
=
I6
0
0
RI2

, U F ib
3
=
I2
0
0
RF ib
2

⊗I2,
U F ib
4
=


I4
0
0
0
RF ib
1
0
0
0
I2

, U F ib
5
=
I6
0
0
RF ib
1

, U6 =


I4
0
0
0
RF ib
2
0
0
0
I2

,
U F ib
7
=
I6
0
0
RF ib
2

, P14 = (CCX2)(CCX0)(CCX2), CCXi : i −target qubit
The ZX-form of U F ib
1
and U F ib
2
are represented in Figure 9, other U’s
are longer chains of single and 2-qubit gates. To see them, consult PyZX
Anyon package [1]. Fibonacci anyons’ braid generators satisfy the follow-
ing commutation relations, which are also provable by graphical calculus.
Consider, {1, 2, ..., 7},
[U1, Ui] = 0
∀i ∈l,
[U2, Ui] = 0
∀i ∈l/{3},
U2U3U2 = U3U2U3,
[U3, Ui] = 0
∀i,
[U4, Ui] = 0
∀i ∈l/{3, 6},
U4U6U4 = U6U4U6,
[U5, Ui] = 0
∀i ∈l/{3, 7},
U5U7U5 = U7U5U7,
[U6, Ui] = 0
∀i ∈l/{3, 4},
We break down generators of B6 to the multiplication of U-generators
as follows;
ρF ib(σ1) = U1U2,
ρF ib(σ2) = U1U3,
ρF ib(σ3) = P14(U1U4U7)P14,
ρF ib(σ4) = U1U6U7,
ρF ib(σ5) = U1U4U5,
It is, therefore, enough to ﬁnd quantum circuits of the U-generators
and transform them to ZX-diagrams. One can observe how the expres-
sion of U6 and U7 are related to each other by taking U7CCRF ib
2
and
U6 = (I ⊗X ⊗I)U7(I ⊗X ⊗I). We represent U7 = (CCF)U5(CCF),
that means the ZX-representation of U7 reduces to representing CCF or
(CCZ −π
2 )(CCXθ)(CCZ −π
2 ).
So far, we have explored the full description of braid generators up
to six strands.
Given these ZX-diagrams, one can create any braid of
16

up to six strands and exploit rewrite rules to simplify them. Using anyon
library of PyZX, this process is automatic [1]. However, due to the current
limitation of PyZX, after simpliﬁcation, PyZX does not extract a circuit
diagram from a simpliﬁed graph since the Fibonacci angle is an arbitrary
non-Cliﬀord angle.
Note that PyZX does an acceptable job when dealing with single qubit
gates and braids on three strands. However, we make this simpliﬁcation
more precise by introducing speciﬁc P-rules for Fibonacci and Ising. The
speciﬁc P-rules not only help to simplify braids, but also it is helpful
for topological quantum compiling of single-qubit gates; one can use an
intermediate step, switch to the ZX-calculus, optimise them exactly, and
come back to the circuit representation.
Theorem 1. (Fibonacci Single Qubit P-rule) For θ = 2Arccos(φ−1),
we have:
θ
2π
5
θ
=
θ
3π
5
3π
5
The proof uses the main P-rule, the fact that φ is the golden ratio and
satisﬁes φ2 −φ −1 = 0, also R = 7π
5 , and that R and φ are related to
each other through hexagonal equation. As Coecke and Wang mentioned
in [10], if the ﬁrst and third angle on the lefthand-side of the equation are
equal, then the ﬁrst and third angles on the righthand-side must also be
equal. To prove the above rule, we need a lemma.
Lemma 1. If α = 2π
5 and φ is the golden ration, then cos(α) = φ−1
2 .
Proof. We deﬁne a general Rm =
R1
0
0
Rτ

, and if we substitute it in
the hexagonal equation, we have:
φ−1 + Rτ = R2
1,
φ−1 −φ−1Rτ = R1Rτ,
R2
τ + φ−1Rτ + 1 = 0
Considering this set of equations and cos(ξ) = −φ−1
2
, we obtain β = π
2 −ξ
2
and R = Rτ
R1 = ξ −β = 3ξ
2 −π
2 .
Proof of Theorem 1. Let us substitute initial angles in (z, z′),
z = cos(α
2 )cos(θ) + isin(α
2 )
z′ = cos(α
2 )sin(θ)
Using previous Lemma, we have:
cos(α
2 ) =
p
φ−1 + 2
2
= φ
2 ,
sin(α
2 ) =
p
2 −φ−1
2
= φ
2 ,
cos(θ
2) = φ−1, sin(θ
2) = φ
−1
2 ,
sin(θ) = 2φ
−3
2 , cos(θ) =
p
1 −4φ−3
We can check sin( γ
2 ) = φ
−1
2 , which incidently proves γ = θ ± π. For side
angles. we need to only compute argument of z as clearly arg(z′) = 0.
We compute cos(arg(z)) instead,
cos(arg(z)) =
φ
2
p
1 −4φ−3
φ−1
= −cos(α)
17

4.4
Single-qubit Braid Relations
In this part, we can check the non-trivial braid relations on three anyons,
namely Yang-Baxter equation. We show that explicitly by using P-rule
for Ising anyons and Fibonacci.
We see that the Ising Yang-Baxter is
exactly an instance of the P-rule. In fact, it can be obtained directly from
the Hadamard rule, equation (23), by taking the adjoint of both sides.
• For Ising anyons, we have
R1R2R1 =
−π
2
−π
2
−π
2
(43)
The other side, R1R2R1 results in an equivalent chain of angles,
R2R1R2 =
−π
2
−π
2
−π
2
(44)
This shows Yang-Baxter equation is an example of the P-Rule for
Ising anyons.
• For Fibonacci anyons, from combination of the ZX-equivalent of
R1 and R2, we have
R2R1R2 =
π
2
π
2
7π
5
−π
2
−π
2
7π
5
π
2
π
2
7π
5
−π
2
−π
2
θ
−θ
θ
−θ
(45)
We fuse adjacent phases,
R2R1R2 =
π
2
R
R
R
−π
2
−θ
θ
−θ
θ
(46)
Applying the Fibonacci P-rule to the boxed angles, we have
R2R1R2 =
π
2
α
α
α
π
2
θ
θ
θ
θ
(47)
We again apply the P-rule to obtain,
R2R1R2 =
π
2
π −α
π −α
α
π −α
π −α
π
2
θ
θ
(48)
We fuse the middle angles,
R2R1R2 =
π
2
π
2
θ
(49)
One can explicitly write the left hand side, R1R2R1, and obtain the
same equality.
Remark 1. Observe that the above results are completely exact. We did
not use φ explicitly. However, anyon library of PyZX works explicitly
with angles and give an approximate for braids on three strands or a com-
position of Fibonacci single qubit gates.
As mentioned before, having a P-rule for Fibonacci anyons, one can create
a long chain of braids on three strands, and by consecutive application of
P-rule for Fibonacci, plus other ZX-calculus rules, we are able to ﬁnd a
simple equivalent braid or circuit.The following braid is built on the Braid
word
B = [R1, R1, R2, R2, R2, R2, R1, R1]
The braid is drawn in Figure below.
18

The same braid in the ZX-representation is as follows.
In general, to
ﬁnd out the outcome matrix for this braid, one needs to multiply braid
matrices. But we consider coloured lines as Fibonacci anyons, we are able
to simplify the braid graphically exactly:
B =
7π
5
7π
5
π
2
θ
π
2
7π
5
−π
2
−θ
−π
2
π
2
θ
π
2
7π
5
3π
2
−θ
...
−π
2
π
2
θ
π
2
7π
5
−π
2
−θ
−π
2
π
2
θ
π
2
7π
5
−π
2
−θ
−π
2
7π
5
7π
5
B =
13π
10
θ
8π
5
−θ
3π
10
...
(50)
4.5
Two-qubit Braid Relations
Finally, we note that the Yang-Baxter equations for the Ising representa-
tion of B6 can also be shown straightforwardly. They are either instances
of the P-rule applied on just one of the two qubit-wires, or a combina-
tion of the P-rule and the so-called “phase gadget” rules for two qubits.
Namely, we have the following equations for any angle α:
α
=
α
=
α
which follow from the other ZX calculus rules (see e.g. [24]). Now, we can
show the Yang-Baxter equation for ρisg(σ2) and ρisg(σ3) as follows:
−π
2
=
−π
2
−π
2
−π
2
−π
2
−π
2
=
−π
2
−π
2
−π
2
=
−π
2
−π
2
−π
2
(∗)
=
−π
2
−π
2
−π
2
=
−π
2
−π
2
−π
2
−π
2
−π
2
=
−π
2
Here, we used the spider-fusion law, the P-rule in the step marked (∗),
and the fact that two CNOT gates cancel.
The Yang-Baxter equation for ρisg(σ3) and ρisg(σ4) can be proved
using the mirror-image of the derivation above.
We leave the full ZX-iﬁcation of the two-qubit Fibonacci model and
graphical proofs of the associated Yang-Baxter equations as future work.
5
Conclusion and Future Work
We have demonstrated that the category describing topological quantum
computation is actually a subcategory of Hilb. We represented elements
of the Fibonacci and Ising models with the ZX-calculus, and showed a
new Euler decomposition rule (P-rule) for the single qubit Fibonacci case.
19

The Ising and Fibonacci models are examples of the general SU(2)k
model.
We intend to extend the ZX-representation of TQC models to
general SU(2)k anyons and fusion rules.
Thanks to universality of ZX-diagrams, it follows that we can ﬁnd a
graphical representation for any linear map over qubits as a ZX-diagram.
This yields very simple representations and proofs in the case of the Ising
representation of B3 and B6, encoding 1 and 2 logical qubits, respectively.
However, the Fibonacci representation of B6 on three qubit wires yields
unweildy representations for some of the braid operators as ZX-diagrams,
partly due to the need to translate quantum CCZ gates. It could be the
case that by switching to a graphical calculus like the ZH-calculus [4],
which can more elegantly capture CCZ and related constructions, we can
more easily represent and work with this representation.
Another interesting area of research is to identify a new Fibonacci frag-
ment of the ZX-calculus, consisting of Z-phases that are linear combina-
tions of π/10 and θ = 2Arccos(φ−1). The contains the Cliﬀord fragment
as well as a non-Cliﬀord phase gate, hence must be universal.
It also
contains (at least) one new exact P-rule given by Theorem 1. It would
therefore be interesting to see what (if any) other new rules are needed
to produce a complete graphical calculus, and whether this suﬃces for
proving any equation involving the ZX representation Fibonacci anyons.
References
[1] Anyon
package
of
pyzx.
https://github.com/RitaAhmadi/
anyon-pyzx.
[2] Samson Abramsky and Bob Coecke. A categorical semantics of quan-
tum protocols. In Proceedings of the 19th Annual IEEE Symposium
on Logic in Computer Science, 2004., pages 415–425. IEEE, 2004.
[3] Fatimah Rita Ahmadi. Bicategorical aspects of topological quantum
computation.
[4] Miriam Backens and Aleks Kissinger. ZH: A complete graphical cal-
culus for quantum computations involving classical non-linearity. In
Peter Selinger and Giulio Chiribella, editors, Proceedings of the 15th
International Conference on Quantum Physics and Logic, Halifax,
Canada, 3-7th June 2018, volume 287 of Electronic Proceedings in
Theoretical Computer Science, pages 18–34. Open Publishing Asso-
ciation, 2019.
[5] Bojko Bakalov and Alexander A Kirillov.
Lectures on tensor cat-
egories and modular functors, volume 21. American Mathematical
Soc., 2001.
[6] Nicholas E Bonesteel, Layla Hormozi, Georgios Zikos, and Steven H
Simon. Braid topologies for quantum computation. Physical review
letters, 95(14):140503, 2005.
[7] Bob Coecke. Compositionality as we see it, everywhere around us.
arXiv preprint arXiv:2110.05327, 2021.
[8] Bob Coecke and Ross Duncan.
Interacting quantum observables:
categorical algebra and diagrammatics.
New Journal of Physics,
13(4):043016, 2011.
[9] Bob Coecke and Aleks Kissinger. Picturing quantum processes: A
ﬁrst course in diagrammatic reasoning and quantum theory. 2017.
20

[10] Bob Coecke and Quanlong Wang. Zx-rules for 2-qubit cliﬀord+ t
quantum circuits. In International Conference on Reversible Com-
putation, pages 144–161. Springer, 2018.
[11] Shawn X Cui, Kevin T Tian, Jennifer F Vasquez, Zhenghan Wang,
and Helen M Wong. The search for leakage-free entangling ﬁbonacci
braiding gates. Journal of Physics A: Mathematical and Theoretical,
52(45):455301, 2019.
[12] Zheyong Fan and Hugo de Garis. Braid matrices and quantum gates
for ising anyons topological quantum computation.
The European
Physical Journal B, 74(3):419–427, 2010.
[13] André Joyal and Ross Street. The geometry of tensor calculus, i.
Advances in mathematics, 88(1):55–112, 1991.
[14] Christian Kassel and Vladimir Turaev. Braid groups, volume 247.
Springer Science & Business Media, 2008.
[15] Liang Kong and Zhi-Hao Zhang. An invitation to topological orders
and category theory. arXiv preprint arXiv:2205.05565, 2022.
[16] Tom Leinster. Basic category theory, volume 143. Cambridge Uni-
versity Press, 2014.
[17] Saunders Mac Lane. Categories for the working mathematician, vol-
ume 5. Springer Science & Business Media, 2013.
[18] Roger Penrose. Applications of negative dimensional tensors. Com-
binatorial mathematics and its applications, 1:221–244, 1971.
[19] John Preskill. Lecture notes for physics 229: Quantum information
and computation. California Institute of Technology, 16(1):1–8, 1998.
[20] Eric C Rowell. An invitation to the mathematics of topological quan-
tum computation. In Journal of Physics: Conference Series, volume
698, page 012012. IOP Publishing, 2016.
[21] Sankar Das Sarma, Michael Freedman, and Chetan Nayak. Topolog-
ical quantum computation. Physics today, 59(7):32–38, 2006.
[22] Sankar Das Sarma, Michael Freedman, and Chetan Nayak. Majorana
zero modes and topological quantum computation.
npj Quantum
Information, 1(1):1–13, 2015.
[23] Vladimir G Turaev. Quantum invariants of knots and 3-manifolds.
In Quantum Invariants of Knots and 3-Manifolds. de Gruyter, 2016.
[24] John van de Wetering. Zx-calculus for the working quantum com-
puter scientist. arXiv preprint arXiv:2012.13966, 2020.
[25] Zhenghan Wang. Topological quantum computation. Number 112.
American Mathematical Soc., 2010.
[26] Yuan-Hang Zhang, Pei-Lin Zheng, Yi Zhang, and Dong-Ling Deng.
Topological quantum compiling with reinforcement learning. Physical
Review Letters, 125(17):170501, 2020.
21

