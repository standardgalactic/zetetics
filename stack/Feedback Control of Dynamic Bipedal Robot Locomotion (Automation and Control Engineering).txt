
Feedback Control
of Dynamic Bipedal
Robot Locomotion
© 2007 by Taylor & Francis Group, LLC

CONTROL AND AUTOMATION
Series Editors
Shuzhi Sam Ge and Frank Lewis
1.
Feedback Control of Dynamic Bipedal Robot Locomotion,
Eric R. Westervelt, Jessy W. Grizzle, Christine Chevallereau,
 Jun Ho Choi, and Benjamin Morris
© 2007 by Taylor & Francis Group, LLC

Feedback Control
of Dynamic Bipedal
Robot Locomotion
Eric R. Westervelt
Jessy W. Grizzle
Christine Chevallereau
Jun Ho Choi
Benjamin Morris
CRC Press is an imprint of the
Taylor & Francis Group, an informa business
Boca Raton   London   New York
© 2007 by Taylor & Francis Group, LLC

CRC Press
Taylor & Francis Group
6000 Broken Sound Parkway NW, Suite 300
Boca Raton, FL 33487‑2742
© 2007 by Taylor & Francis Group, LLC 
CRC Press is an imprint of Taylor & Francis Group, an Informa business
No claim to original U.S. Government works
Printed in the United States of America on acid‑free paper
10 9 8 7 6 5 4 3 2 1
International Standard Book Number‑10: 1‑4200‑5372‑8 (Hardcover)
International Standard Book Number‑13: 978‑1‑4200‑5372‑2 (Hardcover)
This book contains information obtained from authentic and highly regarded sources. Reprinted 
material is quoted with permission, and sources are indicated. A wide variety of references are 
listed. Reasonable efforts have been made to publish reliable data and information, but the author 
and the publisher cannot assume responsibility for the validity of all materials or for the conse‑
quences of their use. 
No part of this book may be reprinted, reproduced, transmitted, or utilized in any form by any 
electronic, mechanical, or other means, now known or hereafter invented, including photocopying, 
microfilming, and recording, or in any information storage or retrieval system, without written 
permission from the publishers.
For permission to photocopy or use material electronically from this work, please access www.
copyright.com (http://www.copyright.com/) or contact the Copyright Clearance Center, Inc. (CCC) 
222 Rosewood Drive, Danvers, MA 01923, 978‑750‑8400. CCC is a not‑for‑profit organization that 
provides licenses and registration for a variety of users. For organizations that have been granted a 
photocopy license by the CCC, a separate system of payment has been arranged.
Trademark Notice: Product or corporate names may be trademarks or registered trademarks, and 
are used only for identification and explanation without intent to infringe.
Library of Congress Cataloging‑in‑Publication Data
Feedback control of dynamic bipedal robot locomotion / Eric R. Westervelt ... [et 
al.]. ‑‑ 1st ed.
p. cm. ‑‑  (Control and automation ; 1)
Includes bibliographical references and index.
ISBN 978‑1‑4200‑5372‑2 (alk. paper)
1.  Robotics. 2.  Locomotion.  I. Westervelt, Eric R. II. Title. III. Series.
TJ211.F43 2007
629.8’932‑‑dc22
2007007727
Visit the Taylor & Francis Web site at
http://www.taylorandfrancis.com
and the CRC Press Web site at
http://www.crcpress.com
© 2007 by Taylor & Francis Group, LLC

To our loved ones.
A tous ceux que nous aimons.
© 2007 by Taylor & Francis Group, LLC

Preface
The objective of this book is to present systematic methods for achiev-
ing stable, agile and eﬃcient locomotion in bipedal robots. The fundamental
principles presented here can be used to improve the control of existing robots
and provide guidelines for improving the mechanical design of future robots.
The book also contributes to the emerging control theory of hybrid systems.
Models of legged machines are fundamentally hybrid in nature, with phases
modeled by ordinary diﬀerential equations interleaved with discrete transi-
tions and reset maps. Stable walking and running correspond to the design
of asymptotically stable periodic orbits in these hybrid systems and not equi-
librium points. Past work has emphasized quasi-static stability criteria that
are limited to ﬂat-footed walking. This book represents a concerted eﬀort
to understand truly dynamic locomotion in planar bipedal robots, from both
theoretical and practical points of view.
The emphasis on sound theory becomes evident as early as Chapter 3 on
modeling, where the class of robots under consideration is described by lists of
hypotheses, and further hypotheses are enumerated to delineate how the robot
interacts with the walking surface at impact, and even the characteristics
of its gait. This careful style is repeated throughout the remainder of the
book, where control algorithm design and analysis are treated. At times, the
emphasis on rigor makes the reading challenging for those less mathematically
inclined. Do not, however, give up hope! With the exception of Chapter 4 on
the method of Poincar´e sections for hybrid systems, the book is replete with
concrete examples, some very simple, and others quite involved. Moreover, it
is possible to cherry-pick one’s way through the book in order to “just ﬁgure
out how to design a controller while avoiding all the proofs.” This is mapped
out below and in Appendix A.
The practical side of the book stems from the fact that it grew out of
a project grounded in hardware. More details on this are given in the ac-
knowledgements, but suﬃce it to say that every stage of the work presented
here has involved the interaction of roboticists and control engineers. This
interaction has led to a control theory that is closely tied to the physics of
bipedal robot locomotion. The importance and advantage of doing this was
ﬁrst driven home to one of the authors when a multipage computation involv-
ing the Frobenius Theorem produced a quantity that one of the other authors
identiﬁed as angular momentum, and she could reproduce the desired result
in two lines! Fortunately, the power of control theory produced its share of
eye-opening moments on the robotic side of the house, such as when days and
© 2007 by Taylor & Francis Group, LLC

days of simulations to tune a “physically-based” controller were replaced by a
ten minute design of a PI-controller on the basis of a restricted Poincar´e map,
and the controller worked like a champ. In short, the marriage of mechanics
and control is evident throughout the book. The culture of control theory has
inspired the hypothesis-deﬁnition-theorem-proof-example format of the pre-
sentation and many of the mathematical objects used in the analysis, such as
zero dynamics and systems with impulse eﬀects, while the culture of mechanics
has heavily inﬂuenced the vocabulary of the presentation, the understanding
of the control problem, the choice of what to control, and ways to render the
required computations practical and insightful on complex mechanisms.
Target audience: The book is intended for graduate students, scientists and
engineers with a background in either control or robotics—but not necessarily
both of these subjects—who seek systematic methods for creating stable walk-
ing and running motions in bipedal robots. So that both audiences can be
served, an extensive appendix is provided that reviews most of the nonlinear
control theory required to read the book, and enough Lagrangian mechanics
to be able to derive models of planar bipedal robots comprised of rigid links
and joints. Taken together, the control and mechanics overviews provide suf-
ﬁcient tools for representing the robot models in a form that is amenable to
analysis. The appendix also contains an intuitive summary of the method
of Poincar´e sections; this is the primary mathematical tool for studying the
existence and stability of periodic solutions of diﬀerential equations.
The
mathematical details of applying the method of Poincar´e sections to the hy-
brid models occurring in bipedal locomotion are suﬃciently unfamiliar to both
control theorists and roboticists that they are treated in the main part of the
book.
Detailed contents: The book is organized into three parts: preliminaries,
the modeling and control of robots with point feet, and the control of robots
with feet. The preliminaries begin with Chapter 1, which describes particular
features of bipedal locomotion that lead to mathematical models possessing
both discrete and continuous phenomena, namely, a jump phenomenon that
arises when the feet impact the ground, and diﬀerential equations (classical
Lagrangian mechanics) that describe the evolution of the robot’s motion oth-
erwise. Several challenges that this mix of discrete and continuous phenomena
pose for control algorithm design and analysis are highlighted, and how re-
searchers have faced these challenges in the past is reviewed. The chapter
concludes with an elementary introduction to a central theme of the book:
a method of feedback design that uses virtual constraints to synchronize the
movement of the many links comprising a typical bipedal robot. Chapter 2
introduces two bipedal robots that are used as sources of examples of the the-
ory, RABBIT and ERNIE. Both of these machines were speciﬁcally designed
to study the control of underactuated mechanisms experiencing impacts. A
mathematical model of RABBIT is used in many of the simulation examples
throughout the book. An extensive set of experiments that have been per-
© 2007 by Taylor & Francis Group, LLC

formed with RABBIT and ERNIE is reported in Chapter 8 and Section 9.9.
Part II begins with Chapter 3 on the modeling of bipedal robots for walking
and running motions. For many readers, the diﬀerential equation portions of
the models, which involve basic Lagrangian mechanics, will be quite familiar,
but the presentation of rigid impacts and the interest of angular momentum
will be new. The diﬀerential equations and impact models are combined to
form a special class of hybrid systems called nonlinear systems with impulse
eﬀects. The method of Poincar´e sections for systems with impulse eﬀects is
presented in Chapter 4. Some of the material is standard, but much is new.
Of special interest is the treatment of invariant surfaces and the associated
restricted Poincar´e maps, which are the key to obtaining checkable necessary
and suﬃcient conditions for the existence of exponentially stable walking and
running motions. Also of interest is the interpretation of a parameterized fam-
ily of Poincar´e maps as a discrete-time control system upon which event-based
or stride-to-stride control decisions can be designed. This leads to an eﬀective
means of performing event-based PI control, for example, in order to regulate
walking speed in the face of model mismatch and disturbances. Chapter 5
develops the primary design tool of this book, the hybrid zero dynamics of
bipedal walking. These dynamics are a low-dimensional controlled-invariant
subsystem of the hybrid model that is complex enough to retain the essential
features of bipedal walking and simple enough to permit eﬀective analysis and
design. Exponentially stable periodic solutions of the hybrid zero dynamics
are exponentially stabilizable periodic solutions of the full-dimensional hy-
brid model of the robot. In other words, they correspond to stable walking
motions of the closed-loop system. The hybrid zero dynamics is created by
zeroing a set of virtual constraints. How to design the virtual constraints
in order to create interesting walking gaits is the subject of Chapter 6. An
extensive set of feedback design examples is provided in this chapter. The
controllers of Chapter 6 are acting continuously within the stride of a walking
motion. Chapter 7 is devoted to control actions that are updated on a stride-
to-stride basis. The combined results of Chapters 6 and 7 provide an overall
hybrid control strategy that reﬂects the hybrid nature of a bipedal robot. The
practical relevance of the theory is veriﬁed in Chapter 8, where RABBIT—
a reasonably complex mechanism—is made to walk reliably with just a few
days of eﬀort, and not the many months of trial and error that is customary.
Part II of the book is concluded with a study of running in Chapter 9. A
new element introduced in the chapter is, of course, the ﬂight phase, where
the robot has no ground contact; the stance phase of running is similar to
the single support phase of walking. Chapter 9 develops natural extensions of
the notions of virtual constraints and hybrid zero dynamics to hybrid models
with multiple continuous phases. An extensive set of design examples is also
provided. An initial experimental study of running is described in Section 9.9;
the results are not as resoundingly positive as those of Chapter 8.
The stance foot plays an important role in human walking since it con-
tributes to forward progression, vertical support, and initiation of the lifting
© 2007 by Taylor & Francis Group, LLC

of the swing leg from the ground. Working with a mechanical model, our
colleague Art Kuo has shown that plantarﬂexion of the ankle, which initiates
heel rise and toe roll, is the most eﬃcient method to reduce energy loss at the
subsequent impact of the swing leg. Part III of the book is therefore devoted
to walking with actuated feet. Chapter 10 addresses a walking motion that al-
lows anthropomorphic foot action. The desired walking motion is assumed to
consist of three successive phases: a fully actuated phase where the stance foot
is ﬂat on the ground, an underactuated phase where the stance heel lifts from
the ground and the stance foot rotates about the toe, and an instantaneous
double support phase where leg exchange takes place. It is demonstrated that
the feedback design methodology presented for robots with point feet can
be extended to obtain a provably asymptotically stabilizing controller that
integrates the fully actuated and underactuated phases of walking. By com-
parison, existing humanoid robots, such as Honda’s biped, ASIMO, use only
the fully actuated phase (i.e., they only execute ﬂat-footed walking), while
RABBIT and ERNIE use only the underactuated phase (i.e., they have no
feet, and hence walk as if on stilts). To the best of our knowledge, no other
methodology is available for integrating the underactuated and fully actuated
phases of walking. Past work that emphasized quasi-static stability criteria
and ﬂat-footed walking has primarily been based on the so-called Zero Mo-
ment Point (ZMP) or, its extension, the Foot Rotation Indicator (FRI) point.
Chapter 11 shows how the methods of the book can be adapted to directly
control the FRI point during the ﬂat-footed portion of a walking gait, while
maintaining provable stability properties. Importantly, FRI control is done
here in such a way that both the fully actuated and underactuated phases
of walking are included. For comparison with more standard approaches, a
detailed simulation study is performed for ﬂat-footed walking.
Possible paths through the book: This book can be read on many dif-
ferent levels. Most readers will want to peruse Appendix B in order to ﬁll
in gaps on the fundamentals of nonlinear control or Lagrangian mechanics.
The serious work can then start with the ﬁrst three sections of Chapter 3,
which develop a hybrid model of bipedal walking. The deﬁnition of a periodic
solution to the hybrid model of walking, the notion of an exponentially stable
periodic orbit and how to test for its existence via a Poincar´e map are ob-
tained by reading through Section 4.2.1 of Chapter 4. Chapters 5 and 6 then
provide a very complete view on designing feedback controllers for walking at
a single average speed. If Sections 5.2 and 5.3 seem too technical, then it is
advised that the reader skip to Section 6.4, before completing the remainder
of Chapter 5. After this, it is really a matter of personal interest whether one
continues through the book in a linear fashion or not. A reader whose pri-
mary interest is running would complete the above program, read Section 7.3,
and ﬁnish with Chapter 9, while a reader whose primary interest is walking
with feet would proceed to Chapters 10 and 11, for example. For a reader
whose interests lie primarily in theory, new results for the control of nonlinear
© 2007 by Taylor & Francis Group, LLC

systems with impulse eﬀects are concentrated in Chapters 4 and 5, with sev-
eral interesting twists for systems with multiple phases given in Chapters 9
and 10; the other parts of the book could be viewed as a simple conﬁrmation
that the theory seems to be worthwhile. The numerous worked-out examples
and remarks on interesting special cases make it possible for a practitioner to
avoid most of the theoretical considerations when initially working through
the book.
It is suggested to seek out the two-link walker (a.k.a., the Ac-
robot or compass biped) and three-link walker examples in Chapters 3, 5,
and 6, which will provide an introduction to underactuation, hybrid models,
the MPFL-normal form, virtual constraints, the swing phase zero dynamics,
B´ezier polynomials, optimization, and a systematic method to enlarge the
basin of attraction of passive gaits. The reader should then be ready to read
Chapter 8, with referral to previous chapters as necessary. Further ideas on
how to work one’s way through the book are given in Appendix A.
Acknowledgements: This book is based on research funded by the Na-
tional Science Foundation (USA) under grants INT-9980227, ECS-0322395,
ECS-0600869, and CMS-0408348 and the CNRS (France). Our work would
not have been possible without these foundations’ generous support. We are
deeply indebted to Gabriel Abba, Yannick Aoustin, Gabriel Buche, Carlos
Canudas de Wit, Dalila Djoudi, Alexander Formal’sky, Dan Koditschek, and
Franck Plestan with whom we had the great fortune and pleasure of discov-
ering many of the results presented here. Bernard Espiau is oﬀered a special
thanks for his active role and constant encouragement in the conception and
realization of the bipedal robot RABBIT that inspired our control design and
analysis methods. A history of RABBIT’s development, along with a listing
of the contributors to the project, is given on page 473.
Petar Kokotovic
and Tamer Basar planted the idea that our research on the control of bipedal
robots had matured to the point that organizing it into book form would be
a worthwhile endeavor. Dennis Bernstein put RABBIT on the cover of the
October 2003 issue of IEEE Control Systems Magazine, which was instru-
mental in bringing our work to the attention of a broader audience in the
control ﬁeld. Laura Bailey believed that control algorithms for bipedal walk-
ing and running would appeal to the general public and shared that belief
with the The Economist, Wired magazine, Discovery.com, Reuters and other
news outlets, much to our delight and that of our families and friends. As the
writing of the book progressed, we beneﬁted from the insightful comments and
assistance of JeﬀCook, Kat Farrell, Ioannis Poulakakis, James Schmiedeler,
Ching-Long Shih, Aniruddha Sinha, Mark Spong, Theo Van Dam, Giuseppe
Viola, JeﬀWensink, and Tao Yang. The team of Frank Lewis, Shuzhi (Sam)
Ge, BJ Clark, and Nora Konopka of CRC Press very ably guided us through
the publication process.
© 2007 by Taylor & Francis Group, LLC

Book webpage: Supplemental materials are available at the following URL:
www.mecheng.osu.edu/∼westerve/biped book/
The webpage includes links to videos of the experiments reported in the book,
MATLAB code for several of the book’s robot models, a link to submit errors
found in the book, and an erratum.
Eric R. Westervelt, Columbus, Ohio
Jessy W. Grizzle, Ann Arbor, Michigan
Christine Chevallereau, Nantes, France
Jun-Ho Choi, Seoul, Korea
Benjamin Morris, Ann Arbor, Michigan
April 2007
© 2007 by Taylor & Francis Group, LLC

Contents
I
Preliminaries
1
1
Introduction
3
1.1
Why Study the Control of Bipedal Robots?
. . . . . . . . . .
4
1.2
Biped Basics
. . . . . . . . . . . . . . . . . . . . . . . . . . .
6
1.2.1
Terminology . . . . . . . . . . . . . . . . . . . . . . . .
6
1.2.2
Dynamics . . . . . . . . . . . . . . . . . . . . . . . . .
9
1.2.3
Challenges Inherent to Controlling Bipedal Locomotion
11
1.3
Overview of the Literature . . . . . . . . . . . . . . . . . . . .
14
1.3.1
Polypedal Robot Locomotion . . . . . . . . . . . . . .
15
1.3.2
Bipedal Robot Locomotion
. . . . . . . . . . . . . . .
17
1.3.3
Control of Bipedal Locomotion . . . . . . . . . . . . .
19
1.4
Feedback as a Mechanical Design Tool: The Notion of Virtual
Constraints
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
24
1.4.1
Time-Invariance, or, Self-Clocking of Periodic Motions
24
1.4.2
Virtual Constraints . . . . . . . . . . . . . . . . . . . .
25
2
Two Test Beds for Theory
29
2.1
RABBIT . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
29
2.1.1
Objectives of the Mechanism
. . . . . . . . . . . . . .
29
2.1.2
Structure of the Mechanism . . . . . . . . . . . . . . .
30
2.1.3
Lateral Stabilization . . . . . . . . . . . . . . . . . . .
31
2.1.4
Choice of Actuation
. . . . . . . . . . . . . . . . . . .
33
2.1.5
Sizing the Mechanism
. . . . . . . . . . . . . . . . . .
33
2.1.6
Impacts . . . . . . . . . . . . . . . . . . . . . . . . . .
35
2.1.7
Sensors
. . . . . . . . . . . . . . . . . . . . . . . . . .
35
2.1.8
Additional Details
. . . . . . . . . . . . . . . . . . . .
36
2.2
ERNIE . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
37
2.2.1
Objectives of the Mechanism
. . . . . . . . . . . . . .
37
2.2.2
Enabling Continuous Walking with Limited Lab Space
38
2.2.3
Sizing the Mechanism
. . . . . . . . . . . . . . . . . .
39
2.2.4
Impacts . . . . . . . . . . . . . . . . . . . . . . . . . .
39
2.2.5
Sensors
. . . . . . . . . . . . . . . . . . . . . . . . . .
40
2.2.6
Additional Details
. . . . . . . . . . . . . . . . . . . .
40
© 2007 by Taylor & Francis Group, LLC

II
Modeling, Analysis, and Control of Robots with
Passive Point Feet
43
3
Modeling of Planar Bipedal Robots with Point Feet
45
3.1
Why Point Feet?
. . . . . . . . . . . . . . . . . . . . . . . . .
46
3.2
Robot, Gait, and Impact Hypotheses
. . . . . . . . . . . . . .
47
3.3
Some Remarks on Notation
. . . . . . . . . . . . . . . . . . .
52
3.4
Dynamic Model of Walking
. . . . . . . . . . . . . . . . . . .
53
3.4.1
Swing Phase Model . . . . . . . . . . . . . . . . . . . .
53
3.4.2
Impact Model . . . . . . . . . . . . . . . . . . . . . . .
55
3.4.3
Hybrid Model of Walking
. . . . . . . . . . . . . . . .
57
3.4.4
Some Facts on Angular Momentum . . . . . . . . . . .
58
3.4.5
The MPFL-Normal Form
. . . . . . . . . . . . . . . .
60
3.4.6
Example Walker Models . . . . . . . . . . . . . . . . .
63
3.5
Dynamic Model of Running
. . . . . . . . . . . . . . . . . . .
71
3.5.1
Flight Phase Model . . . . . . . . . . . . . . . . . . . .
72
3.5.2
Stance Phase Model
. . . . . . . . . . . . . . . . . . .
73
3.5.3
Impact Model . . . . . . . . . . . . . . . . . . . . . . .
74
3.5.4
Hybrid Model of Running . . . . . . . . . . . . . . . .
75
3.5.5
Some Facts on Linear and Angular Momentum . . . .
77
4
Periodic Orbits and Poincar´e Return Maps
81
4.1
Autonomous Systems with Impulse Eﬀects . . . . . . . . . . .
82
4.1.1
Hybrid System Hypotheses
. . . . . . . . . . . . . . .
83
4.1.2
Deﬁnition of Solutions . . . . . . . . . . . . . . . . . .
84
4.1.3
Periodic Orbits and Stability Notions . . . . . . . . . .
86
4.2
Poincar´e’s Method for Systems with Impulse Eﬀects
. . . . .
87
4.2.1
Formal Deﬁnitions and Basic Theorems
. . . . . . . .
87
4.2.2
The Poincar´e Return Map as a Partial Function
. . .
90
4.3
Analyzing More General Hybrid Models
. . . . . . . . . . . .
91
4.3.1
Hybrid Model with Two Continuous Phases . . . . . .
92
4.3.2
Basic Deﬁnitions . . . . . . . . . . . . . . . . . . . . .
92
4.3.3
Existence and Stability of Periodic Orbits . . . . . . .
94
4.4
A Low-Dimensional Stability Test Based on Finite-Time
Convergence . . . . . . . . . . . . . . . . . . . . . . . . . . . .
96
4.4.1
Preliminaries . . . . . . . . . . . . . . . . . . . . . . .
96
4.4.2
Invariance Hypotheses . . . . . . . . . . . . . . . . . .
96
4.4.3
The Restricted Poincar´e Map . . . . . . . . . . . . . .
97
4.4.4
Stability Analysis Based on the Restricted Poincar´e
Map . . . . . . . . . . . . . . . . . . . . . . . . . . . .
97
4.5
A Low-Dimensional Stability Test Based on Timescale
Separation . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
99
4.5.1
System Hypotheses . . . . . . . . . . . . . . . . . . . . 100
4.5.2
Stability Analysis Based on the Restricted Poincar´e
Map . . . . . . . . . . . . . . . . . . . . . . . . . . . . 101
© 2007 by Taylor & Francis Group, LLC

4.6
Including Event-Based Control
. . . . . . . . . . . . . . . . . 102
4.6.1
Analyzing Event-Based Control with the Full-Order
Model . . . . . . . . . . . . . . . . . . . . . . . . . . . 103
4.6.2
Analyzing Event-Based Actions with a Hybrid
Restriction Dynamics Based on Finite-Time
Attractivity . . . . . . . . . . . . . . . . . . . . . . . . 107
5
Zero Dynamics of Bipedal Locomotion
111
5.1
Introduction to Zero Dynamics and Virtual Constraints
. . . 111
5.1.1
A Simple Zero Dynamics Example . . . . . . . . . . . 112
5.1.2
The Idea of Virtual Constraints . . . . . . . . . . . . . 114
5.2
Swing Phase Zero Dynamics . . . . . . . . . . . . . . . . . . . 117
5.2.1
Deﬁnitions and Preliminary Properties . . . . . . . . . 117
5.2.2
Interpreting the Swing Phase Zero Dynamics
. . . . . 122
5.3
Hybrid Zero Dynamics
. . . . . . . . . . . . . . . . . . . . . . 124
5.4
Periodic Orbits of the Hybrid Zero Dynamics
. . . . . . . . . 128
5.4.1
Poincar´e Analysis of the Hybrid Zero Dynamics . . . . 128
5.4.2
Relating Modeling Hypotheses to the Properties of the
Hybrid Zero Dynamics . . . . . . . . . . . . . . . . . . 131
5.5
Creating Exponentially Stable, Periodic Orbits in the Full
Hybrid Model
. . . . . . . . . . . . . . . . . . . . . . . . . . . 132
5.5.1
Computed Torque with Finite-Time Feedback Control 133
5.5.2
Computed Torque with Linear Feedback Control . . . 134
6
Systematic Design of Within-Stride Feedback Controllers for
Walking
137
6.1
A Special Class of Virtual Constraints
. . . . . . . . . . . . . 137
6.2
Parameterization of hd by B´ezier Polynomials
. . . . . . . . . 138
6.3
Using Optimization of the HZD to Design Exponentially
Stable Walking Motions
. . . . . . . . . . . . . . . . . . . . . 144
6.3.1
Eﬀects of Output Function Parameters on Gait
Properties: An Example . . . . . . . . . . . . . . . . . 145
6.3.2
The Optimization Problem
. . . . . . . . . . . . . . . 147
6.3.3
Cost . . . . . . . . . . . . . . . . . . . . . . . . . . . . 152
6.3.4
Constraints . . . . . . . . . . . . . . . . . . . . . . . . 153
6.3.5
The Optimization Problem in Mayer Form . . . . . . . 154
6.4
Further Properties of the Decoupling Matrix and the Zero
Dynamics
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 156
6.4.1
Decoupling Matrix Invertibility . . . . . . . . . . . . . 156
6.4.2
Computing Terms in the Hybrid Zero Dynamics
. . . 159
6.4.3
Interpreting the Hybrid Zero Dynamics
. . . . . . . . 160
6.5
Designing Exponentially Stable Walking Motions on the Basis
of a Prespeciﬁed Periodic Orbit
. . . . . . . . . . . . . . . . . 162
6.5.1
Virtual Constraint Design . . . . . . . . . . . . . . . . 162
© 2007 by Taylor & Francis Group, LLC

6.5.2
Sample-Based Virtual Constraints and Augmentation
Functions . . . . . . . . . . . . . . . . . . . . . . . . . 164
6.6
Example Controller Designs
. . . . . . . . . . . . . . . . . . . 165
6.6.1
Designing Exponentially Stable Walking Motions
without Invariance of the Impact Map . . . . . . . . . 165
6.6.2
Designs Based on Optimizing the HZD . . . . . . . . . 173
6.6.3
Designs Based on Sampled Virtual Constraints and
Augmentation Functions . . . . . . . . . . . . . . . . . 178
7
Systematic Design of Event-Based Feedback Controllers for
Walking
191
7.1
Overview of Key Facts
. . . . . . . . . . . . . . . . . . . . . . 192
7.2
Transition Control
. . . . . . . . . . . . . . . . . . . . . . . . 195
7.3
Event-Based PI-Control of the Average Walking Rate
. . . . 199
7.3.1
Average Walking Rate . . . . . . . . . . . . . . . . . . 199
7.3.2
Design and Analysis Based on the Hybrid Zero
Dynamics . . . . . . . . . . . . . . . . . . . . . . . . . 200
7.3.3
Design and Analysis Based on the Full-Dimensional
Model . . . . . . . . . . . . . . . . . . . . . . . . . . . 206
7.4
Examples
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 208
7.4.1
Choice of δα
. . . . . . . . . . . . . . . . . . . . . . . 208
7.4.2
Robustness to Disturbances . . . . . . . . . . . . . . . 210
7.4.3
Robustness to Parameter Mismatch
. . . . . . . . . . 210
7.4.4
Robustness to Structural Mismatch . . . . . . . . . . . 210
8
Experimental Results for Walking
213
8.1
Implementation Issues
. . . . . . . . . . . . . . . . . . . . . . 213
8.1.1
RABBIT’s Implementation Issues . . . . . . . . . . . . 213
8.1.2
ERNIE’s Implementation Issues . . . . . . . . . . . . . 218
8.2
Control Algorithm Implementation: Imposing the Virtual
Constraints
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 220
8.3
Experiments . . . . . . . . . . . . . . . . . . . . . . . . . . . . 225
8.3.1
Experimental Validation Using RABBIT . . . . . . . . 225
8.3.2
Experimental Validation Using ERNIE . . . . . . . . . 241
9
Running with Point Feet
249
9.1
Related Work
. . . . . . . . . . . . . . . . . . . . . . . . . . . 250
9.2
Qualitative Discussion of the Control Law Design . . . . . . . 251
9.2.1
Analytical Tractability through Invariance,
Attractivity, and Conﬁguration Determinism at
Transitions
. . . . . . . . . . . . . . . . . . . . . . . . 251
9.2.2
Desired Geometry of the Closed-Loop System . . . . . 252
9.3
Control Law Development
. . . . . . . . . . . . . . . . . . . . 254
9.3.1
Stance Phase Control
. . . . . . . . . . . . . . . . . . 255
9.3.2
Flight Phase Control . . . . . . . . . . . . . . . . . . . 256
© 2007 by Taylor & Francis Group, LLC

9.3.3
Closed-Loop Hybrid Model
. . . . . . . . . . . . . . . 258
9.4
Existence and Stability of Periodic Orbits
. . . . . . . . . . . 258
9.4.1
Deﬁnition of the Poincar´e Return Map
. . . . . . . . 258
9.4.2
Analysis of the Poincar´e Return Map . . . . . . . . . . 260
9.5
Example: Illustration on RABBIT
. . . . . . . . . . . . . . . 266
9.5.1
Stance Phase Controller Design . . . . . . . . . . . . . 267
9.5.2
Stability of the Periodic Orbits . . . . . . . . . . . . . 268
9.5.3
Flight Phase Controller Design . . . . . . . . . . . . . 268
9.5.4
Simulation without Modeling Error . . . . . . . . . . . 272
9.6
A Partial Robustness Evaluation
. . . . . . . . . . . . . . . . 277
9.6.1
Compliant Contact Model . . . . . . . . . . . . . . . . 278
9.6.2
Simulation with Modeling Error . . . . . . . . . . . . . 279
9.7
Additional Event-Based Control for Running
. . . . . . . . . 282
9.7.1
Deciding What to Control . . . . . . . . . . . . . . . . 283
9.7.2
Implementing Stride-to-Stride Updates of Landing
Conﬁguration . . . . . . . . . . . . . . . . . . . . . . . 283
9.7.3
Simulation Results . . . . . . . . . . . . . . . . . . . . 284
9.8
Alternative Control Law Design . . . . . . . . . . . . . . . . . 287
9.8.1
Controller Design . . . . . . . . . . . . . . . . . . . . . 288
9.8.2
Design of Running Motions with Optimization
. . . . 292
9.9
Experiment
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 296
9.9.1
Hardware Modiﬁcations to RABBIT . . . . . . . . . . 296
9.9.2
Result: Six Running Steps . . . . . . . . . . . . . . . . 296
9.9.3
Discussion . . . . . . . . . . . . . . . . . . . . . . . . . 298
III
Walking with Feet
299
10 Walking with Feet and Actuated Ankles
301
10.1
Related Work
. . . . . . . . . . . . . . . . . . . . . . . . . . . 302
10.2
Robot Model
. . . . . . . . . . . . . . . . . . . . . . . . . . . 302
10.2.1
Robot and Gait Hypotheses . . . . . . . . . . . . . . . 303
10.2.2
Coordinates . . . . . . . . . . . . . . . . . . . . . . . . 305
10.2.3
Underactuated Phase . . . . . . . . . . . . . . . . . . . 305
10.2.4
Fully Actuated phase . . . . . . . . . . . . . . . . . . . 306
10.2.5
Double-Support Phase . . . . . . . . . . . . . . . . . . 307
10.2.6
Foot Rotation, or Transition from Full Actuation to
Underactuation . . . . . . . . . . . . . . . . . . . . . . 308
10.2.7
Overall Hybrid Model
. . . . . . . . . . . . . . . . . . 309
10.2.8
Comments on the FRI Point and Angular Momentum 309
10.3
Creating the Hybrid Zero Dynamics
. . . . . . . . . . . . . . 315
10.3.1
Control Design for the Underactuated Phase
. . . . . 315
10.3.2
Control Design for the Fully Actuated Phase
. . . . . 317
10.3.3
Transition Map from the Fully Actuated Phase to the
Underactuated Phase . . . . . . . . . . . . . . . . . . . 318
© 2007 by Taylor & Francis Group, LLC

10.3.4
Transition Map from the Underactuated Phase to the
Fully Actuated Phase
. . . . . . . . . . . . . . . . . . 319
10.3.5
Hybrid Zero Dynamics . . . . . . . . . . . . . . . . . . 320
10.4
Ankle Control and Stability Analysis
. . . . . . . . . . . . . . 321
10.4.1
Analysis on the Hybrid Zero Dynamics for the
Underactuated Phase . . . . . . . . . . . . . . . . . . . 321
10.4.2
Analysis on the Hybrid Zero Dynamics for the Fully
Actuated Phase with Ankle Torque Used to Change
Walking Speed
. . . . . . . . . . . . . . . . . . . . . . 322
10.4.3
Analysis on the Hybrid Zero Dynamics for the Fully
Actuated Phase with Ankle Torque Used to Aﬀect
Convergence Rate
. . . . . . . . . . . . . . . . . . . . 323
10.4.4
Stability of the Robot in the Full-Dimensional Model . 326
10.5
Designing the Virtual Constraints . . . . . . . . . . . . . . . . 326
10.5.1
Parametrization Using B´ezier polynomials . . . . . . . 326
10.5.2
Achieving Impact Invariance of the Zero Dynamics
Manifolds . . . . . . . . . . . . . . . . . . . . . . . . . 328
10.5.3
Specifying the Remaining Free Parameters . . . . . . . 330
10.6
Simulation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 331
10.7
Special Case of a Gait without Foot Rotation
. . . . . . . . . 332
10.8
ZMP and Stability of an Orbit
. . . . . . . . . . . . . . . . . 334
11 Directly Controlling the Foot Rotation Indicator Point
341
11.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . 341
11.2
Using Ankle Torque to Control FRI Position During the Fully
Actuated Phase . . . . . . . . . . . . . . . . . . . . . . . . . . 342
11.2.1
Ability to Track a Desired Proﬁle of the FRI Point . . 343
11.2.2
Analyzing the Zero Dynamics . . . . . . . . . . . . . . 344
11.3
Special Case of a Gait without Foot Rotation
. . . . . . . . . 347
11.4
Simulations
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 348
11.4.1
Nominal Controller . . . . . . . . . . . . . . . . . . . . 348
11.4.2
With Modeling Errors . . . . . . . . . . . . . . . . . . 350
11.4.3
Eﬀect of FRI Evolution on the Walking Gait
. . . . . 351
11.5
A Variation on FRI Position Control
. . . . . . . . . . . . . . 355
11.6
Simulations
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 357
A Getting Started
363
A.1
Graduate Student . . . . . . . . . . . . . . . . . . . . . . . . . 363
A.2
Professional Researcher
. . . . . . . . . . . . . . . . . . . . . 368
A.2.1
Reader Already Has a Stabilizing Controller . . . . . . 368
A.2.2
Controller Design Must Start from Scratch
. . . . . . 372
A.2.3
Walking with Feet
. . . . . . . . . . . . . . . . . . . . 372
A.2.4
3D Robot . . . . . . . . . . . . . . . . . . . . . . . . . 373
© 2007 by Taylor & Francis Group, LLC

B Essential Technical Background
375
B.1
Smooth Surfaces and Associated Notions . . . . . . . . . . . . 376
B.1.1
Manifolds and Embedded Submanifolds
. . . . . . . . 376
B.1.2
Local Coordinates and Smooth Functions
. . . . . . . 378
B.1.3
Tangent Spaces and Vector Fields . . . . . . . . . . . . 380
B.1.4
Invariant Submanifolds and Restriction Dynamics
. . 383
B.1.5
Lie Derivatives, Lie Brackets, and Involutive
Distributions
. . . . . . . . . . . . . . . . . . . . . . . 385
B.2
Elementary Notions in Geometric Nonlinear Control
. . . . . 387
B.2.1
SISO Nonlinear Aﬃne Control System . . . . . . . . . 388
B.2.2
MIMO Nonlinear Aﬃne Control System . . . . . . . . 394
B.3
Poincar´e’s Method of Determining Limit Cycles . . . . . . . . 399
B.3.1
Poincar´e Return Map
. . . . . . . . . . . . . . . . . . 400
B.3.2
Fixed Points and Periodic Orbits . . . . . . . . . . . . 401
B.3.3
Utility of the Poincar´e Return Map . . . . . . . . . . . 403
B.4
Planar Lagrangian Dynamics
. . . . . . . . . . . . . . . . . . 406
B.4.1
Kinematic Chains . . . . . . . . . . . . . . . . . . . . . 406
B.4.2
Kinetic and Potential Energy of a Single Link . . . . . 408
B.4.3
Free Open Kinematic Chains
. . . . . . . . . . . . . . 412
B.4.4
Pinned Open Kinematic Chains . . . . . . . . . . . . . 416
B.4.5
The Lagrangian and Lagrange’s Equations . . . . . . . 419
B.4.6
Generalized Forces and Torques . . . . . . . . . . . . . 420
B.4.7
Angular Momentum
. . . . . . . . . . . . . . . . . . . 420
B.4.8
Further Remarks on Lagrange’s Method . . . . . . . . 421
B.4.9
Sign Convention on Measuring Angles . . . . . . . . . 428
B.4.10 Other Useful Facts . . . . . . . . . . . . . . . . . . . . 431
B.4.11 Example: The Acrobot . . . . . . . . . . . . . . . . . . 436
C Proofs and Technical Details
439
C.1
Proofs Associated with Chapter 4 . . . . . . . . . . . . . . . . 439
C.1.1
Continuity of TI
. . . . . . . . . . . . . . . . . . . . . 439
C.1.2
Distance of a Trajectory to a Periodic Orbit . . . . . . 439
C.1.3
Proof of Theorem 4.1 . . . . . . . . . . . . . . . . . . . 440
C.1.4
Proof of Proposition 4.1 . . . . . . . . . . . . . . . . . 441
C.1.5
Proofs of Theorem 4.4 and Theorem 4.5 . . . . . . . . 442
C.1.6
Proof of Theorem 4.6 . . . . . . . . . . . . . . . . . . . 442
C.1.7
Proof of Theorem 4.8 . . . . . . . . . . . . . . . . . . . 446
C.1.8
Proof of Theorem 4.9 . . . . . . . . . . . . . . . . . . . 448
C.2
Proofs Associated with Chapter 5 . . . . . . . . . . . . . . . . 449
C.2.1
Proof of Theorem 5.4 . . . . . . . . . . . . . . . . . . . 449
C.2.2
Proof of Theorem 5.5 . . . . . . . . . . . . . . . . . . . 450
C.3
Proofs Associated with Chapter 6 . . . . . . . . . . . . . . . . 451
C.3.1
Proof of Proposition 6.1 . . . . . . . . . . . . . . . . . 451
C.3.2
Proof of Theorem 6.2 . . . . . . . . . . . . . . . . . . . 451
C.4
Proof Associated with Chapter 7
. . . . . . . . . . . . . . . . 452
© 2007 by Taylor & Francis Group, LLC

C.4.1
Proof of Theorem 7.3 . . . . . . . . . . . . . . . . . . . 452
C.5
Proofs Associated with Chapter 9 . . . . . . . . . . . . . . . . 454
C.5.1
Proof of Theorem 9.2 . . . . . . . . . . . . . . . . . . . 454
C.5.2
Proof of Theorem 9.3 . . . . . . . . . . . . . . . . . . . 455
C.5.3
Proof of Theorem 9.4 . . . . . . . . . . . . . . . . . . . 455
D Derivation of the Equations of Motion for Three-Dimensional
Mechanisms
457
D.1
The Lagrangian . . . . . . . . . . . . . . . . . . . . . . . . . . 457
D.2
The Kinetic Energy . . . . . . . . . . . . . . . . . . . . . . . . 458
D.3
The Potential Energy . . . . . . . . . . . . . . . . . . . . . . . 462
D.4
Equations of Motion
. . . . . . . . . . . . . . . . . . . . . . . 462
D.5
Invariance Properties of the Kinetic Energy
. . . . . . . . . . 464
E Single Support Equations of Motion of RABBIT
465
Nomenclature
471
End Notes
473
References
479
© 2007 by Taylor & Francis Group, LLC

Part I
Preliminaries
1
© 2007 by Taylor & Francis Group, LLC


1
Introduction
Locomotion, the ability of a body to move from one place to another, is a
deﬁning characteristic of animal life. It is accomplished by manipulating the
body with respect to the environment. In the natural setting, locomotion
takes on many forms, whether it’s the swimming of amoebas, ﬂying of birds,
or walking of humans. The diversity of animal locomotion is truly astounding
and surprisingly complex. The same is true in objects crafted by man: air-
planes have wings that create lift for ﬂight, tanks have tracks for traversing
uneven terrain, automobiles have wheels for rolling eﬃciently—and robots are
now walking on their own two legs!
In the case of environments with discontinuous ground support, such as a
rocky slope, a ﬂight of stairs, or the rungs of a ladder, it is arguable that
the most appropriate and versatile means for locomotion is legs. Legs enable
the avoidance of support discontinuities in the environment by stepping over
them. Moreover, legs are an obvious choice for locomotion in environments
designed for human walking, running, and climbing.
To the extent that a machine equipped with two legs may imitate a human’s
gait, bipedal robots are biomimetic. In this book, the appeal to biomimetics
largely stops here. This is because the material and components available to
an engineer for creating a bipedal robot are quite diﬀerent from those provided
by biology. For example, the engineer has at his disposal metal instead of
bones, motors instead of muscles, wires instead of nerves, and microprocessors
instead of a brain. In addition, there are diﬀerences in what quantities can
be sensed and the speed and accuracy with which they can be sensed. Just
as important, the operational expectations are diﬀerent.
Whereas we are
accustomed to many years of training required for a human to acquire a
high degree of skill in locomotion related activities (consider a baby learning
to walk), and we expect ability to vary greatly from one human to another
(consider the sprinter Michael Johnson versus the average runner), we expect
that the functioning of machines be exactly reproducible and correct from
the moment they are turned on. We would be greatly disappointed in a car,
for example, if the automatic transmission’s control system took many trials
“to learn” how to smoothly shift gears or to maximize the vehicle’s intended
performance, whether that be speed of acceleration or fuel economy. Similarly,
we are disappointed in a legged robot whose control system cannot deliver
gaits that utilize the full capabilities of the machine, in terms of elegance,
speed, energy economy, and of course, stability.
3
© 2007 by Taylor & Francis Group, LLC

4
Feedback Control of Dynamic Bipedal Robot Locomotion
The theme of this book is the systematic design of feedback control systems
for achieving walking and running gaits in bipedal robots. The primary em-
phasis is on the presentation of a coherent theory for control design, stability
analysis, and performance enhancement. The current state of the theory has
a number of limitations, the most important being that it applies to planar
robots, with rigid links, and at most one degree of underactuation in sin-
gle support.1 On the other hand, the principal aspects of the theory have
been evaluated on hardware, and they work! Experiments conducted on a
bipedal test bed named RABBIT yielded stable walking over a wide range
of speeds and with signiﬁcant robustness to model error and external pertur-
bations; moreover, uncommonly short implementation and debugging times
were needed to achieve an elegant stable gait. While this book emphasizes the
theoretical aspects of the subject, the reader more concerned with the practice
of control system design for bipedal robots will ﬁnd that the algorithms are
presented in a very detailed fashion that aids implementation. In addition,
the experimental work provides some guidelines on hardware issues and just
how closely an actual bipedal mechanism has to adhere to the theory.
This book is based on theoretical and experimental investigations of the
authors and colleagues that have been presented in numerous individual pub-
lications, and with varying notation.
In addition to gathering all of the
peer-reviewed material into one place and applying consistent notation, we
have provided considerable additional background material, collected in an
appendix, with the objective of making the book largely self-contained.
1.1
Why Study the Control of Bipedal Robots?
Bipedal robots form a subclass of legged robots. On the practical side, the
study of mechanical legged locomotion has been motivated by its potential use
as a means of locomotion in rough terrain, or environments with discontinuous
supports, such as the rungs of a ladder. It must also be acknowledged that
much of the current interest in legged robots stems from the appeal of ma-
chines that operate in anthropomorphic or animal-like ways (we have in mind
several well-known biped and quadruped toys). The motivation for studying
bipedal robots in particular arises from diverse sociological and commercial in-
terests, ranging from the desire to replace humans in hazardous occupations
(de-mining, nuclear power plant inspection, military interventions, etc.), to
the restoration of motion in the disabled (dynamically controlled lower-limb
prostheses, rehabilitation robotics, and functional neural stimulation).
1These limitations are not fundamental to the approach followed in the book and are being
actively addressed.
© 2007 by Taylor & Francis Group, LLC

Introduction
5
P
(a)
P
(b)
Figure 1.1. The ZMP (Zero Moment Point) criterion in a nutshell. Idealize
a robot with one leg in contact with the ground as a planar inverted pendulum
that is attached to a base consisting of a foot with torque applied at the ankle,
and assume all other joints are independently actuated. In addition, assume
adequate friction so that the foot is not sliding. In (a), the robot’s nominal
trajectory has been planned so that the center of pressure of the forces on the
foot, P, remains strictly within the interior of the footprint. In this case, the
foot will not rotate (i.e, the foot is acting as a base, as in a normal robotic
manipulator) and the system is therefore fully actuated. It follows that small
deviations from the planned trajectory can be attenuated via feedback control,
proving stabilizability of the walking motion. In case (b), however, the center
of pressure (CoP) has moved to the toe, allowing the foot to rotate. The
system is now underactuated (two degrees of freedom and one actuator), and
designing a stabilizing controller is nontrivial, especially when impact events
are taken into account. The ZMP principle says to design trajectories so that
case (a) holds; i.e., walk ﬂat footed. Humans, even with prosthetic legs, use
foot rotation to decrease energy loss at impact [72,144].
An impressive amount of technology has been amassed and speciﬁcally de-
veloped to build walking robot prototypes. A quick search of the literature, see
for example [18], reveals over a hundred walking mechanisms built by pub-
lic research laboratories, universities, and major companies.
Nevertheless,
conceptual control breakthroughs have not kept pace with the technological
developments. A canonical problem in bipedal robots is how to design a con-
troller that generates closed-loop motions, such as walking or running, that
are periodic and stable (i.e., stable limit cycles). There is a huge deﬁcit in fun-
damental control design concepts in comparison to the number of bipedal pro-
totypes. The state-of-the-art is characterized by a heavy reliance on heuristics
or on principles such as the zero moment point (ZMP) criterion [114,233,235]
As a result, only
slow motions may be achieved. Truly dynamic motions, such as balancing,
© 2007 by Taylor & Francis Group, LLC
running or fast walking, are excluded with these approaches [92].
that don’t ensure stability; see Fig. 1.1 and Section 10.8.

6
Feedback Control of Dynamic Bipedal Robot Locomotion
(a)
(b)
(c)
Figure 1.2. Various phases of bipedal walking with nonpoint feet. The single
support phase (also called the swing phase) is shown in (a) and (b), while a
double support phase is depicted in (c). If all of the joints of the robot are
actuated and the feet are not slipping, then comparing the number of degrees
of freedom to the number of independent actuators reveals that the robot is
fully actuated in (a), underactuated in (b), and overactuated in (c).
1.2
Biped Basics
Before going further, some basic terminology is introduced; more formal deﬁ-
nitions of many of these terms will be made later in the text. The terminology
will allow an informal description of the essential elements of a dynamic model
of a bipedal robot to be given which, in turn, will allow some challenging as-
pects of the control problem to be raised.
1.2.1
Terminology
A biped is an open kinematic chain consisting of two subchains called legs and,
often, a subchain called the torso, all connected at a common point called the
hip. One or both of the legs may be in contact with the ground. When only
one leg is in contact with the ground, the contacting leg is called the stance
leg and the other is called the swing leg. The end of a leg, whether it has
links constituting a foot or not, will sometimes be referred to as a foot. The
single support or swing phase is deﬁned to be the phase of locomotion where
only one foot is on the ground. Conversely, double support is the phase where
both feet are on the ground; see Figs. 1.2 and 1.3. Walking is then deﬁned
as alternating phases of single and double support, with the requirement that
the displacement of the horizontal component of the robot’s center of mass
© 2007 by Taylor & Francis Group, LLC

Introduction
7
(a)
(b)
Figure 1.3. Phases of bipedal walking with point feet. In (a), the single
support or swing phase, and in (b), the double support phase. If all of the
joints of the robot are actuated and the feet are not slipping, then the robot
is underactuated in (a) and overactuated in (b).
(COM) is strictly monotonic.2 Implicit in this description is the assumption
that the feet are not slipping when in contact with the ground. Running
is deﬁned as sequential phases of single support, ﬂight, and (single-legged)
impact, with the additional provision that impacts occur on alternating legs.
The sagittal plane is the longitudinal plane that divides the body into right
and left sections. The frontal plane is the plane parallel to the long axis of
the body and perpendicular to the sagittal plane that separates the body into
front and back portions. The transverse plane is perpendicular to both the
sagittal and frontal planes. See Fig. 1.4 for an illustration of these planes
of section. A planar biped is a biped with motions taking place only in the
sagittal plane, whereas a three-dimensional walker has motions taking place
in both the sagittal and frontal planes.
A statically stable gait is periodic locomotion in which the biped’s COM
does not leave the support polygon, that is, the convex hull formed by all of the
contact points with the ground.3 A quasi-statically stable gait is one where
the center of pressure4 (CoP) of the biped’s stance foot remains strictly within
the interior of the support polygon, and hence does not lie on the boundary.
Loosely speaking, a dynamically stable gait is then a periodic gait where the
biped’s CoP is on the boundary of the support polygon for at least part of
the cycle and yet the biped does not overturn.
2In dancing, the horizontal component of the COM often rocks forward and backward.
3In particular, for a biped during the swing phase, the support polygon is the convex hull
of the set of points where the stance foot is in contact with the ground.
4Forces distributed along the base of the stance foot can be equivalently represented by a
single force acting at the center of pressure (CoP). To be more precise, the CoP is deﬁned
as the point on the ground where the resultant of the ground-reaction force acts [92]. In
the legged robotics literature, the CoP is often referred to as the ZMP [235].
© 2007 by Taylor & Francis Group, LLC

8
Feedback Control of Dynamic Bipedal Robot Locomotion
sagittal
frontal
transverse
Figure 1.4. The human planes of section. The sagittal plane is the longi-
tudinal plane that divides the body into right and left sections. The frontal
plane is the plane parallel to the long axis of the body and perpendicular to
the sagittal plane that separates the body into front and back portions. A
transverse plane is a plane perpendicular to sagittal and frontal plane. (Image
reproduced from [222] with permission.)
© 2007 by Taylor & Francis Group, LLC

Introduction
9
1.2.2
Dynamics
The multiple support phases present in a bipedal walking cycle naturally lead
to a mathematical model that consists of at least two parts: a set of diﬀerential
equations describing the dynamics during the single support phase, and a
discrete model of the contact event when double support is initiated. For
simplicity, during single support, assume either that the biped has point feet
as in Fig. 1.3(a) or that the biped has feet and the stance foot remains ﬂat on
the ground (i.e., does not rotate), as in Fig. 1.2(a). Assume furthermore that
the stance leg end acts as an ideal pivot (the associated unilateral constraints
required for the validity of this modeling assumption—vertical support force
in the positive direction, tangential force no greater than that allowed by the
coeﬃcient of friction—will be discussed later). Under these assumptions, the
standard robot equations apply, resulting in
D(q)¨q + C(q, ˙q) ˙q + G(q) = Bu,
(1.1)
where q is a set of generalized coordinates and u denotes the vector of actu-
ator torques [164,218]. The model is easily converted to state space form by
deﬁning x := (q; ˙q).
A mechanical model is said to be fully actuated when the number of inde-
pendent actuators equals the number of degrees of freedom. If there are fewer
actuators than degrees of freedom then it is underactuated, and if there are
more actuators than degrees of freedom, it is overactuated. For a model of
a robot in single support to be fully actuated, the robot must have feet, the
stance foot must be stationary (i.e., ﬂat on the ground and neither rotating
nor slipping), and all of the joints of the robot must be actuated (including
the ankles, of course); otherwise, the model is underactuated. In particular, a
model of a fully actuated robot (i.e., a robot with feet and all joints actuated)
is underactuated when the heel rises and the foot rotates about the toe, as in
Fig. 1.2(b). Whenever non-ﬂat-footed walking takes place, underactuation is
present.
An impact occurs when the swing leg touches the walking surface. The
resulting forces that are generated between the robot and the walking surface
depend on whether the surface is springy, like a trampoline, viscous, like a
muddy edge of a pond, or essentially rigid, like a solid ﬂoor. The ﬁrst two cases
have not been studied in the legged-robot community. In the case of a rigid
walking surface, the duration of the impact event is very short [24,78,149,194]
and it is common to approximate it as being instantaneous [74, 124, 208].
Under this assumption, the ground reaction forces are replaced with impulses,
resulting in a discontinuity in the velocity components of the robot’s state.
The ultimate result of the impact model is a new initial condition from which
the single support model evolves until the next impact, written as
x+ = Δ(x−),
(1.2)
© 2007 by Taylor & Francis Group, LLC

10
Feedback Control of Dynamic Bipedal Robot Locomotion
ϕ(x) = 0
˙x = f(x) + g(x)u
x+ = Δ(x−)
Figure 1.5. Single-mode hybrid model of walking that corresponds either
to walking with point feet or to ﬂat-footed walking. Key elements are the
continuous dynamics of the single support phase, written in state space form
as ˙x = f(x) + g(x)u, the switching or impact condition, ϕ = 0, which detects
when the height of the swing leg above the walking surface is zero, and the
reinitialization rule coming from the impact map, Δ.
ϕ1(x1) = 0
˙x1 = f1(x1) + g1(x1)u1
x+
2 = Δ1(x−
1 )
ϕ2(x2) = 0
˙x2 = f2(x2) + g2(x2)u2
x+
1 = Δ2(x−
2 )
Figure 1.6. Double-mode hybrid model of walking that corresponds to a
robot with nontrivial feet that is executing a walking cycle consisting of a
ﬂat-footed phase, heel-rise and toe-roll, followed by double support on a ﬂat
foot. In this case, there are two dynamic models and two switching conditions.
The dynamic model corresponding to toe-roll has one more degree of freedom
than the model corresponding to the ﬂat-footed phase and is necessarily un-
deractuated.
where x+ := (q+; ˙q+) (resp. x−:= (q−; ˙q−)) is the state value just after
(resp. just before) impact. A representation of the resulting model as a simple
hybrid system is shown in Fig. 1.5. Models with multiple continuous phases
are common; see Fig. 1.6.
A walking motion is then a periodic orbit in a hybrid model, such as Fig. 1.5
or Fig. 1.6. The Poincar´e return map5 is the appropriate mathematical tool
[14,98,102,167,173] for analyzing the stability of periodic orbits, but its use
in the analysis of bipedal robots is more the exception rather than the rule.
5See Appendix B.3 for an informal treatment and Chapter 4 for a careful development of
this mathematical tool.
© 2007 by Taylor & Francis Group, LLC

Introduction
11
1.2.3
Challenges Inherent to Controlling Bipedal
Locomotion
Comparing the relatively slow development of algorithms that control bipedal
robots with the rapid development of sophisticated prototypes makes one
wonder why this discrepancy exists when control is an integral aspect of a
functioning biped. We hypothesize that this is due to six reasons that are
inherent to biped locomotion. The ﬁrst three diﬃculties are common to static
and dynamic bipedal walking while the ﬁnal three pertain only to dynamic
bipedal locomotion.
1.2.3.1
Common Diﬃculties
Limb coordination:
The ﬁrst diﬃculty is limb coordination. Bipeds are
typically high degree of freedom (DOF) mechanisms but the task of biped
walking is inherently a low DOF task—transportation of the robot’s COM
from one point to another.
Consequently, the task of walking does not
uniquely specify how the limbs must be coordinated in order to achieve the
desired horizontal displacement of the robot’s center of mass. Typically, when
a problem admits many solutions, ﬁnding even one can be diﬃcult, and then
ﬁnding what may be considered a “good” solution may be very diﬃcult.
Hybrid dynamics:
The second diﬃculty is hybrid dynamics. The presence
of impacts and the varying nature of the contact conditions of the leg ends
with the environment throughout a walking cycle—due to foot touchdown,
liftoﬀ, and possibly heel strike and heel roll—necessarily lead to models that
have multiple phases, and hence are hybrid.
A control theory for hybrid
systems is just now being developed, and much of the current literature is
devoted to equilibrium points instead of limit cycles.
Eﬀective underactuation:
The third diﬃculty is eﬀective underactuation
during the phase of single support. Unlike traditional robotic manipulators,
which are securely fastened to the environment, bipeds are designed to move
with respect to the environment. Because of ﬁnite foot size, a large torque
supplied at the ankle joint may result in foot rollover, in which case the robot
is underactuated. Such torque bounds complicate control design, as has been
recognized in [83,92,119,133].
Remark 1.1
The latter two complications are both manifestations of the
unilateral constraints that must be included in order to fully describe the
dynamics of a bipedal robot.
The ends of the robot’s legs, whether they
are terminated with feet or points, are not attached to the walking surface.
Consequently, normal forces at the contact points can only act in one direction,
and hence are unilateral. Other examples include the following: in order for
© 2007 by Taylor & Francis Group, LLC

12
Feedback Control of Dynamic Bipedal Robot Locomotion
the foot not to slip, the ground reaction forces must lie in the friction cone,6
which can be expressed with multiple unilateral constraints; and if the foot
is to remain ﬂat on the ground and not rotate about its extremities, such
as the heel or the toe, then there must be a point between the heel and toe
where the net moment on the foot is zero (the so-called Zero Moment Point or
ZMP), and this condition can be expressed as a pair of unilateral constraints
as well. Still other constraints should be speciﬁed to guarantee that no other
points on the robot—other than its feet—are in contact with the walking
surface, though no models known to the authors ever include this. Instead,
one typically satisﬁes the constraints indirectly by specifying that the hips are
at least a certain height above the walking surface and the torso is more or
less upright.
1.2.3.2
Challenges Associated with Dynamic Locomotion
Several further diﬃculties arise when one attempts to move beyond the quasi-
static locomotion that is obtained with the ZMP criterion.
Static instability:
The ﬁrst diﬃculty is static instability of the biped during
portions of the walking cycle. That is, in dynamic walking, the projection
of the location of the biped’s COM onto the walking surface is outside the
biped’s support polygon—and usually the location of the biped’s CoP is on
the boundary of the support polygon—during portions of the walking cycle.
This prohibits the use of the popular ZMP criterion to devise walking motions.
Design of limit cycles:
The second diﬃculty is the design of limit cycles.
Dynamically stable walking corresponds to the existence of limit cycles in the
biped’s state space. The design of controllers that induce limit cycles, while
a challenge in its own right, is made signiﬁcantly more diﬃcult by the ﬁrst
four diﬃculties and by the need for energy eﬃciency, which will be discussed
in the literature review.
Conservation of Angular momentum:
The ﬁnal diﬃculty is the con-
servation of angular momentum about the robot’s COM during the ﬂight
phase of running.
One consequence of angular momentum conservation is
the impossibility of independently regulating the robot’s shape and absolute
orientation during ﬂight phases, which complicates the control of the robot’s
conﬁguration at touchdown.
6For a given coeﬃcient of static friction, μs, the force in the tangent direction, F T , must
satisfy |F T | ≤μs|F N|, where F N is the force in the normal direction. This relation speciﬁes
a cone in the (F T ; F N)-plane.
© 2007 by Taylor & Francis Group, LLC

Introduction
13
(a) With point feet.
(b) With feet.
Figure 1.7. Illustrative high DOF planar robot models.
1.2.3.3
Confronting these Challenges
This book studies a class of bipedal robots that are only as complex as re-
quired to capture these inherent challenges. Speciﬁcally, the book addresses
planar bipeds consisting of an N-rigid-link open kinematic chain (see Fig. 1.7);
furthermore, the links are connected through ideal revolute joints and are in-
dependently actuated.
Both the cases of bipeds with point feet (N-DOF
during the stance phase and one degree of underactuation) and bipeds with
feet and an actuated ankle (fully actuated in single support) are considered.
Restricting attention to the sagittal plane is reasonable since the sagittal
plane dynamics are almost decoupled from those in the frontal plane in the
sense that stability in the frontal plane can be achieved with only frontal
plane control actions, such as step width control [16, 83, 143].
Therefore,
it seems reasonable to expect that a control algorithm designed to stabilize
walking in the sagittal plane may be coupled with an algorithm designed
to stabilize motions in the frontal plane in order to achieve stable three-
dimensional walking, as in [143].
Work along this line has been reported
in [70, 80] for an underactuated robot and in [6] for a fully actuated robot.
Of course, it is not necessary to ﬁrst address sagittal plane control before
attacking the 3D problem; see [212].
Except for Chapters 10 and 11, the robots studied in this book are assumed
to have point feet with no actuation between the stance leg end and the
ground, and actuation at all internal joints. With these assumptions, static,
or quasi-static walking is nearly impossible,7 thus requiring any walking to
7The only class of gaits where static walking would be possible is one where the biped’s
COM is over the stance leg end for the entire phase of single support and the double support
© 2007 by Taylor & Francis Group, LLC

14
Feedback Control of Dynamic Bipedal Robot Locomotion
be dynamic.
The model for the swing phase of walking is therefore that
of an underactuated mechanical system. Developing controllers to regulate
walking in a robot without feet is interesting for at least two reasons. First
of all, point feet focus attention on the dynamic aspects of walking, where
quasi-static criteria completely breakdown. This has led to the development
of new control ideas. Secondly, as shown later in the book, a control theory
for point feet serves as a sound foundation for designing controllers for fully
actuated robots, that is, robots with feet of nontrivial length and an actuated
ankle. With quasi-static criteria, only ﬂat-footed walking has been achieved
with such robots, that is, the robot’s foot must remain ﬂat on the ground
during the entire stance phase, yielding gaits that are visibly awkward or
“robotic” looking. Furthermore, based on work in [72, 144], these gaits are
likely energetically ineﬃcient. Using the theory developed for walking with
point feet, it is possible to design controllers that allow an anthropomorphic
walking gait, consisting of a fully actuated phase where the stance foot is
ﬂat on the ground, an underactuated phase where the stance heel lifts from
the ground and the stance foot rotates about the toe, followed by a double
support phase where leg exchange takes place.
1.3
Overview of the Literature
Legged locomotion was investigated by Aristotle as early as 350 B.C. in his
work Progression of Animals [9] where he asked such questions as, “why are
man and bird bipeds, but ﬁsh footless?” Actual legged machines can be found
as early as the late nineteenth century with Rygg’s mechanical horse [197] that
used a gear and lever system to generate a ﬁxed gait actuated by a bicycle-like
crank system. Since Aristotle and Rygg, research on legged locomotion has
grown into a multidisciplinary ﬁeld spanning physiology, dynamics, computer
science, automatic control, and robotics. Despite such great interest, there
are almost no legged machines in use today, and those in use are for entertain-
ment purposes only. Some of the industries, other than entertainment, that
would beneﬁt from legged machines are prosthetics, orthotics, defense, mining,
agriculture, forestry, nuclear facilities inspection, and planetary exploration.
The lack of legged machines being employed to perform real work is cer-
tainly not due to a lack of prototype development. In the past 40 years there
have been hundreds of prototypes constructed, from lumbering polypeds to
hopping monopods, each attempting to improve some aspect of system de-
sign, whether that be energy eﬃciency, autonomy, stability, speed of loco-
motion, durability, weight reduction, modularity, etc. To give a sense of the
phase is assumed to be of ﬁnite duration, i.e., non-instantaneous.
© 2007 by Taylor & Francis Group, LLC

Introduction
15
development eﬀort, a few of the pioneering nonbipedal examples will now be
highlighted, followed by a discussion of bipedal prototypes.
1.3.1
Polypedal Robot Locomotion
One of the earliest legged machine success stories is the quadrupedal General
Electric Walking Truck constructed by Mosher [146] in the late 1960s. Weigh-
ing in at 1400 kg, it required an external power source to drive its hydraulic
actuation. It carried a single operator who was responsible for controlling
each of the twelve servo loops that controlled the legs. It was capable of a top
speed of 2.2 m/s and could carry a 220 kg payload. In the early 1980s Ode-
tics, Inc. constructed a series of electro-mechanically powered, autonomous,
i.e., untethered, hexapeds serially named the Odex-1, Odex-2, and Odex-3
Functionoids.
The Odex-1 weighed 160 kg and had a top speed of about
0.5 m/s [37,196]. Constructed in the mid 1980s and weighing in at 2700 kg,
one of the largest legged machines is Ohio State’s hexapedal, hydraulicly ac-
tuated Adaptive Suspension Vehicle (ASV) [213]. It operated autonomously
with a top speed of 3.6 m/s and could carry a 220 kg payload. In contrast
to Mosher’s Walking Truck, the ASV utilized digital feedback control to ease
the burden on the operator.
Among the most inspiring of the early eﬀorts is Raibert’s monopod hopper,
a one-legged, prismatic-kneed robot that he proposed in the early 1980s as a
conceptualization of running [183, 185]. This machine was the ﬁrst powered
legged robot to exhibit dynamic balance. Weighing in at 8.6 kg (neglecting the
weight of the boom used to constrain the hopper’s motions to a plane and the
weight of the external power source and computation), Raibert’s hopper was
capable of a top speed of 1.2 m/s. Even more important than the hopper itself
are the control laws which inspired it. Raibert showed that for a class of legged
machines, fast, elegant, dynamically stable locomotion could be achieved with
simple control actions decomposed into three mutually independent parts—
hopping height, foot touchdown angle, and body posture. The remarkable
success of Raibert’s control law motivated others to analytically characterize
its stability [76, 139], and to further investigate the role of passive elements
in achieving eﬃcient running with a hopper [4]. By augmenting his control
scheme with leg-switching logic, Raibert successfully demonstrated a three-
dimensional version of his monopod hopper, as well as polypedal versions with
two and four legs.
In addition to these pioneering machines, there have been a host of other
prototypes developed. For more complete treatments of legged machine his-
tory see [18,142,185,190,229,235].
Despite all of these developments, legged machines have not yet made their
way into sectors where their utility exceeds their novelty. One factor con-
tributing to the slow development of usable legged machines is the challenge
© 2007 by Taylor & Francis Group, LLC

16
Feedback Control of Dynamic Bipedal Robot Locomotion
of simultaneously achieving energy eﬃciency and stability,8 both important
attributes for an autonomous vehicle. Greater energy eﬃciency translates into
the ability to travel farther and longer. Energy eﬃciency may be achieved in
two ways: by machine design and by using (automatic) control to maximize
the machine’s potential for eﬃciency. For example, consider the modern au-
tomobile. In the years since the Model T, both redesign and control have
been used to improve fuel economy. Modern automobiles are lighter, more
aerodynamic, and have more eﬃcient engines. To boost fuel economy, mod-
ern automobiles also use control to regulate spark timing, meter fuel, etc.
The same idea applies to legged machines. Legged machines can be made
eﬃcient through the use of light materials, eﬃcient actuators, and improved
mechanical design. Through the use of control, a legged machine’s gait may
be designed and tuned to yield eﬃcient locomotion.
Stability is also of great concern. A vehicle that overturns may damage
itself and whatever it falls onto.
Of course, any autonomous vehicle will
overturn given suﬃciently unfavorable circumstances. An objective of vehicle
design and control is to maximize stability, that is, to minimize the chance of
overturning.
Again, consider the evolution of the modern automobile. Stability is in-
creased by using suspension components that maintain the wheels in contact
with the driving surface. Also in use are stability augmentation systems that
use the braking system to prevent side-skidding and wheel slippage.
In a
similar way, legged machines may be designed to have morphologies that en-
hance stability, for example, feet can be made larger and the number of legs
increased. Control may be used to impose gaits that, under some assump-
tions, have guarantees of stability. Typically, this has been accomplished by
controlling the machine’s motion to be slow. Slowing the motion minimizes
inertial eﬀects so that quasi-static stability measures may be used.
The slow development of legged machines for work arises because machine
and control design choices that ensure stability tend to compromise energy ef-
ﬁciency and agility. For example, consider a person walking with snowshoes on
fresh, powdery snow. The snowshoes help prevent tipping over by increasing
the snowshoer’s support polygon. Also to prevent tipping over, the snowshoer
uses a slower, more laborious gait than he would if he were walking on a hard
surface. By using slower motions and a broader support polygon, he is able
to maintain stability by keeping his CoP within his support polygon. The
same principles are at work in the General Electric Walking Truck, the Odex
Functionoids, the Adaptive Suspension Vehicle, and many of the bipeds to be
described shortly. Stability is maintained simply by ensuring that the CoP is
within the support polygon. In the case of polypeds with four or more legs,
the support polygon is usually large because of sprawled posture and enough
8Recall that “stability” is currently being used to mean that the machine does not overturn.
By “more stable” it is meant that the machine is further, in some sense, from overturning,
and by “less stable” it is meant that the machine is closer, in some sense, to overturning.
© 2007 by Taylor & Francis Group, LLC

Introduction
17
legs to maintain a support tripod; however, as speed increases or the support
polygon decreases in size, the CoP can more easily reach the boundary of the
support polygon making stability diﬃcult to assess. This is the case with
bipeds that walk with dynamic gaits and a reason, among others, why almost
no bipedal robots currently walk with such gaits.
1.3.2
Bipedal Robot Locomotion
In recent years, there has been a large eﬀort in the development of bipedal
robot prototypes and in the control and analysis of bipedal gaits. The lit-
erature may be largely divided into two categories: the analysis of passive
walking—walking where gravity alone powers the walking motion—and the
analysis and control of powered walking—walking that requires an external
power source. The presentation will begin with work on passive, or semi-
passive walking, then continue with a presentation on the development of
powered walkers, and conclude with a presentation of the various control
schemes proposed.
Passive robots:
The work on passive walking is primarily motivated by the
drive for energy eﬃciency. A secondary motivation has been the observation
that many passive walking gaits have a “natural look” to them. In passive
walking, dissipation due to impacts or damping is oﬀset by the use of potential
energy supplied by walking down a slope.
The recent interest in passive
walking can be traced to the seminal research of McGeer in the late 1980s [153,
154]. McGeer built a four-link planar passive walker and performed a detailed
parameter variation and stability analysis.
McGeer’s mechanism featured
locking knees to prevent leg collapse and circular feet to give a rolling ground
contact. It weighed 3.5 kg, was 0.5 m tall, and could stably walk down a 1.4
degree slope at about 0.4 m/s. Garcia, Chatterjee, and Ruina [85] duplicated
McGeer’s mechanism and performed detailed analysis of its dynamics and the
dynamics of several other passive walkers with similar morphologies. In the
late 1990s Goswami, Espiau, and Keramane [93] showed that the so-called
compass gait walker, a two-link planar passive walker with prismatic legs, can
also exhibit stable gaits. By adding a torque acting between the legs and
adding control to regulate the biped’s total energy, they were able to increase
the passive gait’s basin of attraction, that is, the set of initial conditions
from which solutions converge to the gait in question. Also for the compass
gait walker, Thuilot, Goswami, and Espiau [228] showed that this model can
exhibit gait bifurcations (in this case, changes in the period of the gait) and
apparent chaos under certain conditions. For a model similar to the compass
gait walker, but with circular feet, ﬁxed damping and adjustable compliance
in series with the stance leg, van der Linde [230] showed that by actively
adjusting the leg compliance, the magnitude of the velocity discontinuities
that occur upon swing leg touchdown may be reduced. Howell and Baillieul
© 2007 by Taylor & Francis Group, LLC

18
Feedback Control of Dynamic Bipedal Robot Locomotion
[118] investigated a planar, semi-passive three-link model with two legs and a
torso. With a single actuator to hold the torso parallel to the ground, they
found that this model can also exhibit gait bifurcations.
As an approximation to walking in three dimensions, Smith and Berkemeier
[210] studied a three-dimensional, spoked, rimless wheel of ﬁnite width rolling
down a slope. They showed that this tinker toylike model is capable of an
asymptotically stable rolling motion. At the end of the 1990s, Collins built a
three-dimensional version of McGeer’s passive walker. Collin’s walker weighed
4.8 kg and measured 0.85 m in height [59]. With carefully designed feet and
pendular arms, it was able to walk down a 3.1 degree slope at about 0.5 m/s.
Most recent, Adolfsson, Dankowicz, and Nordmark [2] studied a passive, three-
dimensional model by beginning with McGeer’s planar model and gradually
transforming the model into a ten-DOF, three-dimensional model. In this
way, stable gaits of the three-dimensional model were found. Gait stability
under parameter variations was also investigated.
Powered bipeds:
Though it is important and interesting to investigate the
properties of passive bipeds and their gaits, any practical biped will require
energy input. In recent years, there has also been a large eﬀort in the develop-
ment of nonpassive bipedal robot prototypes, led primarily by the Japanese.
Some of the more noteworthy walkers reported in the literature will now be
highlighted in rough chronological order. The ﬁrst reported biped capable
of walking is the WL-5, a three-dimensional, 11-DOF walker constructed by
Kato and Tsuiki at Waseda University in Japan in 1972 [136]. By the mid-
1980s, the same group developed the WL-10RD, a three-dimensional, 12-DOF
walker weighing 80 kg and capable of walking at about 0.1 m/s [225]. In the
mid-1980s, Miura and Shimoyama [157] constructed a series of bipeds, named
Biper-1 through Biper-5, at least some of which were capable of walking. The
bipeds ranged in complexity from planar walkers, Biper-1 and Biper-2, to a
three-dimensional walker with all computational facilities on board, Biper-5.
Both Biper-3 and Biper-4 weighed about 3 kg and were 0.3 m in height; pre-
sumably the rest of the bipeds, which were not documented, were about the
same scale. Also in the mid-1980s, Furusho and Masubuchi [82] constructed
Kenkyaku, a planar, ﬁve-link biped weighing about 23 kg and measuring 0.7 m
in height. Kenkyaku had four actuators, at the hip and knees, with no actu-
ation provided between the ground and the biped. It was reported to walk at
0.8 m/s. In the late 1980s, Furusho and Sano constructed BLR-G2, a nine-
link, three-dimensional biped [83,200]. It weighed 25 kg, was 0.97 m tall, and
was capable of walking at 0.18 m/s. Early in the 1990s, Kajita and Tani built
Meltran II, a planar, six-DOF biped weighing 4.7 kg and standing 0.45 m
tall [133, 134]; it was capable of walking successfully over small obstacles at
a speed of 0.2 m/s. In the late 1990s, Pratt, at the MIT Leg Lab, built a
planar, seven-link walker with feet named Spring Flamingo. It weighed 14 kg
and measured 1.2 m in height [180,181]. Spring Flamingo was capable of walk-
© 2007 by Taylor & Francis Group, LLC

Introduction
19
ing at 1.2 m/s, traversing a sloped terrain and featured series elastic elements
(i.e., springs) purposefully included between the actuator and load [179]. Also
in the late 1990s, the Technical University of Munich began development of
Johnnie, a 23-DOF, three-dimensional walker weighing 40 kg and measuring
1.8 m in height [87,175]. To date, Johnnie has been able to walk at approx-
imately 0.4 m/s. Beginning in the mid-1990s, a group at INRIA in France
constructed BIP, a 15-DOF, three-dimensional walker weighing about 100 kg
and measuring 1.7 m in height [73]. Currently, BIP is unable to walk.
In the late-1990s, the CNRS and the French National Research Council
began the construction of RABBIT, a ﬁve-link, planar bipedal walker weighing
32 kg and measuring 1.2 m in height; see Section 2.1 for details on RABBIT’s
design. RABBIT’s stated purpose is to serve as a test bed for the study of
control issues related to bipedal walking and running: impacts, limit cycles,
and hybrid systems. Following in the series of prototypes that began with the
WL-5, the Humanoid Robotics Institute formed at Waseda University in 2000
developed WABIAN [112, 226, 248]. WABIAN is a three-dimensional biped
weighing 107 kg and measuring 1.84 m in height. It has 52-DOF and is capable
of walking at 0.21 m/s. One of the more famous bipeds to-date is ASIMO
(standing for Advanced Step in Innovation MObility) developed by the Honda
Corporation [114, 117]. ASIMO is an autonomous three-dimensional walker
with 26-DOF weighing 43 kg and measuring 1.2 m in height and is capable
of walking at 0.3 m/s on level ground and of climbing and descending stairs.
ASIMO’s development began in the mid-1980s and continues to the present
day. The development has involved ten generations of prototypes, named E0
through E6 and P1 through P3, and has cost hundreds of millions of dollars.
Following Honda’s success, the Japanese government began the Humanoid
Robot Project (HRP) in an attempt to grow Japan’s service robot sector.
Recently, the HRP project has produced HRP-2, a three-dimensional, 30-
DOF biped weighing 58 kg and measuring 1.54 m in height [129,135].
Hybrids:
A type of “hybrid” robot is taking shape in the research literature
[58], for which the objective is to use minimal actuation, sensing and control to
achieve highly eﬃcient walking on ﬂat ground. The machine designs are based
on passive walkers, with the addition of low-power actuators to replace gravity
as a source of energy [72,144]. The interest of these quasi-passive robots lies
in the fact that they use less control hardware and less energy than other
powered robots, yet walk rather naturally [58]. Current drawbacks include:
the range of walking motions is very limited; and the stability of their gaits is
not much better than the stability associated with passive walking on slopes,
and hence the basins of attraction are very small.
1.3.3
Control of Bipedal Locomotion
An integral but unseen component of each nonpassive biped is its control.
From the literature, several categories of control algorithms appear. They
© 2007 by Taylor & Francis Group, LLC

20
Feedback Control of Dynamic Bipedal Robot Locomotion
+
−
y
x
u
e
Γ
yd(t)
Figure 1.8. Block diagram of a trajectory tracking controller. The controller
Γ forces the error e = y −yd to zero so that output y tracks the desired
trajectory yd(t). The dashed line indicates that the trajectories yd(t) may be
modiﬁed on the basis of the robot’s state. A periodic walking motion must
be supplied by an external trajectory planner, usually in the form of desired
joint trajectories. It is challenging to design the trajectories in such a way
that the resulting nonlinear, time-varying, closed-loop system is stable.
fall into two groups: time-dependent and time-invariant algorithms. By far,
the most popular algorithms are time-dependent and involve the tracking of
precomputed trajectories; see Fig. 1.8.
To control dynamic walking in Biper-3, Miura and Shimoyama [157] ap-
proximated the biped as a linearized inverted pendulum and used trajectory
tracking. The walking motion produced by this approach might best be de-
scribed as a shuﬄe. Katoh and Mori [137] demonstrated in simulation that
using PID controllers to track reference trajectories generated by a van der
Pol oscillator would induce walking in a model of BIPMAN, a planar, four-
DOF biped with prismatic legs. Upon implementation, BIPMAN is reported
to have successfully completed only one step. Using PID control, Furusho
and Masubuchi [82] were able to control walking in Kenkyaku by tracking
piecewise-linear joint reference trajectories. Furusho and Sano [83,200] were
able to control walking in the three-dimensional BLR-G2 by using decoupled
control for the frontal and sagittal planes. In the frontal plane, PID control
was used to stabilize the upright conﬁguration. In the sagittal plane, joint tra-
jectory tracking was used regulate the robot’s angular momentum to be that of
an inverted pendulum. To control walking in Meltran II, Kajita et al. [133,134]
used PID control to track trajectories generated by a length-varying inverted
pendulum. The pendulum’s length was varied so as to maintain the biped’s
COM at a constant height above the walking surface. To control walking in
a three-link, three-DOF planar biped with telescoping legs, Grishin et al. [94]
used PID control to track precomputed trajectories that were subsequently
modiﬁed online to improve stability. To control walking in a planar, ﬁve-DOF
biped, Mitobe et al. [156] used computed torque to regulate the biped’s COM
and swing leg end position. To control walking in a planar, ﬁve-DOF biped,
Raibert, Tzafestas, and Tzafestas [186] compared in simulation the perfor-
mance of PID, computed torque, and sliding mode control in the tracking of
© 2007 by Taylor & Francis Group, LLC

Introduction
21
−
+
y
x
u
Γ
hd ◦θ(q)
θ(q)
h0(q)
Figure 1.9. Block diagram of a time-invariant controller. The controller Γ
forces the signal y = h0(q) −hd ◦θ(q) to zero so that the signal h0(q) tracks
the function hd ◦θ(q). In this way, the control action is “clocked” to events
on the robot’s path and not to an externally supplied time-based trajectory.
With proper design of h0(q) and hd ◦θ(q), a self-generated limit cycle exists
through the combined actions of the controller and the environment on the
robot.
piecewise linear joint trajectories. In simulation, Fujimoto [78,79] applied tra-
jectory tracking, augmented with foot force control, to a three-dimensional,
20-axis biped. In simulation, to control walking in a three-dimensional biped,
Park and Kim [172] used computed torque with gravity compensation to track
reference trajectories generated by a length-varying inverted pendulum. In a
similar scheme, Kajita et al. [129, 130] tracked trajectories generated by an
inverted pendulum to control walking in HRP-2. To simplify the analysis, the
pendulum height was constrained to be constant.
The most pervasive scheme used to augment trajectory tracking controllers
is the ZMP criterion; its use is commonly taken as a proof of stability.9
The ZMP is deﬁned to be the point on the ground where the resultant of
the ground-reaction force acts and is, consequently, always contained in the
robot’s support polygon [92]; recall Fig. 1.1. The ZMP criterion states that
when the ZMP is contained within the interior of the support polygon, the
robot is stable, i.e., will not topple. The ZMP criterion has been used to aug-
ment trajectory tracking in WABIAN [145,248] and ASIMO [114]. The ZMP
criterion has also been used to analyze the stability of the control algorithms
of [129,130,148,172].
In contrast to the heavy use of ZMP-based, time-dependent (trajectory
tracking) control algorithms, there have been only a few time-invariant con-
trol schemes proposed; see Fig. 1.9 for an example. In a simulation study,
H¨urm¨uzl¨u [120,121] controlled the motion of a fully actuated, planar, ﬁve-link
biped by using feedback to impose a mix of holonomic and non-holonomic con-
9For clariﬁcation on stability and the ZMP, see Section 10.8.
© 2007 by Taylor & Francis Group, LLC

22
Feedback Control of Dynamic Bipedal Robot Locomotion
straints on the robot’s state. This permitted a closed-form computation of the
robot’s trajectory as a function of time. The important role of impacts was
underlined in [125]. To control dynamic walking in Spring Flamingo, Pratt et
al. [181] used what they termed “virtual model control.” Virtual model con-
trol consists of a collection of intuitive constraints10 and a set of ad hoc rules
for switching among them as a function of the robot’s state. For the planar
Spring Flamingo it works well, but for the more complicated M2, a 3D biped,
it has not worked. For a fully actuated version of the compass gait walker,
Spong [216] used potential energy shaping and passivity-based feedback to
render passive gaits slope invariant. In particular, the robot in closed loop
then admitted provably asymptotically stable periodic walking motions on ﬂat
surfaces, upwardly sloped surfaces, and down larger slopes than was possible
without feedback control, all with a larger basin of attraction than was possi-
ble when walking passively down a shallow slope. Spong and Bullo [216,217]
have since extended the result to a class of three-dimensional walkers of arbi-
trary DOF; the stability of the associated periodic walking motions is carefully
proved and the role of symmetry has been clariﬁed.
The studies just cited are important because they represent pioneering at-
tempts to move away from trajectory tracking and the ZMP. Instead of the
periodicity of the robot’s motion coming from an external clock-driven source,
a controller has been designed so that the interaction of the robot with the
walking surface intrinsically produces a stable limit cycle, analogous to the
stable periodic motion exhibited by a van der Pol oscillator, and much more in
line with the pioneering work of Raibert on the hopper. An additional impor-
tant point represented by the work of Spong is the emphasis on establishing
analytically—and not through simulations—the existence and asymptotic sta-
bility of a periodic motion.
These studies also have a signiﬁcant shortcoming, namely the assumption
of full actuation in single support, which limits the motion to ﬂat-footed
walking. Moreover, the required ground reaction forces to maintain the foot
ﬂat on the ground have not been not analyzed. In order to move beyond ﬂat-
footed walking, underactuation must be addressed, which makes the control
law design and analysis considerably more diﬃcult.
Chevallereau, Aoustin, and Formal’sky developed a systematic method for
computing periodic solutions for a biped model with one degree of underactua-
tion in single support [45]. Later work addressed optimal reference trajectories
for both walking and running [44].
10For example, to achieve an upright posture, one may imagine a virtual sky hook attached
to the head of the robot, holding the body upright.
One must then compute feasible
actuator torques at the joints to achieve the eﬀect of the virtual force supplied by the sky
hook. Clearly, such intuitive notions may work well for quasi-static tasks, but for more
dynamic tasks where one must simultaneously deal with the unilateral forces at the leg
ends and stability, more systematic methods are required.
© 2007 by Taylor & Francis Group, LLC

Introduction
23
The ﬁrst control law design that analytically established the stability of the
walking motion of an underactuated, powered biped as an asymptotically sta-
ble periodic orbit was provided by Grizzle, Plestan, and Abba [97–99] in the
context of a three-link planar biped. The robot consisted of two legs without
knees and a torso, with actuation between each leg and the torso, and no
actuation between the leg ends and ground. The robot thus had one degree
of underactuation in single support. The key innovation was the use of feed-
back control to impose holonomic constraints on the robot’s motion during
the single support phase. When combined with a continuous ﬁnite-time con-
verging controller, the existence and stability of an orbit could be established
with a one-dimensional Poincar´e map, though this map had to be computed
numerically. Plestan et al. extended the control method and illustrated it
on a simulation model of RABBIT. In [8], Aoustin and Formal’sky also used
holonomic constraints to control a simulation model of RABBIT. In closely
related work, Ono, Takahashi, and Shimada [169] successfully controlled dy-
namic walking in a four-link, planar biped prototype with locking knees by
using the single actuator at the hip to impose a holonomic constraint between
the crotch angle (the angle between the legs) and the swing leg tibia angle
(see also [170] where this idea is applied to the Acrobot). Using this method,
their 0.8 m biped successfully walked at 0.29 m/s.
In the above work, the holonomic constraints were imposed during the single
support phase without regard to the impacts that occur at double support. A
key contribution was made by Westervelt, Grizzle, and Koditschek [244,245]
where they placed the single support phase and the impact phase on more
equal footing. This work recognized that the holonomic constraints were cre-
ating an invariant surface in the continuous phase of the model, and it showed
how to design the constraints so that the surface became invariant under the
impact model as well. The resulting notion of hybrid invariance—being in-
variant under the continuous part of the model as well as the discrete part—
yielded the concept of the hybrid zero dynamics (HZD), a low-dimensional
submodel of the closed-loop hybrid robot model. The HZD led to fast algo-
rithms for designing the holonomic constraints in order to minimize torque
requirements, for example, and subject to meeting the natural unilateral con-
straints associated with bipedal locomotion. Very successful implementations
of the method on RABBIT were reported by Chevallereau et al. [43] and by
Westervelt, Buche, and Grizzle [241,242]. This body of work has been followed
by extensions to running in an underactuated biped by Chevallereau, West-
ervelt, and Grizzle [50,51]; related experiments by Morris et al. are reported
in [163]. Work by Choi and Grizzle on robots with feet allows both fully actu-
ated and underactuated phases in the walking gait [54]. The work of Morris
and Grizzle removed the need to use a ﬁnite-time converging controller [161].
Song and Zefran [211,212] have developed a general computational frame-
work for the stabilization of periodic orbits in nonlinear systems with impulse
eﬀects. The results have been illustrated through simulations on planar and
3D robot models.
© 2007 by Taylor & Francis Group, LLC

24
Feedback Control of Dynamic Bipedal Robot Locomotion
1.4
Feedback as a Mechanical Design Tool: The Notion
of Virtual Constraints
Successful control design must address the challenges in legged robots that
arise from the many degrees of freedom in the mechanisms, the intermittent
nature of the contact conditions with the environment, multiple phases or
hybrid nature of the models, and underactuation. Since walking (and run-
ning) can be viewed as a periodic solution of the robot model, the method
of Poincar´e sections is the natural means to study asymptotic stability of
a walking cycle. Due to the complexity of the associated dynamic models,
however, this approach has had limited success. One of the contributions of
this book is to show that a control strategy can be designed in a way that
greatly simpliﬁes the application of the method of Poincar´e to a class of biped
models, and in many cases, to reduce the stability assessment problem to the
calculation of a scalar map. Our philosophy is that if stability analysis can
be rendered suﬃciently simple, then it becomes possible to eﬃciently explore
a large set of asymptotically stable gaits in order to ﬁnd one that meets ad-
ditional performance objectives, such as minimum energy consumption per
distance traveled for a given average speed, or minimum peak-actuator power
demand.
Consummate with the hybrid nature of biped models, the controllers we de-
velop will be hybrid, with continuous-time feedback signals applied in stance
and/or ﬂight phases, and discrete (or event-based) updates of controller pa-
rameters performed at transitions between phases. The controller designs will
use two principles that are ubiquitous in nonhybrid systems, namely invariance
and attractivity, with the notion of invariance being extended to hybrid sys-
tems so as to address the discrete transitions as well as the continuous phases.
Hybrid invariance will lead to the creation of a low-dimensional hybrid subsys-
tem of the full-dimensional closed-loop system. The low-dimensional hybrid
subsystem is called the hybrid zero dynamics (HZD). Attractivity will mean
that trajectories of the full-dimensional closed-loop system converge locally
and suﬃciently rapidly to those of the hybrid zero dynamics so that existence
and stability of periodic walking and running motions can be restricted to the
study of the hybrid zero dynamics. The Poincar´e return map for the hybrid
zero dynamics will turn out to be one-dimensional.
1.4.1
Time-Invariance, or, Self-Clocking of Periodic Motions
The controller designs that we propose for walking will not involve trajectory
tracking. Why? One reason is that time-varying, nonlinear, hybrid systems
are extremely hard to analyze. Here is another reason: In a controller based
upon tracking, if a disturbance aﬀects the robot and causes its motion to be
retarded with respect to the planned motion, for example, the feedback system
© 2007 by Taylor & Francis Group, LLC

Introduction
25
(a)
(b)
(c)
Figure 1.10. Virtual Constraints in a simpler context. (a) Piston constrained
to move in a cylinder; this is a one degree of freedom mechanical system. (b)
Piston without the constraints; this is a three degree of freedom mechanical
system. (c) Hypothetical, Rube Goldberg realization of a piston constrained
via additional links to have the kinematics of a piston in a cylinder; the arrows
represent the two cranks rotating synchronously in opposite directions. By
using virtual constraints to achieve link coordination on a bipedal robot, dif-
ferent gaits can be more easily programmed than if the links were coordinated
by hardware constraints.
is obliged to play catch up in order to regain synchrony with the reference
trajectory. Presumably, what is more important is the orbit of the robot’s
motion, that is, the path in state space traced out by the robot, and not the
slavish notion of time imposed by a reference trajectory (think about how
you respond to a heavy gust of wind when walking). A preferable situation,
therefore, would be for the robot in response to a disturbance to converge back
to the periodic orbit, but not to attempt otherwise re-synchronizing itself with
time. One way to achieve this is by parameterizing the orbit (i.e., the walking
motion) with respect to (a scalar-valued function of) the state of the robot,
instead of time [14, 98, 244]. In this way, when a disturbance perturbs the
motion of the robot, the feedback controller can focus solely on maintaining
limb positions and velocities that are appropriate for that point of the orbit,
without the additional burden of re-synchronizing with an external clock. As
a bonus, the controller is time invariant, which helps analytical tractability.
1.4.2
Virtual Constraints
A concept we will use over and over again in our feedback designs is to asymp-
totically impose holonomic constraints on a dynamic system through feed-
back control. This idea has a long history, but its development in nonlinear
control theory, which is what we will use, is primarily due to Byrnes and
Isidori [31,32,128]. We introduce the idea by considering something less com-
© 2007 by Taylor & Francis Group, LLC

26
Feedback Control of Dynamic Bipedal Robot Locomotion
plicated than a biped.
Figure 1.10(a) depicts a planar piston in an open
cylinder. The system has one DOF, which means that a model can be given
in terms of the angle of the “crank,” θ1, and its derivatives. Figure 1.10(b)
represents the planar piston without the constraints imposed by the walls of
the cylinder. The system now has three degrees of freedom involving three
coupled equations in the angles θ1, θ2, θ3, and their derivatives. Only one de-
gree of motion freedom remains when two constraints are imposed: (a) the
center of the piston lies always on a vertical line passing through the rota-
tion point of the crank and (b), the angle of the piston head is horizontal
throughout the stroke. Mathematically, this is “equivalent” to imposing
0 = L1 cos(θ1) + L2 cos(θ1 + θ2),
(1.3a)
π = θ1 + θ2 + θ3,
(1.3b)
where L1 is the length of the crank, and L2 is the length of the second link (due
to the existence of multiple solutions, one must choose the solution correspond-
ing to the piston being above the crank). These two constraints can be im-
posed through the physical means of the cylinder walls shown in Fig. 1.10(a),
or, through the use of additional links as shown in Fig. 1.10(c).
If the system is appropriately actuated, the constraints can also be asymp-
totically imposed through feedback control. To see this, assume that the joints
θ2 and θ3 are actuated. Deﬁne two outputs in such a way that zeroing the
outputs is equivalent to satisfying the constraints; for example
y1 = L1 cos(θ1) + L2 cos(θ1 + θ2),
(1.4a)
y2 = θ1 + θ2 + θ3 −π.
(1.4b)
The constraints will then be asymptotically imposed by any feedback con-
troller that asymptotically drives y1 and y2 to zero; for the design of the
feedback controller, one could use computed torque, PD control, etc.
When the outputs (1.4) are zeroed, the actuated joint angles become im-
plicit functions of the unactuated joint angle. Sometimes it is more convenient
to relate the actuated joint angles to the unactuated angle in an explicit form.
As long as L1 < L2, the constraints (1.3) can also be rewritten as explicit
functions of the crank angle, θ1, per
θ2 = π −θ1 −arccos
L1
L2
cos(θ1)

,
(1.5a)
θ3 = arccos
L1
L2
cos(θ1)

,
(1.5b)
leading to the alternative output functions
y1 = θ2 −

π −θ1 −arccos
L1
L2
cos(θ1)

,
(1.6a)
y2 = θ3 −arccos
L1
L2
cos(θ1)

.
(1.6b)
© 2007 by Taylor & Francis Group, LLC

Introduction
27
We have used both explicit and implicit forms of the constraints when con-
trolling a biped.
When constraints are imposed on a system via feedback control, we call
them virtual constraints11 [35,43]. The planar three DOF piston of Fig. 1.10(b)
can be virtually constrained to achieve asymptotically the same kinematic be-
havior as the one DOF piston in Fig. 1.10(a); the resulting dynamic models
are diﬀerent because the constraint forces are applied at diﬀerent points of the
3 DOF piston.12 The virtual constraints can be imposed through the implicit
constraints given in (1.3) or the explicit constraints in (1.5). In the case of a
bipedal robot, the advantage of imposing the constraints on the mechanism
virtually (i.e, via feedback control) rather than physically (i.e, through com-
plicated couplings between the links or the environment), is evident: the robot
can then be “electronically reconﬁgured” to achieve diﬀerent tasks, such as
walking at diﬀerent speeds, going up stairs, and running.
The above discussion has focused on the aspects of a model that can be
described by diﬀerential equations.
As such, a very important feature of
bipedal locomotion has been ignored, namely, impacts [125]. Suppose that
during the swing phase of a given step, the time evolution of a robot under
feedback control is respecting a set of virtual constraints. At the end of the
step, the impact map comes into play when the swing leg contacts the ground,
providing a new initial condition for the ensuing step. In general, there is no
reason for the new initial condition to satisfy the virtual constraints! In this
case, the feedback controller will have to expend eﬀort to rezero the outputs
encoding the virtual constraint during the swing phase, only to have the next
impact once again push the robot’s state oﬀthe constraint surface. Hence,
when designing virtual constraints, some care should be taken to account for
the impacts. This aspect of the theory requires an important extension of the
classical notion of the zero dynamics of a nonlinear control system [31,32,128].
Bipedal robots are fundamentally hybrid systems and a theory of their control
must be hybrid as well.
11The term “virtual constraints” was coined by Carlos Canudas de Wit.
12This important point will be illustrated fully on the Acrobot in Chapter 5.
© 2007 by Taylor & Francis Group, LLC


2
Two Test Beds for Theory
2.1
RABBIT
2.1.1
Objectives of the Mechanism
The RABBIT test bed shown in Fig. 2.1 is the result of a joint eﬀort by
several French research laboratories, encompassing mechanical engineering,
automatic control, and robotics [26]; the University of Michigan joined in the
control eﬀort in late 1998, as the result of a sabbatical in Strasbourg, France.
The eﬀort was funded by the CNRS and the National Research Council, with
the following primary objectives:
• Study powered (i.e., actuated) bipedal robot locomotion, as opposed to
passive (i.e., unactuated) locomotion, so that the robot would be able to
perform a wide range of gaits on a ﬂat surface, with various step lengths
and average speeds, and study whether feedback control would lead to
stable locomotion with a large basin of attraction.
• Study quasi-statically unstable phases of motion that have been ignored
in most powered walking robots.
• Understand the inﬂuence of the mechanical and control design choices
on the robot’s locomotion.
• To be able to walk and to run. Walking robots typically use rigid links
and joints, while hoppers (which have a ﬂight phase) usually employ
springs to store and release energy. The decision was made to design a
robot with rigid links and joints and to make it walk and run.
The End Notes provide a detailed history of the RABBIT project.
RABBIT’s lateral stabilization is ensured by a rotating bar, and thus only
2D motion in the sagittal plane is considered. Except for this limitation, the
prototype captures the main diﬃculties inherent in this type of nonlinear sys-
tem: underactuation (no feet), variable structure (the state dimension varies
as a function of the motion phase), and state jumps (sudden state variations
resulting from impacts with the ground). Asymptotically stable locomotion
is thus only achievable through a detailed study of the robot’s full dynamics,
including impact phases.
29
© 2007 by Taylor & Francis Group, LLC

30
Feedback Control of Dynamic Bipedal Robot Locomotion
Figure 2.1. Photo of RABBIT. The robot was designed to facilitate the de-
velopment of theoretically sound control algorithms for walking and running.
RABBIT is located at the Automatic Control Laboratory of Grenoble (LAG),
France. See the End Notes for a detailed history of the RABBIT project.
2.1.2
Structure of the Mechanism
RABBIT was conceived to have the simplest mechanical structure that is still
representative of human walking. The requirement of mechanical simplicity
naturally led to restricting its motion to the sagittal plane, with lateral stabi-
lization being achieved by external means. However, many of the other design
decisions that went into the prototype are less obvious, involving numerous
tradeoﬀs to achieve dynamic performance, scientiﬁc objectives, simplicity, and
robustness at a cost compatible with a university budget. This section gives
an overview of the key design decisions that went into the conception and con-
struction of RABBIT. Additional photographs of the mechanism are available
at [26,43]. Some of the components are speciﬁed in Table 2.1.
Work conducted in recent years on passive bipedal walking has shown that
it is possible to design three-dimensional, anthropomorphic robots that can
walk stably down a sloped surface without any actuation whatsoever [59,153]!
One must therefore reﬂect on the essential role of each link in the design of
a walking mechanism, and, in particular, one must question whether a given
joint needs to be actuated or not.
Numerous studies on controlled bipedal robots have shown that actuation
of the hips and knees is essential for providing locomotive power to the robot
for walking on a ﬂat or upwardly sloped surface, and for ensuring clearance
of the swing leg during a step. However, the case for including actuation at
the ankles is less clear. From the start of the RABBIT project, one of the
goals was to demonstrate that actuated ankles are not absolutely necessary
for the existence of asymptotically stable locomotion, and thus RABBIT has
© 2007 by Taylor & Francis Group, LLC

Two Test Beds for Theory
31
no feet. Without actuated ankles, lighter feet can be designed, which is more
eﬃcient for walking and running. If the robot can still be shown to achieve
stable walking or running over a wide range of speeds on ﬂat ground, then ac-
tuation of the ankles must be justiﬁed on the basis of improved traction with
the walking surface, better adaptability over nonsmooth surfaces, or for ame-
liorating the shocks associated with the feet impacting the ground. Finally,
without feet, the ZMP principle is not applicable, and thus underactuation
must be explicitly addressed in the feedback control design, leading to the
development of new feedback stabilization methods.
For the RABBIT project, a mechanism design was sought that would enable
running as well as walking. Because it was also desired that the robot could
perform anthropomorphic gaits, RABBIT had to have at least a hip and
two knees, giving a minimum of four links.
For the robot to be able to
carry a load, a torso was necessary, making a total of ﬁve links. RABBIT is
thus a seven-degree-of-freedom mechanism (when there is no contact with the
ground), with four degrees of actuation. In the upright position, with both
legs together and straight, the hip is 80 cm above the ground and the tip
of the torso is at 1.43 m. RABBIT’s total mass is 32 kg. See Table 6.3 on
page 177 for the lengths, masses, and inertias of each link of the robot.
2.1.3
Lateral Stabilization
Without active lateral stabilization [143], a biped walker can still be designed
to maintain its lateral stability by means of “laterally pointing feet,” that is,
bars or plates attached at the leg ends that extend laterally and prevent the
robot from tipping over sideways [59, 152, 153]. But in the case of a runner,
where a ﬂight phase exists (i.e., ballistic motion—no contact with the walking
surface), some means is required to maintain lateral stability. In order for
this external stabilization device not to limit the displacement of the robot,
the choice of a circular path was made. Hence, the robot is guided around a
central column by means of a boom; see Fig. 2.2. The same solution for lateral
stabilization had been implemented in the design of Kenkyaku [82], Meltran
II [133], and robots in the MIT Leg Lab [178,182]. The robot is attached to
the radial bar via a revolute joint that is aligned with the axes of the hips,
and it is attached to the central column with a universal joint.
With this lateral support device, the robot’s sagittal plane is tangent to
a sphere centered on the universal joint. As explained in Fig. 2.3, it follows
that the distance between the stance leg end and the central column must
be allowed to vary with the position of the hip. To permit frictionless radial
displacement of the supporting leg end, wheels directed in the frontal plane
(i.e., normal to the sagittal plane) are used. In this way, no mobility of the leg
end exists in the sagittal plane of the robot, and therefore, with a suﬃciently
long boom (the nominal boom length is two meters), the robot’s motion is
tangential to the sphere can be accurately modeled as that of a perfectly
planar robot.
© 2007 by Taylor & Francis Group, LLC

32
Feedback Control of Dynamic Bipedal Robot Locomotion
Figure 2.2. RABBIT’s setup, which includes a boom to constrain the robot’s
path to a circle. The boom is attached at the robot’s hip, via a revolute joint.
The boom only provides lateral stabilization; it does not prevent the robot
from falling forward, backward, or down. The counter balance can be used
to oﬀset the weight of the lateral stabilization bar or to modify the eﬀective
gravitational ﬁeld. Not shown are the dSPACE module and power electronics
that are mounted on top of the central tower.
1
2
Figure 2.3. Top view of RABBIT’s circular walking path. To see why wheels
in the frontal plane are necessary on the leg ends, consider the robot when
the hip is in position 1, and the stance leg is in front of the robot, as marked
by the solid dot. The leg end must lie on the robot’s sagittal plane, which
is tanget to the circle, and thus the leg end is not on the circle. However,
as the robot advances to point 2 where the hips are now over the stance leg
end, the leg end now must touch the circle as shown by the unﬁlled dot. This
mobility is supplied by a wheel that is directed normal to the sagittal plane
of the robot. A related but less signiﬁcant eﬀect is associated with changes in
the height of the hip; this bit of geometry is left to the reader.
© 2007 by Taylor & Francis Group, LLC

Two Test Beds for Theory
33
2.1.4
Choice of Actuation
Specifying the actuation is a key step in the design process of a robot. This
includes the choice and sizing of actuation technology. The use of electric
motors allows for simpler low-level joint control, higher bandwidth, and easier
construction than hydraulic or pneumatic drives. The choice of the type of
electric motor usually comes down to quality measures, such as power-to-
weight ratio. The project designers chose DC motors with Samarium Cobalt
magnets, though nearly identical performance in terms of torque density and
peak torque could have been had with brushless motors. A gear reducer and
belt were used to connect the motors to each of the four actuated joints. The
motors for the knees were mounted as close as possible to the hips in order to
minimize the inertia of the legs about the hip axes; this decreases the coupling
in the dynamic model as well as the required motor torques.
2.1.5
Sizing the Mechanism
Once the motor technology was selected, sizing was determined on the basis
of dynamic simulations and oﬄine trajectory optimization [1,38]. Indeed, in
order to check if the proposed structure would be able to walk and run, a
simulation study was conducted. Feasible trajectories were computed, along
with the torque needed to achieve them in open loop. One diﬃculty is that in
both ﬂight and single support, RABBIT is underactuated. During the single
support phase, the degree of underactuation is one (ﬁve degrees of motion
freedom due to the constraint that the stance leg end does not slip, and four
actuators), while during the ﬂight phase, the degree of underactuation is three
(seven degrees of motion freedom and four actuators). Hence, even though
a given motion of the robot may be kinematically realizable, it may not be
dynamically feasible [29], so a kinematic analysis combined with an inverse
torque model is deﬁnitely not suﬃcient for determining possible walking and
running motions.
Generally speaking, it is desirable that the robot be able to walk and run
eﬃciently, in the sense that the energy cost per distance traveled for a given
motion will be as small as possible.
Thus, dynamic optimization [49] was
used to compute optimal walking and running trajectories, assuming nominal
values for the mechanical parameters as well as for the motor characteristics,
speciﬁcally their torque and speed limits.
Reaction forces at the leg ends
were calculated to check that all contact conditions were met (the stance
leg remains in contact with the walking surface and does not slip). These
calculations provided for each joint the torque-speed curve as a function of
walking and running speed, as illustrated in Figs. 2.4 and 2.5. By carrying out
this analysis for a wide range of walking and running speeds, it was possible
to determine the total operating range required of each motor, and thereby
arrive at its required size. These speciﬁcations were then matched to oﬀ-the-
shelf components, both for the motors and the gear reducers. In the end,
© 2007 by Taylor & Francis Group, LLC

34
Feedback Control of Dynamic Bipedal Robot Locomotion
Figure 2.4. Plot of motor speed versus torque for an optimal walking motion
of RABBIT at 0.75 m/s; the gear ratio is 50:1.
Figure 2.5. Plot of motor speed versus torque for an optimal running motion
of RABBIT at 1.2 m/s; the gear ratio is 50:1.
© 2007 by Taylor & Francis Group, LLC
0
1
2
3
0
1000
2000
3000
4000
Torque (Nm)
Ve oc ty (rev/m n)
Knee Motors
0
1
2
3
0
1000
2000
3000
4000
Torque (Nm)
Ve oc ty (rev/m n)
Hip Motors
0
1
2
3
0
1000
2000
3000
4000
Torque (Nm)
Ve oc ty (rev/m n)
Knee Motors
0
1
2
3
0
1000
2000
3000
4000
Torque (Nm)
Ve oc ty (rev/m n)
Hip Motors

Two Test Beds for Theory
35
RABBIT was designed to be able to walk with an average forward speed of
at least 5 km/h and to run at more than 12 km/h.
2.1.6
Impacts
An impact or shock occurs in the majority of cases when the swing leg contacts
the ground. The only way to avoid a shock is for the velocity of the leg end to
be zero at the contact moment, which is not feasible in practice. Shocks have
obvious deleterious eﬀects on the durability and life of a mechanical system.
The most aﬀected components are the bearings, gear-reducers, and sensors. It
is therefore indispensable from the beginning to plan for a source of compliance
in the system in order to prevent the transmission of large shocks to the most
sensitive parts. The magnitude of the shock is determined by the nature of
the walking surface (hard, soft, absorbing) and the material used at the end
of the leg. The frontal wheels on the leg ends were therefore constructed of a
stiﬀ, shock absorbing, polymer. The belts between the motors and the gear
boxes were designed to provide additional protection.
2.1.7
Sensors
The speed of response or bandwidth of each axis of the robot is determined by
the transfer function of the mechanical powertrain (motors, gears, and belts)
and the power ampliﬁers that drive each motor. In the case of RABBIT, the
approximate bandwidth of the mechanical portion of each actuated joint is
12 Hz, and approximately 250 Hz for the ampliﬁers.
Because RABBIT is an experimental apparatus, a maximal sensor set was
installed. The four actuated joints of the robot are each equipped with two
encoders to measure angular position; velocity must be calculated from posi-
tion. One encoder is attached directly to the motor shaft, while the second
is attached to the output shaft of the gear-reducer; this conﬁguration allows
any compliance between the motor and the joint angle to be detected, though
subsequent experimentation has shown that the connection is adequately rigid
for control purposes. Identical encoders are used at each joint. The mecha-
nism has three additional encoders. One measures the angle of the torso with
respect to a vertical axis established by the central column around which
RABBIT walks.
The second measures the horizontal (surge) angle of the
stabilizing bar with respect to the central column; this allows the distance
traveled by the robot to be computed. The ﬁnal encoder measures the pitch
angle of the stabilizing bar, which allows the height of the hips to be mea-
sured; in single or double support this information is redundant, but when
both feet are oﬀthe ground, as in running, it is not.
The robot was initially equipped with two force sensors, one at the end
of each leg, to measure the tangential and normal components of the forces
exerted at the contact of the robot and the ground. These turned out to be
insuﬃciently robust, and were replaced with contact switches. The support
© 2007 by Taylor & Francis Group, LLC

36
Feedback Control of Dynamic Bipedal Robot Locomotion
Table 2.1. Components used in RABBIT.
Component
Model
Manufacturer
(Speciﬁcation)
DC motors
RS420J
Parvex SA,
Motor current drives
RS420 RTS10/20-60
Dijon, France
Motor incremental
C4 (250 counts/rev)
encoders
Joint absolute encoders
CHM 506 P426R/8192/16
Ideacod,
(8192 counts/rev)
Strasbourg, France
Central tower
GHM5
incremental encoders
Gear Reducers
HFUS-2UH, size: 25
Harmonic Drive
(ratio: 1/50)
Technologies,
Peabody, MA, US
Real-time Controller
DS1103
dSpace, Paderborn,
(400 MHz PowerPC 604e
DSP)
Germany
leg and double support phases are easily distinguished through the positions
of the contact switches. Estimating contact moment through swing leg height
as determined by the position measurements is not suﬃciently accurate.
2.1.8
Additional Details
After the robot was built, its link-parameter values were identiﬁed by a group
associated with the project and are given in Table 6.3, with the measurement
conventions given in Fig. 6.14.
For a real-time control platform, RABBIT uses a dSPACE DS1103 sys-
tem. With the DS1103 system, run-time software is created by automatic
translation and cross-compiling of Simulink diagrams for the system’s 400
MHz PowerPC 604e DSP, allowing the real-time controller software to be
developed in a high-level language. This obviates the need for low-level I/O
programming and facilitates debugging. In addition, the system provides low-
level computation, digital-to-analog and analog-to-digital conversion, as well
as a user interface, all in a single package.
© 2007 by Taylor & Francis Group, LLC

Two Test Beds for Theory
37
Figure 2.6. Photo of ERNIE walking on a treadmill. ERNIE was designed
to have morphology that is similar to RABBIT’s, to allow the addition of
parallel joint compliance at the knees, and to walk on a treadmill. ERNIE is
located at the Locomotion and Biomechanics Laboratory at the Department
of Mechanical Engineering, The Ohio State University, Columbus, OH, USA.
2.2
ERNIE
2.2.1
Objectives of the Mechanism
The ERNIE test bed, shown in Fig. 2.6, was designed at The Ohio State
University by Ryan Bockbrader, Adam Dunki-Jacobs, Jim Schmiedeler, and
Eric Westervelt during the period of September 2005 to January 2006. The
primary motivation for the design and construction of ERNIE was to provide
a scientiﬁc and educational platform at OSU for the development of novel
control strategies for bipedal walking and running. The general morphology
of ERNIE was inspired by that of RABBIT: two legs with knees, no feet, and a
torso. Nevertheless, there are a number of unique features in the mechanical
design of ERNIE, and these impact the range of experiments that can be
carried out as well as controller design and implementation.
ERNIE’s legs are modular:
By making ERNIE’s legs modular, the leg
lengths, the leg ends, and the joint oﬀsets may be changed with minimal
redesign. In this way, modularity facilitates the study of robot asymmetry,
walking with feet, etc.
© 2007 by Taylor & Francis Group, LLC

38
Feedback Control of Dynamic Bipedal Robot Locomotion
ERNIE’s design uses carbon ﬁber:
ERNIE’s boom and legs are made
primarily of carbon ﬁber, whereas RABBIT’s boom is made of tubular steel
and its legs are made of aluminium. Connections between ERNIE’s carbon
ﬁber tubes are made with aluminum plugs epoxied into the tubing’s ends.
Using carbon ﬁber in place of aluminium and steel reduces mass and increases
rigidity. Decreasing the mass of the legs is important because it lowers the
torque required to accelerate the legs, thus enabling the use of smaller motors.
All of ERNIE’s actuators are located in the torso:
Locating all of the
actuators in the torso reduces the mass that is distal to the robot’s center of
mass. The result is lighter legs, thus enabling smaller motors to be used. The
downside of locating the actuators in the body is that the needed transmissions
are more complicated than locating the knee actuators on the femurs, as is
the case with RABBIT. ERNIE’s transmissions consist of drive pulley’s at the
motors and joints connected by polymer-coated steel cabling. Idler pulleys are
used at the hip for the knee joints.
Parallel compliance may be easily added at ERNIE’s knees:
The
addition of compliance at the knees in parallel with the actuators has the
potential to reduce the peak power requirements of walking and running, thus
enabling more aggressive motions to be achieved with a given set of actuators.
ERNIE’s joints have relatively low friction:
Compared with the joints
of RABBIT, ERNIE’s joints have low friction.
The friction of RABBIT’s
joint’s drivetrains is due to the use of harmonic drives. ERNIE’s drivetrains
use gear reducers with staged planetary gear sets, which have considerably
less friction.
2.2.2
Enabling Continuous Walking with Limited Lab Space
Due to limited lab space, ERNIE was designed to walk on a treadmill. ERNIE’s
treadmill is a split-track treadmill with force plates under each belt.
The
treadmill was manufactured by the Bertec Corporation, Columbus, Ohio,
USA. Among the treadmill’s many features, the positions of the individual
tracks may be directly measured, and the speeds of the tracks may be set in-
dependently. Since the tracks’ belts have signiﬁcant lateral ﬂexibility, ERNIE
does not require wheels at its leg ends as does RABBIT; see Fig. 2.3.
So that ERNIE may walk either on the ground or on a treadmill, the mech-
anism that aﬃxes ERNIE’s boom to the wall allows the height of the attach-
ment point (sphere center) to be adjusted. Aﬃxing the boom to the wall,
however, prevents the use of a counterbalance.
© 2007 by Taylor & Francis Group, LLC

Two Test Beds for Theory
39
Figure 2.7. Plot of motor speed versus torque for an optimal walking motion
of ERNIE at 0.6 m/s; the gear ratio is 91:1.
Figure 2.8. Plot of motor speed versus torque for an optimal running motion
of ERNIE at 0.8 m/s; the gear ratio is 91:1.
2.2.3
Sizing the Mechanism
ERNIE’s actuation was chosen based upon simulations of a detailed model
of the robot in closed-loop with a feedback controller.1 With this technique,
the eﬀects of disturbances and perturbations on power consumption could be
studied. Using these simulations, the design of ERNIE was iterated until the
needed components’ speciﬁcations matched those that were available oﬀthe
shelf. Typical torque-speed curves for walking and running corresponding to
ERNIE’s ﬁnal design are given in Figs. 2.7 and 2.8.
2.2.4
Impacts
To ameliorate the eﬀects of shocks, ERNIE’s aluminum hemispherical leg ends
are covered with half of a racquetball. In addition to being shock-absorbing,
1Recall that RABBIT was sized on the basis of open-loop trajectory optimization. When
RABBIT was designed, a method for controlling it had not yet been invented!
© 2007 by Taylor & Francis Group, LLC
0
1
2
3
0
5000
10000
Ve oc ty (rev/m n)
Torque (Nm)
Hip Motors
0
1
2
3
0
5000
10000
Knee Motors
Ve oc ty (rev/m n)
Torque (Nm)
0
1
2
3
0
5000
10000
Ve oc ty (rev/m n)
Torque (Nm)
Hip Motors
0
1
2
3
0
5000
10000
Knee Motors
Ve oc ty (rev/m n)
Torque (Nm)

40
Feedback Control of Dynamic Bipedal Robot Locomotion
the racquetball has a high coeﬃcient of friction, which helps prevent foot
slippage. Compliance in the transmissions protect the gear reducer’s teeth.
2.2.5
Sensors
As in the case of RABBIT, ERNIE has a maximal sensor set with sensors
located at the same locations as RABBIT. Unlike RABBIT, however, the
sensors at ERNIE’s joints and the sensor that measures ERNIE’s absolute
orientation are rotary potentiometers. In addition to being lighter, poten-
tiometers are less expensive, have greater shock tolerance, and require less
cabling than encoders.
Force sensitive resistors are used at the leg ends to detect ground contact.
Since force sensitive resistors suﬀer from signiﬁcant drift, their signals are nu-
merically diﬀerentiated to make easier the detection of impact events. Force
sensitive resistors were also used in RABBIT’s running experiments; see Sec-
tion 9.9.
2.2.6
Additional Details
Some of ERNIE’s components are speciﬁed in Table 2.2. Note that published
peak torque capability of the selected motor and gearhead pairs is 28 Nm;
however, experience with these motors and gearhead pairs suggests that the
published component speciﬁcations are extremely conservative and that pro-
ducing peak torques of more than three times the rated value is not a problem.
ERNIE’s total mass is 18.6 kg.
In the upright position, with both legs
together and straight, its hip is 72 cm above the ground and the tip of the
torso is at 1.0 m. See Table 8.2 for a complete list of ERNIE’s parameters,
which were determined from the 3D solid modeling software used in its design.
ERNIE’s real-time control platform is a newer version of the dSPACE
DS1103 system used for RABBIT. ERNIE’s system has increased processor
speed and greater data transfer rate between the host and target computers.
© 2007 by Taylor & Francis Group, LLC

Two Test Beds for Theory
41
Table 2.2. Components used in ERNIE.
Component
Model
Manufacturer
(Speciﬁcation)
Brushless DC motors
EC 45-136212
Maxon Precision
Motor incremental
HEDL 9140
Motors, Inc.
encoders
(500 PPR)
Fall River, MA, USA
Motor gearheads
GP 42C-203125
Brushless servo
B60A40AC
Advanced Motion
ampliﬁers
Controls
Camarillo, CA, USA
Boom encoders
NSO-S10000-2MD-10-050
CUI Inc.
(10000 PPR)
Tualatin, OR, USA
Joint potentiometers
308 NPC (5 kΩ)
Clarostat Sensors
and Controls, USA
Real-time controller
DS1103
dSpace, Paderborn,
(1 GHz PPC 750GX DSP)
Germany
© 2007 by Taylor & Francis Group, LLC


Part II
Modeling, Analysis, and
Control of Robots with
Passive Point Feet
43
© 2007 by Taylor & Francis Group, LLC


3
Modeling of Planar Bipedal Robots with
Point Feet
This chapter introduces dynamic models for walking and running motions of
planar bipedal robots with point feet. The robots are assumed to consist of
rigid links with mass, connected via rigid, frictionless, revolute joints to form a
single open kinematic chain lying in a plane. It is further assumed that there
are two identical subchains called the legs, connected at a common point
called the hip, and, optionally, additional subchains that may be identiﬁed
as a torso, arms, tail, etc. Each leg end is terminated in a point so that,
in particular, either the robot does not have feet, or it is walking tiptoe. A
typical allowed robot is depicted in Fig. 3.1, which is intentionally suggestive
of a human form. All motions will be assumed to take place in the sagittal
plane and consist of successive phases of single support and double support
in the case of walking, or single support and ﬂight in the case of running.
Conditions that guarantee the leg ends alternate in ground contact—while
other links such as the torso or arms remain free in the air—will be imposed
during control design in later chapters. Motions such as crawling, tumbling,
skipping, hopping, dancing, and brachiation will not be studied.
The distinct phases of walking and running motions naturally lead to math-
ematical models that are comprised of distinct parts: the diﬀerential equa-
tions describing the dynamics during a single support phase, the diﬀerential
equations describing the dynamics during a ﬂight phase, and a model that
describes the dynamics when a leg end impacts the ground. For the models
developed here, the ground—also called a walking or running surface—is as-
sumed to be smooth and perpendicular to the gravitational ﬁeld, that is, the
ground is assumed to be ﬂat as opposed to sloped or terraced.1
Impacts with the ground can be compliant or inelastic.2 In a compliant
model, the reaction forces between the ground and the leg ends are often
modeled with nonlinear spring-dampers [24, 149, 194]. For common walking
surfaces—such as a tile ﬂoor, as opposed to a trampoline, the impact duration
1A walking surface that is spatially periodic, such as a uniform ﬂight of stairs or a constant
slope, and compatible with the robot’s workspace, for example, the step height is not too
large, can be addressed with the methods of this book. In particular, a surface of constant
slope is easily addressed; see Section 6.6.3.
2An inelastic model can be rigid (as used in this book) or plastic (beyond the elastic limit,
a material undergoes a permanent shape change called plastic deformation).
45
© 2007 by Taylor & Francis Group, LLC

46
Feedback Control of Dynamic Bipedal Robot Locomotion
ph
H
pv
H
ph
1
pv
1
ph
2
pv
2
Figure 3.1. A typical planar robot model meeting the hypotheses of this
book. For later use, Cartesian coordinates are indicated at the hip and the
leg ends.
or transient phase of the impact model is very short.
The corresponding
diﬀerential equations are numerically very stiﬀand including them can greatly
complicate the simulation and analysis of a walking or running gait; moreover,
determining physically reasonable parameters for a compliant impact model
is itself a very challenging problem. To avoid these diﬃculties, throughout the
book, a rigid (i.e., perfectly inelastic) contact model will be assumed for the
purposes of control design and analysis.3 The rigid contact model of [74,208]
eﬀectively collapses the impact phase to an instant in time. The impact forces
are consequently modeled by impulses, and a discontinuity or jump is allowed
in the velocity component of the robot’s state, with the conﬁguration variables
remaining continuous or constant during the impact. The dynamic models
of walking and running are thus hybrid in nature, consisting of continuous
dynamics and a reinitialization rule at the impact event.
3.1
Why Point Feet?
An important source of complexity in a biped system is the degree of actuation
of the system, or more precisely, the degree of underactuation of the system.
It will be assumed in this part of the book that the legs are terminated in
3The compliant impact model of [176] will be introduced in Chapter 9 for the purpose of
investigating the robustness of a proposed feedback control law.
© 2007 by Taylor & Francis Group, LLC

Modeling of Planar Bipedal Robots with Point Feet
47
points, and consequently, no actuation is possible at the end of the stance
leg.
It follows that the system is underactuated during single support, as
opposed to fully actuated (a control at each joint and at the contact point
with the ground). During the ﬂight phase of a running gait, the system is
underactuated in any case.
One could be concerned that “real robots have feet,” and thus, while the
analysis of point-feet models may be of interest mathematically, it is “mis-
guided for practical robotics.” Hopefully, Part III of the book, which addresses
walking with feet and an actuated ankle, will allay any such misgivings. If
one takes human walking as the defacto standard against which mechanical
bipedal walking is to be compared, then the ﬂat-footed walking achieved by
current robots needs to be improved. In particular, toe roll toward the end
of the single support phase needs to be allowed as part of the gait design.
Currently, this is not allowed speciﬁcally because it leads to underactuation,4
which cannot be treated with the control design philosophy based on tra-
jectory tracking and a quasi-static stability criterion, such as the ZMP; see
Figs. 1.1 and 1.8.
A model of an anthropomorphic walking gait should at least consider a
fully actuated phase where the stance foot is ﬂat on the ground, followed
by an underactuated phase where the stance heel lifts from the ground and
the stance foot rotates about the toe, and a double support phase where
leg exchange takes place; optionally, heel strike and heel roll could also be
included, which would yield a second underactuated phase in the gait. In
either case, a model of walking with a point contact is an integral part of an
overall model of walking that is more anthropomorphic in nature than the
current ﬂat-footed walking paradigm. Because the model with point feet is
simpler than a more complete anthropomorphic gait model, it facilitates the
development of new feedback designs and dynamic stability analysis methods
that are appropriate for moving beyond quasi-static walking.
3.2
Robot, Gait, and Impact Hypotheses
The following comments on terminology are expanded from Chapter 1. The
single support or swing phase is deﬁned to be the phase of locomotion where
only one leg is in contact with the ground.
Conversely, double support is
the phase where both feet are on the ground; see Figs. 1.2 and 1.3. When
only one leg is in contact with the ground, the contacting leg is called the
stance leg and the other is called the swing leg. Walking is then deﬁned as
4When the foot is rotating about the toe, one eﬀectively has a point contact with no
actuation. To see this, take another look at Fig. 3.1.
© 2007 by Taylor & Francis Group, LLC

48
Feedback Control of Dynamic Bipedal Robot Locomotion
alternating phases of single and double support, with the requirement that
the displacement of the horizontal component of the robot’s center of mass
(COM) is strictly monotonic and the swing leg is placed strictly in front of the
stance leg at impact. Implicit in this description is the assumption that the
feet are not slipping when in contact with the ground. The end of a leg, even
when it does not have links constituting a foot, will sometimes be referred to
as a foot.
The robot is said to be in ﬂight phase when there is no contact with the
ground and the displacement of the horizontal component of the robot’s center
of mass is strictly monotonic; sometimes this is referred to as ballistic motion.5
In the ﬂight phase, the robot has two more degrees of freedom than when
it is in the stance phase. In the stance phase, each of the robot’s degrees
of freedom can be identiﬁed with the orientation of a link, while in ﬂight
phase, the robot has an additional two degrees of freedom associated with the
horizontal and vertical displacements of the center of mass within the sagittal
plane. Running is deﬁned as alternating phases of single support, ﬂight, and
(single-legged) impact, with the additional provision that impact does not
occur on the former stance leg, but rather on the former swing leg. Note that
during the ﬂight phase, the notion of swing leg is ambiguous and hence one
refers to the roles the legs held in the previous single support phase.
With this terminology in mind, complete lists of hypotheses are now enu-
merated for the robot model, the desired walking and running gaits, and the
impact model.
Robot with Point Feet Hypotheses
The robot is assumed to be:
HR1) comprised of N rigid links connected by (N −1) ideal revolute joints
(i.e., rigid and frictionless) to form a single open kinematic chain;
furthermore, each link has nonzero mass and its mass is distributed
(i.e., each link is not modeled as a point mass);
HR2) planar, with motion constrained to the sagittal plane;
HR3) bipedal, with two symmetric legs connected at a common point
called the hip, and both leg ends are terminated in points;
HR4) independently actuated at each of the (N −1) ideal revolute joints;
and
HR5) unactuated at the point of contact between the stance leg and
ground.
5There are no external forces, other than gravity, acting on the robot.
© 2007 by Taylor & Francis Group, LLC

Modeling of Planar Bipedal Robots with Point Feet
49
Remark 3.1
The properties of the robot are independent of coordinate
choice, but at times it will be convenient to choose the coordinates such that
HR6) the model is expressed in N−1 body coordinates qb = (q1; · · · ; qN−1)
plus one absolute angular coordinate qN.
Gait Hypotheses for Walking
Conditions on the controller will be imposed and shown to ensure that the
robot’s consequent motion satisﬁes the following properties consistent with
the notion of a simple walking gait:
HGW1) there are alternating phases of single support and double support;
HGW2) during the single support phase, the stance leg end acts as an ideal
pivot, that is, throughout the contact, it can be guaranteed that the
vertical component of the ground reaction force is positive and that
the ratio of the horizontal component to the vertical component
does not exceed the coeﬃcient of static friction;
HGW3) the double support phase is instantaneous and the associated im-
pact can be modeled as a rigid contact [124];
HGW4) at impact, the swing leg neither slips nor rebounds, while the former
stance leg releases without interaction with the ground;
HGW5) in steady state, the motion is symmetric with respect to the two
legs;
HGW6) in each step, the swing leg starts from strictly behind the stance
leg and is placed strictly in front of the stance leg at impact; and
HGW7) walking is from left to right and takes place on a level surface.
In particular, Hypotheses HGW5 and HGW6 impose the swapping of the
roles of the two legs at impact so that walking does not consist of rocking
back and forth on the same support leg. The symmetric nature of the gait
is a natural requirement for a simple walking motion, but is not a necessary
condition for applying the methods of this book. For example, it is possible to
analyze a model of a pathological gait arising from injury or asymmetry. With
small extensions to the methodology of this book, it is possible to analyze a
model with one passive (prosthetic) knee and one actuated knee.
Remark 3.2
Hypotheses HR1 and HR2 imply the robot has (N+2)-degrees
of freedom (DOF) (N joint angles plus the Cartesian coordinates of the hip,
for example). Hypothesis HGW2 implies that in single support, the robot has
N-DOF (the N joint angles, for example). Hypotheses HR4, HR5 and HGW2
imply that in single support, the robot has one degree of underactuation, i.e.,
one less actuator than DOF.
© 2007 by Taylor & Francis Group, LLC

50
Feedback Control of Dynamic Bipedal Robot Locomotion
Gait Hypotheses for Running
Conditions on the controller will be imposed and shown to ensure that the
robot’s consequent motion satisﬁes the following properties consistent with
the notion of a simple running gait:
HGR1) there are alternating phases of single support, ﬂight, and impact;
HGR2) during the single support phase, the stance leg end acts as an ideal
pivot joint, in particular, throughout the contact, it can be guar-
anteed that the vertical component of the ground reaction force is
non-negative and that the ratio of the horizontal component to the
vertical component does not exceed the coeﬃcient of static friction;
HGR3) the center of mass of the robot travels a nonzero horizontal distance
during the ﬂight phase;
HGR4) the ﬂight phase terminates with the former swing leg end impacting
the ground;
HGR5) at impact, the leg end neither slips nor rebounds;
HGR6) in steady state, the motion over successive single support and ﬂight
phases is symmetric with respect to the two legs;
HGR7) running is from left to right and takes place on a level surface.
Rigid Impact Model Hypotheses
An impact occurs when the swing leg contacts the ground.6 The impact is
modeled as a contact between two rigid bodies. There are many rigid impact
models in the literature [12, 23, 24, 124, 174], and all of them can be used to
obtain an expression for the generalized velocity just after the impact of the
swing leg with the walking surface in terms of the generalized velocity and
position just before the impact. The model from [124] is used here for both
walking and running. The model is essentially identical in the two cases. The
one diﬀerence is noted in the list of hypotheses:
HI1) an impact results from the contact of the swing leg end with the
ground;
HI2) the impact is instantaneous;
HI3) the impact results in no rebound and no slipping of the swing leg;
6Recall that in running, this means when the former swing leg (i.e., future stance leg)
impacts the ground.
© 2007 by Taylor & Francis Group, LLC

Modeling of Planar Bipedal Robots with Point Feet
51
HI4) in the case of walking, at the moment of impact, the stance leg lifts
from the ground without interaction,7 while in the case of running,
at the moment of impact, the former stance leg is not in contact
with the ground;
HI5) the externally applied forces during the impact can be represented
by impulses;
HI6) the actuators cannot generate impulses and hence can be ignored
during impact; and
HI7) the impulsive forces may result in an instantaneous change in the
robot’s velocities, but there is no instantaneous change in the con-
ﬁguration.
Remark 3.3
To aid in understanding this last assumption, consider the
following scalar, second-order linear time-invariant system with an impulsive
input at t = t0 > 0,
¨x(t) + a ˙x(t) + bx(t) = cδ(t −t0),
(3.1)
where δ is the unit impulse and a, b, c ∈R. Integrating (3.1) once yields
˙x(t) = ˙x(0) +
 t
0
(−a ˙x(τ) −bx(τ) + cδ(τ −t0)) dτ
(3.2)
= ˙x(0) −ax(t) + ax(0) −
 t
0
bx(τ)dτ + c11(t −t0)
(3.3)
where 11(t) is the unit step function and hence ˙x(t) is discontinuous at t = t0.
Integrating (3.3) yields
x(t) = x(0) +
 t
0
( ˙x(0) −ax(σ) + ax(0)) dσ
−
 t
0
 σ
0
bx(τ)dτ + c11(σ −t0)

dσ
(3.4)
= x(0) + ( ˙x(0) + ax(0)) t −
 t
0
ax(σ)dσ
−
 t
0
 σ
0
bx(τ)dτdσ + c(t −t0)11(t −t0).
(3.5)
Let x and ˙x evaluated at t+
0 (resp., t−
0 ) denote the limits from the right (resp.,
limits from the left) at time t0, and interpret x(t−
0 ) and ˙x(t−
0 ) as the position
7The vertical component of the velocity of the swing leg end must be positive after impact.
© 2007 by Taylor & Francis Group, LLC

52
Feedback Control of Dynamic Bipedal Robot Locomotion
and velocity just before the impulsive input occurs and x(t+
0 ) and ˙x(t+
0 ) as
the position and velocity just after the impulsive input occurs.
Equation
(3.5) shows that x(t+
0 ) −x(t−
0 ) = 0, implying continuity in position across the
impulse (read impact), whereas from (3.3), ˙x(t+
0 ) −˙x(t−
0 ) = c, the magnitude
of the impulsive input, implying a jump in the velocity across the impulse
(read impact).
3.3
Some Remarks on Notation
Throughout this chapter, while developing the dynamic models of walking
and running, the generalized coordinates for the stance (or single-support)
phase will be denoted by (qs; ˙qs) and the generalized coordinates for the ﬂight
phase of running will be denoted by (qf; ˙qf). The importance of distinguishing
between these two phases is evident when walking and running are being
treated in the same chapter. Elsewhere in the book, however, if only walking
is being treated, then there is no longer a compelling need to distinguish
between stance and ﬂight phases, and the generalized coordinates will be
denoted simply by (q; ˙q); the subscript “s” will be dropped in order to simplify
the notation.
In general, a point on the robot (or its center of mass) will be denoted
by its Cartesian coordinates p = (ph; pv) with respect to the inertial frame.
Some points and forces of particular interest are identiﬁed in Fig. 3.2, namely,
the ends of the stance and swing legs, denoted respectively by p1 and p2, the
position of the hips, pH, and the position of the center of mass, pcm. In the
stance phase, each of these points can be expressed as smooth functions of
the generalized conﬁguration variables, qs.
For the ﬂight phase of running, it is natural and always possible—though
not required—to construct generalized coordinates by starting with a set of
generalized coordinates for the stance phase and then appending the Cartesian
position and velocity of a single point on the robot (or its center of mass). In
this case, in order to emphasize its potential role as an independent variable,
we have chosen to denote the point by its “x-y” coordinates, as shown in
Fig. 3.2(c). In particular, the generalized conﬁguration variables for the ﬂight
phase of running will be selected as qf = (qs; xcm; ycm).
Finally, semicolons will be used to form column vectors in-line, for example,
(qs; xcm; ycm) to denote
⎡
⎢⎣
qs
xcm
ycm
⎤
⎥⎦
(3.6)
instead of (q′
s, xcm, ycm)′. The utility of avoiding additional superscripts for
© 2007 by Taylor & Francis Group, LLC

Modeling of Planar Bipedal Robots with Point Feet
53
ph
1
pv
1
ph
2
pv
2
ph
cm
pv
cm
⃗g
(a)
ph
H
pv
H
F T
1
F N
1
F T
2
F N
2
(b)
xcm
ycm
y1
x1
y2
x2
(c)
Figure 3.2. Key position and force nomenclature. For any robot satisfying
HR1–HR5, the Cartesian positions of the leg ends, hip, and center of mass
are identiﬁed, as well as possible forces acting on the leg ends. The position
nomenclature used in (a) and (b) applies to walking whereas the alternative
position nomenclature used in (c) applies to running.
transposes will become clear when the model of the impact phase is treated
in Section 3.4.2. The arguments of a multivariable function will continue to
be separated by a comma.
3.4
Dynamic Model of Walking
This sections develops a mathematical model for the study of a walking gait
of a biped satisfying Robot Hypotheses HR1–HR5, Gait Hypotheses HGW1–
HGW7, and Impact Hypotheses HI1–HI7. An inertial reference frame is as-
sumed to be given and oriented in the standard manner with respect to gravity.
From Hypothesis HGW7, the walking surface is ﬂat, and thus it can be as-
sumed without loss of generality that the ground height is zero with respect
to the inertial frame.
1 = (ph
1; pv
1) denote the posi-
tion of the end of leg-1 with respect to the inertial frame and, similarly, let
p2 = (ph
2; pv
2) denote the position of the end of leg-2.
3.4.1
Swing Phase Model
The swing phase model corresponds to a pinned open kinematic chain. Since
by Hypothesis HGW5, the gait is assumed to be symmetric, it does not matter
which leg end is pinned, so assume it is leg-1. The swapping of the roles of
leg-1 and leg-2 will be accounted for in the impact model of the next section.
Let Qs be the N-dimensional conﬁguration space of the robot when the
stance leg end is acting as a pivot and let qs := (q1; · · · ; qN) ∈Qs be a
© 2007 by Taylor & Francis Group, LLC
As in Fig. 3.2(a), let p

54
Feedback Control of Dynamic Bipedal Robot Locomotion
set of generalized coordinates. The dynamic model is easily obtained with
the method of Lagrange, which consists of ﬁrst computing the kinetic energy
and potential energy of each link, and then summing terms to compute the
total kinetic energy, Ks, and the total potential energy, Vs; see Appendix B.4.
Denote the Lagrangian by
Ls(qs, ˙qs) := Ks(qs, ˙qs) −Vs(qs).
(3.7)
Applying the method of Lagrange (see Appendix B.4.4), the model is written
in the form
Ds(qs)¨qs + Cs(qs, ˙qs) ˙qs + Gs(qs) = Bs(qs)u.
(3.8)
The matrix Ds is the inertia matrix; Cs is the Coriolis matrix; Gs is the gravity
vector; and Bs maps the joint torques to generalized forces. In accordance
with HR4 and HR5, u := (u1; · · · ; uN−1) ∈R(N−1), where ui is the torque
applied between the two links connected by joint-i, and there is no torque
applied between the stance leg and ground. Letting θrel
i (qs) denote the relative
angle of the i −th actuated joint, the matrix Bs is computed as
Bs(qs) :=
⎛
⎜
⎜
⎝
∂
∂qs
⎡
⎢⎢⎣
θrel
1
...
θrel
N−1
⎤
⎥⎥⎦
⎞
⎟
⎟
⎠
′
;
(3.9)
see (B.147). Under HR6, Bs is
Bs =
 IN−1×N−1
01×N−1

,
(3.10)
and, hence, for every qs ∈Qs,
rank Bs(qs) = N −1.
(3.11)
The model is written in state space form by deﬁning
˙x =

˙qs
D−1
s (qs) [−Cs(qs, ˙qs) ˙qs −Gs(qs) + Bs(qs)u]

(3.12)
=: fs(x) + gs(x)u
(3.13)
where x := (qs; ˙qs). The state space of the model is Xs = T Qs. Note that for
each x ∈T Qs, gs(x) is a 2N × (N −1) matrix; its i-th column is denoted by
gsi. Note also that in natural coordinates (qs; ˙qs) for T Qs, gs is independent
of ˙qs, and thus sometimes we abuse notation and write this as gs(qs).
It is clear that not all conﬁgurations of the model are physically compatible
with our notion of the single support phase of walking. For example, with
the exception of the end of the stance leg, all points of the robot should be
© 2007 by Taylor & Francis Group, LLC

Modeling of Planar Bipedal Robots with Point Feet
55
above the walking surface, and for human-like walking, the knees should not
hyperextend. In addition, there are kinetic constraints, such as, for the leg
end to act like a pivot, the forces on the leg end must lie in the static friction
cone, and the normal component of the reaction force must be positive. These
issues will be addressed in the motion design phase of the controller design.
Remark 3.4
A more formal approach to dealing with the issue of “physi-
cally admissible” states of the robot’s model is to deﬁne them through viability
or unilateral constraints [12,24]: these are scalar valued functions of the states,
λi : Xs →R, chosen in such a way that x ∈Xs is admissible if, and only if,
λi(x) ≥0.
3.4.2
Impact Model
The development of the impact model involves the reaction forces at the leg
ends, and thus requires the unpinned or (N + 2)-DOF model of the robot.
Let qs be the generalized coordinates used in the single support model and
complete these to a set of generalized coordinates for the unpinned model by
letting pe = (ph
e; pv
e) be the Cartesian coordinates of some ﬁxed point on the
robot or its center of mass. Using the generalized coordinates qe = (qs; pe),
the method of Lagrange results in
De(qe)¨qe + Ce(qe, ˙qe) ˙qe + Ge(qe) = Be(qe)u + δFext,
(3.14)
where δFext represents the vector of external forces acting on the robot due to
the contact between the swing leg end and the ground. From Hypothesis HI5,
these forces are impulsive, hence the notation δFext. Under Hypotheses HI1–
HI7, (3.14) is “integrated” over the “duration” of the impact to obtain [124]
De(q+
e ) ˙q+
e −De(q−
e ) ˙q−
e = Fext,
(3.15)
where Fext :=
 t+
t−δFext(τ)dτ is the result of integrating the impulsive contact
force over the impact duration, ˙q−
e is the velocity just before the impact and
˙q+
e is the velocity just after the impact; see Remark 3.3. By Hypothesis HI7,
the positions do not change during the impact, and thus q+
e = q−
e . Equation
(3.15) expresses conservation of momentum [124], a point to which we will
return during the control analysis.
By deﬁnition, the velocity just before impact is determined from the single
support model. During the single support phase, pe, the Cartesian coordinate
added to the robot’s body, can be determined from qs; denote this by pe =
Υe(qs). Thus
q−
e =

q−
s
Υe(q−
s )

(3.16)
© 2007 by Taylor & Francis Group, LLC

56
Feedback Control of Dynamic Bipedal Robot Locomotion
and
˙q−
e =

IN×N
∂
∂qs Υe(q−
s )

˙q−
s .
(3.17)
From Hypothesis HI4, Fext is the reaction force at the end of the swing leg,
that is, leg-2. Letting p2(qe) denote the position of the end of the swing leg
with respect to the inertial frame, it follows from the principle of virtual work
that
Fext = E2(q−
e )′F2,
(3.18)
where, E2(qe) =
∂
∂qe p2(qe) and F2 = (F T
2 ; F N
2 ) is the vector of forces acting
at the end of the swing leg. Note that E2(qe) has full rank because p2 can be
written in the form p2(qe) = pe + Υ2(qs), and thus, E2 = [∂Υ2(qs)/∂qs, I2×2].
Equation (3.15) represents (N + 2) equations and (N + 4) unknowns; the
unknowns are ˙q+
e , F T
2 , and F N
2 . The two additional required equations come
from the no slip and rebound condition of Hypothesis HI3, which may be
written as
E2(q−
e ) ˙q+
e = 0.
(3.19)
The combined set of equations (3.15) and (3.19) yields

De(q−
e )
−E2(q−
e )′
E2(q−
e )
02×2
 
˙q+
e
F2

=

De(q−
e ) ˙q−
e
02×1

,
(3.20)
or,

De(q−
e )
−E2(q−
e )′
E2(q−
e )
02×2
 
˙q+
e
F2

=
⎡
⎢⎣De(q−
e )

IN×N
∂
∂qs Υe(q−
s )

02×N
⎤
⎥⎦˙q−
s ,
(3.21)
where q−
e is evaluated with (3.16).
Because De is positive deﬁnite and E2 is full rank, the matrix on the left-
hand side of (3.21) is easily proved to be invertible.8 Solving (3.21) yields

˙q+
e
F2

=
 ¯Δ ˙qe(q−
s )
ΔF2(q−
s )

˙q−
s ,
(3.22)
where,
ΔF2 = −

E2D−1
e E′
2
−1 E2

IN×N
∂
∂qs Υe

(3.23)
8Denote the matrix on the left-hand side of (3.21) by Π. Suppose that ( ˙qe; F2) is in the
(right) nullspace of Π. Then ˙qe = D−1
e
E′
2F2 and E2 ˙qe = 0, which in turn implies that
F ′
2E2D−1
e
E′
2F2 = 0. But, De positive deﬁnite and E2 full rank imply that E2D−1
e
E′
2 is
positive deﬁnite. Hence F2 = 0 and ˙qe = 0. Therefore, Π is invertible.
© 2007 by Taylor & Francis Group, LLC

Modeling of Planar Bipedal Robots with Point Feet
57
and
¯Δ ˙qe = D−1
e E′
2ΔF2 +

IN×N
∂
∂qs Υe

.
(3.24)
The ﬁrst N rows of (3.22) should then be used to reinitialize (3.13), the
state space model of the single support phase, so that the next step may be
undertaken. Since we are assuming a symmetric walking gait, we can avoid
having to use two single support models, one for each leg playing the role of
the stance leg, by relabeling the coordinates at impact. The coordinates must
be relabeled because the roles of the legs must be swapped: the former swing
leg is now in contact with the ground and is poised to take on the role of the
stance leg. Express the relabeling of the generalized coordinates as a matrix,
R, acting on qs with the property that RR = I, i.e., R is a circular matrix.
The result of the impact and the relabeling of the states is then an expression
x+ = Δ(x−)
(3.25)
where x+ := (q+
s ; ˙q+
s ) (resp. x−:= (q−
s ; ˙q−
s )) is the state value just after (resp.
just before) impact and
Δ(x−) :=

Δqs q−
s
Δ ˙qs(q−
s ) ˙q−
s

,
(3.26)
where
Δqs := R
(3.27)
and
Δ ˙qs(q−
s ) := [R 0N×2 ] ¯Δ ˙qe(q−
s ).
(3.28)
Remark 3.5
The validity of the impact model must be checked at each
impact. Upon evaluating (3.23) at an impact, it must be veriﬁed that F N
2 > 0
and |F T
2 | ≤μsF N
2 , where μs is the assumed coeﬃcient of static friction. In
addition, it must be veriﬁed that the stance leg “lifts from the ground without
interaction,” that is, letting (ph
1(qe); pv
1(qe)) denote the position of the end of
the stance leg with respect to the inertial frame, it must be the case that
˙pv
1 =
∂
∂qe
pv
1(q−
e ) ˙q+
e ≥0,
(3.29)
where ˙q+
e is determined from (3.22). If any of these three conditions is violated,
then the computed post-impact velocity is meaningless and appropriate action
must be taken, such as stopping a simulation or redesigning a walking gait.
3.4.3
Hybrid Model of Walking
An overall model of walking is obtained by combing the swing phase model
and the impact model to form a system with impulse eﬀects. Assume that the
© 2007 by Taylor & Francis Group, LLC

58
Feedback Control of Dynamic Bipedal Robot Locomotion
trajectories of the swing phase model possess ﬁnite left and right limits, and
denote them by x−(t) := limτ↗t x(τ) and x+(t) := limτ↘t x(τ), respectively.
The model is then
Σ :

˙x = fs(x) + gs(x)u
x−/∈S
x+ = Δ(x−)
x−∈S,
(3.30)
where the switching set is chosen9 to be
S := {(qs, ˙qs) ∈T Qs | pv
2(q) = 0, ph
2(q) > 0}.
(3.31)
The mathematical meaning of a solution of the model will be made precise in
Section 4.1. In simple words, a trajectory of the hybrid model is speciﬁed by
the swing phase model until an impact occurs. An impact occurs when the
state “attains” the set S, which represents the walking surface. At this point,
the impact of the swing leg with the walking surface results in a very rapid
change in the velocity components of the state vector. The impulse model
of the impact compresses the impact event into an instantaneous moment in
time, resulting in a discontinuity in the velocities.10 The ultimate result of
the impact model is a new initial condition from which the swing phase model
evolves until the next impact. In order for the state not to be obliged to take
on two values at the “impact time,” the impact event is, roughly speaking,
described in terms of the values of the state “just prior to impact” at time
“t−,” and “just after impact” at time “t+.”
These values are represented
by the left and right limits, x−and x+, respectively. Solutions are taken to
be right continuous and must have ﬁnite left and right limits at each impact
event. Figure 3.3 gives a graphical representation of this discrete event system.
A step of the robot is a solution of (3.30) that starts with the robot in
double support, ends in double support with the conﬁgurations of the legs
swapped, and contains only one impact event. Walking is a sequence of steps.
3.4.4
Some Facts on Angular Momentum
At this point, the sign convention for measuring angles with respect to the
inertial frame must be discussed. If angles are positive when measured in
the clockwise direction, that is, they increase when rotated clockwise, then
the angular momentum of a link rotating clockwise has positive angular mo-
mentum. With this convention, when a robot walks left to right, it will have
positive angular momentum about its stance leg end. The opposite holds with
a counterclockwise convention. See Appendix B.4.9 for more details on the
consequences of making one choice versus another.
9Recall that Hypothesis HGW6 speciﬁes the swing leg is placed strictly ahead of the stance
leg.
10The relabeling results in a discontinuity in position, and, after impact, ph
2(q) < 0.
© 2007 by Taylor & Francis Group, LLC

Modeling of Planar Bipedal Robots with Point Feet
59
pv
2(x) = 0 and ph
2(x) > 0
x+ = Δ(x−)
˙x = fs(x) + gs(x)u
Figure 3.3. Hybrid model of walking with point feet. Key elements are the
continuous dynamics of the single support phase, written in state space form
as ˙x = fs(x)+gs(x)u, the switching or impact condition, pv
2(q) = 0, ph
2(q) > 0,
which detects when the height of the swing leg above the walking surface is
zero and the swing leg is in front of the stance leg, and the reinitialization
rule coming from the impact map, Δ.
3.4.4.1
The Role of Gravity in Walking
The modeled robot has no actuation at the leg ends. So, what causes the robot
to rotate about the support leg end and thus advance forward in a step? The
answer is gravity. Let σ1 be the angular momentum of the robot about the
stance leg end, which is assumed to act as an ideal pivot (i.e., it does not slip
and remains in contact with the walking surface). The angular momentum
balance theorem says that the time derivative of the angular momentum about
a ﬁxed point equals the sum of the moments of the external forces about that
point. Since the motor torques act internally to the robot, their contribution
to the moment balance is zero, leaving only gravity
˙σ1 =

g0mtot

ph
cm −ph
1

,
clockwise convention
−g0mtot

ph
cm −ph
1

,
counterclockwise convention,
(3.32)
where mtot is the total mass of the robot, g0 is the gravitational constant,
ph
cm is the horizontal component of the position of the center mass, and ph
1 is
the horizontal component of the position of the stance foot. In this regard, a
robot with point feet functions like a passive bipedal walker [58,59,153].
So what is the role of the actuators at the hips, knees, and other joints? The
actuators directly act on the shape or posture of the robot, thereby changing
the position of the center of mass, and, thus, the moment arm through which
gravity acts on the robot. The posture of the robot also has a large eﬀect
on the energy lost at impact [125] and whether or not the required contact
conditions at the leg ends are respected. The challenge for control design is
to bring all of this together in a manner that ensures the creation of a desired
asymptotically stable, periodic motion.
© 2007 by Taylor & Francis Group, LLC

60
Feedback Control of Dynamic Bipedal Robot Locomotion
3.4.4.2
Momentum Transfer at Impact
The evolution of the angular momentum about the stance foot is explained
by (3.32). The eﬀect of an impact on the angular momentum of the robot is
investigated next.
As before, let σ−
1 denote the angular momentum about the stance foot just
before impact. Let σ−
2 represent the angular momentum about the swing foot
just before impact. Then, according to the principle of angular momentum
transfer, see (B.153),
σ−
2 = σ−
1 + (p−
1 −p−
2 ) ∧mtot ˙p−
cm,
(3.33)
where ∧is the planar “equivalent” of the vector cross product (see (B.198)
when using the clockwise convention and (B.148) when using the counter-
clockwise convention for measuring angles), ˙pcm is the velocity of the center
of mass, and as before, mtot is the total mass of the robot and p1 and p2 are
the positions of the stance foot and the swing foot, respectively.
At impact, the impulsive reaction force from the ground is applied at the
end of the swing leg. Since the force acts at p2, σ2 is not aﬀected by the
reaction force, and therefore,
σ+
2 = σ−
2 ,
(3.34)
before relabeling of the coordinates is taken into account. After relabeling of
the coordinates, the roles of the legs are swapped, so σ+
2 becomes σ+
1 . This
observation combined with (3.34) and (3.33) gives
σ+
1 = σ−
1 + (p−
1 −p−
2 ) ∧mtot ˙p−
cm.
(3.35)
Note that if the robot walks on a level surface (3.35) becomes
σ+
1 =

σ−
1 + Lsmtot ˙pv−
cm,
clockwise convention
σ−
1 −Lsmtot ˙pv−
cm,
counterclockwise convention,
(3.36)
where Ls = ph−
2
−ph−
1
is the step length of the robot and ˙pv−
cm is the vertical
component of the velocity of the center of mass just before impact.
3.4.5
The MPFL-Normal Form
The objective of this subsection is to indicate a set of generalized coordinates
and a preliminary state variable feedback that places the swing phase model
(3.8) or (3.13) in a particulary convenient form for subsequent analysis. The
main idea for the normal form, which is based on partial feedback lineariza-
tion, is taken from [187,220].
Choose generalized coordinates qs = (qb; qN), where qb = (q1; · · · ; qN−1) is
a set of body coordinates and qN provides the orientation of the robot with
respect to the inertial frame. For example, qb could be selected as a set of
© 2007 by Taylor & Francis Group, LLC

Modeling of Planar Bipedal Robots with Point Feet
61
relative angles, (θrel
1 ; · · · ; θrel
N−1), and qN could be the absolute orientation of
any link of the robot or the angle of the center of mass with respect to the
end of the stance leg. By Proposition B.8 on p. 424, qN is a cyclic coordinate,
meaning that the inertia matrix in (3.8) is independent of qN, that is, Ds(qs) =
Ds(qb). Because ∂θrel
i
∂qN ≡0, 1 ≤i ≤N −1, (3.9) and (3.11) together imply
that the input matrix has the form
Bs(qs) =

B1(qb)
0

,
(3.37)
where B1(qb) is a square and invertible matrix for all (qb; qN) ∈Qs.
Let Ω(qs, ˙qs) := Cs(qs, ˙qs) ˙qs + Gs(qs) and partition the model (3.8) as
D11(qb)¨qb + D12(qb)¨qN + Ω1(qs, ˙qs) = B1(qb)u
D21(qb)¨qb + D22(qb)¨qN + Ω2(qs, ˙qs) = 0.
(3.38)
For later use, we note that
D21(qb) = [dN1(qb), · · · , dNN−1(qb)]
D22(qb) = dNN(qb),
(3.39)
where dij is the ij-element of Ds. Because Ds is positive deﬁnite, D11 and
D22 are both positive deﬁnite and hence invertible. Deﬁne
¯D := D11 −D12D−1
22 D21
Jnorm := D−1
22 D21
(3.40)
¯Ω1 := Ω1 −D12D−1
22 Ω2
¯Ω2 := −D−1
22 Ω2.
(3.41)
Then the regular11 static state feedback
u = B−1
1 (qb)
 ¯D(qb)v + ¯Ω1(qs, ˙qs)

,
(3.42)
results in
¨qb = v
¨qN = ¯Ω2(qs, ˙qs) −Jnorm(qb)v,
(3.43)
which is called the Partial-Feedback-Linearized (PFL) normal form. Because
D22 = dNN is scalar, recall Hypothesis HR4, computing the various terms
deﬁned in (3.40) is straightforward.
Expressing (3.43) in state variable form using x := (qs; ˙qs), results in
˙x =
⎡
⎢⎢⎣
˙qs
v
¯Ω2(qs, ˙qs) −Jnorm(qb)v
⎤
⎥⎥⎦
(3.44)
=: ˜fs(x) + ˜gs(x)v.
(3.45)
11In general, a static state variable feedback u = α(x) + β(x)v is said to be regular
if β(x) is square and invertible.
The feedback deﬁned in (3.42) is regular because the
matrix multiplying the new input, v, is the product of two invertible matrices; indeed,
(det ¯D) dNN = det Ds and Ds is positive deﬁnite.
© 2007 by Taylor & Francis Group, LLC

62
Feedback Control of Dynamic Bipedal Robot Locomotion
The above state variable model is precisely the result of applying the state
variable feedback (3.42) to the state variable model (3.13). An advantage
of this form of the model over (3.13) is that (3.45) can be computed without
inverting the inertia matrix. Secondly, it can be advantageous to design a state
variable feedback controller in a two stage process: ﬁrst, determine v = γ(x)
on the basis of (3.45), because this form of the model typically has many fewer
terms than (3.13), and then determine the equivalent feedback controller for
(3.13) as
u = B−1
1 (qb)
 ¯D(qb)γ(x) + ¯Ω1(qs, ˙qs)

.
(3.46)
An even more convenient normal form for the state variable model (3.8) is
obtained from (3.43) by a simple coordinate change. Denote the generalized
momentum conjugate to qN by ¯σN = ∂Ls
∂˙qN ; see (B.181). From (B.182),
¯σN =
N

k=1
dN,k(q1, · · · , qN−1) ˙qk.
(3.47)
Because there is no actuation at the stance leg end and qN is cyclic,
˙¯σN = −∂Vs
∂qN
(q).
(3.48)
Using (3.47) and (3.48), the normal form (3.43) can be expressed as
¨qb = v
˙qN =
¯σN
dN,N(qb) −Jnorm(qb) ˙qb
˙¯σN = −∂Vs
∂qN (qb, qN),
(3.49)
which will be called the Mixed-Partial-Feedback-Linearized (MPFL)12 normal
form. Deﬁne
ϖs :=

˙qb
¯σN

=

IN−1×N−1
0N−1×1
dN,N(qb)Jnorm(qb)
dN,N(qb)




M(qb)

˙qb
˙qN

(3.50)
and note that

˙qb
˙qN

  
˙qs
=

IN−1×N−1
0N−1×1
−Jnorm(qb)
1
dN,N(qb)




M−1(qb)

˙qb
¯σN

  
ϖs
.
(3.51)
12The normal form (3.49) mixes the Lagrangian and Hamiltonian formalisms because it
uses angular velocity and momentum.
© 2007 by Taylor & Francis Group, LLC

Modeling of Planar Bipedal Robots with Point Feet
63
Writing the model (3.49) in state variable form, with ˜x := (qs; ϖs), results
in
˙˜x =
⎡
⎢⎢⎢⎣
˙qb
¯σN
dN,N(qb) −Jnorm(qb) ˙qb
v
−∂Vs
∂qN (qb, qN)
⎤
⎥⎥⎥⎦
(3.52)
=: ˜fs(˜x) + ˜gs(˜x)v.
(3.53)
Because a change of state variables has been made, the feedback required to
go from (3.8) to (3.53) is given by (3.42) with ˙qs given in terms of ϖs, per
(3.51). The impact map must be modiﬁed as well to take into account the
change of coordinates, so that (3.26) becomes
˜Δ(˜x−) :=

˜Δqs q−
s
˜Δϖs(q−
s ) ϖ−
s

(3.54)
where
˜Δqs := R
(3.55)
is unchanged from (3.27), while (3.28) becomes
˜Δϖs(q−
s ) := [RM(qb) 0N×2 ] ¯Δ ˙qe(q−
s )M −1(qb).
(3.56)
The overall model with impulse eﬀects is
˜Σ :

˙˜x = ˜fs(˜x) + ˜gs(˜x)u
˜x−/∈S
˜x+ = ˜Δ(˜x−)
˜x−∈S,
(3.57)
where the switching set is unchanged from (3.31).
3.4.6
Example Walker Models
This section presents three bipedal robot models of increasing complexity.
The ﬁrst and third models will be used repeatedly.
3.4.6.1
The Acrobot as a Walker: A Two-link Example Model
The Acrobot is a simple biped model that will be used to illustrate key points
developed in later chapters. In the passive bipedal robot literature, it is usu-
ally known as a compass model or a compass-gait biped. The model consists
of two symmetric links with a single actuator at the link connection point,
the hip; see Fig. 3.4. In the swing phase, the model corresponds to that of the
Acrobot [17, 93, 215] with symmetric links. It is very similar to the simplest
walking model of Garcia et al. [84], except that the mass is distributed along
the leg as opposed to being concentrated at the hip.
© 2007 by Taylor & Francis Group, LLC

64
Feedback Control of Dynamic Bipedal Robot Locomotion
α
(ph
2;pv
2)
x
y
q1
q2
lc
l
COM
Figure 3.4. Schematic indicating the deﬁnition of the generalized coordinates
and the mechanical data of a two-link bipedal robot. The legs are symmetric,
with length l, and with center of mass location lc. The ground slope is α. The
dynamics during the single support phase is that of the Acrobot [215].
Because of its extremely simple morphology, this is not a physically real-
izable model of bipedal walking: with equal leg lengths, the swing foot will
scuﬀ, i.e., prematurely contact the walking surface. Common arguments for
overcoming this deﬁciency involve assumptions of small, retractable leg ends
which allow the swing leg to be shortened enough to achieve ground clear-
ance [98], or, the observation that in three-dimensions, frontal plane hip sway
would allow foot clearance [143]. The interest here is not the physical realiz-
ability of this model, but its illustrative utility since it is the simplest model
for walking which satisﬁes HR1–HR5.
A detailed derivation of the Acrobot using the method of Lagrange can be
found in Appendix B.4.11. Specializing the model to the case of symmetric
legs13 and using the coordinates of Fig. 3.4 yields the equations of motion
during the swing phase; they are given by (3.8) with
(Ds(q1))1,1 = (l −lc)2 m + I
(3.58a)
(Ds(q1))1,2 = m l(l −lc) cos(q1) −(l −lc)2 m −I
(3.58b)
(Ds(q1))2,2 = −2 m l(l −lc) cos(q1) +

2(l2
c + l2) −2 lc l

m + 2 I,
(3.58c)
with the remaining entries of Ds completed by symmetry. The nonzero entries
of Cs are
(Cs(q1, ˙q1))1,2 = −m l sin(q1)(l −lc) ˙q2
(3.59a)
(Cs(q1, ˙q2))2,1 = −m l sin(q1)(l −lc)( ˙q1 −˙q2)
(3.59b)
(Cs(q1, ˙q2))2,2 = m l sin(q1)(l −lc) ˙q1.
(3.59c)
13More precisely, the following substitutions should be made: m1 = m2 = m, Jcm,1 =
Jcm,2 = I, L1 = L2 = l, ℓh
cm,1 = lc, ℓh
cm,2 = l −lc, q1 becomes π −q1, and q2 becomes
3π/2 −q2.
© 2007 by Taylor & Francis Group, LLC

Modeling of Planar Bipedal Robots with Point Feet
65
Table 3.1. Parameters of the two-link model.
Parameter
Units
Value
Leg length, l
m
1.0
Leg COM location, lc
m
0.8
Leg mass, m
kg
0.3
Leg inertia about leg COM, I
kg·m2
0.03
Acceleration due to gravity, g0
m/s2
9.81
The vector Gs and the input matrix Bs are given by
(Gs(q1, q2))1 = m g0 sin(q1 −q2 −α)(l −lc)
(3.60a)
(Gs(q1, q2))2 = m g0

(lc −l) sin(q1 −q2 −α) −sin(q2 + α)(lc + l)

(3.60b)
and
Bs =

1
0

.
(3.61)
The state space is taken as
T Qs := {x := (q1; q2; ˙q1; ˙q2) | (q1; q2) ∈Qs, ( ˙q1; ˙q2) ∈R2}
(3.62)
where Qs is an open subset of (−π/2, π/2)×(0, 2π). The model parameters are
given in Table 3.1. The parameters were taken from [84, Tab. 4.1]. Note that
Ds is independent of q2, which is the case for any N-link robot satisfying HR1–
HR5 when the coordinates are chosen as (N −1) shape (relative) coordinates
plus one absolute coordinate, i.e., a coordinate referencing the angle of a point
on the robot to a world coordinate frame. This will be important for the zero
dynamics development in Chapter 5.
Following the procedure of Section 3.4.2, the impact model is computed to
be
Δq = R =

−1 0
−1 1

(3.63)
and
(Δ ˙q)1,1 =
1
den(lclm −I −ml2
c)

mllc cos(q1) −ml2 cos(q1)
+ I + ml2 + ml2
c −2lclm

(3.64a)
(Δ ˙q)1,2 = −lclm
den

ml2 + 2I + ml2 cos(2q1) −3lclm
−2ml2 cos(q1) −mlcl cos(2q1) −2m cos(q1)l2
c
+ 4mllc cos(q1) + 2ml2
c −2I cos(q1)

(3.64b)
© 2007 by Taylor & Francis Group, LLC

66
Feedback Control of Dynamic Bipedal Robot Locomotion
Table 3.2. Parameters of the three-link model.
Parameter
Units
Value
Torso length, l
m
0.5
Leg length, r
m
1.0
Torso mass, MT
kg
10
Hip mass, MH
kg
15
Leg mass, m
kg
5
Acceleration due to gravity, g0
m/s2
9.81
(Δ ˙q)2,1 =
1
den(−I + lclm −ml2
c)(ml2 + ml2
c + I −2lclm)
(3.64c)
(Δ ˙q)2,2 =
1
den

m2l3lc cos(q1) −3Ilclm + Ilclm cos(q1)
+ ml2I + ml2I cos(q1) + m2l3
cl cos(q1)
−2m2l2 cos(q1)l2
c −m2l3lc + 3m2l2l2
c
−3m2l3
cl + 2ml2
cI + m2l4
c + I2
(3.64d)
den = −m2l4 cos(q1)2 −2Ilclm + 2m2l3lc cos(q1)2
−m2l2l2
c cos(q1)2 + m2l4 + 2ml2I −2m2l3lc
+ 2m2l2l2
c −2m2l3
cl + 2ml2
cI + m2l4
c + I2.
(3.64e)
Using (3.49), the MPFL-normal form is
¨q1 = v1
˙q2 =
¯σ2
(Ds(q1))2,2 −
(Ds(q1))2,1
(Ds(q1))2,2 ˙q1
˙¯σ2 = −(Gs(q))2,
(3.65)
where the required elements of the dynamic model are obtained from (3.58)
and (3.60b). Clearly, (3.65) is much simpler than (3.8) with (3.58)–(3.60).
3.4.6.2
Three-Link Walker
A three-link walker is depicted in Fig. 3.5. Like the Acrobot, the robot has no
knees and hence suﬀers from scuﬃng. Whereas the uncontrolled Acrobot is
known to possess stable walking motions (i.e., asymptotically stable periodic
orbits) when walking down a suﬃciently gentle constant slope, this robot
model does not possess any stable walking motions without feedback control.
The three-link walker provides the simplest example where torso stabilization
is important.
The model is given in two sets of coordinates.
The model
parameters are given in Table 3.2.
Consider ﬁrst the coordinates shown in Fig. 3.5(a), where q = (θ1; θ2; θ3)
and the θi are absolute orientations of the various links. The stance leg is
© 2007 by Taylor & Francis Group, LLC

Modeling of Planar Bipedal Robots with Point Feet
67
m
m
MH
MT
θ1
−θ2
θ3
r
r/2
ℓ
(a)
q1
q2
q3
(b)
Figure 3.5. Schematic indicating the deﬁnition of the generalized coordinates
and the mechanical data of a three-link bipedal robot. All masses are lumped.
The legs are symmetric, with length r, and the mass of each leg is lumped at
r/2. The distance from the hips to the center of mass of the torso is denoted
by l. In (a), the model is indicated in a set of absolute coordinates, that is θ1,
θ2, and θ3 are each referenced with respect to the inertial frame. The label −θ2
indicates that the angle is negative as labeled. In (b), the model is indicated
in body (also called shape) coordinates, where q1 and q2 are measured relative
to the body and only q3 is referenced to the inertial frame.
the leg parameterized with θ1. Applying the method of Lagrange yields the
following data for the model (3.8):
(Ds(q))1,1 =
5
4m + MH + MT

r2
(3.66a)
(Ds(q))1,2 = −1
2mr2 cos(θ1 −θ2)
(3.66b)
(Ds(q))1,3 = MT rℓcos(θ1 −θ3)
(3.66c)
(Ds(q))2,2 = 1
4mr2
(3.66d)
(Ds(q))2,3 = 0
(3.66e)
(Ds(q))3,3 = MT ℓ2,
(3.66f)
with the remaining entries completed by symmetry. The inertia matrix de-
pends on all three of the generalized coordinates, θ1, θ2, and θ3. The nonzero
entries of Cs are
(Cs(q, ˙q))1,2 = −1
2mr2 sin(θ1 −θ2) ˙q2
(3.67a)
(Cs(q, ˙q))1,3 = MTrℓsin(θ1 −θ3) ˙q3
(3.67b)
(Cs(q, ˙q))2,1 = 1
2mr2 sin(θ1 −θ2) ˙q1
(3.67c)
© 2007 by Taylor & Francis Group, LLC

68
Feedback Control of Dynamic Bipedal Robot Locomotion
(Cs(q, ˙q))3,1 = −MTrℓsin(θ1 −θ3) ˙q1.
(3.67d)
The vector Gs and the input matrix Bs are given by
Gs =
⎡
⎢⎢⎢⎣
−1
2g0 (2MH + 3m + 2MT ) r sin(θ1)
1
2g0mr sin(θ2)
−g0MT l sin(θ3)
⎤
⎥⎥⎥⎦
(3.68)
and
Bs =
⎡
⎢⎣
−1
0
0
−1
1
1
⎤
⎥⎦.
(3.69)
Following the procedure of Section 3.4.2, the impact model is computed to
be
Δq = R =
⎡
⎢⎣
0 1 0
1 0 0
0 0 1
⎤
⎥⎦
(3.70)
and
(Δ ˙q)1,1 =
1
den

2MT cos(−θ1 + 2θ3 −θ2)
−(2m + 4MH + 2MT) cos(θ1 −θ2)

(3.71a)
(Δ ˙q)1,2 = m
den
(3.71b)
(Δ ˙q)1,3 = 0
(3.71c)
(Δ ˙q)2,1 =
1
den

m −(4m + 4MH + 2MT ) cos(2θ1 −2θ2)
+ 2MT cos(2θ1 −2θ3)

(3.71d)
(Δ ˙q)2,2 =
1
den2m cos(θ1 −θ2)
(3.71e)
(Δ ˙q)2,3 = 0
(3.71f)
(Δ ˙q)3,1 =
r
ℓden

(2m + 2MH + 2MT ) cos(θ3 + θ1 −2θ2)
−(2m + 2MH + 2MT) cos(−θ1 + θ3)
+ m cos(−3θ1 + 2θ2 + θ3)

(3.71g)
(Δ ˙q)3,2 = −
r
ℓdenm cos(−θ2 + θ3)
(3.71h)
(Δ ˙q)3,3 = 1
(3.71i)
den = −3m −4MH −2MT + 2m cos(2θ1 −2θ2)
+ 2MT cos(−2θ2 + 2θ3).
(3.71j)
© 2007 by Taylor & Francis Group, LLC

Modeling of Planar Bipedal Robots with Point Feet
69
Consider next the coordinates shown in Fig. 3.5(b), where q = (q1; q2; q3),
with q1 and q2 relative angles and q3 the absolute orientation of the torso.
From the diagram, it follows that
⎡
⎢⎣
θ1
θ2
θ3
⎤
⎥⎦=
⎡
⎢⎣
1 0 1
0 1 1
0 0 1
⎤
⎥⎦
⎡
⎢⎣
q1
q2
q3
⎤
⎥⎦−
⎡
⎢⎣
π
π
0
⎤
⎥⎦
(3.72)
and
⎡
⎢⎣
q1
q2
q3
⎤
⎥⎦=
⎡
⎢⎣
1 0 −1
0 1 −1
0 0
1
⎤
⎥⎦
⎡
⎢⎣
θ1
θ2
θ3
⎤
⎥⎦+
⎡
⎢⎣
π
π
0
⎤
⎥⎦.
(3.73)
The model in the new coordinates can be obtained either by re-deriving the
Lagrangian in the new coordinates, or by applying relations (B.203)–(B.205)
for canonical changes of coordinates. The resulting model is
(Ds(q))1,1 =
5m
4 + MH + MT

r2
(3.74a)
(Ds(q))1,2 = −1
2mr2 cos(q1 −q2)
(3.74b)
(Ds(q))1,3 =
5
4m + MH + MT −m
2 cos(q1 −q2)

r2
−MT rℓcos(q1)
(3.74c)
(Ds(q))2,2 = 1
4mr2
(3.74d)
(Ds(q))2,3 =
 m
4 −m
2 cos(q1 −q2)
!
r2
(3.74e)
(Ds(q))3,3 =

MH + 3m
2 + MT −m cos(q1 −q2)

r2
−2MTrℓcos(q1) + MT ℓ2,
(3.74f)
with the remaining entries completed by symmetry. Note that in these coor-
dinates, Ds is independent of q3. The nonzero entries of Cs are
(Cs(q, ˙q))1,2 = −1
2mr2 sin(q1 −q2)( ˙q2 + ˙q3)
(3.75a)
(Cs(q, ˙q))1,3 = −r
2 (mr sin(q1 −q2) ˙q2 + mr sin(q1 −q2) ˙q3
(3.75b)
+2MTℓsin(q1) ˙q3)
(3.75c)
(Cs(q, ˙q))2,1 = 1
2mr2 sin(q1 −q2)( ˙q1 + ˙q3)
(3.75d)
(Cs(q, ˙q))2,3 = 1
2mr2 sin(q1 −q2)( ˙q1 + ˙q3)
(3.75e)
(Cs(q, ˙q))3,1 = 1
2

mr2 sin(q1 −q2) + 2MTrℓsin(q1)

( ˙q1 + ˙q3) (3.75f)
© 2007 by Taylor & Francis Group, LLC

70
Feedback Control of Dynamic Bipedal Robot Locomotion
(Cs(q, ˙q))3,2 = −1
2mr2 sin(q1 −q2)( ˙q2 + ˙q3)
(3.75g)
(Cs(q, ˙q))3,3 = 1
2

mr2 sin(q1 −q2) ˙q1 + 2MTrℓsin(q1) ˙q1
−mr2 sin(q1 −q2) ˙q2

.
(3.75h)
The vector Gs and the input matrix Bs are given by
(Gs(q))1 = 1
2g0(3m + 2MH + 2MT)r sin(q1 + q3)
(3.76a)
(Gs(q))2 = −1
2g0mr sin(q2 + q3)
(3.76b)
(Gs(q))3 = 1
2g0 ((2MH + 2MT + 3m)r sin(q1 + q3) −mr sin(q2 + q3))
−g0MT ℓsin(q3)
(3.76c)
and
Bs =
⎡
⎢⎣
−1
0
0
−1
0
0
⎤
⎥⎦.
(3.77)
Similarly, the impact map can be re-derived in the new coordinates. It is
most easily obtained by applying the change of coordinates (3.72) and (3.73)
to (3.70) and (3.71).
The MPFL-normal form is easily determined in the coordinates of Fig. 3.5(b).
From (3.49), the normal form is
¨q1 = v1
¨q2 = v2
˙q3 =
¯σ3
(Ds(q1,q2))3,3 −
(Ds(q1,q2))3,1
(Ds(q1,q2))3,3 ˙q1 −
(Ds(q1,q2))3,2
(Ds(q1,q2))3,3 ˙q2
˙¯σ3 = −(Gs(q))3,
(3.78)
where the four required elements of the dynamic model are read from (3.74a)
through (3.76c). Clearly, (3.78) is much simpler than (3.8).
3.4.6.3
Five-Link Model: RABBIT
A model of the ﬁve-link walker RABBIT is developed in Section 6.6.2.1. The
detailed equations of motion are given in Appendix E. While the equations of
motion for the two-link and three-link walker models can be derived by hand,
symbolic tools are necessary for RABBIT. Having the equations of motion
available in symbolic form is useful when performing the calculations required
for the control laws developed in later chapters. Computing the impact model
in closed form (symbolically or otherwise) is not necessary and has not been
done for RABBIT; instead, (3.26) is evaluated numerically.
© 2007 by Taylor & Francis Group, LLC

Modeling of Planar Bipedal Robots with Point Feet
71
q1
q2
q3
q4 q5
(a)
(b)
(c)
xcm
ycm
y1
x1
y2
x2
θs(q)
Figure 3.6. Diﬀerent phases of running with coordinate conventions labeled
on an example ﬁve-link model.
The robot is shown (a) at the end of the
stance phase; (b) during ﬂight; and (c) at the beginning of the stance phase
just after impact.
To avoid clutter, the coordinate conventions have been
spread out over the single support and ﬂight phases even though they apply
to all three phases. leg-1 is presented in bold. Angles are positive in the
clockwise direction.
3.5
Dynamic Model of Running
This sections develops a mathematical model for the study of a running gait
of a biped satisfying Robot Hypotheses HR1–HR5, Gait Hypotheses HGR1–
HGR7, and Impact Hypotheses HI1–HI7. The development parallels the cor-
responding section on walking models. As in Section 3.4, an inertial reference
frame is assumed to be given and oriented in the standard manner with re-
spect to gravity. From Hypothesis HGR7, the running surface is ﬂat, and thus
it can be assumed without loss of generality that ground height is zero with
respect to the inertial frame. Furthermore, it will be assumed that all angles
are positive in the clockwise direction.
As in Fig. 3.2, let (x1; y1) denote the position of the end of leg-1 with
respect to the inertial frame, let (x2; y2) denote the position of the end of
leg-2, and let (xcm; ycm) denote the position of the center of mass.
Recall that the robot is said to be in ﬂight phase when there is no contact
with the ground, and in stance phase when one leg end is in stationary contact
with the ground (that is, the leg end is acting as an ideal pivot) and the other
leg is free. For the stance phase, the leg in contact with the ground is called
the stance leg and the other leg is the swing leg.
In the ﬂight phase, the robot has N + 2 degrees of freedom (DOF): a
degree of freedom associated with the orientation of each link, plus two DOF
associated with the horizontal and vertical displacement of the center of mass
© 2007 by Taylor & Francis Group, LLC

72
Feedback Control of Dynamic Bipedal Robot Locomotion
within the sagittal plane. The state vector of the dynamical model is thus
2(N + 2)-dimensional: there are N + 2 conﬁguration variables required to
describe the position of the robot, plus the associated velocities. In the stance
phase, the robot has only N DOF because the position of the center of mass
is determined by the orientation of the N links (plus a horizontal, constant
oﬀset of the stance leg end with respect to the origin of the inertial frame).
The state vector of the dynamical model is thus 2N-dimensional.
3.5.1
Flight Phase Model
The ﬂight phase model corresponds to a free open kinematic chain.
The
model will be presented in a particular set of body coordinates. Let qb =
(q1; · · · ; qN−1) be N −1 relative angles of the actuated joints, as shown in
Fig. 3.6. The coordinates qb describe the shape of the biped and are referenced
to the body of the biped and not the inertial frame. Let the biped’s absolute
orientation with respect to the inertial frame be given by qN, with a clockwise
convention adopted for angle measurement.14 The biped’s absolute position
is speciﬁed by the Cartesian coordinates of the center of mass, (xcm; ycm).
The vector of generalized coordinates is denoted as qf := (qb; qN; xcm; ycm).
The dynamic model is easily obtained with the method of Lagrange, which
consists of ﬁrst computing the kinetic energy and potential energy of each
link, and then summing terms to compute the total kinetic energy, Kf, and
the total potential energy, Vf; see Appendix B.4. The Lagrangian is deﬁned
as Lf = Kf −Vf, and the dynamical model is determined from Lagrange’s
equation
d
dt
∂Lf
∂˙qf
−∂Lf
∂qf
= Γf,
(3.79)
where Γf is the vector of generalized forces and torques applied to the robot.
In terms of the generalized coordinates of the robot, qf, the total kinetic
energy becomes
Kf = 1
2 ˙q′
fDf(qb) ˙qf,
(3.80)
where
Df =

A(qb)
0N×2
02×N mtotI2×2

,
(3.81)
mtot is the total mass of the robot, and A depends only on qb because the
total kinetic energy is invariant under rotations and translations of the body;
see Proposition B.10. The potential energy is
Vf = mtotg0 ycm.
(3.82)
14This convention only applies to qN. Because the angles in qb are not referenced to the
inertial frame, any convention can be used.
© 2007 by Taylor & Francis Group, LLC

Modeling of Planar Bipedal Robots with Point Feet
73
The principle of virtual work yields that the external torques are
Γf = Bfu =
 IN−1×N−1
03×N−1

u,
(3.83)
where u is the vector of actuator torques applied at the N −1 actuated joints
of the robot. Applying Lagrange’s equation leads to a model of the form
Df(qb)¨qf + Cf(qb, ˙qf) ˙qf + Gf(qf) = Bfu,
(3.84)
where Df is the inertia matrix, the matrix Cf contains Coriolis and centrifugal
terms, and Gf is the gravity vector. Introducing the state vector xf := (qf; ˙qf),
the mechanical model (3.84) is easily expressed as
˙xf = ff(xf) + gf(xf)u.
(3.85)
The conﬁguration space Qf is taken as a simply connected, open subset of15
TN × R2 corresponding to physically reasonable conﬁgurations of the robot,
and the state space is taken as T Qf := {xf := (qf; ˙qf) | qf ∈Qf, ˙qf ∈RN+2}.
3.5.2
Stance Phase Model
The stance phase model of running is identical to the stance phase model of
walking. Here, it is developed in the generalized coordinates qs := (qb; qN) =
(q1; · · · ; qN), and the relation with the ﬂight phase model is brought out.
Since the robot’s legs are identical, in the stance phase, it will be assumed
without loss of generality that leg-1 is in contact with the ground. Moreover,
the Cartesian position of the stance leg end will be identiﬁed with the origin
of the (x −y)-axes of the inertial frame.
The position of the center of mass can be expressed in terms of qs per

xcm(qs)
ycm(qs)

= fcm(qs),
(3.86)
where fcm is determined from the robot’s geometric parameters (link lengths,
masses, positions of the centers of mass). Hence
˙qf =
⎡
⎣
IN×N
∂fcm
∂qs
⎤
⎦˙qs.
(3.87)
Substituting (3.87) into (3.80) yields the kinetic energy of the stance phase,
Ks = 1
2 ˙q′
sDs(qb) ˙qs,
(3.88)
15Tn denotes the n-Torus, which is equal to S1 × S1 × · · · × S1
 

n−times
.
© 2007 by Taylor & Francis Group, LLC

74
Feedback Control of Dynamic Bipedal Robot Locomotion
with
Ds(qb) = A(qb) + mtot
∂fcm(qs)
∂qs
′ ∂fcm(qs)
∂qs
;
(3.89)
because the kinetic energy is invariant under rotations of the body, Ds depends
only on qb. The potential energy remains Vs(qs) = mtotg0 ycm(qs). Lagrange’s
equation becomes
d
dt
∂Ls
∂˙qs
−∂Ls
∂qs
= Γs,
(3.90)
and the external torques are
Γs = Bsu =
 IN−1×N−1
01×N−1

u.
(3.91)
The dynamic model can therefore be written as
Ds(qb)¨qs + Cs(qb, ˙qs) ˙qs + Gs(qs) = Bsu.
(3.92)
Introducing the state vector xs := (qs; ˙qs), the mechanical model (3.92) is
easily expressed as
˙xs = fs(xs) + gs(xs)u.
(3.93)
The state space is taken as T Qs := {(qs; ˙qs) | qs ∈Qs, ˙qs ∈RN}, where the
conﬁguration space Qs is a simply connected, open subset of TN corresponding
to physically reasonable conﬁgurations.
3.5.3
Impact Model
The Cartesian position of the end of leg-2 can be expressed in terms of the
Cartesian position of the center of mass and the robot’s angular coordinates
as
 x2
y2

=
 xcm
ycm

−f2(qs),
(3.94)
where f2 is determined from the robot’s parameters (links lengths, masses,
positions of the centers of mass); see (3.86). When leg-2 touches the ground at
the end of a ﬂight phase, an impact takes place. The impact model of [75,124]
is used, which represents the ground reaction forces at impact as impulses
with intensity IR. The impact is assumed inelastic, with the velocity of the
contact leg end becoming zero instantaneously; furthermore, after impact,
the contact leg end is assumed to act as an ideal pivot. This model yields
that the robot’s conﬁguration qf is unchanged during impact and there are
instantaneous changes in the velocities.
The velocity vector just before impact is denoted by ˙q−
f . After impact, with
the assumption that the leg neither rebounds nor slides after impact, the robot
is in stance phase. During the stance phase leg-2 acts as an ideal pivot and
© 2007 by Taylor & Francis Group, LLC

Modeling of Planar Bipedal Robots with Point Feet
75
thus the linear velocity of the center of mass center can be expressed in terms
of the angular velocities just after impact, ˙q+
s , yielding

0
0

=
 ˙x+
cm
˙y+
cm

−∂f2(qs)
∂qs
˙q+
s .
(3.95)
The impact model of [75,124] is expressed as

A(qb)
0N×2
02×N mtotI2×2
 ⎛
⎜
⎝
⎡
⎢⎣
˙q+
s
˙x+
cm
˙y+
cm
⎤
⎥⎦−˙q−
f
⎞
⎟
⎠=
 −∂f ′
2(qs)
∂qs
I2×2

IR.
(3.96)
The vector IR of the ground reaction impulses can be expressed using the last
two lines of the matrix equation (3.96) in combination with (3.95):
IR = mtot
"
∂f2(qs)
∂qs
˙q+
s −
 ˙x−
cm
˙y−
cm
#
.
(3.97)
Substituting this into the ﬁrst N lines of (3.96) and rearranging yields that
the robot’s angular velocity vector after impact is given by a linear expression
with respect to the velocity before impact:
˙q+
s =
$
A + mtot
∂f2
∂qs
′ ∂f2
∂qs
%−1 $
A
&&&& mtot
∂f2
∂qs
′%
˙q−
f ,
(3.98)
which, for later use, is written as
˙q+
s = ˜Δ(q−
f ) ˙q−
f .
(3.99)
Remark 3.6
In the case of running, since the robot has N +2 DOF before
impact and only N DOF after impact, for any post-impact velocity, there
is a two-dimensional set of velocities in the ﬂight phase that gets mapped
onto that same vector. This is diﬀerent from walking where, generically, the
double support impact results in a one-to-one mapping between pre-impact
and post-impact velocity vectors.
3.5.4
Hybrid Model of Running
The overall bipedal robot model can be expressed as a nonlinear hybrid system
containing two state manifolds (called “charts” in [103]):
Σf :
⎧
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎩
Xf = T Qf
Ff : ( ˙xf) = ff(xf) + gf(xf)u
Ss
f = {xf ∈Xf | Hs
f (xf) = 0}
T s
f : x+
s = Δs
f(x−
f )
© 2007 by Taylor & Francis Group, LLC

76
Feedback Control of Dynamic Bipedal Robot Locomotion
(3.100)
Σs :
⎧
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎩
Xs = T Qs
Fs : ( ˙xs) = fs(xs) + gs(xs)u
Sf
s = {xs ∈Xs | Hf
s(xs) = 0}
T f
s : x+
f = Δf
s(x−
s )
where, for example, Ff is the ﬂow on state manifold Xf, Ss
f is the switching
hyper-surface for transitions between Xf and Xs, and T s
f
: Ss
f →Xs is the
transition function applied when xf ∈Ss
f .
The transition from ﬂight phase to stance phase occurs when leg-2 impacts
the ground. Hence, Hs
f (xf) = y2; see Fig. 3.6. The ensuing initial value of
the stance phase, x+
s , is determined from the impact model of Section 3.5.3.
As in walking, a relabeling matrix R is applied to the angular coordinates
to account for the impact occurring on leg-2 while the stance model assumes
leg-1 is in contact with the ground:
Δs
f(x−
f ) =
⎡
⎣
[ R 0N×2 ] q−
f
R ˜Δ(q−
f ) ˙q−
f
⎤
⎦,
(3.101)
where (3.99) has been used. The relabeling matrix must satisfy RR = I, i.e.,
R is a circular matrix.
The transition from stance phase to ﬂight phase can be initiated by caus-
ing the acceleration of the stance leg end to become positive. If torque dis-
continuities16 are allowed—as they are assumed to be in this treatment of
running—when to transition into the ﬂight phase becomes a control decision.
Here, in view of simplifying the analysis of periodic orbits as part of the con-
trol design, the transition is assumed to occur at a predetermined point in the
stance phase. In particular, the transition will be determined by a function of
the form Hf
s = θs(qs) −θ−
s,0, where θs(qs) is the angle of the hips with respect
to end of the stance leg (see Fig. 3.6) and θ−
s,0 is a constant to be determined
as part of the control design.
The ensuing initial value of the ﬂight phase, x+
f , is deﬁned so as to achieve
continuity in the position and velocity variables, using (3.86) and (3.87):
Δf
s(x−
s ) =
⎡
⎢⎢⎢⎢⎢⎢⎣

q−
s
fcm(q−
s )

⎡
⎣
˙q−
s
∂fcm
∂qs
&&&
q−
s
˙q−
s
⎤
⎦
⎤
⎥⎥⎥⎥⎥⎥⎦
.
(3.102)
16This is a modeling decision. In practice, the torque is continuous due to actuator dynam-
ics. It is assumed here that the actuator time constant is small enough that it need not be
modeled.
© 2007 by Taylor & Francis Group, LLC

Modeling of Planar Bipedal Robots with Point Feet
77
Continuity of the torques is not imposed, and hence neither is continuity of
the accelerations. It is assumed that the control law in the ﬂight phase will
be designed to result in ¨y1 at the beginning of the ﬂight phase being greater
than zero; see [44].
The deﬁnition of a solution of the hybrid model is adopted from [103], and
amounts to piecing together solutions in an appropriate manner, just as in the
hybrid model of walking. Appropriate deﬁnitions of orbital stability in the
sense of Lyapunov, attractivity, and orbital asymptotic stability in the sense
of Lyapunov can be taken from [98,167,193].
Remark 3.7
Note that for a solution of the model to correspond to running,
HGR3 requires that ˙xcm > 0 during the ﬂight phase; otherwise, the robot is
jogging in place. Though not done here, this requirement could be built into
the model by redeﬁning the state manifold of the ﬂight phase as
Xf := {xf := (qf; ˙qf) | qf ∈Qf, ˙qf ∈RN+2, ˙xcm > 0}.
(3.103)
Instead, we will simply seek solutions of (3.100) respecting ˙xcm > 0.
3.5.5
Some Facts on Linear and Angular Momentum
A few linear and angular momentum properties of the mechanical models for
stance and ﬂight are noted. Let σcm denote the angular momentum of the
biped about its center of mass. In the ﬂight phase, σcm can be computed by
σcm = ∂Kf
∂˙qN = AN ˙qs, where AN is the N-th row of A. The N-th row of (3.79)
yields conservation of σcm,
˙σcm = 0.
(3.104)
In addition, the last two rows of (3.79) correspond to Newton’s second law in
a central gravity ﬁeld:
mtot ¨xcm = 0
and
mtot ¨ycm = −mtotg0.
(3.105)
As before, let σi denote the angular momentum of the biped about the end
of leg-i, for i = 1, 2. The three angular momenta are related by
σi = σcm + mtot

xcm −xi
ycm −yi

∧

˙xcm
˙ycm

(3.106)
= σcm + mtot ((ycm −yi) ˙xcm −(xcm −xi) ˙ycm) ,
(3.107)
where the last line assumes a clockwise convention on angle measurement.
This expression is valid in both the stance and ﬂight phases. In the stance
phase, σ1 is determined by σ1 = ∂Ks
∂˙qN = Ds,N ˙qs, where Ds,N is the N-th row of
Ds. The N-th row of (3.90) yields the angular momentum balance theorem:
˙σ1 = −∂Vs
∂qN
= mtotg0 xcm.
(3.108)
© 2007 by Taylor & Francis Group, LLC

78
Feedback Control of Dynamic Bipedal Robot Locomotion
The impact model of [75, 124] yields conservation of angular momentum
about the impact point. Indeed, because the only external impulsive force is
applied at the impact point, the N-th row of (3.96) can be written as
σ+
cm −σ−
cm = −mtot

xcm −x2
ycm −y2

∧

˙x+
cm −˙x−
cm
˙y+
cm −˙y−
cm

(3.109)
= −mtot [ycm −y2 | −xcm + x2]
 ˙x+
cm −˙x−
cm
˙y+
cm −˙y−
cm

(3.110)
because
∂f2
∂qN
=

ycm −y2
−xcm + x2

(3.111)
and
IR = mtot

˙x+
cm −˙x−
cm
˙y+
cm −˙y−
cm

.
(3.112)
Using (3.107) results in
σ+
2 −σ−
2 = σ+
cm −σ−
cm + mtot

xcm −x2
ycm −y2

∧

˙x+
cm −˙x−
cm
˙y+
cm −˙y−
cm

(3.113)
and thus
σ+
2 = σ−
2 ,
(3.114)
meaning the value of σ2 is unchanged during the impact. Since the stance
phase model assumes that the stance leg is leg-1, for later use, (3.114) is
rewritten as
σs+
1
= σf−
2
(3.115)
to reﬂect the swapping of the roles of the legs; see (3.101).
Remark 3.8
The notation s+ emphasizes that σ1 is being evaluated at
the beginning of the stance phase and the notation f−emphasizes that σ2 is
being evaluated at the end of the ﬂight phase. If no confusion is possible, the
notation + and −will be used. For example, the variable θs only makes sense
in the stance phase, and hence θs−
s
would be redundant. On the other hand,
for a variable such as xcm, it is important to distinguish among xs+
cm, xs−
cm,
xf+
cm, and xf−
cm.
Remark 3.9
The robot is assumed to advance from left to right that is, in
the positive direction of the horizontal component of the inertial frame. In this
section, angles were assumed to be positive when measured in the clockwise
direction so that the angular momenta about the stance leg end and the center
© 2007 by Taylor & Francis Group, LLC

Modeling of Planar Bipedal Robots with Point Feet
79
of mass will be positive. A more classical choice of measuring the angles in
the trigonometric sense, that is, positive is counterclockwise, would lead to
negative angular momenta for left-to-right movement of the robot. In this
case, (3.107) would become
σi = σcm + mtot ((xcm −xi) ˙ycm −(ycm −yi) ˙xcm) ,
(3.116)
(3.108) would become
˙σ1 = −∂Vs
∂qN
= −mtotg0 xcm,
(3.117)
(3.110) would become
σ+
cm −σ−
cm = −mtot [−ycm + y2 |xcm −x2]
 ˙x+
cm −˙x−
cm
˙y+
cm −˙y−
cm

,
(3.118)
and (3.111) would become
∂f2
∂qN
=

−ycm −y2
xcm −x2

.
(3.119)
In turn, certain equations derived from these would have to be modiﬁed in
Chapter 9.
© 2007 by Taylor & Francis Group, LLC


4
Periodic Orbits and Poincar´e Return Maps
This chapter develops eﬀective methods for determining the existence and
stability properties of periodic orbits in nonlinear systems with impulse ef-
fects. By eﬀective methods, we ﬁrst of all mean methods that lead to rigorous
conclusions.
We also mean that the methods are systematic, broadly ap-
plicable, and practical in terms of computations. Ultimately, our aim is to
design feedback loops that create provably asymptotically (or exponentially)
stable walking and running motions in bipedal robots, and we want analysis
techniques that can assist us in this endeavor.
In this book, periodic locomotion patterns such as walking and running
are interpreted as periodic orbits traced out in the state space of a robot’s
model. The classical technique for determining the existence and stability
properties of periodic orbits in nonlinear systems involves Poincar´e sections
and Poincar´e return maps. The Poincar´e return map transforms the problem
of ﬁnding periodic orbits into one of ﬁnding ﬁxed points of a map, which in
turn can also be viewed as the problem of ﬁnding equilibrium points of a
particular discrete-time nonlinear system. The method of Poincar´e sections
is certainly rigorous: it provides necessary and suﬃcient conditions for the
existence of (stable, asymptotically stable, or exponentially stable) periodic
orbits. The diﬃculty is that determining the return map for a typical system
is impossible to do analytically because it requires the closed-form solution of
a nonlinear ordinary diﬀerential equation. Certainly, numerical schemes can
be used to ﬁnd ﬁxed points of the return map and to estimate eigenvalues
for determining exponential stability. Often, this numerical process is com-
putationally intensive. The more important drawback is that the numerical
computations are not insightful, by which we mean that it is very diﬃcult
to establish a cause-and-eﬀect relationship between the existence or stability
properties of a periodic orbit and properties of the system (robot) that may
be altered by a designer.1
In this chapter, the method of Poincar´e sections will be augmented with
notions of timescale decomposition, invariance, and attractivity in order to
simplify its application to complex systems, while maintaining analytical rigor.
1Of course, diﬃcult does not mean impossible.
There has been success with numerical
implementations of Poincar´e methods in the passive robot community in terms of ﬁnding
parameter values—masses, inertias, link lengths—for a given robot that yield asymptotically
stable periodic orbits.
81
© 2007 by Taylor & Francis Group, LLC

82
Feedback Control of Dynamic Bipedal Robot Locomotion
The underlying idea is the following: The robot models addressed in this
book are underactuated in one or more phases. The unactuated degrees of
freedom in these models must be controlled indirectly through the actuated
degrees of freedom.
A good feedback design typically results in relatively
higher bandwidth—that is, faster rates of convergence—for variables that are
closer2 to the actuators. Also, with feedback, it is often possible to create
invariant manifolds—that is, lower-dimensional surfaces with the property
that if the system is initialized on the surface, its evolution remains on the
surface. It is often quite advantageous to exploit timescale and invariance
properties in stability analysis.
Finally, it is very natural to organize the feedback control of a hybrid sys-
tem, such as a bipedal robot, around the various modes or phases of the
system’s dynamics. Control actions can be updated continuously within each
phase and discretely at transitions between phases. This chapter will also ad-
dress how to formally include discrete control actions in the stability analysis.
4.1
Autonomous Systems with Impulse Eﬀects
An autonomous system with impulse eﬀects consists of three things: an au-
tonomous ordinary diﬀerential equation, ˙x(t) = f(x(t)), deﬁned on some state
space X; a hyper surface S at which solutions of the diﬀerential equation un-
dergo a discrete transition that is modeled as an instantaneous reinitialization
of the diﬀerential equation; and a rule Δ : S →X that speciﬁes the new initial
condition as a function of the point at which the solution impacts S. Such a
system will be denoted by
Σ :

˙x(t) = f(x(t))
x−(t) ̸∈S
x+(t) = Δ(x−(t))
x−(t) ∈S.
(4.1)
S will be called the impact surface and Δ the impact map. The terminology
switching surface and reset map, respectively, is also common and will be used
occasionally.
A formal deﬁnition of a solution ϕ(t) of (4.1) is developed on the basis of
solutions to the associated ordinary diﬀerential equation
˙x = f(x).
(4.2)
As a point of notation, ϕf will denote a solution of the ordinary diﬀerential
equation (4.2) while ϕ will denote a solution of the system with impulse eﬀects
2As measured by the number of integrations separating a variable from the inputs. This is
called the relative degree in control parlance.
© 2007 by Taylor & Francis Group, LLC

Periodic Orbits and Poincar´e Return Maps
83
(4.1). The point of introducing ϕf is that, ﬁrstly, a lot is known about solu-
tions of ordinary diﬀerential equations with continuous right-hand sides [110];
for example, if f is continuous, then solutions always exist over suﬃciently
small intervals of time. Secondly, in the proofs of various results, it is some-
times necessary to extend a solution of (4.2) “through” S, while this does not
make sense for (4.1).
4.1.1
Hybrid System Hypotheses
The following hypotheses concern the elements of (4.1).
A minimal set of hypotheses:
HSH1) X is a smooth embedded submanifold of Rn.
HSH2) f : X →T X is continuous and a solution of ˙x = f(x) from a given
initial condition is unique and depends continuously on the initial
condition.
HSH3) S is nonempty and there exist an open set ˘
X ⊂X and a diﬀeren-
tiable function H : ˘
X →R such that
S := {x ∈˘
X | H(x) = 0};
(4.3)
moreover, for every s ∈S, ∂H
∂x (s) ̸= 0.
HSH4) Δ : S →X is continuous, where S is given the subset topology
from X.
HSH5) Δ(S) ∩S = ∅, where Δ(S) is the set closure of Δ(S).
Since we will only be doing local analysis, without any essential loss of
generality, we can in fact assume that X is a simply connected open subset of
Rn. The more general setting of “smooth surfaces” in Rn is useful when we
look at subsystems in Section 4.4. The ﬁrst part of Hypothesis HSH2, namely
the continuity of f, implies that at any point x0 ∈X, a solution to (4.2) will
exist over a suﬃciently small interval of time [110]. This solution may not be
unique, and may not depend continuously on the initial condition; whence the
second part of Hypothesis HSH2. Under HSH2, there always exist solutions
of (4.2) with a maximal interval of existence. Hypothesis HSH3 implies that
S is a smooth hypersurface in X, that is, an embedded submanifold [127] with
dimension one less than the dimension of X. Hypothesis HSH4 ensures that
the result of an impact varies continuously with respect to where it occurs
on S. Hypothesis HSH5 ensures that the result of an impact does not lead
immediately to another impact event because every point in Δ(S) is a positive
distance away from S.
© 2007 by Taylor & Francis Group, LLC

84
Feedback Control of Dynamic Bipedal Robot Locomotion
Remark 4.1
When deﬁning the impact (or switching) surface S for use in
bipedal robot models, H is typically the height of the swing leg end above
the walking surface, pv
2; see Fig. 3.1.
It is often desirable to add further
restrictions on the nature of the impact, such as, an impact can only occur
when the swing leg is strictly in front of the stance leg, that is, ph
2 > ph
1, as
in Fig. 3.3 and (3.31). In this case, ˘
X := {x ∈X | ph
2 −ph
1 > 0}. However,
from a practical perspective, the same ends can be met by simply modifying
the state space X to exclude points where the swing leg end has non-positive
velocity whenever it is not strictly in front of the stance leg and its vertical
height does not exceed a given threshold. Hence, there is no essential loss
of generality in assuming ˘
X = X and using Hypothesis HSH3 in the simpler
form
HSH¯3) S is nonempty and there exists a diﬀerentiable function H : X →R
such that
S := {x ∈X | H(x) = 0};
(4.4)
moreover, for every s ∈S, ∂H
∂x (s) ̸= 0.
A stronger set of hypotheses:
An autonomous system with impact eﬀects
(4.1) is said to be continuously diﬀerentiable or C1 if it satisﬁes HSH1–HSH5
with HSH2 and HSH4 strengthened to:
HSH2’) f : X →T X is continuously diﬀerentiable
HSH4’) Δ : S →X is continuously diﬀerentiable.
4.1.2
Deﬁnition of Solutions
A function ϕ : [t0, tf) →X, tf ∈R ∪{∞}, tf > t0, is a solution3 of (4.1) if (i)
ϕ(t) is right continuous on [t0, tf), (ii) left and right limits exist at each point
t ∈(t0, tf), denoted by ϕ−(t) := limτ↗t ϕ(τ) and ϕ+(t) := limτ↘t ϕ(τ); and
(iii) there exists a closed discrete subset T ⊂[t0, tf) called impact times such
that, (a) for every t ̸∈T , ϕ(t) is diﬀerentiable, dϕ(t)
dt
= f(ϕ(t)), and ϕ(t) ̸∈S,
and (b) for t ∈T , ϕ−(t) ∈S and ϕ+(t) = Δ(ϕ−(t)). The diﬀerence between
left and right continuity is illustrated in Fig. 4.1.
The condition that the set of impact times T is closed and discrete means
that there is no “chattering” about an impact point,4 which simpliﬁes the
construction of solutions; on the other hand, this condition also means that
a maximal interval of existence5 of a solution may not exist because it may
3The deﬁnition is based on [250].
For a careful study of the existence of solutions of
mechanical systems with shocks, see [24,221].
4See the notion of a Zeno solution in the hybrid systems literature.
5Suppose that tf < ∞. Then ϕ : [t0, tf ) →X is a maximal solution of (4.1) if whenever
T
̸= ∅, ϕ : [max(T ), tf ) →X is a maximal solution of (4.2), and whenever T
= ∅,
© 2007 by Taylor & Francis Group, LLC

Periodic Orbits and Poincar´e Return Maps
85
t
t
t
t
(a)
(b)
(c)
(d)
Figure 4.1. Left and right continuity. In (a), the function is left continuous,
in (b), the function is right continuous, and in (c), the function is neither right
nor left continuous. The plot in (d) is not the graph of a function because
it takes on multiple values at the jumps. Despite this, common practice will
be followed and in most simulation plots found in future chapters, the jumps
will be shown as in (d) and the reader must understand that the solution is
being taken as in (b).
© 2007 by Taylor & Francis Group, LLC

86
Feedback Control of Dynamic Bipedal Robot Locomotion
involve a sequence of impact times with an accumulation point. Because a
solution ϕ is assumed to be right continuous, ϕ(t) = ϕ+(t) := limτ↘t ϕ(τ)
at all points in its domain of deﬁnition. Under HSH2, solutions to (4.1) are
unique. For x0 ∈X, the solution of (4.1) corresponding to the initial condition
x0 at time t0 is denoted ϕ(t, x0). When x0 ̸∈S, ϕ(t0, x0) = x0 because this
property holds for ϕf. When x0 ∈S, then ϕ(t0, x0) = Δ(x0) = ϕ(t0, Δ(x0))
because of right continuity and HSH5. Generally, there is never a value of
t where ϕ(t) ∈S, for any solution of (4.1). Hence, for initial conditions in
S, we will systematically write the corresponding solution as ϕ(t0, Δ(x0)) to
emphasize that the impact map must be applied ﬁrst.
4.1.3
Periodic Orbits and Stability Notions
A solution ϕ : [t0, ∞) →X of the autonomous system with impact eﬀects
(4.1) is periodic if there exists a ﬁnite T > 0 such that ϕ(t + T ) = ϕ(t) for all
t ∈[t0, ∞). A set O ⊂X is a periodic orbit of (4.1) if O = {ϕ(t) | t ≥t0} for
some periodic solution ϕ(t). An orbit is nontrivial if it contains more than
one point.
Remark 4.2
Note that a periodic orbit of a system with impulse eﬀects
may not be a closed set, since, for ¯t ∈T , the set of impact times, ϕ−(¯t) ̸∈O
(if solutions were assumed to be left continuous, instead of right continuous,
then ϕ+(¯t) ̸∈O ). Indeed, a periodic orbit is closed if, and only if, T = ∅.
For a bipedal robot, a closed periodic orbit would not correspond to walking
or running because there would be no impact with the ground.
A periodic orbit O is stable in the sense of Lyapunov if for every ϵ > 0,
there exists an open neighborhood V of O such that for every p ∈V, there
exists a solution ϕ : [0, ∞) →X of (4.1) satisfying ϕ(0) = p, dist(ϕ(t), O) <
ϵ for all t ≥0, where dist(p1, p2) is the usual Euclidean distance between
points p1, p2 ∈Rn and dist(p1, O) := infp2∈O dist(p1, p2).
O is attractive
if there exists an open neighborhood V of O such that for every p ∈V,
there exists a solution ϕ : [0, ∞) →X of (4.1) satisfying ϕ(0) = p and
limt→∞dist(ϕ(t), O) = 0. O is asymptotically stable in the sense of Lyapunov
if it is both stable and attractive. From here on, the qualiﬁer, “in the sense
of Lyapunov,” will be systematically assumed if it is not made explicit when
speaking of stability or asymptotic stability. O is exponentially stable if there
exists an open neighborhood V of O and positive constants N and γ such
that for every p ∈V, there exists a solution ϕ : [0, ∞) →X of (4.1) satisfying
ϕ(0) = p and dist(ϕ(t), O) ≤N exp(−γt)dist(p, O).
ϕ : [t0, tf ) →X is a maximal solution of (4.2). When tf = ∞, the solution is obviously
maximal.
© 2007 by Taylor & Francis Group, LLC

Periodic Orbits and Poincar´e Return Maps
87
A periodic orbit O is transversal to S if its closure intersects S in exactly
one point, and for ¯x := ¯O ∩S, LfH(¯x) := ∂H
∂x (¯x)f(¯x) ̸= 0 (in words, at the
intersection, ¯O is not tangent to S, where ¯O is the set closure of O). In the
case of a bipedal robot, a nontrivial periodic orbit transversal to S will also
be referred to as periodic locomotion.
Remark 4.3
The above deﬁnition has explicitly ruled out multiple (dis-
tinct) intersections with S, that is, orbits corresponding to m-periodic solu-
tions, where m ≥2 is the number of distinct intersections with S. These
more general periodic orbits are important when studying asymmetric gaits
or the period-doubling path to chaos [64,84,122,228]. An m-periodic orbit is
transversal to S if each of its intersections with S is transversal.
4.2
Poincar´e’s Method for Systems with Impulse Eﬀects
The method of Poincar´e sections is developed for systems with impulse eﬀects
(4.1) for the study of nontrivial periodic orbits that are transversal to the
impact surface. This will be done in a certain amount of generality so that a
wide class of bipedal robot models and controllers can be treated. In partic-
ular, some of the stabilizing controllers of Chapters 6 and 7 will make use of
feedbacks that are continuous, but not Lipschitz continuous. While Poincar´e’s
method carries over nicely to the hybrid setting with non-Lipschitz continu-
ous diﬀerential equations, the proof diﬀers considerably from the standard
one in [138, 173], for example.6 All proofs and several lemmas are available
in Appendix C.1. Sources for results and pertinent references are provided in
4.2.1
Formal Deﬁnitions and Basic Theorems
The ﬁrst aim is to deﬁne the Poincar´e return map. There is a natural choice
for the Poincar´e section, namely S. Deﬁne the time-to-impact function, TI :
X →R ∪{∞}, by
TI(x0) :=

inf{t ≥0 | ϕf(t, x0) ∈S}
if ∃t such that ϕf(t, x0) ∈S
∞
otherwise,
(4.5)
From Lemma C.1 in Appendix C.1, Hypotheses HSH1–HSH3 imply that TI
is continuous at points x0 where 0 < TI(x0) < ∞and LfH(ϕf(TI(x0), x0))
6The standard development assumes that the ﬂow is a local diﬀeomorphism, while, here, it
may be not even a homeomorphism.
© 2007 by Taylor & Francis Group, LLC
the End Notes.

88
Feedback Control of Dynamic Bipedal Robot Locomotion
Δ(x )
x
S
Δ(S)
x+
φ(t, Δ(x ))
P(x−)
Figure 4.2. Geometric interpretation of a Poincar´e return map P : S →S
for a system with impulse eﬀects.
The Poincar´e section is selected as the
switching surface, S.
A periodic orbit exists when P(x−) = x−.
Due to
right-continuity of the solutions, x−is not an element of the orbit.
With
left-continuous solutions, Δ(x−) would not be an element of the orbit.
̸= 0. Hence, under HSH1–HSH3,
˜
X := {x ∈X | 0 < TI(x) < ∞and LfH(ϕf(TI(x), x)) ̸= 0}
(4.6)
is open. If HSH4 also holds, then
˜S := Δ−1( ˜
X )
(4.7)
is an open subset of S. It immediately follows that under HSH1–HSH5, the
Poincar´e return map, P : ˜S →S by
P(x) := ϕf(TI(Δ(x)), Δ(x)),
(4.8)
is well deﬁned and continuous. In the case of a robot, the return map repre-
sents the evolution of the robot from just before an impact with the walking
surface to just before the next impact, assuming that a next impact does
occur. If it does not, that is, the robot falls due to the preceding impact or
fails in some other manner to complete a forward step, the point being ana-
lyzed is not in the domain of deﬁnition of the return map. The notion of a
Poincar´e map and a periodic orbit in a system with impact eﬀects is depicted
in Fig. 4.2.
Next, note that under HSH1–HSH5, if O is any periodic orbit of (4.1) that
is transversal to S, then O ⊂˜
X (this is essentially by the deﬁnitions of ˜
X and
transversal). Thus, there exists x0 ∈˜S that generates O in the sense that
Δ(x0) ∈O; indeed, x0 = ¯O ∩˜S. It makes sense therefore to denote the orbit
by O(Δ(x0)). The Poincar´e return map gives rise to a discrete-time system
on the Poincar´e section, S, by deﬁning
x[k + 1] = P(x[k]).
(4.9)
© 2007 by Taylor & Francis Group, LLC

Periodic Orbits and Poincar´e Return Maps
89
This system corresponds to sampling ϕ−at each impact with S; in other
words, the sampling process is event based. A point x∗∈˜S is said to be a
ﬁxed point of P if P(x∗) = x∗. Thus a ﬁxed point is an equilibrium point of
(4.9), and vice-versa. A ﬁxed point generates a periodic orbit of the hybrid
model (4.1) per O = O(Δ(x∗)) := {ϕ(t, Δ(x∗)) | 0 ≤t < TI(Δ(x∗))}. The
method of Poincar´e sections is based on the equivalence between periodic
orbits of the system with impulse eﬀects (4.1) and equilibrium points of the
sampled system (4.9). Furthermore, it establishes the equivalence between
the stability properties of periodic orbits of (4.1) and equilibrium points of
(4.9).
Theorem 4.1 (Method of Poincar´e Sections for Systems with Im-
pulse Eﬀects)
Under HSH1–HSH5, the following statements hold:
a) If O is a periodic orbit of (4.1) that is transversal to S, then there exists
a point x∗∈˜S that generates O.
b) x∗∈˜S is a ﬁxed point of P if, and only if, Δ(x∗) generates a periodic
orbit that is transversal to S.
c) x∗∈˜S is a stable equilibrium point of x[k + 1] = P(x[k]) if, and only if,
the orbit O(Δ(x∗)) is stable.
d) x∗∈˜S is an asymptotically stable equilibrium point of x[k+1] = P(x[k])
if, and only if, the orbit O(Δ(x∗)) is asymptotically stable.
Moreover, if the system with impulse eﬀects is continuously diﬀerentiable, that
is, Hypotheses HSH2 and HSH4 are strengthened to HSH2’ and HSH4’, then
e) x∗∈˜S is an exponentially stable equilibrium point of x[k + 1] = P(x[k])
if, and only if, the orbit O(Δ(x∗)) is exponentially stable.
The proof of the theorem is given in Appendix C.1.3. It is often convenient
to check exponential stability in terms of eigenvalues. When f is continuously
diﬀerentiable, the time-to-impact function TI is a continuously-diﬀerentiable
function on ˜
X [173] and, for each t in its domain of deﬁnition, ϕf(t, x0) is
a continuously-diﬀerentiable function of x0 [138]. When combined with the
continuous diﬀerentiability of Δ and Hypothesis HSH3 (S is an embedded
submanifold of X), the Poincar´e map (4.8) is a continuously-diﬀerentiable
function on ˜S. Thus, the corresponding sampled-data system (4.9) is continu-
ously diﬀerentiable, which means that exponential stability of its equilibrium
points can be completely characterized through eigenvalues of its lineariza-
tion [138].
© 2007 by Taylor & Francis Group, LLC

90
Feedback Control of Dynamic Bipedal Robot Locomotion
Corollary 4.1 (Method of Poincar´e Sections for Diﬀerentiable Sys-
tems with Impulse Eﬀects)
Consider Hypotheses HSH1–HSH5 and assume that HSH2 and HSH4 are
strengthened to HSH2’ and HSH4’.
Then TI :
˜
X →R and P : ˜S →S
are continuously diﬀerentiable, and, consequently,
f) x∗∈˜S is an exponentially stable equilibrium point of x[k + 1] = P(x[k])
if, and only if, the eigenvalues7 of DxP(x∗), the Jacobian linearization
of P at x∗, have magnitude strictly less than one.
4.2.2
The Poincar´e Return Map as a Partial Function
So far, when using the Poincar´e return map P : ˜S →S, we have been very
careful to ﬁrst deﬁne the set of points x0 ∈S at which P is well deﬁned
and has nice properties, such as continuity and P(x0) results in a transversal
intersection with S (i.e., LfH(P(x0)) ̸= 0). It is common practice—and much
more convenient—to simply write P : S →S for the Poincar´e return map and
to understand that by this collection of symbols we mean the following rule:
take a point x0 ∈S and apply the impact map to obtain Δ(x0); initialize
the diﬀerential equation (4.2) at Δ(x0) and compute its maximal solution,
x : [0, tf) →X; if there does not exist any ﬁnite t such that x(t) ∈S, then P
is not deﬁned at x0; otherwise, P(x0) = x(t1), where t1 is the smallest t such
that x(t) ∈S. In particular, we allow that P does not assign a value to all
points in S. This is formalized in mathematics with the notion of a partial
map or a partial function.
A partial function f : A →B is a rule that associates to every element
of A at most one element in B.
A is called the domain and B is called
the codomain. If a partial function associates precisely one element in B to
every element in A, then it is a function. One says that a partial function
f : A →B is well deﬁned at a point a ∈A if there exists a point b ∈B such
that b = f(a), and f is well deﬁned when it is well deﬁned at every point in its
domain. In this sense, a function is a well-deﬁned partial function, and every
partial function is well deﬁned on f −1(B) := {a ∈A | ∃b ∈B, f(a) = b },
the inverse image of B under f.
It is important to note that by writing the Poincar´e return map as a partial
map, P : S →S, the notion of a ﬁxed point of P does not change, because
if x∗= P(x∗) for some x∗∈S, then P is necessarily well deﬁned at x∗. The
same goes for continuity at a point, diﬀerentiability, and so forth: to possess
a certain property at a given point, the partial map must ﬁrst be well deﬁned
at that point.
7It is important to note that DxP (x∗) is the Jacobian of the Poincar´e map viewed as a
mapping from ˜S →S and not as a mapping from Rn →Rn; consequently, there is not a
supplemental eigenvalue with value 1 as in [173], for example.
© 2007 by Taylor & Francis Group, LLC

Periodic Orbits and Poincar´e Return Maps
91
Proposition 4.1
Consider the system with impulse eﬀects (4.1) and assume Hypotheses HSH1–
HSH5 hold. Let P : S →S be the partial Poincar´e map.
a) Let the set ˜S be deﬁned as in (4.7). Then,
˜S = {x ∈S | P is continuous at x and LfH(P(x)) ̸= 0}.
(4.10)
b) If x∗∈S is a stable equilibrium point of x[k + 1] = P(x[k]), then P is
continuous at x∗. Consequently, if x∗∈S is a stable equilibrium point
of x[k + 1] = P(x[k]) and LfH(x∗) ̸= 0, then x∗∈˜S.
The proof of the proposition is given in Appendix C.1.4. In terms of the
partial Poincar´e map, Theorem 4.1 on the stability of periodic orbits can be
restated as follows.
Theorem 4.2 (Method of Poincar´e Sections with a Partial Map)
Assume HSH1–HSH5 and let P : S →S be the partial Poincar´e map. Suppose
that x∗∈S satisﬁes P(x∗) = x∗and LfH(x∗) ̸= 0. Then,
a) x∗is a stable equilibrium point of x[k + 1] = P(x[k]) if, and only if,
the orbit O(Δ(x∗)) is stable and its closure ¯O(Δ(x∗)) intersects S only
once.
b) x∗is an asymptotically stable equilibrium point of x[k + 1] = P(x[k]) if,
and only if, the orbit O(Δ(x∗)) is asymptotically stable and its closure
¯O(Δ(x∗)) intersects S only once.
Moreover, if the Hypotheses HSH2 and HSH4 are strengthened to HSH2’ and
HSH4’, then
c) x∗is an exponentially stable equilibrium point of x[k + 1] = P(x[k]) if,
and only if, the orbit O(Δ(x∗)) is exponentially stable and its closure
¯O(Δ(x∗)) intersects S only once.
In summary, the Poincar´e return map can be viewed as a partial map on all
of S or as a (well-deﬁned) map on a subset of S. At times, it is quite convenient
to discuss P without ﬁrst specifying ˜S, and we often will do that. The same
stability results can be proven in either case, and ˜S can be determined from
the partial map, if it is needed.
4.3
Analyzing More General Hybrid Models
This section will address systems with two continuous phases and discrete
transitions between the phases. Such models occur in running with point feet
© 2007 by Taylor & Francis Group, LLC

92
Feedback Control of Dynamic Bipedal Robot Locomotion
and in walking with nontrivial feet. Models with three or more continuous
phases will not be addressed, but the reader will easily see how their analy-
sis would proceed. Such models would occur, for example, in running with
nontrivial feet and in walking with nontrivial feet where the gait consists of
successive phases of heel strike and roll, the foot ﬂat on the ground, toe roll,
followed by an instantaneous double support phase.
4.3.1
Hybrid Model with Two Continuous Phases
Let X1 and X2 be embedded submanifolds of Rn1 and Rn2, respectively, upon
which are deﬁned the diﬀerential equations F1 and F2. Let S2
1 be a hyper
surface in the state space X1 that determines when a transition from X1 to
X2 takes place, according to the transition function T 2
1 , and similarly for S1
2
and T 1
2 . The corresponding hybrid model is written as follows.
Σ1 :
⎧
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎩
X1 ⊂Rn1
F1 : ( ˙x1) = f1(x1)
S2
1 = {x1 ∈X1 | H2
1(x1) = 0}
T 2
1 : x+
2 = Δ2
1(x−
1 )
(4.11)
Σ2 :
⎧
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎩
X2 ⊂Rn2
F2 : ( ˙x2) = f2(x2)
S1
2 = {x2 ∈X2 | H1
2(x2) = 0}
T 1
2 : x+
1 = Δ1
2(x−
2 ).
It is assumed that Hypotheses HSH1–HSH5 hold for (4.11) when applied to
Σ1 and Σ2 in the obvious manner.
4.3.2
Basic Deﬁnitions
The mathematical meaning of a solution of the multiphase model (4.11) is
quite similar to the one given for (4.1) and will be expressed using a formalism
adopted from [103]. As in Section 4.1.2 and [167], the idea is to piece together
trajectories of the ﬂows F1 and F2 in such a way that a transition occurs when
a ﬂow intersects a switching hyper-surface, and at each transition the new
initial condition is determined by the transition functions. This is formalized
as follows. Denote X = X1 ∪X2 as the union of the two state manifolds. A
function ϕ : [t0, tf) →X, tf ∈R ∪{∞}, tf > t0, is a solution of (4.11) if there
exists a closed discrete subset T ⊂[t0, tf), T = {t0 < t1 < · · · < tj < · · · },
© 2007 by Taylor & Francis Group, LLC

Periodic Orbits and Poincar´e Return Maps
93
called the set of switching times, and a function i : T →{1, 2}, which speciﬁes
the model’s phase or mode, such that
(a) for all8 j ≥0, i(j) ̸= i(j + 1);
(b) for all j ≥0, ϕ restricted to [tj, tj+1) takes values in Xi(j);
(c) for all j ≥0, ϕ restricted to [tj, tj+1) is right continuous, and hence,
in particular, for every point t ∈[tj, tj+1), the limit from the right,
ϕ+(t) := limτ↘t ϕ(τ), exists and is ﬁnite;
(d) for all j ≥0, ϕ restricted to (tj, tj+1) satisﬁes the diﬀerential equation
˙ϕ = fi(j)(ϕ);
(e) for all j ≥0 and for every point t ∈(tj, tj+1), the limit from the left,
ϕ+(t) := limτ↗t ϕ(τ), exists and is ﬁnite;
(f) for all j ≥0, and t ∈(tj, tj+1), ϕ(t) ̸∈Si(j+1)
i(j)
;
(g) for all j ≥1, and tj < ∞, ϕ+(tj) = Δi(j+1)
i(j)
(ϕ−(tj)).
The condition that the set of switching times is closed and discrete implies
that there is no “chattering.”
A solution ϕ(t) of (4.11) is periodic if there exists a ﬁnite T > 0 such that
ϕ(t + T ) = ϕ(t) for all t ∈[t0, ∞).
A set O ⊂X is a periodic orbit of
(4.11) if O = {ϕ(t) | t ≥t0} for some periodic solution ϕ(t). The deﬁnitions
of orbital stability in the sense of Lyapunov, orbital asymptotic stability and
orbital exponential stability are identical to those given in Section 4.1.3 once
an appropriate notion of distance is deﬁned on X = X1 ∪X2. Deﬁne dist :
X × X →R ∪{∞} to be
dist(p1, p2) :=

||p1 −p2||
p1, p2 ∈X1 or p1, p2 ∈X2
∞
otherwise,
(4.12)
and
dist(p1, O) := inf
p2∈O dist(p1, p2).
(4.13)
As an example, a periodic orbit O of (4.11) is stable in the sense of Lyapunov
if for every ϵ > 0, there exists an open neighborhood9 V of O such that
for every p ∈V, there exists a solution ϕ : [0, ∞) →X of (4.11) satisfying
ϕ(0) = p, dist(ϕ(t), O) < ϵ for all t ≥0.
A periodic orbit O is transversal to S1 and S2 if its closure intersects
S1 and S2 in exactly one point each, and for ¯x1 := ¯O ∩S1, Lf1H2
1(¯x1) :=
8In an abuse of notation, i(j) is written for i(tj).
9That is, both V ∩X1 and V ∩X2 are open.
© 2007 by Taylor & Francis Group, LLC

94
Feedback Control of Dynamic Bipedal Robot Locomotion
∂H2
1
∂x1 (¯x1)f1(¯x1) ̸= 0 and similarly for ¯x2. In the case of a bipedal robot, a
nontrivial periodic orbit transversal to S1 and S2 will also be referred to as
periodic locomotion.
4.3.3
Existence and Stability of Periodic Orbits
The Poincar´e return map remains the mathematical tool of choice for deter-
mining the existence and stability properties of periodic orbits. This section
ﬁrst deﬁnes the Poincar´e section and the Poincar´e return map that will be
used for analyzing periodic orbits of (4.11).
It is then shown how its use
can be reduced to applying the corresponding results for systems with im-
pulse eﬀects, that is, the stability theorems presented in Section 4.2 through
Section 4.6.
4.3.3.1
Deﬁnition of the Poincar´e Return Map
Following Section 4.2, deﬁne the phase two time-to-impact function,10 TI,2 :
X2 →R ∪{∞}, by
TI,2(x0) :=

inf{t ≥0 | ϕ2(t, x0) ∈S1
2}
if ∃t such that ϕ2(t, x0) ∈S1
2
∞
otherwise,
(4.14)
where ϕ2(t, x0) is an integral curve of (4.11) corresponding to ϕ2(0, x0) = x0.
From Lemma C.1, TI,2 is continuous at points x0 where 0 < TI,2(x0) < ∞
and the intersection with S1
2 is transversal. Hence, ˜
X2 := {x2 ∈X2 | 0 <
TI,2(x2) < ∞and Lf2H1
2(ϕ2(TI,2(x2), x2)) ̸= 0} is open, and consequently,
˜
S2
1 := Δ2 −1
1
( ˜
X2) is an open subset of S2
1. It follows that under Hypotheses
HSH1–HSH5 the generalized Poincar´e phase two map P2 : ˜S2
1 →S1
2 deﬁned
by
P2(x1) := ϕ2(TI,2(Δ2
1(x1)), Δ2
1(x1)),
(4.15)
is well deﬁned and continuous (the terminology of a generalized-Poincar´e map
are strengthened to HSH2’ and HSH4’, [173, Appendix D] proves that it is
continuously diﬀerentiable.
Similarly, the generalized Poincar´e phase one map P1 : ˜S1
2 →˜S2
1, is deﬁned
by
P1(x2) := ϕ1(TI,1(Δ1
2(x2)), Δ1
2(x2)),
(4.16)
10Flows from one surface to another are sometimes called impact maps or functions, as
they are here.
© 2007 by Taylor & Francis Group, LLC
follows Appendix D of [173]). Moreover, when Hypotheses HSH2 and HSH4

Periodic Orbits and Poincar´e Return Maps
95
where, TI,1 : x0 ∈X2 →R ∪{∞} by
TI,1(x0) :=

inf{t ≥0 | ϕ1(t, x0) ∈˜S2
1}
if ∃t such that ϕ1(t, x0) ∈˜S2
1
∞
otherwise,
(4.17)
and
˜S1
2 = {x2 ∈S1
2 | 0 < TI,1(Δ1
2(x2)) < ∞,
Lf1H2
1(ϕ1(TI,1(Δ1
2(x2)), Δ1
2(x2))) ̸= 0}.
(4.18)
When Hypotheses HSH2 and HSH4 are strengthened to HSH2’ and HSH4’,
P1 is continuously diﬀerentiable.
The Poincar´e return map P : ˜S1
2 →S1
2 for (4.11) is deﬁned by11
P := P2 ◦P1.
(4.19)
4.3.3.2
Analysis of the Poincar´e Return Map
Theorem 4.3 (Connecting Two-Phase Models to Single-Phase
Models)
Let P be the Poincar´e return map deﬁned in (4.19) for the two-phase model in
(4.11). P is also the Poincar´e return map for the system with impulse eﬀects
Σ :

˙x(t) = f2(x(t))
x−(t) ̸∈S
x+(t) = Δ(x−(t))
x−(t) ∈S,
(4.20)
where S := ˜S1
2 and Δ := Δ2
1 ◦P1.
Proof
This follows immediately from the construction of the Poincar´e re-
turn map in (4.8).
It is emphasized that this observation is important because it allows results
developed for models of the form (4.20) to be applied to models with multiple
phases. In particular, the material developed in Section 4.2 and Sections 4.4–
4.6 is available when analyzing the Poincar´e map of (4.11).
11Clearly, the relative roles of phases one and two can be reversed, in which case P :=
P1 ◦P2 : ˜S2
1 →S2
1.
© 2007 by Taylor & Francis Group, LLC

96
Feedback Control of Dynamic Bipedal Robot Locomotion
4.4
A Low-Dimensional Stability Test Based on
Finite-Time Convergence
The Poincar´e methods developed in the previous sections are fundamental
for characterizing stable periodic locomotion in bipedal robots. However, the
computations required to apply them in their current form can be prohibitive.
The aim of this section is to present special circumstances where the applica-
tion of Poincar´e methods can be carried out in a straightforward and insightful
manner. The additional hypotheses used here are motivated in part by the
hybrid zero dynamics developed in Chapter 5 and in part by the desire to
achieve analytical simplicity. These additional hypotheses will be achieved
with speciﬁc feedback designs in Chapter 6 and Chapters 8–11.
4.4.1
Preliminaries
Consider the system with impulse eﬀects (4.1) with the diﬀerential equation
˙x = f(x) and impact map Δ : S →X. A set Z ⊂X is forward invariant if
for each x0 ∈Z, there exists t1 > 0 such that ϕf(t, x0) ∈Z for t ∈[0, t1). Z
is impact invariant if S ∩Z ̸= ∅and Δ(S ∩Z) ⊂Z. Z is hybrid invariant if
it is both forward invariant and impact invariant.
Deﬁne the settling time to Z, T set
Z
: X →R ∪{∞}, by
T set
Z (x0) :=
⎧
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎩
inf{τ ≥0 | ∃τ1 > τ, s.t.
if ∃t such that
ϕf(t, x0) ∈Z, t ∈[τ, τ1)}
ϕf(t, x0) ∈Z
∞
otherwise.
(4.21)
Z is locally continuously ﬁnite-time attractive if Z is forward invariant and
there exists an open set V containing Z such that T set
Z
is ﬁnite and continuous
at each point of V.
Remark 4.4
From [138], if f is locally Lipschitz continuous on an open
neighborhood of Z ⊂X and Z is locally continuously ﬁnite-time attractive,
then Z has nonempty interior (in particular, it cannot have dimension lower
than that of X). Hence, interesting examples of sets that are locally continu-
ously ﬁnite-time attractive necessarily involve diﬀerential equations that are
not locally Lipschitz continuous. As an example, the origin is continuously
ﬁnite-time attractive for the diﬀerential equation ˙x = −sgn(x)
+
|x|.
4.4.2
Invariance Hypotheses
The autonomous system with impulse eﬀects (4.1) will be analyzed when it
possesses a subset Z ⊂X satisfying some or all of the hypotheses below.
© 2007 by Taylor & Francis Group, LLC

Periodic Orbits and Poincar´e Return Maps
97
HInv1) Z is an embedded submanifold of X.
HInv2) S ∩Z is an embedded submanifold with dimension one less than
the dimension of Z.
HInv3) Z is locally continuously ﬁnite-time attractive.
HInv4) Z is hybrid invariant (forward invariant and impact invariant).
Lemma 4.1
Assume Hypotheses HInv1–HInv3.
1. The set
ˆS := {x0 ∈S | T set
Z (Δ(x0)) < TI(Δ(x0)) < ∞,
LfH(φf(TI(Δ(x0)), Δ(x0))) ̸= 0}
(4.22)
is an open subset of ˜S, as deﬁned in (4.7).
2. Let P : S →S be the Poincar´e return map. Then P : ˆS →S ∩Z.
The straightforward proof is skipped.
4.4.3
The Restricted Poincar´e Map
Deﬁne the restricted Poincar´e map
ρ : ˆS ∩Z →S ∩Z by ρ(x) := P(x).
(4.23)
For x∗∈ˆS, P(x∗) ∈S ∩Z. Thus, by the deﬁnition of ρ, P(x∗) = x∗if,
and only if, x∗∈ˆS ∩Z and ρ(x∗) = x∗. Suppose that for some x0 ∈ˆS, the
sequence x[k + 1] := P(x[k]) is well deﬁned for k ≥0, and remains in some
open neighborhood of x0. Then for all k ≥1, x[k + 1] = ρ(x[k]). It follows
that x∗∈ˆS is a stable (resp., asymptotically stable, exponentially stable)
equilibrium point of P if, and only if, it is a stable (resp., asymptotically
stable, exponentially stable) equilibrium point of ρ. Thus, the determination
of the existence and stability properties of periodic orbits that are transversal
to ˆS can be reduced to the analysis of a low-dimensional map.
4.4.4
Stability Analysis Based on the Restricted Poincar´e
Map
The above remarks are summarized in the following theorem.
© 2007 by Taylor & Francis Group, LLC

98
Feedback Control of Dynamic Bipedal Robot Locomotion
Theorem 4.4 (Low-Dimensional Stability Test-I)
Assume that the autonomous system with impulse eﬀects (4.1) satisﬁes Hy-
potheses HSH1–HSH5.
Suppose furthermore that Z ⊂X satisﬁes HInv1–
HInv3. Then,
1. A periodic orbit is transversal to ˆS if, and only if, it is transversal to
ˆS ∩Z.
2. x∗∈
ˆS ∩Z gives rise to a periodic orbit of (4.1) if, and only if,
ρ(x∗) = x∗.
3. x∗∈ˆS ∩Z gives rise to a stable (resp., asymptotically stable) periodic
orbit of (4.1) if, and only if, x∗is a stable (resp., asymptotically stable)
equilibrium point of ρ.
Theorem 4.4 identiﬁes conditions under which periodic orbits of (4.1) may
be rigorously characterized without computing the full Poincar´e map: it is
only necessary to evaluate a restriction of the Poincar´e map to the set ˆS ∩Z.
The computational savings can be substantial when Z has relatively low di-
mension. It must be emphasized however that the determination of ρ := P|Z
still requires the solution of the diﬀerential equation (4.1) on X, even though
its initial conditions are being taken from ˆS ∩Z. It would be computationally
advantageous if the restricted Poinicar´e map could be computed on the basis
of a lower-order diﬀerential equation. The additional assumption required to
achieve this is impact invariance. Note that Z is impact invariant and lo-
cally continuously ﬁnite-time attractive if, and only if, Z is hybrid invariant
and locally continuously ﬁnite-time attractive; this is because local continuous
ﬁnite-time attractivity includes, as part of its deﬁnition, forward invariance.
By forward invariance, solutions of ˙x = f(x) initialized in Z remain in Z.
Denote the restriction of f to Z by f|Z and the associated diﬀerential equation
by ˙z = f|Z(z). Similarly, let H|Z and Δ|S∩Z denote the restriction of H and Δ
to Z. We note that Hypotheses HSH1–HSH5 on (4.1) imply the corresponding
properties on the restriction dynamics. Indeed, H|Z clearly satisﬁes HSH3,
and by impact invariance, Δ|S∩Z : S ∩Z →Z by Δ|S∩Z(z) := Δ(z), z ∈Z,
satisﬁes HSH4 and HSH5. Hence, the hybrid restriction dynamics
Σ|Z :

˙z(t) = f|Z(z(t))
z−(t) ̸∈S ∩Z
z+(t) = Δ|S∩Z(z−(t))
z−(t) ∈S ∩Z
(4.24)
is a system with impulse eﬀects in its own right, verifying Hypotheses HSH1–
HSH5 with respect to its state space, Z. Therefore, Theorem 4.1 and Corol-
lary 4.1 on the method of Poincar´e sections can be applied to characterize
periodic orbits in (4.24). In order to proﬁtably use this observation, two fur-
ther observations need to be made: (1) By construction, periodic orbits of the
hybrid restriction dynamics are also periodic orbits of the full-dimensional
model (4.1); (2) The Poincar´e map of the hybrid restriction dynamics is the
© 2007 by Taylor & Francis Group, LLC

Periodic Orbits and Poincar´e Return Maps
99
restriction of the Poincar´e map of the full-dimensional dynamics to Z, that is,
P|Z is the Poincar´e map of the hybrid restriction dynamics. Hence, by The-
orem 4.4, the stability properties of orbits of the hybrid restriction dynamics
carry over to the full-dimensional dynamics. In other words, the properties
of certain periodic orbits of the full-dimensional dynamic can be completely
determined on the basis of a lower-dimensional model. This is formalized in
the next theorem.
Theorem 4.5 (Low-Dimensional Stability Test-II)
Assume that the autonomous system with impulse eﬀects, (4.1), satisﬁes Hy-
potheses HSH1–HSH5.
Suppose furthermore that Z ⊂X satisﬁes HInv1–
HInv4.
Then, all of the conclusions of Theorem 4.4 hold.
Moreover, the
restricted Poincar´e map ρ := P|Z is precisely the Poincar´e map of the hybrid
restriction dynamics (4.24). Consequently, stable (resp., asymptotically sta-
ble) orbits of the reduced-dimensional system with impulse eﬀects, (4.24), are
also stable (resp., asymptotically stable) orbits of the full-dimensional system
with impulse eﬀects, (4.1), and if both f|Z and Δ|Z in (4.24) are continuously
diﬀerentiable, then the correspondence extends to exponentially stable orbits.
The straightforward proof of Theorem 4.4 is not given; only the proof of the
last part of Theorem 4.5 is sketched in Appendix C.1.5. Using Proposition 4.1
and the partial Poincar´e map yields a convenient restatement of Theorem 4.5:
Corollary 4.2
Assume that the autonomous system with impulse eﬀects, (4.1), satisﬁes Hy-
potheses HSH1–HSH5.
Suppose furthermore that Z ⊂X satisﬁes HInv1–
HInv4. Then (4.1) has a stable (resp., asymptotically stable) orbit transversal
to S if, and only if, the discrete-time system
x[k + 1] = ρ(x[k])
(4.25)
with state space S ∩Z has a stable (resp., asymptotically stable) equilibrium
point x∗such that LfH(x∗) ̸= 0. Moreover, if f|Z and Δ|S∩Z are continu-
ously diﬀerentiable, then the equivalence also holds for exponential stability.
4.5
A Low-Dimensional Stability Test Based on
Timescale Separation
Using the notion of ﬁnite-time convergence, the previous section established
conditions under which a periodic orbit in a system with impulse eﬀects is
© 2007 by Taylor & Francis Group, LLC

100
Feedback Control of Dynamic Bipedal Robot Locomotion
stable or asymptotically stable, if, and only if, the orbit is stable or asymp-
totically stable in a hybrid restriction dynamics. It will be seen later that
this provides an interesting “recipe” for designing feedback laws, namely, the
feedback law should ensure three things: the creation of a hybrid invariant
surface, the ﬁnite-time attractivity of the surface, and the creation of an
asymptotically stable orbit in the restriction dynamics.
This section establishes a similar low-dimensional stability result when the
invariant surface is “suﬃciently rapidly exponentially attractive” instead of
being ﬁnite-time attractive.
The result is reminiscent of classical singular
perturbation or timescale separation arguments [140]. Roughly speaking, the
previous section on ﬁnite-time convergence can be viewed as the ultimate in
timescale separation, since the dynamics transversal to the invariant surface
were inﬁnitely fast when compared to the dynamics on the surface. The result
here replaces “inﬁnitely fast” with “suﬃciently fast.”
4.5.1
System Hypotheses
Consider a system with impulse eﬀects that depends on a real parameter
ϵ > 0,
Σϵ :

˙x = f ϵ(x),
x−/∈S
x+ = Δ(x−),
x−∈S,
(4.26)
and suppose that for each value of ϵ > 0, Hypotheses HSH1, HSH2’, HSH3,
HSH4’, and HSH5 hold. For later use, a solution of ˙x = f ϵ(x) is written
as φϵ(t, x0).
The time-to-impact function is T ϵ
I , and the Poincar´e map is
P ϵ : S →S. In addition, suppose that the following structural hypotheses are
met:
HS1) there exist global coordinates x = (z; η) for X ⊂Rn, such that
z ∈Rk, and η ∈Rn−k, 1 < k < n, in which f ϵ has the form
f ϵ(x) := f ϵ(z, η) :=

f1:k(z, η)
f ϵ
k+1:n(η)

;
(4.27)
HS2) for Z := {(z; η) ∈X | η = 0}, S ∩Z is a (k −1)-dimensional,
C1-embedded submanifold of Z, and
Δ(S ∩Z) ⊂Z;
(4.28)
HS3) (4.26) has a periodic orbit O that is contained in Z, and hence the
orbit is independent of ϵ;
HS4) x∗:= ¯O ∩S ∩Z is a singleton;
HS5) Lf ϵH(x∗) ̸= 0; and
© 2007 by Taylor & Francis Group, LLC

Periodic Orbits and Poincar´e Return Maps
101
HS6) f ϵ
k+1:n(η) = A(ϵ)η, and limϵ↘0 eA(ϵ) = 0.
Hypotheses HS1 and HS6 imply that the set Z is invariant under the con-
tinuous part of the model, ˙x = f ϵ(x), so that if x0 ∈Z then for all t in its
maximal domain of existence, φϵ(t, x0) ∈Z. Hypothesis HS2 implies that
Z remains invariant across the impact event, and hence the solution of (4.1)
satisﬁes x0 ∈Z implies ϕ(t, x0) ∈Z on its domain of existence. Together,
Hypotheses HS1 and HS2 imply that the restriction of Σϵ to the manifold Z is
a well-deﬁned system with impulse eﬀects, which will be called the restriction
dynamics, ΣZ,
ΣZ :

˙z = fZ(z)
z−/∈S ∩Z
z+ = ΔZ(z−)
z−∈S ∩Z,
(4.29)
where fZ(z) := f ϵ(z, 0), and ΔZ = Δ(z, 0). Whenever convenient, z will also
be viewed as an element of X by the identiﬁcation z = (z; 0). The invariance
of Z also yields
P ϵ(S ∩Z) ⊂S ∩Z.
(4.30)
From Hypothesis HS3, O is a periodic orbit of the restriction dynamics.
The restriction of f ϵ to Z removes any dependence on ϵ. This fact may be
used to show that φZ := φϵ|Z, TI,Z := T ϵ
I |Z, and P ϵ|Z are also independent
of ϵ, and hence,
t∗:= T ϵ
I (Δ(x∗)) = TI,Z(ΔZ(x∗)),
(4.31)
is independent of ϵ.
On the basis of (4.30), the restricted Poincar´e map, ρ : S ∩Z →S ∩Z,
may be deﬁned as ρ := P ϵ|Z, or equivalently,
ρ(z) := φZ(TI,Z(ΔZ(z)), ΔZ(z)),
(4.32)
and is independent of ϵ. From HS4, it follows that x∗is a ﬁxed point of P ϵ
and ρ, and from HS5, the orbit is transversal to S, and hence also to S ∩Z.
Hypothesis HS6 says that the dynamics transversal to Z is “suﬃciently
rapidly” exponentially contracting. When the solution of (4.1) is not on the
periodic orbit, η(t) ̸= 0. In many situations, such as bipedal walking, the
impact map increases the norm of η at each impact. Hypothesis HS6 provides
control over the speed with which η(t) converges to zero during the contin-
uous phase, so that, over a cycle consisting of an impact event followed by
continuous ﬂow, the solution may converge to the orbit.
4.5.2
Stability Analysis Based on the Restricted Poincar´e
Map
Theorem 4.6 (Low-Dimensional Stability Test-III)
Under Hypotheses HSH1, HSH2’, HSH3, HSH4’, HSH5, and HS1–HS6, there
exists ¯ϵ > 0 such that for 0 < ϵ < ¯ϵ, the following are equivalent:
© 2007 by Taylor & Francis Group, LLC

102
Feedback Control of Dynamic Bipedal Robot Locomotion
a) x∗is an exponentially stable ﬁxed point of ρ;
b) x∗is an exponentially stable ﬁxed point of P ϵ.
In other words, for ϵ > 0 suﬃciently small, an exponentially stable periodic
orbit of the restriction dynamics is also an exponentially stable periodic orbit
of the full-dimensional model. The proof is given in Appendix C.1.6. An
interesting structural property of the Jacobian of the Poincar´e map evaluated
at the ﬁxed point is brought out in Lemma C.5.
4.6
Including Event-Based Control
In this section, we assume that various elements of the system with impulse
eﬀects (4.1) depend on one or more parameters that are to be held constant
between impact events, but at each impact, the parameters may be updated.
The utility of this feature becomes apparent, for example, when a within-
stride controller has been designed to depend on a parameter in such a way
that by changing the parameter’s value, diﬀerent locomotion characteristics
may be achieved, such as walking at a diﬀerent speed, or with a diﬀerent step
length. We will analyze two situations.
In the ﬁrst situation, the parameter takes on discrete values and is updated
infrequently at impact events. Our objective is to transfer the system from
a neighborhood of one asymptotically stable periodic orbit to another, while
“guaranteeing stability.” The method we follow is motivated by a switching
idea presented in [30]. In this reference, controllers were designed to accom-
plish the individual tasks of juggling, catching, and palming a ping-pong ball
by a robot arm. The domains of attraction of each controller were empiri-
cally estimated within the full state space of the robot. The controllers were
then sequentially composed via switching to accomplish the complex task of
maneuvering the ping-pong ball in a three-dimensional workspace with an ob-
stacle. Switching from one controller to another without loss of stability was
accomplished by allowing a switch to occur only if the current state of the
robot was in the domain of attraction of the next desired task. The problem
we analyze here is more challenging than the situation faced in [30] in the
sense that we allow that the domains of attraction of any two of the indi-
vidual periodic orbits may have empty intersection, and hence a transition
phase will be required to steer the system from the domain of attraction of
one periodic orbit into the domain of attraction of another periodic orbit.
In the second situation, the parameter will take on a continuum of values
and may be updated at each impact event. Our objective is to analyze when a
given event-based update rule for the parameter will result in a stable, periodic
© 2007 by Taylor & Francis Group, LLC

Periodic Orbits and Poincar´e Return Maps
103
orbit. The parameter update rule will be thought of as an event-driven, static
or dynamic, feedback law.
4.6.1
Analyzing Event-Based Control with the Full-Order
Model
Infrequent switching or transition control:
Consider a collection of
systems with impulse eﬀects, indexed by a parameter a,
Σa :

˙x(t) = f(x(t), a)
x−(t) ̸∈S
x+(t) = Δ(x−(t), a)
x−(t) ∈S,
(4.33)
with common state space x ∈X and impact set S. Assume that a takes
values in a set A, and that for each value of a, Hypotheses HSH1–HSH5 are
satisﬁed. For a ∈A, let Pa : S →S be the Poincar´e return map and denote
the corresponding diﬀerence equation on S by x[k + 1] = Pa(x[k]). Suppose
that two elements α and β belonging to A give rise to asymptotically stable
periodic orbits Oα and Oβ of (4.33) that are transversal to S. The goal is
to understand when (or how) it is possible to synthesize a solution of (4.33)
that starts near Oα and converges to Oβ, where a solution consists of piecing
together trajectories in which the parameter is held constant between impacts.
In other words, a solution corresponds to a switching policy, where switches
are only allowed to occur at impacts.
Denote the ﬁxed points of the Poincar´e return maps Pα and Pβ by x∗
α and
x∗
β. It is supposed the Poincar´e maps are continuous at their ﬁxed points and
that the ﬁxed points are transversal to S. Finally, let Dα ⊂S and Dβ ⊂S
be the corresponding domains of attraction.
In terms of synthesizing a control law to transfer from a neighborhood of
Oα to a neighborhood of Oβ, the simplest situation occurs when x∗
α ∈Dβ.
Indeed, in this case, any solution of (4.33) that enters Dα will eventually enter
Dβ, at which time, switching the parameter value from α to β and keeping it
constant thereafter will result in convergence to x∗
β, and consequently, to Oβ.
Conversely, if x∗
α ̸∈Dβ, there is no guarantee that a simple switch in parameter
value from α to β will result in a solution that converges to Oβ. Indeed, such
a simple switching policy would be guaranteed to fail when (4.33) with a = α
is initialized suﬃciently closely to Oα. A richer family of trajectories is thus
required for synthesizing a switching policy.
Proposition 4.2 (Transition Control-I)
Consider the parameterized system with impulse eﬀects (4.33), which is as-
sumed to satisfy Hypotheses HSH1–HSH5 for parameters taking values in A.
Let α, β, Oα, Oβ, Dα ⊂S, and Dβ ⊂S be as above. Suppose that A contains
© 2007 by Taylor & Francis Group, LLC

104
Feedback Control of Dynamic Bipedal Robot Locomotion
a third element denoted (α →β) such that12 x∗
α ∈D(α→β) := P −1
(α→β)(Dβ).
Then, any solution of (4.33) that is initialized in the domain of attraction
of Oα will asymptotically converge to Oβ under the following switching pol-
icy: hold the parameter constant and equal to α until the trajectory impacts
D(α→β); immediately switch the parameter value to (α →β); at the very next
impact, switch the parameter value to β and hold it constant thereafter.
Proof
Any solution of x[k + 1] = Pα(x[k]) that is initialized in Dα will
converge to x∗
α, and thus eventually enter D(α→β). The set of points in Dα
that can be steered in one step to Dβ under a = (α →β) is Dα ∩P −1
(α→β)(Dβ).
Any solution of x[k + 1] = Pβ(x[k]) that is initialized in Dβ will converge to
x∗
β. By Theorem 4.1, the corresponding solution of (4.33) converges to Oβ.
The parameter value (α →β) has served to steer—or transition—solutions
from a neighborhood of x∗
α to a neighborhood of x∗
β in one step. (α →β) is
called a transition parameter. The extension of the analysis to encompass a
ﬁnite set of two or more transition parameters to eﬀect a multistep transition
between two periodic orbits is obvious. Note that a transition parameter need
not give rise to a periodic orbit itself, that is, P(α→β) need not have a ﬁxed
point.
Continual switching:
Consider again the collection of systems with im-
pulse eﬀects, (4.33), with common state space x ∈X and impact set S, and
suppose that Hypotheses HSH1 and HSH3–HSH5 hold.
Assume this time
that a takes values in A, an open subset of Rp, and that Hypothesis HSH2 is
strengthened to hold for the associated diﬀerential equation
˙x = f(x, a)
˙a = 0,
(4.34)
that is, f is continuous on X × A and solutions exist, are unique, and depend
continuously on initial conditions.
As before, for a ∈A, let Pa : S →S be the Poincar´e return map. However,
instead of considering the diﬀerence equation x[k + 1] = Pa(x[k]) on S, we
now invoke the fact that a can be changed at each impact and we view the
diﬀerence equation as a discrete-time control system on S with the parameter
vector a ∈A as the control:
x[k + 1] = P(x[k], a[k]),
(4.35)
12This is the inverse image of the set Dβ under the map P(α→β). Thus,
D(α→β) := {x ∈S | P(α→β)(x) ∈Dβ}.
© 2007 by Taylor & Francis Group, LLC

Periodic Orbits and Poincar´e Return Maps
105
where P(x, a) := Pa(x). It will now be established that there is a one-to-
one correspondence between static (resp., dynamic) state-variable feedback
control laws for (4.35) and static (resp., dynamic) parameter update laws for
(4.33). Moreover, thanks to Poincar´e analysis, this correspondence extends to
periodic orbits and their stability properties. In other words, the design of a
parameter update law for (4.33) that creates an asymptotically stable periodic
orbit can be performed by designing a feedback controller for (4.35) that
creates an asymptotically stable equilibrium point. Even more speciﬁcally,
suppose there exists a parameter value a∗for which (4.33) possesses a desired
periodic orbit, but the orbit is either not stable, or it is asymptotically stable,
but the rate of convergence is too slow. Let x∗be the corresponding ﬁxed
point of Pa∗. Then designing a parameter update law for (4.33) that preserves
the orbit and stabilizes it (or increases the rate of convergence) is equivalent
to designing a feedback controller for (4.35) that preserves the equilibrium
point and stabilizes it (or increases the rate of convergence).
Suppose that a = v(x) is a static state-variable feedback control law for
(4.35) and consider the discrete-time closed-loop system
x[k + 1] = P(x[k], v(x[k])),
(4.36)
and a deadbeat dynamic extension
x[k + 1] = P(x[k], v(x[k]))
a[k + 1] = v(x[k]).
(4.37)
Note that (4.36) has an equilibrium point if, and only if, (4.37) has an equilib-
rium point, and moreover, x∗is a stable (resp., asymptotically stable, or ex-
ponentially stable) equilibrium point for (4.36) if, and only if, (x∗; a∗= v(x∗))
is a stable (resp., asymptotically stable, or exponentially stable) equilibrium
point for (4.37). The importance of this formal looking observation is that
Paux(x, a) :=

P(x, v(x))
v(x)

(4.38)
is the Poincar´e return map of the following system with impulse eﬀects:
Σaux :
⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎩

˙x(t)
˙a(t)

=

f(x(t), a(t))
0


x−(t)
a−(t)

̸∈Saux

x+(t)
a+(t)

=

Δ(x−(t), v(x−(t)))
v(x−(t))


x−(t)
a−(t)

∈Saux,
(4.39)
where the state space is Xaux := X ×A and the impact surface is Saux := S×A.
Hence, by Theorem 4.1 and Corollary 4.1, designing a memoryless parameter-
update law for (4.33) that results in (4.39) possessing a stable (resp., asymp-
totically stable, or exponentially stable) periodic orbit is precisely equivalent
© 2007 by Taylor & Francis Group, LLC

106
Feedback Control of Dynamic Bipedal Robot Locomotion
to designing a static state-feedback control law for (4.35) that results in (4.36)
possessing a stable (resp., asymptotically stable, or exponentially stable) equi-
librium point. Since the same reasoning applies mutatis mutandis for the more
general case of a parameter update law with memory (i.e., a dynamic event-
based feedback controller), we have the following result.
Theorem 4.7 (Stability under Event-Based Parameter Updates-I)
Consider the collection of systems with impulse eﬀects, (4.33), with a ∈A, an
open subset of Rp. Suppose that X and S satisfy Hypotheses HSH1, HSH3–
HSH5. Suppose furthermore that Hypothesis HSH2 holds for the diﬀerential
equation (4.34). Let W be an open subset of Rℓfor some integer ℓ, and deﬁne
Xaux := X × A × W and Saux := S × A × W. Suppose that v1 : S × W →A
and v2 : S × W →W are continuous. Then,
Σaux :
⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎩
⎡
⎢⎢⎣
˙x(t)
˙a(t)
˙w(t)
⎤
⎥⎥⎦=
⎡
⎢⎢⎣
f(x(t), a(t))
0
0
⎤
⎥⎥⎦,
⎡
⎢⎢⎣
x−(t)
a−(t)
w−(t)
⎤
⎥⎥⎦̸∈Saux
⎡
⎢⎢⎣
x+(t)
a+(t)
w+(t)
⎤
⎥⎥⎦=
⎡
⎢⎢⎣
Δ(x−(t), v1(x−(t), w−(t)))
v1(x−(t), w−(t))
v2(x−(t), w−(t))
⎤
⎥⎥⎦,
⎡
⎢⎢⎣
x−(t)
a−(t)
w−(t)
⎤
⎥⎥⎦∈Saux,
(4.40)
has a stable (resp., asymptotically stable) orbit transversal to Saux if, and only
if, the discrete-time system
x[k + 1] = P(x[k], v1(x[k], w[k]))
w[k + 1] = v2(x[k], w[k])
(4.41)
on S ×W has a stable (resp., asymptotically stable) equilibrium point (x∗; w∗)
such that LfH(x∗, a∗) ̸= 0, where a∗= v1(x∗, w∗). Moreover, if HSH2’ and
HSH4’ hold and v1 and v2 are continuously diﬀerentiable, then the equivalence
also holds for exponential stability.
The special case of a memoryless parameter update for (4.33), and hence,
static state-feedback control of (4.35), is obtained by letting W be empty.
Integral feedback control action, either to reject a constant disturbance or to
track a constant reference, is also a special case: If d and r are constants
(possibly, vector valued) representing disturbances and references, respec-
tively, then formally deﬁne f(x, a) = ˜f(x, a, d), v1(x, w) = ˜v1(x, w, r) and
v2(x, w) = ˜v2(x, w, r) in the above analysis.
© 2007 by Taylor & Francis Group, LLC

Periodic Orbits and Poincar´e Return Maps
107
4.6.2
Analyzing Event-Based Actions with a Hybrid Restric-
tion Dynamics Based on Finite-Time Attractivity
The previous subsection reduced the study of orbits in a collection of systems
with impulse eﬀects, having a common state space and a common impact
surface, to the study of equilibrium points of a discrete-time control system
evolving on the impact surface. This subsection will identify circumstances
in which analysis and feedback controller design for the discrete-time control
system can be performed on the restriction dynamics, thereby reducing the
dimension of the problem. The signiﬁcant payoﬀin terms of computational
tractability will become evident in Chapters 7 and 8.
Infrequent switching or transition control:
Under the hypothesis of
ﬁnite-time attractivity, the problem of transitioning between two orbits follows
very closely the corresponding development in the previous subsection. For
this reason, we pass straight to the main result.
Proposition 4.3 (Transition Control-II)
Consider the parameterized system with impulse eﬀects (4.33), where X and
S satisfy Hypotheses HSH1 and HSH3–HSH5, and where A is an open subset
of Rp such that Hypothesis HSH2 holds for the diﬀerential equation (4.34).
Suppose that there exist embedded submanifolds Za ⊂X such that
1. for a ∈{α, β} ⊂A, Za is forward invariant under fa;
2. for a ∈{α, β}, Za is continuously ﬁnite-time attractive under fa, S ∩Za
is a nonempty embedded submanifold of X, and Δ(Za, a) ⊂Za;
3. for a ∈{α, β}, there exists an asymptotically (exponentially) stable,
periodic orbit Oa transversal to S ∩Za so that the domain of attraction
Da ⊂S ∩Za of the restricted Poincar´e map ρa is nonempty and open;
denote the associated ﬁxed point by x∗
a; and
4. Δ(Zα, (α →β)) ⊂Z(α→β) and Δ(Z(α→β), β) ⊂Zβ.
If x∗
α ∈D(α→β) := ρ−1
(α→β)(Dβ), then any solution of (4.33) with a = α that
is initialized in the domain of attraction of Oα will asymptotically (exponen-
tially) converge to Oβ under the following switching policy: hold the parame-
ter constant and equal to α until the trajectory impacts D(α→β); immediately
switch the parameter value to (α →β); at the very next impact, switch the
parameter to β and hold it constant thereafter.
The proof is quite trivial once it is noted that the hypotheses imply that
P(α→β)(S ∩Zα) ⊂Zβ. Hence, ρ(α→β) : S ∩Zα →Zβ is a restriction of P(α→β)
to Zα and Zβ.
© 2007 by Taylor & Francis Group, LLC

108
Feedback Control of Dynamic Bipedal Robot Locomotion
Continual switching:
We present two reﬁnements of Theorem 4.7 to allow
the event-based feedback design to be performed on the basis of the restriction
dynamics. Consider a collection of subsets {Za | a ∈A} ⊂X. In the ﬁrst
case, we suppose that S ∩Za is independent of a ∈A. We denote the common
intersection by S ∩Z♦. Under this assumption, hybrid invariance leads to a
restricted Poincar´e map, ρa : S∩Z♦→S∩Z♦. Under appropriate hypotheses,
the reduction method of Theorem 4.5 can be combined with Theorem 4.7 so
that event-based feedback design can be carried out on the control system
x[k + 1] = ρ(x[k], a[k]) evolving on the state space S ∩Z♦with controls
taking values in A.
Theorem 4.8 (Stability under Event-Based Parameter Updates-II)
Consider the collection of systems with impulse eﬀects, (4.33), with the param-
eter a taking values in A. Suppose that X and S satisfy Hypotheses HSH1 and
HSH3–HSH5. Suppose furthermore that A is an open subset of Rp such that
Hypothesis HSH2 holds for the diﬀerential equation (4.34) and there exists a
collection of subsets {Za | a ∈A} ⊂X such that:
1. ∀a ∈A, Za ⊂X satisﬁes Hypotheses HInv1 and HInv2;
2. ∀a ∈A, S ∩Za is independent of a; denote the common intersection
with S by S ∩Z♦;
3. ∀a ∈A, Δ(S ∩Z♦, a) ⊂Za; and
4. Z := {(x, a) | x ∈Za, a ∈A} is an embedded submanifold of X × A and
is locally continuously ﬁnite-time attractive for (4.34).
Let W be an open subset of Rℓand suppose that v1 : S × W →A and
v2 : S × W →W are given continuous maps. Deﬁne Xaux := X × A × W,
Saux := S × A × W, and Zaux := Z × W. Then (4.40) has a stable (resp.,
asymptotically stable) orbit transversal to Saux ∩Zaux if, and only if, the
discrete-time system
x[k + 1] = ρ(x[k], v1(x[k], w[k]))
w[k + 1] = v2(x[k], w[k])
(4.42)
on S ∩Z♦× W has a stable (resp., asymptotically stable) equilibrium point
(x∗; w∗) such that LfH(x∗, a∗) ̸= 0, where a∗= v1(x∗, w∗). Moreover, if f|Z,
Δ|(S×A)∩Z, v1, and v2 are continuously diﬀerentiable, then the equivalence
also holds for exponential stability.
In the second case, we allow S ∩Za to depend on a ∈A and hence impact
invariance must be replaced by a more general notion that is closer to what
was used in transition control.
© 2007 by Taylor & Francis Group, LLC

Periodic Orbits and Poincar´e Return Maps
109
Theorem 4.9 (Stability under Event-Based Parameter Updates-III)
Consider the collection of systems with impulse eﬀects, (4.33), with the pa-
rameter taking values in A := A1 ×A2, where A1 is an open subset of Rp1 and
A2 is an open subset of Rp2. Suppose that X and S satisfy Hypotheses HSH1
and HSH3–HSH5. Suppose furthermore that Hypothesis HSH2 holds for the
diﬀerential equation (4.34) and there exists a collection of subsets of X such
that:
1. ∀(a1, a2) ∈A1 × A2, Za1,a2 ⊂X satisﬁes Hypotheses HInv1 and HInv2;
2. ∀(a1, a2) ∈A1 × A2, S ∩Za1,a2 is independent of a1; denote the inter-
section with S by S ∩Z♦,a2;
3. there exists a continuous function ψ : A2 →A1 such that, ∀a−
2 , a+
2 ∈A2,
Δ(S ∩Z♦,a−
2 , ψ(a−
2 ), a+
2 ) ⊂Zψ(a−
2 ),a+
2 ; and
4. Z := {(x, a1, a2) | x ∈Za1,a2, a1 ∈A1, a2 ∈A2} is an embedded sub-
manifold of X ×A1×A2 and is locally continuously ﬁnite-time attractive
for (4.34).
Let W be an open subset of Rℓ. Suppose that v1 : S × W →A2 and v2 :
S ×W →W are continuous. Deﬁne Xaux := X ×A×W, Saux := S ×A×W,
and Zaux := Z × W. Then,
Σaux :
⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎩
⎡
⎢⎢⎢⎢⎢⎣
˙x(t)
˙a1(t)
˙a2(t)
˙w(t)
⎤
⎥⎥⎥⎥⎥⎦
=
⎡
⎢⎢⎢⎢⎢⎣
f(x(t), a1(t), a2(t))
0
0
0
⎤
⎥⎥⎥⎥⎥⎦
,
⎡
⎢⎢⎢⎢⎢⎣
x−(t)
a−
1 (t)
a−
2 (t)
w−(t)
⎤
⎥⎥⎥⎥⎥⎦
̸∈Saux
⎡
⎢⎢⎢⎢⎢⎣
x+(t)
a+
1 (t)
a+
2 (t)
w+(t)
⎤
⎥⎥⎥⎥⎥⎦
=
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎣
Δ(x−(t), ψ(a−
2 (t)),
v1(x−(t), w−(t)))
ψ(a−
2 (t))
v1(x−(t), w−(t))
v2(x−(t), w−(t))
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎦
,
⎡
⎢⎢⎢⎢⎢⎣
x−(t)
a−
1 (t)
a−
2 (t)
w−(t)
⎤
⎥⎥⎥⎥⎥⎦
∈Saux,
(4.43)
has a stable (resp., asymptotically stable) orbit transversal to Saux ∩Zaux if,
and only if, the discrete-time system
x[k + 1] = ρ(x[k], ψ(a2[k]), v1(x[k], w[k]))
a2[k + 1] = v1(x[k], w[k])
w[k + 1] = v2(x[k], w[k])
(4.44)
on {(S ∩Z♦,a2, a2) | a2 ∈A2} × W has a stable (resp., asymptotically sta-
ble) equilibrium point (x∗; a∗
2; w∗) such that LfH(x∗, a∗
1, a∗
2) ̸= 0, where a∗
1 =
© 2007 by Taylor & Francis Group, LLC

110
Feedback Control of Dynamic Bipedal Robot Locomotion
ψ(a∗
2). Moreover, if f|Z, Δ|(S×A)∩Z, ψ, v1, and v2 are continuously diﬀeren-
tiable, then the equivalence also holds for exponential stability.
The proofs of these two theorems are given in Appendices C.1.7 and C.1.8.
The theorems can be modiﬁed to replace ﬁnite-time attractivity with suﬃ-
ciently fast exponential convergence, as in Theorem 4.6.
© 2007 by Taylor & Francis Group, LLC

5
Zero Dynamics of Bipedal Locomotion
The method of computed torque, also known as inverse dynamics, is ubiqui-
tous in the ﬁeld of robotics [60,164,218]. It consists of deﬁning a set of outputs,
equal in number to the inputs, and then designing a feedback controller that
asymptotically drives the outputs to zero. In this manner, a geometric task
for the robot may be encoded into a set of outputs in such a way that the zero-
ing of the outputs is asymptotically equivalent to achieving the task, whether
the task be asymptotic convergence to an equilibrium point, a surface, or a
time trajectory. For a system modeled by ordinary diﬀerential equations (in
particular, without impact dynamics), the maximal internal dynamics of the
system that is compatible with the output being identically zero is called the
zero dynamics [127,128,168]. Hence, the method of computed torque can be
seen as an indirect means of designing a set of zero dynamics for the robot.
Since, in general, the dimension of the zero dynamics is considerably less than
the dimension of the model itself, the task to be achieved by the robot is
implicitly encoded into a lower-dimensional system.
One of the main points of this chapter is that this process can be explicitly
exploited in the design of feedback controllers for walking mechanisms even
in the presence of impacts. Here, the outputs will be thought of as deﬁning
virtual constraints, that is, holonomic relationships among the system’s states
that are imposed asymptotically via a state-variable feedback controller. As
opposed to physical constraints, that is, constraints that are imposed mechan-
ically, for example, with cams and links, and hence for obvious reasons are not
easily reconﬁgured, virtual constraints may be easily redeﬁned (reconﬁgured).
5.1
Introduction to Zero Dynamics and Virtual
Constraints
This section introduces zero dynamics and virtual constraints via two exam-
ples. The ﬁrst example uses a SISO linear system with a single zero and two
poles to develop the notion of zero dynamics. The second example uses a pen-
dulum evolving in a horizontal plane (i.e., normal to the gravitational ﬁeld)
to develop the notion of virtual constraints. A more general overview of the
111
© 2007 by Taylor & Francis Group, LLC

112
Feedback Control of Dynamic Bipedal Robot Locomotion
notion of zero dynamics for a system modeled by a set of nonlinear ordinary
diﬀerential equations is provided in Appendix B.2.
5.1.1
A Simple Zero Dynamics Example
Consider the single-input, single-output linear system described by the trans-
fer function
H(s) =
s + α
s2 −s −6
(5.1)
where α ∈R. H(s) has a zero at −α and two poles, at 3 and −2. A state
space realization of H(s) is

˙x1
˙x2

=

0
1
6
1
 
x1
x2

+

0
1

u
(5.2a)
y =

α
1


x1
x2

.
(5.2b)
The origin is not stable in the sense of Lyapunov due to the eigenvalue at 3.
Diﬀerentiating the output once gives
˙y = α ˙x1 + ˙x2
(5.3a)
= 6x1 + (1 + α)x2 + u,
(5.3b)
and hence the system has relative degree one. Applying the preliminary feed-
back
u = −6x1 −(1 + α)x2 + v,
(5.4)
where v ∈R, yields the output dynamics ˙y = v. The choice of v = −y results
in the output converging exponentially to zero according to ˙y = −y. In order
to understand what this implies about the full state of (5.2a), suppose that
y ≡0, that is, x2 ≡−αx1. Under this constraint, the system’s state must
evolve on the set
Z := {x ∈R2 | αx1 + x2 = 0},
(5.5)
which is called the zero dynamics manifold.1
The dynamics of the system
restricted to this set is known as the zero dynamics—the maximal internal
dynamics compatible with the output being identically zero. For this example,
the zero dynamics is
˙x2 = −α ˙x1
(5.6a)
= −αx2.
(5.6b)
1In the case of a linear system, Z is a subspace. The terminology of a manifold is used for
consistency with the case of a nonlinear system.
© 2007 by Taylor & Francis Group, LLC

Zero Dynamics of Bipedal Locomotion
113




x1
x2
0
0
1
1
1
1
2
2
2
2
(a) Zero dynamics with the origin as an
asymptotically stable equilibrium (α =
1)




x1
x2
0
0
1
1
1
1
2
2
2
2
(b) Zero dynamics with the origin as
an unstable equilibrium (α = −2)
Figure 5.1. Vector ﬁelds for a zero dynamics example using a second order
linear system.
The bold line corresponds to the zero dynamics manifold,
Z := {x ∈R2 | αx1 + x2 = 0}.
It is no accident that the eigenvalue of (5.6b) corresponds to the zero of H(s).
For a minimal linear system, it is always the case that the eigenvalues of the
zero dynamics correspond to the zeros of the corresponding transfer function;
The input compatible with x ∈Z is obtained from (5.4) by setting v = 0,
yielding
u∗= −6x1 −(1 + α)x2
(5.7a)
= (α2 + α −6)x1.
(5.7b)
Notice that the feedback u∗is independent of the feedback chosen to stabilize
the output dynamics (5.3b) and that y ≡0 implies u ≡u∗. More generally,
any state variable feedback applied to (5.2a) that results in Z being an invari-
ant manifold (i.e., invariant subspace) of the closed-loop system can always
be decomposed as u = u∗+ v, where v vanishes on Z.
In this example, the parameter α can be thought of as a design parameter
that selects the zero dynamics manifold along with the corresponding zero
dynamics. Figure 5.1 gives the vector ﬁelds (i.e., phase plane plot) for (5.2a)
in closed loop with (5.4) and v = −y for two values of α. For both values of
α, the output dynamics (5.3b) with (5.4) and v = −y are identical and stable;
indeed, the outputs satisfy ˙y = −y, which causes the solutions of the closed-
loop systems to converge exponentially to Z. However, the zero dynamics
manifold itself and the dynamics of the closed-loop system restricted to this
manifold vary with α: for α = 1, the zero dynamics is stable whereas with
α = −2, the zero dynamics is unstable.
© 2007 by Taylor & Francis Group, LLC
see [127, Sec. 4.3].

114
Feedback Control of Dynamic Bipedal Robot Locomotion
θ
l
m
Figure 5.2. A horizontal, variable-length pendulum used to explain virtual
constraints.
For a thorough discussion of zero dynamics, see [127,138]. The basic notions
are summarized in Appendix B.2.
5.1.2
The Idea of Virtual Constraints
For a mechanical system with generalized coordinates partitioned as q =
(q1; q2), a relation of the form
q2 = hd(q1)
(5.8)
that is achieved by generalized forces or torques that do no work on the system
is called a (workless) holonomic constraint; see Appendix B.4.10. A typical
example of this was illustrated in Fig. 1.10. On the other hand, a relation
achieved by a feedback controller that asymptotically zeros an output of the
form
y = q2 −hd(q1)
(5.9)
is termed a virtual constraint. The constraint is virtual because it does not
arise from a physical connection between the two variables but rather from
the actions of a feedback controller. Virtual constraints will be used in the
next section to synchronize the evolution of the joints of a robot in order to
design walking motions. An obvious advantage of a virtual constraint over a
physical constraint is that it can be reprogrammed on the ﬂy.
It is important to understand that while virtual constraints and physical
constraints impose the same kinematic behavior on a system, the resulting
dynamic behaviors are diﬀerent. To see this distinction between virtual and
physical constraints, consider a planar variable-length pendulum evolving in
the absence of gravity, as depicted in Fig. 5.2. The distance from the point
mass m to the rotation point is l and may vary. In the absence of gravity, the
pendulum’s Lagrangian is equal to its kinetic energy,
L = K = 1
2m
 
˙l2 + l2 ˙θ2!
.
(5.10)
© 2007 by Taylor & Francis Group, LLC

Zero Dynamics of Bipedal Locomotion
115
Two scenarios will be considered. First, the pendulum’s length, l, will be
constrained to evolve as a function of θ via a physical constraint. Second, l
will be constrained via a virtual constraint.
In the ﬁrst case, suppose that the end of the pendulum is constrained to
evolve in a smooth frictionless slot about the pivot point in such a manner
that
l = ld(θ).
(5.11)
In this case, the principle of virtual work gives that the external force acting
on the pendulum due to the slot can be written as
Γ =

−∂ld(θ)
∂θ
1

λ∗,
(5.12)
where λ∗is a scalar. From (5.11), the generalized velocity of the system is
˙q =
 ˙θ
˙l

=

1
∂ld(θ)
∂θ

˙θ.
(5.13)
The instantaneous power given by the inner product of Γ and ˙q is zero, showing
that the physical constraint (5.11) does no work on the system. Moreover,
the Lagrangian of the constrained system is
L = 1
2m
"∂ld(θ)
∂θ
2
+ ld(θ)2
#
˙θ2,
(5.14)
which is easily recognized as (5.10) with l given by (5.11) and ˙l given by (5.13).
The equation of motion is therefore
m
"∂ld(θ)
∂θ
2
+ (ld(θ))2
#
¨θ + m∂ld(θ)
∂θ
∂2ld(θ)
∂θ2
+ ld(θ)

˙θ2 = 0.
(5.15)
It is supposed next that the pendulum’s length varies according to a virtual
constraint, in which case the length l is treated as a controlled quantity. The
equations of motion may be calculated from the Lagrangian (5.10) to be

ml2 0
0
m




D(q)
 ¨θ
¨l


¨q
+

ml˙l ml ˙θ
−ml ˙θ
0




C(q, ˙q)
 ˙θ
˙l


˙q
=

0
1


B
u,
(5.16)
where u corresponds to an actuator used to regulate the pendulum’s length.
Deﬁne an output
y = l −ld(θ)
(5.17)
and note that y = 0 means l = ld(θ). Diﬀerentiating y once gives
˙y = ˙l −∂ld(θ)
∂θ
˙θ,
(5.18)
© 2007 by Taylor & Francis Group, LLC

116
Feedback Control of Dynamic Bipedal Robot Locomotion
and diﬀerentiating one more time gives
¨y = ¨l −∂2ld(θ)
∂θ2
˙θ2 −∂ld(θ)
∂θ
¨θ
(5.19a)
= l ˙θ2 −∂2ld(θ)
∂θ2
˙θ2 + 2
l
∂ld(θ)
∂θ
˙l ˙θ + 1
mu.
(5.19b)
The state variable feedback
u = u∗+ v
(5.20a)
u∗= m

−l ˙θ2 + ∂2ld(θ)
∂θ2
˙θ2 −2
l
∂ld(θ)
∂θ
˙l ˙θ

(5.20b)
v = −m (KD ˙y + KPy) ,
(5.20c)
results in
¨y + KD ˙y + KP y = 0.
(5.21)
For KD, KP > 0, the solutions of (5.21) converge exponentially quickly to
zero. For y ≡0, that is, l ≡ld(θ), the system’s state evolves on the set
Z :=
,
(θ, ˙θ, l, ˙l) ∈S × R3 &&& l −ld(θ) = 0, ˙l −∂ld(θ)
∂θ
˙θ = 0
-
.
(5.22)
Evaluating the model (5.16) on the zero dynamics manifold (5.22), with u
equal to u∗in (5.20b), yields the zero dynamics
m (ld(θ))2 ¨θ + 2m∂ld(θ)
∂θ
ld(θ) ˙θ2 = 0,
(5.23)
which, except for the special case of ld(θ) being constant, is not equal to
(5.15). Therefore, while the system (5.16) under the feedback law (5.20), that
is, under the virtual constraint y = l −ld(θ), asymptotically has the same
kinematic behavior as the system (5.15) resulting from the physical constraint
l = ld(θ), the two constraints yield diﬀerent dynamic behaviors. Figure 5.3
illustrates this point for the constraint ld = 1.5 + sin(θ). For this example,
m = 1 and the system (5.15) was initialized with (θ; ˙θ) = (0; 1) and the
system (5.16) was initialized with (θ; ˙θ; l; ˙l) = (0; 1; 1.5; 1) ∈Z. The source
of the diﬀerent dynamic behavior is the power injected into the closed-loop
system via the virtual constraint. Indeed, the injected power is
˙q′Bu∗= m˙l

−l ˙θ2 + ∂2ld(θ)
∂θ2
˙θ2 −2
l
∂ld(θ)
∂θ
˙l ˙θ

,
(5.24)
which, when evaluated along the constraint surface Z, yields
˙q′Bu∗|Z = m∂ld(θ)
∂θ
"
∂2ld(θ)
∂θ2
−
2
ld(θ)
∂ld(θ)
∂θ
2
−ld(θ)
#
˙θ3.
(5.25)
© 2007 by Taylor & Francis Group, LLC

Zero Dynamics of Bipedal Locomotion
117
l (m)
θ (rad)
0
5
10
15
0.5
1
1.5
2
2.5
(a) Kinematic behavior
t (sec)
l (m)
0
5
10
15
0.5
1
1.5
2
2.5
(b) Dynamic behavior
Figure 5.3. Kinematic and dynamic behaviors of the horizontal pendulum.
The dashed lines correspond to the constraint l = sin(θ) + 1.5 imposed via
a physical constraint, whereas the solid corresponds to the same constraint
imposed via a virtual constraint.
Remark 5.1
The instantaneous power injected by the virtual constraint
vanishes along Z if, and only if, either ld is constant or ld satisﬁes the diﬀer-
ential equation
∂2ld(θ)
∂θ2
−
2
ld(θ)
∂ld(θ)
∂θ
2
−ld(θ) = 0.
(5.26)
This equation has the general solution
ld(θ) =
c0
cos(θ −θ0),
(5.27)
where c0 and θ0 are arbitrary constants. A virtual constraint for which the
instantaneous injected power is zero along the constraint surface is said to be
passive. For this example, physically meaningful solutions (i.e., ld > 0) can
only be found for θ restricted to a subset of the circle.
5.2
Swing Phase Zero Dynamics
5.2.1
Deﬁnitions and Preliminary Properties
This section identiﬁes the swing phase zero dynamics for a particular class of
outputs that has proven useful in constructing feedback controllers for bipedal
walkers. Since no impact dynamics are involved, the work here is simply a
© 2007 by Taylor & Francis Group, LLC

118
Feedback Control of Dynamic Bipedal Robot Locomotion
specialization of the general results in [127] to a model of the form
˙x =

˙q
D−1(q) [−C(q, ˙q) ˙q −G(q) + B(q)u]

(5.28)
=: f(x) + g(x)u
(5.29)
and an output that is independent of velocity. The results summarized here
will form the basis for deﬁning a zero dynamics of the complete hybrid model
of a planar bipedal walker, which is the desired object for study.
Note that if an output
y = h(q)
(5.30)
depends only on the conﬁguration variables, then, due to the second order
nature of the robot model, the derivative of the output along solutions of
(5.29) does not depend directly on the inputs,
dy
dt = ∂h
∂x ˙x
(5.31a)
=
$ ∂h
∂q
∂h
∂˙q
%  
˙q
D−1 [−C ˙q −G]




f
+

0
D−1B




g
u

(5.31b)
=
$ ∂h
∂q
0
% 
˙q
D−1 [−C ˙q −G]




Lfh
+
$ ∂h
∂q
0
% 
0
D−1B




Lgh
u
(5.31c)
= Lfh(q, ˙q),
(5.31d)
because Lgh is zero. Hence, the relative degree of the output is at least two.
Diﬀerentiating the output once again computes the accelerations, resulting in
d2y
dt2 =
$ ∂
∂q
∂h
∂q ˙q
 ∂h
∂q
%  
˙q
D−1 [−C ˙q −G]

+

0
D−1B

u

(5.32a)
=
$ ∂
∂q
∂h
∂q ˙q
 ∂h
∂q
% 
˙q
D−1 [−C ˙q −G]




L2
fh
+ ∂h
∂q D−1B



LgLfh
u
(5.32b)
= L2
fh(q, ˙q) + LgLfh(q)u.
(5.32c)
The matrix LgLfh(q) is called the decoupling matrix and depends only on
the conﬁguration variables. A consequence of the general results in [127] is
that the invertibility of this matrix at a given point ensures the existence and
uniqueness of the zero dynamics in a neighborhood of that point. With a few
extra hypotheses, these properties can be ensured on a given open set.
© 2007 by Taylor & Francis Group, LLC

Zero Dynamics of Bipedal Locomotion
119
Lemma 5.1 (Swing Phase Zero Dynamics)
Suppose that a smooth function h is selected so that
HH1) h is a function of only the conﬁguration coordinates;
HH2) there exists an open set ˜Q ⊂Q such that for each point q ∈˜Q,
the decoupling matrix LgLfh(q) is square and invertible (i.e., the
dimension of u equals the dimension of y, and h has vector relative
degree (2, . . . , 2));
HH3) there exists a smooth real-valued function θ(q) such that
[h(q); θ(q)] : ˜Q →RN
(5.33)
is a diﬀeomorphism onto its image; and
HH4) there exists at least one point in ˜Q where h vanishes.
Then,
1. the set
Z := {x ∈T ˜Q | h(x) = 0, Lfh(x) = 0}
(5.34)
is a smooth two-dimensional embedded submanifold of T Q; and
2. the feedback control
u∗(x) = −(LgLfh(x))−1L2
fh(x)
(5.35)
renders Z invariant under the swing phase dynamics; that is, for every
z ∈Z,
fzero(z) := f(z) + g(z)u∗(z) ∈TzZ.
(5.36)
Z is called the zero dynamics manifold and ˙z = fzero(z) is called the zero
dynamics.
Lemma 5.1 follows immediately from general results in [127]; a few of the
details are outlined here for later use.
From Hypotheses HH1 and HH3,
Φ(q) := [h; θ(q)] is a valid coordinate transformation on ˜Q, and thus
η1 = h(q), η2 = Lfh(q, ˙q),
ξ1 = θ(q), ξ2 = Lfθ(q, ˙q),
(5.37)
is a coordinate transformation on T ˜Q. In these coordinates, the system con-
sisting of (5.29) and (5.30) takes the form
˙η1 = η2,
˙η2 = L2
fh + LgLfhu,
˙ξ1 = ξ2,
˙ξ2 = L2
fθ + LgLfθu,
y = η1
(5.38)
© 2007 by Taylor & Francis Group, LLC

120
Feedback Control of Dynamic Bipedal Robot Locomotion
where (q; ˙q) is evaluated at
q = Φ−1(η1, ξ1)
(5.39a)
˙q =
∂Φ
∂q
−1 
η2
ξ2

.
(5.39b)
Enforcing y ≡0 results in (η1 = h = 0; η2 = Lfh = 0), the input being equal
to u∗in (5.35), and the zero dynamics becoming
˙ξ1 = ξ2
(5.40a)
˙ξ2 = L2
fθ + LgLfθu∗.
(5.40b)
While it is useful to know that the zero dynamics can be expressed as
a second-order system, this form of the equations is very diﬃcult to com-
pute directly due to the need to invert the decoupling matrix.
However,
this can be avoided. Indeed, since the columns of g in (5.29) are involutive,
by [127, p. 222], in a neighborhood of any point where the decoupling matrix
is invertible, there exists a smooth scalar function γ such that
η1 = h(q), η2 = Lfh(q, ˙q),
ξ1 = θ(q), ξ2 = γ(q, ˙q),
(5.41)
is a valid coordinate transformation and
Lgγ = 0.
(5.42)
Moreover, by applying the constructive proof of the Frobenius theorem of [127,
p. 23] in a set of coordinates for the robot such that HR6 holds, one obtains
that γ can be explicitly computed to be the last entry of D(q) ˙q, and hence it
can be assumed that γ(q, ˙q) has the form γ0(q) ˙q. It follows that (5.41) is a
valid coordinate change on all of T ˜Q and in these coordinates the system has
the form
˙η1 = η2
˙η2 = L2
fh(q, ˙q) + LgLfh(q)u
˙ξ1 = Lfθ(q, ˙q)
˙ξ2 = Lfγ(q, ˙q),
(5.43)
where the right-hand side is evaluated at
q = Φ−1(η1, ξ1)
(5.44a)
˙q =

∂h
∂q
γ0
−1 
η2
ξ2

.
(5.44b)
© 2007 by Taylor & Francis Group, LLC

Zero Dynamics of Bipedal Locomotion
121
The swing phase zero dynamics is then
˙ξ1 = Lfθ
˙ξ2 = Lfγ,
(5.45)
where the right-hand side is evaluated at
q = Φ−1(0, ξ1)
(5.46a)
˙q =

∂h
∂q
γ0
−1 
0
ξ2

.
(5.46b)
Theorem 5.1 (Swing Phase Zero Dynamics Form)
Under the hypotheses of Lemma 5.1, (ξ1; ξ2) = (θ(q); γ0(q) ˙q) is a valid set of
coordinates on Z, and in these coordinates the zero dynamics takes the form
˙ξ1 = κ1(ξ1)ξ2
(5.47a)
˙ξ2 = κ2(ξ1).
(5.47b)
Moreover, if the model (5.29) is expressed in coordinates satisfying HR6, the
following interpretations can be given for the various functions appearing in
the zero dynamics:
ξ1 = θ|Z
(5.48a)
ξ2 = ∂K
∂˙qN
&&&&
Z
(5.48b)
κ1(ξ1) = ∂θ
∂q

∂h
∂q
γ0
−1 
0
1
&&&&&&
Z
(5.48c)
κ2(ξ1) = −∂V
∂qN
&&&&
Z
,
(5.48d)
where K(q, ˙q) = 1
2 ˙q′D(q) ˙q is the kinetic energy of the robot, V (q) is its po-
tential energy, and γ0 is the last row of D, the inertia matrix.
Proof
The form of (5.47a) is immediate by the form of (5.45) and (5.46b)
since both h and γ0 are functions of q, and hence when restricted to Z, are
functions of ξ1 only.
Suppose now that the model (5.29) is expressed in coordinates satisfying
HR6. Since the kinetic energy of the robot, K(q, ˙q), is independent of the
choice of world coordinate frame [219, p. 140], and since qN ﬁxes this choice,
K(q, ˙q) is independent of qN (i.e., qN is a cyclic coordinate).
Since D =
∂[(∂K/∂˙q)′] /∂˙q [219, p. 141], it follows that ∂D/∂qN = 0. Let DN, CN, and
© 2007 by Taylor & Francis Group, LLC

122
Feedback Control of Dynamic Bipedal Robot Locomotion
GN be the last rows of D, C, and G, respectively. Then ξ2 = γ0(q) ˙q is equal
to DN(q) ˙q, and thus is equal to ∂K/∂˙qN since K =
1
2 ˙q′D ˙q. Continuing,
˙ξ2 := Lfγ becomes
Lfγ =
$
˙q′ ∂D′
N
∂q
DN
% 
˙q
−D−1 [C ˙q + G]

(5.49a)
= ˙q′ ∂D′
N
∂q
˙q −CN ˙q −GN.
(5.49b)
CN = ˙q′ ∂D′
N
∂q
−1
2 ˙q′ ∂D
∂qN
,
(5.50)
(5.49b) becomes Lfγ = −GN = −∂V/∂qN, which, when evaluated on Z, is a
function of ξ1 only.
Remark 5.2
The second state of the zero dynamics, (5.47b), can also be
derived directly from the Lagrangian [43]. If the robot’s Lagrangian, L, is
expressed in coordinates satisfying HR6, then since qN is unactuated
d
dt
∂L
∂˙qN
−∂L
∂qN
= 0.
(5.51)
Since qN is a cyclic coordinate (i.e., ∂K/∂qN = 0), (5.51) reduces to
d
dt
∂K
∂˙qN
= −∂V
∂qN
.
(5.52)
5.2.2
Interpreting the Swing Phase Zero Dynamics
Much in the way that it has been proposed that a spring-loaded inverted
pendulum is a template for running [185,205], it has been proposed, though
less formally, that an inverted pendulum is an appropriate template for walk-
ing [83, 129, 133, 134, 172]. From Fig. 5.4 it might seem that the dynamics
that result from imposing virtual constraints—the swing phase zero dynam-
ics, (5.47)—should be the dynamics of a length- and inertia-varying inverted
pendulum, that is, a pendulum where the length, l, and the inertia about the
center of mass, J, vary as functions of ξ1. If this were true, it would sug-
gest this physical pendulum model as a new control template (or target) in
the design of controllers for walking robots. It will be shown that such an
interpretation of the swing phase zero dynamics is not valid. The reason for
this will be traced back to the fact that while virtual constraints may induce
the same kinematic behavior as a physical constraint, the induced dynamic
behavior is in general diﬀerent from that imposed by a physical constraint, as
was discussed in Section 5.1.2.
© 2007 by Taylor & Francis Group, LLC
Noting that since (see [219, p. 142])

Zero Dynamics of Bipedal Locomotion
123
ξ1
l
ph
cm
Figure 5.4. A robot with its center of mass labeled. The robot has mass
mtot and the inertia about the COM is J. Angles are measured here with a
clockwise convention, that is, they increase in the clockwise direction.
Consider Fig. 5.4. Using the angular momentum balance theorem, the rate
of change of the angular momentum of the robot about the stance leg end
during the swing phase, ˙ξ2, is equal to the external applied torque,
˙ξ2 = g0 mtotph
cm,
(5.53)
where g0 is the acceleration due to gravity, mtot is the robot’s mass and ph
cm
is the horizontal position of the robot’s center of mass, measured relative to
the end of the stance leg. Suppose ξ1 is deﬁned as in Fig. 5.4. Then, for an
output (5.30) satisfying Lemma 5.1, on the set Z in (5.34), it follows that
ph
cm = ph
cm(ξ1) and l = l(ξ1) so that
κ2(ξ1) = g0 mtotl(ξ1) sin(ξ1).
(5.54)
Expressing (5.47a) as ξ2 = Izero(ξ1) ˙ξ1, where2 Izero(ξ1) = 1/κ1(ξ1) is an
inertial term, allows the zero dynamics (5.47a) and (5.47b) to be written as a
second-order system,
Izero(ξ1)¨ξ1 + ∂Izero(ξ1)
∂ξ1
( ˙ξ1)2 −g0 mtotl(ξ1) sin(ξ1) = 0.
(5.55)
The equation of motion for a length- and inertia-varying pendulum can be
easily derived using the method of Lagrange. The kinetic energy is K(ξ1) =
1
2I(ξ1) ˙ξ2
1 where
I(ξ1) = mtot
∂l(ξ1)
∂ξ1
2
+ mtot(l(ξ1))2 + J(ξ1).
(5.56)
2A later result will ensure that κ1(ξ1) is never zero whenever the robot successfully com-
pletes a step.
© 2007 by Taylor & Francis Group, LLC

124
Feedback Control of Dynamic Bipedal Robot Locomotion
The potential energy is V (ξ1) = mtotg0 l(ξ1) cos(ξ1), and, hence, the equation
of motion3 is,
I(ξ1) ¨ξ1 + 1
2
∂I(ξ1)
∂ξ1
˙ξ2
1 + mtotg0
∂l(ξ1)
∂ξ1
cos(ξ1) −l(ξ1) sin(ξ1)

= 0.
(5.57)
Comparing the swing phase zero dynamics (5.55) and the dynamics for the
length- and inertia-varying pendulum (5.57), it is evident that the swing phase
zero dynamics does not correspond to an inverted pendulum, despite what
may be suggested by Fig. 5.4. It is interesting to note, however, that if the
length- and inertia-varying inverted pendulum had a torque, u, acting between
the pendulum and ground, i.e.,
I(ξ1) ¨ξ1 + 1
2
∂I(ξ1)
∂ξ1
˙ξ2
1 + mtotg0
∂l(ξ1)
∂ξ1
cos(ξ1) −l(ξ1) sin(ξ1)

= u, (5.58)
where
u = −1
2
∂I(ξ1)
∂ξ1
˙ξ2
1 + mtotg0
∂l(ξ1)
∂ξ1
cos(ξ1),
(5.59)
then, the forms of (5.55) and (5.58) with u as in (5.59) would be identical.4
Matching the inertial terms, I and Izero, however, does not yield a positive
deﬁnite J. That is, supposing Izero has the form of I given in (5.56) implies
J(ξ1) = Izero −mtot (∂l(ξ1)/∂ξ1) −mtot(l(ξ1))2 where l is the distance from
the stance leg end to the COM. For every example worked by the authors,
J is sign indeﬁnite, indicating that even with the addition of u as in (5.59),
the interpretation of the swing phase zero dynamics as a length- and inertia-
varying inverted pendulum does not hold.
5.3
Hybrid Zero Dynamics
The goal of this section is to incorporate the impact model into the notion of
the maximal internal dynamics compatible with the output being identically
zero, to obtain a zero dynamics of the complete model of the bipedal walker,
(3.30). Toward this goal, let y = h(q) be an output satisfying the hypotheses
of Lemma 5.1 and suppose there exists a trajectory, x(t), of the hybrid model
(3.30) along which the output is identically zero. If the trajectory contains
no impacts with S, then x(t) is a solution of the swing phase dynamics and
3If l and J do not vary as a function of ξ1, then I(ξ1) = I, l(ξ1) = l and (5.57) reduces to
the equation of motion for an inverted pendulum, I ¨ξ1 −mtotg0l sin(ξ1) = 0.
4The justiﬁcation for this input is to account for the energy entering the robot’s dynamics
via the control u∗given in (5.35).
© 2007 by Taylor & Francis Group, LLC

Zero Dynamics of Bipedal Locomotion
125
also of its zero dynamics. If the trajectory does contain impact events, then
let (t0, tf) be an open interval of time containing exactly one impact at te.
By deﬁnition, on the intervals (t0, te) and (te, tf), x(t) is a solution of the
swing phase dynamics and hence also of its zero dynamics, so x(t) ∈Z; since
also by deﬁnition of a solution, x−:= limt↗te x(t) exists, is ﬁnite, and lies
in S, it follows that x−∈S ∩Z. Moreover, by deﬁnition of a solution of
(3.30), x(te) := x+ := Δ(x−), from which it follows that Δ(x−) ∈Z. On the
other hand, if Δ(S ∩Z) ⊂Z, then from solutions of the swing phase zero
dynamics it is clearly possible to construct solutions to the complete model of
the bipedal walker along which the output y = h(q) is identically zero. This
leads to the following deﬁnition.
Deﬁnition 5.1
Let y = h(q) be an output satisfying the hypotheses of
Lemma 5.1, and let Z and ˙z = fzero(z) be the associated zero dynamics man-
ifold and zero dynamics of the swing phase model. Suppose that S ∩Z is a
smooth, one-dimensional, embedded submanifold of T Q. If Δ(S ∩Z) ⊂Z,
then the nonlinear system with impulse eﬀects,
Σzero :

˙z = fzero(z),
z−/∈S ∩Z
z+ = Δ(z−),
z−∈S ∩Z,
(5.60)
with z ∈Z, is the hybrid zero dynamics of the model (3.30).
Remark 5.3
From standard results in [22], S ∩Z will be a smooth one-
dimensional embedded submanifold if S ∩Z ̸= ∅and the map [h; (Lfh); pv
2]
has constant rank equal to 2N −1 on S ∩Z. Since
∂
∂x
⎡
⎢⎣
h
Lfh
pv
2
⎤
⎥⎦=
⎡
⎢⎢⎢⎢⎢⎢⎢⎣
∂h
∂q
0
∂
∂q
∂h
∂q ˙q
 ∂h
∂q
∂pv
2
∂q
0
⎤
⎥⎥⎥⎥⎥⎥⎥⎦
,
(5.61)
it is clear that this rank condition will be met if
rank [h; pv
2] = N,
(5.62)
and under this rank condition, S∩Z∩˜Q consists of the isolated zeros of [h; pv
2] .
Let q−
0 be a solution of [h(q); pv
2(q)] = [0; 0], ph
2(q) > 0. Then the connected
component of S ∩Z containing q−
0 is diﬀeomorphic to R per ¯λ : R →S ∩Z,
where
¯λ(ω) :=
 ¯λq
¯λ ˙q ω

(5.63)
© 2007 by Taylor & Francis Group, LLC

126
Feedback Control of Dynamic Bipedal Robot Locomotion
¯λq := q−
0 , and
¯λ ˙q :=

∂h
∂q (q−
0 )
γ0(q−
0 )
−1 
0
1

.
(5.64)
In view of this, the following additional assumption is made about the output
h and the open set ˜Q
HH5) there exists a unique point q−
0 ∈˜Q such that [h(q−
0 ); pv
2(q−
0 )] =
[0; 0], ph
2(q−
0 ) > 0, and the rank of [h; pv
2] at q−
0 equals N.
The next result characterizes when the swing phase zero dynamics is com-
patible with the impact model, leading to a nontrivial hybrid zero dynamics.
Theorem 5.2 (Hybrid Zero Dynamics Existence)
Consider the model (3.30), satisfying Hypotheses HR1–HR5 on the robot,
HGW1–HGW7 on the robot’s gait, and HI1–HI7 on the impact model, with
a smooth function h satisfying Hypotheses HH1–HH5. Then, the following
statements are equivalent:
(a) Δ(S ∩Z) ⊂Z;
(b) h ◦Δ|(S∩Z) = 0 and Lfh ◦Δ|(S∩Z) = 0; and
(c) there exists at least one point (q−
0 ; ˙q−
0 ) ∈S ∩Z such that γ0(q−
0 ) ˙q−
0 ̸= 0,
h ◦Δq(q−
0 ) = 0, and Lfh ◦Δ(q−
0 , ˙q−
0 ) = 0.
Proof
The equivalence of (a) and (b) is immediate from the deﬁnition of
Z as the zero set of h and Lfh. The equivalence of (b) and (c) follows from
Remark 5.3 once it is noted from (3.26) that Lfh ◦Δ is linear in ˙q.
Under the hypotheses of Theorem 5.2, the hybrid zero dynamics is well-
deﬁned. Let z−∈S ∩Z, and suppose that TI ◦Δ(z−) < ∞. Set z+ = Δ(z−)
and let ϕ : [0, tf] →Z, tf = TI(z+), be a solution of the zero dynamics,
(5.47), such that ϕ(0) = z+. Deﬁne ˆθ(t) := θ ◦ϕ(t) and ˙ˆθ := dˆθ(t)/dt.
Proposition 5.1
Assume the hypotheses of Theorem 5.2.
Then over any step of the robot
resulting in a transversal impact, ˙ˆθ : [0, tf] →R is never zero. In particular,
ˆθ : [0, tf] →R is strictly monotonic and thus achieves its maximum and
minimum values at the end points.
Proof
Without loss of generality, assume ˆθ(0) < ˆθ(tf). By HH3, the con-
ﬁguration of the robot at time t is determined by ˆθ(t). By HGW1 and HI7,
© 2007 by Taylor & Francis Group, LLC

Zero Dynamics of Bipedal Locomotion
127
˙ˆθ(t)
ˆθ(0)
ˆθ(tf)
t2
t3
t1, t4
ˆθ(t)
Figure 5.5. Impossible integral curve of the zero dynamics.
the height of the swing leg above the ground is zero at 0 and tf, and hence,
for all 0 < t < tf, ˆθ(0) < ˆθ(t) < ˆθ(tf), for otherwise there is an intermediate
impact with the ground. To show that ˆθ(t) is monotonic it suﬃces to show
that ˙ˆθ(t) > 0 for all 0 < t < tf. Suppose there exists some t2 (see Fig. 5.5)
such that 0 < t2 < tf and ˙ˆθ(t2) = 0. Let t2 be the smallest such t. The point
(ˆθ(t2); 0) cannot be an equilibrium point of (5.40) because ˆθ(t2) < ˆθ(tf).
Hence, there exists some t3 > t2 such that for all t2 < t < t3, ˙ˆθ(t) < 0 and
ˆθ(t) < ˆθ(t2). By the assumption that ˆθ(t) > ˆθ(0) for all t > 0 and because
ˆθ(tf) > ˆθ(t2), there must exist a t4 > t3 such that ˆθ(t4) = ˆθ(t1) for some
0 < t1 < t2. This contradicts the uniqueness of solutions of (5.40). Hence,
there can be no t2 such that ˙ˆθ(t2) = 0 and thus ˙ˆθ(t) > 0 for all 0 < t < tf.
By HI4, ˙ˆθ(0) ̸= 0, because ˙ˆθ(0) = 0 implies ˙q(0) = 0, which in turn implies
that the velocity of the end of the swing leg is zero, which contradicts the
hypothesis that the swing leg lifts from the ground without interaction at the
beginning of the step. Because the impact at the end of the step is transversal,
˙ˆθ(tf) ̸= 0. Therefore, by continuity, ˙ˆθ(t) > 0 for all t ∈[0, tf], establishing
that ˆθ : [0, tf] →R is strictly monotonic.
By Remark 5.3, it follows that ˆθ(0) = θ ◦Δq(q−
0 ) and ˆθ(tf) = θ(q−
0 ), that
is, the extrema can be computed a priori. Denote these by
θ−:= θ(q−
0 )
(5.65a)
θ+ := θ ◦Δq(q−
0 ).
(5.65b)
Without loss of generality, it is assumed that θ+ < θ−; that is, along any step
of the hybrid zero dynamics, θ is monotonically increasing.
Remark 5.4
The fact that θ evaluated along a step of the zero dynamics
© 2007 by Taylor & Francis Group, LLC

128
Feedback Control of Dynamic Bipedal Robot Locomotion
must be monotonic implies that there are restrictions on the walking gaits that
can be achieved by zeroing an output that depends only on the conﬁguration
variables.
5.4
Periodic Orbits of the Hybrid Zero Dynamics
The hybrid zero dynamics (5.60) is a particular case of the hybrid restric-
tion dynamics deﬁned in (4.24), corresponding to the case that the invariant
manifold arises from a set of virtual constraints. It is shown here that the
Poincar´e return map associated with (5.60) is diﬀeomorphic to a scalar LTI
system, thereby reducing determination of the existence of a ﬁxed point and
its local stability properties to a simple explicit computation. Fixed points of
the Poincar´e return map of the hybrid zero dynamics correspond to periodic
orbits of the hybrid zero dynamics. The analysis of periodic orbits of the hy-
brid zero dynamics will form the basis for proposing feedback laws that induce
exponentially stable walking motions in the full-dimensional hybrid model.
5.4.1
Poincar´e Analysis of the Hybrid Zero Dynamics
Assume the hypotheses of Theorem 5.2 and consider the hybrid zero dynamics
expressed in the form of a system with impulse eﬀects, as in (5.60). Take the
Poincar´e section to be S ∩Z and let the Poincar´e map ρ : S ∩Z →S ∩Z
be deﬁned on its domain of deﬁnition5 as in (4.23). In a special set of local
coordinates, the return map can be explicitly computed. Indeed, express the
hybrid zero dynamics in the coordinates of Theorem 5.1, namely, (ξ1; ξ2) =
(θ; γ). In these coordinates, S ∩Z and Δ : (ξ−
1 ; ξ−
2 ) →(ξ+
1 ; ξ+
2 ) simplify to
S ∩Z =
.
(ξ−
1 ; ξ−
2 ) | ξ−
1 = θ−, ξ−
2 ∈R
/
(5.66a)
ξ+
1 = θ+
(5.66b)
ξ+
2 = δzero ξ−
2 ,
(5.66c)
where
δzero := γ0(q+
0 ) Δ ˙q(q−
0 ) ¯λ ˙q,
(5.67)
a constant that may be computed a priori.
The hybrid zero dynamics is
thus given by (5.47) during the swing phase, and at impact with S ∩Z, the
reinitialization rules (5.66b) and (5.66c) are applied. By Proposition 5.1, over
any step resulting in a transversal impact, ˙ξ1 is nonzero, and thus (5.47) is
5Here, the interpretation as a partial map is being used; see Section 4.2.2.
© 2007 by Taylor & Francis Group, LLC

Zero Dynamics of Bipedal Locomotion
129
equivalent to
dξ2
dξ1
=
κ2(ξ1)
κ1(ξ1)ξ2
.
(5.68)
From (5.47), ˙ξ1 ̸= 0 implies ξ2 ̸= 0, and thus ζ2 := 1
2(ξ2)2 is a valid change of
coordinates on (5.68). In these coordinates, (5.68) becomes
dζ2
dξ1
= κ2(ξ1)
κ1(ξ1).
(5.69)
For θ+ ≤ξ1 ≤θ−, deﬁne6
Vzero(ξ1) := −
 ξ1
θ+
κ2(ξ)
κ1(ξ) dξ
(5.70)
and
ζ−
2 := 1
2(ξ−
2 )2
(5.71a)
ζ+
2 := δ2
zero ζ−
2 .
(5.71b)
Then (5.69) may be integrated over a step to obtain
ζ−
2 = ζ+
2 −Vzero(θ−),
(5.72)
as long as7
ζ+
2 −V MAX
zero
> 0,
(5.73)
where,
V MAX
zero
:=
max
θ+≤ξ1≤θ−Vzero(ξ1).
(5.74)
Theorem 5.3 (Poincar´e Map for Hybrid Zero Dynamics)
Consider the robot model (3.30) satisfying Hypotheses HR1–HR6 and HI1–HI7
with a smooth function h satisfying Hypotheses HH1–HH5, and let (θ; γ) be
as in Theorem 5.1. Then in the coordinates (ζ1; ζ2) = (θ; 1
2γ2), the Poincar´e
return map of the hybrid zero dynamics, ρ : S ∩Z →S ∩Z, is given by
ρ(ζ−
2 ) = δ2
zero ζ−
2 −Vzero(θ−),
(5.75)
with domain of deﬁnition
Dzero :=
.
ζ−
2 > 0
&& δ2
zero ζ−
2 −V MAX
zero
> 0
/
.
(5.76)
If δ2
zero ̸= 1 and
ζ∗
2 := −Vzero(θ−)
1 −δ2zero
(5.77)
6In general, Vzero must be computed numerically.
7By deﬁnition, ζ2 := 1
2(ξ2)2 must be positive along any solution.
© 2007 by Taylor & Francis Group, LLC

130
Feedback Control of Dynamic Bipedal Robot Locomotion
is in the domain of deﬁnition of ρ, then it is the ﬁxed point of ρ. Moreover,
if ζ∗
2 ∈Dzero is a ﬁxed point, then ζ∗
2 is an exponentially stable equilibrium
point of
ζ2(k + 1) = ρ(ζ2(k))
(5.78)
if, and only if, 0 < δ2
zero < 1, and in this case, its domain of attraction is
(5.76), the entire domain of deﬁnition of ρ.
Proof
Equation (5.75) follows from substituting (5.66c) into (5.72), and
(5.76) follows from (5.73). Note that because Vzero(θ+) = 0, V MAX
zero
≥0, and
thus Dzero is nonempty if, and only if, δ2
zero > 0. On the other hand, from
the aﬃne form of ρ, a ﬁxed point will be exponentially stable, if, and only if,
δ2
zero < 1, and in this case, solutions of (5.78) are monotonic, which implies
that the domain of attraction is all of Dzero.
Remark 5.5
The domain of deﬁnition (5.76) speciﬁes a lower bound on the
Poincar´e map ρ. That is, if ζ−
2 < V MAX
zero /δ2
zero, then the robot will not suc-
cessfully complete a step. Viewed another way, δ2
zeroζ−
2 −V MAX
zero
is the amount
of energy that may be removed from the system during a step—through per-
turbations, for example—before the robot will not be able to successfully
complete the step.
Using Corollary 4.2, these results on the hybrid zero dynamics can be re-
formulated in the following way:
Corollary 5.1
Consider the robot model (3.30) satisfying Hypotheses HR1–HR6 and HI1–
HI7 with a smooth function h satisfying Hypotheses HH1–HH5, and let (θ; γ)
be as in Theorem 5.1.
(a) The hybrid zero dynamics has a nontrivial periodic orbit transversal to
S ∩Z if, and only if, δ2
zero ̸= 1 and
δ2
zero
1 −δ2zero
Vzero(θ−) + V MAX
zero
< 0.
(5.79)
(b) The hybrid zero dynamics has an exponentially stable periodic orbit
transversal to S ∩Z if, and only if, (5.79) holds and
0 < δ2
zero < 1.
(5.80)
Proof
Since (3.30) is smooth, Hypotheses HSH1–HSH5 are met and f|Z =
fzero and Δ|S∩Z are smooth. In addition, Hypotheses HH1–HH5 imply Hy-
potheses HInv1–HInv4. Hence, all of the conditions of Corollary 4.2 are met.
© 2007 by Taylor & Francis Group, LLC

Zero Dynamics of Bipedal Locomotion
131
It remains to show that a ﬁxed point of ρ is transversal to S ∩Z. But from
(5.76), a ﬁxed point must have ζ∗
2 ̸= 0, which in combination with (5.62)
proves that Lfzeropv
2(z∗) ̸= 0, where z∗∈S ∩Z is the ﬁxed point of ρ.
The computation of the closed-form representation of the Poincar´e map has
shown the following result.
Corollary 5.2
A Lagrangian of the swing phase zero dynamics (5.47) is Lzero := Kzero−Vzero,
where Vzero is given by (5.70) and
Kzero = 1
2
"
˙ξ1
κ1(ξ1)
#2
.
(5.81)
Remark 5.6
The time-to-impact function, TI(ξ−
2 ), may be calculated from
(5.47a) as
TI(ξ−
2 ) =
 θ−
θ+
1
κ1(ξ1)ξ2(ξ1, ξ−
2 ) dξ1,
(5.82)
where ξ2(ξ1, ξ−
2 ) is a solution of (5.68). Because ξ2(ξ1, ξ−
2 ) is strictly increasing
in ξ−
2 , it follows that TI(ξ−
2 ) is strictly decreasing in ξ−
2 .
5.4.2
Relating Modeling Hypotheses to the Properties of the
Hybrid Zero Dynamics
Although the domain of deﬁnition of the Poincar´e map is as given in (5.76),
not all solutions of the zero dynamics satisfy the modeling hypotheses; in
particular, walking Hypothesis HGW2 limits the ratio and sign of the ground
reaction forces of the stance leg end during phases of single support. These
limits are reﬂected as an upper bound on the domain of deﬁnition of ρ. To
see this, let F T
1 and F N
1 be the tangential and normal forces experienced at
the end of the stance leg. The upper bound on ζ−
2 will be the largest ζ−
2
such that during the associated phase of single support, F N
1 is non-negative
and |F T
1 /F N
1 | is less than or equal to the maximum allowed static Coulomb
friction coeﬃcient.
The calculation of F T
1 and F N
1 requires the full (N + 2)-DOF model. Con-
sider the model (3.14) and apply the feedback u∗from (5.35).
Let ˙xe =
fe(xe) + ge(xe)[F T
1 ; F N
1 ] be the resulting closed-loop system written in state
space form, where, xe := (qe; ˙qe) and ye = he(qe) := (ph
1(qe); pv
1(qe)) is the
2-vector of outputs corresponding to the position of the end of the stance leg.
It is easily checked that the decoupling matrix LgeLfehe is always invertible,
© 2007 by Taylor & Francis Group, LLC

132
Feedback Control of Dynamic Bipedal Robot Locomotion
thus the forces F T
1 and F N
1 may be calculated as
 F T
1
F N
1

= −(LgeLfehe)−1L2
fehe.
(5.83)
The above expression is quadratic in ˙qe, and, when restricted to Z, is aﬃne
in ζ2. Combining this with the solution of (5.69) results in an expression for
the forces over a step of the robot that depends only on ξ1 and ζ−
2 , viz
⎡
⎣
F N
1 (ξ1, ζ−
2 )
F T
1 (ξ1, ζ−
2 )
⎤
⎦= Λ1(ξ1) ζ−
2 + Λ0(ξ1),
(5.84)
where Λ0 and Λ1 are smooth functions of ξ1. Thus, an upper bound on ζ−
2 so
that the pivot assumption holds is given by
ζmax
2,F N
1 := sup
,
ζ−
2 > 0
&&&&
min
θ+≤ξ1≤θ−F N
1 (ξ1, ζ−
2 ) ≥0
-
(5.85a)
ζmax
2,|F T
1 /F N
1 | := sup
,
0 < ζ−
2 < ζmax
2,F N
1
&&&&
max
θ+≤ξ1≤θ−
&&&&
F T
1 (ξ1, ζ−
2 )
F N
1 (ξ1, ζ−
2 )
&&&& ≤μs
-
, (5.85b)
where μs is the static Coulomb friction coeﬃcient of the walking surface [124],
and the domain of deﬁnition of the Poincar´e return map should thus be re-
stricted to
0
ζ−
2 > 0
&&& δ2
zero ζ−
2 −V MAX
zero
> 0, ζ−
2 < ζmax
2,|F T
1 /F N
1 |
1
.
(5.86)
On a practical note, if the modeling hypotheses included bounds on the
maximum actuator torque, then, in the same manner, these bounds could
also be explicitly included in the domain of deﬁnition of the Poincar´e map.
5.5
Creating Exponentially Stable, Periodic Orbits in
the Full Hybrid Model
Fixed points of the Poincar´e return map of the hybrid zero dynamics corre-
spond to periodic orbits of the hybrid zero dynamics. By construction of the
hybrid zero dynamics, these are also periodic orbits of the full model, (3.30).
Indeed, suppose that Hypotheses HH1–HH5 hold and that, in addition, there
exists a ﬁxed point, z∗∈S ∩Z, of the Poincar´e return map for the hybrid
zero dynamics. Let O be the periodic orbit in Z corresponding to z∗; that is,
O := {z ∈Z | z = ϕ(t, Δ(z∗)), 0 ≤t < TI ◦Δ(z∗)} ,
(5.87)
© 2007 by Taylor & Francis Group, LLC

Zero Dynamics of Bipedal Locomotion
133
where ϕ is a solution of the hybrid zero dynamics, (5.60). O is then a periodic
orbit of the full model corresponding to initial condition z∗and control input
u(t) = u∗◦ϕ(t, Δ(z∗)), for 0 ≤t < TI ◦Δ(z∗), where u∗is given by (5.35).
The objective is to now show that exponentially stable orbits of the hybrid
zero dynamics correspond to exponentially stabilizable orbits of the full model.
This is developed using two approaches to the design of a feedback control
that imposes the virtual constraints, (5.30). Application of the prefeedback
u(x) = (LgLfh(x))−1(v −L2
fh(x))
(5.88)
to (5.29) with an output satisfying HH1–HH4 results in the chain of N −1
double integrators,
d2y
dt2 = v;
(5.89)
see (5.32). Two choices of a feedback v are now made for which the periodic
orbit O can be shown to be exponentially attractive.
5.5.1
Computed Torque with Finite-Time Feedback Control
Let
v(y, ˙y)
(5.90)
be any feedback controller on (5.89) satisfying conditions HC1–HC4 below.
Controller Hypotheses: for the closed-loop chain of double integrators,
¨y = v(y, ˙y),
HC1) solutions globally exist on R2N−2, and are unique;
HC2) solutions depend continuously on the initial conditions;
HC3) the origin is globally asymptotically stable, and convergence is
achieved in ﬁnite time; and
HC4) the settling time function,8 Tset : R2N−2 →R by
Tset(y0, ˙y0) := inf{t > 0 | (y(t); ˙y(t)) = (0; 0),
(y(0); ˙y(0)) = (y0; ˙y0)}
(5.91)
depends continuously on the initial condition, (y0; ˙y0).
Hypotheses HC1–HC3 correspond to the deﬁnition of ﬁnite-time stability [20,
21, 108]; Hypothesis HC4 is also needed, and it is not implied by HC1–HC3
[20]. These requirements rule out traditional sliding mode control, with its
8That is, the time it takes for a solution initialized at (y0; ˙y0) to converge to the origin.
The terminology is taken from [20].
© 2007 by Taylor & Francis Group, LLC

134
Feedback Control of Dynamic Bipedal Robot Locomotion
well-known discontinuous action. One possibility is the continuous feedback
law presented in [20],
v = Ψ(y, ˙y) := 1
ϵ2 ·
⎡
⎢⎢⎣
ψ1(y1, ϵ ˙y1)
...
ψN−1(yN−1, ϵ ˙yN−1)
⎤
⎥⎥⎦,
(5.92)
where
ψi(yi, ϵ ˙yi) := −sign(ϵ ˙yi)|ϵ ˙yi|α −sign(φi(yi, ϵ ˙yi))|φi(yi, ϵ ˙yi)|
α
2−α ,
(5.93)
0 < α < 1, and
φi(yi, ϵ ˙yi) := yi +
1
2 −α · sign(ϵ ˙yi)|ϵ ˙yi|2−α.
(5.94)
The settling time of the controller is adjusted by the parameter ϵ > 0.
The state feedback controller is
uF T (x) = (LgLfh(x))−1(v(h(x), Lfh(x)) −L2
fh(x)),
(5.95)
for any choice of v in (5.90) satisfying HC1–HC4.
Theorem 5.4 (Exponentially Stable Walking Motions-I)
Consider the hybrid model of walking (3.30) for a robot satisfying Hypothe-
ses HR1–HR5 and HI1–HI7, and a set of virtual constraints (5.30) satisfying
Hypotheses HH1–HH5. Suppose that the hybrid zero dynamics has an expo-
nentially stable periodic orbit O transversal to S ∩Z. Then for any function
v satisfying Hypotheses HC1–HC4, O is also an exponentially stable periodic
orbit transversal to S of the closed-loop system consisting of (3.30) and the
state variable feedback (5.95).
The proof is given in Appendix C.2. By this result, it follows that if an out-
put can be selected so that the resulting 1-DOF hybrid zero dynamics admits
an exponentially stable orbit, then an exponentially stable walking motion
can be achieved for the full-dimensional model of the robot. Moreover, by
the results of Section 5.4.2, it can be ensured that key modeling assumptions
are met for the steady state walking motion. Chapter 6 will give a means of
systematically selecting the output function.
5.5.2
Computed Torque with Linear Feedback Control
Suppose that the decoupling matrix LgLfh is invertible. Let KD > 0 and
KP > 0 be N −1×N −1 positive deﬁnite matrices and let ϵ > 0 be a positive
scalar “tuning parameter.” Then the feedback
uLIN(x) = −(LgLfh(x))−1

L2
fh(x) + 1
ϵ KDLfh(x) + 1
ϵ2 KP h(x)

(5.96)
© 2007 by Taylor & Francis Group, LLC

Zero Dynamics of Bipedal Locomotion
135
applied to the swing phase portion of (3.30) results in
¨y = −1
ϵ KD ˙y −1
ϵ2 KP y.
(5.97)
The solutions of (5.97) converge exponentially to zero. In bipedal walking, the
impact map tends to increase the norm of ˙y at each impact. The parameter
ϵ > 0 provides control over the speed with which y(t) and ˙y(t) converge to zero
during the continuous phase, so that, over a cycle consisting of an impact event
followed by a swing phase, the contraction taking place in the swing phase
dominates the expansion coming from the impact. In this way, the solution of
the closed-loop system may converge to the hybrid zero dynamics, and hence
to an exponentially stable periodic orbit of the hybrid zero dynamics. The
theorem below makes this intuitive idea rigorous.
Theorem 5.5 (Exponentially Stable Walking Motions-II)
Consider the hybrid model of walking (3.30) for a robot satisfying Hypothe-
ses HR1–HR5 and HI1–HI7, and a set of virtual constraints (5.30) satisfying
Hypotheses HH1–HH5. Suppose that the hybrid zero dynamics has an expo-
nentially stable periodic orbit O transversal to S ∩Z. Then for any choice of
positive deﬁnite matrices KD > 0 and KP > 0, there exists ¯ϵ > 0 such that
for 0 < ϵ < ¯ϵ, O is also an exponentially stable periodic orbit transversal to S
of the closed-loop system consisting of (3.30) and the state variable feedback
(5.96).
In short, for ϵ > 0 suﬃciently small, an exponentially stable periodic orbit
of the hybrid zero dynamics is also an exponentially stable periodic orbit of
the full-dimensional closed-loop system. The proof is given in Appendix C.2.
© 2007 by Taylor & Francis Group, LLC


6
Systematic Design of Within-Stride Feedback
Controllers for Walking
Chapter 5 provided the conditions for the existence of a zero dynamics for the
complete robot model with impacts and established a number of its proper-
ties. However, in a concrete manner, the results are not yet practicable for
feedback design for at least two reasons. First, the issue of how to choose
the virtual constraints has not been addressed, and second, in general, the
coordinate transformation used in the explicit computation of the hybrid zero
dynamics can be very diﬃcult to perform. This chapter has two principal
objectives: to present a class of output functions that leads to computable,
closed-form representations of the zero dynamics and to introduce a ﬁnite
parameterization of the outputs in a convenient form that will permit the
shaping of the zero dynamics by parameter optimization.
Throughout the chapter, the robot is assumed to satisfy Hypotheses HR1–
HR6 and HI1–HI7. Its model in the form of a system with impulse eﬀects is
expressed as
Σ :

˙x = f(x) + g(x)u
x−/∈S
x+ = Δ(x−)
x−∈S,
(6.1)
where x = (q; ˙q), and
f(x) =

˙q
D−1(q) [−C(q, ˙q) ˙q −G(q)]

and g(x) =

0
D−1(q)B(q)

.
(6.2)
In addition, a gait is sought that satisﬁes Hypotheses HGW1–HGW7.
6.1
A Special Class of Virtual Constraints
Associate to (6.1) and (6.2) the following output function
y = h(q) := h0(q) −hd ◦θ(q),
(6.3)
where h0(q) speciﬁes (N −1) independent quantities that are to be controlled
and hd ◦θ(q) speciﬁes the desired evolution of these quantities as a function of
137
© 2007 by Taylor & Francis Group, LLC

138
Feedback Control of Dynamic Bipedal Robot Locomotion
the scalar quantity θ(q). Driving y to zero will force h0(q) to track hd◦θ(q), see
Fig. 1.9. The posture of the robot is then being controlled to evolve according
to the virtual constraints h0(q) −hd ◦θ(q) = 0—that is, a set of holonomic
constraints parameterized by θ(q). It is important to note that this is not a
classical trajectory tracking scheme because the desired evolution of h0(q) is
slaved to θ(q), a function of the robot’s state, and not time. Slaving h0(q) to
θ(q) results in a closed-loop system which is autonomous.
Choosing
h0(q) := H0q
(6.4a)
θ(q) := c q
(6.4b)
where H0 is an (N −1) × N real matrix and c is a 1 × N real row vector,
allows the hypotheses of Lemma 5.1 to be easily satisﬁed. Speciﬁcally, the
output function structure of (6.3) with h0(q) and θ(q) as in (6.4), satisﬁes
Hypothesis HH1 (the output only depends on the conﬁguration variables) and
will satisfy Hypothesis HH3 (invertibility of the coordinate transformation on
the conﬁguration variables) if, and only if,
H :=

H0
c

(6.5)
is full rank. Hence, if Hypotheses HH2 and HH4 hold (invertibility of the
decoupling matrix and Z is nonempty), the swing phase zero dynamics can
be computed in closed form. Indeed, the coordinate inverse required in (5.46a)
is given by
q = H−1

hd(ξ1)
ξ1

.
(6.6)
In Section 6.2, hd will be specialized to a vector of B´ezier polynomials, which
will make it straightforward to achieve the invariance condition, Δ(S∩Z) ⊂Z.
Finally, note that due to the structure of the output (6.3) with h0 and θ as in
(6.4), Hypotheses HH2 and HH3 imply Hypothesis HH4.
6.2
Parameterization of hd by B´ezier Polynomials
Let 1 ≤i ≤(N −1). A one-dimensional B´ezier polynomial [19] of degree M
is a polynomial, bi : [0, 1] →R, deﬁned by M + 1 coeﬃcients, αi
k, per
bi(s) :=
M

k=0
αi
k
M!
k!(M −k)! sk(1 −s)M−k.
(6.7)
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Within-Stride Feedback Controllers for Walking
139
s
0
1/5
2/5
3/5
4/5
1
α0
α1
α2
α3
α4
α5
b(s)
Figure 6.1. An example B´ezier degree ﬁve (M = 5) polynomial curve. Note
that (i) the curve is contained within the convex hull of the 6 coeﬃcients (as
viewed as points in R2, {(0; α0), (1/5; α1), . . . , (1; α5)}), (ii) the curve begins
at (0; α0) and ends at (1; α5), and (iii) the curve is tangent to the line segments
connecting (0; α0) and (1/5; α1), and (4/5; α4) and (1; α5) at the start and end
points, respectively.
For later use, note that
∂bi(s)
∂s
=
M−1

k=0
(αi
k+1 −αi
k)
M!
k!(M −k −1)! sk(1 −s)M−k−1.
(6.8)
1. the image of the B´ezier polynomial is contained in the convex hull of
the M + 1 coeﬃcients (as viewed as points in R2, {(0; αi
0), (1/M; αi
1),
(2/M; αi
2), . . . , (1; αi
M)});
2. bi(0) = αi
0 and bi(1) = αi
M; and
3. (∂bi(s)/∂s)|s=0 = M(αi
1 −αi
0) and (∂bi(s)/∂s)|s=1 = M(αi
M −αi
M−1).
The ﬁrst feature implies that the polynomial does not exhibit large oscillations
with small parameter variations, which is useful for numerical calculations.
The second two features are exactly those used to achieve Δ(S ∩Z) ⊂Z. See
Fig. 6.1 for an example B´ezier polynomial curve.
A given function θ(q) of the generalized coordinates will not, in general,
take values in the unit interval over a phase of single support. Therefore,
to appropriately compose a B´ezier polynomial with θ(q), it is necessary to
normalize θ by
s(q) := θ(q) −θ+
θ−−θ+ ,
(6.9)
© 2007 by Taylor & Francis Group, LLC
Some particularly useful features of B´ezier polynomials are (see [189, p. 291])

140
Feedback Control of Dynamic Bipedal Robot Locomotion
which takes values in [0, 1]; recall that θ−is the value of θ at the end of the
step and θ+ is the value at the beginning of the step. Deﬁne hd ◦θ(q) by
hd ◦θ(q) :=
⎡
⎢⎢⎢⎢⎣
b1 ◦s(q)
b2 ◦s(q)
...
bN−1 ◦s(q)
⎤
⎥⎥⎥⎥⎦
.
(6.10)
Group the parameters αi
k into an (N −1) × (M + 1) matrix, α, and denote
the columns of α by αk := (α1
k; . . . ; αN−1
k
). For most of this book, the output
will be chosen to be of the form (6.3) to (6.4b) with hd chosen as in (6.10).
An important class of parameters, α, is now deﬁned.
Deﬁnition 6.1
The matrix of parameters α is said to be a regular param-
eter of an output of the form (6.3) to (6.4b) with hd chosen as in (6.10) if the
resulting output satisﬁes Hypotheses HH1–HH5, that is, the conditions for the
invertibility of the decoupling matrix and the existence of a two-dimensional,
smooth, zero dynamics associated with the single support phase of the robot.
In later chapters it will be important to distinguish between diﬀerent output
functions—and hence walking motions—which diﬀer only in the choice of the
B´ezier parameters. For this reason, from this point forward, quantities related
to an output will be labeled with its grouped B´ezier coeﬃcients; for example,
the beginning and ending values of θ associated with α will be written as θ+
α
and θ−
α , and the B´ezier polynomial degree will be written Mα.
Evaluating (6.10) and its derivative with respect to θα at the beginning
(respectively end) of a phase of single support, that is, where θ(q) = θ+
α
(respectively θ(q) = θ−
α ) will lead to a convenient means of ensuring Δ(S ∩
Zα) ⊂Zα. Evaluation of hd,α is particularly trivial,
hd,α(θ+
α ) = α0
(6.11a)
hd,α(θ−
α ) = αM,
(6.11b)
and therefore (6.6) evaluated at θ+
α and θ−
α becomes
q+
α = H−1

α0
θ+
α

(6.12a)
q−
α = H−1

αMα
θ−
α

.
(6.12b)
Diﬀerentiation of (6.6) with respect to time yields
˙qα = H−1
⎡
⎣
∂hd,α
∂θ
1
⎤
⎦˙θα.
(6.13)
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Within-Stride Feedback Controllers for Walking
141
Taking the partial derivative of (6.10) required by (6.13) yields
∂hd,α
∂θ
= ∂bα
∂sα
∂sα
∂θ
(6.14a)
=
" Mα

k=0
αk
Mα!
k!(Mα −k)!
 
ksk−1
α
(1 −sα)Mα−k
−(Mα −k)sk
α(1 −sα)Mα−k−1!#
1
θ−
α −θ+
α
(6.14b)
which when evaluated at θ+
α and θ−
α gives
∂hd,α
∂θ
&&&&
θ=θ+
α
=
Mα
θ−
α −θ+
α
(α1 −α0)
(6.15a)
∂hd,α
∂θ
&&&&
θ=θ−
α
=
Mα
θ−
α −θ+
α
(αMα −αMα−1)
(6.15b)
and therefore (6.13) evaluated at θ+
α and θ−
α becomes
˙q+
α = H−1
⎡
⎣
Mα
θ−
α −θ+
α
(α1 −α0)
1
⎤
⎦˙θ+
α
(6.16a)
˙q−
α = H−1
⎡
⎣
Mα
θ−
α −θ+
α
(αMα −αMα−1)
1
⎤
⎦˙θ−
α .
(6.16b)
For notational convenience, deﬁne
ω−
α := H−1
⎡
⎢⎣
Mα
θ−
α −θ+
α
(αM −αM−1)
1
⎤
⎥⎦.
(6.17)
For two regular parameter sets, α and β, the following theorem gives the
conditions under which Δ(S ∩Zα) ⊂Zβ. This theorem will be key in the
construction of controllers with invariant zero dynamics manifolds and when
performing event-based PI control in the next chapter.
Theorem 6.1 (Achieving Δ(S ∩Zα) ⊂Zβ)
Assume the hypotheses of Theorem 5.2 and two outputs hα and hβ of the form
(6.3) with h0, hd, and θ as in (6.4) and (6.10). Then, hβ ◦Δ(S ∩Zα) = 0 if,
and only if,

β0
θ+
β

= HΔqH−1

αMα
θ−
α

.
(6.18)
© 2007 by Taylor & Francis Group, LLC

142
Feedback Control of Dynamic Bipedal Robot Locomotion
Moreover, if cΔ ˙qω−
α ̸= 0, then Lfhβ ◦Δ(S ∩Zα) = 0 if, and only if,
β1 = H0Δ ˙qω−
α
θ−
β −θ+
β
Mβ

cΔ ˙qω−
α
−1 + β0.
(6.19)
That is, (6.18) and (6.19) are equivalent to Δ(S ∩Zα) ⊂Zβ as long as
cΔ ˙qω−
α ̸= 0.
Proof
Using Theorem 5.2, it suﬃces to show that there exists at least one
point x−
α = (q−
0,α; ˙q−
0,α) ∈S ∩Zα such that γ0(q−
0,α) ˙q−
0,α ̸= 0, hβ ◦Δq q−
0,α = 0,
and Lfhβ ◦Δ(q−
0,α, ˙q−
0,α) = 0. Evaluating (6.6) on S ∩Zα, hβ ◦Δ(x−
α ) = 0
means that q+
β = Δq q−
α . Equating (6.12) with Δq yields
H−1

β0
θ+
β

= ΔqH−1

αMα
θ−
α

,
(6.20)
which may be solved for (β0; θ+
β ). Achieving Lfhβ ◦Δ(x−
α ) = 0 means that
˙q+
β = Δ ˙q(q−
α ) ˙q−
α . Equating (6.16) with Δ ˙q yields
H−1
⎡
⎣
Mβ
θ−
β −θ+
β
(β1 −β0)
1
⎤
⎦˙θ+
β = Δ ˙qH−1
⎡
⎣
Mα
θ−
α −θ+
α
(αMα −αMα−1)
1
⎤
⎦˙θ−
α
(6.21)
and consequently
Mβ
θ−
β −θ+
β
(β1 −β0) ˙θ+
β = H0Δ ˙qω−
α ˙θ−
α
(6.22)
and
˙θ+
β = cΔ ˙qω−
α ˙θ−
α ,
(6.23)
which implies
β1 = H0Δ ˙qω−
α
θ−
β −θ+
β
Mβ
˙θ−
α
˙θ+
β
+ β0
(6.24)
and
˙θ+
β
˙θ−
α
= cΔ ˙qω−
α .
(6.25)
Hence,
β1 = H0Δ ˙qω−
α
θ−
β −θ+
β
Mβ

cΔ ˙qω−
α
−1 + β0
(6.26)
as long as cΔ ˙qω−
α ̸= 0.
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Within-Stride Feedback Controllers for Walking
143
Corollary 6.1 (Achieving Δ(S ∩Zα) ⊂Zα)
Assume the hypotheses of Theorem 5.2 and an output hα of the form (6.3)
with h0, hd,α, and θα as in (6.4) and (6.10). Then, hα ◦Δ(S ∩Zα) = 0 if,
and only if,

α0
θ+
α

= HΔqH−1

αMα
θ−
α

.
(6.27)
Moreover, if cΔ ˙qω−
α ̸= 0, then Lfhα ◦Δ(S ∩Zα) = 0 if, and only if,
α1 = H0Δ ˙qω−
α
θ−
α −θ+
α
Mα

cΔ ˙qω−
α
−1 + α0.
(6.28)
That is, (6.27) and (6.28) are equivalent to Δ(S ∩Zα) ⊂Zα as long as
cΔ ˙qω−
α ̸= 0.
Remark 6.1
Corollary 6.1 constrains the coeﬃcients α0 and α1 to be
functions of αMα and αMα−1.
Hence, Mα must be chosen to be three or
greater to impose the invariance condition.
The following two lemmas give the conditions under which two regular
parameter sets, α and β, satisfy S ∩Zβ = S ∩Zα and Δ(S ∩Zβ) = Δ(S ∩Zα).
These lemmas will be the key to achieving transitions between two walking
gaits in the next chapter.
Lemma 6.1 (Achieving S ∩Zα = S ∩Zβ)
Assume the hypotheses of Theorem 5.2 and two outputs hα and hβ of the form
(6.3) with h0, hd, and θ as in (6.4) and (6.10). Then, S ∩Zα = S ∩Zβ if,
and only if,
αMα = βMβ,
θ−
α = θ−
β
(6.29)
and
αMα−1 = Mβ
Mα
θ−
α −θ+
α
θ−
β −θ+
β
(βMβ−1 −βMβ) + βMβ.
(6.30)
Proof
The result follows directly from equating (6.12b) for β and α and
equating (6.16b) for β and α.
Lemma 6.2 (Achieving Δ(S ∩Zβ) = Δ(S ∩Zα))
Assume the hypotheses of Theorem 5.2 and two outputs hα and hβ of the form
(6.3) with h0, hd, and θ as in (6.4) and (6.10). Then, Δ(S ∩Zβ) = Δ(S ∩Zα)
if, and only if,
β0 = α0,
θ+
β = θ+
α
(6.31)
© 2007 by Taylor & Francis Group, LLC

144
Feedback Control of Dynamic Bipedal Robot Locomotion
and
β1 = Mα
Mβ
θ−
β −θ+
β
θ−
α −θ+
α
(α1 −α0) + α0.
(6.32)
Proof
The result follows directly from equating (6.12a) for β and α and
equating (6.16a) for β and α.
6.3
Using Optimization of the HZD to Design
Exponentially Stable Walking Motions
The previous two Sections have speciﬁed a set of outputs (or virtual con-
straints) for which the existence of the hybrid zero dynamics can be ensured
in a straightforward manner. In particular, the invariance of the zero dynam-
ics manifold under the impact map can be worked out in closed form when
B´ezier polynomials are used. This section presents a method for choosing the
remaining free parameters in the B´ezier polynomials to design a walking gait.
The main idea is to pose the gait design problem as a parameter optimization
problem.
The use of optimization in the analysis and design of bipedal walking mo-
tions has a relatively long history. Work as early as the 1970s can be found in
the biomechanics literature (see [55,113], for example). In more recent years,
the design of optimal or approximately optimal trajectories for bipedal robots
has become a popular topic [33, 44, 49, 109, 111, 191, 192, 195]. In each case
the approach has been to design time trajectories such that a deﬁned cost is
minimized, or approximately minimized, subject to a set of constraints. The
particular optimization technique employed varies considerably. Cabodevila
and Abba [33] parameterized the robot state as a ﬁnite Fourier series and
compared the performance of three algorithms: Nelder and Mead, Genetic,
and Simulated Annealing. Chevallereau and Aoustin [44], and Chevallereau
and Sardain [49] rewrote the actuated dynamics of the robot as a polynomial
function of the unactuated dynamics and used Sequential Quadratic Program-
ming (SQP). Hasegawa, Arakawa, and Fukuda [111] used a modiﬁed genetic
algorithm to generate reference trajectories parameterized as cubic splines.
Hardt [109] used an optimization package, DIRCOL [232], which implements
a sparse SQP algorithm and uses a variable number of cubic splines to ap-
proximate the state and piecewise linear functions to approximate the control
signals. Rostami and Bessonnet [192] applied Pontryagin’s Maximum Princi-
ple. Roussel, Canudas de Wit, and Goswami [195] approximated the dynamics
and used a direct shooting optimization algorithm.
Optimization will be used here to design walking motions via the selection
of the parameters in the output functions, speciﬁcally, the B´ezier polynomial
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Within-Stride Feedback Controllers for Walking
145
coeﬃcients of hd. The optimization process will not result in an optimal or
approximately optimal open-loop trajectory, but rather a closed-loop system
which possesses an exponentially stable orbit, and along this orbit a cost func-
tion will have been approximately minimized while satisfying other natural
kinematic and dynamic constraints.
It is emphasized that the choice of the output function structure, H0, c, and
the use of B´ezier polynomials for hd is based on analytical and computational
tractability. Other output function structures have been explored. For exam-
ple, in [176], which addresses the control of the ﬁve-link model presented in
Section 3.4.6, a Cartesian approach is taken to the design of output functions.
In that work, virtual constraints are posed on absolute torso angle, hip height,
horizontal hip position, and swing leg end height. These virtual constraints,
however, were not chosen so that the corresponding swing phase zero dynam-
ics would be invariant under the impact map, and thus the stability results
of Chapter 5 could not be applied.1 Another choice of output function was
explored in [120]. In that work, a fully actuated model is assumed and the
output is designed to depend upon the horizontal component of the velocity
of the robot’s center of mass. In particular, the horizontal velocity of the
center of mass is controlled to be a constant. Although the class of output
functions chosen in this chapter does not allow explicit dependence upon ve-
locity, the eﬀect of velocity dependence used in [120] may be achieved via the
event-based PI control scheme given in the next chapter.
Before the optimization problem is posed, it is worth illustrating how the
parameters in an output function can aﬀect gait properties, such as stability
and energy expenditure.
6.3.1
Eﬀects of Output Function Parameters on Gait
Properties: An Example
The purpose of this example is to illustrate how the coeﬃcients in the B´ezier
polynomial hd can aﬀect gait properties. Consider the two-link walker pre-
sented in Section 3.4.6.1 with a scalar output2 of the form (6.3) to (6.4b) with
hd chosen3 as in (6.10). In the process of analyzing the example, the details
of hypothesis veriﬁcation will be illustrated and the need for a systematic
approach to parameter selection—namely, optimization—will be motivated.
The ﬁrst step in the design of the output function is to select the quantity
to be controlled. The controlled quantity is selected here to be the hip angle,
q1, because it is the directly actuated coordinate. Hence, H0 = [ 1 0 ]. The
function θ(q) is selected to be θ(q) = q2 because, as the robot pivots from
1Stability was analyzed using a version of Theorem 4.4.
2Because the two-link model has only one actuated joint, the output is scalar.
3In this section, α refers to the output function parameters and not the ground slope, which
is assumed to be zero.
© 2007 by Taylor & Francis Group, LLC

146
Feedback Control of Dynamic Bipedal Robot Locomotion
left to right about the stance foot, θ(q) is monotonically increasing; moreover,
H0q and θ(q) = c q = [ 0 1 ] q are independent. Indeed
H =

1 0
0 1

(6.33)
is full rank. As a result, HH3 is clearly satisﬁed. Computing the decoupling
matrix yields
LgLfh(q1, q2) =

I −m l (l −lc) cos (q1) + m(l −lc)2  
∂hd
∂q2 −2
!
−2m lc l
(m l (l −lc) cos (q1))2 −((l2 + l2c) m + I)
 
(l −lc)2 m + I
!.
(6.34)
The decoupling matrix will be invertible, c.f. Hypothesis HH2, whenever
the numerator of (6.34) is diﬀerent from zero, which can be ensured by ap-
propriately choosing hd and ˜Q ⊂Q for given l and lc. The B´ezier polynomial
degree, Mα, is selected to be four. The ﬁrst two parameters, α0 and α1, are
constrained to impose invariance per Corollary 6.1, leaving three free param-
eters α2, α3, and α4. For simplicity, ﬁx α4 = π/7, which leaves α2 and α3 as
the only free parameters to be selected.
Because HH5 only depends upon q−
α , given by (6.12b), which depends only
upon α3 and α4, HH5 is veriﬁed because
∂
∂q

hα
pv
2
&&&&&
q−
α
≈

1
28
π α3 −4
0.223
−0.445

(6.35)
is full rank for α3 ̸≈0.225.
For a scalar output and two free parameters, it is feasible to numerically
explore which parameter values give rise to motions that satisfy stability con-
ditions (5.79) and (5.80) of Corollary 5.1 and also satisfy the remaining unveri-
ﬁed hypotheses: HGW2, HI3, HH2, and HH4.4 These conditions and hypothe-
ses were checked on a 500 by 500 grid for 0.5 ≤α2 ≤7 and −0.85 ≤α3 ≤2.2.
Figure 6.2(a) gives the region in which the two stability conditions (5.79) and
(5.80) are satisﬁed. The linear shape of the left side of the shaded region is a
consequence of δzero being greater than one and δzero only depending upon α3
and α4 (see Fig. 6.2(b)). Output Hypotheses HH2 and HH4 are satisﬁed for
the entire walking motion inside the darkly shaded region of Fig. 6.2(a). In-
side the lightly shaded region the decoupling matrix is singular for at least one
point along the walking motion. Inside the darkly shaded region of Fig. 6.2(c),
the two ground contact assumptions given in Hypotheses HGW2 and HI3 are
4For this two-link model, HGW6 will never be satisﬁed due to the simplicity of the model.
See Section 3.4.6.1 for a discussion of this issue.
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Within-Stride Feedback Controllers for Walking
147
Table 6.1. Example gait statistics for the two-link walker with α2 = 1.4 and
α3 = 0.8.
J(α)
ζ∗
2
Vzero(θ−)
V MAX
zero
¯ν
(N2m)
(kgm2/s)2
δ2
zero
(kgm2/s)2
(kgm2/s)2
(m/s)
0.211
0.101
0.813
−0.0340
0.0631
0.363
met; namely, the vertical component of the ground reaction force is positive,
the ratio of the horizontal component to the vertical component does not ex-
ceed the coeﬃcient of static friction (assumed here to be 0.6), and at impact,
the swing leg neither slips nor rebounds. Points inside this region satisfy gait
Hypotheses HGW1–HGW5 and output Hypotheses HH1–HH6. The grid was
reﬁned about this region and the average walking rate, ¯ν, and cost given by
the integral over the step of squared torque divided by distance traveled,5
J(α) =
1
ph
2(q−
0 )
 TI(ξ−
2 )
0
||u∗
α(t)||2
2dt,
(6.36)
were calculated for points inside the region; Fig. 6.3 and Fig. 6.4 present the
contour plots.
For α2 = 1.4 and α3 = 0.8, the system was simulated for three steps.
Table 6.1 and Fig. 6.5 give various statistics and plots of interest. Note that
the discontinuities in the plots of Fig. 6.5 are due to impacts and coordinate
relabeling. The swing foot height, see Fig. 6.5(f), becomes negative due to the
foot scuﬃng that is unavoidable with this simple model (see Section 3.4.6.1).
A stick-ﬁgure animation of the simulation is provided in Fig. 6.6.
In this simple example, a few simulations were suﬃcient to determine how
to choose α2 and α3 in order to achieve stable walking with desirable charac-
teristics. As the B´ezier polynomial degree, Mα, and the number of links, N,
increase, determining desirable parameter values becomes signiﬁcantly more
diﬃcult. This motivates the use of optimization as an automated means of
parameter selection.
6.3.2
The Optimization Problem
The parameter selection problem will now be cast as a constrained nonlinear
optimization problem that may be solved with many of the numerical opti-
mization tools currently available. The objective will be to choose the matrix
of output function parameters, α, such that hybrid model (6.1), the virtual
constraint speciﬁed by (6.3) with h0, hd, and θ as in (6.4) and (6.10), and
either of the state variable feedbacks given in (5.95) and (5.96), will possess
5See the next subsection for a discussion of this cost function.
© 2007 by Taylor & Francis Group, LLC

148
Feedback Control of Dynamic Bipedal Robot Locomotion
1
2
3
4
5
6
7
1
2
0
-0.5
0.5
1.5
α2
α3
(a) Inside the lightly shaded region, requirements (5.79) and (5.80) are met.
Inside the
darkly shaded region, Hypotheses HH2 and HH4 are met.
-0.5
1
2
0
1.5
0.5
0.90
0.92
0.96
1.02
1.00
0.98
0.94
δzero
α3
(b) Stability requirement (5.80) is met below the dashed line. Note δzero depends only on
α3 and α4, and for the example, α4 is ﬁxed at π/7.
1
2
3
4
5
6
7
1
2
0
-0.5
0.5
1.5
α2
α3
(c) Inside the darkly shaded region, the ground contact assumptions given in Hypotheses
HGW2 and HI3 are met. Outside this region, one or the other is not met. The coeﬃcient
of friction is assumed to be 0.6.
Figure 6.2. Determining which parameters give rise to a valid walking gait
for the two-link walker. Note that α4 = π/7.
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Within-Stride Feedback Controllers for Walking
149
1
0.5
1.5
1
1.2
1.4
1.6
1.8
2
2.2
0.2
0.17
0.23
α2
α3
Figure 6.3. Contour plot of average walking rate for parameters which give
rise to stable walking. The contour units are meters per second.
1
0.5
1.5
1
1.2
1.4
1.6
1.8
2
2.2
0.2
0.4
0.6
0.8
1
α2
α3
Figure 6.4. Contour plot of the cost for parameters which give rise to stable
walking. The cost is J(α) =
1
ph
2(q−
0 )
 TI(ξ−
2 )
0
(u∗(t))2dt, with units of Joules
squared per meter.
© 2007 by Taylor & Francis Group, LLC

150
Feedback Control of Dynamic Bipedal Robot Locomotion
t (sec)
(rad)
(a) q1 and q2 versus time.
3
2
1
0
2
4
2
0
t (sec)
(rad/sec)
(b) ˙q1 and ˙q2 versus time.
t (sec)
u (Nm)
(c) Hip torque versus time.
t (sec)
F N
1 (N)
(d) Stance leg end normal force versus
time.
t (sec)
F T
1 /F N
1
(e) Stance leg end force ratio versus time.
The coeﬃcient of static friction is as-
sumed to be 0.6.
t (sec)
pv
2 (m)
(f) Swing foot height versus time. Note
the foot scuﬃng that is unavoidable with
this simple model.
Figure 6.5.
Plots corresponding to an example two-link walker gait at
0.363 m/s for three steps along a periodic orbit. The discontinuities are due
to impacts and coordinate relabeling. Plots corresponding to q2 are dashed.
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Within-Stride Feedback Controllers for Walking
151
0 m
1 m
Figure 6.6. Stick animation of two-link walker taking three steps from left
to right. The stance leg is dotted.
an exponentially stable periodic orbit while approximately minimizing a given
cost function and satisfying a set of physically and mathematically motivated
constraints along the periodic orbit.
A solution to the optimization problem may be sought on the full hybrid
model (6.1), but it is computationally expensive, and increasingly so as the
degree of the B´ezier polynomials in the virtual constraints or the number of
links in the model becomes large. However, if the parameters of (6.4) and
(6.10) are chosen to meet the conclusions of Corollary 6.1, then the hybrid
zero dynamics given in (5.60) exists; moreover, the control u∗associated with
motion within the zero dynamics manifold is unique and is given by (5.35).
This allows control eﬀort within the hybrid zero dynamics to be computed
independently of how the outputs corresponding to the virtual constraints are
zeroed. Since periodic orbits of the hybrid zero dynamics are also orbits of
the full-dimensional model, the optimization problem may be posed on the
(two-dimensional) hybrid zero dynamics (5.60) instead of on the full (2N-
dimensional) hybrid model (6.1).
6.3.2.1
Parameter-Dependent Dynamic Model for Optimization
For the convenience of the reader, the key equations used in setting up the
optimization problem are collected in one place. An output of the form
y = hα(q) = H0q −hd,α ◦θ(q)
(6.37a)
θ(q) = cq
(6.37b)
is assumed, with the parameter dependence arising from the B´ezier polyno-
mials used in Section 6.2. The zero dynamics manifold depends on α:
Zα = {x ∈T ˜Q | hα(x) = 0, Lfhα(x) = 0}.
(6.38)
The control enforcing the virtual constraints, which is unique on Zα, is
u∗
α(x) = −(LgLfhα(x))−1L2
fhα(x).
(6.39)
© 2007 by Taylor & Francis Group, LLC

152
Feedback Control of Dynamic Bipedal Robot Locomotion
The hybrid zero dynamics is
Σzero,α :

˙z = fzero,α(z),
z−/∈S ∩Zα
z+ = Δ(z−),
z−∈S ∩Zα,
(6.40)
where,
fzero,α(z) = f(z) + g(z)u∗
α(z) ∈TzZ.
(6.41)
In coordinates z = (ξ1; ξ2) for Zα chosen as in Theorem 5.1, the zero dynamics
have the simple form
˙ξ1 = κ1,α(ξ1)ξ2
(6.42a)
˙ξ2 = κ2,α(ξ1).
(6.42b)
The state x(t) = (q(t); ˙q(t)) of the full-dimensional system (6.1) is easily
reconstructed from (ξ1(t); ξ2(t)) using (5.46a). Substituting x(t) into (6.39)
yields the associated control signal, u∗
α(t) := u∗
α(x(t)).
6.3.3
Cost
In the optimization literature on bipedal gait design, the two most popular
cost functions over a single step are
J1(α) :=
1
ph
2(q−
0 )
 TI(ξ−
2 )
0
||u∗
α(t)||2
2dt
(6.43)
and
J2(α) :=
1
ph
2(q−
0 )
 TI(ξ−
2 )
0
⟨˙q(t), Bu∗
α(t)⟩dt,
(6.44)
where TI(ξ−
2 ) is the step duration, ph
2(q−
0 ) corresponds to step length, u∗
α(t)
is the result of evaluating (6.39) along a solution of the hybrid zero dynamics,
and ⟨a, b⟩:= a′b. The cost (6.43) roughly represents electric motor energy6
per distance traveled, and minimizing this cost function tends to reduce peak
torque demands over a step. The cost (6.44) is the integral of the instanta-
neous mechanical power delivered by the actuators, per distance traveled. In
both cases, the total number of parameters for optimization is (N−1)(Mα−1):
there are Mα −1 free parameters for each output component; see Remark 6.1.
Remark 6.2
A diagonal weighting matrix
W := diag(w1, . . . , wN),
(6.45)
6Torque is roughly proportional to current in a DC motor, and the square of the current is
proportional to electrical power.
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Within-Stride Feedback Controllers for Walking
153
with
wi :=

wi,0,
˙qi(Bu∗
α)i ≤0
wi,1,
˙qi(Bu∗
α)i > 0,
(6.46)
wi,0, wi,1 ̸= 0 for i = 1, . . . , N, is often included in the inner product of (6.44)
so that ⟨·, ·⟩is replaced with
⟨a, b⟩W := a′Wb.
(6.47)
This permits, for example, positive and negative work to be penalized diﬀer-
ently.
6.3.4
Constraints
The constraints will be chosen to ensure, if a solution exists, that the following
are met:
1. the stability conditions (5.79) and (5.80);
2. the gait Hypotheses HGW2, HI3 and HGW6;
3. the output function Hypotheses HH2, HH4, HH5 and HH6; and
4. a desired average walking speed is achieved.
In the examples, how to achieve other desirable gait properties will be illus-
trated. The constraints may be divided into two classes: nonlinear inequality
constraints (NICs) and nonlinear equality constraints (NECs).
Nonlinear inequality constraints:
The following constraints are typi-
cally required: The following three NICs enforce modeling assumptions per
constraints on
NIC1) minimum normal ground reaction force experienced by the stance leg
end,
F N
1 > 0;
(6.48)
NIC2) maximum ratio of tangential to normal ground reaction forces experi-
enced by the stance leg end,
&&&&
F T
1
F N
1
&&&& < μs;
(6.49)
NIC3) swing leg end height to ensure S intersects Z (only) at the end of the
step.
Note that other NICs, such as a constraint on minimum hip height, maximum
swing leg deﬂections, etc., are in general required to achieve a desired walking
“style.”
© 2007 by Taylor & Francis Group, LLC

154
Feedback Control of Dynamic Bipedal Robot Locomotion
Nonlinear equality constraints:
There are ﬁve natural NECs that en-
force:
NEC1) the average walking rate, ¯ν, deﬁned as step length divided by step
duration
¯ν := ph
2(q−
0 )
TI(ξ−
2 );
(6.50)
NEC2) the vertical component of the post-impact swing-leg velocity is posi-
tive;
NEC3) the validity of the impact of the swing leg end with the walking surface;
NEC4) the existence of a ﬁxed point, ζ∗
2 > V MAX
zero /δ2
zero; and
NEC5) the stability of the ﬁxed point, 0 < δ2
zero < 1.
In this generic form, the parameter optimization problem may be solved
with any number of the numerical optimization tools available. For the work
reported in this book, the optimization problem was solved with MATLAB’s
constrained nonlinear optimization tool fmincon with the hybrid zero dynam-
ics implemented in C as a MATLAB mex function.
It is important to emphasize that the use of the hybrid zero dynamics
greatly reduces the computational cost of evaluating the cost function (6.43)
or (6.44). Moreover, stability of the closed-loop system may be included as
a simple optimization constraint. After optimization, Hypothesis HH2, the
invertibility of the decoupling matrix, must be checked.
This condition is
essentially guaranteed whenever J(α) is ﬁnite, since singularities in LgLfh
will normally result in u∗taking on unbounded values. A method for explicitly
computing, if it exists, a simply connected, open set about the periodic orbit
where the decoupling matrix is invertible, is given in [176]. An analytical
investigation of this question is given in Section 6.4.
6.3.5
The Optimization Problem in Mayer Form
The optimization problem may also be expressed in Mayer form [15, p. 332]
as
˙ξ1 = κ1,α(ξ1)ξ2
(6.51a)
˙ξ2 = κ2,α(ξ1)
(6.51b)
˙ξ3 = ˙J(ξ1, ξ2, α)
(6.51c)
where
˙J is the time derivative of the cost.
The Mayer form is useful in
parameter optimization algorithms that construct an approximate solution
to a parameterized set of ﬁrst order diﬀerential equations such that a static
function of the state is minimized. Appending the cost as a state enables the
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Within-Stride Feedback Controllers for Walking
155
cost calculation and solution approximation to be performed with the same
algorithm. The cost function (6.43), for example, may be appended as
˙J1(ξ1, ξ2, α) :=
1
ph
2(q−
0 ) ||u∗
α(ξ1, ξ2)||2
2
(6.52)
so that
ξ3(t) =
1
ph
2(q−
0 )
 t
0
||u∗
α(t)||2
2 dt.
(6.53)
Posing the problem in Mayer form requires another class of constraints, ex-
plicit boundary constraints (EBCs), that ﬁx the initial or ﬁnal state. The
following EBCs are required.
Explicit boundary constraints:
Let ζ∗
2 be the ﬁxed point of Poincar´e
return map of the hybrid zero dynamics, as deﬁned in (5.77).
Let γ∗:=
±
+
2ζ∗
2, where the sign is chosen depending on the assumed angle convention,7
and, based on (5.63), compute
˙q∗:= ¯λ ˙qγ∗=

∂h
∂q (q−
0 )
γ0(q−
0 )
−1 
0
1

γ∗,
(6.54)
where q−
0 is the solution of [h(q); pv
2(q)] = [0; 0], ph
2(q) > 0. There are ﬁve
EBCs that relate the state of the hybrid zero dynamics at t = 0 and t = TI(ξ−
2 )
to the ﬁxed point
EBC1) ξ1(0) = c Δq q−
0 ;
EBC2) ξ2(0) = γ ◦Δ(q−
0 , ˙q∗);
EBC3) ξ3(0) = 0;
EBC4) ξ1(TI(ξ−
2 )) = c q−
0 ; and
EBC5) ξ2(TI(ξ−
2 )) = γ(q−
0 , ˙q∗).
Note that ξ3(TI(ξ−
2 )) cannot be explicitly given as its calculation requires
knowledge of ξ1 and ξ2 over the entire time interval of optimization. Also
note that without use of the hybrid zero dynamics, the optimization in Mayer
form would have 2N states, the derivative of the cost, and N −1 control
signals to be included in the problem formulation.
Remark 6.3
When the EBC1 and EBC2 hold, EBC4 and EBC5 are equiv-
alent to ζ∗
2 belonging to the domain of deﬁnition of the Poincar´e map; see
(5.76). Hence, an equivalent formulation is to keep EBC1–EBC3 and add one
further inequality condition, namely, δ2
zero ζ∗
2 −V MAX
zero
> 0.
7For example, with a counterclockwise sign convention on angles, the robot has negative
angular momentum when walking from left to right.
© 2007 by Taylor & Francis Group, LLC

156
Feedback Control of Dynamic Bipedal Robot Locomotion
6.4
Further Properties of the Decoupling Matrix and the
Zero Dynamics
6.4.1
Decoupling Matrix Invertibility
A key hypothesis in the development of the control laws given in Theorems 5.4
and 5.5, as well as in the development of the swing phase zero dynamics, is
the invertibility of the decoupling matrix. Since the decoupling matrix can
of course have singularities even at points where the Jacobian of the output,
∂h/∂q, has full row rank,8 an analysis of its invertibility is required. This
turns out to be especially insightful if one further assumption is made on how
the output (6.3) is chosen, namely,
HH6) In (6.4), qb := H0q is a set of body coordinates for the robot and
θ = cq is an absolute angle, that is, it represents the angle of some
point of the body or its center of mass with respect to the inertial
frame. It is further assumed that θ is measured in the clockwise9
direction.
On the basis of HH6, deﬁne a change of coordinates on the conﬁguration
variables by
˜q := Hq =

H0
c

q =:

qb
θ

,
(6.55)
which induces a canonical change of coordinates10 on the velocity variables
per
˙˜q := H ˙q =

H0
c

˙q =:

˙qb
˙θ

.
(6.56)
In these coordinates, the potential energy is
˜V (˜q) = V (q) |q=H−1 ˜q .
(6.57)
The inertia matrix becomes
˜D(˜q) =

H−1′ D(q)H−1&&&
q=H−1 ˜q ;
(6.58)
8First note that LgLf h = ∂h/∂q D−1B. Although D−1B has full column rank (since D(q)
is positive deﬁnite and B is a constant, full column rank matrix), application of Sylvester’s
inequality [40, p. 31] shows that the rank of LgLf h is strictly greater than N −2, not N −1.
9The consequences of clockwise versus counterclockwise are summarized in Proposition B.8
and Proposition B.10.
10See Appendix B.4.10 for the deﬁnition of a canonical change of coordinates.
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Within-Stride Feedback Controllers for Walking
157
moreover, θ is cyclic11 and hence
˜D(˜q) = ˜D(qb).
(6.59)
Finally, the output (6.3) becomes
y = h(˜q) := qb −hd(θ).
(6.60)
Expressing the swing phase model in the MPFL-normal form on the basis
of the coordinates ˜q = (qb; θ) then gives
¨qb = v
˙θ =
¯σN
˜dN,N(qb) −˜Jnorm(qb) ˙qb
˙¯σN = −∂˜V
∂θ (qb, θ),
(6.61)
where
˜Jnorm(qb) =
1
˜dN,N(qb)

˜dN,1(qb), · · · , ˜dN,N−1(qb)

,
(6.62)
˜dj,k is the j −k-element of ˜D, and ¯σN is the generalized momentum conjugate
to ˜qN = θ. Taking ˜x := (qb; θ; ˙qb; ¯σN), the swing phase model is expressed in
state variable form as
˙˜x =
⎡
⎢⎢⎢⎢⎣
˙qb
¯σN
˜dN,N(qb) −˜Jnorm(qb) ˙qb
v
−∂˜V
∂θ (qb, θ)
⎤
⎥⎥⎥⎥⎦
(6.63)
=: ˜f(˜x) + ˜g(˜x)v.
(6.64)
A simple calculation12 then gives that the decoupling matrix for the output
(6.60) is
L˜gL ˜
fh(˜q) = I(N−1)×(N−1) + ∂hd(θ)
∂θ
  
(N−1)×1
˜Jnorm(qb)



1×(N−1)
.
(6.65)
11See Proposition B.9, part (d).
12The easiest way to obtain this is to compute the second derivative of the output, using
(6.61), and then to recognize that the matrix multiplying v is the decoupling matrix.
© 2007 by Taylor & Francis Group, LLC

158
Feedback Control of Dynamic Bipedal Robot Locomotion
Proposition 6.1 (Decoupling Matrix Properties)
(a) det(L˜gL ˜
fh)(˜q) = 1 + ˜Jnorm(qb) ∂hd(θ)
∂θ
and is nonzero if, and only if
˜dN,N(qb) +
 ˜dN,1(qb), · · · , ˜dN,(N−1)(qb)
 ∂hd(θ)
∂θ
̸= 0.
(6.66)
(b) At all points where the determinant of the decoupling matrix is nonzero,
the inverse of the decoupling matrix is

L˜gL ˜
fh(˜q)
−1
= I(N−1)×(N−1) +
1
det(L˜gL ˜
fh)(˜q)
∂hd(θ)
∂θ
˜Jnorm(qb).
(6.67)
(c) The inverse of the decoupling matrix can be equivalently written as

L˜gL ˜
fh(˜q)
−1
= I(N−1)×(N−1)
+

1
˜dN,N(qb) +
 ˜dN,1(qb), · · · , ˜dN,(N−1)(qb)
 ∂hd(θ)
∂θ

∂hd(θ)
∂θ
 ˜dN,1(qb), · · · , ˜dN,(N−1)(qb)

.
(6.68)
(d) Let LgLfh be the decoupling matrix of (6.2) and (6.3). Then LgLfh is
invertible at q if, and only if, L˜gL ˜
fh is invertible at ˜q = Hq.
Remark 6.4
Note that from (6.61) and (6.60), it follows that
L2
˜fh(˜q, ˙˜q) = −∂hd(θ)
∂θ
¨θ
&&&&
v=0
−∂2hd(θ)
∂θ2
˙θ2,
(6.69)
where
˙θ =
¯σN
˜dN,N(qb)
−˜Jnorm(qb) ˙qb
(6.70a)
¨θ
&&&
v=0 = −
1
˜dN,N(qb)
∂˜V
∂θ (qb, θ)
−
¯σN
˜d2
N,N(qb)
∂˜dN,N(qb)
∂qb
˙qb −∂˜Jnorm(qb) ˙qb
∂qb
˙qb.
(6.70b)
© 2007 by Taylor & Francis Group, LLC
The proof is given in Appendix C.3.1.

Systematic Design of Within-Stride Feedback Controllers for Walking
159
6.4.2
Computing Terms in the Hybrid Zero Dynamics
Attention is now turned to the zero dynamics. In the coordinates (qb; θ; ˙qb; ˙θ),
the zero dynamics manifold can be written as
Z :=
,
(qb; θ; ˙qb; ˙θ)
&&&& qb = hd(θ), ˙qb = ∂hd(θ)
∂θ
˙θ
-
.
(6.71)
On Z, the generalized momentum conjugate to θ becomes
¯σN = I(θ) ˙θ,
(6.72)
where the virtual inertia I(θ) is given by
I(θ) :=
$
˜dN,N(qb) +
 ˜dN,1(qb), · · · , ˜dN,(N−1)(qb)
 ∂hd(θ)
∂θ
%&&&&
qb=hd(θ)
. (6.73)
From (a) of Proposition 6.1, on Z, there is a bijective relationship13 between
¯σN and ˙θ if, and only if, the decoupling matrix is invertible on Z, in which
case one has
˙θ = ¯σN
I(θ).
(6.74)
The same conclusion can reached by starting with the second line of (6.61)
and seeking to solve for ˙θ in terms of ¯σN after substituting in ˙qb = ∂hd(θ)
∂θ
˙θ.
Restricting the last line of (6.61) to Z,
˙¯σN = −∂˜V
∂θ (qb, θ)
&&&&&
qb=hd(θ)
.
(6.75)
The potential energy is given by ˜V (qb, θ) = mtotg0pv
cm(qb, θ). From Proposi-
tion B.10, ∂pv
cm
∂θ
= −ph
cm, and thus
˙¯σN = mtotg0ph
cm(qb, θ)
&&
qb=hd(θ) .
(6.76)
Identifying ξ1 with θ and ξ2 with ¯σN, it follows that
κ1(ξ1) =
1
I(ξ1)
(6.77a)
κ2(ξ1) = mtotg0ph
cm(hd(ξ1), ξ1).
(6.77b)
It is emphasized that these terms can be determined directly from the La-
grangian of the swing phase model and the term hd of the virtual constraints.
13Comparing (6.73) to (6.66), it follows that on Z, the decoupling matrix is invertible if,
and only if, I(θ) ̸= 0.
© 2007 by Taylor & Francis Group, LLC

160
Feedback Control of Dynamic Bipedal Robot Locomotion
In particular, there is no need to invert the inertia matrix, as would be re-
quired if the zero dynamics were computed as the restriction of f + gu∗to Z,
with f and g as in (6.2).
Turning to the impact map on the zero dynamics manifold, δzero, Hypothesis
HH6 gives that ¯σN = σ1, the angular momentum of the robot about the stance
leg end. Recalling (3.36), it follows that
ξ+
2 = ξ−
2 + Lsmtot ˙pv−
cm.
(6.78)
On Z, ˙pv
cm can be expressed in the form
˙pv
cm = λv(ξ1)ξ2,
(6.79)
which then yields
ξ+
2 = ξ−
2 + Lsmtotλv(ξ−
1 )ξ−
2
=

1 + Lsmtotλv(ξ−
1 )

ξ−
2 ,
(6.80)
and therefore,
δzero = 1 + Lsmtotλv(ξ−
1 ).
(6.81)
Hence, an analytical expression for the impact map Δ of the full-dimensional
model is not needed to compute the impact map on the zero dynamics.
Finally, the control u∗that zeros the virtual constraints can be computed
as well without inverting the inertia matrix. Let v∗denote the equivalent of
u∗for the system written in MPFL-normal form, as in (6.61). Then part (d)
of Proposition 6.1 and Remark 6.4 establishes that v∗is easy to compute.
Recalling (3.42), it follows that
u∗= B−1
1 (qb)
 ¯D(qb)v∗+ ¯Ω1(q, ˙q)

,
(6.82)
where the various terms are given in (3.40).
6.4.3
Interpreting the Hybrid Zero Dynamics
A physical interpretation of the necessary and suﬃcient conditions provided
in Corollary 5.1 for the existence of an exponentially stable orbit of the hybrid
zero dynamics involves the essential interplay of kinetic and potential energy
that is taking place throughout a step. Analyzing this helps to understand
the inherent robustness of solutions of the hybrid zero dynamics. Because
the swing phase zero dynamics is Lagrangian, the total energy Kzero + Vzero
is conserved along solutions of the zero dynamics [90]; it follows that energy
may be gained or lost only at impacts. This property is similar to the energy
conservation in the case of an inverted pendulum subject only to gravity.
Assuming that angles are measured positive in the clockwise direction and the
robot is walking left to right, the angular momentum ¯σN is always positive.
In the beginning of the swing phase, the center of mass of the robot is behind
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Within-Stride Feedback Controllers for Walking
161
Vzero(θ) + 1
2(¯σN)2
Vzero(θ−) + 1
2(¯σ∗
N)2
V
o
r
e
z
(θ)
1
2 (¯σ−
N)2
Impact
¯σ+
N = δzero¯σ−
N
1
2 (¯σ+
N)2
Vzero(θ−)
θ
θ+
θ+
θ+
θ−
θ−
θ−
Figure 6.7. A qualitative look at stability through energy. The zero dy-
namics is Lagrangian, and thus throughout the single support phase, the
corresponding total energy Vzero(θ)+ 1
2 ¯σ2
N is constant. At impact, the change
in total energy depends on the angular momentum through δzero¯σ−
N and the
potential energy through Vzero(θ−). The total energy corresponding to the
periodic orbit is Vzero(θ−) + 1
2(¯σ∗
N)2. Convergence to this total energy level
occurs if the angular momentum decreases during impact, namely, δzero < 1.
From the expression for the existence of a periodic orbit, δzero < 1 is equivalent
to Vzero(θ−) < 0.
the support leg end. Thus, by (6.76), gravity initially decreases the angular
momentum of the robot, and Vzero(θ) increases. If the angular momentum is
not large enough, then the angular momentum goes to zero while the center
of mass is still behind the support leg end, and, due to gravity, the robot falls
backward. If the initial angular momentum is suﬃciently large to overcome
the potential energy barrier corresponding to V MAX
zero , the center of mass will
move past the support leg end, inducing the reverse exchange of energy, until
the swing leg impacts the ground, see Fig. 6.7. An impact induces a change
in the total energy in two ways. A constant change of Vzero occurs at impact,
from Vzero(θ−) at the end of the step to Vzero(θ+) at the beginning of the step;
see Fig. 6.7. The angular momentum changes also, through multiplication by
δzero. From this, one can compute an angular momentum just before impact,
¯σ−
N, that results in the conservation of the total energy during the impact, so
that periodicity is enforced. Condition (5.79) stipulates that δzero¯σ−
N must
be large enough to overcome the barrier posed by gravity, V MAX
zero . For the
periodic orbit, the total energy has a constant value Vzero(θ−) + 1
2 (¯σ∗
N)2.
Since the angular momentum is scaled by δzero at impact, the same is true of
the diﬀerence between the angular momentum and its value on the periodic
orbit, given by ¯σN −¯σ∗
N. Thus, if angular momentum decreases at impacts,
then it converges to ¯σ∗
N. Exponential stability is thus ensured by condition
(5.80).
From the above analysis, it follows that once an exponentially stable orbit
© 2007 by Taylor & Francis Group, LLC

162
Feedback Control of Dynamic Bipedal Robot Locomotion
exists for the model of the robot, modeling errors will tend to destroy it only
if they are suﬃciently large to drive the angular momentum of the robot
to zero before its center of mass is above the support leg end. Interpreted
loosely, deliberate forward gaits, that is, gaits with a periodic motion that
has signiﬁcant angular momentum reserve at the point of maximum potential
energy, will be quite robust; modeling error will signiﬁcantly alter the average
walking speed before it destabilizes the robot.
6.5
Designing Exponentially Stable Walking Motions on
the Basis of a Prespeciﬁed Periodic Orbit
This section explains how to design virtual constraints that will realize a
prespeciﬁed, period-one walking gait as a periodic orbit of a hybrid zero dy-
namics. Moreover, it will be shown how to determine a priori if the resulting
HZD controller will exponentially stabilize the orbit or not. It will also be
shown how to systematically modify a given period-one walking gait through
HZD control so as to obtain additional functionality. Illustrations of these
ideas will be given in Section 6.6.3.
6.5.1
Virtual Constraint Design
Let q = (qb; θ) be a set of generalized coordinates for the swing phase model,
where qb are body coordinates and θ is an absolute angle (i.e., it is measured
with respect to the inertial frame). Let q(t), 0 ≤t < T be the time evolution
of the conﬁguration variables q for a periodic solution of (6.1), with period T .
Similarly, let ˙q(t), ¨q(t), Θ(t), ˙Θ(t), ¨Θ(t), and σ1(t) denote the corresponding
time evolutions of ˙q, ¨q, θ, ˙θ, ¨θ, σ1 along the periodic orbit.14 The following
are the key hypotheses:
HO1) q(t) is three-times continuously diﬀerentiable on [0, T ).
HO2) (q(t); ˙q(t)) is a T -periodic solution of (6.1) and is transversal to S.
HO3) Θ(t) is strictly increasing on [0, T ); that is, inft∈[0,T )
˙Θ(t) > 0.
HO4) σ1(t), the angular momentum about the stance leg end, is nonzero
on [0, T ).
Note that by Hypothesis HO3, θ = Θ(t) has a well-deﬁned inverse, t = Θ−1(θ),
and it is three-times continuously diﬀerentiable.
14Because the model is given, knowing q(t), ˙q(t), and ¨q(t) is equivalent to knowing q(t),
˙q(t) and the input.
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Within-Stride Feedback Controllers for Walking
163
Theorem 6.2 (The HZD of a Prespeciﬁed Periodic Orbit)
Consider the model (3.30), satisfying Hypotheses HR1–HR6 on the robot,
HGW1–HGW7 on the robot’s gait, and HI1–HI6 on the impact model. Let
O = {(q(t); ˙q(t)) | 0 ≤t < T } be a periodic orbit satisfying Hypotheses HO1–
HO4, where the conﬁguration variables q = (qb; θ) are expressed as a set of
body coordinates and an absolute angle. Consider an output of the form (6.60)
and deﬁne
hd(θ) := qb(t)|t=Θ−1(θ) .
(6.83)
Then,
1. the hybrid zero dynamics exist for h(q) = qb −hd(θ), and
2. O is a periodic orbit of the hybrid zero dynamics.
3. Moreover, the periodic orbit O is exponentially stable within the hybrid
zero dynamics if, and only if,
lim
t↗T
σ1(0)
σ1(t) < 1.
(6.84)
Given a periodic solution of the model, it is possible to compute directly the
various derivatives of hd that are required for implementing a controller based
on the hybrid zero dynamics, that is, either the feedback given in Theorem 5.4
or Theorem 5.5. See part (d) of Proposition 6.1 and Remark 6.4.
Proposition 6.2 (Constructing Output Function Derivatives from a
Prespeciﬁed Periodic Orbit)
Under the hypotheses of Theorem 6.2,
∂hd
∂θ (θ) = ˙qb(t)
˙Θ(t)
&&&&
t=Θ−1(θ)
(6.85a)
∂2hd
∂θ2 (θ) =
"
¨qb(t)
˙Θ2(t)
−˙qb(t) ¨Θ(t)
˙Θ3(t)
#
t=Θ−1(θ)
.
(6.85b)
Proof
On the periodic orbit y(t) ≡0 by construction of hd. Hence,
0 = qb(t) −hd(θ(t))
(6.86a)
0 = ˙qb(t) −∂hd(θ(t))
∂θ
˙θ(t)
(6.86b)
0 = ¨qb(t) −∂2hd(θ(t))
∂θ2
˙θ(t)2 −∂hd(θ(t))
∂θ
¨θ(t).
(6.86c)
Evaluating (6.86) at t = Θ−1(θ) and solving for the required terms completes
the proof.
© 2007 by Taylor & Francis Group, LLC
The proof is provided in Appendix C.3.2.

164
Feedback Control of Dynamic Bipedal Robot Locomotion
6.5.2
Sample-Based Virtual Constraints and Augmentation
Functions
As a practical matter, it may be impossible to solve for t = Θ−1(θ) in closed
form. Cubic spline interpolation can be used to circumvent this problem, as
well as to improve the eﬃciency of computing the control law u(x).
Proposition 6.3 (Construction of Virtual Constraints from a Sam-
pled Periodic Orbit)
The term hd(θ) and its derivatives can be reproduced with arbitrary accuracy
by sampling the periodic orbit and applying cubic spline interpolation between
sample points.
Proof
First, sample the full-state information associated with the periodic
orbit: q(t), ˙q(t), ¨q(t), Θ(t), ˙Θ(t), ¨Θ(t). Calculate the quantities of Proposi-
tion 6.2 for each unique value of θ. Cubic spline interpolation between sample
points will result in estimates of hd(θ), ∂hd(θ)/∂θ, and ∂2hd(θ)/∂θ2 each
having an accuracy of O(|τ4|), where τ is the distance to the nearest sample
point [63, Ch. 5].
Thus, for a given periodic orbit, the terms in a HZD controller, hd(θ),
∂hd(θ)/∂θ, and ∂2hd(θ)/∂θ2 can be approximated arbitrarily accurately us-
ing sample-based virtual constraints, without a closed-form representation of
hd(θ). For computational eﬃciency, the sampled functions may be precom-
puted and stored in a lookup table. Note that the method of Proposition 6.3
is not equivalent to ﬁtting hd(θ) to a set of splines and then diﬀerentiating
the splines to obtain ∂hd(θ)/∂θ and ∂2hd(θ)/∂θ2. If hd(θ) were interpolated
with an accuracy of O(|τ4|), diﬀerentiation would give an accuracy of O(|τ3|)
for ∂hd(θ)/∂θ and an accuracy of O(|τ2|) for ∂2hd(θ)/∂θ2 [63, Ch. 5]. An
alternative method of approximating hd(θ) would be to regress joint trajecto-
ries against a single polynomial of θ. In practice, the authors have observed
that the use of polynomials of suﬃciently high degree to obtain accurate ﬁts to
joint trajectories often results in poor ﬁts to the derivatives of the trajectories.
On another practical note, it can be interesting to construct a new walking
gait on the basis of a previously computed gait. A constraint augmentation
function is a ﬁnitely parameterized function, such as a B´ezier polynomial, that
provides a means to systematically modify a set of previously computed virtual
constraints, such as the sample-based virtual constraints just described. The
parameters of the augmentation function may be chosen via optimization, as
in Section 6.3. It will be shown in Section 6.6.3.2 how augmentation functions
may be used to transform a passive compass gait into a gait that can be
executed on ﬂat ground, while retaining, as much as possible, the robot’s
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Within-Stride Feedback Controllers for Walking
165
original passive (i.e, unactuated) dynamic behavior.15
Consider once again an output of the form y = qb −hd(θ), and decompose
hd, into
hd(θ) = hd,0(θ) + hd,aug(θ),
(6.87)
where hd,0 is the nominal virtual constraint and hd,aug is an augmentation
function. The function hd,aug will be ﬁnitely parameterized and used to modify
the properties of the nominal motion associated with hd,0.
6.6
Example Controller Designs
Three diﬀerent methods of controller design are illustrated. The ﬁrst method
takes a step back and looks at feedback design without using the hybrid zero
dynamics. A three-link walker is used to show that a more “intuitive” ap-
proach to feedback design may have practical, computational, and analytical
drawbacks.
The second example uses optimization of the hybrid zero dy-
namics to design a controller for a ﬁve-link walker. The last set of examples
illustrates just how easy it is to perform feedback design on the basis of a
given periodic orbit.
6.6.1
Designing Exponentially Stable Walking Motions
without Invariance of the Impact Map
The objective of this section is to present a feedback design that uses many
of the ideas presented in this book, namely, virtual constraints, swing phase
zero dynamics, and restricted Poincar´e maps, but which does not insist upon
invariance of the swing phase zero dynamics manifold under the impact map.
Because a hybrid zero dynamics will not be created, the analysis will have
to be performed on the full-dimensional hybrid model, (6.1). The feedback
design will be explained and illustrated on the three-link walker presented in
Section 3.4.6. The coordinates of Fig. 3.5(a) are assumed, as are the model
parameters given in Table 3.2.
As discussed in Section 3.4.6, in the case of a stiﬀ-legged robot on a ﬂat
surface, the notion of the contact point of the swing leg with the walking sur-
face is physically ambiguous, because, without a knee, and with equal length
legs, the swing leg must scuﬀalong the ground if it remains in the sagittal
plane. McGeer [153,154] has shown with his ballistic walkers, both theoreti-
cally and experimentally, that one can basically ignore the leg clearance issue
for stiﬀ-legged models. He has done this in two ways: in one realization, he
15This result is similar to work in [217], except here the biped will be underactuated as
opposed to fully actuated.
© 2007 by Taylor & Francis Group, LLC

166
Feedback Control of Dynamic Bipedal Robot Locomotion
puts additional small motors on the legs that allow him to push the swing leg
just slightly out of the sagittal plane during the swing phase and to pull the
leg back into the sagittal plane whenever he wishes to initiate contact. The
second way he has done this is to put small (essentially massless) ﬂaps on the
ends of the legs, and to fold up the ﬂap of the swing leg during the swing
phase, and to unfold it whenever he wants to initiate contact. With McGeer’s
ﬁrst method in mind, it is hereafter assumed that contact is initiated when
the angle of the stance leg attains a desired value, θd
1. Hence, the impact
surface is taken as
S := {(θ; ˙θ) ∈T Q | θ1 −θd
1 = 0}.
(6.88)
In order for the swing leg end to be at ground level at the end of the step, it
must be the case that
θ2 = −θ1
(6.89)
at contact. This will be taken care of in the control law design. Finally, in the
impact model, (3.70) and (3.71), it is supposed that the friction coeﬃcient
satisﬁes μs = 2/3. For each of the simulations presented below, it has been
veriﬁed that the impact model is valid, so this point will not be discussed
further.
6.6.1.1
Encoding a Walking Pattern or Choosing What to Control
At its most basic level, walking consists of two things: posture control, that
is, maintaining the torso in a semierect position, and swing leg advancement,
that is, causing the swing leg to come from behind the stance leg, pass it by a
certain amount, and prepare for contact with the ground. This motivates the
direct control of the angles θ3 (describing the torso) and θ2 (describing the
swing leg). On a periodic orbit corresponding to a normal walking motion, it
is clear that the horizontal motion of the hips is monotonically strictly increas-
ing. For the three-link walker, this is equivalent to θ1(t) strictly increasing
over each step of the walking cycle. Thus, for any desired trajectories θ2(t)
and θ3(t) that express (encode) a desired walking pattern for the biped, it is
therefore reasonable to assume that the corresponding trajectory for θ1 has
the property that θ1(t) is strictly monotonic. It follows that θ2(t) and θ3(t)
can each be re-parameterized in terms of θ1. That is, without loss of gener-
ality, it can be supposed that θ3(t) = hd,1(θ1(t)) and θ2(t) = hd,2(θ1(t)), for
some functions hd,1 and hd,2.
The simplest version of posture control is to maintain the angle of the
torso at some constant value, say θd
3, while the simplest version of swing leg
advancement is to command the swing leg to behave as the mirror image of
the stance leg, that is, θ2 = −θ1. Thus the “behavior” of walking can be
“encoded” into the dynamics of the robot by deﬁning outputs
y:=

y1
y2

:=

h1(θ)
h2(θ)

:=

θ3 −hd,1(θ1)
θ2 −hd,2(θ1)

:=

θ3 −θd
3
θ2 + θ1

,
(6.90)
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Within-Stride Feedback Controllers for Walking
167
with the control objective being to drive the outputs to zero. Driving y to
zero will force θ2 and θ3 to converge to known functions of θ1 (here, θd
3, being
a constant, should be viewed as a trivial function of θ1).
6.6.1.2
Controller Design
It is proposed to use a feedback controller of the form speciﬁed in (5.88), (5.92)
and (5.93). The details associated with such a controller are now developed.
As a ﬁrst step, a tedious but otherwise straightforward computation gives
that the decoupling matrix is
LgLfh =
1
det(Ds)

R11 R12
R21 R22

(6.91)
where,
R11 = mr3
4
5
4mr + MH r + MTr −mr(c12)2 + MTlc13

(6.92a)
R12 = mr3
4
 5
4mr + MH r + MTr −mr(c12)2 + 2MTlc12c13
!
(6.92b)
R21 = −mMTlr2
4
(1 + 2c12) (rc13 + l)
(6.92c)
R22 = −MTlr2
4
 
5ml + 4MH l + 4MTl + mrc13 + 2mrc12c13
−4MTl(c13)2 + 2mlc12
!
(6.92d)
det(Ds) = mMTr4l2
4
 5
4m + MH + MT −m(c12)2 −MT(c13)2!
,
(6.92e)
and
cij := cos(θi −θj).
(6.93)
A further tedious computation reveals that the determinant of the decoupling
matrix is zero if, and only if,
−r (rMH + rm + rMT + lMT cos(θ1 −θ3)) = 0.
(6.94)
Thus, the decoupling matrix is invertible for all x ∈T Q as long as
0 < lMT < r(m + MT + MH),
(6.95)
which imposes a very mild constraint on the position of the center of gravity
of the torso of the robot in relation to the length of its legs. The parameter
values in Table 3.2 satisfy this condition.
Next, a controller is designed that drives the output (6.90) to zero in ﬁnite
time. The easiest way to do this is to input-output linearize the swing phase
© 2007 by Taylor & Francis Group, LLC

168
Feedback Control of Dynamic Bipedal Robot Locomotion
dynamics and then impose a desired dynamic response on the outputs. In
preparation for doing this, note that
⎡
⎢⎣
y1
y2
θ1
⎤
⎥⎦= Φ(θ) :=
⎡
⎢⎣
θ3 −θd
3
θ1 + θ2
θ1
⎤
⎥⎦
(6.96)
is a diﬀeomorphism onto its range. With this coordinate transformation, and
upon deﬁning
v := L2
fh + LgLfhu,
(6.97)
the swing phase dynamics can be written in the form

¨y
¨θ1

=

v
ζ0(y, ˙y, θ1, ˙θ1) + ζ1(y, ˙y, θ1, ˙θ1)v

.
(6.98)
The next step is to impose a continuous feedback v = v(y, ˙y) on (6.98) so
that the pair of double integrators ¨y = v is globally ﬁnite-time stabilized. If
this is done in such a way that Hypotheses HC1–HC4 are met, then it follows
that all of the hypotheses of Theorem 4.4 are met [98], leading to a simpliﬁed
stability test.
Let
v := Ψ(y, ˙y) :=
 1
ϵ2 ψα(y1, ϵ ˙y1)
1
ϵ2 ψα(y2, ϵ ˙y2)

,
(6.99)
where
ψα(x1, x2) = −sign(x2)|x2|α −sign(φα(x1, x2))|φα(x1, x2)|
α
2−α
(6.100a)
φα(x1, x2) := x1 +
1
2 −αsign(x2)|x2|2−α,
(6.100b)
and set ϵ = 0.1 and α = 0.9. The parameter ϵ > 0 allows the settling time of
the controller to be adjusted. The controller is then
u(x) := (LgLfh(x))−1 
Ψ(h(x), Lfh(x)) −L2
fh(x)

.
(6.101)
Denote the right-hand side of the swing phase closed-loop system by
fcl(x) := f(x) + g(x)u(x).
(6.102)
The hybrid model of the bipedal robot in closed loop with the controller is
thus:
Σcl :

˙x = fcl(x)
x−̸∈S
x+ = Δ(x−)
x−∈S.
(6.103)
Theorem 4.4 allows the existence and stability of periodic orbits of (6.103) to
be deduced from the solutions of
˙x = fcl(x)
(6.104)
corresponding to a one-dimensional subset of initial conditions.
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Within-Stride Feedback Controllers for Walking
169
6.6.1.3
Checking Existence and Stability of an Orbit
The swing phase zero dynamics manifold (5.5) is computed from (6.98) to be
Z =
.
(θ; ˙θ) ∈T Q | θ3 −θd
3 = 0, θ1 + θ2 = 0, ˙θ3 = 0,
˙θ1 + ˙θ2 = 0, −π < θ1 < π, ˙θ1 ∈R
/
.
(6.105)
The feedback (6.101) renders Z invariant under the closed-loop swing phase
dynamics.
Z is not invariant, however, under the impact map, that is,
Δ(Z ∩S) ̸⊂S. Hence, the hybrid zero dynamics does not exist. The swing
phase zero dynamics (5.36) will not be computed here because it is not needed
directly in the stability analysis.16
In terms of the original coordinates (θ; ˙θ) of the robot,
S ∩Z =
.
(θ; ˙θ) ∈T Q | θ3 = θd
3, θ1 + θ2 = 0, ˙θ3 = 0,
(6.106)
˙θ1 + ˙θ2 = 0, θ1 = θd
1, ˙θ1 ∈R
/
,
(6.107)
a one-dimensional (embedded) submanifold of T Q. To determine if a par-
ticular choice of parameters in the feedback law results in an exponentially
stable walking cycle that is transversal to S, the restricted Poincar´e map,17
ρ : S ∩Z →S ∩Z of Theorem 4.4 is evaluated.
This is conveniently
done as follows.
Deﬁne the insertion map ι : R →S ∩Z by ι( ˙θ−
1 ) :=
(θd
1; −θd
1; θd
3; ˙θ−
1 ; −˙θ−
1 ; 0), where ˙θ−
1 denotes the angular velocity of the stance
leg just before impact. Deﬁne ˆρ := ι−1 ◦ρ ◦ι, which is just a local coordinate
representation of ρ. A straightforward procedure for evaluating ˆρ on the basis
of a simulation model18 of the closed-loop system is now given.
Numerical Procedure to Test for Walking Cycles:
1. For a point ˙θ−
1 > 0, compute x−:= ι( ˙θ−
1 ), the position of the robot just
before impact (the restriction to positive velocities corresponds to the
robot walking from left to right).
2. Apply the impact model to x−, that is, compute x+ := Δ(x−).
3. Use x+ as the initial condition in (6.104), the robot in closed loop with
the controller, and simulate until one of the following happens:
16The swing phase zero dynamics of the three-link walker is computed in [98, Sec. V].
In addition, the relation of the swing phase zero dynamics and the high-gain limit of the
closed-loop hybrid system is analyzed for the controller of (6.97) and (6.99).
17This is really a partial map, with domain spelled out in Section 4.4.3.
18A numerical simulator is used to compute an approximation of ˆρ. Since the feedback
in (6.99) can be uniformly approximated by a Lipschitz continuous function, a standard
numerical integrator can be used to approximately compute ˆρ to any desired degree of
accuracy.
© 2007 by Taylor & Francis Group, LLC

170
Feedback Control of Dynamic Bipedal Robot Locomotion
1.3
1.4
1.5
1.6
1.7
1.8
1.9
2
1.2
1.4
1.6
1.8
2
1.3
1.4
1.5
1.6
1.7
1.8
1.9
2
−0.2
−0.1
0
0.1
0.2
 
˙θ−
1
˙θ−
1
ˆρ
δˆρ
Figure 6.8.
The top graph presents the function ˆρ (bold line) and, for
visualization purposes, the identity function (thin line); the bottom graph
presents the function δˆρ (bold line) and the zero line (thin line). From either
graph, it is seen that there exists a periodic orbit and that it is asymptotically
stable.
(a) there exists a time T > 0 where θ1(T ) = θd
1; if T is greater than
the settling time of the controller (in other words, the output y
is identically zero), then x+ ∈ˆS ∩Z, and ˆρ( ˙θ−
1 ) = ˙θ1(T ); else,
x+ ̸∈ˆS ∩Z, and ˆρ( ˙θ−
1 ) is undeﬁned at this point.
(b) there does not exist a T > 0 such that θ1(T ) = θd
1 (which is nor-
mally detected by one of the angles exceeding ±π/2 during the
simulation); in this case, it is also true that x+ ̸∈ˆS ∩Z, and ˆρ( ˙θ−
1 )
is undeﬁned at this point.
Figure 6.8 depicts the function ˆρ for θd
3 = π/6; it also displays the related
function δˆρ( ˙θ−
1 ) := ˆρ( ˙θ−
1 ) −˙θ−
1 , which represents the change in velocity over
successive cycles, from just before an impact to just before the next one. It is
seen that ˆρ is undeﬁned for ˙θ−
1 less than approximately 1.32 rad/sec (for initial
˙θ−
1 less than this value, the robot falls backward). The plot was truncated
at 2 rad/sec because nothing interesting occurs beyond this point (except an
upper bound on its domain of existence will eventually occur due to the impact
model becoming invalid or the controller not having enough time to settle over
one walking cycle). A ﬁxed point occurs at approximately 1.6 rad/sec, and,
from the graph of ˆρ, it clearly corresponds to an asymptotically stable walking
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Within-Stride Feedback Controllers for Walking
171
-0.4
0
0.4
0
1
2
0
1
2
θ1
˙θ1
˙θ3
Impact Event
Figure 6.9. Projection onto (θ1; ˙θ1; ˙θ3) of a trajectory asymptotically con-
verging to an orbit. Note that the straight portion of the curve is really an
instantaneous transition due to the impact of the swing leg with the ground.
The dot is the initial point.
cycle, whose projection is shown in Fig. 6.9. The corresponding control signals
are given in Fig. 6.10.
To illustrate the role played by the inclination of the torso, suppose that
θd
3 is reduced by half to π/12. Figure 6.11 displays ˆρ and δˆρ for this case.
It is seen that there is no ﬁxed point, and hence no periodic orbit that is
transversal to S.
6.6.1.4
Discussion
The virtual constraints selected in (6.90) have the advantage of being simple
and intuitive. They do not, however, provide very much design freedom. The
only parameter that may be varied is the torso lean angle, which can be
used to vary walking speed to a certain extent, but there is no possibility of
minimizing torque requirements for a given walking speed, for example. For
this reason, [97] considers a set of outputs of the form
y :=

y1
y2

:=

h1(θ, a)
h2(θ, a)

:=

θ3 −hd,1(θ1, a)
θ2 −hd,2(θ1, a)

,
(6.108)
where
hd,1(θ1, a) := a0
1 + · · · + a3
1(θ1)3
(6.109a)
hd,2(θ1, a) := −θ1 + (a0
2 + · · · + a3
2(θ1)3)(θ1 + θd
1)(θ1 −θd
1).
(6.109b)
The rather particular form of hd,2 was arrived at by imposing that hd,2(θd
1, a) =
hd,2(−θd
1, a) = 0, which is the condition needed for the swing leg end to have
© 2007 by Taylor & Francis Group, LLC

172
Feedback Control of Dynamic Bipedal Robot Locomotion
0
0.5
1
1.5
2
2.5
3
3.5
200
100
0
100
200
0
0.5
1
1.5
2
2.5
3
3.5
100
50
0
u1
u2
t
Figure 6.10. Plot of applied torques versus time for a ﬁnite-time feedback
computed on the basis of (6.90); units of Newton-meters.
height zero at impact. The “intuitive” justiﬁcation for this more complicated
output is that (i) keeping the torso at a constant angle does not allow it to
respond “naturally” to the shocks that occur at impact, and (ii) advancing the
swing leg more or less quickly during the stance may improve energy eﬃciency
or reduce peak torque requirements. A cost function of the form
J(a) :=
 T
0

u2
1(t) + u2
2(t)

dt
(6.110)
was deﬁned, where T is such that θ1(T ) −θd
1 = 0 and u(t) is the result of
applying (6.101) to (6.102), with hd as in (6.109), and for an initial condition
x0 ∈Δ(S∩Z) that gives rise to a periodic orbit. A gradient descent algorithm
was used to minimize (6.110), initialized at values of the parameters a for
which the new outputs were equivalent to the original outputs with θd
3 = π/6;
see Table 6.2. As seen from Fig. 6.12, the process of minimizing the integral
of squared torque also fortuitously reduced the peak torque magnitude from
approximately 145 Nm to 85 Nm.
These results indicate that the use of a more complicated, less “intuitive”
set of virtual constraints should be considered. Once the decision is made
to go from (6.90) to (6.109), then it is just a small step further to use y =
h0(q) −hd ◦θ(q) with hd parameterized via B´ezier polynomials, as in (6.3)
and (6.10). There are advantages to taking this last step because it is then
straightforward to choose the coeﬃcients in the virtual constraints in such
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Within-Stride Feedback Controllers for Walking
173
1.4
1.5
1.6
1.7
1.8
1.9
2
1.2
1.4
1.6
1.8
2
1.4
1.5
1.6
1.7
1.8
1.9
2
0.4
0.3
0.2
0.1
0
 
˙θ−
1
˙θ−
1
ˆρ
δˆρ
Figure 6.11.
The top graph presents the function ˆρ (bold line) and, for
visualization purposes, the identity function (thin line); the bottom graph
presents the function δˆρ (bold line) and the zero line (thin line). From either
graph, it is seen that there does not exist a periodic orbit.
a way that the machinery of the hybrid zero dynamics may be employed,
which then provides very signiﬁcant computational advantages when trying
to minimize a cost function over a periodic orbit and very signiﬁcant analytical
advantages as well.
6.6.2
Designs Based on Optimizing the HZD
6.6.2.1
Application: Design of a Gait for RABBIT
This section illustrates how the techniques developed in Section 6.3 may be
applied to the design of controllers that induce stable gaits in a ﬁve-link robot,
RABBIT.
A controller that induces walking at 0.8 m/s is designed and simulated for
the ﬁve-link walker model of Section 3.4.6; see Fig. 6.13. The control design
method of Section 6.3 begins by specifying an output of the form given in
(6.3), namely, y = h0(q) −hd ◦θ(q), with h0(q) and θ(q) as in (6.4). Hence,
the controller design process begins with the choice of (i) the quantities to
be controlled, H0, (ii) the function θ(q) = cq used to parameterize a periodic
orbit (i.e., a walking gait), and (iii) the degree of the B´ezier polynomials, M.
The speciﬁc choice of (iv) the B´ezier polynomial coeﬃcients, α, is accom-
© 2007 by Taylor & Francis Group, LLC

174
Feedback Control of Dynamic Bipedal Robot Locomotion
Table 6.2. Result of optimizing the virtual constraints for minimal energy
consumption.
i
ai
0
ai
1
ai
2
ai
3
J
1
0.523
0
0
0
Original Values
2
0
0
0
0
1,360
1
0.512
0.073
0.035
-0.819
Optimized Values
2
-2.27
3.26
3.11
1.89
761
Figure 6.12. Plot of applied torques versus time for a ﬁnite-time feedback
computed on the basis of (6.109); units of Newton-meters.
plished on the basis of achieving invariance of the induced swing phase zero
dynamics under the impact map per Corollary 6.1 and the minimization of a
cost function along the periodic orbit per Section 6.3.2.
Following Section 6.4, the relative angles of the actuated joints are selected
as the controlled quantities.
In a normal gait, absolute angle of the line
connecting the stance leg end to the hip is strictly monotonic, and this is
taken as θ(q); see Fig. 6.13(b). Hence,
H0 =
I4×4 04×1

(6.111a)
c =
−1 0 −1/2 0 −1
,
(6.111b)
which clearly guarantees that H = [ H0; c ] is invertible, satisfying HH3. The
© 2007 by Taylor & Francis Group, LLC
0
0.5
1
1.5
2
2.5
3
−100
−50
0
0
0.5
1
1.5
2
2.5
3
−60
−40
−20
0
20
u1
u2
t

Systematic Design of Within-Stride Feedback Controllers for Walking
175
q5
q1
q2
−q3
−q4
(a)
θ(q)
(b)
Figure 6.13. Schematic of the prototype RABBIT with measurement con-
ventions.
output is then
y = h0(q) −hd ◦θ(q)
(6.112a)
=
⎡
⎢⎢⎢⎣
q1
q2
q3
q4
⎤
⎥⎥⎥⎦−hd ◦θ(q).
(6.112b)
In light of Remark 6.1, M is chosen to be 6, which leaves ﬁve free parameters
to be chosen for each output.
This implies a total of 20 output function
parameters to be chosen via optimization. For a particular choice of α, HH5
must be checked to ensure smoothness of S ∩Z. This entails evaluating the
rank19 of
∂
∂q
 h(q)
pv
2(q)
&&&&&
x∈S∩Z
=
⎡
⎢⎢⎢⎣
H0 −
M
θ−−θ+ (αM −αM−1) c
∂pv
2(q)
∂q
&&&&
q=q−
0
⎤
⎥⎥⎥⎦,
(6.113)
where pv
2(q) is the height of the swing end. Hypothesis HH2, the invertibility
of the decoupling matrix, is checked for a choice of α through the results
of Section 6.4.
If the optimization constraints are satisﬁed, as detailed in
19See Remark 5.3 on page 125.
© 2007 by Taylor & Francis Group, LLC

176
Feedback Control of Dynamic Bipedal Robot Locomotion
femur
lT
pM
T
u1, u2
(a) Schematic of torso.
torso
lf
lt
pM
f
pM
t
u3, u4
(b) Schematic of leg.
Figure 6.14. Schematic of RABBIT’s link parameter measurement conven-
tions.
Section 6.3, the remaining gait, impact model, and output function hypotheses
will also be satisﬁed.
The optimization problem is posed as described in Section 6.3.2 to choose
the 20 free parameters of α. Three additional nonlinear inequality constraints
are imposed to obtain a human-like gait. The ﬁrst two, when satisﬁed, prevent
the stance and swing leg knees from hyperextending,
NIC4)
q3 < 0,
(6.114)
NIC5)
q4 < 0,
(6.115)
and the third is used to prevent the hip from dropping too low,
NIC6)
pv
H −pv
H,min > 0,
(6.116)
where pv
H,min is the minimum hip height. MATLAB’s constrained nonlinear
optimization tool fmincon was used to approximately minimize the cost J1(α),
(6.43), subject to NIC1–NIC6 and NEC1–NEC5.
Table 6.3 gives RABBIT’s link parameter values as identiﬁed by a group as-
sociated with the project. For the measurement conventions of the parameters
see Fig. 6.14. A discussion of the prototype’s design is given in Section 2.1.
Table 6.4 summarizes the result of optimizing for a desired average walking
rate of 0.8 m/s. From a reasonable initial condition, the optimization took
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Within-Stride Feedback Controllers for Walking
177
Table 6.3. Identiﬁed link parameters for RABBIT.
Model Parameter
Units
Label
Value
MT
12
Mass
kg
Mf
6.8
Mt
3.2
lT
0.63
Length
m
lf
0.4
lt
0.4
IT
1.33
Inertia
kg·m2
If
0.47
It
0.20
pM
T
0.24
Mass center
m
pM
f
0.11
pM
t
0.24
Fv,H
16.5
Viscous friction
Ns
Fv,K
5.48
Fs,H
15.0
Static friction
Nm
Fs,K
8.84
Gear ratio
-
ng
50
Motor rotor inertia
kg·m2
Ia
0.83
approximately 1 min on a PC based computer with a 2 GHz Pentium IV
processor. The walking motion is exponentially stable since
δ2
zero
1 −δ2zero
Vzero(θ−) + V MAX
zero
= −224 < 0
(6.117)
and 0 < δ2
zero < 1 per Corollary 5.1. This controller was initialized on S ∩Z
at the ﬁxed point and simulated for three steps.
Figure 6.15 is a stick ﬁgure animation of the result. The walking motion
appears quite natural. Figure 6.16 gives the joint trajectories. Figures 6.17(a)
and 6.17(b) are the motor torques for the hip and knees. Of the four associated
torques, the peak torque occurs at the stance leg hip and is approximately
Table 6.4. Example gait statistics for RABBIT.
J(α)
ζ∗
2
Vzero(θ−)
V MAX
zero
¯ν
(N2m)
(kgm2/s)2
δ2
zero
(kgm2/s)2
(kgm2/s)2
(m/s)
91.0
549
0.741
−142
182
0.800
© 2007 by Taylor & Francis Group, LLC

178
Feedback Control of Dynamic Bipedal Robot Locomotion
0 m
1 m
Figure 6.15. Stick animation of a simulation of RABBIT taking three steps.
Note that walking is from left to right and that the stance leg is dotted.
64 Nm. Figures 6.17(c) and 6.17(d) are plots of the motor speed versus torque
requirements for one step of the walking motion. Note that the requirements
for this motion are well below the manufacturer’s limits indicated by the
shaded region. Figures 6.18(a) and 6.18(b) are normal and tangential ground
reaction forces. Figure 6.18(c) is a plot of their ratio. Note that the ratio
F T
1 /F N
1 is substantially below the assumed static friction limit, μs = 0.6. The
trajectory of the swing leg end height is given in Fig. 6.18(d).
6.6.3
Designs Based on Sampled Virtual Constraints and
Augmentation Functions
This section uses the two-link walker to illustrate some of the ﬂexibility avail-
able when designing controllers on the basis of virtual constraints and the
hybrid zero dynamics. In the ﬁrst example, a periodic torque is found that
creates a periodic walking motion. On the basis of this motion, the corre-
sponding virtual constraints and feedback controller are found that realize
this gait on the biped, illustrating the considerable range of motions that can
be achieved using these methods. In the second example, a passive walking
motion on a slope is ﬁrst found and then a feedback controller is designed that
signiﬁcantly increases the basin of attraction of the passive motion. Contin-
uing with the example, starting from the same passive motion, a feedback
controller is found that allows the robot to walk on ﬂat ground, and even up
a slight incline, further illustrating the range of motions that can be achieved
using virtual constraints and hybrid zero dynamics.
6.6.3.1
Application: The design of a Gait via Torque Speciﬁcation
This example applies the method of Section 6.5 to design a virtual constraint
that can achieve, with arbitrary accuracy, a periodic walking motion found by
direct optimization of the steady-state torque proﬁle. In the ﬁrst part of the
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Within-Stride Feedback Controllers for Walking
179
example, a periodic walking motion is computed. A set of virtual constraints
that implement this walking motion are calculated in the second part of the
example. With this approach, the joint motions of the robot are not limited
to those achievable through a set of ﬁnitely-parameterized functions. Instead,
they asymptotically converge to their values on the limit cycle speciﬁed by a
torque proﬁle.
Consider again the two-link walking model of Section 3.4.6.1 with parame-
ters given in Table 3.1 and assume that the robot is walking on level ground,
so that α = 0. A family of steady-state torque proﬁles is selected to have the
form
u(t) = A cos
2π
T

(t −t+) + φ

,
(6.118)
where A, T , and φ are to be chosen and t+ is the time of the most recent
initialization of the stance phase. To specify a walking motion, the model’s
initial condition x0 and values for the parameters A, T , and φ must be found
such that the corresponding trajectory is a periodic solution of the hybrid
model, (6.1). Using numerical optimization, valid parameters for the torque
proﬁle were found to be A = 0.445, T = 0.728, φ = −1.22, and the initial
condition of the model was x0 = (−0.356; −0.178; 0.135; 0.756).
To determine virtual constraints for implementing this torque-speciﬁed walk-
ing gait, the periodic orbit is densely sampled to obtain the output function
and its derivatives per Proposition 6.3; the results are depicted in Fig. 6.19.
A plot of the virtual inertia, I(θ), is also given in Fig. 6.19; because the
virtual inertia does not vanish, the decoupling matrix is nonsingular on the
periodic orbit. Figure 6.20 illustrates the response of the closed-loop system
to a perturbation in the initial condition oﬀthe periodic orbit. As the robot
approaches steady state, the controller’s torque converges to the sinusoidal
torque proﬁle, (6.118), of the periodic walking motion used to design the
virtual constraints.
6.6.3.2
Application: Making Passive Bipedal Gaits More Robust
Next, two examples are used to illustrate how the feedback control designs of
Section 6.5 can be used to achieve a stable periodic walking motion that is
based on a passive gait. Before presenting the examples, a few remarks on
passive bipedal walking are given.
Passive walking:
A passive bipedal walker is mechanism that is capable of
walking (stably) down a slope without active feedback control and with grav-
ity as the sole energy source.20 Since McGeer ﬁrst simulated and built such
a mechanism in the 1980s [153], passive bipedal walkers have been objects of
20The energetic cost of passive dynamic walking is, in fact, nonzero—because work must
be done to lift the mechanism to the top of the slope!
© 2007 by Taylor & Francis Group, LLC

180
Feedback Control of Dynamic Bipedal Robot Locomotion
substantial interest, primarily as a point of departure for building energeti-
cally eﬃcient, powered bipedal robots [58]. Passive walkers, however, have
two fundamentally limiting features. The ﬁrst limitation is that the basins of
attraction associated with their orbits are small—meaning the robots are eas-
ily toppled. The second limitation is their very limited repertoire of walking
motions: the features of their gaits can only be modiﬁed by redesigning the
robot or by changing the ground slope.
Actuation, sensing and feedback can remedy both of these shortcomings
[217].
Ideal actuation21 and feedback control can be used to increase the
basin of attraction of a walking gait and to change other characteristics, such
as the minimum or maximum slope on which the biped is able to walk.22
Assuming full actuation, the work of [217] shows how to design a controller
that allows a robot to execute on ﬂat ground any of its stable and passive
walking motions arising from walking on a sloped surface. A result is given
here that is similar—but conceptually stronger—because the use of the hybrid
zero dynamics removes the need for full actuation.
The remainder of the section is organized into two examples. In the ﬁrst
example, a sample-based HZD controller is designed that increases the robust-
ness of a passive gait and is such that control eﬀort is used only to increase
the region of attraction of the nominal motion—no control eﬀort is required
in steady state.23 The example is concluded with an illustration of the robust-
ness of the controller to external force perturbations and parameter variations.
The second example illustrates how various features of an existing gait can be
modiﬁed through sample-based HZD control and an augmentation function.
Enlarging the Basin of Attraction of a Stable, Passive Gait of a
Two-Link Biped:
Consider the two-link biped of Fig. 3.4, with mechanical
parameters given in Table 3.1. A passive periodic walking motion was found
for a ground slope of 0.02 rad (1.15 deg) and a maximum coeﬃcient of static
friction at the stance leg end of 0.6. The basin of attraction of the walking
motion is depicted in Fig. 6.21.
21Here, the term “ideal actuator” is used to indicate a torque source with no power losses,
zero mass, and zero inertia. The addition of nonideal actuation typically results in the loss
of all stable, passive gaits. This is because the usual means of powering a biped is with
actuators that are collocated with the biped’s joints, connected through a lossy drive train
(typically, gears). An example where passive gaits are not lost is Collins’s quasi-passive 3D
biped [58], which is powered through impulsive foot action. The loss of stable passive gaits
does not preclude the use of energy eﬃciency as a performance metric when evaluating
walking at a given rate, walking on ﬂat ground, or walking with increased robustness.
22Although stable gaits exist for arbitrarily small downward slopes, the basins of attractions
of such gaits become impractically small [85].
23When using nonideal actuators, zero control eﬀort is achieved only in the sense that the
actuator performs no mechanical work on the system. With electric motors, for example,
electrical energy will be consumed to compensate for friction and rotor inertia.
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Within-Stride Feedback Controllers for Walking
181
Following the method suggested in Section 6.5, a sample-based virtual con-
straint of the form
y = q1 −hd(θ),
(6.119a)
θ = q2,
(6.119b)
was designed on the basis of the passive orbit for a slope of 0.02 rad. The
corresponding controller was realized with input-output linearization, as in
(5.96), with KP = 200 and KD = 25. The basin of attraction of the biped in
closed loop with this controller is given in Fig. 6.21. It is observed that the
basin of attraction of the controlled walker is signiﬁcantly larger than that of
the passive walker, but it does not fully contain it: the basin of attraction of
the controlled walker does not include a small region in the upper left of the
graph, corresponding to extreme combinations of velocity and position.
The closed-loop system was simulated for thirty steps with an initial condi-
tion x0 = x0,nom +δx0, where x0,nom is the state of the biped at the beginning
of the step on the periodic orbit of the passive gait and δx0 = (0.2; 0.1; −1; 0).
Figure 6.22 gives the evolution of the applied control torque u. Note that the
peak control eﬀort is relatively small and that the control eﬀort goes to zero
as the state approaches the passive orbit.
An interesting observation for this example is that increasing the controller
gains KP and KD may result in a smaller basin of attraction. This eﬀect
is more pronounced when increasing KD, as illustrated in Fig. 6.23. Larger
controller gains result in larger transient control signals, and, potentially,
larger ground reaction force magnitudes. The former may result in actuator
saturation, and the latter may result in the coeﬃcient of static friction being
exceeded.
As a test of robustness, the closed-loop system with feedback gains KP =
200 and KD = 25 was simulated for horizontal, aperiodic forces acting on
the robot’s hip and swing leg end and mismatch between the model and
controller in leg mass, m, and leg inertia, I. Between 4.6 and 4.75 seconds, a
horizonal force of 15 Nm acted at the hips opposite to the direction of forward
progression, and between 6.1 and 6.3 seconds, a horizontal force of 9.25 Nm
acted at the swing leg end, also opposing the direction of motion. The design
model for the controller used values for the leg mass and leg inertia set to
80% and 120% of nominal, respectively, of the parameters given in Table 3.1.
The resulting joint angles, joint velocities, and joint torque are depicted in
Fig. 6.24. Because of the parameter mismatch, the steady-state control eﬀort
is no longer zero. It is seen that rather modest control eﬀort is required to
reject the force perturbations.
Changing the minimum slope capability of a motion:
For the closed-
loop robot of the previous example, a numerical search was performed to ﬁnd
the minimum ground slope on which the robot was able to walk stably. The
minimum slope was found to be 0.0171 rad (0.980 deg). A new output of the
© 2007 by Taylor & Francis Group, LLC

182
Feedback Control of Dynamic Bipedal Robot Locomotion
form y = q1 −hd(θ), θ = q2, is proposed where hd is decomposed into
hd(θ) = hd,0(θ) + hd,aug(θ),
(6.120)
with hd,0 the nominal virtual constraint of Fig. 6.19 and hd,aug, the augmen-
tation function, parameterized with a degree-seven B´ezier polynomial. The
function hd,aug is used to modify the properties of the nominal motion asso-
ciated with hd,0.
The numerical optimization approach of Section 6.3 was applied to deter-
mine the augmentation function, with the ground slope in the model set to
zero so that the closed-loop system would be capable of walking on ﬂat ground.
This yielded the new hd(θ) depicted in Fig. 6.25. The new closed-loop system
was simulated on zero slope, for an initial condition x0 = x0,nom + δx0, where
x0,nom is the state of the biped at the beginning of a step on the (passive) peri-
odic orbit for the nominal slope (α = 0.02 rad) and δx0 = (0.025; 0.0125; 3; 0).
Figure 6.26 gives the evolution of the applied torque, u. Note that peak con-
trol eﬀort is relatively small. Through numerical simulation, it was found that
the robot under this feedback controller was in fact capable of walking on a
slope of −0.01 rad (−0.523 deg), that is, uphill.
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Within-Stride Feedback Controllers for Walking
183
0
0.5
1
1.5
3
3.2
3.4
3.6
t (sec)
(rad)
(a) q1 and q2 versus time.
0.6
0.5
0.4
0.3
0
0.5
1
1.5
t (sec)
(rad)
(b) q3 and q4 versus time.
0.02
0.04
0.06
0.08
0
0.5
1
1.5
t (sec)
(rad)
(c) q5 versus time.
2
1
0
1
2
0
0.5
1
1.5
t (sec)
(rad/sec)
(d) ˙q1 and ˙q2 versus time.
2
1
0
1
2
0
0.5
1
1.5
t (sec)
(rad/sec)
(e) ˙q3 and ˙q4 versus time.
0.6
0.4
0.2
0
0.2
0.4
0
0.5
1
1.5
t (sec)
(rad/sec)
(f) ˙q5 versus time.
Figure 6.16.
State trajectory plots corresponding to a simulated gait of
RABBIT. Three steps are taken at an average walking rate of 0.8 m/s each
step. The discontinuities are due to impacts and coordinate relabeling. Plots
associated with q2 and q4 are dashed.
© 2007 by Taylor & Francis Group, LLC

184
Feedback Control of Dynamic Bipedal Robot Locomotion
50
0
50
0
0.5
1
1.5
t (sec)
(Nm)
(a) u1 and u2 versus time.
50
0
50
0
0.5
1
1.5
t (sec)
(Nm)
(b) u3 and u4 versus time.
0
1
2
3
0
1000
2000
3000
4000
(Nm)
(rev/min)
(c) Hip motor rotor speed versus torque
output at motor shaft.
0
1
2
3
0
1000
2000
3000
4000
(Nm)
(rev/min)
(d) Knee
motor
rotor
speed
versus
torque output at motor shaft.
Figure 6.17. Commanded control signals corresponding to a simulated gait
of RABBIT. Three steps are taken at an average walking rate of 0.8 m/s each
step. The discontinuities are due to impacts and coordinate relabeling. Plots
associated with u2 and u4, the joint torques of the swing leg, are dashed.
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Within-Stride Feedback Controllers for Walking
185
300
350
400
0
0.5
1
1.5
t (sec)
(N)
(a) F N
1 versus time.
40
20
0
20
0
0.5
1
1.5
t (sec)
(N)
(b) F T
1 versus time.
0.1
0.05
0
0.05
0.1
0
0.5
1
1.5
t (sec)
(c) F T
1 /F N
1 versus time.
0
0.01
0.02
0.03
0
0.5
1
1.5
t (sec)
(m)
(d) pv
2 versus time.
Figure 6.18. Additional plots corresponding to a simulated gait of RABBIT.
Three steps are taken at an average walking rate of 0.8 m/s each step. The
discontinuities are due to impacts and coordinate relabeling.
© 2007 by Taylor & Francis Group, LLC

186
Feedback Control of Dynamic Bipedal Robot Locomotion
0.15
0.1
0.05
0
0.05
0.1
0.15
2
0
2
4
1
1.2
1.4
I(θ)
hd(θ)
∂hd
∂θ (θ)
1
10
∂2hd
∂θ2 (θ)
θ
Figure 6.19. The top graph veriﬁes that the decoupling matrix is nonsin-
gular along the periodic orbit, as indicated by the virtual inertia I(θ) being
bounded away from zero. The bottom graph displays the sample-based vir-
tual constraint given in Theorem 6.2 and and its derivatives given in Propo-
sition 6.2.
0
5
10
0
0.2 0.4
−3
−2
−1
0
1
(Nm)
t (sec)
Figure 6.20. Torque evolution for a simulation of twenty (20) steps on level
ground for the torque speciﬁed gait designed in Section 6.6.3.1. Torque evolu-
tion over ﬁrst step is left and the torque evolution over all steps is right. The
initial error is δx0 = (0.025; 0.0125; 3; 0). Note that the torque requirements
converge rapidly to the steady-state sinusoidal proﬁle.
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Within-Stride Feedback Controllers for Walking
187
δq1 (rad)
δ ˙q1 (rad/sec)
Figure 6.21. Two-dimensional slices of the basin of attraction when walking
on a 0.02 rad slope. The basin for the passive walker is dark gray and the
basin for the controlled walker is light gray. Shown in medium gray is the
basin of attraction for the controlled walker when a peak torque magnitude
of 3 Nm is imposed by saturating the output of the control law. In all cases,
the coeﬃcient of static friction at the stance leg end is assumed to be 0.6 and
δ ˙q2 = 0. Other slices of the basins of attraction for δ ˙q2 ̸= 0 are similarly
proportioned. The initial conditions used to generate Fig. 6.22 are indicated
with a 1 and those used to generate Fig. 6.24 are indicated with a 2.
0
10
20
0
0.2 0.4
−0.5
0
0.5
1
1.5
(Nm)
t (sec)
Figure 6.22. Torque evolution for a simulation of thirty (30) steps on a
ground slope of α = 0.02 rad using a sample-based HZD controller. Torque
evolution over ﬁrst step is left and the torque evolution over all steps is right.
Note that the applied torque approaches zero as the state converges to the
limit cycle. The peak torque is 1.6 Nm.
© 2007 by Taylor & Francis Group, LLC

188
Feedback Control of Dynamic Bipedal Robot Locomotion
δq1 (rad)
δ ˙q1 (rad/sec)
Figure 6.23.
Two-dimensional slices of the basin of attraction for three
diﬀerent sets of controller gains, when walking on a 0.02 rad slope. The basin
for the passive walker is dark gray. The basin with KP = 200 and KD = 25
is outlined with a dashed line, the basin with KP = 700 and KD = 25 is light
gray, and the basin with KP = 500 and KD = 75 is medium gray. In all
cases, a torque limit of 3 Nm is assumed, the coeﬃcient of static friction at
the stance leg end of is 0.6, and δ ˙q2 = 0.
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Within-Stride Feedback Controllers for Walking
189
−0.5
0
0.5
0
1
2
0
5
10
15
−0.2
0
0.2
q (rad)
˙q (rad/sec)
u (Nm)
t (sec)
Figure 6.24. Plots illustrating the eﬀect of perturbations. Curves corre-
sponding to q1 and q2 are solid and dashed, respectively.
−0.2
−0.1
0
0.1
0.2
−0.8
−0.4
0
0.4
θ (rad)
hd(θ) (rad)
Figure 6.25. Passive motion (bold line) and augmented passive motion (thin
line) as a function of θ. Enforcement of the augmented motion results in a
closed-loop system that is capable of walking on ﬂat ground.
© 2007 by Taylor & Francis Group, LLC

190
Feedback Control of Dynamic Bipedal Robot Locomotion
0
10
20
0
0.5
−2
−1.5
−1
−0.5
0
0.5
(Nm)
t (sec)
Figure 6.26. Torque evolution for a simulation of thirty (30) steps on zero
slope using a sample-based HZD controller. Torque evolution over ﬁrst step
is left and the torque evolution over all steps is right. The peak torque is
−2.0 Nm.
© 2007 by Taylor & Francis Group, LLC

7
Systematic Design of Event-Based Feedback
Controllers for Walking
The previous chapter has addressed the problem of designing controllers that
induce exponentially stable, periodic walking motions at a given ﬁxed rate
for a planar, bipedal robot with one degree of underactuation in single sup-
port. This chapter provides two additional control features: (i) the ability
to serially compose such controllers in order to obtain walking at several dis-
crete walking rates with guaranteed stability during the transitions and (ii)
the ability to regulate the robot’s average walking rate to a continuum of val-
ues, while rejecting modest disturbances. Taken together, these two features
aﬀord the construction of a feedback controller that takes the robot from a
standing position, through a range of walking rates, and back to a standing
position, while providing local stabilization and disturbance rejection. The
key technical tool is the Poincar´e map of the closed-loop robot model.
The method used here for serially composing two controllers is motivated by
a switching idea presented in [30]: controllers were ﬁrst designed to accomplish
the individual tasks of juggling, catching, and palming a ping-pong ball by
a robot arm; these controllers were then sequentially composed via switching
to accomplish the complex task of maneuvering the ping-pong ball in a three-
dimensional workspace with an obstacle. The regions of attraction of each
controller were ﬁrst empirically estimated within the full state space of the
robot. Switching from one controller to another without loss of stability was
then accomplished by comparing the current state of the robot to the region
of attraction of the controller for the next desired task. The problem faced
in this chapter is more challenging in that the domains of attraction of any
two of the individual controllers may have empty intersection, and hence a
transition controller will be required to steer the robot from the region of
attraction of one controller into the region of attraction of a second, “nearby”
controller. A feedback schematic of the controller is depicted in Fig. 7.1.
The second result is an event-based PI controller that is able to regulate
average walking rate to a continuum of values, to reject the eﬀect of moderate
disturbances on average walking rate, and to hasten convergence of average
walking rate to its steady state value. The event-based controller provides
PI-action to adjust the parameters of a within-stride controller that, for ﬁxed
parameter values, induces an exponentially stable, periodic orbit. Parameter
adjustment takes place just after impact (swing leg touching the ground). A
191
© 2007 by Taylor & Francis Group, LLC

192
Feedback Control of Dynamic Bipedal Robot Locomotion
1278340
7823095
87
56 982356
482010
010298
973541
287653
Robot
¯ν
(avg. vel.)
¯ν∗
u
(torque)
x = (q; ˙q)
(robot’s state)
α(¯ν∗)
Γ(x α)
Within-Stride
Controller
Table of
Controller
Coeﬃcients
Figure 7.1. Feedback diagram showing a family of controllers parameterized
by α, where each set of parameters has been designed so that the correspond-
ing within-stride controller Γ(x, α) yields walking at a diﬀerent desired speed.
More generally, each parameter could represent a controller that is appropri-
ate for a particular set of walking conditions, such as ﬂat ground with a high
coeﬃcient of friction, ﬂat ground with a low coeﬃcient of friction, walking up
a slope of a given grade, walking down a slope with a given grade, etc.
feedback schematic of the controller is depicted in Fig. 7.2. This idea is most
closely related to the work of [7].
7.1
Overview of Key Facts
This section summarizes some notation and results from Chapters 3, 5, and
6 that are used extensively in the present chapter. The conﬁguration coordi-
nates of the robot in single support (also commonly called the swing phase)
are denoted by q = (q1; · · · ; qN) ∈Q, the state space is denoted by T Q, and
a control is applied at each connection of two links, but not at the contact
point with the ground (i.e., no ankle torque), for a total of (N −1) controls.
The hybrid model of the robot (single support phase Lagrangian dynamics
plus impact map) is expressed as a nonlinear system with impulse eﬀects
Σ :

˙x = f(x) + g(x)u
x−/∈S
x+ = Δ(x−)
x−∈S,
(7.1)
with x = (q; ˙q). The impact or walking surface, S, is deﬁned as
S :=
.
(q, ˙q) ∈T Q | pv
2(q) = 0, ph
2(q) > 0
/
,
(7.2)
where pv
2 and ph
2 are the Cartesian coordinates of the swing leg end (see
Fig. 3.2(a)). The impact map Δ : S →T Q computes the value of the state
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Event-Based Feedback Controllers for Walking
193
Robot
¯ν
¯ν∗
u
x = (q; ˙q)
α(k)
Γ(x, α(k))
(avg. vel.)
(robot’s state)
(torque)
Within-Stride
Controller
Controller
Controller
Event-based
PI
Impact
Detector
Figure 7.2. Feedback diagram showing an event-based PI-controller for reg-
ulating average walking speed to a desired value, ¯ν∗. The parameters of the
within-stride controller are updated at each impact event, in other words, on a
stride-to-stride basis. Hence, the overall feedback controller, consisting of the
within-stride control action and the stride-to-stride control action, is hybrid,
just like the underlying biped model.
just after impact with S, x+ = (q+; ˙q+), from the value of the state just
before impact, x−= (q−; ˙q−). Since the conﬁguration coordinates necessarily
involve the speciﬁcation of which of the two the legs is in contact with the
ground, the coordinates must be relabeled after each step to take into account
the successive changing of the support leg. This is reﬂected in the impact map
via a constant, invertible matrix R, q+ := Rq−.
The control design involves the choice of a set of holonomic constraints
that are asymptotically imposed on the robot via feedback control. This is
accomplished by interpreting the constraints as output functions depending
only on the conﬁguration variables of the robot, and designing a controller
that drives the outputs to zero suﬃciently fast; see Section 5.5. The outputs
y ∈RN−1 are chosen as
y = h(q, α) = H0q −hd(θ(q), α),
(7.3)
with terms deﬁned as follows:
1. H0 is an (N −1) × N matrix of real coeﬃcients specifying what is to be
controlled.
2. θ(q) := cq, where c is a 1 × N row vector of real coeﬃcients, is a scalar
function of the conﬁguration variables and should be chosen so that it
is monotonically increasing along a a periodic orbit of the robot (θ(q)
replaces time as a means of parameterizing a periodic walking motion).
Deﬁne θ+ = cq+ and θ−= cq−to be the initial and ﬁnal values of θ,
respectively, along a step.
© 2007 by Taylor & Francis Group, LLC

194
Feedback Control of Dynamic Bipedal Robot Locomotion
3. Normalization of θ to take values between zero and one,
s(q) := θ(q) −θ+
θ−−θ+ .
(7.4)
4. B´ezier polynomials of degree M ≥3
bi(s) :=
M

k=0
αi
k
M!
k!(M −k)! sk(1 −s)M−k.
(7.5)
5. For αi
k as above, deﬁne a (N−1)×1 column vector αk := (α1
k; · · · ; αN−1
k
)
and a (N −1) × (M + 1) matrix α := [α0, · · · , αM].
6.
hd(θ(q), α) :=
⎡
⎢⎢⎣
b1 ◦s(q)
...
bN−1 ◦s(q)
⎤
⎥⎥⎦,
(7.6)
where the dependence on α is implicit through bi; see (7.5).
The matrix of parameters α is said to be a regular parameter of output (7.3)
if the output satisﬁes Hypotheses HH1–HH5 of Chapter 5, which together
imply the invertibility of the decoupling matrix and the existence of a two-
dimensional, smooth, zero dynamics associated with the swing phase of the
robot.
Let A ⊂R(N−1)×(M+1) be the set of regular parameters; then A
is open because Hypotheses HH2, HH3, and HH5 are rank conditions and
because condition HH4 requires a zero of a function depending continuously
on α to remain in an open set.
Let Zα be the swing phase zero dynamics manifold. Let Γα be any feed-
back satisfying the conditions of Theorem 5.4 or Theorem 5.5 so that Zα
is invariant under the swing phase dynamics in closed loop with Γα and is
locally (ﬁnite-time or suﬃciently exponentially quickly) attractive otherwise.
It follows that Γα|Zα = −(LgLfh(·, α))−1L2
fh(·, α) [127], and thus (i) Γα|Zα
is uniquely determined by the choice of parameters used in the output and
is completely independent of the choice of feedback used to drive the con-
straints asymptotically to zero; and (ii) even though Γα is not necessarily
smooth, Γα|Zα is as smooth as the robot model.
For a regular parameter value α of output (7.3), a very simple characteri-
zation of S ∩Zα, the conﬁguration and velocity of the robot at the end of a
phase of single support, can be given. Deﬁne
q−
α := H−1

αM
θ−
α

(7.7a)
ω−
α := H−1
⎡
⎢⎣
M
θ−
α −θ+
α
(αM −αM−1)
1
⎤
⎥⎦,
(7.7b)
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Event-Based Feedback Controllers for Walking
195
where H := [ H0; c ], and the initial and ﬁnal values of θ corresponding to
this output are denoted by θ+
α and θ−
α , respectively. Then
S ∩Zα =
.
(q−
α , ˙q−
α ) | ˙q−
α = a ω−
α , a ∈R
/
(7.8)
and is determined by the last two columns of the parameter matrix α. In a
similar fashion, Δ(S ∩Zα), which gives the conﬁguration, q+
α , and velocity,
˙q+
α , of the robot at the beginning of a subsequent phase of single support,
may be simply characterized and is determined by the ﬁrst two columns of
the parameter matrix α. From Corollary 6.1,

α0
θ+
α

= HRH−1

aM
θ−
α

(7.9)
implies h(·, α) ◦Δ|(S∩Zα) = 0, while, if ˙q+
α := Δ ˙q(q−
α ) ω−
α , results in c ˙q+
α ̸= 0,
then
α1 = θ−
α −θ+
α
Mc ˙q+
α
H0 ˙q+
α + α0
(7.10)
implies Lfh(·, α) ◦Δ|(S∩Zα) = 0. The key thing to note is that these two
conditions involve, once again, only the ﬁrst two columns of the parameter
matrix α. In a similar fashion the last two columns of the parameter matrix
α may be chosen so that h(·, α)|(S∩Zα) = 0 and Lfh(·, α)|(S∩Zα) = 0.
Conditions (7.9) and (7.10) imply that Δ(S ∩Zα) ⊂Zα, in which case Zα
is then controlled-invariant for the full hybrid model of the robot. The re-
sulting restriction dynamics is called the hybrid zero dynamics. Corollary 5.1
provides necessary and suﬃcient conditions for the hybrid zero dynamics to
admit an exponentially stable, periodic orbit transversal to S, Oα. When
these conditions are met, the matrix of parameters α is said to give rise to
an exponentially stable walking motion. When Γα is designed according to
Theorem 5.4 or Theorem 5.5, the exponentially stable orbit in the hybrid zero
dynamics is also exponentially stable in the full-dimensional model, (7.1). The
domain of attraction of Oα in the full-dimensional model cannot be easily esti-
mated; however, its domain of attraction intersected with S ∩Zα, that is, the
domain of attraction of the associated ﬁxed-point of the restricted Poincar´e
map, ρα : S ∩Zα →S ∩Zα, is computed analytically in Theorem 5.3.
7.2
Transition Control
Let α and β be two regular sets of parameters of output (7.3), with corre-
sponding swing phase zero dynamics manifolds, Zα and Zβ. Suppose that
Δ(S ∩Zα) ⊂Zα and Δ(S ∩Zβ) ⊂Zβ, and that there exist exponentially sta-
© 2007 by Taylor & Francis Group, LLC

196
Feedback Control of Dynamic Bipedal Robot Locomotion
ble periodic orbits,1 Oα ⊂Zα and Oβ ⊂Zβ, both transversal to S; denote the
corresponding controllers by Γα and Γβ. The goal is to be able to transition
from Oα to Oβ without the robot falling (i.e., with stability guaranteed). If it
were known that the domains of attraction of the two orbits had a nonempty
intersection, then the method of [30] could be applied directly. Numerically
evaluating the domains of attraction on the full-dimensional model is unpleas-
ant, so another means of ensuring a stable transition is sought that is based
on easily computable quantities, the domains of attraction of the restricted
Poincar´e maps associated with Γα and Γβ.
Since in general Zα ∩Zβ = ∅, the method for providing a stable tran-
sition from Zα and Zβ will be to introduce a one-step transition controller
Γ(α→β) whose (swing phase) zero dynamics manifold Z(α→β) connects the zero
dynamics manifolds Zα and Zβ; this is conceptually illustrated in Fig. 7.3.
More precisely, switching will be synchronized with impact events and the
zero dynamics manifold Z(α→β) will be chosen to map exactly from the one-
dimensional manifold Δ(S ∩Zα) (i.e., the state of the robot just after impact
with S under controller Γα) to the one-dimensional manifold S ∩Zβ (i.e., the
state of the robot just before impact with S under controller Γβ). The one-
step transition controller Γ(α→β) diﬀers from a deadbeat controller in that
Γ(α→β) takes all points in a subset of manifold Δ(S ∩Zα) into a subset of
the manifold S ∩Zβ as opposed to a deadbeat controller that would map a
subset of Δ(S ∩Zα) to a point in S ∩Zβ. The design of multistep transition
controllers is also possible but is not addressed here.
By Lemmas 6.1 and 6.2, any zero dynamics manifold Z(α→β) with param-
eters
(α →β)0 = α0
(α →β)1 =
Mα
M(α→β)
θ−
β −θ+
α
θ−
α −θ+
α
(α1 −α0) + α0
(α →β)M(α→β)−1 =
Mβ
M(α→β)
θ−
β −θ+
α
θ−
β −θ+
β

βMβ−1 −βMβ

+ βMβ
(α →β)M(α→β) = βMβ
θ+
(α→β) = θ+
α
θ−
(α→β) = θ−
β
(7.11)
satisﬁes
Z(α→β) ∩Δ(S ∩Zα) = Δ(S ∩Zα)
(7.12a)
1In this presentation, it is implicitly assumed that these would correspond to walking at
diﬀerent average walking rates, but they could correspond to walking on surfaces with
diﬀerent slopes, for example.
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Event-Based Feedback Controllers for Walking
197
Δ(S ∩Zα)
Δ(S ∩Zβ)
S ∩Zα
S ∩Zβ
Zα
Zβ
Z(α→β)
Figure 7.3. Composition of two controllers Γα and Γβ via transition con-
troller Γ(α→β). Under the action of Γα the dynamics evolve on Zα. Switching
to Γ(α→β) when the state enters Δ(S ∩Zα) causes the dynamics to evolve
along Z(α→β) to S ∩Zβ. Switching to Γβ when the state enters S ∩Zβ causes
the dynamics to evolve on Zβ.
Δ(S ∩Z(α→β)) = Δ(S ∩Zβ);
(7.12b)
see once again Fig. 7.3.
The intermediate parameter values, (α →β)i,
i = 2, . . . , M(α→β) −2, aﬀect the walking motion, and one could choose their
values through optimization, for example, to minimize the torques required
to evolve along the surface Z(α→β). However, the simple choice
(α →β)i = (αi + βi)/2, i = 2, . . . , M(α→β) −2,
(7.13)
has proven eﬀective in practice. The reason for this seems to be intimately
linked the use of B´ezier polynomials in the design of hd.
Assume that the parameter matrix given in (7.11) and (7.13) is regular
and let Γ(α→β) be an associated controller; then Γ(α→β)|Z(α→β) is uniquely
determined by the matrix of parameters (α →β). The goal now is to deter-
mine under what conditions Γ(α→β) will eﬀect a transition from the region of
attraction (in S ∩Zα) of Oα to the region of attraction (in S ∩Zβ) of Oβ.
Let P(α→β) : S →S be the Poincar´e return map of the model (7.1) in closed
loop with Γ(α→β) and consider P(α→β)|(S∩Zα). By construction of Z(α→β),
Δ(S ∩Zα) ⊂Z(α→β). Since Z(α→β) is invariant under Γ(α→β), it follows that
P(α→β)(S ∩Zα) ⊂S ∩Z(α→β). But by construction, S ∩Z(α→β) = S ∩Zβ.
Thus, the restriction of the Poincar´e return map to S ∩Zα induces a (partial)
map
ρ(α→β) : S ∩Zα →S ∩Zβ.
(7.14)
In Section 5.4.1, a closed-form expression for ρ(α→β) is computed on the basis
of the two-dimensional zero dynamics associated with Z(α→β).
© 2007 by Taylor & Francis Group, LLC

198
Feedback Control of Dynamic Bipedal Robot Locomotion
Let Dα ⊂S ∩Zα and Dβ ⊂S ∩Zβ be the domains of attraction of the
restricted Poincar´e maps ρα : S ∩Zα →S ∩Zα and ρβ : S ∩Zβ →S ∩Zβ as-
sociated with the orbits Oα and Oβ, respectively.2 It follows that ρ−1
(α→β)(Dβ)
is precisely the set of states in S ∩Zα that can be steered into the domain
of attraction of Oβ under the control law Γ(α→β). In general, from stability
considerations, one is more interested in Dα ∩ρ−1
(α→β)(Dβ), the set of states
in the domain of attraction of Oα that can be steered into the domain of
attraction of Oβ in one step under the control law Γ(α→β) (see Fig. 7.3).
Theorem 7.1 (Serial Composition of Stable Walking Motions)
Assume that α and β are regular parameters of output (7.3), and that (α →β)
deﬁned by (7.11) and (7.13) is also regular. Suppose furthermore that
1. Δ(S ∩Zα) ⊂Zα and Δ(S ∩Zβ) ⊂Zβ;
2. there exist exponentially stable, periodic orbits Oα and Oβ in Zα and
Zβ, respectively, both transversal to S, so that the domains of attraction
Dα ⊂S ∩Zα and Dβ ⊂S ∩Zβ of the associated restricted Poincar´e
maps are nonempty and open;
3. Γ(α→β) satisﬁes the conditions of Theorem 5.4 so that Z(α→β) is invari-
ant under the swing phase dynamics in closed loop with Γ(α→β).
Then the set of states in Dα that can be steered into Dβ in one step under the
control law Γ(α→β) is equal to Dα ∩ρ−1
(α→β)(Dβ).
Proof
This follows directly from the deﬁnition of ρ(α→β); see Proposi-
tion 4.3.
An example is given in the next chapter. The above result also holds for
feedbacks Γα, Γβ, and Γ(α→β) designed according to Theorem 5.5. One has
to be aware, however, that the state of the closed-loop system does not reach
Zα in ﬁnite time, and hence the switching conditions given in the theorem
can only be approximately met.
2Since the existence of exponentially stable, periodic orbits has been assumed, these do-
mains are nonempty and open.
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Event-Based Feedback Controllers for Walking
199
7.3
Event-Based PI-Control of the Average Walking Rate
The goal of this section is to design an event-based controller 3 that adjusts
the parameters in the output (7.3) so as to achieve walking at a continuum
of rates instead of some ﬁnite set of rates, as would be achieved with the
switching design of the previous section. The key idea is to view the numerical
parameters4 α in the virtual constraints as control parameters in the Poincar´e
map. Let Γα be a controller satisfying the hypotheses of Section 7.1 and denote
the closed-loop system formed with (7.1) by
Σα :

˙x = fcl(x, α)
x−̸∈S
x+ = Δ(x−)
x−∈S,
(7.15)
where fcl(x, α) := f(x) + g(x)Γα(x). The closed-loop system is then a col-
lection of systems with impulse eﬀects, indexed by the parameter matrix α;
see for example, Section 4.6. Varying α at each impact event of the walking
cycle, and holding it constant during the swing phase, will provide a means
to vary the average walking rate.
Three controller designs will be presented. Each of them is based on the
Poincar´e map of (7.15), with α viewed as a control variable. The ﬁrst two
controller designs exploit the hybrid zero dynamics. Consequently, the compu-
tations associated with their design involve restricted Poincar´e maps and are
often relatively easy to perform on practical examples. In addition, for these
two methods, the feedback controller Γα can be based on either the ﬁnite-time
controller of Theorem 5.4 or the input-output linearizing controller of Theo-
rem 5.5. The third design will be based directly on the Poincar´e return map
of (7.15) and to eﬀectively carry out the required computations, the closed-
loop system must be continuously diﬀerentiable. This restricts the validity to
feedback controllers Γα designed according to Theorem 5.5.
7.3.1
Average Walking Rate
Deﬁne the average walking rate over a step5 to be step length divided by
the elapsed time of a step. For a controller Γα satisfying the hypotheses of
Section 7.1, the average walking rate is computed from the model (7.15) as
follows. Let Pα : S →S be the Poincar´e return map and let TI,α : T Q →
R ∪{∞} be the time-to-impact function. The average walking rate is formally
3That is, a controller that acts step-to-step with updates occurring at impacts.
4For this section, it is assumed that the degrees of the B´ezier polynomials in hd are ﬁxed.
5A step starts with the swing leg on the ground and behind the robot and ends with the
swing leg on the ground and in front of the robot.
© 2007 by Taylor & Francis Group, LLC

200
Feedback Control of Dynamic Bipedal Robot Locomotion
deﬁned as a (partial) map ¯να : S →R≥0 by
¯να := ph
2 ◦Pα
TI,α ◦Δ,
(7.16)
where, ph
2, when evaluated on S, computes step length (see Fig. 3.2(a)).
On the open subset ˜S ⊂S where 0 < TI,α ◦Δ < ∞and the associated
impacts are transversal to S, both Pα and TI,α ◦Δ are well-deﬁned and
continuous in the case of Γα satisfying the hypotheses of Theorem 5.4, and
well-deﬁned and continuously diﬀerentiable in the case of Γα satisfying the
hypotheses of Theorem 5.5. It follows that ¯να restricted to ˜S is also continuous
in the ﬁrst case and continuously diﬀerentiable in the second. However, for
later use, note that if α is a regular parameter value of output (7.3) giving
rise to a hybrid zero dynamics, that is, Δ(S ∩Zα) ⊂Zα, then ¯να restricted
to ˜S ∩Zα depends smoothly on the states and the parameter values α used
to deﬁne the outputs, (7.3), for both types of feedback controllers.
7.3.2
Design and Analysis Based on the Hybrid Zero
Dynamics
Two sets of assumptions are investigated for completing the controller design
on the basis of the hybrid zero dynamics. In the ﬁrst case, the parameters
are varied in such a way that they aﬀect the gait of the robot only in the
“interior” of a step, while leaving the state of the robot at the boundary of
a step, that is, at beginning and end of a step, unchanged. A modiﬁcation
to the height of the swing leg at the midpoint of the gait would satisfy this
restriction, for example, but a parametric change to step length would not be
permitted. In the second case, more general parameter variations are allowed
that will encompass changes at the boundary of the step. The two designs
are presented separately because the ﬁrst one is simpler and easier to follow.
The results are based on Theorems 4.8 and 4.9, respectively.
Case I:
For any regular parameter value α ∈A of output (7.3) satisfying
Δ(S ∩Zα) ⊂Zα, the corresponding restricted Poincar´e map has been denoted
ρα : S ∩Zα →S ∩Zα. To emphasize the dependence on α, for z ∈S ∩Zα,
let ρ(z, α) := ρα(z); similarly, let ¯ν(z, α) := ¯να(z).
Let ¯α be a given regular value of α such that ρ¯α : S ∩Z¯α →S ∩Z¯α has an
exponentially stable ﬁxed point transversal to S, and denote the ﬁxed point
by z∗
¯α. Let δα ∈R(N−1)×(M+1) be such that δα ̸= 0 and
(δα)0 = (δα)1 = (δα)M−1 = (δα)M = 0.
(7.17)
Then, for w ∈R suﬃciently small in magnitude, each value of the one-
parameter curve ¯α + wδα ∈R(N−1)×(M+1) is also regular. From (7.17),
S ∩Z¯α+wδα = S ∩Z¯α
(7.18a)
Δ(S ∩Z¯α+wδα) = Δ(S ∩Z¯α).
(7.18b)
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Event-Based Feedback Controllers for Walking
201
Thus, ρ¯α+wδα : S ∩Z¯α →S ∩Z¯α, and the following single-input, single-output
dynamic system can be deﬁned,
z[k + 1] = ρ(z[k], ¯α + w[k]δα)
η[k + 1] = ¯ν(z[k], ¯α + w[k]δα)
yvel[k] = η[k],
(7.19)
with two-dimensional state space S ∩Z¯α × R, input w ∈R and output equal
to average walking rate, yvel ∈R. Its linearization is
δz[k + 1] = a11δz[k] + b1δw[k]
δη[k + 1] = a21δz[k] + b2δw[k]
δyvel[k] = δη[k],
(7.20)
where6
a11 := ∂ρ
∂z (z, ¯α + wδα)
&&&&z=z∗
α
w=0
b1 := ∂ρ
∂w(z, ¯α + wδα)
&&&&z=z∗
α
w=0
a21 := ∂¯ν
∂z (z, ¯α + wδα)
&&&&z=z∗
¯
α
w=0
b2 := ∂¯ν
∂w(z, ¯α + wδα)
&&&&z=z∗
α
w=0
.
(7.21)
The linearized system (7.20) is exponentially stable if, and only if, |a11| < 1.
An easy computation shows that its DC-gain is nonzero if, and only if,
a21b1 + b2(1 −a11) ̸= 0.
(7.22)
Theorem 7.2 (Event-Based PI Control Applied to the Hybrid Zero
Dynamics, Case-I)
Let ¯α be a regular parameter value of the output (7.3) such that Δ(S ∩
Z¯α) ⊂S ∩Z¯α and assume there exists an exponentially stable periodic orbit
in Z¯α transversal to S. Denote the corresponding ﬁxed point of the restricted
Poincar´e return map by z∗
¯α.
Assume there exists δα satisfying (7.17) and
such that the nonzero DC-gain condition, (7.22), holds. Then average walk-
ing rate can be regulated via PI control. In particular, there exist ϵ∗> 0, and
scalars ¯KP and ¯KI such that for all η∗satisfying |η∗−¯ν(z∗
¯α, ¯α)| < ϵ∗, the
system consisting of (7.19) in closed loop with the proportional plus integral
controller7
e[k + 1] = e[k] + (η∗−η[k])
w[k] = ¯KP (η∗−η[k]) + ¯KIe[k]
(7.23)
6We have abused notation and not made the distinction between z as a point in TQ that
lies in S ∩Z¯α and z as a coordinate on S ∩Z¯α. Note that TQ has dimension 2N and S ∩Z¯α
has dimension one.
7The state e[k] is the integral of the error between the desired average velocity and the
current average velocity of the robot.
© 2007 by Taylor & Francis Group, LLC

202
Feedback Control of Dynamic Bipedal Robot Locomotion
has an exponentially stable equilibrium, and thus, when initialized suﬃciently
near the equilibrium, limk→∞(η∗−η[k]) = 0.
Proof
The linear system (7.20) is exponentially stable because the expo-
nential stability of the ﬁxed-point z∗
¯α implies that |a11| < 1. This, combined
with the DC-gain being nonzero, implies the existence of a PI controller of
the form
δe[k + 1] = δe[k] + (δη∗−δη[k])
δw[k] = ¯KP (δη∗−δη[k]) + ¯KIδe[k]
(7.24)
such that the closed-loop system (7.20) with (7.24) is exponentially stable
and satisﬁes limk→∞(δη∗−δη[k]) = 0, where δη∗:= η∗−¯ν(z∗
¯α, ¯α). Since the
closed loop of (7.20) with (7.24) is the linearization of (7.19) in closed loop
with (7.23), the result follows.
The PI controller in (7.23) is realized on the full-hybrid model of the robot
as
˙x
= f(x) + g(x)Γ¯α+wδα
˙e
= 0
˙w
= 0
˙η
= 0
⎫
⎪
⎪
⎪
⎬
⎪
⎪
⎪
⎭
x−̸∈S
x+ = Δ(x−)
e+ = e−+ (η∗−η−)
w+ = ¯KP (η∗−η−) + ¯KIe−
η+ = ¯ν(x−, ¯α + w+δα)
⎫
⎪
⎪
⎪
⎬
⎪
⎪
⎪
⎭
x−∈S
(7.25)
where the extra states are used to store past values of ¯ν and w, and to im-
plement the diﬀerence equation in the PI controller.
The existence of an
exponentially stable orbit is analyzed next.
Theorem 7.3 (Event-Based PI Control Applied to the Full Model,
Case-I)
Assume the hypotheses of Theorem 7.2 and for a regular parameter α let Γα be
any feedback satisfying the hypotheses of either Theorem 5.4 or Theorem 5.5,
so that Zα is invariant under the swing phase dynamics in closed loop with Γα
and is locally (ﬁnite-time or suﬃciently exponentially quickly) attractive other-
wise. Assume that ¯KP and ¯KI have been chosen so that (7.19) in closed loop
with (7.23) has an exponentially stable equilibrium. Then the hybrid model
(7.25) possesses an exponentially stable orbit and limt→∞(η∗−η(t)) = 0.
Remark 7.1
An alternative realization of (7.25) can be given. Since from
(7.17) the step length is ﬁxed for all values of w, the average walking rate can
be computed directly from its deﬁnition: step length divided by elapsed time
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Event-Based Feedback Controllers for Walking
203
for a step. This leads to
˙x
= f(x) + g(x)Γ¯α+wδα
˙t
= 1
˙e
= 0
˙w
= 0
⎫
⎪
⎪
⎪
⎬
⎪
⎪
⎪
⎭
x−̸∈S
x+ = Δ(x−)
t+ = 0
e+ = e−+ (η∗−ph
2(q−
¯
α )
t−
)
w+ = ¯KP(η∗−ph
2(q−
¯
α )
t−
) + ¯KIe−
⎫
⎪
⎪
⎪
⎪
⎬
⎪
⎪
⎪
⎪
⎭
x−∈S
(7.26)
where ph
2(q−
α ) computes step length.
Remark 7.2
Exponential stability of the nominal orbit gives |a11| < 1,
which implies that 1 −a11 > 0. From (5.71a) and (5.75), it can be assumed
that a21 > 0. Hence, a suﬃcient condition for the DC-gain (7.22) to be nonzero
is b1 > 0 and b2 > 0. Thus, PI control of average walking speed is possible if
one can ﬁnd δα satisfying (7.17) and
N−1

i=1
M−2

k=2
δαi
k
∂ρ(z, α)
∂αi
k
&&&&&
z∗
¯
α
> 0
(7.27a)
N−1

i=1
M−2

k=2
δαi
k
∂¯ν(z, α)
∂αi
k
&&&&&
z∗
¯
α
> 0.
(7.27b)
Therefore, it is enough to ﬁnd one pair of indices (k, i), with 2 ≤k ≤M −2,
and 1 ≤i ≤N −1, such that
∂ρ(z, α)
∂αi
k
&&&&
z∗
¯
α
and
∂¯ν(z, α)
∂αi
k
&&&&
z∗
¯
α
(7.28)
are both nonzero and have the same sign. This condition will be veriﬁed on
the example of Section 7.4.
Remark 7.3
What if the nominal orbit is not exponentially stable (i.e.,
|a11| ≥1)?
If (7.20) is stabilizable, then the nonzero DC-gain condition
(7.22) is equivalent to stabilizability of (7.20) augmented with the integrator
of (7.24). Exponentially stable regulation can be achieved therefore with a
slight extension to the PI controller:
e[k + 1] = e[k] + (η∗−η[k])
(7.29)
w[k] = ¯KP (η∗−η[k]) + ¯KIe[k] + ¯KZ(z[k] −z∗
α[k]).
© 2007 by Taylor & Francis Group, LLC

204
Feedback Control of Dynamic Bipedal Robot Locomotion
Remark 7.4
The PI-controller (7.23) was constructed on the basis of a one-
parameter curve αw := ¯α+wδα ∈A. The same procedure can be extended to
a multi-parameter curve, αw := ¯α + 5k
i=1 wiδαi ∈A, where each δαi satisﬁes
(7.17) and w = (w1; · · · ; wk). This extension is used in Chapter 9.
Case II:
A control design is now presented that relaxes the conditions (7.17)
so that parameter updates that change the posture of the robot at the end
of the step are permitted. This will allow step length to be varied as well
as torso lean angle, for example. Mathematically speaking, the additional
complication is that the state space of z[k + 1] = ρ(z[k], α[k]), which is the
step boundary S ∩Zα, also depends on the parameters. The solution, as given
in Theorem 4.9, is to use dynamic extension and a form of “transition control”
to account for the parameter dependence.
Let ¯α be a regular parameter value of the output (7.3) such that Δ(S∩Z¯α) ⊂
S ∩Z¯α and ρ¯α : S ∩Z¯α →S ∩Z¯α has an exponentially stable ﬁxed point
transversal to S. Denote the ﬁxed point by z∗
¯α. Let δα ∈R(N−1)×(M+1) be
such that δα ̸= 0 and
(δα)0 = (δα)1 = 0.
(7.30)
Then, for w ∈R suﬃciently small in magnitude, each value of the one-
parameter curve
¯αw := ¯α + wδα ∈R(N−1)×(M+1)
(7.31)
is also regular. However, in general, Δ(S ∩Z¯αw) ̸⊂S ∩Z¯αw, which means the
controller design cannot be carried out on the restriction map of the hybrid
zero dynamics, as in Case-I. This lack of invariance, which arises from the
weaker conditions on δα in (7.30), as opposed to (7.17), makes the analysis
and design of the controller more involved.
Based on Theorem 6.1, for suﬃciently small real values v and w, deﬁne
a0(¯α, v) := H0RH−1

(¯αv)M¯
α
θ−
¯αv

(7.32)
and
a1(¯α, v, w) := H0Δ ˙qH−1
·
⎡
⎣
M¯α
θ−
¯αv −θ+
¯αv
((¯αv)Mα −(¯αv)M¯
α−1)
1
⎤
⎦
· θ−
¯αw −θ+
¯αw
M¯α
cΔ ˙qω−
¯αv + a0(¯α, v);
(7.33)
in addition, set
a(¯α, v, w) := [a0(¯α, v), a1(¯α, v, w), (¯α)2, · · · , (¯α)M¯
α] + wδα.
(7.34)
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Event-Based Feedback Controllers for Walking
205
Theorem 6.1 implies that for all ¯v, v, w ∈R suﬃciently small,
Δ(S ∩Za(¯α,¯v,v)) ⊂Za(¯α,v,w).
(7.35)
Because S ∩Zα only depends on the last two columns of the parameter matrix
α, it follows that by construction of a,
S ∩Za(¯α,¯v,v) = S ∩Z¯αv
and
S ∩Za(¯α,v,w) = S ∩Z¯αw.
(7.36)
Hence, Pa(¯α,v,w) : S ∩Z¯αv →S ∩Z¯αw.
To construct the equivalent of (7.19), denote the restriction map by
¯ρv,w := Pa(¯α,v,w)
&&
S∩Z¯
αv ,
(7.37)
and deﬁne a single-input, single-output dynamic system on
{(S ∩Z¯αv, v) |v ∈R} × R
(7.38)
by
z[k + 1] = ¯ρ(z[k], v[k], w[k])
v[k + 1] = w[k]
η[k + 1] = ¯ν(z[k], a(¯α, v[k], w[k]))
yvel[k] = η[k]
(7.39)
with input w ∈R, output yvel ∈R equal to the average walking rate, and
¯ρ(z, v, w) := ¯ρv,w(z). Its linearization is
δz[k + 1] = a11δz[k] + a12δv[k] + b1δw[k]
δv[k + 1] = δw[k]
δη[k + 1] = a21δz[k] + a22δv[k] + b2δw[k]
δyvel[k] = δη[k]
(7.40)
where
a11 := ∂¯ρ
∂z (z, v, w)
a12 := ∂¯ρ
∂v (z, v, w)
a21 := ∂¯ν
∂z (z, v, w)
a22 := ∂¯ν
∂v (z, v, w)
b1 := ∂¯ρ
∂w(z, v, w)
b2 := ∂¯ν
∂w (z, v, w),
(7.41)
and the right-hand sides of (7.41) are evaluated at z = z∗
¯α, v = 0, and w = 0.
The linearized system (7.40) is exponentially stable if, and only if, |a11| < 1.
The DC-gain is nonzero if, and only if,
a21(b1 + a12) + (a22 + b2)(1 −a11) ̸= 0.
(7.42)
© 2007 by Taylor & Francis Group, LLC

206
Feedback Control of Dynamic Bipedal Robot Locomotion
Theorem 7.4 (Event-Based PI Control Applied to the Hybrid Zero
Dynamics, Case-II)
Let ¯α be a regular parameter value of the output (7.3) such that Δ(S ∩
Z¯α) ⊂S ∩Z¯α and assume there exists an exponentially stable periodic orbit
in Z¯α transversal to S. Denote the corresponding ﬁxed point of the restricted
Poincar´e return map by z∗
¯α.
Assume there exists δα satisfying (7.30) and
such that the nonzero DC-gain condition (7.42) holds. Then average walking
rate can be regulated via PI control. In particular, there exist ϵ∗> 0, and
scalars ¯KP and ¯KI such that for all η∗satisfying |η∗−¯ν(z∗
¯α, ¯α)| < ϵ∗, the
system consisting of (7.39) in closed loop with the proportional plus integral
controller
e[k + 1] = e[k] + (η∗−η[k])
w[k] = ¯KP (η∗−η[k]) + ¯KIe[k]
(7.43)
has an exponentially stable equilibrium, and thus, when initialized suﬃciently
near the equilibrium, limk→∞(η∗−η[k]) = 0.
Proof
The linear system (7.40) is exponentially stable because the expo-
nential stability of the ﬁxed-point z∗
¯α implies that |a11| < 1. This, combined
with the DC-gain being nonzero, implies the existence of a PI controller of
the form
δe[k + 1] = δe[k] + (δη∗−δη[k])
δw[k] = ¯KP (δη∗−δη[k]) + ¯KIδe[k]
(7.44)
such that the closed-loop system (7.40) with (7.44) is exponentially stable and
satisﬁes limk→∞(δη∗−δη[k]) = 0, where δη∗:= (η∗−¯ν(z∗
¯α, ¯α)). Because the
closed loop of (7.40) with (7.44) is the linearization of (7.39) in closed loop
with (7.43), the result follows.
The realization of the controller on the full-dimensional model proceeds as
in Case-I, as does the corresponding stability analysis. The details are left to
the reader.
7.3.3
Design and Analysis Based on the Full-Dimensional
Model
For a regular value α of output (7.3), let Γα be an input-output linearizing
controller constructed as in Theorem 5.5, and let Pα : S →S denote the
Poincar´e return map of the closed-loop system (7.15). As before, to emphasize
the dependence on α, for x ∈S, let P(x, α) := Pα(x); similarly, let ¯ν(x, α) :=
¯να(x).
Let ¯α be a ﬁxed regular value of α such that P¯α : S →S has an exponen-
tially stable ﬁxed point transversal to S and denote the ﬁxed point by x∗
¯α. Let
δα ∈R(N−1)×(M+1) be nonzero. Then, for w ∈R suﬃciently small in magni-
tude, each value of the one-parameter curve ¯α + wδα ∈R(N−1)×(M+1) is also
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Event-Based Feedback Controllers for Walking
207
regular. Because P¯α+wδα : S →S, the following single-input, single-output
dynamic system can be deﬁned,
x[k + 1] = P(x[k], ¯α + w[k]δα)
η[k + 1] = ¯ν(x[k], ¯α + w[k]δα)
yvel[k] = η[k],
(7.45)
with 2N-dimensional state space S × R, input w ∈R, and output equal to
average walking rate, yvel ∈R. Its linearization is
δx[k + 1] = ¯A11δx[k] + ¯B1δw[k]
δη[k + 1] = ¯A21δx[k] + ¯B2δw[k]
δyvel[k] = δη[k],
(7.46)
where8
¯A11 := ∂P
∂x (x, ¯α + wδα)
&&&&x=x∗
α
w=0
¯B1 := ∂P
∂w (x, ¯α + wδα)
&&&&x=x∗
α
w=0
¯A21 := ∂¯ν
∂x(x, ¯α + wδα)
&&&&x=x∗
¯
α
w=0
¯B2 := ∂¯ν
∂w(x, ¯α + wδα)
&&&&x=x∗
¯
α
w=0
.
(7.47)
The linearized system (7.46) is exponentially stable if, and only if, all of
the eigenvalues of ¯A11 have magnitude less than one. An easy computation
shows that its DC-gain is nonzero if, and only if,
¯A21

I(2N−1)×(2N−1) −¯A11
−1 ¯B1 + ¯B2 ̸= 0.
(7.48)
Theorem 7.5 (Event-Based PI Control Designed on the Full-Dimen-
sional Model)
Let ¯α a given regular value of α such that P¯α : S →S has an exponentially
stable ﬁxed point transversal to S and denote the ﬁxed point by x∗
¯α. Let δα ∈
R(N−1)×(M+1) be such that the nonzero DC-gain condition, (7.48), is met.
Then average walking rate can be regulated via PI control.
In particular,
there exist ϵ∗> 0, and scalars ¯KP and ¯KI such that for all η∗satisfying
|η∗−¯ν(z∗
¯α, ¯α)| < ϵ∗, the system consisting of (7.45) in closed loop with the
proportional plus integral controller
e[k + 1] = e[k] + (η∗−η[k])
w[k] = ¯KP (η∗−η[k]) + ¯KIe[k]
(7.49)
8We have abused notation and not made the distinction between x as a point in TQ that
lies in S and x as a coordinate on S. Note that TQ has dimension 2N and S has dimension
2N −1.
© 2007 by Taylor & Francis Group, LLC

208
Feedback Control of Dynamic Bipedal Robot Locomotion
has an exponentially stable equilibrium, and thus, when initialized suﬃciently
near the equilibrium, limk→∞(η∗−η[k]) = 0.
Proof
The matrix ¯A11 is the Jacobian of P¯α evaluated at x∗
¯α.
Hence,
by Corollary 4.1, the exponential stability of the ﬁxed-point x∗
¯α implies that
the eigenvalues of ¯A11 have magnitude less than one, proving that the linear
system (7.46) is exponentially stable. This property combined with the DC-
gain being nonzero implies the existence of a PI controller of the form
δe[k + 1] = δe[k] + (δη∗−δη[k])
δw[k] = ¯KP (δη∗−δη[k]) + ¯KIδe[k]
(7.50)
such that the closed-loop system (7.46) with (7.50) is exponentially stable and
satisﬁes limk→∞(δη∗−δη[k]) = 0, where δη∗:= η∗−¯ν(z∗
¯α, α). Because the
closed loop of (7.46) with (7.50) is the linearization of (7.45) in closed loop
with (7.49), the result follows.
Remark 7.5
If ¯α in Theorem 7.5 is such that Δ(S ∩Z¯α) ⊂S ∩Z¯α, then
the stability of the ﬁxed point can be checked on the basis of the restricted
Poincar´e map.
7.4
Examples
An example is presented that shows how an event-based PI-controller can
induce walking at a continuum of rates while providing stabilization and a
modest amount of robustness to disturbances, to parameter mismatch between
the design model and the actual robot, and to structural mismatch between
the design model and the actual robot. The results are illustrated via three
simulations on the ﬁve-link model studied in Section 6.6.2, with a controller
verifying the assumptions of Case-I. An example using Case-II is given in the
next chapter.
7.4.1
Choice of δα
For the following three examples, ﬁnite diﬀerences were used to verify the
suﬃcient condition shown in (7.27) for several values of i and k. In this way,
it was determined that adjusting the angle of the swing leg femur during mid-
step would have a suﬃciently strong eﬀect on the average walking speed (this
corresponded to i = 2 and k = 3). Hence, δα was chosen to be all zeros with
the exception of δα2
3 which was set to 1.
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Event-Based Feedback Controllers for Walking
209
0.3
0.35
0.4
0.45
0.5
0.55
17.7
9.4
33.7
25.7
10
20
30
40
0
step number
step time (s)
(m/s)
(a) Rejecting a disturbance force acting at
the robot’s hip.
10
20
30
40
0.49
0.495
0.5
0.505
0.51
0.515
0.52
15.9
7.9
31.9
23.9
0
step number
step time (s)
(m/s)
(b) Maintaining the designed average walk-
ing rate in the presence of parameter mis-
match.
0
0.1
0.2
0.3
0.4
21.6
11.4
50.1
34.4
10
20
30
40
0
step number
step time (s)
(m/s)
(c) Tracking a walking rate proﬁle and stopping
the robot on a compliant walking surface.
Figure 7.4. Illustration of an event-based PI control to handle a constant dis-
turbance, parameter mismatch, and model mismatch. Commanded (dashed)
versus actual (solid) average walking rate.
© 2007 by Taylor & Francis Group, LLC

210
Feedback Control of Dynamic Bipedal Robot Locomotion
7.4.2
Robustness to Disturbances
This example will illustrate robustness to disturbances by simulation of the
robot with an external force acting on the hips. Event-based PI control is used
to reject a 3 N external force acting horizontally at the robot’s hip opposite
to the direction of walking.
The robot is initialized at the ﬁxed point of a controller with average walking
rate equal to 0.50 m/s. Event-based PI control with gains ¯KP = 5 and ¯KI = 2
and set-point η∗= 0.5 is applied starting on the second step coincident with
the application of a constant 3 N force acting at the hips. Figure 7.4(a) depicts
the actual walking rate versus the commanded value of 0.50 m/s. The peak
torque for this example is 70.1 Nm, about half of the 150 Nm that is possible
with the motors and gearing of RABBIT.
Without application of event-based PI control, the 3 N force slows the robot
to a stop; i.e., the average walking rate slows from 0.50 m/s to 0 m/s.
7.4.3
Robustness to Parameter Mismatch
For this example, event-based PI control is used to maintain the designed av-
erage walking rate in the presence of parameter mismatch between the design
model and the actual model. The actual model’s torso mass, torso inertia,
tibia mass and tibia inertia were set to 110 percent of the design model’s values
while the actual model’s femur mass and femur inertia were set to 90 percent
of those of the design model. The robot is initialized at the ﬁxed point of a
controller whose average walking rate corresponds to 0.50 m/s. Event-based
PI control with gains ¯KP = 5 and ¯KI = 2 and set-point η∗= 0.5 is applied
starting on the ﬁrst step. Figure 7.4(b) illustrates the actual walking rate
versus the commanded rate of 0.50 m/s. The peak torque for this example is
53.8 Nm, about one third of the 150 Nm possible.
Without application of event-based PI control, the parameter mismatch
changes the robot’s average walking rate from 0.50 m/s to 0.54 m/s.
7.4.4
Robustness to Structural Mismatch
This example will illustrate robustness to structural mismatch between the
design model and the evaluation model. In addition, the robot will be com-
manded to track a walking rate proﬁle and then slow to a stop using a single
within-stride controller in conjunction with event-based PI control.
The robot model of the previous two examples is used, except that instead of
assuming a rigid impact, the compliant impact model with dynamic friction
of [176] is used.9
A nominal controller was designed on the basis of the
rigid contact model to have an average walking rate of 0.30 m/s.
When
9See also Section 9.6.1.
© 2007 by Taylor & Francis Group, LLC

Systematic Design of Event-Based Feedback Controllers for Walking
211
implemented on the robot with the compliant model, this yielded an average
walking rate of 0.35 m/s.
In the simulation, the robot is initialized near a periodic orbit of the com-
pliant model. Event-based PI control with gains ¯KP = 0.3 and ¯KI = 0.03 is
applied starting on the sixth step with set-point η∗= 0.40. On the twenty-
ﬁrst step the set-point is changed to η∗= 0.30. To transition from walking to
a stable standing position, on the thirty-sixth step the set-point of the event-
based PI control was set to η∗= 0. Using this technique slowed the robot
until it did not have enough energy to make a step, thus stopping the robot.10
The peak torque for this example is 52 Nm, about one third of the 150 Nm
possible. Figure 7.4(c) gives the commanded versus actual average walking
rate.
10The robot will, in fact, continue to rock back and forth, alternating impacts with each
leg, and decreasing the kinetic energy of the robot with each impact.
© 2007 by Taylor & Francis Group, LLC


8
Experimental Results for Walking
This chapter presents the results of applying the theory of Chapters 6 and 7
to RABBIT, a bipedal robot that was described in Section 2.1 (see Fig. 8.1),
and the result of applying the theory of Chapter 6 to ERNIE, a bipedal robot
that was described in detail in Section 2.2 (see Fig. 8.3).
Recall that for
both RABBIT and ERNIE ﬁve links are connected by revolute joints to form
two symmetric legs and a torso. Actuators supply torque at each of the four
internal joints: an actuator at each knee and an actuator at each connection
of the torso and a femur. RABBIT’s actuators are identical and capable of
producing peak torque of 150 Nm each. ERNIE’s actuators are also identical
and capable of producing peak torque of 28 Nm each (see Section 2.2.6 for a
comment on ERNIE’s motor and gearhead pairs). To prevent motions in the
frontal plane, RABBIT and ERNIE were constructed with booms attached
at the hip. Both robots have no feet and no means of supplying actuation
between their stance leg ends and the ground.
In addition to reporting the results of the walking experiments, this chapter
provides further details on certain aspects of RABBIT’s and ERNIE’s exper-
imental setups that are relevant to control design and are not captured by
the model presented in Chapter 3. The chapter begins with a discussion of
the experimental issues. The actual implementation of the control algorithms
follows. The chapter concludes with a discussion of experiments.
8.1
Implementation Issues
8.1.1
RABBIT’s Implementation Issues
This subsection presents three important aspects of RABBIT that are not
addressed by the model given in Section 3.4, namely, the additional dynamics
introduced by the boom used to constrain RABBIT’s motions to be planar,
RABBIT’s gear reducers, and the irregular, nonrigid surface on which RAB-
BIT walks. These eﬀects are accommodated in the controller designs for the
experiments presented in Section 8.3 so that the experimental, closed-loop
performance will more closely match the design speciﬁcations.
213
© 2007 by Taylor & Francis Group, LLC

214
Feedback Control of Dynamic Bipedal Robot Locomotion
Figure 8.1. The biped prototype RABBIT’s experimental setup.
8.1.1.1
Modeling the Boom
The boom attached to the hip constrains RABBIT’s motions to a “sagittal
plane” that is tangent to a sphere centered at the universal joint that connects
the boom to the center stand (see Figs. 2.3, 8.1, and 8.2). The boom system
consists of the boom, center stand, counterbalance, and cabling. “Training
wheels,” were attached to the boom to provide a measure of safety.
The
post of the training wheels has a prismatic joint with a stop to prevent the
robot’s hip from dropping so low that the knees could strike the ground, but
otherwise does not support the robot’s weight. The boom system also includes
two encoders at the universal joint to measure horizontal and vertical angular
displacement of the boom about the center stand.
An important consideration with a boom system is how to connect power
and communications cabling between the robot and the support electronics.
Unless a slip ring is used, cabling connected to the support electronics will
become twisted or wound as the robot circles the center stand. Unfortunately,
a slip ring was not installed at the time when the experiments reported here
were performed, and the cables had to be unwound after each experiment.
The inertia of the boom system is signiﬁcant enough to require incorpora-
tion into RABBIT’s model. The inertia has four components due to (i) the
boom connecting RABBIT, the center stand, and the counterbalance, (ii) the
counterbalance, (iii) the cabling connecting RABBIT to the support electron-
ics, and (iv) the support electronics (see Figs. 8.1 and 8.2). Since the training
wheels are not always used, and since they are relatively light, their inertia is
© 2007 by Taylor & Francis Group, LLC

Experimental Results for Walking
215
counterbalance
center stand
lb
lb,1
lb,2
φh
(a) Overhead view of RABBIT’s experimental setup. For clarity, the
electronics are not drawn.
electronics
cabling
φv
le
(b) Side view of RABBIT’s experimental setup.
Figure 8.2. Various dimensions of RABBIT’s experimental setup.
© 2007 by Taylor & Francis Group, LLC

216
Feedback Control of Dynamic Bipedal Robot Locomotion
not included. The inertia may be approximated as
Is = 1
3
mb
lb

l3
b,1 + l3
b,2




boom
+
mw l2
b,2
  
counterbalance
+
1
3mc l2
b,1



cabling
(8.1)
Ie = 1
12me l2
e.
(8.2)
This results in additional kinetic energy,
Ka = 1
2Is
 
˙φ2
h + ˙φ2
v
!
+ 1
2Ie ˙φ2
h,
(8.3)
where φh and φv are the horizontal and vertical angular displacements of
RABBIT about the center stand (see Fig. 8.2). The angles φh and φv may be
approximated by
φh ≈ph
H(q) −ph
H(q0)
lb,1
and
φv ≈pv
H(q) −pv
H(q0)
lb,1
,
(8.4)
where q0 is RABBIT’s conﬁguration at the beginning of a step and ph
H and
pv
H are the horizontal and vertical positions of the hip.
There is also additional potential energy due to the boom, the counterbal-
ance, and the cabling,
Va = 1
2g0
mb
lb

l2
b,1 −l2
b,2

sin(φv)



boom
−g0mw lb,2 sin(φv)



counterbalance
+ 1
2g0mclb,1 sin(φv)



cabling
.
(8.5)
Note that the counterbalance mass may be chosen to negate the potential
energy due to the boom and cabling. In the experiments described in Sec-
tion 8.3, no counterbalance was used; the required counterbalance of 52 kg
could not be securely fastened to the boom because of the short length of lb,2.
The controllers used for the experiments reported in Section 8.3 were de-
signed using equations of motion which included a model of the boom mass
and inertia. These equations of motion were calculated by ﬁrst forming an
updated Lagrangian—the planar model’s Lagrangian with the kinetic energy
Ka added and the potential energy Va subtracted—and then using the method
of Lagrange. Table 8.1 gives the parameter values for the boom system setup
used for the experiments.
Aside from the ability to counterbalance the boom, the choice of boom
length has other important considerations. The longer the boom, the better
the approximation of RABBIT as a planar mechanical system; however, the
© 2007 by Taylor & Francis Group, LLC

Experimental Results for Walking
217
Table 8.1. RABBIT’s experimental platform parameters.
Model Parameter
Units
Label
Value
Boom length
m
lb
1.5
Hip to stand distance
m
lb,1
1.4
Stand height
m
ls
1.4
Boom mass
kg
mb
5.0
Cable mass
kg
mc
2.0
Counterbalance mass
kg
mw
0.0
Support electronics mass
kg
me
20.0
longer the boom, the greater the dynamic eﬀects of the additional kinetic
(8.3) and potential (8.5) energies, and the greater the ﬂexibility of the boom.
Boom ﬂexibility was found to be of great signiﬁcance experimentally. The
boom was initially chosen to be 3 m in length. Flexing of the tubular steel
boom resulted in forces on RABBIT’s hip large enough to cause foot slippage.
Consequently, the 3 m boom was swapped for a 1.5 m boom, and the foot
slippage problem was solved.
8.1.1.2
Gear Reducers and Joint Friction
To allow smaller, lighter-weight motors to be used, RABBIT has gear reducers
between its motors and links. The gear reducers have two important eﬀects on
RABBIT’s dynamics. The ﬁrst eﬀect is to add signiﬁcant joint friction, which
eﬀectively eliminates all passive motions of the joints. The second eﬀect is to
approximately decouple the robot’s dynamics, leaving reﬂected rotor inertia
as the only signiﬁcant inertial load on the motor. Both eﬀects were taken into
consideration in the control implementation described in Section 8.2.
The joint friction was modeled by viscous and static friction terms,
F(q, ˙q) := Fv ˙q + Fs sgn( ˙q),
(8.6)
where
Fv = diag(Fv,H, Fv,H, Fv,K, Fv,K, 0)
(8.7a)
Fs = diag(Fs,H, Fs,H, Fs,K, Fs,K, 0).
(8.7b)
The identiﬁed values of RABBIT’s frictional parameters are given in Table 6.3.
Note that both the viscous and static friction values are substantial; at the
hip, the static friction is approximately ten percent of the motor/gear reducer
system’s peak available torque of 150 Nm.
Another, in some ways desirable, eﬀect of gear reducers is to scale the
inertial load experienced by the motors. This scaling approximately decouples
the robot’s actuated dynamics so that the only signiﬁcant dynamic terms are
© 2007 by Taylor & Francis Group, LLC

218
Feedback Control of Dynamic Bipedal Robot Locomotion
the inertia of the motors’ rotors and the unactuated dynamics. Writing the
model in motor coordinates makes this evident.
Deﬁne the motor shaft coordinates ¯q := Ngq where
Ng = diag(ng, ng, ng, ng, 1)
(8.8)
and ng are the gear reducers’ gear ratio (the four gear reducers are identical).
Since the absolute angle, q5, is unactuated, (Ng)55 = 1. When the motors’ ro-
tor inertias and the gear ratios are included in RABBIT’s swing phase model,
(3.8), and the model is written in the motor shaft coordinates, the equations
of motion become
⎡
⎢⎢⎣
1
n2g
D1,1 + IaI4×4
1
ng
D1,2
1
ng
D′
1,2
(D)5,5
⎤
⎥⎥⎦¨¯q +
⎡
⎢⎢⎣
1
n2g
C1,1
1
ng
C1,2
1
ng
C′
1,2
(C)5,5
⎤
⎥⎥⎦˙¯q
+ N −1
g G −N −1
g F = B¯u
(8.9)
where ¯u := (¯u1; ¯u2; ¯u3; ¯u4) is the vector of torques supplied at the output shafts
of the motors and Ia is the motors’ rotor inertia (the four motors are identical).
The result is that the actuated dynamics are approximately decoupled and the
block of actuated dynamics is approximately decoupled from the unactuated
dynamics. The motors’ rotor inertia and gear ratio are given in Table 6.3.
8.1.1.3
The Walking Surface
The ﬂoor on which RABBIT walks is concrete with 30 cm wide cabling access
trenches covered with 4 mm steel plates. In preliminary experiments, it was
found that after stepping on one of the four plates crossing RABBIT’s path,
RABBIT would slow signiﬁcantly. Since the gait—change in the shape over a
step—was the same, this indicated that the energy dissipation due to impact-
ing the concrete surface is less than the energy dissipation due to impacting
the steel plates. To help make the walking surface uniform, the ﬂoor was
covered with 1.5 cm particle board, which was then covered with a layer of
3 mm rubber (see Fig. 8.1). An added beneﬁt was an increased coeﬃcient of
friction for the walking surface. It was also hoped that the rubber layer would
extend the life of RABBIT by providing a modest amount of compliance.
8.1.2
ERNIE’s Implementation Issues
Some of the aspects of ERNIE that are not captured by the model presented
in Section 3.4 are shared with RABBIT, and one is unique to ERNIE. The
aspects that are shared with RABBIT are the boom dynamics and the ap-
proximate decoupling eﬀect of the robot’s dynamics due to the gear reducers;
the other two aspects associated with RABBIT, joint friction and walking
© 2007 by Taylor & Francis Group, LLC

Experimental Results for Walking
219
Figure 8.3. The biped prototype ERNIE’s experimental setup.
surface uniformity, do not apply to ERNIE since its joint friction is small and
since it walks on a treadmill, which has a uniform walking surface. The aspect
that is unique to ERNIE is the dynamics of the robot-treadmill interaction.
These aspects impacted the controller designs for the experiments presented
in Section 8.3.
ERNIE’s parameters, which are given in Table 8.2, were determined from
the 3D solid modeling software used in its design. Since ERNIE’s joint fric-
tion was found empirically to be small, it was not identiﬁed and assumed to
be zero in implementation; see (8.15). The measurement conventions of the
parameters are the same as RABBIT’s; see Fig. 6.14. Table 8.3 gives the
parameter values for the boom system setup used for the experiments.
8.1.2.1
Robot-Treadmill Interaction
Lateral compliance of ERNIE’s treadmill’s belts provides a restorative torque
that helps to stabilize the average position of ERNIE on the treadmill when
walking. Consider Fig. 8.4 which depicts a top view of ERNIE walking on its
treadmill with the inner leg as the stance leg. The desired average value of
φh over a step is zero. That is, the desired average orientation of the robot’s
sagittal plane over a step is parallel to the treadmill’s direction of progression.
Since the leg ends do not readily slip on the treadmill’s surface, when φh ̸= 0
the lateral compliance of the treadmill’s belts provides a restorative torque
that may be approximated as follows.
Assume the treadmill’s belts have a lateral stiﬀness of kbelt.
The force
experienced at the stance leg in the lateral direction of the treadmill may be
approximated as
Fbelt ≈kbeltd = kbeltlb,1(1 −cos(φh)).
(8.10)
© 2007 by Taylor & Francis Group, LLC

220
Feedback Control of Dynamic Bipedal Robot Locomotion
Table 8.2. Identiﬁed link parameters for ERNIE. The friction parameters
were not identiﬁed.
Model Parameter
Units
Label
Value
MT
13.6
Mass
kg
Mf
1.5
Mt
1.0
lT
0.28
Length
m
lf
0.36
lt
0.36
IT
0.09
Inertia
kg·m2
If
0.02
It
0.02
pM
T
0.14
Mass center
m
pM
f
0.13
pM
t
0.12
Fv,H
-
Viscous friction
Ns
Fv,K
-
Fs,H
-
Static friction
Nm
Fs,K
-
Gear ratio
-
ng
91
Motor rotor inertia
kg·m2
Ia
0.02
Thus, the restorative torque may be approximated as
τbelt ≈Fbeltlb,1 sin(φh) = kbeltl2
b,1 sin(φh)(1 −cos(φh)).
(8.11)
This torque acts to stabilize average position of the robot when walking on
the treadmill.
8.2
Control Algorithm Implementation:
Imposing the
Virtual Constraints
The swing phase zero dynamics, (5.40) or (5.47), is independent of the feed-
back used to zero the associated output. The feedback introduced in Sec-
tion 5.5.1, a computed torque prefeedback plus ﬁnite-time converging con-
trollers, is one possible feedback controller.
The input-output linearizing
© 2007 by Taylor & Francis Group, LLC

Experimental Results for Walking
221
Table 8.3. ERNIE’s experimental platform parameters.
Model Parameter
Units
Label
Value
Boom length
m
lb
2.2
Hip to stand distance
m
lb,1
2.2
Stand height
m
ls
0.99
Boom mass
kg
mb
2.7
Cable mass
kg
mc
2.2
Counterbalance mass
kg
mw
N/A
Support electronics mass
kg
me
N/A
lb,1
φh
Fbelt
d
τbelt
treadmill
Figure 8.4. Top view of ERNIE’s experimental setup. Lateral compliance in
the treadmill belts provides a restorative torque that tends to keep the robot’s
sagittal plane aligned with the treadmill. The position of ERNIE when φh = 0
is depicted in gray.
prefeedback (5.88) decouples the output dynamics, resulting in a chain of
four double integrators. In light of the decoupling eﬀect of the gear reducers
(see Section 8.1.1.2) and the likely inaccuracy of the parameter identiﬁcation,
high-gain decoupled PD controllers were used instead to impose the virtual
constraints on RABBIT and ERNIE. It was found that this control was able
to zero the outputs suﬃciently well to induce walking with dynamic charac-
teristics very similar to the theoretical design.
As in the example of Section 6.6.2.1, for the experiments involving RABBIT
and ERNIE, outputs of the form (6.3), with h0(q) and θ(q) as in (6.4), were
used with
H0 =

I 0

(8.12a)
c =
−1 0 −1/2 0 −1
,
(8.12b)
© 2007 by Taylor & Francis Group, LLC

222
Feedback Control of Dynamic Bipedal Robot Locomotion
which results in the output
y = (q1; q2; q3; q4) −hd ◦θ(q).
(8.13)
Fig. 6.13(b) gives θ(q) corresponding to this choice of c. The B´ezier polynomial
degree, M, was chosen to be 6, which left ﬁve free parameters to be chosen
for each output component (two parameters per output component are used
to impose invariance; see Remark 6.1). This implied a total of 20 output
function parameters to be chosen via optimization. The optimization problem
was posed as described in Section 6.3 to choose the 20 free parameters of hd
by approximately minimizing the cost
J(α) :=
1
ph
2(q−)
 TI(ξ−
2 )
0
||u∗
α(t)||2
2dt,
(8.14)
where q−∈S ∩Z, TI(ξ−
2 ) corresponds to the step duration, ph
2(q−
0 ) corre-
sponds to step length, and u∗
α(t) is the result of evaluating (5.35) along the
periodic solution of the hybrid zero dynamics.
The tradeoﬀbetween the energy dissipation due to impacts and the energy
gained through shape change (cf. Theorem 5.3 and Fig. 6.7) determines the
closed-loop system’s average walking rate and stability. Uncertainty in the
model parameters and unmodeled dynamics during the swing phase aﬀect
the energy gained through shape change. Imperfections in the impact model
change the amount of energy dissipated. To study the latter, RABBIT was
simulated using a compliant ground contact model described in [176]. It was
found that stability was preserved, but the steady-state average walking rate
diﬀered from the average walking rate designed assuming rigid impacts. This
was also observed experimentally.
For RABBIT walking on the wood and rubber walking surface, it was found
that in the design of walking motions, the amount of energy dissipated at
impact had to be scaled to be less than the value predicted by the rigid
model at low walking speeds and greater at higher walking speeds. This was
accomplished by scaling δzero (see (5.67) for its deﬁnition) by a constant a.
A series of controllers over a range of values of a were generated and then
evaluated using the procedure described in Section 8.3 to determine their
steady-state average walking rates. The value of a resulting in a controller
that induced the desired average walking rate, ¯ν, was recorded. Figure 8.5
gives a plot of these values of a versus the corresponding average walking rate.
Surprisingly, the relationship is approximately linear; the least squares ﬁt is
a(¯ν) = 1.296 −0.425¯ν. The corresponding map has not yet been generated
for ERNIE.
To zero the output resulting from optimization on the hybrid zero dynamics
(suitably updated to accommodate the implementation issues), the decoupled,
© 2007 by Taylor & Francis Group, LLC

Experimental Results for Walking
223
a
¯ν (m/s)
0.4
0.6
0.8
0.8
0.9
1
1
1.1
1.2
Figure 8.5. Average walking rate of RABBIT versus impact map scaling
constant a.
The solid line is a least squares ﬁt to empirically determined
impact scalings (indicated by circles).
This apparently linear relationship
between average walking rate and impact scaling is reminiscent of the classical
coeﬃcient of restitution relation, e = 1 −av0, where e is the coeﬃcient of
restitution, a is some material-dependent constant, and v0 is the impacting
velocity [89, p. 258]. It is hypothesized that this approximately linear relation
will hold for other walking surfaces, suggesting it as a means of identifying
the surface to determine how the rigid impact model, i.e., δzero, should be
modulated as a function of ¯ν.
Table 8.4. RABBIT’s experiment control parameter values.
Control Parameter
Units
Label
Value
KP,H
2000
Proportional gains
N
KP,K
1500
KD,H
10
Derivative gains
Ns
KD,K
10
PD controller with friction compensation1
u = −KPe −KD ˙e + Fvhd ◦ˆθ(ˆq) + Fs sgn(e)
(8.15)
was used, where the terms Fvhd ◦ˆθ(q) and2 Fs sgn(e) correspond to feed-
forward viscous and static friction compensation terms and
KP = diag(KP,H, KP,H, KP,K, KP,K)
(8.16a)
KD = diag(KD,H, KD,H, KD,K, KD,K)
(8.16b)
are the proportional and derivative gains given in Tables 8.4 and 8.5.
1The friction compensation terms are due to C. Canudas de Wit.
2As is commonly done to circumvent the diﬃculties associated with the discontinuity of
the signum function, in implementation, a scaled arctangent function was used in its place,
i.e., for large τ, sgn(x) ≈2/π tan−1(τx).
© 2007 by Taylor & Francis Group, LLC

224
Feedback Control of Dynamic Bipedal Robot Locomotion
Table 8.5. ERNIE’s experiment control parameter values.
Control Parameter
Units
Label
Value
KP,H
50
Proportional gains
N
KP,K
50
KD,H
1
Derivative gains
Ns
KD,K
1
The error signals are deﬁned as
e := H0ˆq −hd ◦ˆθ(ˆq)
and
˙e := H0 ˙ˆq −∂hd
∂θ
˙ˆθ( ˙ˆq),
(8.17)
where (ˆq; ˙ˆq) is the robot’s state with relabeling,
(ˆq; ˙ˆq) :=

(q; ˙q),
if stance leg is right leg
(Δqq; Δq ˙q),
if stance leg is left leg.
(8.18)
A state machine was used to determine the current stance leg as required by
(8.18). Since hd is only designed for3 0 ≤(θ(q) −θ+)/(θ−−θ+) ≤1, where
θ−:= θ(q−) and θ+ := θ ◦Δq(q−), q−∈S ∩Z, the scalar function of the
robot’s state θ(q) was saturated,
(ˆθ(q); ˙ˆθ(q)) :=
⎧
⎪
⎪
⎨
⎪
⎪
⎩
(θ(q); ˙θ( ˙q)),
0 < θ(q)−θ+
θ−−θ+ < 1
(θ−; 0),
θ(q)−θ+
θ−−θ+ > 1
(θ+; 0),
θ(q)−θ+
θ−−θ+ < 0.
(8.19)
The velocities were estimated using a ﬁve-point numerical diﬀerentiator de-
scribed in [65] and applied to the encoder outputs.
The PD-based feedback (8.15) provided surprisingly good joint-level track-
ing (see, for example, Fig. 8.7).
Because of this, other options were not
explored.
The feedback controller (8.15)–(8.19) was implemented on the dSPACE
DS1103 systems running with a sample period of 1.5 ms (667 Hz). A state
machine was used to implement high-level control actions, such as which low-
level continuous controller to run and when to switch among controllers. The
implementations also have safety mechanisms which set the commanded con-
trol signals to zero in the event of an anomalous condition, such as a joint
exceeding a position limit, or upon user request.
3The parameterization of B´ezier polynomials is such that they are only deﬁned on the unit
interval.
© 2007 by Taylor & Francis Group, LLC

Experimental Results for Walking
225
8.3
Experiments
8.3.1
Experimental Validation Using RABBIT
This section describes six experiments that highlight the capabilities and ro-
bustness of controllers designed via the theoretical framework given in Chap-
ters 6 and 7. The experiments reported were performed during a three week
period, from February 24 through March 14, 2003. At this time, RABBIT
had just been installed into its permanent location, pictured in Fig. 8.1, where
about 6 to 7 laps about the center stand, or 200 steps, are possible; the limit
on the number of laps is due to the winding of the power and Ethernet cabling
about the center stand. During this period, many small details had to be ad-
dressed in regards to improving the experimental platform before evaluation
of the controllers could begin.
The experiments were conducted as follows: each experiment began with
the robot suspended in the air, lifted by an experimenter.
After an en-
coder calibration phase, the robot was servoed to a conﬁguration (q; ˙q) =
(q0; 0) ∈Δ(S ∩Z) and then placed on the ground. Once on the ground,
data collection was initiated and the control was switched to the virtual con-
straint based feedback controller (8.15)–(8.19).
This was possible because
(q; ˙q) = (q0; 0) ∈Δ(S ∩Z) is an asymptotically stable point under the hy-
brid zero dynamics based controller. To initiate walking, an experimenter
pushed the robot’s torso—temporarily fully actuating the robot’s underactu-
ated dynamics—supplying the energy required to land the robot’s state in
the basin of attraction of the Poincar´e return map.
Once in motion, the
robot reached steady-state walking within ten to twenty steps. To stop the
robot, an experimenter grabbed the torso—again, fully actuating the robot’s
dynamics—slowing the robot to a stop in double support. This ability to in-
teract with the robot’s dynamics by pushing on the robot is a consequence of
the zero dynamics’ parameterization by θ(q). Through mechanical coupling,
forces on the robot drive θ(q) which, in turn, determine the evolution of the
robot’s actuated DOF. Figure 8.6 gives video frames of RABBIT taking a
step for a typical walking motion. Videos of these experiments are available
at [239,240].
8.3.1.1
Walking at a Fixed Rate
These ﬁrst two experiments illustrate the performance of controllers designed
via the theoretical framework presented in Sections 6.1–6.3.
Experiment 1: Walking at 0.7 m/s:
In this ﬁrst experiment, a feedback
controller was designed to induce stable walking at an average rate of 0.7 m/s.
The experiment lasted approximately 93 seconds during which RABBIT took
170 steps. Figures 8.7–8.12 are plots of various quantities of interest over a
© 2007 by Taylor & Francis Group, LLC

226
Feedback Control of Dynamic Bipedal Robot Locomotion
Figure 8.6. Video frames of RABBIT taking a step. The interval between
frames is 120 ms. Note the safety cable attached to the boom to provide a
measure of safety.
© 2007 by Taylor & Francis Group, LLC

Experimental Results for Walking
227
q1 (rad)
3
3.2
3.4
3.6
q2 (rad)
3
3.2
3.4
3.6
e1 (rad)
t (sec)
35
36
37
38
−0.04
−0.02
0
0.02
0.04
e2 (rad)
t (sec)
35
36
37
38
−0.04
−0.02
0
0.02
0.04
q3 (rad)
−0.5
−0.4
−0.3
−0.2
−0.1
q4 (rad)
−0.5
−0.4
−0.3
−0.2
−0.1
e3 (rad)
t (sec)
35
36
37
38
−0.04
−0.02
0
0.02
0.04
e4 (rad)
t (sec)
35
36
37
38
−0.04
−0.02
0
0.02
0.04
Figure 8.7. RABBIT walking at 0.7 m/s: joint angles qi and errors ei =
qi −hd,i, i = 1 to 4, versus time. Actual joint trajectories are solid and hd,i
for i = 1, . . . , 4 are dashed.
© 2007 by Taylor & Francis Group, LLC

228
Feedback Control of Dynamic Bipedal Robot Locomotion
˙q1 (rad/sec)
t (sec)
35
36
37
38
−2
0
2
˙q2 (rad/sec)
t (sec)
35
36
37
38
−2
0
2
˙q3 (rad/sec)
t (sec)
35
36
37
38
−2
0
2
˙q4 (rad/sec)
t (sec)
35
36
37
38
−2
0
2
Figure 8.8. RABBIT walking at 0.7 m/s: joint velocities versus time. Actual
joint trajectories are solid and (∂hd,i/∂ˆθ) ˙ˆθ for i = 1, . . . , 4 are dashed.
q5 (rad)
t (sec)
35
35.5
36
36.5
37
37.5
38
−0.1
−0.05
0
Figure 8.9. RABBIT walking at 0.7 m/s: q5 versus time.
© 2007 by Taylor & Francis Group, LLC

Experimental Results for Walking
229
u1 (Nm)
−100
35
36
37
38
0
100
u2 (Nm)
−100
35
36
37
38
0
100
u3 (Nm)
−100
35
36
37
38
0
100
u4 (Nm)
−100
35
36
37
38
0
100
Figure 8.10. RABBIT walking at 0.7 m/s: control signals versus time.
φh (rev)
t (sec)
20
40
60
80
100
0
0
2
4
6
Figure 8.11. RABBIT walking at 0.7 m/s: horizontal boom angle, φh, versus
time.
© 2007 by Taylor & Francis Group, LLC

230
Feedback Control of Dynamic Bipedal Robot Locomotion
step length (m)
t (sec)
0.34
0.36
0.38
0.4
0.42
0
20
40
60
80
100
step duration (sec)
t (sec)
0.5
0.55
0.65
0
20
40
60
80
100
0.6
¯ν (m/s)
t (sec)
0
20
40
60
80
100
0.6
0.7
0.8
Figure 8.12. RABBIT walking at 0.7 m/s: step length, step duration, and
average walking rate versus time. Circles represent steps taken by the outer
leg, squares represent steps taken by the inner leg.
© 2007 by Taylor & Francis Group, LLC

Experimental Results for Walking
231
representative time interval containing approximately ﬁve steps. Figures 8.7
Figure 8.10 gives the commanded
control signals. The peak commanded torque is less than 100 Nm, two thirds of
the actuators’ 150 Nm maximum. Figure 8.9 gives the trace of the torso angle.
Note the torso angle is not a directly controlled quantity. Figure 8.11 gives the
trace of the horizontal angular displacement of the boom, φh. As indicated
by Fig. 8.11, the robot took approximately six laps about the center stand to
complete the 170 steps. Note the constant slope and monotonicity of the trace
of φh indicating smooth, horizontal motion of the hip. Figure 8.12 gives the
step length, step duration, and the ratio of step length to step duration, step
rate. The data points of Fig. 8.12 were calculated upon swing foot touchdown
declaration. The step lengths given in Fig. 8.12 were calculated using the
measured joint angles and the robot’s identiﬁed link lengths. In each plot of
Fig. 8.12, squares indicate data points corresponding to the inner leg—the
leg closest to the center stand—and circles indicate data points corresponding
to the outer leg—the leg farthest from the center stand. Labeling the data
points in this way reveals diﬀerences between the inner and outer legs in step
length, step duration, and step rate. Since the two legs are, to within close
approximation, identical, the diﬀerence is likely due to the non-sagittal plane
dynamics created by the boom system. Aside from the diﬀerences between
the inner and outer legs, the variations in step length and step duration may
be attributed to several factors.
The ones believed to be most signiﬁcant
are nonuniformity in the walking surface, variability in the declaration of
leg touchdown, and ﬂexibility in the robot’s joints. Careful comparison of
Fig. 8.12 with Fig. 8.11 reveals that the step rate is periodic in φh.
The
periodic change with φh is due to nonuniformity in the walking surface: one
section of the wood and rubber walking surface was not ﬁrmly lying on the
ground because of unevenness in the underlying concrete ﬂoor.
Experiment 2: Demonstration of Robustness to Perturbations:
The
second experiment demonstrates the robustness of controllers designed via
the method of Sections 6.1–6.3. Two types of perturbations were applied to
RABBIT while it was being feedback controlled to walk at 0.9 m/s. The ﬁrst
perturbation was a 10 kg mass added to the torso, which resulted in a shift of
the average walking rate from 0.9 m/s to 1.0 m/s. (In the ﬁfth experiment,
described in Section 8.3.1.2, it will be demonstrated that the designed walk-
ing rate may be recovered through the use of event-based integral control.) In
addition to the sizable perturbation to the robot’s model (the robot’s nominal
mass is 32 kg), the second perturbation was aperiodic, short duration forces
applied to the RABBIT’s torso by an experimenter in both the forward and
reverse directions. Despite these signiﬁcant perturbations, RABBIT did not
fall; the experiment lasted approximately 74 seconds during which RABBIT
took 164 steps.
Figures 8.13 and 8.14 are plots of the actual and desired joint trajectories
© 2007 by Taylor & Francis Group, LLC
and 8.8 give the tracking performance.

232
Feedback Control of Dynamic Bipedal Robot Locomotion
q1 (rad)
t (sec)
2.8
3
3.2
3.4
3.6
20
25
30
q2 (rad)
t (sec)
2.8
3
3.2
3.4
3.6
20
25
30
q3 (rad)
t (sec)
20
25
30
−0.5
−0.4
−0.3
−0.2
−0.1
q4 (rad)
t (sec)
20
25
30
−0.5
−0.4
−0.3
−0.2
−0.1
Figure 8.13. RABBIT robustness demonstration: joint angles versus time.
Actual joint trajectories are solid and hd,i for i = 1, . . . , 4 are dashed.
u1 (Nm)
t (sec)
20
25
30
−100
0
100
u2 (Nm)
t (sec)
20
25
30
−100
0
100
u3 (Nm)
t (sec)
20
25
30
−100
0
100
u4 (Nm)
t (sec)
20
25
30
−100
0
100
Figure 8.14.
RABBIT robustness demonstration: control signals versus
time.
© 2007 by Taylor & Francis Group, LLC

Experimental Results for Walking
233
q1 (rad)
t (sec)
3
3.2
3.4
3.6
40
45
50
55
q2 (rad)
t (sec)
3
3.2
3.4
3.6
40
45
50
55
q3 (rad)
t (sec)
40
45
50
55
−0.5
−0.4
−0.3
−0.2
−0.1
q4 (rad)
t (sec)
40
45
50
55
−0.5
−0.4
−0.3
−0.2
−0.1
Figure 8.15. RABBIT transitioning: joint angles versus time. Actual joint
trajectories are solid and hd,i for i = 1, · · · , 4 are dashed.
and the commanded control signals over a representative time interval in
which the robot was pushed in the forward direction (at approximately 20.5
seconds) and in the reverse direction (at approximately 29 seconds). Note
that the change in the reference motion, hd, during the application of these
forces. The commanded control signals are within the actuators’ limits, except
during the force perturbations when they saturate (see Fig. 8.14).
8.3.1.2
Transitioning and Event-Based Within-Stride Control
The four experiments below illustrate the transition controller developed in
Section 7.2 and the event-based controller developed in Section 7.3. Both
techniques exploit freedom in the output function parameter choice while
respecting invariance of the associated zero dynamics manifold.
Experiment 3: Transitioning Between Controllers:
The third exper-
iment demonstrates the use of the one-step transition controllers presented in
Section 7.2. A transition controller designed according to Theorem 7.1 is able
to eﬀect a transition from the region of attraction of one walking controller
to another by steering the state of the system using the same technical ma-
chinery used to render the zero dynamics invariant. The application of the
transition controller is synchronized with swing leg touchdown.
For the experiment, a set of controllers was designed for walking at con-
stant speeds of 0.5 m/s to 0.8 m/s, at increments of 0.1 m/s. The transition
© 2007 by Taylor & Francis Group, LLC

234
Feedback Control of Dynamic Bipedal Robot Locomotion
u1 (Nm)
t (sec)
40
45
50
55
−100
0
100
u2 (Nm)
t (sec)
40
45
50
55
−100
0
100
u3 (Nm)
t (sec)
40
45
50
55
−100
0
100
u4 (Nm)
t (sec)
40
45
50
55
−100
0
100
Figure 8.16. RABBIT transitioning: control signals versus time.
¯ν (m/s)
t (sec)
20
40
60
80
0
0
0.2
0.4
0.6
0.8
Figure 8.17. RABBIT transitioning: average walking rate versus time. Cir-
cles represent steps taken by the outer leg, squares represent steps taken by
the inner leg. The desired walking rate is indicated by a solid line.
© 2007 by Taylor & Francis Group, LLC

Experimental Results for Walking
235
q1 (rad)
t (sec)
2.8
3
3.2
3.4
3.6
0
50
100
q2 (rad)
t (sec)
2.8
3
3.2
3.4
3.6
0
50
100
q3 (rad)
t (sec)
0
50
100
−0.5
−0.4
−0.3
−0.2
−0.1
q4 (rad)
t (sec)
0
50
100
−0.5
−0.4
−0.3
−0.2
−0.1
Figure 8.18. Using I-control to change ﬁxed point of RABBIT’s walking
rate: joint angles versus time. Actual joint trajectories are solid and hd,i for
i = 1, · · · , 4 are dashed.
controller methodology was then employed to vary the commanded walking
speed from 0.5 m/s to 0.8 m/s, by 0.1 m/s increments, and then from 0.8 m/s
to 0.5 m/s, in 0.1 m/s decrements, after which, this entire sequence was re-
peated (see Fig. 8.17). The transition controllers were designed according to
(7.11) and (7.13). The experiment lasted approximately 86 seconds during
which RABBIT took 139 steps.
Figures 8.15 and 8.16 are plots of the actual and desired joint trajectories
and the commanded control signals over a representative time interval of ap-
proximately twenty-six steps where the control was transitioned from 0.6 m/s
to 0.8 m/s. Note that changes in the reference motion, hd,i, occur with no
visible diﬀerence in error, or in commanded control signal.
Experiment 4: Using Event-Based Integral Control to Modify the
Fixed Point:
In this fourth experiment, the same feedback used in the ﬁrst
experiment to induce walking at 0.7 m/s was applied with the addition of an
event-based PI control, developed in Section 7.3, to modify the steady-state
average walking rate from 0.7 m/s to 0.6 m/s. The event-based control acts
through modiﬁcations of the B´ezier polynomial coeﬃcients at double support
events.
The event-based control was performed on the stance and swing leg relative
angles, q1 and q2, which results in a change of the torso angle; see Fig. 6.13(a).
© 2007 by Taylor & Francis Group, LLC

236
Feedback Control of Dynamic Bipedal Robot Locomotion
q5 (rad)
t (sec)
20
40
60
80
100
−0.1
0
0
0.1
0.2
Figure 8.19. Using I-control to change ﬁxed point of RABBIT’s walking
rate: q5 versus time.
u1 (Nm)
t (sec)
50
−100
0
0
100
100
u2 (Nm)
t (sec)
50
−100
0
0
100
100
u3 (Nm)
t (sec)
50
−100
0
0
100
100
u4 (Nm)
t (sec)
50
−100
0
0
100
100
Figure 8.20. Using I-control to change ﬁxed point of RABBIT’s walking
rate: control signals versus time.
w (rad)
t (sec)
20
40
60
80
100
0
0
0.1
0.2
Figure 8.21. Using I-control to change ﬁxed point of RABBIT’s walking
rate: w versus time.
© 2007 by Taylor & Francis Group, LLC

Experimental Results for Walking
237
¯ν (m/s)
t (sec)
20
40
60
80
100
0
0
0.2
0.4
0.6
0.8
Figure 8.22. Using I-control to change ﬁxed point of RABBIT’s walking
rate: average walking rate versus time. Circles represent steps taken by the
outer leg, squares represent steps taken by the inner leg.
This was accomplished by setting δα to zero except for
δαi
j = 1, for i = 1, 2
and
j = 2, . . . , M.
(8.20)
The controller (7.23) with set-point η∗= 0.6 and control gains KI = 0.06 and
KP = 0 was applied on the 15th step (at approximately 11 seconds). The
proportional gain, KP , was set to zero because of the noise introduced by
the variance in step rate. The experiment lasted approximately 110 seconds
during which RABBIT took 181 steps. Figure 8.21 gives the value of w given
in (7.23) versus time. Note that the ringing in w and, consequently, in average
walking rate is likely due to the integral gain being set too high; see Fig. 8.22.
Yet, if that is indeed the case, it still took over 50 steps for the average walking
rate to converge to 0.6 m/s.
Figures 8.18–8.20 are plots of various quantities of interest for the entire
experiment. Note the change in the reference motion, hd, for q1 and q2 with
no visible diﬀerence (in particular, no spikes) in commanded control signal.
Figure 8.19 gives the torso angle change resulting from the changing of q1 and
q2 (see the measurement conventions given in Fig. 6.13(a)).
Experiment 5: Using Event-Based Integral Control to Reject a Per-
turbation:
In the ﬁfth experiment, the same feedback used in the ﬁrst ex-
periment to induce walking at 0.7 m/s was applied and a 10 kg mass was
attached to the torso. This perturbation resulted in a shift of the average
walking rate from 0.7 m/s to approximately 0.85 m/s (the change in average
walking rate was determined in a separate experiment not reported here).
The average walking rate of 0.7 m/s was recovered using the event-based in-
tegral control described in the previous experiment, but with KI = 0.04 and
η∗= 0.7 applied on the 14th step (at approximately 11 seconds). The experi-
ment lasted approximately 95 seconds during which RABBIT took 164 steps.
Figure 8.24 gives the value of w given in (7.23) versus time. Again, note that
the ringing in w and, consequently, in average walking rate (see Fig. 8.25) is
© 2007 by Taylor & Francis Group, LLC

238
Feedback Control of Dynamic Bipedal Robot Locomotion
q5 (rad)
t (sec)
20
40
60
80
100
−0.1
0
0
0.1
Figure 8.23. Using I-control to reject a perturbation for RABBIT: q5 versus
time.
w (rad)
t (sec)
20
40
60
80
100
0
0
0.05
0.1
Figure 8.24. Using I-control to reject a perturbation for RABBIT: w versus
time.
¯ν (m/s)
t (sec)
0
20
40
60
80
100
0.6
0.8
1
Figure 8.25. Using I-control to reject a perturbation for RABBIT: average
walking rate versus time.
Circles represent steps taken by the outer leg,
squares represent steps taken by the inner leg.
© 2007 by Taylor & Francis Group, LLC

Experimental Results for Walking
239
q5 (rad)
t (sec)
20
25
30
35
−0.1
0
0.1
Figure 8.26. Using I-control to stop RABBIT: q5 versus time.
w (rad)
t (sec)
10
20
30
40
0
0
0.05
0.1
Figure 8.27. Using I-control to stop RABBIT: w versus time.
likely due to the integral gain being too large. The torso angle trace reﬂecting
the action of the event-based integral control is given in Fig. 8.23.
This
regulation of the torso angle by integral control was able to recover the 0.7 m/s
average walking rate (see Fig. 8.25).
Experiment 6:
Using Event-Based Integral Control to Stop the
Robot:
In the sixth and ﬁnal experiment, event-based integral control was
used to bring RABBIT from a steady-state average walking rate of 0.5 m/s
to a stop. This was achieved by slowing the average walking rate of RABBIT
to where it no longer had enough kinetic energy to successfully complete a
step; for further explanation, see Fig. 6.7, which provides a graphical inter-
pretation of (5.79) and (5.80). The integral control described in the fourth
experiment (based on Section 8.3.1.2) with KI = 0.04 and η∗= 0 was applied
on the 34th step (at approximately 29 seconds) and RABBIT stopped ad-
vancing by the 39th step (at approximately 34 seconds); see Fig. 8.28. After
“stopping,” RABBIT rocked back and forth until its remaining kinetic energy
was dissipated.
Figure 8.26 is a plot of the torso angle for a time interval including a portion
of the steady-state walking cycle and the stopping of RABBIT. The increase
© 2007 by Taylor & Francis Group, LLC

240
Feedback Control of Dynamic Bipedal Robot Locomotion
¯ν (m/s)
t (sec)
10
20
30
40
0
0
0.2
0.4
0.6
0.8
Figure 8.28. Using I-control to stop RABBIT: average walking rate versus
time. Circles represent steps taken by the outer leg, squares represent steps
taken by the inner leg.
in the torso angle4 reﬂects the action of the integral control; see Figs. 8.26
and 8.27.
8.3.1.3
Further Experimental Work on RABBIT
Further experimental work on RABBIT has been carried out by Sabourin5 et
al. [198]. Successful walking is demonstrated with ground height variations
from 0 to 15 mm. Robustness to impulsive forces was conﬁrmed as in Ex-
periment 2 of Section 8.3.1.1, and the regulation of walking speed through
control of the torso angle was conﬁrmed as in Experiment 4 of Section 8.3.1.1.
Finally, the ability of the robot to walk backward under a constant applied
force was conﬁrmed, just as in [43] (see A nice bonus: reverse is built into the
controller).
The control algorithm used in [198] is also based on virtual constraints, with
the evolution of the joints tied to the absolute orientation of the stance leg.6
The controller is implemented using a neural network. The virtual constraints
as learned by the neural network do not necessarily create a hybrid zero dy-
namics, so this work is more closely related to the control design illustrated
in Section 6.6.1, which is based on [98], than the results of Chapter 5, which
are based on [245].
4An increase means the torso becomes more upright or leans back; see Fig. 6.13(a).
5On p. 843 of [198], it is stated that the hybrid zero dynamics cannot be applied to robots
with feet. This is incorrect as seen in Chapter 10 and [54]. On the same page, it is stated
that “[the hybrid zero dynamics] is based on a simpliﬁed mechanical model and does not,
for instance, take into account the realistic characteristics of the footground contact,” which
is also incorrect. The hybrid zero dynamics is exactly an invariant subsystem of the robot
under closed-loop control. No approximations are involved. The model of the foot-ground
contact as captured by the hybrid zero dynamics is just as accurate as the model used in
the full-dimensional robot model.
6In this work, in the single support phase, the angle of the stance knee is regulated to a
constant value, hence the angle of the stance leg makes sense.
© 2007 by Taylor & Francis Group, LLC

Experimental Results for Walking
241
8.3.2
Experimental Validation Using ERNIE
This section describes two experiments that demonstrate the use of controllers
designed via the theoretical framework given in Chapter 6. The experiments
conﬁrm that walking with springs in parallel with the knee joints increases
the energetic eﬃciency of walking [5].
The experiments were conducted in a similar fashion to those conducted
on RABBIT; see Section 8.3.1. The primary diﬀerence was in the initiation
of the walking experiment. Once ERNIE’s encoders had been calibrated, it
was placed on the treadmill and the controller was switched to the virtual
constraint based feedback controller, (8.15)–(8.19), with the treadmill at zero
speed. To initiate walking, an experimenter held the robot’s boom stationary
while the treadmill’s speed was ramped up. As a consequence of the zero
dynamics’ parameterization by forward progression—which is relative to a
frame ﬁxed to the treadmill’s belt—the robot’s gait naturally synchronized
with the treadmill. Once the treadmill’s speed matched that of the gait design,
the experimenter then let go of the boom. To stop the robot, the experimenter
grabbed the boom, holding it stationary, and the treadmill’s speed was ramped
down. Videos of these experiments are available at [239,240].
8.3.2.1
Experiment 1: Walking at a Fixed Rate
For this ﬁrst experiment, a feedback controller was designed to induce stable
walking at an average rate of 0.32 m/s. Using this gait, ERNIE is able to
walk indeﬁnitely on the treadmill. Approximately 60 seconds of data during
which ERNIE took 87 steps are presented here.
Figures 8.29–8.31 are plots of various quantities of interest over a represen-
tative time interval containing approximately ten steps. Figure 8.29 gives the
tracking performance. Note that the measurement conventions of ERNIE’s
coordinates are the same as RABBIT’s; see Fig. 6.13(a). Figure 8.30 gives
the evolution of the torso angle. Figure 8.31 gives the commanded control
signals. The peak commanded torque is 42 Nm. Note the torso angle is not
a directly controlled quantity. Figure 8.32 gives the trace of the horizontal
displacement of the hips with respect to a frame ﬁxed to the treadmill’s belt.
Note the constant slope and monotonicity of the trace of hip position, in-
dicating smooth, horizontal motion. Figure 8.33 gives the step length, step
duration, and the ratio of step length to step duration, step rate. The data
points of Fig. 8.33 were calculated upon swing foot touchdown declaration.
The step lengths given in Fig. 8.33 were calculated using the measured joint
angles and the robot’s designed link lengths. In each plot of Fig. 8.33, squares
indicate data points corresponding to the inner leg—the leg closest to the
wall—and circles indicate data points corresponding to the outer leg—the leg
farthest from the wall. Labeling the data points in this way reveals diﬀerences
between the inner and outer legs in step length, step duration, and step rate.
The diﬀerences are likely due to the non-sagittal plane kinematics created by
the boom system.
© 2007 by Taylor & Francis Group, LLC

242
Feedback Control of Dynamic Bipedal Robot Locomotion
3.2
3.4
3.6
20
22
24
26
0.1
0
0.1
q1 (rad)
e1 (rad)
t (sec)
3.2
3.4
3.6
20
22
24
26
0.1
0
0.1
q2 (rad)
e2 (rad)
t (sec)
1
0.5
0
0.5
20
22
24
26
0.2
0
0.2
q3 (rad)
e3 (rad)
t (sec)
1
0.5
0
0.5
0.2
0
0.2
20
22
24
26
q4 (rad)
e4 (rad)
t (sec)
Figure 8.29. ERNIE walking at 0.32 m/s: joint angles qi and errors ei =
qi −hd,i, i = 1 to 4, versus time. Actual joint trajectories are solid and hd,i
for i = 1, . . . , 4 are dashed.
Using the commanded current (see Fig. 8.31) and joint velocity estimated
from the measured joint angles (see Fig. 8.29), the average power consumed
during the experiment by ERNIE’s four actuators was estimated to be 10.1 W.
Note that this estimate does not include estimates of any of the ampliﬁer
losses, the power consumed by the computers and sensors, etc.
Although
the estimate only provides a rough approximation of the power consumed, it
allows us to compare with the case of walking at the same rate with springs
in parallel with the knees; see the end of Section 8.3.2.2.
8.3.2.2
Experiment 2: Walking at a Fixed Rate with Springs in
Parallel with the Knees
For the second experiment, a feedback controller was designed to induce stable
walking at an average rate of 0.32 m/s using a model of the robot that included
© 2007 by Taylor & Francis Group, LLC

Experimental Results for Walking
243
20
21
22
23
24
25
26
−0.1
−0.05
0
0.05
q5 (rad)
t (sec)
Figure 8.30. ERNIE walking at 0.32 m/s: q5 versus time.
20
22
24
26
50
0
50
20
22
24
26
50
0
50
20
22
24
26
50
0
50
t (sec)
20
22
24
26
50
0
50
t (sec)
u1 (Nm)
u2 (Nm)
u3 (Nm)
u4 (Nm)
Figure 8.31. ERNIE walking at 0.32 m/s: control signals versus time.
0
10
20
30
40
50
60
0
5
10
15
20
(m)
t (sec)
Figure 8.32. ERNIE walking at 0.32 m/s: hip horizontal displacement with
respect to a frame ﬁxed to the treadmill’s belt versus time.
© 2007 by Taylor & Francis Group, LLC

244
Feedback Control of Dynamic Bipedal Robot Locomotion
0
10
20
30
40
50
60
0.2
0.22
0.24
0.26
0
10
20
30
40
50
60
0.4
0.6
0.8
1
0
10
20
30
40
50
60
0.2
0.3
0.4
0.5
step length (m)
step duration (sec)
¯ν (m/s)
t (sec)
t (sec)
t (sec)
Figure 8.33. ERNIE walking at 0.32 m/s: step length, step duration, and
average walking rate versus time. Circles represent steps taken by the outer
leg, squares represent steps taken by the inner leg.
© 2007 by Taylor & Francis Group, LLC

Experimental Results for Walking
245
springs in parallel with the knee joints. The stiﬀness of each knee’s spring
was 16 Nm/rad and the springs’ rest positions corresponded to q3 = q4 =
−0.06 rad (−3.4 deg). As in the previous experiment, using this gait, ERNIE
is able to walk indeﬁnitely on the treadmill. Approximately 60 seconds of
data during which ERNIE took 88 steps are presented here.
Figures 8.34–8.36 are plots of various quantities of interest over a represen-
tative time interval containing approximately ten steps. Figure 8.34 gives the
tracking performance. Figure 8.35 gives the evolution of the torso angle. Fig-
ure 8.36 gives the commanded control signals. The peak commanded torque
is 41 Nm. Figure 8.37 gives the trace of the horizontal displacement of the
hips. Note the constant slope and monotonicity of the trace of hip position
indicating smooth, horizontal motion. Figure 8.38 gives the step length, step
duration, and the ratio of step length to step duration, step rate.
Using the same method as in the previous experiment, the average power
consumed during the experiment by ERNIE’s four actuators was estimated
to be 8.9 W, which is 88% of the average power consumed when walking
without springs; see Section 8.3.2.1. Investigations into the energetic beneﬁts
of (parallel joint) compliance are ongoing at The Ohio State University and a
host of other places around the world [58,159,162,231].
© 2007 by Taylor & Francis Group, LLC

246
Feedback Control of Dynamic Bipedal Robot Locomotion
3.2
3.4
3.6
0.1
0
0.1
26
28
30
32
q1 (rad)
e1 (rad)
t (sec)
3.2
3.4
3.6
0.1
0
0.1
26
28
30
32
q2 (rad)
e2 (rad)
t (sec)
1
0.5
0
0.5
26
28
30
32
0.2
0
0.2
q3 (rad)
e3 (rad)
t (sec)
1
0.5
0
0.5
0.2
0
0.2
26
28
30
32
q4 (rad)
e4 (rad)
t (sec)
Figure 8.34. ERNIE walking at 0.32 m/s with springs in parallel with the
knee joints: joint angles qi and errors ei = qi −hd,i, i = 1 to 4, versus time.
Actual joint trajectories are solid and hd,i for i = 1, . . . , 4 are dashed.
25
26
27
28
29
30
31
32
−0.1
−0.05
0
0.05
q5 (rad)
t (sec)
Figure 8.35. ERNIE walking at 0.32 m/s with springs in parallel with the
knee joints: q5 versus time.
© 2007 by Taylor & Francis Group, LLC

Experimental Results for Walking
247
26
28
30
32
50
0
50
26
28
30
32
50
0
50
26
28
30
32
50
0
50
t (sec)
26
28
30
32
50
0
50
t (sec)
u1 (Nm)
u2 (Nm)
u3 (Nm)
u4 (Nm)
Figure 8.36. ERNIE walking at 0.32 m/s with springs in parallel with the
knee joints: control signals versus time.
0
10
20
30
40
50
60
0
5
10
15
20
(m)
t (sec)
Figure 8.37. ERNIE walking at 0.32 m/s with springs in parallel with the
knee joints: hip horizontal displacement with respect to a frame ﬁxed to the
treadmill’s belt versus time.
© 2007 by Taylor & Francis Group, LLC

248
Feedback Control of Dynamic Bipedal Robot Locomotion
0
10
20
30
40
50
60
0.2
0.22
0.24
0.26
0
10
20
30
40
50
60
0.65
0.7
0.75
0.8
0
10
20
30
40
50
60
0.32
0.34
0.36
0.38
0.4
step length (m)
step duration (sec)
¯ν (m/s)
t (sec)
t (sec)
t (sec)
Figure 8.38. ERNIE walking at 0.32 m/s with springs in parallel with the
knee joints: step length, step duration, and average walking rate versus time.
Circles represent steps taken by the outer leg, squares represent steps taken
by the inner leg.
© 2007 by Taylor & Francis Group, LLC

9
Running with Point Feet
This chapter addresses the design and analysis of asymptotically stable run-
ning gaits for planar bipedal robots with point feet. Here, running is deﬁned
loosely as forward motion with alternation of single support (one leg on the
ground) and ﬂight (no contact with the ground). Without forward motion,
the robot would be jumping in place, or “jogging” in place. The principal ob-
jective is to present a time-invariant feedback controller that yields provably
asymptotically stable periodic running motions. One of the keys to accom-
plishing this objective will be to design the feedback controller on the basis
of virtual constraints, as was done in Chapter 6 for walking. This will lead
to the notion of a hybrid zero dynamics for running, and to the closed-form
computation of the restricted Poincar´e return map.
A ﬁrst set of experiments to use the theory of running developed in this
chapter is presented in Section 9.9. In these experiments, RABBIT executed
six running steps on multiple occasions, but a steady-state running gait was
not achieved.
The observed gait was remarkably human-like, having long
stride lengths (approx. 50 cm or 36% of body length), ﬂight phases of signiﬁ-
cant duration (approx. 100 ms or 25% of step duration), an upright posture,
and an average forward rate of 0.6 m/s.
The detailed hypotheses on the class of robots and the class of running gaits
to which the results apply were given in Chapter 3. In particular, Section 3.5
used the method of Lagrange to derive dynamic models of the stance, ﬂight,
and impact phases. These models were assembled into an overall hybrid model
of running in Section 3.5.4, which for convenience is repeated here:
Σf :
⎧
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎩
Xf = T Qf
Ff : ( ˙xf) = ff(xf) + gf(xf)u
Ss
f = {xf ∈Xf | Hs
f (xf) = 0}
T s
f : x+
s = Δs
f(x−
f )
(9.1)
Σs :
⎧
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎩
Xs = T Qs
Fs : ( ˙xs) = fs(xs) + gs(xs)u
Sf
s = {xs ∈Xs | Hf
s(xs) = 0}
T f
s : x+
f = Δf
s(x−
s )
where Ff is the ﬂow on state manifold Xf, Ss
f is the switching hyper-surface for
249
© 2007 by Taylor & Francis Group, LLC

250
Feedback Control of Dynamic Bipedal Robot Locomotion
transitions between Xf and Xs, and T s
f : Ss
f →Xs is the transition function
applied when xf ∈Ss
f .
The symbol “f” denotes the ﬂight phase and the
symbol “s” denotes the stance phase. The superscripts “+” and “−” deﬁne
the beginning and end of a phase respectively.
When they are applied to
a variable that is only deﬁned for a single phase, such as θs, then there is
no ambiguity, and hence, for example, θ+
s will be used instead of θs+
s . For
a variable such as xcm, which is used in both ﬂight and stance phases, the
notation xs+
cm, xs−
cm, xf+
cm, and xf−
cm is used. The superscript “∗” occasionally
is used to denote the value of a variable on a periodic orbit; an exception
is u∗, which denotes a feedback control rendering a zero dynamics manifold
invariant.
In this chapter, angles are measured with a clockwise convention so that in
the stance phase the angular momentum of the robot’s center of mass about
the contact point with the ground is positive when the robot is moving left
to right.
9.1
Related Work
In the early 1980s, Raibert proposed an elegant conceptualization of running
in terms of a one-legged, prismatic-kneed hopper [184, 185]. He decomposed
his control actions into three parts—hopping height, foot touchdown angle,
and body posture—and emphasized the role of symmetry in designing stable
running motions. The remarkable success of Raibert’s control law motivated
others to analytically characterize its stability [76,139], and to further inves-
tigate the role of passive elements in achieving eﬃcient running with a hop-
per [4]. Raibert’s control scheme has been augmented with leg-coordination
logic to achieve running in prismatic-kneed bipeds and quadrupeds [116,185].
Various attempts have been made to extend a Raibert-style controller to a
robot with revolute joints. Building on the ideas of Koditschek et al. [27,81,
165,188], a spring-loaded inverted-pendulum model—essentially a prismatic-
kneed hopper with a radially symmetric body and a massless leg—was ap-
proximately embedded into a one-legged, revolute-jointed robot with an an-
kle, knee, and hip [201, 202]. With this approach, the center of mass of the
robot could be nicely controlled.
However, there was no natural “posture
principle” to specify the evolution of the remaining degrees of freedom of the
robot; also, the ballistic phase was diﬃcult to address, due to underactuation
and the non-holonomic constraint arising from conservation of angular mo-
mentum. Various methods for controlling the attitude of bodies undergoing
ballistic motion have been studied; see [48, 88, 141, 158, 199] and references
therein.
In late 2003, both Iguana Robotics and Sony announced (separate) exper-
© 2007 by Taylor & Francis Group, LLC

Running with Point Feet
251
imental demonstrations of running for bipedal robots with revolute knees.
In early 2004, running was announced for another humanoid robot, HRP-
2LR [132]. In December 2004, Honda’s robot, ASIMO, achieved running at
3 km/hr (0.8 m/s) with a 50 ms ﬂight phase using a controller based on “pos-
ture control.” A year later, ASIMO ran at a new top speed of 6 km/hr. The
reader is invited to seek videos of these robots on the web. The controller
of Sony’s robot was based on the ZMP, that of Iguana Robotics is based
on central pattern generators (CPGs), and HRP-2LR uses “resolved momen-
tum.” To our best knowledge, only two other bipeds with revolute knees have
been designed to perform running—Johnnie in Munich, Germany [175] and
RABBIT in Grenoble, France [26,43].
The computation of optimal running trajectories has been studied in [77].
Trajectory tracking for running was investigated on a simulation model of
the Honda biped, ASIMO, [131]. A nominal trajectory was computed oﬄine,
and then during the ballistic phase, an online trajectory modiﬁcation was
made to allow Raibert-like control of foot placement. A control strategy for
running that does not rely on trajectory tracking was studied in [126], where
a Raibert-like controller was used on a planar robot with a torso and two
prismatic-kneed legs.
The control action sought to excite natural passive
solutions of the dynamics by restoring energy lost at touchdown.
9.2
Qualitative Discussion of the Control Law Design
This section describes in qualitative terms a control law design for planar
bipedal running that is presented in detail in Section 9.3, analyzed in Sec-
tion 9.4, and illustrated via simulations on RABBIT in Section 9.5. An im-
portant diﬀerence with respect to the control law designs presented for walking
in Chapters 5 and 6 is that running has two continuous-time phases, stance
and ﬂight, and discrete transitions between them. Moreover, the ﬂight phase
presents more complications for controller design than does the stance phase:
the ﬂight phase has two additional degrees of freedom and angular momentum
about the center of mass is conserved.
9.2.1
Analytical Tractability through Invariance,
Attractivity, and Conﬁguration Determinism at
Transitions
Above all, the control strategy is constructed to facilitate the stability analysis
of the closed-loop hybrid system consisting of the robot, the running surface,
and the feedback controller. As in walking, the philosophy is that if stability
analysis can be rendered suﬃciently simple, then it becomes possible to ex-
© 2007 by Taylor & Francis Group, LLC

252
Feedback Control of Dynamic Bipedal Robot Locomotion
plore eﬃciently a large set of asymptotically stable running gaits in order to
ﬁnd one that meets additional performance objectives, such as minimum en-
ergy consumption per distance traveled for a given average speed, or minimum
peak-actuator power demand.
The controller will be hybrid, with continuous-time feedback signals applied
in the stance and the ﬂight phases, and discrete (or event-based) updates of
controller parameters performed at the transitions between phases. The de-
sign of the controller uses two principles that are ubiquitous in nonhybrid
systems, namely invariance and attractivity, with the notion of invariance
being extended to hybrid systems so as to include the discrete transitions
as well as the continuous ﬂow of the Lagrangian dynamics. Hybrid invari-
ance will lead to the creation of a low-dimensional hybrid subsystem of the
full-dimensional closed-loop system. The low-dimensional hybrid subsystem
is called the hybrid zero dynamics of running. Attractivity will mean that
trajectories of the full-dimensional closed-loop system converge locally and
suﬃciently rapidly to those of the hybrid zero dynamics so that existence and
stability of periodic running motions can be restricted to the study of the
hybrid zero dynamics. The Poincar´e return map for the hybrid zero dynam-
ics will turn out to be one-dimensional. When transitions between phases
in the hybrid zero dynamics occur at known conﬁgurations of the robot—
this is called conﬁguration determinism at transitions—it will turn out that
the Poincar´e return map can be computed in closed form, thereby rendering
stability analysis of the closed-loop system tractable.
9.2.2
Desired Geometry of the Closed-Loop System
The objective of the control law design is to achieve the internal structure of
the closed-loop system that is depicted in Fig. 9.1. The vertical surfaces Sf
s and
Ss
f represent the points in the state space where the transitions from stance
to ﬂight and from ﬂight to stance occur, respectively; see (9.1). The surface
on the left, Zs, is created by the stance-phase controller; it is designed to be
invariant in the usual sense that if the system is initialized in Zs, the solution
of the stance-phase diﬀerential equation remains in Zs until it intersects Sf
s,
at which time the ﬂight phase is initiated. The family of surfaces on the right,
Zf,af, (shown for two values of af, namely, af,1 and af,4) is created by the
ﬂight-phase controller; each surface is designed to be invariant in the usual
sense that if the system is initialized in Zf,af, the solution of the ﬂight-phase
diﬀerential equation remains in Zf,af until it intersects Ss
f , at which time the
stance phase is reinitialized through the impact map, Δs
f. The value of the
parameter af is selected at each transition from stance to ﬂight as a function
of the angular momentum of the robot about the stance leg end, σs−
1 , in such
a way that evolution along the surface Zf,af(σs−
1
) will cause the robot to land
on Zs with a predetermined conﬁguration. This brings out a second form of
invariance that is related to the hybrid nature of the system: the parameter
© 2007 by Taylor & Francis Group, LLC

Running with Point Feet
253
Δs
f
p0
p1
p2
p3
p4
p5
Zs
Zf,af,1
Zf,af,4
Sf
s
Ss
f
Δ(Ss
f ∩Zf,a∗
f )
Sf
s ∩Zs
Ss
f ∩Zf,a∗
f
Figure 9.1. Geometry of the closed-loop system that is achieved with the
controller presented in this chapter. Under the action of the feedback con-
troller, the state of the system evolves on the low-dimensional surfaces Zs and
Zf,af. Consider two strides of a running cycle initiated at the beginning of
stance (at p0). The robot’s state evolves in Zs throughout stance until the
state enters Sf
s (at p1), when two discrete events occur: the robot lifts oﬀ
to begin the ﬂight phase; and the controller selects a value of af that will
be held constant throughout the ﬂight phase. The value of the parameter,
call it af,1, is determined as a function of the angular momentum about the
stance leg end at transition into ﬂight in such a way that the robot will land
in a predetermined conﬁguration. During the ﬂight phase, the state of the
robot evolves in Zf,af,1 until it enters Ss
f (at p2). The impact mapping Δs
f
is then applied and the next stance phase is begun (at p3) and the process
repeats. If the robot terminates the ensuing stance phase (at p4) with an
angular momentum that is diﬀerent than what it had on the previous stride
(at p1), due to conservation of angular momentum about the center of mass
in the ﬂight phase, the robot must evolve on a diﬀerent surface in the ﬂight
phase this time in order to land in the same conﬁguration it had on the pre-
vious landing. The required change in ﬂight-phase evolution is accomplished
by appropriate selection of af,4, which speciﬁes Zf,af,4. By design, the rule for
selecting af results in Ss
f ∩Zf,af,1 = Ss
f ∩Zf,af,4. This common set has been
denoted by Ss
f ∩Zf,a∗
f , where a∗
f is the parameter value corresponding to a
periodic orbit.
© 2007 by Taylor & Francis Group, LLC

254
Feedback Control of Dynamic Bipedal Robot Locomotion
Δ
p0
p1
p2
p3
Zs
Sf
s
Δ(Sf
s ∩Zs)
Sf
s ∩Zs
Figure 9.2. Geometry of the closed-loop system when the ﬂight phase and
the impact map Δs
f are composed to form a generalized impact map Δ that
maps Sf
s ∩Zs to Zs. This is analogous to the geometry that has been designed
into walking in previous chapters. The analogy becomes exact if the robot’s
conﬁguration at the initiation of the stance phase is the same for all points in
Sf
s ∩Zs.
af is selected so that the composition of the ﬂight-phase dynamics with the
impact map Δs
f maps Sf
s ∩Zs back to Zs. This is shown in Fig. 9.1 with an
arrow looping from the end of the ﬂight phase back to the initiation of the
stance phase, and more succinctly in Fig. 9.2, where a generalized impact map
Δ is used to represent the composition of the ﬂight-phase dynamics with Δs
f.
Not shown in either ﬁgure is the behavior of the robot oﬀthe hybrid zero
dynamics. This is where attractivity comes into play. In addition to creating
the invariant surfaces, the feedback controller must also ensure that trajecto-
ries that start oﬀthe surfaces converge to the surfaces. Both the creation of
the invariant surfaces and their attractivity are accomplished with the use of
virtual constraints.
9.3
Control Law Development
Separate state-variable control strategies are developed for the stance and
ﬂight phases of the running cycle. The controller for each phase is formulated
as an output zeroing problem resulting in nontrivial zero dynamics. For the
ﬂight phase, it will be advantageous to allow the control to depend also on the
initial value of the ﬂight state or, equivalently, the ﬁnal value of the stance
state.
© 2007 by Taylor & Francis Group, LLC

Running with Point Feet
255
9.3.1
Stance Phase Control
As in Section 6.4, deﬁne the output
ys = hs(q) := qb −hd,s ◦θs(q)
(9.2)
on the stance phase of (9.1), where the three times continuously diﬀerentiable
function hd,s : R →RN−1 encodes the stance-phase gait. It is assumed that
the associated decoupling matrix, LgsLfshs, is invertible, Φs(q) := [hs; θs] is a
global diﬀeomorphism on Qs,
Zs := {xs ∈T Qs | hs(xs) = 0, Lfshs(xs) = 0}
(9.3)
is an embedded two-dimensional submanifold of T Qs, and Sf
s ∩Zs is an em-
bedded one-dimensional submanifold of T Qs; see Fig. 9.1.
The feedback control is chosen to render Zs invariant under the closed-loop
dynamics as well as attractive (either in ﬁnite time as in Theorem 5.4 or
suﬃciently exponentially rapidly, as in Theorem 5.5):
us(xs) = (LgsLfshs(xs))−1
v(hs(xs), Lfshs(xs)) −L2
fshs(xs)

,
(9.4)
where v renders the origin of
¨ys = v(ys, ˙ys)
(9.5)
globally exponentially stable. The closed-loop system is denoted
fcl,s(xs) := fs(xs) + gs(xs)us(xs).
(9.6)
The feedback control
u∗
s(xs) = −(LgsLfshs(xs))−1L2
fshs(xs)
(9.7)
renders Zs invariant under the stance-phase dynamics; that is, for every z ∈
Zs,
fzero(z) := fs(z) + gs(z)u∗
s(z) ∈TzZs.
(9.8)
Zs is called the stance-phase zero dynamics manifold and ˙z = fzero(z) is called
the stance-phase zero dynamics. Following the development in Chapter 5 and
Section 6.4, (θs; σ1) is a valid set of local coordinates for Zs and in these
coordinates the zero dynamics has the form
˙θs =
1
I(θs) σ1,
˙σ1 = mtot g0 xcm(θs),
(9.9)
where I(θs) is the virtual inertia deﬁned in (6.73). Moreover, in these coordi-
nates, Sf
s ∩Zs is given by
{(qs−
0 ; ˙qs−) | qs−
0
= Φ−1
s (0, θ−
s,0), ˙qs−= ˙qs−
0 σs−
1 , σs−
1
∈R},
(9.10)
© 2007 by Taylor & Francis Group, LLC

256
Feedback Control of Dynamic Bipedal Robot Locomotion
where θ−
s,0 is the value of θs on Sf
s ∩Zs and
˙qs−
0
=

∂hs
∂q
AN
−1&&&&&&
qs−
0

0(N−1)×1
1

,
(9.11)
where AN was deﬁned in Section 3.5.5.
For later use in computing a Poincar´e return map on the zero dynamics, it
is noted that (9.9) has Lagrangian1 Ls,zero := Ks,zero −Vs,zero, where
Ks,zero := 1
2(σ1)2
(9.12)
Vs,zero(θs) := −
 θs
θ+
s
I(ξ) mtot g0 xcm(ξ) dξ;
(9.13)
the choice of the lower limit θ+
s is arbitrary and will be made later. Also for
later use, deﬁne

λx(qs−
0 )
λy(qs−
0 )

:= ∂fcm(qs−
0 )
∂q
˙qs−
0 ,
(9.14)
so that

˙xs−
cm
˙ys−
cm
&&&&&
Sf
s∩Zs
=

λx(qs−
0 )
λy(qs−
0 )

σs−
1 .
(9.15)
9.3.2
Flight Phase Control
The overall goal of the ﬂight-phase controller is to land the robot in a favor-
able manner for continuing with the stance phase. It will turn out that a
particularly interesting objective is the following: if the robot enters the ﬂight
phase from the stance-phase zero dynamics manifold, Zs, control the robot
so that it lands on Zs in a ﬁxed conﬁguration. The analytical motivation for
this objective will be made clear in Section 9.4. The feasibility of landing in a
ﬁxed conﬁguration will be illustrated in Section 9.5 with a feedback controller
that depends on xf and the ﬁnal value of the state of the preceding stance
phase. To realize such a controller as a state-variable feedback, the ﬂight-state
vector is augmented with dummy variables af whose values can be set at the
transition from stance to ﬂight. Let af ∈A := Rp, p ∈N.
In other regards, paralleling the development of the stance phase controller,
deﬁne the output
yf = hf(qf, af) := qb −hd,f(xcm, af),
(9.16)
where hd,f is at least three-times diﬀerentiable. Then, the following can be
easily shown: for any value of af,
1See Corollary 5.2.
© 2007 by Taylor & Francis Group, LLC

Running with Point Feet
257
1. the decoupling matrix, LgfLffhf, is everywhere invertible;
2. Φf := [hf; qN; xcm; ycm] is a global diﬀeomorphism on Qf;
3. the ﬂight-phase zero-dynamics manifold
Zf,af := {xf ∈T Qf | hf(xf, af) = 0, Lffhf(xf, af) = 0}
(9.17)
is a six-dimensional embedded submanifold of T Qf;
4. Ss
f ∩Zf,af is a ﬁve-dimensional embedded submanifold of T Qf;
5. (qN; xcm; ycm; σcm; ˙xcm; ˙ycm) is a set of global coordinates for Zf,af;
and
6. the ﬂight-phase zero dynamics has the form
˙qN = κ1,f(σcm, xcm, ˙xcm, af)
(9.18a)
˙σcm = 0
(9.18b)
¨xcm = 0
(9.18c)
¨ycm = −g0,
(9.18d)
where (9.18a) arises from evaluating
˙qN =
σcm
AN,N(qb) −
N−1

i=1
AN,i(qb)
AN,N(qb) ˙qi
(9.19)
on Zf,af. Note that in Fig. 9.1, only a two-dimensional projection of Zf,af could
be shown and Ss
f ∩Zf,af was represented as a one-dimensional projection.
The feedback controller is deﬁned as
uf(xf, af) := −(LgfLffhf(xf, af))−1 
Kphf(xf, af)
+ KdLffhf(xf, af) + L2
ffhf(xf, af)
!
,
(9.20)
where ¨yf + Kd ˙yf + Kpyf = 0 has yf = 0 as an exponentially stable equilibrium
point. Let ¯xf := (xf; af) and denote the right-hand side of (3.85) (i.e., the
ﬂight phase dynamics of (9.1)) and the trivial parameter dynamics ˙af = 0 in
closed loop with (9.20) by
fcl,f(¯xf) :=

ff(xf) + gf(xf)uf(¯xf)
0

.
(9.21)
© 2007 by Taylor & Francis Group, LLC

258
Feedback Control of Dynamic Bipedal Robot Locomotion
9.3.3
Closed-Loop Hybrid Model
The closed-loop hybrid model is
Σf,cl :
⎧
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎩
¯Xf = T Qf × A
¯Fcl,f : ( ˙¯xf) = fcl,f(¯xf)
¯Ss
f = {(xf; af) ∈¯Xf | Hs
f (xf) = 0}
¯T s
f : x+
s = ¯Δs
f(¯x−
f ) := Δs
f(x−
f )
(9.22)
Σs,cl :
⎧
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎩
Xs = T Qs
Fcl,s : ( ˙xs) = fcl,s(xs)
Sf
s = {xs ∈Xs | Hf
s(xs) = 0}
¯T f
s : x+
f = Δf
s(x−
s ), a+
f = wf
s(x−
s ),
where the parameter update law wf
s is at least continuously diﬀerentiable.
The internal geometry of the closed-loop system is shown in Fig. 9.1.
9.4
Existence and Stability of Periodic Orbits
This section exploits the internal geometric structure of the closed-loop system
(9.22) to obtain a low-dimensional, closed-form characterization of asymptot-
ically stable, periodic running motions. Following Section 4.3, Section 9.4.1
develops the Poincar´e section and the Poincar´e return map that will be used
for analyzing periodic orbits of (9.22). The analytical results based on restric-
tion dynamics—that is, the hybrid zero dynamics of Fig. 9.2—are developed
in Section 9.4.2.
9.4.1
Deﬁnition of the Poincar´e Return Map
A periodic running motion corresponds to a periodic orbit in the closed-loop
model. A ﬁxed point of the Poincar´e return map is equivalent to a periodic
orbit. Because running consists of two phases, the Poincar´e return map is
naturally viewed as the composition of two maps: P := Ps ◦Pf, as in Fig. 9.3,
where Ps : ¯Ss
f →Sf
s follows a solution of the closed-loop model from the impact
event at the end of ﬂight to just before the end of stance, and Pf : Sf
s →¯Ss
f
follows a solution from the end-of-stance event to just before the end of ﬂight.
Because not every landing will result in the completion of a stance phase (for
example, the robot may not have suﬃcient speed), Ps is only a partial map.
And, because not every transition out of stance results in a successful ﬂight
phase followed by a successful stance phase, Pf is a partial map. Hence, the
© 2007 by Taylor & Francis Group, LLC

Running with Point Feet
259
Xs
¯
Xf = Xf × A
Sf
s
¯
Ss
f
x∗+
s
x∗−
s
¯x∗+
f
¯x∗−
f
¯Δs
f( ¯
Ss
f )
Δf
s(Sf
s) ws(Sf
s)
Figure 9.3. Poincar´e maps for the closed-loop system. Conceptually, Ps :
¯Ss
f →Sf
s, and is determined by following the ﬂow of the closed-loop stance
model from the impact at the end of ﬂight up to, and not including, the
transition from stance to ﬂight. Similarly, Pf : Sf
s →¯Ss
f is determined by
following the ﬂow of the closed-loop ﬂight model augmented with the trivial
parameter dynamics, ˙af = 0, from the transition at the end of stance up
to, and not including, the impact event at the end of ﬂight. The composite
Poincar´e map is P : Sf
s →Sf
s, where P := Ps◦Pf. A periodic orbit corresponds
to a ﬁxed point of P, namely, x∗−
s
= P(x∗−
s ).
domains where these maps are well deﬁned should be identiﬁed, which will
give rise to the subsets ˜Sfs ⊂Sf
s and ˜Ss
f ⊂¯Ss
f .
As in walking, deﬁne the stance-time-to-impact function,2 TI,s : x0 ∈Xs →
R ∪{∞}, by
TI,s :=

inf{t ≥0 | ϕcl,s(t, x0) ∈Sf
s}
if ∃t s.t. ϕcl,s(t, x0) ∈Sf
s
∞
otherwise,
(9.23)
where ϕcl,s(t, x0) is an integral curve of (9.6) corresponding to ϕcl,s(0, x0) =
x0. From Lemma C.1 in Appendix C.1, TI,s is continuous at points x0 where
0 < TI,s(x0) < ∞and the intersection with Sf
s is transversal.3 Hence, ˜Xs :=
{xs ∈Xs | 0 < TI,s(xs) < ∞, Lfcl,sHf
s(ϕcl,s(TI,s(xs), xs)) ̸= 0} is open, and
consequently, ˜Ss
f := ¯Δs −1
f
( ˜
Xs) is an open subset of ¯Ss
f . It follows that the
2Flows from one surface to another are sometimes called impact maps or impact functions.
TI,s could also be called the time-to-ﬂight function.
3Transversality guarantees nonzero vertical leg end velocity at impact; that is, the foot does
not just scuﬀthe ground.
© 2007 by Taylor & Francis Group, LLC

260
Feedback Control of Dynamic Bipedal Robot Locomotion
generalized Poincar´e stance map Ps : ˜Ss
f →Sf
s deﬁned by
Ps(¯xf) := ϕcl,s(TI,s( ¯Δs
f(¯xf)), ¯Δs
f(¯xf)),
(9.24)
is well deﬁned and continuous (the terminology of a generalized-Poincar´e map
Similarly, the generalized Poincar´e ﬂight map Pf : ˜Sfs →˜Ss
f , is deﬁned by
Pf(xs) := ϕcl,f(TI,f(Δf
s(xs), wf
s(xs)), Δf
s(xs), wf
s(xs)),
(9.25)
where, TI,f : ¯x0 ∈¯Xf →R ∪{∞} by
TI,f :=

inf{t ≥0 | ϕcl,f(t, ¯x0) ∈˜Ss
f }
if ∃t s.t. ϕcl,f(t, ¯x0) ∈˜Ss
f
∞
otherwise,
(9.26)
and
˜Sfs = {xs ∈Sf
s | 0 < TI,f(Δf
s(xs), wf
s(xs)) < ∞,
Lfcl,fHs
f (ϕcl,f(TI,f(Δf
s(xs), wf
s(xs)), Δf
s(xs), wf
s(xs))) ̸= 0}.
(9.27)
In [173, Appendix D], it is proved that Pf is continuously diﬀerentiable.
The Poincar´e return map P : ˜Sfs →Sf
s for (9.22) is deﬁned by
P := Ps ◦Pf;
(9.28)
see Section 4.3.3.
9.4.2
Analysis of the Poincar´e Return Map
The following theorem demonstrates that the closed-loop model for running
that results from the developed control structure has the same form as the
models for walking.
Theorem 9.1 (Connecting Running to Walking)
Let P be as (9.28), and let S := Sf
s, and ˜S := ˜Sfs. Then P is also the Poincar´e
return map for the system with impulse eﬀects
Σcl :

˙xs(t) = fcl,s(xs(t))
x−
s (t) ̸∈S
x+
s (t) = Δ(x−
s (t))
x−
s (t) ∈S,
(9.29)
where Δ := ¯Δs
f ◦Pf.
Proof
See Theorem 4.3.
© 2007 by Taylor & Francis Group, LLC
follows Appendix D of [173]).

Running with Point Feet
261
Note that the system with impulse eﬀects (9.29) has the same form as the
models studied in previous chapters for walking gaits.
The association of
running with walking indicates how results developed for walking, such as
closed-form stability analysis on the basis of a restricted Poincar´e map, may
be extended to running. In this section and the next, several results along
this line of reasoning are developed and illustrated on an asymptotically stable
running gait.
Suppose that Δ( ˜S ∩Zs) ⊂Zs, where Zs is the stance-phase zero dynamics
manifold. Then, from Chapter 5, (9.29) has a hybrid zero dynamics, which
may be called the hybrid zero dynamics of running:
˙z = fzero(z)
z−/∈S ∩Zs
z+ = Δzero(z−)
z−∈S ∩Zs,
(9.30)
where the restricted impact map is Δzero := Δ| ˜
S∩Zs and fzero is given by
(9.8). The key properties in walking gaits that led to a rich analytic theory
were Zs-invariance, Δ( ˜S ∩Zs) ⊂Zs, and what will be called conﬁguration
determinism at transition: π ◦Δ( ˜S ∩Zs) consists of a single point, where
π : T Qs →Qs is the canonical projection. How to achieve these conditions
for Δ = ¯Δs
f ◦Pf through design of the ﬂight-phase controller will be detailed
in Section 9.5.
Let qs−
0
be as deﬁned in (9.10) and deﬁne qs+
0
:= π◦Δ(qs−
0 , ∗). Use (3.86) to
deﬁne the positions of the center of mass at the beginning of the stance phase,
(xs+
cm; ys+
cm), and the end of the stance phase, (xs−
cm; ys−
cm). In the following, it
is assumed that the center of mass is behind the stance leg at the beginning
of the stance phase, and thus xs+
cm < 0.
Theorem 9.2 (Characterization of Restricted Impact Map)
Suppose that Δ( ˜S ∩Zs) ⊂Zs and π ◦Δ( ˜S ∩Zs) = {qs+
0 }. In the coordinates
(θs; σ1) for Zs, the restricted impact map is given by
Δzero(θ−
s,0, σs−
1 ) =

θ+
s,0
δ(σs−
1 )

,
(9.31)
where
θ+
s,0 = θs(qs+
0 )
(9.32a)
δ(σs−
1 ) = χσs−
1
−
6
(βσs−
1 )2 + α,
(9.32b)
and
α = −2m2
tot g0 (xs+
cm)2(ys+
cm −ys−
cm)
(9.33a)
β = mtot xs+
cmλy(qs−
0 )
(9.33b)
χ = 1 + mtot xs−
cmλy(qs−
0 ) + mtot (ys+
cm −ys−
cm)λx(qs−
0 ).
(9.33c)
© 2007 by Taylor & Francis Group, LLC

262
Feedback Control of Dynamic Bipedal Robot Locomotion
The proof is given in Appendix C.5.1.
Remark 9.1
1. χ < 0 would imply a sign change in the angular momentum at impact,
which would be incompatible with the deﬁnition of running as forward
motion with a ﬂight phase.
2. If xs+
cm < 0 is not assumed, the general expression for (9.32b) is
δ(σs−
1 ) = χσs−
1
+ sgn(xs+
cm)
6
(βσs−
1 )2 + α,
(9.34)
where sgn(x) is the sign of x.
3. When α = 0, that is, the center of mass has the same height at the
beginning and end of the stance phase,
δ(σs−
1 ) = (χ −|β|)σs−
1
(9.35)
is linear, exactly as in walking; indeed, δzero = (χ −|β|).
4. In terms of the coordinates (θ−
s,0; ζ := 1
2(σs−
1 )2) for ˜S ∩Zs, where the
(generalized) kinetic energy of the stance-phase zero dynamics is used
instead of the angular momentum, (9.32b) becomes
δe(ζ) = (χ2 + β2)ζ −χ
+
2αζ + (2βζ)2 + α
2 .
(9.36)
5. Implicit in the construction of ˜S is the condition 2αζ +(2βζ)2 ≥0. Also
a part of the construction of ˜S is the condition that TI,f is a positive
real number; under the assumptions made on Δ, this is equivalent to
checking that ys+
cm > ys−
cm and λy(qs−
0 ) < 0 do not simultaneously occur.
Let P : ˜S →S be the Poincar´e return map for (9.29), and hence, also for
(9.22), and suppose that Δ( ˜S ∩Zs) ⊂Zs, as in Fig. 9.2. Then P( ˜S ∩Zs) ⊂
S ∩Zs, and the restriction map ρ : ˜S ∩Zs →S ∩Zs,
ρ := P| ˜
S∩Zs ,
(9.37)
is well deﬁned. The restricted Poincar´e return map ρ is important because it
is scalar and, by Theorem 5.4 and Theorem 5.5, asymptotically stable ﬁxed
points of it correspond to asymptotically stable periodic orbits of the hybrid
model (9.29), and hence, to asymptotically stable running gaits.
© 2007 by Taylor & Francis Group, LLC

Running with Point Feet
263
Theorem 9.3 (Closed-form for ρ)
Suppose that Δ( ˜S ∩Zs) ⊂Zs and π ◦Δ( ˜S ∩Zs) = {qs+
0 }. Let (θ−
s,0; σs−
1 ) ∈
˜S ∩Zs, and set ζ := 1
2(σs−
1 )2. Then
ρ(ζ) = δe(ζ) −Vs,zero(θ−
s,0),
(9.38)
with domain of deﬁnition
Dρ :=
.
ζ > 0
&& δe(ζ) −V max
s,zero > 0,
2αζ + (2βζ)2 ≥0
/
,
(9.39)
where δe is deﬁned in (9.36), and
V max
s,zero :=
max
θ+
s,0≤θs≤θ−
s,0
Vs,zero(θs).
(9.40)
Moreover, the ﬁrst derivative of the restricted Poincar´e return map is
dρ
dζ (ζ) = dδe
dζ (ζ) = (χ2 + β2) −χ
α + 4β2ζ
+
2αζ + (2βζ)2 .
(9.41)
The proof is given in Appendix C.5.2.
Remark 9.2
1. Computing a ﬁxed point of (9.38) is easily reduced to solving a quadratic
equation. If its discriminate Υ is non-negative, where
Υ := 4χ2 
χ2α2
+

−2Vs,zero(θ−
s,0) + α
 
−αχ2 + α −2β2Vs,zero(θ−
s,0)
 !
,
(9.42)
the ﬁxed point can be explicitly calculated as
ζ∗=

χ2 + β2 −1
 
2Vs,zero(θ−
s,0) −α

+ 2χ2α −
√
Υ
2
 
(χ + β)2 −1
!  
(χ −β)2 −1
!
.
(9.43)
2. As in walking, the restricted Poincar´e map can be interpreted in terms
of energy transfer; see Fig. 9.4.
The following two corollaries are immediate.
Corollary 9.1 (Exponentially Stable Fixed Points)
Suppose that ζ∗∈Dρ is a ﬁxed point of ρ. Then it is exponentially stable if,
and only if,
μ := (χ2 + β2) −χ
α + 4β2ζ∗
+
2αζ∗+ (2βζ∗)2
(9.44)
© 2007 by Taylor & Francis Group, LLC

264
Feedback Control of Dynamic Bipedal Robot Locomotion
θ+
s,0
θ+
s,0
θ+
s,0
θ−
s,0
θ−
s,0
θ−
s,0
Vs,zero(θs) + 1
2(σ1)2
Vs,zero(θ−
s,0) + 1
2(σ∗s−
1
)2
Vs,
o
r
e
z
(θs)
1
2 (σs−
1 )2
Impact + Flight
σs+
1
= χσs−
1
−
(βσs−
1 )2 + α
1
2(σs+
1 )2
Vs,zero(θ−
s,0)
θs
Figure 9.4.
The stance phase zero dynamics is Lagrangian, and thus
throughout the stance phase, the corresponding total energy Vs,zero(θs) +
1
2(σ1)2 is constant. Over the impact-plus-ﬂight phase, the change in total
energy depends on the angular momentum through δ(σs−
1 ) and the potential
energy through Vs,zero(θ−
s,0). The total energy corresponding to the periodic
orbit is Vs,zero(θ−
s,0) + 1
2(σ∗s−
1
)2.
satisﬁes |μ| < 1.
Corollary 9.2 (Qualitative Analysis of ρ)
The following statements are true:
(a) limζ↘0
dρ
dζ (ζ) = −∞, for χ > 0 and α ≥0;
(b) limζ↘−α
2β2
dρ
dζ (ζ) = −∞, for χ > 0 and α < 0;
(c) limζ→∞
dρ
dζ (ζ) = χ −|β|)2; and
(d)
d2ρ
dζ2 (ζ) = χ
α2
(2αζ+4β2ζ2)3/2 does not change sign.
Figure 9.5 provides a graphical depiction of ρ for χ > 0, α ≥0, and α
2 −
Vs,zero(θ−
s,0) > 0. Similar ﬁgures could be drawn for other cases. The next
result shows that these qualitative features of the Poincar´e return map lead
to a large region of attraction for an exponentially stable ﬁxed-point.
Theorem 9.4 (Nonlocal Convergence in the HZD)
Consider ρ : Dρ →R, and suppose that
1. (χ −|β|)2 < 1,
2. χ > 0,
3. and there exists ζ∗∈Dρ such that ρ(ζ∗) = ζ∗and dρ
dζ (ζ∗) > 0.
© 2007 by Taylor & Francis Group, LLC

Running with Point Feet
265
(χ −|β|)2
ζ
ζ∗
ρ
α
2 −Vs,zero(θ−
s,0)
(a) stable
ζ
ζ∗
ρ
α
2 −Vs,zero(θ−
s,0)
(b) unstable
Figure 9.5. Qualitatively diﬀerent Poincar´e maps that may occur in running.
The dashed line is the identity map and the bold line is a sketch of the
restricted Poincar´e return map. In (a), the ﬁxed point is exponentially stable
because the intersection with the identity line occurs with a positive slope less
than 1.0. In (b), the ﬁxed point is unstable because the intersection with the
identity line occurs with a negative slope less than −1.0.
© 2007 by Taylor & Francis Group, LLC

266
Feedback Control of Dynamic Bipedal Robot Locomotion
Then, the following statements are true:
(a) ζ∗is the unique ﬁxed-point of ρ;
(b) the set
˜Dρ =
,
ζ ∈Dρ
&&&&
dρ
dζ (ζ) > 0
-
(9.45)
is unbounded and connected; and
(c) ζ∗is locally exponentially stable and every solution of ζ(k + 1) = ρ(ζ(k))
initialized in ˜Dρ converges monotonically to ζ∗.
The proof is given in Appendix C.5.3.
This result shows that once the
motion of the robot has settled near the hybrid zero dynamics, the domain of
attraction of the periodic orbit is quite large. The analysis in Theorem 9.4 has
not accounted for the peak torque of the actuators and the allowed friction
cone at the support leg end. This theorem should thus be viewed as stating
that such physical considerations will determine the limits on the region of
attraction, and that the semi-global convergence of the control loop per se is
not the key limiting factor.
For all of the examples worked by the authors, if an exponentially stable
ﬁxed point was found, hypotheses (1), (2) and (3) of Theorem 9.4 have always
held as well. In particular, μ was always greater than 0.4 and ˜Dρ equalled
Dρ, that is, the Poincar´e map was always strictly increasing on the region of
interest. In the case of Raibert’s hopper, the Poincar´e map was shown to be
unimodal—and thus not strictly increasing on the domain of interest [139].
Nevertheless, semi-global stability was established using a more powerful anal-
ysis method due to Singer [209] and Guckenheimer [101].
9.5
Example: Illustration on RABBIT
The analytical results of Section 9.4 make it straightforward to determine if
a control law of the kind speciﬁed in Section 9.3 leads to the existence of
a stable periodic orbit.
However, proposing speciﬁc values for the output
functions so that the evolution of the robot is energetically eﬃcient, while
respecting actuator limits, the friction cone at the contact point of the leg
end, and liftoﬀat the beginning of the ﬂight phase, is nearly impossible to do
by intuition. Here, the feedback designs will be based on optimization.
Using the method proposed in [44], time-trajectories of (9.1), corresponding
to average running speeds varying from 0.5 m/s to 2.75 m/s and parameter
values given in Table 6.3, were determined for RABBIT (see Chapter 2 for de-
tails on the planar, bipedal robot, RABBIT). The running trajectories satisfy
© 2007 by Taylor & Francis Group, LLC

Running with Point Feet
267
0.5
0
0.5
1
1.5
2
0
0.2
0.4
0.6
0.8
1
Figure 9.6.
Stick diagram for a running trajectory with average speed
1.5 m/s.
Figure 9.7.
Stick diagram for a running trajectory with average speed
2.5 m/s.
¨y1 > 0 at the beginning of the ﬂight phase, the duration of the ﬂight phase is
at least 25% of the duration of a stride, and the required coeﬃcient of friction
is less than 2/3. Stick-ﬁgure diagrams corresponding to the running motions
of 1.5 m/s and 2.5 m/s are given in Fig. 9.6 and Fig. 9.7.
Denote by O the path traced out in the state spaces of the hybrid model
of the robot by any one of these running trajectories. It was checked that ¯O,
the closure of O, intersects Sf
s and Ss
f exactly once; deﬁne x−∗
f
= ¯O ∩Ss
f and
x−∗
s
= ¯O ∩Sf
s. The goal is to design a time-invariant state-feedback controller
`a la Section 9.3 that has O as its asymptotically stable periodic orbit. Recall
that designing the controller is equivalent to specifying the output functions
in (9.2) and (9.16) and the parameter update-law in (9.22).
9.5.1
Stance Phase Controller Design
On the basis of x−∗
f
and x−∗
s , the values of qs+
0
(the initial conﬁguration in
stance on the periodic orbit), qs−
0
(the ﬁnal conﬁguration in stance on the
© 2007 by Taylor & Francis Group, LLC
0.5
0
0.5
1
1.5
2
0
0.2
0.4
0.6
0.8
1

268
Feedback Control of Dynamic Bipedal Robot Locomotion
periodic orbit), ˙qs+
0
(the normalized initial velocity in stance on the periodic
orbit; see (9.11)), and ˙qs−
0
(the normalized ﬁnal velocity in stance on the
periodic orbit4) are easily deduced, which in turn give the initial and ﬁnal
values of θs on the periodic orbit, θ+
s,0 and θ−
s,0.
As in Section 6.5 (see also [176]), an output ys = hs(q) := qb −hd,s ◦θs(q)
was designed so that it satisﬁed the boundary conditions and vanishes (nearly)
along the stance phase of the periodic orbit, and thus the orbit is an integral
curve of the stance-phase zero dynamics.
For this, the function hd,s was
selected to be a degree four polynomial in θs. The design method in [44] that
is used to compute the periodic orbit essentially guarantees that the technical
conditions of Section 9.3 are satisﬁed for hs; nevertheless, the conditions were
formally veriﬁed. Once hs is known, so is Zs, and, by construction, O∩T Qs ⊂
Zs.
9.5.2
Stability of the Periodic Orbits
The data required to determine the restricted Poincar´e map ρ in Theorem 9.3
and Theorem 9.4 can be computed directly from hd,s. This was carried out
for each of the running trajectories studied in this chapter. The numerical
values are summarized in Table 9.1. In each case, μ < 1 and hence if a ﬂight-
phase controller can be determined to meet the conditions of Theorem 9.3, the
corresponding orbit will be asymptotically stable. Note that slower running
speeds yield smaller values of μ. So, for fast running, the convergence toward
the periodic orbit will be slow.
A plot of the restricted Poincar´e map is
provided in Fig. 9.8 for the trajectory corresponding to an average speed of
1.5 m/s.
9.5.3
Flight Phase Controller Design
The ﬂight phase controller, yf = hf(qf, af) := qb −hd,f(xcm, af), af = wf
s(x−
s ),
is to be designed so that trajectories of the closed-loop system that takeoﬀ
from the stance-phase zero dynamics manifold, Zs, land on Zs; moreover, the
landing conﬁguration should be independent of the robot’s takeoﬀvelocity
from Zs. Since from Section 9.5.1 the initial stance-phase conﬁguration of the
robot on the periodic orbit is equal to qs+
0 , these two conditions become
Δ( ˜S ∩Zs) ⊂Zs
(9.46)
π ◦Δ( ˜S ∩Zs) = qs+
0 ,
(9.47)
where, as before, π : T Qs →Qs is the canonical projection. The design of
the controller can now be broken down into several steps. First, (9.46) and
(9.47) will be translated from boundary conditions on conﬁguration and ve-
locity at the beginning of the (next) stance phase, into boundary conditions
4In (9.11), replace evaluation at qs−
0
with qs+
0 .
© 2007 by Taylor & Francis Group, LLC

Running with Point Feet
269
Table 9.1. Stability analysis of various running motions. If ζ > ζmin, then
ζ ∈Dρ.
Average
xs+
cm
ys+
cm
xs−
cm
ys−
cm
λx(qs−
0 )
Velocity
Vzero(θ−
s )
V max
s,zero
(cm)
(cm)
(cm)
(cm)
(10−2)
0.50 m/s
−66
21
−6.8
62.4
14.0
69.8
3.74
0.75 m/s
−114
36
−8.8
62.1
18.4
68.8
3.83
1.00 m/s
−168
54
−10.9
61.5
22.6
67.5
3.95
1.25 m/s
−219
74
−12.9
60.5
26.4
65.7
4.09
1.50 m/s
−258
100
−15.1
59.3
29.6
63.8
4.27
1.75 m/s
−274
134
−17.7
58.1
32.3
61.7
4.48
2.00 m/s
−285
167
−20.1
56.7
34.6
59.7
4.69
2.25 m/s
−306
123
−17.5
55.6
34.0
59.1
4.78
2.50 m/s
−309
81
−14.4
54.7
32.5
59.0
4.85
2.75 m/s
−260
70
−13.2
55.2
29.8
58.6
4.91
Average
λy(qs−
0 )
α
β
χ
Velocity
(10−3)
(10−2)
ζmin
ζ∗
μ
χ −|β|
0.50 m/s
5.4
9.12
−1.37
0.926
53
151
0.695
0.832
0.75 m/s
3.3
14.26
−1.07
0.926
88
275
0.708
0.838
1.00 m/s
2.3
19.04
−0.92
0.931
125
434
0.729
0.850
1.25 m/s
2.0
23.34
−0.96
0.940
164
615
0.754
0.866
1.50 m/s
2.3
27.33
−1.29
0.955
206
801
0.785
0.887
1.75 m/s
3.0
30.84
−1.99
0.976
253
982
0.826
0.914
2.00 m/s
3.3
32.77
−2.47
0.990
294
1162
0.856
0.932
2.25 m/s
3.9
29.56
−2.52
0.986
231
1327
0.859
0.922
2.50 m/s
5.0
23.69
−2.66
0.984
161
1503
0.870
0.916
2.75 m/s
5.0
15.91
−2.45
0.994
127
1729
0.908
0.940
© 2007 by Taylor & Francis Group, LLC

270
Feedback Control of Dynamic Bipedal Robot Locomotion
0
500
1000
1500
2000
2500
3000
3500
0
500
1000
1500
2000
2500
3000
3500
ζ =
(σs−
1
)2
2
ζmin
ρ(ζ)
ρ
Figure 9.8. Running at 1.5 m/s. The restricted Poincar´e map (bold) asso-
ciated with the closed-loop system. The ﬁxed point occurs where the graph
of ρ intersects the graph of the identity map (thin line).
at the end of the (current) ﬂight phase. This will result in control objectives
for the conﬁguration and velocity of the body coordinates and for the over-
all orientation of the robot at landing. In a second step, because the body
coordinates qb are directly actuated, it is straightforward to design a family
of functions hd,f(xcm, af) that achieve the boundary conditions on the body-
coordinate conﬁguration and velocity, once the ﬂight duration is determined
from the ballistic motion of the robot’s center of mass. The ﬁnal step is more
diﬃcult because it is indirect: adjust the evolution of the body coordinates
as a function of the takeoﬀvelocity so as to achieve a desired orientation q5
of the robot at landing.
To begin the ﬁrst step, observe that because (qs+
0 ; ˙q) is in π−1(qs+
0 ) ∩Zs
if, and only if, ˙q = ˙qs+
0 σs+
1
for some σs+
1
∈R, and (qs−
0 ; ˙q) is in ˜S ∩Zs if,
and only if, ˙q = ˙qs−
0 σs−
1
for some σs−
1
∈R, conditions (9.46) and (9.47) are
equivalent to
∀σs−
1 , ∃σs+
1
s.t. Δ(qs−
0 , ˙qs−
0 σs−
1 ) = (qs+
0 ; ˙qs+
0 σs+
1 ).
(9.48)
From Theorem 9.2, it follows that σs+
1
= δ(σs−
1 ), and hence (9.48) is equivalent
to
Δ(qs−
0 , ˙qs−
0 σs−
1 ) = (qs+
0 ; ˙qs+
0 δ(σs−
1 )),
(9.49)
which gives speciﬁc boundary conditions, just after impact, to be met by the
design of the ﬂight phase controller. In particular, recalling that q = (qb; q5),
it is seen that (9.49) places constraints on the body conﬁguration variables
and their derivatives, and on the overall orientation of the robot, q5, while
© 2007 by Taylor & Francis Group, LLC

Running with Point Feet
271
the constraint on ˙q5 is equivalent to σs+
1
= δ(σs−
1 ), if the other constraints are
met.
For the purpose of computation, it is convenient to transform (9.49) to
conditions in the ﬂight-phase state space, T Qf, instead of the stance-phase
state space, T Qs. This is done as follows: the boundary conditions (9.49)
specify the height of the center of mass at impact, and from this information,
the ﬂight time, tf, is computed for any initial condition in ˜S ∩Zs; see (C.58)
in Appendix C.5.1. Using (C.59) and (9.15), the velocity of the center of mass
can be expressed as a function of σs−
1 ,
 ˙xf−
cm
˙yf−
cm

=
⎡
⎢⎣
λx(qs−
0 )σs−
1
−
6
(λy(qs−
0 )σs−
1 )2 −2g0(ys+
cm −ys−
cm)
⎤
⎥⎦.
(9.50)
The impact model (3.98), can be rewritten to deﬁne the angular velocity at
the end of ﬂight satisfying (9.49):
˙qf−= A−1

A + mtot
∂f2
∂q
′ ∂f2
∂q

R−1 ˙qs+
0 δ(σs−
1 ) + mtotA−1 ∂f ′
2
∂q
 ˙xf−
cm
˙yf−
cm

.
(9.51)
These last two equations deﬁne a function ˙¯q0(qs+
0 , σs−
1 ) such that (9.49) is
equivalent to
qf−
0
= R−1qs+
0
˙qf−= ˙¯q0(qs+
0 , σs−
1 ).
(9.52)
In summary, the objective of the ﬂight-phase controller is to meet the
boundary conditions given in (9.52). Meeting these two conditions will ensure
that invariance of Zs under the composition of the ﬂight phase and impact
model is achieved, (9.46), and that conﬁguration determinism at transition,
(9.47), is also met; see Figs. 9.1 and 9.2.
The design of hd,f can now be given in two more steps. First, deﬁne5
τ(xcm, σs−
1 ) = xcm −xf+
cm
tf ˙xf+
cm
=
xcm −xf+
cm
tfλx(qs−
0 )σs−
1
;
(9.53)
the real-valued function τ varies between 0 and 1 and can be used to param-
eterize trajectories from ˜S ∩Zs to π−1(qs+
0 ) ∩Zs in a neighborhood of the
periodic orbit. Choose a function fcn(a1, · · · , a5) : [0, 1] →R4 such that
fcn(a1, · · · , a5)(0) = a1
dfcn
dτ (a1, · · · , a5)(0) = a2
fcn(a1, · · · , a5)(1) = a3
dfcn
dτ (a1, · · · , a5)(1) = a4,
(9.54)
5Note that xf+
cm = xs−
cm.
© 2007 by Taylor & Francis Group, LLC

272
Feedback Control of Dynamic Bipedal Robot Locomotion
and there exist a∗
1, . . . , a∗
5 for which qb −fcn(a∗
1, . . . , a∗
5)(τ) (nearly) vanishes
on O. Here, this was accomplished with a degree four polynomial. Oﬀthe
orbit, use (9.54) to solve for a1, . . . , a4 as functions of σs−
1
so that qb(τ) =
fcn(a1, . . . , a5)(τ) satisﬁes the constraints on the body coordinates imposed
by (9.52). Speciﬁcally, set a1 = (qs−
0 )b, a3 = (R−1qs+
0 )b, a2 = ( ˙qs−
0 σs−
1 )b, and
a4 = ( ˙¯q0(qs+
0 , σs−
1 ))b. Deﬁne
hd,f(xcm, σs−
1 , a5) := fcn(a1, . . . , a5)(τ)
(9.55)
with ai(σs−
1 ), i = 1, . . . , 4 and τ(xcm, σs−
1 ) as determined above.
Deﬁne
q5(0) = (qs−
0 )5 and q5,d = (R−1qs+
0 )5.
In the ﬁnal step, the goal is to select a5 as a function of σs−
1
so that the
q5-component—the overall orientation of the robot—satisﬁes the landing con-
straint. This is done as follows. The output (9.55) satisﬁes all of the conditions
of Section 9.3, and hence the evolution of q5 in the ﬂight-phase zero dynamics
is given by ˙q5 = κ1,f(σcm, xcm, ˙xcm, σs−
1 , a5). In the ﬂight phase, σcm and ˙xcm
are constant and can be substituted by their values from ˜S ∩Zs. In addition,
xcm(t) = xs−
cm +tλx(qs−
0 )σs−
1 . Hence, ˙q5 = ˜κ1,f(t, σs−
1 , a5). Letting σ∗s−
1
denote
the value of σs−
1
on the orbit, O, q5,d = q5(0)+
 tf
0
˜κ1,f(t, σ∗s−
1
, a∗
5)dt is satisﬁed
because, by construction of the output, the orbit corresponds to an integral
curve of the ﬂight-phase zero dynamics. Finally, it is veriﬁed (numerically)
that
∂
∂a5

q5,d −q5(0) −
 tf
0
˜κ1,f(t, σ∗s−
1
, a5)dt
&&&&
a5=a5∗
̸= 0,
(9.56)
and thus by the implicit function theorem, there exists an open subset about
σ∗s−
1
and a diﬀerentiable function ˜wf
s such that ˜wf
s(σ∗s−
1
) = a∗
5 and
q5,d = q5(0) +
 tf
0
˜κ1,f(t, σs−
1 , ˜wf
s(σs−
1 ))dt.
(9.57)
Since (9.57) is scalar while a5 has four components, there exist an inﬁnite
number of solutions for ˜wf
s. Hence, a numerical optimization was performed
to ﬁnd, for each point in a neighborhood of σ∗s−
1
, a value of a5 that steers
q5 to q5,d, while minimizing6 ||a5 −a∗
5||. The ﬂight-phase control design is
completed by formally deﬁning hd,f(qf, af), af := (σs−
1 ; a5), and wf
s(x−
s ) :=
(σs−
1 ; ˜wf
s(σs−
1 )).
9.5.4
Simulation without Modeling Error
The control law developed above has been simulated on a model of RABBIT
for the various running motions. Assuming no modeling error and initializing
6Other criteria could be used, such as minimization of the torques in the ﬂight phase. This
latter criterion requires the computation of the torques via the dynamic model, and hence
is costly in calculation time.
© 2007 by Taylor & Francis Group, LLC

Running with Point Feet
273
Figure 9.9. Running at 1.5 m/s. The four graphs depict the relative joint
angles in radians (x-axis) versus their velocities in rad/sec (y-axis) in the
stance, ﬂight, and impact phases. The swing knee angle is the knee of leg-2,
the swing hip angle is the hip of leg-2, the stance knee angle is the knee of
leg-1, and the stance hip angle is the hip of leg-1. At impact, the roles of
the limbs are exchanged as a consequence the conﬁguration angles change at
impact; see (3.101). Notice that the robot has the same conﬁguration at each
transition between phases. The plots indicate that a limit cycle is achieved.
the closed-loop system oﬀthe periodic orbit—with the initial velocity 10%
higher than the value on the periodic orbit—the simulation data presented in
Figs. 9.9–9.16 are obtained for the running motions of 1.5 m/s and 2.5 m/s.
For a running speed of 1.5 m/s (resp., 2.5 m/s) Figs. 9.9 and 9.10 (resp.,
Figs. 9.13 and 9.14) show the phase-plane evolution of the conﬁguration vari-
ables. The convergence to the periodic orbit is clear. By the design of the
controller, the stance-phase evolution of the conﬁguration variables does not
change stride-to-stride; only the velocities change. In the ﬂight phase, (most
notably, for the hips and the torso when running at 1.5 m/s), the path traced
out is modiﬁed so that the robot lands in the desired state.
Figures 9.11 and 9.15 depict the torques for running at 1.5 m/s and 2.5 m/s,
respectively. As the motion converges to the periodic orbit, the torques cor-
respond to their optimal values, and hence are within the capabilities of the
actuators. Oﬀthe periodic orbit, the torques are signiﬁcantly higher in the
ﬂight phase. For the slower 1.5 m/s-orbit, the torque increase occurs princi-
pally in the hips. For the faster 2.5 m/s-orbit, the torque increase is more
© 2007 by Taylor & Francis Group, LLC
Flight
Stance
Impact
Flight
Stance
Impact
Flight
Stance
Impact
Flight
Stance
Impact
Knee 2 Angle
Knee 1 Angle
Hip 1 Angle
Hip 2 Angle

274
Feedback Control of Dynamic Bipedal Robot Locomotion
Flight
Stance
Impact
q5,d
Figure 9.10. Running at 1.5 m/s. The graph depicts torso angle in radians
(x-axis) versus its velocity in rad/sec (y-axis) in the stance and ﬂight phases.
Notice that the ﬂight-phase controller has regulated the torso angle to its
desired value of q5,d at impact. The plot indicates that a limit cycle is achieved.
Figure 9.11. Running at 1.5 m/s. The four graphs depict the joint torques
in Newton-meters (y-axis) versus time in seconds (x-axis) in the stance and
ﬂight phases. Upon convergence to the periodic orbit, the achieved torques
are very close to their optimal values. The torque is higher in the ﬂight phase
away from the periodic orbit, especially in the hips.
© 2007 by Taylor & Francis Group, LLC
0
2
4
6
8
150
100
50
0
50
100
150
Knee 1 Torque
0
2
4
6
8
200
100
0
100
200
Hip 1 Torque
0
2
4
6
8
200
100
0
100
200
Hip 2 Torque
0
2
4
6
8
150
100
50
0
50
100
150
Knee 2 Torque

Running with Point Feet
275
Figure 9.12.
Running at 1.5 m/s.
The left graph depicts leg-1 (stance
leg) horizontal force in Newtons (y-axis) versus time in seconds (x-axis) in
the stance and ﬂight phases. The right graph depicts vertical force (y-axis)
versus time (x-axis) in the stance and ﬂight phases.
The impulsive forces
existing during impact are not presented.
Figure 9.13. Running at 2.5 m/s. The four graphs depict the relative joint
angles in radians (x-axis) versus their velocities in rad/sec (y-axis) in the
stance, ﬂight, and impact phases. The swing knee angle is the knee of leg-2,
the swing hip angle is the hip of leg-2, the stance knee angle is the knee of
leg-1, and the stance hip angle is the hip of leg-1. At impact, the roles of
the limbs are exchanged as a consequence the conﬁguration angles change at
impact; see (3.101). Notice that the robot has the same conﬁguration at each
transition between phases. The plots indicate that a limit cycle is achieved.
© 2007 by Taylor & Francis Group, LLC
Flight
Stance
Impact
Flight
Stance
Impact
Flight
Stance
Impact
Flight
Stance
Impact
Knee 1 Angle
Hip 1 Angle
Knee 2 Angle
Hip 2 Angle
0
1
2
3
4
5
−50
0
50
100
150
200
0
1
2
3
4
5
0
100
200
300
400
500

276
Feedback Control of Dynamic Bipedal Robot Locomotion
Flight
Stance
Impact
q5,d
Figure 9.14. Running at 2.5 m/s. The graph depicts torso angle in radians
(x-axis) versus its velocity in rad/sec (y-axis) in the stance and ﬂight phases.
Notice that the ﬂight-phase controller has regulated the torso angle to its
desired value of q5,d at impact. The plot indicates that a limit cycle is achieved.
Figure 9.15. Running at 2.5 m/s. The four graphs depict the joint torques
in Newton-meters (y-axis) versus time in seconds (x-axis) in the stance and
ﬂight phases. Upon convergence to the periodic orbit, the achieved torques
are very close to their optimal values. The torque is higher in the ﬂight phase
away from the periodic orbit, especially in the hips.
© 2007 by Taylor & Francis Group, LLC
0
2
4
6
8
150
100
50
0
50
100
150
Knee 1 Torque
0
2
4
6
8
200
100
0
100
200
Hip 1 Torque
0
2
4
6
8
200
100
0
100
200
Hip 2 Torque
0
2
4
6
8
150
100
50
0
50
100
150
Knee 2 Torque

Running with Point Feet
277
Figure 9.16.
Running at 2.5 m/s.
The left graph depicts leg-1 (stance
leg) horizontal force in Newtons (y-axis) versus time in seconds (x-axis) in
the stance and ﬂight phases. The right graph depicts vertical force (y-axis)
versus time (x-axis) in the stance and ﬂight phases.
The impulsive forces
existing during impact are not presented.
evenly divided among the four actuators and is smaller in magnitude; the
corresponding modiﬁcation to the path in the ﬂight phase is also smaller; see
Figs. 9.13 and 9.14.
The reaction forces on leg-1 are provided in Figs. 9.12 and 9.16. These
graphs show the alternating phases of single support and ﬂight. The robot
will not slip for a coeﬃcient of friction greater than 0.5. The vertical force
during the single support phase is very close to the weight of the robot (from
Table 6.3, its mass is 32 kg).
9.6
A Partial Robustness Evaluation
The purpose of this section is to show that the proposed control strategy may
still yield an attractive limit cycle even if the hypotheses made in the modeling
of the robot, the control law’s construction, and the analysis and simulation of
the closed-loop system are not met exactly. The model of Section 3.5 assumed
a rigid contact between the leg end and the ground. Here, a compliant contact
model will be used [176]. This has several consequences. First, the seven DOF
model of Section 3.5.1 will be used in the stance phase, with the position of the
leg end with respect to the ground evolving freely as a function of the reaction
forces provided by the compliant contact model. Second, the robot will enter
the ﬂight phase when the reaction forces at the leg end go to zero. Finally,
the impact forces at touch down will be computed by the compliant model as
well. In addition to these changes, parameter error will be introduced in the
robot model.
© 2007 by Taylor & Francis Group, LLC
0
1
2
3
4
5
−50
0
50
100
150
200
0
1
2
3
4
5
0
100
200
300
400
500

278
Feedback Control of Dynamic Bipedal Robot Locomotion
Table 9.2. Compliant contact model parameters.
Parameter
Value
Parameter
Value
λa
9 × 106
ϑa
260
λb
0.3
ϑb
0.6
ϑc
0.18
n
1.5
ϑd
0.3
k
25 × 105
ϑe
0.285
9.6.1
Compliant Contact Model
In the experimental platform of RABBIT, see Sections 2.1, 6.6.2.1, and 8.1.1,
the contact between the ends of the robot’s legs and the ground is compliant
and the ends of the legs may slip. A model that more closely reﬂects these
points is summarized here. A more detailed discussion is available in [176]
The dynamic model consists of the full 7-DOF model of the biped (3.84)
with the computation of the forces acting on the leg end being given by
Fn = −λa|z|n ˙z −λb|z|n sgn(˙z)
+
|˙z| + k|z|n
Ft = (ϑad + ϑb ˙d + ϑcv + ϑd sgn( ˙v)
+
|v|)|Fn|
˙d = v −|v| ϑa
ϑe d,
(9.58)
where z ≤0 is the penetration depth (if z ≤0, the leg is in contact with the
ground, if z > 0, the leg is not in contact with the ground and the contact
forces equal zero) and v is the relative velocity of the end of the leg with
respect to the ground. This model supposes that the interface between the
two contacting surfaces is a contact between bristles; the average deﬂection
d of the bristles is an internal state used to model dynamic friction.
The
a nominal penetration of approximately 3 mm and to avoid rebound of the
leg during the stance phase.
Together, the models (3.84) and (9.58) describe the robot’s evolution in all
phases of motion: ﬂight, stance, and impact. The robot’s dynamics are then
described by ordinary (nonhybrid) diﬀerential equations over the entire stride,
even during the impact, which will now have a nonzero duration. With this
model, contact forces at the leg end are continuous, which means in particular
that they will not experience an instantaneous jump to zero at the transition
from stance to ﬂight as supposed in the development of the control law.
© 2007 by Taylor & Francis Group, LLC
numerical values used in the simulation, given in Table 9.2, were adjusted for
and the references therein.

Running with Point Feet
279
9.6.2
Simulation with Modeling Error
In addition to the structural change in the contact model, parametric modeling
error is included. A deviation of ±20% in the masses and inertias was intro-
duced between the robot’s design model and the simulation model; symmetry
of the two legs was preserved. It is important to note that one consequence
of parametric error is that there will be an error in the state of the robot at
landing; because the ﬂight-phase controller does not correspond to the sim-
ulation model, it will not correctly account for the conservation of angular
momentum. Finally, saturation of ±150 Nm was introduced on the torques
to take into account the limitations of the actuators of RABBIT.
Despite all of the diﬀerences between the simulation model and the model
used to design the controller, the feedback controller illustrated in Section 9.5
is able to induce a stable running motion. This is shown in Figs. 9.17–9.20 for
a nominal speed of 1.5 m/s. In the simulations, the controller was switched
from the stance phase to ﬂight phase when θs(q) attained θ−
s , and it was
switched from ﬂight phase to stance phase when the penetration of the leg
end into the compliant surface exceeded 2 mm. Due to the diﬀerences in the
design and simulation models, the limit cycle does not correspond exactly to
the theoretical prediction. The value of ζ∗calculated from the simulation data
and the model parameters is 829, whereas the value predicted with the rigid
model and perfectly known parameters was 801 (see Table 9.1). The average
running speed was calculated to be 1.54 m/s, compared to the design’s value
of 1.50 m/s.
the phase plane; the convergence to a limit cycle is clear. At touchdown, the
roles of the legs are swapped, as when the rigid contact model was used. At
the beginning of the stance phase, the impact causes an abrupt change in the
robot’s velocities. At the moment of contact, the robot’s velocities still corre-
spond to their values from the ﬂight phase. The control law sees this as a large
set-point error and consequently applies a large torque, resulting in satura-
tion; see Fig. 9.19. Once past the impact, the evolution of the relative angles
is quite close to what was predicted with the rigid impact model; see Fig. 9.9
and Fig. 9.10. The perturbations during the ﬂight phase are small because
the initial condition of the simulation lies on the periodic orbit corresponding
to the rigid contact model and no parametric modeling error.
The reaction forces on leg-1 are provided in Fig. 9.20. These graphs show
the alternating phases of single support and ﬂight. Except during impact,
which is no longer instantaneous, the forces are close to the values predicted
by the earlier simulation; see Fig. 9.12. The penetration of the stance leg
end stabilizes at approximately 3 mm. These two plots show clearly the very
rapid liftoﬀof the stance leg to initiate the ﬂight phase. Consequently, for
the purposes of modeling, feedback design, and analysis, it is as reasonable to
suppose an instantaneous transition to the ﬂight phase as it is to suppose an
instantaneous impact.
© 2007 by Taylor & Francis Group, LLC
Figures 9.17 and 9.18 show the evolution of the conﬁguration variables in

280
Feedback Control of Dynamic Bipedal Robot Locomotion
Figure 9.17. Running at 1.5 m/s with the compliant contact model and
parametric modeling error. The four graphs depict the relative joint angles in
radians (x-axis) versus their velocities in rad/sec (y-axis) in the stance, ﬂight,
and impact phases. The swing knee angle is the knee of leg-2, the swing hip
angle is the hip of leg-2, the stance knee angle is the knee of leg-1, and the
stance hip angle is the hip of leg-1. At impact, the roles of the limbs are
exchanged. Notice the abrupt change in the velocities at impact, especially
in the stance leg. The plots indicate that a limit cycle is achieved.
© 2007 by Taylor & Francis Group, LLC
0.6
0.8
1
1.2
1.4
1.6
−10
−5
0
5
1.5
2
2.5
3
−6
−4
−2
0
2
4
0.6
0.7
0.8
0.9
1
1.1
−8
−6
−4
−2
0
2
4
1.5
2
2.5
3
0
1
2
3
4
5
Knee 2 Angle
Hip 2 Angle
Knee 1 Angle
Hip 1 Angle

Running with Point Feet
281
Flight
Stance
Figure 9.18. Running at 1.5 m/s with the compliant contact model and
parametric modeling error. The graph depicts torso angle in radians (x-axis)
versus its velocity in rad/sec (y-axis) in the stance and ﬂight phases. Notice
that the ﬂight-phase controller has approximately regulated the torso angle
to its desired value of q5,d at impact. The plot indicates that a limit cycle is
achieved.
Figure 9.19. Running at 1.5 m/s with the compliant contact model and para-
metric modeling error. The four graphs depict the joint torques in Newton-
meters (y-axis) versus time in seconds (x-axis) in the stance and ﬂight phases.
The torques are limited to ±150 Nm. Upon convergence to the periodic orbit,
the achieved torques are close to their optimal values. Prior to convergence,
note the larger torques in the beginning of the stance phase due to a combi-
nation of modeling error and landing in the wrong state.
© 2007 by Taylor & Francis Group, LLC
0
1
2
3
4
5
200
100
0
100
200
Knee 1 Torque
0
1
2
3
4
5
200
100
0
100
200
Hip 1 Torque
0
1
2
3
4
5
200
100
0
100
200
Hip 2 Torque 
0
1
2
3
4
5
200
100
0
100
200
Knee 2 Torque

282
Feedback Control of Dynamic Bipedal Robot Locomotion
Figure 9.20. Running at 1.5 m/s with the compliant contact model and
parametric modeling error. The left graph depicts leg-1 (stance leg) horizontal
and vertical force components in Newtons (y-axis) versus time in seconds (x-
axis) in the stance and ﬂight phases. Large forces occur at touchdown; the
maximal vertical force is close to 8000 N and the maximal horizontal force is
close to −4000 N with the compliant contact model. The vertical lines show
the instant of transition between the control law phases. The right graph
depicts the vertical position of the leg end in meters (y-axis) versus time in
seconds (x-axis) in the stance and ﬂight phases. Notice that the ﬂight control
law induces the stance leg to lift oﬀquickly and the reaction forces to go to
zero.
9.7
Additional Event-Based Control for Running
Each of the feedback designs illustrated in Section 9.5 resulted in a nominally
exponentially stable running motion. Indeed, this has been the case for all of
the periodic orbits computed using the techniques in [44]. From Table 9.1, it is
seen that the rate of convergence to the periodic orbit decreases as the average
running speed increases (that is, μ becomes closer to 1.0). The aim of this
section is to illustrate how an additional event-based control action introduced
in Chapter 7 can be proﬁtably used to increase the rate of convergence to the
periodic orbit. It will also be shown that the additional feedback action can
be used to reduce the magnitude of the torques that are used in the ﬂight
phase to attain the desired landing state.
Remark 9.3
In Section 9.6.2, it was seen that modeling error alters the
average running speed. As in Chapter 7, event-based control could also be
used to attenuate the eﬀects of modeling error on average running speed. In
addition, it could be used to stabilize a periodic orbit that was nominally
unstable under the feedback designs proposed so far.
© 2007 by Taylor & Francis Group, LLC
1
1.2
1.4
1.6
−200
0
200
400
600
800
1000
1
1.2
1.4
1.6
0
0.05
0.1
0.15
0.2

Running with Point Feet
283
9.7.1
Deciding What to Control
Based on the approach taken in [185], it is natural to conjecture that mod-
iﬁcation of the target landing conﬁguration stride-to-stride can be used to
improve the rate of convergence to the orbit and the peak torques in the
ﬂight phase. In particular, the horizontal distance between the center of mass
and the stance leg has a strong eﬀect7 on μ. This suggests modifying the land-
ing conﬁguration in the direction [0; 0; 1; 0; 0]. On the other hand, the action
of modifying the ﬂight trajectory to obtain the correct orientation of the torso
at landing is what leads to the higher torques. This suggests modifying the
landing conﬁguration in the direction [0; 0; 0; 0; 1].
9.7.2
Implementing Stride-to-Stride Updates of Landing
Conﬁguration
Let qf−
0
denote the nominal landing conﬁguration for one of the running mo-
tions of Section 9.5; see (9.52). Set the desired landing conﬁguration at the
k th stride to be
qf−
0,d(k) = qf−
0
+ [0; 0; w1(k); 0; w2(k)],
(9.59)
where the scalars w1(k) and w2(k) are to be updated at the end of each stance
phase. Through the impact map (3.101), a change in the desired landing con-
ﬁguration needs to be accompanied by a corresponding change in the desired
initial stance conﬁguration. Both of these changes entail stride-to-stride pa-
rameter updates to the stance and ﬂight controllers of Section 9.3. As a result,
the restricted Poincar´e map is now a function of w1(k) and w2(k) and can be
viewed as a discrete-time control system
ζ(k + 1) = ρ(ζ(k), w1(k), w2(k))
(9.60)
with state space ˜S ∩Zs and inputs (w1; w2) ∈R2; see Chapters 4 and 7 for
details. Linearizing (9.60) about the nominal ﬁxed-point ζ∗corresponding to
w1 = 0 and w2 = 0 results in
δζ(k + 1) = μδζ(k) + b1δw1(k) + b2δw2(k).
(9.61)
The value of μ is determined from Corollary 9.1; the sensitivities b1 and b2
are more easily determined numerically through a simulation of the model.
Linear state variable feedback δw1(k) = k1δζ(k), δw2(k) = k2δζ(k) can
then be used to tradeoﬀpeak torques and the rate of convergence to the
ﬁxed point. For the running motion with average speed of 1.5 m/s, it was
7When the heights of the center of mass at the beginning and end of the stance phase are
the same, μ = (χ −|β|), which is a function only of the horizontal position of the center of
mass with respect to the stance leg end; see (9.33).
© 2007 by Taylor & Francis Group, LLC

284
Feedback Control of Dynamic Bipedal Robot Locomotion
Figure 9.21. A one-parameter search to minimize peak torque. Let k2 = ak1.
The graph depicts the maximal torque in Newton-meters (y-axis) versus the
parameter a (x-axis) for an initial velocity of the robot equal to ±10% of its
value on the periodic orbit (the solid line corresponds to +10% and the dashed
line corresponds to −10%). The best choice of parameter a is 0.3 < a < 0.35
to minimize the peak torque.
arbitrarily decided to place the closed-loop eigenvalue at μd = 2/3. A one-
parameter search was then performed to minimize the torques in the ﬂight
phase when the velocity upon entering the ﬂight phase diﬀered from the value
on the periodic orbit by ±10%, subject to μ+k1b1 +k2b2 = 2/3; see Fig. 9.21.
This resulted in k1 = 7.8 × 10−5 and k2 = 2.6 × 10−5. It is important to
note that transient performance has been optimized subject to a stability
constraint.
9.7.3
Simulation Results
Assuming no modeling error and initializing the closed-loop system oﬀthe pe-
riodic orbit—with the initial velocity 10% higher than its value on the periodic
orbit—yields the simulation data presented in Figs. 9.22–9.24. The landing
conﬁguration is being modiﬁed at each stride. The orientation of the support
hip and the torso vary slightly stride-to-stride under the event-based feedback.
The deviation in the ﬂight phase trajectory—compare Figs. 9.22 and 9.23 to
Figs. 9.9 and 9.10—is clearly much less under the event-based control action.
Consequently, the torques during the ﬂight phase are noticeably reduced; see
Fig. 9.24.
The evolution of ζ from stride-to-stride over the course of the simulation is
presented in Fig. 9.25. The desired convergence rate has been achieved.
The evolution of the event-based control action w1 is presented in Fig. 9.26.
The induced variation in the landing conﬁguration is rather small. Despite
© 2007 by Taylor & Francis Group, LLC
0
0 05
0 1
0 15
0 2
0 25
0 3
0 35
0 4
0 45
0 5
50
100
150
200
250
300
350
400
450

Running with Point Feet
285
Figure 9.22. Running at 1.5 m/s with event-based control of the landing
conﬁguration. The four graphs depict the relative joint angles in radians (x-
axis) versus their velocities in rad/sec (y-axis) in the stance, ﬂight, and impact
phases. The swing knee angle is the knee of leg-2, the swing hip angle is the
hip of leg-2, the stance knee angle is the knee of leg-1, and the stance hip
angle is the hip of leg-1. At impact, the roles of the limbs are exchanged as
a consequence the conﬁguration angles change at impact; see (3.101). Notice
that the robot no longer has the same conﬁguration at each transition between
phases. The plots indicate that a limit cycle is achieved.
© 2007 by Taylor & Francis Group, LLC
0.5
1
1.5
2
−10
−5
0
5
1.5
2
2.5
3
−6
−4
−2
0
2
0
0.5
1
1.5
−6
−4
−2
0
2
4
1.5
2
2.5
3
1
2
3
4
5
Knee 2 Angle
Hip 2 Angle
Knee 1 Angle
Hip 1 Angle

286
Feedback Control of Dynamic Bipedal Robot Locomotion
Figure 9.23. Running at 1.5 m/s with event-based control of the landing
conﬁguration. The graph depicts torso angle in radians (x-axis) versus its
velocity in rad/sec (y-axis) in the stance and ﬂight phases. Notice that the
torso angle at the end of the ﬂight phase varies stride-to-stride. The plot
indicates that a limit cycle is achieved.
Figure 9.24. Running at 1.5 m/s with event-based control of the landing
conﬁguration. The four graphs depict the joint torques in Newton-meters (y-
axis) versus time in seconds (x-axis) in the stance and ﬂight phases. Modifying
the landing conﬁguration stride-to-stride has resulted in much smaller torques
when the robot is oﬀthe periodic orbit.
© 2007 by Taylor & Francis Group, LLC
0 82
0 81
0 8
0 79
0 78
0 77
0 4
0 3
0 2
0 1
0
0 1
0 2
0 3
0 4
0
1
2
3
4
5
200
100
0
100
200
Knee 1 Torque
0
1
2
3
4
5
200
100
0
100
200
Hip 1 Torque
0
1
2
3
4
5
200
100
0
100
200
Hip 2 Torque
0
1
2
3
4
5
200
100
0
100
200
Knee 2 Torque

Running with Point Feet
287
Figure 9.25. Running at 1.5 m/s with event-based control of the landing
conﬁguration. The graph’s thick line depicts the value of ζ at step k+1 (y-axis)
versus its value at step k (x-axis) as obtained directly from the simulation.
The desired modiﬁcation in the slope of the Poincar´e map has been obtained
without changing the ﬁxed point: slope ≈0.66 and ζ∗≈800. The thin line
is the identity map. The ﬁxed point is at the intersection of the two lines.
this, there are signiﬁcant improvements in the rate of convergence to the
periodic orbit and the reduction in peak torque.
9.8
Alternative Control Law Design
Up to this point, in order to achieve invariance of the zero dynamics mani-
fold at landing, a deadbeat action has been incorporated in the ﬂight phase
controller to steer the robot to land in a predetermined conﬁguration, while re-
specting conservation of angular momentum about the robot’s center of mass.
This action of the hybrid controller is key to creating a hybrid zero dynamics
that allows the stability of a running motion to be analyzed in closed form on
the basis of a restricted Poincar´e map. In this section, the hypotheses on the
landing conﬁguration are slightly relaxed, leading to a controller that is easier
to design, but which still lends the closed-loop system to a reduced-dimension
stability test. To account for the changing conﬁguration of the robot at touch-
down, a form of the transition controller of Section 7.2 is adopted.8 Key points
of the stability analysis are highlighted in Section 9.8.1.7.
8Caveat: the transition controller used here takes into account the joint angles of the robot
at touchdown but not the joint angular velocities. As a result, a true HZD of running is not
created, and the stability analysis of the closed-loop system must be modiﬁed accordingly.
© 2007 by Taylor & Francis Group, LLC
780
800
820
840
860
880
900
920
780
800
820
840
860
880
900
920

288
Feedback Control of Dynamic Bipedal Robot Locomotion
Figure 9.26. Running at 1.5 m/s with event-based control of the landing
conﬁguration. The graph depicts w1 (y-axis) versus step number (x-axis) as
obtained in the simulation. Note that w2 = (k2/k1)w1.
9.8.1
Controller Design
The discrete and continuous actions of the modiﬁed hybrid control law are
now discussed in detail.
9.8.1.1
Virtual Constraints
Since RABBIT has four independent actuators (two at the hips and two at the
knees), four virtual constraints may be imposed in both the stance and ﬂight
phases.
For purposes of design, the virtual constraints are parameterized
as in Chapter 6. The parameter sets of the stance phase and ﬂight phase
virtual constraints are distinguished by as and af, respectively, taking values
in As := Rns and Af := Rnf. The parameter may be updated at takeoﬀand
landing events but are otherwise constant. With this notation, the virtual
constraints for stance and ﬂight are, respectively,
y = qb −hd,s[as](θs(qs))
(9.62a)
y = qb −hd,f[af](θf[af](qf)).
(9.62b)
9.8.1.2
Stance Phase Control
The controller for the stance phase acts by updating the parameters as and
by enforcing the virtual constraints (9.62a). Apart from diﬀerent boundary
conditions that will be introduced on the virtual constraints, this control
is identical to the controller developed in Section 9.3.1. The stance phase
parameter vector, as, may be expressed as
as := (as,0; as,1; . . . ; as,ms−1; as,ms; θ−
s ; θ+
s ),
(9.63)
© 2007 by Taylor & Francis Group, LLC
0
5
10
15
20
25
0 002
0
0 002
0 004
0 006
0 008
0 010

Running with Point Feet
289
where ms ≥3, as,i ∈R4 for i ∈{0, 1, . . ., ms −1, ms}, and θ−
s , θ+
s ∈R. Note
that ns = 4 (ms + 1) + 2. The terms θ−
s and θ+
s are the values of the function
θs(qs) evaluated at the end and the beginning of the stance phase. Instead of
B´ezier polynomials, suppose that a slightly diﬀerent class of polynomials9 are
used such that:
hd,s[as](θ+
s ) = as,0
d
dθs hd,s[as](θ−
s ) = as,ms−1
d
dθs hd,s[as](θ+
s ) = as,1
hd,s[as](θ−
s ) = as,ms.
(9.64)
The stance-phase virtual constraints are imposed on the dynamics by using
a control us : Xs × As →R4 that drives (9.62a) to zero in ﬁnite time. The
speciﬁc conditions are as in Theorem 5.4.
9.8.1.3
Flight Phase Control
The development of the ﬂight-phase controller is similar to that of the stance-
phase controller. The key diﬀerence is the choice of θf in (9.62b) to be a
function of the position of the center of mass. The ﬂight-phase parameter
vector, af, is deﬁned as
af := (af,0; af,1; . . . ; af,mf−1; af,mf; x+
cm,f; ˙x+
cm,f; Tf),
(9.65)
where mf ≥3, af,i ∈R4 for i ∈{0, 1, . . ., mf −1, mf}, and x+
cm,f, ˙x+
cm,f, Tf ∈R.
Note that nf = 4 (mf +1)+3. The terms x+
cm,f, ˙x+
cm,f, and Tf are, respectively,
the horizontal position of the center of mass at the beginning of the ﬂight
phase, the horizontal velocity of the center of mass at the beginning of the
ﬂight phase, and the estimated10 duration of the ﬂight phase. The ﬂight phase
virtual constraints (9.62b) are given by
θf[af](qf) := 1
Tf
"
xcm −x+
cm,f
˙x+
cm,f
#
,
(9.66)
and hd,f[af], which, as in the stance phase, is a smooth, vector-valued function
that satisﬁes
hd,f[af](0) = af,0
d
dθf hd,f[af](1) = af,mf−1
d
dθf hd,f[af](0) = af,1
hd,f[af](1) = af,mf.
(9.67)
For a given stride, let tf denote the elapsed time within the ﬂight phase.
By conservation of linear momentum, ˙x+
cm,f is constant during ﬂight, which
9Any class of smooth functions satisfying these properties may be used to deﬁne virtual
constraints.
10Calculation of Tf requires the height of the center of mass at landing, y−
cm,f, to be known
a priori, which is only possible if the virtual constraints are exactly enforced throughout
the ﬂight phase.
© 2007 by Taylor & Francis Group, LLC

290
Feedback Control of Dynamic Bipedal Robot Locomotion
implies tf = (xcm −x+
cm,f)/ ˙x+
cm,f. As a result, θf = tf/Tf is a valid substitute
for (9.66), and for this reason, the given ﬂight phase virtual constraints are
said to be time scaled. Flight phase virtual constraints are enforced using any
smooth state-feedback controller uf : Xf ×Af →R4 that drives (9.62b) to zero
exponentially quickly.
9.8.1.4
Transition Control: Landing
In the event that landing occurs with the state of the robot not satisfy-
ing the virtual constraints, the control parameters of the subsequent stance
phase, as, are updated to ensure that the conﬁguration of the robot satisﬁes
qb −hd,s[as](θ+
s ) = 0. The parameter updates are governed by the diﬀeren-
tiable function ws
f : Ss
f →As, such that for as = ws
f(x−
f ),
as,0 = q+
b
as,1 = a∗
s,1
...
as,ms−1 = a∗
s,ms−1
as,ms = a∗
s,ms.
θ+
s = θs(q+
s )
θ−
s = θ−∗
s
(9.68)
In the above, q+
s is calculated using Δs
f(x−
f ), and the terms θ−∗
s
and a∗
s,i ∈R4,
i ∈{1, . . . , ms −1, ms} are constant parameters chosen during design.
If the stance phase ﬁnite-time controller can satisfy the virtual constraints
(9.62a) before the liftoﬀevent occurs, and the parameter updates obey (9.68),
then the stance phase will terminate with qb −hd,s[as](θ−
s ) = 0, or equiva-
lently, with q−= q−∗.
9.8.1.5
Transition Control: Takeoﬀ
At takeoﬀ, the parameters of the ﬂight phase virtual constraints, af, are up-
dated so that the duration of the planned motion of the robot is equal to
the estimated ﬂight time. Parameter updates are governed by a continuously
diﬀerentiable function wf
s : Sf
s →Af, such that for af = wf
s(x−
s ),
af,0 = a∗
f,0
af,1 = a∗
f,1
...
af,mf−1 = a∗
f,mf−1
af,mf = a∗
f,mf
x+
cm,f = (fcm(q−
s ))1
˙x+
cm,f =
∂fcm
∂qs
(q−
s ) ˙q−
s

1
Tf =
˙y+
cm,f
g0
+
6
( ˙y+
cm,f)2 −2g0(y−∗
cm,f −y+
cm,f)
g0
,
(9.69)
© 2007 by Taylor & Francis Group, LLC

Running with Point Feet
291
where y−∗
cm,f is the height of the center of mass at the end of the ﬂight phase on
the limit cycle. The terms a∗
f,i ∈R4, i ∈{0, 1, . . ., mf −1, mf} are parameters
chosen during design. As before, initiation of the takeoﬀevent is a control
decision, designated to occur when θs(q) = θ−
s . In the closed-loop model,
the switching hypersurface is Sf
s = {(xs, as) ∈Xs × As | Hf
s(xs, as) = 0} where
Hf
s(xs, as) := θs(q) −θ−
s .
9.8.1.6
Closed-Loop Hybrid Model
The closed-loop hybrid model is deﬁned as before.
Deﬁne the augmented
state spaces ¯Xf := T Qf × Af and ¯Xs := T Qs × As with elements given by
¯xf := (qf; ˙qf; af) and ¯xs := (q; ˙q; as). The closed-loop dynamics may then be
written as
¯ff(¯xf) :=

ff(xf) + gf(xf)uf(xf, af)
0nf×1

(9.70a)
¯fs(¯xs) :=

fs(xs) + gs(xs)us(xs, as)
0ns×1

.
(9.70b)
The vectors of zeros correspond to the fact that the virtual constraint parame-
ters do not change during the continuous phases of running. The impact maps
in which the parameters are updated are modiﬁed to include the parameter
update laws ws
f and wf
s:
¯Δs
f(¯x−
f ) :=

Δs
f(x−
f )
ws
f(x−
f )

(9.71a)
¯Δf
s(¯x−
s ) :=

Δf
s(x−
s )
wf
s(x−
s )

.
(9.71b)
The closed-loop hybrid model is then
Σcl,f :
⎧
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎩
¯Xf = T Qf × Af
¯Ff : ( ˙¯xf) = ¯ff(¯xf)
¯Ss
f = {(xf; af) ∈¯Xf | Hs
f (xf) = 0}
¯T s
f : ¯x+
f = ¯Δs
f(¯x−
f )
(9.72a)
Σcl,s :
⎧
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎩
¯Xs = T Qs × As
¯Fs : ( ˙¯xs) = ¯fs(¯xs)
¯Sf
s = {(xs; as) ∈¯Xs | Hf
s(xs, as) = 0}
¯T f
s : ¯x+
s = ¯Δf
s(¯x−
s ).
(9.72b)
© 2007 by Taylor & Francis Group, LLC

292
Feedback Control of Dynamic Bipedal Robot Locomotion
9.8.1.7
Existence and Stability of Periodic Orbits
The Poincar´e return map is formed as in (9.28). Theorem 9.1 still holds, but
its application cannot be further simpliﬁed via the restricted Poincar´e map of
Theorem 9.3, because the zero dynamics manifold of the stance phase is not
invariant under the impact map. The analysis of the existence and stability
of periodic orbits proceeds, instead, with Theorem 4.4, which uses a diﬀerent
restricted Poincar´e map; see (4.23).
9.8.2
Design of Running Motions with Optimization
The parameter optimization method of Section 6.3 can be modiﬁed to search
the parameter spaces As and Af for a set of parameters resulting in a desirable
gait.
Optimization is performed directly on the parameters of the virtual
constraints in order to simultaneously determine a periodic running motion
and a controller that achieves it. This is in contrast with the approach of
Section 9.5 where the virtual constraints were designed by regression against
optimal, precomputed, periodic trajectories. As in Section 6.3, constraints are
incorporated into the search to address actuator limits, allowable joint space,
and unilateral ground-contact forces.
The constraints are also selected to
ensure steady-state running at a desired speed. The cost function is selected
to achieve overall eﬃciency of the gait.
A periodic orbit is sought on which the virtual constraints are identically
satisﬁed. This has two consequences: ﬁrst, the integration of the closed-loop
system dynamics can be performed using the stance and ﬂight phase zero
dynamics (see Section 9.3 for details), resulting in short computation times;
and second, the virtual constraint parameters as and af are not completely
independent. Once the independent parameters have been identiﬁed (i.e., once
the dependent parameters are eliminated), standard numerical optimization
routines may be used to search for desirable gaits. The implementation of
such a procedure is outlined next.
9.8.2.1
Boundary Conditions of the Virtual Constraints
The transition maps of takeoﬀand landing can be used to identify redundan-
cies between the virtual constraint parameter vectors as and af. Given the
state corresponding to the limit-cycle stance phase end, x−∗
s
= (q−∗
s
; ˙q−∗
s
),
the state at the beginning of the subsequent ﬂight phase may be computed
as x+∗
f
= (q+∗
f
; ˙q+∗
f
) = Δf
s(x−∗
s ). For both x−∗
s
and x+∗
f
to satisfy the virtual
constraints of their respective phases, the following relations must hold,
a∗
s,ms−1 = ˙q−∗
b,s / ˙θ−∗
s
a∗
f,0 = q+∗
b,f
a∗
s,ms = q−∗
b,s
a∗
f,1 = ˙q+∗
b,f T ∗
f ,
(9.73)
which are derived by applying (9.64), (9.66), (9.67), and (9.69) to (9.62).
These are the boundary conditions associated with the liftoﬀevent of the
© 2007 by Taylor & Francis Group, LLC

Running with Point Feet
293
periodic orbit. The state of the robot at the beginning of the stance phase,
x+∗
s
= (q+∗
s ; ˙q+∗
s ), can be related to the state at the end of the previous ﬂight
phase, x−∗
f
= (q−∗
f
; ˙q−∗
f
), by the landing map x+∗
s
= Δs
f(x−∗
f
) to yield the
following additional design constraints,
a∗
s,0 = q+∗
b,s
a∗
f,mf−1 = ˙q−∗
b,f T ∗
f
a∗
s,1 = ˙q+∗
b,s / ˙θ+∗
s
a∗
f,mf = q−∗
b,f .
(9.74)
The update law presented here enforces fewer boundary conditions than
the update law of Section 9.5. The extra boundary conditions associated with
takeoﬀare already satisﬁed by (9.73), but those of landing are not met by
(9.74); they are more diﬃcult to satisfy due to conservation of angular mo-
mentum in the ﬂight phase. The main theoretical result of this section is that
invariance of the ﬂight and stance phase constraint surfaces over the land-
ing event is not a necessary condition for achieving provably stable running.
As noted earlier, relaxing this condition makes running motions signiﬁcantly
easier to design.
9.8.2.2
Optimization Algorithm Details
Trial gaits for the running experiments were generated using the constrained
nonlinear optimization routine fmincon of MATLAB’s Optimization Toolbox.
Three quantities are involved in optimization: J, a scalar cost function to be
minimized on the periodic orbit, EQ, a vector of equality constraints, and
INEQ, a vector of inequality constraints. The following is a description of
the optimization procedure that was implemented.
The independent and
dependent terms11 of optimization are given in Table 9.3. Note that when
the optimizer terminates with the constraints satisﬁed, x+∗
s
will be a point
located on a closed-loop periodic orbit and the virtual constraints will be
parameterized by (9.63) and (9.65).
9.8.2.3
Algorithm
1. Select the state corresponding to the end of the ﬂight phase, x−∗
f
=
(q−∗
f
; ˙q−∗
f
).
2. Using the ﬂight-to-stance transition function Δs
f calculate the state cor-
responding to the beginning of the subsequent stance phase, x+∗
s
=
(q+∗
s ; ˙q+∗
s ).
3. Calculate θ+∗
s
by (9.68) and a∗
s,0, a∗
s,1 by (9.74).
11“Terms” is used to describe those variables used in optimization; these are diﬀerent from
the parameters of the virtual constraints.
© 2007 by Taylor & Francis Group, LLC

294
Feedback Control of Dynamic Bipedal Robot Locomotion
Table 9.3. Independent and dependent terms used in optimization. The
choice of the independent terms is nonunique and depends on the speciﬁc
optimization procedure.
The terms below correspond to the algorithm in
Section 9.8.2.3, which is one straightforward method to ensure boundary con-
ditions on the virtual constraints in order to ensure periodicity of an orbit
satisfying the virtual constraints.
Terms of Optimization
Independent
Dependent
x−∗
f
∈
R14
θ+∗
s
∈
R
a∗
s,2, . . . , a∗
s,ms
∈
R4
a∗
s,0, a∗
s,1
∈
R4
θ−∗
s
∈
R
x+∗
s
∈
R10
a∗
f,2, . . . , a∗
f,mf−2
∈
R4
a∗
f,0, a∗
f,1
∈
R4
a∗
f,mf−1, a∗
f,mf
∈
R4
x+∗
cm,f, ˙x+∗
cm,f, T ∗
f
∈
R
x−
f
∈
R14
4. Select a∗
s,2, . . . , a∗
s,ms, and θ−∗
s
to complete the stance phase parameter
vector as.
5. Using parameters as and the initial condition x+∗
s , integrate the equa-
tions of motion of stance and apply the stance-to-ﬂight transition oper-
ator Δf
s to obtain x+∗
f
= (q+∗
f
; ˙q+∗
f
).
6. Calculate a∗
f,0, a∗
f,1 by (9.73); a∗
f,mf−1, a∗
f,mf by (9.74); and x+∗
cm,f, ˙x+∗
cm,f,
and T ∗
f by (9.69).
7. Select a∗
f,2, . . . , a∗
f,mf−2 to complete the ﬂight phase parameter vector af.
8. Using parameters af and initial condition x+∗
f
, integrate the equations
of motion of ﬂight to obtain x−
f .
9. Evaluate J, EQ, and INEQ.
10. Iterate Steps 1 to 9 until J is (approximately) minimized, each entry of
EQ is zero, and each entry of INEQ is less than zero.
9.8.2.4
An Example Running Motion
A sample running gait designed by the above algorithm is now presented. A
stick diagram of this motion is given in Fig. 9.27(a). The stability analysis
outlined in Section 9.8.1.7 was applied to the resulting running motion. Fig-
ure 9.27(b) gives the restricted Poincar´e map, which indicates that the motion
is locally exponentially stable. The gait was designed to minimize the integral
of torque squared per distance traveled, with the following constraints:
© 2007 by Taylor & Francis Group, LLC

Running with Point Feet
295
0.5
0
0.5
1
1.5
0.4
0.6
1.2
0.2
0.8
1.4
1.6
0
1
(m)
(m)
(a) Stick diagram
280
290
300
310
320
330
340
270
280
290
300
310
320
330
340
ζi
ζi+1 = ρ(ζi)
ζmin = 275
ζ∗= 303
(b) Poincar´e map
Figure 9.27. Stick diagram and Poincar´e map for the example running mo-
tion (rate 0.58 m/s). Poincar´e map constructed by evaluating ζ := (σ−
s,1)2/2
at the end of successive stance phases, where σ−
s,1 is the angular momen-
tum about the stance leg end just before liftoﬀ. The ﬁxed point, ζ∗= 303,
is located at the intersection of ρ and the identity map and corresponds to
an equilibrium running rate of 0.58 m/s.
The slope of the graph at ζ∗is
dρ/dζ ≈0.67, indicating exponential stability.
Equality constraints, EQ:
• error associated with ﬁnding a ﬁxed point ||x−
f −x−∗
f
||
• deviation from the desired running rate
• required frictional forces at the leg ends are zero just before takeoﬀand
just after landing (to prevent slipping at these transitions)
Inequality constraints, INEQ:
• magnitude of the required torque at each joint less than 100 Nm
• knee angles to lie in (0◦, −70◦) and hip angles to lie in (130◦, 250◦) (see
Fig. 6.13 for measurement conventions)
• minimum height of the swing foot during stance greater than 7 cm
• required coeﬃcient of friction of the stance phase less than 0.7
• ﬂight time greater than or equal to 25% of the total gait duration
• landing foot impacts the ground at an angle of approach less than 45◦
from vertical
• joint angular velocities less than 5 rad/sec.
© 2007 by Taylor & Francis Group, LLC

296
Feedback Control of Dynamic Bipedal Robot Locomotion
9.9
Experiment
This section summarizes a ﬁrst attempt to experimentally validate the theory
of stable running developed in this chapter.
The controller used was the
one of Section 9.8 because its implementation was easier than that of the
one reported in Section 9.3. In the set of experiments RABBIT executed six
running steps on multiple occasions, but a steady-state running gait was not
achieved. The observed gait was remarkably human-like, having long stride
lengths (approx. 50 cm or 36% of body length), ﬂight phases of signiﬁcant
duration (approx. 100 ms or 25% of step duration), an upright posture, and
an average forward rate of 0.6 m/s. A video is available at [96,239,240].
9.9.1
Hardware Modiﬁcations to RABBIT
Prior to the experiment reported here, only walking experiments had been
performed with RABBIT. To prepare for the task of running, four hardware
modiﬁcations were made.
The ﬁrst modiﬁcation was the inclusion of prosthetic shock absorbers in the
shanks. It was speculated that with shock absorbers the landing would cause
less wear and tear on the harmonic drive gear reducers that form RABBIT’s
hip and knee joints. The inclusion of shock absorbers added approximately
5 cm to each shank.
The second modiﬁcation was the installation of force sensitive resistors into
RABBIT’s point feet. These devices allowed for more accurate measurement
of the touchdown time than did the previously installed mechanical contact
switches. Since these sensors suﬀer from signiﬁcant drift, their signals were
numerically diﬀerentiated to make easier the detection of impact events.
The last two modiﬁcations were the bolting of aluminum u-channel stock
along each thigh and the widening of the hips. Both of these changes were
made to help prevent ﬂexing of the legs in the frontal plane.
Signiﬁcant
ﬂexing was witnessed during the ﬁrst several experimental trials of running.
This problem was more pronounced in running than in walking because of the
greater impact forces associated with landing. On several occasions RABBIT
“tripped itself” during a stance phase of running when the swing leg passed by
the stance leg (the legs knocked against each other). This came about because
RABBIT was designed to have its legs close together to better approximate
a planar biped.
9.9.2
Result: Six Running Steps
After completing the hardware modiﬁcations and successfully reproducing
previous walking experiments, running experiments were conducted. A num-
© 2007 by Taylor & Francis Group, LLC

Running with Point Feet
297
18.5
19
19.5
20
20.5
21
21.5
0.16
0.12
0.08
0.04
0
estimated height (m)
time (sec)
Figure 9.28. Estimated height of the feet (i.e., leg ends) with RABBIT’s
left foot indicated in bold. Flight phases occur when neither foot is at zero
height.
ber of experimental trials resulted in RABBIT taking several human-like12
running steps. One such trial, which was an implementation of the example
running motion of Section 9.8.2.4, will be discussed here.
For this experiment, motion was initiated by an experimenter who pushed
the robot forward, into the basin of attraction of a walking controller that
induced walking with an average forward walking rate of 0.8 m/s. RABBIT
then achieved stable walking, followed by a transition to running in a single
step, followed by 6 running steps. After the sixth step, the experiment was
terminated by the control software when the tracking error limit of 0.3 radians
was exceeded for the stance knee angle. Examination of collected data sug-
gests that tracking error resulted from actuator saturation.13 Data also show
the swing leg extremely close to the ground at the moment the experiment
was terminated, suggesting the swing leg may have, in fact, struck the ground
contributing additional tracking error.
A plot of estimated14 foot height is given in Fig. 9.28.
Average stride
duration for the steps was 431 ms. Flight times, observed as those portions
of Fig. 9.28 where neither leg is at zero height, lasted an average of 107 ms
(25% of the stride). Videos of the experiment and many additional data plots
are available at [96,239,240].
12A human-like gait is considered to be characterized by an upright posture, a torso leaning
slightly forward, and a long step length.
13See Section 8.2 for a description of the PD controllers used to enforce the virtual con-
straints.
14When RABBIT is in ﬂight, there is no accurate way to determine hip height. A sensor
was mounted to record boom pitch angle, but due to ﬂexing of the boom, these data were
inaccurate. During the stance phase, this lack of sensing does not pose a problem because
the end of the stance leg is always at zero height.
© 2007 by Taylor & Francis Group, LLC

298
Feedback Control of Dynamic Bipedal Robot Locomotion
9.9.3
Discussion
Several drawbacks related to RABBIT’s hardware did not appear until run-
ning was attempted. (For a discussion of general implementation issues of
walking, including unmodeled eﬀects of the boom, gear reducers, and an
uneven walking surface, see Section 8.1.1.)
Future running experiments—
whether on RABBIT or another, similar mechanism—should take into account
the following issues.
9.9.3.1
Boom Dynamics
The perturbing eﬀects of the boom were found to be much more signiﬁcant
during ﬂight phases than during stance phases. When RABBIT is modeled as
a planar system, an analysis of the three-dimensional mechanics shows that
the contribution of the boom to the center of mass dynamics is signiﬁcant.
Speciﬁcally, q5 is no longer, in general, a cyclic variable during ﬂight. However,
if boom masses are appropriately distributed, the parabolic motion of the
center of mass, as modeled in a planar system, is recovered. Unfortunately,
this special mass distribution was impossible because RABBIT does not have
a counterweight system.
9.9.3.2
Walking Surface
The walking surface was also a source of problems. This surface—consisting
of rubber over elevated plywood supported on the edges by a wood frame—
was originally built to provide a uniform, level surface. Although the surface
appears uniform, walking experiments demonstrated otherwise. It was found
that the surface has “fast” and “slow” areas corresponding to varying ﬂoor
stiﬀness and coeﬃcient of friction.
9.9.3.3
Limited Joint Space
For safety, RABBIT’s joints have hard stops that limit its joint space, which,
for example, prevent the shank from contacting the thigh. Although the avail-
able joint space was suﬃcient for walking, it became a signiﬁcantly limiting
factor in the design of running gaits. These hard stops prevented the swing
leg from being folded close to the hip, which is a natural and desirable motion
that minimizes the leg’s rotational inertia.
© 2007 by Taylor & Francis Group, LLC

Part III
Walking with Feet
299
© 2007 by Taylor & Francis Group, LLC


10
Walking with Feet and Actuated Ankles
The stance foot plays an important role in human walking since it contributes
to forward progression, vertical support, and initiation of the lifting of the
swing leg from the ground [155,166]. Working with a mechanical model, Kuo
showed in [144] that plantarﬂexion of the ankle, which initiates heel rise and
toe roll, is the most eﬃcient method to reduce energy loss at the subsequent
impact of the swing leg. This motion is also necessary for the aesthetics of
mechanical walking.
The present chapter addresses the modeling and control of planar bipedal
robots with nontrivial feet, with emphasis on a walking motion that allows
anthropomorphic foot action [203] as depicted in Fig. 10.1. The studied robot
model is planar, bipedal, and fully actuated in the sense that it has revolute,
actuated ankles that are attached to feet of nonzero length. The desired walk-
ing motion is assumed to consist of three successive phases: a fully actuated
phase where the stance foot is ﬂat on the ground, an underactuated phase
where the stance heel lifts from the ground and the stance foot rotates about
the toe, and an instantaneous double support phase where leg exchange takes
place. The main objective is to show how the feedback design methodology
presented for robots with point feet can be extended to obtain a provably
asymptotically stabilizing controller that integrates the fully actuated and
underactuated phases of walking. By comparison, existing humanoid robots,
such as Asimo, use only the fully actuated phase (i.e., they only execute
ﬂat-footed walking), while RABBIT and ERNIE use only the underactuated
Figure 10.1. The three phases of walking modeled in this chapter: (left)
fully actuated phase where the stance foot is ﬂat on the ground, (center)
underactuated phase where the stance heel rises from the ground and the
stance foot rotates about the stance toe, and (right) double-support phase
where the swing foot impacts the ground.
301
© 2007 by Taylor & Francis Group, LLC

302
Feedback Control of Dynamic Bipedal Robot Locomotion
phase (i.e., they have no feet and hence walk as if on stilts). The controller
proposed here is organized around the hybrid zero dynamics of Chapter 5 in
order that the stability analysis of the closed-loop system may be reduced to
a one-dimensional Poincar´e map that can be computed in closed form.
10.1
Related Work
A stability analysis of a ﬂat-footed walking gait for a ﬁve-link biped with an
actuated ankle was carried out numerically in [120, 121], using the Poincar´e
return map.
The control law used feedback linearization to maintain the
robot’s posture and advance the swing leg; trajectory tracking was only used
in the limited sense that the horizontal component of the center of mass was
commanded to advance at a constant rate. The unilateral constraints due to
foot contact were carefully presented. Motivated by energy eﬃciency, elegant
work in [216, 217] has shown how to realize a passive walking gait in a fully
actuated bipedal robot walking on a ﬂat surface. Stability of the resulting
walking motion has been rigorously established. The main drawback, however,
is that the assumption of full actuation once again restricts the foot motion
to ﬂat-footed walking.
For walking gaits that include foot rotation, various ad hoc control solutions
have been proposed in the literature [160,171,203,207,223,251], but none of
them can guarantee stability in the presence of the underactuation that occurs
during heel roll or toe roll. The previous work presented in Chapters 5–7 on
the control of robots with point feet is well suited to handle this underactu-
ation; indeed, conceptually, a point foot corresponds to continuous rotation
about the toe throughout the entire stance phase (e.g., walking like a ballerina
or as if on stilts). In this chapter, the analysis of walking with point feet is
extended to design a controller that provides asymptotically stable walking
with an anthropomorphic foot motion. To underline that the ZMP criterion
alone is not suﬃcient for the stability of a walking gait, the results of this
chapter are used to construct a periodic orbit on which the ZMP criterion is
satisﬁed at each point of the gait, but yet the orbit is unstable.
10.2
Robot Model
A hybrid model of walking with feet is developed for a planar bipedal robot
satisfying all of the hypotheses of Chapter 3, with the addition of nontrivial
rigid feet with actuated revolute ankles. In particular, the robot is assumed
© 2007 by Taylor & Francis Group, LLC

Walking with Feet and Actuated Ankles
303
(a) Arc-shaped sole
(b) Flat sole
Figure 10.2. Examples of foot shapes. In both cases, the ground contact
forces can be resolved into a force vector and a torque.
to consist of N ≥4 rigid links connected by ideal (frictionless) revolute joints
to form a tree structure (no closed kinematic chains). It is assumed to have
two identical open chains called “legs” that are connected at a point called
the “hips.” The link at the extremity of each leg is called a “foot” and the
joint between the foot and the remainder of the leg is called an “ankle.” The
feet are assumed to be “forward facing.” The forward end of each foot is
called a “toe” and the back end is called a “heel.”
Each revolute joint is
assumed to be independently actuated. It is assumed that walking consists of
three successive phases, a fully actuated phase, an underactuated phase, and
a double-support phase; see Fig. 10.1.
During the double-support phase, the swing foot impacts the ground. For
simplicity, it is assumed that the swing foot is parallel to the ground at impact.
It is also assumed that the feet are arc shaped so that the only contact points
with the ground are the heel and the toe; see Fig. 10.2. Due to the impacts,
impulsive forces are applied at the toe and the heel simultaneously, which
cause discontinuous changes in the velocities; however, the position states are
assumed to remain continuous [124].
10.2.1
Robot and Gait Hypotheses
For clarity, the explicit hypotheses on the robot, gait and impact are listed
here. The robot is assumed to be:
HR1.F) comprised of N rigid links connected by (N −1) ideal revolute joints
(i.e., rigid and frictionless) to form a single open kinematic chain;
furthermore, each link has nonzero mass and a nonzero moment of
inertia about at least one of its joints.
HR2.F) planar, with motion constrained to the sagittal plane;
HR3.F) bipedal, with two symmetric legs connected at a common point
called the hip, and both leg ends are terminated in forward-facing
feet of nonzero length;
HR4.F) independently actuated at each of the (N −1) ideal revolute joints;
in particular, the ankles are actuated.
© 2007 by Taylor & Francis Group, LLC

304
Feedback Control of Dynamic Bipedal Robot Locomotion
Feedback controller design will be carried out to achieve the following prop-
erties consistent with the simplest form of an anthropomorphic walking gait.
HGW1.F) Walking consists of three successive phases: a fully actuated phase,
an underactuated phase, and a double-support phase.
HGW2.F) During the fully actuated phase, the stance foot remains ﬂat on the
ground and does not slip.
HGW3.F) Throughout the fully actuated phase, the angular momentum about
the stance ankle is never zero.
HGW4.F) Throughout the underactuated phase, the stance toe acts as a pivot.
HGW5.F) The double support phase is instantaneous and the associated im-
pact can be modeled as a rigid contact [124].
HGW6.F) The positions and velocities are continuous across the transition
from the fully actuated phase to the underactuated phase.
HGW7.F) In each step, the swing leg starts from strictly behind the stance
leg and is placed strictly in front of the stance leg at impact.
HGW8.F) In steady state, the motion is symmetric with respect to the two
legs.
HGW9.F) Walking is from left to right and takes place on a level surface.
The impact hypotheses are listed next.
HI1.F) An impact results from the contact of the swing leg foot with the
ground.
HI2.F) The impact is instantaneous.
HI3.F) At impact, the heel and toe of the swing foot touch the ground
simultaneously. The impact results in no rebound and no slipping
of the swing foot, and the angular velocity of the foot is zero im-
mediately after impact.
HI4.F) At the moment of impact, the stance foot lifts from the ground
without interaction.
HI5.F) The external forces during the impact can be represented by im-
pulses.
HI6.F) The actuators cannot generate impulses and hence can be ignored
during impact.
HI7.F) The impulsive forces may result in an instantaneous change in the
robot’s velocities, but there is no instantaneous change in the con-
ﬁguration.
© 2007 by Taylor & Francis Group, LLC

Walking with Feet and Actuated Ankles
305
q1, u1
q1, u1
q2, u2
q2, u2
q3, u3
q3, u3
q4, u4
q4, u4
q5, u5
q5, u5
q6, u6
q6, u6
q7
θa
ph
cm
ph
cm
pv
cm
pv
cm
(ph
h; pv
h)
(0; 0)
(0; 0)
Figure 10.3. Model of a 7-link robot with coordinate convention. θu is not
shown. It is deﬁned as θu = π −q7 + θa. In general, for an N-link robot, it is
assumed that qN−1 is the angle between the stance foot and the stance tibia
and qN is the angle between the ground and the sole of the stance foot. The
toe of the stance foot is taken as the origin, (0; 0). The Cartesian position of
the heel of the stance foot is denoted ph = (ph
h; pv
h) and the Cartesian position
of the ankle of the stance foot is denoted as pa = (ph
a; pv
a).
10.2.2
Coordinates
A representative robot is shown in Fig. 10.3 along with a coordinate conven-
tion. For purposes of modeling, generalized coordinates are chosen as N −1
relative angles, q1, . . . , qN−1, and one absolute angle, qN, with a counter-
clockwise measuring convention. In particular, qN is the angle of the stance
foot with respect to the walking surface and qN−1 is the relative angle of the
stance tibia with respect to the stance foot. Note that during the fully ac-
tuated phase, when the stance foot is ﬁxed with respect to the ground, the
angle of the stance tibia, qN−1, can then be considered as referenced to the
inertial frame, and hence becomes an absolute angle.
10.2.3
Underactuated Phase
The underactuated phase is when the stance heel of the robot rises from the
ground and the robot begins to roll over the stance toe; this condition is
characterized by the foot rotation indicator (FRI) point of [92] being strictly
in front of the stance foot. The stance toe is assumed to act as a pivot; this
condition is characterized by the forces at the toe lying within the allowed
friction cone. Both of these conditions (i.e., foot rotation and nonslip) are
© 2007 by Taylor & Francis Group, LLC

306
Feedback Control of Dynamic Bipedal Robot Locomotion
constraints that must be imposed in the ﬁnal controller design phase, which
is discussed in Section 10.5.
Since there is no actuation between the stance toe and the ground, the
dynamics of the robot in this phase is equivalent to an N-DOF robot with
unactuated point feet and identical legs, as modeled in Chapter 3. Deﬁne
the generalized coordinates as qu = (q1; · · · ; qN) ∈Qu, where Qu is a simply
connected open subset of1 TN. The dynamics are obtained using the method
of Lagrange, yielding
Du(qu)¨qu + Cu(qu, ˙qu) ˙qu + Gu(qu) = Buuu,
(10.1)
where uu = (u1; · · · ; uN−1) is the vector of torques applied at the joints. The
dynamic equation in state-variable form is expressed as
˙xu = fu(xu) + gu(xu)uu,
(10.2)
where xu = (qu; ˙qu).
10.2.4
Fully Actuated phase
During the fully actuated phase, the stance foot is assumed to remain ﬂat on
the ground without slipping. The ankle of the stance leg is assumed to act
as an actuated pivot. Since the stance foot is motionless during this phase,
the dynamics of the robot during the fully actuated phase is equivalent to an
N −1 DOF robot without the stance foot and with actuation at the stance
ankle, as studied in [11]. Let qa = (q1; · · · ; qN−1) ∈Qa be the conﬁguration
variables, where q1, . . . , qN−2 denote the relative angles of the joints except
the stance ankle, qN−1 denotes the angle of the stance ankle joint, and Qa
is a simply connected open subset of TN−1; see Fig. 10.3. Note that because
the stance foot remains on the ground, qN−1 is now an absolute angle (i.e., it
is referenced to the inertial frame).
The dynamics for the fully actuated phase are derived using the method of
Lagrange, yielding a model of the form
Da(qa)¨qa + Ca(qa, ˙qa) ˙qa + Ga(qa) = Ba1ub + Ba2uA,
(10.3)
where ˙qa are the velocities, uA = uN−1 is the input at the ankle joint, and
ub = (u1; · · · ; uN−2) is the vector of inputs applied at the remaining joints.
The state is taken as xa = (qa; ˙qa) ∈T Qa and the dynamic equation is given
1Recall that for k ≥1, Tk = S × · · · × S
 

k−times
.
© 2007 by Taylor & Francis Group, LLC

Walking with Feet and Actuated Ankles
307
by2
˙xa =

˙qa
D−1
a (−Ca ˙qa −Ga + Ba2uA)

+

0
D−1
a Ba1ub

(10.4a)
=: fa(xa, uA) + ga(xa)ub.
(10.4b)
Note that, to satisfy the condition that the stance foot is ﬂat on the ground,
the FRI point needs to be kept strictly within the support region of the
foot.3 This constraint must be imposed in the ﬁnal controller design stage;
see Section 10.5.
10.2.5
Double-Support Phase
The development of the impact model for the instantaneous double-support
phase involves the reaction forces at the leg ends and thus requires an (N+2)-
DOF model (e.g., N DOF for the joints and 2 DOF for the position of the cen-
ter of mass); see Section 3.4.2. Adding Cartesian coordinates, (ph
cm; pv
cm), to
the center of mass of the robot gives qd = (qu; ph
cm; pv
cm) and ˙qd = ( ˙qu; ˙ph
cm; ˙pv
cm);
see Fig. 10.3. Since the swing heel and the swing toe are assumed to land
on the ground at the same time, there are two ground reaction forces, which
can be modeled as a resultant force and torque acting on the swing foot at
the ankle. Let ΥF
a (qd) denote the Cartesian coordinates of the swing ankle
and let Υτ
a(qd) denote the absolute angle of the swing foot. The method of
Lagrange yields the dynamical model4
Dd(qd)¨qd + Cd(qd, ˙qd) ˙qd + Gd(qd) = Bdu + EF
d δF + Eτ
dδτ,
(10.5)
where u = (ub; uA), EF
d =
∂ΥF
a (qd)
∂qd
, Eτ
d = ∂Υτ
a(qd)
∂qd
, and δF and δτ denote
the resultant reaction force and torque at the swing ankle, respectively, when
forces are applied at the heel and toe.
Under the Hypotheses HI6.F (the actuators are not impulsive) and HI3.F
(the stance foot neither rebounds nor slips), following the procedure in Sec-
tion 3.4.2 gives
x+
a =
⎡
⎢⎣

R 0N−1×2

q−
d
R 0N−1×5

Π

Dd ˙q−
d
03×1

⎤
⎥⎦
=:

Δa
q,u(q−
u )
Δa
˙q,u(q−
u ) ˙q−
u

=: Δa
u(x−
u ),
(10.6)
2Note that the ankle torque is included in fa(xa, uA); the reason for this will be clear in
Section 10.3.
3Equivalently, the CoP is strictly within the support region of the foot.
4The model is equivalent to the ﬂight phase of running.
© 2007 by Taylor & Francis Group, LLC

308
Feedback Control of Dynamic Bipedal Robot Locomotion
where R is a relabeling matrix5 to reﬂect the swapping of the roles of the legs
and
Π :=
⎡
⎢⎣
Dd −(EF
d )′ −(Eτ
d)′
EF
d
02×2
02×1
Eτ
d
01×2
01×1
⎤
⎥⎦
−1
.
(10.7)
Note that, because the stance toe acts as a pivot just before the impact,
x−
d = (q−
d ; ˙q−
d ) is uniquely determined by x−
u . The size of the relabeling matrix
R is N −1 × N so that x+
a , which does not include the degree of freedom of
the stance foot, is uniquely deﬁned. Since the stance foot is constrained to
remain on the ground during the fully actuated phase, the conﬁguration of
the robot is uniquely determined.
10.2.6
Foot Rotation, or Transition from Full Actuation to
Underactuation
The transition from a ﬂat foot to rotation about the toe can be initiated
by causing the angular acceleration about the stance toe to become nega-
tive.
To characterize the motion of the stance foot, or equivalently, when
the robot transitions from full actuation—foot is ﬂat on the ground—to
underactuation—foot rotates about the toe—the FRI is used [92]. By en-
forcing that the FRI point is strictly in front of the stance foot, the transition
is initiated. If torque discontinuities6 are allowed—as they are assumed to
be here—when to allow foot rotation becomes a control decision. In view of
simplifying the analysis of periodic orbits in Section 10.4, the transition is
assumed to occur at a prespeciﬁed point in the fully actuated phase.7 Hence,
Hu
a = θa(qa) −θ−
a,0, where θa(qa) is the angle of the hips with respect to the
stance ankle (see Fig. 10.3) and θ−
a,0 is a constant to be determined.
The positions and the velocities remain continuous with a step-change in
torque. The ensuing initial value of the underactuated phase, x+
u , is deﬁned
so as to achieve continuity in the position and velocity variables:
x+
u =

q+
u
˙q+
u

=
⎡
⎢⎢⎢⎣
q−
a
π
˙q−
a
0
⎤
⎥⎥⎥⎦=: Δu
a(x−
a ).
(10.8)
5See Section 3.4.2, where a relabeling matrix was ﬁrst used. Note that here R is not square
due to the diﬀerent number of conﬁguration variables in the two phases.
6This is a modeling decision. In practice, the torque is continuous due to actuator dynamics.
It is assumed here that the actuator time constant is small enough that it need not be
modeled.
7When the transition condition is met, namely, θa = θ−
a,0, a jump in the torque is made to
achieve ¨qN < 0. This moves the FRI point in front of the foot.
© 2007 by Taylor & Francis Group, LLC

Walking with Feet and Actuated Ankles
309
Continuity of the torques is not imposed, and hence neither is continuity of
the accelerations. It is assumed that the control law in the underactuated
phase will be designed so that the FRI point is in front of the toe.
Remark 10.1
For a foot of nonzero height, qN is the angle of the sole of
the stance foot with respect to the ground. Hence the value of π in (10.8).
10.2.7
Overall Hybrid Model
As in Section 3.5.4, where a hybrid model for running was presented, the
overall model for walking with feet can be expressed as a nonlinear hybrid
system containing two state manifolds (called “charts” in [103]):
Σa :
⎧
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎩
Xa
=
T Qa
Fa : ˙xa
=
fa(xa, uA) + ga(xa)ub
Su
a
=
{xa ∈T Qa | Hu
a (xa) = 0}
T u
a : x+
u
=
Δu
a(x−
a )
(10.9)
Σu :
⎧
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎩
Xu
=
T Qu
Fu : ˙xu
=
fu(xu) + gu(xu)uu
Sa
u
=
{xu ∈T Qu | Ha
u(xu) = 0}
T a
u : x+
a
=
Δa
u(x−
u )
where, for example, Fa is the ﬂow on state manifold Xa, Su
a is the switch-
ing hyper-surface for transitions between Xa and Xu, T u
a : Su
a →Xu is the
transition function applied when xa ∈Su
a .
The transition from the underactuated phase to the fully actuated phase
occurs when the swing foot impacts the ground. Hence, Ha
u(xu) = Υv
h(xu),
where Υv
h(xu) denotes the vertical coordinate (height) of the swing heel; see
Fig. 10.4.
Remark 10.2
Su
a is read as the switching surface from the fully actuated
phase, denoted a, to the underactuated phase, denoted u.
10.2.8
Comments on the FRI Point and Angular Momentum
The FRI point is deﬁned in [92] as “the point on the foot/ground contact
surface, within or outside the convex hull of the foot-support area, at which
the resultant moment of the force/torque impressed on the foot is normal to
the surface.” A few remarks will be made on the properties of the FRI point
and angular momentum during the fully actuated and double-support phases.
© 2007 by Taylor & Francis Group, LLC

310
Feedback Control of Dynamic Bipedal Robot Locomotion
˙xa = fa(xa, uA) + ga(xa)ur
˙xu = fu(xu) + gu(xu)uu
x+
u = Δu
a(x−
a )
x+
a = Δa
u(x−
u )
x−
a ∈Su
a
x−
u ∈Sa
u
Fully Actuated Phase
Underactuated Phase
Figure 10.4. Diagram of hybrid system model for walking with a fully actu-
ated (ﬂat-footed) phase and an underactuated (toe-roll) phase.
Fully Actuated phase:
Suppose that the Hypotheses HR1.F, HR2.F and
HGW2.F of Section 10.2 are satisﬁed, and the coordinates are as in Sec-
tion 10.2.2; see Fig. 10.5. The origin (0; 0) is assumed to be located at the toe
of the stance foot. Let (ph
cm; pv
cm) be the Cartesian coordinates of the robot’s
center of the mass and let (ph
a; pv
a) be the Cartesian coordinates of the stance
ankle. Let (ph
FRI; 0) be the FRI point on the ground and FFRI = (F T
FRI; F N
FRI)
be the ground reaction force at the FRI point. Let ⃗r1 be a vector from the
stance toe to the center of mass, ⃗r2 represent the vector from the stance toe
to the stance ankle, and let ⃗r3 denote the vector from the stance ankle to
the center of mass, respectively. Let ⃗R be the vector from the stance toe to
the FRI point. Finally, let Ku and Vu be the kinetic energy and potential
energy for the robot, respectively, expressed in terms of the variables of the
underactuated phase,8 and denote the Lagrangian as
Lu = Ku −Vu.
(10.10)
In terms of the center of mass, the potential energy of the robot is given as
Vu = mtotg0pv
cm.
(10.11)
Due to the choice of coordinates, the following relations are obtained9:
∂Vu
∂qN
= mtotg0ph
cm,
(10.12)
8Using this Lagrangian allows the ground reaction forces to be analyzed, and hence the
position of the FRI point can be studied.
9See Proposition B.8 and Proposition B.9.
© 2007 by Taylor & Francis Group, LLC

Walking with Feet and Actuated Ankles
311
⃗r1
⃗r2
⃗r3
Center of Mass
⃗R
qN
FRI point
Figure 10.5. Deﬁnition of parameters and measurement conventions for a
biped with feet. With the origin established at the toe of the stance foot,
⃗r1 = pcm, ⃗r2 = pa, ⃗r3 = pcm −pa, and ⃗R = (ph
FRI; 0). The angle qN is the
(absolute) angle of the sole of the stance foot with respect to the ground,
measured with a counterclockwise convention.
∂Lu
∂qN
= ∂Ku
∂qN
−∂Vu
∂qN
= −∂Vu
∂qN
= −mtotg0ph
cm,
(10.13)
(because qN is a cyclic variable of Ku, that is, ∂Ku/∂qN = 0), and
σu := ¯σN = ∂Lu
∂˙qN
,
(10.14)
where σu denotes the angular momentum about the stance toe.
Because
⃗r1 = ⃗r2 + ⃗r3,
σu = σa + ⃗r2 ∧mtot ˙pcm,
(10.15)
where σa denotes the angular momentum about the stance ankle and ˙pcm is
the velocity of the center of mass. Substituting ⃗r2 = (ph
a; pv
a), (10.14) and
(10.15) imply
d
dt
∂Lu
∂˙qN
= d
dt (σa + ⃗r2 ∧mtot ˙pcm) = ˙σa + mtotph
a¨p v
cm −mtotpv
a¨p h
cm.
(10.16)
Since there is no actuation at the stance toe, the only torque applied is from
the ground reaction force, and thus the method of Lagrange yields
d
dt
∂Lu
∂˙qN
−∂Lu
∂qN
= ⃗R ∧FFRI = ph
FRIF N
FRI,
(10.17)
© 2007 by Taylor & Francis Group, LLC

312
Feedback Control of Dynamic Bipedal Robot Locomotion
which, together with (10.13) and (10.16), implies
˙σa + mtotph
a¨p v
cm −mtotpv
a¨p h
cm + mtotg0ph
cm = ph
FRIF N
FRI.
(10.18)
During the fully actuated phase, the position of the supporting ankle is
stationary. Therefore, applying the angular momentum balance theorem to
the robot about the supporting ankle yields
˙σa = −mtotg0(ph
cm −ph
a) + (⃗R −⃗r2) ∧FFRI.
(10.19)
Furthermore, from the equilibrium in rotation of the supporting foot about
the ankle,
0 = −uA + (⃗R −⃗r2) ∧FFRI −mfootg0(ph
foot,cm −ph
a),
(10.20)
where mfoot is the mass of the foot and pfoot,cm is the position of the center of
mass of the foot, because the foot does not rotate and the external moments
are −uA, the moment of the ground reaction force applied at the FRI point,
and the moment of the gravity force; see Fig. 10.6. These last two equations
give
˙σa = −mtotg0(ph
cm −ph
a) + mfootg0(ph
foot,cm −ph
a) + uA,
(10.21)
which with (10.18) implies
ph
FRIF N
FRI = −mtotg0(ph
cm −ph
a) + mfootg0(ph
foot,cm −ph
a) + uA
+ mtotph
a¨p v
cm −mtotpv
a¨p h
cm + mtotg0ph
cm,
(10.22)
and therefore,
ph
FRIF N
FRI = mtotg0ph
a +mtotph
a¨p v
cm −mtotpv
a¨p h
cm +mfootg0(ph
foot,cm −ph
a)+uA.
(10.23)
Since F N
FRI = mtotg0 + mtot¨p v
cm, (10.23) yields the location of the FRI point
as a function of the applied ankle torque
ph
FRI = ph
a +
−mtotpv
a¨p h
cm + mfootg0(ph
foot,cm −ph
a) + uA
mtotg0 + mtot¨p v
cm
.
(10.24)
A similar conclusion can be also obtained by considering the equilibrium of
the supporting foot as shown in Fig. 10.6, because F T
FRI = mtot¨p h
cm.
The position of the FRI point can also be related to terms in the dynamics
of the robot that do not directly involve the control input, u. Indeed, from
(10.18), using F N
FRI = mtotg0 + mtot¨p v
cm yields
˙σa + mtot(ph
a −ph
FRI)¨p v
cm −mtotpv
a¨p h
cm = −mtotg0(ph
cm −ph
FRI).
(10.25)
© 2007 by Taylor & Francis Group, LLC

Walking with Feet and Actuated Ankles
313
Fa
ph
FRI
ph
a
pv
a
−uA
FFRI
pa
(a)
ph
FRI
pa
IFRI
Ia
(b)
Figure 10.6. Free-body diagrams of the supporting foot with forces, torques,
and impulsive forces indicated. Because the ankle and FRI point are located
to the left of the toe, ph
a and ph
FRI are negative. Not indicated are the mass
of the foot mfoot, the position of the center of mass of the foot, pfoot,cm, and
the moment of inertia of the foot about its center of mass, Jfoot.
Using the angular momentum transfer theorem, since by deﬁnition the vertical
component of the FRI point is identically zero, the angular momentum about
the FRI point is
σFRI = σa + (⃗r2 −⃗R) ∧mtot ˙pcm
(10.26a)
= σa + mtot(ph
a −ph
FRI) ˙pv
cm −mtotpv
a ˙ph
cm.
(10.26b)
Equation (10.25) can be rewritten as
˙σFRI = −mtotg0(ph
cm −ph
FRI) −mtot ˙ph
FRI ˙pv
cm,
(10.27)
where ˙pFRI is the velocity of the FRI point. When the position of the FRI
point is constant, the above simpliﬁes to
˙σFRI = −mtotg0(ph
cm −ph
FRI).
(10.28)
Double-support phase:
Attention is now turned to the impacting foot
during the double-support phase. The fact that the foot neither slips, re-
bounds, nor rotates after impact will be used.
The eﬀect of the ground reaction force at the moment of impact can be
expressed as an external impulsive force with intensity IFRI applied at the
CoP of the impacting foot, that is, at the (instantaneous) FRI point.
At
the moment of impact of the (former swing) foot with the ground, a linear
© 2007 by Taylor & Francis Group, LLC

314
Feedback Control of Dynamic Bipedal Robot Locomotion
momentum balance of the robot gives
IFRI = mtot( ˙p+
cm −˙p−
cm).
(10.29)
The impulsive forces acting on the foot consist of the force applied at the
ankle by the shin, Ia, and the force applied at the CoP by the ground, IFRI.
A linear momentum balance of the foot at the moment of impact gives
IFRI + Ia = mfoot( ˙p+
foot,cm −˙p−
foot,cm),
(10.30)
where mfoot is the mass of the foot and pfoot,cm is the position of the center
of mass of the foot. Thus Ia is given by
Ia = −IFRI + mfoot( ˙p+
foot,cm −˙p−
foot,cm).
(10.31)
By performing an angular momentum balance about the center of mass of
the foot, the equilibrium of the foot at impact gives
Jfoot(ω+
foot −ω−
foot) = (pFRI −pfoot,cm) ∧IFRI + (pa −pfoot,cm) ∧Ia, (10.32)
where Jfoot is the inertia of the swing foot about its center of mass and ωfoot
is the absolute angular velocity of the swing foot. Using (10.29) and (10.31)
yields
Jfoot(ω+
foot −ω−
foot) = (pFRI −pa) ∧mtot( ˙p+
cm −˙p−
cm)
+ (pa −pfoot,cm) ∧mfoot( ˙p+
foot,cm −˙p−
foot,cm).
(10.33)
By the angular momentum transfer theorem,
σFRI = σa + (pa −pFRI) ∧mtot ˙pcm.
(10.34)
Hence, (10.33) can be rewritten as
Jfoot
 
0 −ω−
foot
!
= (σa −σFRI)+ −(σa −σFRI)−
+ (pa −pfoot,cm) ∧mfoot(0 −˙p−
foot,cm),
(10.35)
where ω+
foot = 0, Hypothesis HI3.F and ˙p+
foot,cm = 0 have been used. During
the impact, the resultant ground reaction force IFRI is applied at the FRI
point.10 As a consequence, the angular momentum about the FRI point is
conserved at impact,
σ+
FRI = σ−
FRI,
(10.36)
10Recall, IFRI is applied at the (instantaneous) CoP of the impacting foot. But because
the foot is assumed not to rotate after impact, the CoP must be strictly within the support
polygon of the foot, and hence the CoP and the FRI point coincide.
© 2007 by Taylor & Francis Group, LLC

Walking with Feet and Actuated Ankles
315
and the change in angular momentum about the ankle of the impacting foot
is therefore given by
σ+
a = σ−
a −Jfootω−
foot + mfoot(pa −pfoot,cm) ∧˙p−
foot,cm.
(10.37)
Remark 10.3
If the inertia and the mass of the foot are neglected, then
(10.37) implies that the angular momentum about the ankle of the impacting
foot is unchanged during impact.
Remark 10.4
From (10.33) and the fact that pv
FRI = 0, the position of the
FRI point at impact can be deduced to be
ph
FRI = ph
a −pv
a
˙ph+
cm −˙ph−
cm
˙pv+
cm −˙pv−
cm
+
mfoot(pa −pfoot,cm) ∧˙p−
foot,cm −Jfootω−
foot
mtot( ˙pv+
cm −˙pv−
cm)
.
(10.38)
10.3
Creating the Hybrid Zero Dynamics
In a certain sense, the basic idea of the control law design is quite straightfor-
ward. Following the developments in Part II of the book, we use the method
of virtual constraints to create a two-dimensional zero dynamics manifold Zu
in the 2N-dimensional state space of the underactuated phase. This requires
the use of the full complement of N −1 actuators on the robot. In the fully
actuated phase, we have one less degree of freedom because the stance foot is
motionless and ﬂat on the ground. Consequently, we use N −2 actuators—all
actuators except the ankle of the stance foot—to create a two-dimensional zero
dynamics manifold Za—that is compatible with Zu in the sense that the fol-
lowing invariance conditions hold: Δu
a(Su
a ∩Za) ⊂Zu and Δa
u(Sa
u ∩Zu) ⊂Za.
The actuation authority at the ankle is subsequently employed for stability
and eﬃciency augmentation, and for enforcing the nonrotation of the foot.
The invariance conditions guarantee the existence of a hybrid zero dynamics
for the closed-loop hybrid model. As in the analysis of running in Chapter 9,
the stability analysis methods of Chapter 4 are then adapted to compute
the Poincar´e map of the closed-loop system in closed form. Precise stability
conditions then follow.
10.3.1
Control Design for the Underactuated Phase
The greatest diﬃculties in control design and analysis involve the underactu-
ated phase of the motion. Since the stance toe acts as a pivot and there is
no actuation at the stance toe, the feedback design proceeds as in Chapter 6
© 2007 by Taylor & Francis Group, LLC

316
Feedback Control of Dynamic Bipedal Robot Locomotion
on the control of walking with point feet. Let yu = hu(xu) be an (N −1) × 1
vector of output functions satisfying Hypotheses HH1–HH5 of pages 119 and
126. For convenience, these are rewritten here as:
HH1.u) The output function hu(xu) depends only on the conﬁguration vari-
ables;
HH2.u) The decoupling matrix LguLfuhu is invertible for an open set ˜Qu ⊂
Qu;
HH3.u) There exists a smooth real-valued function θu(qu) such that
[hu(qu); θu(qu)] : ˜Qu →RN
(10.39)
is a diﬀeomorphism onto its image;
HH4.u) There exists a point in ˜Qu where hu vanishes.
HH5.u) There exists a unique point q−
u,0 ∈˜Qu such that (hu(q−
u ); Υv
a(q−
u )) =
(0; 0), Υh
t (q−
u ) > 0 and the rank of [hu; Υv
a] at q−
u,0 equals N, where
Υh
t (xu) denotes the horizontal coordinate of the swing toe.
Then, as in Chapter 5, there exists a smooth manifold
Zu = {xu ∈T Qu | hu(xu) = 0, Lfuhu(xu) = 0},
(10.40)
called the underactuated-phase zero dynamics manifold, and Sa
u∩Zu is smooth;
moreover Sa
u ∩Zu is one-dimensional if Sa
u ∩Zu ̸= ∅. Diﬀerentiating the output
yu twice yields,
¨yu = νu
(10.41a)
= L2
fuhu(xu) + LguLfuhu(xu)uu.
(10.41b)
Since the decoupling matrix LguLfuhu(xu) is invertible, the feedback control
u∗
u := −(LguLfuhu(xu))−1L2
fuhu(xu)
(10.42)
renders the zero dynamics manifold forward invariant. The underactuated
phase zero dynamics in the coordinates zu := (θu; σu) can be written as
˙θu = κ1u(θu)σu
(10.43a)
˙σu = κ2u(θu),
(10.43b)
where σu is the angular momentum about the stance toe during the underac-
tuated phase. Equations (10.43a) and (10.43b) are written as ˙zu = fZu(zu).
Note that by the choice of coordinates, σu = ¯σN = du(qu) ˙qu, where du is the
last row of Du.
© 2007 by Taylor & Francis Group, LLC

Walking with Feet and Actuated Ankles
317
10.3.2
Control Design for the Fully Actuated Phase
Since the stance foot is motionless and acting as a base during this phase,
the model only has N −1 DOF. Consequently, the robot is fully actuated,
opening up many feedback design possibilities. For example, we could design
for an empty zero dynamics, though we would run a high risk of requiring so
much ankle torque that the foot would rotate, thereby causing underactuation.
Instead, we follow a design where, in principle, the ankle torque could be used
exclusively for ensuring that the foot does not rotate, but in most cases, it can
also be used to augment stability and eﬃciency of the overall walking cycle.
N−2 virtual constraints are used to create a two-dimensional zero dynamics
for the fully actuated phase that is driven by the ankle torque. Let ya = ha(xa)
be a (N −2) × 1 vector of output functions.
Let the output function ya
satisfy Hypotheses HH1–HH5 of pages 119 and 126. For convenience, these
are rewritten here as:
HH1.a) The output function ha(xa) depends only on the conﬁguration vari-
ables of the fully actuated phase;
HH2.a) For uA = 0, the decoupling matrix LgaLfaha is invertible for an
open set ˜Qa ⊂Qa;
HH3.a) There exists a smooth real-valued function θa(qa) such that
[ha(qa); θa(qa)] : ˜Qa →RN−1
(10.44)
is a diﬀeomorphism onto its image;
HH4.a) There exists a point in ˜Qa where ha vanishes;
HH5.a) There exists a unique point q−
a,0 ∈˜Qa such that ya = ha(q−
a,0) = 0,
Hu
a (q−
a,0) = 0 and [ha; Hu
a ] has full rank.
Then, as in Chapter 5, there exists a smooth manifold
Za = {xa ∈T Qa | ha(xa) = 0, Lfaha(xa) = 0},
(10.45)
called the fully actuated-phase zero dynamics manifold, and Su
a ∩Za is smooth;
moreover, Su
a ∩Za is one-dimensional if Su
a ∩Za ̸= ∅.
Diﬀerentiating twice the output ya for the fully actuated phase gives
¨ya = L2
faha(xa, uA) + LgaLfaha(xa)ub.
(10.46)
Since LgaLfaha is invertible, the feedback control
u∗
b = −(LgaLfaha(xa))−1L2
faha(xa, uA)
(10.47)
renders forward invariant the zero dynamics manifold of the fully actuated
phase.
© 2007 by Taylor & Francis Group, LLC

318
Feedback Control of Dynamic Bipedal Robot Locomotion
In the coordinates za := (θa; σa) for the zero dynamics manifold and using
(10.21), the fully actuated phase zero dynamics can be written as
˙θa = κ1a(θa)σa
(10.48a)
˙σa = κ2a(θa) + uA,
(10.48b)
where uA is the torque applied at the stance ankle and σa is the angular
momentum about the stance ankle during the fully actuated phase. Equations
(10.48a) and (10.48b) are written as ˙za = fZa(za, uA). Due to the choice of
coordinates, σa = ¯σN−1 = da(qa) ˙qa, where da is the last row of Da,
10.3.3
Transition Map from the Fully Actuated Phase to the
Underactuated Phase
The transition map from the fully actuated phase to the underactuated phase
on the zero dynamics becomes
θ+
u = θu ◦

q−
a ,
π

(10.49a)
σ+
u = δu
aσ−
a ,
(10.49b)
where δu
a is a constant that can be calculated as in Section 5.3. Even though
the values of the joint positions and velocities are continuous at the transition
between the fully actuated and underactuated phases, and hence the angular
momentum is also continuous, the point where the angular momentum is
calculated changes. We have
σ+
u = σ−
a + ⃗r2 ∧mtot ˙p−
cm,
(10.50)
where ⃗r2, the position of the ankle relative to the toe, is deﬁned as in Fig. 10.5,
mtot is total mass, and ˙pcm is the velocity of the center of mass. On the zero
dynamics, all of the joint velocities are proportional to σa and thus the velocity
of the center of mass can be written as in (9.15), namely,
˙p−
cm
&&
Su
a ∩Za =

λa
x(q−
a )
λa
y(q−
a )

σ−
a .
(10.51)
Hence, using pa = ⃗r2,
δu
a = 1 + ⃗r2 ∧mtot

λa
x(q−
a )
λa
y(q−
a )

= 1 + mtotph
aλa
y(q−
a ) −mtotpv
aλa
x(q−
a ).
(10.52)
© 2007 by Taylor & Francis Group, LLC

Walking with Feet and Actuated Ankles
319
10.3.4
Transition Map from the Underactuated Phase to the
Fully Actuated Phase
The transition map from the underactuated phase to the fully actuated phase
on the hybrid zero dynamics becomes
θ+
a = θa(Rq−
u ),
(10.53a)
σ+
a = δa
uσ−
u ,
(10.53b)
where δa
u is a constant that can be calculated as in Section 5.3. At impact,
the variation of the angular momentum about the ankle of the impacting
leg is known from (10.37). To determine δa
u it is suﬃcient use the principle
of angular momentum transfer in order to calculate the angular momentum
around the ankle of the impacting leg just before the impact, namely11
σ−
a = σ−
u −(⃗d + ⃗r2) ∧mtot ˙p−
cm,
(10.54)
where ⃗d is the vector from the toe of the (former) stance foot to the toe of
the impacting foot, at the moment of impact.
If the ground is horizontal
⃗d = (d; 0), d > 0. Hence, from (10.37),
σ+
a = σ−
u −(⃗d + ⃗r2) ∧mtot ˙p−
cm
−Jfootω−
foot + mfoot(pa −pfoot,cm) ∧˙p−
foot,cm.
(10.55)
On the zero dynamics manifold, all of the joint velocities are proportional
to σu, and thus the velocity of the center of mass can be written as in (9.15),
namely,
˙p−
cm
&&
Sau∩Zu =

λu
x(q−
u )
λu
y(q−
u )

σ−
u ,
(10.56)
the velocity of the center of mass of the feet can be written as :
˙p−
foot,cm
&&&
Sau∩Zu =

λu
fx(q−
u )
λu
fy(q−
u )

σ−
u ,
(10.57)
and the absolute velocity of the swing (i.e., impacting) foot can be expressed
as
ω−
foot
&&&
Sa
u∩Zu = ω0(q−
u )σ−
u .
(10.58)
11Note that on ﬂat ground, ⃗d + ⃗r2 = (d + ph
a; pv
a).
© 2007 by Taylor & Francis Group, LLC

320
Feedback Control of Dynamic Bipedal Robot Locomotion
It follows that
δa
u = 1 −(⃗d + ⃗r2) ∧mtot

λu
x(q−
u )
λu
y(q−
u )

−Jfootω0(q−
u )+
(pa −pfoot,cm) ∧mfoot

λu
fx(q−
u )
λu
fy(q−
u )

(10.59a)
= 1 −mtot(d + ph
a)λu
y(q−
u ) + mtotpv
aλu
x(q−
u ) −Jfootω0(q−
u )+
mfoot(ph
a −ph
foot,cm)λu
fy(q−
u ) −mfoot(pv
a −pv
foot,cm)λu
fx(q−
u ).
(10.59b)
10.3.5
Hybrid Zero Dynamics
Let Za be the zero dynamics manifold of the fully actuated phase and ˙za =
fZa(za, uA) be the associated zero dynamics driven by uA. Let Δu
a be the
transition map from the fully actuated phase to the underactuated phase.
Let Zu be the zero dynamics manifold of the underactuated phase and ˙zu =
fu(zu) be the associated zero dynamics. Let Δa
u be the transition map from
the underactuated phase to the fully actuated phase.
If ∀za ∈Su
a ∩Za,
Δu
a(za) ∈Zu and ∀zu ∈Sa
u ∩Zu, Δa
u(zu) ∈Za, then
⎧
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎩
˙za = fZa(za, uA), z−
a ̸∈Su
a ∩Za, uA ∈R
z+
u = Δu
a(za),
z−
a ∈Su
a ∩Za
˙zu = fZu(zu),
z−
u ̸∈Sa
u ∩Zu
z+
a = Δa
u(zu),
z−
u ∈Sa
u ∩Zu
(10.60)
is an invariant hybrid subsystem of the full-dimensional hybrid model. The
system (10.60) is called the hybrid zero dynamics and Za and Zu are hybrid
zero dynamics manifolds.
Remark 10.5
By deﬁnition, the manifolds Za and Zu are impact invariant
if, and only if, ∀z−
a ∈Su
a ∩Za,
hu ◦Δu
a(z−
a ) = 0,
(10.61a)
Lfuhu ◦Δu
a(z−
a ) = 0,
(10.61b)
and ∀z−
u ∈Sa
u ∩Zu and uA = 0,
ha ◦Δa
u(z−
u ) = 0,
(10.62a)
Lfaha ◦Δa
u(z−
u ) = 0.
(10.62b)
How to achieve these conditions is developed in Section 10.5.
© 2007 by Taylor & Francis Group, LLC

Walking with Feet and Actuated Ankles
321
10.4
Ankle Control and Stability Analysis
Due to the ankle torque that appears in the zero dynamics for the fully actu-
ated phase in (10.48b), the robot’s center of mass can move backward as well
as forward during a step. In other words, the angular momentum about the
stance ankle can be zero before entering the underactuated phase. We assume
here, however, that the angular momentum is never zero during a step; see
HGW3.F in Section 10.2. One can think of this hypothesis as a diﬀerence
between walking and dancing.12 During the underactuated phase, the angu-
lar momentum about the toe is never zero, if the robot completes a step; see
Proposition 5.1.
The ankle torque provides additional design freedom in the fully actuated
phase, which can be used for various purposes. In this chapter, two possible
uses of the ankle torque are suggested: changing the walking speed of the
robot through potential-energy shaping; and aﬀecting the convergence rate to
the periodic orbit. In Chapter 11, a third use is suggested: directly controlling
the position of the FRI point. The stability of the robot on the hybrid zero
dynamics is analyzed with a Poincar´e map for the overall system, which is
obtained by composing the Poincar´e maps for each phase.
10.4.1
Analysis on the Hybrid Zero Dynamics for the
Underactuated Phase
For the underactuated phase, the zero dynamics is equivalent to the robot with
unactuated point feet. If the robot completes a step, the angular momentum
during the underactuated phase is never zero. Therefore, ζu = σ2
u/2 is a valid
coordinate transformation, where σu is the angular momentum. Let z−
u =
(θ−
u , σ−
u ) ∈Sa
u ∩Zu and let θ+
u be deﬁned as in (10.49a). If ζ+
u −V max
Zu
> 0,
then applying the procedure of Section 5.4.1 to (10.43a) and (10.43b) gives
1
2(σ−
u )2 −1
2(σ+
u )2 = ζ−
u −ζ+
u = −VZu(θ−
u ),
(10.63)
where
VZu(θu) = −
 θu
θ+
u
κ2u(ξ)
κ1u(ξ) dξ,
(10.64a)
V max
Zu
=
max
θ+
u ≤θu≤θ−
u
VZu(θu).
(10.64b)
Anticipating the coordinate change, ζa = σ2
a/2, of the next section, the re-
stricted Poincar´e map for the underactuated phase of the hybrid zero dynam-
12In dancing, the body’s center of mass frequently moves forward and backward.
© 2007 by Taylor & Francis Group, LLC

322
Feedback Control of Dynamic Bipedal Robot Locomotion
ics ρu : Su
a ∩Za →Sa
u ∩Zu is deﬁned with (10.49b) as ζ−
a →ζ−
u by
ρu(ζ−
a ) = (δu
a)2ζ−
a −VZu(θ−
u ).
(10.65)
10.4.2
Analysis on the Hybrid Zero Dynamics for the Fully
Actuated Phase with Ankle Torque Used to Change
Walking Speed
An ankle torque control strategy that is useful for modifying the walking speed
is proposed. The restricted Poincar´e map for the fully actuated phase is then
calculated, and the Poincar´e map for the overall reduced system is determined
for stability analysis of the robot on the hybrid zero dynamics.
Since the angular momentum of the robot during the fully actuated phase,
σa, is not zero, ζa = σ2
a/2 is a valid coordinate transformation. For the purpose
of potential-energy shaping, the ankle torque during the fully actuated phase,
uA, is assumed to be a function of θa only.
Then, (10.48a) and (10.48b)
become
dζa = σadσa = κ2a(θa)
κ1a(θa) + uA(θa)
κ1a(θa)dθa.
(10.66)
Let z−
a = (θ−
a ; σ−
a ) ∈Su
a ∩Za and θ+
a be deﬁned as in (10.53a). For θ+
a ≤
θa ≤θ−
a , deﬁne
V uA
Za (θa) = −
 θa
θ+
a
κ2a(ξ)
κ1a(ξ) + uA(ξ)
κ1a(ξ) dξ,
(10.67a)
V uA,max
Za
=
max
θ+
a ≤θa≤θ−
a
V uA
Za (θa).
(10.67b)
If ζ+
a −V uA,max
Za
> 0, then (10.66) can be integrated, which results in
1
2(σ−
a )2 −1
2(σ+
a )2 = ζ−
a −ζ+
a = −V uA
Za (θ−
a ).
(10.68)
With (10.53b), the Poincar´e map for the fully actuated phase on the hybrid
zero dynamics, ρa : Sa
u ∩Zu →Su
a ∩Za, is deﬁned as ζ−
u →ζ−
a by
ρa(ζ−
u ) = (δa
u)2ζ−
u −V uA
Za (θ−
a ).
(10.69)
Hence, the Poincar´e map for the overall reduced system in (θu; ζu) coordi-
nates, ρ : Sa
u ∩Zu →Sa
u ∩Zu, is deﬁned as the composition of (10.65) and
(10.69) as follows:
ρ(ζ−
u ) = ρu ◦ρa(ζ−
u )
= (δu
a)2(δa
u)2ζ−
u −(δu
a)2V uA
Za (θ−
a ) −VZu(θ−
u ),
(10.70)
with domain of deﬁnition
D = {ζ−
u > 0 | (δa
u)2ζ−
u −V uA,max
Za
> 0,
(δu
a)2(δa
u)2ζ−
u −(δu
a)2V uA
Za (θ−
a ) −V max
Zu
> 0}.
(10.71)
© 2007 by Taylor & Francis Group, LLC

Walking with Feet and Actuated Ankles
323
Theorem 10.1
Assume Hypotheses HR1.F–HR4.F for the robot, HGW1.F–HGW9.F for its
gait, and HI1.F–HI7.F for the impact model. If virtual constraints are selected
to satisfy Hypotheses HH1.a–HH5.a, and HH1.u–HH5.u, then
ζ∗
u = −(δu
a)2V uA
Za (θ−
a ) + VZu(θ−
u )
1 −(δua)2(δau)2
(10.72)
is an exponentially stable ﬁxed point of (10.70) if, and only if,
0 < (δu
a)2(δa
u)2 < 1,
(10.73a)
(δu
a)2(δa
u)2VZu(θ−
u ) + (δu
a)2V uA
Za (θ−
a )
1 −(δua)2(δau)2
+ V max
Zu
< 0,
(10.73b)
(δa
u)2(δu
a)2V uA
Za (θ−
a ) + (δa
u)2VZu(θ−
u )
1 −(δua)2(δau)2
+ V uA,max
Za
< 0.
(10.73c)
Proof
D is nonempty if, and only if, (δu
a)2(δa
u)2 > 0. If there exists ζ∗
u ∈
D satisfying ρ(ζ∗
u) = (δu
a)2(δa
u)2ζ∗
u −(δu
a)2V uA
Za (θ−
a ) −VZu(θ−
u ), then ζ∗
u is an
exponentially stable ﬁxed point if, and only if, 0 < (δu
a)2(δa
u)2 < 1, and in this
case, (10.72) is the value of the ﬁxed point. Finally, (10.73b) and (10.73c) are
the necessary and suﬃcient conditions for (10.72) to be in D.
Remark 10.6
The stability of the reduced model is not aﬀected by the
choice of uA(θa) since δu
a does not depend on uA. However, the existence and
value of the ﬁxed point ζ∗
u are aﬀected by uA through the modiﬁcation of
V uA,max
Za
.
10.4.3
Analysis on the Hybrid Zero Dynamics for the Fully
Actuated Phase with Ankle Torque Used to Aﬀect
Convergence Rate
It is now shown how the ankle torque can be used to aﬀect the stability of
the robot on the hybrid zero dynamics. In particular, the ankle torque is used
to aﬀect convergence rate. For the analysis, the Poincar´e map for the fully
actuated phase is calculated and then composed with the Poincar´e map of
the underactuated phase to provide the Poincar´e map of the overall reduced
system.
Because the angular momentum about the stance ankle is assumed to be
nonzero during the fully actuated phase, ζa = σ2
a/2 is a valid coordinate
transformation. Deﬁne the ankle torque uA to be
uA = −κ2a(θa) + κ1a(θa)

ka(ζa −ζ∗
a(θa)) + dζ∗
a(θa)
dθa

,
(10.74)
© 2007 by Taylor & Francis Group, LLC

324
Feedback Control of Dynamic Bipedal Robot Locomotion
where ka is a (negative) constant, ζ∗
a(θa) is a diﬀerentiable, positive function
of θa specifying the desired path of ζa during the fully actuated phase, and
κ1a(θa) and κ2a(θa) are from (10.48a) and (10.48b), respectively. Then, the
zero dynamics becomes
˙θa = κ1a(θa)σa
(10.75a)
˙σa = κ1a(θa)

ka(ζa −ζ∗
a(θa)) + dζ∗
a(θa)
dθa

.
(10.75b)
In the coordinates (θa; ζa), combining (10.75a) and (10.75b) yields
dζa
dθa
= ka(ζa −ζ∗
a(θa)) + dζ∗
a(θa)
dθa
.
(10.76)
Deﬁne η = ζa −ζ∗
a(θa). Then, with (10.76), diﬀerentiating η gives
dη
dθa
= dζa
dθa
−dζ∗
a(θa)
dθa
(10.77a)
= ka(ζa −ζ∗
a(θa)) = kaη,
(10.77b)
which can be solved over the interval θ+
a ≤θa ≤θ−
a to give
η(θa) = eka(θa−θ+
a )η(θ+
a ),
(10.78)
as long as ζa(θa) remains positive. It follows that
ζa(θa) = ζ∗
a(θa) + eka(θa−θ+
a )(ζ+
a −ζ∗
a(θ+
a ))
(10.79a)
= eka(θa−θ+
a ) 
ζ+
a −¯VZa(θa)

,
(10.79b)
where
¯VZa(θa) := ζ∗
a(θ+
a ) −e−ka(θa−θ+
a )ζ∗
a(θa);
(10.80)
moreover, ζa(θa) > 0 for θ+
a ≤θa ≤θ−
a if, and only if,
ζ+
a > ¯V max
Za
,
(10.81)
where
¯V max
Za
:=
max
θ+
a ≤θa≤θ−
a
¯VZa(θa).
(10.82)
Because θa = θ−
a at the transition from the fully actuated phase to the
underactuated phase,
ζ−
a = eka(θ−
a −θ+
a ) 
ζ+
a −¯VZa(θ−
a )

.
(10.83)
The Poincar´e map for the fully actuated phase, ρa : Sa
u ∩Zu →Su
a ∩Za, is
therefore given as ζ−
u →ζ−
a by
ρa(ζ−
u ) = eka(θ−
a −θ+
a ) 
(δa
u)2ζ−
u −¯VZa(θ−
a )

.
(10.84)
© 2007 by Taylor & Francis Group, LLC

Walking with Feet and Actuated Ankles
325
Combining (10.65) and (10.84) gives the Poincar´e map for the overall reduced
system. In the coordinates (θu; ζu), ρ = ρu ◦ρa : Sa
u ∩Zu →Sa
u ∩Zu, is given
as follows:
ρ(ζ−
u ) = (δu
a)2eka(θ−
a −θ+
a ) 
(δa
u)2ζ−
u −¯VZa(θ−
a )

−VZu(θ−
u ),
(10.85)
with domain of deﬁnition
D = {ζ−
u ∈R | (δu
a)2ρa(ζ−
u ) −V max
Zu
> 0, (δa
u)2ζ−
u −¯V max
Za
> 0}.
(10.86)
Theorem 10.2
Assume Hypotheses HR1.F–HR4.F for the robot, HGW1.F–HGW9.F for its
gait, and HI1.F–HI7.F for the impact model, as well as the Hypotheses HH1.a–
HH5.a and HH1.u–HH5.u for the virtual constraints. Let ζ∗be a diﬀerentiable
function of θa satisfying the following condition
ζ∗
a(θa) > 0,
∀θa ∈[θ+
a , θ−
a ].
(10.87)
Then,
ζ∗
u = −(δu
a)2eka(θ−
a −θ+
a ) ¯VZa(θ−
a ) + VZu(θ−
u )
1 −(δau)2(δua)2eka(θ−
a −θ+
a )
(10.88a)
= (δu
a)2ζ∗
a(θ−
a ) −(δu
a)2eka(θ−
a −θ+
a )ζ∗
a(θ+
a ) −VZu(θ−
u )
1 −(δau)2(δua)2eka(θ−
a −θ+
a )
(10.88b)
is an exponentially stable ﬁxed point of (10.85) if, and only if,
0 < (δa
u)2(δu
a)2eka(θ−
a −θ+
a ) < 1
(10.89)
and
(δu
a)2eka(θ−
a −θ+
a ) (δa
u)2VZu(θ−
u ) + ¯VZa(θ−
a )
1 −(δau)2(δua)2eka(θ−
a −θ+
a ) + V max
Zu
< 0,
(10.90a)
(δa
u)2 (δu
a)2eka(θ−
a −θ+
a ) ¯VZa(θ−
a ) + VZu(θ−
u )
1 −(δau)2(δua)2eka(θ−
a −θ+
a )
+ ¯V max
Za
< 0.
(10.90b)
Proof
The domain of deﬁnition, D, is nonempty if, and only if, 0 <
(δa
u)2(δu
a)2eka(θ−
a −θ+
a ) is satisﬁed. If there exists ζ∗
u ∈D satisfying ζ∗
u = ρ(ζ∗
u),
where ρ is the Poincar´e map deﬁned in (10.85), then, ζ∗
u is an exponentially
ﬁxed point if, and only if, (10.89) is satisﬁed, in which case the value of the
ﬁxed point is given as (10.88). Finally, the two inequalities in (10.90) are the
necessary and suﬃcient conditions for ζ∗
u given in (10.88) to be in D.
Remark 10.7
The convergence rate of the solution to the limit cycle can be
altered by the ankle torque, uA, through choice of ka, as long as the constraint
© 2007 by Taylor & Francis Group, LLC

326
Feedback Control of Dynamic Bipedal Robot Locomotion
on the FRI point remaining within the foot support region during the fully
actuated phase is satisﬁed.
Remark 10.8
Suppose that (10.85) has a ﬁxed point. Then ζ∗
a(θa) lies on
the periodic orbit if, and only if,
(δa
u)2(δu
a)2ζ∗
a(θ−
a ) −ζ∗
a(θ+
a ) = (δa
u)2VZu(θ−
u ).
(10.91)
10.4.4
Stability of the Robot in the Full-Dimensional Model
Using the material of Chapter 4 and following the development in Section 5.5,
it is straightforward to prove that exponentially stable periodic orbits of the
hybrid zero dynamics are exponentially stabilizable in the full-dimensional
model.
10.5
Designing the Virtual Constraints
To render the analytical results in the previous section useful for feedback
design, a convenient ﬁnite parametrization of the virtual constraints must
be introduced, as in Section 6.2. This introduces free parameters into the
hybrid zero dynamics, (10.60). A minimum cost criterion can then be posed
and parameter optimization applied to the hybrid zero dynamics to design a
provably stable, closed-loop system with satisﬁed design constraints, such as
walking at a prescribed average speed, the forces on the support leg lying in
the allowed friction cone, and the foot rotation indicator is point within the
convex hull of the foot during the fully actuated phase and strictly in front of
the foot in the underactuated phase.
10.5.1
Parametrization Using B´ezier polynomials
For the parametrization of the output function for each phase, B´ezier polyno-
mials are used. Let
bi
a(sa) :=
Ma

k=0
αi
k
Ma!
k!(Ma −k)!sk
a(1 −sa)Ma−k,
(10.92a)
bi
u(su) :=
Mu

k=0
βi
k
Mu!
k!(Mu −k)!sk
u(1 −su)Mu−k,
(10.92b)
where Ma > 3, Mu > 3, sa(θa) =
θa−θ+
a
θ−
a −θ+
a and su(θu) =
θu−θ+
u
θ−
u −θ+
u . Note that
sa = 0, sa = 1, su = 0, and su = 1 represent the beginning and the end of
© 2007 by Taylor & Francis Group, LLC

Walking with Feet and Actuated Ankles
327
the fully actuated phase and the beginning and the end of the underactuated
phase, respectively. Deﬁne the output function for each phase, satisfying the
output Hypotheses HH1.a–HH5.a and HH1.u–HH5.u, as in Section 10.3 , to
be
ya = ha(qa) = ht
a(qa) −hd
a ◦θa(qa)
(10.93a)
yu = hu(qu) = ht
u(qu) −hd
u ◦θu(qu),
(10.93b)
where ht
a is a vector with N −2 elements specifying independent values to be
controlled during the fully actuated phase, ht
u is a vector containing N −1
independent values to be controlled during the underactuated phase, hd
a(θa)
and hd
u(θu) are the desired curves for the controlled elements to track during
each phase. The desired curves, hd
a(θa) and hd
u(θu), are deﬁned as follows:
hd
a(θa) =
⎡
⎢⎣
b1
a ◦sa(θa)
· · ·
bN−2
a
◦sa(θa)
⎤
⎥⎦,
(10.94a)
hd
u(θu) =
⎡
⎢⎣
b1
u ◦su(θu)
· · ·
bN−1
u
◦su(θu)
⎤
⎥⎦.
(10.94b)
Note that due to the properties of the B´ezier polynomials, the desired output
function at the beginning of each phase is
hd
a(sa)|sa=0 = α0
(10.95a)
∂hd
a(sa)
∂sa
&&&&
sa=0
= Ma(α1 −α0)
(10.95b)
hd
u(su)|su=0 = β0
(10.95c)
∂hd
u(su)
∂su
&&&&
su=0
= Mu(β1 −β0),
(10.95d)
and, similarly, at the end of each phase is
hd
a(sa)|sa=1 = αMa
(10.96a)
∂hd
a(sa)
∂sa
&&&&
sa=1
= Ma(βMa −βMa−1)
(10.96b)
hd
u(su)|su=1 = βMu
(10.96c)
∂hd
u(su)
∂su
&&&&
su=1
= Mu(βMu −βMu−1),
(10.96d)
© 2007 by Taylor & Francis Group, LLC

328
Feedback Control of Dynamic Bipedal Robot Locomotion
where
αi =
⎡
⎢⎢⎣
α1
i
...
αN−2
i
⎤
⎥⎥⎦,
i = 0, . . . , Ma
(10.97a)
βj =
⎡
⎢⎢⎣
β1
j
...
βN−1
j
⎤
⎥⎥⎦,
j = 0, . . . , Mu.
(10.97b)
When the ankle torque is used to aﬀect the stability as explained in Sec-
tion 10.4.3, the desired path of the angular momentum also needs to be de-
signed. Since the angular momentum during the fully actuated phase is never
zero, ζ∗= (σ∗)2/2 is parameterized instead of the desired angular momentum,
σ∗, which is given by
ζ∗◦sa(θa) :=
m

k=0
γk
m!
k!(m −k)!sk
a(1 −sa)m−k,
(10.98)
where m > 1. By the properties of B´ezier polynomials,
ζ∗(sa)|sa=0 = γ0
(10.99a)
ζ∗(sa)|sa=1 = γm.
(10.99b)
10.5.2
Achieving Impact Invariance of the Zero Dynamics
Manifolds
To achieve the invariance, the output function for each phase needs to be
designed such that the invariance conditions (10.61a), (10.61b), (10.62a), and
(10.62b) are satisﬁed. Since ya and yu satisfy HH3.a and HH3.u, respectively,
[ha(qa); θa(qa)] and [hu(qu); θu(qu)] are invertible maps. Using (10.93), we
obtain that
Ha(qa) :=

ht
a(qa)
θa(qa)

(10.100)
and
Hu(qu) :=

ht
u(qu)
θu(qu)

(10.101)
are also invertible maps. By deﬁnition, on the zero dynamics manifold for
each phase, the output function satisﬁes the following conditions.
ya = ha(qa) = ht
a(qa) −hd
a ◦θa(qa) = 0,
(10.102a)
yu = hu(qu) = ht
u(qu) −hd
u ◦θu(qu) = 0.
(10.102b)
© 2007 by Taylor & Francis Group, LLC

Walking with Feet and Actuated Ankles
329
Since Ha(qa) and Hu(qu) are invertible, the condition for the position states
after the transition to remain in the zero dynamics manifold for the underac-
tuated phase is derived as

β0
θu(q+
u )

= Hu ◦
⎡
⎢⎣H−1
a
◦

αMa
θa(q−
a )

π
⎤
⎥⎦.
(10.103)
Similarly, the condition for the position states to be in the zero dynamics man-
ifold for the fully actuated phase after the transition from the underactuated
phase to the fully actuated can be obtained to be

α0
θa(q+
a )

= Ha ◦
"
R
"
H−1
u
◦

βMu
θu(q−
u )
##
,
(10.104)
where R is the relabeling matrix.
Since ˙ya = 0 and ˙yu = 0 on the zero
dynamics manifold for each phase,
˙ya = ∂ht
a(qa)
∂qa
˙qa −∂hd
a
∂sa
∂sa
∂θa
˙θa = 0,
(10.105a)
˙yu = ∂ht
u(qu)
∂qu
˙qu −∂hd
u
∂su
∂su
∂θu
˙θu = 0.
(10.105b)
Since Ha(qa) and Hu(qu) are invertible, the condition for the velocity states
after the transition from the fully actuated phase to the underactuated phase
to be in the zero dynamics manifold for the underactuated phase can be
obtained from the transition map (10.8) as
β1 = θ−
u −θ+
u
Mu
∂ht
u
∂qu
Λ κ1a(θ−
a )
κ1u(θ+
u )δua
+ β0,
(10.106)
where
Λ :=
⎡
⎢⎣
∂Ha
∂qa
−1
 Ma(αMa −αMa−1)
θ−
a −θ+
a
1

01×1
⎤
⎥⎦.
(10.107)
Similarly, the condition for the velocity states to be in the zero dynamics
manifold for the fully actuated after the transition can be obtained as
α1 = θ−
a −θ+
a
Ma
∂ht
a
∂qa
Δa
˙q,u(q−
u )∂Hu
∂qu
−1
Ξ κ1u(θ−
u )
κ1a(θ+
a )δau
+ α0,
(10.108)
where
Ξ :=
 Mu(βMu−βMu−1)
θ−
u −θ+
u
1

.
(10.109)
© 2007 by Taylor & Francis Group, LLC

330
Feedback Control of Dynamic Bipedal Robot Locomotion
When the ankle torque is controlled to aﬀect the stability, the desired path
of the angular momentum during the fully actuated phase, ζ∗
a(sa), needs to
satisfy (10.87), which is essentially equivalent to the nonzero angular momen-
tum hypothesis HGW3.F, and (10.91) for periodicity. Since ζ∗
a(θ+
a ) = γ0 and
ζ∗
a(θ−
a ) = γm, the condition for γ0 is given by
γ0 = (δu
a)2(δa
u)2γm −(δa
u)2VZu(θ−
u ),
(10.110)
from (10.91).
10.5.3
Specifying the Remaining Free Parameters
There are free coeﬃcients in the B´ezier polynomials after meeting the in-
variance conditions and they can be used to satisfy constraints for stability,
ground reaction forces being within the friction cone to avoid slipping, anthro-
pomorphic gait, average walking speed, etc. This section explains the various
constraints.
Equality constraint:
EC1) Average walking speed is constant. The walking speed of the robot,
which is deﬁned as step length divided by time duration of a step, is given by
v = Ls
Ts
,
(10.111)
where Ls is the step length and Ts is the time elapsed for the step.
Inequality constraints:
IEC1) The stability condition (10.89) is satisﬁed;
IEC2) The nonslipping assumption is satisﬁed. In each phase, the foot will
not slip if the ratio of the tangential reaction force and the normal reaction
force from the ground are within the friction cone, which can be formulated
as
&&&&
FT
FN
&&&& ≤μs,
(10.112)
where μs is the Coulomb friction coeﬃcient of the surface, FT is the tangential
force, and FN is the normal reaction force;
IEC3) The normal reaction force from the ground is positive. This is due
to the fact that the ground reaction force is unilateral. In other words, the
ground is not sticky;
IEC4) The height of the swing foot is positive between impacts;
© 2007 by Taylor & Francis Group, LLC

Walking with Feet and Actuated Ankles
331
IEC5) The FRI point is within the stance footprint (i.e., the convex hull of
the foot) during the fully actuated phase and strictly in front of the stance
foot at the beginning of the underactuated phase;
IEC6) The stance foot leaves the ground after the double support;
IEC7) The angles of the knees and ankles are limited to produce an anthro-
pomorphic gait;
IEC8) The torque applied at each joint is limited to a physically realizable
value.
The desired output functions and the desired angular momentum during a
step need to be determined, subject to the invariance condition and the con-
straints being satisﬁed. This can be formulated as an numerical optimization
problem. The cost function used here is deﬁned as
J = 1
Ls
 T −
I
T +
I
N

k=1
| ˙qkuk| dt,
(10.113)
where Ls is the step length, T +
I and T −
I are the time of beginning and end of
the step, respectively.
10.6
Simulation
For purpose of illustration, a planar bipedal robot with seven links is used.
See Fig. 10.3 for the detailed coordinate conventions. The degrees of the poly-
nomials used in the desired output functions and desired angular momentum
for both phases are set to be Ma = 6, Mu = 6, and m = 5. The parameters
used for the simulation are given in Table 10.1. The parameters are deﬁned
as shown in Fig. 10.7. A stick ﬁgure diagram of the walking motion over one
step is depicted in Fig. 10.8.
Figures 10.9 and 10.10 show the position and velocity states of the robot.
During the underactuated phase, the angle of the stance foot decreases, which
implies that the robot rolls over the stance toe.
Let (0; 0) be the Cartesian coordinate of the stance toe and let (ph
h; 0) be the
location of the stance heel during the fully actuated phase; see Fig. 10.3. In
order for the stance foot not to rotate, the location of the FRI point, (ph
FRI; 0)
needs to satisfy
ph
h < ph
FRI < 0.
(10.114)
The validity of this condition is illustrated in Fig. 10.11, conﬁrming that the
stance foot remains ﬂat on the ground during the fully actuated phase.
© 2007 by Taylor & Francis Group, LLC

332
Feedback Control of Dynamic Bipedal Robot Locomotion
Table 10.1. Parameters for simulation. Note that ankle height is zero.
Model Parameter
Units
Link
Label
Value
Torso
MT orso
36.044
Femur
MF emur
9.149
Mass
kg
Tibia
MT ibia
3.000
Foot
MF oot
0.200
Torso
LT orso
0.625
Femur
LF emur
0.400
Length
m
Tibia
LT ibia
0.400
Toe
LT oe
0.100
Heel
LHeel
0.060
Torso
JT orso
5.527
Femur
JF emur
0.331
Inertia
kg·m2
Tibia
JT ibia
0.149
Foot
JF oot
0.100
Torso
lT orso
0.200
Femur
lF emur
0.163
Center of Mass
m
Tibia
lT ibia
0.137
Foot
lF oot
0.030
The applied torques are shown in Fig. 10.12. Note that the torques have a
discontinuity at the transition from the fully actuated phase to the underac-
tuated phase, which is allowed in this study.
10.7
Special Case of a Gait without Foot Rotation
The previous analysis can be specialized to a gait without foot rotation, in
other words, to a gait with only ﬂat-footed walking. This allows the diﬀerences
with the ZMP criterion to be highlighted in the next section.
The stability conditions can be derived by specializing the calculations in
Section 10.4 to this case, the Poincar´e map of the hybrid zero dynamics is
ρ(ζ−
a ) = (δa
a)2ζ−
a −V uA
Za (θ−
a ),
(10.115)
where V uA
Za , the potential energy, is given in (10.67a), and, based on Sec-
© 2007 by Taylor & Francis Group, LLC

Walking with Feet and Actuated Ankles
333
LT orso
lT orso
MT orso
JT orso
(a) Torso
LF emur
lF emur
MF emur
JF emur
(b) Femur
LT ibia
lT ibia
MT ibia
JT ibia
(c) Tibia
LT oe
LHeel
JF oot
lF oot
MF oot
(d) Foot
Figure 10.7. Parameter deﬁnitions for each link. Note that ankle height is
zero; that is, pv
a = 0.
tions 10.3.3 and 10.3.4,
δa
a = 1 −⃗d ∧mtot

λa
x(q−
a )
λa
y(q−
a )

−Jfootω0(q−
a )
= 1 −mtotdλa
y(q−
a ) −Jfootω0(q−
a )
(10.116)
on ﬂat ground.
The stability theorem becomes the following.
Corollary 10.1
Under the Hypotheses HR1.F–HR4.F, HGW1.F–HGW9.F, HI1.F–HI7.F, and
© 2007 by Taylor & Francis Group, LLC

334
Feedback Control of Dynamic Bipedal Robot Locomotion
0
(a) 0.6% of step
0
(b) 15.1% of step
0
(c) 29.3% of step
0
(d) 43.4% of step
0
(e) 57.3% of step
0
(f) 71.1% of step
0
(g) 85.6% of step
0
(h) 100% of step
Figure 10.8. Stick diagram of the robot during one step of the stable gait
of Section 10.6.
HH1.a–HH5.a,
ζ∗
a = −V uA
Za (θ−
a )
1 −(δaa)2
(10.117)
is an exponentially stable ﬁxed point of (10.115) if, and only if,
0 < (δa
a)2 < 1,
(10.118a)
(δa
a)2V uA
Za (θ−
a )
1 −(δaa)2
+ V uA,max
Za
< 0.
(10.118b)
These conditions are the same as in Theorem 5.3 for point-feet, with the
exception that the potential energy term V uA
Za can be shaped by choice of the
ankle torque, uA; see second term in (10.67a).
10.8
ZMP and Stability of an Orbit
The ZMP has been widely used as an indication of balance of a bipedal robot
[114,117,147,207,214,233,235]. The ZMP being within the stance footprint
is a suﬃcient and necessary condition for the stance foot not to rotate, but it
does not mean the resulting walking motion corresponds to an asymptotically
stable periodic orbit. In this section, the special case of ﬂat-footed walking is
considered in order to illustrate that the ZMP criterion alone is not suﬃcient
for the stability of the robot.
© 2007 by Taylor & Francis Group, LLC

Walking with Feet and Actuated Ankles
335
2.6
2.8
3
3.2
Foot
 
 
1.2
1.4
1.6
1.8
Ankles
 
 
0.6
0.4
0.2
0
Knees
 
 
0
0.5
1
1.5
2
2.5
3
3.5
4
0.2
0
0.2
0.4
0.6
time (sec)
Hips
 
 
Figure 10.9.
Joint angles (rad) of the robot on the HZD. The robot is
walking at 1 m/s with a stable gait. Curves corresponding to the stance and
swing legs during the fully actuated phase are solid and dotted, respectively.
Curves corresponding to the stance and swing legs during the underactuated
phase are dashed and dash-dotted, respectively.
Consider a planar bipedal robot and a gait consisting only of the fully actu-
ated phase followed by an instantaneous double-support phase. The method
of Section 10.5 was used to design a periodic orbit of the robot such that: (i)
the FRI point is within the stance footprint during the fully actuated phase
in order for the stance foot to remain ﬂat on the ground and (ii) (δa
a)2 in
(10.115) is greater than one; see Table 10.2. Note that if the stance foot does
not rotate, the FRI point is equivalent to the ZMP. The ankle torque is used
for shaping the potential energy in this illustration.
Figure 10.13 shows the FRI point during the fully actuated phase. Since
the location of the FRI point satisﬁes (10.114), the stance foot does not rotate
and the ZMP criterion would “predict” stability. The gait, however, is not
stable. Table 10.2 shows the Poincar´e analysis of the unstable gait. Since
δa
a = 1.266, the condition (10.118a) is not satisﬁed, which causes instability.
The lack of stability is manifested by the walking speed diverging when there
is a small error in the velocity states at the initial conditions as shown in
Fig. 10.14. In this simulation, the velocity initial conditions are set to 99.5%
of their value on the periodic orbit.
© 2007 by Taylor & Francis Group, LLC

336
Feedback Control of Dynamic Bipedal Robot Locomotion
4
3
2
1
0
Foot
 
 
4
2
0
2
4
Ankles
 
8
6
4
2
0
2
4
Knees
 
 
0
0.5
1
1.5
2
2.5
3
3.5
4
6
4
2
0
2
4
time (sec)
Hips
 
 
Figure 10.10. Joint velocities (rad/s) of the robot on the HZD. The robot is
walking at 1 m/s with a stable gait. Curves corresponding to the stance and
swing legs during the fully actuated phase are solid and dotted, respectively.
Curves corresponding to the stance and swing legs during the underactuated
phase are dashed and dash-dotted, respectively.
Even with the unstable gait, the hybrid zero dynamics is invariant. Fig-
ure 10.15 shows the phase portrait of the absolute angle of the robot. The
point A represents the initial condition. The gait of the robot diverges from
the limit cycle, which implies that the periodic orbit is not stable.
© 2007 by Taylor & Francis Group, LLC

Walking with Feet and Actuated Ankles
337
0
0.5
1
1.5
2
2.5
3
3.5
4
−0.15
−0.1
−0.05
0
 
 
time (sec)
CoP (m)
Figure 10.11. Location of the CoP while walking at 1 m/s with a stable
gait. The CoP validates the conditions for the respective phases. Namely, it is
located at the toe during the underactuated phase (bold line) and it is strictly
within the footprint, −0.16 < ph
FRI < 0, during the fully actuated phase, when
it is therefore equal to the FRI point. The discontinuity in the location of the
CoP is due to the discontinuity in the torque at each transition.
Table 10.2. Quantities of the Poincar´e return map of the hybrid zero dy-
namics for an unstable gait.
V uA
Za (θ−
a )
V uA,max
Za
ζ∗
a
δa
a
(kgm2/s)2
(kgm2/s)2
(kgm2/s)2
1.266
505
1050
1678
© 2007 by Taylor & Francis Group, LLC

338
Feedback Control of Dynamic Bipedal Robot Locomotion
100
50
0
50
Ankles
 
 
100
50
0
50
Knees
 
0
0.5
1
1.5
2
2.5
3
3.5
4
100
50
0
50
time (sec)
Hips
 
 
Figure 10.12. Joint torques (Nm) of the robot when walking at 1 m/s with
a stable gait. Curves corresponding to the stance and swing legs during the
fully actuated phase are solid and dotted, respectively. Curves corresponding
to the stance and swing legs during the underactuated phase are dashed and
dash-dotted, respectively.
0
0.5
1
1.5
2
2.5
3
3.5
4
−0.15
−0.14
−0.13
−0.12
−0.11
−0.1
−0.09
time (sec)
FRI point (m)
Figure 10.13. Location of FRI point for an unstable, ﬂat-footed gait. The
FRI point remains strictly within the stance footprint, −0.16 < ph
FRI < 0, and
hence the ZMP criterion is satisﬁed.
© 2007 by Taylor & Francis Group, LLC

Walking with Feet and Actuated Ankles
339
1
2
3
Ankles
 
 
1
0.5
0
Knees
 
 
0
0.5
1
1.5
2
2.5
3
3.5
4
0
0.5
1
time (sec)
Hips
 
 
Figure 10.14. Divergence of the joint angles (rad) of the robot with an un-
stable gait that satisﬁes the ZMP criterion. The velocity states are initialized
at 99.5% of their values on the periodic orbit. Curves corresponding to the
stance and the swing legs are solid and dash-dotted, respectively.
Figure 10.15.
Phase portrait of the absolute angle of the robot for an
unstable gait that satisﬁes the ZMP criterion. The point A represents the
initial condition, selected so that the joint velocities are 99.5% of their values
on the periodic orbit. The robot’s motion clearly diverges from the periodic
orbit, commensurate with δa
a > 1 in Table 10.2.
© 2007 by Taylor & Francis Group, LLC
0.8
1
1.2
1.4
1.6
1.8
2
2.2
4
3.5
3
2.5
2
1.5
1
0.5
0
˙q6
q6
A


11
Directly Controlling the Foot Rotation
Indicator Point
The majority of robot control policies are built around the notion of con-
trolling the FRI point.1 In particular, most of the control strategies are de-
composed into a low-level controller and a high-level controller, where the
low-level controller ensures the tracking of the reference motion for each joint,
and the high-level controller modiﬁes the reference motion in order to ensure
that the FRI point remains within the convex hull of the foot support region;
see Fig. 1.8. The previous chapter concluded, however, by emphasizing that
the existence and stability of an orbit depend on much more than just the
position of the FRI point: It is quite possible to have gaits where the FRI
point is within the convex hull of the foot support region and where the robot
remains upright, but yet the gait is not periodic, or it is periodic, but is not
asymptotically stable. This chapter addresses the direct control of the FRI
point in the context of the tools associated with the hybrid zero dynamics
framework. In particular, control of the FRI point is achieved along with
a guarantee of the existence and exponential stability of a periodic walking
motion.
11.1
Introduction
In human walking, one observes heel strike, followed by rotation of the foot
about the heel, followed by the foot being in full contact with the ground,
and then rotation about the toe just before the heel strike on the opposite
foot.
It is therefore natural to assume that the center of pressure moves
forward from heel to toe throughout a step via progressive ﬂexing of the
1Recall that as long as the FRI point remains inside the convex hull of the foot support
region, CoP = ZMP = FRI and the supporting foot does not rotate.
Recall also that
the center of pressure or CoP is a standard notion in mechanics that was renamed the
zero moment point or ZMP by Vukobratovic and coworkers [233, 235]. The FRI point of
Goswami is a more general notion because it is deﬁned when the foot is in rotation with
respect to the walking surface [92].
341
© 2007 by Taylor & Francis Group, LLC

342
Feedback Control of Dynamic Bipedal Robot Locomotion
foot.2 In human walking, the rotation about the heel occurs during the non-
instantaneous double-support phase, which is not considered in the current
study where the double support phase is assumed to be instantaneous. Hence,
as in the analysis of the preceding chapter, the rotation about the heel is
neglected and the impact is assumed to take place with the foot parallel to
the ground. In order for the supporting foot to remain ﬂat on the ground, the
FRI point must never reach the limits of the convex hull of the foot support
region. Direct control of the position of the FRI point is a way to prevent this
from occurring.
The control strategy presented here is based on using the stance ankle
torque to obtain a desired evolution of the FRI position during the fully
actuated phase. For the underactuated phase, the control strategy given in
Section 10.4.1 is used.
For robots with point feet (i.e., without feet), Part II of the book demon-
strated that the angular momentum about the stance leg end was an impor-
tant variable for studying the zero dynamics. When controlling the position of
the FRI point during the fully actuated phase, it is straightforward to use the
angular momentum about the FRI point in order to study the zero dynamics.
We assume here that the angular momentum around the FRI is never zero
during a step. In particular, Hypothesis HGW3.F of Section 10.2.1 is replaced
with the following3:
HGW10.F) Throughout the fully actuated phase, the angular momentum
about the FRI point is nonzero.
11.2
Using Ankle Torque to Control FRI Position
During the Fully Actuated Phase
An ankle-torque control strategy is proposed for regulating the FRI position,
ph
FRI. The analysis of Section 10.4.2 is modiﬁed to reﬂect this new objective.
The counterclockwise angular measurement convention is used in the theo-
retical development. In the simulations reported in Sections 11.4 and 11.6,
a clockwise angular measurement convention is used so that forward motion
corresponds to positive angular momentum.
2For mechanical walking, the CoP can evolve in an arbitrary manner during the ﬂat-footed
phase, as long as it stays strictly within the convex hull of the footprint. In human walking,
the heel strikes ﬁrst, meaning the CoP is at the heel, then the foot rolls about the heel
contact until the foot is ﬂat on the ground. At the end of the step, ankle ﬂexion forces the
CoP to the toe in order to initiate toe roll. Hence, at the beginning of ground contact, the
CoP is at the back of the foot and at the end of the step, the CoP is as the front of the
foot. A reasonable conjecture is that it advances monotonically in between.
3It will be seen that HGW10.F implies HGW3.F.
© 2007 by Taylor & Francis Group, LLC

Directly Controlling the Foot Rotation Indicator Point
343
11.2.1
Ability to Track a Desired Proﬁle of the FRI Point
The desired position of the FRI during the fully actuated phase is assumed
here to be a function of θa only: ph,d
FRI(θa). It is now shown that under Hy-
pothesis HGW10.F, the ankle torque uA can be chosen to achieve a desired
evolution of the FRI point.
Let ya = ha(xa) be an (N −2) × 1 vector of output functions satisfying
Hypotheses HH1.a–HH5.a. On the corresponding zero dynamics of the fully
actuated phase, the position of the center of mass can be expressed as a
function of θa. It follows that on the zero dynamics, the velocity of the center
of mass is proportional to the angular momentum about the stance ankle via:
˙pcm =

λa
x(θa)
λa
y(θa)

σa,
(11.1)
and its acceleration is
¨p h
cm = λa
x(θa) ˙σa + ˙λa
x(θa)σa
(11.2a)
¨p v
cm = λa
y(θa) ˙σa + ˙λa
y(θa)σa.
(11.2b)
Using (10.48a) and (10.48b), the acceleration of the center of mass is related
to uA by
¨p h
cm = λa
x(θa)κ2a(θa) + λa
x(θa)uA + ∂λa
x(θa)
∂θa
κ1a(θa)σ2
a
(11.3a)
¨p v
cm = λa
y(θa)κ2a(θa) + λa
y(θa)uA + ∂λa
y(θa)
∂θa
κ1a(θa)σ2
a.
(11.3b)
Substituting the above into (10.24) and rearranging terms yields
γ2(θa)uA = γ0(θa) + γ1(θa)σ2
a,
(11.4)
where
γ0(θa) =

ph,d
FRI(θa) −ph
a

mtot

g0 + λa
y(θa)κ2a(θa)

+
pv
amtotλa
x(θa)κ2a(θa) −(ph
foot,cm −ph
a)mfootg0
(11.5a)
γ1(θa) =

ph,d
FRI(θa) −ph
a

mtot
∂λa
y(θa)
∂θa
κ1a(θa)+
pv
amtot
∂λa
x(θa)
∂θa
κ1a(θa)
(11.5b)
γ2(θa) = 1 +

ph
a −ph,d
FRI(θa)

mtotλa
y(θa) −pv
amtotλa
x(θa).
(11.5c)
Therefore, we can solve for uA as a function of the desired FRI position if,
and only if,
γ2(θa) ̸= 0.
(11.6)
© 2007 by Taylor & Francis Group, LLC

344
Feedback Control of Dynamic Bipedal Robot Locomotion
On the zero dynamics, however, (10.26b) becomes
σFRI =

1 + mtot(ph
a −ph
FRI)λa
y(θa) −mtotpv
aλa
x(θa)

σa,
(11.7)
and hence Hypothesis HGW10.F implies (11.6), showing that the stance ankle
torque, uA, can indeed be used to regulate the FRI position. The required
control is then
uA = γ0(θa)
γ2(θa) + γ1(θa)
γ2(θa)σ2
a.
(11.8)
11.2.2
Analyzing the Zero Dynamics
Using the coordinates (θa; σa) for the zero dynamics manifold and substituting
(11.8) into (10.48a) and (10.48b), the zero dynamics of the fully actuated
phase can be written as
˙θa = κ1a(θa)σa
(11.9a)
˙σa = κ3a(θa) + κ4a(θa)σ2
a,
(11.9b)
where
κ3a(θa) := κ2a(θa) + γ0(θa)
γ2(θa), and
(11.10a)
κ4a(θa) := γ1(θa)
γ2(θa).
(11.10b)
In a similar manner, using the coordinates (θa; σFRI), where σFRI is the an-
gular momentum about the FRI point, the zero dynamics can be written as
˙θa = κ1FRI(θa)σFRI
(11.11a)
˙σFRI = κ2FRI(θa) + κ3FRI(θa)σ2
FRI,
(11.11b)
where, from (10.26b), (10.27), and (11.7),
κ1FRI(θa) := κ1a(θa)
γ2(θa)
(11.12a)
κ2FRI(θa) := −mtotg0

ph
cm(θa) −ph,d
FRI(θa)

(11.12b)
κ3FRI(θa) := −mtot
∂ph,d
FRI(θa)
∂θa
λa
y(θa)κ1a(θa)

1
γ2(θa)
2
.
(11.12c)
On the zero dynamics manifold, the fully actuated phase begins with θa = θ+
a
and ﬁnishes with θa = θ−
a . Under HGW10.F, σFRI is nonzero throughout the
fully actuated phase, which leads to
dσFRI
dθa
= κ2FRI(θa)
κ1FRI(θa)
1
σFRI
+ κ3FRI(θa)
κ1FRI(θa)σFRI.
(11.13)
© 2007 by Taylor & Francis Group, LLC

Directly Controlling the Foot Rotation Indicator Point
345
Doing the now-familiar change of coordinates ζFRI = (σFRI)2/2 results in
dζFRI
dθa
= κ2FRI(θa)
κ1FRI(θa) + 2κ3FRI(θa)
κ1FRI(θa)ζFRI.
(11.14)
The above is a linear in ζFRI, θa-varying ODE and has the explicit solution
ζFRI(θa) = (δFRI(θa))2 ζ+
FRI −V FRI
Za (θa),
(11.15)
where
δFRI(θa) = exp
" θa
θ+
a
κ3FRI(τ1)
κ1FRI(τ1)dτ1
#
(11.16a)
V FRI
Za (θa) = −
 θa
θ+
a
exp
"
2
 θa
τ2
κ3FRI(τ1)
κ1FRI(τ1)dτ1
#
κ2FRI(τ2)
κ1FRI(τ2)dτ2.
(11.16b)
Note that if the desired FRI point is selected to be constant during this phase,
then κ3FRI(θa) ≡0 and δFRI(θa) ≡1, and hence the result simpliﬁes to the
case of point feet; see Section 5.4.1. Equation (11.15) has been obtained using
hypothesis HGW10.F, thus the condition ζFRI(θa) > 0 must be satisﬁed for
θa between θ−
a and θ+
a , yielding the condition
ζ+
FRI > ¯V max,
(11.17)
with
¯V max :=
max
θ+
a ≤θa≤θ−
a
V FRI
Za (θa)
(δFRI(θa))2 .
(11.18)
In order to obtain the Poincar´e map for the fully actuated phase on the
hybrid zero dynamics, ρa : Sa
u ∩Zu →Su
a ∩Za, the relation between ζ−
u and
ζ+
FRI and between ζ−
a and ζ+
FRI have to be deﬁned. At θ+
a , using the principle
of angular momentum transfer,4
σ+
FRI = σ+
a + mtot(ph
a −ph,d
FRI(θ+
a )) ˙pv+
cm −mtotpv
a ˙ph+
cm.
(11.19)
In combination with (11.1) and (10.53b), we obtain a linear relation between
σ+
FRI and σ−
u , written as
σ+
FRI = δFRI
u
σ−
u .
(11.20)
At θ−
a , using the principle of angular momentum transfer,
σ−
FRI = σ−
a + mtot(ph
a −ph,d
FRI(θ−
a )) ˙pv−
cm −mtotpv
a ˙ph−
cm.
(11.21)
Using (11.1), we obtain a linear relation between σ−
FRI and σ−
a , written as
σ−
a = δa
FRIσ−
FRI.
(11.22)
4Note that the angular momentum about the FRI point is conserved during impact, but
the position of the FRI point can be diﬀerent before impact, at impact and after impact.
© 2007 by Taylor & Francis Group, LLC

346
Feedback Control of Dynamic Bipedal Robot Locomotion
Thus the Poincar´e map for the fully actuated phase on the hybrid zero dy-
namics, ρa : Sa
u ∩Zu →Su
a ∩Za, becomes
ρa(ζ−
u ) = (δa
FRI)2(δFRI(θ−
a ))2(δFRI
u
)2ζ−
u −(δa
FRI)2V FRI
Za (θ−
a ).
(11.23)
The Poincar´e map ρ(ζ−
u ) : Sa
u ∩Zu →Sa
u ∩Zu for the overall reduced system
is deﬁned as the composition of (10.65) and (11.23). In coordinates (θu; ζu),
ρ(ζ−
u ) = ρu ◦ρa(ζ−
u )
(11.24a)
= (δu
a)2(δa
FRI)2(δFRI(θ−
a ))2(δFRI
u
)2ζ−
u
−(δu
a)2(δa
FRI)2V FRI
Za (θ−
a ) −VZu(θ−
u ),
(11.24b)
with domain of deﬁnition
D = {ζ−
u > 0 | (δFRI
u
)2ζ−
u −¯V max > 0,
(δu
a)2(δa
FRI)2(δFRI(θ−
a ))2(δFRI
u
)2ζ−
u −(δu
a)2(δa
FRI)2V FRI
Za (θ−
a ) −V max
Zu
> 0}.
(11.25)
Theorem 11.1
Assume the Hypotheses HR1.F–HR4.F on the robot, HGW1.F–HGW10.F on
its gait, and HI1.F–HI7.F on the impact model.
If virtual constraints are
selected to satisfy Hypotheses HH1.a–HH5.a and HH1.u–HH5.u, then
ζ∗
u = −(δu
a)2(δa
FRI)2V FRI
Za (θ−
a ) + VZu(θ−
u )
1 −(δua)2(δa
FRI)2(δFRI(θ−
a ))2(δFRI
u
)2
(11.26)
is an exponentially stable ﬁxed point of (11.24a) if, and only if,
0 < (δu
a)2(δa
FRI)2(δFRI(θ−
a ))2(δFRI
u
)2 < 1,
(11.27a)
(δFRI
u
)2(δu
a)2(δa
FRI)2V FRI
Za
+ (δFRI
u
)2VZu(θ−
u )
1 −(δua)2(δa
FRI)2(δFRI(θ−
a ))2(δFRI
u
)2
+ ¯V max < 0,
(11.27b)
(δu
a)2(δa
FRI)2(δFRI(θ−
a ))2(δFRI
u
)2VZu(θ−
u ) + (δu
a)2(δa
FRI)2V FRI
Za (θ−
a )
1 −(δua)2(δa
FRI)2(δFRI(θ−
a ))2(δFRI
u
)2
+ V max
Zu
< 0.
(11.27c)
Proof
D is nonempty if, and only if, (δu
a)2(δa
FRI)2(δFRI(θ−
a ))2(δFRI
u
)2 > 0.
If there exists ζ∗
u ∈D satisfying ρ(ζ∗
u) = ζ∗
u , then it is an exponentially stable
ﬁxed point if, and only if, 0 < (δu
a)2(δa
FRI)2(δFRI(θ−
a ))2(δFRI
u
)2 < 1, and in
this case, (11.26) is the value of ζ∗
u. Finally, (11.27b) and (11.27c) are the
necessary and suﬃcient conditions for (11.26) to be in D.
© 2007 by Taylor & Francis Group, LLC

Directly Controlling the Foot Rotation Indicator Point
347
Remark 11.1
The selection of the desired evolution of the FRI point aﬀects
both the periodic motion and the convergence rate to the periodic motion. The
position of the FRI point weakly aﬀects the term κ1FRI, which represents the
inertia of the robot about the FRI point and is always positive. The shape of
ph,d
FRI(θa), as characterized by ∂ph,d
FRI(θa)/∂θa, aﬀects the term κ3FRI and thus
the convergence rate to the periodic orbit of the zero dynamics. To accelerate
convergence, the term (δFRI(θ−
a ))2 must be as small as possible, and thus κ3FRI
must be negative. It follows that increasing ∂ph,d
FRI(θa)/∂θa when the velocity
of the center of mass is directed upward decreases the convergence rate while
increasing ∂ph,d
FRI(θa)/∂θa when the velocity of the center of mass is directed
downward increases the convergence rate. The mean value of ph,d
FRI(θa) mainly
aﬀects κ2FRI. Moving the FRI point toward the toe decreases the ﬁxed point,
ζ∗
u, and consequently, the average walking speed. If the FRI point is moved
suﬃciently near the toe, a periodic solution may cease to exist because either
condition (11.27b) or (11.27c) is no longer satisﬁed.
11.3
Special Case of a Gait without Foot Rotation
The previous analysis can be specialized to a gait without foot rotation, in
other words, to a gait with only ﬂat-footed walking. The development parallels
Section 10.8 and is only sketched. To obtain the Poincar´e map for the fully
actuated phase on the hybrid zero dynamics, ρa : Sa
a ∩Za →Sa
a ∩Za, the
relation between ζ−
FRI and ζ+
FRI from one step to the next has to be determined.
This variation is due to the impact. During the impact, the evolution of the
angular momentum around the new stance ankle is known from (10.37). By
transfer of the angular momentum at θ−
a from the FRI position to the stance
ankle,
σ−
a = σ−
FRI −mtot(ph
a −ph,d
FRI(θ−
a )) ˙pv−
cm + mtotpv
a ˙ph−
cm.
(11.28)
The transfer of angular momentum at θ+
a from the stance ankle to the FRI
position after impact is given by (11.19). The combination of the three equa-
tions (10.37), (11.19), and (11.28) yields a linear relation between σ+
FRI and
σ−
FRI of the form
σ+
FRI = δFRI
FRIσ−
FRI.
(11.29)
Thus the Poincar´e map of the hybrid zero dynamics, ρa : Sa
a ∩Za →Sa
a ∩Za,
is
ρa(ζ−
FRI) = (δFRI(θ−
a ))2(δFRI
FRI)2ζ−
FRI −V FRI
Za (θ−
a ).
(11.30)
The stability theorem becomes the following.
© 2007 by Taylor & Francis Group, LLC

348
Feedback Control of Dynamic Bipedal Robot Locomotion
Corollary 11.1
Assume the Hypotheses HR1.F–HR4.F on the robot, HGW1.F–HGW10.F on
its gait, and HI1.F–HI7.F on the impact model.
If virtual constraints are
selected to satisfy Hypotheses HH1.a–HH5.a, then
ζ∗
FRI = −
V FRI
Za (θ−
a )
1 −(δFRI(θ−
a ))2(δFRI
FRI)2
(11.31)
is an exponentially stable ﬁxed point of (11.30) if, and only if,
0 < (δFRI(θ−
a ))2(δFRI
FRI)2 < 1
(11.32)
and
(δFRI
FRI)2V FRI
Za (θ−
a )
1 −(δFRI(θ−
a ))2(δFRI
FRI)2 + ¯V max < 0.
(11.33)
11.4
Simulations
The control law of Section 11.2 is evaluated here for the periodic motion
depicted in the stick-diagram of Fig. 11.1. This trajectory includes only the
fully actuated and double support phases, and has been designed using [69].
Polynomials of degree 4 were used. The trajectory was optimized for a robot
without feet, namely RABBIT, and will be applied to a robot with massless
feet and all other parameters the same as RABBIT. The feet are 28 cm long,
and taking the toe as the origin, they have the following dimensions: ph
a =
−20 cm, pv
a = 8 cm (ankle position) and ph
h = −28 cm (heel position). Various
desired evolutions of the FRI point will be imposed and sensitivity to modeling
error will be assessed.
Recall that in the simulations reported here and in
Section 11.6, a clockwise angular measurement convention is used so that
forward motion corresponds to positive angular momentum.
11.4.1
Nominal Controller
The evolution of the FRI position is chosen to be a linear function of θa. As
θa varies from θ+
a to θ−
a , ph,d
FRI(θa) will vary from −0.23 m to −0.08 m. The
control law imposes the virtual constraints ha(xa) = 0 and ph
FRI = ph,d
FRI(θa),
all of which are determined by regression against the nominal periodic walking
motion, as in Section 9.5. The zero dynamics that results from imposing these
constraints on the system are described by θa, σFRI and (11.11a) and (11.11b).
These equations along with the constraints describe completely the behavior
of the system on the zero dynamics manifold.
The single support phase begins with θa = θ+
a = −0.247 rad and ﬁnishes
with θa = θ−
a = 0.346 rad, thus the behavior of the system can be described in
© 2007 by Taylor & Francis Group, LLC

Directly Controlling the Foot Rotation Indicator Point
349
0.6
0.4
0.2
0
0.2
0.4
0.6
0.2
0.4
0.6
0.8
1
1.2
1.4
0
Figure 11.1. The stick diagram of the desired gait. The stance leg is dotted.
Axes’ units are meters.
a phase-plane plot of (θa; σFRI), with θa initialized at θ+
a and diﬀerent initial
values for σFRI, as shown in Fig. 11.2. For suﬃciently high initial values of
σFRI, the robot completes a step. For suﬃciently low initial values, in fact,
for σFRI < σm
FRI =
√
2 ¯V max, the angular momentum σFRI crosses zero and
the robot falls backward.
The evolution of δ2
FRI(θa) and V FRI
Za (θa) are given in Fig. 11.3. Their ﬁnal
values, V FRI
Za (θ−
a ) = −224.8 and δ2
FRI(θ−
a ) = 1.0008, are useful for constructing
the Poincar´e map presented in Fig. 11.4. The behavior of ζFRI during the
impact is deﬁned by (δFRI
FRI)2, which is equal to 0.6914 for this example. The
minimal value of ζ−
FRI for which a step can be achieved is ¯V max/(δFRI
FRI)2 =
197.45. The upper bound ζM
FRI corresponds to the value of ζ−
FRI for which the
normal of the ground reaction force vanishes.
The periodic motion occurs at the intersection of the Poincar´e return map
and the identity map, as given by (11.31). For this example, the ﬁxed point
occurs at ζ∗
FRI ≈730. The corresponding average walking speed is 0.945 m/s.
The slope of the Poincar´e return map ρa is (δFRI)2(δFRI
FRI)2 = 0.692, and be-
cause it is less than 1, the corresponding periodic walking motion is exponen-
tially stable. The stability arises from the eﬀect of the impact because (δFRI)2
is close to 1.
A simulation was done for ten steps, assuming no modeling error and initial-
izing the state of the robot oﬀthe periodic orbit, with an initial velocity 47%
greater than its value on the periodic orbit; see Fig. 11.5. Convergence toward
a periodic motion was obtained for each of the ﬁve joints of the robot. As an
illustration, the evolution of the angle of the torso is depicted in Fig. 11.5(a).
© 2007 by Taylor & Francis Group, LLC

350
Feedback Control of Dynamic Bipedal Robot Locomotion
0.2
0 1
0
0.1
0.2
0.3
10
0
10
20
30
40
50
60
σFRI
θa (rad)
Figure 11.2. The phase plane for the zero dynamics of the nominal controller
of Section 11.4.1. A clockwise angular measurement convention is being used,
and consequently, when σFRI < 0, the robot is falling backward.
The same convergence is also evident in the evolution of the position of the
FRI point with respect to time in Fig. 11.5(b); for each step, its evolution is
linear from −0.23 m to −0.08 m, though the duration of the step varies: at
the beginning, the steps are faster and then a periodic behavior is obtained
asymptotically. Figure 11.5(c) presents the evolution of σFRI with respect to
time; it clearly converges toward a periodic motion.
11.4.2
With Modeling Errors
In practice, the robot’s parameters are not perfectly known.
We assume
here that there are mass errors of +10% in each of the thighs, +30% for the
shins, and +50% for the torso. In addition, there is an error of +30% in the
position of the center of mass of the torso. These errors have the following
consequences:
• because the virtual constraints are designed with an incorrect model of
the robot, the velocity after impact is not the expected value, and hence
impact invariance is lost for the zero dynamics manifold;
• because the position of the FRI point is calculated on the basis of an
incorrect dynamic model, the evolution of the FRI point will not be
exactly as planned.
With the state of the robot initialized at the same value as in the previous
example, the resulting behavior of the robot over 10 steps is presented in
Fig. 11.6.
Tracking errors were observed in the virtual constraints, most
particularly at the beginning of each step, due to the eﬀect of the impacts, but
© 2007 by Taylor & Francis Group, LLC

Directly Controlling the Foot Rotation Indicator Point
351
V FRI
Za (θa)
δ2
FRI(θa)
θa (rad)
Figure 11.3. The evolution of ζFRI during the fully actuated phase, under the
nominal controller of Section 11.4.1, s characterized by V FRI
Za (θa) and δ2
FRI(θa).
The position of the FRI point is being controlled to increase linearly, from
back to front. Because the vertical component of the velocity of the center
of mass is directed upward at the beginning of the step and then downward,
δFRI(θa) increases at the beginning of the step and then decreases.
the tracking errors in angular velocity were very nearly periodic. Convergence
to an approximately periodic motion was observed, as depicted for the phase-
plane evolution of the torso in Fig. 11.6(a). Convergence is also seen in the
evolution of σFRI with respect to time in Fig. 11.6(c). The resulting periodic
motion is not the nominal motion. Because the real robot is heavier than
the model used for control design, the ground reaction forces are greater, and
consequently, even though the actual evolution of the FRI point ph
FRI shown
in Fig. 11.6(b) is nearly linear, its upper and lower limits are smaller than
on the nominal orbit. In this particular case, the change in the evolution
of the FRI point does not cause a problem because the required constraints
on the equilibrium of the supporting foot are always satisﬁed. On the other
hand, if the real robot were lighter than the modeled robot, the FRI point
could be outside the foot support region and the equilibrium constraints on
the supporting foot could be violated. Hence, a safety margin is necessary
when the minimum and the maximum values for ph,d
FRI(θa) are deﬁned.
11.4.3
Eﬀect of FRI Evolution on the Walking Gait
The evolution of the FRI point throughout the step aﬀects the existence and
stability of the periodic motion obtained with the proposed control law. To
illustrate this point, we consider various linear evolutions of the position of
© 2007 by Taylor & Francis Group, LLC

352
Feedback Control of Dynamic Bipedal Robot Locomotion
0
500
1000
1500
2000
2500
0
500
1000
1500
2000
ζ−
FRI
ζ∗
FRI
ρa(ζ−
FRI)
ζm
FRI
ζM
FRI
Figure 11.4. The Poincar´e map of the hybrid zero dynamics for the gait of
Fig. 11.1 when the nominal controller of Section 11.4.1 is applied.
the FRI point with diﬀerent average values, 1
2(ph,d
FRI(θ+
a ) + ph,d
FRI(θ−
a )), while
holding constant the net change in the position of the FRI point, ph,d
FRI(θ−
a ) −
ph,d
FRI(θ+
a ) = 15 cm.
Table 11.1 presents the main properties of the periodic motion and of the
control law with respect to the variation of the average value of the FRI
position during one step. Placing the average position of the FRI closer to
the toe leads to larger values of δFRI
FRI and smaller values of ζ∗
FRI and average
walking speed. When the center of mass is in front of the FRI point, the torque
due to gravity speeds up the motion. When the center of mass is behind the
FRI point, the torque due to gravity slows down the motion.
When the
average position of the FRI is moved forward, the portion of the step where
gravity speeds up the motion decreases, and thus the average walking speed
decreases.
In the last row of Table 11.1, the value of ζ∗
FRI is less than the minimum value
necessary to complete a step (i.e., it does not satisfy (11.33)), and consequently
a walking motion cannot be produced.
The choice of ph,d
FRI(θa) does not aﬀect the geometric (kinematic) behavior
of the robot, but only its temporal evolution. For the geometric evolution
depicted in Fig. 11.1, which, we recall, was designed for a robot without feet,
the walking speed is 1.0 m/s. The same average walking speed can be achieved
with various choices of ph,d
FRI(θa) on the robot with feet.
Table 11.2, which is for constant walking speed, summarizes the main sta-
bility properties of the hybrid zero dynamics for various linear evolutions of
ph,d
FRI(θa), with increasing variation of ph,d
FRI(θa). It is observed that the ﬁxed
© 2007 by Taylor & Francis Group, LLC

Directly Controlling the Foot Rotation Indicator Point
353
0.345
0.35
0.355
0.36
0.365
0.37
0.375
0.6
0.4
0.2
0
0.2
torso angle (rad)
torso angular velocity
(rad/sec)
(a)
0
2
4
0.25
0.2
0.15
0.1
0.05
t (sec)
ph
FRI (m)
(b)
0
2
4
30
40
50
60
t (sec)
σFRI
(c)
Figure 11.5. As predicted by the Poincar´e map, the convergence to a periodic
motion is observed in simulation with the nominal control law of Section 11.4.1
when there is no modeling error.
point ζ∗
FRI is not strongly aﬀected by the presence of feet, and, in particular, it
seems insensitive to variation in the evolution of the FRI point. The relative
size of the basin of attraction is more sensitive to the evolution of the FRI
point, with a larger excursion of ph
FRI yielding a larger basin of attraction.
The angular momentum about the ankle varies due to gravity, just as in an
inverted pendulum. At the beginning of the step, the center of mass is behind
the ankle and the torque due to gravity decreases the magnitude of the an-
gular momentum, slowing down the robot. In the later part of the step, the
center of mass is in front of the ankle and the torque due to gravity increases
the magnitude of the angular momentum, accelerating the robot. The ver-
tical component of the ground reaction force is directed upward throughout
the step. Its horizontal component is directed backward at the beginning of
single support and forward at the end. Thus, if the FRI point is behind the
ankle at the beginning of step and in front of the ankle at the end, the ankle
torque uA is opposite to the torque due to gravity. Consequently, the angular
momentum has less variation throughout the step. This particularity appears
© 2007 by Taylor & Francis Group, LLC

354
Feedback Control of Dynamic Bipedal Robot Locomotion
0.345
0.35
0.355
0.36
0.365
0.37
0.375
0.38
1
0.5
0
0.5
torso angular velocity
(rad/sec)
torso angle (rad)
(a)
0
1
2
3
0.25
0.2
0.15
0.1
0.05
t (sec)
ph
FRI (m)
(b)
0
1
2
3
30
40
50
60
t (sec)
σFRI
(c)
Figure 11.6. The convergence to a (nearly) periodic motion is still observed
in simulation with the nominal control law of Section 11.4.1 when there is
modeling error.
to widen the basin of attraction.
When the evolution of the FRI point is linear, it has almost no eﬀect on the
stability of the ﬁxed point because δ2
FRI(θ−
a ) is close to 1 (see Fig. 11.7(a)).
It seems attractive to decrease this term by choosing a parabolic evolution of
the FRI point
ph,d
FRI(θa) = ph min
FRI
+ 4(ph max
FRI
−ph min
FRI )

θa −θ−
a + θ+
a
2
2
(11.34)
in order that a backward motion of the FRI point occurs for an upward
evolution of the center of mass, and vice-versa. The evolution of ph,d
FRI(θa)
and of δ2
FRI(θa) are presented in Fig. 11.7(b) for such a case.
The value
δ2
FRI(θ−
a ) does decrease, but because the position of the FRI point changes
in the forward direction just after impact, the value δFRI
FRI increases, with the
net result that their product is nearly constant. Another method to decrease
δ2
FRI(θ−
a ) without changing the initial or ﬁnal positions of the FRI point is
proposed in Fig. 11.7(c). The forward motion of the FRI position linearly
© 2007 by Taylor & Francis Group, LLC

Directly Controlling the Foot Rotation Indicator Point
355
Table 11.1. Eﬀect of ph,d
FRI(θa) on the walking motion, for a similar kinematic
evolution of the robot. The evolution of the FRI point is linear with respect
to θa, the amplitude of the displacement of the FRI point is 15 cm, and its
average position varies. This change dramatically aﬀects the average walking
speed of the robot.
Periodic Motion
ph,d
FRI(θ+
a )+ph,d
FRI(θ−
a )
2
speed
ζ∗
FRI
(δFRI)2
(δFRI
FRI)2
−17.5 cm
1.185 m/s
1042
1.001
0.676
−16.5 cm
1.076 m/s
890
1.0009
0.683
−15.5 cm
0.945 m/s
730
1.0008
0.691
−14.5 cm
0.781 m/s
561
1.0007
0.700
−13.5 cm
0.545 m/s
384
1.0006
0.708
−12.5 cm
196
1.0005
0.716
Basin of Attraction
ph,d
FRI(θ+
a )+ph,d
FRI(θ−
a )
2
ζm
FRI
ζ∗
FRI−ζm
FRI
ζ∗
FRI
ζM
FRI
ζM
FRI−ζ∗
FRI
ζ∗
FRI
−17.5 cm
143
86 %
2365
127 %
−16.5 cm
169
81 %
2383
168 %
−15.5 cm
197
73%
2438
234 %
−14.5 cm
227
59 %
2456
338 %
−13.5 cm
258
32 %
2474
544 %
−12.5 cm
no periodic motion
increases in the last portion of the step, when the velocity of the center of
mass is directed downward, but in the initial part of the step, the FRI point
is held constant.
11.5
A Variation on FRI Position Control
Instead of controlling the exact position of the FRI point throughout a step,
it is possible to use the ankle torque to fulﬁll other control objectives while
maintaining the FRI point in a desired region, (ph min
FRI , ph max
FRI
). As an exam-
ple, consider the control law of Section 10.4.3, which was designed to increase
© 2007 by Taylor & Francis Group, LLC

356
Feedback Control of Dynamic Bipedal Robot Locomotion
Table 11.2. Eﬀect of ph,d
FRI(θa) on the stability properties of the hybrid zero
dynamics for the same geometric evolution of the robot and the same average
walking speed. The ﬁrst line corresponds to the robot without feet, the ﬁve
following lines correspond to diﬀerent choices of ph,d
FRI(θa) for the robot with
feet.
Periodic Motion
ph,d
FRI(θ+
a )+ph,d
FRI(θ−
a )
2
ph,d
FRI(θ−
a ) −ph,d
FRI(θ+
a )
ζ∗
FRI
(δFRI)2
(δFRI
FRI)2
−20.79 cm
0 cm
1473
1
0.63
−20.3 cm
5 cm
1416
1.0005
0.64
−19.82 cm
10 cm
1361
1.0009
0.65
−19.35 cm
15 cm
1307
1.0012
0.66
−18.9 cm
20 cm
1255
1.0015
0.67
Basin of Attraction
ph,d
FRI(θ+
a )+ph,d
FRI(θ−
a )
2
ζm
FRI
ζ∗
FRI−ζm
FRI
ζ∗
FRI
ζM
FRI
ζM
FRI−ζ∗
FRI
ζ∗
FRI
−20.79 cm
204
86 %
2493
69 %
−20.3 cm
167
88 %
2436
72 %
−19.82 cm
132
90 %
2380
73 %
−19.35 cm
99
92 %
2280
74 %
−18.9 cm
68
94 %
2235
78 %
the rate of convergence to a periodic walking motion. In place of (10.74), let
uA = −κ2a(θa) + κ1a(θa)

χ(θa, ζa) + dζ∗
a(θa)
dθa

,
(11.35)
where σa is the angular momentum about the ankle in the fully actuated
phase, σ∗
a(θa) is the value of the angular momentum about the ankle on the
periodic orbit, ζa = σ2
a/2, ζ∗
a(θa) = (σ∗
a(θa))2 /2 and χ(θa, ζa) is to be deter-
mined. Note that with this choice of uA, (10.77b) becomes
d

ζa −ζ∗
a(θa)

dθa
= χ(θa, ζa),
(11.36)
and hence with appropriate choice of χ(θa, ζa), the error ζa −ζ∗
a(θa) will tend
to zero, yielding convergence to the periodic orbit.
Based on (11.4) and (11.35), χ can be related to the FRI position by an
expression of the form
χ(θa, ζa) = γ3(θa, ζa) + γ4(θa, ζa)ph
FRI
γ5(θa) + γ6(θa)ph
FRI
,
(11.37)
© 2007 by Taylor & Francis Group, LLC

Directly Controlling the Foot Rotation Indicator Point
357
from which it is possible to compute upper and lower bounds on χ(θa, ζa)
so that ph
FRI ∈(ph min
FRI , ph max
FRI
). Denote these bounds by χ(θa, ζa)min and
χ(θa, ζa)max, respectively. A linear controller with saturation would then be
an obvious candidate to speed up convergence to the periodic orbit while
maintaining the FRI point in a safe region to avoid foot rotation:
χ(θa, ζa) :=
⎧
⎪
⎨
⎪
⎩
χ(θa, ζa)max
if Kz(ζa −ζ∗
a(θa)) ≥χ(θa, ζa)max
χ(θa, ζa)min
if Kz(ζa −ζ∗
a(θa)) ≤χ(θa, ζa)min
Kz(ζa −ζ∗
a(θa))
otherwise,
(11.38)
though many other controllers suggest themselves as well.
11.6
Simulations
The ankle control law deﬁned by (11.35) and (11.38) was evaluated on the
reference trajectory described in Section 11.4.1.
The desired evolution of
σ∗
a(θa) is selected to be the periodic motion arising from the ankle control
strategy (11.8), with ph,d
FRI(θa) = −23 + 15 θa−θ+
a
θ−
a −θ+
a measured in units of cen-
timeters. In (11.38), the upper and lower bounds on the FRI point are taken
as ph min
FRI
= −26 cm and ph max
FRI
= −2 cm.
The evolution of the zero dynamics is shown in Fig. 11.8, in terms of the
variables (θa; ˙θa), for Kz = 4. For initial angular velocities varying from 0.7 to
3.2 rad/sec, the ﬁnal angular velocity is close to the desired periodic velocity,
which explains the relatively ﬂat portion of the Poincar´e map in Fig. 11.9.
The basin of attraction is larger (for lower velocities) than for the ﬁrst control
law, as can be seen in Fig. 11.9.
The action of the control strategy is more fully illustrated through the
evolution of ph
FRI for various initial velocities ˙θa in Fig. 11.10.
When the
actual motion of the biped is slower than the nominal motion, the position
of the FRI is moved backward to accelerate the motion until the limit ph min
FRI
is reached. When the actual motion of the biped is faster than the nominal
motion, the position of the FRI is moved forward to decelerate the motion
until the limit ph max
FRI
is reached.
The Poincar´e return map corresponding to the second control law is pre-
sented in the Fig. 11.9, along with the Poincar´e return map of the ﬁrst control
law. The second controller was designed to have the same ﬁxed point as the
ﬁrst controller. The diﬀerences in the performance of the two controllers are
clear: when the initial velocity is far from the ﬁxed point, the constraint on
ph
FRI limits the rate of convergence to the orbit so that it is compatible with
keeping the foot ﬂat on the ground, and when the initial velocity is near
the ﬁxed point, the saturated, high-gain linear control action enhances the
convergence rate.
© 2007 by Taylor & Francis Group, LLC

358
Feedback Control of Dynamic Bipedal Robot Locomotion
Assuming no modeling error and initializing the state of the robot oﬀthe
periodic orbit (with an initial velocity 47% higher than the periodic value),
the results of 10 walking steps of the robot are depicted in Fig. 11.11. The
convergence toward a periodic motion is observed, as shown for the trunk via
a phase plot in Fig. 11.11(a). The periodic motion is almost reached in two
steps. This convergence is also illustrated via the evolution of the position of
the FRI point with respect to time in Fig. 11.11(b). To decelerate the motion
over the ﬁrst step, the position of the FRI stays on the front limit ph max
FRI
.
For the ensuing steps, its evolution is linear from −0.23 m to −0.08 m, with
a behavior corresponding to the nominal periodic trajectory. Figure 11.11(c)
presents the evolution of ˙θa with respect to θa; it clearly converges to a periodic
motion.
In order to illustrate some robustness properties of this control law, the
same modeling errors as in Section 11.4.2 are used. A simulation of 10 walking
steps is presented in Fig. 11.12. The biped’s initial state is chosen to be 47%
higher than the ﬁxed point. The convergence toward a periodic motion is
illustrated via a phase-plane plot of the torso in Fig. 11.12(a); errors can be
observed at the impact times. Convergence toward a periodic motion is also
shown in Fig. 11.12(b) via the evolution of the FRI point with respect to time.
The evolution of the FRI point is diﬀerent than its nominal evolution even
though ˙θa nearly converges to the nominal motion by the end of the second
step, as shown in Fig. 11.12(c). In the presence of modeling error, the terms
χ(θa, ζa)min and χ(θa, ζa)max do not correspond exactly to ph
FRI = ph min
FRI
and
ph
FRI = ph max
FRI
, thus a safety margin must be taken into account to ensure
that the foot does not rotate: the values of ph min
FRI
and ph max
FRI
must be strictly
within the convex hull of the foot support region.
© 2007 by Taylor & Francis Group, LLC

Directly Controlling the Foot Rotation Indicator Point
359
1
1.02
1.04
-0.2
-0.1
0
0.1
0.2
0.3
-0.25
-0.2
-0.15
-0.1
-0.05
-0.2
-0.1
0
0.1
0.2
0.3
ph,d
FRI(θa)
δFRI(θa)2
θa
θa
δ2
FRI(θ−
a ) = 1.008,
(δFRI
FRI)2 = 0.6914,
δ2
FRI(θ−
a )(δFRI
FRI)2 = 0.692
(a)
0.85
0.9
0.95
1
-0.25
-0.2
-0.15
-0.1
-0.05
-0.2
-0.1
0
0.1
0.2
0.3
-0.2
-0.1
0
0.1
0.2
0.3
ph,d
FRI(θa)
δFRI(θa)2
θa
θa
δ2
FRI(θ−
a ) = 0.8869,
(δFRI
FRI)2 = 0.7299,
δ2
FRI(θ−
a )(δFRI
FRI)2 = 0.6474
(b)
0.9
0.95
1
1.05
-0.25
-0.2
-0.15
-0.1
-0.05
-0.2
-0.1
0
0.1
0.2
0.3
-0.2
-0.1
0
0.1
0.2
0.3
ph,d
FRI(θa)
δFRI(θa)2
θa
θa
δ2
FRI(θ−
a ) = 0.9249,
(δFRI
FRI)2 = 0.6914,
δ2
FRI(θ−
a )(δFRI
FRI)2 = 0.6395
(c)
Figure 11.7. The evolution of ph,d
FRI(θa) can be chosen in order to decrease
the value δFRI(θ−
a ) and to increases the convergence rate. In the ﬁrst case (top
pair), a linear evolution is considered as reference. In the second case (middle
pair), a parabolic evolution is chosen, and it is observed that even though
δFRI(θ−
a ) decreases, because δFRI
FRI increases, their product is only slightly de-
creased. The movement of the FRI point at the beginning of the step, from the
toe toward the heel, seems unnatural and ineﬃcient because δFRI
FRI increases.
This unnatural evolution of the FRI point is avoided in the third case (bot-
tom pair); the initial and ﬁnal values of ph,d
FRI(θa) are designed to be the same
as in the ﬁrst case, in order to have the same value for δFRI
FRI. The chosen
piecewise-linear evolution for ph,d
FRI(θa) does improve the convergence rate.
© 2007 by Taylor & Francis Group, LLC

360
Feedback Control of Dynamic Bipedal Robot Locomotion
˙θa (rad/sec)
θa (rad)
Figure 11.8. Evolution of the zero dynamics in its phase plane (θa; ˙θa), for
the control law (11.35)–(11.38). When ˙θa < 0, the robot is falling backward.
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
1.5
2
2.5
3
3.5
4
˙θ∗
a
ρa( ˙θ−
a )
˙θ−
a
Figure 11.9. Comparison of the Poincar´e maps for the two ankle control
laws of this chapter, presented in terms of ˙θa. The ﬁrst control law induces a
unform forward progression of the FRI point (the Poincar´e map is indicated
with a normal-weight line). The second control law actively varies the FRI
point in order to increase convergence rate, subject to the FRI point remaining
within predetermined bounds that guarantee nonrotation of the stance foot
(the Poincar´e map is indicated with a bold line). The identity map is indicated
with a dashed line. Units are rad/sec.
© 2007 by Taylor & Francis Group, LLC

Directly Controlling the Foot Rotation Indicator Point
361
0.1
0
0.05
0.25
0.15
0.2
ph
FRI (m)
θa (rad)
˙θ+
a = 3.1
˙θ+
a = 2.5
˙θ+
a = 1.9
˙θ+
a = 0.7
Figure 11.10. The evolution of the position of the FRI point for various
initial velocities ˙θa measured in rad/sec.
0.345
0.35
0.355
0.36
0.365
0.37
0.375
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
torso angular velocity
(rad/sec)
torso angle (rad)
(a)
0
1
2
3
4
5
0.25
0.2
0.15
0.1
0.05
0
t (sec)
ph
FRI (m)
(b)
0.2
0.1
0
0.1 0.2
0.3
1
1.2
1.4
1.6
1.8
2
θa (rad)
˙θa (rad/sec)
(c)
Figure 11.11.
As predicted by the Poincar´e map, the convergence to a
periodic motion is observed in simulation with the second control law, without
modeling error.
© 2007 by Taylor & Francis Group, LLC

362
Feedback Control of Dynamic Bipedal Robot Locomotion
0.345
0.35
0.355
0.36
0.365
0.37
0.375
0.4
0.3
0.2
0.1
0
0.1
0.2
0.3
torso angular velocity
(rad/sec)
torso angle (rad)
0.38
(a)
0
1
2
3
4
0.25
0.2
0.15
0.1
0.05
0
t (sec)
ph
FRI (m)
(b)
0.2
0.1
0
0.1 0.2
0.3
1
1.2
1.4
1.6
1.8
2
θa (rad)
˙θa (rad/sec)
(c)
Figure 11.12. The convergence toward a periodic motion is still observed in
simulation with the second control law, with modeling error.
© 2007 by Taylor & Francis Group, LLC

A
Getting Started
For those readers who do not wish to read the book from cover to cover, this
appendix summarizes two possible routes through the material. In the ﬁrst
case, it is assumed that the reader is a graduate student and the objective is to
master the essentials of Chapter 3 through Chapter 6, with the presumption
that once this material is assimilated, the remaining chapters should not be
overly diﬃcult.
This program is based on our experience in teaching this
material.
In the second case, the reader is assumed to be a professional
researcher and the objective is to ascertain if the methods of this book have
anything to oﬀer an existing biped project. Here, we can only suggest what we
would try if we were brought into the project. Our suggestions are untested
and may be naive.
A.1
Graduate Student
A detailed program is provided for working through the ﬁrst half of the book.
The initial steps are quite detailed in order to assure success. Subsequent
steps demand progressively more initiative from the student. The philosophy
is to work through the book with an example at hand because most of the
notions are more manageable when reduced to special cases.
1. There are two rather simple models treated in the text.
(a) A two-link walker (a.k.a. the Acrobot or the compass biped) is
given in Section 3.4.6.1. This robot has two legs without knees or
feet. The legs are connected at a point called a hip. The robot
does not have a torso. There is one actuator to control the angle
between the two legs.
(b) A three-link walker is given in Section 3.4.6.2. This robot is the
two-link walker with the addition of a torso attached at the hip.
Two actuators are used to control the relative angles between the
torso and each leg. Because the position of the COM can be varied
by changing the lean angle of the torso, it is easier to vary the walk-
ing speed of this robot than the two-link robot. Because the robot
363
© 2007 by Taylor & Francis Group, LLC

364
Feedback Control of Dynamic Bipedal Robot Locomotion
has two actuators, it is more representative of the multivariable
feedback control designs used for more general robots.
(c) It will be assumed in the following that the reader uses the three-
link walker for all of the examples. However, whenever a particular
step presents diﬃculties, it is suggested to return to the two-link
robot and work out the diﬃculties there before returning to the
three-link robot. Numerous graduate students have succeeded in
getting the three-link robot to walk, using the parameter values
and controllers suggested in the book. When things don’t work,
the ﬁrst place to look is your own code!
2. As needed, review Lagrange’s method for obtaining the equations of
motion for a planar mechanical system comprised of rigid links and
revolute joints; see Appendix B.4.
3. Use Lagrange’s method to derive the equations of motion of the three-
link robot in single support.
First use the absolute coordinates of
Fig. 3.5-(a). Then derive the equations of motion in the coordinates
of Fig. 3.5-(b), using ﬁrst the method of Lagrange, and then, starting
with the model in the coordinates of Fig. 3.5-(a), re-derive the dynamic
model using the coordinate transformations given in (3.72) and (3.73).
While all of this can be done by hand, it will be very tedious. It is
suggested to use a symbolic manipulation package. This becomes more
crucial at each successive step of working one’s way through the book.
4. Derive the impact model. Initially, it is enough to do this in the coordi-
nates of Fig. 3.5-(a). Before including leg swapping, set the parameter
values as in Table 3.2 and verify that when
⎡
⎢⎣
θ1
θ2
θ3
⎤
⎥⎦=
⎡
⎢⎣
π/8
−π/8
π/6
⎤
⎥⎦,
the impact model transforms the velocity vector as follows
⎡
⎢⎣
˙θ1
˙θ2
˙θ3
⎤
⎥⎦=
⎡
⎢⎣
1.5
−1.5
0
⎤
⎥⎦→
⎡
⎢⎣
−0.258
0.878
1.905
⎤
⎥⎦.
After leg swapping has been included in the impact model, verify that
⎡
⎢⎣
θ1
θ2
θ3
⎤
⎥⎦=
⎡
⎢⎣
π/8
−π/8
π/6
⎤
⎥⎦→
⎡
⎢⎣
−π/8
π/8
π/6
⎤
⎥⎦,
© 2007 by Taylor & Francis Group, LLC

Getting Started
365
and
⎡
⎢⎣
˙θ1
˙θ2
˙θ3
⎤
⎥⎦=
⎡
⎢⎣
−0.258
0.878
1.905
⎤
⎥⎦→
⎡
⎢⎣
0.878
−0.258
1.905
⎤
⎥⎦.
This will provide conﬁdence that the impact model has been correctly
computed.
5. It is now important to simulate the hybrid model, (3.30). This is most
easily done when the system is under closed-loop control. With this
in mind, read Section 6.6.1. Before doing anything, it is important to
understand the issue of leg scuﬃng in walking models without knees;
refer, as necessary, to the literature in order to become comfortable
with this issue. The impact or switching surface is deﬁned in (6.88) and
a simple feedback law is presented in (6.90) and (6.101). Note that the
necessary background in order to understand the Lie drivative notation
is given in Appendix B; see in particular Deﬁnition B.7 and the deﬁnition
of the decoupling matrix in (B.70). Applying the feedback (6.90) with
the suggested parameter values and with the initial conditions
⎡
⎢⎣
θ1
θ2
θ3
⎤
⎥⎦=
⎡
⎢⎣
π/8
−π/8
π/6
⎤
⎥⎦
and
⎡
⎢⎣
˙θ1
˙θ2
˙θ3
⎤
⎥⎦=
⎡
⎢⎣
1.60
−1.60
0
⎤
⎥⎦
(end of step),
or, equivalently,
⎡
⎢⎣
θ1
θ2
θ3
⎤
⎥⎦=
⎡
⎢⎣
−π/8
π/8
π/6
⎤
⎥⎦
and
⎡
⎢⎣
˙θ1
˙θ2
˙θ3
⎤
⎥⎦=
⎡
⎢⎣
0.94
−0.28
2.04
⎤
⎥⎦
(start of step)
will quickly converge to a periodic solution. It is a good idea to do a
stick ﬁgure animation of the motion in addition to looking at angular
position and velocity traces. Using trial and error, explore the basin of
attraction of the controller. Compute the contact forces at the stance
foot during the swing phase and compute the impulsive forces at impact.
6. Optional (easy):
Apply an input-output linearizing controller as in
(5.96) and repeat the above. Explore the eﬀects of varying the pro-
portional and derivative gains.
7. Return to Chapter 3 and read Section 3.1 through Section 3.4.6. Scan
the informal treatment of the method of Poincar´e return maps given
4.4. Apply Theorem 4.4 to the three-link model in closed loop with the
feedback (6.101). Verify that the ﬁxed point of the restricted Poincar´e
map correctly identiﬁes the periodic orbit.
© 2007 by Taylor & Francis Group, LLC
in Appendix B.3. With this as background, read Sections 4.1, 4.2, and

366
Feedback Control of Dynamic Bipedal Robot Locomotion
8. Optional (challenging):
Apply Corollary 4.1 to the three-link robot
model in closed loop with an input-output linearizing controller.
It
will be necessary to numerically evaluate the Poincar´e ﬁrst return map,
P : S →S. More precisely, using symmetric diﬀerences, estimate the
Jacobian of the Poincar´e map and compute its eigenvalues. It may be
wise to gain experience on the two-link model walking on a shallow slope
and with the control set to zero. Armed with this experience, estimating
the Jacobian of the Poincar´e map for the three-link walker will be easier.
In order to apply Corollary 4.1, it is easier to “estimate” the Jacobian as
a 6×6 matrix instead of a 5×5 matrix; see [173] in order to understand
this better and for help on interpreting the results. In the above, you
have probably taken advantage of the fact that you already knew the
ﬁxed point of the Poincar´e map. If so, try to ﬁnd the ﬁxed point using
the Poincar´e map and without using your a priori knowledge of the ﬁxed
point; hints on how to do this are available in the literature. Based on
analyzing the Jacobian of the Poincar´e map, ﬁnd a value of ϵ in (5.96)
for which the closed-loop system no longer has a stable periodic orbit.
9. It is now time to move on to the hybrid zero dynamics. Read Chapter 5,
tails of the examples in Sections 5.1.1 and 5.1.2. Then read Section 6.4,
which presents results on the hybrid zero dynamics when the output
is specialized to a simpliﬁed form. The next objective is to obtain for
the three-link robot an output in the form (6.60) that will satisfy all of
the hypotheses of Theorem 5.1. This will be accomplished using Theo-
rem 6.2. Implement a feedback controller based on the outputs given in
(6.108) and the optimized parameter values given in Table 6.2. You will
notice that less torque is required. Run the simulation long enough so
that the periodic orbit is well identiﬁed. Over the periodic orbit, record
the conﬁguration variables, θ1, θ2, and θ3, and the torques u1 and u2.
Referring to Fig. 3.5 and (3.73), determine q1 and q2 on the orbit and
plot them versus θ1. For each of q1 and q2, regress a seventh-degree poly-
nomial hd,i(θ1) against θ1 so that on the periodic orbit, q1 −hd,1(θ1) ≡0
and q2 −hd,2(θ1) ≡0. To the extent that your regression “accurately”
represents the functional dependence of q1 and q2 on θ1 along the peri-
odic orbit, Theorem 6.2 guarantees that the output
y1 = q1 −hd,1(θ1)
(A.1a)
y2 = q2 −hd,2(θ1)
(A.1b)
will yield a hybrid zero dynamics. Note that in the θ-coordinates, the
output is
y1 = θ1 −θ3 + π −hd,1(θ1)
(A.2a)
y2 = θ2 −θ3 + π −hd,2(θ1).
(A.2b)
© 2007 by Taylor & Francis Group, LLC
with referral as necessary to Appendix B.2. Be sure to work out the de-

Getting Started
367
Compute the swing phase zero dynamics, following either the procedure
suggested in Section 5.2 or Section 6.4 (you may ﬁnd this easier to do
in the coordinates of Fig. 3.5-(b)). Then determine δzero per (5.67) or
(6.81), or directly from the periodic orbit using (6.84) (see the proof
of Theorem 6.2). The functions κ1 and κ2 in (5.47) will appear very
complicated when computed symbolically; it is suggested to plot them
versus θ1 to understand better their structure. It is important to observe
that the swing phase zero dynamics can be computed without inverting
the inertia matrix or the decoupling matrix.
10. Once the hybrid zero dynamics has been determined, compute its solu-
tions via simulation and map them onto solutions of the full-dimensional
model via qi = hd,i(θ1), ˙qi =
dhd,i(θ1)
dθ1
˙θ1, for i = 1, 2 and u = u∗in
(5.35). If the regression was done well, on the periodic orbit, u∗should
be (nearly) equal to the torque that you recorded in Step 9, based on
the outputs given in (6.108). Determine the Poincar´e map of the hybrid
zero dynamics and compare it to the result obtained by applying Theo-
rem 4.4, just as you did in Step 7; because the zero dynamics model is
invariant for the closed-loop system, it will not matter whether you are
applying a feedback of the form (5.95) or (5.96). Compute the equivalent
of Fig. 6.7. Verify Theorem 5.5 through a simulation study.
11. The exercises so far have provided you with some facility in computing
the hybrid zero dynamics and in interpreting what the various terms
mean. Fundamentally, up to this point, however, your ability to control
the robot has not been advanced through the use of the hybrid zero
dynamics.
The objective of the next two steps is to understand the
power of this approach.
12. Consider again the outputs given in (6.108), but this time, do not plug
in the parameters of Table 6.2. Instead, compute a feedback controller
of the form (5.95) or (5.96) as a function of the parameters in the output
(6.108). Set up a cost function similar to (6.43) and use a parameter op-
timization algorithm to minimize the cost function along a periodic orbit
of the closed-loop system, subject to the robot walking no slower than
it does with the optimized parameters of Table 6.2. Note that you will
be obliged to compute solutions using the full-(six)-dimensional model.
Note also that for each new value of the parameters, ﬁnding a periodic
orbit is time consuming. Initialize your search from the “original values”
given in Table 6.2. Be prepared for a lot of frustration.
13. This time, apply the approach of Sections 6.1–6.3. Follow the example
in Section 6.6.2. It is suggested to initialize the coeﬃcients of the B´ezier
polynomials so that the output “approximates” (6.90) away from the
endpoints of the step. This time you will be computing solutions with a
© 2007 by Taylor & Francis Group, LLC

368
Feedback Control of Dynamic Bipedal Robot Locomotion
two-dimensional model. In addition, for a given parameter value, deter-
mining if a periodic orbit exists is very straightforward; see Theorem 5.3.
This completes the introduction to Chapters 4–6.
14. (Optional) Design an event-based controller that uses the torso lean
angle to regulate the walking speed.
A.2
Professional Researcher
It is assumed that the reader has a planar bipedal robot on which he wishes
to evaluate the methods of this book. It will be assumed initially that the
robot does not have feet; comments on the case of robots with feet will be
made toward the end of the section. Two general cases will be considered:
1. The reader has already a controller that induces an acceptable stable,
periodic walking gait. The objective is therefore to improve the eﬃciency
or robustness of the gait.
2. The reader does not have a controller that induces a walking gait. The
design of a controller must therefore start from scratch.
In order to guarantee that the methods of the book will produce a feedback
controller resulting in a stable walking gait for a robot without feet, the robot
needs to satisfy hypotheses HR1–HR5 of Section 3.2. The desired gait of the
robot needs to satisfy HGW1–HGW7 of Section 3.2. For a robot with feet,
the hypotheses are given in Chapters 10 and 11. A key assumption in each
case is that the double support phase is essentially instantaneous. To have an
idea of just how closely all of these conditions must be met in practice, read
about the bipedal robots RABBIT and ERNIE in Chapters 2 and 8.
A.2.1
Reader Already Has a Stabilizing Controller
The objective here is to take advantage of the fact that a stable walking gait
is already available in order to short cut the design process of the virtual
constraints. Indeed, the initial controller will not be determined analytically,
as in Sections 6.1–6.3. Instead, an existing walking motion of the robot will
be used to generate numerically a set of virtual constraints that will be used
for feedback control, as in Section 6.5, similar to the ﬁrst example of Sec-
tion 6.6.3.2. This short cut will permit the reader to experiment with the
methods of this book with the least amount of initial eﬀort.
1. Read Sections 1.4, 5.1.2, and 6.6.1 in order to learn about the concept
of virtual constraints and how the notion of using feedback to impose
© 2007 by Taylor & Francis Group, LLC

Getting Started
369
0
20
40
60
80
100
Gait Cycle (percent)
60
0
80
Joint Angles (deg)
0
Hip
Knee
DS
SS
SS
Step
DS
DS
Step
Figure A.1. Joint angles for a four-link walker over a complete gait cycle,
that is, two steps. The gait cycle consists of two phases each of double support
(DS) and single support (SS). Depicted are the relative hip angle and the knee
angle of the leg drawn in white. The ﬁrst single support phase can be thought
of as a graph of (A.3) for the relative angles of the hip and knee during the
swing phase, and the second single support phase is a graph of (A.3) for the
relative angles of the hip and knee during the stance phase. The angle θ in
(A.3) can be taken as the angle of the hip with respect to the ground contact
point of the stance leg.
virtual constraints leads to the design of feedback controllers for sta-
ble walking gaits. The underlying idea is that any attempt to describe
walking, even something as simple as the diﬀerence between human-like
walking (knees bent forward) and bird-like walking (knees bent back-
ward), inevitably leads to a description of the posture or shape of the
robot over a step.
In other words, a description of walking involves
at least a partial speciﬁcation of the path followed in the conﬁguration
space of the biped; see Fig. A.1. To express this mathematically, let
qb = (q1; · · · ; qN−1) be a set of body coordinates for the robot and let
θ be the angle of some point of the robot with respect to an inertial
frame, and assume moreover that θ has been chosen so that it is strictly
monotonic throughout the step.
Then the path of the robot in the
conﬁguration space can be expressed as
0 = qb −hd(θ).
(A.3)
© 2007 by Taylor & Francis Group, LLC

370
Feedback Control of Dynamic Bipedal Robot Locomotion
A natural objective is therefore: determine a feedback controller that
drives asymptotically to zero the output function
y = h(q) := qb −hd(θ).
(A.4)
The relation (A.3) is called a virtual constraint because it is being im-
posed by feedback; see again Section 1.4. For reassurance that a rela-
tively simple feedback controller can often be used to (approximately)
impose the virtual constraints, see Section 8.2.
2. It is suggested to assign body coordinates as the relative angles of the
actuated joints; see Fig. 3.6-(a). Determine a variable θ(q) that can be
used to parameterize the position of the robot within a step; θ must be
strictly monotonic over a step, and thus, after scaling, it can be used as
the horizontal-axis in Fig. A.1. Typically, θ would be synthesized from
angular measurements, an inclinometer, or a combination of these; see
Figs. 3.6 and 6.13(b) for possible choices of θ.
3. Using your existing controller, put your biped into a periodic walking
motion and record the values of qb and θ over several cycles (optionally,
record the torque commands u as well). Then, take the data and form
a plot analogous to Fig. A.1. Use regression and your favorite set of
regressors (such as polynomials) to determine virtual constraints as in
(A.3); an alternative approach using splines is explained in Section 6.5.
(Optionally, apply the same technique to determine the nominal torque
commands over a periodic orbit, unom(θ).) In the book, it has been
assumed that the robot is symmetric, that is, the “left” and “right”
legs are identical to one another. In this case, it is only necessary to
determine the virtual constraints over a single step, with say the left
leg as the stance leg, and use coordinate relabeling to determine the
virtual constraints when the right leg is the stance leg. If your robot has
asymmetry, then you need to determine two sets of virtual constraints,
one for each leg as the stance leg. In principle, diﬀerent functions θ can
be used for each set of constraints.
4. If your current control system consists of decentralized PD controllers
at the joints set up to do tracking of time-based trajectories, then the
virtual constraints can be imposed as in (8.15), where e = y; in other
words, a decentralized PD-controller, “tracking-based” architecture can
be maintained:
u = −KP y −KD ˙y + optional friction compensation,
(A.5)
or,
u = unom(θ) −KP y −KD ˙y + optional friction compensation.
(A.6)
© 2007 by Taylor & Francis Group, LLC

Getting Started
371
Note that a ﬁnite state machine is needed to keep track of which leg is
in stance and therefore which set of virtual constraints is to be applied
on the left and right legs. Tuning the PD-gains such that the virtual
constraints are well applied while avoiding resonances in the drivetrain
can be challenging.1 It is assumed that the user will already have in
place safety mechanisms of the type discussed in Chapter 8. These are
crucial.
Remark A.1 (Closed-Loop Stability)
Theorem 6.2 and (6.78)–
(6.81) imply that, as long as the virtual constraints are well imposed,2
the closed-loop system will have an exponentially stable periodic orbit
if, and only if, the vertical component of the velocity of the center of
mass of the robot is negative just before impact. The latter is solely a
property of the user’s nominal periodic orbit that was used in building
the virtual constraints.
5. The eﬀectiveness of (A.5) or (A.6) in applying the virtual constraints
can be tested by rocking the robot back and forth on the stance leg and
noting that the swing leg moves forward and retracts as appropriate.
The correctness of the ﬁnite state machine can be tested by guiding
the robot through a few steps, forward and backward, and noting that
leg exchange takes place properly; see videos at [239, 240]. A walking
experiment can be initiated by pushing the robot forward with enough
initial velocity that it enters the basin of attraction of the controller.
Alternatively, the user’s existing controller can be used and when the
robot is near the nominal periodic orbit, switch to the virtual constraint-
based controller.
6. If the robot has a torso, then it is relatively easy to alter the position of
the center of mass of the robot over a step without altering the relative
posture of the legs. In this case, event-based PI control can be easily
implemented to vary the walking speed of the robot; see Chapter 7 and
Experiment 4 on RABBIT in Section 8.3.1.2.
7. If the user can produce nominal walking gaits of several diﬀerent speeds,
it is easy to design virtual constraint-based controllers and switch among
them. For this, it is best if B´ezier polynomials were used as the regressors
1As an alternative to a PD-controller, see (5.96); its computation requires the use of a
model.
2For virtual constraints computed on the basis of predetermined periodic orbits, the associ-
ated decoupling matrix will be invertible on the periodic as long as the angular momentum
of the robot about the stance leg end is nonzero on the periodic orbit; see the proof of
Theorem 6.2.
© 2007 by Taylor & Francis Group, LLC

372
Feedback Control of Dynamic Bipedal Robot Locomotion
when building the virtual constraints; see Section 7.2 and Experiment
3 on RABBIT in Section 8.3.1.2.
8. Sections 6.5.2 and 6.6.3.2 illustrate how to take an initial controller
based on virtual constraints and modify it in order to improve the gait
(in the example, a gait designed to work on a downward slope was
modiﬁed to work on ﬂat ground). The same idea can be used to improve
energy eﬃciency, for example, or to reduce peak torque requirements.
In principle, carrying this out requires a good model of the robot, but
it may be possible to use reinforcement learning to tune the parameters
in an augmentation function online [227].
A.2.2
Controller Design Must Start from Scratch
When constructing the robot, the reader may have veriﬁed that periodic walk-
ing motions existed which respect the power limitations of the actuators and
the workspace constraints of the mechanism. If so, the reader may use one
of the previously computed periodic walking motions and essentially repeat
the steps of Section A.2.1. Otherwise, it is suggested that the reader work
through (an abridged version of) Section A.1, skipping those exercises that
pertain to skills that the reader has already mastered through past experi-
ence. Even for robots of the complexity of RABBIT and ERNIE, the authors
found it essential to have worked through simpler examples before tackling
these bipeds.
A.2.3
Walking with Feet
This section suggests modiﬁcations to Section A.2.1 to take into account the
presence of feet. For simplicity, it is assumed that ﬂat-footed walking is de-
sired, though walking with foot rotation is treated thoroughly in Chapters 10
and 11.
1. The ankle control strategy of Section 10.4.2 can be very easily imple-
mented. Using the reader’s existing controller, record the torque of the
stance ankle over a periodic walking cycle and regress it against θ to de-
termine uA(θ). All other joints are treated as in Step 3 of Section A.2.1,
including the ankle of the swing leg.
The controller is implemented
as in Step 4 of Section A.2.1, with the stance ankle torque set equal to
uA(θ). If the CoP (equivalently, ZMP or FRI point) is strictly within
the foot support region on the periodic orbit used for building the vir-
tual constraints, then the stability analysis of Remark A.1 still applies;
see Corollary 10.1. The remaining steps of Section A.2.1 can be carried
out with no signiﬁcant changes.
2. If force sensors or some other means is available to estimate the CoP of
the stance foot, equivalently, the ZMP or FRI point, then the control law
© 2007 by Taylor & Francis Group, LLC

Getting Started
373
of Section 11.2 can be applied. Using the reader’s existing controller,
record the FRI position (optionally, the torque as well) of the stance
ankle over a periodic walking cycle and regress it against θ to determine
ph,d
FRI(θ) (optionally, uA(θ) as well). All other joints are treated as in Step
3 of Section A.2.1, including the ankle of the swing leg. The controller is
implemented as in Step 4 of Section A.2.1, with the stance ankle torque
set equal to
uA = −KP

ph
FRI −ph,d
FRI(θ)

+ optional friction compensation,
(A.7)
or,
u = unom
A
(θ) −KP

ph
FRI −ph,d
FRI(θ)

+ optional friction compensation.
(A.8)
If the CoP (equivalently, ZMP or FRI point) is strictly within the foot
support region on the periodic orbit used for building the virtual con-
straints, then the stability analysis of Remark A.1 still applies; see Corol-
lary 11.1. The remaining steps of Section A.2.1 can be carried out with
no signiﬁcant changes.
A.2.4
3D Robot
The extension of the work presented in the book to 3D robots is an open issue.
Some nice results have been reported in [80], where, using the notion of virtual
constraints and zero dynamics (called interlocking dynamics in their paper),
the control of a 3D mechanism has been demonstrated experimentally. In
addition, we can report that Prof. Ching-Long Shih, Department of Electrical
Engineering, National Taiwan University of Science and Technology, spent six
months as a visiting professor at the University of Michigan. After working
through the program suggested in Section A.1, he applied the method of
virtual constraint-based control to a 30 cm tall 3D robot with feet. He was
able to obtain stable walking with about two weeks of eﬀort. This work is not
yet published.
© 2007 by Taylor & Francis Group, LLC


B
Essential Technical Background
This appendix provides background information on various aspects of me-
chanics and nonlinear control. The level of presentation is elementary, and
in some sense the material here serves primarily to establish a common vo-
cabulary. The reader will ﬁnd material on diﬀerential geometry (embedded
manifolds, coordinate charts, diﬀeomorphisms, tangent spaces, vector ﬁelds,
invariant manifolds, restriction dynamics, Lie derivatives, Lie brackets, invo-
lutive distributions), geometric nonlinear control (relative degrees, decoupling
matrices, zero dynamics, I-O linearization), the method of Poincar´e sections
(periodic orbits, transversal sections, Poincar´e maps, ﬁxed points), and La-
grangian mechanics in the plane (kinematic chains, absolute and relative an-
gles, generalized coordinates, potential energy and kinetic energy, linear and
angular momentum, Lagrange-Euler equation). Our modest objective is make
the book more widely accessible, knowing that it will not be self-contained.
The End Notes provide references for further reading.
A brief comment on notation is in order before beginning the overview.
Traditionally, coordinates on a smooth surface are expressed as n-tuples of
scalars (x1, x2, · · · , xn), with xi ∈R, and whenever necessary, the n-tuple is
identiﬁed with the column vector
⎡
⎢⎢⎢⎢⎣
x1
x2
...
xn
⎤
⎥⎥⎥⎥⎦
(B.1)
in order to write down a diﬀerential equation or to perform operations such as
elsewhere in the appendix and the book, coordinates are immediately identi-
ﬁed with the column vector (B.1) and written in-line as (x1; x2; · · · ; xn). See
also the remarks in Section 3.3. The arguments of a multivariable function
will continue to be separated by a comma.
375
© 2007 by Taylor & Francis Group, LLC
the chain rule in vector form. Tradition will be respected in Appendix B.1, but

376
Feedback Control of Dynamic Bipedal Robot Locomotion
B.1
Smooth Surfaces and Associated Notions
The objective of this section is to provide an elementary introduction to a
few concepts in diﬀerential geometry. For the purposes of this book, it is
enough to identify smooth manifolds with smooth surfaces in Rn, and with
this in mind, we will take a simpliﬁed1 approach to the subject based on
level sets of smooth functions from Rn to Rn−m.
It is assumed that the
reader is familiar with the concepts of open and closed sets, continuity, and
diﬀerentiability, all in Rn. The topics covered are embedded submanifolds,
coordinate charts, diﬀeomorphisms, tangent spaces, vector ﬁelds on manifolds,
invariant submanifolds, restriction dynamics, Lie derivatives, Lie brackets,
and involutive distributions.
B.1.1
Manifolds and Embedded Submanifolds
The idea of an m-dimensional manifold is to deﬁne an object that locally looks
like an open subset of Rm and its local pieces can be glued together smoothly.
The model to have in mind is an idealized representation of the surface of the
earth as a sphere, which when viewed locally, is indistinguishable from R2.
We begin by deﬁning the notion of a “smooth surface” in Rn. Let ||·|| be any
norm on Rn, such as the Euclidean norm, and let Br(p) denote the open ball
of radius r centered at p, namely, the set {x ∈Rn | ||x −p|| < r}.
Deﬁnition B.1 (Embedded submanifold of Rn)
Let M be a nonempty
subset of Rn and let 1 ≤m ≤n and k ≥1. M is an m-dimensional, Ck-
embedded submanifold of Rn if ∀p ∈M there exists r > 0 and a function
F : Br(p) →Rn−m such that
1. M ∩Br(p) = {x ∈Br(p) | F(x) = 0},
2. F is k-times diﬀerentiable, and
3. ∀¯x ∈M ∩Br(p), rank ∂F
∂x
&&&&
¯x
= n −m.
1A more correct treatment of the concept of a diﬀerentiable manifold and its attendant
structures is based on the concept of an atlas of coordinate charts and requires basic no-
tions of topology, namely, homeomorphisms and Hausdorﬀspaces.
We will avoid these
complications by working with smooth surfaces in Rn. In places, our development is not
as coherent as the traditional approach. The interested reader can see the End Notes for
references to a mathematically detailed approach to the subject.
© 2007 by Taylor & Francis Group, LLC

Essential Technical Background
377
S1
x1
x2
p
Figure B.1. The unit circle embedded in R2.
The degree of smoothness is determined by k. If the function F is inﬁnitely
diﬀerentiable at points of M , then one commonly says that the submanifold
is smooth, though sometimes this just means that it is Ck for some k ≥1.
Example B.1 (Unit circle embedded in R2)
The circle of radius one, S1 (see Fig. B.1), is a 1-dimensional smooth embedded
submanifold of R2. To show this, let F : R2 →R by
F(x1, x2) = x2
1 + x2
2 −1.
(B.2)
Verifying the ﬁrst two parts of Deﬁnition B.1 is trivial since F is clearly
inﬁnitely diﬀerentiable, and S1 is equal to the set of points where F vanishes.
To verify the rank condition speciﬁed in the third part of the deﬁnition, note
that for (¯x1, ¯x2) ∈S1, rank (∂F/∂x)|(¯x1,¯x2) = rank
2¯x1 2¯x2

= 1, because
(¯x1, ¯x2) ∈S1 implies at least one of ¯x1 and ¯x2 is nonzero.
Remark B.1
One of the drawbacks of the simpliﬁed approach we are taking
to deﬁning a manifold is that it is not clear that a manifold can be deﬁned
in an intrinsic manner independent of the particular embedding into Rn, for
some n. For example, the unit circle could also be viewed as an 1-dimensional
smooth embedded submanifold of R3 by choosing
F(x1, x2, x3) =

x2
1 + x2
2 + x2
3 −1
x1

,
(B.3)
which leads one to wonder if a unit circle in R2 is intrinsically diﬀerent from
a unit circle in R3, or R17 for that matter? The answer is no and the develop-
ment of the deﬁnition of a manifold in terms of coordinate atlases eliminates
any such doubts. On the other hand, a famous theorem from the 1930s due to
Whitney states that every m-dimensional manifold can be embedded in Rn,
for some n ≤2m + 1. Hence, the simpliﬁed deﬁnition we have given does not
exclude any manifolds.
© 2007 by Taylor & Francis Group, LLC

378
Feedback Control of Dynamic Bipedal Robot Locomotion
For the purposes of this book, the terms manifold and embedded submanifold
of Rn are taken to be synonymous. That is, a set M is an m-dimensional Ck-
manifold if for some n, it is an m-dimensional, Ck-embedded submanifold of
Rn. By taking F in Deﬁnition B.1 to be identically zero, we trivially have that
Rn is a smooth n-dimensional submanifold of itself, and hence is a smooth
n-dimensional manifold. More generally, any open subset of Rn is a smooth n-
dimensional manifold. Other common examples include circles, spheres, and
tori. A set consisting of isolated points2 in Rn for some n ≥1, will be called
a zero-dimensional manifold. Consistent with this deﬁnition of a manifold,
M, we can formally deﬁne an embedded submanifold of M in the following
manner.
Deﬁnition B.2 (Embedded submanifold)
Let M be m-dimensional,
Ck-manifold of Rn, with r > 0 and F : Br(p) →Rn−m satisfying the condi-
tions of Deﬁnition B.1. A nonempty subset ˜
N ⊂M is a Ck ˜n-dimensional
embedded submanifold of M if ∀p ∈˜N there exists ˜r > 0 and a function
˜F : B˜r(p) →Rm−˜n such that
1.
˜N ∩B˜r(p) = {x ∈M ∩B˜r(p) | ˜F(x) = 0},
2. ˜F is k-times diﬀerentiable, and
3. ∀˜x ∈˜N ∩B˜r(p),
rank
⎡
⎣
∂F
∂x
&&
˜x
∂˜
F
∂x
&&&
˜x
⎤
⎦= n −˜n.
(B.4)
Remark B.2
With this deﬁnition, the unit circle is easily shown to be an
embedded submanifold of the unit sphere.
B.1.2
Local Coordinates and Smooth Functions
It is convenient to locally parameterize points in an m-dimensional manifold
by a list of m numbers, called local coordinates. Let M be an m-dimensional
Ck-embedded submanifold of Rn and let p ∈M. Suppose that r > 0 and F :
Br(p) →Rn−m satisfy the conditions of Deﬁnition B.1. Let (x1, x2, . . . , xn)
2A collection of points in A ⊂Rn is isolated if there exists ϵ > 0 such that for every pair of
points p, q ∈A, Bϵ(p) ∩Bϵ(q) = ∅.
© 2007 by Taylor & Francis Group, LLC

Essential Technical Background
379
be a set of coordinates on Rn, and without loss of generality, suppose that
rank
⎡
⎢⎢⎢⎣
∂F1(p)
∂xm+1
∂F1(p)
∂xm+2
. . .
∂F1(p)
∂xn
...
...
. . .
...
∂Fn−m(p)
∂xm+1
∂Fn−m(p)
∂xm+2
. . . ∂Fn−m(p)
∂xn
⎤
⎥⎥⎥⎦= n −m
(B.5)
By the Implicit Function Theorem [127], there exist 0 < ¯r ≤r and Ck func-
tions gi(x1, x2, . . . , xm), m+1 ≤i ≤n, such that for (x1, x2, . . . , xn) ∈B¯r(p),
F(x1, . . . , xm, gm+1(x1, . . . , xm), . . . , gn(x1, . . . , xm)) = 0.
(B.6)
It follows that
M ∩B¯r(p) = {(x1, x2, . . . , xn) ∈B¯r(p) |
xm+1 = gm+1(x1, . . . , xm), . . . , xn = gn(x1, . . . , xm)},
(B.7)
and hence points in M are locally parameterized by (x1, . . . , xm). The m-
tuple (x1, . . . , xm) is called at set of local coordinates for M, and the pair
((x1, . . . , xm), B¯r(p) ∩M) is called a local coordinate chart for M. More gen-
erally, a set of m Ck-functions λi : B¯r(p) →R, 1 ≤i ≤m, such that
rank
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
∂λ1(p)
∂x1
. . .
∂λ1(p)
∂xn
...
...
∂λm(p)
∂x1
. . .
∂λm(p)
∂xn
∂F1(p)
∂x1
. . .
∂F1(p)
∂xn
...
...
∂Fn−m(p)
∂x1
. . . ∂Fn−m(p)
∂xn
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
= n
(B.8)
deﬁne local coordinates on M. Indeed, the rank condition (B.8) guarantees
that
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
˜x1
...
˜xm
˜xm+1
...
˜xn
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
=
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
λ1(x)
...
λm(x)
F1(x)
...
Fn−m(x)
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
(B.9)
deﬁne a set of local coordinates on Rn about p. In these coordinates, (B.5)
holds, which yields
M ∩B˜r(p) = {(˜x1, ˜x2, . . . , ˜xn) ∈B˜r(p) | ˜xm+1 = 0, . . . , ˜xn = 0},
(B.10)
© 2007 by Taylor & Francis Group, LLC

380
Feedback Control of Dynamic Bipedal Robot Locomotion
and hence the m-tuple (˜x1 = λ1, . . . , ˜xm = λm) parameterizes M.
Example B.2 (Coordinates on the circle embedded in R2)
Continuing Example B.1, let p = (0, 1), let ||(x1, x2)|| = max{|x1|, |x2|} be
the max-norm, and take r = 1. Then an easy calculation gives that
S1 ∩Br(p) = {(x1, x2), ∈Br(p) | x2 =
6
1 −x2
1}
(B.11a)
= {(x1, x2) ∈R2 | |x1| < 1, x2 =
6
1 −x2
1},
(B.11b)
and hence in a neighborhood of p = (0, 1), (x1, S1∩Br(p)) is a local coordinate
chart on S1. For p = (−1, 0), we have
S1 ∩Br(p) = {(x1, x2), ∈Br(p) | x1 = −
6
1 −x2
2}
(B.12a)
= {(x1, x2) ∈R2 | |x2| < 1, x1 = −
6
1 −x2
2},
(B.12b)
and hence in a neighborhood of p = (−1, 0), (x2, S1 ∩Br(p)) is a local coor-
dinate chart on S1.
Let M1 and M2 be embedded submanifolds of Rn1 and Rn2, respectively.
A function γ : M1 →M2 is Ck at p ∈M1 if it is the local restriction of
a function from Rn1 to Rn2 which is Ck at p; that is, there exists r > 0
and ˆγ : Br(p) →Rn2 such that ∀x ∈Br(p), γ(x) = ˆγ(x), and ˆγ is k-times
continuously diﬀerentiable at p. It follows that γ : M1 →M2 is Ck at p if its
representation in local coordinates is Ck at p, that is, if for each p ∈M, and
local coordinate chart ((x1, . . . , xm1), M1 ∩B¯r1(p)) and ((x1, . . . , xm2), M2 ∩
B¯r2(γ(p))), γ(x1, . . . , xm1) is Ck.
γ : M1 →M2 is a Ck-diﬀeomorphism if it is invertible (i.e., one-to-one
and onto) and both γ and γ−1 are Ck.
Two manifolds M1 and M2 are
diﬀeomorphic if there exists a diﬀeomorphism γ : M1 →M2. The function
γ : M1 →M2 is a Ck-local diﬀeomorphism at p ∈M1 if there exists ¯r1 > 0
such that γ : M1 ∩B¯r1(p) →M2 is a Ck-diﬀeomorphism onto its image. From
the Inverse Function Theorem (or the Rank Theorem) this is true if, and only
if,
m1 = m2 = rank ∂γ
∂x
&&&&
p
.
(B.13)
B.1.3
Tangent Spaces and Vector Fields
A tangent space of an m-dimensional Ck-manifold at a point p is an m-
dimensional vector space, which is thought of as a linear approximation to
the surface at p. A precise deﬁnition follows.
Deﬁnition B.3 (Tangent space)
Let M be an m-dimensional Ck-embedded
submanifold of Rn and let p ∈M. Suppose that r > 0 and that F : Br(p) →
© 2007 by Taylor & Francis Group, LLC

Essential Technical Background
381
S1
x1
x2
Figure B.2. The unit circle embedded in R2 with tangent spaces at three
distinct points.
Rn−m is a Ck-function satisfying the conditions of Deﬁnition B.1. The tan-
gent space at p, denoted TpM, is equal to the nullspace of ∂F
∂x (p); that is,
TpM :=
,
v ∈Rn
&&&&
∂F
∂x (p) v = 0
-
.
(B.14)
The tangent bundle of M is T M := 7
p∈M TpM, the union of the tangent
spaces.
By construction, the tangent space at a point is always a vector space with
the same dimension as the underlying manifold. It is useful to note that the
tangent bundle of an m-dimensional Ck-manifold, k ≥2, is a 2m-dimensional
Ck−1-manifold in general. To see this point, let (p, v0) ∈T M, that is, p ∈M
and v0 ∈TpM, and let r and F be as in Deﬁnition B.1. For the open subset
of Rn × Rn we take Br(p) × Rn, and for the function whose level set locally
deﬁnes T M, we take F∗: Br(p) × Rn →Rn−m × Rn−m, by
F∗(¯x, ¯v) :=

F(¯x)
∂F
∂x
&&
¯x ¯v

.
(B.15)
Then the ﬁrst and second properties of Deﬁnition B.1 are clearly satisﬁed due
to the deﬁnition of the tangent bundle in Deﬁnition B.3. To verify the third
property, we note that
∂F∗
∂(x, v)
&&&&
(¯x,¯v)
=
 ∂F
∂x
&&
¯x
0
∗
∂F
∂x
&&
¯x

(B.16)
is lower triangular and hence its rank is equal3 to 2(n −m) as required.
3 rank ∂F∗
∂(x,v)



(¯x,¯v) = 2 rank ∂F
∂x



¯x
© 2007 by Taylor & Francis Group, LLC

382
Feedback Control of Dynamic Bipedal Robot Locomotion
Example B.3 (Tangent space of the unit circle embedded in R2)
Continuing Example B.1, the tangent space of the unit circle at a point
p = (p1, p2) ∈S1 is obtained by applying Deﬁnition B.3. This yields a one-
dimensional vector space
TpS1 =

v1
v2

∈R2
&&&&
2p1 2p2


v1
v2

= 0
8
(B.17a)
=

α

−p2
p1
 &&&& α ∈R
8
.
(B.17b)
Figure B.2 gives a sketch of TpS1 for three distinct points in S1, from which
one may extrapolate a conceptual picture of T S1. One must keep in mind
that even though T S1 is a two-dimensional manifold, it cannot be drawn in
R2.
To see why TpM is called a tangent space, consider a diﬀerentiable curve
c(t) passing through a point p ∈M, that is, consider a diﬀerentiable function
c : (t0, t2) →M and a point t1 ∈(t0, t2), with p = c(t1). Then, for |t0 −
t1| + |t1 −t2| suﬃciently small, F ◦c is well-deﬁned and identically zero, and
therefore
d
dtF ◦c
&&&&
t1
= ∂F
∂x
&&&&
p
dc
dt
&&&&
t1
= 0.
(B.18)
It follows that dc
dt
&&&&
t1
∈TpM. Hence, just as the derivative of a curve lies along
the line tangent to the curve, TpM is tangent to M. Similarly, just as the line
tangent to a curve is a local approximation of the curve, the tangent space of
M can be thought of as a local approximation of M.
Deﬁnition B.4 (Vector ﬁeld on a manifold)
Let M be a Ck, m-dimen-
sional manifold. A vector ﬁeld f on M is an assignment to each point p ∈M
of a vector f(p) ∈TpM. The vector ﬁeld is Ck if f is a Ck function on M.
Example B.4 (Vector ﬁeld on the unit circle embedded in R2)
Continuing Example B.1, recall that Example B.3 established that the tangent
space at a point p = (p1, p2) ∈S1 is given by (B.17a). Hence, a vector ﬁeld f
on S1 is given by
f(p) = f(p1, p2) = α(p1, p2)

−p2
p1

∈TpS1,
(B.19)
where α : S1 →R. The vector ﬁeld is depicted in Fig. B.3 for α constant.
© 2007 by Taylor & Francis Group, LLC

Essential Technical Background
383
S1
x1
x2
Figure B.3. A vector ﬁeld on the unit circle embedded in R2.
B.1.4
Invariant Submanifolds and Restriction Dynamics
Deﬁnition B.5 (Integral curve of a vector ﬁeld)
Let M be a Ck,
m-dimensional manifold and f a vector ﬁeld on M. A diﬀerentiable curve
c : (t0, tf) →M such that
dc(t)
dt
= f(c(t))
(B.20)
for all t ∈(t0, tf) is an integral curve of f.
For obvious reasons, the curve is often denoted by x(t) and (B.20) is written
suggestively as
˙x = f(x).
(B.21)
Moreover, the time interval is often assumed to be closed on the left, [t0, tf).
In this case, if in addition the integral curve satisﬁes x(t0) = x0 for some
x0 ∈M, then x : [t0, tf) →M is the solution of f with initial condition x0 at
time t0. By abuse of notation, this is commonly denoted x(t, t0, x0), or simply
x(t, x0) when t0 is taken as 0.
Deﬁnition B.6 (Invariant submanifold)
Let M be a manifold and f
a locally Lipschitz continuous vector ﬁeld on M.
˜N ⊂M is an invariant
submanifold of f if
1.
˜N is an embedded submanifold of M, and
2. for all x0 ∈˜N, ∃t1 > 0 and an integral curve of f, x : [0, t1) →M, such
that x(0) = x0 and ∀t ∈(0, t1), x(t) ∈˜N.
One also says that ˜N is forward invariant or more simply, invariant under f,
or that ˜
N is an integral submanifold of f. When ˜N is an invariant submanifold
of f, then in particular, ˜N is a manifold and hence its tangent space can be
© 2007 by Taylor & Francis Group, LLC

384
Feedback Control of Dynamic Bipedal Robot Locomotion
deﬁned. If f is at least locally Lipschitz continuous, then standard results
on existence and uniqueness of solutions to diﬀerential equations can be used
to provide a test of the invariant submanifold property that does not rely on
computing the solution.
Proposition B.1 (Invariant Submanifold Test)
Let M be a manifold and f a locally Lipschitz continuous vector ﬁeld on M.
˜N ⊂M is an invariant submanifold of f if
1.
˜N is an embedded submanifold of M, and
2. for all p ∈˜
N, f(p) ∈Tp ˜N.
Example B.5 (The unit circle as an invariant submanifold of R2)
Continuing Example B.1, consider the vector ﬁeld on R2 given by
f(x) = f(x1, x2) =

−x2
x1

,
(B.22)
and let x0 = (x0,1, x0,2) ∈S1. Then, the solution of ˙x = f(x), x(0) = x0 is
x(t) = exp
"
0 −1
1 0

t
# 
x0,1
x0,2

(B.23a)
=

cos(t) −sin(t)
sin(t) cos(t)
 
x0,1
x0,2

(B.23b)
=

x0,1 cos(t) −x0,2 sin(t)
x0,1 sin(t) + x0,2 cos(t)

.
(B.23c)
It is easily checked that F(x(t)) = 0 for all t ≥0. Therefore, S1 is an invariant
submanifold of f.
In general, it is not possible to compute the solution of a diﬀerential equa-
tion in closed-form in order to apply Deﬁnition B.6, and hence applying Propo-
sition B.1 is much easier. Since f is smooth and Example B.3 immediately
establishes that f(p) ∈TpS1 for all p ∈S1, it is concluded that S1 is an
invariant submanifold of f with no further computations.
From Proposition B.1, if ˜N is an invariant submanifold of a Lipschitz con-
tinuous vector ﬁeld f on M, then f| ˜
N, which is read f restricted to ˜N and
deﬁned by
∀p ∈˜N, f| ˜
N (p) = f(p),
(B.24)
is a vector ﬁeld on ˜N (that is, f| ˜
N (p) ∈Tp ˜N). The corresponding diﬀerential
equation on ˜N is called the restriction dynamics, ˙x = f| ˜
N (x). The impor-
tance of this concept is that it corresponds to a lower-dimensional diﬀerential
© 2007 by Taylor & Francis Group, LLC

Essential Technical Background
385
equation, since in general ˜n < m. To see this, suppose that p ∈˜N ⊂M and
that ((x1, . . . , xm), Br(p) ∩M) is a coordinate chart for M about p in which
Br(p) ∩˜N = {(x1, . . . , xm) ∈Br(p) ∩M | x˜n+1 = ˜g˜n+1(x1, . . . , x˜n), . . . , xm =
˜gm(x1, . . . , x˜n)}. Then ((x1, . . . , x˜n), Br(p) ∩˜
N) is a coordinate chart for ˜N
about p, and the restriction dynamics is given by
⎡
⎢⎢⎣
˙x1
...
˙x˜n
⎤
⎥⎥⎦=
⎡
⎢⎢⎣
f1(x1, . . . , x˜n, ˜g˜n+1(x1, . . . , x˜n), . . . , ˜gm(x1, . . . , x˜n))
...
f˜n(x1, . . . , x˜n, ˜g˜n+1(x1, . . . , x˜n), . . . , ˜gm(x1, . . . , x˜n))
⎤
⎥⎥⎦.
(B.25)
Example B.6 (Restriction dynamics on the unit circle)
By Example B.5, S1 is invariant under the vector ﬁeld (B.22). Using the coor-
dinate chart about p = (0, 1) given in Example B.2, the restriction dynamics
is computed to be
˙x1 = −
6
1 −x2
1.
(B.26)
The change of coordinates x1 = sin(θ) results in
˙θ = −1.
(B.27)
It is an easy exercise to verify that if in Example B.2 we had started in
polar coordinates on R2, then we would have obtained this result directly.
Similarly, using the coordinate chart about p = (−1, 0) given in Example B.2,
the restriction dynamics is computed to be
˙x2 = −
6
1 −x2
2.
(B.28)
B.1.5
Lie Derivatives, Lie Brackets, and Involutive
Distributions
Deﬁnition B.7 (Lie derivative)
Let M be a Ck, m-dimensional manifold,
f a vector ﬁeld on M, and h : M →R a diﬀerentiable real-valued function.
The Lie derivative of h with respect to f is the real-valued function Lfh :
M →R by
∀p ∈M, Lfh(p) := ∂h
∂x(p)f(p).
(B.29)
If h : M →Rn is vector valued and diﬀerentiable, then applying the above
deﬁnition component-wise results in
Lfh(p) :=
⎡
⎢⎢⎣
∂h1
∂x (p)f(p)
...
∂hn
∂x (p)f(p)
⎤
⎥⎥⎦= ∂h
∂x(p)f(p),
(B.30)
© 2007 by Taylor & Francis Group, LLC

386
Feedback Control of Dynamic Bipedal Robot Locomotion
in which case, Lfh : M →Rn.
Some useful properties and notation are brieﬂy summarized. In order to
see that Lfh is a directional derivative, suppose that c is an integral curve of
f such that c(t1) = p. Then
d
dt (h ◦c)
&&&&
t1
= ∂h
∂x
&&&&
p
dc
dt
&&&&
t1
(B.31a)
= ∂h
∂x
&&&&
p
f(p)
(B.31b)
= Lfh(p).
(B.31c)
In general, if h is k1-times diﬀerentiable and f is k2-times diﬀerentiable, then
Lfh is at least min{k1 −1, k2}-times diﬀerentiable. When h and f are suﬃ-
ciently many times diﬀerentiable, L2
fh = Lf (Lfh), and the symbol Lk
fh means
applying Lf k-times. If g is another vector ﬁeld on M, then Lg (Lfh) is simply
denoted as LgLfh, and similarly for LfLgh. In general LgLfh ̸= LfLgh. By
convention, if k = 0, Lk
fh = h.
Example B.7 (Lie derivative)
Continuing Example B.1, consider the vector ﬁeld (B.22) on R2 and deﬁne
h : R2 →R by h(x1, x2) = x2
1 + x2
2 −1. Then
Lfh(x) = [2x1, 2x2]

−x2
x1

(B.32a)
≡0,
(B.32b)
which means that h is constant along integral curves (i.e., solutions) of f, as
is easily seen.
Deﬁnition B.8 (Lie bracket)
Let M be a C∞, m-dimensional manifold,
and let f and g be C∞vector ﬁelds on M. The Lie bracket of f and g is the
vector ﬁeld on M deﬁned by
∀p ∈M, [f, g](p) := ∂g
∂x(p)f(p) −∂f
∂x(p)g(p).
(B.33)
Deﬁnition B.9 (Involutive distribution)
Let M be a C∞, m-dimen-
sional manifold.
A distribution is a speciﬁcation at each point of M of a
subspace of TpM; the distribution is commonly denoted Δ(p). The distribution
Δ is constant dimensional if dim Δ(p) does not vary with p ∈M; it is C∞
(or smooth) if about each p ∈M there exist r > 0 and a ﬁnite set of C∞
vector ﬁelds X1, . . . , Xk on Br(p) ∩M such that ∀x ∈Br(p) ∩M, Δ(x) =
© 2007 by Taylor & Francis Group, LLC

Essential Technical Background
387
span{X1(x), . . . Xk(x)}. A vector ﬁeld X belongs to Δ if X(p) ∈Δ(p) for all
p ∈M. Finally, a C∞distribution Δ is involutive if X and Y belong to Δ,
then so does their Lie bracket, [X, Y ].
A famous theorem of Frobenius states that if a C∞distribution is constant
dimensional and involutive, then in the neighborhood of any point, there exists
local coordinates in which the distribution can be expressed as the span of
constant vector ﬁelds.
Example B.8 (Distribution)
Let M = R3 and consider the vector ﬁelds
X1(x) =
⎡
⎢⎣
−x2
x1
0
⎤
⎥⎦
and
X2(x) =
⎡
⎢⎣
x1
x2
x1x2
3
⎤
⎥⎦.
(B.34)
Then,
[X1, X2](x) =
⎡
⎢⎣
0
0
−x2x2
3
⎤
⎥⎦.
(B.35)
Deﬁne a distribution by Δ(x) = span{X1(x), X2(x)}. Then the dimension
of the distribution is easily checked to be two for all x ̸= 0.
However,
the distribution is not involutive because for x = (1, 1, 1), the vector ﬁeld
[X1, X2](x) ̸∈Δ(x).
Indeed, [X1, X2](x) is linearly independent of X1(x),
X2(x) at the point x = (1, 1, 1) because the matrix
⎡
⎢⎣
−1
1
0
1
1
0
0
1 −1
⎤
⎥⎦
(B.36)
has rank three.
B.2
Elementary Notions in Geometric Nonlinear
Control
The objective of this section is to provide an elementary introduction to a
few concepts in nonlinear geometric control, including the relative degree,
the decoupling matrix, the zero dynamics, and static I-O linearization. For
simplicity, it is assumed that the state space is an open subset of Rn and
that the system is C∞. Single-input single-output (SISO) control systems are
© 2007 by Taylor & Francis Group, LLC

388
Feedback Control of Dynamic Bipedal Robot Locomotion
treated ﬁrst and then the simplest multiple-input multiple-output (MIMO)
extensions are noted.
B.2.1
SISO Nonlinear Aﬃne Control System
Consider a SISO control system
˙x = f(x) + g(x)u
y = h(x),
(B.37)
deﬁned on X, an open subset of Rn. It is assumed that the vector ﬁelds f and
g are C∞and the output h : X →R is C∞. Because ˙x is aﬃne in u ∈R, the
system is said to be aﬃne. Though not considered here, X could in general
be an n-dimensional manifold and (B.37) would be the representation of the
control system in a local coordinate chart.
B.2.1.1
Relative Degree
The system (B.37) is said to have relative degree r at x0 ∈X if
a) for all 0 ≤k < r −1, LgLk
fh(x) = 0 for all x in an open set about x0,
and
b) LgLr−1
f
h(x0) ̸= 0.
The interpretation of this deﬁnition is the following. By the chain rule, the
derivative of the output of (B.37) computed along a solution of the model is
˙y = ∂h
∂x (f + gu) = Lfh + Lghu.
(B.38)
The relative degree is r = 1 if, and only if, Lgh(x0) is nonzero, which implies
that the ﬁrst derivative of the output is directly aﬀected by the input, at least
near x0. If however Lgh ≡0, then computing the second derivative gives
¨y = ∂Lfh
∂x
(f + gu) = L2
fh + LgLfhu.
(B.39)
The relative degree is then r = 2 if, and only if, LgLfh(x0) is nonzero, which
implies that the second derivative of the output is directly aﬀected by the
input, etc.
© 2007 by Taylor & Francis Group, LLC

Essential Technical Background
389
Proposition B.2 (Independence Condition)
If (B.37) has relative degree r at x0, then on a neighborhood of x0, the func-
tions {h, Lfh, . . . , Lr−1
f
h} are independent, that is,
rank
⎡
⎢⎢⎢⎢⎢⎣
∂h
∂x(x0)
∂Lfh
∂x (x0)
...
∂Lr−1
f
h
∂x
(x0)
⎤
⎥⎥⎥⎥⎥⎦
= r.
(B.40)
the relative degree at x0 exists, then r ≤n.
B.2.1.2
Zero Dynamics
Suppose now that the relative degree of (B.37) exists at each point of X and
is constant, denoted r. Let y(k)(t) = dk
dtk y(t). Then,
y(r) = Lr
fh + LgLr−1
f
h u,
(B.41)
and for all x ∈X, LgLr−1
f
h(x) ̸= 0. Deﬁne a state variable feedback u∗: X →
R by
Lr
fh + LgLr−1
f
hu∗≡0,
(B.42)
and set f ∗:= f + gu∗; that is,∀x ∈X,
u∗(x) := −
Lr
fh(x)
LgLr−1
f
h(x)
f ∗(x) := f(x) + g(x)u∗(x) = f(x) −g(x)
Lr
fh(x)
LgLr−1
f
h(x).
(B.43)
The zero dynamics manifold is deﬁned to be
Z = {x ∈X | h(x) = 0, . . . , Lr−1
f
h(x) = 0}.
(B.44)
By Proposition B.2, when Z is nonempty, it is a C∞, (n −r)-dimensional
embedded submanifold of X. Indeed,
Z = {x ∈X | F(x) = 0},
(B.45)
where
F =
⎡
⎢⎢⎣
h
...
Lr−1
f
h
⎤
⎥⎥⎦,
(B.46)
© 2007 by Taylor & Francis Group, LLC
The above fact is proven in [127, Chap. 4] and shows in particular that if

390
Feedback Control of Dynamic Bipedal Robot Locomotion
and Proposition B.2 establishes the key rank condition of Deﬁnition B.1. By
the deﬁnition of f ∗, it follows that for all 0 ≤k ≤r, Lk
f ∗h ≡0, which implies
that ∂F
∂x f ∗≡0. It follows from Proposition B.1, therefore, that Z is invariant
under f ∗. The restriction dynamics f ∗|Z is called the zero dynamics of (B.37).
When the dimension of Z is at least one, it is interesting to develop this in
local coordinates.
Proposition B.3 (Local Coordinates for the Zero Dynamics)
If (B.37) has relative degree r < n at x0, then on a neighborhood of x0, there
exist C∞functions {φr+1, . . . , φn} such that
rank
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
∂h
∂x(x0)
...
∂Lr−1
f
h
∂x
(x0)
∂φr+1
∂x (x0)
...
∂φn
∂x (x0)
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
= n
(B.47)
and for r + 1 ≤k ≤n,
Lgφk ≡0.
(B.48)
In the new coordinates (η; z)
given by

η
z

=
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
η1
...
ηr
z1
...
zn−r
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
=
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
h(x)
...
Lr−1
f
h(x)
φr+1(x)
...
φn(x)
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
(B.49)
the zero dynamics manifold is given by
Z = {(η; z) | η = 0}.
(B.50)
Letting ˜f (resp. ˜g, ˜h) denote f (resp. g, h) in the new coordinates, it can be
© 2007 by Taylor & Francis Group, LLC
The above fact is proven in [127, Chap. 4].

Essential Technical Background
391
shown that (B.37) has the form
d
dt
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
η1
...
ηr−1
ηr
z1
...
zn−r
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
=
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
η2
...
ηr
˜fr(η, z)
˜fr+1(η, z)
...
˜fn(η, z)
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
+
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
0
...
0
˜gr(η, z)
0
...
0
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
u
y = ˜h(η, z) = η1.
(B.51)
Letting ˜f ∗denote f ∗in the new coordinates, it follows that
˜f ∗(η, z) =
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
η2
...
ηr
0
˜fr+1(η, z)
...
˜fn(η, z)
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
,
(B.52)
which gives
˜f ∗&&&
Z (z) =
⎡
⎢⎢⎣
˜fr+1(0, z)
...
˜fn(0, z)
⎤
⎥⎥⎦.
(B.53)
© 2007 by Taylor & Francis Group, LLC

392
Feedback Control of Dynamic Bipedal Robot Locomotion
Remark B.3
Without the condition (B.48), then (B.51) becomes
d
dt
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
η1
...
ηr−1
ηr
z1
...
zn−r
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
=
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
η2
...
ηr
˜fr(η, z)
˜fr+1(η, z)
...
˜fn(η, z)
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
+
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
0
...
0
˜gr(η, z)
˜gr+1(η, z)
...
˜gn(η, z)
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
u
y = ˜h(η, z) = η1,
(B.54)
and then, using (B.43), (B.53) becomes
˜f ∗&&&
Z (z) =
⎡
⎢⎢⎣
˜fr+1(0, z)
...
˜fn(0, z)
⎤
⎥⎥⎦−
⎡
⎢⎢⎣
˜gr+1(0, z)
...
˜gn(0, z)
⎤
⎥⎥⎦
˜fr(0, z)
˜gr(0, z).
(B.55)
B.2.1.3
Input-Output Linearization
Consider the SISO aﬃne system (B.37) and suppose that its relative degree
r exists at each point of X and is constant, so that (B.41) holds everywhere
on X. Applying the state variable feedback
u =
1
LgLr−1
f
h

−Lr
fh + v

,
(B.56)
v ∈R, results in
y(r) = v.
(B.57)
The system (B.37) has been input-output linearized. Taking v = −kr−1Lr−1
f
h−
· · · −k1Lfh −k0h, that is,
u =
1
LgLr−1
f
h
 
−Lr
fh −kr−1Lr−1
f
h −· · · −k1Lfh −k0h
!
,
(B.58)
results in
y(r) + kr−1y(r−1) + · · · + k0y = 0.
(B.59)
© 2007 by Taylor & Francis Group, LLC

Essential Technical Background
393
To understand the eﬀect of this feedback on the evolution of the state of the
system, apply (B.58) to (B.51), yielding
d
dt
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
η1
...
ηr−1
ηr
z1
...
zn−r
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
=
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
η2
...
ηr
−k0η1 −· · · −kr−1ηr
˜fr+1(η, z)
...
˜fn(η, z)
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
.
(B.60)
Hence, if the coeﬃcients kr−1, . . . , k0 are assigned so that y(t) asymptotically
tends to zero, then η1(t) through ηr(t) asymptotically tend to zero and the
state “converges” to a solution of the zero dynamics.
Regular feedback:
A state variable feedback of the form
u = α(x) + β(x)v,
(B.61)
v ∈R, is regular for (B.37) if ∀x ∈X, β(x) ̸= 0. The closed-loop system is
denoted
˙x = fcl(x) + gcl(x)v
y = h(x),
(B.62)
where
fcl(x) = f(x) + g(x)α(x)
gcl(x) = g(x)β(x).
(B.63)
A regular state variable feedback does not change the relative degree of an
output. Indeed, the following is true:
Proposition B.4 (Feedback and Relative Degree)
Suppose that (B.37) has relative degree r at x0. Then in a neighborhood of
x0, for all 1 ≤k < r, Lk
fclh(x) = Lk
fh(x) and
LgclLk
fclh(x) =

0
k ≤r −2
LgL(r−1)
f
h(x)β(x)
k = r −1.
(B.64)
Hence, if the feedback is regular, (B.37) and (B.62) have the same relative
degree.
© 2007 by Taylor & Francis Group, LLC

394
Feedback Control of Dynamic Bipedal Robot Locomotion
B.2.2
MIMO Nonlinear Aﬃne Control System
the case of square nonlinear systems, that is, systems with the same number of
inputs as outputs. In general, dynamic state variable feedbacks are useful for
understanding the zero dynamics and for achieving input-output linearization
of MIMO systems. Here, we will limit ourselves to a particular case where
static feedback is suﬃcient, namely, an invertible decoupling matrix will be
assumed.
Consider a square MIMO aﬃne control system
˙x = f(x) +
m

i=1
gi(x)ui
y =
⎡
⎢⎢⎣
h1(x)
...
hm(x)
⎤
⎥⎥⎦
(B.65)
deﬁned on X, an open subset of Rn. It is assumed that the vector ﬁelds f and
gi, 1 ≤i ≤m, are C∞and the output functions hi : X →R, 1 ≤i ≤m, are
C∞. Because ˙x is aﬃne in ui ∈R, the system is said to be aﬃne. Though
not considered here, X could in general be an n-dimensional manifold and
(B.65) would be the representation of the control system in a local coordinate
chart. For brevity, aﬃne control systems are often denoted simply by
˙x = f(x) + g(x)u
y = h(x),
(B.66)
where
g(x) = [ g1(x), . . . , gm(x) ] ,
(B.67)
and
h(x) =
⎡
⎢⎢⎣
h1(x)
...
hm(x)
⎤
⎥⎥⎦, u =
⎡
⎢⎢⎣
u1
...
um
⎤
⎥⎥⎦, y =
⎡
⎢⎢⎣
y1
...
ym
⎤
⎥⎥⎦.
(B.68)
B.2.2.1
Vector Relative Degree
The system (B.65) is said to have vector relative degree (r1, . . . , rm) at x0 ∈X
if
a) for all 1 ≤j ≤m, 1 ≤i ≤m, 0 ≤k < ri −1,
LgjLk
fhi(x) = 0
(B.69)
for all x in an open set about x0, and
© 2007 by Taylor & Francis Group, LLC
This section quickly summarizes elementary extensions of Appendix B.2.1 to

Essential Technical Background
395
b) the m × m-matrix (called the decoupling matrix)
A(x) =
⎡
⎢⎢⎣
Lg1Lr1−1
f
h1(x) · · · LgmLr1−1
f
h1(x)
...
...
...
Lg1Lrm−1
f
hm(x) · · · LgmLrm−1
f
hm(x)
⎤
⎥⎥⎦
(B.70)
is nonsingular at x0.
For each component of the output of (B.65), the interpretation of this def-
inition is similar to the SISO case; in particular, ri is the lowest derivative of
yi that is directly aﬀected by at least one of the input components:
y(ri)
i
= Lri
f hi(x) + Lg1Lri−1
f
hi(x)u1 + · · · LgmLri−1
f
hi(x)um,
(B.71)
and at least one of the terms LgjLri−1
f
hi is nonzero at x0. Hence, the ri are
the natural notion of a relative degree deﬁned line-by-line. Writing this out
in vector form gives
⎡
⎢⎢⎣
y(r1)
1
...
y(rm)
m
⎤
⎥⎥⎦=
⎡
⎢⎢⎣
Lr1
f h1(x)
...
Lrm
f hm(x)
⎤
⎥⎥⎦+ A(x)u.
(B.72)
Remark B.4
In general, the decoupling matrix will not be invertible at
x0. It is emphasized that when the decoupling matrix is not invertible at x0,
the vector relative degree is not deﬁned at x0. When the decoupling matrix
is singular, a dynamic feedback is often useful for input-output linearization
and other feedback control problems. This topic is not treated here.
Proposition B.5 (Independence Condition (MIMO))
If (B.65) has a vector relative degree (r1, . . . , rm) at x0, then on a neighborhood
of x0, the functions {h1, . . . , Lr1−1
f
h1, . . . , hm, . . . , Lrm−1
f
hm} are independent,
that is,
rank
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
∂h1
∂x (x0)
...
∂Lr1−1
f
h1
∂x
(x0)
...
∂hm
∂x (x0)
...
∂Lrm−1
f
hm
∂x
(x0)
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
= r1 + · · · + rm.
(B.73)
© 2007 by Taylor & Francis Group, LLC

396
Feedback Control of Dynamic Bipedal Robot Locomotion
the vector relative degree at x0 exists, then r1 + · · · + rm ≤n.
Zero Dynamics
Suppose now (B.65) has a vector relative degree at each point of X and that
the vector relative degree is constant and equal to (r1, . . . , rm). Then,
⎡
⎢⎢⎣
y(r1)
1
...
y(rm)
m
⎤
⎥⎥⎦=
⎡
⎢⎢⎣
Lr1
f h1
...
Lrm
f hm
⎤
⎥⎥⎦+ Au,
(B.74)
and for all x ∈X, A(x) is invertible. Deﬁne a state variable feedback u∗:
X →Rm by
⎡
⎢⎢⎣
Lr1
f h1
...
Lrm
f hm
⎤
⎥⎥⎦+ Au∗≡0,
(B.75)
and set f ∗:= f + gu∗; that is, ∀x ∈X,
u∗(x) := −A(x)−1
⎡
⎢⎢⎣
Lr1
f h1(x)
...
Lrm
f hm(x)
⎤
⎥⎥⎦
f ∗(x) := f(x) + g(x)u∗(x).
(B.76)
The zero dynamics manifold is deﬁned to be
Z = {x ∈X | h1(x) = 0, . . . , Lr1−1
f
h1(x) = 0, . . . ,
hm(x) = 0, . . . , Lrm−1
f
hm(x) = 0}.
(B.77)
By Proposition B.5, when Z is nonempty, it is a C∞, (n −r)-dimensional
embedded submanifold of X, where r = r1 + · · · + rm, and just as in the case
of SISO systems, Z is invariant under f ∗. The restriction dynamics f ∗|Z is
called the zero dynamics of (B.65).
When the dimension of Z is at least one, it is interesting to develop this in
local coordinates.
Proposition B.6 (Local Coordinates for the Zero Dynamics (MIMO))
If (B.65) has vector relative degree (r1, . . . , rm) at x0, and r = r1 +· · ·+rm <
n, then on a neighborhood of x0, there exist C∞functions {φr+1, . . . , φn} such
© 2007 by Taylor & Francis Group, LLC
The above fact is proven in [127, Chap. 5] and shows in particular that if
B.2.2.2

Essential Technical Background
397
that
rank
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
∂η1
∂x (x0)
...
∂ηm
∂x (x0)
∂φr+1
∂x (x0)
...
∂φn
∂x (x0)
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
= n,
(B.78)
where
ηj =
⎡
⎢⎢⎣
ηj,1
...
ηj,rj
⎤
⎥⎥⎦=
⎡
⎢⎢⎣
hj
...
Lrj−1
f
hj
⎤
⎥⎥⎦.
(B.79)
Moreover, if the distribution span{g1, . . . gm} is involutive4 in a neighborhood
of x0, then it is possible to choose the additional functions such that for r+1 ≤
k ≤n, 1 ≤j ≤m
Lgjφk ≡0.
(B.80)
In the new coordinates (η; z) deﬁned by
η =
⎡
⎢⎢⎣
η1
...
ηm
⎤
⎥⎥⎦, z =
⎡
⎢⎢⎣
φr+1
...
φn
⎤
⎥⎥⎦,
(B.81)
the zero dynamics manifold is given by
Z = {(η; z) | η = 0},
(B.82)
whether or not the involutivity condition holds, and hence whether or not the
coordinates satisfy (B.80). However, without the involutivity condition, the
determination of the zero dynamics becomes considerably more complicated,
Assume therefore that (B.80) holds. Let ˜f ∗(resp. ˜f) denote f ∗(resp. f) in
4The invertibility of the decoupling matrix implies that the distribution has constant di-
mension.
© 2007 by Taylor & Francis Group, LLC
just as in (B.55). When (B.80) is not met, see [127, Chap. 5].

398
Feedback Control of Dynamic Bipedal Robot Locomotion
the new coordinates. It can be shown that that
˜f ∗(η, z) =
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
˜f ∗
1 (η1)
...
˜f ∗
m(ηm)
˜fr+1(η, z)
...
˜fr(η, z)
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
,
(B.83)
where
˜f ∗
j (ηj) =
⎡
⎢⎢⎢⎢⎣
ηj,2
...
ηj,rj
0
⎤
⎥⎥⎥⎥⎦
.
(B.84)
Hence,
˜f ∗&&&
Z (z) =
⎡
⎢⎢⎣
˜fr+1(0, z)
...
˜fr(0, z)
⎤
⎥⎥⎦,
(B.85)
just as in the SISO case.
B.2.2.3
Input-Output Linearization
Consider the MIMO aﬃne system (B.65) and suppose that it has a vector
relative degree at each point of X that it is constant and equal to (r1, . . . , rm),
so that (B.74) holds everywhere on X, with the decoupling matrix being
invertible. Applying the state variable feedback
u = A−1(x)
⎛
⎜
⎜
⎝v −
⎡
⎢⎢⎣
Lr1
f h1
...
Lrm
f hm
⎤
⎥⎥⎦
⎞
⎟
⎟
⎠,
(B.86)
with v ∈Rm, results in
⎡
⎢⎢⎣
y(r1)
1
...
y(rm)
m
⎤
⎥⎥⎦=
⎡
⎢⎢⎣
v1
...
vm
⎤
⎥⎥⎦.
(B.87)
The system (B.65) has been input-output linearized. If v is then chosen so
that y(t) asymptotically tends to zero, the state of the closed-loop system
“converges” to the zero dynamics. Note that when v = 0, (B.86) corresponds
to u∗.
© 2007 by Taylor & Francis Group, LLC

Essential Technical Background
399
Regular feedback:
A state variable feedback of the form
u = α(x) + β(x)v,
(B.88)
v ∈Rm, is regular for (B.65) if ∀x ∈X, det(β(x)) ̸= 0. The closed-loop
system is denoted
˙x = fcl(x) + gcl(x)v
y = h(x),
(B.89)
where
fcl(x) = f(x) + g(x)α(x)
gcl(x) = g(x)β(x).
(B.90)
A regular state variable feedback does not modify the vector relative degree
of an output. Indeed, the following is true:
Proposition B.7 (Feedback and Vector Relative Degree)
Suppose that (B.65) has vector relative degree (r1, . . . , rm) at x0. Then in a
neighborhood of x0,
a) for all 1 ≤j ≤m, 1 ≤i ≤m, 0 ≤k < ri −1,
Lgcl,jLk
fclhi(x) = 0,
(B.91)
and
b) the m × m decoupling matrix of the closed-loop system satisﬁes
Acl(x) :=
⎡
⎢⎢⎣
Lgcl,1Lr1−1
fcl
h1(x) · · · Lgcl,mLr1−1
fcl
h1(x)
...
...
...
Lgcl,1Lrm−1
fcl
hm(x) · · · Lgcl,mLrm−1
fcl
hm(x)
⎤
⎥⎥⎦= A(x)β(x).
(B.92)
Hence, if the feedback is regular, the decoupling matrix of (B.65) is invertible
if, and only if, the decoupling matrix of (B.89) is invertible, and in this case,
the two systems have the same vector relative degree.
B.3
Poincar´e’s Method of Determining Limit Cycles
The method of Poincar´e sections and return maps is widely used to determine
the existence and stability of periodic orbits in a broad range of system mod-
els, such as time-invariant and periodically-time-varying ordinary diﬀerential
© 2007 by Taylor & Francis Group, LLC

400
Feedback Control of Dynamic Bipedal Robot Locomotion
equations [102,173], hybrid systems consisting of several time-invariant ordi-
nary diﬀerential equations linked by event-based switching mechanisms and
reinitialization rules [98,167], diﬀerential-algebraic equations [115], and relay
systems with hysteresis [91], to name just a few. While the analytical details
may vary signiﬁcantly from one class of models to another, on a conceptual
level, the method of Poincar´e is consistent and straightforward: sample the
solution of a system according to an event-based or time-based rule, and then
evaluate the stability properties of equilibrium points (also called ﬁxed points)
of the sampled system, which is called the Poincar´e return map. Fixed points
of the Poincar´e map correspond5 to periodic orbits of the underlying system.
Roughly speaking, if the solutions of the underlying system depend continu-
ously on the initial conditions, then equilibrium points of the Poincar´e map
are stable (asymptotically stable) if, and only if, the corresponding orbit is
stable (asymptotically stable), and if the solutions are Lipschitz continuous in
the initial conditions, then the equivalence extends to exponential stability.
This section provides an informal understanding of Poincar´e’s method for
determining the existence and stability properties of periodic solutions of dif-
ferential equations. While the method is applicable to ordinary diﬀerential
equations in Rn, here, the essential ideas are illustrated on a time-invariant
system in the plane.
Consider the van der Pol oscillator
˙x1 = x2
˙x2 = −x1 + ϵ(1 −x2
1)x2
(B.93)
evolving on R2.
This equation is well known to have a limit cycle.6
For
ϵ = +1, the limit cycle is asymptotically stable and for ϵ = −1, the limit cycle
is unstable; see Fig. B.4. These facts can be veriﬁed by simulation, or more
systematically, through the method of Poincar´e sections.
B.3.1
Poincar´e Return Map
The method of Poincar´e sections provides a systematic method for testing
whether or not a limit cycle exists in a given region of state space. In the
case of the van der Pol oscillator, suppose we suspect that a limit cycle passes
through the x2-axis for7 1 < x2 < 3. Deﬁne a hyper surface S := {(x1; x2) ∈
R2 | x1 = 0, 1 < x2 < 3}, as depicted in Fig. B.4(a); S is called a Poincar´e
section. The Poincar´e return map P : S →S is constructed as follows: take
a point x ∈S and view it as an initial condition for the van der Pol oscillator.
5Fixed points of P k = P ◦· · ·◦P k-times also correspond to periodic orbits. The associated
analysis problems for k > 1 are essentially the same as for k = 1 and are not discussed here.
6There is no known closed form expression for the limit cycle. Asymptotically exact ap-
proximations are discussed in [138].
7The Poincar´e section could be taken as (0, ∞), of course. However, since in general the
map must be computed numerically, in practice, one often starts with a smaller choice.
© 2007 by Taylor & Francis Group, LLC

Essential Technical Background
401
S
x1
x2
(a) For ϵ = 1.
x1
x2
(b) For ϵ = −1.
Figure B.4. Limit cycles in a van der Pol oscillator. The initial conditions
are indicated by dots. In (a), for all initial conditions except the origin, the
solution converges to the limit cycle and one says the limit cycle is asymptot-
ically stable. In (b), the solutions diverge from the limit cycle, and one says
the limit cycle is unstable. One possible choice for a Poincar´e section is shown
in (a).
Suppose the resulting solution φ(t, x) eventually intersects S (on the opposite
side) for the ﬁrst time at t = TI(x). Then the Poincar´e map is deﬁned to
be P(x) := φ(TI(x), x). If, on the other hand, the solution never intersects
S, then the Poincar´e map is not well deﬁned at that point. These cases are
illustrated in Fig. B.5.
B.3.2
Fixed Points and Periodic Orbits
A point x∗∈S such that P(x∗) = x∗is called a ﬁxed point. By the deﬁnition
of P, this means that when (B.93) is initialized at x∗, the solution returns
to x∗in TI(x∗) seconds, meaning the solution φ(t, x∗) is periodic with period
T = TI(x∗). The set of points in the plane traced out by the periodic solution
is called the periodic orbit, or less formally, the limit cycle. We see that there is
a one-to-one correspondence of ﬁxed points of the Poincar´e map and periodic
orbits. Indeed, ﬁxed points correspond to the intersection of the periodic orbit
with S, or, said another way, ﬁxed points correspond to initial conditions on
S for which the corresponding solution of the van der Pol oscillator traces out
a periodic orbit.
Since x ∈S always has x1 = 0, the Poincar´e return map can be written as
P :

0
x2

→

0
P2(x2)

.
(B.94)
© 2007 by Taylor & Francis Group, LLC

402
Feedback Control of Dynamic Bipedal Robot Locomotion
S
x1
x2
(a) A point at which the return map is well
deﬁned: a solution of the diﬀerential equa-
tion exists that starts on one side of S and
ends on the opposite side.
S
x1
x2
(b) A point at which the return map is not
well deﬁned:
a solution of the diﬀerential
equation initialized on S never intersects S
again.
Figure B.5. Deﬁning the Poincar´e return map.
Thus, ﬁnding a ﬁxed point is equivalent to ﬁnding x∗
2 such that x∗
2 = P2(x∗
2);
this is the same as the graph of P2 crossing the graph of the identity function,
x2 →x2. Figures B.6 and B.7 depicts plots of the Poincar´e return map of the
van der Pol oscillator for ϵ = ±1, and shows the associated ﬁxed points.
Take a point x0 ∈S and use it as an initial condition of the van der Pol
oscillator. Consider the resulting solution, φ(t, x0), and denote by t1 the time
of its ﬁrst intersection with S, and in general, by tk the time of its k-th
intersection with S; see Fig. B.8. Denote the point in S at which the solution
impacted at time tk by x[k] := x(tk) := φ(tk, x0). Then by deﬁnition of the
Poincar´e map, x[k+1] = P(x[k]), which is a discrete-time system that evolves
on the Poincar´e section, S. Since x1 is constant on S, the discrete-time system
on S is equivalent to the scalar discrete-time system x2[k + 1] = P2(x2[k])
on the interval (1, 3) ⊂R; see (B.94). Analyzing the stability of this later
equation is straightforward on the basis of the graphs in Figs. B.6 and B.7.
Consider ﬁrst Fig. B.6, and take an initial point x2[0] to the left of x∗
2. Then
x2[0] < x2[1] = P2(x2[0]) < x∗
2. By induction, x2[k] < x2[k +1] = P2(x2[k]) <
x∗
2. Hence, the sequence x2[k] is monotonically increasing and bounded from
above, and thus has a limit point that is, moreover, a ﬁxed point of P2. Since
inspection of Fig. B.6 shows there is only one ﬁxed point, limk→∞x2[k] = x∗
2.
The same argument can be repeated for x2[0] to the right of x∗
2, and hence x∗
2
is an attractive equilibrium point of x2[k + 1] = P2(x2[k]), and because the
convergence is monotonic, it is also stable in the sense of Lyapunov. Therefore,
x∗
2 is an asymptotically stable equilibrium point of x2[k + 1] = P2(x2[k]), in
agreement with the phase portrait shown in Fig. B.4(a).
Consider next Fig. B.7, and take any point x2 to the right of x∗
2. Then
© 2007 by Taylor & Francis Group, LLC

Essential Technical Background
403
1
2
3
2.5
1.5
1
2
3
2.5
1.5
x2
x∗
2
P2(x2)
(a) Return map.
2.17
2.175
2.165
1
2
3
2.5
1.5
x2
x∗
2
P2(x2)
(b) Return map with enlarged y-axis scaling.
Figure B.6. Poincar´e return map for the van der Pol oscillator (thick lines)
with an asymptotically stable limit cycle. A ﬁxed point corresponds to the
intersection of the Poincar´e map with the identity map (thin lines) and is
denoted by x∗
2. Since the x1 component is constant on the Poincar´e section,
the actual ﬁxed point is x∗= (0; x∗
2). The return map is shown in (a) and
(b) with diﬀerent scales, due to the very rapid convergence of the van der Pol
oscillator for ϵ = +1.
x∗
2 < x2 < P2(x2) easily follows, which leads to the estimate |P(x2) −x∗
2| >
|x2 −x∗
2|. Hence the equilibrium point is unstable, in agreement with the
phase portrait shown in Fig. B.4(b).
In summary, the Poincar´e return map P : S →S converts the problem of
ﬁnding limit cycles (i.e., periodic orbits) of the van der Pol diﬀerential equation
into one of ﬁnding equilibrium points for a discrete-time system evolving on
the Poincar´e section, namely, x[k +1] = P(x[k]), x[0] ∈S. Since the Poincar´e
section is a hyper surface, it has dimension one less than the dimension of the
state space of the diﬀerential equation. In addition, the stability of the limit
cycle can be determined by the analyzing the stability of the corresponding
equilibrium point, x∗= P(x∗).
In the particular case of the van der Pol
equation, this meant that the existence and stability of a limit cycle could be
determined by analyzing a scalar map.
B.3.3
Utility of the Poincar´e Return Map
Computing the return map requires the solution of the diﬀerential equation,
for which numerical computations are needed, that is, numerical simulations of
the diﬀerential equation. So why even bother with the method of Poincar´e sec-
tions? Why not just simulate the diﬀerential equation to ﬁnd the limit cycle?
Mathematical rigor is always a good reason. The method of Poincar´e sections
provides necessary and suﬃcient conditions for the existence of asymptotically
stable periodic orbits. Nevertheless, in the planar case, the practical advan-
© 2007 by Taylor & Francis Group, LLC

404
Feedback Control of Dynamic Bipedal Robot Locomotion
1
2
3
2.5
1.5
1
2
3
2.5
1.5
x2
x∗
2
P2(x2)
(a) Return map.
1
2
3
2.17
2.175
2.165
1.5
2.5
x2
x∗
2
P2(x2)
(b) Return map with enlarged x-axis scaling.
Figure B.7. Poincar´e return map for the van der Pol oscillator (thick lines)
with an unstable stable limit cycle. A ﬁxed point corresponds to the inter-
section of the Poincar´e map with the identity map (thin lines) and is denoted
by x∗
2. Since the x1 component is constant on the Poincar´e section, the ac-
tual ﬁxed point is x∗= (0; x∗
2). The return map is shown in (a) and (b) with
diﬀerent scales, due to the very rapid divergence of the van der Pol oscillator
for ϵ = −1.
tages of the Poincar´e return map are sometimes hard to see. Clearly, ﬁnding
the asymptotically stable limit cycle of the van der Pol equation for ϵ = +1 is
very easy to do with a simulation because the limit cycle is “globally” attrac-
tive in the sense that the solution for every nonzero initial condition converges
to it. No matter how disorganized your search is, you can’t help but ﬁnd the
limit cycle! When ϵ = −1, with probability one, random initialization and
forward simulation will never ﬁnd the unstable limit cycle, whereas Poincar´e’s
method works in this case with no more diﬃculty than in the (stable) case of
ϵ = +1. This appears to be a plus for Poincar´e’s method. However, since a
simple time-reversal renders the unstable limit cycle stable, the advantage of
Poincar´e’s method for the van der Pol equation is still debatable.
Therefore, other than mathematical rigor, why bother with the method
of Poincar´e sections? If the rate of convergence to a limit cycle is slow, if
the domain of attraction is small, or if the goal is to establish that a system
does not possess a limit cycle in a given region of its state space, then, even
in the case of planar systems, Poincar´e’s method is superior to brute force
simulation with random initialization.
The power of Poincar´e’s method is
more evident in higher-dimensional systems of diﬀerential equations because
it suggests bringing in additional numerical tools to the problem of ﬁnding
periodic orbits and determining if they are stable.
As shown in Fig. B.9,
Poincar´e’s method is conceptually unchanged by increasing the dimension
of the system: the Poincar´e section S is deﬁned by placing a hyper surface
transversal to a suspected periodic orbit, and the Poincar´e return map P :
© 2007 by Taylor & Francis Group, LLC

Essential Technical Background
405
t
t
x1
x2
t1
t2
t3
t4
Figure B.8. Sequence of impact times, {tk}∞
k=1. When used as event-based
sampling times of the solution of the van der Pol oscillator, they generate a
discrete-time system on S, denoted x[k +1] = P(x[k]), where x[k] := x(tk) :=
φ(tk, x0).
S →S is deﬁned by initializing the diﬀerential equation in S and following the
resulting solution until its ﬁrst intersection with S on the opposite side; if no
such intersection occurs, the Poincar´e return map is not deﬁned at that point.
Since periodic orbits of the diﬀerential equation correspond to ﬁxed points of
the Poincar´e map, they correspond to ﬁnding roots of P(x)−x = 0, a problem
for which many numerical algorithms exist.
Applying a Newton-Raphson
algorithm to the Poincar´e return map can signiﬁcantly accelerate the search
for periodic orbits. Once a ﬁxed point has been found, the equivalence between
ﬁxed points and equilibrium points of the discrete-time system x[k + 1] =
P(x[k]), x[0] ∈S, can be exploited to test for stability or instability of an
x∗
P(x)
x
S
φ(t, x∗)
φ(t, x)
Figure B.9. Geometric interpretation of a Poincar´e return map P : S →S
for an ordinary diﬀerential equation (nonhybrid) as event-based sampling of
the solution near a periodic orbit. The Poincar´e section, S, may be any hyper
(codimension one) C1-surface that is transversal to the periodic orbit.
© 2007 by Taylor & Francis Group, LLC

406
Feedback Control of Dynamic Bipedal Robot Locomotion
orbit by analyzing the eigenvalues of the Jacobian linearization about the
equilibrium. Practical numerical algorithms for these computations are one
of the subjects of the book [173].
All of these ideas have been applied to the problem of ﬁnding stable walking
motions in bipeds. The most signiﬁcant success stories have clearly been in
passive robots (i.e., no actuators) [74,93,115,118,228], particularly, the sur-
prising discovery of asymptotically stable limit cycles in a three-dimensional
passive bipedal robot [59]. So far, there are only a few reported cases where
Poincar´e’s method has been used as a basis for tuning controller parameters
so as to create an asymptotically stable limit cycle in an actuated bipedal
robot [143,169,170].
B.4
Planar Lagrangian Dynamics
This section provides a very selective overview of Lagrangian dynamics as
used to compute dynamic models of planar bipedal robots. Much more gen-
eral treatments are available in most textbooks dealing with robotic manip-
ulator dynamics and some recent monographs on model-based animation of
human ﬁgures.
The topics reviewed include open versus closed kinematic
chains, computing the kinetic and potential energies of a single link and mul-
tiple links in common situations, absolute versus relative angles, generalized
coordinates, the Lagrangian and Lagrange’s equation (also called the Euler-
Lagrange equation), angular momentum, body coordinates, shape variables,
cyclic coordinates, and holonomic constraints. Familiarity with center of mass
and moment of inertia is assumed; see Appendix B.4.10 and Appendix D.
B.4.1
Kinematic Chains
The robots treated in this book will be modeled as connections of rigid links
through revolute joints, with all links lying in a common plane and the axes
of rotation of the joints being normal to the plane. Each joint connects two
links and only two links. If m > 2 links are connected at a common point,
then the connection uses m −1 joints.
In this review of mechanics, each
joint is further assumed to be ideal, meaning that the connection is rigid8
and frictionless. Finally, links are implicitly assumed to be noninterfering,
meaning that, magically, individual links can assume arbitrary positions and
orientations without contacting one another. Mechanisms can be designed to
8That is, the joint is not ﬂexible as is the case, for example, in robots with actuator
transmission compliance.
© 2007 by Taylor & Francis Group, LLC
be noninterfering, cf. RABBIT or ERNIE in Chapter 2.

Essential Technical Background
407
(a) The
closed-loop
involves
only
links.
(b) The loop involves
the inertial
frame through the two pivots.
Figure B.10. Closed kinematic chains.
A collection of links is called a kinematic chain if it cannot be separated
into two disjoint sets of links without a common joint. A kinematic chain is
open if it does not contain any loops. As in Fig. B.10, if at least one link
in the chain is connected to a rigid base called the ground, then the ground
must be included when determining if a chain contains a loop or not. A loop
is also called a closed kinematic chain. Recalling our convention that a joint
can connect only two links, an open kinematic chain with N links has N −1
joints. An open kinematic chain is called a serial chain if each link has at most
two joints and the joints are not colocated; otherwise, it is a tree structure;
see Fig. B.11.
A pivot is an ideal revolute joint whose axis of revolution has a ﬁxed position
with respect to the inertial frame; in other words, it functions as a base. A
kinematic chain where exactly one link is connected to a pivot is said to be
pinned; see Fig. B.11. In a tree structure, the pivot may be colocated with
a revolute joint of the chain. If no point on a kinematic chain is constrained
with respect to the inertial frame, the chain is said to be free or freely evolving.
Remark B.5
We will assume that individual links have nonzero mass,
length, and moment of inertia about their center of mass. While the nonzero
mass and moment of inertia assumptions are not strictly necessary on every
link in order to arrive at a “well deﬁned” mechanical model, they rule out
certain trivial cases that we would otherwise have to carefully delineate. We
leave it to the interested reader to include this extra generality.
The connection of links through prismatic joints is also not considered.
The interested reader should have no trouble extending the results to include
robots with prismatic knees, for example.
© 2007 by Taylor & Francis Group, LLC

408
Feedback Control of Dynamic Bipedal Robot Locomotion
(a) A serial chain.
(b) A chain with a tree.
(c) A pinned serial chain.
Figure B.11. Open kinematic chains.
B.4.2
Kinetic and Potential Energy of a Single Link
The kinetic and potential energies of a collection of N-links are formed from
the sums of the kinetic and potential energies of each individual link. Hence,
consider ﬁrst a single, free, link of mass mi as depicted in Fig. B.12.
A
means must be established on the link for situating the relative positions of
one or more revolute joints, the center of mass, and, possibly, the end of the
link. Typically, measurements are made relative to a joint or to a link end.
Formally, this establishes a coordinate frame on the link, with the origin at
some point of interest, typically a joint or link end.9 With respect to the link
coordinate frame, a point will be denoted by (ℓh; ℓv).
As in Fig. B.13, let pi = (ph
i ; pv
i ) ∈R2 denote the Cartesian position of
the origin of the coordinate frame of link-i with respect to a ﬁxed coordinate
frame, called a world frame or an inertial frame, and let θabs
i
be an element
in S, the circle,10 denote its orientation with respect to the inertial frame.
The angle θabs
i
is called the absolute orientation or the absolute angle of link-i
since it references the link’s orientation to the inertial frame. We will assume
that all angles are positive in the counterclockwise direction, more precisely,
we are assuming that all angles are measured such that they are increasing in
the counterclockwise direction. The consequences of using the opposite sign
The conﬁguration space of the link is Qlink := S × R2. Referring again to
Fig. B.13, any point (¯ℓh
i ; ¯ℓv
i ) in the link frame can be mapped to its Cartesian
9See Appendix D for a more general treatment.
10We identify the circle with R modulo 2π so that the diﬀerence of two values in S makes
sense.
© 2007 by Taylor & Francis Group, LLC
convention are spelled out explicitly in Appendix B.4.9.

Essential Technical Background
409
Li
ℓv
cm,i
ℓh
cm,i
(a)
Li
ℓv
cm,i
ℓh
cm,i
(b)
ℓh
ℓv
(c)
ℓh
ℓv
(d)
Figure B.12. Establishing local coordinates on a link. Typically, measure-
ments are presented relative to a joint or to a link end, as shown in (a) and
(b). Formally, this establishes a coordinate axis on the link, as shown in (c)
and (d).
θabs
i
pi
ℓh
ℓv
ph
i
pv
i
Figure B.13. Conﬁguration of a link. Let pi = (ph
i ; pv
i ) be the position of
the origin of the link coordinate frame with respect to the inertial frame. This
point is most correctly denoted by the arrow directed from the origin of the
inertial frame to the origin of the link frame, but, most commonly on a ﬁgure,
it is shown by translating the inertial frame to the origin of the link frame.
An advantage of the latter convention is that the absolute orientation of the
link with respect to the inertial frame, θabs
i
, is easily indicated. Note that
angles are positive in the counterclockwise direction.
© 2007 by Taylor & Francis Group, LLC

410
Feedback Control of Dynamic Bipedal Robot Locomotion
coordinates (¯ph
i ; ¯pv
i ) in the inertial frame using (θabs
i
; ph
i ; pv
i ) ∈Qlink:

¯ph
i
¯pv
i

=

ph
i
pv
i

+ R

θabs
i

 ¯ℓh
i
¯ℓv
i

,
(B.95)
where
R

θabs
i

:=

cos(θabs
i
) −sin(θabs
i
)
sin(θabs
i
)
cos(θabs
i
)

.
(B.96)
The velocity of the link in the inertial frame is given by

˙¯ph
i
˙¯pv
i

=

˙ph
i
˙pv
i

+

0 −1
1
0

R

θabs
i

 ¯ℓh
i
¯ℓv
i

˙θabs
i
,
(B.97)
where ˙θabs
i
is the (absolute) angular velocity, and we have used the fact that
d
dθR (θ) =

0 −1
1
0

R (θ) ,
(B.98)
that is,
d
dθ

cos(θ) −sin(θ)
sin(θ)
cos(θ)

=

0 −1
1
0
 
cos(θ) −sin(θ)
sin(θ)
cos(θ)

.
(B.99)
When the link is free, its conﬁguration and velocity can take on any value in
T Qlink and one says that the link has three degrees of freedom11 (DOF).
The position of the center of mass of link-i in the world frame can be
expressed as

ph
cm,i
pv
cm,i

=

ph
i
pv
i

+ R

θabs
i


ℓh
cm,i
ℓv
cm,i

,
(B.100)
and its velocity is given by

˙ph
cm,i
˙pv
cm,i

=

˙ph
i
˙pv
i

+

0 −1
1
0

R

θabs
i


ℓh
cm,i
ℓv
cm,i

˙θabs
i
.
(B.101)
The position and velocity of the center of mass will now be used to determine
the potential energy and kinetic energy of the link.
We assume now that gravity is directed downward along the vertical axis
of the inertial frame. With this assumption, the potential energy of the link
is
Vi = mig0pv
cm,i,
(B.102)
11Recall that we are assuming that a link has nonzero mass, length, and moment of inertia
about the center of mass. These assumptions rule out a point mass, which only has two
degrees of freedom because its orientation and angular velocity would not be deﬁned.
© 2007 by Taylor & Francis Group, LLC

Essential Technical Background
411
where g0 is the gravitational constant. The kinetic energy of the link is given
by
Ki = 1
2mi
 
˙ph
cm,i
2 +

˙pv
cm,i
2!
+ 1
2Jcm,i
 
˙θabs
i
!2
,
(B.103)
where Jcm,i is the moment of inertia about the center of mass of link-i. In
many cases, one has at hand instead the moment of inertia about the origin
of the link’s coordinate frame. In this case, substituting (B.101) into (B.103)
allows the kinetic energy to be computed as
Ki = 1
2mi
 
˙ph
i
2 + ( ˙pv
i )2!
+ 1
2Ji
 
˙θabs
i
!2
+ mi

˙pv
i
−˙ph
i
′
R

θabs
i


ℓh
cm,i
ℓv
cm,i

˙θabs
i
,
(B.104)
where
Ji = Jcm,i + mi

(ℓh
cm,i)2 + (ℓv
cm,i)2
(B.105)
is the moment of inertia about the origin of the link’s coordinate frame. This
fact is often called the parallel axis theorem.
Remark B.6
The kinetic energy of a free single link is a positive deﬁnite
function of the velocities when we assume that the mass is nonzero and the
moment of inertia about the center of mass is nonzero. Indeed, (B.103) can
be rewritten as
Ki = 1
2
⎡
⎢⎣
˙θabs
i
˙ph
cm,i
˙pv
cm,i
⎤
⎥⎦
′ ⎡
⎢⎣
Jcm,i 0
0
0
mi 0
0
0 mi
⎤
⎥⎦
⎡
⎢⎣
˙θabs
i
˙ph
cm,i
˙pv
cm,i
⎤
⎥⎦.
(B.106)
Similarly, (B.104) can be rewritten as
Ki = 1
2
⎡
⎢⎣
˙θabs
i
˙ph
i
˙pv
i
⎤
⎥⎦
′ ⎡
⎢⎣
Ji d12 d13
d12 mi
0
d13 0
mi
⎤
⎥⎦
⎡
⎢⎣
˙θabs
i
˙ph
i
˙pv
i
⎤
⎥⎦,
(B.107)
where
d12 = −mi
2

ℓh
cm,i sin(θabs
i
) + ℓv
cm,i cos(θabs
i
)

(B.108)
d13 = −mi
2

ℓv
cm,i sin(θabs
i
) −ℓh
cm,i cos(θabs
i
)

.
(B.109)
Using (B.105), (B.107) can be shown to be positive deﬁnite.
In the case of N links, we simply sum up (B.102) and (B.103) for i =
1, . . . , N to compute thetotal potential energy and the total kinetic energy,
© 2007 by Taylor & Francis Group, LLC

412
Feedback Control of Dynamic Bipedal Robot Locomotion
θabs
i
Figure B.14. A single pinned link. Its conﬁguration can be speciﬁed with a
single number, the absolute orientation, θabs
i
.
respectively, in terms of the 3N conﬁguration coordinates (θabs
i
; ph
i0; pv
i0),
i = 1, . . . , N, and the 3N velocities, ( ˙θabs
i
; ˙ph
i0; ˙pv
i0). When the links are free
(no joints), there is nothing more to it as the coordinates are independent.
However, joints clearly impose constraints on the conﬁgurations and veloci-
ties, and consequently, the conﬁgurations and velocities can be parameterized
with fewer coordinates. Developing this idea leads to the important notion of
generalized coordinates.
The basic idea of a generalized coordinate can be seen in a pinned single link,
as in Fig. B.14. For simplicity, assume that the link coordinate frame and the
inertial frame are both located at the pivot so that the constraints imposed
by the pivot become particularly simple: (ph
i ; pv
i ) = (0; 0) and ( ˙ph
i ; ˙pv
i ) =
(0; 0). Consequently, the allowed conﬁguration and velocity of the link can
be expressed in terms of a single coordinate and derivative, (θabs
i
; ˙θabs
i
) ∈T S.
The link is said to have one DOF. The potential and kinetic energies can
obviously be expressed in terms of θabs
i
and ˙θabs
i
. The coordinate θabs
i
is a
special case of a generalized coordinate.
B.4.3
Free Open Kinematic Chains
Consider a free N-link open kinematic chain as depicted in Figs. B.11(a)
and B.11(b). Number the links one through N, and let pi = (ph
i ; pv
i ) ∈R2
denote the Cartesian position of the origin of the coordinate frame of link-i
with respect to an inertial frame, and let θabs
i
∈S denote the link’s absolute
orientation (i.e., its orientation with respect to the inertial frame). Number
the joints one through N −1, and denote by a(j) and b(j) the two links
connected by the j-th joint. Denote the position of joint-j on link-a(j) (resp.
link-b(j)) by (ℓh
a(j),j; ℓv
a(j),j) (resp. (ℓh
b(j),j; ℓv
b(j),j)). The constraints imposed
© 2007 by Taylor & Francis Group, LLC

Essential Technical Background
413
by the joints yield 2(N −1) equations:

ph
a(j)
pv
a(j)

+ R
 
θabs
a(j)
! 
ℓh
a(j),j
ℓv
a(j),j

−

ph
b(j)
pv
b(j)

−R
 
θabs
b(j)
! 
ℓh
b(j),j
ℓv
b(j),j

=

0
0

,
(B.110)
for j = 1, . . . , N −1.
For an open kinematic chain, the set of equations (B.110) is always con-
sistent (i.e., there always exist solutions) for arbitrary values of the absolute
angles. Moreover, for any i0 ∈{1, . . ., N}, the set of all solutions can be
written in the form12

ph
i
pv
i

=

ph
i0
pv
i0

+
 ˇΥh
i0,i(θabs
1
, . . . , θabs
N )
ˇΥv
i0,i(θabs
1
, . . . , θabs
N )

,
(B.111)
for i ∈{1, . . . , N}, i ̸= i0, where ˇΥh
i0,i and ˇΥv
i0,i are aﬃne in cos(θabs
j
) and
sin(θabs
j
). In other words, the (N + 2)-variables (θabs
1
; . . . ; θabs
N ; ph
i0; pv
i0) pa-
rameterize all conﬁgurations that are compatible with the joint constraints
(B.110). This is another example of generalized coordinates.
Generalized coordinates:
The conﬁguration space of N free links in the
plane is the Cartesian product of the individual conﬁguration spaces, QN
link :=
Qlink×· · ·×Qlink (N-times), and consequently has dimension 3N. The subset
of conﬁgurations compatible with the constraints is
Qf :=
.
(θabs
1
; ph
1; pv
1; . . . ; θabs
N ; ph
N; pv
N) ∈QN
link | (B.110) holds ∀joints
/
.
(B.112)
For a free open kinematic chain, Qf is an (N + 2)-dimensional embedded
submanifold13 of QN
link, and moreover, (θabs
1
; . . . , θabs
N ; ph
i0; pv
i0) is a set of local
12Proving this for a serial chain is a recommended and straightforward exercise.
13This can be shown as follows. Note that (B.110) deﬁnes a smooth mapping Fj : QN
link →
R2, and an easy calculation shows that it has rank two. Deﬁne next F : QN
link →R2(N−1)
by
F =





F1
...
FN−1
	




(B.113)
so that
Qf :=

(θabs
1
; ph
1; pv
1; . . . ; θabs
N ; ph
N; pv
N) ∈QN
link




F (θabs
1
, ph
1, pv
1, . . . , θabs
N , ph
N, pv
N) = 0

.
(B.114)
The deﬁnition of an open kinematic chain is equivalent to rank of F equals 2(N −1), estab-
lishing that Qf has the claimed properties. Alternatively, (B.111) can be used to express Fj
in an explicit manner which simpliﬁes the computation of the rank of F . Equation (B.111)
shows that (θabs
1
; . . . ; θabs
N ; ph
i0; pv
i0) is a set of local coordinates on Qf
© 2007 by Taylor & Francis Group, LLC

414
Feedback Control of Dynamic Bipedal Robot Locomotion
coordinates for Qf. Local coordinates for Qf are called generalized coordinates;
they will be denoted by qf = (q1; . . . ; qN+2).
A few speciﬁc examples of generalized coordinates are discussed. They are
obtained by applying simple diﬀeomorphisms to the generalized coordinates
just identiﬁed.
The center of mass of any collection of N links is related to the center of
mass of the individual links by

ph
cm
pv
cm

=
N

i=1
mi
mtot

ph
cm,i
pv
cm,i

,
(B.115)
where mtot := 5N
i=1 mi is the total mass. Using (B.100) and (B.111), this
can be written as

ph
cm
pv
cm

=

ph
i0
pv
i0

+
 ˜Υh
i0(θabs
1
, . . . , θabs
N )
˜Υv
i0(θabs
1
, . . . , θabs
N )

,
(B.116)
where
 ˜Υh
i0(θabs
1
, . . . , θabs
N )
˜Υv
i0(θabs
1
, . . . , θabs
N )

=
N

i=1
mi
mtot
" ˇΥh
i0,i(θabs
1
, . . . , θabs
N )
ˇΥv
i0,i(θabs
1
, . . . , θabs
N )

+ R

θabs
i

 ¯ℓh
i
¯ℓv
i
#
.
(B.117)
Hence, qf = (θabs
1
; . . . ; θabs
N ; ph
cm; pv
cm) is a set of generalized coordinates for a
free, open kinematic chain.
Deﬁne the relative angle14 between links a(i) and b(i) at joint-i by θrel
i
=
θabs
b(i)−θabs
a(i). Then qf = (θrel
1 ; . . . ; θrel
N−1; θabs
j0 ; ph
i0; pv
i0), for any 1 ≤j0 ≤N and
1 ≤i0 ≤N, is a set of generalized coordinates. To show this for a tree struc-
ture requires notation that we do not need elsewhere, so it is skipped. In the
special case of a serial chain, suppose that the links and joints are numbered
consecutively from one end to the other in such a manner that a(i) = i and
b(i) = i+1. Then it is easy to show that (θrel
1 ; . . . ; θrel
N−1; θabs
1
; ph
1; pv
1) are gen-
eralized coordinates because θabs
j+1 = θabs
1
+θrel
1 +· · ·+θrel
j , for j ∈{1, . . . , N−1}.
The general result follows similar reasoning.
Remark B.7
More generally, at joint-i, the diﬀerence between any two
absolute angles for links a(i) and b(i) will be called a relative angle.
See
Fig. B.15. Absolute and relative angles are invariant under translations of
the inertial frame. Relative angles are also invariant under rotations of the
14Recall that we are assuming that all angles are positive in the counterclockwise direction,
and thus, in particular, θabs
b(i) and θabs
a(i) have the same orientation.
© 2007 by Taylor & Francis Group, LLC

Essential Technical Background
415
θabs
1
θabs
2
θabs
3
θrel
1
θrel
2
(a) Here θabs
2
=
θabs
1
+ θrel
1
and
θabs
3
= θabs
2
+ θrel
2 .
θabs
1
¯θrel
1
¯θrel
2
(b) Here θabs
2
= θabs
1
−¯θrel
1
+ π and
θabs
3
= θabs
3
+ ¯θrel
1
−π.
Figure B.15.
Diﬀerent choices of relative angles.
There is no uniformly
accepted convention for assigning relative angles.
inertial frame. In fact, relative angles give the shape of the kinematic chain,
independent of its orientation and position in the plane.
For this reason,
(θrel
1 ; . . . ; θrel
N−1) are sometimes called shape variables or shape coordinates;
see also the deﬁnition of body coordinates introduced later.
Kinetic and potential energy:
Given a set of generalized coordinates,
qf = (q1; . . . ; qN+2), it is always possible15 to express (θabs
i
; ph
i ; pv
i ) as func-
tions of qf. We abuse notation and write this simply as
⎡
⎢⎣
θabs
i
ph
i
pv
i
⎤
⎥⎦=
⎡
⎢⎣
θabs
i
(qf)
ph
i (qf)
pv
i (qf)
⎤
⎥⎦.
(B.118)
Via the chain rule, the corresponding velocities are computed as
⎡
⎢⎣
˙θabs
i
(qf, ˙qf)
˙ph
i (qf, ˙qf)
˙pv
i (qf, ˙qf)
⎤
⎥⎦=
⎛
⎜
⎝∂
∂qf
⎡
⎢⎣
θabs
i
(qf)
ph
i (qf)
pv
i (qf)
⎤
⎥⎦
⎞
⎟
⎠˙qf.
(B.119)
For later use, note that
∂
∂˙qi
⎡
⎢⎣
˙θabs
i
(qf, ˙qf)
˙ph
i (qf, ˙qf)
˙pv
i (qf, ˙qf)
⎤
⎥⎦= ∂
∂qi
⎡
⎢⎣
θabs
i
(qf)
ph
i (qf)
pv
i (qf)
⎤
⎥⎦.
(B.120)
15Indeed, by deﬁnition of local coordinates of Qf, it is possible to express each of
θabs
1
, . . . , θabs
N , ph
i0, and pv
i0 as functions of qf, and then, (B.111) completes the job.
© 2007 by Taylor & Francis Group, LLC

416
Feedback Control of Dynamic Bipedal Robot Locomotion
Substituting (B.118) and (B.119) into (B.102) and (B.103) yields
Vi(qf) = mig0pv
cm,i(qf),
(B.121)
where mi is the mass of the link and g0 is the gravitational constant, and
Ki(qf, ˙qf) = 1
2mi
 
˙ph
cm,i(qf, ˙qf)
2 +

˙pv
cm,i(qf, ˙qf)
2!
+ 1
2Jcm,i
 
˙θabs
i
(qf, ˙qf)
!2
,
(B.122)
where Jcm,i is the moment of inertia about the center of mass of link-i. Al-
ternatively, (B.104) is used to compute the kinetic energy. We note that Ki
is a quadratic, positive semi-deﬁnite function of ˙qf since
Ki = 1
2 ˙q′
f

mi
∂pcm,i
∂qf
′ ∂pcm,i
∂qf

+ Jcm,i
∂θabs
i
∂qf
′ ∂θabs
i
∂qf

˙qf
(B.123)
The total potential energy is then
Vf(qf) :=
N

i=1
Vi(qf) = mtotg0pv
cm,
(B.124)
and the total kinetic energy is
Kf(qf, ˙qf) :=
N

i=1
Ki(qf, ˙qf).
(B.125)
The total kinetic energy is always a positive deﬁnite,16 quadratic function of
the generalized velocities, and can be written as
Kf(qf, ˙qf) =: 1
2 ˙q′
fDf(qf) ˙qf,
(B.126)
where Df(qf) is (N + 2) × (N + 2) and positive deﬁnite for each qf ∈Qf. The
matrix Df(qf) is called the mass-inertia matrix.
B.4.4
Pinned Open Kinematic Chains
Consider the free N-link open kinematic chain of the previous section, along
with the established notation. Suppose now that the chain is pinned as de-
picted in Fig. B.11(c). Denote the position of the pivot in the inertial frame
by (ph
0; pv
0). Assume that link-i0 is connected to the pivot, and denote the
16See Remark B.10.
© 2007 by Taylor & Francis Group, LLC

Essential Technical Background
417
position of the axis of the pivot in the link frame by (ℓh
i0,0; ℓv
i0,0). The two
constraints imposed by the pivot are

ph
i0
pv
i0

+

cos(θabs
i0 ) −sin(θabs
i0 )
sin(θabs
i0 )
cos(θabs
i0 )
 
ℓh
i0,0
ℓv
i0,0

−

ph
0
pv
0

=

0
0

.
(B.127)
The constraints imposed by the joints are as before, (B.110). For a pinned
open kinematic chain, the combined set of constraint equations, (B.110) and
(B.127), is always consistent (i.e., there always exist solutions) for arbitrary
values of the absolute angles. Moreover, the set of all solutions can be written
in the form

ph
i
pv
i

=

ph
0
pv
0

+
 ¯Υh
i (θabs
1
, . . . , θabs
N )
¯Υv
i (θabs
1
, . . . , θabs
N )

,
(B.128)
for i = 1, . . . , N, where ¯Υh
i0,i and ¯Υv
i0,i are linear in cos(θabs
j
) and sin(θabs
j
).
In other words, the N-variables (θabs
1
; . . . ; θabs
N ) (minimally) parameterize all
conﬁgurations that are compatible with the combined joint and pivot con-
straints, and thus constitute a set of generalized coordinates for a pinned
open kinematic chain.
Generalized coordinates:
The subset of conﬁgurations compatible with
the constraints is
Qs :=
.
(θabs
1
; ph
1; pv
1; . . . ; θabs
N ; ph
N; pv
N) ∈QN
link |
(B.110) and (B.127) hold ∀joints} . (B.129)
By (B.128), Qs is an N-dimensional embedded submanifold and moreover,
(θabs
1
; . . . ; θabs
N ) is a set of local coordinates. By construction,
Qs :=
.
(θabs
1
; ph
1; pv
1; . . . ; θabs
N ; ph
N; pv
N) ∈Qf | (B.127) holds
/
.
(B.130)
Thus, Qs is also an N-dimensional embedded submanifold of Qf.
Remark B.8
The single support or stance phase of a walking or running
bipedal robot will be modeled with a pinned open kinematic chain. Hence,
instead of using “p” for pinned, the subscript “s” is being used in anticipation
of Qs denoting the conﬁguration manifold for the single support phase of
walking or running. The ﬂight phase of running will be modeled with a free
open kinematic chain. The subscript “f” serves handily the dual purpose of
denoting free and ﬂight.
Local coordinates qs = (q1; . . . ; qN) for Qs are called generalized coordi-
nates. Speciﬁc examples include (θabs
1
; . . . ; θabs
N ) and (θrel
1 ; . . . ; θrel
N−1; θabs
j0 ),
for any j0 ∈{1, . . . , N}.
© 2007 by Taylor & Francis Group, LLC

418
Feedback Control of Dynamic Bipedal Robot Locomotion
Kinetic and potential energy:
Given a set of generalized coordinates,
qs = (q1; . . . ; qN), we abuse notation and write
⎡
⎢⎣
θabs
i
ph
cm,i
pv
cm,i
⎤
⎥⎦=
⎡
⎢⎣
θabs
i
(qs)
ph
cm,i(qs)
pv
cm,i(qs)
⎤
⎥⎦.
(B.131)
Via the chain rule, the corresponding velocities are computed
⎡
⎢⎣
˙θabs
i
(qs, ˙qs)
˙ph
cm,i(qs, ˙qs)
˙pv
cm,i(qs, ˙qs)
⎤
⎥⎦=
⎛
⎜
⎝∂
∂qs
⎡
⎢⎣
θabs
i
(qs)
ph
cm,i(qs)
pv
cm,i(qs)
⎤
⎥⎦
⎞
⎟
⎠˙qs.
(B.132)
Substituting (B.131) and (B.132) into (B.102) and (B.103) yields
Vi(qs) = mig0pv
cm,i(qs),
(B.133)
where mi is the mass of the link and g0 is the gravitational constant, and
Ki(qs, ˙qs) = 1
2mi
 
˙ph
cm,i(qs, ˙qs)
2 +

˙pv
cm,i(qs, ˙qs)
2!
+ 1
2Jcm,i
 
˙θabs
i
(qs, ˙qs)
!2
,
(B.134)
where Jcm,i is the moment of inertia about the center of mass of link-i. Al-
ternatively, (B.104) can be used to compute the kinetic energy. Just as in
(B.123), we note that Ki is a quadratic, positive semi-deﬁnite function of ˙qs:
Ki = 1
2 ˙q′
s

mi
∂pcm,i
∂qs
′ ∂pcm,i
∂qs

+ Jcm,i
∂θabs
i
∂qs
′ ∂θabs
i
∂qs

˙qs. (B.135)
The total potential energy is then
Vs(qs) :=
N

i=1
Vi(qs) = mtotg0pv
cm(qs),
(B.136)
and the total kinetic energy is
Ks(qs, ˙qs) :=
N

i=1
Ki(qs, ˙qs).
(B.137)
The total kinetic energy is always a positive deﬁnite (see Remark B.9), quadratic
function of the generalized velocities, and can be written as
Ks(qs, ˙qs) =: 1
2 ˙q′
sDs(qs) ˙qs,
(B.138)
© 2007 by Taylor & Francis Group, LLC

Essential Technical Background
419
where Ds(qs) is N × N and positive deﬁnite for each qs ∈Qs. The matrix
Ds(qs) is called the mass-inertia matrix.
Remark B.9
Note that if Jcm,i > 0, then
rank
N

i=1

Jcm,i
∂θabs
i
(qs)
∂qs
′ ∂θabs
i
(qs)
∂qs

= rank
⎡
⎢⎢⎢⎣
∂θabs
1
(qs)
∂qs
...
∂θabs
N (qs)
∂qs
⎤
⎥⎥⎥⎦= N,
(B.139)
and thus mi > 0 and Jcm,i > 0 are suﬃcient conditions for the mass-inertia
matrix to be positive deﬁnite. This explains the assumptions made in Re-
mark B.5.
B.4.5
The Lagrangian and Lagrange’s Equations
Let ¯N equal N or (N +2), and let Q equal Qs or Qf. Let q = (q1; . . . ; q ¯
N) ∈Q
be a set of generalized coordinates, and let V : Q →R and K : T Q →R be
the total potential energy and total kinetic energy, respectively.
The Lagrangian is the real-valued function L : T Q →R given by the total
kinetic energy minus the total potential energy,
L(q, ˙q) := K(q, ˙q) −V (q).
(B.140)
Lagrange’s equation is
d
dt
∂L
∂˙q −∂L
∂q = Γ,
(B.141)
where Γ is the vector of generalized torques and forces. If the kinetic energy
is quadratic, that is,
K(q, ˙q) = 1
2 ˙q′D(q) ˙q,
(B.142)
then (B.141) results in the second-order diﬀerential equation
D(q)¨q + C(q, ˙q) ˙q + G(q) = Γ,
(B.143)
where G(q) = ∂V (q)
∂q , and C(q, ˙q) ˙q =
 
∂
∂q (D(q) ˙q)
!
˙q −1
2
 
∂
∂q (D(q) ˙q)
!′
˙q. The
matrix function C is not uniquely deﬁned, but it is traditional to choose
Ckj =
¯
N

i=1
1
2
∂Dkj
∂qi
+ ∂Dki
∂qj
−∂Dij
∂qk

˙qi,
(B.144)
where 1 ≤k, j ≤¯N and Ckj is the kj entry of the matrix C.
© 2007 by Taylor & Francis Group, LLC

420
Feedback Control of Dynamic Bipedal Robot Locomotion
B.4.6
Generalized Forces and Torques
The right-hand side of (B.141), Γ, is the sum of the external generalized forces
and torques (moments) acting on the kinematic chain. The computation of
the generalized forces and torques is presented for three cases encountered
in this book. These formulas follow from what is known as the principle of
virtual work or d’Alembert’s principle.
Force acting at a point:
Suppose that a force F = (FT ; FN) is acting on
a kinematic chain at a point pi = (ph
i ; pv
i ). Then
Γi =
∂pi
∂q
′
F.
(B.145)
Torque acting on a single link:
Suppose that a torque τ is acting on a
single link-i of a kinematic chain, that is, the torque is acting between the
link and the inertial frame. Let θabs
i
denote the absolute orientation of the
link. Then
Γi =
∂θabs
i
∂q
′
τ.
(B.146)
Torque acting at a revolute connection of two links:
Suppose that a
torque τ is applied at a revolute joint connecting two links and let θrel
j
be the
associated relative angle. Then
Γj =
"
∂θrel
j
∂q
#′
τ.
(B.147)
B.4.7
Angular Momentum
The objective here is to summarize a few results on angular momentum for
an N-link open kinematic chain that is either free or pinned. To fulﬁll this
objective, we need a planar version of the cross product.
Deﬁne the wedge product of two vectors x := (x1; x2) and y := (y1; y2) in
R2 as
x ∧y := x1y2 −x2y1.
(B.148)
This is a skew symmetric product and is related to the usual cross product17
in R3 as follows: if {e1, e2, e3} are the natural basis vectors in R3, then x∧y =
17In R3, the cross product of two vectors is another vector, and in particular, the cross
product of two vectors in span{e1, e2} lies in span{e3}. The wedge product computes the
coeﬃcient of the vector in span{e3}.
© 2007 by Taylor & Francis Group, LLC

Essential Technical Background
421
[(x1e1 + x2e2) × (y1e1 + y2e2)] · e3. For later use, we also note that
x ∧y =

x1
x2
′ 
0 1
−1 0
 
y1
y2

.
(B.149)
Let pa be a point in the plane. The angular momentum of link-i about the
point pa is
σa,i := mi(pcm,i −pa) ∧˙pcm,i + Jcm,i ˙θabs
i
,
(B.150)
and the total angular momentum about a generic point pa is
σa :=
N

i=1
σa,i
(B.151a)
=
N

i=1
mi(pcm,i −pa) ∧˙pcm,i + Jcm,i ˙θabs
i
(B.151b)
=
N

i=1
 
mipcm,i ∧˙pcm,i + Jcm,i ˙θabs
i
!
−mtotpa ∧˙pcm.
(B.151c)
Taking pa = pcm yields the total angular momentum about the center of mass,
σcm :=
N

i=1
 
mipcm,i ∧˙pcm,i + Jcm,i ˙θabs
i
!
−mtotpcm ∧˙pcm.
(B.152)
For later use, we note a few more facts. Let σb be the total angular mo-
mentum about a point pb. Then,
σa −σb = mtot(pb −pa) ∧˙pcm,
(B.153)
or equivalently,
σa = σb + mtot(pb −pa) ∧˙pcm,
(B.154)
which is sometimes called the angular momentum transfer formula. Taking
pb = pcm in (B.153) yields
σa −σcm = mtot(pcm −pa) ∧˙pcm.
(B.155)
B.4.8
Further Remarks on Lagrange’s Method
The following results can be found in many books on robotics and mechanics.
They are given here in a form that will help in the computation of the impact
map and the zero dynamics of a mechanical system.
© 2007 by Taylor & Francis Group, LLC

422
Feedback Control of Dynamic Bipedal Robot Locomotion
Free chain in coordinates for Qs and the center of mass:
Let qs be
any generalized coordinates for Qs such that qf = (qs; ph
cm; pv
cm) is a set of
generalized coordinates for Qf. Because qs are generalized coordinates for Qs,
we can write θabs
i
(qs). Use (B.100) and (B.111), or (B.116), to write the center
of mass of each link as
pcm,i = pcm + Υi(qs).
(B.156)
From (B.115), it follows that
N

i=1
miΥi(qs) = 0,
(B.157)
which in turn yields
N

i=1
mi ˙Υi(qs) = 0,
(B.158)
where ˙Υi(qs) = ∂Υi(qs)
∂qs
˙qs.
We now compute the total kinetic energy, using expression (B.103) for the
kinetic energy of an individual link:
K = 1
2
N

i=1
$
mi ˙p′
cm ˙pcm + 2mi ˙p′
cm
∂Υi(qs)
∂qs
˙qs + ˙q′
smi
∂Υi(qs)
∂qs
′ ∂Υi(qs)
∂qs
˙qs
+ Jcm,i ˙q′
s
∂θabs
i
(qs)
∂qs
′ ∂θabs
i
(qs)
∂qs
˙qs

,
(B.159)
which, using (B.158), simpliﬁes to
K = 1
2mtot ˙p′
cm ˙pcm
+ 1
2 ˙q′
s
N

i=1

mi
∂Υi(qs)
∂qs
′ ∂Υi(qs)
∂qs
+ Jcm,i
∂θabs
i
(qs)
∂qs
′ ∂θabs
i
(qs)
∂qs

˙qs.
(B.160)
Hence, in the chosen coordinates, the mass-inertia matrix is block diagonal
Df(qf) =

A(qs)
0
0
mtotI2×2

,
(B.161)
where
A(qs) :=
N

i=1

mi
∂Υi(qs)
∂qs
′ ∂Υi(qs)
∂qs
+ Jcm,i
∂θabs
i
(qs)
∂qs
′ ∂θabs
i
(qs)
∂qs

.
(B.162)
© 2007 by Taylor & Francis Group, LLC

Essential Technical Background
423
Using (B.156), the total angular momentum about a generic point pa can
be expressed as
σa = mtot(pcm −pa) ∧˙pcm +
N

i=1
miΥi ∧˙Υi + Jcm,i ˙θabs
i
.
(B.163)
Taking pa = pcm yields the total angular momentum about the center of mass,
σcm :=
N

i=1
miΥi ∧˙Υi + Jcm,i ˙θabs
i
.
(B.164)
Remark B.10
Recall that we have assumed mi > 0 and Jcm,i > 0. It
follows that
rank
N

i=1

Jcm,i
∂θabs
i
(qs)
∂qs
′ ∂θabs
i
(qs)
∂qs

= rank
⎡
⎢⎢⎢⎣
∂θabs
1
(qs)
∂qs
...
∂θabs
N (qs)
∂qs
⎤
⎥⎥⎥⎦= N,
(B.165)
which shows that A is positive deﬁnite, and hence Df is also positive deﬁnite.
Body coordinates and cyclic variables:
Consider an N-link open kine-
matic chain, pinned or free. If a point on the “body” (i.e., the kinematic chain)
is represented with respect to a Cartesian coordinate frame attached to one
of the links instead of the inertial frame, then the resulting coordinate repre-
sentation is invariant under translations and rotations of the inertial frame,
which is equivalent to being invariant under changes in the position and ori-
entation of the body with respect to the inertial frame. Developing this idea
by repeating the development followed for generalized coordinates yields what
are called body coordinates. We will take a short cut and use the following
deﬁnition: qb = (q1; . . . ; qN−1) is a set of body coordinates with respect to
a coordinate frame attached to link−i0 of an N-link open kinematic chain if
any point ¯p on the chain can be expressed in the form

¯ph
¯pv

=

ph
i0
pv
i0

+ R

θabs
i0

 ¯ℓh
i0(qb)
¯ℓv
i0(qb)

,
(B.166)
and qs = (qb; θabs
i0 ) is a set of generalized coordinates for Qs. The last require-
ment is equivalent to qf = (qb; θabs
i0 ; ph
i0; pv
i0) is a set of generalized coordinates
for Qf.
As long as the absolute angles θabs
i
, 1 ≤i ≤N are deﬁned with the same
orientation, the set of N −1 diﬀerences θabs
i
−θabs
i0 , 1 ≤i ≤N, i ̸= i0,
form a set of body coordinates associated with link-i0. The relative angles
(θrel
1 ; . . . ; θrel
N−1) form a set of body coordinates with respect to any link-i0.
© 2007 by Taylor & Francis Group, LLC

424
Feedback Control of Dynamic Bipedal Robot Locomotion
Some important properties associated with body coordinates are summarized
next.
Proposition B.8
Let qb be a set of body coordinates associated with link-i0 of an N-link open
kinematic chain. Let qs = (qb; θabs
i0 ) and qf = (qb; θabs
i0 ; ph
i0; pv
i0). Let q stand
for qs or qf. The following statements hold:
(a)
∂
∂qN θabs
i
(q) ≡1, for i ∈{1, . . ., N};
(b) Any point p on the kinematic chain satisﬁes
∂
∂qN

(ph −ph
i0)(q)
(pv −pv
i0)(q)

=

0 −1
1
0
 
(ph −ph
i0)(q)
(pv −pv
i0)(q)

,
(B.167)
(c) and hence, the centers of mass satisfy
∂
∂qN

(ph
cm,i −ph
i0)(q)
(pv
cm,i −pv
i0)(q)

=

0 −1
1
0
 
(ph
cm,i −ph
i0)(q)
(pv
cm,i −pv
i0)(q)

,
(B.168)
for i ∈{1, . . . , N}, and
∂
∂qN

(ph
cm −ph
i0)(q)
(pv
cm −pv
i0)(q)

=

0 −1
1
0
 
(ph
cm −ph
i0)(q)
(pv
cm −pv
i0)(q)

;
(B.169)
(d) The mass-inertia matrix for the pinned chain satisﬁes
∂
∂qN Ds(qs) ≡0,
and hence, Ds depends only on qb.
If the generalized coordinates are chosen instead as qf = (qb; θabs
i0 ; ph
cm; pv
cm),
where qb are body coordinates associated with link-i0, then (a), (b) and (c)
still hold, and moreover,
(e) the mass-inertia matrix for the free chain, Df, has the block-diagonal
form given in (B.161), with
∂
∂qN A(qs) ≡0; in other words, both Df and
A depend only only on qb.
Remark B.11
If all of the absolute angles do not have the same orien-
tation, then (a) of Proposition B.8 must be modiﬁed to take into account
sign diﬀerences. Recall that we assume all absolute angles are positive in the
counterclockwise direction.
Proof
For simplicity of notation in establishing (a), assume i0 = N. Be-
cause

θabs
1
−θabs
N ; · · · ; θabs
N−1 −θabs
N

is a set of body coordinates, there locally
© 2007 by Taylor & Francis Group, LLC

Essential Technical Background
425
exists a function F such that
⎡
⎢⎢⎣
θabs
1
−θabs
N
...
θabs
N−1 −θabs
N
⎤
⎥⎥⎦= F(qb),
(B.170)
and hence
⎡
⎢⎢⎣
θabs
1
...
θabs
N−1
⎤
⎥⎥⎦=
⎡
⎢⎢⎣
θabs
N
...
θabs
N
⎤
⎥⎥⎦+ F(qb).
(B.171)
From this, part (a) is immediate. Part (b) is immediate from (B.166), and
this gives (c) as well. If the deﬁnition of kinetic energy had been developed
from fundamentals as in Appendix D, part (d) would follow immediately
from invariance of the Euclidean norm of the velocities under a rotation of
the inertial frame, and part (e) would follow from invariance of the Euclidean
norm of the velocities under a rotation of the inertial frame and a translation of
the inertial frame. To prove these results using the formalism of this summary
of planar Lagrangian dynamics, we ﬁrst assume the chain is pinned at p0 and
use (B.166) to write

ph
0
pv
0

=

ph
i0
pv
i0

+ R

θabs
i0

 ¯ℓh
i0,0(qb)
¯ℓv
i0,0(qb)

,
(B.172)
where p0 = (ph
0; pv
0) is the Cartesian position of the pivot, and hence (B.166)
is equivalent to

¯ph
¯pv

=

ph
0
pv
0

+ R

θabs
i0

 ˜ℓh
i0(qb)
˜ℓv
i0(qb)

,
(B.173)
where
 ˜ℓh
i0(qb)
˜ℓv
i0(qb)

=
 ¯ℓh
i0(qb)
¯ℓv
i0(qb)

−
 ¯ℓh
i0,0(qb)
¯ℓv
i0,0(qb)

.
(B.174)
Using (B.173) and the fact that the pivot is ﬁxed, the velocity of the center
of mass of link-i can be expressed in the form

˙ph
cm,i
˙pv
cm,i

= R

θabs
i0

"
∂
∂qb
 ˜ℓh
cm,i(qb)
˜ℓv
cm,i(qb)
#
˙qb
+

0 −1
1
0

R

θabs
i0

 ˜ℓh
cm,i(qb)
˜ℓv
cm,i(qb)

˙θabs
i0 .
(B.175)
Because

0 −1
1
0

R

θabs
i0

= R

θabs
i0


0 −1
1
0

,
(B.176)
© 2007 by Taylor & Francis Group, LLC

426
Feedback Control of Dynamic Bipedal Robot Locomotion
(B.175) yields

˙ph
cm,i
˙pv
cm,i

= R

θabs
i0

""
∂
∂qb
 ˜ℓh
cm,i(qb)
˜ℓv
cm,i(qb)
#
˙qb +

0 −1
1
0
  ˜ℓh
cm,i(qb)
˜ℓv
cm,i(qb)

˙θabs
i0
#
.
(B.177)
Substituting this expression into (B.122) shows that the kinetic energy of
link-i is independent of qN = θabs
i0 , hence the total kinetic energy is as well.
We now just sketch the proof of the second part of the proposition since
it follows very closely the reasoning used above.
In the coordinates qf =
(qb; θabs
i0 ; ph
cm; pv
cm) the proof of (a) is the same as above. Next, we use (B.166)
to write

ph
cm
pv
cm

=

ph
i0
pv
i0

+ R

θabs
i0

 ¯ℓh
i0,cm(qb)
¯ℓv
i0,cm(qb)

,
(B.178)
and hence (B.166) is equivalent to

¯ph
¯pv

=

ph
cm
pv
cm

+ R

θabs
i0

 ˜ℓh
i0(qb)
˜ℓv
i0(qb)

,
(B.179)
where this time
 ˜ℓh
i0(qb)
˜ℓv
i0(qb)

=
 ¯ℓh
i0(qb)
¯ℓv
i0(qb)

−
 ¯ℓh
i0,cm(qb)
¯ℓv
i0,cm(qb)

.
(B.180)
Parts (b) and (c) are immediate from (B.179). Part (e) is established using
the reasoning employed in establishing (B.161).
Variables that do not appear in the mass-inertia matrix are called cyclic
variables. When coordinates are chosen in the form qs = (qb; θabs
i0 ), then qN is
cyclic for a pinned open kinematic chain; this is just expressing the invariance
of the kinetic energy under rotations of the inertial frame, or of the chain with
respect to the inertial frame. Similarly, when coordinates are chosen in the
form qf = (qb; θabs
i0 ; ph
cm; pv
cm), then qN, ph
cm, and pv
cm are cyclic for a free open
kinematic chain; this is just expressing the invariance of the kinetic energy
under rotations and translations of the inertial frame, or of the chain with
respect to the inertial frame.
Conjugate momenta:
¯
and let Q equal Qs or Qf. Let q = (q1; . . . ; q ¯
N) ∈Q be a set of general-
ized coordinates, and let L(q, ˙q) := K(q, ˙q) −V (q) be the Lagrangian. The
generalized conjugate momenta, or just conjugate momenta for short, are
¯σi := ∂
∂˙qi
L(q, ˙q),
(B.181)
© 2007 by Taylor & Francis Group, LLC
As in Appendix B.4.5, let N equal N or (N + 2),

Essential Technical Background
427
for i ∈{1, . . . , ¯N}. Since18
∂
∂˙qi L(q, ˙q) =
∂
∂˙qi K(q, ˙q), the conjugate momenta
can also be computed as ¯σi :=
∂
∂˙qi K(q, ˙q), which is convenient because it
corresponds to
¯σi = di(q) ˙q,
(B.182)
where di is the i-th row of D.
By Lagrange’s equation, (B.141),
d
dt ¯σi = ∂L(q, ˙q)
∂qi
+ γi,
(B.183)
where γi is the i-th row of Γ. If qi is cyclic, this simpliﬁes to
d
dt ¯σi = −∂V (q)
∂qi
+ γi.
(B.184)
Proposition B.9
Let qb be a set of body coordinates associated with link-i0 of an N-link open
kinematic chain. Let qs = (qb; θabs
i0 ) and qf = (qb; θabs
i0 ; ph
cm; pv
cm). Then the
following statements hold:
(a) if the chain is free,
∂
∂˙qN L(qf, ˙qf) = σcm, the angular momentum about
the center of mass, and
d
dtσcm = γN;
(b) if the chain is pinned,
∂
∂˙qN L(qs, ˙qs) = σ0, the angular momentum about
the pivot,19 and
d
dtσ0 = −mtotg0(ph
cm −ph
0) + γN,
(B.185)
where p0 = (ph
0; pv
0) is the Cartesian position of the pivot and γN is the
external torque applied about the pivot.
Proof
To prove (a) use (B.160) to compute
¯σN =
N

i=1

mi
∂Υi
∂qN
′
˙Υi + Jcm,i ˙θabs
i
∂θabs
i
∂qN

.
(B.186)
Then, using Proposition B.8, this can be written as
¯σN =
N

i=1
"
miΥ′
i

0 1
−1 0

˙Υi + Jcm,i ˙θabs
i
#
.
(B.187)
18This is because the potential energy is assumed to depend only upon the conﬁguration
variables and not the velocities.
19In (B.151a), take pa = p0, the pivot point.
© 2007 by Taylor & Francis Group, LLC

428
Feedback Control of Dynamic Bipedal Robot Locomotion
Applying the deﬁnition of the wedge product yields,
¯σN =
N

i=1
 
miΥi ∧˙Υi + Jcm,i ˙θabs
i
!
,
(B.188)
which, when compared to (B.164), yields the result.
From (B.124), ∂V (qf)
∂qN
= mtotg0
∂pv
cm
∂qN = 0. Hence,
d
dtσcm = d
dt ¯σN = γN.
To prove (b), we once again use (B.160), but this time with pcm expressed
as a function of qs, to compute
¯σN = mtot
∂pcm
∂qN
′
˙pcm +
N

i=1

mi
∂Υi
∂qN
′
˙Υi + Jcm,i ˙θabs
i
∂θabs
i
∂qN

.
(B.189)
Then, using Proposition B.8, this can be written as
¯σN = mtot (pcm −p0)′

0 1
−1 0

˙pcm +
N

i=1
"
miΥ′
i

0
1
−1 0

˙Υi + Jcm,i ˙θabs
i
#
.
(B.190)
Applying the deﬁnition of the wedge product yields,
¯σN = mtot (pcm −p0) ∧˙pcm +
N

i=1
 
miΥi ∧˙Υi + Jcm,i ˙θabs
i
!
.
(B.191)
Comparing (B.191) to (B.163) for pa = p0 yields ¯σN = σ0.
From (B.136),
∂V (q)
∂qN
= mtotg0
∂pv
cm
∂qN .
Applying Proposition B.8 (c) with
i0 as the link attached to the pivot and pi0 = p0, this becomes
∂V (q)
∂qN
=
mtotg0(ph
cm −ph
0), which shows the result.
B.4.9
Sign Convention on Measuring Angles
The purpose of this section is to note the consequences of the sign convention
used to measure angles. The standing assumption in this review of mechanics
has been that angles are positive when measured in the counterclockwise. This
assumption was made because it is the most common.
The ﬁrst remark is that sign convention is only important when speaking of
quantities referenced to the inertial frame, such as absolute angles, absolute
angular velocity, and angular momentum. For example, when angles are mea-
sured to increase in the counterclockwise direction, the angular momentum
of a link has been deﬁned in (B.150) so that it is positive when the link is
rotating counterclockwise. In the following, the required changes for working
with the clockwise convention of angle measurement are detailed. The most
important changes involve angular momentum and its deﬁnition via the wedge
product.
© 2007 by Taylor & Francis Group, LLC

Essential Technical Background
429
Angular position and velocity:
Assume that angles increase in the clock-
wise direction. Then the rotation matrix in (B.96) should be deﬁned as
R

θabs
i

:=

cos(θabs
i
)
sin(θabs
i
)
−sin(θabs
i
)
cos(θabs
i
)

.
(B.192)
The velocity of a link in the inertial frame is then given by

˙¯ph
i
˙¯pv
i

=

˙ph
i
˙pv
i

+

0 1
−1 0
 
cos(θabs
i
)
sin(θabs
i
)
−sin(θabs
i
)
cos(θabs
i
)
  ¯ℓh
i
¯ℓv
i

˙θabs
i
,
(B.193)
because
d
dθ

cos(θ)
sin(θ)
−sin(θ)
cos(θ)

=

0 1
−1 0
 
cos(θ)
sin(θ)
−sin(θ)
cos(θ)

.
(B.194)
Because of (B.194), formulas (B.167), (B.168), and (B.169) in Proposi-
tion B.8 must be modiﬁed.
For the convenience of the reader, the entire
proposition is restated.
Proposition B.10
Let qb be a set of body coordinates associated with link-i0 of an N-link open
kinematic chain. Let qs = (qb; θabs
i0 ), where θabs
i0
is measured so that it in-
creases in the clockwise direction, and set qf = (qb; θabs
i0 ; ph
i0; pv
i0).
Let q
stand for qs or qf. The following statements hold:
(a)
∂
∂qN θabs
i
(q) ≡1, for i ∈{1, . . ., N};
(b) Any point p on the kinematic chain satisﬁes
∂
∂qN

(ph −ph
i0)(q)
(pv −pv
i0)(q)

=

0 1
−1 0
 
(ph −ph
i0)(q)
(pv −pv
i0)(q)

,
(B.195)
(c) and hence, the centers of mass satisfy
∂
∂qN

(ph
cm,i −ph
i0)(q)
(pv
cm,i −pv
i0)(q)

=

0 1
−1 0
 
(ph
cm,i −ph
i0)(q)
(pv
cm,i −pv
i0)(q)

,
(B.196)
for i ∈{1, . . . , N}, and
∂
∂qN

(ph
cm −ph
i0)(q)
(pv
cm −pv
i0)(q)

=

0 1
−1 0
 
(ph
cm −ph
i0)(q)
(pv
cm −pv
i0)(q)

;
(B.197)
(d) The mass-inertia matrix for the pinned chain satisﬁes
∂
∂qN Ds(qs) ≡0,
and hence, Ds depends only on qb.
© 2007 by Taylor & Francis Group, LLC

430
Feedback Control of Dynamic Bipedal Robot Locomotion
If the generalized coordinates are chosen instead as qf = (qb; θabs
i0 ; ph
cm; pv
cm),
where qb are body coordinates associated with link-i0, then (a), (b) and (c)
still hold, and moreover,
(e) the mass-inertia matrix for the free chain, Df, has the block-diagonal
form given in (B.161), with
∂
∂qN A(qs) ≡0; in other words, both Df and
A depend only only on qb.
Angular momentum:
When angles are measured to increase in the clock-
wise direction, the sign on the deﬁnition of the wedge product of two vectors
x := (x1; x2) and y := (y1; y2) in R2 is changed from (B.148) to read
x ∧y := x2y1 −x1y2,
(B.198)
that is,
x ∧y =

x1
x2
′ 
0 −1
1
0
 
y1
y2

.
(B.199)
Hence, if {e1, e2, e3} are the natural basis vectors in R3, then
x ∧y = −[(x1e1 + x2e2) × (y1e1 + y2e2)] · e3.
(B.200)
With this modiﬁcation to the wedge product, the deﬁning equations for
angular momentum and total angular momentum in (B.150) and (B.151a)
remain unchanged and no alteration is necessary in the properties given in
(B.152) through (B.155).
A sign must be changed in (B.185) of Proposi-
tion B.9. For the convenience of the reader, the entire proposition is restated.
Proposition B.11
Let qb be a set of body coordinates associated with link-i0 of an N-link open
kinematic chain. Let qs = (qb; θabs
i0 ), where θabs
i0
is measured so that it in-
creases in the clockwise direction, and set qf = (qb; θabs
i0 ; ph
cm; pv
cm). Then the
following statements hold:
(a) if the chain is free,
∂
∂˙qN L(qf, ˙qf) = σcm, the angular momentum about
the center of mass, and
d
dtσcm = γN;
(b) if the chain is pinned,
∂
∂˙qN L(qs, ˙qs) = σ0, the angular momentum about
the pivot, and
d
dtσ0 = mtotg0(ph
cm −ph
0) + γN,
(B.201)
where p0 = (ph
0; pv
0) is the Cartesian position of the pivot and γN is the
external torque applied about the pivot (assumed to be measured with the
same convention as θabs
i0 ).
© 2007 by Taylor & Francis Group, LLC

Essential Technical Background
431
B.4.10
Other Useful Facts
Canonical change of coordinates:
Consider a mechanical system in gen-
eralized coordinates (q; ˙q) ∈T Q with quadratic kinetic energy
K(q, ˙q) = 1
2 ˙q′D(q) ˙q
(B.202)
and potential energy V (q). Let ¯q = F(q) be a local change of coordinates
on Q, that is, F is a local diﬀeomorphism. If the velocities are expressed as
˙¯q = ∂F
∂q ˙q, then the kinetic energy becomes
¯K(¯q, ˙¯q) = 1
2
˙¯q′ ¯D(¯q) ˙¯q,
(B.203)
where
¯D(¯q) = ∂F(q)
∂q
′
D(q)∂F(q)
∂q
&&&&
q=F −1(¯q)
.
(B.204)
The potential energy is
¯V (¯q) = V (q)|q=F −1(¯q) .
(B.205)
The transformation

¯q
˙¯q

=

F(q)
∂F (q)
∂q
˙q

(B.206)
is called a canonical change of coordinates.
Workless holonomic constraints:
A collection of N free links, a free
open kinematic chain, and a pinned open kinematic chain are all special cases
of a more general Lagrangian dynamical system called a simple mechanical
system. Consider an n-dimensional manifold Q with local coordinates q ∈Q
and tangent bundle T Q. Suppose that K : T Q →R is quadratic in ˙q and
positive deﬁnite, that is, K = 1
2 ˙q′D(q) ˙q, with D positive deﬁnite. Moreover,
suppose that V : Q →R. Then the dynamic system arising from L = K −V
by
d
dt
∂L
∂˙q −∂L
∂q = Γ,
(B.207)
where Γ is a set of generalized forces and torques, is called a simple mechanical
system. The system is simple because the kinetic energy is quadratic and
positive deﬁnite and the potential energy depends only on the conﬁguration
variables. From (B.143), if we set
x =

x1
x2

=

q
˙q

,
(B.208)
© 2007 by Taylor & Francis Group, LLC

432
Feedback Control of Dynamic Bipedal Robot Locomotion
the system can be written in state variable form as

˙x1
˙x2

=

x2
D−1(x1) (−C(x1, x2)x2 −G(x1) + Γ)

.
(B.209)
A relation among the generalized coordinates that can be expressed in the
form
q2 = λ(q1),
(B.210)
where (q1; q2) is a partition of q, is called a holonomic constraint.
More
generally, a relation of the form F(q) = 0 is also called a holonomic constraint.
However, in a neighborhood of a point where F has constant rank, the Implicit
Function Theorem ensures that a local representation of the form (B.210)
exists, that is, F(q1, q2) = 0 if, and only if, q2 −λ(q1) = 0, so the more general
form will not be considered here.
Consider the embedded submanifold of Q deﬁned by Qr = {(q1; q2) ∈
Q | q2 = λ(q1)}. Then there exist generalized constraint forces of the form
Γ =

−∂λ(q1)
∂q1
I

u∗(q, ˙q),
(B.211)
where u∗: T Q →Rm, m = dim(q2), such that T Qr is invariant under
solutions of

˙x1
˙x2

=
⎡
⎢⎣
x2
D−1(x1)
"
−C(x1, x2)x2 −G(x1) +

−∂λ(q1)
∂q1
I

u∗(x1, x2)
#
⎤
⎥⎦.
(B.212)
Moreover, the corresponding restriction dynamics is the simple mechanical
system on T Qr given by
Lr(q1, ˙q1) = Kr(q1, ˙q1) −Vr(q1)
(B.213a)
Vr(qr) = V (q1, λ(q1, ))
(B.213b)
Kr(q1, ˙q1) = 1
2 ˙q′
1Dr(q1) ˙q1
(B.213c)
Dr(q1) = D11(q1, λ(q1)) +
∂λ(q1)
∂q1
′
D22(q1, λ(q1))∂λ(q1)
∂q1
+

D12(q1, λ(q1))∂λ(q1)
∂q1
′
+ D12(q1, λ(q1))∂λ(q1)
∂q1
,
(B.213d)
where
D(q1, q2) =
 D11(q1, q2) D12(q1, q2)
D12(q1, q2) D22(q1, q2)

(B.214)
© 2007 by Taylor & Francis Group, LLC

Essential Technical Background
433
is partitioned compatible with (q1, q2). For obvious reasons, it is natural to
write this as
Lr = L|T Qr .
(B.215)
The set of constraints (B.210) is said to be workless because the instanta-
neous power given by the inner product of the generalized constraint forces
(B.211) and the velocity along the constraints,

−∂λ(q1)
∂q1
I

˙q1,
(B.216)
is zero.
Remark B.12
It is important to note that the restriction dynamics can
be computed without determining the generalized constraint forces, (B.211).
Remark B.13
Let Γ be as in (B.211) and let ˜Γ be any set of generalized
forces that do zero work on the constraints (B.210) and render T Qr invariant.
Then Γ
&&
T Qr = ˜Γ
&&
T Qr.
Remark B.14
Let Qf be the conﬁguration manifold of a free open kine-
matic chain and let Lf : T Qf →R be the corresponding Lagrangian. Con-
sider the pinned open kinematic chain formed by attaching the free open
kinematic chain to a pivot via (B.127). Then the conﬁguration manifold of
the pinned open kinematic chain is the embedded submanifold
Qs = {q ∈Qf | (B.127) holds}
(B.217)
and its Lagrangian is
Ls = Lf|T Qs .
(B.218)
Accounting for motors and rigid gear trains:
Consider an open kine-
matic chain with generalized coordinates q, kinetic energy K(q, ˙q) and poten-
tial energy V (q). Consider also a motor of mass20 Mmot and rotor inertia
Jrot such that the motor housing is rigidly attached to link-i and the rotor is
rigidly connected to an angle θj that is either a relative angle of the kinematic
chain or the absolute angle of the pivot (of course, only if the chain is pinned).
Because a motor is eﬃcient at providing low torque at high speed and most
robotic applications require high torque at low speed, suppose furthermore
that the rotor is connected to θj through a gear ratio of R so that
θrot = Rθj.
(B.219)
20The rotor mass is included.
© 2007 by Taylor & Francis Group, LLC

434
Feedback Control of Dynamic Bipedal Robot Locomotion
Note that the absolute angle of the rotor is
θabs
rot (q) = θabs
i
(q) + θrot = θabs
i
(q) + Rθj(q).
(B.220)
Let pmot(q) denote the Cartesian position of the motor center of mass, which
is assumed to be independent of the position of the rotor (i.e., the rotor is
symmetric).
The potential energy of the kinematic chain plus motor is simply
Vaug(q) = V (q) + g0Mmotpv
mot(q).
(B.221)
The kinetic energy of the kinematic chain plus motor is given by
Kaug(q, ˙q) = K(q, ˙q) + 1
2Mmot
 
˙ph
mot(q, ˙q)
2 + ( ˙pv
mot(q, ˙q))2!
+ 1
2Jrot
 
˙θabs
rot (q, ˙q)
!2
,
(B.222)
which, when the last term is expanded, yields
Kaug(q, ˙q) = K(q, ˙q) + 1
2Mmot
 
˙ph
mot(q, ˙q)
2 + ( ˙pv
mot(q, ˙q))2!
+ 1
2Jrot
 
˙θabs
i
(q, ˙q)
!2
+ RJrot ˙θabs
i
(q, ˙q) ˙θj(q, ˙q) + 1
2R2Jrot
 
˙θj(q, ˙q)
!2
.
(B.223)
Remark B.15
The term R2Jrot is called the reﬂected rotor inertia. In
many practical situations, the gear ratio R is quite large, say 30 or more,
in which case the reﬂected rotor inertia often exceeds the inertia of the link
attached to the rotor. Note also that the moment of inertia of the motor
housing about its center of mass has been assumed to be zero, that is, the
motor housing has been modeled as a point mass.
Center of mass and moment of inertia:
In a set of link coordinates,
the center of mass of a rigid link with mass density ρ(ℓh, ℓv) and point masses
{m1, . . . , mk} located at (ℓh
i ; ℓv
i ) is deﬁned by

ℓh
cm
ℓv
cm

=
1
mtot
 
link
ρ(ℓh, ℓv)

ℓh
ℓv

dℓhdℓv +
1
mtot
k

i=1
mi

ℓh
i
ℓv
i

, (B.224)
where
mtot =
 
body
ρ(ℓh, ℓv)dℓhdℓv +
k

i=1
mi
(B.225)
© 2007 by Taylor & Francis Group, LLC

Essential Technical Background
435
ℓh
ℓv
m1
m2
L
(a) Two point masses m1 and m2 joined
by a massless bar of length L.
ℓh
ℓv
L
W
(b) A rectangular body of uniform den-
sity and total mass mtot.
ℓh
ℓv
L
W
(c) A body of uniform density and trian-
gular shape having total mass mtot.
Figure B.16. Rigid bodies used to illustrate center of mass and moment of
inertia.
is the total mass. For the link in Fig. B.16(a), the center of mass is (ℓh
cm; ℓv
cm) =
(
m2
m1+m2 L; 0), in Fig. B.16(b), the center of mass is (ℓh
cm; ℓv
cm) = (L/2; W/2),
and Fig. B.16(c), the center of mass is (ℓh
cm; ℓv
cm) = (L/3; W/3).
Let ℓ0 = (ℓh
0; ℓv
0) be a ﬁxed point in the link coordinates. The moment of
inertia of the link about ℓ0 is
J0 =
 
link
ρ(ℓh, ℓv)

(ℓh −ℓh
0)2 + (ℓv −ℓv
0)2
dℓhdℓv
+
k

i=1
mi

(ℓh
i −ℓh
0)2 + (ℓv
i −ℓv
0)2
.
(B.226)
In Fig. B.16(a), the moment of inertia about the left end is J0 = m2L2
and the moment of inertia about the center of mass is Jcm =
m1m2
m1+m2 L2.
In Fig. B.16(b), the moment of inertia about the lower-left corner is J0 =
mtot
3

L2 + W 2
and the moment of inertia about the center of mass is Jcm =
mtot
12

L2 + W 2
. In Fig. B.16(c), the moment of inertia about the lower-left
corner is J0 = mtot
6

L2 + W 2
and the moment of inertia about the center of
mass is Jcm = mtot
18

L2 + W 2
.
© 2007 by Taylor & Francis Group, LLC

436
Feedback Control of Dynamic Bipedal Robot Locomotion
L1
L2
ℓh
cm,1
ℓh
cm,2
(a) Measurement conventions for the link
lengths and positions of the centers of mass.
It is assumed that the center of mass of each
link lies along the longitudinal axis of the
link.
q1
q2
pcm,1
pcm,2
(b) The
link
measurement
conventions.
The origin or the world frame (inertial
frame) is colocated with the pivot.
The
Cartesian positions of the centers of mass
are also shown.
Figure B.17. Acrobot example.
B.4.11
Example: The Acrobot
The objective is to derive the model of a simple mechanical system. Con-
sider the pinned two-link open kinematic chain shown in Fig. B.17, called
the Acrobot, in which it is assumed that the relative angle between the two
links is actuated. Figure B.17(a) depicts the link coordinates. Figure B.17(b)
indicates that the origin of the world frame is colocated with the axis of the
pivot,

ph
0
pv
0

=

0
0

,
(B.227)
and it also depicts the generalized coordinates q1 and q2 from which the ab-
solute angles of the links are determined,

θabs
1
θabs
2

=

q1 + q2
q2

.
(B.228)
Because the relative angle q1 is a body coordinate and q2 is an absolute angle,
we know by Proposition B.8 that in the coordinates (q1; q2), the mass-inertia
matrix will only depend on q1, or in other words, q2 is cyclic.
© 2007 by Taylor & Francis Group, LLC

Essential Technical Background
437
Denote the masses of the links by m1 and m2, respectively, and let the
inertias about the center of mass be Jcm,1 and Jcm,2, respectively. We now
proceed to determine the Lagrangian of the system by computing its total
potential energy and total kinetic energy.
We begin by writing down the
Cartesian positions of the center of mass of each link, and from this, we
compute the center of mass of the kinematic chain:

ph
cm,2
pv
cm,2

= R

θabs
2


ℓh
cm,2
0

(B.229a)
=

ℓh
cm,2 cos(q2)
ℓh
cm,2 sin(q2)

(B.229b)

ph
cm,1
pv
cm,1

= R

θabs
2


L2
0

+ R

θabs
1


ℓh
cm,1
0

(B.229c)
=

L2 cos(q2) + ℓh
cm,1 cos(q1 + q2)
L2 sin(q2) + ℓh
cm,1 sin(q1 + q2)

(B.229d)

ph
cm
pv
cm

=
m1
m1 + m2

ph
cm,1
pv
cm,1

+
m2
m1 + m2

ph
cm,2
pv
cm,2

(B.229e)
=
1
m1 + m2
 
m1L2 + m2ℓh
cm,2

cos(q2) + m1ℓh
cm,1 cos(q1 + q2)

m1L2 + m2ℓh
cm,2

sin(q2) + m1ℓh
cm,1 sin(q1 + q2)

.
(B.229f)
Hence, by (B.136), the total potential energy is
Vs(q1, q2) = (m1 + m2)g0pv
cm(q1, q2)
(B.230a)
=

m1g0L2 + m2g0ℓh
cm,2

sin(q2) + m1g0ℓh
cm,1 sin(q1 + q2).
(B.230b)
To compute the total kinetic energy, we diﬀerentiate (B.228), (B.229b), and
(B.229d) and then substitute the results into (B.134), (B.137), and (B.138)
to obtain
Ks(q1, ˙q1, ˙q2) =: 1
2 [ ˙q1
˙q2] Ds(q1)

˙q1
˙q2

,
(B.231)
where
(Ds(q1))1,1 = m1(ℓh
cm,1)2 + Jcm,1
(B.232a)
(Ds(q1))1,2 = m1ℓh
cm,1L2 cos(q1) + m1(ℓh
cm,1)2 + Jcm,1
(B.232b)
(Ds(q1))2,1 = m1ℓh
cm,1L2 cos(q1) + m1(ℓh
cm,1)2 + Jcm,1
(B.232c)
(Ds(q1))2,2 = 2m1ℓh
cm,1L2 cos(q1) + m1L2
2 + m1(ℓh
cm,1)2 + Jcm,1
+ m2(ℓh
cm,2)2 + Jcm,2.
(B.232d)
© 2007 by Taylor & Francis Group, LLC

438
Feedback Control of Dynamic Bipedal Robot Locomotion
From Ks and Vs, the dynamic model (B.143) is determined. The remaining
terms are
(Cs(q1, ˙q1, ˙q2))1,1 = 0
(B.233a)
(Cs(q1, ˙q1, ˙q2))1,2 = m1ℓh
cm,1L2 sin(q1) ˙q2
(B.233b)
(Cs(q1, ˙q1, ˙q2))2,1 = −m1ℓh
cm,1L2 sin(q1)( ˙q1 + ˙q2)
(B.233c)
(Cs(q1, ˙q1, ˙q2))2,2 = −m1ℓh
cm,1L2 sin(q1) ˙q1,
(B.233d)
(Gs(q1, q2))1 = m1g0ℓh
cm,1 cos(q1 + q2)
(B.234a)
(Gs(q1, q2))2 = m1g0L2 cos(q1) + m1g0ℓh
cm,1 cos(q1 + q2)
+ m2g0ℓh
cm,2 cos(q2),
(B.234b)
and
Bs =

1
0

.
(B.235)
Using either (B.151a) with pa = p0, the pivot point, or Proposition B.9, the
total angular momentum about the pivot is computed to be
σ0 = (Ds(q1))2,1 ˙q1 + (Ds(q1))2,2 ˙q2.
(B.236)
From Proposition B.9 and the deﬁnition of the generalized conjugate momenta
in (B.181), it follows that
¯σ2 = (Ds(q1))2,1 ˙q1 + (Ds(q1))2,2 ˙q2 = σ0.
(B.237)
© 2007 by Taylor & Francis Group, LLC

C
Proofs and Technical Details
C.1
Proofs Associated with Chapter 4
C.1.1
Continuity of TI
Lemma C.1
Suppose that Hypotheses HSH1–HSH3 hold. Then TI is continuous at points
x0 where 0 < TI(x0) < ∞and LfH(ϕf(TI(x0), x0)) ̸= 0.
Proof
Let ϵ > 0 be given. Deﬁne ¯x := ϕf(TI(x0), x0), and without loss
of generality, suppose that LfH(¯x) < 0. Then, from the deﬁnition of TI and
HSH3, H(ϕf(t, x0)) > 0 for all 0 ≤t < TI(x0). This in turn implies that, for
any 0 < t1 < TI(x0),
μ(t1) :=
inf
0≤t≤t1 dist(ϕf(t, x0), S) > 0,
(C.1)
since: (a) ϕf(t, x0) is continuous in t; (b) the interval [0, t1] is compact; and
(c), by HSH3, S is closed and equals the zero level set of H.
By HSH2,
there exists ¯ϵ > 0 such that ϕf can be continued on [0, TI(x0) + ¯ϵ], [110].
Moreover, since LfH(¯x) < 0, for ¯ϵ > 0 suﬃciently small, t2 := TI(x0) + ¯ϵ/2
and x2 := ϕf(t2, x0), result in H(x2) < 0. From H(x2) < 0, it follows that
dist(x2, S) > 0. If necessary, reduce ¯ϵ so that 0 < ¯ϵ < min{ϵ, TI(x0)}, and
deﬁne t1 := TI(x0) −¯ϵ/2 and x1 := ϕf(t1, x0). From (C.1), μ(t1) > 0. From
HSH2, the solutions depend continuously on the initial conditions. Thus, there
exists δ > 0, such that, for all x ∈Bδ(x0), sup0≤t≤t2 ||ϕf(t, x) −ϕf(t, x0)|| <
min{dist(x2, S), μ(t1)/2}. Therefore, for x ∈Bδ(x0), t1 < TI(x) < t2, which
implies that |TI(x) −TI(x0)| < ϵ, establishing the continuity of TI at x0.
C.1.2
Distance of a Trajectory to a Periodic Orbit
Recall that if O is any periodic orbit that is transversal to S, then O ⊂˜
X .
For x ∈˜
X , deﬁne
d(x) :=
sup
0≤t≤TI(x)
dist(ϕ−(t, x), O).
(C.2)
439
© 2007 by Taylor & Francis Group, LLC

440
Feedback Control of Dynamic Bipedal Robot Locomotion
Note that d vanishes on O. Note also that for 0 < t ≤TI(x), ϕ−(t, x) =
ϕf(t, x), and hence
d(x) =
sup
0<t≤TI(x)
dist(ϕf(t, x), O) =
sup
0≤t≤TI(x)
dist(ϕf(t, x), O).
(C.3)
Note also that ∀x, y ∈˜
X, |dist(x, O) −dist(y, O)| ≤||x −y||.
Lemma C.2
Under HSH1–HSH3, d : ˜
X →R is well deﬁned and continuous on ˜
X .
Proof
For any x0 ∈˜
X, TI(x0) is ﬁnite, and ϕf(t, x0) is deﬁned on the
compact set [0, TI(x0)]. This and the continuity of ϕf(t, x0) with respect to
t imply by the Heine-Borel Theorem that d(x0) is ﬁnite and well-deﬁned.
To show continuity, let x0 ∈˜
X and ϵ > 0 be given. By deﬁnition of TI,
¯x := ϕf(TI(x0), x0) ∈S. Without loss of generality, suppose that LfH(¯x) <
0. Let η > 0 be such that for all 0 < t < η, H(ϕf(t, ¯x)) < 0 and ||¯x −
ϕf(t, ¯x)|| < ϵ. Such an η exists because: (i) HSH2 implies there exists η > 0
such that ϕf can be continued on [0, TI(x0) + η], [110]; (ii) LfH(¯x) < 0;
and (iii) ϕf(t, ¯x) depends continuously on t. Deﬁne t3 := TI(x0) + η. By
HSH2 and Lemma C.1, there exists δ > 0 such that for all ˜x ∈Bδ(x0),
sup0≤t≤t3 ||ϕf(t, x0) −ϕf(t, ˜x)|| < ϵ and TI(˜x) < t3. Hence,
|d(˜x) −d(x0)| = |
sup
0≤t≤TI(˜x)
dist(ϕf(t, ˜x), O) −
sup
0≤t≤TI(x0)
dist(ϕf(t, x0), O)|
≤
sup
0≤t≤t3
|dist(ϕf(t, ˜x), O) −dist(ϕf(t, x0), O)|
≤
sup
0≤t≤t3
||ϕf(t, ˜x) −ϕf(t, x0)||
≤ϵ.
(C.4)
C.1.3
Proof of Theorem 4.1
The ﬁrst and second statements are immediate. Since the suﬃciency portions
of statements c) and d) are straightforward, only necessity is proved.
Stability and asymptotic stability are tackled ﬁrst. Suppose that P(x∗) =
x∗, and let O be the periodic orbit of (4.1) corresponding to Δ(x∗). By b),
the orbit is transversal to S. Let ϵ > 0 be given. Since x∗is stable in the sense
of Lyapunov, for any ¯ϵ > 0, there exists δ(¯ϵ) > 0 such that, for all k ≥0,
¯x ∈Bδ(¯ϵ)(x∗) ∩S, implies P k(¯x) ∈B¯ϵ(x∗) ∩S, where P k is P composed
with itself k-times. In particular, this implies that for all ¯x ∈Bδ(¯ϵ)(x∗) ∩S,
there exists a solution ϕ(t) of (4.1) deﬁned on [0, ∞), such that ϕ(0) = Δ(¯x).
Moreover, an upper bound on how far the solution ϕ wanders from the orbit
O is given by
sup
t≥0
dist(ϕ(t), O) ≤
sup
x∈B¯ϵ(x∗)∩S
d ◦Δ(x).
(C.5)
© 2007 by Taylor & Francis Group, LLC

Proofs and Technical Details
441
By Lemma C.2, since O is transversal to S, and since Δ(x∗) ∈O, d ◦Δ is
continuous at x∗. Since d ◦Δ(x∗) = 0, it follows that there exists ¯ϵ > 0 such
that supx∈B¯ϵ(x∗)∩S d ◦Δ(x) < ϵ. This bound is valid for all initial conditions
in Bδ(¯ϵ)(x∗) ∩S. It remains to produce an open neighborhood of O for which
such a bound holds. But this is easily done by taking V := d−1([0, δ(¯ϵ))),
which completes the proof of c). Assume in addition that δ(¯ϵ) > 0 was chosen
suﬃciently small so that limk→∞P k(¯x) = x∗. Then by continuity of d and
Δ, limk→∞d ◦Δ(P k(¯x)) = d ◦Δ(x∗) = 0, from which it easily follows that
limt→∞dist(ϕ(t), O) = 0, proving d).
Attention is now turned to proving e). From HSH5, TI ◦Δ(x∗) > 0, and in
combination with HSH2’, it follows that there exists an open ball Br(x∗), r >
0, and numbers T∗and T ∗such that for every x0 ∈Br(x∗) ∩S, 0 < T∗≤
TI ◦Δ(x0) ≤T ∗< ∞, and ∀x ∈Δ(Br(x∗)), a solution to (4.2) exists on
[0, T ∗].
Assume that O is exponentially stable. Let δ > 0 be such that Ne−γT∗δ < r
and Bδ(x∗) ⊂V where N and γ are positive constants. Let x0 ∈Bδ(x∗) ∩
S and deﬁne xk+1 = P(xk), k ≥1. Then, by induction, ∥xk −x∗∥≤
Ne−kγT∗dist(x0, O).
It is enough to show the converse for initial conditions in S near x∗. As-
sume that x∗is exponentially stable. Since exponential stability of x∗implies
stability i.s.L., by part c) of the theorem, O is also stable i.s.L. Hence, there
exists δ > 0 such that dist(x0, O) < δ implies dist(ϕ(t, x0), O) ≤r, t ≥0. Let
K := {x ∈X | dist(x, O) ≤r}. Since K is compact and f and Δ are diﬀeren-
tiable, there exists a constant ¯L < ∞such that ∥f(x) −f(¯x)∥≤¯L∥x −¯x∥,
for all x, ¯x ∈K, and ∥Δ(x) −Δ(¯x)∥≤¯L∥x −¯x∥, for all x, ¯x ∈K ∩S. Let
L := ¯Le¯LT ∗. Then, using standard bounds for the Lipschitz dependence of the
solution of (4.2) with respect to its initial condition [138, Theorem 3.4, p. 96],
it follows that for x ∈Bδ(x∗) ∩S,
sup
0≤t≤TI◦Δ(x)
dist(ϕ(t, Δ(x)), O) ≤
sup
0≤t≤T ∗∥ϕ(t, Δ(x)) −ϕ(t, Δ(x∗))∥
≤L∥x −x∗∥.
(C.6)
From this inequality, it follows easily that x∗being an exponentially stable
ﬁxed point of P implies the corresponding orbit is exponentially stable.
C.1.4
Proof of Proposition 4.1
If P is continuous at x, then P is necessarily well deﬁned at x. Therefore,
TI(x) < ∞and, by its deﬁnition, P(x) = ϕf(TI(Δ(x)), Δ(x)).
From the
deﬁnition of ˜S in (4.7),
˜S := {x ∈X | 0 < TI(Δ(x)) < ∞and LfH(ϕf(TI(Δ(x)), Δ(x))) ̸= 0},
(C.7)
which proves a). Part b) is immediate from the deﬁnition of stability of an
equilibrium point in the sense of Lyapunov.
© 2007 by Taylor & Francis Group, LLC

442
Feedback Control of Dynamic Bipedal Robot Locomotion
C.1.5
Proofs of Theorem 4.4 and Theorem 4.5
Only the last statement of Theorem 4.5 merits a comment as the other parts
of both theorems either have been discussed in the main text or are immedi-
ate. Suppose that both f|Z and Δ|Z in (4.24) are continuously diﬀerentiable.
By HInv4, O(Δ|Z(x∗)) is an orbit of the full-model, and thus can also be
denoted as O(Δ(x∗)); similarly, x∗is a ﬁxed point of P. By HInv3, it follows
easily that O(Δ|Z(x∗)) is exponentially stable in Z if and only if O(Δ(x∗)) is
exponentially stable in X, and that x∗is an exponentially stable ﬁxed point
of ρ if and only if it is an exponentially stable ﬁxed point of P. Then by part
e) of Theorem 4.1, x∗∈ˆS ∩Z is an exponentially stable equilibrium point of
x[k + 1] = ρ(x[k]) if, and only if, the orbit O(Δ|Z(x∗)) is exponentially stable
within Z.
C.1.6
Proof of Theorem 4.6
Throughout this proof, Hypotheses HSH1–HSH5 and HS1–HS6 are assumed
to hold. The proof is based upon evaluating DP ϵ(x∗), the linearization of the
Poincar´e map about the ﬁxed point, in a set of local coordinates. This is a
commonly employed technique even for system with impulse eﬀects [59, 93,
143,228]. The new result here will be an expression for DP ϵ(x∗) that brings
out its structure due to Hypotheses HS1–HS6.
C.1.6.1
Preliminaries
The usual approach to evaluating DP ϵ(x∗) is to view P ϵ as a map from an
open subset of Rn to Rn. The linearization is then an n × n matrix and it
must subsequently be shown that one of its eigenvalues is always one and the
remaining n−1 eigenvalues are those of DP ϵ(x∗) : Tx∗S →Tx∗S; see [115,173].
Here, local coordinates on S will be used so that DP ϵ(x∗) is computed directly
as an (n −1) × (n −1) matrix.
In the coordinates x = (z; η), HS4 implies that x∗= (z∗; 0). Since f ϵ
k+1:n(0) =
0, HS5 is equivalent to ∂H
∂z (z∗, 0)f1:k(z∗, 0) ̸= 0, which, writing z = (z1; · · · ; zk),
is equivalent to 5k
i=1
∂H
∂zi (z∗, 0)fi(z∗, 0) ̸= 0. If necessary, the components of
z can always be reordered so that
∂H
∂z1
(z∗, 0)f1(z∗, 0) ̸= 0;
(C.8)
this will allow (z2:k; η), where z2:k = (z2; · · · ; zk), to be used as coordinates
for S. Indeed, (C.8) implies that ∂H
∂z1 (z∗, 0) ̸= 0, and hence by the Implicit
Function Theorem, there exists a continuously diﬀerentiable scalar function
Γ on an open neighborhood of x∗such that
(z1; z2:k; η) ∈S ⇔z1 = Γ(z2:k, η).
(C.9)
© 2007 by Taylor & Francis Group, LLC

Proofs and Technical Details
443
It follows that
(z1; z2:k; η) ∈S ∩Z ⇔z1 = Γ(z2:k, 0) and η = 0.
(C.10)
Letting ˆΔ be the representation of Δ in local coordinates on S gives
ˆΔ(z2:k, η) := Δ(Γ(z2:k, η), z2:k, η).
(C.11)
Deﬁning the projection π by
π(z1, z2:k, η) = (z2:k; η),
(C.12)
then allows P ϵ to be expressed in local coordinates (z2:k; η) on S by
ˆ
P ϵ(z2:k, η) := π ◦φϵ  
T ϵ
I ◦ˆΔ(z2:k, η), ˆΔ(z2:k, η)
!
.
(C.13)
Similarly, the restricted Poincar´e map in local coordinates z2:k on S ∩Z is
given by
ˆρ (z2:k) := π2 ◦ˆ
P ϵ ◦I (z2:k) ,
(C.14)
where
π2(z2:k, η) = z2:k and I (z2:k) = (z2:k; 0).
(C.15)
C.1.6.2
Application of the Chain Rule
The proof is now broken down into three lemmas which together prove The-
orem 4.6. The ﬁrst involves the trajectory sensitivity matrix of ˙x = f ϵ(x),
which is deﬁned by1
Φϵ(t, x0) := D2φϵ(t, x0)
(C.16)
for t in the maximal domain of existence of φϵ(t, x0).
Partition Φϵ(t, x0)
compatible with (z1; z2:k; η), viz.
Φϵ(t, x0) =
⎡
⎢⎣
Φϵ
11(t, x0) Φϵ
12(t, x0) Φϵ
13(t, x0)
Φϵ
21(t, x0) Φϵ
22(t, x0) Φϵ
23(t, x0)
Φϵ
31(t, x0) Φϵ
32(t, x0) Φϵ
33(t, x0)
⎤
⎥⎦.
(C.17)
Lemma C.3
For all x0 ∈Z, the entries of the sensitivity matrix Φϵ(t, x0) satisfy:
i) Φϵ
31(t, x0) = Φϵ
32(t, x0) = 0;
1For a diﬀerentiable function g(x1, x2, ..., xp), the notation Dig(y1, y2, ..., yp) refers to
∂g/∂xi evaluated at (x1; x2; ...; xp) = (y1; y2; ...; yp).
The argument xi may be a vec-
tor.
Dg(y1, y2, ..., yp) is (∂g/∂x1, ∂g/∂x2, . . . , ∂g/∂xp) evaluated at (x1; x2; ...; xp) =
(y1; y2; ...; yp).
© 2007 by Taylor & Francis Group, LLC

444
Feedback Control of Dynamic Bipedal Robot Locomotion
ii) Φϵ
11(t, x0), Φϵ
21(t, x0), Φϵ
12(t, x0), and Φϵ
22(t, x0) are independent of ϵ;
and
iii) Φϵ
33(t, x0) = eA(ϵ)t.
Proof
The trajectory sensitivity matrix may be calculated as follows [173]:

˙x
˙Φ
8
=

f ϵ(x)
Df ϵ(x)Φ
8
with i.c.

x0
I
8
.
(C.18)
Hypothesis HS1 implies that for i ∈{1, 2, 3}, Dif ϵ
1:k(z1, z2:k, η) is indepen-
dent of ϵ and that D1f ϵ
k+1:n(z1, z2:k, η) = 0, D2f ϵ
k+1:n(z1, z2:k, η) = 0, and
D3f ϵ
k+1:n(z1, z2:k, η) = A(ϵ). By the Peano-Baker formula, the trajectory sen-
sitivity matrix satisﬁes
Φϵ(t, x0) = I +
 t
0
Kϵ(τ1, x0) dτ1 +
 t
0
 τ1
0
Kϵ(τ1, x0)Kϵ(τ2, x0) dτ2dτ1
+
 t
0
 τ1
0
 τ2
0
Kϵ(τ1, x0)Kϵ(τ2, x0)Kϵ(τ3, x0) dτ3dτ2dτ1 + · · ·
(C.19)
where, since x0 ∈Z, and Z is invariant under the solution of ˙x = f ϵ(x),
Kϵ(t, x0) := Df ϵ(x)|x=φZ(t,x0).
(C.20)
It is easily shown that
Kϵ(t, x0) =
⎡
⎢⎣
Kϵ
11(t, x0) Kϵ
12(t, x0) Kϵ
13(t, x0)
Kϵ
21(t, x0) Kϵ
22(t, x0) Kϵ
23(t, x0)
Kϵ
31(t, x0) Kϵ
32(t, x0) Kϵ
33(t, x0)
⎤
⎥⎦,
(C.21)
where
i) Kϵ
31(t, x0) = Kϵ
32(t, x0) = 0,
ii) Kϵ
11(t, x0), Kϵ
21(t, x0), Kϵ
12(t, x0), and Kϵ
22(t, x0) are independent of ϵ,
and
iii) Kϵ
33(t, x0) = A(ϵ).
Evaluating the expansion (C.19) term-by-term then veriﬁes the lemma.
Lemma C.4
Let (z∗
1; z∗
2:k; η∗) = x∗represent the ﬁxed point and t∗= T ϵ
I ◦ˆΔ(z∗
2:k, η∗) be the
fundamental period of the periodic orbit O. Then,
D ˆ
P ϵ(z∗
2:k, η∗) = C(FT + Q)R,
(C.22)
© 2007 by Taylor & Francis Group, LLC

Proofs and Technical Details
445
with matrices C, F, T, Q, and R as deﬁned in (C.23); moreover, when parti-
tioned compatibly with (z1; z2:k; η), these matrices have the indicated struc-
ture2:
C := Dπ(z∗
1, z∗
2:k, η∗) =
 0 I 0
0 0 I

(C.23a)
F := D1φϵ(t∗, ˆΔ(z∗
2:k, η∗)) =
⎡
⎢⎣
F1
F2
0
⎤
⎥⎦
(C.23b)
T := DT ϵ
I ( ˆΔ(z∗
2:k, η∗)) =
T1 T2 Tϵ
3

(C.23c)
Q := Φϵ(t∗, ˆΔ(z∗
2:k, η∗)) =
⎡
⎢⎣
Q11 Q12
Qϵ
13
Q21 Q22
Qϵ
23
0
0
eA(ϵ)t∗
⎤
⎥⎦
(C.23d)
R := D ˆΔ(z∗
2:k, η∗) =
⎡
⎢⎣
R11 R12
R21 R22
0
R32
⎤
⎥⎦.
(C.23e)
Proof
Equation (C.22) follows from the chain rule, using
(z∗
1; z∗
2:k; η∗) = φϵ(T ϵ
I ◦ˆΔ(z∗
2:k, η∗), ˆΔ(z∗
2:k, η∗))
= φZ(TI,Z ◦ˆΔ(z∗
2:k, η∗), ˆΔ(z∗
2:k, η∗)),
(C.24a)
t∗= T ϵ
I ◦ˆΔ(z∗
2:k, η∗) = TI,Z ◦ˆΔ(z∗
2:k, η∗),
(C.24b)
Φϵ(t∗, ˆΔ(z∗
2:k, η∗)) = D2φϵ(t∗, ˆΔ(z∗
2:k, η∗)).
(C.24c)
The structure of C is immediate from the deﬁnition of π in (C.12). From
[173, App. D], F = f ϵ(z∗
1, z∗
2:k, η∗), leading to F3 = 0 because η∗= 0. Also
from [173, App. D], T ϵ
I is diﬀerentiable due to the transversality condition
HS5 with
DT ϵ
I ( ˆΔ(z∗
2:k, η∗)) = −(Lf ϵH(x∗))−1
∂H
∂x (x∗)
T
Φϵ(t∗, ˆΔ(z∗
2:k, η∗)). (C.25)
The structure of Q is given by Lemma C.3, and the form of R follows from
HS2, namely, (4.28).
2For a related decomposition, using a slightly diﬀerent structure, see [57].
© 2007 by Taylor & Francis Group, LLC

446
Feedback Control of Dynamic Bipedal Robot Locomotion
Lemma C.5
At the ﬁxed point x∗, the linearization of the Poincar´e map is
D ˆ
P ϵ(z∗
2:k, η∗) =

M11 M ϵ
12
0
M ϵ
22

,
(C.26)
and the linearization of the restricted Poincar´e map is
Dˆρ(z∗
2:k) = M11,
(C.27)
where
M11 = (F2T1 + Q21)R11 + (F2T2 + Q22)R21
(C.28a)
M ϵ
12 = (F2T1 + Q21)R12 + (F2T2 + Q22)R22 + (F2Tϵ
3 + Qϵ
23)R32
(C.28b)
M ϵ
22 = eA(ϵ)t∗R32.
(C.28c)
Proof
Multiplying out (C.22) and using the structure in (C.23) proves
(C.28).
The second part follows because the Poincar´e map leaves S ∩Z
invariant. In local coordinates, direct calculation yields
Dˆρ(z∗
2:k) = Dπ2(z∗
2:k, η∗) D ˆ
P ϵ(z∗
2:k, η∗) DI(z∗
2:k)
(C.29a)
=
I 0 
 M11 M ϵ
12
0
M ϵ
22
 
I
0

(C.29b)
= M11.
(C.29c)
C.1.6.3
Assembling all of the Pieces
The overall proof of Theorem 4.6 is completed as follows. Suppose that x∗
is an exponentially stable ﬁxed point of ρ. Then by (C.27), the eigenvalues
of M11 have magnitude less than one. By HS6 and (C.28), limϵ↘0 M ϵ
22 =
limϵ↘0 eA(ϵ)t∗R32 = 0, and therefore, because eigenvalues depend continuously
on the entries of the matrix, there exists ¯ϵ > 0 such that for 0 < ϵ < ¯ϵ, the
eigenvalues of M ϵ
22 all have magnitude less than one, and hence, x∗is an
exponentially stable ﬁxed point of P ϵ.
The other direction being trivial, the proof is complete.
C.1.7
Proof of Theorem 4.8
For clarity, ﬁrst assume that W = ∅and consider
Σaux :
⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎩

˙x(t)
˙a(t)

= faux(x(t), a(t)),

x−(t)
a−(t)

̸∈Saux

x+(t)
a+(t)

= Δaux(x−(t), a−(t)),

x−(t)
a−(t)

∈Saux,
(C.30)
© 2007 by Taylor & Francis Group, LLC

Proofs and Technical Details
447
where the state space is Xaux := X × A, the impact surface is Saux := S × A,
and the diﬀerential equation and impact map are given by
faux(x, a) =

f(x, a)
0

(C.31a)
Δaux(x, a) =

Δ(x, v1(x))
v1(x)

.
(C.31b)
The hypotheses of Theorem 4.8 ensure that (C.30) and Z := {(Za, a) | a ∈A}
satisfy all the hypotheses of Corollary 4.2, and thus the existence and stability
of orbits can be checked by evaluating the stability of ﬁxed points of the
discrete-time system associated with the restricted Poincar´e map, namely
x[k + 1] = ρ(x[k], v1(x[k]))
a[k + 1] = v1(x[k]).
(C.32)
Since the stability properties of (C.32) are equivalent to those of
x[k + 1] = ρ(x[k], v1(x[k])),
(C.33)
the result is proven.
For W ̸= ∅, the reasoning is essentially identical. The auxiliary system
becomes
Σaux :
⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎩
⎡
⎢⎢⎣
˙x(t)
˙a(t)
˙w(t)
⎤
⎥⎥⎦= faux(x(t), a(t), w(t)),
⎡
⎢⎢⎣
x−(t)
a−(t)
w−(t)
⎤
⎥⎥⎦̸∈Saux
⎡
⎢⎢⎣
x+(t)
a+(t)
w+(t)
⎤
⎥⎥⎦= Δaux(x−(t), a−(t), w−(t)),
⎡
⎢⎢⎣
x−(t)
a−(t)
w−(t)
⎤
⎥⎥⎦∈Saux,
(C.34)
where the state space is Xaux := X × A × W, the impact surface is Saux :=
S × A × W and the diﬀerential equation and impact map are given by
faux(x, a, w) =
⎡
⎢⎣
f(x, a)
0
0
⎤
⎥⎦
(C.35a)
Δaux(x, a, w) =
⎡
⎢⎣
Δ(x, v1(x, w))
v1(x, w)
v2(x, w)
⎤
⎥⎦.
(C.35b)
© 2007 by Taylor & Francis Group, LLC

448
Feedback Control of Dynamic Bipedal Robot Locomotion
The hypotheses of Theorem 4.8 ensure that (C.34) and Zaux := Z×W satisfy
all the hypotheses3 of Corollary 4.2 and thus the existence and stability of
orbits can be checked by evaluating the stability of ﬁxed points of the discrete-
time system associated with the restricted Poincar´e map, namely
x[k + 1] = ρ(x[k], v1(x[k], w[k]), v2(x[k], w[k]))
a[k + 1] = v1(x[k], w[k])
w[k + 1] = v2(x[k], w[k]).
(C.36)
Since the stability properties of (C.36) are equivalent to those of
x[k + 1] = ρ(x[k], v1(x[k], w[k]), v2(x[k], w[k]))
w[k + 1] = v2(x[k], w[k]),
(C.37)
the result is proven.
C.1.8
Proof of Theorem 4.9
The proof follows the same pattern as the proof of Theorem 4.8. For clarity,
ﬁrst assume that W = ∅and consider
Σaux :
⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎩
⎡
⎢⎢⎣
˙x(t)
˙a1(t)
˙a2(t)
⎤
⎥⎥⎦= faux(x(t), a1(t), a2(t))
⎡
⎢⎢⎣
x−(t)
a−
1 (t)
a−
2 (t)
⎤
⎥⎥⎦̸∈Saux
⎡
⎢⎢⎣
x+(t)
a+
1 (t)
a+
2 (t)
⎤
⎥⎥⎦= Δaux(x−(t), a−
1 (t), a−
2 (t))
⎡
⎢⎢⎣
x−(t)
a−
1 (t)
a−
2 (t)
⎤
⎥⎥⎦∈Saux,
(C.38)
where the state space is Xaux := X × A1 × A2, the impact surface is Saux :=
S × A1 × A2, and the diﬀerential equation and impact map are given by
faux(x, a1, a2) =
⎡
⎢⎣
f(x, a1, a2)
0
0
⎤
⎥⎦
Δaux(x, a1, a2) =
⎡
⎢⎣
Δ(x, ψ(a2), v1(x))
ψ(a2)
v1(x)
⎤
⎥⎦.
(C.39)
3Note that local continuous ﬁnite-time attractivity of Z in X × A immediately implies that
of Z × W in X × A × W.
© 2007 by Taylor & Francis Group, LLC

Proofs and Technical Details
449
The hypotheses of Theorem 4.9 ensure that (C.38) and Zaux := Z satisfy all
the hypotheses of Corollary 4.2 and thus the existence and stability of orbits
can be checked by evaluating the stability of ﬁxed points of the discrete-time
system associated with the restricted Poincar´e map, namely
x[k + 1] = ρ(x[k], ψ(a2[k]), v1(x[k]))
a1[k + 1] = ψ(a2[k])
a2[k + 1] = v1(x[k])
(C.40)
Since the stability properties of (C.37) are equivalent to those of
x[k + 1] = ρ(x[k], ψ(a2[k]), v1(x[k]))
a2[k + 1] = v1(x[k]),
(C.41)
the result is proven. The simple modiﬁcations for including W ̸= ∅are left to
the reader.
C.2
Proofs Associated with Chapter 5
C.2.1
Proof of Theorem 5.4
Denote the closed-loop system consisting of (3.30) and (5.95) by
Σ :

˙x = fcl(x)
x−/∈S
x+ = Δ(x−)
x−∈S,
(C.42)
where
fcl(x) := fs(x) + gs(x)uF T (x).
(C.43)
The proof consists in systematically showing that all of the hypotheses of
Theorem 4.5 are met for (C.42).
Hypothesis HSH1 follows from X = T Q. Hypotheses HSH3 and HSH5 are
immediate from (3.31), and HSH4 is met because the impact map in (3.25) is
as smooth as the mechanical model, and hence, is analytic. Hypothesis HSH2
is shown to hold in the following lemma. Its proof is delayed until the end of
the proof of Theorem 5.4.
Lemma C.6
Assume that Hypotheses HH1–HH4 hold.
Then for the closed-loop system
(C.43), Hypotheses HH2, HC1 and HC2 imply Hypothesis HSH2.
Continuing with the proof of the theorem, Lemma 5.1 and the deﬁnition of
the hybrid zero dynamics establish Hypotheses HInv1 and HInv4. Hypoth-
esis HH5 implies HInv2; see Remark 5.3. Finally, Hypothesis HInv3, that
© 2007 by Taylor & Francis Group, LLC

450
Feedback Control of Dynamic Bipedal Robot Locomotion
is, the ﬁnite-time attractivity of the zero dynamics manifold, follows from
Hypotheses HC3 and HC4. This concludes the proof.
Proof of Lemma C.6:
The continuity portion of HSH2 is immediate. The
existence and uniqueness portions of HSH2 are coordinate independent. From
Hypotheses HH1–HH4, the swing phase dynamics can be written as in (5.43).
Applying the feedback (5.95) to (5.43) yields that the closed-loop swing phase
dynamics are
˙η1 = η2
˙η2 = v(η1, η2)
˙z = Ω(η1, η2, z),
(C.44)
where η1 = y, η2 = ˙y, z = (ξ1; ξ2), v is given by (5.90), and Ω is a smooth
function of its arguments (the smoothness comes from that of (3.8)).
In
particular, Ω is locally Lipschitz continuous. In these coordinates, the system
is expressed as a cascade of a system that satisﬁes HSH2 feeding forward into
a system that is locally Lipschitz. The Gronwall-Bellman inequality [138] can
therefore be used to establish that HSH2 holds for the cascade.
C.2.2
Proof of Theorem 5.5
Denote the closed-loop system consisting of (3.30) and (5.96) by
Σ :

˙x = fcl(x)
x−/∈S
x+ = Δ(x−)
x−∈S,
(C.45)
where
fcl(x) := fs(x) + gs(x)uLIN(x).
(C.46)
The proof consists in showing that all of the hypotheses of Theorem 4.6 are
met for (C.45).
Hypothesis HSH1 follows from X = T Q. Hypothesis HSH2’ follows from the
smoothness of the mechanical model (3.31) and the feedback (5.96). Hypothe-
ses HSH3 and HSH5 are immediate from (3.31), and HSH4’ is met because
the impact map in (3.25) is as smooth as the mechanical model, and hence,
is analytic.
From Hypotheses HH1–HH4, the swing phase dynamics can be written as
in (5.43). Applying the feedback (5.96) to (5.43) yields that the closed-loop
swing phase dynamics are
˙η1 = η2
˙η2 = −1
ϵ2 KP η1 −1
ϵ KDη2
˙z = Ω(η1, η2, z),
(C.47)
© 2007 by Taylor & Francis Group, LLC

Proofs and Technical Details
451
where η1 = y, η2 = ˙y, z = (ξ1; ξ2), and Ω is a smooth function of its arguments
(the smoothness comes from that of (3.8)). From this, Hypotheses HS1 and
HS2, and HS6 are immediate. Because the hybrid zero dynamics is assumed
to have a periodic orbit transversal to S ∩Z, Hypotheses HS3–HS5 are met.
Hence, the exponential stability of the orbit in the hybrid zero dynamics
implies that, for ϵ > 0 suﬃciently small, the orbit is also exponentially stable
in (C.45).
C.3
Proofs Associated with Chapter 6
C.3.1
Proof of Proposition 6.1
The ﬁrst part of (a) follows from the fact that the decoupling matrix in (6.65)
is the sum of an identity matrix and the outer product of a column vector
and a row vector; the second part follows by multiplying by the positive
quantity ˜dN,N.
The proof of (b) is a direct application of the Sherman-
Morrison formula, more commonly known as the Matrix Inversion Lemma,
which states that the matrix (In×n −PQ), P ∈Rn×m, Q ∈Rm×n is invert-
ible if, and only if, (Im×m −QP) is invertible, in which case (In×n −PQ)−1 =
In×n + P(Im×m −QP)−1Q. In our case, the matrices involved are
P = ∂hd(θ)
∂θ
and
Q = −˜Jnorm(qb),
(C.48)
and the dimensions are n = N −1 and m = 1. Part (c) is immediate from
(a) and (b). For part (d), because the MPFL-normal form is obtained by
applying a change of coordinates and a regular state variable feedback, the
decoupling matrix associated with (6.2) and (6.3) is invertible if, and only
if, the decoupling matrix associated with (6.64) and (6.60) is invertible; see
Proposition B.7.
C.3.2
Proof of Theorem 6.2
The ﬁrst part of the proof consists in showing that Hypotheses HH1–HH5 are
satisﬁed, so that the swing phase zero dynamics exists. Hypothesis HH1 is
trivially satisﬁed. By construction, on the periodic orbit, ˙qb(t) = ∂hd
∂θ (t) ˙θ(t)
and hence
σ1(t) = ¯σN(t) = I(θ(t)) ˙θ(t).
(C.49)
Thus, by Hypotheses HO3 and HO4, I(θ) is nonzero on the periodic orbit. It
follows therefore by Proposition 6.1 that the determinant of the decoupling
matrix is nonzero on an open set about the periodic orbit, and hence by
restricting Q if necessary, Hypothesis HH2 is met. Hypotheses HH3 and HH4
© 2007 by Taylor & Francis Group, LLC

452
Feedback Control of Dynamic Bipedal Robot Locomotion
are trivially satisﬁed due to the choice of h(q) = qb −hd(θ). Hypothesis HH5
is implied by Hypothesis HO2, in particular, by the fact that the orbit is
transversal to S. By Lemma 5.1, the swing phase zero dynamics exists.
To establish existence of the hybrid zero dynamics, it remains to establish
impact invariance. Hypotheses HH5 and HO4 imply part (c) of Theorem 5.2,
and part (a) of that theorem establishes impact invariance. This concludes
the proof of part 1) of the theorem.
By construction of the output (6.83), O is a solution of the hybrid zero
dynamics (the invariance across the impact being part of the deﬁnition of
periodicity). By the deﬁnition of δzero, it satisﬁes σ+
1 = δzeroσ−
1 , establishing
δzero = lim
t→T
σ1(0)
σ1(t) .
(C.50)
By Hypothesis HO4, δzero > 0. Therefore, appealing to Corollary 5.1 es-
tablishes that O is an exponentially stable periodic orbit of the hybrid zero
dynamics when δzero < 1. Indeed, condition (5.79) holds because the hybrid
zero dynamics admits a solution and condition (5.80) is equivalent to (6.84).
C.4
Proof Associated with Chapter 7
C.4.1
Proof of Theorem 7.3
For Γ¯α+wδα based on ﬁnite-time control, as in (5.95) and Theorem 5.4, the
result is a corollary of Theorem 4.8. For Γ¯α+wδα as in (5.96) and Theorem 5.5,
the proof is given here.
Due to the form of the parameter dependence in the output (7.3), H0 and
θ(q) are independent of α. Hence, the coordinate transformation in (6.55) and
(6.56) is independent of the parameters, is globally well-deﬁned for all α ∈A,
and places the output in the form
y = h(˜q, α) := qb −hd(θ, α).
(C.51)
Based on (C.51), introduce the smooth global change of coordinates, valid for
all α ∈A,
⎡
⎢⎢⎢⎣
qb
˙qb
θ
˙θ
⎤
⎥⎥⎥⎦→
⎡
⎢⎢⎢⎣
υ1
υ2
θ
¯σN
⎤
⎥⎥⎥⎦,
(C.52)
where υ1 := y = h(˜q, α) = qb −hd(θ, α) and υ2 := ˙y = Lfh(˜q, ˙˜q, α). For w in
its domain of deﬁnition W (from ¯α being a regular value of α), the decoupling
© 2007 by Taylor & Francis Group, LLC

Proofs and Technical Details
453
matrix is invertible, and hence, by (a) of Proposition 6.1, so is
I(N−1)×(N−1) + ∂hd(θ, ¯α + wδα)
∂θ
˜Jnorm(qb).
(C.53)
In these coordinates, the system (7.25) becomes
˙υ1 = υ2
˙υ2 = −1
ϵ2 KP υ1 −1
ϵKDυ2
˙θ
=
¯σN
˜dN,N(qb) −˜Jnorm(qb) ˙qb
˙¯σN = −∂˜V
∂θ (qb, θ)
˙e
= 0
˙w
= 0
˙η
= 0
⎫
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎬
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎭
ˇx−̸∈S
ˇx+ = ˇΔ(ˇx−)
e+ = e−+ (η∗−η−)
w+ = ¯KP (η∗−η−) + ¯KIe−
η+ = ¯ν(x−, ¯α + w+δα)
⎫
⎪
⎪
⎪
⎬
⎪
⎪
⎪
⎭
ˇx−∈S
(C.54)
where
ˇx = (υ1; θ; υ2; ¯σN)
(C.55a)
qb = υ1 + hd(θ, α)
(C.55b)
˙qb =
$
I(N−1)×(N−1) + ∂hd(θ, α)
∂θ
˜Jnorm(qb)
%−1
"
υ2 + ∂hd(θ, α)
∂θ
¯σN
˜dN,N(qb)
#
(C.55c)
α = ¯α + wδα,
(C.55d)
and ˇΔ is the representation of Δ in the new coordinates. Deﬁning
ˇz := (θ; ¯σN; e; w; η)
(C.56a)
ˇη := (υ1; υ2)
(C.56b)
ˇS := S × R3
(C.56c)
ˇZ := {(Z¯α+wδα, e, ¯α + wδα, η) | w ∈W, e ∈R, η ∈R} ,
(C.56d)
it is straightforward to verify that all of the hypotheses of Theorem 4.6 are
met, with the restricted Poincar´e map given by (7.19) in closed loop with
(7.23).
© 2007 by Taylor & Francis Group, LLC

454
Feedback Control of Dynamic Bipedal Robot Locomotion
C.5
Proofs Associated with Chapter 9
C.5.1
Proof of Theorem 9.2
By (9.10), points in ˜S ∩Zs are parameterized by (qs−
0 ; ˙qs−
0 σs−
1 ). The position
of the center of mass (xs−
cm; ys−
cm) is obtained by evaluating (3.86) at qs−
0
and
its velocity is obtained from (9.15), ( ˙xs−
cm; ˙ys−
cm) = (λx(qs−
0 )σs−
1 ; λy(qs−
0 )σs−
1 ).
The angular momentum about the center of mass can be determined from
(3.107) to be
σs−
cm = σs−
1
−mtot

ys−
cmλx(qs−
0 )σs−
1
−xs−
cmλy(qs−
0 )σs−
1

.
(C.57)
Since the transition map from the stance phase to the ﬂight phase preserves
positions and velocities, (C.57) is also the angular momentum at the beginning
of the ﬂight phase, σf+
cm, and because angular momentum is conserved during
ballistic motion, (C.57) is also the value of the angular momentum at the
end of the ﬂight phase, σf−
cm.
From the hypotheses Δ( ˜S ∩Zs) ⊂Zs and
π ◦Δ( ˜S ∩Zs) is a single point, the position of the center of mass at the end
of the ﬂight phase is known and equal to the position of the center of mass
at the beginning of the subsequent stance phase, (xs+
cm; ys+
cm). From this, the
ﬂight time, tf, can be computed
tf = ˙ys−
cm
g0
+
6
( ˙ys−
cm)2 −2g0(ys+
cm −ys−
cm)
g0
,
(C.58)
and from (3.105), the velocity of the center of mass at the end of the ﬂight
phase is determined
 ˙xcm(tf)
˙ycm(tf)

=
⎡
⎢⎣
˙xs−
cm
−
6
( ˙ys−
cm)2 −2g0(ys+
cm −ys−
cm)
⎤
⎥⎦.
(C.59)
Equations (C.57), (C.59), and (3.107) allow the angular momentum about the
contact point at the end of the ﬂight phase, σf−
2 , to be evaluated, and then
(3.115) allows the evaluation of the angular momentum about the stance leg
at the beginning of the subsequence stance phase. This yields
σs+
1
= σs−
1
−mtot

ys−
cmλx(qs−
0 )σs−
1
−xs−
cmλy(qs−
0 )σs−
1

+
mtot
"
ys+
cmλx(qs−
0 )σs−
1
+ xs+
cm
6
(λy(qs−
0 )σs−
1 )2 −2g0(ys+
cm −ys−
cm)
#
,
(C.60)
which, after simpliﬁcation, completes the proof.
© 2007 by Taylor & Francis Group, LLC

Proofs and Technical Details
455
C.5.2
Proof of Theorem 9.3
From Section 5.4, in the coordinates (θs; Ks,zero = 1
2(σ1)2) for Zs, the stance-
phase zero dynamics can be integrated as
Ks,zero(θs) = Ks,zero(θ+
s ) −Vs,zero(θs).
(C.61)
Evaluating the above at θ−
s and applying (9.36) yields the restricted Poincar´e
map
ρ(ζ) = δe(ζ) −Vs,zero(θ−
s ),
(C.62)
where ζ = 1
2(σs−
1 )2. The domain of ρ follows from Theorem 5.3 on page 129.
Remark C.1
The integration of the stance phase zero dynamics can also
be expressed as
Ks,zero(θs) + Vs,zero(θs) = Ks,zero(θ+
s ),
(C.63)
for θ+
s ≤θs < θ−
s , which is conservation of total “pseudo-energy” during the
stance phase; see also Fig. 9.4.
C.5.3
Proof of Theorem 9.4
By (d) of Corollary 9.2, the hypotheses imply that ρ is strictly convex, and
by (c),
dρ
dζ ≤(χ −|β|)2 < 1. Hence, the graph of ρ can have at most one
intersection with the graph of the identity function, which implies that there
can exist at most one ﬁxed point. Since δe and ρ diﬀer by a constant, their
derivatives are equal and Corollary 9.2 applies equally to δe. Therefore, δe
is strictly increasing on ˜Dρ, and thus, if ˜ζ ∈˜Dρ, then ζ ∈˜Dρ for all ζ >
˜ζ. It follows that ˜Dρ is unbounded and connected. By Corollary 9.1, ζ∗is
exponentially stable.
Let ζ ∈˜Dρ be such that ζ < ζ∗. Then, since ρ is strictly increasing on ˜Dρ,
ρ(ζ) < ρ(ζ∗) = ζ∗. Hence, ρ(k)(ζ) is a strictly increasing sequence bounded
from above, and therefore has a limit.
By continuity of ρ, this limit is a
ﬁxed point of ρ, and by uniqueness of the ﬁxed point, limk→∞ρ(k)(ζ) = ζ∗.
Similarly, let ζ ∈˜Dρ be such that ζ > ζ∗. Then ζ∗= ρ(ζ∗) < ρ(ζ), and
similar reasoning shows that limk→∞ρ(k)(ζ) = ζ∗, with the convergence being
monotonic.
© 2007 by Taylor & Francis Group, LLC


D
Derivation of the Equations of Motion for
Three-Dimensional Mechanisms
This appendix summarizes how to use the method of Lagrange in order to
derive the equations of motion for robots comprised of N-link, open kinematic
chains with N one-DOF revolute joints, moving in three dimensions. The
purpose of including this material is to underline, in a more fundamental
manner, the invariance of the kinetic energy under translations and rotations
of the inertial frame, which is the source of cyclic variables of the kinetic
energy. The mechanical portion of the planar bipedal robot models of this
book are special cases of the models derived here. For the most part,1 the
calculations presented in this appendix parallel and, at points, duplicate the
calculations performed in [164, pp. 161–171] and [219, pp. 136–141].
Remark D.1
Though not treated in this book, feedback control of three-
dimensional legged robots is an active and important area of research. Some
key references are [6,57,58,80,116,143,185,212,217].
D.1
The Lagrangian
The Lagrangian for an N-link, rigid body open-chain robot with N one-DOF
revolute joints is a functional acting on points in the state space, x = (q; ˙q) ∈
X = T Q, where Q is a is a simply connected, open subset of TN+3 × R3.
The generalized coordinates q ∈Q give the robot’s shape, orientation, and
position in three-dimensional space.
The Lagrangian is deﬁned to be the
diﬀerence between the kinetic and potential energies
L(q, ˙q) := K(q, ˙q) −V (q).
(D.1)
1An exception is that the center of mass (COM) of an individual link is not assumed to
be coincident with the origin of its body coordinate frame (i.e., ¯rB ̸= 0 in Fig. D.1). This
is interesting because while the origin of the link body coordinate frames may be designed
to be collocated with the their respective centers of mass, upon robot construction and
parameter identiﬁcation, collocation is unlikely to hold.
457
© 2007 by Taylor & Francis Group, LLC

458
Feedback Control of Dynamic Bipedal Robot Locomotion
link i
A
B
rA
rB
¯rB
pAB
Figure D.1. A single link of an open-chain robot used to explain the method
of Lagrange. A is an inertial coordinate frame and B is a body coordinate
frame, i.e., it is aﬃxed to the link. The vector ¯r is from the origin of B to the
center of mass of the link. The vector rA (resp. rB) is from the origin of A
(resp. B) to an arbitrary point in the link. The vector pAB is from the origin
of A to the origin of B.
From Hamilton’s principle, the equations of motion can be calculated directly
from the Lagrangian as
d
dt
∂L
∂˙qi
−∂L
∂qi
= fi
(D.2)
where fi are joint torques and other nonconservative forces aﬀecting the i-th
generalized coordinate [90, pp. 34–45].
D.2
The Kinetic Energy
The ﬁrst ingredient required to calculate the Lagrangian is the total kinetic
energy. The kinetic energy of a single link will be calculated ﬁrst and then the
kinetic energy of the entire robot will be calculated. To prevent clutter, the
subscripts indicating the link will will be dropped until the end of the section.
The kinetic energy of an individual link (rigid body) is given by
K = 1
2

V
ρ(rB)|| ˙rA||2dV
(D.3)
where V ⊂R3 is the region of three-dimensional space occupied by the link,
ρ(rB), rB ∈V is the density of the link at point rB, and ||·|| is the two-norm.
© 2007 by Taylor & Francis Group, LLC

Derivation of the Equations of Motion for Three-Dimensional Mechanisms 459
The total mass of the link is
m =

V
ρ(r)dV
(D.4)
and the center of mass is then
¯r = 1
m

V
ρ(r)rdV.
(D.5)
Note that ¯r in (D.5) is in whatever coordinate frame the integral is performed.
Using the coordinate frames A and B as given in Fig. D.1, let RAB ∈SO(3)
denote the rotation matrix that takes vectors expressed in the coordinates of
the body frame B into vectors expressed in the coordinates of the inertial
frame A. Then rA and ˙rA may be expressed as
rA = pAB + RABrB
(D.6a)
˙rA = ˙pAB + ˙RABrB.
(D.6b)
For ω = [ω1; ω2; ω3] ∈R3, let 9ω denote the 3 × 3 skew-symmetric matrix
⎡
⎢⎣
0
−ω3 ω2
ω3
0
−ω1
−ω2 ω1
0
⎤
⎥⎦.
(D.7)
It follows that 9ω ∈so(3), the Lie algebra of SO(3). Conversely, every 3 × 3
skew-symmetric matrix can be expressed in the form (D.5), and the “unpack-
ing operation” is deﬁned by
⎡
⎢⎣
0
−ω3 ω2
ω3
0
−ω1
−ω2 ω1
0
⎤
⎥⎦
∨
:=
⎡
⎢⎣
ω1
ω2
ω3
⎤
⎥⎦,
(D.8)
so that (9ω)∨= ω.
Using this notation and the fact that R−1
AB ˙RAB is skew symmetric [164,
pp. 52], ˙RAB can be rewritten as
˙RAB = RABR−1
AB ˙RAB
(D.9a)
= RAB9ωB
(D.9b)
where
9ωB := R−1
AB ˙RAB
(D.10)
and
ωB :=
 
R−1
AB ˙RAB
!∨
∈R3
(D.11)
is the instantaneous angular velocity of the link in the body coordinate frame.
© 2007 by Taylor & Francis Group, LLC

460
Feedback Control of Dynamic Bipedal Robot Locomotion
It follows that (D.6b) can be rewritten as
˙rA = ˙pAB + RAB9ωBrB,
(D.12)
and the total kinetic energy (D.3) may be expanded as
K = 1
2

V
ρ(rB)|| ˙pAB + ˙RABrB||2dV
(D.13a)
= 1
2

V
ρ(rB)
 
|| ˙pAB||2 + || ˙RABrB||2 + 2 ˙p′
AB ˙RABrB
!
dV
(D.13b)
= 1
2

V
ρ(rB)

|| ˙pAB||2 + ||RAB9ωBrB||2 + 2 ˙p′
ABRAB9ωBrB

dV.
(D.13c)
The ﬁrst term of (D.13c) is due to translation of the link with respect to A.
The term is
Ktranslation = 1
2

V
ρ(rB)|| ˙pAB||2dV
(D.14a)
= 1
2 m|| ˙pAB||2.
(D.14b)
The second term of (D.13c) is due to rotation of the link about the origin of
B. The term is
Krotation = 1
2

V
ρ(rB)(RAB9ωBrB)′(RAB9ωBrB)dV
(D.15a)
= 1
2

V
ρ(rB)r′
B9ω′
BR′
ABRAB9ωBrBdV
(D.15b)
= 1
2

V
ρ(rB)r′
B9ω′
B9ωBrBdV
(D.15c)
= 1
2

V
ρ(rB)(−ω′
B9r′
B)(−9rBωB)dV
(D.15d)
= 1
2 ω′
B

V
ρ(rB)9r′
B9rBdV

ωB
(D.15e)
= 1
2 ω′
BIrotationωB
(D.15f)
where Irotation is the inertia tensor of the link expressed in the body frame.
The third term of (D.13c) is due to non-collocation2 of the origin of B and
the COM of the link,
Knon−collocation =

V
ρ(rB) ˙p′
ABRAB9ωBrBdV
(D.16a)
= m ˙p′
ABRAB9ωB ¯rB,
(D.16b)
2If the origin of B is the COM of the link, then ¯rB = 0 and this term is zero.
© 2007 by Taylor & Francis Group, LLC

Derivation of the Equations of Motion for Three-Dimensional Mechanisms 461
where ¯rB is the link’s center of mass in the coordinate frame B. Hence, the
total kinetic energy for the link may be expressed as
K = 1
2 m|| ˙pAB||2 + 1
2ω′
BIrotationωB + m ˙p′
ABRAB9ωB ¯rB
(D.17)
The dependence of ˙pAB, ωB, RAB and Irotation upon q and ˙q has been
suppressed up until this point. Each of these terms will be expressed in such
a way that (D.17) may be written in quadratic form.
The translational velocity of the origin of B with respect to A is
˙pAB(q, ˙q) = ∂p
∂q ˙q =: Jp(q) ˙q.
(D.18)
Expanding (D.10) yields
9ωB(q, ˙q) =
N+6

i=1
R−1
AB(q)∂RAB(q)
∂qi
˙qi
(D.19)
which may be rewritten as
ωB = JAB(q) ˙q
(D.20)
where
JAB(q) :=

R−1
AB(q)∂RAB(q)
∂q1
∨
. . .

R−1
AB(q)∂RAB(q)
∂qN+6
∨
.
(D.21)
Now, the kinetic energy of link-i (D.17) may be expressed as
Ki(q, ˙q) = 1
2 m ˙q′J′
p(q)Jp(q) ˙q + 1
2 ˙q′J′
AB(q)Irotation(q)JAB(q) ˙q
−m ˙q′J′
p(q)RAB(q)9¯rBJAB(q) ˙q
(D.22a)
= 1
2 ˙q′ ¯Di(q) ˙q
(D.22b)
where
¯Di(q) = mJp(q)′Jp(q) + J′
AB(q)Irotation(q)JAB(q)
−2mJ′
p(q)RAB(q)9¯rBJAB(q)
(D.23)
is a symmetric, positive semi-deﬁnite matrix. The total kinetic energy of the
robot is the sum of the kinetic energies of the individual links
K(q, ˙q) =
N

i=1
Ki(q, ˙q) = 1
2 ˙q′D(q) ˙q
(D.24)
where D(q) := 5N
i=1 ¯Di(q).
© 2007 by Taylor & Francis Group, LLC

462
Feedback Control of Dynamic Bipedal Robot Locomotion
D.3
The Potential Energy
The second ingredient required to calculate the Lagrangian is the total poten-
tial energy of the robot. Calculation of the potential energy is considerably
less complicated than calculation of the kinetic energy.
Let pv
cm,i(q) be the height of the center of mass of link i. The potential
energy for link i is simply
Vi(q) = g0mipv
cm,i(q),
(D.25)
where g0 is the acceleration due to gravity. The total potential energy of the
robot is then
V (q) =
N

i=1
Vi(q).
(D.26)
D.4
Equations of Motion
The equations of motion may now be directly calculated using (D.2). The
two primary structural properties of the Lagrangian that will be exploited are
the form of (D.22b) and the independence of the potential energy of ˙q. First,
expand (D.2) as
d
dt
∂K(q, ˙q)
∂˙qi
−∂K(q, ˙q)
∂qi
+ ∂V (q)
∂qi
= fi,
(D.27)
where fi are nonconservative forces aﬀecting the i-th generalized coordinate.
Expanding the ﬁrst term of (D.27) yields
d
dt
∂K(q, ˙q)
∂˙qi
= d
dt
⎛
⎝
N+6

j=1
Dij(q) ˙qj
⎞
⎠
(D.28a)
=
N+6

j=1
Dij(q)¨qj +
N+6

j,k=1
∂Dij(q)
∂qk
˙qj ˙qk.
(D.28b)
Expanding the second term of (D.27) yields
∂K(q, ˙q)
∂qi
= 1
2
N+6

j,k=1
∂Dkj(q)
∂qi
˙qj ˙qk.
(D.29)
© 2007 by Taylor & Francis Group, LLC

Derivation of the Equations of Motion for Three-Dimensional Mechanisms 463
Hence, (D.27) may be written as
N+6

j=1
Dij(q)¨qj +
N+6

j,k=1
∂Dij(q)
∂qk
˙qj ˙qk −1
2
∂Dkj(q)
∂qi
˙qj ˙qk

+ ∂V (q)
∂qi
= fi. (D.30)
To write (D.30) in vector form, deﬁne the Christoﬀel symbols to be
Γijk := 1
2
∂Dij(q)
∂qk
+ ∂Dik(q)
∂qj
−∂Dkj(q)
∂qi

,
(D.31)
and the Coriolis matrix C(q, ˙q) ∈R(N+6)×(N+6) to be
Cij(q, ˙q) :=
N+6

k=1
Γijk(q) ˙qk,
(D.32)
so that
N+6

j,k=1
∂Dij(q)
∂qk
˙qj ˙qk −1
2
∂Dkj(q)
∂qi
˙qj ˙qk

=
N+6

j=1
Cij ˙qj.
(D.33)
The eﬀect of the potential energy is represented by G ∈RN+6 deﬁned as
Gi(q) := ∂V (q)
∂qi
.
(D.34)
The torques and other nonconservative forces aﬀecting the i-th generalized
coordinate can often be decomposed as
fi(q, ˙q, u) = Fi(q, ˙q) + Ei(q)Fext + Bi(q)τ,
(D.35)
where F is a vector of frictional forces and Ei(q) and Bi are the i-th rows of
the matrices E and B which are deﬁned as follows. Decompose u ∈RP into
the torques and nonconservative forces, u = (Fext; τ), where Fext ∈R(P −Pτ )
and τ ∈RPτ . Let the nonconservative forces act at pj(q), j = 1, . . . , (P −Pτ)
so that
E(q) =
∂p(q)
∂q
′
.
(D.36)
Similarly, let ˜qj(q), j = 1, . . . , Pτ, be the relative angles of the actuated joints
so that
B(q) =
∂˜q(q)
∂q
′
.
(D.37)
Finally, assuming the decomposition of fi given in (D.35), the equations of
motion may be written in vector form as
D(q)¨q + C(q, ˙q) ˙q + G(q) −F(q, ˙q) = E(q)Fext + B(q)τ.
(D.38)
© 2007 by Taylor & Francis Group, LLC

464
Feedback Control of Dynamic Bipedal Robot Locomotion
link i
A
B
rA
rB
¯rB
pAB
p ˜
AA
˜A
Figure D.2. The inertial frame ˜A is translated by p ˜
AA and rotated by R ˜
AA
with respect to A.
D.5
Invariance Properties of the Kinetic Energy
Consider now a new inertial frame ˜A as in Fig. D.2, where p ˜
AA deﬁnes the
translation of the origin with respect to the original inertial frame A and R ˜
AA
deﬁnes the rotation. Let r ˜
A, p ˜
AB, and R ˜
AB be deﬁned as in (D.6a), per
r ˜
A = p ˜
AB + R ˜
ABrB,
(D.39)
so that
r ˜
A = p ˜
AA + R ˜
AArA.
(D.40)
It follows that
˙r ˜
A = R ˜
AA ˙rA
(D.41)
because p ˜
AA and R ˜
AA are constant.
Computing the kinetic energy in the inertial frame ˜A gives
˜K = 1
2

V
ρ(rB)|| ˙r ˜
A||2dV = 1
2

V
ρ(rB)||R ˜
AA ˙rA||2dV = K,
(D.42)
because
||R ˜
AA ˙rA|| = || ˙rA||.
(D.43)
Hence, the kinetic energy is invariant under translations and rotations of the
inertial frame.
© 2007 by Taylor & Francis Group, LLC

E
Single Support Equations of Motion of
RABBIT
This appendix gives the details of the equations of motion for RABBIT during
the swing phase. The intention is to impress upon the reader the complexity
of the robot’s dynamics. Chapter 5 demonstrates that despite this appar-
ent complexity, the structure of the dynamics may be leveraged for controller
design. The deﬁnition of the parameters in the model can be found in Sec-
tion 6.6.2. The values of the constants used in the design of the controllers
tested in the experiments can be found in Table 6.3.
The equations have the general matrix form
D(q)¨q + C(q, ˙q) ˙q + G(q) = Bu
(E.1)
where
(D(q))1,1
=
It + If + 4Mflflt cos(q3) + 2Mfl2
t + 2Mtlflt cos(q3) +
2MT lflt cos(q3) + Ia,H −2pM
f lt cos(q3) + 2Mfl2
f −
2pM
t lt + Mtl2
f + MT l2
f + MT l2
t −2pM
f lf + 2Mtl2
t
(D(q))1,2
=
−pM
t lf cos(−q2 −q4 + q1) −Mtltlf cos(q1 + q3 −q2) −
Mtl2
f cos(q1 −q2) −pM
f lf cos(q1 −q2) −
pM
f lt cos(q1 + q3 −q2) −pM
t lt cos(−q2 −q4 + q1 + q3)
(D(q))1,3
=
−2pM
t lt + 2Mfl2
t + 2Mflflt cos(q3) + Mtlflt cos(q3) +
2Mtl2
t + MT lflt cos(q3) −pM
f lt cos(q3) + It + MT l2
t
(D(q))1,4
=
−pM
t lt cos(−q2 −q4 + q1 + q3)−pM
t lf cos(−q2 −q4 + q1)
(D(q))1,5
=
2Mfl2
t −pM
t lf cos(−q2 −q4 + q1) −
Mtltlf cos(q1 + q3 −q2) −Mtl2
f cos(q1 −q2) −
pM
f lf cos(q1 −q2) −pM
f lt cos(q1 + q3 −q2) +
2Mtlflt cos(q3) + 2MTlflt cos(q3) + 2Mfl2
f −2pM
t lt +
Mtl2
f + MT l2
f + MTl2
t + 4Mflflt cos(q3) −2pM
f lf +
2Mtl2
t −pM
T lt cos(q1 + q3) −pM
T lf cos(q1) −
2pM
f lt cos(q3) −pM
t lt cos(−q2 −q4 + q1 + q3) + If + It
(D(q))2,2
=
Mtl2
f + If + 2pM
t lf cos(q4) + Ia,H + It
(D(q))2,3
=
−lt(pM
f cos(q1 + q3 −q2) + Mtlf cos(q1 + q3 −q2) +
pM
t cos(−q2 −q4 + q1 + q3))
(D(q))2,4
=
It + pM
t lf cos(q4)
465
© 2007 by Taylor & Francis Group, LLC

466
Feedback Control of Dynamic Bipedal Robot Locomotion
(D(q))2,5
=
Mtl2
f −pM
f lf cos(q1 −q2) −Mtl2
f cos(q1 −q2) +
2pM
t lf cos(q4) −pM
t lt cos(−q2 −q4 + q1 + q3) −
pM
t lf cos(−q2 −q4 + q1) + It + If −
pM
f lt cos(q1 + q3 −q2) −Mtltlf cos(q1 + q3 −q2)
(D(q))3,3
=
−2pM
t lt + 2Mfl2
t + Ia,K + 2Mtl2
t + It + MT l2
t
(D(q))3,4
=
−pM
t lt cos(−q2 −q4 + q1 + q3)
(D(q))3,5
=
−2pM
t lt + 2Mfl2
t + 2Mtl2
t + MT l2
t + MT lflt cos(q3) +
Mtlflt cos(q3) + 2Mflflt cos(q3) −pM
T lt cos(q1 + q3) −
pM
t lt cos(−q2 −q4 + q1 + q3) −pM
f lt cos(q3) + It −
pM
f lt cos(q1 + q3 −q2) −Mtltlf cos(q1 + q3 −q2)
(D(q))4,4
=
It + Ia,K
(D(q))4,5
=
pM
t lf cos(q4) −pM
t lt cos(−q2 −q4 + q1 + q3) + It −
pM
t lf cos(−q2 −q4 + q1)
(D(q))5,5
=
2pM
t lf cos(q4) + 2Mfl2
t −2pM
t lf cos(−q2 −q4 + q1) −
2Mtltlf cos(q1 + q3 −q2) −2Mtl2
f cos(q1 −q2) −
2pM
f lf cos(q1 −q2) −2pM
f lt cos(q1 + q3 −q2) +
2Mtlflt cos(q3) + 2MTlflt cos(q3) + 2Mfl2
f −2pM
t lt +
2Mtl2
f +MTl2
f +MT l2
t +4Mflflt cos(q3)−2pM
f lf +2Mtl2
t −
2pM
T lt cos(q1 + q3) −2pM
T lf cos(q1) −2pM
f lt cos(q3) −
2pM
t lt cos(−q2 −q4 + q1 + q3) + IT + 2If + 2It
(C(q, ˙q))1,1
=
−lt(2Mflf sin(q3) + Mtlf sin(q3) + MT lf sin(q3) −
pM
f sin(q3)) ˙q3
(C(q, ˙q))1,2
=
−˙q4pM
t lf sin(−q2 −q4 + q1) −˙q2Mtl2
f sin(q1 −q2) −
˙q2pM
t lf sin(−q2 −q4 + q1) −˙q2pM
f lf sin(q1 −q2) −
˙q5pM
t lf sin(−q2 −q4 + q1) −˙q5pM
f lf sin(q1 −q2) −
˙q5Mtl2
f sin(q1 −q2) −˙q5Mtltlf sin(q1 + q3 −q2) −
˙q5pM
t lt sin(−q2 −q4 + q1 + q3) −
˙q5pM
f lt sin(q1 + q3 −q2) −˙q2Mtltlf sin(q1 + q3 −q2) −
˙q2pM
t lt sin(−q2 −q4 + q1 + q3) −
˙q2pM
f lt sin(q1 + q3 −q2) −˙q4pM
t lt sin(−q2 −q4 + q1 + q3)
(C(q, ˙q))1,3
=
−lt( ˙q5 + ˙q3 + ˙q1)(2Mflf sin(q3) + Mtlf sin(q3) +
MT lf sin(q3) −pM
f sin(q3))
(C(q, ˙q))1,4
=
(−˙q2 −˙q4 −˙q5)(pM
t lt sin(−q2 −q4 + q1 + q3) +
pM
t lf sin(−q2 −q4 + q1))
© 2007 by Taylor & Francis Group, LLC

Single Support Equations of Motion of RABBIT
467
(C(q, ˙q))1,5
=
−2 ˙q3Mflflt sin(q3) −˙q3Mtlflt sin(q3) −
˙q3MT lflt sin(q3) + ˙q3pM
f lt sin(q3) −˙q2pM
f lf sin(q1 −q2) −
˙q2Mtl2
f sin(q1 −q2) −˙q2pM
t lf sin(−q2 −q4 + q1) −
˙q4pM
t lf sin(−q2 −q4 + q1) −˙q5pM
T lf sin(q1) −
˙q5pM
f lf sin(q1 −q2) −˙q5pM
t lf sin(−q2 −q4 + q1) −
˙q5Mtl2
f sin(q1 −q2) −˙q5Mtltlf sin(q1 + q3 −q2) −
˙q5pM
T lt sin(q1 + q3) −˙q5pM
t lt sin(−q2 −q4 + q1 + q3) −
˙q5pM
f lt sin(q1 + q3 −q2) −
˙q4pM
t lt sin(−q2 −q4 + q1 + q3) −
˙q2Mtltlf sin(q1 + q3 −q2) −
˙q2pM
t lt sin(−q2 −q4 + q1 + q3) −˙q2pM
f lt sin(q1 + q3 −q2)
(C(q, ˙q))2,1
=
˙q1pM
f lf sin(q1 −q2) + ˙q3Mtltlf sin(q1 + q3 −q2) +
˙q1Mtltlf sin(q1 + q3 −q2) +
˙q3pM
t lt sin(−q2 −q4 + q1 + q3) +
˙q1pM
t lf sin(−q2 −q4 + q1) + ˙q1Mtl2
f sin(q1 −q2) +
˙q1pM
f lt sin(q1 + q3 −q2) +
˙q1pM
t lt sin(−q2 −q4 + q1 + q3) +
˙q3pM
f lt sin(q1 + q3 −q2) + ˙q5pM
f lf sin(q1 −q2) +
˙q5pM
t lf sin(−q2 −q4 + q1) + ˙q5Mtl2
f sin(q1 −q2) +
˙q5Mtltlf sin(q1 + q3 −q2) +
˙q5pM
t lt sin(−q2 −q4 + q1 + q3) + ˙q5pM
f lt sin(q1 + q3 −q2)
(C(q, ˙q))2,2
=
−lf ˙q4pM
t sin(q4)
(C(q, ˙q))2,3
=
lt( ˙q5 + ˙q3 + ˙q1)(pM
f sin(q1 + q3 −q2) +
Mtlf sin(q1 + q3 −q2) + pM
t sin(−q2 −q4 + q1 + q3))
(C(q, ˙q))2,4
=
−lf( ˙q2 + ˙q4 + ˙q5)pM
t sin(q4)
(C(q, ˙q))2,5
=
˙q1pM
f lf sin(q1 −q2) + ˙q3Mtltlf sin(q1 + q3 −q2) +
˙q1Mtltlf sin(q1 + q3 −q2) −lf ˙q4pM
t sin(q4) +
˙q3pM
t lt sin(−q2 −q4 + q1 + q3) +
˙q1pM
t lf sin(−q2 −q4 + q1) + ˙q1Mtl2
f sin(q1 −q2) +
˙q1pM
f lt sin(q1 + q3 −q2) +
˙q1pM
t lt sin(−q2 −q4 + q1 + q3) +
˙q3pM
f lt sin(q1 + q3 −q2) + ˙q5pM
f lf sin(q1 −q2) +
˙q5pM
t lf sin(−q2 −q4 + q1) + ˙q5Mtl2
f sin(q1 −q2) +
˙q5Mtltlf sin(q1 + q3 −q2) +
˙q5pM
t lt sin(−q2 −q4 + q1 + q3) + ˙q5pM
f lt sin(q1 + q3 −q2)
(C(q, ˙q))3,1
=
lt( ˙q1 + ˙q5)(2Mflf sin(q3) + Mtlf sin(q3) + MT lf sin(q3) −
pM
f sin(q3))
(C(q, ˙q))3,2
=
−lt(sin(q1 + q3 −q2)lfMt ˙q2 +
sin(−q2 −q4 + q1 + q3)pM
t ˙q2 + sin(q1 + q3 −q2)pM
f ˙q2 +
sin(−q2 −q4 + q1 + q3)pM
t ˙q4 +
˙q5pM
t sin(−q2 −q4 + q1 + q3) + ˙q5pM
f sin(q1 + q3 −q2) +
˙q5Mtlf sin(q1 + q3 −q2))
© 2007 by Taylor & Francis Group, LLC

468
Feedback Control of Dynamic Bipedal Robot Locomotion
(C(q, ˙q))3,3
=
0
(C(q, ˙q))3,4
=
−lt( ˙q2 + ˙q4 + ˙q5)pM
t sin(−q2 −q4 + q1 + q3)
(C(q, ˙q))3,5
=
−lt(−2 sin(q3)lfMf ˙q1 −sin(q3)lfMt ˙q1 −sin(q3)lfMT ˙q1 +
sin(q3)pM
f ˙q1 + sin(−q2 −q4 + q1 + q3)pM
t ˙q2 +
sin(q1 + q3 −q2)pM
f ˙q2 + sin(q1 + q3 −q2)lfMt ˙q2 +
sin(−q2 −q4 + q1 + q3)pM
t ˙q4 + ˙q5pM
f sin(q3) +
˙q5pM
T sin(q1 + q3) −2 ˙q5Mflf sin(q3) −˙q5Mtlf sin(q3) −
˙q5MT lf sin(q3) + ˙q5pM
t sin(−q2 −q4 + q1 + q3) +
˙q5Mtlf sin(q1 + q3 −q2) + ˙q5pM
f sin(q1 + q3 −q2))
(C(q, ˙q))4,1
=
˙q1pM
t lt sin(−q2 −q4 + q1 + q3) +
˙q1pM
t lf sin(−q2 −q4 + q1) +
˙q3pM
t lt sin(−q2 −q4 + q1 + q3) +
˙q5pM
t lt sin(−q2 −q4 + q1 + q3) +
˙q5pM
t lf sin(−q2 −q4 + q1)
(C(q, ˙q))4,2
=
lf( ˙q2 + ˙q5)pM
t sin(q4)
(C(q, ˙q))4,3
=
lt( ˙q5 + ˙q3 + ˙q1)pM
t sin(−q2 −q4 + q1 + q3)
(C(q, ˙q))4,4
=
0
(C(q, ˙q))4,5
=
˙q1pM
t lt sin(−q2 −q4 + q1 + q3) +
˙q1pM
t lf sin(−q2 −q4 + q1) + ˙q2pM
t lf sin(q4) +
˙q3pM
t lt sin(−q2 −q4 + q1 + q3) + ˙q5pM
t lf sin(q4) +
˙q5pM
t lt sin(−q2 −q4 + q1 + q3) +
˙q5pM
t lf sin(−q2 −q4 + q1)
(C(q, ˙q))5,1
=
˙q1pM
f lf sin(q1 −q2) + ˙q3Mtltlf sin(q1 + q3 −q2) +
˙q1Mtltlf sin(q1 + q3 −q2) −2 ˙q3Mflflt sin(q3) −
˙q3Mtlflt sin(q3)+ ˙q1pM
T lt sin(q1 + q3)−˙q3MT lflt sin(q3)+
˙q3pM
f lt sin(q3) + ˙q3pM
T lt sin(q1 + q3) + ˙q5pM
T lf sin(q1) +
˙q1pM
T lf sin(q1) + ˙q3pM
t lt sin(−q2 −q4 + q1 + q3) +
˙q1pM
t lf sin(−q2 −q4 + q1) + ˙q1Mtl2
f sin(q1 −q2) +
˙q1pM
f lt sin(q1 + q3 −q2) +
˙q1pM
t lt sin(−q2 −q4 + q1 + q3) +
˙q3pM
f lt sin(q1 + q3 −q2) + ˙q5pM
f lf sin(q1 −q2) +
˙q5pM
t lf sin(−q2 −q4 + q1) + ˙q5Mtl2
f sin(q1 −q2) +
˙q5Mtltlf sin(q1 + q3 −q2) + ˙q5pM
T lt sin(q1 + q3) +
˙q5pM
t lt sin(−q2 −q4 + q1 + q3) + ˙q5pM
f lt sin(q1 + q3 −q2)
© 2007 by Taylor & Francis Group, LLC

Single Support Equations of Motion of RABBIT
469
(C(q, ˙q))5,2
=
−lf ˙q4pM
t sin(q4) −˙q2pM
f lf sin(q1 −q2) −
˙q2Mtl2
f sin(q1 −q2) −˙q2pM
t lf sin(−q2 −q4 + q1) −
lf ˙q4pM
t sin(−q2 −q4 + q1) −˙q5pM
f lf sin(q1 −q2) −
˙q5pM
t lf sin(−q2 −q4 + q1) −˙q5Mtl2
f sin(q1 −q2) −
˙q5Mtltlf sin(q1 + q3 −q2) −
˙q5pM
t lt sin(−q2 −q4 + q1 + q3) −
˙q5pM
f lt sin(q1 + q3 −q2) −
˙q4pM
t lt sin(−q2 −q4 + q1 + q3) −
˙q2Mtltlf sin(q1 + q3 −q2) −
˙q2pM
t lt sin(−q2 −q4 + q1 + q3) −˙q2pM
f lt sin(q1 + q3 −q2)
(C(q, ˙q))5,3
=
lt( ˙q5 + ˙q3 + ˙q1)(Mtlf sin(q1 + q3 −q2) −2Mflf sin(q3) +
pM
f sin(q1 + q3 −q2) −MTlf sin(q3) + sin(q1 + q3)pM
T +
pM
f sin(q3) + pM
t sin(−q2 −q4 + q1 + q3) −Mtlf sin(q3))
(C(q, ˙q))5,4
=
(−˙q2 −˙q4 −˙q5)(pM
t lf sin(q4) +
pM
t lt sin(−q2 −q4 + q1 + q3) + pM
t lf sin(−q2 −q4 + q1))
(C(q, ˙q))5,5
=
˙q3pM
t lt sin(−q2 −q4 + q1 + q3) + ˙q1pM
f lf sin(q1 −q2) +
˙q1pM
t lf sin(−q2 −q4 + q1) + ˙q1Mtl2
f sin(q1 −q2) +
˙q1pM
f lt sin(q1 + q3 −q2) −lf ˙q4pM
t sin(q4) +
˙q1pM
t lt sin(−q2 −q4 + q1 + q3) −
˙q2pM
t lf sin(−q2 −q4 + q1) −˙q2Mtl2
f sin(q1 −q2) −
˙q2pM
f lf sin(q1 −q2) −lf ˙q4pM
t sin(−q2 −q4 + q1) −
˙q4pM
t lt sin(−q2 −q4 + q1 + q3) −
˙q2Mtltlf sin(q1 + q3 −q2) −˙q2pM
f lt sin(q1 + q3 −q2) −
˙q2pM
t lt sin(−q2 −q4 + q1 + q3) +
˙q3pM
f lt sin(q1 + q3 −q2) + ˙q1pM
T lf sin(q1) +
˙q3Mtltlf sin(q1 + q3 −q2) + ˙q1Mtltlf sin(q1 + q3 −q2) −
˙q3MT lflt sin(q3)−˙q3Mtlflt sin(q3)+ ˙q1pM
T lt sin(q1 + q3)+
˙q3pM
T lt sin(q1 + q3) + ˙q3pM
f lt sin(q3) −2 ˙q3Mflflt sin(q3)
(G(q))1,1
=
g0(lf sin(q1 + q5)MT + lt sin(q1 + q3 + q5)MT +
2lf sin(q1 + q5)Mf + 2lt sin(q1 + q3 + q5)Mf −
sin(q1 + q5)pM
f + 2lt sin(q1 + q3 + q5)Mt −
sin(q1 + q3 + q5)pM
t
+ lf sin(q1 + q5)Mt)
(G(q))2,1
=
g0(−sin(q2 + q5)pM
f −lf sin(q2 + q5)Mt −
sin(q2 + q4 + q5)pM
t )
(G(q))3,1
=
g0(lt sin(q1 + q3 + q5)MT + 2lt sin(q1 + q3 + q5)Mf +
2lt sin(q1 + q3 + q5)Mt −sin(q1 + q3 + q5)pM
t )
(G(q))4,1
=
−g0 sin(q2 + q4 + q5)pM
t
© 2007 by Taylor & Francis Group, LLC

470
Feedback Control of Dynamic Bipedal Robot Locomotion
(G(q))5,1
=
g0(lf sin(q1 + q5)MT + lt sin(q1 + q3 + q5)MT −
sin(q5)pM
T + 2lf sin(q1 + q5)Mf +
2lt sin(q1 + q3 + q5)Mf −sin(q1 + q5)pM
f −
sin(q2 + q5)pM
f + 2lt sin(q1 + q3 + q5)Mt −
sin(q1 + q3 + q5)pM
t
+ lf sin(q1 + q5)Mt −
lf sin(q2 + q5)Mt −sin(q2 + q4 + q5)pM
t )
and
B
=

I
0

.
© 2007 by Taylor & Francis Group, LLC

Nomenclature
(x1, x2, · · · , xm)
an m-tuple
(x1; x2; · · · ; xm)
a column vector
Q, T Q
conﬁguration and state manifolds
K, V
kinetic and potential energies
D, C, G, B
matrices of the Lagrange equations of motion, the mass-
inertia matrix, the matrix of Coriolis and centrifugal terms,
the vector of terms associated with conservative potentials,
and the input matrix
f, g, h
drift vector ﬁeld, control vector ﬁeld, output
q, ˙q, x, u
generalized conﬁguration variables, generalized velocities,
state (x = (q; ˙q)), input
θ
function of conﬁguration that is selected to be strictly mono-
tonic over a step
Δ, Δq , Δ ˙q
impact map, impact map for positions, impact map for ve-
locities
O
orbit
S
Poincar´e section
Z
zero dynamics manifold
P
Poincar´e map
ρ
restricted Poincar´e map
⋆+, ⋆−
denotes the beginning or end of phase ⋆
g0
gravitational constant
mtot
total mass
N
number of links
σ⋆, ¯σi
angular momentum about the point ⋆and generalized an-
gular momentum conjugate to ˙qi
ph
⋆, pv
⋆
horizontal and vertical positions of a point ⋆on the robot
S1, Tn
the unit circle and the n-torus: Tn = S1 × S1 × · · · × S1



n−times
471
© 2007 by Taylor & Francis Group, LLC


End Notes
Notes on Chapter 1
The literature on bipedal robots is already quite extensive. The reader seek-
ing a general overview would do well to start with [123,180,185,224,235], in
that order. Some control-oriented works that we have found especially illumi-
nating, because of their emphasis on analytical aspects of walking, running,
and balancing are [28, 76, 143, 170, 184, 202, 216, 217]. For an insightful anal-
ysis of another system that exhibits limit cycles and impacts, see [193]. For
a very simple and insightful analysis of a planar rimless wheel as a model of
walking, see [56], and for the 3-D rimless wheel, see [210]. A rich literature
is developing on feedback control design based on path following as a means
to overcome performance limitations due to trajectory tracking; see [3,61,62]
The reader seeking further information on the ZMP and other ground ref-
erence points, such as the FRI, is referred to [177,234] and references therein.
Notes on Chapter 2
The description of RABBIT is taken from [43]. As pointed out in Chapter 1,
for legged robots, the evolution of the individual joints during a walking or
running gait is far from being uniquely speciﬁed by speed, step length, knee
ﬂexion direction, torso posture, etc. An often used criterion for deﬁning a
(time-based) reference trajectory is to minimize the energy consumed per
distance traveled along a periodic orbit of the robot model. The determination
of reference trajectories is important during the design phase of a walking
robot in order to determine the sizes of links, mass distribution, and the
choice of the actuators [44,47,49].
History of RABBIT: The CNRS research project that resulted in the con-
struction of RABBIT began in 1997.
In 1997 and 1998, B. Espiau (Inria Rhˆone Alpes) and C. Canudas de Wit
(Automatic Control Laboratory of Grenoble (LAG)) formulated the general
speciﬁcations for a prototype biped under the PrC-GdR project entitled Con-
trol of Walking Robots. The following is a list of laboratories and personnel
who contributed to this project: Laboratoire de M´ecanique des Solides
de Poitiers (LMS) (P. Sardain, G. Bessonnet, and M. Rostami), LSIIT-
GRAII, Strasbourg (G. Abba and N. Chaillet), INRIA Rhˆone-Alpes
(B. Espiau, A. Goswami, F. G´enot, P. B. Wieber, and B.Thuilot), INRIA
Sophia-Antipolis (C. Samson and C. Fran¸cois), Laboratoire de Robo-
tique de Paris (LRP) (N. M’Sirdi, N. Manamami, N. Nadjar-Gauthier,
473
© 2007 by Taylor & Francis Group, LLC
and references therein.

474
Feedback Control of Dynamic Bipedal Robot Locomotion
P. Blazevic, G. Beurier, F. B. Ouezdou, O. Bruneau), Laboratoire d’Au-
tomatique de Grenoble (LAG) (C. Canudas de Wit, A. Loria, L. Rous-
sel, C. Acosta), and Laboratoire d’Automatique de Nantes (LAN) (C.
Chevallereau, B. Perrin, A. Formal’sky, Y. Aoustin). Financial support was
provided by the CNRS.
From September 1999 to September 2001, C. Chevallereau (IRCyN) and
A. Loria (LAG) with the support of the Automatic Control Research Group
under the project entitled Control of Walking Robots conducted activities
that allowed the realization of the prototype RABBIT. The following is a
list of laboratories and personnel who contributed to this project: INRIA
Rhˆone-Alpes (B. Espiau, A. Goswami, P. B. Wieber, F. Genot, and E. Pan-
teley), INRIA Sophia-Antipolis (C. Samson and J.B. Pomet), Institut
de Recherche en Cybern´etique de Nantes (IRCyN) (C. Chevallereau,
A. Formal’sky, and Y. Aoustin), Laboratoire d’Automatique de Greno-
ble (LAG) (C. Canudas de Wit, B. Brogliato, and A. Loria), Laboratoire
de Mcanique des Solides de Poitiers (LMS) (G. Bessonnet, and P. Sar-
dain), LSIIT-GRAII (G. Abba and F. Plestan), Laboratoire de Robo-
tique de Paris (LRP) (N. M’Sirdi, N. Nadjar-Gauthier, F. B. Ouezdou,
and P. Blazevic), and Laboratoire Vision et Robotique (Bourges) (P.
Poignet, J. Fontaine, and J. Louboutin). This part of the project was funded
from 1999–2001.
From November 2001 to November 2004, C. Chevallereau (IRCCyN) and
A. Loria (LSS) with support of the CNRS project ROBEA (Robotique et
Entit´es Artiﬁcielles) under the subproject Control of a Walking and Run-
ning Biped Robot directed a French national collaboration on a single walk-
ing robot, RABBIT. The following is a list of laboratories and personnel
who contributed to this project: Institut de Recherche en Communica-
tions et Cybernetique de Nantes (IRCCyN) (Y. Aoustin, R. Chellali, C.
Chevallereau, C. Moog, M. Gautier, A. Muraro, F. Plestan, S. Miossec, and D.
Djoudi), Laboratoire d’Automatique de Grenoble (LAG) (G. Buche,
C. Canudas de Wit, A. Chemouri, A. Franco, A. Loria, and C. Urrea), Lab-
oratoire de G´enie Industriel et de Production M´ecanique (LGIPM)
de l’universit´e de Metz (G. Abba, C. Bop , D. Mihalachi, and A. Siadat),
Laboratoire d’Informatique, de Robotique et de Micro-´electronique
de Montpellier (LIRMM) (P. Poignet and F. Lydoire), Laboratoire de
M´ecanique des Solides (LMS) de Poitiers (G. Bessonnet, S. Chesse,
P. Sardain, and P. Seguin), Laboratoire de Robotique de Paris (LRP)
(J.C. Cadiou, N. M’Sirdi, N. Nadjar-Gauthier, and P. Bonnin), Laboratoire
de Vision et Robotique (LVR) de Bourges (D. Boutat, O. Bruneau,
and C. Sabourin), and Puis Laboratoire des Signaux et Syst`emes (A.
Loria). Funding was provided by the CNRS.
Notes on Chapter 3
The notion of a nonlinear system with impulse eﬀects is taken from [13]
and [250].
The ﬁrst use of this class of models in legged locomotion was
© 2007 by Taylor & Francis Group, LLC

End Notes
475
in [98]. Prior to this paper, legged locomotion models were not described in
such formal terms. Typically, the mechanical model of the robot was quite
precisely speciﬁed, the impact model was described in less precise terms, and
the desired properties of the gait were the least formally described. Formaliz-
ing the models is the ﬁrst step toward developing a control theory of bipedal
walking.
Systems with impulse eﬀects have not been extensively studied. The sta-
bility analysis of equilibrium points can be found in [13,250], using Lyapunov
methods. Steady state walking and running gaits clearly correspond, however,
to nontrivial periodic orbits, and not to equilibrium solutions of the model.
This has motivated the use of Poincar´e return maps to determine the exis-
tence and stability properties of periodic orbits in models of legged machines;
see [74,85,86,93,120,143].
The analysis carried out in this book is heavily dependent on the use of
a rigid impact model. Alternatives to the rigid impact model are discussed
in [25,36,176,208,236–238,249].
Notes on Chapter 4
Haddad and coauthors have a very nice set of papers on Poincar´e’s method
for systems with impulse eﬀects and for a more general class of systems called
left-continuous systems [39,104–107,167]. For even more general methods of
representing models of systems with unilateral constraints and impact behav-
ior, the reader is referred to [12] and [24]. Section 4.2.1 is based on [98], with
considerable inspiration coming from [173]. The stability analyses performed
on the basis of ﬁnite-time convergence and the restricted Poincar´e map are
based on [98] and [245], while the result using suﬃciently rapid exponential
convergence was taken from [161].
The results on event-based control are
inspired by [100,243]; see also [95].
Notes on Chapter 5
Early deﬁnitions of the zero dynamics of a time-invariant nonlinear control
system were proposed by Krener and Isidori in 1980 (using controlled-invariant
distributions), by Byrnes and Isidori in 1984, and Marino in 1985 (using in-
verse systems) as a tool for feedback design and stability analysis. An impor-
tant reﬁnement of the concept was achieved by Isidori and Moog in 1988 [128],
where three equivalent state-space characterizations of the zero dynamics of a
linear time-invariant system were evaluated and compared for nonlinear sys-
tems. One of these characterizations was the now-familiar deﬁnition of the
zero dynamics as the restriction dynamics to the largest controlled-invariant
manifold contained in the zero set of the output. The role of the zero dynam-
ics in the asymptotic stabilization of equilibrium points is very nicely treated
in [32].
In the context of bipedal robots, early papers using the zero dynamics
(of the swing phase) are [97, 99, 151, 176]; these papers did not address the
invariance under the impact map. A method to obtain invariance under the
impact map “in the limit” through high-gain feedback control was analyzed in
© 2007 by Taylor & Francis Group, LLC

476
Feedback Control of Dynamic Bipedal Robot Locomotion
[98]. The notion of a hybrid zero dynamics was introduced in [244,245]; these
papers are the sources for most of the material in this chapter. Section 5.2.2
is taken from [242]; Section 5.5.1 draws on [98]; and Section 5.5.2 is taken
from [161].
Notes on Chapter 6
The use of B´ezier polynomials and parameter optimization for designing simul-
taneously a periodic orbit and a stabilizing controller was introduced in [245].
Section 6.3.1 is from [242]. Sections 6.4 and 6.5 are based on [246,247]. Fig-
ure 6.7 is from [43]. Section 6.6.1 is from [98]. Section 6.6.2 is from [245].
Section 6.6.3 is from [246,247]. Further results on using virtual constraints
are available in [34].
An interesting aspect of the paper [176] was that it showed how to go from a
periodic solution of the robot’s hybrid model to a set of holonomic constraints
that would render invariant the same periodic orbit. Using this method, it is
possible to transform many time-varying control algorithms based on trajec-
tory tracking to time-invariant control algorithms based on virtual constraints.
This can be carried out without explicitly computing the zero dynamics, as
shown in Section 6.5. A quite diﬀerent way to go from a periodic solution of
a model to a time-invariant controller has been developed in [46] for systems
with one degree of underactuation; see also [41,42]. Consider a periodic solu-
tion of an N DOF model as a curve in the conﬁguration space of the robot
for a single step. The curve has a beginning and an end determined by the
double support condition. Introduce a parameter, s, that is similar to arc-
length in that s = 0 at the beginning of the curve and s = 1 at the end, with
intermediate values of s parameterizing the posture of the robot, qd(s), as it
progresses from the beginning of a step to the end. The condition q(s)−qd(s)
deﬁnes the virtual constraints to be imposed by the control law. The freedom
in how s itself evolves as a function of time, from its initial value of zero to its
ﬁnal value of one, can be used to augment the N −1 joint torques (already
available for control) with the acceleration ¨s; this makes the system now look
like it is fully actuated: N degrees of motion freedom and N controls. Conse-
quently, a dynamic state-feedback controller can be found that drives a vector
of N outputs, y = q(s) −qd(s), asymptotically to zero. An advantage of this
approach is that a monotonic parameter that replaces time is automatically
produced, so the control designer does not have to ﬁnd one a priori. From
a theoretical perspective, this idea may be especially useful for applying the
method of virtual constraints to mechanisms with a large number of degrees
of freedom. A potential disadvantage is that, since the evolution of s must be
determined from the model, it is unclear how sensitive the closed-loop system
may be to model uncertainty. Further work is still needed to clarify this issue.
Notes on Chapter 7
The main idea of this chapter is to view parameters embedded in a within-
stride controller as event-based control signals for a stride-to-stride controller.
The underlying discrete-time model for event-based control design comes from
© 2007 by Taylor & Francis Group, LLC

End Notes
477
the Poincar´e map. This idea was formalized in [243]. The results on switching
control are taken from [243]. The results on PI control are from [100,242,243];
see also [95].
Notes on Chapter 8
The experiments reported for RABBIT are based solely on [242]. ERNIE took
its ﬁrst steps in December 2006; the reported experiments were performed
January 2007 by Tao Yang and JeﬀWensink.
Notes on Chapter 9
Sections 9.8–9.9 are from [163]. The remainder of the chapter is based solely
on [51].
Notes on Chapter 10
With the exception of Section 10.2.8, the work reported in the chapter is based
on [52,54].
An analysis of a robot with impulsive foot action is given in [52,53]. This
work extends the results of Chapters 3, 5, and 6 to include the impulsive
actuator model of Kuo [144]. An impulsive actuator is attached at each leg
end in order to model push oﬀon the toe just before impact of the swing foot;
the actuator is assumed to be active only during the double support phase. A
feedback design method based on the hybrid zero dynamics is proposed that
integrates actuation in the single and double support phases.
A complete
stability analysis is performed. A more eﬃcient gait is demonstrated with
impulsive foot actuation.
An analysis of a robot with a foot rigidly connected at the ankle is given
in [52]. This situation provides a simple hybrid system with two dynamic
equations and with two algebraic transition maps. Walking is assumed to
consist of four phases: a single support phase where the swing leg advances,
a toe-roll phase where the robot rotates about the end of the stance foot, a
double support phase where the swing foot impacts the ground at the heel of
the swing foot, and a heel-roll phase where the robot rotates about the heel
of the stance foot.
Notes on Chapter 11
The work presented in this chapter is based on [66–68]. The material has been
rewritten to match the framework of the book.
Notes on Appendix B
is deliberately very limited. Many complete treatments of this material are
available. One excellent source is [22] and the overview in [127, Appendix A] is
also highly recommended. The summary of nonlinear geometric control given
deliberately informal and meant to aid the reader in building up an under-
standing of the basic concepts.
A very nice treatment for ordinary diﬀer-
© 2007 by Taylor & Francis Group, LLC
The overview of notions from Diﬀerential Geometry given in Appendix B.1
in Appendix B.2 is based on [127]; other excellent sources are [150,168,204].
The treatment of the method of Poincar´e sections given Appendix B.3 is

478
Feedback Control of Dynamic Bipedal Robot Locomotion
ential equations (i.e., nonlinear systems without impulse eﬀects) is available
in [173, App. D]. Other sources are [102,138].
The development of planar Lagrangian dynamics is given from a control
theorist’s point of view in a form that aids in the developments of Chapters 3,
5, and 9. Other user-oriented sources on the use of Lagrange’s method for the
derivation of equations of motions for rigid-body mechanical systems from a
roboticist’s perspective are [60,71,164,206,218]. For a thorough treatment of
the method see [10,90].
© 2007 by Taylor & Francis Group, LLC

References
[1] G. Abba and N. Chaillet. Robot dynamic modeling using a power ﬂow
approach with application to biped locomotion. Autonomous Robots,
6(1):39–52, 1999.
[2] J. Adolfsson, H. Dankowicz, and A. Nordmark. 3D passive walkers:
ﬁnding periodic gaits in the presence of discontinuities. Nonlinear Dy-
namics, 24(2):205–29, 2001.
[3] A. P. Aguiar, J. P. Hespanha, and P. V. Kokotovic. Path-following for
nonminimum phase systems removes performance limitations.
IEEE
Transactions on Automatic Control, 50(2):234–9, Feb 2005.
[4] M. Ahmadi and M. B¨uhler. Stable control of a simulated one-legged
running robot with hip and leg compliance.
IEEE Transactions on
Robotics and Automation, 13(1):96–104, February 1997.
[5] R. McN. Alexander. Three uses for springs in legged locomotion. In-
ternational Journal of Robotics Research, 9(2):53–61, 1990.
[6] Aaron D. Ames and Robert D. Gregg. Stably extending two-dimensional
bipedal walking to three. In Proc. of the 2007 American Control Con-
ference, New York, NY, 2007.
[7] Y. Aoustin and A Formal’sky. Design of reference trajectory to stabilize
desired nominal cyclic gait of a biped. In Proc. of the First Workshop on
Robot Motion and Control, Kiekrz, Poland, pages 159–64, June 1999.
[8] Y. Aoustin and A. Formal’sky.
Stability of a cyclic biped gait and
hastening of the convergence to it. In Proc. of the 2001 Int. Conf. on
Climbing and Walking Robots, 2001.
[9] Aristotle. The Complete Works of Aristotle: the Revised Oxford Trans-
lation, volume 1 of Bollingen Series LXXI, chapter Progression of Ani-
mals. Princeton University Press, 1984.
[10] V. Arnold. Mathematical Methods of Classical Mechanics. New York
NY Berlin Paris : Springer, 1989. translated by : Karen Vogtmann and
Alan D. Weinstein.
[11] F. Asano, M. Yamakita, N. Kamamichi, and Z.W. Luo. A novel gait
generation for biped walking robots based on mechanical energy con-
479
© 2007 by Taylor & Francis Group, LLC

480
Feedback Control of Dynamic Bipedal Robot Locomotion
straint. In Proc. of the IEEE/RSJ International Conference on Intelli-
gent Robots and Systems, pages 2637–44, 2002.
[12] V.I. Babitsky. Theory of Vibro-Impact Systems and Applications. Foun-
dations of Engineering Mechanics. Springer, Berlin, 1998.
[13] D.D. Bainov and P.S. Simeonov. Systems with Impulse Eﬀects : Sta-
bility, Theory and Applications.
Ellis Horwood Limited, Chichester,
1989.
[14] A. Banaszuk and J. Hauser. On control of planar periodic orbits. In
Proc. of the 1999 IEEE International Conference on Decision and Con-
trol, Phoenix, AZ, pages 3830–36, December 1999.
[15] S. P. Banks. Control Systems Engineering. Prentice Hall, Englewood
Cliﬀs, 1986.
[16] C. E. Bauby and A. D. Kuo. Active control of lateral balance in human
walking. Journal of Biomechanics, 33(11):1433–1440, 2000.
[17] M.D. Berkemeier and R.S. Fearing. Sliding and hopping gaits for the
underactuated Acrobot. IEEE Transactions on Robotics and Automa-
tion, 14(4):629–34, August 1998.
[18] K.
Berns.
The
Walking
Machine
Catalogue.
http://www.
walking-machines.org/, 2007.
[19] P. B´ezier. Numerical Control: Mathematics and Applications.
John
Wiley & Sons, New York, 1972.
[20] S. P. Bhat and D. S. Bernstein. Continuous ﬁnite-time stabilization of
the translational and rotational double integrators. IEEE Transactions
on Automatic Control, 43(5):678–682, 1998.
[21] S. P. Bhat and D. S. Bernstein.
Finite-time stability of continuous
autonomous systems.
SIAM Journal on Control and Optimization,
38:751–766, 2000.
[22] W. M. Boothby. An Introduction to Diﬀerentiable Manifolds and Rie-
mannian Geometry. Academic Press, New York, 1975.
[23] R.M. Brach.
Rigid body collisions.
Journal of Applied Mechanics,
56:133–8, 1989.
[24] B. Brogliato.
Nonsmooth Impact Dynamics: Models, Dynamics and
Control, volume 220 of Lecture Notes in Control and Information Sci-
ences. Springer, London, 1996.
[25] B. Brogliato, S.-I. Niculescu, and P. Orhant. On the control of ﬁnite-
dimensional mechanical systems with unilateral constraints.
IEEE
Transactions on Automatic Control, 42(2):200–15, 1997.
© 2007 by Taylor & Francis Group, LLC

References
481
[26] G. Buche. ROBEA Home Page. http://robot-rabbit.lag.ensieg.inpg.fr/
English/, 2007.
[27] M. B¨uhler, D. E. Koditschek, and P. J. Kindlmann. A family of robot
control strategies for intermittent dynamical environments. IEEE Con-
trol Systems Magazine, 10(2):16–22, February 1990.
[28] M. B¨uhler, D. E. Koditschek, and P. J. Kindlmann.
Planning and
control of a juggling robot. International Journal of Robotics Research,
13(2):101–18, 1994.
[29] F. Bullo and K. M. Lynch. Kinematic controllability for decoupled tra-
jectory planning in underactuated mechanical systems. IEEE Transac-
tions on Robotics and Automation, 17(4):402–12, August 2001.
[30] R. Burridge, A. Rizzi, and D. E. Koditschek. Sequential composition
of dynamically dexterous robot behaviors.
International Journal of
Robotics Research, 18(6):534–55, June 1999.
[31] C. Byrnes and A. Isidori. A frequency domain philosophy for nonlin-
ear systems, with applications to stabilization and adaptive control.
In Proc. of the 1985 IEEE International Conference on Decision and
Control, Fort Lauderdale, FL, pages 1031–7, 1985.
[32] C. Byrnes and A. Isidori. Asymptotic stabilization of nonlinear min-
imum phase systems.
IEEE Transactions on Automatic Control,
376:1122–37, 1991.
[33] G. Cabodevilla and G. Abba. Quasi optimal gait for a biped robot using
genetic algorithm. In Proc. of the IEEE International Conference on
Systems, Man and Cybernetics, Computational Cybernetics and Simu-
lations, Orlando, FL, pages 3960–5, October 1997.
[34] C. Canudas. On the concept of virtual constraints as a tool for walking
robot control and balancing. Annual Reviews in Control, 28:157–66,
2004.
[35] C. Canudas, B. Espiau, and C. Urrea. Orbital stabilization of under-
actuated mechanical systems. In 15th World Congress on Automatic
Control, Barcelona, Spain, July 2002.
[36] C. Canudas, L. Roussel, and A. Goswami. Periodic stabilization of a
1-DOF hopping robot on nonlinear compliant surface. In Proc. of IFAC
Symposium on Robot Control, Nantes, France, pages 405–10, September
1997.
[37] R.E. Carlton and S.J. Bartholet. The evolution of the application of mo-
bile robotics to nuclear facility operations and maintenance. In Proc. of
the 1987 IEEE International Conference on Robotics and Automation,
Raleigh, NC, pages 720–6, 1987.
© 2007 by Taylor & Francis Group, LLC

482
Feedback Control of Dynamic Bipedal Robot Locomotion
[38] P.H. Channon, S. Hopkins, and Pham. Optimal walking motions for a
biped walking robot. Robotica, 10(2):165–72, 1990.
[39] V. Chellaboina, S. P. Bhat, and W. M. Haddad. An invariance princi-
ple for nonlinear hybrid and impulsive dynamical systems. Nonlinear
Analysis, 53:527–50, 2003.
[40] C. T. Chen. Linear System Theory and Design. Oxford, New York,
1984.
[41] C. Chevallereau.
Parameterized control for an underactuated biped
robot. In 15th World Congress on Automatic Control, Barcelona, Spain,
July 2002.
[42] C. Chevallereau. Time-scaling control for an underactuated biped robot.
IEEE Transactions on Robotics and Automation, 19(2):362–368, 2003.
[43] C. Chevallereau, G. Abba, Y. Aoustin, F. Plestan, E. R. Westervelt,
C. Canudas, and J. W. Grizzle. RABBIT: a testbed for advanced control
theory. IEEE Control Systems Magazine, 23(5):57–79, October 2003.
[44] C. Chevallereau and Y. Aoustin. Optimal reference trajectories for walk-
ing and running of a biped robot. Robotica, 19(5):557–69, September
2001.
[45] C. Chevallereau, Y. Aoustin, and Formal’sky. Optimal walking trajec-
tories for a biped. In Proc. of the First Workshop on Robot Motion and
Control, Kiekrz, Poland, pages 171–6, June 1999.
[46] C. Chevallereau, A. Formal’sky, and D. Djoudi. Tracking of a joint path
for the walking of an underactuated biped. Robotica, 22:15–28, 2004.
[47] C. Chevallereau, A. Formal’sky, and B. Perrin. Low energy cost refer-
ence trajectories for a biped robot. In Proc. of the 1998 IEEE Interna-
tional Conference on Robotics and Automation, Leuven, Belgium, pages
1398–404, 1998.
[48] C. Chevallereau, J. W. Grizzle, and C. H. Moog. Nonlinear control of
mechanical systems with one degree of underactuation. In Proc. of the
2004 IEEE International Conference on Robotics and Automation, New
Orleans, LA, volume 3, pages 2222–8, 2004.
[49] C. Chevallereau and P. Sardain. Design and actuation optimization of a
4 axes biped robot for walking and running. In Proc. of the 2000 IEEE
International Conference on Robotics and Automation, San Francisco,
CA, pages 3365–70, 2000.
[50] C. Chevallereau, E. R. Westervelt, and J. W. Grizzle. Asymptotic sta-
bilization of a ﬁve-link, four-actuator, planar bipedal runner. In Proc.
of the 2004 IEEE International Conference on Decision and Control,
Nassau, Bahamas, pages 303–10, 2004.
© 2007 by Taylor & Francis Group, LLC

References
483
[51] C. Chevallereau, E. R. Westervelt, and J. W. Grizzle. Asymptotically
stable running for a ﬁve-link, four-actuator, planar bipedal robot. In-
ternational Journal of Robotics Research, 24:431–464, 2005.
[52] J. H. Choi.
Model-based Control and Analysis of Anthropomorphic
Walking. PhD thesis, University of Michigan, 2005.
[53] J. H. Choi and J. W. Grizzle. Feedback control of an underactuated
planar bipedal robot with impulsive foot action. Robotica, 23:567–80,
September 2005.
[54] Jun Ho Choi and J. W. Grizzle.
Planar bipedal walking with foot
rotation. In Proc. of the 2005 American Control Conference, Portland,
OR, pages 4909–16, 2005.
[55] C.K. Chow and D.H. Jacobson. Studies of human locomotion via opti-
mal programming. Mathematical Biosciences, 10:239–306, 1971.
[56] M. Coleman.
A Stability Study of a Three-Dimensional Passive-
Dynamic Model of Human Gait. PhD thesis, Cornell, 1998.
[57] M. J. Colemen, A. Chatterjee, and A. Ruina.
Motions of a rimless
spoked wheel: a simple 3D system with impacts.
In Dynamics and
Stability of Systems, volume 12, pages 139–60, 1997.
[58] S. H. Collins, A. Ruina, R. Tedrake, and M. Wisse. Eﬃcient bipedal
robots based on passive-dynamic walkers. Science, 307:1082–85, 2005.
[59] S. H. Collins, M. Wisse, and A. Ruina. A three-dimensional passive-
dynamic walking robot with two legs and knees. International Journal
of Robotics Research, 20(7):607–15, July 2001.
[60] J. J. Craig.
Introduction to Robotics:
Mechanics and Control.
Pearson/Prentice-Hall, Upper Saddle River, N.J., 3rd ed edition, 2005.
[61] D. B. Dacic, M. V. Subbotin, and P. V. Kokotovic. Path-following for a
class of nonlinear systems with unstable zero dynamics. In Proc. of the
2004 IEEE International Conference on Decision and Control, Nassau,
Bahamas, volume 5, pages 4915–20, 2004.
[62] D. B. Dacic, M. V. Subbotin, and P. V. Kokotovic.
Path-following
approach to control eﬀort reduction of tracking feedback laws. In Proc.
of the 2005 IEEE International Conference on Decision and Control /
European Control Conference, Seville, Spain, pages 7284–9, December
2005.
[63] C. De Boor. A Practical Guide to Splines. Springer-Verlag, 1978.
[64] J. B. Dingwell and J. P. Cusumano. Nonlinear time series analysis of
normal and pathological human walking. Chaos, 10(4):848–863, 2000.
© 2007 by Taylor & Francis Group, LLC

484
Feedback Control of Dynamic Bipedal Robot Locomotion
[65] S. Diop, J. W. Grizzle, P. E. Moraal, and A. Stefanopoulou.
Inter-
polation and numerical diﬀerentiation for observer design. In Proc. of
the 1994 American Control Conference, Baltimore, MD, pages 1329–33,
June 1994.
[66] D. Djoudi. Contribution ´a la Commande de Robots Marcheurs. PhD
thesis, Ecole Centrale de Nantes, Universit´e de Nantes - France, January
2007.
[67] D. Djoudi and C. Chevallereau.
Fast motions in Biomechanics and
Robotics, chapter Stability analysis of bipedal walking with control or
monitoring of the center of pressure, pages 95–120. Lecture Notes in
Control and Information Sciences. Springer, Heidelberg, Germany, 2006.
[68] D. Djoudi and C. Chevallereau. Feet can improve the stability property
of a control law for a walking robot. In Proc. of the 2006 IEEE Inter-
national Conference on Robotics and Automation, Orlando, FL, pages
1206–1212, 2006.
[69] D. Djoudi, C. Chevallereau, and Y. Aoustin. Optimal reference motions
for walking of a biped robot. In Proc. of the 2005 IEEE International
Conference on Robotics and Automation, Barcelona, Spain, pages 2002–
7, Barcelona, Spain, April 2005.
[70] Masahiro Doi, Y. Hasegawa, and T. Fukuda.
Realization of 3-
dimensional dynamic walking based on the assumption of point-contact.
In Proc. of the 2005 IEEE International Conference on Robotics and
Automation, Barcelona, Spain, pages 4120–4125, 2005.
[71] E. Dombre and W. Khalil.
Modeling, Identiﬁcation and Control of
Robots. Hermes Sciences, Europe. Paris, 2002.
[72] J. M. Donelan, R. Kram, and A. D. Kuo. Mechanical work for step-to-
step transitions is a major determinant of the metabolic cost of human
walking. Journal of Experimental Biology, 205:3717–27, 2002.
[73] B. Espiau. BIP: a joint project for the development of an anthropomor-
phic biped robot. In Proc. of the International Conference on Advanced
Robotics, Monterey, CA, pages 267–72, July 1997.
[74] B. Espiau and A. Goswani. Compass gait revisited. In Proc. of the IFAC
Symposium on Robot Control, Capri, Italy, pages 839–846, September
1994.
[75] A. Formal’sky. Locomotion of Anthropomorphic Mechanisms. Nauka.
in Russian, Moscow, 1982.
[76] C. Francois and C. Samson.
A new approach to the control of the
planar one-legged hopper. International Journal of Robotics Research,
17(11):1150–66, 1998.
© 2007 by Taylor & Francis Group, LLC

References
485
[77] Y. Fujimoto. Trajectory generation of biped running robot with min-
imum energy consumption. In Proc. of the 2004 IEEE International
Conference on Robotics and Automation, New Orleans, LA, volume 4,
pages 3803–8, 2004.
[78] Y. Fujimoto and A. Kawamura. Simulation of an autonomous biped
walking robot including environmental force interaction. IEEE Robotics
and Automation Magazine, pages 33–42, June 1998.
[79] Y. Fujimoto, S. Obata, and A. Kawamura. Robust biped walking with
active interaction control between foot and ground. In Proc. of the 1998
IEEE International Conference on Robotics and Automation, Leuven,
Belgium, pages 2030–5, 1998.
[80] T. Fukuda, M. Doi, Y. Hasegawa, and H. Kajima. Fast Motions Sym-
posium on Biomechanics and Robotics, chapter Multi-locomotion con-
trol of biped locomotion and brachiation robot, pages 121–145. Lecture
Notes in Control and Information Sciences. Springer-Verlag, Heidelberg,
Germany, 2006.
[81] R. Full and D. E. Koditschek. Templates and anchors: Neuromechan-
ical hypotheses of legged locomotion on land. Journal of Experimental
Biology, 202:3325–32, December 1999.
[82] J. Furusho and M. Masubuchi. Control of a dynamical biped locomotion
system for steady walking. Journal of Dynamic Systems, Measurement
and Control, 108:111–8, 1986.
[83] J. Furusho and A. Sano.
Sensor-based control of a nine-link biped.
International Journal of Robotics Research, 9(2):83–98, 1990.
[84] M. Garcia. Stability, Scaling, and Chaos in Passive-Dynamic Gait Mod-
els. PhD thesis, Cornell University, 1999.
[85] M. Garcia, A. Chatterjee, and A. Ruina. Eﬃciency, speed, and scaling
of two-dimensional passive-dynamic walking. Dynamics and Stability of
Systems, 15(2):75–99, June 2000.
[86] M. Garcia, A. Chatterjee, A. Ruina, and M. Coleman. The simplest
walking model: Stability, complexity, and scaling. ASME Journal of
Biomechanical Engineering, 120(2):281–8, April 1998.
[87] M. Gienger, K. L¨oﬄer, and F. Pfeiﬀer. A biped robot that jogs. In
Proc. of the 2000 IEEE International Conference on Robotics and Au-
tomation, San Francisco, CA, pages 3334–9, 2000.
[88] J. M. Godhavn, A. Balluchi, L. Crawford, and S. Sastry. Path planning
for nonholonomic systems with drift. In Proc. of the 1997 American
Control Conference, Albuquerque, NM, pages 532–6, 1997.
© 2007 by Taylor & Francis Group, LLC

486
Feedback Control of Dynamic Bipedal Robot Locomotion
[89] W. Goldsmith. Impact: The Theory and Physical Behaviour of Colliding
Solids. Arnold, London, 1960.
[90] H. Goldstein, C. Poole, and J. Safko. Classical Mechanics. Addison-
Wesley, San Francisco, third edition, 2002.
[91] J. M. Goncalves, A. Megretski, and M. A. Dahleh.
Global stability
of relay feedback systems. IEEE Transactions on Automatic Control,
46(4):550–62, April 2001.
[92] A. Goswami. Postural stability of biped robots and the foot-rotation
indicator (FRI) point.
International Journal of Robotics Research,
18(6):523–33, June 1999.
[93] A. Goswami, B. Espiau, and A. Keramane. Limit cycles and their sta-
bility in a passive bipedal gait. In Proc. of the 1996 IEEE International
Conference on Robotics and Automation, Minneapolis, MN, pages 246–
51, 1996.
[94] A. A. Grishin, A. M. Formal’sky, A. V. Lensky, and S. V. Zhitomirsky.
Dynamical walking of a vehicle with two telescopic legs controlled by
two drives. International Journal of Robotics Research, 13(2):137–47,
1994.
[95] J. W. Grizzle. Remarks on event-based stabilization of periodic orbits
in systems with impulse eﬀects. In Second International Symposium on
Communications, Control and Signal Processing, 2006.
[96] J. W. Grizzle.
Jessy Grizzle’s publications.
http://www.eecs.umich.
edu/∼grizzle/papers/robotics.html, 2007.
[97] J. W. Grizzle, G. Abba, and F. Plestan. Proving asymptotic stability of
a walking cycle for a ﬁve DOF biped robot model. In Proc. of the 1999
Int. Conf. on Climbing and Walking Robots, pages 69–81, September
1999.
[98] J. W. Grizzle, G. Abba, and F. Plestan. Asymptotically stable walk-
ing for biped robots: Analysis via systems with impulse eﬀects. IEEE
Transactions on Automatic Control, 46:51–64, January 2001.
[99] J. W. Grizzle, F. Plestan, and G. Abba. Poincar´e’s method for systems
with impulse eﬀects: Application to mechanical biped locomotion. In
Proc. of the 1999 IEEE International Conference on Decision and Con-
trol, Phoenix, AZ, 1999.
[100] J. W. Grizzle, E. R. Westervelt, and C. Canudas. Event-based PI control
of an underactuated biped walker. In Proc. of the 2003 IEEE Interna-
tional Conference on Decision and Control, Maui, HI, pages 3091–6,
2003.
© 2007 by Taylor & Francis Group, LLC

References
487
[101] J. Guckenheimer.
Sensitive dependence to initial conditions for one
dimensional maps. Communications in Mathematical Physics, 70:133–
60, 1979.
[102] J. Guckenheimer and P. Holmes.
Nonlinear Oscillations, Dynamical
Systems, and Bifurcations of Vector Fields, volume 42 of Applied Math-
ematical Sciences. Springer-Verlag, New York, 1996.
[103] J. Guckenheimer and S. Johnson. Planar hybrid systems. In Hybrid
Systems II, Lecture Notes in Computer Science, pages 203–25. Springer-
Verlag, 1995.
[104] W. Haddad and V. Chellaboina. Dissipativity theory and stability of
feedback interconnections for hybrid dynamical systems. In Mathemat-
ical Problems in Engineering, volume 7, pages 299–335. 2001.
[105] W. M. Haddad, V. Chellaboina, and N. Kablar. Non-linear impulsive
dynamical systems. Part I: Stability and dissipativity.
International
Journal of Control, 74(17):1631–58, 2001.
[106] W. M. Haddad, V. Chellaboina, and N. Kablar. Non-linear impulsive
dynamical systems. Part II: Stability of feedback interconnections and
optimality. International Journal of Control, 74(17):1659–77, 2001.
[107] W. M. Haddad, S. G. Nersesova, and V. Chellaboina. Energy-based
control for hybrid port-controlled hamiltonian systems.
Automatica,
39:1425–35, 2003.
[108] V. T. Haimo.
Finite time controllers.
SIAM J. Contr. Optim.,
24(4):760–70, 1986.
[109] M. W. Hardt.
Multibody Dynamical Algorithms, Numerical Optimal
Control, with Detailed Studies in the Control of Jet Engine Compressors
and Biped Walking. PhD thesis, University of California, San Diego,
1999.
[110] P. Hartman. Ordinary Diﬀerential Equations. Birkhauser, Boston, 2nd
edition, 1982.
[111] Y. Hasegawa, T. Arakawa, and T. Fukuda. Trajectory generation for
biped locomotion. Mechatronics, 10(1–2):67–89, March 2000.
[112] S. Hashimoto, S. Narita, H. Kasahara, K. Shirai, T. Kobayashi,
A. Takanishi, S. Sugano, and et al.
Humanoid robots in Waseda
University—Hadaly-2 and WABIAN. Advanced Robotics, 12(1):25–38,
2002.
[113] H. Hatze. The complete optimization of a human motion. Mathematical
Biosciences, 28:99–135, 1976.
[114] K. Hirai, M. Hirose, Y. Haikawa, and T. Takenake. The development
of Honda humanoid robot. In Proc. of the 1998 IEEE International
© 2007 by Taylor & Francis Group, LLC

488
Feedback Control of Dynamic Bipedal Robot Locomotion
Conference on Robotics and Automation, Leuven, Belgium, pages 1321–
26, 1998.
[115] I. A. Hiskens. Stability of hybrid limit cycles: application to the compass
gait biped robot. In Proc. of the 40th IEEE Conf. Dec. and Control,
Orlando, FL, pages 774–9, December 2001.
[116] J.K. Hodgins and M.H. Raibert. Adjusting step length for rough terrain
locomotion. IEEE Transactions on Robotics and Automation, 7(3):289–
98, June 1991.
[117] Honda Corporation.
ASIMO’s Homepage.
http://world.honda.com/
ASIMO/, 2007.
[118] G.W. Howell and J. Baillieul. Simple controllable walking mechanisms
which exhibit bifurcations. In Proc. of the 1998 IEEE International
Conference on Decision and Control, Tampa, FL, pages 3027–32, De-
cember 1998.
[119] Q. Huang, S. Kajita, N. Koyachi, K. Kaneko, K. Yokoi, H. Arai, Ko-
moriya K., and K. Tanie. A high stability, smooth walking pattern for
a biped robot. In Proc. of the 1999 IEEE International Conference on
Robotics and Automation, Detroit, MI, pages 65–71, 1999.
[120] Y. H¨urm¨uzl¨u. Dynamics of bipedal gait—Part 1: objective functions
and the contact event of a planar ﬁve-link biped. Journal of Applied
Mechanics, 60(2):331–6, 1993.
[121] Y. H¨urm¨uzl¨u. Dynamics of bipedal gait—Part 2: stability analysis of
a planar ﬁve-link biped. Journal of Applied Mechanics, 60(2):337–43,
1993.
[122] Y. H¨urm¨uzl¨u, C. Basdogan, and J.J. Carollo. Presenting joint kine-
matics of human locomotion using phase plane portraits and Poincar´e
maps. 27(12):1495–9, 1994.
[123] Y. H¨urm¨uzl¨u, F. G´enot, and B. Brogliato.
Modeling, stability and
control of biped robots - a general framework. Automatica, 40(10):1647–
1664, 2004.
[124] Y. H¨urm¨uzl¨u and D. B. Marghitu. Rigid body collisions of planar kine-
matic chains with multiple contact points.
International Journal of
Robotics Research, 13(1):82–92, 1994.
[125] Y. H¨urm¨uzl¨u and D. Moskowitz. The role of impact in the stability of
bipedal locomotion. Dynamics and Stability of Systems, 1(3):217–34,
1986.
[126] S.-H. Hyon and T. Emura. Running control of a planar biped robot
based on energy-preserving strategy. In Proc. of the 2004 IEEE Inter-
national Conference on Robotics and Automation, New Orleans, LA,
volume 4, pages 3791–6, 2004.
© 2007 by Taylor & Francis Group, LLC

References
489
[127] A. Isidori. Nonlinear Control Systems. Springer-Verlag, Berlin, third
edition, 1995.
[128] A. Isidori and C. H. Moog. On the nonlinear equivalent of the notion of
transmission zeros. In C. Byrnes and A. Kurzhanski, editors, Proc. of
the IIASA Conference: Modeling and Adaptive Control, pages 146–57,
Berlin, 1988. Springer-Verlag.
[129] S. Kajita, F. Kanehiro, K. Kaneko, K. Fujiwara, K. Yokoi, and
H. Hirukawa. A realtime pattern generator for biped walking. In Proc.
of the 2002 IEEE International Conference on Robotics and Automa-
tion, Washington, D.C., pages 31–7, 2002.
[130] S. Kajita, F. Kanehiro, K. Kaneko, K. Yokoi, and H. Hirukawa. The 3D
linear inverted pendulum mode: a simple modeling for a biped walk-
ing pattern generation. In Proc. of the 2001 IEEE/RSJ International
Conference on Intelligent Robots and Systems, Maui, HI, pages 239–46,
November 2001.
[131] S. Kajita and T. Nagasaki. Running pattern generation for a humanoid
robot. In Proc. of the 2002 IEEE International Conference on Robotics
and Automation, Washington, D.C., pages 2755–61, May 2002.
[132] S. Kajita, T. Nagasaki, K. Kaneko, K. Yokoi, and K. Tanie. A hop
towards running humanoid biped. In Proc. of the 2004 IEEE Inter-
national Conference on Robotics and Automation, New Orleans, LA,
pages 629–35, 2004.
[133] S. Kajita and K. Tani. Experimental study of biped dynamic walking.
IEEE Control Systems Magazine, 16(1):13–9, February 1996.
[134] S. Kajita, T. Yamaura, and A. Kobayashi. Dynamic walking control of
biped robot along a potential energy conserving orbit. IEEE Transac-
tions on Robotics and Automation, 8(4):431–37, August 1992.
[135] K. Kaneko,
F. Kanehiro,
S. Kajita,
K. Yokoyama,
K. Akachi,
T. Kawasaki, S. Ota, and T. Isozumi. Design of prototype humanoid
robotics platform for HRP.
In Proc. of the 2002 IEEE/RSJ In-
ternational Conference on Intelligent Robots and Systems, Lausanne,
Switzerland, pages 2431–6, 2002.
[136] I. Kato and H. Tsuiki. The hydraulically powered biped walking ma-
chine with a high carrying capacity. In Proc. of the Fourth International
Symposium on External Control of Human Extremities, Dubrovnik, Yu-
goslavia, pages 410–21, September 1972.
[137] R. Katoh and M. Mori. Control method of biped locomotion giving
asymptotic stability of trajectory. Automatica, 20(4):405–14, 1984.
[138] H. K. Khalil. Nonlinear Systems - 3rd Edition. Upper Saddle River,
NJ, 2002.
© 2007 by Taylor & Francis Group, LLC

490
Feedback Control of Dynamic Bipedal Robot Locomotion
[139] D. E. Koditschek and M. B¨uhler. Analysis of a simpliﬁed hopping robot.
International Journal of Robotics Research, 10(6):587–605, 1991.
[140] P. V. Kokotovic, H. K. Khalil, and J. O’Reilly. Singular Perturbation
Methods in Control: Analysis and Design. Academic Press, London,
1986.
[141] I. Kolmanovsky, N.H. McClamroch, and V.T. Coppola. New results
on control of multibody systems which conserve angular momentum.
Journal of Dynamical and Control Systems, 1(4):447–62, 1995.
[142] V.R. Kumar and K.J. Waldron. A review of research on walking ve-
hicles.
In O. Khatib, J.J. Craig, and T. Lozano-P´erez, editors, The
robotics review 1, pages 243–66. MIT Press, Cambridge, MA, 1989.
[143] A. D. Kuo. Stabilization of lateral motion in passive dynamic walking.
International Journal of Robotics Research, 18(9):917–30, 1999.
[144] A. D. Kuo. Energetics of actively powered locomotion using the simplest
walking model. Journal of Biomechanical Engineering, 124(1):113–20,
2002.
[145] H. Lim, Y. Yamamoto, and A. Takanishi. Control to realize human-like
walking of a biped humanoid robot. In Proc. of the IEEE International
Conference on Systems, Man and Cybernetics, Computational Cyber-
netics and Simulations, Nashville, TN, pages 3271–76, June 2000.
[146] R.A. Liston and Mosher R.S. A versatile walking truck. In Proceed-
ings of the Transportation Engineering Conference. Institution of Civil
Engineers, London, 1968.
[147] K. L¨oﬄer, M. Gienger, and F. Pfeiﬀer. Sensors and control concept of
walking “Johnnie.” International Journal of Robotics Research, 22(3–
4):229–39, 2003.
[148] K. Loﬄer, M. Gienger, F. Pfeiﬀer, and H. Ulbrich. Sensors and control
concept of a biped robot. IEEE Transactions on Industrial Electronics,
51(5):972–80, 2004.
[149] D. W. Marhefka and D. Orin. Simulation of contact using a nonlinear
damping model. In Proc. of the 1996 IEEE International Conference
on Robotics and Automation, Minneapolis, MN, pages 1662–8, 1996.
[150] T. Marino and P. Tomei.
Nonlinear Control Design.
Prentice Hall,
London, 1995.
[151] T. G. McGee and M. W. Spong. Trajectory planning and control of
a novel walking biped. In IEEE International Conference on Control
Applications, Mexico City, Mexico, pages 1099–104, September 2001.
© 2007 by Taylor & Francis Group, LLC

References
491
[152] T. McGeer.
Stability and control of two-dimensional biped walking.
Technical Report 1, Center for Systems Science, Simon Fraser Univer-
sity, Burnaby, B.C., Canada V5A 1S6, 1988.
[153] T. McGeer. Passive dynamic walking. International Journal of Robotics
Research, 9(2):62–82, April 1990.
[154] T. McGeer. Dynamics and control of bipedal locomotion. Journal of
Theoretical Biology, 166(3):277–314, August 1993.
[155] M. Meinders, A. Gitter, and J. M. Czerniecki. The role of ankle plantar
ﬂexor muscle work during walking. Scandinavian Journal of Rehabili-
tation Medicine, 30:39–46, 1998.
[156] K. Mitobe, N. Mori, K. Aida, and Y. Nasu. Nonlinear feedback control
of a biped walking robot.
In Proc. of the 1995 IEEE International
Conference on Robotics and Automation, Nagoya, Japan, pages 2865–
70, 1995.
[157] H. Miura and I. Shimoyama. Dynamic walk of a biped. International
Journal of Robotics Research, 3(2):60–74, 1984.
[158] M. Miyazaki, M. Sampei, and M. Koga.
Control of a motion of an
Acrobot approaching a horizontal bar. Advanced Robotics, 15(4):467–
80, 2001.
[159] K.D. Mombaur, H.G. Bock, J.P. Schloder, and R.W. Longman. Self-
stabilizing somersaults. IEEE Transactions on Robotics, 21(6):1148–57,
2005.
[160] M. Morisawa, Y. Fujimoto, T. Murakami, and K. Ohnishi. A walking
pattern generation for biped robot with parallel mechanism by consider-
ing contact force. In Proc. of the IEEE Annual Conference on Industrial
Electronics Society, Denver, CO, pages 2184–9, 2001.
[161] B. Morris and J. W. Grizzle. A restricted Poincar´e map for determin-
ing exponentially stable periodic orbits in systems with impulse eﬀects:
Application to bipedal robots. In Proc. of the 2005 IEEE International
Conference on Decision and Control / European Control Conference,
Seville, Spain, pages 4199–206, 2005.
[162] B. Morris and J.W. Grizzle. Hybrid invariance in bipedal robots with
series compliant actuators. pages 4793–800, December 2006.
[163] B. Morris, E. R. Westervelt, C. Chevallereau, G. Buche, and J. W.
Grizzle. Fast Motions Symposium on Biomechanics and Robotics, chap-
ter Achieving Bipedal Running with RABBIT: Six Steps toward Inﬁn-
ity, pages 277–97. Lecture Notes in Control and Information Sciences.
Springer-Verlag, Heidelberg, Germany, 2006.
© 2007 by Taylor & Francis Group, LLC

492
Feedback Control of Dynamic Bipedal Robot Locomotion
[164] R. M. Murray, Z. Li, and S. Sastry. A Mathematical Introduction to
Robotic Manipulation. CRC Press, 1994.
[165] J. Nakanishi, T. Fukuda, and D. E. Koditschek. A brachiating robot
controller. IEEE Transactions on Robotics and Automation, 16(2):109–
23, April 2000.
[166] R. R. Neptune, S. A. Kautz, and F. E. Zajac. Contributions of the
individual ankle plantar ﬂexors to support, forward progression and
swing initiation during walking. Journal of Biomechanics, 34(11):1387–
98, 2001.
[167] S. G. Nersesov, V. Chellaboina, and W. M. Haddad. A generalization
of Poincar´e’s theorem to hybrid and impulsive dynamical systems. In-
ternational Journal of Hybrid Systems, 2:39–55, 2002.
[168] H. Nijmeijer and A. J. van der Schaft. Nonlinear Dynamical Control
Systems. Springer-Verlag, Berlin, 1989.
[169] K. Ono, R. Takahashi, and T. Shimada. Self-excited walking of a biped
mechanism. International Journal of Robotics Research, 20(12):953–66,
December 2001.
[170] K. Ono, K. Yamamoto, and A. Imadu.
Control of giant swing mo-
tion of a two-link horizontal bar gymnastic robot. Advanced Robotics,
15(4):449–65, 2001.
[171] J. H. Park. Impedance control for biped robot locomotion. IEEE Trans-
actions on Robotics and Automation, 17(6):870–82, December 2001.
[172] J. H. Park and K. D. Kim.
Biped robot walking using gravity-
compensated inverted pendulum mode and computed torque control.
In Proc. of the 1998 IEEE International Conference on Robotics and
Automation, Leuven, Belgium, pages 3528–33, 1998.
[173] T. S. Parker and L. O. Chua.
Practical Numerical Algorithms for
Chaotic Systems. Springer-Verlag, New York, 1989.
[174] F. Pfeiﬀer and C. Glocker. Multi-Body Dynamics with Unilateral Con-
straints. Wiley Series in Nonlinear Science. John Wiley & Sons, New
York, 1996.
[175] F. Pfeiﬀer, K. L¨oﬄer, and M. Gienger. The concept of Jogging JOHN-
NIE. In Proc. of the 2002 IEEE International Conference on Robotics
and Automation, Washington, D.C., pages 3129–35, 2002.
[176] F. Plestan, J. W. Grizzle, E. R. Westervelt, and G. Abba. Stable walking
of a 7-DOF biped robot. IEEE Transactions on Robotics and Automa-
tion, 19(4):653–68, August 2003.
© 2007 by Taylor & Francis Group, LLC

References
493
[177] M. B. Popovic, A. Goswami, and H. Herr. Ground reference points in
legged locomotion: deﬁnitions, biological trajectories and control im-
plications. International Journal of Robotics Research, 24(12):1013–32,
2005.
[178] G. A. Pratt. MIT Leg Lab. http://www.ai.mit.edu/projects/leglab,
2007.
[179] G. A. Pratt and M. M. Williamson. Series elastic actuators. In Proc.
of the 1995 IEEE/RSJ International Conference on Intelligent Robots
and Systems, Pittsburgh, PA, pages 399–406, August 1995.
[180] J. E. Pratt. Exploiting Inherent Robustness and Natural Dynamics in
the Control of Bipedal Walking Robots. PhD thesis, Massachusetts In-
stitute of Technology, June 2000.
[181] J. E. Pratt, M. C. Chee, A. Torres, P. Dilworth, and G. A. Pratt. Virtual
model control: an intuitive approach for bipedal locomotion. Interna-
tional Journal of Robotics Research, 20(2):129–43, February 2001.
[182] J. E. Pratt and G. A. Pratt. Intuitive control of a planar bipedal walking
robot. In Proc. of the 1998 IEEE International Conference on Robotics
and Automation, Leuven, Belgium, pages 2014–21, 1998.
[183] M. H. Raibert. Hopping in legged systems—modeling and simulation for
the two-dimensional one-legged case. IEEE Transactions on Systems,
Man and Cybernetics, 14(3):451–63, June 1984.
[184] M. H. Raibert. Legged robots. Communications of the ACM, 29(6):499–
514, 1986.
[185] M. H. Raibert. Legged Robots that Balance. MIT Press, Cambridge,
MA, 1986.
[186] M. H. Raibert, S. Tzafestas, and C. Tzafestas. Comparative simulation
study of three control techniques applied to a biped robot. In Proc. of
the IEEE International Conference on Systems, Man and Cybernetics
Systems Engineering in the Service of Humans, Le Touquet, France,
pages 494–502, October 1993.
[187] M. Reyhanoglu, A. van der Schaft, N.H. McClamroch, and I. Kol-
manovsky. Dynamics and control of a class of underactuated mechani-
cal systems. IEEE Transactions on Automatic Control, 44(9):1663–71,
1999.
[188] A. Rizzi and D. E. Koditschek.
An active visual estimator for dex-
terous manipulation. IEEE Transactions on Robotics and Automation,
12(5):697–713, October 1996.
[189] D.F. Rogers and J.A. Adams. Mathematical Elements for Computer
Graphics. McGraw-Hill, New York, second edition, 1990.
© 2007 by Taylor & Francis Group, LLC

494
Feedback Control of Dynamic Bipedal Robot Locomotion
[190] M. E. Rosheim. Robot Evolution: The Development of Anthrobotics.
Wiley, New York, 1994.
[191] M Rostami and G Bessonnet.
Sagittal gait of a biped robot during
the single support phase. part 1: passive motion. Robotica, 19:163–176,
2001.
[192] M. Rostami and G. Bessonnet. Sagittal gait of a biped robot during
the single support phase. part 2: optimal motion. Robotica, 19:241–53,
2001.
[193] A. V. Roup, D. S. Bernstein, S. G. Nersesov, W. M. Haddad, and
V. Chellaboina. Limit cycle analysis of the verge and foliot clock es-
capement using impulsive diﬀerential equations and Poincar´e maps. In-
ternational Journal of Control, 76(17):1685–98, 2003.
[194] L. Roussel. G´en´eration de Trajectoires de Marche Optimales Pour un
Robot Bip`ede. PhD thesis, Institut National Polytechnique, Grenoble,
France, November 1998.
[195] L. Roussel, C. Canudas, and A. Goswami. Generation of energy optimal
complete gait cycles for biped robots. In Proc. of the 1998 IEEE In-
ternational Conference on Robotics and Automation, Leuven, Belgium,
pages 2036–41, 1998.
[196] M. Russell. ODEX I: the ﬁrst functionoid. Robotics Age, 5(5):12–8,
1983.
[197] L.A. Rygg. Mechanical horse. US Patent, February 14, 1893.
[198] C. Sabourin, O. Bruneau, and G. Buche. Control strategy for the ro-
bust dynamic walk of a biped robot. International Journal of Robotics
Research, 25(9):843–60, September 2006.
[199] M. Sampei, H. Kiyota, and M. Ishikawa. Control strategies for mechan-
ical systems with various constraints-control of non-holonomic systems.
In Proc. of the IEEE International Conference on Systems, Man and
Cybernetics, Tokyo, Japan, pages 158–65, October 1999.
[200] A. Sano and J. Furusho. Realization of natural dynamic walking using
the angular momentum information. In Proc. of the 1990 IEEE In-
ternational Conference on Robotics and Automation, Cincinnati, OH,
pages 1476–81, 1990.
[201] U. Saranli. Dynamic Locomotion with a Hexapod Robot. PhD thesis,
University of Michigan, 2002.
[202] U. Saranli, W. Schwind, and D. E. Koditschek. Toward the control of a
multi-jointed, monoped runner. In Proc. of the 1998 IEEE International
Conference on Robotics and Automation, Leuven, Belgium, pages 2676–
82, 1998.
© 2007 by Taylor & Francis Group, LLC

References
495
[203] P. Sardain and G. Bessonnet. Gait analysis of a human walker wearing
robot feet as shoes. In Proc. of the 2001 IEEE International Conference
on Robotics and Automation, Seoul, Korea, pages 2285–92, May 2001.
[204] S. Sastry.
Nonlinear Systems:
Analysis, Stability, and Control.
Springer, 1999.
[205] W. J. Schwind. Spring Loaded Inverted Pendulum Running: A Plant
Model. PhD thesis, University of Michigan, 1998.
[206] L. Sciavicco and B. Siciliano. Modelling and Control of Robot Manipu-
lators. Springer, London, 2000.
[207] C.-L. Shih. Ascending and descending stairs for a biped robot. IEEE
Transactions on Systems, Man and Cybernetics, 29(3):255–68, 1999.
[208] C.-L. Shih and W. A. Gruver. Control of a biped robot in the double-
support phase. IEEE Transactions on Systems, Man and Cybernetics,
22(4):729–35, 1992.
[209] D. Singer. Stable orbits and bifuractions of maps of the interval. SIAM
Journal of Applied Mathematics, 35(2):260–7, 1978.
[210] A.C. Smith and M.D. Berkemeier. The motion of a ﬁnite-width wheel
in 3D. In Proc. of the 1998 IEEE International Conference on Robotics
and Automation, Leuven, Belgium, pages 2345–50, 1998.
[211] G. Song and M. Zefran. Stabilization of hybrid periodic orbits with
application to bipedal walking. In Proc. of the 2006 American Control
Conference, Minneapolis, MN, pages 2504–9, 2006.
[212] G. Song and M. Zefran.
Underactuated dynamic three-dimensional
bipedal walking. In Proc. of the 2006 IEEE International Conference
on Robotics and Automation, Orlando, FL, pages 854–9, 2006.
[213] S. Song and K.J. Waldron. Machines that Walk: The Adaptive Sus-
pension Vehicle. MIT Press Series in Artiﬁcial Intelligence. MIT Press,
Cambridge, MA, 1989.
[214] Sony Corporation. QRIO’s Homepage. http://www.sony.net/SonyInfo/
QRIO/, 2007.
[215] M. W. Spong. The swing up control problem for the Acrobot. IEEE
Control Systems Magazine, 15(1):49–55, February 1995.
[216] M. W. Spong. Passivity based control of the compass gait biped. In
Proc. of IFAC World Congress, Beijing, China, July 1999.
[217] M. W. Spong and F. Bullo. Controlled symmetries and passive walking.
Automatic Control, IEEE Transactions on, 50(7):1025–31, 2005.
[218] M. W. Spong, S. Hutchinson, and M Vidyasagar. Robot Modeling and
Control. John Wiley & Sons, 2005.
© 2007 by Taylor & Francis Group, LLC

496
Feedback Control of Dynamic Bipedal Robot Locomotion
[219] M. W. Spong and M. Vidyasagar. Robot Dynamics and Control. John
Wiley & Sons, New York, 1989.
[220] M.W. Spong. Energy based control of a class of underactuated me-
chanical systems. In Proc. of IFAC World Congress, San Francisco,
CA, pages 431–5, 1996.
[221] D. E. Stewart. Convergence of a time-stepping scheme for rigid body
dynamics and resolution of Painlev´e’s problem. Archive for Rational
Mechanics and Analysis, 145:215–60, 1998.
[222] D. H. Sutherland, K. R. Kaufman, and J. R. Moitoza. Kinematics of
normal human walking. In J. Rose and J.G. Gamble, editors, Human
Walking, pages 23–44. Williams and Wilkins, second edition, 1994.
[223] T. Takahashi and A. Kawamura. Posture control using foot toe and sole
for biped walking robot “Ken.” In Proc. of the 2002 IEEE International
Workshop on Advanced Motion Control, Maribor, Slovenia, pages 437–
42, 2002.
[224] A. Takanishi. Humanoid robots and animal robots — towards enter-
tainment robot market in 21st century. In International Symposium on
Robotics, Seoul, Korea, April 2001.
[225] A. Takanishi, M. Ishida, Y. Yamazaki, and I. Kato. The realization
of dynamic walking by the biped walking robot WL-10RD. In Proc.
of the International Conference on Advanced Robotics, pages 459–66,
September 1985.
[226] H. Takanobu, H. Tabayashi, S. Narita, A. Takanishi, E. Guglielmelli,
and P. Dario. Remote interaction between human and humanoid robot.
Autonomous Robots, 25(4):371–85, August 1999.
[227] R. Tedrake, T. W. Zhang, and H. S. Seung. Stochastic policy gradient
reinforcement learning on a simple 3D biped.
In Proc. of the 2004
IEEE/RSJ International Conference on Intelligent Robots and Systems,
volume 3, pages 2849–54, 2004.
[228] B. Thuilot, A. Goswami, and B. Espiau. Bifurcation and chaos in a
simple passive bipedal gait. In Proc. of the 1997 IEEE International
Conference on Robotics and Automation, Albuquerque, NM, pages 792–
8, 1997.
[229] D. J. Todd. Walking Machines: An Introduction to Legged Robotics.
Chapman & Hall, 1985.
[230] R.Q. van der Linde. Active leg compliance for passive walking. In Proc.
of the 1998 IEEE International Conference on Robotics and Automa-
tion, Leuven, Belgium, pages 2339–44, 1998.
© 2007 by Taylor & Francis Group, LLC

References
497
[231] B. Vanderborght, B. Verrelst,
R. van Ham,
J. Vermeulen,
and
D. Lefeber. Dynamic control of a bipedal walking robot actuated with
pneumatic artiﬁcial muscles. In Proc. of the 2005 IEEE International
Conference on Robotics and Automation, Barcelona, Spain, pages 1–6,
2005.
[232] O. von Stryk. DIRCOL User’s Guide. Technische Universit¨at M¨uchen,
Zentrum Mathematik (SCB), Lehrstuhl M2 H¨ohere Mathematik und
Numerische Mathematik, D-80290, M¨uchen, Germany, 2.1 edition,
1999.
[233] M. Vukobratovi´c and B. Borovac. Zero-moment point—thirty ﬁve years
of its life. International Journal of Humanoid Robotics, 1(1):157–73,
2004.
[234] M. Vukobratovi´c, B. Borovac, and V. Potkonjak. ZMP: A review of some
basic misunderstandings. International Journal of Humanoid Robotics,
3(2):153–75, June 2006.
[235] M. Vukobratovi´c, B. Borovac, D. Surla, and D. Stokic. Biped Locomo-
tion. Springer-Verlag, Berlin, 1990.
[236] Q. F. Wei. Modeling and Control of Dynamical Eﬀects due to Impact
on Flexible Structures. PhD thesis, University of Maryland, 1994.
[237] Q. F. Wei, W. P. Dayawansa, and P. S. Krishnaprasad. Approximation
of dynamical eﬀects due to impact on ﬂexible bodies. In Proc. of the
1994 American Control Conference, Baltimore, MD, pages 1841–5, June
1994.
[238] Q. F. Wei, P. S. Krishnaprasad, and W. P. Dayawansa. Modeling of
impact on a ﬂexible beam. In Proc. of the 1993 IEEE International
Conference on Decision and Control, San Antonio, TX, pages 1377–82,
December 1993.
[239] E. R. Westervelt. Eric Westervelt’s publications. http://www.mecheng.
osu.edu/∼westerve/publications/, 2007.
[240] E. R. Westervelt. Feedback Control of Dynamic Bipedal Robot Locomo-
tion Webpage. http://www.mecheng.osu.edu/∼westerve/biped book/,
2007.
[241] E. R. Westervelt, G. Buche, and J. W. Grizzle. Experimental validation
of a framework for the design of controllers that induce stable walking in
planar bipeds. International Journal of Robotics Research, 23(6):559–
82, 2004.
[242] E. R. Westervelt, G. Buche, and J. W. Grizzle. Inducing dynamically
stable walking in an underactuated prototype planar biped. In Proc. of
the 2004 IEEE International Conference on Robotics and Automation,
New Orleans, LA, pages 4234 –9, 2004.
© 2007 by Taylor & Francis Group, LLC

498
Feedback Control of Dynamic Bipedal Robot Locomotion
[243] E. R. Westervelt, J. W. Grizzle, and C. Canudas. Switching and PI
control of walking motions of planar biped walkers. IEEE Transactions
on Automatic Control, 48(2):308–12, February 2003.
[244] E. R. Westervelt, J. W. Grizzle, and D. E. Koditschek. Zero dynamics
of underactuated planar biped walkers.
In 15th World Congress on
Automatic Control, Barcelona, Spain, July 2002.
[245] E. R. Westervelt, J. W. Grizzle, and D. E. Koditschek. Hybrid zero
dynamics of planar biped walkers. IEEE Transactions on Automatic
Control, 48(1):42–56, January 2003.
[246] E. R. Westervelt, B. Morris, and K. D. Farrell.
Sample-based HZD
control for robustness and slope invariance of planar passive bipedal
gaits. In Proc. of the 14th Mediterranean Conference on Control and
Automation, 2006.
[247] E. R. Westervelt, B. Morris, and K. D. Farrell. Analysis results and
tools for the control of planar bipedal gaits using hybrid zero dynamics.
Autonomous Robots, 2007. In press.
[248] J. Yamaguchi, E. Soga, S. Inoue, and A. Takanishi. Development of
a bipedial humanoid robot: control method of whole body cooperative
dynamic biped walking. In Proc. of the 1999 IEEE International Con-
ference on Robotics and Automation, Detroit, MI, pages 368–74, 1999.
[249] H. Yamamoto and K. Ohnishi. An approach to stable walking on un-
known slippery ﬂoor for biped robot.
In Proc. of the IEEE Annual
Conference on Industrial Electronics Society, Denver, CO, pages 1728–
33, 2001.
[250] H. Ye, A. N. Michel, and L. Hou. Stability theory for hybrid dynamical
systems. IEEE Transactions on Automatic Control, 43(4):461–74, April
1998.
[251] K. Y. Yi. Walking of a biped robot with compliant ankle joints: im-
plementation with KUBCA. In Proc. of the 2000 IEEE International
Conference on Decision and Control, Sydney, Australia, volume 5, pages
4809–14, 2000.
© 2007 by Taylor & Francis Group, LLC

