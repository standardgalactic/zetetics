MANUFACTURING AUTOMATION
Second Edition
Metal cutting is one of the most widely used methods of producing
the ﬁnal shape of manufactured products. The technology involved
in metal cutting operations has advanced considerably in recent
years, along with developments in materials, computers, and
sensors.
This book treats the scientiﬁc principles of metal cutting and
their practical application to solving problems encountered in
manufacturing. The subjects of mathematics, physics, computers,
and instrumentation are discussed as integration tools in analyz-
ing or designing machine tools and manufacturing processes.
The book begins with the fundamentals of metal cutting
mechanics. The basic principles of vibration and experimental
modal analysis are applied to solving problems on the shop ﬂoor.
A special feature is the in-depth coverage of chatter vibrations,
a problem experienced daily by practicing manufacturing engi-
neers. The essential topics of programming, design, and automa-
tion of computer numerically controlled (CNC) machine tools,
numerically controlled (NC) programming, and computer-aided
design/computer-aided manufacturing (CAD/CAM) technology are
discussed. The text also covers the selection of drive actuators,
feedback sensors, the modeling and control of feed drives, the
design of real-time trajectory generation and interpolation algo-
rithms, and CNC-oriented error analysis in detail. Each chap-
ter includes examples drawn from industry, design projects, and
homework problems.
Advanced undergraduate and graduate students, and practicing
engineers, as well, will ﬁnd in this book a clear and thorough way
to learn the engineering principles of metal cutting mechanics,
machine tool vibrations, CNC system design, sensor-assisted
machining, and CAD/CAM technology.
Yusuf Altintas is a Fellow of the Royal Society of Canada and
NSERC Pratt & Whitney Canada Research Chair Professor
of Mechanical Engineering and Director of the Manufacturing
Automation Laboratory at the University of British Columbia.


MANUFACTURING
AUTOMATION
METAL CUTTING MECHANICS,
MACHINE TOOL VIBRATIONS,
AND CNC DESIGN
Second Edition
YUSUF ALTINTAS
University of British Columbia

CAMBRIDGE UNIVERSITY PRESS
Cambridge, New York, Melbourne, Madrid, Cape Town,
Singapore, S˜ao Paulo, Delhi, Tokyo, Mexico City
Cambridge University Press
32 Avenue of the Americas, New York, NY 10013-2473, USA
www.cambridge.org
Information on this title: www.cambridge.org/9780521172479
C⃝Yusuf Altintas 2012
This publication is in copyright. Subject to statutory exception
and to the provisions of relevant collective licensing agreements,
no reproduction of any part may take place without the written
permission of Cambridge University Press.
First published 2012
Printed in the United States of America
A catalog record for this publication is available from the British Library.
Library of Congress Cataloging in Publication data
Altintas, Yusuf, 1954–
Manufacturing automation : metal cutting mechanics, machine tool vibrations, and CNC design /
Yusuf Altintas. – 2nd ed.
p.
cm.
Includes bibliographical references and index.
ISBN 978-1-107-00148-0 (hardback) – ISBN 978-0-521-17247-9 (paperback)
1. Machining – Automation.
2. Machine-tools – Vibration.
3. Machine-tools – Numerical
control.
I. Title.
TJ1185.5.A48
2011
670–dc23
2011041033
ISBN 978-1-107-00148-0 Hardback
ISBN 978-0-521-17247-9 Paperback
Cambridge University Press has no responsibility for the persistence or accuracy of URLs for
external or third-party Internet Web sites referred to in this publication and does not guarantee
that any content on such Web sites is, or will remain, accurate or appropriate.

CONTENTS
Preface
page ix
1
INTRODUCTION
1
2
MECHANICS OF METAL CUTTING
4
2.1
Introduction
4
2.2
Mechanics of Orthogonal Cutting
4
2.3
Mechanistic Modeling of Cutting Forces
15
2.4
Theoretical Prediction of Shear Angle
18
2.5
Mechanics of Oblique Cutting
19
2.5.1
Oblique Cutting Geometry
19
2.5.2
Solution of Oblique Cutting Parameters
21
2.5.3
Prediction of Cutting Forces
25
2.6
Mechanics of Turning Processes
27
2.7
Mechanics of Milling Processes
35
2.7.1
Mechanics of Helical End Mills
41
2.8
Analytical Modeling of End Milling Forces
43
2.8.1
Mechanistic Identiﬁcation of Cutting Constants
in Milling
46
2.9
Mechanics of Drilling
47
2.10
Tool Wear and Tool Breakage
54
2.10.1
Tool Wear
56
2.10.2
Tool Breakage
61
2.11
Problems
62
3
STRUCTURAL DYNAMICS OF MACHINES
66
3.1
Introduction
66
3.2
Machine Tool Structures
66
3.3
Dimensional Form Errors in Machining
68
3.3.1
Form Errors in Cylindrical Turning
68
3.3.2
Boring Bar
70
3.3.3
Form Errors in End Milling
71
3.4
Structural Vibrations in Machining
74
3.4.1
Fundamentals of Free and Forced Vibrations
75
3.4.2
Oriented Frequency Response Function
82
v

vi
CONTENTS
3.4.3
Design and Measurement Coordinate Systems
83
3.4.4
Analytical Modal Analysis for Multi–Degree-of-Freedom
Systems
85
3.4.5
Relative Frequency Response Function between Tool and
Workpiece
90
3.5
Modal Testing of Machine Structures
92
3.5.1
Theory of Frequency Response Testing
92
3.5.2
Experimental Procedures in Modal Testing
97
3.6
Experimental Modal Analysis for Multi–Degree-of-Freedom
Systems
98
3.7
Identiﬁcation of Modal Parameters
109
3.7.1
Global Nonlinear Optimization of Modal Parameter
Identiﬁcation
113
3.8
Receptance Coupling of End Mills to Spindle-Tool Holder
Assembly
115
3.8.1
Experimental Procedure
118
3.9
Problems
120
4
MACHINE TOOL VIBRATIONS
125
4.1
Introduction
125
4.2
Stability of Regenerative Chatter Vibrations in Orthogonal
Cutting
126
4.2.1
Stability of Orthogonal Cutting
126
4.2.2
Dimensionless Analysis of Stability Lobes in Orthogonal
Cutting
132
4.2.3
Chatter Stability of Orthogonal Cutting with Process
Damping
135
4.3
Chatter Stability of Turning Operations
139
4.4
Chatter Stability of Turning Systems with Process Damping
142
4.4.1
Metal Cutting Forces
144
4.4.2
Process Damping Gains Contributed by Flank Wear
145
4.4.3
Stability Analysis
147
4.5
Experimental Validation
148
4.6
Analytical Prediction of Chatter Vibrations in Milling
149
4.6.1
Dynamic Milling Model
149
4.6.2
Zero-Order Solution of Chatter Stability in Milling
154
4.6.3
Multi-Frequency Solution of Chatter Stability in Milling
160
4.7
Chatter Stability of Drilling Operations
172
4.7.1
Dynamic Drilling Force Model
173
4.8
Frequency Domain Solution of Drilling Stability
176
4.9
Semidiscrete Time Domain Solution of Chatter Stability
178
4.9.1
Orthogonal Cutting
178
4.9.2
Discrete Time Domain Stability Solution in Milling
182
4.10
Problems
186

CONTENTS
vii
5
TECHNOLOGY OF MANUFACTURING AUTOMATION
191
5.1
Introduction
191
5.2
Computer Numerically Controlled Unit
191
5.2.1
Organization of a CNC Unit
191
5.2.2
CNC Executive
193
5.2.3
CNC Machine Tool Axis Conventions
193
5.2.4
NC Part Program Structure
193
5.2.5
Main Preparatory Functions
196
5.3
Computer-Assisted NC Part Programming
201
5.3.1
Basics of Analytical Geometry
201
5.3.2
APT Part Programming Language
206
5.4
Trajectory Generation for Computer-Controlled
Machines
211
5.4.1
Interpolation with Constant Displacement
212
5.4.2
Acceleration-Limited Velocity Proﬁle Generation
with Constant Interpolation Period
216
5.4.3
Jerk-Limited Velocity Proﬁle Generation
220
5.5
Real-Time Interpolation Methods
229
5.5.1
Linear Interpolation Algorithm
230
5.5.2
Circular Interpolation Algorithm
234
5.5.3
Quintic Spline Interpolation within CNC Systems
239
5.6
Problems
245
6
DESIGN AND ANALYSIS OF CNC SYSTEMS
250
6.1
Introduction
250
6.2
Machine Tool Drives
250
6.2.1
Mechanical Components and Torque Requirements
251
6.2.2
Feedback Devices
256
6.2.3
Electrical Drives
257
6.2.4
Permanent Magnet Armature-Controlled dc Motors
258
6.2.5
Position Control Loop
263
6.3
Transfer Function of the Position Loop
264
6.4
State Space Model of Feed Drive Control Systems
268
6.5
Sliding Mode Controller
281
6.6
Active Damping of Feed Drives
285
6.7
Design of an Electrohydraulic CNC Press Brake
293
6.7.1
Hydraulic Press Brake System
293
6.7.2
Dynamic Model of Hydraulic Actuator Module
296
6.7.3
Identiﬁcation of Electrohydraulic Drive Dynamics
for Computer Control
299
6.7.4
Digital Position Control System Design
301
6.8
Problems
307

viii
CONTENTS
7
SENSOR-ASSISTED MACHINING
313
7.1
Introduction
313
7.2
Intelligent Machining Module
313
7.2.1
Hardware Architecture
314
7.2.2
Software Architecture
315
7.2.3
Intelligent Machining Application
316
7.3
Adaptive Control of Peak Forces in Milling
317
7.3.1
Introduction
317
7.3.2
Discrete Transfer Function of the Milling Process
System
319
7.3.3
Pole-Placement Control Algorithm
321
7.3.4
Adaptive Generalized Predictive Control of Milling
Process
325
7.3.5
In-Process Detection of Tool Breakage
330
7.3.6
Chatter Detection and Suppression
333
7.4
Intelligent Pocketing with the IMM System
334
7.5
Problems
336
APPENDIX A: LAPLACE AND z TRANSFORMS
341
A.1
Introduction
341
A.2
Basic Deﬁnitions
343
A.3
Partial Fraction Expansion Method
347
A.4
Partial Fraction Expansion Method to Determine Inverse
Laplace and z Transforms
349
APPENDIX B: OFF-LINE AND ON-LINE PARAMETER
ESTIMATION WITH LEAST SQUARES
353
B.1
Off-Line Least-Squares Estimation
353
B.2
Recursive Parameter Estimation Algorithm
355
Bibliography
357
Index
363

PREFACE
Metal cutting is one of the most widely used manufacturing processes to pro-
duce the ﬁnal shape of products, and its technology continues to advance in
parallel with developments in materials, computers, sensors, and actuators. A
blank is converted into a ﬁnal product by cutting extra material away by turn-
ing, drilling, milling, broaching, boring, and grinding operations conducted on
computer numerically controlled (CNC) machine tools. The second edition of
this book helps students and engineers understand the scientiﬁc principles of
metal cutting technology and the practical application of engineering principles
to solving problems encountered in manufacturing shops. The book reﬂects the
author’s industrial and research experience, and his manufacturing engineer-
ing philosophy as well.
Engineers can learn best by being shown how to apply the fundamentals
of physics to actual machines and processes that they can feel and visual-
ize. Mathematics, physics, computers, algorithms, and instrumentation then
become useful integration tools in analyzing or designing machine tools and
machining processes.
Metal cutting operations take place between a cutting tool and workpiece
material mounted on a machine tool. The motion of the machine tool is con-
trolled by its CNC unit, and the numerically controlled (NC) commands to
CNC are generated on computer-aided design/computer-aided manufacturing
(CAD/CAM) systems. The productivity and accuracy of the metal removal oper-
ation depend on the preparation of NC programs, planning of machining pro-
cess parameters and cutting conditions, cutter geometry, work and tool mate-
rials, machine tool rigidity, and performance of the CNC unit. Manufacturing
engineers who are involved in machining and machine tool technology must be
familiar with each of these topics. It is equally important to link them and to be
able to apply them in an interdisciplinary fashion to solve machining problems.
The beginning chapters of this book provide detailed mathematical models
of metal cutting, milling, turning, and drilling operations. The macromechan-
ics of cutting, which is applicable to solving problems on the shop ﬂoor and
in machine tool design, is emphasized. Although required in work and tool
material design – the micromechanics of cutting – basic principles of machin-
ability, tool wear mechanisms, and chipping are brieﬂy introduced to provide
a complete picture. The design of machine tools requires knowledge of struc-
tures, mechanics of solids, vibrations, and kinematics, subjects that are covered
ix

x
PREFACE
in dedicated mechanical engineering texts. This text builds on that knowl-
edge, applying the principles of vibration and experimental modal analysis to
machine tools and metal cutting. Mathematical methods are simpliﬁed so that
they can be easily used to solve machining vibration problems. Chatter vibra-
tions in machining are treated in depth in this text because the problem is
experienced daily by practicing manufacturing engineers.
The last three chapters of the book are dedicated to programming, design,
and automation of CNC machine tools. Numerically controlled programming
and CAD/CAM technology are brieﬂy covered, but with sufﬁcient explanation
so that the reader can start programming and using CNC machine tools. The
selection of drive actuators, feedback sensors, modeling and analysis of feed
drives, the design of real-time trajectory generation and interpolation algo-
rithms, and CNC-oriented error analysis are presented in more detail than
can be found in other texts. Open CNC design philosophy and improvement of
accuracy and productivity by adding sensors and algorithms to CNC machine
tools are also covered.
Students learn best by dealing with real manufacturing problems. The con-
tents of this book are based on experimentally proven engineering principles
that are widely used in applied research laboratories and industry. The exam-
ples and problems presented in each chapter originate from the research and
industrial problems solved by the author and his graduate students. Interdis-
ciplinary problems are posed as industrial projects so that readers can apply
all the necessary techniques simultaneously. They solve the basic metal cut-
ting mechanics problem ﬁrst, followed by milling mechanics, static deﬂection of
end mills and corresponding surface-form error modeling, and vibration model
of the end mill and chatter stability. For example, the chain of knowledge is
exercised in solving problems associated with milling of an aircraft structure, a
project that originated from industry. Similarly, in another project, the reader
is guided step by step through the programming, real-time modeling, and con-
trol of a CNC machine tool. Because all the projects were tried in the author’s
laboratory, a number of teaching and research setups are provided in the book
to aid instructors.
The book is intended as a text for senior undergraduate and graduate stu-
dents and practicing manufacturing engineers who wish to learn the engineer-
ing principles of metal cutting, machine tool vibration, experimental modal
analysis, NC programming and CAD/CAM technology, CNC system design,
and sensor-based machining. The book can also be used by researchers who
wish to study metal cutting mechanics, machine tool vibrations, feed drive
design and control, and CNC and sensor-based machining.
Acknowledgments
The contents of each chapter mostly originated from the author’s own engi-
neering, research, and teaching experience. Each chapter is based on a num-
ber of graduate student theses supervised at the Manufacturing Automation

PREFACE
xi
Laboratory founded and directed by the author at the University of British
Columbia.
The studies of former graduate students and associates E. Budak, A. Spence,
E. Shamoto, I. Lazoglu, Haikun Ren, and F. Atabey contributed to Chapter
Two, which deals with metal cutting. The theses of E. Budak, S. Engin, P. Lee,
S. Park, M. Namazi, D. Merdol, J. Roukema, Z. Dombavari, and M. Eynian were
very helpful in writing Chapters Three and Four, where machine tool vibrations
are presented. The theses of K. Erkorkmaz, B. Sencer, and C. Okwudire were
helpful in writing Chapters Five and Six, which presents the principles of
CNC design. The graduate research theses of N. A. Erol and K. Munasinghe
were instrumental in forming the ﬁnal chapter, which deals with sensor-fused
machining. The author acknowledges the contributions of all of his former and
present graduate students to the accumulation and dissemination of knowledge
in machining, machine tools, machine tool vibrations, and control.
Several machinists, engineers, and professors contributed to the author’s
manufacturing engineering experience. The author received signiﬁcant prac-
tical training from the machine tool design engineers, technologists, and
machinists at M.K.E. Top Otomotiv Factory in Kirikkale, Turkey; the machin-
ists and the process planners at Pratt & Whitney Canada in Montreal; and
those at Canadian Institute of Metal Working in Hamilton. The author’s basic
engineering education with rich machine design and analytical content from
Istanbul Technical University, CAD/CAM education from the University of
New Brunswick, and machine tool engineering background from McMaster
University were most valuable in overall development of his manufactur-
ing engineering and research skills. Professors G. Pritschow, U. Heisel,
T. Moriwaki, F. Klocke, M. Weck, H. van Brussel, G. Bryne, G. Stepan,
T. Altan, and A. G. Ulsoy and industrial colleagues Dr. M. Zatarin (Ideko),
Dr. M. Fujishima (Mori Seiki), M. Lundblad (Sandvik), and D. McIntosh (Pratt
& Whitney Canada) provided strong personal friendship and research partner-
ship. Machine Tool Technology Research Foundation (MTTRF) and Mori Seiki
loaned the experimental machine tools, and Sandvik Coromant and Mitsubishi
Materials donated the cutting tools for research. The author was most inﬂu-
enced by the research and machine tool engineering style and philosophy of his
mentor the late Professor J. Tlusty.
I acknowledge the valuable editorial support provided by the Cambridge
University Press editor, Peter Gordon. I thank those at Cambridge University
Press and Aptara for their cooperation and assistance.
Machine tool and metal cutting engineering is a multidisciplinary area that
demands knowledge from various ﬁelds if one is to be an effective manufac-
turing engineer and researcher. This requires signiﬁcant work and effort that
cannot be accomplished without the sacriﬁces of close family members. The
author’s wife Nesrin, daughter Cagla, and son Hasan bore with the author, who
missed an endless number of family days in establishing the Manufacturing
Automation Research Laboratory at the University of British Columbia, where

xii
PREFACE
the book has been developed and improved for twenty-ﬁve years. The author’s
mother Hatice and late father Hasan, who were hard-working, honest, and
warm wine makers living in the little town Bekili (Denizli, Turkey), were more
than role models and a source of support for the author. The author’s brother
Asim and sister Ummuhan and her husband Ibrahim have been more than
family members; they have been very close friends. The author owes the com-
pletion of the book to those who supported him throughout his career and life.

MANUFACTURING AUTOMATION


CHAPTER ONE
INTRODUCTION
The areas of machine tools, metal cutting, computer numerically controlled
(CNC), computer-aided manufacturing (CAM), and sensor-assisted machining
are quite wide, and each requires the academic and engineering experience to
appreciate a manufacturing operation that uses all of them in an integrated
fashion.
Although it is impossible to be an expert in all these subjects, a manufac-
turing engineer must be familiar with the engineering fundamentals for the
precision and economical manufacturing of a part. This book emphasizes only
the fundamentals of metal cutting mechanics, machine tool vibrations, feed
drive design and control, CNC design principles, sensor-assisted machining,
and the technology of programming CNC machines. The book is based on more
than 120 journal articles and more than 60 research theses that reﬂect the
engineering, research, and teaching experience of the author.
The book is organized as follows.
Chapter Two covers the fundamentals of metal cutting mechanics. The
mechanics of two-dimensional orthogonal cutting is introduced ﬁrst. The laws
of fundamental chip formation and friction between the rake and ﬂank faces
of a tool during cutting are explained. The relationships among the workpiece
material properties, tool geometry, and cutting conditions are presented. Iden-
tiﬁcation of the shear angle, the average friction coefﬁcient between the tool’s
rake face and moving chip, and the yield shear stress during machining is
explained. The oblique geometry of practical cutting tools used in machining
is introduced. The mechanics of oblique cutting for three-dimensional prac-
tical tools are explained, and methods in predicting the cutting forces in all
directions are presented with the use of the laws of oblique cutting mechanics.
The mechanics of turning, milling, and drilling, which constitute the majority
of machining operations in the manufacturing industry, are presented. Algo-
rithms for predicting the milling forces in three Cartesian coordinates are
derived and illustrated with sample experimental results. Efﬁcient force pre-
diction algorithms for widely used helical end mills are presented. The chapter
also brieﬂy discusses the modes and causes of tool wear and breakage, that are
important in evaluating the machinability of parts.
Chapter Three deals with static deformations and vibrations during machin-
ing. The static deformations occur because of the elastic deﬂections of both
parts and machine during machining. When the static deformation is beyond
1

2
INTRODUCTION
the tolerance limit, the part is scrapped. Sample formulations are provided to
predict the magnitude and location of static deformations in bar turning and
end milling. The methods can be extrapolated to other machining operations
such as grinding and drilling. One of the most common problems in machin-
ing originates from dynamic deformations (i.e., relative structural vibrations
between the tool and workpiece). The most common vibrations are due to self-
excited chatter vibrations, which grow until the tool jumps out of the cutting
zone or breaks because of the exponentially growing dynamic displacements
between the tool and workpiece. To understand the machine tool vibrations,
the fundamental principles of single – and multi–degree-of-freedom vibration
theory are summarized ﬁrst. Because the machine tool chatter is mainly inves-
tigated by analyzing experimental data, the fundamentals of the experimental
modal analysis techniques are presented. The modal analysis technique allows
the engineer to represent a complex machine tool or workpiece structure by
a set of commonly used mathematical expressions that engineers can under-
stand. The technique not only allows one to analyze the chatter vibrations,
but it gives a clear message to the machine tool engineer about the structural
source of the vibrations during machining, which leads to the improved design.
Chapter Four presents the theory of chatter vibrations in both orthogonal
and oblique machining operations both in the frequency and discrete time
domain. The mathematical model of regenerative vibrations, which occur in
subsequent tool passes during machining, is presented. The methods of deter-
mining chatter vibration–free axial depths of cuts and spindle speeds in orthog-
onal cutting operations are presented with and without process damping. Math-
ematical models of predicting chatter stability in turning, drilling, and milling
operations are introduced. The techniques are explained with the aid of results
obtained from simulation and machining tests. The engineer is presented with
methods that increase the machining productivity by avoiding chatter vibra-
tions.
Chapter Five introduces the CNC technology and its principles of operation
and programming. First, standard NC commands accepted by all CNC machine
tools are summarized. These include the format of an NC code accepted by the
CNC of the machine tool, motion commands such as linear and circular con-
touring along a tool path, miscellaneous commands such as spindle and coolant
control, and automatic cycles. Later, the introductory principles of CAM are
presented. NC programs generated by CAM systems are processed by CNC
units that generate position commands to each drive based on trajectory gen-
eration and real-time interpolation algorithms. The mathematical details of
generating smooth trajectory with velocity, acceleration, and jerk limits of the
machine are covered. Real-time interpolation of linear, circular, and splined
paths are presented with examples.
Engineers who know how to use and program CNC machine tools must
familiarize themselves with the design and internal operational principles of
CNC. Chapter Six describes the fundamentals of CNC design, starting with the
selection of drive motors and servoampliﬁers. Mathematical modeling of feed

INTRODUCTION
3
servodrives is presented in detail. The transfer functions of mechanical drive
inertia and friction, servomotor, ampliﬁer, and velocity and position feedback
sensors are explained with their practical interpretations. The transformation
of continuous-time domain models of the physical system into discrete computer
time domain models is explained. Design and tuning procedures for the digital
control of feed drives are presented with real-life examples. Advanced control
techniques for precision tracking and active vibration damping of feed drives
are presented. The chapter is complemented with the design of electrohydraulic
machine tool drives to show that the CNC design principles are general and
can be applied to any mechanical system regardless of the actuators.
The recent trend in machining is to add intelligence to the machine tools
and CNC, as discussed in Chapter Seven. Sensors that can measure the forces,
vibrations, temperature, and sound during machining are installed on the
machine tools. Mathematical models that correlate the relationship between
the measured sensor signals and the state of machining are formed. The mathe-
matical models are coded into real-time algorithms that monitor the machining
process and send commands to CNC for corrective actions. The chapter includes
simple but fundamental machining process control algorithms along with their
theoretical foundations. Adaptive control of cutting forces, in-process monitor-
ing of tool failure, and chatter detection algorithms are presented with their
experimental validation and engineering application.
Sample problem sets are included at the end of each chapter. The problems
mostly originated from the actual design, application, and experiments con-
ducted at the author’s manufacturing automation research laboratory; hence,
they are designed to give a realistic feeling for engineering students. Because
the book contains multiple engineering disciplines applied to machine tool
engineering problems in an integrated fashion, most of the basic mechanical
engineering concepts are assumed to be understood by the readers. However,
the basic principles of Laplace and z transforms, as well as least squares –
based identiﬁcation techniques, are provided in the appendix.
The advanced mathematical models developed in the author’s laboratory are
simpliﬁed to teach the basic principles of metal cutting mechanics, machine tool
vibrations, and control in this second edition of the book. The details of the full
mathematical models are published in the research theses of graduate stu-
dents and journal articles supervised by the author. The advanced algorithms
are also packaged in CUTPRO c⃝Advanced Machining Process Simulation
Software [66], which is licensed to research centers and machining industry
worldwide.

CHAPTER TWO
MECHANICS OF METAL CUTTING
2.1
INTRODUCTION
The ﬁnal shapes of most mechanical parts are obtained by machining oper-
ations. Bulk deformation processes, such as forging and rolling, and casting
processes are mostly followed by a series of metal-removing operations to
achieve parts with desired shapes, dimensions, and surface ﬁnish quality. The
machining operations can be classiﬁed under two major categories: cutting and
grinding processes. The cutting operations are used to remove material from
the blank. The subsequent grinding operations provide a good surface ﬁnish
and precision dimensions to the part. The most common cutting operations
are turning, milling, and drilling followed by special operations such as bor-
ing, broaching, hobing, shaping, and form cutting. However, all metal cutting
operations share the same principles of mechanics, but their geometry and
kinematics may differ from each other. The mechanics of cutting and the spe-
ciﬁc analysis for a variety of machining operations and tool geometries are not
widely covered in this text. Instead, a brief introduction to the fundamentals of
cutting mechanics and a comprehensive discussion of the mechanics of milling
operations are presented. Readers are referred to established metal cutting
texts authored by Armarego and Brown [25], Shaw [96], and Oxley [83] for
detailed treatment of the machining processes.
2.2
MECHANICS OF ORTHOGONAL CUTTING
Although the most common cutting operations are three-dimensional and geo-
metrically complex, the simple case of two-dimensional orthogonal cutting is
used to explain the general mechanics of metal removal. In orthogonal cut-
ting, the material is removed by a cutting edge that is perpendicular to the
direction of relative tool–workpiece motion. The mechanics of more complex
three-dimensional oblique cutting operations are usually evaluated by geomet-
rical and kinematic transformation models applied to the orthogonal cutting
process. Schematic representations of orthogonal and oblique cutting processes
are shown in Figure 2.1. The orthogonal cutting resembles a shaping process
with a straight tool whose cutting edge is perpendicular to the cutting velocity
(V). A metal chip with a width of cut (b) and depth of cut (h) is sheared away from
the workpiece. In orthogonal cutting, the cutting is assumed to be uniform along
the cutting edge; therefore, it is a two-dimensional plane strain deformation
4

2.2 MECHANICS OF ORTHOGONAL CUTTING
5
i
η
Workpiece
Chip
Tool
V,F
Vc
Ff
t
Fr
Chip-flow angle
i
Cutting edge
inclination angle
V,F
Tool
Workpiece
Chip Vc
Ff
t
a) Orthogonal cutting geometry
b) Oblique cutting geometry
Flank face
Rake face
b
h
Figure 2.1: Geometries of orthogonal and oblique cutting processes.
process
without
side
spreading of the mate-
rial. Hence, the cutting
forces are exerted only in
the directions of velocity
and uncut chip thickness,
which are called tangen-
tial (Ft) and feed forces
(Ff). However, in oblique
cutting, the cutting edge
is oriented with an incli-
nation angle (i) and the
additional third force acts
in the radial direction (Fr).
There are three defor-
mation zones in the cut-
ting process as shown in
the cross-sectional view
of the orthogonal cutting
(see Fig. 2.2). As the edge
of the tool penetrates into
the workpiece, the mate-
rial
ahead
of
the
tool
is sheared over the pri-
mary shear zone to form
a chip. The sheared mate-
rial, the chip, partially
deforms and moves along
the rake face of the tool,
which is called the sec-
ondary deformation zone.
The friction area, where
the ﬂank of the tool rubs
the newly machined surface, is called the tertiary zone.
The chip initially
sticks to the rake face of the tool, which is called the sticking region. The fric-
tion stress is approximately equal to the yield shear stress of the material at
the sticking zone where the chip moves over a material stuck on the rake face
of the tool. The chip stops sticking and starts sliding over the rake face with
a constant sliding friction coefﬁcient. The chip leaves the tool, losing contact
with the rake face of the tool. The length of the contact zone depends on the
cutting speed, tool geometry, and material properties. There are basically two
types of assumptions in the analysis of the primary shear zone. Merchant [75]
developed an orthogonal cutting model by assuming that the shear zone is a
thin plane. Others, such as Lee and Shaffer [67] and Palmer and Oxley [84],
based their analysis on a thick shear deformation zone, proposing “shear angle

6
MECHANICS OF METAL CUTTING
V
Workpiece
Tool
Chip
Tertiary
zone
Primary zone
Secondary zone
α r
φc
Sticking zone
Sliding  zone
Chip contact length on the rake face
Pressure
Friction
Chip leaves the 
rake face
(+)
(-)
Figure 2.2: Contact zone (−) and tensile stresses (+) after the
chip
prediction” models in accordance
with the laws of plasticity. In this
text, the primary shear deforma-
tion zone is assumed to be a thin
zone for simpliﬁcation.
The
deformation
geometry
and the cutting forces are shown
on the cross-sectional view of the
orthogonal cutting process (see
Fig. 2.3). It is assumed that the
cutting edge is sharp without
a chamfer or radius and that
the deformation takes place at
the inﬁnitely thin shear plane.
The shear angle φc is deﬁned
as the angle between the direc-
tion of the cutting speed (V) and
the shear plane. It is further
assumed that the shear stress
(τs) and the normal stress (σs)
on the shear plane are constant;
the resultant force (Fc) on the
chip, applied at the shear plane,
is in equilibrium to the force (Fc)
applied to the tool over the chip–
tool contact zone on the rake
face; an average constant fric-
tion is assumed over the chip–
rake face contact zone. The con-
tact forces originating from ter-
tiary zone are assumed to be zero, and all cutting forces are due to shearing
process or chip–rake face contact. From the force equilibrium, the resultant
force (Fc) is formed from the feed (Ffc) and tangential (Ftc) cutting forces:
Fc =

F2
tc + F2
fc.
(2.1)
The feed force (or thrust force) is in the direction of uncut chip thickness,
and the tangential cutting force (or power force) is in the direction of cutting
velocity. The cutting forces acting on the tool will have equal amplitude but
opposite directions with respect to the forces acting on the chip. The mechanics
of orthogonal cutting for two deformation zones are shown as follows.
Primary Shear Zone
The shear force (Fs) acting on the shear plane is derived from the geometry
as follows:
Fs = Fc cos(φc + βa −αr),
(2.2)

2.2 MECHANICS OF ORTHOGONAL CUTTING
7
Vs
Vc
αr
V
φc
Tool
V
h
Chip
hc
αr
shear plane
rake face
Fu
Fv
F
Ffc
c
Ftc
Fn
Fs
φc
βa
βa- αr
Tool
A 0
A 2
A 1
A’2
V
V c
α r
B 2
B 0
B 1
B’2
α r
A 1
A 2
A’2
φ c
φ c
ΔS
Δd
φ c- α r
c
Workpiece 
Cutting force diagram 
Velocity diagram
Shear deformation and strain diagrams
Figure 2.3: Mechanics of orthogonal cutting.
where βa is the average friction angle between the tool’s rake face and the
moving chip, and αr is the rake angle of the tool. The shear force can also be
expressed as a function of the feed and tangential cutting forces as follows:
Fs = Ftc cos φc −Ffc sin φc.
(2.3)
Similarly, the normal force acting on the shear plane is found to be
Fn = Fc sin(φc + βa −αr)
(2.4)

8
MECHANICS OF METAL CUTTING
or
Fn = Ftc sin φc + Ffc cos φc.
(2.5)
With the assumption of uniform stress distribution on the shear plane, the
shear stress (τs) is found to be
τs = Fs
As
,
(2.6)
where the shear plane area (As) is
As = b
h
sin φc
,
(2.7)
where b is the width of cut (or the depth of cut in turning), h is the uncut chip
thickness, and (φc) is the shear angle between the direction of cutting speed (V)
and the shear plane. The normal stress on the shear plane (σs) is
σs = Fn
As
.
(2.8)
The cutting velocity (V) is resolved into two components (see the velocity
diagram shown in Fig. 2.3). The material is sheared away from the workpiece
with the shear velocity (Vs). From the velocity hodograph shown, we have
Vs = V
cos αr
cos(φc −αr).
(2.9)
The shear power spent in the shear plane is
Ps = Fs · Vs,
(2.10)
which is converted into heat. The corresponding temperature rise on the shear
plane (Ts) is
Ps = mccs(Ts −Tr),
(2.11)
where mc is the metal removal rate [kg/s], cs is the speciﬁc coefﬁcient of heat for
the workpiece material [Nm/kg◦C], and Tr is the shop temperature. The metal
removal rate is found from the cutting process conditions,
mc = Qcρ,
Qc = bhV
[m3/s],

(2.12)
where ρ[kg/m3] is the speciﬁc density of the workpiece material. The shear
plane temperature (Ts) can be calculated from Eqs. (2.9) to (2.12):
Ts = Tr +
Ps
mccs
.
(2.13)
The formulation given above considers that the entire plastic deformation
takes place only at the shear plane and that all the heat is also consumed at
the shear plane. This assumption is shown to overestimate the temperature
prediction proposed by Boothroyd [30], who considered that some of the plastic
deformation takes place over a shear zone of ﬁnite thickness and that some of

2.2 MECHANICS OF ORTHOGONAL CUTTING
9
the heat is dissipated to the work material and the chip, away from the thin
shear plane. Oxley [83] used the following modiﬁed temperature prediction:
Ts = Tr + λh(1 −λs) Ps
mccs
,
(2.14)
where λh (0 < λh ≤1) is a factor that considers the plastic work done outside
the thin shear zone, and λs is the proportion of the heat conducted into the
work material. For a plain carbon steel, an average value for λh ≈0.7 can
be assumed [107]. The heat conducted into the work material is evaluated with
the following experimentally evaluated empirical equation [83]:
λs = 0.5 −0.35 log(RT tan φc),
for
0.04 ≤RT tan φc ≤10,
λs = 0.3 −0.15 log(RT tan φc),
for RT tan φc ≥10,
(2.15)
where φc is the shear angle and RT is a nondimensional thermal number given
by
RT = ρcsVh
ct
,
(2.16)
where ct is the thermal conductivity of the work material with units [W/(m◦C)].
Note also that the heat transmitted to the work material can not be more than
the total energy generated, and a negative inﬂux of the heat into the shear
plane is not possible (0 ≤λs ≤1).
The shear plane length Lc is found from the chip deformation geometry as
follows:
Lc =
h
sin φc
=
hc
cos(φc −αr).
(2.17)
The chip compression ratio (rc) is the ratio of the uncut chip thickness over the
deformed (hc) one as follows:
rc = h
hc
.
(2.18)
The shear angle is found from the geometry as a function of rake angle and the
chip compression ratio as follows:
φc = tan−1
rc cos αr
1 −rc sin αr
.
(2.19)
The shear strains and strain rates in metal cutting are signiﬁcantly higher
than those found from standard tensile tests and metal-forming operations.
The geometry of a deformed chip is shown in Figure 2.3. Assume that an
undeformed chip section A0B0 A1B1 is moving with workpiece velocity V. The
workpiece material is deformed plastically at the shear plane (B1A1), and the
cut chip slides over the rake face with a chip velocity Vc. After 	t shearing time,
the uncut metal strip A0B0B1A1 becomes a chip with a geometry of A1B1 B2 A2.
Hence, the chip is shifted from the expected position B′
2A′
2 to the deformed
position B2A2 because of shearing in the shear plane with a shear angle of

10
MECHANICS OF METAL CUTTING
φc. Because of plane strain deformation, A′
2A2 = B′
2B2. The shear strain (γs)
is deﬁned as the ratio of deformation (	s = A′
2A2) over the nominal distance
between the deformed and undeformed planes (	d = A1C) as follows:
γs = 	s
	d = A2A′
2
A1C
= A′
2C
A1C
+ CA2
A1C
= cot φc + tan(φc −αr).
By rearranging, the shear strain can be expressed as
γs =
cos αr
sin φc cos(φc −αr).
(2.20)
The shear strain rate is
γ ′
s = γs
	t .
Assuming that the shear zone increment is 	s and that the thickness of shear
deformation zone is 	d, the shear strain and shear velocity can be deﬁned as
γs = 	s/	d and Vs = 	s/	t, respectively. The shear strain rate is then deﬁned
as
γ ′
s = Vs
	d =
V cos αr
	d cos(φc −αr).
(2.21)
Because the shear zone thickness 	d is extremely small in cutting, Eq. (2.21)
indicates the presence of very high shear strain rates. Especially when the
shear zone is assumed to be a plane with zero thickness, the strain rate becomes
inﬁnite, which can not be true. However, the thin shear plane approximation
is useful for the macromechanics analysis of metal cutting. For practical and
approximate predictions, the thickness of the shear zone can be approximated
as a fraction of the shear plane length (i.e., 	d ≈0.15–0.2 Lc). For more accu-
rate analysis, the shear zone thickness must be evaluated by freezing the
machining process with a quick stop test and measuring the zone thickness
with a scanning electron microscope (SEM).
Secondary Shear Zone
Two components of the cutting force are acting on the rake face of the tool
(Fig. 2.3): the normal force Fv,
Fv = Ftc cos αr −Ffc sin αr,
(2.22)
and the friction force Fu on the rake face,
Fu = Ftc sin αr + Ffc cos αr.
(2.23)
In the orthogonal cutting analysis shown here, it is assumed that the chip is
sliding on the tool with an average and constant friction coefﬁcient of μa. In
reality, the chip sticks to the rake face for a short period and then slides over
the rake face with a constant friction coefﬁcient [119]. The average friction

2.2 MECHANICS OF ORTHOGONAL CUTTING
11
coefﬁcient on the rake face is given as
μa = tan βa = Fu
Fv
.
(2.24)
The friction angle βa can alternatively be found from the tangential and feed
forces as follows:
tan(βa −αr) = Ffc
Ftc
.
→
βa = αr + tan−1 Ffc
Ftc
.
(2.25)
The deformed chip slides on the rake face of the tool with the velocity of
Vc = rcV =
sin φc
cos(φc −αr)V.
(2.26)
The friction power spent on the tool chip contact face is
Pu = FuVc.
(2.27)
The total power consumed in cutting is the sum of energy spent in the shear
and friction zones as follows:
Ptc = Ps + Pu.
(2.28)
From the equilibrium of cutting forces and the velocities, the total power is also
equal to the cutting power drawn from the spindle motor as follows:
Ptc = FtcV.
(2.29)
The friction power increases the temperature of tool and chip. As can be
seen from Eq. (2.27), if the velocity is increased, the friction power and thus the
temperature of the tool increase. Excessive heat will cause an undesirable high
temperature in the tool, which leads to the softening of the tool material and
its accelerated wear and breakage. However, the production engineer desires
an increased cutting velocity to obtain a high metal removal rate (Eq. 2.12)
for productivity gains. The manufacturing researchers’ challenge has been to
decrease the cutting force Fu and move the heat toward the chip with better
tool geometry design, and to develop heat-resistant tool materials that can
preserve their hardness at elevated temperatures. Although the prediction of
the temperature distribution at the tool–chip interface is rather complex, the
following simpliﬁed analysis is still useful for metal cutting engineers.
The friction power consumed at the tool–chip interface (Eq. 2.27) is converted
into heat via
Pu = mccs	Tc,
(2.30)
where 	Tc is the average temperature rise in the chip. Boothroyd [30] and
Stephenson [104] assumed a constant sticking friction load with a constant
rectangular plastic zone at the tool–chip interface. The experimental temper-
ature measurement and assumed plastic deformation zone led to the following

12
MECHANICS OF METAL CUTTING
empirical temperature relationship [83]:
log
	Tm
	Tc

= 0.06 −0.195δ

RThc
lt
+ 0.5 log
RThc
lt

,
(2.31)
where 	Tm is the maximum temperature rise of the chip at the rake face–chip
interface, which has a total contact length of lt. The nondimensional number δ
is the ratio of the plastic layer thickness over the deformed chip thickness (hc)
on the tool rake face–chip interface. The average temperature rise (Tint) at the
rake face–chip interface is given by
Tint = Ts + λint	Tm,
(2.32)
where Ts is the average shear plane temperature and λint (i.e., ≈0.7) is an
empirical correction factor that accounts for temperature variations along the
chip–tool contact zone. For an accurate analysis, both the plastic layer thick-
ness (δhc) and lt must be measured with a microscope that has a large magni-
ﬁcation (such as a SEM). Our experiments indicated that the thickness of the
plastic layer on the rake face is observed to be between 5 and 10 percent of the
deformed chip thickness (δ/hc ≈0.05–0.1). The contact length can be estimated
approximately by assuming that the resultant cutting force acts in the middle
of the contact length and parallel to the stress-free chip boundary. From the
geometry of orthogonal cutting (Fig. 2.3), the chip–rake face contact length can
be approximately predicted as
lt = h sin(φc + βa −αr)
sin φc cos βa
.
(2.33)
The prediction of temperature distribution at the tool–chip interface is very
important in determining the maximum speed and feed rate that give the most
optimal material removal rate without excessive tool wear. The binding mate-
rials within the cutting tools may be weakened or diffused to the moving chip
material at their critical diffusion or melting temperature limits. The funda-
mental machinability study requires the identiﬁcation of a maximum cutting
speed and uncut chip values that correspond to the critical temperature limit
where the tool wears rapidly. By using the approximate solutions summarized
above, one can select a cutting speed and feed rate that would correspond to
a tool–chip interface temperature (Tint) that lies just below the diffusion and
melting limits of materials present in a speciﬁc cutting tool. The detailed and
fundamental scientiﬁc and experimental treatment of the cutting process is
covered in Oxley [83].
Tertiary Deformation Zone
The contact dimension and mechanics between the ﬂank face of the tool
and ﬁnished surface depend on the tool wear, preparation of the cutting edge,
and the friction characteristics of the tool and work materials. Let us assume
that the total friction force on the ﬂank face is Ff f, and the force normal to
the ﬂank is Ffn. If the pressure (σ f) on the ﬂank face is uniform, which is

2.2 MECHANICS OF ORTHOGONAL CUTTING
13
TABLE 2.1. Orthogonal
Cutting Database for
Titanium Alloy Ti6Al4V
τs = 613 (MPa)
βa = 19.1 + 0.29αr (deg)
rc = CohC1
Co = 1.755 −0.028αr
C1 = 0.331 −0.0082αr
Kte = 24 (N/mm)
Kfe = 43 (N/mm)
an oversimpliﬁed assumption, the normal force
on the ﬂank can be expressed by Ffn = σ fVB · b,
where VB is ﬂank contact length and b is width of
cut. An average friction (μ f) coefﬁcient between
the ﬂank face and the ﬁnished surface can be
deﬁned by μ f = Ff f/Ffn. The angle between the
ﬂank face and the ﬁnished surface is called clear-
ance or relief angle (Clp). The total contact forces
can be resolved into the tangential (Fte) and feed
(Ffe) directions as
Fte = Ffn sin(Clp) + Ff f cos(Clp)
(2.34)
Ffe = Ffn cos(Clp) + Ff f sin(Clp).
It should be noted that the measured cutting forces may include both the
forces due to shearing (Ftc, Ffc) and a tertiary deformation process “ploughing”
or “rubbing” (Fte, Ffe) at the ﬂank of the cutting edge. Thus the measured force
components are expressed as a superposition of shearing and edge forces as
follows:
Ft = Ftc + Fte,
Ff = Ffc + Ffe.
(2.35)
Hence, the cutting force expressions (Ft, Ff) presented up to Eq. (2.35) represent
only shearing forces (Ftc, Ffc). The edge forces (Fte, Ffe) must be subtracted from
the measured tangential and feed forces before applying the laws of orthogonal
cutting mechanics explained in this section.
It is difﬁcult to predict the shear angle and stress in the shear plane and
the average friction coefﬁcient on the rake face by using the standard material
properties obtained from tensile and friction tests. For accurate and realistic
modeling, such fundamental parameters are identiﬁed from orthogonal cutting
tests, where the deformed chip thickness and feed and tangential cutting forces
are measured by using cutting tools with a range of rake angles. The inﬂuence
of uncut chip thickness and cutting speed is also considered by conducting
experiments over a wide range of feeds and cutting speeds.
The relationships shown in Table 2.1 are identiﬁed from statistical analysis
of more than 180 orthogonal cutting tests conducted using tungsten carbide
(WC) cutting tools and Ti6Al4V titanium alloy work material. A set of turning
experiments resembling orthogonal cutting was conducted on titanium tubes
(Ti6Al4V) with tools of different rake angles at different feeds and cutting
speeds. The diameter of the tube was 100 mm, and the cutting speed range was
2.6 to 47 m/min. Cutting forces in the tangential (Ft) and feed (Ff) directions
were measured with a force dynamometer. Two sample orthogonal cutting test
results are shown in Figure 2.4. Small steps in cutting conditions were used to
increase the reliability of the measured forces.

14
MECHANICS OF METAL CUTTING
0
0.02
0.04
0.06
0.08
0.1
0.12
0
100
200
300
400
500
600
700
800
900
0
0.02
0.04
0.06
0.08
0.1
0.12
0
100
200
300
400
500
600
700
800
900
F [N]
t
F [N]
f
F [N]
t
F [N]
f
Cutting speed V= 4.61[m/min]
Cutting speed V= 47.3 [m/min]
Uncut chip thickness - h [mm]
Uncut chip thickness - h [mm]
Figure 2.4: Cutting forces measured during orthogonal tuning of
Ti6Al4V tubes.
The tests have been repeated a number of times at different feeds and cutting
speeds to ensure the statistical reliability of measurements. The edge forces
are obtained by extrapolating the measured forces to zero chip thickness. It
can be seen that the edge forces do not vary signiﬁcantly with cutting speeds
for the particular titanium alloy used here. The average edge force coefﬁcients
Kte and Kfe represent the rubbing forces per unit width. The chip compression
ratio (rc), shear stress τs, shear angle φc, and friction angle βa (Table 2.1) are
calculated from the measured “cutting” component of the forces and the cutting
ratio by applying the orthogonal cutting theory presented above.

2.3 MECHANISTIC MODELING OF CUTTING FORCES
15
2.3
MECHANISTIC MODELING OF CUTTING FORCES
Orthogonal cutting mechanics are not directly applicable to many practical
cutting tools with corner radius, side cutting edge angle, and chip breaking
grooves. It is more practical to carry out a few experiments to identify constant
parameters of the tool geometry–workpiece material pair to model existing
cutting tools. However, it must be noted that, for a tool design and analysis
of a particular metal cutting process, oblique (i.e., three-dimensional) cutting
mechanics and plasticity analysis are still necessary, and this is covered in
Section 2.5.
As an example of mechanistic modeling, let us take the case of orthogonal
cutting. We can extend the idea of model building to other cutting processes
that are not orthogonal. In the previous section, the shear force is formulated
as a function of measured feed and tangential cutting forces in the orthogonal
cutting. The shear force can be expressed as a function of shear stress and
shear angle (Eqs. 2.6 and 2.7) as follows:
Fs = τsb
h
sin φc
.
(2.36)
From Eqs. (2.3) and (2.36), the resultant cutting force (Fc) can be expressed in
terms of shear stress, friction and shear angles, width of cut, and feed rate as
follows:
Fc =
Fs
cos(φc + βa −αr) = τsbh
1
sin φc cos(φc + βa −αr).
(2.37)
The tangential and feed forces can be expressed in terms of resultant force as
follows:
Ftc = Fc cos(βa −αr),
Ffc = Fc sin(βa −αr).

(2.38)
Substituting Eq. (2.37) into Eq. (2.38), we can ﬁnd the measured main cutting
forces as functions of tool geometry and the cutting conditions (i.e., uncut chip
thickness (h) and width of cut (a)) and process- and material-dependent terms
(τs, βa, φc, αr) as follows:
Ftc = bh

τs
cos(βa −αr)
sin φc cos(φc + βa −αr)
	
.
(2.39)
Similarly the feed force is
Ffc = bh

τs
sin(βa −αr)
sin φc cos(φc + βa −αr)
	
.
(2.40)
In metal cutting literature the cutting parameter called speciﬁc cutting pres-
sure or tangential cutting force coefﬁcient (Ktc) is deﬁned as
Ktc [N/mm2]=τs
cos(βa−αr)
sin φc cos(φc+βa−αr)
(2.41)

16
MECHANICS OF METAL CUTTING
and the feed force constant (Kfc) as
Kfc [N/mm2] = τs
sin(βa −αr)
sin φc cos(φc + βa −αr).
(2.42)
It is also customary to use another convention for cutting constants, where
the feed force is assumed to be proportional to the tangential force with a ratio
of
Kfc = Ffc
Ftc
= tan(βa −αr),
(2.43)
where Kfc is dimensionless in this speciﬁc form. As can be seen from the deﬁ-
nition (Eq. 2.41), the speciﬁc cutting pressure is a function of the yield shear
stress of the workpiece (τs) material during cutting, the shear angle (φc), tool
geometry (i.e., rake angle αr), and the friction between the tool and the chip
(βa). In Eq. (2.41), only the tool geometry is known beforehand. The friction
angle depends on the lubrication used, the tool–chip contact area, and the
tool and workpiece materials. An accurate, analytical shear angle prediction
remains the subject of continuing research. Previous research results are still
insufﬁcient to be used in predicting the shear angles accurately. The shear
stress in the shear plane is also still in question with the present knowledge
of the cutting process. If the shear plane is assumed to be a thick zone, which
is more realistic than having a thin shear plane, there will be a work harden-
ing, and the shear stress will be larger than the workpiece material’s original
yield shear stress measured from pure torsion or tensile tests. The tempera-
ture variation in the shear and the friction zones will also affect the hardness of
the workpiece material; therefore, the shear stress in the primary deformation
zone will vary. The shear yield stress varies as a function of chip thickness, and
because of varying strain hardening of the material being machined, as well.
Hence, it is customary to deﬁne the cutting forces mechanistically as a function
of cutting conditions (i.e., b and h) and the cutting constants (Ktc) and (Kfc) as
follows:
Ft = Ktcbh + Kteb,
Ff = Kfcbh + Kfeb.

(2.44)
The cutting constants (Ktc, Kfc), and the edge coefﬁcients that do not con-
tribute to the shearing (Kte, Kfe), are directly calibrated from metal cutting
experiments for a tool–workpiece pair. Note that the edge coefﬁcients change
as the cutting tool wears or experiences chipping. It should be also noted that,
to take the inﬂuence of the chip thickness on the friction and shear angles, and
the yield shear stress, the cutting constants (Kt, Kf) are sometimes expressed
as nonlinear functions of uncut chip thickness as follows:
Ft = Ktbh, Kt = KTh−p,
Ff = Kfbh, Kf = KFh−q,

(2.45)
where p and q are cutting force constants determined from the cutting exper-
iments at different feed rates. Equation (2.45) represents basic nonlinearity

2.3 MECHANISTIC MODELING OF CUTTING FORCES
17
in the cutting force expressions. This form is used when the edge forces are
neglected in the mechanistic models. It must be noted that some work mate-
rials exhibit different yield stress and friction coefﬁcients at different speeds,
which lead to the speed dependence of cutting constants. The mechanistic cut-
ting constant equation (2.45) can be extended to include cutting speed as a
variable.
Example. The cutting conditions for turning an AISI-1045 steel workpiece
are set as follows: depth of cut b = 2.54 mm; feed rate c = 0.2 mm/rev; spin-
dle speed n = 350 rev/min; workpiece diameter = 100 mm; tool’s rake angle
αr = +5◦. Speciﬁc mass of the steel ρ =7,800 kg/m3; speciﬁc heat coefﬁcient of
steel cs = 470 Nm/kg◦C; thermal conductivity ct = 28.74 [W/m◦C]. The follow-
ing measurements are observed from the experiment: deformed chip thickness
hc = 0.44 mm, feed force Ff = 600 N, tangential force Ft =1,200 N. Assuming
that the turning is an orthogonal metal cutting process, the following values
are evaluated.
Resultant cutting force
F =

F2
t + F2
f = 1342.0 N
Chip ratio
rc =
h
hc = 0.4545
Shear angle
φc = tan−1
rc cos αr
1−rc sin αr=25◦
Friction angle
βa = αr + tan−1 Ff
Ft = 31.6◦
Friction coefﬁcient
μa = tan βa = 0.6144
Shearing force
Fs = F cos(φc + βa −αr) = 833.5 N
Shear plane area
As = b
h
sin φc = 1.2 mm2
Shearing stress
τs = Fs
As = 693.4 MPa
Normal force on the shear plane
Fn = F sin(φc + βa −αr) = 1051.7 N
Normal stress on the shear plane
σs = Fn
As = 876.43 MPa
Cutting speed
V = πDn = 110 m/min
Shearing velocity
Vs = V
cos αr
cos(φc−αr) = 116.6 m/min = 1.9436 m/s
Shearing power
Ps = FsVs = 1,620 W
Metal removal rate
mc = Qcρ = bhVρ = 7.2644 · 10−3 kg/s
Nondimensional thermal number
RT = ρcsVh
ct
= 45.78, RT tan φc = 21.34 > 10
Scale of heat conducted into work
λs = 0.3 −0.15 log(RT tan φc) = 0.1
Shear plane temperature
Ts = Tr + λh(1 −λs)
Ps
mccs = 20 + 299 = 319◦C
(λh ≈0.7)
Friction force
Fu = F sin βa = 703.2 N
Normal force
Fv = F cos βa = 1143 N
Chip velocity
Vc = rcV = 50 m/min = 0.8333 m/s
Friction power
Pu = FuVc = 586 W

18
MECHANICS OF METAL CUTTING
Chip contact length
lt = h sin(φc+βa−αr)
sin φc cos βa
= 0.435 mm
Total cutting power drawn
Pt = Pu + Ps = 2,200 W
Speciﬁc cutting pressure
Kt = Ft
bh = 2,362. N/mm2
Cutting force ratio
Kf = Ff
Ft = 0.5
2.4
THEORETICAL PREDICTION OF SHEAR ANGLE
The evaluation of shear angle, shear stress, and average friction coefﬁcients
from orthogonal metal cutting tests was summarized in the previous sections.
There have been many attempts at predicting the shear angle theoretically,
without relying on metal cutting experiments. Some of the most fundamental
models, which assume a perfect rigid plastic workpiece material without any
strain hardening, are brieﬂy presented in this section. These models assume
that the shear plane is thin, that the shear stress in the shear plane is equiv-
alent to the yield shear stress of the material, and that the average friction is
found from friction tests between the tool and workpiece materials, leaving only
the shear angle as unknown. There have been two fundamental approaches to
predict the shear angle as follows.
Maximum Shear Stress Principle
Krystof [64] proposed a shear angle relation based on the maximum shear
stress principle (i.e., shear occurs in the direction of maximum shear stress).
The resultant force makes an angle (φc + βa −αr) with the shear plane (see
Fig. 2.3), and the angle between the maximum shear stress and the principal
stress (i.e., the resultant force) must be π/4. Therefore, the following shear
angle relation is obtained:
φc = π
4 −(βa −αr).
(2.46)
Later, Lee and Shaffer [67] derived the same shear angle relationship from a
slip-line ﬁeld model.
Minimum Energy Principle
Merchant [74] proposed applying the minimum energy principle in predict-
ing the shear angle. By taking the partial derivative of the cutting power (Eqs.
2.29 and 2.38), one gets
dPtc
dφc
= d(VFtc)
dφc
= −Vτsbh cos(βa −αr) cos(2φc + βa −αr)
sin2 φc cos2(φc + βa −αr)
= 0,
or, with cos(2φc + βa −αr) = 0,
φc = π
4 −βa −αr
2
,
(2.47)

2.5 MECHANICS OF OBLIQUE CUTTING
19
h
b
y
z
i
Rake face
Cut surface
η
φn
αn
Workpiece
x
F
Vc
Vs
z
x
y
Normal plane
Rake face
Cut surface
Shear plane
Cutting edge
i
η
θi
αn
φi
φn
θn
V
Figure 2.5: The geometry of the oblique cutting process.
which predicts a larger shear angle
than the maximum shear stress
principle. Although the equations
above proposed by Krystof, Mer-
chant, and Lee and Shaffer do not
yield qualitatively accurate shear
angle predictions beause of over-
simpliﬁed assumptions, they pro-
vided an important relationship
among the shear angle (φc), the
rake angle (αr), which is the most
fundamental for tool design, and
the friction coefﬁcient between the
workpiece and cutting tool materi-
als (tan βa). The forces and power
consumed in cutting decrease with
increasing shear angle. The expres-
sion indicates that the friction coef-
ﬁcient between the tool and the chip
must be decreased by using lubri-
cants or materials with a smaller
friction coefﬁcient, and the rake
angle of the cutting tool must be
increased as much as possible pro-
vided the weakened cutting edge is
able to withstand the pressure and
friction load exerted by the chip at
the rake face contact zone.
2.5
MECHANICS
OF OBLIQUE CUTTING
The geometry of oblique cutting is
shown in Figure 2.5. The cutting
velocity (V) is perpendicular to the
cutting edge in orthogonal cutting,
whereas, in oblique cutting, it is inclined at an acute angle i to the plane normal
to the cutting edge.
2.5.1
Oblique Cutting Geometry
The difference in the geometry of two cutting mechanisms may be better
explained by revisiting the orthogonal cutting geometry shown in Figure 2.1.
A plane normal to the cutting edge, and inclined at an acute angle (i) with

20
MECHANICS OF METAL CUTTING
β
F
η
θi
θ + α
n        n
Rake
Normal plane Pn
face
Normal to
cutting edge
a
Fv
Fu
Vc
z
y
x
Rake face
α n
η
φn
φi
i
Cutting edge
Cut surface
Normal plane
Parallel to
Vs
V
Pn
shear plane
z
y
Shear plane
Normal
Cutting
x
45°
θ i
φi
φ n
θn
Fn
Fs
F
Pn
plane
edge
Figure 2.6: Force, velocity, and shear diagrams in oblique
cutting.
the cutting velocity V is deﬁned as
the normal plane or Pn. Because the
shear deformation is plane strain
without side spreading, the shear-
ing and chip motion are identical
on all the normal planes parallel to
the cutting speed V and perpendic-
ular to the cutting edge. Hence, the
velocities of cutting (V), shear (Vs),
and chip (Vc) are all perpendicular
to the cutting edge, and they lie in
the velocity plane (Pv) parallel to
or coincident with the normal plane
(Pn). The resultant cutting force Fc,
along with the other forces acting on
the shear and chip–rake face con-
tact zone, also lies on the same plane
Pn in orthogonal cutting. There is
no cutting force in the third direc-
tion (i.e., perpendicular to the nor-
mal plane), and the edge force at the
tertiary zone is assumed to be zero.
The cutting velocity has an oblique
or inclination angle i in oblique cut-
ting operations, and thus the direc-
tions of shear, friction, chip ﬂow, and
resultant cutting force vectors have
components in all three Cartesian
coordinates (x, y, z) (see Fig. 2.5). In
Figure 2.5, the x axis is perpendic-
ular to the cutting edge but lies on
the cut surface, y is aligned with the
cutting edge, and z is perpendicular
to the xy plane.
The forces exist in all three direc-
tions in oblique cutting. The impor-
tant planes in oblique cutting are the
shear plane, the rake face, the cut
surface xy, the normal plane xz or
Pn, and the velocity plane Pv. Most
analyses assume that the mechanics of oblique cutting in the normal plane are
equivalent to that of orthogonal cutting; hence, all velocity and force vectors
are projected on the normal plane. In Figure 2.6, the angle between the shear
and xy planes is called the normal shear angle φn. The shear velocity lies on
the shear plane but makes an oblique shear angle φi with the vector normal to

2.5 MECHANICS OF OBLIQUE CUTTING
21
the cutting edge on the normal plane. The sheared chip moves over the rake
face plane with a chip ﬂow angle η measured from a vector on the rake face but
normal to the cutting edge. Note that this normal vector also lies on the normal
plane Pn. The friction force between the chip and the rake face is collinear with
the direction of chip ﬂow. The angle between the z axis and normal vector on
the rake face is deﬁned as the normal rake angle αn. The friction force on the
rake face ( ⃗Fu) and normal force to the rake ( ⃗Fv) form the resultant cutting force
⃗Fc with a friction angle of βa (see Fig. 2.6). The resultant force vector (⃗Fc) has
an acute projection angle of θi with the normal plane Pn, which in turn has an
in-plane angle of θn + αn with the normal force Fv. Here, θn is the angle between
the x axis and the projection of ⃗Fc on Pn. The following geometric relations can
be derived from Figure 2.6 as follows:
Fu = Fc sin βa = F sin θi
sin η →sin θi = sin βa sin η,
(2.48)
Fu = Fv tan βa = Fv
tan(θn + αn)
cos η
→tan(θn + αn) = tan βa cos η.
(2.49)
The velocities of chip ( ⃗Vc), shear ( ⃗Vs), and cutting (⃗V) form the velocity plane
Pv as shown in Figure 2.6. Each velocity vector can be deﬁned by its Cartesian
components as follows:
⃗V = (V cos i,
V sin i,
0),
⃗Vc = (Vc cos η sin αn,
Vc sin η,
Vc cos η cos αn),
⃗Vs = (−Vs cos φi cos φn,
−Vs sin φi,
Vs cos φi sin φn).
By eliminating V, Vc, and Vs from the velocity relation,
⃗Vs = ⃗Vc −⃗V,
the following geometric relation between the shear and the chip ﬂow directions
can be obtained [73]:
tan η = tan i cos(φn −αn) −cos αn tan φi
sin φn
.
(2.50)
The above relationships deﬁne the geometry of the oblique cutting process.
2.5.2
Solution of Oblique Cutting Parameters
There are ﬁve unknown oblique cutting parameters that deﬁne the directions
of resultant force (θn, θi), shear velocity (φn, φi), and chip ﬂow (η). In addition
to the three equations (2.48–2.50) obtained from the oblique cutting geometry,
two additional expressions are required to solve for the ﬁve unknown angles.
There have been numerous proposed solutions based on the empirical chip ﬂow
direction [25, 102] and other empirical assumptions [70, 68, 35]. A theoretical
shear angle prediction approach has been proposed by Shamoto and Altintas
[95]; it parallels the maximum shear stress [64, 67] and the minimum energy
[74] principles used in two-dimensional orthogonal cutting mechanics. The

22
MECHANICS OF METAL CUTTING
focus here is on the prediction of shear direction based on the laws of mechanics,
not on the combined empirical predictions and geometric relations.
Maximum Shear Stress Principle
Krystof [64] applied the maximum shear stress criterion to predict the direc-
tion of shear angle in orthogonal cutting (i.e., φn = π/4 −β + αn). Later, Lee
and Shaffer [67] achieved the same orthogonal shear angle relationship using
the slip-line ﬁeld solution. Both assume that the shear occurs in the direction of
maximum shear stress (where the angle between the shear velocity and resul-
tant force directions is 45◦; see Fig. 2.6). The same principle can be applied to
oblique cutting, that is, the resultant force (⃗Fc) makes a 45◦acute angle with
the direction of shear as follows:
Fs = Fc(cos θi cos(θn + φn) cos φi
+ sin θi sin φi) = Fc cos(45◦).
Furthermore, the same principle dictates that the projection of ⃗Fc to the
shear plane coincides with the shear direction, that is, the component of the
resultant force in the direction normal to the shear on the shear plane must be
zero as follows:
Fc (cos θi cos(θn + φn) sin φi −sin θi cos φi) = 0;
otherwise, the shear stress in the shear direction is not the maximum on the
shear plane. The two expressions provide the necessary relationships between
the shear and resultant force directions as follows:
sin φi =
√
2 sin θi,
(2.51)
cos(φn + θn) = tan θi
tan φi
.
(2.52)
By solving the ﬁve equations (2.49) to (2.52), the ﬁve unknown angles (φn,
φi, θn, θi, η) that describe the mechanics of oblique cutting can be obtained.
However, direct analytical solutions of the equations are rather difﬁcult; hence,
they are solved by using an iterative numerical method. The numerical solution
is obtained according to the block diagram shown in Figure 2.7. Note that the
angles of friction (βa), rake (αn), and inclination (i) are known from the geometry
and material tests and are considered as inputs to the system. The iterative
solution is started by assuming an initial value for the chip ﬂow angle (i.e., η = i)
as proposed by Stabler [103]. The direction (θn, θi) of the resultant force vector
⃗Fc is obtained from Eqs. (2.48) and (2.49). Similarly, the shear direction angles
(φn, φi) can be evaluated from Eqs. (2.51) and (2.52), followed by evaluating the
new chip ﬂow angle ηe from the velocity equation (2.50). The true chip ﬂow
angle is searched iteratively by using the following interpolation algorithm as
follows:
η(k) = ν η(k −1) + (1 −ν) ηe,

2.5 MECHANICS OF OBLIQUE CUTTING
23
Force relation   
sin θi
sin β sinη
=
tan(     +      )
θn
αn
tanβ
=
cosη
Velocity relation   
sin
−
cos(     −      )
φn
αn
tan η =
cos
tani
αn tan φi
φn
Shear angle prediction
cos(     +     )
φn
θn
}
sin φi =
=
1. Maximum shear stress 
2. Minimum energy
sin θi
2
tan θi
tan φi
∂U′
0
∂φn =
∂U′
0
∂φi
=
η
θn θi
,
φn φi
,
β
i
αn
⎬
⎫
⎭
Geometric relations
Input angles
⎭
⎪
⎪
⎬
⎪
⎭
⎪
⎪
⎪
⎪
⎪
a
a
a
Figure 2.7: Shear angle solution procedure.
where k is the iteration counter, and the interpolation ratio ν is selected within
the range of 0 < ν < 1. The ratio ν is dynamically updated for the rapid con-
vergence, that is, decreased if η(k) oscillates and increased if its value moves
in the same direction. The iteration is continued until the chip ﬂow angle
converges within 10−12 percent. When the three-dimensional oblique cutting
model introduced above is applied to two-dimensional orthogonal cutting, it
yields the same shear angle expression proposed by Krystof [64] and by Lee
and Shaffer [67] who used the maximum shear stress principle on orthogonal
cutting (i.e., i = θi = φi = 0 :→: φn = π/4 −(βa −αn)). Note that with identity
(2.51), Eq. (2.52) reduces to cos(φn + θn) = 1/
√
2 in orthogonal cutting.
Minimum Energy Principle
Merchant [74] proposed a shear angle prediction theory by applying the min-
imum energy principle to orthogonal cutting. The same principle is extended
to oblique cutting here. From the geometry, the shear force is expressed as a
projection of ⃗Fc in the direction of shear (Fig. 2.6) as follows:
Fs = Fc[cos(θn + φn) cos θi cos φi + sin θi sin φi],
or as a product of shear stress and shear plane area (Fig. 2.5) as follows:
Fs = τsAs = τs

b
cos i

h
sin φn

,
where As, b, and h are the shear area, the width of cut, and the depth of cut
(uncut chip thickness), respectively. By equating the two shear force expres-
sions, the resultant force is derived as follows:
Fc =
τsbh
[cos(θn + φn) cos θi cos φi + sin θi sin φi] cos i sin φn
.
(2.53)

24
MECHANICS OF METAL CUTTING
The cutting power (Ptc) in oblique cutting can be expressed as a function of Fc
(see Fig. 2.6) as follows:
Ptc = FtcV = Fc(cos θi cos θn cos i + sin θi sin i)V,
and the nondimensional power (P′
t) is obtained by substituting Eq. (2.53) for Fc.
This gives
P′
t =
Ptc
Vτsbh =
cos θn + tan θi tan i
[cos(θn + φn) cos φi + tan θi sin φi] sin φn
,
(2.54)
where the term Vτsbh is constant. The minimum energy principle requires that
the cutting power must be minimum for a unique shear angle solution. Because
the direction of shear is characterized by the shear angles φn and φi, we have
∂P′
t/∂φn = 0,
∂P′
t/∂φi = 0,
(2.55)
which provides two more equations in addition to the three geometric rela-
tions given by Eqs. (2.48), (2.49), and (2.50). Hence, the ﬁve unknown angles
(φn, φi, θn, θi, η), that describe the mechanics of oblique cutting can be obtained.
However, because ﬁnding an analytical solution of ﬁve equations is rather dif-
ﬁcult, the solution is obtained by using a numerical iteration technique. The
algorithm starts with an initial value of chip ﬂow angle η = i (Stabler [103]), fol-
lowed by the evaluation of the remaining angles from Eqs. (2.48), (2.49), (2.51),
and (2.52). After calculating the initial values of θn, θi, φn, and φi, the cutting
power (P′
t) is obtained from Eq. (2.54). By changing the shear angles slightly
(i.e., φn + 	φn and φi + 	φi), the steepest descent direction (	P′
t/	φn, 	P′
t/	φi)
is evaluated. The shear angles are changed by a step ζ in the steepest descent
direction so that the cutting energy approaches the minimum value as follows:

φn(k)
φi(k)

=

φn(k −1)
φi(k −1)

−ζ

	P′
t/	φn
	P′
t/	φi

.
The numerical iteration is continued in accordance with Figure 2.7 until
the nondimensional cutting power (P′
t) converges to a minimum value. When
the three-dimensional oblique cutting model introduced above is applied to
two-dimensional orthogonal cutting, it yields the same shear angle expression
proposed by Merchant [74] (i.e., i = θi = φi = 0 :→: φn = π/4 −(βa −αn)/2).
Empirical Approach
There are a number of empirical models, and we introduce the one proposed
by Armarego and Whitﬁeld [28] here. In their model, two assumptions are used
on the shear direction and chip length ratio: (1) the shear velocity is collinear
with shear force, and (2) the chip length ratio in oblique cutting is the same
as that in orthogonal cutting. The former assumption made by Stabler [103]
is considered as one of the maximum shear stress criteria (Eq. 2.52), and by

2.5 MECHANICS OF OBLIQUE CUTTING
25
combining the three geometric equations derived in the previous section, it
yields
tan(φn + βn) =
cos αn tan i
tan η −sin αn tan i,
(2.56)
where βn = θn + αn. Thus, it is given by the following equation (see Eq. (2.49)):
tan βn = tan βa cos η.
(2.57)
Armarego and Whitﬁeld [28] made the latter assumption from their experi-
ments, so that the normal shear angle φn can be obtained from the following
equation of chip geometry:
tan(φn) =
rc(cos η/ cos i) cos αn
1 −rc(cos η/ cos i) sin αn
.
(2.58)
By solving these three equations numerically, the three unknown angles η,
φn, and βn are derived, or numerical iteration can be avoided if Stabler’s [103]
empirical chip ﬂow rule (i.e., η = i) is applied to Eq. (2.58).
2.5.3
Prediction of Cutting Forces
The cutting force components are derived as projections of the resultant
cutting force Fc that is found after subtracting the edge component (Fe) from
the measured resultant force (F). The cutting force components are expressed
as a function of shear yield stress τs, resultant force direction (θn, θi), oblique
angle i, and obique shear angles (φi, φn) as given in Eq. (2.53) for Fc. The force
components in the directions of cutting speed (Ftc), the thrust (Ffc), and the
normal (Frc) are given by the following equations (see Figs. 2.5 and 2.6):
Ftc = Fc(cos θi cos θn cos i + sin θi sin i)
=
τsbh(cos θn + tan θi tan i)
[cos(θn + φn) cos φi + tan θi sin φi] sin φn
,
Ffc = Fc cos θi sin θn
=
τsbh sin θn
[cos(θn + φn) cos φi + tan θi sin φi] cos i sin φn
,
Frc = Fc(sin θi cos i −cos θi cos θn sin i)
=
τsbh(tan θi −cos θn tan i)
[cos(θn + φn) cos φi + tan θi sin φi] sin φn
.
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
(2.59)
It is convenient to express the cutting forces in the following form:
Ft = Ktcbh + Kteb,
Ff = Kfcbh + Kfeb,
Fr = Krcbh + Kreb,
⎫
⎬
⎭
(2.60)

26
MECHANICS OF METAL CUTTING
where the cutting constants contributed by the shear action correspond to
Ktc =
τs(cos θn + tan θi tan i)
[cos(θn + φn) cos φi + tan θi sin φi] sin φn
,
Kfc =
τs sin θn
[cos(θn + φn) cos φi + tan θi sin φi] cos i sin φn
,
Krc =
τs(tan θi −cos θn tan i)
[cos(θn + φn) cos φi + tan θi sin φi] sin φn
.
⎫
⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎭
(2.61)
If Armarego’s classical oblique model is used, the force expressions can be trans-
formed into the following by using the geometric relations explained above:
Ftc = bh ·
⎡
⎣
τs
sin φn
cos(βn −αn) + tan i tan η sin βn

cos2(φn + βn −αn) + tan2 η sin2 βn
⎤
⎦,
Ffc = bh ·
⎡
⎣
τs
sin φn cos i
sin(βn −αn)

cos2(φn + βn −αn) + tan2 η sin2 βn
⎤
⎦,
Frc = bh ·
⎡
⎣
τs
sin φn
cos(βn −αn) tan i −tan η sin βn

cos2(φn + βn −αn) + tan2 η sin2 βn
⎤
⎦.
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
(2.62)
Hence, the corresponding cutting constants are
Ktc =
τs
sin φn
cos(βn −αn) + tan i tan η sin βn

cos2(φn + βn −αn) + tan2 η sin2 βn
,
Kfc =
τs
sin φn cos i
sin(βn −αn)

cos2(φn + βn −αn) + tan2 η sin2 βn
,
Krc =
τs
sin φn
cos(βn −αn) tan i −tan η sin βn

cos2(φn + βn −αn) + tan2 η sin2 βn
.
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
(2.63)
The following practical approach can be used in predicting the oblique cut-
ting forces from the orthogonal cutting database [35]:
r Evaluate the shear angle (φc), average friction angle (βa), and shear yield
stress (τs) from orthogonal cutting tests (i.e., as given in Table 2.1).
r Assume that the orthogonal shear angle is equal to the normal shear angle
in oblique cutting (φc ≡φn); the normal rake angle is equal to the rake angle
in orthogonal cutting (αr ≡αn); the chip ﬂow angle is equal to the oblique
angle (η ≡i) by adopting Stabler’s chip ﬂow rule [103]; the friction coefﬁcient
(βa) and shear stress (τs) are the same in both orthogonal and oblique cutting
operations for a given speed, chip load, and tool–work material pair.
r Predict the cutting forces using the oblique cutting constants given in
Eq. (2.63).

2.6 MECHANICS OF TURNING PROCESSES
27
Spindle drive
gear box
Spindle speed
selection levers 
Spindle
Feed drive
gear box
Tail stock
Tool post
Cross slide
Carriage
Feed screw
Figure 2.8: Conventional lathe.
Many practical oblique cutting operations, such as turning, drilling, and
milling, can be evaluated by using the oblique cutting mechanics procedure
outlined above.
2.6
MECHANICS OF TURNING PROCESSES
A typical conventional lathe is shown in Figure 2.8. The rotational workpiece
is held in a chuck, which is bolted to the spindle, and a single-point cutting tool
Figure 2.9: A proﬁle CNC turning operation with a carbide
tool. Source: Mitsubishi Materials Corp.
is attached to a tool post. A turn-
ing operation is used to machine
cylindrical parts (see Fig. 2.9).
When the workpiece is long and
heavy, its two ends are held by
the chuck and the center of the
tail stock, respectively. The tool
post is held on the top of a car-
riage, which has motions along the
axis between the spindle and tail
stock centers and is perpendicular
to this axis. Conventional lathes
have a single motor with constant
speed. The speed is transmitted to
spindle and feed drive gear boxes
via belts. The speed is further
reduced using gear combinations
within the feed and spindle drive

28
MECHANICS OF METAL CUTTING
Figure 2.10: A CNC turning center. Source: Hitachi Seiki Co., Ltd.
boxes, which have shift arms with speed labels. However, in CNC lathes the
spindle and feed speeds are directly programmed within NC programs, because
they have computer-controlled stepless drives with a one or zero gear reduc-
tion level. A CNC turning center with a turret carrying multiple cutting tools
is shown in Figure 2.10. The turret, which holds the tool, can be moved along
or perpendicular to the spindle axis or both in CNC lathes.
If the tool moves along the main axis, the tool reduces the diameter of
the cylindrical workpiece. If it moves perpendicular to the main axis, the tool
removes material from the ﬂat face of the workpiece, which is called a fac-
ing operation. The combination of cylindrical turning and facing can be used
for chamfering and parting operations. The lathes allow synchronized linear
motion of the carriage feed and the rotational motion of the spindle via gear
boxes. The synchronized motion is used for threading operations.
The diagram of a typical cylindrical turning process is shown in Figure 2.11.
The cutting tool moves parallel to the spindle and removes a skin from the
blank, hence, reducing the diameter of the shaft. A standard turning tool geom-
etry is shown in Figure 2.12. The important geometric parameters on the tool
are tool nose radius, side rake, back rake, and side cutting edge angles. The
chip lands and slides on the rake face of the tool. Side rake angle is the incli-
nation of the rake face toward the cutting edge, whereas the back rake angle
indicates the inclination toward the tip of the tool that is perpendicular to the
surface of the workpiece in turning. In orthogonal cutting, there is zero back
rake, and only side rake is considered. The tools are called positive, neutral (i.e.,
zero rake angle), or negative depending on the orientation of the rake angles.

2.6 MECHANICS OF TURNING PROCESSES
29
Figure 2.11: Geometry of turning process.
Positive rake angle produces higher shear angles; therefore, it helps to reduce
the cutting forces. It also leaves a better surface ﬁnish because it assists the
chip to ﬂow away from the workpiece. Negative tools produce higher force than
the positive tools for the same cutting conditions, because the negative rake
angles decrease the shear angle. However, in interrupted cutting, where the
tool periodically enters into and exits from the workpiece, the negative tools
provide a greater shock resistance than positive tools because the initial mate-
rial contact with the tool occurs away from the weak cutting edge. Cutting
tool inserts made of carbide, ceramic, diamond, or cubic boron nitride (CBN)
are usually clamped on tool holders that have a geometry like the one shown
in Figure 2.12. Only one side of the positive tools can be used, because of the
clearance angle at the edges. The negative carbide inserts have zero clearance
angles; therefore, both sides of the insert can be used, which lowers tool costs.
For example, eight edges of a negative but only four edges of a square positive
insert can be used in machining. The tools have a small radius at their noses
to minimize sharp feed marks on the ﬁnished surface. A large tool nose radius
is not advisable because it makes the tool susceptible to self-excited vibrations,
or chatter, in machining.
There are various deﬁnitions of tool angles. However, the following tool angle
conversions based on back rake–side rake [25] are the most commonly accepted
for analyzing the mechanics of oblique cutting:
tan αo = tan αf cos ψr + tan αp sin ψr,
tan i
= tan αp cos ψr + tan αf sin ψr,
tan αn = tan αo cos i,
⎫
⎬
⎭
(2.64)

30
MECHANICS OF METAL CUTTING
Side Relief
Angle
End Relief
Angle
End Cutting
Edge Angle
Side Rake
Angle
Back Rake
Angle
Side Cutting
Edge Angle
Tool Point or
Nose Radius
Top
view
Side
view
End
view
r
,
f
r
p
Cl
r
p
Clf
r
Clp
Clf
f
p
r
,
r
Figure 2.12: Geometry of turning tool.
where i, αo, and αn are the equivalent oblique, orthogonal, and normal rake
angles, respectively. The equivalent oblique (i) and normal rake (αn) angles
must be evaluated for oblique cutting tools before using the cutting constants
given in Eq. (2.63) for predicting the cutting forces. For simplicity, the chip

2.6 MECHANICS OF TURNING PROCESSES
31
Z
X
Y
FX
FZ
FY
      XZ VIEW 
R
Feed directon f
Workpiece
Turning tool
R
XZ View
O
O’
O"
A
T
γ
C
ΙΙ
Ι
dθ
θo
B
r
α n
α p
d
Feed 
c
c
2
c
a
θ
dFr
dFf
dFt
a-r
D
E
F
Sr
Figure 2.13: Mechanics of turning with bull-nosed inserts.
ﬂow angle can be assumed to be equal to the oblique angle as suggested by
Stabler [103].
Prediction of Cutting Forces in Turning
The cutting forces in turning can be predicted by transforming the orthog-
onal cutting parameters to an oblique turning geometry by using the angle
transformations given in Eq. (2.64) and the oblique cutting constants given
in Eq. (2.63). The process can be explained by taking a turning tool with a
corner radius r, side rake angle of αf, and back rake angle of αp, as shown in
Figure 2.13. The diameter of the workpiece is d, and the radial depth of cut is
a, which is larger than the tool nose radius (r). The feed rate is c, which corre-
sponds to the linear travel of the cutting tool in one revolution of the spindle.
The chip has a uniform thickness in region I where the radial depth is less
than the radius (r). However, the chip has a varying thickness in region II
owing to the corner radius of the tool. The cutting forces can be predicted by
applying the classical oblique cutting transformation proposed by Armarego

32
MECHANICS OF METAL CUTTING
([24, 27]) as explained in Section 2.5. The transformation is applied separately
to each region.
Region I. The radial depth is less than the corner radius of the tool (i.e.,
0 < y < r). The chip thickness is constant and equal to the feed rate (i.e., h = c).
The cutting forces in x, y, z coordinates are parallel to the oblique cutting forces
Ft, Fr, Ff respectively, and they are given as follows:
FxI = FtI = Ktcc(a −r) + Kte(a −r),
FyI = FrI = Krcc(a −r) + Kre(a −r),
FzI = FfI = Kfcc(a −r) + Kfe(a −r).
⎫
⎬
⎭
(2.65)
The cutting constants (Ktc, Krc, Kfc) are evaluated from Eqs. (2.63) by using
the orthogonal cutting parameters (φn, τs, βa) obtained from orthogonal cutting
tests. However, because the tool has both side and back rake angles, the equiv-
alent oblique angle (i) and normal rake angle (αn) must be evaluated from
Eq. (2.64). The normal friction angle is evaluated from
βn = tan−1(tan βa cos i).
(2.66)
Note that the side cutting angle (or approach angle) is zero for this particular
tool in region I. The edge force Kre can be taken equal to zero because it does
not theoretically exist in the orthogonal cutting test measurements.
Region II. In this region the chip thickness reduces continuously, and the
oblique cutting forces change their directions around the curved chip segment.
The most accurate evaluation can be handled by dividing the chip into small
differential elements with an angular increment dθ. The center of the chip’s
outer surface curvature is O, and the center of its inner curvature is O′′. The
tool nose radius is r, and the total angular contact is ∠COB = θ0. The area of
differential (dA) chip can be approximated by
dA ≈ATdS,
(2.67)
where dS = rdθ, AT = AO −TO, AO = r, OO′′ = c, TO′′ = r, and
TO =

c2 + r2 −2cr cos γ .
(2.68)
Using the law of sines,
OO′′
sin[π −(π −θ + γ )] =
TO′′
sin(π −θ),
the following relationship is obtained:
γ = θ −sin−1
c
r sin(π −θ)
	
.
(2.69)
The instantaneous chip thickness at the position deﬁned by angle θ is given by
AT = h(θ) = r −

c2 + r2 −2cr cos γ ,
(2.70)
and the corresponding differential chip area is
dAi = h(θ)rdθ.
(2.71)

2.6 MECHANICS OF TURNING PROCESSES
33
The tangential (dFt,II), radial (dFr,II), and feed (Ff,II) forces acting on the differ-
ential chip element are given by the following:
dFt,II = Ktc(θ)dA + KtedS = [Ktc(θ)h(θ) + Kte]rdθ,
dFr,II = Krc(θ)dA + KredS = [Krc(θ)h(θ) + Kre]rdθ,
dFf,II = Kfc(θ)dA + KfedS = [Kfc(θ)h(θ) + Kfe]rdθ.
⎫
⎬
⎭
(2.72)
Because the oblique geometry varies as a function of approach angle θ, the
cutting constants at each differential element must be evaluated for an accu-
rate prediction of the cutting forces. Substituting the back rake, side rake,
and instantaneous approach angle (ψr = θ) in Eq. (2.64), we can identify the
equivalent oblique angle (i) and normal rake angle αn, which are then used in
evaluating the oblique cutting constants given in Eq. (2.63). The edge forces
are considered to be the same as those found from orthogonal cutting tests, and
the radial component of the edge force is assumed to be zero (i.e., Kre = 0). The
differential oblique cutting forces can be resolved in the x, y, z directions of the
lathe, in which the forces can be measured experimentally using a dynamome-
ter as follows:
dFx,II = dFt,II,
dFy,II = −dFf,II sin θ + dFr,II cos θ,
dFz,II = dFf,II cos θ + dFr,II sin θ.
⎫
⎬
⎭
(2.73)
Integrating the differential cutting forces along the curved chip segment
gives the total cutting forces contributed by the chip in region II as follows:
Fq,II =
 θ0
0
dFq,II,
q = x, y, z,
(2.74)
where the approach angle limit is θ0 = π −cos−1(c/2r). Because the cutting con-
stants and chip thickness are functions of the instantaneous approach angle θ,
the continuous integration in Eq. (2.74) is not trivial. It is much more practical
to use constant average cutting coefﬁcients by assuming a mean approach angle
of π/2 in Eqs. (2.64) and (2.63) or by digitally integrating the forces along the
curved chip segment. The curved chip is divided into K = θ0/	θ small chip seg-
ments, and the cutting forces contributed by each small segment are evaluated
and summed numerically:
Fq,II =
K

k=0
dFq,II,
q = x, y, z,
(2.75)
where the instantaneous approach angle for each segment is θk = k	θ.
The total cutting forces acting on the tool are evaluated by summing the
forces generated in regions I and II. Thus,
Fq = Fq,I + Fq,II,
q = x, y, z.
(2.76)
The torque (T) and power (P) predicted by
T = Fx
d −a
2

,
P = FxV,
(2.77)

34
MECHANICS OF METAL CUTTING
ribbon
chips
1
tangled
chips
corkscrew
chips
helical
chips
long
tubular
chips
short
tubular
chips
spiral
tubular
chips
spiral
chips
long
comma
chips
short
comma
chips
acceptable
good
unfavourable
2
3
4
5
6
7
8
9
10
Figure 2.14: Classiﬁcation of chip forms. Source: Kluft et al. CIRP [60].
where d is the diameter of the shaft in [m] and V is the cutting speed in
[m/s]. The units of torque and power are [Nm] and [W], respectively. It is also
important to select a suitable feed rate that does not leave larger feed marks
on the surface than speciﬁed by the tolerance of the part. The amplitude of the
feed mark (Rs) can be evaluated from Figure 2.13 as
Rs = r

1 −cos

sin−1  c
2r

.
(2.78)
Similar analysis can be applied to other turning tools by dividing their cut-
ting edges into small oblique elements as evaluated here. The prediction of
cutting forces, torque, power, and cutting constants are important in sizing
machine tools for a particular operation or for selecting cutting speeds, feeds,
and depth of cuts to avoid tool breakage and chatter vibrations. It is equally
important to predict the direction of the chip ﬂow and the type of chip produced
by the particular tool geometry used at certain cutting conditions [54]. The
chips produced in continuous turning processes may be of a ribbon, tangled, or
corkscrew type, which is unfavorable (see Fig. 2.14 [60]). They can rub the ﬁn-
ished workpiece or entangle around the tool, and it is hard to remove them from
the machine tool with mechanized chip conveyors. Such unfavorable chips also
cause danger for the operator’s safety; productivity of the machining operation
suffers from the scratched ﬁnished workpiece surfaces; and the chips can cause
tool breakage because they can become entangled around the cutting edge. The
basic factors that inﬂuence the chip form are the workpiece material, the tool
geometry, the cutting ﬂuid, the dynamic properties of the machine tool, and the
cutting conditions. Chip breakers, which are clamped on the rake face of the
tool or formed on inserts, are used to break long chips. Chip breakers disturb
the free-ﬂow direction of the chip, and they force the chip to curl toward the

2.7 MECHANICS OF MILLING PROCESSES
35
Figure 2.15: A vertical CNC milling machine. Source: Hitachi Seiki Co., Ltd.
workpiece or tool, thus creating tensile stresses in the chip that lead to its
breakage.
2.7
MECHANICS OF MILLING PROCESSES
A sample vertical CNC machining center, which is capable of milling, drilling,
and tapping, is shown in Figure 2.15. The milling operation is an intermittent
cutting process using a cutter with one or more teeth. A milling cutter is held
in a rotating spindle, while the workpiece clamped on the table is linearly
moved toward the cutter. A sample face milling operation and various inserted
milling cutters are shown in Figure 2.16. Each milling tooth therefore traces a
trochoidal path [71, 72], producing varying but periodic chip thickness at each
tooth passing interval. Various milling operations are shown in Figure 2.17.
Depending on the workpiece geometry, different milling cutters and machines
are used. In this section, the mechanics of the milling process are presented
for simple face milling operations. Mechanics of other milling operations are
modeled by geometrically extending the mechanics of face milling.
The standard tool geometry in milling is shown in Figure 2.18. Double-
negative tools are shock resistant in heavy-duty face milling operations. Rigid
and high-power milling machines are suitable for heavy machining with nega-
tive cutters. For accurate and light milling operations, double-positive milling

36
MECHANICS OF METAL CUTTING
Figure 2.16: A face milling operation and various inserted milling cutters. Source: Mitsubishi
Materials.
Slot milling 
Shoulder milling
Plunge milling
Ramp milling
Ball end milling
 Face milling
Figure 2.17: Various milling operations. Source: Mitsubishi Materials.

2.7 MECHANICS OF MILLING PROCESSES
37
Axial rake angle (positive)
Effective diameter side view
Effective diameter side view
Axial relief angle
Cutting edge
angle
Radial relief
angle
Positive radial rake angle
Axial relief angle
Axial rake angle (negative)
Bevel
Positive radial rake angle
(negative)
Peripheral relief
angle
Bottom view
(a)
Bottom view
(b)
Negative
radial
rake
Positive axial rake
Rake
(c)
Figure 2.18: Standard face milling cutter geometry.
cutters are ideal. Negative – positive tools produce a good surface ﬁnish and
are efﬁcient in removing the chips from the insert pockets. There are three
types of milling operations used in practice:
r face milling operations, in which entry and exit angles of the milling cutter
relative to the workpiece are nonzero;
r up-milling operations, in which the entry angle is zero and the exit angle is
nonzero; and
r down-milling operations, in which the entry angle is not zero and the exit
angle is zero.
Both up- and down-milling operations are called peripheral or end milling
operations. The geometry of chip formation in milling is shown in Figure 2.19.
Unlike in turning processes, in milling the instantaneous chip thickness (h)

38
MECHANICS OF METAL CUTTING
X
Y
n
φ
Feed
Workpiece
Fj-1
Fri
Fti
X
Y
Fx( φ )
Fy ( φ )
c
φst
φ
φex
f
n
b
Up milling
X
Y
Workpiece
Feed
φ
n
chip formation 
in milling
chip load
n
Fj                 
Fj-1
Fj
Down milling
f
Figure 2.19: Geometry of milling process.
varies periodically as a function of time-varying immersion. The chip thickness
variation can be approximated as
h(φ) = c sin φ,
(2.79)
where c is the feed rate (mm/rev-tooth) and φ is the instantaneous angle of
immersion. First, the helix angle is considered to be zero, which is the case in
face milling operations with inserted cutters. Tangential (Ft(φ)), radial (Fr(φ)),
and axial (Fa(φ)) cutting forces are expressed as a function of varying uncut
chip area (ah(φ)) and edge contact length (a) as follows:
Ft(φ) = Ktcah(φ) + Ktea,
Fr(φ) = Krcah(φ) + Krea,
Fa(φ) = Kacah(φ) + Kaea,
⎫
⎬
⎭
(2.80)
where Ktc, Krc, and Kac are the cutting force coefﬁcients contributed by the
shearing action in tangential, radial, and axial directions, respectively, and
Kte, Kre, and Kae are the edge constants. If we assume zero nose radius and
zero approach angle on the inserts, the axial components of the cutting forces
become zero (Fa = 0). Otherwise, their inﬂuence must be modeled as pre-
sented in the section on turning (Section 2.6). The cutting coefﬁcients are
assumed to be constant for a tool–work material pair, and they can be evalu-
ated either mechanistically from milling tests or by using the classical oblique
cutting transformations given by Eqs. (2.64) and (2.63). They are sometimes
expressed as a nonlinear function (Eq. 2.45) of the instantaneous or average
chip thickness ha [46]. The average chip thickness per revolution is calculated

2.7 MECHANICS OF MILLING PROCESSES
39
from the swept zone as
ha =
 φex
φst c sin φ dφ
φex −φst
= −ccos φex −cos φst
φex −φst
.
(2.81)
The instantaneous cutting torque (Tc) on the spindle is where D is the diam-
eter of the milling cutter. Horizontal (i.e., feed), normal, and axial components
of the cutting forces acting on the cutter are derived from the equilibrium
diagram shown in Figure 2.19 as follows:
Fx(φ) = −Ft cos φ −Fr sin φ,
Fy(φ) = +Ft sin φ −Fr cos φ,
Fz(φ) = +Fa.
⎫
⎬
⎭
(2.82)
It must be noted that the cutting forces are produced only when the cutting
tool is in the cutting zone, that is,
Fx(φ), Fy(φ), Fz(φ) > 0 when φst ≤φ ≤φex,
where φst and φex are the cutter entry and exit angles, respectively. Another
important point is that there may be more than one tooth cutting simultane-
ously depending on the number of teeth on the cutter and the radial width of
cut. The tooth spacing angle φp (or cutter pitch angle) is given as
φp = 2π
N ,
where N is the number of teeth on the cutter. There will be more than one tooth
cutting simultaneously when the swept angle (φs = φex −φst) is larger than
the cutter pitch angle (i.e., φs > φp). When more than one tooth cuts simulta-
neously, the contribution of each tooth to total feed and normal forces must be
considered. It must also be noted that, because each tooth will be away from
its neighboring tooth by the amount of pitch angle, the uncut chip thickness
removed by each cutting edge will be different at an instantaneous position of
the cutter. We can formulate the total feed, normal, and axial forces as
Fx =
N

j=1
Fxj(φ j),
Fy =
N

j=1
Fyj(φ j),
Fz =
N

j=1
Fzj(φ j),
(2.83)
whenever φst ≤φ j ≤φex. Each term in the summation block represents the
contribution of each tooth to the cutting forces. If the tooth j is out of the
immersion zone, it contributes zero to total forces. The instantaneous resultant
cutting force on the cutter (or workpiece) is given as
F =

F2
x + F2
y + F2
z .
(2.84)
Instantaneous cutting torque on the spindle is
Tc = D
2 ·
N

j=1
Ftj(φ j) −→φst ≤φ j ≤φex,
(2.85)

40
MECHANICS OF METAL CUTTING
0
50
100
150
200
250
300
350
0
200
400
Resultant Force [N]
0
50
100
150
200
250
300
350
0
200
400
Resultant Force [N]
Spindle Rotation  [deg]
0
50
100
150
200
250
300
350
0
200
400
Resultant Force [N]
(a)
(b)
(c)
Figure 2.20: Simulated resultant cutting forces. Face milling cutter: N = 4 teeth, a = 2
mm, c = 0.1 mm/rev/ tooth. Ktc = 1800 N/mm2, Krc = 540 N/mm2. (a) Half-immersion
up-milling, (b) half-immersion down-milling, (c) center face milling with φst = 75 deg,
φex = 105 deg.
where D is the diameter of the cutter. The cutting power (Pt) drawn from the
spindle motor is
Pt = V ·
N

j=1
Ftj(φ j) −→φst ≤φ j ≤φex,
(2.86)
where V = πDn is the cutting speed and n is the spindle speed. For a given
set of cutting conditions, the engineer may be required to predict the max-
imum cutting power, torque, and cutting forces required from the machine
tool spindle and feed drives. The cutting forces, torque, and power are uni-
formly periodic at tooth passing frequency. Periodic cutting forces dynamically
load and unload the machine tool structure, workpiece, and the cutter at each
tooth period. Typical resultant cutting forces for three types of milling opera-
tions are shown in Figure 2.20. Half-immersion (i.e., b = D/2) up- and down-
milling forces have opposite trends. The chip load starts with zero and grad-
ually increases to maximum at the exit in up-milling; hence, forces have the
same trend. However, the tooth experiences maximum chip load during entry
followed by a gradual decrease of the chip load and, hence, the cutting forces.
Manufacturing engineers are advised to use up-milling operations for heavy
metal removal rates where the shock loading is reduced. For light ﬁnish cuts,

2.7 MECHANICS OF MILLING PROCESSES
41
Figure 2.21: Geometry of helical end milling.
down-milling is preferred to obtain
a smooth surface ﬁnish. Center face
milling has severe interrupted, pulse
loading of the machine tool, which
is not advised for light machines
and positive tools. Pulse loading
of the machine may resonate vari-
ous structural vibration modes and
cause transient vibrations during
each entry and exit.
2.7.1
Mechanics of Helical
End Mills
Periodic
loading
causes
cyclic
mechanical and thermal stresses on
the tool, which leads to a shorter tool
life. Helical end mills are used to
dampen the sharp variations in the
oscillatory components of the milling
forces, and they are used when the
depth of cut is large, but the width
of cut is small. Their primary func-
tion is peripheral milling, where the
walls of parts are the target ﬁnished
surface. A typical end milling cut-
ter with helical ﬂutes is shown in
Figure 2.21. The helix on the cutter
provides a gradually increasing chip
load along the helical ﬂutes of the
end mill [59]. If the helix angle on
the cutter is β, a point on the axis
of the cutting edge will be lagging
behind the end point of the tool. The
lag angle (ψ) at the axial depth of cut
(z) is found as (Fig. 2.21)
tan β = Dψ
2z
and
ψ = 2z tan β
D
.
(2.87)
When the bottom point of a reference ﬂute of the end mill is at immersion
angle φ, a cutting edge point that is axially z [mm] above will have an immersion
angle of (φ −ψ). Obviously, the chip thickness removed along the ﬂute’s axis
will also be different at each point. A general pseudocode of a milling force

42
MECHANICS OF METAL CUTTING
TABLE 2.2. Pseudocode for Milling Force Simulation Algorithm
Inputs
Cutting conditions
a, c, n, φst, φex
Tool geometry
D, N, β
Cutting constants
Ktc, Krc, Kte, Kre
Integration angle
	φ
Integration height
	a
Outputs
Cutting force history
Fx(φ), Fy(φ), F(φ)
Cutting torque and power history
Tc(φ), Pc(φ)
Variables
φp = 2π
N
Cutter pitch angle
K = 2π
	φ
Number of angular integration steps
L =
a
	a
Number of axial integration steps
i = 1 to K
Angular integration loop
φ(i) = φst + i	φ
Immersion angle of ﬂute’s bottom edge
Fx(i) = Fy(i) = Ft(i) = 0.0
Initialize the force integration registers
k = 1 to N
Calculate the force contributions of all teeth
φ1 = φ(i) + (k −1)φp
Immersion angle for tooth k
φ2 = φ1
Memorize the present immersion
j = 1 to L
Integrate along the axial depth of cut
a( j) = j · 	a
Axial position
φ2 = φ1 −2 tan β
D
a( j)
Update the immersion angle due helix
if φst ≤φ2 ≤φex
If the edge is cutting,
then
h = c sin φ2
Chip thickness at this point
	Ft = 	a(Ktch + Kte)
Differential tangential force
	Fr = 	a(Krch + Kre)
Differential radial force
	Fx = −	Ft cos φ2 −	Fr sin φ2
Differential feed force
	Fy = 	Ft sin φ2 −	Fr cos φ2
Differential normal force
Fx(i) = Fx(i) + 	Fx
Sum the cutting forces
Fy(i) = Fy(i) + 	Fy
contributed by the all
Ft(i) = Ft(i) + 	Ft
’active edges
else
next j
next k
Resulting cutting force values at immersion angle φ(i)
F(i) =

F2
x (i) + F2
y (i)
Resultant cutting force
Tc(i) = D
2 Ft(i)
Cutting torque
next i
Plot Fx(i), Fy(i), Fi, Tc(i) with varying immersion φ(i)
stop
end
simulation program is given in Table 2.2. The input variables set by the user are
helix, entry, and exit angles, axial depth of cut, the number of teeth, feed rate,
spindle speed, cutter diameter, and cutting constants. The cutter is rotated with
small incremental angles. At each incremental rotation, the cutting forces are

2.8 ANALYTICAL MODELING OF END MILLING FORCES
43
0
0
600
800
45
90
135
180
225
270
315
360
Cutting Forces [N]
Fy
Fz
Fx
400
200
-200
-400
-600
Rotation angle [degree]
(a) Half immersion up milling 
    with a cylindrical end mill
20
40
60
80 100 120 140
160 180
Fy
Fx
Fz
300
200
100
0
-100
-200
(b) Slot ball end milling
Rotation angle [degree]
Cutting Forces [N]
Figure 2.22: Simulated and measured cutting forces in end
milling of Ti6Al4V alloy. Feed rate = 0.05 mm/rev/tooth. (a)
R0 = 9.05 mm, V = 30m/ min, Nt = 4 ﬂutes, αn = 12 deg, axial
depth of cut = 5.08 mm/rev, io = 30 deg. (b) Single ﬂute ball
end mill with radius R0 = 9.525 mm, nominal helix angle i0 =
30 deg, axial depth of cut = 1.27 mm, spindle speed n = 269
rev/min.
integrated axially along the sliced
differential elements from the
bottom of the ﬂute toward the
ﬁnal axial depth of cut.
Sample experimental and sim-
ulation results for helical cylin-
drical and helical ball end milling
of a titanium alloy are given in
Figure 2.22 [15, 35]. The cut-
ting coefﬁcients are obtained by
transforming orthogonal cutting
constants of titanium given in
Table 2.1 to oblique end mill geo-
metry (see Eq. 2.63). The agree-
ment between the experimental
and simulation results are very
satisfactory owing to the careful
evaluation of shear stress, shear
angle, and friction coefﬁcient in a
series of orthogonal tests, as well
as accurate modeling of geome-
try and oblique transformation of
mechanics. More complex milling
cutters and operations can also
be modeled by using the same
mechanics approach, by design-
ing a generalized, parametric milling cutter geometry as presented by Altintas
and Lee [15].
2.8
ANALYTICAL MODELING OF END
MILLING FORCES
The discrete simulation of cutting forces in end milling was explained in the
previous section. The accuracy of the cutting force prediction strongly depends
on the selected digital integration interval. When the axial depth of cut is large
in helical end milling operations, the differential element height in the axial
direction must be very small to avoid numerical oscillations on the cutting
force waveforms. When the cutting forces are used to predict the vibrations of
the end mill or workpiece, the numerical oscillations lead to faulty simulation
of vibrations. In addition, an accurate prediction of force distribution along
the end mill and ﬂexible thin webs is necessary to predict the dimensional
form errors left on the ﬁnish surface. When kinematics and certain properties
of the milling process are considered, it is possible to derive semianalytical
expressions for end milling forces [23]. An end mill with a helix angle of β,

44
MECHANICS OF METAL CUTTING
diameter of D, and N number of ﬂutes is assumed (see Fig. 2.21). The axial
depth of cut (a) is constant, and the immersion is measured clockwise from the
normal (y) axis. Assuming that the bottom end of one ﬂute is designated as
the reference immersion angle φ, the bottom end points of the remaining ﬂutes
are at angles φj(0) = φ + jφp; j = 0, 1, 2 . . . (N −1). At an axial depth of cut z
the lag angle is ψ = kβz, where kβ = (2 tan β)/D. The immersion angle for ﬂute
j at axial depth of cut z therefore is
φ j(z) = φ + jφp −kβz.
(2.88)
Tangential (dFt,j), radial (dFr,j), and axial (dFa,j) forces acting on a differen-
tial ﬂute element with height dz are expressed similar to Eq. (2.80) as follows:
dFt,j(φ, z) = [Ktchj(φ j(z)) + Kte]dz,
dFr,j(φ, z) = [Krchj(φ j(z)) + Kre]dz,
dFa,j(φ, z) = [Kachj(φ j(z)) + Kae]dz,
⎫
⎬
⎭
(2.89)
where the chip thickness is
hj(φ, z) = c sin φ j(z).
(2.90)
The directions of the cutting forces are aligned with the cutter axis. The cut-
ting constants can be evaluated from Eq. (2.63) by accepting the helix angle as
the oblique angle of the end mill (i.e., i = β). The elemental forces are resolved
into feed (x), normal (y), and axial (z) directions using the transformation as
follows:
dFx,j(φ j(z)) = −dFt,j cos φ j(z) −dFr,j sin φ j(z),
dFy,j(φ j(z)) = +dFt,j sin φ j(z) −dFr,j cos φ j(z),
dFz,j(φ j(z)) = +dFa,j.
(2.91)
Substituting the differential forces (Eq. 2.89) and the chip thickness (Eq. 2.90)
into Eqs. (2.91) leads to
dFx,j(φ j(z)) =
 c
2[−Ktc sin 2φ j(z) −Krc(1 −cos 2φ j(z))]
+ [−Kte cos φ j(z) −Kre sin φ j(z)]

dz,
dFy,j(φ j(z)) =
 c
2[Ktc(1 −cos 2φ j(z)) −Krc sin 2φ j(z)]
+ [Kte sin φ j(z) −Kre cos φ j(z)]

dz,
dFz,j(φ j(z)) = [Kacc sin φ j(z) + Kae]dz.
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
(2.92)
The differential cutting forces are integrated analytically along the in-cut
portion of the ﬂute j in obtain the total cutting force produced by the ﬂute as
follows:
Fq(φ j(z)) =
 z j,2
z j,1
dFq(φ j(z))dz,
q = x, y, z,
(2.93)
where z j,1(φ j(z)) and z j,2(φ j(z)) are the lower and upper axial engagement
limits of the in-cut portion of the ﬂute j. The integrations are carried out by

2.8 ANALYTICAL MODELING OF END MILLING FORCES
45
noting φ j(z) = φ + jφp −kβz, dφ j(z) = −kβdz. Thus,
Fx,j(φ j(z)) =

 c
4kβ

−Ktc cos 2φ j(z) + Krc[2φ j(z) −sin 2φ j(z)]

+ 1
kβ
[Kte sin φ j(z) −Kre cos φ j(z)]
z j,2(φj(z))
z j,1(φj(z))
,
Fy,j(φ j(z)) =

 −c
4kβ

Ktc(2φ j(z) −sin 2φ j(z)) + Krc cos 2φ j(z)]

+ 1
kβ
[Kte cos φ j(z) + Kre sin φ j(z)]
z j,2(φj(z))
z j,1(φj(z))
,
Fz,j(φ j(z)) = 1
kβ
[Kacc cos φ j(z) −Kaeφ j(z)]
z j,2(φj(z))
z j,1(φj(z)).
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
(2.94)
Figure 2.23: Helical ﬂute-part face integration zones and
differential forces on the cutting tool at a particular rotation
angle φ and depth z.
1
2
3
0
0
st
j
ex
z=a
z
z=0
4
dF
dF
t,0
Y
X
dFr,1
dFt,1
r,0
p
0
The axial integration limits z j,1
and
z j,2
are
required
for
each
ﬂute to implement the cutting force
model. When extruded axially, each
[φst, φex] cutter arc segment deﬁnes
an immersion section that can inter-
act with a helical tooth j in ﬁve dis-
tinct ways (Fig. 2.23). The lag angle
at full axial depth of cut z = a is
ψa = kβa.
The
following
computer
algo-
rithm is used in determining the
axial integration boundaries:
r If
φst < φ j(z = 0) < φex,
then
z j,1 = 0;
If
φst < φ j(z = a) < φex,
then
z j,2 = a.
If
φj(z = a) < φst,
then
z j,2 =
(1/kβ)(φ + jφp −φst).
r If φ j(z = 0) > φex and φ j(z = a) <
φex, then z j,1 = (1/kβ)(φ + jφp −
φex);
If φ j(z = a) > φst, then z j,2 = a.
If
φj(z = a) < φst,
then
z j,2 =
(1/kβ)(φ + jφp −φst).
If φ j(z = 0) > φex and φ j(z = a) >
φex, the ﬂute is out of cut.
The values for the integration limits
z j,1 and z j,2 are taken from the cases

46
MECHANICS OF METAL CUTTING
listed above substituted into Eq. (2.94), and the resulting expressions can be
further simpliﬁed for an efﬁcient computation in computer programs. Note that,
to use the expressions, ﬂute j = 0 must be aligned at φ = 0 in the beginning of
the algorithm. The remaining ﬂutes must be indexed ( j = 1, 2, . . . , N −1) from
the reference tooth at pitch angle (φp) intervals. The cutting forces contributed
by all ﬂutes are calculated and summed to obtain the total instantaneous forces
on the cutter at immersion φ as follows:
Fx(φ) =
N−1

j=0
Fxj;
Fy(φ) =
N−1

j=0
Fyj;
Fz(φ) =
N−1

j=0
Fz j.
(2.95)
The resultant cutting force acting on the milling cutter is
F(φ) =

Fx(φ)2 + Fy(φ)2 + Fz(φ)2.
(2.96)
Thus, computationally inefﬁcient and approximate digital integration meth-
ods are eliminated by the closed-form expressions of the instantaneous cutting
forces. The closed-form expressions can be used for process planning, investi-
gating the interaction between tool–workpiece structure and the milling pro-
cess, and predicting ﬁnish surface. The algorithm can be efﬁciently imple-
mented to the CAD/CAM systems for milling process simulation [99].
2.8.1
Mechanistic Identiﬁcation of Cutting Constants in Milling
Using orthogonal cutting parameters such as shear angle, shear stress, and
friction coefﬁcient to determine oblique milling constants is desired for model-
ing a variety of milling cutter geometries (see Eqs. 2.64 and 2.63). However,
some cutting tools may have complex cutting edges, and the evaluation of cut-
ting constants by creating a time-consuming orthogonal cutting database may
not be possible. In such cases, a quick method of calibrating the milling tools,
the mechanistic approach, is used [35]. A set of milling experiments are con-
ducted at different feed rates, but at constant immersion and axial depth of
cut. The average forces per tooth period are measured. To avoid the inﬂuence
of runout on the measurements, the total force per spindle revolution is col-
lected and divided by the number of teeth on the cutter. The experimentally
evaluated average cutting forces are equated to analytically derived average
milling force expressions, which leads to the identiﬁcation of cutting constants.
Because the total material removed per tooth period is constant with or without
helix angle, the average cutting forces are independent of helix angle. Replac-
ing dz = a, φj(z) = φ, and kβ = 0 in Eqs. (2.92) and integrating them over one
revolution and dividing by the pitch angle (φp = 2π/N) yields to average milling
forces per tooth period,
Fq = 1
φp
 φex
φst
Fq(φ)dφ,
(2.97)

2.9 MECHANICS OF DRILLING
47
because the ﬂute cuts only within the immersion zone (i.e., φst ≤φ ≤φex).
Integrating the instantaneous cutting forces leads to
Fx =
 Nac
8π

Ktc cos 2φ −Krc[2φ −sin 2φ]

+ Na
2π [−Kte sin φ + Kre cos φ]
φex
φst ,
Fy =
 Nac
8π

Ktc(2φ −sin 2φ) + Krc cos 2φ]

−Na
2π [Kte cos φ + Kre sin φ]
φex
φst ,
Fz = Na
2π

−Kacc cos φ + Kaeφ
φex
φst .
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
(2.98)
Full-immersion (i.e., slotting) milling experiments are most convenient;
here, the entry and exit angles are φst = 0 and φex = π, respectively. When
full-immersion conditions are applied to Eqs. (2.98), the average forces per
tooth period are simpliﬁed as follows:
Fx = −Na
4 Krcc −Na
π Kre,
Fy = + Na
4 Ktcc + Na
π Kte,
Fz = + Na
π Kacc + Na
2 Kae.
⎫
⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎭
(2.99)
The average cutting forces can be expressed by a linear function of feed rate (c)
and an offset contributed by the edge forces as follows:
Fq = Fqcc + Fqe
(q = x, y, z).
(2.100)
The average forces at each feed rate are measured, and the cutting edge com-
ponents (Fqc, Fqe) are estimated by a linear regression of the data. Finally, the
cutting force coefﬁcients are evaluated from Eqs. (2.99) and (2.100) as follows:
Ktc = 4Fyc
Na ,
Kte = πFye
Na ,
Krc = −4Fxc
Na ,
Kre = −πFxe
Na ,
Kac = πFzc
Na ,
Kae = 2Fze
Na .
(2.101)
The procedure is repeated for each cutter geometry; hence, the milling force
coefﬁcients can not be predicted before the testing of newly designed cutters
using mechanistic models. However, oblique cutting transformation using basic
orthogonal cutting parameters can predict the cutting constants before the
cutter is manufactured.
2.9
MECHANICS OF DRILLING
A sample twist drill, which is used in drilling holes, is shown in Figure 2.24. A
twist drill has a chisel edge at the bottom and two helical cutting lips with a

48
MECHANICS OF METAL CUTTING
l1
l2
Flute
Helix angle β0
Lip length
Point angle 2
Flank
Chisel edge angle ψc
Chisel edge 
κ t
2R
2R
2R
Figure 2.24: Twist drill geometry.
taper angle (κt) that meet with the ﬂutes with a helix angle of β0. The helical
ﬂutes do not cut; they are used to evacuate the chips from the drilled hole. The
chisel has a width of 2w and an edge angle of ψc. The cutting lips have an offset
from the drill center because of the chisel edge. The lips expand the hole by
removing the material with a constant chip thickness (h) as the drill is fed into
the material at a feed rate of c [mm/rev]. The thrust force that is used to push
the drill into the work material and the torque applied to the drill and spindle
drive are required to evaluate the mechanics of the drilling operations. The
mechanics of drilling must be analyzed separately for the chisel and cutting lip
regions.
Chisel Edge
The chisel edge does not cut but only spreads the material sideways by an
indentation mechanism. Instead of using the laws of cutting, the mechanics
of indentation must be used. If the process is simpliﬁed as in a hardness test,
then the thrust force acting on the chisel edge can be simpliﬁed as
THRUSTi = Fz,i = AchHB,
(2.102)
where HB is the Brinell hardness of the work material and Ach is the instan-
taneous indentation area of the chisel edge. Ach is evaluated as the product of
chisel length (2w/ sin(π −ψc)) and the contact length of the spread material
with the lip (c/(2 cos γt)). Considering both sides of the chisel contact, we have

2.9 MECHANICS OF DRILLING
49
an area of contact for indentation of
Ach =
2wc
sin(π −ψc) cos κt
.
(2.103)
Approximating the chisel force by the simple indentation method is not
reliable for an accurate analysis. The chisel edge geometry and indentation
mechanism is rather complex and requires detailed geometric modeling, and
experimental calibration of various empirical factors, as well [26]. Recently,
the chisel geometry has been improved signiﬁcantly by tool manufacturers to
minimize the skidding of the drill on the work surface during penetration. For
practical considerations, the chisel forces can be assumed to be about 10 to
15 percent of the lip cutting forces, and the torque can be neglected because
the chisel width (2w) is rather small.
Cutting Lip
The geometry of the cutting lip of a drill is quite complex. To use the orthog-
onal to oblique cutting transformation, it is necessary to identify the helix,
normal rake, and oblique angles at cutting points along the lip. Because of the
offset caused by the chisel and the varying diameter, the helix, normal rake,
and oblique angles vary from the chisel–lip to lip–ﬂute intersection. The follow-
ing treatment of the drill geometry is based on the work presented by Galloway
[47] and Armarego and Brown [25].
The geometric model of the drill shown in Figure 2.25 is used in explaining
the oblique cutting model. The drill axis is aligned with z, the lip that has an
offset from the drill axis because chisel edges is aligned parallel to x, and the
axis normal to the lip is parallel to y in a Cartesian coordinate system with a
center at the drill tip O.
First consider the bottom of the ﬂute where the lips and chisel edge meet
(i.e., the plane of z = 0). The chisel web offset from the drill axis is w, and the
chisel edge angle is ψc (see the detailed view in Fig. 2.26). The radial distance
between the drill center and the point where the lip intersects with the chisel
edge is
r(0) =
w
sin(π −ψc),
(2.104)
with coordinates x(0) = r(0) cos(π −ψc), y(0) = w, z = 0.
The lip and helical ﬂute intersect at elevation z = a and the drill diameter is
R (see detail (b) in Fig. 2.26). The radial distance between the lip’s outermost
point and drill center is r(a) = R, with coordinates
x(a) = R cos θ(a),
θ(a) = sin−1(w/R),
y(a) = w,
z = a,
⎫
⎬
⎭
(2.105)

50
MECHANICS OF METAL CUTTING
Figure 2.25: Mechanics model of twist drill.
where R is the drill radius. The projected length of the whole cutting lip on the
xy plane at elevation z = a becomes
D′E = DE sin κt = bsin κt,
(2.106)
where b = DE is the length of lip that cuts the work material. Although the
helix angle changes along the lip, a nominal helix angle (β0) of the drill is
deﬁned for the ﬂutes at the cylindrical region (r(a) = R) as follows:
tan β0 = 2πR
Lp
,
(2.107)
where Lp is the constant pitch length of the helix.

2.9 MECHANICS OF DRILLING
51
n
X
Y
r(0)
W
Y
X
(a)  Z = 0
ψc
n
r(a)
R
θ(a)
θ(a)
(b)  Z = a
w
D'
E
O
ψc
D
O
θ(0)
Figure 2.26: Top view of twist
drill at the bottom and at the
ﬂute–lip intersection planes.
A point P(x, y, z) on the cutting lip is considered in Figure 2.25. The projection
of the cutting lip on the xy plane at elevation z is D′P = z tan κt. The radial
distance between the axis of the drill and point P is
r(z) =

y(0)2 + [x(0) + D′P]2 =

w2 + [w cot(π −ψc) + z tan κt]2
(2.108)
with coordinates
x(z) = r(z) cos(θ(z)),
y(z) = r(z) sin(θ(z)).
(2.109)
The local helix angle at point P can be expressed as
β(z) = 2πr(z)
Lp
,
(2.110)
which has a different value at each elevation z. The cutting velocity (V) is
perpendicular to the radius r(z) and has the following components in the xy
plane:
Vx(z) = V · cos θ(z),
Vy(z) = V · sin θ(z).
(2.111)

52
MECHANICS OF METAL CUTTING
The projection of the cutting velocity on the cutting lip, which has a taper
angle of κt, is
Vt = Vy sin κt = V sin θ(z) sin κt.
(2.112)
The oblique angle (i) is deﬁned between the cutting velocity and the normal to
the cutting edge as follows:
sin i = Vt
V = sin θ(z) sin κt.
(2.113)
The cutting mechanics are deﬁned on the normal plane, which is perpen-
dicular to the cutting edge. If a normal plane to cutting edge is considered at
point P, the velocity (V) has a component perpendicular to the tapered cutting
edge (Vy(z) cos κt) and a component parallel to Vy. The angle between the two
velocity components is
tan γd = Vy cos κt
Vx
= tan θ(z) cos κt.
(2.114)
The effective rake angle (αf) is evaluated by Armarego and Brown by con-
sidering a point inside the lip and along the cutting velocity and projecting it
on the differential. This yields [25]
tan αf =
tan β(z) cos θ(z)
sin κt −tan β(z) sin θ(z) cos κt
.
(2.115)
The normal rake angle is found from the geometry via
αn = αf −γd.
(2.116)
Although the drill geometry is complex, one can take the geometric relation-
ships (2.114–2.116) for granted and predict the cutting forces along the lip. If
the drill lip is broken into small differential elements with height dz and width
	b, each differential lip removes a chip with an area of
dA(z) = 	b · h,
(2.117)
where the chip thickness (h) removed by one of the two ﬂutes and the chip
width (	b) are
h = c
2 sin κt,
	b =
dz
cos κt
.
(2.118)
The cutting forces in tangential (parallel to the cutting velocity) chip ﬂow
and radial directions are expressed as
dFt(z) = Ktc(z)dA + Kte	b,
dFf(z) = Kfc(z)dA + Kfe	b,
dFr(z) = Krc(z)dA + Kre	b,
⎫
⎬
⎭
(2.119)
where the cutting coefﬁcients for each element at elevation z are different
because of varying helix, normal rake, and oblique angles. Edge constants
Kte, Kfe, and Kre are evaluated experimentally, and cutting constants Ktc, Kfc,

2.9 MECHANICS OF DRILLING
53
Figure 2.27: Direction of drilling forces.
and Krc are evaluated from an orthogonal cutting database using the oblique
transformations given by Eqs. (2.63).
The components of the elemental cutting force components (dFt, dFf, dFr)
can be evaluated in the x, y, z directions as shown in Figure 2.27 as follows:
dFx(z) = [dFf sin γd −dFt cos θ −dFr sin i],
dFy(z) = [dFr(sin i · sin γd · cos κt) −dFf cos γd · cos κt −dFt sin θ],
dFz(z) = [dFf cos γd · sin κt −dFr(cos i · cos κt + sin i · sin γd · sin κt)].
⎫
⎪⎪⎬
⎪⎪⎭
(2.120)
The total thrust and torque exerted on the drill can be evaluated by summing
the contribution of all lip elements that number M = b/	b = bcos κt/dz). The
total thrust force and torque produced by the two lips (i.e., region II) can be
expressed as
THRUSTii = 2
M

m=1
dFz(z),
TORQUEii = 2
M

m=1
dFt(z) · r(z).
⎫
⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎭
(2.121)

54
MECHANICS OF METAL CUTTING
Flank
wear
A
VB
A
Cutting
edge
Crater depth
Contact length
Cross-section AA
Tool
Chip
Work
V
Wf
l
h
Depth of cut
Crater
wear on
rake face
Notch
Figure 2.28: The types of tool wear and breakage.
The total thrust force exerted on the drill is found by summing the contributions
of the chisel and lip forces as follows:
THRUST = THRUSTi + THRUSTii.
(2.122)
The torque produced by the chisel edge can be neglected.
The mechanics of chisel and difﬁculty in modeling the oblique geometry
complicate the mechanics of drilling. Readers are referred to a detailed study
presented by Armarego et al. [26]. The grinding of twist drills requires accurate
modeling of chisel and lip geometry, as well as rake, helix, and clearance angles
along the lip and chisel because these strongly inﬂuence the cutting mechanics
[37], vibrations [91], and tool wear [55].
2.10
TOOL WEAR AND TOOL BREAKAGE
Cutting tools can be used only when their edges produce parts with speciﬁed
surface ﬁnish and dimensional tolerance. When the quality of the cutting edge

2.10 TOOL WEAR AND TOOL BREAKAGE
55
Cutting speed: 240 m/min
Cutting length: 872 m 
Cutting speed: 400 m/min
Cutting length: 907 m 
Cutting speed: 800 m/min
Cutting length: 780 m 
Figure 2.29: Wear of CBN tools in turning P20 mold steel at cutting speeds 240 m/min,
400 m/min, and 800 m/min.
is lost because of wear or breakage (Fig. 2.28), the tool reaches its life limit
and must be replaced by a new one. Cutting tools experience various forms of
wear and breakage during machining. Tool wear is deﬁned as a gradual loss
of tool material at workpiece material and tool contact zones [62]. The moving
chip is in contact with the part of the rake face where crater wear occurs (see
Fig. 2.29). The cutting edge generates the ﬁnish surface, and as it wears, the
ﬂank face of the tool starts rubbing against the ﬁnished surface leading to ﬂank
wear (see Fig. 2.30). A piece of the cutting edge may suddenly fracture during
machining because of thermal or mechanical overloading of the cutting edge,
increased cutting forces caused by signiﬁcant tool wear, or weakening of the
edge because of thermally or mechanically induced microcracks. The objective
of the machining engineer is to select a cutting tool material and geometry, as
well as optimal cutting conditions (i.e., feed, speed, depth of cut, and lubricant),
that lead to the most economical machining time without violating the surface
ﬁnish and tolerance of the workpiece and wear and breakage limits of the
cutting tool simultaneously. The identiﬁcation of conditions leading to optimal
machining is called a machinability study, and its simple fundamentals are
brieﬂy introduced in the following section.
Figure 2.30: Flank wear and built-up edge.
Flank wear
Built-up edge

56
MECHANICS OF METAL CUTTING
2.10.1
Tool Wear
Several wear mechanisms may occur simultaneously, or one of them may
dominate the process. They can be listed as abrasion, adhesion, diffusion,
fatigue, and chemical wear.
Abrasion Wear
Abrasion occurs when a harder material (i.e., the tool) shears away small
particles from the softer work material. However, softer work material also
removes small particles from the tool material, although at a smaller rate. The
hard tool particles are caught between the hard tool and soft work material,
and this causes additional abrasion wear. Tool and work materials contain
carbides, oxides, and nitrides with hard microstructures; these cause abrasion
wear during machining.
Adhesion Wear
When there is a relative motion between the two bodies that are under
the normal load, fragments of softer work material adhere to the harder tool.
The adhered material is unstable, and it separates from the cutting tool and
tears small fragments of the tool material. The typical example in metal cut-
ting is a built-up edge, which usually occurs at low cutting speeds when part
of the chip material welds to the cutting edge (see Fig. 2.30). Depending on
the size and stability of the built-up edge, either the forces decrease because
the effective rake angle becomes positive or the lumped built-up edge dulls
the tool and increases the forces. An unstable, large built-up edge occurs
close to the cutting edge at low speeds where the tool–chip interface tem-
perature is low (i.e., less than austenitic temperature). The material is still
strong at this point and difﬁcult to move over the rake face. As the chip moves
over the rake face, the chip–tool interface temperature increases, leading to
a softer chip, which is easier to move. As the cutting speed is increased,
the magnitude and length of the built-up edge becomes smaller and local-
izes close to the cutting edge. Predicting the tool–chip interface temperature
is therefore important in identifying cutting speeds where the built-up edge is
minimum [83].
Diffusion Wear
When the temperatures of the tool and work materials increase at the con-
tact zones, the atoms in the two materials become restive and migrate to the
opposite material where the concentration of the same atom is lower. Typically,
in a tool material such as tungsten carbide (WC), where carbide (C) provides
the hardness, whereas cobalt (Co) binds the WC grains, carbon diffuses to the
moving steel chips, which have a lower concentration of the same atoms. Pro-
gressive diffusion of tool materials into the chip gradually leads to a weakened
cutting edge and the eventual chipping or breakage of the tool.

2.10 TOOL WEAR AND TOOL BREAKAGE
57
Oxidation Wear
The atoms in the cutting tool and/or work material form new molecules at the
contact boundary where the area is exposed to the air (i.e., oxygen). Tungsten
and cobalt in the cutting tool are oxidized close to the work surface–cutting tool
ﬂank, which leads to a notch wear on the cutting tool. Depending on the tool–
work materials, tool geometry, and cutting conditions, one wear mechanism
may be dominant, but all of them may occur simultaneously but at different
rates. The wear of the tool localizes at two regions where the tool is in contact
with the work material. The chip moves over the rake face until it leaves the
contact area, where crater wear occurs. The freshly cut surface contacts the
ﬂank face of the tool, where the ﬂank wear is observed (see Fig. 2.28).
Crater Wear
Crater wear occurs at the tool–chip contact area where the tool is subject to
a friction force of the moving chip under heavy loads and high temperatures
(Fig. 2.29). At higher speeds (i.e., turning P20 mold steel at v = 250 m/min
cutting speed), the temperature on the rake face of a carbide tool may reach
over 1,000◦C. At these high temperatures, the atoms in the tool continuously
diffuse to the moving chip. The temperature is greatest near the midpoint of
the tool–chip contact length, where the greatest amount of crater wear occurs
because of intensive diffusion. As the crater wear approaches the cutting edge,
it weakens the wedge and causes chipping of the tool. Crater wear can be min-
imized by selecting a tool material that has the least afﬁnity to the workpiece
material in terms of diffusion. The use of lubricants also reduces the wear. The
lubricant penetrates between the chip and the tool, reducing the friction force
and thus the temperature (see Eq. 2.27). As a result, the activity of diffusion
is reduced leading to less crater wear. The chemical afﬁnity between the work-
piece material (mostly iron Fe) and the tool material (mostly tungsten-carbide
WC) can be reduced using Al2O3, TiN, and TiC coatings on the tools. The thick-
ness of the coating layer is typically 3 to 5 μm. The coating materials have low
friction coefﬁcients and have strong chemical stability at high temperatures.
They act as a temperature barrier between the tool’s core carbide material and
the moving chip. However, they can not be easily deposited on the sharp edges
of the tool, and they may crack under heavy interrupted cutting conditions.
The use of coated tools may signiﬁcantly increase productivity by reducing tool
wear at high speeds. Care must be taken when selecting coating materials that
must not have chemical afﬁnity with the contents of the workpiece material at
elevated temperatures.
Flank Wear
Flank wear is caused by friction between the ﬂank face (primary clearance
face) of the tool and the machined workpiece surface (Fig. 2.30). At the tool
ﬂank–workpiece surface contact area, tool particles adhere to the workpiece
surface and are periodically sheared off. Adhesion of the tool and workpiece

58
MECHANICS OF METAL CUTTING
materials increases at higher temperatures. Abrasive wear occurs when hard
inclusions of work material or escaped tool particles scratch the ﬂank and
workpiece surface as they move across the contact area. Although adhesive
and abrasive wear mechanisms are predominant in ﬂank wear, some diffusion
wear also exists.
After selecting the lubricant, cutting tool material, and geometry to be used
in machining a particular work material, the best engineering approach is to
identify a machinability speed that corresponds to the critical temperature
limits of both cutting tool and work materials. The temperature can be esti-
mated approximately by using the orthogonal cutting mechanics expressions
given in this chapter (see Eq. 2.32). Alternatively, more accurate analytical and
experimental techniques can be used to predict the tool–work material inter-
face temperature as presented by Oxley [83] and Trent [115]. The tool–work
material interface temperature must be below the diffusion and melting limits
of the materials used in the cutting tool; otherwise, binding materials such as
cobalt in the WC or TiN and Al2O3 in CBN tools may diffuse toward the chip
leading to a chain of diffusion, adhesion, and abrasive wear mechanisms. It is
also advantageous to have a temperature that corresponds to at least that of
the recrystallization phase of the work material where the strain hardening
diminishes or even to that where the material becomes almost like a liquid with
a signiﬁcantly reduced yield shear strength. The built-up edge is avoided, and
cutting forces and, hence, the stresses in the cutting tool are reduced when the
material softens at elevated temperature, provided that the diffusion limits of
the material within the cutting tool are not exceeded.
A sample investigation conducted by Ren and Altintas is summarized here
as an example. A P20 mold steel with 34 Rc hardness is turned with a medium
grain CBN tool without any lubricant. The CBN cutting tool had a 0.1 mm wide
15◦negative chamfer angle with binders of TiN and Al2O3. P20 compositions
are: 0.33%C, 0.3%Si, 1.4%Mn, 1.8%Cr, 0.8%Ni, 0.2%Mo, and 0.008%S. P20 is
widely used for injection molding dies. CBN cutting tools are the hardest (87Rc)
after diamond, and owing to their high thermal and abrasion resistance and low
friction coefﬁcient, they are widely used in high-speed machining of hardened
tool and die steels. With the use of the analytical cutting mechanics models, the
average temperature at the shear plane and tool–chip interface are estimated
for a given speed and feed [90]. It is found that the most optimal cutting speed
in turning P20 with the CBN tool used is about 500 m/min, which corresponds
to an average temperature of 1,400◦C on the tool–chip interface. The diffusion
limit for the CBN binding material (Al2O3) is about 1,600◦C, and the melting
temperature of P20 steel is about 1,300◦C. For ISO S10 carbide tools, the
diffusion limit of cobalt binding is about 1,300◦C, which requires a cutting speed
of less than 300 m/min without lubricant. A series of orthogonal cutting tests
are conducted to verify the predictions, and three sample CBN tool pictures
are shown in Figure 2.29. The photographs are taken with a SEM. The CBN
tool experienced the least amount of wear at a cutting speed of 240 m/min,
where the tool–chip interface temperature is predicted to be about 1,150◦C.

2.10 TOOL WEAR AND TOOL BREAKAGE
59
The tool still does not exhibit any wear at 400 m/min after cutting a length of
907 m of work material. However, the temperature is very close to the melting
limit of P20 steel, and chemical wear such as oxidation of Fe in steel with
CBN tool materials may occur. When the speed is increased to 800 m/min,
which corresponds to about 1,600◦C at the tool–chip interface, severe crater
wear can be observed from the third tool after a shorter machining length of
780 m. At this speed, the bindings of the CBN tool diffuse to the chip. The
temperature prediction study indicates that the most optimal cutting speed for
this particular medium-grained CBN tool is about 500 m/min.
The classical wear mechanisms explained above are applicable to contin-
uous machining operations such as turning. The milling process is a more
complex operation because of its intermittent nature, and, thus, additional
factors affect tool wear in these operations. In milling, the cutting forces peri-
odically change as the chip thickness varies. The tooth periodically enters and
exits from the workpiece; hence, it experiences stress and temperature cycling
during cutting. As the tool enters the workpiece, it is heated. The tool starts
cooling when it exits from the workpiece to the cutting environment (i.e., air or
lubricant shower). The cooling period continues until it reenters the workpiece.
This periodic thermal cycle produces alternating compressive (heating cycle)
and tensile (cooling) stresses on the tool that may exceed its strength. Even
if the thermal stress amplitudes are not large enough to break the tool sud-
denly, the thermal stress cycling causes gradual fatigue failure and wear of the
tool. All of the wear mechanisms are therefore related to the tool–workpiece
materials, the cutting forces acting on the tool, and the temperature in the
contact regions. The temperature is a direct function of the relative speed and
friction force between the materials in contact. Higher speed results in more
friction energy, which then increases the temperature at the rake face–chip
and ﬂank face–workpiece surface contact zones. Thus, the cutting speed has
the strongest inﬂuence on the wear mechanism. As ﬂank wear increases, the
tool–workpiece contact area becomes larger and, hence, rubbing on the work-
piece surface becomes stronger. This results in a poor surface ﬁnish as well
as high friction forces and temperatures, which may eventually lead to tool
breakage. Flank wear occurs at the expense of losing a portion of the sharp cut-
ting edge; therefore, the accuracy of the ﬁnished workpiece dimension suffers
equally to this amount. In practice, it is more important to control ﬂank wear
than crater wear. However, the volume that can be worn away before the total
destruction of the tool occurs is much greater for crater wear than for ﬂank
wear, if there is not a strong chemical afﬁnity between the tool and workpiece
materials.
The ﬂank wear land is measured as the width of wear land (VB) on the
primary clearance face (Fig. 2.28). A typical tool life curve is shown in Fig-
ure 2.31. The history of ﬂank wear with machining time may be split into three
regions. The very sharp edge of the tool is worn soon after the cutting starts.
This is followed by a gradual, approximately linear tool wear development with
increasing cutting time. After the wear land (VB) reaches a critical limit, the

60
MECHANICS OF METAL CUTTING
V4
Wf
Flank wear
Wear limit
Primary or
Initial wear
zone
Secondary wear zone
Steady state region
Tertiary or
Accelerated wear zone
Cutting time, T, minutes
V4 > V3 > V2 > V1
T4 < T3 < T2 < T1
V3
V2
T4
T3
T2
T1
V1
Figure 2.31: Tool life (T) curves: variation of ﬂank wear land (VB) with time at different cutting
speeds (V).
ﬂank wear exponentially increases. The tool must be replaced before reaching
the critical limit (VBlim) to avoid catastrophic tool failure. The corresponding
cutting time to VBlim is called the tool life and was expressed ﬁrst by Taylor
[108] as a function of cutting conditions as follows:
Tt = CtV −p′c−q′,
(2.123)
where Tt [min] is the tool life, V [m/min] is the cutting speed, and c [mm/rev]
is the feed rate. Ct, p′, and q′ are constants for a given tool–workpiece material
pair and are identiﬁed from machinability tests.
Example. The following measurements are obtained from the machinability
tests, which are conducted by turning normalized AISI-1045 steel using grade
K21 carbide inserts.
Cutting speed
Feed rate
Measured tool
Test No.
V (m/min)
(mm/rev)
Life Tt (min)
1
100
0.2
80
2
200
0.2
10
3
200
0.1
40
From tests 1 and 2,
p′ = ln(Tt1/Tt2)
ln(V2/V1) = 3.
From tests 2 and 3,
q′ = ln(Tt3/Tt2)
ln(c2/c3)
= 2.

2.10 TOOL WEAR AND TOOL BREAKAGE
61
Substituting p′ and q′ into Eq. (2.123) gives the third parameter as
Ct = 3.2 · 106.
The resulting empirical Taylor tool life equation for this particular workpiece
material–tool couple becomes
3.2 · 106 = TtV 3c2.
For constant feed rate (c) or constant speed (V), logarithmic tool life charts
can be prepared (Eq. 2.123) that can be used for appropriate selection of feeds
and speeds for a desired tool life performance. It can be observed from the
example that the feed rate has far less inﬂuence than the cutting speed (i.e.,
V ≫c →q′ > p′). The ideal situation is to monitor the progress of tool wear
online during machining, so that the tool is replaced only when the wear limit
is reached. However, there is no reliable and practical in-process tool wear
measurement system available at the present. The topic is the subject of ongo-
ing intensive research efforts. It is a well-known fact that the cutting forces
increase, especially in the feed direction, as the ﬂank wear grows. Friction
between the ﬂank and ﬁnish surface produces additional forces to the shearing.
These forces have greater inﬂuence in the direction normal to the ﬂank surface
(i.e., the feed direction). However, correlating the increase in cutting force with
tool wear is still difﬁcult, since the cutting forces may also increase because of
changes in the workpiece geometry and material properties of the workpiece.
2.10.2
Tool Breakage
Tool fracture is deﬁned as the loss of a major portion of the tool wedge, which
terminates the total cutting ability of the tool. Chipping of the tool (i.e., the loss
of small particles from the cutting edge of the tool) is undesirable but does not
prevent cutting totally. Chipping does, however, increase the friction on both
the rake and ﬂank faces of the chipped tool (Fig. 2.28). If it remains undetected,
chipping eventually leads to total breakage of the tool.
Metal cutting tools are made of brittle materials that can fail under exces-
sive chip loading (i.e., large feed rate) and fatigue owing to cyclic mechanical
and thermal stresses. Experiments carried out by Zorev [120] showed the pro-
ﬁle of tangential and normal load distribution on the tool–chip contact zone
(see Fig. 2.2). Zorev found that, when the chip moves away from the cutting
edge, it sticks to the rake face ﬁrst; this is followed by a sliding motion until it
separates from the tool. Thus, the tangential load in the sticking zone is equal
to the yield shear stress of the material. In the sliding zone, the friction coef-
ﬁcient is constant and equal to the coefﬁcient of friction between the tool and
workpiece material. In the analysis of simpliﬁed orthogonal cutting mechan-
ics, loading is assumed to be linear using an average friction coefﬁcient (μa)
between the chip and the tool’s rake face. Loladze [69] used a photoelasticity
method to measure the stress distribution within the tool wedge during cutting.
He showed that after the tool–chip contact ends, the compressive stress zone

62
MECHANICS OF METAL CUTTING
in the tool is replaced by tensile stresses (see Fig. 2.2). Changes in the cutting
conditions, especially in the uncut chip thickness, vary the stress distributions.
As the uncut chip thickness is increased, the tensile stress zone expands and
its magnitude increases.
Therefore, if the feed rate is increased until the principal tensile stresses
reach the fracture limit (i.e., ultimate tensile strength of the brittle cutting tool
materials), the tool starts to crack. Both carbide and high-speed steel (HSS)
tools may plastically fail, as well, because of the high temperatures at high
cutting speeds. The tool loses its strength, deforms plastically, and is sheared
off by cutting forces at the elevated temperatures. The plastic failure of the tool
is most common in machining low-machinability, heat-resistant metals such
as the titanium and nickel alloys used in the aerospace industry. The chips of
these alloys do not easily dissipate the heat away from the tool contact zone,
thus causing large temperature loading of the tools. The friction energy, or
heat created at the tool–chip contact zone, is directly proportional to the cut-
ting speed (see Eq. 2.27). Therefore, whereas a free machining steel can be cut
with a carbide tool at a typical cutting speed of 200 m/min, titanium or nickel
alloy can be machined only at about 60 m/min. HSS tools can not be used in
machining these alloys. Most of the coating materials used on carbide tools use
TiC or TiN, which have chemical afﬁnity to titanium-alloyed workpieces. With
TiC/Al2O3-coated carbide tools in turning nickel-based alloys, the ﬂank wear
rate is reduced substantially because (1) TiC acts as a heat barrier between
the chip and the substrate carbide tool and (2) Al2O3 reduces the friction coef-
ﬁcient. The subjects of the fundamental mechanics of cutting, machinability,
and prediction of cutting forces for different operations are only brieﬂy intro-
duced here. Each subject requires a dedicated text for in-depth understanding
of the physics as well as the methods used in modeling. Readers are referred to
the well-established texts authored by Oxley [83], Armarego and Brown [25],
Shaw [96], Trent [115], and Boothroyd [31].
2.11
PROBLEMS
1. A set of orthogonal tests are conducted to identify the shear angle, average
friction coefﬁcient, and shear stress of P20 mold steel that has a hardness
of 34Rc. The cutting conditions and measured forces and chip thicknesses
are given in Table 2.3. The cutting tool was an S10 grade plunge turning
tool with a zero rake angle. The width of cut (i.e., the width of disk) was
b = 5 mm, and the cutting speed was V = 240 m/min. The properties of P20
steel are given as: speciﬁc coefﬁcient cs = 460 Nm/kg◦C, speciﬁc density ρ =
7,800 kg/m3, thermal conductivity ct = 28.74 [W/mC].
a. Evaluate the cutting coefﬁcients Ktc and Kfc [N/mm2] and edge force con-
stants Kte and Kfe [N/mm] by a linear regression of the measured forces.
b. Evaluate the shear angle (φc), shear stress (τs), and average friction coef-
ﬁcient (βa) for each test, and express them as an empirical function of
uncut chip thickness (h) to form an orthogonal cutting database.

2.11 PROBLEMS
63
TABLE 2.3. Orthogonal Cutting Test Conditions and Measurements in Plunge
Turning of P20 Mold Steel
Feed Rate
Tangential
Feed Force
Measured Chip
c [mm/rev]
Force Ft [N]
Fr [N]
Thickness hc [mm]
0.02
350
290
0.050
0.03
480
350
0.058
0.04
590
400
0.074
0.05
690
440
0.083
0.06
790
480
0.102
0.07
890
505
0.116
0.08
980
540
0.131
c. Predict the cutting force coefﬁcients (Ktc, Kfc) using empirically expressed
τs, φc, and βa, and compare them against the values identiﬁed from mech-
anistic linear regression of the forces.
d. Evaluate the shear strain and strain rate for each test at the primary
shear zone.
e. Identify the average temperature at the primary shear zone and tool–chip
interface.
f. Using the orthogonal to oblique transformation, express the cutting con-
stants for a helical end mill that has 30◦and 5◦of helix and normal rake
angles, respectively.
2. A P20 mold steel shaft with a diameter of D = 57 mm is turned with an S10
grade carbide tool with a side rake angle of αf = −5◦, a back rake angle of
αp = −5◦, and zero approach angle. The nose radius of the insert is r = 0.8
mm. The radial depth of cut, the feed rate, and the cutting speed are a =
1 mm, c = 0.06 mm/rev, and V = 240 m/min, respectively. The orthogonal
dry cutting parameters of P20 mold steel cut by an S10 carbide tool with a
rake angle αr = −5◦are given as follows:
Shear stress
τs = 1400h + 0.327V + 507 [N/mm2],
Friction coefﬁcient
βa = 33.69 −12.16h −0.0022V [degree],
Chip ratio
rc = 2.71h + 0.00045V + 0.227,
where the units are in h [mm] and V [m/min].
a. Evaluate the distribution of chip thickness along the curved chip length.
b. Evaluate the cutting coefﬁcients along the curved chip length using the
oblique cutting transformation.
c. Evaluate the distribution of tangential, radial, and feed cutting forces
(Ft, Fr, Ff) along the curved chip.
d. Find the total cutting forces (Fx, Fy, Fz), torque, and power required to
turn the shaft.
3. Consider an end mill with N = 8 ﬂutes, rake angle αr = 5 deg, +0 deg helix
angle, D = 20 mm diameter with L = 40 mm overhang from the cantilevered
tool holder. The end mill is used in half-immersion down-milling of Al-7050

64
MECHANICS OF METAL CUTTING
TABLE 2.4. Measured Average Milling Forces for Al7075
Feed Rate
[mm/th]
F x [N]
F y [N]
F z [N]
0.025
−69.4665
64.3759
−10.2896
0.050
−88.1012
99.1383
−20.5814
0.100
−105.6237
155.7100
−33.9852
0.150
−118.1107
210.4644
53.4833
0.200
−130.6807
263.4002
73.1515
alloy with a feed rate of c = 0.1 mm/rev/tooth and the axial depth of cut is
a = 30 mm. The orthogonal cutting parameters of Al7050 are given as fol-
lows: Shear stress τs = 250 MPa, shear angle φc = 20 + αr, average friction
coefﬁcient is μa = 0.35 The edge cutting forces are assumed to be negligi-
ble. The Young Modules of carbide end mill is E = 200 GPa with the mass
density of ρ = 7,860 kg/m3.
a. Identify the cutting force coefﬁcients of the end mill.
b. Assuming that the total cutting forces act at the free end of the tool
(z = 0), calculate the maximum deﬂection mark left on the ﬁnish surface
of the part at the bottom of the surface (z = 0).
c. Consider that the damping ratio is ζ = 2%, what will be the maximum
amplitude of forced vibration in the y direction when the tooth passing
frequency matches with the natural frequency of the end mill?
4. An end mill with 100 mm diameter, 4 ﬂutes, 30◦helix angle, and 10◦rake
angles is used in the peripheral milling of aerospace wing support frames.
The material is Al-7075. A series of full-immersion (i.e., slot) milling experi-
ments are conducted at constant speed (2,500 rev/min) and axial depth of cut
(a = 1.5 mm), but at a series of feed rates. The cutting forces are measured
and the average forces per tooth period are given in Table 2.4. Calculate the
cutting constants (Ktc, Krc, Kac) and edge constants (Kte, Kre, Kae) by assum-
ing the force model given in Eq. (2.80).
5. Write a simulation program for general milling operations. The program
must be ﬂexible to test various face and end milling operations. Use the
cutting constants identiﬁed from the previous question given above. Neglect
the inﬂuence of helix angle on cutting constants. Your simulation program
must be able to cover at least one full revolution of the cutter. Show the
graphical results for the milling cases given in Table 2.5.
Feed rate (c) = 0.1 mm/tooth,
Spindle speed (n) = 6,000 rev/min,
Gauge length (l) = 54.5 mm,
Cutter diameter (d) = 19.05 mm,
No. of ﬂutes (N) = 4,
Young’s modulus (E) = 2 · 105 MPa.

2.11 PROBLEMS
65
TABLE 2.5. Simulation Cases
Case No.
a (mm)
β (deg)
φst (deg)
φex (deg)
i
5.00
0
0
120
ii
40.0
30
0
90
iii
40.0
30
0
180
Plot the following variables on the same graph and provide short comments
for the simulation results:
a. Fx and Fy cutting forces, all cases.
b. Resultant cutting force and torque, all cases.
6. A twist drill with a diameter 2R = 19.05 mm, chisel edge angle ψc = 125◦,
chisel width 2w = 0.78 mm, and nominal helix angle of β0 = 30◦is used in
drilling a titanium alloy Ti6Al4V. Predict the thrust, torque, and power of the
drilling operation when the drill feed and spindle speed are c = 0.1 mm/rev
and n = 200 rev/min, respectively. Use the orthogonal cutting parameters
of Ti6Al4V given in Table 2.1.
7. A CBN tool is used in dry turning of P20 mold steel with 34Rc hardness. The
cutting edge has a 15◦chamfer edge, which acts like a negative rake angle.
A number of turning tests are conducted at different feeds and speeds. Each
test is continued until a cutting length of lm is reached, and the average ﬂank
wear (VB) is recorded. By the use of a least-squares method, the following
relationship was identiﬁed from an actual cutting test data:
VB = 0.0023568V 1.33c0.7423l0.796
m
,
where the units are ﬂank wear VB [mm], cutting speed V [m/min], feed rate
c [mm/rev], and machining length lm [m]. Predict the tool change time when
the cutting conditions are selected as V = 240 m/min and c = 0.06 mm/rev
and the maximum allowable wear is VB = 0.2 mm. The diameter of the shaft
is 100 mm.

CHAPTER THREE
STRUCTURAL DYNAMICS
OF MACHINES
3.1
INTRODUCTION
Machine tools are called machine making machines. Various machining and
forming operations are executed by a variety of machine tools to produce
mechanical parts. To maintain speciﬁed tolerances, the machine tools must
have greater accuracy than the tolerances of the manufactured parts. The pre-
cision of a machine tool is affected by the positioning accuracy of the cutting
tool with respect to the workpiece and the relative structural deformations
between them. The engineering analysis and modeling of relative static and
dynamic deformations between the cutting tool and workpiece are covered in
this chapter.
3.2
MACHINE TOOL STRUCTURES
A machine tool system has three main groups of parts: mechanical structures,
drives, and controls. The components can be observed from the horizontal com-
puter numerically controlled (CNC) machining center shown in Figure 3.1.
Mechanical Structure
The structure consists of stationary and moving bodies. The stationary bod-
ies include beds, columns, bridges, and gear box housings. They usually carry
moving bodies, such as tables, slides, spindles, gears, bearings, and carriages.
The structural design of machine tool parts requires high rigidity, thermal
stability, and damping. In general, the dimensions of machine tools are over-
estimated to minimize static and dynamic deformations during machining.
The general design of machine tool structures will not be covered in this text.
Instead, it is assumed that the relative static and dynamic compliance between
the tool and the workpiece is measured experimentally or predicted with ana-
lytical methods. The effect of structural compliance on the accuracy of the
machined workpiece and machining performance is presented.
Drives
Moving mechanisms are grouped into spindle and feed drives in machine
tools. The spindle drive provides sufﬁcient angular speed, torque, and power
to a rotating spindle shaft, which is held in the spindle housing with roller
or magnetic bearings. Low- to medium-speed spindle shafts are connected to
66

3.2 MACHINE TOOL STRUCTURES
67
Automatic tool changer
Integrated spindle
and drive motor
Feed drive 
Table
Pallet
CNC
Chip 
conveyor
Feed 
drive motor
Figure 3.1: A horizontal machining center. Source: Makino Milling Machine Co., Ltd.
the electric motor via V belts. There may be a single-step gear reducer and
a clutch between the electric motor and spindle shaft. High-speed spindles
(n > 15,000 rev/min) may have electric motors that are built into the spindle to
reduce the inertia and friction produced by the motor–spindle shaft coupling.
In a typical and versatile machining center, the high- and low-speed spindles
can be swapped in a short time. The feed drives carry the table or the carriage.
In general, the table is connected to the nut, and the nut houses a leadscrew.
The screw is connected to the drive motor either directly or via a gear system
depending on the feed speed, inertia, and torque reduction requirements. Con-
ventional machine tools have numerous gear reduction steps to obtain a desired
feed speed. Each feed screw has a dedicated drive motor in CNC machine tools.
Very high speed machine tools may use linear direct motors and drives with-
out the feed screw and nut, thus avoiding excessive inertia and friction contact
elements.
Controls
The control parts include motors, ampliﬁers, switches, and computers that
are used to energize the electrical parts in a controlled sequence and time.
Conventional machine tools mostly contain relays, limit switches, and operator-
controlled potentiometers and directional control switches. CNC machine tools
have power servoampliﬁers, opto-isolated ON/OFF and limit switches, and a

68
STRUCTURAL DYNAMICS OF MACHINES
computer unit equipped with emergency, control, and operator interface units.
The feed velocity and positioning accuracy of feed drives depend on the torque
and power delivery of the servomotors and on the feed drive servocontrol algo-
rithms executed in the CNC unit of the machine tool, which is covered in
Chapters Five and Six.
3.3
DIMENSIONAL FORM ERRORS IN MACHINING
The source of relative deformations between the cutting tool and the workpiece
at the contact point may be due to thermal, weight, and cutting loads. The
machine tool has rotating and moving elements, which are heated by friction
energy. The temperature increase is never uniform among the machine ele-
ments, owing to both their varying thermal coefﬁcients and the location of heat
sources. The machine tool table spindle head, on an overhang portal frame or
on a vertical column, changes location as the coordinate of the cutting point
varies on the workpiece. The moving weights change the stiffness or the rela-
tive displacement between the tool and workpiece at the cutting point. Thermal
and weight deformations can be measured at various positions of the machine
tool table or spindle head and stored in the compensation registers of the CNC
unit. When the machine tool travels, the errors are read from the registers and
additional motions are ordered by the CNC to compensate for the weight and
thermal deformation errors during machining.
The deformation errors caused only by the cutting forces will be presented
in this text. As the cutting tool travels along a tool path, there may be varia-
tions in the magnitude and the direction of cutting forces, as well as the relative
stiffness between the cutting tool and the workpiece [61]. The relative displace-
ments cause deviations from the desired dimensions of the workpiece, causing
dimensional form errors.
3.3.1
Form Errors in Cylindrical Turning
A typical cylindrical turning operation is shown in Figure 3.2. If the cutting
tool has a nonzero approach angle or a signiﬁcant nose radius, the turning
operation has an oblique geometry where the radial force perpendicular to
the ﬁnished surface is not zero. Any ﬂexibility in the direction of radial force
produces a relative displacement between the workpiece and the cutting tool at
a point where the ﬁnished surface is generated. The structure can be modeled
as an elastic circular shaft supported by a pin at the tail stock center and a
pin support and resistive bending moment in the chuck at the spindle side.
For simplicity, an average diameter (d) of the shaft can be used to account for
the radial depth of the cut removed. If the radial cutting force Fr is applied l
distance away from the chuck (see Fig. 3.2), the radial deﬂection of the beam
at an axial location x is
y(x) = 1
EI

−Rc
6 x3 + Fr
6 ⟨x −l⟩3 + Mc
2 x2
	
,
(3.1)

3.3 DIMENSIONAL FORM ERRORS IN MACHINING
69
x
y
l
L
f
d1
d2
l
L
y
Rc
RT
Rc
Mc
Mc
Fr
Fr
x
M(x)
Rc+RT=Fr
Mc=RcL-Fr(L-l)
M(x)=Mc-Rcx+Fr L-l
if 0<x<l then Fr x-l =0
Figure 3.2: Form errors in cylindrical turning of a shaft.
where E is the modulus of elasticity and I = (πd4)/64 is the moment of inertia
of the workpiece. The support force Rc and bending moment Mc at the chuck
are given by
Rc = Fr(L −l)
2L3
[3L2 −(L −l)2],
Mc = Frl(L −l)(2L −l)
2L2
.
The deﬂection, which is passed on the turned shaft as a dimensional error,
occurs at the point where the tool is in contact with the workpiece (i.e., x = l).
The radial deﬂection y(l) is deﬁned from the axis drawn between the center of
the tail stock and that of the spindle (i.e., machine tool axis). Because the bar
stock is pushed away by amount y(l) in the radial direction from the stationary
tool, the actual radial depth of cut will be a −y(l). Hence, the radius of the
ﬁnished workpiece will have y(l)[mm] amount of extra stock or form error at
location x = l. Note that as the tool travels toward the chuck, the stiffness of
the beam varies and, hence, the form error left on the ﬁnished surface will
be different along the workpiece axis. The maximum form error occurs at the
middle of the workpiece (x = L/2). Note that the ﬁnished workpiece will not
be cylindrical any more, but will have a barrel shape. When the barrel-type
workpiece is turned again in the subsequent pass, the effective axial depth
of cut will no longer be uniform but will vary along the bar axis, that is,
aeffective = a + y(l). Because the amplitude of the cutting force is proportional to
the axial depth of cut, the radial cutting force and the stiffness of the workpiece

70
STRUCTURAL DYNAMICS OF MACHINES
n
a
Fr
Figure 3.3: Bore form errors produced by a boring bar.
will vary along the bar axis, thus
still leaving a form error. It is there-
fore recommended to have a small
depth of cut and feed rate (i.e.,
small force) in the ﬁnishing oper-
ations. The process-planning engi-
neer should calculate the feed and
axial depth of cut according to the
tolerance and stiffness in the center
of the workpiece.
3.3.2
Boring Bar
A general diagram of a boring operation is shown in Figure 3.3. The boring
bar resembles a cantilevered elastic beam, and it is held in a variety of conﬁg-
urations depending on the machine tool and workpiece setup. The boring bar
is held in the stationary tail stock of a lathe, and the workpiece is attached to
the rotating spindle. Enlarging the internal diameter of a cylindrical shaft is a
typical example for a boring operation on a lathe. The boring bar can be held
on the spindle of a horizontal boring or machining center, but it is offset by an
amount equal to the radius of the bore to be opened. The offset is adjusted with
an eccentric attached to the spindle. Large bores of prismatic parts are opened
on the boring centers by placing the workpiece on the machine tool table [56].
If the length of the boring bar is l, the deﬂection at the workpiece–cutting
tool contact point will be
δ = Frl3
3EI = Fr
kr
,
(3.2)
where Fr is the radial force and kr = (3EI)/l3 is the radial stiffness of the
boring bar. The radial deﬂection is passed as a form error to the bore, and
its magnitude depends on the amplitude of the cutting force and the stiffness
in the radial direction. If a cylindrical boring bar is used, I = πd4/64 and
kr = (3πEd4)/(64l3). If a boring bar has a rectangular section with a width of
b and a height of h, the moment of inertia is I = (bh3)/12. The stiffness of the
rectangular boring bar becomes
kr = Ebh3
4l3 .
To increase the radial stiffness, the cutting tool must be mounted on the face of
boring bar section that has a width of h. If the ratio is h/b > 1, the magnitude
of the form error left on the surface is reduced by h3 times by simply orienting
the rectangular bar in the stiffer direction.

3.3 DIMENSIONAL FORM ERRORS IN MACHINING
71
3.3.3
Form Errors in End Milling
The walls of parts are produced by the periphery of end mills, and, thus,
end milling is also called peripheral milling. The ﬁnished workpiece surface is
perpendicular to the direction of feed in end milling. If the feed and normal
directions are aligned with the Cartesian x and y axes, respectively, any deﬂec-
tion in the y axis may produce a static form error. End mills can be considered
as an elastic cylindrical beam, cantilevered to the spindle through collet and
chuck. They are generally the most ﬂexible part in the machine tool system,
because their aspect ratio, the ratio of diameter over the gauge length from the
collet, is rather small.
The form errors produced by helical end mills are rather complex [98]. The
cutting forces are not constant but vary with the rotation of the end mill.
Furthermore, the helix angle of the ﬂutes produces additional variation on the
distribution of cutting forces along the cutter z axis [58].
First, consider an end mill with straight ﬂutes (i.e., zero helix angle) for sim-
plicity in explaining the surface generation mechanism. Here, the deﬂections
perpendicular to the ﬁnished surface (in the normal direction y) are important.
The static deﬂection caused by a normal force (Fy) at the free end of the end
mill is given by [32]
δy = Fy
k ,
(3.3)
where k = (3EI)/l3 and I = (πd4)/64. The effective diameter of the cutter is
d, and the gauge distance is l from the collet. The effective diameter of the
cutter can be found by scaling its outer diameter by 0.8–0.85 to take ﬂutes into
account. The cutting force is proportional to the chip thickness h, that is,
Fy(φ) = Ktcah(φ)[sin(φ) −Kr cos (φ)],
where φ is the immersion angle measured from the y axis, the chip thickness
is h(φ) = c sin φ, and c is the feed per tooth. The edge forces are neglected
for simplicity and Kr = Krc/Ktc. The tooth generates the surface when it is in
contact with it, or when it is on the normal y axis. When the cutting tool lies
on the y axis, the chip thickness is always zero. This situation occurs when
the tool is at the entry in up-milling (φ = 0) or at the exit in down-milling
(φ = π) (see Fig. 3.4). Thus, when only one tooth is present in the cutting
zone, regardless of the ﬂexibility of the end mill or magnitude of the cut, the
surface form errors will be zero in end milling with straight ﬂutes. This is a
common situation in ﬁnishing cuts where the radial immersion angle is usually
much less than the cutter pitch angle. However, if there are two or more teeth
cutting simultaneously, the cutting force will not be zero when one of the
teeth is aligned with the y axis, because the other ﬂutes cut a chip within the
immersion zone. In this case, the tooth either deﬂects toward the surface in up-
milling, thus causing an overcut form error, or deﬂects away from the surface
in down-milling, causing an undercut form error.

72
STRUCTURAL DYNAMICS OF MACHINES
Overcutting: 
Cutter leaves extra 
material  on the surface.
Undercutting: 
Cutter cuts extra 
material  from the surface.
(a) Up-milling
(b) Down-milling
X
Y
ω
Workpiece
Feed
Fj
Fj-1
X
Y
ω
ϕ
Feed
Workpiece
Fj
Fj-1
ϕ
Figure 3.4: The inﬂuence of the width of cut and milling mode
on the surface form errors: (a) up-milling and (b) down-milling.
Generating
the
surface
be-
comes
complex
when
the
end
mill has helical ﬂutes. Even when
there is only one ﬂute in cut,
there will always be form errors
left on the surface [106]. Consider
a ﬂute’s edge at the bottom of
the cutter aligned with the nor-
mal y axis, thus having a zero
immersion (i.e., φ(z = 0) = 0). As
the end mill rotates, the tip of
the ﬂute moves to immersion φ,
whereas an upper point on the
ﬂute, which has a z coordinate
measured from the tip, will be
right on the y axis, hence, generat-
ing the surface. Because the nor-
mal cutting force will not be zero
at this instant, the elastic end mill
displacement will produce a form
error on the surface. As the cut-
ter rotates, the cutting edge point
that generates the surface will move upward along the ﬂute because of the helix
angle. Depending on the number of ﬂutes and width of cut, there may be more
than one cutting edge point aligned at the y axis or in contact with the ﬁnished
surface. The contact points can be calculated by equating the instantaneous
immersion angle (φj(z) = φ + ( j −1)φp −kβz, with kβ = (2 tan β)/d) to zero in
up-milling and to π in down-milling [99]:
z = φ+( j−1)φp
kβ
(up-milling),
z = −π+(φ+( j−1)φp)
kβ
(down-milling),
where β is the helix angle, j = 1, 2, . . . N −1 is the ﬂute index, and φp = (2π)/ N
is the cutter pitch angle. An algorithm that can predict the surface form errors
can be integrated to the cutting force prediction program presented in the pre-
vious chapter. The cutter can be divided into M number of small disk elements
within the axial depth of cut a (see Fig. 3.5), and it can be rotated at incre-
ments 	φ (i.e., φ = 0, 	φ, 2	φ, . . . , φp). Each differential element has an axial
depth of cut 	z = a/M, and the inﬂuence of the helix angle may be neglected
by selecting small elements. The differential cutting force produced by element
m is given by (Fig. 3.5)
	Fy,m(φ) = Ktcc	z
N−1

j=0
[sin φ j(z) −Kr cos φ j(z)] sin φ j,
(3.4)
where Kt and Kr are cutting constants and c is the feed rate per tooth.

3.3 DIMENSIONAL FORM ERRORS IN MACHINING
73
MSP
γ
Fy
δ
θ
x
m
M
... ... ...
k
zk
ΔFy,m
δy(z )
k
0
1
2
3
R
l
d
Figure 3.5: Static deformation
model of an end mill.
The immersion angle for the element m is φj(m) = φ + ( j −1)φp −kβ · m	z.
The elemental cutting forces may be lumped at the upper boundaries of disks.
The deﬂection in the y direction at the contact point zk caused by the force
applied at element m is given by the cantilevered beam formulation as [33]
δy(zk, m) =
⎧
⎪⎨
⎪⎩
	Fy,mν2
k
6EI
(3νm −νk),
0 < νk < νm,
	Fy,mν2
m
6EI
(3νk −νm),
νm < νk,
(3.5)
where E is Young’s Modulus, I is the area moment of inertia of the tool, and
νk = l −zk, with l being the gauge length of the cutter measured from the
collet face. The area moment of the tool is calculated by using an equivalent
tool radius of Re = 0.80R, where 0.8 is the approximate scale factor due to
ﬂutes. The total static deﬂection at axial contact point zk is calculated by the
superposition of the deﬂections produced by all M elemental forces on the end
mill as follows:
δy(zk) =
M

m=1
δy(zk, m).
(3.6)
At the points where the cutting edge is in contact with the ﬁnished surface,
the deﬂection δy(zk) is imprinted as a dimensional error on the workpiece.
By rotating the cutter, the dimensional errors along the ﬁnished surface wall
can be generated and displayed on the plane of the cutter axis and surface
normal (y, z). The three-dimensional topography of the workpiece is generated
by simply repositioning the cutter along the feed direction (x). Figure 3.6 shows
a predicted surface error map of a workpiece that has a varying width of cut
along the feed direction. A detailed analysis of dimensional errors in end milling
can be found in Reference [33].

74
STRUCTURAL DYNAMICS OF MACHINES
Deflection (micron)
0.00     186.23     372.46      558.89      744.92
Deflection (micron)
1.38     211.46     424.29
(a)
(b)
Figure 3.6: A sample view of predicted surface area in end milling. (a) Dimensional surface error
simulation results; (b) experimental results.
3.4
STRUCTURAL VIBRATIONS IN MACHINING
Machine tool vibrations play an important role in hindering productivity during
machining. Excessive vibrations accelerate tool wear and chipping, cause poor
surface ﬁnish, and may damage the spindle bearings [57]. A brief review of basic
vibration theory is provided ﬁrst. As experimental modal analysis techniques
are most readily used in modern machining facilities, a practical review of
modal analysis theory and its practice in machining is then presented. The

3.4 STRUCTURAL VIBRATIONS IN MACHINING
75
x(t)
x4
x1
x0
= 2 π
dτ
d
ω
e ξ
t
ωn
-
e ξ
t
ωn
-
x0
cos(ω t)
d
ξ = 1
4
2π
ln xx
1
4
t
mx=-cx-kx+F(t)
F(t)
F(t)
m
m
k
k x
c
c x
x(t)
x(t)
(a) SDOF system.
(b) Free vibration of a SDOF system.
Figure 3.7: Mass, spring, and
damping
model
of
a
single–
degree of freedom (SDOF) sys-
tem: (a) SDOF system; (b) free
vibration of an SDOF system.
basics of vibration engineering should enable the reader to understand machine
tool vibrations and their avoidance in practice.
3.4.1
Fundamentals of Free and Forced Vibrations
A simple structure with a single–degree of freedom (SDOF) system can be
modeled by a combination of mass (m), spring (k), and damping (c) elements as
shown in Figure 3.7. When an external force F(t) is exerted on the structure,
its motion is described by the following differential equation:
m ¨x + c ˙x + kx = F(t)
or
¨x + 2ζωn ˙x + ω2
nx = ω2
n
k F(t).
(3.7)
If the system receives a hammer blow for a very short duration, or when it
is at rest and statically deviates from its equilibrium and lets go, the system
experiences free vibrations. The amplitude of vibrations decays with time as
a function of the system’s damping constant. The frequency of the vibrations
is mainly dominated by the stiffness and the mass and is lightly inﬂuenced by
the viscous damping constant, which is very small in mechanical structures.

76
STRUCTURAL DYNAMICS OF MACHINES
When the damping constant is zero (c = 0), the system oscillates at its natural
frequency as follows:
ωn =
"
k
m.
A damping ratio is deﬁned as ζ = c/2
√
km, which is always less than one in
mechanical structures. In most metal structures ζ < 0.05 or even less. The
damped natural frequency of the structure is deﬁned by
ωd = ωn

1 −ζ 2.
Assuming that the mass is free from any external force and displaced stat-
ically by an amount of x0 and that the system is released, the free vibration
motion can be described by
x(t) = x0e−ζωnt cos ωdt.
The period between each vibration wave is τd = 2π/ωd, which is a simple way
of estimating the system’s damped natural frequency from the free or transient
vibration measurements. The damping constant can be approximated from the
ratio of decaying maximum amplitudes of ﬁrst and nth successive waves with
the following equation:
ζ = 1
n

ln x1
xn
#
2π.
When an external force F(t) is present, the system experiences forced vibra-
tions. When a constant force F(t) = F0 is applied to the structure, the system
experiences a short-lived free or transient vibration and then stabilizes at a
static deﬂection xst = F0/k.
The general response of the structure can be evaluated by solving the differ-
ential equation of the motion. The Laplace transform of the equation of motion
with initial displacement x (0) and vibration velocity x′(0) under externally
applied force F(t) is expressed as
L
$
¨x + 2ζωn ˙x + ω2
nx
%
= L
ω2
n
k F(t)

s2x(s) −sx (0) −x′(0) + 2ζωnsx(s) −2ζωnx(0) + ω2
nx(s) = ω2
n
k F(s).
(3.8)
The system’s general response, the vibrations of the structure with a SDOF
dynamics, can be expressed as the following:
x(s) = ω2
n
k
1
s2 + 2ζωns + ω2n
F(s) + (s + 2ζωn)x(0) −x′(0)
s2 + 2ζωns + ω2n
.
(3.9)
The transfer function of the system is represented by neglecting the effect
of initial conditions that will eventually disappear as transient vibrations.
(s) = x(s)
F(s) = ω2
n
k
1
s2 + 2ζωns + ω2n
.
(3.10)

3.4 STRUCTURAL VIBRATIONS IN MACHINING
77
The characteristic equation of the system has complex conjugate roots (p, p∗)
because the mechanical systems are underdamped (ζ ≪1) and vibrate as
follows:
s2 + 2ζωns + ω2
n = (s −p)(s −p∗) = 0
p = −ζωn + jωd,
p∗= −ζωn −jωd.
Example 1. Response of the system to step load (F(t) = F0 →t ≥0, L(F0) =
F0/s) with zero initial conditions (x(0) = x′(0) = 0).
x(s) = 1
k
ω2
n
s2 + 2ζωns + ω2n
F0
s = F0
k
A
s +
Bs + C
s2 + 2ζωns + ω2n

ω2
n = As2 + 2ζωns + ω2
n + Bs2 + Cs
A = lim
s→0 s
ω2
n
s

s2 + 2ζωns + ω2n
 = 1, B = −A = 1,C = −2ζωn
x(s) = 1
k
ω2
n
s2 + 2ζωns + ω2n
F0
s = F0
k
&
1
s −
s + 2ζωn
(s + ζωn)2 + ω2
d
'
x(s) = F0
k
&
1
s −
ζωn
(s + ζωn)2 + ω2
d
−
s + ζωn
(s + ζωn)2 + ω2
d
'
.
(3.11)
Noting that L−1(
s+a
(s+a)2+b2 ) = e−at cos bt and L−1(
b
(s+a)2+b2 ) = e−at sin bt,
x(t) = L−1x(s) = F0
k

1 −ζωn
ωd
e−ζωnt sin ωdt −e−ζωnt cos ωdt

.
Considering
that
sin(a + φ) = sin a cos φ + cos a sin φ =

1 −ζ 2 cos ωdt +
ζ sin ωdt →tan φ =

1 −ζ 2/ζ, the response of the system to a step load can
be evaluated as follows:
x(t) = F0
k
(
1 −e−ζωnt
1

1 −ζ 2 sin (ωdt + φ)
)
→φ = tan−1

1 −ζ 2
ζ
. (3.12)
Example2. Free vibrations with initial displacement x(0) = x0. (External force
F(t) = 0, initial velocity x′(0) = 0).
x(s) =
s + 2ζωn
(s + ζωn)2 + ω2
d
x0 =
(
ζωn
(s + ζωn)2 + ω2
d
+
s + ζωn
(s + ζωn)2 + ω2
d
)
x0
x(t) = x0e−ζωnt
1

1 −ζ 2 sin (ωdt + φ) →φ = tan−1

1 −ζ 2
ζ
.
(3.13)
Example 3. The continuous system is sampled at T[sec] discrete time inter-
vals. By substituting Euler’s approximation (s ≈(1 −z−1)/T) to the Laplace

78
STRUCTURAL DYNAMICS OF MACHINES
domain-based transfer function, the discrete transfer function of the system
can be evaluated in z domain.
(s = 1 −z−1
T
) = ω2
n
k
1
s2 + 2ζωns + ω2n
****
s= 1−z−1
T
(z−1) = ω2
n
k
1

1−z−1
T
2
+ 2ζωn

1−z−1
T

+ ω2n
(z−1) =
b0
z−2 + a1z−1 + a0
.
(3.14)
where b0 = T2ω2
n
k
, a1 = −2 (ζωnT + 1) , and a0 = 1 + 2ζωnT + T2ω2
n.
The vibration of the machine with a SDOF dynamics can be evaluated at
discrete time intervals as (z−1x(k) = x(k −1)),
(z−1) =
b0
z−2 + a1z−1 + a0
= x(k)
F(k)
$
z−2 + a1z−1 + a0
%
x(k) = b0F(k)
x(k −2) + a1x(k −1) + a0x(k) = b0F(k)
x(k) = 1
a0

−x(k −2) −a1x(k −1)

+ b0
a0
F(k)
(3.15)
where x(k) is the vibration of the structure when the machine is loaded with
force F(k) at time intervals t = kT →k = 0, 1, 2, ..., k. The difference equation
can be solved recursively at each time interval k. The approximate transfor-
mation methods from continuous to discrete time domain are listed below, and
the errors associated from each approximation are given in Figure 3.8.
Method
s
z
Integral approximations
Euler (Backward)
z −1
zT =1 −z−1
T
1
1 −Ts
ω(k) · T
Forward
z −1
T
=1 −z−1
z−1T
1 + Ts
ω(k −1) · T
Tustin (Trapezoidal)
2(z −1)
T(z + 1) = 2(1 −z−1)
T(1 + z−1)
2 + sT
2 −sT
T
2

ω(k −1) · T + ω(k)

Assuming that the external force is harmonic (i.e., can be represented by
sine or cosine functions or their combinations), we can write
¨x + 2ζωn ˙x + ω2
nx = ω2
n
k F0 sin(ωt).
(3.16)

3.4 STRUCTURAL VIBRATIONS IN MACHINING
79
Figure 3.8: Discrete approximation of continuous systems
with Euler (backward), forward, and trapezoidal (Tustin)
approximations.
Thus,
the
system
experiences
forced vibrations at the same fre-
quency ω of the external force, but
with a time or phase delay. Let
us assume that transient vibrations
caused by initial loading have dimin-
ished and the system is at steady-
state operation. Then,
x(t) = X sin(ωt + φ),
which is called frequency response of
the structure. It is mathematically
more convenient to use complex harmonic functions in forced vibrations. The
harmonic force can be expressed by F(t) = F0ejωt. The corresponding harmonic
response is x(t) = Xej(ωt+φ), and when this is substituted into the equation of
motion (3.16) we get the frequency response function (FRF) of the system as
follows:
(ω2
n −ω2 + j2ζωn)Xejφejωt = ω2
n
k F(t) = ω2
n
k F0ejωt
(ω) = X(ω)
F0(ω) = ω2
n
k
1
ω2n −ω2 + j2ζωn
.
(3.17)
Alternatively, the FRF of the system can be obtained by simply replacing the
Laplace operator (s = jω) in the transfer function (Eq. 3.10) which is equivalent
to obtaining the steady-state response of the system to harmonic excitation at
excitation frequency ω.
The resulting amplitude and phase of the harmonic vibrations are
|(ω)| =
****
X
F0
**** = ω2
n
k
1
√
(ω2n−ω2)2+(2ζωωn)2 = 1
k
1
√
(1−r2)2+(2ζr)2 ,
φ = tan−1 −2ζωωn
ω2n−ω2
= tan−1 −2ζr
1−r2 ,
(3.18)
respectively, where the excitation to natural frequency ratio is r = ω/ωn. Equa-
tion (3.18) is called the frequency response function (FRF), or receptance of the
SDOF structure, and its graphical illustration is shown in Figure 3.9. The FRF
((ω)) can be separated into real (G(ω)) and imaginary (H(ω)) components of
X
F0 ej(φ−α) as follows:
G(ω) =
1−r2
k[(1−r2)2+(2ζr)2],
H(ω) =
−2ζr
k[(1−r2)2+(2ζr)2],
(3.19)
and
(ω) = G(ω) + jH(ω).
Note that at resonance (ω = ωn, r = 1), G(ωn) = 0, H(ωn) = −1/(2kζ ).

80
STRUCTURAL DYNAMICS OF MACHINES
Figure 3.9: Frequency response function (FRF) of a SDOF
system.
The real and imaginary parts
of the transfer function are illus-
trated separately in Figure 3.10,
and by a polar plot in Figure 3.11.
At zero frequency crossing, the
real part is equal to the static
ﬂexibility (1/k). As the excitation
frequency approaches the natural
frequency (i.e., r = 1), the system
resonates, the amplitude of the
vibrations become maximum, and
the phase angle approaches −90
degrees. The time delay between
the excitation and response can be
evaluated by td = φ/ω at the har-
monic excitation frequency ω. If
the excitation frequency contin-
ues to increase, the phase angle
approaches −180 degrees, or the
delay
becomes
half
a
period
of excitation. The amplitude of
the vibrations decreases, because
the physical structure can not
respond to high-frequency distur-
bances. The damping ratio, stiff-
ness, and natural frequency can
be estimated from the transfer
function measured with a Fourier
analyzer. At zero excitation fre-
quency (ω = 0), the magnitude of
(ω), and the real receptance G(ω) are equal to the static ﬂexibility (1/k).
Care must be taken in reading this value at low frequency because of the poor
sensitivity of measurements taken with velocity and acceleration sensors. An
extrapolation of the transfer function from higher frequencies where the res-
onance levels off can be considered as an alternative method to estimate the
stiffness. Displacement sensors provide more accurate measurement of static
ﬂexibility. The maximum magnitude of (ω) occurs at ω = ωn

1 −2ζ 2. The
real receptance G(ω) has two extrema at
ω1 = ωn

1 −2ζ →Gmax =
1
4kζ (1−ζ ),
ω2 = ωn

1 + 2ζ →Gmin = −
1
4kζ (1+ζ ).
(3.20)
In practical machinery, the external excitations are usually periodic but
not harmonic. Any periodic force can be represented by its harmonic com-
ponents. When the external force F(t) (i.e., milling force) is periodic with a

3.4 STRUCTURAL VIBRATIONS IN MACHINING
81
Figure 3.10: FRF of a SDOF
system represented by its real
and imaginary parts.
period of τ = 2π/ω (i.e., tooth period), it can be expanded in a Fourier series as
follows:
F(t) = a0
2 +
∞

n=1
an cos nωt +
∞

n=1
bn sin nωt,
(3.21)
where n is the harmonic of the fundamental frequency ω. The exact solution of
Fourier coefﬁcients can be found by taking continuous integrals, which require
a mathematical representation of the periodic forcing function F(t). Because
practical external excitations, such as milling forces, have periodic but irregular
wave forms, a discrete numerical technique is used to calculate the Fourier
coefﬁcients. Assuming that the periodic excitation is uniformly digitized at T
[s] intervals for N times per period τ (i.e., τ = NT) we have
a0 =
2
N
+N
i=1 Fi,
an = 2
N
+N
i=1 Fi cos n2πti
τ
, n = 1, 2, 3, . . . ,
bn = 2
N
+N
i=1 Fi sin n2πti
τ
, n = 1, 2, 3, . . . .

82
STRUCTURAL DYNAMICS OF MACHINES
Figure 3.11: FRF of a SDOF system represented in polar coor-
dinates.
In experimental analysis, Fi
corresponds to the ith sample of
the force by the Fourier analyzer.
An alternative discrete Fourier
series representation of the peri-
odic function is
F(t) =
N

n=0
cne−jαnejnωt, (3.22)
where
cn =

a2n + b2n,
αn = tan−1 bn
an
.
The plot of cn, αn versus fre-
quency is called a Fourier spec-
trum. For a periodic but nonhar-
monic excitation, the steady-state
response of an SDOF system can
be calculated by superposing the vibration produced by each harmonic compo-
nent of the periodic excitation as follows:
x(t) =
N

n=0
cn
k

(1 −n2r2)2 + (2ζnr)2 ej(nωt−αn−φn).
(3.23)
In most practical cases, the external periodic excitation can be approximated
by only its ﬁrst four to ﬁve harmonic (n) components, and the higher harmonics
usually may not have sufﬁcient energy to cause considerable inﬂuence on the
vibrations. Milling forces, which are periodic at tooth passing frequency, can be
represented by Fourier series components. If a harmonic of the milling force is
close to one of the natural modes of the structure, an alternative spindle speed
may be selected to avoid forced vibrations.
3.4.2
Oriented Frequency Response Function
The static and dynamic deformations between the tool and cut surface deter-
mine the accuracy and reliability of the manufactured component. A typical
machine tool can be described by a series of masses interconnected by springs
in different directions [61]. The resultant cutting force is transmitted to the
machine via the springs and masses. The superposition of the displacements
produced by all springs in the direction perpendicular to the cut surface deter-
mine the resulting dimensional accuracy and chip volume removed from the
machined part.
Consider a common mass (m) connected to the rigid ground by a series of
springs as shown in Figure 3.12. Each spring (i) and the mass deﬁne an SDOF
system in each independent direction indicated by its angular orientation (θi)
from the cut surface direction y. The resultant cutting force F has angle β with

3.4 STRUCTURAL VIBRATIONS IN MACHINING
83
x3
k 32
k31
k12
x1
k 11
x4
k 4
2
x
k2
y
F
m
4
θ
3
θ
2
θ
1
θ
β
Figure 3.12: Cross-transfer function of oriented displace-
ment (y) and force (F).
the cut surface direction y. The dis-
placement produced in direction y by
all springs that feel the force F is
required.
The force transmitted to spring i
is
Fi = F cos(θi −β).
If the transfer function in each
spring
direction
is
i(ω) = xi/Fi,
the corresponding displacement of
spring i is
xi = Fi(ω) = F cos(θi −β)i(ω).
The displacement in direction y pro-
duced by spring i is
yi = xi cos θi
= F cos θi cos(θi −β)(ω).
Superposing
the
components
of
vibrations xi in direction y gives
the resultant vibrations. The FRF
between the cutting force F and the resultant vibration y, called the cross
or oriented FRF by Koenigsberger and Tlusty [61], is
yF(ω) = y
F =
4

i=1
udii(ω),
(3.24)
where udi = cos θi cos(θi −β) is the directional factor in direction i. When the
mass is neglected, the preceeding formulation can be used to calculate the
resultant static deformation in direction y.
3.4.3
Design and Measurement Coordinate Systems
There are three coordinate systems in the analysis of machine tool structures
that are modeled by a multiple number of spring, damping, and mass elements.
These are design, local, and modal coordinate systems. The masses, spring,
and damping constants may be deﬁned in any of the three coordinate systems,
depending on the convenience of either computation or physical interpretation.
The modal coordinates do not have any physical meaning. They are used to
analyze the strength and behavior of the whole structure at a particular natural
frequency, as explained in this section.
The design and local coordinates are explained by the use of a simple struc-
ture represented by two springs connected in a series (see Fig. 3.13). Assume
that forces F1 and F2 are applied on the two connected springs, and the dis-
placements are measured at ﬁxed locations (i.e., at the initial points 1 and 2

84
STRUCTURAL DYNAMICS OF MACHINES
F2
F1
x1
x2
ka
y1
s1
kb
y2
s2
(a) Connected springs
(b) Design coordinates
(c) Local coordinates
Figure 3.13: Displacements and forces deﬁned in local and design coordinates: (a)
connected springs; (b) design coordinates; (c) local coordinates.
where the springs were undeformed). The displacements are x1 and x2, and the
reference points for the measurements are ﬁxed. The displacements x1 and x2
are deﬁned in measurement or local coordinates. However, when the relative
elongation of each spring between its two ends is measured, the corresponding
displacement is deﬁned in design coordinates. In other words, whereas the local
displacement represents the absolute change in the coordinate of a point on the
structure, the design displacement represents elongation or compression of an
individual spring [111].
Let the forces be S1 and S2 and the displacements be y1 and y2 in design
coordinates. Thus,
S1 = kay1,
S2 = kby2,
or, in general matrix form,

S1
S2

=
ka
0
0
kb
	 
y1
y2

,
where ka and kb are the design stiffness values for individual springs. For
simplicity, we can use the following matrix notation:
{S} = [Ky]{y},
(3.25)

3.4 STRUCTURAL VIBRATIONS IN MACHINING
85
where {S} and {y} are force and displacement vectors and [Ky] is the stiffness
matrix in the design coordinates. The relation between the design and local
displacements can be expressed as
x1 = y1 →y1 = x1,
x2 = y1 + y2 →y2 = −x1 + x2,
or

y1
y2

=
 1
0
−1
1
	 
x1
x2

→{y} = [T]{x},
(3.26)
where matrix [T] is the transformation matrix between the local and design
displacements. A similar expression can be written for the forces, that is,
S2 = F2 →F2 = S2,
S1 = F1 + F2 →F1 = S1 −S2,
or
{F} = [T]T{S}.
(3.27)
The stiffness, mass, and damping elements can be transformed from one
coordinate system to another by using the transformation matrix [T]. Substi-
tuting Eqs. (3.25) and (3.26) into (3.27) yields
{F} = [T]T{S} = [T]T[Ky]{y} = [T]T[Ky][T]{x}.
Noting that {F} = [Kx]{x}, we can obtain the local stiffness matrix from the
design coordinates as
[Kx] = [T]T[Ky][T].
(3.28)
Similar transformations can be applied to the damping and mass matrices,
that is, [Cx] = [T]T[Cy][T], [Mx] = [T]T[My][T].
Note that, depending on the displacements and forces, the units may be dif-
ferent in the design and local coordinates [111]. For example, the displacements
and forces may be deﬁned in [mm] and [N] in local coordinates at speciﬁc loca-
tions of a structure, whereas the displacements may be angular if produced by
torsional loads and springs in the design coordinates. Although all the exper-
imental measurements are done in local coordinates, the design engineer is
interested in determining individual weak elements deﬁned in the design coor-
dinates.
3.4.4
Analytical Modal Analysis for Multi–Degree-of-Freedom
Systems
Machine tools have multiple degrees of freedom (DOF) in various directions.
The vibrations between the cutting tool and generated workpiece surface are
the main interest, because they affect the accuracy of the surface ﬁnish, the
chip thickness removal, and cutting forces exciting the machine tool. In the

86
STRUCTURAL DYNAMICS OF MACHINES
k 3
k 2
k 1
3
c
1
c
2
c
m 2
F2
2
x +
m1
F1
1
x +
m 2
F2
2
x +
x  < x
1
2
k  x2
3
c  x2
3
m1
F1
1
x +
x  > x
1
2
k  x
1
1
c  x1
1
1
-k  (x  -x  )
2
2
1
k  (x  -x  )
2
2
1
-c  (x  -x  )
2
2
1
c  (x  -x  )
2
2
(a)
(b)
m1
m2
m1
m2
m1
m2
λ 1
λ 2
1
1
Stationary
Mode #1
Mode #2
Figure 3.14: (a) Mathematical model of a sample 2-DOF system; (b) mode
shapes of a 2-DOF system.
following, the basic principles of modal analysis are reviewed by using the
2-DOF system shown in Figure 3.14 as an example [89].
From Newton’s second law, the equations of motion for masses m1 and m2
in local or measurement coordinates (x1, x2) can be written as
m1 ¨x1 = F1 −c1 ˙x1 −c2( ˙x1 −˙x2) −k1x1 −k2(x1 −x2),
m2 ¨x2 = F2 −c2( ˙x2 −˙x1) −k2(x2 −x1) −k3x2 −c3 ˙x2.

3.4 STRUCTURAL VIBRATIONS IN MACHINING
87
Rearranging the equations in matrix form yields
[Mx]{ ¨x} + [Cx]{ ˙x} + [Kx]{x} = {F},
(3.29)
where the mass, stiffness, and damping matrices are
[Mx] =
m1
0
0
m2
	
,
[Kx] =
 k1 + k2
−k2
−k2
k2 + k3
	
,
[Cx] =
 c1 + c2
−c2
−c2
c2 + c3
	
,
respectively. The displacement vector {x} and force vector {F} are deﬁned as
{x} =

x1(t)
x2(t)

,
{F} =

F1(t)
F2(t)

.
The solution to the preceeding set of differential equations is ﬁrst obtained
for an undamped free vibration case (i.e., c1 = c2 = c3 = 0 and {F} = {0}) as
follows:
[Mx]{ ¨x} + [Kx]{x} = {0}.
(3.30)
The undamped system has a general solution of
{x(t)} = {X} sin(ωt + ψ),
where {X} and ψ are constants and ω is the natural frequency of the system.
Substituting the displacement vector (x{t}) and its second derivative as an
acceleration vector { ¨x} = −ω2{X} sin(ωt + ψ), Eq. (3.30) becomes
([Kx] −ω2[Mx]){X} = {0},
(3.31)
or
k1 + k2 −ω2m1
−k2
−k2
k2 + k3 −ω2m2
	 
X1
X2

=

0
0

.
The determinant of these simultaneous algebraic equations must be zero for
a nontrivial solution. Letting s = ω2, we have
****
k1 + k2 −sm1
−k2
−k2
k2 + k3 −sm2
**** = 0,
or
sn + a1sn−1 + · · · + an = 0,
(3.32)
where n is the system’s number of degrees of freedom. For the 2-DOF system
example,
s2 −
k1 + k2
m1
+ k2 + k3
m2

s + k1k2 + k2k3 + k1k3
m1m2
= 0.
This polynomial has two real values of s: s1 = ω2
n1 and s2 = ω2
n2, where ωn1
and ωn2 are the natural frequencies of the system. Superposing the contribution
of each solution or mode, we get

x1(t)
x2(t)

1
=

X1
X2

1
sin(ωn1t + 1) +

X1
X2

2
sin(ωn2t + 2),
(3.33)

88
STRUCTURAL DYNAMICS OF MACHINES
where {P}1,2 = {X1 X2}T
1,2 are the eigenvectors or mode shapes associated with
the fundamental (ωn1) and second natural frequencies (ωn2), respectively. Xik
is the displacement of node i, and k is the phase contributed by the natural
mode k. The solution of Eq. (3.31) gives only the ratio of amplitudes at each
node. It is customary to normalize them with respect to a reference coordinate
(i.e., X2). Substituting ωn1 and ωn2 in Eq. (3.31) and rearranging yields

X1
X2

1
= λ1 =
k2
k1+k2−ω2
n1m1 = k2+k3−ω2
n1m2
k2
,

X1
X2

2
= λ2 =
k2
k1+k2−ω2
n2m1 = k2+k3−ω2
n2m2
k2
.
Substituting λ1,2 = (X1/X2)1,2 and setting X21 = Q1 and X22 = Q2 into the tran-
sient vibrations (Eq. 3.33) gives

x1(t)
x2(t)

=
λ1
λ2
1
1
	 
Q1 sin(ωn1t + 1)
Q2 sin(ωn2t + 2)

,
or, in vector form,
{x(t)} = [{P}1 {P}2]

 q1(t)
q2(t)

= [P]{q(t)},
(3.34)
where {P}1 = {λ1 1}T and q1 are the ﬁrst mode shape and modal displacement
contributed by the ﬁrst mode. The physical interpretation of a mode shape
can be explained from Figure 3.14b. The natural mode number causes one
unit of displacement at mass m2 and λ1 units at mass m1. [P] is the complete
modal matrix, which has dimension [n × n] for an n degrees of freedom system.
However, the modal matrix does not have to be square. The number of rows
is equal to the number of coordinate points on the machine, and each column
represents a mode.
Because the modes are orthogonal to each other, they have the following
properties:
{P}T
1 [Mx]{P}2 = 0,
whereas
{P}T
1 [Mx]{P}1 = mq1,
where mq1 is the modal mass associated with the ﬁrst mode. When the orthog-
onality principle is applied similarly to the remaining mode shapes, the local
mass and stiffness matrices are transformed into modal coordinates as follows:
[Mq] = [P]T[Mx][P],
[Kq] = [P]T[Kx][P].

(3.35)
The resulting modal mass ([Mq]) and modal stiffness ([Kq]) matrices are diag-
onal, and each diagonal element represents the modal mass or modal stiffness
associated with a mode. Note that when the system has a proportional damp-
ing (i.e., [Cx] = α1[Mx] + α2[Kx], where α1 and α2 are empirical constants), the

3.4 STRUCTURAL VIBRATIONS IN MACHINING
89
transformed modal damping matrix [Cq] is also diagonal, that is,
[Cq] = [P]T[Cx][P].
(3.36)
By applying modal transformations to Eq. (3.29), we can obtain the equations
of motion in modal coordinates as follows:
mq1
0
0
mq2
	 
 ¨q1(t)
¨q2(t)

+
cq1
0
0
cq2
	 
 ˙q1(t)
˙q2(t)

+
kq1
0
0
kq2
	 
q1(t)
q2(t)

=

0
0

,
or, in vector notation,
[Mq]{ ¨q} + [Cq]{ ˙q} + [Kq]{q} = {0}.
(3.37)
The equations of motion in modal coordinates are uncoupled and can be
solved in a manner similar to that for the SDOF systems. If we consider the
free vibrations of the ﬁrst mode as an example,
mq1 ¨q1 + cq1 ˙q1 + kq1q1 = 0,
it has a solution of
q1(t) = Q1e−ζ1ωn1t sin(ωn1

1 −ζ 2
1 t + 1),
where the modal damping ratio is ζ1 = cq1/(2

kq1mq1) and Q1 is found from
initial conditions. After solving for the displacements in modal coordinates, the
vibrations in local coordinates can be easily obtained by the modal transforma-
tion Eq. (3.34) (i.e., {x(t)} = [P]{q}). When the transformation is applied to the
2-DOF system example, the local displacements become

x1(t)
x2(t)

=
λ1
λ2
1
1
	 
q1
q2

.
By applying the same modal transformations to both sides of the equations of
motion for forced vibrations Eq. (3.29), the force vector {F} can be transformed
to modal coordinates [111] as follows:
{R} = [P]T{F}.
(3.38)
The forced vibration expressions in modal coordinates become
[Mq]{ ¨q} + [Cq]{ ˙q} + [Kq]{q} = {R}.
(3.39)
When the transformations are applied to the 2-DOF system example, we get
mq1 ¨q1 + cq1 ˙q1 + kq1q1 = R1,
mq2 ¨q2 + cq2 ˙q2 + kq1q2 = R2,
which are uncoupled differential equations and can be solved in a manner
similar to that for SDOF systems as explained earlier. The FRFs in modal

90
STRUCTURAL DYNAMICS OF MACHINES
coordinates are expressed in a similar fashion to SDOF systems (Eq. 3.18) for
each mode k as follows:
|q,k(ω)| =
****
qk
Rk
**** =
1
kqk
1
"$
1−r2
k
%2
+(2ζkrk)2
,
φk = tan−1 −2ζkrk
1−r2
k ,
(3.40)
where the frequency ratio is rk = ω/ωnk. For a 2-DOF example, the modal
displacements can be expressed as

q1(t)
q2(t)

=
q1
0
0
q2
	 
R1
R2

.
Using a generalized matrix form, we have
{q} = [q]{R},
(3.41)
where q is the diagonal modal FRF matrix. Substituting {R} = [P]T{F} and
{x} = [P]{q} into Eq. (3.41), we obtain the vibrations in local coordinates as
follows:
{x} = [P][q][P]T{F},
(3.42)
or
{x} =

n

k=1
{P}k{P}T
k q,k

{F},
(3.43)
where {P}k is the eigenvector for mode k, and n is the number of degrees of
freedom. Thus, the harmonically forced vibrations for each coordinate can be
calculated by using the mode shapes {P}k, modal transfer functions qk, and
the external force vector {F}. If the external force is {F} = {F1 sin(ωt) 0}, the
measured vibrations at local coordinates x1 and x2 will be
x1(ω)
F1(ω) = λ2
1q1 + λ2
2q2,
x2(ω)
F1(ω) = λ1q1 + λ2q2.
3.4.5
Relative Frequency Response Function between Tool
and Workpiece
Relative vibrations between the cutting tool and generated surface deter-
mine the accuracy of the machined workpiece and the dynamic loading of
the mechanical structures involved [61]. The cutting forces can be predicted
for a given tool geometry, material constants, and cutting conditions as pre-
sented in Chapter Two. The cutting forces are applied on both the cutting
tool and the workpiece with equal amplitudes but in opposite directions,
and the resulting relative displacements between the two structures can be

3.4 STRUCTURAL VIBRATIONS IN MACHINING
91
xn
xw
xt
x1
x2
xn-1
tool
workpiece
Figure 3.15: Transfer function between a tool and workpiece
on the machine tools.
determined [111]. Consider the
general machine tool structure
shown in Figure 3.15. The rel-
ative displacement between the
tool and workpiece is (xt −xw),
where xt and xw are displacements
of the tool and workpiece, respec-
tively. The cutting forces acting
on the tool (Ft) and the work-
piece (Fw) have the same magni-
tude of F0, but they have opposing
directions (i.e., Ft = −Fw). The dis-
placement and force vectors for an
n-DOF system can be expressed in
local coordinates [111] as follows:
{x} = {x1, x2, . . . , xt;
xw, . . . , xn},
{F} = {0, 0, . . . , 1;
−1, . . . , 0}F0.
(3.44)
The equation of motion for the system is
[Mx]{ ¨x} + [Cx]{ ˙x} + [Kx]{x} = {F},
where the local mass [Mx], damping [Cx], and stiffness [Kx] matrices are square
with dimensions [n × n], and the force vector {F} has a dimension of [n × 1].
The solution of the eigenvalue problem leads to a modal matrix [P] with a
dimension of [n × n] as follows:
[P] =
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
P11
P12 . . . P1t
P1w . . . P1n
P21
P22 . . . P2t
P2w . . . P2n
...
...
...
...
...
Pt1
Pt2 . . . Ptt
Ptw . . . Ptn
Pw1
Pw2 . . . Pwt
Pww . . . Pwn
...
......
......
Pn1
Pn2 . . . Pnt
Pnw . . . Pnn
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
,
or
[P] = [{P}1, {P}2, . . . , {P}t, {P}w, . . . {P}n],
where each column represents a mode shape {P} of the n-DOF system structure.
From the modal coordinate transformation equation (x = [P]{q}), the tool and
workpiece displacements can be calculated by using the associated rows t and
w of the above modal matrix:
{xt} = {Pt1 Pt2 . . . Ptt Ptw . . . Ptn}{q1 q2 . . . qt qw . . . qn}T,
{xw} = {Pw1 Pw2 . . . Pwt Pww . . . Pwn}{q1 q2 . . . qt qw . . . qn}T.
(3.45)

92
STRUCTURAL DYNAMICS OF MACHINES
Substituting the modal force ({R} = [P]T{F}) into the modal displacement vec-
tor ({q} = [q]{R}), and remembering that all elements of the force vector {F}
are zero, with the exception of the two corresponding to coordinates xt and xw,
yields
{q} = [q]
⎧
⎪⎪⎪⎨
⎪⎪⎪⎩
Pt1 −Pw1
Pt2 −Pw2
...
Ptn −Pwn
⎫
⎪⎪⎪⎬
⎪⎪⎪⎭
F0 =
⎧
⎪⎪⎪⎨
⎪⎪⎪⎩
q1(Pt1 −Pw1)
q2(Pt2 −Pw2)
...
qn(Ptn −Pwn)
⎫
⎪⎪⎪⎬
⎪⎪⎪⎭
F0.
Substitution of these modal displacements into Eq. (3.45) gives the local dis-
placements of the tool and workpiece, respectively:
xt = F0
+n
i=1 qiPti(Pti −Pwi),
xw = F0
+n
i=1 qiPwi(Pti −Pwi).
(3.46)
When the machine tool structure is excited by a harmonically varying force at
the cutting point, the relative FRF between the tool and workpiece becomes
xt(ω) −xw(ω)
F0(ω)
=
n

i=1
qi(Pti −Pwi)2.
(3.47)
If the 2-DOF system is assumed to represent the tool and workpiece struc-
tures (i.e., x1 ≡xt and x2 ≡xw), the force vector becomes {F} = {1 −1}F0. The
relative FRF between the tool and the workpiece in this particular example is
found to be
x1 −x2
F0
= q1(λ1 −1)2 + q2(λ2 −1)2,
according to the outlined procedure.
3.5
MODAL TESTING OF MACHINE STRUCTURES
The FRF of mechanical structures can be measured by using modal testing
techniques. The structure is excited by exerting force, and the response is
measured with vibration sensors as shown in Figure 3.16. Sample impact test
measurements and a ﬂow chart of the signal-processing algorithm used in eval-
uating the FRF of structures are shown in the Figure 3.17. The theory of signal
processing, excitation techniques and instruments, and practical difﬁculties in
measuring the FRF of mechanical structures are explained in the following
sections.
3.5.1
Theory of Frequency Response Testing
Consider that the excitation force applied to the structure is F(t), and the
resulting vibration is x(t). The Fourier transforms of both force and vibration

3.5 MODAL TESTING OF MACHINE STRUCTURES
93
Accelerometer
Hammer
Acceleration
Force
Figure 3.16: Measurement of FRFs with the use of a hammer instrumented with a force sensor
and an accelorometer attached to an end mill.
can be evaluated in a continuous time domain as follows:
F {x(t)} =
 +∞
−∞
x(t)e−jωtdt, F {F(t)} =
 +∞
−∞
F(t)e−jωtdt.
(3.48)
However, applied force and the resulting vibrations are measured during
the limited measurement time tl,
X( jω) = 1
tl
 tl
0
x(t)e−jωtdt, F( jω) = 1
tl
 tl
0
F(t)e−jωtdt,
(3.49)
where X( jω) and F( jω) are the power spectra of vibration and force, respec-
tively. The vibration and force are measured at discrete time intervals (Ts) by
using data acquisition boards attached to a computer or a dedicated Fourier
analyzer. If we wish to have a frequency resolution of ωr in the measurement,
it is necessary to collect measurements for a total time of tl = 2π/ωr with N
number of data samples,
N = tl
Ts
, −→tl = 2π
ωr
= NTs.
(3.50)
The highest-frequency content of the measured signal is equal to Nyquist
frequency as follows:
ωm = 2π/Ts
2
= 1
2
2πN
tl
= N
2 ωr.
(3.51)

94
STRUCTURAL DYNAMICS OF MACHINES
The continuous integrals given in Eq. (3.49) must be replaced by their discrete
time equivalents, as follows:
t →nTs, ω →kωr, dt →Ts
X(kωr) = 1
tl
N−1

n=0
x(nTs)e−jkωrtTs =
Ts
NTs
N−1

n=0
x(nTs)e−jk 2π
NTs nTs
= 1
N
N−1

n=0
x(nTs)e−jk 2π
N n,
k = 0, 1, . . . , N
2
Alternatively, the vibration and force can be decomposed into their real and
imaginary parts as follows:
X(kωr) = 1
N
N−1
+
n=0
x(nTs)
.
cos 2πk
N n −j sin 2πk
N n
/
F(kωr) = 1
N
N−1
+
n=0
F(nTs)
.
cos 2πk
N n −j sin 2πk
N n
/
⎫
⎪⎪⎬
⎪⎪⎭
,
k = 0, 1, . . . , N
2 , (3.52)
where X(kω) and F(kω) are the discrete Fourier transforms or spectra of mea-
sured vibration (x(nTs)) and force (F(nTs)), respectively. Here, the fundamental
frequency is ωr = 2π fr = 2π/tl, n corresponds to sampling counter, and k is the
frequency counter. X(k = 0) and F(k = 0) correspond to the average values of
vibration and force measurements, respectively. The vibration and force mea-
surements can be mathematically reconstructed by substituting spectra into
Fourier series representation of the signals.
x(t) =
N/2

k=0
X(kωr)e−jkωrt, F(t) =
N/2

k=0
X(kωr)e−jkωrt, t = (0, 1, .., N)Ts. (3.53)
As can be seen from Eq. (3.52), spectra X(kω) and F(kω) have real and imag-
inary parts, and their complex conjugates are X ∗(kω) and F∗(kω), respectively.
The FRF of the machine is ( jω), and can be expressed by dividing the
Fourier transform of vibration x(t) by the Fourier transform of force F(t) as
follows:
( jω) = X( jkωr)
F( jkωr) = X( jω)
F( jω) ,
(3.54)
where ( jω) indicates that the spectra are complex numbers and ω = kωr.
Eq. (3.54) is not used in evaluating the FRF from measurements because of
the presence of noise in the sensor signals. Assuming that the spectrum of
the vibration measurement noise is N( jω) and the force measurement noise is
M( jω), the measured FRF (m( jω)) will be
m( jω) = X( jω) + N( jω)
F( jω) + M( jω),
(3.55)
which is not as accurate as the ideal, noise-free system given in Eq. (3.54).
The inﬂuence of the noise can be attenuated by introducing the cross-power

3.5 MODAL TESTING OF MACHINE STRUCTURES
95
spectrum [50]. The cross-power spectrum (SxF( jω)) of vibration and force is
obtained by taking Fourier transforms of the two measurements separately
and multiplying them as follows:
SxF( jω) = X( jω) · F∗( jω),
(3.56)
where F∗( jω) is the complex conjugate of force spectrum F( jω). Multiplying
both sides of Eq. (3.55) by the complex conjugate of the force measurement
spectrums shown in the denominator gives
m( jω) = X( jω) + N( jω)
F( jω) + M( jω) × F∗( jω) + M∗( jω)
F∗( jω) + M∗( jω)
= X( jω)F∗( jω) + X( jω)M∗( jω) + N( jω)F∗( jω) + N( jω)M∗( jω)
F( jω)F∗( jω) + F( jω)M∗( jω) + M( jω)F∗( jω) + M( jω)M∗( jω).
(3.57)
The actual force exerted on the structure and the vibration are not correlated
to noise terms in the measurements; hence, the cross-power spectrum terms
containing noise must be zero.
X( jω)M∗( jω) = N( jω)F∗( jω) = N( jω)M∗( jω) ≃0.
F( jω)M∗( jω) = M( jω)F∗( jω) ≃0
The measured FRF is now reduced to
m( jω) =
X( jω)F∗( jω)
F( jω)F∗( jω) + M( jω)M∗( jω)
(3.58)
=
SxF( jω)
SFF( jω) + Smm( jω),
where
the
cross-power
spectrum
of
vibration
and
force
is
SxF( jω) =
X( jω)F∗( jω), the autospectrum of force is SFF( jω) = F( jω)F∗( jω), and the
autospectrum of force sensor signal noise is Smm( jω) = M( jω)M∗( jω). By divid-
ing both sides of Eq. (3.58) by the autospectrum of force, (SFF( jω)) yields
m( jω) =
( jω)
1 + Smm( jω)/SFF( jω),
(3.59)
where ( jω) is the desired FRF of the structure. Eq. (3.59) indicates that if the
noise-to-force signal ratio is much smaller than one ( Smm( jω)
SFF ( jω) ≪1), the measured
FRF will be close to the actual FRF, that is, m( jω) ≃( jω). Thus, instead of
simply dividing the Fourier spectra of vibration by force, as in Eq. (3.54), the
cross-power spectrum of the measurements is divided by the autospectrum of
force in measuring FRFs in practice.
( jω) ≃SxF( jω)
SFF( jω).
(3.60)
To further attenuate the noise and smooth out the measurements, averages
of several power spectra are used in practice. Typically, an average of ten

96
STRUCTURAL DYNAMICS OF MACHINES
measurements may be sufﬁcient to obtain a reliable FRF of a system.
1( jω) =
1
Nm
Nm
+
n=1

X( jω) · F∗( jω)

1
Nm
Nm
+
n=1

F( jω) · F∗( jω)

+
1
Nm
Nm
+
n=1

M( jω) · M∗( jω)

=
SxF( jω)
SFF( jω) + Smm( jω)
,
(3.61)
where SxF( jω) is the average cross-power spectrum of displacement and force,
and SFF( jω) is the average power spectrum of force, respectively.
Alternatively, we could have used the power spectrum of the vibration by
multiplying Eq. (3.55) by X ∗( jω) and obtain FRF as follows:
2( jω) = Sxx( jω) + Snn( jω)
SxF( jω)
.
(3.62)
If the measurements are made under ideal conditions and the structure is
linear, both Eqs. (3.61) and (3.62) should give the same FRF value, ( jω) =
1( jω) = 2( jω). The accuracy of the measurement carried out can be checked
by observing coherence function (γ 2
xF), which is deﬁned by the ratio of the two
FRF estimates as follows:
γ 2
xF = 1( jω)
2( jω) =
SxF( jω)SxF( jω)
[SFF( jω) + Smm( jω)][Sxx( jω) + Snn( jω)]
.
If the products of noise and signal terms are zero, the coherence function
must be unity, and 1( jω) = 2( jω). If the coherence function is unity at fre-
quency ω, then the vibrations recorded at this frequency are due to applied
input force. If the coherence is zero, then the vibrations recorded are not due to
the applied force but to other sources; hence, the measurement is not accept-
able. The coherence function of the measurement is evaluated by the following:
γ 2
xF =
***SxF( jω)
***
2
SFF( jω)Sxx( jω)
,
(3.63)
where all spectra contain the measured signals that have noise buried in them.
The coherence function (Eq.3.63) is evaluated in modal tests, and the quality of
the measurements is assessed by observing the deviation of coherence function
from the unity. Alternatively, it is important to compare the power spectra of
the applied force and resulting vibrations as well. If the power spectrum of
the applied force is close to being zero where the vibration spectra show large
peaks due to the presence of natural frequency, again the measurement is not
acceptable because their ratio (i.e., FRF) will have inﬁnite ﬂexibility at this
point, which is not possible in reality.

3.5 MODAL TESTING OF MACHINE STRUCTURES
97
3.5.2
Experimental Procedures in Modal Testing
The structure is excited either by using shakers or impact hammers. Shakers
can deliver force with a controlled amplitude and frequency by using feedback-
controlled ampliﬁers. The controller can deliver sinusoidal or random forces
through its reciprocating shaft attached to the structure via a ﬂexible bar.
A force sensor is inserted between the reciprocating shaft of the shaker and
ﬂexible bar. Typically, piano wire is used as a ﬂexible bar, so that the ﬂexibility
of the connection system does not inﬂuence the structural parameters of the
measured machine. If the machine has a play, such as in the spindle or feed
drives, the structure is preloaded so that it remains in a linear elastic zone
during measurements. Otherwise, the structure does not move when the force
is applied at certain frequencies. The excitation force can have sinusoidal or
random waveform. If sinusoidal force is used, the system must be excited at one
frequency, and the ratio of displacement and force magnitudes, and the phase
of the vibration relative to the force must be measured at each frequency.
The procedure must continue until the frequency range of interest, where the
natural modes lie, is covered. Some shakers come with a controller that can
sweep all the desired frequencies.
Alternatively, an impact hammer instrumented with a force transducer can
be used in exciting the machine (see Fig. 3.16). Although electromagnetic or
electrodynamic shakers can deliver force at the desired frequency and ampli-
tude, it is more time consuming to set them up on the machine. Impact ham-
mers are much easier and quicker to set up, but at the expense of less accurate
excitation of the machine structure at the desired frequency. Whereas machine
builders can use shakers and impact hammers together for a comprehensive
analysis of the machines, shop engineers usually have to use an impact ham-
mer for quick identiﬁcation of machine tool dynamics, so that chatter vibrations
can be avoided by selecting proper speeds. The vibration of the machine can be
measured by using an accelerometer or a noncontact displacement sensor. An
accelerometer can be attached to the machine by using wax, glue, magnet, or
screw. The lighter the structure is, the smaller the mass of the accelerometer
should be to avoid adding extra mass to the system. When the accelerometer is
used, the measured FRF will be a( jω) =
..x/F. To convert the FRF from accel-
eration to displacement, the measurement made with the accelerometer must
be divided by ( jω)2, that is, ( jω) = [
..x/( jω)2]/F. Note that the acceleration
and displacement has the following relationship if the excitation is harmonic:
x(t) = Xejωt, d2
dt2 x(t) =
..x(t) = ( jω)2Xejωt. Noncontact displacement sensors can
be capacitance, inductive, or laser type. Although laser displacement sensors
can be quite accurate with a linear response over a wide frequency range
within one-centimeter distance, they are costly and time consuming to set up
on the machine. Capacitive or inductive sensors have less frequency bandwidth
and a linear response only within a millimeter displacement range. However,
vibration amplitudes are typically less than a millimeter; hence, capacitive or
inductive displacement sensors are widely used in practice, especially at the

98
STRUCTURAL DYNAMICS OF MACHINES
low-frequency modes where the accelerometer is not effective because of the
scaling of the measurements by ( jω)2.
If an impact hammer is used, a force waveform similar to a half sine wave
is exerted on the structure. The magnitude and duration of the force waveform
depends on the mass and tip of the hammer. Larger hammers provide force
with a long time duration, which is useful to excite large structures with low
natural frequencies. Small hammers provide a more narrow force waveform
with less energy; hence, they are suitable to excite lighter structures having
higher natural frequencies. Tips can be screwed to the force sensor attached
to the impact hammer. Tip materials can range from hard steel, aluminum,
bronze, polyvinyl chloride, and rubber. The harder the tip is, the narrower the
force waveform will be; hence, providing a larger excitation frequency range.
Softer tips provide longer contact with the structure and provide a smaller
frequency excitation range.
The impact-testing technique requires preprocessing of the hammer force
and vibration signal measurements before their spectra are evaluated. The
contact time between the hammer and the structure is typically very short,
and signiﬁcantly shorter than the duration of machine vibrations picked up
by the vibration sensors. The force signal can be box windowed by setting the
box amplitude to unity during the duration of the contact force, and zero at
the remaining time. The box window ensures the elimination of noise after
the contact force is zero. However, this technique creates distortion of the
Fourier transform; hence, an alternative method that has smoother decay to
zero is preferred. The force signal is multiplied by unity during its duration
and tapers off to zero with an exponential function that has a duration of one-
sixteenth of the total sample time. The vibration measurement must also be
multiplied by an exponentially decaying window so that the vibrations diminish
within the measured time. In addition, if the vibrations die out long before the
measurement ends, the remaining noise may have a poor effect on the signal
processing. The exponential window typically decays from unity to 0.05 in the
total sample time. Typical force and vibration measurements, along with the
signal-processing ﬂow diagram, are given in Figure 3.17.
3.6
EXPERIMENTAL MODAL ANALYSIS FOR
MULTI–DEGREE-OF-FREEDOM SYSTEMS
Transfer functions of existing multi–degree-of-freedom (MDOF) systems are
identiﬁed by structural dynamic tests. The physical machine is modeled by
discrete lumped masses connected with linear and/or torsional springs. Good
engineering judgment and experience must be applied to the observation of the
physical structure and the evaluation of its technical drawing. Further reading
and measurement experience are necessary to acquire advanced knowledge in
the area. The reference books from Ewins [44] and training courses provided
by the manufacturers of Fourier analyzers and commercial modal analysis
software systems are useful.

3.6 EXPERIMENTAL MODAL ANALYSIS FOR MULTI–DEGREE-OF-FREEDOM SYSTEMS
99
ADC
Anti-
aliasing
Filter
8th  Order Bessel 12.5 kHz
Autospectrum
Sff = F(j ) x F*(j )
fft
Autospectrum
Sxx = X(j ) x X*(j )
Force Signal
Displacement Signal
fft
Cross-spectrum
Sxf = X(j ) x F*(j )
F(jω)
X(jω)
Detrend
Window
Digital Filter
Resample
Transfer Function
(j ) = 
Sxf
Sff
ADC
Anti-
aliasing
Filter
8th  Order Bessel 12.5 kHz
Detrend
Window
Digital Filter
Resample
0.02
0.03
0.04
0.05
0.06
0.07
0.08
1
0.5
0
0.5
1
1.5 x 104
Acceleration [m/s2]
Time [sec]
0.02
0.03
0.04
0.05
0.06
0.07
0.08
100
0
100
200
300
400
500
Force [N]
Time [sec]
(a)
(b)
Figure 3.17: (a) Measured impact force and acceleration from an impact test applied on an end
mill attached to a milling spindle. (b) The ﬂow chart of measurement and signal processing for
FRF measurement with impact testing (courtesy of MAL Inc. CUTPRO System).
The fundamentals of experimental modal analysis are brieﬂy introduced
here.
Concept of Residues
The transfer function of a SDOF system Eq. (3.7) can be expressed in the
Laplace domain as follows:
h(s) = X(s)
F(s) =
1/m
s2 + 2ζωns + ω2n
,
(3.64)
where s2 + 2ζωns + ω2
n is the characteristic equation of the system that has two
complex conjugate roots:
s1 = −ζωn + jωd,
s∗
1 = −ζωn −jωd.
The transfer function (3.64) can be expressed by its partial fraction expansion
as follows:
h(s) =
r
s −s1
+
r∗
s −s∗
1
=
α + βs
s2 + 2ζωns + ω2n
,
(3.65)
where the residue is
r = σ + jν,
r∗= σ −jν,
(3.66)
and the corresponding parameters are
α = 2(ζωnσ −ωdν),
β = 2σ.
(3.67)

100
STRUCTURAL DYNAMICS OF MACHINES
The residues may have real and imaginary parts depending on the damping
and the number of modes in the system. However, the residues have distinct
values for a SDOF system as follows:
r = lim
s=s1(s −s1)
1/m
(s −s1)(s −s∗
1) =
1/m
s1 −s∗
1
= 1/m
2jωd
,
r∗= lim
s=s∗
1
(s −s∗
1)
1/m
(s −s1)(s −s∗
1) =
1/m
s∗
1 −s1
= −1/m
2jωd
.
Hence, the real part of the residues must be zero (σ = 0 and β = 0) for
SDOF systems. Note that for a unit mass the residue must have a value of
r = 1/(2jωd). Note that the transfer functions are alternatively represented
with the following residue notation in the literature as well:
h(s) =
r′
2j(s −s1) +
r′∗
2j(s −s∗
1) =
α′ + β′s
s2 + 2ζωns + ω2n
,
(3.68)
where the residue is
r′ = σ ′ + jν′,
r′∗= σ ′ −jν′,
(3.69)
and the corresponding parameters are
α′ = ζωnν′ −ωdσ ′,
β = ν′.
Hence, the imaginary part of the residues must be zero (ν′ = 0 and β′ = 0) for
SDOF systems. Note that, for a unit mass, the residue must have a value of
r′ = 1/ωd.
One can switch from one notation to the next with the following residue
transformation:
r = r′/(2j) →σ = ν′/2,
ν = σ ′/2.
Some of the commercial modal analysis packages use this notation.
Transfer Function of a MDOF System
The equation of motion for a MDOF system is represented in s domain by
taking the Laplace transform of (3.29) as follows:
([M]s2 + [C]s + [K]){X(s)} = {F(s)},
(3.70)
or
[B(s)]{X(s)} = {F(s)}.
The transfer function matrix of the MDOF system is then
[H(s)] = {X(s)}
{F(s)} = adj[B(s)]
|[B(s)]| ,
(3.71)
where |[B(s)]| is the characteristic equation and the solution of |[B(s)]| = 0
gives the eigenvalues of the MDOF system. Note that the transfer function

3.6 EXPERIMENTAL MODAL ANALYSIS FOR MULTI–DEGREE-OF-FREEDOM SYSTEMS
101
matrix [H(s)] has [n × n] dimension for an n-DOF system, and all its elements
have a common denominator of |[B(s)]|.
The transfer function of the example 2-DOF system is
[H(s)] =
 h11(s)
h12(s)
h21(s)
h22(s)
	
,
where
h11(s) =
 r11,1
s −s1
+
r∗
11,1
s −s∗
1
	
mode 1
+
 r11,2
s −s2
+
r∗
11,2
s −s∗
2
	
mode 2
,
or
h11(s) =
(
α11,1 + β11,1s
s2 + 2ζ1ωn,1s + ω2
n,1
)
mode 1
+
(
α11,2 + β11,2s
s2 + 2ζ2ωn,2s + ω2
n,2
)
mode 2
. (3.72)
The elements hil in the transfer function matrix are obtained from experimental
measurements. The denominator consists of modal parameters (ζ, ωn)k for each
mode k. When the 2-DOF structure is excited by force {F} = {F1 F2} and the
vibration is measured at point 1, we have
h11 = x1
F1
→F2 = 0;
h12 = x1
F2
→F1 = 0.
For example, the accelerometer is attached to point 1, and the structure
is hit with an instrumented hammer at point 1 only to measure h11 and is
hit at point 2 to measure h12. By attaching the accelerometer at point 2 and
exciting the structure at points 1 and 2, the respective transfer function ele-
ments h21 and h22 are measured with Fourier analyzers. Note that all the
elements have common denominators, but different residues or numerators.
The transfer function matrix is symmetric for linear systems (i.e., h12 ≡h21).
It will be proven later that the measurement of only one row or column of the
transfer function is sufﬁcient to model the complete transfer function matrix
by using the symmetry and modal matrix properties. The measured transfer
functions are stored in the frequency domain by the analyzers, usually in the
form of real and imaginary components at each frequency, although the ana-
lyzers have built-in transformation routines to display the measurement data
in time or other frequency domain representations. The measured frequency
domain transfer function data (hil) is transferred to a digital computer loaded
with modal analysis software. For a given number of natural modes, the modal
analysis system scans the transfer function data for the dominant maximum
resonance amplitudes and the corresponding frequencies where the real part
of the transfer function is zero. These frequencies are the natural frequencies
of the system. The system then ﬁts a curve to the data with a denominator hav-
ing a (2 × n)-order polynomial. With further numerical processing, the transfer
function curve is ﬁtted to n independent second-order differential equations as
shown in Eq. (3.72). Thus, the numerical values of natural frequency, damping,
and residue for each mode are estimated from the curve ﬁtting [2]. In general

102
STRUCTURAL DYNAMICS OF MACHINES
form, the element in row i and column l of the transfer function matrix [H(s)]
is measured as
hil =
n

k=1
αil,k + βil,ks
s2 + 2ζkωn,ks + ω2
n,k
,
(3.73)
where ωd,k, ωn,k, and ζk are the damped and undamped natural frequencies
and the modal damping ratio for mode k of the system, respectively. The fre-
quency response of the structure can be obtained by replacing s = jω, where
the excitation frequency ω can be scanned in a range covering all natural
frequencies. The same equation can also be used in a time domain simu-
lation of forced and chatter vibrations by simply using a bilinear approxi-
mation, s = [2(1 −z−1]/[δt(1 + z−1)], where δt is the digital integration time
interval and z−1 is the backward time-shift operator (i.e., z−1x(t) = x(t −δt)).
The complete transfer function can be represented in the following matrix
form:
[H(s)] =
n

k=1
[R]k
s2 + 2ζkωn,ks + ω2
n,k
,
(3.74)
where each element in the [n × n]-dimensional matrix [R]k = [α + βs]k reﬂects
the residues of mode k at row i and column l.
The mode shapes of the system are found from the estimated residues.
Remembering from (3.43) that the displacement vector can be expressed by
its mode shapes and modal transfer functions,
{x} =
& n

k=1
{P}k{P}T
k q,k
'
{F}.
Thus,
[H(s)] =
n

k=1
{P}k{P}T
k q,k.
(3.75)
The eigenvectors {P}k can be scaled arbitrarily as stated before. Combining
Eqs. (3.74) and (3.75), we have
[H(s)] =
n

k=1
{P}k{P}T
k
mq,k
1
s2 + 2ζkωn,ks + ω2
n,k
=
n

k=1
[R]k
s2 + 2ζkωn,ks + ω2
n,k
.
Note that the modal mass for mode k using the unscaled modal matrix is
mq,k = {P}T
k [Mx]{P}k.
Thus, ({P}T
k {P}k)/mq,k represents the normalization of each eigenvector with
the square root of the modal mass (i.e., {u}k = {P}k/√mq,k). The identiﬁed
residues, therefore, have the following relationship with the mode shapes:
$
{P}k{P}T
k
%
/mq,k ≡{u}k{u}T
k = [R]k,
(3.76)

3.6 EXPERIMENTAL MODAL ANALYSIS FOR MULTI–DEGREE-OF-FREEDOM SYSTEMS
103
where {uk} corresponds to the normalized mode shape giving a unity modal
mass. In other words, the mass is unity when the following transformation is
used:
{u}T
k [Mx]{u}k = 1.
This procedure is a mathematically convenient way to simplify the identi-
ﬁcation of mode shapes, modal stiffness, and modal damping constants of the
structure.
The residue matrix for a particular mode k can be expressed in the following
general form:
[R]k =
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
u1u1
u1u2
. . .
u1ul
. . .
u1un
u2u1
u2u2
. . .
u2ul
. . .
u2un
...
...
...
...
...
ulu1
ulu2
. . .
ulul
. . .
ulun
...
...
...
...
...
unu1
unu2
. . .
unul
. . .
unun
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
k
.
If we take column or row l of the residue matrix for mode k, we have
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
R1l
R2l
...
Rll
...
Rnl
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
k
=
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
u1ul
u2ul
...
ulul
...
unul
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
k
,
where k = 1, 2, . . . , n for n number of modes. Starting ﬁrst with the solution of
ul where the excitation and measurement points match, the mode shapes can
be calculated from only one row or column of transfer function measurements.
The mode shape vector for mode k is found as follows:
ul,k =

Rll,k
u1,k = R1l,k
ul,k
u2,k = R2l,k
ul,k
...
=
=
...
un,k = Rnl,k
ul,k
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
.
(3.77)
This procedure is repeated for all modes to construct the full modal matrix
of the structure. The modal matrix of the system consists of mode shapes in
the columns of an [n × m] matrix,
[U] = [{u}1 {u}2 . . . {u}m],
(3.78)

104
STRUCTURAL DYNAMICS OF MACHINES
where m is the total number of modes in the system and n is the number
of measurement points or coordinates on the structure. Note that the modal
matrix does not have to be a square matrix. For example, there may be two
or three measurement points with a different number of modes. This depends
on the structure and the number of measurement points used for vibration
analysis. The identiﬁed transfer function can be used to analyze the general
behavior of the machine tool under different loading conditions and to study
machine tool stability for chatter vibrations during cutting as presented in the
following section.
Note that, because the elements of matrix [R] = [α + βs] are complex num-
bers, the resulting mode shapes will be complex and depend on the modal
frequency (ωd). It is possible to obtain simpliﬁed real mode shapes from the
residues:
Ril,k = αil,k + βil,ks
←
s = jωd.
(3.79)
For the mode shapes to be real, the imaginary part of Ril,k must be zero (i.e.,
βil,k = 2σil,k = 0) or the real part of the residues must be zero (σil,k = 0). This
corresponds to structures having proportional damping, where the damping [C]
is a linear combination of mass [M] and stiffness [K], that is, c = ηmm + ηkk,
where ηm, ηk are constant numbers. The residues become r = jν, r∗= −jν, and
αil,k = 2ωd,kνil,k. For example, the modal parameter in Eq. (3.77) becomes ul,k =

Rll =

2ωdkνlk.
Example 1. A 2-DOF system shown in Figure 3.18 is analyzed experimentally.
The masses lumped at the middle and the tip are m0 = 0.76 kg each. The
beam dimensions are l = 450 mm, b = 25.4 mm, h = 5 mm, and the speciﬁc
mass density of the steel is ρ = 7,860 kg/m3. The mass of the beam becomes
mb = bhlρ = 0.45 kg. An accelerometer was used to measure the vibrations,
and an impact hammer instrumented with a piezoelectric force transducer was
used to hit the structure (see Fig. 3.16). Transducers are connected to ampliﬁers
and power units to convert the measured charge signals to ampliﬁed voltage.
The ampliﬁed force signal line is connected to the input channel, and the
ampliﬁed accelerometer signal is connected to the output channel of a Fourier
analyzer. The calibration factors of both sensors are entered into the analyzer
to obtain correct measurement units. The transfer function h11 is measured
by hitting the structure at point 1, where the accelerometer is mounted. The
experiment is repeated ten times, and a spectral average of the measured
FRFs is accepted from the analyzer. The cross-FRF element h12 is measured
by hitting the structure at point 2, whereas the accelerometer is still mounted
at point 1. The measured FRFs (h11, h12) are transferred to a computer and
processed by modal analysis software.
The modal analysis software provided the following information for the two
modes:

3.6 EXPERIMENTAL MODAL ANALYSIS FOR MULTI–DEGREE-OF-FREEDOM SYSTEMS
105
/2
/2
m 0
m 0
b
h
m 1
m 1
2
m
2
m
x  (t)
2
x  (t)
1
m 1
m1
2
m
2
m
1
Θ
2
Θ
k Θ
k Θ
        Beam
Elastic beam model
 Torsional spring model
Figure 3.18: A slender beam carrying two lumped masses.
Estimated
Mode 1
Mode 2
ωd (rad/s)
53.0041
349.9659
ζ
0.0113
0.0047
ωn (Hz)
8.433
55.677
Residues for h11 (m/N)
1.8303 × 10−3 −j6.9526 × 10−3
1.1546 × 10−5 −j1.4518 × 10−4
Residues for h12 (m/N)
2.0721 × 10−4 −j3.0926 × 10−3
4.6012 × 10−5 + j3.7015 × 10−4
Note that, when the measurements are made with an acceleromoter, residues
must be scaled to displacement units before processing them (i.e., by dividing
the residues by ω2
dejπ for each mode). By substituting α = 2(ζωnσ −ωdν), β =
2σ, the following direct (h11) and cross (h12) transfer functions are obtained:
h11(s) = 0.7392 + 0.00366s
s2 + 2ζ1ωn1s + ω2
n1
+ 0.1017 + 2.3092e −05s
s2 + 2ζ2ωn2s + ω2
n2
,
h12(s) = 0.3281 + 4.1442e −04s
s2 + 2ζ1ωn1s + ω2
n1
+ −0.2589 + 9.2024e −05s
s2 + 2ζ2ωn2s + ω2
n2
.

106
STRUCTURAL DYNAMICS OF MACHINES
By replacing s = jω and sweeping all frequencies of interest, the curve-ﬁtted
FRFs of the structure can be reconstructed. The complex mode shapes for the
ﬁrst mode can be extracted from the residues as follows:
u11 =

α11,1 + β11,1s|s=jωd1 =

0.7392 + j0.00366 ∗53.0041
= 0.8670 + j0.1119,
u21 = α12,1+β12,1s
u11
|s=jωd1
= 0.3281+j4.1442e−04∗53.0041
0.8670+j0.1119
= 0.3754 −j0.0231.
(3.80)
For the second mode, we obtain
u12 =

α11,2 + β11,2s|s=jωd1 =

−0.2589 + j2.3092e −05 ∗349.9659
= 0.3191 + j0.0127
u22 = α12,2+β12,2s
u12
|s=jωd2
= −0.2589+j9.2024e−05∗349.9659
0.3191+j0.0127
= −0.8062 + j0.1329.
(3.81)
The resulting complex modal matrix for unity modal mass is
[U] =
(
0.8670 + j0.1119
0.3754 −j0.0231

1

 0.3191 + j0.0127
−0.8062 + j0.1329

2
)
.
Note that the complex part of the numerator can be neglected (i.e., β = 0) for
simplicity, which leads to real mode shapes.
Because both modal masses are unity (i.e., mq,1 = mq,2 = 1) the modal stiff-
ness values are
kq,1 = ω2
n,1 = 53.00412 = 2,809 N/m,
kq,2 = ω2
n,2 = 349.96592 = 122,480 N/m,
and the modal damping constants are
cq,1 = 2ζ1ωn,1 = 2 × 0.0113 × 53.0041 = 1.1928 N/ms−1,
cq,2 = 2ζ2ωn,2 = 2 × 0.0047 × 349.9659 = 3.2741 N/ms−1.
The transfer functions of two modes in modal coordinates are
q,1 =
1
mq,1s2+cq,1s+kq,1 =
1
s2+1.1928s+2809,
q,2 =
1
mq,2s2+cq,2s+kq,2 =
1
s2+3.2741s+122480,
and when substituted in Eq. (3.74), the transfer function matrix is found as

X1(s)
X2(s)

=

u2
11q,1 + u2
12q,2
u11u21q,1 + u12u22q,2
u11u21q,1 + u12u22q,2
u2
21q,1 + u2
22q,2
	 
F1(s)
F2(s)

,
where mq,1 = mq,2 = 1, and real mode shapes (real(u)) are considered. The
mass, damping, and stiffness matrices in local coordinates can be obtained

3.6 EXPERIMENTAL MODAL ANALYSIS FOR MULTI–DEGREE-OF-FREEDOM SYSTEMS
107
from the inverse transformation by the use of the modal matrix as follows:
[Mx] = [U]−T[I]U−1 =
(
1.1797
−0.1018
−0.1018
1.2732
)
(kg).
The actual mass of the beam (mb) can be distributed to points 1 and 2 as
follows:
m1 = m0 + mb/4 = 0.76 + 0.45/4 = 0.873 kg,
m2 = m0 + mb/2 = 0.76 + 0.45/2 = 0.985 kg.
The analytical actual masses are approximately 0.873 kg and 0.985 kg; the
predicted masses in the diagonal locations of the mass matrix (1.1797 kg,
1.2732 kg) are slightly different, but the ratios are similar. The difference is
due to errors in the measurement, noise, frequency resolution, accelerometer,
and force sensor. The nonzero off-diagonal masses represent the presence of
some dynamic coupling in the system as follows:
[Cx] = [U]−T[Cq]U−1 =
(
1.8447
−1.1320
−1.1320
3.8524
)
(N/ms−1),
[Kx] = [U]−T[Kq]U−1 =
(
0.2847e + 05
−0.5839e + 05
−0.5839e + 05
1.3776e + 05
)
(N/m).
The stiffness values are quite reasonable; they reﬂect the losses in the clamping
of the beam on the ground and measurement errors with the accelerometer.
Example 2. Consider a slender beam with the measured FRFs shown in Fig-
ure 3.19, and the values of the measurement points are given in the table.
(μ m/N)
G(668 Hz)
G(812 Hz)
H(741 Hz)
G(3,812 Hz)
G(3,862 Hz)
H(3,838 Hz)
11
+0.4386
−0.3292
−0.7613
+0.6935
−0.6959
−1.3915
12
+0.3751
−0.2995
−0.6695
+0.1996
−0.2076
−0.4060
The mode shapes and FRFs at the two measurement points can be evaluated
as follows. The modal parameters can be identiﬁed from the real and imaginary
parts around resonance frequencies.
ωn1 = 741 [Hz] = 2π741 [rad/s] = 4655.8 [rad/s], ζ1 = 812−688
2×741 = 0. 084,
k1 =
−1
2ζ1H11,1 =
1
2×0 .084×0.7613 = 7. 8187[N/μm],
m1 =
k1
ω2
n1 = 7. 818 7×106
4197.22
=
0.3607[kg]
ωn2 = 3,838 [Hz]=2π3838 [rad/s] = 24,115 [rad/s], ζ2 = 3,862−3,812
2×3,838
= 0.006 5
k2 =
−1
2ζ2H11,2 =
1
2×0.0065×1.3915 = 55.28 [N/μm], m2 =
k2
ω2
n2 = 55.28×106
24,1152
= 0.0951
[kg]

108
STRUCTURAL DYNAMICS OF MACHINES
0
500
1000
1500
2000
2500
3000
3500
4000
4500
5000
-1
-0. 8
-0. 6
-0. 4
-0.2
0
0.2
0.4
0.6
0.8
1
?
Frequency [Hz]
G11, Real Part [μm/N]
0
500
1000
1500
2000
2500
3000
3500
4000
4500
5000
-2.0
-1.8
-1.6
-1.4
-1.2
-1.0
-0.8
-0.6
-0.4
-0.2
0
?
Frequency [Hz]
Frequency Response Function: Φ11
H11 Imaginary Part [μm/N]
0.4386 [μm/N]
668.75Hz
-0.3292 [μm/N]
812.5 Hz
0.69347 [μm/N]
3812.5 Hz
-0.6959 [μm/N]
3862.5 Hz
-0.7613 [μm/N]
741Hz
-1.3915 [μm/N]
3838 Hz
0
500
1000
1500
2000
2500
3000 3500
4000
4500
5000
-1
-0.8
-0.6
-0.4
-0.2
0
0.2
0.4
0.6
0.8
1
?
Frequency [Hz]
0
500
1000
1500 2000 2500
3000
3500
4000
4500
5000
-2.0
-1.8
-1.6
-1.4
-1.2
-1.0
-0.8
-0.6
-0.4
-0.2
0
?
Frequency [Hz]
G12 Real Part [μm/N]
Frequency Response Function: Φ12
H12 Imaginary Part [μm/N]
0.37512 [μm/N]
-0.29945 [μm/N]
0.19965 [μm/N]
-0.2076 [μm/N]
-0.66950 [μm/N]
741Hz
-0.4060 [μm/N]
3838 Hz
Figure 3.19: Measured FRFs at two points along a beam.
Note that the stiffness and mass are associated with the mode number one
when the force and vibrations are observed at point 1.
11(s) =
u11u11
s2 + 2ζ1ωn1s + ω2
n1
+
u12u12
s2 + 2ζ2ωn2s + ω2
n2
11( jω) =
u11u11
ω2
n1 −ω2 + j2ζ1ωn1ω +
u12u12
ω2
n2 −ω2 + j2ζ2ωn2ω
Substituing s = jωn1 leads to a negligible contribution from ωn2, and the ﬁrst
part becomes equal to
11(ω = ωn1) ≈H11,1 = u11u11
j2ζ1ω2
n1
= −ju11u11
2ζ1ω2
n1
,
u11 =

−2ζ1ω2
n1H11,1 =

2×0. 084×4655.82 ×0.7613×10−6 = 1.6651
11(ω = ωn2) ≈H11,2 = −ju12u12
2ζ2ω2
n2
u12 =

−2ζ2ω2
n2H11,2 =

2×0.006 5×24,1152 ×1.3915×10−6 = 3.2434

3.7 IDENTIFICATION OF MODAL PARAMETERS
109
The cross-transfer function between points 1 and 2 are as follows:
12 =
u11u21
s2 + 2ζ1ωn1s + ω2
n1
+
u12u22
s2 + 2ζ2ωn2s + ω2
n2
12(ω = ωn1) ≈H12,1 = −ju11u21
2ζ1ω2
n1
u21 = 2ζ1ω2
n1H12,1
−ju11
u21 = 2 × 0. 084 × 4655.82 × (−j0.6695 × 10−6)
−j1.6651
= 1.4643
12(ω = ωn2) ≈H12,2 = −ju12u22
2ζ2ω2
n2
u22 = 2ζ2ω2
n2H12,2
−ju12
u22 = 2 × 0.006 5 × 24,1152 × (−j0.4060 × 10−6)
−j3.2434
= 0.9463
Modal matrix U =
(
1.6651
1.4643

mode 1

3.2434
0.9463

mode 2
)
The direct transfer functions of the beam at the two measurement points
can be identiﬁed from modal matrix and modal parameters.
The transfer function at point 1 is as follows:
x1
Fy1
=
u11u11
s2 + 2ζ1ωn1s + ω2
n1
+
u12u12
s2 + 2ζ2ωn2s + ω2
n2
=
(1.6551)2
s2 +2×0. 084×4655.8s+4655.82 +
(3.2434)2
s2 +2 × 0.006 5×24,115s+24,1152
x1
Fy1
=
2.7724
s2 + 782.18s + 21.677 × 106 +
10. 5192
s2 + 313.5s + 581.533225 × 106 .
The expression can be checked by inserting s = jωn1, H11,1 =
2. 7724
782.18×4655.8 =
−j0.7613 × 10−6, which is the same as the measured value given in the table.
The transfer function at point 2 is as follows:
x2
Fy2
=
u11u21
s2 + 2ζ1ωn1s + ω2
n1
+
u12u22
s2 + 2ζ2ωn2s + ω2
n2
=
1.6651×1.4643
s2 +2 × 0. 084×4655.8s+4655.82 +
3.2434×0.9463
s2 + 2×0.0065×24,115s+24,1152
x2
Fy2
=
2.4381
2 + 782.18s + 21.677 × 106 +
3.0692
s2 + 313.5s + 581.533225 × 106 .
3.7
IDENTIFICATION OF MODAL PARAMETERS
Consider the dynamics of a system with n modes that is represented by the
following FRF:
pq(ω) =
n

k=1
&
αk + jωβk
−ω2 + ω2
n,k + j2ζkωnkω
'
=
n

k=1
&
Apq,k
jω −λk
+
A∗
pq,k
jω −λ∗
k
'
(3.82)

110
STRUCTURAL DYNAMICS OF MACHINES
where (Apq,k, A∗
pq,k) and (λk, λ∗
k) are the complex conjugate residues and eigen-
values of the system, respectively. The estimation of modal parameters is con-
ducted by considering a limited frequency range where the FRF for one mode
is expressed as
R(ω) = low(ω) +
Apq,k
jω −λk
+
A∗
pq,k
jω −λ∗
k
+ hi(ω)
(3.83)
where low(ω) = αlow+jωβlow
−ω2+ω2
n,low is the residual effects of lower modes and called the
residual inertia and li(ω) = αhi+jωβhi
−ω2+ω2
n,hi is the residual effects of higher modes
and called the residual ﬂexibility.
The residual modes are modeled as undamped second-order linear systems
as follows:
R(ω) = Gr(ω) + jHr(ω)
= αlow + jωβlow
−ω2 + ω2
n,low
+
αk + jωβk
−ω2 + ω2
n,k + j2ζkωnkω + αhi + jωβhi
−ω2 + ω2
n,hi
,
(3.84)
where ωn,low and ωn,hi are used to account for the lower- and higher-frequency
modes, respectively. The estimation requires the identiﬁcation of mode shapes,
damping ratio, and natural frequency for each mode. The identiﬁcation starts
with the prediction of system eigenvalues (λk = −ζkωnk + jωdk). Multiplying
both sides of Eq. (3.84) by (−ω2 + ω2
n,k + j2ζkωnkω),
R(ω)

−ω2 + ω2
n,k + j2ζkωnkω

=
(αlow + jωβlow)

−ω2 + ω2
n,k + j2ζkωnkω

−ω2 + ω2
n,low
+ αk + jωβk +
(αhi + jωβhi)

−ω2 + ω2
n,k + j2ζkωnkω

−ω2 + ω2
n,hi
=
−ω2αlow + αlowω2
n,k + j2αlowζkωnkω −jω3βlow + jωω2
n,kβlow −2ζkωnkω2βlow
−ω2 + ω2
n,low
+ (αk + jωβk)
+
−αhiω2 + αhiω2
n,k + j2αhiζkωnkω −jω3βhi + jωω2
n,kβhi −2ζkωnkω2βhi
−ω2 + ω2
n,hi
∼=
σ1 + jν1
−ω2 + ω2
n,low
+ (αk + jωβk) +
σ2 + jν2
−ω2 + ω2
n,hi
=
C1
−ω2 + ω2
n,low
+ (αk + jωβk)
+
C2
−ω2 + ω2
n,hi
,
(3.85)
where C1 = σ1 + jν1 and C2 = σ2 + jν2 are complex residual constants. As long
as residual terms account for the effects of out of band frequencies, they can

3.7 IDENTIFICATION OF MODAL PARAMETERS
111
be expressed by any convenient mathematical term. The estimated residuals
do not have any physical meaning as long as they can be used to estimate
the natural frequency and damping ratio (i.e., pole) of the interested mode.
Eq. (3.85) can be separated into its real and imaginary parts as follows:
R(ω)

−ω2 +ω2
n,k + j2ζkωnkω

=

Gr(ω)+ jHr(ω)
 
−ω2 +ω2
n,k + j2ζkωnkω

−ω2Gr(ω)+ω2
n,kGr(ω)−2ζkωnkωHr(ω) = αk +
σ1
−ω2 + ω2
n,low
+
σ2
−ω2 + ω2
n,hi
−ω2Hr(ω)+ω2
n,kHr(ω)+2ζkωnkωGr(ω) = ωβk +
ν1
−ω2 + ω2
n,low
+
ν2
−ω2 + ω2
n,hi
.
(3.86)
Considering that when FRF is measured, the user sets the lower (ωn,low)
and upper (ωn,hi) frequency bounds of the mode, and the FRF contains the real
Gr(ω) and imaginary (Hr(ω)) parts of the measurement at each frequency (ω).
The unknowns are eigenvalues (ζk, ωnk) and residues (αk, βk; σ1, ν1; σ2, ν2) that
need to be identiﬁed. Eq. (3.86) can be organized in matrix form as follows:
(−ωHr(ω) Gr(ω) −1 0
−1
−ω2+ω2
n,low
−1
−ω2+ω2
n,hi
0
0
ωGr(ω) Hr(ω) 0 −ω
0
0
−1
−ω2+ω2
n,low
−1
−ω2+ω2
n,hi
)
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
2ζkωnk
ω2
n,k
αk
βk
σ1
σ2
ν1
ν2
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
(3.87)
=

 ω2Gr(ω)
ω2Hr(ω)

(3.88)
The modal parameters estimation matrix (Eq. 3.87) can be expressed as
follows:

A(ω)

{Pm} = {B(ω)},
(3.89)
where {Pm} contains unknown modal parameters. Because we have a number
of frequency points around the interested modal frequency range,
⎡
⎢⎢⎢⎢⎢⎣
A(ω1)
A(ω2)
..
..
A(ωn)
⎤
⎥⎥⎥⎥⎥⎦
{Pm} =
⎧
⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎩
B(ω1)
B(ω2)
..
..
B(ωn)
⎫
⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎭
(3.90)

112
STRUCTURAL DYNAMICS OF MACHINES
the unknown parameter vector {P} can be easily evaluated by using the linear
least-squares solution as follows:
{P} =

A
T 
A
−1 
A
T {B}
(3.91)
Only ζk and ωn,k are retained here, and the rest of the residue variables are
discarded in the least-squares identiﬁcation at this stage. The above expres-
sion, where only the eigenvalues are estimated, is applied to only one set of
measurements or FRF, because the poles are global and the same for all other
FRF measurements.
The residues or mode shapes can now be estimated from the original FRF
Eq. (3.84) by separating the terms into real and imaginary parts as follows:
Gr + jHr = αlow + jωβlow
Dl
+ αk + jωβk
E1 + jE2
+ αhi + jωβhi
Dh
(3.92)
$
Gr + jHr
%
= (αlow + jωβlow) (E1 + jE2) Dh + Dl (αk + jωβk) Dh + Dl (E1 + jE2) (αhi + jωβhi)
DlDh (E1 + jE2)
,
(3.93)
where
Dl = −ω2 + ω2
n,low
E1 = −ω2 + ω2
nk
E2 = 2ζkωnkω
Dh = −ω2 + ω2
n,hi
$
Gr + jHr
% 
DlDh (E1 + jE2)

= (αlow + jωβlow) (E1 + jE2) Dh + Dl (αk + jωβk) Dh + Dl (E1 + jE2) (αhi + jωβhi) .
(3.94)
Simplifying the right-hand side of the equation,
(αlow + jωβlow) (E1 + jE2) Dh + Dl (αk + jωβk) Dh + Dl (E1 + jE2) (αhi + jωβhi)
= (αlow + jωβlow) (DhE1 + jDhE2) + DlDhαk + jωDlDhβk + (DlE1 + jDlE2) (αhi + jωβhi)
= DhE1αlow + jDhE2αlow + jωDhE1βlow −ωDhE2βlow + DlDhαk
+ jωDlDhβk + DlE1αhi + jωDlE1βhi + jDlE2αhi −DlE2ωβhi
= DlDhαk + DhE1αlow −ωDhE2βlow + DlE1αhi −DlE2ωβhi
+ j (ωDlDhβk + DhE2αlow + ωDhE1βlow + DlE2αhi + ωDlE1βhi)
(3.95)
Similarly, collecting the real and imaginary terms on the left-hand side,
$
Gr + jHr
%
DlDh (E1 + jE2) = DlDhE1Gr + jDlDhGrE2 + jDlDhE1Hr −HrDlDhE2
= DlDhE1Gr −HrDlDhE2 + j
$
DlDhGrE2 + DlDhE1Hr
%
.
(3.96)

3.7 IDENTIFICATION OF MODAL PARAMETERS
113
The real and imaginary parts of both the right and left sides must be equal
as follows:
DlDhαk + E1Dhαlow −ωE2Dhβlow + DlE1αhi −ωDlE2βhi = DlE1DhGr −DlE2DhHr
ωDlDhβk + E2Dhαlow + ωDhE1βlow + DlE2αhi + ωDlE1βhi = DlE2DhGr + DlE1DhHr.
(3.97)
The unknowns are the residue terms {Pm}T = {αk, βk, αlow, βlow, αhi, βhi}T. The
unknown parameter vector {Pm} can be isolated in both real and imaginary
parts as follows:
 DlDh
0
E1Dh
−ωE2Dh
DlE1
−ωDlE2
0
ωDlDh
E2Dh
ωE1Dh
DlE2
ωDlE1
	
⎧
⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎩
αk
βk
αlow
βlow
αhi
βhi
⎫
⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎭
(3.98)
=

 DlE1DhGr −DlE2DhHr
DlE2DhGr + DlE1DhHr.

.
(3.99)
For each measurement around the mode, residues αk and βk are estimated
by the use of linear least squares similar to the estimation of eigenvalues.
The remaining terms (αlow, βlow, αhi, βhi) are discarded. The complex residue for
mode k, Apq,k is estimated as follows:
Apq,k = βk
2 + j
αk −βkωn,kζk
−2ωdk

.
(3.100)
Although the pole of the system is global and valid for all measurements, the
residues must be estimated for each measurement, because each constitutes an
element in mode shape. When the system is considered to have a proportional
damping, the real part of the residue is zero (βk = 0); hence, the residue becomes
Apq,k = −j αk
2ωdk
.
(3.101)
3.7.1
Global Nonlinear Optimization of Modal Parameter
Identiﬁcation
The estimation of each mode individually often provides sufﬁcient accu-
racy when the residual mode effects are considered. However, when there is
a strong coupling between the individual modes, a global parameter optimiza-
tion that considers all the modes and all frequency response measurements
simultaneously would yield more accurate results. A nonlinear least-squares
optimization method with a steepest descent algorithm can be used where all
the parameters are varied until a speciﬁed error criterion is satisﬁed.

114
STRUCTURAL DYNAMICS OF MACHINES
By construing the transfer function (Hpq(s)) in the Laplace domain,
Hpq(s) =
n

k=1
σk + jνk
s −s1
+ σk −jνk
s −s∗
1

=
n

k=1
(
(σk + jνk)
$
s −s∗
1
%
+ (σk −jνk) (s −s1)
(s −s1)
$
s −s∗
1
%
)
=
n

k=1
 (σk + jνk) (s −(−ζkωnk −jωd)) + (σk −jνk) (s −(−ζkωnk + jωd))
(s −(−ζkωnk + jωd)) · (s −(−ζkωnk −jωd))
	
1
=

k
= 1n
(
2σks + 2σkζkωnk + jωdσk + jνkζkωnk −νkωd −jσkωd −jνkζkωnk −νkωd
s2 −
$
−ζkωnk −jωd −ζkωnk + jωd
%
s +
$
ζ 2
k ωnk2 + ω2
d
%
)
=

k
= 1n
(
2σks + 2σkζkωnk −2νkωd
s2 −
$
−2ζkωnk
%
s +
$
ζ 2
k ωnk2 + ω2
d
%
)
=

k
= 1n
(
2σks + 2σkζkωnk −2νkωd
s2 −
$
−2ζkωnk
%
s +
$
ζ 2
k ωnk2 + ωnk2 −ζ 2
k ωnk2%
)
=

k
= 1n
2σks + 2σkζkωnk −2νkωd
s2 + 2ζkωnks + ωnk2
	
.
(3.102)
Substituting s = jω, the FRF is evaluated as follows:
Hpq( jω) =
n

k=1
(
2 (σkζkωnk −νkωd) + j2σkω
ω2
nk −ω2 + j2ζkωωnk
)
.
The FRF is expressed in terms of the modal damping ratio (ζk), natural
frequency of each mode (ωnk), and complex parts of the mode residues σk, νk. For
each mode, there are four modal parameters (ωnk, ζk, σk, and νk) that need to be
identiﬁed. If the number of points where the measurements are taken is N, the
total number of modal parameters that need to be identiﬁed for M number of
modes becomes M(2N + 2). The M(2N + 2) estimation parameters (ωnk, ζk, σk,
and νk) are represented as pj, where j = 1, 2, . . . , M(2N + 2). If the measured
response is denoted as Hpq(ω), and the estimated function is 0
Hpq(ω, p), the cost
function used to evaluate the curve ﬁtting, J, is the summed magnitudes of the
difference 	Hpq(ω, p) = Hpq(ω) −0
Hpq(ω, p) between measured and estimated
responses. For all n data points and N number of measurement points, the cost
function becomes
J(ω, p) =
N

q=1
n

i=1

Re 	Hpq(ωi, p)
2 +

Im 	Hpq(ωi, p)
2
.
The parameters are updated in the direction of negative gradient (−∇J) in
the steepest descent approach. The partial fractions are individually evaluated
by numerically approximating the slope over small interval of parameters (p).
The parameters are updated for each iteration as
pj = pj −S ∂J
∂Pj
j = 1, 2, ..., M(2N + 2),

3.8 RECEPTANCE COUPLING OF END MILLS TO SPINDLE-TOOL HOLDER ASSEMBLY
115
where S is the step size, which is selected for the optimum decrease of the
cost function J. Typically, the cost function is ﬁrst evaluated with a step size
of S = 1. If the cost function is decreased, S is incremented by a factor γ
(γ > 1), as new Snew = γ Sprev until a minimum J is found
in the direction
(−∇J). Alternatively, if the cost function increased, S is decremented as Snew =
Sprev/γ until a step size is found causing J to decrease. Note that, while moving
in the direction (−∇J), the cost function will always decrease given a small
enough interval. The algorithm continues until a relative change in J between
iterations reaches an acceptably small value (ε) as follows:
|Jnew −Jold|
Jnew
< ε.
When the proportional damping is assumed (σk = 0), each mode shape ele-
ment in the eigen vector becomes
uk,p =

−2νkωd,k
→uk,q = −2νkωd,k
uk,p
q = 1, 2, . . . , N,
where the mode shape coefﬁcient for measurement p, the residue must be
negative for uk,p to be a real value. This enforces that the structure will always
move in the direction of applied force at the point of impact.
3.8
RECEPTANCE COUPLING OF END MILLS TO
SPINDLE-TOOL HOLDER ASSEMBLY
The measurement of each tool and tool holder on the spindles may be too
costly and time consuming in a production environment. The receptance cou-
pling method allows the analytical assembly of a linear, free–free end mill or
end mill–holder units to the spindle that always remain the same. Although
the spindle is measured using experimental modal tests, the free–free end
mill or holder assembly can be modeled by using beam theory or ﬁnite ele-
ment methods. The two substructures then can be assembled mathematically,
thus avoiding time-consuming impulse test measurements on the production
machines [94]. However, the stiffness and damping at the assembly joints of
two substructures need to be identiﬁed ﬁrst.
The machine tool assembly (structure AB) is divided into two substructures
as shown in Figure 3.20. Substructure A represents the tool holder, and sub-
structure B represents the remaining machine tool assembly up to the tool
holder ﬂange. The two structures are rigidly connected at point 2.
Consider the FRF of end mill (A) at two free ends (1, 2) as follows:

 X1
XA,2

=
HA,11 HA,12
HA,21 HA,22
	 
 F1
FA,2

,
(3.103)
where X1, XA,2 are the displacement vectors with both translational and angu-
lar displacement components. F1 and FA,2 are applied on the structure at
points 1 and 2, respectively. HA,ij terms are the FRFs between points i and j.

116
STRUCTURAL DYNAMICS OF MACHINES
Similarly, the FRF of the substructure (B) at its free end (2) is

XB,2

=

HB,22

·

FB,2

.
(3.104)
In view of the rigid coupling of the two structures A and B at point 2, the
equilibrium and compatibility conditions at point 2 are
F2 = FA,2 + FB,2
(3.105)
X2 = XA,2 = XB,2,
which is used in coupling the spindle (A) with the free–free model of the sub-
structure (B). By letting
H2 = HA,22 + HB,22
(3.106)
and substituting Eq. (3.106) into (3.104) gives
X2 = HB,22FB,2 = HA,21F1 + HA,22(F2 −FB,2).
(3.107)
By rearranging Eq. (3.107), the forces on structure B are as follows:
FB,2 =
$
HB,22 + AA,22
%−1 $
HA,21F1 + HA,22F2
%
= (H2)−1 $
HA,21F1 + HA,22F2
%
.
(3.108)
Finally, the displacements at points 1 and 2 can be expressed as functions
of FRFs and applied forces F1, F2 as follows:
X1 = HA,11F1 + HA,12(F2 −FB,2)
= HA,11F1 + HA,12F2 −HA,12(H2)−1 · (HA,21F1 + HA,22F2)
(3.109)
= (HA,11 −HA,12(H2)−1HA,21)F1 + (HA,12 −HA,12(H2)−1HA,22)F2
X2 = HA,21F1 + HA,22(F2 −FB,2)
= HA,21F1 + HA,22F2 −HA,22(H2)−1(HA,21F1 + HA,22F2)
=
$
HA,21 −HA,22(H2)−1HA,21
%
F1 +
$
HA,22 −HA,22(H2)−1HA,22
%
F2
Equation (3.109) can be rearranged in a matrix form as follows:

 X1
X2

=
 (HA,11 −HA,12H−1
2 HA,21) (HA,12 −HA,12H−1
2 HA,22)
$
HA,21 −HA,22H−1
2 HA,21
% $
HA,22 −HA,22H−1
2 HA,22
%
	
×

 F1
F2

, (3.110)
where H2 = HA,22 + HB,22.
Equation (3.110) represents the receptance coupling of the spindle with
holder up to the ﬂange and holder-tool stickout structures. The receptances
of the free–free-tool holder–tool assembly, HA,11, HA,12, and HA,22 are modeled
by using the ﬁnite element model and the receptance of the spindle at point 2,
HB,22 is obtained through the inverse receptance coupling method as explained
next.

3.8 RECEPTANCE COUPLING OF END MILLS TO SPINDLE-TOOL HOLDER ASSEMBLY
117
The following cross and direct receptances are obtained from Eqs. (3.109)
and (3.110):
X1
F1 = H11 = HA,11 −HA,12(H2)−1HA,21
X2
F1 = H12 = HA,21 −HA,22(H2)−1HA,21
X1
F2 = H21 = HA,21 −HA,12(H2)−1HA,22
X2
F2 = H22 = HA,22 −HA,22(H2)−1HA,22
⎫
⎪⎪⎪⎬
⎪⎪⎪⎭
.
(3.111)
Each FRF contains both translational and rotational displacements, thus
Eqs. (3.111) can be expanded as follows:

 x1
θ1

=
 h11, f f h11, fM
h11,M f h11,MM
	 
 f1
M1

= [H11]

 f1
M1

(3.112)

x2
θ2

=
 h12, f f h12, fM
h12,M f h12,MM
	 
 f1
M1

= [H12]

 f1
M1


x1
θ1

=
 h21, f f h21, fM
h21,M f h21,MM
	 
 f2
M2

= [H21]

 f2
M2


x2
θ2

=
 h22, f f h22, fM
h22,M f h22,MM
	 
 f2
M2

= [H22]

 f2
M2

.
By substituting Eqs. (3.112) into Eqs. (3.111), direct and cross-transfer func-
tions at points 1 and 2 with both rotational and translational degrees of freedom
are found as follows:

H11

=
(
h11, f f
h11, fM
h11,M f h11,MM
)
=
(
hA11, f f
hA11, fM
hA11,M f hA11,MM
)
−
(
hA12, f f
hA12, fM
hA12,M f hA12,MM
)

H2
−1
(
hA21, f f
hA21, fM
hA21,M f hA21,MM
)

H21

=
(
h21, f f
h21, fM
h21,M f h21,MM
)
=
(
hA21, f f
hA21, fM
hA21,M f hA21,MM
)
−
(
hA12, f f
hA12, fM
hA12,M f hA12,MM
)

H2
−1
(
hA22, f f
hA22, fM
hA22,M f hA22,MM
)

H22

=
(
h22, f f
h22, fM
h22,M f h22,MM
)
=
(
hA22, f f
hA22, fM
hA22,M f hA22,MM
)
−
(
hA22, f f
hA22, fM
hA22,M f hA22,MM
)

H2
−1
(
hA22, f f
hA22, fM
hA22,M f hA22,MM
)
,
(3.113)
where

H2
−1 =
 hA22, f f
hA22, fM
hA22,M f
hA22,MM
	
+
 hB22, f f
hB22, fM
hB22,M f
hB22,MM
	−1
=
 hA22, f f + hB22, f f
hA22,M f + hB22,M f
hA22,M f + hB22,M f
hA22,MM + hB22,MM
	−1
=
 h22, f f
h22,M f
h22,M f
h22,MM
	−1
=
1
h2
22,M f −h22,MMh22, f f
−h22,MM
h22,M f
h22,M f
−h22, f f
	
.

118
STRUCTURAL DYNAMICS OF MACHINES
The ﬁrst elements in the three matrices [H11], [H12], and [H22] in
Eqs. (3.113) along with the equation for the reciprocity condition yields the
following four sets of nonlinear equations:
h11, f f = hA11, f f −
1
$
h2, f f · h2,MM −h2, fM · h2,M f
% [
$
hA12, f f · h2,MM −hA12, fM · h2,MF
%
hA21, f f + · ·
· · +
$
hA12, fM · h2, f f −hA12, f f · h2, fM
%
hA21,M f ]
(3.114)
h12, f f = hA12, f f −
1
$
h2, f f · h2,MM −h2, fM · h2,M f
% [
$
hA12, f f · h2,MM −hA12, fM · h2,MF
%
hA22, f f + · ·
· · +
$
hA12, fM · h2, f f −hA12, f f · h2, fM
%
hA22,M f ]
h22, f f = hA22, f f −
1
$
h2, f f · h2,MM −h2, fM · h2,M f
% [
$
hA22, f f · h2,MM −hA22, fM · h2,MF
%
hA22, f f + · ·
· · +
$
hA22, fM · h2, f f −hA22, f f · h2, fM
%
hA22,M f ]
h2, fM = h2,M f .
The four unknowns are, h2, f f, h2, fM, h2,M f, and h2,MM, which are the recep-
tances of the assembly at point 2 and need to be solved. The terms h11, f f,
h12, f f, and h22, f f are obtained by three impact hammer tests at points 1 and
2. The FRFs of the free–free substructure A are obtained through the ﬁnite
element method. This system of nonlinear equations is symbolically solved by
using MAPLE R⃝. The translational and rotational degrees of freedom of FRFs
at point B can be obtained as follows:
hB22, f f = h2, f f −hA22, f f
hB22, fM = hB22,M f = h2, fM −hA22, fM
(3.115)
hB22,MM = h2,MM −hA22,MM.
The spindle dynamics that include the rotational degrees of freedom are
stored in a matrix as shown below:
HB,22 =
 hB22, f f
hB22, fM
hB22,M f
hB22,MM
	
.
(3.116)
3.8.1
Experimental Procedure
A shrink ﬁt HSK 63 tool holder with a tool is attached to the spindle as
shown in Figure 3.21. Three impact modal tests are performed at points 1 and
2: the direct FRF at point 1; h11, f f, cross FRF at points 1 and 2; h12, f f and direct
FRF measurement at point 2; and h22, f f as shown in Figure 3.20. Structure A,
the stickout of the tool-holder, is modeled by using the ﬁnite element method
based on Timoshenko beams.

3.8 RECEPTANCE COUPLING OF END MILLS TO SPINDLE-TOOL HOLDER ASSEMBLY
119
Figure 3.20: Modeling of receptance coupling between tool holder and
spindle.
The tool-holder and spindle with HSK 63A taper assembly is coupled by
using Eqs. (3.106) and (3.111) as follows:
H11 =
.
HA,11 −HA,12 ·
$
HB,22 + HA,22
%−1/
· HA,21.
(3.117)
The ﬂuted section of the end mill is considered to be 80% of the total diameter
in the ﬁnite element model and the tool–tool holder connection in the shrink-ﬁt
is assumed to be rigid. The tool–tool holder model is in the free–free condition
as the rigid body modes play an important role in the coupling between the
structures. The damping ratio used for the ﬁnite element model is 1 to 3 percent,
which was veriﬁed by several impact tests.
The proposed receptance coupling method is experimentally evaluated on a
horizontal machining center. The spindle with HSK 63 interface was identiﬁed
by using a short shrink-ﬁt holder with a gauge length of 60 mm ﬁrst. The FRF
of another tool holder with 140 mm gauge length (Fig. 3.21) was estimated by
using the proposed receptance coupling technique. The tool–tool holder con-
nection in the shrink-ﬁt is modeled as a rigid connection and the ﬂuted tool
is considered to be 80% of the total shank diameter. The predicted FRFs at

120
STRUCTURAL DYNAMICS OF MACHINES
Figure 3.21: Finite element model of HSK 63 tool holder and
end mill assembly.
the tool tip are compared with the experiments in both x and y directions,
as shown in Figure 3.22, which has acceptable accuracy for use in chatter
stability prediction methods. The predicted FRFs are also able to model the
higher frequencies more accurately, which are difﬁcult to measure accurately
via impulse modal tests because of the loss of spectral strength of the hammers
at the high-frequency range dominated by the ﬂexible tool modes.
3.9
PROBLEMS
1. A cylindrical AISI 4340 shaft with an elastic modulus of E = 200 GPa is
placed between the chuck and the tail stock center of an engine lathe. The
diameter of the shaft is d = 30 mm, the length of the bar is L = 20 mm, and
the radial depth of cut is a = 0.5 mm. The radial cutting force (Fr) coefﬁcient
of the oblique turning tool is Kr = 500 MPa, where Fr = Krah, and h is the
chip load.
a. Plot the dimensional errors left on the whole shaft as the tool is fed from
the tail stock center toward the chuck. Assume that the tail stock and
chuck supports are rigid.
b. The stiffnesses of the chuck and tail stock are measured as ksp = 50,000
N/mm and kts = 30,000 N/mm, respectively. Plot the dimensional errors
again by including the stiffnesses of both supports.
2. A slender four-ﬂuted high-speed steel (HSS) end mill with a diameter of
d = 19.05 mm and gauge length of L = 100 mm is used in half-immersion
up- and down-milling of 7075 aluminum alloy. The tangential and radial
force cutting constants are given as Kt = 1,200 MPa and Kr = 0.3, where Ft =
Ktah and Kr = Fr/Ft. The elastic modulus of HSS is E = 204 GPa. Plot and
compare the dimensional errors left on both up- and down-milled surfaces
for the axial depth of cuts a = 10, 20, and 30 mm.
3. Two small rectangular steel parts, with identical masses of m0 = 0.76 kg,
are attached to the middle and the end of a slender steel cantilever beam
as shown in Figure 3.18. The dimensions of the steel bar are given as

3.9 PROBLEMS
121
500
1000
1500
2000
2500
3000
3500
4000
4500
5000
-0.3
-0.25
-0.2
-0.15
-0.1
-0.05
0
0.05
Frequency (Hz)
500
1000
1500
2000
2500
3000
3500
4000
4500
5000
-0.15
-0.1
-0.05
0
0.05
0.1
0.15
0.2
Frequency (Hz)
Re [Φ (ω)] μm/N
Predicted
Experiment
Im [ Φ (ω)] μm/N
Figure 3.22: Measured and predicted FRFs in x direction at the tool tip on a high-
speed machining center.

122
STRUCTURAL DYNAMICS OF MACHINES
228
178
127
25
254
1397
178
254
X1
X4
X5
X2
X3
X10
X11
A1
A2
A3
A4
α1
α2
α3
α4
A5
α5
228
178
127
25
25
1397
178
254
X1
X4
X5
X2
X3
X10
X11
A1
A2
A3
A4
α1
α2
α3
α4
A5
α5
γ 5
γ 1
γ 2
Figure 3.23: Modal analysis model of a vertical milling machine presented by Tlusty and Moriwaki
[111]. The measurements are given in millimeters.
l = 450 mm, b = 25.4 mm, and h = 5 mm. Young’s modulus (E) and the mass
density (ρ) of the steel are E = 204 GPa and ρ =7,860 kg/m3. Assume that
half of the bar mass is added to the middle and a quarter is added to the
end point of the beam, and assume that the assembly is approximated as
a 2-DOF system when it vibrates in its most ﬂexible direction x. Develop a
comprehensive computer program to solve the following:
a. Obtain the stiffness matrix in local (x) coordinates using the ﬂexibility
method.
b. Derive the equation of motion in local coordinates using Newton’s law.
Obtain the natural frequencies, modal matrix, and mode shapes. Plot the
real mode shapes of the beam.
c. Assume that the beam is modeled by two torsional springs at the base and
at the middle. Using the torsional design stiffness of the beams at these
points, express the equation of motion using the Lagrangian formula-
tion. Use torsional displacements (θ1, θ2) as design coordinates. Solve for
the natural frequencies and mode shapes. Comment on the differences
between the solutions in local and design coordinates.
d. Express the transformation matrix between the local (x) and design (θ)
coordinates. Obtain local mass and stiffness matrices using design stiff-
ness, design mass, and coordinate transformation matrices.
e. Express the modal mass and modal stiffness matrices. Predict the free
vibrations of masses 1 and 2 when the tip of the bar is displaced 1 mm
and released.

3.9 PROBLEMS
123
4. Assume that the same beam given in the previous question is analyzed by
an experimental modal analysis. The measurements are analyzed by an
experimental modal analysis software, and the identiﬁed parameters of the
structure are given in Example 1.
a. Estimate the local mass, damping, and stiffness matrices.
b. Estimate the torsional design spring constants.
c. Plot the direct transfer function at points 1 and 2 and the cross-transfer
function.
d. Compare the transfer functions obtained from analytical and experimen-
tal modal analysis methods.
5. A vertical milling machine was modeled by Tlusty and Moriwaki [111] as
shown in Figure 3.23. x1, . . . , x5 are local coordinates. Design coordinates are
the rotational angles α1, . . . , α5 with corresponding design torsional springs
γ1, . . . , γ5. The design coordinates (αi) are relative type, which exist as rela-
tive rotations around axes A1, . . . , A5. From the measurements and analysis
made, the local stiffness, mass, and damping matrices are identiﬁed and
given below.
[Kx] : Local Stiffness Matrix [m/N]
+3.0383e+08
−1.4309e+08
+4.7365e+07
−2.6006e+08
+5.9897e+07
−1.4309e+08
+1.2182e+08
−3.7234e+07
+5.8508e+07
−7.9269e+06
+4.7365e+07
−3.7234e+07
+1.7730e+07
−2.7861e+07
−1.8665e+03
−2.6006e+08
+5.8508e+07
−2.7861e+07
+4.2966e+08
−2.0022e+08
+5.9897e+07
−7.9269e+06
−1.8665e+03
−2.0022e+08
+1.6220e+08
[Mx] : Local Mass Matrix [kg]
+7.3779e+01
−1.1939e+01
+4.3726e−05
+5.5505e−04
−7.3919e−04
−1.1939e+01
+3.9957e+01
+3.4192e+00
−2.9887e−04
+1.7549e−04
+4.3726e−05
+3.4192e+00
+2.7603e+01
−3.6039e−05
−2.2129e−04
+5.5505e−04
−2.9887e−04
−3.6039e−05
+4.8745e+01
−2.7705e+01
−7.3919e−04
+1.7549e−04
−2.2129e−04
−2.7705e+01
+4.7240e+02
[Cx] : Local Damping Matrix [N/m/s]
+8.6796e+03
−4.5561e+03
+1.1930e+03
−3.4018e+03
−1.3886e+03
−4.5561e+03
+5.5794e+03
−1.3945e+03
−5.1046e+02
+4.4820e+02
+1.1930e+03
−1.3945e+03
+1.1798e+03
−8.6024e+01
−1.0541e+03
−3.4018e+03
−5.1046e+02
−8.6024e+01
+9.8393e+03
−5.6767e+03
−1.3886e+03
+4.4820e+02
−1.0541e+03
−5.6767e+03
+1.0013e+04
a. Compute eigenvalues, eigenvectors, and damping ratios of individual
modes for the system. Draw diagrams showing mode shapes imposed

124
STRUCTURAL DYNAMICS OF MACHINES
on the sketch of the model of the machine. All the signiﬁcant ﬂexibilities
of the machine occur in the directions x1, . . . , x5, whereas the ﬂexibilities
in the other two directions perpendicular to x are neglected.
b. Now consider the relative motion between tool x10 and workpiece x11.
Assume that the table and knee are rigidly connected with the column
and participate with x5 in the freedom α5. The tool is a rigid exten-
sion of the rigid connection between coordinates x1 and x2. With this in
mind, replace the coordinate system x1, . . . , x5 by the coordinate system
x10, x2, x3, x4, x11. Transform the local kx, mx, and cx to this new coordi-
nate system. Compute the relative transfer function between points x10
and x11. Plot the real part and Nyquist (i.e., polar) plot of the relative
tool–workpiece transfer function.
c. As an extension to the identiﬁcation problem, write the transformation
matrix [C] between the local and design coordinates, and transform the
local stiffness [Kx] to [Kα] to ﬁnd the design stiffness of the ﬁve torsional
springs.

CHAPTER FOUR
MACHINE TOOL VIBRATIONS
4.1
INTRODUCTION
Machine tools experience both forced and self-excited vibrations during
machining operations. The cutting forces can be periodic, as in the case of
milling. The nonsymmetric teeth in drilling, unbalance, or shaft runout in
turning and boring can also produce periodically varying cutting forces. In all
cases, the cutting forces can be periodic at tooth- or spindle-passing frequencies,
which may have strong harmonics up to four to ﬁve times the tooth- or spindle-
passing frequencies. If any of the harmonics coincide with one of the natural
frequencies of the machine and/or workpiece structure, the system exhibits
forced vibrations. The forced vibrations can simply be solved by applying the
predicted cutting or disturbance forces on the transfer function of the struc-
ture by the use of the solution of ordinary differential equations in the time
domain. However, self-excited, chatter vibrations are the most detrimental for
the safety and quality of the machining operations, which are covered in this
chapter.
Machine tool chatter vibrations result from a self-excitation mechanism in
the generation of chip thickness during machining operations. One of the struc-
tural modes of the machine tool–workpiece system is initially excited by cutting
forces. A wavy surface ﬁnish left during the previous revolution in turning, or
by a previous tooth in milling, is removed during the succeeding revolution or
tooth period, which also leaves a wavy surface owing to structural vibrations
[112]. Depending on the phase shift between the two successive waves, the
maximum chip thickness may grow exponentially while oscillating at a chatter
frequency that is close to, but not equal to, a dominant structural mode in the
system. The growing vibrations increase the cutting forces and may chip the
tool and produce a poor, wavy surface ﬁnish. The self-excited chatter vibrations
may be caused by mode-coupling or regeneration of the chip thickness [114].
The mode-coupling chatter occurs when there are vibrations in two directions
in the plane of cut. The regenerative chatter results from phase differences
between the vibration waves left on both sides of the chip and occurs earlier
than the mode-coupling chatter in most machining cases. Hence, the fundamen-
tals of regenerative chatter vibrations are explained in the following section
by the use of a simple orthogonal cutting process as an example. However,
when the cross-coupling of vibration modes is considered, the mode coupling is
inherently covered by the stability models presented in the chapter.
125

126
MACHINE TOOL VIBRATIONS
Workpiece
Tool
Feed Direction
a
Chuck
n
Previous
Chip Thickness
Present
Chip Thickness
Intended
Chip Thickness
Dynamic
Chip Thickness
Workpiece
h0
h(t)
y(t)
y(t-T)
ε
Tool
cy
ky
+
+
+
-
h0(s)
Kf a
h(s)
y(s)
Ff (s)
y(s)
Inner Modulation
Outer Modulation
y0(s)
e-Ts
Φ(s)
Machine Structure
Ff
h0
h(t)
hd(t)
hd(t-T)
Block diagram of chatter dynamics
Orthogonal plunge turning
Wave generation
ε
Figure 4.1: Regenerative chatter vibrations in orthogonal cutting.
4.2
STABILITY OF REGENERATIVE CHATTER VIBRATIONS IN
ORTHOGONAL CUTTING
The fundamentals of regenerative chatter in classical orthogonal cutting are
ﬁrst presented by neglecting the process damping. The dimensionless analysis
of the stability is derived next to illustrate the relationship between the lobes,
spindle speed, and damping ratio. The effect of process damping at lower cutting
speeds is also explained analytically and experimentally.
4.2.1
Stability of Orthogonal Cutting
Assume that a ﬂat-faced orthogonal grooving tool is fed perpendicular to the
axis of a cylindrical shaft held between the chuck and the tail stock center
of a lathe (see Fig. 4.1). The shaft is ﬂexible in the direction of feed, and the
feed cutting force (Ff) causes it to vibrate. The initial surface of the shaft is
smooth without waves during the ﬁrst revolution, but the tool starts leaving a
wavy surface behind because of the bending vibrations of the shaft in the feed
direction y, which is in the direction of the radial cutting force (Ff). When the
second revolution starts, the surface has waves both inside the cut where the
tool is cutting (i.e., inner modulation, y(t)) and on the outside surface of the cut
owing to vibrations during the previous revolution of cut (i.e., outer modulation,
y(t −T)). Hence, the resulting dynamic chip thickness is no longer constant,

4.2 STABILITY OF REGENERATIVE CHATTER VIBRATIONS IN ORTHOGONAL CUTTING
127
but it varies as a function of vibration frequency and the speed of the workpiece.
The general dynamic chip thickness can be expressed as follows:
h(t) = h0 −[y(t) −y(t −T)],
(4.1)
where h0 is the intended chip thickness, which is equal to the feed rate of the
machine, and [y(t) −y(t −T)] is the dynamic chip thickness produced owing to
vibrations at the present time t and one spindle revolution period (T) before.
Assuming that the workpiece is approximated as a single–degree-of-freedom
system in the radial direction, the equation of motion of the system can be
expressed as the following:
my ¨
y(t) + cy ˙
y(t) + kyy(t) = Ff(t) = Kfah(t)
= Kfa[h0 + y(t −T) −y(t)],
(4.2)
where the feed cutting force is proportional to the cutting constant in the feed
direction (Kf), with width of cut a and the dynamic chip load h(t). Because
the forcing function on the right-hand side depends on the present and past
solutions of vibrations (y(t), y(t −T)) on the left side of the equation, the chat-
ter vibration expression is a delay differential equation. Furthermore, if the
vibration is too large (i.e., y(t) −y(t −T) > h0), then the tool jumps out of cut,
thus producing a zero chip thickness and zero cutting force. In addition, the
inﬂuence of vibration marks left on the surface during the previous revolutions
may further complicate the computation of exact chip thickness because of
the tool jumping out of cut at various instances and revolutions (i.e., a multiple
regenerative effect). The cutting constant Kf may also change depending on the
magnitude of instantaneous chip thickness and the orientation of the vibrating
tool or workpiece, which adds an additional difﬁculty in the dynamic cutting
process. When the ﬂank face of the tool rubs against the wavy surface left
behind, additional process damping is added to the dynamic cutting process,
and this attenuates the chatter vibrations. Because the whole process is too
complex and nonlinear to model correctly analytically, time domain, numeri-
cal methods are widely used to simulate the chatter vibrations in machining.
However, a clear understanding of chatter stability is still important and is
best explained by using a linear stability theory. The stability of chatter vibra-
tions is analyzed by using the linear theory of Tobias [113], Tlusty and Polacek
[112], and Merrit [77]. Nonlinearities such as the tool jumping out of cut [110],
multiple regeneration, process damping, and nonlinear cutting constant are
neglected in linear stability analysis.
The chatter vibration system can be represented by the block diagram shown
in Figure 4.1, where the parameters of the dynamic cutting process are shown
in the Laplace domain. Input to the system is the desired chip thickness h0, and
the output of the feedback system is the current vibration y(t) left on the inner
surface. In the Laplace domain, y(s) = Ly(t), and the vibration imprinted on
the outer surface during the previous revolution is e−sTy(s) = Ly(t −T), where

128
MACHINE TOOL VIBRATIONS
T is the spindle period. The dynamic chip thickness in the Laplace domain is
h(s) = h0 −y(s) + e−sTy(s) = h0 + (e−sT −1)y(s),
(4.3)
which produces a dynamic cutting force of
Ff(s) = Kfah(s).
(4.4)
The cutting force excites the structure and produces the current vibrations as
follows:
y(s) = Ff(s)(s) = Kfah(s)(s),
(4.5)
where the transfer function of the single degree of workpiece structure is
(s) = y(s)
Ff(s) =
ω2
n
ky
$
s2 + 2ζωns + ω2n
%.
Substituting y(s) into h(s) yields
h(s) = h0 + (e−sT −1)Kfah(s)(s),
and the resulting transfer function between the dynamic and reference chip
loads becomes
h(s)
h0(s) =
1
1 + (1 −e−sT )Kfa(s).
(4.6)
The stability of this closed-loop transfer function is determined by the roots (s)
of its characteristic equation, that is,
1 + (1 −e−sT )Kfa(s) = 0.
Let the root of the characteristic equation be s = σ + jωc. If the real part
of the root is positive (σ > 0), the time domain solution will have an expo-
nential term with positive power (i.e., e+|σ|t). The chatter vibrations will grow
indeﬁnitely, and the system will be unstable. A negative real root (σ < 0) will
suppress the vibrations with time (i.e., e−|σ|t), and the system is stable with
chatter vibration–free cutting. When the real part is zero (s = jωc), the sys-
tem is critically stable, and the workpiece oscillates with a constant vibration
amplitude at chatter frequency ωc. Note that the chatter vibration frequency
does not equal the natural frequency of the structure, because the charac-
teristic equation of the dynamic cutting process has additional terms beyond
the structure’s transfer function. However, the chatter vibration frequency is
still close to the natural mode of the structure. For critical borderline stability
analysis (s = jωc), the characteristic function becomes
1 + (1 −e−jωcT )Kfalim( jωc) = 0,
(4.7)

4.2 STABILITY OF REGENERATIVE CHATTER VIBRATIONS IN ORTHOGONAL CUTTING
129
where alim is the maximum axial depth of cut for chatter vibration–free machin-
ing. The transfer function can be partitioned into real and imaginary parts
(i.e., ( jωc) = G + jH). Rearranging the characteristic equation with real and
complex parts yields
{1 + Kfalim[G(1 −cos ωcT) −H sin ωcT]}
+ j{Kfalim[G sin ωcT + H(1 −cos ωcT)]} = 0.
Both real and imaginary parts of the characteristic equation must be zero.
If the imaginary part is considered ﬁrst, then
G sin ωcT + H(1 −cos ωcT) = 0
and
tan ψ = H(ωc)
G(ωc) =
sin ωcT
cos ωcT −1,
(4.8)
where ψ is the phase shift of the structure’s transfer function. Using
the trigonometric identity cos ωcT = cos2 (ωcT/2) −sin2 (ωcT/2) and sin ωcT =
2 sin (ωcT/2) cos (ωcT/2), we have
tan ψ =
cos (ωcT/2)
−sin (ωcT/2) = tan [(ωcT)/2 −(3π)/2]
and
ωcT = 3π + 2ψ →ψ = tan−1 H
G .
(4.9)
Note that calculation of the phase angle ψ from the transfer function must
be correctly done with digital computers, as explained in Figure 4.2.
The spindle speed (n [rev/s]) and the chatter vibration frequency (ωc) have
a relationship that affects the dynamic chip thickness. Let us assume that the
chatter vibration frequency is ωc [rad/s] or fc [Hz]. The number of vibration
waves left on the surface of the workpiece is
fc [Hz] · T [s] = fc
n = k + ϵ
2π ,
(4.10)
where k is the integer number of waves and ϵ/2π is the fractional wave gener-
ated. The angle ϵ represents the phase difference between the inner and outer
modulations. Note that, if the spindle and vibration frequencies have an inte-
ger ratio, the phase difference between the inner and outer waves on the chip
surface will be zero or 2π; hence, the chip thickness will be constant despite the
presence of vibrations. In this case, the inner (y(t)) and outer (y(t −T)) waves
are parallel to each other. If the phase angle is not zero, the chip thickness
changes continuously. Consider (k′) the integer number of full vibration cycles
and the phase shift
2π fcT = 2kπ + ϵ,
(4.11)

130
MACHINE TOOL VIBRATIONS
ψ
2π−ε
Kf a
1
G(ω)
G(ω)
jH(ω)
 F
y
 F
y
e-jε
ε
G > 0, H < 0 →ψ = −tan−1 |(H/G)|.
G < 0, H < 0 →ψ = −π + tan−1 |(H/G)|.
G < 0, H > 0 →ψ = −π −tan−1 |(H/G)|.
G > 0, H > 0 →ψ = −2π + tan−1 |(H/G)|.
Figure 4.2: Calculation of phase angle ψ from the
polar plots.
where the phase shift between the inner
and outer waves is ϵ = 3π + 2ψ. The corre-
sponding spindle period (T [s]) and speed
(n [rev/min]) is found to be
T = 2kπ + ϵ
2π fc
→n = 60
T .
(4.12)
The critical axial depth of cut can be
found by equating the real part of the char-
acteristic equation to zero as follows:
1+Kfalim[G(1−cos ωcT)−H sin ωcT]=0,
or
alim =
−1
KfG[(1−cos ωcT)−(H/G) sin ωcT].
Substituting
H/G = (sin ωcT)/(cos ωcT −
1) and rearranging this equation yields
alim =
−1
2KfG(ωc).
(4.13)
Note that, because the depth of cut is a
physical quantity, the solution is valid only
for negative values of the real part of the transfer function (G(ωc)). The chatter
vibrations may occur at any frequency where G(ωc) is negative. If alim is selected
by using the minimum value of G(ωc), the avoidance of chatter is guaranteed
at any spindle speed. The expression indicates that the axial depth of cut
is inversely proportional to the ﬂexibility of the structure and to the cutting
constant of the workpiece material. The harder the work material is, the larger
the cutting constant Kf will be, thus reducing the axial depth of cut. Similarly,
ﬂexible machine tool or workpiece structures will also reduce the axial depth
of cut or the productivity.
The above stability expression was ﬁrst obtained by Tlusty and Polacek
[112]. Tobias [113] and Merrit [77] presented similar solutions. Tobias pre-
sented stability charts indicating chatter vibration–free spindle speeds and
axial depth of cuts. Assuming that the transfer function of the structure at the
cutting point () and cutting constant Kf are known or measured, the procedure
for plotting the stability lobes can be summarized in the following:
r Select a chatter frequency (ωc) at the negative real part of the transfer
function.
r Calculate the phase angle of the structure at ωc (Eq. 4.8).
r Calculate the critical depth of cut from Eq. (4.13).
r Calculate the spindle speed from Eq. (4.12) for each stability lobe k = 0,
1, 2, . . ..

4.2 STABILITY OF REGENERATIVE CHATTER VIBRATIONS IN ORTHOGONAL CUTTING
131
C1
K1
X1
h
y(t-T)
y(t)
WORKPIECE
TOOL
∈
(M)
K2
C2
x2
x
y
F
θ2
0
y
h(t)
θ 1
50
100
150
200
250
300
0
–8
–6
–4
–2
0
2
4
6
8
Real part G[m/N] x 10 -8
Frequency  [Hz]
Spindle speed [rev/min]
a          [mm]
lim
4000
6000
8000
10000
12000
14000
0
10
20
30
40
50
60
150 Hz
250 Hz
a          [mm]
lim
Figure 4.3: Stability of a 2-DOF shaping process.
r Repeat the procedure by scanning the chatter frequencies around the natural
frequency of the structure.
If the structure has multiple degrees of freedom, a transfer function of the
system oriented in the direction of chip thickness must be considered for .
The computation of oriented transfer function was given in Section 3.4.2. In
that case, the negative real part of the complete transfer function around all
dominant modes must be scanned by using the same procedure outlined for the
orthogonal cutting process.
Example. Stability of a Shaping System with Two Degrees of Freedom. A shaping
process with a two–degree-of-freedom (2-DOF) system is shown in Figure 4.3.

132
MACHINE TOOL VIBRATIONS
The system ﬂexibilities in directions x1 and x2 are given as
x1 ←ωn1 = 250 Hz,
ζ1 = 1.2%,
k1 = 2.26 × 108 N/m,
x2 ←ωn2 = 150 Hz,
ζ2 = 1.0%,
k2 = 2.13 × 108 N/m.
The cutting force is Fy = Kfah(t), where the cutting constant Kf = 1,000 MPa.
The ﬂexibilities are oriented with θ1 = 30◦and θ2 = −45◦from the y axis. Plot
the stability lobe of the system.
Answer. The real part of the oriented transfer function between the displace-
ment in the y direction and the cutting force Fy is
ℜ( jω) = G( jω) = y( jω)
Fy( jω)
= cos2 θ1
1 −r2
1
k1
$
1 −r2
1
%2 + (2ζ1r1)2 + cos2 θ2
1 −r2
2
k2
$
1 −r2
2
%2 + (2ζ2r2)2,
where r1,2 = ω/ωn1,2. The oriented transfer function and the corresponding sta-
bility lobes are given in Figure 4.3.
4.2.2
Dimensionless Analysis of Stability Lobes in
Orthogonal Cutting
The stability lobes are used to identify the chatter free, productive cutting
conditions. The understanding of the governing physics behind the lobes, and
their mathematical relationship with the dynamics of the machine are impor-
tant to apply the theory to various machining operations and machine tool
design [7]. The same chatter stability theory given in the previous section is
presented in a different mathematical format by Insperger and Stepan [53]
in the following derivations where the speed is normalized with the natural
frequency of a single–degree-of-freedom system.
The equation of motion for a dynamic cutting process represented by Eq. (4.2)
is expressed as follows:
d2y(t)
dt2
+ 2ζωn
dy(t)
dt
+ ω2
ny(t) = ω2
n
ky
Kfa

h0 −y(t) + y(t −T)

.
(4.14)
Let the static chip load be dropped (h0 = 0) to consider only the dynamic
component that affects the stability. To transform the system dynamics into a
dimensionless form, let time t be replaced by t = τ/ωn as follows:
τ →ωnt, δ = ωnT,
dτ = ωndt →dτ
dt = ωn
dy
dt = dy
dτ
dτ
dt = dy
dτ ωn, d2y
dt2 = d
dt
dy
dτ ωn

= d2y
dτ 2 ω2
n.
(4.15)

4.2 STABILITY OF REGENERATIVE CHATTER VIBRATIONS IN ORTHOGONAL CUTTING
133
By substituting angular distances δ = ωnT, τ →ωnt into the dynamic cut-
ting equation,
ω2
n
d2y(τ )
dτ 2
+ 2ζω2
n
dy(τ )
dτ
+ ω2
ny(τ ) = ω2
n
ky
Kfa

−y(τ ) + y(τ −δ)

d2y(τ )
dτ 2
+ 2ζ dy(τ )
dτ
+

1 + Kfa
ky
	
y(τ ) = Kfa
ky

y(τ −δ)

d2y(τ )
dτ 2
+ 2ζ dy(τ )
dτ
+

1 + w

y(τ ) = w

y(τ −δ)

,
(4.16)
where the dimensionless gain of the system is w = Kfa/ky. The Laplace trans-
form of the delayed system is
s2y(s) + 2ζsy(s) +

1 + w

y(s) = we−δsy(s),
(4.17)
which leads to the characteristic equation of dynamic cutting as follows:
s2 + 2ζs +

1 + w

−we−δs = 0
(4.18)
To ﬁnd the critically stable cutting conditions, the roots of the character-
istic equation (Eq. 4.18) must have zero real part, and the imaginary part
must indicate the corresponding vibration frequency (ωc) during machining.
By substituting s = ir, where r = ωc/ωn is the dimensionless, ratio of chat-
ter frequency over natural frequency at the critical stability condition, and
e−iδr = cos δr −i sin δr, the characteristic equation becomes
−r2 + i2ζr +

1 + w

−w cos δr + iw sin δr = 0
(4.19)
Real part
1 −r2 + w = w cos δr
Imaginary part
2ζr = −w sin δr
By taking the squares of both real and imaginary parts and summing them
(
$
1 −r2 + w
%2 + (2ζr)2 = w2) leads to the dimensionless gain of
w = −
$
1 −r2%2 + 4ζ 2r2
2(1 −r2)
.
The physical depth of cut at the critically stable conditions, i.e., on the
stability lobes, are given by
w = Kfa
ky
→a = −ky
Kf
$
1 −r2%2 + 4ζ 2r2
2(1 −r2)
.
(4.20)

134
MACHINE TOOL VIBRATIONS
Substituting sin δr = 2 tan δr
2 /

1 + tan2( δr
2 )

into the imaginary part (2ζr =
−w sin δr) of the characteristic Eq. (4.19),
w = −2ζr
sin δr = −1 + tan2( δr
2 )
tan δr
2
ζr,
which is substituted again into the real part (1 −r2 + w = w cos δr) of the char-
acteristic Eq. (4.19) with cos δr = (1 −tan2 δr
2 )/(1 + tan2 δr
2 ) as follows:
1 −r2 −1 + tan2( δr
2 )
tan δr
2
ζr = −1 + tan2( δr
2 )
tan δr
2
ζr 1 −tan2 δr
2
1 + tan2( δr
2 )
(1 −r2) tan δr
2 =

1 + tan2(δr
2 ) −1 + tan2 δr
2
	
ζr
(1 −r2) tan δr
2 =

2 tan2(δr
2 )
	
ζr →tan(δr
2 ) = 1 −r2
2ζr
δ = 2
r

tan−1
1 −r2
2ζr

+ kπ
	
tan ψ = −2ζr
1 −r2 →δ = 2
r

tan−1 (−cot(ψ)) + kπ

δ = 2
r
.
tan−1 
−tan(π
2 −ψ)

+ kπ
/
δ = 2
r

ψ + 2k −1
2
π
	
→ψ = tan−1 −2ζr
1 −r2 .
The corresponding spindle speed on the stability lobe can be found by switch-
ing from the dimensionless time delay δ to the real time delay in seconds as
follows:
Time delay T = δ
ωn
= 2
ωnr

tan−1
1−r2
2ζr

+kπ
	
=
2
ωnr

ψ + 2k−1
2
π
	
2πn [rev/s]/ωn = 2π
δ
=
2πr
2
.
tan−1 
1−r2
2ζr

+ kπ
/ =
2πr
2
.
ψ + 2k−1
2 π
/
Spindle speed n [rev/s] =
rωn
2
.
tan−1 
1−r2
2ζr

+ kπ
/ =
rωn
2
.
ψ + 2k−1
2 π
/
Regenerative phase ε = ωT = 2

ψ + 2k −1
2
π
	
= 2ψ + (2k −1)π.

4.2 STABILITY OF REGENERATIVE CHATTER VIBRATIONS IN ORTHOGONAL CUTTING
135
The stability lobes can be derived as follows:
The excitation ratio r = ωc
ωn
Critical depth of cut a = −ky
Kt
$
1 −r2%2 + 4ζ 2r2
2(1 −r2)
Spindle speed n [rev/s] =
rωn
2
.
tan−1 
1−r2
2ζr

+ kπ
/ →k = 1, 2, . . .
At r = ωc/ωn =

1 + 2ζ, the minimum critical depth of cut becomes equal
to Tlusty’s simple formula acr = 2kyζ (1 + ζ )/Kt ≈2kyζ/Kt, where ζ 2 ≈0. Note
that the lobes become asymptotically tangent to the absolute, dimensionless
depth of cut of w = 2ζ (1 + ζ ) at spindle speeds n = ( 4
3, 4
7, 4
11, . . .)ωn, where the
critical chatter frequency is ωc = ωn

1 + 2ζ. By letting r =

1 + 2ζ, the spindle
speeds where the axial depth of cut is minimum can be found.
Spindle speed n [rev/s] =
rωn
2

tan−1

1−1−2ζ
2ζ√
1+2ζ

+ kπ
	
n [rev/s] ≈
ωn
2

−π
4 + kπ
 = ωn
2π
4

4k −1
 →k = 1, 2, 3, . . .
n [rev/s] ≈ωn
2π

4
3, 4
7, 4
11, . . .

= ωn
2π {1.333, 0.5714, 0.3636, . . .}
Example 4. Stability lobes ζ = 0.01.
r = ωc/ωn
w = −(1−r2)
2+4ζ2r2
2(1−r2)
k
ε
n/ωc
∞
∞
1
π
200
1.333
0.39
1
π
2.6

1 + 2ζ
0.02
1
3π
2
4/3
1
∞
1
2π
1
100
5000
2
π
66
1.33
0.39
2
π
6.66

1 + 2ζ
0.02
2
3π
2
4/7
1
∞
2
4π
1/2

1 + 2ζ
0.02
3
3π
2
4/11
4.2.3
Chatter Stability of Orthogonal Cutting with Process Damping
The schematic of a simple model of orthogonal cutting is given in Figure 4.4.
The traditional regenerative cutting force (Fx(t)) at time t is expressed with the

136
MACHINE TOOL VIBRATIONS
x(t)
m
y
x
Fx
Fy
V
x.
V- x.
x._
V
Effective 
Cutting
Velocity
V
c
k
x(t-Τ)
Figure 4.4: The velocity effect on dynamic
cutting
forces,
according
to
Das
and
Tobias [42].
velocity effect by Das and Tobias [42] as follows:
m ¨
x(t) + c ˙
x(t) + kx(t) = Fx(t)
Fx(t) = Kfa[h0 + x(t −T) −x(t)] −Ktah0
.x
V ,
(4.21)
where x(t) and x(t −T) are the inner and outer vibrations, and Kf and Kt
are the static cutting force coefﬁcients in feed and cutting speed directions,
respectively. V is the cutting velocity, a is the width of cut, h0 is the feed
per revolution, and T is the time delay between the inner and outer vibration
waves. The velocity term ((dx/dt)/V) introduced by Das and Tobias increases
the damping in the system (c + Ktah0(dx/dt) /V instead of c) at low cutting
speeds. Although Das and Tobias’s modiﬁed dynamic cutting process model
leads to increased stability at the low speeds, it considers only the direction
of change in the velocity term and does not consider ﬂank contact. Instead of
using the static force coefﬁcient (Kt), the inﬂuence of the ﬂank–wave contact is
modeled by considering both slope of the waves [12],
Fx(t) = a

Kf

h0 −x(t) + x(t −T)

−Ci
dx/dt
V

,
(4.22)
or in the Laplace domain,
Fx(t) = a

Kf

h0 −
$
1 −e−sT%
x(s)

−Ci
V sx(s)

,
(4.23)
where the slope (dx/du) is related to the velocity term as follows:
dx
du = dx
dt
1
du/dt = dx/dt
V
(4.24)
Although the static cutting force coefﬁcients (Kt) can be easily identiﬁed from
vibration-free orthogonal cutting tests, the velocity-dependent cutting force
coefﬁcient (Ci) can only be identiﬁed from a set of dynamic cutting tests, because
they represent the contact between the wavy surface material and the ﬂank face
of the tool. Alternatively, the contact forces can be predicted by using Hertzian
models, but not as accurately as experimental identiﬁcation from cutting tests.
When the cutting tool experiences a harmonic motion (x(t) = Xejωt) with an

4.2 STABILITY OF REGENERATIVE CHATTER VIBRATIONS IN ORTHOGONAL CUTTING
137
amplitude X and frequency ω during vibrations, the dynamic cutting force
equation becomes
Fx(t) = Kfah0 + aXejωt 
−Kf

1 −e−jωT
−jCi
ω
V

.
(4.25)
The length of the vibration wave imprinted on the surface is λ = V(2π/ω),
which leads to ω/V = 2π/λ. The modiﬁed dynamic cutting force expression
becomes
Fx(t) = Kfah0 + aXejωt

−Kf

1 −e−jωT
−j2π
λ Ci

,
(4.26)
which correlates the process damping forces to the vibration wavelength (λ) or
the ratio of vibration frequency over cutting speed (ω/V). The effect of cutting
speed on the dynamic cutting force can be analyzed from Eq. (4.26). Consid-
ering that the critical vibration frequency remains close to the natural fre-
quency of the structure as the cutting speed increases, the wavelength of the
vibration marks becomes larger and the ﬂank contact reduces. In other words,
the effect of the velocity and acceleration terms in the dynamic cutting force
model reduces at high cutting speeds. The wavelength (4.26) decreases, and the
process damping increases as the cutting speed decreases. The dynamic cut-
ting force coefﬁcients of materials are identiﬁed from a series of cutting tests
conducted with a specially instrumented, piezo-actuated dynamic test rig, as
explained by Altintas et al. [12].
By neglecting the static cutting force (Kfah0), the dynamic cutting process
equation is derived in the Laplace domain as follows:

ms2 + cs + k

x(s) = Fx(s) →x(s) = x(s)
Fx(s) =
1
ms2 + cs + k
(4.27)
Fx(s) = a

−Kf
$
1 −e−sT%
−Ci
V s
	
x(s) →x(s) = x(s)Fx(s),
(4.28)
which leads to the following characteristic equation:
1 + a

Kf
$
1 −e−sT%
+ Ci
V s
	
x(s) = 0.
(4.29)
By replacing s = jωc and separating the characteristic equation of the system
into real and imaginary parts, the stability can be investigated in the frequency
domain as follows:
{1 + Kfa[G(1 −cos ωcT) −H

sin ωcT −Ci
V ωc

]}
+ j{Kfa[G

sin ωcT + Ci
V ωc

+ H(1 −cos ωcT)]} = 0.
(4.30)
Because the velocity-dependent term (Ci
V ωc) prevents the application of
Tlusty’s or Tobias’s stability theory, the Nyquist stability criterion is used to
construct the stability charts with process damping. The characteristic equa-
tion is evaluated by scanning the chatter frequency from zero to the maximum

138
MACHINE TOOL VIBRATIONS
0.1
0.2
0.6
0.7
0.3
0.4
0.5
500
0
500
1000
1500
Cutting Forces (N)
 Chatter
Fr
Ft
 Time (s)
2.5
0.0
0.5
1.0
1.5
2.0
0
1000
2000
3000
4000
Depth Of Cut (mm)
Stable
Chatter
with velocity terms
 With regenerative chip
 With regenerative chip
 Spindle speed (rev/min)
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
100
0
100
200
300
400
Cutting Forces (N)
Fr
Ft
 Stable cut
 Time (s)
0
Figure 4.5: Stability lobes with and without process damp-
ing terms. Measured cutting forces during stable (n = 500
rev/min, a = 1 mm) and unstable (n = 1,500 rev/min, a = 1
mm) cutting tests. Material: AISI1045 with a diameter of
35 mm. Process parameters: mx = 0.561 [kg], kx = 6.48 · 106
[N/m], cx = 145 [N/m/s], Kf = 1,384 [N/mm2], Ci = 6.9 ·
106/(2π) = 1.1 · 106 [N/m].
possible vibration frequency ωc =
0 →ωmax. If the polar plot in com-
plex plane encircles origin (4.30),
the system is assumed to be unsta-
ble and chatter would occur. It must
be noted that the characteristic
equation represents the closed-loop
system;
hence,
the
encirclement
condition of the Nyquist criterion is
valid around the origin (zero) but
not around −1. (If +1 is dropped
from the real part, then the encir-
clement around −1 can be used
for the stability inspection.) The
spindle speed (i.e., spindle period
T), depth of cut (a), and chat-
ter frequency (ωc) are assumed in
Eq. (4.30). The Nyquist stability cri-
terion is applied to check whether
the process is stable or not, and the
chart is constructed by scanning all
spindle speeds and depths of cut
that lie in the cutting region of inter-
est. The chatter stability diagrams
generated with only regenerative
and added velocity terms are shown
in Figure 4.5. The classical chat-
ter stability law with only regener-
ative chip thickness is not velocity
dependent at the low speeds, where
it gives a constant critical depth of
cut of 0.4 mm. If the velocity, i.e.,
process damping term (Ci 2π
λ ), is included, the stability starts increasing at
speeds less than 2,000 (rev/min).
It is well known that the tool wear changes the cutting edge geometry and
ﬂank contact with the wavy surface ﬁnish. A series of dynamic cutting tests
were conducted on stainless steel. Because stainless steel produces high heat,
the tools were worn quickly. The dynamic cutting coefﬁcients were identiﬁed
by using both sharp and worn tools. The corresponding stability charts are
shown in Figure 4.6, where the curvature terms are ignored from the dynamic
cutting force coefﬁcients. The ﬂank wear was about 0.080 mm. The stability
with process damping moved from 1,000 rev/min to 3,000 rev/min, and all
the unstable cutting tests with sharp tools were observed to become stable
when tested with the worn tool. The chatter occurred only at 3500 rev/min and
1.5-mm depth of cut with the worn tool. It is also shown on Figure 4.6 that

4.3 CHATTER STABILITY OF TURNING OPERATIONS
139
0
0.5
1
1.5
2
2.5
0
500
1000
1500
2000
2500
3000
3500
Spindle Speed (rev/min)
Depth of Cut (mm)
 new tool
worn tool
Chatter with new tool, Stable with worn tool
Stable
Chatter
-400
-200
0
200
400
600
800
1000
1200
1400
1600
1800
0
5
10
15
20
Test Number
Dynamic Coefficient (MPa)
Im(Fr)
Re(Fr ) 
Figure 4.6: The effect of tool wear on the stability lobes
with experimental results. Material: Stainless steel SS304
shaft with 35 mm diameter. Feed rate: 0.050 mm/rev. Pro-
cess parameters: mx = 1.742 [kg], kx = 7.92 · 106 [N/m], cx =
176.8 [N/m/s], Kf = 2,585 [N/mm2], Ci = 1.181 · 106 [N/m].
Worn tool with 0.080 mm ﬂank wear Ci = 4.5856 · 106 [N/m].
the process damping coefﬁcient
increases with the tool wear.
4.3
CHATTER STABILITY
OF TURNING OPERATIONS
Although the boring bar is usu-
ally the most ﬂexible part in
hole enlargement operations, the
shaft, chuck, tail stock, and tool
holder may contribute to the ﬂexi-
bility that leads to chatter in turn-
ing
operations.
However,
both
operations have similar mechan-
ics and dynamics because of hav-
ing geometrically deﬁned cutting
tool edges. A general diagram of
a single-point cutting operation is
shown in Figure 4.7. It is custom-
ary to model the cutting forces in
oblique cutting coordinates, i.e.,
tangential or cutting speed direc-
tion (Ft), chip thickness direction
or perpendicular to the cutting
edge (Ff), and along the cutting
edge (Fr) as shown in Figure 4.7.
By neglecting the edge forces, the
cutting forces in oblique coordi-
nates are expressed as
Ftc = Ktcbh
Ffc = Kfcbh
Frc = Krcbh
⎫
⎬
⎭.
(4.31)
where the b and h are the width of cut and uncut chip thickness, respec-
tively. Cutting force coefﬁcients (Ktc, Kfc, Krc) can be evaluated either from
shear stress, shear angle, friction coefﬁcient, and tool geometry, or by mech-
anistic curve ﬁtting to experimental force data as explained earlier. Alterna-
tively, the resultant cutting force can be constructed from the oblique cutting
forces as follows:
Fc =

F2
tc + F2
fc + F2
rc = bhKtc

1 +
Kfc
Ktc
2
+
Krc
Ktc
2
Fc = Kcbh →
Kc = Ktc

1 +
Kfc
Ktc
2
+
Krc
Ktc
2
.
(4.32)

140
MACHINE TOOL VIBRATIONS
Z
X
Y
F
F
F
F
fc
rc
tc
c
ψr
β
a
β
r
ψr
γ
Figure 4.7: Stability of a turning process.
The oblique forces acting on the cutting edge can be expressed as a function
of resultant force as follows:
Ftc = Fc cos γ
→cos γ = 1/

1 +
Kfc
Ktc
2
+
Krc
Ktc
2
Ffc = Fc cos γ tan βa →tan βa = Kfc
Ktc
Frc = Fc cos γ tan βr →tan βr = Krc
Ktc
.
(4.33)
The cutting forces are projected to the machine tool coordinate system as
follows:
⎧
⎨
⎩
Fx
Fy
Fz
⎫
⎬
⎭=
⎡
⎣
0 −sin ψr −cos ψr
−1
0
0
0 −cos ψr
sin ψr
⎤
⎦
⎧
⎨
⎩
cos γ
cos γ tan βa
cos γ tan βr
⎫
⎬
⎭Fc.
(4.34)
It is assumed that the system is ﬂexible in all three machine coordinates,
and the vibrations (x, y, z) can be estimated from the cutting forces (Fx, Fy, Fz)
and the measured or predicted Frequency Response Function (FRF) matrix at
the cutting point [] as follows:
⎧
⎨
⎩
x( jωc)
y( jωc)
z( jωc)
⎫
⎬
⎭=
⎡
⎣
xx( jωc) xy( jωc) xz( jωc)
yx( jωc) yy( jωc) yz( jωc)
zx( jωc) zy( jωc) zz( jωc)
⎤
⎦
⎧
⎨
⎩
Fx( jωc)
Fy( jωc)
Fz ( jωc)
⎫
⎬
⎭
(4.35)
{X( jωc)} =

( jωc)
 {F( jωc)} ,
where the cross-frequency response functions (xy, xz, yz) may be negligible if
the machine has uncoupled structural dynamics in three orthogonal directions.
The resulting vibrations must be projected in the direction of chip thickness

4.3 CHATTER STABILITY OF TURNING OPERATIONS
141
that is perpendicular to the cutting edge, so that the deformed chip dynamic
thickness can be evaluated as follows:
hd(t) =

sin ψr 0 cos ψr

⎧
⎨
⎩
−

x(t) −x(t −T)

−

y(t) −y(t −T)

−

z(t) −z(t −T)

⎫
⎬
⎭,
(4.36)
where T is the spindle period or time delay term. By assuming that the sys-
tem is critically stable, the dynamic chip thickness that vibrates at vibration
frequency ωc can be expressed as
hd( jωc) = −(1 −e−jωcT )

sin ψr 0 cos ψr

⎧
⎨
⎩
x( jωc)
y( jωc)
z( jωc)
⎫
⎬
⎭.
(4.37)
By combining Eqs. (4.33)–(4.35) and (4.37), the dynamic chip thickness can be
expressed as a function of machine dynamics and tool geometry as follows:
hd( jωc) = −(1 −e−jωcT )0( jωc)Fc ( jωc) →0( jωc)
=

dpq pq( jωc) ∀(p, q) ∈(x, y, z),
(4.38)
where 0( jωc) is called the oriented frequency transfer function, and the
parameters dpq are called directional factors, which are given below for a sta-
tionary cutting edge with an approach angle of ψr:
dxx = −cos γ (sin2 ψr tan βa + 0.5 sin 2ψr tan βr)
dxy = −cos γ sin ψr
dxz = cos γ
$
−0.5 sin 2ψr tan βa + sin2 ψr tan βr
%
dyx = dyy = dyz = 0
dzx = −cos γ
$
0.5 sin 2ψr tan βa + cos2 ψr tan βr
%
dzy = −cos γ cos ψr
dzz = cos γ
$
−cos2 ψr tan βa + 0.5 sin 2ψr tan βr
%
.
By substituting Fc = Kcbhd, the stability equation is found from the charac-
teristic equation of the system as follows:
1 + (1 −e−jωcT )Kcblim0( jωc) = 0.
(4.39)
The directional factors are used to account the variations in the chip thick-
ness due to vibrations in machine coordinates that are excited by the cutting
forces. Koenigsberger and Tlusty [61], Peters and Vanherck [85], Opitz and
Bernadi [82], and others applied the real part of the oriented transfer func-
tion (0) to the orthogonal chatter stability given in Eqs. (4.12) and (4.13),
and obtained chatter stability lobes for single-point machining operations as
follows:
blim = −
1
2Kc Re(0).
(4.40)

142
MACHINE TOOL VIBRATIONS
The spindle speed can be evaluated from Eq. (4.12). However, the accuracy
of the chatter prediction was not always satisfactory in turning and boring
because of several factors. The chatter vibration frequency is typically above
fc ≥200 Hz in single-point machining operations depending on the bar length
in boring or the dimensions of the shaft to be turned, whereas the spindle speed
is less than 1,500 rev/min or n ≤25 Hz. The integer ratio of chatter frequency
over the spindle frequency gives the location of the lobe (k) where the cutting
takes place as follows:
k = int
 fc
n

, ε = 2π · frac
 fc
n

,
where ε is the phase shift between the waves left on the surface during two
subsequent revolutions. Because the cutting takes place at higher lobes where
the spindle speed is low in single-point cutting operations, the operation is
always in the process damping region where the ﬂank interferes with the wavy
surface leading to friction. In addition, the ﬂank friction changes at every point
on the wave, causing the damping to vary harmonically as a function of tool
angle, vibration frequency, and cutting speed. The satisfactory prediction of
chatter stability of boring and turning in the frequency domain needs modeling
of process damping in terms of dynamic or complex cutting coefﬁcients. In
addition to process damping, the boring and turning processes have nonlinear
dynamics. The chip thickness distribution along the cutting edge depends on
the radial depth of cut, the feed rate in the axial direction, the nose radius,
and the approach angle. When the tool has a nose radius, there is no constant
approach angle. The average direction of the cutting force depends on the feed
rate, nose radius, approach angle, and radial depth of cut; hence, Eq. (4.40) can
not be used directly. The frequency domain solution of such a nonlinear system
can be solved only by linearizing the system around a narrow band of depth of
cut and feed, which is not an ideal solution. An alternative method is explained
in the next section, which considers both the nose radius and process damping.
4.4
CHATTER STABILITY OF TURNING SYSTEMS WITH
PROCESS DAMPING
A typical turning tool having an approach angle (κr), and a nose radius (rε)
is used with a depth of cut (a) and feed rate (c) as shown in Figure 4.8. The
distribution of the chip, hence, the force along the cutting edge, depends on the
tool geometry and cutting conditions. A convenient mechanistic force model
based on the direction of chip ﬂow angle is adopted here [45]. Colwell [41]
proposed that the chip ﬂow can be assumed to be normal to the chord, which
connects two ends of the cutting edge engaged with the cut, and makes an angle
of θ with the feed direction as shown in Figure 4.8. The normal force (Fn) and
the side force (Fr) act parallel and normal to the chip ﬂow, respectively. The
tangential force (Ft) acts in the direction of the cutting speed, perpendicular
to the plane deﬁned by the side and normal forces. It is assumed that the

4.4 CHATTER STABILITY OF TURNING SYSTEMS WITH PROCESS DAMPING
143
rε
Approximate
 Chord
Active Cutting Edge
Feed
a
Chip Area
Boundary from
 Previous Cut
Chip Flow
 Direction
c
κr
θ
L
x
y
n
r
θ
z,t
Shear
 Region
Chip
a
Workpiece
Chip Flow
 Direction
Feed
Cutting
Speed
n
r
z,t
x
y
θ
(b)
(c)
φzz
x
y
z
(a)
φxx
φyy
Figure 4.8: Stability of turning with tools having a nose radius.
equivalent chord length acts as a cutting edge, and the nose radius of the tool
is neglected. With a tool having an equivalent chord angle of θ, the Cartesian
machine coordinate system xyz (the coordinate system for the feed and depth
of cut) is shown in Figure 4.8. The vibrations in the measurement (−→i , −→j , −→
k )
and tool (−→
n , −→r , −→t ) coordinate systems are deﬁned as follows:
−→
Q = x−→i + y−→j + z−→
k ; −→
S = N−→
n + R−→r + T−→t .
(4.41)
With the following transformations,

N R T
T =

Cnm
 
x y z
T ⇆

x y z
T =

Cnm
T 
N R T
T ,
(4.42)
where
[Cnm] =
⎡
⎣
cos θ
sin θ
0
−sin θ
cos θ
0
0
0
1
⎤
⎦
The structural dynamics of both the machine and part reﬂected at the tool
tip are represented in the Laplace domain as follows:

Q(s)

=
⎧
⎨
⎩
x(s)
y(s)
z(s)
⎫
⎬
⎭=
⎡
⎣
xx(s)
xy(s)
xz(s)
yx(s)
yy(s)
yz(s)
zx(s)
zy(s)
zz(s)
⎤
⎦
⎧
⎨
⎩
Fx(s)
Fy(s)
Fz(s)
⎫
⎬
⎭= [(s)] {Fm(s)} ,
(4.43)
where (Fx, Fy, Fz) represents the combined metal cutting and process damping
forces acting on the structure in the measurement coordinate (x, y, z) system.
Let us separate the forces into metal cutting (Fmc) and process damping (Fmd)
as follows:
{Fm(s)} = {Fmc(s)} + {Fmd(s)} ,
(4.44)
which are modeled from the cutting and contact mechanics models as follows.

144
MACHINE TOOL VIBRATIONS
hcusp
hcusp
χ
c
a
w
h
χ
y
x
θ
a
rε
h
w
rε
κr
θ
Approximate Chord
c
2
κn
κ'r
c
2
(a)
(b)
Figure 4.9: Chip geometry produced by a tool having a nose radius and approach angle,
(a) a > rε(1 −cos κr) and (b) a ≤rε(1 −cos κr).
4.4.1
Metal Cutting Forces
The turning tool is assumed to cut along the equivalent chord. The cutting
forces are assumed to have the following linear relationship:

Fn Fr Ft
T
c =

KnA KrA KtA
T Lhc,
(4.45)
where L is the equivalent chip width or the chord length, and hc is the equiv-
alent chip thickness measured perpendicular to the chord as suggested by
Colwell [41]. The chord angle (θ) and length (L) depend on the depth of cut (a),
feed (c), nose radius (rε), and approach angle (κr), all of which are shown in
Figure 4.9 and deﬁned as:
hcusp ≈
c2
8rε
h = a −hcusp = a −c2
8rε
w =
⎧
⎨
⎩
c
2 + a−rε(1−cos rε)
tan κr
+ rε sin κr
→a > rε(1 −cos rε)
c
2 +

r2ε −(rε −a)2 →a ≤rε(1 −cos rε)
A = ca,
θ = tan−1 w
h ,
L =
√
h2 + w2
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
(4.46)
where A is the chip area, h and w are the projections of the approximate chord
in the depth of cut and feed directions, respectively.
The cutting forces are projected in three Cartesian directions where the
structural dynamics of the machine are deﬁned as follows:

Fx Fy Fz
T
c = [Cnm]T 
Fn Fr Ft
T
c = [Cnm]T 
KnA KrA KtA
T Lhc.
(4.47)
By projecting the vibrations perpendicular to the chord, the equivalent
regenerative chip thickness can be approximated as follows:
hc(t) = c sin θ −

x(t) cos θ + y(t) sin θ

−

x(t −T) cos θ + y(t −T) sin θ

,
(4.48)

4.4 CHATTER STABILITY OF TURNING SYSTEMS WITH PROCESS DAMPING
145
where T is the spindle rotation period. The vibrations in the direction of cutting
speed (z) do not affect the chip thickness. The cutting forces contributed by the
regenerative chip is reduced to
⎧
⎨
⎩
Fx
Fy
Fz
⎫
⎬
⎭
c
= [Cnm]T
⎧
⎨
⎩
KnA
KrA
KtA
⎫
⎬
⎭L
⎡
⎣c sin θ −(1 −e−sT )

cos θ sin θ 0

⎧
⎨
⎩
x
y
z
⎫
⎬
⎭
⎤
⎦. (4.49)
The time-independent, static chip load (c sin θ) can be dropped from the
equation because it does not affect the stability. By substituting [Cnm]T from
(4.42), the dynamic cutting force from the regenerative cutting becomes
⎧
⎨
⎩
Fx
Fy
Fz
⎫
⎬
⎭
c
= −(1 −e−sT )L
⎡
⎣
cos θ
sin θ 0
−sin θ cos θ 0
0
0
1
⎤
⎦
T ⎧
⎨
⎩
KnA
KrA
KtA
⎫
⎬
⎭

cos θ sin θ 0

⎧
⎨
⎩
x
y
z
⎫
⎬
⎭, (4.50)
which can be summarized as
Fc(t) = −(1 −e−sT )LDQ(t),
(4.51)
where the directional matrix D coefﬁcients are
D =
⎡
⎣
KnA cos2 θ −0.5KrA sin 2θ
0.5KnA sin 2θ −KrA sin2 θ
0
KrA cos2 θ + 0.5KnA sin 2θ
KnA sin2 θ + 0.5KrA sin 2θ
0
KtA cos θ
KtA sin θ
0
⎤
⎦.
(4.52)
4.4.2
Process Damping Gains Contributed by Flank Wear
The contact between the clearance face of the tool and the wavy surface
contributes to the damping of the chatter during the dynamic cutting process.
The process damping force is modeled by the compression of the volume of the
work material under the ﬂank face of the cutting tool [38, 39]. The normal (Fd)
and friction (Fdz) forces caused by the contact are modeled (Fig. 4.10) as follows:
Fd = KspVm,
Fdz = μcFd,
(4.53)
where Ksp is the experimentally identiﬁed contact force coefﬁcient and μc is the
coefﬁcient of friction and assumed to be 0.3 for steel. The compressed volume
of the material (Vm) under the tool ﬂank is approximated as [38] follows:
Vm = −1
2LcL2
w
·
h
Vc
,
(4.54)
where
·
h is the vibration velocity in the direction normal to the plane deﬁned
by the cutting edge and cutting speed (Vc), Lw is the wear land, and Lc is the
total length of cutting edge in cut. For a differential element of a curved cutting
edge segment with length dL, the vibration velocity is
·
h = +
·x cos χn +
·y sin χn,
(4.55)

146
MACHINE TOOL VIBRATIONS
Fd
Fdz
Lw
Tool tip
 Trajectory
Compressed and
 Recovered Material
Tool
Chip
Vc
Figure 4.10: Model of process
damping forces caused by tool
wear.
where χn is the varying approach angle (4.9). Substituting Eqs. (4.54) and (4.55)
into contact force (4.53),
dFd = −dL · L2
wKsp
2Vc
·
h = −dL · L2
wKsp
2Vc
(
·x cos χn +
·y sin χn).
(4.56)
and projecting it in x and y directions leads to differential contact forces in
three directions as follows:
dFdx = dFd cos χn, dFdy = dFd sin χn, dFdz = μcdFd
(4.57)
The process damping forces are organized in the matrix form as follows:
1 dFdx
dFdy
dFdz

= −L2
wKsp
2Vc
(
cos2 χn
cos χn sin χn
0
cos χn sin χn
sin2 χn
0
μc cos χn (sin χn+cos χn)
μc sin χn (sin χn+cos χn)
0
)
dL
⎧
⎨
⎩
·x
·y
.z
⎫
⎬
⎭.
(4.58)
Assuming a constant ﬂank wear (Kw), the velocity-dependent process damp-
ing force acting on the structure can be evaluated by integrating the differential
forces along the cutting edge as follows:
Fd =
 Le
0
⎧
⎨
⎩
dFdx
dFdy
dFdz
⎫
⎬
⎭= Jv
⎧
⎪⎨
⎪⎩
·x
·y
.z
⎫
⎪⎬
⎪⎭
,
(4.59)
where the process damping matrix Jv is
Jv = −L2
wKsp
2Vc
 Le
0
⎛
⎝
⎡
⎣
cos2 χn
cos χn sin χn
0
cos χn sin χn
sin2 χn
0
μc cos χn (sin χn + cos χn) μc sin χn (sin χn + cos χn) 0
⎤
⎦dL
⎞
⎠.
(4.60)
By substituting Lχr =

a −rε (1 −cos χr)

/ sin χr,
dL = rε · dχn for the
straight and curved sections of the cutting edge, the process damping matrix

4.4 CHATTER STABILITY OF TURNING SYSTEMS WITH PROCESS DAMPING
147
(Jv) is deﬁned as a function of depth of cut as follows:
Jv =
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
−L2
wKsp
2Vc
⎛
⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎜⎝
Lχr
⎡
⎢⎢⎢⎣
cos2 χn
cos χn sin χn
0
cos χn sin χn
sin2 χn
0
μc cos χn (sin χn + cos χn) μc sin χn (sin χn + cos χn) 0
⎤
⎥⎥⎥⎦
+
χr

−tan−1 c/2rε
⎡
⎢⎢⎢⎣
cos2 χn
cos χn sin χn
0
cos χn sin χn
sin2 χn
0
μc cos χn (sin χn + cos χn) μc sin χn (sin χn + cos χn) 0
⎤
⎥⎥⎥⎦rεdχn
⎞
⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎟⎠
a > rε (1 −cos χr)
−L2
wKsp
2Vc
⎛
⎜⎜⎜⎝
χr′

−χ
⎡
⎢⎢⎢⎣
cos2 χn
cos χn sin χn
0
cos χn sin χn
sin2 χn
0
μc cos χn (sin χn + cos χn) μc sin χn (sin χn + cos χn) 0
⎤
⎥⎥⎥⎦rεdχn
⎞
⎟⎟⎟⎠
a ≤rε (1 −cos χr)
,
(4.61)
where χ′
r = cos−1 (1 −a/rε), when a ≤rε (1 −cos χr) . Jv relates the vibration
velocities in (x, y) directions to the dynamic cutting forces.
4.4.3
Stability Analysis
The cutting forces are now expressed by the superposition of chip regenera-
tion, i.e., cutting (Fc) and process damping (Fd) forces as follows:
Fm(t) = Fc(t) + Fd(t) = −(1 −e−sT )LDQ(t) + Jv
·
Q(t).
(4.62)
By substituting Q(s) = (s)Fm(s) from Eq. (4.43) into Eq. (4.62) in Laplace
domain,
Fm(s) = −(1 −e−sT )LDQ(s) + JvsQ(s) =

−(1 −e−sT )LD + sJv

(s)Fm(s).
(4.63)
The characteristic equation of the dynamic cutting system becomes

I

+

(1 −e−sT )LD −sJv

(s) = 0.
(4.64)
For a known depth of cut (a), feed (c), and nose radius (rε), the critically stable
equivalent width of cut (L) and spindle speed (1/T) are evaluated by applying
the Nyquist stability criterion on the following characteristic equation in the
frequency domain:
**I[3×3] +

(1 −e−jωT )LD[3×3] −jω Jv[3×3]

( jω)[3×3]
** = 0,
(4.65)
where I is the diagonal unit matrix; (jω) is the FRF matrix between the tool
and workpiece (Eq. 4.43); D is the directional coefﬁcient matrix for regenerative
terms (Eq. 4.52); and Jv is the process damping gain matrix (Eq. 4.61). The
stability is solved with the Nyquist criterion iteratively by assigning chord
length (L) and spindle speed (1/T), and checking whether they lead to a stable
or unstable turning operation. The Nyquist criterion is applied by ﬁnding the
determinant of characteristic Eq. (4.65), and plotting its real and imaginary

148
MACHINE TOOL VIBRATIONS
TABLE 4.1. Modal Parameters of the Turning Tool Used in Chatter Tests
Modes
Directional Stiffness (N/μm)
XX
YY
ZZ
XY
ZX
YZ
ωn = 242 [Hz]
ζ = 0.03
125
91
−109
ωn = 340 [Hz]
ζ = 0.04
59
185
735
133
parts on a complex plane. The process is unstable with chatter if the polar
plot encircles the origin, as explained in Section 4.2.3. The critical stability (i.e.
the limiting depth of cut) occurs when the polar plot passes from the origin.
The stability inspection is repeated by scanning the range of L and T that
are acceptable for the machine tool’s operation limits and tool life. The radial
depth of cut (a) can be evaluated from the critically stable chord length (L),
tool geometry (rε, χr), and feed (c) as given in Eq. (4.46). The details of the
presented model of turning stability with three-dimensional regeneration and
process damping are given by Eynian and Altintas [45].
4.5
EXPERIMENTAL VALIDATION
A series of turning tests with various feeds, depths of cuts, and spindle speeds
have been conducted on rigidly clamped, short AISI-1045 steel bars. The turret,
which carries the tool, has dominant structural modes at 242 and 340 Hz
with coupling terms that affect the regeneration in both feed (y) and radial
depth of cut (x) directions. Experimentally identiﬁed modal parameters of the
tool holder system are given in Table 4.1. The tool had a ﬂank wear land of
0.13 mm. The cutting force coefﬁcients are identiﬁed from chatter-free cutting
tests, and the contact coefﬁcient is identiﬁed from indentation tests and given in
Figure 4.11.
The stability of the process is predicted by Model I presented here and a
three-dimensional regenerative chip area (Model II) given by Eynian and Alt-
intas [45]. The effect of nose radius and the depth of cut are considered by the
use of equivalent chord length, but the dynamic changes in the chip area and
chord length are neglected in model I. Model II considers cutting conditions
(depth of cut, feed, and speed), tool geometry, and the regenerative displace-
ments and their effects on the dynamic chip area and edge contact length. The
onset of the chatter is detected by monitoring the sound pressure measured
with a microphone and an accelerometer attached underneath the tool holder.
When the frequency spectrum has signiﬁcant strength around modal frequen-
cies, but not at the spindle’s rotational frequency, accompanied by high-pitch
noise and poor surface ﬁnish, the presence of chatter is assumed. The stability

4.6 ANALYTICAL PREDICTION OF CHATTER VIBRATIONS IN MILLING
149
0.00
0.50
1.00
1.50
2.00
2.50
3.00
0
500
1000
1500
2000
2500
Spindle Speed (rpm)
Depth of Cut (mm)
stable
chatter
Model-I
Model-II
184.76
184.8
184.84
-20
0
20
time (sec)
0
400 800 120016002000
0
1
2
359.5Hz
Frequency (Hz)
135.00
135.04
135.08
-20
0
20
time(sec)
0
400 800 120016002000
0
1
2
Frequency (Hz)
Acceleration (g) 
Depth of Cut: 2.5mm
Spindle Speed: 200rpm
Stable Cut
Depth of Cut: 2.5mm
Spindle Speed: 400rpm
Chatter
Figure 4.11: Unstable (a = 2.5 mm, n = 400 rev/min) cutting
conditions. Feed rate c = 0.1 mm/rev and nose radius rε = 0.8
mm and approach angle κr = 95 degrees. Cutting force coef-
ﬁcients: KnA = 1, 544, KrA = −124, KtA = 2,881 [N/mm] and
contact coefﬁcient Ksp = 4.0 × 1013 [N/m3]. Flank wear width
Lw = 0.13 [mm]. See Table 4.1 for the modal parameters.
limit
at
high
speeds
is
pre-
dicted similarly by both mod-
els, and the inﬂuence of process
damping at low speeds is pre-
dicted better by Model II. The
chatter-free cutting conditions at
higher speeds greater than 1,500
rev/min correspond to stability
pockets. The experiments indi-
cated an unanticipated decrease
in the stability at lower speeds,
where the cutting process exhib-
ited poor shear and surface ﬁn-
ish even without chatter. The
vibration-free experimental eval-
uation of cutting force coefﬁcients
revealed an increase in magni-
tude at cutting speeds less than
100 m/min, which caused chat-
ter during experiments in smaller
depths of cut. Built-up edge and
the process damping also becomes
most effective at this zone, lead-
ing to increased stability. Since
the proposed model evaluates the
stability at each cutting condi-
tion, the speed-dependent cutting
force coefﬁcient is used similarly
to the depth of cut and feed-
dependent process gains.
4.6
ANALYTICAL PREDICTION OF CHATTER VIBRATIONS
IN MILLING
The rotating cutting force and chip thickness directions and intermittent cut-
ting periods complicate the application of orthogonal chatter theory to milling
operations. The following analytical chatter prediction model was presented
by Altintas and Budak [8, 34], who provide practical guidance to machine tool
users for optimal process planning of depth of cuts and spindle speeds in milling
operations [7].
4.6.1
Dynamic Milling Model
Milling cutters can be considered to have two orthogonal degrees of free-
dom as shown in Figure 4.12. The cutter is assumed to have N number of
teeth with a zero helix angle. The cutting forces excite the structure in the

150
MACHINE TOOL VIBRATIONS
Workpiece
vibration marks
left by tooth (j)
vibration marks
left by tooth (j-1)
End milling system
Dynamic chip thickness
Vibration at previous
tooth period
Static chip
thickness
+
-
+
-
Vibration at present
tooth period
vibration marks
left by tooth (j-2)
tooth (j)
tooth (j-1)
tooth (j-2)
uj
kx
Ω
bx
by
ky
y
x
vj
φj
φj(t)
hj(t)
υj(t)
υj(t-T )
h st(t)
h j(t) = sjsin φ j(t) − [−x(t)sin φ j(t) − y(t)cos φ j(t)]+[−x(t-T)sin φ j(t) − y(t-T)cos φ j(t)] 
Frj
Ftj
y
x
Figure 4.12: Self-excited vibrations in 2-DOF milling system.
feed (X ) and normal (Y) directions, causing dynamic displacements x and y,
respectively. The dynamic displacements are carried to rotating tooth number
j in the radial or chip thickness direction with the coordinate transformation
of v j = −x sin φ j −y cos φj, where φ j is the instantaneous angular immersion of
tooth j measured clockwise from the normal (Y) axis. If the spindle rotates at an
angular speed of (rad/s), the immersion angle varies with time as φj(t) = t.
The resulting chip thickness consists of a static part (st sin φ j), attributed to
rigid body motion of the cutter, and a dynamic component caused by the vibra-
tions of the tool at the present and previous tooth periods. Because the chip
thickness is measured in the radial direction (vj), the total chip load can be
expressed by
h(φj) = [st sin φ j + (v j,0 −v j)]g(φ j),
(4.66)
where st is the feed rate per tooth and (v j,0, v j) are the dynamic displacements of
the cutter at the previous and present tooth periods, respectively. The function

4.6 ANALYTICAL PREDICTION OF CHATTER VIBRATIONS IN MILLING
151
g(φ j) is a unit step function that determines whether the tooth is in or out of
cut, that is,
g(φ j) = 1 ←φst < φ j < φex,
g(φ j) = 0 ←φ j < φst or φ j > φex,

,
(4.67)
where φst and φex are the start and exit immersion angles of the cutter to and
from the cut, respectively. Henceforth, the static component of the chip thick-
ness (st sin φ j) is dropped from the expressions because it does not contribute
to the dynamic chip load regeneration mechanism. Substituting vj into (4.66)
yields
h(φ j) = [	x sin φ j + 	y cos φj]g(φ j),
(4.68)
where 	x = x −x0 and 	y = y −y0. Here, (x, y) and (x0, y0) represent the
dynamic displacements of the cutter structure at the present and previous
tooth periods, respectively. The tangential (Ftj) and radial (Frj) cutting forces
acting on the tooth j are proportional to the axial depth of cut (a) and chip
thickness (h) as follows:
Ftj = Ktah(φ j),
Frj = KrFtj,
(4.69)
where cutting coefﬁcients Kt and Kr are constant. Resolving the cutting forces
in the x and y directions,
Fxj = −Ftj cos φ j −Frj sin φ j,
Fyj = +Ftj sin φ j −Frj cos φ j,
(4.70)
and summing the cutting forces contributed by all teeth, we can write the total
dynamic milling forces acting on the cutter as
Fx =
N−1

j=0
Fxj(φ j);
Fy =
N−1

j=0
Fyj(φ j),
(4.71)
where φ j = φ + jφp and cutter pitch angle is φp = 2π/N. Substituting the chip
thickness (4.68) and tooth forces (4.69) into (4.70) and rearranging the resulting
expressions in matrix form yields

Fx
Fy

= 1
2aKt
axx
axy
ayx
ayy
	 
	x
	y

,
(4.72)

152
MACHINE TOOL VIBRATIONS
where time-varying directional dynamic milling force coefﬁcients are given by
axx =
N−1

j=0
−gj[sin 2φj + Kr(1 −cos 2φ j)],
axy =
N−1

j=0
−gj[(1 + cos 2φ j) + Kr sin 2φ j],
ayx =
N−1

j=0
gj[(1 −cos 2φ j) −Kr sin 2φ j],
ayy =
N−1

j=0
gj[sin 2φj −Kr(1 + cos 2φ j)].
Considering that the angular position of the parameters changes with time
and angular velocity, we can express Eq. (4.72) in the time domain in a matrix
form as [51, 79]
{F(t)} = 1
2aKt[A(t)]{	(t)}.
(4.73)
The dynamic cutting force is converted from the time domain (4.73) to the
frequency domain by taking the Fourier transform of Eq. (4.73) as follows:
F{F(t)} = 1
2aKtF {[A(t)]{	(t)}} = 1
2aKtF[A(t)]} ∗F[{	(t)}]
{F(ω)} = 1
2aKt {[A(ω)] ∗{	(ω)}} .
(4.74)
where ∗donates convolution integral. The vibration vectors at the present time
(t) and previous tooth period (t −T) are deﬁned as
{Q} = {x(t) y(t)}T ;
{Q0} = {x(t −T) y(t −T)}T,
(4.75)
or in the frequency domain,
{Q(ω)} = [(iω)]{F(ω)},
{Q0(ω)} = e−iωT{Q(iω)},
(4.76)
The frequency response function matrix ([(iω)]) of the structure at the
cutter–workpiece contact zone is
[(iω)] =
xx(iω)
xy(iω)
yx(iω)
yy(iω)
	
,
(4.77)
where xx(iω) and yy(iω) are the direct transfer functions in the x and y
directions, and where xy(iω) and yx(iω) are the cross-transfer functions.
Describing the vibrations at the vibration frequency ω in the frequency domain,
substituting {	} = {(x −x0) (y −y0)}T gives
{	(iω)} = {Q(iω)} −{Q0(iω)} = [1 −e−iωT][(iω)]{F(ω)}.
(4.78)

4.6 ANALYTICAL PREDICTION OF CHATTER VIBRATIONS IN MILLING
153
Substituting {	(iω)} into the dynamic milling force equation in frequency
domain (4.74) gives
{F(ω)} = 1
2aKt

[A(ω)] ∗[1 −e−iωT][(iω)]{F(ω)}

.
(4.79)
As the cutter rotates, the directional factors vary with time, which is the
fundamental difference between milling and operations such as turning where
the direction of the force is constant. However, like the milling forces, [A(t)] is
periodic at tooth-passing frequency ωT = N or tooth period T = 2π/ωT, i.e.,
[A(t)] = [A(t + T)]; thus, it can be expanded into the Fourier series as follows:
[A(ω)] = F[A(t)] =
+∞

r=−∞
[Ar]δ(ω −rωT ) =
+∞

r=−∞
[Ar]eirωTt
[Ar] = 1
T
 T
0 [A(t)]e−irωTt dt
⎫
⎪⎬
⎪⎭
,
(4.80)
where δ and F denote the Dirac delta function and Fourier transformation,
respectively. The directional matrix [A(t)] is periodic at tooth-passing fre-
quency ωT or at pitch angle φp, and it has zero value when the tooth is out
of cut, i.e., φst ≤φ ≤φex →[A(t)] ̸= 0. The Fourier coefﬁcients are evaluated
for N number of tooth as follows:
[Ar] = 1
T
N−1

j=0
 T
0
axx,j axy,j
ayx,j ayy,j
	
e−irωTtdt.
(4.81)
By introducing a change of variable, φj(t) = (t + jT) = τj, where τj = t +
jT. The time-varying angular position can be transformed into a pure angular
domain as ωTt = N · t = N · φ, where φ = t is the angular rotation of the
spindle with respect to the reference tooth ( j = 0).
τj = t + jT,
dτj = dt = dφ

t = 0 →τj0 = jT,
φ j(0) = jT = jφp
t = T →τj = T + jT,
φ j(T) = ( j + 1)T = ( j + 1)φp,
(4.82)
where the pitch angle (φp) of the cutter φp = T = 2π/N. By substituting ωTt =
Nφ, the directional matrix becomes
[Ar] =
1
T
N−1

j=0
 ( j+1)φp
jφp
axx,j axy,j
ayx,j ayy,j
	
e−irNφdφ
= 1
φp
& φp
0
 axx,0 axy,0
ayx,0 ayy,0
	
e−irNφdφ +
 2φp
φp
axx,1 axy,1
ayx,1 ayy,1
	
e−irNφdφ + ...
'
= N
2π
 2π
0
axx axy
ayx ayy
	
e−irNφdφ.
(4.83)

154
MACHINE TOOL VIBRATIONS
However, the periodic functions are nonzero only within the immersion inter-
val ⟨φst, φex⟩; therefore, the integral boundaries are modiﬁed as follows:
[Ar] = N
2π
 φex
φst
axx axy
ayx ayy
	
e−irNφdφ = N
2π
(
α(r)
xx α(r)
xy
α(r)
yx α(r)
yy
)
,
(4.84)
where each term depends on the harmonic counter (r) as follows:
α(r)
xx = i
2

−c0Kre−irNφ + c1e−ip1φ −c2eip2φ**φex
φst
α(r)
xy = i
2

−c0Kre−irNφ + c1e−ip1φ + c2eip2φ**φex
φst
α(r)
yx = i
2

c0Kre−irNφ + c1e−ip1φ + c2eip2φ**φex
φst
α(r)
yx = i
2

−c0Kre−irNφ −c1e−ip1φ + c2eip2φ**φex
φst ,
where
p1 = 2 + Nr,
p2 = 2 −Nr,
c0 = 2/(Nr),
c1 = (Kr −i) /p1,
c2 =
(Kr + i) /p2. Note that when Nr = −2 →p1 = 0, c1 = ∞; Nr = +2 →p2 =
0, c2 = ∞. Hence, for the special case of Nr = ±2, the integral is evaluated
specially instead of by using the general parametric solutions. The number
of harmonics (r) of the tooth-passing frequency (ωT) to be considered for an
accurate reconstruction of [A(t)] depends on the immersion conditions and on
the number of teeth in the cut. Altintas and Budak proposed zero-order and
multifrequency solutions, where the number of harmonics is r = 0 and r ≥1,
respectively. Although the zero-order solution is solved directly and analyti-
cally, and proven to be practical in most milling operations, the multifrequency
leads to improved accuracy when the radial immersion is small. If we consider
a special situation where r = 0, ±1, the directional coefﬁcient matrix becomes
(Eq. 4.84) as follows:

A(t)

=
+1

r=−1
[Ar]eirωTt
=
(
α(−1)
xx
α(−1)
xy
α(−1)
yx
α(−1)
yy
)
e−iωTt +
(
α(0)
xx α(0)
xy
α(0)
yx α(0)
yy
)
+
(
α(+1)
xx
α(+1)
xy
α(+1)
yx
α(+1)
yy
)
eiωTt.
(4.85)
4.6.2
Zero-Order Solution of Chatter Stability in Milling
If the most simplistic approximation, the average component of the Fourier
series expansion, is considered (i.e., r = 0), then
[A0] = 1
T
 T
0
[A(t)] dt = 1
φp
 φex
φst
[A(φ)] dφ = N
2π
αxx
αxy
αyx
αyy
	
,
(4.86)

4.6 ANALYTICAL PREDICTION OF CHATTER VIBRATIONS IN MILLING
155
where the integrated functions are given as
αxx = 1
2

cos 2φ −2Krφ + Kr sin 2φ
φex
φst ,
αxy = 1
2

−sin 2φ −2φ + Kr cos 2φ
φex
φst ,
αyx = 1
2

−sin 2φ + 2φ + Kr cos 2φ
φex
φst ,
αyy = 1
2

−cos 2φ −2Krφ −Kr sin 2φ
φex
φst .
When the time-dependent terms are neglected, the system loses its periodic
variation, and thus becomes a time-invariant system. The average directional
factors depend on the radial cutting constant (Kr) and the width of cut bound
by entry (φst) and exit (φex) angles as illustrated in Figure 4.13. The dynamic
milling expression (4.79) is reduced to the following:
{F(ω)} = 1
2aKt

[A0][1 −e−iωT][(iω)]{F(ω)}

,
(4.87)
where [A0] is the time-invariant, but immersion-dependent directional cutting
coefﬁcient matrix. Because the average cutting force per tooth period is inde-
pendent of the helix angle, [A0] is valid for helical end mills as well. If the
system is critically stable by vibrating at the chatter frequency ωc, the roots of
the characteristic equation are found from the determinant
det

[I] −1
2Kta(1 −e−iωcT )[A0][(iωc)]
	
= 0.
The notation is further simpliﬁed by deﬁning the oriented FRF matrix as
[0(iωc)] =
αxxxx(iωc) + αxyyx(iωc)
αxxxy(iωc) + αxyyy(iωc)
αyxxx(iωc) + αyyyx(iωc)
αyxxy(iωc) + αyyyy(iωc)
	
(4.88)
and the eigenvalue of the characteristic equation as
 = −N
4π aKt(1 −e−iωcT ).
(4.89)
The resulting characteristic equation becomes
det |[I] + [o(iωc)]| = 0.
(4.90)
The eigenvalue of Eq. (4.90) can easily be solved for a given chatter frequency
ωc, static cutting coefﬁcient factors (Kt, Kr) (which can be stored as material-
dependent quantities for any milling cutter geometry), radial immersion
(φst, φex), and the FRF of the structure (4.88). If two orthogonal degrees of free-
dom in feed (x) and normal (y) directions are considered (i.e., xy = yx = 0.0),
the characteristic equation becomes just a quadratic function as follows:
a02 + a1 + 1 = 0,
(4.91)

156
MACHINE TOOL VIBRATIONS
b
Workpiece
vibration marks
left by tooth (j)
vibration marks
left by tooth (j-1)
vibration marks
left by tooth (j-2)
Ω
k
b
k
jφ
tooth (j)
tooth (j-1)
tooth (j-2)
dF rj
dF tj
uj
v j
x
 y
x
y
x
y
0
30
60
90
120
150
180
-3.50
-3.00
-2.50
-2.00
-1.50
-1.00
-0.50
0.00
0
30
60
90
120
150
180
1.00
0.00
-1.00
-2.00
-3.00 
K  = 0.1
r
K  = 0.3
r
K  = 0.6
r
K  = 1.0
r
ex
Exit angle Φ
→
UP MILLING
Start  angle Φ
→
st
Down Milling
K  = 0.1
r
K  = 0.3
r
K r=0.6
Kr =1.0
Figure 4.13: The inﬂuence of radial cutting constant (Kr) and immersion (φst, φex) on
average directional factors.
where
a0 = xx(iωc)yy(iωc)(αxxαyy −αxyαyx),
a1 = αxxxx(iωc) + αyyyy(iωc).
Then, the eigenvalue  is obtained as
 = −1
2a0

a1 ±

a2
1 −4a0

.
(4.92)
As long as the plane of cut (x, y) is considered, the characteristic equation is
still a simple quadratic function regardless of the number of modes considered
in the machine tool structure. Because the FRFs are complex, the eigenvalue

4.6 ANALYTICAL PREDICTION OF CHATTER VIBRATIONS IN MILLING
157
has a real and an imaginary part,  = R + iI. Substituting the eigenvalue
and e−iωcT = cos ωcT −i sin ωcT in Eq. (4.89) gives the critical axial depth of cut
at chatter frequency ωc as follows:
alim = −2π
NKt
R(1 −cos ωcT) + I sin ωcT
(1 −cos ωcT)
+ iI(1 −cos ωcT) −R sin ωcT
(1 −cos ωcT)
	
.
(4.93)
Because alim is a real number, the imaginary part of Eq. (4.93) must vanish as
follows:
I(1 −cos ωcT) −R sin ωcT = 0.
(4.94)
By substituting
κ = I
R
=
sin ωcT
1 −cos ωcT
(4.95)
into the real part of Eq. (4.93) (the imaginary part vanishes), the ﬁnal expres-
sion for chatter-free axial depth of cut is found as
alim = −2πR
NKt
(1 + κ2).
(4.96)
Therefore, given the chatter frequency (ωc), the chatter limit in terms of the
axial depth of cut can be directly determined from Eq. (4.96).
The corresponding spindle speeds are also found in a manner similar to the
chatter in orthogonal cutting presented in the previous section. From Eq. (4.95),
κ = tan ψ = cos(ωcT/2)
sin(ωcT/2) = tan[π/2 −(ωcT/2)]
(4.97)
and the phase shift of the eigenvalue is ψ = tan−1 κ, and ωcT = π −2ψ + 2kπ
is the phase distance in one tooth period (T). If k is the integer number of
full-vibration waves (i.e., lobes) imprinted on the cut arc, and ϵ = π −2ψ is the
phase shift between the inner and outer modulations (present and previous
vibration marks), then
ωcT = ϵ + 2kπ.
(4.98)
Again, care must be taken in calculating the phase shift (ψ) from the real (R)
and imaginary (I) parts of the eigenvalue. The spindle speed n(rev/min) is
simply calculated by ﬁnding the tooth-passing period T(s) as follows:
T = 1
ωc
(ϵ + 2kπ) →n = 60
NT .
(4.99)
In summary, the FRFs of the machine tool system are identiﬁed, and the
directional coefﬁcients are evaluated from the derived Eq. (4.86) for a speciﬁed
cutter, workpiece material, and radial immersion of the cut. Then the stability
lobes are calculated as follows [8]:

158
MACHINE TOOL VIBRATIONS
r Select a chatter frequency from transfer functions around a dominant mode.
r Solve the eigenvalue from Eq. (4.91).
r Calculate the critical depth of cut from Eq. (4.96).
r Calculate the spindle speed from Eq. (4.99) for each stability lobe k =
0, 1, 2, . . . .
r Repeat the procedure by scanning the chatter frequencies around all domi-
nant modes of the structure evident on the transfer functions.
The algorithm can be applied to milling with dynamics in three directions
[6], or with three lateral and torsional ﬂexibilities found in drilling [93] and
plunge milling/boring [13] operations.
It may be argued that the use of the average Fourier coefﬁcient [A0] may not
be sufﬁcient in the stability analysis. When the width of cut is small, the milling
force waveforms are narrow and intermittent. Such waveforms have strong
harmonic components in addition to the average value. When the author’s
group considered the high harmonics with the use of iterative solutions, they
noticed that the stability results did not improve signiﬁcantly even at very
low immersion cuts. Physical analysis of the process illustrated in Figure 4.14
revealed that the high harmonics of the forcing function (i.e., milling forces) are
low pass ﬁltered within the dynamic cutting process, unless they ring another
mode that is a tooth frequency away from the chatter frequency.
The process is explained by Figure 4.14 as follows. If chatter vibrations are
present in a milling operation, the regenerative vibration spectra are domi-
nated by the chatter frequency ωc. The regenerative vibrations (i.e., dynamic
chip loads) are multiplied by the immersion-dependent directional factors,
which have an average value and additional strengths at the harmonics of
tooth passing frequency (ωT, 2ωT, . . .). The resulting dynamic milling forces
have strengths at chatter frequency (ωc) and at tooth passing harmonics away
from the chatter frequency (ωc + iωT, i = ±1, ±2, . . .). The dynamic cutting force
excites the structure whose dominant mode is very close to the chatter fre-
quency ωc. The frequency response function does not have any strength away
from the natural mode that is causing the chatter; hence, it low-pass ﬁlters
or attenuates the dynamic cutting force harmonics away from the chatter fre-
quency. The chatter loop is closed when the structure leaves new chatter vibra-
tion marks on the present and previous surface cut during milling. However,
if the structure has closely spaced modes, and if these modes happen to be dis-
tributed at tooth-passing frequency intervals, the use of the average Fourier
coefﬁcient [A0] may not be sufﬁcient for accurate prediction of chatter stability.
In such cases, higher harmonics of the directional factors must be considered,
and the resulting stability expression shown in the next section must be solved
with numerical iterations.
Example: Face Milling Cutter. A bull-nosed face milling cutter with two circu-
lar inserts is used in milling aluminum alloy Al-7075. The diameter of the
cutter body is 31.75 mm, and the radius of circular inserts is 4.7625 mm. The

4.6 ANALYTICAL PREDICTION OF CHATTER VIBRATIONS IN MILLING
159
Figure 4.14: Block diagram of regenerative chatter in ball end milling process.
identiﬁed cutting constants are Kt = 1,319.4 [N/mm2] and Kr = 788.8 [N/mm2].
The FRF of the cutter mounted on the spindle is measured, and the
modal parameters are identiﬁed in the feed (x) and normal (y) directions in
Table 4.2.
TABLE 4.2. Identiﬁed Modal Parameters of a Bull-Nose Cutter Mounted on the Spindle of
a Vertical Machining Center. The Transfer Function Units Are in [m/N]
Mode x
ωnx [Hz]
ζx
σx + jνx
1
452.77
0.123718
9.202966E−05−j1.862195E−04
2
1,448.53
0.01651
−4.181562E−05−j3.043618E−04
Mode y
ωny [Hz]
ζy
σy + jνy
1
516.17
0.0243
−2.3929E−06−j1.721539E−04
2
1,407.64
0.0324
4.055052E−05−j3.618808E−04

160
MACHINE TOOL VIBRATIONS
The stability lobes of the cutter are shown in Figure 4.15 for a half-
immersion down-milling operation. The stability lobes are predicted using
time domain, numerical simulations, which consider all nonlinearities in the
dynamic milling, process, such as tool jumping out, feed marks, and waves
left by the previous cuts. The analytical and time domain solutions are in good
agreement, although the analytical solution is linear and quite simple to imple-
ment in practice. Two cutting tests are conducted at a = 4.7 mm depth of cut.
One is at the unstable spindle speed of n = 9,500 rev/min, where severe chatter
vibrations were observed, which are evident from force measurements and their
Fourier spectrum. The chatter occurred close to the second mode of the struc-
ture at 1,448 Hz. When the spindle speed is increased to n = 14,000 rev/min,
the chatter vibrations disappeared, and the spectrum of forces indicate that
the dominance of forced vibration or tooth passing frequency was at 467 Hz.
Time domain simulations demonstrate the presence of poor surface ﬁnish when
chatter vibrations are present during milling.
Example End Milling with a Flexible Cutter. A helical carbide end mill with
four ﬂutes, 19.05 mm diameter, and 10 degree rake is used in peripheral milling
of aluminum alloy Al-7075. The identiﬁed cutting constants for the work mate-
rial and cutter are found as Kt = 796 [N/mm2] and Kr = 0.212. The transfer
function of the cutter attached to the spindle is measured at the tool tip in
both feed (x) and normal (y) directions with an instrumented hammer and
accelerometer. The modal parameters of the structure converted to displace-
ment domain are identiﬁed from modal analysis software and are given in
Table 4.3. The experimentally measured and reconstructed transfer functions
are compared in Figure 4.16, which indicates the accuracy of identiﬁed modal
parameters. Later the modal parameters are used to simulate the stability lobes
for a half-immersion down-milling and slotting of Al-7075 alloy. These results
are shown in Figure 4.17. The minimum stable depth of cut seems to be about
alim = 4 mm in half-immersion up-milling and about alim = 1.5 mm in slotting.
The ideal stability pockets correspond to a spindle speed n = 11,800 rev/min,
where the maximum material can be removed without chatter. Note that there
is hardly any stability pocket at speeds less than n = 5,000 rev/min, which is
due to the many tightly packed vibration waves at each tooth period. Because
Al-7075 is not a hard material, it is clearly advisable to machine it at high
speeds to enhance productivity. The stability lobes presented for this case have
been experimentally proven on a machining center powered by a 15 kW spindle
capable of 15,000 rev/min.
4.6.3
Multi-Frequency Solution of Chatter Stability in Milling
When the radial immersion of cut is small, the milling process will exhibit
highly intermittent directional factors that will lead to force waveforms with
high-frequency content. In such cases, the average directional factor [A0] may
not be sufﬁcient to predict the stability lobes at high spindle speeds with

4.6 ANALYTICAL PREDICTION OF CHATTER VIBRATIONS IN MILLING
161
0
1000
2000
3000
4000
5000
6000
7000
0
500
1000
1500
0
1000
2000
3000
4000
5000
6000
7000
0
500
1000
1500
0
1000
2000
3000
4000
5000
6000
7000
0
500
1000
1500
0
1000
2000
3000
4000
5000
6000
7000
0
500
1000
1500
Simulated Resultant Force
Simulated Resultant Force
Tool Rotation Angle [deg]
Tool Rotation Angle [deg]
]
N
[
]
N
[
0
2000
4000
6000
8000
10000
12000
14000
16000
0
1
2
3
4
5
6
Experimental Resultant Force
Experimental Resultant Force
Tool Rotation Angle [deg]
Tool Rotation Angle [deg]
Spindle speed [rev/min]
Axial depth of cut [mm]
Analytical
Time domain
Stability Lobes for Bull Nose Cutter and  Al7075
]
N
[
]
N
[
(9500 rpm)
(4.7 mm   )
(14000 rpm)
(4.7 mm     )
0
200
400
600
800
1000
1200
1400
1600
1800
2000
0
200
400
600
800
1000
1200
1400
1600
1800
2000
0
20
40
60
80
100
0
20
40
60
80
100
0
0.5
1
1.5
2
2.5
3
0
1
2
3
-5
5
15
X [mm]
Z [mm]
Y [μm]
Surface Roughness
e
c
r
o
F
 t
n
a
tl
u
s
e
R
 r
o
f 
T
F
F
e
c
r
o
F
 t
n
a
tl
u
s
e
R
 r
o
f 
T
F
F
Frequency [Hz]
Frequency [Hz]
].
p
m
A
[
].
p
m
A
[
Tooth Passing
Frequency
(467 Hz)
Chatter
Frequency
(1448 Hz)
(feed direction)
(axial direction)
R     = 2 μm
max
0
0.5
1
1.5
2
2.5
3
0
1
2
3
-5
5
15
X [mm]
Z [mm]
Y [μm]
Surface Roughness
(feed direction)
(axial direction)
R     = 12 μm
max
Figure 4.15: Stability of a bull-nosed face milling cutter with two circular inserts; the feed per
tooth is st = 0.05 mm/tooth in sample measurenents and time domain simulations.

162
MACHINE TOOL VIBRATIONS
TABLE 4.3. Identiﬁed Modal Parameters of a Vertical Machining Center in x and y
Directions. The transfer function units are in [m/N]
Mode x
ωnx [Hz]
ζx
σx + jνx
1
262.16
0.048
1.994606E−06−j 3.779091E−06
2
503.60
0.096
1.932445E−06−j 2.44616E−05
3
667.92
0.057
1.364547E−05−j 4.128093E−05
4
886.78
0.074
8.632813E−07−j 7.195716E−05
5
2,201.5
0.015
−5.011467E−06−j 4.623555E−05
6
2,799.4
0.027
−1.394105E−05−j 8.317728E−05
7
3,837.7
0.007
−6.874543E−06−j 6.560925E−05
8
4,923.6
0.019
−8.824935E−06−j 6.54481E−05
9
6,038.7
0.025
2.564520E−06−j 1.986276E−05
Mode y
ωny [Hz]
ζy
σy + jνy
1
285.53
0.021
9.797268E−07−j 5.959362E−07
2
587.8
0.089
1.349004E−05−j 4.544067E−06
3
749.6
0.027
−3.106831E−05−j 3.816475E−05
4
804.9
0.075
3.033849E−05−j 8.813244E−05
5
1,573.7
0.027
1.283945E−06−j 8.678961E−06
6
2,038.1
0.016
1.298625E−06−j 1.270846E−05
7
2,303.3
0.220
9.518897E−07−j 3.750897E−05
8
2,681.0
0.019
1.190834E−05−j 2.825781E−05
9
2,870.5
0.014
−1.912932E−05−j 4.051860E−05
10
3,838.8
0.006
−1.119589E−05−j 8.475725E−05
11
4,928.9
0.017
−1.859880E−05−j 8.993226E−05
12
6,073.4
0.016
−7.608392E−06−j 2.022991E−05
small radial immersions. The frequency domain solution can be used to include
higher-order harmonics at the expense of computational complexity as follows
[34, 76].
The dynamic milling force equation (4.79) is revisited as a starting point as
follows:
{F(ω)} = 1
2aKt

[A(ω)] ∗[1 −e−iωT][(iω)]{F(ω)}

.
(4.100)
Because of the periodicity of the directional matrix ([A(ω)]) at tooth pass-
ing frequency (ωT), the Floquet theory states that the periodic force has the
following solution where the tool vibrates with an additional chatter fre-
quency ωc,:
{F(t)} = eiωct{P(t)},
{P(t)} =
l=+∞

l=−∞
{Pl}eilωTt,
(4.101)

4.6 ANALYTICAL PREDICTION OF CHATTER VIBRATIONS IN MILLING
163
x 10     [m/N]
−7
Φyy
0
1000
2000
3000
4000
5000
6000
7000
0
1
2
3
4
5
6
Experimental measure.
Fitted curve
Frequency  [Hz]
1000
2000
3000
4000
5000
6000
7000
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
Experimental measure.
Fitted curve
x 10     [m/N]
−7
Φxx
Frequency  [Hz]
0
x - direction
y-direction
Figure 4.16: Experimentally measured and curve-ﬁtted transfer functions of a
vertical machining center at the tool tip.
where {P(t)} is periodic at tooth passing frequency ωT. The force has the fol-
lowing form in the frequency domain according to the modulation theorem:
{F(ω)} = F
{F(t)}
= F

eiωct {P(t)}
= F
⎡
⎣eiωct
l=+∞

l=−∞
{Pl}eilωTt
⎤
⎦
= F
⎡
⎣
l=+∞

l=−∞
{Pl}ei(ωc+lωT )t
⎤
⎦=
l=+∞

l=−∞
{Pl}δ

ω −
$
ωc + lωT
%
,
(4.102)

164
MACHINE TOOL VIBRATIONS
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
1.8
2
0
2
4
6
8
10
12
14
a        [mm]
lim
Spindle speed [rev/min] x 104
Half immersion down milling
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
1.8
2
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
a        [mm]
lim
Spindle speed [rev/min] x 104
Slotting
Figure 4.17: Analytically predicted stability lobes for helical end milling of aluminum
alloy Al-7075.
where δ

ω −
$
ωc + lωT
%
is Dirac delta function. By substituting {F(ω)} into
dynamic milling Eq. (4.100),
{F(ω)} = 1
2aKt[A(ω)] ∗
⎧
⎨
⎩
$
1 −e−iωT%
[(iω)]
l=+∞

l=−∞
{Pl}δ

ω −
$
ωc + lωT
%
⎫
⎬
⎭.
(4.103)

4.6 ANALYTICAL PREDICTION OF CHATTER VIBRATIONS IN MILLING
165
The Diract delta function δ samples the terms in the functions when ω =
ωc + lωT as follows:
{F(ω)} = 1
2aKt[A(ω)]
∗
⎛
⎝
l=+∞

l=−∞

1 −e−i(ωc+lωT )T
[(ωc + lωT )]{Pl}δ

ω −
$
ωc + lωT
%
⎞
⎠.
(4.104)
Because lωTT = lωT 2π
ωT = l2π and e−ilωTT = 1, {F(ω)} is reduced to
{F(ω)} = 1
2aKt[A(ω)] ∗
⎛
⎝
l=+∞

l=−∞
$
1 −e−iωcT%
[(ωc + lωT )]{Pl}δ

ω−
$
ωc+lωT
%
⎞
⎠
= 1
2aKt
$
1−e−iωcT%
[A(ω)] ∗
⎛
⎝
l=+∞

l=−∞

[(ωc+lωT )]{Pl}δ

ω−
$
ωc+lωT
%
⎞
⎠.
(4.105)
By substituting the Fourier expansion of directional factor matrix [A(ω)]
from Eq. (4.80),
{F(ω)} = 1
2aKt
$
1 −e−iωcT%
& +∞

r=−∞
[Ar]δ(ω −rωT )
'
∗
⎛
⎝
l=+∞

l=−∞

[(ωc + lωT )]{Pl}δ

ω −
$
ωc + lωT
%
⎞
⎠.
(4.106)
By applying the theory of Cauchy for the products of inﬁnite but converging
series (+∞
n=0 an · +∞
n=0 bn = +∞
n=0 cn →cn = +n
k=1 an−kbk),
{F(ω)}= 1
2aKt
$
1 −e−iωcT%
×
⎛
⎝
+∞

r=−∞
l=+∞

l=−∞
[Ar-l][(ωc+lωT )]{Pl}δ

ω−
$
r−l)ωT
%
∗δ

ω−
$
ωc+lωT
%
⎞
⎠
(4.107)
and applying the shifting theorem on Dirac delta functions (δ(ω −a) ∗δ(ω −
b) = δ[ω −(a + b)]),
δ

ω −
$
r −l)ωT
%
∗δ

ω −
$
ωc + lωT
%
= δ

ω −
$
r −l
%
ωT + ωc + lωT

= δ {ω −[ωc + rωT]}
(4.108)

166
MACHINE TOOL VIBRATIONS
on the Fourier expansion of dynamic force {F(ω)} (Eq. 4.106) leads to the
following:
{F(ω)} =
+∞

r=−∞
⎡
⎣1
2aKt
$
1 −e−iωcT%
⎛
⎝
l=+∞

l=−∞
[Ar-l][(ωc + lωT )]{Pl}
⎞
⎠
× δ [ω −(ωc + rωT )]] .
(4.109)
By expressing the force with its harmonics from Eq. (4.102) {F(ω)} =
+l=+∞
l=−∞{Pl}δ

ω −
$
ωc + lωT
%
, the Fourier coefﬁcients of the force can be
expressed as
{Pr} = 
⎛
⎝
+∞

l=−∞
[Ar−l][(ωc + lωT )]{Pl}
⎞
⎠, . . . (r = 0, ±1, ±2, .. ± ∞)
 = 1
2aKt
$
1 −e−iωcT%
.
(4.110)
If only one term of the harmonics is considered, i.e., (r, l) = ϵ(−1, 0, +1),
{P0} =  ([A0][ (ωc)]{P0} + [A1][ (ωc −ωT )]{P−1}
+[A−1][ (ωc + ωT )]{P1} + · · ·) →r = 0; l = 0, −1, +1
{P−1} =  ([A−1][ (ωc)]{P0} + [A0][ (ωc −ωT )]{P−1}
+[A−2][ (ωc + ωT )]{P1} + · · ·) →r = −1; l = 0, −1, +1
{P+1} =  ([A1][ (ωc)]{P0} + [A2][ (ωc −ωT )]{P−1}
+[A0][ (ωc + ωT )]{P1} + · · ·) →r = +1; l = 0, −1, +1
·
·
By collecting the terms in matrix form,
⎧
⎨
⎩
{P0}
{P−1}
{P1}
⎫
⎬
⎭= 
⎛
⎜⎜⎜⎜⎜⎝
l=0,−1,+1;p=0,−1,+1
8
9:
;
⎡
⎣
[A0] [A1] [A−1]
[A−1] [A0] [A−2]
[A1] [A2] [A0]
⎤
⎦
⎧
⎨
⎩
[(ωc)]
[(ωc −ωT )]
[(ωc + ωT )]
⎫
⎬
⎭
⎞
⎟⎟⎟⎟⎟⎠
⎧
⎨
⎩
{P0}
{P−1}
{P1}
⎫
⎬
⎭
Note that if [] is

2 × 2

matrix, then each {P} = {2 × 1} vector and [A] =

2 × 2

matrix. By collecting the terms {P} , the stability of the system is deﬁned
by the following eigenvalue problem:

I] −[Ar−l][(ωc + lωT]
 {P} = {0},
(4.111)

4.6 ANALYTICAL PREDICTION OF CHATTER VIBRATIONS IN MILLING
167
where {P} is the eigenvector and  is the eigenvalue. Note that for each eigen-
value (), there will be one eigenvector {P} . If we continue to use the same
example with one harmonic of the periodic function,
det
************
⎡
⎣

I

2x2 0
0
0

I

0
0
0

I

⎤
⎦−
⎛
⎜⎜⎜⎜⎜⎝
k=0,−1,+1;r=0,−1,+1
8
9:
;
⎡
⎣
[A0]2x2 [A1] [A−1]
[A−1] [A0] [A−2]
[A1]
[A2] [A0]
⎤
⎦
⎧
⎨
⎩
[(ωc)]2x2
[(ωc −ωT )]
[(ωc + ωT )]
⎫
⎬
⎭
⎞
⎟⎟⎟⎟⎟⎠
************
= 0,
(4.112)
where the matrix [I], [A], [] have 2 × 2 dimensions if the system is ﬂexible
in two orthogonal directions (i.e., x, y).The determinant of the system equation
would lead to eigenvalues () as follows:
det
**
I

−[Ar−l][(ωc + lωT]
** = 0,
(r, l) = 0, ±1, ±2, . . .
(4.113)
where (r, l) represents column and row indices of the the directional matrix,
respectively. The directional and frequency response function matrix have (2 ×
2) dimensions for 2-DOF system as follows:
[Ar−l][(ωc + rωT] =
α(r−l)
xx
α(r−l)
xy
α(r−l)
yx
α(r−l)
yy
	  xx(ωc + lωT ) xx(ωc + lωT
xy(ωc + lωT ) yy(ωc + lωT
	
(4.114)
If we consider r number of tooth passing frequency harmonics, the dimension
of the eigenvalue matrix becomes D = ndof(2r + 1), where ndof is the number
of orthogonal ﬂexibility directions considered in chatter. For example, if r = 1,
and ﬂexibility in (x, y) directions is considered (ndof = 2), the matrix dimension
becomes D = 6. If we consider that the system is ﬂexible only in the x or y
direction (i.e., ndof = 1) , D = 3. The number of eigenvalues obtained from the
solution would be equal to the size of the matrix (D). By noting that e−iωcT =
cos ωcT −i sin ωcT, the eigenvalue number q can be represented by
q = R,q + iI,q = 1
2aKt[1 −e−iωcT] = 1
2aKt[1 −cos ωcT + i sin ωcT]
a =
2(R,q + iI,q)
Kt[1 −cos ωcT + i sin ωcT] = 2(R,q + iI,q)[(1 −cos ωcT) −i sin ωcT]
Kt[(1 −cos ωcT)2 + (sin ωcT)2]
a = [R,q(1 −cos ωcT) + I,q sin ωcT]
Kt(1 −cos ωcT)
+ i[I,q(1 −cos ωcT) −R,q sin ωcT]
Kt(1 −cos ωcT)
.

168
MACHINE TOOL VIBRATIONS
Because the depth of cut is a physical quantity, the imaginary part of a must
be zero.
I,q(1 −cos ωcT) = R,q sin ωcT →I,q
R,q
=
sin ωcT
1 −cos ωcT
I,q
R,q
=
2 sin ωcT
2
cos ωcT
2
1 −(cos2 ωcT
2
−sin2 ωcT
2 )
=
2 sin ωcT
2
cos ωcT
2
sin2 ωcT
2
+ cos2 ωcT
2
−cos2 ωcT
2
+ sin2 ωcT
2
=
2 sin ωcT
2
cos ωcT
2
2 sin2 ωcT
2
tan ψ = I,q
R,q
=
cos ωcT
2
sin ωcT
2
= tan
π
2 −ωcT
2
+ kπ

, where k = 0, 1, 2, . . .
ψ = π −ωcT + 2kπ
2
, →ωcT = π −2ψ + 2kπ
ωcT = ε + 2kπ,
ε = π −2ψ,
ψ = tan−1 I,q
R,q
Spindle speed n [rev/ min) = 60
NT =
60ωc
N(ε + 2kπ).
The axial depth of cut is as follows:
aq = [R,q(1 −cos ωcT) + I,q sin ωcT]
Kt(1 −cos ωcT)
= R,q
Kt
⎡
⎣1 −cos ωcT + I,q
R,q sin ωcT
1 −cos ωcT
⎤
⎦
= R,q
Kt

1 + I,q
R,q
sin ωcT
1 −cos ωcT
	
= R,q
Kt

1 + I,q
R,q
I,q
R,q
	
aq = R,q
Kt
(
1 +
 I,q
R,q
2)
.
The critically stable spindle speed and axial depth of cut are summarized as
n = 60
NT =
60ωc
N(ε + 2kπ)
aq = R,q
Kt
(
1 +
 I,q
R,q
2)
.
(4.115)

4.6 ANALYTICAL PREDICTION OF CHATTER VIBRATIONS IN MILLING
169
However, the evaluation of phase shift (ε) between the waves requires the
solution of eigenvalues q, which depends on the evaluation of the FRF at
the harmonics of tooth-passing frequencies ([(ωc ± lωT )]). Hence, unlike in
the zero-order solution, there is no direct solution to the depth of cut. Instead,
a range of spindle speeds must be scanned for each chatter frequency to ﬁnd the
eigenvalues. For a given speed, we can calculate the eigenvalues and the cor-
responding value of depth of cut by using Eq. (4.115). The computational load
is signiﬁcantly higher in the multi-frequency solution in comparison with the
zero-frequency solution. For example, if we scan a frequency range of 1,000Hz
at 1-Hz intervals, speed range of 0 to 15,000 at 100 rev/min intervals, take 2 har-
monics of the tooth-passing frequency for a two-dimensional ﬂexibility system
(D = ndof(2hr + 1) = 2(2 × 2 + 1) = 10, we need to have 1,000 × 15,000/100 =
1,500, 000 iterations. If each iteration takes 0.1 sec, the computation time is
150,000 sec = 150,000/60 = 2,500 min = 41.63 [hr]. There will be D number of
eigenvalues, and at each iteration the most conservative and positive depth of
cut must be considered as a ﬁnal solution. However, the zero-order solution,
which considers only the average directional factors [A0], gives the stability
lobes directly within a second or two. The zero-order and multifrequency solu-
tions give almost identical results within the speed range, which is less than
or equal to the natural frequencies. If the speed is greater than the natural
frequency, and the immersion is very low, the process is highly intermittent
and the multifrequency solution would yield more accurate lobes.
Additional difﬁculties exist with the iterative solution of the depth of cut
given in Eq. (4.115). Because there are D = ndof(2r + 1) number of eigenval-
ues, there are also D = ndof(2r + 1) number of possible axial depths of cuts.
Taking the minimum of all depths of cuts does not necessarily lead to the
correct solution. The harmonics (ωc ± lωT ) may create artiﬁcial ﬂexibility at
xx(ωc ± lωT ). Only one of the solutions, which must be identiﬁed by checking
the eigenvalues, must be valid. The following procedure ensures the correct
identiﬁcation of acceptable eigenvalues that lead to the accurate prediction
of a critically stable depth of cut for a given set of spindle speed and chatter
frequency.
The complex eigenvalue q = R,q + iI,q can be expressesd by its magni-
tude and phase as follows:
**q
** =

2
R,q + 2
I,q,
tan ψq = I,q
R,q
sin ψq = I,q
**q
**,
cos ψq = R,q
**q
** .
(4.116)
Noting that the imaginary part of the axial depth of cut is zero, which led to
the following eigenvalue root condition,
tanψ = I,q
R,q
= cos ωcT
2
sin ωcT
2
→R,q cos ωcT
2
−I,q sin ωcT
2
= 0.
(4.117)

170
MACHINE TOOL VIBRATIONS
By normalizing it with the magnitude of the eigenvalue,
R,q cos ωcT
2 −I,q sin ωcT
2

2
R,q + 2
I,q
= 0
cos ψq cos ωcT
2
−sin ψq sin ωcT
2
= 0
cos(2ψq + ωcT
2
) = 0, ψq = tan−1 I,q
R,q
.
(4.118)
For each eigenvalue q, the phase condition (cos( 2ψq+ωcT
2
) = 0) must be sat-
isﬁed. Because the eigenvalue solution is iterative, the convergence and iden-
tiﬁcation of roots are numerically challenging, and require a well-tuned and
efﬁcient computer algorithm. Further inspection is needed to eliminate the
false eigenvalue solution created by the FRFs that are ±lωT away from the
chatter frequency ωc.
Once chatter occurs at frequency ωc, the dynamic force exhibits frequencies
at ωc ± lωT as follows:
{F(t)} =

Fx(t)
Fy(t)

=
+∞

l=−∞
{Pl}ei(ωc+lωT )t =
+∞

l=−∞

Plx
Ply

ei(ωc+lωT )t
= · · +{P−2}ei(ωc−2ωT )t + {P−1}ei(ωc−ωT )t + {P0}eiωct + {P1}ei(ωc+ωT )t
+ {P2}ei(ωc+2ωT )t + · · ·
(4.119)
where {· · ·P−2x P−1x P0x P1x P2x ··}T and {· · ·P−2y P−1y P0y P1y P2y ··}T are the
eigenvectors in ﬂexible x and y directions, respectively. Each term in the eigen-
vector represents the amplitude of the spectrum at the corresponding frequency
(ωc ± lωT). If the system chatters at the frequency ωc, the force and vibration
caused by the unstable, regenerative dynamic chip will lead to largest force and
vibration at the same frequency ωc. As a result, the term P0eiωct in Eq. (4.119)
will have the highest spectrum amplitude P0, i.e., P0 >∈(· · P−2, P−1, P1, P2, ...),
which can be checked more efﬁciently by normalizing the eigenvector by P0 in
each ﬂexible direction as follows:
|p| =

· ·
*** P−2
P0
***
*** P−1
P0
*** 1
*** P1
P0
***
*** P2
P0
*** · ·
T
.
(4.120)
If any of the normalized eigenvector terms, i.e.,
*** Pl
P0
*** > 1, the solution
gives a false depth of cut and must be neglected during the iterative solu-
tion. If the false solution is not neglected, the multifrequency solution may
always converge to the zero-order solution where the harmonics are not
considered.
Example 5. Low Immersion Milling. The stability of a milling system with a
low radial depth of cut is predicted by considering average directional factors
[A0] and up to three harmonics (r = 3) of tooth-passing frequency according
to the zero and multi-frequency solution, respectively. The cutting conditions

4.6 ANALYTICAL PREDICTION OF CHATTER VIBRATIONS IN MILLING
171
Axial Depth of Cut  [mm]
0
10
2
4
6
8
12
14
16
18
20
r =3 (Multi Frequency Stability Lobes)
r =0 (Traditional Stability Lobes)
3.4
3.8
A
B
C
: No Chatter
: Chatter
1.5
2
2.5
3
4
Spindle Speed [rpm] x104
a) Unstable at point A (n=30,000 rev/min, a=2 mm),
ωC=947.23 Hz
ωT
ωC
ωC+ωT
ωC+2ωT
2
4
6
8
10
4
8
12
16
18
Force [N]
x10-3
Deflection
    [mm]
5000
4000
3000
2000
1000
0
2500
2000
1500
1000
500
0
Cutting Force (FFT)
Tool Vibration (FFT)
Frequency [Hz]
Frequency [Hz]
: kωT, k=1,2,3...
ωT
2
10
2
4
6
8
1
2
3
4
5
Frequency [Hz]
Frequency [Hz]
Force [N]
x10-2
Deflection
    [mm]
10000
6000
4000
2000
0
8000
2500
1500
1000
500
0
2000
c) Unstable at point C (n=38,000 rev/min, a=2 mm),
: k1(ωT/2), k1=1,3,5...,
: k2ωT, k2=1,2,3...
b) Stable at point B (n=34,000 rev/min, a=3 mm),
10
15
5
10
5
16
21
26
Force [N]
x10-4
Deflection
    [mm]
10000
7500
5000
2500
0
5500
4125
2750
1375
0
Frequency [Hz]
Frequency [Hz]
: kωT, k=1,2,3...
Figure 4.18: Stability lobes for low-immersion down-milling,
structural dynamic parameters in normal (y) direction: ωny =
907[Hz], ky = 1.4 × 106[N/m], ζy = 0.013, and the system is
rigid in x direction. The radial depth of cut: 1.256[mm],
3 ﬂuted end mill with 23.6[mm] diameter. Feedrate=0.12
mm/rev/tooth. Cutting coefﬁcients (Al-6061): Kt = 500[MPa]
and Kr = 0.2
and structural parameters are
given in Figure 4.18. Whereas
both
solutions
predicted
chat-
ter at point A, zero-frequency
and
multifrequency
solutions
predicted contradictory stability
results
in
operating
points
B
and C. The cutting forces and
vibrations are predicted by using
the time domain simulations as
shown in Figure 4.18.
At point A (n = 30,000 rev/min,
a = 2 mm), both zero- and multi-
frequency solutions give chatter,
and both solutions, i.e., depths
of
cut,
are
almost
equal
to
each other. The force spectrum
exhibits dominant tooth-passing
frequency
harmonics
plus
the
spread of chatter frequency at the
integer multiples of tooth-passing
frequency. However, there is only
one dominant frequency in the
spectrum of vibrations in y direc-
tion, which is the chatter fre-
quency. The chatter frequency
is
obtained
as
ωc,TDS = 947.23
Hz, ωc,MFS = 946.9 Hz from time
domain
simulation
(TDS)
and
multi-frequency solution (MFS),
respectively. This type of regular
chatter vibration is called Hopf
Bifurcation in the literature.
Point B (n = 34,000 rev/min,
a = 3 mm) is located in the stable,
added lobe predicted by the multi-
frequency solution, but predicted
as an unstable zone by the zero-
frequency solution. Time domain
simulation,
presented
in
Fig-
ure 4.18b, shows that the process
is indeed stable. The dominant
frequencies of both the tool vibra-
tion and cutting force are only
at the tooth-passing frequency

172
MACHINE TOOL VIBRATIONS
(ωT) plus its integer harmonics because of the periodic behavior of the sta-
ble milling process.
Point C (n = 38,000 rev/min, a = 2 mm) is predicted to be stable by the
zero-frequency solution, but is indicated as an unstable zone by the multi-
frequency solution. The simulated cutting forces and tool vibrations indicate
clear instability because of growing amplitudes, and their spectra are given
in Figure 4.18c. It can be seen that only tooth-passing frequency and its har-
monics (kωT), as well as half-tooth-passing frequency and its odd harmonics
((2k + 1)(ωT/2)), are dominant, where k is a positive integer number. This
type of chatter vibration is called ﬂip bifurcation in the literature. The multi-
frequency solution predicts the most dominant chatter vibration frequency as
ωc,MFS = 950.5 Hz which is almost equal to half of the tooth-passing frequency
ωc,TDS = ωT/2 = 950 Hz. Note that such a spectrum, which is dominated at
the integer multiples of half-tooth-passing frequency in cutting forces, must
not be confused with the forced vibrations that occur at the integer multiples
of tooth passing frequency. The cutting conditions at point C clearly exhibit
chatter as proven by the time domain simulations of the process. Most common
milling conditions experienced in industry exhibit regular chatter, which can
be accurately predicted by the zero frequency solution.
4.7
CHATTER STABILITY OF DRILLING OPERATIONS
The general equations of motion for the dynamic drilling system can be formu-
lated in the stationary frame as follows:

M

⎧
⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎩
··xc(t)
··yc(t)
··zc(t)
··
θc(t)
⎫
⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎭
+

C

⎧
⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎩
·xc(t)
·yc(t)
·zc(t)
·
θc(t)
⎫
⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎭
+

K

⎧
⎪⎪⎨
⎪⎪⎩
xc(t)
yc(t)
zc(t)
θc(t)
⎫
⎪⎪⎬
⎪⎪⎭
=
⎧
⎪⎪⎨
⎪⎪⎩
Fx(t)
Fy(t)
Fz(t)
Tc(t)
⎫
⎪⎪⎬
⎪⎪⎭
,
Figure 4.19: Dynamic model of drill vibrations.
Y
zc
yc
xc
θc
deformed drill geometry
ky
kθ
kx
kz
Z
X
where (xc, yc) denote the lateral,
(zc) the axial deﬂections of the
drill in the global coordinate sys-
tem, as illustrated in Figure 4.19.
(θc) is the torsional deﬂection of
the drill bit itself, with respect
to the rigid body spindle motion.
The rotation speed of the tool is 
in [rad/s]. The matrices [M], [C],
and [K] contain the lumped mass,
damping, and stiffness character-
istics reﬂected at the drill tip,
respectively. The external cutting
loads acting on the drill include
two lateral forces (Fx, Fy), thrust

4.7 CHATTER STABILITY OF DRILLING OPERATIONS
173
Y
X
Ωt
Fr1
Ft1
Fr2
Ft2
1
2
Fa2
Fa1
Ω
Figure 4.20: Elemental cutting forces
acting on the edges of a two-ﬂuted drill.
force (Fz), and torque (Tc). The dynamic prop-
erties of the drill are either predicted from the
ﬁnite element method or measured experimen-
tally. The drill end is in contact with the mate-
rial during the drilling process, which signiﬁcantly
alters the dynamic stiffness of the drill struc-
ture. Thrust compresses the drill, whereas torque
extends the drill by untwisting it. This sign is taken
into account in the proposed frequency domain
solution [92, 93].
4.7.1
Dynamic Drilling Force Model
The (positive) force components acting on each ﬂute are tangential (t), radial
(r), and axial (a), as illustrated in Figure 4.20 and deﬁned as follows:
Ft1 = ktcbh1 ,
Fr1 = krcFt1 ,
Fa1 = kacFt1
Ft2 = ktcbh2 ,
Fr2 = krcFt2 ,
Fa2 = kacFt2,
(4.121)
where h1 is the uncut chip thickness for ﬂute 1 measured in the spindle axis
direction, b is the radial depth of cut, deﬁned by the difference of tool radius
and pilot hole radius: b = R −Rp. The radial and axial forces are expressed to
be proportional to the tangential force. The total cutting forces acting in the X,
Y and Z directions at the tool tip are (see 4.20) as follows:
Fx(t) = (Ft1 −Ft2) sin t −(Fr1 −Fr2) cos t
Fy(t) = (Ft1 −Ft2) cos t + (Fr1 −Fr2) sin t
Fz(t) = Fa1 + Fa2
Tc(t) ≃Rt (Ft1 + Ft2)
⎫
⎪⎪⎬
⎪⎪⎭
(4.122)
where Rt is the torque arm for calculating the cutting torque Tc from tangen-
tial and radial forces. The dynamic chip thickness is inﬂuenced by vibrations in
three orthogonal directions and one torsional direction. The static chip thick-
ness equals the feed per revolution ( fr) divided by the number of ﬂutes (N),
which is two for a twisted drill as follows:
hs = fr
N .
(4.123)
The change in chip thickness due to regenerative displacements dx, dy on each
ﬂute are:
dh1 =
1
tan κt
$
dx cos t −dy sin t
%
dh2 =
−1
tan κt
$
dx cos t −dy sin t
%

,
(4.124)
where 2κt is the tip angle of the drill and t is the tool rotation angle. An
increase in chip thickness on ﬂute 1 is accompanied by an equal-sized decrease
in chip thickness on ﬂute 2. The chip thickness change is illustrated in Fig-
ure 4.21, where du = dx cos t −dy sin t is the tool deﬂection in the direction
of the cutting lips.

174
MACHINE TOOL VIBRATIONS
1
2
du
b
R
rp
dh1
dh2
hs,2
hs,1
κt
spindle axis
Figure 4.21: Structural dyna-
mic model of drill with radial,
axial, and torsional vibrations.
The regenerative displacements are
{	r} =
⎧
⎪⎪⎨
⎪⎪⎩
dx
dy
dz
dθ
⎫
⎪⎪⎬
⎪⎪⎭
=
⎧
⎪⎪⎨
⎪⎪⎩
xc(t) −xc(t −T)
yc(t) −yc(t −T)
zc(t) −zc(t −T)
θc(t) −θc(t −T)
⎫
⎪⎪⎬
⎪⎪⎭
,
(4.125)
where T = 2π/N is the tooth period. The dynamic chip thickness due to tor-
sional vibrations (positive in the direction of tool rotation) is expressed for two
teeth as follows:
dh1 = dh2 = −fr
2π dθ,
(4.126)
and depends on the feed per revolution fr. The axial vibrations inﬂuence the
chip thickness directly as follows:
dh1 = dh2 = −dz
(4.127)
The total change in chip thickness becomes

dh1
dh2

=
1
dx cos t−dy sin t
tan κt
−dz −
fr
2π dθ
−(dx cos t−dy sin t)
tan κt
−dz −
fr
2π dθ

.
(4.128)
The static chip thickness (hs) is neglected because it does not contribute to the
stability. The dynamic forces depend on the dynamic chip thicknesses dh1 and
dh2 as follows:
⎧
⎪⎪⎨
⎪⎪⎩
Fx
Fy
Fz
Tc
⎫
⎪⎪⎬
⎪⎪⎭
= ktcb
⎧
⎪⎪⎨
⎪⎪⎩
(dh1 −dh2) sin t −krc(dh1 −dh2) cos t
(dh1 −dh2) cos t + krc(dh1 −dh2) sin t
kac(dh1 + dh2)
(dh1 + dh2)
$
1 −krc
%
Rt
⎫
⎪⎪⎬
⎪⎪⎭
,
(4.129)
where the sum of dynamic chip thicknesses (dh1 + dh2) and difference (dh1 −
dh2) are

dh1 + dh2
dh1 −dh2

=
1
−2dz −2 fr
2π dθ
2
tan κt
$
dx cos t −dy sin t
%

,
(4.130)

4.7 CHATTER STABILITY OF DRILLING OPERATIONS
175
which are substituted in Eq. (4.129) with φ = t to obtain the dynamic cutting
forces acting on the tool, are as follows:
⎧
⎪⎪⎨
⎪⎪⎩
Fx
Fy
Fz
Tc
⎫
⎪⎪⎬
⎪⎪⎭
= ktcb
⎧
⎪⎪⎪⎨
⎪⎪⎪⎩
2
tan κt
$
dx cos φ −dy sin φ
%
(sin φ −krc cos φ)
2
tan κt
$
dx cos φ −dy sin φ
%
(cos φ + krc sin φ)
kac(−2dz −2 fr
2π dθ)
(−2dz −2 fr
2π dθ)
$
1 −krc
%
Rt
⎫
⎪⎪⎪⎬
⎪⎪⎪⎭
= −2ktcb

B(φ)

⎧
⎪⎪⎨
⎪⎪⎩
dx
dy
dz
dθ
⎫
⎪⎪⎬
⎪⎪⎭
,
where time-varying directional matrix

B(φ)

is obtained by consider-
ing the identities (cos2 φ = (1 + cos 2φ) /2, sin2 φ = (1 −cos 2φ) /2, sin φ cos φ =
(sin 2φ) /2) as follows:

B(φ)

=
⎡
⎢⎢⎢⎢⎣
−1
tan κt

sin 2φ
2
−krc cos2 φ

1
tan κt

−sin2 φ + krc
sin 2φ
2

0
0
−1
tan κt

cos2 φ −krc
sin 2φ
2

1
tan κt

−sin 2φ
2
−krc sin2 φ

0
0
0
0
kac
fr
2π kac
0
0
$
1 −krc
%
Rt
fr
2π
$
1 −krc
%
Rt
⎤
⎥⎥⎥⎥⎦
(4.131)
=
⎡
⎢⎢⎢⎣
−1
2 tan κt

sin 2φ −krc (1 + cos 2φ)

1
2 tan κt

−(1 −cos 2φ) + krc sin 2φ

0
0
−1
2 tan κt

(1 + cos 2φ) + krc sin 2φ

1
2 tan κt

−sin 2φ −krc (1 −cos 2φ)

0
0
0
0
kac
fr
2π kac
0
0
$
1 −krc
%
Rt
fr
2π
$
1 −krc
%
Rt
⎤
⎥⎥⎥⎦.
(4.132)
The dynamic drilling coefﬁcient matrix [B(φ)] depends on time t, spindle speed
, cutting coefﬁcients krc and kac, tool tip angle κt, torque arm Rt, and feed per
revolution fr. Because the forces in the x and y directions depend on the chip
thickness difference (dh1 −dh2), axial and torsional deﬂections do not affect
the lateral cutting forces (Fx, Fy). Similarly, as the torque and thrust depend
on the chip thickness sum (dh1 + dh2), lateral tool deﬂections do not affect
the dynamic thrust force Fz or torque Tc. The dynamic cutting forces can be
summarized as follows:
{F(t)} = −2ktcb

B(φ)
 {	r} ,
(4.133)
where {	r} contains the regenerative displacements from Eq. (4.125). The time-
dependent matrix [B(φ)] is periodic at tooth-passing frequency N or tooth
period T = 2π/N. By considering only the mean of the directional factors as
similar to milling stability, the time variation in lateral directions are removed.

B0

= 1
T
 T
0

B (t)

dt = 1
φp
 φex
φst

B (φ)

dφ,
(4.134)

176
MACHINE TOOL VIBRATIONS
where the pitch angle of the tool is φp = 2π/N. The mean directional matrix
[B0] is valid only between entry (φst) and exit (φex) angles of the tool. Although
the entry and exit angles can vary in plunge milling operations, which have
the identical process dynamics as drilling, the twist drills and cylinder boring
heads have φst = 0 and φex = π.

B0

= 1
φp
 φex
φst

B (φ)

dφ =
⎡
⎢⎢⎣
βxx βxy 0
0
βyx βyy 0
0
0
0 βzz βzθ
0
0 βθz βθθ
⎤
⎥⎥⎦.
(4.135)
The average directional factors for the two-ﬂuted drill are (φp = π, φst = 0 and
φex = π) as follows:

B0

= 1
π
 π
0

B (φ)

dφ =
⎡
⎢⎢⎢⎣
+krc
2 tan χt
+1
2 tan χt
0
0
−1
2 tan χ
krc
2 tan χt
0
0
0
0
kac
fr
2π kac
0
0
$
1 −krc
%
Rt
fr
2π
$
1 −krc
%
Rt
⎤
⎥⎥⎥⎦, (4.136)
which depend only on the cutting force coefﬁcients and drill geometry. By
substituting

B0

into Eq. (4.133), the dynamic cutting force becomes time
invariant as
{F(t)} = −2ktcb

B0
 {	r} .
(4.137)
Because

B0

has zero off-diagonal terms, the lateral dynamic cutting forces
(Fx, Fy) and axial force/cutting torque (Fz, Tc)
are decoupled from the corre-
sponding lateral vibrations (dx, dy) and axial/torsional (dz, dθ) vibrations.
4.8
FREQUENCY DOMAIN SOLUTION OF DRILLING STABILITY
The structural dynamics of the drill at its cutting lips can be represented by
the following FRF matrix:
[ (iω)] =
⎡
⎢⎢⎣
xx
0
0
0
0 yy
0
0
0
0
zz zθ
0
0 θz θθ
⎤
⎥⎥⎦.
(4.138)
It is assumed that there is no coupling between the lateral directions, and no
cross-talk from lateral directions into axial and torsional directions either. The
drill acts like a coil spring under torsional vibrations. It shrinks axially when
twisted in torsion, and extends when it unwinds. The cross FRFs (zθ, θz)
between the axial force (Fz) and torque (Tc) represent the coupling. The drilling
system is critically stable when the harmonic, regenerative displacements {	r}
occur at the chatter frequency ωc with a constant amplitude as follows:
{	r (iωc)} =
$
1 −e−iωcT% {r (iωc)} =
$
1 −e−iωcT%
[ (iω)] {F} eiωct,
(4.139)

4.8 FREQUENCY DOMAIN SOLUTION OF DRILLING STABILITY
177
where ωcT is the regenerative phase delay between the vibrations at successive
tooth periods T. By substituting {	r (iωc)} into Eq. (4.137), the dynamic drilling
force is converted into the following eigenvalue problem:
{F} eiωct= −2ktcblim
$
1 −e−iωcT% 
B0

[ (iω)] {F} eiωct,
(4.140)
where blim is the critically stable depth of cut. The determinant of the system
leads to eigenvalue solution with critically stable depth of cut and speed as
follows:
det
$
I

+ 

B0

[ (iω)]
%
= 0,
(4.141)
where the eigenvalue is
 = 2ktcblim
$
1 −e−iωcT%
= 2ktcblim

(1 −cos ωcT) + i sin ωcT

(4.142)
The determinant (Eq. 4.141) can be partitioned into lateral and tor-
sional/axial components due to zero off-diagonal elements of mean directional
matrix [B0].
****
1 0
0 1
	
+ xy
βxx βxy
βyx βyy
	 xx
0
0 yy
	**** = 0
****
1 0
0 1
	
+ zθ
 βzz βzθ
βθz βθθ
	  zz zθ
θz θθ
	**** = 0
⎫
⎪⎪⎬
⎪⎪⎭
.
(4.143)
The eigenvalues xy and zθ lead to critical depth of cut and speed because
of the lateral and torsional/axial structural dynamics of the drill. The critically
stable depth of cut (bim) and spindle speed (n) can be solved using the same
procedure shown for milling. Each eigenvalue will have real and imaginary
parts as follows:
 = R + iI = 2ktcblim

(1 −cos ωcT) + i sin ωcT

blim =
1
4ktc
R (1 −cos ωcT) + I sin ωcT
1 −cos ωcT
+ iI (1 −cos ωcT) −R sin ωcT
1 −cos ωcT
	
.
(4.144)
Because the imaginary part of the depth of cut needs to be zero,
I (1 −cos ωcT) −R sin ωcT = 0 →χ = I
R
=
sin ωcT
1 −cos ωcT .
(4.145)
By substituting χ into the real part of the critical depth of cut (Eq. 4.144),
blim = R

1 + χ2
4ktc
.
(4.146)
The corresponding spindle speed is obtained similar to milling as
T = ϵ + 2kπ
ωc
, ϵ = π −2 tan−1 I
R
→n(rev/ min) = 60
2T .
(4.147)

178
MACHINE TOOL VIBRATIONS
The stability lobes of the drilling can be plotted by using the identical procedure
explained for milling. However, the stability lobes must be separately evaluated
for lateral vibrations by using eigenvalues xy and torsional/axial vibrations
considering eigenvalues zθ. It is possible to see which part of the structural
dynamics affect the productivity most, which leads to hints for improved drill
geometry design and spindle speed selection. It must be noted that the mechan-
ics of drilling at its chisel edge are complex, and the drill wanders in the hole,
which changes the stiffness and damping of the process during drilling oper-
ations. As a result, the stability of drilling is difﬁcult to predict accurately in
practice. Instead, the trend and sources of chatter needs to be interpreted from
the stability analysis presented here.
4.9
SEMIDISCRETE TIME DOMAIN SOLUTION
OF CHATTER STABILITY
Insperger and St´ep´an [53] presented an analytical solution of chatter stability
in a discrete time domain. The delayed differential equation is discretized at
discrete time intervals, which allow linear, time domain simulation of forces
and vibrations while predicting the stability of the cutting system for a given set
of cutting conditions. The application of the semidiscrete time domain method
on orthogonal cutting and milling is presented in the following sections.
4.9.1
Orthogonal Cutting
Let the dynamics of the orthogonal cutting system be represented by the
following delayed differential equation:
d2x(t)
dt2
+ 2ζωn
dx(t)
dt
+ ω2
nx(t) = F(t) = ω2
n
kx
Kfa

−x(t) + x(t −T)

.
(4.148)
By organizing the differential equation with two state variables,
x1(t) = x(t),
x2(t) = dx(t)
dt
(4.149)
d2x(t)
dt2
= dx2(t)
dt
= −ω2
n

1 + Kfa
kx

x1(t) −2ζωnx2(t) + ω2
n
kx
Kfax1(t −T).
It can be expressed as ﬁrst-order equations as follows:

 ·x1(t)
·x2(t)

: ;8 9
·y(t)
=
(
0
1
−ω2
n

1 + Kf a
kx

−2ζωn
)
:
;8
9
L

x1(t)
x2(t)

: ;8 9
y(t)
+
(
0
0
ω2
n
kx Kfa 0
)
:
;8
9
R

x1(t −T)
0

:
;8
9
y(t−T)
(4.150)
·y(t) = Ly(t) + Ry(t −T)
(4.151)
The delay period T is divided into m number of discrete time intervals 	t, i.e.,
T = m · 	t. Let the value of {y(ti)} at the current time ti be expressed as yi and

4.9 SEMIDISCRETE TIME DOMAIN SOLUTION OF CHATTER STABILITY
179
at time ti −T →y(ti −T) = y [(i −m)	t] = yi−m. When the sampling interval
	t is very small, the value of y(t −T) can be approximated by averaging the
values at two consecutive sampling intervals as follows:
y(t −T) ≈y(ti −T + 	t) + y(ti −T)
2
= yi−m+1 + yi−m
2
→t ∈

ti,ti+1

. (4.152)
The differential equation
·y has homogenous (yih(t)) and particular (yip(t))
solutions in small time intervals 	t as
yi(t) = yih(t) + yip(t).
(4.153)
The homogenous solution is obtained as follows:
·yih(t) = Lyih(t) →yih(t) = C0eL(t−ti),
(4.154)
where C0 depends on the initial conditions. The particular solution is given by
·yip(t) = Lyip(t) + R
yi−m+1 + yi−m
2

yip(t) = u(t)eL(t−ti) →d
dt yip(t) = eL(t−ti) du(t)
dt
+ LeL(t−ti)u(t).
(4.155)
By substituting yip(t) = u(t)eL(t−ti) and forcing the derivatives (
·yip(t) =
dyip(t)/dt) to be equal,
eL(t−ti) ·u(t) + LeL(t−ti)u(t) = LeL(t−ti)u(t) + R
yi−m+1 + yi−m
2

,
(4.156)
which leads to
·u(t) = 1
2e−L(t−ti)R (yi−m+1 + yi−m)
u(t) = −1
2L−1e−L(t−ti)R (yi−m+1 + yi−m) .
(4.157)
Substituting u(t) into yip(t) = eL(t−ti)u(t),
yip(t) = eL(t−ti)u(t) = −1
2eL(t−ti)L−1e−L(t−ti)R (yi−m+1 + yi−m) .
By using the exponential matrix property of YeXY −1 = eYXY −1,
Lyip(t) = −1
2

LeL(t−ti)L−1
e−L(t−ti)R (yi−m+1 + yi−m)
yip(t) = −1
2L−1 .
eLLL−1(t−ti)/
e−L(t−ti)R (yi−m+1 + yi−m)
= −1
2L−1eL(t−ti)e−L(t−ti)R (yi−m+1 + yi−m)
= −1
2L−1R (yi−m+1 + yi−m) .
(4.158)

180
MACHINE TOOL VIBRATIONS
The complete solution of the system yi(t) is as follows:
yi(t) = yih(t) + yip(t) = C0eL(t−ti) + eL(t−ti)u(t)
yi(t) = C0eL(t−ti) −1
2L−1R (yi−m+1 + yi−m) .
(4.159)
When the system is at t = ti,
yi = yih(ti) + yip(ti) = C0 −1
2L−1R (yi−m+1 + yi−m)
C0 = yi + 1
2L−1R (yi−m+1 + yi−m) .
(4.160)
Because the solution is valid at discrete time intervals 	t, the time differ-
ence between two successive intervals is replaced by ti+1 −ti = 	t in Eq. (4.159)
as follows:
yi+1 = eL	tC0 −1
2L−1R (yi−m+1 + yi−m) .
(4.161)
By substituting C0 from Eq. (4.160), the linear solution of the delayed differ-
ence equation is expressed at discrete time intervals 	t as follows:
yi+1 = eL	tyi + eL	t 1
2L−1R (yi−m+1 + yi−m) −1
2L−1R (yi−m+1 + yi−m) .
= eL	tyi + 1
2
$
eL	t −I
%
L−1R
$
yi−(m−1) + yi−m
%
.
(4.162)
The solution requires the previous value yi and values a delay before
(yi−m, yi−m+1). The discrete time values of the states can be expressed in matrix
form as
⎡
⎢⎢⎢⎢⎢⎢⎢⎣
yi
yi−1
·
·
yi−(m−1)
yi−m
⎤
⎥⎥⎥⎥⎥⎥⎥⎦
:
;8
9
Yi
=
⎡
⎢⎢⎢⎢⎢⎢⎢⎣
eL	t
0
0
0
0
I
0
0
0
0
·
I
0
0
0
·
·
·
·
·
0
0
I
0
0
0
0
0
I
0
⎤
⎥⎥⎥⎥⎥⎥⎥⎦
:
;8
9
B1
⎡
⎢⎢⎢⎢⎢⎢⎢⎣
yi−1
yi−2
·
·
yi−m
yi−(m+1)
⎤
⎥⎥⎥⎥⎥⎥⎥⎦
:
;8
9
Yi−1
(4.163)
+ 1
2
$
eL	t −I
%
L−1R
⎡
⎢⎢⎢⎢⎢⎢⎢⎣
0
0
·
·
I
I
0
0
·
·
0
0
·
·
·
·
·
·
·
·
·
·
0
0
0
0
0
0
0
0
0
0
0
0
⎤
⎥⎥⎥⎥⎥⎥⎥⎦
:
;8
9
B2
⎡
⎢⎢⎢⎢⎢⎢⎢⎣
yi−1
yi−2
·
·
yi−m
yi−(m+1)
⎤
⎥⎥⎥⎥⎥⎥⎥⎦
:
;8
9
Yi−1
{Yi} = [B]{Yi−1} →[B] = [B1] + [B2],

4.9 SEMIDISCRETE TIME DOMAIN SOLUTION OF CHATTER STABILITY
181
where the ﬁrst row is given by Eq. (4.162), and the rest of them are simply
equal to themselves, i.e., yi−1 = yi−1, yi−2 = yi−2, . . . , yi−m = yi−m. The delayed
differential equation, which describes the chatter dynamics for the orthogo-
nal cutting condition, is discretized with m time segments and represented
by Eq. (4.163). The prediction of each vibration (yi) at time segment t = i	t
requires the previous value of vibration (yi−1), the vibration generated one
spindle revolution before (yi−m →ti−m = ti −m	t = ti −T), and one just before
that (yi−(m+1) →ti−(m+1) = ti −(m + 1)	t = tt −T −	t). In other words, the
system needs to remember the vibrations during the previous revolutions of
the spindle. The solution therefore requires m number of initial values of
the vibrations generated during the previous spindle period, which are not
available. However, because the transient vibrations eventually disappear,
one can assume a nonzero, and constant steady-state static deﬂection (i.e.,
{y} = {x
·x} →x−1 = x−2 = ... = x−m = ω2
n
kx Kfa,
·x = 0) as initial conditions. The
system will converge to true steady-state vibrations after one or two revolu-
tions of the spindle. When the depth of cut and speed are deﬁned, Eq. (4.163)
allows prediction of vibration history, as well as the dynamic cutting forces,
by substituting the vibrations in Eq. (4.148) (Fi = ω2
n
kx Kfa

−xi + xi−m

) when
the system is stable. The accuracy of the solution depends on the number of
time intervals within one spindle period. It must be noted that the sampling
interval 	t must be able to capture the vibration frequency; hence, 	t ≤π/ωc
or m ≥2.
Because the transition matrix [B] is time invariant and constant for a spec-
iﬁed speed and depth of cut, the discretized equation (Eq. 4.163) can be used
to assess the stability of the turning system, as well, by simply checking its
eigenvalues.
{Yi} = [B]{Yi−1} →|λ[I] −[B]| = 0.
(4.164)
If any eigenvalue λ of transition matrix [B] is outside the unit circle, i.e.,
|λ| > 1, it corresponds to having a positive real pole in the continuous system
(λ = e+σiT > 1), the orthogonal system will be unstable and chatter will occur.
The stability lobes can also be constructed by scanning the spindle speed n
(rev/s) (T[s] = 1/n) at the operating range of the machine at increments, and
increasing the axial depth of cut at acceptable increments of 	a until the
chatter limit is reached. Although the frequency domain stability predicts the
lobes directly, the semidiscrete method requires a trial of cutting conditions;
hence, it is a computationally more costly process. Furthermore, the accuracy of
the semidiscrete method is highly dependent on the discrete sampling time (	t),
spindle speed interval along the lobes (	n), and axial depth of cut increments
(	a). On the other hand, the semidiscrete method allows direct prediction
of steady-state vibrations, velocities, and cutting forces at any stable cutting
condition, because it is based on the analytical, time domain solution of the
dynamic cutting equation in discrete time intervals.

182
MACHINE TOOL VIBRATIONS
4.9.2
Discrete Time Domain Stability Solution in Milling
Stepan et al. [49, 52] extended the semidiscretization method to predict the
stability of milling. The dynamic milling equation was previously derived as
Eq. (4.73).
{F(t)} = 1
2aKt[A(t)]{	(t)}.
(4.165)
As the cutter rotates, the directional factors vary with time, and [A(t)] is
periodic at tooth passing frequency ωT = N or tooth period T = 2π/ωT. For
the simplicity of mathematical illustration, let the machine have the following
two orthogonal ﬂexibilities reﬂected at the cutter:
xx(s) =
ω2
nx/kx
s2 + 2ςxωnxs + ω2nx
→
··x(t) + 2ςxωnx
·x(t) + ω2
nxx(t) = ω2
nx
kx
Fx(t)
(4.166)
yy(s) =
ω2
ny/ky
s2 + 2ςyωnys + ω2ny
→
··y(t) + 2ςxωnx
·y(t) + ω2
nxy(t) =
ω2
ny
ky
Fy(t).
(4.167)
The dynamic cutting forces are

Fx(t)
Fy(t)

= 1
2aKt
axx axy
ayx ayy
	 
x(t)
y(t)

−

x(t −T)
y(t −T)

.
The resulting dynamics of the milling process is expressed by the following
coupled, delayed differential equations:
1 ··x(t) + 2ςxωnx
·x(t) + ω2
nxx(t)
··y(t) + 2ςyωny
·y(t) + ω2
nyy(t)

= 1
2aKt
ω2
nx/kx
0
0
ω2
ny/ky
	 axx axy
ayx ayy
	 
x(t)
y(t)

−

x(t −T)
y(t −T)

.
(4.168)
By rearranging the equation of motion in matrix form,
1 0
0 1
	 1 ··x
··y

+
2ςxωnx
0
0
2ςyωny
	 1 ·x
·y

+
ω2
nx
0
0 ω2
ny
	 
x
y

= 1
2aKt
ω2
nx/kx
0
0
ω2
ny/ky
	 axx axy
ayx ayy
	 
x(t)
y(t)

−

x(t −T)
y(t −T)

.
By deﬁning the state variables as
x1 = x(t), x2 = dx(t)
dt
,
·x1 = x2 ; y1 = y(t),
y2 = dy(t)
dt
=
·y1,
the periodic milling dynamics with time-varying, self-excitation and delay
terms expressed in Eq. (4.168) is organized as ﬁrst-order equations as follows:
 ·q

= [L] {q} +

R
 {q (t −T)} ,
(4.169)

4.9 SEMIDISCRETE TIME DOMAIN SOLUTION OF CHATTER STABILITY
183
Figure 4.22: Semidiscretization of periodic function.
where
{q} =
⎧
⎪⎪⎪⎨
⎪⎪⎪⎩
x(t)
y(t)
·x(t)
·y(t)
⎫
⎪⎪⎪⎬
⎪⎪⎪⎭
, [A(t)] =
axx(t) axy(t)
ayx(t) ayy(t)
	
, δ = 1
2aKt
(4.170)
[M]−1 =
 ω2
nx/kx
0
0
ω2
ny/ky
	
, [C] =
−2ςxωnx
0
0
−2ςyωny
	
, [D] =
ω2
nx
0
0 ω2
ny
	
[L] =
(

0

2x2
[I]2x2
δ

M
−1 
A

−[D]

C

)
,

R

=
(

0


0

−δ

M
−1 
A
 
0

)
.
The delay period T is divided into m number of discrete time intervals 	t,
i.e., T = m · 	t as shown in Figure 4.22. Let the value of q(ti) at the current time
ti be simply expressed as qi and at time ti −T →{q(ti −T)} = {q [(i −m)	t]} =
{qi−m}. When the sampling interval 	t is very small, the value of q(ti −T) can
be approximated by averaging the values at two consecutive sampling intervals
as follows:
{q(t −T)} ≈{q(ti −T + 	t)} + {q(ti −T)}
2
= {qi−m+1} + {qi−m}
2
→t ∈

ti,ti+1

.
(4.171)
The dynamics of the system represented in Eq. (4.169) is rewritten at discrete
time intervals [20] as follows:
 ·qi

= [Li] {qi} + 1
2

Ri

({qi−m+1} + {qi−m}) .
(4.172)

184
MACHINE TOOL VIBRATIONS
The differential equation {
·q} has homogeneous {qi,h(t)} and particular
{qi,p(t)} solutions at the small time interval 	t as follows:
{qi(t)} = {qi,h(t)} + {qi,p(t)}.
(4.173)
The homogeneous solution is obtained as
{
·qi,h(t)} = [Li]{qi,h(t)} →{qi,h(t)} = e[L](t−ti){C0},
(4.174)
where {C0} depends on the initial conditions. The particular solution is given
by
{
·qi,p(t)} = [L]{qi,p(t)} + 1
2[R] ({qi−m+1} + {qi−m})
{qi,p(t)} = e[L](τ−ti){u(t)} = −1
2[L]−1[R] ({qi−m+1} + {qi−m}) .
(4.175)
The complete solution of the system {qi(t)} is
{qi(t)} = {qi,tr(t)} + {qi,p(t)} = e[Li](t−ti){C0} −1
2[Li]−1[Ri] ({qi−m+1} + {qi−m})
(4.176)
When the system is at t = ti,
{qi} = {C0} −1
2[Li]−1[Ri] ({qi−m+1} + {qi−m})
{C0} = {qi} + 1
2[Li]−1[Ri] ({qi−m+1} + {qi−m}) .
(4.177)
Because the solution is valid at discrete time intervals 	t = ti+1 −ti, the
states at time t = ti+1,
{qi+1} = e[Li]	t{qi} + 1
2
$
e[Li]	t −[I]
%
[Li]−1[Ri] ({qi−m+1} + {qi−m}) .
(4.178)
The solution requires the previous value {qi} and values a delay before
({qi−m}, {qi−m+1}). The series of equations are expressed at discrete time inter-
vals as follows:
{zi+1} = [Bi]{zi},
(4.179)

4.9 SEMIDISCRETE TIME DOMAIN SOLUTION OF CHATTER STABILITY
185
where
{zi} =
⎧
⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎩
{qi}
{qi−1}
·
·
{qi−m+1}
{qi−m}
⎫
⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎭
(m+1)x1
[Bi] =
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
e[Li]	t [0] ·
·
1
2
$
e[Li]	t −[I]
%
[Li]−1[Ri]
1
2
$
e[Li]	t −[I]
%
[Li]−1[Ri]
[I]
[0]
[0]
[I]
[0]
·
·
·
·
·
·
·
·
[I]
·
[0]
·
[0]
[I]
[0]
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
4[m+1]×4[m+1]
The state matrices [L(t)] and [R(t)] depend on time-varying directional
matrix [A(t)] that can be evaluated at each time interval (t = i	t) from
Eq. (4.170). The time-varying milling process can be simulated by solving the
discrete set of recursive equations (4.179) at 	t time intervals. Because the pro-
cess is periodic at tooth passing interval T, it is sufﬁcient to solve the equations
at m number of time intervals.
The stability of the system can be evaluated by expressing Eq. (4.179) at m
number of intervals within the tooth period T as follows:
{zi+m} = []{zi} = [B]m · ·[B]2[B]1{zi}.
(4.180)
According to the Floquet theory, the linear periodic system (Eq. 4.180) will be
unstable if any of the eigenvalues of the transition matrix [] have a modulus
greater than one, critically stable if the modulus is unity, and stable if the
modulus is less than unity. Unlike the zero-order frequency domain solution
that gives the critical stability borders, the lobes directly, the stability must be
searched iteratively by checking trial spindle speeds and depths of cuts when
a semidiscrete time domain solution is used. The semidiscrete time domain
solution considers the time-varying, periodic coefﬁcients [A(t)] described at
discrete time intervals 	t; hence, the accuracy of the stability is expected to
be higher, especially when the process is highly interrupted at small radial
cutting depths.
Example 6. Low Immersion, Highly Intermittent Milling. Altintas et al., compared
the frequency and discrete time domain stability solutions in [20] by using
a highly interrupted, low-immersion milling operation. When the cutting
process is highly intermittent at high spindle speeds, i.e., low radial immersion
and a small number of teeth, the zero-order solution cannot predict the lobes
as accurately as the multi–frequency and semi-discrete solutions that consider
the time–varying directional factors. The problem will be most evident at
speeds that start from the lobe where the tooth passing and natural frequency

186
MACHINE TOOL VIBRATIONS
of the structure matches. A speciﬁc example is created to illustrate the problem
as shown in Figure 4.23. The cutter has three ﬂutes with a zero helix, cutting
aluminium with a half-immersion down-milling mode. The structural modes
are at 510 [Hz] and 802 [Hz], which corresponds to the highest stability pockets
around 10,200 [rev/min] and 16,040 [rev/min], respectively. The process is
highly intermittent because of a low immersion and small number of teeth.
It can be seen that the zero-order, multifrequency and semidiscretization
methods give almost the same stability lobes until the stability pocket
zone around 10,200 [rev/min], but deviate afterward where the zero-order
solution cannot capture the inﬂuence of time-varying directional factors on
the stability. The process is stable at point A where forced vibrations occur at
the tooth-passing frequency ωT[Hz]. The process chatters around the natural
mode of 802 [Hz] at point B. However, after 16,040 [rev/min], the zero-order
solution cannot predict the added lobes that occur at 26,000 [rev/min] and
35,000 [rev/min]. However, both multifrequency and semidiscrete solutions
predict the added lobes in perfect agreement. The multifrequency solution
used three harmonics of the directional factors, and the semi-discrete solution
used a frequency scale of 40 times the highest natural frequency (i.e., 40 × 802
Hz). The physics of added lobes have been explained by Merdol and Altintas
[76], and are brieﬂy discussed here. The higher harmonics of directional factors
ﬂip the FRF from left to right, bringing it to the zone of modal frequency on the
right. This creates additional stability lobes. This phenomenon is illustrated
at cutting condition C. For example, at a = 30 mm depth of cut and n = 26,000
[rev/min], the process is stable. The tooth-passing frequency is 1300 Hz, which
is considered by the multifrequency solution. Both results ﬂip the frequency
response functions and bring them to the zones of 510 Hz and 802 Hz, creating
a stability pocket at 26,000 [rev/min]. At spindle speed 38,000 [rev/min] (point
D), the process chatters exactly at the half of the tooth-passing frequency.
However, as the depth of the cut increases from 30 mm toward 60 mm, the
added stability lobe appears due to the same phenomenon. Readers must be
cautioned, however, that this phenomenon rarely occurs in practice, because
the machine is usually not operated at tooth-passing frequencies beyond the
natural modes. If operated at a higher mode, the machine would always distort
the added lobes. If there is no higher mode, the machine can operate at very
high speeds without unbalance issues.
4.10
PROBLEMS
1. A three-ﬂuted end mill is used in machining Al-7075 alloy. The tangen-
tial and radial cutting constants are given as Kt = 600 MPa and Kr = 0.07,
respectively. The end mill is represented by two orthogonal modes, which
are evaluated as follows:
ωnx = 593.75 Hz,
ζx = 3.9%,
Kx = 5.59 × 106 [N/m],
ωny = 675 Hz,
ζy = 3.5%,
Ky = 5.71 × 106 [N/m].

4.10 PROBLEMS
187
Figure 4.23: Comparison of the zero-order, multifrequency solution with
r = 3 harmonics, and semidiscretization-based solutions. Cutter: three
ﬂutes with zero helix. Cutting condition: half-immersion down-milling.
Cutting coefﬁcients: Kt = 900 [N/mm2], Kr = 270 [N/mm2]. Structural
dynamic parameters: ωnx = 510 [Hz], ωnx = 802 [Hz]; ζx = 0.04, ζx = 0.05,
kx = 96.2 × 106 [N/m], ky = 47.5 × 106 [N/m].

188
MACHINE TOOL VIBRATIONS
TABLE 4.4. Modal Parameters of an End Mill Attached to a Spindle
Model
X
Y
Parameters
Model 1
Model 2
Model 1
Model 2
ωn(Hz)
479.4
588.7
493.3
637.9
ζ
0.51
0.029
0.068
0.027
σ12 (1/kg)
1.304945.10−5
−2.725243.10−6
1.532536.10−5
7.659394.10−6
jν12 (1/kg)
−2.467218.10−5
−6.02617.10−5
−7.680401.10−5
−1.260438.10−5
σ22 (1/kg)
6.117676.10−6
−2.225907.10−6
9.606246.10−6
4.553267.10−6
jν22 (1/kg)
−1.408889.10−5
−4.572173.10−5
−5.5804.10−5
−7.4116.10−6
σ32 (1/kg)
1.415152.10−6
−2.237442.10−6
3.953402.10−6
1.35349.10−6
jν32 (1/kg)
−1.094268.10−5
−3.452623.10−5
−3.913159.10−5
−6.116283.10−6
Plot the stability lobes of the milling system for full- and half-immersion
cuts.
2. The transfer functions of a 127-mm-long end mill with 100-mm diame-
ter attached to the spindle are measured at three points in both feed (x)
and normal (y) directions (see Fig. 4.24). The accelerometer was attached
to point 2, and the hammer instrumented with an impact force sensor is
applied to all three points. The measured transfer functions are curve ﬁt-
ted with a modal analysis software, and the modal parameters are given in
Table 4.4.
Figure 4.24: A four-ﬂuted long
helical end mill attached to a spin-
dle; the cutter has diameter d =
100 mm and length l = 127 mm.
Y
X
12.7
63.5
114.3
l
1
2
3
a. Identify the real modal matrix in both (x, y)
directions.
b. Plot the mode shapes in the y direction.
c. Evaluate the direct transfer function at
point 1 in directions x and y (i.e., xx =
?, yy =?).
d. An aircraft Al-7075 wing spar is down-milled
with a width of cut b = 10-mm using the
same cutter and material. The cutting con-
stants are given as Kt = 752 MPa and Kr =
0.3. Evaluate the stability lobes by assum-
ing the dynamics only at the tool tip (point
1). The cross-transfer functions are assumed
to be negligible. Plot the stability lobes
and provide a short recommendation for
selecting the most optimal cutting condi-
tions.
3. Consider a slender end mill with the measured
transfer functions at its tip (11) and middle
(12) as shown in Figure 4.25.

4.10 PROBLEMS
189
0
500
1000
1500
2000
2500
3000
3500
4000
4500
5000
-1
-0. 8
-0. 6
-0. 4
-0.2
0
0.2
0.4
0.6
0.8
1
Frequency [Hz]
G11, Real Part [μm/N]
0
500
1000
1500
2000
2500
3000
3500
4000
4500
5000
-2.0
-1.8
-1.6
-1.4
-1.2
-1.0
-0.8
-0.6
-0.4
-0.2
0
Frequency [Hz]
Frequency Response Function: Φ11
H11 Imaginary Part [μm/N]
0.4386 [μm/N]
668.75Hz
-0.3292 [μm/N]
812.5 Hz
0.69347 [μm/N]
3812.5 Hz
-0.6959 [μm/N]
3862.5 Hz
-0.7613 [μm/N]
741Hz
-1.3915 [μm/N]
3838 Hz
0
500
1000
1500
2000
2500
3000 3500
4000
4500
5000
-1
-0.8
-0.6
-0.4
-0.2
0
0.2
0.4
0.6
0.8
1
Frequency [Hz]
0
500
1000
1500 2000 2500
3000
3500
4000
4500
5000
-2.0
-1.8
-1.6
-1.4
-1.2
-1.0
-0.8
-0.6
-0.4
-0.2
0
Frequency [Hz]
G12, Real Part [μm/N]
Frequency Response Function: Φ12
H12, Imaginary Part [μm/N]
0.37512 [μm/N]
-0.29945 [μm/N]
0.19965 [μm/N]
-0.2076 [μm/N]
-0.66950 [μm/N]
741Hz
-0.4060 [μm/N]
3838 Hz
Figure 4.25: FRF measurements of a tool at the tool tip (11) and in the middle of stick out (12).
a. Calculate and plot the mode shapes.
b. Express the direct transfer functions of the beam at the two measurement
points.
c. Assume that the cutting coefﬁcients for the material is Kt = 750 MPa,
Kr = 0.3. The number of teeth on the cutter is 6, and the machining is in
half-immersion up-milling. Calculate the absolute stability limit in the
frequency domain ? (Hints: Use the property of rigidity in x direction,
xx = 0. and avoid calculating unnecessary parts of the stability.)
4. An aluminium Al-7050-T6 block with 1,000 mm width and 30 mm depth
needs to be roughed with a 40 mm diameter cutter on a machine with
maximum 20,000 rev/min spindle speed capacity. The spindle has 20 kW
power and 30 Nm torque capacity above 8,000 rev/min spindle speed. The
tool manufacturer recommends 0.2 mm/tooth/rev chip load for Al-7050. The
structural dynamics of the machine measured at the tool tip is given in
Table 4.5. Identify the number of teeth, spindle speed, radial and axial
depth of cut to achieve maximum material removal rate without violating

190
MACHINE TOOL VIBRATIONS
TABLE 4.5. Modal Parameters of a 40-mm-Diameter Cutter Mounted on a Spindle
ωn [Hz]
k [N/μm]
ζ[%]
2kζ[ N/μm]
Feed direction (xx)
Mode 1
808
11
3.4
0.748
Mode 2
1, 347
27
2.44
1.32
Normal direction (yy)
Mode 1
788
18
3.01
1.08
Mode 2
1, 273
37
2.73
2.02
TABLE 4.6. Modal Parameters of a Two-Fluted 16-mm Diameter Twist Drill
Modes
Frequency -ωn[Hz]
Stiffness -k
Damping (%)
xx
363
16
[ N/μm]
2
yy
338
16
[ N/μm]
2
zz
3,358
105
[ N/μm]
2
θθ
3,358
778
[ Nm/μ rad]
2
zθ
3,358
0.43
[ Nm/μm]
2
θz
3,358
492,400
[N/μ rad]
2
torque, power, and chatter limits of the machine? The recommendations are
used by the numerically controlled programmer.
5. A two-ﬂuted twist drill with 16-mm diameter is used to open holes on Al-
7050 aluminum alloys with 4-mm-diameter predrilled pilot holes. The feed
rate was 0.3 mm/ﬂute with a half-tip angle of χt = 45 deg. The cutting force
coefﬁcients are identiﬁed as ktc = 1,200 MPa, krc = 0.3, kac = 0.23 with a
torque arm of Rt = 6.62 mm. The identiﬁed modal parameters of the drill
bit is given in Table 4.6. Predict the stability of the drill.

CHAPTER FIVE
TECHNOLOGY OF MANUFACTURING
AUTOMATION
5.1
INTRODUCTION
Numerically controlled (NC) machine tools were developed to fulﬁll the contour-
machining requirements of complex aircraft parts and forming dies. The ﬁrst
NC machine tool was developed by Parsons Company and MIT in 1952 [63]. The
ﬁrst-generation NC units used digital electronic circuits and did not contain
any actual central processing unit; therefore, they were called NC or hard-
wired NC machine tools. In the 1970s, computer numerically controlled (CNC)
machine tools were developed with minicomputers used as control units. With
the advances in electronics and computer technology, current CNC systems
use several high-performance microprocessors and programmable logical con-
trollers that work in a parallel and coordinated fashion. Current CNC systems
allow simultaneous servoposition and velocity control of all the axis monitor-
ing of controller and machine tool performance, online part programming with
graphical assistance, in-process cutting process monitoring, and in-process part
gauging for completely unmanned machining operations. Manufacturers offer
most of these features as options.
5.2
COMPUTER NUMERICALLY CONTROLLED UNIT
A typical CNC machine tool has three fundamental units: the mechanical
machine tool unit, power units (motors and power ampliﬁers), and the CNC
unit. Here, a brief introduction of a CNC system from the user’s point of view
is presented.
5.2.1
Organization of a CNC Unit
A CNC unit of a machine tool consists of one or more central processing units
(CPUs), input/output devices, operator interface devices, and programmable
logical controllers.
The CNC unit may contain several CPUs, or microprocessors, depending on
the tasks required by the machine tool. A very basic three-axis CNC milling
machine requires the ﬁne coordinated feeding velocity and position control of
all three axes and the spindle speed simultaneously. Current CNC systems
tend to use multiple CPUs depending on the number of computation tasks.
191

192
TECHNOLOGY OF MANUFACTURING AUTOMATION
Figure 5.1: A multiaxis CNC machining center.
In such a multiprocessor-based
CNC
system,
additional
CPU
modules can be added to the CNC
to extend its intelligence and func-
tions. For example, in a machin-
ing center, such as the one shown
in Figure 5.1, contouring control,
pallet control, coordination of all
eight axes, cutting process mon-
itoring, and graphically assisted
part programming can take place
simultaneously owing to the use
of several computers on its CNC
system.
Each CNC unit has a keyboard
and monitor for the operator, as
well as portable storage units and
high-speed communication ports
for loading NC programs and link-
ing to computer networks. In a
fairly computerized factory ﬂoor, it is common to have a direct communica-
tion link between the master computer of the factory and individual CNC
units. NC programs, production schedules, and recording of production times
and operation cycles are continuously electronically communicated between
the CNC units and the master computer. Such systems are called distributed
numerically controlled (DNC) systems. CNC systems, equipped with a monitor
and a keyboard, allow operators to edit NC programs on site. However, in an
organized production ﬂoor, this is not recommended. The capital and operat-
ing costs of CNC machine tools are rather high, and their use for other than
continuous metal removal may not be justiﬁed. The process planners in the
engineering ofﬁce test NC programs with the aid of graphically animated tool
paths and machine tool motions before they are released to the production ﬂoor.
The methods of NC programming and tool path veriﬁcation are explained in
the following sections.
Miscellaneous logic functions have to be carried out routinely by the CNC
system. For example, activating the cutting lubricant pump, turning the spin-
dle clockwise (CW) or counterclockwise (CCW), touching travel limits of the
guides, and tool-changing functions require only coordinated ON/OFF type
logic signals, which are carried out by the programmable logical control (PLC)
units of the CNC systems.
Each CNC unit is equipped with emergency stop, shutdown, feed rate, and
spindle speed override buttons and a manual jog and machine homing switches
for easy use of the machine tool by the operators. The number of operator
interface units depends very much on the type and the functions of the machine
tool, and on the richness of the CNC software library, as well.

5.2 COMPUTER NUMERICALLY CONTROLLED UNIT
193
5.2.2
CNC Executive
NC programs are written in an internationally recognized standard lan-
guage. Each commercial CNC unit is expected to accept standard NC codes.
The NC codes are transferred to the CNC unit in ASCII format by the use of
input devices. The CNC executive is the main system software that decodes
the NC codes block by block and sends appropriate commands to physical con-
trol, computation, and PLC units of the CNC system. For example, a 10-mm
distance to be traveled at a 200-mm/s feed velocity command can be translated
as follows: The real-time clock is set to generate 10,000 pulses at a rate of
200,000 pulses/s (1 pulse = 0.001 mm position). The position pulses (i.e., the
discrete velocity commands) are directed to the indicated machine tool axis
position control units by converting to their analog voltage equivalent (i.e.,
typically within ±10 V range). The analog voltage is ampliﬁed by the power
unit and fed to the axis drive motors to deliver the desired motion. There are
also digital drives with onboard computers, and they accept the discrete veloc-
ity commands directly. Miscellaneous functions, such as spindle ON and tool
change commands, are translated as Boolean logic signals (+5 V or −5 V) for
PLC units.
The CNC executive software is expected to carry out NC functions in a
logical order. For example, it must turn the spindle before a controlled feeding
or machining action takes place. It must load the tool on the spindle before
positioning the tool for machining, although such commands may be given in
the same NC block.
5.2.3
CNC Machine Tool Axis Conventions
The Electronic Industries Association, in its standard RS-367-A, lists 14
different axis designations or types of motion. Whereas common machine tools
may have up to ﬁve axes, gear-shaping and cutter-grinding machine tools may
have up to fourteen axes of controlled motions.
The machine tools are programmed in a Cartesian coordinate system. The Z
axis is always aligned with the direction of spindle. The primary X motion
is normally parallel to the longest dimension of the primary machine tool
table. The Y axis is normally parallel to the shortest dimension of the pri-
mary machine tool table. Characters A, B, and C designate angular motions
around the X, Y, and Z axes, respectively. Axis conventions of various machine
tool conﬁgurations are shown in Figure 5.2.
5.2.4
NC Part Program Structure
An NC part program represents the machining sequences, or blocks, used
to produce a desired component shape. Each block starts with the letter N
followed by the block sequence number. One block of a typical NC program
would look like
N0040 G91 X25.00 Y10.00 Z −12.55 F150 S1100 T06 M03 M07.

194
TECHNOLOGY OF MANUFACTURING AUTOMATION
Figure 5.2: CNC machine tool axis conventions.
The
NC
program
consists
of
blocks, and each block consists
of several words. A word starts
with a character followed by num-
bers that represent a speciﬁc com-
mand for the machine tool. The
word starting with G represents
the preparatory functions, and the
M words are the miscellaneous
functions in the NC program. The
words starting with F and S repre-
sent the feed and spindle speeds,
respectively. T represents the tool
number. x, y, and z letters fol-
lowed by the scalars represent
the motion lengths in the des-
ignated axes. The particular NC
block given above is interpreted
as follows by the CNC executive
software: Load tool number 6 on
the spindle (T06), rotate the spin-
dle CW at 1,100 rev/min (S1100,
M03) and turn the cutting ﬂuid
on (M07) before the motion starts.
Move the machine tool in 25-
mm, 10-mm, and 12.55-mm incre-
ments (G91) in the x, y, and z
directions with the resultant feeding velocity of 150 mm/min along the
tool path. N040 represents the 40th block sequence of the entire part
program.
The list of commonly used NC words are as follows:
N . . .: Block sequence number.
G . . .: Preparatory function.
X . . .: Primary X motion dimension.
Y . . .: Primary Y motion dimension.
Z . . .: Primary Z motion dimension.
U . . .: Secondary motion parallel to X axis.
V . . .: Secondary motion parallel to Y axis.
W . . .: Secondary motion parallel to Z axis.
A . . .: Angular dimension about X axis.
B . . .: Angular dimension about Y axis.
C . . .: Angular dimension about Z axis.
I . . .: Interpolation parameter or thread lead parallel to X.

5.2 COMPUTER NUMERICALLY CONTROLLED UNIT
195
J . . .: Interpolation parameter or thread lead parallel to Y.
K . . .: Interpolation parameter or thread lead parallel to Z.
F . . .: Feed word.
M . . .: Miscellaneous function.
S . . .: Spindle speed word.
T . . .: Tool number word.
R . . .: Rapid traverse dimension in Z axis.
Digital codes in a word may have to be written in a speciﬁc given format for
some CNC units. However, in general, most control systems allow free format-
ted word ﬁelds. All NC words and their functions are given in the following
text according to ISO 1056 international standards.
Preparatory (G) Functions
r G00: Point-to-point positioning. This provides point-to-point positioning of
the feed drives at a rapid traverse rate of the machine tool along an uncon-
trolled random path. It must be noted that each drive traverses at the rapid
feeding velocity independently; therefore, the programmer must be careful
to avoid collision of the tool with the clamps or the workpiece.
r G01: Linear interpolation. The tool path velocity is kept constant at the
given feed along the indicated straight line. The feed drives’ velocities are
coordinated to keep the tool along the straight line.
r G02, G03: Circular interpolation CW (G02) or CCW (G03). An arc generated
by the coordinated motion of the two axes in which the tool moves CW
CCW, when viewing the plane of motion in the negative direction of the axis
perpendicular to the plane of motion.
r G04: A timed delay of a programmed motion.
r G07: A controlled velocity increase and decrease to programmed rate starting
immediately.
r G17–G19: Used to identify the plane for such functions as circular interpo-
lation, cutter compensation, and other functions as required.
r G21–G23: Precision cornering mode selection for linear and circular inter-
polation.
r G33: Constant lead thread cutting.
r G34, G35: Increasing lead (G34) or decreasing lead (G35) thread cutting.
r G40: Command that will discontinue any active cutter compensation or off-
set.
r G41, G42: Cutter compensation left (G41), cutter compensation right (G42).
Cutter on left (or right) side of work surface looking from cutter in the
direction of relative cutter motion with displacement normal to the cutter
path to adjust for the difference between actual and programmed cutter
radius or diameters.

196
TECHNOLOGY OF MANUFACTURING AUTOMATION
r G70: Mode for programming in imperial (inch) units.
r G71: Mode for programming in metric (mm) units.
r G80: Cancel the active ﬁxed cycle.
r G81–G89: A preset series of operations that direct machine axis movement
and/or cause spindle operation to complete ﬁxed machining cycles such as
boring, drilling, tapping, or combinations thereof. Fixed cycles are also called
canned cycles by machine tool manufacturers.
r G90: Coordinate inputs are given in absolute coordinates from a ﬁxed Carte-
sian coordinate center.
r G91: Coordinate inputs are given incrementally from a previous tool location.
r G94: The feeds are given in inches (or millimeters)/minute.
r G95: The feed rate is given in inches (or millimeters)/revolution.
Miscellaneous Functions
r M00: Program stop. Terminates further program execution after the com-
pletion of other commands in the block.
r M01: Optional stop if it is enabled by the operator. The program continues
after the execution of a continue command by the operator.
r M02: End of program indicating completion of machining cycle. Stops spin-
dle, coolant, and feed after the completion of all commands in the last NC
block.
r M03, M04: Start spindle CW (M03) or CCW (M04).
r M05: Spindle off.
r M06: Tool change.
r M07, M08: Cutting ﬂuid ON (M07), OFF (M08).
r M19: Oriented spindle stop at a predetermined angular position.
r M30: End of program. It stops feed, spindle, and cutting ﬂuid and rewinds
the NC program to the beginning.
r M49: Prevents operator from overriding spindle and feed speeds.
Note that any G or M codes used in the NC program are active until their
opposites are used, which overrides the previous ones.
5.2.5
Main Preparatory Functions
G00 – Point-to-Point Positioning
The table (or cutter) is positioned from one point to another without having
to coordinate the velocities of any of the moving axes. This mode is usually used
at a rapid traverse rate for drilling and tapping and for rapid positioning of the
cutter without cutting.

5.2 COMPUTER NUMERICALLY CONTROLLED UNIT
197
0
y
P1 (10,12)
P2 (60,37)
P1
P2
cutter
Linear interpolation between points P1 and P2.
(NC Code :
N010  G01  X60.0  Y37.0
in G90 mode,
N010  G01  X50.0  Y25.0
in G91 mode).
Figure 5.3: Linear interpolation.
Continuous Path Contouring
The table’s position is continuously controlled to keep the cutter on a desired
trajectory proﬁle (i.e., slanted line, arc, or spline segment) during machin-
ing. This involves continuous manipulation of velocities of each axis involved
during contour machining. Real-time digital interpolation methods, which are
explained in detail in the next chapter, are used for continuous path machin-
ing. The two fundamental interpolation commands, which are provided on
every commercial CNC unit, are explained below.
G01 – Linear Interpolation Code. The velocities of two axes are controlled to keep
the tool on a straight path in a plane of motion. Figure 5.3 shows a line segment
to be machined by a milling cutter. The coordinates of the end mill center for
the beginning point P1(10 mm, 12 mm) and end point P2(60 mm, 37 mm) are
given in the XY plane. To keep the end mill following the straight line (P1P2)
at a given vector feed velocity, the linear interpolation command G01 must
be used. The corresponding NC programs in absolute (G90) and incremental
(G91) programming modes, respectively, are as follows:
N0010 G90 G01 X60.0Y37.0 F300
or
N0010 G91 G01 X50.0Y25.0 F300.

198
TECHNOLOGY OF MANUFACTURING AUTOMATION
0
y
x
P1 (x1,y1)
P2 (x2,y2)
C (xc,yc)
C (xc,yc)
P1
P2
Circular interpolation
0
y
x
Circular interpolation quadrants
C
I
II
IV
III
D
A
B
rc
Figure 5.4: Circular interpolation.
G02, G03 – Circular Interpolation
Codes. The velocities of two axes
on a plane of motion are varied to
keep the tool following the given
arc at the speciﬁed feed veloc-
ity. Two types of circular inter-
polation commands are used in
CNC systems. Some CNC sys-
tems require the coordinates of
the arc center and arc’s end point,
whereas others need the radius
of the arc and its end point. Fig-
ure 5.4 shows a sample arc seg-
ment to be contoured by an end
mill. CNC assumes that the tool is
located at the beginning point of
the arc. Looking down the plane,
or with respect to the previous
tool motion, the arc contouring
can be either CW (G02) or CCW
(G03). In Figure 5.4, the tool is
required to move in a CCW direc-
tion (G03) at a constant contour
feed velocity of f. If the CNC
requires the radius (rc) and the
end point of the arc (P2), the fol-
lowing NC program is used for the
contour milling in absolute coor-
dinates:
N010 G90 G03 X x2 Y y2 R rc F f.
If a CNC requires the coordinates of the center point of the arc and the arc’s
end point, the NC program is
N010 G90 G03 X x2 Y y2 I ic J jc F f,
where the values of ic and jc are used to deﬁne the center of the arc with respect
to the starting point. The following algorithm can be used to calculate the arc
center offset:
ic = xc −x1,
jc = yc −y1.
The interpolation parameter K is used when one of the axes is Z. Some CNC
systems allow circular arcs to be programmed only in one quadrant at a time.
Each arc must be programmed in a separate NC block. For example, the circular

5.2 COMPUTER NUMERICALLY CONTROLLED UNIT
199
arc shown in Figure 5.4 must be programmed in two NC blocks as follows:
N010 G90 G03 X xD Y yD I (xC −xA) J (yC −yA) F200
N020 G03 X xB Y yB I (xC −xD) J (yC −yD)
Note that new-generation CNC systems allow programming of more than one
arc quadrant in one block.
G81 to G89 – Fixed Cycles
The ﬁxed cycle (or canned cycle) commands set up the CNC unit for different
types of automatic operations. Use of ﬁxed cycles permits the reading of X–Y
location, a rapid Z plane plunge (programmed with R word), a ﬁnal Z feed point
and a feed rate into the control. The values of the words are stored until they
are replaced with new numbers or canceled by G80. By the sole reading of a
new X and Y location, the stored sequence of events is performed at the new
location. The following NC codes illustrate the use of a canned drill cycle:
N050
G81
X125.0
Y237.5
Z-112.5
R2.5
F300
N060
X325.0
N070
Y137.5
N080
G80
In block N050, the cutter is positioned at rapid traverse to 125.0 mm in X
and 237.5 mm in Y. The spindle would then speed to 2.5 mm in Z and feed at
300 mm/min to a Z depth of −112.5 mm. The ﬁnal motion for the block would
be rapid retraction of the spindle to the R plane of 2.5 mm in Z. The subsequent
blocks N060 and N070 would drill an additional two holes at the indicated new
locations. The G80 in block N080 cancels the ﬁxed drill cycle G81. It must be
noted that some machine tool control units may use different formats and codes
from the listed standard codes.
An NC part program listing for the sample workpiece proﬁle shown in Fig-
ure 5.5 is given as follows:
N01G90
Absolute coordinates
N02G71
Metric units (mm)
N03G92X-12.5 Y-12.5 Z50.0
Cutter starts from here
with respect to the part zero
N04G00Z2.5 M03 S800
Spindle on CW, move rapidly
to 2.5 mm above the part
N05G01Z-7.5 F25.0 M08
Coolant on, plunge
with feed in Z (P1)
N06 X162.5 F125
Move in x with 125 mm/min
feed to P2
N07 Y0.0
Move to P3 at the same
feed (125 mm/min)
N08G02X220 Y57.5 I57.5 J0
CW circular interpolation (P4)

200
TECHNOLOGY OF MANUFACTURING AUTOMATION
70
40
 40
40
80
150
70
180
110
P0
2
P
1
P
P3
P4
P5
P6
P7
P8
P9
P10
P11
P12
Points
X
Y
Circle center
P0
0
0
P1
-12.5
-12.5
P2
-162.5
-12.5
P3
-162.5
0.0
P4
220
57.5
c(220,0)
P5
232.5
57.5
P6
232.5
70
P7
180
122.5
c(180,70)
P8
107.5
122.5
P9
107.5
110
P10
80
82.5
c(80,110)
P11
40
82.5
P12
-12.5
30
c(40,30)
P1
-12.5
-12.5
Figure 5.5: Sample workpiece for NC programming.
N09G01X232.5
Move one cutter radius in x
N10
Y70.0
Move in y (P6)
N11G03X180 Y122.5 I-52.5 J0
CCW relative to the tool
motion in block N10 (P7)
N12G01X107.5
Move left (P8)
N13
Y110
Move to (P9)
N14G02X80.0 Y82.5 I-27.5 J0
CW circular interpolation (P10)
N15G01X40.0
Move left (P11)
N16G03X-12.5 Y30.0 I0 J-52.5
CCW circular interpolation (P12)
N17G01Y-12.5
Return to starting point (P1)
N18
Z3.8
Move up to z = 3.8 mm position
N19G00Z50 M09 M05
Move to Z = 50 rapidly,
coolant and spindle are off
N20M30
Program ends, move the cutter
to starting point.

5.3 COMPUTER-ASSISTED NC PART PROGRAMMING
201
5.3
COMPUTER-ASSISTED NC PART PROGRAMMING
It is rather tedious and unproductive to generate NC part programs manu-
ally, as demonstrated in the previous section. In computer-assisted NC part
programming, the computer automatically generates the codes. The philoso-
phy behind the computer-assisted programming is rather straightforward to
describe. If a part geometry can be parametrically deﬁned in a computer code,
the tool path can also be generated for given dimensions of a tool according to
the desired sequences of machining. The programmer must, of course, select
tools, feeds, and speeds and generate the tool paths according to the process-
planning strategy for the machining operation.
Computer-assisted part programming can be done with and without the aid
of computer graphics. Both methods require mathematical representation of
geometric entities in a computer program. Before introducing the computer-
aided NC programming techniques used in industry, the fundamental princi-
ples of analytical geometry used in computer-aided design and computer-aided
manufacturing (CAD/CAM) systems are brieﬂy presented in the next section.
5.3.1
Basics of Analytical Geometry
The scientiﬁc principles or even the technology of CAD/CAM are too
widespread to cover in this text. However, a basic introduction to geometric
entities and their manipulation in both CAD and CNC machines is essential
for leading readers to more advanced topics related to CAD/CAM. As brieﬂy pre-
sented in NC programming with auto automatically programmed tools (APT)
and advanced computer graphic tools, the geometry of the workpiece is rep-
resented by points, lines, circles, splines, surfaces, and solids. The geometric
entities are manipulated by translation, rotation, intersection, and trimming
operations. The objects are either represented by their wire frame or solid
models. Using shading and hidden line-surface removal techniques, the user
can visualize the designed part on the graphics terminal. Because the detailed
presentation of CAD techniques and computer graphics are well covered in
dedicated texts [43, 118], instead, we will brieﬂy introduce the mathematical
formulation of the very basic geometric entities used in both CAD and real-time
CNC interpolation algorithms.
Vectors and Lines
A vector in a Cartesian coordinate system is expressed in Figure 5.6 as
⃗r = rx⃗i + ry⃗j + ry⃗k,
(5.1)
where rx = r cos α, ry = r cos β, and rz = r cos γ are the directional factors. The
magnitude of the vector is | ⃗r | = (r2
x + r2
y + r2
y)1/2. The unit vector, which has
a magnitude of unity, is ⃗r/ | ⃗r |= cos α⃗i + cos β⃗j + cos γ⃗k. A vector between two
points (P1(x1, y1, z1), P2(x2, y2, z2)) can be constructed as
−−→
P1P2 = (x2 −x1)⃗i + (y2 −y1)⃗j + (z2 −z1)⃗k.
(5.2)

202
TECHNOLOGY OF MANUFACTURING AUTOMATION
r
P
r  i
x
r  i
z
r  i
y
x
y
z
α
γ
β
Ο
P
x
y
z
Ο
P1
P0
P2
m
θ
Figure 5.6: Vectors and lines.
A unit vector along −−→
P1P2 is
⃗m =
−−→
P1P2
| −−→
P1P2 |
= x2 −x1
L
⃗i + y2 −y1
L
⃗j + z2 −z1
L
⃗k,
(5.3)
where L = | −−→
P1P2 |= [(x2 −x1)2 + (y2 −y1)2 + (z2 −z1)2]1/2 is the length of the
line connecting the two points.
The products of vectors provide angles, projections, and distances between
various geometric entities. Consider two vectors ⃗A = −−→
P1P0 = Ax⃗i + Ay⃗j + Ay⃗k
and ⃗B = −−→
P1P2 = Bx⃗i + By⃗j + By⃗k. The dot product of the two vectors is a scalar
as follows:
⃗A · ⃗B = AxBx + AyBy + AzBz =| ⃗A || ⃗B | cos θ,
0 ≤θ ≤π.
(5.4)
Note that ⃗i ·⃗i = ⃗j · ⃗j = ⃗k · ⃗k = 1 and ⃗i · ⃗j = ⃗j · ⃗k = ⃗k ·⃗i = 0. Hence, the angle
between the two vectors can be evaluated by θ = arccos ⃗[A · ⃗B ]/[| ⃗A || ⃗B |].
The vector product of (⃗A, ⃗B) is a vector as follows:
⃗A × ⃗B = (AyBz −AzBy)⃗i + (AzyBx −AxBz)⃗j + (AxBy −AyBx)⃗k
= (| ⃗A || ⃗B | sin θ)⃗n,
0 ≤θ ≤π,
(5.5)

5.3 COMPUTER-ASSISTED NC PART PROGRAMMING
203
where ⃗n is a unit vector perpendicular to the plane formed by vectors ⃗A and ⃗B
and θ is the angle between the two vectors. The distance between a point and
a line can be evaluated by using vector algebra. The unit vector of line P1P2 is
⃗m = −−→
P1P2/ | −−→
P1P2 |. The distance between point P0 and line P1P2 is (Fig. 5.6)
| −−→
P0P | = | −−→
P1P0 × ⃗m | = | −−→
P1P0 | · | ⃗m | sin θ.
Translation and Rotation of Objects
Translating an object from one location to another requires that every point
and entity describing it experience the same amount of displacement. If the
displacement vector is ⃗d, and the object to be translated is ⃗P, then the translated
position of the object becomes
vecP∗= ⃗P + ⃗d.
(5.6)
The objects can be scaled by simply multiplying their coordinates as follows:
⃗P∗= [S]⃗P,
(5.7)
where the scale matrix [S] is
[S] =
⎡
⎣
sx
0
0
0
sy
0
0
0
sz
⎤
⎦.
An object can be rotated about the z axis, and the relevant equation is
⃗P∗= [Rz]⃗P,
(5.8)
where the rotation matrix [Rz] is
[Rz] =
⎡
⎣
cos θ
−sin θ
0
sin θ
cos θ
0
0
0
1
⎤
⎦,
where θ is the CCW rotation angle. Similarly, the rotation matrices for the x
and y axes are given by
[Rx] =
⎡
⎣
1
0
0
0
cos θ
−sin θ
0
sin θ
cos θ
⎤
⎦,
[Rz] =
⎡
⎣
cos θ
0
sin θ
0
1
0
−sin θ
0
cos θ
⎤
⎦.
Rotation with respect to an arbitrary axis can be derived using vector alge-
bra [43].
Circles
A point P(x, y, z) on a circle (Fig. 5.7) can be deﬁned by the radius and
angular distance,
P(x, y, z) =
⎧
⎨
⎩
x
y
z
⎫
⎬
⎭=
⎧
⎨
⎩
xc + R cos θ
yc + R sin θ
zc
⎫
⎬
⎭,
0 ≤θ ≤2π.
(5.9)

204
TECHNOLOGY OF MANUFACTURING AUTOMATION
Figure 5.7: Mathematical representation of circles.
The following equation can be used to
identify the center (xc, yc) and radius r
of a circle passing through three points
as follows:
r2 = (x −xc)2 + (y −yc)2.
(5.10)
Alternatively, the three points can be
used to evaluate the coefﬁcients (c1, c2, c3)
of a nonparametric equation deﬁning the
circle in the (x, y) plane as follows:
y = c1 + c2x + c3x2.
Cubic Splines
Parts such as dies, molds, and gas tur-
bine blades have sculptured surfaces that
are designed by ﬁtting smooth curves to a
set of design points. Although various spline-ﬁtting techniques are available in
CAD systems, they can all be derived by understanding the algorithm for a cubic
spline ﬁt. A series of sequential design points P0, P1, . . . , Pi−1, Pi, Pi+1, . . . , Pn are
shown in Figure 5.8. The points must be connected by series of cubic spline
segments. Consider an arbitrary point Pi(u) on the cubic spline segment Si as
follows:
Pi(u) = Aiu3 + Biu2 + Ciu + Di,
0 ≤u ≤1.
(5.11)
Note that the end points of the spline segment are Pi(u = 0) ≡Pi−1, Pi(u =
1) ≡Pi. By increasing the parameter u from zero toward unity with small
increments, the spline segment can be generated from a series of points pro-
vided that the spline parameters Ai, Bi,Ci, and Di are known. The derivative
of Eq. (5.11) gives the tangent vectors
P′
i(u) = 3Aiu2 + 2Biu + Ci.
(5.12)
With the use of the boundary conditions at both ends of the spline segment,
the parameters Ai, Bi,Ci, and Di are evaluated. The resulting expressions for
the cubic spline and its tangent and curvature expressions are as follows:
Pi(u) = [2(Pi−1 −Pi) + P′
i−1 + P′
i]u3
+ [3(Pi −Pi−1) −2P′
i−1 −P′
i]u2
+ P′
i−1u + Pi−1,
P′
i(u) = [6(Pi−1 −Pi) + 3(P′
i−1 + P′
i)]u2
+ [6(Pi −Pi−1) −4P′
i−1 −2P′
i]u + P′
i−1,
P′′
i (u) = [12(Pi−1 −Pi) + 6(P′
i−1 + P′
i)]u
+ [6(Pi −Pi−1) −4P′
i−1 −2P′
i].
(5.13)

5.3 COMPUTER-ASSISTED NC PART PROGRAMMING
205
x
y
z
Ο
P0
P1
P’0
P’n
Pn
Pn-1
Pi
Pi+1
Pi-1
S1
S2
Si
Si+1
Figure 5.8: Cubic spline curve ﬁt.
Similar expressions can be writ-
ten for the spline segment Si+1
bounded by points Pi and Pi+1.
Like an elastic beam, curvature
continuity
is
imposed
at
the
knots where the spline segments
Si
and Si+1
meet [i.e., P′′
i (u =
1) = P′′
i+1(u = 0)].
The
resulting
expression provides a relationship
between the unknown tangent vec-
tors and known points as follows:
P′
i−1 + 4P′
i + P′
i+1 = 3Pi+1 −3Pi−1.
(5.14)
To solve all tangent vectors at
every knot, the tangents at the two end points (P0, Pn) must be provided. One
can either impose a tangent depending on the design criteria or adjacent geo-
metric entities, or one can approximate them. For example, one approach is to
use the lines connecting the ﬁrst and last knots with their nearest neighbors,
and use their slope as follows:
P′
0 =
−−→
P0P1
| −−→
P0P1 |
,
P′
n =
−−−−→
Pn−1Pn
| −−−−→
PnPn−1 |
.
(5.15)
Alternatively, the two ends can be relaxed like a beam with moment-free ends
(i.e., P′′
0 = P′′
n = 0), which leads to two more required expressions as follows:
2P′
0 + P′
1
= 3P1 −3P0,
2P′
n + P′
n−1 = 3Pn −3Pn−1.
(5.16)
Equations (5.14) and (5.16) can be combined in the following matrix:
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
2
1
0
0
.
.
.
0
0
0
1
4
1
0
.
.
.
0
0
0
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
0
0
0
.
.
.
1
4
1
0
0
0
0
.
.
.
0
1
4
1
0
0
0
.
.
.
0
0
1
2
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
P′
0
P′
1
P′
2
.
.
.
P′
n−2
P′
n−1
P′
n
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
= 3
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
P1 −P0
P2 −P0
P3 −P1
.
.
.
Pn−2 −Pn−4
Pn−1 −Pn−3
Pn −Pn−1
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
.
(5.17)
Hence, the tangents at all knots can be evaluated by solving matrix Eq. (5.17).
Substituting the tangents of each spline segment into the cubic Eq. (5.13) yields

206
TECHNOLOGY OF MANUFACTURING AUTOMATION
to a spline ﬁt equation:
Pi(u) = [ Ai Bi Ci Di ][ u3 u2 u 1]T
= [−2u3 + 3u2]Pi+1 + [2u3 −3u2 + 1]Pi
+ (u3 −u2)P′
i+1 + (u3 −2u2 + u)P′
i,
0 ≤u ≤1.
(5.18)
There are better curve-ﬁtting techniques for smoother design and NC tool
path generation. Some of the best-known methods include Bezier curves [118]
and bicubic splines. The splines are used to model the geometry and NC tool
paths of parts with sculptured surfaces. Higher-order splines are also used to
generate the splined tool paths in real-time CNC applications.
5.3.2
APT Part Programming Language
Owing to difﬁculties in manual NC programming, a computer language APT
was developed at Massachusetts Institute of Technology (1956) to automate
part programming. Like any other high-level language, APT allows arithmetic
operations, subroutines, macros, looping logic, and so on. However, the main
difference is that it allows parametric representations of geometric entities
ranging from a single point in space to very complex, three-dimensional sculp-
tured surfaces. The tool path is generated by commanding the given tool geome-
try to travel in a selected tool path on the deﬁned part geometry. The computed
tool path coordinates and cutting conditions are then stored in a computer ﬁle
with a general standard format, which is also automatically converted to the
speciﬁc manual code of the selected CNC machine tool.
APT was the most common and standard code used in the industry. APT has
been replaced by graphics-based, user-friendly interactive CAD/CAM software
systems in industry. However, because CAD/CAM systems use APT standards
in processing NC tool path data, it is useful to understand at least the very
basic structure of the APT programming system.
Geometric Statements
APT is no longer used to deﬁne the part geometry since the adoption of inte-
grated CAD/CAM systems in industry. Only a brief logic behind the geometric
statements is explained here. The part geometry is deﬁned by using points,
lines, arcs, space curves, and surfaces. Each geometric entity is mathemati-
cally represented and stored as variables by APT. The user must deﬁne each
geometric entity according to the format required by APT. The formats and the
use of geometric statements can be found in the APT dictionary generated by
Computer Aided Manufacturing-International (CAM-I) [36] Each geometry is
deﬁned according to the following format:
(Geometry’s symbol) = GEOMETRY/(dimensions and the parameters of
the geometry).

5.3 COMPUTER-ASSISTED NC PART PROGRAMMING
207
Some of the fundamental geometric statements are illustrated in the fol-
lowing. Note that the lowercase letters represent labels or dimensions to be
entered by the programmer; capital letters and operator symbols (, / = $) must
be used as they are shown.
r Pname = POINT/ x, y, z
Here, x, y, and z are the coordinates of the point. Zero value is assumed
when the z dimension is omitted.
Example: P1 = POINT/2.0,3.2,2.0
r Lx = LINE/P1, P2
Line between points P1 and P2.
r Circlex = CIRCLE/CENTER, P1, RADIUS, 40
Circle with a center at point P1 and 40-mm radius.
Planes are generally used to deﬁne the planes of motion for the tool move-
ments. Its surface normal vector and its amplitude deﬁne a plane as follows:
Planex = PLANE/a,b,c,d
where a, b, and c are the cosines of the angles between the surface normal
vector and the plane, and d is the length of the vector.
Example: PL1=PLANE/0, 0, 1, 7.5
Plane PL1 is parallel to the xy plane, and the height is 7.5 along the z axis.
Tool Motion Statements
There are two types of tool motion commands in APT: point-to-point (PTP)
and continuous tool motion commands.
PTP Tool Motion Commands. If the tool is required to move to a speciﬁed point
from its current position, PTP commands are used. There are two types of PTP
motion commands,
GOTO/point, feed rate
and
GODLTA/point, feed rate
Both commands take the tool to the point indicated to the right of the slash
with an optional feed rate provided. The point coordinates are assumed to be
given in absolute coordinates (G90) by a GOTO command and incremental
(G91) coordinates by a GODLTA command. If only one coordinate is given in
the GODLTA/ command, incremental z axis motion is assumed.
Example: GOTO/10,2,1
The tool is commanded to move to the point that has absolute coordinates of
x = 10 mm, y = 2 mm, and z = 1 mm.
Example: GODLTA/10,2,1

208
TECHNOLOGY OF MANUFACTURING AUTOMATION
DRIVE SURFACE
CHECK SURFACE
PART SURFACE
Tool Motion 1
Tool Motion 3
Tool Motion 2
SURFD
SURFC
SURFB
SURFA
SURFA is the drive surface for tool motion 1.
SURFB is the check surface for tool motion 1.
SURFB is the drive surface for tool motion 2.
SURFC is the check surface for tool motion 2.
SURFC is the drive surface for tool motion 3.
SURFD is the part surface for all three tool motions.
Figure 5.9: Drive, part, and check surfaces in APT to guide the tool motion.
The tool is commanded to move incrementally 10 mm, 2 mm, and 1 mm in
the x, y, and z axis, respectively.
Example: GODLTA/-10
The tool is commanded to move 10 mm in the negative z axis direction.
Continuous Tool Motion Commands. The tool is commanded to move along a
controlled path deﬁned by the part, drive, and check surfaces.
If we consider a three-axis machining process with a vertical CNC milling
machine tool, the tool’s end stays on the part surface, the tool’s axis stays par-
allel to the drive surface, and the tool’s motion is bounded by the check surface
(see Fig. 5.9). If the part surface is a three-dimensional sculptured surface
(i.e., an aircraft wing or a turbine blade surface), a three-axis machine tool is
required. If two of the surfaces are sculptured then ﬁve or more simultaneously
controlled axes are required on the CNC machining center.
Before the tool can be commanded to move along a given proﬁle, it must be
brought from a speciﬁc point. Usually this point corresponds to tool-change
location coordinates with respect to the part program zero. This is achieved by a
FROM/point
command, followed by
GO/{TO,ON,PAST}, drive surface, {TO, ON, PAST}, part surface,
{TO, ON, PAST}, check surface
where one of the three modiﬁers (TO, ON, PAST) is selected to deﬁne the posi-
tion of the tool with respect to the surface. In direction vector (INDIRV/vector)
or in direction point (INDIRP/point) commands may be used ahead of

5.3 COMPUTER-ASSISTED NC PART PROGRAMMING
209
GO/... statements to direct the tool motion in a desired direction. These three
statements are often called startup commands in APT vocabulary. The startup
commands are typically followed by continuous motion statements:
⎧
⎪⎪⎨
⎪⎪⎩
GOFWD
GOBACK
GOLFT
GORGT
⎫
⎪⎪⎬
⎪⎪⎭
/drive surface,
⎧
⎪⎪⎨
⎪⎪⎩
TO
ON
PAST
TANTO
⎫
⎪⎪⎬
⎪⎪⎭
, check surface
where GOFWD, GOBACK, GOLFT, and GORGT motion statements corre-
spond to continuous tool motion movement in the forward, backward, left, or
right direction relative to the preceding motion (see Figs. 5.10 and 5.11).
Example: A typical motion command sequence might be
GO
/ TO, L1, ON, PL1, TO, C1
GOFWD
/ C1, TO, L1
GOLFT
/ L1, ON, L1
GOTO
/P1
Cutter Location File and Postprocessing
APT processor or CAD/CAM systems produce two cutter location (CL) ﬁles .
The ﬁrst is in readable ASCII, and the second is in binary format. The ASCII
printout can be obtained by inserting a CLPRNT/ON command before the
motion statements. The center coordinates of the tool are printed for the pro-
grammer to debug the APT program. The binary ﬁle has a standard format.
Each record in the ﬁle may have two or more ﬁelds depending on the type of
command. The length of each ﬁeld is again several bytes long and is determined
by the command’s function. For example,
Program
Class
Code
Field
PARTNO/A0010
2000
1045
A0010
TOOL/14
2000
1025
10
COOLNT/ON
2000
1030
71
FEDRAT/30.0
2000
1009
30
FROM/0,0, 3
5000
3
0.000 0.000 0.000
GODLTA/0.3
5000
4
0.300
GOTO/5.0, 3.7
5000
5
5.000 3.700
FINI
2000
1
Class word deﬁnes whether the statement produces a miscellaneous function
(M function), a PTP motion, or a continuous tool motion. The second word gives
the speciﬁc code for the statement. The third ﬁeld, which may be several words
long, gives the coordinates of the motion or logic value for the miscellaneous
functions. For example, PARTNO/ , TOOL/ , and COOLNT/ FINI are called
postprocessor commands, and all are classiﬁed under 2000. COOLNT has a

210
TECHNOLOGY OF MANUFACTURING AUTOMATION
(Cutter Axis)
UP
DOWN
BACK
FWD
(previous direction
of motion)
RGT
LFT
CUTTER
Figure 5.10: Feed motion directions in APT.
DS2
DS1
PS1
PS2
GO/
GODOWN
(GORGT)
GOFWD
GOLFT
X
Z
Y
Figure 5.11: Sample motions for different GO motion commands in APT.

5.4 TRAJECTORY GENERATION FOR COMPUTER-CONTROLLED MACHINES
211
code value of 1030 and 71 means ON. GOTO/ and GODLTA/ commands belong
to the point motion class and are grouped under 5000. GOTO has a code of 5,
followed by three double-precision ﬂoating point long ﬁeld words that give the
x, y, and z coordinates of the target point.
The CL ﬁle has an internationally standard format. Each CNC machine
tool builder provides a postprocessor for its speciﬁc CNC machine tool. After
generating the CL ﬁle, the programmer postprocesses the CL ﬁle and obtains
the ﬁnal manual equivalent NC code automatically. Note that if any dimensions
change in the workpiece, the geometric statements can be updated, processed,
and postprocessed without having to program the part again.
NC Part Programming with CAD Systems
CAD systems have already replaced APT. Essentially, most CAD systems
have started with the APT processor subroutines but have added interactive
graphical displays. Each geometric statement can be made interactively using
a mouse. The logic of geometry generation is similar to that of the APT com-
mands. CAD has the advantage of allowing visual inspection of the part geom-
etry on the computer workstation. Most current CAD systems allow three-
dimensional construction of the part geometry while simultaneously providing
top, side, front, and isometric views. They incorporate solid modeling tech-
nology that helps the designer to visualize the actual shape of the part more
easily.
Once the geometry is designed on the CAD system, the process planner can
pull the part to a computer workstation for a tool path generation. The tool
paths are also interactively generated on the graphics station. The process
planner deﬁnes the tool, feed rate, spindle speed, coolant, and program zero
in almost identical fashion to APT. The tool path can be seen on the screen
for visual interference checking. Once the tool path is accepted, a CL ﬁle is
generated by the CAD system. The CL ﬁle has an APT standard format, and
thus postprocessors developed for APT can be used to generate the ﬁnal manual
equivalent NC code on CAD/CAM systems. Figure 5.12 shows some of the
sample CAD-generated tool paths and the machined sculptured part using the
IDEASTM CAD/CAM system.
5.4
TRAJECTORY GENERATION FOR
COMPUTER-CONTROLLED MACHINES
The CNC motion control computer receives NC blocks that contain the mode
of interpolation (i.e., linear, G01; circular, G02 or G03; or spline, G05), the
coordinates of end point (Pe(xe, ye)), arc radius (R =

I2c + J2c ), and vector feed
( f). The coordinates and derivatives of a series of points along a spline trajectory
are provided for quintic spline interpolation.
The acceleration (A), deceleration (D), and jerk (J) values are either set to
default values within the CNC or given by the NC programmer within the NC
part program. The units are converted into counts in the CNC system. The tool

212
TECHNOLOGY OF MANUFACTURING AUTOMATION
Figure 5.12: Sample tool paths and three-axis ball end milling of a sculptured surface.
path segment (i.e., line, arc, or spline in an NC block) is broken into N number
of small segments in axis directions at interpolation time intervals of Ti.
The minimum interpolation time has to be equal to or an integer multiple
of the axis position control loop closure time (T). The feed f is provided by the
NC part program, and the minimum interpolation period Tmin is set within the
CNC control software. The interpolation step size is calculated as
	u = fTmin
(5.19)
for set values of f and Tmin. Either step size 	u or interpolation period Ti is
kept constant during velocity command generation. The step size 	u can be
equal to or greater than the position feedback resolution, and the interpola-
tion period must be equal to or greater than the discrete servocontrol interval
(Ti ≥T).
5.4.1
Interpolation with Constant Displacement
First, let us consider a design approach where the step size 	u is set until
Tmin or f is changed. When the feed ( f) is changed during machining by a
feed-override switch or a sensor-based machining process control module, 	u
is kept constant, but the interpolation time Ti

5.4 TRAJECTORY GENERATION FOR COMPUTER-CONTROLLED MACHINES
213
is updated as
Ti = 	u
f .
(5.20)
The selection of the minimum interpolation time Tmin is limited by the com-
putation load and speed of the CNC motion control computer where the algo-
rithm is executed. By using a varying interpolation period, many axes are syn-
chronized from a one-dimensional calculation. The addition of other axes has no
effect on the velocity proﬁling; therefore, the position and velocity interpolation
are decoupled. Assuming that the total displacement along an arbitrary path
is L, the interpolator task is executed N times at interpolation time intervals
of Ti as follows:
N = L
	u.
(5.21)
N is always rounded to the next higher even integer for computational efﬁ-
ciency. The feed is reduced accordingly for correction. The total number of
iterations (N) is divided into a number of stages depending on the type of
velocity proﬁle used for trajectory generation. A simple to implement trape-
zoidal velocity proﬁle and a complex but accurate parabolic velocity proﬁle for
high-speed drives are presented here.
Trapezoidal Velocity Proﬁle
The acceleration and deceleration of the axis is controlled by imposing a
trapezoidal velocity proﬁle shown in Figure 5.13 on the position command gen-
eration algorithm. The trapezoidal velocity proﬁle is simple to implement, com-
putationally advantageous, and suitable for most low-speed, low-cost machines.
The total number of interpolation steps (N) is divided into an acceleration (N1),
constant velocity (N2), and deceleration (N3) zones according to the trapezoidal
velocity proﬁle shown in Figure 5.13; that is, N = N1 + N2 + N3. The counters
for acceleration and deceleration distances (N1, N3) are calculated from the
target feed f [count/s], acceleration A [count/s2], deceleration D [count/s2], and
displacement step 	u using the trapezoidal velocity proﬁle. If the initial feed
is zero, the total tool path length (l1) traveled during the acceleration period
(0 < t < t1) can be found from Figure 5.13a as
l1 =
 t1
0
Atdt = At2
1
2 .
(5.22)
Because t1 = f/A for a constant acceleration, the number of interpolation inter-
vals during acceleration is
N1 = l1
	u =
f 2
2A	u.
(5.23)
Similarly, the deceleration counter is found as
N3 = l3
	u =
f 2
2D	u.
(5.24)

214
TECHNOLOGY OF MANUFACTURING AUTOMATION
t 1
t 2
T t
t
0
(a) Velocity profile with zero initial feed. 
f
t
(b) Velocity changes during machining 
f 0
f l
f
t 3
t 0
t 1
t 2
N1
N2
N3
[Counts/s]
[Counts/s]
Figure 5.13: Trapezoidal velocity proﬁle of feed.
The constant velocity zone counter (N2)
is the remaining period as follows:
N2 = N −(N1 + N2)
(5.25)
In some NC machining applications,
it is not desirable to bring the machine
to a full stop before switching to the
next tool path segment. Alternatively,
the operator or sensor-based adaptive
process control algorithms may manip-
ulate the feed within an NC block. Let
the CNC system accelerate from feed f0
to the new feed command f. The accel-
eration counter can be found as (Fig-
ure 5.13b) follows:
l1 =
 t1
t0
[ f0 + A(t −t0)]dt
=
 τa
0
[ f0 + Aτ]dτ = f0τa + Aτ 2
a
2 ,
(5.26)
where τa = t1 −t0 = ( f −f0)/A and
l1 = f 2 −f 2
0
2A
,
(5.27)
which leads to
N1 = l1
	u = f 2 −f 2
0
2A · 	u.
(5.28)
Similarly, if the system decelerates from feed f to fl, then
l3 =
 t3
t2
[ f −D(t −t2)]dt = fτd −Dτ 2
d
2
= f 2 −f 2
l
2D
,
(5.29)
which leads to the following number of interpolation periods during decelera-
tion:
N3 = l3
	u = f 2 −f 2
l
2D · 	u.
(5.30)
The counters N, N1, N2, and N3 are rounded integers. Note that if the desired
feed is not reached because of a short tool path, the acceleration and decelera-
tion periods are made equal (A = D); i.e., (if N2 < 0 →N2 = 0, N1 = N3 = N/2).

5.4 TRAJECTORY GENERATION FOR COMPUTER-CONTROLLED MACHINES
215
The interpolation period Ti must be changed at each interval during accel-
eration and deceleration. Because the traveled tool path segment 	u is kept
constant, the following expression can be written between two interpolation
periods:
	u =
 tk
tk−1
Atdt = A
2
$
t2
k −t2
k−1
%
= A
2
$
tk −tk−1
% $
tk + tk−1
%
.
By substituting Ti(k) = tk −tk−1 and tk = f (k)/A, tk−1 = f (k −1)/A, the inter-
polation period (Ti(k)) during acceleration and deceleration where the velocity
changes is found at each increment as
Ti(k) =
2	u
f (k) + f (k −1).
(5.31)
For small acceleration and deceleration values, this equation can be approxi-
mated as Ti(k) = 	(u)/ f (k) with caution. The approximation reduces the real-
time computation load, but it produces jerks at large velocity increments. The
following pseudocode algorithm is given to calculate interpolation time inter-
vals for acceleration, constant feed, and deceleration phases:
for
k = 1, N1
; Iterate during acceleration period.
f (k) =

f 2
0 + 2kA	u
; Next f calculated from initial f0.
Ti(k) =
2	u
f (k)+ f (k−1)
; Next interpolation period time.
next
k
;
for
k = 1, N2
; Iterate during constant feed period.
Ti = 	u/ f
; Period is always the same.
next
k
;
for
k = 1, N3
; Iterate during deceleration period.
f (k) =

f 2 −2kD	u
; Next f calculated from previous f0.
Ti(k) =
2	u
f (k)+ f (k−1)
; Next interpolation period time.
next
k
;
Depending on the on-the-ﬂy increase or decrease in the feed, the new values
of N1, N2, N3, and Ti are recalculated and updated. Note that acceleration,
constant feed, and deceleration phases are coded into different functions and
are executed when they are required. Because most of the terms are constants,
the interpolation rate is constrained by the square root.
Note that the feed, acceleration, and deceleration regulated for vector dis-
placement guarantees synchronized and correct velocity values in all active
drives contributing to the vectorial motion in the space. If we take a two-axis

216
TECHNOLOGY OF MANUFACTURING AUTOMATION
+ ∞
+ ∞
− ∞
− ∞
D
t1
t
t
t
t
t2
t3
l(t)
f(t)
a(t)
J(t)
A
T 1
T 2
T 3
fc
fs
fe
l1
l2
le
ls
Figure 5.14: Trajectory generation with constant acceleration
and ﬁxed interpolation period.
motion in the x and y directions,
the differential vector displace-
ment 	u can be written as
⃗
	u = 	x⃗i + 	y⃗j,
(5.32)
where i and j are unit vectors
in the x and y directions, respec-
tively. If we divide both sides with
interpolation time interval Ti, we
get
⃗
	u
Ti
= 	x
Ti
⃗i + 	y
Ti
⃗j,
⃗f = fx⃗i + fy⃗j,
where the feed amplitude is f =

f 2x + f 2y , and fx and fy are the
resulting velocities of the x and y
drives. Hence, once 	u, interpola-
tion time Ti, and counters N1, N2,
and N3 are calculated, the veloci-
ties and incremental positions in
the x and y drives are automat-
ically deﬁned by the algorithm.
The interpolation algorithms pre-
sented in the next section clarify the engineering implementation of the
method.
5.4.2
Acceleration-Limited Velocity Proﬁle Generation with Constant
Interpolation Period
Let us consider a design approach where the interpolation period Ti is con-
stant. Typically Ti is selected equal to control interval if the motion control
computer has sufﬁcient computation power in real time, or integer multiples
of it.
The acceleration, velocity, and displacement proﬁles can be expressed as a
function of time (t) as follows:
a(t) =
⎧
⎨
⎩
A
0 ≤t < t1
A > 0
0
t1 ≤t < t2
D
t2 ≤t < t3
D < 0
⎫
⎬
⎭,
(5.33)

5.4 TRAJECTORY GENERATION FOR COMPUTER-CONTROLLED MACHINES
217
where A and D are the acceleration and deceleration, respectively. In most
applications D = −A. The velocity proﬁle is expressed as
f (t) =
⎧
⎨
⎩
fs +

Adt = fs + At
0 ≤t < t1
f1 = fs + AT1 = fc
fc
t1 ≤t < t2
f2 = fc
fc +

Ddt = fc + Dt
t2 ≤t < t3
f3 = fc + DT3 = fe
⎫
⎬
⎭,
(5.34)
where fs, fc, fe are the start, steady, and end feed values of the motion seg-
ments, respectively. The time segments are T1 = t1, T2 = t2 −t1, T3 = t3 −t2 =
T −(T1 + T2), where T is the total travel time along the path segment. The
integration of feed leads to displacement traveled at each motion segment as
l(t) =
⎧
⎨
⎩
ls +

( fs + At)dt = ls + fst + 1
2At2
0 ≤t < t1
l1 = ls + fsT1 + 1
2AT2
1
l1 +

fcdt = l1 + fct
t1 ≤t < t2
l2 = l1 + fcT2
l2 +

( fc + Dt)dt = l2 + fct + 1
2Dt2
t2 ≤t < t3
l3 = l2 + fcT3 + 1
2DT2
3 = ls + L
⎫
⎬
⎭,
(5.35)
where L is the total path segment length. By substituting l1and l2 into the l3,
the total path length L can be expressed as a function of motion time zones,
feed, acceleration, and deceleration.
L = l3 −ls = l2 + fcT3 + 1
2DT2
3 −ls
= l1 + fcT2 + fcT3 + 1
2DT2
3 −ls
= ls + fsT1 + 1
2AT2
1 + fcT2 + fcT3 + 1
2DT2
3 −ls
(5.36)
L = fsT1 + 1
2AT2
1 + fcT2 + fcT3 + 1
2DT2
3
The time segments T1, T2, and T3 must be identiﬁed to generate trajectory
commands at each interpolation period. The acceleration (T1) and deceleration
(T3) periods can be evaluated as
fs + AT1 = fc
→
T1 = fc−fs
A
fc + DT3 = fe
→
T3 = fe−fc
D
(5.37)
By substituting T1, T3 into the total displacement length (L), the unknown
T2 can be found as
L = fsT1 + 1
2AT2
1 + fcT2 + fcT3 + 1
2DT2
3
L = fs
 fc −fs
A

+ 1
2A
 fc −fs
A
2
+ fcT2 + fc
 fe −fc
D

+ 1
2D
 fe −fc
D
2
T2 = L
fc
−
 1
2A −1
2D

fc +
−f 2
s
2A + f 2
e
2D
 1
fc
	
.
(5.38)

218
TECHNOLOGY OF MANUFACTURING AUTOMATION
Solution 7. Details of derivation for T2
T2 =
1
L −
(
fs
 fc −fs
A

+ 1
2A
 fc −fs
A
2
+ fc
 fe −fc
D

+ 1
2D
 fe −fc
D
2)
1
fc
=

L −
 fs fc −f 2
s
A
+ f 2
c −2 fs fc + f 2
s
2A
+ fc fe −f 2
c
D
+ f 2
e −2 fe fc + f 2
c
2D
	 1
fc
=

L −
2 fs fc −2 f 2
s + f 2
c −2 fs fc + f 2
s
2A
+ 2 fe fc −2 f 2
c + f 2
e −2 fe fc + f 2
c
2D
	 1
fc
=

L −
−f 2
s + f 2
c
2A
+ −f 2
c + f 2
e
2D
	 1
fc
=

L −
 1
2A −1
2D

f 2
c +
−f 2
s
2A + f 2
e
2D
	 1
fc
.
When the acceleration and deceleration values are set equal (D = −A), the
steady-state velocity time T2 becomes
T2 = L
fc
+

−fc
A +
 f 2
e + f 2
s
2A
 1
fc
	
.
(5.39)
The total motion duration becomes Tt = T1 + T2 + T3.
When the path segments are too small, the machine may not be able to
reach to the command feed ( fc), and the steady-state velocity zone may be zero
or negative, i.e., T2 ≤0. If the limited acceleration leads to such an incompat-
ibility with the trajectory generation, the command feed must be reduced to a
compatible value that can be achieved without saturating the drives.
If T2 ≤0 in Eq. (5.38), then it is forced to become zero to identify the possible
feed from a given set of acceleration, deceleration, and the start and end feed
values as follows:
T2 =
L
fcm
−
 1
2A −1
2D

fcm +
−f 2
s
2A + f 2
e
2D
 1
fcm
	
= 0
(5.40)
fcm =

2ADL −( f 2e A −f 2s D)
D −A
.
Note that if D = −A, the the allowable feed becomes
fcm =
"
AL + ( f 2e + f 2s )
2
.
(5.41)
The new acceleration and deceleration periods are computed as (T2 = 0)
follows:
fs + AT1 = fcm
→
T1 = fcm−fs
A
fcm + DT3 = fe
→
T3 = fe−fcm
D
.
(5.42)
In addition to considering the zero steady-state travel zone (T2 = 0), it is
important to consider numerical roundoff errors in trajectory generation. If

5.4 TRAJECTORY GENERATION FOR COMPUTER-CONTROLLED MACHINES
219
the interpolation period Ti is ﬁxed in the CNC system, the total number of
interpolation steps must be an integer number as follows:
N = ceil(Tt
Ti
)
However, if the Tt/Ti is not a perfect integer, which is always possible, then
the fraction must be considered to correct the duration of motion according
to trajectory generation. Because the interpolation period (Ti ) is constant, the
algorithm leads to actual total travel time T′
t = NTi, which can be different than
Tt if Tt/Ti is not an integer. The acceleration, steady-state, and deceleration
time lengths (T1, T2, T3) are adjusted to guarantee that the total time is equal
to Tt as follows:
T
′
j =
T′
t
Tt

, Tj,
where j = 1, 2, 3.
Because T′
1, T′
2, and T′
3 are now different than previously estimated travel
periods (T1, T2, and T3), it is necessary to remodify the nominal feed, accel-
eration, and deceleration. From Eq. (5.38), the new feed fcn is calculated as
follows:
fcns = 2L −fsT
′
1 −feT′
3
T′
1 + 2T
′
2 + T
′
3
An = fcn −fs
T
′
1
, Dn = fe −fcns
T
′
3
.
The new kinematic proﬁles must be regenerated by following the new feed
( fcn), acceleration (An), and deceleration (Bn) values by substituting them
in Eqs. (5.33), (5.34), (5.35). The trajectory generation can be rearranged as
follows:
l(t) =
⎧
⎨
⎩
ls + fsτ + 1
2Anτ 2
0 ≤τ < T′
1
l1n = ls + fsT′
1 + 1
2AnT′2
1
l1n + fcnτ
0 ≤τ < T′
2
l2n = l1n + fcnT
′
2
l2n + fcnτ + 1
2Dnτ 2
0 ≤τ < T
′
3
= ls + L
⎫
⎬
⎭.
(5.43)
The real-time computation can be optimized by converting Eq. (5.43) into
difference equations by substituting τ = kTi, where Ti is the constant interpo-
lation period.
l(k) =
⎧
⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎩
ls + fs(kTi) + 1
2 An(kTi)2
k = 1, 2, . . . , (N1 = T′
1/Ti)
l(k −1) + fsTi + 	1(k −1
2 )
	1 = AnT2
i , l1n = l(N1)
l1n + fcn(kTi)
k = 1, 2, . . . , (N2 = T′
2/Ti)
l(k −1) + 	2,
	2 = fcnTi, l2n = l(N2)
l2n + fcn(kTi) + 1
2 Dn(kTi)2
k = 1, 2, . . . , (N3 = T
′
3/Ti)
l(k −1) + fcnTi + 	3(k −1
2 ),
	3 = DnT2
i , l3n = l(N3)
⎫
⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎭
.
(5.44)
The constant displacements (	1, 	2, 	3) can be calculated during initializa-
tion and simply added recursively during real-time trajectory generation. Note

220
TECHNOLOGY OF MANUFACTURING AUTOMATION
that l(k) is a discrete displacement command in space and must be decoupled
into individual axes using the kinematics of the machine.
Solution 8. Details of derivation for the acceleration phase of trajectory gener-
ation.
ls + fs(kTi) + 1
2An(kTi)2 = ls + fs(k −1)Ti + fsTi + 1
2An
$
k −1
%
Ti + Ti
2
= ls + fs(k −1)Ti + fsTi + 1
2An[
$
k −1
%
Ti]2 + An
$
k −1
%
T2
i + 1
2AnT2
i
= ls + fs(k −1)Ti + 1
2An[
$
k −1
%
Ti]2 + fsTi + AnT2
i (k −1
2 )
= l(k −1) + fsTi + AnT2
i (k −1
2 ).
5.4.3
Jerk-Limited Velocity Proﬁle Generation
The trapezoidal velocity proﬁle introduced in the previous section is simple
to implement and suitable for most machines. However, because it uses a
constant acceleration, the jerk or the derivative of the acceleration is zero,
which leads to various oscillations and noise on the feed and acceleration when
interpolating along complex tool paths. The acceleration times inertia or mass
acts as a dynamic torque or force on the feed drive structure. If the feed drive
acceleration command produced by the trajectory generator is not smooth, the
resulting acceleration torque for the ball screw and force for the linear motor
drives contain high-frequency components that excite the structural dynamics
of the feed drives and cause undesired vibrations. To obtain smooth velocity and
acceleration proﬁles, jerk-limited trajectory generation algorithms are used,
and these are presented in this section.
Kinematic Proﬁles
The kinematic time proﬁles of jerk (J), acceleration (a), feed rate ( f), and
trajectory command position (l) are shown in Figure 5.15. Before the NC block
motion is started, the initial and ﬁnal values of position (ls, le) and feed rate
( fs, fe), maximum acceleration (A), deceleration (D), and jerk (J) limits are
deﬁned. The maximum acceleration/deceleration limits are identiﬁed from
the maximum torque and force limits of the drive motors. The accelera-
tion time is set depending on the peak torque/force delivery periods of the
ampliﬁer. The jerk limit is set by the maximum acceleration divided by the
acceleration time. From Figure 5.15, the jerk (J(τ )), acceleration (a(τ )), feed
( f (τ )), and displacement (l(τ )) along the tool path can be expressed. The jerk
is constant when the acceleration increases linearly as follows:
J(τ ) =
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
J1
0 ≤t < t1
0
t1 ≤t < t2
−J
t2 ≤t < t3
0
t3 ≤t < t4
−J5
t4 ≤t < t5
−0
t5 ≤t < t6
J7
t6 ≤t < t7
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
(5.45)

5.4 TRAJECTORY GENERATION FOR COMPUTER-CONTROLLED MACHINES
221
1
2
3
4
5
6
7
l
l
f
a
J
s
l 1 l 2
l 3
l 4
l 5
l 6
l e
fs
f1
f2
f
f5
f6
fe
A
J 1
J 3
J 5
D
J 7
t1
t2
t3
t4
t5
t6
t7
t
t
t
t
T 1
T 2
T 3
T 4
T 5
T 6
T 7
τ 1
τ2
τ 3
τ4
τ 5
τ 6
τ 7
-
-
-
Figure 5.15: Kinematic proﬁles for jerk-limited feed rate generation.
The acceleration is found by integrating the jerk while considering its initial
conditions as follows:
a(t) = a(ti) +
 t
ti J(τ )dτ,
f (t) = f (ti) +
 t
ti a(τ )dτ,
l(t) = l(ti) +
 t
ti f (τ )dτ.
(5.46)
The jerk is constant during acceleration (T1, T3) and deceleration (T5, T7)
periods and is zero during constant acceleration (T2, T4, T6). By integrating the

222
TECHNOLOGY OF MANUFACTURING AUTOMATION
jerk at each period shown in Figure 5.15, the acceleration proﬁles are obtained
as follows:
a(τ ) =
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
J1τ1,
0 ≤t < t1
A,
t1 ≤t < t2
A −J3τ3,
t2 ≤t < t3
0,
t3 ≤t < t4
−J5τ5,
t4 ≤t < t5
−D,
t5 ≤t < t6
−D + J7τ7,
t6 ≤t < t7
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
,
(5.47)
where τk (k = 1, 2, . . . , 7) denotes relative time (i.e., τk = t −tk−1) at each each
motion zone. By integrating the acceleration (Eq. 5.47) at each period, the feed
velocity proﬁle for each phase in Figure 5.15 is found to be
f (τ ) =
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
fs + 1
2J1τ 2
1 ,
fs : initial feed,
0 ≤t < t1
f1 + Aτ2,
f1 = fs + 1
2J1T2
1 ,
t1 ≤t < t2
f2 + Aτ3 −1
2J3τ 2
3 ,
f2 = f1 + AT2,
t2 ≤t < t3
f3,
f = f3 = f2 + AT3 −1
2J3T2
3 ,
t3 ≤t < t4
f4 −1
2J5τ 2
5 ,
f = f4 = f3,
t4 ≤t < t5
f5 −Dτ6,
f5 = f4 −1
2J5T2
5 ,
t5 ≤t < t6
f6 −Dτ7 + 1
2J7τ 2
7 ,
f6 = f5 −DT6,
t6 ≤t < t7
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
, (5.48)
where Tk is the period of phase k. Integrating (5.48) once more yields the
displacement proﬁle as
l(τ ) =
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
ls + fsτ1 + 1
6J1τ 3
1 ,
ls : initial position,
0 ≤t < t1
l1 + f1τ2 + 1
2Aτ 2
2 ,
l1 = ls + fsT1 + 1
6J1T3
1 ,
t1 ≤t < t2
l2 + f2τ3 + 1
2Aτ 2
3 −1
6J3τ 3
3 ,
l2 = l1 + f1T2 + 1
2AT2
2 ,
t2 ≤t < t3
l3 + f3τ4,
l3 = l2 + f2T3 + 1
2AT2
3 −1
6J3T3
3 ,
t3 ≤t < t4
l4 + f4τ5 −1
6J5τ 3
5 ,
l4 = l3 + f3T4,
t4 ≤t < t5
l5 + f5τ6 −1
2Dτ 2
6 ,
l5 = l4 + f4T5 −1
6J5T3
5 ,
t5 ≤t < t6
l6 + f6τ7 −1
2Dτ 2
7 + 1
6J7τ 3
7 ,
l6 = l5 + f5T6 −1
2DT2
6 ,
t6 ≤t < t7
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
,
(5.49)
where lk is the total displacement reached at the end of phase k.
The incremental distance (Lk ) traveled at each phase (k) is
Lk = lk −lk−1,
(5.50)

5.4 TRAJECTORY GENERATION FOR COMPUTER-CONTROLLED MACHINES
223
where the initial displacement is l0 = ls. The sum of the distances traveled at
each step should be equal to the total distance to be traveled (Eqs. 5.49 and
5.50) as follows:
L = le −ls =
7

k=1
Lk,
(5.51)
where L is the total distance traveled within the NC tool path segment. From
the trapezoidal acceleration/deceleration proﬁles,
A = J1T1 = J3T3,
D = J5T5 = J7T7
(5.52)
should hold, although this may require readjustment after the ﬁrst initializa-
tion step. Considering that the desired feed ( f) is reached at the end of phase
3, we have
f3 = f →T2 = 1
A

f −fs −1
2J1T2
1 −AT3 + 1
2J3T2
3
	
,
(5.53)
and similarly, considering that the ﬁnal feed ( fe) is reached at the end of
phase 7, we have
f7 = fe = f6 −DT7 + 1
2J7T2
7 ,
T6 = 1
D

f −fe −1
2J5T2
5 −DT7 + 1
2J7T2
7

.
(5.54)
Initialization
Before generating incremental position commands in the interpolation stage,
the number of interpolation steps and the time interval between each step
must be predetermined to implement the jerk-limited kinematic proﬁle given
in Figure 5.15. To design a general algorithm, the following conditions are
evaluated at the initialization step.
The total number of interpolation steps (N) is checked. If 2 < N ≤4, then
N = 4 is selected to guarantee at least the presence of the acceleration and
deceleration phases (1, 3, 5, and 7) in Figure 5.15. If N ≤2, then N = 2 is
selected to allow an acceleration and deceleration. Note that these conditions
would only occur when the motion is very small, such as in high-speed spline
interpolation applications or in precision positioning. If the acceleration stage
exists, the desired feed ( f) must be reached within the ﬁrst three phases,
which implies that T2 ≥0. If the jerk values are equal (J1 = J3) (Eq. 5.52), the
acceleration condition requires that
T1 = T3 = A/J1,
T2 = f −fs
A
−A
J1
≥0.
(5.55)
If Eq. (5.55) does not hold, then the magnitude of the acceleration must be
reduced to its maximum possible limit as
A = sgn(A) ·

J1( f −fs)
(5.56)

224
TECHNOLOGY OF MANUFACTURING AUTOMATION
and T2 is set to zero. Similarly, if the deceleration stage exists,
T5 = T7 = D/J5,
T6 = f −fe
D
−D
J5
≥0.
(5.57)
If the deceleration stage does not exist, the deceleration limit is reduced as
D = sgn(D) ·

J5( f −fe),
(5.58)
and T6 is set to zero. If the displacement length is large enough to encompass
the constant feed stage, T4 ≥0 and must be identiﬁed. The total travel length is
calculated from Eqs. (5.49) and (5.51) by substituting T2 and T6 from Eqs. (5.54)
and (5.57) as
L =
 1
2A + 1
2D

f 2 +
 A
2J1
+ D
2J5
+ T4

f +
A fs
2J1
+ D fe
2J5
−f 2
s
2A −f 2
e
2D

.
(5.59)
If the tool path distance is too short to reach the target feed ( f), its correspond-
ing terms must not be considered in Eq. (5.59). To have a constant feed ( f)
phase, T4 ≥0 should hold as follows:
T4 = 1
f

L −

 1
2A + 1
2D

f 2 +
 A
2J1
+ D
2J5

f
+
A fs
2J1
+ D fe
2J5
−f 2
s
2A −f 2
e
2D
	
≥0.
(5.60)
If Eq. (5.60) is not satisﬁed, then T4 = 0 and the magnitude of the feed
rate is reduced to its maximum possible value by solving Eq. (5.60). If the
quadratic equation yields complex roots, the initial and ﬁnal feeds are set to
zero ( fs = fe = 0), and the path reinitialization is repeated by adjusting the
initial parameters (A, D, J).
Number of Interpolation Steps in Each Phase
The incremental displacement 	u is decided by the linear, circular, or spline
interpolation algorithms. Since the displacement in each phase is deﬁned in
Eq. (5.50), the number of interpolation steps in phases (1, 3, 5, and 7) can be
expressed as
N1 = round (L1/	u),
N3 = round (L3/	u),
N5 = round (L5/	u),
N7 = round (L7/	u).
(5.61)
If any of (N1, N3, N5, N7) are zero for nonzero L1, L3, L5, L7 because of rounded
integers, they are set to one. The total number of steps for the acceleration
(Nac) and deceleration (Ndec) stages are calculated as
Nac = round (L1 + L2 + L3)
	u
,
Ndec = round (L5 + L6 + L7)
	u
,
(5.62)

5.4 TRAJECTORY GENERATION FOR COMPUTER-CONTROLLED MACHINES
225
from which the number of steps for constant acceleration (phase 2) and constant
deceleration (phase 6) are found as follows:
N2 = Nac −(N1 + N3),
N6 = Ndec −(N5 + N7).
(5.63)
The number of interpolation steps for the constant feed (phase 4) becomes
N4 = N −(Nac + Ndec).
(5.64)
The number of interpolation steps (N1, . . . , N7) for each phase of the jerk-
limited velocity proﬁle generation (Fig. 5.15) is now deﬁned. Although the total
number of interpolation steps is still N, the displacement at each phase may
be changed because of constraints, that is,
L′
k = Nk · 	u,
k = 1, 2, . . . , 7,
(5.65)
where L′
k is the new displacement value, which may be different than the
value given in Eq. (5.50). This requires the readjustment of all acceleration,
deceleration, jerk, and time periods.
For the acceleration stage (phases 1, 2, and 3) when T2 > 0, Eq. (5.53) for T2
and the new displacements L′
1, L′
2, L′
3 are substituted in Eqs. (5.49) and (5.50),
resulting in the following equations:
fsT1 + 1
6AT2
1 −L′
1 = 0
−1
8AT2
1 + 1
8AT2
3 −1
2 fsT1 −1
2 fT3 + f 2−f 2
s
2A
−L′
2 = 0
fT3 −1
6AT2
3 −L′
3 = 0
⎫
⎪⎪⎪⎬
⎪⎪⎪⎭
→for T2 > 0.
(5.66)
If T2 = 0, Eq. (5.50) can not be used. Instead, the feed rate condition for the
end of the acceleration stage ( f3 in Eq. 5.48) is used, which leads to
fsT1 + 1
6AT2
1 −L′
1 = 0
1
2AT1 + 1
2AT3 + fs −f = 0
1
3AT2
3 + 1
2AT1T3 + fsT3 −L′
3 = 0
⎫
⎪⎪⎬
⎪⎪⎭
→for T2 = 0.
(5.67)
A similar approach is applied to the deceleration stage (phases 5, 6, and
7). By substituting T6 and the new displacements L′
5, L′
6, L′
7 in Eqs. (5.49) and
(5.50), we get
fT5 −1
6DT2
5 −L′
5 = 0
1
8DT2
5 −1
8DT2
7 −1
2 fT5 −1
2 feT7 + f 2−f 2
e
2D
−L′
6 = 0
feT7 + 1
6DT2
7 −L′
7 = 0
⎫
⎪⎪⎪⎬
⎪⎪⎪⎭
→for T6 > 0.
(5.68)

226
TECHNOLOGY OF MANUFACTURING AUTOMATION
For the case T6 = 0 the feed rate condition at the end of deceleration is used as
follows:
fT5 −1
6DT2
5 −L′
5 = 0
1
2DT5 + 1
2DT7 + fe −f = 0
−1
3DT2
7 −1
2DT5T7 + fT7 −L′
7 = 0
⎫
⎪⎪⎪⎬
⎪⎪⎪⎭
→for T6 = 0.
(5.69)
For the acceleration stage, either Eq. (5.66) for T2 > 0 or Eq. (5.67) for T2 > 0
is used to ﬁnd the new values of T1, T3, A, and T2. For the deceleration stage,
either Eq. (5.68) for T6 > 0 or Eq. (5.69) for T6 = 0 is used to ﬁnd the updated
values of T5, T7, D, and T6. These equations are nonlinear and can be solved
iteratively by using the Newton–Raphson numerical algorithm. T4 is found in
Eq. (5.60). Once the values of T1, T2, . . . , T7 and A, D are found, the jerk values
are updated by using Eqs. (5.52) and (5.57), the ﬁnal feed rate values reached
at the end of each phase are recalculated from Eq. (5.48).
In short, the number of interpolation steps (N1, . . . , N7), time intervals
(T1, . . . , T7), feed values ( f1, . . . , f7), displacements (L′
1, . . . , L′
7), and possible
accelerations and decelerations (A, D, J) are found for each phase of the motion
block before the real-time interpolation starts.
Recursively Executed Real-Time Part
Here the interpolation period at each step must be identiﬁed. After the
initialization part is completed as explained earlier, the continuously executed
real-time part of the jerk-limited feed rate generation algorithm is invoked
at each interpolation step. For any of the seven phases in Figure 5.15, the
following general displacement formula can be used:
l(τk) = 1
6J0,kτ 3
k + 1
2a0,kτ 2
k + f0,kτk + l0,k,
(5.70)
where J0,k, a0,k, f0,k, and l0,k are jerk, acceleration, feed rate, and displacement
values, respectively, and they are calculated at the initialization stage. τk is
the relative time parameter at the beginning of each phase k. Because the
incremental displacement step 	u is predetermined at the interpolation, the
displacement at interpolation step number m can be found as
l(τk,m) = m · 	u = 1
6J0,kτ 3
k,m + 1
2a0,kτ 2
k,m + f0,kτk,m + l0,k,
(5.71)
which leads to the solution of accumulated time (τk,m) within the phase k.
Although Eq. (5.71) can be solved analytically, it is more efﬁcient to solve it in
real time by using the Newton–Raphson iterative algorithm. The interpolation
period for within phase k at interpolation step m can be evaluated by
Ti(k,m) = τk,m −τk,m−1.
(5.72)
Alternatively, by replacing the initial conditions at each step, the interpola-
tion period can be solved from Eq. (5.71) as well, but at the expense of numerical
roundoff errors.

5.4 TRAJECTORY GENERATION FOR COMPUTER-CONTROLLED MACHINES
227
s
Figure 5.16: Resampling of interpolator output trajectory at control loop
frequency.
Reconstruction of Reference Trajectory at Servoloop Control Frequency
Reference trajectories generated with varying interpolation periods may
cause sudden changes in the discrete position commands at each axis and,
hence, cause undesirable jerks on the drives. To smooth the generated tra-
jectory, the discrete position commands of each drive at varying interpolation
periods must be resampled at the servoloop frequency. Note that the resampling
is done after the trajectory is generated by the interpolation stage presented
in the following section, although it is presented here because of its relevance
to jerk-limited trajectory generation.
A sample trajectory is shown in Figure 5.16, where the interpolator and
resampled trajectory at servocontrol interval T are shown. If we consider one
of the drives, the x axis, two consecutive displacements of the drive are denoted
by xi, xi+1, where i is the interpolation counter. A ﬁfth-order polynomial is ﬁt
between the two points as
˜x(τ ) = Arτ 5 + Brτ 4 + Crτ 3 + Drτ 2 + Erτ + Fr,
(5.73)
where
the
time
varies
as
0 ≤τ ≤(ti+1 −ti).
The
coefﬁcients
(Ar, Br,
Cr, Dr, Er, Fr) are identiﬁed from the boundary conditions as
˜x(0) = xi,
˜x(ti+1 −ti) = xi+1,
d ˜x(0)
dτ
= ˙xi,
d ˜x(ti+1 −ti)
dτ
= ˙xi+1,
(5.74)
d2 ˜x(0)
dτ 2
= ¨xi,
d2 ˜x(ti+1 −ti)
dτ 2
= ¨xi+1,
where ( ˙xi, ¨xi; ˙xi+1, ¨xi+1) are the feed rate and acceleration estimates at the begin-
ning and end of the interpolated position command segment, respectively. They
can be estimated using a third-order cubic polynomial similar to the method
described in the quintic or ﬁfth-order spline interpolation as explained in Sec-
tion 5.5.3. For each new reference point coming out of the interpolator algo-
rithm, the polynomial coefﬁcients are recalculated, and the reference axis posi-
tion commands are generated at servocontrol loop interval T from Eq. (5.73)
(i.e., τ = 0, T, 2T, . . . (ti+1 −ti)).

228
TECHNOLOGY OF MANUFACTURING AUTOMATION
0
0.02
0.04
0.06
0.08
0.1
0.12
0.14
0.16
0.18
0
2
4
6
8
10
0
0.02
0.04
0.06
0.08
0.1
0.12
0.14
0.16
0.18
0
50
100
0
0.02
0.04
0.06
0.08
0.1
0.12
0.14
0.16
0.18
-4000
-2000
0
2000
4000
0
0.02
0.04
0.06
0.08
0.1
0.12
0.14
0.16
0.18
-2x106
-1x106
0
1x106
2x106
Travel Distance
Feedrate
Jerk
Acceleration
Time [sec]
a [mm/sec2]
f [mm/sec]
J [mm/sec3
]
m
m
[ x
]
Trapezoidal Velocity Profile
Trapezoidal Acceleration Profile
(Jerk Limited Trajectory)
0
50
100
150
200
250
300
350
400
450
500
0
500
1000
Mag. [mm/sec2]
FFT Magnitude of Acceleration
Frequency [Hz]
Figure 5.17: Comparison trajectories generated with jerk-limited and trapezoidal
velocity proﬁles.
Example. The trajectory generation with simple trapezoidal velocity and jerk-
limited trapezoidal acceleration proﬁles are compared in Figure 5.17 during
a single axis (x) motion. Transient oscillations are present in the accelera-
tion and jerk when the trapezoidal velocity proﬁle is used. However, it can be
seen that both acceleration and jerk become very smooth when the trapezoidal
acceleration is used instead. The presence of many harmonics in the accelera-
tion indicates that the trapezoidal velocity proﬁle may excite structural modes
of the feed drive; hence, it is not recommended for high-speed machine tool
drives. Further smoothing is achieved on the acceleration and jerk when the

5.5 REAL-TIME INTERPOLATION METHODS
229
0
0.02
0.04
0.06
0.08
-5000
0
5000
a [mm/sec2]
0.1
0.12
0.14
0.16
0.18
50
100
0.04
0.06
0.08
0.1
0.12
0.14
f [mm/sec]
0
0.02
0
0.16
0.18
0
0.02
0.04
0.06
0.08
0.1
0.12
0.14
0.16
-4.69x106
5.58x106
0.18
-5x105
0
5x105
J [mm/sec3]
Time [sec]
x [mm]
0.06
0.08
0.1
0.12
0.14
0.16
0.18
2
4
6
8
10
0
0.02
0.04
0
Travel Distance
Feedrate
Acceleration
Jerk
Original Trajectory 
Fifth Order Resampled Trajectory
Figure 5.18: Original trajectory generated by the interpolator and smoothed tra-
jectory with ﬁfth-order resampling at the axis level.
interpolated axis displacements are resampled using a ﬁfth-order polynomial
(see Fig. 5.18).
5.5
REAL-TIME INTERPOLATION METHODS
CNC systems must be capable of following the complex trajectories that may
be present on the parts to be machined. Most of the common geometries can be
constructed from linear and circular segments. However, high-speed machining
of dies, molds, and aerospace parts with sculptured surfaces requires real-time
spline interpolation as well.
In this section, common design methods for real-time two-axis linear, cir-
cular, and quintic spline interpolation methods are presented. The algorithms
are general and can easily be extended to motions containing more than two
active axes.

230
TECHNOLOGY OF MANUFACTURING AUTOMATION
y
X s
X e
y s
y e
x
f (counts/s)
Ps
Pe
Figure 5.19: Linear interpolation.
5.5.1
Linear Interpolation Algorithm
Method I: Constant Displacement-Varying Interpolation Period
This interpolation method is based on the digital integration of the velocity
components in two axes.
Let us assume that a cutting tool center is to follow the linear path shown
in Figure 5.19. The starting point of the tool is Ps(xs, ys) and the end point is
Pe(xe, ye). At time t the position of the axes will be at
x(t) = x(k · 	t) = xs +
 t
0 fx(t)dt,
y(t) = y(k · 	t) = ys +
 t
0 fy(t)dt,
(5.75)
where the axis velocities fx and fy and interpolation time interval Ti vary
with time during acceleration and deceleration periods, but remain constant
during the constant feed zone as explained in the previous section. Because the
interpolation algorithm is executed N times at time intervals Ti, Eq. (5.75) can
be expressed in discrete form as
x(k) = xs + +k
j=1 fx( j)Ti( j) = xs + +k−1
j=1 fx( j)Ti( j) + fx(k)Ti(k),
y(k) = ys + +k
j=1 fy( j)Ti( j) = ys + +k−1
j=1 fy( j)Ti( j) + fy(k)Ti(k),
or
x(k) = x(k −1) + fx(k)Ti(k),
y(k) = y(k −1) + fy(k)Ti(k).
(5.76)
Note that the axis velocities at time interval k are
fx(k) =
	x
Ti(k),
fy(k) =
	y
Ti(k).
(5.77)

5.5 REAL-TIME INTERPOLATION METHODS
231
Manipulation of interpolation time interval Ti results in manipulation of the
axis feeds according to the vector feed and the acceleration/deceleration velocity
proﬁle. However, the incremental displacements in both axes are constant and
are given by
	x = xe −xs
N
,
	y = ye −ys
N
.
(5.78)
Substituting Eqs. (5.77) and (5.78) into (5.76) gives the recursive digital linear
interpolation equations as follows:
x(k · 	t) = xs + k · 	x = x(k −1) + 	x,
y(k · 	t) = ys + k · 	y = y(k −1) + 	y.
(5.79)
The integration increments 	x and 	y are constant and calculated once at
the beginning of the interpolation routine. A real-time computer implementa-
tion of the linear interpolation is given below.
Ti
The interpolation period
f
The requested feed rate
xs, ys
Start position
xe, ye
End position
δx
Total distance in x axis
δy
Total distance in y axis
sign(x)
Direction of x movement
sign(y)
Direction of y movement
N
The number of interpolation iterations
dx, dy
Step size for each axis
xrem
Remainder for x axis step size
yrem
Remainder for y axis step size
(All values are integer except Ti and f)
The initialization calculations in the CNC are
δx = abs(xe −xs)
δy = abs(ye −ys)
sign(x) = sign(xe −xs)
sign(y) = sign(ye −ys)
	u = fTi
N =

δx2 + δy2/	u
dx = ﬁx(δx/N)
dy = ﬁx(δy/N)
xrem = δx −(dx · N)
yrem = δy −(dy · N)
line(xs, dx, xrem,sign(x), N)
; sent to x axis position controller
line(ys, dy, yrem,sign(y), N)
; sent to y axis position controller

232
TECHNOLOGY OF MANUFACTURING AUTOMATION
0
300
600
900
1200
0
20
40
60
t(ms)
f (counts/s)
fx
fy
f
0
10
20
30
40
0
10
20
30
x(k)
y(k)
Figure 5.20: Linear interpolation example.
After initialization of as many axes as are
needed, each can be calculated at every
period Ti with the following:
function line (xs, dx, xrem, sign(x), N)
x(1) = xs
xerror = 0
for i = 2, N + 1
x(i) = x(i −1) + sign(x) · dx
xerror = xerror + xrem
if (xerror >= N)
x(i) = x(i) + sign(x)
xerror = xerror −N
end
end
The generated position commands at each
interpolation time interval Ti are then sent
to the digital servo control algorithm of each axis in the CNC.
Example. The following NC block is entered to the CNC in counts:
N010 G01 G90 X24 Y32 F1000
This NC program provides Pe(24, 32) and f = 1,000 [counts/s]. The initial coor-
dinates were given as Ps(5, 6), the acceleration and deceleration values of the
CNC are set as A = D = 50,000 [counts/s2], and the trapezoidal velocity proﬁle
is used. The minimum interpolation time is Tmin = 0.002 s in the CNC. The
interpolation algorithm is set as follows:
δx = xe −xs = 19,
δy = ye −ys = 26,
L =

δx2 + δy2 = 32,
	u = fTmin = 2,
N = L/	u = 16,
N1 = N3 = f 2/(2A	u) = 5,
	x = δx/N = 1.1875,
	y = δy/N = 1.625.
The numerical interpolation results are shown in Table 5.1 and Figure 5.20.
Method II: Varying Displacement–Constant Interpolation Period
The acceleration limited trajectory generation was derived previously as
follows:
l(k) =
⎧
⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎩
ls + fs(kTi) + 1
2A(kTi)2 k = 1, 2, .., (N1 = T1/Ti) l(k −1) + fsTi + 	1(k −1
2 ),
	l = AT2
i , l1 = l(N1)
l1 + fcτ
k = 1, 2, .., (N2 = T2/Ti) l(k −1) + 	2,
	2 = fcTi, l2 = l(N2)
l2 + fc(kTi) + 1
2D(kTi)2 k = 1, 2, ..(N3 = T3/Ti)
l(k −1) + fcTi + 	3(k −1
2 ),
	3 = DT2
i , l1 = l(N3)
⎫
⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎭
(5.80)
where the displacement l(k) is calculated at each time interval k at constant
interpolation period Ti. If the tool travels from point Ps(xs, ys) to point Pe(xe, ye)

5.5 REAL-TIME INTERPOLATION METHODS
233
TABLE 5.1. Linear Interpolation Steps between Points Ps(5, 6) and Pe(24, 32)
Clock
Feed f(k)
Interpolation
Time
x(k)
y(k)
Pulses k
[counts/s]
Interval Ti (ms)
t [ms]
[counts]
[counts]
0
0.00
0.00000
0.0
5.00
6.00
1
447.21
0.00894
8.9
6.19
7.63
2
632.46
0.00370
12.6
7.38
9.25
3
774.60
0.00284
15.5
8.56
10.88
4
894.43
0.00240
17.9
9.75
12.50
5
1,000.00
0.00211
20.0
10.94
14.13
6
1,000.00
0.00200
22.0
12.13
15.75
7
1,000.00
0.00200
24.0
13.31
17.38
8
1,000.00
0.00200
26.0
14.50
19.00
9
1,000.00
0.00200
28.0
15.69
20.63
10
1,000.00
0.00200
30.0
16.88
22.25
11
1,000.00
0.00200
32.0
18.06
23.88
12
894.43
0.00211
34.1
19.25
25.50
13
774.60
0.00240
36.5
20.44
27.13
14
632.46
0.00284
39.4
21.63
28.75
15
447.21
0.00370
43.1
22.81
30.38
16
0.00
0.00894
52.0
24.00
32.00
along the linear path, the direction is described by the following unit vector:
−−→
P1P2
***−−→
P1P2
***
= (xe −xs)
L
−→i + (ye −ys)
L
−→j .
(5.81)
The tool position at interpolation period k can be evaluated as follows:
−−→
l(k) =
(xe −xs)
L
−→i + (ye −ys)
L
−→j

l(k)
= (xe −xs)
L
l(k)−→i + (ye −ys)
L
l(k) −→j
(5.82)
−−→
l(k) = 	x · l(k)−→i + 	y · l(k) −→j
−−→
l(k) = δx(k)−→i + δy(k)−→i .
Substituting l(k) into the linear interpolation leads to following recursive
difference equations that need to be executed at constant time interval Ti.
l(k) =
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
	x

l(k −1) + fsTi + 	1(k −1
2 )

= x(k −1) + 	x

fsTi + 	1(k −1
2 )

	y

l(k −1) + fsTi + 	1(k −1
2 )

= y(k −1) + 	y

fsTi + 	1(k −1
2 )

	l = AT2
i
k = 1, 2, .., (N1 = T′
1/Ti)
	x

l(k −1) + 	2

= x(k −1) + 	x	2
	y

l(k −1) + 	2

= y(k −1) + 	y	2
	2 = fcTi
k = 1, 2, .., (N2 = T′
2/Ti)
	x

l(k −1) + fcTi + 	3(k −1
2 )

= x(k −1) + 	x

fcTi + 	3(k −1
2 )

	y

l(k −1) + fcTi + 	3(k −1
2 )

= y(k −1) + 	y

fcTi + 	3(k −1
2 )

	3 = DT2
i
k = 1, 2, ..(N3 = T
′
3/Ti)
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
(5.83)

234
TECHNOLOGY OF MANUFACTURING AUTOMATION
Chord
error
Y
X
R
Δθ
X
Y
R
n+1
n
s
f
θe
P  ( x  , y  )
e
e
e
s
s
P    ( x     , y     )
P  ( x  , y  )
P  ( x  , y  )
Δθ
tθ
θs
n+1
n+1
n
n
Figure 5.21: Circular interpolation.
The
algorithm
is
ﬁrst
initial-
ized by identifying (	x, 	y), (	l =
AT2
i , N1 = T1/Ti), (	2 = fcTi, N2 =
T2/Ti), (	3 = DT2
i , N3 = T3/Ti), and
followed
by
the
recursive
calcu-
lations listed above at each time
interval Ti. Because the displace-
ment l(k) is found by integrating
the feed, which is in turn calculated
by
integrating
the
acceleration,
each
displacement
command
at
time interval k inherently contains
projected
velocities
in
x
and
y
directions.
5.5.2
Circular Interpolation
Algorithm
Method I: Constant
Displacement-Varying
Interpolation Period
Consider
a
circular
segment
whose center is at the origin of
the CNC coordinate system (see
Fig. 5.21). The circular tool path has
a length of
L = R(θe −θs) = Rθt.
(5.84)
The arc must be broken into N small
segments for digital interpolation.
The length of each segment is 	u, with a corresponding angular segment of 	θ
as shown in Figure 5.21. The chord error (chord error) must be kept less than
the resolution of position sensing systems (i.e., 1 count) as follows:
chord error = R

1 −cos 	θ
2

≤1,
(5.85)
which is satisﬁed when the angular segment 	θ is selected as follows:
	θ ≤2 cos−1
R −1
R

.
(5.86)
The selection of
	θ = cos−1
R −1
R

,
cos 	θ = R −1
R
(5.87)

5.5 REAL-TIME INTERPOLATION METHODS
235
guarantees half a count chord error and is more advantageous for computation.
The corresponding chord segment is found as
	u = R	θ.
(5.88)
The circular tool path is broken into N1, N2, N3 segments for trapezoidal
velocity proﬁling as explained earlier. The tool has a feed speed of f [counts/s]
on the arc, and the arc segment 	u is traveled in one interpolation period Ti.
The interpolation period Ti varies during acceleration and deceleration zones
(N1, N3), but it remains constant during the steady-state feed zone (N2) as
shown in Figure 5.13. The angular feed velocity ω(t) and instantaneous angular
position (θ(t)) of the cutter at time t are
ω = f
R,
θ(t) = ωt = f
Rt,
(5.89)
respectively. Coordinates of a point on the arc can be expressed as
x(t) = R cos θ(t) = R cos
 f
Rt

,
y(t) = R sin θ(t) = R sin
 f
Rt

.
(5.90)
The velocities of the x and y axis feed drives are
fx = dx
dt = −f
RR sin
 f
Rt

= −f
R ·y(t),
fy = dy
dt = f
RR cos
 f
Rt

= f
R · x(t).
(5.91)
Because the velocities are coupled with the positions, digital integration of
these equations always produces some errors. A decoupled recursive circular
interpolation explained in the following can be easily implemented on CNC
systems that are capable of handling ﬂoating point arithmetic operations.
Consider two points, Pn and Pn+1 on the arc, which are 	θ away from each
other (Figure 5.21) as follows:
xn = R cos(θs + n	θ),
yn = R sin(θs + n	θ),
xn+1 = R cos[θs + (n + 1)	θ],
yn+1 = R sin[θs + (n + 1)	θ].
(5.92)
The coordinates of Pn+1 can be expanded as
xn+1 = R cos(θs + n	θ + 	θ),
yn+1 = R sin(θs + n	θ + 	θ),
or
xn+1 = R cos(θs + n	θ) cos 	θ −R sin(θs + n	θ) sin 	θ,
yn+1 = R sin(θs + n	θ) cos 	θ + R cos(θs + n	θ) sin 	θ.

236
TECHNOLOGY OF MANUFACTURING AUTOMATION
The products of trigonometric functions can be expanded as
sin(θs + n	θ) sin 	θ = 1
2{cos[θs + (n −1)	θ] −cos[θs + (n + 1)	θ]},
cos(θs + n	θ) sin 	θ = 1
2{−sin[θs + (n −1)	θ] + sin[θs + (n + 1)	θ]}.
Substituting the trigonometric expansion into the coordinates of Pn+1,
we get
xn+1 = R cos(θs + n	θ) cos 	θ −R
2 cos[θs + (n −1)	θ] + R
2 cos[θs + (n + 1)	θ],
yn+1 = R sin(θs + n	θ) cos 	θ −R
2 sin[θs + (n −1)	θ] + R
2 sin[θs + (n + 1)	θ].
When the coordinates of xn and yn are substituted in Eq. (5.92), the following
difference equations are obtained:
xn+1 = xn cos 	θ −1
2xn−1 + 1
2xn+1,
yn+1 = yn cos 	θ −1
2yn−1 + 1
2yn+1.
The discrete position equations can be reduced to a set of decoupled recursive
axis equations as follows:
xn+1 = 2xn cos 	θ −xn−1,
yn+1 = 2yn cos 	θ −yn−1.
(5.93)
Note that the integration interval 	θ is selected according to the maximum
chord error criterion, and cos 	θ is given by Eq. (5.87). The interpolation time
intervals are calculated according to the velocity proﬁle as explained in Sec-
tion 5.4. The numerical value of 	θ is precomputed and stored in the memory
before the real time, recursive interpolation algorithm starts.
The algorithm has been tested on the research milling machine controlled by
an in-house–developed CNC system. A two-axis 117-count (0.148 mm) linear
move, followed by an 80-count (0.102 mm) move in the x direction and a full
circular path with an 80-count (0.102 mm) radius were executed on the machine
tool at an intended feed of 4,000 counts/s. The command and measured tool
paths, actual feed along the tool path, and the corresponding axis velocities are
shown in Figure 5.22. With A = 50,000 counts/s2 acceleration, the target feed
is never reached because of the short travel distances. However, the path is
still followed with a satisfactory accuracy.
Example. The following NC block is entered to the CNC in counts:
N010 G90 G03 X90 Y-90 I- 90 J0 F1000
This
NC
program
provides
Pe(90, −90),
f = 1,000
[counts/s],
and
R =
√
I2 + J2 = 90 [counts]. The initial coordinates were given as Ps(180, 0), and
the acceleration (A) and deceleration (D) values of the CNC are set to

5.5 REAL-TIME INTERPOLATION METHODS
237
Figure 5.22: A sample tool path with combined linear and circular interpola-
tion segments. The actual position and velocities were evaluated from encoder
measurements. 1 count = 0.00127 mm.

238
TECHNOLOGY OF MANUFACTURING AUTOMATION
TABLE 5.2. Circular Interpolation Steps Between Points Ps(180, 0) and Pe(90, −90)
Clock
Feed f(k)
Interpolation
Time
x(k)
y(k)
Pulses k
[counts/s]
Interval Ti (ms)
t [ms]
[counts]
[counts]
0
0.00
0.0000
0
180.00
0.00
1
463.53
0.1158
116
176.02
26.46
2
655.53
0.0480
164
164.44
50.58
3
802.86
0.0368
201
146.28
70.23
4
927.06
0.0310
232
123.14
83.68
5
1,000.0
0.0278
260
97.08
89.72
6
1,000.0
0.0268
286
70.38
87.84
7
1,000.0
0.0268
313
45.43
78.19
8
1,000.0
0.0268
340
24.41
61.63
9
1,000.0
0.0268
367
9.19
39.62
10
1,000.0
0.0268
394
1.11
14.11
11
1,000.0
0.0268
421
0.89
−12.65
12
886.08
0.0284
449
8.55
−38.29
13
755.17
0.0327
482
23.41
−60.54
14
596.17
0.0397
522
44.15
−77.45
15
374.90
0.0553
577
68.95
−87.50
16
0.00
0.1432
720
90.00
−90.00
A = D = 4,000 [counts/s2] with a trapezoidal velocity proﬁle. The minimum
interpolation time is Tmin = 0.002 s in the CNC. The interpolation algorithm is
set as follows:
θs = 0,
θe = θt = 3π/2 = 4.71239,
	θ = 0.298419,
	u = R	θ = 26.857723,
N1 = N3 = f 2/(2A	u) = 5,
N = θt/	θ = 16.
The numerical interpolation results are shown in Table 5.2 and Figure 5.23.
Method II: Varying Displacement–Constant Interpolation Period
The instantaneous angular position of the tool along the circular tool path is
θ(k) = l(k)
R .
(5.94)
The circular interpolation equation derived for the constant displacement
method can be used here as well as follows:
xk+1 = 2xk cos 	θ(k) −xk−1,
yk+1 = 2yk cos 	θ(k) −yk−1,
(5.95)
where
	θ(k) = l(k) −l(k −1)
R
= fsTi + 	1(k −1
2 )
R
→
n = 1, 2, . . . ,
(5.96)

5.5 REAL-TIME INTERPOLATION METHODS
239
-1000
-500
0
500
1000
1500
0
200
400
600
t(ms)
f(counts/s)
fx
fy
f
-100
-50
0
50
100
0
100
200
x(k)
y(k)
Figure 5.23: Circular interpolation example.
Because
k
is
increasing,
	θ(k)
becomes time varying at each interpo-
lation interval. It may be worthwhile to
see whether the equation can be reduced
further for computational efﬁciency.
5.5.3
Quintic Spline
Interpolation within CNC Systems
In
addition
to
linear
and
circu-
lar interpolation, modern CNCs offer
parabolic, helical, and spline interpo-
lations. Instead of breaking sculptured
paths into small linear and circular seg-
ments, it is preferred to move the cutting
tool along the complex path by the use
of the path geometry itself [101]. This
reduces the length of the NC program
and improves the smooth generation of
velocity and acceleration in addition to
the contouring along the path. Real-time
quintic spline interpolation is most use-
ful in high-speed machining of dies and
molds [116], and its implementation in the CNC is presented here.
A series of n knots (P1, P2, . . . , Pn) along the tool path are to be connected by
quintic spline segments with smooth transitions (see Fig. 5.24). A spline seg-
ment Si connecting two knots (Pi, Pi+1) is expressed by a ﬁfth-order polynomial
as follows:
{Sqi} = {Aqi}u5 + {Bqi}u4 + {Cqi}u3 + {Dqi}u2 + {Eqi}u + {Fqi},
(5.97)
where q : {x, y, z}, u ∈[0, l] and {Aqi}, {Bqi}, {Dqi}, {Eqi}, {Fqi} are vectors contain-
ing the coefﬁcients for each coordinate (i.e., q : x, y, z for a three-axis machine),
and u is the spline parameter that changes between zero and spline segment
length li. The number of elements in each vector is therefore equal to the num-
ber of axes in motion. The real-time interpolation algorithm requires the values
of all spline coefﬁcients (A, B, C, D, E, F), the spline length (li), and the feed,
acceleration, and jerk limits of the machine tool drives as input parameters.
The quintic spline interpolation has both off-line and on-line mathematical
steps. First, a quintic spline is ﬁt to a series of knots along a sculptured tool
path as explained in Section 5.3.1, and the coefﬁcients are identiﬁed. The ﬁt-
ting can either be done on the CAD/CAM system during tool path generation,
and the coefﬁcients of the spline can be transferredto CNC via NC codes, or

240
TECHNOLOGY OF MANUFACTURING AUTOMATION
y
P1
P2
Pn-1
Pn
S1
S2
Sn-1
Si+1
Si
Pi-1
Pi
Pi+1
Pi+2
Pi+3
Pi+4
Pi+5
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
Figure 5.24: Spline passing through knots and the use of cubic
polynomials in estimating the ﬁrst and second derivatives.
they can be identiﬁed within the
preprocessing stage of CNC by
using the raw knot coordinates,
supplied within the NC program.
The length of the spline segment
is estimated by approximating
its chord length. The coefﬁcients,
knot coordinates, and approxi-
mated chord length are used to
generate individual axis coordi-
nates in real time by consider-
ing the feed, acceleration, and
jerk limits of the machine tool
drives. Each step in the imple-
mentation is shown in Figure 5.25
and explained in the following
sections.
Evaluation of Quintic
Spline Parameters
Because there are six coefﬁ-
cients, we need six boundary con-
ditions to evaluate them. These
are the coordinates (Pi, Pi+1), ﬁrst derivatives ( dPi
du , dPi+1
du ), and second deriva-
tives ( d2Pi
du2 , d2Pi+1
du2 ) at the two knots (Pi, Pi+1). The ﬁrst and second derivatives of
the quintic spline (5.97) with respect to u are

dSi
du

= 5 {Ai} u4 + 4 {Bi} u3
+ 3

Ci

u2 + 2 {Di} u + {Ei} ,

d2Si
du2

= 20 {Ai} u3 + 12 {Bi} u2
+ 6

Ci

u + 2 {Di} .
(5.98)
The coefﬁcients are evaluated from the following matrix:
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎣
u5
0
u4
0
u3
0
u2
0
u0
1
u5
1
u4
1
u3
1
u2
1
u1
1
5u4
0
4u3
0
3u2
0
2u0
1
0
5u4
1
4u3
1
3u2
1
2u1
1
0
20u3
0
12u2
0
6u0
2
0
0
20u3
1
12u2
1
6u1
2
0
0
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎦
⎧
⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎩
Ai
Bi
Ci
Di
Ei
Fi
⎫
⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎭
=
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
Pi
Pi+1
dPi
du
dPi+1
du
d2Pi
du2
d2Pi+1
du2
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
,
(5.99)

5.5 REAL-TIME INTERPOLATION METHODS
241
Estimation of first and second 
     derivatives at the knots
Evaluation of quintic 
   spline coefficients
Initial parameterization 
Approximation of spline
 segment length 
PREPROCESSING 
Interpolation of composite 
     quintic spline curve
Geometric 
displacement
commands
Velocity 
command
generation
REAL TIME 
Figure 5.25: Preprocessing and real-time process-
ing steps of quintic spline interpolation.
which leads to the solution of six quintic spline coefﬁcients with u0 = 0, u1 = li
as follows:
{Ai} =
1
u5
1
.
6 (Pi+1 −Pi) −3

dPi+1
du + dPi
du

u1 + 1
2

d2Pi+1
du2
−d2Pi
du2

u2
1
/
,
{Bi} =
1
u4
1
.
−15 (Pi+1 −Pi) +

7 dPi+1
du + 8 dPi
du

u1 −

d2Pi+1
du2
−3
2
d2Pi
du2

u2
1
/
,

Ci

=
1
2u3
1
.
20 (Pi+1 −Pi) −4

2 dPi+1
du + 3 dPi
du

u1 +

d2Pi+1
du2
−3 d2Pi
du2

u2
1
/
,
{Di} = 1
2
d2Pi
du2 ,
{Ei} = dPi
du ,
{Fi} = Pi.
To evaluate the coefﬁcients (5.100), the ﬁrst and second derivatives at the
two ends (Pi, Pi+1) of the spline segment must be known.
Identiﬁcation of Derivatives Using Parabolic Approximation
The derivatives at the knots are estimated by approximating a parabola
between three consecutive knots. Consider the following parabola:
{Si(u)} = {ai} u2 +

bi

u + {ci} ,
u ∈[0, Li, Li+1].
(5.100)
passing through three consecutive knots Pi, Pi+1, Pi+2, that is,
⎡
⎢⎣
u2
0
u0
1
u2
1
u1
1
u2
2
u2
1
⎤
⎥⎦
⎧
⎨
⎩
{ai}
{bi}
{ci}
⎫
⎬
⎭=
⎧
⎨
⎩
{Pi}
{Pi+1}
{Pi+2}
⎫
⎬
⎭,
(5.101)

242
TECHNOLOGY OF MANUFACTURING AUTOMATION
where u0 = 0, u1 = Li, and u2 = Li + Li+1. The distance between each knot is
approximated as a line as follows:
Li = |Pi+1 −Pi| =

(xi+1 −xi)2 + (yi+1 −yi)2 + (zi+1 −zi)2
(5.102)
for a three-axis path. The parameters of the parabola can be identiﬁed from
the matrix expression as Eq. (5.101) as
{ai} = (Pi+2 −Pi)(u1 −u0) −(Pi+1 −Pi)(u2 −u0)
$
u2
2 −u2
0
%
(u1 −u0) −
$
u2
1 −u2
0
%
(u2 −u0) ,
{bi} = (Pi+1 −Pi) −
$
u2
1 −u2
0
%
{ai}
(u1 −u0)
,
{ci} = Pi −u2
0{ai} −u0{bi}.
(5.103)
The ﬁrst and second derivatives of the parabola at knot Pi are

dSi(u)
du

= 2{ai}u + {bi},

d2Si(u)
du2

= 2{ai}.
(5.104)
Note that the second derivative has a unique solution, and the ﬁrst deriva-
tive has three solutions using u0 = 0, u1 = Li, and u2 = Li + Li+1 at subsequent
knots. An average value of the ﬁrst derivative can be used for better accuracy
at the mid knots. The solution is unique at the ﬁrst and last knot.
Identiﬁcation of Derivatives Using Cubic Spline Approximation
Experience has indicated that the parabolic approximation of the spline with
a linear chord length assumption does not lead to smooth feed rate changes
along the quintic spline path. Although computationally more demanding, a
cubic spline approximation for the derivatives at the knots and a near–arc
length estimation for the chord length between the knots are found to generate
smoother feed and acceleration during quintic spline interpolation.
Consider a cubic spline passing through the knots Pi, Pi+1, Pi+2, Pi+3 shown
in Figure 5.24:
{Si(u)} = {ai} u3 +

bi

u2 + {ci} u + {di},
u ∈[0, Li + Li+1 + Li+2], (5.105)
where Li is the length of the chord segment between knots (Pi, Pi+1) and is to be
estimated using near–arc length parameterization. The number of elements in
each vector is equal to the number of active axes on the machine. The boundary
conditions at each knot are
{Si(u)} =
⎧
⎪⎪⎨
⎪⎪⎩
Pi,
Pi+1,
Pi+2,
Pi+3,
u0 = 0,
u1 = Li,
u2 = Li + Li+1,
u3 = Li + Li+1 + Li+2.
⎫
⎪⎪⎬
⎪⎪⎭
.
(5.106)

5.5 REAL-TIME INTERPOLATION METHODS
243
By substituting the boundary conditions at four knots (5.106) into the cubic
spline equation (5.105) the spline parameters can be evaluated as follows:
⎡
⎢⎢⎢⎢⎣
u3
0
u2
0
u0
1
u3
1
u2
1
u1
1
u3
2
u3
2
u3
2
1
u3
3
u3
3
u3
3
1
⎤
⎥⎥⎥⎥⎦
⎧
⎪⎪⎨
⎪⎪⎩
{ai}
{bi}
{ci}
{di}
⎫
⎪⎪⎬
⎪⎪⎭
=
⎧
⎪⎪⎨
⎪⎪⎩
Pi
Pi+1
Pi+2
Pi+3
⎫
⎪⎪⎬
⎪⎪⎭
,
(5.107)
which leads to the following solution:
{ai} =
 (Pi+1 −Pi)u2u3(u2 −u3) + (Pi+2 −Pi)u3u1(u3 −u1) + (Pi+3 −Pi)u1u2(u1 −u2)
	c
	
,
{bi} =
(
(Pi+1 −Pi)u2u3
$
u2
3 −u2
2
%
+ (Pi+2 −Pi)u3u1
$
u2
1 −u2
3
%
+ (Pi+3 −Pi)u1u2
$
u2
2 −u2
1
%
	c
)
,
{ci} =
 (Pi+1 −Pi)u2
2u2
3(u2 −u3) + (Pi+2 −Pi)u2
3u2
1(u3 −u1) + (Pi+3 −Pi)u2
1u2
2(u1 −u2)
	c
	
,
{di} = {Pi},
(5.108)
where
	c = u1u2u3

u2
1(u2 −u3) + u2
2(u3 −u1) + u2
3(u1 −u2)

.
(5.109)
The derivatives of the spline at each knot are
dSi
du = 3{ai}u2 + 2{bi}u + {ci}
d2Si
du2 = 6{ai}u + 2{bi}
⎫
⎪⎪⎬
⎪⎪⎭
u ∈[0, u3].
(5.110)
If there are n knots on the spline, the derivatives at the ﬁrst two knots (P1,P2)
and the last two knots are evaluated by the use of the coordinates of the ﬁrst
four (P1, P2, P3, P4) and last four (Pn−3, Pn−2, Pn−1, Pn). The derivatives at the
remaining knots are evaluated for two mid knots of each spline segment that
spans over four points. For example, spline segment Si is used to evaluate
the derivatives at knots Pi+1, Pi+2 in Figure 5.24. This will lead to two values
for each derivative, which are obtained from two consecutive spline segments.
An average of the two derivative values is used in the quintic spline equa-
tion (5.100).
Near–Arc Length Parameterization
The length of a spline segment between the two consecutive knots (Pi, Pi+1)
is better approximated by assuming an arc length instead of a straight line.
When the spline (dSi) is parameterized by its arc length, it must have a unit
tangent along the spline segment. A closed arc length can be found when the
deviation of (dS/du) is minimized. The least-squares solution is formulated as
d
du
 l
0
dS
du −1
2
du = 0.
(5.111)

244
TECHNOLOGY OF MANUFACTURING AUTOMATION
An analytical solution of the length (l) from this equation is difﬁcult. A
reasonable solution can be obtained by considering the midpoint of the chord
as follows:
****
dS
du

u = l
2
**** = 1.
(5.112)
By substituting u = l/2 and quintic spline coefﬁcients (5.100) into the ﬁrst
derivative of quintic spline (Eq. 5.98), we get
****
15
8li
(Pi+1 −Pi) −7
16
dPi+1
du
+ dPi
du

+ 1
32
d2Pi+1
du2
−d2Pi
du2

li
**** = 1. (5.113)
Squaring both sides of the equation leads to
15
8li
	P
2
+
−7
16
dPi+1
du
+ dPi
du
2
+
 li
32	2P
2
−105
64li
	P
dPi+1
du
+ dPi
du
2
−
7
256	2P
dPi+1
du
+ dPi
du

li
+ 15
128	P · 	2P = 1,
where 	P = Pi+1 −Pi and 	2P = d2Pi+1
d2u −d2Pi
d2u . Equation (5.114) is rearranged
as a fourth-order polynomial as follows:
al4
i + bl3
i + cl2
i + dli + e = 0,
(5.114)
where the coefﬁcients are
a =
d2Pi+1
d2u
−d2Pi
d2u
2
,
b = −28
d2Pi+1
d2u
−d2Pi
d2u
 dPi+1
du
+ dPi
du

,
c = −1024 + 196
dPi+1
du
+ dPi
du
2
+ 120 (Pi+1 −Pi)
d2Pi+1
d2u
−d2Pi
d2u

,
d = −1680 (Pi+1 −Pi)
dPi+1
du
+ dPi
du

,
e = 3600 (Pi+1 −Pi)2 .
Equation (5.114) can be solved by an iteration scheme such as the Newton–
Raphson method [86]. Estimation of spline segment length (li) by using the
near–arc length approximation (Eq. 5.114) minimizes the deviation of the unit
tangent vector much better than the linear chord length parameterization;
hence it leads to a smoother feed rate and acceleration during quintic spline
interpolation.

5.6 PROBLEMS
245
Spline interpolation is summarized as follows (Fig. 5.25):
Estimate the derivatives at the knots from Eq. (5.110).
Estimate the chord length (li) from Eq. (5.114).
Evaluate the quintic spline coefﬁcients from Eq. (5.100) by substituting the
chord length (li) and derivatives.
Generate incremental motion commands from the quintic spline expression
(5.97) by varying u = 0, δu, 2δu, . . . , kδu, . . . , Nδu, where δu = li/N. Adjust
the number of interpolation steps and the time intervals depending on
the feed, acceleration, and position feedback measurement resolution as
explained in the linear and circular interpolation algorithms.
Examples. The quintic spline interpolation and jerk-limited trajectory gener-
ation are implemented within an open CNC developed in house [11]. A spiral
tool path has been generated in real time on a two-axis high-speed XY table.
The actual spiral is generated by a pen attached to the stationary spindle, and
resulting feed, acceleration, and jerk on each drive and along the tool path are
shown in Figure 5.26. The beginning of the tool path corresponds to the center
of the spiral, where some transients can be seen on the acceleration and jerk.
A second example is shown in Figure 5.27, where a complex sculptured surface
was represented with a series of quintic splines in a preprocessing stage. The
part is machined on a three-axis milling machine controlled by the open CNC.
The machined part is also shown in Figure 5.27. Both examples use a quintic
spline with jerk-limited trajectory generation.
5.6
PROBLEMS
1. Interpret the following NC program block by block. Indicate G and M
functions for each block, and plot the complete tool center path with the
corresponding coordinates. Mark the corresponding NC blocks on the tool
path segments.
N010 G90 G70 M03 S1200 T05
N020 G00 X0.375 Y0.875
N030 Z0.1
N040 G01 Z-0.1 F10.0 M08
N050 X2.0 F20.0
N060 G02 X2.375 Y0.5 I0.0 J-0.375
N070 G01 Y0.375
N080 X3.625
N090 Y1.25
N100 X3.5
N110 G02 Y1.875 I0.0 J0.375
N120 G01 X3.625
N130 Y2.625
N140 X2.375

246
TECHNOLOGY OF MANUFACTURING AUTOMATION
-30
-20
-10
0
10
20
30
-30
-20
-10
0
10
20
Trajectory with knots
x-axis [mm]
y-axis [mm]
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
-40
-20
0
20
40
Axes Displacement [mm]
x axis
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
-40
-20
0
20
40
time [s]
y axis
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
-200
0
200
Feedrate [mm/s]
x axis
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
-200
0
200
y axis
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
0
50
100
150
time [s]
resultant
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
-5000
0
5000
Accelerations [mm/s  ]
2
x axis
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
-5000
0
5000
y axis
time [sec]
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
-5000
0
5000
resultant
time [s]
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
-2
-1
0
x 10
1
5
Jerk [mm/s  ]
x axis
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
-6
-4
-2
0
2
x 105
y axis
time [s]
3
Figure 5.26: A spiral tool path generated by real-time quintic spline interpolation and corre-
sponding feed rate, acceleration, and jerk values produced by jerk-limited trajectory generation.

5.6 PROBLEMS
247
Figure 5.27: A sample sculptured surface tool path and machined
part using quintic spline interpolator and jerk-limited trajectory
generation.
N150 Y2.5
N160 G02 X2.0 Y2.125 I-0.375 J0.0
N170 G01 X0.375
N180 Y0.875
N190 Z0.15
N200 G00 Z2.0 M09 M05
N210 M30
2. Interpret the following NC program block by block. Indicate G and M
functions for each block, and plot the complete NC tool path. Mark the
corresponding NC blocks on the tool path segments.
N010 G90 G71 M03 S1200 T01
N020 G00 X40.0
N030 G01 X155.0 F360 M08
N040 Y26.0

248
TECHNOLOGY OF MANUFACTURING AUTOMATION
N050 G03 X125.0 Y56.0 I-30 J0
N060 G03 X110.0 Y52.0 I 0 J-30.0
N070 G01 X40.0 Y12.0
N080 Y0
N090 X0
N100 M30
3. Interpret the following NC program block by block. Indicate G and M
functions for each block, and plot the complete NC tool center path with
corresponding coordinates. Mark the corresponding NC blocks on the tool
path segments.
N010 G90 G71 M03 S1200 T01
N020 G00 Z7
N030 G01 Z0 F100 M08
N040 X30
N050 X90 Y10
N060 Y40
N070 G02 G91 X-30 Y30 I0 J30
N080 G01 X-40
N090 G03 G90 X0 Y50 I+10 J-30
N100 G01 Y0
N110 Z7
N120 G00 X30 Y40.0
N140 G01 Z-2.5
N150 Z7
N160 G00 X0 Y0 Z20 M05 M02
4. Sample Interpolation Problems: Assume a machine tool system with equal
acceleration and deceleration rates of A = D = 20,000 count/s2, and a min-
imum interpolation time of Tmin = 0.002 s. The position and feed units are
in counts and counts/s, respectively.
a. Illustrate the working principle of a linear interpolator for an NC block:
N010 G91 G01 X5 Y −3 F6000
Calculate the interpolation parameters and show the resulting tool path
on a graph and in a table. (Note: All units are in counts, and feed is in
counts/s.)
b. Illustrate the working principle of a circular interpolator for an NC block
N010 G91 G02 X60 Y −30 I −60 J −30 F10000
Calculate the interpolation parameters and show the resulting tool path
on a graph and in a table. (Note: All units are in counts, and feed is in
counts/s.)

5.6 PROBLEMS
249
5. A CNC interpolator has been designed to generate trapezoidal feed rate
proﬁles at a constant sampling period of Ts = 0.01 [s]. The acceleration
and deceleration magnitudes have been set to A = D = 250 mm/s2 and
the desired feed rate is f = 10 [mm/s] with starting and end feed rates
of fst = 0, fend = 0, respectively.
a. Using this information, interpolate a circular trajectory with a radius of
R = 0.5[mm] where the starting point is xs = ys = 0. Calculate the accel-
eration (T1), constant feed (T2), and deceleration (T3) time lengths of the
trajectory; process them with respect to the interpolation period; compute
the number of interpolation steps for each section, and interpolate xr and
yr axis reference commands in each section. Please ﬁll in the table with
your results. You need to calculate only one sample per acceleration, con-
stant velocity, and deceleration phases. The center of the circle is given
by (xc = 0.5 mm, yc = 0) and the feed is in CW direction.
b. Depending on the feed rate ( f) and the radius of the circle (R), this cir-
cular tool path is also generating sinusoidal reference commands at dif-
ferent frequencies to x and y axis. Calculate the approximate excitation
frequency (Hz) of this circular tool path (Hint: Do not consider any accel-
eration/deceleration section and assume that the feed rate is achieved
immediately as in a step velocity change).
Sampling
Time
Arc Displacement
Feed Rate
x axis
y axis
Interval (k)
t(s)
s [mm]
ds
dt
xr [mm]
yr [mm]

CHAPTER SIX
DESIGN AND ANALYSIS
OF CNC SYSTEMS
6.1
INTRODUCTION
A diagram of a typical three-axis computer numerically controlled (CNC)
machining center is shown in Figure 6.1. The CNC machining center consists
of mechanical, power electronic, and CNC units. The mechanical unit consists
of beds, columns, spindle assembly, and feed drive mechanisms. Spindle and
feed drive motors and their servoampliﬁers, high-voltage power supply unit,
and limit switches are part of the power electronics group. The CNC consists
of a computer unit and position and velocity sensors for each drive mecha-
nism. The operator enters the numerically controlled (NC) program to the CNC
unit. The CNC computer processes the data and generates discrete numerical
position commands for each feed drive and velocity command for the spindle
drive. The numerical commands are converted into signal voltage (±5 V or
±10 V) and sent to servoampliﬁers of analog drives, or sent numerically to dig-
ital drives that process and amplify them to the high-voltage levels required
by the motors. As the drives move, sensors measure their velocity and position.
The CNC periodically executes digital control laws at ﬁxed sampling intervals
that maintain the feed speed and tool path at programmed rates by using
sensor feedback measurements.
The fundamental principles of designing CNC systems are covered in this
chapter. First, the sizing and selection of drive motors are presented, followed
by physical structure and modeling of a servodrive control system. The math-
ematical modeling and analysis of drive systems are covered both in the time
and frequency domain. The chapter includes sample CNC design examples
from real life.
6.2
MACHINE TOOL DRIVES
The drives in machine tools are classiﬁed as spindle and feed drive mechanisms.
Spindle drives rotate over a wide velocity range (i.e., up to 35,000 rev/min),
whereas the feed drives usually convert angular motions of the motors to lin-
ear traverse speeds, which can range up to 30,000 mm/min. In this text, the
servocontrol of feed drives is covered only, although the material can be eas-
ily extended to spindle drives because the fundamental design and analysis
methods are quite similar.
250

6.2 MACHINE TOOL DRIVES
251
Figure 6.1: Functional diagram of a three-axis CNC machining center.
Let us take one of the feed drives in a machine tool as an example. The feed
drive has the following mechanical components: the table with a workpiece,
the nut, the ball lead screw, the torque reduction gear set, and the servomotor
(see Fig. 6.2). Because of their efﬁcient torque delivery capability at various
speeds, the most common servomotors used in the feed drives are direct current
(dc) motors. However, alternating current (ac) servomotors have also gained
popularity because of their improved performance. The electrical components of
a servomotor system comprise the servomotor ampliﬁer, velocity and position
feedback transducers, a digital computer, and a digital to analog converter
circuit.
6.2.1
Mechanical Components and Torque Requirements
The feed drive motor has to overcome both the static and dynamic loads
in the machine tool. The sources of the static loads are the friction losses in
the guideways and bearings and the cutting forces acting in the feeding direc-
tion of the table. The motor must deliver a high enough dynamic torque to
accelerate the table, workpiece, and leadscrew assembly for a short period
of time until the drive reaches the desired steady-state speed. The dynamic
torque is given as peak torque or peak current delivery with a period of 2 to
3 seconds by the servomotor manufacturers. The motors must have a sufﬁ-
ciently high continuous torque delivery range and a sufﬁcient peak torque and

252
DESIGN AND ANALYSIS OF CNC SYSTEMS
ballscrew
table
rotary 
encoders
linear
encoder
Figure 6.2: A ballscrew-driven machine tool table.
delivery period to overcome the static and dynamic loads, respectively. Estima-
tion of static and dynamic motor loads are brieﬂy introduced in the following
paragraphs.
Static Loads
There are three sources of static loads: the friction in the slideways, frictional
losses in the feed drive bearings, and cutting forces.
The friction in the guideways depends on the type of contact between the
sliding table and the stationary guideway. High friction coefﬁcients are found at
plain lubricated guideways where the metal-to-metal table–guideway surface
contact area is large. The metal contact surface area is reduced in hydrostatic
and hydrodynamic guideways where pressurized lubricant is injected between
the table and the guideway. The friction coefﬁcient is probably smallest in
the guideway designs where roller bearings are used at the guideway–table

6.2 MACHINE TOOL DRIVES
253
assembly (see Fig. 6.2). The torque reﬂected on the feed drive motor due to
friction (Tgf) in the guideways can be estimated as
Tgf = hp
2π μgf [(mt + mw)g + Fz],
(6.1)
where μgf is the friction coefﬁcient on the guideways, mt is the table mass, mw
is the workpiece mass, Fz is the normal cutting force on the table, hp is the
leadscrew pitch length, and g is the gravitational acceleration (9.81 m/s2).
The friction coefﬁcient for plain guideways typically ranges from 0.05 to 0.1
and the vertical cutting force (Fz) can be taken as 10 percent of the maximum
resultant cutting force in a typical vertical milling machine tool [105].
Axial thrust bearings are used at both ends of the leadscrew to absorb the
feed forces and also to guide the screw radially at the same time [109]. Axial
thrust bearings are preloaded in tension to offset the backlash produced by
the thermal expansion of the leadscrew because of friction in the feed drive
assembly. In addition to the preload, the axial thrust bearings are loaded by
the feed forces. The feed forces can be estimated by using the cutting mechanics
relationships given in the metal cutting chapter. The torque lost in the bearings
and preload is estimated as
Tlf = μb
db
2 (Ff + Fp),
(6.2)
where μb is the friction coefﬁcient on bearings (typically approximately 0.005),
db is the mean bearing diameter, Ff is the maximum feed force on the table,
and Fp is the preload force.
The torque reﬂected on the leadscrew shaft due to the cutting forces in the
feed direction is given as
Tf = hp
2π Ff.
(6.3)
The total static disturbance load reﬂected on the leadscrew shaft (Ts) is found
by summing the three torque values calculated in Eqs. (6.1), (6.2), and (6.3) as
follows:
Ts = Tgf + Tlf + Tf.
(6.4)
In the cases where the static torque (Ts) is too large, a gear reduction can be
applied between the motor shaft and the leadscrew. The gear reduction ratio
(rg) is deﬁned as
rg = zl
zm
= nm
nl
,
(6.5)
where zm is the number of teeth on the motor’s gear, zl is the number of teeth
on the feedscrew’s gear, nm is the motor’s angular velocity (rev/min), and nl is
the feedscrew’s angular velocity (rev/min).

254
DESIGN AND ANALYSIS OF CNC SYSTEMS
To reduce the speed, we must have zl > zm, which gives a gear reduction
ratio larger than one (i.e., rg > 1). The reduced reﬂected torque on the motor’s
shaft (Tsr) is found as
Tsr = Ts
rg
.
(6.6)
The CNC designer must select a dc motor that has a larger continuous torque
delivery capacity than the static torque reﬂected on the motor’s shaft.
Dynamic Loads
Machine tools require high-acceleration torque during speed changes. The
reﬂected inertia on the motor’s shaft consists of the inertia of the table, the
workpiece, the leadscrew, the gears, and the motor’s shaft. The moment of
inertia of the table and workpiece reﬂected on the leadscrew shaft is
Jtw = (mt + mw)
 hp
2π
2
.
(6.7)
The moment of inertia of the leadscrew with a pitch diameter of dp is
Jl = 1
2 ml
dp
2
2
,
(6.8)
where ml is the mass of the leadscrew shaft. The total inertia reﬂected on the
motor’s shaft is
Je = Jtw + Jl
r2g
+ Jm,
(6.9)
where Jm is the inertia of the motor’s shaft, and rg ≥1 is the gear reduction
ratio between the feedscrew and motor speeds.
There is another friction torque in the drive system that is proportional
to the velocity, namely, the viscous friction torque. The total dynamic torque
required to accelerate the inertia Je and to overcome viscous friction and the
static loads is given as
Td = Je
dω
dt + Bω + Tsr,
(6.10)
where ω is the angular velocity of the motor and B is the viscous friction
coefﬁcient. Note that, because the cutting is performed at low feeds, the contri-
bution of cutting forces to the static torque (Ts) does not have to be considered
in Eq. (6.10). The peak torque value delivered by the motor must be larger
than the dynamic torque calculated from Eq. (6.10). If a gear reduction is used
between the motor’s shaft and leadscrew, the dynamic torque reﬂected on the
motor’s shaft is reduced; see Eqs. (6.9) and (6.10).
Example. A vertical milling machine is to be retroﬁtted with three identical
dc servomotors. Because the largest load is applied in the longitudinal axis,
the motors are selected according to the torque requirements of this axis. The

6.2 MACHINE TOOL DRIVES
255
following parameters are given for the feed drive axis:
mt = 20 kg – table mass,
m w = 30 kg – maximum mass for the workpiece,
ml = 2 kg – leadscrew mass,
hp = 0.020 m/rev. – pitch of the feedscrew,
d p = 0.020 m – feedscrew diameter,
Jm = 2.875 × 10−4 kg m2 – motor’s shaft, coupling, encoder
and tachonerator inertia,
rg = 1. – gear reduction ratio,
μgf = 0.1 – friction coefﬁcient in the guides,
μb = 0.005 – friction coefﬁcient of bearings,
Fz = 1,000 N – maximum vertical force,
B = 0.005 Nm/(rad/s) – viscous damping coefﬁcient,
Ff = 5,000 N – maximum feeding force,
Fp = 2,000 N – preload force in thrust bearings,
al = 5 m/s2 – desired acceleration of the table.
Static Torque
The static torque contributed by the friction in the guideways (Eq. 6.1) is
Tgf = 0.10.020
2π
[(20 + 30)9.81 + 1,000] = 0.4744 Nm.
The torque lost in the bearings due to friction (Eq. 6.2) is
Tlf = 0.0050.02
2
(5,000 + 2,000) = 0.3500 Nm.
The torque required to overcome feed forces (Eq. 6.3) is
Tf = 0.020
2π
5,000 = 15.90 Nm.
Thus, the total required continuous torque from the dc motor (Eq. 6.4) is
Tsr = 0.4744 + 0.35 + 15.90
1.0
= 16.72 Nm.
Dynamic Load
The moment of inertia of the table and workpiece reﬂected on the feedscrew
shaft (Eq. 6.7) is
Jtw = (20 + 30)
0.020
2π
2
= 5.066 · 10−4 kg m2.
The leadscrew’s inertia (Eq. 6.8) is
Jl = 1
22.0
0.02
2
2
= 1 · 10−4 kg m2.

256
DESIGN AND ANALYSIS OF CNC SYSTEMS
Because the motor is directly connected to the leadscrew of the machine (i.e.,
rg = 1.0), the total inertia reﬂected on the motor’s shaft is found (Eq. 6.9) to be
Je = 5.066 · 10−4 + 1 · 10−4 + 2.875 · 10−3 = 8.9411 · 10−4 kg m2.
The angular acceleration of the motor’s shaft is
dω
dt =
al
(hp/2π) =
5
0.0202π = 1,570 rad/s2.
The dynamic torque required is found from Eq. (6.10) as follows:
Td = 8.9411 · 10−4 kg m2 × 1,570 rad/s2 +0.005 Nm/(rad/s)
×
0.5
0.0202π(rad/s) + 16.72 Nm = 18.90 Nm.
Thus the selected servomotor must be able to attain 18.90 Nm dynamic torque
for a period of acceleration (0.1 s).
6.2.2
Feedback Devices
There are two basic feedback devices in the feed drive control system: posi-
tion and velocity feedback transducers. Tachometers are used as the velocity
transducers and encoders are used as the position feedback transducers in
general [63].
Tachometers
A tachometer is a small permanent magnet dc motor mounted directly on the
rear of the servomotor’s shaft. The tachometer produces a voltage proportional
to the actual velocity of the motor shaft. It has a factory set constant and an
adjustable gain that enables tuning of the velocity feedback loop. The transfer
function between the actual motor velocity and the tachometer circuit output
is given as
Vt(s)
ω(s) = Tg · Hg,
(6.11)
where Vt(s) is the output voltage of the tachometer circuit, ω(s) is the actual
angular velocity of the motor shaft, Hg is the tachometer constant, Tg is the
adjustable tachometer gain, and s is the Laplace operator.
Encoders
Encoders are used as digital position measurement transducers in servo-
drives. The encoder is based on the principle of emitting light with photodi-
odes. The encoder, which can be a disk or linear scale type, contains bands
of dark and transparent segments. Light is transmitted from one side of the
transparent band to the other side where there is a photodiode receiver. The
photodiode gives a logic signal (i.e., a binary code) depending on the num-
ber of dark and transparent bands detected at incremental positions of the

6.2 MACHINE TOOL DRIVES
257
encoder. Linear encoders are used to measure the actual position of the table,
whereas rotary shaft encoders are used to measure the angular position of the
motor’s shaft. In precision machines, a linear encoder may be used for more
accurate measurement of the actual position of the table. However, if there
is an unmodeled backlash in the feed drive system, the table-mounted linear
encoder may produce a limit cycle in the position control servo. Because disk
encoders are mounted directly on the motor shaft, they do not feel the backlash
and, therefore, they do not produce a nonlinear limit cycle. Manufacturers of
servomotors usually provide tachometer and shaft encoders installed on the
rear of the motor’s shaft in the factory. Encoder is provided with a line den-
sity and the type of sensing decoder used. For example, a shaft encoder with
1,000 line density and a quadrature sensing decoder circuit gives 4,000 counts
or impulses per revolution of the shaft. Encoders are simply represented as a
gain Ke (counts/rad or counts/mm) in position control loop analysis.
Example. A 1,000 line encoder with a quadrature sensing decoder is used as
a position feedback transducer in a feed drive control system. The motor is
directly connected to the leadscrew, which has a pitch length of 5.08 mm. The
encoder gain is calculated as
Ke = 4 · 1,000
2π
(counts/rad)
or
Ke = 5.08
4,000 = 0.00127 mm (0.00005 in)/count.
Thus, one count signal sent by the encoder corresponds to 0.00127 mm linear
movement of the table. Henceforth, count is used to represent the basic length
unit of the position control servosystem.
6.2.3
Electrical Drives
The feed drives can be powered by either electrical motors (step, dc, or ac
motors) or hydraulic motors. The type of motor used depends very much on the
torque delivery and time response requirements of the machine tool or robot
drive.
Hydraulic motors are used when a wide torque range and rapid response are
required from a drive system. Rotary hydraulic motors are used in heavy-duty
industrial robots, lathes, and milling machines. Linear hydraulic motors with
piston-displacement units are used in grinding machines, planers, and shapers
where reciprocating motion is required. The disadvantages of hydraulic drives
include leakage, low efﬁciency, sensitivity to dirt in the supply oil, and high
maintenance costs.
Electrical stepping motors are not common in feed drive systems where the
cutting load is high. They are used without feedback devices. The step motor
is controlled with angular step motions that are sent in the form of control
pulses from a computer. At startups and braking, if the required dynamic
torque is large, the step motor may slip some of the position control pulses.

258
DESIGN AND ANALYSIS OF CNC SYSTEMS
Va
+
_
_
+
I
R
L
ω
a
a
a
,B
Je
Ts
Armature
voltage
Inductance
Resistance
Equivalent inertia
and viscous friction
Disturbance
torque
Figure 6.3: Electrical diagram of a dc motor.
Because
there
is
no
feedback
device, the accuracy in machining
is sacriﬁced. Light demonstration
CNC machines and material han-
dling units usually use electrical
stepping motors.
The use of alternating current
(ac) motors is also common in
CNC machines. The speed of the
ac motor is controlled by vary-
ing the frequency of the supply
voltage. The fundamental prob-
lem has been to design the low-
cost inverters used to vary the frequency of the supply voltage. However, recent
microprocessor technology has enabled the calculation of ﬁring frequencies
used in the inverter.
The most common motors used in the feed drives are direct current (dc)
motors because they allow a wide range of operating speeds with the sufﬁciently
large torque delivery required by machine tools and robots. In the next section,
analysis of a permanent magnet dc motor is explained to provide a detailed
understanding of the control of dc motors. However, the analysis and modeling
procedures are similar for both dc and ac servomotors.
6.2.4
Permanent Magnet Armature-Controlled dc Motors
An electrical diagram of a permanent magnet dc motor is shown in Fig-
ure 6.3. The speed of the dc motor is controlled by feeding a dc voltage Va to the
armature (rotor) of the motor. The dc voltage produces a variable dc current Ia
on the armature, which in turn creates a magnetic ﬁeld between the rotor and
stationary stator. Note that the current drawn by the armature can not exceed
the maximum current supply capacity of the power ampliﬁer. The current limit
is treated as a nonlinearity in the dc motor control system. It is evident that
peak current will be drawn for a short period during acceleration and braking of
the motor. Peak current and its duration time are given by the ampliﬁer manu-
facturers. Magnetic ﬂux is constant, whereas the armature voltage is variable
in armature-controlled dc motors. The magnetic ﬁeld produces a torque, which
is used for rotating the rotor connected to the motor’s shaft. In dc motors, a
back electromotor voltage (e.m.v.) Vb, which is proportional to the rotor speed,
is produced in the rotor circuit.
The following fundamental dynamic equations govern the motion of dc
motors.
The applied armature voltage Va is derived by applying Kirchoff ’s law to the
motor’s circuit as follows:
Va(t) = RaIa(t) + La
dIa(t)
dt
+ Kbω(t),
(6.12)

6.2 MACHINE TOOL DRIVES
259
where ω is the angular velocity (rad/s), Ia is the armature current (A), Ra is the
armature resistance (), La is the armature inductance (H), Kb is the motor’s
voltage (e.m.v.) constant (V/(rad/s)), and t is the time (s).
The magnetic ﬁeld produces a useful motor torque Tm, which is proportional
to the armature current Ia as follows:
Tm(t) = Kt Ia(t).
(6.13)
The useful torque produced by the motor is spent in accelerating the reﬂected
inertia on the motor’s shaft, overcoming the friction in the motor’s bearings and
guideways, and resisting against feed cutting forces and friction loads reﬂected
as a disturbance torque on the motor’s shaft. Thus,
Tm(t) = Je
dω(t)
dt
+ B ω(t) + Ts(t),
(6.14)
where Je is the reﬂected inertia on the motor shaft, B is the equivalent friction
coefﬁcient (viscous damping), and Ts is the static disturbance torque reﬂected
on the motor shaft.
Note that the disturbance torque consists of cutting and friction components.
The Coulomb friction torque opposes the velocity (ω). The direction of the veloc-
ity is considered in the block diagram (Fig. 6.4) using the sign function sgn [4].
In Eq. (6.14) the viscous friction is assumed to be proportional to the speed.
The behavior of the friction torque varies depending on the type of guideways
used in the machine tool. The viscous friction torque is linearly proportional to
the velocity, and the proportionality constant is B.
Note that a Coulomb-type sticking friction is usually dominant in feed drives.
Coulomb friction demands constant friction torque (or current) and is indepen-
dent of the feeding velocity variation. The Coulomb friction torque and viscous
friction coefﬁcient can be identiﬁed from Eq. (6.14) by measuring the armature
current at various steady-state feeding velocities (i.e., dω/dt = 0). The dc com-
ponent of the resulting curve gives the constant current drawn by Coulomb
friction, and the slope of the linear component is the viscous damping coefﬁ-
cient (B). To avoid nonlinearity in the system, Coulomb friction is disregarded
and an average viscous damping value is assumed.
Taking the Laplace transforms of Eqs. (6.12), (6.13), and (6.14) gives
Ia(s) = Va(s) −Kb ω(s)
La s + Ra
,
Tm(s) = Kt Ia(s),
ω(s) = Tm(s) −Ts(s)
Je s + B
.
(6.15)
These equations have physical interpretations. The transfer function of the
armature current is derived using the error voltage as an input. The error volt-
age is the difference between the supplied reference armature voltage Va and
back e.m.v., which acts like a feedback signal. The resulting current produces

260
DESIGN AND ANALYSIS OF CNC SYSTEMS
crestclr.gif
Sg
Vc
K v(s)
K a
Tg(s)
H g
K b
Ts
Tm
K t
Fc
Tc
T f
sgn( ω ) .
ω
K (s)
i
1
+
L  s        a
R
Je s
B
1
+
K f
K p z+a
z+b
K d
K e
s
1-e
T
s
s
Tacho-Generator
x r (counts)
e
Digital
Filter
-
Zero
Order
Hold
D/A
-
-
-
I
-
+
x a (counts)
D/A
+
[v]
[v]
[v]
[A]
[A]
-
+
-
T
[counts]
Up-Down
counter
-
Discrete
Position
Command
Digital
Control
Law
Signal
Gain
Amplif.
Current
Amplif.
+
-
Current 
Sensor 
Gain
PWM
Amplif.
Tachogenerator
Velocity feedback
Electrical
Winding 
of Motor
  Back 
  e.m.f
constant
Cutting torque
   Friction
Equivalent
Mechanical
Inertia
Motor
Const.
[A]
[Nm]
[rad/s]
[rad/s]
+
-
Optical
Encoder
[counts]
+
COMPUTER
PHYSICAL SYSTEM
[V]
[V]
[V]
Position feedback
Va
a
a
(a)
(b)
Figure 6.4: Block diagram of a feed drive servocontrol system. (a) Physical parts. (b) Block
diagram.
a useful torque Tm(s). A portion of this torque is spent in overcoming the dis-
turbance torque Ts(s). The remaining torque is used to accelerate the inertia
and overcome the viscous friction torque, which is proportional to the velocity.
The two important design parameters are
τe = La
Ra
,
τm = Je
B ,
(6.16)
where τm is the mechanical time constant and τe is the electrical time constant
of the dc motor. Both time constants are provided by the motor’s manufacturer
by considering only the inertia of the motor’s shaft and the friction in the
motor’s shaft bearings. The mechanical time constant of the dc motor obviously
increases when the reﬂected inertia of the table and leadscrew assembly are
taken into account.
dc Motor Power Ampliﬁers and Velocity Control Loop
The armature voltage is supplied by a power ampliﬁer. The power ampliﬁer
receives a large constant dc voltage from a transformer, which converts ac line
voltage to the desired dc voltage level. The power ampliﬁer illustrated in this
text is a pulse width modulated (PWM), current-controlled ampliﬁer. However,
the operation of other types of power ampliﬁers are quite similar.
The block diagram of a complete velocity control loop is shown in Figure 6.4.
The power ampliﬁer receives a velocity command signal Vc from the digital to

6.2 MACHINE TOOL DRIVES
261
analog converter output of the digital controller. The velocity command signal
is ﬁrst buffered with an adjustable differential preampliﬁer represented by a
gain Sg. The output of Sg is compared with an actual velocity signal measured
by the tachometer feedback unit. The resulting velocity error signal (in volts)
is converted to a demand current by the current ampliﬁer, which has a gain
of KI. Most current ampliﬁers use an armature current feedback signal to
improve the dynamic response of the motor. The feedback current signal is
pulled from a current sense coupler and compared with the demand current.
The PWM circuit generates a varying sawtooth shape dc voltage at certain
frequency. The PWM frequency is usually higher than 10 kHz. Low-frequency
PWM switching signals (up to 6 kHz) generate irritating audible noise. The
current error signal is modulated by the PWM circuit, which is modeled as
a gain Kv. The resulting dc voltage becomes an ON–OFF type rectangular
waveform. The average voltage level of the waveform (dc value) is used as
armature voltage Va in the calculations. The complete block diagram of the
ampliﬁer, motor, and tachometer feedback unit are shown in Figure 6.4a.
The block diagram is organized with temporary state variables to illustrate
the derivation of the velocity loop transfer function. The following relationships
can be expressed from the block diagram by the use of temporary states, V1,V2,
and V3 as follows:
V1(s) = S gVc(s) −TgHgω(s),
V2(s) = KIV1(s) −KaIa(s)
= KIS gVc(s) −KITgHgω(s) −KaIa(s),
V3(s) = KvV2(s) −Kbω(s)
= KvKIS gVc(s) −(KvKITgHg + Kb)ω(s) −KvKaIa(s).
The transfer function between the current and state V3 is
Ia(s) =
V3(s)
Las + Ra
.
Substituting the value of V3 into the current expression yields
Ia(s) =
KvKIS g
Las + Ra + KvKa
Vc(s) −KvKITgHg + Kb
Las + Ra + KvKa
ω(s).
(6.17)
The motor’s mechanical transfer function (see Eq. 6.15) is
ω(s) = Tm(s) −Ts(s)
Jes + B
or
ω(s) =
Kt
Jes + BIa(s) −
1
Jes + BTs(s).
(6.18)
Substituting the current expression (6.17) into Eq. (6.18) yields the transfer
function between the output velocity ω and the velocity command input voltage

262
DESIGN AND ANALYSIS OF CNC SYSTEMS
Vc and the disturbance torque Ts as follows:
ω(s) =
K1
s2 + K2 s + K3
Vc(s) −(1/Je)[s + (Ra + KvKa)/La]
s2 + K2 s + K3
Ts(s),
(6.19)
where
K1 = KtS gKIKv
LaJe
,
K2 = B
JE
+ Ra + KvKa
La
,
K3 = B (Ra + KvKa) + Kt(Kb + HgTgKvKI)
Je La
.
The feed drive servovelocity controller is designed to have a fast rise time
with zero overshoot at step changes in the velocity. Let us analyze the veloc-
ity loop as a function of the velocity command input voltage Vc. The transfer
function (Eq. 6.19) can be expressed as
ω(s)
Vc(s) =
K1
s2 + 2 ξ ωn s + ω2n
.
(6.20)
Here, the natural frequency (wn) and damping ratio (ξ) of the velocity loop are
deﬁned as follows:
ωn = √K3
[rad/s],
ξ =
K2
2√K3
< 1,
(6.21)
where K1, K2 > 0. The time domain step response of this underdamped velocity
servo is expressed as
ω(t) = Vc · K1
K3

1 −
e−ξωnt

1 −ξ 2 · sin(ωd t + φ)
	
,
(6.22)
where damped natural frequency ωd and phase shift φ are deﬁned as
ωd = ωn

1 −ξ 2,
φ = tan−1

1 −ξ 2
ξ

.
The variable gains of the ampliﬁer (i.e., S g, Tg, KI, Kv) are tuned to have
a desired velocity loop gain and step response characteristics as shown in
Figure 6.5. When a unit step input (i.e., Vc = 1 V) is applied on the ampliﬁer
input port, the maximum response of the velocity loop occurs at time tp where
the derivative of the velocity is zero (i.e., dω(t)/dt = 0). At the ﬁrst overshoot,
the following expression can be obtained from the time derivative of Eq. (6.22):
tp = π
ωd
.
(6.23)

6.2 MACHINE TOOL DRIVES
263
tp
tr
τ
0.63
1.0
Mp
0
Unit step input
Step response
Time (s)
Amplitude
Figure 6.5: Step response of a second-order underdamped
system (τ = time constant, tp = peak time, tr = rise time,
Mp = overshoot).
Typical design values for a feed
drive servo may be a damping
ratio of ξ = 0.707 and a peak time
of tp = 10 ms. The natural fre-
quency ωn can be estimated from
Eq. (6.23) as follows:
ωn =
π
tp
√
1−ξ 2
= 444 rad/s = 70 Hz.
The corresponding servoparame-
ters are identiﬁed by substitut-
ing the values of ξ and ωn into
Eq. (6.21). It is fairly obvious that
one can not demand a higher nat-
ural frequency than the maxi-
mum capacities of the motor and
ampliﬁer gains can provide.
6.2.5
Position Control Loop
The position loop consists of an up–down counter, an encoder, a digital
compensation ﬁlter, and a digital to analog converter.
Up–Down Counter
The up–down counter register receives both command and measured posi-
tion counts. The position commands increment while the encoder feedback
counts decrement the contents of the up–down counter. The instantaneous
content of the counter represents the accumulated or integrated position error
within digital servocontrol interval T. The block diagram representation of the
up–down counter is
Xa(s)
ω(s) = Ke
s .
(6.24)
Digital Compensation Filter
The contents of the up–down counter, the position error, is sampled every T
seconds. The discrete position error E(k) is the difference between the reference
and actual position of the table as follows:
E(k) = Xr(k) −Xa(k),
(6.25)
where Xr(k) is the discrete reference position, Xa(k) is the discrete actual posi-
tion, and z is the discrete forward time shift operator.

264
DESIGN AND ANALYSIS OF CNC SYSTEMS
The error is passed from a digital ﬁlter, which has a typical transfer function
form of
D(z) = Kp
z + a
z + b,
(6.26)
where Kp is the position control ﬁlter gain, a is the ﬁlter’s zero, and b is the
ﬁlter’s pole.
The digital ﬁlter is programmable and resides in the servomotion control
computer. The ﬁlter’s parameters are tuned to provide a desired transient
response of the position control system.
Digital to Analog (D/A) Converter
The motion control computer sends the digital ﬁlter’s output to a D/A con-
verter circuit of the motion control computer. The D/A converter is modeled as
a zero-order hold (ZOH) and a gain Kd. The D/A gain is found as
Kd = voltage range of the D/A chip
2nb
,
(6.27)
where nb is the number of bits used by the D/A chip in converting a binary
number to analog voltage. For example, a 12-bit D/A converter chip with ±10 V
voltage range has a gain of
Kd = 20 V
212 = 0.00488 (V/count).
6.3
TRANSFER FUNCTION OF THE POSITION LOOP
The block diagram of the complete position control system can be organized as
shown in Figure 6.4. The system has continuous and discrete components. The
continuous part of the system’s transfer function is represented in the Laplace
domain as
Gc(s) =
K1
s2 + K2 s + K3
Ke
s .
(6.28)
The velocity control signal Vc of the digital motion control unit is applied to
the power ampliﬁer at T second intervals via a D/A converter with a gain of Kd.
The ZOH equivalent of the Gc(s) for a 1-ms sampling interval is [81] as follows:
Gc(z) = Kd(1 −z−1) Z
Gc(s)
s
	
,

6.3 TRANSFER FUNCTION OF THE POSITION LOOP
265
T
-
+
Xr
[counts]
K
z+a
z+b
p
G   ( z )
c
Xa
[counts]
Figure 6.6: Discrete time position control loop.
which, after taking the z transform, becomes
Gc(z) = KdK1Ke
K3
b2z2 + b1z + b0
(z −1)(z2 + a1z + a0),
(6.29)
where the forward operator is equivalent to z = esT. The derived expressions
for the parameters of Gc(z) are given as
b2 = T −1
ωd
e−ξωnT sin(ωdT)
−K2
K3

1 −e−ξωnT
ξωn
ωd
sin(ωdT) + cos(ωdT)
	
,
b1 = 2 e−ξωnT
sin(ωdT)
ωd
−T cos(ωdT)
	
+ K2
K3
(1 −e−2ξωnT ) −2 e−ξωnT sin(ωdT) K2
K3
ξωn
ωd
,
b0 = Te−2ξωnT −1
ωd
e−ξωnT sin(ωdT)
+ K2
K3

e−2ξωnT + e−ξωnT
ξωn
ωd
sin(ωdT) −cos(ωdT)
	
,
a1 = −2 e−ξωnT cos(ωdT),
a0 = e−2ξωnT.
The reduced block diagram of the equivalent discrete position control system
is shown in Figure 6.6. The closed-loop transfer function of the complete feed
drive control system is derived as follows:
Gcl(z) = Xa(k)
Xk(z) =
D(z) Gc(z)
1 + D(z)Gc(z),
or
Gcl(z) = Kcl
z3 + β2z2 + β1z + β0
z4 + α3z3 + α2z2 + α1z + α0
.
(6.30)

266
DESIGN AND ANALYSIS OF CNC SYSTEMS
The parameters of the closed-loop transfer function Gcl(z) are given as follows:
β2 = b1 + a b2
b2
,
β1 = b0 + a b1
b2
,
β0 = a b0
b2
,
α3 = K1 Ke Kd Kp
K3
b2 + b + a1 −1,
α2 = K1 Ke Kd Kp
K3
(b1 + a b2) + b(a1 −1) + a0 −a1,
α1 = K1 Ke Kd Kp
K3
(b0 + a b1) + b(a0 −a1) −a0,
α0 = K1 Ke Kd Kp
K3
· a · b0 −ba0,
Kcl = K1 Ke Kd Kp b2
K3
.
The transfer function (Eq. 6.30) can be expressed by the use of the backward
time shift operator z−1 by multiplying both numerator and denominator by z−4.
This gives
Gcl(z−1) = Kcl
z−1 + β2z−2 + β1z−3 + β0z−4
1 + α3z−1 + α2z−2 + α1z−3 + α0z−4 .
(6.31)
Note that the z−1 backward time shift operator acts on the discrete signal as
z−1x(kT) = x[(k −1)T],
where T is the discrete sampling time interval and x(kT) is the discrete value
of x at sampling interval number k.
For any given discrete time input Xr(kT), the position response Xa(kT) can
be found by rearranging the transfer function Gcl(z−1) as follows:
Xa(k) = −(α3z−1 + α2z−2 + α1z−3 + α0z−4)Xa(z−1)
+ Kcl · (z−1 + β2z−2 + β1z−3 + β0z−4)Xr(z−1).
(6.32)
The discrete time response of the position servo can be simulated by tak-
ing the inverse z−1 transform of Eq. (6.32). The resulting difference equation
contains the discrete history of input and the past history of output position
values.
Note that the position control loop can be analyzed in the continuous time (s)
domain as an alternative to the discrete time (z) domain analysis. However, this
approach requires approximating the digital ﬁlter (D(z)) in the s domain. One
of the widely used approximations is z = (1 + sT/2)/(1 −sT/2), which is called

6.3 TRANSFER FUNCTION OF THE POSITION LOOP
267
Tustin’s bilinear transformation. The corresponding digital ﬁlter becomes
D(s) = K′
p
s + a′
s + b′ ,
(6.33)
where
K′
p = Kp
1 −a
1 −b ,
a′ = 2
T
1 + a
1 −a ,
b′ = 2
T
1 + b
1 −b
or
Kp = K′
p
1 −b′
1 −a′ ,
a = Ta′ −2
Ta′ + 2 ,
b = Tb′ −2
Tb′ + 2.
In this case, the closed-loop transfer function of the position loop in Laplace
domain becomes
Gcl(s) =
D(s)KdGc(s)
1 + D(s)KdGc(s).
(6.34)
Following Error in CNC Systems
There are two critical performance requirements from the feed drive servo.
The ﬁrst is to obtain a smooth transient response to avoid an oscillatory tool
path during velocity changes; the second is to minimize the steady-state posi-
tion error, the following error, to achieve precision multiaxis contouring. At
steady-state contouring with a feeding velocity fc (counts/s), the reference posi-
tion is expressed as a ramp type input as follws:
Xr(kT) = fc · kT,
(6.35)
where k is the sampling counter. In the z domain, the ramp command is
expressed as
Xr(k) = fc
Tz
(z −1)2 .
(6.36)
The corresponding following error is then derived as
ess = lim
z→1
fcT
(z −1)D(z)Gc(z).
(6.37)
Substituting Eqs. (6.26), (6.29), and (6.35) into Eq. (6.37) gives the paramet-
ric expression for the following error in the feed drives as
ess =
fcK3(1 + b)
K1KeKpKd(1 + a).
(6.38)
It is evident that the higher the open-loop transfer function gain is (i.e.,
D(z)Gc(z)), the smaller the following error will be, which is desired for accurate
multiaxis contouring operations. However, high open-loop gain is limited by
the inertia of the mechanical drive system and the limits of motor torque
and ampliﬁer. The control engineer must tune the digital control (i.e., ﬁlter)
parameters to achieve an optimum feed drive servoresponse without causing
any oscillation or overshoot.

268
DESIGN AND ANALYSIS OF CNC SYSTEMS
The steady-state error can also be estimated by the use of the continuous
time domain transfer functions as
ess = lim
s→0 s
fc
s2[D(s)KdGc(s)],
(6.39)
where Gc(s) and D(s) are given in Eqs. (6.28) and (6.33).
6.4
STATE SPACE MODEL OF FEED DRIVE
CONTROL SYSTEMS
A state space model for the feed drive servo is used to verify the derived model by
using experimentally measured time domain response data. The servo is again
divided into continuous and discrete sections for state space modeling [80].
The continuous part of the system consists of the velocity control loop
(Eq. 6.28) and the up–down counter (Eq. 6.24). Three states – the armature
current Ia, the angular velocity ω, and the actual position Xa – are derived as
follows: From Figure 6.4, the armature voltage can be expressed as
Va = Kv[KI(SgVc −TgHgω) −KaIa].
(6.40)
Substituting Eq. (6.12) into (6.40) yields
dIa
dt = −KvKa + Ra
La
Ia −Kb + KvKITgHg
La
ω + KvKISg
La
Vc.
(6.41)
Eliminating the motor torque Tm by substituting Eq. (6.13) into Eq. (6.14) gives
dω
dt = Kt
Je
Ia −B
Je
ω −1
Je
Ts.
(6.42)
The inverse Laplace transform of the transfer function of the up–down counter
and the encoder (Eq. 6.24) gives
dXa(t)
dt
= Ke · ω(t).
(6.43)
The state equations (6.41–6.43) can be organized in a standard state space form
as follws:
˙xc(t) = Ac xc(t) + Bc uc(t),
(6.44)
where the state vector (xc(t)) and the input vector (uc(t)) are deﬁned as
xc(t) =
⎡
⎣
Ia(t)
ω(t)
Xa(t)
⎤
⎦,
uc(t) =
Vc(t)
Ts(t)
	

6.4 STATE SPACE MODEL OF FEED DRIVE CONTROL SYSTEMS
269
and Ac and Bc are constant matrices as follows:
Ac =
⎡
⎢⎢⎢⎢⎢⎣
−KvKa + Ra
La
−Kb + KvKITgHg
La
0
Kt
Je
−B
Je
0
0
Ke
0
⎤
⎥⎥⎥⎥⎥⎦
,
Bc =
⎡
⎢⎢⎢⎢⎢⎣
KvKISg
La
0
0
−1
Je
0
0
⎤
⎥⎥⎥⎥⎥⎦
.
The state equation (6.44) represents the continuous part of the feed drive
servosystem, which has the following discrete equivalent solution for an obser-
vation interval of T [80]:
xc(k + 1) = (T) xc(k) + H(T) uc(k),
(6.45)
where the state and input vectors at sampling interval k are deﬁned as
xc(k) =
⎡
⎣
Ia(k)
ω(k)
Xa(k)
⎤
⎦,
uc(k) =
Vc(k)
Ts(k)
	
,
(T) = eAcT =
⎡
⎣
φ11
φ12
φ13
φ21
φ22
φ23
φ31
φ32
φ33
⎤
⎦,
H(T) =
 T
0
eActdt · Bc =
⎡
⎣
h11
h12
h21
h22
h31
h32
⎤
⎦.
The matrix (T) is computed from the eigenvalues of the Ac matrix or its
Taylor series expansion for the discrete-time equivalent of the continuous-time
system. Because the sampling interval (T) is small, the ﬁrst three terms of the
following Taylor series approximation may be sufﬁcient for most applications:
(T) = eAcT = [I] + [A]T + [A]2 T2
2! + · · · .
(6.46)
The discrete-time components of the position control loop consists of digital
ﬁlter D(z) and D/A converter gain Kd. The velocity command signal can be
expressed in the z domain as
Vc(k) = Kp
z + a
z + b · Kd · [Xr(k) −Xa(k)].
(6.47)
The equation can be rearranged as
Vc(k) = Kp Kd [Xr(k) −Xa(k)] + Vd(k),
(6.48)

270
DESIGN AND ANALYSIS OF CNC SYSTEMS
where
Vd(k) = Kp Kd
a −b
z + b [Xr(k) −Xa(k)].
(6.49)
The new variables Vc and Vd can be treated as a fourth state. After rearrang-
ing Eqs. (6.49) and (6.47) and taking their inverse z transforms, we obtain the
following discrete-time state equations:
Vd(k + 1) = −b Vd(k) + Kp Kd (a −b) [Xr(k) −Xa(k)],
Vc(k) = Kp Kd [Xr(k) −Xa(k)] + Vd(k).
(6.50)
The discrete-time state equation (6.50) can be combined with the state equation
(6.45), which represents the discrete-time equivalent of the continuous part of
the feed drive servo. An algebraic rearrangement yields the following complete
state equations for the feed drive servo:
x(k + 1) = G(T) · x(k) + (T) · u(k),
y(k) = Cs · x(k) + Ds · u(k),
(6.51)
where the state, input, and output vectors are deﬁned, respectively, as
x(k) =
⎡
⎢⎢⎣
Vd(k)
Ia(k)
ω(k)
Xa(k)
⎤
⎥⎥⎦,
u(k) =
Xr(k)
Ts(k)
	
,
y(k) =
⎡
⎢⎢⎣
Vc(k)
Ia(k)
ω(k)
Xa(k)
⎤
⎥⎥⎦.
The state matrix G(T), input matrix (T), output matrix Cs and transmission
matrix Ds are deﬁned in order as follows:
G(T) =
⎡
⎢⎢⎣
−b
0
0
−KpKd(a −b)
h11
φ11
φ12
φ13 −h11KpKd
h21
φ21
φ22
φ23 −h21KpKd
h31
φ31
φ32
φ33 −h31KpKd
⎤
⎥⎥⎦,
(T) =
⎡
⎢⎢⎣
KpKd(a −b)
0
h11KpKd
h12
h21KpKd
h22
h31KpKd
h32
⎤
⎥⎥⎦,
Cs =
⎡
⎢⎢⎣
1
0
0
−KpKd
0
1
0
0
0
0
1
0
0
0
0
1
⎤
⎥⎥⎦,
Ds =
⎡
⎢⎢⎣
KpKd
0
0
0
0
0
0
0
⎤
⎥⎥⎦.
The output vector y(k) gives access to three useful dynamic parameters in the
feed drive servo; namely, the armature current, the angular velocity, and the
position of the table for a given position command and applied cutting torque.
Other states in the control system can be easily found by multiplying them
with the appropriate gains according to the block diagram shown in Figure 6.4.

6.4 STATE SPACE MODEL OF FEED DRIVE CONTROL SYSTEMS
271
Example: Feed Drive Control System Design for a Vertical Milling Machine. A three-
axis vertical research milling machine was retroﬁtted at the author’s labora-
tory at the University of British Columbia. The retroﬁtted machine tool has
a 5 kW ac motor connected to a spindle gear box. The three feeding axes (x,
y, and z) of the machine have recirculating ballscrew drives with 60-, 40-,
and 12-cm travel limits. All three axes are driven by permanent magnet dc
servomotors powered by PWM ampliﬁers. The motors, which are directly con-
nected to the leadscrew shafts, have an 11 ms mechanical (without table) time
constant and a 5 ms electrical time constant, and the ampliﬁers have 30 A
peak and 15 A continuous current delivery capacity. The ampliﬁers are the
same type as explained in Section 6.2.4.
A personal computer (PC) is used as a master CNC. A 32-bit digital signal-
processing board (DSP) with a three-axis motion control module is used to con-
trol positions of the three linear axes of the machine. Both cards reside in the
PC bus. The motion control card has 24-bit programmable digital input/output
(I/O) lines for logic control functions. Coolant, spindle, travel limit, emergency
relay, etc. logic control signals are wired to the I/O lines to control auxiliary
functions of the machine tool. The real-time linear, circular, and spline inter-
polation algorithms, and the position control of all axes, are executed in the
DSP board. The discrete position commands are sent to the I/O board, which
converts them into analog signal voltage via 16-bit dedicated D/A converters
and sends them to the servoampliﬁers. The I/O board and the real-time inter-
polation and control codes have been developed in the author’s laboratory.
Additional sensor-based intelligent machining process monitoring and control
modules can be added to the CNC, which was designed with an open software
and hardware architecture as explained in Chapter Seven. The machine tool
can be used as a standard CNC machine by loading an in-house developed
ISO NC language emulator into the PC. Feed, acceleration, deceleration, and
digital ﬁlter parameters can be changed in real time by sending the desired
values from the PC to the motion control unit [11]. This feature is particu-
larly important and essential for adaptive control and machine tool monitoring
tasks.
The block diagram of the control system is the same as shown in Figure 6.4.
The constants of the dc motor, gains, and digital ﬁlter parameters are given
in Table 6.1. The parameters of the velocity and position loop transfer func-
tions [19] are calculated from Eqs. (6.19), (6.29), and (6.30) and are given in
Table 6.2.
The calculated damping ratio and the natural frequencies of the velocity loop
are found to be
ωn =

K3 = 554 (rad/s) = 88 Hz,
ξ =
K2
2√K3
= 0.8384.

272
DESIGN AND ANALYSIS OF CNC SYSTEMS
TABLE 6.1. Parameters of Feed Drive
System
B
0.09 Nm/(rad/s)
Hg
0.08872 V/(rad/s)
Je
0.0036 kg m2
Ka
0.0643 A/A
Kb
0.3 V/(rad/s)
Kd
0.00488 V/count
Ke
636.62 counts/(rad/s)
KI
25.5 A/V
Kp
9.2038
Kv
21.934 V/V
Kt
0.3 Nm/A
La
2 mH
Ra
0.4 
Sg
0.0648 V/V
Tg
0.13183 V/V
a
−0.7161
b
−0.6681
p
5.08 mm
Continuous current supply = 15 A
Peak current supply = 30 A
The step response of the velocity loop is
obtained by applying Vc = 1.0 V to the ter-
minals of the ampliﬁer and simultaneously
measuring the velocity from the tachogener-
ator. The simulated step response (Eq. 6.22)
of the velocity control servo is shown in Fig-
ure 6.7. The system seems to reach to the
command velocity at about 10 ms without
any overshoot. The frequency response of the
velocity loop is analyzed to determine the
bandwidth of the controller. The magnitude
ratio (M(ω)) and the phase angle (φ(ω)) of
the closed velocity loop can be derived from
Eq. (6.19) as follows:
M(ω) = 20 log(K1/K3)
−20 log
.
(1 −ω2/ω2
n)2 + (2ξω/ωn)2/ 1
2
(6.52)
φ (ω) = −tan−1
(
2ξ ω
ωn

/
&
1 −
 ω
ωn
2')
.
(6.53)
The frequency response of the velocity loop can be measured with a two-
channel Fourier analyzer. The analyzer’s random signal generator output
is fed to the input terminal of the ampliﬁer, and the velocity is measured
from the tachogenerator output. Alternatively, harmonic (i.e., sine wave) sig-
nals at different frequencies can be given as an input, and the correspond-
ing time delay (i.e., phase delay) and magnitude of the output can be mea-
sured. The simulated frequency response results are shown in Figure 6.7.
The results indicate that the servo seems to be able to follow feeding veloc-
ity changes up to 40 Hz (250 rad/s), which is the bandwidth of the velocity
loop.
TABLE 6.2. Calculated Parameters of the Feed Drive Transfer Function
K1 = 1.5102 · 106
b2 = 0.40691 · 10−4
a1 = −1.1992
β2 = 2.4556
α3 = −2.8616
Kcl = 0.0057
K2 = 930.178
b1 = 1.2906 · 10−4
a0 = 0.3945
β1 = −1.6438
α2 = 3.077
K3 = 3.077 · 105
b0 = 0.25539 · 10−4
β0 = −0.4495
α1 = −1.4686
α0 = 0.261

6.4 STATE SPACE MODEL OF FEED DRIVE CONTROL SYSTEMS
273
0
1
0
.
0
5
0
0
.
0
0
2
4
6
Time [s]
10
0
10
1
10
2
10
3
10
2
10
0
10
0
10
1
10
2
10
3
150
100
50
-
-
-
-
Figure 6.7: Step and frequency response of the feed drive’s velocity loop.
In addition to the velocity loop, the position loop consists of an encoder,
digital ﬁlter, and integrator (i.e., up–down counter). These are mostly digital
and their transfer functions are known (see Fig. 6.4). The digital ﬁlter is tuned
in such a way that the overall closed-loop position control system behaves
like a second-order system with a rise time of tr = 30 ms and an overshoot of
Mp = 0.1%. The following digital ﬁlter was identiﬁed:
D(z) = 9.2038 z −0.7161
z −0.6681.
The calculated values of the state space parameters of the system are
(T) = eAcT =
⎡
⎣
0.3274
−2.1160
0
0.0515
0.8718
0
0.0194
0.6049
1
⎤
⎦,
H(T) =
 T
0
eActdt · Bc =
⎡
⎣
11.3754
0.3481
0.5532
−0.2639
0.1271
−0.0859
⎤
⎦,

274
DESIGN AND ANALYSIS OF CNC SYSTEMS
G(T) =
⎡
⎢⎢⎣
0.6681
0
0
0.0022
11.3754
0.3274
−2.1160
−0.5112
0.5532
0.0515
0.8718
−0.0249
0.1271
0.0194
0.6049
0.9943
⎤
⎥⎥⎦,
(T) =
⎡
⎢⎢⎣
−0.0022
0
0.5112
0.3481
0.0249
−0.2639
0.0057
−0.0859
⎤
⎥⎥⎦,
C =
⎡
⎢⎢⎣
1
0
0
−0.0449
0
1
0
0
0
0
1
0
0
0
0
1
⎤
⎥⎥⎦,
D =
⎡
⎢⎢⎣
0.0449
0
0
0
0
0
0
0
⎤
⎥⎥⎦.
The steady-state position error can be calculated by substituting the ser-
voparameter values in Eq. (6.37); thus,
ess = 0.0083 fc [counts].
The step, ramp, and frequency response of the digital position control loop are
shown in Figure 6.8.
Measurements across a range of velocities showed that the steady-state
error is not quite linear; this is mainly due to the effect of the static friction
disturbance and unmodeled part of the dynamics. An average coefﬁcient of
friction is used for a general analysis and tuning of the positional control
systems. However, for precision contouring, the inﬂuence of the static friction
must be compensated by a more advanced control law than the simple digital
ﬁlter presented in this text.
Example 9. A single-axis ballscrew-driven table is used in teaching identi-
ﬁcation and digital control, principles as shown in Figure 6.9. Develop the
state space model of the system, and simulate the step and ramp input
response.
Ballscrew Table Parameters
Encoder gain
Ke(count/rad/s)
Current ampliﬁer proportional gain
Kvp (V/V)
Equivalent inertia
Je (kg m2)
Current ampliﬁer integral gain
Kvi (V/Vs)
Equivalent viscous damping
Nm/(rad/s)
Current command
ia (V)
Disturbance torque
Td (Nm)
Velocity ampliﬁer proportional gain
Kip (V/V)
Motor torque
Tm (Nm)
Velocity ampliﬁer integral gain
Kii (V/Vs)
Motor inductance
L(H)
Current sensor gain
Ka (V/A)
Motor resistance
R()
Velocity ampliﬁer gain
Sg (V/V)
Back electromotor constant
Kb (V/rad/s)
Motor torque constant
Kt (Nm/A)
Angular velocity of ballscrew
ω (rad/s)
Transfer function of controller
Gc(s)
Velocity feedback gain
Tg (V/count/s)
Position command
xr (counts)
Measured position
xa (counts)

6.4 STATE SPACE MODEL OF FEED DRIVE CONTROL SYSTEMS
275
Table of Transfer Function Blocks
Encoder
ω(s) Ke
s = xa(s)
Mechanical system
(Tm −Td)
1
Jes+B = ω(s)
Electrical winding of the motor
(Vi −Kbω)
1
Ls+R = i(s)
Current PI ampliﬁer
(ia −Kai)
$
Kvp + Kvi
s
%
= Vi(s)
Velocity PI ampliﬁer
$
SgVc −ω
% $
Kip + Kii
s
%
= ia(s)
Position error controller
(xr −xa)Gc(s) = Vc(s)
Motor electrical winding and mechanical system can be modeled as
follows:
J dω
dt + Bω = Kti −Td →dω
dt = −B
J ω + Kt
J i −1
J Td
(6.54)
Ldi
dt + Ri = Vi −Kbω →di
dt = −Kb
L ω −R
L i + 1
LVi
(6.55)
Figure 6.8: Step, ramp, and frequency response of the feed drive’s position loop.

276
DESIGN AND ANALYSIS OF CNC SYSTEMS
Table
Tachogenerator
DC Brushless
Motor
Amplifier
Linear Encoder
Velocity
or Torque
Command
[V]
Table
Position
[counts]
Velocity Feedback
Figure 6.9: A ballscrew drive system used for teaching CNC design.
PI Current Loop
Vi = (ia −Kai)

Kvp + Kvi
s

= Kvp (ia −Kai) + Kiv
1
s (ia −Kai)
:
;8
9
z1
(6.56)
Auxiliary state z1 = 1
s (ia −Kai) →dz1
dt = ia −Kai
(6.57)
Vi = Kpv (ia −Kai) + Kivz1
(6.58)
PI Velocity Loop
ia =
$
SgVc −ω
% 
Kip + Kii
s

= Kip
$
SgVc −ω
%
+ Kii
1
s
$
SgVc −ω
%
:
;8
9
z2
(6.59)
Auxiliary state z2 = 1
s
$
SgVc −ω
%
→dz2
dt = SgVc −ω
(6.60)
ia = Kip
$
SgVc −ω
%
+ Kiiz2
(6.61)
Rewriting the equation for dz1
dt and Vi by substituting ia
dz1
dt = ia −Kai = Kip
$
SgVc −ω
%
+ Kiiz2 −Kai
(6.62)
Vi = Kvp (ia −Kai) + Kviz1 = Kvp
$
Kip
$
SgVc −ω
%
+ Kiiz2 −Kai
%
+ Kviz1
(6.63)
Vi = KvpKipSgVc −KvpKipω + KvpKiiz2 −KvpKai + Kviz1
(6.64)

6.4 STATE SPACE MODEL OF FEED DRIVE CONTROL SYSTEMS
277
By substituting Vi into di
dt
di
dt = −Kb
L ω −R
L i + 1
LVi
(6.65)
= −Kb
L ω −R
L i + KvpKipSg
L
Vc −KvpKip
L
ω + KvpKii
L
z2 −KvpKa
L
i + Kvi
L z1
(6.66)
=

−Kb + KvpKip
L

ω −R + KvpKa
L
i + Kvi
L z1 + KvpKii
L
z2 + KvpKipSg
L
Vc
(6.67)
The states are combined as follows:
 ·x

=
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
dω
dt
di
dt
dz1
dt
dz2
dt
dxa
dt
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
=
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
−B
J
Kt
J
0
0
0
−Kb+KvpKip
L
−R+KvpKa
L
Kvi
L
KvpKii
L
0
−Kip
−Ka
0
Kii
0
−1
0
0
0
0
Ke
0
0
0
0
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
ω
i
z1
z2
xa
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
+
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
0
−1
J
KpvKpiSg
L
0
Kipsg
0
Sg
0
0
0
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
1 Vc
Td

(6.68)
Because we are interested in physical variables such as velocity (ω), current
(i), equivalent current command (ia), motor voltage (Vi)
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
ω
i
ia
Vi
xa
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
=
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
1
0
0
0
0
0
1
0
0
0
−Kip
0
0
Kii
0
−KvpKip
−KvpKa
Kvi
KvpKii
0
0
0
0
0
1
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
ω
i
z1
z2
xa
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
+
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
0
0
0
0
KipSg
0
KvpKipSg
0
0
0
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
1 Vc
Td

(6.69)
or in standard state space notation
 ·x

=

A
 {x} +

B
 {u}
{y} =

C
 {x} +

D
 {u}
⎫
⎬
⎭.
(6.70)
The state space model of the machine indicated above represents the con-
tinuous part of the physical system. If the system needs to be controlled in
discrete time domain, its ZOH equivalent must be considered which leads to
state space model of the system in z domain. The digital controller then can
be combined to achieve a full state space model of the closed-loop system in
discrete time domain.

278
DESIGN AND ANALYSIS OF CNC SYSTEMS
Vin(s)
[V]
Ia
[A]
T(s)
[Nm]
Xa(s)
[mm]
ω(s)
[rad/s] 
Vin(k)
[V]
tt 
Zero-Order
Hold
Kt
Torque 
Constant
sgn()
Sgn
Saturation
Ke
s
Position
Encoder
1
Je.s+Be
Plant
Td
Friction [Nm]
Td
Constant1
Ka
Amplifier
Gain
Figure 6.10: MATLAB Simulink block diagram of a feed drive system.
Example 10. A lead lag controller is designed to control a feed drive system
whose MATLAB block diagram is given in Figure 6.10. The parameters of the
drive are given as follows: Je = 7 × 10−4 [kg m2], Be = 0.00612 [Nm/(rad/s)],
Kt = 0.72 [Nm/A], Ka = 0.887[A/V], Ke = 20/(2π), Kd = 1 [V/mm] and sam-
pling time of T = 0.0002 [s] used. The solution procedure is given as follows:
The open-loop transfer function of the drive is obtained as follows:
Go(s) =
KaKtKe
s(Jes + Be) =
K0
s(τvs + 1),
(6.71)
where the gain (K0) and time constant (τv) are K0 = KaKtKe
Be
= 332.2 [mm/V]
τv = Je
Be = 0.1144 [s]. The ZOH equivalent of the system is obtained to represent
the drive dynamics in the discrete time domain.
Go(z) = (1 −z−1)ZGo(s)
s
= (1 −z−1)Z
K0/τv
s2(s + 1/τv).
(6.72)
By applying partial fraction expansion rules, Go(s)/s can be transformed as
follows:
1
s2(s + 1/τv) = C1
s2 + C2
s +
C3
s + 1/τv
C1 = lim
s→0 s2
1
s2(s + 1/τv) = τv
C2 = lim
s→0

 1
1!
d
ds

s2
1
s2(s + 1/τv)

= lim
s→0
−1
(s + 1/τv)2 = −τ 2
v
C3 =
lim
s→−1/τv

(s + 1/τv)
1
s2(s + 1/τv)

= τ 2
v
Go(s)
s
= K0
τv
τv
 1
s2 −τv
s +
τv
s + 1/τv

= K0
 1
s2 −τv
s +
τv
s + 1/τv

.
(6.73)

6.4 STATE SPACE MODEL OF FEED DRIVE CONTROL SYSTEMS
279
The ZOH equivalent of Go(s) is as follows:
G0(z) = (1 −z−1)ZGo(s)
s
= (1 −z−1)K0

Tz−1
(1 −z−1)2 −
τv
1 −z−1 +
τv
1 −e−T/τvz−1

G0(z) = B(z)
A(z) =
z−1 $
b1z−1 + b0
%
z−2a0 + z−1a1 + 1 =
b0z + b1
z2 + a1z + a0
,
(6.74)
where
b1 = K0
.
τv(1 −e−T
τv ) −Te−T
τv
/
= 5.8014e −005
b0 = K0
.
T −τv(1 −e−T
τv )
/
= 5.8048e −005
a0 = e−T
τv = 0.9983
a1 = −(1 + e−T
τv ) = −1.9983.
Note that one of the open-loop poles is on the unit circle , while the other is
very close to the unit circle, i.e., z2 + a1z + a0 = (z −1)(z −0.9983).
Assume that the position control loop is closed by a proportional controller
with a gain Kp [V/mm]. The proportional controller is designed both in Laplace
and discrete time domain as follow.
Laplace Domain Design
The ZOH is ignored and the closed-loop transfer function of the system is
derived as follows:
Gcl(s) = KpGo(s)
1 + Go(s) =
KpK0
τvs2 + s + KpK0
.
The
roots
of
the
characteristic
equation
(p1, p2 =
$
−1 ±

1 −4τvKpK0
%
/(2τv)), that is, the poles of the system, start from
open-loop
poles
Kp = 0 →p1 = 0, p2 = −1/τv = −1/0.1144 = −8. 741 3;
become a complex conjugate when 1 −4τvKpK0 = 0 →Kp = 1/(4τvK0) =
1/(4 × 0.1144 × 332.2) = 0.006 578 3,
which
gives
identical
poles
at
p1 = p2 = −1/(2τv) = −1/(2 × 0.1144) = −4. 370 6. If the proportional gain
(Kp) is increased further, the system has complex poles that indicate an
underdamped, oscillatory step response. If we wish to have a damping ratio of
ζ = 0.8, the proportional gain is selected by forcing the desired characteristic

280
DESIGN AND ANALYSIS OF CNC SYSTEMS
equation on the closed-loop system.
s2 + 1
τv
s + KpK0
τv
≡s2 + 2ζωns + ω2
n
(6.75)
s2 +
1
0.1144s + Kp332.2
0.1144 ≡s2 + 2 × 0.8 × ωns + ω2
n
ωn =
1
2 × 0.8 × 0.1144 = 5.4633 [rad/s]
Kp = ω2
nτv
K0
= 5.46332 × 0.1144
332.2
= 0.0103.
Regardless of the magnitude of proportional gain Kp, the system remains
stable despite the increased oscillatory behavior of second-order continuous
systems.
Discrete Time Domain Design
The closed-loop transfer function of the system in z domain is
Gcl(z) = KpGo(z)
1 + Go(z) =
KpK0
$
b0z + b1
%
z2 + (a1 + KpK0b0)z + a0 + KpK0b1
p1,2 = −(a1 + KpK0b0) ±

(a1 + KpK0b0)2 −4(a0 + KpK0b1)
2
,
with poles (p1, p2 =

−(a1+KpK0b0)±

(a1+KpK0b0)2 −4(a0 + KpK0b1)

/2).
If Kp = 0 the poles start from the open loop poles of the system at p1 = 1
and p2 = 0.9983. If 0 ≤Kp < 0.00658, the poles are on the real axis and the
system is damped. The poles will meet at p1 = p2 = 0.9991 when Kp = 0.00658.
If Kp > 30 The poles will leave the unit circle and the system will be unstable
in discrete time domain.
Lead–Lag Compensator Design in Laplace Domain
The controller structure is given as C(s) = K(1 + αsT)/(1 + sT), where gain
K and α, T
are the parameters of the compensator. A compensator will be
designed to achieve 60 deg phase margin at crossover frequency of ωg = 60 Hz.
From the Bode plot of the plant in s domain, at frequency of 60 Hz (377
rad/s), the phase of the plant Go(s) is found to be −179[deg]. Additional phase
lead of φl = +59 deg = 1.03 [rad] must be added by the lead compensator at
ωg = 60 Hz = 377 [rad/s].
α = 1 + sin φl
1 −sin φl
= 1 + sin 1.03
1 −sin 1.03 = 13. 015
T =
1
ωg
√α =
1
377
√
13.015
= 7. 352 5 × 10−4.

6.5 SLIDING MODE CONTROLLER
281
After the parameters are calculated, the gain of the controller needs to
readjusted to ensure a unity gain at frequency 60 Hz. The gain of the system
is −22.7dB at y 60 Hz; hence, the gain needs to be increased by +2.7 dB.
20 log K = +22.7 →K = 1022.7/20 = 13. 646.
Hence, the lead compensating controller becomes
C(s) = K 1 + αsT
1 + sT = 13. 6461 + 9. 569 3 × 10−3s
1 + 7. 352 5 × 10−4s.
6.5
SLIDING MODE CONTROLLER
Sliding mode controller is a typical example of robust, nonlinear control system.
An application and design of a sliding mode controller to a feed drive mechanism
is given here as an example [10]. Open-loop block diagram of a feed drive system
is sown in Figure 6.11.
The ballscrew drive system application considered here is controlled in a
current mode, and its open loop transfer function between the table position (x
[mm]) and ampliﬁer command generated in the CNC (u[V]) is as follows:
x(s) =

KaKtu(s) −Tc

rg
(Js + B)s
(6.76)
=
KaKtrg
s(Js + B)[u(s) −
1
KaKt
Tc(s)]
=
K
s(s + p)[u(s) −
1
KaKt
Tc(s)],
where K = KaKtrg/J is the gain, p = B/J is the velocity loop pole, and Tc(s)
is the torque disturbance caused by friction and the cutting process. In the
linear motor drives, the inertia (J) is replaced by the table–workpiece mass,
and the disturbance torque (Tc) is replaced by the cutting force and friction in
the linear motor-driven systems. The differential equation of the drive system
Figure 6.11: Open-loop block diagram of a feed drive system powered under current
mode of the ampliﬁer.
i
θ
ω
Tc
-
T
u
Control
Input
Kt
Motor
Gain
Tm
Js+B
1
Inertia and
Viscous Damping
s
1
rg
Actual
Position
Disturbance 
Torque
Ka
Current
Amplifier
x
+

282
DESIGN AND ANALYSIS OF CNC SYSTEMS
can be reorganized as follows:
1
K s2x(s) + p
K sx(s) = u(s) −
1
KaKt
Tc(s)
(6.77)
J
KaKtrg
: ;8 9
Je
··x(t) +
B
KaKtrg
: ;8 9
Be
·x(t) = u(t) −
1
KaKt
Tc(t)
:
;8
9
d(t)
or normalizing the disturbance torque with respect to input,
Je
··x(t) + Be
·x(t) = u(t) −d(t),
(6.78)
where the reﬂected disturbance at the input is d(t) = Tc(t)/(KaKt). The accel-
eration of the drive can be separated from Eq. (6.78) as follows:
··x(t) = 1
Je
[−Be
·x(t) + u(t) −d(t)].
(6.79)
The objective of the feed drive control system is that the controller must
be capable of following the commanded trajectory and velocity with minimum
error at high speeds, regardless of the slight variations in the inertia (Je), vis-
cous friction (Be), and external disturbances (d) such as Coulomb friction and
cutting forces reﬂected on the drive input. The conventional drive control sys-
tems, such as pole placement and feed-forward control techniques work quite
well when the system is modeled accurately, and external disturbances are
rejected by having a large bandwidth in linear drives. In addition, large trans-
mission ratio in the ballscrew drives reduce the reﬂected torque on the rotating
drive motor shaft signiﬁcantly. However, when the friction is not modeled and
compensated accurately, and when the external forces such as in linear drives
are not determined before, conventional control techniques do not exhibit high
tracking accuracy in high-speed machining, leading to inaccuracies in con-
tour machining operations. The sliding mode controller belongs to a class of
nonlinear control strategies, which are robust to such uncertainties and time
variation in the drive dynamics.
There are two fundamental steps in designing a sliding mode controller: the
selections of a sliding surface and a Lyapunov function. For accurate tracking of
position and velocity, which are the key requirements from high-speed machine
tools, the sliding surface (S) is selected as follows:
S = λ(xr −x) + (
·xr −
·x),
(6.80)
where λ[1/s] is the desired but achievable bandwidth of the drive, xr, x are the
reference command and actual positions, and
·xr,
·x are the reference command
and actual velocities of the drive, respectively. The control input (u) must be
manipulated in such a way that, after a ﬁnite time, both the position and veloc-
ity of the drive approach reference command values (x →xr,
·x →
·xr), hence,
forcing the value of position and velocity errors to be zero, that is, S →0.

6.5 SLIDING MODE CONTROLLER
283
Inertia (Je) and viscous damping (Be) on the machine drive are assumed to
change slowly and insigniﬁcantly. The variation in the external disturbance
caused by the cutting process and friction is considered to be strong, but with
upper (d+) and lower (d−) limits measured on the machine. The external dis-
turbance can be tracked by the following simple observer:
·
<
d = ρκS,
<
d(k) = <
d(k −1) + ρκS · T,
(6.81)
where T[s] is the control period, k is the control interval counter in discrete
time domain, ρ is the parameter adaptation gain (ρ ≈0.005), and κ is used to
limit the integral control of the disturbance as follows:
κ =
⎧
⎪⎨
⎪⎩
0
if <
d(k) ≤d−and S ≤0
0
if <
d(k) ≥d+ and S ≥0
1
otherwise
⎫
⎪⎬
⎪⎭
.
(6.82)
Hence, the estimated disturbances are always kept within the predeter-
mined bounds that is, <
d(k) ∈[d−, d+].
The second step in sliding mode controller design is to select a Lyapunov
function that is used to obtain a stable control law for a nonlinear system, that
is, feed drive controlled by the nonlinear sliding mode control strategy. The
following is a Lyapunov function:
·
V(t) = 1
2[JeS2 + (d −<
d)2
ρ
],
(6.83)
which resembles the summation of kinetic energy and the square of disturbance
prediction error. Like the sliding surface, the selection of a speciﬁc Lyapunov
function is based on experience and intuition. For asymptotic stability of non-
linear systems, the derivative of a Lyapunov function must be negative or
zero, meaning that the rate of change in the energy and prediction error must
decrease.
·
V(t) = JeS
·
S −
·
<
d (d −<
d)
ρ
< 0.
(6.84)
By substituting
·
S = λ(
·xr −
·x) + (
··xr −
··x) from Eq. (6.80),
·
<
d = ρκS from
Eq. (6.81) and
··x from Eq. (6.79),
·
V(t) = JeS
.
λ(
·xr −
·x) +
··xr
/
+ SBe
·x −Su + Sd −Sκ(d −<
d) < 0.
(6.85)
Expressing Sd −Sκ(d −<
d) = S<
d + S(d −<
d)(1 −κ), and noting that S(d −
<
d)(1 −κ) < 0 always due to imposed limit conditions (<
d(k) ∈[d−, d+], κ = 0 or
1, as well as the value of the sliding surface S) in Eq. (6.82), never being
outside the following criteria will ensure the asymptotic stability condition at
any condition (
·
V(t) < 0):
JeS
.
λ(
·xr −
·x) +
··xr
/
+ SBe
·x −Su + S<
d = −KsS2,
(6.86)

284
DESIGN AND ANALYSIS OF CNC SYSTEMS
where Ks > 0 is the control gain to be selected. The control law (u) is obtained
from Eq. (6.86) as
u(k) = Je
.
λ(
·xr(k) −
·x(k)) +
··xr(k)
/
+ Be
·x(k) + <
d(k) + KsS(k)
(6.87)
S(k) = λ[xr(k) −x(k)] + [
·xr(k) −
·x(k)],
where (k) is the control interval counter. The reference position, xr(k), velocity
·xr(k), and acceleration
··xr(k) are obtained from the command generation algo-
rithm running in the CNC system. The actual position x(k) is measured from
the encoder, and the actual velocity
·x(k) is estimated by taking the derivative
of the measured position from the linear drive or measuring directly from a
tachogenerator. However, evaluation of velocity and acceleration from discrete
position commands and encoder readings may be noisy. The following simple
low-pass ﬁlter can be used to smooth them:
·xr(k) = α
·xr(k −1) + 1 −α
T
[xr(k) −xr(k −1)]
··xr(k) = α
··xr(k −1) + 1 −α
T
[
·x(k) −
·xr(k −1)]
·x(k) = α
·x(k −1) + 1 −α
T
·xm(k),
where
·xm(k) is the measured velocity from the tachogenerator. The ﬁlter gain
is typically set to α ≃0.6.
The disturbance compensation through on-line estimation is useful to min-
imize the effects of slowly varying cutting forces and friction. However, when
the drive changes the direction of the velocity, especially at the corners and
quadrants of the circular paths, the friction force reverses its direction and
leaves glitches on the surface. If a major Coulomb friction force is known, it
may be more advantageous to precompansate it at the feedforward command
generation as follows:
u fc(k) =
⎧
⎪⎪⎨
⎪⎪⎩
u+
fc = T+
f /(KaKt) →
·xr(k) > 0
0
→
·xr(k) = 0
u−
fc = T−
f /(KaKt)
·xr(k) < 0
⎫
⎪⎪⎬
⎪⎪⎭
,
where T+
f , T−
f are the magnitudes of Coulomb friction measured in positive and
negative directions of the motion. Hence, the overall control signal is obtained
as follows:
u(k) = usmc(k) + u fc(k).
The sliding mode controller can attenuate the inﬂuence of external distur-
bances, while providing a good tracking performance with high bandwidth. The
implementation of sliding mode controller is shown in Figure 6.12

6.6 ACTIVE DAMPING OF FEED DRIVES
285
s+p
K
s
1
ZOH
u
d
x.
x
Axis Dynamics
Resolver
Ts
(1-α) z-α
z
xm.
.
xm
x^
x^
usmc
Sliding
Mode
Controller
with
Disturbance
Estimation
Feedforward
Friction Compensation
ufc
Ts
1-α
z-α
z-1
.
xr..
xr.
Ts
1-α
z-α
z-1
.
xr
xr.
xr
-
DAC
Resolution
Ts
Tachometer
Figure 6.12: Sliding mode controller with feedforward friction compensation.
6.6
ACTIVE DAMPING OF FEED DRIVES
The ballscrew drives exhibit torsional ﬂexibility at the motor shaft–screw cou-
pling, screw itself, and nut as shown in Figure 6.13. The axial displacement
of the screw is coupled with its torsional ﬂexibility, and the screw may expe-
rience lateral ﬂexibility which applies tension and compression loads on the
table–guideway interface. The structural vibrations caused by the ballscrew
assembly occur typically above the bandwidth frequency of the servodrive, i.e.,
more than 100 Hz. However they affect the surface ﬁnish quality and preci-
sion positioning accuracy during machining; hence, they need to be avoided.
The linear cutting force (Fl) and table mass (mt) are transmitted to motor as a
reduced torque. The bandwidth and speed are increased by using two parallel
ballscrew drives in the most recent, high-speed machine tools.
The mechanical drive system is represented by its rigid body motion when
the structural dynamic ﬂexibility is neglected, as presented in previous sec-
tions. However, it may be important to damp the structural dynamics of the
machine that are excited by the cutting load and inertial forces during high-
speed motions.
Transfer functions determine the relationship between the forces and posi-
tions of the table and motor because of the ﬂexibility of the mechanical drives,
and they replace the rigid body-based transfer function. If the machine is built,
the transfer functions G(s) are measured experimentally by applying white
noise to the current ampliﬁer to generate random torque (Tm), and the result-
ing angular position of the motor shaft (θ2) and table position (x2) are measured
from rotary and linear encoders, respectively. The direct transfer function at
the table (Gtt) is measured by applying impact load (Fl) and measuring the
table vibrations (xt) with the use of the accelerometer or displacement sensor.
Alternatively, the transfer functions can be predicted from the ﬁnite element
model of the drive structure by assuming a damping constant.
A simple structural dynamic model of the ball-screw drive system can be
approximated by the reﬂected inertias at the motor (Jm) and leadscrew (Jl)
connected by a torsional spring (kt) and damping (ct) elements as shown in
Figure 6.13.

286
DESIGN AND ANALYSIS OF CNC SYSTEMS
kt
ct
Jm
Jl
mm
mt
k
c
Ballscrew model
Linear drive model
ballscrew
nut
table
coupling screw-nut
interface
motor
guideway
Tm (Fμ)θm (xμ)
Fl
xτ
θm
θl
Figure 6.13: Torsional-axial vibrations of the ballscrew affect
the positioning accuracy at the table (x1).
The stiffness of the ballscrew
drive varies as a function of table
position as shown in Figure 6.14.
The static stiffness is determined
primarily by the equivalent axial
stiffness of the ball screw-nut con-
tact as outlined in [DIN 69051-
6]. The ballscrew drive system,
with bearings and the interme-
diate transmission or clutch, has
a ﬁnite stiffness that assists in
determining the static displace-
ment of the table under load
during the high-speed position-
ing of the table. The ballscrew is
supported by thrust bearings at
two ends. Bearings provide radial
guidance to the screw and absorbs
the feed forces in the axial direc-
tion.
0
0.25
0.5
Slide position x/L
1 axial bearing
2 axial bearings
kL1
k1
k2
kL2
km
L
x
Axial stiffness keq
0.75
1.0
Figure 6.14: Axial stiffness of the ballscrew with single- and double-sided
thrust bearings [DIN 69051-6].

6.6 ACTIVE DAMPING OF FEED DRIVES
287
If the bearings at both ends are ﬁxed, the equivalent axial stiffness of the
ballscrew system is given by the following:
kt =

1
ki + kii
+ 1
kM
	−1
where the stiffness terms contributed by the left (ki) and right (kii ) bearings
are deﬁned as follows:
ki =
 1
k1
+ 1
kL1
	−1
,
kii =
 1
k2
+ 1
kL2
	−1
The axial stiffness is reduced when the right bearing is preload free . As
the table position changes, the axial stiffness of the drive varies, which leads
to the time-varying dynamics of ballscrew drives. It must be noted that the
largest ﬂexibility is contributed by the screw, coupling, and nut in the system.
For example, the torsional stiffness of the screw can be estimated as follows:
kts = GI
L ←−I =
πd4
p
32 ,
where G [N/m2] is the module of rigidity, which has a value of G = 75 × 109
[N/m2] for the steel. L and dp are the length and the pitch diameter of the
screw.
The connection can be considered at the motor–screw coupling or screw–
nut coupling junctions for simplicity. By neglecting the viscous friction, the
structural dynamics of the ballscrew system can be expressed by
Jm
d2θm
dt2 + ct(dθm
dt −dθl
dt ) + kt(θm −θl) = Tm
Jl
d2θl
dt2 −ct(dθm
dt −dθl
dt ) −kt(θm −θl) = TL.
(6.88)
If the equation of motion is transformed to the Laplace domain, then
Jms2 + cts + kt
−(cts + kt)
−(cts + kt)
Jls2 + cts + kt
	 
θm
θl

=

Tm
Tl

(6.89)
which leads to transfer function matrix after the inversion of the transfer
matrix as follows:

θm
θl

=
Jls2 + cts + kt
cts + kt
cts + kt
Jms2 + cts + kt
	
s2 
s2JlJm + sct (Jl + Jm) + kt (Jl + Jm)


Tm
Tl

(6.90)
=
Gmm
Gmt
Gtm
Gtt
	 
Tm
Tl


288
DESIGN AND ANALYSIS OF CNC SYSTEMS
Gm
xr
x
Kp+
-
Ki
s
Ka
Kv
Kt
Gt
θm rg
s/ω0
-
-
Tm
Td
xm
x
e
xr
1
s
x
.
Figure 6.15: Active damping of a torsional-axial mode (ω0) of ballscrew drive
with an acceleration feedback (s2/ω0) in a cascaded control system.
The equation of the motion has the identical form if the linear mass, and
translational motions are considered with the following transformations:
Jm = r2
gmm, Jl = r2
gmt
kt = r2
gka, ct = r2
gca
θm = x2
rg
,
θl = x1
rg
Tm = hp
2π Fm,
Tl = h
2π Ft
where transmission ratio rg = hp/2π for a leadscrew with a pitch length of
hp. The transfer function of the system with linear masses (i.e., linear drives)
becomes

xm
xt

=
mts2 + cas + ka
cas + ka
cas + ka
mms2 + cas + ka
	
s2 
s2mtmm + sca (mt + mm) + ka (mt + mm)


Fm
Ft

(6.91)
The feed drive structure has a natural frequency as follows:
ω0 =

kt
JlJm/ (Jl + Jm) =

ka
mtmm/ (mt + mm)[rad/s],
which needs to be damped by the controller. Although several advanced control
algorithms exist for active damping of modes, the application with a cascaded
control architecture is illustrated here, because it is most commonly used in
industrial CNCs. The cascaded control structure is shown in Figure 6.15. The
controller has a current loop inside, surrounded by velocity and position control
loops [21]. The current loop usually has about 1,000 Hz bandwidth with a PWM
converter having more than 10 KHz modulator; hence, it is approximated by a
gain Ka [A/V] here. The motor torque constant is Kt [Nm/A]. The cascaded con-
troller uses a proportional gain (Kv) on position error (e), and a proportional and
integral controller on the velocity error (
·xr −
·xm). The integral action is used to
minimize the steady-state error caused by the disturbance (Td ) and lag caused
by the transfer function of the system. The velocity at the motor shaft is usually
indirectly measured from the rotary encoder mounted on the motor shaft. The
encoder signals are digitally differentiated to obtain the velocity of the motor
shaft (s
·
θm). The angular velocity is scaled by the leadscrew transmission gain

6.6 ACTIVE DAMPING OF FEED DRIVES
289
(rg) to obtain a linear velocity compatible with the velocity command gener-
ated by the CNC. The inertia and viscous damping forces are compensated
by the feedforward and feedback terms, respectively, but they are not shown
here for simplicity. Gm represents the transfer function between the angular
velocity (
·
θm) and torque at the motor shaft, whereas Gt represents the transfer
function between the angular velocity of the ballscrew at the nut (i.e., table
velocity) and the motor shaft’s velocity. If the structural dynamics of the drive
are neglected, Gm represents only the rigid body dynamics (Gm = 1/(Jes + B)
and Gt = 1. The typical bandwidth of the velocity loop is about 100 Hz, and
the position loop is approximately 30 Hz for linear drives with rigid body
dynamics [87]. Ball screw drives have less bandwidth. The vibrations are
damped by using acceleration feedback (s/ω0) scaled at the resonance frequency
ω0. The acceleration can be measured either directly by a Ferraris sensor
mounted between the stationary guide and leadscrew [88], or by taking a double
derivative of position measurements obtained from the table-mounted linear
encoder.
The transfer function between the motor torque and motor velocity can be
expressed from Eq. (6.90) as follows:
Gm(s) = sθm
Tm
= sGmm(s) =
Jls2 + cts + kt
s

s2JlJm + sct (Jl + Jm) + kt (Jl + Jm)
. (6.92)
The transfer function between the velocities at the table (
·xt =
·x) and motor
shaft is given as follows:
Gt(s) =
·x
·xm
= srgθl/Tm
srgθm/Tm
= sGmt
sGmm
=
cts + kt
Jls2 + cts + kt
.
(6.93)
The closed velocity loop response is expressed as follows:
Gv(s) =
·xm
·xr
=

Kps+KI
s

KaKtGm(s)rg
1 +

Kps+KI
s

KaKtGm(s)rg
=
KaKtrg
$
Kps + KI
% $
Jls2 + cts + kt
%
s2 
s2JlJm + sct (Jl + Jm) + kt (Jl + Jm)

+ KaKtrg
$
Kps + KI
% $
Jls2 + cts + kt
%.
(6.94)
Velocity controller gains (Kp, Ki) are tuned to keep the system stable with a
desired transient response. Although the indirect velocity feedback damps the
system to a certain degree, it is not sufﬁcient to damp the mode at frequency ω0.
The active damping is accomplished by adding the acceleration (s/ω0) measured
from the table to the velocity loop. The loop transfer function of the direct

290
DESIGN AND ANALYSIS OF CNC SYSTEMS
velocity loop with the acceleration feedback is
Gvdo(s) = Gv(s)Gt(s) s
ω0
=
KaKtrg
$
Kps + KI
% $
Jls2 + cts + kt
%
s2 
s2JlJm + sct (Jl + Jm) + kt (Jl + Jm)

+ KaKtrg
$
Kps + KI
% $
Jls2 + cts + kt
%
$
cts + kt
%
Jls2 + cts + kt
s
ω0
(6.95)
=
KaKtrg
$
Kps + KI
% $
cts + kt
%
s2 
s2JlJm + sct (Jl + Jm) + kt (Jl + Jm)

+ KaKtrg
$
Kps + KI
% $
Jls2 + cts + kt
% s
ω0
.
(6.96)
A Bode diagram of the direct velocity loop with and without the acceleration
feedback can be used to assess the strength of active damping. The ﬁnal closed-
loop transfer function of the direct velocity loop becomes
Gvc(s) =
·x
·xr
=
Gv(s)Gt(s)
1 + Gv(s)Gt(s) s
ω0
=
KaKtrg
$
Kps + KI
% $
cts + kt
%
ω0
ω0

s2 
s2JlJm + sct (Jl + Jm) + kt (Jl + Jm)

+ KaKtrg
$
Kps + KI
% $
Jls2 + cts + kt
%
+
+ + KaKtrg
$
Kps + KI
% $
cts + kt
%
s.
(6.97)
Finally, the Bode diagram of position loop indicates the achievable gain Kv
without making the system unstable.
Gpo(s) = x
e = KvGvc(s)1
s .
(6.98)
The closed-loop transfer function of the complete position loop becomes
Gpo(s) =
Gpo(s)
1 + Gpo(s) =
KvGvc(s)
s + KvGvc(s).
(6.99)
The performance of the active damping system can be illustrated with the
following experimental setup created in the author’s laboratory.
Example. The ballscrew setup shown in Figure 6.9 is used to demonstrate the
active damping algorithm. The parameters of the drive are given as follows:
Jt [kg m2]
2.6274 × 10−4
hp[m]
0.020
Jm [kg m2]
5.0853 × 10−4
dp[m]
0.020
kt [Nm/rad]
418.15
rg = hp/2π
0.0032
ct [Nm/rad/s]
0.0121
L[m]
0.82
Ka [A/V]
0.887
G [GPa]
75
Kt [Nm/A]
0.72
I[m4] = π(0.8dp)4/32
1.5708 × 10−8
Kp
700
kl [Nm/rad]=GI/L
1437
Ki
500
kb [Nm/rad]
6000
Kv
?
knut [Nm/rad]
1300
kcoup [Nm/rad]
6500

6.6 ACTIVE DAMPING OF FEED DRIVES
291
By serially connecting the bearing (kb), leadscrew (kl), coupling (kcoup), and
nut (knut) stiffness, the equivalent torsional stiffness of the drive can be esti-
mated as
˜kt =
 1
kl
+ 1
kb
+
1
knut
+
1
kcoup
	−1
= 568 [Nm/rad]
whereas the measured torsional stiffness was kt = 418.15 [Nm/rad]. The natu-
ral frequency of the drive structure is
ω0 =

kt
JlJm/ (Jl + Jm) = 1, 553 [rad/s] = 247 [Hz]
The evaluated transfer functions related to the structure are
Gm(s) =
0.0002627s2 + 0.0121s + 418.2
s
$
1.336 × 10−7s2 + 9.33 × 10−6s + 0.3225
%
= 1966.3 (s + 23.03 + i1261.5) (s + 23.03 −i1261.5)
s (s + 34.918 + i1553.3) (s + 34.918 −i1553.3)
Gt(s) =
cts + kt
Jls2 + cts + kt
=
0.0121s + 418.15
2.6274 × 10−4s2 + 0.0121s + 418.15
=
46.0531(s + 34558)
(s + 23.03 + i1261.5) (s + 23.03 −i1261.5)
The motor side has a natural frequency of 1,553 [rad/s] with 2.25% damping,
whereas the table has 1,261 [rad/s] natural frequency with 1.8% damping.
The closed-loop transfer function of the velocity loop with an indirect feed-
back from the motor shaft is found as follows:
Gv(s) =
0.0003739s3 + 0.01748s2 + 595s + 425
1.336 × 10−7s4 + 0.0003832s3 + 0.34s3 + 595s + 425
= 2798.2521(s + 0.7143)(s + 23.018 + i1261.3)(s + 23.018 −i1261.3)
(s + 2554)(s + 0.7146)(s + 156.55 + i1310.9)(s + 156.55 + i1310.9),
which is dominated by a damped natural frequency of 1310.9 [rad/s] with about
12 percent damping. The indirect velocity loop increased the damping from 2.25
percent to 12 percent. By cascading the table dynamics and adding the damping
feedback (s/ω0), the loop transfer function of the velocity loop is found as follows:
Gvdo(s) = Gv(s)Gt(s) s
ω0
=
82.9339s(s + 3.456 × 104)
(s + 2554) (s + 156.55 + i1310.9) (s + 156.55 −i1310.9).
The frequency responses of indirectly closed velocity loop cascaded with
the table dynamics Gv(s)Gt(s) and with the added damping term Gvdo =
Gv(s)Gt(s)s/ω0 are shown in Figure 6.16a. The damping term attenuates the
loop transfer function at the lower frequency but does not change the magni-
tude at the resonance, but the phase is shifted upward by 90 deg.

292
DESIGN AND ANALYSIS OF CNC SYSTEMS
 ω0/s
-60
-40
-20
0
20
101
102
103
104
-270
-225
-180
-135
-90
-45
0
 
 
Magnitude (dB)
Phase (deg)
Frequency (rad/sec)
Closed loop without active damping
Closed loop with active damping
-60
-40
-20
0
20
Magnitude (dB)
101
102
103
104
-270
-180
-90
0
90
Phase (deg)
 
 
Frequency (rad/sec)
GvGt
GvGtω0/s
(a) Bode plot of GvGt and GvGtω0/s
(b) Bode plot of closed-loop system with and without active damping
0
0.005
0.01
0.015
0.025
0.03
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
1.8
Time (sec)
Amplitude
Actively damped 
Undamped 
0.02
(c) Step response of the closed-loop system with and without active damping
Figure 6.16: Active damping of velocity loop for a ballscrew drive system.

6.7 DESIGN OF AN ELECTROHYDRAULIC CNC PRESS BRAKE
293
The closed-loop transfer function of the velocity loop with the acceleration
feedback is evaluated as follows:
Gvc(s) =
·x
·xr
=
Gv(s)Gt(s)
1 + Gv(s)Gt(s) s
ω0
=
128851.252(s + 3.456 × 104)
(s + 1372)(s2 + 1578s + 3.244 × 106)
=
128851.252(s + 3.456 × 104)
(s + 1372)(s + 789 + i1619)(s + 789 −i1619),
(6.100)
which has a damped natural frequency of 1,619 [rad/s] and 43.8 percent damp-
ing ratio. The mode at 1,553 [rad/s] is now highly damped which can be seen
from the frequency response function of the closed velocity loop with indirect
velocity and direct acceleration feedback.
Frequency responses of the closed velocity loop with indirect velocity feed-
back (Gv(s)Gt(s)) and additional acceleration feedback (Gvc) are shown in Fig-
ure 6.16b. The magnitude at the resonance frequency zone is attenuated by 11.5
dB, and the mode is completely damped. The step response of the undamped
and damped velocity loop clearly indicates the effect of damping as shown
in Fig. 6.16c. The bandwidth of the velocity loop is therefore increased up to
this frequency, which allows the designer to increase the position loop gain
Kv to much higher values. High position gain means higher bandwidth with
lower tracking and contouring errors in circular interpolation and contour
machining. Furthermore, because the loop gain becomes higher, the distur-
bance stiffness of the controller against cutting and friction loads becomes
higher.
6.7
DESIGN OF AN ELECTROHYDRAULIC CNC PRESS BRAKE
Sheet metal–forming machine tools, press brakes, are widely used in fabrication
shops. A typical press brake consists of a moving ram, which holds a punch, and
a die located on a bed frame (see Fig. 6.17). The motion of the ram is delivered
by a pair of hydraulic actuators. Conventional presses are manually operated,
and the end positions of the ram are manually set via limit switches or dead
stops. Manual control leads to frequent tuning and adjustment of the machine
and requires a number of trial bends until a satisfactory positioning and bend-
ing accuracy are achieved. In contrast, the CNC press provides ﬂexibility in
adapting the machine to different bending operations quickly, while delivering
an accurate positioning. A simpliﬁed design of a computer control system for a
press brake is presented in this section.
6.7.1
Hydraulic Press Brake System
Mechanical System
The press ram, which holds the punch at its free end, is held by two paral-
lel hydraulic actuators (Fig. 6.17). The ram slides on lubricated guides, which

294
DESIGN AND ANALYSIS OF CNC SYSTEMS
Tie-rod
Slider
Guides
Encoder Head
Encoder Body
Tie-rod Post
Connection Pin
accumulator
check
valve
fine
filter
servo
valve
actuator
counter
balance
valve
co rse
filter
solenoid
valve
variable
displacement
pump
tank
Press Brake 
Sheet metal bending operation
Hydraulic circuit of the press brake
a
Figure 6.17: Hydraulic press brake system.
are modiﬁed to have cylindrical pads. The pads allow 3◦tilt to the ram–punch
assembly for press bending of sheet metals with a variable penetration depth
at either side. The aim of the CNC system is to bring the punch rapidly toward
the sheet metal laid on the V-shaped die and to form it at high pressure but
with a slow penetration velocity to a desired depth. Depending on the off-
set between the two ends of the bend, the positions and velocities of the two

6.7 DESIGN OF AN ELECTROHYDRAULIC CNC PRESS BRAKE
295
hydraulic actuators that are holding the punch must be controlled by the CNC
system.
The actual position of each side of the ram is monitored by linear encoders.
To consider the relative static deformations between the press bed and ram, a
sliding tie rod is designed as shown in Figure 6.17. The tie-rod posts are placed
at the axes of the ram/actuator connections. High-precision ball joints are used
to connect each tie rod to its respective post and slider. A linear encoder with
0.005 mm resolution was selected. The stationary encoder body was mounted
on the press bed close to the die, and the moving read head was attached to
the linear slider housed in a cylindrical guide with an adjustable stiffness. In
place of the encoder, precision linear displacement transducers (LDTs), which
use a tubular waveguide and a magnet, can be used as an integral part of the
actuator rods.
Hydraulic System
The schematic diagram of the hydraulic system design is shown in Fig-
ure 6.17. A variable displacement pump with pressure feedback was chosen to
deliver the hydraulic power. An accumulator, which keeps the system pressure
within 10 percent of a set level and damps the pressure oscillations caused by
the reciprocating pump pistons, was used. A check valve was placed between
the accumulator and the pump to eliminate the possibility of the accumulator
pressure driving the pump in reverse in the event of power outage. A counter-
balance valve was used to lock the system whenever the system pressure was
lost. A ﬁne pressure ﬁlter was used in the supply line to keep any debris from
reaching the sensitive pilot stage of the servovalves. A coarse low-pressure ﬁlter
was added to the return line. The existing hydraulic actuators were modiﬁed to
include servovalves and pressure transducers as shown in Figure 6.18, which
would have been an integral part of the actuators on a production machine.
The ﬂow into and out of the actuator cylinder is controlled by a two-stage servo-
valve. It is rated as having a 20 gallons/min ﬂow capacity with 85 Hz bandwidth
by the manufacturer. The primary stage consists of an electronic torque motor
driving the primary ﬂapper valve, which provides a differential pressure across
the ends of the secondary closed center spool valve with a zero overlap. The
displacement of the secondary spool is fed back to the torque motor by way of a
cantilever spring. This spool controls the ﬂow into the cylinder. The hydraulic
cylinder has two ﬂuid chambers separated by a piston, which is connected to
the ram from one side with a rigid rod. The inertia loads of the rod and ram
assembly, Coulomb, and viscous friction loads in the ram guideways and piston
cylinder interface, and the bending loads must be overcome by the pressurized
ﬂuid injected into the cylinder chamber.
CNC System
The hydraulic press was controlled by the in-house developed Open Archi-
tecture CNC System [11, 14].

296
DESIGN AND ANALYSIS OF CNC SYSTEMS
{Pb,Vb}
{Pa, Va}
qb
qa
Vy
M r
Fext
Xv
{Pt}
{Ps}
Flow Control Valve
Ia
Primary Stage
Secondary Stage
Ap
Ar
Pressure Transducer
Pressure Port
Valve Manifold
Original Cylinder 
Upper Transducer Fitting
Pressure Transducer
Tank Line Port
Servovalve
Lower Transducer Fitting
Actuator - servo valve assembly 
Hydraulic cylinder
Load
Figure 6.18: Electrohydraulic actuator assembly.
6.7.2
Dynamic Model of Hydraulic Actuator Module
An accurate dynamic model of the overall hydraulic system is rather difﬁcult
to obtain, because of the leakage in seals and connections, losses within ﬂexible
hoses, the compressibility of the ﬂuid and changes in its viscosity, and the wear
in the oriﬁces and ports. In addition the ﬂow-pressure expressions are nonlinear
for a practical control algorithm design in a CNC system. However, even with
some practical assumptions, a mathematical model of the hydraulic system
is essential for the optimal design of the hydraulic circuit and for selecting
components. Such an analysis has been made in designing the hydraulic circuit
for the press [14]. Only a simpliﬁed model of the hydraulic system is presented

6.7 DESIGN OF AN ELECTROHYDRAULIC CNC PRESS BRAKE
297
here to provide a basic foundation for a digital press brake controller design
suitable for a CNC.
The model is based on the valve–actuator assembly shown in Figure 6.18.
The second-order dynamics of the spool is much faster than the electronic
torque motor, which has ﬁrst-order dynamics. The transfer function between
the spool valve displacement and supplied current to the torque motor is
approximated as
xv(s)
Ia(s) =
Ki
τis + 1,
(6.101)
where Ki and τi are the gain and time constant of the torque motor, respectively.
Assume that the secondary spool is at null ﬂow position, where both ports
connected to either sides of the cylinder are closed by the zero-overlap spool.
The ﬂow across the valve port is proportional to the area of opening and to
the square root of the pressure drop. Because the area of valve opening is
proportional to the spool displacement, the following expressions can be used
to represent the ﬂow through the ports for the extending and retracting motion
of the piston [78] as follows:
qa = Kqxv

|Ps −Pa| sign(Ps −Pa),
qb = Kqxv
|Pb −Pt| sign(Pb −Pt),

xv ≤0,
qa = Kqxv

|Pt −Pa| sign(Pt −Pa),
qb = Kqxv
|Pb −Ps| sign(Pb −Ps),

xv > 0,
(6.102)
where Ps, Pt, Pa, and Pb are the supply, tank, and port (A,B) pressures, respec-
tively.
The ﬂow coefﬁcients for ports A and B are assumed to be equal to Kq. The
ﬂows into the cylinder move the piston according to the conservation of mass
on each chamber as follows:
qa = −Apvy + Va
β
dPa
dt + Klp(Pa −Pb),
qb = −Arvy −Vb
β
dPb
dt + Klp(Pa −Pb),
(6.103)
where β and Klp are the bulk modulus of the ﬂuid and the coefﬁcient of leakage
past the piston, respectively. In the particular single-rod piston system, the
piston areas (Ap, Ar) on each side of the chamber are different. The term with
a differential pressure and ﬂuid bulk modulus represents the change in the
chamber volume due to the compressibility of the ﬂuid.
The fundamental ﬂow equations for the servovalve and actuator assem-
bly given above (Eqs. 6.102–6.103) have several nonlinearities besides the
square root term. The expressions are linearized here for simplicity in deriving
the transfer function of the overall hydraulic actuator system. The following
assumptions are made: Both sides of the piston area are equal (i.e., symmet-
ric actuator with Ap = Ar = A); the tank is open to the atmosphere and its

298
DESIGN AND ANALYSIS OF CNC SYSTEMS
relative pressure is zero, Pt = 0; the ﬂows into and out of the spool valve or
cylinder chambers are equal. Deﬁning the load ﬂow as ql = qa = qb, and the
load pressure as Pl = Pa −Pb, we can obtain the following relationships from
Eq. (6.102):
Kqxv

|Ps −Pa| sign(Ps −Pa) = Kqxv

|Pb| sign(Pb),
which leads to
Ps = Pa + Pb,
Pl = Pa −Pb,
→
Pb = Ps −Pl
2
.
Substituting Pt = 0 and Pb into qb (Eq. 6.102) yields
ql = (Kq

Ps/2)xv

1 −Pl/Ps.
(6.104)
The load ﬂow is linearized by assuming small changes in the valve displacement
(xv) and load pressure (Pl). Linearizing ql about the null ﬂow position of the
spool, we get
ql = ∂ql
∂xv
****
Plo,xv0
xv + ∂ql
∂Pl
****
Plo,xvo
Pl
= Kqoxv + KxoPl,
(6.105)
where the normalized valve ﬂow (Kqo) and pressure gains (Kxo) are
Kqo = Kq
"
Ps −Plo
2
,
Kxo =
−Kqxv0
2

2(Ps −Plo)
.
The ﬂow equations in the cylinder (Eq. 6.103) can also be linearized. If we
let the total volume in the cylinder be Vt and the volume displaced in the
chambers be 	V, the volumes in the chambers become Va = Vt/2 + 	V and
Vb = Vt/2 −	V. If we add the ﬂows in each chamber (i.e., qa + qb = 2ql), and
assume a constant supply pressure Ps and equal piston areas (Ap = Ar = A),
and consider that
dPl
dt = dPa
dt −dPb
dt ,
dPs
dt = dPa
dt + dPb
dt = 0,
the load ﬂow from Eq. (6.103) becomes
ql = −Avy + Vt
4β
dPl
dt + KlpPl.
(6.106)
The equation of motion for the equivalent mass (Mr) at the piston rod with
negligible viscous friction is

F+
←= Mr
dvy
dt = A(Pb −Pa) + Fl,
(6.107)
where the load FL = Fext −Fc sign(vy). Here Fext and Fc are the sheet metal
bending and Coulomb friction forces, respectively. The transfer function of pis-
ton velocity can be derived by combining the Laplace transforms of Eqs. (6.105),

6.7 DESIGN OF AN ELECTROHYDRAULIC CNC PRESS BRAKE
299
(6.106), and (6.107) as follows:
vy(s) =
Kx
s2 + 2ζlωls + ω2
l
xv +
KF(τFs + 1)
s2 + 2ζlωls + ω2
l
Fl,
(6.108)
where
ωl = 2A

β
VtMr
,
ζl = Klp −Kxo
A

βMr
Vt
,
Kx = −4βAKqo
VtMr
,
τF =
Vt
4β(Klp −Kxo),
KF =
1
τFMr
.
The open-loop transfer function indicates the inﬂuence of the external bend-
ing load and Coulomb friction on the ram velocity; the damping coefﬁcient is
proportional to the valve and piston leakage; and the stiffness of the actua-
tor is proportional to the bulk modulus of the ﬂuid and piston area whereas
it is inversely proportional to the stroke. The linearized transfer function
is useful for analyzing the general behavior of the actuator for a given set
of initial design parameters. However, the nonlinearities and the unknown
values of ﬂuid viscosity, friction, and leakage in various seals and ports
require the on-line identiﬁcation of the overall system transfer function, so
that a well-tuned digital control algorithm can be embedded into the CNC
computer.
6.7.3
Identiﬁcation of Electrohydraulic Drive Dynamics
for Computer Control
Although mathematical modeling is a useful tool for selecting hydraulic
components, and determining the general order of the assembled system, the
effects of valve deadband, hysteresis, stiction, leakage, and transport delay
make the accurate modeling of the dynamics of hydraulic system for computer
control difﬁcult. A series of system identiﬁcation tests are usually conducted to
evaluate the discrete transfer function of the system for computer control.
Several characteristics of the hydraulic system must be considered in design-
ing the identiﬁcation experiments. Although the gain of the closed-center spool
valve is largest at the null-ﬂow position, the deadband and hysteresis are also
dominant. In addition, the amplitude of the input signal must be large enough
so that the steady-state ﬂow gain identiﬁed is not biased by the valve-spool
stiction. Because a signiﬁcant Coulomb friction exists between the ram and
guideways, the input excitation signal chosen must not reverse the motion and
thus the static friction load. Furthermore, because we are using a single-rod
asymmetrical actuator, the dynamics of the system in extending and retract-
ing will not be the same. Finally, overall ﬂow-pressure relationships are non-
linear owing to square root terms, and their linearization is acceptable only
at small regions of actuator movements. Identiﬁcation tests areconducted by

300
DESIGN AND ANALYSIS OF CNC SYSTEMS
considering the above-mentioned characteristics of the hydraulic system. First,
a series of step response tests are conducted in extending and retracting pistons
separately. An approximate order and time delay of the system was estimated,
which was later enhanced by pseudo random binary sequence (PRBS) excita-
tion and least-squares identiﬁcation techniques. In both excitations, the mini-
mum input signal amplitude was at least 3 percent of the maximum amplitude
required to overcome the effects of nonlinear valve gain and spool friction. A dc
offset is added to the input signal to prevent any reversal of piston velocity (and
Coulomb friction load), which constrains the identiﬁcation to either extending
or retracting.
The input signals, and the corresponding actuator position, velocity, and
pressure outputs, are collected synchronously with a multichannel digital
scope. The digital data are later transferred to a computer and processed by
MATLAB’s Systems Identiﬁcation Tool Box [1]. The digital position feedback,
the encoder feedback to the CNC, is disabled, and input signals are sent to
servovalve ampliﬁers as analog voltages via D/A converters, which have a gain
of Kd = 20/29 [V/count/s]. The velocities of both actuators are measured by
magnetic ﬁeld–based velocity transducers instrumented to the tie-rod slider
mechanism. The data-sampling frequency was ﬁxed at 1 kHz during identiﬁ-
cation tests.
The open-loop discrete transfer function of the system was identiﬁed from the
sampled values of PRBS inputs to the servovalve ampliﬁer and outputs of the
velocity transducer at 1-ms time intervals, which are equivalent to loop-closure
periods. The system’s open-loop discrete transfer function can be represented
in the form of
Go(z−1) = vy(z−1)
u(z−1) = z−dB(z−1)
A(z−1)
,
(6.109)
where d is the system’s deadtime and
B(z−1) = b0 + b1z−1 + b1z−2 + · · · + bnbz−nb,
A(z−1) = 1 + a1z−1 + a2z−2 + · · · + anaz−na.
Alternatively, the system’s response – the piston velocity (vy) at time interval
k – can be expressed in an auto regressive moving average (ARMA) form as
follows:
vy(k) = {φ(k)}T{θ},
(6.110)
where the measurement vector is
{φ(k)}T = [u(k −d) u(k −d −1) · · · u(k −d −nb), −vy(k −1) · · · −vy(k −na)]
(6.111)

6.7 DESIGN OF AN ELECTROHYDRAULIC CNC PRESS BRAKE
301
and the transfer function parameter vector is
{θ} = [b0 b1 · · · bnb a1 a2 · · · ana]T.
(6.112)
The values of the transfer function, or the components of the time-invariant
parameter vector {θ}, are estimated from N sets of measurements using an
off-line standard least-squares (LS) method, which is summarized in Appendix
B. The MATLAB Identiﬁcation Tool Box [1] has the LS identiﬁcation routines
used here. The input signal amplitude was chosen to be as 600 mV, or 3% of
the maximum valve input to overcome valve stiction. In addition, this value is
well within the range of valve input signals during the forming operation.
It was found that a ﬁrst-order model represents the system dynamics at a
low-frequency band, while a third-order model captures the dynamic mode con-
tributed by the load and actuator at frequencies more than 100 Hz. The delays
in the system vary between 4 and 5 (ms) for each model. The left and right
actuators have different dynamic characteristics, which reﬂect the machining
and friction characteristics of each actuator–guideway assembly. In addition,
each actuator exhibits different dynamics in extending and retracting motions
owing to its asymmetrical piston. Although high-order models represent the
system dynamics over a wide frequency range, a ﬁrst-order model with ﬁve
time delays is satisfactory for the extending motion of the actuators over the
low-frequency band where the forming operation takes place. The identiﬁed
open-loop transfer function between the actuator velocity (vy) and valve ampli-
ﬁer input (u) is expressed as
vy
u = z−5(b0 + b1z−1)
1 + a1z−1
.
(6.113)
The excitation of high-order modes is avoided by applying smooth velocity
changes using the trapezoidal velocity proﬁle as shown in Figure 6.19.
The reader is reminded of the following for the open-loop transfer function
parameters of the press shown in Table 6.3:
r a1 = a′
1 + 1, since a′
1 belongs to position (see next section).
r The values b0 and b1 should be multiplied by the D/A converter gain of the
CNC to obtain the correct transfer function units between position input and
output in counts. A nine-bit two-parallel pulse width modulated circuit with
±10 V is used as an analog to digital converter. The gain of the digital to
analog converter circuit is Kd = 20/29 = 0.0391 [V/(count/s)].
6.7.4
Digital Position Control System Design
We need to design a digital control algorithm with a minimum computation
time and high control loop closure frequency while providing a low position-
ing error. The performance of the positioning system during the bend and
dwell operations determines the accuracy of the press. In these cases, the actu-
ators are either extending or holding their position against a forming load.

302
DESIGN AND ANALYSIS OF CNC SYSTEMS
Time (Seconds)
Velocity (mm/s)
-60
-40
-20
0
20
40
60
0.0
1.0
2.0
3.0
4.0
5.0
Forming
Operation
Rapid
Approach
Dwell
Rapid
Retract
Velocity profile for a sheet metal  bending cycle.
Block diagram of a pole-placement control system.
’
Figure 6.19: Press brake control system.
Therefore, the ﬁrst-order models that represent the velocity dynamics during
actuator extensions are used for the digital control of the press ram position.
The position of the ram is measured with a linear encoder attached to the
ram–tie-rod assembly. The linear encoder and position counter in the CNC
act as an integrator (1/(1 −z−1)) and provide the actual position of the actu-
ator end point at discrete control intervals Ts = 1 ms. The resulting open-loop
transfer function between the ampliﬁer input (u [V]) and actuator position (y)
becomes
B(z−1)
A′(z−1) = y
u = vy
u

1
1 −z−1

=
z−5(b0 + b1z−1)
1 + a′
1z−1 + a′
2z−2 ,
(6.114)

6.7 DESIGN OF AN ELECTROHYDRAULIC CNC PRESS BRAKE
303
TABLE 6.3. Pole-Placement Axis Control Law Parameters for the Hydraulic Press
[Am] = 1 + am1z−1 + am2z−2
1 −1.429z−1 + 0.4724z−2 Desired Model
Left Axis – y1
Pole-Placement Design Parameters
[B] = b0 + b1z−1
(1,573−702 z−1) [count/V] · kd
[A] = 1 + a′
1z−1 + a′
2z−2
1 −1.871z−1 + 0.871z−2
[T] =t0
4.8837 × 10−4
[S] = s0 + s1z−1
0.00444 −0.00395z−1
[R] = r0 + r1z−1 + · · · + r5z−5
[1
0.442
0.4284
0.4165
0.4062
0.1244]
Right Axis – y2
Pole-Placement Design Parameters
[B] = b0 + b1z−1
(982 −505z−1)
[count/V] · kd
[A] = 1 + a′
1z−1 + a′
2z−2
1 −1.861z−1 + 0.861z−2
[T] =t0
7.4717 × 10−4
[S] = s0 + s1z−1
0.00645 −0.0057z−1
[R] = r0 + r1z−1 + · · · + r5z−5
[1
0.432
0.4154
0.401
0.3887
0.1306]
Note that the D/A converter gain is kd = 20/29 [V/counts/s].
where a′
1 = a1 −1 and a′
2 = −a1. Here, (u) is in volts and y unit is in counts,
where 1 count = 0.005 mm. The open-position loop transfer function can be
expressed in an alternate form using a forward shift operator (z) for convenience
as follows:
y(k)
u(k) = B(z−1)
A′(z−1) =
b0z + b1
z4(z2 + a′
1z + a′
2)
counts
V
	
.
(6.115)
The above transfer function has a ﬁrst-order numerator (i.e., deg(B(z)) = 1)
and a sixth-order denominator (i.e., deg(A(z)) = 4 + 2 = 6). A pole-placement
control scheme presented by Astrom and Wittenmark [29] allows performance-
based design, where the performance criteria are 1) to have a high gain to
reject bending and friction load disturbances, 2) to compensate delays in the
open-loop transfer function, and 3) to have low steady-state positioning errors.
The block diagram of the pole-placement controller is shown in Figure 6.19,
where the input is the command and the output is the actual position of the
actuator, respectively. B/A is the open-loop transfer function of the system
given in Eq. (6.113). The digital controller consists of a feed forward ﬁlter T(z),
a feedback ﬁlter S(z), controller poles R(z), and an observer A0(z). The transfer
function of the closed-loop control system can be derived from the block diagram
(Fig. 6.19) as follows:
y(k)
yref(k) =
(BT)/(A0A′R)
1 + (BA0S)/(RA0A′) =
BT
A′R + BS.
(6.116)
The control polynomials R, S, T, and A0 are designed in such a way that the
closed-loop response of the overall system behaves like a desired model transfer

304
DESIGN AND ANALYSIS OF CNC SYSTEMS
function as follows:
y(k)
yref(k) =
BT
A′R + BS = A0Bm
A0Am
,
(6.117)
where polynomials Am and Bm contain the desired poles and zeros of the sys-
tem. The desired system response was chosen to have second-order dynam-
ics, with a settling time of ts ≈4/(ξωn) for underdamped systems and ts ≈
−ln 0.05/(ωn(ξ −

ξ 2 −1)) for overdamped systems. The desired characteris-
tic equation is selected as
Am0 = s2 + 2ξωns + ω2
n = s2 + 750s + 62,500,
with a natural frequency of 250 rad/s. The roots of the overdamped (ξ > 1)
characteristic equation are
si,ii = ωn(−ξ ±

ξ 2 −1) = (−95.4915, −654.5085).
The corresponding discrete time domain roots for a T = 1 ms sampling interval
become
zi = esiT = 0.9089,
zii = esiiT = 0.5197,
with the desired discrete transfer function of
Am0 = (z −zi)(z −zii) = z2 −1.429z + 0.4724 = z2 + am1z + am2.
The resulting desired model transfer function is selected to have the same
numerator (i.e., zeros) and the same order of the denominator of the open-loop
process dynamics as follows:
Bm
Am
=
y(k)
yref(k) =
bm0(b0z + b1)
z4(z2 + am1z + am2)
count
count
	
,
(6.118)
where yref is the commanded reference position and bm0 is a scale factor to
ensure a unity gain in the overall closed-loop system as follows:
****
Bm(z)
Am(z)
****
z=1
= 1,
→
bm0 = 1 + am1 + am2
b0 + b1
.
Based on the design criterion of causality rules (i.e., the present input must
not depend on the future outputs of the system) proven by Astrom and Witten-
mark [29], the control polynomials must have the following orders:
deg(A0(z)) ≥2 deg(A′(z)) −deg(Am(z)) −1 = 5,
let deg(A0(z)) = 5,
deg(R(z)) = deg(A0(z)) + deg(Am(z)) −deg(A′(z)) = 5 + 6 −5 = 5,
deg(S(z)) ≤deg(R(z)),
let deg(S(z)) = 5,
deg(T(z)) = deg(A0(z)) = 5.
The corresponding control polynomials are as follows:
A0 = z5,
R(z) = z5 + r1z4 + r2z3 + r3z2 + r4z + r5,
S(z) = s0z5 + s1z4 + s2z3 + s3z2 + s4z + s5.
(6.119)

6.7 DESIGN OF AN ELECTROHYDRAULIC CNC PRESS BRAKE
305
By considering the equivalence of the actual closed-loop and desired transfer
function models (Eq. 6.117), we can identify the parameters of the control
polynomials from the solution of the following Diophantine equations [29]:
B(z)T(z) ≡A0(z)Bm(z),
A′(z)R(z) + B(z)S(z) ≡A0(z)Am(z).
(6.120)
By considering the numerator terms, we have
(b0z + b1)T(z) ≡z5bm0(b0z + b1) →T(z) = bm0z5.
(6.121)
When A′(z)R(z) + B(z)S(z) ≡A0(z)Am(z) is considered, we get
z4(z2 + a′
1z + a2)(z5 + r1z4 + r2z3 + r3z2 + r4z + r5)
+ (b0z + b1)(s0z5 + s1z4 + s2z3 + s3z2 + s4z + s5)
≡z5z4(z2 + am1z + am2).
The resulting expressions for the parameters are
r1 = am1 −a′
1,
r2 = am2 −a′
2 −a′
1r1,
2 < j < (d = 5) →rj = −(a′
1rj−1 + a′
2rj−2),
j = 3, 4,
rd = r5 =

a′
1
b1
b0
−a′
2

rd−1 + a′
2
b1
b0
rd−2
	#
a′
1 −a′
2
b0
b1
−b1
b0
	
,
s0 = −rd + a′
1rd−1 + a′
2rd−2
b0
,
s1 = −a′
2rd
b1
,
sj = 0,
j = 2, . . . , d,
where delay is d = 5. Because the parameters of the open-loop transfer function
are assumed to be time invariant, the Diophantine equations are solved once
during the design. The computed numerical values used for the right- and
left-actuator position control are presented in Table 6.3.
From the block diagram of the control system, the position command input
is generated according to the following expression:
R(z)u(k) = T(z)yref(k) −S(z)y(k).
(6.122)
Substituting the control polynomial parameters (R, T, S) leads to the following
control law being executed at each loop closure time Ts:
u(k) = t0yref(k) −
1

j=0
sjy(k −j) −
5

j=1
rju(k −j).
(6.123)
A series of position jumps are commanded to both actuators to test the step
response behavior of the controlled press (see Fig. 6.20). It is observed that
both actuators have approximately matched dynamic response, which is essen-
tial in coordinated precision bending, and the system has a total rise time of
about 12 ms. Although the same control law was used in both extending (nega-
tive direction) and retracting motions, the actuators do not exhibit overshoots,
which is a basic requirement for a machine tool control system. To test the

306
DESIGN AND ANALYSIS OF CNC SYSTEMS
Figure 6.20: The response of the right- and left-axis positioning systems to step changes in the
position command.
inﬂuence of deadband and hysteresis, which are caused by the valve-spool stic-
tion and Coulomb friction in the guides, a series of pulse position commands
with an increasing amplitude were demanded from the CNC system. The actu-
ator positions were monitored at 2 ms intervals and are shown in Figure 6.20.
The results indicate that the deadband of the controlled motion is within 1
encoder unit (0.005 mm), which is quite satisfactory.
The computer control strategy presented here is applicable to many other
motion or process control applications found in practice.

6.8 PROBLEMS
307
K
τ  s +1
v
v
Ke
s
K
x
[Count]
a
ω(rad/s)
d
1-e-sT
s
T
Vc
[Counts/s]
ZOH
Velocity 
Controller
Encoder
Figure 6.21: Open-loop transfer function of axis drive system.
6.8
PROBLEMS
1. An open-loop block diagram of a feed drive system is given in Figure 6.21. The
given feed drive system is to be controlled with a proportional+derivative
(PD) type controller that has a transfer function of u(s)
e(s) = Kp + Kds, where
the position-tracking error in [count] is e(s) = xr(s) −x(s), and u(s) is the
control signal [V].(Kg = 8.956 Nm/V, Km = 50 rad/s/Nm, τm = 1.565 s, Ke =
3,183 counts/rad.)
a. Draw the closed-loop system’s block diagram, considering the commanded
position x′
r(s) [count] and the disturbance torque Td(s)[Nm] as the inputs,
and the measured table position x(s)[count] as the output.
b. Obtain the closed-loop expression for the measured table position as a
function of the commanded position and the disturbance torque in the
form x(s) = Gx(s)xr(s) + Gd(s)Td(s).
c. Design the PD controller gains (i.e., Kp and Kd) so that the closed-loop
response to a step position command has a rise time of tr = 0.025[s] and
a maximum overshoot of Mp = 1
[percent]. Design the controller in the
Laplace domain.
d. Assuming that the position control loop is to be closed digitally at a
sampling period of T = 0.001[s], obtain the control law (i.e., difference
equation) that needs to be implemented in the control computer by trans-
forming the continuous-time PD into the z domain using Euler (backward
difference) approximation (s ∼= z−1
Tz ).
e. Sketch the frequency response graph (only magnitude at 3 points, ω =
0, ωn, 10ωn) of the closed-loop disturbance transfer function (i.e., Gd(s) =
x(s)/Td(s)).
f. Compute the steady-state tracking error for a machining operation where
a feed motion of f = 105 [counts/s] is commanded against a constant
cutting torque of Td = 10 Nm in the opposing direction.
2. CNC Design and Analysis Project: A simpliﬁed block diagram of a CNC
milling machine’s feed drive system is shown in Figure 6.22. The parameters
of the system are given below:
Hg = 0.0913 V/(rad/s); tachogenerator constant.
Kd = 0.0781 V/counts; D/A converter gain.
Ke = 636.6 counts/rad; encoder gain.
Kp =? ; digital ﬁlter gain.
a =? ; digital ﬁlter’s zero.
b =? ; digital ﬁlter’s pole.
T = 0.001 s ; sampling period.

308
DESIGN AND ANALYSIS OF CNC SYSTEMS
T
-
+
X r
[counts]
K
z+a
z+b
p
D/A
G  (s)
v
s
Ke
X a
[counts]
Vc [Volt]
 
[rad/s]
 t (sec)
X r [counts]
4.0
5
2.0
2500
0
Position Command Profile
Block diagram of a feed position control servo
ω
Figure 6.22: Block diagram and command position history of a feed drive control system.
a. The transfer function of the velocity loop (Gv(s)) is not known. Measure
the transient response of the velocity loop by applying a rectangular wave-
form with Vc = 1 V amplitude to the servoampliﬁer. The actual velocity
of the feed drive is measured from the tachogenerator output, which
has a gain of Hg [V/(rad/s)]. Identify the transfer function of the velocity
loop (Gv(s) = ω(s)/Vc(s) =?) by assuming that it can be approximated as
a ﬁrst-order system. Simulate the step response of the velocity loop in
the continuous time domain using Laplace transforms, and compare the
response with the experimental measurements by plotting them on the
same graph. (Note: If the experimental setup is not available, assume
Gv(s) = 11/(0.008s + 1).)
b. Measure the frequency response of the velocity loop. Plot the magnitude
ratio and phase difference up to 100 Hz. Determine the bandwidth of the
velocity loop.
c. Design the digital ﬁlter of the position control system in such a way that
the overshoot is negligibly small (i.e., Mp = 1 percent) and the rise time
is about 20 ms. You can design the control law either in the s or the z
domain.
d. Assuming that the CNC computer is sending velocity signals (Vc) at
T = 1-ms intervals to the servoampliﬁer via a D/A converter, iden-
tify the transfer function of the entire position loop in the z or the s
domain. Simulate the response of the position loop for the input shown in
Figure 6.22 using the discrete transfer function of the system. Identify the
steady-state error theoretically and compare it with the error indicated
by the simulation.

6.8 PROBLEMS
309
e. Derive the state-space response of the position loop. Simulate the position
and velocity responses of the position control system for the input proﬁle
given in Figure 6.22. Compare the position response proﬁle with the
transfer function simulation results obtained in the previous question.
f. Design a real-time interpolation algorithm for a combination of linear
and circular tool paths. Simulate the given tool paths on a PC. If possible,
try the algorithms on a real machine tool in a laboratory.
g. Combine the real-time interpolation and the time domain feed drive
servosimulation algorithms. Analyze the contouring errors on a circular
tool path by increasing the feed velocities.
3. A High-Speed Linear Motor Driven XY Table Design: A high speed, two-
axis XY table is driven by linear (i.e., ﬂat bed) dc motors and linear guides.
The assembly drawing and the block diagram of the continuos velocity con-
trol loop are provided in Figure 6.23. The actual position (xa [m]) of the
head is measured with a linear encoder. The position loop is closed in
the digital computer, and the position error is passed from a digital ﬁl-
ter D(z) = Kp z+a
z+b at T discrete time intervals. The digitally ﬁltered error
is sent to a linear motor ampliﬁer via a 12-bit D/A converter with a volt-
age range of ±10 V. The x axis of the table has the following param-
eters: Ki = 9,700 A/A, Kp = 31.8 V/v, Ka = 0.25 V/A, Kb = 13.78 V/(m/s),
La = 0.75 mH, Ra = 2.8 , Tg = 0.068 V/V, Hg = (1 V)/(0.03 m/s), Hi = 5.246,
Kt = 15.568 V/V, Ke = 1 μm/count. The saturation limits of the PWM voltage
ampliﬁer are ±159 V, and the control interval is T = 0.001 s.
a. Derive the transfer function of the velocity loop (Gv(s)).
b. The inner velocity loop has a high bandwidth; thus, it can be approx-
imated as a gain E = 4 A/V as shown in Figure 6.23. The frequency
response of the velocity loop is measured by using the experimental
setup shown. The magnitude of the system at frequencies ω = 0, 1,000
rad/s were measured to be |Gv(0)| = 0.1076 m/s/V and |Gv(1,000)| =
0.0139 m/s/V, respectively. Estimate the table mass (Ma (kg)) and ref-
erence signal gain (Sg). What are the gain and the time constant of the
velocity loop?
c. Design the digital ﬁlter (D(z)) in such a way that the overall closed-
position loop behaves like a second-order overdamped system with two
negative real poles, s1 = −100 rad/s, s2 = −150 rad/s. (Kp, a, b =?)
d. Find the steady-state error of the position control loop for a steady-state
feed velocity of f = 0.1 m/s.
e. Remove the velocity feedback from the system (Tg = Hg = 0), and derive
the closed-loop transfer function of the complete position loop (in the s or
the z domain). Consider the inner loop in derivations.
f. Simulate current, velocity, position, and velocity command (Vc) for a unit
step and ramp inputs with a constant Coulomb friction of 10 N. Control
software tools can be used for the simulation.

310
DESIGN AND ANALYSIS OF CNC SYSTEMS
Ref. Gain 
HiFreqGain
High speed XY table with linear drives and motors.
Amature Current Feedback
inner loop
Td = disturbance force
Tacho Gain
 (Amplifier)
Tacho Constant
 (Velocity card)
Velocity Feedback
Velocity
Command
Hi
S
Ki
Ka
Tg
Hg
+
−
Current Ampl.
Gain
PWM
Limit
PWM
−
−
+
1
Mas
1
LaS + Ra
Kt
Kb
Xa[m/s]
Vc[V]
Vc[V]
.
Xa
velocity
1
Mas
Tg
Ki
Hg
E
Hi
+
−
HiFreqGain
Inner Loop Gain
Encoder
feedback
1
2
3
4
5
6
7
8
7
6
1
3
Signal - Generator
Force Constant Gain
Tacho Constant
(Velocity card)
Velocity Feedback
Experimental set-up for measurements 
Simplified block diagram of one drive without
encoder and CNC computer. The inner loop is E.
Tacho Gain
(Amplifier)
Ref. Gain
Sg
Sg
Reference
signal
[m/s]
.
[A]
Velocity
  Card
Amplifier
Motor
Oscilloscope
Block diagram of one drive without encoder and CNC computer.
Figure 6.23: A high-speed linear XY table system. Parts: 1,2 = dc linear motors for x and y axis;
3,4 = linear encoders for x, y drives; 5 = top positioning plate; 6 = spring-loaded bumper; 7,8 =
linear support rails for x, y drives.
4. A model of a leadscrew feed drive system with a direct table position feedback
encoder is shown in Figure 6.24. The motor is powered by the current ampli-
ﬁer and drives the leadscrew system that delivers motion to the machine
table, which is supported by lubricated guideways. The position of the table is
measured by using a linear encoder, and this measurement is used by the
servocontroller for generating the necessary control signals, so that the table

6.8 PROBLEMS
311
Servo
Controller
Motor
Coupling
Nut
Machine Table
Workpiece
Up/Down
Counter
Lead Screw
Linear Scale
(Encoder)
Table Motion
Spindle
Control Signal u
i
x
x
xr
Motion
Command
Measured Table Position
Motor Current
Lubricated
Guideways
Cutting
Force Fc
Figure 6.24: Machine tool feed drive control system.
closely follows the commanded motion proﬁle. (Linear Encoder: a linear optic
scale attached to the table, and it replaces rotary encoder.)
No rotary velocity or position feedback is used on the motor. It is assumed
that current regulation loop between the ampliﬁer and the motor armature
is much faster than the rest of the system dynamics; hence, the ampliﬁer
is regarded as a static gain that produces motor current proportional to the
applied control signal. The electrical winding of the motor can be neglected.
The effect of disturbances such as cutting force are to be modeled as equiv-
alent disturbance torque (Td) acting on the motor shaft.
a. Draw the block diagram of the open-loop system (i.e., servocontroller not
connected to the physical system). Express the transfer function of each
part in the system in the Laplace domain. Use symbolic representation of
the system on the block diagram. The input is a signal voltage [V] to the
ampliﬁer, and the output is in [counts]. The motor disturbance torque is
in [Nm]. Substitute the values of each parameter in the open-loop transfer
function block diagram using the following parameters of the machine:
Current ampliﬁer gain
Ka
4 [A/V]
Motor torque gain
Kt
2.239 [Nm/A]
Leadscrew pitch length
hp
20 [mm/rev]
Rotational inertia of rotor, coupling, and leadscrew
J
0.027[kg m2]
Mass of Table and Nut
mt
225 [kg]
Mass of workpiece
mw
200 [kg]
Reﬂected viscous friction at the motor shaft
Be
0.020 [Nm/(rad/s)]
Linear encoder resolution of quadrature decoding
1 [count/μ m]
Digital to analog converter gain (neglect)
1
b. Express the open-loop transfer function of the system both symbolically
and numerically.

312
DESIGN AND ANALYSIS OF CNC SYSTEMS
c. Design a lead compensator to achieve 60 degrees phase margin at a
crossover frequency of ω = 60 [Hz]. Plot the frequency response of the
open-loop system by including the compensator, and show that the design
criteria are met.
5. CNC Hydraulic System Design Project: You are assigned to design a digital
control system for a hydraulic actuator driving a lumber bandsaw head.
The physical control system consists of an ampliﬁer driving a servovalve–
piston/cylinder actuator carrying the bandsaw head. The actual position
(xa [μm]) of the head is measured with a linear encoder circuit, which has a
gain of Ke [μm/mm], and the linear velocity of the head motion is monitored
in [mm/s] by a velocity transducer. The position loop is closed in the digital
computer, and the pole placement control law explained in Section 6.7.4 is
used for the position control of the actuators. The resulting control variable
is sent to a servovalve ampliﬁer via a D/A converter, which has a gain of
Kd. The input voltage to the velocity loop (Vc [V]) is received from the D/A
converter, and the output velocity is measured from a velocity transducer in
u [mm/s]. The velocity loop is found to behave like a ﬁrst-order continuous
system with a gain of Kv [(mm/s)/V] and time constant of τv [s].
a. Draw the block diagram of the complete control system.
b. Derive the state-space equations for the velocity u [mm/s] and head posi-
tion xa [μm]. Neglect the disturbance load.
c. The gain and the time constant of the velocity loop were estimated from a
simple frequency response test by sending Vc [V] = sin 100t to the servo-
valve ampliﬁer and measuring the resulting sinusoidal velocity response.
The measured velocity was observed to have a maximum amplitude of
u = 70.71 mm/s and a time delay of Td = 0.0078 s with respect to the
sinusoidal input Vc. What are the gain and the time constant of the veloc-
ity loop?
d. The control interval is T = 0.001 s, the encoder circuit has a resolution
of 1,000 μm/mm (i.e., 1 count = 1 μm), and the D/A circuit has a 10-bit
resolution with a voltage range of ±5 V. Design the pole-placement con-
trol law in such a way that the overall closed-position loop behaves
like a second-order underdamped system with a natural frequency of
ωn = 250 rad/s and a damping ratio of ζ = 1.5.
e. Express the states (u [mm/s], xa [μm]) as difference equations (from item
b) with numerical values. Assume the input to be series of xr(k).

CHAPTER SEVEN
SENSOR-ASSISTED MACHINING
7.1
INTRODUCTION
The ﬁrst step in automating machining systems was the introduction of com-
puter numerically controlled (CNC) machine tools. The primary function of
CNC is to automatically execute a sequence of multiaxis motions according to a
part geometry. However, safe, optimal, and accurate machining processes are
generally planned by manufacturing engineers based on their experience and
understanding of the process. It is difﬁcult to predict vibration, tool wear and
breakage, thermal deformation of the machine tools, and similar process-based
events by using off-line theoretical models. In addition to engineering the
process plans before actual machining, the machine tools are instrumented
with vibration, temperature, displacement, force, vision, and laser sensors to
improve the productivity and reliability of the cutting operations on-line. The
sensors must have reliable frequency bandwidth, have a good signal-to-noise
ratio, and provide signals with reliable correlation to the state of the process.
They must also be practical for installation on machine tools. The measured
sensor signals are processed by real-time monitoring and control algorithms,
and the corrective actions are taken by the CNC accordingly. The corrective
actions may be manipulation of spindle speed, feed, tool offsets, compensation
of machine tool positions, feed stop, and tool change depending on the process
monitoring and control application. Such a sensor-assisted cutting is called
intelligent machining in the literature [16, 17]. The architecture of CNC must
be organized in such a way that it allows real-time manipulation of the machine
tool’s operating conditions. In other words, CNC must be open to allow integra-
tion of user-developed real-time application programs. The following Intelligent
Machining Module has been developed at the author’s laboratory [11, 18] for
modular integration of cutting process monitoring and control tasks to CNC
machine tools.
7.2
INTELLIGENT MACHINING MODULE
An Intelligent Machining Module (IMM) has been designed to run on existing
commercial CNC systems that allow limited manipulation of cutting conditions
by the end users. The IMM runs on a digital signal-processing (DSP) board
with analog sensor signal-processing capability. Various intelligent machining
313

314
SENSOR-ASSISTED MACHINING
XYZ
Knee Type Vertical Milling
          Machine
CNC Master Controller
3 Component
Piezoelectric
Cutting Force
Dynamometer
  CNC
Monitor
Industrial AT 
  Computer
o o 
Microphone
Programmable Logic Controller
Intelligent Machining Module
(DSP Board with multiple 
  A/D and D/A Channels)
Force, vibration, temperature,
vision sensors on the machine
Figure 7.1: Sensor-assisted intelligent machining system.
tasks, such as adaptive control, tool condition monitoring, and process control,
can simultaneously run on the system. The user can reconﬁgure the system by
using script commands from the supplied signal-processing and data collection
library. Each function is called a Plug In Module (PIM), and the IMM has a
mechanism of integrating new, user-developed PIMs to the script command
library. The IMM is conﬁgured to communicate with commercial semiopen
CNCs through the PC–CNC communication links and software. Several IMM
systems have been installed in industry. Some examples include adaptive con-
trol, chatter detection, and tool failure–monitoring applications on a ﬁve-axis
machining center controlled by a FANUCTM CNC with a PC interface. The
IMM sends feed and spindle speed change, machining halt, tool change, tool
offset, and other numerically controlled (NC) commands accepted by the CNC
controllers.
7.2.1
Hardware Architecture
Real-time IMM algorithms can run on any DSP board that has a shared
memory with the host PC and analog channels to collect sensor signals. Ana-
log outputs of the sensors, such as cutting force, vibration, temperature, and
pressure sensors, can be connected to the DSP board’s data acquisition module
(see Fig. 7.1). The DSP board is controlled by PC software running under the
Windows NT operating system. Some commercial CNC systems either allow
high-speed communication with an external PC or they have an internal PC.
Machine tool commands, such as feed change, spindle speed change, tool offset,
tool change, and similar commands can be sent from C programs running on the

7.2 INTELLIGENT MACHINING MODULE
315
PC to the executive of the commercial CNC. Such CNC systems, which allow
limited interface with user applications, are called “semiopen CNC systems” in
this book. The IMM has been designed to run on semiopen CNC systems.
7.2.2
Software Architecture
The IMM is a combination of a PC system manager running on the host PC
and a DSP system manager running on each DSP board in the PC bus. The
DSP system manager is conﬁgured to act as a server, whereas the PC man-
ager acts as a client. All real-time sensor data collection and signal-processing
activities are handled in the DSP. The PC system manager initializes the
user-requested functions, sets up signal-processing networks, and exchanges
information among the DSP, user, and CNC. To eliminate any hardware depen-
dence, a generic DSP interface was developed as a software module on the host
PC. Each DSP driver supplied by the DSP manufacturer communicates with
the rest of the software via the generic DSP interface, which is hardware
independent. The generic DSP interface provides high-level services, such as
command buffers, immediate data transfer protocol, and circular and double
buffers for data transfer. The IMM also features a generic I/O interface in the
DSP software, for high-level access to analog I/O, interrupts, and timers, and
it has a low level I/O driver for DSP-dependent operations. Different I/O and
DSP boards can easily be supported by simply changing hardware-dependent
drivers in the PC and the DSP software without modifying any user-developed
functions.
Signal-Processing Networks (SPNs)
The SPN is a collection of application-speciﬁc tasks, which are called plug in
modules (PIMs) in the IMM as shown in Figure 7.2a. Each SPN runs on a single
DSP board. The PIMs in an SPN are executed sequentially, which eliminates
the need for explicit synchronization, thereby enabling one to use a very fast
communication scheme without endangering the integrity of the transferred
data. An SPN can have multiple levels running at different frequencies, so that
data collection and processing can be done at one frequency, and additional
processing and decision making can be done at another frequency. The PIMs
and the links between the PIMs can be conﬁgured at runtime using a high-level
script language [11].
Plug in Module
The PIM interface allows application-speciﬁc tasks to be implemented at an
abstract level without knowing the hardware details of the underlying system.
Functions such as ﬁlters, control algorithms, transfer function identiﬁers, and
fast Fourier transforms can be implemented as PIMs so that they can be inte-
grated with the rest of the system. The inputs and outputs of a PIM are shown
in Figure 7.2b.

316
SENSOR-ASSISTED MACHINING
(a) Signal Processing Network (SPN) structure.
High Frequency data
 collection/processing
  (Level I)
Analog and/or Digital Inputs
PIM
PIM
PIM
PIM
PIM
PIM
PIM
PIM
PIM
PIM
PIM
PIM
Low Frequency data
 processing/decision
  (Level II)
PIM
PIM
PIM
PIM
PIM
PIM
Output
Output
Output
Input channels
Output channels
Data from PC
Data from PC
Data to PC
Data to PC
Plug In Module 
  (PIM)
(b) Plug In Module (PIM) structure.
Figure 7.2: Real-time information ﬂow structure in IMM.
7.2.3
Intelligent
Machining Application
The following script commands
are set by a user for adaptive cut-
ting force control and tool break-
age detection in a ﬁve-axis milling
application. Cutting force sen-
sors, with a calibration factor of
1,000 N/V, are connected to ana-
log channels 0, 1, and 2 of the DSP
board. Cutting forces are sampled
at 2,000 Hz, they are low pass
ﬁltered at 300 Hz, and the peak
and average resultant forces are
identiﬁed. There are four ﬂutes
on the end mill, and the spin-
dle speed is 600 rev/min (10 Hz).
In the second level, which corre-
sponds to tooth-passing frequency
(40 Hz), the peak cutting force is
used by the adaptive force con-
trol algorithm and the average
force is used by the tool break-
age detection function. The adap-
tive control PIM calculates the
required feed to keep the force
constant, and the tool failure algo-
rithm sends a feed hold signal if
chipping is detected. Both algo-
rithms pass the feed and feed hold
commands to the CNC via a PC
handler.
The system is set up via the following script commands:
Sensors are connected to analog channels 0,1, and 2 of DSP board.
INPUT SCALE 0, 1, 2; 1000, 1000, 1000 // Calibration: 200 N/V
BEGIN 0,1,2; 2000 // Sample input channels 0, 1, and 2 at 2,000 Hz.
LOWPASS FILTER(0; 16; 300) // Apply low-pass ﬁlter of length 16.
LOWPASS FILTER(1; 16; 300) // with a cutting frequency of 300 Hz
LOWPASS FILTER(2; 16; 300) // to channels 0, 1, and 2.
PEAK DETECT(0,1,2 -> 5 ; ; )
// Write peak and average of force vector
AVERAGE DETECT(0,1,2 -> 7; ; ) // available on channels 0, 1, and 2 to
// software channels 5 and 7.
SECOND LEVEL Timer 40 // Start 2nd algorithm level to run at 40 Hz
// Run adaptive control using peak force available on channel 5.

7.3 ADAPTIVE CONTROL OF PEAK FORCES IN MILLING
317
0               50            100            150            200
600
300
    0
Control interval 
Cutting force [N] 
Reference force
Measured
force
Figure 7.3:
Peak cutting force con-
trolled by an adaptive control PIM.
ADAPTIVE CONTROL ( 5, 6 ; ; 200, 200, 4, 0.2, 0.05 )
// Run tool breakage detection using average force on channel 7.
TOOL BREAKAGE DETECTION ( 7, 8 ; ; )
IMMEDIATE OUTPUT TO PC ( 6, 8 ; ; ) // Send the calculated feed and
// feed hold commands to the PC.
DOUBLE BUFFERED OUTPUT TO PC( 5, 6 ; ; ) // Store peak force and
// identiﬁed feed in a buffer.
END
// End second loop.
// Send feed override value to semi-open CNC.
IMMEDIATE HANDLER = Write feed override and emergency stop (0.05)
// Save all data in a disk ﬁle.
DOUBLE HANDLER = Write to disk (c:results.dat)
The graphical user interface of the IMM system records any signal or parame-
ter indicated within the script command ﬁle. A sample window of commanded
and measured cutting forces is shown in Figure 7.3. The fundamental philoso-
phy behind the IMM system is that it allows integration of new, user-developed
functions (i.e., PIMs) to the script library, and a new application can rapidly
be conﬁgured by calling script commands in the desired sequence. The mathe-
matical details of sample intelligent machining tasks – adaptive cutting force
control, tool breakage detection, and chatter avoidance – are provided in the
following sections.
7.3
ADAPTIVE CONTROL OF PEAK FORCES IN MILLING
7.3.1
Introduction
There are several physical constraints in the machining of metals. Some
of these constraints are machine tool dependent, such as maximum torque
and power available from the spindle drives. Other constraints are tool and
workpiece dependent. Overloading of a carbide insert must be avoided by keep-
ing the maximum chip thickness removed at a level that would not increase
the principal tensile stress in the cutting wedge beyond the ultimate tensile

318
SENSOR-ASSISTED MACHINING
Reference
force
F [N]
r
-
+
Adaptive
control
algorithm
Feed command
f  [mm/s]
c
CNC
Estimation of Machining 
Process Transfer Function 
Feed drive, 
motors and 
amplifiers.
Cutting
Process
Adjust
control
parameters
fa
Actual feed 
delivered
Measured
cutting force
   F  [N]
p
CNC Machine Tool
Figure 7.4: Block diagram of a general adaptive control system in machining.
strength of the tool material. Maximum static deﬂections left on the ﬁnished
surface must be within the tolerance of the workpiece. Maximum resultant
cutting force on a slender end mill must be kept safely below a limit value to
prevent fracture of the shank. Here, we present two different adaptive con-
trol strategies that constrain the maximum resultant force at a safe level by
adaptively manipulating the chip load or the feed rate.
A general block diagram of a typical adaptive control system is shown in
Figure 7.4. The input to the system is the reference or desired level of the
maximum cutting force. The actual cutting forces are measured via sensors
mounted on the table or on the spindle and are collected at 3 to 5 degrees
of angular rotation intervals to capture the peak resultant force. The peak
force at each tooth or spindle period is evaluated and passed to the adaptive
control law. When there are multiple teeth on the cutter, it is recommended
to use peak forces per spindle revolution. Otherwise runouts on the cutter
would give ﬂuctuating peak forces at each tooth period. The adaptive control
would send similarly ﬂuctuating feed rates to the machine tool drives, which
have a low bandwidth. As a result, the adaptive control system would produce
an oscillatory response, which is not desirable. Hence, the peak force (Fp(k)) is
evaluated at each spindle period (k) and subtracted from the set or desired force
level (Fr(k)). The adaptive control algorithm determines a new feed command
to minimize the force error. The feed command ( fc(k)) is sent to the CNC
unit, which has its own digital position control law executed at comparatively
small time intervals (e.g., 0.100 ms). The CNC unit sends voltage to the feed
drive motors, which move the table at an actual feed velocity of fa [mm/s].
Because machine tool drive control servos are tuned to be overdamped with
zero overshoot, they can be approximated to have ﬁrst-order dynamics with
an average time constant of 0.1 ms. Note that this value may depend on the
type of the machine tool and can be quite small for high-speed machine tool
drives. The cutting process feels the change in the chip load or the peak cutting
force (Fp(k)) at least after one tooth period. The chatter vibration–free cutting
process can be approximated as a ﬁrst-order system with a time constant equal
to one or more tooth periods but less than the spindle period. As the width
or depth cut changes on the workpiece, the peak cutting force varies along
the tool path. Hence, the ﬁrst-order dynamics of the process has time-varying

7.3 ADAPTIVE CONTROL OF PEAK FORCES IN MILLING
319
parameters. The combined CNC, machine tool feed drive, and cutting process
can have an approximate second-order dynamics (Gc(s)). The peak force is
evaluated from measurements and sent to an on-line process identiﬁcation
algorithm, which estimates the digital parameters of the combined machine
tool, CNC, and time-varying cutting process as the cutter travels through holes,
slots, and other features of the machined part. The time-varying coefﬁcients
of the process are estimated from the feed command input and peak force
output of the process. Estimated parameters of the machine tool and cutting
process are used to update the parameters of the adaptive control law at each
control interval. Because the control law parameters are adjusted according
to the changes in the cutting process parameters at each sampling interval,
the control system is adaptive to the varying workpiece geometry. An adaptive
control law, running at the control computer, computes new feed rate command
value at each sampling interval. The feed command moves the machine tool
table according to the servodynamics of the feed drive. The actual feed velocity
of the table changes the chip thickness and therefore the cutting force produced
during machining. The adaptive control loop ensures that the actual force felt
by the milling cutter is always equal to the reference constant force value which
is safely below the breakage limit. In the following sections we present step-
by-step the designs of a pole-placement controller and a generalized predictive
adaptive controller.
7.3.2
Discrete Transfer Function of the Milling Process System
As explained above, the machine tool control and drive system can be approx-
imated by a ﬁrst-order continuous system [100] as follows:
Gm(s) = fa(s)
fc(s) =
1
τms + 1,
(7.1)
where the fa and fc are the actual output and command input values of the
feed speed in [mm/s]. The feed or chip load per revolution can be found by
h[mm/rev] = fc/(Nn), where N is the number of teeth on the milling cutter and
n [rev/s] is the spindle speed. A turning process can be modeled by assigning
N = 1. The cutting force does not change instantly with the feed, and the
process can be approximated to have ﬁrst-order dynamics as follows:
Gp(s) = Fp(s)
fa(s) = Kcab(φst, φex, N )
Nn
1
τcs + 1,
(7.2)
where Kc [N/mm2], a [mm], and b(φst, φex, N) are the cutting constant, the
depth of cut, and immersion function, respectively. The immersion function
(b(φst, φex, N)) does not have any units and may change between 0 and ∼N,
depending on the immersion angle and the number of teeth in the cut. Both the
axial depth of cut (a) and the radial depth of cut (b) may change along the tool
path depending on the workpiece geometry; hence, a and b are time varying.
Note that when chatter vibrations are present, the process is very unstable,

320
SENSOR-ASSISTED MACHINING
producing large-amplitude, oscillating cutting forces. The process has complex,
high-order nonlinear dynamics and can not be controlled by manipulating the
feed with an adaptive control system. Chatter control must be treated sepa-
rately, and the adaptive control must be deactivated when chatter vibrations
are present.
Although the machine tool dynamics can be considered as time invariant,
it is more convenient to treat a combined machine tool and cutting process
as time varying for the practical application of adaptive control on multiaxis
machine tools. The combined transfer function of the system is
Gc(s) =
1
(τms + 1)
Kcab
Nn(τcs + 1) =
Kp
(τms + 1)(τcs + 1),
(7.3)
where the process gain is Kp[N/mm/s] = Kcab/(Nn). In reality, τc may change
owing to static deﬂections of the tool–workpiece structure, which in turn affect
the chip load. However, the above approximation is valid for practical simula-
tion studies of the adaptive control algorithms. Because the machining process
is controlled at spindle period T, the zero-order hold equivalent of Gc(s) is
considered
Gc(z) = Fp(k)
fc(k) = (1 −z−1)Z Gc(s)
s
=
b0z + b1
z2 + a1z + a2
,
(7.4)
where k is the spindle rotation counter, z is the forward shift operator, and
b0 = Kp
τm(1 −e−T/τm) −τc(1 −e−T/τc)
τm −τc
,
b1 = Kp
τc(1 −e−T/τc)e−T/τm −τm(1 −e−T/τm)e−T/τc
τm −τc
,
a1 = −(e−T/τm + e−T/τc),
a2 = e−T(1/τc + 1/τm).
The discrete process parameters (a1, a2, b0, b1) depend on the workpiece geom-
etry, and they may change during machining. For example, during the machin-
ing of engine blocks or aircraft wings, both the width of cut (i.e., immersion)
and the axial depth of cut may change according to the workpiece and selected
tool path geometry.
To design an adaptive control system for regulating the maximum cutting
forces, the unknown time-varying parameters (a1, a2, b0, b1) must be estimated
at each spindle period. A recursive least-square (RLS) algorithm is used to
estimate the time-varying parameters [48]. Henceforth, ˆa1, ˆa2, ˆb0, and ˆb1 will
be used for estimates of the cutting process parameters. The following RLS

7.3 ADAPTIVE CONTROL OF PEAK FORCES IN MILLING
321
algorithm is executed in a sequential manner at each spindle period (k):
ˆθ(k) = ˆθ(k −1) + K(k)[Fp(k) −ϕ(k)T ˆθ(k −1)],
(7.5)
K(k) =
P(k −1)ϕ(k)
λ + ϕ(k)TP(k −1)ϕ(k),
(7.6)
P(k) = P(k −1)
λ
[I −K(k)ϕ(k)T],
(7.7)
where the parameter vector is
ˆθT = [ ˆa1 ˆa2 ˆb0 ˆb1]
and the regressor vector is
ˆϕ(k −1)T = [−Fp(k −1)
−Fp(k −2)
fc(k −1)
fc(k −2)].
K(k) is called the estimation gain with a user-selected forgetting factor
of 0.5 < λ < 1. Typically λ is selected between 0.8 and 0.95 to discount the
inﬂuence of previous measurements on the estimation. The covariance matrix
P(k) is a square matrix with dimensions of Np × Np, where Np is the number
of parameters to be estimated (i.e., Np = 4 in this application). The algorithm
is started by assigning guessed initial values for the parameters (i.e., θ(0) =
[0.1 0.1 0.1 0.1]) and a large initial value for the covariance matrix (P(0) =
105). Care must be taken in using the RLS algorithm. When the adaptive control
algorithm runs for a long period and the process does not change signiﬁcantly,
the covariance matrix becomes either too small or too large, which creates
numerical instability. The problem can be avoided by monitoring the trace of
the covariance matrix (i.e., tr(P(k)) = +4
i=1 Pii). Whenever the trace is too small
or too large, the covariance matrix can be reset to an initial value.
7.3.3
Pole-Placement Control Algorithm
Once the process parameters are estimated on-line, a regular pole-placement
control algorithm [29] can be designed to constrain the cutting forces (see
Fig. 7.5). The closed-loop transfer function of the control system is given by
Fp(k)
Fr(k) =
T(z)B(z)
A(z)R(z) + B(z)S(z).
(7.8)
The polynomials S(z−1), T(z−1), and R(z−1) represent feedback, feedforward,
and error regulators, respectively, which have to be determined adaptively at
each spindle period. The control algorithm regulates the feeding velocity fc(k)
as
R fc(k) = TFr(k) −S Fp(k).
(7.9)
The aim of the adaptive controller based on pole placement design is to make
the closed-loop transfer function between the reference force Fr and the actual

322
SENSOR-ASSISTED MACHINING
F [N]
r
-
+
Feed command
f  [mm/s]
c
Adjust
control
parameters
   F   [N]
p
CNC Machine Tool
b  z + b
z   + a  z + a
0
1
2
1
2
T(z)
S(z)
1
R(z)
RLS Estimation 
b  , b  , a  , a
0
1
1
2
Reference
force
Measured
force
Figure 7.5: Block diagram of an adaptive pole-placement control system in
machining.
force Fp obey the following desired model dynamics:
Fp(k)
Fr(k) = Bm(z)
Am(z).
(7.10)
Here, Am(z) is designed to satisfy the transient response characteristics of
the controller. A second-order dynamics is selected to represent the desired
response as follows:
Am(z) = z2 −2e−ζωnT cos(ωn

1 −ζ 2T)z + e−2ζωnT.
(7.11)
This corresponds to a second-order continuous system with a desired damping
ratio of ζ and natural frequency of ωn (i.e., s2 + 2ζωns + ω2
n) with a discrete
control interval of T, which is equal to the spindle period. A damping ratio of
ζ = 0.8 and a rise time (Tr) equal to the larger of three spindle periods or feed
drive servo’s rise time can be selected for practical applications. The natural
frequency corresponds to ωn = 2.5/(Tr) rad/s. With these criteria, the discrete
closed-loop model transfer function with a unit gain is
Fp(k)
Fr(k) = Bm
Am
=
1 + m1 + m2
z2 + m1z + m2
,
(7.12)
where m1 = −2e−ζωnT cos(ωn

1 −ζ 2T) and m2 = +e−2ζωnT. For the system to
behave like the desired model, the following equivalence must hold:
B T
AR + BS = Bm
Am
.
(7.13)
The design problem is to ﬁnd the polynomials R, S, and T by using the
machining plant’s and desired model’s transfer functions. The numerator of
the machining process transfer function can be expressed as follows:
B(z) = B−(z)B+(z) = b0(z + b1/b0).
(7.14)
In reality, the zero of the machine tool plant is always stable and within the
unit circle (i.e., |b1/b0| < 1.0). However, RLS estimation does not necessarily
predict the parameters b0 and b1 accurately. To keep the control system robust,

7.3 ADAPTIVE CONTROL OF PEAK FORCES IN MILLING
323
separate control systems are designed depending on whether the process has
a stable or an unstable zero.
Case i: Process Zero Is Stable (||b1//b0|| < 1.0). Let
B−(z) = b0,
B+(z) = z + b1/b0.
The control parameters can be designed in such a way that the stable zero
can be canceled by one of the system’s closed-loop poles. To cancel B+ with one
of the closed-loop transfer function poles, as A and B are coprime, R must be
designed to have a factor of B+ as follows:
R = B+ · R ′ = (z + b1/b0) · R ′.
(7.15)
The closed-loop transfer function (Eq. 7.13) becomes
B+B−T
B+(A R ′ + B−S ) =
B−T
A R ′ + B−S = A 0 · Bm(z)
A 0 · Am(z),
(7.16)
where the observer A0 is included to ensure good tracking and causality in the
design. (Note: Causality means that the control input does not depend on the
future inputs and outputs of the system.) The control polynomials R ′, S, and T
can be solved from the following identities:
B−T ≡A 0Bm,
AR ′ + B−S ≡A0Am,
(7.17)
where the second identity is called the Diophantine equation. The degrees of
machining process transfer functions (i.e., the order of polynomials B and A)
are
deg(B) = deg(B+) + deg(B−) = 1 + 0 ,
deg(A) = 2
(7.18)
and deg(Am) = 2. The degree of the polynomials are determined from the
causality conditions and the order of process transfer functions is summarized
as follows:
deg(A 0) ≥2 · deg(A) −deg(Am) −deg(B+) −1 = 2 × 2 −2 −1 −1 = 0,
deg(R) = deg(A 0) + deg(Am) −deg(A) = 1 + 2 −2 + 1 = 2,
deg(S) = deg(A) −1 = 2 −1 = 1,
deg(T) = deg(A 0) + deg(Bm) −deg(B−) = 1 + 0 −0 = 1.
The resulting control polynomials are
A0(z) = z,
R ′(z) = z + r1,
S(z) = s0z + s1,
T(z) =t0z.
(7.19)
The Diophantine equation (A R ′ + B−S = A 0Am) becomes
(z2 + a1z + a2)(z + r1) + b0(s0z + s1) ≡z(z2 + m1z + m2)

324
SENSOR-ASSISTED MACHINING
and
B−T ≡A 0Bm.
From the two equivalence, the control polynomial parameters are derived as
follows:
r1 = m1 −a1,
→
R(z) = z2 + (r1 + b1/b0)z + (b1/b0)r1,
s0 = m2 −a1r1 −a2
b0
,
s1 = −a2r1
b0
,
→
S(z) = s0z + s1,
t0 = 1 + m1 + m2
b0
,
→
T(z) = t0z,
(7.20)
where R(z) = B+R ′ = (z + b1/b0)(z + r1).
The feed rate is calculated at each spindle period from the control law as
follows:
fc(k) = T(z)
R(z)Fr(k) −S(z)
R(z)Fp(k).
After substituting parameters and scaling polynomials by z−2, we obtain
fc(k) = t0Fr(k −1) −

r1 + b1
b0

fc(k −1) −r1
b1
b0
fc(k −2)
−s0Fp(k −1) −s1Fp(k −2).
(7.21)
Here, the process parameters are replaced by the on-line estimated values
(ˆb0, ˆb1, ˆa1, ˆa1) so that the control system can adapt itself to the time-varying
machining process. The real-time application of the adaptive control algorithm
can be summarized as follows:
r Collect the maximum cutting force at spindle revolution k.
r Estimate the process parameters (b0, b1, a1, a2) by using the RLS algorithm.
r Solve for the control polynomials R, S, and T (Eq. 7.20).
r Calculate the feed rate (Eq. 7.21) and send it to the CNC.
Case ii: Process Zero Is not Stable (||b1//b0|| > 1.0). Let
B+(z) = 1,
B−(z) = b0z + b1.
The procedure is identical to that of case i except that the process zero is not
canceled and it must be included in the model transfer function as follows:
t0 = 1 + m1 + m2
b0 + b1
,
and the Diophantine equation becomes
(z2 + a1z + a2)(z + r1) + (b0z + b1)(s0z + s1) ≡z(z2 + m1z + m2).
The remaining solution procedure is identical to the previous case.

7.3 ADAPTIVE CONTROL OF PEAK FORCES IN MILLING
325
150
20.3
20.3
20.3
20.3
20.3
18.2
Feed
2.54
2.54
2.54
2.54
2.54
2.54
2.54
Figure 7.6: Workpiece geome-
try
to
test
step
response
of
adaptive milling force control
algorithms.
Workpiece
mate-
rial: Aluminum 6067. Cutter: 4-
ﬂuted carbide end mill. Spindle
speed = 715 rev/min.
Machining Test Results
The adaptive pole-placement control algorithm is integrated to the IMM as a
PIM, and tested on a milling machine controlled by an open architecture CNC.
The workpiece geometry and cutting conditions are given in Figure 7.6. The
workpiece was prepared to have step changes in the axial depth of cut to test
the transient response and robustness of the control algorithm. Whenever an
unstable zero is estimated by the RLS algorithm, the pole-placement control
law is switched to the second case as outlined above. The reference peak force
was set to Fr = 1,200 N. The experimental results are given in Figure 7.7.
The peak resultant force is always kept at the desired 1,200 N level, and
the algorithm gives some overshoots when the axial depth of cut increases
stepwise. However, the control algorithm is stable and rapidly converges. The
corresponding feeds identiﬁed by the control law are also given, along with
the estimated process parameters (b0, b1, a1, a2) by the RLS PIM. The control
interval corresponds to the spindle rotation period.
7.3.4
Adaptive Generalized Predictive Control of Milling Process
In general, most adaptive control algorithms work fairly well when they are
tuned for a speciﬁc machine tool at a constant speed, such as the adaptive pole-
placement control presented above. The pole-placement algorithm depends on
the spindle speed, which is the sampling period (T). A robust and modular adap-
tive control algorithm, which is spindle speed independent, free of covariance
drifting in parameter estimation, and robust to variable time delays between
the feed command and actual feed delivered by the CNC is required so that it
can be integrated to an open-architecture CNC system with a minimal amount
of modiﬁcations. Based on the extensive experience of machining process con-
trol strategies in the author’s laboratory [5, 100], an adaptive generalized pre-
dictive control (GPC) method was found to satisfy the requirements most [16].
GPC is more robust to future transient changes in the cutting forces, that is,
the geometry that can be obtained from a computer-aided design (CAD) system
[100], and the varying time delay between the feed command generated by
the adaptive control module and its actual execution by the CNC system. The
fundamental control law was presented by Clarke et al. [40], and its speciﬁc
application to machining control is brieﬂy summarized as follows.

326
SENSOR-ASSISTED MACHINING
0
500
1000
1500
2000
0
250
500
750
1000
1250
1500
1750
2000
Control interval (k)
Peak Force (N)
0
0.5
1
1.5
2
2.5
0
250
500
750
1000
1250
1500
1750
2000
Control interval (k)
Feed (mm/sec)
-0.6
-0.4
-0.2
0
0.2
0.4
0.6
0.8
0
250
500
750
1000
1250
1500
1750
2000
Control interval (k)
Parameter Value s
a
a
b
b
1
2
0
1
Figure 7.7: Milling test results of adaptive pole-placement control system. See
Figure 7.6 for the part geometry and cutting conditions.
The combined transfer function of the feed drive dynamics and chatter-free
cutting process can be expressed as [16] follows:
Gc(z−1) = Fp(k)
fc(k) = z−1B(z−1)
A(z−1)
[3pt] = z−1(b0 + b1z−1 + b2z−2)
1 + a1z−1 + a2z−2
,
(7.22)

7.3 ADAPTIVE CONTROL OF PEAK FORCES IN MILLING
327
where fc(k) is the command feed sent to the CNC system by the adaptive con-
trol module at spindle period k. With respect to the previous transfer function
(Eq. 7.4), the order of the machining process is increased to account for the non-
linear relationship between the feed rate (i.e., chip thickness) and the cutting
force. The parameters of polynomials B and A may vary with time depending
on the changes in the radial and axial depths of cut and the slight changes
in the feed drive dynamics. They are estimated recursively at each spindle or
adaptive control interval k from measured peak force Fp and commanded feed
fc vectors. A modiﬁed RLS algorithm, which avoids parameter drifting caused
by the absence of steady excitations (i.e., changes in the workpiece geometry),
was used. The covariance matrix drifting toward instability is avoided by track-
ing the trace of the covariance matrix, and updating it only when there is a
change in the process. The recursive parameter identiﬁcation algorithm with
covariance tracking is given in Appendix B. The GPC method is devised for an
ARIMAX model. Invoking this model naturally leads to the adoption of an inte-
grator to the controller, thus eliminating steady-state offsets. The machining
process model is therefore rearranged in the ARIMAX form as follows:
Fp(k) = B(z−1)
A(z−1) fc(k −1) +
ζ (k)
	A(z−1),
(7.23)
where 	 = (1 −z−1) and ζ (k) is assumed to be an uncorrelated random noise
sequence. Then a j step ahead prediction of Fp(k) based on Eq. (7.23) can
be obtained by expressing the noise term by its partial fraction expansion as
follows:
z jζ (k)
	A(z−1) = z jEjζ (k) +
Fj(k)
	A(z−1)ζ (k),
which leads to the Diophantine equation as follows:
1 = Ej(z−1)A(z−1)	 + z−jFj(z−1),
(7.24)
deg(Ej(z−1)) = j −1 , deg(Fj(z−1)) = deg(A(z−1)) = 2.
Here, Ej and Fj are polynomials uniquely deﬁned, given A(z−1) and the predic-
tion interval j. Once they are calculated for one value of j, simple iterations can
be used to calculate them for all other j; see the next section. All the noise com-
ponents are in the future; therefore, provided that the output data up to time
k and fc(k + j −1) are available, the j step ahead prediction of peak cutting
force Fp at spindle interval k can be given by
ˆFp(k + j) = Gj(z−1)	 fc(k + j −1) + FjFp(k),
(7.25)
where Gj(z−1) = EjB(z−1). The delay in the process is assumed to be one here,
which may change slightly depending on the spindle speed.
A general case is considered by selecting the minimum and maximum pre-
diction output horizons as N1 = 1 and N2 = 4, respectively. The GPC control
law takes predicted output values within the next four spindle revolutions

328
SENSOR-ASSISTED MACHINING
when manipulating the control parameter (i.e., the feed). Equation (7.25) con-
tains present (i.e., k), past (i.e., k −i), and future (i.e., k + i) values of feed and
forces. GPC considers that future control inputs (i.e., feed rates fc(k + j)) do
not change beyond the control horizon NU, which is selected to be NU = 1
here. Thus, 	 fc(k + 1) = 	 fc(k + 2) = 	 fc(k + 3) = 0. Equation (7.25) can be
partitioned as
{ ˆFp} = {GI}	 fc(k) + { f},
(7.26)
where vector dimensions are [4 × 1], and their derived contents are given in
the following section. Note that vector { f} contains present and past measured
peak forces Fp(k −i), i = 0, 1, 2 and past feed commands fc(k −i), i = 1, 2, and
recursively computed polynomials Gj and Fj, as well. According to GPC strat-
egy, the feed rate is calculated by minimizing the expected value of a quadratic
cost function containing future predicted errors within the output horizon (i.e.,
the next four spindle revolutions) between the actual and reference peak forces
over the control horizon (i.e., the next spindle revolution) as follows:
J( fc, k) = E
N2

j=N1
[ ˆFp(k + j) −Fr(k + j)]2 + λ[	 fc(k)]2,
(7.27)
where λ, the weighting factor on the control input increment fc(k) −fc(k −1),
is selected as λ = 0.2 to soften the impact of sudden changes in the geometry
on the adaptive control law. The minimization of the cost function (∂J/∂fc = 0)
leads to the input feed command at spindle interval k as follows:
fc(k) = fc(k −1) +
1
{GI}T{GI} + λ{GI}T({Fr} −{ f}).
(7.28)
The parameters of polynomials Ej, Fj, and Gj are recursively calculated fol-
lowed by the control law given above (Eq. 7.28) at each spindle period. The
computed vector feed fc(k) is sent to the CNC master controller, which con-
strains the actual machining force at a desired reference level. The feed is
bounded between the user-deﬁned minimum and maximum limits for safety.
Recursive Computation of Polynomials Ej, Fj, and Gj
The recursive algorithm of GPC is brieﬂy summarized here. For j = 1 the
Diophantine equation becomes
1 = 	A(z−1)E1(z−1) + z−1F1(z−1),
(7.29)
which yields e10 = 1, f10 = −(a1 −1), f11 = −(a2 −a1), and f12 = a2.
For j > 1, consider the difference of Diophantine equations at j and j + 1 as
follows:
	A[Ej+1 −Ej] + z−j[z−1Fj+1 −Fj] = 0,

7.3 ADAPTIVE CONTROL OF PEAK FORCES IN MILLING
329
TABLE 7.1. Polynomials E j, Fj, and Gj
j
E j
Fj
G j
1
e0
f10 + f11z−1 + f12z−2
g10 + g11z−1 + g12z−2
2
e0 + e1z−1
f20 + f21z−1 + f22z−2
g20 + g21z−1 + g22z−2 + g23z−3
3
e0 + e1z−1 + e2z−2
f30 + f31z−1 + f32z−2
g30 + g31z−1 + g32z−2 + g33z−3
+ g34z−4
4
e0 + e1z−1 + e2z−2 + e3z−3
f40 + f41z−1 + f42z−2
g40 + g41z−1 + g42z−2 + g43z−3
+ g44z−4 + g45z−5
which leads to
e10 = e20 = e30 = e40 = e0 = 1; e21 = e31 = e41 = e1; e32 = e42 = e2;
e43 = e3;
and
ej−1 = f j−1,0; f j,i = f j−1,i+1 −ej−1(ai+1 −ai),
i = 0, 1, 2.
The polynomial Gj is then calculated as follows:
Gj = EjB = Ej(b0 + b1z−1 + b2z−2).
(7.30)
The equations are solved recursively at each prediction step j. The results are
given in Tables 7.1 and 7.2.
The contents of the vectors are given as
{ ˆFp} =
⎧
⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎩
ˆFp(k + 1)
ˆFp(k + 2)
ˆFp(k + 3)
ˆFp(k + 4)
⎫
⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎭
,
{Fr} =
⎧
⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎩
Fr(k + 1)
Fr(k + 2)
Fr(k + 3)
Fr(k + 4)
⎫
⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎭
,
{GI} =
⎧
⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎩
g0
g1
g2
g3
⎫
⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎭
,
(7.31)
TABLE 7.2. Recursively Calculated Parameters of Polynomials E j, Fj, and Gj
j
Parameters
1 e0 = 1; f10 = −(a1 −1), f11 = −(a2 −a1), f12 = a2;
g0 = g10 = b0, g11 = b1, g12 = b2
2 e1 = f10; f20 = f11 −e1(a1 −1), f21 = f12 −e1(a2 −a1), f22 = e1a2;
g20 = b0, g1 = g21 = b1 + e1b0, g22 = b2 + e1b1, g23 = e1b2
3 e2 = f20; f30 = f21 −e2(a1 −1), f31 = f22 −e2(a2 −a1), f32 = e2a2;
g30 = g0, g31 = g1, g2 = g32 = b2 + e1b1 + e2b0, g33 = e1b2 + e2b1, g34 = e2b2
4 e3 = f30; f40 = f31 −e3(a1 −1), f41 = f32 −e3(a2 −a1), f42 = e3a2;
g40 = g0, g41 = g1, g42 = g2, g3 = g43 = e1b2 + e2b1 + e3b0,
g44 = e2b2 + e3b1, g45 = e3b2

330
SENSOR-ASSISTED MACHINING
{ f} =
⎧
⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎩
g11
g12
f10
f11
f12
g22
g23
f20
f21
f22
g33
g34
f30
f31
f32
g44
g45
f40
f41
f42
⎫
⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎭
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎩
	 fc(k −1)
	 fc(k −2)
Fp(k)
Fp(k −1)
Fp(k −2)
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎭
.
(7.32)
Machining Test Results
The adaptive GPC algorithm is also integrated to the IMM as a PIM and
tested on a milling machine controlled by an open-architecture CNC. The work-
piece geometry and cutting conditions are given in Figure 7.6, which is the
same as the pole-placement control tests shown in Figure 7.7. The reference
peak force was set to Fr =1,200 N. The experimental results are given in Fig-
ure 7.8. The peak resultant force is always kept at the desired 1,200 N level,
and the algorithm gives some overshoots when the axial depth of cut increases
stepwise. However, the control algorithm is stable and rapidly converges. The
corresponding feeds identiﬁed by the control law are also given, along with the
estimated process parameters (b0, b1, b2, a1, a2) by the RLS PIM. The control
interval corresponds to the spindle rotation period.
7.3.5
In-Process Detection of Tool Breakage
The tool breakage detection algorithm uses the average resultant cutting
forces per tooth period (m), which can be written as follows:
Fa(m) =
+I
i=1

Fx(i)2 + Fy(i)2
I
,
(7.33)
where I is the number of force samples collected at tooth period m. When
runout and tooth breakage are not present, and the cutter is not in a transient
geometric zone (i.e., the part–cutter intersection geometry is not changing), all
teeth on the milling cutter produce equal average cutting forces, and the ﬁrst
differences of the average cutting forces,
	Fa(m) = Fa(m) −Fa(m −1) = (1 −z−1)Fa(m),
(7.34)
will be zero. Otherwise, the average cutting forces will reﬂect the changes in
the chip load and be nonzero. If the cutter runs into a transient geometry (i.e.,
varying entry and exit angles due to holes, slots, and voids), the differenced
forces will reﬂect the trend [22]. Because the feed per tooth period is consid-
erably smaller than the diameter of the cutter and the transient geometry
changes, a ﬁrst-order adaptive time series ﬁlter can remove the slow varying
dc trend caused by the changes in the workpiece geometry as follows:
ϵ1(m) = (1 −ˆφ1z−1)	Fa(m),
(7.35)
where ˆφ1 is estimated from measurements 	Fa(m) using the standard RLS
technique at each tooth period. However, such a ﬁlter may still produce

7.3 ADAPTIVE CONTROL OF PEAK FORCES IN MILLING
331
0
500
1000
1500
2000
0
250
500
750
1000
1250
1500
1750
2000
Control interval (k)
Peak Force (N)
0
0.5
1
1.5
2
2.5
0
250
500
750
1000
1250
1500
1750
2000
Control interval (N)
Feed (mm/sec)
-0.6
-0.4
-0.2
0
0.2
0.4
0.6
0.8
1
0
250
500
750
1000
1250
1500
1750
2000
Control interval (k)
Parameter Value s
a 1
a2
b0
b1
b2
Figure 7.8: Milling test results of a generalized predictive adaptive control sys-
tem. See Figure 7.6 for the part geometry and cutting conditions.
high-amplitude residuals [3] at each tooth period if the runouts on the cutter
teeth are not the same. The runout of each tooth can be removed by comparing
the tooth’s performance by itself one revolution before as follows:
	NFa(m) = Fa(m) −Fa(m −N).
(7.36)

332
SENSOR-ASSISTED MACHINING
Figure 7.9: Typical tool breakage event. One ﬂute has a chipped edge at tooth period 1,138.
Cutting conditions: 25.4 mm diameter high-speed steel cutter with 4 ﬂutes, spindle speed = 566
rev/min, feed rate = 0.1 mm/tooth, depth of cut = 7 .62 mm; radial width of cut is varying.
The resulting differences are again passed from a ﬁrst-order adaptive time
series ﬁlter to remove the possible dc trend left by the changes in the geometry
as follows:
ϵ2(m) = (1 −ˆφ2z−1)	NFa(m).
(7.37)
The two adaptive time series ﬁlters are run recursively in parallel at every
tooth period. When the cutting forces increase from a level of air machining
at the beginning of cut, the maximum residuals of both ﬁlters are measured
during the ﬁrst ﬁve revolutions of spindle. It is assumed that the cutter is
not broken during this period. The residuals contain the inﬂuence of runout
on the cutter used and the noise, but not the geometric transients, which are
ﬁltered by the algorithm. The breakage thresholds are selected by scaling the
maximum residuals by user-deﬁned factors α1 and α2,
LIMIT1 = α1 · max{ϵ1},
LIMIT2 = α2 · max{ϵ2},
(7.38)
and they are used during the rest of the machining with the cutter. A tool
breakage event is assumed whenever both residuals exceed their thresholds,
ϵ1(m) > LIMIT1 and ϵ2(m) > LIMIT2 followed by an additional transient assur-
ance check in the following revolution ϵ1 > LIMIT1.
Figure 7.9 illustrates a sample testing of the algorithm for peripheral milling
of a workpiece with transient voids and holes. The cutting test was repeated
twice under identical cutting conditions, but one with a good cutter and the
other with a chipped end mill. Later, the collected average force data are

7.3 ADAPTIVE CONTROL OF PEAK FORCES IN MILLING
333
Chatter
threshold
Chatter
threshold
Spectrum amplitude (mV)
30
25
20
15
10
  5
  00       500     1000    1500    2000    2500   3000
30
25
20
15
10
  5
  00       500     1000    1500    2000    2500   3000
Stable milling
Unstable milling
Depth of cut = 6.35 mm
Depth of cut = 2.54 mm
Spectrum amplitude (mV)
Frequency (Hz)
Figure 7.10: Spectrum of sound during stable and
unstable machining. Cutting conditions: 19.05 mm
diameter high-speed steel cutter with four ﬂutes, spin-
dle speed = 885 rev/min, feed rate = 0.01 mm/tooth,
helix angle = 0, tool overhang = 74.0 mm, half-
immersion up-milling, workpiece = Al 7075-T6 alloy.
assembled at various transient geom-
etry locations to test the robustness
of the algorithm. The measured force
and processed residuals are also shown
in Figure 7.9. The intuitively selected
threshold factors were α1 = α2 = 2.0,
which correspond to LIMIT1 = 245 N
and LIMIT2 = 214 N. The tool failure is
detected because both residuals exceed
their thresholds at the tool breakage
event (m = 1,138), and ϵ1 continuously
exceeds its threshold thereafter without
forgetting the breakage event.
The same algorithm can be applied
to any sensor measurements provided
that the signals can be correlated to cut-
ting forces at the operating frequency
(i.e., bandwidth) of the machine tool. For
example, the feed drive motor current
has been used at low cutting speeds for
tool condition monitoring [4].
7.3.6
Chatter Detection and Suppression
The chatter is detected by continuously monitoring the amplitude of the
sound spectrum measured by a microphone. It was shown previously that the
variation of spindle speed slightly improves the stability in milling, but limited
spindle torque/power and frequency bandwidth prevent practical application
of the method [9]. Smith and Delio [97] suppress the chatter by matching
the tooth-passing frequency with the on-line detected chatter frequency. This
results in the operation of milling at the highest stability lobe, which is the
most favorable speed zone for chatter-free machining. Alternatively, Weck
et al. [117] proposed a method of automatically reducing the axial depth of
cut for chatter suppression. The reduction in the axial or radial depth of cut
decreases the gain of the dynamic milling operation, which has a closed-loop
behavior. Although the later strategy lowers the productivity, it always works
and is especially applicable in the low spindle speed range. Because chatter
occurs close to one of the structural frequencies, which are generally higher
than 500 Hz, high spindle speed is required to avoid chatter by matching the
tooth and chatter frequencies. Here, the power spectrum of the sound is cal-
culated, and the maximum amplitude that occurs at the chatter frequency is
searched every 250 ms. A sample spectrum of milling operations with and
without chatter vibrations are shown in Figure 7.10. The magnitude of spec-
trum at the chatter frequency of 2,300 Hz is about six times larger than the

334
SENSOR-ASSISTED MACHINING
one in chatter-free milling. The cutting conditions and the microphone loca-
tion were identical, except that the depth of cut was increased from 2.54 mm
to 6.35 mm in the unstable milling with chatter vibrations. It was observed
that once the microphone is set for a particular machine, the sound spectrum
does not change signiﬁcantly with the changes in the feed rate and axial and
radial depths of cut when there are no chatter vibrations. The chatter thresh-
old is then selected as 5 mV, which is well above the maximum amplitude
observed in stable, chatter-free machining tests. The CNC system assumes
that chatter is present whenever the measured sound spectrum amplitude
exceeds the threshold (5 mV) during milling on the particular machine tool
setup [16].
7.4
INTELLIGENT POCKETING WITH THE IMM SYSTEM
The generalized predictive control methods of cutting forces, tool breakage
detection, and chatter avoidance algorithms explained in the previous sec-
tions were integrated to our open-architecture CNC/IMM system. All three
algorithms run in parallel and are able to manipulate the CNC system. The
complete system was tested on a pocket milling application (see Fig. 7.11). The
full axial depth of cut was programmed in the NC code sent to the CNC sys-
tem. Default minimum and maximum feed rates are automatically assumed
whenever the adaptive force control job is envoked by the user. The adaptive
control manipulates the feed within the feed rate range during machining. The
cutter fully penetrates to the bottom of the pocket at path position 1 and starts
ﬁnishing the wall as it moves along the x axis toward 2. The wall’s dimensional
tolerance is 0.1 mm, and the cutter stiffness at the tip was 2,700 N/mm. The
reference force to be controlled is selected to be the maximum force normal to
the wall (Fy) and is set to 270 N to constrain the static deﬂection of the end mill
within the tolerance. The system detects the chatter, stops the feed, decreases
the axial depth of cut by 1 mm, and continues to cut with the feed regulated
by the adaptive controller. The system automatically reduced the depth of cut
from 6.35 mm to 3.35 mm where the chatter diminished (see Fig. 7.11). The
adaptive control system adjusted the feed to 74.3 mm/min. When the tool moves
from 2 to 3, the normal force to the wall is Fx, which is kept at 270 N. The same
algorithm is repeated. If the chatter had occurred, the depth of cut would have
been further reduced from 3.35 mm. The procedure is repeated at paths 3–4
and 4–5. The minimum depth of cut was assumed to be removed during the
ﬁrst layer, the NC program was updated, and the remaining wall was ﬁnished
in one more pass, automatically. The cutter was positioned to path point 6,
and the remaining island was removed with a reference resultant force set to
600 N to avoid shank failure. The tool breakage monitoring was always active
during machining, and the algorithm never indicated a breakage event (see
Fig. 7.12). Figure 7.13 shows the sound spectrum for machining the pocket.
After the machining of the pocket, the walls had a 0.095 mm maximum form
error, which was within the tolerance speciﬁed.

Figure 7.11: Machining a pocket. Cutting conditions: 15.875 mm diameter
high-speed steel cutter with two ﬂutes, spindle speed = 1,500 rev/min, vary-
ing feed rate, helix angle = 30 degrees, tool overhang = 76.2 mm, workpiece =
Al 7075-T6 alloy.

336
SENSOR-ASSISTED MACHINING
Figure 7.12: Residuals of ﬁlters for tool breakage detection in machining the pocket.
Other process control algorithms, such as thermal deformation compensa-
tion, collision detection, and in-process probing, can be added to the system by
simply registering the new PIMs to the IMM library.
7.5
PROBLEMS
1. Design an adaptive pole-placement control system to keep cutting forces at
a desired reference level in a turning process. The spindle speed is kept
constant at 1,200 rev/min, and the resultant cutting force constant is given
as Kc = 1,500 N/mm2. The axial depth of cut is increased by 1.0 mm every
50 revolutions of the spindle, starting with 1.0 mm initial depth. When
the spindle completes 250 revolutions, the axial depth of cut is decreased
at the same rate. The machine tool’s feed control servodynamics can be

7.5 PROBLEMS
337
Figure 7.13: Maximum amplitude of sound spectrum during machining the pocket. (Note: Only
a part of the ﬁrst pass of machining is shown in the ﬁgure.)
approximated as a ﬁrst-order continuous system with a time constant of τm =
0.1 s. The vibration-free cutting process has an approximate time constant
of τc = 0.65 T, where T is the spindle period. The adaptive control system
must behave like a second-order system with a damping ratio of 0.95 and
rise time of four spindle revolutions.
2. Design an adaptive Proportional Integral Darivative (PID) controller for the
same process given in Problem 1.
3. Design an adaptive GPC for the same process given in Problem 1.
4. How can you modify the adaptive force controller so that it keeps the cutter
deﬂections within 0.2 mm? Discuss the practical aspects of the application in
minimizing the surface errors caused by the static deﬂections of the cutter.
5. Write a tool breakage detection program in the C language. Test the algo-
rithm by simulating a tool breakage event within the milling force prediction
algorithm.
6. How can you detect tool breakage by monitoring the power spectrum of
cutting forces?
7. A piezo actuator–based tool holder is designed for precision positioning of
cutting tools during turning operations. The picture of the piezo actuator–
based tool holder mounted on the turret of a CNC turning center and its
mechanical and control diagram are shown in Figure 7.14. One end of the
piezo element rests on a solid, rigid wall, whereas the other end is bolted to a
ﬂexure mechanism carrying a tool holder. A signal voltage (u(V)) is supplied
by the computer to the piezo electric high-voltage ampliﬁer, which delivers
a very high negative voltage (v(V)). When a high voltage is applied to the
piezo element, it pushes or pulls the ﬂexure carrying the tool holder. The
displacement of the tool holder is measured by a laser. With the use of a

338
SENSOR-ASSISTED MACHINING
Photograph of the piezo actuator assembly.
tool
Piezo element
Gp(N/V)
rigid mounting plate
Laser displacement
sensor
Piezo Amplifier
Ga(V/V)
Computer
Control System
Kd (V/μm)
y(μm)
Input
x(μm)
u(V)
Tool motion
High voltage
v(V)
u(μm)
Tool holder G t(μm/N)
Piezo actuator mounted on CNC turning center
turret.
Shaft
Turret
Piezo Element
Cutting tool
Tool holder
Flexure
Figure 7.14: A piezo actuator–based precision tool holder system mounted on a CNC turning
center turret. See Problem 7 for details.
digital control system, it is possible to control the position of the tool tip
within 0.1 m accuracy. The actuator is used within a frequency bandwidth
of 700 Hz and thus any dynamics higher than 1,000 Hz can be neglected.
The frequency response behavior of each component in the system is shown
in Figure 7.15. The tool holder can be modeled as an equivalent mass (m),
spring (k), and damping (c) elements as shown in the ﬁgure. Design a control
system by strictly following the order of instructions outlined below:
a. Draw the block diagram of a computer control system for the precision
positioning of the tool tip.
b. Identify the transfer function of each physical component in the block dia-
gram. Use symbols, but summarize the numerical values of each symbol
at the end.

7.5 PROBLEMS
339
Piezo Amplifier
Ga(V/V)
1000Hz
u(V)
v(V)
v(V)
u(V)
-100
ω(Hz)
Piezo Element
Gp(V/V)
2000Hz
v(V)
F(N)
F(N)
v(V)
-1.26
ω(Hz)
ωn(rad/s)
Tool holder
Gt(μm/N)
F(N)
y(μm)
y(μm)
F(N)
ω(rad/s)
1
k
k
c
m
F(N)
y(μm)
Frequency response of piezo actuator components
Figure 7.15: Frequency response functions of the piezo actuator assembly.
c. Assuming that the control/sampling interval is T seconds, express open-
loop continuous and discrete (zero-order hold equivalent) transfer func-
tions of the entire physical system algebraically. (Do not use numbers.)
d. Draw the block diagram of a pole-placement control system for ultra-
positioning of the tool tip.
e. Design a pole-placement control law in such a way that the settling time
and overshoot are ts, Mp, respectively. (Find the corresponding desired
natural frequency (wm) and damping ratio (η) ﬁrst, and use these two
symbols in your algebraic derivations.) Solve the design problem analyt-
ically using only symbolic algebra.
f. The following numerical values are provided: T = 0.0004 s, ts = 0.005 s,
Mp = 1 percent. Tool holder: m = 2.1 kg, c = 0.0006324 N/(m/s), k = 33.55
N/m. D/A converter (Kd): 16 bit, −3V to +3V range. Summarize the
numerical values of all unknowns in the following order:
• Ga, Gp, Gt: Transfer functions of piezo ampliﬁer, piezo element, and
tool holder.
• Go(s), Go(z): Open-loop transfer functions of the entire physical piezo
actuator assembly.
• Bm/Am: Desired transfer function in z domain.
• R, S, T: Control law parameters.
• u(k) = f (x, u, y): Expression for control input.


APPENDIX A
LAPLACE AND z TRANSFORMS
A.1
INTRODUCTION
The Laplace and z transform methods are useful for simplifying the analysis
and design of linear time-invariant systems in continuous time and in discrete
time, respectively. For example, considering a set of differential equations rep-
resenting a system in continuous time, Laplace transform theory simpliﬁes the
problem by replacing the given set of differential equations by a set of algebraic
equations.
In this appendix we will consider only linear time-invariant dynamic sys-
tems. For a more detailed study of the Laplace, z, and related transforms such
as the Fourier and starred Laplace transforms and their interrelationships,
refer to established control texts (e.g., Ogata [80, 81] and Kuo [65]).
The use of Laplace (s) and z transforms are sometimes confused by engineers
who have limited experience in control theory. The following simple example
is introduced ﬁrst to illustrate the physical meaning and the use of both trans-
formations in engineering.
Consider a simple ﬁrst-order system (i.e., a servomotor) whose input is x
(i.e., voltage given to the ampliﬁer) and output is y (i.e., motor velocity). The
system transfer function in the Laplace (i.e., continuous) domain is
G(s) = Y(s)
X(s) =
K
τs + 1 = K
1/τ
s + 1/τ ,
(A.1)
where K is the gain (at s = 0 or t = +∞) and τ is the time constant of the motor.
If a step input with an amplitude of A (i.e., physically A volts) is given to the sys-
tem, we want to know what happens to the output y (i.e., motor velocity [rad/s]).
Considering that the Laplace transform of step input is L[x(t)] = X(s) = A/s,
we have
Y(s) = X(s) · K
1/τ
s + 1/τ = KA
1/τ
s(s + 1/τ ).
(A.2)
The inverse Laplace transform of Eq. (A.2) provides the response (i.e., veloc-
ity) of the system (motor) for a step input (i.e., step change in the supply voltage)
with an amplitude of A [in volts] in the continuous time domain as follws:
y(t) = L−1Y(s) = KA(1 −e−t/τ ).
(A.3)
It is evident from (A.3) that after some time the output will settle down at a
steady state value (velocity) KA (i.e., rad/s). The settling time depends on the
341

342
LAPLACE AND z TRANSFORMS
time constant of the system (τ ). The smaller τ is, the faster the system will
reach its steady-state target (ﬁnal velocity) KA.
Now, let us consider that the command to the system is sent from a com-
puter. A numerical value for input x is sent at discrete time intervals T from
the computer to the physical system (i.e., motor ampliﬁer). The number is con-
verted to a voltage by a digital to analog (D/A) converter circuit. However,
the computer sends the values only at T [s] intervals, and the value given to
the physical device (i.e., ampliﬁer) remains constant during the time interval
T. The command generation is now completely in the discrete time domain;
hence, the input must be converted to the z domain. The z transform of step
input x = A is Z[x(kT)] = X(z) = Z(A) = A/(1 −z−1). Although the ampliﬁer–
servomotor system receives the input commands in discrete time intervals T,
it works in the continuous time domain because it is a physical system. To
combine the discrete (digital computer) and continuous (i.e., servomotor) parts
under one domain, we have to obtain a discrete equivalent transfer function of
the physical system. The D/A converter circuit is the physical bridge between
the two domains, and it has to be considered. It is most practical to model the
D/A circuit by a sample and hold with a zero-order approximation, that is,
ZOH = (1 −e−sT )/s. Because z−1 = e−sT, a ZOH equivalent of the continuous
physical system is converted into the discrete time domain as follows:
G(z) = (1 −z−1)ZG(s)
s
= (1 −z−1)

K
1/τ
s(s + 1/τ )
	
= (1 −z−1)
Kz−1(1 −e−T/τ )
(1 −z−1)(1 −e−T/τz−1)
(A.4)
= z−1[K(1 −e−T/τ )]
1 −e−T/τz−1
.
Now that the system is completely transferred to the z domain, we can
analyze its response for a step input generated by the computer. The steady-
state response of the system for a step input with amplitude A can be found as
follows:
yss = lim
z=1 X(z) · G(z) = lim
z=1
A
1 −z−1 · z−1[K(1 −e−T/τ )]
1 −e−T/τz−1
= KA,
(A.5)
which is identical to the value found from (A.3) for the continuous system. We
can look at the system response at discrete time intervals k = 0, 1, 2, 3, . . . , k
that are equally spaced with T [s] periods, called the sampling or con-
trol interval. If the computer sends the step change in the following
order: x(0) = 0, x(1) = A, x(2) = A, x(3) = A, . . . , x(k) = A, then noting that
z−1x(k) = x(k −1) and
z−2x(k) = x(k −2), the system’s response in discrete
time intervals can be found from (A.4) as follows:
y(k) = G(z)x(k),
[(1 −e−T/τ )z−1]y(k) = z−1[K(1 −e−T/τ )]x(k),
y(k) = + e−T/τy(k −1) + [K(1 −e−T/τ )]x(k −1).
(A.6)

A.2 BASIC DEFINITIONS
343
The reader can simulate both systems (Eqs. A.3 and A.6) by assigning numer-
ical values to the system and comparing the results (e.g., A = 10, K = 2, T =
1, τ = 0.2).
The handling of Laplace (continuous) and z domain transformations must be
clearly understood before designing machine tool or machining process control
algorithms.
In this appendix, besides introducing the derivation of the (inverse) Laplace
and z transforms we will also present (inverse) Laplace and z transforms using
the MATLAB c⃝Symbolic Math Toolbox [1].
A.2
BASIC DEFINITIONS
Let x(t) be a continuous function of time t with sampled values represented by
the sequence
{x(kT)} = {x(0), x(T), x(2T), . . .}
or
{x(k)} = {x(0), x(1), x(2), . . .},
(A.7)
where T is the sampling period, which is sometimes not explicitly indicated. In
Eq. (A.7), it is assumed that
x(t) = 0
for t < 0
and
x(kT) = 0
for k < 0,
(A.8)
where k is a nonnegative integer (k = 0, 1, 2, . . .).
The Laplace transform of x(t) is deﬁned as
L[x(t)] = X(s) =

x(t)e−stdt.
(A.9)
The z transform of x(t) or of the corresponding sequence {x(kT)} (see Eq. A.7)
is deﬁned as
Z[x(t)] = X{x(kT)} =
∞

k=0
x(kT)z−k,
or dropping the sampling period T, we have
Z[x(t)] = X{x(k)} =
∞

k=0
x(k)z−k
(A.10)
and x(kT) = Z−1[X(z)] is the inverse z transform. Both Laplace and z trans-
forms given by (A.9) and (A.10) are one-sided transforms (i.e., the integral and
summation in (A.8) and (A.10) start from zero), which are justiﬁed following
(A.8). These one-sided transforms are the ones that are widely used in controls.
Conceptually, the z transform is easier to understand than the Laplace
transform because the z transform involves summation, whereas the Laplace
transform involves integration. For example, consider the ramp function as
follows:
x(t) =

At
t ≥0,
0
otherwise.

(A.11)

344
LAPLACE AND z TRANSFORMS
or the corresponding unit ramp sequence
x(t)|t=kT = x(kT) =

AkT
k = 0, 1, 2, . . . ,
0
otherwise.

(A.12)
Following (A.9) and (A.11) and, for example, using integration by parts, the
Laplace transform of x(t) is obtained as
X(s) = L[At] =
 ∞
0
Ate−stdt = A
s2 .
(A.13)
However, the z transform of (A.12) is a straightforward summation as follows:
X(z) =
∞

k=0
AkT · z−k = AT(z−1 + 2z−2 + 3z−3 + · · ·),
(A.14)
which converges for |z| > 1. However, (A.14) is not in a very useful form because
it is an open-ended series (i.e., the summation has inﬁnitely many terms). By
the use of the power series, the z transform (A.14) can be written in closed form
as follows:
X(z) = AT
z−1
(1 −z−1)2 = AT
z
(z −1)2 .
(A.15)
Although, as mentioned, the z transform is conceptually easier to understand
than the Laplace transform, in textbooks on controls, the Laplace transform is
considered before the z transform. The reason is that, although in the analysis
and design of continuous-time control systems the Laplace transform sufﬁces,
in the case of digital control systems both the Laplace and z transforms are
necessary. This is because the digital control systems have both continuous-
time (e.g., plant) and discrete-time (e.g., controller) components as illustrated
in the previous section.
As shown in (A.15), the z transform of a function or a sequence can be written
both using the negative or positive powers of z. One word of caution is that when
the negative powers of z are used, one has to be careful about the zeros at the
origin of the z plane [80]. To this end, consider
X(z) =
z
z −3 =
1
1 −3z−1 ,
(A.16)
which, when written in terms of the positive powers of z, clearly has a pole at
z = 3 and a zero at the origin. However, when X(z) is written in terms of the
negative powers of z, although the pole at z = 3 is clearly seen, the zero at the
origin may not be that obvious. In this appendix the positive powers of z will
be used to obtain the residues. However, whenever the z transform table has
to be used, the expressions obtained will be written in terms of the negative
powers of z.
Given a transfer function in the s domain, the corresponding transfer func-
tion in the z domain can be obtained by using several different methods such
as: 1) backward difference method; 2) forward difference method; 3) matched
pole-zero mapping method; 4) bilinear transformation (or Tustin) method (with
frequency prewarping); 5) impulse invariance method; and 6) step invariance

A.2 BASIC DEFINITIONS
345
TABLE A.1. Table of Laplace and z Transforms [80]
x(t )
X (s)
x(kT )
X (z)
Impulse
—
δ(k) =
 1
0
k = 0
k ̸= 1

1
Delay
—
δ(n −k) =
 1
0
k = n
k ̸= n

z−k
1
1
s
1
1
1 −z−1
e−at
1
s + a
e−akT
1
1 −e−aT z−1
t
1
s2
kT
Tz−1
(1 −z−1)2
t2
2
s3
(kT)2
T2z−1(1 + z−1)
(1 −z−1)3
t3
6
s4
(kT)3
T3z−1(1 + 4z−1 + z−2)
(1 −z−1)4
1 −e−at
a
s(s + a)
1 −e−akT
z−1(1 −e−aT )
(1 −z−1)(1 −e−aT z−1)
e−at −e−bt
b−a
(s + a)(s + b)
e−akT −e−bkT
z−1(e−aT −e−bT )
(1 −e−aT z−1)(1 −e−bT z−1)
te−at
1
(s + a)2
kTe−akT
Te−aT z−1
(1 −e−aT z−1)2
(1 −at)e−at
s
(s + a)2
(1 −akT)e−akT
1 −(1 + aT)e−aT z−1
(1 −e−aT z−1)2
t2e−at
2
(s + a)3
(kT)2e−akT
T2e−aT (1 + e−aT z−1)z−1
(1 −e−aT z−1)3
sin ωt
ω
s2+ω2
sin ωkT
z−1 sin ωT
1 −2z−1 cos ωT + z−2
cos ωt
s
s2 + ω2
cos ωkT
1 −z−1 cos ωT
1 −2z−1 cos ωT + z−2
e−at sin ωt
ω
(s + a)2 + ω2
e−akT sin ωkT
e−aT z−1 sin ωT
1 −2e−aT z−1 cos ωT + e−2aT z−2
e−at cos ωt
s + a
(s + a)2 + ω2
e−akT cos ωkT
1 −e−aT z−1 cos ωT
1 −2e−aT z−1 cos ωT + e−2aT z−2
ak
1
1 −az−1
ak−1, k = 1, 2, 3 . . .
z−1
1 −az−1
kak−1
z−1
(1 −az−1)2
ak cos kπ
1
1 + az−1
method [80]. Among these methods the impulse invariance uses the z transform
directly.
Note that the examples given by Eqs. (A.11) and (A.12) are elementary cases
and, therefore, rather than using the transformation formulas as in (A.13) and
(A.14), we could directly use Table A.1 to obtain the Laplace and z transforms.
To simplify the problem in nonelementary cases, it is perhaps easier to use
Laplace and z transform theorems given in Tables A.2 and A.3 whenever possi-
ble. In fact, in Eqs. (A.13) and (A.15) we already made use of the ﬁrst property
of Laplace and z transform theorems.

346
LAPLACE AND z TRANSFORMS
TABLE A.2. Properties of Laplace
Transforms [80]
L[A f (t)] = AF(s)
L[ f1(t) ± f2(t)] = F1(s) ± F2(s)
L ±
 d
dt f (t)

= sF(s) −f (0±)
L ±
 d2
dt2 f (t)

= s2F(s) −s f (0±) −˙f (0±)
L[e−at f (t)] = F(s + a)
L[ f (t −a)1(t −a)] = e−asF(s)
L[t f (t)] = −dF(s)
ds
L
 1
t f (t)

=
 ∞
s
F(s)ds
Next, we will consider another
example by which we will demon-
strate using the table of Laplace
transform properties (Table A.2):
L{Ae−αt cos ωt} = A · L{e−αt cos ωt}
(A.17)
where A, a, and ω are real. From
the Laplace transform table (A.1)
we have
L{cos ωt} =
s
s2 + ω2 ,
(A.18)
and, using the Laplace transform
property of real translation in the
s domain (see Table A.2), we obtain
L{Ae−αt cos ωt} = A
s + α
(s + α)2 + ω2 .
(A.19)
Note that the function considered “e−αt cos ωt” represents a damped sinu-
soidal signal and, owing to its importance in engineering systems, it is given
in the Laplace transform Table A.1 as well.
In the rest of this appendix we will consider inverse Laplace and z trans-
forms. In the case of inverse Laplace transforms, attention will be focused
on the partial fraction expansion method. In the case of the inverse z trans-
form, besides the partial fraction expansion method, we will also consider the
residue method. The residue method, which is also known as the inversion
residue method as well as the inversion formula method, leads to the inverse z
transforms directly without resorting to the z transform table.
TABLE A.3. Properties of z Transforms [80]
x(k) or x(k)
Z[x(t)] or Z[x(k)]
ax(t)
aX(z)
ax1(t) + bx2(t)
aX1(z) + bX2(z)
x(t + T) or x(k + 1)
zX(z)z −x(0)
x(t + 2T)
z2X(z) −z2x(0) −zx(T)
x(t + kT)
zkX(z) −zkx(0) −zk−1x(T) −· · · −zx(kT −T)
x(t −kT) or x(n −k)
z−kX(z)
tx(t)
−Tz d
dzX(z)
e−atx(t)
X(zeaT )
∇x(k) = x(k) −x(k −1)
(1 −z−1)X(z)
+n
k=0 x(k)
1
1 −z−1 X(z)

A.3 PARTIAL FRACTION EXPANSION METHOD
347
A.3
PARTIAL FRACTION EXPANSION METHOD
The partial fraction expansion method is a mathematical tool similar to the
continued fraction method. The partial fraction expansion method is also uti-
lized to obtain inverse Laplace, z, and Fourier transforms among which we will
consider the ﬁrst two.
In the case of inverse transforms, the partial fraction expansion method
enables us to write a given a rational function in s or z in such a way that we
can use the Laplace or z transform tables directly or after some manipulations.
Consider the transfer function
X(p) =
N(p)
(p −p1) · · · (p −pr) · · · (p −pn),
(A.20)
which is assumed to have distinct poles and no pole-zero cancellation. In (A.20)
the degree of the numerator polynomial N(p) is less than the degree of the
denominator polynomial, which is n. In other words X(p) is a strictly proper
rational function.
Note that in the case of the Laplace transform we will set p = s and in the
case of the z transform we will set p = z. In the rest of this appendix we will
consider the negative powers of z only when we use the z transform table.
If the degree of the numerator polynomial N(p) of (A.20) is equal to or greater
than n, long division is used yielding
X(p) = F(p) + ˜X(p),
(A.21)
where F(p) is a polynomial of positive powers of p and is a strictly proper
rational function. If
X(p) represents a transfer function of an engineering
system, following the causality condition, F(p) will be a constant.
In the case of distinct poles, partial fraction expansion of (A.20) is written as
X(p) =
A1
p −p1
+ · · · +
Ar
p −pr
+ · · · +
An
p −pn
,
(A.22)
where Ai(i = 1, . . . , n) is the residue associated with pole pi. Noting that all
poles in (A.22) are assumed to be distinct, the residues are obtained according to
Ai = [(p −pi)X(p)]|p=pi,
(A.23)
where (A.23) is obtained by multiplying (A.22) by p −pi and evaluating at
p = pi. Note that (A.22) and (A.23) are valid when poles are real or complex
conjugate (i = 1, 2, . . . , n). In the later case, for example, if p2 = p∗
1 then A2 = A∗
1
where the asterisk indicates complex conjugate.
In the case of multiple poles,
X(p) =
A1
p −p1
+
A21
p −p2
+
A22
(p −p2)2 + · · · +
A2j
(p −p2)j + · · ·
A2r
(p −p2)r ,
(A.24)

348
LAPLACE AND z TRANSFORMS
where the multiplicity of pole p2 is assumed to be r; the residues associated
with the multiple pole are derived from
A2j =
1
(r −j)!

 dr−j
dpr−j [(p −p2)rX(p)]
****
p=pr
( j = 1, . . . , r).
(A.25)
Note that the residues can alternatively be obtained by solving a set of
algebraic equations, as will be demonstrated in Example 1.
The following examples demonstrate obtaining the residues by using the
partial fraction method.
Example 1. To demonstrate the partial fraction expansion for single poles,
consider the following rational function with distinct poles:
X(p) =
1
(p + 2)(p + 4) =
A1
p + 2 +
A2
p + 4.
(A.26)
to demonstrate the partial fraction expansion for single poles.
Following (A.23) and (A.26) the partial fraction can be written as
X(p) =
0.5
p + 2 + −0.5
p + 4.
(A.27)
Note that the residues A1 = 0.5 and A2 = −0.5 alternatively could also be
obtained from a set of linear equations as follows:
1
1
4
2
	
·
A1
A2
	
=
 0
1
	
,
(A.28)
which obtained from
A1(p + 4) + A2(p + 2)
(p + 2)(p + 4)
=
1
(p + 2)(p + 4),
(A.29)
where we equate the equal powers of p in the numerator.
Example2. Next consider the partial fraction expansion in the case of multiple
poles as follows:
X(p) =
p + 0.4
(p + 0.1)2(p + 0.2),
(A.30)
which, using (A.25), yields
X(p) =
−20
p −0.1 +
3
(p −0.1)2 +
20
p −0.2,
(A.31)
where each term of (A.31) appears in the Laplace transform table (see Exam-
ple 5).
Example 3. In the case of inverse z transforms, the poles at the origin have to
be handled carefully. Therefore, in this example, we choose a transfer function
with a double pole at the origin as follows:
X(p) =
1
(p −0.8)2p2 .
(A.32)

A.4 PARTIAL FRACTION EXPANSION METHOD
349
With the use of the residue formulas (A.23) and (A.25) the partial fraction
expansion of (A.32) can be written as
X(p) =
3.9
p −0.8 +
1.56
(p −0.8)2 + 3.9
p + 1.56
p2 .
(A.33)
A.4
PARTIAL FRACTION EXPANSION METHOD TO
DETERMINE INVERSE LAPLACE AND z TRANSFORMS
In this section, we will use the partial fraction expansion method to obtain the
inverse Laplace and z transforms. Note that, in the case of the z transform, if
the transfer function X(z) is written using the positive powers of z and has at
least one zero at the origin, then instead of X(z) we can also consider X(z)/z
[80].
Example 4. To demonstrate the inverse Laplace transform in the case of single
poles, consider the transfer function (A.26) in the s domain by substituting p = s
as follows:
X(s) =
1
(s + 2)(s + 4).
(A.34)
Following (A.27), we obtain x(t) using the Laplace transform table as
x(t) = L−1[X(s)] = 0.5L−1
1
s + 2 −0.5L−1
1
s + 4 = 0.5e−2tu(t) −e−4tu(t),
(A.35)
where u(t) is the unit step.
Example 5. Next, we consider the inverse Laplace transform of transfer func-
tions (A.30) with multiple poles as follows:
X(s) =
s + 0.4
(s + 0.1)2(s + 0.2).
(A.36)
Following (A.31) and using the Laplace transform table, we have
x(t) = L−1[X(s)] = −20L−1
1
s + 0.1 + 3L−1
1
(s + 0.1)2 + 20L−1
1
s + 0.2
= (−20e−0.1t + 3te−0.1t + 20e−0.2t)u(t).
(A.37)
Example 6. To demonstrate the inverse z transform we start by considering
the transfer functions with single poles as in the case of the inverse Laplace
transform (see Example 4). Letting p = z in (A.26) we get
X(z) =
1
(z + 2)(z + 4) =
1
z2 + 6z + 8.
(A.38)
Equation (A.27) can be written in Z−1 domain by multiplying the numerator
and denominator by z−2 as follows:
X(z) =
z−2
1 + 6z−1 + 8z−2 .
(A.39)

350
LAPLACE AND z TRANSFORMS
For discrete input u(k), the output x(k) can be evaluated at each step k as a
recursive function of past input and output values, that is,
x(k) = u(k −2) −6x(k −1) −8x(k −2).
(A.40)
However, the contributions of each root-pole on both transfer function as well as
on the value of each response for any given input state can be explained better
by looking at the partial fraction of the transfer function. Equation (A.27) has
the following partial fraction expansion:
X(z) =
0.5
z + 2 + −0.5
z + 4.
(A.41)
Note that if the transfer function is given in terms of the negative powers of
z, we will write the transfer function in terms of the positive powers of z before
deriving the partial fractions.
From (A.41) we have
x(k) = Z−1[X(z)] = 0.5Z−1
1
z + 2 −0.5Z−1
1
z + 4
= 0.5Z−1
z−1
1 + 2z−1 −0.5Z−1
z−1
1 + 4z−1 ,
(A.42)
which, with the use of the tables and simplifying the results obtained, yields
x(k) = (−1)k−1{2k−2 −22k−3}u(k −1).
(A.43)
Here, u(k −1) is the one-sample delayed unit step sequence.
Note that, even though partial fractions are obtained by using positive pow-
ers of z, the inverse z transform is obtained from the table that is given in terms
of the negative powers of z.
Example 7. Consider the rational function (A.30) with multiple poles, to
demonstrate the inverse z transform. Substituting p = z we get
X(z) =
z + 0.4
(z + 0.1)2(z + 0.2)
(A.44)
and from (A.31) we have
x(k) = Z−1[X(z)] = −20Z−1
1
z + 0.1 + 3Z−1
1
(z + 0.1)2 + 20Z−1
1
z + 0.2
= −20Z−1
z−1
1 + 0.1z−1 + 3Z−1
z−2
(1 + 0.1z−1)2 + 20Z−1
z−1
1 + 0.2z−1 .
(A.45)
Considering the second term on the right-hand side of (A.45) and using the z
transform and the shifting property we have
Z−1

z−1

z−1
(1 + 0.1z−1)2
	
= (k −1)(−0.1)k−2u(k −1),
(A.46)

A.4 PARTIAL FRACTION EXPANSION METHOD
351
from which, using (A.45), we obtain
x(k) = {1 + 2k −3k}(−1)k−1(0.1)k−2u(k −1).
(A.47)
Example 8. As a last example to demonstrate the use of the partial fraction
expansion in obtaining the inverse z transform of transfer functions with mul-
tiple poles at the origin, consider the rational function (A.32) with p = z as
follows:
X(z) =
1
(z −0.8)2z2 .
(A.48)
Following (A.33), we have
X(z) =
3.9
z −0.8 +
1.56
(z −0.8)2 + 3.9
z
+ 1.56
z2 ,
(A.49)
x(k) = Z−1[X(z)] = 3.9Z−1
z−1
1 −0.8z−1
+ 1.56Z−1
z−2
(1 −0.8z−1)2 + 3.9Z−1[z−1] + 1.56Z−1[z−2],
(A.50)
and using
Z−1

z−1
z−1
(1 −0.8z−1)2
	
= (k −1)(0.8)k−2u(k −1),
Z−1

z−1
1 −0.8z−1
	
= (0.8)k−1u(k −1),
Z−1[z−1] = δ(k −1) =

1
k = 1,
0
k ̸= 1,

Z−1[z−2] = δ(k −2) =

1
k = 2,
0
k ̸= 2,

we obtain
x(k) = (k −3)(0.8)k−4u(k −3).
(A.51)


APPENDIX B
OFF-LINE AND ON-LINE PARAMETER
ESTIMATION WITH LEAST SQUARES
B.1
OFF-LINE LEAST-SQUARES ESTIMATION
The transfer function of systems can be identiﬁed either by using impulse,
step, and frequency response techniques in the continuous or discrete time
domain or using regression techniques in the discrete time domain. When the
process is to be controlled by a computer, it may be easier to identify the
transfer function parameters of the system by collecting input and output data
at uniform discrete time intervals that are equal to the computer control period.
Consider a general transfer function with d samples delay, with orders nb
and na in the numerator and denominator, respectively (such a system is called
ARIMA(na, d, nb) in the literature), as follows:
Go(z−1) = z−d(b0 + b1z−1 + b2z−2 + · · · + bnbz−nb)
+ a1z−1 + a2z−2 + · · · + anaz−na
.
(B.1)
The dead time can be easily observed by applying step, pulse, or harmonic input
to the system and then measuring the time delay between the input and output
on a digital scope. It is usually difﬁcult to guess the order of a transfer function
(i.e., d, na, nb) if we do not have any engineering feeling about the process.
In such cases, one has to resort to stochastic order identiﬁcation techniques,
which are not covered here. In machine tool engineering, however, the orders
of drives are usually low, up to about second or third order if we neglect the
dynamic characteristics of the structure. Furthermore, a good engineer has to
have the basic understanding of the drive design and control process provided
in Chapter Six. It is customary to start with a low-order transfer function
assumption and increase the order if the identiﬁcation does not yield good
output estimates with the measurements.
Let us assume a simple process with the following discrete transfer function:
G(z−1) = y(k)
u(k) = z−2(b0 + b1z−1)
1 + a1z−1
,
(B.2)
which is a ﬁrst-order process whose output (y) has a two-sample period delay
in responding to an input (u). By expanding the transfer function, we get
(1 + a1z−1)y(k) = [z−2(b0 + b1z−1)]u(k),
y(k) = −a1y(k −1) + b0u(k −2) + b1u(k −3),
(B.3)
353

354
OFF-LINE AND ON-LINE PARAMETER ESTIMATION WITH LEAST SQUARES
or
y(k) = {−y(k −1)
u(k −2)
u(k −3)}{a1
b0
b1}Tφ(k)Tθ,
(B.4)
where k is the sampling counter, φ(k)T = {−y(k −1) u(k −2) u(k −3)} is the
regression or measurement vector, and θ = {a1 b0 b1}T is the unknown param-
eter vector. The three unknown parameters are estimated from the N mea-
surements, which are greater than the number of unknowns (i.e., N ≫3). If
ˆθ = { ˆa1 ˆb0 ˆb1} are the estimated parameters, the error between the estimated
and actual measurement at interval k is
ϵ(k) = y(k) −ˆy(k) = y(k) −φ(k)T ˆθ.
(B.5)
Assume that a pulse or random input containing a wide range of frequencies
is given to the system, and N number of inputs and outputs are collected at
ﬁxed time intervals. The following set of expressions can be written for each
measurement:
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎩
ϵ(3)
ϵ(4)
...
ϵ(k)
...
ϵ(N)
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎭
=
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎩
y(3)
y(4)
...
y(k)
...
y(N)
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎭
−
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
{−y(2)
u(1)
u(0)}
{−y(3)
u(2)
u(1)}
...
...
...
{−y(k −1)
u(k −2)
u(k −3)}
...
...
...
{−y(N −1)
u(N −2)
u(N −3)}
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
⎧
⎨
⎩
a1
b0
b1
⎫
⎬
⎭,
or, in matrix form,
Y = θ,
(B.6)
where
Y = {y(3)
y(4)
· · · y(k)
· · · y(N)}T,
 = {φ(3)
φ(4)
· · · φ(k)
· · · φ(N)}T.
The least-squares identiﬁcation method is based on minimizing the sum of
the squares of errors evaluated from all measurements [48]. The sum of the
squares of errors, or cost function, to be minimized is
J(θ, N) =
N

k=3
ϵ(k)2 = (Y −θ)T(Y −theta) = (Y T −θTT )(Y −θ).
(B.7)
By expanding the expression further, we have
J(θ, N) = Y TY −Y Tθ −θTTY −θTTθ.

B.2 RECURSIVE PARAMETER ESTIMATION ALGORITHM
355
The parameters are obtained by minimizing the error or cost function, that
is,
∂J(θ, N)
∂θ
=
⎧
⎪⎪⎨
⎪⎪⎩
∂J(θ, N)
∂θ1
∂J(θ, N)
∂θ2
⎫
⎪⎪⎬
⎪⎪⎭
= −2TY + 2Tθ = 0,
which leads to the estimates of parameters from N measurements as follows:
θ = [T]−1TY.
(B.8)
The least-squares technique presented here is a useful tool for identifying
the parameters of a discrete transfer function with any order. The matrix mul-
tiplication and inversion can be evaluated by either writing a short computer
code or by using popular software tools.
B.2
RECURSIVE PARAMETER ESTIMATION ALGORITHM
An on-line, recursive, regularized constant-trace algorithm is given below [48]:
ˆθ(t) = ˆθ(t −1) + a(t)k(t)(Fp(t) −φT(t) ˆθ(t −1)),
(B.9)
k(t) = P(t −1)φ(t)(1 + φT(t)P(t −1)φ(t))−1,
(B.10)
¯P(t) = ¯P(t −1) −a(t)k(t)φT(t)P(t −1),
(B.11)
P(t) = c1
¯P(t)
tr( ¯P(t))
+ c2I,
(B.12)
a(t) =

 ¯a
if |Fp(t) −φT(t) ˆθ(t −1)| > 2δ,
0
otherwise,
(B.13)
where ˆθ(t) = [ ˆa1 ˆa2 ˆb0 ˆb1 ˆb2]T is the estimated parameter vector, k(t) is the
estimation
gain,
φ(t) = [−Fp(k −1) −Fp(k −2) fc(k −1) fc(k −2) fc(k −
3)]T is the regression vector or observation vector, ¯P(t) is the auxiliary covari-
ance matrix, tr( ¯P(t)) = +5
i=1 ¯Pii is the trace of the auxiliary covariance matrix,
and P(t) is the covariance matrix. Here, c1 > 0, c2 ≥0, and δ is an estimate of
the magnitude of the tolerable ﬂuctuation of the output of the process or noise.


BIBLIOGRAPHY
[1] MATLAB Users Guide. MathWorks, Inc., Natick, MA, 1992.
[2] R.J. Allemang and D.L. Brown. Multiple input experimental modal analysis – a
survey. International Journal of Analytical and Experimental Modal Analysis,
44:37–44, 1986.
[3] Y. Altintas. In-process detection of tool breakages using time series monitoring
of cutting Forces. International Journal of Machine Tool and Manufacturing,
28(2):157–172, 1988.
[4] Y. Altintas. Prediction of cutting forces and tool breakage in milling from
feed drive current measurements. ASME Journal of Engineering for Industry,
114(4):386–392, 1992.
[5] Y. Altintas. Direct adaptive control of end milling process. International Journal
of Machine Tools and Manufacture, 34(4):461–472, 1994.
[6] Y. Altintas. Analytical prediction of three dimensional chatter stability in milling.
JSME International Journal, Series C: Mechanical Systems, Machine Elements
and Manufacturing, 44(3):717–723, 2001.
[7] Y. Altintas, C. Brecher, M. Weck, and S. Witt. Virtual machine tool. CIRP Annals,
54(2):651–674, 2005.
[8] Y. Altintas and E. Budak. Analytical prediction of stability lobes in milling. CIRP
Annals, 44(1):357–362, 1995.
[9] Y. Altintas and P. Chan. In-process detection and supression of chatter in milling.
International Journal of Machine Tools and Manufacture, 32:329–347, 1992.
[10] Y. Altintas, K. Erkorkmaz, and W. Zhu. Sliding mode controller design for high
speed feed drives. CIRP Annals, 49(1):265–270, 2000.
[11] Y. Altintas and N.A. Erol. Open architecture modular tool kit for motion and
machining process control. CIRP Annals, 47(1):295–300, 1998.
[12] Y. Altintas, M. Eyniyan, and M. Onozuka, Identiﬁcation of dynamic cutting force
coefﬁcients and chatter stability with process damping. CIRP Journal of Manu-
facturing Science and Technology, 57(1):371–374, 2008.
[13] Y. Altintas and J.H. Ko. Chatter stability of plunge milling. CIRP Annals,
55(1):361–364, 2006.
[14] Y. Altintas and A.J. Lane. Design of an electro-hydraulic CNC press brake. Inter-
national Journal of Machine Tools and Manufacture, 37:45–59, 1997.
[15] Y. Altintas and P. Lee. A general mechanics and dynamics model for helical end
mills. CIRP Annals, 45(1):59–64, 1996.
[16] Y. Altintas and K. Munasinghe. Modular CNC system design for intelligent
machining. Part II: Modular integration of sensor based milling process monitor-
ing and control tasks. ASME Journal of Manufacturing Science and Engineering,
118:514–521, 1996.
357

358
BIBLIOGRAPHY
[17] Y. Altintas and W.K. Munasinghe. A hierarchical open architecture CNC system
for machine tools. CIRP Annals, 43(1):349–354, 1994.
[18] Y. Altintas, N. Newell, and M. Ito. Modular CNC design for intelligent machin-
ing. Part I: Design of a hierarchical motion control module for CNC machine
tools. ASME Journal of Manufacturing Science and Engineering, 118:506–513,
1996.
[19] Y. Altintas and J. Peng. Design and analysis of a modular CNC system. Comput-
ers in Industry, 13(4):305–316, 1990.
[20] Y. Altintas, G. Stepan, D. Merdol, and Z. Dombovari. Chatter stability of milling
in frequency and discrete time domain. CIRP Journal of Manufacturing Science
and Technology, (1):35–44, 2008.
[21] Y. Altintas, A. Verl, C. Brecher, L. Uriarte, and G. Pritschow. Machine tool feed
drives. CIRP Annals of Manufacturing Technology, 60(2):779–796, 2011.
[22] Y. Altintas, I. Yellowley, and J. Tlusty. The detection of tool breakage in milling
operations. Journal of Engineering for Industry, 110:271–277, 1988.
[23] Y. Altintas, and Spence, A. End milling force algorithms for CAD systems. CIRP
Annals, 40(1):31–34, 1991.
[24] E.J.A. Armarego. Material Removal Processes – An Intermediate Course. The
University of Melbourne, 1993.
[25] E.J.A. Armarego and R.H. Brown. The Machining of Metals. Prentice-Hall, 1969.
[26] E.J.A. Armarego, D. Pramanik, A.J.R. Smith, and R.C. Whitﬁeld. Forces and
power in drilling-computer aided predictions. Journal of Engineering Production,
6:149–174, 1983.
[27] E.J.A. Armarego and M. Uthaichaya. A mechanics of cutting approach for force
prediction in turning operations. Journal of Engineering Production, 1(1):1–18,
1977.
[28] E.J.A. Armarego and R.C. Whitﬁeld. Computer based modelling of popular
machining operations for force and power predictions. CIRP Annals, 34:65–69,
1985.
[29] K.J. Astrom and B. Wittenmark. Computer-Controlled Systems. Prentice Hall
Inc., 1984.
[30] G. Boothroyd. Temperatures in orthogonal metal cutting. Proceedings of the Insti-
tution of Mechanical Engineers, 177:789–802, 1963.
[31] G. Boothroyd. Fundamentals of Machining and Machine Tools. McGraw-Hill,
1975.
[32] E. Budak and Y. Altintas. Flexible milling force model for improved surface error
predictions. In Proceedings of the 1992 Engineering System Design and Analysis,
Istanbul, Turkey, pages 89–94. ASME, 1992. PD-Vol. 47-1.
[33] E. Budak and Y. Altintas. Peripheral milling conditions for improved dimensional
accuracy. International Journal of Machine Tools and Manufacture, 34(7):907–
918, 1994.
[34] E. Budak and Y. Altintas. Analytical prediction of chatter stability in milling.
Part I: General formulation; Part II: Application of the general formulation to
common milling systems. ASME Journal of Dynamic Systems, Measurement and
Control, 120:22–36, 1998.
[35] E. Budak, Y. Altintas, and E.J.A. Armarego. Prediction of milling force coefﬁ-
cients from orthogonal cutting data. ASME Journal of Manufacturing Science
and Engineering, 118:216–224, 1996.

BIBLIOGRAPHY
359
[36] CAMI. Encylopedia of the APT Programming Language. Computer Aided Manu-
facturing International, Arlington,Texas, 1973.
[37] L.H. Chen and S.M. Wu. Further investigation of multifaceted drills. Trans.
ASME J. Engineering for Industry, 106:313–324, 1984.
[38] R.Y. Chiou and S.Y Liang. Chatter stability of a slender cutting tool in turn-
ing with wear effect. International Journal of Machine Tools and Manufacture,
38(4):315–327, 1998.
[39] B.E. Clancy and Y.C. Shin. A comprehensive chatter prediction model for face
turning operation including the tool wear effect. International Journal of Machine
Tools and Manufacture, 42(9):1035–1044, 2002.
[40] D.W. Clarke, C. Mohtadi, and P.S Tuffs. Generalized predictive control. Part I:
The basic algorithm. Automatica, 23(2):137–148, 1987.
[41] R.C. Colwell. Predicting the angle of chip flow for single point cutting tools.
Transactions of the ASME, 76:199–204, 1954.
[42] M.K. Das and S.A. Tobias. The relation between static and dynamic cutting of
metals. International Journal of Machine Tools and Manufacture, Vol. 7:63–89,
1967.
[43] B.R. Dewey. Computer Graphics for Engineers. Harper & Row Publishers, New
York, 1988.
[44] D.J. Ewins. Modal Testing Theory and Practice. Research Studies Press, Baldock,
United Kingdom, 1984.
[45] M. Eyniyan and Y. Altintas. Chatter stability of general turning operations with
process damping. Journal of Manufacturing Science and Engineering, Transac-
tions of the ASME, 131(4):1–10, 2009.
[46] H.J. Fu, R.E. DeVor, and S.G. Kapoor. A mechanistic model for the prediction
of the force system in face milling operations. ASME Journal of Engineering for
Industry, 106:81–88, 1984.
[47] D.J. Galloway. Some experiments on the inﬂuence of various factors on drill
performance. Transactions of the ASME, 79:139, 1957.
[48] C.G. Goodwin and K.S. Sin. Adaptive Filtering Prediction and Control. Prentice
Hall, Inc., 1984.
[49] E. Govekar, J. Gradiˇsek, M. Kalveram, T. Insperger, K. Weinert, G. St´ep`an, and
I. Grabec. On stability and dynamics of milling at small radial immersion. CIRP
Annals-Manufacturing Technology, 54(1):357–362, 2005.
[50] W.G. Halvorsen and D.L. Brown. Impulse technique for structural frequency
response. Sound & Vibration, vol. 11/11:8–21, 1977.
[51] R.E. Hohn, R. Sridhar, and G.W. Long. A stability algorithm for a special case of
the milling process. ASME Journal of Engineering for Industry, vol. 90:325–329,
1968.
[52] T. Insperger and G. St´ep´an. Stability of the milling process. Periodica Polytech-
nica, 44:47–57, 2000.
[53] T. Insperger and G. St´ep´an. Updated semi-discretization method for periodic
delay-differentilal quations with discrete delay. International Journal for Numer-
ical Methods in Engineering, 61:117–141, 2004.
[54] I.S. Jawahir and C.A. van Luttervalt. Recent developments in chip control
research and applications. CIRP Annals, 42/2:49–54, 1993.
[55] S. Kaldor and E. Lenz. Drill point geometry and optimization. ASME Journal of
Engineering for Industry, 104:84–90, 1982.

360
BIBLIOGRAPHY
[56] S. Kalpakjian. Manufacturing Engineering and Technology. Addison-Wesley Pub-
lishing Company, 1995.
[57] R.I. King. Handbook of High Speed Machining Technology. Chapman and Hall,
1985.
[58] W.A. Kline, R.E. DeVor, and I.A. Shareef. The prediction of surface accuracy in
end milling. ASME Journal of Engineering for Industry, 104:272–278, 1982.
[59] W.A. Kline, R.E. DeVor, and W.J. Zdeblick. A mechanistic model for the force
system in end milling with application to machining airframe structures. In:
North American Manufacturing Research Conference Proceedings, Dearborn, MI,
page 297. Society of Manufacturing Engineers, Vol. XVIII, 1980.
[60] W. Kluft, W. Konig, C.A. Lutterwelt, K. Nagayama, and A.J. Pekelharing. Present
knowledge of chip form. CIRP Annals, 28/2:441–455, 1979.
[61] F. Koenigsberger and J. Tlusty. Machine Tool Structures. Vol. I: Stability Against
Chatter. Pergamon Press, 1967.
[62] W. Konig and K. Essel. New tool materials – wear mechanism and application.
CIRP Annals, 24/1:1–5, 1975.
[63] Y. Koren. Computer Control of Manufacturing Systems. McGraw Hill, 1983.
[64] J. Krystof. Berichte uber Betriebswissenschaftliche Arbeiten, Bd., 12. VDI Verlag,
1939.
[65] C.K. Kuo. Digital Control Systems. 2nd Edition. Saunders College Publishing. R.
Worth, 1992.
[66] UBC Manufacturing Automation Laboratory. CUTPRO c⃝Advanced Machining
Process Measurement and Simulation Software. MAL Manufacturing Automation
Lab. Inc., Vancouver, BC, Canada, 2000.
[67] E.H. Lee and B.W. Shaffer. Theory of plasticity applied to the problem of machin-
ing. Journal of Applied Mechanics, 18:405–413, 1951.
[68] G.C.I. Lin, P. Mathew, P.L.B. Oxley, and A.R. Watson. Predicting cutting force
for oblique machining conditions. Proceedings of the Institution of Mechanical
Engineers, 196:141–148, 1982.
[69] T.N. Loladze. Nature of brittle failure of cutting tool. CIRP Annals., 24/1:13–16,
1975.
[70] W.K. Luk. The direction of chip flow in oblique cutting. International of Journal
of Production Research, 10:67–76, 1972.
[71] M.E. Martellotti. An analysis of the milling process. Transactions of the ASME,
63:677–700, 1941.
[72] M.E. Martellotti. An analysis of the milling process. Part II: Down milling. Trans-
actions of the ASME, 67:233–251, 1945.
[73] M.E. Merchant. Basic mechanics of the metal cutting process, ASME Journal of
Applied Mechanics, vol. 11:A168–A175, 1944.
[74] M.E. Merchant. Mechanics of the metal cutting process. Journal of Applied
Physics, vol. 16:267–279, 1945.
[75] M.E. Merchant. Mechanics of the metal cutting process. II: Plasticity conditions
in orthogonal cutting. Journal of Applied Physics, 16:318–324, 1945.
[76] S.D. Merdol and Y. Altintas. Multi frequency solution of chatter stability for low
immersion milling. Journal of Manufacturing Science and Engineering, Trans-
actions of the ASME, 126(3):459–466, 2004.
[77] H.E. Merrit. Theory of self-excited machine tool chatter. ASME Journal of Engi-
neering for Industry, 87:447–454, 1965.

BIBLIOGRAPHY
361
[78] H.E. Merrit. Hydraulic Control Systems. John Wiley & Sons, New York, 1967.
[79] I. Minis, T. Yanushevsky, R. Tembo, and R. Hocken. Analysis of linear and non-
linear chatter in milling. CIRP Annals, 39:459–462, 1990.
[80] K. Ogata. Modern Control Engineering. Prentice Hall, Inc., 1970.
[81] K. Ogata. Discrete Time Control Systems. Prentice Hall, Inc., 1987.
[82] H. Opitz and F. Bernardi. Investigation and calculation of the chatter behavior
of lathes and milling machines. CIRP Annals, 18:335–343, 1970.
[83] P.L.B. Oxley. The Mechanics of Machining. Ellis Horwood Limited, 1989.
[84] W.B. Palmer and P.L.B. Oxley. Mechanics of orthogonal machining. Proceedings
of the Institution of Mechanical Engineers, 173(24):623–654, 1959.
[85] J. Peters and P. Vanherck. Machine tool stability and incremental stiffness. CIRP
Annals, 17/1, 1967.
[86] W.H. Press, B.P. Flannery, S.A. Tenkolsky, and W.T. Vetterling. Numerical
Recipes in C. Cambridge University Press, 1988.
[87] G. Pritschow. A comparison of linear and conventional electromechanical drives.
CIRP Annals, 47/2:541-547, 1998.
[88] G. Pritschow, C. Eppler and W-D. Lehner. Ferraris sensor: the key for advanced
dynamic drives. CIRP Annals, 52/1:289-292, 2003.
[89] S.S Rao. Mechanical Vibrations. Addison-Wesley Publishing Company, 1990.
[90] H. Ren. Mechanics of machining with chamfered tools. Master’s thesis, The Uni-
versity of British Columbia, 1998.
[91] D.M. Ricon, Ulsoy, A.G. Effects of drill vibrations on cutting forfces and torque.
CIRP Annals, 43(1):59–62, 1994.
[92] J.C. Roukema and Y. Altintas. Generalized modeling of drilling vibrations. Part I:
Time domain model of drilling kinematics, dynamics and hole formation. Inter-
national Journal of Machine Tools and Manufacture, 47(9):1455–1473, 2007.
[93] J.C. Roukema and Y. Altintas. Generalized modeling of drilling vibrations.
Part II: Chatter stability in frequency domain. International Journal of Machine
Tools and Manufacture, 47(9):1474–1485, 2007.
[94] T.L. Schmitz and K.S. Smith. Machining Dynamics – Frequency Response to
Improved Productivity. Springer, 2009.
[95] E. Shamoto and Y. Altintas. Prediction of shear angle in oblique cutting with
maximum shear stress and minimum energy principle. ASME Journal of Manu-
facturing Science and Engineering, 121:399–407, 1999.
[96] M.C. Shaw. Metal Cutting Principles. Oxford University Press, 1984.
[97] S. Smith and T. Delio. Sensor-based control for chatter-free milling by spindle
speed selection. In Proceedings of ASME 1989 WAM: Winter Annual Meeting,
18:107–114, 1989.
[98] S. Smith and J. Tlusty. An overview of modelling and simulation of the milling
process. ASME Journal of Engineering for Industry, 113(2):169–175, 1991.
[99] A. Spence and Y. Altintas. A solid modeller based milling process simulation and
planning system. ASME Journal of Engineering for Industry, 116(1):61–69, 1994.
[100] A.D. Spence and Y. Altintas. CAD assisted adaptive control for milling. Trans.
ASME J. Dynamic Systems, Measurement and Control, 116:61–69, 1991.
[101] L.N. Srinivasan and Q.J. Ge. Parameteric continuous and smooth motion inter-
polation. Journal of Mechanical Design, 118(4):494–498, 1996.
[102] G.V. Stabler. Fundamental geometry of cutting tools. Proceedings of the Institu-
tion of Mechanical Engineers, Vol. 165:14–26, 1951.

362
BIBLIOGRAPHY
[103] G.V. Stabler. The chip flow law and its consequences. Proceedings of 5th Machine
Tool Design and Research Conference, 243–251, 1964.
[104] D.A. Stephenson. Material characterization for metal-cutting force modeling.
Journal of Engineering Materials and Technology, 111:210–219, 1989.
[105] G. Stute. Electrical Feed Drives for Machine Tools. Edited by H. Gross, John
Wiley Inc., 1983.
[106] J.W. Sutherland and R.E. DeVor. An improved method for cutting force and
surface error prediction in ﬂexible end milling systems. ASME Journal of Engi-
neering for Industry, 108:269–279, 1986.
[107] A.O. Tay, M.G. Stevenson, G. De Vahl Davis, and P.L.B. Oxley. A numerical
method for calculating temperature distributions in machining, from force and
shear angle measurements. International Journal of Machine Tool Design and
Research, 16:335–349, 1976.
[108] F.W. Taylor. On the art of cutting metals. Transactions of the ASME, vol. 28:31–
350, 1907.
[109] THK. THK LM System Ball Screws, Catalog No. 75-IBE-2. T H K Co., Japan,
1996.
[110] J. Tlusty and F. Ismail. Basic nonlinearity in machining chatter. CIRP Annals,
30:21–25, 1981.
[111] J. Tlusty and T Moriwaki. Experimental and computational identiﬁcation of
dynamic structural methods. CIRP Annals, 25:497–503, 1976.
[112] J. Tlusty and M. Polacek. The stability of machine tools against self-excited vibra-
tions in machining. International Research in Production Engineering, ASME,
vol. 1:465–474, 1963.
[113] S.A Tobias. Machine Tool Vibration. Blackie and Sons Ltd., 1965.
[114] S.A. Tobias and W. Fishwick. A theory of regenerative chatter. The Engineer –
London, vol. 205:139–239, 1958.
[115] E.M. Trent. Metal Cutting. Butterworths, 1977.
[116] F.C. Wang, S. Schoﬁeld, and P. Wright. Open architecture controllers for machine
tools. Part II: A real time quintic spline interpolator. Journal of Manufacturing
Science and Engineering, 120(2):425–432, 1998.
[117] M. Weck, E. Verhagg, and M. Gather. Adaptive control of face milling operations
with strategies for avoiding chatter-vibrations and for automatic cut distribution.
CIRP Annals, 24(1):405–409, 1975.
[118] I. Zeid. CAD/CAM, Theory and Practice. McGraw Hil, New York, 1991.
[119] N.N. Zorev. Interrelationship between shear processes occurring along tool face
and on shear plane in metal cutting. ASME Proceedings of International Research
in Production Engineering Research Conference, New York, pages 42–49, New
York. September 1963.
[120] N.N. Zorev. Metal Cutting Mechanics. Pergamon Press, 1966.

INDEX
acceleration, 211
accelerometer, 97
active damping, 285
adaptive control, 3, 318
adaptive generalized predictive control, 325
added lobe, 171
alternating current (ac), 258
angle
approach, 33
clearance or relief angle, 13
chip ﬂow, 21
friction, 7
helix, 41
immersion, 151
normal rake, 52
pitch, 39, 151
rake, 7
shear, 6, 9, 19
side rake, 28
taper, 52
inclination, 5
angular, 115
APT, 206
arc length, 243
armature, 258
automatically programmed tools (APT), 201,
206
autospectrum, 95
average friction coefﬁcient, 11, 13
axial deﬂections, 172
back electromotor, 258
backlash, 257
ball lead screw, 251
bilinear approximation, 102
Bode diagram, 290
borderline stability, 128
boring bar, 70
CAD/CAM, 201, 206
cascaded control, 288
causality rules, 304
change of variable, 153
characteristic equation, 77, 100, 128, 141, 156
chatter, 2
detection, 333
drilling, 172, 176
frequency, 129
milling, 149
orthogonal, 126
process damping, 142
threshold, 334
turning, 139
chatter frequency, 158
chisel edge, 47
CL ﬁle, 211
closed-loop transfer function, 265
CNC, 211, 250, 313
CNC design, 2
CNC executive, 193
coherence function, 96
computer aided design/computer aided
manufacturing, 201, see CAD/CAM
Computer Aided Manufacturing-International,
206, see CAM-I
computer numerically controlled, 1, 191, see
CNC
computer-aided manufacturing (CAM), 1
computer-assisted NC, 201
contact time, 98
convolution integral, 152
coordinates, design, local, measurement,
modal, 83
cost function, 114, 328
Coulomb friction, 259
coupling, 116
critical depth of cut, 158
critically stable, 133
cross FRF, 83, 140
cross-power spectrum, 95
cross-talk, 176
cutter location (CL) ﬁles, 209
cutting constants, 16
cutting force
prediction, 25
cutting lip, 48
deceleration, 211
delay differential equation, 127
delayed differential equation, 178
363

364
INDEX
differential elements, 52
digital ﬁlter, 264
digital to analog (D/A) Converter, 264, also see
D/A
dimensional errrors in milling, 73
dimensional form error, 68
Diophantine equation, 323
double-positive, 37
direct current (dc), 251
direct receptance, 117
directional factors, 141, 153, 176
directional matrix, 162
directionalcoefﬁcient matrix, 154
discrete lumped masses, 98
discrete position control, 265
discrete time, 266
discrete time intervals, 353
discrete transfer function of milling, 319
drives, 66
dynamic chip thickness, 127
dynamic drilling, 172
dynamic loads, 254
dynamic milling force, 162
edge coefﬁcients, 16
eigenvalue, 157, 181
eigenvalue matrix, 167
eigenvalue solution, 170
eigenvector, 90, 102
electrical drive, 257
electrohydraulic CNC, 293
encoder, 256
equation of motion, 91
equivalent chord, 144
experimental modal analysis, 98
ﬁxed cycles, 199
Floquet, 185
following error, 267
force
feed, 15
resultant, 15
shear, 7, 15
tangential, 6, 15
thrust, 53
forces
analytical modeling, 43
differential, 44
feed, 39
ploughing, 13
turning, 31
forgetting factor, 321
Fourier
analyzer, 93
coefﬁcients, 81
series, 81
spectrum, 82
FRF-frequency response function, 79
FRF-relative, 90
friction, 1
friction power, 11
friction torque, 254
frictional loss, 252
G function, 195
geometry
drill, 49
global nonlinear optimization, 113
guideway, 252
harmonics of tooth passing, 158
HSS, 62
hydraulic actuators, 293
hydraulic press, 295
hydraulic system, 295
identiﬁcation, 353
immersion, 38
immersion
radial, 160
impact hammer, 97
indentation, 48
inner and outer waves, 129
integration limits, 45
intelligent machining, 313
intelligent pocketing, 334
interpolation, 212
circular, 234
linear, 230
interpolation steps, 223, 224
Constant Displacement, 212
time, 213
jerk, 211
knots, 205
Laplace transform, 341, 343
lateral, 158
lateral ﬂexibility, 285
lead–lag compensator, 280
least squares, 112, 355
least-squares estimation, 353
linear systems, 101
local displacements, 92
Lyapunov function, 283
M functions, 196
machinability, 55
maximum shear stress principle, 18
minimum energy principle, 23
mechanics
drilling, 47
helical end mills, 41
milling, 35
turning, 27
mechanistic, 15
Merchant, 18

INDEX
365
Merrit, 127
milling
cutting constants, 46
down, 37
dynamic, 149
face, 37
form errors, 71
power, 40
torque, 39
up, 37
milling dynamics, 182
minimum energy principle, 18
miscellaneous functions, 196
modal
coordinates, 89
damping matrix, 89
damping ratio, 102
displacement, 88
displacement vector, 92
frequency range, 111
mass, 88
matrix, 88
parameters identiﬁcation, 109
stiffness, 88
testing, 92, 97
transfer function, 90
transformation, 89
modal analysis, 2, 85
mode shapes, 88, 102
multi–degree-of-freedom (MDOF), 85
multi-frequency, 169
natural frequency, 76
NC, 250
NC block, 193
NC part programming, 211
NC program, 193
NC words, 194
negative gradient, 114
negative-positive, 37
noise, 95
nonlinear cutting constant, 127
normalized eigenvector, 170
normalized mode shape, 103
nose radius, 142
numerically controlled, 191, see NC
Nyquist frequency, 93
oblique cutting, 1, 19, 23
open-loop transfer function, 267
orthogonal cutting, 4
oriented FRF, 83
orthogonal cutting, 178
overcut, 71
oxidation, 57
partial fraction example, 349
partial fraction expansion, 347
peak current, 251
peak torque, 251
periodic functions, 154
permanent magnet dc motor, 258
phase angle, 129
phase shift, 142, 157
plane strain, 4
primary shear zone, 5
plane
normal, 20
velocity, 20
PLC, 192
point-to-point (PTP), 207
pole-placement control algorithm, 321
pole-placement controller, 303
position loop, 263
power, 33
power ampliﬁer, 260
prediction output horizons, 327
process damping, 2, 135
ﬂank wear, 145
process damping coefﬁcient, 139
proportional damping, 88
quadrature sensing, 257
rake face–chip interface, 12
real part, 80
receptance, 79
receptance coupling, 115
reconstruction of reference trajectory, 227
recursive computation, 328
recursive parameter estimation, 355
regenerative chip, 144
residue, 99
rotation of objects, 203
rotational, 117
single degree of freedom (SDOF), 75
secondary deformation zone, 5
sensor-assisted, 313
servoampliﬁers, 2
shaker, 97
shear plane temperature, 8
shear power, 8
shear strain, 10
shear strain rate, 10
sliding friction, 5
sliding mode controlle, 281
sliding surface, 282
spindle dynamics, 118
spline
cubic, 204
quintic, 239
segment, 204
spool valve, 299
stability
analysis, 147
chart, 130
dimensionless, 132

366
INDEX
stability (cont.)
discerte time domain, 182
driling, 172
lobes, 132
low immersion milling, 170
multi-frequency, 160
Nyquist, 138
orthogonal, 126
pockets, 149
semi discrete, 178
zero order solution, 154
Stabler, 31
state matrix, 270
state space model, 268
static deﬂection, 71
static deformations, 1
static ﬂexibility, 80
static loads, 252
steady-state error, 268
step response, 272
sticking, 5
strain rate, 10
substructure, 115
surface
drive, 208
part, 208
sutrface
check, 208
tachometer, 256
tertiary deformation zone, 12
tertiary zone, 5
tool–chip interface temperature, 12
thrust bearing, 253
time constant, 260
time-varying cutting, 319
time-varying directional matrix, 175, 185
Tlusty, 127
Tobias, 127
tool breakage, 61
tool life, 60
tool nose radius, 29
tool wear, 54
tool-holder, 119
tooth passing frequency, 167
torque, 33, 53
disturbance, 259
torsional, 158
torsional ﬂexibility, 285
trajectory generation, 211
transfer function
matrix, 100
MDOF, 100
structures, 76
transition matrix, 181
translation of objects, 203
translational, 115
transmission gain, 289
turning, form errors, 68
Tustin’s bilinear, 267
undamped, 87
undercut, 71
up–down counter, 263
vectors, 201
velocity proﬁle
acceleration-limited, 216
trapezoidal, 213
velocity hodograph, 8
velocity proﬁle
jerk limited, 220
velocity-dependent, 137
vibration
forced, 75, 76, 79
free, 75
transient, 76
waves, 129
wavelength, 137
wavy surface, 138
wear
abrasion, 56
adhesion, 56
crater, 57
diffusion, 56
ﬂank, 55, 57
window
box, 98
exponentially decaying, 98
yield shear stress, 1
z transform, 341, 343
zero-order hold, 264, also see ZOH
ZOH, 342

