A Convenient Category for
Higher-Order Probability Theory
Chris Heunen
University of Edinburgh, UK
Ohad Kammar
University of Oxford, UK
Sam Staton
University of Oxford, UK
Hongseok Yang
University of Oxford, UK
Abstract—Higher-order probabilistic programming languages
allow programmers to write sophisticated models in machine
learning and statistics in a succinct and structured way, but step
outside the standard measure-theoretic formalization of proba-
bility theory. Programs may use both higher-order functions and
continuous distributions, or even deﬁne a probability distribution
on functions. But standard probability theory does not handle
higher-order functions well: the category of measurable spaces
is not cartesian closed.
Here we introduce quasi-Borel spaces. We show that these
spaces: form a new formalization of probability theory replacing
measurable spaces; form a cartesian closed category and so
support higher-order functions; form a well-pointed category and
so support good proof principles for equational reasoning; and
support continuous probability distributions. We demonstrate the
use of quasi-Borel spaces for higher-order functions and proba-
bility by: showing that a well-known construction of probability
theory involving random functions gains a cleaner expression;
and generalizing de Finetti’s theorem, that is a crucial theorem
in probability theory, to quasi-Borel spaces.
I. INTRODUCTION
To express probabilistic models in machine learning and
statistics in a succinct and structured way, it pays to use
higher-order programming languages, such as Church [16],
Venture [24], or Anglican [37]. These languages support
advanced features from both programming language theory
and probability theory, while providing generic inference al-
gorithms for answering probabilistic queries, such as marginal-
ization and posterior computation, for all models written in the
language. As a result, the programmer can succinctly express
a sophisticated probabilistic model and explore its properties
while avoiding the nontrivial busywork of designing a custom
inference algorithm.
This exciting development comes at a foundational price.
Programs in these languages may combine higher-order func-
tions and continuous distributions, or even deﬁne a proba-
bility distribution on functions. But the standard measure-
theoretic formalization of probability theory does not handle
higher-order functions well, as the category of measurable
spaces is not cartesian closed [1]. For instance, the Anglican
implementation of Bayesian linear regression in Figure 1
goes beyond the standard measure-theoretic foundation of
probability theory, as it deﬁnes a probability distribution on
functions R →R.
We introduce a new formalization of probability theory
that accommodates higher-order functions. The main notion
1
(defquery Bayesian-linear-regression
2
(let [f (let [s (sample (normal 0.0 3.0))
3
b (sample (normal 0.0 3.0))]
4
(fn [x] (+ (* s x) b)))]
5
(observe (normal (f 1.0) 0.5) 2.5)
6
(observe (normal (f 2.0) 0.5) 3.8)
7
(observe (normal (f 3.0) 0.5) 4.5)
8
(observe (normal (f 4.0) 0.5) 6.2)
9
(observe (normal (f 5.0) 0.5) 8.0)
10
(predict :f f)))
Fig. 1.
Bayesian linear regression in Anglican. The program deﬁnes a
probability distribution on functions R →R. It ﬁrst samples a random
linear function f by randomly selecting slope s and intercept b. It then
adjusts the probability distribution of the function to better describe ﬁve
observations (1.0, 2.5), (2.0, 3.8), (3.0, 4.5), (4.0, 6.2) and (5.0, 8.0) by
posterior computation. In the graph, each line has been sampled from the
posterior distribution over linear functions.
replacing a measurable space is a quasi-Borel space: a set X
equipped with a collection of functions MX ⊆[R →X]
satisfying certain conditions (Def. 7). Intuitively, MX is the set
of random variables of type X. Here R means that the random-
ness of random variables in MX comes from (a probability
distribution on) R, one of the best behaving measurable spaces.
Thus the primitive notion shifts from measurable subset to
random variable, which is traditionally a derived notion. For
related ideas see §IX.
Quasi-Borel spaces have good properties and structure.
• The category of quasi-Borel spaces is well-pointed, since
a morphism is just a structure-preserving function (§III).
(This is in contrast to [34, §8]).
• The category of quasi-Borel spaces is cartesian closed
(§IV), so that it becomes a setting to study probability
distributions on higher-order functions.
978-1-5090-3018-7/17/$31.00 ©2017 IEEE
arXiv:1701.02547v4  [cs.PL]  20 Nov 2020

• There is a natural notion of probability measure on quasi-
Borel spaces (Def. 10). The space of all probability mea-
sures is again a quasi-Borel space, and forms the basis
for a commutative monad on the category of quasi-Borel
spaces (§V). Thus quasi-Borel spaces form semantics for
a probabilistic programming language in the monadic
style [26].
We also illustrate the use of quasi-Borel spaces.
• Bayesian regression (§VI). Quasi-Borel spaces are a
natural setting for understanding programs such as the
one in Figure 1: the prior (Lines 2–4) deﬁnes a probability
distribution over functions f, i.e. a measure on RR, and
the posterior (illustrated in the graph), is again a prob-
ability measure on RR, conditioned by the observations
(Lines 5–9).
• Randomization (§VII). A key idea of categorical logic
is that ∀∃statements should become statements about
quotients of objects. The structure of quasi-Borel spaces
allows us to rephrase a crucial randomization lemma in
this way. Classically, it says that every probability kernel
arises from a random function. In the setting of quasi-
Borel spaces, it says that the space of probability kernels
P(R)X is a quotient of the space of random functions,
P(RX) (Theorem 26). Notice that the higher-order struc-
ture of quasi-Borel spaces allows us to succinctly state
this result.
• De Finetti’s theorem (§VIII). Probability theorists often
encounter problems when working with arbitrary prob-
ability measures on arbitrary measurable spaces. Quasi-
Borel spaces allow us to better manage the source of
randomness. For example, de Finetti’s theorem is a
foundational result in Bayesian statistics which says that
every exchangeable random sequence can be generated
by randomly mixing multiple independent and identically
distributed sequences. The theorem is known to hold
for standard Borel spaces [8] or measurable spaces that
arise from good topologies [18], but not for arbitrary
measurable spaces [9]. We show that it holds for all quasi-
Borel spaces (Theorem 29).
All of this is evidence that quasi-Borel spaces form a conve-
nient category for higher-order probability theory.
II. PRELIMINARIES ON PROBABILITY MEASURES AND
MEASURABLE SPACES
Deﬁnition 1. The Borel sets form the least collection ΣR of
subsets of R that satisﬁes the following properties:
• intervals (a, b) are Borel sets;
• complements of Borel sets are Borel;
• countable unions of Borel sets are Borel.
The Borel sets play a crucial role in probability theory be-
cause of the tight connection between the notion of probability
measure and the axiomatization of Borel sets.
Deﬁnition 2. A probability measure on R is a function
µ: ΣR →[0, 1] satisfying µ(R) = 1 and µ(U Si) = P µ(Si)
for any countable sequence of disjoint Borel sets Si.
The natural generalization gives measurable spaces.
Deﬁnition 3. A σ-algebra on a set X is a nonempty family of
subsets of X that is closed under complements and countable
unions. A measurable space is a pair (X, ΣX) of a set X and a
σ-algebra ΣX on it. A probability measure on a measurable
space X is a function µ: ΣX →[0, 1] satisfying µ(X) =
1 and µ(U Si) = P µ(Si) for any countable sequence of
disjoint sets Si ∈ΣX.
The Borel sets of the reals form a leading example of a
σ-algebra. Other important examples are countable sets with
their discrete σ-algebra, which contains all subsets. We can
characterize these spaces as standard Borel spaces, but ﬁrst
introduce the appropriate structure-preserving maps.
Deﬁnition 4. Let (X, ΣX) and (Y, ΣY ) be measurable spaces.
A measurable function f : X →Y is a function such that
f -1(U) ∈ΣX when U ∈ΣY .
Thus a measurable function f : X →Y lets us push-
forward a probability measure µ on X to a probability measure
f∗µ on Y by (f∗µ)(U) = µ(f -1(U)). Measurable spaces and
measurable functions form a category Meas.
Real-valued measurable functions f : X
→R can be
integrated with respect to a probability measure µ on (X, ΣX).
The integral of a nonnegative function f is
Z
X
f dµ
def
= sup
{Ui}
X
i

µ(Ui) · inf
x∈Ui f(x)

,
where {Ui} ranges over ﬁnite partitions of X into measurable
subsets. When f may be negative, its integral is
Z
X
f dµ
def
=
Z
X
max(0, f) dµ

−
Z
X
max(0, −f) dµ

when those two integrals exist. When it is convenient to make
the integrated variable explicit, we write
R
x∈U f(x) dµ for
R
X(λx. f(x) · [x ∈U]) dµ, where U ∈ΣX is a measurable
subset and [ϕ] has the value 1 if ϕ holds and 0 otherwise.
A. Standard Borel spaces
Proposition 5 (e.g. [23], App. A1). For a measurable space
(X, ΣX) the following are equivalent:
• (X, ΣX) is a retract of (R, ΣR), that is, there exist
measurable X
f−→R
g−→X such that g ◦f = idX;
• (X, ΣX) is either measurably isomorphic to (R, ΣR) or
countable and discrete;
• X has a complete metric with a countable dense subset
and ΣX is the least σ-algebra containing all open sets.
When (X, ΣX) satisﬁes any of the above conditions, we
call it standard Borel space. These spaces play an important
role in probability theory because they enjoy properties that do
not hold for general measurable spaces, such as the existence
of conditional probability kernels [23], [28] and de Finetti’s
theorem for exchangeable random processes [9].
Besides R, another popular uncountable standard Borel
space is (0, 1) with the σ-algebra {U ∩(0, 1) | U ∈ΣR}. As

the above proposition indicates, these spaces are isomorphic
by, for instance, λr.
1
(1+e−r) : R →(0, 1).
B. Failure of cartesian closure
Proposition 6 (Aumann, [1]). The category Meas is not
cartesian closed: there is no space of functions R →R.
Speciﬁcally, the evaluation function
ε: Meas(R, R) × R →R
with
ε(f, r) = f(r)
is never measurable (Meas(R, R) × R, Σ ⊗ΣR) →(R, ΣR)
regardless of the choice of σ-algebra Σ on Meas(R, R). Here,
Σ ⊗ΣR is the product σ-algebra, generated by rectangles
(U × V ) for U ∈Σ and V ∈ΣR.
III. QUASI-BOREL SPACES
The typical situation in probability theory is that there is a
ﬁxed measurable space (Ω, ΣΩ), called the sample space, from
which all randomness originates, and that observations are
made in terms of random variables, which are pairs (X, f) of
a measurable space of observations (X, ΣX) and a measurable
function f : Ω→X. From this perspective, the notion of
measurable function is more important than the notion of
measurable space. In some ways, the σ-algebra ΣX is only
used as an intermediary to restrain the class of measurable
functions Ω→X.
We now use this idea as a basis for our new notion of space.
In doing so, we assume that our sample space Ωis the real
numbers, which makes probabilities behave well.
Deﬁnition 7. A quasi-Borel space is a set X together with a
set MX ⊆[R →X] satisfying:
• α ◦f ∈MX if α ∈MX and f : R →R is measurable;
• α ∈MX if α: R →X is constant;
• if
R = U
i∈N Si,
with
each
set
Si
Borel,
and
α1, α2, . . . ∈MX, then β is in MX, where β(r) = αi(r)
for r ∈Si.
The name ‘quasi-Borel space’ is motivated ﬁrstly by anal-
ogy to quasi-topological spaces (see §IX), and secondly in
recognition of the intimate connection to the standard Borel
space R (see also Prop. 15(2)).
Example 8. For every measurable space (X, ΣX), let MΣX
be the set of measurable functions R →X. Thus MΣX is
the set of X-valued random variables. In particular: R itself
can be considered as a quasi-Borel space, with MR the set
of measurable functions R →R; the two-element discrete
space 2 can be considered as a quasi-Borel space, with M2
the set of measurable functions R →2, which are exactly the
characteristic functions of the Borel sets (Def. 1).
Before we continue, we remark that the notion of quasi-
Borel space is invariant under replacing R with a different
uncountable standard Borel space.
Proposition 9. For any measurable space (Ω, ΣΩ), any mea-
surable isomorphism ι: R →Ω, any set X, and any set N
of functions Ω→X, the pair (X, {α ◦ι | α ∈N}) is a
quasi-Borel space if and only if:
• α ◦f ∈N if α ∈N and f : Ω→Ωis measurable;
• α ∈N if α: Ω→X is constant;
• if Ω= U
i∈N Si, with each set Si ∈ΣΩ, and α1, α2, . . . ∈
N, then β is in N, where β(r) = αi(r) if r ∈Si.
By Prop. 5, the measurable spaces isomorphic to R are the
uncountable standard Borel spaces. Note that the choice of
isomorphism ι is not important: it does not appear in the three
conditions.
Probability theory typically considers a basic probability
measure on the sample space Ω. Each random variable, that
is each measurable function Ω→X, then induces a proba-
bility measure on X by pushing forward the basic measure.
Quasi-Borel spaces take this idea as an axiomatic notion of
probability measure.
Deﬁnition 10. A probability measure on a quasi-Borel space
(X, MX) is a pair (α, µ) of α ∈MX and a probability
measure µ on R (as in Def. 2).
A. Morphisms and integration
Deﬁnition 11. A morphism of quasi-Borel spaces (X, MX) →
(Y, MY ) is a function f : X →Y such that f ◦α ∈MY
if α ∈MX. Write QBS
 (X, MX), (Y, MY )

for the set of
morphisms from (X, MX) to (Y, MY ).
In particular, elements of MX are precisely morphisms
(R, MR) →(X, MX), so MX = QBS
 (R, MR), (X, MX)

.
Morphisms compose as functions, and identity functions are
morphisms, so quasi-Borel spaces form a category QBS.
Example 12. There are two canonical ways to equip a set
X with a quasi-Borel space structure. The ﬁrst structure M R
X
consists of all functions R →X. The second structure M L
X
consists of all functions β : R →X for which there exist: a
countable subset I ⊆N; a measurable f : R →R; a partition
R = U
i∈I Si with every Si measurable; and a sequence
(xi)i∈I in X, such that β(r) = xi whenever f(r) ∈Si. These
are the right and left adjoints, respectively, to the forgetful
functor from QBS to Set.
Def. 11 is independent of R: the sample space may be any
uncountable standard Borel space.
Proposition 13. Consider a measurable space (Ω, ΣΩ) with
a measurable isomorphism ι: R →Ω. For i ∈1, 2, let Xi be
a set and Ni a set of functions Ω→Xi such that
Mi =
 Xi, {α ◦ι | α ∈Ni}

are quasi-Borel spaces. A function g: X1 →X2 is a morphism
(X1, M1) →(X2, M2) if and only if g ◦α ∈N2 for α ∈N1.
Morphisms between quasi-Borel spaces are analogous to
measurable functions between measurable spaces. The crucial
properties of measurable functions are that they work well with
(probability) measures: we can push-forward these measures,

and integrate over them. Morphisms of quasi-Borel spaces also
support these constructions.
• Pushing forward: if f : X →Y is a morphism and (α, µ)
is a probability measure on X then f ◦α is by deﬁnition
in MY and so (f ◦α, µ) is a probability measure on Y .
• Integrating: If f : X →R is a morphism of quasi-Borel
spaces and (α, µ) is a probability measure on X, the
integral of f with respect to (α, µ) is
Z
f d(α, µ)
def
=
Z
R
(f ◦α) dµ.
(1)
So integration formally reduces to integration on R.
B. Relationship to measurable spaces
If we regard a subset S ⊆X as its characteristic function
χS : X →2, then we can regard a σ-algebra on a set X as
a set of characteristic functions FX ⊆[X →2] satisfying
certain conditions. Thus a measurable space (Def. 3) could
equivalently be described as a pair (X, FX) of a set X
and a collection FX ⊆[X →2] of characteristic func-
tions. Moreover, from this perspective, a measurable function
f : (X, FX) →(Y, FY ) is simply a function f : X →Y such
that χ ◦f ∈FX if χ ∈FY . Thus quasi-Borel spaces shift
the emphasis from characteristic functions X →2 to random
variables R →X.
1) Quasi-Borel spaces as structured measurable spaces: A
subset S ⊆X is in the σ-algebra ΣX of a measurable space
(X, ΣX) if and only if its characteristic function X →2 is
measurable. With this in mind, we deﬁne a measurable subset
of a quasi-Borel space (X, MX) to be a subset S ⊆X such
that the characteristic function X →2 is a morphism of quasi-
Borel spaces.
Proposition 14. The collection of all measurable subsets of a
quasi-Borel space (X, MX) is characterized as
ΣMX
def
= {U | ∀α ∈MX. α-1(U) ∈ΣR}
(2)
and forms a σ-algebra.
Thus we can understand a quasi-Borel space as a measurable
space (X, ΣX) equipped with a class of measurable functions
MX ⊆[R →X] determining the σ-algebra by ΣX = ΣMX
as in (2).
Moreover, every morphism (X, MX) →(Y, MY ) is also a
measurable function (X, ΣMX) →(Y, ΣMY ) (but the converse
does not hold in general).
A probability measure (α, µ) on a quasi-Borel space
(X, MX) induces a probability measure α∗µ on the underlying
measurable space. Integration as in (1) matches the standard
deﬁnition for measurable spaces.
2) An adjunction embedding standard Borel spaces: Under
some circumstances morphisms of quasi-Borel spaces coincide
with measurable functions.
Proposition 15. Let (Y, ΣY ) be a measurable space.
1) If (X, MX) is a quasi-Borel space, a function X →Y
is a measurable function (X, ΣMX) →(Y, ΣY ) if and
only if it is a morphism (X, MX) →(Y, MΣY ).
2) If (X, ΣX) is a standard Borel space, a function X →Y
is a morphism (X, MΣX) →(Y, MΣY ) if and only if it
is a measurable function (X, ΣX) →(Y, ΣY ).
Proposition 15(1) means there is an adjunction
Meas
R
2 QBS
L
⊥
r
where L(X, MX) = (X, ΣMX) and R(X, ΣX) = (X, MΣX).
Proposition 15(2) means that the functor R is full and faith-
ful when restricted to standard Borel spaces. Equivalently,
L(R(X, ΣX)) = (X, ΣX), that is ΣX = ΣMΣX for standard
Borel spaces (X, ΣX).
IV. PRODUCTS, COPRODUCTS AND FUNCTION SPACES
Quasi-Borel spaces support products, coproducts, and func-
tion spaces. These basic constructions form the basis for
interpreting simple type theory in quasi-Borel spaces.
Proposition 16 (Products). If (Xi, MXi)i∈I is a family of
quasi-Borel spaces indexed by a set I, then (Q
i Xi, MΠiXi)
is a quasi-Borel space, where Q
i Xi is the set product, and
MΠiXi
def
=
n
f : R →Q
i Xi | ∀i. (πi ◦f) ∈MXi
o
.
The projections Q
i Xi →Xi are morphisms, and provide the
structure of a categorical product in QBS.
Proposition 17 (Coproducts). If (Xi, MXi)i∈I is a family
of quasi-Borel spaces indexed by a countable set I, then
(`
i Xi, M⨿iXi) is a quasi-Borel space, where `
i Xi is the
disjoint union of sets,
M⨿iXi
def
= {λr. (f(r), αf(r)(r)) | f : R →I is measurable,
(αi ∈MXi)i∈image(f)},
and I carries the discrete σ-algebra. This space has the
universal property of a coproduct in the category QBS.
Proof notes. The third condition of quasi-Borel spaces is
needed here. It is a crucial step in showing that for an I-
indexed family of morphisms (fi : Xi →Z)i∈I, the copairing
[fi]i∈I : `
i∈I Xi →Z is again a morphism.
Proposition
18
(Function
spaces).
If
(X, MX)
and
(Y, MY ) are quasi-Borel spaces, so is (Y X, MY X), where
Y X def
= QBS(X, Y ) is the set of morphisms X →Y , and
MY X
def
= {α: R →Y X | uncurry(α) ∈QBS(R × X, Y )}.
The evaluation function Y X ×X →Y is a morphism and has
the universal property of the function space. Thus QBS is a
cartesian closed category.
Proof notes. The
only
difﬁcult
part
is
showing
that
(Y X, MY X) satisﬁes the third condition of quasi-Borel
spaces. Prop. 17 is useful here.

A. Relationship with standard Borel spaces
Recall that standard Borel spaces can be thought of as a
full subcategory of the quasi-Borel spaces, that is, the functor
R: Meas →QBS is full and faithful (Prop. 15(2)) when
restricted to the standard Borel spaces. This full subcategory
has the same countable products, coproducts and function
spaces (whenever they exist). We may thus regard quasi-Borel
spaces as a conservative extension of standard Borel spaces
that supports simple type theory.
Proposition 19. The functor R(X, ΣX) = (X, MΣX):
1) preserves
products
of
standard
Borel
spaces:
R(Q
i Xi)
=
Q
i R(Xi), where (Xi, ΣXi)i∈I is a
countable family of standard Borel spaces;
2) preserves spaces of functions between standard Borel
spaces whenever they exist: if (Y, ΣY ) is countable and
discrete, and (X, ΣX) is standard Borel, then R(XY ) =
R(X)R(Y );
3) preserves
countable
coproducts
of
standard
Borel
spaces: R(`
i Xi) = `
i R(Xi), where (Xi, ΣXi)i∈I is
a countable family of standard Borel spaces.
Consequently, a standard programming language semantics
in standard Borel spaces can be conservatively embedded
in quasi-Borel spaces, allowing higher-order functions while
preserving all the type theoretic structure.
We note, however, that in light of Prop. 6, the quasi-
Borel space RR does not come from a standard Borel space.
Moreover, the left adjoint L: QBS →Meas does not
preserve products in general. For quasi-Borel spaces (X, MX)
and (Y, MY ), we always have ΣMX ⊗ΣMY ⊆ΣMX×Y , but
not always ⊇. Indeed, ΣMRR ⊗ΣR ̸= ΣM(RR×R), by Prop. 6.
V. A MONAD OF PROBABILITY MEASURES
In this section we will show that the probability measures
on a quasi-Borel space form a quasi-Borel space again. This
gives a commutative monad that generalizes the Giry monad
for measurable spaces [15].
A. Monads
We use the Kleisli triple formulation of monads (see
e.g. [26]). Recall that a monad on a category C comprises
• for any object X, an object T(X);
• for any object X, a morphism η: X →T(X);
• for any objects X, Y , a function
(>>=): C(X, T(Y )) →C(T(X), T(Y )).
We write (t>>=f) for (>>=)(f)(t).
This is subject to the conditions (t>>=η) = t, (η(x)>>=f) =
f(x), and t >>= (λx. (f(x) >>= g)) = (t >>= f) >>= g.
The intuition is that T(X) is an object of computations
returning X, that η is the computation that returns imme-
diately, and that t>>=f sequences computations, ﬁrst running
computation t and then calling f with the result.
When C is cartesian closed, a monad is strong if (>>=)
internalizes to an operation (>>=): (T(Y ))X →(T(Y ))T (X),
and then the conditions are understood as expressions in a
cartesian closed category.
B. Kernels and the Giry monad
We recall the notion of probability kernel, which is a
measurable family of probability measures.
Deﬁnition 20. Let (X, ΣX) and (Y, ΣY ) be measurable
spaces. A probability kernel from X to Y
is a function
k : X×ΣY →[0, 1] such that k(x, −) is a probability measure
for all x ∈X (Def. 3), and k(−, U) is a measurable function
for all U ∈ΣY (Def. 4).
We can classify probability kernels as follows. Let G(X) be
the set of probability measures on (X, ΣX). We can equip this
set with the σ-algebra generated by {µ ∈G(X) | µ(U) < r},
for U ∈ΣX and r ∈[0, 1], to form a measurable space
(G(X), ΣG(X)). A measurable function X →G(Y ) amounts
to a probability kernel from X to Y .
The construction G has the structure of a monad, as ﬁrst
discussed by Giry [15]. A computational intuition is that G(X)
is a space of probabilistic computations over X, and this
provides a semantic foundation for a ﬁrst-order probabilistic
programming language (see e.g. [34]). The unit η: X →
G(X) lets η(x) be the Dirac measure on x, with η(x)(U) = 1
if x ∈U, and η(x)(U) = 0 if x ̸∈U. If µ ∈G(X) and k
is a measurable function X →G(Y ), then (µ>>=Gk) is the
measure in G(Y ) with (µ>>=Gk)(U) =
R
x∈X k(x)(U) dµ.
C. Equivalent measures on quasi-Borel spaces
Recall (Def. 10) that a probability measure (α, µ) on a
quasi-Borel space (X, MX) is a pair (α, µ) of a function
α ∈MX and a probability measure µ on R. Random
variables are often equated when they describe the same
distribution. Every probability measure (α, µ) determines a
push-forward measure α∗µ on the corresponding measurable
space (X, ΣMX), that assigns to U ⊆X the real number
µ(α−1(U)). We will identify two probability measures when
they deﬁne the same push-forward measure, and write ∼for
this equivalence relation.
This is a reasonable notion of equality even if we put
aside the notion of measurable space, because two probability
measures have the same push-forward measure precisely when
they have the same integration operator: (α, µ) ∼(α′, µ′)
if and only if
R
f d(α, µ) =
R
f d(α′, µ′) for all morphisms
f : (X, MX) →R. Nevertheless, other notions of equivalence
could be used.
D. A probability monad
We now explain how to build a monad of probability mea-
sures on the category of quasi-Borel spaces, modulo this notion
of equivalence. This monad P will inherit properties from
the Giry monad. Technically, the functor L: QBS →Meas
(Prop. 15) is a ‘monad opfunctor’ taking P to the Giry monad
G, which means that it extends to a functor from the Kleisli
category of P to the Kleisli category of G [36].

a) On objects: For a quasi-Borel space (X, MX), let
P(X) = {(α, µ) probability measure on (X, MX)}/ ∼,
MP (X) = {β : R →P(X) | ∃α ∈MX. ∃g ∈Meas(R, G(R)).
∀r ∈R. β(r) = [α, g(r)]},
where [α, µ] denotes the equivalence class. Note that
P(X) ∼= {α∗µ ∈G(X, ΣMX) | α ∈MX, µ ∈G(R)}
(3)
as sets, and lX([α, µ]) = α∗µ deﬁnes a measurable injection
lX : L(P(X)) ↣G(X, ΣMX).
b) Monad unit (return): Recall that the constant func-
tions (λr.x) are all in MX. For any probability measure µ
on R, the push-forward measure (λr.x)∗µ on (X, ΣMX) is
the Dirac measure on x, with ((λr.x)∗µ)(U) = 1 if x ∈U
and 0 otherwise. Thus (λr.x, µ) ∼(λr.x, µ′) for all measures
µ, µ′ on R. The unit of P at (X, MX) is the morphism
η: X →P(X) given by
η(X,MX)(x) = [λr.x, µ]
(4)
for an arbitrary probability measure µ on R.
c) Bind: To deﬁne (>>=): P(Y )X →(P(Y ))P (X), sup-
pose f : X →P(Y ) is a morphism and [α, µ] in P(X). Since
f is a morphism, there is a measurable g: R →G(R) and
a function β ∈MY such that (f ◦α)(r) = [β, g(r)]. Set
([α, µ] >>= f) = [β, µ >>=G g], where µ >>=G g is the bind of
the Giry monad. This matches the bind of the Giry monad,
since ((α∗µ) >>=G (lY ◦f)) = β∗(µ >>=G g).
Theorem 21. The data (P, η, (>>=)) above deﬁnes a strong
monad on the category QBS of quasi-Borel spaces.
Proof notes. The monad laws can be reduced to the laws for
the monad G on Meas [15]. The monad on QBS is strong
because (>>=): P(Y )X →(P(Y ))P (X) is a morphism, which
is shown by expanding the deﬁnitions.
Proposition 22. The monad P satisﬁes these properties:
1) For f : (X, MX) →(Y, MY ), the functorial action
P(f): P(X) →P(Y ) is [α, µ] 7→[f ◦α, µ].
2) It is a commutative monad, i.e. the order of sequencing
doesn’t matter: if p ∈P(X), q ∈P(Y ), and f is a mor-
phism X × Y →P(Z), then p >>= λx. q >>= λy. f(x, y)
equals q >>= λy. p >>= λx. f(x, y).
3) The
faithful
functor
L: QBS →Meas
with
L(X, MX) = (X, ΣMX)
extends
to
a
faithful
functor Kleisli(P) →Kleisli(G), i.e. (L, l) is a monad
opfunctor [36].
4) When (X, ΣX) is a standard Borel space, the map lX
of Eq. (3) is a measurable isomorphism.
VI. EXAMPLE: BAYESIAN REGRESSION
We are now in a position to explain the semantics of the
Anglican program in Figure 1. The program can be split into
three parts: a prior, a likelihood, and a posterior. Recall that
Bayes’ law says that the posterior is proportionate to the
product of the prior and the likelihood.
Fig. 2.
Illustration of 1000 sampled functions from the prior on RR for
Bayesian linear regression (5).
a) Prior: Lines 2–4 deﬁne a prior measure on RR:
prior
def
= (let [s (sample (normal 0.0 3.0))
b (sample (normal 0.0 3.0))]
(fn [x] (+ (* s x) b)))
To describe this semantically, observe the following.
Proposition 23. Let (Ω, ΣΩ) be a standard Borel space, and
(X, MX) a quasi-Borel space. Let α: R(Ω, ΣΩ) →X be
a morphism and µ a probability measure on (Ω, ΣΩ). Any
section-retraction pair (Ω
ς−→R
ρ−→Ω) = idΩhas a probability
measure [α◦ρ, ς∗µ] ∈P(X), that is independent of the choice
of ς and ρ.
Write [α, µ] for the probability measure in this case.
Now, the program fragment prior describes the distribution
[α, ν ⊗ν] in P(RR) where ν is the normal distribution on R
with mean 0 and standard deviation 3, and where α: R×R →
RR is given by α(s, b)
def
= λr. s · r + b. Informally,
JpriorK = [α, ν ⊗ν] ∈P(RR).
(5)
Figure 2 illustrates this measure [α, ν ⊗ν]. This denotational
semantics can be made compositional, by using the commu-
tative monad structure of P and the cartesian closed structure
of the category QBS (following e.g. [26], [34]), but in this
paper we focus on this example rather than spelling out the
general case once again.
b) Likelihood: Lines 5–9 deﬁne the likelihood of the
observations:
obs
def
=
(observe (normal (f 1.0) 0.5) 2.5)
. . . (observe (normal (f 5.0) 0.5) 8.0)
This program fragment has a free variable f of type RR. Let
us focus on line 5 for a moment:
obs1
def
= (observe (normal (f 1.0) 0.5) 2.5)
Given a function f : R →R, the likelihood of drawing 2.5
from a normal distribution with mean f(1.0) and standard
deviation 0.5 is
Jf : RR ⊢obs1K = d(f(1.0), 2.5),

where d: R2 →[0, ∞) is the density of the normal distribution
function with standard deviation 0.5:
d(µ, x) =
q
2
π e−2(x−µ)2.
Notice that we use a normal distribution to allow for some
noise in the measurement. Informally, we are not recording an
observation that f(1.0) is exactly 2.5, since this would make
regression impossible; rather, f(1.0) is roughly 2.5.
Overall, lines 5–9 describe a likelihood weight which is the
product of the likelihoods of the ﬁve data points, given f : RR.
Jf : RR ⊢obsK = d(f(1), 2.5) · d(f(2), 3.8) · d(f(3), 4.5)
· d(f(4), 6.2) · d(f(5), 8.0).
c) Posterior: We follow the recipe for a semantic pos-
terior given in [34]. Putting the prior and likelihood together
gives a probability measure in P(RR ×[0, ∞)) which is found
by pushing forward the measure JpriorK ∈P(R) along the
function (id , JobsK): RR →RR × [0, ∞). This push-forward
measure
P(id , JobsK) (JpriorK) ∈P(RR × [0, ∞))
is a measure over pairs (f, w) of functions together with their
likelihood weight. We now ﬁnd the posterior by multiplying
the prior and the likelihood, and dividing by a normalizing
constant. To do this we deﬁne a morphism
norm : P(X × [0, ∞)) →P(X) ⊎{error}
norm([(α, β), ν])
def
=
(
[α, νβ/(νβ(R))]
if 0 ̸= νβ(R) ̸= ∞
error
otherwise
where νβ : ΣR →[0, ∞]
def
= λU.
R
r∈U(β(r)) dν. The idea is
that if β : R →[0, ∞) and ν is a probability measure on R
then νβ is always a posterior measure on R, but it is typically
not normalized, i.e. νβ(R) ̸= 1. We normalize it by dividing
by the normalizing constant, as long as this division is well-
deﬁned.
Now, the semantics of the entire program in Figure 1 is
norm(P(id , JobsK) (JpriorK)), which is a measure in P(RR).
Calculating this posterior using Anglican’s inference algorithm
lmh gives the plot in the lower half of Figure 1.
d) Defunctionalized regression and non-linear regres-
sion: Of course, one can do regression without explicitly
considering distributions over the space of all measurable
functions, by instead directly calculating posterior distribu-
tions for the slope s and the intercept b. For example, one
could defunctionalize the program in Fig. 1 in the style of
Reynolds [29]. But defunctionalization is a whole-program
transformation. By structuring the semantics using quasi-
Borel spaces, we are able to work compositionally, without
mentioning s and b explicitly on lines 5–10. The internal
posterior calculations actually happen at the level of standard
Borel spaces, and so a defunctionalized version would be in
some sense equivalent, but from the programming perspective
it helps to abstract away from this. The regression program in
Fig. 1 is quickly adapted to ﬁt other kinds of functions, e.g.
polynomials, or even programs from a small domain-speciﬁc
language, simply by changing the prior in Lines 2–4.
VII. RANDOM FUNCTIONS
We discuss random variables and random functions, starting
from the traditional setting. Let (Ω, ΣΩ) be a measurable space
with a probability measure. A random variable is a measurable
function (Ω, ΣΩ) →(X, ΣX). A random function between
measurable spaces (X, ΣX) and (Y, ΣY ) is a measurable
function (Ω× X, ΣΩ⊗ΣX) →(Y, ΣY ).
We can push forward a probability measure on Ωalong
a random variable (Ω, ΣΩ) →(X, ΣX) to get a probability
measure on X, but in the traditional setting we cannot push
forward a measure along a random function. Measurable
spaces are not cartesian closed (Prop. 6), and so we cannot
form a measurable space Y X and we cannot curry a random
function in general.
Now, if we revisit these deﬁnitions in the setting of quasi-
Borel spaces, we do have function spaces, and so we can push
forward along random functions. In fact, this is somewhat
tautologous because a probability measure (Def. 10) on a func-
tion space is essentially the same thing as a random function:
a probability measure on a function space (Y, ΣY )(X,ΣX) is
deﬁned to be a pair (f, µ) of a probability measure µ on R,
our sample space, and a morphism f : R →Y X; but to give
a morphism R →Y X is to give a morphism R × X →Y
(Prop. 18) as in the traditional deﬁnition of random function.
We have already encountered an example of a random
function in Section VI: the prior for linear regression is a
random function from R to R over the measurable space
(R × R, ΣR ⊗ΣR) with the measure ν ⊗ν. Random functions
abound throughout probability theory and stochastic processes.
The following section explores their use in the so-called
randomization lemma, which is used throughout probability
theory. By moving to quasi-Borel spaces, we can state this
lemma succinctly (Theorem 26).
A. Randomization
An elementary but useful trick in probability theory is that
every probability distribution on R arises as a push-forward
of the uniform distribution on [0, 1]. Even more useful is that
this can be done in a parameterized way.
Proposition
24
([23], Lem. 3.22). Let (X, ΣX) be a
measurable
space.
For
any
kernel
k: X × ΣR →[0, 1]
there is a measurable function f : R × X →R such that
k(x, U) = υ{r | f(r, x) ∈U}, where υ is the uniform distri-
bution on [0, 1].
For quasi-Borel spaces we can phrase this more succinctly:
it is a result about a quotient of the space of random functions.
We ﬁrst deﬁne quotient spaces.
Proposition 25. Let (X, MX) be a quasi-Borel space, let Y
be a set, and let q: X →Y be a surjection. Then (Y, MY ) is
a quasi-Borel space with MY = {q ◦α | α ∈MX}.
We call such a space a quotient space.

Theorem 26. Let (X, MX) be a quasi-Borel space. The space
(P(R))X of kernels is a quotient of the space P(RX) of
random functions.
Before proving this theorem, we use Prop. 24 to give an
alternative characterization of our probability monad.
Lemma 27. Let (X, MX) be a quasi-Borel space. The func-
tion q: XR →P(X) given by q(α)
def
= [α, υ] is a surjection,
with corresponding quotient space (P(X), MP (X)):
MP (X) = {λr ∈R. [γ(r), υ] | γ ∈MXR},
(6)
where υ is the uniform distribution on [0, 1].
Proof notes. The direction (⊆) follows immediately from
Prop. 24. For the direction (⊇) we must consider γ ∈MXR
and show that (λr ∈R. [γ(r), υ]) is in MP (X). This follows by
considering the kernel k: R →G(R×R) with k(r) = υ ⊗δr,
so that [γ(r), υ] = [uncurry(γ), k(r)]. Here we are using
Prop. 23.
Proof of Theorem 26. Consider
the
evident
morphism
q: P(RX)
→
(P(R))X
that comes from the monadic
strength. That is, (q([α, µ]))(x) = [λr. α(r)(x), µ]. We show
that q is a quotient morphism.
We ﬁrst show that q is surjective. To give a morphism
k: (X, MX) →P(R) is to give a measurable function
(X, ΣMX) →G(R), since (P(R), MP (R)) ∼= (G(R), MΣG(R))
(Prop. 22(4))and by using the adjunction between measurable
spaces and quasi-Borel spaces (Prop. 15(1)). Directly, we
understand a morphism k: (X, MX) →P(R) as the kernel
k♯: X × ΣR →[0, 1] with k♯(x, U)
def
= µx(α-1
x (U)) whenever
k(x) = [αx, µx]. The deﬁnition of k♯does not depend on the
choice of αx, µx.
Now we can use the randomization lemma (Prop. 24) to ﬁnd
a measurable function fk♯: R × X →R such that k♯(x, U) =
υ{r | fk♯(r, x) ∈U}. In general, if a function Y × X →Z is
jointly measurable then it is also a morphism from the product
quasi-Borel space. So fk♯is a morphism, and we can form
(curryfk♯): R →RX. So,
q([curryfk♯, υ])(x) = [λr.curryfk♯(r)(x), υ]
= [λr.fk♯(r, x), υ] = k(x),
and q is surjective, as required.
Finally we show that M(P (R))X = {q ◦α | α ∈MP (RX)}.
We have (⊇) since q is a morphism, so it remains to show
(⊆). Consider β ∈M(P (R))X. We must show that β = q ◦α
for some α
∈
MP (RX). By Prop. 18, β
∈
M(P (R))X
means the uncurried function (uncurry β): R × X →P(R)
is a morphism. As above, this morphism corresponds to
a kernel (uncurry β)♯: (R × X) × ΣR →[0, 1]. The ran-
domization lemma (Prop. 24) gives a measurable function
fβ : R × (R × X) →R such that (uncurry β)♯((r, x), U) =
υ{s | fβ(s, (r, x)) ∈U}. By Prop. 15(1) and the fact that
the σ-algebra of a product quasi-Borel space R × (R × X)
includes the product σ-algebras ΣR ⊗ΣMR×X, this func-
tion fβ is also a morphism. Deﬁne γ : R →(RX)R by
γ = λr. λs. λx. fβ(s, (r, x)). This is a morphism since we
can interpret λ-calculus in a cartesian closed category. Deﬁne
α: R →P(RX) by α(r) = [γ(r), υ]; this function is
in MP (RX) by Lemma 27. A direct calculation now gives
β = q ◦α, as required.
VIII. DE FINETTI’S THEOREM
De Finetti’s theorem [8] is one of the foundational results in
Bayesian statistics. It says that every exchangeable sequence of
random observations on R or another well-behaved measurable
space can be modeled accurately by the following two-step
process: ﬁrst choose a probability measure on R randomly
(according to some distribution on probability measures) and
then generate a sequence with independent samples from this
measure. Limiting observations to values in a well-behaved
space like R in the theorem is important: Dubins and Freed-
man proved that the theorem fails for a general measurable
space [9].
In this section, we show that a version of de Finetti’s
theorem holds for all quasi-Borel spaces, not just R. Our
result does not contradict Dubins and Freedman’s obstruction;
probability measures on quasi-Borel spaces may only use R
as their source of randomness, whereas those on measurable
spaces are allowed to use any measurable space for the same
purpose. As we will show shortly, this careful choice of
random source lets us generalize key arguments in a proof
of de Finetti’s theorem [2] to quasi-Borel spaces.
Let (X, MX) be a quasi-Borel space and (Xn, MXn) the
product quasi-Borel space Qn
i=1 X for each positive integer
n. Recall that P(X) consists of equivalence classes [β, ν]
of probability measures (β, ν) on X. For n ≥1, deﬁne a
morphism iidn : P(X) →P(Xn) by
iidn([β, ν]) =

(Qn
i=1 β ◦ιn) ,
  ι-1
n

∗
Nn
i=1 ν

where ιn is a measurable isomorphism R →Qn
i=1 R, and
Nn
i=1 ν is the product measure formed by n copies of ν. The
name iidn represents ‘independent and identically distributed’.
Indeed, iidn transforms a probability measure (β, ν) on X
to the measure of the random sequence in Xn that indepen-
dently samples from (β, ν). The function iidn is a morphism
P(X) →P(Xn) because it can also be written in terms of
the strength of the monad P.
Write (Xω, MXω) for the countable product Q∞
i=1 X.
Deﬁnition 28. A probability measure (α, µ) on Xω is ex-
changeable if for all permutations π on positive integers,
[α, µ] = [απ, µ], where απ(r)i
def
= α(r)π(i) for all r and i.
Theorem 29 (Weak de Finetti for quasi-Borel spaces). If
(α, µ) is an exchangeable probability measure on Xω, then
there exists a probability measure (β, ν) in P(P(X)) such
that for all n ≥1, the measure ([β, ν] >>= iidn) on P(Xn)
equals P((−)1...n)(α, µ) when considered as a measure
on the product measurable space (Xn, Nn
i=1 ΣMX). (Here
(−)1...n : Xω →Xn is (x)1...n
def
= (x1, . . . , xn).)

In the theorem, (β, ν) represents a random variable that has
a probability measure on X as its value. The theorem says that
(every ﬁnite preﬁx of) a sample sequence from (α, µ) can
be generated by ﬁrst sampling a probability measure on X
according to (β, ν), then generating independent X-valued
samples from the measure, and ﬁnally forming a sequence
with these samples.
We call the theorem weak for two reasons. First, the σ-
algebra ΣMXn includes the product σ-algebra Nn
i=1 ΣMX,
but we do not know that they are equal; two different prob-
ability measures in P(Xn) may induce the same measure
on (Xn, Nn
i=1 ΣMX), although they always induce different
measures on (Xn, ΣMXn). In the theorem, we equate such
measures, which lets us use a standard technique for proving
the equality of measures on product σ-algebras. Second, we
are unable to construct a version of iidn for inﬁnite sequences,
i.e. a morphism P(X) →P(Xω) implementing the indepen-
dent identically-distributed random sequence. The theorem is
stated only for ﬁnite preﬁxes.
The rest of this section provides an overview of our proof
of Theorem 29. The starting point is to unpack deﬁnitions in
the theorem, especially those related to quasi-Borel spaces,
and to rewrite the statement of the theorem purely in terms of
standard measure-theoretic notions.
Lemma 30. Let (α, µ) be an exchangeable probability mea-
sure on Xω. Then, the conclusion of Theorem 29 holds if
and only if there exist a probability measure ξ ∈G(R), a
measurable function k: R →G(R), and γ ∈MX such that
for all n ≥1 and all U1, . . . , Un ∈ΣMX,
Z
r∈R
 n
Y
i=1
[α(r)i ∈Ui]
!
dµ
=
Z
r∈R
n
Y
i=1
Z
s∈R
[γ(s) ∈Ui] d(k(r))

dξ.
Here we express the domain of integration and the integrated
variable explicitly to avoid confusion.
Proof. Let (α, µ) be an exchangeable probability measure
on Xω. We unpack deﬁnitions in the conclusion of The-
orem 29. The ﬁrst deﬁnition to unpack is the notion of
probability measure in P(P(X)). Here are the crucial facts
that enable this unpacking. First, for every probability measure
(β, ν) on P(X), there exist a function γ : R →X in MX
and a measurable k: R →G(R) such that β(r) = [γ, k(r)]
for all r ∈R. Second, conversely, for a function γ ∈MX,
a measurable k: R →G(R), and a probability measure
ν ∈G(R), the function (λr. [γ, k(r)], ν) is a probability
measure in P(P(X)). Thus, we can look for (γ, k, ν) in the
conclusion of the theorem instead of (β, ν).
The second is the deﬁnition of [β, ν] >>= iidn. Using (γ, k, ν)
instead of (β, ν), we ﬁnd that [β, ν] >>= iidn is the measure
[(Qn
i=1 γ) ◦ιn, (ι-1
n)∗(ν >>= λr. Nn
i=1 k(r))].
Recall that two measures p and q on the product space
(Xn, Nn
i=1 X) are equivalent when p(U1 × · · · × Un) equals
q(U1 × · · · × Un) for all U1, . . . , Un ∈ΣMX. Thus we
must show that ((−)1...n ◦α)∗µ)(U1 × . . . × Un) is equal
to
 (Qn
i=1 γ)∗(ν >>= λr. Nn
i=1 k(r))

(U1 × . . . × Un). This
equation is equivalent to the one in the statement of the lemma
with ξ = ν.
Thus we just need to show how to construct ξ, k and γ
in Lemma 30 from a given exchangeable probability measure
(α, µ) on Xω. Constructing ξ and γ is easy:
ξ
def
= µ,
γ
def
= λr. α(r)1.
Note that these deﬁnitions type-check: ξ = µ ∈G(R), and
γ ∈MX because α ∈MXω and the ﬁrst projection (−)1 is a
morphism Xω →X.
Constructing k is not that easy. We need to use the fact
that µ is deﬁned over R, a standard Borel space. This fact
itself holds because all probability measures on quasi-Borel
spaces use R as their source of randomness. Deﬁne measurable
functions αe, αo : (R, ΣR) →(Xω, ΣMXω ) by
αe(r)i
def
= α(r)2i
(even),
αo(r)i
def
= α(r)2i−1
(odd).
Since µ is a probability measure on R, there exists a mea-
surable function k′ : (Xω, ΣMXω ) →(G(R), ΣG(R)), called
a conditional probability kernel, such that for all measurable
f : R →R and U ∈(αe)-1(ΣMXω ),
Z
r∈U
f(r) dµ =
Z
r∈U
Z
R
f d((k′ ◦αe)(r))

dµ.
(7)
Deﬁne k
def
= k′ ◦αe.
Our ξ, k and γ satisfy the requirement in Lemma 30
because of the following three properties, which follow from
exchangeability of (α, µ).
Lemma 31. For all n ≥1 and all U1, . . . , Un ∈ΣMX,
Z
r∈R
 n
Y
i=1
[α(r)i ∈Ui]
!
dµ =
Z
r∈R
 n
Y
i=1
[αo(r)i ∈Ui]
!
dµ.
Proof. Consider n ≥1 and U1, . . . , Un ∈ΣMX. Pick a
permutation π on positive integers such that π(i) = 2i −1
for all integers 1 ≤i ≤n. Then, [α, µ] = [απ, µ] by the
exchangeability of (α, µ). Thus
Z
r∈R
 n
Y
i=1
[α(r)i ∈Ui]
!
dµ =
Z
r∈R
 n
Y
i=1
[απ(r)i ∈Ui]
!
dµ,
from which the statement follows.
Lemma 32. For all U ∈ΣMX and all i, j ≥1,
Z
s∈R
[αo(s)i ∈U] d(k(r)) =
Z
s∈R
[αo(s)j ∈U] d(k(r))
holds for µ-almost all r ∈R.
Proof. Consider a measurable set U ∈ΣMX and i, j ≥1. The
function λr.
R
s∈R [αo(s)i ∈U] d(k(r)) : R →R is a condi-
tional expectation of the indicator function λs. [αo(s)i ∈U]
with respect to the probability measure µ and the σ-algebra

generated by the measurable function αe : R →(Xω, ΣMXω ).
By the almost-sure uniqueness of conditional expectation, it
sufﬁces to show that λr.
R
s∈R [αo(s)j ∈U] d(k(r)) is also a
conditional expectation of λs. [αo(s)i ∈U] with respect to µ
and αe. Pick a measurable subset V ∈ΣMXω . Then:
Z
r∈R
[αe(r) ∈V ] ·
Z
s∈R
[αo(s)j ∈U] d(k(r))

dµ
=
Z
r∈R
[αo(r)j ∈U ∧αe(r) ∈V ] dµ
=
Z
r∈R
[αo(r)i ∈U ∧αe(r) ∈V ] dµ.
The
ﬁrst
equation
holds
because
the
function
λr.
R
s∈R [αo(s)j ∈U] d(k(r)) is a conditional expectation
of λs. [αo(s)j ∈U] with respect to µ and αe. The second
equation follows from the exchangeability of (α, µ). We have
just shown that λr.
R
s∈R [αo(s)j ∈U] d(k(r)) is a conditional
expectation of λs. [αo(s)i ∈U] with respect to µ and αe.
Lemma 33. For all n ≥1 and all U1, . . . , Un ∈ΣMX,
Z
s∈R
 n
Y
i=1
[αo(s)i ∈Ui]
!
d(k(r))
=
n
Y
i=1
Z
s∈R
[αo(s)i ∈Ui] d(k(r))
holds for µ-almost all r ∈R.
Proof notes. Use induction on n ≥1. There is nothing to
prove for the base case n = 1. To handle the inductive case,
assume that n > 1. Let U1, . . . , Un be subsets in ΣMX. Deﬁne
a function α′ : R →Xω as follows:
α′(r)i =
 αo(r)i
if 1 ≤i ≤n −1
αe(r)i−n+1
otherwise.
Then, α′ is in MXω, so that α′ is a measurable function
(R, ΣR) →(Xω, ΣMXω ). Thus there exists a measurable
k′
0 : (Xω, ΣMXω ) →(G(R), ΣG(R)), the conditional probabil-
ity kernel, such that for all measurable functions f : R →R,
λr.
R
R f d((k′
0 ◦α′)(r)) is a conditional expectation of f
with respect to µ and the σ-algebra generated by α′. Deﬁne
k′ : R →G(R) = k′
0 ◦α′. Then k′ is measurable because so
are k′
0 and α′. More importantly, for µ-almost all r ∈R,
Z
s∈R
[αo(s)n ∈Un] d(k(r)) =
Z
s∈R
[αo(s)n ∈Un] d(k′(r)).
(8)
The proof of this equality appears in the full version of this
paper.
Recall that k = k0◦αe and k′ = k′
0◦α′ are deﬁned in terms
of conditional expectation. Thus, they inherit all the properties
of conditional expectation. In particular, for µ-almost all r ∈R
and all measurable h: R →R,
Z
s∈R
n
Y
i=1
[αo(s)i ∈Ui] d(k(r))
=
Z
s∈R
 Z
t∈R
n
Y
i=1
[αo(t)i ∈Ui] d(k′(s))
!
d(k(r)),
(9)
Z
s∈R
n
Y
i=1
[αo(s)i ∈Ui] d(k′(r))
=
n−1
Y
i=1
[αo(r)i ∈Ui] ·
Z
s∈R
[αo(s)n ∈Un] d(k′(r)),
(10)
Z
s∈R

h(s) ·
Z
t∈R
[αo(t)n ∈Un] d(k(s))

d(k(r))
=
Z
t∈R
[αo(t)n ∈Un] d(k(r))

·
Z
s∈R
h(s) d(k(r))

.
(11)
Using the assumption (8) and the properties (9), (10) and (11),
we complete the proof of the inductive case as follows: for all
subsets V ∈(αe)-1(ΣMXω ),
Z
r∈V
Z
s∈R
n
Y
i=1
[αo(s)i ∈Ui] d(k(r)) dµ
=
Z
r∈V
Z
s∈R
Z
t∈R
n
Y
i=1
[αo(t)i ∈Ui] d(k′(s)) d(k(r)) dµ
=
Z
r∈V
Z
s∈R
n−1
Y
i=1
[αo(s)i ∈Ui]
·
Z
t∈R
[αo(t)n ∈Un] d(k′(s)) d(k(r)) dµ
=
Z
r∈V
Z
s∈R
n−1
Y
i=1
[αo(s)i ∈Ui]
·
Z
t∈R
[αo(t)n ∈Un] d(k(s)) d(k(r)) dµ
=
Z
r∈V
Z
t∈R
[αo(t)n ∈Un] d(k(r))

·
 Z
s∈R
n−1
Y
i=1
[αo(s)i ∈Ui] d(k(r))
!
dµ
=
Z
r∈V
n
Y
i=1
Z
s∈R
[αo(s)i ∈Ui] d(k(r)) dµ.
The
ﬁrst
and
the
second
equalities
hold
because
of
(9)
and
(10).
The
third
equality
uses
(8),
and
the
fourth
the
equality
in
(11).
The
ﬁfth
follows
from
the
induction
hypothesis.
Our
derivation
implies
that
both
λr.
R
s∈R
Qn
i=1 [αo(s)i ∈Ui] d(k(r))
and
λr. Qn
i=1
R
s∈R [αo(s)i ∈Ui] d(k(r))
are
conditional
expectations of the same function with respect to µ and
the same σ-algebra. So, they are equal for µ-almost all
inputs r.
The following calculation combines these lemmas and
shows that ξ, k and γ satisfy the requirement in Lemma 30:
Z
r∈R
n
Y
i=1
[α(r)i ∈Ui] dµ
=
Z
r∈R
n
Y
i=1
[αo(r)i ∈Ui] dµ
Lem. 31

=
Z
r∈R
 Z
s∈R
n
Y
i=1
[αo(s)i ∈Ui] d(k(r))
!
dµ
Eq. (7)
=
Z
r∈R
n
Y
i=1
Z
s∈R
[αo(s)i ∈Ui] d(k(r))

dµ
Lem. 33
=
Z
r∈R
n
Y
i=1
Z
s∈R
[αo(s)1 ∈Ui] d(k(r))

dµ
Lem. 32
=
Z
r∈R
n
Y
i=1
Z
s∈R
[γ(s) ∈Ui] d(k(r))

dξ
Def. of γ, ξ.
This concludes our proof outline for Theorem 29.
IX. RELATED WORK
A. Quasi-topological spaces and categories of functors
Our development of a cartesian closed category from mea-
surable spaces mirrors the development of cartesian closed
categories of topological spaces over the years.
For example, quasi-Borel spaces are reminiscent of sub-
sequential spaces [20]: a set X together with a collection
of functions Q ⊆[N ∪{∞} →X] satisfying some condi-
tions. The functions in Q are thought of as convergent se-
quences. Another notion of generalized topological space is C-
space [38]: a set X together with a collection Q ⊆[2N →X]
of ‘probes’ satisfying some conditions; this is a variation on
Spanier’s early notion of quasi-topological space [33]. An-
other reminiscent notion in the context of differential geometry
is a diffeological space [3]: a set X together with a set
QU ⊆[U →X] of ‘plots’ for each open subset U of Rn
satisfying some conditions. These examples all form cartesian
closed categories.
A common pattern is that these spaces can be under-
stood as extensional (concrete) sheaves on an established
category of spaces. Let SMeas be the category of standard
Borel spaces and measurable functions. There is a functor
J : QBS →[SMeasop, Set]
with
 J(X, MX))(Y, ΣY
 def
=
QBS
 (Y, MΣY ), (X, MX)

, which is full and faithful by
Prop. 15(2). We can characterize those functors that arise in
this way.
Proposition 34. Let F : SMeasop →Set be a functor. The
following are equivalent:
• F is naturally isomorphic to J(X, MX), for some quasi-
Borel space (X, MX);
• F preserves countable products and F is extensional:
the functions i(X,ΣX) : F(X, ΣX) →Set(X, F(1)) are
injective, where (i(X,ΣX)(ξ))(x) = (F(⌜x⌝))(ξ), and we
consider x ∈X as a function ⌜x⌝: 1 →X.
There
are
similar
characterizations
of
subsequential
spaces [20], quasi-topological spaces [10] and diffeological
spaces [3]. Prop. 34 is an instance of a general pattern (e.g. [3],
[10]); but that is not to say that the deﬁnition of quasi-Borel
space (Def. 7) arises automatically. The method of extensional
presheaves also arises in other models of computation such
as ﬁniteness spaces [11] and realizability models [30]. This
work appears to be the ﬁrst application to probability theory,
although via Prop. 34 there are connections to Simpson’s
probability sheaves [32].
The characterization of Prop. 34 gives a canonical categor-
ical status to quasi-Borel spaces. It also connects with our
earlier work [34], which used the cartesian closed category
of countable-product-preserving functors in [SMeasop, Set].
Quasi-Borel spaces have several advantages over this functor
category. For one thing, they are more concrete, leading to
better intuitions for their constructions. For example, measures
in [34] are built abstractly from left Kan extensions, whereas
for quasi-Borel spaces they have a straightforward concrete
deﬁnition (Def. 10). For another thing, in contrast to the
functor category in [34], quasi-Borel spaces form a well-
pointed category: if two morphisms (X, MX) →(Y, MY ) are
different then they disagree on some point in X. From the
perspective of semantics of programming languages, where
terms in context Γ ⊢t : A are interpreted as morphisms
JtK: JΓK →JAK, well-pointedness is a crucial property. It says
that if two open terms are different, JtK ̸= JuK : JΓK →JAK,
then there is a ground context C : 1 →JΓK that distinguishes
them: JC[t]K ̸= JC[u]K : 1 →JAK.
Quasi-Borel spaces add objects to make the category of
measurable spaces cartesian closed. Another interesting future
direction is to add morphisms to make more objects isomor-
phic, and so ﬁnd a cartesian closed subcategory [35].
B. Domains and valuations
In this paper our starting point has been the standard
foundation for probability theory, based on σ-algebras and
probability measures. An alternative foundation for probability
is based on topologies and valuations. An advantage of our
starting point is that we can reference the canon of work
on probability theory. Having said this, an advantage to the
approach based on valuations is that it is related to domain
theoretic methods, which have already been used to give
semantics to programming languages.
Jones and Plotkin [21] showed that valuations form a monad
which is analogous to our probability monad. However, there is
considerable debate about which cartesian closed category this
monad should be based on (e.g. [22], [17]). For a discussion
of the concerns in the context of programming languages, see
e.g. [13]. One recent proposal is to use Girard’s probabilistic
coherence spaces [12]. Another is to use a topological domain
theory as a cartesian closed category for analysis and proba-
bility ([5], [27], [19]).
Concerns about probabilistic powerdomains have led instead
to domains of random variables (e.g. [25], [4], [31]). We
cannot yet connect formally with this work, but there are
many intuitive links. For example, our measures on quasi-
Borel spaces (Def. 10) are reminiscent of continuous random
variables on a dcpo.
An additional advantage of a domain theoretic approach is
that it naturally supports recursion. We are currently investi-
gating a notion of ‘ordered quasi-Borel space’, by enriching
Prop. 34 over dcpo’s.

C. Other related work
Our work is related to two recent semantic studies on
probabilistic programming languages. The ﬁrst is Borgstr¨om
et al.’s operational (not denotational as in this paper) seman-
tics for a higher-order probabilistic programming language
with continuous distributions [6], which has been used to
justify a basic inference algorithm for the language. Recently,
Culpepper and Cobb reﬁned this operational approach using
logical relations [7]. The second study is Freer and Roy’s
results on a computable variant of de Finetti’s theorem and its
implication on exchangeable random processes implemented
in higher-order probabilistic programming languages [14]. One
interesting future direction is to revisit the results about logical
relations and computability in these studies with quasi-Borel
spaces, and to see whether they can be extended to spaces
other than standard Borel spaces.
X. CONCLUSION
We have shown that quasi-Borel spaces (§III) support
higher-order functions (§IV) as well as spaces of probability
measures (§V). We have illustrated the power of this new for-
malism by giving a semantic analysis of Bayesian regression
(§VI), by rephrasing the randomization lemma as a quotient-
space construction (§VII), and by showing that it supports de
Finetti’s theorem (§VIII).
ACKNOWLEDGMENT
We thank Radha Jagadeesan and Dexter Kozen for en-
couraging us to think about a well-pointed cartesian closed
category for probability theory, Vincent Danos and Dan Roy
for nudging us to work on de Finetti’s theorem, Mike Mislove
for discussions of quasi-Borel spaces, and Martin Escard´o
for explaining C-spaces, and Alex Simpson for detailed re-
port with many suggestions. This research was supported
by a Royal Society Research Fellowship and EPSRC grants
EP/L002388/2 and EP/N007387/1, and also by Institute for
Information & communications Technology Promotion (IITP)
grant funded by the Korea government (MSIP) (No.R0190-16-
2011, Development of Vulnerability Discovery Technologies
for IoT Software Security).
REFERENCES
[1] R. J. Aumann, “Borel structures for function spaces,” Illinois Journal of
Mathematics, vol. 5, pp. 614–630, 1961.
[2] T. Austin, “Exchangeable random arrays,” 2013. [Online]. Available:
https://cims.nyu.edu/∼tim/ExchnotesforIISc.pdf
[3] J. C. Baez and A. E. Hoffnung, “Convenient categories of smooth
spaces,” Trans. Amer. Math. Soc., vol. 363, 2011.
[4] T. Barker, “A monad for randomized algorithms,” in Proc. MFPS, 2016,
pp. 47–62.
[5] I. Battenfeld, M. Schr¨oder, and A. Simpson, “A convenient category of
domains,” ser. ENTCS, vol. 172, 2007.
[6] J. Borgstr¨om, U. Dal Lago, A. D. Gordon, and M. Szymczak, “A
lambda-calculus foundation for universal probabilistic programming,”
in Proc. ICFP, 2016, pp. 33–46.
[7] R. Culpepper and A. Cobb, “Contextual equivalence for probabilis-
tic programs with continuous random variables and scoring,” in
Proc. ESOP, 2017.
[8] B. de Finetti, “La pr´evision : ses lois logiques, ses sources subjectives,”
Annales de l’institut Henri Poincar´e, vol. 7, 1937.
[9] L. E. Dubins and D. A. Freedman, “Exchangeable processes need not
be mixtures of independent, identically distributed random variables,”
Z. Angew. Math. Mech., vol. 48, 1979.
[10] E. J. Dubuc, “Concrete quasitopoi,” in Applications of sheaves, ser.
Lect. Notes Math.
Springer, 1977, vol. 753, pp. 239–254.
[11] T. Ehrhard, “On ﬁniteness spaces and extensional presheaves over the
Lawvere theory of polynomials,” J. Pure Appl. Algebra, 2007, to appear.
[12] T. Ehrhard, C. Tasson, and M. Pagani, “Probabilistic coherence spaces
are fully abstract for probabilistic PCF,” in POPL 2014.
[13] M. H. Escard´o, “Semi-decidability of may, must and probabilistic testing
in a higher-type setting,” in Proc. MFPS, 2009.
[14] C. E. Freer and D. M. Roy, “Computable de Finetti measures,” Ann.
Pure Appl. Logic, vol. 163, no. 5, pp. 530–546, 2012.
[15] M. Giry, “A categorical approach to probability theory,” in Categorical
Aspects of Topology and Analysis, 1982, pp. 68–85.
[16] N. Goodman, V. Mansinghka, D. M. Roy, K. Bonawitz, and J. B.
Tenenbaum, “Church: a language for generative models,” in UAI, 2008.
[17] J. Goubault-Larrecq, “ωQRB-domains and the probabilistic powerdo-
main,” in Proc. LICS, 2010, pp. 352–361.
[18] E. Hewitt and L. J. Savage, “Symmetric measures on cartesian products,”
Trans. Amer. Math. Soc, vol. 80, pp. 470–501, 1955.
[19] D. Huang and G. Morrisett, “An application of computable distributions
to the semantics of probabilistic programs: part 2.” [Online]. Available:
http://pps2017.soic.indiana.edu/ﬁles/2016/12/comp-dist-sem.pdf
[20] P. Johnstone, “On a topological topos,” Proc. London Math. Soc., vol. 3,
no. 38, pp. 237–271, 1979.
[21] C. Jones and G. D. Plotkin, “A probabilistic powerdomain of evalua-
tions,” in Proc. LICS, 1989, pp. 186–195.
[22] A. Jung and R. Tix, “The troublesome probabilistic powerdomain,” ser.
ENTCS, vol. 13, 1998, pp. 70–91.
[23] O. Kallenberg, Foundations of Modern Probability, 2nd ed.
Springer,
2002.
[24] V. K. Mansinghka, D. Selsam, and Y. N. Perov, “Venture: a higher-
order probabilistic programming platform with programmable infer-
ence,” arXiv:1404.0099, 2014.
[25] M. W. Mislove, “Anatomy of a domain of continuous random vari-
ables I,” Theor. Comput. Sci., vol. 546, pp. 176–187, 2014.
[26] E. Moggi, “Notions of computation and monads,” Inf. Comput., vol. 93,
no. 1, pp. 55–92, 1991.
[27] M. Pape and T. Streicher, “Computability in basic quantum mechanics,”
2016. [Online]. Available: https://arxiv.org/abs/1610.09209
[28] C. Preston, “Some notes on standard Borel and related spaces,” 2008.
[Online]. Available: https://arxiv.org/abs/0809.3066
[29] J. C. Reynolds, “Deﬁnitional interpreters for higher-order programming
languages,” in Proc. ACM Conference, 1972.
[30] G. Rosolini and T. Streicher, “Comparing models of higher type com-
putation,” ser. ENTCS, vol. 23, 1999.
[31] D. S. Scott, “Stochastic λ-calculi: An extended abstract,” J. Ap-
plied Logic, vol. 12, no. 3, pp. 369–376, 2014.
[32] A. Simpson, “Probability sheaves,” 2016, CIPPMI. [Online]. Available:
https://synapse.math.univ-toulouse.fr/index.php/s/QWrxKeXn31mN3gz
[33] E. Spanier, “Quasi-topologies,” Duke Math. J., pp. 1–14, 1963.
[34] S. Staton, H. Yang, C. Heunen, O. Kammar, and F. Wood, “Seman-
tics for probabilistic programming: higher-order functions, continuous
distributions, and soft constraints,” in LICS, 2016.
[35] N. E. Steenrod, “A convenient category of topological spaces,” Michigan
Mathematical Journal, vol. 14, pp. 133–152, 1967.
[36] R. Street, “The formal theory of monads,” J. Pure Appl. Algebra, vol. 2,
pp. 149–168, 1972.
[37] F. Wood, J. W. van de Meent, and V. Mansinghka, “A new approach to
probabilistic programming inference,” in Proc. AISTATS, 2014.
[38] C. Xu and M. Escard´o, “A constructive model of uniform continuity,”
in Proc. TLCA, 2013.

