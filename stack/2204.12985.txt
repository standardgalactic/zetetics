arXiv:2204.12985v3  [quant-ph]  10 Oct 2022
Submitted to:
QPL 2022
© G. de Felice & B. Coecke
This work is licensed under the
Creative Commons Attribution License.
Quantum Linear Optics via String Diagrams
Giovanni de Felice and Bob Coecke
Quantinuum – Quantum Compositional Intelligence
17 Beaumont street, OX1 2NA Oxford, UK
We establish a formal bridge between qubit-based and photonic quantum computing. We do this
by deﬁning a functor from the ZX calculus to linear optical circuits. In the process we provide a
compositional theory of quantum linear optics which allows to reason about events involving multiple
photons such as those required to perform linear-optical and fusion-based quantum computing.
1
Introduction
Quantum optics has pioneered experimental tests of entanglement [1], nonlocality [2], teleportation [3],
quantum-key distribution [4], and quantum advantage [5]. These experiments ultimately rely on the
ability to process coherent states of photons in linear optical devices, an intractable task for classical
computers [6]. Recently, the potential of using linear optics for quantum computing has encouraged the
development of both hardware [7] and software [8, 9] for photonic technologies. The ﬁrst proposal was
formulated by Knill, Laﬂamme and Millburn in 2001 [10]. Qubits are encoded in pairs of optical modes
and quantum computing may be performed using only linear optical elements and photon detectors.
Several improvements to the original scheme have been proposed in the literature [11, 12, 13]. Fusion
measurements were introduced by Browne and Rudolf [14]. They form the basic ingredient of a recent
proposal to achieve fault-tolerant quantum computation with photonic qubits [15].
String diagrams provide an intuitive language for quantum processes [16, 17, 18, 19, 20] and are
implicitly employed in quantum software packages such as tket [21], PyZX [22], lambeq [23], DisCoPy
[24], Quanhoven [25].
On the one hand, Coecke and Duncan [26] introduced the ZX calculus, a
graphical language for reasoning about qubit quantum computing, with applications in circuit-based [27],
measurement-based [28], and fault tolerant [29] quantum computing. The axioms of this calculus feature
a bialgebra structure governing the 푍and 푋qubit bases. On the other hand, Vicary and Fiore used the
symmetric (or bosonic) Fock space to study the quantum harmonic oscillator, and discovered a diﬀerent
bialgebra structure on this inﬁnite dimensional Hilbert space [30, 31]. These two foundational works
are hardly ever related in the literature, possibly because of the diﬀerence in state space cardinality.
However, it is well-known that photons in linear optics behave as quantum harmonic oscillators. Given
the developments in linear-optical quantum computing, a formal bridge should be established between
qubit-based and photonic QC. This would allow the construction of reliable software for compiling
quantum computations into photonic circuits.
In this paper, we provide such a bridge by deﬁning a functor from the ZX calculus to linear optics. In
the process, we unify several results on the structure and combinatorics of quantum optical experiments.
We start by studying the category of linear optical circuits, with their classical interpretation in terms
of matrices or weighted paths (Sections 2). We then use the work of Vicary [30] to derive a functorial
model for bosonic linear optics. Our ﬁrst contribution is an explicit proof that this model is equivalent to
the model based on matrix permanents of Aaronson and Arkhipov [6] (Section 3). Second, we introduce
a graphical calculus QPath which allows to compute the amplitudes of linear optical events involving
multiple photons, by rewriting diagrams to normal form (Section 4). Finally, we construct a functor from

2
Quantum Linear Optics via String Diagrams
the ZX calculus to QPath and use it to describe the basic protocols used in linear-optical and fusion-based
quantum computing (Section 5).
Related work
Graphical approaches of linear optics are widespread in the literature. Notable examples
are the matchgates introduced by Valiant [32], corresponding to fermionic linear optics [33], whose
amplitudes are computed by ﬁnding the perfect matchings of a graph. Graph-theoretic methods are
also widely used in bosonic linear optics [34, 35]. There are strong links between linear optics and
categorical logic. Blute et al. [36] studied Fock space as exponential modality for linear logic. The
fermionic version of the Fock space has been studied in [37], it forms the W core of the ZW calculus
introduced by Coecke, Kissinger and Hadzihasanovic [38, 39, 40]. More recently, there has been work
on a diagrammatic calculus for reasoning about polarising beam splitters for quantum control [41], an
informal essay describing bosonic linear optics with category theory [42], and a complete rewriting
system for the single photon semantics of linear optical circuits [43]. The ZX calculus has also been used
to describe the fault-tolerant aspects of fusion-based quantum computing [44].
2
Linear optical circuits
Linear optical circuits are generated by two basic physical gates. The beam splitter BS : 푎⊗푎→푎⊗푎
acts on a pair of optical modes, and may be implemented using prisms or half-silvered mirrors. The
phase shift S(훼) : 푎→푎acts on a single mode and has a single parameter 훼∈[0,2휋]. We depict them:
,
훼
Linear optical circuits are obtained from these gates by composing them vertically and horizontally. They
form a set LO, which has the structure of a free monoidal category, i.e. circuits can be composed in
sequence or in parallel.
Deﬁnition 2.1. The classical interpretation of LO is given by a monoidal functor U : LO →Mat⊕into
the category of matrices over the complex numbers, where ⊕is the direct sum of vector spaces. On
objects U is deﬁned by U(푎) = C. On arrows we have:
U(S(훼)) = (푒푖훼)
U(BS) = 1
√
2
푖
1
1
푖

where we use one standard interpretation of the beam splitter [45].
The Mach-Zehnder interferometer is obtained as the following composition:
=
2훼
훽
The classical interpretation of this diagram is then given by:
MZI(훼, 훽) = 푖푒푖훼
−푒푖훽sin(훼)
cos(훼)
푒푖훽cos(훼)
sin(훼)


G. de Felice & B. Coecke
3
MZIs may be used to parametrize any unitary map on 푚modes. They are the basic building blocks
of integrated nanophotonic circuits currently being produced [7]. The ﬁrst architecture for a universal
multiport interferometer was proposed by Reck et al. [46] and consists of a mesh of MZIs. It was later
simpliﬁed by Clements et al. into a grid-like architecture, reducing the depth from 푑= 2푚−3 to 푑= 푚
and thus the probability of photon loss [47].
Reck et al.
Clements et al.
Using one of these architectures, we have a parametrized circuit 푐(휃) : 푚→푚∈LO, where the parameters
휃correspond to phases 훼, 훽of the Mach-Zehnder interferometers making up the chip. As shown in
both[46] and [47], for any unitary 푈: C푚→C푚, there is a conﬁguration of parameters 휃such that
U(푐(휃)) = 푈. We may restate their results in our notation.
Proposition 2.1 (Universality). [46, 47] For any 푚× 푚unitary 푈, there is a circuit 푐: 푚→푚in LO
such that U(푐) = 푈.
In classical light experiments, we can measure the energy or intensity of an electromagnetic wave
퐸= 퐸0푒푖(푘푥−휔푡) where 푘is the wavenumber, 휔is the angular frequency and 퐸0 is called the amplitude
[48]. The intensity is then given by the quadratic quantity 퐼= 푐
2휖0퐸2
0 where 휖0 is the permittivity of free
space and 푐is the speed of light. The intensity is thus proportional to the Born rule 퐼∝∥퐸∥2. Using the
Born rule and the classical interpretation of LO, we may compute the output distribution of a photonic
chip 푐∈LO with 푚spatial modes, when the input is a classical or incoherent beam of light. Suppose the
input intensities of light are 퐼∈R푚. One may assume Í푚
푖=1 퐼푖= 1. Then the intensities 퐽at the output of
an interferometer 푐∈LO are given by:
퐽= ∥U(푐)∥2퐼
where juxtaposition denotes matrix multiplication and the norm squared ∥.∥2 is applied entry-wise. Note
that ∥U(푐)∥2 is a doubly stochastic matrix since U(푐) is unitary.
Example 2.1 (Classical light). The intensities at the output of the beam splitter BS on any normalised
input 퐼are 퐽= ( 1
2, 1
2) since:
∥BS∥2 =
 1
2
1
2
1
2
1
2

The Mach-Zehnder interferometer yields the following stochastic matrix:
∥MZI(훼, 훽)∥2 =
sin(훼)2
cos(훼)2
cos(훼)2
sin(훼)2

The reﬂection and transmission coeﬃcients for light intensities are given by 푅= sin(훼)2 and푇= sin(훼)2
with 푅+푇= 1. Thus, if we input a beam of incoherent light on the left leg 퐼= (1,0), we will observe the
distribution 퐽= (푅,푇) in the output.
We have seen that linear optical circuits have a classical interpretation as complex-valued matrices.
We now give a graph-theoretic interpretation of these circuits, using a syntactic category for counting
paths. The classical Path calculus has the following generators:
,
푟
,
,
,
,
(1)

4
Quantum Linear Optics via String Diagrams
denoted respectively 훿, 휖, 휇, 휂, 휎and 푟. Path diagrams are obtained by composing these generators
horizontally or vertically. Two Path diagrams are equal if we can rewrite from one to the other using the
rules deﬁned in Figure (1).
=
푥
=
푦
푥+ 푦
푥
=
푦
푥· 푦
푥
=
푥
푥
,
=
푦
푦
푦
,
=
=
=
=
=
,
=
=
푥
=
푥
,
Bialgebra
(Co)unit
Additive law
Multiplicative law
Homomorphisms
=
=
,
=
,
=
(Co)copy
(Co)associativity
(Co)commutativity
=
.
,
,
,
,
,
,
,
,
,
,
,
0
=
1
=
Figure 1: Axioms of the Path calculus
In categorical terms, we may deﬁne Path as the PROP generated by a bialgebra (훿,휖, 휇,휂) together
with endomorphisms 푟: 1 →1 with a semiring structure 푟∈S. Throughout this paper we ﬁx S = C
although our main results can be generalised to any semiring. This calculus is folklore in category theory
and was ﬁrst studied by Pirashvili [49]. Bonchi, Sobocinski and Zanasi used it to model signal ﬂow

G. de Felice & B. Coecke
5
graphs [50]. We can interpret Path in the monoidal category of matrices with direct sum.
Proposition 2.2. There is a monoidal functor C : Path →Mat⊕.
Proof. C is given on objects by C(푎) = 1 and on the generators (1) by:
C(훿) =
1
1

,
C(휖) = () ,
C(휇) =  1
1 ,
C(휂) = () ,
C(푟) =  푟 ,
C(휎) =
0
1
1
0

.
where C(휖) = () : 1 →0 and 퐶(휂) = () : 0 →1 are the unique morphisms of that type in Mat⊕. It is easy
to check that all the relations in Figure 1 are satisﬁed by C.
□
Moreover, there is a functor turning linear optical gates into Path diagrams, representing their
underlying matrix:
↦→
푒푖훼
훼
↦→
−→
LO
Path
퐹:
1
√
2
푖√
2
푖√
2
1
√
2
Proposition 2.3. The classical interpretation of linear optics factors through the Path calculus, i.e. the
functor 퐹: LO →Path deﬁned above satisﬁes U = C ◦퐹.
The rewrite rules of Path allow to reduce any diagram to a normal form, which carries the same data
as a weighted bipartite graph. This normal form can be reached by the following (pseudo) algorithm:
1. remove all possible instances of 휂: 0 →1 and 휖: 1 →0 by using the (co)unit and (co)copy laws
repeatedly.
2. apply the bialgebra law, together with homomorphism and multiplicative laws, until all instances
of the comonoid 훿precede all instances of the monoid 휇,
3. apply the additive rule to contract parallel edges.
As an example, the following equation holds in Path, the normal form procedure going from left to right.
=
where the thick wires carry the endomorphism 2 : 1 →1. Computation of the weights on the resulting
graph is equivalent to the block-diagonal matrix multiplication deﬁned by C. This is stated formally as
the following result.
Proposition 2.4 (Completeness). The axioms of Path are complete for Mat⊕, i.e. C : Path →Mat⊕is
a monoidal equivalence.
Proof. The normalisation procedure is described above, see also [50, Proposition 1].
□

6
Quantum Linear Optics via String Diagrams
3
Fock space and permanents
Processing bosonic particles, such as photons, with linear optical devices gives rise to statistics that are
hard to simulate classically [6]. In this section we give an interpretation of linear optical circuits, derived
from [30], in terms of free and symmetric Fock space functors F ,B : Mat⊕→Vect⊗. We show that this
characterisation is equivalent to the model introduced in [6].
Consider a box containing particles. Assume that the space of states of a single particle is given by a
Hilbert space 퐻. The free Fock space is deﬁned as follows:
F (퐻) =
∞
Ê
푛=0
퐻⊗푛
where ⊗is the usual tensor product and ⊕the direct sum. F (퐻) describes the state space of a given
number of distinguishable particles indexed by 푛. Given a basis 푋of modes such that 퐻= C푋, we have
that:
F (C푋) ≃푙2(푋∗)
where C푋denotes the free vector space space with basis 푋, 푋∗is the set of lists over 푋and 푙2 is
the canonical Hilbert space construction deﬁned in [51]. Thus for 푛particles in 푚modes we have
F푛(C푚) = (C푚) ⊗푛≃C([푚]푛) the basis states [푚]푛are given by lists of length 푛using 푚distinct
symbols.
Proposition 3.1. The free Fock space can be extended to a functor F : Mat⊕→Vect⊗deﬁned on the
푛-particle sector by F푛(퐴) = 퐴⊗푛for matrices 퐴.
Proof. This follows by functoriality of tensor ⊗and biproduct ⊕.
□
Now suppose that the particles in the box are indistinguishable. The state space of the system will
then be described by the symmetric or bosonic Fock space, deﬁned as follows:
B(퐻) =
∞
Ê
푛=0
퐻ˆ⊗푛
where ˆ⊗is the quotient of the tensor product by the equivalence relation 푥ˆ⊗푦= 푦ˆ⊗푥, which ensures that
the bosons are indistinguishable. One may show that B(C푋) ≃푙2(N푋), i.e. the bosonic Fock space
over a set of modes 푋is spanned by the basis states of occupation numbers. The 푛-particle sector of the
bosonic Fock space B푛(퐻) is the 푛-th component in the direct sum above. When 퐻= C푚has dimension
푚, we have 푛indistinguishable particles in 푚possible modes. The basis states of B푛(퐻) are given by:
Φ푚,푛= { (푠1,...,푠푚) |
푚
Õ
푖=1
푠푖= 푛, 푠푖∈N} ⊆N푚
Note that |Φ푚,푛| =  푚+푛−1
푛
 and B푛(퐻) = 퐻ˆ⊗푛= C(Φ푚,푛). Let us compare the basis states for distin-
guishable and bosonic particles. There is a family of linear maps 훼퐻: F (퐻) →B(퐻) deﬁned on the
basis states of the 푛-particle sector 푋∈[푚]푛by:
훼(푋) =
s
푛!
Î푚
푗=1 푎(푋) 푗
|푎(푋)⟩

G. de Felice & B. Coecke
7
where 푎: [푚]푛→Φ푚,푛is deﬁned by 푎(푋) 푗= |{푖|푋푖= 푗}| for 푗∈[푚]. Note that the normalisation factor
is equal to the size of the pre-image 푎−1(푎(푋)). Let us write the map 훼† explicitly:
훼† |퐼⟩=
r
푁퐼
푛!
Õ
푋∈푎−1(퐼)
|푋⟩
where 푁퐼= Î푚
푗=1 퐼푗!. We can now use 훼to deﬁne the action of B on arrows.
Proposition 3.2. [30] The bosonic Fock space can be extended to a strong monoidal functor B : Mat⊕→
Vect⊗deﬁned on arrows 퐴: 푚→푘by:
B푛(퐴) = 퐴ˆ⊗푛= 훼퐴⊗푛훼†
and satisfying B(퐴⊕퐵) = B(퐴) ⊗B(퐵).
Proof. Functoriality of composition follows from naturality of 훼†훼[30, Lemma 6.6]. B is moreover
strong monoidal:
B(C푋⊕C푌) ≃B(C(푋+푌)) ≃푙2(N푋+푌) ≃푙2(N푋×N푌) ≃B(C푋) ⊗B(C푌)
□
We can use the bosonic Fock space to deﬁne a functorial model for linear optics.
Deﬁnition 3.1 (Functorial model). The functorial interpretation of linear optics is given by the compo-
sition B : LO
U
−−→Mat⊕
B−→Vect⊗. Given a chip 푐: 푚→푚∈LO, the probability of observing output
state 퐽∈Φ푚,푛on input 퐼∈Φ푚,푛is given by:
푃B
푐(퐽|퐼) = ∥⟨퐽| B(푐) |퐼⟩∥2 =
⟨퐽| 훼U(푐) ⊗푛훼† |퐼⟩
2
Aaronson and Arkhipov [6] introduced a formal model for linear optics based on matrix permanents.
Deﬁnition 3.2 (Permanent model [6]). Given a chip 푐: 푚→푚∈LO, the probability of observing output
state 퐽∈Φ푚,푛on input 퐼∈Φ푚,푛is given by:
푃푐(퐽|퐼) =
1
푁퐼푁퐽
Perm(U(푐)퐼,퐽)
2
where 푁푆= Î푚
푗=1 푆푗!, Perm denotes the matrix permanent, and 푈퐼,퐽is the 푛×푛matrix obtained from an
푚× 푚matrix 푈as follows. We ﬁrst construct the 푚×푛matrix 푈퐽by taking 퐽푗copies of the 푗th column
of 푈for each 푗≤푚. Then we construct 푈퐼,퐽by taking 퐼푖copies of the 푖th row of 푈퐽.
We give an explicit proof that the models introduced above are equivalent, although the argument can
be traced back to Fock [52].
Theorem 3.1. The functorial model of linear optics is equivalent to the permanent model. Explicitly, for
any 푚× 푚unitary 푈and basis states 퐼,퐽∈Φ푚,푛
⟨퐽| B(푈) |퐼⟩= Perm(푈퐼,퐽)
√푁퐼푁퐽

8
Quantum Linear Optics via String Diagrams
Proof. We start by expanding the left-hand side:
⟨퐽| B(푈) |퐼⟩= ⟨퐽|푈ˆ⊗푛|퐼⟩= ⟨퐽| 훼푈⊗푛훼† |퐼⟩= (훼† |퐽⟩)†푈⊗푛(훼† |퐼⟩)
= ©­
«
r
푁퐽
푛!
Õ
푌∈푎−1(퐽)
⟨푌|ª®
¬
푈⊗푛©­
«
r
푁퐼
푛!
Õ
푋∈푎−1(퐼)
|푋⟩ª®
¬
=
√푁퐽푁퐼
푛!
푎−1(퐼)

Õ
푌∈푎−1(퐽)
⟨푌|푈⊗푛 ˆ푋

=
√푁퐽푁퐼
푛!
푛!
푁퐼
1
푁퐽
Õ
휎∈푆푛
푛
Ö
푖=1
푈ˆ푋푖, ˆ푌휎(푖)
=
1
√푁퐼푁퐽
Perm(푈퐼,퐽)
where ˆ푋∈푎−1(퐼) and ˆ푌∈푎−1(퐽) are any chosen representatives. Note that this choice is irrelevant since
we sum over all permutations, and so in particular we can set (푈퐼,퐽)푖푗= 푈ˆ푋푖, ˆ푌푗, yielding the last step.
□
Example 3.1 (Hong-Ou-Mandel). Consider the matrix of the beam splitter:
푈= 1
√
2
푖
1
1
푖

Suppose we input one bosonin eachport 퐼= (1,1). There are three possible outcomes 퐽= (2,0), (1,1), (0,2).
We may determine the amplitudes of the diﬀerent outcomes by computing permanents:
Perm
푖
푖
1
1

= 2푖
Perm
푖
1
1
푖

= 0
Perm
1
1
푖
푖

= 2푖
The component for outcome (1,1) is 0. We deduce that the probability of observing one boson in each
output port is 0. Thus interference ensures that the bosons bunch together at the output of the device, a
phenomenon known as the Hong-Ou-Mandel eﬀect.
4
Quantum paths and matchings
In the previous section we have shown that bosonic linear optics can be formulated equivalently in terms
of Fock space and permanents. Aaronson and Arkhipov [6] used the second deﬁnition to show that
sampling from a linear optical chip with bosonic particles is classically hard: if a classical computer can
compute an additive approximation of matrix permanents then the polynomial hierarchy collapses. While
this computational deﬁnition is useful for proving complexity results, we want to develop a diagrammatic
syntax for programming linear optical circuits. We do this by developing a quantised calculus QPath
which allows us to compute the amplitudes of linear optical events involving multiple photons, using
simple rewrite rules. In order to quantise the Path calculus, we add creation and annihilation of particles
as generators.
QPath = Path+

,
|푛⟩
|푛⟩
푛∈N+
This yields a free monoidal category where we can represent linear optical processes with state prepa-
rations (creation) and post-selection (annihilation).
Before developing a calculus around the QPath

G. de Felice & B. Coecke
9
generators, the ﬁrst thing to note is that QPath is equivalent to Path if we interpret it classically, i.e.
functors QPath →Mat⊕are in bĳective correspondence with functors Path →Mat⊕. In fact, black and
white nodes are necessarily equal in Mat⊕, since the unit 0 is both a terminal and an initial object. In
order to interpret black nodes, representing modes occupied by photons, we need to use the bosonic Fock
space functor.
The quantum interpretation B : QPath →Hilb⊗is obtained on the Path generators (1) by composing
C : Path →Mat⊕with the bosonic Fock space functor B : Mat⊕→Hilb⊗. The generating object 푎of
QPath is mapped to the free Hilbert space 푙2(N). The comonoid 훿: 1 →2 is mapped as follows:
↦→
B(훿) : |푛⟩
↦→
푛
Õ
푘=0
푛
푘
 1
2
|푘⟩|푛−푘⟩,
while the monoid 휇is mapped to the dagger B(휇) = B(훿)†.
White nodes are mapped to |0⟩, ⟨0|,
indicating that the mode is empty. Endomorphisms 푟: 1 →1 in QPath are interpreted as follows:
푟
↦→
B(푟) : |푛⟩
↦→
푟푛|푛⟩
Finally, the black nodes in QPath are mapped respectively to |푛⟩and ⟨푛|, indicating that the mode is
occupied by 푛particles. Hadzihasanovic [40] showed directly that (휇, |0⟩,훿, ⟨0|) forms a bialgebra. In
fact all the axioms that hold in the classical interpretation C also hold in the bosonic interpretation B
since it is deﬁned by functor-composition. However, black nodes allow to express some processes which
were not available in the classical semantics, as we will see below.
The axioms of QPath include all the axioms of Path, given in Figure 1. The only additional rules
we will need to reason with black nodes are the following:
=
+
=
+
,
Branching
= 0
= 푟
,
푟
Scalar
=
Normalisation
Bone
,
... 푛
=
|푛⟩
=
...
푛
|푛⟩
.
√
푛!
√
푛!
,
,
Figure 2: Additional axioms for the QPath calculus
It is easy to show that the axioms above are sound for the bosonic interpretation B.
Example 4.1 (Creation/Annihilation). The creation and annihilation operators on single modes have the
following representation as QPath diagrams.
,
Creation
Annihilation

10
Quantum Linear Optics via String Diagrams
We recover the commuting relations for these operators using the branching law:
=
=
+
=
+
Example 4.2 (Hong-Ou-Mandel). We compute the amplitude of the beam splitter BS on input/output
퐼= (1,1) = 퐽:
푖
푖
=
+
푖
푖
=
= 0
−1+1
and we recover the zero amplitude for this event.
We interpret a closed diagram 푑: 0 →0 ∈QPath as an event where particle creations are matched to
particle annihilations. Given a linear optical circuit 푐: 푚→푚∈LO together with a pair of states 퐼,퐽∈
Φ푚,푛of occupation numbers, we may construct a closed diagram 푑= ⟨퐽| 퐹(푐) |퐼⟩∈QPath, corresponding
to the event that we observe output 퐽when we input 퐼in a chip 푐. Using only the Path axioms together
with the normalisation rule, we can rewrite 푑as in the following example.
=
푐
푏
푎
푎
|2⟩
|2⟩
=
|2⟩
|2⟩
푐
푏
=
=
푎
|2⟩
|2⟩
푏푎+ 푐
푎
푏푎+ 푐
푏푎+ 푐
푎
|2⟩
|2⟩
푐
푏푎
1
2
where we use the following syntactic sugar:
:=
:=
,
. At the end of the rewriting
process, we obtain a weighted bipartite graph. Let us denote this graph by 퐺푑= (푁, 퐸) where 푁is the
set of nodes and 퐸⊆푁2 is the set of edges, together with 푤: 퐸→C an assignment of complex weights
to every edge. Note that 퐺is an undirected graph, i.e. (푖, 푗) ∈퐸=⇒( 푗,푖) ∈퐸.
Proposition 4.1 (Normal form). Any closed diagram 푑∈QPath can be reduced to a pair (퐺푑, 푁푑),
where 퐺푑is weighted bipartite graph and 푁푑is a normalisation factor, using the axioms in Figure 1 and
the normalisation law.
Proof. The normal form procedure exempliﬁed above is the same as for Path, with the addition of the
use of the normalisation law which determines 푁푑.
□
Once 푑∈QPath has been reduced to a weighted bipartite graph, we may further reduce it down to a
scalar value by using the branching and scalar laws. Most terms obtained by branching will cancel out
because of the ﬁrst scalar law. The remaining terms are found to be in one-to-one correspondence with
the perfect matchings of 퐺푑. Recall that a matching for a graph 퐺is a subset of the edges 푀⊆퐸such
that no node is contained in two edges of 푀. A perfect matching is a matching 푀such that every node
is contained in an edge of 푀.

G. de Felice & B. Coecke
11
Theorem 4.1 (Matchings). For closed diagrams 푑: 0 →0 ∈QPath, the rewrite rules of QPath are
complete for the bosonic intepretation B : QPath →Hilb⊗, which moreover satisﬁes:
B(푑) = 푁푑
Õ
푀
Ö
푒∈푀
푤푒
(2)
where 푀ranges over the perfect matchings of the graph 퐺푑.
Proof. We need to show that if two closed diagrams 푑,푑′ have the same intepretation B(푑) = B(푑′) ∈C,
then we can rewrite from 푑to 푑′ using the axioms of QPath. To see this, note that for any closed
diagram 푑, the branching law turns the graph 퐺푑into a sum of 푛푛terms, where 푛is the number of
photon preparations. We can cancel most of these terms using the “bone” law, which leaves us with 푛!
terms corresponding to the perfect matchings of 퐺푑: each photon preparation is matched to a photon
annihilation. Finally we reduce each of the terms to a complex value using the scalar law. It is a standard
result in graph theory that the sum of weights of perfect matchings of a graph is equal to the permanent
of its adjacency matrix, yielding (2). Therefore we can use the axioms of QPath to reduce both 푑and
푑′ to the same scalar value in C. Since all the rules of QPath are invertible we can rewrite from 푑to 푑′,
yielding completeness. We do not currently know if the rules are complete also for “open” diagrams.
□
Example 4.3. For a generic event 푑with three photons in QPath, the normal form procedure gives us a
weighted bipartite graph 퐺푑with input and output of size 3, or equivalently we have a 3× 3 adjacency
matrix of weights. Using the branching law, we reduce the diagram to the following sum:
=
+
+
+
+
+
equivalently, we have just split the graph into its perfect matchings. Now we use the scalar laws to reduce
each term to a complex number. Equivalently, we multiply the weights assigned to the edges on each
matching. Finally we sum those terms to obtain the amplitude. Equivalently, we have computed the
permanent of the adjacency matrix of 퐺푑.
5
Linear-optical quantum computing
Our aim in this section is to describe how linear optics is used for qubit quantum computation. We will
do this by giving a complete mapping from the ZX calculus to QPath. We start by introducing the
ZX calculus on qubits. The dual-rail encoding allows to encode a logical qubit as a photon in a pair of
spatial modes. We show how all single qubit unitaries may be applied using simple linear optical devices.
We describe fusion measurements as diagrams in QPath and show how they can be used, along with
polarising beam splitters, to construct Bell states and more general cluster states.
ZX calculus.
The ZX calculus is a graphical language for reasoning about qubit quantum computation.
It has strong links with both circuit-based and measurement-based models of quantum computing [28].
The ZX calculus is generated by the following basic operations:
ZX generators
,
,
,
,
훼
,

12
Quantum Linear Optics via String Diagrams
We will also use the following syntactic sugar for 푋states and phases:
훼
훼
:=
,
:=
In this section we are not really interested in the rewrite rules for ZX diagrams, rather in their interpretation
as linear maps between qubits. We will give this interpretation as we map each ZX generator to post-
selected optical circuits in QPath, and refer to [53, 20] for more in-depth discussions.
Dual rail qubits.
The dual-rail encoding can be thought of as a translation between polarized and
spatial modes of photons. The polarization states of a single photon are spanned by the basis states
|퐻⟩, |푉⟩for horizontal and vertical polarization, and thus naturally form a qubit. The dual-rail encoding
consists in encoding a polarised mode of light as a pair of spatial modes in LO under the mapping
|퐻⟩↦→|0,1⟩, |푉⟩↦→|1,0⟩.
The 푍basis of a dual rail qubit may be expressed as a pair of QPath
diagrams:
,
{ |퐻⟩, |푉⟩}
,
휋
The 푍and 푋eﬀects correspond to the following diagrams:
{⟨퐻| , ⟨퐻| + ⟨푉|}
,
,
The 푍eﬀect may be implemented by post-selecting a photon detector, the 푋eﬀect by precomposition
with a beam splitter. 푍phases on dual-rail qubits are obtained as follows:
훼
푒푖훼
|퐻⟩↦→|퐻⟩
|푉⟩↦→푒푖훼|푉⟩
The rotations from the 푍basis to the 푋and푌bases are given by the beam splitters BS퐻and BS respectively,
deﬁned as follows:
|퐻⟩↦→|퐻⟩+ |푉⟩
|푉⟩↦→|퐻⟩−|푉⟩
퐻
=
|퐻⟩↦→푖|퐻⟩+ |푉⟩
|푉⟩↦→|퐻⟩+푖|푉⟩
=
휋
2
where we use the following syntactic sugar:
:=
−1
:=
푖
,
. We give the
encoding up to scalar factor which does not aﬀect the logic of the mapping. For example, the hadamard
gate is technically
1
√
2BS퐻. In conjunction with 푍phases, we can use it to obtain all single qubit unitaries
in dual rail encoding.
Example 5.1 (HOM). Using the beam splitters above, we obtain two versions of the Hong-Ou-Mandel
eﬀect which are depicted graphically as follows:
=
0
=

G. de Felice & B. Coecke
13
Fusion measurements.
Fusion measurements are Bell measurements on dual-rail qubits. They corre-
spond to the linear map: |퐻,퐻⟩↦→|퐻⟩, |푉,푉⟩↦→|푉⟩, |퐻,푉⟩, |푉,퐻⟩↦→0, which is denoted as a green
spider with two inputs and one output in ZX, and is obtained on dual-rail qubits as the following diagram
in QPath.
|퐻,퐻⟩↦→|퐻⟩
|푉,푉⟩↦→|푉⟩
To see that this measures the Bell basis, note that there must be exactly one photon in the two middle
modes. The input basis state in dual-rail encoding are { |0101⟩, |0110⟩, |1010⟩, |1001⟩} and this condition
is satisﬁed only by |1010⟩and |0101⟩which correspond respectively to |퐻,퐻⟩and |푉,푉⟩.
Bell states.
We engineer a representation of dual-rail bell states as QPath diagrams.
|퐻,퐻⟩+ |푉,푉⟩
We can check that this diagram corresponds to the bell state |퐻,퐻⟩+ |푉,푉⟩by branching:
+
+
+
+
+
and using the Hong-Ou-Mandel eﬀect (Example 5.1). Similarly, the Bell state |퐻퐻⟩−|푉푉⟩may be
represented using blue edes as follows:
휋
|퐻,퐻⟩−|푉,푉⟩
and we can check this using branching and HOM:
+
+
+
+
+
Note that there may be diﬀerent equivalent representations of Bell states.
Polarising beam splitters.
On bulk optics, the polarization states of photons can be acted upon using
wave plates, polarizing beam splitters (PBSs) and photon counting measurements. Wave plates are simply
푋phase rotations, represented as red nodes in ZX. The PBS admits no description in ZX. It does however
have a simple interpretation in LO:
|퐻,퐻⟩↦→|퐻,퐻⟩
|퐻,푉⟩↦→|퐻푉,0⟩
|푉,푉⟩↦→|푉,푉⟩
|푉,퐻⟩↦→|0,퐻푉⟩

14
Quantum Linear Optics via String Diagrams
In combination with 푋states and eﬀects, polarising beam splitters can be used to perform post-selected
fusion measurements and their transpose:
⟨퐻,퐻| + ⟨푉,푉|
+ |퐻푉,0⟩+ |0,퐻푉⟩
=
=
|푉,퐻⟩+ |퐻,푉⟩
+ ⟨퐻푉,0| + ⟨0,퐻푉|
As an application, the linear-optical protocol for generating Bell states demonstrated in [13] may be
described as a diagram using PBSs and ZX primitives:
↦→
=
−휋
2
휋
2
†
We recover the diagram for the Bell state by reducing to normal form.
Spiders.
The only missing ZX generator, which we need for a complete mapping ZX →QPath, is the
푍copy spider. We may readily deduce its representation using a known equality in ZX:
|퐻⟩↦→|퐻,퐻⟩
|푉⟩↦→|푉,푉⟩
=
Similarly, we may turn the input leg into an output using a second Bell state. This yields a protocol
for generating the dual-rail GHZ state using ﬁve ancillary photons.
Note that the mapping is in no
way unique, and we may obtain several equivalent protocols by further twisiting the spider above. This
however increases the number of ancillary photons needed. As ﬁrst shown in [14], any cluster state can
be obtained by performing additional fusion measurements.
Outlook
The theory in this paper is being implemented in DisCoPy [24], the Python library for monoidal categories.
DisCoPy already has a number of tools for qubit quantum computing, including interfaces with tket [21],
PyZX [22] and high-performance libraries for classical simulation.
DisCoPy functors will allow to
compile qubit circuits and cluster states into linear optical circuits for eﬃcient simulation with Perceval
[9] and future interfaces with photonic devices.

G. de Felice & B. Coecke
15
Acknowledgements
The authors would like to thank Richie Yeung, Harny Wang, Douglas Brown, Alex Cowtan and Anna
Pearson also from Quantinuum in Oxford, Alexis Toumi in Paris, Amar Hazihasanovic in Estonia, Lee
Rozema and Iris Agresti in Vienna and Terry Rudolph from PsiQuantum in California, for the many
conversations on optics which led to this manuscript and the ones to come.
References
[1] C. S. Wu and I. Shaknov. The Angular Correlation of Scattered Annihilation Radiation. Physical Review,
77(1):136–136, January 1950.
[2] Alain Aspect, Jean Dalibard, and Gérard Roger. Experimental Test of Bell’s Inequalities Using Time-Varying
Analyzers. Physical Review Letters, 49(25):1804–1807, December 1982.
[3] D. Boschi, S. Branca, F. De Martini, L. Hardy, and S. Popescu. Experimental Realization of Teleporting an
Unknown Pure Quantum State via Dual Classical and Einstein-Podolsky-Rosen Channels. Physical Review
Letters, 80(6):1121–1125, February 1998.
[4] A. R. Dixon, Z. L. Yuan, J. F. Dynes, A. W. Sharpe, and A. J. Shields. Gigahertz decoy quantum key
distribution with 1 Mbit/s secure key rate. Optics Express, 16(23):18790–18797, November 2008.
[5] Han-Sen Zhong, Hui Wang, Yu-Hao Deng, Ming-Cheng Chen, Li-Chao Peng, Yi-Han Luo, Jian Qin, Dian
Wu, Xing Ding, Yi Hu, Peng Hu, Xiao-Yan Yang, Wei-Jun Zhang, Hao Li, Yuxuan Li, Xiao Jiang, Lin Gan,
Guangwen Yang, Lixing You, Zhen Wang, Li Li, Nai-Le Liu, Chao-Yang Lu, and Jian-Wei Pan. Quantum
computational advantage using photons. Science, 370(6523):1460–1463, December 2020.
[6] Scott Aaronson and Alex Arkhipov. The Computational Complexity of Linear Optics. arXiv:1011.3245
[quant-ph], November 2010.
[7] Giacomo Corrielli, Andrea Crespi, and Roberto Osellame. Femtosecond laser micromachining for integrated
quantum photonics. Nanophotonics, 10(15):3789–3812, 2021.
[8] Nathan Killoran, Josh Izaac, Nicolás Quesada, Ville Bergholm, Matthew Amy, and Christian Weedbrook.
Strawberry Fields: A Software Platform for Photonic Quantum Computing. Quantum, 3:129, March 2019.
[9] Nicolas Heurtel, Andreas Fyrillas, Grégoire de Gliniasty, Raphaël Le Bihan, Sébastien Malherbe, Marceau
Pailhas, Boris Bourdoncle, Pierre-Emmanuel Emeriau, Rawad Mezher, Luka Music, Nadia Belabas, Benoît
Valiron, Pascale Senellart, Shane Mansﬁeld, and Jean Senellart. Perceval: A Software Platform for Discrete
Variable Photonic Quantum Computing. 2022.
[10] E. Knill, R. Laﬂamme, and G. J. Milburn. A scheme for eﬃcient quantum computation with linear optics.
Nature, 409(6816):46–52, January 2001.
[11] Michael A. Nielsen. Optical quantum computation using cluster states.Physical Review Letters, 93(4):040503,
July 2004.
[12] Pieter Kok, W. J. Munro, Kae Nemoto, T. C. Ralph, Jonathan P. Dowling, and G. J. Milburn. Review article:
Linear optical quantum computing. Reviews of Modern Physics, 79(1):135–174, January 2007.
[13] Qiang Zhang, Xiao-Hui Bao, Chao-Yang Lu, Xiao-Qi Zhou, Tao Yang, Terry Rudolph, and Jian-Wei Pan.
Demonstration of eﬃcient scheme for generation of "Event Ready" entangled photon pairs from single photon
source. Physical Review A, 77(6):062316, June 2008.
[14] Daniel E. Browne and Terry Rudolph. Resource-eﬃcient linear optical quantum computation. Physical
Review Letters, 95(1):010501, June 2005.
[15] Sara Bartolucci, Patrick Birchall, Hector Bombin, Hugo Cable, Chris Dawson, Mercedes Gimeno-Segovia,
Eric Johnston, Konrad Kieling, Naomi Nickerson, Mihir Pant, Fernando Pastawski, Terry Rudolph, and Chris
Sparrow. Fusion-based quantum computation. arXiv:2101.09310 [quant-ph], January 2021.

16
Quantum Linear Optics via String Diagrams
[16] Samson Abramsky and Bob Coecke. A categorical semantics of quantum protocols. In Proceedings of the
19th Annual IEEE Symposium on Logic in Computer Science (LICS), pages 415–425, March 2004.
[17] P. Selinger. Dagger compact closed categories and completely positive maps. Electronic Notes in Theoretical
Computer Science, 170:139–163, 2007.
[18] B. Coecke, É. O. Paquette, and D. Pavlović. Classical and quantum structuralism. In S. Gay and I. Mackie,
editors, Semantic Techniques in Quantum Computation, pages 29–69. Cambridge University Press, 2010.
arXiv:0904.1997.
[19] B. Coecke, R. Duncan, A. Kissinger, and Q. Wang. Strong complementarity and non-locality in categorical
quantum mechanics. In Proceedings of the 27th Annual IEEE Symposium on Logic in Computer Science
(LICS), 2012. arXiv:1203.4988.
[20] B. Coecke and A. Kissinger. Picturing Quantum Processes. A First Course in Quantum Theory and Dia-
grammatic Reasoning. Cambridge University Press, 2017.
[21] Seyon Sivarajah, Silas Dilkes, Alexander Cowtan, Will Simmons, Alec Edgington, and Ross Duncan.
T$|$ket$\rangle$ :
A Retargetable Compiler for NISQ Devices.
Quantum Science and Technology,
6(1):014003, January 2021.
[22] Aleks Kissinger and John van de Wetering.
PyZX: Large Scale Automated Diagrammatic Reasoning.
Electronic Proceedings in Theoretical Computer Science, 318:229–241, May 2020.
[23] Dimitri Kartsaklis, Ian Fan, Richie Yeung, Anna Pearson, Robin Lorenz, Alexis Toumi, Giovanni de Felice,
Konstantinos Meichanetzidis, Stephen Clark, and Bob Coecke. Lambeq: An Eﬃcient High-Level Python
Library for Quantum NLP. arXiv:2110.04236 [quant-ph], October 2021.
[24] Giovanni de Felice, Alexis Toumi, and Bob Coecke.
DisCoPy:
Monoidal Categories in Python.
arXiv:2005.02975 [math], May 2020.
[25] E. R. Miranda, R. Yeung, A. Pearson, K. Meichanetzidis, and B. Coecke. A quantum natural language
processing approach to musical intelligence. arXiv preprint arXiv:2111.06741, 2021.
[26] Bob Coecke and Ross Duncan. Interacting Quantum Observables. In Luca Aceto, Ivan Damgård, Leslie Ann
Goldberg, Magnús M. Halldórsson, Anna Ingólfsdóttir, and Igor Walukiewicz, editors, Automata, Languages
and Programming, Lecture Notes in Computer Science, pages 298–310, Berlin, Heidelberg, 2008. Springer.
[27] Ross Duncan, Aleks Kissinger, Simon Perdrix, and John van de Wetering. Graph-theoretic Simpliﬁcation of
Quantum Circuits with the ZX-calculus. Quantum, 4:279, June 2020.
[28] Miriam Backens, Hector Miller-Bakewell, Giovanni de Felice, Leo Lobski, and John van de Wetering. There
and back again: A circuit extraction tale. Quantum, 5:421, March 2021.
[29] Niel de Beaudrap and Dominic Horsman. The ZX calculus is a language for surface code lattice surgery.
Quantum, 4:218, January 2020.
[30] Jamie Vicary.
A categorical framework for the quantum harmonic oscillator.
International Journal of
Theoretical Physics, 47(12):3408–3447, December 2008.
[31] M. Fiore. An axiomatics and a combinatorial model of creation/annihilation operators. arXiv preprint
arXiv:1506.06402, 2015.
[32] Leslie G. Valiant. Quantum computers that can be simulated classically in polynomial time. In Proceedings
of the Thirty-Third Annual ACM Symposium on Theory of Computing, STOC ’01, pages 114–123, New York,
NY, USA, July 2001. Association for Computing Machinery.
[33] Barbara M. Terhal and David P. DiVincenzo. Classical simulation of noninteracting-fermionquantum circuits.
Physical Review A, 65(3):032325, March 2002.
[34] Mario Krenn, Xuemei Gu, and Anton Zeilinger. Quantum Experiments and Graphs: Multiparty States as
Coherent Superpositions of Perfect Matchings. Physical Review Letters, 119(24):240403, December 2017.
[35] Stefan Ataman. A graphical method in quantum optics. Journal of Physics Communications, 2(3):035032,
2018-03. Publisher: IOP Publishing.

G. de Felice & B. Coecke
17
[36] R. F. Blute, Prakash Panangaden, and R. A. G. Seely. Fock Space: A Model of Linear Exponential Types,
1994.
[37] Giovanni de Felice, Amar Hadzihasanovic, and Kang Feng Ng. A diagrammatic calculus of fermionic
quantum circuits. Logical Methods in Computer Science ; Volume 15, page Issue 3 ; 18605974, 2019.
[38] B. Coecke and A. Kissinger. The compositional structure of multipartite quantum entanglement. In Au-
tomata, Languages and Programming, Lecture Notes in Computer Science, pages 297–308. Springer, 2010.
arXiv:1002.2540.
[39] A. Hadzihasanovic. A Diagrammatic Axiomatisation for Qubit Entanglement. In Proceedings of the 30th
Annual ACM/IEEE Symposium on Logic in Computer Science, LICS ’15, pages 573–584. IEEE, 2015.
[40] A. Hadzihasanovic. The Algebra of Entanglement and the Geometry of Composition. PhD thesis, University
of Oxford, 2017.
[41] Alexandre Clément and Simon Perdrix. PBS-Calculus: A Graphical Language for Coherent Control of
Quantum Computations. In Javier Esparza and Daniel Kráľ, editors, 45th International Symposium on Math-
ematical Foundations of Computer Science (MFCS 2020), volume 170 of Leibniz International Proceedings
in Informatics (LIPIcs), pages 24:1–24:14, Dagstuhl, Germany, 2020. Schloss Dagstuhl–Leibniz-Zentrumfür
Informatik.
[42] Paul McCloud. The Category of Linear Optical Quantum Computing. arXiv:2203.05958 [quant-ph], March
2022.
[43] Alexandre Clément, Nicolas Heurtel, Shane Mansﬁeld, Simon Perdrix, and Benoît Valiron. LOv-calculus: A
graphical language for linear optical quantum circuits. arXiv:2204.11787 [quant-ph], 2022.
[44] Hector Bombin, Chris Dawson, Ryan V. Mishmash, Naomi Nickerson, Fernando Pastawski, and Sam Roberts.
Logical blocks for fault-tolerant topological quantum computation. arXiv:2112.12160 [quant-ph], December
2021.
[45] Francois Henault. Quantum physics and the beam splitter mystery. arXiv:1509.00393 [quant-ph], page
95700Q, September 2015.
[46] Michael Reck, Anton Zeilinger, Herbert J. Bernstein, and Philip Bertani. Experimental realization of any
discrete unitary operator. Physical Review Letters, 73(1):58–61, July 1994.
[47] William R. Clements, Peter C. Humphreys,Benjamin J. Metcalf, W. Steven Kolthammer,and Ian A. Walmsley.
Optimal design for universal multiport interferometers. Optica, 3(12):1460–1465, December 2016.
[48] David J Griﬃths. Introduction to electrodynamics. Prentice Hall New Jersey, 1962.
[49] Teimuraz Pirashvili. On the PROP corresponding to bialgebras, October 2001.
[50] Filippo Bonchi, Paweł Sobociński, and Fabio Zanasi. A Categorical Semantics of Signal Flow Graphs. In
Paolo Baldan and Daniele Gorla, editors, CONCUR 2014 – Concurrency Theory, Lecture Notes in Computer
Science, pages 435–450, Berlin, Heidelberg, 2014. Springer.
[51] Chris Heunen. On the Functor 퓁2. In Bob Coecke, Luke Ong, and Prakash Panangaden, editors, Computation,
Logic, Games, and Quantum Foundations. The Many Facets of Samson Abramsky: Essays Dedicated to
Samson Abramsky on the Occasion of His 60th Birthday, Lecture Notes in Computer Science, pages 107–121.
Springer Berlin Heidelberg, Berlin, Heidelberg, 2013.
[52] V. Fock. Konﬁgurationsraumund zweite Quantelung. Zeitschrift für Physik, 75(9):622–647,September 1932.
[53] John van de Wetering. ZX-calculus for the working quantum computer scientist. arXiv:2012.13966 [quant-
ph], December 2020.

