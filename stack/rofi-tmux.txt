rft (roﬁ-tmux) Documentation
Release 0.1
Vinicius Arcanjo
Mar 23, 2020


Contents
1
Introduction
1
1.1
Use Case . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
1
1.2
Features . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
1
2
Installation
3
3
Dependencies
5
4
Conﬁguration
7
4.1
conﬁg example using i3wm
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
8
5
Usage
9
5.1
Screencast
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
10
i

ii

CHAPTER 1
Introduction
Quickly switches tmux sessions, windows and tmuxinator projects on roﬁ. Integrates with i3wm for a smoother
switching workﬂow, if you have multiple workspaces.
1.1 Use Case
I developed rft (roﬁ-tmux) to optimize my context-switching workﬂow. As a user who rely completely on tmux for
anything shell related, I wanted to have a fuzzy ﬁnder switcher, to locate any tmux session or window with seamless
integration with i3wm. I guess I’ve got spoiled by fuzzy ﬁnders. Watch the screencast in the Usage section and you’ll
see what I mean :)
1.2 Features
• Switch or kill any tmux session.
1

rft (roﬁ-tmux) Documentation, Release 0.1
• Switch or kill any tmux window, either globally or within the current session.
• Switch to any tmuxinator project.
• Cache last tmux session and window for fast switching back and forth, decreases the number of keystrokes.
• Integration with i3wm for switching to the right workspace seamlessly.
• Extensible for other window managers.
2
Chapter 1. Introduction

CHAPTER 2
Installation
Simply pip3 install:
pip3 install rofi-tmux --user -U
3

rft (roﬁ-tmux) Documentation, Release 0.1
4
Chapter 2. Installation

CHAPTER 3
Dependencies
Optional (but recommended) dependency is xprop, which will be used to query tmux window visibility.
5

rft (roﬁ-tmux) Documentation, Release 0.1
6
Chapter 3. Dependencies

CHAPTER 4
Conﬁguration
All conﬁguration is optional, and is to be written in a json ﬁle at ~/.rft.
• wm
Deﬁnes which window manager we want to integrate with for smoother context-switching. With this integration,
as soon as you switch context, roﬁ-tmux will automatically focus window where tmux is running. Currently the
only supported window manager is i3, which is the default value.
Note: Feel free to send pull requests for other window managers that support multiple workspaces.
• tmux_title_rgx
Only applicable when wm conﬁg is set. This is the regular expression used by window-manager integration logic
to locate the window housing speciﬁc tmux session. Generally you’d like this (roughly) to match your tmux
conﬁguration. The pattern also supports two optional placeholders that will be automatically expanded:
– {session} will be expanded into tmux session name
– {window} will be expanded into tmux window name
Eg if you have set -g set-titles-string "#S / #W / #T" in your .tmux.conf, you might want
to set to this value:
{
"tmux_title_rgx": "^{session} / {window} / "
}
• ignored_sessions
Optional list of tmux session names that should be ignored when building the selection menu. Eg:
{
"ignored_sessions": ["session-name", "other-session-name"]
}
7

rft (roﬁ-tmux) Documentation, Release 0.1
Note: If you want to change the algorithm roﬁuses, you should change it on roﬁrc conﬁguration ﬁle itself, “~/.con-
ﬁg/roﬁ/conﬁg”, for example to uses the fuzzy macher you should set roﬁ.matching attribute as “fuzzy”.
4.1 conﬁg example using i3wm
{
"wm": "i3",
"tmux_title_rgx": "^tmux-{session}-{window}",
"ignored_sessions": ["session-name-to-ignore"]
}
8
Chapter 4. Conﬁguration

CHAPTER 5
Usage
Two things you have to keep in mind when using rft:
1. rft doesn’t launch a terminal automatically for you, so, if you don’t have a tmux session attached yet you’re
supposed to run rft in the terminal (rft ss or rft lp).
2. rft caches the last tmux session/window you have switched from, so it automatically pre-selects it in the roﬁ
prompt, except if you are in a different workspace, where rft assumes that you probably want to switch over to
the same session/window you were before/that is currently opened.
I recommend that you have shortcuts with control modiﬁers for rft, so if you always have a tmux session running, it’s
going to be really fast to ﬁnd this session and switch to it. For example, I use these key bindings on i3wm for launching
rft:
bindsym $mod+y exec "$HOME/.local/bin/rft lp"
bindsym $mod+e exec "$HOME/.local/bin/rft ss"
bindsym $mod+w exec "$HOME/.local/bin/rft sw"
bindsym $mod+Shift+d exec "$HOME/.local/bin/rft ks"
bindsym $mod+Shift+w exec "$HOME/.local/bin/rft kw"
bindsym $mod4+g exec "$HOME/.local/bin/rft sw --global_scope false"
Note: If you have pip3 installed with the –user ﬂag the executable will be in ~/$HOME/.local/bin/rft.
The ﬁrst three are the ones that I use the most. They’re for loading a tmuxinator project (lp), switching to a session
(ss) and switching to a window globally (sw). So, I set some keys that are near my home row. If you want to check all
rft actions available:
rft
Usage: rft [OPTIONS] COMMAND [ARGS]...
RFT (rofi-tmux) switcher.
Options:
--debug BOOLEAN
Enables logging at debug level.
(continues on next page)
9

rft (roﬁ-tmux) Documentation, Release 0.1
(continued from previous page)
--help
Show this message and exit.
Commands:
ks
Kill tmux session.
kw
Kill tmux window.
lp
Load tmuxinator project.
ss
Switch tmux session.
sw
Switch tmux window.
v
Print version.
5.1 Screencast
Watch this screencast to see rft in action:
10
Chapter 5. Usage

