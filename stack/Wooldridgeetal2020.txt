IEEE TRANSACTIONS ON ARTIFICIAL INTELLIGENCE, VOL. 1, NO. 1, AUGUST 2020
19
Delegating Decisions in Strategic Settings
Paul E. Dunne, Paul Harrenstein
, Sarit Kraus, and Michael Wooldridge
Abstract—In this article, we formalise and investigate the follow-
ing problem. A number of decisions must be delegated to a collec-
tion of agents; once the decisions are delegated, the agents to whom
the decisions are delegated will then make these decisions rationally
and independently, in pursuit of their own preferences. A principal
is able to determine how decisions will be delegated, and seeks to
do so in such a way that, when the decisions are ultimately made,
some overall goal is satisﬁed. The principal delegation problem, is
then, given such a setting, whether it is possible for the principal
to delegate decisions in such a way that, if all the agents to whom
decisions have been delegated then make their respective decisions
rationally, the principal’s goal will be achieved in equilibrium.
We also distinguish the distributed allocation problem where the
agents can delegate decisions among themselves. Here we not only
require that the principal’s goal will be achieved in equilibrium,
but moreover that the allocation to the agents is stable, in the sense
that no coalition of agents can redistribute the decisions delegated
to them among themselves so as to be better positioned to satisfy
their individual goals in equilibrium. We formalise these problems
using Boolean games, which provides a very natural framework
within which to capture the delegation problem: decisions are di-
rectly represented as Boolean variables, which the principal assigns
to agents. After motivating and formally deﬁning the principal
and distributed delegation problems, we investigate these compu-
tational complexity of several varieties of these problems, along
with some issues surrounding it. Impact Statement: Our research
concerns the ubiquitous problem of how to incentivise agents to
decide on courses of action that are simultaneously desirable from
the global perspective and rational from a local game-theoretic
perspective. The design of mechanisms so as to achieve this is
through steering the strategic capabilities of interested agents by
delegating decisions to them in speciﬁc ways. We distinguish the
cases in which the delegation is effectuated by a principal and
where the agents are delegating decisions among one another. Our
reliance on the mathematical framework of Boolean games to
formalise the principal and distributed delegation problems offers
valuable insights into the computational complexity of these prob-
lems. The delegation problem touches on many important applica-
tions, not only in everyday life, but also in Artiﬁcial Intelligence, in
particular Multi-Agent Systems.
Manuscript received May 11, 2020; revised July 30, 2020 and October 8,
2020; accepted October 8, 2020. Date of publication October 19, 2020; date
of current version November 19, 2020. The work of Michael Woolridge was
supported in part by a JP Morgan Faculty Grant and the Alan Turing Institute,
London. The work of Sarit Kraus was supported by the Israel Science Foundation
under Grant 1958/20 and in part by the Ministry of Science & Technology,
Israel, and the Ministry of Education, Science, Research and Sport of the Slovak
Republic. The work of Michael Wooldridge and Sarit Kraus was supported in
part by the EU project TAILOR under Grant 992215. (Corresponding author:
Michael Wooldridge.)
Paul E. Dunne is with the Department of Computer Science, University of
Liverpool, L69 3BX Liverpool, U.K. (e-mail: p.e.dunne@liverpool.ac.uk).
Paul Harrenstein and Michael Wooldridge are with the
Department of
Computer Science, University of Oxford, OX1 2JD Oxford, U.K. (e-mail:
paul.harrenstein@cs.ox.ac.uk; mjw@cs.ox.ac.uk).
Sarit Kraus is with the Department of Computer Science, Bar Ilan University,
Ramat, Gan 5290002, Israel (e-mail: kraus@cs.biu.ac.il).
Digital Object Identiﬁer 10.1109/TAI.2020.3031545
IndexTerms—Gametheory,mechanismdesign,logic,knowledge
representation, computational complexity.
I. INTRODUCTION
T
HROUGHOUT our lives, we must inevitably delegate
to other agents decisions whose outcome will affect us,
even though we know full well that the agents we delegate the
decisions to are self-interested, and will make these decisions in
their own interest. Examples of this problem are legion. Thus,
one can think of the chair of a university department, who must
allocate teaching and admin responsibilities to faculty members,
who may have the interests of their research area prevail over
a well-balanced curriculum, diversity of research, or a well-
balanced budget. Or of a ﬁlm studio producing a ﬁlm and has to
appoint a director, a screen writer, as well as a casting manager.
In computer science, the designer of a multi-agent system can
be seen to delegate tasks to multiple largely autonomous agents.
In each case some leeway in the execution of the delegated
task has to be granted, and we face the problem how to best
delegate which responsibilities to which decision makers. In
this paper, we formally analyse this issue, which we will refer
to as the principal delegation problem, so as to investigate its
computational properties. We also study a more cooperative
setting, where the agents have to assign responsibilities among
one another in the absence of a principal. This setting would be
more appropriate, for instance, in the case where a couple of
friends who are organising a party and who have to divide the
tasks of ﬁnding a venue, hiring a DJ, and engaging a catering
service. Or in the case where four allied powers occupying an
enemy city have to decide who is to be responsible for the
city’s food supply, its infrastructure, and its public security. This
problem we refer to as the distributed delegation problem.
To illustrate the principal delegation problem we use the
following ﬁctional political scenario as a running example.
Example 1: Consider the case of a Prime Minister of a not
further speciﬁed Western European country, who has to reshufﬂe
their cabinet. There are vacancies in the departments of Finance,
of Trade, and of Energy. In the upcoming months, in each of
these departments there is an important decision to be made.
The minister of Finance will have to decide whether or not to
raise taxes, the minister of Trade will have to decide whether to
renegotiate a free-trade agreement with trade-block A or enter a
new one with trade-block B, and the Energy minister will have to
commit to a coal-phase out or pursue other measures. How these
decisions will affect the (environmental) future of the country is
tabulated in Fig. 1.
There are three candidates, an environmentalist, a free-trade
libertarian, and a populist, each of whom has different (but
2691-4581 © 2020 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: University of Maryland College Park. Downloaded on January 28,2021 at 08:21:04 UTC from IEEE Xplore.  Restrictions apply. 

20
IEEE TRANSACTIONS ON ARTIFICIAL INTELLIGENCE, VOL. 1, NO. 1, AUGUST 2020
Fig. 1.
PM’s predicament. Different policy decisions in the departments of
Finance, Energy, and Trade affect the future course the country is to take.
The three circles in the bottom right of each cell indicate the preferences of
the three ministerial candidates, the environmentalist, the free-trade libertarian,
and populist, respectively. A ﬁlled circle indicates approval, an empty circle
disapproval. The PM strives for a joint equilibrium decision that at a majority
of the ministers approve.
dichotomous) preferences over what the country’s future should
look like. Thus the environmentalist prefers green (italicised)
outcomes, and the free-trade libertarian prefers not to raise taxes,
unless the country ends up in trade-block B without a coal phase-
out. The populist wants to join trade-block B, unless there is
going to be a green economy, in which case only A is acceptable.
The prime minister is confronted with the task of appointing
ministers for each of the three ministries from among the three
candidates. Different ways of appointing the three ministers lead
to different outcomes, as the candidates will have to pursue their
goals with different strategic capabilities. Moreover, the prime
minister themselves may have their own objectives, in our case, a
stable cabinet in which a majority of the three ministers supports
the political course that results as a consequence of the ministers’
decisions. How can the prime minister achieve this?
By making the libertarian Finance minister, assigning the
populist to Energy, and putting the environmentalist in charge
of the Trade department, it can easily be checked that there is a
unique Nash equilibrium, in the sense that it is the only outcome
where none of the ministers would like to revise their decision
unilaterally. This equilibrium would result in a future based on
solar and wind energy. Alternatively, if the environmentalist, the
libertarian, and the populist are responsible for Energy, Trade,
and Finance, respectively, another but also unique equilibrium
ensues, resulting in a sophisticated green economy in block A.
In either case, the prime minister’s objective of majority support
in the cabinet is fulﬁlled as well. This will not always be the
case though. For instance, if the populist were to decide which
trade-block to join, the libertarian whether to raise taxes, and the
environmentalist on the coal phase-out, then there is no equilib-
rium, let alone one that is acceptable to the Prime Minister.
The formal model we use to frame the delegation problem
is based on Boolean games, which were originally introduced
by [1]–[5]. In a Boolean game, the agents are players, and each
player i is assumed to have a goal, represented as a propositional
formula γi over some set Φ of Boolean variables. Each player i
has some subset Φi of the variables Φ, with the idea being that
the variables Φi are under the unique control of player i. The
Fig. 2.
Partial game of Example 1 under four different allocations, αa|t|c,
αc|a|t, αt|c|a, and αa|c|t, of departments to ministers. In each game, the envi-
ronmentalist chooses rows, the free-trade libertarian columns, and the populist
matrices. Nash equilibria are underlined.
choices/strategies available to i correspond to all the possible
allocations of truth (⊤) or falsity (⊥) to the variables in Φi. A
player would ideally like to choose an allocation for its variables
so as to satisfy its goal γi, but whether i’s goal is in fact satisﬁed
will depend on the choices made by others; and whether their
goal is satisﬁed will in turn depend on the choice made by i, and
others.1
Example 2: Thus, in Example 1, the binary decisions relating
to tax levels, the coal phase-out, and the choice of free-trade
agreement can be formalised, respectively, as three proposi-
tional variables t, c, and a, which each can take the value ⊤
(tax increase, coal phase out, free-trade with A) or ⊥(no tax
increase, no coal phase-out, free-trade with B). The players are
the candidates and each can be uniquely appointed minister to
one or more of the three departments, or to none.
◁
Boolean games have two main features that make them well-
suited to studying delegation problems. First, the strategies of
the players are given by subsets of variables over which they
have unique control. This affords a natural set-theoretic struc-
ture. Setting the truth-value of a given propositional variable
could be regarded as a subtask that is delegated to the player
controlling that variable. The subtask of setting the truth-value
of a propositional variable can in principle be delegated to any
of the players and independently of the other variables assigned
to their control. Second, in a Boolean game, player satisfaction
depends in a systematic way on the truth-values assigned to the
propositional variables, but not on the identity of the players
who assigned the truth-value to the variables. Loosely speaking,
different ways in which control over the variables is distributed
over the players may affect the strategic structure of the game,
but not its preference structure. Also see Fig. 2 for an illustration
of this point.
1As one reviewer aptly observed, the principal delegation problem could also
be modelled as a Stackelberg game [6], [7, pp.97–98], where the principal is the
leader and the players the followers. Boolean games, however, allow us to focus
more on the internal structure of the allocations rather than on the leader-follower
hierarchy.
Authorized licensed use limited to: University of Maryland College Park. Downloaded on January 28,2021 at 08:21:04 UTC from IEEE Xplore.  Restrictions apply. 

DUNNE et al.: DELEGATING DECISIONS IN STRATEGIC SETTINGS
21
Fig. 3.
Partial game of Example 3 under allocations α and α′. Player 1 chooses
rows, player 2 chooses columns, and player 3 chooses matrices.
In the variant of Boolean games that we use to model the
delegation problem, we therefore assume that some of the vari-
ables in Φ may be initially unallocated, i.e., not assigned to
any player’s variable set Φi. We have seen how the unallocated
variables are assigned to the players may essentially affect the
Nash equilibria of the resulting game where all variables are
allocated. An external principal (corresponding to the prime
minister in the example above) must allocate these variables to
players within the game, i.e., the decision about which unallo-
cated variable is assigned to which player is determined by the
principal. Once the principal has made an allocation, then the
resulting Boolean game is played in the normal way. Thus, a
player i is able to determine values for all the variables Φi that
it is initially allocated, as well as values for the variables that
were allocated to them by the principal. Note that the principal
is not part of the resulting Boolean game: the values chosen
for variables Φ are made by the players in the game. Thus
the only way the principal can inﬂuence a game is in choosing
the allocation of originally unallocated variables to players. The
principal will make an allocation with some overall objective
in mind. We represent the objective by a Boolean formula Υ
over the variables Φ. If the principal is successful in allocating
variables to players, then the result is that players will rationally
choose values for variables so that the objective Υ is satisﬁed
in equilibrium. Thus the overall problem faced by the principal
is as follows: Can I assign the unallocated variables to players
in such a way that if the players then play the resulting game
rationally, my objective Υ will be satisﬁed in equilibrium? We
refer to this as the principal delegation problem. This problem
was investigated before in [8] under the name of the delegation
problem.
The observation that the way variables are allocated to the
players essentially affects the Nash equilibria of the games after
allocation lies at the heart of the principal delegation problem.
It need not only be the principal who may have an interest in
how variables are allocated and which Nash equilibria result as
a consequence. This could also hold for the players to whom
tasks are being delegated. To illustrate this point, consider the
following example.
Example 3: Consider the situation wherein three students are
to prepare a common meal and have to decide who is to get
tomatoes (p) or beans (¯p) from the greengrocer’s, cheese (q) or
cream (¯q) form the creamery, and spaghetti (r) or rice (¯r) from
the grocer’s shop. They have varying preferences over the meals
they can make with the ingredients bought.
Fig. 3 depicts the two Boolean games that result in two
different ways, α and α′, in which these tasks are allocated. In
the former, the variables p, q, and r are controlled by player 1,
player 2, and player 3, respectively. In the latter, players 1 and 2
have exchanged control over p and q. Suppose both player 1’s
and player 3’s goal is given by (r →(p ∧¬q)) ∧(¬r →(p ↔
¬q)), and player 2’s goal by (r →(p ∧¬q)) ∧(¬r →(p ↔
q)).
In the game under allocation α, there is one Nash equilibrium,
which renders true ¬p ∧¬q ∧r and satisﬁes no player’s goal.
By contrast, the unique equilibrium in the game under α′ satisﬁes
p ∧q ∧r and as such is strictly better for both players 1 and 3
with respect to the equilibrium under α, whereas player 2 is
indifferent between the equilibria that result under α and α′.
Therefore, the three players could have an incentive to form a
coalition and reallocate the variables they control among one
another. We could therefore say that allocation α is blocked by
the players, and therefore fails to be stable in the game-theoretic
sense of the word. Observe that, by the same reasoning, the
coalition consisting of players 1 and 2 could be said to be
similarly incentivised to collude and deviate. Interestingly, and
as the reader may verify, this is not the case for the coalition with
players 1 and 3, the two beneﬁciaries of the ﬁrst reallocation!
Finally, given allocation α′, no coalition can be found that would
like to reallocate their variables so as to guarantee a better Nash
equilibrium: any such coalition would have to involve player 2
and at least one other player, but the latter would be worse off
in any outcome where player 2 is better off.
◁
In Section V, we formally address this possibility of coalitions
of players blocking allocations, i.e., the possibility that some
coalitions cooperate by reallocating allocated variables among
its members, and to do so to their advantage. More precisely, we
consider the following distributed delegation problem: Can we
assign the unallocated variables to players in such a way that
is both stable, i.e., no coalition is incentivised to reallocate the
variables among themselves, and will satisfy our objective Υ in
equilibrium?
In the remainder of this paper, we formalise and study the
principalanddistributeddelegationproblems,focussingparticu-
larly on computational issues. After this introduction, we present
the formal preliminaries in Section II. Section III is devoted to
the fundamental principal delegation problem, both in its weak
and strong forms. In Section IV, we investigate a variant of
the principal delegation problem in which the principal seeks
an allocation that will result in an equilibrium that maximises
some objective function. Section V deals with the distributed
delegation problem. In Section VI, we conclude by evaluating
our results and discussing related work, and pointing out direc-
tions for future research.
II. PRELIMINARY DEFINITIONS
We now introduce the variation of Boolean games that we use
in the present paper, which is directly descended from previous
Boolean game models (compare, e.g., [1], [3]–[5]).
a) Propositional Logic: Let {⊤, ⊥} be the set of Boolean
truth-values, with “⊤” being truth and “⊥” being falsity. Let
Authorized licensed use limited to: University of Maryland College Park. Downloaded on January 28,2021 at 08:21:04 UTC from IEEE Xplore.  Restrictions apply. 

22
IEEE TRANSACTIONS ON ARTIFICIAL INTELLIGENCE, VOL. 1, NO. 1, AUGUST 2020
Φ = {p, q, . . .} be a ﬁnite, ﬁxed, and non-empty vocabulary of
Boolean variables. The set of well-formed formulae of propo-
sitional logic over Φ is then constructed using the conventional
Boolean operators “∧”, “∨”, “→”, “↔”, and “¬”, as well as
the constants “⊤” and “⊥”. We abuse notation by using ⊤and
⊥to denote both the syntactic constants for truth and falsity
respectively,aswellastheirsemanticcounterparts.Wewilloften
ﬁnd it useful to abbreviate clauses such as p ∧¬q ∧r to p¯qr. A
valuation is a total function v : Φ →{⊤, ⊥}, assigning truth
or falsity to every Boolean variable. We write v |= φ to mean
that the propositional formula φ is true under, or satisﬁed by,
valuation v, where the satisfaction relation |= is deﬁned in the
standard way. Let V (Φ) denote the set of all valuations over
Φ, omitting the parameter Φ when clear from the context. We
write |= φ to mean that φ is valid, i.e., that v |= ϕ holds for all
valuations v. We denote the fact that |= φ ↔ψ by φ ≡ψ.
b) Quantiﬁed Boolean Formulas: As well as propositional
logic, we make use of Quantiﬁed Boolean Formulas (QBFs).
QBFs extend propositional logic with quantiﬁers ∃X and ∀X,
where X ⊆Φ. A formula ∃Xφ asserts that there is some assign-
ment of truth-values to the variables X such that φ is true under
this assignment, while a formula ∀Xφ asserts that φ is true under
all assignments of truth-values to the variables X. QBFs are
very powerful: for example the satisﬁability of a propositional
formula φ over variables Φ can be expressed by the QBF ∃Φφ.
Quantiﬁers in QBFs can be nested: the formula ∃X∀Y φ asserts
that there is some assignment of values to X such that no matter
how values for variables Y are assigned, the formula φ will be
satisﬁed.
c) Boolean Games and Partial Boolean Games A partial
(Boolean) game, which is formally given by a tuple
P = (N, Φ, Φ1, . . . , Φn, γ1, . . . , γn),
is populated by a set N of n agents , the players of the game.
Each player i is assumed to have a goal , characterised by
a propositional formula γi. Each player i controls a possibly
emptysubset Φi of theoverall ﬁniteset of BooleanvariablesΦ =
{p, q, . . .}, i.e., i has the unique ability to set the value of each
variable p in Φi to either ⊤or ⊥. We will require that no variable
is controlled by more than one player, i.e, for distinct players i
and j, we assume Φi ∩Φj = ∅. Readers who are familiar with
Boolean games might also be expecting to see the requirement
that every variable is controlled by an player, but for the moment,
we do not make this assumption.
Thus, in a partial game, it is possible that some variables
in Φ are not allocated to players, i.e., that Φ1 ∪· · · ∪Φn ̸= Φ.
We let ΦU = Φ \ (Φ1 ∪· · · ∪Φn) denote the set of unallocated
variables. Two extremal points are worth identifying: if ΦU = Φ
and if ΦU = ∅. If the former, Φ1 = · · · = Φn = ∅, and so all
variables are unallocated. In the latter case, there are no unallo-
cated variables and so every variable is assigned to some player.
Then, ΦU = ∅, and we also refer to the partial game as a Boolean
game.
d) Outcomes, Preferences, and Choices: The outcomes of a
(partial) Boolean game over Φ are given by the set of valuations
V (Φ). The preferences of each player i over the outcomes (val-
uations) are deﬁned by the formula γi in a very straightforward
way: player i strictly prefers all those outcomes that satisfy its
goal γi over all those that do not, but is indifferent between
outcomes that both satisfy their goal, and between outcomes that
both do not satisfy their goal.2 It is convenient to deﬁne for each
player i a utility function ui : V (Φ) →{0, 1} over outcomes
which captures these preferences such that, for all valuations v
in V(Φ),
ui(v) =

1 if v |= γi,
0 otherwise.
Given outcomes v1 and v2, we write v1 ⪰i v2 to mean that
ui(v1) ≥ui(v2), with the corresponding strict ≻i and indiffer-
ent ∼i subrelations deﬁned in the usual way.
When playing a (partial) Boolean game, a player i will aim to
choose an assignment of values for the variables Φi under their
control so as to satisfy their goal γi. However, γi may contain
variables controlled by player distinct from i, who will also be
trying to get their goals satisﬁed; and their goals in turn may be
dependent on the variables Φi.
Formally, a choice for an player i is a function vi : Φi →
{⊤, ⊥}, i.e., an allocation of truth or falsity to all the variables
under i’s control. Let V i denote the set of choices for player i.
If an player i controls no Boolean variables at all, i.e., if Φi = ∅,
we assume that i has only one action, which we denote by ∅.
A strategy proﬁle is a tuple ⃗v = (v1, . . . , vn) in V 1 × · · · × V n
consisting of exactly one choice for one player. The strategy pro-
ﬁle (v1, . . . , vi−1, v′
i, vi+1, . . . , vn) we also denote by (⃗v−i, v′
i).
There is a natural correspondence between outcomes and
strategy proﬁles, and we often treat outcomes for Boolean games
as valuations, for example writing (v1, . . . , vn) |= φ to mean
that the valuation deﬁned by the outcome (v1, . . . , vn) satisﬁes
formula φ. Of course, for partial Boolean games, where ΦU ̸= ∅,
this correspondence between outcomes and strategy proﬁles
does not hold in general.
e) Allocations: Partial games can be made into fully ﬂedged
Boolean games by allocating any unallocated Boolean vari-
ables to the players. Formally, an allocation is a total func-
tion α : ΦU →N, with the intended interpretation that, for
p ∈ΦU, under allocation α, variable p is allocated to player
α(p). With a small abuse of notation, we let αi denote the
set of variables allocated to player i under allocation α, i.e.,
αi = {p ∈ΦU : α(p) = i}. Let A (P) denote the set of all
allocations over partial game P. Note that A (P) will have
cardinality |N||ΦU |, which is exponential in |ΦU|.
If
ΦU = ∅,
we
will
assume
that
there
is
a
single
“empty” allocation possible. Consequently, the set of al-
locations is non-empty even for Boolean games. A par-
tial game P = (N, Φ, Φ1, . . . , Φn, γ1, . . . , γn) together with
an
allocation
α
deﬁnes
a
Boolean
game
G(P, α) =
(N, Φ, Φ′
1, . . . , Φ′
n, γ1, . . . , γn) where Φ′
i = Φi ∪αi for all
players i. We also say that Boolean game G(P, α) extends partial
2We thus assume that players’ preferences are dichotomous, which is tra-
ditional in the literature on Boolean games. Several richer models of player
preferences have been proposed as well (e.g., [9]–[11]). We expect that adopting
these models would only slightly affect the computational results presented in
this paper.
Authorized licensed use limited to: University of Maryland College Park. Downloaded on January 28,2021 at 08:21:04 UTC from IEEE Xplore.  Restrictions apply. 

DUNNE et al.: DELEGATING DECISIONS IN STRATEGIC SETTINGS
23
game P via α. We let G (P) denote the set of Boolean games that
may be obtained from partial game P through some allocation,
i.e., G (P) = {G(P, α): α ∈A (P)}.
f) Nash Equilibrium: The well-known notion of (pure) Nash
equilibrium(see,e.g.,[12])isreadilydeﬁnedforBooleangames.
For Boolean games, we say a strategy proﬁle ⃗v = (v1, . . . , vn)
is a Nash equilibrium if there is no player i and no strategy
v′
i ∈V i for i such that (⃗v−i, v′
i) ≻i (⃗v−i, vi). We denote the
Nash equilibrium outcomes of a Boolean game G by N (G).
As we are dealing with pure, i.e., non-randomised, strategies, it
can very well be that a (partial) Boolean game has no equilibria,
that is, it could be that N (G) = ∅for a given game G. If
⃗v = (v1, . . . , vn) is a Nash equilibrium and v the corresponding
valuation, then we also say that v is sustained by a Nash
equilibrium, or, with some abuse of terminology, also that the
valuation v is a Nash equilibrium. Moreover, let S (P) denote
the set of allocations over partial game P such that under these
allocations, the resulting game has a Nash equilibrium, i.e.,
S (P) = {α ∈A (P): N (G(P, α)) ̸= ∅}.
As we argued above, the natural correspondence between
strategy proﬁles and valuations does not hold for partial Boolean
games. With preferences being deﬁned over valuations, this
renders the deﬁnition of a Nash equilibria in partial games as
a property of strategy proﬁles problematic. Nevertheless, we
can still deﬁne an outcome or valuation v: Φ →{⊤, ⊥} to be
sustained by a Nash equilibrium in a partial game P if there is
no player i and no choice v′
i ∈V i with (v−i, v′
i) ≻i v, where
(v−i, v′
i) is the valuation v′′ such that, for all p ∈Φ,
v′′(p) =

v′
i(p) if p ∈Φi,
v(p)
otherwise.
In an effort to avoid convoluted formulations, we also say,
with a further abuse of terminology, that in such a case the
valuation v itself is a Nash equilibrium of the partial game P.
We now have the following simple but useful proposition, which
intuitively says that allocating variables to players never results
in new equilibria emerging. Rather, the outcomes sustained by
an equilibrium in a Boolean game are a subset of the outcomes
sustained by a Nash equilibrium of any underlying partial game.
Proposition 1: Let P = (N, Φ, Φ1, . . . , Φn, γ1, . . . , γn) be a
partial Boolean game, and α: ΦU →N an allocation. Then, ev-
ery outcome that is sustained by a Nash equilibrium of G(P, α)
is sustained by a Nash equilibrium of P.
Proof: Let v be an outcome and assume for contraposition
that v is not sustained by a Nash equilibrium. Then, there is
some player i and strategy v′
i such that (v−i, v′
i) ≻i v. In that
case, v′
i ⊆Φi and hence also v′
i ⊆Φi ∪αi. But then we may
also conclude that v is not sustained by a Nash equilibrium in
G(P, α) either.
□
g)
Computational
Complexity:
Although
largely
self-
contained, our technical presentation is necessarily terse, and
readers may ﬁnd it useful to have some acquaintance with the
theory of computational complexity (see, e.g., [13], [14]).
Throughout the paper, we assume familiarity with the classes
P, NP, coNP, and, more generally, the polynomial hierarchy,
i.e., the classes Δp
0 = Σp
0 = Πp
0 = P and Δp
k+1 = PΣp
k, Σp
k+1 =
NPΣp
k, and Πp
k+1 = coNPΠp
k, for k ≥0.
III. THE PRINCIPAL DELEGATION PROBLEM
We
now
come to
the ﬁrst main
problem
we con-
sider in this paper. We start with a partial game P =
(N, Φ, Φ1, . . . , Φn, γ1, . . . , γn), with associated unallocated
variable set ΦU. The set ΦU will represent the decisions that
are to be delegated to players in the game. The allocation of ΦU
to players is done by a principal, who has complete freedom to
allocate the variables ΦU to the players in N.3
Once an allocation is made, the partial game becomes a
Boolean game, and the players will then make rational choices,
resulting in some outcome. Recall that the way in which the
variables can be allocated to the players may affect the strategic
structure of the resulting Boolean game, in particular which
outcomes are sustained by Nash equilibria.
Now, we assume that the principal will in fact make the allo-
cation with a particular objective in mind, which we represent
by a Boolean formula Υ. The idea is that the principal will
try to choose an allocation so that, if the players then play the
resulting Boolean game rationally, they will choose an outcome
satisfying Υ.
Following [5]—who study the implementation of a princi-
pals’ goal in Boolean games with taxes rather than through
delegation—we will study two variations of the delegation
problem, which we refer to as weak and strong. In the weak
variation, the principal’s objective Υ is required to be satisﬁed
in some Nash equilibrium of the resulting Boolean game, while
in the strong variation, Υ is required to be satisﬁed in all Nash
equilibria.
A. Weak Principal Delegation
Formally, the WEAK PRINCIPAL DELEGATION problem is de-
ﬁned as follows:
WEAK PRINCIPAL DELEGATION
Given:
A partial game P with ΦU as the set of unallocated
variables, and an objective Υ in L(Φ)
Problem:
Does there exist an allocation α: ΦU →N such that
Υ is satisﬁed in at least one Nash equilibrium of the
Boolean game G(P, α)?
We say this problem is “weak” because we only require that Υ
is satisﬁed in one Nash equilibrium of G(P, α). We will consider
stronger versions below. Notice that WEAK DELEGATION is
equivalent to checking the following condition:
∃G ∈G (P) : ∃⃗v ∈N (G) : ⃗v |= Υ.
The outermost existential quantiﬁer emphasises that the task of
the principal can be understood as choosing a game from the
space of possible games G (P).
3For both the players and the principal, we assume the same epistemic
preconditions that hold for Nash equilibrium. In particular, we assume principal
and the players have common knowledge over all players’s goals.
Authorized licensed use limited to: University of Maryland College Park. Downloaded on January 28,2021 at 08:21:04 UTC from IEEE Xplore.  Restrictions apply. 

24
IEEE TRANSACTIONS ON ARTIFICIAL INTELLIGENCE, VOL. 1, NO. 1, AUGUST 2020
TABLE I
ALLOCATIONS IN EXAMPLE 1 TOGETHER WITH THEIR
WEAK AND STRONG IMPLEMENTABILITY
If (P, Υ) is a positive instance of the WEAK DELEGATION
problem, then we say that Υ can be weakly implemented in
P. Again following [5], we refer to weakly implementing a
tautology—i.e., implementing Υ where Υ ≡⊤—as stabilisa-
tion. The rationale for this terminology is that weakly imple-
menting a tautology will result in a game that has at least
one Nash equilibrium. It is easy to see that ⊤can be weakly
implemented in P if and only if there is at least one allocation
α such that G(P, α) allows for a Nash equilibrium. To illustrate
weak delegation, we recall Example 1.
Example 4: The prime minister’s predicament in the In-
troduction can be modelled as a partial Boolean game P =
({1, 2, 3}, ΦU, Φ1, Φ2, Φ3, γ1, γ2, γ3) with the environmental-
ist, the libertarian, and the populist being players 1, 2, and 3,
respectively, ΦU = {t, c, a}, Φ1 = Φ2 = Φ3 = ∅, and
γ1 = tca ∨(a ↔(t ↔¯c))
γ2 = t ↔(¯a ∧¯c)
γ3 = ¯a ↔(t ∧c).
There are 33 = 27 allocations in total, each of which we
denote by αX|Y |Z where X, Y , and Z are understood as the
variables assigned to 1, 2, and 3, respectively. Thus, e.g., for
αa||tc we have that αa||tc
1
= {a}, αa||tc
2
= ∅, and αa||tc
3
= {t, c}.
The four Boolean games depicted in Fig. 2 are obtained by
combining P with the allocations αa|t|c, αc|a|t, αt|c|a, and
αa|c|t.
The prime minister’s (principal’s) objective—majority sup-
port for the energy policy to be followed—is given by ΥPM =
(c ↔a) ∨¯tc¯a. Inspecting Fig. 2, we thus ﬁnd that assignments
αa|t|c, αc|a|t, and αa|c|t all weakly implement the prime minis-
ter’s objective, be it that the witnessing equilibrium for αa|t|c
is a future with solar and wind energy, whereas for αc|a|t and
αa|c|t this is a sophisticated green economy in trade-block A.
Also observe that αa|c|t also allows for an equilibrium that does
not meet the PM’s objective. By contrast, αc|t|a does not weakly
implement ΥPM, as it does not allow for any equilibria at all.
Table I tabulates all allocations in which ΥPM can be weakly
implemented.
◁
Since we have a domain with Boolean formulae, and there are
clearly exponentially many allocations of variables to players,
it comes as no surprise that the WEAK DELEGATION problem is
computationally hard. However, the good news is that it is no
harder than the problem of determining the existence of pure
strategy Nash equilibria in Boolean games, as we now show.
Theorem 1: WEAK PRINCIPAL DELEGATION is Σp
2-complete.
Proof: Allocations α are clearly small with respect to the
size of the partial game, and verifying that outcomes are Nash
equilibria in Boolean games is in coNP (cf.,[3]). Recall that
Σp
2 = NPcoNP. It then follows that the WEAK DELEGATION
problem is in Σp
2: guess an allocation α and an outcome ⃗v,
and verify both that ⃗v |= Υ and that ⃗v is a Nash equilibrium
in Boolean game G(P, α).
For hardness, we reduce the problem of checking whether
a Boolean game has any pure strategy Nash equilibria, which
is known to be Σp
2-complete (see, [3]). Given a Boolean game
G that we wish to check for the existence pure strategy Nash
equilibria simply deﬁne the corresponding partial game P to
be game G—so that ΦU = ∅—with objective Υ = ⊤. Notice
that the only possible allocation is the empty allocation, which
deﬁnes the identity under the function G(· · · ). Now consider
the WEAK DELEGATION problem:
∃α ∈A (P) : ∃⃗v ∈N (G(P, α)) : ⃗v |= Υ.
Since Υ = ⊤and the only allocation possible is the empty
allocation, this reduces to: ∃⃗v ∈N (G(P, α)) : ⃗v |= ⊤. Since
the empty allocation is the identity under G(· · · ), and ⃗v |= ⊤
for all ⃗v, this further reduces to ∃⃗v ∈N (G), which is exactly
the problem of checking for the existence of pure strategy Nash
equilibria in Boolean games.
□
B. Strong Principal Delegation
The strong principal delegation problem differs from the weak
version in that it requires the objective Υ to be satisﬁed in all
Nash equilibria of the Boolean game that results from an allo-
cation. Formally, we deﬁne STRONG DELEGATION as follows:
STRONG PRINCIPAL DELEGATION
Given:
A partial game P with ΦU as the set of unallocated
variables, and an objective Υ in L(Φ)
Problem:
Does there exist an allocation α such that both:
i) G(P, α) has at least one Nash equilibrium,
ii) all Nash equilibria of G(P, α) satisfy Υ?
To see how the strong delegation problem differs from the
weak delegation problem, we consider again the partial game of
Example 1 from the Introduction.
Example 5: In Table I we summarise which allocations
strongly implement the PM’s objective ΥPM, and which ones do
not. Strong implementability requires the existence of a Nash
equilibrium after the principal’s allocating the variables (cf.,
condition ( ii ) in STRONG PRINCIPAL DELEGATION ). This is why
ΥPM is not implemented by αc|t|a, the only allocation that does
not allow any equilibria. By contrast, the reason why ΥPM is
not strongly implemented by αa|c|t either is that the existence of
the equilibrium a¯ct (low emission plants), which is supported
by one minister only. Interestingly, there is no allocation for
this partial game under which all equilibria only have minority
support even though equilibria exist.
◁
Authorized licensed use limited to: University of Maryland College Park. Downloaded on January 28,2021 at 08:21:04 UTC from IEEE Xplore.  Restrictions apply. 

DUNNE et al.: DELEGATING DECISIONS IN STRATEGIC SETTINGS
25
Before appraising the computational complexity of strong
principal delegation, it is useful to introduce two related auxil-
iary decision problems, OBLIVIOUS PARTIAL GAME and STRONG
PRINCIPAL DELEGATION-Ø. Before we do so, we ﬁrst recall the
following result from [3], where a strategy vi for player i is a
understood to be a winning strategy, if the (partial) valuation
deﬁned by vi is completely under i’s control and, irrespective of
the choices made by other player or players, vi ensures that i’s
goal is satisﬁed.
Proposition 2 (Bonzon et al. [3]): Consider a two-player
zero-sum4
Boolean
game
G = ({1, 2}, Φ, Φ1, Φ2, γ1, γ2).
Then, ⃗v = (v1, v2) is a pure strategy Nash equilibrium for G
if and only if v1 is a winning strategy for player 1 or v2 is a
winning strategy for player 2.
Now we introduce oblivious partial games as an auxiliary
concept as follows. Given a principal’s objective Υ, we say
that partial Boolean game P with unallocated variables ΦU is
oblivious, if for every allocation α, the resulting Boolean game
G(P, α) has at least one Nash equilibrium satisfying Υ, i.e.,
if for every α ∈A (P), there is at least one ⃗v ∈N (G(P, α))
with⃗v |= Υ. Informally, oblivious games have the property that,
whichever delegation of decisions to players is made, there will
be at least one acceptable valuation available, i.e., which is both
an equilibrium and satisﬁes Υ.
We now consider the following decision problem OBLIVIOUS
PARTIAL GAME.
OBLIVIOUS PARTIAL GAME
Given:
A partial game P with ΦU as the set of unallocated
variables, and an objective Υ in L(Φ)
Problem:
Is P an oblivious partial game given Υ?
We ﬁnd that OBLIVIOUS PARTIAL GAME is Πp
3-complete.
Proposition 3: OBLIVIOUS PARTIAL GAME is Πp
3-complete.
The problem remains Πp
3-hard even when restricted to three-
player games.
Proof: First observe that an instance (P, Υ) of OBLIVIOUS
PARTIAL GAME is accepted if and only if
∀α ∈A (P) ∃⃗v ∈V (Φ)such that ⃗v
∈N (G(P, α))and ⃗v |= Υ
This computation required to check this condition can easily be
carried out within Πp
3.
For hardness we use a variant of the well-known quantiﬁed
Boolean formula validity problem QBF3,∀, where instances of
the form ψ(X, Y, Z) are accepted if for all assignments x: X →
{⊤, ⊥} of values to X, there is an assignment y: Y →{⊤, ⊥}
of values to Y such that for every assignment z : Z →{⊤, ⊥}
of values to Z we have (x, y, z) |= ψ.
The variation we use, and which we call HALF-QBF3,∀, restricts
attention to valuations x: X →{⊤, ⊥} that set exactly half
of the variables in X to ⊤, i.e., an instance ψ(X, Y, Z) of
HALF-QBF3,∀is accepted if and only if for all x: X →{⊤, ⊥}
with |{p ∈X : x(p) = ⊤}| = |X|/2, there is a y: Y →{⊤, ⊥}
4That is to say, for every valuation v, exactly one of γ1 or γ2 is satisﬁed.
such that for all z : Z →{⊤, ⊥}:
(x, y, z) |= ψ(X, Y, Z).
We can straightforwardly show that, modiﬁed thus, the problem
remains Πp
3-hard, for instance, by using the “padding argument”
methods in [15] (in particular, Lemma 3.7).
Given an instance ψ(X, Y, Z) of HALF-QBF3,∀, we construct
the three-player partial Boolean game Pψ, with players 1, 2,
and 3, and
Φ1 = Y ∪{r}
Φ2 = Z ∪{s}
Φ3 = ∅
ΦU = X.
Furthermore, deﬁne the players’ preferences as follows:
γ1 = (EQ(X) →ψ) ∨(r ↔s)
γ2 = (EQ(X) ∧¬ψ ∧(r ↔¬s)) ∨¬MAJ(X)
γ3 = EQ(X)
Here r and s are fresh variables. Moreover, EQ(X) denotes
the propositional function that evaluates to true if and only if
the assignment sets exactly half of the variabels in X to ⊤.
Similarly, MAJ(X) is the propositional function that evaluates
to true if and only if the assignment sets
at least half of
X to ⊤. Note that the propositional functions EQ(X) and
MAJ(X) can be encoded in polynomial size formulae (see,
e.g., [16]). Accordingly, the construction of Gϕ can be effected
in polynomial time. Finally, set Υ = ⊤.
As clearly every valuation thus satisﬁes Υ, it now sufﬁces to
show that ψ(X, Y, Z) is an accepting instance of HALF-QBF3,∀
if and only if for every allocation α: X →{1, 2}, the game
G(Pψ, α) has at least one Nash equilibrium.
First assume that ψ(X, Y, Z) is an accepting instance of
HALF-QBF3,∀and consider an arbitrary allocation of α: ΦU →
{1, 2, 3} of X. We show that there is a Nash equilibrium in
G(Pψ, α). We distinguish two cases: ( i ) |α1 ∪α3| < |X|/2,
and ( ii ) |α1 ∪α3| ≥|X|/2.
If ( i ), it follows that |α2| > |X|/2. Let ⃗v∗= (v∗
1, v∗
2, v∗
3) be
any strategy proﬁle such that v∗
2(p) = ⊥for all p ∈Φ2 ∪α2,
and v∗
1(r) = ⊥. Then, (v∗
1, v∗
2, v∗
3) |= ¬MAJ and (v∗
1, v∗
2) |=
r ↔s. Hence, (v∗
1, v∗
2, v∗
3) satisﬁes both γ1 and γ2, but not γ3.
Observe, however, that player 3 cannot get their goal satisﬁed
by playing any other strategy, and we may conclude that ⃗v∗is a
Nash equilibrium of G(Pψ, α).
Now assume (ii). Then there is a X′ ⊆α1 ∪α3 such that
|X′| = |X|/2. Let x∗: X →{⊤, ⊥} be the partial valuation
such that x∗(p) = ⊤if and only if p ∈X′. Having assumed
that ψ(X, Y, Z) is accepted as an instance of HALF-QBF3,∀,
there is some y∗: Y →{⊤, ⊥} with (x∗, y∗, z) |= ψ for all
z : Z →{⊤, ⊥}. Deﬁne the strategy proﬁle ⃗v∗= (v∗
1, v∗
2, v∗
3)
such that, for all p ∈Φ1 ∪α1 and q ∈α3,
v∗
1(p) =
⎧
⎪
⎨
⎪
⎩
⊤if p ∈X′ and x∗(p) = ⊤,
or p ∈Y and y∗(p) = ⊤,
⊥otherwise
v∗
3(q) =

⊤if q ∈X′ and x∗(q) = ⊤,
⊥otherwise.
Authorized licensed use limited to: University of Maryland College Park. Downloaded on January 28,2021 at 08:21:04 UTC from IEEE Xplore.  Restrictions apply. 

26
IEEE TRANSACTIONS ON ARTIFICIAL INTELLIGENCE, VOL. 1, NO. 1, AUGUST 2020
Let furthermore v∗(p) = ⊥for all p ∈Φ2 ∪α2. Observe that
thus both ⃗v∗|= EQ(X) and ⃗v∗|= ψ. Accordingly players 1
and 3 have their respective goals γ1 and γ3 achieved at ⃗v∗, and
have no incentive to deviate. Finally, to see that player 2 does
not have such an incentive either, and thus that ⃗v∗is a Nash
equilibrium, consider an arbitrary strategy v′
2 for player 2. If
there is some p ∈α2 ∩X such that v′
2(p) ̸= v∗
2(p), then v′(p) =
⊤. Hence neither (v∗
1, v′
2, v∗
3) |= EQ(X) nor (v∗
1, v′
2, v∗
3) |=
¬MAJ(X). Now consider the case where v′
2(p) = v∗
2(p) for all
p ∈α2 ∩X and v′
2(p) ̸= v∗
2(p) for some p ∈Y ∪{s}. Because
ψ(X, Y, Z) is accepted as an instance of HALF-QBF3,∀, it then
holds that (v∗
1, v′
2, v∗
3) |= ψ. In either case we may conclude that
(v∗
1, v′
2, v∗
3) ̸|= γ2 and that player 2 does not want to deviate.
For the opposite direction, assume for contraposition that
ψ(X, Y, Z) is not accepted as an instance of HALF-QBF3,∀. Then,
there is some x: X →{⊤, ⊥} with x(p) = ⊤for exactly half
of the variables p ∈X such that for all y: Y →{⊤, ⊥} we can
ﬁnd a z : Z →{⊤, ⊥} such that (x, y, z) ̸|= ψ. Let X⊤= {p ∈
X : x(p) = ⊤} and X⊥= {p ∈X : x(p) = ⊥}. Now consider
the allocation α that assigns control over all variables in X
to player 3, i.e., α1 = α2 = ∅and α3 = X. We show that the
Boolean game G(Pψ, α) does not admit a Nash equilibrium. To
this end, consider an arbitrary strategy proﬁle ⃗v = (v1, v2, v3).
First observe that, if ⃗v(p) |= EQ(X), it is not the case that
v3(p) = ⊤for exactly half of the variables in X. Hence, player 3
would deviate to such a strategy to get their goal achieved, and
⃗v is not a Nash equilibrium.
For the remainder of the proof we may therefore assume
that ⃗v |= EQ(X). Now suppose furthermore that ⃗v |= ψ and,
without loss of generality, that ⃗v |= r. Having assumed that
ψ(X, Y, Z) is not accepted as an instance of HALF-QBF3,∀,
it follows that there is a strategy v′
2 for player 2 such that
(v1, v′
2, v3) |= ¬ψ. We may also stipulate that v′
2(s) = ⊥, and
hence (v1, v′
2, v3) |= (r ↔¬s). Accordingly, (v1, v′
2, v3) |= γ2
and again it follows that ⃗v is not a Nash equilibrium.
Finally assume that ⃗v |= EQ(X) ∧¬ψ. Then, if ⃗v |= r ↔s,
it can easily be seen that player 2 would like to deviate by setting
s to the opposite value of r under ⃗v. If, on the other hand, ⃗v ̸|=
r ↔s, player 1 would like to deviate by matching the value of
r to that of s under ⃗v. In either case, ⃗v is not a Nash equilibrium,
which concludes the proof.
One consequence of Proposition 3 is that we can now easily
establish Σp
3-hardness for the variant of the strong delegation
problem where we allow N (P, α) to be empty. This problem
we refer to as STRONG PRINCIPAL DELEGATION-Ø and is formally
deﬁned as follows.
STRONG PRINCIPAL DELEGATION-Ø
Given:
A partial game P with ΦU as the set of unallocated
variables, and an objective Υ in L(Φ)
Problem:
Does there exist an allocation α: ΦU →N such that
Υ is satisﬁed in all Nash equilibria of the Boolean
game G(P, α)?
We now have the following intermediate result.
Proposition 4: STRONG PRINCIPAL DELEGATION-Ø is Σp
3-
complete. The problem remains Σp
3-hard even when restricted
to three-player games.
Proof: Let P be a partial game and Υ a principal’s objective.
Then, by the laws of ﬁrst-order logic, we have that there is an
allocation α ∈A (P) such that ⃗v |= Υ for all Nash equilibria ⃗v
of G(P, α) if and only if it is not the case that for all allocations
α ∈A (P) there is a Nash equilibrium ⃗v of G(P, α) with
⃗v |= ¬Υ. Hence, the function f that maps every pair (P, Υ)
to (P, ¬Υ) serves as a many-one reduction from STRONG PRIN-
CIPAL DELEGATION-Ø to the complement of OBLIVIOUS PARTIAL
GAME. Observing that for Υ′ = ¬Υ we have ¬Υ′ = ¬¬Υ ≡Υ,
we ﬁnd that it serves equally well as a many-one reduction
from the complement of OBLIVIOUS PARTIAL GAME to STRONG
PRINCIPAL DELEGATION-Ø. As by Proposition 3 we know that
OBLIVIOUS PARTIAL GAME is Πp
3-complete, we may conclude
that STRONG PRINCIPAL DELEGATION-Ø is Σp
3-complete as well.
Although STRONG PRINCIPAL DELEGATION-Ø admits problem
instances which are accepted in the case that N (P, α) = ∅,
whereas the form of STRONG PRINCIPAL IMPLEMENTATION does
not allow this, it is not difﬁcult to show that the additional
constraint cannot make the strong delegation problem increase
in complexity. Speciﬁcally, we are now in a position to prove
the main result of this section.
Theorem 2: STRONG PRINCIPAL IMPLEMENTATION is Σp
3-
complete. The problem remains Σp
3-hard even for three-player
games.
Proof: We recall that instances of
STRONG
PRINCIPAL
IMPLEMENTATION
are given by pairs (P, Υ) with P =
(N, Φ.Φ1, . . . , Φn, γ1, . . . , γn) a partial Boolean game and Υ
a propositional function. Let and ΦU ⊆Φ the set of unallocated
decisions. Then, (P, Υ) is accepted as an instance of STRONG
PRINCIPAL IMPLEMENTATION if and only if
∃α(∀v(v ∈N (P, α) →v |= Υ) ∧N (P, α) ̸= ∅),
which is equivalent to,
∃α(∀v(v ̸∈N (P, α) ∨v |= Υ) ∧N (P, α) ̸= ∅).
In order for N (P, α) to be non-empty, it must contain at least
one valuation w. Hence we can rewrite the expression as,
∃(α, w)(∀v(v ̸∈N (P, α) ∨v |= Υ) ∧(w ∈N (P, α)))
To keep notation brief, we express the condition above as
∃(α, w)∀v χ1(α, w, v). Similarly the condition v ̸∈N (P, α)
is witnessed by an player i together with a partial valuation ui
of decisions in their control, i.e., v ̸∈N (P, α) is captured by,
∃(u, i)(v ̸|= γk ∧(v−i, ui) |= γk ∧u ∈{⊤, ⊥}Φi∪αi),
which we subsequently express as ∃(u, k)χ2(α, v, u, i).
Finally that w ∈N (P, α) requires that no j has a beneﬁcial
deviation in the event of w ̸|= γj by controlling the values of
Φi ∪αi. This leads to w ∈N (P, α) being of the form
∀(s1, s2, . . . , sn)
n

j=1
(w |= γj ∨sj ̸∈{⊤, ⊥}Φi∪αj
∨(w−j, sj) |= γj)
which will be denoted as ∀⃗s χ3(⃗s, w, α). Combining these
expressions, it is immediate that (P, Υ) will deﬁne a positive
Authorized licensed use limited to: University of Maryland College Park. Downloaded on January 28,2021 at 08:21:04 UTC from IEEE Xplore.  Restrictions apply. 

DUNNE et al.: DELEGATING DECISIONS IN STRATEGIC SETTINGS
27
instance of PRINCIPAL STRONG DELEGATION if and only if
∃(α, w)∀(v,⃗s)∃(u, i)(χ1(α, w, v)
∧χ2(α, v, u, i) ∧χ3(⃗s, w, α))
It remains to note that the individual tests χ1, χ2 and χ3 can
be performed in time polynomial in the size of the representing
formulae.
For Σp
3-hardness, we reduce HALF-QBF3,∀to the comple-
ment of STRONG PRINCIPAL DELEGATION using a construction
that varies on the one presented in the proof for hardness of
OBLIVIOUS PARTIAL GAME in Proposition 3. Given an instance
ψ(X, Y, Z) of HALF-QBF3,∀, we thus construct a partial game P ′
ψ
and deﬁne an objective Υ′ such that ψ(X, Y, Z) is an accepting
instance of HALF-QBF3,∀if and only if for all allocations α ∈
A (P ′
ψ), either there is some ⃗v ∈N (G(P ′
ψ, α)) with ⃗v ̸|= Υ′ or
N (G(P ′
ψ, α)) = ∅.
Thus let ψ(X, Y, Z) be an instance of HALF-QBF3,∀. Then,
we construct the ﬁve-player partial Boolean game P ′
ψ, with
players 1, 2, and 3, such that
Φ1 = Y ∪{r}
Φ2 = Z ∪{s}
Φ3 = {t}
ΦU = X.
Furthermore, deﬁne the players’ preferences as follows:
γ′
1 = ((EQ(X) →ψ) ∨(r ↔s)) ∧¬t
γ′
2 = ((EQ(X) ∧¬ψ ∧(r ↔¬s)) ∨¬MAJ(X)) ∧¬t
γ′
3 =
EQ(X)
Here r, s, and t are fresh variables, and MAJ(X) and EQ(X)
are as before. Let, moreover, Υ′ = t. Again, this construction
can be effected in polynomial time.
Now assuming that ψ(X, Y, Z) is an accepted instance of
HALF-QBF3,∀, we can reason along analogous lines as in the proof
of Proposition 3, that a Nash equilibrium⃗v of G(P ′
ψ) with⃗v ̸|= t
is guaranteed to exist.
For the opposite direction, assume that ψ(X, Y, Z) is not an
accepted instance of HALF-QBF3,∀. By considering the allocation
α ∈A (P ′
ψ) with α3 = X, we ﬁnd, in an analogous way as in the
proof of Proposition 3, that G(P ′
ψ, α) has no Nash equilibrium⃗v
with ⃗v ̸|= t. Now, conclude the proof by noting that any strategy
proﬁle ⃗w = (w1, w2, w3) such that w3(t) = ⊤and w3(p) = ⊤
for exactly half of the propositional variables p ∈X, will be a
Nash equilibrium in G(P ′
ψ, α), be it one with ⃗w |= t. To see this,
observe that in ⃗w, player 3 has their goal fulﬁlled. This is not
the case for players 1 and 2, but no matter how they deviate,
t will remain true and falsify their respective goals γ1 and γ2.
Hence, ⃗w ∈N (G(P ′
ψ), α), and a fortiori N (G(P ′
ψ, α)) ̸= ∅,
as desired.
IV. DELEGATION AS OPTIMISATION
So far, we have assumed that the principal is motivated
to choose an allocation so that an objective Υ is satisﬁed in
equilibrium; the idea being that the objective represents what
the principal wants to achieve through delegation. We now gen-
eralise this approach, by assuming that in delegating decisions,
the principal is attempting to maximise some objective function
of the form:
f : V (Φ) →R+,
where V (Φ) is the set of valuations over Φ: Thus, an objective
function assigns a positive real number f(v) to every valuation
v in V (Φ). Recalling that a strategy proﬁle⃗v for a Boolean game
corresponds to a valuation in V (Φ), we will also write f(⃗v) to
mean the value through f of the valuation corresponding to ⃗v.
Notice that our original formulation of delegation with respect to
objective formulae Υ is a special case of the setting we are now
considering, where the function fΥ is deﬁned for an objective
formula Υ ∈L as follows:
fΥ(⃗v) =

1 if ⃗v |= Υ
0 otherwise.
The objective function f gives the value to the principal of every
outcome ⃗v. But how can we use f to obtain the value of an
allocation ? An allocation α for a partial game P will deﬁne
a Boolean game G(P, α), and this game will in turn have an
associated set of Nash equilibria N (G(P, α)). Our basic idea
is to deﬁne the value of an allocation α for a partial game P
through an objective function f to be the value of the worst
Nash equilibrium in N (G(P, α)) (cf., [17]). However, there
is a catch: what happens if N (G(P, α)) = ∅? In this case, we
say the value of α through f is undeﬁned. Formally, given a
partial game P, allocation α ∈A (P), and objective function
f : V (Φ) →R+, we denote the value of α through f as ˆf(P, α):
ˆf(P, α)
=

min{f(
⃗
v}): ⃗∈N (G (P, α))v
ifN (G(P, α)) ̸= ∅,
undeﬁned
otherwise.
Now, given a partial game P and an objective function f
as above, the
optimal allocation will intuitively be the one
that maximises the value of ˆf. Here, however, we must deal
with the situation where there is no allocation that leads to
a game with Nash equilibria. Recalling that S (P) = {α ∈
A (P): N (G(P, α)) ̸= ∅}, wearethus interestedinallocations
that maximise the function ˆf(·, ·) on S (P), i.e., allocations α
such that
α ∈arg max
α∈S (P )
ˆf(P, α).
To ﬁx ideas and notations, we have the following example.
Example 6: We work with the partial game introduced in
Example 1. Consider the objective function f deﬁned such
that f(v) = |{x ∈Φ: v |= x}|, i.e., f counts the number of
variables assigned ⊤in a valuation. Intuitively, f could be seen
as measuring the level of effort needed to get the government’s
policy through parliament. Hence,
f(¯t¯c¯a) = 0
f(¯t¯ca) = f(¯tc¯a) = 1
f1(¯tca) = 2
f(t¯c¯a) = 1
f(t¯ca) = f(tc¯a) = 2
f1(tca) = 3
Inspecting Fig. 2, we ﬁnd that ˆf(P, αa|t|c) = 2 because a¯tc is
the unique Nash equilibrium in G(P, αa|t|c) and f(a¯tc) = 2. By
similar reasoning, we ﬁnd that ˆf(P, αc|a|t) = 3. As f assumes
Authorized licensed use limited to: University of Maryland College Park. Downloaded on January 28,2021 at 08:21:04 UTC from IEEE Xplore.  Restrictions apply. 

28
IEEE TRANSACTIONS ON ARTIFICIAL INTELLIGENCE, VOL. 1, NO. 1, AUGUST 2020
a maximal value of 3, it thus follows that αc|a|t is optimal with
respect to f. Observe that ˆf(P, αt|c|a) is undeﬁned as there are
no equilibria in G(P, αc|t|a).
◁
Next, we want to consider the problem of computing
arg maxα∈S (P ) ˆf(P, α) . A key difﬁculty here is with respect to
the issue of representing the objective function f. Representing
the function f in a problem instance by explicitly listing all
input/output pairs (⃗v, f(⃗v)) will not be practicable, as there will
be 2|Φ| such pairs in total. We need a compact representation
for f, and for the purposes of this paper, we use a well-known
scheme based on weighted Boolean formulae (see, e.g., [9]).
Formally, we will say a feature is a pair (φ, x), where φ ∈L
is a propositional formula, and x ∈R+ is a positive real num-
ber. A feature set, F, is simply a ﬁnite set of features, i.e.,
F = {(φ1, x1), . . . , (φk, xk)}. Every feature set F induces an
objective function fF, as follows:
fF(⃗v) =

{xi : (φi, xi) ∈F and ⃗v |= φi}
The feature set corresponding to our original objective formula
Υ would be a singleton set {(Υ, 1)}. Now, standard arguments
from Boolean function theory tell us that ( i ) the feature set
representation is complete , in the sense that for every objective
function f there exists a feature set F such that f = fF, and ( ii
) the feature set representation is more compact than the explicit
representation for many objective functions f; however ( iii
) there are objective functions for which the smallest equivalent
feature set will be broadly of the same size, i.e., some objective
functions will require exponentially many features.
We ﬁrst consider the following decision variant of the optimal
delegation problem.
OPTIMAL DELEGATION
Given:
A partial game P, feature set F, and k ∈R+
Problem:
If the term maxα∈S (P ) ˆfF(P, α) is deﬁned, is it the
case that maxα∈S (P ) ˆfF(P, α) ≥k?
It is straightforward to establish the following:
Proposition 5: OPTIMAL DELEGATION is Σp
2-complete.
Proof sketch: Let partial game P, feature set F, and allo-
cation α be given. Then, the problem of determining whether
ˆfF(P, α) is deﬁned is Σp
2-complete. To see this, merely observe
that this problem is directly equivalent to determining whether
the game G(p, α) has a Nash equilibrium. At this point, notice
that the problem of deciding whether maxα∈S (P ) ˆfF(P, α)
is equivalent to checking whether S (P) ̸= ∅, which is Σp
2-
complete by the proof of Theorem 1. The claim then follows
immediately from these two observations.
With this result in place, we are can also address the compu-
tational complexity of the following function problem.
OPTIMAL DELEGATION*
Given:
A partial game P and feature set F
Provide:
Anallocationα thatmaximisesthefunction ˆfF(P, ·),
i.e., α ∈arg maxα∈S (P ) ˆfF(P, α), if S (P) ̸= ∅,
and ∅otherwise.
We can now state the main result of this section.
Theorem 3: OPTIMAL DELEGATION* is in FPΣp
2 .
Proof: Check whether α∗(P, fF) is deﬁned, and if not return
0. Otherwise, deﬁne a value μ as follows:
μ =

(φi,xi)∈F
xi
That is, μ is the largest value that an optimal allocation could
possibly take. We thus have:
0 ≤
max
α∈S (P )
ˆf(P, α) ≤μ.
We can then use binary search to ﬁnd the value ˆfF(P, α∗)
of an optimal allocation α∗maximising
ˆfF, by invok-
ing a Σp
2-oracle for the decision variant
OPTIMAL DEL-
EGATION
of the problem. We start by asking whether
maxα∈S (P ) ˆf(P, α) ≥1
2μ; if the answer is “no”, then we
ask whether maxα∈S (P ) ˆf(P, α) ≥1
4μ, while if the answer is
“yes”, we ask whether maxα∈S (P ) ˆf(P, α) ≥3
4μ, and so on.
We will converge to the value of the optimal allocation with at
most polynomially many queries to a Σp
2-oracle for the decision
variant OPTIMAL DELEGATION of the problem (cf., [13], p. 416).
Given the value of the optimal allocation, we can then ﬁnd an
optimal allocation with at most a further |N × Φ| queries to a
Σp
2-oracle.
□
V. THE DISTRIBUTED DELEGATION PROBLEM
Given a partial Boolean game, it may very well happen that
for some player the Nash equilibria under one allocation yields
them a higher payoff than the Nash equilibrium that arises under
another one. Thus, intuitively, the players’ preferences over out-
comes induce preferences over allocations. As players may have
a joint interest in some allocation being implemented rather than
another, they may beneﬁt from reallocating the propositional
variables amongst themselves. Accordingly, the game-theoretic
conceptofcorestability,inthesenseofstabilityagainstcoalition
deviations, becomes relevant.
It is worth observing that in Example 3 under both α and α′,
player 3 is assigned control over the same propositional variable
r. Still, player 1’s goal is satisﬁed in the Nash equilibrium that
emerges under α′, but not in the one under α. Thus, their pref-
erences over allocations are not only dependent on the variables
assigned to her control, but also on the way control over the
remaining variables is distributed over the other players. The
allocation of a particular set of propositional variables to one
player can thus be said to impose externalities on the other
players. In this respect, our setting differs from many other
allocation settings studied in the literature.
In order to systematically extend the players’ preferences over
outcomes to preferences over allocations, a couple of points
deserve attention.
First,whetheragroupofplayerswouldpreferareallocationα′
of the variables they have under their control under an allocation
α depends essentially on the outcomes that ensue under α and α′.
In the previous parts we used the concept of Nash equilibrium to
single these out. The allocation problem, however, is in principle
independent of this choice for Nash equilibrium, in the sense that
Authorized licensed use limited to: University of Maryland College Park. Downloaded on January 28,2021 at 08:21:04 UTC from IEEE Xplore.  Restrictions apply. 

DUNNE et al.: DELEGATING DECISIONS IN STRATEGIC SETTINGS
29
every other way to select outcomes under speciﬁc allocations de-
ﬁnes its own set of delegation problems. Second, Nash equilibria
in Boolean games, even when all variables are allocated, are
guaranteed neither to exist nor to be unique. In view of these
concerns, we augment the model with an outcome function,
which associates with each allocation of a given partial game
a unique outcome. This enables us to approach the (distributed)
delegation problem from a generic point of view, while still
allowing us concentrate on more restrictive outcome functions
that select Nash equilibria whenever they exist. In the latter
case, the outcome function basically plays the role of an oracle
breaking ties among the equilibria. If under some allocation no
Nash equilibria exist, we stipulate the outcome function to select
an outcome that is least preferred by all players.
Formally, an outcome function for a partial Boolean game P
is a function
h: A (P) →V (Φ) ∪{0},
where 0 is an additional null outcome such that ui(0) = 0 for
all players i. We say an outcome function h for a partial Boolean
game is Nash-consistent if h(α) selects a Nash equilibrium of
G(P, α), if there is one, and 0, otherwise.
We are now able to formally deﬁne the notions of stability that
we have sketched out above. Thus, we say that, given outcome
function h for a partial Boolean game P and allocation α, a
coalition S of players (strongly) blocks α under h if there is
some allocation α′ with α−S = α′
−S such that h(α′) ≻i h(α)
for all players i ∈S. We also say that S weakly blocks α under
h if both h(α′) ⪰i h(α) for all i ∈S, and h(α′) ≻i h(α) for
some i ∈S. Intuitively, S blocks an allocation α if the players
in S can reallocate the propositional variables under their control
among themselves such that h yields a outcome that better for
them all. Coalition S weakly blocks α, if the players in S can
reallocate the propositional variables under their control among
themselves such that h yields a outcome that is not worse for
any of the players in S and strictly better for some.
An allocation α is now said to be (weak) core stable under
outcome function h whenever there is no coalition (strongly)
blocking α under h. Allocation α is strong core stable, if no
coalition S weakly blocks it. To illustrate these notions, let us
consider an example.
Example 7: Three robbers have to cross a forest, through
which lead two roads, the high road and the low road. The
robbers, however, are quarrelsome and the forest is infested with
wolves, who will eat any solitary robber. If all three robbers
go one road together, they will quarrel, and subsequently be
mangled by the wolves. Any group of two, however, will survive.
They now have to decide whether to take the high road or the
low road, or they can have one of the others make the decision
for them. The question is now, who has to decide for whom
which road to take? Obviously, at most two of the robbers can
survive and we assume that surviving is the only thing they are
interested in.
The situation can be modelled as a partial Boolean game,
where p, q, and r are the decision variables for which road
robber 1, robber 2, and robber 3 takes: if a variable is set to true,
then the high road is taken, else the low road. For allocations, we
Fig. 4.
The partial Boolean game described in Example 7 under four different
allocations. Robber 1 chooses rows, robber 2 chooses columns, and robber 3
chooses matrices. In the pure Nash equilibria are indicated by the payoffs to the
players being underlined.
adopt the same conventions as in Example 4 and have αX|Y |Z
denote the allocation in which robbers 1, 2, and 3 are assigned the
variables in X, Y , and Z, respectively. Fig. 4 depicts the Boolean
games under allocations αa = αp|q|r, αb = αp|r|q, αc = αq|r|a,
and αd = αq|pr|.
First consider the outcome function h such that,
h(α) =
⎧
⎪
⎨
⎪
⎩
pq¯r
if α(p) = 2,
¯pqr
if α(p) = 3,
p¯qr
if α(p) = 1.
Then, trivially, every allocation is (weakly) core stable, as it can
easily appreciated that under h there are always at least two
robbers’ goals are satisﬁed at h(α) for every allocation α and
at least two dissatisﬁed robbers are required for an outcome to
be strongly blocked. By contrast, the game does not allow for
core stable allocations under h. To see this let α be arbitrary
allocation. Then, α is blocked by coalition {2, 3} if α(p) = 2,
by {1, 3} if α(p) = 3, and by {1, 2}, if α(p) = 1. Now, observe,
however, that h is not Nash consistent. For example, for alloca-
tion αb we have αb(p) = 1. Hence h(αb) = p¯qr, which however
fails to be a Nash equilibrium of G(P, αb) (see Fig. 4(b)).
Now let g be a Nash consistent outcome function with g(α) =
pq¯r and g(α′) = p¯q¯r. Then, coalition {2, 3} (weakly) blocks αa
and allocation αa is not strong Nash core stable under g. This
is in contrast to allocation αb, which is strong Nash core stable
under g, as, with some effort, can be veriﬁed by the reader.
◁
A ﬁrst question that naturally arises is if, and under which
conditions, stable allocations are guaranteed to exist. The fol-
lowing proposition settles this issue, and features an interesting
contrast between weak and strong core stability.
Proposition 6: Strong core stable allocations are not guar-
anteed to exist for partial Boolean games, not even under
Nash-consistent outcome functions. By contrast, core stable
allocations are guaranteed to exist in partial Boolean games,
even under general outcome functions.
Proof: For the ﬁrst part, consider the partial game P =
(N, Φ, Φ1, Φ2, Φ3, γ1, γ2, γ3) depicted in Fig. 5, where N =
Authorized licensed use limited to: University of Maryland College Park. Downloaded on January 28,2021 at 08:21:04 UTC from IEEE Xplore.  Restrictions apply. 

30
IEEE TRANSACTIONS ON ARTIFICIAL INTELLIGENCE, VOL. 1, NO. 1, AUGUST 2020
Fig. 5.
Partial Boolean game showing that strong Nash stable allocations are
not guaranteed to exist. Players 1, 2, and 3 control variables p (choosing rows), q
(choosing columns), and r (choosing left or right matrix), respectively. Variable
s is unassigned, i.e., ΦU = {s}, and the player who controls s decides whether
the outcome falls in the upper two matrices (s) or in the lower two matrices ¯s.
The three underlined outcomes, pqrs, ¯p¯q¯rs, and ¯p¯qr¯s, are the Nash equilibria of
the partial game, and they remain Nash equilibria of the Boolean games unless
s is assigned to player 3, player 2, or player 1, respectively.
{1, 2, 3}, Φ = {p, q, r, s}, Φ1 = {p}, Φ2 = {q}, and Φ3 = {r}.
Accordingly, ΦU = {s}, and there are three allocations, α1, α2,
and α3, each of which assigns control over s to player 1, player 2,
and player 3, respectively, i.e., αi(s) = i for 1 ≤i ≤3. The
three Nash equilibria of P are given by pqrs, ¯p¯q¯rs, and ¯p¯qr¯s.
Now consider outcome function h:
f(α) =
⎧
⎪
⎨
⎪
⎩
pqrs if α = α1
¯p¯q¯rs if α = α3
¯p¯qr¯s if α = α2
Moreover, it is easy to check that coalition {1, 3} weakly blocks
α1, coalition {2, 3} weakly blocks α3, and coalition {1, 2}
weakly blocks α2. We may conclude that strong core stable al-
locations are not guaranteed to exists for partial Boolean games.
Noting that h deﬁned to be Nash-consistent, it moreover follows
that strong Nash core stable allocations are not guaranteed to
exist either.
For the second part, consider an arbitrary partial game P and
outcome function h. Let α be an allocation that allocates all
unassigned propositional variables in ΦU to one player i. If α is
core stable under h, we are done, so assume that this is not the
case. Then, there is a coalition S and allocation α′ with α′
−S =
α−S such that uj(f(α)) = 0 and uj(f(α)) = 1 for all j ∈S.
Observe that i ∈S and that α′
k = ∅for all k /∈S. Now assume
for contradiction that there is a coalition T blocking α′, i.e., there
is an allocation α′′ with α′′
−T = α′
−T such that uk(f(α′)) = 0
and uk(f(α′′)) = 1 for all k ∈T. Without loss of generality, we
may assume that T is not empty, and hence α′′ ̸= α′. Observe
that T ⊆N \ S. Accordingly, α′
k = ∅for all k ∈T. It follows
that α′′ = α′, a contradiction. We may conclude the proof by
observing that this argument still holds if h is assumed to be
Nash consistent.
□
Wenowdeﬁnethedistributeddelegationproblem,whichasks,
for a given partial game, whether a stable allocation can be
foundthatsatisﬁestheprincipal’sobjective.Wesaythatoutcome
function h is polynomial if it yields h(α) in polynomial time on
input α. We state the problem generically, but one can vary as
to whether weak core stability or strong core stability is to be
considered, and whether the outcome functions are required to
be Nash consistent or not.
DISTRIBUTED DELEGATION
Given:
A partial Boolean game P and polynomial outcome
function h, and a formula Υ in L(Φ)
Problem:
Does there exist an allocation α that is core stable
under h such that Υ is satisﬁed at h(α)?
Before we show that DISTRIBUTED DELEGATION is not harder
than WEAK PRINCIPAL DELEGATION , we ﬁrst establish the com-
putational complexity of a the related problem of deciding
whether a given allocation is core stable in a given game under
a given outcome function. Formally, we deﬁne the problem
ALLOCATION STABILITY as follows.
ALLOCATION STABILITY
Given:
Partial game P, polynomial outcome function h, and
allocation α
Problem:
Is allocation α core stable under h in P?
We now have the following auxiliary coNP-completeness
result, of which the hardness part can be interpreted as saying
that allocation is coNP-hard even when restricted to polynomial
and Nash consistent outcome functions. For computationally
more complex outcome functions the problem may very well
become harder as well.
Proposition 7: ALLOCATION STABILITY is coNP-complete,
even if restricted to Nash-consistent outcome functions and
strong core stability.
Proof: To see that ALLOCATION STABILITY is in coNP, ob-
serve that for a given coalition S, and allocation α′, check
whether α−S = α′
−S and whether h(α) ̸|= γi and h(α′) |= γi
for all i ∈S. Under the prevailing assumptions, these checks
can all be performed in polynomial time. Then, α is not core
stable if and only if all these checks yield a positive answer.
ForcoNP-hardness,wereducefromthecomplementof SATIS-
FIABILITY. Given a propositional formula ϕ on the propositional
variables Φ = {p1, . . . , pk}, construct partial game Pϕ with ﬁve
players, 0, 1, 2, i⊥, and i⊤and deﬁned on {p, q, r} ∪Φ, where
p, q, and r are fresh variables not in Φ. Let Φ0 = {r}, and
Φ1 = Φ2 = Φi⊥= Φi⊤= ∅. Hence, ΦU = Φ ∪{p, q}. Let the
players’ goals be given by:
γ0 = ⊥
γ1 = γ2 = ϕ ∧pqr
γi⊥= γi⊤= pqr
Deﬁne v0 as the valuation with v0(x) = ⊥for all x ∈Φ ∪
{p, q, r}. Observe that v0 is a Nash equilibrium of Pϕ under
α for every allocation α. We now associate a valuation vα with
every allocation α. If α is such that α1 = {p} and α2 = {q} or
α1 = {q} and α2 = {p}, then let vα be such that vα(r) = ⊤
and for x ∈Φ ∪{p, q}:
vα(x) =
⎧
⎪
⎨
⎪
⎩
⊤if x ∈Φ and α(x) = i⊤, or
if x ∈{p, q}, α1 = {q}, and α2 = {p},
⊥otherwise.
Authorized licensed use limited to: University of Maryland College Park. Downloaded on January 28,2021 at 08:21:04 UTC from IEEE Xplore.  Restrictions apply. 

DUNNE et al.: DELEGATING DECISIONS IN STRATEGIC SETTINGS
31
For all other allocations α, set vα = v0. Now, deﬁne the outcome
function h∗such that h∗(α) = vα for all allocations α. It is worth
observing that h∗is Nash-consistent. Moreover, on input α, the
valuation h∗(α) can be computed in time polynomial in the size
of ϕ.
Now, let α∗be any allocation such that α0 = ∅, α∗
1 = {p}, and
α∗
2 = {q}. Accordingly, α∗
i⊥∪α∗
i⊤= Φ. Note that than vα∗|=
¯p¯q and that vα∗is sustained by a Nash equilibrium in G(Pϕ, α∗).
We now prove that:
α∗is Nash core stable under h∗iff ϕ is not satisﬁable.
First assume that ϕ is satisﬁable and that w: Φ →{⊥, ⊤} is a
witnessing valuation. Let α′ be the allocation such that α′
0 = ∅,
α′
1 = {q}, α′
2 = {p}, and
α′
i⊥= {x ∈Φ: w(x) = ⊥}
α′
i⊤= {x ∈Φ: w(x) = ⊤}.
Hence, vα′ |= pq and vα′ |= ϕ. Let S = {1, 2, i⊥, i⊤}. Then,
α∗
−S = α′
−S. As vα∗̸|= γi whereas vα′ |= γi for all i ∈S, coali-
tion S blocks α∗. Accordingly, α∗is not core stable. As h∗is
Nash-consistent, α∗is not Nash-core stable either.
For the opposite direction, assume that ϕ is not satisﬁable and
for contradiction that there is a coalition S and an allocation α′
such that α∗
−S = α′
−S, h∗(α∗) ̸|= γi and h∗(α′) |= γi for all i ∈
S. As v ̸|= γi for all valuations v and all i ∈{0, 1, 2}, it follows
that S = {i⊤, i⊥}. However, h∗(α′) ̸|= pqr for all allocations α′
with α∗
{0,1,2} = α′
{0,1,2}, and a contradiction ensues. Hence, α∗
is Nash core stable under h∗.
For strong Nash stability, the arguments are analogous, mod-
ulo a couple of obvious technical details.
Using similar proof techniques we now prove the main result
of this section. Here, as with ALLOCATION STABILITY , the hard-
ness part provides a lower bound that holds even for polynomial
and Nash-consistent outcome functions. For outcome functions
that are harder to compute, the problem may become harder
accordingly.
Theorem 4: DISTRIBUTED DELEGATION is Σp
2-complete, even
for Nash-consistent outcome functions and strong Nash core
stability.
Proof: As allocations are small relative to the input, we can
check for a given allocation α whether h(α) |= Υ, and, by virtue
of Proposition 7, we can consult a coNP-oracle to check whether
α is (strong) (Nash) core stable. Then, a (strong) (Nash) core
stable allocation α exists under h if and only if these two checks
yield postive answers. Overall, we obtain membership of Σp
2.
To see that DISTRIBUTED DELEGATION is in Σp
2-hard, we
reduce from
QBF2,∃. Let Q = ∃X∀Y ϕ be a
QBF2,∃in-
stance. We ﬁrst construct a partial Boolean game PQ =
(N, Φ, Φ1, . . . , Φn, γ1, . . . , γn) along with a polynomial and
Nash-consistent outcome function h∗and formula Υ such that
Q is valid if and only if there is a Nash core stable allocation α∗
under h∗in PQ.
Let PQ have nine players 0, i1, i2, i⊤, i⊥, j1, j2, j⊤, and
j⊥. Furthermore, let Φ = X ∪Y ∪{p, q, r}, where p, q, and r
are fresh variables not occurring in X ∪Y . Furthermore, set
Φ0 = {r} and Φi = ∅for any player i other than 0. Thus, ΦU =
X ∪Y ∪{p, q}. Deﬁne the players’s goal be given by:
γ0γi1 = ⊥
γi1 = γi2 =
ϕ ∨pqr
γi⊥= γi⊤= pqr
γj1 = γj2 = ¬ϕ ∧¯p¯qr
γj⊥= γj⊤= ¯p¯qr
With every allocation α we now associate a valuation vα. Let
us call an allocation α “ live ” if αi1 ∪αi2 = {p}, αj1 ∪αj2 =
{q}, X ⊆αi⊥∪αi⊤, and Y ⊆αj⊥∪αj⊤. For live allocations α
we set vα(r) = ⊤, and for all z ∈X ∪Y ∪{p, q}:
vα(z) =
⎧
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎩
⊤if z ∈X ∪Y and z ∈αi⊤∪αj⊤, or
if z ∈{p, q}, p ∈αi1, and q ∈αj1, or
if z ∈{p, q}, p ∈αi2, and q ∈αj2,
⊥otherwise.
For all other allocations α, set vα = v0. Now, deﬁne the
outcome function h∗such that h∗(α) = vα for all allocations α.
Observe that h∗is Nash-consistent. Moreover, on input α, the
valuation h∗(α) can be computed in time polynomial in the size
of α, which is again small relative to ϕ. Finally, let Υ = ϕ ∧pqr.
We prove that there is a core stable allocation α under h∗with
h∗(α) |= ϕ ∧pqr if and only if Q = ∃X∀Y ϕ is valid.
For the “if”-direction, assume that Q = ∃X∀Y ϕ is valid.
Then, there is a v: X →{⊥, ⊤} ∪{p, q, r} such that for all
w: Y →{⊥, ⊤}, we have that v ∪w |= ϕ and v′(p) = v′(q) =
v′(r) = ⊤. Then, there is also a live allocation α such that
h∗(α) = v. Hence h∗(α) satisﬁes ϕ ∧pqr. Now assume for
contradiction there is some coalition S blocking α, i.e., there
is some α′ with α−S = α′
−S such that ui(h∗(α′)) ≻i ui(h∗(α))
for all i ∈S. Because of the latter, we ﬁnd that α′ must be
a live allocation. Some reﬂection reveals that {j1, j2} ⊆S ⊆
{j1, j2, j⊥, j⊤} and that h∗(α′) ̸|= ϕ. It follows that h∗(α)(x) =
h∗(α′)(x) for all x ∈X. But then it would follow that h∗(α′) |=
ϕ, a contradiction.
For the “only if”-direction, assume that Q = ∃X∀Y ϕ is not
valid. Then for every v: X →{⊥, ⊤}, there is some w: Y →
{⊥, ⊤} such that v ∪w ̸|= ϕ. To show that there is no Nash
stable allocation α with h∗(α) satisfying ϕ ∧pqr, consider an
arbitrary α. Without loss of generality we may assume that α
is live, otherwise h∗(α) = v0 and h∗(α) ̸|= ϕ ∧pqr. Let S =
{j1, j2, j⊥, j⊤} and observe that h∗(α) ̸|= γj for j ∈S. Without
loss of generality, we may assume that α(p) = i1 and α(q) = j1.
By assumption, there is some valuation v′ with v′ |= ¬ϕ and
v′(x) = h∗(α)forallx ∈X.Somereﬂectionrevealsthatwecan
deﬁne an allocation α′ such that h∗(α′) = v′ and h∗(v) |= ¬ϕ ∧
¯p¯qr. Hence, h∗(α′) |= γj for all j ∈S. As moreover, α−S =
α′
−S, it follows that S blocks α under h∗, and we may conclude
that there is no Nash stable allocation α with h∗(α) |= ϕ ∧pqr.
A very similar construction shows that DISTRIBUTED ALLO-
CATION remains Σp
2-hard for strong Nash core stability.
It is worth observing that the outcome function is part of
the input of DISTRIBUTED DELEGATION. For speciﬁc (Nash-
consistent) outcome functions, the computational complexity
of the distributed delegation may need to be assessed indepen-
dently. For instance, one could be speciﬁcally be interested in
Authorized licensed use limited to: University of Maryland College Park. Downloaded on January 28,2021 at 08:21:04 UTC from IEEE Xplore.  Restrictions apply. 

32
IEEE TRANSACTIONS ON ARTIFICIAL INTELLIGENCE, VOL. 1, NO. 1, AUGUST 2020
Nash-consistent choice functions that for each allocation choose
a Nash equilibrium that maximises social welfare.5
VI. DISCUSSION, RELATED WORK, AND FUTURE DIRECTIONS
We have introduced and investigated the problem of how to
optimally delegate decisions to self-interested agents. We mod-
elledthisdelegationproblemusingthesettingofBooleangames.
We argued that Boolean games provide a natural framework
within which to model the delegation of Boolean decisions:
individual decisions naturally map to Boolean variables, owned
by individual agents. We distinguished between the principal
delegation problem, where one principal delegates decisions
to subordinate agents, and the distributed delegation problem,
where the subordinate agents can form coalitions and allocate
unallocated variables as they see ﬁt.
Our main results have been mainly negative, in the sense
that, even in the elemental Boolean games framework, they
all point to a high computational complexity of the various
delegation problems we have investigated in this paper. WEAK
PRINCIPAL DELEGATION , STRONG PRINCIPAL DELEGATION and
DISTRIBUTED DELEGATION are all at least Σp
2-hard, while OPTI-
MAL DELEGATION is FPΣp
2 -complete. By inspecting the proof
of Theorem 1 it can be recognised that the hardness of WEAK
PRINCIPAL DELEGATION reduces to the hardness of deciding
whether a Nash equilibrium exists in a Boolean game. This
raises the question whether the computational complexity of
the (principal) delegations problems could be brought down by
considering other solution concepts instead of Nash equilibrium
to single out the relevant outcomes under a given allocation.
In this context it is worth emphasising that Theorem 4 es-
tablishes that the computational complexity of DISTRIBUTED
DELEGATION is the same for general polynomial and (polyno-
mial) Nash-consistent outcome functions. This indicates that
the intractability of the distributed delegation problem cannot
(solely) be attributed to the computational hardness of checking
and ﬁnding Nash equilibria in Boolean games. The sheer number
of allocations, which is exponential in the number of unallocated
variables, seems to be a major culprit, and justiﬁes the expecta-
tion that many efﬁcient algorithms for the distributed delegation
problem will be based on limiting the number of allocations that
will have to be considered. In an similar vein, one could explore
the different ways in which the problems presented in this paper
can be restricted, e.g., by considering restrictions on the players’
goals or the principal’s objective function.
In our formal setting, we allow for allocations that concentrate
control over variables in only a very few agents, which may
be undesirable for many applications. Moreover, Section V
suggests the existence of a trade-off between stability of an
allocation and extreme concentration of power in a few agents.
5One could also deﬁne stability on allocation-equilibrium pairs: (α,⃗v) would
then be stable if for all coalitions S, all allocations α′ with α−S = α′
−S, and all
equilibria ⃗v′ under α, we have ⃗v ⪰i ⃗v′ for all i ∈S. By an argument analogous
to the proof of Theorem 1, it can then be shown that the accompanying decision
problem whether a stable pair (α,⃗v) with ⃗v satisfying objective Υ exists in a
partial game is Σp
2 -complete, and reduces to deciding the existence of a Nash
equilibrium in a Boolean game.
It would therefore be an interesting line of future research
to investigate the delegation problems in connection with the
various concepts of fairness, (social) welfare, and efﬁciency
(e.g., Pareto optimality) that have been suggested in the literature
(cf., e.g., [18], Part II).6
Our work can be seen to belong to a stream of work in
mechanism design in Boolean games, which investigates mech-
anisms so as to incentivise players to choose strategies that are
simultaneously desirable, commonly from a principal’s point
of view, and rational from a game theoretic perspective. The
mechanisms in point usually aim to modify the Nash equilibria
of the Boolean games by imposing taxes on the strategies that
are available to the players. This line of research was initiated by
[19] and was followed up by, e.g., [5], [20]–[24]. Our work on
the principal and distributed delegation problems in this paper
has a cognate motivation, but importantly differs in the way the
players’ incentives are engineered, namely by manipulating the
strategies they have at their disposal rather than by levying taxing
on playing them.
Thedelegationproblemisalsocloselyrelatedtotheprincipal-
agent problem studied in economics (see, e.g., [25]). A typical
setting for the principal agent problem is where a principal en-
gages the services of an agent to work on behalf of the principal,
typically for a fee. The basic issue studied in the principal-agent
problem is that the agent will be self-interested, and it may not
be feasible for the principal to observe the actions of the agent;
in which case, how can the principal be certain that the agent
is indeed acting in the principals interests? Typical solutions
to the principal-agent involve designing incentive schemes that
will help to align the preferences of the agent with those of the
principal.
Our work is also relevant to logics of propositional control
[26]–[28]. Originally developed in [26], these logics are specif-
ically intended to reason about scenarios in which a collection
of agents each have control over some set of Boolean variables.
In [27], Gerbrandy extended this work by also allowing agents to
share control over propositional variables. We should also point
to other formalisms for reasoning about delegation [29], [30].
However, in these other works, the focus is rather different to
out own. For example, in [29] the focus is on decentralised trust
management, while [31] presents a logic of delegation based on
the STIT (“see to it that”) operator. The use of logical systems
such as QBF and DCL-PC to analyse delegation would also be
worth pursuing in more detail.
Other directions for future research include looking at the
problem from the perspective of Stackelberg (leader-follower)
games, introducing costs to delegation actions, so that we can
consider secondary preferences over allocations, and of course
investigating tractable instances of the problem, and developing
efﬁcient heuristics for the decision problems we present.
REFERENCES
[1] P. Harrenstein, W. van der Hoek, J.-J. Meyer, and C. Witteveen, “Boolean
games,” in TARK VIII, 2001, pp. 287–298.
6We are grateful to an anonymous reviewers for this suggestion.
Authorized licensed use limited to: University of Maryland College Park. Downloaded on January 28,2021 at 08:21:04 UTC from IEEE Xplore.  Restrictions apply. 

DUNNE et al.: DELEGATING DECISIONS IN STRATEGIC SETTINGS
33
[2] P. Harrenstein, “Logic in conﬂict,” Ph.D. dissertation, Utrecht University,
2004.
[3] E. Bonzon, M. Lagasquie, J. Lang, and B. Zanuttini, “Boolean games
revisited,” in Proc. 17th Eur, Conf. Artif. Intell., 2006, pp. 265–269.
[4] P. E. Dunne, S. Kraus, W. van der Hoek, and M. Wooldridge, “Cooperative
Boolean games,” in Proc. 7th Int. Joint Conf. Auton. Agents Multiagent
Syst., Estoril, Portugal, vol. 2, 2008, pp. 1015–1022.
[5] M. Wooldridge, U. Endriss, S. Kraus, and J. Lang, “Incentive engineering
for Boolean games,” Artif. Intell., vol. 195, pp. 418–439, 2013.
[6] H. von Stackelberg, Marktform und Gleichgewicht. Julius Springer Verlag,
1934.
[7] M. J. Osborne and A. Rubinstein, A Course in Game Theory. The MIT
Press: Cambridge, MA, 1994.
[8] S. Kraus and M. Wooldridge, “Delegating decisions in strategic settings,”
in ECAI ’12, 2012, pp. 468–473.
[9] J. Uckelman, Y. Chevaleyre, U. Endriss, and J. Lang, “Representing
utility functions via weighted goals,” Math. Log. Quart., vol. 55, no. 4,
pp. 341–361, 2009.
[10] M. Mavronicolas, B. Monien, and K. W. Wagner, “Weighted Boolean
formula games,” in Algorithms, Probability, Netw., Games, C. Zaroliagis,
G. Pantziou, and S. Kontogiannis, Eds. Springer, 2015, pp. 49–86.
[11] D. Han, P. Harrenstein, S. Nugent, J. Philpott, and M. Wooldridge, “Be-
havioural strategies in weighted Boolean games,” Inf. Comput., 2020.
[12] M. Maschler, E. Solan, and S. Zamir, Game Theory. Cambridge U.P., 2013.
[13] C. H. Papadimitriou, Computational Complexity. Addison-Wesley, 1994.
[14] M. R. Garey and D. S. Johnson, Computers and Intractability: A Guide to
the Theory of NP-completeness. Freeman, 1979.
[15] P. E. Dunne, “The complexity of central slice functions,” Theor. Comput.
Sci., vol. 44, pp. 247–257, 1986.
[16] M. S. Paterson, N. J. Pippenger, and U. Zwick, “Optimal carry save
networks,” in Boolean Function Complexity, ser. L.M.S. Lecture Note
Series, M. S. Paterson, Ed. Cambridge U.P., 1992, vol. 169, pp. 174–201.
[17] E. Koutsoupias and C. Papadimitriou, “Worst-case equilibria,” in
STACS’99, 1999, pp. 404–413.
[18] F. Brandt, V. Conitzer, U. Endriss, J. Lang, and A. Procaccia, Eds.,
Handbook of Comput. Social Choice. Cambridge U.P., 2015.
[19] U. Endriss, S. Kraus, J. Lang, and M. Wooldridge, “Designing incentives
for Boolean Games,” in Proc. 10th Int. Conf. Auton. Agents Multiagent
Syst., 2011.
[20] P. Turrini, “Endogenous Boolean games,” in IJCAI’13, 2013, pp. 390–396.
[21] P. Turrini, “Endogenous games with goals: Side-payments among goal-
directed agents,” Auton. Agents Multi-Agent Syst., vol. 30, no. 5,
pp. 765–792, 2016.
[22] V. Levit, Z. Komarovsky, T. Grinshpoun, and A. Meisels, “Tradeoffs
between incentive mechanisms in Boolean games,” in Proc. Int. Joint Conf.
Artif. Intell., 2015, pp. 68–74.
[23] P. Harrenstein, P. Turrini, and M. Wooldridge, “Electric Boolean games:
Redistribution schemes for resource-bounded agents,” in Proc. 14th Int.
Conf. Auton. Agents Multiagent Syst., 2015, pp. 655–663.
[24] P. Harrenstein, P. Turrini, and M. Wooldridge, “Characterising the manip-
ulability of Boolean games,” in Proc. Int. Joint Conf. Artif. Intell., 2017,
pp. 1081–1087.
[25] J.-J. Laffont and D. Martimort, The Theory of Incentives: The Principal-
Agent Model. Princeton U.P., 2001.
[26] W. van der Hoek and M. Wooldridge, “On the logic of cooperation and
propositional control,” Artif. Intell., vol. 64, pp. 81–119, 2005.
[27] J. Gerbrandy, “Logics of propositional control,” in Proc. 5th Int. Conf.
Auton. Agents Multiagent Syst., 2006, pp. 193–200.
[28] W. van der Hoek, D. Walther, and M. Wooldridge, “Reasoning about the
transfer of control,” J. Artif. Intell. Res., vol. 37, pp. 437–477, 2010.
[29] N. Li, B. N. Grosof, and J. Feigenbaum, “Delegation logic: A logic-based
approach to distributed authorization,” ACM Trans. Inf. Syst. Secur., vol. 6,
no. 1, pp. 128–171, 2003.
[30] G. Boella and L. Torre, “Delegation of power in normative multiagent
systems,” in DEON’06, 2006, pp. 36–52.
[31] T. J. Norman and C. Reed, “Group delegation and responsibility,” in Proc.
Int. Conf. Auton. Agents Multiagent Syst., 2002, pp. 491–498.
Paul E. Dunne studied with the Universities of Edinburgh and Warwick and
is a Professor of Computer Science with the University of Liverpool, where he
has been based since 1985. He has authored or coauthored and researched in
a wide range of ﬁelds including Boolean Function Complexity, Combinatorial
analyis of phase-transition phenomena, algorithmic and complexity aspects of
multiagent systems, and complexity of formal argumentation. He is the author
of three books, in addition to over one hundred specialist journal articles.
Paul Harrenstein is a Postdoctoral Research Associate with the Department
of Computer Science, the University of Oxford, where he is also Stipendiary
Lecturer at Hertford College. His work focusses on both the cooperative and
noncooperative aspects of interaction in multiagent systems, while applying
methods from computational social choice and game theory. He has coauthored
28 journal papers in both economics and computer science, along with one book
chapter.
Sarit Kraus is a Professor of Computer Science with Bar-Ilan University, Israel.
Her research is focused on intelligent agents and multi-agent systems (including
people and robots). Kraus was awarded the IJCAI Computers and Thought
Award, the ACM SIGART Autonomous Agents Research award, ACM Athena
Lecturer, the EMET prize and was twice the winner of the IFAAMAS inﬂuential
paper award. She is a fellow of AAAI, ECCAI, and ACM, and was the recipient
of an ERC Advanced grant.
Michael Wooldridge is a Professor of Computer Science and Head of Depart-
ment of Computer Science with the University of Oxford, where he is a Fellow
of Hertford College. He has been an AI Researcher since 1989, and has authored
or coauthored more than 400 scientiﬁc articles on the subject. He is a Fellow
of the Association for Computing Machinery (ACM), the Association for the
Advancement of AI (AAAI), and the European Association for AI (EurAI).
From 2014–16, he was President of the European Association for AI, and from
2015–17, he was President of the International Joint Conference on AI (IJCAI).
Authorized licensed use limited to: University of Maryland College Park. Downloaded on January 28,2021 at 08:21:04 UTC from IEEE Xplore.  Restrictions apply. 

