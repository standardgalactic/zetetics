Technological process planning by the use of neural networks
IZABELA ROJEK
Institute of Mechanics and Applied Computer Science, Kazimierz Wielki University, Chodkiewicza, Bydgoszcz, Poland
(RECEIVED March 25, 2015; ACCEPTED October 17, 2015)
Abstract
The central objective of the present author’s research is to develop a system supporting the design of a technological process
(a computer-aided process planning system) that functions similarly to a human expert in the field in question. The use of
neural networks makes the creation of such a system possible. The proposed method uses a system of three blocks of neural
networks, and involves the creation of neural networks to be used for the selection of machines, tools, and machining
parameters. These networks are built for each process operation separately; that is, a set of neural networks is created
for each selection. For the construction of models, different types of neural networks (multilayer networks with error back-
propagation, radial basis function, and Kohonen) with different structures were employed, and the networks that made the
best selections were identified. A method was also developed for the elimination of defects occurring during the production
process. When a defect comes to light, this method suggests changes to the technological process, thus improving the qual-
ity of that process. Guidelines for the elimination of defects are produced in the form of decision rules. Such a computer-
aided process planning system will be especially useful for process engineers who do not yet have sufficient experience in
the design of technological processes, or who have only recently joined a particular manufacturing enterprise and are not
fully familiar with its machines and other means of production (tools and instrumentation). It should be emphasized that
such a system performs an advisory role, and it is always the process engineer who makes the final decision. The neural
network models were tested on real data from an enterprise. A computer-aided process planning system based on rules
and neural network models enables the intelligent design of technological processes.
Keywords: Machine; Machining Parameters; Neural Network; Selection; Tool
1. INTRODUCTION
The technological process in mechanical engineering is a fun-
damental part of the production process that is directly related
to changes in the shape, size, surface quality, and physico-
chemical properties of the workpiece. This definition deter-
mines the function of the technological process, which is to
transform the workpiece from an initial state (semiproduct
or raw material) to the final state (finished product).
The traditional approach to the planning of a technological
process consists of an analysis of the drawing of the part and
of the implementation methods, and of the identification and
comparison of the technologies of parts with similar geomet-
rical elements, and then of the development of the manufac-
turing process. The manufacturing process is most often de-
veloped based on knowledge of technological processes for
similar parts (Feld, 2003). The process then involves a long
design time and a significant amount of routine and time-
consuming work.
Planning of technological processes has lost its traditional
character due to the possibility of using information technol-
ogy in the technological preparation of production. Automa-
tion, typification rules, and group technology also have an im-
pact on the development of methods for the design of
technological processes (Feld, 2003).
Over the years, approaches to the design of technological
processes have changed. The use of databases of ready-
made technological processes (systematic research of previous
solutions, use of alternative solutions from group technology,
use of data for modeling, and simulation of designed pro-
cesses) and the use of computer-aided design, computer-aided
process planning (CAPP), and their integration (through
shared databases and knowledge bases) are now common.
The first artificial intelligence technology used in CAPP
systems included expert systems with a knowledge base in
the form of frameworks, decision rules, and semantic net-
works. Contemporary technologies utilize fuzzy logic, neural
networks, genetic algorithms, and hybrid systems (Han &
Kamber, 2000; Hand et al., 2001; Klosgen & Zytkow,
2002; Larose, 2005; Russell & Norvig, 2009; Tadeusiewicz
et al., 2014). There is a tendency to produce hybrid systems
Reprint requests to: Izabela Rojek, Institute of Mechanics and Applied
Computer Science, Kazimierz Wielki University, Chodkiewicza 30, 85-
064 Bydgoszcz, Poland. E-mail: izarojek@ukw.edu.pl
Artificial Intelligence for Engineering Design, Analysis and Manufacturing (2017), 31, 1–15.
# Cambridge University Press 2016 0890-0604/16
doi:10.1017/S0890060416000147
1
https://doi.org/10.1017/S0890060416000147 Published online by Cambridge University Press

that include many combinations of the aforementioned artifi-
cial intelligence methods. Hybrid systems integrate artificial
intelligence methods that have many complementary features
and attributes. Such a hybrid allows the utilization of all the
assets of the individual methods, and so these hybrids provide
the possibility of creating better problem-solving methods.
The use of artificial intelligence in CAPP systems allows
inclusion of the experience of process engineers in the form
of knowledge included in knowledge bases and the making
of inferences during the design process, akin to human rea-
soning.
Combination of artificial intelligence with a CAPP system
results in an intelligent CAPP system. This is also emphasized
in past studies (Koh & Gunasekaran, 2006; Ming et al.,
2008). Integration of artificial intelligence methods can lead
to the creation of better and more accurate methods, which
could be used in this area of expertise. The most important
function of intelligent systems is drawing conclusions. Con-
temporary CAPP is an increasingly used artificial intelligence
method.
The central objective of the present author’s research is to
develop a system supporting the design of a technological
process (a CAPP system) that functions similarly to a human
expert in the field in question. The use of neural networks
makes the creation of such a system possible. Based on tech-
nological processes that have already been developed, it is
possible to teach neural networks to carry out such a design
process. The design of a technological process is a very com-
plex task, requiring a process engineer’s knowledge and ex-
perience. It can be divided into smaller tasks:
† creation of a technological process plan, in which the se-
quence of technological operations is defined; and
† for each operation in the technological process, the ap-
propriate selection of machine, tools, and machining pa-
rameters is defined.
Such a CAPP system will be especially useful for process
engineers who do not yet have sufficient experience in the de-
sign of technological processes, or who have only recently
joined a particular manufacturing enterprise and are not fully
familiar with its machines and other means of production
(tools and instrumentation). It should be emphasized that
such a system performs an advisory role, and it is always
the process engineer who makes the final decision.
2. CAPP OVERVIEW
The planning of technological processes is carried out in dif-
ferent ways. In the traditional approach, the process engineer
designs the technological process manually, without the as-
sistance of a computer. There are also IT systems, including
a technological database, supporting the work of the process
engineer. Azab and ElMaraghy (2007) describe mathematical
modeling for reconfigurable process planning on the back-
ground variant and generative process-planning systems.
Reconfigurable process planning is an important enabler of
changeability for evolving products and systems. The pro-
posed reconfigurable process-planning mathematical scheme
scales better with problem size compared with classical pro-
cess-planning models. Another paper (Lee et al., 2013)
describes the construction of a practical CAPP system for
hole making that satisfies the specific requirements of marine
engine machining. The applied examples (engine block and
cylinder header) described in the article are machined using
the proposed system. The CAPP system consists of a hole
manager, cutting sequence definition, and operation man-
ager, which are derived from a conventional knowledge-
based system.
There also exist solutions using neural networks for the
planning of particular elements included in the technological
process. An example is found in Al-Ghanim’s article (2002),
describing the ART neural network that supports the selec-
tion of machining parameters for a milling process. In another
example (Deb et al., 2006), the selection of machining opera-
tions is assisted by neural networks. Other authors (Joshi
et al., 2008) report setup planning and operation sequencing
using a neural network and genetic algorithm. The operation-
sequencing problem is converted into a traveling salesman
problem in which the objective function is to reduce total
cost. To solve such problems efficiently, a genetic algorithm
technique is more suitable. The work describes results for
prismatic parts. A further article (Rana et al., 2013) presents
an application of a neural network for the fast identification
of optimal or near-optimal operation sequences for rotational
parts. Other authors (Klancnik et al., 2008) describe the use of
a self-organizing map (SOM) neural network for the predic-
tion of a tool-path strategy in milling to obtain the best possi-
ble quality of the machined surface. Another article (Marko-
poulos et al., 2008) describes neural network models created
for the prediction of surface roughness in electrical discharge
machining.
These articles usually describe the application of computer
techniques for solving single tasks, such as the prediction of
surface roughness in electrical discharge machining, or the
selection of machining parameters. Unfortunately, there is a
visible lack of an integrated approach to technological pro-
cess planning as a whole.
The author’s earlier publications also include models of
neural networks for tool selection in process planning (Rojek,
2008, 2010). Those papers present neural networks as models
for classification in intelligent CAPP systems. For the con-
struction of classification models, three types of neural net-
works were used: linear network, multilayer network with er-
ror backpropagation (MLP), and radial basis function
network (RBF). The classification models were compared
for their ability to produce the best classification. Classifica-
tion models were constructed for tool selection for selected
manufacturing operations: turning, milling, and grinding.
The models for milling were presented in detail.
The present work concerns the development of a CAPP
system whose functions include the design of essential
I. Rojek
2
https://doi.org/10.1017/S0890060416000147 Published online by Cambridge University Press

elements of a technological process, and so it can be said to
describe a method of technological process design in which
neural networks are used in a comprehensive manner.
As well as the method of technological process design, a
case study is presented involving the selection of appropriate
machines, tools, and machining parameters for a milling op-
eration at a real manufacturing enterprise. The goal of the re-
search was to develop the best neural networks for selecting
particular elements of the technological process.
Neural networks are used here for the selection of ma-
chines, tools, and machining parameters, namely, all ele-
ments that are chosen for each technological operation of
the technological process. The set of operations creates a tech-
nological process. For each selection, models are constructed
in the form of MLP, RBF, and Kohonen neural networks for
different processes: milling, grinding, turning, and so on. The
best neural networks were chosen based on the quality of the
selections made.
A method was also developed for the elimination of defects
occurring in the course of the manufacturing process. This
method uses decision rules. When such a defect comes to
light, the process engineer can use this method to determine
how to adapt the technological process so that such a defect
does not occur in the future. This method improves the quality
of the technological process.
A support system based on intelligent models makes it pos-
sible to create scenarios for the selection of different compo-
nents for technological operations. The models created are
therefore able to improve the technological processes. The
models were tested on real data from an enterprise.
3. METHODS
3.1. Theories of neural networks
Neural networks are selected as data-mining algorithms.
Neural networks are very good tools for extracting patterns
from databases. This property enables the performance and
automation of tasks hitherto reserved for humans. MLPs are
the most widespread and universal neural networks applied
to solving a variety of problems. In these networks, the selec-
tion of the number of neurons in the input layer is conditioned
by the dimension of the data vector x. The neural model con-
sists of the sum of input signals x1, x2, . . . , xN multiplied by
weight coefficients wi1, wi2, . . . , wiN and of an additional value
wi0. The output signal of the model is the sum of the elements,
and it is subsequently input intoa nonlinear sigmoidactivation
function. The error backpropagation algorithm is the basic al-
gorithm for supervised learning by many-layered one-way
neural networks. It depends on a change in the weights of
theinputsignalsofeveryneuronineverylayersothatthevalue
oftheerrorfor thenextlearning couples contained inthelearn-
ing file is minimized. For this purpose, it uses the gradient
method, the fastest drop (Tadeusiewicz et al., 2014).
RBF networks have several advantages compared with
MLP-type networks. They can model any nonlinear function
using their single hidden layer, which eliminates the need to
decide on the number of layers during the design stage. For
this reason, RBF networks can be trained quickly (the differ-
ence in training speed is around an order of magnitude;
Tadeusiewicz et al., 2014).
When calculating the MLP and RBF networks, the transi-
tion (activation) functions used for the neurons in the hidden
layer are optionally hyperbolic tangent, linear, logarithmic,
and exponential, and the functions used for the neurons in
the output layer are hyperbolic tangent, linear, or softmax.
The error functions used in the learning process are, option-
ally, the sum of squares function (SOS) and the cross entropy.
The cross entropy function is given by Eq. (1):
ECE ¼ 
X
N
i¼1
ti ln
 yi
ti

,
(1)
where N is the number of examples used, yi is the calculated
output value of the neural network, and ti is the real output
value from the data file.
In the learning process of MLP neural networks, the iterative
Broyden–Fletcher–Goldfarb–Shanno algorithm is used to per-
form the optimization computing (Neural Networks, 2015).
Kohonen networks are among the basic types of self-orga-
nizing nets. Thanks to their capacity for self-organization,
they open up completely new possibilities, one of which is
adaptation to previously unknown input data. SOMs, also re-
ferred to as Kohonen networks, are neural networks that are
associated with coordinates defined on a straight line, in a
plane, or in any n-dimensional space. The learning of this
type of network consists in changing the coordinates of the
neurons so that they strive to reach a pattern that conforms
to the structure of the analyzed data. This means that the net-
works “stretch” around data sets and adapt their structure to
them. Kohonen networks are usually one-way nets in which
each neuron is connected to all components of the N-dimen-
sional input vector x. The weight coefficients of neuron con-
nections create the vector wi. The input signals are normalized
at the start of the computation; that is, jjxjj ¼ 1. After
stimulation of the network by the input vector x, a kind of
competition occurs between the neurons, the winner ww
fulfilling the condition in Eq. (2):
dðx, wWÞ ¼ minlind(x, wi),
(2)
where d(x, wi) denotes the distance between vector x and vec-
tor wi in Euclidean space.
Each neuron is enclosed within a topological neighbor-
hood G(i, x), and in the classic Kohonen algorithm the func-
tion G(i, x) is defined as follows [Eq. (3)]:
G(i, x) ¼
1
for d(i, w)  R
0
for d(i, w) . R ,

(3)
where R denotes the neighborhood radius. When calculating a
Kohonen network, the radius R approximates to 0.
Process planning by the use of neural networks
3
https://doi.org/10.1017/S0890060416000147 Published online by Cambridge University Press

Detailed descriptions of neural networks can be found in a
number of publications (Larose, 2006; Haykin, 2008; Russell
& Norvig, 2009; Tadeusiewicz et al., 2014).
The following section describes trials conducted using
models based on MLP, RBF, and Kohonen artificial neural
networks.
3.2. Method of technological process planning using
neural networks
The technological process planning method uses a system of
three blocks of neural networks, and involves the creation of
neural networks for the selection of machines, tools, and ma-
chining parameters. These networks are built for each process
operation separately; that is, for each selection, a set of neural
networks is created. For the construction of models, different
types of neural networks (MLP, RBF, and Kohonen) with dif-
ferent structures were employed, and the networks that pro-
vided the best selections were identified.
A technological process can be defined as a sequence of in-
dividual technological operations; this forms the framework of
the technological process. After defining the framework of the
technological process for each process operation, a proper se-
lection of machines, tools, and machining parameters is
made using a system of three blocks of neural networks.
Following selection of the operational process, information
about the technological operation is transferred to the input of
the block for selection of the machine, tools, and machining
parameters. On the basis of the supplied input parameters, the
first neural network selects the machine and the second neural
network selects the tool. The results of these two networks are
transmitted together with the input parameters to the third
neural network for the selection of machining parameters.
The results of all three neural networks, consisting of the
code of the machine, the code of the tool, and the machining
parameters, are passed to a module that collects information
about the whole technological process. The design of the
technological process is completed when selections have
been made for all of the technological operations in the pro-
cess framework (Fig. 1).
Trials were performed for selected technological opera-
tions. The models for the milling operation will be presented
here in detail. Models were prepared in the form of different
types of neural network: MLP, RBF, and Kohonen networks.
For each type of network, the model parameters were varied
appropriately.
The neural networks were created using Statsoft STATIS-
TICA Data Miner, NeuralSolutions, and the author’s own
software.
4. CASE STUDY
4.1. Description of the Bohamet enterprise
Bohamet is a company offering a wide range of products. The
main areas of its operations are the following:
† production of parts for ships (windows, illuminators,
and wipers),
† production of industrial valves and fittings,
† production of glass,
† processing of metals, and
† products for the mining industry.
In its manufacturing operations, the company uses many
domestic suppliers, as well as contractors from other Euro-
pean countries. The high quality of Bohamet’s products is
confirmed by the numerous certificates of conformity with
standards and quality held by the company and its suppliers.
In order to ensure the highest quality of its products and ser-
vices, the company has obtained an ISO 9001:2000 certifi-
cate.
For the purposes of the present study, the processing of me-
tals at Bohamet was analyzed. Some parts are made as single
elements, while others can be classified as small- or medium-
series production. During the manufacture of its products, ba-
sic technological operations are performed, including cutting,
laser cutting, milling, rolling, grinding, threading, and so on.
(Bohamet, 2015). The developed approach was tested in a
real case scenario.
4.2. Production data
An analysis of the organizational structure of the company
and its production process constitutes the first stage of data
and knowledge acquisition for the intelligent CAPP system.
The method of designing the technological process and the
scope of the information collected also depend on the type of
manufacturing operations undertaken by the company. In this
case, the types of operations are single-item and small-series
production. These two types of manufacturing operations are
characterized by the large number of variants of products
made in small series or even as single elements. Their diver-
sity results in a low level of standardization.
The manufacturing data of the company focuses on three
basic groups of items (orders, products, and means of produc-
tion). The orders item is associated with data on schedules
and quantities of products to be manufactured. The products
item includes all data that describe the products (i.e., struc-
ture, geometry, material, technological data, technological
process, and product lifecycle). The means of production
item is associated with data that describe the company’s man-
ufacturing capacity (i.e., machines, instruments, and tools).
Data concerning orders, products, and means of production
are used when designing the technological process. The pro-
cess engineer uses information containing a large amount of
data, which is constantly modified. Data searching is per-
formed in accordance with specific criteria. Moreover, infor-
mation takes different forms (text and drawings) and is pres-
ent at different locations within the company. As a result,
quick access to accurate and current data is important.
The initial stage of the design of the technological process
after the engineering data is received is the preparation of the
I. Rojek
4
https://doi.org/10.1017/S0890060416000147 Published online by Cambridge University Press

framework technological process. Next, the framework tech-
nological process is supplemented with additional data on
technological operations. The next stages of designing the
technological process involve the selection of machines,
tools, and processing parameters for specific technological
operations. The last stage is the generation of a technological
process in the form of a process card and instructions for the
machining stations.
Manufacturing knowledge comes from many sources. Data
from catalogs and databases can be obtained easily. However,
if one wishes to acquire the knowledge, preferences, and ex-
perience of the process engineer, simple information tools are
not enough. It is necessary to create such models and tools
that will enable that knowledge to be contained in a computer
system. For this reason, in the present study, methods of ma-
chine learning (neural networks) were used.
In the past, a process engineer used tool catalogs, often in
paper form. The computer system did not record parameters
such as degree of wear of the machine, which often makes
it necessary to choose other machining parameters than those
indicated by the catalog. Then the process engineer applies
his or her knowledge, experience, and preferences. In tradi-
tional computer systems the preferences and experience of
the process engineer are not taken into account in CAPP.
Fig. 1. Method of technological process planning using neural networks.
Process planning by the use of neural networks
5
https://doi.org/10.1017/S0890060416000147 Published online by Cambridge University Press

Use of the engineer’s knowledge and experience is made pos-
sible by neural network models.
The content of the learning files for the neural networks
was prepared in consultation with a process engineer.
4.3. Selection criteria
For the purpose of the selection models, the following criteria
were determined:
† criteria for the selection of machines for technological
operations include the following factors: type and scope
of machining, dimensions of the workpiece, accuracy of
machining, production efficiency, anticipated load, and
hourly cost of operation of the machine;
† criteria for the selection of machining tools for techno-
logical operations include the following factors: method
of machining, shape of the machined surfaces, type and
accuracy of machining, production volume, material of
the machined object, and type of machine used; and
† the criteria for selection of the machining parameters are
significantly affected by the following factors: material
of the machined object, material of the tool blade, the
machine used, the type of machining, and requirements
relating to the quality of the surface.
5. RESULTS AND DISCUSSION
5.1. Machine selection
5.1.1. Data preparation
In order to prepare the learning data for neural networks, an
analysis of the machinery used at Bohamet was performed, in
particular in relation to the CNC machines: mills, mill-drills,
grinders, and turning lathes. The machine was selected sepa-
rately for each technological operation.
Based on the machine data and the selection criteria, a learn-
ing file was prepared for the MLP and RBF neural networks.
The following data are supplied at the input of the neural net-
work: type of operation (e.g., rough and finishing); X product
length (mm), Y product width/diameter (mm), Z product
height/diameter (mm), X size of the working space (mm), Y
size of the working space (mm), Z size of the working space
(mm), maximum diameter of tool (mm), length of tool (mm),
cost of operation of the machine (PLN/h), minimum rotational
speed (rpm), maximum rotational speed (rpm), maximum
working range f (mm/min), and machine power (power at the
spindle motor ¼ l kW). The machine code is obtained at the out-
put of the neural network. In the case of the Kohonen network,
the learning file contained both machine selection parameters
and the machine code as input. Figure 2 shows the inputs and
outputs of neural networks for machine selection. Table 1 con-
tains example data for the selection of a milling machine.
All the cases of machine selection in the database (521 re-
cords) were divided into a learning file (75% of the records), a
test file (15% of the records), and a validation file (10% of the
records). The neural network was taught using the learning
file and tested using the test file; in addition, its operation
was verified using the validation file. The validation file is
used to address the problem of overfitting of neural networks.
5.1.2. Neural networks supporting machine selection
For the MLP and RBF networks, the trials involved the
creation of neural network models with one hidden layer
and with two parameters: the number of neurons in the hidden
Fig. 2. Inputs and output of multilayer network with error backpropagation (MLP) and radial basis function (RBF) neural networks for
machine selection.
I. Rojek
6
https://doi.org/10.1017/S0890060416000147 Published online by Cambridge University Press

layer and the number of learning epochs. The neurons in the
hidden layer were selected experimentally. In the trial, the pa-
rameter defining the number of neurons in the hidden layer
took values from 5 to 30 (for MLP) and from 10 to 60 (for
RBF), while the second parameter, the number of learning
epochs, took values from 5 to 100.
In the case of the Kohonen network (SOM network), the
topology of the network (5  6, 10  10, and 15  15) and
the number of learning epochs were varied.
Figure 3 shows the parameters of the learning process for
MLP, RBF, and Kohonen neural networks. Among the pa-
rameters for the MLP and RBF networks, a determination
was made of the range of the number of neurons in the hidden
layer, the number of taught and retained neural networks, and
an error function. For the Kohonen network, a determination
was made of the network topology and learning parameters.
In addition, using the example of that network, a learning
and testing graph is shown.
Neural network models were constructed with different
stop conditions for the network learning process. The first
of the conditions was the number of epochs, and the second
was the attainment of a defined error value. Table 2 shows
the epoch number condition (100) and the error value attained
at that number of epochs.
For each condition for the end of the learning process, an er-
ror function (entropy and SOS function) was verified. After the
completion of each trial, tests were performed to provide infor-
mation on incorrectly classified decisions. The quality of a net-
work’s operation and its root mean square (RMS) error were
compared. In classifying networks, quality was calculated as
the ratio of correctly classified cases to all cases in the set.
Table 2 contains a summary of the neural networks for mill-
ing machine selection. For the purpose of learning MLP net-
works, the Broyden–Fletcher–Goldfarb–Shanno algorithm
was used. The RBF network was taught using the RBF training
algorithm. The RBF network was taught in two stages. In the
first stage, the radial functions, which use only input variables
from the data, were distributed. In the second stage, the weights
connecting the radial functions with the output neurons were
determined. In the case of the Kohonen network, network
learning was performed using the Kohonen method, which
consists in assigning cluster centers to the radial neuron layer.
The overall evaluation of a network was the classification qual-
ity measure given as a percentage. The table shows the RMS
error in the teaching, testing, and validation phases, as well
as the effectiveness of machine selection expressed in percent-
ages.
When analyzing neural networks (MLP, RBF, and Koho-
nen), one must note that their effectiveness is influenced by
the number of neurons in the hidden layer, the number of
learning cycles, and the error function. In addition, the activa-
tion functions in the hidden and output layers have an impact
in the case of MLP and RBF networks.
An analysis was also made of the outputs of the neural net-
works. Figure 4 shows a summary of the classification of
selections of particular machines. The summary contains
the total number of selections of each machine, the numbers
of cases correctly and incorrectly classified, and the same
numbers expressed as percentages. Following analysis of
the various neural network models, the Kohonen network
model (15-225) was chosen as the most effective for machine
selection (effectiveness 99.96%).
Table 1. Structure of the learning file for neural networks for machine selection (multilayer network with error backpropagation and
radial basis function network)
Example Data
Type of Operation
Neural Network Input
Rough
Rough
Rough
Finishing
Finishing
Finishing
X Product length/diameter (mm)
100
1000
1000
1250
400
750
Y Product width/diameter (mm)
20
200
800
620
250
500
Z Product height/diameter (mm)
30
100
900
560
250
160
X Working space size (mm)
800
3000
1400
1500
800
3000
Y Working space size (mm)
500
2100
1200
820
500
2100
Z Working space size (mm)
500
780
1100
700
500
780
Max. tool diameter (mm)
90
125
130
125
90
125
Tool length (mm)
250
350
400
300
250
350
Cost of operation of machine (PLN/h)
120
250
180
160
120
250
Min. rotational speed (rpm)
50
50
10
50
50
50
Max. rotational speed (rpm)
8000
6000
2000
6000
8000
6000
Max. working range f (mm/min)
10000
7000
2000
7000
10000
7000
Machine power (power at the spindle
motor; kW)
7.5
22
15
15
7.5
22
Neural Network Output
Machine code
LG 800
PRO 3210S
FEMCO_WBMC-100
HCMC 15/18
LG 800
PRO 3210S
Process planning by the use of neural networks
7
https://doi.org/10.1017/S0890060416000147 Published online by Cambridge University Press

Fig. 3. Parameters of the learning process for multilayer network with error backpropagation (MLP), radial basis function (RBF), and
Kohonen neural networks.
I. Rojek
8
https://doi.org/10.1017/S0890060416000147 Published online by Cambridge University Press

The accuracy and the degree of certainty of the neural net-
works were also assessed. Accuracy refers to the operation of
the network on new data, while the degree of certainty indi-
cates the relationship of new input data to a particular class
of patterns. Both parameters depend on the quality of classi-
fication of the neural network. The greater are the accuracy
and degree of certainty, the better is the classification capabil-
ity of the neural network. The same method was used to de-
velop neural network models for the selection of tools and
machining parameters.
Table 2. Parameters of the best multilayer network with error backpropagation (MLP), radial basis function network
(RBF), and self-organizing map network (SOM) for machine selection
Network Name
MLP
14-7-1
MLP
14-28-1
RBF
14-21-1
RBF
14-60-1
SOM
15-30
SOM
15-225
Network effectiveness (%)
72.65
93.41
91.54
97.82
94.11
99.96
Error (learning)
0.2308
0.0824
0.1126
0.0534
0.0507
0.0004
Error (testing)
0.4231
0.0659
0.1027
0.0575
0.0612
0.0002
Error (validation)
0.1667
0.0824
0.0985
0.0564
0.0648
0.0009
Learning algorithm
BFGS
BFGS
RBFT
RBFT
Kohonen
Kohonen
Number of epochs
100
100
100
100
100
100
Error function
Entropy
Entropy
Entropy
Entropy
Entropy
Entropy
Activation function in the
hidden layer
Exponential
Tanh
Gaussian
Gaussian
—
—
Activation function in the
output layer
Softmax
Softmax
Softmax
Softmax
—
—
Fig. 4. Summary of classification of machine selection. MLP, multilayer network with error backpropagation; RBF, radial basis function
network; SOM, self-organizing map network.
Process planning by the use of neural networks
9
https://doi.org/10.1017/S0890060416000147 Published online by Cambridge University Press

5.2. Tool selection
5.2.1. Data preparation
In order to prepare the learning data for neural networks, an
analysis was performed using Bohamet’s tools, which were
divided into drills, milling cutters, lathe tools, and grinding
wheels. The tools were selected separately for each techno-
logical operation.
Based on the tool data and the selection criteria, a learning
file was prepared for the MLP and RBF neural networks for
milling. The following data were supplied at the input of
the neural network: type of operation (e.g., rough, and finish-
ing), type of machined surface (e.g., groove, outline, and sur-
face), type of machined material (e.g., 316L), roughness (e.g.,
20), type of tool (e.g., connected or monolithic), type of mill-
ing cutter mounting (e.g., top-mounted), diameter of milling
cutter (mm), shape of milling cutter (cylindrical), number of
blades (e.g., 10), total length of milling cutter (mm), milling
speed vc (m/min), milling depth ap (mm), feed rate (mm/min),
cost of operation of the tool (PLN/h), and milling width ae
(mm). At the output of the neural network, the milling cutter
code was obtained. In the case of the Kohonen network, the
learning file contained both milling cutter selection parame-
ters and the milling cutter code as input.
All of the cases of tool selection in the database (553 re-
cords) were divided into a learning file (75% of the records),
a test file (15% of the records), and a validation file (10% of
the records). The neural network was taught using the
learning file and tested using the test file; in addition, its op-
eration was verified using the validation file. The validation
file is used to address the problem of overfitting of neural net-
works.
5.2.2. Neural networks supporting tool selection
For MLP and RBF networks, the trials involved the crea-
tion of neural network models with one hidden layer and
with two parameters: the number of neurons in the hidden
layer and the number of learning epochs. The neurons in
the hidden layer were selected experimentally. In the trial,
the parameter defining the number of neurons in the hidden
layer took values from 5 to 30 (for MLP) and from 10 to
60 (for RBF), while the second parameter, the number of
learning epochs, took values from 5 to 100.
In the case of the Kohonen network (SOM network), the to-
pology of the network (56, 1010, 1515, and 2020) and
the number of learning epochs were varied.
For each condition for the end of the learning process, an
error function (entropy and SOS function) was verified. After
the completion of each trial, tests were performed to provide
information on incorrectly classified decisions. The quality of
a network’s operation and its RMS error were compared. In
classifying networks, quality was calculated as the ratio of
correctly classified cases to all cases in the set.
Table 3 provides a summary of the neural networks for mil-
ling cutter selection. The overall evaluation of a network was
the classification quality measure given as a percentage. The
table shows the RMS error in the learning, testing, and vali-
dation phases, as well as the effectiveness of tool selection ex-
pressed in percentages. Following analysis of the various
neural network models, Kohonen network model (16-400)
was chosen as the most effective for tool selection (network
effectiveness 100%).
The accuracy and the degree of certainty of the neural net-
works were also assessed. Accuracy refers to the operation of
the network on new data, while the degree of certainty indi-
cates the relationship of new input data to a particular class
of patterns. Both parameters depend on the quality of classi-
fication of the neural network. The greater are the accuracy
and degree of certainty, the better is the classification capabil-
ity of the neural network.
For example, Figure 5 shows the accuracy of MLP net-
works (15-18-1 and 15-26-1). The first network has 15 in-
puts, 18 neurons in the hidden layer and 1 output; the second
has 15 inputs, 26 neurons in the hidden layer and 1 output.
The first network (15-18-1) has a quality classification of
98.33%, and the second network (15-26-1) 92.35%. Hence,
we conclude that there will be differences in accuracy. In
Table 3. Parameters of the best multilayer network with error backpropagation (MLP), radial basis function network (RBF),
and self-organizing map network (SOM) for tool selection
Network Name
MLP
15-18-1
MLP
15-26-1
RBF
15-26-1
RBF
15-58-1
SOM
16-225
SOM
16-400
Network effectiveness (%)
98.33
92.35
94.34
98.85
95.34
100.00
Error (learning)
0.0258
0.0954
0.0782
0.0213
0.0645
0.0000
Error (testing)
0.0000
0.0488
0.0356
0.0081
0.0287
0.0000
Error (validation)
0.0244
0.0854
0.0621
0.0241
0.0512
0.0000
Learning algorithm
BFGS
BFGS
RBFT
RBFT
Kohonen
Kohonen
Number of epochs
100
100
100
100
100
100
Error function
Entropy
SOS
Entropy
Entropy
Entropy
Entropy
Activation function in the
hidden layer
Linear
Tanh
Gaussian
Gaussian
—
—
Activation function in the
output layer
Softmax
Logarithmic
Softmax
Softmax
—
—
I. Rojek
10
https://doi.org/10.1017/S0890060416000147 Published online by Cambridge University Press

the graph below, the accuracy is represented by the value “in-
correct” or “correct.”
In the case of MLP 15-18-1 (the better network), there is
only one tool incorrectly classified, whereas with MLP 15-
26-1 (the inferior network) there are four incorrectly classified
tools for the same number of attempts to enter new data. The
accuracy is greater when the neural network has a higher qual-
ity classification.
An analysis was also made of the output of neural net-
works. Figure 6 shows a summary of the classification of se-
lections of particular tools. The summary includes the total
number of selections of each tool, the numbers of cases clas-
sified as correct and incorrect, and the same numbers ex-
pressed as percentages. In view of the large number of tools,
only a part of the analysis is shown.
5.3. Machining parameter selection
5.3.1. Data preparation
In order to prepare the learning data for the neural networks,
an analysis was performed of the technological processes with
regard to selection of the machining parameters for specific
machines and tools at Bohamet. The machining parameters
were selected separately for each technological operation.
Based on the machining parameter data and the selection
criteria, a learning file was prepared for the MLP and RBF
neural networks. The following data were supplied at the in-
put of the neural network: type of operation (e.g., rough and
finishing), type of machined material (e.g., 316L), selected
tool code, roughness (e.g., 20), machining depth ap (mm), mill-
ing width ae (mm),target depth (mm), and machine code. At the
outputoftheneuralnetwork,asetofparameterstobeconfigured
on the machine was obtained: feed rate (mm/min), machining
speed (m/min), duration of the operation (min), and tool service
life (min). In the case of the Kohonen network, the learning file
contained all of the parameters as input.
Allthecasesofmachiningparameterselectioninthedatabase
(617 records) were divided into a learning file (75% of the
records), a test file (15% of the records), and a validation file
(10% of the records). The neural network was taught using the
learning file and tested using the test file; in addition, its
operation was verified using the validation file. The validation
file is used to address the problem of overfitting of neural net-
works.
5.3.2. Neural networks supporting machining parameter
selection
For the MLP and RBF networks, the trials involved the
creation of neural network models with one hidden layer
and with two parameters: the number of neurons in the hidden
layer and the number of learning epochs. The neurons in the
hidden layer were selected experimentally. In the trial, the pa-
rameter defining the number of neurons in the hidden layer
took values from 5 to 30 (for MLP) and from 10 to 60 (for
RBF), while the second parameter, the number of learning
epochs, took values from 5 to 100.
In the case of the Kohonen network (SOM network), the to-
pology of the network (56, 1010, 1515, 2020, 2525,
and 3030) and the number of learning cycles were varied.
For each condition for the end of the learning process, an
error function (entropy and SOS function) was verified. After
the completion of each trial, tests were performed to provide
information on incorrectly classified decisions. The quality of
a network’s operation and its RMS error were compared. In
Fig. 5. Accuracy of multilayer network with error backpropagation neural networks (MLP).
Process planning by the use of neural networks
11
https://doi.org/10.1017/S0890060416000147 Published online by Cambridge University Press

classifying networks, quality was calculated as the ratio of
correctly classified cases to all cases in the set.
Table 4 shows a summary of the neural networks for mill-
ing parameter selection. The overall evaluation of a network
was the classification quality measure given as a percentage.
The table shows the RMS error in the teaching, testing, and
validation phases, as well as the effectiveness of selection ex-
pressed in percentages.
Following analysis of the various neural network models, the
Kohonen network model (8–900) was chosen as the most effec-
tive for machining parameter selection (effectiveness 100%),
but it required a long learning time and a large number of neu-
Table 4. Parameters of the best multilayer network with error backpropagation (MLP), radial basis function network
(RBF), and self-organizing map network (SOM) for machining parameter selection
Network Name
MLP
8-19-4
MLP
8-21-4
RBF
8-31-4
RBF
8-49-4
SOM
12-625
SOM
12-900
Network effectiveness (%)
94.17
97.77
95.24
98.98
96.55
100.00
Error (learning)
0.0284
0.0086
0.0232
0.0199
0.0352
0.0000
Error (testing)
0.0561
0.0261
0.0456
0.0235
0.0305
0.0000
Error (validation)
0.0904
0.0322
0.0811
0.0278
0.0378
0.0000
Learning algorithm
BFGS
BFGS
RBFT
RBFT
Kohonen
Kohonen
Number of epochs
100
100
100
100
100
100
Error function
SOS
Entropy
Entropy
Entropy
Entropy
Entropy
Activation function in the
hidden layer
Logarithmic
Tanh
Gaussian
Gaussian
—
—
Activation function in the
output layer
Exponential
Softmax
Softmax
Softmax
—
—
Fig. 6. Summary of classification of tool selection. MLP, multilayer network with error backpropagation; RBF, radial basis function
network; SOM, self-organizing map network.
I. Rojek
12
https://doi.org/10.1017/S0890060416000147 Published online by Cambridge University Press

rons to build the neural structure. The accuracy and the degree
of certainty of the neural networks were also assessed.
An analysis was also made of the outputs of the neural net-
works for machining parameter selection. The total effective-
ness of the networks is given in Table 4.
Figure 7 shows the menu of the developed system based on
neural networks for the selection of a milling machine,
milling tool, and machining parameters (a) and the result pro-
duced by the system for the milling operation (b). The system
was created using AITECH SPHINX.
5.4. Advantages and disadvantages of neural
networks
The application of neural networks to the design of a techno-
logical process has both advantages and disadvantages. A
very significant advantage is the ability to acquire the techno-
logical knowledge and experience of process engineers from
technological processes that have already been developed.
This knowledge and experience, contained within a computer
system, enables the design of technological processes by less
experienced engineers, who in this way avoid errors and thus
reduce losses to the enterprise.
A disadvantage of the use of neural networks is the complex-
ity of the CAPP system. Models for the selection of a machine,
tools, and machining parameters are developed for each techno-
logicaloperation separately (formilling, grinding, turning,etc.).
Moreover,thelearningfilesfortheneuralnetworkscontainboth
quantitative and qualitative parameters. Qualitative parameters
are also coded as zero-one sequences. For example, if for a
type of operation we have two values, “rough” and “finishing,”
this may be coded as follows:
† a rough operation by the sequence 01 and
† a finishing operation by the sequence 10.
In this case, one nominal value is replaced by two numerical
values. This means that due to qualitative parameters, the num-
ber of inputs and outputs of the neural network is increased. The
actual number of a network’s inputs and outputs depends on the
number of qualitative values considered. The neural networks
also require additional learning periodically as new data are re-
ceived. These data may include new machines and tools, as well
as additional examples of developed technological processes.
Furthermore, the knowledge contained in the system is spe-
cific to a particular enterprise. This means that such a CAPP
system is a universal tool because the technological process is
designed in a defined way, and the same neural network struc-
tures can be used. In contrast, the neural networks have to go
through a new learning process based on data and examples
for each enterprise.
5.5. Elimination of defects in technological operations
A method was also developed for the elimination of defects
occurring in the course of the manufacturing process. This
method uses decision rules. When such a defect comes to
light, the process engineer can use this method to determine
how to adapt the technological process so that such a defect
does not occur in the future. This method improves the quality
of the technological process. The guidelines for the milling
operation are presented in detail.
An analysis of tool catalogs can provide general guidelines
for the elimination of defects in milling. However, the real
knowledge and experience of a process engineer are very
important here. Based on the engineer’s knowledge, decision
rules to assist the machine operator were prepared.
For example, the improper surface quality defect may be
caused by wear of the cutting edges or by run-out of the mill-
ing cutter. This defect may be eliminated in several ways:
† selecting a harder grade of cutting plates,
† selecting an adhesion-proof grade of cutting plates,
† increasing the cutting speed,
† reducing the movement speed,
† reducing the cutting depth, or
† checking the use of a coolant–lubricant.
Fig. 7. Summary for the milling operation.
Process planning by the use of neural networks
13
https://doi.org/10.1017/S0890060416000147 Published online by Cambridge University Press

The priority level assigned to these methods of eliminating
defects depends on the experience of the process engineer.
Examples of rules are shown below:
If improper_surface_quality then cutting_edges_are_
worn;
If cutting_edges_are_worn then select_harder_grade_of_
cutting_plates and priority ¼ 0.5;
If cutting_edges_are_worn then increase_cutting_speed
and priority ¼ 1.
The rules were checked for accuracy in the knowledge
base. Verification and validation of the rules were performed.
Anomalies, such as conflicting, absorbing, repeated, and in-
complete rules, were eliminated.
A CAPP system based on rules and neural network models
enables the intelligent design of a technological process. An
example of the use of rules is shown in Figure 8.
6. CONCLUSIONS
The tests performed in this study have demonstrated the useful-
ness of neural networks and their high effectiveness in support-
ing the design of technological processes. Neural networks,
being very good algorithms for data exploration, have provided
wide opportunities for making use of the data contained in
technological databases. The comparison of MLP, RBF, and
Kohonen networks has resulted in interesting research conclu-
sions. MLP networks are a very good universal tool for solving
complex problems. RBF networks provide results faster. A
comparison of RBF networks with Kohonen networks enabled
verification of the behavior of networks using supervised and
unsupervised learning. Moreover, it was possible to test the be-
havior of those networks when handling a real problem, such
as the design of a technological process.
The outputs of neural network models can serve as sugges-
tions for a process engineer. However, it is the process engineer
who should be responsible for making the final decision.
The use of neural network models to aid process planning has
introduced a new quality to CAPP systems and enables the crea-
tion of a support system that collects knowledge automatically
and has the capacity for adaptation. This is particularly impor-
tant when developing CAPP systems for complex real systems.
REFERENCES
Al-Ghanim, A. (2002). A binary ART: neural network methodology for com-
puter-aided process planning of milling parameters. Pakistan Journal of
Information and Technology 1(3), 294–298.
Azab, H.A., & ElMaraghy, H. (2007). Mathematical modeling for reconfig-
urable process planning. Annals of the CIRP 56(1), 467–472.
Bohamet. (2015). Accessed at http://www.bohamet.pl/ on February 2, 2015.
Deb, S., Ghosh, K., & Paul, S. (2006). A neural network based methodology
for machining operations selection in computer aided process planning
for rotationally symmetrical parts. Journal of Intelligent Manufacturing
17(5), 557–569.
Feld, M. (2003). Podstawy projektowania proceso´w technologicznych typo-
wych cze˛s´ci maszyn. Warsaw: WNT.
Han, J., & Kamber, M. (2000). Data Mining: Concepts and Techniques.
San Francisco, CA: Morgan Kaufmann.
Hand, D., Mannila, H., & Smyth, P. (2001). Principles of Data Mining. Cam-
bridge, MA: MIT Press.
Haykin, S.O. (2008). Neural Networks and Learning Machines. Englewood
Cliffs, NJ: Pearson/Prentice Hall.
Fig. 8. Elimination of defects in milling operations.
I. Rojek
14
https://doi.org/10.1017/S0890060416000147 Published online by Cambridge University Press

Joshi, R.S., Kumar, N., & Sharma, A. (2008). Setup planning and operation
sequencing using neural network and genetic algorithm. Proc. 5th Int.
Conf. Information Technology: New Generations. Las Vegas, NV:
IEEE Conference Publications.
Klancnik, S., Balic, J., & Cus, F. (2008). Milling strategy prediction with
SOM neural network. Proc. 9th IFAC Workshop on Intelligent Manufac-
turing Systems. Intelligent Manufacturing Systems series. Szczecin, Po-
land, October 9–10.
Klosgen, W., & Zytkow, J.M. (2002). Handbook of Data Mining and Knowl-
edge Discovery. Oxford: Oxford University Press.
Koh, S.C.L., & Gunasekaran, A. (2006). Knowledge management approach
for managing uncertainty in manufacturing. Industrial Management &
Data Systems 106(4), 439–459.
Larose, D.T. (2005). Discovering Knowledge in Data: An Introduction to
Data Mining. New York: Wiley.
Lee, Ch.-S., Lee, J.-H., Kim, D.-S., Heo, E.-Y., & Kim, D.-W. (2013). A
hole-machining process planning system for marine engines. Journal
of Manufacturing Systems 32(1), 114–123.
Markopoulos, A.P., Mandakos, D.E., & Vaxevanidis, N. (2008). Artificial
neural networks models for the prediction of surface roughness in electrical
discharge machining. Journal of Intelligent Manufacturing 19(3), 283–292.
Ming, X.G., Yan, J.Q., Wang, X.H., Li, S.N., Lu, W.F., Peng, Q.J., & Ma,
Y.S. (2008). Collaborative process planning and manufacturing in product
lifecycle management. Computers in Industry 59(2–3), 154–166.
Neural Networks. (2015). Statsoft Electronic Statistics Textbooks. Accessed
at http://www.statsoft.pl/textbook/stathome_stat.html?http://%3A%2F%
2Fwww.statsoft.pl%2Ftextbook%2Fstneunet.html on February 2, 2015.
Rana, A.S, Kumar, R., Singh, M., & Kumar, A. (2013). Operation sequenc-
ing in CAPP by using artificial neural network. International Journal
of Innovative Research in Science, Engineering and Technology 2(4),
1137–1141.
Rojek, I. (2008). Neural networks as classification models in intelligent
CAPP systems. Proc. 9th IFAC Workshop on Intelligent Manufacturing
Systems, pp. 105–110, Szczecin, Poland, October 9–10.
Rojek, I. (2010). Neural networks as performance improvement models in in-
telligent CAPP systems. Control and Cybernetics 39(1), 55–68.
Russell, S.J., & Norvig, P. (2009). Artificial Intelligence: A Modern Ap-
proach. Englewood Cliff, NJ: Prentice Hall.
Tadeusiewicz, R., Chaki, R., & Chaki, N. (2014). Exploring Neural Net-
works with C#. Boca Raton, FL: CRC Press/Taylor & Francis.
Izabela Rojek is an Assistant Professor in the Institute of Me-
chanics and Applied Computer Science at Kazimierz Wielki
University. She was previously an Assistant Professor at the
Institute of Mechanical Technology, Poznan University of
Technology. She received an MS in computer science and a
PhD in mechanical engineering and operation from Poznan
University of Technology. Her main research interests are
in the fields of knowledge management, artificial intelli-
gence, and intelligent CAPP systems. Dr. Rojek is the author
or coauthor of approximately 100 papers published in interna-
tional and national journals and presented at conferences.
Process planning by the use of neural networks
15
https://doi.org/10.1017/S0890060416000147 Published online by Cambridge University Press

