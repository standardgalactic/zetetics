Simple Complete Equational Theories for
Quantum Circuits with Ancillae or Partial Trace
Alexandre Clément ! Ï
Université de Lorraine, CNRS, Inria, LORIA, F-54000 Nancy, France
Noé Delorme !
Université de Lorraine, CNRS, Inria, LORIA, F-54000 Nancy, France
Simon Perdrix
! Ï
Université de Lorraine, CNRS, Inria, LORIA, F-54000 Nancy, France
Renaud Vilmart ! Ï
Université Paris-Saclay, ENS Paris-Saclay, Inria, CNRS, LMF, 91190, Gif-sur-Yvette, France
Abstract
Although quantum circuits have been ubiquitous for decades in quantum computing, the ﬁrst
complete equational theory for quantum circuits has only recently been introduced. Completeness
guarantees that any true equation on quantum circuits can be derived from the equational theory.
Our contribution is twofold: (i) We simplify this equational theory by proving that several rules
can be derived from the remaining ones. In particular, two out of the three most intricate rules are
removed, the third one being slightly simpliﬁed. (ii) We extend the complete equational theory to
quantum circuits with ancillae or qubit discarding, to represent respectively quantum computations
using an additional workspace, and hybrid quantum computations. We show that the remaining
intricate rule can be greatly simpliﬁed in these more expressive settings.
The development of simple and complete equational theories for expressive quantum circuit models
opens new avenues for reasoning about quantum circuits. It provides strong formal foundations for
various compiling tasks such as circuit optimisation, hardware constraint satisfaction and veriﬁcation.
2012 ACM Subject Classiﬁcation Theory of computation →Quantum computation theory; Theory
of computation →Equational logic and rewriting
Keywords and phrases Quantum Circuits, Completeness, Graphical Language
1
Introduction
Introduced in the 80’s by Deutsch [10], the quantum circuit1 model is ubiquitous in quantum
computing. Various quantum computing tasks – circuit optimisation, fault tolerant quantum
computing, hardware constraint satisfaction, and veriﬁcation – involve quantum circuit
transformations [11, 15, 16, 17, 20]. It is therefore convenient to equip the quantum circuit
formalism with an equational theory providing a way to transform a quantum circuit while
preserving the represented unitary map. When the equational theory is powerful enough to
guarantee that any true property can be derived, it is said complete, in other words, any two
circuits representing the same unitary map can be transformed into one another using the
rules of the equational theory.
The ﬁrst complete equational theory for quantum circuits has been introduced recently
[5]. Before that, complete equational theories were only known for non-universal fragments of
quantum circuits, such as Cliﬀord+T circuits acting on at most two qubits [3, 8], the stabiliser
fragment [14, 23], the CNot-dihedral fragment [1], or fragments of reversible circuits [12, 7, 6].
1 Originally called Quantum Computational Networks, the term quantum circuits is nowadays unanimously
used.
arXiv:2303.03117v1  [quant-ph]  6 Mar 2023

2
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
Our contribution is twofold: (i) simpliﬁcation of the complete equational theory and (ii)
extension of the completeness result to more expressive quantum circuit models.
Indeed, we show that several rules, including two of the three most intricate ones (Figure 5),
of the known complete equational theory for vanilla quantum circuits can actually be derived
from the other rules, the third one (Figure 6) being slightly simpliﬁed. This leads to a
simpler, more compact and easier to use complete equational theory.
Then, we consider more expressive quantum circuits by allowing ancillary qubits, a.k.a. an-
cillae, and qubit discarding. Indeed, vanilla quantum circuits do not allow for the addition
or deletion of a qubit in any way: one can only apply elementary unitary gates that preserve
the number of qubits.
In a model of quantum circuits with ancillae, one can use an additional work space by
adding fresh qubits, as well as releasing qubits when they are in a speciﬁc state. Even if the
vanilla quantum circuits form a universal model of quantum computation,2 this additional
space is useful in many cases. It is for instance commonly used for the construction of
quantum oracles.3 Another important example is the parallelisation of quantum circuits:
ancillae enable a better parallelisation of quantum gates, leading generally to a tradeoﬀ
between space (number of ancillae) and depth (parallel time) [18]. Notice that ancillae should
be carefully used as the computation should leave a clean work space: one can only get rid
of a qubit at the end of the computation if this qubit is in the |0⟩-state.
We also consider another extension of quantum circuits where arbitrary qubits can
be discarded (or traced out), whatever their states are.
This extension allows for the
representation of: (i) quantum measurements and more generally classically controlled
computations; and (ii) arbitrary general quantum computations (CPTP maps4). Such
quantum circuits can be used to deal with fault-tolerant quantum computing and error
correcting codes which, by construction, require an additional workspace, measurements and
corrections. One can also represent measurement-based quantum computation [24, 9] with
this class of circuits.
In both cases – quantum circuits with ancillae and quantum circuits with qubit discarding –
we introduce complete equational theories, derived from the one of vanilla quantum circuits
together with a few simple additional equations associated with the new primitives (qubit
initialisation and qubit discarding). We also show that in these more expressive settings the
only remaining intricate rule from the equational theory of vanilla quantum circuits, can be
greatly simpliﬁed.
The paper is structured as follows: In Section 2, we consider vanilla quantum circuits
together with a new equational theory QC. We prove the completeness of QC ﬁrst for the
fragment of 1-CNot circuits,5 that we then use to derive the remaining equations of the already
known complete equational theory introduced in [5]. In Section 3, we introduce an extension of
vanilla quantum circuits with |0⟩-state initialisation. Universal for isometries, such quantum
circuits with initialisation are introduced as an intermediate step towards circuits with
ancillae and/or discard. We add to the equational theory QC two basic equations involving
qubit-initialisation, and show the completeness of the augmented equational theory QCiso
using a particular circuit decomposition based on the so-called cosine-sine decomposition of
unitary maps. The completeness of QCiso is the cornerstone for providing complete equational
2 Any n-qubit unitary transformation can be implemented by a n-qubit vanilla quantum circuit.
3 Implementation of the n-qubit unitary transformation Uf : |x, y⟩7→|x, y ⊕f(x)⟩given a classical circuit
implementing the boolean function f [21].
4 Completely positive trace-preserving maps.
5 The sub-class of quantum circuits made of at most one CNot gate.

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
3
theories for quantum circuits with ancillae (QCancilla in Section 4) – which additionally allow
for the release of qubits when they are in a speciﬁc state – and for quantum circuits with
qubit discarding (QCdiscard in Section 5) – which allows the tracing out of any qubits.
Both extensions provide alternative representations of multi-controlled gates, allowing the
simpliﬁcation of the remaining intricate rule – which acts on an unbounded number of qubits –
into its 2-qubit version.
2
Vanilla quantum circuits
2.1
Graphical languages
We deﬁne quantum circuits using the formalism of props [13], which are, in category theoretic
terms, strict symmetric monoidal categories whose objects are generated by a single object,
or equivalently with (N, +) as a monoid of objects. The prop formalism provides a formal
and rigorous framework to describe graphical languages. The main features of props are
recalled in the following. Circuits C1 : m →n and C2 : p →q in a prop, depicted as
C1
...
... n
m
and
C2
...
...
p
q can be composed: (1) “in sequence” C2 ◦C1 : m →q if n = p, graphically
C2
...
... q
C1
...
m
; (2) “in parallel” C1 ⊗C2 : m + p →n + q, graphically
C2
...
...
p
q
C1
...
... n
m
. The unit for
tensor product ⊗is the empty circuit:
: 0 →0. This means
⊗C = C = C ⊗
for any
C. The circuit
: 1 →1 depicts the identity,
: 2 →2 is the identity on two wires
and more generally
⊗m :=
⊗(
)⊗m−1 : m →m (with (
)⊗0 :=
) is the identity
on m wires. Graphically, we obviously have
⊗n ◦C = C = C ◦
⊗m for any C : m →n.
Finally, a prop is also endowed with a particular circuit
: 2 →2 which graphically (and
semantically in what follows) swaps places. By compositions, we may build
...
n ...
m
...
...
: m + n →n + m
which exchanges m-sized and n-sized registers. In a prop, circuits satisfy a set of identities, that
graphically translate as “being able to deform the circuit without bending wires backwards”.
For instance, the following identities are valid transformations:
=
C2
...
...
p
q
C1
...
... n
m
=
C2
...
...
p
q
C1
...
... n
m
...
n
...
p
...
... C ...
m
=
C
...
n
...
m
...
p
...
...
In the following, all the considered theories will be props, and hence will have the empty,
identity and swap circuits as basic generators.
2.2
Vanilla quantum circuits and their equational theory
We ﬁrst consider the vanilla model of quantum circuits generated by Hadamard, Phase gates,
and CNot together with global phases:
▶Deﬁnition 1. Let QC be the prop generated by
H
: 1 →1,
P(ϕ)
: 1 →1,
: 2 →2,
ϕ : 0 →0 for any ϕ ∈R.
▶Deﬁnition 2 (Semantics). For any n-qubit quantum circuit C ∈QC, let JCK : C{0,1}n →
C{0,1}n be the semantics of C inductively deﬁned as the linear map JC2 ◦C1K = JC2K ◦JC1K;
JC1 ⊗C2K = JC1K ⊗JC2K; and

4
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
J K = 1 7→1
J ϕ K = 1 7→eiϕ
J H K = |x⟩7→|0⟩+ (−1)x |1⟩
√
2
J P(ϕ) K = |x⟩7→eixϕ |x⟩
r
z
= |x, y⟩7→|x, x ⊕y⟩
J
K = |x⟩7→|x⟩
J
K = |x, y⟩7→|y, x⟩
Note that for any quantum circuit C ∈QC, JCK is unitary. Conversely, any unitary map
acting on a ﬁnite number of qubits can be represented by a QC-circuit:
▶Proposition 3 (Folklore). QC is universal, i.e. for any n-qubit unitary U : C{0,1}n →
C{0,1}n there exists a quantum circuit C ∈QC such that JCK = U.
Quantum circuits only have four diﬀerent kinds of generators, however, it is often
convenient to use other gates that can be deﬁned by combining them. For instance, following
[2, 5], Pauli gates, Toﬀoli, X-rotations, and multi-controlled gates are deﬁned in Figure 1.
Note that while the phase gate
P(ϕ)
is 2π-periodic, the X-rotation
RX(θ)
is 4π-periodic.
We use the standard bullet-based notation for multi-controlled gates. For instance
P(ϕ)
denotes the application of a phase gate
P(ϕ)
on the third qubit controlled by the ﬁrst two
qubits. With a slight abuse of notations, we use dashed lines for arbitrary number of control
qubits, e.g.
P(ϕ)
: n + 1 →n + 1 or simply
P(ϕ)
: n + 1 →n + 1 have n ≥0 control qubits
(possibly zero), whereas
P(ϕ)
: n + 2 →n + 2 and
P(ϕ)
: 1 + n + 1 →1 + n + 1 have at
least one control qubit.
RX(θ)
:=
H
P(θ)
-θ/2
H
(1)
Z
:=
P(π)
(2)
X
:=
H
Z
H
(3)
RX(θ)
:=
RX( θ
2)
RX(- θ
2)
H
H
(4)
P(ϕ)
:=
RX(ϕ)
P( ϕ
2 )
H
H
(5)
:=
P(π)
H
H
(6)
P(ϕ)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
(7)
Figure 1 Shortcut notations for usual gates deﬁned for any ϕ, θ ∈R. Equation (1) deﬁnes
X-rotations while Equations (2) and (3) deﬁne Pauli gates. Equations (4) and (5) are inductive
deﬁnitions of multi-controlled gates. Equation (6) is the deﬁnition of the well known Toﬀoli gate.
Equation (7) is an alternative deﬁnition of the multi-controlled phase gate that is proved to be
equivalent to Equation (5) in Appendix B.1.
We equip the vanilla quantum circuits with the equational theory QC deﬁned in Figure 2.
We write QC ⊢C1 = C2 when C1 can be transformed into C2 using the equations of QC.
More formally, QC ⊢· = · is the smallest congruence which satisﬁes the equations of Figure 2
together with the deformation rules that come with the prop formalism. QC is sound, i.e.
for any vanilla quantum circuits C1, C2 ∈QC if QC ⊢C1 = C2 then JC1K = JC2K. This can
be proved by observing that all equations of QC are sound. We can prove the usual circuit
identities of Figure 3 using the equations of QC (the derivations are given in Appendix B.2).
We can also prove the identities of Figure 4 about multi-controlled gates (see Appendix B.3)
in QC.

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
5
0
=
2π
=
(A)
ϕ1
ϕ2
=
ϕ1+ϕ2
(B)
H
H
=
(C)
P(0)
=
(D)
=
(E)
=
(F)
P(ϕ)
=
P(ϕ)
(G)
H
H
=
P( π
2 )
P( π
2 )
P(- π
2 )
(H)
H
=
P( π
2 )
RX( π
2 )
P( π
2 )
(I)
RX(α1)
P(α2)
RX(α3)
=
P(β1)
β0
RX(β2)
P(β3)
(J)
RX(γ1)
P(γ2)
RX(γ3)
RX(γ4)
=
P(δ1)
P(δ2)
RX(δ3)
RX(δ4)
P(δ5)
RX(δ6)
P(δ7)
P(δ8)
(K∗)
Figure 2 Equational theory QC. Equations (B) and (G) are deﬁned for any ϕ, ϕ1, ϕ2 ∈R. In
Equations (J) and (K∗) the LHS circuit has arbitrary parameters which uniquely determine the
parameters of the RHS circuit. Equation (J) is nothing but the well-known Euler-decomposition
rule which states that any unitary can be decomposed, up to a global phase, into basic X- and
Z-rotations. Thus for any αi ∈R, there exist βj ∈R such that Equation (J) is sound. We make the
angles βj unique by assuming that β1 ∈[0, π), β0, β2, β3 ∈[0, 2π) and if β2 ∈{0, π} then β1 = 0.
Equation (K∗) reads as follows: the equation is deﬁned for any n ≥2 input qubits, in such a way
that all gates are controlled by the ﬁrst n −2 qubits. Equation (K∗) can be seen as a generalisation
of the Euler rule, using multi-controlled gates. Similarly to Equation (J), for any γi ∈R, there exist
δj ∈R such that Equation (K∗) is sound. We ensure that the angles δj are uniquely determined by
assuming that δ1, δ2, δ5 ∈[0, π), δ3, δ6, δ7, δ8 ∈[0, 2π), δ4 ∈[0, 4π), if δ3 = 0 and δ6 ̸= 0 then δ2 = 0,
if δ3 = π then δ1 = 0, if δ4 ∈{0, 2π} then δ1 = δ3 = 0, if δ4 ∈{π, 3π} then δ2 = 0, if δ4 ∈{π, 3π}
and δ3 = 0 then δ1 = 0, and if δ6 ∈{0, π} then δ5 = 0.
A complete equational theory for vanilla quantum circuits has been introduced in [5].
The rules of this original equational theory that are not in QC are Equations (14), (17), (20),
(22), (38), (39) and (K∗
old) (see Figures 3, 5, and 6).6 Compared to the original equational
theory, Equations (14) and (17) are now subsumed by Equation (G) in QC, Equation (K∗)
is a slight simpliﬁcation of Equation (K∗
old) (with one less parameter in the RHS circuit),
whereas Equations (20) and (22) (Figure 3) together with Equations (38) and (39) (Figure 5)
have been removed, as we prove in the following that they can be derived in QC.
2.3
Reasoning on quantum circuits
To derive an equation C1 = C2 over quantum circuits, one can apply some rules of the
equational theory to transform step by step C1 into C2. In the context of vanilla quantum
circuits, we can take advantage of the reversibility of generators to simplify equations. Indeed,
intuitively, proving C1 ◦
H = C2 ◦
H
is equivalent to proving C1 = C2 as
H
is (provably)
reversible. Similarly, proving C1 = C2 should be equivalent to proving C1 ◦C†
2 =
, where
the adjoint of a circuit is deﬁned as follows:
▶Deﬁnition 4. For any n-qubit quantum circuit C ∈QC, let C† be the adjoint of C
inductively deﬁned as (C2 ◦C1)† := C†
1 ◦C†
2; (C1 ⊗C2)† := C†
1 ⊗C†
2; and for any ϕ ∈R,
( ϕ )† := -ϕ , ( P(ϕ) )† :=
P(-ϕ) , and g† := g for any other generator g.
6 Notice that Equations (12) and (25) are in the original equational theory of [5] but are proved to be
derivable in the same paper.

6
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
X
X
=
(8)
Z
Z
=
(9)
RX(0)
=
(10)
Z
=
P(-π)
(11)
P(ϕ1)
P(ϕ2)
=
P(ϕ1 + ϕ2)
(12)
RX(θ1)
RX(θ2)
=
RX(θ1 + θ2)
(13)
=
(14)
H
H
=
H
H
(15)
=
(16)
P(ϕ)
=
P(ϕ)
(17)
RX(θ)
=
RX(θ)
(18)
X
=
X
(19)
X
=
X
X
(20)
Z
=
Z
Z
(21)
=
(22)
=
(23)
=
(24)
X
X
P(ϕ)
=
P(-ϕ)
ϕ
(25)
Z
Z
RX(θ)
=
RX(-θ)
(26)
P(ϕ)
=
P(ϕ)
(27)
RX(θ)
=
RX(θ)
(28)
P(α1)
RX(α2)
P(α3)
=
RX(β1)
P(β2)
RX(β3)
β0
(29)
Figure 3 Some usual identities provable in QC for any ϕ, ϕ1, ϕ2, θ, θ1, θ2 ∈R. Equation (29) is
the dual version of Equation (J) where the angles are computed in a similar way. All the proofs are
given in Appendix B.2.
P(ϕ1)
P(ϕ2)
=
P(ϕ1+ϕ2)
(30)
RX(θ1)
RX(θ2)
=
RX(θ1+θ2)
(31)
=
(32)
P(ϕ) X
X
=
P(-ϕ)
P(ϕ)
(33)
RX(θ)
Z
Z
=
RX(-θ)
(34)
P(ϕ)
=
P(ϕ)
(35)
P(ϕ)
=
P(ϕ)
(36)
RX(θ)
=
RX(θ)
(37)
Figure
4
Some usual identities over multi-controlled gates provable in QC for any
ϕ, ϕ1, ϕ2, θ, θ1, θ2 ∈R. All the proofs are given in Appendix B.3.
▶Proposition 5.
q
C†y
= JCK† for any vanilla quantum circuit C ∈QC, where JCK† is the
usual linear algebra adjoint of JCK.
Proof. By induction on C.
◀
▶Proposition 6. QC ⊢C ◦C† =
⊗n and QC ⊢C† ◦C =
⊗n for any n-qubit vanilla
quantum circuit C ∈QC.
Proof. By induction on C.
◀

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
7
RX(-θ)
RX(θ)
RX(θ′)
RX(θ′)
H
H
=
RX(-θ)
RX(θ)
RX(θ′)
RX(θ′)
H
H
(38)
H
RX(-θ)
RX(θ)
H
RX(θ)
RX(-θ)
RX(θ′)
RX(θ′)
H
RX(-θ′)
RX(-θ′)
H
=
H
RX(-θ)
RX(θ)
H
RX(θ)
RX(-θ)
RX(θ′)
RX(θ′)
H
RX(-θ′)
RX(-θ′)
H
(39)
Figure 5 Two of the equations of the complete equational theory introduced in [5] that are not
in QC, deﬁned for any θ, θ′ ∈R.
RX(γ1)
P(γ2)
RX(γ3)
RX(γ4)
=
P(δ1)
P(δ2)
RX(δ3)
RX(δ4)
P(δ5)
RX(δ6)
P(δ7)
P(δ8)
P(δ9)
(K∗
old)
Figure 6 The version of Equation (K∗) given in [5]. Similarly to Equation (K∗), for any γi ∈R,
there exist δj ∈R such that Equation (K∗) is sound. We ensure that the angles δj are uniquely
determined by assuming that δ1, δ2, δ5 ∈[0, π), δ3, δ4, δ6, δ7, δ8, δ9 ∈[0, 2π), if δ3 = 0 then δ2 = 0, if
δ3 = π then δ1 = 0, if δ4 = 0 then δ1 = δ3 (= δ2) = 0, if δ4 = π then δ2 = 0, if δ4 = π and δ3 = 0
then δ1 = 0, and if δ6 ∈{0, π} then δ5 = 0. Note that these conditions on the δj for 1 ≤j ≤8 are
the same as in Equation (K∗) except for δ4, which is restricted to be in [0, 2π) instead of [0, 4π),
and for δ2, which has to be 0 when δ3 = 0 even if δ6 = 0.
Formally, we say that an equation C1 = C2 is QC-equivalent to another equation C3 = C4,
denoted (C1 = C2) ∼QC (C3 = C4), if QC ⊢C1 = C2 ⇐⇒QC ⊢C3 = C4, i.e. proving one
in QC implies that the other is provable in QC. Proposition 7 allows us to move gates from
one side of the equation to the other.
▶Proposition 7. (C2 ◦C ◦C1 = C′) ∼QC (C = C†
2 ◦C′ ◦C†
1) for any n-qubit vanilla quantum
circuits C, C′, C1, C2 ∈QC.
Proof. W.l.o.g. assume QC ⊢C2 ◦C ◦C1 = C′, then, thanks to Proposition 6, we have
QC ⊢C = C†
2 ◦C2 ◦C ◦C1 ◦C†
1 = C†
2 ◦C′ ◦C†
1.
◀
2.4
Completeness
We prove the completeness of QC by showing that every equation of the original complete
equational theory introduced in [5] can be derived in QC. To this end we ﬁrst show the
completeness of QC for the (modest) fragment of quantum circuits containing at most one
CNot gate.
▶Lemma 8 (1-CNot completeness). QC is complete for circuits containing at most one
, i.e. for any quantum circuits C1, C2 ∈QC with at most one
, if JC1K = JC2K then
QC ⊢C1 = C2.
Proof. The idea of the proof is to conduct a semantic analysis to characterise the possible
values of the unitaries represented by the 1-qubit circuits
Ai ,
Bi ,
Ci ,
Di
in the following
equation:
A1
B1
C1
D1
=
A2
B2
C2
D2

8
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
It turns out that we can prove this equation in QC for any such unitaries (when the semantics
coincide). We conclude the proof using the completeness of QC over 1-qubit circuits. The
proof is given in Appendix C.1.
◀
▶Proposition 9. Equation (38) of Figure 5 can be derived in QC.
Proof. Equation (38) is QC-equivalent to an equation whose circuits contain only one
.
The derivation is given in Appendix C.2. We conclude the proof using the completeness of
QC for 1-CNot circuits (Lemma 8).
◀
▶Proposition 10. Equation (39) of Figure 5 can be derived in QC.
Proof. It turns out that we can use Equation (38) to derive Equation (39) in QC. The
derivation is given in Appendix C.3.
◀
▶Proposition 11. Equation (K∗
old) of Figure 6 can be derived in QC.
Proof. We show that for semantic reasons, we have either the angle δ9 in (K∗
old) in {0, π},
or δ2 = δ3 = δ5 = δ6 = 0. When δ9 = 0, Equation (K∗
old) can be trivially derived from
Equation (K∗). Otherwise, Equations (K∗) and (K∗
old) can be transformed one into the
other using elementary properties of multi-controlled gates. Moreover, these transformations
induce a bijection between the 8-tuples of angles δj corresponding to right-hand sides of
instances of Equation (K∗) and the 9-tuples corresponding to right-hand sides of instances
of Equation (K∗
old), so that the uniqueness of the δj in Equation (K∗) follows from the
uniqueness in Equation (K∗
old). Details are given in Appendix C.4.
◀
▶Theorem 12. The equational theory QC, deﬁned in Figure 2, is complete for QC-circuits,
i.e. for any C1, C2 ∈QC, if JC1K = JC2K then QC ⊢C1 = C2.
Proof. All the rules of the complete equational theory introduced in [5] that are not in QC
are provable in QC: Equations (14), (17), (20), (22) are proved in Appendix B.2, Equations
(38), (39) and (K∗
old) are proved in Propositions 9, 10 and 11 respectively.
◀
3
Quantum circuits for isometries
In this section we consider a ﬁrst standard extension of the vanilla quantum circuits which
consists in allowing qubit initialisation in a speciﬁc state, namely in the |0⟩-state.
▶Deﬁnition 13. Let QCiso be the prop generated by
ϕ : 0 →0,
H : 1 →1,
P(ϕ) : 1 →1,
: 2 →2,
: 0 →1 for any ϕ ∈R.
▶Deﬁnition 14 (Semantics). We extend the semantics J·K of vanilla quantum circuits
(Deﬁnition 2) with J K = |0⟩.
▶Proposition 15. Any isometry7 V : C{0,1}n →C{0,1}m can be realised by a QCiso-circuit.
For instance, the so-called copies in the standard basis (|x⟩7→|xx⟩) and in the diagonal
basis can be respectively represented as follows:
H
7 An isometry is a linear map V s.t. V † ◦V is the identity.

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
9
P(ϕ)
=
(L)
=
(M)
0
=
2π
=
(A)
ϕ1
ϕ2
=
ϕ1+ϕ2
(B)
H
H
=
(C)
P(0)
=
(D)
=
(E)
=
(F)
P(ϕ)
=
P(ϕ)
(G)
H
H
=
P( π
2 )
P( π
2 )
P(- π
2 )
(H)
H
=
P( π
2 )
RX( π
2 )
P( π
2 )
(I)
RX(α1)
P(α2)
RX(α3)
=
P(β1)
β0
RX(β2)
P(β3)
(J)
RX(γ1)
P(γ2)
RX(γ3)
RX(γ4)
=
P(δ1)
P(δ2)
RX(δ3)
RX(δ4)
P(δ5)
RX(δ6)
P(δ7)
P(δ8)
(K∗)
Figure 7 Equational theory QCiso. It contains all the equations of QC together with Equation (L)
(deﬁned for any ϕ ∈R) and Equation (M), which are new equations explaining the behaviour of the
new generator
.
X
X
=
X
(40)
=
(41)
X
X
=
(42)
P(ϕ)
=
(43)
RX(θ)
=
(44)
P(ϕ)
X
X
=
P(ϕ)
(45)
RX(θ)
X
X
=
RX(θ)
(46)
Figure 8 Some identities provable in QCiso deﬁned for any ϕ, θ ∈R. Note that the proofs do not
use Equation (K∗).
We consider the equational theory QCiso, given in Figure 7, which is nothing but the
equational theory QC augmented with the following two sound equations:
P(ϕ)
=
(L)
=
(M)
We show in the following that adding those two equations to a complete equational theory
for QC gives a complete one for QCiso. First we can show:
▶Lemma 16. Let C be a QCiso-circuit such that ∀|ϕ⟩∈C2n, JCK |ϕ⟩= |0⟩⊗|ϕ⟩. Then:
QCiso ⊢
...
...
C
=
...

10
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
Proof. The proof is in Appendix D.
◀
A direct corollary of Lemma 16 is the completeness of QCiso for quantum circuits with at
most one initialisation. To show completeness of QCiso in general, we want to generalise this
result to any number of qubit initialisations. However, the proof does not generalise. Indeed,
it relies on the fact that, semantically, the vanilla circuit of which we initialize a single qubit
is necessarily of the form diag(I, U), with I and U of the same dimension, so we can start
with a circuit implementing U and control each of its gates to get a circuit implementing
diag(I, U) with only controls and phases on the control wire. To generalise this notion to
more than one qubit initialisation, where semantically we would need to implement diag(I, U)
with U of dimensions larger than I’s, we need a ﬁner-grain decomposition of said matrix.
We hence resort to the following unitary decomposition:
▶Lemma 17. Let U =




I
0
0
0
U00
U01
0
U10
U11




}k
}n −k
o
n
be unitary with U00 and U11 square.
Then, there exist:
• A0, A1, B0, B1 unitary,
• C = diag(c1, ..., cd) and S = diag(s1, ..., sd) (ci, si ≥0 and d ≤n −k).
such that:
• C2 + S2 = I
• U =




I
0
0
0
A0
0
0
0
A1









I
0
0
0
0
C
0
−S
0
0
I
0
0
S
0
C









I
0
0
0
B0
0
0
0
B1




The above decomposition is a variation on the Cosine-Sine Decomposition (CSD) [22],
which has already proven useful in quantum circuit synthesis [25].
Proof. The proof itself is a variation of the proof for the usual CSD. It speciﬁcally involves
the so-called RQ and SVD decompositions, which are introduced, alongside the full proof of
the lemma, in Appendix D.
◀
It is then possible to show the completeness of QCiso:
▶Theorem 18. The equational theory QCiso, deﬁned in Figure 7, is complete for QCiso-
circuits.
Proof. The proof goes by showing that deriving equality between two QCiso-circuits amounts
to generalising Lemma 16 to any number of qubit initialisations, which is shown inductively
using the above variation of the CSD. The full proof is in Appendix D.
◀
4
Quantum circuits with ancillae
In this section, we consider quantum circuits which are implementing unitary maps (or
isometries) using ancillary qubits, a.k.a. ancillae as additional work space. To represent
quantum circuits with ancillae, we not only need to be able to initialise fresh qubits, but
also to release qubits when they become useless. Note that to guarantee that the overall
evolution is an isometry, one can only release a qubit in the |0⟩-state.

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
11
P(ϕ)
=
(L)
=
(M)
=
(N)
0
=
2π
=
(A)
ϕ1
ϕ2
=
ϕ1+ϕ2
(B)
H
H
=
(C)
P(0)
=
(D)
=
(E)
=
(F)
P(ϕ)
=
P(ϕ)
(G)
H
H
=
P( π
2 )
P( π
2 )
P(- π
2 )
(H)
H
=
P( π
2 )
RX( π
2 )
P( π
2 )
(I)
RX(α1)
P(α2)
RX(α3)
=
P(β1)
β0
RX(β2)
P(β3)
(J)
RX(γ1)
P(γ2)
RX(γ3)
RX(γ4)
=
P(δ1)
P(δ2)
RX(δ3)
RX(δ4)
P(δ5)
RX(δ6)
P(δ7)
P(δ8)
(K2)
Figure 9 Equational theory QCancilla. It contains all the equations of QCiso where Equation (K∗)
has been replaced by Equation (K2), together with Equation (N), which is a new equation that
allows one to create ancillae.
To encounter the notion of ancillary qubits we extend QCiso-circuits (already equipped
with qubit initialisation
) with a qubit removal generator denoted
.
Because of the
constraint that removed qubits must be in the |0⟩-state, we deﬁne the language of quantum
circuits with ancillae in two steps.
▶Deﬁnition 19. Let QCpre-ancilla be the prop generated by
ϕ : 0 →0,
H
: 1 →1,
P(ϕ) : 1 →1,
: 2 →2,
: 0 →1,
: 1 →0 for any ϕ ∈R.
▶Deﬁnition 20 (Semantics). We extend the semantics J·K of QCiso (Deﬁnition 14) with
J K = ⟨0|.
Notice that the semantics of a QCpre-ancilla-circuit is not necessarily an isometry as J K is
not isometric.8 As a consequence, we deﬁne QCancilla as the subclass of QCpre-ancilla-circuits
with an isometric semantics:
▶Deﬁnition 21. Let QCancilla be the sub-prop of circuits C ∈QCpre-ancilla such that JCK is
an isometry.
Notice in particular that any QCiso-circuit is in QCancilla, which implies the universality of
QCancilla for isometries. We equip the QCancilla-circuits with the equational theory QCancilla
given in Figure 9, which is nothing but the equational theory QCiso where Equation (K∗) is
replaced by its 2-qubit version Equation (K2), together with a new elementary equation (N)
governing the behaviour of the qubit removal generator
.
=
(N)
Quantum circuits with ancillae form a standard model of quantum computing. They are
for instance used in the context of quantum oracles: Given a circuit Cf : n + 1 →n + 1
8 Actually any linear map L s.t. L†L ⊑I can be implemented by a QCpre-ancilla-circuit, where ⊑is the
Löwner partial order.

12
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
whose semantics is |x, y⟩7→|x, y ⊕f(x)⟩for some boolean function f, one can implement
the corresponding phase oracle C′
f whose semantics is |x⟩7→(−1)f(x) |x⟩as follows:
C′
f
:=
H
Cf
H X
X
Quantum circuits with ancillae are also extensively used in the context of circuit parallelisation,
as one can decrease the depth of a quantum circuit by adding ancillary qubits [18]. Finally,
ancillary qubits can be used to provide an alternative realisation of multi-controlled gates,
for instance a 3-qubit controlled gate can be implemented using an ancillary qubit, Toﬀoli
gates, and the 2-qubit version of the gate:
P(ϕ)
=
P(ϕ)
(47)
This can be generalised to any multi-controlled gates with at least two control qubits:
▶Proposition 22. The following two equations can be derived in QCancilla.
P(ϕ)
=
P(ϕ)
(48)
RX(θ)
=
RX(θ)
(49)
Proof. By induction on the number of qubits. The proof is given in Appendix E.1.
◀
▶Remark 23. Notice that Equations (48) and (49) are actually derivable in QCiso. However,
in order to provide an alternative inductive deﬁnition of multi-control gates (like in Equa-
tion (47)), it requires the presence of at least one fresh qubit which can always be created in
the context of quantum circuits with ancillae thanks to Equation (N).
Thanks to the alternative representation of multi-controlled gates, one can derive, in
QCancilla, the equation (K∗) for any arbitrary number of controlled qubits:
▶Proposition 24. Equation (K∗) can be derived in QCancilla.
Proof. Let (Kn) be Equation (K∗) acting on n qubits for any n ≥2. Equation (K2) is in
QCancilla. We ﬁrst prove that (K3) can be derived from (K2) by deﬁning the Fredkin gate
(or controlled-swap gate) and by pushing the two last wires of the LHS circuit of (K3) into
two fresh ancillae, which allow us to apply (K2) and reverse the construction to get the RHS
circuit of (K3). The detailed proof is given in E.2 together with all necessary intermediate
derivations. This technique is not applicable in the general case for any controlled circuit
because if the Fredkin gates are not triggered, it could be the case that the gates pushed
into the ancillae do not release the ancillae into the |0⟩-state. The key observation is that
this is possible for (K3) as every involved gates are either phase gate or uniquely controlled
gate (which both act as identity on the |0⟩-state). Then, we prove that (Kn) is derivable in
QCancilla for any n ≥4 by induction on n using the alternative deﬁnition of multi-controlled
gates (Proposition 22), which allows us to construct an instance of the LHS circuit of (Kn−1)
from the LHS circuit of (Kn). The detailed proof is given in E.3.
◀

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
13
We are now ready to prove the completeness of QCancilla:
▶Theorem 25. The equational theory QCancilla, deﬁned in Figure 9, is complete for
QCancilla-circuits.
Proof. Proposition 24 implies that for any
-free circuits C0, C1, if QCiso ⊢C0 = C1
then QCancilla ⊢C0 = C1. Using deformation of circuits, any QCancilla-circuit C : n →m
can be written
...
...
C′
... , where C′ : n →m + k is a QCiso-circuit. Since both JCK and
JC′K are isometries and JCK = (Id ⊗

0k) JC′K, we have JC′K = JCK ⊗
0k
. Given two
QCancilla-circuits C0, C1 s.t. JC0K = JC1K, let C′
0 : n →m + k, and C′
1 : n →m + ℓbe
the corresponding QCiso-circuits. W.l.o.g. assume k ≤ℓ, and pad C′ with ℓ−k qubit
initialisations: C′′
0 := C′
0 ⊗( )⊗ℓ−k. We have JC′′
0 K = JC′
1K, so by completeness of QCiso,
QCancilla ⊢C′′
0 = C′
1, so QCancilla ⊢C0 ⊗(
)⊗ℓ−k = C1. It suﬃces to apply the (N) rule
to obtain QCancilla ⊢C0 = C1.
◀
5
Quantum circuits with discard for completely positive map
The last extension considered in this paper is the addition of a discard operator which consists
in tracing out qubits. Contrary to quantum circuits with ancillae, any qubit can be discarded
whatever its state is. Discarding a qubit is depicted as follows:
.
▶Deﬁnition 26. Let QCdiscard be the prop generated by
H
: 1 →1,
P(ϕ)
: 1 →1,
: 2 →1,
: 0 →1,
: 1 →0 for any ϕ ∈R.
The ability to discard qubits implies that the evolution represented by such a circuit is
not pure anymore. As a consequence the semantics is a completely positive trace-preserving
(CPTP) map acting on density matrices (trace 1 positive semi-deﬁnite Hermitian matrices).
Formally the new semantics is deﬁned as follows:
▶Deﬁnition 27 (Semantics). For any quantum circuit C : n →m ∈QCdiscard, let LCM :
M2n,2n(C) →M2m,2m(C) be the semantics of C inductively deﬁned as the linear map
LC2 ◦C1M = LC2M ◦LC1M; LC1 ⊗C2M = LC1M ⊗LC2M; L M = ρ 7→tr(ρ) and for any other
generator g, LgM = ρ 7→JgK ρ JgK†, where tr(M) is the trace of the matrix M and M † its
adjoint.
Notice that the global phase generator ϕ is not part of the prop anymore. If it were, its
interpretation would be L ϕ M = ρ 7→J ϕ K ρ J ϕ K† = eiϕρe−iϕ = ρ, which is the same as that of
the empty circuit.
▶Proposition 28. QCdiscard is universal for CPTP maps.
Proof. According to the Stinespring dilation lemma [27], any CPTP map F : M2n,2n(C) →
M2m,2m(C) can be puriﬁed as an isometry V : C2n →C2m+k such that for any ρ, F(ρ) =
trk(V ρV †), where trk(.) is the partial trace of the last k qubits. By universality of QCiso
there exists a circuit C such that JCK = V . Let C′ be the global-phase-free version of C, thus
JC′K = eiθV . Seen as a QCdiscard-circuit, C′ has the semantics LC′M = ρ 7→(eiθV )ρ(eiθV )† =
V ρV †. Discarding the last k qubits of C′ leads to a QCdiscard-circuit implementing F.
◀
The new generator and new semantics allow us to model measurements. For instance,
the standard basis measurement can be obtained via:

14
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
P(ϕ)
=
(L)
H
=
(O)
P(ϕ)
=
(P)
=
(Q)
=
(M)
=
(R)
H
H
=
(C)
P(0)
=
(D)
=
(E)
=
(F)
P(ϕ)
=
P(ϕ)
(G)
H
H
=
P( π
2 )
P( π
2 )
P(- π
2 )
(H)
H
=
P( π
2 )
RX( π
2 )
P( π
2 )
(I)
RX(α1)
P(α2)
RX(α3)
=
P(β1)
RX(β2)
P(β3)
(J’)
RX(γ1)
P(γ2)
RX(γ3)
RX(γ4)
=
P(δ1)
P(δ2)
RX(δ3)
RX(δ4)
P(δ5)
RX(δ6)
P(δ7)
P(δ8)
(K2)
Figure 10 Equational theory QCdiscard. It contains all the equations of QCancilla except Equa-
tion (N) and where Equation (J) has been replaced by its global-phase free-version Equation (J’),
together with Equations (O), (P) (deﬁned for any ϕ ∈R), (Q), (R), which are new equations
explaining the behaviour of the new generator
.
Indeed we recover the semantics of the standard basis measurement:
 

!
=
 a
c
b
d

7→
 a
0
0
d

The output wire can be interpreted as a classical bit (encoded in a quantum bit), a (resp. d)
being the probability to be 0 (resp. 1).
One can also encode classical gates, for instance the AND gate using Toﬀoli:
With the promise that the input is classical, i.e. the input density matrix is diag(p00, p01, p10, p11)
(where pxy is the probability for the input to be in the state xy ∈{0, 1}2), the output state
is diag(p00 + p01 + p10, p11) which corresponds to the behaviour of the AND gate.
More generally, one can represent classically controlled computation using the QCdiscard-
circuits, allowing to reason on fault-tolerant computations, error correcting codes and
measurement-based quantum computation for instance.
While [26] provides a way to get completeness for quantum circuits with measurements
from a complete one for isometries, we instead use [4] which provides a similar result but for
isometries with discard, as the latter is a little bit more atomic than measurements. This
leads us to equip QCdiscard with the equational theory deﬁned in Figure 10, which is a
global-phase-free version of QCancilla where
replaces ⊣, and with the addition of:
H
=
(O)
P(ϕ)
=
(P)
=
(Q)
=
(R)

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
15
This observation allows us in particular to transport all the proofs using QCancilla into
the present theory, the only two diﬀerences being that
plays the role of ⊣and that the
QCdiscard version of the proofs have no global phase ϕ .
▶Theorem 29. The equational theory QCdiscard, deﬁned in Figure 10, is complete for
QCdiscard-circuits.
Proof. We can use the discard construction [4] to build QCiso from QCiso, by adding equation:
⊗m ◦U =
⊗n
(50)
for any QCiso-circuit U : n →m. The discard construction guarantees that QCiso is complete
for CPTP maps (Proposition 2 in [4]). It remains to prove that all equations in QCiso derive
from those of QCdiscard. All equations of the former except (K∗) and Equation (50) appear as
is in QCdiscard. Those are trivially derivable. As mentioned above, it is possible to prove (K∗)
from QCdiscard exactly as in the case of QCancilla by replacing each occurrence of
=
by
=
. This means all the equations of QCiso are derivable. Finally, all the equations
⊗m ◦U =
⊗n for diﬀerent isometries U can be derived from Equations (O), (P), (Q), and
(R).
◀
Acknowledgements
This work is supported by the PEPR integrated project EPiQ ANR-22-PETQ-0007 part of
Plan France 2030, the ANR project SoftQPro ANR-17-CE25-0009-02, by the STIC-AmSud
project Qapla’ 21-STIC-10, and by the European projects NEASQC and HPCQS.
References
1
Matthew Amy, Jianxin Chen, and Neil J. Ross. A ﬁnite presentation of CNOT-dihedral
operators. Electronic Proceedings in Theoretical Computer Science, 266:84–97, February 2018.
URL: https://doi.org/10.4204%2Feptcs.266.5, doi:10.4204/eptcs.266.5.
2
Adriano Barenco, Charles H. Bennett, Richard Cleve, David P. DiVincenzo, Norman Margolus,
Peter Shor, Tycho Sleator, John A. Smolin, and Harald Weinfurter.
Elementary gates
for quantum computation. Physical Review A, 52(5):3457–3467, November 1995. arXiv:
quant-ph/9503016, doi:10.1103/physreva.52.3457.
3
Xiaoning Bian and Peter Selinger. Generators and relations for 2-qubit Cliﬀord+T operators.
arXiv preprint arXiv:2204.02217, 2022.
4
Titouan Carette, Emmanuel Jeandel, Simon Perdrix, and Renaud Vilmart. Completeness of
graphical languages for mixed state quantum mechanics. ACM Transactions on Quantum
Computing, 2(4), dec 2021. URL: https://doi.org/10.1145/3464693, doi:10.1145/3464693.
5
Alexandre Clément, Nicolas Heurtel, Shane Mansﬁeld, Simon Perdrix, and Benoît Valiron. A
complete equational theory for quantum circuits. arXiv preprint arXiv:2206.10577, 2022.
6
Robin Cockett and Cole Comfort. The category TOF. In Peter Selinger and Giulio Chiribella,
editors, Proceedings 15th International Conference on Quantum Physics and Logic, QPL 2018,
volume 287 of EPTCS, pages 67–84, 2019.
7
Robin Cockett, Cole Comfort, and Priyaa Srinivasan. The category CNOT. In Peter Selinger
and Giulio Chiribella, editors, Proceedings 15th International Conference on Quantum Physics
and Logic, QPL 2018, volume 287 of EPTCS, pages 258–293, 2019. doi:10.4204/EPTCS.266.
18.
8
Bob Coecke and Quanlong Wang. ZX-rules for 2-qubit Cliﬀord+T quantum circuits. In
International Conference on Reversible Computation, pages 144–161. Springer, 2018.

16
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
9
Vincent Danos, Elham Kasheﬁ, Prakash Panangaden, and Simon Perdrix. Extended measure-
ment calculus. Semantic techniques in quantum computation, pages 235–310, 2009.
10
D. Deutsch. Quantum computational networks. Proceedings of the Royal Society of London.
Series A, Mathematical and Physical Sciences, 425(1868):73–90, 1989.
11
Toshinari Itoko, Rudy Raymond, Takashi Imamichi, and Atsushi Matsuo. Optimization of
quantum circuit mapping using gate transformation and commutation. Integration, 70:43–50,
2020.
12
Kazuo Iwama, Yahiko Kambayashi, and Shigeru Yamashita. Transformation rules for design-
ing CNOT-based quantum circuits. In Proceedings of the 39th annual Design Automation
Conference, pages 419–424, 2002.
13
Stephen Lack. Composing PROPs. In Theory and Applications of Categories, volume 13,
pages 147–163, 2004. URL: http://www.tac.mta.ca/tac/volumes/13/9/13-09abs.html.
14
Justin Makary, Neil J. Ross, and Peter Selinger. Generators and relations for real stabilizer
operators. In Chris Heunen and Miriam Backens, editors, Proceedings of the 18th International
Conference on Quantum Physics and Logic, QPL 2021, volume 343 of EPTCS, pages 14–36,
2021. doi:10.4204/EPTCS.343.2.
15
Dmitri Maslov, Gerhard W Dueck, D Michael Miller, and Camille Negrevergne. Quantum
circuit simpliﬁcation and level compaction. IEEE Transactions on Computer-Aided Design of
Integrated Circuits and Systems, 27(3):436–444, 2008.
16
Dmitri Maslov, Christina Young, D Michael Miller, and Gerhard W Dueck. Quantum circuit
simpliﬁcation using templates. In Design, Automation and Test in Europe, pages 1208–1213.
IEEE, 2005.
17
D Michael Miller, Dmitri Maslov, and Gerhard W Dueck. A transformation based algorithm
for reversible logic synthesis. In Proceedings of the 40th annual Design Automation Conference,
pages 318–323, 2003.
18
Cristopher Moore and Martin Nilsson. Parallel quantum computation and quantum codes.
SIAM journal on computing, 31(3):799–815, 2001.
19
M. Möttönen and J.J. Vartiainen. Decompositions of general quantum gates. Nova Science
Publishers Inc, United States, 2006.
20
Yunseong Nam, Neil J Ross, Yuan Su, Andrew M Childs, and Dmitri Maslov. Automated
optimization of large quantum circuits with continuous parameters. npj Quantum Information,
4(1):1–12, 2018.
21
Michael A. Nielsen and Isaac L. Chuang. Quantum Computation and Quantum Information.
Cambridge University Press, 2002.
22
C.C. Paige and M. Wei. History and generality of the cs decomposition. Linear Algebra and
its Applications, 208-209:303–326, 1994. URL: https://www.sciencedirect.com/science/
article/pii/0024379594904464, doi:https://doi.org/10.1016/0024-3795(94)90446-4.
23
André Ranchin and Bob Coecke. Complete set of circuit equations for stabilizer quantum
mechanics. Physical Review A, 90(1):012109, 2014.
24
Robert Raussendorf and Hans J Briegel. A one-way quantum computer. Physical review
letters, 86(22):5188, 2001.
25
Vivek Shende, Stephen Bullock, and Igor Markov. Synthesis of quantum logic circuits. (25),
2006-01-31 00:01:00 2006. URL: https://tsapps.nist.gov/publication/get_pdf.cfm?pub_
id=150894.
26
Sam Staton. Algebraic eﬀects, linearity, and quantum programming languages. In Pro-
ceedings of the 42nd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Pro-
gramming Languages, POPL ’15, pages 395–406, New York, NY, USA, 2015. Associ-
ation for Computing Machinery. URL: https://doi.org/10.1145/2676726.2676999, doi:
10.1145/2676726.2676999.
27
W Forrest Stinespring.
Positive functions on c∗-algebras.
Proceedings of the American
Mathematical Society, 6(2):211–216, 1955.

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
17
28
Lloyd N. Trefethen and David Bau. Numerical Linear Algebra. Other Titles in Applied
Mathematics. Society for Industrial and Applied Mathematics (SIAM, 3600 Market Street,
Floor 6, Philadelphia, PA 19104), 1997. URL: https://doi.org/10.1137%2F1.9780898719574,
doi:10.1137/1.9780898719574.
29
Farrokh Vatan and Colin Williams. Optimal quantum circuits for general two-qubit gates. Phys-
ical Review A, 69(3), mar 2004. URL: https://doi.org/10.1103%2Fphysreva.69.032315,
doi:10.1103/physreva.69.032315.
A
Bullet-based graphical notation for multi-controlled gates
We use the standard bullet-based graphical notation for multi-controlled gates where the
negative control (or anti-control)
is a shortcut notation for
X
X . For instance,
P(ϕ)
stands for the gate
P(ϕ)
on the third qubit positively controlled by the ﬁrst and fourth
qubits and negatively controlled by the second qubit. According to [5] we can simulate the
expected behaviour of this bullet-based notation in QC without using Equation (K∗).
Combining a control and anti-control on the same qubit makes the evolution independent
of this qubit. This is provable in QC without (K∗) and illustrated by the following example.
P(ϕ) P(ϕ)
=
P(ϕ)
Another expected behaviour provable in QC without (K∗) is the fact that controlled and
anti-controlled gates commute (even if the target qubits are not the same in both gates).
This is illustrated by the two following examples.
P(ϕ)
=
P(ϕ)
P(ϕ)
=
P(ϕ)
In the following, the use of such properties is denoted by (
) and refers to Propositions
15, 16 and 17 (together with Propositions 10 and 11 in some cases) of [5].
B
Proofs of circuit identities
The proofs are given in order of dependency, so as to guarantee that there is no circular
reasoning.
B.1
Proofs of the equations of Figure 1
Proof of Equation (7).
P(ϕ)
(5)
=
RX(ϕ)
P( ϕ
2 )
H
H
(4)
=
RX( ϕ
2 )
P( ϕ
2 )
H
H
H
H
RX(- ϕ
2 )
(C)(15)
=
RX( ϕ
2 )
P( ϕ
2 )
H
H
H
RX(- ϕ
2 )
H
H
H
(C)
=
RX( ϕ
2 )
P( ϕ
2 )
H
RX(- ϕ
2 )
H
H
H

18
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
(5)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
P(- ϕ
4 )
P( ϕ
4 )
(35)(30)(53)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
◀
B.2
Proofs of the equations of Figure 3
Proof of Equation (12) and Equation (25). Those two equations are consequences of Equa-
tion (J). See Proposition 20 of [5].
◀
Proof of Equation (13).
RX(θ1) RX(θ2)
(1)
=
P(θ1)
P(θ2)
H
H
H
H
- θ1
2 - θ2
2
(C)
=
P(θ1) P(θ2)
H
H
- θ1
2 - θ2
2
(12)
=
P(θ1+θ2)
H
H
- θ1+θ2
2
(1)
=
RX(θ1 + θ2)
◀
Proof of Equation (26).
Z
Z
RX(θ)
(3)(1)
=
X
P(θ)
H
H
X H
H
H
H
-θ/2
(C)
=
X
P(θ)
H
X
H
-θ/2
(25)
=
P(-θ)
H
H
θ/2
(1)
=
RX(-θ)
θ/2
-θ/2
(B)(A)
=
RX(-θ)
◀
Proof of Equation (8).
X
X
(D)
=
X
X
P(0)
(25)
=
P(0)
0
(D)(A)
=
◀
Proof of Equation (9).
Z
Z
(3)
=
X
H
H
X
H
H
(C)
=
X
H
X
H
(8)
=
H
H
(C)
=
◀
Proof of Equation (10).
RX(0)
(1)
=
P(0) H
0
H
(D)(A)
=
H
H
(C)
=
◀
Proof of Equation (11).
Z
(D)
=
P(0) Z
(12)
=
P(-π) P(π) Z
(2)
=
P(-π)
Z Z
(9)
=
P(-π)
◀

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
19
Proof of Equation (14).
(D)
=
P(0)
(G)
=
P(0)
(D)
=
◀
Proof of Equation (16).
=
(E)
=
(14)
=
(E)
=
◀
Proof of Equation (27).
P(ϕ)
=
P(ϕ)
(E)
=
P(ϕ)
(14)
=
P(ϕ)
(G)
=
P(ϕ)
◀
Proof of Equation (15).
H
H
(C)
=
H
H
H
H
(H)
=
H
P( π
2 )
H
P( π
2 )
P(- π
2 )
(27)
=
H
P( π
2)
H
P( π
2 )
P(- π
2 )
(H)
=
H
H
H
H
(C)
=
H
H
◀
Proof of Equation (28).
RX(θ)
(1)(C)
=
P(θ)
H
H
-θ/2
H
H
(15)
=
P(θ)
H
H
H
H
-θ/2
(27)
=
P(θ)
H
H
H
H
-θ/2
(15)
=
P(θ)
H
H
H
H
-θ/2
(1)(C)
=
RX(θ)
◀
Proof of Equation (17).
P(ϕ)
(14)
=
P(ϕ)
(G)
=
P(ϕ)
◀
Proof of Equation (18).
RX(θ)
(1)(C)
=
P(θ)
H
H
H
H
-θ/2
(15)
=
P(θ)
H
H
H
H
-θ/2
(17)
=
P(θ)
H
H
H
H
-θ/2
(15)
=
P(θ)
H
H
H
H
-θ/2
(1)(C)
=
RX(θ)
◀

20
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
Proof of Equation (19).
X
(3)(C)
=
Z
H
H
H
H
(15)
=
Z
H
H
H
H
(2)(17)
=
Z
H
H
H
H
(15)
=
Z
H
H
H
H
(3)(C)
=
X
◀
Proof of Equation (20).
X
(C)
=
X
H H
H H
(H)
=
X
H
H P( π
2 )
P( π
2 )
P(- π
2 )
(27)
=
Z H
H P( π
2 )
P( π
2 )
P(- π
2 )
(17)
=
Z
H
H P( π
2 )
P( π
2 )
P(- π
2 )
(11)
=
P(-π)
H
H P( π
2 )
P( π
2 )
P(- π
2 )
(12)
=
H
H
P(- π
2 )
P( π
2 )
P(- π
2 )
(25)
=
H
H
P(- π
2 )
P(- π
2 )
P( π
2 ) X
X
X
X
- π
2
π
2
(B)(A)
=
H
H
P(- π
2 )
P(- π
2 )
P( π
2 ) X
X
X
X
(19)(8)
=
H
H
P(- π
2 )
P(- π
2 )
P( π
2 )
X
X
(27)
=
H
H
P(- π
2 )
P(- π
2 )
P( π
2 )
X
X
(C)(14)
=
H
P(- π
2 )
P(- π
2 )
P( π
2 )
X
X
H
H
H
(H)
=
H
P(- π
2 )
P(- π
2 )
P( π
2 )
X
X
H
P( π
2 )
P( π
2 )
P(- π
2 )
(27)(17)
=
H
P(- π
2 )
P(- π
2 )
P( π
2 )
X
X
H
P( π
2 )
P( π
2 )
P(- π
2 )
(12)(D)(14)
=
H
X
X
H
(C)
=
X
X
◀
Proof of Equation (21).
Z
(3)(C)
=
X H
H
H
H
(15)
=
X
H
H
H
H
(8)(20)
=
X
H
H
H
H
X
(15)
=
X
H
H
H
H
X
(3)
=
Z
Z
◀

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
21
Proof of Equation (22).
(C)(15)
=
H
H
H
H
H
H
(14)
=
H
H
H
H
H
H
(14)
=
H
H
H
H
H
H
=
H
H
H
H
H
H
(F)
=
H
H
H
H
H
H
(14)
=
H
H
H
H
H
H
=
H
H
H
H
H
H
(C)(15)
=
◀
Proof of Equation (23).
(C)(15)
=
H
H
H
H
H
H
(22)
=
H
H
H
H
H
H
(C)(15)
=
◀
Proof of Equation (24).
(C)(15)
=
H
H
H
H
H
H
(F)
=
H
H
H
H
H
H
(C)(15)
=
◀
Proof of Equation (29).
P(α1)
RX(α2)
P(α3)
(1)
=
RX(α1)
P(α2)
RX(α3)
H
H
H
H
H
H
α0
(C)
=
RX(α1)
P(α2)
RX(α3)
H
H
α0
(J)
=
P(β1)
RX(β2)
P(β3)
H
H
α0 + β′
0
(1)
=
RX(β1)
P(β2)
RX(β3)
H
H
β0
H
H
H
H
H
H
(C)
=
RX(β1)
P(β2)
RX(β3)
β0
With α0 := α1−α2+α3
2
and β0 := α0 + β′
0 + β1−β2+β3
2
.
◀
B.3
Proofs of the equations of Figure 4
Equations (30) and (31) are proved in Proposition 13 of [5]. Equation (33) is proved in
Lemma 53 of [5]. Equation (34) is proved in Lemma 47 of [5]. Equation (35) is proved in
Proposition 12 of [5]. Equations (36) and (37) are proved in Proposition 11 of [5]. The proofs
also hold for the equational theory QC because all the equations used are provable in QC.

22
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
Proof of Equation (32).
(6)
=
P(π)
P(π)
H
H
H
H
(C)
=
P(π) P(π)
H
H
(30)
=
P(2π)
H
H
(7)
=
P(π)
H
H
P(-π)
P(π)
(7)
=
H
H
P( π
2 )
P(- π
2 )
P( π
2 )
P( π
2 )
P(- π
2 )
P( π
2 )
P(- π
2 )
P( π
2 )
P(- π
2 )
(9)(21)
=
H
H
P( π
2 )
P(- π
2 )
P( π
2 )
P( π
2 )
P(- π
2 )
P( π
2 )
P(- π
2 )
P( π
2 )
P(- π
2 )
Z
Z
Z
(2)(12)
=
H
H
P( π
2 )
P(- π
2 )
P( π
2 )
P( π
2 )
P(- π
2 )
P( π
2 )
P( π
2 )
P(- π
2 )
P( π
2 )
(H)
=
H
H
H
H
H
H
H
H
(C)(15)
=
H
H
H
H
H
H
(F)
=
H
H
H
H
(14)
=
H
H
H
H
(C)(15)
=
H
H
(14)(C)
=
◀
B.4
Proofs of the equations of Figure 8
Proof of Equation (40).
X
X
(20)
=
X
(M)
=
X
◀
Proof of Equation (44).
RX(θ)
(4)
=
RX( θ
2)
RX(- θ
2)
H
H
(C)
=
RX( θ
2)
RX(- θ
2)
H
H
H
H
(C)(15)
=
RX( θ
2)
RX(- θ
2)
H
H
H
H
(M)
=
RX( θ
2)
RX(- θ
2)
H
H
H
H

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
23
(C)
=
RX( θ
2)
RX(- θ
2)
(31)(53)
=
◀
Proof of Equation (43). By induction on the number of controls with base case n = 1
control.
P(ϕ)
(7)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
(L)
=
P( ϕ
2 )
P(- ϕ
2 )
(M)
=
P( ϕ
2 ) P(- ϕ
2 )
(12)(D)
=
P(ϕ)
(36)
=
P(ϕ)
(7)
=
P( ϕ
2 )
P(- ϕ
2 )
P( ϕ
2 )
(35)
=
P( ϕ
2 )
P(- ϕ
2 )
P( ϕ
2 )
IH
=
P( ϕ
2 )
P(- ϕ
2 )
=
P( ϕ
2 )
P(- ϕ
2 )
(M)
=
P( ϕ
2 ) P(- ϕ
2 )
(30)(53)
=
◀
Proof of Equation (46).
RX(θ)
X
X
(4)
=
RX( θ
2)
X
X
RX(- θ
2)
H
H
(C)
=
RX( θ
2)
X
X
RX(- θ
2)
H
H
H
H
(C)(15)
=
RX( θ
2)
X
X
RX(- θ
2)
H
H
H
H
(8)
=
RX( θ
2)
X
X
RX(- θ
2)
H
H
H
H
X
X
(20)
=
RX( θ
2)
X
RX(- θ
2)
H
H
H
H
X
(M)
=
RX( θ
2)
X
RX(- θ
2)
H
H
H
H
X
(3)
=
RX( θ
2)
Z
RX(- θ
2)
Z
(34)
=
RX( θ
2)
RX( θ
2)
(31)
=
RX(θ)
◀

24
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
Proof of Equation (45).
P(ϕ)
X
X
(35)
=
P(ϕ)
X
X
(33)
=
P(-ϕ)
P(ϕ)
(35)
=
P(-ϕ)
P(ϕ)
(43)
=
P(ϕ)
◀
Proof of Equation (41).
(6)
=
P(π)
H
H
(43)
=
H
H
(C)
=
◀
Proof of Equation (42).
X
X
(6)
=
X
X
P(π)
H
H
(45)
=
P(π)
H
H
(7)
=
P( π
2 )
H
H
P(- π
2 )
P( π
2 )
(H)
=
H
H
H
H
(C)
=
◀
C
Proofs used for the completeness of QC
C.1
1-CNot completeness
In this Appendix, I, X, Z, CNOT, P(ϕ) and RX(θ) refers to the unitaries associated with
the quantum gates
,
X ,
Z ,
,
P(ϕ)
and
RX(θ)
respectively.
▶Lemma 30 (1-qubit completeness). QC is complete for 1-qubit quantum circuits, i.e. for
any 1-qubit quantum circuits C1, C2 ∈QC, if JC1K = JC2K then QC ⊢C1 = C2.
Proof. QC contains all the equations of the complete equational theory from [5] acting on
at most one qubit.
◀
▷Claim 31.
By inputing and projecting the CNOT unitary on |0⟩1 , |1⟩1 , |+⟩2 , |−⟩2 and
⟨0|1 , ⟨1|1 , ⟨+|2 , ⟨−|2, we get the following equations:
CNOT |0⟩1 = (I ⊗I) |0⟩1
⟨0|1 CNOT = ⟨0|1 (I ⊗I)
CNOT |1⟩1 = (I ⊗X) |1⟩1
⟨1|1 CNOT = ⟨1|1 (I ⊗X)
CNOT |+⟩2 = (I ⊗I) |+⟩2
⟨+|2 CNOT = ⟨+|2 (I ⊗I)
CNOT |−⟩2 = (Z ⊗I) |−⟩2
⟨−|2 CNOT = ⟨−|2 (Z ⊗I)
▶Lemma 32. Let U ∈U2 be a 1-qubit unitary. If ⟨0| U |0⟩= 0 ∨⟨1| U |1⟩= 0 then there
exist ϕ, δ ∈R such that U = eiδXP(ϕ). Similarly, if ⟨+| U |+⟩= 0 ∨⟨−| U |−⟩= 0 then
there exist θ, δ ∈R such that U = eiδZRX(θ).

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
25
Proof. First notice that ⟨0| U |0⟩= 0 iﬀ⟨1| U |1⟩= 0.
Then by unitarity there exists
δ, φ ∈R such that U =
  0
eiφ
eiδ
0

= X
  eiδ
0
0
eiφ

= eiδX
  1
0
0 ei(φ−δ)

. And we are done by taking
ϕ := φ −δ.
We prove the second statement by reducing it to the ﬁrst one. ⟨+| U |+⟩= 0∨⟨−| U |−⟩= 0
iﬀ⟨0| HUH |0⟩= 0 ∨⟨1| HUH |1⟩= 0. Thus there exists θ, φ ∈R such that HUH =
eiφXP(θ). This implies that U = eiφHXP(θ)H = ei(φ+ θ
2)ZRX(θ) and we are done by
taking δ := φ + θ
2.
◀
▶Lemma 33. For any ϕ, ϕ′, θ, θ′, δ ∈R, we have
(
P(ϕ)P(ϕ′) = eiδI ⇒ϕ′ = −ϕ[2π]
RX(θ)RX(θ′) = eiδI ⇒θ′ = −θ[2π]
Proof. Let ϕ, ϕ′, θ, θ′, δ ∈R. We prove the ﬁrst statement as follows.
P(ϕ)P(ϕ′) = eiδI ⇒
(
1 = eiδ
ei(ϕ+ϕ′) = eiδ ⇒ϕ′ = −ϕ[2π]
We prove the second statement by reducing it to the ﬁrst one as follows.
RX(θ)RX(θ′) = eiδI ⇒e−i θ
2 + θ′
2

HP(θ)P(θ′)H = eiδI
⇒e−i θ
2 + θ′
2

P(θ)P(θ′) = eiδI
⇒P(θ)P(θ′) = ei δ+ θ
2 + θ′
2

⇒θ′ = −θ[2π]
◀
▶Lemma 34. Let A, B, C, D ∈U2 be 1-qubit unitaries, if (C ⊗D) ◦CNOT ◦(A ⊗B) =
CNOT (see the following circuit representation) then there exist ϕ, θ, α, β, γ ∈R and
k, l ∈{0, 1} such that A = eiαXkP(ϕ), B = eiβZlRX(θ), C = eiγP(−ϕ)ZlXk and
D = ei(−α−β−γ)RX(−θ)ZlXk.
s
A
B
C
D
{
=
s
{
Proof. From the condition we derive four equations satisﬁed by A, B, C, D and we conduct
a case distinction corresponding to the four possible assignements of k, l ∈{0, 1}.
(C ⊗D) ◦CNOT ◦(A ⊗B) = CNOT
⇒
(
(C ⊗D) ◦CNOT ◦(I ⊗B) = CNOT ◦(A† ⊗I)
(C ⊗D) ◦CNOT ◦(A ⊗I) = CNOT ◦(I ⊗B†)
⇒











⟨0|1 (C ⊗D) ◦CNOT ◦(I ⊗B) |0⟩1 = ⟨0|1 CNOT ◦(A† ⊗I) |0⟩1
⟨1|1 (C ⊗D) ◦CNOT ◦(I ⊗B) |1⟩1 = ⟨1|1 CNOT ◦(A† ⊗I) |1⟩1
⟨+|2 (C ⊗D) ◦CNOT ◦(A ⊗I) |+⟩2 = ⟨+|2 CNOT ◦(I ⊗B†) |+⟩2
⟨−|2 (C ⊗D) ◦CNOT ◦(A ⊗I) |−⟩2 = ⟨−|2 CNOT ◦(I ⊗B†) |−⟩2
Claim 31
⇒











⟨0|1 (C ⊗D) ◦(I ⊗I) ◦(I ⊗B) |0⟩1 = ⟨0|1 (I ⊗I) ◦(A† ⊗I) |0⟩1
⟨1|1 (C ⊗D) ◦(I ⊗X) ◦(I ⊗B) |1⟩1 = ⟨1|1 (I ⊗X) ◦(A† ⊗I) |1⟩1
⟨+|2 (C ⊗D) ◦(I ⊗I) ◦(A ⊗I) |+⟩2 = ⟨+|2 (I ⊗I) ◦(I ⊗B†) |+⟩2
⟨−|2 (C ⊗D) ◦(Z ⊗I) ◦(A ⊗I) |−⟩2 = ⟨−|2 (Z ⊗I) ◦(I ⊗B†) |−⟩2

26
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
⇒











⟨0| C |0⟩DB = ⟨0| A† |0⟩I
⟨1| C |1⟩DXB = ⟨1| A† |1⟩X
⟨+| D |+⟩CA = ⟨+| B† |+⟩I
⟨−| D |−⟩CZA = ⟨−| B† |−⟩Z
Case ⟨0| A† |0⟩̸= 0 and ⟨+| B† |+⟩̸= 0. It must also be the case that ⟨0| C |0⟩̸= 0
and ⟨+| D |+⟩̸= 0. Moreover, by unitarity of A† and B†, we also have ⟨1| A† |1⟩̸= 0 and
⟨−| B† |−⟩̸= 0. The ﬁrst equation implies D = eiδB† for some δ ∈R, which implies that
⟨+| D |+⟩= eiδ ⟨+| B† |+⟩and ⟨−| D |−⟩= eiδ ⟨−| B† |−⟩. Then the third equation implies
C = e−iδA†, which implies ⟨1| C |1⟩= e−iδ ⟨1| A† |1⟩. Hence the system becomes:











DB = eiδI
DXB = eiδX
CA = e−iδI
CZA = e−iδZ
⇒
(
CA = CZAZ
DB = DXBX
The ﬁrst equation implies that there exist ϕ, α ∈R such that A = eiαP(ϕ) (because
A = ZAZ), which implies that C = ei(−δ−α)P(−ϕ). Similarly, the second equation implies
that there exist θ, β ∈R such that B = eiβRX(θ) (because B = XBX), which implies that
D = ei(δ−β)RX(−θ). And we are done by tacking k = l = 0 and γ := −δ −α which leads to
δ −β = −α −β −γ.
Case ⟨0| A† |0⟩= 0 and ⟨+| B† |+⟩̸= 0. It must also be the case that ⟨0| C |0⟩= 0
and ⟨+| D |+⟩̸= 0. Lemma 32 implies that there exist ϕ, ϕ′, α, γ ∈R such that A = eiαXP(ϕ)
and C = eiγP(ϕ′)X. Moreover, the third equation implies CA = eiδI for some δ ∈R, thus
ei(α+γ)P(ϕ′)XXP(ϕ) = eiδI, which implies that ϕ′ = −ϕ[2π] (Lemma 33). Then we can
use the following derivation to get a new condition satisﬁed by B and D.
s
P(ϕ) X
B
D
X P(−ϕ)
α+γ
{
(20)
=
s
P(ϕ)
B
X
P(−ϕ)
α+γ
D
{
(17)(12)(D)
=
s
B
X
α+γ
D
{
We get eα+γ(I ⊗DX) ◦CNOT ◦(I ⊗B) = CNOT from which we obtain two new equations:
eα+γ(I ⊗DX) ◦CNOT ◦(I ⊗B) = CNOT
⇒
(
eα+γ ⟨0|1 (I ⊗DX) ◦CNOT ◦(I ⊗B) |0⟩1 = ⟨0|1 CNOT |0⟩1
eα+γ ⟨1|1 (I ⊗DX) ◦CNOT ◦(I ⊗B) |1⟩1 = ⟨1|1 CNOT |1⟩1
Claim 31
⇒
(
eα+γ ⟨0|1 (I ⊗DX) ◦(I ⊗I) ◦(I ⊗B) |0⟩1 = ⟨0|1 (I ⊗I) |0⟩1
eα+γ ⟨1|1 (I ⊗DX) ◦(I ⊗X) ◦(I ⊗B) |1⟩1 = ⟨1|1 (I ⊗X) |1⟩1
⇒
(
eα+γDXB = I
eα+γDXXB = X
This implies that DXB = DBX, thus there exist θ, β ∈R such that B = eiβRX(θ) (because
B = XBX). The ﬁrst equation implies D = ei(−α−β−γ)RX(−θ)X, and we are done by
tacking k = 1 and l = 0.
Case ⟨0| A† |0⟩̸= 0 and ⟨+| B† |+⟩= 0. It must also be the case that ⟨0| C |0⟩̸= 0 and
⟨+| D |+⟩= 0. Lemma 32 implies that there exist θ, θ′, β, σ ∈R such that B = eiβZRX(θ)
and D = eiσRX(θ′)Z. Moreover, the ﬁrst equation implies DB = eiδI for some δ ∈R, thus

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
27
ei(β+σ)RX(θ′)ZZRX(θ) = eiδI, which implies that θ′ = −θ[2π] (Lemma 33). Then we can
use the following derivation to get a new condition satisﬁed by A and C.
s
RX(θ) Z
A
C
Z RX(−θ)
β+σ
{
(21)
=
s
RX(θ)
A
C
Z
RX(−θ)
β+σ
{
(18)(13)(10)
=
s
A
C
Z
β+σ
{
We get eβ+σ(CZ ⊗I) ◦CNOT ◦(A ⊗I) = CNOT from which we obtain two new equations:
eβ+σ(CZ ⊗I) ◦CNOT ◦(A ⊗I) = CNOT
⇒
(
eβ+σ ⟨+|2 (CZ ⊗I) ◦CNOT ◦(A ⊗I) |+⟩2 = ⟨+|2 CNOT |+⟩2
eβ+σ ⟨−|2 (CZ ⊗I) ◦CNOT ◦(A ⊗I) |−⟩2 = ⟨−|2 CNOT |−⟩2
⇒
(
eβ+σ ⟨+|2 (CZ ⊗I) ◦(I ⊗I) ◦(A ⊗I) |+⟩2 = ⟨+|2 (I ⊗I) |+⟩2
eβ+σ ⟨−|2 (CZ ⊗I) ◦(Z ⊗I) ◦(A ⊗I) |−⟩2 = ⟨−|2 (Z ⊗I) |−⟩2
⇒
(
eβ+σCZA = I
eβ+σCZZA = Z
This implies that CZA = CAZ, thus there exist ϕ, α ∈R such that A = eiαP(ϕ) (because
A = ZAZ). The ﬁrst equation implies C = ei(−α−β−σ)P(−ϕ)Z, and we are done by tacking
k = 0, l = 1 and γ := −α −β −σ, which leads to σ = −α −β −γ.
Case ⟨0| A† |0⟩= 0 and ⟨+| B† |+⟩= 0. It must also be the case that ⟨0| C |0⟩= 0
and ⟨+| D |+⟩= 0. Lemma 32 implies that there exist ϕ, ϕ′, θ, θ′, α, β, γ, δ ∈R such that
A = eiαXP(ϕ), B = eiβZRX(θ), C = eiγP(ϕ′)X and D = eiδRX(θ′)Z. Then we can use
the following derivation to get a new condition satisﬁed by ϕ, ϕ′, θ, θ′.
s
RX(θ) Z
Z RX(θ′)
α+β+γ+δ
P(ϕ)
P(ϕ′)
X
X
{
(20)(21)
=
s
RX(θ)
Z
RX(θ′)
α+β+γ+δ
P(ϕ)
P(ϕ′)
X
{
We get ei(α+β+γ+δ)(P(ϕ′)Z ⊗RX(θ′)X)CNOT(P(ϕ) ⊗RX(θ)) = CNOT from which we
obtain two new equations:
ei(α+β+γ+δ)(P(ϕ′)Z ⊗RX(θ′)X)CNOT(P(ϕ) ⊗RX(θ)) = CNOT
⇒
(
ei(α+β+γ+δ) ⟨0|1 (P(ϕ′)Z ⊗RX(θ′)X)CNOT(P(ϕ) ⊗RX(θ)) |0⟩1 = ⟨0|1 CNOT |0⟩1
ei(α+β+γ+δ) ⟨+|2 (P(ϕ′)Z ⊗RX(θ′)X)CNOT(P(ϕ) ⊗RX(θ)) |+⟩2 = ⟨+|2 CNOT |+⟩2
⇒
(
ei(α+β+γ+δ) ⟨0|1 (P(ϕ′)Z ⊗RX(θ′)X)(I ⊗I)(P(ϕ) ⊗RX(θ)) |0⟩1 = ⟨0|1 (I ⊗I) |0⟩1
ei(α+β+γ+δ) ⟨+|2 (P(ϕ′)Z ⊗RX(θ′)X)(I ⊗I)(P(ϕ) ⊗RX(θ)) |+⟩2 = ⟨+|2 (I ⊗I) |+⟩2
⇒
(
ei(α+β+γ+δ)RX(θ′)XRX(θ) = I
ei(α+β+γ+δ)e−i(θ+θ′)/2P(ϕ′)ZP(ϕ) = I
⇒
(
RX(θ′) = e−i(α+β+γ+δ)RX(−θ)X
P(ϕ′) = e−i(α+β+γ+δ)ei(θ+θ′)/2P(−ϕ)Z
⇒
(
RX(θ′) = e−i(α+β+γ+δ)eiπ/2RX(π −θ)
P(ϕ′) = e−i(α+β+γ+δ)ei(θ+θ′)/2P(π −ϕ)
Lemma 33
⇒
(
θ′ = π −θ[2π]
ϕ′ = π −ϕ[2π]
Hence, we get A = eiαXP(ϕ), B = eiβZRX(θ), C = eiγP(π −ϕ)X = eiγP(−ϕ)ZX,
D = ei(−α−β−γ+π/2)RX(π −θ)Z = ei(−α−β−γ)RX(−θ)ZX and we are done by taking
k = l = 1.
◀

28
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
Proof of Lemma 8 (1-CNot completeness). Let C, C′ ∈QC be two 1-CNot quantum cir-
cuits, i.e. circuits containing at most one
gate each, such that JCK = JC′K.
First notice that if both C, C′ contains no CNot, then, according to Lemma 30 we have
QC ⊢C = C′. If C contains a CNot then one can show that C′ must contain a CNot otherwise
they would not have the same semantics.
Then, w.l.o.g. we can suppose that the CNot is applied to the ﬁrst two qubits in C. We
ﬁrst show that the CNot is also applied to the ﬁrst two qubits in C′, and that the permutation
of wires is the same in both circuits. Pushing all swaps to the right in C, we get:
⋆
⋆
⋆
⋆
c3
cn
...
...
σ
...
C
=
...
...
where σ is a permutation of wires. In C′, using the prop equations to move the CNot on the
ﬁrst two qubits, we get:
⋆
⋆
⋆
⋆
c′
3
c′
n
...
...
σ2
...
C′
=
...
...
σ1
...
By applying the inverse of all 1-qubit unitaries from C, as well as the inverse of σ, JCK = JC′K
becomes equivalent to:
u
wwwwwv
...
}
~
=
u
wwwwwv
⋆
⋆
⋆
⋆
...
...
σ3
...
σ1
c′′
3
c′′
n
...
}
~
with σ3 = σ2 ◦σ−1. It then becomes apparent that if σ1(i) ≥3, then σ3(σ1(i)) = i. Moreover,
we get Jc′′
i K = J
K. We then have:
u
wwwwwv
...
}
~
=
u
wwwwwv
⋆
⋆
⋆
⋆
...
σ′
3
σ′
1
}
~
Getting back to C and C′, we conclude that qubits that are not involved with the CNot have
the same 1-qubit unitary applied to them on both sides, and are permuted with the rest in
the same way. By completeness of QC for 1-qubit unitaries, it is now enough to show the
result when C and C′ are 2-qubit circuits.
We can now show that if a swap appears on one side, it also appears on the other side
(i.e. that σ′
1 = σ′
3 above). Indeed, suppose that C has a swap and C′ does not. Using the
prop equations, we can push the swap to the right, and get C =
◦¯C′. Thus JCK = JC′K is
then equivalent to J
K =
q
C′ ◦¯C†y
. We hence have a circuit C′ ◦¯C† that implements
,

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
29
using at most two CNots. This contradicts Theorem 6 of [29] that proves that the swap
requires at least 3 CNots. Hence, if C has a swap then so does C′.
In the case where the two circuits have a swap, the equality between the two becomes
QC-equivalent to the equality without swaps on both side. Hence, we can assume w.l.o.g. that
C and C′ are 2-qubit circuits containing one and only one CNot and no swap. Moreover
thanks to Equation (15) we can assume:
C
=
A1
B1
C1
D1
C′
=
A2
B2
C2
D2
for some 1-qubit circuits
Ai ,
Bi ,
Ci ,
Di .
First, by QC-equivalence and Proposition 7, we reduce it to showing the following equation
for any semantically correct 1-qubit circuits
A , B , C , D .
A
B
C
D
=
Lemma 34 and Lemma 30 together with Equations (A) and (B) implies that this is always
the case that this equation is QC-equivalent to one of the following equations:
P(ϕ)
P(−ϕ)
RX(θ)
RX(−θ)
=
P(ϕ)
P(−ϕ)
RX(θ)
RX(−θ)
X
X
X
=
P(ϕ)
P(−ϕ)
RX(θ)
RX(−θ)
Z
Z
Z
=
P(ϕ)
P(−ϕ)
RX(θ)
RX(−θ)
Z
X
X
Z
Z
X
=
We conclude the proof by observing that we can derive all those equations for any ϕ, θ ∈R
using Equations (21),(20),(17),(18),(12),(13),(D), and (10).
◀
C.2
Proof of Equation (38)
▶Lemma 35. Equation (51) can be derived in QC.
H
=
RX( π
2 )
P( π
2 )
RX( π
2 )
π
4
(51)
Proof.
H
(D)(12)(10)(13)
=
RX( π
2 ) P( π
2 )
RX(- π
2 ) P(- π
2 )
P(- π
2 )
P( π
2 )
H
(I)
=
RX(- π
2 ) P(- π
2 )
P(- π
2 )
H
H
(C)
=
RX(- π
2 ) P(- π
2 )
P(- π
2 )
(1)
=
P(- π
2 )
P(- π
2 )
P(- π
2 ) H
H
π
4
(I)
=
P(- π
2 )
P(- π
2 )
P(- π
2 )
π
4
P( π
2 )
P( π
2 )
RX( π
2 )
P( π
2 )
P( π
2 )
RX( π
2 )
(12)(D)
=
RX( π
2 )
P( π
2 )
RX( π
2 )
π
4
◀

30
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
▶Lemma 36. For any 1-qubit circuit
C
∈QC, there exists α0, α1, α2, α3, β0, β1, β2, β3 ∈R
such that QC ⊢
C
=
RX(α1)
RX(α3)
P(α2)
α0
and QC ⊢
C
=
P(β1)
P(β3)
RX(β2)
β0
.
Proof. Whatever
C
is, we can always apply Equations (I), (J), (29), (A) and (B).
◀
Proof of Equation (38). First, we do some steps on the LHS and RHS circuits.
RX(-θ)
RX(θ)
RX(θ′)
RX(θ′)
H
H
(51)
=
RX(-θ)
RX(θ)
RX(θ′)
RX(θ′)
RX( π
2 )
H
RX( π
2 )
P( π
2 )
π
4
(18)(13)
=
RX(-θ)
RX(θ+ π
2 )
RX(θ′)
RX(θ′+ π
2 )
H
P( π
2 )
π
4
(28)
=
RX(-θ)
RX(θ+ π
2 )
RX(θ′)
RX(θ′+ π
2 )
H
P( π
2 )
π
4
(G)
=
RX(-θ)
RX(θ+ π
2 )
RX(θ′)
RX(θ′+ π
2 )
H
P( π
2 )
π
4
RX(-θ)
RX(θ)
RX(θ′)
RX(θ′)
H
H
(51)
=
RX(-θ)
RX(θ)
RX(θ′)
RX(θ′)
RX( π
2 )
H
RX( π
2 ) P( π
2 )
π
4
(18)(13)
=
RX(-θ)
RX(θ+ π
2 )
RX(θ′)
RX(θ′+ π
2 )
H
P( π
2 )
π
4
(28)
=
RX(-θ)
RX(θ+ π
2 )
RX(θ′)
RX(θ′+ π
2 )
H
P( π
2 )
π
4
(G)
=
RX(-θ)
RX(θ+ π
2 )
RX(θ′)
RX(θ′+ π
2 )
H
P( π
2 )
π
4
Equation (38) is QC-equivalent to the following equations for some αi, βi, γi, δi, νi ∈R.
The last equation is over 1-CNot circuits, which together with Lemma 8 conclude the proof.
RX(α1)
RX(α2) P(α3) RX(α4)
RX(α5) H
=
RX(β5)
RX(β4)
P(β3)
RX(β2)
RX(β1)
H
(J)
∼QC
RX(α1)
P(γ1) RX(γ2) P(γ3)
RX(α5) H
γ0
=
RX(β5)
P(δ3)
RX(δ2)
P(δ1)
RX(β1)
H
δ0
(17)
∼QC
RX(α1) P(γ1)
RX(γ2)
P(γ3) RX(α5) H
γ0
=
RX(β5)
P(δ3)
RX(δ2)
P(δ1)
RX(β1)
H
δ0
∼QC
RX(α1) P(γ1)
RX(γ2)
P(γ3) RX(α5) H
γ0
RX(-β5) P(-δ3)
=
RX(δ2)
P(δ1)
RX(β1)
H
δ0
Lemma 36
∼QC
RX(α1) P(γ1)
RX(γ2)
P(ν2)
RX(ν1)
γ0+ν0
RX(ν3)
=
RX(δ2)
P(δ1)
RX(β1)
H
δ0
(28)(18)
∼QC
RX(α1) P(γ1)
RX(γ2)
P(ν2)
RX(ν1)
γ0+ν0
=
RX(δ2)
P(δ1)
RX(β1)
H
δ0
RX(-ν3)

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
31
∼QC
RX(α1) P(γ1)
RX(γ2)
P(ν2)
RX(ν1)
γ0+ν0
=
RX(δ2)
P(δ1)
RX(β1)
H
δ0
RX(-ν3)
(G)
∼QC
RX(α1) P(γ1)
RX(γ2) P(ν2)
RX(ν1)
γ0+ν0
=
RX(δ2)
P(δ1)
RX(β1)
H
δ0
RX(-ν3)
◀
C.3
Proof of Equation (39)
H
RX(-θ)
RX(θ)
H
RX(θ)
RX(-θ)
RX(θ′)
RX(θ′)
H
RX(-θ′)
RX(-θ′)
H
(F)
=
H
RX(-θ)
RX(θ)
H
RX(θ)
RX(-θ)
RX(θ′)
RX(θ′)
H
RX(-θ′)
RX(-θ′)
H
(16)
=
H
RX(-θ)
RX(θ)
H
RX(θ)
RX(-θ)
RX(θ′)
RX(θ′)
H
RX(-θ′)
RX(-θ′)
H
(23)(18)
=
H
RX(-θ)
RX(θ)
H
RX(θ)
RX(-θ)
RX(θ′)
RX(θ′)
H
RX(-θ′)
RX(-θ′)
H
(15)(14)
=
H
RX(-θ)
RX(θ)
H
RX(θ)
RX(-θ)
RX(θ′)
RX(θ′)
H
RX(-θ′)
RX(-θ′)
H
=
H
RX(-θ)
RX(θ)
H
RX(θ)
RX(-θ)
RX(θ′)
RX(θ′)
H
RX(-θ′)
RX(-θ′)
H
(18)(28)
=
H
RX(-θ)
RX(θ)
H
RX(θ)
RX(-θ)
RX(θ′)
RX(θ′)
H
RX(-θ′)
RX(-θ′)
H
(23)(18)
=
H
RX(-θ)
RX(θ)
H
RX(θ)
RX(-θ)
RX(θ′)
RX(θ′)
H
RX(-θ′)
RX(-θ′)
H
(28)(18)
=
H
RX(-θ)
RX(θ)
H
RX(θ)
RX(-θ)
RX(θ′)
RX(θ′)
H
RX(-θ′)
RX(-θ′)
H

32
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
(38)
=
H
RX(-θ)
RX(θ)
H
RX(θ)
RX(-θ)
RX(θ′)
RX(θ′)
H
RX(-θ′)
RX(-θ′)
H
H
H
H
H
(C)(15)
=
H
RX(-θ)
RX(θ)
H
RX(θ)
RX(-θ)
RX(θ′)
RX(θ′)
H
RX(-θ′)
RX(-θ′)
H
(18)(28)
=
H
RX(-θ)
RX(θ)
H
RX(θ)
RX(-θ)
RX(θ′)
RX(θ′)
H
RX(-θ′)
RX(-θ′)
H
(23)
=
H
RX(-θ)
RX(θ)
H
RX(θ)
RX(-θ)
RX(θ′)
RX(θ′)
H
RX(-θ′)
RX(-θ′)
H
(18)(28)
=
H
RX(-θ)
RX(θ)
H
RX(θ)
RX(-θ)
RX(θ′)
RX(θ′)
H
RX(-θ′)
RX(-θ′)
H
(23)(18)(23)
=
H
RX(-θ)
RX(θ)
H
RX(θ)
RX(-θ)
RX(θ′)
RX(θ′)
H
RX(-θ′)
RX(-θ′)
H
(18)(28)
=
H
RX(-θ)
RX(θ)
H
RX(θ)
RX(-θ)
RX(θ′)
RX(θ′)
H
RX(-θ′)
RX(-θ′)
H
=
H
RX(-θ)
RX(θ)
H
RX(θ)
RX(-θ)
RX(θ′)
RX(θ′)
H
RX(-θ′)
RX(-θ′)
H
(14)(15)
=
H
RX(-θ)
RX(θ)
H
RX(θ)
RX(-θ)
RX(θ′)
RX(θ′)
H
RX(-θ′)
RX(-θ′)
H
(23)(18)
=
H
RX(-θ)
RX(θ)
H
RX(θ)
RX(-θ)
RX(θ′)
RX(θ′)
H
RX(-θ′)
RX(-θ′)
H
(16)
=
H
RX(-θ)
RX(θ)
H
RX(θ)
RX(-θ)
RX(θ′)
RX(θ′)
H
RX(-θ′)
RX(-θ′)
H

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
33
(F)
=
H
RX(-θ)
RX(θ)
H
RX(θ)
RX(-θ)
RX(θ′)
RX(θ′)
H
RX(-θ′)
RX(-θ′)
H
C.4
Proof of Equation (K∗
old), existence and uniqueness of the RHS of
Equation (K∗)
The proof uses some properties of multi-controlled gates:
▶Lemma 37. It follows from the equations of QC without Equation (K∗) that two multi-
controlled P gates always commute, regardless of the colours and positions of their controls,
and of the positions of their targets.
For instance,
P(ϕ)
P(ϕ′)
=
P(ϕ)
P(ϕ′)
Proof of Lemma 37. This is a direct consequence of the results of [5], namely of Lemma 54
together with Propositions 11, 12 and 15.
◀
▶Lemma 38. The following equations are consequences of the equations of QC without
Equation (K∗):
RX(θ)
P(ϕ)
=
RX(θ)
P(ϕ)
(52)
RX(0)
=
P(0)
=
(53)
▶Lemma 39. The following equation is a consequence of the equations of QC:
P(2π)
=
(54)
▶Lemma 40. The following equations are consequences of the equations of QC without
Equation (K∗), together with Equation (54):
RX(2π)
=
P(π)
(55)
RX(θ)
P(π)
=
RX(2π−θ)
P(π)
(56)
Proof of Equation (52). Equation (52) corresponds to Lemma 48 of [5], whose proof does
not use Equation (K∗
old).
◀
Proof of Equation (53). By a straightforward induction.
◀

34
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
Proof of Equation (54). The case with zero controls is a direct consequence of Equations (2),
(9), and (12). For the case with one or more controls, it suﬃces to remark that the derivation
given in [5] does not need δ9:
P(2π)
(53)
=
RX(0)
P(2π)
RX(0)
RX(0)
(K∗)
=
P(0) P(0) RX(0)
RX(0)
P(0) RX(0) P(0)
P(0)
(53)
=
◀
Proof of Equations (55) and (56). Equations (55) and (56) correspond respectively to
Lemmas 59 and 60 of [5], and it can be checked that their proofs given in [5] do not
need the full power of Equation (K∗
old) but only Equation (54).
◀
Given an instance of Equation (K∗
old), we prove that its right-hand side can be transformed
into a circuit of the same form as the right-hand side of Equation (K∗).
First, one can remark that
⟨1...101|
u
wv
RX(γ1)
P(γ2) RX(γ3)
RX(γ4)
}
~ |1...110⟩= −sin(γ3
2 ) sin(γ4
2 )
while
⟨1...101|
u
wv
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) RX(δ6) P(δ7)
P(δ8)
P(δ9)
}
~ |1...110⟩= −eiδ9 sin(δ3
2 ) sin(δ4
2 ).
If sin( δ3
2 ) sin( δ4
2 ) ̸= 0, this implies that eiδ9 is a real number, which, since δ9 ∈[0, 2π),
implies that δ9 ∈{0, π}.
If δ9 = 0, then
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) RX(δ6) P(δ7)
P(δ8)
P(δ9)
(53)
=
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) RX(δ6) P(δ7)
P(δ8)

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
35
If δ9 = π and δ6 = 0, then
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) RX(0) P(δ7)
P(δ8)
P(π)
(53)
=
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) P(δ7)
P(δ8)
P(π)
Lemma 37
=
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) P(δ7)
P(δ8)
P(π)
(55)
=
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) P(δ7)
P(δ8)
RX(2π)
(31)
=
P(δ1) P(δ2) RX(δ3)
P(δ5) P(δ7)
P(δ8)
RX(δ4+2π)
(53)
=
P(δ1) P(δ2) RX(δ3)
P(δ5)
P(δ7)
P(δ8)
RX(δ4+2π)
RX(0)
If δ9 = π and δ6 ̸= 0, then
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) RX(δ6) P(δ7)
P(δ8)
P(π)
Lemma 37
=
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) RX(δ6) P(δ7)
P(δ8)
P(π)
(
)
=
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) RX(δ6) P(δ7)
P(δ8)
P(π) P(π)
(
)
=
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) RX(δ6) P(δ7)
P(δ8)
P(π)
P(π)
(
)
=
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) RX(δ6) P(δ7)
P(δ8)
P(π)
P(π) P(π)
(55)
=
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) RX(δ6) P(δ7)
P(δ8)
P(π)
RX(2π)
P(π)

36
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
(31)
=
P(δ1) P(δ2) RX(δ3)
RX(δ4+2π)
P(δ5) RX(δ6) P(δ7)
P(δ8)
P(π)
P(π)
Lemma 37
=
P(δ1) P(δ2) RX(δ3)
RX(δ4+2π)
P(δ5)
RX(δ6) P(δ7)
P(δ8)
P(π)
P(π)
(56)
=
P(δ1) P(δ2) RX(δ3)
RX(δ4+2π)
P(δ5) RX(2π−δ6)
P(δ7)
P(δ8)
P(π)
P(π)
Lemma 37
=
P(δ1) P(δ2) RX(δ3)
RX(δ4+2π)
P(δ5) RX(2π−δ6) P(δ7)
P(δ8)
P(π)
P(π)
(35)
=
P(δ1) P(δ2) RX(δ3)
RX(δ4+2π)
P(δ5) RX(2π−δ6) P(δ7)
P(δ8)
P(π)
P(π)
(
)(30)
=
P(δ1) P(δ2) RX(δ3)
RX(δ4+2π)
P(δ5) RX(2π−δ6) P(δ7)
P(δ8+π)
(30)(54)
=
P(δ1) P(δ2) RX(δ3)
RX(δ4+2π)
P(δ5) RX(2π−δ6) P(δ7)
P(δ8+π mod 2π)
If sin( δ3
2 ) sin( δ4
2 ) = 0, then since δ3, δ4 ∈[0, 2π) and δ4 = 0 ⇒δ3 = 0, one necessarily has
δ3 = 0. In turn, the conditions of Figure 6 also imply that δ2 = 0. Additionally, this
implies that sin( γ3
2 ) sin( γ4
2 ) = 0 too, that is, sin( γ3
2 ) = 0 or sin( γ4
2 ) = 0.
If sin( γ3
2 ) = 0, then cos( γ3
2 ) ∈{−1, 1}, and one can remark that
⟨1...110|
u
wv
RX(γ1)
P(γ2) RX(γ3)
RX(γ4)
}
~ |1...110⟩= cos(γ3
2 )
while, since δ3 = 0,
⟨1...110|
u
wv
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) RX(δ6) P(δ7)
P(δ8)
P(δ9)
}
~ |1...110⟩= eiδ8 cos(δ6
2 ).
Hence, cos( δ6
2 ) has absolute value 1, which, since δ6 ∈[0, 2π), implies that δ6 = 0.9 In
turn, the conditions of Figure 6 also imply that δ5 = 0. Thus,
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) RX(δ6) P(δ7)
P(δ8)
P(δ9)
(53)
=
P(δ1)
RX(δ4)
P(δ7)
P(δ9)
P(δ8)
9 Moreover, eiδ8 is a real number, which, since δ8 ∈[0, 2π), implies that δ8 ∈{0, π}. Note however that
we do not use this property.

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
37
∗If δ9 ∈[0, π), then
P(δ1)
RX(δ4)
P(δ7)
P(δ9)
P(δ8)
Lemma 37,
(52)
=
P(δ1)
RX(δ4)
P(δ7)
P(δ9)
P(δ8)
(53)
=
P(δ1) P(δ9) RX(0)
RX(δ4)
P(0) RX(0) P(δ7)
P(δ8)
∗If δ9 ∈[π, 2π), then
P(δ1)
RX(δ4)
P(δ7)
P(δ9)
P(δ8)
(30)
=
P(δ1)
RX(δ4)
P(δ7)
P(π)
P(δ9−π)
P(δ8)
Lemma 37,
(52)
=
P(δ1)
RX(δ4)
P(δ7)
P(π)
P(δ9−π)
P(δ8)
(55)
=
P(δ1)
RX(δ4)
P(δ7)
RX(2π)
P(δ9−π)
P(δ8)
(31)
=
P(δ1)
RX(δ4+2π)
P(δ7)
P(δ9−π)
P(δ8)
(53)
=
P(δ1) P(δ9−π) RX(0)
RX(δ4+2π)
P(0) RX(0) P(δ7)
P(δ8)
If sin( γ4
2 ) = 0, then cos( γ4
2 ) ∈{−1, 1} and one has
⟨1...101|
u
wv
RX(γ1)
P(γ2) RX(γ3)
RX(γ4)
}
~ |1...101⟩= ± cos(γ1
2 )
while, since δ2 = 0,
⟨1...101|
u
wv
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) RX(δ6) P(δ7)
P(δ8)
P(δ9)
}
~ |1...101⟩= eiδ9 cos(δ4
2 ).
∗If cos( δ4
2 ) ̸= 0, then this implies that eiδ9 is a real number, so that δ9 ∈{0, π} and
we can proceed as in the ﬁrst case (where sin( δ3
2 ) sin( δ4
2 ) ̸= 0).

38
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
∗If cos( δ4
2 ) = 0, then on the one hand, since δ4 ∈[0, 2π), one has δ4 = π. In turn,
since δ3 = 0, the conditions of Figure 6 imply that δ1 = 0. On the other hand,
cos( γ1
2 ) = 0 too, so that sin( γ1
2 ) ∈{−1, 1} and
⟨1...101|
u
wv
RX(γ1)
P(γ2) RX(γ3)
RX(γ4)
}
~ |1...111⟩= ±i
while, since δ2 = 0,
⟨1...101|
u
wv
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) RX(δ6) P(δ7)
P(δ8)
P(δ9)
}
~ |1...111⟩= ±ieiδ9.
Hence, δ9 ∈{0, π} and we can also proceed as in the ﬁrst case.
Thus, given any instance of Equation (K∗
old), its right-hand side can be transformed into
P(δ′
1) P(δ′
2) RX(δ′
3)
RX(δ′
4)
P(δ′
5) RX(δ′
6) P(δ′
7)
P(δ′
8)
where
δ′
1 = δ1
δ′
3 = δ3
δ′
5 = δ5
δ′
7 = δ7
δ′
2 =







δ2
if δ9 ∈{0, π}
δ9
if δ9 ∈(0, π)
δ9 −π
if δ9 ∈(π, 2π)
δ′
4 =
(
δ4
if δ9 ∈[0, π)
δ4 + 2π
if δ9 ∈[π, 2π)
δ′
6 =
(
2π −δ6
if δ9 = π and δ6 ̸= 0
δ6
else
δ′
8 =
(
δ8 + π mod 2π
if δ9 = π and δ6 ̸= 0
δ8
else
.
These angles satisfy the conditions of Figure 2. Indeed, the only case where we can obtain
δ′
3 = 0 and δ′
2 ̸= 0 in the case distinction above, is the case where sin( γ3
2 ) = 0, in which
δ′
6 = δ6 = 0. For the other conditions of Figure 2, the fact that they are satisﬁed by the δ′
k
follows directly from the fact that the δj satisfy the conditions of Figure 6.
The transformation only uses:
Equations (30), (31), and (35), which are proved in [5] without using Equation (K∗
old)
and therefore are provable in QC without Equation (K∗),
Lemma 37 and Equations (52) and (53), which only rely on QC without Equation (K∗),
Equation (54), which can be proved using Equation (K∗
old) instead of Equation (K∗)
and Equations (55) and (56), which are consequences of the equations of QC without
Equation (K∗) together with Equation (54).

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
39
Since Equation (K∗
old) has been proved to be sound in [5] (that is, for any angles in its
left-hand side, there exist a choice of angles in its right-hand side satisfying the conditions of
Figure 6 that makes it sound), and it is easy to see that all equations of QC except maybe
Equation (K∗) are sound, this implies that Equation (K∗) is sound.
Moreover, this proves that Equation (K∗
old) is a consequence of the equations of QC.
It remains to prove that for any choice of angles in the LHS of Equation (K∗), the choice
of angles in its RHS is unique. To this end, we now consider an instance of Equation (K∗)
and transform its RHS into the RHS of the instance of (K∗
old) with same LHS. To make easier
to diﬀerentiate between the parameters of the respective RHS of Equations (K∗) and (K∗
old),
we keep denoting those of Equation (K∗) as δ′
k:
RX(γ1)
P(γ2) RX(γ3)
RX(γ4)
=
P(δ′
1) P(δ′
2) RX(δ′
3)
RX(δ′
4)
P(δ′
5) RX(δ′
6) P(δ′
7)
P(δ′
8)
(K∗)
If δ′
4 ∈[0, 2π) and either δ′
3 ̸= 0 or δ′
2 = 0, then
P(δ′
1) P(δ′
2) RX(δ′
3)
RX(δ′
4)
P(δ′
5) RX(δ′
6) P(δ′
7)
P(δ′
8)
(53)
=
P(δ′
1) P(δ′
2) RX(δ′
3)
RX(δ′
4)
P(δ′
5) RX(δ′
6) P(δ′
7)
P(δ′
8)
P(0)
If δ′
4 ∈[2π, 4π), either δ′
3 ̸= 0 or δ′
2 = 0, and δ′
6 = 0, then
P(δ′
1) P(δ′
2) RX(δ′
3)
P(δ′
5)
P(δ′
7)
P(δ′
8)
RX(δ′
4)
RX(0)
(53)
=
P(δ′
1) P(δ′
2) RX(δ′
3)
P(δ′
5) P(δ′
7)
P(δ′
8)
RX(δ′
4)
(31)
=
P(δ′
1) P(δ′
2) RX(δ′
3)
RX(δ′
4−2π)
P(δ′
5) P(δ′
7)
P(δ′
8)
RX(2π)
(55)
=
P(δ′
1) P(δ′
2) RX(δ′
3)
RX(δ′
4−2π)
P(δ′
5) P(δ′
7)
P(δ′
8)
P(π)
Lemma 37
=
P(δ′
1) P(δ′
2) RX(δ′
3)
RX(δ′
4−2π)
P(δ′
5) P(δ′
7)
P(δ′
8)
P(π)
(53)
=
P(δ′
1) P(δ′
2) RX(δ′
3)
RX(δ′
4−2π)
P(δ′
5) RX(0) P(δ′
7)
P(δ′
8)
P(π)
If δ′
4 ∈[2π, 4π), either δ′
3 ̸= 0 or δ′
2 = 0, and δ′
6 ̸= 0, then
P(δ′
1) P(δ′
2) RX(δ′
3)
RX(δ′
4)
P(δ′
5) RX(δ′
6) P(δ′
7)
P(δ′
8)

40
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
(31)
=
P(δ′
1) P(δ′
2) RX(δ′
3)
RX(δ′
4−2π)
P(δ′
5) RX(δ′
6) P(δ′
7)
P(δ′
8)
RX(2π)
(55)
=
P(δ′
1) P(δ′
2) RX(δ′
3)
RX(δ′
4−2π)
P(δ′
5) RX(δ′
6) P(δ′
7)
P(δ′
8)
P(π)
Lemma 37
=
P(δ′
1) P(δ′
2) RX(δ′
3)
RX(δ′
4−2π)
P(δ′
5)
RX(δ′
6) P(δ′
7)
P(δ′
8)
P(π)
(
)
=
P(δ′
1) P(δ′
2) RX(δ′
3)
RX(δ′
4−2π)
P(δ′
5)
RX(δ′
6) P(δ′
7)
P(δ′
8)
P(π) P(π)
(
)
=
P(δ′
1) P(δ′
2) RX(δ′
3)
RX(δ′
4−2π)
P(δ′
5)
RX(δ′
6) P(δ′
7)
P(δ′
8)
P(π)
P(π)
(56)
=
P(δ′
1) P(δ′
2) RX(δ′
3)
RX(δ′
4−2π)
P(δ′
5)
RX(2π−δ′
6)
P(δ′
7)
P(δ′
8)
P(π)
P(π)
Lemma 37
=
P(δ′
1) P(δ′
2) RX(δ′
3)
RX(δ′
4−2π)
P(δ′
5)
RX(2π−δ′
6)
P(δ′
7)
P(δ′
8)
P(π)
P(π)
(
)
=
P(δ′
1) P(δ′
2) RX(δ′
3)
RX(δ′
4−2π)
P(δ′
5)
RX(2π−δ′
6)
P(δ′
7)
P(δ′
8)
P(π)
P(π)
P(π)
(35)(
)
=
P(δ′
1) P(δ′
2) RX(δ′
3)
RX(δ′
4−2π)
P(δ′
5)
RX(2π−δ′
6)
P(δ′
7)
P(δ′
8)
P(π)
P(π)
Lemma 37,
(30)
=
P(δ′
1) P(δ′
2) RX(δ′
3)
RX(δ′
4−2π)
P(δ′
5)
RX(2π−δ′
6)
P(δ′
7)
P(δ′
8+π)
P(π)
(30)(54)
=
P(δ′
1) P(δ′
2) RX(δ′
3)
RX(δ′
4−2π)
P(δ′
5)
RX(2π−δ′
6)
P(δ′
7)
P(δ′
8+π mod 2π)
P(π)
If δ′
4 ∈[0, 2π) but δ′
3 = 0 and δ′
2 ̸= 0, then the conditions of Figure 2 imply that δ′
6 = 0,
so that
P(δ′
1) P(δ′
2) RX(0)
RX(δ′
4)
P(δ′
5) RX(0) P(δ′
7)
P(δ′
8)

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
41
(53)
=
P(δ′
1) P(δ′
2)
RX(δ′
4)
P(δ′
5) P(δ′
7)
P(δ′
8)
(52),
Lemma 37
=
P(δ′
1)
P(δ′
2)
RX(δ′
4)
P(δ′
5) P(δ′
7)
P(δ′
8)
(53)
=
P(δ′
1) P(0) RX(0)
RX(δ′
4)
P(δ′
5) RX(0) P(δ′
7)
P(δ′
8)
P(δ′
2)
If δ′
4 ∈[2π, 4π), δ′
3 = 0 and δ′
2 ̸= 0, then the conditions of Figure 2 still imply that δ′
6 = 0,
so that
P(δ′
1) P(δ′
2) RX(0)
RX(δ′
4)
P(δ′
5) RX(0) P(δ′
7)
P(δ′
8)
(53)
=
P(δ′
1) P(δ′
2)
RX(δ′
4)
P(δ′
5) P(δ′
7)
P(δ′
8)
(31)
=
P(δ′
1) P(δ′
2)
RX(δ′
4−2π)
P(δ′
5) P(δ′
7)
P(δ′
8)
RX(2π)
(55)
=
P(δ′
1) P(δ′
2)
RX(δ′
4−2π)
P(δ′
5) P(δ′
7)
P(δ′
8)
P(π)
(30)
=
P(δ′
1) P(δ′
2+π)
RX(δ′
4−2π)
P(δ′
5) P(δ′
7)
P(δ′
8)
(52),
Lemma 37
=
P(δ′
1)
P(δ′
2+π)
RX(δ′
4−2π)
P(δ′
5) P(δ′
7)
P(δ′
8)
(53)
=
P(δ′
1)
P(δ′
2+π)
RX(δ′
4−2π)
P(δ′
5)
P(δ′
7)
P(δ′
8)
P(0)
P(0)
RX(0)
Thus, given any instance of Equation (K∗), its right-hand side can be transformed into
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) RX(δ6) P(δ7)
P(δ8)
P(δ9)
where
δ1 = δ′
1
δ3 = δ′
3
δ5 = δ′
5

42
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
δ7 = δ′
7
δ2 =
(
0
if δ′
3 = 0 and δ′
2 ̸= 0
δ′
2
else
δ4 =
(
δ′
4
if δ′
4 ∈[0, 2π)
δ′
4 −2π
if δ′
4 ∈[2π, 4π)
δ6 =
(
2π −δ′
6
if δ′
6 ̸= 0 and δ′
4 ∈[2π, 4π)
δ′
6
else
δ8 =
(
δ′
8 + π mod 2π
if δ′
6 ̸= 0 and δ′
4 ∈[2π, 4π)
δ′
8
else
δ9 =











δ′
2
if δ′
3 = 0, δ′
2 ̸= 0 and δ′
4 ∈[0, 2π)
δ′
2 + π
if δ′
3 = 0, δ′
2 ̸= 0 and δ′
4 ∈[2π, 4π)
0
if (δ′
3 ̸= 0 or δ′
2 = 0) and δ′
4 ∈[0, 2π)
π
if (δ′
3 ̸= 0 or δ′
2 = 0) and δ′
4 ∈[2π, 4π)
.
It is easy to check that these angles δj satisfy the conditions of Figure 6 whenever the δ′
j
satisfy the conditions of Figure 2.
Let g be the function mapping any 8-tuple of angles δ′
k corresponding to the RHS of
some instance of Equation (K∗), to the 9-tuple of angles δj given by the formulas just above.
Conversely, let f be the function mapping any 9-tuple of angles δj corresponding to the
right-hand side of some instance of Equation (K∗
old), to the 8-tuple of angles δ′
k given by the
formulas given before.
Given any 8-tuple ⃗δ′ := (δ′
k)k∈{1,...,8} of angles corresponding to the right-hand side of
some instance of Equation (K∗), one has f(g(⃗δ′)) = ⃗δ′. Indeed, let (δj)j∈{1,...,9} := g(⃗δ′) and
(δ′′
k)k∈{1,...,8} := f(g(⃗δ′)).
By deﬁnition, one has δ′′
k = δ′
k for j ∈{1, 3, 5, 7}.
Concerning δ′′
2 :
If δ′
3 ̸= 0 or δ′
2 = 0, then δ2 = δ′
2, and δ9 is either 0 or π depending on δ′
4, so that
δ′′
2 = δ2 = δ′
2.
If δ′
3 = 0, δ′
2 ̸= 0 and δ′
4 ∈|0, 2π) then δ9 = δ′
2 ∈(0, π), so that δ′′
2 = δ9 = δ′
2.
If δ′
3 = 0, δ′
2 ̸= 0 and δ′
4 ∈|2π, 4π) then δ9 = δ′
2 + π ∈(π, 2π), so that δ′′
2 = δ9 −π = δ′
2.
Concerning δ′′
4 :
If δ′
4 ∈[0, 2π), then δ4 = δ′
4, and δ9 is either 0 or δ′
2, which in any case is in [0, π), so
that δ′′
4 = δ4 = δ′
4.
If δ′
4 ∈[2π, 4π), then δ4 = δ′
4 −2π, and δ9 is either π or δ′
2 + π, which in any case is in
[π, 2π), so that δ′′
4 = δ4 + 2π = δ′
4.
Concerning δ′′
6 and δ′′
8 :
If δ′
6 = 0, then δ8 = δ′
8, and δ6 = δ′
6 = 0, so that δ′′
6 = δ6 = δ′
6 (= 0) and δ′′
8 = δ8 = δ′
8.
If δ′
4 ∈[0, 2π), then on the one hand, δ6 = δ′
6 and δ8 = δ′
8, and on the other hand, δ9
is either 0 or δ′
2, which in any case cannot be equal to π, so that δ′′
6 = δ6 = δ′
6 and
δ′′
8 = δ8 = δ′
8.

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
43
If δ′
6 ̸= 0 and δ′
4 ∈[2π, 4π), then the conditions of Figure 2 imply that we cannot
have both δ′
3 = 0 and δ′
2 ̸= 0, so that δ9 = π, δ6 = 2π −δ′
6, δ′′
6 = 2π −δ6 = δ′
6,
δ8 = δ′
8 + π mod 2π, and since δ′
8 ∈[0, 2π), δ′′
8 = δ8 + π mod 2π = δ′
8.
Thus, given any instance of Equation (K∗
old), the 8-tuple ⃗δ′ of the angles of its RHS satisﬁes
⃗δ′ = f(g(⃗δ′)). Since we have proved that the 9-tuple g(⃗δ′) corresponds to the angles of the
RHS of the instance of Equation (K∗
old) with same LHS, and it has been proved in [5] that
this 9-tuple is uniquely determined by the LHS, this proves that the 8-tuple ⃗δ′ is uniquely
determined by the LHS as well.
D
Proofs used for the completeness of QCiso
Proof of Lemma 16. By assumption, C is a n →n + 1 QCiso-circuit. The only generator
of QCiso that does not preserve the number of qubits is qubit initialisation ⊢. As there
is no generator that reduces the number of qubit, there is exactly one ⊢in the circuit.
Using the axioms of prop, we can pull this qubit initialisation to the top left so as to get
...
...
C
=
...
...
C′
where C′ is a QC-circuit.
Let U = JC′K. Since U(|0⟩⊗Id) = |0⟩⊗Id, U is of the form U =
 I
0
0
U ′

with U ′
unitary. By universality of QC-circuits (Proposition 3), there exists a QC-circuit CU ′ that
implements U ′, using only global phase, phases, Hadamards, CNots and swaps. One can
apply the following transformations
H
→
P( π
2 )
RX( π
2 )
P( π
2 )
and
→
, it
leads to H-free, swap-free circuit ˜CU ′ provably equivalent (with QC) to CU ′.
By controlling each of the gates constituting ˜CU ′ (using deﬁnitions in Figure 1, and taking
P(ϕ) as the control of global phase ϕ) with a fresh qubit, we get a circuit Λ ˜CU ′ such that
q
Λ ˜CU ′y
= JC′K, and where the fresh qubit only sees Phases P and the control part of some
gates. By completeness of QC we have QC ⊢C′ = Λ ˜CU so QCiso ⊢
...
...
C
=
...
...
Λ ˜CU ′
.
Thus, one can push the initialisation of
...
...
Λ ˜CU ′
through all the (controlled) gates using
Equations 43, 44 and 41, leading to
...
.
◀
To show Lemma 17, we ﬁrst introduce useful known decompositions, and recall as well
the usual (balanced) CSD for reference:
▶Lemma 41 (Matrix Decompositions [28]).
RQ (QL): Let A be a square matrix. There exists Q unitary and R upper triangular
(with non-negative diagonal coeﬃcients) such that A = RQ. There exists Q′ unitary and
L lower triangular (with non-negative diagonal coeﬃcients) such that A = Q′L.
Singular Value (SVD): For any matrix A, there exist U and V unitary, and D =
diag(d1, ..., dn) real diagonal with di ≥di+1 ≥0, such that A = UDV .
 I
0
0
U
  I
0
0
D
  I
0
0
V

is then an SVD of
 I
0
0
A

.

44
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
(balanced) Cosine-Sine (CSD): Let U =
 U00
U01
U10
U11

be unitary with Uij all of
the same dimension. Then, there exist A0, A1, B0, B1 unitary, C = diag(c0, ..., cn)
and S = diag(s0, ..., sn) such that U =
 A0
0
0
A1
  C
−S
S
C
  B0
0
0
B1

and
C2 + S2 = I.
A more general version of the CSD exists for “unbalanced” partitions of U i.e. when the Uij
do not not have the same dimensions, but we will not use it in this paper.
Proof of Lemma 17. This is a small variation on the usual CSD. Let us start with U =




I
0
0
0
U00
U01
0
U10
U11



. Let:
A0C0B0 be an SVD of U00,
A1R be a QL decomposition of

0
U10B†
0

and
LB′
1 be an RQ decomposition of
 
0
A†
0U01
!
.
The unitarity forces the diagonal components of C0 to be between 0 and 1.
If 1s ap-
pear, they do so as the ﬁrst diagonal components, as the SVD sorts then from largest to
smallest. We then denote C the submatrix of C0 which has only < 1 components. We
then have: U =




I
0
0
0
A0
0
0
0
A1








I
0
0
C
R
L
A†
1U11B′†
1








I
0
0
0
B0
0
0
0
B′
1



. Notice
that since C ̸= C0 in general, A0 and C may not be of the same dimensions. The or-
thonormality of the columns (resp. the rows) of the middle matrix forces it to be of the
form:





I
0
0
0
0
C
0
S′
0
0
X0
0
0
S
0
C′




with C2 + S2 = C′2 + S2 = I = C2 + S′2 = C′2 + S′2. Since
both S and S′ are non-negative diagonal, this implies S = S′, which then, by unitar-
ity, forces C′ = −C. Moreover,by unitarity again, X0 itself is unitary. We hence have





I
0
0
0
0
C
0
S′
0
0
X0
0
0
S
0
C′




=





I
0
0
0
0
C
0
−S
0
0
I
0
0
S
0
C










I
0
0
0
0
I
0
0
0
0
X0
0
0
0
0
−I




. Wrapping it all up, we
have:
U =




I
0
0
0
A0
0
0
0
A1









I
0
0
0
0
C
0
−S
0
0
I
0
0
S
0
C










I
0
0
0
0
I
0
0
0
0
X0
0
0
0
0
−I









I
0
0
0
B0
0
0
0
B′
1




which gives the desired result with B1 :=
 X0
0
0
−I

B′
1.
◀
Proof of Theorem 18. Let C1 and C2 be two circuits of QCiso(n, n + k), such that JC1K =
JC2K. Using the same reasoning as in the proof of Lemma 16, there exist two QC-circuits

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
45
Cu1 and Cu2 such that Ci =
...
...
Cui
...
...
n
k
. By completeness of QC, showing that C1 = C2 is
equivalent to showing that
...
...
CU
...
...
=
...
...
n
k
n
k
for CU = Cu1C†
u2 (Proposition 7).
Let us denote U = JCUK. Notice that U has to be such that U





I
0
...
0




=





I
0
...
0




, which,
by unitarity, means U =

I
0
0
⋆

. Let us now prove that QCiso proves the equality, by
reasoning inductively on the number n of initialised qubits.
Case n = 0: In that case, there is no initialised qubit, and since JUK = I, by completeness of QC,
QC ⊢U = Id.
Case n = 1: There, we have U =
 I
0
0
U ′

. Then Lemma 16 gives directly the expected equality.
Case n + 1: U is of the form U =




I
0
0
0
U00
U01
0
U10
U11



(with U00 and U11 square). Notice that U
has dimension 2k+n+1. We can hence use the modiﬁed CSD to get:
U =




I
0
0
0
A0
0
0
0
A1









I
0
0
0
0
C
0
−S
0
0
I
0
0
S
0
C









I
0
0
0
B0
0
0
0
B1



with C2 + S2 = I.
The middle matrix can be seen as a product of:
Rj :=cj |j⟩⟨j| + sj |j + 10...0⟩⟨j| −sj |j⟩⟨j + 10...0| + cj |j + 10...0⟩⟨j + 10...0|
+
X
x/∈{j,j+10...0}
|x⟩⟨x|
for
n+1
z}|{
0...0
k
z}|{
1...1 < j < 1
n+k
z}|{
0...0 in binary. Notice that the ﬁrst Rjs might be the identity, if A0
and C do not have the same dimensions. Notice also that j has at least one 1 in its ﬁrst
n + 1 bits. Rj is hence a rotation
cj
−sj
sj
cj

= P( π
2 )RX(θj)P(- π
2 ) on the ﬁrst qubit,
controlled by all the other qubits. Matrix U can hence be implemented by the following

46
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
circuit:
...
...
I
A0
I

⋆⋆
⋆
...
 I
A1

...
...
I
B0
I

 I
B1

(57)
where, similarly to [19], e.g.
⋆
ℓ
is a syntactic sugar for the composition of all
rotations on the ﬁrst qubit, controlled by the ℓ-th qubit and anti-controlled by the ℓ+1-th
qubit:
⋆
ℓ
=
RX(⋆)
P( π
2 )
RX(⋆) RX(⋆) RX(⋆) RX(⋆)
P(- π
2 )
ℓ
...
...
...
...
...
...
(notice that each RX should be surrounded by P( π
2 ) on the left and P(- π
2 ) on the right,
but all non-extremal ones simplify using (30) and (D).) By completeness of QC, CU can
be turned into the circuit in (57).
The ﬁrst block (with A1) is such that its interpretation satisﬁes ∀|ϕ⟩∈C2n,
I
A1

(|0⟩⊗
|ϕ⟩) = |0⟩⊗|ϕ⟩, hence using Lemma 16, it is provably deleted by intialisation on the ﬁrst
qubit, and a fortiori when the n + 1 ﬁrst qubits are initialised. Similarly, the last block
(with B1) is deleted by the qubit initialisations.
For the second block, notice that:
u
wwwwv
 I
A0

...
...
n
...
...
k−1
}
~
=
u
wwwwv
...
...
n
k−1
}
~
which implies
u
wwwwwv
I
A0
I

...
...
...
...
n
k−1
}
~
=
u
wwwwwv
...
...
n
k−1
}
~
We can hence apply the induction hypothesis on
I
A0
I

...
...
...
...
n
k−1
from which we conclude

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
47
that the second block is deleted by initialisations on the n + 1 ﬁrst qubits. Similary, the
penultimate block (with B0) is deleted by initialisations on the ﬁrst n + 1 qubits.
All the controlled rotations in the middle are deleted by the initialisations thanks to
Lemma 16. Finally, it is provable that:
=
...
...
...
...
I
A0
I

⋆⋆
⋆
...
 I
A1

...
...
I
B0
I

 I
B1

◀
E
Proofs used for the completeness of QCancilla
E.1
Proof of Proposition 22
First, we derive the following equations. Equations (58) and (59) are alternative deﬁnitions
of 2-controlled and 3-controlled phase gates. Equation (60) tells us how we can express a
simply controlled gate with Toﬀoli gates and one 1-qubit gate using one ancilla.
P(ϕ)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
(58)
P(ϕ)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
(59)
P(ϕ)
=
P(ϕ)
(60)
Proof of Equation (58).
P(ϕ)
(7)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
(
)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
(
)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
(8)(32)(53)(30)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
P( ϕ
2 ) P(- ϕ
2 )
(
)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
(
)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
◀

48
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
Proof of Equation (59).
P(ϕ)
(7)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
(
)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
(
)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
(8)(32)(53)(30)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
P( ϕ
2 ) P(- ϕ
2 )
(
)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
(
)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
◀
Proof of Equation (60).
P(ϕ)
(43)
=
P(ϕ)
P(2ϕ)
(35)
=
P(ϕ)
P(2ϕ)
(58)
=
P(ϕ)
P(ϕ)
P(ϕ)
P(-ϕ)
(32)(12)(D)
=
P(ϕ)
P(ϕ)
(L)
=
P(ϕ)
◀
We ﬁrst prove Equations (48) and (49) by induction on the number of qubits, whose base
cases contains n = 4 qubits. The base case for Equations (48) can be derived as follows.
P(ϕ)
(43)
=
P(ϕ)
P(2ϕ)
(35)
=
P(ϕ)
P(2ϕ)
(59)
=
P(ϕ)
P(ϕ)
P(ϕ)
P(-ϕ)
(32)(12)(53)
=
P(ϕ)
P(ϕ)
(35)
=
P(ϕ) P(ϕ)
(43)
=
P(ϕ)

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
49
The base case for Equations (48) can be derived as follows.
RX(θ)
(5)
=
P(θ)
P(- θ
2)
H
H
(48)
=
P(θ)
P(- θ
2)
H
H
(60)
=
P(θ)
P(- θ
2)
H
H
(32)
=
P(θ)
P(- θ
2)
H
H
(5)
=
RX(θ)
The induction step for Equation (49) can be derived as follows.
RX(θ)
(37)
=
RX(θ)
(4)
=
RX( θ
2)
RX(- θ
2)
H
H
IH
=
RX( θ
2)
RX(- θ
2)
H
H
IH
=
RX( θ
2)
RX(- θ
2)
H
H
(32)
=
RX( θ
2)
RX(- θ
2)
H
H
=
RX( θ
2)
RX(- θ
2)
H
H
(4)
=
RX(θ)
The induction step for Equation (48) can be derived as follows.
P(ϕ)
(5)
=
RX(ϕ)
P( ϕ
2 )
H
H
(49)
=
RX(ϕ)
P( ϕ
2 )
H
H
IH
=
RX(ϕ)
P( ϕ
2 )
H
H
(32)
=
RX(ϕ)
P( ϕ
2 )
H
H
(5)
=
P(ϕ)

50
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
E.2
Proof of Equation (K3)
The main idea of the proof of Equation (K3) is to use the Fredkin gate (or controlled-swap
gate), deﬁned by Equation (61).
×
×
:=
(61)
RX(γ1)
P(γ2) RX(γ3)
RX(γ4)
=
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) RX(δ6) P(δ7)
P(δ8)
(K3)
First, we derive some useful equations.
H
H
H
H
=
(62)
×
×
H
H
H
H
=
×
×
(63)
=
(64)
=
(65)
=
(66)
=
(67)
=
(68)
×
×
=
×
×
(69)
×
×
=
×
×
(70)
P(-ϕ)
P(ϕ)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
(71)
P(ϕ)
=
P(ϕ)
(72)
P(-ϕ)
P(ϕ)
=
P(-ϕ)
(73)
RX(−ϕ) RX(ϕ)
=
RX(ϕ)
(74)
×
×
=
×
×
(75)
Proof of Equation (62).
H
H
H
H
(6)
=
H
H
H
H P(π)
H
H
(C)
=
H
H
P(π)
(35)
=
H
H
P(π)
(6)
=
◀

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
51
Proof of Equation (63).
×
×
H
H
H
H
(61)
=
H
H
H
H
(15)(62)
=
=
×
×
◀
Proof of Equation (64).
(6)
=
P(π) H
H
(48)
=
P(π)
H
H
(7)
=
H
H
P( π
2 )
P( π
2 )
P(- π
2 )
(H)
=
H
H
H
H
(C)
=
◀
Proof of Equation (65).
(N)
=
(64)
=
=
(F)
=
(32)
=
(64)
=
(N)
=
◀
Proof of Equation (66).
(14)
=
(15)(62)
=
H
H
H
H
H
H
(65)
=
H
H
H
H
H
H
(32)
=
H
H
H
H
H
H
(15)(62)
=
◀

52
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
Proof of Equation (67).
=
X
X
(N)(M)
=
X
X
(20)
=
X
X
X
(66)
=
X
X
X
(42)
=
X
X
X
(20)
=
(N)(M)
=
◀
Proof of Equation (68).
(67)
=
(
)
=
(65)
=
(
)
=
(67)
=
◀
Proof of Equation (69).
×
×
(61)
=
(66)
=
=
(68)
=
(32)
=
(61)
=
×
×
◀
Proof of Equation (70).
×
×
=
(67)
=
(14)(E)
=
=
×
×
◀
Proof of Equation (71).
P(-ϕ)
P(ϕ)
(7)
=
P(ϕ)
X
P(- ϕ
2 )
P(- ϕ
2 )
P( ϕ
2 )
X
(27)(25)
=
P(ϕ)
X
P(- ϕ
2 )
P( ϕ
2 )
P( ϕ
2 )
X
- ϕ
2
(19)(25)(A)
=
P(ϕ)
P(- ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
(17)(12)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
(27)(7)
=
P(ϕ)

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
53
◀
Proof of Equation (72).
P(ϕ)
(7)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
(27)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
(F)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
(F)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
(27)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
(F)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
(7)
=
P(ϕ)
◀
Proof of Equation (73).
P(-ϕ)
P(ϕ)
(7)
=
P(ϕ)
X
P(- ϕ
2 )
P(- ϕ
2 )
P( ϕ
2 )
X
(30)(72)(20)
=
P( ϕ
2 )
P(- ϕ
2 )
P( ϕ
2 )
(71)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
P(- ϕ
2 )
P( ϕ
2 )
(12)(D)(35)
=
P( ϕ
2 )
P( ϕ
2 )
P(- ϕ
2 )
(7)
=
P(-ϕ)
◀
Proof of Equation (74).
RX(−ϕ) RX(ϕ)
(5)
=
P(−ϕ)
P(ϕ)
X
P( ϕ
2 )
H
X
P(−ϕ
2 )
H
H
H
(C)(8)
=
P(−ϕ) P(ϕ)
P( ϕ
2 )
H
P(−ϕ
2 )
H
(71)(73)
=
P(ϕ)
P(−ϕ
2 )
H
H
(5)
=
RX(ϕ)
◀
Proof of Equation (75).
×
×
(8)
=
×
×
X
X
(70)
=
×
×
X
X
(69)
=
×
×
X
X
(8)(70)
=
×
×
◀
The idea of the proof of Equation (K3) is to start from the LHS circuit of (K3), use
Equations (76),(77) and (78) to build an instance of the LHS circuit of (K2) on two ancillae,
apply (K2) and then rebuild the RHS circuit of (K3) using the same equations.
×
×
P(ϕ)
=
×
× P(ϕ)
(76)

54
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
×
×
×
×
P(ϕ)
=
×
×
×
× P(ϕ)
(77)
×
×
×
×
RX(θ)
=
×
×
×
× RX(θ)
(78)
Proof of Equation (76).
×
×
P(ϕ)
(60)
=
×
×
P(ϕ)
(69)
=
×
×
P(ϕ)
(60)
=
×
× P(ϕ)
(71)
=
×
× P(-ϕ)
P(ϕ)
(60)
=
×
×
P(-ϕ)
P(ϕ)
(75)
=
×
×
P(-ϕ)
P(ϕ)
(60)
=
×
×
P(-ϕ)
P(ϕ)
(35)(43)(8)
=
×
× P(ϕ)
◀
Proof of Equation (77).
×
×
×
×
P(ϕ)
(48)
=
×
×
×
×
P(ϕ)
(69)
=
×
×
×
×
P(ϕ)
(48)
=
×
×
×
×
P(ϕ)
(35)
=
×
×
×
×
P(ϕ)
(48)
=
×
×
×
×
P(ϕ)
(69)
=
×
×
×
×
P(ϕ)
(48)
=
×
×
×
×
P(ϕ)
(35)
=
×
×
×
× P(ϕ)
(73)
=
×
×
×
× P(-ϕ)
P(ϕ)
(35)
=
×
×
×
×
P(-ϕ)
P(ϕ)
(48)
=
×
×
×
×
P(-ϕ)
P(ϕ)

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
55
(75)
=
×
×
×
×
P(-ϕ)
P(ϕ)
(48)
=
×
×
×
×
P(-ϕ)
P(ϕ)
(35)
=
×
×
×
×
P(-ϕ)
P(ϕ)
(48)
=
×
×
×
×
P(-ϕ)
P(ϕ)
(75)
=
×
×
×
×
P(-ϕ)
P(ϕ)
(48)
=
×
×
×
×
P(-ϕ)
P(ϕ)
(43)
=
×
×
×
× P(ϕ)
◀
Proof of Equation (78).
×
×
×
×
RX(θ)
(5)
=
×
×
×
×
P(θ)
P(- θ
2)
H
H
(63)
=
×
×
×
×
P(θ)
P(- θ
2)
H
H
H
H
(48)
=
×
×
×
×
P(θ)
P(- θ
2)
H
H
H
H
(69)
=
×
×
×
×
P(θ)
P(- θ
2)
H
H
H
H
(48)
=
×
×
×
×
P(θ)
P(- θ
2)
H
H
H
H
(35)
=
×
×
×
×
P(θ)
P(- θ
2)
H
H
H
H
(48)
=
×
×
×
×
P(θ)
P(- θ
2)
H
H
H
H
(69)
=
×
×
×
×
P(θ)
P(- θ
2)
H
H
H
H
(48)
=
×
×
×
×
P(θ)
P(- θ
2)
H
H
H
H
(63)
=
×
×
×
×
P(θ)
P(- θ
2)
H
H
H
H
(C)
=
×
×
×
×
P(θ)
P(- θ
2)
H
H

56
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
(60)(35)
=
×
×
×
×
P(θ)
P(- θ
2)
H
H
(69)
=
×
×
×
×
P(θ)
P(- θ
2)
H
H
(60)
=
×
×
×
×
P(θ)
P(- θ
2)
H
H
(5)
=
×
×
×
× RX(θ)
(74)
=
×
×
×
× RX(-θ) RX(θ)
(5)
=
×
×
×
×
P(-θ)
RX(θ)
H
H
P( θ
2)
(
)
=
×
×
×
×
P(-θ)
RX(θ)
H
H
P( θ
2)
(60)
=
×
×
×
×
P(-θ)
RX(θ)
H
H
P( θ
2)
(75)
=
×
×
×
×
P(-θ)
RX(θ)
H
H
P( θ
2)
(60)
=
×
×
×
×
P(-θ)
RX(θ)
H
H
P( θ
2)
(35)(43)(8)
=
×
×
×
×
P(-θ)
RX(θ)
H
H
(63)
=
×
×
×
×
P(-θ)
RX(θ)
H
H
H
H
(35)
=
×
×
×
×
P(-θ)
RX(θ)
H
H
H
H
(48)
=
×
×
×
×
P(-θ)
RX(θ)
H
H
H
H
(75)
=
×
×
×
×
P(-θ)
RX(θ)
H
H
H
H
(48)
=
×
×
×
×
P(-θ)
RX(θ)
H
H
H
H

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
57
(35)
=
×
×
×
×
P(-θ)
RX(θ)
H
H
H
H
(48)
=
×
×
×
×
P(-θ)
RX(θ)
H
H
H
H
(75)
=
×
×
×
×
P(-θ)
RX(θ)
H
H
H
H
(48)
=
×
×
×
×
P(-θ)
RX(θ)
H
H
H
H
(43)
=
×
×
×
×
RX(θ)
H
H
H
H
(63)
=
×
×
×
× RX(θ)
◀
Proof of Equation (K3).
RX(γ1)
P(γ2) RX(γ3)
RX(γ4)
(N)(14)(32)
=
RX(γ1)
P(γ2) RX(γ3)
RX(γ4)
×
×
×
×
×
×
×
×
(78)
=
RX(γ1)
P(γ2) RX(γ3)
×
×
×
×
RX(γ4)
×
×
×
×
(78)
=
RX(γ1)
P(γ2)
×
×
×
×
RX(γ4)
RX(γ3)
×
×
×
×
(77)
=
RX(γ1) ×
×
×
×
RX(γ4)
RX(γ3)
P(γ2)
×
×
×
×
(78)
=
×
×
×
×
RX(γ1)
P(γ2) RX(γ3)
RX(γ4)
×
×
×
×
(K2)
=
×
×
×
×
×
×
×
×
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) RX(δ6) P(δ7)
P(δ8)

58
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
(77)
=
×
×
×
×
×
×
×
×
P(δ2) RX(δ3)
RX(δ4)
P(δ5) RX(δ6) P(δ7)
P(δ8)
P(δ1)
(76)
=
×
×
×
×
×
×
×
×
RX(δ3)
RX(δ4)
P(δ5) RX(δ6) P(δ7)
P(δ8)
P(δ1) P(δ2)
(78)
=
×
×
×
×
×
×
×
×
RX(δ4)
P(δ5) RX(δ6) P(δ7)
P(δ8)
P(δ1) P(δ2) RX(δ3)
(78)
=
×
×
×
×
×
×
×
×
P(δ5) RX(δ6) P(δ7)
P(δ8)
P(δ1) P(δ2) RX(δ3)
RX(δ4)
(77)
=
×
×
×
×
×
×
×
×
RX(δ6) P(δ7)
P(δ8)
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5)
(78)
=
×
×
×
×
×
×
×
×
P(δ7)
P(δ8)
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) RX(δ6)
(77)
=
×
×
×
×
×
×
×
×
P(δ8)
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) RX(δ6) P(δ7)
(76)
=
×
×
×
×
×
×
×
×
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) RX(δ6) P(δ7)
P(δ8)

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
59
(N)(14)(32)
=
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) RX(δ6) P(δ7)
P(δ8)
◀
E.3
Induction step for the proof of Equation (K∗)
RX(γ1)
P(γ2)
RX(γ3)
RX(γ4)
(N)(49)
=
RX(γ1)
P(γ2)
RX(γ3)
RX(γ4)
(49)
=
RX(γ1)
P(γ2)
RX(γ3)
RX(γ4)
(48)
=
RX(γ1)
P(γ2)
RX(γ3)
RX(γ4)
(49)
=
RX(γ1)
P(γ2)
RX(γ3)
RX(γ4)
(32)
=
RX(γ1)
P(γ2)
RX(γ3)
RX(γ4)
IH
=
P(δ1)
P(δ2)
RX(δ3)
RX(δ4)
P(δ5)
RX(δ6)
P(δ7)
P(δ8)
(32)
=
P(δ1)
P(δ2)
RX(δ3)
RX(δ4)
P(δ5)
RX(δ6)
P(δ7)
P(δ8)

60
Simple Complete Equational Theories for Quantum Circuits with Ancillae or Partial Trace
(48)
=
P(δ1)
P(δ2)
RX(δ3)
RX(δ4)
P(δ5)
RX(δ6)
P(δ7)
P(δ8)
(48)
=
P(δ1) P(δ2)
RX(δ3)
RX(δ4)
P(δ5)
RX(δ6)
P(δ7)
P(δ8)
(49)
=
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5)
RX(δ6)
P(δ7)
P(δ8)
(49)
=
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5)
RX(δ6)
P(δ7)
P(δ8)
(48)
=
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5)
RX(δ6)
P(δ7)
P(δ8)
(49)
=
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) RX(δ6)
P(δ7)
P(δ8)

A. Clément, N. Delorme, S. Perdrix, R. Vilmart
61
(48)
=
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) RX(δ6) P(δ7)
P(δ8)
(N)(48)
=
P(δ1) P(δ2) RX(δ3)
RX(δ4)
P(δ5) RX(δ6) P(δ7)
P(δ8)

