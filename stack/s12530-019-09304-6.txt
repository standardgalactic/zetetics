Vol.:(0123456789)
1 3
Evolving Systems (2021) 12:447–462 
https://doi.org/10.1007/s12530-019-09304-6
ORIGINAL PAPER
Edge detection based on type‑1 fuzzy logic and guided smoothening
Sahil Raheja1 · Akshi Kumar2 
Received: 17 May 2019 / Accepted: 30 September 2019 / Published online: 9 October 2019 
© Springer-Verlag GmbH Germany, part of Springer Nature 2019
Abstract
Edge detection is an important phenomenon in computer vision. Edge detection is helpful in contour detection and thus 
helpful in obtaining the important information. Edge detection process heavily depends on chosen technique. Soft computing 
techniques are considered as powerful edge detection methods due to their adaptability. This paper presents a fuzzy logic 
based edge detection method where the quality of edges is controlled using sharpening guided filter and noise due to the 
sharpening is controlled using Gaussian filter. The accuracy of the method is judged using a variety of statistical measures. 
It has been found that by proper selecting the smoothening parameters a significant improvement in the detected edges can 
be obtained.
Keywords  Edge detection · Image enhancement · Fuzzy logic · Guided filtering
1  Introduction
In numerous computer vision systems, edge detectors are 
very important. The process of edge detection is valuable 
in the analysis of images by decreasing the processed data 
(Shah 1997). The technique of edge detection is among 
prime methods applied in various field where processing of 
digital image is required. The purpose of using edge detec-
tion in the processing of an image is to get rid of useless data 
and preserve the important image characteristics. It includes 
certain methods like feature extraction, registration, inter-
pretation and image segmentation which are very helpful 
in keeping the useful data only (Goswami and Chan 2011).
An edge could be defined as the object between bound-
ary and image background (Gevers et al. 2012; Shih 2010). 
Soft computing is a developing research area that comprises 
of integral components of machine learning techniques, for 
example, fuzzy logic, artificial neural networks, adaptive 
neuro-fuzzy inference system, particle swarm optimization 
and genetic algorithms etc. These strategies are generally 
utilized for edge detection and image segmentation in the 
greater part of the critical applications. Out of these meth-
ods, fuzzy rule based classifiers have been used in various 
classes of engineering problems such as self localization and 
landmark recognition (Zhou and Angelov 2007), data den-
sity estimation (Angelov and Zhou 2008), real time object 
detection (Angelov et al. 2011) and human activity recogni-
tion (Sargano et al. 2017) etc.
It is important to note that a universal definition for 
edges cannot be created as each human has its own way of 
judging the edges in images. Therefore, edge is a subjec-
tive phenomenon, and outcome depends on individual per-
spective. Therefore, in this paper, we have discussed image 
sharpening and fuzzy logic based edge detection, and to 
control sharpening noise Gaussian kernel based filtering is 
proposed. The results are compared with notable statistical 
quality measures.
This paper is organized as follows, in Sect. 2 of the paper 
related works is presented. Edge detection steps are detailed 
in Sect. 3 of the paper. Proposed method is discussed in 
Sect. 4 of the paper. In Sect. 5 results of the paper are dis-
cussed, and finally in Sect. 6 of the paper major conclusions 
are discussed.
 *	 Sahil Raheja 
	
sahilrahejaphd@gmail.com
	
Akshi Kumar 
	
akshikumar@dce.ac.in
1	
Department of Information Technology, Delhi Technological 
University, Delhi, India
2	
Department of Computer Science and Engineering, DTU, 
Delhi, India

448
	
Evolving Systems (2021) 12:447–462
1 3
2  Related works
In this part of the article, we have examined various edge 
detection strategies and concentrate on digital images’ edge 
detection. Taking about the standard images, the edges are 
used to define the boundaries of the subject and helpful for 
division, enlistment, identification. It removes the irrelevant 
data and interestingly of protecting the essential properties 
of a picture. There are different conventional systems use-
ful in edges detection mechanism. Some of the popular 
techniques are Laplacian Roberts, Sobel and gradient (Shih 
2010). With the help of masks, edge detection is possible 
by linear operators. These masks are representing the ideal 
edge steps in different ways both for intensity and color. Shih 
utilized similar technique for identification. The comparison 
of various types of edge detection methods are detailed in 
Table 1.
Roberts (Rogowska 2000), Prewit and Sobel (Rangarajan 
2005) introduced edge detection on the basis of the principle 
of gradient which demonstrate the impact of these filters on 
the images which is based on the first derivative. A progres-
sively successful operator is the Laplacian, which utilizes the 
second derivative in locating the edge (Rangarajan 2005).
Alshennawy and Aly (2009), Aborisade (2011) and Begol 
and Maghooli (2011) proposed soft computing based meth-
odologies, for example, fuzzy logic. Mehrara et al. (2009) 
proposed another methodology that works on the concept of 
back propagation neural network. Zhang et al. (2009) intro-
duced a hybrid technique works on the principle of adaptive 
neuro-fuzzy inference system (ANFIS) for the detection of 
edges.
Mathur and Ahlawat (2008) introduced a latest algorithm 
based on fuzzy relative pixel value. In this methodology, the 
relative pixel values are examined and subsequently reduce 
the image processing by the application of artificial intel-
ligence. Table 2 demonstrates edge detection methods work 
on the concepts of fuzzy logic, neural network and ANFIS.
The other recent notable mechanisms in edge detection 
are: deep convolutional neural network (Marmanis et al. 
2018), fuzzy cellular automata (Farbod et al. 2018), particle 
swarm optimization (Setayesh et al. 2013), cuckoo search 
optimization (Gonzalez et al. 2016), Anisotropic Gaussian 
Kernels (Zhang et al. 2017), convolution neural networks 
(CNNs) (Jeong et al. 2019; Liu and Lew 2016). Edge detec-
tion based on single pixel imaging was proposed in Ren et al. 
(2018). In recent published work; it is detailed that artificial 
intelligence and CNN based edge detection methods have 
shown that these methods fail in presence of small perturba-
tions (Cosgrove and Yuille 2019).
This paper, proposes a technique based on type 1 fuzzy 
logic and guided image filtering is used for the sharpening 
of the images. Using sharpening, strength of the edges can 
be enhanced to detect them easily. Even in case of perturba-
tion sharpening can be used to control edges. The proposed 
method is effective as it considers the advantages of both 
fuzzy logic design and guided image smoothening.
Table 1   Comparison of edge detection techniques
Edge-detection techniques
Methods
First-order derivative/Gradient methods
Sobel, Roberts, Prewitt
Second-order derivative/zero crossing
Laplacian of Gaussian
Optimal image detection
Canny edge detector
Soft computing
ANN, PSO, SVM, GA, 
Ant colony optimiza-
tion
Table 2   Soft computing based notable techniques
Authors
Techniques
Borji and Hamidi
Fuzzy logic
Alshennawy
Fuzzy logic
Zhang et al.
Adaptive neuro-fuzzy
Mehrara et al.
Neural network
Aborisade
Fuzzy logic
Begol
Fuzzy logic
Fig. 1   Edge detection notable 
steps

449
Evolving Systems (2021) 12:447–462	
1 3
3  Edge detection steps
The main aim of edge detection is to successfully locate 
and identify genuine edges. Edge detection is difficult in 
low resolution which is mostly found in colour images. In 
edge detection the main steps are filtering, enhancement, 
detection and localization which are utilized for detection 
of correct edges (Fig. 1).
We cannot use images straightway in light of the fact that 
it might be corrupted by arbitrary varieties in intensities, 
varieties in brightening, or uneven contrast. This irregular 
variety in intensity is known as noise. Image sharpening is 
needed to enhance the quality of image. In enhancing the 
quality of image, high pass filtering plays an important role. 
The sharpened image (Is) signal is proportional to the high 
pass filtering of original signal and mathematically written 
as
where, I: original image, H: high pass filter and ‘γ’ is scaling 
factor (Fig. 2).
3.1  Canny edge detection
Canny edge detection is a well known method in edge detec-
tion; it is a multi-step algorithm and can detect edges in 
(1)
IS = I + 𝛾
⎡
⎢
⎢
⎢⎣
I −
I ⊗H

Smoothening
⎤
⎥
⎥
⎥⎦
noisy environment by suppressing noise (Canny 1986). The 
main steps of the algorithms are as under
1.	 Use Gaussian filter to reduce noise and other redundant 
information:
2.	 Compute gradient of (fi (i, j), fj (i, j)) of f(i, j) using any 
of the gradient operators (Roberts, Sobel, Prewitt, etc.) 
to get:
3.	 Threshold M:
where, γ is threshold and is chosen carefully such that 
that all edges are preserved while major portion of the 
noise is suppressed.
4.	 Use non-maximal suppression in the pixels edges in MT 
obtained above to thin the edge ridges.
5.	 Using two different thresholds τ1 and τ2 (where τ1 < τ2) 
obtain two binary images I1 and I2. Note that I2 with 
greater τ2 has less noise and fewer false edges but 
(2)
f(i, j) = H(i, j) ⊗I(i, j)
Where,
H(i, j) =
1
√
2𝜋𝜎2
exp

−i2 + j2
2𝜎2

(3)
M(i, j) =
√
f 2
i (i, j) + f 2
j (i, j)
and
휃= tan−1 fj(i, j)
fi(i, j)
(4)
MT(i, j) =
{ M(i, j) if
M(i, j) > 𝛾
0
otherwise
Fig. 2   Demonstration of image 
sharpening (Lena)

450
	
Evolving Systems (2021) 12:447–462
1 3
greater gaps between edge segments, when compared 
to I1 with smaller τ1.
6.	 Link edge segments in I2 to form continuous edges 
(Fig. 3).
The canny edge detection is considered as one of the bet-
ter methods in edge detection. However, without post pro-
cessing of detected edges performance of canny edge detec-
tion is not good, and suffers from large number of falsely 
accepted edges.
4  Proposed method
In this section proposed method is detailed. The vari-
ous steps are detailed and utility of various processes are 
discussed.
4.1  Fuzzy expert system
Figure 4 depicts the basic architectural layout of a fuzzy 
expert system. In this work three methods defined as ­M1, 
­M2 and ­M3 are presented. In method ­M1 on the input image 
fuzzy logic is directly applied to detect edges. In method 
­M2 the input image is first passes through the sharpening 
filter and after this fuzzy logic is used to detect edges. In 
method ­M3 the input image is first passes through the sharp-
ening filter and then for Gaussian filter and finally fuzzy 
logic is applied to detect edges. In fuzzy logic based edge 
detection first input image is fuzzified using fuzzy input and 
output membership function and then apply IF-ELSE rules 
using Mamdani fuzzy inference engine and at the output de-
fuzzification is done to obtain crisp values to obtain desired 
results (Fig. 5). The detailed description of the fuzzy based 
system, image sharpening using guided filter and finally use 
of Gaussian kernel for noise removal is discussed.
In this work, we use triangular membership function for 
both input and output and def ined as: 
triangle(x;a, b, c) = max
(
min
(
x−a
b−a, c−x
c−b
)
, 0
)
 (Figs. 6, 7).
4.2  Fuzzy rules
Fuzzy rules are developed using human expert system, 
and edge and non-edge pixels are decided on the basis of 
neighbourhood pixels. For the edge detection a total of 30 
rules are defined. The rules are developed on a 3 × 3 mask as 
shown in Fig. 1. In the rule designing Img (x, y) represents 
pixel position, ‘1’ represents white pixel and ‘0’ represents 
black pixel value. For 3 black and 5 white pixels in neigh-
bourhood 4 rules are defined, while for 4 black and 4 white 
pixels in neighbourhood, 8 rules are defined, for 5 black and 
3 white pixels in the neighbourhood and for 6 black and 2 
Fig. 3   Edge detected image using Canny method (Lena)
Fig. 4   Schematic of proposed edge detection mechanism ­(M1: edge detection using fuzzy logic only, ­M2: edge detection using fuzzy logic and 
sharpening filter and ­M3: edge detection using fuzzy logic and sharpening filter)

451
Evolving Systems (2021) 12:447–462	
1 3
white pixels in the neighbourhood again for both the cases 
8 rules are defined and finally for all black or white pixels 
in the neighbourhood 2 rules are defined. Various rules are 
detailed below (Fig. 8).
4.3  Guided image filtering and sharpening
In guided image filtering, the output image is linear trans-
formation of guided image ‘G’ and is expressed as (He et al. 
2013)
ai and bi are the co-efficient in window wi. The guided image 
filtering problem can be formulated as the minimization of 
difference in input and output images, and ε is smoothness 
parameter and decides the degree of smoothness:
The co-efficient are evaluated as
where, bar represents the mean values of corresponding 
parameter. |w| denotes the total number of pixel wi:
In He et al. (2010) it is proved that GF can also be expressed 
as
In general we have
(5)
̂In = aiGn + bi,
∀n ∈wi.
(6)
E(ai, bi) =
∑
n∈wi
((aiGn + bi −In)2 + 휀a2
i ).
(7)
ai =
(1∕w) ∑
p∈wi GnIn −̄GīIi
𝜎2
i + 𝜀
bi = ̄Ii −ai ̄Gi
(8)
̂In =
(
1
|w|
∑
i∈wn
ai
)
Gn +
(
1
|w|
∑
i∈wn
bi
)
.
(9)
WGF
nm (G) =
1
|w|2
∑
i∶(n,m)∈wi
(
1 + (Gn −̄Gi)(Gm −̄Gi)
𝜎2
i + 𝜀
)
(10)
̂In =
∑
m∈wn
WGF
nm (G)Im.
Fig. 5   Schematic view of fuzzy logic based edge detection
Fig. 6   Membership function for black and white pixels values
Fig. 7   Output membership function for black, white and edge

452
	
Evolving Systems (2021) 12:447–462
1 3
Fig. 8   Fuzzy rules black (B), 
white (W) and edge (E) and 
non-edge (NE)

453
Evolving Systems (2021) 12:447–462	
1 3
The enhanced image can be written as
The Gaussian 5 × 5 kernel is applied as filter for the removal 
of noise, with kernel as
The Gaussian kernel is used in method M3 only.
5  Results
This section presents the edge detection results under the 
considered method. The simulation is performed in MAT-
LAB software. For performance evaluation various edge 
detection measures are considered as described below:
5.1  Edge detection performance measures
It is not easy to define the general-purpose evaluation for 
edge detection, as some edges are missed, some are falsely 
accepted, and some alters their positions. Before going into 
detail of edge detection method, let us consider basic proper-
ties and concept of edge detection. Throughout the paper we 
have defined, ground truth image as (Igt) and edge detected 
image as (Ied). Let the quality measure is denoted by Q and 
property as (P) then following properties must be satisfied:
Symmetry (P1): Q(Igt, Ied) = Q(Ied, Igt)
Ideal solution (P2): Igt = Ied
Sensitivity to noise (P3): if any pixel (p) does not belong 
to ground truth (Igt) or edge detected image (Ied) i.e., 
p ∉(Igt ∪Ied) , then
Sensitivity to improvement (P4): if p ∈Igt and p ∉Ied , 
then
First property is self explanatory, second property state 
that there is only one optimal solution. Third and fourth 
properties indicate that inclusion of correct and in-correct 
pixels will decrease or increase error respectively. However, 
these four properties are not good enough to describe edge 
(11)
̂Is = 𝛾(̂In −Gn) + Gn
(12)
̂Is = 𝛾[aiGn + bi −Gn] + Gn
(13)
̂Is = [𝛾(ai −1) + 1]Gn + kbi
(14)
1
159
⎡
⎢
⎢
⎢
⎢
⎢⎣
2 4
5
4 2
4 9 12 9 4
5 12 15 12 5
4 9 12 9 4
2 4
5
4 2
⎤
⎥
⎥
⎥
⎥
⎥⎦
.
Q(Igt, Ied) < Q(Ied ∪{p}, Igt)
Q(Igt, Ied) < Q(Ied ∪{p}, Igt)
detection as to include falsely excluded important edge 
sometime extra pixels are accepted. As considering p ∉Igt 
and to include p in Ied will increase un-avoidable error. In 
edge detection the main requirements are the correct identi-
fication of edge pixels and also the correct location of edge 
pixels.
We classify the positives pixels as edges when the classifi-
cation is binary. We can classify pixels edge into four unique 
classifications with the condition that ground truth is present. 
These four classes are: true positive (TP), false positive (FP), 
true negative (TN) and false negative (FN). Due to the fact 
that not a large portion of the pixels are edges, there will be 
an issue of imbalanced binary classification (Chawla et al. 
2004), where the dominating class will be the negative class.
The issues related with the position of pixel can be solved 
with the help of the spatial tolerance during the matching of 
the edge pixels as the factor, which decides whether the pixel 
classification is accurate or not, is the least alteration in the 
position of the pixel. Normally, we cannot assume an edge 
pixel as fully accurate or not, relying upon the way that it is 
found at t or t+1 pixels from the true edge. According to the 
Liuand Haralick, a quality measure is exact in the event of 
small changes in value reflects small variations in the detect 
(Liu and Haralick 2002). The measures such as F-score, and 
휒2 test, are precise when pixels positions are exact however 
fall flat when pixels position changes. These issues prompted 
penalizing an edge pixel relying upon its separation to a true 
edge, which encourages the concept of distance based Edge 
Measures (EMs).
5.2  Correlation coefficient
The correlation coefficient is obtained by means of the equa-
tion (Van Heel 1987)
Under perfect matching |휌| is one theoretically lowest 
value is zero. This metric satisfies properties P1 and P2.
5.3  Pratt’s figure of merit (FoM)
The Pratt’s figure of merit (FoM) evaluates edge location 
exactness in edge detected image in comparison to ground 
truth image, by measuring the displacement of edge points 
that are detected from an ideal edge. The FoM is character-
ized by (Wesolkowski et al. 2000)
(15)
휌 =
cov[Igt, Ied]
√Var[Igt]Var[Ied]
.
(16)
FoM =
1
max(Igt, Ied)
Ied
∑
i=1
1
1 + 휇d2(p, Igt)

454
	
Evolving Systems (2021) 12:447–462
1 3
Here, Igt is ideal edge points (ground truth), Ied is edge 
points detected, d is displacement of detected edges from 
ideal edges, 휇 is scaling constant.
It is essential to note that these measurements binarize 
information before assessing images; this implies assess-
ment is done over images that have lost data. The above 
mentioned metrics return esteems in the vicinity of 0 and 
1, where 0 would imply that we have no similarity between 
detected image and reference image, and 1 implying that 
high closeness was detected, or in other words, each of the 
pixels present in one image edges are recognized at the same 
place in other image.
5.4  Structure similarity image metrics (SSIM)
SSIM completes a greatly improved activity at measuring 
subjective image quality in comparison to MSE or PSNR. At 
a high state, SSIM endeavors to estimate the adjustment in 
luminance, contrast, and structure in a picture. The SSIM is 
given by (Hore and Ziou 2010)
where, 휇 is mean, 휎2 is variance, 휎 is cross-correlation term 
and rest terms are fixed constants.
5.5  Hausdorff distance (HoD)
Considering two images Igt = {a1, …,an} and Ied = {b1, …,bn}, 
the Hausdoff distance calculated as (Ma and Grimson 2005):
The function d(Igt, Ied) is the directed Hausdorff distance 
from Igt to Ied. This method is based on distance among the 
points, and lesser distance means more closeness between the 
images.
5.6  Euclidiean distance (ED)
The Euclidian distance between two images is evaluated as 
(Nadernejad et al. 2008)
(17)
SSIM(Igt, Ied) =
(2휇gt휇ed + k1)(2휎gted + k2)
(휇2
gt + 휇2
ed + k1)(휎2
gt + 휎2
gt + k2)
(18)
H(Igt, Ied) = max(d(Igt, Ied), d(Ied, Igt))
Where
d(Igt, Ied) = max
a∈Igt
min
b∈Ied ||a −b||
(19)
ED(Igt, Ied) = 1
ij
i−1
∑
m=0
j−1
∑
n=0
|||Igt(m, n) −Ied(m, n)|||
2
5.7  Average point‑to‑set distances (DK)
The average distance from the edge pixels in the image under 
consideration to those in the ground truth is obtained as (Peli 
and Malah 1982)
We have considered only one image Lena along-with the 
ground truth image which contain ideal edge to cover vast 
varieties of results.
5.8  Baddeley’s delta metric (BDM)
Baddeley’s delta metric (BDM) is modified form of the Haus-
dorff distance (Ma and Grimson 2005). It is based on the dis-
tance between the elements of each of the sets, and expressed 
as (Lopez-Molina et al. 2017)
f is a function which is concave in nature, and modulates the 
point to point distance.
In Fig. 9a original Lena image is shown, while varying 
patch radius from r = 16,32,64 and 128, while keeping ε to 
a fixed level of 0.01 and γ equals 5 the obtained results are 
shown in Fig. 9b–e. the size of local patch is considered to 
be (2r + 1) × (2r + 1) For smaller radius, block size is smaller, 
and sharpening takes place in local patches, therefore edges 
becomes sharper but discontinuity points increases thus 
sharpness quality is not good, as we increase the radius, the 
sharpness in image is relatively more uniform, and for r = 64 
and 128 the sharpness in images is of good quality.
The above experiment is repeated again with ε = 0.001, 
while keeping other parameters fixed, the effect of regulari-
zation parameter can be observed the mean variance of Lena 
image under consideration is 0.0256 therefore the effect of 
regularization parameter (ε) is negligible and image quality 
does not alter significantly.
In Fig. 10, image enhancement for various values of γ is 
shown, here as γ increases the sharpness increases, but for 
larger values of γ the quality of the images changes consider-
ably as compared to original image. Moreover a significant 
variation in the colours is also observed. It can be observed 
(marked region in original image) from the figures that the 
first with the rise in γ edges becomes sharper thereafter they 
start to diminish, therefore it can also be concluded that both 
ε and γ have significant effect on the overall quality of the 
sharpened images.
(20)
DK = 1
Ied
K
√∑
p∈Ied
dK(p, Igt)
(21)
BK
f =
[
1
|P|
∑
p∈P
|||fd(p, Igt) −fd(p, Ied)|||
K
]1∕K
,

455
Evolving Systems (2021) 12:447–462	
1 3
In Fig. 11, results are presented for methods ­M1 and ­M2. 
In Fig. 11a edge detected image using fuzzy logic is shown 
for Lena image. In Fig. 11b–h results are shown for vari-
ous values of γ as in Fig. 10. Consider the mark region in 
Fig. 10a, it is clear from Fig. 11a that fuzzy logic method in 
alone fail to capture edges in this region. Similarly around 
hat area noise is also added. As we increases the value of γ 
from 5 to 100, the noise around hat area diminishes but just 
above the mark area noise start to increases. These changes 
are shown in Fig. 12.
In Fig. 13, results are presented for methods ­M3. It is clear 
from the figure that using filtering noise is suppressed sig-
nificantly, and detected edges are much better as compared 
to shown in Fig. 11.
The discussion made above is based on human visualiza-
tion. However, shifting in pixel positions cannot be identified 
using human vision system. Moreover, the regularization 
term also lead to the shifting of pixels. Therefore, distance 
based parameters for quality measurements provide the cor-
rectness of the chosen methods. In our results we have not 
done any further processing on detected image to clearly 
visualize the effect of each method.
In Table 3, listing of parameters results are shown, FoM 
is least for canny detection with value of 0.297 and it is 
best for γ = 5, equals 0.483, SSIM for Canny is 0.451 and 
for γ = 20, equals 0.560, while HoD is best for γ = 50, and 
equals to 4.44/7, the Euclidian distance is minimum for 
canny method, which is an expected results as large number 
of edges are detected by canny method. BDM is least for 
γ = 5, while it is at maximum for fuzzy method. ­DK is best 
for Canny method. Finally the co-relation co-efficient is best 
for γ = 30, 50. Therefore it can be inferred from the table that 
the performance of the fuzzy method in alone is poorest and 
among the chosen parameters for γ = 5, the obtained results 
are better than other considered methods. In Table 4, results 
are compared for methods M1 and M3. Obtained results have 
Fig. 9   Image Sharpening using guided filtering (k constant). a Original image. b r = 16, ε = 0.01, γ = 5. c r = 32, ε = 0.01, γ = 5. d r = 64, ε = 0.01, 
γ = 5. e r = 128, ε = 0.01, k = 5. f r = 16,ε = 0.001, γ = 5. g r = 32, ε = 0.001, γ = 5. h r = 64, ε = 0.001, γ = 5. i r = 128, ε = 0.001, γ = 5

456
	
Evolving Systems (2021) 12:447–462
1 3
shown similar trend but obtain results are much better in 
comparison to the results in Table 3. In Table 4, FoM is 
maximum for γ = 20, SSIM is maximum for γ = 30, 50. HoD 
is maximum for γ = 50. Still these performance measures are 
indicative, and do not provide clear information about exact 
edge detection mechanism. Therefore, in most of the recent 
research (Begol and Maghooli 2011; Mehrara et al. 2009; 
Zhang et al. 2009; Mathur and Ahlawat 2008; Marmanis 
Fig. 10   Image sharpening using guided filtering (γ varying). a Original Lena image. b r = 64, ε = 0.01, γ = 5. c r = 64, ε = 0.01, γ = 10. d r = 64, 
ε = 0.01, γ = 20. e r = 64, ε = 0.01, γ = 30. f r = 64, ε = 0.01, γ = 50. g r = 64, ε = 0.01, γ = 75. g r = 64, ε = 0.01, γ = 100
Fig. 11   Edge detected images a fuzzy logic, b ­M2, γ = 5, c ­M2, γ = 10, d ­M2, γ = 20, e ­M2, γ = 30, f ­M2, γ = 50, g ­M2, γ = 75, h ­M2, γ = 100

457
Evolving Systems (2021) 12:447–462	
1 3
et al. 2018; Farbod et al. 2018; Setayesh et al. 2013) human 
visual system (HVS) is used to characterize edge and non-
edge pixels.
The above results are obtained on Lena image, detected 
edges are compared with ground truth image and results 
are compared in terms of various performance measures. 
However, to prove usefulness of proposed method results are 
obtained other database images. Image shows in Fig. 14, is 
taken from Berkley Segmentation Database (https​://www2.
eecs.berke​ley.edu/Resea​rch/Proje​cts/CS/visio​n/bsds/BSDS3​
00/html/datas​et/image​s.html), while in image in Fig. 15, and 
is from USC-SIPI Image Database (http://sipi.usc.edu/datab​
ase/datab​ase.php). Considering, Fig. 14, fuzzy logic based 
method fail to detect edge on west-south corner of the image. 
Fig. 12   Image segment with visible variations
Fig. 13   Edge detected images a ­M3, γ = 5, b ­M3, γ = 10, c ­M3, γ = 50, d ­M3, γ = 100
Table 3   Comparison of 
parameters for methods M1 and 
M2
Best obtained values are marked in bold
Methods
Performance metrics
FoM
SSIM
HoD (Avg./max)
ED
BDM
DK
ρ
Canny
0.297
0.451
6.69/9.21
0.0048
10.74
0.06
0.225
Fuzzy
0.398
0.519
5.31/8.12
0.0059
12.24
0.08
0.146
γ = 5
0.483
0.559
4.67/7
0.0056
9.40
0.111
0.21
γ = 10
0.472
0.557
4.59/6.78
0.0056
9.48
0.113
0.218
γ = 20
0.469
0.560
4.47/6.86
0.0055
10.03
0.11
0.229
γ = 30
0.467
0.559
4.45/7.42
0.0055
10.02
0.112
0.232
γ = 50
0.471
0.556
4.44/7
0.0055
9.98
0.102
0.232
γ = 75
0.467
0.557
4.46/7.42
0.0055
9.85
0.102
0.231
γ = 100
0.469
0.555
4.47/7.21
0.0055
9.93
0.106
0.231

458
	
Evolving Systems (2021) 12:447–462
1 3
Table 4   Comparison of 
parameters for methods M1 and 
M3
Methods
Performance metrics
FoM
SSIM
HoD (Avg/max)
ED
BDM
DK
ρ
Canny
0.297
0.451
6.69/9.21
0.0048
10.74
0.06
0.225
Fuzzy
0.398
0.519
5.31/8.12
0.0059
12.24
0.08
0.146
γ = 5
0.470
0.581
4.15/10.44
0.0056
9.92
0.120
0.186
γ = 10
0.475
0.582
4.17/9.64
0.0056
9.69
0.110
0.198
γ = 20
0.497
0.590
4.13/8.43
0.0055
9.05
0.093
0.211
γ = 30
0.496
0.595
4.09/7.09
0.0055
8.81
0.088
0.217
γ = 50
0.495
0.595
4.09/6.86
0.0057
8.59
0.079
0.216
γ = 75
0.489
0.593
4.11/6.63
0.0057
8.65
0.087
0.217
γ = 100
0.493
0.593
4.12/6.56
0.0057
8.57
0.081
0.219
Fig. 14   BSD edge detected images a fuzzy logic, b ­M3, γ = 5, c ­M3, γ = 10, d ­M3, γ = 15, e ­M3, γ = 20
Fig. 15   USC-SIPI edge detected images a fuzzy logic, b ­M3, γ = 5, c ­M3, γ = 10, d ­M3, γ = 15, e ­M3, γ = 20

459
Evolving Systems (2021) 12:447–462	
1 3
However, from (b) to (e) it is clear that as we increase sharp-
ness the edges can be detected more correctly. From Fig. 15, 
it can be visualized that as sharpness increases; image 
detail is more clearly visible. Same effect is also obtained 
in detected edges.
In Fig. 16, results are obtained for tulip images and 
obtained response show similar trend as in Figs. 14 and 15. 
It is also clear from Figs. 15 and 16, sometime more sharp-
ness leads to the generation of noise; therefore image should 
be sharpened to a level where effect of noise is minimal. 
However, if this noise is dominant, than this additional noise 
can be suppressed using filters as used in other edge detec-
tion methods (Shah 1997).
In the above discussed results it is found that fuzzy logic 
based method fails to detect some of the edges. Therefore, 
to check the validity of the considered fuzzy logic structure, 
in Fig. 17 results are generated for two images [(a) and (c)] 
where, edges are clearly visible, and it is found that consid-
ered fuzzy logic structure correctly detect all the edges in 
both the images. Thus, in case of clear edges images fuzzy 
logic structure gives accurate results.
In Fig. 18, animal alphabet image is taken which has 
more complex edges as compared to images considered in 
Fig. 17. Fuzzy logic based method fails to detect ‘Tiger’ and 
‘Orangutan’ shapes and also letter mark on the animals are 
not detected. As we increase sharpness edges and letters are 
detected more clearly. In Fig. 19, zoomed version of fuzzy 
logic and sharpened image γ = 20 is shown, the name of 
animal is not clearly detected with fuzzy design, while with 
proposed method edges of both animal name and letter mark 
Fig. 16   Tulip edge detected images a fuzzy logic, b ­M3, γ = 5, c ­M3, γ = 10, d ­M3, γ = 15, e ­M3, γ = 20
Fig. 17   Edge detection using fuzzy logic a original image, b detected edges, c original image, d detected edges

460
	
Evolving Systems (2021) 12:447–462
1 3
on the animals are detected. With our design claws and paws 
edges are clearly visible.
Finally, we can conclude that the proposed method is 
superior to fuzzy logic based method, and it overcomes the 
limitations of fuzzy logic structure. The membership func-
tion considered in this work is same as in previous works 
(Angelov et al. 2011; Sargano et al. 2017; Rogowska 2000; 
Rangarajan 2005; Alshennawy and Aly 2009; Aborisade 
2011). However, to overcome the limitations of fuzzy logic 
method, further research can be carried out in developing 
fuzzy rules which are developed using human expert system 
and in choosing appropriate membership function.
Fig. 18   Animal alphabet image a fuzzy logic, b ­M3, γ = 5, c ­M3, γ = 10, d ­M3, γ = 15, e ­M3, γ = 20
Fig. 19   Zoomed version of a Fig. 18a, b Fig. 18e

461
Evolving Systems (2021) 12:447–462	
1 3
6  Conclusions
This paper presents an edge detection method based on 
fuzzy logic, sharpening and filtering. The main aim of the 
paper is to design an edge detection method where edges 
can be controlled without deteriorating the considered 
image. It has been found that fuzzy logic method in alone 
falsely rejected some of the edges, noise is also added. To 
deal with this we have shown that sharpening of image can 
be done, which improves the results significantly. It is also 
shown that sharpening itself depends on parameters r, ε 
and γ, and these parameters should be chosen efficiently 
to get desired results. It is also notable that the regulari-
zation parameter (ε) should be kept within the sub-range 
of image variance as regularization parameter shift the 
pixel positions. It is also shown that noise generated due to 
fuzzy process can be significantly brought down by using 
Gaussian filter. The obtained results are compared with 
various statistical measures and it has been found that pro-
posed methods M2 and M3 performs better in comparison 
to method M1.
References
Aborisade DO (2011) Novel fuzzy logic based edge detection tech-
nique. Int J Adv Sci Technol 29(1):75–82
Alshennawy AA, Aly AA (2009) Edge detection in digital images using 
fuzzy logic technique. World Acad Sci Eng Technol 51:178–186
Angelov P, Zhou X (2008) On line learning fuzzy rule-based system 
structure from data streams. In: 2008 IEEE international confer-
ence on fuzzy systems (IEEE world congress on computational 
intelligence). IEEE, pp 915–922
Angelov P, Sadeghi-Tehran P, Ramezani R (2011) An approach to 
automatic real-time novelty detection, object identification, and 
tracking in video streams based on recursive density estimation 
and evolving Takagi-Sugeno fuzzy systems. Int J Intell Syst 
26(3):189–205
Begol M, Maghooli K (2011) Improving digital image edge detection 
by fuzzy systems. World Acad Sci Eng Technol 81:76–79
Canny J (1986) A computational approach to edge detection. IEEE 
Trans Pattern Anal Mach Intell 6:679–698
Chawla NV, Japkowicz N, Drive P (2004) Editorial: special issue on 
learning from imbalanced data sets. ACM SIGKDD Explor Newsl 
6(1):1–6
Cosgrove C, Yuille AL (2019) Adversarial examples for edge detection: 
they exist, and they transfer. arXiv​:1906.00335​
Farbod M, Akbarizadeh G, Kosarian A, Rangzan K (2018) Optimized 
fuzzy cellular automata for synthetic aperture radar image edge 
detection. J Electron Imaging 27(1):013030
Gevers T, Gijsenij A, Van de Weijer J, Geusebroek JM (2012) Color in 
computer vision: fundamentals and applications, vol 23. Wiley, 
New York
Gonzalez CI, Melin P, Castro JR, Castillo O, Mendoza O (2016) Opti-
mization of interval type-2 fuzzy systems for image edge detec-
tion. Appl Soft Comput 47:631–643
Goswami JC, Chan AK (2011) Fundamentals of wavelets: theory, algo-
rithms, and applications, vol 233. Wiley, New York
He K, Sun J, Tang X (2010) Guided image filtering. In: European con-
ference on computer vision. Springer, Berlin, pp 1–14
He K, Sun J, Tang X (2013) Guided image filtering. IEEE Trans Pattern 
Anal Mach Intell 6:1397–1409
Hore A, Ziou D (2010) Image quality metrics: PSNR vs. SSIM. In: 
Pattern recognition (ICPR), 2010 20th international conference 
on. IEEE, pp 2366–2369
Jeong C, Yang HS, Moon K (2019) A novel approach for detecting 
the horizon using a convolutional neural network and multi-scale 
edge detection. Multidimens Syst Signal Process 30(3):1187–1204
Liu G, Haralick RM (2002) Optimal matching problem in detec-
tion and recognition performance evaluation. Pattern Recognit 
35(10):2125–2139
Liu Y, Lew MS (2016) Learning relaxed deep supervision for better 
edge detection. In: Proceedings of the IEEE conference on com-
puter vision and pattern recognition, pp 231–240
Lopez-Molina C, Ayala-Martini D, Lopez-Maestresalas A, Bustince H 
(2017) Baddeley’s delta metric for local contrast computation in 
hyperspectral imagery. Prog Artif Intell 6(2):121–132
Ma X, Grimson WEL (2005) Edge-based rich representation for vehi-
cle classification. In: Computer vision, 2005. ICCV 2005. Tenth 
IEEE international conference on, vol 2. IEEE, pp 1185–1192
Marmanis D, Schindler K, Wegner JD, Galliani S, Datcu M, Stilla U 
(2018) Classification with an edge: improving semantic image 
segmentation with boundary detection. ISPRS J Photogramm 
Remote Sens 135:158–172
Mathur S, Ahlawat A (2008) Application of fuzzy logic in image edge 
detection. In: International Conference “Intelligent Information 
and Engineering Systems”
Mehrara H, Zahedinejad M, Pourmohammad A (2009) Novel edge 
detection using BP neural network based on threshold binariza-
tion. In: Computer and electrical engineering, 2009. ICCEE’09. 
Second international conference on, vol 2. IEEE, pp 408–412
Nadernejad E, Sharifzadeh S, Hassanpour H (2008) Edge detec-
tion techniques: evaluations and comparisons. Appl Math Sci 
2(31):1507–1520
Peli T, Malah D (1982) A study of edge detection algorithms. Comput 
Gr Image Process 20(1):1–21
Rangarajan S (2005) Algorithms for edge detection. Stony Brook Uni-
versity. http://www.ee.sunys​b.edu/~cvl/ese55​8/s2005​/Repor​ts/
Srika​nth%20Ran​garaj​an/submi​ssion​.doc. Accessed 10 Apr 2019
Ren H, Zhao S, Gruska J (2018) Edge detection based on single-pixel 
imaging. Opt Express 26(5):5501–5511
Rogowska J (2000) Overview and fundamentals of medical image 
segmentation. In: Handbook of medical imaging, processing and 
analysis. Academic Press, Inc., Orlando, FL, USA, pp 69–85
Sargano A, Angelov P, Habib Z (2017) A comprehensive review on 
handcrafted and learning-based action representation approaches 
for human activity recognition. Appl Sci 7(1):110
Setayesh M, Zhang M, Johnston M (2013) A novel particle swarm 
optimisation approach to detecting continuous, thin and smooth 
edges in noisy images. Inf Sci 246:28–51
Shah M (1997) Fundamentals of computer vision. University of Central 
Florida, Orlando
Shih FY (2010) Image processing and pattern recognition: fundamen-
tals and techniques. Wiley, New York
Van Heel M (1987) Similarity measures between images. Ultramicros-
copy 21(1):95–100
Wesolkowski S, Jernigan ME, Dony RD (2000) Comparison of color 
image edge detectors in multiple color spaces. In: Image process-
ing, 2000. Proceedings. 2000 international conference on, vol 2, 
IEEE, pp 796–799
Zhang L, Xiao M, Ma J, Song H (2009) Edge detection by adaptive 
neuro-fuzzy inference system. In: Image and signal processing, 
2009. CISP’09. 2nd international congress on. IEEE, pp 1–4

462
	
Evolving Systems (2021) 12:447–462
1 3
Zhang W, Zhao Y, Breckon TP, Chen L (2017) Noise robust image edge 
detection based upon the automatic anisotropic Gaussian kernels. 
Pattern Recognit 63:193–205
Zhou X, Angelov P (2007) Autonomous visual self-localization in 
completely unknown environment using evolving fuzzy rule-based 
classifier. In: 2007 IEEE symposium on computational intelli-
gence in security and defense applications. IEEE, pp 131–138
Publisher’s Note  Springer Nature remains neutral with regard to 
jurisdictional claims in published maps and institutional affiliations.

