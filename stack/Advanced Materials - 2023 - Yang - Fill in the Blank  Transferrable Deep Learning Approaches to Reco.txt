RESEARCH ARTICLE
www.advmat.de
Fill in the Blank: Transferrable Deep Learning Approaches
to Recover Missing Physical Field Information
Zhenze Yang and Markus J. Buehler*
Solving materials engineering tasks is often hindered by limited information,
such as in inverse problems with only boundary data information or design
tasks with a simple objective but a vast search space. To address these
challenges, multiple deep learning (DL) architectures are leveraged to predict
missing mechanical information given limited known data in part of the
domain, and further characterize the composite geometries from the
recovered mechanical ﬁelds for 2D and 3D complex microstructures. In 2D, a
conditional generative adversarial network (GAN) is utilized to complete
partially masked ﬁeld maps and predict the composite geometry with
convolutional models with great accuracy and generality by making precise
predictions on ﬁeld data with mixed stress/strain components, hierarchical
geometries, distinct materials properties and various types of microstructures
including ill-posed inverse problems. In 3D, a Transformer-based architecture
is implemented to predict complete 3D mechanical ﬁelds from input ﬁeld
snapshots. The model manifests excellent performance regardless of
microstructural complexity and recovers the entire bulk ﬁeld even from a
single surface ﬁeld image, allowing internal structural characterization from
only boundary measurements. The whole frameworks provide eﬃcient ways
for analysis and design with incomplete information and allow the direct
inverse translation from properties back to materials structures.
Z. Yang, M. J. Buehler
Laboratory for Atomistic and Molecular Mechanics (LAMM)
Massachusetts Institute of Technology
77 Massachusetts Ave., Cambridge, MA 02139, USA
E-mail: mbuehler@mit.edu
Z. Yang
Department of Materials Science and Engineering
Massachusetts Institute of Technology
77 Massachusetts Ave., Cambridge, MA 02139, USA
M. J. Buehler
Center for Computational Science and Engineering
Schwarzman College of Computing
Massachusetts Institute of Technology
77 Massachusetts Ave, Cambridge, MA 02139, USA
M. J. Buehler
Center for Materials Science and Engineering
77 Massachusetts Ave, Cambridge, MA 02139, USA
The ORCID identiﬁcation number(s) for the author(s) of this article
can be found under https://doi.org/10.1002/adma.202301449
© 2023 The Authors. Advanced Materials published by Wiley-VCH
GmbH. This is an open access article under the terms of the Creative
Commons Attribution-NonCommercial License, which permits use,
distribution and reproduction in any medium, provided the original work
is properly cited and is not used for commercial purposes.
DOI: 10.1002/adma.202301449
1. Introduction
In modern engineering paradigms, diverse
inverse problems such as failure analy-
sis, nondestructive testing and ultrasonic
or X-ray characterization of materials are
challenging as only material responses
from indirect measurements at boundaries
or interfaces are available for the inter-
nal microstructure identiﬁcation.[1–3] Be-
sides materials analysis and characteriza-
tion, engineering design tasks such as
topology optimization, mechanical meta-
materials design often end up with multi-
ple or nonexistent solutions given a sim-
ple objective but a massive search space.[4–6]
These engineering characterization and de-
sign problems, given their limited amount
of accessible information and notorious
ill-posedness, are intractable for conven-
tional methods such as ﬁnite element
analysis (FEA) or time-consuming using
iterative algorithms. Therefore, develop-
ments of new experimental procedures,
computational frameworks and regulariza-
tion techniques[7,8] are imperative. With the
recent advent of machine learning (ML),
especially deep learning (DL) approaches, new opportunities and
methodologies of solving inverse problems and realizing mate-
rials analysis and characterization with limited information have
arisen.[9–12]
In recent years, deep learning approaches and data-driven
methods have been playing increasingly signiﬁcant roles in
diverse ﬁelds including computer vision,[13] natural language
processing,[14,15] automatic speech recognition[16,17] and other
data-centric computer science areas. With the advent of diverse
architectures ranging from convolutional networks to attention-
based models, artiﬁcial intelligence (AI) also beneﬁts other sci-
ence and engineering disciplines, oﬀering new revolutionary
methodologies and perspectives for scientiﬁc research. Massive
progresses have been witnessed including but not limited to
protein folding,[18,19] biomedical imaging,[20] drug discovery,[21]
multiscale modeling[22–24] and functional materials design.[25–27]
Apart from interdisciplinary applications using existing architec-
tures, new models developed particularly for physical and engi-
neering science have also arisen by either embedding physical
laws into the training[28,29] or encoding certain symmetry directly
into model architectures.[30]
Within the context of inverse problems in engineering sci-
ence, diﬀerential equation-focused neural networks provides one
Adv. Mater. 2023, 2301449
2301449 (1 of 14)
© 2023 The Authors. Advanced Materials published by Wiley-VCH GmbH

www.advancedsciencenews.com
www.advmat.de
potential solution given its generality and diﬀerentiable nature
which traces back to the 1990s.[31] The general idea of such
models, which includes concepts such as physics-informed neu-
ral networks (PINNs), is to impose physical constraints such
as governing equations to the neural networks by customiz-
ing the loss function.[28,29] The training process minimizes the
loss, therefore, at the same time, minimizing the errors of
predictions from the “known” physical laws. However, the im-
plementation of PINNs requires knowledge of the underlying
PDE and BCs/ICs, and the convergence process can be slow
for high-dimensional space. Therefore, physics-free models em-
powered by the advent of deep learning architectures such as
image-oriented architectures are still widely used for addressing
both forward and inverse problems in solid mechanics,[32] ﬂuid
mechanics,[33] geoscience[34] and other engineering ﬁelds.[35] In
addition, engineering materials from property back to structure
known as the inverse design problem is also an emergent area
on which AIs have enormous impacts. There are two widely
used paradigms:[12,36,37] 1) implementing generative networks
with conditional labels based on the target properties; 2) comb-
ing predictive models with optimization algorithms to iteratively
converge to a design target. These paradigms have been applied
to multiscale materials ranging from microscale molecules to
macroscale structures.[38]
In this work, we present AI-based frameworks to predict com-
plete strain and stress ﬁelds from partial information of ﬁeld data,
and realize inverse translation from mechanical ﬁelds to compos-
ite microstructures. Conventionally, numerical simulations such
as FEA are used as a forward solver to establish the relation be-
tween structures to properties. However, to solve inverse prob-
lems like geometry identiﬁcation, additional optimizer such as
optimization algorithms is often needed in combination with the
forward solver to iteratively search for the best solutions.[4] The
process can be expensive as every inquiry from the optimizer re-
quires calculations from the forward solver. In addition, the op-
timizer can easily be trapped in the local minimums in a high-
dimensional, multimodal search space.
To address this shortcoming, we here combine multiple deep
learning architectures to build a direct linkage from an incom-
plete strain or stress ﬁeld to the heterogenous structure for both
2D and 3D situations. In the 2D situation, we combine a condi-
tional generative adversarial network (GAN) approach and a con-
volutional model to ﬁrst recover the masked region in a ﬁeld map
and then identify the composite structures from recovered me-
chanical ﬁelds. The ﬁeld-completion approach is then validated
on various situations including: 1) When diﬀerent strain/stress
components are mixed in a dataset. 2) When needs to be ex-
tended to out-of-distribution microstructures with diﬀerent ma-
terial shapes and grid sizes. 3) when mechanical behaviors of
constituent materials involve plasticity. 4) When continuous mi-
crostructures instead of discrete blocks like Cahn–Hilliard pat-
terns are given. The results from these test cases show the high
precision and generality of our approach. Based on the frame-
work, we further explore the so-called “one-to-many” scenario
in which multiple composite microstructures can correspond to
similar mechanical ﬁelds at the boundary region. The method
can be implemented to address the ill-posedness commonly
found in inverse problems. In terms of 3D composite microstruc-
tures, we represent the 3D mechanical ﬁeld by a stack of ﬁeld im-
ages which are denoted as ﬁeld frames. A modiﬁed Transformer-
based model is implemented to predict the complete 3D bulk
ﬁeld from part of the ﬁeld and then internal structure can be
identiﬁed with a convolutional model similar as the 2D case. The
model performs well regardless of the structural complexity and
recovers the whole ﬁeld from even a single surface ﬁeld map, pro-
viding new solutions and perspectives to practical applications
when internal structures need to be characterized from indirect
surface measurement.
2. Results
2.1. General Setup of this Work
In this work, we combine multiple deep learning architectures
for completing the whole ﬁeld from partial ﬁeld and further char-
acterizing the microstructure (Figure 1). The input data are ﬁeld
map (2D case) or ﬁeld frame sequence (3D case) with missing in-
formation, generated by applying masks to the original complete
ﬁelds. In both 2D and 3D cases, there are two AI models com-
bined to perform the task. The ﬁrst AI model is trained to “ﬁll in
the blank”, recovering the complete ﬁeld information from the
partial ﬁeld and the second model “solves the puzzle”, taking the
recovered complete ﬁeld information as input to reversely obtain
the corresponding microstructure of the composite.
In terms of the data generation, FEA is implemented to cal-
culate the strain and stress ﬁelds of both 2D and 3D compos-
ites given certain loading conditions. The FEA calculations are
regarded as the ground truth in this work. The composite mi-
crostructures are created following the digital setup from our pre-
vious works[39–41] (except that we also test a dataset with Cahn–
Hillard patterns): two diﬀerent materials including a rigid and
soft material with a square shape randomly distributed in a 2D or
3D grid to form the geometry of the composite. The details about
the setup of mechanical tests and deep learning model selections
for 2D and 3D cases are included in the following sections of Re-
sults and also in the Experimental Section.
2.2. Mechanical Field Completion for 2D Composites
We ﬁrst investigate a 2D plane strain situation with composites
under uniaxial tension test along the x direction (Figure S1a,
Supporting Information). To save the computational cost, a sym-
metric composite about the y-axis in an 8 × 8 grid is utilized,
same as our previous works[39,40] (Figure S1a, Supporting Infor-
mation). FEA calculates the complete mechanical ﬁelds for 1000
diﬀerent composite microstructures and free-form masked re-
gions in the shape of regular squares and irregular brush strokes
are introduced. The details about creating both regular and ir-
regular shapes of masks are included in Experimental Section.
Masked ﬁeld maps and the original complete ﬁeld maps are then
paired to train a deep conditional generative adversarial network
(cGAN) often known as the “DeepFill” model[42] to ﬁll the miss-
ing strain/stress values in the masked regions (Figure 2a). A GAN
model is a type of deep neural network that learns from the train-
ing data statistics and generates new data candidates similar to
the existing data. There are two constituent neural networks in
Adv. Mater. 2023, 2301449
2301449 (2 of 14)
© 2023 The Authors. Advanced Materials published by Wiley-VCH GmbH
 15214095, 0, Downloaded from https://onlinelibrary.wiley.com/doi/10.1002/adma.202301449 by Cochrane Canada Provision, Wiley Online Library on [07/05/2023]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

www.advancedsciencenews.com
www.advmat.de
Figure 1. General schematic of the problem solved in this paper. The major contribution is utilizing deep learning approaches to recover missing
information from the given parts and further characterize the microstructure of the composite material. We start from strain and stress ﬁelds with
“masks” (gray color) and leverage an AI model to ﬁll in the blank. Then the geometries of composite microstructures are identiﬁed based on the
complete ﬁeld maps using another AI model.
Figure 2. Results for the 2D case. a) Framework of 2D mechanical ﬁeld completion and geometry identiﬁcation for 2D plane strain case. The framework
begins with training a DeepFill model which can recover the masked ﬁeld maps. A CNN model is then incorporated to translate the mechanical ﬁelds
to the composite microstructures which are represented by sequences. b) Example results with diﬀerent forms of masked (𝜎11). From left to right in
one example are ground truths of ﬁeld maps and microstructures (listed vertically) followed by masked ﬁeld maps and ﬁnally corresponding predictions
of complete ﬁeld maps and composite geometries. c) Performance of DeepFill model on completing stress ﬁeld map. The mean stress values in the
masked region of each example are collected for evaluation. The ground truth and predictions show great agreement (R2 = 0.998). d) Performance of
CNN model on geometry identiﬁcation with predicted stress ﬁeld maps as input. The distribution of geometry diﬀerences (number of diﬀerent blocks
normalized by the total number of blocks) between the ground truth and the predictions is shown.
a GAN model known as the Generator and the Discriminator
which are trained simultaneously and competitively based on the
game theory. The Generator is trained to generate new data to de-
ceive the Discriminator while the Discriminator learns to distin-
guish each fake data produced by the Generator. The competition
converges when a Nash equilibrium is reached between the two
networks. The cGAN model we utilize here is a subtype of GAN
architectures that constrains the Generator with certain input la-
bels such as texts and images.[43–45] In the DeepFill model, the
input constraint is a masked image and the target output is the
complete ﬁeld map (Figure 2a). Compared to the cGAN model
we utilized in previous work[39,40] (which also performs image-to-
image translation tasks), the DeepFill model consists of a coarse
and a reﬁnement network in the Generator to better capture
both local and global textures. A gated convolution mechanism
is implemented that facilitates dynamic feature selection for each
channel and pixel in images. In terms of the model architecture
of the Discriminator, patch-based loss is utilized with spectral
normalization that stabilizes the training (see Experimental Sec-
tion for details). To save computational cost and to realize fast
Adv. Mater. 2023, 2301449
2301449 (3 of 14)
© 2023 The Authors. Advanced Materials published by Wiley-VCH GmbH
 15214095, 0, Downloaded from https://onlinelibrary.wiley.com/doi/10.1002/adma.202301449 by Cochrane Canada Provision, Wiley Online Library on [07/05/2023]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

www.advancedsciencenews.com
www.advmat.de
convergence, transfer learning is implemented with a model pre-
trained on a large dataset known as Places[46] that contains with
millions of scene images. Starting from the so-pretrained status,
the model is further trained with 800 data in the training set (80%
for training, 20% for testing). After recovering the complete ﬁeld
map with predictions, a convolutional neural network (CNN) is
implemented to predict the microstructure of the corresponding
composite (Figure 2a). The microstructure is represented by a se-
quence of rigid and soft materials. Given an 8 × 8 grid and the
mirror symmetry of composites, the length of the sequence is 32.
The CNN model performs a multi-label classiﬁcation (soft/rigid)
task with the mechanical ﬁelds as the input. The rationale for
choosing CNN models for inverse translation rather than more
complex architectures is that we ﬁnd that convolutional models
are suﬃciently expressive based on the high accuracy of the re-
sults. Importantly, as a general rule simpler models require less
computational power for training. More information about the
deep learning architectures and implementation details can be
found in Experimental Section.
Example results of recovering stress ﬁeld (𝜎11, “1” refers to “x”
direction) map given partial domain and the microstructure pre-
diction are shown in Figure 2b. Four diﬀerent shapes of masks in-
cluding three regular shapes (square, triangle and circle) and one
random shape (random brushes) are created for testing the accu-
racy of the combination of DeepFill and CNN models. The visu-
alization qualitatively reveals the high accuracy of both ﬁeld map
completion and geometry characterization realized by our mod-
els. To quantitatively obtain the error of predictions, we show the
scatter plot of the mean values of predicted tensile stress against
the actual values in the masked region for each test microstruc-
ture (Figure 2c). The shapes of masks are randomly and inde-
pendently generated for every test data. The R2 metric given 200
test data reaches 0.998 which reveals the excellent performance
of our DeepFill model. The distributions of mean tensile stress
values for both predictions and ground truth are also displayed
jointly (Figure 2c). To provide more comprehensive comparison,
we also show the joint plot of all predicted stress values at each
pixel in the randomly masked regions against the actual values
(Figure S2a, Supporting Information, ≈3 800 000 stress points in
total across 200 test composites). The R2 metric for all pixel val-
ues is also high (0.988) which shows the consistency of model’s
performance. With the reconstructed ﬁeld maps, a CNN model is
trained to obtain the corresponding geometries of composite mi-
crostructures. In order to realize the translation from image to se-
quence, we formulate a CNN model to perform multi-label clas-
siﬁcation with convolutional layers to capture features in the im-
age followed by a readout multilayer perceptron to output a vector
that corresponds to the sequence. We evaluate the performance
of the CNN model on geometry identiﬁcation by calculating the
geometry diﬀerence. The geometry diﬀerence is deﬁned as the
number of diﬀerent material blocks between the true and pre-
dicted sequences which is then normalized by the total number
of blocks. As the ﬁgure shows (Figure 2d), most of the predicted
sequences are same as actual sequences and the maximum ge-
ometry diﬀerence is 0.0625 (2 out of 32 blocks are diﬀerent) in all
200 test data. The precise predictions from our CNN model fur-
ther validate the high performance of the DeepFill model, which
would otherwise result in higher geometry errors if the recovered
ﬁelds are not accurate.
Besides, the ﬁeld map completion and microstructure identi-
ﬁcation with our combined deep learning models shown above
are not limited to the stress ﬁeld. We also test the approach on
one strain ﬁeld which is the tensile strain 𝜖11. To evaluate the
model’s performances, example results comparing predictions
with ground truth for both ﬁeld completion and geometry iden-
tiﬁcation are again visualized (Figure S3a, Supporting Informa-
tion). The correlation coeﬃcients between predicted and actual
values for mean values and all pixel values are 0.998 (Figure S3b,
Supporting Information) and 0.993 (Figure S2b, Supporting In-
formation, ≈3 900 000 data points in total) respectively. The dis-
tribution of geometry diﬀerences shows a maximum geometry
diﬀerence of 0.15625 (5 diﬀerent blocks out of 32 at most, Fig-
ure S3c, Supporting Information). Those results further prove
the accuracy of the proposed method.
2.3. Generalization Examination for 2D Field Completion
In order to validate the generality of the proposed approach, we
here further examine the method’s performances on four diﬀer-
ent situations including:
1) When diﬀerent strain/stress components are mixed in a
dataset.
2) When predictions need to be extended to out-of-distribution
microstructures with diﬀerent material shapes and grid sizes.
3) When mechanical behaviors of constituent materials involve
plasticity.
4) When continuous microstructures instead of discrete blocks
like Cahn–Hilliard patterns are given.
Above all, we train the DeepFill model with a dataset contain-
ing multiple types of strain and stress ﬁelds and test whether
the model can recognize diﬀerent ﬁeld components and make
predictions accordingly. Diﬀerent ﬁeld components are mixed
in the dataset without any labels for one-shot training. In the
plane strain case, there are seven nonzero and independent
strain/stress ﬁeld components which are denoted as 𝜎11, 𝜎12, 𝜎22,
𝜎33, 𝜖11, 𝜖12 and 𝜖22 (“1” refers to x direction, “2” refers to y di-
rection, “3” refers to z-direction). We include ﬁeld maps of all
seven diﬀerent components (500 data for each component) with
free-form masks to train the model (Figure 3a). Without any in-
put formation about the type of strain/stress components, the
trained model can ﬁll the masked regions in maps correctly (Fig-
ure 3b). We here utilize a square mask for benchmark in the in-
terest of simplicity. By comparing mean values of predicted strain
or stress values in the masked region with the actual values for
each composite structure (Figure S4, Supporting Information),
we reveal that all seven ﬁeld components can be accurately recov-
ered by one single model. The R2s for seven ﬁeld components are
0.996 (𝜎11), 0.935 (𝜎12), 0.963 (𝜎22), 0.977 (𝜎33), 0.976 (𝜖11), 0.753
(𝜖12) and 0.953 (𝜖22) respectively. The shear strain or stress ﬁeld
maps are less precisely captured given that under the uniaxial
tensile test, shearing ﬁeld is often negligible compared to tensile
in a composite, leading to less informative ﬁeld maps visualized
in Figure 3b. However, the overall performance of the model in
completing diﬀerent ﬁeld components is great with most of cor-
relation coeﬃcients above 0.9.
Adv. Mater. 2023, 2301449
2301449 (4 of 14)
© 2023 The Authors. Advanced Materials published by Wiley-VCH GmbH
 15214095, 0, Downloaded from https://onlinelibrary.wiley.com/doi/10.1002/adma.202301449 by Cochrane Canada Provision, Wiley Online Library on [07/05/2023]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

www.advancedsciencenews.com
www.advmat.de
Figure 3. Extensions of the proposed framework, for the 2D case. a) Mechanical ﬁeld completion given a mixed dataset with multiple strain/stress tensor
components using one DeepFill model. There are seven diﬀerent tensor components for 2D plane strain case including 𝜎11, 𝜎12, 𝜎22, 𝜎33, 𝜖11, 𝜖12, 𝜖22.
b) Example results using one DeepFill model to complete ﬁeld maps for diﬀerent strain and stress components. The comparison between ground truth
and predictions with a square mask is shown. c) Workﬂow of one-to-many inverse scenario. Given a large mask, there are multiple possible solutions
to reproduce similar given ﬁeld with masks. The dataset is split into multiple subsets on which independent models are trained to propose multiple
solutions. d) Two example results from our framework. 50 solutions of diﬀerent composite microstructures from 50 independently trained models are
provided, leading to a probability map that shows how likely a soft material is located at each block (1.0 corresponds to 100% soft material while 0.0
refers to 100% rigid material). e) Error distribution given 200 test examples. The error is the mean diﬀerence (mean MSE in the masked regions) between
the predicted ﬁeld maps given 50 diﬀerent microstructures and ground truth. f) Common blocks and error maps of two given examples. The common
red and white blocks are shared by 50 solutions. The gray blocks are sections that can be diﬀerent in 50 solutions. The error maps are obtained by taking
the average pixel-wise diﬀerence between 50 predicted ﬁeld maps and the ground truth.
Apart from making predictions on similar data as training,
we also examine the generality of our model to completely un-
seen data (with distinct shapes/patterns). More speciﬁcally, we
ﬁrst test the model’s predictions on composites with diﬀerent
shapes of components such as hexagon and triangle which are
not included in the training set which consists of composites with
square constituent materials (Figure S5a, Supporting Informa-
tion). The composites tessellated by hexagonal and triangular ma-
terials follow similar geometries as used in previous work[40] and
the materials parameters are same as the square case. Here, 200
random composites are generated for each shape to allow for vali-
dation. The results (Figure S5b,c, Supporting Information) show
that regardless of the material shape, the model is able to com-
plete the 2D mechanical ﬁeld accurately. The R2s for hexagonal
and triangular shapes are 0.981 and 0.982 respectively.
In addition, we also examine whether our model can deal with
diﬀerent grid sizes. In order to realize it, we follow the strategy
of our previous works[40,41] by training the DeepFill model for 2D
ﬁeld completion with hierarchical geometries (8 × 8, 16 × 16, 32 ×
32, Figure S6a, Supporting Information). Compared to the model
trained on non-hierarchical geometries (16 × 16), the hierarchi-
cally trained model performs better on recovering the mechanical
ﬁelds in composites with unseen hierarchies (4 × 4, 64 × 64, Fig-
ure S6b, Supporting Information). In addition, the model gen-
erally shows better accuracy on upscale predictions (4 × 4) than
downscale (64 × 64) predictions. There are two major reasons for
the low accuracy witnessed in downscale predictions: one is that
the size of the mask is much larger compared to the ﬁne grid in
downscale patterns which makes it diﬃcult to recover local de-
tails; the other is that there can be massive solutions available
for 64 × 64 composites which results in a highly ill-posed inverse
problem in terms of recovering the mechanical ﬁelds. The ﬁrst
issue is inevitable unless masks with ﬁner resolutions are used.
In terms of second issue related to ill-posedness of the problem,
we propose an extended framework in the following section for
generation and evaluation of multiple solutions.
In all the cases we have investigated, the constituent materi-
als are linear elastic solids. To demonstrate the capacity of our
approach in tackling more complicated mechanical behaviors,
we investigate the performances of the models when plasticity is
taken into the consideration. More speciﬁcally, we implement a
“crushable foam” model which involves strain hardening for both
rigid and soft materials, following the materials parameters used
in our previous work.[39] Given the plastic nature of the materi-
als, we train the DeepFill model to complete the von Mises stress
ﬁeld (𝜎von) of the composites. Two example results of recovering
ﬁeld map given partial domain and the microstructure predic-
tion are shown in Figure S7a (Supporting Information). Diﬀerent
Adv. Mater. 2023, 2301449
2301449 (5 of 14)
© 2023 The Authors. Advanced Materials published by Wiley-VCH GmbH
 15214095, 0, Downloaded from https://onlinelibrary.wiley.com/doi/10.1002/adma.202301449 by Cochrane Canada Provision, Wiley Online Library on [07/05/2023]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

www.advancedsciencenews.com
www.advmat.de
shapes of masks are tested to validate the performance, same as
the elastic case. In addition, the predicted and actual stress values
show high correlations not only for the mean values given each
composite (R2 = 0.999, Figure S7b, Supporting Information), but
also for all pixelwise values (≈3 700 000 points, R2 = 0.991, Fig-
ure S2c, Supporting Information). In terms of the geometry iden-
tiﬁcation based on the recovered ﬁeld maps, the CNN model also
achieves high accuracy with geometry diﬀerences lower than 0.1
(Figure S7c, Supporting Information). The results reveal that our
method is not limited to simple linear elasticity and can be ex-
tended to materials with more complicated properties. Further-
more, other mechanical phenomena such as damages and frac-
tures which are of great interest to scientists and engineers can
also be tackled with our approach by utilizing ultrasoft materials
to mimic the behaviors of cracks that have been discussed in our
previous study.[39]
Finally, unlike chessboard-like composites which consist of
discrete and sharp blocks, natural heterogeneous microstruc-
tures are inclined to form continuous and smooth patterns. To
validate our models’ performances on these structures, we select
Mechanical MNIST Cahn–Hilliard dataset[47] as the test example.
Mechanical MNIST Cahn–Hilliard dataset is a benchmark me-
chanical dataset with heterogeneous patterns generated based on
the well-known Cahn–Hilliard equation which is generally used
to describe phase separation processes. Please ﬁnd more details
about the dataset and data preprocessing in the Experimental
Section. We here implement the DeepFill model to recover the
strain ﬁeld (𝜖11) of the Cahn–Hilliard patterns under the biaxial
tensile test based on the displacement ﬁeld data provided in the
dataset (see Experimental Section). Two example results of strain
ﬁeld completion given partial domain and the geometry identi-
ﬁcation are shown in Figure S7d (Supporting Information). The
comparisons between the predicted and actual strain values are
again plotted to show the excellent performance of the model
(R2 = 0.963 for mean values given 377 test data, Figure S7e
(Supporting Information), R2 = 0.886 for all values given around
290 000 pixels, Figure S2d, Supporting Information). Given that
Cahn–Hilliard microstructures are continuous, we use images
instead of sequences to represent the geometries and there-
fore implement a convolutional autoencoder (CAE) for geometry
identiﬁcation. Compared to the CNN models, the CAE model ba-
sically replaces the readout layers with a decoder to allow image
output (see Experimental Section). The geometry diﬀerence is
calculated by comparing the prediction with ground truth at each
pixel of the geometry image (64 × 64) and further normalized
based on the number of pixels. As the ﬁgure displays (Figure S2e,
Supporting Information), the overall geometry diﬀerence is still
low (mean geometry diﬀerence is 0.075, maximum geometry dif-
ference is below 0.2), indicating the precision of the geometry
identiﬁcation. Compared to the cases of composites, the errors
of predicting Cahn–Hilliard patterns are relatively higher given
the higher geometrical complexity.
2.4. Extended Framework for Ill-Posed Inverse Problem
As we mention in the last section, mechanical ﬁeld completion
as an inverse task can possibly struggle with the ill-posedness
of the problem. For instance, with a large mask (e.g., a square
mask with a comparable size of the image), multiple composite
microstructures can correspond to similar strain or stress ﬁeld
in the unmasked region which means that there are more than
one solutions given the input constraints. This kind of “one-
to-many” scenario is intractable for conventional approaches
and diﬃcult to manipulate and analyze solutions. Therefore,
we here propose a framework using the same previous deep
learning model but trained on diﬀerent subsets of data to pro-
duce multiple solutions given same input partial strain/stress
ﬁelds, oﬀering a new perspective for addressing ill-posed inverse
problems.
Mathematically, ill-posedness refers to a pathology of problems
whereby the solution does not exist, or is not stable or unique, or
depends discontinuously on the data.[48] In this work, we mainly
focus on the non-uniqueness of solutions in ill-posed inverse
problems. To create ﬁeld maps that correspond to multiple pos-
sible composite microstructures, we utilize a large square mask
with a size of 192 (Figure 3c,d) given the image size of 256. A
larger mask leads to a smaller region of given input ﬁeld which
impose looser constraint to the predictions, thus resulting in an
ill-posed inverse problem. The original dataset is split into N sub-
sets (in our case, N = 50), each used for training a separate Deep-
Fill model for recovering mechanical ﬁelds and one same CNN
is used for geometry identiﬁcation (Figure 3c). The number of
the subset N corresponds to the number of solutions that will be
generated which can be identical.
The cGAN model is trained on paired image data which
makes it closer to supervised learning and produces determinis-
tic predictions given the input image. For well-posed problems,
it is not an issue as there is only one unique solution. How-
ever, in ill-posed situations—although there are multiple possible
solutions—the cGAN model will fall into one out of many mini-
mums once trained. Therefore, we split the dataset to train mul-
tiple models instead of sampling using diﬀerent random noises
from one GAN model as the cGAN model is highly constrained
by the input label which allows less stochasticity once trained
(see Experimental Section). In addition, it should be noted that
solving one-to-many inverse problem in our work or in general
ML-related scenarios, is not aimed at proposing perfect solutions
that lead to exactly same ﬁelds, but to ﬁnd ﬁelds with low errors
instead. Within this context, Figure 3d displays two examples of
solution sets with 50 geometries that lead to similar stress ﬁelds
in the unmasked region (𝜎11). Given the solution set, a probabil-
ity map that shows how likely a block is a soft or rigid material
at the location can be created based on the statistics of solutions.
The probability goes from 0.0 (white color, rigid material) to 1.0
(red color, soft material).
To evaluate the accuracy of multiple solutions, we send 50 com-
posite microstructures back to the cGAN model we proposed
in our previous work[39] to predict corresponding stress ﬁeld
maps. For each composite microstructure, we calculate the mean
squared error (MSE) of predicted stress values in the unmasked
region compared to the ground truth and then take the average
of MSE denoted as mean MSE over 50 solutions. The distribu-
tion of mean MSE across all 200 test data is shown in Figure 3e
which indicates the overall low errors as most of mean MSE val-
ues are below 0.01. Besides calculating the average error for 50
solutions, we also show more detailed statistics of two speciﬁc
examples in Figure 3f. In each example, common blocks shared
Adv. Mater. 2023, 2301449
2301449 (6 of 14)
© 2023 The Authors. Advanced Materials published by Wiley-VCH GmbH
 15214095, 0, Downloaded from https://onlinelibrary.wiley.com/doi/10.1002/adma.202301449 by Cochrane Canada Provision, Wiley Online Library on [07/05/2023]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

www.advancedsciencenews.com
www.advmat.de
by 50 solutions are given (Figure 3f) which are shown by red
and white blocks which indicate that those materials are neces-
sary for producing the target mechanical ﬁelds. By contrast, the
gray blocks are geometrical sections that can be diﬀerent in dif-
ferent solutions. Combined with probability maps, the method
can be implemented to design composite microstructures with
speciﬁc mechanical responses. Apart from the geometry statis-
tics, the error map obtained by subtracting the prediction from
the ground truth in the unmasked region and averaging over
50 solutions presents the local deviation of stress values in the
composites (Figure 3f). As the ﬁgure indicates, the major diﬀer-
ences of stress values are often witnessed at the interface between
soft and rigid materials and between masked and unmasked
regions.
2.5. Mechanical Field Completion for 3D Composites
In real-world engineering practice, 3D composite microstruc-
tures are often more complicated and of greater interest com-
pared to 2D cases. Therefore, in this section, we investigate a 3D
situation in which the strain and stress ﬁelds can be represented
by a stack of images. We denote each ﬁeld image within the stack
as a frame. In terms of the 3D mechanical ﬁeld completion task,
the input is part of the consecutive frames and the output is the
rest of them. We propose an approach built upon a Transformer-
based architecture and a CNN model to predict the complete
3D mechanical ﬁelds and further realize internal microstructure
characterization (Figure 4a). The approach we propose here can
be applied to practical inverse problems such as nondestructive
testing which requires internal structure identiﬁcation without
unpacking the whole material. To begin with, we randomly gen-
erate 2 × 4 × 4 (x × y × z) composite microstructures (2-layer
composite, the number of layers is counted along the loading di-
rection) to keep the number of blocks (32 blocks) same as 2D
case (Figure 1Sb, Supporting Information) and perform FEA cal-
culation to obtain the ground truth mechanical ﬁelds under the
uniaxial compression test along the x direction (Figure 1Sb, Sup-
porting Information). The obtained 3D ﬁelds are represented by
a 16 × 32 × 32 × 3 matrix in which 16 is the number of ﬁeld
frames, 32 is the size of the image and 3 corresponds to RGB
channels.
We ﬁrst utilize the ﬁrst 8 frames of 3D ﬁeld as input and train
a deep learning model to predict the rest 8 frames which is re-
garded as the benchmark test. Transformer-based models have
proved their power and generality in diverse tasks originally in
natural language processing,[49] further to computer vision.[50]
The deep learning model used here is modiﬁed based on the
Video Vision Transformer (ViViT),[51] an architecture similar to
the Vision Transformer,[50] but capable of working with videos.
We treat the 3D ﬁeld as a sequence of 2D ﬁeld images to dis-
tinguish the loading direction (x direction) from other two di-
mensions (y, z directions) which are perpendicular to the load-
ing condition. Although the original model deals with temporal
evolution of videos, the sequential models can also be extended
for capturing spatial relations. In addition, we replace the read-
out layers in the original ViViT model with a decoder for ﬁeld
frames prediction. The detailed model architecture and training
statistics are included in the Experimental Section.
Typical results of eight predicted stress ﬁeld frames (𝜎11) to-
gether with the ground truth are shown in Figure 4b. The results
show that modiﬁed ViViT model is able to take mechanical ﬁelds
of one layer in the composite (frame 1 to 8) and make accurate
predictions about ﬁelds in the other layer (frame 9 to 16). As the
ﬁgures indicate, for a 2-layer composite, the surface ﬁelds (ﬁrst
and last ﬁeld frames) are mainly aﬀected by one layer (top layer
for ﬁrst frame and bottom layer for the last frame) while the in-
terfacial ﬁeld (the middle frame) is aﬀected by both layers. To
quantify the error of predictions, we calculate the MSE for each
frame numbered from 9 to 16 for all 200 test data (Figure 4c).
The MSE of each data point is obtained by averaging the squared
diﬀerence of pixel values between predicted ﬁeld map and the
ground truth (See details about the metrics in Experimental Sec-
tion). The overall MSEs for all 8 predicted frames are low as the
mean MSE of any frame is below 0.001 which shows the excel-
lent performance of the ViViT model (Figure 4c). We also com-
pare the MSE of predictions with some baseline results such as
linear extrapolation to further demonstrate the accuracy as the
absolute values of MSE might not be intuitive enough to show
the precision (see Experimental Section). In addition, it is notice-
able that the error ﬁrst decreases and then increases when the
frame index increases, displaying peaks at the starting and end-
ing frames. The possible reason for the relatively higher error at
the starting frame (frame 9) is that the frame is at the interface of
two layers which is aﬀected by geometries of both layers, making
it diﬃcult for predictions. In terms of the peak at the end frame,
a likely explanation is that frame 16 is farthest from the input
frame, thus losing most information. Similar trends are found
for 4-layer composite microstructures in the later text which fur-
ther conﬁrms our thoughts.
With the predicted ﬁeld frames, the complete 3D mechanical
ﬁelds can be utilized to determine the microstructures of com-
posites. Similar as the 2D situation, a CNN model with 3D con-
volutional layers is trained to predict a sequence of soft and rigid
materials from the predicted 3D stress ﬁeld. The accuracy of the
CNN model is characterized again by the distribution of geome-
try diﬀerences (Figure 4c). As the ﬁgure shows, by combining the
modiﬁed ViViT model with a CNN model, we realize precise in-
ternal 3D microstructure identiﬁcation with most of the geome-
tries perfectly predicted (Figure 4c).
2.6. 3D Field Prediction for Multilayer Composites
To further explore the extended applications of our combined
deep learning models for 3D ﬁeld predictions, we here im-
plement the method on multilayer composite microstructures
frames and show that our framework can deal with complicated
microstructures. More speciﬁcally, we validate our approach on
4-layer composite microstructures (4 × 4 × 4) which lead to much
higher structural complexity than 2-layer composites (Figure 5a)
as the possible number of combinations grows in square order.
The dimensions of the composites and the shape of matrix repre-
senting the 3D ﬁeld are kept the same as the 2-layer case. Again,
the ﬁrst 8 stress ﬁeld frames (𝜎11) are used as input and the rest
8 frames are treated as output using the modiﬁed ViViT model.
As the ﬁgure manifests (Figure 5a), the compressive stress ﬁelds
of 4-layer composites are more uniform than 2-layer composites
Adv. Mater. 2023, 2301449
2301449 (7 of 14)
© 2023 The Authors. Advanced Materials published by Wiley-VCH GmbH
 15214095, 0, Downloaded from https://onlinelibrary.wiley.com/doi/10.1002/adma.202301449 by Cochrane Canada Provision, Wiley Online Library on [07/05/2023]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

www.advancedsciencenews.com
www.advmat.de
Figure 4. 3D case. a) Workﬂow of ﬁeld frame predictions and geometry identiﬁcation in 3D microstructure. The mechanical ﬁelds of 3D composites are
represented by a stack of ﬁeld maps. Given ﬁrst a few frames as input, a Transformer-based autoencoder is developed to predict the rest ﬁeld frames. With
the complete ﬁeld frames, a CNN model further enables the geometry identiﬁcation of 3D microstructures. b) Two examples of ﬁeld frame predictions
for two-layer composites. The ﬁrst 8 frames are utilized as input and the rest 8 frames are predicted by the deep learning model. c) Distribution of errors.
The violin plot shows the distribution of MSE of each predicted frame numbered from 9–16. The accuracy of geometry identiﬁcation is again revealed
by the distribution of geometry diﬀerences for 200 test data predicted by the CNN model.
due to the lower variation of geometries along the x direction.
More speciﬁcally, the standard deviation of the soft (or rigid) ma-
terial ratio of 4-layer composites (1∕16) is lower than that of 2-
layer composites (1∕8).
Visualization of two examples shows that our modiﬁed ViViT
model can predict the 3D ﬁeld of composites microstructures re-
gardless of the structural complexity (Figure 5a). The distribution
of MSE for the predicted frames shows high accuracy of the pre-
diction as the mean MSE of any frame is also below 0.001(Fig-
ure 5b). Furthermore, the errors with respect to diﬀerent frame
indices show a similar trend as the 2-layer case: the frames at the
interfaces between diﬀerent layers such as frames 9, 12, 13 ex-
hibit higher errors and the mean MSE generally increases as the
frame index increases. These results are consistent with the ob-
servations in previous two-layer case, further proving our reason-
ing about MSE variation for diﬀerent frames. With the predicted
3D ﬁeld, geometry identiﬁcation can also be performed for the
4-layer composites by training a CNN model with an output se-
quence length of 64. The distribution of geometry diﬀerences for
all 200 test data are shown in Figure 5c.
2.7. From Surface to Bulk Field
In all the training and testing processes mentioned above, the
number of input ﬁeld frames is 8 and the number of output ﬁeld
Adv. Mater. 2023, 2301449
2301449 (8 of 14)
© 2023 The Authors. Advanced Materials published by Wiley-VCH GmbH
 15214095, 0, Downloaded from https://onlinelibrary.wiley.com/doi/10.1002/adma.202301449 by Cochrane Canada Provision, Wiley Online Library on [07/05/2023]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

www.advancedsciencenews.com
www.advmat.de
Figure 5. Extensions of the proposed framework for the 3D case. a) Field frame predictions for more complicated microstructures. Here, we test the
Transformer-based model on the 3D 4-layer composites. The number of layers is counted along the loading condition. b) MSE distributions for each
predicted frame from 9–16. c) Geometry diﬀerence distribution predicted by the CNN model using predicted frames combined with input frames for
4-layer composites. d) Field frame predictions with varying number of input frames. The numbers of input frames are set to be 1, 2, 4, 8 and the
corresponding numbers of output frames are 15, 14, 12, 8. e) Error distributions of predicted frames by models trained with diﬀerent numbers of input
frames. The error is calculated using mean MSE over last 8 predicted frames for comparison. f) Geometry diﬀerence distributions for models trained
with diﬀerent numbers of input frames.
frames is also 8. In other words, half of the information in the
bulk ﬁeld is utilized for predicting the complete 3D mechanical
ﬁelds. However, in the practical engineering analysis, engineers
often can only obtain responses at the boundary of a material
such as the displacement at the surface. Therefore, it is important
to realize predictions of 3D bulk ﬁelds from 2D surface informa-
tion. To validate our modiﬁed ViViT model on the task, we vary
the number of input frames to examine whether the approach
still applies with less information given to the model (Figure 5d).
The numbers of input frames are chosen to be 1, 2 and 4, and con-
sequently, the corresponding numbers of output frames are 15,
14 and 12. The modiﬁed ViViT models are adapted based on the
lengths of input and output frames (detailed model architectures
are discussed in Experimental Section & Table S1 of Supporting
Information).
To compare the results of diﬀerent models trained with diﬀer-
ent numbers of input ﬁeld frames, we calculate the mean MSE
for the last 8 predicted frames which are shared by all predictions
(Figure 5e). As shown in the ﬁgure (Figure 5e), the mean errors
across the whole test set are 0.00039, 0.00044, 0.00047, 0.00053
for 8, 4, 2, 1 input frames respectively. The errors increase as less
input information is given. However, with 7 times less informa-
tion, the MSE only increases less than 36% and the errors are
generally low (below 0.001), which indicates that even with single
input frame, the deep learning model is still able to capture the
3D stress distribution precisely. In addition, the distribution of
geometry diﬀerence also shows similar results (Figure 5f). Nev-
ertheless, it should be noted that outliers are more likely to be wit-
nessed with less input information (Figure 5e,f). Despite that, the
proposed approach does show great power in both 3D mechan-
ical ﬁeld predictions and internal microstructure identiﬁcations
with only boundary measurement given as the input.
3. Conclusions
Motivated by the challenge of dealing with limited amount of
available information in engineering science, we here proposed
deep learning-based approaches to realize predictions of the com-
plete strain or stress ﬁelds given partial information and fur-
ther build the inverse linkage from mechanical behaviors back to
structures. To demonstrate the capacity of the proposed frame-
works, we investigate heterogeneous composite microstructures
under both 2D plane strain and 3D bulk cases. The prediction
results and extended applications show great performances and
excellent extensibility of the approach we develop, providing new
solutions and perspectives in addressing inverse problems. In
terms of practical engineering problems which require defect de-
tection based on boundary signals received during the measure-
ments, our problem can be applied directly by treating defects
as the heterogenous material inside the composites and utilizing
the received boundary response as the input information.
Compared to conventional numerical simulations which of-
ten struggle with solving inverse problems, our approach real-
izes both mechanical ﬁeld completion and composite microstruc-
ture identiﬁcation. The mechanical ﬁeld prediction is a chal-
lenging inverse task as the boundary conditions which are the
given ﬁelds are highly complicated. As a result, the deep learn-
ing models need to learn to make predictions that follow not
only the governing equations within the masked region but also
the complicated boundary constraints out of the masked region.
Furthermore, unlike physics-constrained ML-based approaches
such as PINNs[52] which impose physics directly to the model,
our approach does not require any prior knowledge which can
be especially useful for engineering systems without known gov-
erning laws. The image representation we utilize enables us to
Adv. Mater. 2023, 2301449
2301449 (9 of 14)
© 2023 The Authors. Advanced Materials published by Wiley-VCH GmbH
 15214095, 0, Downloaded from https://onlinelibrary.wiley.com/doi/10.1002/adma.202301449 by Cochrane Canada Provision, Wiley Online Library on [07/05/2023]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

www.advancedsciencenews.com
www.advmat.de
encode rich information, thus dealing with composites with high
structural complexity which would otherwise be troublesome for
simple ML algorithms. In terms of broader generalization to out-
of-distribution datasets, we believe that there are several useful
techniques that can be implemented, including transfer learn-
ing and active learning. In this work, to demonstrate the ap-
proach, we implement transfer learning for 2D mechanical ﬁeld
completion, starting from a large pretrained model. The mod-
els we have trained in this work can further be used as starting
checkpoints for other tasks, especially mechanics-related prob-
lems. More speciﬁcally, we utilize our DeepFill model pretrained
on elastic mechanical ﬁelds (𝜎11, Figure 2) to further train for
completing plastic mechanical ﬁelds (𝜎von, Figure S7a, Support-
ing Information). Compared to training from scratch or transfer
learning from models trained on a large image dataset, our pre-
trained model allows much faster convergence and higher accu-
racy, as shown in Figure S9 (Supporting Information). As for ac-
tive learning, one previous study[53] has shown that the strategy
enabled an eﬃcient search for superior composites beyond the
initial domain of training data which can also be implemented to
our framework.
In this study we paid special attention to models’ predictions
when the little input information is provided. The limited level
of input information generally leads to ill-posed inverse prob-
lems in which multiple solutions are available. For instance, in
the 2D plane strain case, we show that by splitting the datasets,
we can train a set of deep learning models to propose multiple ge-
ometrical solutions which correspond to similar boundary ﬁelds.
The framework provides promising methodologies to deal with
the one-to-many scenario in ill-posed inverse problems. How-
ever, in the 3D case, we reveal that with less input ﬁeld infor-
mation, the performances and predictions of our deep learning
models do not vary a lot which indicates the problem is likely to
be well-posed. The well-posedness allows us to recover the com-
plete 3D mechanical ﬁelds from only 2D surface responses us-
ing our DL approaches. To better evaluate the ill-posedness for
the 3D case, we train multiple models with split datasets as well.
In order to obtain a conceivably ill-posed problem, only surface
ﬁeld (the ﬁrst ﬁeld frame) is used as input for training models.
By plotting the distribution of geometry variation for all test data
(Figure S9b, Supporting Information), we reveal that for 3D com-
posites, there is only one single solution in most test cases (zero
geometry variation) while most 2D composites can have multiple
microstructures which lead to similar boundary ﬁelds. These ex-
amples show that our deep-learning-based approaches can be a
potential methodology of exploring the uniqueness of solutions
and propose corresponding solution sets for the inverse prob-
lems.
The current approaches proposed in this work can also be im-
plemented for inverse design problems. Compared to designing
a single function, the proposed methods can deal with more del-
icate materials responses which can be input similarly as the
partial ﬁeld information to the deep learning models to obtain
the corresponding materials structures. For instance, by com-
bining our method with optimization algorithms, we can itera-
tively search for promising candidates that provide most simi-
lar boundary responses as the target. Experimental techniques
such as additive manufacturing can be useful for printing real
samples of designs proposed from the computational framework.
In terms of measuring materials responses in real-world appli-
cations, based on the type of received signals, approaches such
as Digital Image Correlation (DIC) or ﬂowmeters can be imple-
mented. Last but not the least, here we used solid mechanics as a
benchmark area for proof of concept of our framework. However,
the method reported in this paper should not be limited to the
current example but can be extended to diverse applications in-
cluding biomedical imaging, damage characterization, ﬂuid dy-
namics and other engineering disciplines. For instance, the mi-
croscopic images often contain random damaged region which
can possibly be recovered using the proposed method. In addi-
tion, our approach could be easily applied to the other physical
ﬁelds such as optical, electrical and velocity ﬁelds, serving as a
general method for diﬀerent engineering problems.
4. Experimental Section
Finite Element Analysis (FEA):
In the 2D case, data generation process
using FEA closely followed the previous works[39,40] in which a symmetric
8 × 8 grid was used for creating the composite geometry (232 possible ge-
ometries). 1000 diﬀerent composite microstructures were randomly gen-
erated for the uniaxial tensile test. All the calculations of FEA were per-
formed using a commercial ABAQUS/Explicit code (Dassault Systemes
Simulia Corp., 2010). Two linear elastic solids with diﬀerent Young’s mod-
uli were randomly distributed in the grid to form the geometry. The se-
lection of mechanical properties of both rigid and soft materials (Young’s
modulus, Poisson’s ratio and mass density) and the loading conditions
(uniaxial tension test with amplitude of tensile strain being 10%) were
same as those in.[40] The details of FEA such as mesh size, element type
and other parameters were also consistent with the previous works. In
terms of the plastic case, the “crushable foam” model in Abaqus was uti-
lized for both soft and rigid models with foam hardening. The elastic re-
gion of plastic materials was same as the linear case. More detailed pa-
rameters could be found in previous work.[39]
In the 3D case, 2 × 4 × 4 grid was utilized for 2-layer microstructures
(232 possible geometries) and 4 × 4 × 4 grid was implemented for 4-layer
composites (264 possible geometries). The reason why a 2 × 4 × 4 grid
was chosen as benchmark was to keep the number of possible geome-
tries same as the 2D case (Figure 1Sb, Supporting Information). For all 3D
composite microstructures (both 2-layer or 4-layer situation), the dimen-
sions of x, y, and z directions were 160, 320, and 320 (unitless) respectively.
2000 diﬀerent geometries were randomly generated for FEA calculations.
Uniaxial compression test along the x direction was performed with the
amplitude of the strain being 5%. The element type is “C3D8R” and the
element size was set to be 10 for meshing which lead to 16 × 32 × 32
elements. Strain and stress values at each element were collected, form-
ing a 16 × 32 × 32 matrix. Isotropic solids were used for both rigid and
soft materials and the mechanical properties including Young’s modulus,
Poisson’s ratio and the mass density were set same as the 2D case for
consistence.
Data Processing:
In the 2D case, the strain and stress ﬁeld maps from
the FEA calculations were generated using Abaqus Visualization tool with
a white-to-red color bar (Figure 1). The ﬁeld maps printed from Abaqus
were further preprocessed by python codes to cut, resize and recolor as
demonstrated in the previous work.[40] The image size after preprocess-
ing was 256 × 256 and the stress values were normalized with red color
corresponding to 1 and white color corresponding to 0. In terms of the
composite geometry map or microstructure, the red blocks were soft ma-
terials while the white blocks were rigid materials.
To generate training data with missing information for 2D ﬁeld maps,
combined regular and irregular shapes of masks were introduced to the
ﬁeld maps.[42] The regular mask was in the shape of a square with a size
ranging from 96 to 128. The irregular mask consisted of 4 to 36 random
brush strokes which had a width from 12 to 40, an angle about the x-axis
Adv. Mater. 2023, 2301449
2301449 (10 of 14)
© 2023 The Authors. Advanced Materials published by Wiley-VCH GmbH
 15214095, 0, Downloaded from https://onlinelibrary.wiley.com/doi/10.1002/adma.202301449 by Cochrane Canada Provision, Wiley Online Library on [07/05/2023]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

www.advancedsciencenews.com
www.advmat.de
from 48○to 96○and a length from 0 to 90. The angle and length were both
uniformly distributed within the range while the distribution of lengths
followed a Gaussian distribution with a mean value of 45 and a standard
deviation of 22.5. All the units mentioned above were based on the pixel
number. The details of free-form mask generation could be found in the
original paper of DeepFill model.[42] To test the performance of trained
model, four diﬀerent masks were utilized including square, triangle, circle
and random strokes (Figure 2b). For consistence, areas of all the masks
were set to be close to 1282.
In the section of generalization validation, the Mechanical MNIST
Cahn–Hilliard dataset[47] was utilized to examine the models’ perfor-
mances on continuous microstructures. The dataset contained 104813 2D
heterogeneous patterns in total with 3 diﬀerent types of structures which
was often used for benchmarking ML tasks in mechanics. One type of the
structures (37 523 patterns) was chosen with continuous phase structures
and every 20 patterns were sampled to avoid similar microstructures. The
ﬁnal dataset contained 1877 diﬀerent patterns and their corresponding
displacement ﬁelds under biaxial tensile tests were collected. To obtain
the strain ﬁeld (𝜖11) from the displacement ﬁeld, the strain–displacement
relations were leveraged:
𝜀11 = 𝜕u1
𝜕x
(1)
where u1 is the displacement ﬁeld along x direction. The dataset was then
split into training set (1500 data) and test set (377 data). Both geometries
of patterns and corresponding strain ﬁelds were stored in 64 × 64 matrices
which were further represented using 64 × 64 images. Given the image
size, the total number of pixels in a geometry image was 4096 which was
used for calculating the geometry diﬀerence.
In the 3D case, the strain and stress values were collected at each ele-
ment and then normalized which resulted in a 16 × 32 × 32 × 1 matrix. The
matrix was then utilized to visualize the strain and stress ﬁeld contours
using Python codes similarly as the 2D case. The stack of ﬁeld images
was stored in a 16 × 32 × 32 × 3 matrix with the RGB channel which was
used as data representation for training and testing deep learning models.
The corresponding 3D composite microstructures (Figure S1b, Support-
ing Information) were visualized using a volumetric plot via the Matplotlib
library.[54]
Deep Learning Architectures and Implementation:
Multiple deep learn-
ing architectures were utilized in this work including GAN, CNN, CAE and
Transformer-based models. This section explains the mechanisms of dif-
ferent DL models and provides information about the model architectures
and implementation details such as hyperparameter selection and training
statistics.
The cGAN model implemented for completing 2D ﬁeld map was known
as the 2nd version of “DeepFill” model that allowed free-form image
inpainting.[42] The DeepFill model consisted of a Generator and a Dis-
criminator with gated convolution that yielded better image inpainting
results, with a learnable dynamic feature selection mechanism for each
channel and each spatial location. The Generator contained a coarse and
a reﬁnement network. The coarse network which was implemented with
an encoder-decoder architecture took the concatenated channels of both
the image to be recovered and the mask as the input and ﬁrst provided
a coarsely ﬁlled image. The coarse result was then further passed to the
reﬁnement network which utilized two branches with contextual attention
to reﬁne the generated image.
Contextual attention was used, leveraging the power of attention mech-
anism for capturing distant features that could be diﬃcult for pure con-
volutional architectures. As the masks could cover a large region, it was
necessary for the model to capture the correlation between distant spatial
locations. Furthermore, the SN-PatchGAN Discriminator utilized a patch-
based loss and spectral normalization to evaluate the image candidates
generated by the Generator. The idea of patch-based loss was basically
comparing a generated image with the ground truth image patch by patch
so that local textures could be better evaluated. Spectral normalization[55]
was applied to stabilize the training of GAN model. The channel number
was set to be 48 for the Generator and 64 for the Discriminator (same as
in[42]). The Generator and Discriminator were trained simultaneously and
competitively to realize the completion of images with free-form masks.
A pretrained model based on the Places dataset was utilized to accel-
erate the training with transfer learning. The Places dataset contained 2.5
millions of scene images, covering more than 205 scene categories.[46]
Starting from the pretrained model, the DeepFill model was further trained
for 50 000 iterations (≈1000 epochs) with a batch size of 16. As for train-
ing with hierarchical composite geometries, 1125 data points in total were
selected to keep the number of data similar as the non-hierarchical case
with each hierarchy containing 375 data (8 × 8, 16 × 16, 32 × 32). The
non-hierarchical dataset consisted of 1000 data in 16 × 16 grids. The rea-
son why the original model trained on 8 × 8 composites was not used for
non-hierarchical situation is that the upscale hierarchy for testing would
then be 2 × 2 composites which only have limited numbers of possible ge-
ometries. The same split ratio was used for generating train and test sets
(80% for training, 20% for testing). Both hierarchical and non-hierarchical
models were trained in the same way as mentioned above. The ML calcu-
lation was performed using PyTorch[56] and the training was parallelized
on 2 NVIDIA Tesla V100 GPU cores each with 32GB memory.
To evaluate dependency of the model’s performance on the data quan-
tity, the number of data used to train the DeepFill model was varied. The
stress ﬁeld completion (𝜎11) was selected as the benchmark task. As for
training, all models were trained for 1000 epochs and the batch size was
set to be same (= 16) except for the situation when a single data was used
for training. The ﬁnal R2s with respect to diﬀerent numbers of training data
are shown in Figure S10 (Supporting Information). As the ﬁgure indicates,
with less than 100 data, the model already converged to a high accuracy
beyond 0.99. Even given one data, the R2 value reached around 0.88. The
results showed that the model can realize precise predictions with a small
amount of data which allowed eﬃcient implementation for new scenarios.
In terms of training models for one-to-many scenario, the dataset was
split into 50 subsets which each contained 160 randomly selected data
(800 data in the whole training dataset). The reason why split datasets were
utilized to train diﬀerent models was to include randomness for propos-
ing multiple solutions. Although the original GAN model known as an
unsupervised technique could generate diﬀerent image candidates from
diﬀerent random noises, the cGAN approach implemented was strongly
constrained by the input-masked images which made the model more su-
pervised learning, thus allowing less randomness for sampling possible
solutions. To demonstrate, the probability maps of 50 solutions proposed
by models trained on the complete and split datasets were compared (Fig-
ure S11a, Supporting Information). The ﬁgure showed that the DeepFill
model once trained fell into certain local minimum as it always proposed
the same solution given diﬀerent random seeds for predictions. By con-
trast, the models trained on the split datasets generated diﬀerent solu-
tions. Apart from the probability maps, results of MSE also showed the
same phenomenon (Figure S11b, Supporting Information) shown by the
distinct wide (split dataset) and sharp distributions (complete dataset).
For 3D ﬁeld frame predictions, the ViViT model was adapted which
was purely built based on Transformer architectures. The ViViT model ﬁrst
extracted spatio-temporal tokens from input image frames which were
then encoded by a series of Transformer layers.[51] Tubelet embedding
was utilized for tokenization which extracted non-overlapping “tubes” (like
patches for image) from the input video. Besides token embedding, a posi-
tional embedding was implemented to encode positional information. The
combined embeddings were then passed to a Transformer block which uti-
lized the spatio-temporal attention oﬀered by the original paper.[51] Finally,
in order to predict the ﬁeld image frames, the output was passed from the
Transformer block to a decoder network which consisted of a reshape layer,
a 3D transposed convolutional layer and multiple 3D convolutional layers.
The code was written based on the Keras code example for ViViT model[57]
and details about model architecture except the custom decoder network
could be found in the example. In terms of hyperparameter selection, hy-
perparameters included the number of Attention heads (8), the number of
Transformer layers (8) and the projection dimension for Tubelet embed-
ding (256) were set the same in all modiﬁed ViViT models. The batch size
was set to be 64 and the training lasted for 100 epochs at most with early
stopping applied. Other variables for diﬀerent models in diﬀerent cases
Adv. Mater. 2023, 2301449
2301449 (11 of 14)
© 2023 The Authors. Advanced Materials published by Wiley-VCH GmbH
 15214095, 0, Downloaded from https://onlinelibrary.wiley.com/doi/10.1002/adma.202301449 by Cochrane Canada Provision, Wiley Online Library on [07/05/2023]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

www.advancedsciencenews.com
www.advmat.de
are listed in Table S1 (Supporting Information). The training and testing
were performed on 1 NVIDIA Tesla V100 GPU core with 32GB memory.
The models mentioned above were used for completing mechanical
ﬁelds. With complete mechanical ﬁelds, CNN models were utilized for
building the inverse linkage from mechanical behaviors back to compos-
ite microstructures. The CNN model utilized for 2D geometry identiﬁca-
tion took the complete ﬁeld map (256 × 256) as input and predicted a
sequence of soft (“0” in the sequence) and rigid materials (“1” in the se-
quence) which corresponded to the composite microstructure. The model
consisted of ﬁve 2D convolutional layers each followed by a max pool-
ing layer and a readout two-layer perceptron (MLP) was attached at the
end. The kernel size was 3 and the pool size was 2 for all dimensions. The
numbers of output ﬁlters for ﬁve convolutional layers were 32, 64, 128, 64,
32 and the hidden dimension of ﬁrst layer in MLP was 128 followed by a
dropout layer with 20% (𝜎11) or 30% (𝜖11) dropping probability. The train-
ing lasts for 100 epochs with a batch size of 32 and early stopping was
activated. The learning curves for strain and stress cases in both elastic
and plastic cases are shown in Figure S12a–c (Supporting Information).
As for the Cahn–Hilliard patterns, a CAE model was implemented which
replaced the MLP layers in CNN models with a decoder to output the cor-
responding geometry images instead of sequences. The encoder in the
CAE model consisted of four 2D convolutional layers each followed by a
max pooling layer except the input layer. The numbers of ﬁlters for each
layer were 32, 128, 512, 128 consecutively. The kernel size and pool size
were same as the CNN models. In terms of the decoder, it was symmetri-
cal to the encoder with three 2D transposed convolutional layers followed
by one 2D convolutional layer. The numbers of ﬁlters were 128, 512, 128
and 32. Finally, a 2D convolutional layer was attached at the end to align
with the dimensions of output. The training lasted for 200 epochs at most
using a batch size of 128 with early stopping. The learning curve is given
in Figure S12d (Supporting Information).
In terms of 3D geometry identiﬁcation, the 3D convolutional layers and
max pooling layers were utilized instead. For 2-layer microstructures, the
number of convolutional layers was 4 with 32, 64, 64, 32 ﬁlters for consecu-
tive layers while the model for 4-layer microstructures had 5 convolutional
layers with 64, 128, 128, 128, 64 ﬁlters. The readout MLPs for 2-layer and
4-layer microstructures were also diﬀerent. The former contained two lay-
ers with a hidden dimension of 256 and the probability of dropout was
set to be 0.1, whereas the latter consisted of three dense layers and hid-
den dimensions for 1st and 2nd layers were 1024 and 256. In terms of the
rate of dropout layer, it was set to be 0.2 for the 4-layer microstructures.
During training, the maximum number of epochs was 200 and batch sizes
were 32 and 64 for 2-layer and 4-layer cases separately. The corresponding
learning curves were plotted in Figure S12e,f (Supporting Information). A
single NVIDIA Quadro RTX 5000 (16GB) GPU core was utilized to train all
convolutional models.
For translation from surface to bulk ﬁelds in 3D composites, the ill-
posedness of the problem was also evaluated by training multiple mod-
els (50 models) on split datasets. The number of randomly selected data
in each subset was 320 (20% of complete training set). Once trained,
all models ﬁrst predicted the complete 3D mechanical ﬁelds and one
CNN model took the recovered ﬁelds as input and predicted the corre-
sponding geometry sequences of composites. Two examples were shown
of probability maps given 50 solutions proposed by models trained on
diﬀerent subsets (Figure S9a, Supporting Information): one was a well-
posed case in which all models propose same solution; the other was
an ill-posed case with diﬀerent solutions from diﬀerent models. To eval-
uate the ill-posedness across the test dataset, the geometry variation
was calculated which was deﬁned as the standard deviation of values
(0s and 1s for soft and rigid materials) in a geometry sequence aver-
aged across 50 solutions. As a result, higher geometry variation corre-
sponded to higher ill-posedness. As Figure S9b (Supporting Informa-
tion) suggests, for 3D composites with surface ﬁelds as the input, most
of test cases were well-posed while 2D composites showed opposite
results.
Performance Evaluation:
In terms of completing 2D mechanical ﬁeld
maps, the mean predicted strain or stress values in the masked region
were compared with the actual values across the test dataset. The coeﬃ-
cient of determination R2 was calculated based on the following expres-
sion:
R2 = 1 −
∑(yML
i
−yFEA
i
)2
∑(
yFEA
i
−yFEA
)2
(2)
in which yML
i
is the mean value of predicted strain or stress values in the
masked region for ith data/composite (i = 1, …, 200), yFEA
i
is the corre-
sponding observed data and yFEA is the mean observed value with respect
to all test data. All the strain and stress values were normalized to values
between 0 and 1. Apart from using mean strain/stress values as evalua-
tion metrices, the correlation was also shown between all predicted and
actual strain/stress values by collecting all pixel values in masked regions
for all 200 test composites. To avoid taking the background frame (black
color at the boundary of ﬁeld maps) into consideration, strain/stress val-
ues were collected from regions that were at least 10 pixels away from the
image edges. In the case when models trained on hierarchical and non-
hierarchical geometries were compared, R2s were calculated for masked
values in each test composite and the distribution of correlations was then
plotted.
For ﬁeld frame predictions in 3D composite microstructures, MSEs
were calculated either for one or multiple ﬁeld frames. The MSE calculated
for a single frame for one composite follows the formula below:
MSE =
1
322
∑32
i = 1
∑32
j = 1
∑3
k = 1
(
yML
i,j,k,l −yFEA
i,j,k,l
)2
(3)
in which yML
i,j,k,l is the kth (k = 1, 2, 3) channel value for the pixel (i,j) in the
predicted ﬁeld frame l. l is the frame index and the channels refer to RGB
channels whose values are normalized to [0,1] for each channel. The pixel
(i,j) is the pixel in the ith row and jth column of a ﬁeld map. yFEA
i,j,k is the
corresponding actual pixel value obtained from FEA. When mean MSE is
used in the text, the metric refers to the mean value calculated by taking
the average of the MSE for multiple frames (8 frames in our case).
However, the MSE values were often not as straightforward as met-
rics such as accuracy or R2 which directly indicated the performance of
a model. Therefore, R2 of predicted and actual stress values within a
composite for all test data was also calculated. Given that the input ﬁeld
frames could be similar as the output, the latest input ﬁeld frame was
subtracted from the output frames before calculating the correlation. The
distributions of R2 values were plotted based on stress ﬁeld frame predic-
tions for both 2-layer (Figure S13a, Supporting Information) and 4-layer
(Figure S13b, Supporting Information) composite microstructures which
again proved the high accuracy of the models. The accuracy variations at
diﬀerent frames showed same trends as the MSE metric (Figures 4c & 5b)
in both cases, revealing the consistency of the results.
To further evaluate the performances, the MSE of predictions was com-
pared with some baseline results. Two baseline approaches were utilized:
one was by comparing the ground truth frame with its neighboring frame
(previous frame) as the neighboring frames were similar to each other;
the other was by implementing a simple linear extrapolation using the two
frames before the target frame. The two baseline MSEs for frame l of one
data are deﬁned as follows:
MSE1 =
1
322
∑32
i=1
∑32
j=1
∑3
k=1
(
yFEA
i,j,k,l −yFEA
i,j,k,l−1
)2
(4)
MSE2 =
1
322
∑32
i=1
∑32
j=1
∑3
k=1
(
yFEA
i,j,k,l −2 ∗yFEA
i,j,k,l−1 + yFEA
i,j,k,l−2
)2
(5)
The baseline MSEs compared to the predictions are shown in Fig-
ure S14 (Supporting Information). The mean MSE value over 8 ﬁeld
frames (from 9 to 16) was used for comparison and the distributions were
given across the whole test dataset. The lower mean value and standard
Adv. Mater. 2023, 2301449
2301449 (12 of 14)
© 2023 The Authors. Advanced Materials published by Wiley-VCH GmbH
 15214095, 0, Downloaded from https://onlinelibrary.wiley.com/doi/10.1002/adma.202301449 by Cochrane Canada Provision, Wiley Online Library on [07/05/2023]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

www.advancedsciencenews.com
www.advmat.de
deviation indicated that the predictions of deep learning models were non-
trivial and much better than both baseline approaches.
In terms of evaluating geometry diﬀerence, it is calculated by ﬁrst count-
ing the number of diﬀerent blocks (diﬀerent pixels for Cahn–Hilliard pat-
terns) between predictions and ground truth and further normalizing the
diﬀerence by the total number of blocks (total number of pixels for Cahn–
Hilliard patterns). For composites, the numbers of blocks were 32 (2D and
3D 2-layer composites) and 64 (3D 4-layer composites). For Cahn–Hilliard
patterns, the number of pixels was 4096 given a 64 × 64 geometry image.
Supporting Information
Supporting Information is available from the Wiley Online Library or from
the author.
Acknowledgements
The authors acknowledge support by the Army Research Oﬃce
(W911NF1920098) and AFOSR-MURI (FA9550-15-1-0514). The authors
acknowledge support from the GoogleCloud platform and MIT Quest for
providing computational resources and other support.
Conﬂict of Interest
The authors declare no conﬂict of interest.
Data Availability Statement
All data and codes used for this study can be found at: https://github.com/
lamm-mit/FieldCompleter.
Keywords
crystalline solids, defects, machine learning, materials, nanomechanics,
simulations
Received: February 14, 2023
Published online:
[1] J. Otegui, Failure Analysis: Fundamentals and Applications in Mechani-
cal Components, Springer, New York, 2013.
[2] C. J. Hellier, Handbook of Nondestructive Evaluation, Second Edition,
McGraw-Hill Education, New York, 2013.
[3] T. Takiguchi, in Inverse Problems in Engineering Mechanics (Eds.: M.
Tanaka, G. S. Dulikravich), Elsevier Science Ltd, Oxford, UK, 1998,
pp. 153–336.
[4] M. P. Bendsoe, O. Sigmund, Topology Optimization: Theory, Methods,
and Applications, Springer, Berlin/Heidelberg, Germany, 2003.
[5] S. Dalela, P. S. Balaji, D. P. Jena, Mech. Adv. Mater. Struct. 2022, 29,
3237.
[6] K. Bertoldi, V. Vitelli, J. Christensen, M. van Hecke, Nat. Rev. Mater.
2017, 2, 17066.
[7] A. L. Bukhgeim, J. Cheng, M. Yamamoto, in Inverse Problems in Engi-
neering Mechanics (Eds.: M. Tanaka, G. S. Dulikravich), Elsevier Sci-
ence Ltd, Oxford, UK, 1998, pp. 327.
[8] E. Turco, Eur. J. Environ. Civ. Eng. 2017, 21, 509.
[9] Y. Lecun, Y. Bengio, G. Hinton, Nature 2015, 521, 436.
[10] G. Carleo, I. Cirac, K. Cranmer, L. Daudet, M. Schuld, N. Tishby, L.
Vogt-Maranto, L. Zdeborová, Rev. Mod. Phys. 2019, 91, 45002.
[11] K. Guo, Z. Yang, C. H. Yu, M. J. Buehler, Mater. Horiz. 2021, 8,
1153.
[12] J. Wang, Y. Wang, Y. Chen, Materials 2022, 15, 1811.
[13] A. Voulodimos, N. Doulamis, A. Doulamis, E. Protopapadakis, Com-
put. Intell. Neurosci. 2018, 2018, 7068349.
[14] J. Hirschberg, C. D. Manning, Science 2015, 349, 261.
[15] T. P. Nagarhalli, V. Vaze, N. K. Rana, in 2021 Third Int. Conf. on
Intelligent Communication Technologies and Virtual Mobile Networks
(ICICV), IEEE, Piscataway, NJ, USA 2021, pp. 1529–1534.
[16] A. B. Nassif, I. Shahin, I. Attili, M. Azzeh, K. Shaalan, IEEE Access
2019, 7, 19143.
[17] L. Deng, G. Hinton, B. Kingsbury, in 2013 IEEE Int. Conf. on Acous-
tics, Speech and Signal Processing, IEEE, Piscataway, NJ, USA 2013,
pp. 8599–8603.
[18] J. Jumper, R. Evans, A. Pritzel, T. Green, M. Figurnov, O. Ronneberger,
K. Tunyasuvunakool, R. Bates, A. Žídek, A. Potapenko, A. Bridg-
land, C. Meyer, S. A. A. Kohl, A. J. Ballard, A. Cowie, B. Romera-
Paredes, S. Nikolov, R. Jain, J. Adler, T. Back, S. Petersen, D. Reiman,
E. Clancy, M. Zielinski, M. Steinegger, M. Pacholska, T. Bergham-
mer, S. Bodenstein, D. Silver, O. Vinyals, et al., Nature 2021, 596,
583.
[19] M. Baek, F. DiMaio, I. Anishchenko, J. Dauparas, S. Ovchinnikov, G.
R. Lee, J. Wang, Q. Cong, L. N. Kinch, R. D. Schaeﬀer, C. Millán, H.
Park, C. Adams, C. R. Glassman, A. DeGiovanni, J. H. Pereira, A. V.
Rodrigues, A. A. van Dijk, A. C. Ebrecht, D. J. Opperman, T. Sagmeis-
ter, C. Buhlheller, T. Pavkov-Keller, M. K. Rathinaswamy, U. Dalwadi,
C. K. Yip, J. E. Burke, K. C. Garcia, N. V. Grishin, P. D. Adams, et al.,
Science 2021, 373, 871.
[20] J. A. Nichols, H. W. Herbert Chan, M. A. B. Baker, Biophys. Rev. 2019,
11, 111.
[21] J. Vamathevan, D. Clark, P. Czodrowski, I. Dunham, E. Ferran, G. Lee,
B. Li, A. Madabhushi, P. Shah, M. Spitzer, S. Zhao, Nat. Rev. Drug
Discovery 2019, 18, 463.
[22] G. C. Y. Peng, M. Alber, A. Buganza Tepole, W. R. Cannon, S.
De, S. Dura-Bernal, K. Garikipati, G. Karniadakis, W. W. Lytton, P.
Perdikaris, L. Petzold, E. Kuhl, Arch. Comput. Methods Eng. 2021, 28,
1017.
[23] O. T. Unke, S. Chmiela, H. E. Sauceda, M. Gastegger, I. Poltavsky,
K. T. Schütt, A. Tkatchenko, K.-R. Müller, Chem. Rev. 2021, 121,
10142.
[24] Z. Yang, M. J. Buehler, npj Comput. Mater. 2022, 8, 198.
[25] Y.-C. Hsu, Z. Yang, M. J. Buehler, APL Mater. 2022, 10, 41107.
[26] Z. Yang, M. J. Buehler, Small Methods 2022, 6, 2200537.
[27] Z. Yang, M. J. Buehler, Front. Mater. 2021, 8, 740754.
[28] G. E. Karniadakis, I. G. Kevrekidis, L. Lu, P. Perdikaris, S. Wang, L.
Yang, Nat. Rev. Phys. 2021, 3, 422.
[29] M. Raissi, P. Perdikaris, G. E. Karniadakis, J. Comput. Phys. 2019, 378,
686.
[30] T. E. Smidt, Trends Chem. 2021, 3, 82.
[31] I. E. Lagaris, A. Likas, D. I. Fotiadis, IEEE Trans. Neural Networks 1998,
9, 987.
[32] F. E. Bock, R. C. Aydin, C. J. Cyron, N. Huber, S. R. Kalidindi, B. Kluse-
mann, Front. Mater. 2019, 6, 110.
[33] S. L. Brunton, B. R. Noack, P. Koumoutsakos, Annu. Rev. Fluid Mech.
2020, 52, 477.
[34] K. J. Bergen, P. A. Johnson, M. V. de Hoop, G. C. Beroza, Science 2019,
363, eaau0323.
[35] G. Karagiorgi, G. Kasieczka, S. Kravitz, B. Nachman, D. Shih, Nat.
Rev. Phys. 2022, 4, 399.
[36] C.-H. Yu, Z. Qin, M. J. Buehler, Nano Futures 2019, 3, 035001.
[37] B. Sanchez-Lengeling, A. Aspuru-Guzik, Science 2018, 361, 360.
[38] V. Mlinar, Ann. Phys. 2015, 527, 187.
[39] Z. Yang, C.-H. Yu, M. J. Buehler, Sci. Adv. 2022, 7, eabd7416.
Adv. Mater. 2023, 2301449
2301449 (13 of 14)
© 2023 The Authors. Advanced Materials published by Wiley-VCH GmbH
 15214095, 0, Downloaded from https://onlinelibrary.wiley.com/doi/10.1002/adma.202301449 by Cochrane Canada Provision, Wiley Online Library on [07/05/2023]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

www.advancedsciencenews.com
www.advmat.de
[40] Z. Yang, C.-H. Yu, K. Guo, M. J. Buehler, J. Mech. Phys. Solids 2021,
154, 104506.
[41] C.-H. Yu, B.-Y. Tseng, Z. Yang, C.-C. Tung, E. Zhao, Z.-F. Ren, S.-S.
Yu, P.-Y. Chen, C.-S. Chen, M. J. Buehler, Adv. Theory Simul. 2022, 5,
2200459.
[42] J. Yu, Z. Lin, J. Yang, X. Shen, X. Lu, T. Huang, in Proc. IEEE Int. Conf.
Comput. Vis., Seoul, Nov 2019.
[43] H. Zhang, T. Xu, H. Li, S. Zhang, X. Wang, X. Huang, D. N. Metaxas,
IEEE Trans. Pattern Anal. Mach. Intell. 2019, 41, 1947.
[44] M. Mirza, S. Osindero, arXiv:1411.1784, 2014.
[45] P. Isola, J. Y. Zhu, T. Zhou, A. A. Efros, in 2017 IEEE Conf. on Computer
Vision and Pattern Recognition (CVPR), IEEE, Piscataway, NJ, USA,
2017.
[46] B. Zhou, A. Lapedriza, A. Khosla, A. Oliva, A. Torralba, IEEE Trans.
Pattern Anal. Mach. Intell. 2017, 40, 1452.
[47] A. B. Bakushinskii, A. V. Goncharsky, Ill-Posed Problem: Theory and
Applicatons, Springer, Dordrecht, The Netherlands, 1994.
[48] H. Kobeissi, S. Mohammadzadeh, E. Lejeune, J. Biomech. Eng. 2022,
144, 121002.
[49] A. Vaswani, N. Shazeer, N. Parmar, J. Uszkoreit, L. Jones, A. N.
Gomez, Ł. u. Kaiser, I. Polosukhin, in Advances in Neural Information
Processing Systems 30 (NIPS 2017) (Eds.: I. Guyon, U. Von Luxburg, S.
Bengio, H. Wallach, R. Fergus, S. Vishwanathan, R. Garnett), Curran
Associates, Inc., Red Hook, NY, USA 2017.
[50] A. Dosovitskiy, L. Beyer, A. Kolesnikov, D. Weissenborn, X. Zhai,
T. Unterthiner, M. Dehghani, M. Minderer, G. Heigold, S. Gelly, J.
Uszkoreit, N. Houlsby, arXiv: 2010.11929, 2021.
[51] A. Arnab, M. Dehghani, G. Heigold, C. Sun, M. Luˇci´c, C. Schmid,
arXiv: 2103.15691, 2021.
[52] E. Zhang, M. Dao, G. E. Karniadakis, S. Suresh, Sci. Adv. 2022, 8,
eabk0644.
[53] Y. Kim, Y. Kim, C. Yang, K. Park, G. X. Gu, S. Ryu, npj Comput. Mater.
2021, 7, 140.
[54] J. D. Hunter, Comput. Sci. Eng. 2007, 9, 90.
[55] T. Miyato, T. Kataoka, M. Koyama, Y. Yoshida, in 6th Int. Conf. on Learn-
ing Representations, 2018.
[56] A. Paszke, S. Gross, F. Massa, A. Lerer, J. Bradbury, G. Chanan, T.
Killeen, Z. Lin, N. Gimelshein, L. Antiga, A. Desmaison, A. Kopf, E.
Yang, Z. DeVito, M. Raison, A. Tejani, S. Chilamkurthy, B. Steiner, L.
Fang, J. Bai, S. Chintala, in Advances in Neural Information Processing
Systems (Eds.: H. Wallach, H. Larochelle, A. Beygelzimer, E. Fox, R.
Garnett), Curran Associates, Inc., Red Hook, NY, USA 2019.
[57] F. Chollet, Github repository, 2015. https://github.com/fchollet/
keras (accessed: July 2022).
Adv. Mater. 2023, 2301449
2301449 (14 of 14)
© 2023 The Authors. Advanced Materials published by Wiley-VCH GmbH
 15214095, 0, Downloaded from https://onlinelibrary.wiley.com/doi/10.1002/adma.202301449 by Cochrane Canada Provision, Wiley Online Library on [07/05/2023]. See the Terms and Conditions (https://onlinelibrary.wiley.com/terms-and-conditions) on Wiley Online Library for rules of use; OA articles are governed by the applicable Creative Commons License

