Proceedings of the 58th Annual Meeting of the Association for Computational Linguistics, pages 3229–3238
July 5 - 10, 2020. c⃝2020 Association for Computational Linguistics
3229
Relational Graph Attention Network for Aspect-based Sentiment Analysis
Kai Wang1, Weizhou Shen1, Yunyi Yang1, Xiaojun Quan1∗, Rui Wang2
1School of Data and Computer Science, Sun Yat-sen University, China
2Alibaba Group, China
{wangk73, shenwzh3, yangyy37}@mail2.sysu.edu.cn
quanxj3@mail.sysu.edu.cn, masi.wr@alibaba-inc.com
Abstract
Aspect-based sentiment analysis aims to de-
termine the sentiment polarity towards a spe-
ciﬁc aspect in online reviews. Most recent
efforts adopt attention-based neural network
models to implicitly connect aspects with opin-
ion words. However, due to the complexity
of language and the existence of multiple as-
pects in a single sentence, these models often
confuse the connections. In this paper, we ad-
dress this problem by means of effective en-
coding of syntax information. Firstly, we de-
ﬁne a uniﬁed aspect-oriented dependency tree
structure rooted at a target aspect by reshaping
and pruning an ordinary dependency parse tree.
Then, we propose a relational graph attention
network (R-GAT) to encode the new tree struc-
ture for sentiment prediction. Extensive experi-
ments are conducted on the SemEval 2014 and
Twitter datasets, and the experimental results
conﬁrm that the connections between aspects
and opinion words can be better established
with our approach, and the performance of the
graph attention network (GAT) is signiﬁcantly
improved as a consequence.
1
Introduction
Aspect-based sentiment analysis (ABSA) aims
at ﬁne-grained sentiment analysis of online af-
fective texts such as product reviews. Speciﬁ-
cally, its objective is to determine the sentiment
polarities towards one or more aspects appear-
ing in a single sentence. An example of this
task is, given a review great food but the
service was dreadful, to determine the
polarities towards the aspects food and service.
Since the two aspects express quite opposite sen-
timents, just assigning a sentence-level sentiment
polarity is inappropriate. In this regard, ABSA can
provide better insights into user reviews compared
with sentence-level sentiment analysis.
∗Corresponding author.
Intuitively, connecting aspects with their respec-
tive opinion words lies at the heart of this task.
Most recent efforts (Wang et al., 2016b; Li et al.,
2017; Ma et al., 2017; Fan et al., 2018) resort
to assorted attention mechanisms to achieve this
goal and have reported appealing results. How-
ever, due to the complexity of language mor-
phology and syntax, these mechanisms fail occa-
sionally. We illustrate this problem with a real
review So delicious was the noodles
but terrible vegetables, in which the
opinion word terrible is closer to the aspect
noodles than delicious, and there could be
terrible noodles appearing in some other
reviews which makes these two words closely asso-
ciated. Therefore, the attention mechanisms could
attend to terrible with a high weight when eval-
uating the aspect noodles.
Some other efforts explicitly leverage the syntac-
tic structure of a sentence to establish the connec-
tions. Among them, early attempts rely on hand-
crafted syntactic rules (Qiu et al., 2011; Liu et al.,
2013), though they are subject to the quantity and
quality of the rules. Dependency-based parse trees
are then used to provide more comprehensive syn-
tactic information. For this purpose, a whole depen-
dency tree can be encoded from leaves to root by a
recursive neural network (RNN) (Lakkaraju et al.,
2014; Dong et al., 2014; Nguyen and Shirai, 2015;
Wang et al., 2016a), or the internal node distance
can be computed and used for attention weight
decay (He et al., 2018a). Recently, graph neural
networks (GNNs) are explored to learn representa-
tions from the dependency trees (Zhang et al., 2019;
Sun et al., 2019b; Huang and Carley, 2019). The
shortcomings of these approaches should not be
overlooked. First, the dependency relations, which
may indicate the connections between aspects and
opinion words, are ignored. Second, empirically,
only a small part of the parse tree is related to this

3230
task and it is unnecessary to encode the whole tree
(Zhang et al., 2018; He et al., 2018b). Finally, the
encoding process is tree-dependent, making the
batch operation inconvenient during optimization.
In this paper, we re-examine the syntax informa-
tion and claim that revealing task-related syntactic
structures is the key to address the above issues.
We propose a novel aspect-oriented dependency
tree structure constructed in three steps. Firstly, we
obtain the dependency tree of a sentence using an
ordinary parser. Secondly, we reshape the depen-
dency tree to root it at a target aspect in question.
Lastly, pruning of the tree is performed to retain
only edges with direct dependency relations with
the aspect. Such a uniﬁed tree structure not only
enables us to focus on the connections between
aspects and potential opinion words but also facili-
tates both batch and parallel operations. Then we
propose a relational graph attention network (R-
GAT) model to encode the new dependency trees.
R-GAT generalizes graph attention network (GAT)
to encode graphs with labeled edges. Extensive
evaluations are conducted on the SemEval 2014
and Twitter datasets, and experimental results show
that R-GAT signiﬁcantly improves the performance
of GAT. It also achieves superior performance to
the baseline methods.
The contributions of this work include:
• We propose an aspect-oriented tree structure
by reshaping and pruning ordinary depen-
dency trees to focus on the target aspects.
• We propose a new GAT model to encode the
dependency relations and to establish the con-
nections between aspects and opinion words.
• The source code of this work is released for
future research.1
2
Related Work
Most recent research work on aspect-based sen-
timent analysis (ABSA) utilizes attention-based
neural models to examine words surrounding a
target aspect. They can be considered an implicit
approach to exploiting sentence structure, since
opinion words usually appear not far from aspects.
Such approaches have led to promising progress.
Among them, Wang et al. (2016b) proposed to
use an attention-based LSTM to identify important
sentiment information relating to a target aspect.
1https://github.com/shenwzh3/RGAT-ABSA
Chen et al. (2017) introduced a multi-layer atten-
tion mechanism to capture long-distance opinion
words for aspects. For a similar purpose, Tang
et al. (2016) employed Memory Network with
multi-hop attention and external memory. Fan et
al. (2018) proposed a multi-grained attention net-
work with both ﬁne-grained and coarse-grained
attentions. The pre-trained language model BERT
(Devlin et al., 2018) has made successes in many
classiﬁcation tasks including ABSA. For example,
Xu et al. (2019) used an additional corpus to post-
train BERT and proved its effectiveness in both
aspect extraction and ABSA. Sun et al. (2019a)
converted ABSA to a sentence-pair classiﬁcation
task by constructing auxiliary sentences.
Some other efforts try to directly include the
syntactic information in ABSA. Since aspects are
generally assumed to lie at the heart of this task, es-
tablishing the syntactic connections between each
target aspect and the other words are crucial. Qiu
et al. (2011) manually deﬁned some syntactic rules
to identify the relations between aspects and po-
tential opinion words. Liu et al. (2013) obtained
partial alignment links with these syntactic rules
and proposed a partially supervised word align-
ment model to extract opinion targets. Afterward,
neural network models were explored for this task.
Lakkaraju et al. (2014) used a recursive neural
network (RNN) to hierarchically encode word rep-
resentations and to jointly extract aspects and sen-
timents. In another work, Wang et al. (2016a)
combined the recursive neural network with con-
ditional random ﬁelds (CRF). Moreover, Dong et
al. (2014) proposed an adaptive recursive neural
network (AdaRNN) to adaptively propagate the
sentiments of words to the target aspect via seman-
tic composition over a dependency tree. Nguyen
et al. (2015) further combined the dependency
and constituent trees of a sentence with a phrase
recursive neural network (PhraseRNN). In a sim-
pler approach, He et al. (2018a) used the relative
distance in a dependency tree for attention weight
decay. They also showed that selectively focus-
ing on a small subset of context words can lead to
satisfactory results.
Recently, graph neural networks combined with
dependency trees have shown appealing effective-
ness in ABSA. Zhang et al. (2019) and Sun et al.
(2019b) proposed to use graph convolutional net-
works (GCN) to learn node representations from
a dependency tree and used them together with

3231
I
like
the
[recipe]pos here.
0.00 0.98 0.01
0.01
0.00
nsubj
det
dobj
advmod
root
(a)
The [recipe]neu includes some Chinese food
like
dumplings.
0.00
0.01
0.01
0.00
0.00
0.00 0.97
0.01
nsubj
det
amod
dobj
prep
pobj
cc
root
(b)
The
[falafel]neg
was
over cooked and dried
but
the
[chicken]pos
was
ﬁne.
0.00
0.00
0.00 0.01
0.00
0.00
0.27
0.71 0.01
0.00
0.00 0.00
det
nsubj
cop
advmod
cc
conj
cc
det
nsubj
cop
conj
root
(c)
Figure 1: Three examples from restaurant reviews to illustrate the relationships among aspect, attention, and syntax
in ABSA. Labeled edges indicate dependency relations, and scores under each word represent attention weights
assigned by the attention-equipped LSTM. Words with high attention weights are highlighted in red boxes, and
words in brackets are the target aspects followed by their sentiment labels.
other features for sentiment classiﬁcation. For a
similar purpose, Huang and Carley (2019) used
graph attention networks (GAT) to explicitly estab-
lish the dependency relationships between words.
However, these approaches generally ignore the
dependency relations which might identify the con-
nections between aspects and opinion words.
3
Aspect-Oriented Dependency Tree
In this section, we elaborate on the details of con-
structing an aspect-oriented dependency tree.
3.1
Aspect, Attention and Syntax
The syntactic structure of a sentence can be un-
covered by dependency parsing, a task to generate
a dependency tree to represent the grammatical
structure. The relationships between words can
be denoted with directed edges and labels. We
use three examples to illustrate the relationships
among aspect, attention and syntax in ABSA, as
shown in Figure 1. In the ﬁrst example, the word
like is used as a verb and it expresses a positive
sentiment towards the aspect recipe, which is
successfully attended by the attention-based LSTM
model. However, when it is used as a preposition
in the second example, the model still attends to
it with a high weight, resulting in a wrong predic-
tion. The third example shows a case where there
are two aspects in a single sentence with differ-
ent sentiment polarities. For the aspect chicken,
the LSTM model mistakenly assigns high attention
weights to the words but and dried, which leads
to another prediction mistake. These examples
demonstrate the limitations of the attention-based
model in this task. Such mistakes are likely to be
avoided by introducing explicit syntactic relations
between aspects and other words. For example, it
might be different if the model noticed the direct
dependency relationship between chicken and
fine in the third example, rather than with but.
3.2
Aspect-Oriented Dependency Tree
The above analysis suggests that dependency re-
lations with direct connections to an aspect may
assist a model to focus more on related opinion
words, and therefore should be more important
than other relations. Also, as shown in Figure 1, a
dependency tree contains abundant grammar infor-
mation, and is usually not rooted at a target aspect.
Nevertheless, the focus of ABSA is a target as-
pect rather than the root of the tree. Motivated by
the above observations, we propose a novel aspect-
oriented dependency tree structure by reshaping an
original dependency tree to root it at a target aspect,
followed by pruning of the tree so as to discard
unnecessary relations.
Algorithm 1 describes the above process. For an
input sentence, we ﬁrst apply a dependency parser
to obtain its dependency tree, where rij is the de-
pendency relation from node i to j. Then, we build
an aspect-oriented dependency tree in three steps.
Firstly, we place the target aspect at the root, where
multiple-word aspects are treated as entities. Sec-
ondly, we set the nodes with direct connections to
the aspect as the children, for which the original

3232
Reshape and prune
Figure 2: Construction of an aspect-oriented dependency tree (bottom) from an ordinary dependency tree (top).
Algorithm 1 Aspect-Oriented Dependency Tree
Input: aspect a = {wa
i , wa
i+1, ...wa
k}, sentence
s = {ws
1, ws
2, ...ws
n}, dependency tree T, and
dependency relations r.
Output: aspect-oriented dependency tree ˆT.
1: Construct the root R for ˆT;
2: for i to k do
3:
for j = 1 to n do
4:
if ws
j
rji
−−→wa
i then
5:
ws
j
rji
−−→R
6:
else if ws
j
rij
←−−wa
i then
7:
ws
j
rij
←−−R
8:
else
9:
n = distance(i, j)
10:
ws
j
n:con
−−−→R
11:
end if
12:
end for
13: end for
14: return ˆT
dependency relations are retained. Thirdly, other
dependency relations are discarded, and instead, we
put a virtual relation n:con (n connected) from
the aspect to each corresponding node, where n rep-
resents the distance between two nodes.2 If the sen-
tence contains more than one aspect, we construct
a unique tree for each aspect. Figure 2 shows an
aspect-oriented dependency tree constructed from
the ordinary dependency tree. There are at least
two advantages with such an aspect-oriented struc-
ture. First, each aspect has its own dependency tree
and can be less inﬂuenced by unrelated nodes and
relations. Second, if an aspect contains more than
2We set n = ∞if the distance is longer than 4.
one word, the dependency relations will be aggre-
gated at the aspect, unlike in (Zhang et al., 2019;
Sun et al., 2019b) which require extra pooling or
attention operations.
The idea described above is partially inspired by
previous ﬁndings (He et al., 2018a; Zhang et al.,
2018; He et al., 2018b) that it could be sufﬁcient to
focus on a small subset of context words syntacti-
cally close to the target aspect. Our approach pro-
vides a direct way to model the context information.
Such a uniﬁed tree structure not only enables our
model to focus on the connections between aspects
and opinion words but also facilitates both batch
and parallel operations during training. The moti-
vation we put a new relation n:con is that existing
parsers may not always parse sentences correctly
and may miss important connections to the target
aspect. In this situation, the relation n:con en-
ables the new tree to be more robust. We evaluate
this new relation in the experiment and the results
conﬁrm this assumption.
4
Relational Graph Attention Network
To encode the new dependency trees for sentiment
analysis, we propose a relational graph attention
network (R-GAT) by extending the graph attention
network (GAT) (Veliˇckovi´c et al., 2017) to encode
graphs with labeled edges.
4.1
Graph Attention Network
Dependency tree can be represented by a graph G
with n nodes, where each represents a word in the
sentence. The edges of G denote the dependency
between words. The neighborhood nodes of node i
can be represented by Ni. GAT iteratively updates
each node representation (e.g., word embeddings)

3233
by aggregating neighborhood node representations
using multi-head attention:
hl+1
atti = ||K
k=1

j∈Ni
αlk
ijW l
khl
j
(1)
αlk
ij = attention(i, j)
(2)
where hl+1
atti is the attention head of node i at layer
l + 1, ||K
k=1xi denotes the concatenation of vectors
from x1 to xk, αlk
ij is a normalized attention coefﬁ-
cient computed by the k-th attention at layer l, W l
k
is an input transformation matrix. In this paper, we
adopt dot-product attention for attention(i, j).3
4.2
Relational Graph Attention Network
GAT aggregates the representations of neighbor-
hood nodes along the dependency paths. However,
this process fails to take dependency relations into
consideration, which may lose some important de-
pendency information. Intuitively, neighborhood
nodes with different dependency relations should
have different inﬂuences. We propose to extend the
original GAT with additional relational heads. We
use these relational heads as relation-wise gates
to control information ﬂow from neighborhood
nodes. The overall architecture of this approach is
shown in Figure 3. Speciﬁcally, we ﬁrst map the
dependency relations into vector representations,
and then compute a relational head as:
hl+1
reli = ||M
m=1

j∈Ni
βlm
ij W l
mhl
j
(3)
glm
ij = σ(relu(rijWm1 + bm1)Wm2 + bm2) (4)
βlm
ij =
exp(glm
ij )
Ni
j=1 exp(glm
ij )
(5)
where rij represents the relation embedding be-
tween nodes i and j. R-GAT contains K atten-
tional heads and M relational heads. The ﬁnal
representation of each node is computed by:
xl+1
i
= hl+1
atti || hl+1
reli
(6)
hl+1
i
= relu(Wl+1xl+1
i
+ bl+1)
(7)
3Dot product has fewer parameters but similar performance
with feedforward neural network used in (Veliˇckovi´c et al.,
2017).
݄ଷ
݄ସ
ݓଵ
ݓଶ
ݓଷ
ݓସ
݄ଵ
݄ଶ
݌݋ݏ݊݁݃
݊݁ݑ
ߙ௜௝
ߚ௜௝


ܿ݋݊ܿܽݐ
݄௔௧௧ೌ
ݏ݋݂ݐ݉ܽݔ
݄௥௘௟ೌ
Figure 3: Structure of the proposed relational graph
attention network (R-GAT), which includes two gen-
res of multi-head attention mechanism, i.e., attentional
head and relational head.
4.3
Model Training
We use BiLSTM to encode the word embeddings of
tree nodes, and obtain its output hidden state hi for
the initial representation h0
i of leaf node i. Then,
another BiLSTM is applied to encode the aspect
words, and its average hidden state is used as the
initial representation h0
a of this root. After applying
R-GAT on an aspect-oriented tree, its root repre-
sentation hl
a is passed through a fully connected
softmax layer and mapped to probabilities over the
different sentiment polarities.
p(a) = softmax(Wphl
a + bp)
(8)
Finally, the standard cross-entropy loss is used as
our objective function:
L(θ) = −

(S,A)∈D

a∈A
log p(a)
(9)
where D contains all the sentence-aspects pairs, A
represents the aspects appearing in sentence S, and
θ contains all the trainable parameters.
5
Experiments
In this section, we ﬁrst introduce the datasets used
for evaluation and the baseline methods employed
for comparison. Then, we report the experimental
results conducted from different perspectives. Fi-
nally, error analysis and discussion are conducted
with a few representative examples.

3234
Dataset
Positive
Neutral
Negative
Train
Test
Train
Test
Train
Test
Laptop
994
341
870
128
464
169
Restaurant
2164
728
807
196
637
196
Twitter
1561
173
3127
346
1560
173
Table 1: Statistics of the three datasets.
5.1
Datasets
Three public sentiment analysis datasets are used
in our experiments, two of them are the Laptop
and Restaurant review datasets from the Se-
mEval 2014 Task (Maria Pontiki and Manandhar,
2014),4 and the third is the Twitter dataset used
by (Dong et al., 2014).
Statistics of the three
datasets can be found in Table 1.
5.1.1
Implementation Details
The Biafﬁne Parser (Dozat and Manning, 2016)
is used for dependency parsing. The dimension
of the dependency relation embeddings is set to
300. For R-GAT, we use the 300-dimensional word
embeddings of GLoVe (Pennington et al., 2014).
For R-GAT+BERT, we use the last hidden states of
the pre-trained BERT for word representations and
ﬁne-tune them on our task. The PyTorch implemen-
tation of BERT 5 is used in the experiments. R-GAT
is shown to prefer a high dropout rate in between
[0.6, 0.8]. As for R-GAT+BERT, it works better
with a low dropout rate of around 0.2. Our model
is trained using the Adam optimizer (Kingma and
Ba, 2014) with the default conﬁguration.
5.2
Baseline Methods
A few mainstream models for aspect-based senti-
ment analysis are used for comparison, including:
• Syntax-aware models: LSTM+SynATT (He
et al., 2018a), AdaRNN (Dong et al., 2014),
PhraseRNN (Nguyen and Shirai, 2015), AS-
GCN (Zhang et al., 2019), CDT (Sun et al.,
2019b), GAT (Veliˇckovi´c et al., 2017) and
TD-GAT (Huang and Carley, 2019).
• Attention-based
models:
ATAE-LSTM
(Wang et al., 2016b) , IAN (Ma et al., 2017),
RAM (Chen et al., 2017), MGAN (Fan
et al., 2018), attention-equipped LSTM, and
ﬁne-tuned BERT (Devlin et al., 2018).
• Other recent methods: GCAE (Xue and Li,
2018), JCI (Wang et al., 2018) and TNET (Li
4http://alt.qcri.org/semeval2014/task4/.
5https://github.com/huggingface/transformers
et al., 2018).
• Our methods: R-GAT is our relational graph
attention network. R-GAT+BERT is our R-
GAT with the BiLSTM replaced by BERT,
and the attentional heads of R-GAT will also
be replaced by that of BERT.
5.3
Results and Analysis
5.3.1
Overall Performance
The overall performance of all the models are
shown in Table 2, from which several observations
can be noted. First, the R-GAT model outperforms
most of the baseline models. Second, the perfor-
mance of GAT can be signiﬁcantly improved when
incorporated with relational heads in our aspect-
oriented dependency tree structure. It also outper-
forms the baseline models of ASGCN, and CDT,
which also involve syntactic information in differ-
ent ways. This proves that our R-GAT is better
at encoding the syntactic information. Third, the
basic BERT can already outperform all the existing
ABSA models by signiﬁcant margins, demonstrat-
ing the power of this large pre-trained model in this
task. Nevertheless, after incorporating our R-GAT
(R-GAT+BERT), this strong model sees further
improvement and has achieved a new state of the
art. These results have demonstrated the effective-
ness of our R-GAT in capturing important syntactic
structures for sentiment analysis.
5.3.2
Effect of Multiple Aspects
The appearance of multiple aspects in one single
sentence is very typical for ABSA. To study the in-
ﬂuence of multiple aspects, we pick out the reviews
with more than one aspect in a sentence. Each as-
pect is represented with its averaged (GloVe) word
embeddings, and the distance between any two
aspects of a sentence is calculated using the Eu-
clidean distance. If there are more than two as-
pects, the nearest Euclidean distance is used for
each aspect. Then, we select three models (GAT,
R-GAT, R-GAT+BERT) for sentiment prediction,
and plot the aspect accuracy by different distance
ranges in Figure 4. We can observe that the as-
pects with nearer distances tend to lead to lower
accuracy scores, indicating that the aspects with
high semantic similarity in a sentence may confuse
the models. However, with our R-GAT, both GAT
and BERT can be improved across different ranges,
showing that our method can alleviate this problem
to a certain extent.

3235
Category
Method
Restaurant
Laptop
Twitter
Accuracy
Macro-F1
Accuracy
Macro-F1
Accuracy
Macro-F1
Syn.
LSTM+SynATT
80.45
71.26
72.57
69.13
-
-
AdaRNN
-
-
-
-
66.30
65.90
PhraseRNN
66.20
59.32
-
-
-
-
ASGCN
80.77
72.02
75.55
71.05
72.15
70.40
CDT
82.30
74.02
77.19
72.99
74.66
73.66
GAT
78.21
67.17
73.04
68.11
71.67
70.13
TD-GAT
80.35
76.13
74.13
72.01
72.68
71.15
Att.
ATAE-LSTM
77.20
-
68.70
-
-
-
IAN
78.60
-
72.10
-
-
-
RAM
80.23
70.80
74.49
71.35
69.36
67.30
MGAN
81.25
71.94
75.39
72.47
72.54
70.81
LSTM
79.10
69.00
71.22
65.75
69.51
67.98
BERT
85.62
78.28
77.58
72.38
75.28
74.11
Others
GCAE
77.28
-
69.14
-
-
-
JCI
-
68.84
-
67.23
-
-
TNET
80.69
71.27
76.54
71.75
74.90
73.60
Ours
R-GAT
83.30
76.08
77.42
73.76
75.57
73.82
Ours
R-GAT+BERT
86.60
81.35
78.21
74.07
76.15
74.88
Table 2: Overall performance of different methods on the three datasets.
Figure 4: Results of multiple aspects analysis, which
shows that the aspects with nearer distances tend to lead
to lower accuracy scores.
5.3.3
Effect of Different Parsers
Dependency parsing plays a critical role in our
method. To evaluate the impact of different parsers,
we conduct a study based on the R-GAT model
using two well-known dependency parsers: Stan-
ford Parser (Chen and Manning, 2014) and Biafﬁne
Parser (Dozat and Manning, 2016).6 Table 3 shows
the performance of the two parsers in UAS and
LAS metrics, followed by their performance for
aspect-based sentiment analysis. From the table,
6The parsers are implemented by Stanford CoreNLP (Man-
ning et al., 2014) and AllenNLP (Gardner et al., 2018).
Parser
Performance
Dataset
UAS
LAS
Restaurant
Laptop
Twitter
Stanford
94.10
91.49
0.8133
0.7539
0.7283
Biafﬁne
95.74
94.08
0.8330
0.7742
0.7557
Table 3: Results of R-GAT based on two different
parsers, where UAS and LAS are metrics to evaluate
the parsers and higher scores mean better performance.
Tree
Method
Restaurant
Laptop
Twitter
Ordinary
GAT
78.21
73.04
71.67
R-GAT
79.91
72.72
71.76
Reshaped
GAT
78.57
72.10
71.82
R-GAT
83.30
77.42
75.57
R-GAT−n:con
81.16
73.66
70.95
Table 4: Results of ablation study, where “Ordinary”
means using ordinary dependency trees, “Reshaped”
denotes using the aspect-oriented trees, and “*-n:con”
denote the aspect-oriented tree without using n:con.
we can ﬁnd that the better Biafﬁne parser results in
higher sentiment classiﬁcation accuracies. More-
over, it further implies that while existing parsers
can capture most of the syntactic structures cor-
rectly, our method has the potential to be further
improved with the advances of parsing techniques.
5.3.4
Ablation Study
We further conduct an ablation study to evaluate the
inﬂuence of the aspect-oriented dependency tree

3236
Category
(%)
Example
Neutral
46
No green beans, no egg, no anchovy dressing, no [nicoise olives]neu, no red onion.
Comprehension
32
It took about 2 1/2 hours to be served our 2 [courses]neg.
Advice
6
Try the [rose roll]pos (not on menu).
Double negation
6
But [dinner]pos here is never disappointing, even if the prices are a bit over the top.
Neutral
50
Entrees include classics like lasagna, [fettuccine alfredo]neu and chicken parmigiana.
Comprehension
31
We requested they re-slice the [sushi]pos, and it was returned to us in small cheese-like cubes.
Advice
5
Gave a [mojito]pos and sit in the back patio.
Double negation
3
And these are not small, wimpy fast food type [burgers]pos - these are real, full sized patties
Table 5: Results of error analysis of R-GAT and R-GAT+BERT on 100 misclassiﬁed examples from the Restaurant
dataset. The reasons are classiﬁed into four categories, for which a sample is given. The upper table corresponds
to the results of R-GAT and the lower one corresponds to R-GAT+BERT.
structure and the relational heads. We present the
results on ordinary dependency trees for compar-
ison. From table 4, we can observe that R-GAT
is improved by using the new tree structure on all
three datasets, while GAT is only improved on the
Restaurant and Twitter datasets. Furthermore, after
removing the virtual relation n:con, the perfor-
mance of R-GAT drops considerably. We manually
examined the misclassiﬁed samples and found that
most of them can be attributed to poor parsing re-
sults where aspects and their opinion words are
incorrectly connected. This study validates that
adding the n:con relation can effectively alleviate
the parsing problem and allows our model to be
robust. In this paper, the maximal number of n is
set to 4 according to empirical tests. Other values
of n are also explored but the results are not any
better. This may suggest that words with too long
dependency distances from the target aspect are
unlikely to be useful for this task.
5.3.5
Error Analysis
To analyze the limitations of current ABSA mod-
els including ours, we randomly select 100 mis-
classiﬁed examples by two models (R-GAT and
R-GAT+BERT) from the Restaurant dataset. After
looking into these bad cases, we ﬁnd the reasons
behind can be classiﬁed into four categories. As
shown in Table 5, the primary reason is due to the
misleading neutral reviews, most of which include
an opinion modiﬁer (words) towards the target as-
pect with a direct dependency connection. The
second category is due to the difﬁculty in compre-
hension, which may demand deep language un-
derstanding techniques such as natural language
inference. The third category is caused by the ad-
vice which only recommend or disrecommend peo-
ple to try, with no obvious clues in the sentences
indicating the sentiments. The fourth category is
caused by double negation expression, which is
also difﬁcult for current models. Through the error
analysis, we can note that although current models
have achieved appealing progress, there are still
some complicated sentences beyond their capabil-
ities. There ought to be more advanced natural
language processing techniques and learning algo-
rithms developed to further address them.
6
Conclusion
In this paper, we have proposed an effective ap-
proach to encoding comprehensive syntax infor-
mation for aspect-based sentiment analysis. We
ﬁrst deﬁned a novel aspect-oriented dependency
tree structure by reshaping and pruning an ordinary
dependency parse tree to root it at a target aspect.
We then demonstrated how to encode the new de-
pendency trees with our relational graph attention
network (R-GAT) for sentiment classiﬁcation. Ex-
perimental results on three public datasets showed
that the connections between aspects and opinion
words can be better established with R-GAT, and
the performance of GAT and BERT are signiﬁ-
cantly improved as a result. We also conducted an
ablation study to validate the role of the new tree
structure and the relational heads. Finally, an error
analysis was performed on incorrectly-predicted
examples, leading to some insights into this task.
Acknowledgments
The work was supported by the Fundamen-
tal Research Funds for the Central Universities
(No.19lgpy220) and the Program for Guangdong
Introducing Innovative and Entrepreneurial Teams
(No.2017ZT07X355). Part of this work was done
when the ﬁrst author was an intern at Alibaba.

3237
References
Danqi Chen and Christopher Manning. 2014. A fast
and accurate dependency parser using neural net-
works. In Proceedings of the 2014 conference on
empirical methods in natural language processing
(EMNLP), pages 740–750.
Peng Chen, Zhongqian Sun, Lidong Bing, and Wei
Yang. 2017. Recurrent attention network on mem-
ory for aspect sentiment analysis. In Proceedings of
the 2017 conference on empirical methods in natural
language processing, pages 452–461.
Jacob Devlin, Ming-Wei Chang, Kenton Lee, and
Kristina Toutanova. 2018. Bert: Pre-training of deep
bidirectional transformers for language understand-
ing. arXiv preprint arXiv:1810.04805.
Li Dong, Furu Wei, Chuanqi Tan, Duyu Tang, Ming
Zhou, and Ke Xu. 2014. Adaptive recursive neural
network for target-dependent twitter sentiment clas-
siﬁcation. In Proceedings of the 52nd annual meet-
ing of the association for computational linguistics
(volume 2: Short papers), volume 2, pages 49–54.
Timothy Dozat and Christopher D Manning. 2016.
Deep biafﬁne attention for neural dependency pars-
ing. arXiv preprint arXiv:1611.01734.
Feifan Fan, Yansong Feng, and Dongyan Zhao. 2018.
Multi-grained attention network for aspect-level sen-
timent classiﬁcation.
In Proceedings of the 2018
Conference on Empirical Methods in Natural Lan-
guage Processing, pages 3433–3442.
Matt Gardner, Joel Grus, Mark Neumann, Oyvind
Tafjord, Pradeep Dasigi, Nelson Liu, Matthew Pe-
ters, Michael Schmitz, and Luke Zettlemoyer. 2018.
Allennlp: A deep semantic natural language process-
ing platform. arXiv preprint arXiv:1803.07640.
Ruidan He, Wee Sun Lee, Hwee Tou Ng, and Daniel
Dahlmeier. 2018a. Effective attention modeling for
aspect-level sentiment classiﬁcation.
In Proceed-
ings of the 27th International Conference on Com-
putational Linguistics, pages 1121–1131.
Shexia He, Zuchao Li, Hai Zhao, and Hongxiao Bai.
2018b. Syntax for semantic role labeling, to be, or
not to be. In Proceedings of the 56th Annual Meet-
ing of the Association for Computational Linguistics,
ACL 2018, Melbourne, Australia, July 15-20, 2018,
Volume 1: Long Papers, pages 2061–2071. Associa-
tion for Computational Linguistics.
Binxuan Huang and Kathleen Carley. 2019.
Syntax-
aware aspect level sentiment classiﬁcation with
graph attention networks.
In Proceedings of the
2019 Conference on Empirical Methods in Natu-
ral Language Processing and the 9th International
Joint Conference on Natural Language Processing
(EMNLP-IJCNLP), pages 5472–5480, Hong Kong,
China. Association for Computational Linguistics.
Diederik P Kingma and Jimmy Ba. 2014. Adam: A
method for stochastic optimization. arXiv preprint
arXiv:1412.6980.
Himabindu Lakkaraju, Richard Socher, and Chris Man-
ning. 2014. Aspect speciﬁc sentiment analysis us-
ing hierarchical deep learning. In NIPS Workshop
on deep learning and representation learning.
Cheng Li, Xiaoxiao Guo, and Qiaozhu Mei. 2017.
Deep memory networks for attitude identiﬁcation.
In Proceedings of the Tenth ACM International Con-
ference on Web Search and Data Mining, pages 671–
680. ACM.
Xin Li, Lidong Bing, Wai Lam, and Bei Shi. 2018.
Transformation networks for target-oriented senti-
ment classiﬁcation. In Proceedings of the 56th An-
nual Meeting of the Association for Computational
Linguistics (Volume 1: Long Papers), pages 946–
956.
Kang Liu, Heng Li Xu, Yang Liu, and Jun Zhao. 2013.
Opinion target extraction using partially-supervised
word alignment model.
In Twenty-Third Interna-
tional Joint Conference on Artiﬁcial Intelligence.
Dehong Ma, Sujian Li, Xiaodong Zhang, and Houfeng
Wang. 2017.
Interactive attention networks for
aspect-level sentiment classiﬁcation. arXiv preprint
arXiv:1709.00893.
Christopher Manning, Mihai Surdeanu, John Bauer,
Jenny Finkel, Steven Bethard, and David McClosky.
2014.
The stanford corenlp natural language pro-
cessing toolkit. In Proceedings of 52nd annual meet-
ing of the association for computational linguistics:
system demonstrations, pages 55–60.
John Pavlopoulos Harris Papageorgiou Ion Androut-
sopoulos Maria Pontiki, Dimitris Galanis and Suresh
Manandhar. 2014.
Semeval-2014 task 4: Aspect
based sentiment analysis. In Proceedings of the 8th
International Workshop on Semantic Evaluation (Se-
mEval 2014), pages 27–35.
Thien
Hai
Nguyen
and
Kiyoaki
Shirai.
2015.
Phrasernn:
Phrase recursive neural network for
aspect-based sentiment analysis.
In Proceedings
of the 2015 Conference on Empirical Methods in
Natural Language Processing, pages 2509–2514.
Jeffrey Pennington, Richard Socher, and Christopher
Manning. 2014. Glove: Global vectors for word rep-
resentation. In Proceedings of the 2014 conference
on empirical methods in natural language process-
ing (EMNLP), pages 1532–1543.
Guang Qiu, Bing Liu, Jiajun Bu, and Chun Chen.
2011. Opinion word expansion and target extraction
through double propagation. Computational linguis-
tics, 37(1):9–27.
Chi Sun, Luyao Huang, and Xipeng Qiu. 2019a. Utiliz-
ing bert for aspect-based sentiment analysis via con-
structing auxiliary sentence. In Proceedings of the

3238
2019 Conference of the North American Chapter of
the Association for Computational Linguistics: Hu-
man Language Technologies, Volume 1 (Long and
Short Papers), pages 380–385.
Kai Sun, Richong Zhang, Samuel Mensah, Yongyi
Mao, and Xudong Liu. 2019b. Aspect-level senti-
ment analysis via convolution over dependency tree.
In Proceedings of the 2019 Conference on Empirical
Methods in Natural Language Processing and the
9th International Joint Conference on Natural Lan-
guage Processing (EMNLP-IJCNLP), pages 5683–
5692, Hong Kong, China. Association for Computa-
tional Linguistics.
Duyu Tang, Bing Qin, and Ting Liu. 2016.
Aspect
level sentiment classiﬁcation with deep memory net-
work. arXiv preprint arXiv:1605.08900.
Petar Veliˇckovi´c, Guillem Cucurull, Arantxa Casanova,
Adriana Romero, Pietro Lio, and Yoshua Bengio.
2017.
Graph attention networks.
arXiv preprint
arXiv:1710.10903.
Shuai Wang, Sahisnu Mazumder, Bing Liu, Mianwei
Zhou, and Yi Chang. 2018. Target-sensitive mem-
ory networks for aspect sentiment classiﬁcation. In
Proceedings of the 56th Annual Meeting of the As-
sociation for Computational Linguistics (Volume 1:
Long Papers), pages 957–967.
Wenya Wang, Sinno Jialin Pan, Daniel Dahlmeier, and
Xiaokui Xiao. 2016a. Recursive neural conditional
random ﬁelds for aspect-based sentiment analysis.
arXiv preprint arXiv:1603.06679.
Yequan Wang, Minlie Huang, Li Zhao, et al. 2016b.
Attention-based lstm for aspect-level sentiment clas-
siﬁcation. In Proceedings of the 2016 conference on
empirical methods in natural language processing,
pages 606–615.
Hu Xu, Bing Liu, Lei Shu, and S Yu Philip. 2019.
Bert post-training for review reading comprehension
and aspect-based sentiment analysis.
In Proceed-
ings of the 2019 Conference of the North American
Chapter of the Association for Computational Lin-
guistics: Human Language Technologies, Volume 1
(Long and Short Papers), pages 2324–2335.
Wei Xue and Tao Li. 2018. Aspect based sentiment
analysis with gated convolutional networks. In Pro-
ceedings of the 56th Annual Meeting of the Associa-
tion for Computational Linguistics (Volume 1: Long
Papers), pages 2514–2523.
Chen Zhang, Qiuchi Li, and Dawei Song. 2019.
Aspect-based sentiment classiﬁcation with aspect-
speciﬁc graph convolutional networks. In Proceed-
ings of the 2019 Conference on Empirical Methods
in Natural Language Processing and the 9th Inter-
national Joint Conference on Natural Language Pro-
cessing (EMNLP-IJCNLP), pages 4560–4570, Hong
Kong, China. Association for Computational Lin-
guistics.
Yuhao Zhang, Peng Qi, and Christopher D. Manning.
2018. Graph convolution over pruned dependency
trees improves relation extraction. In Proceedings of
the 2018 Conference on Empirical Methods in Nat-
ural Language Processing, Brussels, Belgium, Octo-
ber 31 - November 4, 2018, pages 2205–2215. Asso-
ciation for Computational Linguistics.

