 
 
Intro  to  Github and Git  
Sasan Bahadaran  
May 9,  2017  

 
Commerce Data Academy 
●  A data education initiative of the Commerce Data Service. 
●  Launched by CDS to offer data science, data engineering, and 
web development training to employees of the US 
Department of Commerce. 
● Course schedule and materials (e.g. slides, code, papers)  
produced for the Commerce Data Academy on Github.  
●  Questions? Feel free to write us at Data Academy 
(dataacademy@doc.gov). 

 
Goals 
Our goals for the class 
●  Explain and make the case for version control. 
●  Collaboration in coding/software engineering. 
●  Illustrate what Git software is and what it can do. 
●  Differentiate Git (the software) and Github (the website).  
●  Describe how we integrate Git and Github into our project 
workflows. 

 
Goals 
Your goals for the class 
●  Understand what version control is and why should you use it 
for your projects. 
●  Start using Git on the command line. 
●  Experiment with pushing repos to Github. 
●  Practice working with a team using Waffle.io. 

Prerequisites 
1. Create your own Github account 
2. Create your own Waffle.io account 
3. Download/install Git 
4. Download/install Anaconda's Python distribution 
5. Verify your access to Terminal (Mac) or Powershell (Windows)  
Any challenges? Questions? 

 
Open Sources Installations 
●  We use open source and free software, so they should have a minimal impact on 
your IT department! 
●  DOC has provided guidance that states that states that Github and all the tools 
that we are teaching are permissible under policy. 
●  However, it is up to the CIO of each bureau to accept this guidance policy or not.  
● DOC has a formalized Github policy: https://github.com/CommerceGov/Policies­
and-Guidance/blob/master/GithubGuidanceforDepartmentofCommerce.md  

Review  

What is data science?  

 
 
 
 
“Data science is the practice of transforming raw data into insights, products, 
and applications to empower data-driven decision making. It combines 
proven, time-tested methods from fields including statistics, natural sciences, 
computer science, operations research, and design in ways that are 
particularly well-suited to the data age. These methods, which range from 
data mining and visualization to predictive modeling, can scale from small to 
large datasets and can handle structured data as well as unstructured data 
like text and images.” 
Jeff Chen, Chief Data Scientist 
U.S. Department of Commerce 

 
How is data science different from  
data analytics?  

What is hypothesis-driven development?  

COMMERCE 
DATA SERVICE 
rt~poth~i~ Dviv~n o~v~loprvi~n+ ThoughtWorks· 
We Believe That 
~ fht~ C--Jf Jbt j/f1> 
Will Result In 
~ fh/~ OfJfCAJfYle-> 
We Will Know We Have Succeeded When 
<.. we- i;e-e- a rne-at;wab/e- t;igtial> 

What tools do data scientists use?  

What is the data science pipeline?  

Data Ingestion 
Data Munging and 
Wrangling 
Computation and 
Analyses 
Modeling and 
Application 
Reporting and 
Visualization 

What is a data product?  

 
How are data products different from  
analytical insights?  

 
 
 
 
 
Data products are self-adapting, broadly 
applicable economic engines that derive 
their value from data and generate more 
data by influencing human behavior or by 
making inferences or predictions upon new 
data. 
Benjamin Bengfort 

What is software engineering?  

What does collaboration look like in a  
data group?  

COMMERCE 
DATA SERVICE 

COMMERCE 
DATA SERVICE 

COMMERCE 
DATA SERVICE 
Backlog 
waffleio/serenity 
24 
uniforms 
31 
Itrainjob I 
22 
Ihospitaljob IQ ,FiiNF 
32 
W .f$f,l&.F 
check ship for survivors 
'!II :. 
secure identification, keycards, and 
0 
­
lower onto train and secure cargo 
repair ambulance shuttle 
..... :. 
capture an Alliance anti-aircraft gun 
:. 
1--1-"lo 
collect package from post master 
:. 
Ready 
20 
disable explosive set by trap 
II 
18 
recover hidden loot at Canton 
financial 
..... :. 
4 
retrieve cargo from train 
I ttain job I enhancement 
30 
join Mal in boarding train 
[ trainjob I 
21 
collect remaining funds to pay for 
shipmates release 
financial 
\I 
-
1-" lo 
In Progress 
.... 
alert others of distress call 
fix ship's engine problem 
mmm 
• 1-"L II 
13 
unload and pen cattle 
M .MMU.i 
"""L II 
get cargo from abandoned carrier 
Done 
29 
find a brand new compression coil for the 
steamer. 
wontfix 
find a captain for t h
Istartup I 
e ship 
II 
27 
find a mechanic for the ship 
Istartup I 
II 
16 
buy a solid ship 
Istartup I 
() .. " II 

Version Control  

Examples?  

COMMERCE 
DATA SERVICE 
Google Drive 
I~ SharePoint 
rop ox 
Tortoise SVN
8Bitbucket 

What is version control?  
Other names?  
What problems does this solve?  
What are the benefits?  
What are some common features?  

Definition: 
The management of changes to electronic documents 
and, in particular, computer programs. 

 
 
“In computer software engineering, revision control is any 
kind of practice that tracks and provides control over 
changes to source code.” 
Wikipedia knows everything 

 
Tell us about a time when you could have used some  
version control...  

Local Version Control Systems  

 
Version Control:  
A Visualization  

COMMERCE 
DATA SERVICE 
Checkout 
File 
Local Computer 
Version Database 
Version 3 
Version 2 
Version 1 

1 
2 
A 
3 
B 
4 
C 
5 
6 
Branches and revisions through time - example scenario 

COMMERCE 
DATA SERVICE 
Aug 
27 
28 
5 
J 
l 
Branches and revisions through time - actual workflow  

Distributed vs. Centralized  

 
 
Centralized 
What are the 
benefits? 
What are the 
weaknesses? 

 
 
Decentralized 
What are the 
benefits? 
What are the 
weaknesses? 

Git  

COMMERCE 
DATA SERVICE 
• git --distributed-is-the-new-centralized 
Git is a free and open source distributed version control system 
designed to handle everything from small to very large projects 
with speed and efficiency. 
Git is easy to learn and has a tiny footprint with lightning fast 
performance. It outclasses SCM tools like Subversion, CVS, 
Perforce, and ClearCase with features like cheap local branching, 
convenient staging areas, and multiple workflows. 
· · Learn Git in your browser for free with Try Git. 
00 
About 
m 
Documentation 
The advantages of Git 
Command reference pages, Pro 
compared to other source 
Git book content, videos and 
control systems. 
other material. 
~ 
Downloads 
p~ 
Community 
GUI clients and binary releases 
Get involved! Bug reporting, 
for all major platforms. 
mailing list, chat, development 
and more. 
Q. Search entire site ... 
Installing Git  

COMMERCE 
DATA SERVICE 
Installing on Windows 
There are also a few ways to install Git on Windows. The most official build is available for download on 
the Git website. Just go to http:llgit-scm.comldownloadlwin and the download will start automatically. Note 
that this is a project called Git for Windows, which is separate from Git itself; for more information on it, go 
to https:llgit-for-windows.github.iol. 
Another easy way to get Git installed is by installing GitHub for Windows. The installer includes a 
command line version of Git as well as the GUI. It also works well with Powershell, and sets up solid 
credential caching and sane CALF settings. We'll learn more about those things a little later, but suffice it 
to say they're things you want. You can download this from the GitHub for Windows website, at 
http://windows.github.com. 
Installing Git  
http://git-for-windows.github.io/  

Installing Git 
http://git-scm.com/download/mac 

 
● Originally conceived/created by Linus Torvalds (after a fight with BitKeeper)  
● Distributed Version Control 
● Open Source 
● Initial release: 7 April 2005 
● All metadata is stored in the .git directory 
Git - History Lesson  

 
● Speed 
● Simple design 
● Strong support for non-linear development (thousands of parallel branches) 
● Fully distributed 
● Able to handle large projects like the Linux kernel efficiently (speed and data size)  
Git - Advantages  

 
 
Object Database 
where git stores metadata about each commit  
Index / Staging Area 
file snapshots to be included in next commit 
Working Directory 
the “physical” files on a computer 
Git - “Places”  

 
 
Committed 
data is safely stored in your local object database 
Staged 
marked such that the current state of the modified file will be 
included in the next commit 
Modified 
changed but not staged or committed 
Git - “Stages”  

 
COMMERCE 
DATA SERVICE 
Working 
Directory 
Staging 
Area 
. git directory 
(Repository) 
Git - Areas/places  

Git Commands  

 
 
 
git init 
create a new git repository to manage the current folder 
git clone <repository address> 
downloads an existing git repository for the first time 
git add <file path> 
marks individual/modified files to be added to the index/staging area for next 
commit 
git commit -m <message> 
takes metadata/changes from staging and adds to the object database 
Git - Basic Commands  

 
 
git fetch <server> <branch> 
updates your object database but does not change the working directory 
git merge <source branch> 
applies the commits from source branch to the current working directory 
(which is the manifestation of another branch) 
git pull <server> <branch> 
performs a fetch and then merges those changes into your working directory  
git push <server> <branch> 
sends your latest branch commits to the remote server 
Git - Basic Commands  

 
Git Challenge (20 minutes)  
https://try.github.io/levels/1/challenges/1  

Github  

COMMERCE 
DATA SERVICE 

Github 
● A remote git repository 
● A website 
○ provides secure access 
○ provides repository metadata & reports 
○ provides tools for development teams 
● Launched: April 10, 2008 
● ~10 million users in 2015 

COMMERCE 
DATA SERVICE 
0 
• 
0 
0 
• 
• 
Non-local git repositories are called “remotes”  

 
 
Object Database 
where git stores metadata about each commit  
Index / Staging Area 
file snapshots to be included in next commit 
Working Directory 
the “physical” files on a computer 
Git - “Places”  

COMMERCE 
DATA SERVICE 
Server Computer 
Version Database 
Version 3 
Version 2 
Version 1 
Computer A 
Computer B 
Version Database 
Version Database 
Version 3 
Version 3 
Version 2 
Version 2 
Version 1 
Version 1 
Github: A Distributed Version Control example  

 
● The “origin” remote is automatically created when you clone  
● It is the default remote to use for pushing and pulling 
● There is nothing special about “origin” it is just a default name  
Git - “Origin”  

User Account  

• 
•• 
• 
•• • • • 
• • • • • 
• • 
• • 
••• 
• • 
•••• 
•• • ••• 
•• • ••• 
••• 
• •• 
• 
• 
COMMERCE 
DATA SERVICE 
0 
Search GitHub 
Rebecca Bilbro 
rebeccabilbro 
\'.) Washington, DC 
C9 Joined on Sep 13, 2014 
17 
11 
39 
Followers 
Starred 
Following 
Organizations 
MO
•u O 
Pull requests 
Issues 
Gist 
,. Edit profile
[±]Contributions 
!Q Repositories 
3;\ Public activity 
v 
Popular repositories 
Repositories contributed to 
xbus-503-ipython-demos 
8 DistrictDataLabs/Blogs 
o* 
o* 
v 
Demonstration code for XBUS-503 Data Wran... 
Data Science related biogs for DDL 
calendar 
!Q CommerceData../recordtagger 
o* 
o*
Building a simple Python application - Calenda... 
NOAA metadata record tagger that implement... 
v capstone 
8 CommerceData../newexporters 
o* 
o* 
v 
Capstone project as part of Data Analysis certi... 
building a predictive model for new exporters 
Colonials 
!Q DistrictDataLabsltrinket 
o* 
3* 
v 
GT Colonials 
Multidimensional data explorer and visualizatio... 
dashboards 
!Q georgetown-an... /sql-tutorial 
o* 
1*
Responsive dashboard templates for Bootstrap 
A brief tutorial on SOL with Python (using SQL... 
Contributions 
Mar 
Apr 
May 
Jun 
Jul 
Aug 
Sep 
Oct 
Nov 
Dec 
Jan 
Feb 
M 
• 
• 
• • • 
••• 
w 
• 
• ••• • • 
Summary of pull requests, issues opened, and commits. Learn how we count contributions. 
Less 
• 
More 

Repo  

COMMERCE 
DATA SERVICE 
0 
This repository 
Search 
Pull requests 
Issues 
Gist 
i;;J rebeccabilbro I orlo 
0Unwatch• 
*Star 
VFork 
<>Code 
CD Issues 4 
1 Pull requests o 
Wiki 
-+.- Pulse 
1!J Graphs 
0 Settings 
A tour of ROC curves -
Edit 
iLl 19 commits 
ii 1 branch 
'V O releases 
1 contributor 
Branch: master· 
New pull request 
New file 
Upload files 
Find file 
SSH· 
gi t@g i thub. com : r ebeccabill @ 
Download ZIP 
• 
rebeccabilbro added method to guess the label column 
ii data 
starting to flesh out bulk ingest method for UGI data 
ii figures 
added precision recall image 
~ .DS_Store 
basic implementation of roe curve plotter 
~ .gitignore 
basic implementation of roe curve plotter 
~ LICENSE 
Initial commit 
~ README.md 
added plotting template to readme 
~ classi.py 
added method to guess the label column 
~ ingest.py 
added randomizer to ingest 
~ roc.py 
basic implementation of roe curve plotter 
Latest commit 382b9ca 4 days ago 
16 days ago 
19 days ago 
9 days ago 
9 days ago 
19 days ago 
9 days ago 
4 days ago 
9 days ago 
9 days ago 
lillJ README.md 

Command Line  

Shifting to the command line...  

COMMERCE 
DATA SERVICE 
Windows 
On Windows we're going to use PowerShell. People used to work with a program called cmd.exe, but it's not nearly as usable as 
PowerShell. If you have Windows 7 or later, do this: 
• Click Start. 
• In "Search programs and files" type: powershell 
• Hit Enter. 
Mac OSX 
For Mac OSX you'll need to do this: 
• Hold down COMMAND and hit the spacebar. 
• In the top right the blue "search bar" will pop up. 
• Type: terminal 
• Click on the Terminal application that looks kind of like a black box. 
• This will open Terminal. 
• You can now go to your Dock and CTRL-click to pull up the menu, then select Options->Keep In Dock. 
Now you have your Terminal open and it's in your Dock so you can get to it. 

Mac OSX Terminal 
Windows Powershell 
Where am I? 

Mac OSX Terminal 
Windows Powershell 
What’s my name? 

Mac OSX Terminal 
Windows Powershell 
Make a directory 
> mkdir temp 
> mkdir temp/stuff 
> mkdir temp/stuff/things 
> mkdir temp/stuff/things/frank/joe/alex/john 
> 

 
Mac OSX Terminal 
Windows Powershell 
Change between directories 
> cd temp 
> pwd 
> 
$ cd temp 
$ pwd 
$ 

Mac OSX Terminal 
Windows Powershell 
List files and directories 
> dir 
> 
$ ls 
$ 

 
Mac OSX Terminal 
Windows Powershell 
Make an empty file 
> cd temp 
> New-Item iamcool.txt -type file 
> dir 
> 
$ cd temp 
$ touch iamcool.txt 
$ ls 
$ 

 
Zed Shaw’s 
book 

Let’s use what we’ve learned!  

Merge Conflict Workshop (20 minutes):  
http://bit.ly/xbus501-workshop-git  

COMMERCE 
DATA SERVICE 
working 
local 
Glthub
Index
directory 
repo 
repo 
Revert 
diff-cached 
fetch 
checkout HEAD 
Compare 

Teamwork  
(makes the dream work!)  

Organization  

COMMERCE 
DATA SERVICE 
0 
This organization 
Search 
Pull requests 
Issues 
Gist 
Commerce Data Service 
A startup within DOC focused on building data products with and for the bureaus. 
Washington DC 
http:Jlwww.commerce.gov... 
data@doc.gov 
IQ Repositories 
@ People 20 
{!!l Teams 4 
Fiiters ~ 
Q Find a repository ... 
+ New repository 
People 
20 > 
DataService_ WebSite 
JavaScript * 1 V4 
IV forked from timwood/DataCorps_ WebSite 
The website for the Commerce Data Service - A startup within the Department of 
Commerce 
Updated 19 hours ago 
ITA_Principal_ Travel 
css *o V& 
Updated a day ago 
Commerce_Data_Academy _Courses 
Course materials offered by the Commerce Data Academy 
Updated a day ago 

Waffle  

COMMERCE 
DATA SERVICE 
Distric!Datalabs/trinket 
Backlog 
S6 
Better Licensing 
-
type:feature 
SS 
username check 
priority: medium 
type: bug 
so  
Dataset Searching  
priority: medium 
type: feature 
Dataset Overwrite  
-
type: tec.hnicaldebt  
4S 
500 error on upload w/ missing col/row values 
AJAXify the uptoader  
priority: medium 
type: featurC"  
*·'·#OM 
0 
0 
0 
~" " 
0 
~" . 
(') 
~" " 
(') 
~" •
38 
3Dtours 
0 
~" .. 
37 
Sampling technique for bigger datasets 
0 
~" .. 
Feature nomination tool for visualization 
Ready 
In Progress 
Done 
• 
S4 
14 
Data file uploading 
Research Auto-analysis Feature 
Done 
lversiono.31 -
type:feature 
0 
IVersion 0.3 I priority: medium 
question 
task 
0
~" . 
• 
Issues closed in the last week are shown in this 
43 
10 
column. Drag issues here to close them. 
Implement beta auto analysis 
Dropdown Dataset Edit Form 
lversiono.31 -
type:feature 
(') ·• 
IVersion 0.3 I priority: medium 
type: feature 
~" . 
Async Upload with Celery 
IVersion 0.3 I priority: medium 
type: feature 
·• 
13 
Dimension Histograms and Ranking: 10 
IVersion 0.3 I priority: medium 
type: feature 
0 ·• 
Large files "hang" uploader 
type: bug
lversiono.3IBlll 
(") 
~" . 
Upload Error: line contains NULL byte  
IVersiono.3 IBlll type: bug 
(")  
~" . 
36 

Pair programming:  
Make your own waffle!  

Communication:  
Commit Messages  

git commit -m “try to be as helpful as possible”  
(To your team and to future you)  

Why?  

Why do data scientists need version  
control?  

 
Data Ingestion 
Data Munging and 
Wrangling 
Computation and 
Analyses 
Modeling and 
Application 
Reporting and 
Visualization 
Where does version control fit into the  
data science pipeline?  

Folder structure conventions on Github  

README.md  

.gitignore  

/fixtures  

requirements.txt  

Where to go from here?  

Additional Tutorials 
http://pcottle.github.io/learnGitBranching/ 
http://rogerdudler.github.io/git-guide/ 
http://www.tutorialspoint.com/git/ 

 
 
 
 
 
 
 
 
 
 
 
  
 
 
Resources 
Git Desktop : https://desktop.github.com/ 
TortoiseGit: https://tortoisegit.org/ 
Git Cheat Sheet: https://training.github.com/kit/downloads/github-git-cheat-sheet.pdf 
Getting Started: https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control 
Basics: https://git-scm.com/book/en/v2/Git-Basics-Getting-a-Git-Repository 
Branching: https://git-scm.com/book/en/v2/Git-Branching-Branches-in-a-Nutshell 
Github Setup: https://git-scm.com/book/en/v2/GitHub-Account-Setup-and-Configuration 
Git Tools: https://git-scm.com/book/en/v2/Git-Tools-Revision-Selection 
Git Commands: https://git-scm.com/book/en/v2/Git-Commands-Setup-and-Config 

