Advances in Experimental Medicine and Biology   797
An Introduction
to Markov State 
Models and
Their Application 
to Long Timescale 
Molecular Simulation
Gregory R. Bowman
Vijay S. Pande
Frank Noé Editors

Advances in Experimental Medicine
and Biology
Volume 797
Editorial Board:
IRUN R. COHEN, The Weizmann Institute of Science, Rehovot, Israel
ABEL LAJTHA, N.S. Kline Institute for Psychiatric Research, Orangeburg,
NY, USA
JOHN D. LAMBRIS, University of Pennsylvania, Philadelphia, PA, USA
RODOLFO PAOLETTI, University of Milan, Milan, Italy
For further volumes:
www.springer.com/series/5584

Gregory R. Bowman r Vijay S. Pande r
Frank Noé
Editors
An Introduction
to Markov State
Models and
Their Application
to Long Timescale
Molecular Simulation

Editors
Gregory R. Bowman
University of California
Berkeley, CA, USA
Vijay S. Pande
Department of Chemistry
Stanford University
Stanford, CA, USA
Frank Noé
Freie Universität Berlin
Berlin, Germany
ISSN 0065-2598
ISSN 2214-8019 (electronic)
Advances in Experimental Medicine and Biology
ISBN 978-94-007-7605-0
ISBN 978-94-007-7606-7 (eBook)
DOI 10.1007/978-94-007-7606-7
Springer Dordrecht Heidelberg New York London
Library of Congress Control Number: 2013956358
© Springer Science+Business Media Dordrecht 2014
This work is subject to copyright. All rights are reserved by the Publisher, whether the whole
or part of the material is concerned, speciﬁcally the rights of translation, reprinting, reuse of
illustrations, recitation, broadcasting, reproduction on microﬁlms or in any other physical way,
and transmission or information storage and retrieval, electronic adaptation, computer software,
or by similar or dissimilar methodology now known or hereafter developed. Exempted from this
legal reservation are brief excerpts in connection with reviews or scholarly analysis or material
supplied speciﬁcally for the purpose of being entered and executed on a computer system, for
exclusive use by the purchaser of the work. Duplication of this publication or parts thereof is
permitted only under the provisions of the Copyright Law of the Publisher’s location, in its
current version, and permission for use must always be obtained from Springer. Permissions for
use may be obtained through RightsLink at the Copyright Clearance Center. Violations are liable
to prosecution under the respective Copyright Law.
The use of general descriptive names, registered names, trademarks, service marks, etc. in this
publication does not imply, even in the absence of a speciﬁc statement, that such names are
exempt from the relevant protective laws and regulations and therefore free for general use.
While the advice and information in this book are believed to be true and accurate at the date of
publication, neither the authors nor the editors nor the publisher can accept any legal responsi-
bility for any errors or omissions that may be made. The publisher makes no warranty, express
or implied, with respect to the material contained herein.
Printed on acid-free paper
Springer is part of Springer Science+Business Media (www.springer.com)

Contents
1
Introduction and Overview of This Book . . . . . . . . . . . .
1
Gregory R. Bowman, Vijay S. Pande, and Frank Noé
2
An Overview and Practical Guide to Building Markov State
Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
7
Gregory R. Bowman
3
Markov Model Theory . . . . . . . . . . . . . . . . . . . . . .
23
Marco Sarich, Jan-Hendrik Prinz, and Christof Schütte
4
Estimation and Validation of Markov Models . . . . . . . . .
45
Jan-Hendrik Prinz, John D. Chodera, and Frank Noé
5
Uncertainty Estimation
. . . . . . . . . . . . . . . . . . . . .
61
Frank Noé and John D. Chodera
6
Analysis of Markov Models . . . . . . . . . . . . . . . . . . .
75
Frank Noé and Jan-Hendrik Prinz
7
Transition Path Theory
. . . . . . . . . . . . . . . . . . . . .
91
Eric Vanden-Eijnden
8
Understanding Protein Folding Using Markov State Models .
101
Vijay S. Pande
9
Understanding Molecular Recognition by Kinetic Network
Models Constructed from Molecular Dynamics Simulations .
107
Xuhui Huang and Gianni De Fabritiis
10
Markov State and Diffusive Stochastic Models in Electron
Spin Resonance . . . . . . . . . . . . . . . . . . . . . . . . . .
115
Deniz Sezer and Benoît Roux
11
Software for Building Markov State
Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
139
Gregory R. Bowman and Frank Noé
v

Contributors
Gregory R. Bowman Departments of Molecular & Cell Biology and Chem-
istry, University of California, Berkeley, CA, USA; University of California,
Berkeley, USA
John D. Chodera Memorial Sloan-Kettering Cancer Center, New York, NY,
USA
Gianni De Fabritiis Computational Biophysics Laboratory (GRIB-IMIM),
Universitat Pompeu Fabra, Barcelona Biomedical Research Park (PRBB),
Barcelona, Spain
Xuhui Huang Department of Chemistry, Division of Biomedical Engineer-
ing, Center of Systems Biology and Human Health, Institute for Advance
Study, The Hong Kong University of Science and Technology, Kowloon,
Hong Kong
Frank Noé Freie Universität Berlin, Berlin, Germany
Vijay S. Pande Department of Chemistry, Stanford University, Stanford,
CA, USA; Stanford University, Stanford, CA, USA
Jan-Hendrik Prinz Freie Universität Berlin, Berlin, Germany
Benoît Roux Department of Biochemistry and Molecular Biology, The Uni-
versity of Chicago, Chicago, USA
Marco Sarich Freie Universität Berlin, Berlin, Germany
Christof Schütte Freie Universität Berlin, Berlin, Germany
Deniz Sezer Faculty of Engineering and Natural Sciences, Sabancı Univer-
sity, Istanbul, Turkey
Eric Vanden-Eijnden Courant Institute, New York University, New York,
NY, USA
vii

Acronyms
ESR
Electron spin resonance
MD
Molecular dynamics (simulation)
MSM
Markov state model
PCCA Perron cluster cluster analysis
TPT
Transition path theory
TPS
Transition path sampling
ix

Mathematical Symbols
T(τ)
A transition probability matrix (row-stochastic) in Rn×n describ-
ing the probabilities of hopping amongst a discrete set of states.
The elements Tij(τ) give the probability of an i →j transition
during a time interval τ.
ˆT(τ)
An estimate of T(τ) from trajectory data.
C(τ)
A transition count matrix (row-dominant) in Rn×n describing the
number of transitions observed amongst a discrete set of states.
The elements cij(τ) count the number of i →j transitions ob-
served, each of which occurred during a time interval τ.
τ
The time resolution (or lag time) of a model.
n
The number of discrete states.
p(t)
A (column) vector in Rn where the entry pi(t) speciﬁes the prob-
ability of being in state i at time t.
π
A (column) vector in Rn where the entry πi speciﬁes the equilib-
rium probability of being in state i.
λi
The i’th largest eigenvalue of a transition probability matrix T .
The largest eigenvalue is λ1 and eigenvalues are ordered such that
1 = λ1 > λ2 > λ3.
ψi
The i’th right eigenvector of a transition probability matrix T in
Rn. The ﬁrst right eigenvector is ψ1.
φi
The i’th left eigenvector of a transition probability matrix T in
Rn. The ﬁrst left eigenvector is φ1.
χi
An indicator function for state i that is 1 within state i and 0 else-
where. It may also refer to the degree of membership in state i.
θi
An experimental observable characteristic of sate i.
qi
The commitor probability for state i. That is, the probability of
reaching some predeﬁned set of ﬁnal states from state i before
reaching some predeﬁned set of initial states.
Ω
A continuous state space (including positions and momenta).
x(t)
A state in Ω (including positions and momenta) at time t.
μ(x)
The stationary density of x.
p(x,y;τ)
The transition probability density to y ∈Ω after time τ given the
system is in x ∈Ω.
xi

xii
Mathematical Symbols
T (τ)
A transfer operator that propagates the continuous dynamics for
a time τ.
m
The number of dominant eigenfunctions/eigenvalues considered.
S1,...,Sn Discrete sets which partition the state space Ω.
μi(x)
The local stationary density restricted to a discrete state i.
⟨f,g⟩
The scalar product ⟨f,g⟩=

f (x)g(x)dx.
⟨f,g⟩μ
The weighted scalar product ⟨f,g⟩μ =

μ(x)f (x)g(x)dx.

1
Introduction and Overview of This Book
Gregory R. Bowman, Vijay S. Pande, and Frank Noé
Computer simulations are a powerful way of un-
derstanding molecular systems, especially those
that are difﬁcult to probe experimentally. How-
ever, to fully realize their potential, we need
methods that can provide understanding, make
a quantitative connection with experiment, and
drive efﬁcient simulations.
The main purpose of this book is to introduce
Markov state models (MSMs) and demonstrate
that they meet all three of these requirements. In
short, MSMs are network models that provide a
map of the free energy landscape that ultimately
determines a molecule’s structure and dynamics.
These maps can be used to understand a system,
predict experiments, or decide where to run new
simulations to reﬁne the map. Protein folding and
function will often be used to illustrate the prin-
ciples in this book as these problems have largely
driven the development of MSMs; however, the
methods are equally applicable to other molecu-
lar systems and possibly entirely different prob-
lems. Whether you are an experimentalist inter-
ested in understanding a bit of theory and how it
G.R. Bowman (B)
Departments of Molecular & Cell Biology and
Chemistry, University of California, Berkeley, CA 94720,
USA
e-mail: gregoryrbowman@gmail.com
V.S. Pande
Department of Chemistry, Stanford University, Stanford,
CA 94305, USA
F. Noé
Institut für Mathematik II, Freie Universität Berlin,
Arnimallee 2-6, 14195 Berlin, Germany
could complement your work or a theorist seek-
ing to understand the details of these methods, we
hope this book will be useful to you.
This introduction provides a brief overview of
the background leading to the development of
MSMs, what MSMs are, and the contents of this
book.
1.1
Background
Molecular systems are exquisitely sensitive to
atomistic details—for example, a single point
mutation can have dramatic effects on protein
folding or function—a complete understanding
would require atomically detailed models that
capture both the thermodynamics and kinetics of
the system of interest. There are many power-
ful experimental methods for probing the struc-
ture and dynamics of molecular systems but, cur-
rently, none can provide a complete understand-
ing of a system.
Structural biologists have developed a range
of methods for building atomically detailed mod-
els of proteins and other molecules; however, we
are far more limited when it comes to dynamics.
For example, when monitoring the relaxation of
an ensemble of unfolded proteins back to the na-
tive state, one typically sees simple behavior that
can be ﬁt well by a single or double exponential.
By Occam’s razor, it is difﬁcult to justify explain-
ing such data with anything more complicated
than a two- or three-state model. To push beyond
these extremely coarse models, one has to be-
gin making perturbations like mutations or trying
G.R. Bowman et al. (eds.), An Introduction to Markov State Models and Their Application to Long Timescale
Molecular Simulation, Advances in Experimental Medicine and Biology 797,
DOI 10.1007/978-94-007-7606-7_1, © Springer Science+Business Media Dordrecht 2014
1

2
G.R. Bowman et al.
to incorporate other experimental data. However,
the sensitivity of many molecular processes to
atomistic changes makes interpreting the effects
of perturbations difﬁcult and combining different
types of experimental data is also nontrivial—for
example, how does one weight the relative contri-
butions of two different types of data to a model?
As a result, while there are certainly many oppor-
tunities in these directions, there is currently no
clear path to building atomically detailed mod-
els for the entirety of a system from experimental
data alone.
An alternative is to develop computer mod-
els that can complement experiment by providing
an unambiguous description of a system’s atomic
motions. Ideally, these models could be validated
by comparison to existing experimental data. One
could then delve into the rich structural and ki-
netic information the model would provide to ex-
plain the origins of experimental results and gen-
erate hypotheses to guide the design of new ex-
periments.
Atomistic molecular dynamics simulations are
one powerful tool for achieving this vision. In
these simulations, one iteratively evaluates the
force each atom experiences due to the other
atoms in the system, calculates where each atom
will be some small timestep in the future, and ﬁ-
nally updates their positions.
Unfortunately, it is extremely challenging to
reach biologically relevant timescales in a molec-
ular dynamics simulation, much less to obtain
sufﬁcient statistics to accurately characterize a
system’s behavior. The large forces and small
length scales involved in such simulations ne-
cessitate a very small timestep—typically on the
order of a femtosecond, or 10−15 seconds. One
must then build up, about one femtosecond at
a time, to the microseconds, milliseconds, and
seconds timescales where many of the molecular
processes of interest typically occur. Simulating a
single millisecond on a typical desktop computer
could easily take hundreds of years and is still es-
sentially intractable with large computer clusters,
though some progress has been made with dis-
tributed computing and specialized hardware.
Many advanced methods have been developed
to overcome this gap between biological and sim-
ulation timescales but none is a magic bullet.
For example, generalized ensemble methods—
like replica exchange—allow a simulation to per-
form a random walk in temperature space. The
hope is that at low temperatures the simulation
will slowly explore the landscape of interest but
that at high temperatures the system can easily
jump to new regions of conformational space.
Such methods are extremely powerful for small
systems where energetic barriers dominate but
can actually perform worse than conventional
molecular dynamics for more complicated sys-
tems where entropic barriers dominate because
these will become even more insurmountable at
high temperatures. Coarse-graining can also pro-
vide reasonable speedups by reducing the number
of pairwise interactions that must be calculated.
However, there is always the danger that the de-
grees of freedom one coarse-grains out are actu-
ally important, in which case the coarse-grained
simulation is of no value.
Even if these advanced methods could access
arbitrarily long timescales, the issue of how to
extract understanding from them would still re-
main. One cannot simply report what happened
in a simulation because molecular processes like
protein folding are inherently stochastic, so the
exact sequence of events in one simulation is ex-
tremely unlikely to appear in a second trajectory.
One common analysis method is to project the
free energy landscape onto order parameters but,
once again, this is not a general solution. Projec-
tions of the free energy surface are really only
valid if the order parameters chosen are truly re-
action coordinates for the process of interest—i.e.
they accurately reﬂect progression from reactants
to products. In a very few cases, it is clear what
the reaction coordinates are. For example, the ala-
nine dipeptide only has two degrees of freedom,
so it is perfectly legitimate to project the system’s
free energy landscape onto these order parame-
ters. However, for processes like protein folding
that occur in extremely high-dimensional spaces,
ﬁnding a reaction coordinate is not so simple. Re-
searchers often project free energy surfaces for
proteins onto popular order parameters, like the
number of native contacts or the RMSD to a
known crystal structure, but one can ﬁnd drasti-
cally different landscapes by choosing different

1
Introduction and Overview of This Book
3
order parameters Therefore, these methods often
do not provide clear and consistent models of
molecular processes.
Clustering the conformations sampled with
a set of simulations based on some geometric
criterion—like the RMSD between conformat-
ions—is a less biased approach but is still not
completely satisfactory. One major advantage of
clustering is that it is less biased than projections
since no reaction coordinate has to be assumed a
priori. Furthermore, once the data has been clus-
tered, many analyses can be performed easily. For
example, comparison of the relative amounts of
time spent in different clusters gives information
about their relative free energies. One can also
attempt to estimate the transition rates between
clusters from the number of transitions observed
between them and then begin looking at the most
probable pathways between arbitrary start and
end points. However, many important questions
remain. For example, how many clusters are nec-
essary and where, exactly, should the boundaries
between them lie? Given two different cluster-
ings, which one is better? Does a given clustering
contain useful information? As will be discussed
in more detail later, many problems can also arise
when trying to estimate kinetic parameters from
these models.
1.2
Markov State Models
A Markov model consists of a network of confor-
mational states and a transition probability ma-
trix describing the chances of jumping from one
state to another in some small time interval. Many
readers will recognize them as discrete time mas-
ter equation models. Importantly, the states in an
MSM are deﬁned based on kinetic criteria rather
than geometric criteria. Therefore, it is possible to
accurately identify the boundaries between free
energy basins and model dynamic processes like
the relaxation to equilibrium.
A Markov model is a coarse-graining of a
system’s dynamics that reﬂects the underlying
free energy landscape that determine’s the sys-
tem’s structure and dynamics. Intuitively, it is
often useful to think of the states in a Markov
model as corresponding to free energy minima.
However, as discussed in the next few chapters,
this is not always necessarily true. Nonetheless,
Markov models can provide important insights
into a molecule because we have a much better in-
tuition for states and rates (or, equivalently, tran-
sition probabilities) then we do for the large num-
bers of three dimensional structures generated by
MD simulations.
The states and rates picture also provides a
natural means to make a quantitative connection
with experiments. For example, it is often possi-
ble to calculate an experimental observable (like
the distance between two probes) for each state.
A set of initial conditions can then be prepared by
populating a subset of states and the relaxation
to equilibrium can be modeled using the transi-
tion probabilities between states. This dynamics
can be projected onto the experimental observ-
able and the resulting signal can be compared to
experiment.
Finally, adaptive sampling methods leverage
Markov models to direct efﬁcient simulations.
In adaptive sampling, one iteratively run simula-
tions, builds a Markov model, and then uses the
current model to decide where to spawn new sim-
ulations to improve the model. Such methods can
lead to tremendous improvements in computa-
tional efﬁciency compared to simply running one
long simulation and waiting for it to gather statis-
tics on the entirety of conformational space.
1.3
Outline of This Book
The remainder of this book can be divided into
two sections. The ﬁrst section, which includes
Chaps. 2 through 7, presents the theoretical foun-
dations of Markov state models. The second sec-
tion, which includes Chaps. 8 through 10, focuses
on a number of exciting applications of Markov
models that serve to demonstrate the value of this
approach. Below, we brieﬂy review the contents
of each chapter.
Chapter 2 provides a more thorough overview
of Markov state models and how they are con-
structed. This discussion includes a description of
the key steps for building an MSM and some of

4
G.R. Bowman et al.
the options available for each stage of the model
building process. An important theme is that there
is no single right way to perform many of these
steps. Therefore, it is valuable to have some un-
derstanding of the tradeoffs between the available
options.
Chapter 3 lays the theoretical foundation of
MSMs. As indicated by the name, Markov mod-
els assume that the current discrete state of the
system is sufﬁcient to know the probabilities of
jumping to any other state in the next time inter-
val, without having to know the previous history.
While the Markov assumption may be correct for
the dynamics in the full-dimensional phase space,
it cannot be exactly correct for the discrete parti-
tion of state space used for the MSM. The asso-
ciated error, i.e. the difference of the MSM ki-
netics from the exact kinetics is a discretization
error. Fortunately, we do not depend on a leap
of faith when constructing MSMs. As a result
of thorough mathematical work, especially dur-
ing the last couple of years, the MSM discretiza-
tion error is now well understood and can even be
quantitatively bounded. Chapter 3 describes the
nature of this error in the absence of additional
statistical error, derives properties that a “good”
partition of state space must fulﬁll, and suggests
advanced approaches for MSM construction that
go beyond simple state decomposition by cluster-
ing.
In practice, constructing MSMs progresses by
deﬁning a partitioning of conformational space
into states and subsequently testing and possibly
reﬁning it. In order to do so, the MD trajectory
data must be mapped on the discrete state space
partitioning, and the MSM transition matrix must
be estimated. Chapter 4 describes this step in de-
tail and derives statistically optimal estimators for
the transition matrix given a dataset and a state
space partitioning. Subsequently, practical tests
are described to assess the quality of the esti-
mated MSM. It is these tests that will report on
success or failure of the MSM to be a consistent
kinetic model, and appropriate steps can be taken,
e.g. by reﬁning the state space partitioning used.
Since an MSM is estimated from a ﬁnite
amount of MD trajectory data, the associated
transition matrix and all properties computed
from it will involve statistical uncertainty. Clearly,
this is an issue for any model of the equilib-
rium or kinetic properties that is built from com-
puter simulations—not just MSMs. Fortunately,
for MSMs we now have a very complete theory
that allows us to quantify these statistical errors
from the number of transitions observed between
the discrete sub-states. Chapter 5 attempts to give
an overview of these methods and then goes into
detail with Bayesian methods to sample the statis-
tical uncertainties of transition matrices, and any
quantity computed from them. Importantly, one
can use estimates of uncertainties from an exist-
ing MSM to decide where to run new simulations
in order to reﬁne the model as efﬁciently as possi-
ble. Such methods are called adaptive sampling.
Chapter 6 gives an overview of some of the
most useful analyses that can be performed with
a valid Markov model. Three aspects are dis-
cussed and illustrated using a toy model of pro-
tein folding. First, we describe the signiﬁcance
of eigenvalues and eigenvectors of MSM transi-
tion matrices. Eigenvalues are related to the relax-
ation timescales of kinetic processes, and eigen-
vectors indicate the associated structural changes.
Consequently, the eigenvectors associated with
the slowest relaxation timescales can be used to
ﬁnd the metastable states of the molecular system
studied. Secondly, the ability to associate relax-
ation timescales with structural changes via the
eigenvalue-eigenvector duality is arguably one of
the main advantages of MSMs over many other
approaches to analyze MD simulation data. It per-
mits one to uniquely assign structural transition
events to experimentally measurable timescales,
which makes MSMs a very valuable tool for
quantitatively comparing simulation and experi-
ment. We can go further and quantitatively pre-
dict the relaxation or correlation functions mea-
sured by kinetic experiments using three ingredi-
ents: the MSM eigenvalues, eigenvectors and the
mean value of the spectroscopic observable for
each discrete state. Chapter 6 describes the asso-
ciated theory.
Finally, MSMs allow us to compute complex
kinetic quantities that may not be directly exper-
imentally accessible. One example is the ensem-
ble of transition pathways and the transition state

1
Introduction and Overview of This Book
5
Fig. 1.1 Overview of the
chapters in this book
ensemble. Given an MSM, both can be easily
computed with transition path theory. Chapter 6
gives an introduction to transition path theory and
illustrates it on the folding of the Pin WW pep-
tide.
Chapter 7 is a theoretical chapter that goes
into more detail on transition path theory. While
transition path theory was originally derived for
continuous Markov processes, this chapter fo-
cuses on its use in conjunction with MSMs and
illustrates it using a simple example—a random
walk in a two-dimensional maze. The basic math-
ematical quantities needed for computing tran-
sition pathways are deﬁned and the equations
for computing them from transition matrices are
given. Furthermore, an approach to efﬁciently
generate samples of reactive trajectories is intro-
duced.
MSMs meet all three of the requirements laid
out at the beginning of this chapter: provid-
ing understanding, making a quantitative con-
nection with experiment, and driving efﬁcient
simulations. The subsequent application chap-
ters will show that MSMs have already proven
consistent with existing experimental data for
a variety of molecular processes, allowed re-
searchers to better understand—and sometimes
even reinterpret—existing data, and led to new
hypotheses that have been borne out in subse-
quent experiments.
Chapter 8 describes the application of Markov
models to the protein folding problem and the
new insights this has provided. This problem has
two major components. First, how can we pre-
dict the structure of a protein from its sequence?
And, second what is the sequence of events that
allows a protein to fold? Besides showing how
Markov models address both of these issues, this
chapter will discuss how MSMs have allowed re-
searchers to study much larger and slower sys-
tems than would otherwise be possible.
Chapter 9 summarizes recent work on using
Markov models to understand how proteins bind
small molecules. This application has important
implications for drug design and our understand-
ing of signaling within cells. It also presents
an interesting methodological challenge because
it is non-trivial to move from studying single-
body problems (like protein folding, where all
the atoms in the system of interest are covalently
linked together) to multi-body problems.
Chapter 10 discusses how Markov models can
be used to connect with new experimental tech-
niques, like electron spin resonance. An impor-

6
G.R. Bowman et al.
tant emphasis is the impressive degree of agree-
ment between simulation and experiment that one
can achieve.
Since the construction, validation and analy-
sis of MSMs is a nontrivial task, the existence of
software that can support the user in these tasks
is crucial. Chapter 11 provides an overview of ex-
isting MSM software packages and their current
capabilities. Clearly, these packages are rapidly
evolving and thus this chapter is just meant as a
starting point. Therefore, links are provided to the
manuals and tutorials of the software packages
described.
Figure 1.1 provides an overview of the chap-
ters of this book. For readers who decide not to
follow the sequence of chapters in the book, we
indicate the dependencies between chapters from
the viewpoint of a practically oriented reader that
is unfamiliar with MSMs. Theoretically inclined
readers may start with the theory sections. Read-
ers familiar with MSMs may read the book chap-
ters in any sequence.

2
An Overview and Practical Guide
to Building Markov State Models
Gregory R. Bowman
The main purpose of this chapter is to provide a
practical guide to building Markov models, with
an emphasis on partitioning a molecule’s confor-
mational space into a valid set of states. This pro-
cess is often referred to as constructing a state de-
composition.
2.1
The Big Picture
The ideal state decomposition method would per-
form a truly kinetic clustering of a data set to ac-
curately resolve the barriers between metastable
states. Unfortunately, there is no simple means to
calculate the average transition time between two
arbitrary conformations.
One alternative would be to build states based
purely on geometric criteria. However, this ap-
proach turns out to be inadequate because there
is no physical reason that the locations of free
energy barriers should correlate with geometric
criteria. For example, two conformations with a
5 Å RMSD could fall within the same free energy
basin if they only differ by pivoting of a hinge
motion while another pair of conformations sep-
arated by the same distance could fall in differ-
ent basins if they differ by strand pairings in a
beta sheet. Mistakenly grouping together confor-
mations that are not within the same free energy
G.R. Bowman (B)
University of California, Berkeley 94720, USA
e-mail: gregoryrbowman@gmail.com
basin can create states with large internal free en-
ergy barriers. Such states will violate the Markov
property because a system that enters the state on
one side of the barrier will behave differently than
one that enters on the other side, thereby intro-
ducing history dependence. Higher order Markov
chains could be used to capture this history de-
pendence, however, doing so greatly increases the
number of parameters that must be determined,
making it harder to obtain sufﬁcient statistics.
Moreover, people generally do not have nearly
as well developed an intuition for processes with
history dependence as we do for Markov models,
so higher order models would provide less under-
standing.
At present, the most common approach for
building MSMs is a two-stage process exploiting
both geometry and kinetics [1–6]. In this two-
stage approach, one uses a kinetically-relevant
geometric clustering to create a starting point for
a more purely kinetic clustering. By kinetically-
relevant, I simply mean a clustering that only
groups conformations together if the system can
transition between them quickly relative to tran-
sitions between clusters.
The objective of the ﬁrst stage is to cre-
ate small volume elements in conformational
space—called microstates—that are essentially
the same structure using a geometric clustering.
The motivation for starting with such a clustering
follows that employed in the study of probability
distribution functions, where one recognizes that
the probability of a single point is vanishingly
small and, therefore, works with small volume
G.R. Bowman et al. (eds.), An Introduction to Markov State Models and Their Application to Long Timescale
Molecular Simulation, Advances in Experimental Medicine and Biology 797,
DOI 10.1007/978-94-007-7606-7_2, © Springer Science+Business Media Dordrecht 2014
7

8
G.R. Bowman
elements instead. At this stage, one would like to
go out of their way to divide phase space as ﬁnely
as possible to ensure that no microstate contains
large free energy barriers. However, this objec-
tive is counterbalanced by the need to maintain
sufﬁcient statistics for each state such that tran-
sition probabilities between each pair of states
can be estimated accurately. Given a set of mi-
crostates that meets these requirements, the tran-
sition probability between a pair of states can be
calculated numerically by counting the number
of times a simulation started in one of them and
ended in the other because now two simulations
have a ﬁnite probability of entering the same vol-
ume element. As discussed shortly, there are a
number of ways to create and validate microstate
models. Such models are excellent for making
a quantitative connection with experiments be-
cause of their high resolution. However, they are
often difﬁcult to understand because they typi-
cally have tens of thousands of states.
To make a more understandable model, one
can perform a kinetic clustering of a kinetically-
relevant set of microstates to form larger aggre-
gates—called macrostates—that correspond to
free energy basins. One objective of this type
of coarse-graining is to create mesoscale mod-
els that are still quantitative but are much more
compact than the initial microstate model. These
models may still be too complex to understand,
however, the reduced state space makes them
much easier to work with. A second objective
is to coarse-grain the model so much that one
can actually understand it. Often, these models
will only be qualitatively correct—no longer able
to make a quantitative connection with experi-
ment. However, such extreme coarse-grainings
are excellent for gaining an intuition for a system
and generating new hypotheses to be tested with
higher resolution models and, ultimately, with ex-
periments.
To summarize, the key steps for building an
MSM are
1. Choose an appropriate distance metric and
cluster your simulation data into microstates.
2. Test the kinetic relevance of this clustering
and choose an appropriate lag time (or obser-
vation interval) based on the Markov time of
the model (smallest lag time that gives Marko-
vian behavior).
3. Estimate the microstate model’s transition
probability matrix.
4. Coarse-grain the model to create either quan-
titative mesoscale models or qualitative mod-
els for guiding one’s intuition.
5. Use the qualitative models to understand your
system and the microstate or mesoscale mod-
els to model experiments.
Following is an explanation of the various al-
ternatives for each of these steps. Throughout this
discussion, a model refers to a transition proba-
bility matrix and one or more representative con-
formations from each state.
2.2
Clustering to Generate
Microstates
The major objective of this step is to construct
a kinetically-relevant clustering using geometric
criteria. Such a clustering should only group to-
gether conformations the system can jump be-
tween rapidly. Many clusterings may satisfy this
requirement, so there is not necessarily a single
right answer. The resulting microstate model can
then be used for making a quantitative connection
with experiment or as a starting point for kinetic
clustering.
Some of the key choices for this step are which
distance metric to use, which clustering algorithm
to use, how many clusters to generate, and which
data to cluster.
2.2.1
Choosing a Distance Metric
It should come as no surprise that creating a
kinetically-relevant clustering is best achieved
with a kinetically-relevant distance metric. In par-
ticular, it is necessary for conformations sepa-
rated by small distances to interconvert rapidly.
Any distance metric that satisﬁes this requirement
is sufﬁcient given inﬁnite data—i.e. the ability
to create an inﬁnitude of inﬁnitely small states.
However, one can typically make far better use
of ﬁnite data by employing distance metrics that

2
An Overview and Practical Guide to Building Markov State Models
9
best capture the relevant dynamics. For exam-
ple, the opening angle may be a good choice for
studying the opening and closing of a hinged-
protein [7].
In leu of an obvious problem speciﬁc metric,
the root-mean-square deviation (RMSD) between
atoms is often a reasonable choice for protein dy-
namics [1, 2, 6]. Large RMSDs are hard to in-
terpret, but two conformations separated by only
a few Å are likely to interconvert rapidly. For
extremely detailed models, the all-atom RMSD
may be useful—though one must be careful about
symmetry issues, like the invariance of Phe to a
180 degree ﬂip. Basing the RMSD on α-carbons
or all backbone heavy atoms is often sufﬁcient
though.
2.2.2
Choosing a Clustering Algorithm
Here, we brieﬂy review a number of the cluster-
ing algorithms currently in use and their relative
merits. There are many other options and there is
great value in assessing their relative merits [5, 8].
For the purposes of this review, however, I hope
only to describe a few of the most common op-
tions with the intent that this analysis will serve
as a guide for evaluating other options.
2.2.2.1 k-Centers Clustering
In k-centers clustering, one tries to create a set of
clusters with approximately equal radii by opti-
mizing the objective function
min
σ max
i
d

xi,σ(xi)

(2.1)
where σ(x) is a function that maps a conforma-
tion (x) to the nearest cluster center and d(x,y) is
the distance between two conformations x and y.
The minimization occurs over all clusterings (σ)
with k states and the max is taken over all con-
formations in the dataset. The radius of a cluster
is just the maximum distance between any data
point in that cluster and the cluster’s center.
One advantage of k-centers is that it divides
up conformational space more evenly than other
algorithms by ensuring that states have similar
radii [9, 10]. Intuitively, one can think of this al-
gorithm as creating clusters with approximately
equal volumes. However, one must take care not
to take this too literally as very small variations
in the radii of clusters in high-dimensional spaces
can give rise to huge variations in their volumes.
Having a more or less even division of conforma-
tional space into microstates is of value because it
helps avoid situations where some regions are un-
necessarily divided into an excess of states while
other regions are not sufﬁciently broken-up to
avoid large internal free energy barriers. Proper-
ties of the model, like the slowest relaxation time,
should also be insensitive to the exact clustering
as long as one purposefully over-divides confor-
mational space into a large number of states.
Another advantage of k-centers is that there
is an extremely fast, deterministic approximation
to this algorithm [9, 10]. This approximate algo-
rithm has an O(kN) runtime, where k is the num-
ber of clusters and N is the number of conforma-
tions being sampled, so it is applicable to even
extremely large data sets. This algorithm works
as follows (Fig. 2.1):
1. Choose an arbitrary point as the initial clus-
ter center and assume all other data points are
initially in that cluster (Fig. 2.1A).
2. Calculate the distance from every other data
point to the current cluster center.
3. Select the furthest point from any existing
cluster center as the next cluster center
(Fig. 2.1B).
4. Calculate the distance from every data point
to this new cluster center and reassign any of
them that are closer to the new center than
their previous cluster center to the new cluster
(Fig. 2.1B).
5. Repeat steps 3 and 4 until some cutoff criteri-
on—like the number of clusters or maximum
size of any cluster—is reached (Fig. 2.1C).
The most appropriate cutoff criterion depends
on the process of interest. For example, creat-
ing clusters until each state has a radius of less
than 3 Å RMSD is often an appropriate starting
point for protein folding, where the relevant con-
formational space is huge and a rather coarse par-
titioning will do. For more subtle conformational
changes where there is a small space and more

10
G.R. Bowman
Fig. 2.1 An example of k-centers clustering of a set of
data points (squares). (A) First, a random data point (white
star) is chosen as the initial cluster center and all data
points are assigned to it (white squares). (B) Next, the data
point furthest from the previous cluster center is chosen as
the next cluster center (black star). All the data points that
are closer to the new cluster center than any existing center
are assigned to the new center (black squares). (C) The al-
gorithm continues choosing the data point that is furthest
from any existing center (in this case the gray star) and
assigning data points that are closer to it to the new center
(gray squares)
detail is required, a cutoff of 1 Å may be a better
starting place.
One disadvantage of k-centers is that build-
ing a viable set of microstates with this algo-
rithm often requires creating a large number of
clusters. For example, modeling the folding of a
35 residue variant of the villin headpiece—one
of the smallest known proteins—still required
10,000 states [11]. As a result, one needs a great
deal of sampling to ensure adequate statistics
for each state. The large number of states also
leads to large microstate transition matrices that
can be computationally demanding to work with.
A more ideal algorithm would use kinetic crite-
ria to have larger or smaller states as needed to
accurately capture the underlying landscape. Fi-
nally, the “centers” created by k-centers are not
necessarily anywhere near the geometric center
of the cluster. Instead, they are often on the pe-
riphery of the cluster because the approximate
algorithm presented here is always choosing the
data point furthest from all the existing clus-
ter centers as the next one and, therefore, is bi-
ased towards choosing data points at the very
edge of the space sampled (Fig. 2.1). Thus, the
cluster centers are not necessarily representa-
tive of the data assigned to them. One must use
other strategies to identify representative con-
formations for a cluster created with k-centers,
like drawing a few random conformations from
it.
2.2.2.2 k-Medoids Clustering
The k- medoids algorithm minimizes the average
distance between data points and the center they
are assigned to by optimizing
1
N

i
d

xi,σ(xi)
2
(2.2)
where N is the number of data points, σ(x) is
a function that maps a conformation (x) to the
nearest cluster center, and d(x,y) is the distance
between two conformations x and y.
The k-medoids algorithm is very similar to k-
means but with the important difference that only
data points can be cluster centers. In k-means, the
cluster center is the average of all the data points
belonging to that cluster. However, taking the av-
erage of a number of protein conformations does
not make physical sense as it can easily lead to
unphysical behavior like steric clashes and ex-
tremely unlikely bond lengths/angles. Thus, k-
medoids is preferable.
One advantage of k-medoids over k-centers
is that k-medoids tends to create clusters with
a more equal number of samples. For exam-
ple, if a data set has a densely sampled region
and a sparsely sampled region, then k-medoids
will tend to place more clusters in the densely
sampled region. This feature is useful in that it
helps avoid states with too few counts to make
statistically reliable estimates of the transition
probabilities to other states. However, k-medoids
may also over-divide some regions of confor-
mational space and under-divide others. For in-

2
An Overview and Practical Guide to Building Markov State Models
11
Fig. 2.2 An example of k-medoids clustering of a set of
data points (squares). (A) First, the user decides how many
clusters to construct (in this case k = 3). Then k random
data points are chosen as initial cluster centers (the three
stars). All data points are then assigned to the closest cen-
ter (as indicated by the color coding). (B) Next, a random
data point in each cluster is proposed as a new cluster cen-
ter (circles). (C) If the newly proposed center is closer on
average to all the data points in the cluster than the pre-
vious center, then it is chosen as the new center for that
cluster (as in the black and white clusters). Otherwise, the
newly proposed center is rejected and the previous cen-
ter is kept (as in the gray cluster). Finally, all the data
points are reassigned to their closest center. Note that this
is an extremely contrived example. Usually there will not
be such a clear distinction between clusters, the number
of clusters will be unclear, and the initial cluster centers
may end up being very close to one another, requiring a
number of iterations of updating before convergence to a
reasonable set of centers
stance, in protein folding, k-medoids is likely to
create many clusters in the folded ensemble and
very few clusters in more sparsely populated un-
folded regions. Therefore, one will get essentially
redundant clusters in the folded ensemble while
mistakenly grouping together kinetically distinct
unfolded conformations into states that violate
the Markov assumption. However, this problem
may not arise for other processes, like conforma-
tional changes, where the relevant regions of con-
formational space may be more evenly sampled.
The k-medoids algorithm works as follows
(Fig. 2.2):
1. Randomly choose k conformations as the ini-
tial cluster centers (Fig. 2.2A).
2. Assign each data point to the closest center.
3. For each cluster C, propose a random data
point z ∈C as the new center (Fig. 2.2B) and
evaluate the change using

xi∈C
d(xi,z)2
(2.3)
If the newly proposed center reduces the ob-
jective function compared to the previous cen-
ter, then replace the current cluster center
with z (Fig. 2.2C).
4. Repeat steps 2 and 3 for a speciﬁed number of
iterations or until the algorithm converges to a
stable result.
To speedup the algorithm further, it is common
to propose a number of possible new centers for
each cluster during step 2.
One advantage of k-medoids is that the result-
ing centers are actually representative of the data
assigned to them because they lie at the center of
the cluster. A disadvantage is that the number of
clusters must be chosen a priori, compared to k-
centers where it is possible to choose a physically
meaningful criterion for determining the number
of states.
2.2.2.3 Hybrid k-Centers/k-Medoids
Clustering
A hybrid approach has been developed to strike a
balance between the strengths and weaknesses of
the k-centers and k-medoids algorithms [4]. This
algorithm simultaneously optimizes the objective
functions for both k-centers (Eq. (2.1)) and k-
medoids (Eq. (2.2)) as follows:
1. Perform an approximate k-centers clustering,
as in Sect. 2.2.2.1.
2. Update the centers with a number of iterations
of the k-medoids update step (Steps 2 and 3 of
the k-medoids algorithm in Sect. 2.2.2.2), re-
jecting any proposed moves that increase the
k-centers objective function in Eq. (2.1).
This hybrid approach appears to be a good,
general purpose method for building microstate
models. For example, like k-centers, this method

12
G.R. Bowman
still gives a more even discretization of confor-
mational space than a pure k-medoids cluster-
ing and one can specify a physically meaning-
ful criterion for determining the number of states
to create. The k-medoids update step also results
in cluster centers that are representative of the
data assigned to them. More importantly, using
this update step shifts the centers to the densest
regions of conformational space within a state,
leading to better resolution of the boundaries be-
tween states. As a result, this algorithm yields
shorter Markov times with fewer states. Having
fewer states means each one has better statis-
tics and less data is required to parameterize the
model.
There is still room for improving upon this
hybrid approach though. For instance, this algo-
rithm still tries to avoid states with large internal
barriers by creating a large number of clusters.
As discussed previously, parameterizing models
with more states requires more data to obtain suf-
ﬁcient statistics and large transition matrices can
be challenging to work with.
2.2.3
Subsampling
One ﬁnal question that deserves some consider-
ation is which data to cluster. In an ideal case,
where one could perform a purely kinetic cluster-
ing of simulation data, the answer to this ques-
tion would be simple: cluster all the data. How-
ever, using all the data is not always optimal when
starting off with a geometric clustering. For ex-
ample, an RMSD-based k-centers clustering will
select every structural outlier as a cluster cen-
ter before starting to subdivide the well-sampled
regions of conformational space. There are also
practical limitations, like the number of confor-
mations that can be stored in memory on typical
computers.
Using a subsample of ones data to deﬁne a set
of microstates can lead to better models because
this strategy reduces the impact of outliers [11].
Put another way, clustering a subsample of one’s
data focuses the cluster centers on the better
sampled regions of conformational space. After
deﬁning a state space based on a subsample of the
data, one can then assign all the data to these mi-
crostates, thereby obtaining more statistics. Out-
liers will then be absorbed into the closest clus-
ter, where they will have little impact on the qual-
ity of the model. For protein folding—which typ-
ically occurs on time scales of a microsecond
or longer—a fruitful procedure has been to store
conformations every 1 ns, cluster conformations
sampled at a 10 ns interval, and then assign all the
data to the resulting microstates.
2.3
Estimating Transition Matrices
In theory, estimating a transition matrix should
just be a matter of counting. The ﬁrst step is
to assign data to clusters, which we will num-
ber from 0 to n −1. Now each trajectory can
be thought of as a series of microstate assign-
ments rather than as a series of conformations.
The number of transitions between each pair of
states can then be counted and stored as a tran-
sition count matrix (C), where Cij is the num-
ber of transitions observed from state i to state j.
With inﬁnite data, one could just use the maxi-
mum likelihood estimate for the transition prob-
ability between each pair of states to convert the
transition count matrix into a transition probabil-
ity matrix (T ). That is,
Tij(τ) =
Cij

k Cik
(2.4)
where τ is the lag time of the model. However, in
practice, estimating transition matrices is compli-
cated by a number of issues, like ﬁnite sampling
and imperfections in microstate deﬁnitions.
2.3.1
Counting Transitions
Counting transitions sounds like a simple task,
but there are actually a variety of options that
must be considered. First of all, one must choose
a lag time at which the model satisﬁes the Markov
assumption—as discussed in the next section.
Choosing an appropriate lag time actually re-
quires estimating transition matrices at a variety

2
An Overview and Practical Guide to Building Markov State Models
13
Fig. 2.3 An example of the two methods of counting
transitions, assuming a 4-step lag time. Each panel shows
a trajectory as a series of state indices (i.e. assuming the
states have been numbered from 0 to n−1). The top panel
shows how the ﬁrst three transitions would be counted us-
ing the sliding window approach (brackets). All three tran-
sitions are from state 0 to 2. The bottom panel shows how
to ensure independent counts. The three transitions (indi-
cated with brackets) are from state 0 to 2, from state 2 to 2,
and from state 2 to 1
of lag times, so we will cover the process of esti-
mating these matrices ﬁrst.
In an ideal case, where one has an excess of
data relative to the slowest relaxation time in the
system, one could simply look at independent
transitions at the lag time (τ). That is, one could
look at the state indices at an interval of τ. As
shown in Fig. 2.3, one could then count transi-
tions as σ(0) →σ(τ), σ(τ) →σ(2τ), σ(2τ) →
σ(3τ)... where σ(t) is the state index of the sim-
ulation at time t. However, with ﬁnite data, this
can lead to imprecise estimates of transition prob-
abilities due to model uncertainty.
Practically, it is often useful to use a sliding
window approach. In this approach, one assumes
conformations were sampled at a regular inter-
val Δ, where Δ < τ. For example, one could
store conformations every 100 ps and have a lag
time of 10 ns. As shown in Fig. 2.3, one could
then count transitions as σ(0) →σ(τ), σ(Δ) →
σ(Δ + τ), σ(2Δ) →σ(2Δ + τ)... where σ(t)
is the state index of the simulation at time t. The
sliding window approach will give a more pre-
cise estimate of transition probabilities but will
lead to underestimates of model uncertainty (see
Sects. 4.1 and 5.1).
The sliding window approach is recommended
for estimating maximum likelihood transition
matrices as precisely as possible. Counting in-
dependent transitions should be used when esti-
mating model uncertainty.
2.3.2
Detailed Balance
Another major issue is satisfying detailed bal-
ance—also called microscopic reversibility. That
is, every time there is a transition from state i
to j, there should also be a compensating transi-
tion from state j to i. Without this property, one
would get source and sink states that would pre-
vent the model from accurately describing long
time scale behavior.
Poorly sampled microstates are one issue that
can break detailed balance. In particular, some
states may have a single transition into or out
of them. A simple maximum likelihood estimate
of transition probabilities would then turn these
states into sources or sinks. Therefore, it is often
useful to trim off these states [4, 12, 13].
One must also satisfy detailed balance be-
tween every pair of states. One simple way of en-
forcing detailed balance is to assume that every
time there is a transition from state i to j, there
must be a corresponding transition from state j to
i. The maximum likelihood estimate of the num-
ber of transitions from state i to j is then
ˆCij(τ) = Cij + Cji
2
(2.5)
where ˆCij is an estimate of the reversible counts
from state i to j and Cij are the number of transi-
tions actually observed. This method is perfectly
valid if one has true equilibrium sampling. Fur-
thermore, it is extremely robust in the sense that
this algorithm will always give an estimate of
the transition probability matrix that is consis-
tent with the original data. However, if one has
limited data, as is often the case, then one’s esti-
mate of the transition probability matrix will be
extremely biased towards the starting conditions
of their simulations. For example, the equilibrium
probability of each state will just be proportional
to the number of data points in it.
One alternative is to use maximum likelihood
methods that try to estimate the reversible tran-
sition probability matrix that is most likely to

14
G.R. Bowman
have given rise to the observed data [4, 5, 11].
These methods will be described in more detail in
Sect. 4.6. Here, I will just note that these methods
are extremely powerful when they work. How-
ever, at present, they often fail to converge or
converge on transition probability matrices that
over-emphasize the importance of poorly sam-
pled states.
2.3.3
Ergodicity
One ﬁnal point is that a valid MSM must be er-
godic. That is, the network of states must be fully
connected. Physically, this means that it is pos-
sible to reach any state from an arbitrarily cho-
sen starting state. Disconnected components can
arise when different initial conformations are em-
ployed and sufﬁcient sampling is not obtained to
observe mixing (or overlap) between simulations
started from different structures. When this hap-
pens, it is impossible to determine the relative
equilibrium probabilities of disconnected compo-
nents or the probabilities of transitions between
them. Two possible solutions are (1) to discard all
but one of the components (typically the largest
one) [4, 12, 13] or (2) to collect more data until
the network of states becomes completely con-
nected.
2.4
Model Validation and Lag Time
Selection
Before drawing any conclusions from a model, it
is crucial to test whether or not it is kinetically-
relevant and to choose an appropriate lag time.
The dynamics of a perfectly speciﬁed system,
including solvent degrees of freedom and every
atom’s velocity, is certainly Markovian because
the next conformation is simply a determinis-
tic function of the system’s current state. How-
ever, even microstate models effectively coarse-
grain the system. For example, conformations are
grouped together and water degrees of freedom
are often ignored. Therefore, both microstate
models and coarse-grainings thereof may only be
Markovian at longer time scales, if at all. As dis-
cussed previously, large internal barriers can lead
to models that violate the Markov assumption.
2.4.1
Tests Based on the
Chapman-Kolmogorov Equation
Many tests of model validity make use of the
Chapman-Kolmogorov equation
T (nτ) = T (τ)n
(2.6)
where n is an integer number of steps, each one
lag time τ in length. This equation captures the
fact that taking n steps with an MSM with a lag
time of τ should be equivalent to an MSM with a
lag time of nτ.
Plotting the relaxation time scales of a mod-
el—also called its implied time scales—as a func-
tion of the lag time is one use of the Chapman-
Kolmogorov equation that provides some model
validation and a means of choosing an appropri-
ate lag time [14]. As will be discussed in more
detail in Sect. 3.2, the relaxation times of a model
are a function of the eigenvalues of its transition
probability matrix
ti = −τ
lnλi
(2.7)
where ti is a relaxation time, τ is the lag time,
and λi is an eigenvalue. Based on the Chapman-
Kolmogorov equation, the relaxation times for a
Markov model with a lag time of nτ should be
the same as those for a Markov model with a lag
time of τ
ti = −
nτ
lnλi,T (nτ)
= −
nτ
lnλn
i,T (τ)
= −
nτ
nlnλi,T (τ)
= −
τ
lnλi,T (τ)
(2.8)
where λi,T (τ) is an eigenvalue of T (τ). Therefore,
examining a plot of the relaxation timescales as a
function of the lag time should give an indica-
tion of when a model starts to satisfy the Markov
assumption, if at all. Beyond the Markov time
(the smallest lag time that gives Markovian be-
havior), the relaxation time scales should be level,

2
An Overview and Practical Guide to Building Markov State Models
15
Fig. 2.4 An example relaxation timescale (or implied
timescale) plot with a Markov time of ∼2 ns. Data comes
from Ref. [15]
as shown in Fig. 2.4. If the relaxation time scales
never level-off, then it is likely that one or more
states have large internal barriers and a new state
decomposition is necessary, and possibly more
data as well. Unfortunately, this is a rather sub-
jective test, particularly when dealing with ﬁnite
statistics.
One can also go beyond plots of the relaxation
timescales and test the Chapman-Kolmogorov
equation on a state by state basis [5]. More de-
tails on this approach are given in Sect. 4.8.
2.4.2
Correlation Function Tests
Comparing correlation functions from the raw
data and an MSM is one alternative to Chapman-
Kolmogorov-based tests when one has sufﬁ-
ciently long simulations. To calculate correla-
tion functions for a single long trajectory, one
ﬁrst calculates some property of interest for each
snapshot—like the RMSD to a crystal structure—
and then calculates
c(t) =

θ(0)θ(t)

(2.9)
where θ(t) is the observable at time t.
One can also calculate a (normalized) correla-
tion function for an MSM using
c(n) =
N
i=1 λn
i (θ · φi)2
N
i=1 (θ · φi)2
(2.10)
where n is the number of steps (t/τ), N is the
number of states, θ is a vector of observables for
each state, and φi is the ith left eigenvector [16].
Unfortunately, this test cannot be used if you only
have short simulations. One needs at least one
long simulation compared to the relaxation time
of the model to calculate the reference correlation
function.
2.5
Coarse-Graining to Generate
Macrostates
As discussed in Sect. 2.1, there are a number of
advantages to coarse-graining microstate models
by merging rapidly mixing microstates into larger
macrostates. First of all, one can sometimes build
mesoscale models that are just as quantitatively
predictive as the original microstate model but are
far more compact. Secondly, one can build mod-
els with few enough states that they are compre-
hendible and can be used to gain an intuition for
a system and generate hypotheses, though they
may no longer be quantitatively predictive.
Two major questions have to be addressed
to build these coarse-grained models. First, how
should one determine which microstates to merge
together?
Secondly,
how
many
macrostates
should one build?
Here, we review a number of methods that
have been developed to answer these questions.
2.5.1
PCCA
Perron Cluster Cluster Analysis (PCCA) uses
the eigenspectrum of a transition probability ma-
trix to construct coarse-grained models [17, 18].
This method derives its name from the Perron-
Frobenius theorem, which states that a real square
matrix with positive entries (e.g. a transition
probability matrix) has a unique largest real
eigenvalue and that the corresponding eigenvec-
tor has strictly positive components. The term
Perron Cluster refers to a set of eigenvalues clus-
tered near the largest eigenvalue and separated
from the rest of the eigenspectrum by a reason-
able gap. As discussed shortly, the eigenvectors

16
G.R. Bowman
Fig. 2.5 Two simple models demonstrating the power
and pitfalls of PCCA. (A) A simple model with well-
sampled transitions. Each of the nine microstates has
1,000 self-transitions. Each thick line corresponds to 100
transitions and the medium weight lines correspond to 10
transitions. This model can be coarse-grained into three
macrostates consisting of microstates 0–2 (black outline),
3–5 (gray outline), and 6–8 (dotted outline). Panels (B)
and (C) show the second and third eigenvectors of this
simple model, respectively. Open circles are used for
eigenvector components that are less than or equal to zero
and ﬁlled circles are used for components that are greater
than zero. (D) The same simple model with two poorly
sampled transitions (noise) added between states 2–3 and
states 5–6. These transitions have only a single count.
Their presence barely changes the model’s eigenvectors.
However, they alter the sign structure of the second eigen-
vector (panel (E)) and, therefore, PCCA ﬁnds the wrong
coarse-graining into three macrostates: microstates 0–2
(black outline), 3 (gray outline) and 4–8 (dotted outline).
Panels (B) and (C) show the second and third eigenvectors
of the simple model from panel (D), respectively. If you
try this model on your own computer, note that your re-
sults may vary slightly due to the symmetry of the system
corresponding to the Perron Cluster can be used
to coarse-grain an MSM.
We begin with a discussion of PCCA because
it highlights many of the issues that must be con-
sidered when coarse-graining MSMs. PCCA was
also one of the ﬁrst methods for coarse-graining
MSMs and, therefore, provided at least some of
the intellectual inspiration for many of the other
methods. However, the other methods presented
here are likely to perform better than PCCA,
which does not provide a numerically robust clus-
tering.
As discussed previously, the eigenvalues of
a transition probability matrix can be converted
into time scales. The corresponding eigenvectors
describe what transitions are occurring on each
of these time scales [17]. The largest eigenvalue
(λ1) is always 1 for a model that is connected
and obeys detailed balance. The components of
the corresponding eigenvector are proportional to
the equilibrium populations of each state. The re-
maining eigenvalues (λn < λn−1 < ··· < λ2 < 1)
are real-valued and can be converted into time
scales using Eq. (2.7). The corresponding right
eigenvector describes what is happening on this
time scale. That is, states with negative eigen-
vector components are interconverting with states
with positive components and the magnitude of
these components is proportional to the state’s de-
gree of participation. The left eigenvectors con-
tain the same information but weighted by the
equilibrium population of each state.
In PCCA, one starts off with all microstates
merged into a single macrostate and then it-
eratively breaks the most kinetically diverse
macrostate into two smaller states based on
the next slowest right eigenvector [17, 18]. As
an example, let’s consider the model shown in
Fig. 2.5A. By eye, it is clear this model can be
divided into 3 macrostates: one containing mi-

2
An Overview and Practical Guide to Building Markov State Models
17
crostates 0–2, one containing microstates 3–5,
and one containing microstates 6–8. To ﬁnd these
states with PCCA, one would begin by using the
second eigenvector (ψ2, Fig. 2.5B) to split the
microstates into one group with components less
than or equal to zero (open circles in Fig. 2.5B)
and one group with components greater than zero
(ﬁlled circles in Fig. 2.5B). This splitting would
give rise to two macrostates, one containing mi-
crostates 0–5 and another containing microstates
6–8. Next, PCCA chooses the group with the
greatest spread in eigenvector components and
uses the next slowest eigenvector (ψ3) to divide
this group in two. In this example, PCCA would
select the group containing microstates 0–5 be-
cause it has states with components of ψ2 ranging
from about −0.4 to 0, whereas the other group
only has states with components of about 0.4.
Using ψ3, PCCA would then split this group
into two smaller groups containing microstates
0–2 and 3–5, respectively. This second split gives
us the natural grouping into three macrostates
we can see by eye, demonstrating the utility of
this automated procedure. Further iterations of
this algorithm could then be used to create more
macrostates.
One attractive feature of this algorithm is that
it provides a natural way to choose how many
states to construct. If the system of interest has a
well deﬁned set of free energy basins—i.e. with
large barriers between them and signiﬁcantly
smaller barriers within them—then the system
will exhibit a separation of time scales. That is,
there should be a Perron Cluster of eigenvalues
near 1 that are separated from the rest of the
eigenvalue spectrum by a reasonable gap. For ex-
ample, the eigenvalues of our simple model from
Fig. 2.5A are 1.0, 0.997, 0.992, 0.752, 0.750,
0.750, 0.750, 0.746, 0.735. There is a clear gap
between the third and fourth eigenvalues of this
model, and this gap would become even clearer
after converting the eigenvalues into time scales.
This gap indicates a separation of time scales that
permits a three state macrostate model to cap-
ture the slowest relaxation time scales of the sys-
tem. In general, if there is a gap after the nth
eigenvalue (counting the eigenvalue of 1), then
one should be able to construct a reasonable
macrostate model with n states. Unfortunately,
many real world systems do not have a clear sep-
aration of time scales. Instead, they have a con-
tinuum of eigenvalues. In such cases, the number
of macrostates is best seen as an adjustable pa-
rameter one can vary depending on the properties
of the model they are interested in.
One major limitation of PCCA is that it can
suffer from propagation of error when not all
microstates participate strongly in each eigen-
mode [19]. For example, in the simple model
from Fig. 2.5A, microstates 3–5 have zero com-
ponents in the second eigenvector, indicating they
do not participate in the slowest relaxation pro-
cess. This simple model is purposefully very
clean, so all three of these microstates were
placed in the same group during the ﬁrst splitting
PCCA performed based on the second eigenvec-
tor. However, in real world scenarios, one rarely
gets states with eigenvector components of ex-
actly zero because of factors like poorly sampled
transitions. States that do not participate strongly
in a given eigenmode (i.e. have eigenvector com-
ponents that are nearly zero) will be assigned
to macrostates rather arbitrarily, leading to com-
pounding error as more eigenvectors are consid-
ered. For example, the simple model in Fig. 2.5D
is the same as the one we’ve used so far but with
the addition of two noisy transitions with only a
single count between states 2–3 and states 5–6. In
the second eigenvector of this model, microstates
3–5 have very small magnitude eigenvector com-
ponents with different signs (Fig. 2.5E). There-
fore, splitting this model into two groups based
on the second eigenvector gives one set contain-
ing microstates 0–3 and another containing mi-
crostates 4–8. Despite the fact that microstates
3–5 should form a single macrostate, they have
already been split apart at this early stage. As
PCCA considers more eigenvectors, it will prop-
agate this error. In more complicated models, new
errors can also be introduced at each stage due to
weakly participating states. Unfortunately, there
is often a continuum of eigenvector components,
so there is currently no clear way to separate
weakly participating states from strongly partici-
pating ones and deal with the weakly participat-
ing ones separately.

18
G.R. Bowman
A number of heuristic methods have been in-
troduced to ﬁx this problem but none are entirely
satisfactory [1]. For example, intuitively, a par-
titioning into metastable states should maximize
the self-transition probability of each state. Do-
ing so is equivalent to minimizing the transition
rates between states, or placing the boundaries
between states along the largest free energy bar-
riers. Therefore, one can try to correct for the er-
rors introduced during PCCA by doing a simu-
lated annealing procedure to maximize the total
metastability (Q) of the model
Q =

n
Tii
(2.11)
where n is the number of macrostates and Tii
is the self-transition probability for state i. In
such a procedure, one tries randomly assign-
ing microstates to new macrostates and each
proposed move is accepted or rejected accord-
ing to a Monte Carlo criterion. That is, moves
that increase the metastability are always ac-
cepted and moves that reduce it are only ac-
cepted with some small probability. This pro-
cedure often works for simple models but be-
comes intractable for real world models because
it can converge on non-sensical results or even
completely fail to converge to a stable solu-
tion.
PCCA is also prone to handle poorly sam-
pled states and transitions improperly because
it does not account for statistical uncertainty in
a model [21]. For example, it is common for
the clustering algorithms described in Sect. 2.2
to make conformations that are geometric out-
liers into their own microstates [11]. These states
will have very few transitions to other states
and, therefore, will appear to be separated from
them by large free energy barriers. As a re-
sult, PCCA will often make these poorly sam-
pled microstates into singleton macrostates—i.e.
macrostates containing a single microstate. Hu-
man examination of these states, however, of-
ten reveals that they are unlikely to be physically
meaningful.
2.5.2
PCCA+
PCCA+ is a more robust version of PCCA that
avoids the pitfall of propagation of error [19, 20].
This improvement is accomplished by consider-
ing the relevant eigenvectors simultaneously in-
stead of sequentially. More speciﬁcally, PCCA+
tries to ﬁnd a set of indicator functions that best
reproduces the n slowest dynamical eigenvectors.
For example, to construct a three-state macrostate
model for the simple model in Fig. 2.5D, PCCA+
would consider the second and third eigenvec-
tors simultaneously. PCCA+ would then ﬁt these
eigenvectors with three step functions: one that is
1 in states 0–2 and 0 elsewhere, a second that is 1
in states 3–5 and 0 elsewhere, and a third that is 1
in states 6–8 and 0 elsewhere. The details of how
this optimization is achieved are very similar to
spectral clustering and are described in Ref. [19].
While PCCA+ does not suffer from the propa-
gation of error that occurs in PCCA, this method
still relies on a maximum likelihood estimate
of the transition probability matrix. Therefore,
PCCA+ still tends to create singleton macrostates.
Furthermore, PCCA+ can require quite a bit of
memory, so creating mesoscale models is often
computationally intractable.
2.5.3
SHC
Super-level-set hierarchical clustering (SHC) tries
to deal with model uncertainty by treating low
population states differently from high popula-
tion ones [22]. Inspired by developments in topo-
logical data analysis, SHC ﬁrst divides all the
microstates into sets with similar populations
(called level-sets) [23]. PCCA or PCCA+ is then
used to divide each set into macrostates. Finally,
overlap between the macrostates at each level
is used to stitch these models together. Typi-
cally, PCCA(+) is not applied to the least pop-
ulated states. Instead, these are just lumped into
the macrostate they transition to most quickly,
thereby avoiding creating singleton macrostates.
One added beneﬁt of this approach is that the
hierarchy of models SHC creates can give insight
into the hierarchy of free energy basins that actu-
ally exist in the underlying free energy landscape.

2
An Overview and Practical Guide to Building Markov State Models
19
For example, macrostates from the most popu-
lated level correspond to the deepest free energy
basins. Some of the macrostates at less populated
levels simply correspond to the same macrostates
that are present at more populated levels. How-
ever, some reﬂect less populated intermediates
between these deeper minima and can provide in-
sight into how the system transitions between the
most populated free energy basins.
SHC could beneﬁt greatly from a more formal
justiﬁcation. One philosophical short coming is
that SHC was inspired by methods that make use
of density level sets (sets of data with approx-
imately equal densities). However, as discussed
earlier, estimating densities in high-dimensional
spaces is extremely difﬁcult. A more formal jus-
tiﬁcation for breaking the microstates into levels
would be preferable. One practical implication of
this short-coming is that there is no clear way to
deﬁne the level sets a priori. Instead, one must
make a rather arbitrary choice and then try vary-
ing the density level sets to check for robustness.
Therefore, SHC requires more computation than
a single application of PCCA or PCCA+. A more
formal justiﬁcation for this method could pro-
vide insight into how to choose the density level
sets and make this an extremely powerful method
though. New work on framing SHC in terms of
a Nystrom expansion of the transition probabil-
ity matrix may provide such a formal justiﬁca-
tion.
2.5.4
BACE
More recently, a Bayesian agglomerative clus-
tering engine (BACE) has been developed for
dealing with uncertainty in a more automated
fashion [21]. BACE exploits the observation that
rapidly mixing states should also be kinetically
similar—that is, they should have similar transi-
tion probabilities—to determine which states to
lump together. The algorithm works by iteratively
merging the most kinetically similar states, as
judged by a Bayes factor for determining how
likely the transitions observed for each state are
to have come from the same underlying distribu-
tion
ln P(different|C)
P(same|C)
≈ˆCiD(pi∥q) + ˆCjD(pj∥q)
(2.12)
where P(different|C) is the probability the counts
(C) from states i and j came from different un-
derlying probability distributions and P(same|C)
is the probability they came from the same dis-
tribution, ˆCi is the number of counts originat-
ing in state i, D(pi∥q) = 
k pik ln pik
qk
is the
relative entropy between probability distribution
pi and q, pi is a vector of maximum likeli-
hood transition probabilities from state i, and
q =
ˆCipi+ ˆCj pj
ˆCi+ ˆCj
is the vector of expected transi-
tion probabilities from combining states i and
j. Deriving this expression involves integrating
over all possible transition probability distribu-
tions out of each state, so the method naturally
takes into account uncertainty in the microstate
model’s transition probability matrix.
In addition to outperforming many other meth-
ods, BACE has an appealing information theo-
retic interpretation and provides a way to deter-
mine which levels of the hierarchy of models it
creates are most deserving of further analysis.
Speciﬁcally, Eq. (2.12) is identical to the Jensen-
Shannon divergence, a popular measure from in-
formation theory [24]. Therefore, BACE can be
interpreted as creating the coarse-graining that re-
tains the maximum information about the original
model’s kinetics. The BACE Bayes factor also
provides a means to determine how many states
to create. One can simply monitor the Bayes fac-
tor as one merges states and watch for dramatic
jumps. Models preceding these jumps are particu-
larly deserving of further analysis because further
coarse-graining greatly reduces the model qual-
ity.
Fully characterizing the strengths and weak-
nesses of BACE compared to other methods
will require further application of this method.
BACE is probably extremely useful for build-
ing mesoscale models because it can build them
quickly and accurately. However, it may be
less useful for building extremely coarse-grained

20
G.R. Bowman
models. The fewer the states one requests from
BACE, the more iterations it must run and the
longer the algorithm takes to complete. BACE
could also suffer from propagation of error, as
seen in PCCA, as a mistake early on will never
be corrected later.
2.6
Recommended Protocol
At present, one of the most robust and widely
used—but not necessarily optimal!—protocols
for modeling proteins and other biomolecules is:
1. Cluster a simulation data set with the hybrid
k-centers/k-medoids algorithm based on the
RMSD between backbone heavy atoms, en-
suring that every cluster has a radius on the
order of a few Å.
2. Validate the kinetic relevance of this cluster-
ing and choose an appropriate lag time based
on the model’s relaxation time scales (or im-
plied time scales) as a function of the lag time.
For each lag time, estimate the transition ma-
trices by:
a. Removing states that only have one transi-
tion with any other state.
b. Counting transitions using a sliding win-
dow and assuming that for every transition
from state i to j, there is a corresponding
transition from j to i.
3. Use the transition probability matrix at the de-
sired lag time and representative conforma-
tions from each state to model experiments.
4. Coarse-grain the model with PCCA+ to gain
an intuition for the system. Make sure to test
how quantitative the coarse-grained model
is by examining how closely the macrostate
model’s relaxation times agree with the mi-
crostate model.
2.7
Advanced Topics and Future
Directions
Before moving on to the next chapter, I would
like to brieﬂy review a number of advanced top-
ics and list some of the future directions that
could lead to more effective methods for building
MSMs.
2.7.1
Seeding
In seeding, one uses an inexpensive method to
choose a variety of starting conformations for
simulations that will later be used to build an
MSM [25]. Intuitively, seeding allows one to
explore a wider swath of conformational space
more quickly than would be possible by start-
ing every simulation from a single conformation,
like a crystal structure. Ideally, one would like
to ﬁnd the greatest possible variety of relevant
conformations. One way of doing this is to use
generalized ensemble simulations like replica ex-
change to quickly explore conformational space
and then use random conformations from these
simulations as starting points for constant tem-
perature simulations. This procedure helps focus
the starting conformations on thermodynamically
relevant regions of phase space. Less thermody-
namically relevant conformations should quickly
relax to more populated regions of conforma-
tional space.
When using seeding, one must be careful to
ensure that the resulting model is connected. Sim-
ulations started from conformations that are too
kinetically distant from any of the other starting
points may never overlap with the rest of the tra-
jectories, making it impossible to determine tran-
sition rates between them or their relative equilib-
rium populations.
2.7.2
Cores
Fluctuations at the tops of barriers between states
can lead to recrossing events where the system
appears to rapidly jump back and forth between
the start and end state [26]. These recrossing
events can lead to over-estimates of the transi-
tion rates between states if they are not dealt with
properly.
Cores are one way of reducing the affect of
recrossing [16, 27]. The basic idea is to deﬁne a
core region within each state, leaving a no-man’s
land between each pair of states. Transitions are
only counted when a trajectory leaves the core of
one state and enters the core of another. A trajec-
tory that makes an excursion into no-man’s land

2
An Overview and Practical Guide to Building Markov State Models
21
but then returns to the core it started in before en-
tering the core of any other state is said never to
have left its initial state.
2.7.3
Comparing Multiple Sequences
In addition to providing insight into a single sys-
tem, MSMs are also a powerful way of comparing
different systems. For instance, in protein folding,
there is great interest in comparing slight varia-
tions of a single protein and how the mutations
that distinguish them change properties like the
folding rate or stability of the native state. For this
to be possible, it is essential that a common state
space be used. For example, one can construct a
common microstate space by clustering two pro-
tein sequences using a set of atoms that they share
in common [28]. Properties like the equilibrium
populations of a set of states or the transition rates
between them can then be compared between the
two systems.
2.7.4
Open Challenges
MSM methods are sufﬁciently well developed
to pursue many exciting applications. However,
there is still a great deal of room for further
methodological improvements. Here, I list just a
few of them.
1. As discussed previously, one would ideally
like to build MSMs using a truly kinetic dis-
tance metric from the beginning. New cluster-
ing methods or distance metrics that better re-
ﬂect a system’s kinetics would be of tremen-
dous value.
2. Many of the methods for validating MSMs
and choosing important parameters, like the
lag time, are very subjective. Quantitative ap-
proaches to model validation would allow for
more automatic model construction.
3. More robust methods for estimating transition
matrices that satisfy detailed balance would
also be useful. Current methods are either too
biased or too unreliable.
4. There is still a need for more efﬁcient and ac-
curate coarse-graining methods.
References
1. Chodera JD et al (2007) Automatic discovery of
metastable states for the construction of Markov
models of macromolecular conformational dynamics.
J Chem Phys 126:155101
2. Bowman GR, Huang X, Pande VS (2009) Using gen-
eralized ensemble simulations and Markov state mod-
els to identify conformational states. Methods 49:97–
201
3. Noé F et al (2009) Constructing the equilibrium
ensemble of folding pathways from short off-
equilibrium simulations. Proc Natl Acad Sci USA
106:19011–19016
4. Beauchamp KA et al (2011) MSMBuilder2: model-
ing conformational dynamics on the picosecond to
millisecond scale. J Chem Theory Comput 7:3412–
3419
5. Prinz JH et al (2011) Markov models of molecu-
lar kinetics: generation and validation. J Chem Phys
134:174105
6. Senne M, Trendelkamp-Schroer B, Mey ASJ, Schütte
C, Noé F (2012) EMMA—a software package for
Markov model building and analysis. J Chem Theory
Comput 8:2223
7. Silva DA, Bowman GR, Sosa-Peinado A, Huang X
(2011) A role for both conformational selection and
induced ﬁt in ligand binding by the LAO protein.
PLoS Comput Biol 7:e1002054
8. Keller B, Daura X, van Gunsteren WF (2010) Com-
paring geometric and kinetic cluster algorithms for
molecular simulation data. J Chem Phys 132:074110
9. Gonzalez T (1985) Clustering to minimize the maxi-
mum intercluster distance. Theor Comput Sci 38:293
10. Dasgupta S, Long PM (2005) Performance guaran-
tees for hierarchical clustering. J Comput Syst Sci
70:555
11. Bowman GR, Beauchamp KA, Boxer G, Pande VS
(2009) Progress and challenges in the automated con-
struction of Markov state models for full protein sys-
tems. J Chem Phys 131:124101
12. Noe F et al (2009) Constructing the equilibrium
ensemble of folding pathways from short off-
equilibrium simulations. Proc Natl Acad Sci USA
106:19011
13. Tarjan R (1972) Depth-ﬁrst search and linear graph
algorithms. SIAM J Comput 1:146
14. Swope WC, Pitera JW, Suits F (2004) Describing
protein folding kinetics by molecular dynamics sim-
ulations, 1: theory. J Phys Chem B 108:6571
15. Bowman GR, Geissler PL (2012) Equilibrium ﬂuctu-
ations of a single folded protein reveal a multitude of
potential cryptic allosteric sites. Proc Natl Acad Sci
USA 109:11681
16. Buchete NV, Hummer G (2008) Coarse master equa-
tions for peptide folding dynamics. J Phys Chem B
112:6057

22
G.R. Bowman
17. Schütte C, Fischer A, Huisinga W, Deuﬂhard P
(1999) A direct approach to conformational dynam-
ics based on hybrid Monte Carlo. J Comput Phys
151:146
18. Deuﬂhard P, Huisinga W, Fischer A, Schütte C
(2000) Identiﬁcation of almost invariant aggregates
in reversible nearly uncoupled Markov chains. Linear
Algebra Appl 315:39
19. Deuﬂhard P, Weber M (2005) Robust Perron cluster
analysis in conformation dynamics. Linear Algebra
Appl 398:161
20. Noé F, Horenko I, Schütte C, Smith JC (2007)
Hierarchical analysis of conformational dynamics
in biomolecules: transition networks of metastable
states. J Chem Phys 126:155102
21. Bowman GR (2012) Improved coarse-graining of
Markov state models via explicit consideration of sta-
tistical uncertainty. J Chem Phys 137:134111
22. Yao Y et al (2009) Topological methods for exploring
low-density states in biomolecular folding pathways.
J Chem Phys 130:144115
23. Singh G, Memoli F, Carlsson G. Mapper: a topologi-
cal mapping tool for point cloud data. In: Eurograph-
ics symposium on point-based graphics
24. Lin J (1991) Divergence measures based on the Shan-
non entropy. IEEE Trans Inf Theory 37:145
25. Huang X, Bowman GR, Bacallado S, Pande VS
(2009) Rapid equilibrium sampling initiated from
nonequilibrium data. Proc Natl Acad Sci USA
106:19765
26. Bolhuis PG, Chandler D, Dellago C, Geissler PL
(2002) Transition path sampling: throwing ropes over
rough mountain passes, in the dark. Annu Rev Phys
Chem 53:291
27. Schütte C et al (2011) Markov state models based on
milestoning. J Chem Phys 134:204105
28. Levin AM et al (2012) Exploiting a natural conforma-
tional switch to engineer an interleukin-2 superkine.
Nature 484:529

3
Markov Model Theory
Marco Sarich, Jan-Hendrik Prinz, and Christof Schütte
3.1
Continuous Molecular
Dynamics
A variety of simulation models that all yield the
same stationary properties, but have different dy-
namical behaviors, are available to study a given
molecular model. The choice of the dynamical
model must therefore be guided by both a desire
to mimic the relevant physics for the system of
interest (such as whether the system is allowed
to exchange energy with an external heat bath
during the course of dynamical evolution), bal-
anced with computational convenience (e.g. the
use of a stochastic thermostat in place of explic-
itly simulating a large external reservoir) [8]. Go-
ing into the details of these models is beyond
the scope of the present study, and therefore we
will simply state the minimal physical proper-
ties that we expect the dynamical model to obey.
In the following we pursue the theoretical out-
line from Ref. [31] (Sects. 3.1–3.7) and Ref. [37]
(Sects. 3.1–3.8) which should both be used for
reference purposes.
Consider a state space Ω which contains all
dynamical variables needed to describe the in-
stantaneous state of the system. Ω may be dis-
crete or continuous, and we treat the more gen-
eral continuous case here. For molecular systems,
Ω usually contains both positions and velocities
M. Sarich · J.-H. Prinz · C. Schütte (B)
Freie Universität Berlin, Arnimallee 6, 14195 Berlin,
Germany
e-mail: christof.schuette@fu-berlin.de
of the species of interest and surrounding bath
particles. x(t) ∈Ω will denote the state of the
system at time t. The dynamical process consid-
ered is (x(t))t∈T ,T ⊂R0+, which is continuous
in space, and may be either time-continuous (for
theoretical investigations) or time-discrete (when
considering time-stepping schemes for computa-
tional purposes). For the rest of the article, the dy-
namical process will also be denoted by x(t) for
the sake of simplicity; we assume that x(t) has
the following properties:
1. x(t) is a Markov process in the full state space
Ω, i.e. the instantaneous change of the sys-
tem (dx(t)/dt in time-continuous dynamics
and x(t + 
t) in time-discrete dynamics with
time step 
t), is calculated based on x(t)
alone and does not require the previous his-
tory. In addition, we assume that the process
is time-homogeneous, such that the transition
probability density p(x,y;τ) for x,y ∈Ω and
τ ∈R0+ is well-deﬁned:
p(x,A;τ) = P
	
x(t + τ) ∈A


 x(t) = x

(3.1)
i.e. the probability that a trajectory started at
time t from the point x ∈Ω will be in set
A at time t + τ. Such a transition probabil-
ity density for the diffusion process in a one-
dimensional potential is depicted in Fig. 3.1b.
Whenever p(x,A;τ) has an absolutely con-
tinuous probability density p(x,y;τ) it is
given by integrating the transition probability
density over region A:
G.R. Bowman et al. (eds.), An Introduction to Markov State Models and Their Application to Long Timescale
Molecular Simulation, Advances in Experimental Medicine and Biology 797,
DOI 10.1007/978-94-007-7606-7_3, © Springer Science+Business Media Dordrecht 2014
23

24
M. Sarich et al.
p(x,A;τ) = P
	
x(t + τ) ∈A


 x(t) = x

(3.2)
=

A
dyp(x,y;τ).
(3.3)
2. x(t) is ergodic, i.e., the process x(t) is ape-
riodic, the space Ω does not have two or
more subsets that are dynamically discon-
nected, and for t →∞each state x will be
visited inﬁnitely often. The running average
of a function f : Ω →Rd then is given by
a unique stationary density μ(x) in the sense
that for almost every initial state x we have
lim
T →∞
1
T
 T
0
dt f

x(t)

=

Ω
dxf (x)μ(x),
that is, the fraction of time that the system
spends in any of its states during an inﬁnitely
long trajectory is given by the stationary den-
sity (invariant measure) μ(x) : Ω →R0+
with

Ω dxμ(x) = 1, where the stationarity
of the density means that

A
dxμ(x) =

Ω
dxp(x,A;τ)μ(x),
which takes the simpler form
μ(y) =

Ω
dxp(x,y;τ)μ(x),
whenever the transition probability has a den-
sity. We assume that this stationary density
μ is unique. In cases relevant for molecular
dynamics the stationary density always corre-
sponds to the equilibrium probability density
for some associated thermodynamic ensemble
(e.g. NVT, NpT). For molecular dynamics at
constant temperature T , the dynamics above
yield a stationary density μ(x) that is a func-
tion of T , namely the Boltzmann distribution
μ(x) = Z(β)−1 exp

−βH(x)

(3.4)
with Hamiltonian H(x) and β = 1/kBT where
kB is the Boltzmann constant and kBT is the
thermal energy. Z(β) =

dx exp(−βH(x))
is the partition function. By means of illustra-
tion, Fig. 3.1a shows the stationary density
μ(x) for a diffusion process on a potential
with high barriers.
3. x(t) is reversible, i.e., p(x,y;τ) fulﬁlls the
condition of detailed balance:
μ(x)p(x,y;τ) = μ(y)p(y,x;τ),
(3.5)
i.e., in equilibrium, the fraction of systems
transitioning from x to y per time is the same
as the fraction of systems transitioning from
y to x. Note that this “reversibility” is a more
general concept than the time-reversibility of
the dynamical equations e.g. encountered in
Hamiltonian dynamics. For example, Brown-
ian dynamics on some potential are reversible
as they fulﬁll Eq. (3.5), but are not time-
reversible in the same sense as Hamiltonian
dynamics are, due to the stochasticity of indi-
vidual realizations. Although detailed balance
is not essential for the construction of Markov
models, we will subsequently assume detailed
balance as this allows much more profound
analytical statements to be made, and just
comment on generalizations here and there.
The rationale is that one typically expects de-
tailed balance to be fulﬁlled in equilibrium
molecular dynamics based on a simple phys-
ical argument: For dynamics that have no
detailed balance, there exists a set of states
which form a loop in state space which is tra-
versed in one direction with higher probabil-
ity than in the reverse direction. This means
that one could design a machine which uses
this preference of direction in order to produce
work. However, a system in equilibrium is
driven only by thermal energy, and conversion
of pure thermal energy into work contradicts
the second law of thermodynamics. Thus, this
argument concludes that equilibrium molecu-
lar dynamics must be reversible and fulﬁll de-
tailed balance. Despite the popularity of this
argument there are dynamical processes used
in molecular dynamics that do not satisfy de-
tailed balance in the above sense. Langevin
molecular dynamics may be the most promi-
nent example. However, the Langevin process
exhibits an extended detailed balance [18]
μ(x)p(x,y;τ) = μ(Ay)p(Ay,Ax;τ),
where A is the linear operation that ﬂips the
sign of the momenta in the state x. This prop-

3
Markov Model Theory
25
Fig. 3.1 (a)
Potential
energy
function
with
four
metastable states and corresponding stationary density
μ(x). (b) Density plot of the transfer operator for a simple
diffusion-in-potential dynamics deﬁned on the range Ω =
[0,100], black and red indicates high transition probabil-
ity, white zero transition probability. Of particular interest
is the nearly block-diagonal structure, where the transi-
tion density is large within blocks allowing rapid transi-
tions within metastable basins, and small or nearly zero
for jumps between different metastable basins. (c) The
four dominant eigenfunctions of the transfer operator,
ψ1,...,ψ4, which indicate the associated dynamical pro-
cesses. The ﬁrst eigenfunction is associated to the station-
ary process, the second to a transition between A + B ↔
C +D and the third and fourth eigenfunction to transitions
between A ↔B and C ↔D, respectively. (d) The four
dominant eigenfunctions of the transfer operator weighted
with the stationary density, φ1,...,φ4. (e) Eigenvalues of
the transfer operator, The gap between the four metastable
processes (λi ≈1) and the fast processes is clearly visible

26
M. Sarich et al.
erty allows to reproduce the results for pro-
cesses with detailed balance to this case, see
remarks below.
The above conditions do not place overly bur-
densome restrictions on the choices of dynami-
cal models used to describe equilibrium dynam-
ics. Many stochastic thermostats are consistent
with the above assumptions, e.g. Hybrid Monte
Carlo [14, 37], overdamped Langevin (also called
Brownian or Smoluchowski) dynamics [15, 16],
and stepwise-thermalized Hamiltonian dynam-
ics [42]. When simulating solvated systems, a
weak friction or collision rate can be used; this
can often be selected in a manner that is phys-
ically motivated by the heat conductivity of the
material of interest and the system size [1].
We note that the use of ﬁnite-timestep inte-
grators for these models of dynamics can some-
times be problematic, as the phase space density
sampled can differ from the density desired. Gen-
erally, integrators based on symplectic Hamilto-
nian integrators (such as velocity Verlet [42]) of-
fer greater stability for our purposes.
While technically, a Markov model analysis
can be constructed for any choice of dynami-
cal model, it must be noted that several popu-
lar dynamical schemes violate the assumptions
above, and using them means that one is (cur-
rently) doing so without a solid theoretical ba-
sis, e.g. regarding the boundedness of the dis-
cretization error analyzed in Sect. 3.3 below. For
example, Nosé-Hoover and Berendsen are either
not ergodic or do not generate the correct sta-
tionary distribution for the desired ensemble [10].
Energy-conserving Hamiltonian dynamics on one
hand may well be ergodic regarding the projected
volume measure on the energy surface but this in-
variant measure is not unique, and on the other
hand it is not ergodic wrt. the equilibrium proba-
bility density for some associated thermodynamic
ensemble of interest.
3.2
Transfer Operator Approach
and the Dominant Spectrum
At this point we shift from focusing on the evo-
lution of individual trajectories to the time evo-
lution of an ensemble density. Consider an en-
semble of molecular systems at a point in time t,
distributed in state space Ω according to a proba-
bility density pt(x) that is different from the sta-
tionary density μ(x). If we now wait for some
time τ, the probability distribution of the ensem-
ble will have changed because each system copy
undergoes transitions in state space according
to the transition probability density p(x,y;τ).
The change of the probability density pt(x) to
pt+τ(x) can be described with the action of a con-
tinuous operator. From a physical point of view,
it seems straightforward to deﬁne the propagator
Q(τ) as follows:
pt+τ(y) = Q(τ) ◦pt(y)
(3.6)
=

Ω
dxp(x,y;τ)pt(x).
(3.7)
Applying Q(τ) to a probability density pt(x) will
result in a modiﬁed probability density pt+τ(x)
that is more similar to the stationary density μ(x),
to which the ensemble must relax after inﬁnite
time. An equivalent description is provided by the
transfer operator T (τ) [36, 37], which has nicer
properties from a mathematical point of view.
T (τ) is deﬁned as [35, 36, 39]:
ut+τ(y) = T (τ) ◦ut(y)
(3.8)
=
1
μ(y)

Ω
dxp(x,y;τ)μ(x)ut(x).
(3.9)
T (τ) does not propagate probability densities,
but instead functions ut(x) that differ from prob-
ability densities by a factor of the stationary den-
sity μ(x), i.e.:
pt(x) = μ(x)ut(x).
(3.10)
The relationship between the two densities and
operators is shown in the scheme below:
pt
Q(τ)
−→pt+τ
probability densities
↓·μ−1
↑·μ
ut
T (τ)
−→ut+τ
densities in μ-weighted space
It is important to note that Q and T in fact do
not only propagate probability densities but gen-
eral functions f : Ω →R. Since both operators
have the property to conserve positivity and mass,

3
Markov Model Theory
27
a probability density is always transported into a
probability density.
Alternatively to Q and T which describe the
transport of densities exactly by a chosen time-
discretization τ, one could investigate the den-
sity transport with a time-continuous operator L
called generator which is the continuous basis of
rate matrices that are frequently used in physical
chemistry [5, 40, 41] and is related to the Fokker-
Planck equation [22, 36]. Here, we do not inves-
tigate L in detail, but only point out that the ex-
istence of a generator implies that we have
T (τ) = exp(τL ),
(3.11)
with L acting on the same μ-weighted space
as T , while Q(τ) = exp(τL) for L acting on
the unweighted densities/functions. The so-called
semigroup-property (3.11) implies that T (τ) and
L have the same eigenvectors, while the eigen-
values λ of T (τ) and the eigenvalues η of L
are related via λ = exp(τη). This is of importance
since most of the following considerations using
T (τ) can be generalized to L .
Equation (3.9) is a formal deﬁnition. When the
particular kind of dynamics is known it can be
written in a more speciﬁc form [37]. However,
the general form (3.9) is sufﬁcient for the present
analysis. The continuous operators have the fol-
lowing general properties:
• Both Q(τ) and T (τ) fulﬁll the Chapman–
Kolmogorov Equation
pt+kτ(x) =
	
Q(τ)
k ◦pt(x),
(3.12)
ut+kτ(x) =
	
T (τ)
k ◦ut(x)
(3.13)
where [T (τ)]k refers to the k-fold application
of the operator, i.e. Q(τ) and T (τ) can be
used to propagate the evolution of the dynam-
ics to arbitrarily long times t + kτ.
• We consider the two operators on the Hilbert
space of square integrable functions. More
speciﬁcally, we work with two Hilbert spaces,
one with unweighted functions,
L2 =

u : Ω →C :
∥u∥2
2 =

Ω
dx


u(x)


2 < ∞

,
in which we consider Q, the other with μ-
weighted functions
L2
μ =

u : Ω →C:
∥u∥2
2,μ =

Ω
dx


u(x)


2μ(x) < ∞

,
where we consider T . These spaces come
with the following two scalar products
⟨u,v⟩=

Ω
dxu(x)∗v(x),
⟨u,v⟩μ =

Ω
dxu(x)∗v(x)μ(x),
where the star indicates complex conjugation.
• Q(τ) has eigenfunctions φi(x) and associated
eigenvalues λi (see Figs. 3.1c and e):
Q(τ) ◦φi(x) = λiφi(x),
(3.14)
while T (τ) has eigenfunctions ψi(x) with the
same corresponding eigenvalues:
T (τ) ◦ψi(x) = λiψi(x).
(3.15)
When the dynamics are reversible, all eigen-
values λi are real-valued and lie in the interval
−1 < λi ≤1 [36, 37] (this is only true in L2
μ
and not in the other function spaces). More-
over, the two types of eigenfunctions are re-
lated by a factor of the stationary density μ(x):
φi(x) = μ(x)ψi(x),
(3.16)
and their lengths are deﬁned by the normaliza-
tion condition that the scalar product is unity
for all corresponding eigenfunctions:
⟨φi,ψi⟩= ⟨ψi,ψi⟩μ = 1
for all i = 1...m. Due to reversibility, non-
corresponding eigenfunctions are orthogonal:
⟨φi,ψj⟩= 0
for all i ̸= j. When T (τ) is approximated by a
reversible transition matrix on a discrete state
space, φi(x) and ψi(x) are approximated by

28
M. Sarich et al.
the left and right eigenvectors of that transi-
tion matrix, respectively (compare Figs. 3.1c
and d).
• In general the spectrum of the two opera-
tors contains a continuous part, called the es-
sential spectrum, and a discrete part, called
the discrete spectrum that contains only iso-
lated eigenvalues [19]. The essential spectral
radius 0 ≤r ≤1 is the minimal value such
that for all elements λ of the essential spec-
trum we have |λ| ≤r. In all of the follow-
ing we assume that the essential spectral ra-
dius is bounded away from 1 in L2
μ, that is,
0 ≤r < 1. Then, every element λ of the spec-
trum with |λ| > r is in the discrete spectrum,
i.e., is an isolated eigenvalue for which an
eigenvector exists. Our assumption is not al-
ways satisﬁed but is a condition on the dynam-
ics: For example, for deterministic Hamilto-
nian systems it is r = 1, while for Langevin
dynamics with periodic boundary conditions
or with fast enough growing potential at inﬁn-
ity, we have r = 0. In the following, we as-
sume r < 1 and ignore the essential spectrum;
we only consider a ﬁnite number of m isolated,
dominant eigenvalue/eigenfunction pairs and
sort them by non-ascending eigenvalue, i.e.
λ1 = 1 > λ2 ≥λ3 ≥··· ≥λm, with r < |λm|.
In addition we assume that the largest eigen-
value λ = 1 is simple so that μ is the only in-
variant measure.
• The eigenfunction associated with the largest
eigenvalue λ = 1 corresponds to the stationary
distribution μ(x) (see Fig. 3.1d, top):
Q(τ) ◦μ(x) = μ(x) = φ1(x),
(3.17)
and the corresponding eigenfunction of T (τ))
is a constant function on all state space Ω (see
Fig. 3.1c, top):
T (τ) ◦1 = 1 = ψ1(x),
(3.18)
due to the relationship φ1(x) = μ(x)ψ1(x) =
μ(x).
To see the signiﬁcance of the other eigen-
value/eigenfunction pairs, we exploit that the dy-
namics can be decomposed exactly into a super-
position of m individual slow dynamical pro-
cesses and the remaining fast processes. For
T (τ), this yields:
ut+kτ(x) = Tslow(kτ) ◦ut(x)
+ Tfast(kτ) ◦ut(x)
(3.19)
=
m

i=1
λk
i ⟨ut,φi⟩ψi(x)
+ Tfast(kτ) ◦ut(x)
(3.20)
=
m

i=1
λk
i ⟨ut,ψi⟩μψi(x)
+ Tfast(kτ) ◦ut(x).
(3.21)
Here, Tslow is the dominant, or slowly-
decaying part consisting of the m slowest pro-
cesses with λi ≥λm, while Tfast contains all (in-
ﬁnitely many) fast processes that are usually not
of interest and which decay with geometric rate
at least as fast as |λm+1|k:
∥Tfast(kτ) ◦ut∥2
2,μ
∥ut∥2
2,μ
≤|λm+1|k.
This decomposition requires that subspaces Tslow
and Tfast are orthogonal, which is a consequence
of detailed balance. This decomposition permits
a compelling physical interpretation: The slow
dynamics are a superposition of dynamical pro-
cesses, each of which can be associated to one
eigenfunction ψi (or φi) and a corresponding
eigenvalue λi (see Figs. 3.1c–e). These processes
decay with increasing time index k. In the long-
time limit where k →∞, only the ﬁrst term with
λ1 = 1 remains, recovering to the stationary dis-
tribution φ1(x) = μ(x). All other terms corre-
spond to processes with eigenvalues λi < 1 and
decay over time, thus the associated eigenfunc-
tions correspond to processes that decay under
the action of the dynamics and represent the dy-
namical rearrangements taking place while the
ensemble relaxes towards the equilibrium distri-
bution. The closer λi is to 1, the slower the corre-
sponding process decays; conversely, the closer it
is to 0, the faster.
Thus the λi for i = 2,...,m each correspond
to a physical timescale, indicating how quickly
the process decays or transports density toward

3
Markov Model Theory
29
equilibrium (see Fig. 3.1e):
ti = −τ
lnλi
,
(3.22)
which is often called the ith implied timescale
[8, 42]. Thus, Eq. (3.19) can be rewritten in terms
of implied timescales as:
ut+kτ(x) = 1 +
m

i=2
exp

−kτ
ti

⟨ut,ψi⟩μψi(x)
+ Tfast(kτ) ◦ut(x).
(3.23)
This implies that when there are gaps amongst
the ﬁrst m eigenvalues, the system has dynami-
cal processes acting simultaneously on different
timescales. For example, a system with two-state
kinetics would have λ1 = 1, λ2 ≈1 and λ3 ≪λ2
(t3 ≪t2), while a system with a clear involvement
of an additional kinetic intermediate would have
λ3 ∼λ2 (t3 ∼t2).
In Fig. 3.1, the second process, ψ2, corre-
sponds to the slow (λ2 = 0.9944) exchange be-
tween basins A + B and basins C + D, as re-
ﬂected by the opposite signs of the elements
of ψ2 in these regions (Fig. 3.1c). The next-
slowest processes are the A ↔B transition and
then the C ↔D transition, while the subsequent
eigenvalues are clearly separated from the domi-
nant spectrum and correspond to much faster lo-
cal diffusion processes. The three slowest pro-
cesses effectively partition the dynamics into four
metastable states corresponding to basins A, B,
C and D, which are indicated by the different
sign structures of the eigenfunctions (Fig. 3.1c).
The metastable states can be calculated from
the eigenfunction structure, e.g. using the PCCA
method [11, 12, 32].
Of special interest is the slowest relaxation
time, t2. This timescale identiﬁes the worst case
global equilibration or decorrelation time of the
system; no structural observable can relax more
slowly than this timescale. Thus, if one desires to
calculate an expectation value E(a) of an observ-
able a(x) which has a non-negligible overlap with
the second eigenfunction, ⟨a,ψ2⟩> 0, a straight-
forward single-run MD trajectory would need to
be many times t2 in length in order to compute an
unbiased estimate of E(a).
3.3
Discretization of State Space
While molecular dynamics in full continuous
state space Ω is Markovian by construction,
the term Markov State Model (MSM) or shortly
Markov model is due to the fact that in practice,
state space must be somehow discretized in order
to obtain a computationally tractable description
of the dynamics as it has ﬁrst been introduced
in [35]. The Markov model then consists of the
partitioning of state space used together with the
transition matrix modeling the jump process of
the observed trajectory projected onto these dis-
crete states. However, this jump process (Fig. 3.2)
is no longer Markovian, as the information where
the continuous process would be within the local
discrete state is lost in the course of discretiza-
tion. The jump statistics generated by the projec-
tion, however, deﬁnes a Markov process on the
discrete state space associated with the partition.
Modeling the long-time statistics of the original
process with this discrete state space Markov pro-
cess is an approximation, i.e., it involves a dis-
cretization error. In the current section, this dis-
cretization error is analyzed and it is shown what
needs to be done in order to keep it small.
The discretization error is a systematic error
of a Markov model since it causes a determinis-
tic deviation of the Markov model dynamics from
the true dynamics that persists even when the sta-
tistical error is excluded by excessive sampling.
In order to focus on this effect alone, it is assumed
in this section that the statistical estimation error
is zero, i.e., transition probabilities between dis-
crete states can be calculated exactly. The results
suggest that the discretization error of a Markov
model can be made small enough for the MSM
to be useful in accurately describing the relax-
ation kinetics, even for very large and complex
molecular systems. This approach is illustrated in
Fig. 3.3.
In practical use, the Markov model is not
obtained by actually discretizing the continuous
propagator. Rather, one deﬁnes a discretization of
state space and then estimates the corresponding
discretized transfer operator from a ﬁnite quantity
of simulation data, such as several long or many
short MD trajectories that transition between the

30
M. Sarich et al.
Fig. 3.2 Scheme: The true continuous dynamics (dashed
line) is projected onto the discrete state space. MSMs ap-
proximate the resulting jump process by a Markov jump
process
Fig. 3.3 Illustration of our approach: The continuous dy-
namics is highly nonlinear and has many scales. It is rep-
resented by the linear propagator T , whose discretiza-
tion yields a ﬁnite-dimensional transition matrix that rep-
resents the Markov State Model (MSM). If the discretiza-
tion error is small enough, the Markov chain or jump pro-
cess induced by the MSM is a good approximation of the
dominant timescales of the original continuous dynamics
discrete states. The statistical estimation error in-
volved in this estimation will be discussed in the
subsequent chapters; the rest of the current chap-
ter focuses only on the approximation error due
to discretization of the transfer operator.
Here we consider a discretization of state
space Ω into n sets. In practice, this discretiza-
tion is often a simple partition with sharp bound-
aries, but in some cases it may be desirable to
discretize Ω into fuzzy sets [46]. We can de-
scribe both cases by deﬁning membership func-
tions χi(x) that quantify the probability of point
x to belong to set i [47] which have the property
n
i=1 χi(x) = 1. We will concentrate on a crisp
partitioning with step functions:
χi(x) = χcrisp
i
(x) =
1
x ∈Si,
0
x /∈Si.
(3.24)
Here we have used n sets S = {S1,...,Sn}
which entirely partition state space (n
i=1 Si =
Ω) and have no overlap (Si ∩Sj = ∅for all
i ̸= j). A typical example of such a crisp parti-
tioning is a Voronoi tessellation [45], where one
deﬁnes n centers ¯xi, i = 1...n, and set Si is the
union of all points x ∈Ω which are closer to ¯xi
than to any other center using some distance met-
ric (illustrated in Figs. 3.4b and c). Note that such
a discretization may be restricted to some subset
of the degrees of freedom, e.g. in MD one often
ignores velocities and solvent coordinates when
discretizing.
The stationary probability πi to be in set i is
then given by the full stationary density as:
πi =

x∈Si
dxμ(x),
and the local stationary density μi(x) restricted
to set i (see Fig. 3.4b) is given by
μi(x) =

μ(x)
πi
x ∈Si,
0
x /∈Si.
(3.25)
These properties are local, i.e. they do not re-
quire information about the full state space.
3.4
Transition Matrix
Together with the discretization, the Markov
model is deﬁned by the row-stochastic transi-
tion probability matrix, T(τ) ∈Rn×n, which is
the discrete approximation of the transfer opera-
tor described in Sect. 3.2 via:
Tij(τ) = ⟨χj,(T (τ) ◦χi)⟩μ
⟨χi,χi⟩μ
(3.26)
Physically, each element Tij(τ) represents the
time-stationary probability to ﬁnd the system in
state j at time t + τ given that it was in state i at
time t. By deﬁnition of the conditional probabil-
ity, this is equal to:

3
Markov Model Theory
31
Fig. 3.4 Crisp state space discretization illustrated on a
one-dimensional two-well and a two-dimensional three-
well potential. (a) Two-well potential (black) and station-
ary distribution μ(x) (red). (b) Characteristic functions
v1(x) = χ1(x), v2(x) = χ2(x) (black and red). This dis-
cretization has the corresponding local densities μ1(x),
μ2(x) (blue and yellow), see Eq. (3.25). (c) Three-well po-
tential (black contours indicate the isopotential lines) with
a crisp partitioning into three states using a Voronoi parti-
tion with the centers denoted (+)
Tij(τ) = P
	
x(t + τ) ∈Sj


 x(t) ∈Si

(3.27)
= P[x(t + τ) ∈Sj ∩x(t) ∈Si]
P[x(t) ∈Si]
(3.28)
=

Si dxμi(x)p(x,Sj;τ)

x dxμi(x)
,
(3.29)
where we have used Eq. (3.2). Note that in
this case the integrals run over individual sets
and only need the local equilibrium distributions
μi(x) as weights. This is a very powerful fea-
ture: In order to estimate transition probabilities,
we do not need any information about the global
equilibrium distribution of the system, and the
dynamical information needed extends only over
time τ. In principle, the full dynamical informa-
tion of the discretized system can be obtained
by initiating trajectories of length τ out of each
state i as long as we draw the starting points of
these simulations from a local equilibrium den-
sity μi(x) [24, 37, 47].
The transition matrix can also be written in
terms of correlation functions [42]:
Tij(τ) = E[χi(x(t))χj(x(t + τ))]
E[χi(x(t))]
=
ccorr
ij (τ)
πi
,
(3.30)
where the unconditional transition probability
ccorr
ij (τ) = πiTij(τ) is an equilibrium time cor-
relation function which is normalized such that

i,j ccorr
ij (τ) = 1. For dynamics fulﬁlling de-
tailed balance, the correlation matrix is symmet-
ric (ccorr
ij (τ) = ccorr
ji (τ)).
Since the transition matrix T(τ) is a discretiza-
tion of the transfer operator T [35, 36, 36, 37]
(Sect. 3.2), we can relate the functions that are
transported by T (functions ut in Eq. (3.8)) to
column vectors that are multiplied to the matrix
from the right while the probability densities pt
(Eq. (3.10)) correspond to row vectors that are
multiplied to the matrix from the left. Suppose
that p(t) ∈Rn is a column vector whose elements
denote the probability, or population, to be within
any set j ∈{1,...,n} at time t. After time τ, the
probabilities will have changed according to:
pj(t + τ) =
n

i=1
pi(t)Tij(τ),
(3.31)
or in matrix form:
pT (t + τ) = pT (t)T(τ)
(3.32)
Note that an alternative convention often used
in the literature is to write T(τ) as a column-
stochastic matrix, obtained by taking the trans-

32
M. Sarich et al.
pose of the row-stochastic transition matrix de-
ﬁned here.
The stationary probabilities of discrete states,
πi, yield the unique discrete stationary distribu-
tion of T:
πT = πT T(τ).
(3.33)
All equations encountered so far are con-
cerned with the discrete state space given by the
partition sets, i.e., pT (t) and pT (t +τ) are proba-
bility distribution on the discrete state space. The
probability distribution on the continuous state
space related to pT (t) is
ut(x) =

i
pi(t)χi(x).
If we propagate ut with the true dynamics for
time τ, we get ut+τ = T (τ) ◦ut. However, ut+τ
and pT (t + τ) will no longer be perfectly related
as above, i.e., we will only have
ut+τ(x) ≈

i
pi(t + τ)χi(x).
We wish now to understand the error involved
with this approximation. Moreover, we wish to
model the system kinetics on long timescales by
approximating the true dynamics with a Markov
chain on the discrete state space of n states. Us-
ing T(τ) as a Markov model predicts that for
later times, t + kτ, the probability distribution
will evolve as:
pT (t + kτ) = pT (t)Tk(τ),
(3.34)
on the discrete state space which can only approx-
imate the true distribution,
ut+kτ =

T (τ)
k ◦ut,
that would have been produced by the continuous
transfer operator, as Eq. (3.34) is the result of a
state space discretization. The discretization error
involved in this approximation thus depends on
how this discretization is chosen and is analyzed
in detail below. A description alternative to that
of transition matrices quite common in chemical
physics is using rate matrices and Master equa-
tions [5, 24, 26, 40, 41, 48].
3.5
Discretization Error and
Non-Markovianity
The Markov model T(τ) is indeed a model in the
sense that it only approximates the long-time dy-
namics based on a discretization of state space,
making the dynamical equation (3.34) approxi-
mate. Here we analyze the approximation quality
of Markov models in detail and obtain a descrip-
tion that reveals which properties the state space
discretization and the lag time τ must fulﬁll in
order to obtain a good model.
Previous works have mainly discussed the
quality of a Markov model in terms of its “Marko-
vianity” and introduced tests of Markovianity of
the process x(t) projected onto the discrete state
space. The space-continuous dynamics x(t) de-
scribed in Sect. 3.1 is, by deﬁnition, Markovian
in full state space Ω and it can thus be exactly de-
scribed by a linear operator, such as the transfer
operator T (τ) deﬁned in Eq. (3.8). The prob-
lem lies in the fact that by performing a state
space discretization, continuous states x ∈Ω are
grouped into discrete states si (Sect. 3.3), thus
“erasing” information of the exact location within
these states and “projecting” a continuous trajec-
tory x(t) onto a discrete trajectory s(t) = s(x(t)).
This jump process, s(t), is not Markovian, but
Markov models attempt to approximate s(t) with
a Markov chain.
Thus, non-Markovianity occurs when the full
state space resolution is reduced by mapping the
continuous dynamics onto a reduced space. In
Markov models of molecular dynamics, this re-
duction consists usually of both neglect of de-
grees of freedom and discretization of the re-
solved degrees of freedom. Markov models typi-
cally only use atom positions, thus the velocities
are projected out [9, 32]. So far, Markov models
have also neglected solvent degrees of freedom
and have only used the solute coordinates [9, 33],
and the effect of this was studied in detail in [23].
Indeed, it may be necessary to incorporate sol-
vent coordinates in situations where the solvent
molecules are involved in slow processes that are
not easily detected in the solute coordinates [25].
Often, Markov models are also based on distance
metrics that only involve a subset of the solute

3
Markov Model Theory
33
Fig. 3.5 Illustration of the discretization error by com-
paring the dynamics of the diffusion in a double well po-
tential (a, e) (see Supplementary Information for setup)
at time steps 0 (b), 250 (c), 500 (d) with the pre-
dictions of a Markov model parametrized with a too
short lag time τ = 250 at the corresponding times 0 (f),
250 (g), 500 (h). (b, c, d) show the true density pt(x)
(solid black line) and the probabilities associated with
the two discrete states left and right of the dashed line.
The numbers in (f, g, h) are the discrete state prob-
abilities pi(t + kτ) predicted by the Markov model
while the solid black line shows the hypothetical den-
sity pi(t + kτ)μi(x) that inherently assumed by the
Markov model by using the discrete state probabilities
to correspondingly weight the local stationary densi-
ties
atoms, such as RMSD between heavy atom or al-
pha carbon coordinates [4, 9, 33], or backbone
dihedral angles [5, 32]. Possibly the strongest ap-
proximation is caused by clustering or lumping
sets of coordinates in the selected coordinate sub-
space into discrete states [4, 5, 9, 26, 33]. For-
mally, all of these operations aggregate sets of
points in continuous state space Ω into discrete
states, and the question to be addressed is what is
the magnitude of the discretization error caused
by treating the non-Markovian jump process be-
tween these sets as a Markov chain.
Consider the diffusive dynamics model de-
picted in Fig. 3.5a and let us follow the evolu-
tion of the dynamics given that we start from
a local equilibrium in basin A (Fig. 3.5b), ei-
ther with the exact dynamics, or with the Markov
model dynamics on the discrete state space A
and B. After a step τ, both dynamics have trans-
ported a fraction of 0.1 of the ensemble to B. The
true dynamics resolves the fact that much of this
is still located near the saddle point (Fig. 3.5c).
The Markov model cannot resolve local densi-
ties within its discrete states, which is equivalent
to assuming that for the next step the ensemble
has already equilibrated within the discrete state
(Fig. 3.5g). This difference affects the discrete
state (basin) probabilities at time 2τ: In the true
dynamics, a signiﬁcant part of the 0.1 fraction can
cross back to A as it is still near the saddle point,
while this is not the case in the Markov model
where the 0.1 fraction is assumed to be relaxed
to states mostly around the minimum (Compare
Figs. 3.5d and h). As a result, the probability to
be in state B is higher in the Markov model than
in the true dynamics. The difference between the

34
M. Sarich et al.
Markov model dynamics and the true dynamics
is thus a result of discretization, because the dis-
cretized model can no longer resolve deviations
from local equilibrium density μi(x) within the
discrete state.
This picture suggests the discretization error to
have two properties: (a) the ﬁner the discretiza-
tion, the smaller the discretization error is, and
(b) when increasing the coarse-graining time, or
time resolution, of our model, τ, the errors for any
ﬁxed point in time t should diminish, because we
have less often made the approximation of impos-
ing local equilibrium.
3.6
Quantifying the Discretization
Error
In order to quantify the discretization error, we
will exploit the fact that the construction of a
Markov State Model can be related to a projec-
tion of the transfer operator T (τ). This projec-
tion, denoted Q, is the orthogonal projection with
respect to the scalar product ⟨·,·⟩μ onto a ﬁnite
dimensional space D spanned by a given basis
q1,...,qn, e.g., for qi = χi being the characteris-
tic functions from (3.24) that are associated with
a crisp partitioning of the state space. For a gen-
eral function u, Qu is the best possible represen-
tation of u in the space D. In general, it can be
calculated [32, 37, 40] that the projected propa-
gation operator, that is, the best representation of
the propagator T in our space D, has the form
QT (τ)Q. It can be represented by the matrix
T(τ) = T (τ)M−1 with
Tij(τ) = ⟨qj,(T (τ) ◦qi)⟩μ
⟨qi,qi⟩μ
,
Mij = ⟨qj,qi⟩μ
⟨qi,qi⟩μ
.
(3.35)
If we choose qi = χi being the characteristic
functions from (3.24) that are associated with
a crisp partitioning of the state space into sets
S1,...,Sn, we ﬁnd M = Id because of orthog-
onality of the characteristic functions. Moreover,
in this case, as calculated in (3.29)
T(τ)ij = Tij(τ) = P
	
x(t + τ) ∈Sj


 x(t) ∈Si

.
This means that this MSM transition matrix can
be interpreted as the projection of the transfer
operator with Q being the projection onto the
discretization basis. Together with Fig. 3.5 this
suggests a practical measure to quantify the dis-
cretization error. Densities, eigenfunctions or any
other function f (x) of the continuous state x, are
approximated by its best-approximations ˆf (x) =
Qf (x) within the space spanned by the dis-
cretization basis q1,...,qn. In the case of a crisp
partitioning of state space, functions f (x) are ap-
proximated through the discretization S1,...,Sn
by step functions ˆf (x) that are constant within
the discrete states:
ˆf (x) = Qf (x) =
n

i=1
aiχi(x)
(3.36)
where the coefﬁcients are given by the projection
weighted by the probability of each state:
ai = ⟨f,χi⟩μ
⟨1,χi⟩μ
=

Si dxμ(x)f (x)

Si dxμ(x)
.
(3.37)
The approximation error that is caused by the
discretization is then deﬁned as the μ-weighted
Euclidean norm ∥·∥μ,2 of the difference between
discretized and original function:
δf ≡
f (x) −ˆf (x)

μ,2
(3.38)
=

Ω
dxμ(x)

f (x) −ˆf (x)
2
1/2
. (3.39)
The projection allows the comparison between
true and Markov model dynamics to be made
exactly as suggested by Fig. 3.5: In both cases
we start with an arbitrary initial density pro-
jected onto discrete states, Qp0(x), then trans-
port this density either with the true or with the
Markov model dynamics for some time kτ. Sub-
sequently, the densities is again projected onto
discrete states by Q and then compared:
• The true dynamics transports the initial den-
sity Qp0(x) to [T (τ)]kQp0(x)
• The Markov model dynamics transports the
initial density Qp0(x) to QT (τ)Qp0(x) in
one step and to Q[T (τ)Q]kp0(x) in k steps
using the identity for projections Q ◦Q = Q.

3
Markov Model Theory
35
• Projecting both densities to local densities and
comparing yields the difference
ε(k) =
Q
	
T (τ)
kQp0(x)
−Q
	
T (τ)Q
kp0(x)

μ,2
(3.40)
=
	
Q
	
T (τ)
kQ
−Q
	
T (τ)Q
k
p0(x)

μ,2.
(3.41)
In order to remove the dependency on the initial
distribution p0(x), we assume the worst case: the
maximal possible value of ε(k) amongst all pos-
sible p0(x) is given by the operator-2-norm of
the error matrix [Q[T (τ)]kQ −Q[T (τ)Q]k],
where ∥A∥μ,2 ≡max∥x∥=1 ∥Ax∥μ,2 [17], thus
the Markov model error is deﬁned as:
E(k) :=
Q
	
T (τ)
kQ −Q
	
T (τ)Q
k
μ,2,
(3.42)
which measures the maximum possible differ-
ence between the true probability density at time
kτ and the probability density predicted by the
Markov model at the same time.
In order to quantify this error, we declare our
explicit interest in the m slowest processes with
eigenvalues 1 = λ1 > λ2 ≥λ3 ≥··· ≥λm. Gen-
erally, m ≤n, i.e. we are interested in less pro-
cesses than the number of n eigenvectors that a
Markov model with n states has. We deﬁne the
following two quantities:
• δi := ∥ψi(x) −Qψi(x)∥μ,2 is the eigenfunc-
tion approximation error, quantifying the er-
ror of approximating the true continuous
eigenfunctions of the transfer operator, ψi (see
Fig. 3.6 for illustration), for all i ∈{1,...,m}.
δ := maxi δi is the largest approximation error
amongst these ﬁrst m eigenfunctions
• η(τ) := λm+1(τ)
λ2(τ)
is the spectral error, the er-
ror due to neglecting the fast subspace of the
transfer operator, which decays to 0 with in-
creasing lag time: limτ→∞η(τ) = 0.
The general statement is that the Markov model
error E(k) can be proven [36] to be bounded from
above by the following expression:
E(k) ≤min

2,
	
mδ + η(τ)
	
a(δ) + b(τ)

λk
2
(3.43)
Fig. 3.6 Illustration of the eigenfunction approximation
error δ2 on the slow transition in the diffusion in a dou-
ble well (top, black line). The slowest eigenfunction is
shown in the lower four panels (black), along with the step
approximations (green) of the partitions (vertical black
lines) at x = 50; x = 40; x = 10,20,...,80,90; and
x = 40,45,50,55,60. The eigenfunction approximation
error δ2 is shown as red area and its norm is printed
with
a(δ) = √m(k −1)δ,
(3.44)
b(τ) =
η(τ)
1 −η(τ)

1 −η(τ)k−1
.
(3.45)
This implies two observations:
1. For long times, the overall error decays to zero
with λk
2, where 0 < λ2 < 1, thus the station-
ary distribution (recovered as k →∞) is al-
ways correctly modeled, even if the kinetics
are badly approximated.
2. The error during the kinetically interesting
timescales consists of a product whose terms
contain separately the discretization error and
spectral error. Thus, the overall error can be
diminished by choosing a discretization basis
q1,...,qn that approximates the slow eigen-
functions well, and using a large lag time τ.
For a crisp partitioning this implies that the

36
M. Sarich et al.
discretization has to be ﬁne enough to trace
the slow eigenfunctions well.
Depending on the ratio λm+1(τ)/λ2(τ), the de-
cay of the spectral error η(τ) with τ might be
slow. It is thus interesting to consider a special
case of discretization that yields n = m and δ = 0.
This would be achieved by a Markov model that
uses a fuzzy partition with membership functions
q1,...,qn derived from the ﬁrst m eigenfunc-
tions ψ1,...,ψm [24]. In this case, the space
spanned by q1,...,qn would equal the domi-
nant eigenspace and hence the projection error
would be δ = 0. From a more practical point of
view, this situation can be approached by using
a Markov model with n > m states located such
that they discretize the ﬁrst m eigenfunctions with
a vanishing discretization error, and then declar-
ing that we are only interested in these m slow-
est relaxation processes. In this case we do not
need to rely on the upper bound of the error from
Eq. (3.43), but directly get the important result
E(k) = 0.
In other words, a Markov model can approx-
imate the kinetics of slow processes arbitrarily
well, provided the discretization can be made suf-
ﬁciently ﬁne or improved in a way that contin-
ues to minimize the eigenfunction approxima-
tion error. This observation can be rationalized by
Eq. (3.19) which shows that the dynamics of the
transfer operator can be exactly decomposed into
a superposition of slow and fast processes.
An important consequence of the δ-depend-
ence of the error is that the best partition is not
necessarily metastable. Previous work [9, 9, 20,
32, 36, 42] has focused on the construction of
partitions with high metastability (deﬁned as the
trace of the transition matrix T(τ)), e.g. the two-
state partition shown in Fig. 3.6b). This approach
was based on the idea that the discretized dynam-
ics must be approximately Markovian if the sys-
tem remained in each partition sufﬁciently long to
approximately lose memory [9]. While it can be
shown that if a system has m metastable sets with
λm ≫λm+1, then the most metastable partition
into n = m sets also minimizes the discretization
error [36, 36], the expression for the discretiza-
tion error given here has two further profound
ramiﬁcations: First, even in the case where there
exists a strong separation of timescales so the sys-
tem has clearly m metastable sets, the discretiza-
tion error can be reduced even further by splitting
the metastable partition into a total of n > m sets
which are not metastable. And second, even in the
absence of a strong separation of timescales, the
discretization error can be made arbitrarily small
by making the partition ﬁner, especially in tran-
sition regions, where the eigenfunctions change
most rapidly (see Fig. 3.6b).
Figure 3.7 illustrates the Markov model dis-
cretization error on a two-dimensional three-well
example where two slow processes are of inter-
est. The left panels show a metastable partition
with 3 sets. As seen in Fig. 3.7d, the discretiza-
tion errors |ψ2 −Qψ2|(x) and |ψ3 −Qψ3|(x) are
large near the transition regions, where the eigen-
functions ψ2(x) and ψ3(x) change rapidly, lead-
ing to a large discretization error. Using a random
partition (Fig. 3.7, third column) makes the situ-
ation worse, but increasing the number of states
reduces the discretization error (Fig. 3.7, fourth
column), thereby increasing the quality of the
Markov model. When states are chosen such as to
well approximate the eigenfunctions, a very small
error can be obtained with few sets (Fig. 3.7, sec-
ond column).
These results suggest that an adaptive dis-
cretization algorithm may be constructed which
minimizes the E(k) error. Such an algorithm
could iteratively modify the deﬁnitions of dis-
cretization sets as suggested previously [9], but
instead of maximizing metastability it would
minimize the E(k) error which can be evalu-
ated by comparing eigenvector approximations
on a coarse discretization compared to a refer-
ence evaluated on a ﬁner discretization [36].
One of the most intriguing insights from both
Eq. (3.19) and the results of the discretization er-
ror is that if, for a given system, only the slowest
dynamical processes are of interest, it is sufﬁcient
to discretize the state space such that the ﬁrst
few eigenvectors are well represented (in terms
of small approximation errors δi). For example,
if one is interested in processes on timescales t∗
or slower, then the number m of eigenfunctions
that need to be resolved is equal to the number of

3
Markov Model Theory
37
Fig. 3.7 Illustration of the eigenfunction approximation
errors δ2 and δ3 on the two slowest processes in a two-
dimensional three-well diffusion model (see Supplemen-
tary Information for model details). The columns from
left to right show different state space discretizations with
white lines as state boundaries: (i) 3 states with maxi-
mum metastability, (ii) the metastable states were further
subdivided manually into 13 states to better resolve the
transition region, resulting in a partition where no indi-
vidual state is metastable, (iii)/(iv) Voronoi partition using
25/100 randomly chosen centers, respectively. (a) Poten-
tial, (b) The exact eigenfunctions of the slow processes,
ψ2(x) and ψ3(x), (c) The approximation of eigenfunctions
with discrete states, Qψ2(x) and Qψ3(x), (d) Approxima-
tion errors |ψ2 −Qψ2|(x) and |ψ3 −Qψ3|(x). The error
norms δ2 and δ3 are given

38
M. Sarich et al.
implied timescales with ti ≥t∗. Due to the per-
fect decoupling of processes for reversible dy-
namics in the eigenfunctions (see Eqs. (3.20)–
(3.21)), no gap after these ﬁrst m timescales of
interest is needed. Note that the quality of the
Markov model does not depend on the dimen-
sionality of the simulated system, i.e. the number
of atoms. Thus, if only the slowest process of the
system is of interest (such as the folding process
in a two-state folder), only a one-dimensional pa-
rameter, namely the level of the dominant eigen-
function, needs to be approximated with the clus-
tering, even if the system is huge. This opens a
way to discretize state spaces of very large molec-
ular systems.
3.7
Approximation of Eigenvalues
and Timescales by Markov
Models
One of the most interesting kinetic properties of
molecular systems are the intrinsic timescales of
the system. They can be both experimentally ac-
cessed via relaxation or correlation functions that
are measurable with various spectroscopic tech-
niques [2, 5, 20, 28], but can also be directly
calculated from the Markov model eigenvalues
as implied timescales, Eq. (3.22). Thus, we in-
vestigate the question how well the dominant
eigenvalues λi are approximated by the Markov
model, which immediately results in estimates for
how accurately a Markov model may reproduce
the implied timescales of the original dynam-
ics. Consider the ﬁrst m eigenvalues of T (τ),
1 = λ1(τ) > λ2(τ) ≥··· ≥λm(τ), and let 1 =
ˆλ1(τ) > ˆλ2(τ) ≥··· ≥ˆλm(τ) denote the associ-
ated eigenvalues of the Markov model T(τ). The
rigorous mathematical estimate from [13] states
that
max
j=1,...,m


λj(τ) −ˆλj(τ)


 ≤(m −1)λ2(τ)δ2,
(3.46)
where δ is again the maximum discretization er-
ror of the ﬁrst m eigenfunctions, showing that the
eigenvalues are well reproduced when the dis-
cretization well traces these eigenfunctions. In
particular if we are only interested in the eigen-
value of the slowest process, λ2(τ), which is of-
ten experimentally reported via the slowest relax-
ation time of the system, t2, the following esti-
mate of the approximation error can be given:
|λ2(τ) −ˆλ2(τ)|
|λ2(τ)|
≤δ2
2.
(3.47)
As λ2(τ) corresponds to a slow process, we
can make the restriction λ2(τ) > 0. Moreover,
the discretization error of Markov models based
on full partitions of state space is such that the
eigenvalues are always underestimated [13], thus
λ2(τ) −ˆλ2(τ) > 0. Using Eq. (3.22), we thus ob-
tain the estimate for the discretization error of the
largest implied timescale and the corresponding
smallest implied rate, k2 = t−1
2 :
ˆt−1
2
−t−1
2
= ˆk2 −k2 ≤−τ −1 ln

1 −δ2
2

, (3.48)
which implies that for either δ2 →0+ or τ →∞,
the error in the largest implied timescale or small-
est implied rate tends to zero. Moreover, since
λ2(τ) →0 for τ →∞, this is also true for the
other processes:
lim
τ→∞
|λj(τ) −ˆλj(τ)|
|λj(τ)|
= 0,
(3.49)
and also
lim
δ→0
|λj(τ) −ˆλj(τ)|
|λj(τ)|
= 0,
(3.50)
which means that the error of the implied time-
scales also vanishes for either sufﬁciently long
lag times τ or for sufﬁciently ﬁne discretiza-
tion. This fact has been empirically observed in
many previous studies [2, 5, 9, 26, 32, 33, 42],
but can now be understood in detail in terms of
the discretization error. It is worth noting that
observing convergence of the slowest implied
timescales in τ is not a test of Markovianity.
While Markovian dynamics implies constancy of
implied timescales in τ [32, 42], the reverse is not
true and would require the eigenvectors to be con-
stant as well. However, observing the lag time-
dependence of the implied timescales is a useful
approach to choose a lag time τ at which T(τ)

3
Markov Model Theory
39
Fig. 3.8 Convergence of the slowest implied timescale
t2 = −τ/lnλ2(τ) of the diffusion in a double-well
potential depending on the MSM discretization. The
metastable partition (black, solid) has greater error than
non-metastable partitions (blue, green) with more states
that better trace the change of the slow eigenfunction near
the transition state
shall be calculated, but this model needs to be val-
idated subsequently (see Chapter Estimation and
Validation).
Figure 3.8 shows the slowest implied timescale
t2 for the diffusion in a two-well potential (see
Fig. 3.6) with discretizations shown in Fig. 3.6.
The two-state partition at x = 50 requires a lag
time of ≈2000 steps in order to reach an error of
<3 % with respect to the true implied timescale,
which is somewhat slower than t2 itself. When
the two-state partition is distorted by shifting the
discretization border to x = 40, this quality is
not reached before the process itself has relaxed.
Thus, in this system two states are not sufﬁcient
to build a Markov model that is at the same time
precise and has a time resolution good enough to
trace the decay of the slowest process. By using
more states and particularly a ﬁner discretization
of the transition region, the same approximation
quality is obtained with only τ ≈1500 (blue) and
τ ≈500 steps (green).
Figure 3.9 shows the two slowest implied
timescales t2, t3 for the diffusion in a two-
dimensional three-well potential with discretiza-
tions shown in Fig. 3.7a. The metastable 3-state
partition requires a lag time of ≈1000 steps in
Fig. 3.9 Implied timescales for the two slowest processes
in the two-dimensional three-well diffusion model (see
Fig. 3.7a for potential and Supplementary Information for
details). The colors black, red, yellow, green correspond
to the four choices of discrete states shown in columns 1
to 4 of Fig. 3.7. A ﬁne discretization of the transition re-
gion clearly gives the best approximation to the timescales
at small lag times
order to reach an error of <3 % with respect
to the true implied timescale, which is some-
what shorter than the slow but longer than the
fast timescale, while reﬁning the discretization
near the transition states achieves the same pre-
cision with τ ≈200 using only 12 states. A k-
means clustering with k = 25 is worse than the
metastable partition, as some clusters cross over
the transition region and fail to resolve the slow
eigenfunctions. Increasing the number of clusters
to k = 100 improves the result signiﬁcantly, but is
still worse than the 12 states that have been man-
ually chosen so as to well resolve the transition
region. This suggests that excellent MSMs could
be built with rather few states when an adaptive
algorithm that more ﬁnely partitions the transi-
tion region is employed.
Note that the estimate (3.46) bounds the max-
imal eigenvalue error for the dominant eigenval-
ues by the maximal projection error of the domi-
nant eigenfunction. In [34], it is also shown that if
u is a selected, maybe non-dominant eigenfunc-
tions for an eigenvalue λ(τ) and δ = ∥u −Qu∥is
its discretization error, the associated MSM will
inherit an eigenvalue ˆλ(τ) with


λ(τ) −
ˆ
λ(τ)


 ≤2λ2(τ)δ
(3.51)
if δ = ∥u −Qu∥≤3/4. That is, it is also pos-
sible to approximate selected timescales well by
choosing the discretization such that it traces the

40
M. Sarich et al.
associated eigenfunctions well without having to
take all slower eigenfunctions into account [34].
3.8
An Alternative Set-Oriented
Projection
In the last sections, we have derived an interpre-
tation of Markov models as projections of the
transfer operator T (τ) and connected their dis-
cretization error in terms of density propagation
and in terms of eigenvalue and timescale approx-
imation to projection errors. Estimates for these
quality measures show that the discretization ba-
sis should be chosen such that it traces the slow
eigenfunctions well. For a crisp partitioning this
means that the eigenfunctions should be well ap-
proximated by step-functions induced by the sets
S1,...,Sn. On the other hand, the results are
not restricted to projections onto step-functions.
Theoretically, one could choose an arbitrary dis-
cretization basis q1,...,qn for constructing the
Markov model, see [40], and the corresponding
MSM matrix would formally be given by T(τ) =
T (τ)M−1 (3.35). In praxis, the basis q1,...,qn
has be chosen such that it leads to interpretable
matrices T (τ) and M in terms of transition prob-
abilities between sets. Otherwise, one will not
be able compute estimates for these matrices and
thus for the resulting Markov model. For a crisp
partitioning S1,...,Sn and the associated char-
acteristic functions χ1,...,χn we have this prop-
erty
Tij(τ) = P
	
x(t +τ) ∈Sj


 x(t) ∈Si

,
M = Id.
The drawback of this method is that coarse parti-
tionings always lead to coarse step-functions that
might not approximate the eigenfunctions well.
Therefore, a reﬁnement might be necessary in re-
gions where the slow eigenfunctions are varying
strongly.
In this section, we will show how to derive
another set-oriented discretization basis where a
rather coarse partitioning does not lead to a coarse
discretization basis. The main idea goes back to
[32, 37, 40]: simply decrease the size of the sets
S1,...,Sn on which the constancy of the dis-
cretization basis in enforced. Of course, the re-
sulting sets do not cover the whole state space
and hence do not form a crisp partitioning any-
more. We will call such sets core sets in the fol-
lowing and denote them by C1,...,Cn in order to
distinguish from a crisp partitioning S1,...,Sn.
The two questions that we have to answer are
(a) how these core sets induce a discretization
basis that approximates the slow eigenfunctions
well, and (b) how to interpret the transition proba-
bilities between the core sets to calculate the tran-
sition matrices T (τ) and M with respect to this
basis. The idea is to attach a fuzzy partitioning to
the core sets that is connected to the dynamics of
the process itself. For every core set Ci we deﬁne
the so called committor function
qi(x) = P
	
x(σ) ∈Ci


 x(0) = x

,
(3.52)
where σ is the ﬁrst time one of the core sets is
entered by the process.
That is, qi(x) is the probability that the pro-
cess will hit the set Ci next rather than the other
core sets when being started in point x. From the
deﬁnition it follows that [27, 40]
qi(x) = 1
for all x ∈Ci,
qi(x) = 0
for all x ∈Cj,j ̸= i,

i
qi(x) = 1
for all x.
The advantage of taking committor functions
as discretization basis is that the core sets, on
which the committor functions equal to char-
acteristic functions, do not have to cover the
whole state space. It is allowed to have a region
C = Ω \ 
j Cj that is not partitioned and where
the values of the committor functions can con-
tinuously vary between 0 and 1. This means that
the part of state space can be shrinked, where the
slow eigenfunctions need to be similar to step-
functions. Moreover, it has been shown in [34]
that the approximation of the slow eigenfunc-
tions by the committors inside of the fuzzy re-
gion C is accurate if the region C is left by the
process quickly enough. Being more precise, this
approximation error is dominated by the ratio of
the expected time the process needs to leave the

3
Markov Model Theory
41
region C and the implied timescale that is asso-
ciated with the target eigenfunction. We will see
that it is computationally very suitable that this is
the main constraint on C.
Beside the good approximation of the slow
eigenfunctions, the committor discretization has
another advantage. We can calculate the Markov
model from transition probabilities between the
core sets without having to compute the commit-
tor functions explicitly. It is shown in [32, 37, 40]
that for the committor basis we can interpret the
matrices T (τ) and M as follows:
Deﬁne x+(t) as the index of the core set that
is hit next after time t, and x−(t) as the index of
the core set that the process has visited last before
time t, then
Mij = P
	
x+(t) = j


 x−(t) = i

,
and
Tij(τ) = P
	
x+(t + τ) = j


 x−(t) = i

.
Note that this can be interpreted in terms of a
transition behavior. If we interpret Tij(τ) as the
probability that a transition occurs from index i at
time t to index j at time t +τ, then we say a tran-
sition has occurred if the process was in core set
i at time t or at least came last from this set and
after a time-step τ it was in core set j or at least
went next to this set afterwards. Figure 3.10 il-
lustrates this interpretation. As mentioned above,
these transition probabilities can be directly esti-
mated from realizations without having to com-
pute the committor functions.
The effect on the approximation of the slowest
eigenfunction can be seen in Fig. 3.11.
Computationally, there is an important insight.
Assume a crisp partitioning of state space into n
sets S1,...,Sn is given. Now, a committor dis-
cretization would allow to avoid a part of state
space from being discretized, as long as the pro-
cess leaves this part typically much faster than
the interesting timescales. On the one hand, these
parts of state space exactly correspond to re-
gions where the slow eigenfunctions are varying
strongly. So starting from the crisp partitioning
we can beneﬁt most by simply ignoring this part
of state space and treating the remaining sets as
core sets. On the other hand, removing such part
of state space, where the process does not spend
a lot of time in, does not effect the computational
effort in order to generate transitions with respect
to the crisp partitioning or the resulting core sets
as in Fig. 3.10. Summarizing, one can always en-
hance a model based on a crisp partitioning by
simply declaring a part of state space as not be-
Fig. 3.10 Counting a transition in the sense of T12(τ) for
a crisp partitioning (left hand side) and for core sets (right
hand side) that do not cover the whole state space
Fig. 3.11 The beneﬁt of removing a part of state space
that is typically left quickly by the process. On the left
hand side: step-function approximation of the ﬁrst non-
trivial eigenfunction. Right hand side: committor approx-
imation of the same eigenfunction

42
M. Sarich et al.
longing to the discretization anymore, as long as
this part of state space is usually left quickly by
the process, and computationally one can get this
enhancement for free.
Let us illustrate this feature by an example. We
consider again a diffusion in the potential that is
illustrated in Fig. 3.12. Now, Fig. 3.13 shows an
optimal crisp partitioning into 9 sets, where every
well of the potential falls into another partitioning
set. Moreover, it shows the core set discretization
where only a part of the transition region between
the wells was excluded from the crisp discretiza-
tion.
The approximation by a step-function is too
coarse while removing the transition region and
shrinking the size of the sets leads to a smoother
Fig. 3.12 Example: diffusion in this multi-well potential
and better interpolation of the eigenfunction. As
we discussed in the previous sections, this has a
direct impact on the approximation quality of the
associated Markov model. For example, the fol-
lowing table shows the implied timescales ti of
the original Markov process and the approxima-
tions by the crisp partitioning and the enhanced
core set MSM.
t2
t3
t4
t5
original
17.5267
3.1701
0.9804
0.4524
core sets
17.3298
3.1332
0.9690
0.4430
crisp partition
16.5478
2.9073
0.8941
0.4006
As expected, the approximation quality in
terms of timescale approximation could be in-
creased by simply removing a small part of state
space from the discretization. The same enhance-
ment is achieved with respect to the density
propagation error E(k) (3.42). Figure 3.14 com-
pares the resulting error for the crisp partitioning
(black) and the core set discretization (blue) and
increasing k.
E(k) :=
Q
	
T (τ)
kQ −Q
	
T (τ)Q
k
μ,2.
Fig. 3.13 A metastable
crisp partitioning into 9
sets (left), and the derived
core set discretization by
removing the transition
region between the wells
(right)
Fig. 3.14 Density
propagation error E(k)
over k. Black: crisp
partitioning. Blue: core sets

3
Markov Model Theory
43
References
1. Andersen HC (1980) Molecular dynamics simula-
tions at constant pressure and/or temperature. J Chem
Phys 72(4):2384–2393. doi:10.1063/1.439486
2. Bieri O, Wirz J, Hellrung B, Schutkowski M,
Drewello M, Kiefhaber T (1999) The speed limit
for protein folding measured by triplet-triplet energy
transfer. Proc Natl Acad Sci USA 96(17):9597–9601.
http://www.pnas.org/content/96/17/9597.abstract
3. Bowman GR, Beauchamp KA, Boxer G, Pande
VS (2009) Progress and challenges in the auto-
mated construction of Markov state models for full
protein systems. J Chem Phys 131(12):124,101+.
doi:10.1063/1.3216567
4. Buchete NV, Hummer G (2008) Coarse Master Equa-
tions for Peptide Folding Dynamics. J Phys Chem B
112:6057–6069
5. Chan CK, Hu Y, Takahashi S, Rousseau DL, Eaton
WA, Hofrichter J (1997) Submillisecond protein
folding kinetics studied by ultrarapid mixing. Proc
Natl Acad Sci USA 94(5):1779–1784. http://www.
pnas.org/content/94/5/1779.abstract
6. Chodera JD, Dill KA, Singhal N, Pande VS, Swope
WC, Pitera JW (2007) Automatic discovery of
metastable states for the construction of Markov
models of macromolecular conformational dynamics.
J Chem Phys 126:155,101
7. Chodera JD, Noé F (2010) Probability distributions of
molecular observables computed from Markov mod-
els, II: uncertainties in observables and their time-
evolution. J Chem Phys 133:105,102
8. Chodera JD, Swope WC, Noé F, Prinz JH, Pande VS
(2010) Dynamical reweighting: improved estimates
of dynamical properties from simulations at multiple
temperatures. J Phys Chem. doi:10.1063/1.3592152
9. Chodera JD, Swope WC, Pitera JW, Dill KA (2006)
Long-time protein folding dynamics from short-time
molecular dynamics simulations. Multiscale Model
Simul 5:1214–1226
10. Cooke B, Schmidler SC (2008) Preserving the Boltz-
mann ensemble in replica-exchange molecular dy-
namics. J Chem Phys 129:164,112
11. Deuﬂhard P, Huisinga W, Fischer A, Schütte C
(2000) Identiﬁcation of almost invariant aggregates
in reversible nearly uncoupled Markov chains. Linear
Algebra Appl 315:39–59
12. Deuﬂhard P, Weber M (2005) Robust Perron cluster
analysis in conformation dynamics. Linear Algebra
Appl 398:161–184
13. Djurdjevac N, Sarich M, Schütte C (2012) Estimating
the eigenvalue error of Markov state models. Multi-
scale Model Simul 10(1):61–81
14. Duane S (1987) Hybrid Monte Carlo. Phys Lett B
195(2):216–222. doi:10.1016/0370-2693(87)91197-
X
15. Ermak DL (1975) A computer simulation of charged
particles in solution, I: technique and equilibrium
properties. J Chem Phys 62(10):4189–4196
16. Ermak DL, Yeh Y (1974) Equilibrium electro-
static effects on the behavior of polyions in solu-
tion: polyion-mobile ion interaction. Chem Phys Lett
24(2):243–248
17. Golub GH, van Loan CF (1996) Matrix computations,
3rd edn. John Hopkins University Press, Baltimore
18. Herau R, Hitrik M, Sjoestrand J (2010) Tunnel effect
and symmetries for Kramers Fokker-Planck type op-
erators. arXiv:1007.0838v1
19. Huisinga W (2001) Metastability of Markovian sys-
tems: a transfer operator based approach in applica-
tion to molecular dynamics. PhD thesis, Fachbereich
Mathematik und Informatik, FU Berlin
20. Huisinga W, Meyn S, Schütte C (2004) Phase transi-
tions and metastability for Markovian and molecular
systems. Ann Appl Probab 14:419–458
21. Jäger M, Nguyen H, Crane JC, Kelly JW, Grue-
bele M (2001) The folding mechanism of a beta-
sheet: the WW domain. J Mol Biol 311(2):373–393.
doi:10.1006/jmbi.2001.4873
22. van Kampen NG (2006) Stochastic processes in
physics and chemistry, 4th edn. Elsevier, Amsterdam
23. Keller B, Hünenberger P, van Gunsteren W (2010)
An analysis of the validity of Markov state mod-
els for emulating the dynamics of classical molecu-
lar systems and ensembles. J Chem Theor Comput.
doi:10.1021/ct200069c
24. Kube S, Weber M (2007) A coarse graining method
for the identiﬁcation of transition rates between
molecular conformations. J Chem Phys 126:024,103–
024,113
25. Meerbach E, Schütte C, Horenko I, Schmidt B (2007)
Metastable conformational structure and dynamics:
peptides between gas phase and aqueous solution.
Series in chemical physics, vol 87. Springer, Berlin,
pp 796–806
26. Metzner P, Horenko I, Schütte C (2007) Generator es-
timation of Markov jump processes based on incom-
plete observations nonequidistant in time. Phys Rev E
76(6):066,702+. doi:10.1103/PhysRevE.76.066702
27. Metzner P, Schütte C, Vanden-Eijnden E (2009)
Transition path theory for Markov jump processes.
Multiscale Model Simul 7(3):1192–1219
28. Neuweiler H, Doose S, Sauer M (2005) A micro-
scopic view of miniprotein folding: enhanced fold-
ing efﬁciency through formation of an intermedi-
ate. Proc Natl Acad Sci USA 102(46):16,650–16,655.
doi:10.1073/pnas.0507351102
29. Noé F, Horenko I, Schütte C, Smith JC (2007)
Hierarchical analysis of conformational dynamics
in biomolecules: transition networks of metastable
states. J Chem Phys 126:155,102
30. Noé F, Schütte C, Vanden-Eijnden E, Reich L, Weikl
TR (2009) Constructing the full ensemble of fold-
ing pathways from short off-equilibrium simulations.
Proc Natl Acad Sci USA 106:19,011–19,016
31. Prinz JH et al (2011) Markov models of molecu-
lar kinetics: generation and validation. J Chem Phys
134:174,105

44
M. Sarich et al.
32. Sarich M (2011) Projected transfer operators. PhD
thesis, Freie Universität Berlin
33. Sarich M, Noé F, Schütte C (2010) On the approx-
imation error of Markov state models. Multiscale
Model Simul 8:1154–1177
34. Sarich M, Schütte C (2012) Approximating selected
non-dominant timescales by Markov state models.
Comm Math Sci (in press)
35. Schütte
C
(1998)
Conformational
dynamics:
modelling,
theory,
algorithm,
and
applications
to biomolecules. Habilitation thesis, Fachbereich
Mathematik und Informatik, FU Berlin
36. Schütte C, Huisinga W (2003) Biomolecular confor-
mations can be identiﬁed as metastable sets of molec-
ular dynamics. In: Handbook of numerical analysis.
Elsevier, Amsterdam, pp 699–744
37. Schütte C, Sarich M (2013) Metastability and Markov
state models in molecular dynamics: modeling,
analysis, algorithmic approaches. Courant lecture
notes, vol 24. American Mathematical Society, Prov-
idence
38. Schütte C, Fischer A, Huisinga W, Deuﬂhard P
(1999) A direct approach to conformational dynam-
ics based on hybrid Monte Carlo. J Comput Phys
151:146–168
39. Schütte C, Noé F, Meerbach E, Metzner P, Hartmann
C (2009) Conformation dynamics. In: Jeltsch RGW
(ed) Proceedings of the international congress on
industrial and applied mathematics (ICIAM). EMS
Publishing House, New York, pp 297–336
40. Schütte C, Noé F, Lu J, Sarich M, Vanden-Eijnden
E (2011) Markov state models based on milestoning.
J Chem Phys 134(19)
41. Sriraman S, Kevrekidis IG, Hummer G (2005) Coarse
master equation from Bayesian analysis of replica
molecular dynamics simulations. J Phys Chem B
109:6479–6484
42. Swope WC, Andersen HC, Berens PH, Wilson KR
(1982) A computer simulation method for the calcu-
lation of equilibrium constants for the formation of
physical clusters of molecules: application to small
water clusters. J Chem Phys 76(1):637–649
43. Swope WC, Pitera JW, Suits F (2004) Describing
protein folding kinetics by molecular dynamics sim-
ulations, 1: theory. J Phys Chem B 108:6571–6581
44. Swope WC, Pitera JW, Suits F, Pitman M, Elefthe-
riou M (2004) Describing protein folding kinetics by
molecular dynamics simulations, 2: example applica-
tions to alanine dipeptide and beta-hairpin peptide.
J Phys Chem B 108:6582–6594
45. Voronoi MG (1908) Nouvelles applications des
parametres continus a la theorie des formes quadra-
tiques. J Reine Angew Math 134:198–287
46. Weber M (2006) Meshless methods in conformation
dynamics. PhD thesis, Freie Universität Berlin
47. Weber M (2010) A subspace approach to molecular
Markov state models via an inﬁnitesimal generator.
ZIB report 09-27-rev
48. Weber M (2011) A subspace approach to molecular
Markov state models via a new inﬁnitesimal genera-
tor. Habilitation thesis, Fachbereich Mathematik und
Informatik, Freie Universität Berlin

4
Estimation and Validation of Markov
Models
Jan-Hendrik Prinz, John D. Chodera, and Frank Noé
In this chapter, we discuss the problem of es-
timating the state-to-state transition matrix of a
Markov model given a set of trajectory data and
a discretization of conﬁguration space, the selec-
tion of an appropriate lag time (or observation in-
terval) τ, and validation of the resulting model
to ensure it is consistent with the data used to
construct it. We presume the trajectory data has
been generated by one or more molecular dy-
namics simulations initiated from conﬁgurations
sampled from either global equilibrium or a lo-
cal equilibrium within one or more of the dis-
cretized conformational states. These states can
be generated according to methods discussed in
previous chapters. This chapter follows Ref. [20]
which should be used for citation purposes.
4.1
Preliminaries: The Transition
Count Matrix
For simplicity, we ﬁrst consider the case of a sin-
gle equilibrium simulation trajectory X consist-
ing of N conﬁgurations sampled at a ﬁxed time
interval 
t,
J.-H. Prinz · F. Noé (B)
Freie Universität Berlin, Arnimallee 6, 14195 Berlin,
Germany
e-mail: frank.noe@fu-berlin.de
J.D. Chodera
Memorial Sloan-Kettering Cancer Center, New York,
NY 10065, USA
X =

x1 = x(t = 0),x2 = x(t = 
t),...,
xN = x

t = (N −1)
t

.
(4.1)
The generalization to multiple trajectories will be
discussed subsequently.
We suppose we have already deﬁned a crisp
state space discretization {S1,...,SK} where
each structure can be assigned uniquely to a dis-
crete state,
xk ∈Si ⇒sk = i,
k ∈{1,...,N}, i ∈{1,...,K}
allowing the trajectory to be encoded as the se-
quence (s1,...,sN) of discrete states visited at
times n
t along the trajectory.
We assume that the initial conﬁguration x1
was drawn from μs1(x), the equilibrium density
within the initial state s1. There are numerous
strategies that can be used to sample from the ini-
tial distribution μs1(x) for the purposes of initiat-
ing a simulation from s1, such as sampling from
a reweighted ensemble (e.g. generated by replica-
exchange [24] or well-converged meta-dynamics
[13] simulations) or utilizing a potential energy
bias Ubias(x) = −kBT lnμi(x) to rapidly equili-
brate a simulation within the state before remov-
ing the biasing potential to generate unbiased dy-
namical trajectories [21]. Note that in the limit
of very small discrete states, this problem van-
ishes as μi(x) can then be well approximated by
a step function (see the Supplementary Material
for [17]).
We can now deﬁne a state-to-state transition
count matrix Cobs(τ) = [cobs
ij (τ)] at lag time τ,
G.R. Bowman et al. (eds.), An Introduction to Markov State Models and Their Application to Long Timescale
Molecular Simulation, Advances in Experimental Medicine and Biology 797,
DOI 10.1007/978-94-007-7606-7_4, © Springer Science+Business Media Dordrecht 2014
45

46
J.-H. Prinz et al.
Fig. 4.1 Transition counting schemes for estimating
cobs
ij (τ): (a) Sampling the trajectory at discrete multiples
of the lag time τ, versus (b) utilizing a moving overlap-
ping window count
where τ = l
t now denotes an integer multiple
l ∈Z of the available time resolution 
t,
cobs
ij (τ) = cobs
ij (l
t).
(4.2)
This allows us to construct an estimator for the
correlation matrix deﬁned in Eq. (3.30),
ˆccorr
ij (τ) =
cobs
ij (τ)
N −l .
(4.3)
When the state space is discretized by a crisp par-
titioning, ˆccorr
ij (τ) simply counts the number of
times we observe the trajectory initially in state
i and in state j a time τ later. If multiple trajecto-
ries are available, then the count matrices of these
trajectories can be computed independently and
summed.
As a shorthand notation, we deﬁne the row
sums of Cobs(τ),
cobs
i
(τ) ≡
n

k=1
cobs
ik (τ).
(4.4)
For a crisp partitioning, cobs
i
(τ) is simply the
number of times the trajectory visited state i (ex-
cluding the last l −1 snapshots of the trajectory).
4.2
Counting Schemes
We distinguish between two approaches to count-
ing (see Fig. 4.1 for an illustration):
1. Sampling the trajectory at time lag τ: Here,
the trajectory is sampled at time lag τ, and
only sample points at nτ, n ∈Z, are used for
counting:
cobs
ij (τ)
= cobs
ij (l
t)
=
⌊(N−1)/l⌋−1

k=0
χi(x(l·k)+1)χj(x(l·k)+l+1).
(4.5)
This corresponds to the original meaning of
counting transitions in the concrete case of
a given trajectory and when the observed
jump process is Markovian at lag time τ, this
generates statistically independent transition
counts. It is therefore straightforward to use
the resulting count matrix in order to derive
expressions for the likelihood and posterior
of a transition matrix (see Sect. 4.3 below),
which is important in order to obtain statis-
tical models that do not underestimate the
uncertainties [7, 8, 15]. A disadvantage of
this approach is that intermediate data is ig-
nored, which can lead to numerical problems
when states that have been brieﬂy visited only
at intermediate times might be missed. This
can sometimes cause numerical or algorith-
mic problems.
2. Window count: In this method we use a count
window of width τ that is shifted along the
time line:
cobs
ij (τ) = cobs
ij (l
t)
= ⌊(N −1)/l⌋
N −l
N−l

k=1
χi(xk)χj(xk+l).
(4.6)
This method uses all observed samples, al-
though nearby transitions such as t →t + τ
and (t + 
t) →(t + 
t) + τ cannot be as-
sumed to be statistically independent. Do-
ing so would generate a posterior distribu-
tion that is too narrow in the Bayesian uncer-
tainty analysis approaches below, and should
not be used with these methods. For this rea-
son a correction factor is introduced and the
ﬁnal counting then corresponds to an estima-
tion of the expected average number of tran-

4
Estimation and Validation of Markov Models
47
sitions seen in trajectories of length N1 Even
without the correction factor, the expectation
value of the estimated transition matrix T(τ)
is unbiased, and thus maximum posterior esti-
mators (Sect. 4.5) are asymptotically correct,
such that the window count method is pre-
ferred for the case of transition matrix estima-
tion.
4.3
Likelihood, Prior and Posterior
Distribution
It is intuitively clear that in the limit of an in-
ﬁnitely long trajectory, the elements of the true
transition matrix are uniquely given by the trivial
estimator,
ˆTij(τ) ≡
cobs
ij (τ)
cobs
i
(τ)
,
(4.7)
i.e., the fraction of time the system is found to
be in state j a time τ after it was initially ob-
served to be in state i. For a trajectory of ﬁ-
nite length, the underlying or generating transi-
tion matrix T(τ) no more be determined uniquely
since several transition matrices allow for genera-
tion of the same ﬁnite trajectory but with different
probabilities.
Assuming that the matrix Cobs(τ) contains
statistically independent transition counts (see
discussion in Sect. 4.2 above), the probability that
a particular T(τ) would generate an observed se-
quence s1,...,sN is given by the product of the
individual jump probabilities, Tsk,sk+1(τ) along
the sequence {sk}, k ∈{1,1 + l,1 + 2l,...} [1].
In terms of our notation, this probability can
be rewritten using the observed count matrix
Cobs(τ), hereafter suppressing the τ argument as
1At the moment it is an open question how to best make
use of all observed data while at the same time using statis-
tically independent, or at least uncorrelated counts. It ap-
pears straightforward to use the window method, obtain-
ing non-integer effective counts, but an estimation of the
real uncorrelated counts is still an open question. A safe
approach is to use the window count method for estimat-
ing the transition matrix and sampling the trajectory at lag
τ when computing count matrices for error estimators.
convenient,
p

Cobs

T

=
n

i,j=1
T
cobs
ij
ij
.
(4.8)
The probability that the true transition matrix
which generated these observed counts has the
value T(τ) can then be computed by Bayes’ rule,
p

T


Cobs
∝p(T)p

Cobs

T

= p(T)
n

i,j=1
T
cobs
ij
ij
.
(4.9)
We term p(T|Cobs) the posterior probability of
the transition matrix T, p(T) the prior proba-
bility of transition matrices before observing any
data and p(Cobs|T) is called the likelihood.
In transition matrix estimation, one is inter-
ested in the most probable matrices T, i.e., the
T with a large density in the posterior probabil-
ity. The prior probability should be chosen such
that it restricts the posterior to solutions that are
physically meaningful in the situation where lit-
tle observation data is available, but otherwise
should be “weak”, i.e., impose little bias (see
Sect. 4.4 for a discussion on the choice of pri-
ors). For computational convenience, it is com-
mon to select a prior that is conjugate to the like-
lihood, i.e., shares the same functional form as
the likelihood. This leads to a posterior of the
form
p

T


Cobs
∝
n

i,j=1
T
cprior
ij
+cobs
ij
ij
=
n

i,j=1
T
cij
ij ,
(4.10)
with the prior (pseudo-)count matrix Cprior ≡
(cprior
ij
) and we have deﬁned the effective to-
tal number of counts, or posterior counts C ≡
Cprior+Cobs. When a uniform distribution is used
as a prior (Cprior = 0, p(T) ∝1), likelihood and
posterior distribution are identical. Since any esti-
mator will be based only on the posterior counts,
it is reasonably to split the discussion into priors
and estimation algorithms.

48
J.-H. Prinz et al.
4.4
Choices of Prior for Transition
Matrix T
The choice of the prior distribution p(T) allows
the estimation of the Markov model to be con-
trolled when only a limited quantity of obser-
vation data is available. A prior serves two pur-
poses: (1) it may guarantee numerical stability of
the estimator in the case where this would be oth-
erwise difﬁcult due to few observed transitions,
such as early on in the data collection process,
and (2) it can help to enforce physically reason-
able constraints on the solution, such as detailed
balance in physical systems at equilibrium.
In principle, the choice of prior is irrelevant
in the data-rich regime; once sufﬁcient data has
been collected for the likelihood function to over-
whelm the prior, the posterior distribution will
very closely resemble the data-driven likelihood
function. However, since one often does not al-
ways operate in a data-rich regime, especially
during early stages of data collection and model
building, it is important to understand the effects
of the choice of prior on any model results in
order to avoid overinterpreting features that may
depend on the choice of prior rather than the data.
Several choices of prior p(T) are in common
use that can be deﬁned by their choice of Cprior
prior (pseudo-)count matrix:
• The uniform prior cprior
ij
= 0. In this case the
posterior distribution is identical to the like-
lihood and all maximum probability estima-
tors introduced subsequently become maxi-
mum likelihood estimators. When using maxi-
mum probability estimators, the uniform prior
is preferable whenever sufﬁcient observation
data is available, as it gives full weight to the
data. However, other features of the distribu-
tion (4.10), such as the expectation and the
variances, are strongly affected by a uniform
prior (see Sect. 4.4).
• The
ﬂat/symmetric
prior
cprior
ij
= γ ∈
[−1,∞]. This prior is symmetric like the uni-
form prior since a priori all transitions are
considered equally likely. The factor γ de-
termines the concentration level of the sym-
metric prior in the sense that large values of
γ prefer very similar values (unconcentrated
probabilities) in the absence of observations
while small values (γ →−1) prefers all prob-
ability to be concentrated in a single transi-
tion. This prior can be relatively inﬂuential es-
pecially in the low-data regime as their inﬂu-
ence to expectation values and variances de-
pends the relation between the number of ob-
servations and the number of pseudo-counts,
n2(γ + 1)/N (see Sect. 4.4). If the number
of states n in the model is large then even
small γ can cause the prior to overwhelm
the available observed statistics and domi-
nate the estimation of the transition matrix.
To avoid this issue, Refs. [11, 23] suggested
the choice γ = n−1 −1, as this is identical
to adding a single transition pseudo count to
each row of the transition matrix, thus mak-
ing the amount of information that the prior
contributes to the outgoing transition proba-
bility distribution of each state independent of
the number of states n in the system. How-
ever, even this choice may make the prior dif-
ﬁcult to overcome by observation data, es-
pecially in large transition matrices as these
are typically very sparse; a great deal of data
needs to be collected in order to ensure that
the nonzero transition probabilities dominate
over transitions that have not yet been ob-
served.
• The neighbor prior is a so-called mixed
prior, as it takes information from the obser-
vation into account. It is deﬁned as
cprior
ij
=

γ
if cobs
ij + cobs
ji > 0,
−1
else.
(4.11)
This prior is more subtle than the ﬂat prior as
it only concentrates probability to transition
pairs between which a transition has actually
been observed, thus ensuring connectivity and
that the detailed balance constraint πiTij =
πjTji can be satisﬁed with non-zero equi-
librium probabilities. This choice has been
found to be useful in a number of recent stud-
ies [2, 19].

4
Estimation and Validation of Markov Models
49
4.5
Maximum Probability
Estimators
We will now derive the maximum probability es-
timator for T by ﬁnding the transition matrix
that maximizes p(T|C). Numerically, the poste-
rior probability is difﬁcult to work with due to the
product over many small terms in (4.10). For op-
timization purposes, a common trick is to work
instead with the log-likelihood,
Q(T) ≡logp(T|C) =
n

i,j=1
cij logTij
(4.12)
which is useful since the logarithm is a mono-
tonic function—the maximum of logf (x) is also
the maximum of f (x). However, this function
is not bounded from below, since for Tij →0,
Q →−∞. Of course, we need to further restrict
ourselves to sets of variables which actually form
valid row-stochastic transition matrices,
Tij ≥0
∀i,j = 1,...,n,

j
Tij = 1
∀i = 1,...,n.
(4.13)
When imposing equality constraints, it is conve-
nient to employ the method of Lagrange multipli-
ers. The Lagrangian for Q(T) is given by,
F(T) = Q(T) + λ1

j
T1j −1

+ ···
+ λm

j
Tmj −1

.
(4.14)
This function is maximized by the maximum
probability transition matrix subject to the im-
posed constraints (4.13). When all ci > 0, it turns
out that F(T) has a single stationary point—a
maximum—which can be easily found by set-
ting the partial derivatives to zero. These partial
derivatives are given by
∂logF
∂Tij
= cij
Tij
+ λi.
(4.15)
Equating these with zero to ﬁnd the maximum
leads to
cij
ˆTij
+ λi = 0
⇔
λi ˆTij = −cij.
We now make use of the row-stochastic nature of
the transition matrix T,
λi

j
ˆTij = λi = −

j
cij = −ci
and thus obtain,
cij
ˆTij
−ci = 0,
ˆTij = cij
ci
.
(4.16)
It turns out that
ˆT(τ), as provided by
Eq. (4.16), is the maximum of the posterior
p(T|Cobs) and thus also of the likelihood
p(Cobs|T) when transition matrices are assumed
to be uniformly distributed a priori (correspond-
ing to the choice cprior
ij
= 0). In the limit of in-
ﬁnite sampling, i.e., trajectory length N →∞,
p(T|Cobs) converges towards a Dirac delta distri-
bution with its peak at ˆT(τ). In this case the prior
contribution vanishes:
lim
N→∞
ˆTij = lim
N→∞
cprior
ij
+ cobs
ij
cprior
i
+ cobs
i
= lim
N→∞
cobs
ij
cobs
i
= Tij,
(4.17)
i.e., the estimator is “asymptotically unbiased”.
4.6
Reversible Transition Matrix
Estimation
Note that the estimator
ˆT(τ) computed in
Sect. 4.5 above will not necessarily fulﬁll the
detailed balance constraint πi ˆTij = πj ˆTji even
if the underlying dynamics used to generate the
dataset is in equilibrium and the true transition
matrix represents a physical system that satisﬁes
detailed balance πiTij = πjTji. It is often advan-
tageous to enforce the detailed balance constraint

50
J.-H. Prinz et al.
during the estimation process; this guarantees, for
example, that all eigenvalues of the transition ma-
trix will be real (rather than complex). As there
is no known closed form solution for the maxi-
mum probability estimator with the detailed bal-
ance constraint, we present two iterative methods
subsequently.
Let xij ≡πiTij be the unconditional transi-
tion probability to observe the system originally
in state i and then in state j a time τ later—that
is, the probability of observing a speciﬁc tran-
sition i →j out of all possible transitions. Be-
cause the transition matrix T is row-stochastic,
the xij fulﬁll the constraint 
i,j xij = 1, and
we can express the detailed balance condition as
a symmetry constraint on the nonnegative ma-
trix X ≡[xij], namely xij = xji for all pairs of
states i,j. It is hence sufﬁcient to store the xij
with i ≤j in order to construct a reversible tran-
sition matrix.
The elements of the reversible transition ma-
trix T = [Tij] corresponding to a given symmet-
ric X are given by,
Tij = xij
xi
(4.18)
where xi ≡
j xij is the ith row or column sum
of X.
The log-likelihood of X given a count matrix
C = [cij] is given by,
Q(X) = logp(C|X)
=

i
cii log xii
xi
+

i<j

cij log xij
xi
+ cji log xji
xj

.
(4.19)
We next consider several approaches for deter-
mining the estimator ˆX that maximizes the log-
likelihood Q(X),
ˆX = argmax
X Q(X).
(4.20)
4.6.1
Optimization by Self-Consistent
Iteration
An iterative approach can be constructed by mak-
ing use of the convexity of Q(X), as suggested in
Ref. [4]. We ﬁrst note that the partial derivatives
of Q are given by,
∂Q
∂xij
= cij
xij
+ cji
xji
−
n

i′=1
cii′
n
k=1 xik
−
n

j′=1
cjj′
n
k=1 xjk
.
(4.21)
Writing ci = n
k=1 cik and xi = n
k=1 xik we
have,
∂Q
∂xij
= cji + cij
xij
−ci
xi
−cj
xj
.
(4.22)
When Q(X) is maximized, we have
∂Q
∂xji = 0,
which yields the self-consistency condition,
ˆxij = cij + cji
ci
ˆxi + cj
ˆxj
.
(4.23)
This approach can then be used in an iterative
scheme where the previous iterate X(n) is used to
produce the next iterate X(n+1), according to the
update rule,
x(n+1)
ij
= cij + cji
ci
x(n)
i
+ cj
x(n)
j
,
(4.24)
which can be iterated until the log-likelihood con-
verges. The transition matrix ˆT can then be calcu-
lated from ˆX via Eq. (4.18).
4.6.2
Optimization by Iterative
Conditional Maximization
An alternative optimization approach utilizes the
fact that the conditional probability for a single
xij has a closed-form solution for the optimum
if all the other elements of X are held ﬁxed,
allowing an iterative element-wise optimization
scheme to be constructed [20]. Such a condi-
tional optimization can be done by solving a one-
dimensional quadratic optimization problem for

4
Estimation and Validation of Markov Models
51
each element of the X-matrix. We distinguish be-
tween diagonal and off-diagonal entries:
1. i = j
argmax
xii logp(C|X)
= argmax
xii cii log
xii
xii + xi,−i
+

k̸=i
cik log
xik
xii + xi,−i
= argmax
xii cii logxii −ci log(xii + xi,−i)
(4.25)
where xi,−j = 
k̸=j xik = xi −xij. The max-
imum has a simple closed form solution,
xii = ciixi,−i
ci −cii
.
(4.26)
2. i < j
argmax
xij logp(C|X)
= argmax
xij

cij log
xij
xij + xi,−j
+

k̸=j
cik log
xik
xij + xi,−j
+ cji log
xji
xji + xj,−i
+

k̸=i
cjk log
xjk
xji + xj,−i

= argmax
xij (cij + cji)logxij
−ci log(xij + xi,−j)
−cj log(xij + xj,−i).
(4.27)
Then the optimal xij satisﬁes
cij + cji
xij
=
xi
xij + xi,−j
+
cj
xij + xj,−i
,
(4.28)
(ci,−j + cj,−i)x2
ij +

cixj,−i + cjxi,−j
−(cij + cji)(xi,−j + xj,−i)

xij
−(cij + cji)xi,−jxj,−i = 0.
(4.29)
Therefore
xij = −b ±
√
b2 −4ac
2a
(4.30)
where
a = ci,−j + cj,−i,
b = cixj,−i + cjxi,−j
−(cij + cji)(xi,−j + xj,−i),
c = −(cij + cji)xi,−jxj,−i.
Note that xij > 0 and
−b −
√
b2 −4ac
2a
< 0
(4.31)
for a > 0 and ac < 0, such that
xij = −b +
√
b2 −4ac
2a
(4.32)
is the desired maximum.
The maximum probability estimator is then ob-
tained by the following iterative Algorithm 1
(proven to converge to the optimum in Ref. [20],
Supplementary Information), which is iterated
until some stopping criterion is met (e.g. change
of maxi,j{xij} in one iteration is smaller than a
given constant or the number of iterations ex-
ceeds a pre-deﬁned threshold).
While both algorithms should converge to the
same estimator for convex Q(X), the rate at
which the algorithms converge, as well as the
computational effort required to reach the same
error, differs. Figure 4.2 compares the conver-
gence rates of the two schemes using a small
and a large transition matrix as examples. It is
seen that the iterative elementwise optimizer con-
verges asymptotically in approximately ﬁvefold
fewer steps compared to the direct method, while
using slightly more CPU time per iteration.
Note that the optimum sought by Eq. (4.20)
exhibits ˆTij = 0 if cij + cji = 0 for both esti-
mators. Thus, in both optimization algorithms,
the sparsity structure of the matrix C + CT can
be used in order to restrict all iterations to the
elements that will result in a nonzero element
ˆTij > 0.

52
J.-H. Prinz et al.
Fig. 4.2 Performance comparison of the direct and
quadratic optimizer for reversible transition matrix estima-
tion. Shown is the difference of the current likelihood to
the optimal likelihood. (a) Results for the 3×3 count ma-
trix C =
 5 2 0
1 1 1
2 5 20

. (b) Results for the 1734×1734 count
matrix from Pin WW folding simulations used in Ref. [17]
4.7
Validation 1: Implied
Timescales
One of the most interesting kinetic properties of
molecular systems are the relaxation timescales
of the system. Various experimental spectro-
scopic techniques measure relaxation or cor-
relation functions that represent linear combi-
nations of exponentially-decaying components,
with each component representing a different re-
laxation timescale of the overall system [3, 6, 12,
14]. These relaxation timescales can also be di-
rectly computed for the simulated system from
the eigenvalues of the transition matrix T(τ) of
the corresponding Markov model, where they are
known as implied timescales ti,
ti(τ) = −
τ
lnλi(τ),
where here ti(τ) denotes the ith slowest implied
timescale determined from the ith largest eigen-
value λi(τ), which is computed from the transi-
tion matrix T(τ).
One popular test of the quality or self-consis-
tency of a Markov state model was suggested
in Ref. [26]. If the MSM constructed for a lag
time τ0 approximates the dynamics well for all
τ ≥τ0, then we should ﬁnd that the eigenval-
ues λi(kτ0) are well approximated by [λi(τ0)]k
for k = 1,2,..., and hence that the implied
timescales are relatively constant over this range
of τ = kτ0,
ti(kτ0) = −
τ0
lnλi(τ0) ≈ti
for k = 1,2,...
(4.43)
Ref. [26] has therefore suggested that one test
whether the slowest implied timescales, ti(kτ),
computed from different lag times τ = kτ0 are
approximately constant for k = 1,2,... to assess
the quality of the MSM constructed at lag time τ0.
Two notes of caution must be made at this
point: (1) Observing convergence of the slow-
est implied timescales in τ is not a strict test
of Markovianity. While Markovian dynamics,
T(kτ0) = [T(τ0)]k, implies constancy of implied
timescales in τ [16, 25], the reverse is not true
and would require the eigenvectors to be con-
stant as well. (2) The argument above does not
include the effect of statistical error and is thus
strictly only valid for the limit of good sampling.
In many practical cases, statistics are insufﬁcient
and the implied timescales do not show the ex-
pected behavior that permits the quality of the
discretization to be assessed. In this case, addi-
tional sampling is required.

4
Estimation and Validation of Markov Models
53
Algorithm 1 Maximum probability estimator of
reversible transition matrices
(1) For all i,j = 1,...,n: initialize
xij = xji := cij + cji
(4.33)
xi :=

j
xij
(4.34)
(2) Repeat until stopping criterion is met (1.1.)
For all i = 1,...,n:
update xii := cii(xi −xii)
ci −cii
(4.35)
update xi :=

j
xij
(4.36)
(1.2) For all i = 1,...,n −1,j = i + 1,...,n:
a = ci −cij + cj −cji
(4.37)
b = ci(xj −xij) + cj(xi −xij)
−(cij + cji)(xi + xj −2xij)
(4.38)
c = −(cij + cji)(xi −xij)
× (xj −xij)
(4.39)
update xij = xji := −b +
√
b2 −4ac
2a
(4.40)
update xi :=

j
xij
(4.41)
(2) Update Tij, i,j = 1,...,n:
Tij := xij
xi
(4.42)
However, it has been empirically observed that
constant implied timescales are a very strong in-
dicator that the MSM constructed for lag time τ0
approximates the underlying dynamics well [9].
If the discretized dynamics are not exactly
Markovian, how do the implied timescales ti(τ)
estimated from the transition matrix T(τ) behave
with lag time τ? In Ref. [18], we derived the fol-
lowing tight bound for the discrepancy between
the implied timescale t2(τ) computed from the
transition matrix T(τ) of the MSM and the true
dominant relaxation timescale t∗
2 of the system
(ignoring statistical error),
t∗
2 −t2(τ)
t2(τ)
≤t∗
2
τ ln 1
α
where α = ⟨ψ2, ˆψ2⟩μ is the discretization quality
with respect to the second propagator eigenfunc-
tion. In simple words, if α = 1, the state space
discretization resolves the slowest process per-
fectly, while if α = 0, the slowest process is com-
pletely concealed by the discretization.
We observe two things: (1) the true implied
timescale t∗
2 is well approximated if the state
space discretization is very good (α ≈1 such that
lnα−1 ≈0), and (2) the implied timescale t2(τ)
converges towards the true implied timescale t∗
2
as the lag time τ is increased. Unfortunately, this
convergence with τ is slow, with systematic er-
rors decaying only as τ −1.
Following Ref. [10], we can make similar
statements for the other relaxation processes of
the system. The implied timescales tj(τ) con-
verge to their true relaxation timescales tj as ei-
ther the discretization quality αj ≡⟨ψj, ˆψj⟩μ in-
creases or the lag time τ increases,
lim
τ→∞


tj(τ) −t∗
j


 = 0,
(4.44)
and also,
lim
δj →0


tj(τ) −t∗
j


 = 0,
(4.45)
where δj = 1 −αj is the projection error of the
state space discretization with respect to the jth
dynamical process. This fact has been empirically
observed in numerous previous studies [5, 7, 8,
16, 17, 25, 26].
From the mathematical results above, the fol-
lowing rationale to assess the quality of the state
space discretization can be used:
1. For a given state space discretization, estimate
a series of transition matrices T(τk) for τk ≡
k
t, where 
t is the time step between saved
trajectory frames and k is a variable integer,
using the methods described in Sects. 4.1–4.6.
2. Compute the m largest eigenvalues of T(τk),
and from these the m slowest implied time-
scales ti(τk) depending on lag time τk.

54
J.-H. Prinz et al.
Fig. 4.3 Illustration of the eigenfunction approximation
error δ2 on the slow transition in the diffusion in a dou-
ble well (top, black line). The slowest eigenfunction is
shown in the lower four panels (black), along with the step
approximations (green) of the partitions (vertical black
lines) at x = 50; x = 40; x = 10,20,...,80,90; and
x = 40,45,50,55,60. The eigenfunction approximation
error δ2 is shown as red area and its norm is printed
3. When the implied timescales ti(τk) reach an
approximately constant value for increasing
lag time τk, the state space discretization is
sufﬁciently good to resolve the dynamics in
these slowest processes. Usually, it is also
expected that the lag times for which this
approximate constant value is reached are
signiﬁcantly smaller than the true relaxation
timescales t∗
i of interest.
4. Select the minimal lagtime τ at which ti(τ)
are approximately constant, and use T(τ) as
Markov model.
We conclude that, given sufﬁcient statistics, ob-
serving the lag time-dependence of the implied
timescales is a useful approach to asses the qual-
ity of the discretization, and to choose a lag time
τ at which T(τ) shall be estimated, but this model
needs to be subsequently validated (see Sect. 4.8).
As illustrative examples, consider a one-di-
mensional (see Figs. 4.4 and 4.3) and a two-
dimensional (see Figs. 4.5 and 4.6) comparison
Fig. 4.4 Convergence of the slowest implied timescale
t2 = −τ/lnλ2(τ) for the diffusion in a double-well po-
tential for various MSM discretizations (see Fig. 4.3). The
metastable partition (black, solid) has greater error than
non-metastable partitions (blue, green) with more states
that better trace the change of the slow eigenfunction near
the transition state
of diffusion processes under various state space
discretizations. Figure 4.4 shows the slowest im-
plied timescale t2 for the diffusion in a two-well
potential (see Fig. 4.3) with discretizations shown
in Fig. 4.3. The two-state partition at x = 50 re-
quires a lag time of ∼2000 steps in order to reach
an error of <3 % with respect to the true im-
plied timescale, which is somewhat slower than
t2 itself. When the two-state partition is distorted
by shifting the discretization border to x = 40,
this quality is not reached before the process it-
self has relaxed. Thus, in this system two states
are not sufﬁcient to build a Markov model that is
at the same time precise and has a time resolu-
tion good enough to trace the decay of the slow-
est process. By using more states and particularly
a ﬁner discretization of the transition region, the
same approximation quality is obtained with only
τ ≈1500 (blue) and τ ≈500 steps (green).
Figure 4.6 shows the two slowest implied
timescales t2, t3 for the diffusion in a two-
dimensional three-well potential with discretiza-
tions shown in Fig. 4.5a. The metastable 3-state
partition requires a lag time of ≈1000 steps
in order to reach an error of <3 % with re-
spect to the true implied timescale, which is

4
Estimation and Validation of Markov Models
55
Fig. 4.5 Illustration of the eigenfunction approxima-
tion errors δ2 and δ3 on the two slowest processes
in a two-dimensional three-well diffusion model. The
columns (i, ii, iii, iv) from left to right show different
state space discretizations with white lines as state bound-
aries: (i) 3 states with maximum metastability, (ii) the
metastable states were further subdivided manually to
better resolve the transition region, resulting in a partition
where no individual state is metastable, (iii)/(iv) Voronoi
partition using 25/100 randomly chosen centers, respec-
tively. (a) Potential, (b) The exact eigenfunctions of the
slow processes, ψ2(x) and ψ3(x), (c) The approxima-
tion of eigenfunctions with discrete states, Qψ2(x) and
Qψ3(x), (d) Approximation errors |ψ2 −Qψ2|(x) and
|ψ3 −Qψ3|(x). The error norms δ2 and δ3 are given

56
J.-H. Prinz et al.
Fig. 4.6 Implied timescales for the two slowest processes
in the two-dimensional three-well diffusion model (see
Fig. 4.5a for an illustration of the potential energy surface,
and Supplementary Information for details of the poten-
tial). The colors black, red, yellow, green correspond to
the four choices of discrete states shown in columns 1 to 4
of Fig. 4.5. A ﬁne discretization of the transition region
clearly gives the best approximation to the timescales at
small lag times
somewhat shorter than the slow but longer than
the fast timescale, while reﬁning the discretiza-
tion near the transition states achieves the same
precision with τ ≈200 using only 12 states.
A k-means clustering with k = 25 is worse than
the metastable partition, as some clusters cross
over the transition region and fail to resolve the
slow eigenfunctions. Increasing the number of
clusters to k = 100 improves the result signiﬁ-
cantly, but is still worse than the 12 states that
have been manually chosen so as to well resolve
the transition region. This suggests that excellent
MSMs could be built with rather few states when
an adaptive algorithm that more ﬁnely partitions
the transition region is employed.
4.8
Validation 2:
Chapman-Kolmogorov Test
Above, we formulated criteria for selecting a state
space discretization and a lag time τ that mini-
mize the discretization error of a MSM. In prac-
tice, however, it is essential to test whether the re-
sulting Markov model is at least consistent with
the data used to parametrize it to within statistical
error. While theoretical studies can compare the
difference between Markov model propagation
and true propagation in the continuous space [20],
in practical situations, one is limited to measur-
ing the propagation error using the available state
space discretization. In particular, we are inter-
ested in checking whether the approximation,
	 ˆT(τ)
k ≈ˆT(kτ),
(4.46)
holds to within statistical uncertainty. Here, ˆT(τ)
is the transition matrix estimated from the data
at lag time τ (the Markov model), and ˆT(kτ)
is the transition matrix estimated from the same
data at longer lag times kτ. Note that when
the nonreversible maximum likelihood estimator,
Eq. (4.16), is used, this approximation is triv-
ially exact for k = 1 since the Markov model was
parametrized at lag time τ. For all k ≫t2/τ, the
approximation should always be good, as Markov
models correctly model the stationary distribu-
tion reached after a few global relaxation times
t2, even for bad choices of τ and discretization.
Thus, this test is only sensitive in ranges of k
greater one and smaller than the global relaxation
time t2 of the system.
Although there are various ways of how a test
for Eq. (4.46), any implementation should con-
sider the following points:
1. For large transition matrices, individual ele-
ments of ˆT(kτ) or [ ˆT(τ)]k can have large sta-
tistical uncertainty (even if this uncertainty
does not have much impact on the overall dy-
namics), and comparing n2 elements may be
cumbersome. Therefore, we suggest to com-
pare the probability of being in a given set of
states, A, when starting from a well-deﬁned

4
Estimation and Validation of Markov Models
57
starting distribution. This simpliﬁes the test to
few observables and allows to check the kinet-
ics of states that are of special interest, such as
folded/unfolded states or metastable states.
2. The test should be done for all times kτ for
which trajectory data is available. Tests that
compare Markov models that differ only one
lag step (τ and 2τ) are likely to be unreliable
as small approximation errors at short times
may amplify at long times.
3. The quality of the approximation (4.46)
should be judged within the statistical uncer-
tainties induced by the data.
Here, we present an implementation that takes
these properties into account. Let π be the sta-
tionary probability of the Markov model ˆT(τ).
The corresponding stationary distribution re-
stricted to a set A is then given by,
wA
i =

πi

j∈A πj
i ∈A,
0
i /∈A,
(4.47)
where πi is the probability of state i.
As a model test, the following “relaxation ex-
periment” may be carried out for each set: Using
wA as an initial probability vector for each of the
sets under consideration, the probability of ﬁnd-
ing the system in that set at times kτ is then com-
puted according to (i) the observed trajectory data
and (ii) the Markov model, and these probabili-
ties are subsequently compared. The trajectory-
based time-dependence of the probability to be at
set A after time kτ with starting distribution wA
is given by:
pMD(A,A;kτ) =

i∈A
wA
i pMD(i,A;kτ),
(4.48)
where pMD(i,A;kτ) is the trajectory-based esti-
mate of the probability to be in set A at time kτ
when starting from state i at time 0:
pMD(i,A;kτ) =

j∈A cobs
ij (kτ)
n
j=1 cobs
ij (kτ)
.
(4.49)
Likewise, the probability to be at A according to
the Markov model is given by:
pMSM(A,A;kτ) =

i∈A
	
wAT Tk(τ)

i. (4.50)
Testing the validity of the Markov model then
amounts to testing how well the presumed equal-
ity,
pMD(A,A;kτ) ≈pMSM(A,A;kτ),
(4.51)
holds, which is essentially a test of the Chapman-
Kolmogorov property. Note that the initial dis-
tribution wA is simply a chosen reference distri-
bution with respect to which the comparison is
made, here chosen as in Eq. (4.47).
Equation (4.51) is not expected to be an ex-
act equality even for perfectly Markovian sys-
tems due to statistical uncertainties; only a ﬁnite
number of transitions are available to estimate the
true transition probabilities, meaning there will
be residual statistical error in the estimated transi-
tion matrices. To account for this, the uncertain-
ties (one-sigma standard error) of the transition
probabilities estimated from MD trajectories are
computed as,
ϵMD(A,A;kτ)
=

k pMD(A,A;kτ) −[pMD(A,A;kτ)]2

i∈A
n
j=1 cobs
ij (kτ)
.
(4.52)
A practical test then consists of assessing whether
Eq. (4.51) holds within these uncertainties. The
uncertainty of pMSM(A,A;kτ) can be calcu-
lated using the methods described in Sect. 4.4.
However, this is not necessary if the test al-
ready succeeds while using only the uncertainties
ϵMD(A,A;kτ).
For illustration, we show results of this test
using a 106 step trajectory of a diffusion in a
double-well potential (see Fig. 4.3 for details).
Figure 4.7 shows the relaxation out of the left
well using a two-state discretization splitting at
x = 50 (see Fig. 4.3b for state deﬁnition and
Fig. 4.7a for results) and using a six-state dis-
cretization splitting at x = {40,45,50,55,60}
(see Fig. 4.3c for state deﬁnition and Fig. 4.7b
for results). The two-state discretization provides
spurious results for τ = 100, good results for
τ = 500 and for τ = 2000 the results are excellent
within the statistical uncertainty of the trajectory.
For the six-state discretization even τ = 100 is

58
J.-H. Prinz et al.
Fig. 4.7 Chapman-Kolmogorov test applied to the two-
well diffusion system (see Fig. 4.3 for details) using a
trajectory of length 106 steps. Tested are Markov mod-
els that use lag times τ = 100,500,2000 and (a) 2-state
discretization (split at x = 50), (b) 6-state discretization
(split at x = 40,45,50,55,60)
Fig. 4.8 Chapman-Kolmogorov test for the three well
diffusion model (see also Fig. 4.5). For each of four
discretizations (ﬁrst column, a, b, c, d), the Chapman-
Kolmogorov test is shown for the three states with the
greatest error (labeled with white ﬁgures in the ﬁrst
column). Relaxation curves from a 250,000 step trajec-
tory, pMD(A,A;kτ) (black) along with the uncertain-
ties ϵMD(A,A,kτ) are compared to the model prediction,
pMSM(A,A;kτ) (red). The total error σ given in the top
right corners is measured as the 2-norm of the vector con-
taining the differences pMD(A,A;kτ) −pMSM(A,A;kτ)
for time points in the range kτ ∈[1,128]

4
Estimation and Validation of Markov Models
59
Fig. 4.9
Chapman-Kolmogorov test
for six metastable sets A to
F in MR121-GSGS-W.
Solid curve:
pMSM(A,A;kτ) to
pMSM(F,F;kτ) predicted
by the MSM parameterized
at lag time τ = 2 ns.
Bullets with error bars:
expectation values and
uncertainties of
pMD(A,A;kτ) to
pMD(F,F;kτ) directly
calculated from the
simulation data up to
100 ns
within the error bars while τ = 500 and τ = 2000
both yield excellent approximations.
Figure 4.8 shows the corresponding results for
the three-well diffusion model (see also Fig. 4.5).
A single 250,000 step trajectory started from
the energy minimum at x = (10,10) was simu-
lated. For each of the four different discretiza-
tions shown in the ﬁrst column of Fig. 4.8 the
probability to stay in a state is shown for the
three states with the largest Markov model error
(highlighted in Fig. 4.8, left column). It is appar-
ent that the metastable three-state discretization
(Fig. 4.8a) performs well, however sacriﬁcing
metastability in order to more ﬁnely discretize the
transition region generates a superior discretiza-
tion (Fig. 4.8b). The “uninformed” random 25-
state clustering (Fig. 4.8c) performs worst but can
be improved signiﬁcantly by using more states
(Fig. 4.8d). This further supports the theoretical
ﬁnding that the quality of the Markov model de-
pends on the approximation quality of the domi-
nant eigenvectors [22] which can be achieved by
either a clustering adapted to the eigenfunctions
or using more states.
Figure 4.9 shows Chapman-Kolmogorov test
results for the six most metastable sets of the
MR121-GSGS-W peptide using a Markov model
based on a Voronoi discretization using least-
squares RMSD to 1000 peptide conﬁgurations
equally spaced in time selected from the trajec-
tory. The lag time was set to τ = 2 ns. The
metastable states are determined by dominant
eigenvectors and have been calculated with the
PCCA+ method [16, 27]. The Markov model
agrees with the observed trajectory within statis-
tical uncertainty for all metastable states.
References
1. Anderson TW, Goodman LA (1957) Statistical infer-
ence about Markov chains. Ann Math Stat 28:89–110
2. Beauchamp KA, Bowman GR, Lane TJ, Maibaum L,
Haque IS, Pande VS (2011) MSMBuilder2: modeling
conformational dynamics at the picosecond to mil-
lisecond scale. J Chem Theory Comput 7(10):3412–
3419. doi:10.1021/ct200463m
3. Bieri O, Wirz J, Hellrung B, Schutkowski M,
Drewello M, Kiefhaber T (1999) The speed limit
for protein folding measured by triplet-triplet energy
transfer. Proc Natl Acad Sci USA 96(17):9597–9601.
http://www.pnas.org/content/96/17/9597.abstract
4. Bowman GR, Beauchamp KA, Boxer G, Pande
VS (2009) Progress and challenges in the auto-
mated construction of Markov state models for full
protein systems. J Chem Phys 131(12):124,101+.
doi:10.1063/1.3216567

60
J.-H. Prinz et al.
5. Buchete NV, Hummer G (2008) Coarse master equa-
tions for peptide folding dynamics. J Phys Chem B
112:6057–6069
6. Chan CK, Hu Y, Takahashi S, Rousseau DL, Eaton
WA, Hofrichter J (1997) Submillisecond protein
folding kinetics studied by ultrarapid mixing. Proc
Natl Acad Sci USA 94(5):1779–1784. http://www.
pnas.org/content/94/5/1779.abstract
7. Chodera JD, Dill KA, Singhal N, Pande VS, Swope
WC, Pitera JW (2007) Automatic discovery of
metastable states for the construction of Markov
models of macromolecular conformational dynamics.
J Chem Phys 126:155,101
8. Chodera JD, Noé F (2010) Probability distributions of
molecular observables computed from Markov mod-
els, II: uncertainties in observables and their time-
evolution. J Chem Phys 133:105,102
9. Chodera JD, Swope WC, Pitera JW, Dill KA (2006)
Long-time protein folding dynamics from short-time
molecular dynamics simulations. Multiscale Model
Simul 5:1214–1226
10. Djurdjevac N, Sarich M, Schütte C (2010) Estimating
the eigenvalue error of Markov state models. Multi-
scale Model Simul. doi:10.1137/10079891
11. Hinrichs NS, Pande VS (2007) Calculation of the dis-
tribution of eigenvalues and eigenvectors in Marko-
vian state models for molecular dynamics. J Chem
Phys 126:244,101
12. Jäger M, Nguyen H, Crane JC, Kelly JW, Grue-
bele M (2001) The folding mechanism of a beta-
sheet: the WW domain. J Mol Biol 311(2):373–393.
doi:10.1006/jmbi.2001.4873
13. Laio A, Parrinello M (2002) Escaping free energy
minima. Proc Natl Acad Sci USA 99:12,562
14. Neuweiler H, Doose S, Sauer M (2005) A micro-
scopic view of miniprotein folding: enhanced fold-
ing efﬁciency through formation of an intermedi-
ate. Proc Natl Acad Sci USA 102(46):16,650–16,655.
doi:10.1073/pnas.0507351102
15. Noé F (2008) Probability distributions of molecular
observables computed from Markov models. J Chem
Phys 128:244,103
16. Noé F, Horenko I, Schütte C, Smith JC (2007)
Hierarchical analysis of conformational dynamics
in biomolecules: transition networks of metastable
states. J Chem Phys 126:155,102
17. Noé F, Schütte C, Vanden-Eijnden E, Reich L, Weikl
TR (2009) Constructing the full ensemble of fold-
ing pathways from short off-equilibrium simulations.
Proc Natl Acad Sci USA 106:19,011–19,016
18. Prinz JH, Chodera JD, Noé F (2013) Spectral rate the-
ory for two-state kinetics. Phys Rev X (accepted)
19. Prinz JH, Held M, Smith JC, Noé F (2011) Efﬁcient
computation of committor probabilities and transition
state ensembles. Multiscale Model Simul 9:545
20. Prinz JH, Wu H, Sarich M, Keller B, Fischbach
M, Held M, Chodera JD, Schütte C, Noé F (2011)
Markov models of molecular kinetics: generation and
validation. J Chem Phys 134:174,105
21. Röblitz S (2009) Statistical error estimation and grid-
free hierarchical reﬁnement in conformation dynam-
ics. PhD thesis
22. Sarich M, Noé F, Schütte C (2010) On the approx-
imation error of Markov state models. Multiscale
Model Simul 8:1154–1177
23. Singhal N, Pande VS (2005) Error analysis and efﬁ-
cient sampling in Markovian state models for molec-
ular dynamics. J Chem Phys 123:204,909
24. Sugita Y, Okamoto Y (1999) Replica-exchange
molecular dynamics method for protein folding.
Chem Phys Lett 314:141–151
25. Swope WC, Pitera JW, Suits F (2004) Describing
protein folding kinetics by molecular dynamics sim-
ulations, 1: theory. J Phys Chem B 108:6571–6581
26. Swope WC, Pitera JW, Suits F, Pitman M, Elefthe-
riou M (2004) Describing protein folding kinetics by
molecular dynamics simulations, 2: example applica-
tions to alanine dipeptide and beta-hairpin peptide.
J Phys Chem B 108:6582–6594
27. Weber M (2003) Improved Perron cluster analysis.
ZIB report 03-04

5
Uncertainty Estimation
Frank Noé and John D. Chodera
As only a ﬁnite quantity of data can be collected
for the construction of Markov state models,
the parameters characterizing the model and any
properties computed from it will always be statis-
tically uncertain. This chapter is concerned with
the quantiﬁcation of this statistical uncertainty,
and its use in validation of model quality and pre-
diction of properties using the model. In the fol-
lowing sections we proceed along Refs. [2, 7, 11]
which should be used for reference purposes.
5.1
Uncertainties in Transition
Matrix Elements
We ﬁrst consider the uncertainty in the transition
matrix T(τ) itself estimated from a ﬁnite quan-
tity of data. It may be the case that the uncertainty
in individual elements Tij(τ) may be of interest,
in which case standard errors or conﬁdence inter-
vals of these estimates may be sufﬁcient tools to
quantify the uncertainty.
For a transition matrix estimated without the
detailed balance constraint, the expectation and
variance of individual elements follow from well-
known properties of the distribution of stochastic
F. Noé (B)
Freie Universität Berlin, Arnimallee 6, 14195 Berlin,
Germany
e-mail: frank.noe@fu-berlin.de
J.D. Chodera
Memorial Sloan-Kettering Cancer Center, New York,
NY 10065, USA
e-mail: choderaj@mskcc.org
matrices [1]. These uncertainties do, however, de-
pend on the choice of prior used in modeling the
full posterior for the transition matrix (Sect. 4.4).
Under a uniform prior, the expectation and vari-
ance of an individual element Tij is given by,
E[Tij] = cij + 1
ci + n ≡¯Tij,
(5.1)
Var[Tij] = (cij + 1)((ci + n) −(cij + 1))
(ci + n)2((ci + n) + 1)
=
¯Tij(1 −¯Tij)
ci + n + 1 ,
(5.2)
where cij and ci are the elements and row sums,
respectively, of the observed count matrix Cobs
(Sect. 4.2).
To see the effect that the choice of prior has on
the computed uncertainties, consider a trajectory
of a given molecular system which is analyzed
with two different state space discretizations. As-
sume one discretization uses n = 10 states, and
the other n = 1000. Assume that a lag time τ has
been chosen which is identical and long enough
to provide Markov models with small discretiza-
tion error for both n (as suggested in Sect. 4.7).
With a uniform prior (cij = cobs
ij ), the posterior
expectation ¯Tij would be different for the two
discretizations: While in the n = 10 case we can
get a distinct transition matrix estimation, in the
n = 1000 case, most cij are probably zero and
ci ≪n, such that the expectation value would be
biased towards the uninformative Tij ≈1/n ±
1/n matrix, and many observed transitions would
be needed to overcome this bias. This behavior is
G.R. Bowman et al. (eds.), An Introduction to Markov State Models and Their Application to Long Timescale
Molecular Simulation, Advances in Experimental Medicine and Biology 797,
DOI 10.1007/978-94-007-7606-7_5, © Springer Science+Business Media Dordrecht 2014
61

62
F. Noé and J.D. Chodera
undesirable. Thus, for uncertainty estimation it is
suggested to use a prior which allows the obser-
vation data to have more impact also in the low-
data regime.
On the other hand, the “null prior” [10] de-
ﬁned by
cprior
ij
→−1
∀i,j ∈{1,...,n},
(5.3)
leans to the other extreme. Under the null prior,
the expectation and the variance of the marginal-
ized posterior for a single Tij become,
¯Tij = E[Tij] =
cobs
ij
cobs
i
= ˆTij,
(5.4)
Var(Tij) =
cobs
ij (cobs
i
−cobs
ij )
(cobs
i
)2(cobs
i
+ 1)
=
ˆTij(1 −ˆTij)
cobs
i
+ 1
.
(5.5)
Thus, with a null prior, the expectation value is
located at the likelihood maximum. Both expec-
tation value and variance are independent of the
number of discretization bins used. The variance
of any Tij asymptotically decays with the number
of transitions out of the state i, which is expected
for sampling expectations from the central limit
theorem.
5.2
Uncertainties in Computed
Properties
In practice, one is often not primarily interested
in the uncertainties of the transition matrix ele-
ments themselves, but rather in the uncertainties
in properties computed from the transition matrix.
Here, we review two different approaches for this
purpose.
• Linear error perturbation [4, 12, 13]. Here,
the transition matrix posterior distribution is
approximated by a multivariate Gaussian, and
the property of interest—taken to be a func-
tion of the transition matrix or its eigenval-
ues and eigenvectors—is approximated by a
ﬁrst-order Taylor expansion about the center
of this Gaussian. This results in a Gaussian
distribution of the property of interest, with a
mean and a covariance matrix that can be com-
puted in terms of the count matrix C. This ap-
proach has the advantage that error estimates
and their rates of reduction for different sam-
pling strategies can be computed through a di-
rect procedure. As a result, it is convenient
for situations where uncertainty estimates are
used as part of an adaptive sampling proce-
dure [4, 8, 9, 13]. The disadvantage of this ap-
proach is that the Gaussian approximation of
the transition matrix posterior in only asymp-
totically correct, and can easily break down
when few counts have been observed. In the
low-data regime, the resulting Gaussian distri-
bution for the property of interest often gives
substantial probability to unphysical or mean-
ingless values, such as when transition matrix
elements Tij are allowed to assume values out-
side the range [0,1]). Moreover, the property
of interest is approximated linearly which can
introduce a signiﬁcant error when this prop-
erty is nonlinear.
• Markov chain Monte Carlo (MCMC) sam-
pling of transition matrices [2, 6, 7]. Here,
transition matrices are sampled from the pos-
terior distribution, and the property of inter-
est is computed for each of these and stored as
samples from the posterior distribution of the
property. This approach requires that the sam-
pling procedure be run sufﬁciently long that
good estimates of standard deviations or con-
ﬁdence intervals of the posterior distribution
of the property of interest can be computed,
which may be time-consuming. The advantage
of this approach is that no assumptions are
made concerning the functional form of the
distribution or the property being computed.
Furthermore, this approach can be straightfor-
wardly applied to any function or property of
transition matrices, including complex proper-
ties such as transition path distributions [10]
without deriving the expressions necessary for
the linear error perturbation analysis—often
a cumbersome task. However, for large state
spaces, the transition matrix T may grow so
large as to make this procedure impractical.

5
Uncertainty Estimation
63
5.3
Linear Error Propagation
We start again with the posterior distribution of
row-stochastic transition matrices without the de-
tailed balance constraint, given by Eq. (4.10).
Deﬁning a new matrix U,
U = [uij] = [cij + 1],
(5.6)
and
using
that
the
posterior
probability
p(T | Cobs) implicitly contains the prior proba-
bilities Eq. (4.10) can be rewritten as:
p(T | C) = p

T


 Cobs
∝

i

j
T
uij −1
ij
(5.7)
such that
Ti∗∼

i
Dir(ui∗)
(5.8)
where Dir(α) denotes the Dirichlet distribution,
and θ ∼Dir(α) implies that θ is drawn from the
distribution
p(θ) ∝

i
θαi−1
i
.
(5.9)
Based on well-established properties of this dis-
tribution, and using the abbreviation ui = 
j uij,
the moments of p(T | C) can be directly com-
puted,
	
E(T)

ij = uij
ui
= cij + 1
ci + n = ¯Tij,

argmaxp(T|C)

ij = uij −1
uij −n = cij
ci
= ˆTij,
Var(Tij) = uij(ui −uij)
u2
i (ui + 1)
=
¯Tij(1 −¯Tij)
(ui + 1)
=
¯Tij(1 −¯Tij)
ci + n −1 ,
Cov(Tij,Tik) =
−uijuik
u2
i (ui + 1)
∀j ̸= k.
Next, we determine how the uncertainties
given by the variances and covariances of the
transition matrix elements propagate onto uncer-
tainties of functions derived from transition ma-
trices, such as eigenvalues. If we do not have con-
straints between different rows, such as are im-
posed by detailed balance, the rows can be treated
as independent random vectors, and thus,
Cov(Tij,Tlk) = 0,
i ̸= l.
(5.10)
We can thus deﬁne a covariance matrix Σ(i) sep-
arately for each row i as,
Σ(i)
jk := Cov(Tij,Tik)
=
1
u2
i (ui + 1)[uiδjkuij −uijuik]
= 1
ci
	
δjk ¯Tij −¯Tij ¯T T
ik

,
where δ is the Kronecker delta. Alternatively, we
can write the covariance matrix Σ(i) in vector no-
tation,
Σ(i) =
1
u2
i (ui + 1)
	
ui diag(ui∗) −ui∗(ui∗)T 
= 1
ci
	
diag( ¯Ti∗) −¯Ti∗( ¯Ti∗)T 
.
In the limit of many observed transition counts,
the covariance for the Dirichlet processes scales
approximately with the inverse of the total num-
ber of counts in a row, ci.
With a sufﬁcient number of counts ci in each
row i, the Dirichlet process resembles a multi-
variate Gaussian distribution, and we can approx-
imate it as such using the mean and variance com-
puted above,
Ti∗∼Normal
 ˆTi∗,Σ(i)
.
(5.11)
This approximate distribution is used in a Gaus-
sian error propagation for linear functions of the
transition matrix. Let us assume that we are inter-
ested in computing the statistical error of a scalar
functions f (T) : Rn×n →R. The ﬁrst order Tay-
lor approximation is given by:
f (T) = f ( ˆT) +

i,j
∂f
∂Tij




 ˆT
(Tij −ˆTij).

64
F. Noé and J.D. Chodera
Since the uncertainty in the rows of T contribute
independently to the uncertainty in f , we deﬁne
a sensitivity vector s(i) for each row separately
s(i)
j
= ∂f
∂Tij
( ˆT)
that measures the sensitivity of the scalar func-
tion with respect to changes in the transition ma-
trix elements. Then, with the function for the er-
ror propagation, we get
ˆf = f ( ˆT)
obtaining an approximation for the variance in f ,
Var(f ) = Cov(f,f ) =

i

s(i)T Σ(i)s(i).
or, more general, for the covariances between dif-
ferent scalar functions f , and g
Cov(f,g) =

i

s[f ](i)T Σ(i)s[g](i).
where s[f ](i) and s[g](i) refer to the sensitivi-
ties of f and g respectively. The limitation of
this approach is that it does not work well in sit-
uations where the Transition matrix distribution
is far from Gaussian (especially in the situation
of little data). Furthermore, the more nonlinear a
given function of interest is in terms of Tij, the
more the estimated uncertainty on this function
might be wrong.
5.3.1
Example: Eigenvalues
As an example, we consider the computation of
statistical error in a particular eigenvalue λk of
the transition matrix T using the linear error prop-
agation scheme, closely following the approach
described in Refs. [4, 13].
We start from the eigenvalue decomposition of
the transition matrix T, omitting the dependence
on the lag time τ,
Λ = ΦTΨ
(5.12)
where Ψ = [ψ1,...,ψn] is the right eigenvec-
tor matrix, Φ = [φ1,...,φn]T = Ψ −1 is the
left eigenvector matrix, and Λ = diag(λi) is
the diagonal matrix of eigenvalues. For the kth
eigenvalue-eigenvector pair, we have,
λ(k) =

φ(k)T Tψ(k) =

i,j
φ(k)
i
Tijψ(k)
j .
We wish to compute the statistical error of the
eigenvalues λ(k) via linear error perturbation. In
general, both the eigenvalues and eigenvectors si-
multaneously depend on perturbations in the ele-
ments of T in a complex way. To ﬁrst order, the
partial derivatives of the eigenvalues with respect
to the transition matrix elements is given by the
inner product of left and right eigenvectors,
∂λ(k)
∂Tij
= φ(k)
i
ψ(k)
j .
(5.13)
This expression for the eigenvalue sensitivity
may be combined with Eq. (5.11) in order to yield
the linear perturbation result,
Var

λ(k)
=
n

i=1

a,b
∂λ(k)
∂Tia
Cov(Tab)∂λ(k)
∂Tib
=
n

i=1

a,b
φ(k)
i
ψ(k)
a

a
uia(ui −uia)
u2
i (ui + 1)
+

a,b̸=a
−uiauib
u2
i (ui + 1)

φ(k)
i
ψ(k)
b .
5.4
Sampling Transition Matrices
Without Detailed Balance
Constraint
In a full Bayesian approach, we sample the pos-
terior distribution,
p(T | C) ∝p(T)p(C | T) =

i,j
T
cij
ij
(5.14)
where we recall that the total count matrix C =
Cobs + Cprior, as discussed in Chap. 4, makes the
use of different priors straightforward. If the only
constraint of T is that it is a stochastic matrix, but
we do not expect that T fulﬁlls detailed balance,
we can view Eq. (5.14) as a product of Dirich-
let distributions, one for each row (see Eq. (5.7)).

5
Uncertainty Estimation
65
We are then faced with the problem of sampling
random variables from the distribution,
Ti∗∼Dir(ui∗).
(5.15)
A fast way to generate Dirichlet-distributed ran-
dom variables is to draw n independent samples
y1,...,yn from univariate Gamma distributions,
each with density,
yj ∼Gamma(cij + 1,1) =
y
cij
j e−yj
Γ (cij + 1),
j = 1,...,n,
(5.16)
and then obtain the Tij by normalization of each
row,
Tij =
yj
n
m=1 yk
.
(5.17)
Repeating this procedure independently for every
row i = 1,...,n will generate a statistically inde-
pendent sample of T from distribution (5.14).
5.5
Sampling the Reversible
Transition Matrix Distribution
No similarly simple approach to direct generation
of statistically independent samples of the distri-
bution (5.14) exists when the transition matrix T
is further constrained to satisfy that the transition
matrices fulﬁll detailed balance. To include the
detailed balance constraints, we consider sam-
pling Eq. (5.14) using the Metropolis-Hastings
algorithm, where we propose a change to the
transition matrix, T →T′. This proposal is ac-
cepted with probability given by the Metropolis-
Hastings criterion,
pacc = p(T′ →T)
p(T →T′)
p(T′|C)
p(T|C)
= p(T′ →T)
p(T →T′)
p(C|T′)
p(C|T)
= p(T′ →T)
p(T →T′)

i,j T ′cij
ij

i,j T
cij
ij
.
(5.18)
This scheme requires efﬁcient schemes to gener-
ate proposals T →T′ that maintain the detailed
balance constraint and are likely to be accepted,
as well as a method of efﬁciently computing
the ratio of transition probabilities p(T′ →T)/
p(T →T′) for each proposal. Such a scheme was
worked out in detail in Ref. [7], and we summa-
rize the resulting method as Algorithm 2.
Example 1 Every 2 × 2 transition matrix is re-
versible. To see this, we can compute the station-
ary distribution from the dominant eigenvector,
π =

T21
T12 + T21
,
T12
T12 + T21

,
(5.19)
from which we can see that detailed balance is
always fulﬁlled,
π1T12 =
T21
T12 + T21
T12 =
T12
T12 + T21
T21 = π2T21.
(5.20)
Indeed, for 2 × 2 matrices the nonreversible tran-
sition matrix sampling scheme (Sect. 5.4) gener-
ates the same distribution as the reversible tran-
sition matrix sampling scheme in Algorithm 2.
See Fig. 5.1B for an illustration of this sampling
scheme applied to a 2 × 2 matrix.
Example 2 Figure 5.2 illustrates how the distri-
bution of a 3×3 transition matrix differs between
the nonreversible (panels B, E, H) and reversible
(panels C, F, I) cases. For the matrix studied here,
the distribution of reversible matrices is slightly
narrower.
5.5.1
Sampling with Fixed Stationary
Distribution
In some cases, the stationary distribution, π, may
be known exactly or to very small statistical er-
ror. For example, an efﬁcient equilibrium simula-
tion scheme (such as parallel tempering or meta-
dynamics) or a Monte Carlo method may have
generated a very precise estimate of π by simu-
lating a perturbed system or one with unphysical
dynamics. It may be useful to incorporate this in-
formation about π when inferring the posterior
distribution of transition matrices, since it may
signiﬁcantly reduce the uncertainty.

66
F. Noé and J.D. Chodera
Algorithm 2 Metropolis Monte Carlo sampling of reversible stochastic matrices
Input: Transition count matrix C ∈Nn×n
0
. Number of samples N.
Output: Ensemble of reversible transition matrices, T1,...,TN.
1. Initialize T (0)
ij
= (cij + cji)/(m
m=1 cik + cki)∀i,j ∈(1,...,m).
2. Compute π as stationary distribution of T(0) by solving π(0) = π(0)T(0).
3. For k = 1...N
3.1. Generate uniform random variables: r1,r2 ∼Uniform[0,1]
3.2. T(k) := T(k−1)
3.3. If (r1 < 0.5) Reversible Element Shift:
3.3.1. Generate uniform random variables:
i,j ∈{1,...,n}, Δ ∈

max

−T (k)
ii ,−
π(k)
j
π(k)
i
T (k)
jj

,T (k)
ij

.
3.3.2. pacc :=
 (T (k)
ij −Δ)2+T (k)
ji −
π(k)
i
π(k)
j
Δ)2
(T (k)
ij )2+(T (k)
ji )2

T (k)
ii +Δ
T (k)
ii
cii
T (k)
ij −Δ
T (k)
ij
cij  T (k)
jj +
π(k)
i
π(k)
j
Δ
T (k)
jj
cjj
×
 T (k)
ji −
π(k)
i
π(k)
j
Δ
T (k)
ji
cji
3.3.3. If (r2 ≤pacc):
Set T (k)
ii
:= T (k−1)
ii
+ Δ ; T (k)
ij
:= T (k−1)
ij
−Δ
and T (k)
jj := T (k−1)
jj
+ Δπ(k)
i
/π(k)
j
; T (k)
ji := T (k−1)
ji
−Δπ(k)
i
/π(k)
j
else Node Shift:
3.3.4. Generate uniform random variables: i ∈(1,...,n), α ∈

0,
1
1−T (k)
ii

.
3.3.5. pacc := α(n−2+ci−cii)

1−α(1−T (k)
ii )
T (k)
ii
cii
3.3.6. If r2 ≤pacc:
For all j ̸= i, set T (k)
ij
:= αT (k−1)
ij
.
Set T (k)
ii
= 1 −
j̸=i T (k)
ij
3.3.7. Update stationary distribution:
For all j ̸= i:, set π(k)
j
:=
απ(k−1)
j
π(k−1)
i
+α(1−π(k−1)
i
).
Set π(k)
i
:= 1 −
j̸=i π(k)
j .
To do this, we ﬁrst note that the two types of
Monte Carlo proposals utilized in Algorithm 2
above for sampling reversible transition matrices.
One type of proposal (reversible element shifts)
changes π, while the other preserves π (node
shift). We can suggest a straightforward modiﬁca-
tion of the T-sampling algorithm that will ensure
π is constrained to some speciﬁed value during
the sampling procedure.
We ﬁrst give an algorithm to construct an ini-
tial transition matrix T(0) with a speciﬁed sta-
tionary distribution π from a given count ma-
trix C (Algorithm 3), and then use this to initial-
ize a Monte Carlo transition matrix sampling al-
gorithm that preserves the stationary distribution
(Algorithm 4).
5.6
Full Bayesian Approach with
Uncertainty in the Observables
Suppose we are interested in some experiment-
ally-measurable function of state A(x). An ex-
periment may be able to measure an expecta-

5
Uncertainty Estimation
67
Fig. 5.1 Illustration of sampling of transition probabil-
ity matrices for the observation C =
 5 2
3 10

and a uniform
prior. Panels (a), (b), and (c) show the probability distri-
bution on the off-diagonal matrix elements. The color en-
codes the probability density, with blue = 0 and red = 1.
Each density was scaled such that its maximum is equal
to 1. (a) Analytic density of stochastic matrices. (b) Sam-
pled density of stochastic matrices (these matrices auto-
matically fulﬁll detailed balance). (c) Stationary probabil-
ity of the ﬁrst state π1. When sampling with respect to a
ﬁxed stationary probability distribution π∗, the ensemble
is ﬁxed to the line T21 = T12π∗
1 /(1 −π∗
1 ). (d) Sampled
and exact density of T12 of reversible matrices with ﬁxed
stationary distribution π∗= (0.5,0.5)
tion ⟨A⟩or correlation functions ⟨A(0)A(t)⟩, and
we would like to compute the corresponding
properties from the Markov model constructed
from a molecular simulation and decide whether
they agree with experiment to within statistical
uncertainty, or if a prediction from the model
is sufﬁciently precise to be useful. The previ-
ous framework for sampling transition matrices
can be used in the following manner: (i) Assign
the state-averaged value of the observable, ai =

Si dxμ(x)A(x), to each discrete state. (ii) Gen-
erate an ensemble of T-matrices according to the
sampling scheme described above. (iii) Calcu-
late the desired expectation or correlation func-
tion for each T-matrix using the discrete vector
a = [ai]. This approach involves several approx-
imations that each deserve discussion. Here, we
want to generalize the approach by eliminating
one important approximation—that the values ai
are known exactly without statistical error them-
selves.
In a typical simulation scenario, the average ai
is itself calculated by a statistical sample. When
a simulation trajectory xt is available, then typi-
cally the time average
ˆai =

t χi(xt)A(xt)

t χi(xt)
(5.21)
is employed, where χi is the indicator function of
state i. The estimate ˆai may in fact have signif-
icant statistical error because the number of un-
correlated samples of xt inside any state i is ﬁ-
nite, and possibly rather small. In order to esti-
mate the distribution of expectation or correlation
functions of A due to both, the statistical uncer-
tainty of T and the statistical uncertainty of ˆai, we
propose a full Bayesian approach using a Gibbs

68
F. Noé and J.D. Chodera
Fig. 5.2 Visualization of the probability density of tran-
sition matrices for the count matrix Cobs =
 8 2 1
2 10 3
2 3 6

and
a uniform prior. Different two-dimensional joint marginal
distributions are shown in the rows. The analytic and sam-
pled distributions for stochastic matrices are shown in
columns 1 and 2, respectively. Column 3 shows the sam-
pled distribution for stochastic matrices fulﬁlling detailed
balance. Note how the peaks are more sharply peaked
when the detailed balance constraint is imposed (col-
umn 3) compared to the corresponding transition matrices
without detailed balance constraint (column 2)
sampling scheme, here illustrated for the expec-
tation E[A] (Algorithm 5).
While the transition matrix T(k) can be sam-
pled using the framework described in the pre-
vious sections, an approach to sample a(k) intro-
duced in Ref. [2] is described subsequently.
5.6.1
Sampling State Expectations a(k)
Consider the expectation of some molecular ob-
servable A(x) computed from Eq. (5.21). Tem-
porally sequential samples At ≡A(xt) collected
with a temporal resolution of the Markov time
τ are subsequently presumed to be uncorrelated.
We also assume that the set of samples A(xt) for
those conﬁgurations xt appearing in state i are
collected in the set {Am}N
m=1 in the remainder of
this section, generally abbreviated as {Am}.
Because only a ﬁnite number of samples N are
collected for each state, there will be a degree of
uncertainty in this estimate. Unlike the problem
of inferring the transition matrix elements, how-
ever, we cannot write an exact expression for the
probability of observing a single sample Am in
terms of a simple parametric form, since its prob-
ability distribution may be arbitrarily complex,
pi(Am) = 1
πi

Si
dxδ

Am −A(x)

μ(x). (5.22)

5
Uncertainty Estimation
69
Algorithm 3 Generation of an initial transition matrix T(0) given count matrix C and a speciﬁed
stationary distribution π
Input: Stationary distribution π and transition count matrix C.
Output: Transition matrix T that has stationary distribution π.
1. Deﬁne Y ∈Rn×n as:
yij =

πicij
2
k cik +
πj cji
2
k cjk
i ̸= j,
0
i = j.
2. Deﬁne X ∈Rn×n as:
o = max
i

k
xik

,
xij =
 yij
o
i ̸= j,
πi −
k
yik
o
i = j.
3. Deﬁne T(0) ∈Rn×n as
T (0)
ij
=
xij

k xik
.
Algorithm 4 Metropolis-Hastings Monte Carlo sampling of reversible stochastic matrices with prob-
ability distribution of stationary distributions p(π)
Input: Transition count matrix C ∈Nn×n
0
. Number of samples n1, n2. Stationary distribution p(π)
Output: Ensemble of reversible transition matrices, T1,...,TN.
1. For k = 1...n1
1.1. Draw π(k) from p(π)
1.2. Initialize T(0) using Algorithm 3.
1.3. For l = 1...n2
1.3.1. Use reversible element shift from Algorithm 2 to update the transition matrix.
Algorithm 5 Gibbs sampler for the joint estimation of p(E[A])
1. For k = 1...N
1.1. Sample observables
a(k) ∼p(a | xt).
1.2. Sample transition matrix
T(k) ∼p(T | xt) = p(T | Cobs).
1.3. Compute π(k) as the stationary distribution of T(k) such that
[π(k)]T = [T(k)][π(k)]T.
1.3. Generate a sample of the expectation value:
A(k) =
n

i=1
a(k)
i
π(k)
i
.

70
F. Noé and J.D. Chodera
Despite this, the central limit theorem states that
the behavior of ˆai approaches a normal distri-
bution (generally very rapidly) as the number of
samples N increases. We will therefore make the
assumption that pi(Am) is normal—that is, we
assume the distribution can be characterized by
mean μi and variance σ 2
i ,
Am ∼Normal

μi,σ 2
i

(5.23)
where the normal distribution implies the proba-
bility density for Am is approximated by
˜pi

Am;μi,σ 2
i

= (2π)−1/2σ −1
i
exp

−1
2σ 2
i
(Am −μi)2

.
(5.24)
While this may seem like a drastic assumption,
it turns out this approximation allows us to do a
surprisingly good job of inferring the distribution
of the error in δ ˆai ≡ˆai −⟨A⟩i even for a small
number of samples from each state, and gener-
ally gives an overestimate of the error (which is
arguably less dangerous than an underestimate)
for smaller sample sizes. While the validity of
this approximation is illustrated in a subsequent
example, we continue below to develop the rami-
ﬁcations of this approximation.
Consider the sample mean estimator for ⟨A⟩i,
ˆμ = 1
N
N

m=1
Am.
(5.25)
The asymptotic variance of ˆμ, which provides a
good estimate of the statistical uncertainty in ˆμ in
the large-sample limit, is given as a simple con-
sequence of the central limit theorem,
δ2 ˆμ ≡E
	
ˆμ −E[ ˆμ]
2
= VarAm
N
≈ˆσ 2
N
(5.26)
where the unbiased estimator for the variance
σ 2 ≡VarAm is given by
ˆσ 2 ≡
1
N −1
N

m=1
(Am −ˆμ)2
(5.27)
Suppose we now assume the distribution of A
from state i is normal (Eq. (5.24)),
A|μ,σ 2 ∼Normal

μ,σ 2
.
(5.28)
Were this to be a reasonable model, we could
model the timeseries of the observable At ≡
A(xt) by the hierarchical process:
st|st−1,T ∼Bernoulli(Tst−11,...,Tst−1N),
At|μst ,σ 2
st ∼Normal

μst ,σ 2
st

.
(5.29)
Here, the notation Bernoulli(π1,...,πN) denotes
a Bernoulli scheme where discrete outcome n
has associated probability πn of being selected.
We will demonstrate below how this model does
in fact recapitulate the expected behavior in the
limit where there are sufﬁcient samples from each
state.
We choose the (improper) Jeffreys prior [5],
p

μ,σ 2
∝σ −2
(5.30)
because it satisﬁes intuitively reasonable repa-
rameterization [5] and information-theoretic [3]
invariance principles. Note that this prior is uni-
form in (μ,logσ).
The posterior is then given by
p

μ,σ 2 

 {Am}

∝
 N

n=1
p

Am


 μ,σ 2

p

μ,σ 2
∝σ −(N+2) exp

−1
2σ 2
N

m=1
(Am −μ)2

.
(5.31)
Rewriting in terms of the sample statistics ˆμ and
ˆσ 2, we obtain
p

μ,σ 2 

 {Am}

∝σ −(N+2) exp

−1
2σ 2
 N

m=1
(Am −ˆμ)2
+ N( ˆμ −μ)2


5
Uncertainty Estimation
71
Fig. 5.3 Approach to normality for marginal distribution
of the mean p(μ|{Am}). For ﬁxed ˆμ and ˆσ 2, the marginal
posterior distribution of μ (red), a scaled and shifted Stu-
dent t-distribution, rapidly approaches the normal distribu-
tion (black) expected from asymptotic statistics. The PDF
is shown for sample sizes of N = 5 (the broadest), 10, 20,
and 30
∝σ −(N+2) exp

−1
2σ 2
	
(N −1)ˆσ 2
+ N( ˆμ −μ)2
.
(5.32)
The posterior has marginal distributions
σ 2|{Am} ∼Inv−χ2
N −1, ˆσ 2
,
μ|{Am} ∼tN−1

ˆμ, ˆσ 2/N

(5.33)
where σ 2 is distributed according to scaled in-
verse chi-square distribution with N −1 de-
grees of freedom, and μ according to Student’s
t-distribution with N −1 degrees of freedom
that has been shifted to be centered about ˆμ and
whose width has been scaled by ˆσ 2/N.
As can be seen in Fig. 5.3, as the number of
degrees of freedom increases, the marginal poste-
rior for μ approaches the normal distribution with
the asymptotic behavior expected from standard
frequentest analysis for the standard error of the
mean, namely
μ →N

ˆμ, ˆσ 2/N

.
(5.34)
At low sample counts, the t-distribution is lower
and wider than the normal distribution, meaning
that conﬁdence intervals computed from this dis-
tribution will be somewhat larger than those of
the corresponding normal estimate for small sam-
ples. In some sense, this partly compensates for
ˆσ 2 being a poor estimate of the true variance for
small sample sizes, which would naturally lead
to underestimates of the statistical uncertainty.
In any case, this is also far from the asymptotic
limit where the normal distribution with variance
ˆσ 2/N is expected to model the uncertainty well.
The posterior can also be decomposed as
p

μ,σ 2 

 {Am}

= p

μ


 σ 2,{Am}

p

σ 2 

 {Am}

.
(5.35)
This readily suggests a two-step sampling scheme
for generating uncorrelated samples of (μ,σ 2),
in which we ﬁrst sample σ 2 from its marginal dis-
tribution, and then μ from its distribution condi-
tional on σ 2
σ 2|{Am} ∼Inv−χ2
N −1, ˆσ 2
,
μ|σ 2,{Am} ∼N

ˆμ,σ 2/N

.
(5.36)
Alternatively, if the scaled inverse-chi-square
distribution is not available, the χ2-distribution
(among others) can be used to sample σ 2:
(N −1)

ˆσ 2/σ 2 

 {Am} ∼χ2(N −1)
(5.37)
where the ﬁrst argument is the shape parameter
and the second argument is the scale parameter.
5.6.2
Illustration of Fully Bayesian
Sampling Scheme
Using the sampling procedures described previ-
ously, we are now equipped with a scheme to
sample from the joint posterior describing our
conﬁdence in that a Markov model characterized
by a transition matrix T and state expectations
μi, i = 1,...,M, produced the observed trajec-
tory data. Using a set of models sampled from
this posterior, we can characterize the statisti-
cal component of the uncertainty as it propagates
into equilibrium averages, non-equilibrium relax-
ations, and (non-)equilibrium correlation mea-
surements computed from the Markov model. To
ensure the correctness of this procedure, however,
we ﬁrst test its ability to correctly characterize the

72
F. Noé and J.D. Chodera
posterior distribution for a ﬁnite-size sample from
a true Markovian model system.
How can we test a Bayesian posterior distri-
bution? One of the more powerful features of a
Bayesian model is its ability to provide conﬁ-
dence intervals that correctly reﬂect the level of
certainty that the true value will lie within it. For
example, if the experiment were to be repeated
many times, the true value of the parameter be-
ing estimated should fall within the conﬁdence
interval for a 95 % conﬁdence level 95 % of the
time. As an illustrative example, consider a bi-
ased coin where the probability of turning heads
is θ. From an observed sample of N coin ﬂips,
we can estimate θ using a Binomial model for
the number of coin ﬂips that turn up heads and
a conjugate Beta Jeffreys prior [3, 5]. Each time
we run an experiment and generate a new inde-
pendent collection of N samples, we get a differ-
ent posterior estimate for θ, and a different conﬁ-
dence interval (Fig. 5.4, top). If we run many tri-
als and record what fraction of the time the true
(unknown) value of θ falls within the conﬁdence
interval estimated from that trial, we can see if
our model is correct. If correct, the observed con-
ﬁdence level should match the desired conﬁdence
level (Fig. 5.4, bottom right). Deviation from par-
ity means that the posterior is either two broad
or too narrow, and that the statistical uncertainty
is being either over- or underestimated (Fig. 5.4,
bottom left).
We performed a similar test on a three-state
model system, using a model (reversible, row-
stochastic) transition matrix for one Markov time
is given by
T(1) =
⎡
⎣
0.86207
0.12931
0.00862
0.15625
0.83333
0.01041
0.00199
0.00199
0.99602
⎤
⎦.
(5.38)
Each state is characterized by a mean value of the
observable A(x), ﬁxed to 3,2, and 1 for the ﬁrst,
second, and third states, respectively. The equilib-
rium populations are π ≈[0.16250.13450.7031].
Simulation from this model involves a stochas-
tic transition according to the transition element
Tij followed by observation of the value of A(x)
sampled i.i.d. from the current state’s probabil-
Fig. 5.4 Testing the posterior for inference of a biased
coin ﬂip experiment. Top: Posterior distribution for infer-
ring the probability of heads, θ, for a biased coin from a
sequence of N = 1000 coin ﬂips (dark line) with 95 %
symmetric conﬁdence interval about the mean (shaded
area). The true probability of heads is 0.3 (vertical thick
line). Posteriors from ﬁve different experiments are shown
as dotted lines. Bottom left: Desired and actual conﬁdence
levels for an idealized normal posterior distribution that
either overestimates (upper left curves) or underestimates
(bottom right curves) the true posterior variance by dif-
ferent degrees. Bottom right: Desired and actual conﬁ-
dence levels for the Binomial-Beta posterior for the coin
ﬂip problem depicted in upper panel. Error bars show
95 % conﬁdence intervals estimates from 1000 indepen-
dent experimental trials. For inference, we use a likeli-
hood function such that the observed number of heads
is NH |θ ∼Binomial(NH ,N,θ) and conjugate Jeffreys
prior [3, 5] θ ∼Beta(1/2,1/2) which produces posterior
θ|NH ∼Beta(NH +1/2,NT +1/2) along with constraint
NH + NT = N
ity distribution pi(A). Multiple independent re-
alizations of this process were carried out, and
subjected to the Bayesian inference procedure
for transition matrices and observables described
above. The nonequilibrium relaxation ⟨A⟩ρ0 from
the initial condition ρ0 = [100] in which all den-
sity is concentrated in state 1, as well as the au-
tocorrelation function ⟨A(0)A(t)⟩, is shown in
Fig. 5.5.
With the means of pi(A) within each state
ﬁxed as above, we considered models for pi(A)
that were either normal or exponential, using the

5
Uncertainty Estimation
73
Fig. 5.5 Observables for three-state model system. Top:
Relaxation of ⟨A(t)⟩ρ0 (solid line) from initial distribu-
tion ρ0 = [100] to equilibrium expectation ⟨A⟩(dash-
dotted line). Bottom: Equilibrium autocorrelation function
⟨A(0)A(t)⟩(solid line) to ⟨A⟩2 (dash-dotted line). The es-
timates of both ⟨A(t)⟩ρ0 and ⟨A(0)A(t)⟩at 50 timesteps
(red vertical line) were assessed in the validation tests de-
scribed here
probability density functions:
pi(A) = (2π)−1/2σ −1
i
exp

−1
2σ 2
i
(A −μi)2

,
normal
pi(A) = μ−1
i
exp[−A/μi],
A ≥0.
exponential
While the normal output distribution for pi(A)
corresponds to the hierarchical Bayesian model
that forms the basis for our approach, the expo-
nential distribution is signiﬁcantly different, and
represents a challenging test case.
Figure 5.6 depicts the resulting uncertainty
estimates for both normal (top) and exponen-
tial (bottom) densities for the observable A. In
both cases, the conﬁdence intervals are underes-
timated for short trajectory lengths (1 000 steps)
where, in many realizations, few samples are ob-
Fig. 5.6 Conﬁdence interval tests for model system. Top:
Expected and observed conﬁdence intervals for three-state
system with normal distribution for observable A with
unit variance for simulations of length 1 000 (left), 10 000
(middle), and 100 000 (right) steps. Conﬁdence intervals
were estimated from generating 10 000 samples from the
Bayesian posterior. Estimates of the fraction of observed
times the true value was within the conﬁdence interval es-
timated from the Bayesian posterior were computed from
generating 1 000 independent experimental realizations.
The resulting curves are shown for the equilibrium esti-
mate ⟨A⟩(red), nonequilibrium relaxation ⟨A⟩ρ0 (green),
and the equilibrium correlation function ⟨A(0)A(t)⟩
(blue). Bottom: Same as top, except an exponential dis-
tribution with the same mean was used for the probability
of observing a particular value of A within each state

74
F. Noé and J.D. Chodera
served in one or more states, so that the vari-
ance is underestimated or the effective asymp-
totic limit has not yet been reached. As the sim-
ulation length is increased to 10 000 or 100 000
steps so that it is much more likely there are
a sufﬁcient number of samples in each state to
reach the asymptotic limit, however, the conﬁ-
dence intervals predicted by the Bayesian pos-
terior become quite good. For the exponential
model for observing values of A (which might
be the case in, say, ﬂuorescence lifetimes), we
observe similar behavior. Except for what ap-
pears to be a slight, consistent underestimation of
⟨A(t)⟩ρ0 (much less than half a standard devia-
tion) there appears to be excellent agreement be-
tween the expected and observed conﬁdence in-
tervals, conﬁrming that this method is expected
to be a useful approach to modeling statistical un-
certainties in equilibrium and kinetic observables.
References
1. Anderson TW, Goodman LA (1957) Statistical infer-
ence about Markov chains. Ann Math Stat 28:89–110
2. Chodera JD, Noé F (2010) Probability distributions of
molecular observables computed from Markov mod-
els, II: uncertainties in observables and their time-
evolution. J Chem Phys 133:105,102
3. Goyal P (2005) Prior probabilities: an information-
theoretic approach. In: Knuth KH, Abbas AE, Mor-
riss RD, Castle JP (eds) Bayesian inference and max-
imum entropy methods in science and engineering.
American Institute of Physics, New York, pp 366–
373
4. Hinrichs NS, Pande VS (2007) Calculation of the dis-
tribution of eigenvalues and eigenvectors in Marko-
vian state models for molecular dynamics. J Chem
Phys 126:244,101
5. Jeffreys H (1946) An invariant form for the prior
probability in estimation problems. Proc R Soc A
186:453–461
6. Metzner P, Noé F, Schütte C (2009) Estimation of
transition matrix distributions by Monte Carlo sam-
pling. Phys Rev E 80:021,106
7. Noé F (2008) Probability distributions of molecular
observables computed from Markov models. J Chem
Phys 128:244,103
8. Noé F, Oswald M, Reinelt G (2007) Optimizing in
graphs with expensive computation of edge weights.
In: Kalcsics J, Nickel S (eds) Operations research pro-
ceedings. Springer, Berlin, pp 435–440
9. Noé F, Oswald M, Reinelt G, Fischer S, Smith JC
(2006) Computing best transition pathways in high-
dimensional dynamical systems: application to the
alphaL–beta–alphaR transitions in octaalanine. Mul-
tiscale Model Simul 5:393–419
10. Noé F, Schütte C, Vanden-Eijnden E, Reich L, Weikl
TR (2009) Constructing the full ensemble of fold-
ing pathways from short off-equilibrium simulations.
Proc Natl Acad Sci USA 106:19,011–19,016
11. Prinz JH et al (2011) Markov models of molecu-
lar kinetics: generation and validation. J Chem Phys
134:174,105
12. Prinz JH, Held M, Smith JC, Noé F (2011) Efﬁcient
computation of committor probabilities and transition
state ensembles. Multiscale Model Simul 9:545
13. Singhal N, Pande VS (2005) Error analysis and efﬁ-
cient sampling in Markovian state models for molec-
ular dynamics. J Chem Phys 123:204,909

6
Analysis of Markov Models
Frank Noé and Jan-Hendrik Prinz
This chapter follows the following reference
which should be used as a reference: Prinz,
J.-H. and Keller, B. and Noé, F. (2011) Prob-
ing molecular kinetics with Markov models:
Metastable states, transition pathways and spec-
troscopic observables. Phys. Chem. Chem. Phys.,
13, pp. 16912–16927.
6.1
Illustrative Protein Folding
Model
We use a simple protein folding model through-
out this study in order to illustrate the concepts
described in this chapter. We consider three struc-
tural elements called a, b and c that form inde-
pendently of another. A simple energy model has
been designed in which the folding of each struc-
ture element contributes a loss in potential energy
and also a loss of entropy (Table 6.1).
The entropic part is chosen that the formation
of a structural element decreases the accessible
conformational space by a factor a →2, b →3
and c →5 favoring the unfolded state for high
temperatures. A small number (0.5) is subtracted
from the conformation space volumes in order to
break the perfect independence of structure ele-
ments. In addition, for each formed structural ele-
ment the potential energy is lowered so as to favor
the folding at low temperatures.
F. Noé (B) · J.-H. Prinz
Freie Universität Berlin, Arnimallee 6, 14195 Berlin,
Germany
e-mail: frank.noe@fu-berlin.de
Table 6.1 Energy model of the simple protein folding
model. Shown is the potential energy 
U and the en-
tropy 
S depending of the folding state. The potential en-
ergy drops with the number of structural elements formed,
while the entropic part mimics a reduction of conforma-
tional space when one of the elements forms (by a factor
of a →2, b →3 and c →5)
U
S
unfolded
0
10.3804 = log(60 + 120 −0.5)
a
−1.5
6.76878 = log(30 −0.5)
b
−1.5
5.94083 = log(20 −0.5)
c
−1.5
4.88469 = log(12 −0.5)
a/b
−3.75
4.50258 = log(10 −0.5)
a/c
−3.75
3.4095 = log(6 −0.5)
b/c
−3.75
2.50553 = log(4 −0.5)
a/b/c
−4.5
0.81093 = log(2 −0.5)
Thus, at any given temperature T , the free en-
ergy Fi = Ui −T Si for each of the eight possible
foldamers {0,a,b,c,ab,ac,bc,abc} can be cal-
culated and also the associated stationary distri-
bution
πi =
exp(−Fi/kBT )

j exp(−Fj/kBT ).
Assuming furthermore that the model protein can
jump between states by forming or breaking one
structure element with transition probabilities
Tij = exp

−
 + max(0,Fj −Fi)
kBT

with minimum barrier height 
 = 4, we have a
consistent dynamical model that can be used for
G.R. Bowman et al. (eds.), An Introduction to Markov State Models and Their Application to Long Timescale
Molecular Simulation, Advances in Experimental Medicine and Biology 797,
DOI 10.1007/978-94-007-7606-7_6, © Springer Science+Business Media Dordrecht 2014
75

76
F. Noé and J.-H. Prinz
Fig. 6.1 Illustrative protein folding model for low, inter-
mediate and high temperature. The colours indicate the
stationary probability of states, while the thickness of the
arrows and the numbers next to them quantify transition
probabilities (within some ﬁxed but arbitrary timescale)
analysis. Figure 6.1 illustrates this model at low,
intermediate and high temperatures, showing that
the folded state is stable at low temperatures and
the unfolded state is stable at high temperatures.
6.2
Spectral Analysis: Eigenvectors
and Eigenvalues
A key concept of Markov modeling is that a lot of
the essential information about conformation dy-
namics is encoded in the eigenvectors and eigen-
values of the transition matrix, which are approxi-
mations to the exact eigenfunctions and eigenval-
ues of the transfer operator (see Theory chapter)
that a Markov model attempts to approximate.
Although this point is somewhat difﬁcult to un-
derstand at ﬁrst, it is essential in order to see
what metastable states are, why some Markov
models work better than others, and eventually
also how kinetics experiments work. At this point
a comparison to another approach that is more
commonly used in the Chemical Physics commu-
nity may be useful: Consider the Principal Com-
ponent Analysis method [1], where the relative
distances of a set of data points (e.g. molecu-
lar structures) is captured by a covariance ma-
trix. When performing an eigenvalue decompo-
sition one obtains eigenvectors and eigenvalues.
The eigenvectors with the largest eigenvalues
are called “principal components” and describe
where the directions along which the data set
has the greatest spatial extent. The correspond-
ing eigenvalues capture the variance of the data
set along these principal directions. Analogously,
a transition matrix T(τ) can also be decomposed
into eigenvectors and eigenvalues. The eigenvec-
tors also represent “principal modes”, but since
the transition matrix contains probabilities these
modes are vectors that contain changes of the
probability for each discrete state Si. The princi-
pal modes with the largest eigenvalues are indeed
the main modes of probability ﬂow between the
system’s substates. The corresponding eigenval-
ues have magnitude expressing how slow or fast
the corresponding probability ﬂow occurs. Thus,
the eigenvalue decomposition of a transition ma-
trix may be understood as a principal component
analysis of the dynamics.
More formally, transition matrices can, as any
diagonalizable matrix, be written as a linear com-
bination of their left eigenvectors, their eigen-
values and their right eigenvectors. For the here
assumed case of matrices fulﬁlling detailed bal-
ance, the right eigenvalues can be replaced by the
left eigenvalues (and vice versa), leading to the
decomposition:
T(τ) = Π−1
n

i=1
λi(τ)φ(i)
φ(i)T
(6.1)
with the diagonal matrix Π−1 = diag(π−1
1 ,...,
π−1
n ). Thus, for longer timescales:
Tk(τ) = Π−1
n

i=1
λk
i (τ)φ(i)
φ(i)T .
(6.2)
The transition matrix T(kτ) = Tk(τ) which trans-
ports an initial probability k time steps forward
is again a linear combination of the eigenvec-
tors and eigenvalues. These linear combinations

6
Analysis of Markov Models
77
Fig. 6.2 Dominant eigenvectors and eigenvalues of the protein folding model
(Eqs. (6.1) and (6.2)) are known as spectral de-
composition of the transition matrix. They are
very useful for connecting the dynamics of the
molecule to experimentally-measured signals,
which is described in Sect. 6.5.
Equation (6.2) is the key for understanding
how the transition matrix transforms a probability
vector. The complete process consists of n sub-
processes φ(i)(φ(i))T , each of which is weighted
by the eigenvalue λi raised to the power k. Be-
cause the transition matrix is a row-stochastic
matrix, it always has one eigenvalue which is
equal to one λ1 = 1 [10]. Raising this eigenvalue
to the power k does not change the weight of the
corresponding subprocess φ(1)(φ(1))T which is
the stationary process, φ(1) = π. All other eigen-
values of the transition matrix are guaranteed to
be smaller than one in absolute value [10]. Eigen-
vectors are approximations of the transfer opera-
tor eigenfunctions. To understand the meaning of
the eigenfunctions, please refer to the illustration
in the theory chapter (see Fig. 3.1).
The weights of the processes hence decay ex-
ponentially with the implied timescale ti of the
decay process
ti = −τ
lnλi
.
(6.3)
Since the relaxation timescales ti are physi-
cal properties of the dynamics, they should be
invariant under change of the lag time τ used
to parametrize the transition matrix [42]. For
large enough τ, ti should converge to their true
value (assuming sufﬁcient statistics). Therefore,
the convergence of ti with increasing τ has of-
ten been employed as an indicator for selecting
τ [9, 32, 34, 42] (see Section on Markov model
validation). The smaller the eigenvalue λi, the
smaller the implied timescale ti, the faster the
corresponding process decays.
Figure 6.2 shows the eigenvectors in the pro-
tein folding model. For the low-temperature situ-
ation, the folding process is interestingly not the

78
F. Noé and J.-H. Prinz
slowest, but the third-slowest process, which ex-
changes probability between unfolded-a-b-c and
states ab-ac-bc-abc. The slowest process corre-
sponds to the formation of a, while the second-
slowest process is a more complex transition in-
volving the exchange of unfolded, c and ac with
the rest.
The intermediate-temperature situation, the
slowest process is the one that most closely
resembles folding—it mostly exchanges prob-
ability between unfolded—c and ab–abc. The
second- and third-slowest processes correspond
to the formation of c and b, respectively.
In the high-temperature situation, the slow-
est process is a folding process which exchanges
probability between unfolded and the rest. It is
therefore a different kind of folding process than
the third-slowest process in the low-temperature
case. One might say that the transition state has
shifted towards the unfolded side. The second-
and third-slowest processes again correspond to
the formation of c and b, respectively.
6.3
Metastable States
The protein folding model used here for illus-
tration consists of only 8 states and is thus easy
to comprehend. When building Markov models
from clustered molecular dynamics data one of-
ten requires several thousands of states in order
to approximate the system kinetics well. Network
approaches have been developed to visualize the
network of transitions arising from such a model
[35], but especially when the network is dense,
this is not straightforward. It is thus desirable
to ﬁnd en effective representation that commu-
nicates the essential properties of the kinetics.
In this section we describe a way to cluster the
large discrete state space into a few metastable
sets that have the property that they capture the
dynamics for long times before jumping to an-
other set. Let us stress that the purpose of ﬁnding
these sets is purely illustrative (e.g. for lumping
ﬂuxes, see Sect. 6.4). For quantitatively calcu-
lating kinetic properties, the full Markov model
should be used, as the approximation of the sys-
tem’s kinetics will generally deteriorate when us-
ing a lumped Markov model [24, 34, 36].
Let us consider the coarse partition of state
space Ω = {C1,C2,...,Cn} where each clus-
ter Ci consists of a set of states Sj. We are
interested in ﬁnding a clustering that is maxi-
mally metastable. In other words, each cluster Ci
should represent a set of structures that the dy-
namics remains in for a long time before jumping
to another cluster Cj. Thus, each cluster Ci can
be associated with a free energy basin.
As shown above (Sect. 6.2), we can under-
stand the slow kinetics in terms of probabil-
ity transport by the dominant eigenvectors of
the transition matrix. Consequently, these dom-
inant eigenvectors can also be used in order
to decompose the system into metastable sets
[37, 47]. Consider the eigenvector corresponding
to the slowest process in Fig. 3.1 (yellow line):
This eigenvector is almost a step function which
changes from negative to positive values at the
saddle point. When we take the value of this
eigenvector in each state and plot it along one
axis, we obtain Fig. 6.3a. Partitioning this line
in the middle dissects state space into the two
most metastable states of the system (Fig. 6.3b).
The two most metastable states exchange at a
timescale given by the slowest timescale t2. If we
are interested in differentiating between smaller
substates, we may ask for the partition into the
three most metastable states. In this case we con-
sider two eigenvectors simultaneously, r2 and r3.
Plotting the coordinates in these eigenvalues for
each state yields the triangle shown in Fig. 6.3c
whose corners represent the kinetic centers of
metastable states. Assigning each state to the
nearest corner partitions state space into the three
most metastable states (Fig. 6.3d) that exchange
at timescales of t3 or slower. The same partition
can be done using three eigenvectors, r2, r3 and
r4, yielding four metastable states exchanging at
timescales t4 and slower, and so on (Figs. 6.3e,
f). Generally, it can be shown that when n eigen-
vectors are considered, their coordinates lie in an
n-dimensional simplex with n + 1 corners called
vertices which allow the dynamics to be parti-
tioned into n + 1 metastable sets [32, 47].
Each of these partitionings is a valid selection
in a hierarchy of possible decompositions of the
system dynamics. Moving down this hierarchy

6
Analysis of Markov Models
79
Fig. 6.3 Metastable states
of the one-dimensional
dynamics (see Fig. 3.1)
identiﬁed by PCCA+.
(a), (c), (e): Plot of the
eigenvector elements of
one, two, and three
eigenvectors. The colors
indicate groups of elements
(and thus conformational
states) that are clustered
together. (b), (d), (f):
Clustering of conformation
space into two, three, and
four clusters, respectively
means that more states are being distinguished,
revealing more structural details and smaller
timescales. For the system shown in Fig. 3.1, two
to four states are especially interesting to dis-
tinguish. After four states there is a gap in the
timescales (t5 ≪t4) induced by a gap after the
fourth eigenvalue Fig. 3.1c). Thus, for a quali-
tative understanding of the system kinetics, it is
not very interesting to distinguish more than four
states. However, note that for quantitatively mod-
eling the system kinetics, it is essential to main-
tain a ﬁne discretization as the MSM discretiza-
tion error will increase when states are lumped.
Figure 6.4 shows the metastable states of the
protein folding model. Interestingly, there is no
simple partition that splits unfolded and folded
states. In the intermediate temperature case this
is most closely the case as the unfolded state is
a metastable state and separated from all other
states with partial structure. The remaining space
and the conformation space at other temperatures
is clustered in a non-obvious manner. Sometimes
these clusters are deﬁned by the presence of par-
ticular structural elements (e.g. red cluster in the
high-temperature case is characterized by having
c formed.
6.4
Transition Pathways
Understanding the folding mechanism of macro-
molecules, and proteins in particular, is one of
the grand challenges in biophysics. The ﬁeld
was driven by questions such as [11]: How
does an ensemble of denatured molecules ﬁnd
the same native structure, starting from differ-
ent conformations? Is folding hierarchical [3, 4]?
Which forms ﬁrst: secondary or tertiary structure
[16, 49]? Does the protein collapse to compact
structures before structure formation, or concur-
rently [2, 19, 39]? Are there folding nuclei [21]?
Is there a particular sequence in which secondary
structure elements are formed?
Heterogeneity in folding pathways has been
found in a number of experimental studies. For
example, using time-resolved FRET with four
different intramolecular distances, it was found
in Barstar [40] that there are multiple folding
routes, and that different routes dominate under
different folding conditions. Moreover, changing
the denaturant can change the dominant pathway
[25]. Extensive mutational analysis of the seven
ankyrin sequence repeats of the Notch ankyrin
repeat domain has revealed its funnel landscape
[7, 27, 41]. Some folding is sequential, as in

80
F. Noé and J.-H. Prinz
Fig. 6.4 Metastable sets of the folding model
FynSH3 [23], cytochrome [14], T4 lysozyme [8],
and Im7 [15], and some folding is parallel, as in
cytochrome C [17] and HEW lysozyme [26].
Formally, the question about folding pathways
boils down to the following: Let A and B be two
subsets of state space, deﬁned so as to specify
the transition process one wants to investigate.
For example, A may correspond to the strongly
denatured set of sets while B is the metastable
set around the crystal structure when known [33].
All remaining states are unassigned “intermedi-
ate” states I. What is the probability distribution
of the trajectories leaving A and continuing on to
B? I.e., what is the typical sequence of I states
used along the transition pathways?
When an MSM is already available, the infor-
mation of transition pathways is easily accessi-
ble via Transition Path Theory (TPT). The con-
cepts of TPT and the TPT equations for continu-
ous Markov processes were introduced in [45].
See also [46] for a review. TPT was extended
to discrete-space Markov jump processes (i.e.
for Master equation dynamics) in [28] and for
Markov chains in [33]. Transition path theory is
related to Transition Path Sampling (TPS) in the
sense that both are trying to generate statistical
information about the ensemble of A →B path-
ways. TPS is a direct approach to sampling path-
ways directly [6] and could in principle be used
to sample folding pathways. However, in TPS
the sampled trajectories are in practice of lim-
ited length and it is thus unpractical to use TPS
when the intermediate states I contain metasta-
bilities. One can run multiple TPS-samplings be-
tween pairs of metastable states after having iden-
tiﬁed them [44]. More information on the relation
of TPT and TPS can be found in [46].
6.4.1
Discrete Transition Path Theory
We give a brief introduction to TPT for Markov
chains as described in [33], while Sect. 6.5 gives
a more thorough theoretical description. The es-
sential ingredient required to compute the statis-
tics of transition pathways is the committor prob-
ability q+
i . q+
i
is the probability when being at
state i, the system will reach the set B next rather
than A [6, 13, 43]. In protein folding contexts, it
is the probability of folding [13]. By deﬁnition,
all states in A have q+
i = 0 while all states in
B have q+
i = 1. For all intermediate states, the
committor gradually increases from A to B (see
Fig. 6.5), and its value can be calculated by solv-
ing the following system of equations:
−q+
i +

k∈I
Tikq+
k = −

k∈B
Tik
for i ∈I
(see SI appendix of [33] for derivation). Fig-
ure 6.5 shows the committor (color-coding) for
the protein folding model: At low temperatures,
the committor changes rapidly after leaving the
unfolded state and forming the ﬁrst structure el-
ements. At high temperatures, it changes rapidly
when entering the full-structured native state. At
both temperatures, the folding process has thus
essentially two-state character, although with dif-
ferent deﬁnitions of the two states. At intermedi-
ate temperatures, the commitor increases gradu-
ally from the unfolded to the native state, indicat-
ing that it is important to consider the intermedi-
ate states in the folding process.
We further need the backward-committor prob-
ability, q−
i . q−
i
the probability, when being at
state i, that the system was in set A previously

6
Analysis of Markov Models
81
Fig. 6.5 Committor and net ﬂux from unfolded to folded state
rather than in B. For dynamics obeying detailed
balance (which is assumed here) this is simply
q−= 1 −q+.
Consider the probability ﬂux between two
states i and j, given by πiTij (absolute proba-
bility of ﬁnding the system at this transition). We
are only interested in trajectories that success-
fully move from A to B without recurring to A
beforehand. The ﬂux pertaining to these reactive
trajectories only is given by multiplying the ﬂux
by the probability to come from A and to move
on to B:
fij = πiq−
i Tijq+
j .
This ﬂux is the quantity that could be ob-
tained directly from a converged TPS sampling
by counting transitions of the reactive path en-
semble. However, we further want to remove con-
tributions that come from recrossings or detours.
For example, a trajectory that would jump on its
way from A to B multiple times between two
substates i and j would produce an increase in
the ﬂux i →j and the backward ﬂux j →i.
However, we only want to consider a single tran-
sition per pathway and thus deﬁne the net ﬂux,
given by:
f +
ij = max{0,fij −fji}.
Considering detailed balance dynamics and
when ordering states along the reaction coordi-
nate q+
i such that q+
i ≤q+
j , an equivalent expres-
sion is [5, 28]:
f +
ij = πiTij

q+
j −q+
i

.
f +
ij deﬁnes the net ﬂux and is a network of
ﬂuxes leaving states A and entering states B (see
Fig. 6.5). This network is ﬂux-conserving, i.e. for
every intermediate state i, the input ﬂux equals
the output ﬂux (see [28, 33] for proof). The only
set in the network that produces ﬂux is A and the
only set that consumes ﬂux is B. Due to ﬂux con-
servation, these amounts of ﬂux are identical and
are called total ﬂux F of the transition A →B:
F =

i∈A

j /∈A
πiTijq+
j =

i /∈B

j∈B
πiTij

1 −q+
i

.
The value of F gives the expected number of
observed A →B transitions per time unit τ that
an inﬁnitely long trajectory would produce. Of
special interest is the reaction rate constant kAB
(see [33] for derivation):
kAB = F
"#
τ
m

i=1
πiq−
i
$
.
(6.4)
Note that all states that trap the trajectory for
some time will reduce kAB. The effect of these
traps is properly accounted for in the folding ﬂux,
even if they do not contribute to productive path-
ways.
6.4.2
Transition Paths Between
Macrostates
Since the number of n conformational states used
to construct a Markov model is often very large,
it is convenient for illustration purposes to com-
pute the net ﬂux of A →B trajectories amongst
only a few coarse sets of conformations. We

82
F. Noé and J.-H. Prinz
Fig. 6.6 Coarse-grained folding ﬂuxes
consider a coarse partition of state space S =
{C1,C2,...,Cn}, which may be based on a de-
composition into metastable states as described
in Sect. 6.3, or another partition that the user de-
ﬁnes e.g. based on order parameters of interest.
We make the restriction, however, that this de-
composition preserves the boundaries of sets A,
B and I, i.e. A and B are either identical to indi-
vidual Ci, or to a collection of multiple Ci.
The coarse-grained ﬂux between two sets is
then given by:
Fij =

k∈Ci,l∈Cj
fkl.
and the net ﬂux by
F +
ij = max{0,Fij −Fji}.
We note a technicality here: the second step
of again removing backﬂuxes to obtain a coarse-
grained net ﬂux is necessary only if the clusters
used do not partition state space along the iso-
commitor surfaces. Thus it may be desirably to
use a partition that only groups states with simi-
lar committor values.
Figure 6.6 shows the coarse-grained ﬂuxed
from the unfolded to the folded states where
the coarse-graining has been done according to
metastable states. At low and intermediate tem-
peratures, the topology of the folding network is
equal, but the ﬂux becomes smaller and the ab
intermediate is used less. At higher temperatures,
the topology of the folding network changes due
to a change in the boundaries of metastable states
and the unfolded state ﬁrst splits into three inter-
mediate states before converging to abc.
Coarse-graining generates a simpliﬁed view
but correct on the folding ﬂux. The actual dy-
namics, represented by the Markov model T(τ)
cannot easily be coarse-grained without loosing
information, and no statement is made here about
the transition probability between two coarse sets
Ci and Cj.
6.4.3
Pathway Decomposition
The ﬂux network can be decomposed into path-
ways from A →B. When the dynamics are re-
versible, then the ﬂux can be completely decom-
posed into such A →B pathways and no cycles
will remain. Consider a pathway consisting of k
nodes
P = (i1 ∈A →i2 →··· →ik−1 →ik ∈B)
Along each of its edges, say il →il+1, the ﬂux
network can carry a ﬂux of up to f +
ilil+1. Thus, the
capacity or ﬂux of the pathway is given by the
minimum of these ﬂuxes:
f (P) = min

f +
ilil+1


 l = 1...k

A pathway decomposition consists of choos-
ing a pathway P1, and then removing its ﬂux
f (P1) from the ﬂux along all the edges of P1.
This may be repeated until the total ﬂux F has
been subtracted and the network is thus free
of A →B pathways. Note that while the ﬂux
network is unique, such a decomposition is not
unique, because one may choose different strate-
gies to select pathways. Nevertheless pathway de-
compositions are useful in at least the following
aspects:

6
Analysis of Markov Models
83
1. The strongest pathway, i.e. the pathway whose
minimum ﬂux f (P) is largest of all pathways,
is of special interest. Especially so, if f (P) is
not much smaller than the total ﬂux F .
2. One reasonable way to perform a pathways
decomposition is to ﬁrst remove the strongest
pathway, then remove the strongest pathway
of the remaining network, and so on [29]. This
decomposition is useful to estimate how many
A →B are necessary to obtain a certain per-
centage of the ﬂux [33].
3. Any pathway decomposition, even a decom-
position in which pathways are chosen ran-
domly, gives the same answer when calcu-
lating the probability of certain events. Let
us consider the probability that, in the pro-
tein folding model, one of the three struc-
tural elements, a, b, and c, is formed before
the other ones in the intermediate-temperature
case. The network can, e.g. be decomposed
into the pathways with corresponding ﬂuxes:
unfolded →a →ab →abc 0.000241655,
unfolded →a →ac →abc 0.000276008,
unfolded →b →ab →abc 0.0000782191,
unfolded →b →bc →abc 0.000175341,
unfolded →c →ac →abc 0.0000306848,
unfolded →c →bc →abc 0.0000592429
and the probability of forming a, b or c ﬁrst is
given by the ﬂux fraction of pathways where
this occurs:
P(a ﬁrst) = 1
F

i
f (Pi)χi(a ﬁrst)
= 60.11 %,
P(b ﬁrst) = 1
F

i
f (Pi)χi(b ﬁrst)
= 29.44 %,
P(c ﬁrst) = 1
F

i
f (Pi)χi(c ﬁrst)
= 10.44 %
where χi is 1 if a/b/c forms ﬁrst in pathway
Pi, respectively, and 0 otherwise.
The pathway decomposition is usually done on
the original ﬂux network. It can also be done on
a coarse-grained ﬂux network, provided that the
coarse-graining does not lump states which need
to be distinguished in order to calculate the prob-
abilities of the events investigated.
6.4.4
PinWW Example
In order to illustrate the utility of our approach
for studying folding mechanisms, the folding dy-
namics of the PinWW domain [20] is studied
here. The text and ﬁgures from this section have
been published in [33].
180 molecular dynamics simulations were
started, 100 from near-native, 80 from differ-
ent denatured conformations, and run for 115 ns
each at a temperature of 360 K. The simulations
were conducted with the GROMACS program
[38] using explicit SPC solvent, the GROMOS96
force ﬁeld [18] and the reaction ﬁeld method
for computing nonbonded forces. The simulation
setup is described in detail in the Supplemen-
tary Information. The simulated structures were
aligned onto the native structure and then clus-
tered ﬁnely into 1734 kinetically connected and
well-populated clusters. A transition matrix T(τ)
was constructed by counting transitions between
these clusters at a lagtime of τ = 2 ns. It was ver-
iﬁed that T(τ) is a good model for the long-time
kinetics by conducting a Chapman-Kolmogorov
test (see Supplementary Information of [33]).
All properties computed from the Markov model
are associated with statistical uncertainty result-
ing from that fact than only a ﬁnite amount of
simulation data has been used to construct the
model. These uncertainties are computed using
a Bayesian inference method described in [30],
the details are given in the Supplementary In-
formation of [33]. The slowest timescale, cor-
responding to the second-largest eigenvalue of
the Markov model, was 26 µs (conﬁdence inter-
vals 8–78 µs), compared to 13.2 µs measured in a
temperature-jump experiment [20].
In order to study the folding mechanism, a
folded set, B, was deﬁned to be the set of clusters
with average backbone root mean square differ-
ence to the X-ray structure of less than 0.3 nm.

84
F. Noé and J.-H. Prinz
The denatured set, A, was deﬁned to be the set of
all clusters with little β-structure (having a mean
of 3 h-bonds in hairpin 1 which has 6 h-bonds
in the native state and 1 h-bonds in hairpin 2
which has 3 h-bonds in the native state). Based on
these deﬁnitions and the transition matrix T(τ)
between the 1734 clusters, the committor prob-
abilities and the folding ﬂux were computed as
described in the Theory section.
In order to obtain a view of the sequence
of events that is unbiased by deﬁning reaction-
coordinates, the folding pathways must be con-
sidered individually. Therefore, the folding ﬂux
was decomposed into individual pathways (see
Theory section) and for each of them the times
when hairpin 1 or 2 forms and remains stable
were computed. “Formation” was deﬁned as hav-
ing 80 % of the average number of hydrogen
bonds that are present in the native state, but vari-
ations of this threshold did not change the results
qualitatively. The probability that hairpin 1 forms
before hairpin 2 was computed by calculating the
fraction of individual path ﬂuxes in which this oc-
curred (see previous section): In 30 % of the fold-
ing trajectories, hairpin 1 forms before hairpin 2
(conﬁdence interval 18–34 %), and in 70 % the
other way around. Thus, there is no unique mech-
anism in terms of the order of secondary structure
formation, which is in qualitative agreement with
a structural interpretation of mutational Φ-values
for the pin WW domain [48].
In order to visualize the “essential folding
pathways”, coarse conformational sets were de-
ﬁned onto which the folding ﬂux was projected
(see Theory section). We employed a deﬁnition
of 50 sets that separate the most slowly convert-
ing (“metastable”) parts of state space. The num-
ber of sets can be chosen by ﬁxing a timescale
of interest (here 100 ns), then the number of
metastable sets are given by the number of im-
plied timescales of the transition matrix slower
than that timescale of interest. The deﬁnition of
metastable states was obtained by PCCA+. Fig-
ure 6.7 shows the network of the 70 % most rel-
evant pathways, which involves only 21 of these
50 conformational sets. The remaining 30 % of
the ﬂux is mainly in small pathways between the
structures shown in Fig. 6.7 and is omitted here
for clarity of the visualization. The 29 of the 50
conformational sets not shown in the ﬁgure are
only weakly involved in the A →B ﬂux.
The denatured set (A) consists of mostly glob-
ular structures. No completely stretched struc-
tures are observed in the simulation. The ﬁgure
suggests a relatively large number of kinetically
separated unfolded states. Note that this does not
necessarily mean that there are large energy bar-
riers between them, but only that the energy bar-
riers between them are not smaller than the ones
that are overcome when proceeding towards the
intermediate states.
The coarse-grained folding ﬂux suggests that
there is a large number of unfolded states and
early intermediates that narrow down when com-
ing closer to the native state. The picture reem-
phasizes the existence of many structurally dif-
ferent parallel pathways. Pathways where hairpin
1 forms ﬁrst are shown on the right, pathways
where hairpin 2 forms ﬁrst on the left. It is ap-
parent that the pathways in which hairpin 1 forms
ﬁrst also include some partially helical structures
formed by the sequence that will later become the
third β strand.
Figure 6.7 also indicates whether a set of
structures with hairpins formed has the same reg-
ister pattern as in the native state (0) or is register-
shifted by one or two residues (1,2). Most of
the productive folding pathways proceed from
no hairpins over on-register intermediates to the
native state. Some of the folding-efﬁcient struc-
tures have the smaller hairpin 2 register-shifted,
but none of them have hairpin 1 register-shifted.
A special case is a structure which has both chain
ends curled in such a way that they are on-register
near the termini, but register-shifted by 2 residues
in between (indicated by “0–2”).
For the 50 coarse states deﬁned here, the
coarse ﬂux network was decomposed into indi-
vidual pathways according to decreasing ﬂux as
described in the Theory section. Figure 6.8 top
shows the cumulative ﬂux depending on the num-
ber of pathways, showing that about 3–5 path-
ways are needed to carry 50 % of the total ﬂux
and about 11–20 pathways are needed to carry
90 % of the total ﬂux. Although the absolute num-
ber of parallel pathways depends on the number

6
Analysis of Markov Models
85
Fig. 6.7 Left: The network of the 70 % most rele-
vant folding pathways for PinWW. The numbers on the
left indicate the committor probabilities, the thickness of
the arrow indicates the ﬂux of folding trajectories be-
tween each pair of conformations. For each conforma-
tion, a representative mean structure is shown in color
along with an overlay of equilibrium distributed struc-
tures from that conformation indicating the structural
ﬂexibility (gray cloud). The numbers next to the ar-
rows give the normalized net ﬂux (large number) and
the 80 % conﬁdence interval limits (small numbers) in
percent. The blue numbers next to the structures indi-
cate if the ﬁrst/second hairpin has the native register
(0), is register-shifted by one or two residues (1,2) or
not formed at all (−). Right: register-shifted trap states
that do not carry signiﬁcant folding ﬂux but reduces the
folding speed by nearly a factor of 2. Figure reprinted
from [33]
of states one deﬁnes, i.e. on the amount of coarse-
graining, the structural differences between the
50 sets deﬁned here implies a remarkable degree
of parallelism of the folding mechanism in the
present system.
The six pathways which carry most of the to-
tal ﬂux are depicted in Fig. 6.8 bottom, highlight-
ing that there are routes where hairpin 1 forms
ﬁrst (paths 3, 4, 6), where hairpin 2 forms ﬁrst
(paths 1, 2), and where there is a more or less
concurrent formation of both (path 5). Note that
the percentages of individual pathways given in
Fig. 6.8 should not be misinterpreted as the ab-
solute probability of ﬁnding this exact sequence
of conformations, as these pathways do, e.g., not
consider the possibility of unproductive recross-
ing events or changing between different paths.
However, they do provide the relative probabil-
ities of choosing each one folding pathway from
the ensemble of productive folding pathways. For
example, pathway 1 is nearly twice as probable as
pathway 6.
Interestingly, there are three metastable sets
that contribute almost no folding ﬂux (<5 %),
but the system still spends a signiﬁcant fraction of
the time in them (stationary probability 18 % with
conﬁdence intervals 3–45 %). These “trap” states,
depicted in Fig. 6.7, have almost full β content,
but the hairpins are register shifted with respect
to the native structure, in particular at hairpin 1
which is not fully shifted in any of the interme-
diates that signiﬁcantly contribute to the folding

86
F. Noé and J.-H. Prinz
Fig. 6.8 Top: Fluxes of
individual pathways and
the cumulative ﬂux. The
bullets indicate the mean of
the distribution, the error
bars mark the
80 %-conﬁdence interval.
Bottom: The six individual
pathways which carry most
of the total ﬂux (nearly
60 %). Figure reprinted
from [33]
ﬂux. The effective ﬂux reveals that these traps are
accessible from different metastable states, all of
which already have a register shift in hairpin 2 or
a partial register shift in hairpin 1 (see Fig. 6.7).
Removing the trap states from the Markov
model increases the absolute folding rate kAB
(Eq. (6.4)) by almost a factor of 2, showing that
there is a signiﬁcant probability that the system
gets stuck in one of the trap states for some time.
6.5
Experimental
Observables/Dynamical
Fingerprints
In experimental studies of protein folding, the
conformational dynamics is mapped onto an ob-
servable a which is measured. a could be a ﬂu-
orescence or transfer efﬁciency in a ﬂuorescence
experiment, the chemical shift in an NMR exper-

6
Analysis of Markov Models
87
iment, the intensity of a given spectral peak in
an IR experiment, the distance in a pulling ex-
periment, and so forth. In the following we as-
sume, that a has a scalar value for every state Si,
i.e. there is a mapping Si →ai, where ai is the
mean values of a over the state Si. We note that
vector- or function-valued observables (such as
entire spectra in IR or NMR data) could be treated
in a similar way, although this is not done here.
Given the observable vector, various experimen-
tal measurements can be expressed as derived in
[31] and [22].
In equilibrium experiments, the observed mol-
ecule is in equilibrium with the current conditions
of the surroundings (temperature, applied forces,
salt concentration etc.), and the mean value of an
observable a, Eπ[a], is recorded. This may be ei-
ther done my measuring Eπ[a] directly from an
unperturbed ensemble of molecules, or by record-
ing sufﬁciently many and long single molecule
traces a(t) and averaging over them. The ex-
pected measured signal is
Eπ[a] =
n

i=1
aiπi = ⟨a,π⟩.
(6.5)
where E[x] denotes the expectation value of an
observable x(t) and ⟨x,y⟩denotes the scalar
product between two vectors x and y. Since π
is the eigenvector to eigenvalue 1 of the transi-
tion matrix T(τ), it can easily be calculated from
the MSM. Eπ[a] does not depend on time and
therefore bears no kinetic information.
Kinetic information is available through time-
correlation experiments. These may be realized
by taking trajectories from time-resolved single
molecule experiments, such as single molecule
ﬂuorescence or pulling experiments, and com-
puting time correlations from these trajectories.
Given a partition into states Si, the autocorrela-
tion of a for time kτ can be expressed as:
E
	
a(t)a(t + kτ)

=
n

i=1
n

j=1
aiP(st = Si)
· ajP(st+kτ = Sj | st = Si).
(6.6)
The terms under the summation signs contain the
product of the signal in state i and the signal in
state j, aiaj, where ai is weighted by the proba-
bility of ﬁnding the system in state Si, and aj is
weighted by the conditional probability of ﬁnding
the system in state j given that it has been in state
i at k timesteps τ earlier. In equilibrium, the for-
mer probability is given by the equilibrium prob-
ability π. Assuming that the process is Marko-
vian, the latter probability is given by the transi-
tion matrix element of the corresponding transi-
tion matrix. Equation (6.6) can be rewritten as a
matrix equation in which T(τ) appears explicitly
E
	
a(t)a(t + kτ)

=
n

i=1
n

j=1
aiπi · aj
	
Tk(τ)

ij
= aT ΠTk(τ)a.
(6.7)
Replacing Tk(τ) by its spectral decomposition
(Eq. (6.2)), one obtains
E
	
a(t)a(t + kτ)

= aT
 n

i=1
exp

−kτ
ti

φ(i)φ(i)T

a
= ⟨a,π⟩2 +
n

i=2
exp

−kτ
ti

a,φ(i)2.
(6.8)
Likewise, cross-correlation functions can be com-
puted as
E
	
a(t)b(t + kτ)

= ⟨a,π⟩⟨b,π⟩
+
n

i=2
exp

−kτ
ti

a,φ(i)
b,φ(i)
.
(6.9)
Equations (6.8) and (6.9) have the form of a mul-
tiexponential decay function
f (t) = γ corr
1
+

i=2
γ corr
i
exp

−t
ti

,
(6.10)
with amplitudes
γ corr
i
=

a,φ(i)
b,φ(i)
.
(6.11)

88
F. Noé and J.-H. Prinz
Table 6.2 Overview of the expressions for the amplitudes in correlation experiments
equilibrium correlation experiment
relaxation experiment
relaxation experiment
–
γ relax
i
= ⟨a,φ(i)⟩⟨p′T (0),φ(i)⟩
autocorrelation
γ eq,ac
i
= ⟨a,φ(i)⟩2
γ jump,ac
i
= ⟨a,P′(0)φ(i)⟩⟨a,φ(i)⟩
cross-correlation
γ eq,cc
i
= ⟨a,φ(i)⟩⟨b,φ(i)⟩
γ jump,cc
i
= ⟨a,P′(0)φ(i)⟩⟨b,φ(i)⟩
Each of the amplitudes is associated with an
eigenvector of the transition matrix and the de-
cay constant ti is the implied time scale of this
eigenvector, ti = −τ/lnλi.
Alternatively, relaxation experiments can be
used to probe the molecules’ kinetics. In these
experiments, the system is allowed to relax from
a non-equilibrium starting state with probabil-
ity distribution p(0). Examples are temperature-
jump, pressure-jump, or pH-jump experiments,
rapid mixing experiments, or experiments where
measurement at t = 0 starts from a synchronized
starting state, such as in processes that are started
by an external trigger like a photoﬂash. After
time t = 0 the conditions are governed by a tran-
sition matrix T(τ) with stationary distribution
π ̸= p(0). The ensemble average Ep(0)[a(t)] is
recorded while the system relaxes from the initial
distribution p(0) to the new equilibrium distribu-
tion π. The expectation value of the signal at time
t = kτ depends on the current probability distri-
bution p(kτ) and is given by
Ep(0)
	
a(kτ)

=
n

i=1
aipi(kτ) =

a,p(kτ)

.
(6.12)
Equation (6.12) is analogous to Eq. (6.9). p(kτ)
evolves under the inﬂuence of the transition ma-
trix T(τ). Using the spectral decomposition of
T(τ) (Eq. (6.2)) and expressing λk
i via implied
timescales ti, we obtain
Ep(0)
	
a(kτ)

=

p′(0),π

⟨a,π⟩
+
n

i=2
exp

−kτ
ti

p′(0),φ(i)
a,φ(i)
(6.13)
where p′(0) is the excess probability distribution
p′(0) = Π−1p(0). Ep(0)[a(kτ)] is again a multi-
exponential decay function with amplitudes
γ relax
i
=

p′(0),φ(i)
a,φ(i)
.
(6.14)
A summary of the amplitudes of various types of
experiments is given in Table 6.2.
These equations are useful to calculate based
on simulations which processes a given experi-
ment will be sensitive to. To illustrate this, con-
sider again the protein folding model and let us
consider three different observables. In observ-
able A, we measure the formation of structure el-
ement a, i.e. a = 1 for states in which a is formed
while a = 0 for states in which a is not formed.
Likewise observables B and C measure the for-
mation of structure elements b and c. This can
be realized e.g. with a ﬂuorophor and a speciﬁc
quencher at appropriate positions [12]. We also
consider three ways of measuring each of these
three constructs, namely temperature jump exper-
iments at three different temperatures from 0.15
to 0.2, from 0.6 to 0.65, and from 2.4 to 2.45. We
calculate the amplitude that is in the slowest and
second-slowest processes and report the normal-
ized results in Fig. 6.9.
It is apparent that the processes that can be
measured drastically depends on the way the
measurement is done and the observable used.
For example, at high temperatures, all observ-
ables yield nearly single-exponential kinetics
with the timescale of moving between the un-
folded state and the partially structured state. At
low temperature, the kinetics may appear biexpo-
nential, provided that measurement noise is suf-
ﬁciently small, with the main amplitude being in
the formation of a (γ2) and c (γ3).
The combination of Markov models and the
spectral theory given is useful to compare simu-
lations and experiments via the dynamical ﬁnger-

6
Analysis of Markov Models
89
Obs A Obs B Obs C
T-Jump 0.15 →0.20 γ2
0.71
0.19
0.13
γ3
0.29
0.81
0.87
T-Jump 0.60 →0.65 γ2
0.94
0.89
0.17
γ3
0.06
0.11
0.83
T-Jump 2.40 →2.45 γ2
0.98
0.95
0.89
γ3
0.02
0.05
0.11
Fig. 6.9 Normalized amplitudes of the slowest and sec-
ond-slowest processes of simulated temperature-jump ex-
periments of the folding model
print representation of the system kinetics [31].
Furthermore, this approach permits to design ex-
periments that are optimal to probe individual re-
laxations [31].
References
1. Amadei A, Linssen AB, Berendsen HJC (1993) Es-
sential dynamics of proteins. Proteins 17:212–225
2. Bachmann A, Kiefhaber T (2001) Apparent two-state
tendamistat folding is a sequential process along a de-
ﬁned route. J Mol Biol 306(2):375–386. doi:10.1006/
jmbi.2000.4399
3. Baldwin RL, Rose GD (1999) Is protein folding hier-
archic? I. Local structure and peptide folding. Trends
Biochem Sci 24(1):26–33. http://view.ncbi.nlm.nih.
gov/pubmed/10087919
4. Baldwin RL, Rose GD (1999) Is protein folding
hierarchic? II. Folding intermediates and transition
states. Trends Biochem Sci 24(2):77–83. http://view.
ncbi.nlm.nih.gov/pubmed/10098403
5. Berezhkovskii A, Hummer G, Szabo A (2009) Re-
active ﬂux and folding pathways in network mod-
els of coarse-grained protein dynamics. J Chem Phys
130(20). doi:10.1063/1.3139063
6. Bolhuis PG, Chandler D, Dellago C, Geissler PL
(2002) Transition path sampling: throwing ropes
over rough mountain passes, in the dark. Annu Rev
Phys Chem 53(1):291–318. doi:10.1146/annurev.
physchem.53.082301.113146
7. Bradley C, Barrick D (2006) The notch ankyrin do-
main folds via a discrete, centralized pathway. Struc-
ture 14(8):1303–1312. doi:10.1016/j.str.2006.06.013
8. Cellitti J, Bernstein R, Marqusee S (2007) Explor-
ing subdomain cooperativity in T4 lysozyme II: un-
covering the C-terminal subdomain as a hidden in-
termediate in the kinetic folding pathway. Protein Sci
16(5):852–862. doi:10.1110/ps.062632807
9. Chodera JD, Dill KA, Singhal N, Pande VS, Swope
WC, Pitera JW (2007) Automatic discovery of
metastable states for the construction of Markov
models of macromolecular conformational dynamics.
J Chem Phys 126:155,101
10. Deuﬂhard P, Weber M (2003) Robust Perron cluster
analysis in conformation dynamics. ZIB report 03-09
11. Dill KA, Ozkan SB, Shell MS, Weikl TR (2008)
The protein folding problem. Annu Rev Biophys
37(1):289–316.
doi:10.1146/annurev.biophys.37.
092707.153558
12. Doose S, Neuweiler H, Sauer M (2009) Fluores-
cence quenching by photoinduced electron transfer:
a reporter for conformational dynamics of macro-
molecules. Chem Phys Chem 10(9–10):1389–1398.
doi:10.1002/cphc.200900238
13. Du R, Pande VS, Yu A, Tanaka T, Shakhnovich
ES (1998) On the transition coordinate for protein
folding. J Chem Phys 108(1):334–350. doi:10.1063/
1.475393
14. Feng H, Zhou Z, Bai Y (2005) A protein folding path-
way with multiple folding intermediates at atomic
resolution. Proc Natl Acad Sci USA 102(14):5026–
5031. doi:10.1073/pnas.0501372102
15. Friel CT, Beddard GS, Radford SE (2004) Switching
two-state to three-state kinetics in the helical protein
Im9 via the optimisation of stabilising non-native in-
teractions by design. J Mol Biol 342:261–273
16. Gilmanshin R, Williams S, Callender RH, Woodruff,
Dyer RB (1997) Fast events in protein folding: re-
laxation dynamics of secondary and tertiary structure
in native apomyoglobin. Proc Natl Acad Sci USA
94:3709–3713
17. Goldbeck RA, Thomas YG, Chen E, Esquerra RM,
Kliger DS (1999) Multiple pathways on a protein-
folding energy landscape: kinetic evidence. Proc Natl
Acad Sci USA 96(6):2782–2787. http://view.ncbi.
nlm.nih.gov/pubmed/10077588
18. van Gunsteren WF, Berendsen HJC (1990) Com-
puter simulation of molecular dynamics: method-
ology, applications and perspectives in chemistry.
Angew Chem, Int Ed Engl 29:992–1023
19. Hoang L, Bédard S, Krishna MMG, Lin Y, Eng-
lander SW (2002) Cytochrome c folding pathway:
kinetic native-state hydrogen exchange. Proc Natl
Acad Sci USA 99(19):12,173–12,178. doi:10.1073/
pnas.152439199
20. Jäger M, Nguyen H, Crane JC, Kelly JW, Grue-
bele M (2001) The folding mechanism of a beta-
sheet: the WW domain. J Mol Biol 311(2):373–393.
doi:10.1006/jmbi.2001.4873
21. Jane Wright PEE, Scheraga HAA (2006) The
role of hydrophobic interactions in initiation and
propagation of protein folding. Proc Natl Acad
Sci USA 103(35):13,057–13,061. doi:10.1073/pnas.
0605504103
22. Keller B, Prinz JH, Noé F (2012) Markov models and
dynamical ﬁngerprints: unraveling the complexity of
molecular kinetics. Chem Phys 396:92–107
23. Korzhnev DM, Salvatella X, Vendruscolo M, Di
Nardo
AA,
Davidson
AR,
Dobson
CM,
Kay
LE (2004) Low-populated folding intermediates
of Fyn SH3 characterized by relaxation disper-
sion NMR. Nature 430(6999):586–590. doi:10.1038/
nature02655

90
F. Noé and J.-H. Prinz
24. Kube S, Weber M (2007) A coarse graining
method for the identiﬁcation of transition rates
between molecular conformations. J Chem Phys
126(2):024,103+. doi:10.1063/1.2404953
25. Lindberg MO, Oliveberg M (2007) Malleability of
protein folding pathways: a simple reason for com-
plex behaviour. Curr Opin Struct Biol 17(1):21–29.
doi:10.1016/j.sbi.2007.01.008
26. Matagne A, Radford SE, Dobson CM (1997) Fast
and slow tracks in lysozyme folding: insight into the
role of domains in the folding process. J Mol Biol
267(5):1068–1074. doi:10.1006/jmbi.1997.0963
27. Mello CC, Barrick D (2004) An experimentally de-
termined protein folding energy landscape. Proc Natl
Acad Sci USA 101(39):14,102–14,107. doi:10.1073/
pnas.0403386101
28. Metzner P, Schütte C, Eijnden EV (2009) Transition
path theory for Markov jump processes. Multiscale
Model Simul 7:1192–1219
29. Metzner P, Schütte C, Vanden-Eijnden E (2006) Il-
lustration of transition path theory on a collection of
simple examples. J Chem Phys 125(8). doi:10.1063/
1.2335447
30. Noé F (2008) Probability distributions of molecular
observables computed from Markov models. J Chem
Phys 128:244,103
31. Noé F, Doose S, Daidone I, Löllmann M, Chodera
JD, Sauer M, Smith JC (2011) Dynamical ﬁnger-
prints for probing individual relaxation processes in
biomolecular dynamics with simulations and kinetic
experiments. Proc Natl Acad Sci USA 108:4822–
4827
32. Noé F, Horenko I, Schütte C, Smith JC (2007)
Hierarchical analysis of conformational dynamics
in biomolecules: transition networks of metastable
states. J Chem Phys 126:155,102
33. Noé F, Schütte C, Vanden-Eijnden E, Reich L, Weikl
TR (2009) Constructing the full ensemble of fold-
ing pathways from short off-equilibrium simulations.
Proc Natl Acad Sci USA 106:19,011–19,016
34. Prinz JH, Wu H, Sarich M, Keller B, Fischbach
M, Held M, Chodera JD, Schütte C, Noé F (2011)
Markov models of molecular kinetics: generation and
validation. J Chem Phys 134:174,105
35. Rao F, Caﬂisch A (2004) The protein folding net-
work. J Mol Biol 342:299–306
36. Sarich M, Noé F, Schütte C (2010) On the approx-
imation error of Markov state models. Multiscale
Model Simul 8:1154–1177
37. Schütte C, Fischer A, Huisinga W, Deuﬂhard P
(1999) A direct approach to conformational dynam-
ics based on hybrid Monte Carlo. J Comput Phys
151:146–168
38. van der Spoel D, Lindahl E, Hess B, Groenhof G,
Mark AE, Berendsen HJC (2005) GROMAC: fast,
ﬂexible and free. J Comput Chem 26:1701–1718
39. Sridevi K (2000) The slow folding reaction of
barstar: the core tryptophan region attains tight pack-
ing before substantial secondary and tertiary struc-
ture formation and ﬁnal compaction of the polypep-
tide chain. J Mol Biol 302(2):479–495. doi:10.1006/
jmbi.2000.4060
40. Sridevi K, Lakshmikanth GS, Krishnamoorthy G,
Udgaonkar JB (2004) Increasing stability reduces
conformational heterogeneity in a protein folding in-
termediate ensemble. J Mol Biol 337(3):699–711.
doi:10.1016/j.jmb.2003.12.083
41. Street TO, Bradley CM, Barrick D (2007) Predict-
ing coupling limits from an experimentally deter-
mined energy landscape. Proc Natl Acad Sci USA
104(12):4907–4912. doi:10.1073/pnas.0608756104
42. Swope WC, Pitera JW, Suits F (2004) Describing
protein folding kinetics by molecular dynamics sim-
ulations, 1: theory. J Phys Chem B 108:6571–6581
43. Vanden-Eijnden E (2006) Transition path theory. In:
Computer simulations in condensed matter systems:
from materials to chemical biology, vol 1. Springer,
Heidelberg, pp 453–493. doi:10.1007/3-540-35273-
2_13
44. Vreede J, Juraszek J, Bolhuis PG (2010) Predicting
the reaction coordinates of millisecond light-induced
conformational changes in photoactive yellow pro-
tein. Proc Natl Acad Sci USA 107:2397–2402
45. Vanden-Eijnden E (2006) Towards a theory of transi-
tion paths. J Stat Phys 123(3):503–523. doi:10.1007/
s10955-005-9003-9
46. Vanden-Eijnden E (2010) Transition-path theory and
path-ﬁnding algorithms for the study of rare events.
Annu Rev Phys Chem 61:391–420
47. Weber M (2003) Improved Perron cluster analysis.
ZIB report 03-04
48. Weikl TR (2008) Transition states in protein fold-
ing kinetics: modeling phi-values of small beta-
sheet proteins. Biophys J 94(3):929–937. http://www.
cell.com/biophysj/abstract/S0006-3495(08)70691-X
49. Yeh SR, Rousseau DL (2000) Hierarchical fold-
ing of cytochrome c. Nat Struct Biol 7(6):443–445.
doi:10.1038/75831

7
Transition Path Theory
Eric Vanden-Eijnden
7.1
Introduction
Markov State Models (MSMs) are meant to
be a way to analyze complex time-series data
from molecular dynamics (MD) simulations. But
MSMs can be complicated themselves and re-
quire analysis tools that go beyond simple “look-
and-see” techniques. In this chapter we describe a
set of such tools based on the framework of Tran-
sition Path Theory (TPT) originally introduced
in [4] and further developed in [1, 5, 7, 8, 12]. In
a nutshell, these tools are aimed at understanding
the mechanism and rate of speciﬁc reactions in
the system, that is, transitions between any par-
ticular states or group of states of interest in the
MSM. Beside the theory recalled in Sect. 7.2,
the main upshots of this chapter are two algo-
rithms presented in Sect. 7.4 that permit to gener-
ate directly reactive trajectories (i.e. trajectories
by which a speciﬁc transition of interest occurs)
and loop-erased reactive trajectories (i.e. reactive
trajectories from which we have extracted the
productive pieces when they progress from the
reactant to the product state).
We begin by setting up notation and recalling a
few basic concepts of the theory of discrete-time
Markov chains that will prove useful in the se-
quel [10]. Let Tij ≡Tij(τ), i,j = 1,...,N de-
note the entries of the probability transition ma-
E. Vanden-Eijnden (B)
Courant Institute, New York University, 251 Mercer
street, New York, NY 10012, USA
e-mail: eve2@cims.nyu.edu
trix over the N states of the MSM and let us as-
sume that this matrix satisﬁes a detailed balance
condition (time-reversibility) with respect to the
equilibrium probability distribution πi, i.e.
πiTij = πjTji,
∀i,j = 1,...,N.
(7.1)
This condition implies that the transition matrix
Tij admits the spectral decomposition
Tij =
N

k=1
λkψ(k)
i
ψ(k)
j πj
(7.2)
where the eigenvalue/eigenvector pairs (λk,ψ(k))
satisfy
N

j=1
Tijψ(k)
j
= λkψ(k)
i
,
k = 1,...,N
(7.3)
with the normalization condition
N

i=1
ψ(k)
i
ψ(l)
i πi = δk,l,
k,l = 1,...,N. (7.4)
Assuming ergodicity, the detailed balance condi-
tion (7.1) also implies that all the eigenvectors
but the ﬁrst λ1 = 1 (associated with ψ(1)
i
= 1)
are in the interval (−1,1) and can be ordered
as 1 = λ1 > |λ2| ≥··· ≥|λN| ≥0. If we denote
by μi(n) the probability to observe the system in
state i after n steps (i.e. at time nτ), this proba-
G.R. Bowman et al. (eds.), An Introduction to Markov State Models and Their Application to Long Timescale
Molecular Simulation, Advances in Experimental Medicine and Biology 797,
DOI 10.1007/978-94-007-7606-7_7, © Springer Science+Business Media Dordrecht 2014
91

92
E. Vanden-Eijnden
bility also admits a spectral decomposition
μi(n) =
N

k=1
ckλn
kψ(k)
i
πi,
ck =
N

j=1
ψ(k)
j μj(0)
(7.5)
and so does the probability current Fij(n) enter-
ing the forward Kolmogorov equation for μi(n):
μi(n + 1) −μi(n) =
N

j=1
Fij(n),
Fij(n) = μj(n)Tji −μi(n)Tij.
(7.6)
Explicitly:
Fij(n) =
N

k=1
ckλn
kF (k)
ij ,
F (k)
ij
= πiTij

ψ(k)
j
−ψ(k)
i

.
(7.7)
The spectral decompositions above permit to
analyze how the system relaxes to equilibrium
and they are most useful in systems displaying
metastability [2, 3]. By deﬁnition, a metastable
system is one in which there is a group of eigen-
values very close to 1 whereas the ones out-
side this group are much less so, i.e. there is
a M < N such that 1 −|λM| ≤ε ≪1 and
1 −|λM+1| ≥δ ≫ε. The eigenvalues and eigen-
vectors in this low-lying group capture the slow
relaxation processes in the system, in the sense
that there are values of n such that λn
M+1 has
decayed to values very close to zero but λn
M
has not: on time-scales reached after such n
steps, the sum over k in the spectral decompo-
sitions of the probability in (7.5) and the current
in (7.7) can be truncated to the ﬁrst M terms. It is
well-known [11] that the low-lying eigenvectors,
ψ(1)
i
,...,ψ(M)
i
, permit to identify the metastable
regions in phase space where the system gets
trapped for long period of times, and the low-
lying currents, F (1)
ij ,...,F (M)
ij
, indicate how the
probability slowly ﬂows between these regions to
eventually reach equilibrium—in this sense, they
explain the mechanism of transition between the
metastable states.
The discussion above suggests that a way to
analyze an MSM could be to calculate its spec-
trum and focus on its low-lying part. This idea,
however, is not a very practical one in many sys-
tems of interest whose complexity goes far be-
yond the numerical examples usually chosen to
illustrate them. Indeed, it is often the case that
the low-lying part of the spectrum is quite com-
plicated, with subgroups of metastable eigenval-
ues into metastable groups, subsubgroups into the
subgroups, etc. Or that the system is in fact not
very metastable in the sense that distinguishing
between these groups is not straightforward. In
some sense, the spectral decomposition of the
chain contains all the information about the MSM
but this is often too much of it to be useful. In
many situations, it would be preferable to have
at one’s disposal a set of tools that permit to un-
derstand more speciﬁcally how the system makes
transitions between arbitrary states of interest that
one picks a priori. These states could for example
be those associated with the unfolded structure of
a protein on the one hand, and its native struc-
ture on the other. To build such tools, one could
introduce a source and a sink on these states and
see how the system evolves after such modiﬁca-
tion. In essence, this is the idea behind TPT, ex-
cept that the source and the sink are introduced in
a natural way that do not alter the mechanism of
the reaction between states of interest. How this
is done is explained next.
7.2
The Basic Concepts and Main
Outputs of TPT
Suppose that we have identiﬁed two states or
group of states in the MSMs, which we will de-
note by A and B, and we would like to understand
the mechanism by which the system transits from
A to B or vice-versa—by detailed balance these
two types of transitions are the time-reversed of
one another. One way to think about this prob-
lem is to imagine that we have at our disposal
a very long equilibrium trajectory of the MSM
out of which we prune the successive pieces dur-
ing which the system has last left A before enter-
ing B—a schematic representation of this proce-
dure is shown in Fig. 7.1. We call these pieces the
‘reactive trajectories’ (they are shown in red in
Fig. 7.1) and we ask about their statistical prop-
erties, such as their probability distribution, their

7
Transition Path Theory
93
Fig. 7.1 Schematic representation of a long equilibrium
trajectory in the MSM oscillating between set A and set B.
The red pieces of this trajectory, during which it has last
left A before entering B, form the ensemble of reactive
trajectories. In this cartoon the trajectory looks continuous
but in the MSM it is discrete both in space and time
probability current, etc. To answer these ques-
tions, let us ﬁrst estimate the probability that a
trajectory visiting state i be reactive, i.e. that this
visit occurs while the system is on its way from
A to B. Clearly this requires that after leaving i
the trajectory will ﬁrst reach B rather than A, and
that before arriving i it last left A rather than B.
By time-reversibility, the probability of the sec-
ond event is one minus the probability of the ﬁrst,
which we denote by qi and call the committor
function for the reaction from A to B or, in short,
the committor. It is easy to write down an equa-
tion for qi:
qi =

j∈B
Tij +

j /∈A∪B
Tijqj,
i /∈A ∪B. (7.8)
This equation uses the Markov property and sim-
ply says that the probability qi that after leaving
i the trajectory will ﬁrst reach B rather than A is
the sum of the probabilities of distinct events: ei-
ther the trajectory goes to B rather than A in one
step after leaving i, which leads to the ﬁrst term
at the right hand-side of (7.8), or it goes to some
intermediate state j not in A or B and then to B
rather than A after leaving that intermediate state,
which leads to the second term at the right hand-
side of (7.8). Note that since qi = 0 if i ∈A and
qi = 1 if i ∈B, (7.8) can also be written more
compactly as
qi =
N

j=1
Tijqj,
i /∈A ∪B.
(7.9)
In terms of the committor qi, the probability
that a trajectory visiting state i be reactive is sim-
ply given by qi(1−qi), which also means that the
equilibrium probability to observe a trajectory at
state i and that it be reactive is given by
πR
i = (1 −qi)πiqi.
(7.10)
Note that this distribution is not normalized to 1.
In fact
ρR =
N

i=1
πR
i =
N

i=1
(1 −qi)πiqi
(7.11)
gives the equilibrium probability for the trajec-
tory to be reactive, that is, the proportion of time
it spends on the pieces where it has last left A
before entering B.
By a similar argument we can derive an ex-
pression for the joint equilibrium probability that
the trajectory visits states i and j consecutively
and that it be reactive:
πR
ij = (1 −qi)πiTijqj.
(7.12)
If we anti-symmetrize this quantity we obtain the
probability current of the reactive trajectories that
indicates how, on average, reactive trajectories
ﬂow from A to B:
F R
ij = πR
ij −πR
ji = πiTij(qj −qi).
(7.13)
This current should be compared to the F (k)
ij
de-
ﬁned in (7.7). It is known [3] that the low-lying
eigenvectors can be approximated by the com-
mittor function for the reaction between appropri-
ately chosen sets A and B. Equation (7.13) can
be used to make the same statement at the level
of currents. Of course, (7.13) is exact and does
not require the system to be metastable: the cur-
rent F R
ij permits to analyze the mechanism of the
transition between any two sets A and B, as will
be illustrated in Sects. 7.3 and 7.4.
Another quantity of interest is the average fre-
quency at which the trajectory makes transition
between A and B. Since by deﬁnition every reac-
tive trajectory that leaves A goes to B next, this
average frequency can be expressed as the total

94
E. Vanden-Eijnden
current of reactive trajectories out of A or, equiv-
alently, their total current into B:
νR =

i∈A

j /∈A
F R
ij =

i∈A

j /∈A
πiTijqj
=

i /∈B

j∈B
F R
ij =

i /∈B

j∈B
(1 −qi)πiTij
(7.14)
where we used qi = 0 if i ∈A and qi = 1 if i ∈B.
It is a simple exercise to show from (7.9) that
these expressions for νR can be reorganized into
νR = 1
2
N

i,j=1
πiTij(qj −qi)2.
(7.15)
If NT denotes the number of reactive pieces along
a trajectory of length T , νR is the limit of NT /T
as T →∞and it should not be confused with the
rates of transition from A to B and B to A, which
we will denote by kA,B and kB,A, respectively.
Indeed, νR is symmetric with respect to A and B:
the number of transitions from A to B is the same
as the one from B to A, since each of the ﬁrst is
followed by one of the second. The rates kA,B and
kB,A, on the other hand, account for the fact that
between these transitions the system can spend
more time in one set than in the other: If TA and
TB denote the sum of all times during which the
last set visited by a trajectory of length T was A
or B, respectively, by deﬁnition kA,B is the limit
of NT /TA as T →∞and kB,A that of NT /TB.
Since the probabilities to ﬁnd the system in state
i and that it came last from A or B are given by
πi(1 −qi) and πiqi, respectively, the proportions
of time that the system was last in A or B are
ρA =
N

i=1
πi(1 −qi),
ρB =
N

i=1
πiqi
(ρA + ρB = 1),
(7.16)
ρA is the limit of TA/T as T →∞and ρB that
of TB/T . To obtain the transition rates, we must
then divide νR by these quantities:
kA,B = νR/ρA,
kB,A = νR/ρB.
(7.17)
The inverse of these rates, 1/kA,B and 1/kB,A,
give, respectively, the mean times between suc-
cessive visits of A then B or B then A. We could
also ask ourselves what is the average duration
of the reactive trajectories, i.e. the mean time the
trajectory spends to go to B after leaving A last.
This mean time is simply given by
τR = ρR/νR.
(7.18)
Other statistical properties of the reactive trajec-
tories can be derived from arguments similar to
the ones above. We will, however, conclude here
our little tour of TPT and henceforth focus on
tools to analyze and interpret the main output of
TPT, namely (7.10), (7.12) and (7.13).
7.3
Illustrative Example
It is useful to illustrate the main outputs of TPT
on an example where these quantities can simply
be plotted directly. This will help us understand
the meaning of these objects. To this end, con-
sider a system whose state space are the nodes
on the square grid shown in the left panel of
Fig. 7.2. To every node on the grid, we associ-
ated an energy, Ei, and we assume that the sys-
tem can hop from a node to one of its direct
neighbors on the grid with a probability consis-
tent with Metropolis-Hasting rule. Speciﬁcally, if
aij = aji denotes the adjacency matrix of the grid
(i.e. aij = 1 if i and j are direct neighbors and 0
otherwise), we take as transition matrix
Tij = ˆpij min
e−βEj ˆpji
e−βEi ˆpij
,1

(i ̸= j) (7.19)
and Tii = 1 −
j̸=i Tij; here ˆpij = aij/
j aij
plays the role of the proposal distribution in the
Metropolis-Hasting Monte-Carlo algorithm. This
choice guarantees that the chain is ergodic with
respect to the Boltzmann-Gibbs equilibrium dis-
tribution
πi = C−1e−βEi,
C =
N

i=1
e−βEi
(7.20)

7
Transition Path Theory
95
Fig. 7.2 Left panel: Each of the nodes on this 60 × 60
grid is a state of the Markov chain, and the grayscale of
the node indicates its energy: the darker it is, the lower its
energy, i.e. the higher its equilibrium probability (7.20).
The white nodes (invisible on the ﬁgure) are accessible
too, but their energy is higher and hence their equilib-
rium probability is low. Right panel: Isocontour plot of
the committor qi if A is made of the nodes in the top row
shown in blue and B is made of the nodes in the bottom
row shown in red. To create this ﬁgure, instead of plotting
the values of the committor at the individual nodes, we
interpolated a function between them—this improves the
readability of the ﬁgure
where N is the number of nodes on the grid.
The speciﬁc example shown in the left panel of
Fig. 7.2 was constructed by ﬁrst picking a ran-
dom set of nodes, and assigning them high ener-
gies and hence low equilibrium probability (these
nodes are white in the ﬁgure, making them invis-
ible). For the remaining nodes, the smaller their
y-coordinate on the grid, the lower we make their
energy, so that at equilibrium the system spends
slightly more time at the bottom than at the top.
Here we will analyze how transitions between top
and bottom arise. To make such a transition, it
is natural to suspect that the system will ﬁnd its
way through the grid by hopping from low en-
ergy node to low energy node (i.e. avoiding the
invisible nodes in the left panel of Fig. 7.2), and
an interesting question is whether there is a pref-
erential way to do this. Next we use TPT to an-
swer this question. Note that this is an example
in which spectral analysis is difﬁcult to perform
and not very enlightening: there are no low-lying
eigenvalues, and the eigenvectors are complicated
and hard to interpret.
If we pick the top row of nodes as set A, and
the bottom row as set B, the committor has the
structure shown in the right panel of Fig. 7.2. This
ﬁgure alone does not explain much of the mecha-
nism of the reaction, but it already indicates how
the system can be stratiﬁed using the commit-
tor value of the nodes as reaction coordinate—in
fact, this is the best reaction coordinate we can
pick to describe the transition and the results in
the right panel of Fig. 7.2 show that y-coordinate
of the node on the grid is not a good indicator of
how close this node is from B in terms of the tran-
sition. Indeed, the committor is quite different on
the left and right halves of the system.
Shown in Fig. 7.3 is the probability distribu-
tion of reactive trajectories deﬁned in (7.10) (left
panel) and the total probability current (or total
ﬂux) of reactive trajectories going through each
node deﬁned as (right panel):
1
2
N

j=1


F R
ij


.
(7.21)
As can be seen, the probability distribution of
reactive trajectories takes appreciable values on
many of the nodes with low energy in the sys-
tem, meaning that the reactive trajectories ven-
ture on all of these with comparable frequency.
At the same time, however, only a small subset of
nodes carry most of the current of reactive trajec-
tories: from the right panel of Fig. 7.3 we see that
these nodes are in a narrow tube at the top that
branches into two tubes at the bottom. This means

96
E. Vanden-Eijnden
Fig. 7.3 Left panel:
Probability distribution of
the reactive
trajectories (7.10). The
darker the node, the higher
its probability weight.
Right panel: Every node is
colored according to the
total current of reactive
trajectories going through
it, 1
2

j |F R
ij |, where F R
ij is
the current of reactive
trajectories (7.13)
that the reactive trajectories themselves are quite
complicated, and lose themselves in the ‘maze’
of the system, looping on themselves, going back
and forth, etc. However there are portions of their
paths during which they do advance productively
from A to B, much in the same way as a ran-
dom walker in a maze would make many detours
and yet from time to time advance on the cor-
rect shortest path from entrance to exit. These
portions involve mostly motion through the tubes
shown in the right panel of Fig. 7.3, which is
quite a remarkable conclusion considering how
uniform the system looks to the naked eye. This
indicates that the probability current of reactive
trajectories is the object that is most useful to ex-
plain the mechanism of the transition, in the sense
that it permits to identify the productive paths
from A to B. How complicated the reactive tra-
jectories themselves are, how much do they wan-
der away from these productive paths and where,
etc. can then be explained by the committor and
the probability distribution of reactive trajectories
which permit to identify dead-ends, dynamical
traps, etc. as regions that are visited by the reac-
tive trajectories but through which little of their
probability current goes. Next we explain how to
carry on such an analysis in situations where plot-
ting directly the probability distribution and cur-
rent of reactive trajectories is more difﬁcult.
7.4
Analysis Tools Based on TPT
In this section we introduce a few tools to analyze
the outputs of TPT in situations where we cannot
simply plot them. To this end, we revisit a ques-
tion that we asked earlier, namely how to mod-
ify the chain by introducing a source at A and a
sink at B in such a way that the trajectories in
this modiﬁed chain tell us something about the
mechanism of the transition. We can use TPT as
guide to design several ways to do this, each of
which giving us a different type of information.
Here we discuss two of them. For simplicity, we
assume that Tij = 0 if i ∈A and j ∈B, i.e. there
are no direct jumps from A to B—if this assump-
tion fails, some of the formulae below need to be
modiﬁed.
The ﬁrst way permits to generate directly a set
of trajectories that are statistically identical to the
set of reactive trajectories. This can be done by
generating each trajectory via the following two-
step procedure:
1. Pick a state i outside of A with probability
p′
i =

j∈A πjTjiqi

j∈A

k/∈A πjTjkqk
.
(7.22)
2. Out of this state generate a trajectory using as
transition matrix
T ′
ij =
Tijqj
N
k=1 Tikqk
= Tijqj
qi
(i /∈A ∪B)
(7.23)
until it reaches B, and keep only the sequence
of states outside of A and B (i.e. disregard
the last state it reached in B and instead pick
again a new state according to p′
i to start a new
trajectory).
Because of the presence of the factor qj at the nu-
merator of T ′
ij the trajectories generated by this
procedure can never go back to A and they even-

7
Transition Path Theory
97
tually have to reach B. This make them good can-
didates for reactive trajectories. To show that they
are indeed true reactive trajectories, let us check
that their stationary distribution is given by the
normalized version the probability distribution of
reactive trajectories πR
i deﬁned in (7.10)
π′
i =
πR
i
N
j=1 πR
j
= πR
i
ρR
.
(7.24)
We can verify this statement by checking that π′
i
satisﬁes the right balance equation for the process
deﬁned by the procedure above based on (7.22)
and (7.23):
π′
i

j̸=i
T ′
ij = f ′
i +

j̸=i
π′
jT ′
ji
(i /∈A ∪B).
(7.25)
Here the left hand-side is the total probability ﬂux
outside state i and the right hand-side is the to-
tal probability ﬂux into state i, including the ﬂux
coming from A which is accounted for by the
term f ′
i deﬁned as
f ′
i =

k/∈B

l∈B
π′
kT ′
kl

p′
i.
(7.26)
To understand the form of this term, note that
the generating procedure described above implies
that a new trajectory is started each time the pre-
vious one reaches B. Thus the total ﬂux out of
A is the same as the total ﬂux into B, which is

k/∈B

l∈B π′
kT ′
kl: since this ﬂux is distributed
among states according to p′
i, this gives (7.26). It
is easy to see using their explicit expressions for
p′
i, T ′
ij, π′
i and f ′
i in (7.25) that the left and right
hand-sides in this equation balance each other,
conﬁrming that the procedure above does indeed
generate reactive trajectories—this calculation is
done at the end of this chapter.
While this is nice, from the example in
Sect. 7.3 we know that reactive trajectories can
be quite complicated and get caught in dynami-
cal traps or dead-ends, loop on themselves, etc.
For this reason it is more useful to generate loop-
erased reactive trajectories, that is, paths that only
contain the portions of the reactive trajectories
when they advance productively from A to B.
This can be done by modifying the procedure
above as follows:
1. Pick a state i outside of A with probability p′
i
given in (7.22).
2. Out of this state generate a trajectory using as
transition matrix
T R
ij =

Tij(qj −qi)+
if i ̸= j,
1 −
k̸=i Tik(qk −qi)+
if i = j
(i /∈A ∪B)
(7.27)
until it reaches B, and keep only the sequence
of states outside of A and B (i.e. disregard
the last state it reached in B and instead pick
again a new state according to p′
i to start a
new trajectory): here (qj −qi)+ = max{(qj −
qi),0}.
Because of the presence of the factor (qj −qi)+
the trajectories generated this way can only move
from i to j if the committor value of j is higher
than that of i, i.e. they can only take productive
steps towards B. The stationary distribution of
the trajectories generated this way is simply the
equilibrium distribution conditioned on the re-
gion outside of A and B, i.e.
πC
i =
πi

j /∈A∪B πj
(7.28)
if i /∈A ∪B and πC
i = 0 otherwise. This can be
checked from the equivalent of (7.25), which in
the present case reads
πC
i

j̸=i
T R
ij = f R
i +

j̸=i
πC
j T R
ji
(i /∈A ∪B)
(7.29)
where
f R
i =

k/∈B

l∈B
πC
k T R
kl

p′
i
(7.30)
(7.29) is checked at the end of this chapter. The
form of the transition matrix in (7.27) and of the
stationary distribution in (7.28) imply, in partic-
ular, that the probability current of these loop-
erased reactive trajectories is
πC
i T R
ij ∝πiTij(qj −qi)+,
(7.31)
i.e. it is proportional to (F R
ij )+, where F R
ij is the
current of reactive trajectories deﬁned in (7.13).
Therefore, the loop-erased reactive trajectories

98
E. Vanden-Eijnden
carry the same amount of current as the reactive
trajectories themselves, except that they only take
productive steps from A to B, meaning in particu-
lar that they would concentrate mostly in the tube
shown in the right panel of Fig. 7.3 in the example
of Sect. 7.3. Note also that if we only care about
the sequence of states visited along these paths
(and not about the number of steps they stay in
one given state), instead of T R
ij we can generate
paths using
¯Tij =
Tij(qj −qi)+
N
k=1 Tik(qk −qi)+
(i /∈A ∪B).
(7.32)
Because ¯Tii = 0, the system moves at every step,
but it traces the same paths as the loop-erased re-
active trajectories (i.e. these paths would again
allow to identify the tubes in the right panel of
Fig. 7.3).
The processes deﬁned above by (7.22) and
(7.23) or (7.22) and (7.27) or (7.22) and (7.32)
can be used to perform statistical analysis of the
reactive trajectories or the productive portions
along them. For example, we can estimate what
is the distribution of length of these paths, what
is the highest energy point along them, what is
the probability to observe a given state along
them, etc. This analysis can be done globally, or
by stratifying the system into regions where the
committor function is between two given values
(for example to assess the width of tubes or their
multiplicity), etc.
Finally we note that other tools for the analy-
sis of the output of TPT involve ﬁnding the dy-
namical bottlenecks and representative dominant
pathways. These tools were originally introduced
in [8, 9] (see also [6]) and they are discussed in
Chap. 6 of this book.
Veriﬁcation of (7.25)
First notice that we can augment the sums over
j in each sides of (7.25) to all the states since
the added terms involving j = i are the same. Let
us then consider all three terms separately using
their explicit expressions for p′
i, T ′
ij, π′
i and f ′
i .
First
π′
i
N

j=1
T ′
ij = ρ−1
R (1 −qi)qiπi
N

j=1
Tijqj
qi
= ρ−1
R (1 −qi)qiπi
(7.33)
where we used (7.9) which is legitimate since i /∈
A ∪B. Second
f ′
i = ρ−1
R

k/∈B

l∈B
qk(1 −qk)πk
× Tklql
qk

j∈A πjTjiqi

j∈A

k/∈A πjTjkqk
= ρ−1
R

k/∈B

l∈B
(1 −qk)πkTkl
×

j∈A πjTjiqi

j∈A

k/∈A πjTjkqk
= ρ−1
R

j∈A
πjTjiqi
= ρ−1
R qiπi

j∈A
Tij
(7.34)
where we used ql = 1 if l ∈B to get the second
equality, the property that the ﬂux of reactive tra-
jectories out of A is the same as the one into B
(see (7.14)) to get the third, and the detailed bal-
ance condition (7.1) to get the fourth. Third
N

j=1
π′
jT ′
ji = ρ−1
R

j /∈A
(1 −qj)qjπj
Tjiqi
qj
= ρ−1
R

j /∈A
(1 −qj)πjTjiqi
= ρ−1
R qiπi

j /∈A
Tij(1 −qj).
(7.35)
If we add up (7.34) and (7.35), we obtain the right
hand-side of (7.25):
f ′
i +
N

j=1
π′
jT ′
ji
= ρ−1
R qiπi

j∈A
Tij +

j /∈A
Tij(1 −qj)


7
Transition Path Theory
99
= ρ−1
R qiπi
# N

j=1
Tij(1 −qj)
$
= ρ−1
R qiπi(1 −qi)
(7.36)
where we used qj = 0 if j ∈A to get the second
equality, and (7.9) and N
j=1 Tij = 1 to get the
third. This complete our veriﬁcation since (7.36)
is identical to the expression in (7.33) for the left
hand side of (7.25).
Veriﬁcation of (7.29)
We proceed similarly as in the veriﬁcation of
(7.25). First,
πC
i

j̸=i
T R
ij = C−1πi
N

j=1
Tij(qj −qi)+
(7.37)
where we deﬁned C = 
i /∈A∪B πi and we aug-
mented the sum since (qj −qi)+ = 0 anyway if
i = j. Second,
f R
i = C−1 
k/∈B

l∈B
πkTkl(ql −qk)+
×

j∈A πjTjiqi

j∈A

k/∈A πjTjkqk
= C−1 
k/∈B

l∈B
πkTkl(1 −qk)
×

j∈A πjTjiqi

j∈A

k/∈A πjTjkqk
= C−1 
j∈A
πjTjiqi
= C−1πi

j∈A
Tij(qi −qj)+
(7.38)
property that the ﬂux of reactive trajectories out
of A is the same as the one into B (see (7.14))
to get the third, and the detailed balance condi-
tion (7.1) as well as the property that qi = qi −
qj = (qi −qj)+ if j ∈A (since qj = 0 then) to
get the fourth. Third,

j̸=i
πC
j T R
ji = C−1 
j /∈A∪B
πjTji(qi −qj)+
= C−1 
j /∈A
πjTji(qi −qj)+
= C−1πi

j /∈A
Tij(qi −qj)+
(7.39)
where we used that πC
j = 0 if j ∈A ∪B in the
ﬁrst equality, the property that (qi −qj)+ = 0 if
j ∈B to augment the sum from j /∈A ∪B to
j /∈B and get the second equality, and the de-
tailed balance condition (7.1) to get the third. If
we subtract the sum of (7.38) and (7.39) to (7.37)
(i.e. if we subtract the right to the left hand-sides
of (7.29)), we therefore arrive at
C−1πi
#
j∈A
Tij(qi −qj)+ +

j /∈A
Tij(qi −qj)+
−
N

j=1
Tij(qj −qi)+
$
= C−1πi
N

j=1
Tij(qi −qj) = 0
(7.40)
where the last equality follows from N
j=1 Tij = 1
and (7.9). This concludes the veriﬁcation of
(7.29).
References
1. Berezhkovskii A, Hummer G, Szabo A (2009) Re-
active ﬂux and folding pathways in network mod-
els of coarse-grained protein dynamics. J Chem Phys
130(20):205,102. doi:10.1063/1.3139063
2. Bovier A, Eckhoff M, Gayrard V, Klein M (2000)
Metastability and small eigenvalues in Markov
chains. J Phys A 33(46):L447–L451
3. Bovier A, Eckhoff M, Gayrard V, Klein M (2002)
Metastability and low lying spectra in reversible
Markov chains. Commun Math Phys 228(2):219–
255
4. E W, Vanden-Eijnden E (2006) Towards a theory of
transition paths. J Stat Phys 123:503–523
5. E W, Vanden-Eijnden E (2010) Transition-path
theory and path-ﬁnding algorithms for the study
of rare events. Annu Rev Phys Chem 61:391–420.
http://www.hubmed.org/fulltext.cgi?uids=18999998.
doi:10.1146/annurev.physchem.040808.090412
6. Kirmizialtin S, Elber R (2011) Revisiting and com-
puting reaction coordinates with directional mileston-
ing. J Phys Chem A 115(23):6137

100
E. Vanden-Eijnden
7. Metzner P, Schütte C, Vanden-Eijnden E (2006) Il-
lustration of transition path theory on a collection of
simple examples. J Chem Phys 125:084,110
8. Metzner P, Schütte C, Vanden-Eijnden E (2009)
Transition path theory for Markov jump processes.
Multiscale Model Simul 7(3):1192–1219
9. Noé F, Schütte C, Vanden-Eijnden E, Reich L, Weikl
TR (2009) Constructing the equilibrium ensemble of
folding pathways from short off-equilibrium simu-
lations. Proc Natl Acad Sci USA 106(45):19,011–
19,016
10. Norris JR (2004) Markov chains. Cambridge series in
statistical and probabilistic mathematics. Cambridge
University Press, Cambridge
11. Schütte C, Huisinga W (2003) Biomolecular confor-
mations can be identiﬁed as metastable sets of molec-
ular dynamics. Handb Numer Anal 10:699–744
12. Vanden-Eijnden E (2006) Transition path theory. In:
Ferrario M, Ciccotti G, Binder K (eds) Computer sim-
ulations in condensed matter: from materials to chem-
ical biology, vol 1. Springer, Berlin, pp 439–478

8
Understanding Protein Folding Using
Markov State Models
Vijay S. Pande
8.1
Introduction
8.1.1
What Is Protein Folding?
Proteins play a central role in biology, acting as
catalysts, sources of molecular recognition, struc-
tural elements, among many other roles. But be-
fore they can carryout these functions, proteins
must ﬁrst assemble themselves, or “fold,” into
their biologically functional or “native” state. As
proteins are long chain molecules constituting of
tens to thousands of amino acids, the fact that pro-
teins fold to essentially a unique fold is a triumph
of natural selection, considering the enormous
amount of conformational entropy that folding
must overcome.
This leads to the natural question: how does
this process occur? Answering this question
would be a resolution to one of the greatest
outstanding questions in molecular biophysics.
Moreover, as self-assembly is at the heart of many
biological processes as well as the inspiration for
modern nanotechnology, understanding how pro-
teins fold could have an impact on many other
ﬁelds. Finally, how proteins fold has emerged as a
central part of the molecular mechanism of many
diseases, such as Alzheimer’s Disease or Hunt-
ington’s Disease, where it is believed that pro-
teins fold incorrectly—or misfold—as a critical
part of the disease pathology.
V.S. Pande (B)
Stanford University, Stanford, CA 94305, USA
e-mail: pande@stanford.edu
8.1.2
Why Simulate Protein Folding?
The biophysical and biomedical aspects of pro-
tein folding has highlighted many challenges in
understanding folding. First, we have found that
even small changes, such as a mutation of a single
amino acid, can lead to changes in how a protein
folds or whether it even folds at all.
Studying protein folding experimentally is
fraught with many challenges. In particular, we
wish to understand folding at the atomic scale.
This is particularly challenging for experimental
methods, given the stochastic and heterogeneous
nature of an ensemble of proteins folding in an
experiment.
Therefore, this challenge suggests an oppor-
tunity—simulating protein folding is a means to
gain new insight into this challenging problem.
Ideally, simulations can shed new insight into
how proteins fold, suggest new hypotheses, as
well as suggest new interpretations of experi-
ments. When tightly combined with experiments,
simulations have the hope to address the ultimate
question of how proteins fold. Below, we present
recent advances deriving from MSM approaches.
8.1.3
Challenges in Simulating Protein
Folding
There are three primary challenges in any sim-
ulation. First, is our model for interatomic in-
teractions (i.e. the “force ﬁeld”) sufﬁciently ac-
curate to predict the behavior of the system of
G.R. Bowman et al. (eds.), An Introduction to Markov State Models and Their Application to Long Timescale
Molecular Simulation, Advances in Experimental Medicine and Biology 797,
DOI 10.1007/978-94-007-7606-7_8, © Springer Science+Business Media Dordrecht 2014
101

102
V.S. Pande
interest. This has been a challenge for decades,
but recent work has suggested that current force
ﬁelds are sufﬁciently accurate for the quantitative
prediction of a wide-range of bimolecular prop-
erties, but within certain known limitations [1]
(see Fig. 8.2). Second, can one simulate the
timescales relevant for the phenomena of inter-
est? This has been a central challenge, since until
recently, experimentally relevant timescales (mi-
croseconds to milliseconds) could not be reached
with modern computer power using sufﬁciently
accurate, atomically detailed models. Finally, a
third challenge arises now that one can simulate
long timescales with sufﬁciently accurate mod-
els: how can one use the resulting sea of data to
gain some new insight? With the ﬁrst two chal-
lenges now within reach for small, fast folding
proteins, the third challenge of gaining new in-
sight has come into the forefront.
As we discuss below, MSMs can aid in both
the push for longer timescales as well as for
the development of means to gain new insight
from the resulting simulation data, even for more
conventional simulation methods. Moreover, we
will see that there are some potentially unique
challenges associated with the construction of
MSMs for protein folding. In particular, the un-
folded state of a protein is huge (many confor-
mations) and thus sampling it can be a challenge
for the construction of an MSM. Also, the poten-
tial exponential growth in the number of relevant
MSM microstates is also a potential challenge for
MSM construction of protein folding, as simple
arguments suggest that the number of structures
grows exponentially length of the chain.
8.1.4
Unanswered Questions to Which
MSMs Can Yield Insight
The end goal of a simulation of protein folding is
the elucidation of the mechanism by which a pro-
tein folds, i.e. what are the steps a protein takes
in assembling itself. There are several questions
associated with this, including
1. Does a protein fold in a single pathway
or in many parallel paths? This question is
both relevant for the basic biophysics of fold-
ing, but also potentially relevant for the bio-
chemistry of chaperonins, which catalyze the
folding of some protein substrates. If folding
occurs via a single, well-deﬁned path, then
catalysis could naturally take the form of the
recognition of some well-deﬁned transition
state in the folding process. If folding occurs
via multiple paths, then the resolution of the
mechanism of catalysis is considerably more
complex.
2. Are there intermediates along the way to
folding? A common paradigm in the protein
folding ﬁeld is that simple proteins fold in a
“two-state” manner, i.e. with just the unfolded
and folded states and no intermediates in-
between. Another way to rephrase this ques-
tion is to study the separation of timescales
between the slowest timescale (corresponding
to folding) and the next slowest timescale; is
this gap large compared to the folding time it-
self (for “two-state” system) or not? Simula-
tions can help probe this hypothesis in a way
that experiments cannot, due to their limita-
tions of signal to noise of accumulating inter-
mediates.
3. Is the protein folding mechanism robust?
The entire discussion of a protein folding
“mechanism” is hinged on the concept that
such details are robust to subtle changes in
the experimental environment (pH, tempera-
ture, co-solvents, etc.) as well as to variations
in force ﬁelds used to simulate folding. Mech-
anistic properties which are robust have the
hope to be comparable to experiment and free
of variations caused by either experimental or
computational variations. Moreover, the iden-
tiﬁcation of non-robust properties is itself an
important contribution as well. For example
folding rates are robust (Fig. 8.2).
8.2
MSMs Have Allowed the Direct
Simulation of Protein Folding
Given that the sampling at millisecond timescales
has been possible for only two years (see Fig. 8.1),
and analysis methodology is still immature, un-
ambiguous scientiﬁc results learned from atomic
simulation have thus far been modest. It will be

8
Understanding Protein Folding Using Markov State Models
103
Fig. 8.1 The folding times
accessible by simulation
have increased
exponentially over the past
decade. Shown are all
protein folding simulations
conducted using unbiased,
all-atom MD in empirical
force-ﬁelds reported in the
literature. Some folding
times for the same protein
differ, due to various
mutations. For lambda
marked with a (*), the
longest timescale seen in
that simulation, which was
not the folding time,
occurred on the order of
10 ms
Fig. 8.2 Comparison of
predicted and
experimentally measured
folding times. Central
dashed line is perfect
agreement, outside lines
are within one order of
magnitude of perfect
agreement. Given that
experimental folding times
can vary over more than an
order of magnitude given
different conditions
(temperature, salt, pH,
etc.), as well as
uncertainties associated
with measuring
experimental and simulated
folding times, an order of
magnitude agreement is
close to the upper limit of
accuracy one might expect
a major challenge in the next ﬁve years to turn
advances in sampling and accuracy into scientiﬁc
insight about how proteins fold.
Despite this relative immaturity, MSMs built
from atomistic simulation have already begun to
inﬂuence our view of protein folding. Detailed
comparisons to experiment have been performed
for MSMs of many speciﬁc proteins, including
villin [3], NTL9 [9], WW domains [6–8], lambda
repressor [5], and ACBP [10]. Universally ac-
cepted generalities amongst these speciﬁc protein
simulations have not yet emerged, though some
have been suggested, for instance that folding ki-
netics might be hub-like [4].
8.3
What Have We Learned?
With the ability to simulate proteins which fold
on long timescales (milliseconds) and for non-
trivial sizes (approaching 100 amino acids), MSM

104
V.S. Pande
Fig. 8.3 An MSM for the
dynamics of ACBP, an 86
residue protein that folds
on the 10 millisecond
timescale. The size and
long timescale (100 times
longer than can be reached
by traditional methods)
make this calculation a
landmark calculation in the
simulation of protein
folding. This diagram
highlights the complexity
of protein folding, showing
the multiple paths that a
protein can take to go from
unfolded (left) to folded
(right). The widths of the
arrows denote how much
ﬂux each path carries
simulations have the hope to shed new insight
into how do proteins fold. Below, we summarize
three key results that have been seen so far.
8.3.1
Proteins Fold via Parallel
Pathways Comprised of
Metastable States
One of the principal results we have seen is
that the mechanism of protein folding appears
to be comprised of the interconversion of many
metastable states. While an overall reaction may
be dominated by a single slow timescale, lead-
ing to apparent “two-state” folding, more micro-
scopically, folding looks much more detailed and
complex. Where does this complexity go when
examined experimentally? This complexity eas-
ily can be hidden when projected to a given reac-
tion coordinate.
For example, consider Fig. 8.3, which shows
an MSM for ACBP, which folds on the 10 mil-
lisecond timescale. While the MSM is complex,
comprised of numerous states, ACBP appears to
be only a three-state folder experimentally. How-
ever, when the MSM is projected to the fold reac-
tion coordinate, we see that the MSM simpliﬁes
to look very much like a three-state folder [10].
This also opens the door to folding simulations
helping predict new experiments which can more
easily reveal this complexity.

8
Understanding Protein Folding Using Markov State Models
105
8.3.2
These States Have Non-native
Structural Elements: Register
Shifts and Intramolecular
Amyloids
With the illumination of these metastable states,
one can interrogate the structural nature of these
states to gain new insight into how proteins fold.
One general property we ﬁnd is that these states
have an abundant degree of non-native structure.
In particular, there are three forms of non-native
structure which seems particularly common:
First, in beta sheet proteins, we often see states
with register shifts. In these cases, the natural turn
of a beta sheet is misplaced, leading to a differ-
ent beta sheet structure. As turns can be formed
in many places, sequences permit this reasonably
easily in many cases [2].
Second, we often see elongated helices. In this
case, a helix in a given intermediate state may be
longer than in the native state. This is also nat-
ural given the commonality of helical propensity
in amino acids, even in cases where the structure
is not a helix natively.
Finally, and perhaps most strikingly, we have
seen intramolecular amyloids,—cases where beta
sheets form in alpha-helical proteins. This forma-
tion is not unlike the formation of intermolecu-
lar amyloids, where proteins spontaneously form
beta sheet structures. Once a protein gets to be
sufﬁciently long, we argue that it can act in the
same fashion, intramolecularly.
8.3.3
The Connectivity of These States
Suggest that the Native-State is
a Kinetic Hub
Finally, how are these states “connected,” i.e.
that have non-zero conditional probabilities to go
from one state to another? Addressing this ques-
tion yields another aspect of the mechanism of
protein folding. In MSM studies of protein fold-
ing, the native state has appeared to be a kinetic
hub, i.e. there are many paths into the hub, com-
pared with other states. This particular topology
is common in other types of networks and sug-
gest that the intrinsic kinetics of protein folding
may have been evolutionarily optimized for ki-
netic properties including the kinetic network.
8.4
Next Challenges
MSM methods are sufﬁciently well developed
to pursue many exciting applications. However,
there is still a great deal of room for further
methodological improvements. Here, we list a
few of them.
1. Longer timescales. While MSMs have been
able to simulate protein folding on the 10 mil-
lisecond timescale, proteins of interest for un-
derstanding how proteins fold can fold up to
1000× longer. This could present new chal-
lenges for MSM sampling.
2. Larger proteins. Similarly, the largest pro-
teins studied so far are just under 100 amino
acids, while proteins of interest can be up to
2× to 3× longer in length. Larger proteins
may present new challenges for MSM build-
ing due to the potential exponential growth in
the conﬁgurational space involved.
3. Better state decomposition. One way to
handle these challenges is to determine bet-
ter methods for building states, allowing for
fewer states to be used and thus enabling the
ability to build more complex MSMs.
In the coming years, we expect that these chal-
lenges as well will be reached, yielding both new
insights into how proteins fold but also new MSM
methods which could be broadly applicable to
many other applications as well.
References
1. Beauchamp KA, Lin YS, Das R, Pande VS (2012)
Are protein force fields getting better? A system-
atic benchmark on 524 diverse NMR measurements.
J Chem Theory Comput 8(4):1409–1414
2. Beauchamp KA, McGibbon R, Lin YS, Pande VS
(2012) Simple few-state models reveal hidden com-
plexity in protein folding. Proc Natl Acad Sci USA
109(44):17,807–17,813
3. Bowman GR, Beauchamp KA, Boxer G, Pande VS
(2009) Progress and challenges in the automated con-
struction of Markov state models for full protein sys-
tems. J Chem Phys 131(12):124,101

106
V.S. Pande
4. Bowman GR, Pande VS (2010) Protein folded
states are kinetic hubs. Proc Natl Acad Sci USA
107(24):10,890–10,895
5. Bowman GR, Voelz VA, Pande VS (2011) Atomistic
folding simulations of the ﬁve-helix bundle protein
(685). J Am Chem Soc 133(4):664–667
6. Lane TJ, Bowman GR, Beauchamp K, Voelz VA,
Pande VS (2011) Markov state model reveals folding
and functional dynamics in ultra-long MD trajecto-
ries. J Am Chem Soc 133(45):18,413–18,419
7. Morcos F, Chatterjee S, McClendon CL, Brenner
PR, Lopez-Rendon R, Zintsmaster J, Ercsey-Ravasz
M, Sweet CR, Jacobson MP, Peng JW, Izaguirre JA
(2010) Modeling conformational ensembles of slow
functional motions in Pin1-WW. PLoS Comput Biol
6(12):e1001, 015
8. Noe F, Schutte C, Vanden-Eijnden E, Reich L, Weikl
TR (2009) Constructing the equilibrium ensemble of
folding pathways from short off-equilibrium simu-
lations. Proc Natl Acad Sci USA 106(45):19,011–
19,016
9. Voelz VA, Bowman GR, Beauchamp K, Pande VS
(2010) Molecular simulation of ab initio protein fold-
ing for a millisecond folder NTL9(1-39). J Am Chem
Soc 132(5):1526–1528
10. Voelz VA, Jager M, Yao S, Chen Y, Zhu L, Waldauer
SA, Bowman GR, Friedrichs M, Bakajin O, Lapidus
LJ, Weiss S, Pande VS (2012) Slow unfolded-state
structuring in Acyl-CoA binding protein folding re-
vealed by simulation and experiment. J Am Chem
Soc 134(30):12,565–12,577

9
Understanding Molecular Recognition
by Kinetic Network Models Constructed
from Molecular Dynamics Simulations
Xuhui Huang and Gianni De Fabritiis
9.1
Introduction
Molecular recognition is the process by which
macromolecules selectively interact. Virtually all
biological phenomena depend in some way on
speciﬁc molecular recognition, and thus an un-
derstanding of the process is of central impor-
tance in the study of biology. One critically im-
portant factor is that proteins exist as a statis-
tical ensemble of conformers, which are transi-
tory excited-states (having higher free energy) in
the protein in normal solvated conditions; how-
ever, these excited states can become preferred
upon binding, by shifting the equilibrium distri-
bution towards them. For example, a thermally-
accessible conformer that is 2 kBT higher in free
energy would exist in just 13 % of the molecules
in solution (according to Boltzmann probability),
yet upon binding could become the most favored
state.
There are two popular models aiming to ex-
plain the mechanisms of molecular recognition
based on a dual dynamic mechanism: “induced-
X. Huang (B)
Department of Chemistry, Division of Biomedical
Engineering, Center of Systems Biology and Human
Health, Institute for Advance Study, The Hong Kong
University of Science and Technology, Clear Water Bay,
Kowloon, Hong Kong
e-mail: xuhuihuang@ust.hk
G. De Fabritiis
Computational Biophysics Laboratory (GRIB-IMIM),
Universitat Pompeu Fabra, Barcelona Biomedical
Research Park (PRBB), C. Doctor Aiguader 88,
08003 Barcelona, Spain
Fig. 9.1 Conformational selection (R1–R2) v.s. induced
ﬁt (R3–R4). A schematic diagram for the two popular
binding mechanisms are displayed
ﬁt” (see reaction R4–R3 in Fig. 9.1) and “con-
formational selection” (see reaction R1–R2 in
Fig. 9.1). In the induced ﬁt model introduced by
Koshland [1], the apo protein only exists in the
unbound form and the interactions with the lig-
and induce the protein to reach the bound state.
In the conformational selection model [2–8], the
protein’s intrinsic dynamics may lead it to sam-
ple not only the unbound state but also the mi-
nor bound state. The ligand may then selectively
bind to the pre-existing bound conformation and
further increase its population. These two models
are not mutually exclusive and both mechanisms
may play a role as binding and folding are both
search processes over a rugged free energy sur-
face. For example, by binding to protein A, pro-
tein B may be stabilized in an excited conforma-
tion B* which can facilitate binding to other pro-
teins or ligands determining a cellular signaling
cascade.
Many molecular recognition processes involve
signiﬁcant conformational changes of one or both
binding partners. For example, Periplasmic Bind-
ing Proteins (PBPs) can undergo a large-scale
G.R. Bowman et al. (eds.), An Introduction to Markov State Models and Their Application to Long Timescale
Molecular Simulation, Advances in Experimental Medicine and Biology 797,
DOI 10.1007/978-94-007-7606-7_9, © Springer Science+Business Media Dordrecht 2014
107

108
X. Huang and G. De Fabritiis
hinge bending motion between two domains from
an open to a closed state upon substrate bind-
ing [9–12]. In these systems, the interplay be-
tween protein structure and dynamics upon sub-
strate binding may ultimately determine the bind-
ing mechanisms. Computer modeling has been
shown to be a valuable approach to comple-
ment experimental techniques to reveal the chem-
ical details of molecular recognition mechanisms.
Markov state models (MSMs) are kinetic net-
work models that hold great potential for under-
standing the mechanisms of molecular recogni-
tion events from computer simulations.
Although MSMs have been successfully ap-
plied to study conformational dynamics of one-
body systems such as a single protein or RNA
[13–17], constructing MSMs to investigate the
protein-ligand binding process is challenging be-
cause the ligand dynamics normally occurs on
two signiﬁcantly different timescales due to its
interactions with the protein. In particular, a lig-
and’s dynamics tend to be very slow when inter-
acting with a protein, but ligands typically diffuse
very quickly in solution. Therefore, the standard
methods for constructing MSMs through a uni-
form clustering at a single resolution are often
insufﬁcient for properly describing ligand bind-
ing. In this chapter, we will review some re-
cent progress on constructing MSMs for two-
body systems associated with large conforma-
tional changes where the ligand dynamics occurs
at a mixture of different resolutions.
9.2
Methodology
9.2.1
Projected Dynamics MSMs
The use of reaction coordinates to project the
high dimensional space of a molecular systems
into a small dimensional space has been used for
many years, especially in the setting of biased dy-
namics [18]. These biased dynamics schemes of-
fer the advantage of speeding up the global dy-
namics provided that the reaction coordinates is a
good one (no other degree of freedom is slower).
A good reaction coordinate also provides a way
to compute realistic energetic maps of the phe-
nomena.
A different approach is to use MSM to ana-
lyze a set of unbiased trajectories using a low
dimensional space to build the Markov model.
In this case, the reaction coordinate does not
have to be perfect as the dynamics is only pro-
jected into this space but the kinetics are well re-
covered provided that the runs are long enough.
This is the approach for instance of Ref. [19], in
which the binding pathway of a small molecule
is constructed by using a simple reaction coordi-
nate, the three-dimensional position of one of its
atoms.
9.2.2
Automated Methods for
Constructing MSMs for
One-Body Systems
In many studies, MSMs are constructed by group-
ing conformations into a number of metastable
states and then counting the transitions between
these states without projecting the dynamics onto
certain reaction coordinates. Automated methods
based on a splitting-and-lumping scheme have
been developed to construct MSMs for one-body
systems [20, 21]. Since these methods have been
discussed in detail in other chapters, we brieﬂy
review the general procedure here: ﬁrst, a ge-
ometric clustering is applied to divide the MD
conformations into a large number of small clus-
ters. This assumes that conformations within the
same cluster are kinetically similar because of
their structural similarity. Next, clusters that can
interconvert quickly are grouped together into
the same metastable state to construct an MSM
model. Finally, we can calculate thermodynamic
and kinetic properties of interest if the model is
Markovian.
9.2.3
Constructing MSMs for
Two-Body Systems
The above splitting-and-lumping algorithm for
one-body systems is often unideal for two-body
systems because the dynamics in these systems
occur at a mixture of different timescales due to
the interactions between the binding partners (see

9
Molecular Recognition
109
Fig. 9.2 The spatial positions visited by diffusion of Ben-
zamidine show clearly few metastable states, but only a
MSM analysis of the trajectories can recover the free en-
ergy proﬁle in three-dimension (here projected in two di-
mensions for clarity). These ﬁgures are adapted from [19]
Fig. 9.5). For example, the ligand diffuses freely
in the solvent in the un-bound state. While in
the bound state, the ligand forms stable interac-
tions with the protein and its dynamics is slow
and strongly correlated with the protein confor-
mation. A kinetically-relevant, uniform cluster-
ing at a single resolution as in the splitting-and-
lumping algorithm is often difﬁcult to achieve for
these two-body systems. If the resolution of the
clustering is too low, one cannot split enough in
the region where the ligand binds to the protein.
On the other hand, if the clustering resolution is
too high, there may not be a sufﬁcient number
of conformations in each cluster in the unbound
region (e.g. many clusters in the unbound region
end up containing a single conformation).
In order to address this issue, Silva et al. [22]
have performed independent clustering at two
different resolutions: a high-resolution clustering
(or larger number of clusters) on conformations
where the ligand binds to the protein and a low-
resolution clustering (or smaller number of clus-
ters) on conformations where the ligand diffuses
in solution. Kinetic lumping was then used within
each region to generate a set of metastable states.
Finally, the two sets of metastable states were
combined into a single MSM. In this algorithm, a
hard distance cut-off (5 Å between the ligand and
protein) is set to separate the fast and slow motion
regions for the ligand. This algorithm was shown
to be useful for dealing with protein-ligand bind-
ing systems, but it may introduce errors on the
boundary between the two regions due to the hard
distance separation.
9.3
Example Trypsin-Benzamidine
Binding
In this section, we use the molecular recogni-
tion process of trypsin-benzamine as an exem-
plary case of rigid binding. In Ref. [19], a ki-
netic model for the binding process of serine pro-
tease beta-trypsin inhibitor benzamidine was ob-
tained from extensive high-throughput all-atom
MD simulations using the ACEMD [23] soft-
ware on the GPUGRID distributed computing
network [24].
The analysis of 495 trajectories of free dif-
fusion of benzamidine around trypsin each of
100 ns of length lead to 187 trajectories (37 %)
which successfully recovered the bound pose in
the binding pocket with an RMSD compared to
the crystal structure of less than 2 Å. Several clus-
ters of benzamidine on the surface of trypsin can
be observed in Fig. 9.2, which indicates a rather
more complex pathway of binding than expected
instead of a of simple pathway directly from the
bulk. Some trajectories reach the bound crystal-
lographic pose just after 10–15 ns of simulation
while some reach the binding pocket only after
90 ns, but the majority of the trajectories do not
enter the binding site within 100 ns, as should

110
X. Huang and G. De Fabritiis
Fig. 9.3 Main binding modes for benzamidine on trypsin.
(a) The encounter of the ligand with the protein, (b) bind-
ing to two secondary binding sites, (c) exchange between
the secondary binding sites, (d) ﬁnal pathway of binding
into the catalytic site, which shows a curious rolling of the
ligand on the surface of the protein as the most probable
path. These ﬁgures are adapted from [19]
be expected in such a short time frame. Never-
theless, these simulations provide enough data to
carry out a detailed quantitative analysis of the
binding pathway.
An aggregate of 50 microseconds of trajectory
data have been used to construct a MSM of the
binding process of benzamidine to trypsin. The
MSM was built using the three-dimensional reac-
tion coordinate deﬁned by the coordinates of the
C7-atom of benzamidine (Fig. 9.2). A projection
in two dimensions of the energetic proﬁle is also
shown highlighting the secondary and the main
binding sites (Fig. 9.2). This surface is recovered
directly by solving the stationary distribution of
the MSM. Using a formula derived in [19], it is
possible to compute directly from the energetic
map the standard free energy of binding of the
ligand of approximately 5.2 kcal/mol compared
to an experimental one of 6.2 kcal/mol. A kinetic
model can also be built to measure on and off
rates which compare well with experiments [19].
An analysis of the slowest eigenvectors of the
MSM also allows the reconstruction of the bind-
ing pathway. Considering the slowest modes, we
see transitions from site S0 to S1 (Fig. 9.3a)
and collectively from sites S0/S1 to sites S3/S4
(Fig. 9.3b), corresponding to the diffusion of the
ligand from bulk to the ﬁrst structural contact
with the protein. At a slower timescale, there are
transitions between sites S2 and S3 (Fig. 9.3c).
Site S2 is a secondary binding pocket but not di-
rectly involved in the binding pathway. Finally,
the rate-limiting step of the process is the transi-
tion to the bound site S4 (Fig. 9.3d) and preferen-
tially coming from S3 interestingly rolling on the
surface of the protein.
The case of Trypsin-Benzamidine represents a
best case scenario where both the ligand and pro-
tein are relatively inﬂexible. While the method-
ology is not limited to this case, more ﬂexible
ligands would require substantially more time
to bind. Conformational changes in the protein
could also forbid binding all-together until cer-
tain loops open. All these factors imply that while
the current methodology is very promising, more
work is necessary in order to efﬁciently resolve
complex molecular recognition processes.

9
Molecular Recognition
111
9.4
Example LAO Protein Binding
In this section, we use the Lysine-, Arginine-,
Ornithine-binding (LAO) protein as an example
to demonstrate the power of MSMs for studying
protein-ligand binding mechanisms. The LAO
protein is one of the Periplasmic Binding Proteins
(PBPs), which is an attractive class of systems for
studying the mechanisms of molecular recogni-
tion events [25, 26]. With more than 100 crys-
tal structures available, different PBPs can bind
to a large variety of substrates including amino
acids, sugars, small peptides, etc. However, all
PBPs share similar tertiary structures containing
two globular domains connected by a hinge re-
gion with the binding site at the domain-domain
interface. They can undergo a large-scale hinge
bending motion from an open to a closed state
upon ligand binding (see Fig. 9.4). These features
make PBPs a good model system to investigate
the coupling between ligand binding and protein
conformational changes.
MD simulations have shown that the ligand
dynamics in the LAO system indeed displays a
mixture of different timescales. Silva et al. [22]
performed a set of sixty-ﬁve 200-ns MD simula-
tions of the ligand Arginine binding to the LAO
protein. From these simulations, they calculated
the ligand rotational autocorrelation functions for
three conformational states: unbound state, en-
counter complex, and bound state. As shown in
Fig. 9.5, the ligand can rotate quickly when it un-
dergoes free diffusion in the solvent, but the lig-
and rotation is largely restrained when it binds
to the protein. Therefore, when they later con-
structed MSMs from these MD simulations, they
performed structural clustering at two different
resolutions in the “splitting” stage of the splitting-
and-lumping algorithm. In the low-resolution (or
fewer clusters) region, the dynamics of the ligand
is fast, so that only the center of mass motion of
the ligand is considered. In the high-resolution (or
more clusters) region, the dynamics of the ligand
is constrained due to its strong interactions with
the protein, so that motions of all ligand heavy
atoms are considered. Finally, they performed ki-
netic lumping at each region to generate a set of
Fig. 9.4 The
Lysine-,
Arginine-,
Ornithine-binding
(LAO) Protein undergoes large domain displacement from
the open (left, PDB id: 2LAO) to the closed (right, PDB
id: 1LAF) state upon the binding of Arginine (sticks). This
ﬁgure is reproduced from [22]
metastable states, and combine them into a sin-
gle 54-state MSM. This MSM is shown to repro-
duce the structure of the bound state, experimen-
tal binding free energy, and association rate with
reasonable accuracy [22].
MSMs [22] suggest a two-step binding mech-
anism for the LAO protein with a number of in-
termediate states and parallel binding pathways
(see the ten most probable binding pathways pre-
dicted by the MSM as shown in Fig. 9.6). In the
ﬁrst step, the ligand binds to the protein to form
an encounter complex. In the encounter com-
plex state, the protein is partially closed and only
weakly interacts with the ligand. RMSD analy-
sis shows that the structure of individual protein
domains in the encounter complex is very sim-
ilar to those in the unbound and bound X-ray
structures (with RMSD mostly <2 Å). Therefore
the conformational change from either unbound
or bound state to the encounter complex confor-
mation may be achieved through domain rigid
body rotations. All major pathways pass through
the encounter complex state, which serves as a
gatekeeper for binding. This process is dominated
by conformational selection. In the second step,
the protein-ligand interactions induce conforma-
tional changes to reach the bound state.

112
X. Huang and G. De Fabritiis
Fig. 9.5 A ﬁgure demonstrating the challenge for con-
structing kinetic network models for two-body systems
where the ligand dynamics occur at a mixture of differ-
ent timescales as shown by the rotational autocorrelation
functions of the ligand in the LAO protein system. The de-
cay of ligand rotational autocorrelation functions is much
faster in the unbound state (inside hexagon in right panel
and bottom of the left panel) than the encounter com-
plex (inside dashed circle in right panel and middle of
the left panel) and the bound state (in binding pocket in
right panel and top of the left panel). On the right panel,
a schematic ﬁgure illustrates the ligand positions in differ-
ent states. This ﬁgure is reproduced from [22]
Fig. 9.6 Ten highest ﬂux
binding pathways from the
unbound states (left) to the
bound state (right) of the
LAO protein are
superimposed. The arrow
sizes are proportional to
the ﬂux. State numbers and
their equilibrium
population calculated from
a 54-state Markov State
Model are also shown. This
ﬁgure is reproduced
from [22]
9.5
Discussion and Future
Perspective
One major advantage of MSMs is that they can
dissect atomistic details of molecular recognition.
For instance, Silva et al. [22] have observed roles
for both conformational selection and induced ﬁt
in LAO binding, as well as an encounter com-
plex intermediate state. Recent NMR studies by
Tang et al. [27] have also suggested the duality
of conformational selection and induced ﬁt for
the binding of PBPs. Using NMR with param-

9
Molecular Recognition
113
agnetic relaxation enhancement (PRE), they have
identiﬁed a minor (5 %) partially closed form in
equilibrium with the major open form for another
PDB, the maltose-binding protein [27]. Based on
these observations, they proposed that this par-
tially closed state may be available for the bind-
ing of the ligand through conformational selec-
tion and this binding could then facilitate the tran-
sition to the bound state via the induced ﬁt mech-
anism. This model was proposed mainly based on
experiments in the absence of the ligand. MSMs
have the advantage that they can directly ob-
serve the interplay between protein conforma-
tional changes and ligand dynamics from simula-
tions of ligand binding at atomic resolution. The
other main advantage of MSMs is that they can
help bridge the timescale gap between the experi-
ments and atomistic MD simulations. For many
two-body systems such as protein-ligand bind-
ing and protein-protein interactions, the associa-
tion timescales (millisecond or longer) would be
too long to be reached by straightforward atom-
istic MD simulations. MSMs built from many
independent microsecond simulations, however,
have already proven capable of capturing protein-
folding events that occur at tens of milliseconds
timescales [16]. They can thus likely be applied to
study slow protein-ligand binding events too. For
the LAO protein discussed above, the timescale is
fast enough to observe multiple binding and un-
binding events within our sixty-ﬁve 200-ns simu-
lations. Even for this case, it would still be chal-
lenging to extract a complete picture of the bind-
ing mechanism from a single long simulation, be-
cause one would need this single simulation to be
at least tens of microseconds long so that many
binding/unbinding transitions occur (the average
transition time from the unbound to the bound
state is 2 microseconds). While such a trajectory
could be run, scaling to study even slower events
(i.e. at millisecond timescales) would not be pos-
sible.
In the future, new algorithms are needed for
better integrating different timescales of ligand
dynamics when constructing the kinetic network
models. Silva et al. [22] used a hard distance cut-
off (5 Å between the ligand and protein) to sep-
arate the slow and fast motion regions for the
ligand, and then performed independent kinetic
lumping for each before recombining the two sets
of metastable states into a single MSM. As we
discussed above, this algorithm may introduce er-
rors on the boundary between the two regions due
to this sharp distance cut-off. One potential way
to avoid this problem is to directly integrate the
geometric “splitting” and kinetic “lumping” steps
during model construction. This may require the
consideration of both the structural similarity
and the kinetic connectivity when performing
the clustering. Moreover, kinetic network models
containing nodes at transition states could also
greatly aid in understanding the mechanisms of
molecular recognition events, even though these
models are no longer Markovian. They are par-
ticularly useful for systems where sufﬁcient sam-
pling can already be achieved by straightforward
MD simulations.
References
1. Koshland DE (1958) Application of a theory of en-
zyme speciﬁcity to protein synthesis. Proc Natl Acad
Sci USA 44(2):98–104
2. Kumar S, Ma B, Tsai CJ, Sinha N, Nussinov R (2000)
Folding and binding cascades: dynamic landscapes
and population shifts. Protein Sci 9(1):10–19
3. Ma B, Kumar S, Tsai CJ, Nussinov R (1999) Fold-
ing funnels and binding mechanisms. Protein Eng
12(9):713–720
4. Ma B, Shatsky M, Wolfson HJ, Nussinov R (2002)
Multiple diverse ligands binding at a single protein
site: a matter of pre-existing populations. Protein Sci
11(2):184–197
5. Tsai CJ, Kumar S, Ma B, Nussinov R (1999) Folding
funnels, binding funnels, and protein function. Pro-
tein Sci 8(6):1181–1190
6. Tsai CJ, Ma B, Nussinov R (1999) Folding and bind-
ing cascades: shifts in energy landscapes. Proc Natl
Acad Sci USA 96(18):9970–9972
7. Arora K, Brooks CL (2007) Large-scale allosteric
conformational transitions of adenylate kinase appear
to involve a population-shift mechanism. Proc Natl
Acad Sci USA 104(47):18496–18501
8. Bahar I, Chennubhotla C, Tobi D (2007) Intrinsic
dynamics of enzymes in the unbound state and re-
lation to allosteric regulation. Curr Opin Struct Biol
17(6):633–640
9. Oh BH, Ames GF, Kim SH (1994) Structural ba-
sis for multiple ligand speciﬁcity of the periplasmic
lysine-, arginine-, ornithine-binding protein. J Biol
Chem 269(42):26323–26330

114
X. Huang and G. De Fabritiis
10. Ames GF (1986) Bacterial periplasmic transport sys-
tems: structure, mechanism, and evolution. Annu Rev
Biochem 55:397–425
11. Pang A, Arinaminpathy Y, Sansom MS, Biggin
PC (2005) Comparative molecular dynamics-similar
folds and similar motions? Proteins 61(4):809–822
12. Stockner T, Vogel H, Tieleman D (2005) A salt-
bridge motif involved in ligand binding and large-
scale domain motions of the maltose-binding protein.
Biophys J 89(5):3362–3371
13. Buchete NV, Hummer G (2008) Coarse master equa-
tions for peptide folding dynamics. J Phys Chem B
112(19):6057–6069
14. Noe F, Schutte C, Vanden-Eijnden E, Reich L, Weikl
TR (2009) Constructing the equilibrium ensemble
of folding pathways from short off-equilibrium sim-
ulations. Proc Natl Acad Sci USA 106(45):19011–
19016
15. Huang X, Yao Y, Bowman GR, Sun J, Guibas LJ,
Carlsson G, Pande VS (2010) Constructing multi-
resolution markov state models (msms) to elucidate
RNA hairpin folding mechanisms. Pac Symp Bio-
comput, 228–239
16. Voelz VA, Bowman GR, Beauchamp K, Pande VS.
Molecular simulation of ab initio protein folding for
a millisecond folder NTL9(1-39). J Am Chem Soc
132(5):1526–1528
17. Morcos F, Chatterjee S, McClendon CL, Brenner
PR, Lopez-Rendon R, Zintsmaster J, Ercsey-Ravasz
M, Sweet CR, Jacobson MP, Peng JW, Izaguirre JA
(2010) Modeling conformational ensembles of slow
functional motions in Pin1-WW. PLoS Comput Biol
6(12):e1001015
18. Buch I, Sadiq SK, De Fabritiis G (2011) Opti-
mized potential of mean force calculations for stan-
dard binding free energies. J Chem Theory Comput
7(6):1765–1772
19. Buch I, Giorgino T, De Fabritiis G (2011) Complete
reconstruction of an enzyme-inhibitor binding pro-
cess by molecular dynamics simulations. Proc Natl
Acad Sci USA 108(25):10184–10189
20. Bowman GR, Huang X, Pande VS (2009) Using
generalized ensemble simulations and Markov state
models to identify conformational states. Methods
49(2):197–201
21. Huang X, Bowman GR, Bacallado S, Pande VS
(2009) Rapid equilibrium sampling initiated from
nonequilibrium data. Proc Natl Acad Sci USA
106(47):19765–19769
22. Oh BH, Pandit J, Kang CH, Nikaido K, Gokcen S,
Ames GF, Kim SH (1993) Three-dimensional struc-
tures of the periplasmic lysine/arginine/ornithine-
binding protein with and without a ligand. J Biol
Chem 268(15):11348–11355
23. Harvey MJ, Giupponi G, De Fabritiis G (2009)
ACEMD: accelerating biomolecular dynamics in the
microsecond time scale. J Chem Theory Comput
5(6):1632–1639
24. Buch I, Harvey MJ, Giorgino T, Anderson DP, De
Fabritiis G (2010) High-throughput all-atom molec-
ular dynamics simulations using distributed comput-
ing. J Chem Inf Model 50(3):397–403
25. Bucher D, Grant BJ, Markwick PR, McCammon JA
(2011) Accessing a hidden conformation of the mal-
tose binding protein using accelerated molecular dy-
namics. PLoS Comput Biol 7(4):e1002034
26. Quiocho FA, Ledvina PS (1996) Atomic structure and
speciﬁcity of bacterial periplasmic receptors for ac-
tive transport and chemotaxis: variation of common
themes. Mol Microbiol 20(1):17–25
27. Tang C, Schwieters CD, Clore GM (2007) Open-
to-closed transition in apo maltose-binding pro-
tein
observed
by
paramagnetic
NMR.
Nature
449(7165):1078–1082

10
Markov State and Diffusive Stochastic
Models in Electron Spin Resonance
Deniz Sezer and Benoît Roux
10.1
Introduction
Continuous-wave electron spin resonance (cw-
ESR) experiments combined with site-directed
spin labeling (SDSL) techniques are a rich source
of information about the local structure and
dynamics of biomolecules in native-like environ-
ments [6, 10, 16]. Partly owing to its high sensi-
tivity and the relative ease with which biomole-
cules can be systematically labeled at almost any
desired location (e.g., by introducing cysteine
mutations in proteins), ESR plays an increasingly
important role in studies of proteins [26], nucleic
acids [27], and membrane systems [37]. An ex-
citing aspect of cw-ESR is the extreme sensitiv-
ity of the technique to the details of the dynam-
ical processes occurring at the molecular level.
Cw-ESR spectra are sensitive to dynamics over
a broad range of time scales, from hundreds of
picoseconds to tens of nanoseconds, depending
on the strength of the constant magnetic ﬁeld or
the corresponding microwave frequency. While
the slower end of this temporal range is routinely
covered by lower ﬁelds/frequencies, like the most
commonly used X-band, the faster end has re-
cently become accessible as a result of vigorous
D. Sezer (B)
Faculty of Engineering and Natural Sciences, Sabancı
University, Istanbul, Turkey
e-mail: dsezer@sabanciuniv.edu
B. Roux
Department of Biochemistry and Molecular Biology,
The University of Chicago, Chicago, USA
e-mail: roux@uchicago.edu
developments in high-ﬁeld/high-frequency ESR
[5, 13, 20]. However, despite the great progress
with the experimental cw-ESR and SDSL tech-
niques, the development of a comprehensive set
of theoretical methods able to account quanti-
tatively for all the spectral features in terms of
atomic models remains challenging.
A qualitative interpretation of cw-ESR spec-
tra is relatively straightforward when the over-
all purpose of an experimental investigation is
to delineate broad structural features of a pro-
tein. For instance, secondary structural elements
can be mapped out by systematically scanning
the protein by SDSL, and comparing the result-
ing spectra. Information about the overall posi-
tion of the subunits of a membrane protein rela-
tive to the lipid bilayer can also be obtained with
the aid of additional water- or membrane-soluble
paramagnetic agents. The situation is very differ-
ent when detailed structural and dynamic infor-
mation about a system is sought, and the spe-
ciﬁc features of the spectral line shapes need
to be properly interpreted. In this case, under-
standing the link between the conformational dy-
namics of the spin label and the observed spec-
tra becomes of paramount importance. Unam-
biguously inferring the underlying molecular pro-
cesses from spectra is difﬁcult, however, even
when using high-ﬁeld/high-frequency ESR. The
task becomes particularly challenging for spin-
labeled biomolecules because they undergo com-
plex motions occurring over a multitude of over-
lapping time scales. The internal dynamics of the
spectroscopic reporter, i.e., the spin label, adds
G.R. Bowman et al. (eds.), An Introduction to Markov State Models and Their Application to Long Timescale
Molecular Simulation, Advances in Experimental Medicine and Biology 797,
DOI 10.1007/978-94-007-7606-7_10, © Springer Science+Business Media Dordrecht 2014
115

116
D. Sezer and B. Roux
another layer of complexity that must also be ac-
counted for.
Currently, the most established theoretical/
computational method for quantifying cw-ESR
spectra is based on the stochastic Liouville equa-
tion (SLE). Spectral line shapes are simulated by
generating a matrix representation for the Liou-
ville operator corresponding to the relevant spin
dynamics coupled to the hypothesized stochastic
processes [19, 46]. Among the various stochastic
models, most sophisticated are the MOMD (mi-
croscopic order macroscopic disorder) [38] and
SRLS (slowly relaxing local structure) [40, 41]
models, in which the dynamics of the spin la-
bel relative to the magnetic ﬁelds applied in the
laboratory is described as a collection of nested
rotational transformations evolving in a diffusive
manner (see Sect. 10.2.2). The necessary matrix
diagonalization and simulation of cw-ESR spec-
tra is done in a very efﬁcient way by the SLE
numerical solver—a suite of programs for sim-
ulating and ﬁtting slow-motional ESR spectra—
developed in the laboratory of Jack Freed [7]. The
outcome of an SLE analysis is typically a small
set of phenomenological parameters associated
with the rate and the range of motion of the spin
label in some local mean-ﬁeld potential. In prac-
tice it is necessary to keep the internal structure
of the phenomenological stochastic model rela-
tively simple to maintain the size of the problems
within approachable numerical limits for the SLE
solver. To avoid this issue, an alternative route is
to bypass the construction of SLE altogether and
simulate cw-ESR spectra directly from stochastic
trajectories [14, 15, 17, 44, 52, 55]. The most im-
portant limitation of such phenomenological ap-
proaches, which thwarts developing insight about
the molecular factors reported by the details of
the spectra, remains the difﬁculty to understand
the correspondence between the ﬁtted mean-ﬁeld
parameters of the stochastic model and the under-
lying atomistic motions.
In this regard, all-atom molecular dynamics
(MD) simulations with explicit solvent offer, per-
haps, one of the most promising approaches for
calculating cw-ESR spectra directly without ex-
tra assumptions about phenomenological mod-
els [4, 12, 30, 53]. In principle, MD simula-
tions provide a “virtual route” to unambiguously
link the atomistic dynamics to the experimen-
tally observed cw-ESR spectra. Such an approach
is, after all, routinely used to analyze and in-
terpret results from nuclear magnetic resonance
(NMR) [34]. However, a straightforward all-atom
MD strategy for calculating ESR spectra remains
challenging, even with current computational re-
sources [47, 48]. The reason for this is both
simple and complex. In NMR, the spin of the
nuclei are only weakly coupled to their surround-
ing, therefore most magnetic relaxation coefﬁ-
cients can be calculated accurately from nanosec-
ond trajectories using Redﬁeld theory [43], which
follows from time-dependent perturbation theory
in quantum mechanics carried to second order.
In contrast, the coupling of an electron spin to
its environment is almost three orders of magni-
tude stronger than the coupling of nuclear spins.
As a result, in most ESR experiments with spin-
labeled macromolecules a perturbative treatment
is not applicable. For this reason, the quantal de-
grees of freedom must be propagated for hun-
dreds of nanoseconds to calculate spectra with a
reasonable resolution of detail. Paradoxically, all
issues of statistical convergence are not immedi-
ately resolved even when one trajectory is sufﬁ-
ciently long to allow the spin label to explore all
accessible conﬁgurations and lose its correlation.
The problem is that a large number of indepen-
dent “samples” are necessary for a reliable esti-
mate of the ESR spectrum. To clarify this point,
it is useful to consider that the effective error of
an ensemble average normally goes as σ 2/
√
N,
where N is the number of independent samples
and σ 2 is the intrinsic variance of the signal.
When the averaging process is carried out from
a trajectory of total length T the number of inde-
pendent samples is typically understood as T /τc,
where τc is the correlation time. In the case of
biomolecular ESR, τc can be on the order of tens
or hundreds of nanoseconds, which does not cor-
respond to exceedingly long trajectories with cur-
rent standards. However, due to the strong cou-
pling of the electron spin to the orientation of
the nitroxide label, the effective σ 2 of cw-ESR
spectra in the presence of such slow motions is
very large. As a consequence, small changes in
one classical trajectory of length T can lead to

10
Markov State and Diffusive Stochastic Models in Electron Spin Resonance
117
considerable variations in the resulting spectrum.
For this reason, one needs a very large N to get a
reliable spectrum. If the averaging process is car-
ried out from an ensemble, then a large number
of sample trajectories is required. Alternatively,
if the averaging process is carried out from a sin-
gle trajectory then the latter has to be much longer
than a single correlation time.
With the aim of establishing a ﬂexible compu-
tational formalism for simulating cw-ESR spec-
tra, we have developed a framework that cir-
cumvents these difﬁculties. Relevant informa-
tion about the spin-label dynamics is ﬁrst ex-
tracted from (relatively short) MD trajectories
and mapped onto a Markov state model (MSM).
Extremely long and computationally inexpen-
sive stochastic state-hoping trajectories are then
generated, while global tumbling of the macro-
molecule can be incorporated via a rotational dif-
fusion model. Finally, the quantal degrees of free-
dom can be propagated along these trajectories
to calculate cw-ESR spectra accurately [47–49].
The feasibility of this approach was demonstrated
in Ref. [50], where it was successfully applied to
the simulation of multifrequency spectra of spin-
labeled T4 Lysozyme [56]. In this chapter, we re-
view the main theoretical and practical elements
of the method.
10.2
General Overview
Before discussing the details of the approach, we
start by giving a quick overview of the problem.
To this end, we ﬁrst introduce the quantum me-
chanical aspect of the problem (Sect. 10.2.1),
then look at various models of the classical
molecular motion (Sect. 10.2.2), and ﬁnally com-
bine the two by illustrating the effect of molecular
tumbling on cw-ESR spectra (Sect. 10.2.3). This
structure reﬂects the overall organization of the
chapter: Sect. 10.3 is concerned with the MSM
modeling of the classical dynamics of a protein-
attached spin label, Sect. 10.4 presents the details
of the quantal spin dynamics, and Sect. 10.5 dis-
cusses the combination of the two aspects. Sim-
ulations of multifrequency cw-ESR spectra of
spin-labeled T4 Lysozyme (Sect. 10.5.3) demon-
strate the power of this novel methodology in
practical applications.
10.2.1 The Nitroxide Spin Hamiltonian
Cw-ESR spectroscopy consists in measuring the
transverse magnetization from a bulk system in
which nitroxide spin labels have been introduced.
A nitroxide has an unpaired electron of spin S =
1/2 and a nitrogen nucleus with spin I = 1 (for
14N) or I = 1/2 (for 15N). The spin Hamiltonian
of the nitroxide spin label, accounting for the in-
teractions of the electron and nuclear spins, is
ˆH(t) = |γe|
	
B · G(t) · ˆS + ˆI · A(t) · ˆS

(10.1)
in units of angular frequency. (Bold letters are
used to denote vectors and matrices in phys-
ical space, Hilbert space operators are indi-
cated with a caret.) Here, γe = −1.76086 ×
10−2 radns−1 G−1 is the electron gyromagnetic
ratio, ˆS and ˆI are the electron and nuclear spin
operators, A is the hyperﬁne tensor (expressed in
units of magnetic ﬁeld) and
G(t) ≡g(t)/ge
(10.2)
is the electronic g tensor, g, divided by the free
electron g-factor, ge = 2.0023193. The electron
Zeeman interaction and the electron-nucleus hy-
perﬁne interaction are explicitly accounted for in
the Hamiltonian (10.1). In contrast, the nuclear
Zeeman and quadrupolar (in the case of I = 1)
interactions have been neglected.
To a very good approximation, the coupling
tensors G and A are diagonal in the same nitro-
xide-ﬁxed coordinate frame N. The standard
choice of axes in N with respect to the nitrox-
ide structure is shown in Fig. 10.1. Typical mag-
netic tensor values for nitroxide spin labels on
biomolecules are
gN = diag(2.008,2.006,2.0022),
AN = diag(5.0,5.0,37.0) Gauss.
(10.3)
In this picture, the explicit time dependence of
the magnetic tensors in (10.1) is due to the clas-
sical rotational dynamics of the coordinate sys-
tem N with respect to the stationary laboratory

118
D. Sezer and B. Roux
Fig. 10.1 The direction of the principle axes in the co-
ordinate system N attached to the nitroxide ring. The x
direction is along the N−O bond, the z direction is per-
pendicular to the ring, and the y direction is such that a
right-handed system of axes is formed
frame L, in which the constant magnetic ﬁeld B =
(0,0,B) is applied.1 Since the spins are quan-
tized along B all the vector and tensor compo-
nents in the Hamiltonian are with respect to L.
The dynamics that cw-ESR experiments aim
to probe leaves its mark on the spin dynam-
ics described above by modulating the compo-
nents GL
ij and AL
ij (i,j = x,y,z) of the Zeeman
and hyperﬁne magnetic tensors in the laboratory
frame. Since these tensors remain unchanged in
a coordinate system ﬁxed on the nitroxide (cf.
Fig. 10.1), the molecular motion is encoded in
the form of rotation matrices RLN(t) that trans-
form the tensor components from the N to the L
system of axes according to
GL
ij(t) =

k=x,y,z
RLN
ik (t)GN
kkRLN
jk (t),
AL
ij(t) =

k
RLN
ik (t)AN
kkRLN
jk (t).
(10.4)
The time dependence of the transformation ma-
trices is due to the dynamics of the nitroxide,
as well as the global and internal dynamics of
1Although not rigorously correct, the assumption that
the classical dynamics is completely uninﬂuenced by the
states of the quantum system is typically an excellent ap-
proximation for room-temperature magnetic resonance.
One minor inconvenience is that the equilibrium popu-
lation of the states of the spin system corresponds to an
inﬁnite temperature. This, however, affects only the longi-
tudinal magnetization but not the transverse magnetization
whose evolution is calculated.
the molecule to which the spin label is cova-
lently attached. Different motional models as-
sumed for these dynamical modes result in dif-
ferent sequences RLN(t), as discussed next.
10.2.2 Stochastic Models of Molecular
Motion
The transformation from the nitroxide-ﬁxed to
the laboratory system of coordinate axes can
be achieved as a sequence of nested rotational
transformations. For example, the MOMD model
mentioned in Sect. 10.1 can be illustrated sche-
matically as
L
powder
−−−−→M
restricted
diffusion
−−−−−→S ﬁxed
−−→N.
(10.5)
Here S refers to the system of coordinate axes
ﬁxed on the spin label and M to the coordinate
system attached to the macromolecule (e.g., pro-
tein) to which the spin label is covalently bonded.
The model (10.5) represents the dynamics of the
spin label with respect to the protein as restricted
rotational diffusion. The coordinate system S at-
tached to the spin label is deﬁned by the princi-
ple axes of its diffusion tensor. In general, these
axes do not need to overlap with the principle
axes of the magnetic tensors, deﬁning the coordi-
nate frame N. The model (10.5) can therefore ac-
count for the possibility that the nitroxide frame
N has a ﬁxed, time-independent orientation with
respect to S. In addition to the spin-label dynam-
ics relative to the protein, in (10.5) the protein is
allowed to be randomly orientated with respect to
the laboratory frame. This would be the case for
a large, relatively immobilized macromolecule in
solution or a frozen (powder) sample.2
Clearly, more complex motional models can
be constructed by combining independent or cou-
pled nested rotations. Very attractive, however, is
2A time-dependent or constant rotation matrix is associ-
ated with each successive transformation in a motional
model like (10.5). The matrix for the net transformation
from L to N, to be employed in (10.4), is obtained as
the product of the successive rotation matrices: RLN(t) =
RLMRMS(t)RSN.

10
Markov State and Diffusive Stochastic Models in Electron Spin Resonance
119
the alternative to forgo completely any stochastic
model, and use the time-dependent dynamics of
N relative to L extracted directly from atomistic
MD simulations. This approach has been pursued
by many [4, 8, 12, 22, 30, 53], following the
pioneering work of Steinhoff and Hubbell from
more than a decade and a half ago [52]. In this
approach, the time-dependent rotation matrices
RLN(t) can be obtained directly from the snap-
shots of the classical MD simulations, which can
be represented as
L
MD
simulation
−−−−−→N.
(10.6)
Although MD simulations of a spin-labeled
macromolecule are expected to offer insight into
the detailed dynamics of the spin label and its en-
vironment, there are important shortcomings to
such an approach. In particular, extremely long
trajectories are needed to sample the global tum-
bling of the macromolecule in solution. Without
proper sampling of this relatively simple motion,
the MD trajectories will not reﬂect the experi-
mental situation realistically and cw-ESR spec-
tra simulated from them will fail to reproduce the
observed spectra. Thus, for the quantitative com-
parison of simulated and recorded spectra, it be-
comes necessary to be able to directly account
for rotational diffusion by relying on a stochas-
tic model. This can be achieved by modeling the
dynamics of the coordinate frame N with respect
to the macromolecule with atomistic MD simu-
lations, while generating the dynamics of M rela-
tive to L using a stochastic model of isotropic or
anisotropic rotational diffusion:3
L
rotational
diffusion
−−−−−→M
MD
trajectories
−−−−−−→N.
(10.7)
3Splitting the molecular motion according to (10.7) as-
sumes that the overall molecular tumbling and the motion
of the spin label with respect to the global molecular frame
are independent [23]. Clearly, this approximation may
break in some cases, e.g., when an internal structural re-
arrangement changes the overall structure—and hence the
rotational diffusion tensor—of the whole molecule. Nev-
ertheless, in many instances with spin-labeled biomacro-
molecules the approximation of decoupled global and in-
ternal motions is well justiﬁed.
Cw-ESR spectra simulated from such a combi-
nation of stochastic rotational diffusion and MD
trajectories were presented in Refs. [47, 49]. Es-
sentially the same approach has been used by De-
Sensi et al. [12].
Even as MD simulations become more and
more routine, the demand on the number and du-
ration of the MD trajectories may become rapidly
wasteful and inefﬁcient when the purpose is to
insert these into the model (10.7). In particular,
the spin dynamics must be propagated over mul-
tiple molecular correlation times to explore all
the possible orientations and yield a converged
ESR spectrum. For this reason, it is important
to develop alternative stochastic models able to
provide a realistic “mimic” of the long-time dy-
namics of the spin label relative to the protein.
When this dynamics is dominated by rotameric
isomerization, the intermittent nature of the tran-
sitions between the various rotamers suggests that
a Markov state model (MSM) shall provide an
ideal framework to encode the internal spin-label
dynamics available from MD simulations. Once
its parameters have been properly estimated, the
so-constructed MSM allows for the generation of
computationally inexpensive and arbitrarily long
stochastic trajectories. Combining the MSM dy-
namics with a diffusive model of the tumbling of
the protein, cw-ESR spectra can be simulated in
time domain according to the scheme:
L
rotational
diffusion
−−−−−→M
MSM
trajectories
−−−−−−→N.
(10.8)
Such simulations were performed in Refs. [49,
50].
10.2.3 Isotropic and Anisotropic
Rotational Diffusion
To illustrate the impact of rotational diffusion on
cw-ESR spectra, we consider the motional model
L
rotational
diffusion
−−−−−→M ﬁxed
−−→N,
(10.9)
which describes a spin label rigidly tethered to
a biological macromolecule tumbling in solution.
For concreteness, let us take a double-helical B-
DNA consisting of 20 base pairs (Fig. 10.2, left),

120
D. Sezer and B. Roux
Fig. 10.2 Left: Double-helical B-DNA containing 20
base pairs and labeled with a single nitroxide spin label.
Right: Nitroxide spin label (balls and thin sticks) cova-
lently attached to the cytosine nucleotide (thick sticks) of
DNA or RNA [9]
one cytosine base of which is labeled with a ni-
troxide spin label (Fig. 10.2, right) [9]. From
the labeling geometry, the z axis of the nitroxide
frame (deﬁned in Fig. 10.1) is seen to be perpen-
dicular to the plane of the base and collinear with
the helix axis of the DNA. Choosing the z axis
of the macromolecular coordinate system as the
helix axis, and taking into account the symmetry
of the double helix under rotation about this axis,
we can take the two coordinate systems M and N
to be identical.
In general, a 3 × 3 diffusion tensor needs to
be speciﬁed for the tumbling of the molecular
frame M with respect to the laboratory system
of axes L. With the above choice of the coor-
dinate axes on the macromolecule the diffusion
tensor is expected to be diagonal and of the form
D = diag(D⊥,D⊥,D∥), where D∥and D⊥are
the diffusion coefﬁcients for rotation about direc-
tions, respectively, parallel and perpendicular to
the helix axis. Since the length of the double helix
(≈70 Å) is several times larger than its diameter
(≈20 Å), we expect to have D∥> D⊥.
Simulations of cw-ESR spectra at two differ-
ent magnetic ﬁelds (B = 0.35 and B = 3.4 Tesla)
for the spin-labeled B-DNA tumbling in solu-
Fig. 10.3 Experimental
X-band
cw-ESR
spectrum
(green) and spectra calculated at two different magnetic
ﬁelds (A) B = 0.35 T and (B) B = 3.4 T. At each ﬁeld,
three different tumbling rates with the following rotational
diffusion tensors are compared: D = diag(10,10,10) ×
106 s−1 (blue), D = diag(10,10,40) × 106 s−1 (black),
and D = diag(25,25,40) × 106 s−1 (red). For visual
purposes the three spectra are systematically shifted in
the vertical direction, which corresponds to the spectral
intensity (in arbitrary units)
tion are presented in Fig. 10.3. (For further de-
tails about the geometry and the simulation pa-
rameters the reader is referred to Ref. [51].)
The bottom spectrum (blue), simulated using
D = diag(10,10,10) × 106 rad2/s, corresponds
to isotropic rotational diffusion expected from a
spherical macromolecule. The spectrum in the
middle (black), simulated using D = diag(10,10,
40) × 106 rad2/s, takes into account the faster
diffusion of the elongated DNA molecule about
its helix axes. In fact, it compares very well
with the experimental spectrum (green) on top
of which it is overlaid. Notice, however, that the
two spectra (black and blue) at B = 0.35 T—the
magnetic ﬁeld most commonly used in studies
of biomacromolecules—are indistinguishable in
these two cases. For the spin labeling geometry
considered in this example, cw-ESR experiments
at the higher ﬁeld of B = 3.4 T are necessary
to pick up the elongated shape of the molecule.
The (red) spectrum at the top in Figs. 10.3A

10
Markov State and Diffusive Stochastic Models in Electron Spin Resonance
121
Fig. 10.4 Left: Nitroxide spin label R1 (balls and thin
sticks) covalently bonded to the cysteine amino acid (thick
sticks) of a protein. Right: T4 Lysozyme (T4L) labeled
with R1 at positions 72 and 131. The former is located on
a long α-helix, whereas the latter is on a short α-helix. At
both sites the spin labels are at the surface of the protein
nicely exposed to the solvent, i.e., solvent-exposed helix
surface (SEHS) spin labels. In experiments the labels are
present one at a time
and B, simulated using D = diag(25,25,40) ×
106 rad2/s, is intended to illustrate the effect
of shortening the length of the DNA double he-
lix. Keeping the diffusion coefﬁcient for rotation
about the helix axis the same as in the (black)
spectrum in the middle, we have increased the
rate of diffusion about the perpendicular axis
from 10 to 25×106 rad2/s. In this case, the spec-
tra at both ﬁelds are sufﬁciently different from the
spectra simulated using D = diag(10,10,40) ×
106 rad2/s (black in Fig. 10.3), showing the sen-
sitivity of the experiments to the length of the
DNA double helix.
The simulations in Fig. 10.3 rest on the as-
sumption that the only motion experienced by
the spin label is anisotropic rotational diffusion.
In reality, other motions—like the libration of
the base to which the spin label is covalently
attached—are expected to take place in addition
to the global molecular tumbling. However, it
should be clear from the presented evidence that
the internal motions can be unambiguously in-
ferred from the experimental spectra only if the
effect of the global motion is carefully accounted
for along the lines illustrated in Fig. 10.3.
10.3
MSM of Spin-Label Dynamics
In this section, we observe that the internal dy-
namics of a solvent-exposed spin label on the sur-
face of a protein is dominated by the isomeriza-
tion of its linker (Sect. 10.3.1). Such motion is
perfectly suited for modeling by MSMs that can
be subsequently used to simulate cw-ESR spec-
tra according to the model (10.8). The construc-
tion of MSMs of the spin-label dynamics from
MD trajectories is illustrated in Sect. 10.3.2 for
two spin labels at solvent-exposed positions on
the protein T4 Lysozyme. Multifrequency spec-
tra for these two positions will be considered in
Sect. 10.5.3.
10.3.1 Side Chain Isomerization as
Intermittent Dynamics
The covalent attachment of the spin label in
Fig. 10.2 to the cytosine base of DNA lacks any
rotatable bonds. Hence, its internal dynamics is
expected to be tightly coupled to the internal dy-
namics of the entire DNA fragment. The situation
is different for ESR studies of proteins, in which
the spin label referred to as R1 is most commonly
used [10, 16]. This nitroxide spin label is cova-
lently bonded to the side chain of the amino acid
cysteine through a linker consisting of ﬁve se-
quential chemical bonds (Fig. 10.4, left). In prin-
ciple, rotations around each one of these bonds
are sterically permitted, which should allow for
rich internal spin label dynamics largely indepen-
dent from the dynamics of the protein backbone.

122
D. Sezer and B. Roux
Fig. 10.5 Isomerization dynamics of the nitroxide spin label R1 at position 72 on T4 Lysozyme
Because of the additional complexity intro-
duced by the internal freedom of R1 and other
similar spin labels attached to proteins, exten-
sive efforts have been dedicated to elucidate the
microscopic factors affecting their conformation
and dynamics. Particularly informative are the
experimental studies with the well-characterized
protein T4 Lysozyme (T4L). A wealth of re-
sults, ranging from X-ray crystallography of spin-
labeled T4L [18, 21, 31], to X-band [11, 35,
36] or multifrequency [33, 56] cw-ESR experi-
ments, are now available. From those studies, two
positions—72 and 131—situated in the middle
of, respectively, a long and a short helix, have
emerged as prototypical solvent-exposed helix
surface (SEHS) sites (Fig. 10.4, right). The dy-
namics of R1 at these positions has been ratio-
nalized in terms of the “χ4/χ5 model” for SEHS
sites [10, 11], which assumes that the internal mo-
tion of R1 is largely limited to rotations about
the last two dihedrals of the side chain. Accord-
ing to this model, the remaining dihedrals are ef-
fectively “locked”: the χ3 disulﬁde torsion is op-
posed by a large energy barrier [25], while the χ1
and χ2 torsions of the cysteine side chain are hin-
dered by the formation of a hydrogen bond be-
tween the sulfur atom of R1 and the backbone
amide [36] or Cα [10]. Such sulphur-backbone
contacts are indeed observed in a number of X-
ray crystal structures of T4L with spin labels
[18, 21, 31], in support for the χ4/χ5 model. Fur-
thermore, the χ4/χ5 model offers an atomistic ra-
tionalization of the ﬁtting parameters of the diffu-
sional models MOMD and SRLS, which can pro-
duce simulated spectra in quantitative agreement
with experiments [56].
According to the current understanding, 72R1
and 131R1 in T4L are believed to exemplify the
internal R1 dynamics at SEHS sites in maximum
isolation. The differences in the X-band cw-ESR
spectra at these two positions are thought to re-
ﬂect the effect of backbone motion on the mobil-
ity of the spin label side chain [11]. Nevertheless,
a number of issues remain. For instance, the spin
label is partly disordered and unresolved in sev-
eral X-ray structures [18], suggesting that mul-
tiple conformations are energetically accessible.
Therefore, in spite of the large amount of data
available, a deﬁnitive characterization of the spin
label dynamics at SEHS sites at the atomic level
has not been achieved.
The values of the spin label dihedral an-
gles during an atomistic simulation of T4L la-
beled at position 72 are shown in Fig. 10.5. The

10
Markov State and Diffusive Stochastic Models in Electron Spin Resonance
123
Table 10.1 Information about the two sets of MD simulations of spin-labeled T4 Lysozyme
72R1 (set 1)
131R1 (set 2)
Number of independent trajectories
18 (χ1,χ2,χ3)a
54 (χ1,χ2,χ3,χ4)a
Duration of single trajectory
32.3 ns
12.7 ns
Total simulation time (analyzed)b
581 (563) ns
686 (632) ns
aIn each independent trajectory of a given set the spin label was initialized to be in a different rotameric state by
restraining the dihedral angles given in the parenthesis to their canonical values. The number of different rotamers was
determined using the multiplicity of the dihedral angles, χ1:3, χ2:3, χ3:2, χ4:3
bThe ﬁrst 1 ns of every trajectory was treated as equilibration period and not analyzed
time traces of these angles do seem to undergo
jump like dynamics between different discrete
states, exemplifying intermittent internal dynam-
ics. Thus, the transitions between the rotameric
conformations of the spin label side chain should
be amenable to modeling by MSMs.
Before embarking on a rigorous MSM model-
ing, a few observations about the internal isomer-
ization dynamics of the protein spin label can be
made on the basis of the time traces in Fig. 10.5.
First, the lifetimes of the states corresponding to
the different values that the ﬁve torsions preferen-
tially adopt show great variation. At one extreme
is the disulﬁde dihedral angle χ3, which has un-
dergone a single transition from χ3 ≈−90◦to
χ3 ≈+90◦during the entire simulation of 50 ns.
At the other extreme is the dihedral angle closest
to the nitroxide ring, χ5, which has moved several
times between the values χ5 ≈−90◦, χ5 ≈+90◦
and χ5 ≈0◦. Second, χ1 and χ2—the dihedral
angles closest to the protein backbone—are seen
to undergo a transition every 5 to 10 ns. As a re-
sult, χ2 has visited the three canonical values of
±60◦and 180◦, even if only a few times. Sim-
ilarly, χ1 has exchanged between two of these
canonical values a few times.4 Third, in many
of the transitions χ1 and χ2 seem to ﬂip simul-
taneously in a concerted manner. Occasionally,
all the four dihedral angles, with the exception
of χ3, are seen to undergo concerted transitions.
Furthermore, the rate of isomerization of a given
4In protein crystal structures the side chain of cysteine is
very rarely seen to adopt a conformation with χ1 ≈+60◦
when located on α helices since this places the cysteine
sulfur atom in unfavorable steric contact with the back-
bone atoms of the helix.
dihedral appears to depend on the values adopted
by all the other dihedral angles. (This is perhaps
most clearly seen for χ5.) Hence, it is not justiﬁed
to assume that the dynamics of the torsion angles
is independent [54]. Instead, the conformation of
the entire spin label side chain has to be consid-
ered when trying to identify the states of the in-
termittent motion and the rates of exchange be-
tween them. In the light of these observations we
now turn to the systematic construction of MSMs
for the dynamics of R1 at positions 72 and 131 in
T4L.
10.3.2 MSM from MD Trajectories
Extensive all-atom MD simulations of fully-
solvated spin-labeled T4L were performed for the
two SEHS positions of interest—72 and 131—
with the purpose of mapping the R1 isomer-
ization dynamics from the MD trajectories to
MSMs. To enhance the sampling of the possi-
ble spin-label conformations several independent
trajectories were generated starting from different
R1 conformations. Information about the number
and duration of the trajectories is summarized in
Table 10.1.
To proceed with building MSMs of the spin-
label dynamics relative to the protein from the
MD simulations, a set of observables, called or-
der parameters, has to be selected among the
large collection of variables contained in the tra-
jectories. Here, we assume that the dihedral an-
gles of the spin label side chain constitute an ad-
equate set of order parameters—a natural choice
based on physical insight about the system. Then,

124
D. Sezer and B. Roux
the ﬁve-dimensional space of the order parame-
ters is divided into 120 regions5 (microstates) us-
ing K-means clustering [24]. At this point, it is
hoped that if the microstates are chosen to be nar-
row enough, such that intrastate relaxation is fast,
the kinetics of jumping out of a microstate will be
approximately Markovian.
More formally, let X(t) be a random vari-
able indicating the state of an N-state Markov
chain model at time t. The probabilities pi(t) =
P{X(t) = i}, to observe the chain in state i at
time t, form a (row) vector ⟨p(t)| = [pi(t)],
whose evolution is governed by the Master equa-
tion
˙pj(t) =
N

i=1
pi(t)Kij.
(10.10)
Here, a derivative with respect to time has been
denoted with a dot. The matrix K = [Kij] is re-
ferred to as the “rate matrix”. Its off-diagonal en-
tries are larger or equal to zero. For a conservative
process, its diagonal elements are negative and
given as Kii = −
j̸=i Kij. They are directly re-
lated to the lifetime [39]
νi = −1/Kii
(10.11)
of each state. The stationary probability distribu-
tion of the chain ⟨π|, is the left eigenvector of
K with eigenvalue zero, i.e., ⟨π|K = 0. A sys-
tem in thermal equilibrium satisﬁes the detailed
balance condition πiKij = πjKji, which implies
that K can be transformed to a symmetric form
by a similarity transformation with the diagonal
matrix D = [√πiδij]. Thus all the eigenvalues of
K are real. When written as −1/τi, the nonzero
eigenvalues give the relaxation time scales τi
of the stochastic dynamics generated by K (cf.
Eq. (10.12)). Note that, in general, τi ̸= νi.
If the observed time series were generated
from a continuous-time Markov chain, one could
easily estimate the rate matrix by counting the
number of i →j jumps and the total time spent
5The observation that, considering the multiplicity of its
dihedral angles, the R1 side chain can adopt 108 different
rotameric states motivated the choice of number of mi-
crostates.
in state i, i.e., lifetime νi. This is not possible
when the trajectories of the order parameters are
coming from MD simulations, since the short-
time dynamics of the order parameters are not
necessarily Markovian. For instance, the time-
series of the spin-label torsion angles in Fig. 10.5
contain “spurious” transitions back and forth be-
tween states i and j before a “real” transition oc-
curs. This would lead to an unreliable estimate of
K from the MD trajectories. This problem is par-
tially alleviated by observing the system only at
instances separated by a long enough time inter-
val τ—referred to as lag time—such that the dy-
namics is more likely to appear memoryless from
one observation to the next. Such an approach,
however, leads to a discretization of the time axis,
thus deviating from the continuous-time Markov
chain model (10.10). By counting the number of
times the chain in state i goes to state j after
time τ, a transition probability matrix, T (τ), with
matrix elements Tij(τ) = P{Xt+τ = j | Xt = i}
can be estimated. This matrix determines the evo-
lution of the state probabilities for times spaced
by τ: ⟨p(t + τ)| = ⟨p(t)|T (τ).
To further reduce the miscounting of very
short-lived excursions in the values of the torsion
angles as genuine transition events between dis-
tinct conformational states, the time series of the
spin label dihedral angles were analyzed with a
hidden Markov model. The latter allows for the
observed dihedral angle values to be dispersed
about the values deﬁning the state of the MSM ac-
cording to a distribution with a mean and a stan-
dard deviation. In this sense, what is analyzed are
the values of the dihedral angles “emitted” from a
rotameric state that is not directly accessible (i.e.,
hidden). The mean values of the observed torsion
angles in each state as well as the state-to-state
jump probabilities were inferred in an iterative
manner using the Viterbi algorithm [42]. Detailed
description of the followed procedure is available
in Ref. [49].
Ideally, if the modeled process is indeed
Markovian, the transition matrices estimated us-
ing different lag times should be consistent in the
sense that T (τ1)T (τ2) = T (τ1 +τ2). If the under-
lying process being observed at discrete instances
in time is in fact a continuous-time Markov chain

10
Markov State and Diffusive Stochastic Models in Electron Spin Resonance
125
Fig. 10.6 Relaxation time
scales calculated according
to (10.12) using the
eigenvalues of T (τ)
estimated from the data at
various lag times τ. The
thick black curves
correspond to 2τ. τi’s that
fall under these curves are
essentially zero and are
poorly estimated
with rate matrix K, the relation T (τ) = exp(τK)
should hold. This implies that the eigenvalues
λT
i (τ) of T (τ) are related to the eigenvalues λK
i
of K through λT
i (τ) = exp(τλK
i ). Therefore, the
relaxation time scales of the MSM are
τi = −1
λK
i
= −
τ
lnλT
i (τ).
(10.12)
Equation (10.12) is a necessary, although not
sufﬁcient, condition for the matrices T (τ) esti-
mated using different lag times τ to describe a
genuinely Markovian process. If the relaxation
time scales τi calculated from the eigenvalues of
such T (τ) are not independent of τ, it is cer-
tain that the process is not Markovian. To as-
sess the Markovian nature of the estimated pro-
cess corresponding to the isomerization of the
spin label R1 at positions 72 and 131, the anal-
ysis of the dihedral time series using the Viterbi
algorithm was repeated for several different lag
times τ, ranging from 100 to 800 ps. The relax-
ation time scales obtained from the estimated mi-
crostate transition matrices according to (10.12)
are shown in Fig. 10.6. The fact that the lines are
approximately horizontal (i.e., independent of the
lag time) indicates that, on time scales larger than
the lag time, the time series for dihedral dynam-
ics of both 72R1 and 131R1 are faithfully mod-
eled by MSMs of jumps between 120 discrete
states. Further analysis is limited to the transi-
tion probability matrices for the shortest lag time,
τ = 100 ps.
The choice of microstates based on K-means
clustering is purely geometrical. Using the mi-
crostate transition probability matrix the mi-
crostates can be lumped into several groups of
kinetic signiﬁcance (macrostates). The resulting
macrostates are intended to correspond to the
rarely exchanging, metastable conformations of
the spin label, and in the end, it is the Markovian
kinetics among the macrostates that constitutes
a model of the slow spin-label dynamics relative
to the protein. The degree of lumping, which de-
termines the ﬁnal number of macrostates, is de-
cided on the basis of the desired temporal resolu-
tion (which is related to the width of the cw-ESR
spectrum, as discussed in Sect. 10.5.2).
The ﬁnal MSMs constructed for 72R1 and
131R1 on T4L contained 37 and 38 (macro)states,
respectively (Table 10.2). It is important to note
that a critical ingredient of the MSMs at this
stage is the usage of pre-averaged magnetic ten-
sors of the spin labels associated with the Marko-
vian macrostates (see Sects. 10.5.1 and 10.5.2).
At both sites, the slowest relaxation times (τ1 ≳
100 ns) are related to transitions of the disulﬁde
torsion angle between its two stable conforma-
tions χ3 ≈−90◦(m) and χ3 ≈+90◦(p). The
exact numerical values of τ1, as well as the rel-
ative populations of the m and p conformations
are not expected to be accurately estimated by
the constructed MSM due to the small number
of such transitions observed in the free simula-
tions (Table 10.2). To determine accurately the
m:p ratio, the free energy difference between two
Markovian states on the opposite side of the χ3
torsion was calculated using umbrella sampling
simulations [45]. This resulted in 27 % m—73 %
p for 72R1, and 55 % m—45 % p for 131R1 (Ta-
ble 10.2) [50].
The spin-label conformations of the most pop-
ulated ﬁve states of the MSMs of 72R1 and
131R1 are presented in Fig. 10.7. In spite of the

126
D. Sezer and B. Roux
Table 10.2 Number of transitions between the m and p conformations observed in all the MD trajectories and the
number of Markov states assigned to those conformations
site
number of transitions
number of states
m:pa
m →p
p →m
m
p
total
72R1
2
1
18
19
37
27:73
131R1
1
1
19
19
38
55:45
aThe m:p ratio (%) is determined from independent restrained simulations
Fig. 10.7 The most populated ﬁve conformations of
72R1 (A), and 131R1 (B) are colored as indicated. The
rotameric states of the neighboring side chains when in-
teracting with R1 are not necessarily the same as the ones
shown here. (C) The amino acid sequence of T4L. Stars
indicate the spin labeled sites and arrows point between
the i ± 3 and i ± 4 positions. Residues with which R1
interacts are colored red and blue for 72 and 131, respec-
tively
variation of χ4 and χ5, as well as χ1, χ2, and χ3,
across the most populated states of 72R1, the ni-
troxide ring appears to be rather well localized
(Fig. 10.7A). In contrast, the conformations cor-
responding to the ﬁrst ﬁve most populated states
of 131R1 are dispersed (Fig. 10.7B). In the simu-
lations the spin label adopts a multiplicity of con-
formations, many of which tend to interconvert
on time scales relevant for cw-ESR experiments.
When the exchanges are slow, the states appear
to be stabilized by a range of polar and non-
polar interactions with neighboring amino acids
(Fig. 10.7C) frequently involving the nitroxide
ring.
The MSMs of spin-label dynamics at posi-
tions 72 and 131 in T4L constructed from the
MD simulations can be used in the model (10.8)
to simulate cw-ESR spectra. The results of such
simulations are compared with experiments in
Sect. 10.5.3. In the next section we describe the
procedure for simulating cw-ESR spectra from
trajectories of the spin-label dynamics.
10.4
Numerical Simulation of
cw-ESR Spectra
Cw-ESR experiments are performed under the
presence of a strong constant magnetic ﬁeld and
a weak microwave (mw) magnetic ﬁeld applied
continuously in a direction perpendicular to the
constant ﬁeld. Subjecting the sample to these ex-
ternal magnetic ﬁelds leads to detectable bulk
magnetization. Cw-ESR experiments measure
the component of the magnetization perpendic-
ular to the constant magnetic ﬁeld—transverse
component; the longitudinal component along

10
Markov State and Diffusive Stochastic Models in Electron Spin Resonance
127
the direction of the constant magnetic ﬁeld is
not detected. For the sufﬁciently weak mw ﬁelds
typically employed, the cw spectrum is identi-
cal to the Fourier transform of a free induction
decay (FID) [1], where FID refers to the decay
of the transverse magnetization in the absence
of any mw ﬁeld. In FID the electron spins are
ﬁrst ﬂipped to the transverse plane using a ninety-
degree mw pulse after which the oscillating ﬁeld
is switched off. Hence, at the beginning of the
decay, the longitudinal magnetization is equal to
zero while the transverse magnetization can be
taken to be equal to one. During an FID the spins
evolve only under the action of the constant mag-
netic ﬁeld and the observed decay of the trans-
verse magnetization results from the decoherence
of the spins. In magnetic resonance the time scale
of this decay is known as T2. In contrast, the
time scale on which the longitudinal magnetiza-
tion builds up is referred to as T1. At sufﬁciently
strong magnetic ﬁelds and for motionally broad-
ened cw-ESR spectra, which are our main inter-
est, T2 is much shorter than T1 (e.g., nanosec-
onds versus microseconds). Therefore, it is safe
to assume that by the time the transverse mag-
netization has decayed to zero the longitudinal
magnetization has remained at its initial value
of zero. This constitutes the high-ﬁeld approxi-
mation whose implications will become apparent
below (see Sect. 10.4.1).
Because there is no mw ﬁeld during the FID
evolution, in numerical work aiming to calcu-
late cw-ESR spectra it is preferable to simulate
the FID and compute its Fourier transform. With
M+(t) denoting the bulk transverse magnetiza-
tion after a ninety-degree pulse, the spectrum is
the (one-sided) Fourier transform
S (ω) =
 ∞
0
M+(t)e−iωt dt.
(10.13)
Due to the way a cw experiment is actually
performed—which is different than recording an
FID—the spectrum is in fact the derivative of
S (ω) with respect to ω. Differentiating (10.13),
a derivative-mode cw-ESR spectrum is readily
found to be
dS (ω)
dω
= −i
 ∞
0
tM+(t)e−iωt dt.
(10.14)
Using two channels both the real and imagi-
nary parts of this spectrum can be recorded. In
practice, however, only the real part is reported.
All the calculated cw-ESR spectra shown in this
chapter correspond to the real part of (10.14), ob-
tained by taking the discrete Fourier transform of
tM+(t) numerically. Because it follows the de-
cay of M+(t) in time, the presented approach
constitutes a simulation in time domain (in con-
trast to the frequency-domain methodology based
on the SLE).
10.4.1 The Nitroxide Density Matrix
To calculate the macroscopic transverse magne-
tization appearing in (10.14), the microscopic
magnetizations, M+(t), from all the possible ran-
dom trajectories that a nitroxide spin label in
the solution may undergo need to be averaged.
Denoting this ensemble averaging with angular
brackets we have
M+(t) =

M+(t)

.
(10.15)
Assuming a dilute solution of non-interacting
free radicals, the state of each electron-nuclear
spin system on one nitroxide can be described by
a density operator. With ρ(t) denoting the density
matrix associated with one stochastic trajectory
of an individual spin label, microscopic trans-
verse and longitudinal magnetizations can be cal-
culated as follows:6
M+(t) = Tr

ρ(t) ˆS+

and
Mz(t) = Tr

ρ(t) ˆSz

.
(10.16)
6Since the absolute value of the cw-ESR measurement de-
pends on instrumental factors and is not relevant for our
purposes, proportionality constants relating the magneti-
zations and the respective spin operators have been ne-
glected in (10.16).

128
D. Sezer and B. Roux
In these expressions, ˆS+ and ˆSz are spin-1/2 op-
erators7 and Tr denotes a trace. The density op-
erator lives in the outer product of the electron
and nuclear spin Hilbert spaces. For easier ac-
cess to the microscopic magnetizations in (10.16)
it can be written as a sum of Kronecker prod-
ucts between the spin-1/2 matrices and matrices
ρκ with the dimensionality of the nuclear-spin
Hilbert space:8
ρ(t) = ρ+(t) ˆS−+ ρ−(t) ˆS+ + 2ρz(t) ˆSz
+ ρ0(t) ˆS0
=
ρ0 + ρz
ρ−
ρ+
ρ0 −ρz

.
(10.17)
Thus, ρ is represented by a 6 × 6 matrix (for
14N) or a 4 × 4 matrix (for 15N). Using (10.17)
in (10.16) it is straightforward to deduce that
M+(t) = Tr

ρ+(t)

and
Mz(t) = Tr

ρz(t)

,
(10.18)
where the trace in these expressions is only over
the nuclear spin degrees of freedom.
To calculate the microscopic magnetization
M+(t) along a given dynamical trajectory we
need to be able to follow numerically the evolu-
tion of the density matrix starting from the ap-
propriate initial conditions. To this end, we recall
that the density matrix evolves according to the
Liouville-von Neumann equation
˙ρ(t) = −i
	 ˆH(t),ρ(t)

,
(10.19)
7These are
ˆS0 =

1
0
0
1

,
ˆS+ =

0
1
0
0

,
ˆS−=
0
0
1
0

,
ˆSz = 1
2
1
0
0
−1

.
8In principle, the submatrix ρ0 in (10.17) contains the
3 × 3 or 2 × 2 identity matrix I0 along its main diago-
nal. However, the part proportional to the identity matrix
is neither affected by the relaxation or the coherent evo-
lution nor does it affect the evolution of the rest of the
density matrix. Hence, ρ0 can be taken as traceless.
where ˆH(t) is the Hamiltonian (10.1) of the spin
system (in units of angular frequency) and [·,·]
denotes a commutator. The initial conditions for
an FID can be obtained from (10.18). These are
the identity matrix for ρ+(0) and the zero matrix
for ρz(0).
In analogy to (10.17), the ESR spin Hamilto-
nian can be written as
ˆH(t) = 2Hz(t) ˆSz + H+(t) ˆS−+ H−(t) ˆS+,
(10.20)
where the matrices Hκ have the dimensionality
of the Hilbert space of the nuclear spin. Substi-
tuting the expansions (10.17) and (10.20) into the
equation of motion (10.19), and equating the co-
efﬁcients of ˆS−on both sides of the equality leads
to the evolution law
˙ρ+(t) = i

Hz(t),ρ+(t)

−i

H+(t),ρz(t)

−i
	
H+(t),ρ0(t)

,
(10.21)
where {·,·} denotes an anticommutator. At this
point, it is convenient to invoke the high-ﬁeld ap-
proximation, which amounts to assuming that ρz
and ρ0 remain zero throughout the times we fol-
low the evolution of ρ+.9 As a result, (10.21) sim-
pliﬁes to
˙ρ+(t) = i

Hz(t),ρ+(t)

.
(10.22)
Hence, ρ+(t) is the only part of the full density
matrix that needs to be considered and Hz(t) is
the only part of the Hamiltonian that needs to be
calculated at every time step. From (10.1),
Hz(t) = |γe|
	
BGL
zz(t) + aL(t) · ˆI

/2,
(10.23)
where GL
zz(t) is the respective component of the
rescaled Zeeman tensor in the laboratory frame,
and the components of aL are deﬁned in terms of
the components of the hyperﬁne tensor as
aL
i (t) ≡AL
iz(t).
(10.24)
9As mentioned above, the justiﬁcation lies in the fact that
the time scale T1—on which ρz and ρ0 build up—depends
on motions at the time scale of the Larmor precession
and is much longer than the time scale T2—on which ρ+
decays—dominated by slow motions. The high ﬁeld ap-
proximation automatically excludes the possibility to ac-
count for the contribution of T1 processes to T2 relaxation
using Eq. (10.22).

10
Markov State and Diffusive Stochastic Models in Electron Spin Resonance
129
Table 10.3 Magnetic ﬁelds, corresponding Larmor frequencies,a microwave bands,b and time scales of precessionc
B/T
0.12
0.34
1.21
3.39
6.07
9.2
fe/GHz
3.4 (S)
9.5 (X)
34 (Q)
95 (W)
170 (G)
260 (J)
τ0/ps
47
17
4.7
1.7
0.95
0.61
afe = ω0/2π
bIn parenthesis
cτ0 = 1/ω0
10.4.2 Propagation of the Quantum
Spin System
Each electron spin in the ensemble undergoes a
precession about the applied constant magnetic
ﬁeld B with average angular frequency, known as
the Larmor frequency of the electron spin, equal
to [32]
ω0 ≡−γeBG0,
(10.25)
where G0 = Tr{G}/3. Table 10.3 contains the fre-
quencies and time scales of precession for sev-
eral different magnetic ﬁelds of experimental in-
terest. When following the time evolution of the
density matrix with the purpose of calculating
M+(t), it proves convenient to work in a coor-
dinate system rotating about the laboratory z-axis
with the electron Larmor frequency. In this ro-
tating frame (denoted with a prime) the opera-
tors ˆS0 and ˆSz remain unchanged whereas ˆS+
and ˆS−acquire a phase: ˆS′
± = ˆS±e±iω0t. Hence,
from (10.17), the density matrix in the rotating
frame becomes ρ′(t) = ρ′
+(t) ˆS−+ ρ′
−(t) ˆS+ +
2ρz(t) ˆSz + ρ0(t) ˆS0, where
ρ±(t) = ρ′
±(t)e±iω0t.
(10.26)
Using this last relation in (10.18) yields the trans-
verse magnetization10
M+(t) = Tr

ρ′
+(t)

eiω0t = M′
+(t)eiω0t.
(10.27)
10The numerical advantages associated with working in
the rotating frame are apparent from (10.27), where the
transverse magnetization M+(t) consists of a rapidly os-
cillating “carrier” wave whose amplitude is modulated
by the slowly changing “signal” M′
+(t). Thus, following
M+(t) numerically would require an integration time step
sufﬁcient to resolve the fast oscillations on the time scale
of the Larmor precession (cf. Table 10.3). In contrast, cal-
culating the slowly changing M′
+(t) numerically allows us
to take time steps larger by several orders of magnitude.
Substituting (10.27) in the expression for the
spectrum (10.13), we ﬁnd
S (ω −ω0) =
 ∞
0

M′
+(t)

e−iωt dt.
(10.28)
Hence, taking the Fourier transform of the ensem-
ble-average of the slowly varying M′
+(t) pro-
duces the desired experimental cw-ESR spectrum
but with the origin shifted to the Larmor fre-
quency ω0.
Since M′
+ is deﬁned as the trace of ρ′
+ the lat-
ter needs to be evolved numerically. From (10.22)
and (10.26) it is straightforward to conclude that
˙ρ′
+(t) = i

Hz(t),ρ′
+(t)

−iω0ρ′
+(t)
= i

V (t),ρ′
+(t)

,
(10.29)
where
V (t) ≡Hz(t) −ω0/2
= |γe|
	
BG′L
zz(t) + aL(t) · ˆI

/2.
(10.30)
In the last equality of (10.30) we have introduced
the traceless coupling tensor G′ obtained by sub-
tracting G0 from the diagonal entries of the Zee-
man tensor G: G′ ≡G −G0E.
The numerical evolution of ρ′
+(t) according to
(10.29) over a short time step 
t can be achieved
as11
ρ′
+(t + 
t) = U(t,
t)ρ′
+(t)U(t,
t) (10.31)
after introducing the short-time propagator
11Note that the same propagator matrix acts on both sides
of ρ′
+ in this equation, which is different from the propa-
gation of the density matrix ρ in the full Hilbert space. The
source of the difference lies in replacing the commutator
in (10.19) by an anticommutator in (10.22).

130
D. Sezer and B. Roux
U(t,
t) ≡ei
tV (t)
= ei
t|γe|BG′L
zz(t)/2ei
t|γe|aL(t)·ˆI/2,
(10.32)
which needs to be calculated from the instanta-
neous values of the magnetic tensors in the labo-
ratory frame at every integration time step. (How
to efﬁciently compute U(t,
t) was described in
Ref. [48].)
The resulting computational framework is
summarized by the following steps:
(i) To represent the dynamics of the classi-
cal degrees of freedom, a stochastic trajec-
tory combining continuous rotational diffu-
sion together with an MSM according to the
model (10.8) is propagated, generating the
time series RLN(t) = RLM(t)RMN(t) sam-
pled at the time step 
t.
(ii) At every time step the instantaneous val-
ues of the magnetic tensors in the labora-
tory frame are calculated according to (10.4)
and used to obtain the short-time propaga-
tor (10.32). (It should be noted that these
correspond to the magnetic tensors averaged
over the fast librations of the spin label as-
signed to a given Markovian macrostate, as
described in Sects. 10.5.1 and 10.5.2).
(iii) The QM density matrix, ρ+(t), is evolved
along a single stochastic trajectory accord-
ing to (10.31) and a microscopic magneti-
zation M′
+(t) is calculated from its trace at
every time step 
t.
(iv) A large number of such trajectory-speciﬁc
magnetization time series, calculated by
generating
different
realizations
of
the
stochastic trajectories, are generated and
added together to obtain the ensemble-
averaged macroscopic magnetization in the
rotating frame, ⟨M′
+(t)⟩.
(v) The magnetization is Fourier transformed to
obtain a shifted version of the desired cw-
ESR spectrum centered at the origin instead
of the Larmor frequency ω0, as given by
Eq. (10.28).
10.5
MSMs in Service of cw-ESR of
Biomolecules
In this section, the classical molecular dynam-
ics described in Sect. 10.3 and the quantum spin
dynamics of Sect. 10.4 are integrated with the
purpose of calculating cw-ESR spectra from MD
simulations. The methodology is applied to T4
Lysozyme in Sect. 10.5.3, for which multifre-
quency cw-ESR spectra from 72R1 and 131R1
are available. Before presenting this application,
however, we start in Sect. 10.5.1 by analyzing the
results of a simple analytical model designed to
illustrate the inﬂuence of motional time scales on
the spectral line shape. This analysis helps pro-
vide a deeper understanding of the sensitivity and
demands of cw-ESR on the time scales and dura-
tion of the classical molecular motions, which is
discussed in Sect. 10.5.2.
10.5.1 Coupling Between Markov State
Dynamics and Spin Relaxation
Rather than treating the problem in full gen-
erality, the effect of MSM relaxation rates on
the spectrum will ﬁrst be illustrated through the
simplest possible example of coupling between
a two-state MSM and a two-level spin system.
This situation, known as chemical exchange, does
arise naturally in magnetic resonance, especially
NMR. In our case, it can be reached after a few
simplifying assumptions.
For the sake of simplicity, we consider a spin
label system in which the electron spin is not cou-
pled to any nuclear spin (unlike a real nitroxide
spin label). This leaves us with an ensemble of
independent spin-1/2 systems. In this case, the
coherence matrix ρ+(t) becomes a scalar, which
is in fact equal to M+(t) (cf. (10.18)). Also, the
hyperﬁne contribution to Hz(t) in (10.23) is not
present so Hz(t) = |γe|BGL
zz(t)/2 is also a scalar.
With these simpliﬁcations the evolution equation
(10.22) reduces to
˙M+(t) = i|γe|BGL
zz(t)M+(t) = iω(t)M+(t),
(10.33)
where the last equality deﬁnes the precession fre-
quency ω(t).

10
Markov State and Diffusive Stochastic Models in Electron Spin Resonance
131
To incorporate molecular motion, we assume
that the molecules to which the spins are attached
can exist in two different conformations that ex-
change in a random manner via a hopping pro-
cess. The conformations are taken to be magneti-
cally distinguishable in the sense that the preces-
sion frequency ω(t) in (10.33) is equal to ω1 in
one of the conformations and to ω2 in the other,
with ω1 ̸= ω2. If k+ denotes the probability of
transition from state 1 to 2 per unit time and k−
denotes the probability of transition from state 2
to 1 per unit time, the rate matrix for this two-
state MSM is
K =
−k+
k+
k−
−k−

.
(10.34)
Using matrix notation, the Master equation
(10.10) can be written as

˙p(t)


 =

p(t)


K,
(10.35)
where ⟨p(t)| = [p1(t),p2(t)], and p1 and p2 are
the probabilities for the chain to be in states 1
and 2, respectively. The left eigenvector of K
with eigenvalue zero is the equilibrium (row)
vector ⟨π| = [π1,π2]. The corresponding right
eigenvector is the (column) vector |1⟩= [1,1]⊤.
The only non-zero eigenvalue of K is −k, where
k ≡k+ + k−is the sole relaxation time scale in
this problem. (For comparison, the lifetimes of
the two states are ν1 = 1/k+ and ν2 = 1/k−, ac-
cording to (10.11).)
In cw-ESR one detects the transverse magne-
tization M+(t) of the whole ensemble and not
the probabilities of the two states. Let M1 and
M2 denote the transverse magnetizations of the
molecules in the two conformations weighted
by the respective probabilities p1 and p2. In
terms of the weighted magnetization (row) vec-
tor ⟨M(t)| = [M1(t),M2(t)], the magnetization
averaged over the ensemble of molecules is
M+(t) = M1(t) + M2(t) = ⟨M(t)|1⟩. As has
been shown already by Anderson [2] and Kubo
[28, 29], the evolution of the probability weighted
magnetization vector is given by the joint dynam-
ics of oscillatory motion (10.33) and exchange
between the two states (10.35):
 ˙M(t)


 =

M(t)


(iΩ + K).
(10.36)
Here, K is the transition rate matrix from (10.34)
and
Ω =
ω1
0
0
ω2

(10.37)
is a matrix containing the state-dependent preces-
sion frequencies along its main diagonal. For an
equilibrated ensemble of spins with unit trans-
verse magnetization the appropriate initial con-
dition is ⟨M(0)| = ⟨π|. From (10.13), the cw-
ESR spectrum is the Laplace transform of the
transverse magnetization evaluated at iω. Taking
the Laplace transform of both sides of the Kubo-
Anderson equation (10.36), using the initial con-
dition of ⟨M(t)|, and taking an inner product with
|1⟩, leads to the following expression for the spec-
trum: S (ω) = ⟨π|(iω −iΩ −K)−1|1⟩. Differen-
tiation with respect to ω, in analogy with (10.14),
yields the derivative spectrum
dS (ω)
dω
= −i⟨π|(iω −iΩ −K)−2|1⟩. (10.38)
As a numerical example, we choose ω1 = 30,
ω2 = 60 and k+ = k/3, k−= 2k/3, where the pa-
rameter k allows us to vary the exchange rates
from slow to fast. This choice of k+ and k−im-
plies that π1 = 2/3 and π2 = 1/3 due to de-
tailed balance. The calculated derivative spectra
with the relaxation rate k ranging from 10 to 60
are shown in Fig. 10.8. For clarity, only the real
parts of the complex spectra are plotted. From
the ﬁgure, it is seen that for the slow exchange
rate (k = 10) the spectrum consists of two lines
centered at the two precession frequencies. The
different intensity of the lines reﬂects differences
in the equilibrium probabilities of the two con-
formations. When the exchange rate increases
(k = 15) the centers of the two lines approach
each other. At the same time the lines get broader.
The approach and broadening of the lines leads
to their eventual merger with further increase in
the exchange rate (k = 30). After that point, the
spectrum consists of only one line. Upon further
speed up of the exchange (k = 60) the center of
the single line shifts and its width decreases. For
even faster rates of exchange (not shown) there is
only one very narrow line centered at the average
frequency π1ω1 + π2ω2, which is equal to 40 in
our numerical example.

132
D. Sezer and B. Roux
Fig. 10.8 Derivative spectra simulated using Eq. (10.38)
with (from bottom to top) k = 10, 15, 30, 60. For clarity,
the spectra are shifted along the vertical axis, which cor-
responds to the intensity of the spectrum in arbitrary units
In summary, this simple example illustrates
that for motions with rates much faster than the
spectral width, W = |ω1 −ω2|, the spectrum re-
ﬂects the average of the magnetic properties. In
contrast, for motions with rates much slower than
the spectral width the magnetic properties do not
experience averaging due to the dynamics. For in-
termediate exchange rates the spectral line shape
is complex and its detailed structure shows great
sensitivity to the rate of exchange. It is exactly
in this motional regime that explicit simulations
with stochastic models become necessary for the
proper interpretation of the experimental situa-
tion. All the spectra in Fig. 10.3, for example, fall
in this regime.
10.5.2 Time Scales of the cw-ESR
Experiment
The width of the cw-ESR spectrum depends on
the ﬁeld at which the experiment is performed.
For B = 0.35 T the hyperﬁne contribution to the
propagator U(t,
t) in (10.32) dominates over
the Zeeman contribution. Thus, at X-band the
width is determined by the Azz component of
the hyperﬁne tensor as W ≈2Azz ≈90 G. When
the strength of the magnetic ﬁeld is increased to
B = 3.4 T, the anisotropy of the g tensor (multi-
plied by the ﬁeld) is comparable to 2Azz. Hence,
the Zeeman and hyperﬁne interactions contribute
almost equally to the spectral width, yielding
W ≈180 G. At even higher ﬁelds, the spectral
width is completely dominated by the anisotropy
of the g tensor, which increases linearly with the
ﬁeld strength. Hence, for B = 6.1 T the spectral
width can be estimated as W ≈320 G.
The relationship between a signal and its
Fourier transform implies that the width of a cw-
ESR spectrum, W, is inversely proportional to
the maximum time step, 
t, with which the clas-
sical dynamics should be followed: 
t = 2π/W.
A similar inverse proportionality holds between
the total duration of a dynamical trajectory, T ,
and the desired resolution of the cw-ESR spec-
trum, 
ω: T = 2π/
ω. When the frequency
axis is reported in units of magnetic ﬁeld, like in
Fig. 10.3, the conversion between magnetic ﬁeld
and angular frequency given in (10.25) needs to
be employed. With γe as given under Eq. (10.1)
and G0 ≈1, from g in (10.3) and the deﬁnition
(10.2), we conclude that 1 Gauss corresponds to
a time scale of roughly 360 ns.
Using this conversion factor and the spectral
widths estimated above, it can be deduced that
for the simulation of cw-ESR spectra at X-band,
the magnetization should be known roughly every

t ≲4 ns. The maximum allowable time step de-
creases to 
t ≲2 ns for W-band and 
t ≲1 ns
for G-band spectra. These estimates of 
t reﬂect
the temporal resolution with which the FID of the
transverse magnetization needs to be known. In
the simulation of cw-ESR spectra according to
the motional model (10.8), the time step of the
numerical integration has to be small enough to
faithfully follow not only the FID but the rota-
tional and MSM dynamics as well. Thus, the sim-
ulated stochastic process may impose additional
demands on the temporal resolution, further re-
ducing the values of 
t.
An extreme example of the discrepancy be-
tween the 
t required to follow the decay of the
magnetization and the time step of the classical
dynamics emerges in the approach (10.6), since
the trajectories coming from atomistic MD sim-
ulations are typically sampled about every δt =

10
Markov State and Diffusive Stochastic Models in Electron Spin Resonance
133
1 ps. In principle, one could use every snapshot
from the trajectories and integrate the spin dy-
namics with this time step according to (10.31).
However, the above estimates of 
t indicate that
such an approach is unnecessary and wasteful.
One option is to decimate the MD trajectories and
use snapshots separated by about a thousand steps
[12, 53]. An alternative that we prefer, which fol-
lows from the simple example in Sect. 10.5.1 and
can be justiﬁed rigorously [48, 49], is to aver-
age the magnetic tensors over a time window 
t
(
t ≫δt) along each MD trajectory.
For the motional model (10.8), the same logic
allows us to pre-average the magnetic tensors
over the fast librations of the spin label, visible in
the time-traces of its dihedral angles in Fig. 10.5.
Using the fragments of the MD trajectories as-
signed to a given Markovian (macro)state, the
magnetic tensors were averaged over the dynam-
ics of N relative to M for each state. Such pre-
averaging not only reduces the effective diagonal
values of the magnetic tensors in the nitroxide-
ﬁxed frame (cf. (10.3)), but also leads to nitrox-
ide frames which have state-dependent orienta-
tion relative to the protein frame. In fact, the state-
dependent “nitroxide frame” calculated in this
way is different for the g and A tensors since their
anisotropies average differently.
The conversion between magnetic ﬁeld and
time implies that a for a spectral resolution of

ω ≈1 G the FID has to be followed for T ≈
360 ns, which gives the necessary duration of a
single stochastic trajectory. For spectra broad-
ened by the molecular motion, like the ones
shown in Fig. 10.3, a less ﬁne resolution should
be sufﬁcient, thus bringing T down by a factor
of 3 to 4 (T ≈90–120 ns). The time scale T im-
plied by the spectral resolution should be com-
pared with the relaxation time scale τ1 ≳100 ns
associated with the rare transition of the disul-
ﬁde dihedral angle χ3 between the two stable
conformations m and p (Sect. 10.3.2). Since τ1
falls beyond the time scale relevant for cw-ESR
experiments at X-band and especially at higher
frequencies, we conclude that its precise value
is immaterial for the calculation of such spectra.
The example in Sect. 10.5.1 implies that cw-ESR
spectra can be simulated as a linear superposition
Table 10.4 Tumbling time scales, τD = 1/6D, associ-
ated with diffusion coefﬁcients D
D/106 s−1
10
18
25
40
τD/ns
17
9.3
6.7
4.2
of the separate contributions from the m and p
conformations of the spin label R1 weighted by
their relative populations. This justiﬁes the use of
umbrella sampling to determine the populations
of the m and p states (Sect. 10.3.2), without any
knowledge about the rate of their interconversion.
The considerations in the previous paragraphs
suggest that cw-ESR experiments are very sen-
sitive to motions in the time window of about
2–50 ns, which constitutes the middle of the es-
timated spectral time scale. Additional dynam-
ics falling outside this time window are expected
to have a lesser effect on the spectral line shape
and be largely inaccessible on the background
of the 2–50 ns motions. The time scales corre-
sponding to the DNA tumbling rates used in the
spectral simulations of Fig. 10.3 are compiled in
Table 10.4. Clearly, they all fall in the window
where the cw-ESR spectra are expected to be
strongly affected. The additional diffusion coefﬁ-
cient in Table 10.4, with τD = 9.3 ns, corresponds
to the tumbling of the protein T4 Lysozyme in so-
lution. On the basis of this time scale, we expect
that the rotational diffusion of the protein has to
be explicitly taken into account for quantitative
simulation of cw-ESR spectra from spin-labeled
T4 Lysozyme, to be examined in Sect. 10.5.3.
Let us use the developed intuition to rational-
ize the qualitative differences between the spec-
tra shown in Fig. 10.3. As already mentioned,
at X-band the effect of the g tensor is negligi-
ble and the spectral line shape is heavily domi-
nated by the hyperﬁne tensor. Since A is an ax-
ial tensor, any differences in the rate of mix-
ing of its components AN
xx = AN
yy by the rota-
tional diffusion of the macromolecule is incon-
sequential. This is the reason the spectra simu-
lated using D∥= 40 × 106 rad2/s (black) and
D∥= 10 × 106 rad2/s (blue) appear identical at
B = 0.34 T (Fig. 10.3A). In contrast, spectra at
B = 0.34 T are strongly inﬂuenced by differences
in the rate of mixing between the AN
xx = AN
yy

134
D. Sezer and B. Roux
components of the hyperﬁne tensor and AN
zz, as
illustrated by the spectra in Fig. 10.3A simulated
using D⊥= 10 × 106 rad2/s (black) and D⊥=
25 × 106 rad2/s (red). At W-band, the g-tensor
anisotropy inﬂuences the spectral line shape as
much as the hyperﬁne tensor. Because the g ten-
sor of the nitroxide distinguishes between all the
three directions of the coordinate axes, the high-
ﬁeld spectra are sensitive to the rates of mixing
induced by both D∥and D⊥, as clearly seen in
Fig. 10.3B.
By dwelling further on the spectra of Fig. 10.3
we hope to have convinced the reader that cw-
ESR spectra are very sensitive to both the di-
rectionality and the magnitude of the molecular
motions (reﬂecting the local structure) when they
fall in the spectral time scale of the experiment.
When the dynamics is either faster or slower than
the spectral time scale, the spectrum still carries
information about the average magnetic proper-
ties or the populations of the slowly exchanging
conformations, as demonstrated by the example
in Sect. 10.5.1. Therefore, quantitative compari-
son with cw-ESR spectra at several different fre-
quencies, from X- to W- to G-band, should pro-
vide an unprecedented check on the structural and
dynamical aspects of the internal spin-label dy-
namics captured by the MD simulations of T4
Lysozyme.
10.5.3 Multifrequency cw-ESR Spectra
of Spin-Labeled T4 Lysozyme
Although the MSMs of the spin label R1 at posi-
tions 72 and 131 on T4L were constructed on the
basis of the time-series of the ﬁve spin label tor-
sion angles (Sect. 10.3.2), the inﬂuence of the en-
vironment is implicitly incorporated in two ways.
First, the electrostatic and van der Waals interac-
tions with the protein and the solvent molecules
dictate which rotameric states of the spin label are
populated and to what extent. Due to the internal
ﬂexibility and amphiphilic nature of the spin la-
bel, the populations of its conformations are sen-
sitive to the subtle balance between various in-
teractions, and are hard to predict on the basis
of simpliﬁed steric and hydrodynamic arguments
[47, 54]. Second, explicit protein and solvent dy-
namics on time scales up to about 100 ps was
used to calculate pre-averaged magnetic tensors
for each of the states of the MSMs, as described
in Sect. 10.5.2. Therefore, in addition to the ex-
change between the rotamers, the rattling of the
nitroxide in the solvent cage and the local ther-
mal ﬂuctuations of the protein backbone (as op-
posed to larger scale conformational changes, e.g.
partial unfolding of the helices, etc.), are implic-
itly accounted for in the spectral simulations pre-
sented next.
Cw-ESR spectra for 72R1 and 131R1 in
T4 Lysozyme were calculated for three differ-
ent magnetic ﬁeld strengths—0.33 T, 3.4 T and
6.1 T—according to the motional model (10.8).
Isotropic rotational diffusion with diffusion con-
stant D = 18 × 106 rad/s (Table 10.4) was used
to account for the global tumbling of the protein.
In Figs. 10.9 and 10.10, the spectra calculated by
using separately the m and p subblocks of the es-
timated transition probability matrices are shown
on the left, and the ﬁnal spectra obtained by lin-
early mixing the FID decays of the m and p states
are shown on the right. For the three ﬁelds, the
spectra from the m and p conformations of 131R1
are quite similar to each other and to the exper-
imental spectra, with the difference increasing
slightly with the increase of the ﬁeld (Fig. 10.10).
The agreement between the calculated and the
experimental spectra is remarkably good over the
entire ﬁeld range. In the case of 72R1, the m and
p contributions to the spectra are markedly differ-
ent, with the latter being consistently more simi-
lar to the experimental spectrum for all the three
ﬁeld strengths (Fig. 10.9). At 0.33 T (9 GHz), the
p component by itself is basically identical to the
experimental spectrum, whereas adding 27 % of
the m component is essential for the good agree-
ment at the two higher ﬁelds.
By changing the ESR frequency from 9 GHz
to 170 GHz the time window of sensitivity of
the experiment is changed by about an order of
magnitude. Also, whereas at 9 GHz the spec-
trum is dominated by the hyperﬁne tensor, at
95 GHz the contribution of the g tensor be-
comes more signiﬁcant, and eventually domi-
nates at 170 GHz. Therefore, the quantitative

10
Markov State and Diffusive Stochastic Models in Electron Spin Resonance
135
Fig. 10.9 Experimental
spectra of 72R1 at 22 ◦C
(black). Left: Calculated
spectra of conformations m
(blue) and p (red); Right:
Spectra calculated by
mixing the m and p
conformations in the
speciﬁed ratio (green).
Simulation parameters
given in Ref. [50]
agreement of the calculated spectra with exper-
iment over the 9–170 GHz range is strongly sug-
gestive that the dynamics of the spin label in the
computer simulations is quite similar to the real
underlying dynamics.
A unique dynamical model cannot be inferred
on the basis of 9 GHz spectra alone. Multifre-
quency ESR analysis attempts to address this is-
sue by placing additional restrictions on the na-
ture of the microscopic dynamics. The constraints
presented by multifrequency spectra are impor-
tant, e.g., a single diffusional MOMD model is
unable to simultaneously ﬁt both the low and high
frequency spectra from T4L [3, 33]. Achieving a
simultaneous agreement is challenging even for
state-of-the-art ﬁtting approaches based on the
SRLS model, which also raise the question of
uniqueness of ﬁt, even with the additional restric-
tions imposed by multifrequency cw-ESR [56].
It is notable that the present results, which have
yielded spectra in excellent agreement with ex-
periment at three different frequencies, were gen-
erated from a single microscopic model without
any ﬁtting parameters or ad hoc empirical ad-
justement of the model.
10.6
Summary and Future Outlook
A novel methodological framework was elabo-
rated for the purpose of simulating cw-ESR spec-
tra of spin labeled proteins from all-atom MD
trajectories [49]. Within this framework, the in-
formation from multiple independent MD tra-
jectories is employed to construct an MSM of
the R1 dynamics in the space of its ﬁve dihe-
dral angles. Using the transition probability ma-
trix of the MSM determined from the MD simu-
lations, long stochastic trajectories including ro-
tational diffusion are generated to simulate real-
istic cw-ESR spectra [48]. This framework was
used to study the conformations and dynamics of

136
D. Sezer and B. Roux
Fig. 10.10 Experimental
spectra of 131R1 at 22 ◦C
(black). Left: Calculated
spectra of conformations m
(blue) and p (red); Right:
Spectra calculated by
mixing the m and p
conformations in the
speciﬁed ratio (green).
Simulation parameters
given in Ref. [50]
the spin label R1 at positions 72 and 131 in T4
Lysozyme. For the ﬁrst time, very good agree-
ment with multifrequency cw-ESR experiments
at three different magnetic ﬁeld strengths was ob-
tained. The atomically-detailed picture of the spin
label emerging from the MD simulations helps to
unify spectroscopic and crystallographic data and
provides useful insight into their molecular ori-
gins.
The MSMs constructed from the MD simu-
lations can be viewed as a natural extension of
the multicomponent SRLS model, in which the
spin label dynamics is modeled as a linear super-
position of several independent motional modes,
each characterized by a microscopic ordering po-
tential and a rotational diffusion tensor. It is our
hope that the overall perspective developed from
the MD simulations can help design better mo-
tional models tailored to the speciﬁc spin label
and biomolecule to which it is attached. Going
beyond a universal, generic stochastic model is
expected to be of crucial importance, given the
extensive applications of SDSL to diverse bio-
logical systems and the increased availability of
high-ﬁeld ESR.
Accurate calculations of multifrequency cw-
ESR spectra by mapping MD trajectories onto
MSMs are extremely challenging because they
require that a whole host of molecular motions
be accounted for correctly, not only in terms of
their amplitudes and resulting equilibrium pop-
ulations, but also in terms of their dynamical
timescales. While the observables from many ex-
perimental methods (e.g. FRET, NMR, hydrogen
exchange) are often dominated by one or a few
relaxation modes, multifrequency cw-ESR spec-
tra provides perhaps one of the rare applications
of the methodology where a large fraction of the
set of eigenvalues and eigenvectors of the MSM
rate matrix is truly put to the test. In this context,
the present success in quantitatively reproduc-
ing experimental multifrequency cw-ESR spec-

10
Markov State and Diffusive Stochastic Models in Electron Spin Resonance
137
tra, achieved without any empirical adjustment, is
truly remarkable. From a broader perspective, the
ESR/MSM methodology elaborated here offers a
powerful route to test and validate the ability of
existing force ﬁelds to reproduce both structural
and dynamical aspects of the molecular motions
as reported by the spin label. It will be of great in-
terest to carry out additional ESR/MSM simula-
tions to cover a range of experimental conditions
(e.g., temperature, viscosity) to further test their
ability to predict cw-ESR spectra under different
conditions.
References
1. Abragam A (1961) The principles of nuclear mag-
netism. Oxford University Press, New York
2. Anderson PW (1954) A mathematical model for the
narrowing of spectral lines by exchange or motion.
J Phys Soc Jpn 9(3):316–339
3. Barnes JP, Liang Z, Mchaourab HS, Freed JH,
Hubbell WL (1999) A multifrequency electron spin
resonance study of T4 Lysozyme dynamics. Biophys
J 76(23):298–3306
4. Beier C, Steinhoff HJ (2006) A structure-based simu-
lation approach for electron paramagnetic resonance
spectra using molecular and stochastic dynamics sim-
ulations. Biophys J 91:2647–2664
5. Bennati M, Prisner TF (2005) New developments in
high ﬁeld electron paramagnetic resonance with ap-
plications in structural biology. Rep Prog Phys 68(2)
6. Borbat PP, Costa-Filho AJ, Earle KA, Moscicki JK,
Freed JH (2001) Electron spin resonance in studies of
membranes and proteins. Science 291:266–269
7. Budil DE, Lee S, Saxena S, Freed JH (1996)
Nonlinear-least-squares analysis of slow-motion EPR
spectra in one and two dimensions using a modiﬁed
Levenberg-Marquardt algorithm. J Magn Reson, Ser
A 120:155–189
8. Budil DE, Sale KL, Khairy KA, Fajer PG (2006) Cal-
culating slow-motional electron paramagnetic reso-
nance spectra from molecular dynamics using a dif-
fusion operator approach. J Phys Chem A 110:3703–
3713
9. Cekan P, Sigurdsson ST (2009) Identiﬁcation of
single-base mismatches in duplex DNA by EPR spec-
troscopy. J Am Chem Soc 131(50):18,054–18,056
10. Columbus L, Hubbell WL (2002) A new spin on pro-
tein dynamics. Trends Biochem Sci 27:288–295
11. Columbus L, Kalai T, Jeko J, Hideg K, Hubbell WL
(2001) Molecular motion of spin labeled side chains
in α-helices: analysis by variation of side chain struc-
ture. Biochemistry 40:3828–3846
12. DeSensi SC, Rangel D, Lybrand TP, Hustedt EJ
(2008) The calculation of nitroxide cw-EPR spectra
from Brownian dynamic trajectories and molecular
dynamics simulations. Biophys J 94(10):3798–3809
13. Earle KA, Dzikovski B, Hofbauer W, Moscicki JK,
Freed JH (2005) High-frequency ESR an ACERT.
Magn Reson Chem 43:S256–S266
14. Eviatar H, van Faassen E, Levine Y, Hoult D (1994)
Time-domain simulation of ESR spectra of nitroxide
spin probes. Chem Phys 181:369–376
15. Eviatar H, van der Heide U, Levine YK (1995) Com-
puter simulations of the electron spin resonance spec-
tra of steroid and fatty acid nitroxide probes in bilayer
systems. J Chem Phys 102:3135–3145
16. Fanucci GE, Caﬁso DS (2006) Recent advances and
applications of site-directed spin labeling. Curr Opin
Struct Biol 16:644–653
17. Fedchenia II, Westlund PO, Cegrell U (1993) Brown-
ian dynamics simulation of restricted molecular diffu-
sion. The symmetric and deformed cone models. Mol
Simul 11:373–393
18. Fleissner MR, Cascio D, Hubbell WL (2009) Struc-
tural origin of weakly ordered nitroxide motion in
spin-labeled proteins. Protein Sci 18(5):893–908
19. Freed JH (1976) Theory of slow motional ESR spec-
tra for nitroxides. In: Berliner LJ (ed) Spin labeling:
theory and application. Academic Press, New York,
pp 53–132
20. Freed JH (2000) New technologies in electron spin
resonance. Annu Rev Phys Chem 51:655–689
21. Guo Z, Cascio D, Hideg K, Kalai T, Hubbell WL
(2007) Structural determination of nitroxide motion
in spin-labeled proteins: tertiary contact and solvent-
inaccessible sites in helix G of T4 Lysozyme. Protein
Sci 16:1069–1086
22. Hakansson P, Westlund PO, Lindahl E, Edholm O
(2001) A direct simulation of EPR slow-motion spec-
tra of spin labelled phospholipids in liquid crystalline
bilayers based on a molecular dynamics simulation of
the lipid dynamics. Phys Chem Chem Phys 3:5311–
5319
23. Halle B (2009) The physical basis of model-free anal-
ysis of NMR relaxation data from proteins and com-
plex ﬂuids. J Chem Phys 131(22):224,507–224,522
24. Hartigan JA (1975) Clustering algorithms. Wiley,
New York
25. Jiao D, Barﬁeld M, Combariza JE, Hruby VJ (1992)
Ab initio molecular orbital studies of the rotational
barriers and the sulfur-33 and carbon-13 chemical
shieldings for dimethyl disulﬁde. J Am Chem Soc
114(10):3639–3643
26. Klare JP, Steinhoff HJ (2009) Spin labeling EPR.
Photosynth Res 102(2–3):377–390
27. Krstic I, Endeward B, Margraf D, Marko A, Prisner
TF (2012) Structure and dynamics of nucleic acids.
Top Curr Chem 321:159–198
28. Kubo R (1954) Note on the stochastic theory of reso-
nance absorption. J Phys Soc Jpn 9(6):935–944
29. Kubo R (1969) A stochastic theory of line shape. Adv
Chem Phys 15:101–127

138
D. Sezer and B. Roux
30. Kuprusevicius E, White G, Oganesyan VS (2011)
Prediction of nitroxide spin label EPR spectra from
MD trajectories: application to myoglobin. Faraday
Discuss 148:283–298
31. Langen R, Oh KJ, Cascio D, Hubbell WL (2000)
Crystal structures of spin labeled T4 Lysozyme mu-
tants: implications for the interpretation of EPR spec-
tra in terms of structure. Biochemistry 39:8396–8405
32. Levitt MH (2008) Spin dynamics: basics of nuclear
magnetic resonance, 2nd edn. Wiley, Chichester
33. Liang Z, Lou Y, Freed JH, Columbus L, Hubbell
WL (2004) A multifrequency electron spin reso-
nance study of T4 Lysozyme dynamics using the
slowly relaxing local structure model. J Phys Chem
B 108:17,649–17,659
34. Maragakis P, Lindorff-Larsen K, Eastwood MP,
Dror RO, Klepeis JL, Arkin IT, Jensen MO, Xu
H, Trbovic N, Friesner RA, Palmer AG, Shaw DE
(2008) Microsecond molecular dynamics simulation
shows effect of slow loop dynamics on backbone
amide order parameters of proteins. J Phys Chem B
112(19):6155–6158
35. Mchaourab HS, Kalai T, Hideg K, Hubbell WL
(1999) Motion of spin-labeled side chains in T4
Lysozyme: effect of side chain structure. Biochem-
istry 38:2947–2955
36. Mchaourab HS, Lietzow MA, Hideg K, Hubbell WL
(1996) Motion of spin-labeled side chains in T4
Lysozyme. Correlation with protein structure and dy-
namics. Biochemistry 35:7692–7704
37. Mchaourab HS, Steed PR, Kazmier K (2011) Toward
the fourth dimension of membrane protein structure:
insight into dynamics from spin-labeling EPR spec-
troscopy. Structure 19(11):1549–1561
38. Meirovitch E, Nayeem A, Freed JH (1984) Analysis
of protein-lipid interactions based on model simula-
tions of electron spin resonance spectra. J Phys Chem
88:3454–3465
39. Norris JR (1997) Markov chains. Cambridge Univer-
sity Press, Cambridge
40. Polimeno A, Freed JH (1993) A many-body stochas-
tic approach to rotational motions in liquids. Adv
Chem Phys 83:89–210
41. Polimeno A, Freed JH (1995) Slow motional ESR
in complex ﬂuids: the slowly relaxing local struc-
ture model of solvent cage effects. J Phys Chem
99:10,995–11,006
42. Rabiner LR (1989) A tutorial on hidden Markov mod-
els and selected applications in speech recognition.
Proc IEEE 77:257–286
43. Redﬁeld AG (1957) On the theory of relaxation pro-
cesses. IBM J Res Dev 1:19–31
44. Robinson BH, Slutsky LJ, Auteri FP (1992) Direct
simulation of continuous wave electron paramagnetic
resonance spectra from Brownian dynamics trajecto-
ries. J Chem Phys 96:2609–2616
45. Roux B (1994) The calculation of the potential of
mean force using computer simulations. Comput
Phys Commun 91:275–282
46. Schneider DJ, Freed JH (1989) Spin relaxation and
motional dynamics. Adv Chem Phys 73:387–527
47. Sezer D, Freed JH, Roux B (2008) Parametrization,
molecular dynamics simulation, and calculation of
electron spin resonance spectra of a nitroxide spin
label on a polyalanine alpha-helix. J Phys Chem B
112(18):5755–5767
48. Sezer D, Freed JH, Roux B (2008) Simulating elec-
tron spin resonance spectra of nitroxide spin labels
from molecular dynamics and stochastic trajectories.
J Chem Phys 128(16):165,106–165,116
49. Sezer D, Freed JH, Roux B (2008) Using Markov
models to simulate electron spin resonance spectra
from molecular dynamics trajectories. J Phys Chem
B 112(35):11,014–11,027
50. Sezer D, Freed JH, Roux B (2009) Multifrequency
electron spin resonance spectra of a spin-labeled pro-
tein calculated from molecular dynamics simulations.
J Am Chem Soc 131(7):2597–2605
51. Sezer D, Sigurdsson ST (2011) Simulating electron
spin resonance spectra of macromolecules labeled
with two dipolar-coupled nitroxide spin labels from
trajectories. Phys Chem Chem Phys 13(28):12,785–
12,797
52. Steinhoff HJ, Hubbell W (1996) Calculation of elec-
tron paramagnetic resonance spectra from Brownian
dynamics trajectories: application to nitroxide side
chains in proteins. Biophys J 71:2201–2212
53. Stoica I (2004) Using molecular dynamics to simulate
electronic spin resonance spectra of T4 Lysozyme.
J Phys Chem B 108(5):1771–1782
54. Tombolato F, Ferrarini A, Freed JH (2006) Dynamics
of nitroxide side chain in spin-labeled proteins. J Phys
Chem B 110:26,248–26,259
55. Usova N, Westlund PO, Fedchenia I (1995) Direct
simulation of slow-motion electron spin resonance
spectra by solving the stochastic Liouville equation
in time domain with stochastic dynamics in the form
of trajectories. J Chem Phys 103:96–103
56. Zhang Z, Fleissner MR, Tipikin DS, Liang Z, Mosci-
cki JK, Earle KA, Hubbell WL, Freed JH (2010) Mul-
tifrequency electron spin resonance study of the dy-
namics of spin labeled T4 Lysozyme. J Phys Chem B
114(16):5503–5521

11
Software for Building Markov State
Models
Gregory R. Bowman and Frank Noé
11.1
MSMBuilder
MSMBuilder is an open source software pack-
age for constructing Markov state models. The
software is primarily written in python to facili-
tate rapid integration of new methods and read-
able implementations of existing methods. Time-
sensitive routines are implemented in C with
python wrappers to enhance the performance of
the software. At the time of this writing, stable
public releases of MSMBuilder are available via
the SimTk software repository (https://simtk.org/
home/msmbuilder; http://msmbuilder.org). The
current development build is also available via
GitHub (https://github.com/SimTk/msmbuilder).
G.R. Bowman (B)
Departments of Molecular & Cell Biology and
Chemistry, University of California, Berkeley, CA 94720,
USA
e-mail: gregoryrbowman@gmail.com
F. Noé
Institut für Mathematik II, Freie Universität Berlin,
Arnimallee 2-6, 14195 Berlin, Germany
11.2
EMMA
EMMA is a software library and set of command-
line tools for constructing, validating and analyz-
ing Markov state models. The library is written
in Java, thus being fast and platform-independent
without requiring local compilation or installa-
tion. At the time of this writing, stable public
releases of EMMA are available via the SimTk
software
repository
(https://simtk.org/home/
emma). The Java source code is available on re-
quest. As soon as publicly available, it will be
linked on the simtk.org website.
G.R. Bowman et al. (eds.), An Introduction to Markov State Models and Their Application to Long Timescale
Molecular Simulation, Advances in Experimental Medicine and Biology 797,
DOI 10.1007/978-94-007-7606-7_11, © Springer Science+Business Media Dordrecht 2014
139

