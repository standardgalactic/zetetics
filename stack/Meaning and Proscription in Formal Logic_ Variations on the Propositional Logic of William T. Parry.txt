Trends in Logic 49
Thomas Macaulay Ferguson
Meaning and 
Proscription in 
Formal Logic
Variations on the Propositional Logic of 
William T. Parry

Trends in Logic
Volume 49

Series Scope
TRENDS IN LOGIC
Studia Logica Library
Editor-in-Chief
Heinrich Wansing, Ruhr-University Bochum, Germany
Editorial Assistant
Andrea kruse, Ruhr-University Bochum, Bochum, Germany
Editorial Board
Aldo Antonelli, University of California, Davis, USA
Arnon Avron, University of Tel Aviv, Israel
Katalin Bimbó, University of Alberta, Canada
Giovanna Corsi, University of Bologna, Italy
Janusz Czelakowski, University of Opole, Poland
Roberto Giuntini, University of Cagliari, Italy
Rajeev Goré, Australian National University, Canberra
Andreas Herzig, University of Toulouse, France
Andrzej Indrzejczak, University of Łodz, Poland
Daniele Mundici, University of Florence, Italy
Sergei Odintsov, Sobolev Institute of Mathematics, Novosibirsk, Russia
Ewa Orłowska, Institute of Telecommunications, Warsaw, Poland
Peter Schroeder-Heister, University of Tübingen, Germany
Yde Venema, University of Amsterdam, The Netherlands
Andreas Weiermann, University of Gent, Belgium
Frank Wolter, University of Liverpool, UK
Ming Xu, Wuhan University, PR China
Founding editor
Ryszard Wójcicki, Polish Academy of Sciences, Warsaw
VOLUME 49
The book series Trends in Logic covers essentially the same areas as the journal Studia Logica, that is,
contemporary formal logic and its applications and relations to other disciplines. The series aims at publishing
monographs and thematically coherent volumes dealing with important developments in logic and presenting
signiﬁcant contributions to logical research.
Volumes of Trends in Logic may range from highly focused studies to presentations that make a subject
accessible to a broader scientiﬁc community or offer new perspectives for research. The series is open to
contributions devoted to topics ranging from algebraic logic, model theory, proof theory, philosophical logic,
non-classical logic, and logic in computer science to mathematical linguistics and formal epistemology. This
thematic spectrum is also reﬂected in the editorial board of Trends in Logic. Volumes may be devoted to speciﬁc
logical systems, particular methods and techniques, fundamental concepts, challenging open problems, different
approaches to logical consequence, combinations of logics, classes of algebras or other structures, or
interconnections between various logic-related domains. Types of Books to be Published and Publication
Frequency It is envisaged that the majority of volumes will be single or multiple authored monographs, although
well-edited volumes on particular topics are also welcome. Typical books will average 250 printed pages.
Publication of two to four volumes per year is planned. Authors interested in proposing a completed book or a
manuscript in progress or in conception can either consult the Publisher or one of the Editors.
More information about this series at http://www.springer.com/series/6645

Thomas Macaulay Ferguson
Meaning and Proscription
in Formal Logic
Variations on the Propositional Logic
of William T. Parry
123

Thomas Macaulay Ferguson
Cycorp, Inc.
Austin, TX
USA
and
Saul Kripke Center
New York, NY
USA
ISSN 1572-6126
ISSN 2212-7313
(electronic)
Trends in Logic
ISBN 978-3-319-70820-1
ISBN 978-3-319-70821-8
(eBook)
https://doi.org/10.1007/978-3-319-70821-8
Library of Congress Control Number: 2017957973
© Springer International Publishing AG 2017
This work is subject to copyright. All rights are reserved by the Publisher, whether the whole or part
of the material is concerned, speciﬁcally the rights of translation, reprinting, reuse of illustrations,
recitation, broadcasting, reproduction on microﬁlms or in any other physical way, and transmission
or information storage and retrieval, electronic adaptation, computer software, or by similar or dissimilar
methodology now known or hereafter developed.
The use of general descriptive names, registered names, trademarks, service marks, etc. in this
publication does not imply, even in the absence of a speciﬁc statement, that such names are exempt from
the relevant protective laws and regulations and therefore free for general use.
The publisher, the authors and the editors are safe to assume that the advice and information in this
book are believed to be true and accurate at the date of publication. Neither the publisher nor the
authors or the editors give a warranty, express or implied, with respect to the material contained herein or
for any errors or omissions that may have been made. The publisher remains neutral with regard to
jurisdictional claims in published maps and institutional afﬁliations.
Printed on acid-free paper
This Springer imprint is published by Springer Nature
The registered company is Springer International Publishing AG
The registered company address is: Gewerbestrasse 11, 6330 Cham, Switzerland

For Mirabel, Rowan, and Lily

Preface
I think it is fair to say that a crucial element in the maturation of a ﬁeld of
nonclassical logics is the existence of a resource that serves to demarcate its
motivations, scope, and history. The existence of volumes such as Relevant Logics
and Their Rivals and Entailment: The Logic of Relevance and Necessity provides a
sense of cohesion to the ﬁeld of relevant logic. A researcher interested in intu-
itionistic logic can be directed to Elements of Intuitionism, while the important
points of conditional logic are cataloged in Topics in Conditional Logic. Without
such a resource, frequently the progenitor of some family of nonclassical logics has
written forcefully and abundantly enough to ensure that the shape of the family is
clear.
With respect to this criterion, the ﬁeld of containment logic—the family of
deductive systems whose exemplar is William T. Parry’s logic of analytic impli-
cation—had the cards stacked against it from the onset. The initial appearance of
analytic implication in 1933 was an abstract including little more than a list of
axioms, a consistency proof, and some remarks from Gödel, who had taken enough
of an interest in Parry’s work to make some conjectures concerning the system.
During his lifetime, Parry returned to the subject in print only brieﬂy, promoting it
in his 1968 contribution to the Library of Living Philosophers on his teacher, C.
I. Lewis, and in a small 1976 piece in the short-livedRelevance Logic Newsletter.
Parry’s fullest exposition on containment logic in print arrived only after his death,
appearing in a 1989 contribution to Directions in Relevant Logic. Even this piece
omits Parry’s best arguments from his dissertation. In the absence of Parry’s
stewardship, the ﬁeld of containment logic withstood a half of a century of often
unsympathetic and frequently ﬂawed critiques without the luxury of an earnest
defense.
But in spite of its detractors, Parry’s analytic implication—and the broader ﬁeld
of containment logic—deserves more than a footnote in the history of logic. Since I
started studying the ﬁeld, this has been illustrated most forcefully by the number of
distinct roads that ultimately lead to a containment logic. Many of the deductive
systems in the constellation of Parry’s logic have been independently discovered
and introduced into the literature multiple times; in one of these cases, the system
vii

appeared independently in different guises no fewer than ﬁve times. And I know that
yet more redundancies have been prevented on occasions in which, e.g., a talk on
Parry’s work alerted an audience member that a system that he or she had devel-
oped had appeared as a containment logic.
Much of this redundancy could have been avoided that had containment logic
received a Relevant Logics and Their Rivals of its own. With such a resource,
perhaps the effort would have been directed toward developing the ﬁeld, rather than
creating the proverbial wheel again and again.
This volume, I will concede, is not intended to be that vade mecum whose
absence I am lamenting. There remain, I think, too many open questions to establish
a serviceable atlas at this point. Aspects of the presentation of Halldén’s S0,
Sylvan’s relevant containment logics, and systems described in this work like
PAC—all close cousins to Parry’s analytic implication—still lack crucial details.
My aim for the following work, rather, is to make the case that such a volume is
needed, that the research to ﬁll in the necessary lacunae is warranted, and that the
existence of such a volume—whoever produces it—will ultimately prove a boon to
logicians working in a wide variety of ﬁelds.
In short, Parry’s intuitions are deserving of further research and study, and I hope
that the following pages serve to drive some attention towards their development.
Austin, Texas
Thomas Macaulay Ferguson
October 2017
viii
Preface

Acknowledgements
The following work owes a great deal to the support of a legion of friends, family,
and colleagues.
Above all, I am grateful for the patience and persistence of my wife Virginia and
our children Mirabel and Rowan. They have shared the consequences of pursuing
philosophy—the inevitable sleepless nights, long absences, and too-frequently
empty bank accounts—alongside me year after year without falter. I also owe a debt
to the rest of my family—Bill and Marsha Smith, Gillum Ferguson, Susan
Ferguson, Richard Ferguson, and Richard and Carol Kropp—for a great deal of
support and encouragement.
Being able to study logic in New York—home to so many outstanding logicians
—was a remarkable privilege and I owe a signiﬁcant debt to every member of the
New York logic community. In particular, I cannot overstate the importance of the
inﬂuence of Profs. Graham Priest, Heinrich Wansing, Kit Fine, Sergei Artemov,
and Melvin Fitting, whose encouragement, advice, and conﬁdence have been
indispensable to the composition of this work. Beyond the input of these individ-
uals, the contents of the present work have been sharpened and reﬁned by the many
pages of comments and criticism I have received from anonymous referees; that
they were anonymous does not lessen my gratitude for their help.
I also am grateful to Oxford University Press, Taylor and Francis, and the IEEE
Computer Society for permission to reprint the portions of this work that had
previously appeared in print.
Finally, I would like to thank Prof. Jon Jarrett, who ﬁrst showed me how
rewarding philosophy can be.
ix

Contents
1
Introduction: The Proscriptive Principle . . . . . . . . . . . . . . . . . . . . . .
1
1.1
The Proscriptive Principle and Its Rivals . . . . . . . . . . . . . . . . . . .
1
1.1.1
Parry’s Proscriptive Principle . . . . . . . . . . . . . . . . . . . . . .
4
1.1.2
Proscription as ‘Conceptivism’ . . . . . . . . . . . . . . . . . . . . .
9
1.2
Overview of the Material . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
13
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
14
2
Nonsense and Proscription . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
17
2.1
Introduction and Semantical Preliminaries . . . . . . . . . . . . . . . . . .
17
2.2
Nonsense Logics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
18
2.2.1
Semantic Paradoxes . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
19
2.2.2
Positivism and Veriﬁability . . . . . . . . . . . . . . . . . . . . . . .
20
2.2.3
Category Mistakes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
22
2.2.4
Many-Valued Semantics for Two Nonsense Logics . . . . . .
23
2.3
Two Strategies for Containment . . . . . . . . . . . . . . . . . . . . . . . . .
25
2.3.1
Containment Through Connexivity: Johnson’s RC . . . . . .
25
2.3.2
Containment Through Paraconsistency:
The System Sfde . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
29
2.4
The Role of Sfde in Paraconsistent Parry Systems . . . . . . . . . . . .
32
2.5
Conclusions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
36
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
37
3
Metaphysical Considerations on State Space Semantics . . . . . . . . . .
41
3.1
State Space Semantics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
42
3.1.1
Facts and Their “Philosophical Entourage” . . . . . . . . . . . .
42
3.1.2
Fine’s Truthmaker Semantics . . . . . . . . . . . . . . . . . . . . . .
44
3.1.3
Validity and Consequence: Two Systems . . . . . . . . . . . . .
49
3.2
Correia on Factual Equivalence . . . . . . . . . . . . . . . . . . . . . . . . . .
52
3.2.1
Correia’s Logic of Factual Equivalence . . . . . . . . . . . . . . .
53
3.2.2
Correia’s Rejection of Distribution . . . . . . . . . . . . . . . . . .
54
xi

3.2.3
Hypernonsensicality . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
55
3.2.4
Factual Equivalence Without Hypernonsense . . . . . . . . . . .
57
3.3
Restall on Truthmaking. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
59
3.3.1
Restall’s Truthmaker Semantics . . . . . . . . . . . . . . . . . . . .
59
3.3.2
Worlds, Again . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
62
3.3.3
The Emergence of RMfde . . . . . . . . . . . . . . . . . . . . . . . .
64
3.4
Concluding Remarks. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
69
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
70
4
A Computational Interpretation of Conceptivism . . . . . . . . . . . . . . .
73
4.1
Formal Remarks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
73
4.1.1
A Family of !-Parry Deductive Systems . . . . . . . . . . . . .
74
4.1.2
A Family of ‘-Parry Deductive Systems . . . . . . . . . . . . . .
76
4.2
The Failure of Addition . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
79
4.2.1
Meaninglessness . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
79
4.2.2
Intensional Disjunction. . . . . . . . . . . . . . . . . . . . . . . . . . .
80
4.2.3
Free Choice Disjunction . . . . . . . . . . . . . . . . . . . . . . . . . .
82
4.2.4
Cut down Disjunction . . . . . . . . . . . . . . . . . . . . . . . . . . .
84
4.3
Towards a Computational Interpretation . . . . . . . . . . . . . . . . . . . .
85
4.3.1
Ill-Formedness . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
87
4.3.2
Declaration of Variables . . . . . . . . . . . . . . . . . . . . . . . . . .
89
4.3.3
Three Concrete Cases . . . . . . . . . . . . . . . . . . . . . . . . . . .
90
4.4
Enriching the Interpretation . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
94
4.4.1
Conceptivism and Propositional Dynamic Logic . . . . . . . .
94
4.4.2
An Intuitionistic Conceptivist Logic . . . . . . . . . . . . . . . . .
97
4.5
Conclusions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
102
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
103
5
Faulty Belnap Computers and Subsystems of Efde . . . . . . . . . . . . . .
107
5.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
108
5.2
Three First-Degree Logics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
108
5.2.1
First-Degree Entailment Efde . . . . . . . . . . . . . . . . . . . . . .
109
5.2.2
Single Address Faulty Efde . . . . . . . . . . . . . . . . . . . . . . .
110
5.2.3
Two Address Faulty Efde . . . . . . . . . . . . . . . . . . . . . . . . .
112
5.3
Angell’s Analytic Containment AC . . . . . . . . . . . . . . . . . . . . . . .
114
5.3.1
Correia Semantics for Analytic Containment . . . . . . . . . . .
115
5.3.2
Equivalence of NC and AC . . . . . . . . . . . . . . . . . . . . . . .
117
5.4
Steps Forward . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
123
5.4.1
The Gödel-Fine Analysis of AC . . . . . . . . . . . . . . . . . . . .
123
5.4.2
Extending to Higher Degree Formulae . . . . . . . . . . . . . . .
125
5.5
Conclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
129
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
130
xii
Contents

6
Cut-Down Operations on Multilattices . . . . . . . . . . . . . . . . . . . . . . .
133
6.1
Introduction: Bilattices and Cut-Downs . . . . . . . . . . . . . . . . . . . .
134
6.2
Cut-Down Operations on Bilattices . . . . . . . . . . . . . . . . . . . . . . .
136
6.2.1
Logical Bilattices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
136
6.2.2
Sfde on Bilattices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
137
6.3
NINE2 and AC . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
142
6.4
Cut-Down Operations on Trilattices . . . . . . . . . . . . . . . . . . . . . . .
145
6.4.1
Generalizations of Cut-Down Operations. . . . . . . . . . . . . .
147
6.4.2
Some Properties of Triﬁlters . . . . . . . . . . . . . . . . . . . . . . .
149
6.5
Analytic Logic on Trilattices . . . . . . . . . . . . . . . . . . . . . . . . . . . .
151
6.5.1
Sfde on Trilattices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
151
6.5.2
Interlude: Analytic Containment and Sfde . . . . . . . . . . . . .
154
6.5.3
AC on Trilattices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
156
6.6
Future Directions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
160
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
161
7
Correia Semantics Revisited . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
163
7.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
163
7.2
Analytic Containment and Correia Semantics . . . . . . . . . . . . . . . .
164
7.2.1
Semantical Preliminaries . . . . . . . . . . . . . . . . . . . . . . . . .
164
7.2.2
Correlating the Two Semantics . . . . . . . . . . . . . . . . . . . . .
165
7.2.3
A General Characterization Lemma . . . . . . . . . . . . . . . . .
166
7.3
Correia Models and Other Propositional Logics . . . . . . . . . . . . . .
167
7.3.1
First-Degree Entailment . . . . . . . . . . . . . . . . . . . . . . . . . .
167
7.3.2
‘Analytic’ Extensions . . . . . . . . . . . . . . . . . . . . . . . . . . . .
169
7.3.3
Non-‘Analytic’ Extensions . . . . . . . . . . . . . . . . . . . . . . . .
171
7.3.4
Correia’s Characterization of Classical Logic. . . . . . . . . . .
175
7.4
Conclusions and Future Research . . . . . . . . . . . . . . . . . . . . . . . .
177
7.4.1
Extensions of AC . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
177
7.4.2
Clauses and Clutters . . . . . . . . . . . . . . . . . . . . . . . . . . . .
180
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
182
8
Concluding Remarks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
185
8.1
Reﬁning the Notion of Content . . . . . . . . . . . . . . . . . . . . . . . . . .
186
8.1.1
The Content of Entailments . . . . . . . . . . . . . . . . . . . . . . .
186
8.1.2
Quantiﬁcation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
188
8.2
Related Deductive Calculi . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
189
8.2.1
Dual Systems . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
189
8.2.2
Other Parry Systems . . . . . . . . . . . . . . . . . . . . . . . . . . . .
190
8.3
Conclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
193
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
194
Author Index . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
195
Subject Index . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
197
Contents
xiii

Chapter 1
Introduction: The Proscriptive Principle
Abstract This chapter provides the necessary background for the broader investi-
gation into deductive calculi related to William Parry’s logic of analytic implication.
The properties that play a fundamental role in the are deﬁned along with historical
background. In particular, the philosophical intuitions driving Parry to the develop-
ment of containment logics—along with the most important objections to Parry’s
intuitions—are introduced and discussed.
1.1
The Proscriptive Principle and Its Rivals
The analogy between inference and mereological containment goes at least back
to Aristotle, whose discussion in the Prior Analytics motivates the validity of the
syllogism by way of talk of parts and wholes.
When three terms are so related to one another that the last is wholly contained in the middle
and the middle is wholly contained in or excluded from the ﬁrst, the extremes must admit
of perfect syllogism. By ‘middle term’ I mean that which both is contained in another and
contains another in itself... and by ‘extremes’ (a) that which is contained in another and (b)
that in which another is contained. [5, p. 209]
On this picture, the application of syllogistic is merely the analysis of concepts, a
term that presupposes—through the root ¢n£ + lÚw —a mereological background.
Considering the backdrop of class logic that ﬁgures so heavily in extensional
syllogistic, such an analogy is perhaps inevitable. But the more general mereological
analogy that logical inference in general is a process that breaks up a statement
into its constituent parts ﬁnds expression in many discussions of inferences between
propositions. For example, as reported by William and Martha Kneale, one of the
four competing interpretations of the conditional described by Sextus Empiricus is
a relation of containment:
And those who judge by implication say that a true conditional is one whose consequent is
contained potentially in its antecedent. [35, p. 129]
© Springer International Publishing AG 2017
T. M. Ferguson, Meaning and Proscription in Formal Logic,
Trends in Logic 49, https://doi.org/10.1007/978-3-319-70821-8_1
1

2
1
Introduction: The Proscriptive Principle
One of the most explicit articulations of this analogy is found in Immanuel Kant’s
characterization of an ‘analytic’ judgment. Certainly—as will be reﬂected in the
sequel—Kant’s name is uniformly the ﬁrst to be invoked when this subject is taken
up. Kant, recall, determines that a judgment “A is B” is analytic precisely in those
cases in which:
the predicate B belongs to the subject A as something that is (covertly) contained in this
concept A. [33, p. 130]
In more dynamic—and colorful—terms, Kant goes on to characterize the analyticity
of a judgment in terms of an activity, or an operation carried out on concepts:
One could also call [analytic judgments] judgments of clariﬁcation... since through the
predicate the former do not add anything to the concept of the subject, but only break it up
by means of analysis into its component concepts, which were already thought in it (though
confusedly). [33, p. 130]
In its identiﬁcation of a particular species of inference with the containment of con-
cepts, Kant’s criterion is essentially the assertion that there exists a correspondence
between the behavior of logical inference and background assumptions concerning
not only an underlying class theory but also a mereology of concepts or meanings.
To investigate this analogy with further rigor, of course, demands that the nature of
relata of this containment relation—concepts, semantic content, meanings—be made
more precise. Considering the sheer diversity of competing interpretations of Kant’s
project, it is hardly surprising that analyses of this relationship between inference
and content are just as diverse.
The relationship between inference and the content or meaning of a sentence was
taken up frequently during the early development of modern analytic philosophy.
As Ken Gemes identiﬁes in [28], Rudolph Carnap considers the class of logical
consequences of a sentence A (modulo classical logic) to be the essential ingredient
in determining its content. He writes:
the class of non-valid consequences of a given sentence is called the content of this sentence.
[12, p. 42]
In other words, the content of a sentence A is given by the statements that follow
from it in a non-vacuous manner.
Like Carnap, Karl Popper’s characterization of a statement’s content—also related
by Gemes in [28]—places an emphasis on the role of classical inference and is similar
in its character.
By logical content (or the consequence class of [A]) we mean the class of all statements that
follow from [A]. [44, p. 385]
Although both recognize a relationship between some notion of content and logi-
cal inference, the nature of Carnap and Popper’s analyses diverge from Kant in an
important way. Because Kant characterizes analyticity of an inference in terms of
the structure and relationships between the concepts involved, the semantic notion
is clearly taken as the primitive notion. In contrast, both Carnap and Popper’s analy-
ses (considered by Gemes in [28] to be the ‘traditional’ notion) treat content as a

1.1 The Proscriptive Principle and Its Rivals
3
class of statements whose extension is determined—at least, in part—by the more
fundamental notion of classical logic.
After Gemes himself outlined a novel theory of content in [28, 29], Gemes argued
that the earlier theories of Carnap and Popper were too generous with respect to their
respective notions of content for their endorsement of the following property:
where content is identiﬁed with consequence class, for any A and B, as long as ¬A does not
entail B, there will always be a content part of A that ‘includes’ B, namely, [the content of]
A ∨B. [28, p. 600]
Gemes cites as an unfortunate consequence of this ‘traditional view’ that
not only do Relativity theory and Newtonian mechanics share common content but also so
do Relativity theory and your favorite crackpot theory, say, Dianetics. [28, p. 597]
Gemesoutlinesanumberoffurtherpathologiesthatresultfromthistypeofdeﬁnition.
For example, on both Carnap and Popper’s accounts any satisﬁable statement A
contains both A ∨B and A ∨¬B for an arbitrary B and—since B is either true
or false—will thereby contain a true statement as part of its content. Hence, if the
‘partial truth’ of a statement is understood as the property that some content part
of that statement is true, then every contingently false statement is partially true,
contrary to our natural expectations.
While not motivated as analyses of meaning containment per se, each of these
theories of content is rich enough to indirectly support a corresponding character-
ization of inferences that are analytic in a Kantian sense, that is, those inferences
valid in virtue of the consequent’s content being part of the antecedent’s content.
Although somewhat circular, Popper’s account entails that classical consequence is
a logic of meaning containment.
Ross Brady more directly attacks the problem in his description of weak relevant
logics that can be thought of as logics of containment of meaning. Brady’s ‘contain-
ment logic’ DJ—described in [10]—builds off of considerations articulated in his
[9] and, most recently, has borne fruit in his analysis of relevant arithmetic in [11].
Brady’s work argues that meaning containment is part of the correct analysis of
logical entailment, deﬁning the content of a statement A as:
the set of all sentences which can be analytically established from [A], using the properties
of relations and terms of [A]... taken in [its] proper context... Thus, the content [c(A)] is an
analytic closure. [10, p. 161]
We may note that Brady’s deﬁnition is, like Carnap and Popper’s before it, a class of
formulae and shares with them the property that any two contingent statements will
share a content part.
We will not go into these particular accounts in any further detail, motivating our
leaving them aside due to a common feature. All of the foregoing notions of content
are indifferent with respect to the notion of subject matter. Where p and q are atomic
formulae, each of these deﬁnitions demand that the content of the formula p contains
the content of the complex formula p ∧(p ∨q). If we consider interpretations in
which p and q are heterogeneous in their subject matter—say that one is a statement

4
1
Introduction: The Proscriptive Principle
about arithmetic while the other a line from The Wind in the Willows—it might seem
far-fetched to suggest that the analysis of the one should include any mention of the
other.
In the present case, we will restrict our attention to formalizations of the contain-
ment/entailment analogy in which attention is given to subject matter, and will take
as the archetypal case the systems in the family of analytic implication described by
William T. Parry.
1.1.1
Parry’s Proscriptive Principle
In the 1930s, such considerations led William T. Parry to attempt to codify this notion
of logical containment in his system of analytic implication AI. Parry was a product
of the logical school at Harvard led by C. I. Lewis, Henry Sheffer, and Alfred North
Whitehead. Along with Parry, this group that produced many other logicians during
the tumultuous early years of non-classical logic, such as Everett Nelson (known for
early work on connexive logic) and Arnold Emch (who produced early work on modal
logic). Parry had a profound—if underappreciated—inﬂuence on the development
of modal logic proper, with many of the proofs and material in Lewis and Langford’s
[37] attributed to him.
Parry’s system AI was introduced in [39] and expanded to the system PAI in [40].
The matter of the axiomatization of Parry’s intuitions is somewhat complicated.
Although Parry’s dissertation [38] included a primitive rule of adjunction, the rule
was omitted in the ﬁrst published axiomatization in [39]. For a number of reasons,
we will prefer to consider the expanded system. Although semantics for PAI were
provided by Kit Fine in [25], there is no known semantics with respect to which the
ﬁrst system is complete. Furthermore, Parry’s [42] states that the expanded system
PAI was always his intent, and was ﬁrst formalized in an unpublished paper from
1957.
The hallmark of Parry’s systems—and of what may be thought of as contain-
ment logics or Parry systems in general—is a strong relevance property called the
‘Proscriptive Principle’ (PP) described in [40, p. 151] as the thesis that:
No formula with analytic implication as main relation holds universally if it has a free variable
occurring in the consequent but not the antecedent.
This type of proscription is on its face justiﬁed, as the presence of a novel variable in
theconsequentcorrespondstotheintroductionofnewsubjectmatter.Theplausibility
of the thesis that the content of a statement is related to its subject matter thus appears
also to support the validity of the formal principle.
A colorful example of the sort of entailment that Parry intends to rule out as valid
is explained as follows:
If a system contains the assertion that two points determine a straight line, does the theorem
necessarily follow that either two points determine a straight line or the moon is made of

1.1 The Proscriptive Principle and Its Rivals
5
green cheese? No, for the system may contain no terms from which ‘moon,’ etc., can be
deﬁned. [40, p. 151]
To the layperson, the deduction of facts nominally about green cheese—at least in
part—from the axioms of geometry might seem implausible.
Despite its a priori plausibility, it should be clear that the Proscriptive Princi-
ple is not universally accepted as a constraint on the containment relation between
meanings or semantic content. Such a criterion is obviously not respected by Carnap
and Popper’s proposals; because any classical consequence of p ∨q is a fortiori a
classical consequence of p, under both deﬁnitions, the content of p ∨q is contained
in the content of p yet ﬂagrantly violates the PP.
Despite Gemes’ rejection of the ‘traditional’ deﬁnitions, the picture of content
inclusion outlined in his [28, 29] itself contradicts Parry’s Proscriptive Principle. His
own theory entails that whenever B is a part of the content of A, then B must also
be a part of the content of any A′ logically equivalent to A. Formally, the divergence
between Parry’s assumptions and those of Gemes is easy to identify. For example,
despite the logical equivalence (modulo classical logic) between the complex formula
A ∧(A ∨B) and A, Parry asserts that the classes of formulae that are analytically
entailed by the two are distinct in general (that is, some atom appearing in B does
not appear in A). According to Parry, the formula A ∧(A ∨B) analytically entails
the formula A ∧(A ∨B) although (the classically equivalent) formula A fails to
analytically entail A ∨B.
Gemes argues that a notion of content with respect to which classically equivalent
statements may differ in content cannot be reconciled with his aims:
[E]mbracing a notion of content that entails an abandonment of classical equivalence would
make that notion of content difﬁcult to use for many projects in the philosophy of science
which carry a commitment to classical equivalence. [28, p. 600]
Furthermore, this property immediately reveals the incompatibility between
Parry’s project and Brady’s formal analysis of entailment as containment of meaning.
The axiomatization in [10] of Brady’s preferred containment logic DJ—a system
designed as a characterization of entailments induced by meaning containment—
includes axioms such as A →A ∨B. The validity of such entailments immediately
conﬂicts with Parry’s formal property.
In Parry’s own system, the PP is a property of theorems of AI; this property may be
called the PP→, or the Proscriptive Principle for theorems. Now, consider a language
L+ that deﬁned with a negation, conjunction, and disjunction connectives, as well
as an intensional implication connective →, i.e., an implication connective distinct
from the material conditional:
Deﬁnition 1.1.1 Let At = {p0, p1, ...} be a denumerable set of atomic formulae.
Then the propositional language L+ is deﬁned in Backus-Naur form with p ∈At:
A:: = p|¬A|A ∧A|A ∨A|A →A
Note that the languages in which we will be working are propositional, lacking
predicates, quantiﬁers, and so forth. The matter of interpreting such notions in logics
of analytic implication is interesting, but one that will be set aside for future work.

6
1
Introduction: The Proscriptive Principle
We will in the sequel also refer to a set of literals Lit, deﬁned as At ∪{¬p | p ∈
At}. For an arbitrary formula A, let ‘At(A)’ represent the set of atoms in At that
appear in A. Then for a language such as L+, the PP→may be succinctly described
as the following constraint on a deductive system:
PP→
If ⊢A →B, then At(B) ⊆At(A)
However, we will frequently describe deductive systems within a zeroth degree lan-
guage that includes negation, conjunction, and disjunction as its sole logical con-
stants, such as Lzdf:
Deﬁnition 1.1.2 Where At is a denumerable set of atomic formulae, Lzdf is deﬁned
in Backus-Naur form with p ∈At:
A:: = p|¬A|A ∧A|A ∨A
Because deductive systems deﬁned over Lzdf lack an intensional implication con-
nective (although they admit a deﬁnable material conditional connective ⊃), the PP→
will not be well-deﬁned in these cases. Let the notation f [X] represent the image of
a set X under a function f ; in particular, for a collection of formulae Γ , At[Γ ] will
be the collection of all atoms appearing in some formula in Γ . Then to carry over
Parry’s intuitions to a ﬁrst-degree logic, a system will be taken to be a containment
logic or a Parry logic if it obeys the condition:
PP⊢
If Γ ⊢B, then At(B) ⊆At[Γ ]
Note that Parry’s own system fails to obey the PP⊢.1
An immediate consequence of PP→and PP⊢is that each is incompatible with the
respective form of the principle of Addition. This principle may be characterized
either as ranging over formulae of the form A →(A ∨B) or ranging over inferences
A ⊢A ∨B, depending on the type of system considered. For example:
Addition1
⊢A →(A ∨B)
Addition2
If Γ ⊢A then Γ ⊢A ∨B.
While either species of Addition is classically acceptable—indeed, each is accept-
able by the lights of almost any deductive system in the literature—Parry justiﬁes
the proscription against the validity of Addition by claiming that B may ‘introduce
new content.’
As some languages contain a conditional connective and others do not, if the
spirit of the Proscriptive Principle is to be preserved in the systems in language L,
the property must be made more precise in such contexts. Indeed, the Proscriptive
Principle appears in two different forms in the literature; Parry’s principle can be
1The criticism leveled against Parry by Charles Kielkopf in [34] hinged on this fact; Kielkopf
suggested that the inference A ⊨AI B ∨¬B reveals a fatal ﬂaw in AI as B ∨¬B is not ‘analytically
contained’ in A in Parry’s sense. Kielkopf failed to notice, however, that in Parry’s system, the double
turnstile is read as a truth-theoretic relation, whereas analytic implication—the meaning-theoretic
relation—is represented by the connective →.

1.1 The Proscriptive Principle and Its Rivals
7
formulated with respect to logical consequence or with respect to the implication
connective. With respect to a set of formulae Γ , recall that At[Γ ] denotes the set of
all atoms appearing in some B ∈Γ . Then we can distinguish these systems formally
by writing:
Deﬁnition 1.1.3 A formal logical system L is →-Parry if it enjoys the property that
⊢L A →B only if At(B) ⊆At(A)
Deﬁnition 1.1.4 A formal logical system L is ⊢-Parry if it enjoys the property that
Γ ⊢L A only if At(A) ⊆At[Γ ]
It should be observed that no system can non-vacuously enjoy both these properties.
If a system L is ⊢-Parry, that every formula in L+ contains atoms ensures that for no
formula A →B ∈L+ does ⊨L A →B.2
A further consequence of this view, of course, is that the scope of deduction
theorems must be very constrained in their scope with respect to Parry-type systems.
For example, if a system L is ⊢-Parry, one cannot infer that ⊢L A →B from A ⊨L B,
as theoremhood of A →B (i.e., consequence from an empty set of premises) will
violate the Proscriptive Principle with respect to the consequence relation. Likewise,
if a formula A is logically false in a →-Parry system L, although A ⊨L B for an
arbitrary formula B, it cannot thereby be inferred that ⊨L A →B, as B may contain
propositional variables not found in A.
The two versions of the Proscriptive Principle entail can be identiﬁed as special
cases of more general conditions corresponding to the selection and placement of
atoms in formulae. In particular, whenever a formula A →B is a theorem of a →-
Parry logic, it follows that the antecedent A and consequent B share some variable
p, i.e., theoremhood of A →B entails that At(A) ∩At(B). This condition can be
recognized as the famous variable-sharing property that is characteristic of propo-
sitional relevant logics. This weaker property is that it is a necessary condition on
valid inferences that the hypothesis and conclusion have some propositional variable
in common.
VSP
If ⊢A →B, then At(A) ∩At(B) ̸= ∅
Consequently, Parry-type systems can be thought of as a subspecies of relevant logics.
Indeed, many such systems have been introduced with an emphasis placed on their
exhibiting the variable-sharing property rather than the Proscriptive Principle. Harry
Deutsch’s work in [15, 16] squarely identiﬁes his own systems as relevant, as does
the work of Frederick Johnson in [31, 32].
Just as Parry’s Proscriptive Principle admits two formulations, satisfaction of the
variable-sharing property can be similarly formulated in two ways.3
2Richard Epstein’s system PD of paraconsistent dependence logic introduced in [18] nearly exhibits
both properties in that Γ ⊨PD A behaves as a ⊢-Parry system when Γ is nonempty and as a →-Parry
system when Γ = ∅. The price for this, however, is that PD’s consequence relation violates the
familiar Tarskian axioms for such relations.
3Note that this is sometimes known as ‘weak relevance’ due to a stronger property of ‘depth
relevance’ described by Ross Brady in [8].

8
1
Introduction: The Proscriptive Principle
Deﬁnition 1.1.5 A formal logical system L is ⊢-relevant if
Γ ⊢L A only if At(A) ∩At[Γ ] ̸= ∅
Deﬁnition 1.1.6 A formal logical system L is →-relevant if
⊢L A →B only if At(A) ∩At(B) ̸= ∅
Clearly, systems that are ⊢-Parry or →-Parry enjoy their respective version of the
variable-sharing property.
Observation 1.1.1 If a system L is →-Parry then L is →-relevant.
Observation 1.1.2 If a system L is ⊢-Parry then L is ⊢-relevant.
Some authors, like Deutsch or Johnson, suggest that Parry-type systems, from a
semantical viewpoint, more naturally capture matters of relevance than the standard
relevant logics like R or E. (In some contexts—such as the matter of the frame
problem mentioned in Richard Sylvan’s paper published in various conﬁgurations as
[48, 49, 51]—the conjunction of these two characterizations of ‘relevance’ is viewed
as attractive.4)
Deductive systems that are ⊢-Parry are also instances of a more general class
of propositional logics: paraconsistent logics. In Sect.1.1.2, it was noted that both
relevant and Parry-style logics can be thought of as arising from distinct strategies
against Lewis’ proof of ECQ. In general, paraconsistent logics are deﬁned as deduc-
tive systems whose consequence relations fail to obey ECQ.
Deﬁnition 1.1.7 A logical system L is paraconsistent if there exist formulae A and
B such that
A, ¬A ⊭L B
Both the relevant and Parry-type strategies are successful in this regard.
In particular, it is clear that a system’s being ⊢-Parry entails that it is paraconsistent
as well. For any ⊢-Parry system L and distinct propositional variables p and q, the
Proscriptive Principle entails that p, ¬p ⊭L q because q /∈At[{p, ¬p}].
Being able to introduce versions of the Proscriptive Principle and variable-sharing
property formulated with respect to both consequence and the conditional connective
is useful in that it enables us to study the ﬁrst-degree fragments of systems with
intensional conditional connectives in isolation. For our purposes, we can deﬁne a
ﬁrst-degree fragment of a deductive system as follows:
Deﬁnition 1.1.8 With respect to systems L in language L+ and L′ in L, L′ is the
ﬁrst-degree fragment of L—symbolized by L′ = Lfde—if for all A, B ∈L:
A ⊨L′ B iff ⊨L A →B
4Explicitly, Sylvan writes: ‘Evidently the best of both, relevant and containment logics without the
defects, can be had by combining the two, essentially product-wise. So result relevant containment
logics’. [49, p. 170].

1.1 The Proscriptive Principle and Its Rivals
9
This carries the consequence that L is →-Parry only if Lfde is ⊢-Parry.
This distinction is especially useful in analyzing the intensional Parry systems,
as in many cases their ﬁrst-degree fragments have appeared independently in the
literature.
1.1.2
Proscription as ‘Conceptivism’
Conceptivism—a name originated by Richard Sylvan—is a name for a loose con-
federation of deductive systems, joined in common resistance to the Principle of
Explosion or Ex Contradictione Quodlibet (ECQ), i.e., that from a contradiction
A ∧¬A, one may infer an arbitrary formula B. [47] provides a taxonomy of such
renegade logics, distinguished by the manner in which they resist C. I. Lewis’ demon-
stration of ECQ in [37]. Parry himself considers the distinctions between analytic
implication and its rivals through this lens in [41, 42].
For example, relevant logics—the most widely known family of such systems—
reject the inference of Disjunctive Syllogism, i.e., that from A and ¬A ∨B one may
infer B. Sylvan identiﬁes the position preempting the Lewis proof by rejecting the
Principle of Addition, i.e., A entails A ∨B, as conceptivism.
Conceptivism is described at [47, p. 96] in the following terms.
[William] Parry’s position—for which we have coined the ugly term conceptivism—is that
no implication A →B is correct where B contains concepts which do not occur in A. Plainly
this makes A →A ∨B [the principle of Addition] incorrect since B may well, in an obvious
sense, ‘contain concepts’ not in A.
The hallmark, according to Sylvan, of conceptivist logics is the rejection of the
Principle of Addition.
Relevant logics and other members of this confederation have received the lion’s
share of attention in the literature. Apart, however, from a handful of technical papers,
conceptivism has been severely neglected in the wake of some particularly sharp
criticism of the notion of ‘analytic implication.’ The semantics for PAI and related
systems which eventually emerged made it easy to dismiss conceptivist systems
as merely imposing a syntactic ﬁlter atop other, independently motivated systems,
without any independent and robust interpretation of their own.
What we wish to show is that there are clear means of motivating a conceptivist
logic that are not subject to the criticism leveled against the ﬁeld by Sylvan. We
will examine a number of trends in logic and linguistics that are suggestive of these
systems before providing a robust interpretation supporting the failure of Addition.
First, let us survey several of the objections raised against conceptivism.
Much of the criticism of conceptivism stems from questioning whether Parry’s
system and others in its neighborhood employ a robust notion of ‘concept’ and, in
turn, correctly characterize Kant’s notion of analytic judgment. J. Michael Dunn, for
example, introduces Parry’s work by writing that
Parry’s system is intended to be in step with Kant’s notion of analyticity. [17, p. 195]

10
1
Introduction: The Proscriptive Principle
Alan Ross Anderson and Nuel Belnap, Jr. legitimately question whether PAI is suc-
cessful with respect to this goal, suggesting at [2, p. 432] that Addition is required for
many entailments that should be thought of as analytic in the Kantian sense, i.e., true
by deﬁnition. E.g., the classic example of ‘all bachelors are unmarried’ is commonly
thought to be analytic due to the validity of Conjunctive Simpliﬁcation. The story
goes that the predicate ‘x is a bachelor’ is identical to ‘x is a male and x is unmarried’
and so by Conjunctive Simpliﬁcation, we may infer that
If x is a male and x is unmarried, then x is unmarried.
Anderson and Belnap suggest that it is just as natural to maintain that the predicate
‘x is a sibling’ is deﬁned as ‘either x is a sister or x is a brother.’ At [1, p. 23], they
write that
there is surely a sense in which A ∨B is ‘contained’ in A; viz., the sense in which the concept
Sibling (which is most naturally deﬁned as Brother-or-Sister) is contained in the concept
Brother. Certainly ‘All brothers are siblings’ would have been regarded as analytic by Kant.
Essentially, Anderson and Belnap attack the ‘analyticity’ of Parry’s system by
describing an example of a Kantian analytic judgment whose validity is not reﬂected
in PAI. The argument requires both that we identify the logical form of the judg-
ment ‘All brothers are siblings’ with that of an entailment A →A ∨B, and that we
consider the judgment ‘A brother is a sibling’ to be a textbook instance of an ana-
lytic judgment in the Kantian sense. Given these assumptions, Anderson and Belnap
suggest that PAI—and, indeed, any →-Parry logic—is inadequately ‘analytic.’
We will not take up the question of whether these two cases really stand or fall
together but merely note that Anderson and Belnaps’s example serves, at best, as a
critique of PAI qua exegesis of Kant.
A further critique of PAI and its neighbors has its origins in a conjecture of Kurt
Gödel. In [39], Parry quotes Gödel as remarking that
perhaps ‘p analytically implies q’ can be interpreted as ‘q is derivable from p and the logical
axioms and does not include any other concepts than p’
This falls under the heading of what Sylvan calls a ‘double-barrelled’ analysis in
[50, p. 166], where double-barrelled analyses of implicational relations are those
that may be reduced to imposing ‘sieves or strainers, which capture a tighter con-
nection through controlled cases (“sieving”) of a slacker one.’ Gödel’s conjecture
that theoremhood in Parry’s system amounts to the conjunction of two theses—that
A →B is a theorem of some other, independently motivated system L and that
At(B) is a subset of At(A)—‘strains out’ certain cases of implication in L and is
thus such a sieve.
In the 1970s, Dunn and Alasdair Urquhart gave semantical analyses of systems
related to PAI in the papers [17, 52], respectively, but the Gödel conjecture was
ultimately conﬁrmed by Kit Fine in the paper [25].5 Fine’s semantics amounts to
5Although note that Dunn, too, proves in [17] that a similar property holds for his demodalized
DAI.

1.1 The Proscriptive Principle and Its Rivals
11
an S4 Kripke model equipped with additional machinery that essentially tracks
when, for any two formula A, B, At(B) ⊆At(A). The truth conditions for analytic
implication are clearly double-barrelled in Sylvan’s sense; letting γu denote a map
from At to a set C of ‘concepts,’ the account is:
w ⊩A →B iff for all u such that wRu,

if u ⊩A then u ⊩B, and
γu[At(B)] ⊆γu[At(A)]
This reveals the analytic implication of Parry as essentially S4 strict implication with
an additional ﬁlter.
Part of why this conclusion came across as destructive to conceptivism seems to
be that whereas (supposing L to be sound and complete) a conditional A →B can
in general receive a semantical characterization, the condition that At(B) ⊆At(A)
is frequently described as irreducibly syntactical in nature. In general, providing
a semantical interpretation for some feature of a system is essential for showing
the intuitions underlying that system to be natural. Compare, for example, this to
Grzegorczyk’s formal interpretation of intuitionistic logic in [30]: his reading of
intuitionistic logic as a logic of ‘scientiﬁc investigation’ against classical logic as
‘the logic of ontological thought’ is reinforced by the semantical picture of [30, 36]
in a way that the axioms alone cannot provide.
AlthoughFine’sdevicetotrackwhenAt(B) ⊆At(A)is,strictlyspeaking,seman-
tical, some have argued that its appeal to syntax fails to provide any deep semantical
insight into the notions of ‘concept’ or ‘analysis.’ Brady, for example, appeals to
precisely this feature in dismissing such a characterization:
[B]eing essentially a syntactic containment, [Fine’s ‘constitutive content’] is not meaning
containment in the sense that we are arguing for. [10, p. 160]
Whether or not Fine’s semantics provides any profound insight into psychology or
phenomenology, Sylvan and other critics have suggested that the interpretation of
the term ‘concept’ presupposes an isomorphism with that of a propositional variable.
The problem for the larger ﬁeld of conceptivist logics is that nearly every system
introduced in the literature admits such an analysis. Hence, this type of critique
against Parry’s system as ill-motivated extends to virtually all Parry-type systems
introduced in the literature to date. Absent an independent and robust semantical
picture, Sylvan argues that the insights provided by Parry-type systems come across
as merely parasitic.
On this basis, Sylvan rather vociferously dismisses conceptivist logics, complain-
ing in [47, p. 100] that philosophical worries concerning entailment ‘are not repaired
simply by throwing on a variable-inclusion ﬁlter.’ That the semantics for PAI ensures
the Proscriptive Principle by such a device leads Sylvan to condemn conceptivism
because ‘the conceptivist objections do not rest on a solid base, but on a narrow and
arbitrary assumption as to what counts as a concept or term.’ [47, p. 101] Hence,
offered merely as a formalization of Kantian analytic judgments, Parry’s system
seems to fail.

12
1
Introduction: The Proscriptive Principle
An intriguing observation is that while Sylvan reads Fine’s result as sounding a
dirge for conceptivism, Parry himself in [43] greets Fine’s results with great enthusi-
asm; indeed, he suggests that Fine’s approach conﬁrms his intuitions concerning PAI.
Part of Parry’s reaction seems to stem from the fact that the interpretation of PAI as a
Kantian exegesis is an assumption on the part not of Parry himself, but of his critics.
Insight into Parry’s preferred interpretation can be found in his PhD dissertation [38].
Parry considers Proposition 5.123 of Wittgenstein’s Tractatus, which reads:
If a god creates a world in which certain propositions are true, he creates thereby also a world
in which all propositions consequent on them are true. And similarly he could not create a
world in which the proposition ‘p’ is true without creating all its objects.
Parry’s reply is:
But one might say: ‘Could not a god create a world in which the proposition p is true, without
thereby creating all the objects contained in any other proposition q? Then there would be
no proposition q, or q ∨¬q...’
There is certainly room for debate over whether Parry’s reply sufﬁces to show that
q ∨¬q does not follow from p. But it is clear that Parry is not committed to the
equivalence of his analytic implication with analytic judgments.
Admittedly, Parry’s use of the term ‘analytic implication’ certainly appears to
suggestaKantianmotivation.Yetin[40],Parryexplicitlyciteshisprimaryinspiration
as not Kant, but H. M. Sheffer, to whom Parry attributes the original case against
Addition. This is reﬂected well in the discussion of [41]:
Our conception of deducibility may be clariﬁed thus: [B] is deducible from [A] if, in any
system in which [A] is asserted, the assertion of [B] is justiﬁable, assuming a reasonably
complete logic. Now, we ask, if a system of Euclidean geometry contains the assertion that
two points determine a straight line, are we justiﬁed in asserting in this system: ‘Either two
points determine a straight line or some mice like cheese’? No,. this strange disjunction is
not a legitimate assertion in a system of Eucliddean geometry, for the simple reason that no
such system contains the terms ‘mice’ or ‘cheese’, nor can one deﬁne by geometric concepts
a type of cheese any self-respecting mouse would nibble at. [41, p. 24]
But this position does not sound Kantian; it speaks of terms—syntactical objects—
rather than of meaning or content. Yet the dismissal of Parry’s intuition essentially
stems from the supposed conﬂation of the notions of concept and syntax. As the
system is presented by Parry, the charges of Anderson, Belnap, and Sylvan seem
much less compelling. In a sense, the collapse of the Parry program was illusory;
rather than show that Parry’s own intuitions were off the mark, his critics set up a
‘straw program’ and knocked it down.
It is the goal of the present work to explore some themes related to deductive
systems satisfying one form of the Proscriptive Principle or other, with a special
emphasis placed on the rehabilitation of their study to some degree.

1.2 Overview of the Material
13
1.2
Overview of the Material
This work is roughly divided into two sections. The ﬁrst is primarily concerned with
interpreting the Proscriptive Principle through the lens of the semantic category of
nonsense, with Chaps.2, 3, and 4 considering the relationship between the two in the
contexts of linguistics/semantics, metaphysics, and computation, respectively. The
second section emphasizes formal and algebraic analysis the family of ﬁrst-degree
Parry logics intermediate between Parry’s PAIfde and Richard B. Angell’s AC, with
Chaps.5, 6, and 7 treating this family in the settings of many-valued semantics,
Arieli/Avron-style logical bilattices, and Correia’s 2004 semantics for AC.
In Chap.2—much of which has appeared in the paper [21]—we identify and
develop the relationship between Parry-type deductive systems and the ﬁeld of ‘logics
of nonsense.’ Of particular importance is Dmitri Bochvar’s ‘internal’ nonsense logic
0, and we observe that two ⊢-Parry subsystems of 0—Harry Deutsch’s Sfde
and Frederick Johnson’s RC—can be considered to be the products of particular
‘strategies’ of eliminating problematic inferences from Bochvar’s system.
The material of Chap.3 considers Kit Fine’s program of state space semantics
in the context of Parry logics. In [26], Fine—who had already provided the ﬁrst
intuitive semantics for Parry’s PAI in [25]—offers a formal model of truthmaking
(and falsemaking) that provides one of the ﬁrst natural semantics for Richard B.
Angell’s logic of analytic containment AC, itself a ⊢-Parry system. After discussing
the relationship between state space semantics and nonsense, we observe that Fab-
rice Correia’s weaker framework—introduced in [14] as a semantics for a contain-
ment logic weaker than AC—tacitly endorses an implausible feature of allowing
hypernonsensical statements. By modelling Correia’s containment logic within the
stronger setting of Fine’s semantics, we are able to retain Correia’s intuitions about
factual equivalence without such a commitment. As a further application, we observe
that Fine’s setting can resolve some ambiguities in Greg Restall’s own truthmaker
semantics of [46].
Chapter 4—which includes material appearing in [19]—we consider interpreta-
tions of disjunction that accord with the characteristic failure of Addition in which
the evaluation of a disjunction A ∨B requires not only the truth of one disjunct, but
also that both disjuncts satisfy some further property. In the setting of computation,
such an analysis requires the existence of some procedure tasked with ensuring the
satisfaction of this property by both disjuncts. This observation leads to a compu-
tational analysis of the relationship between Parry logics and logics of nonsense in
which the semantic category of ‘nonsense’ is associated with catastrophic faults in
computer programs. In this spirit, we examine semantics for several ⊢-Parry logics in
terms of the successful execution of certain types of programs and the consequences
of extending this analysis to dynamic logic and constructive logic.
Chapter 5—which incorporates material that has appeared in [23]—considers
these faults in the particular case in which Nuel Belnap’s ‘artiﬁcial reasoner’ of [6,
7] is unable to retrieve the value assigned to a variable. This leads not only to a
natural interpretation of Graham Priest’s semantics of [45] for the ⊢-Parry system

14
1
Introduction: The Proscriptive Principle
S⋆
fde but also a novel, many-valued semantics for Angell’s AC, completeness of
which is proven by establishing a correspondence with Correia’s semantics for AC
of [13]. These many-valued semantics have the additional beneﬁt of allowing us to
apply the material in Chap.2 to the case of AC to deﬁne intensional extensions of
AC in the spirit of Parry’s PAI.
One particular instance of the type of disjunction central to Chap.4 is Melvin
Fitting’s cut-down disjunction, outlined in [27]. Chapter 6—incorporating material
appearing in [20, 24]—examines cut-down operations in more detail and provides
bilattice and trilattice semantics for the ⊢-Parry systems Sfde and AC in the style
of Ofer Arieli and Arnon Avron’s logical bilattices of [3] or [4]. The elegant con-
nection between these systems and logical multilattices supports the fundamentality
and naturalness of these logics and, additionally, allows us to extend the epistemic
interpretation of bilattices in the tradition of artiﬁcial intelligence to these systems.
Finally, the correspondence between the present many-valued semantics for AC
and those of Correia is revisited in Chap.7, which has appeared as the paper [22].
The technique that plays an essential role in Chap.5 is used to characterize a wide
class of ﬁrst-degree calculi intermediate between AC and classical logic in Correia’s
setting. This correspondence allows the correction of an incorrect characterization of
classical logic in [13] and leads to the question of how to characterize hybrid systems
extending Angell’s AC∗. Finally, we consider whether this correspondence aids in
providing an interpretation to Correia’s ﬁrst semantics for AC.
References
1. Anderson, A.R., Belnap Jr., N.D.: Tautological entailments. Philos. Stud. 13(1–2), 9–24 (1962)
2. Anderson,A.R.,BelnapJr.,N.D.,Dunn,J.M.,Meyer,R.K.:Entailment:TheLogicofRelevance
and Necessity, vol. I. Princeton University Press, Princeton (1975)
3. Arieli, O., Avron, A.: Logical bilattices and inconsistent data. In: Proceedings of 9th Annual
IEEE Symposium on Logic in Computer Science, pp. 468–476. IEEE Computer Society, Los
Alamitos, CA (1994)
4. Arieli, O., Avron, A.: Reasoning with logical bilattices. J. Logic Lang. Inform. 5(1), 25–63
(1996)
5. Aristotle: The Categories, On Interpretation, and Prior Analytics. William Heinemann Ltd,
London: Translated by H. P. Cook and H, Tredennick (1938)
6. Belnap Jr., N.D.: How a computer should think. In: Ryle, G. (ed.) Contemporary Aspects of
Philosophy, pp. 30–56. Oriel Press, Stockﬁeld (1977)
7. Belnap Jr., N.D.: A useful four-valued logic. In: Dunn, J.M., Epstein, G. (eds.) Modern Uses
of Multiple-valued Logic, pp. 8–37. Reidel, Dordrecht (1977)
8. Brady, R.T.: Depth relevance of some paraconsistent logics. Stud. Logica. 43(1), 63–73 (1984)
9. Brady, R.T.: A content semantics for quantiﬁed relevant logics. I. Studia Logica 47(2), 111–127
(1988)
10. Brady, R.T.: Relevant implication and the case for a weaker logic. J. Philosophical Logic 25(2),
151–183 (1996)
11. Brady, R.T.: Universal Logic. CSLI Publications, Stanford (2006)
12. Carnap, R.: The Logical Syntax of Language. Kegan Paul, Trench, Trubner and Company,
London (1935)
13. Correia, F.: Semantics for analytic containment. Stud. Logica. 77(1), 87–104 (2004)

References
15
14. Correia, F.: On the logic of factual equivalence. Rev. Symbolic Logic 9(1), 103–122 (2016)
15. Deutsch, H.: Relevant analytic entailment. The Relevance Logic Newsletter 2(1), 26–44 (1977)
16. Deutsch, H.: A family of conforming relevant logics. Ph.D. thesis, University of California Los
Angeles (1981)
17. Dunn, J.M.: A modiﬁcation of Parry’s analytic implication. Notre Dame J. Formal Logic 13(2),
195–205 (1972)
18. Epstein, R.L.: Paraconsistent logics with simple semantics. Logique et Analyse 48(189–192),
71–86 (2005)
19. Ferguson, T.M.: A computational interpretation of conceptivism. J. Appl. Non-Classical Logics
24(4), 333–367 (2014)
20. Ferguson, T.M.: Cut-down operations on bilattices. In: Proceedings of 45th International Sym-
posium on Multiple-Valued Logic (ISMVL 2015), pp. 24–29. IEEE Computer Society, Los
Alamitos, CA (2015)
21. Ferguson, T.M.: Logics of nonsense and Parry systems. J. Philosophical Logic 44(1), 65–80
(2015)
22. Ferguson, T.M.: Correia semantics revisited. Stud. Logica. 104(1), 145–173 (2016)
23. Ferguson, T.M.: Faulty Belnap computers and subsystems of FDE. J. Logic Comput. 26(5),
1617–1636 (2016)
24. Ferguson, T.M.: Rivals to Belnap-Dunn logic on interlaced trilattices. Studia Logica, pp. 1–26
(2017). Accepted
25. Fine, K.: Analytic implication. Notre Dame J. Formal Logic 27(2), 169–179 (1986)
26. Fine, K.: Angellic content. J. Philosophical Logic 45(2), 199–226 (2016)
27. Fitting, M.: Bilattices are nice things. In: Bolander, T., Hendricks, V., Pedersen, S.A. (eds.)
Self-Reference, pp. 53–77. CSLI Publications, Stanford (2006)
28. Gemes, K.: A new theory of content I: basic content. J. Philosophical Logic 23(6), 595–620
(1994)
29. Gemes, K.: A new theory of content II: model theory and some alternatives. J. Philosophical
Logic 26(4), 449–476 (1997)
30. Grzegorczyk, A.: A philosophically plausible formal interpretation of intuitionistic logic. Inda-
gationes Mathematicae 26, 596–601 (1964)
31. Johnson, F.A.: A three-valued interpretation for a relevance logic. Relevance Logic Newsl.
1(3), 123–128 (1976)
32. Johnson, F.A.: A natural deduction relevance logic. Bull. Section Logic 6(4), 164–170 (1977)
33. Kant, I.: Critique of Pure Reason. Cambridge University Press, New York, Translated by P.
Guyer and A. W, Wood (1999)
34. Kielkopf, C.F.: Adjunction and paradoxical derivations. Analysis 35(4), 127–129 (1975)
35. Kneale, W., Kneale, M.: The Development of Logic. Oxford University Press, Oxford (1962)
36. Kripke, S.: Semantical analysis of intuitionistic logic I. In: Crossley, J., Dummett, M. (eds.)
Formal Systems and Recursive Functions, pp. 92–130. North-Holland Publishing, Amsterdam
(1965)
37. Lewis, C.I., Langford, C.H.: Symbolic Logic, 2nd edn. Dover, New York (1959)
38. Parry, W.T.: Implication. Ph.D. thesis, Harvard University (1932)
39. Parry, W.T.: Ein Axiomensystem für eine neue Art von Implikation (analytische Implikation).
Ergebnisse eines mathematischen Kolloquiums, vol. 4, pp. 5–6 (1933)
40. Parry, W.T.: The logic of C. I. Lewis. In: P.A. Schilpp (ed.) The Philosophy of C. I. Lewis, The
Library of Living Philosophers, pp. 115–154. Open Court, La Salle, IL (1968)
41. Parry, W.T.: Comparison of entailment theories. Relevance Logic Newsl. 1(1), 16–26 (1976)
42. Parry, W.T.: Entailment: analytic implication vs. the entailment of Anderson and Belnap. Rel-
evance Logic Newsl. 1(1), 11–15 (1976)
43. Parry, W.T.: Analytic implication: its history, justiﬁcation, and varieties. In: Norman, J., Sylvan,
R. (eds.) Directions in Relevant Logic, Reason and Argument, pp. 101–118. Kluwer Academic
Publishers, Boston (1989)
44. Popper, K.: The Logic of Scientiﬁc Discovery, 6th edn. Hutchinson, London (1972)
45. Priest, G.: The logic of the catuskoti. Comparative Philosophy 1(2), 24–54 (2010)

16
1
Introduction: The Proscriptive Principle
46. Restall, G.: Truthmakers, entailment and necessity. Australasian J. Philosophy 74(2), 331–340
(1996)
47. Routley, R.: Relevant Logics and their Rivals, vol. 1. Ridgeview Publishing, Atascadero, CA
(1982)
48. Sylvan, R.: Relevant containment logics and certain frame problems of AI. Log. Anal. 31,
11–24 (1988)
49. Sylvan, R.: Relevant containment logics, and frame problems. In: Gero, J.S., Stanton, R. (eds.)
Artiﬁcial Intell. Develop. Appl., pp. 169–181. Elsevier, New York (1988)
50. Sylvan, R.: On reasoning: (ponible) reason for (and also against), and relevance. In: Hyde,
D., Priest, G. (eds.) Sociative Logics and their Applications, Western Philosophy Series, pp.
141–174. Ashgate Publishing, Burlington, VT (2000)
51. Sylvan, R.: Relevant containment logics and certain frame problems of AI. In: Hyde, D., Priest,
G. (eds.) Sociative Logics and their Applications, Western Philosophy Series, pp. 175–188.
Ashgate Publishing, Burlington, VT (2000)
52. Urquhart, A.: A semantical theory of analytic implication. J. Philosophical Logic 2(2), 212–219
(1973)

Chapter 2
Nonsense and Proscription
Abstract This chapter identiﬁes as develops a few salient facets of the relation-
ship between Parry-type deductive systems and the ﬁeld of ‘logics of nonsense.’ Of
particular importance is Dmitri Bochvar’s ‘internal’ nonsense logic 0, establish-
ing a strong connection between such logics of nonsense and Parry systems more
generally. We observe that two ⊢-Parry subsystems of 0—Harry Deutsch’s Sfde
and Frederick Johnson’s RC—can be considered to be the products of two particular
‘strategies’ of eliminating problematic inferences from Bochvar’s system. For exam-
ple, this chapter shows that Deutsch’s Sfde and Johnson’s RC can be interpreted as
the Parry-type subsystems of Bochvar’s nonsense logic generated by taking para-
consistent and connexive fragments of 0, respectively.
In this chapter, we examine the relationship between the logics of nonsense of
Bochvar and Halldén and the containment logics in the neighborhood of William
Parry’s PAI. We detail two strategies for manufacturing containment logics from
nonsense logics—taking either connexive and paraconsistent fragments of such
systems—and show how systems determined by these techniques have appeared
as Frederick Johnson’s RC and the system Sfde independently discovered by Harry
Deutsch and Carlos Oller. In particular, we prove that Johnson’s system is precisely
the intersection of Bochvar’s 0 and Graham Priest’s non-symmetrized connexive
logic and that the Deutsch-Oller system lies just beneath the intersection of 0 and
Priest’s paraconsistent LP. We conclude by examining the Deutsch-Oller system in
more depth, giving it a characterization in terms of LP and showing that it plays
the same role to Harry Deutsch’s paraconsistent containment logic S that Aleksandr
Zinov′ev’s S1 plays with respect to PAI.
2.1
Introduction and Semantical Preliminaries
A close cousin to containment logics—although the shared genetics may not be
immediately clear—is the class of so-called ‘logics of nonsense,’ such as the sys-
© Springer International Publishing AG 2017
T. M. Ferguson, Meaning and Proscription in Formal Logic,
Trends in Logic 49, https://doi.org/10.1007/978-3-319-70821-8_2
17

18
2
Nonsense and Proscription
tems described by Åqvist [1], Bochvar [5], and Halldén [24]. The general moti-
vation for such systems is the thesis that formal systems must have something to
say about statements that are taken to be ‘nonsense’ or ‘meaningless.’ Bochvar and
Halldén each proposed solutions to the semantical paradoxes by calling the problem-
atic sentences—e.g., the Liar or Curry sentences—‘meaningless’ and offered their
systems as means to proceed in formal logic while still allowing for such a semantical
category. Granted that some syntactic objects are indeed meaningless in this way,
these types of systems provide an additional semantic value beyond truth and falsity
and formalize logics ﬂexible enough to account for meaningless formulae.
2.2
Nonsense Logics
Logics of nonsense are logical systems which aim to reconcile a theory of deduction
with the thesis that some statements are meaningless or nonsense, many of which
are summarized in Krystyna Piróg-Rzepecka’s [37]. If there are indeed meaningless
statements—andsuchstatementscannotbesaidtobetrueorfalse—thentheclassical,
bivalent logic championed by Gottlob Frege and Bertrand Russell is inadequate to
give an account of the inferential status of such statements.
The possibility of grammatical yet meaningless statements neither true nor false
arises frequently in philosophical contexts. For example, one type of a purportedly
meaningless statement is a so-called category mistake, e.g., a statement such as ‘the
square root of Socrates is irrational’ in which a predicate (‘the square root of x is
irrational’) is applied to an object (Socrates) in an apparently nonsensical fashion.
The statement is apparently grammatical; whether it is meaningful is less clear. It is
arguablyplausibletosuggestthatsuchstatementsareindeednonsense—grammatical
yet non-signiﬁcant—and thus demand that a correct theory of deduction be ﬂexible
enough to give accounts of meaningless statements. Logics of nonsense profess to
give such a correct theory.
Unlike relevant or constructive logics, there is no unifying formal property delim-
iting the class of logics of nonsense; what determines this family of deductive systems
is the common goal of giving an account of deduction in light of meaningless state-
ments. Even supposing that such an account is necessary, the progenitors of nonsense
logic had differing positions on many technical questions, such as the proper onto-
logical category of meaningless statements or whether a nonsensical semantic value
ought to be designated.
The proponents of logics of nonsense, chief among them being Dmitri Bochvar
and Sören Halldén, agree that the classical propositional calculus is ill-equipped to
deal with statements that are meaningless or nonsense and fail to take a value of either
true or false. Yet a theory of meaninglessness presupposes a theory of meaning and
meaning is an extraordinarily opaque concept. As the theories we will survey in this
chapter were developed against the backdrop of problems of analytic philosophy, we
will focus on appearances of the notion of meaninglessness since the publication of
Russell and Whitehead’s Principia Mathematica. Of those, we restrict our attention

2.2 Nonsense Logics
19
to three cases that may be thought to necessitate a theory of deduction capable of
handling meaningless statements.
To be clear, arriving at a theory of deduction accounting for the category of mean-
ingless statements is not some esoteric task. Hans Reichenbach wrote of Russell’s
suggestion that such a category be considered in the following terms:
It is the basic idea of [Russell’s] theory that the division of linguistic expressions into true and
false is not sufﬁcient, that a third category must be introduced which includes meaningless
expressions. It seems to me that this is one of the deepest and soundest discoveries of modern
logic. [42, p. 37]
A brief note on nomenclature before proceeding: While the following is not uni-
formly observed by proponents of nonsense logics, the distinction between syntax
and semantics demands that some attention is paid to terminology.
We use the terms ‘sentence,’ ‘statement,’ and ‘formula’ to denote a syntactic item,
a certain type of string of symbols. The term ‘proposition’ is used to denote a semantic
or intensional item corresponding to the meaning of the sentence. This usage is by no
means standard; e.g., the positivists at times used the term ‘statement’ to refer only
to a meaningful string of symbols, the term ‘pseudo-statement’ being awarded to the
remainder of syntactic items. In this chapter, we will remain ontologically neutral,
putting aside the question of whether a ‘meaningless proposition’ is a contradiction
in terms.
As logics of nonsense were ﬁrst described in order to address problems of mean-
inglessness in early twentieth century analytic philosophy, we will survey three occa-
sions in which meaninglessness or nonsense emerge in this tradition.
2.2.1
Semantic Paradoxes
Semantic paradoxes have been discussed in one form or another since at least Epi-
menides of Knossos. A very simple version is the Liar sentence, the statement ‘this
sentence is false’: its truth seems to entail its falsehood while its falsehood entails
its truth. The instance of such paradoxes that drove the development of Bochvar and
Halldén’s systems was presented in Whitehead and Russell’s Principia Mathemat-
ica, in which such paradoxes of self-reference are dismissed by appeal to a syntactic
notion of meaninglessness.
We need not rehearse the formalism of the Principia to describe the problem.
In Introduction to Mathematical Philosophy, Russell gives a sketch of the type of
semantical paradox which he is interested in solving and how the theory of types is
intended to resolve it. In the background is the assumption that for any property P,
there exists a class of all objects of which P is true. The particular paradox is this:
From... the assemblage [class] of all classes which are not members of themselves. This is a
class: is it a member of itself or not? If it is, it is one of those classes which are not members
of themselves, i.e., it is not a member of itself. If it is not, it is not one of those classes that
are not members of themselves, i.e., it is a member of itself. [44, p. 136]

20
2
Nonsense and Proscription
By the Principle of Excluded Middle, either this class—which Russell calls ‘κ’—
is a member of itself or not; yet that each entails the contradiction that both κ ∈κ
and not-κ ∈κ implies that the statement ‘κ ∈κ’ is both true and false. This is
problematic because classically, a contradiction entails all propositions and hence
all sentences are true in this theory of classes.
Among the various solutions to this problem described by Russell is one in which
problem cases are cleared away syntactically at the level of language. By iteratively
constructing the formal language in which we work, Russell shows that one can
banish self-reference in the language itself. In the type of language Russell describes,
the statement ‘such-and-such a class is a member of itself’ can be prevented from
entering the language at every stage. In such a setting, self-referential statements are
syntactically ill-formed and are therefore meaningless.
In Russell’s words,
a statement which appears to be about a class will only be signiﬁcant [meaningful] if it is
capable of translation into a form in which no mention is made of the class. [44, p. 137]
The class κ cannot be deﬁned without such self-reference; the term ‘class of all
classes not members of themselves’ is thus a pseudo-name, a syntactical object that
does not denote. And according to Russell’s solution,
a sentence or set of symbols in which such pseudo-names occur in wrong ways is not false,
but strictly devoid of meaning. The supposition that a class is, or that it is not, a member of
itself is meaningless in just this way. [44, p. 137]
The resolution offered by Russell thus appears to demand that certain statements (or
statement-like objects) are neither true nor false but are rather nonsense. Hence, the
statement ‘κ ∈κ’ is not both true and false and the problem is purportedly resolved.
Importantly, this resolves apparent nonsense by appeal to syntax, i.e., the recursive
rules for a language should prevent ‘κ ∈κ’ from ever appearing and it is thus an
ill-formed string of symbols. In the introduction to Wittgenstein’s Tractatus Logico-
Philosophicus, Russell writes that ‘a logically perfect language has rules of syntax
which prevent nonsense’[50, p. 8], i.e., a correct account of language would dissolve
occasions of nonsense before they could even arise.
2.2.2
Positivism and Veriﬁability
The early twentieth century philosophical movement known as logical positivism
gives a further appearance of a precise treatment of meaninglessness or nonsense
both related to and contemporary with the issues raised by Russell.
A central theme in logical positivism is the veriﬁability or empiricist criterion of
meaning. Hempel describes this criterion as:
A sentence makes a cognitively meaningful assertion, and thus can be said to be either true
or false, only if it is either (1) analytic [logically true] or self-contradictory [logically false]
or (2) capable, at least in principle, of experiential test. [25, p. 108]

2.2 Nonsense Logics
21
We will set aside the nuances of such a principle, such as the feasibility of veriﬁ-
cation or the necessity of falsiﬁability as these are all variations on the same theme.
Note however, that a criterion of meaningfulness gives rise to a criterion of meaning-
lessness as well; those statements not satisfying the criterion will be meaningless.
Importantly, a number of claims fail to meet these criteria; wielding the veriﬁabil-
itycriterionprecludesagreatnumberofstatementsfrombeingcountedasmeaningful
propositions, e.g., ethical, theological, and metaphysical theses are judged to be non-
sense. Much of the effort of the logical positivists was hence directed at defusing (or,
more emphatically, ‘eliminating’) philosophical traditions such as ethics or meta-
physics, employing the criterion to dismiss their central theses and points of debate
as meaningless.
Rudolph Carnap, for example, initially distinguishes between three types of mean-
ingless statements (or ‘pseudo-statements’): Those meaningless in virtue of con-
taining a meaningless term such as ‘good,’ those meaningless in virtue of being
ill-formed, and those meaningless in virtue of ‘type confusion.’ In the ﬁrst case, a
sentence such as, ‘This is teavy’ is meaningless because an artiﬁcial term like ‘teavy’
is nonsensical and thus cannot be employed in an empirical test of the statement.
More importantly, Carnap’s examples for the second case and third cases are
‘Caesar is and’ and ‘Caesar is a prime number.’ The former is clearly ill-formed
as this string cannot be formed by the usual rules of English syntax. According to
Carnap, the latter is meaningless in virtue of the fact that the predicate ‘...is a prime
number’ can ‘be neither afﬁrmed nor denied of a person.’[7, p. 68]
Interestingly, in many of the logical positivists’ theories, nonsensical statements
of the third kind are in fact instances of the second kind of nonsense, that is, despite
appearing to be syntactically well-constructed sentences, they are ill-formed. In a
perfect language, something implicitly similar to Russell’s typing ought to occur, so
that the verb phrase ‘...is a prime number’ would fail to syntactically apply to a noun
phrase such as ‘Caesar.’
Carnap writes:
If, e.g., nouns were grammatically subdivided into several kinds of words, according as they
designated properties of physical objects, of numbers etc., then the words ‘general’ and
‘prime number’ would belong to grammatically different word-categories, and [‘Caesar is a
prime number’] would be just as linguistically incorrect as [‘Caesar is and’]. In a correctly
constructed language, therefore, all nonsensical sequences of words would be of the kind of
[‘Caesar is and’].[7, p. 68]
That we fail to recognize this fact is diagnosed as an artifact of the imperfections
of our own natural language. Hence, from the standpoint of the logical positivists, as
for Russell, meaninglessness tends to be reducible to ill-formedness. But this is not
the only resolution available.

22
2
Nonsense and Proscription
2.2.3
Category Mistakes
Prior to this syntactical observation, there is a sense in which both Russell’s rejection
of the meaningfulness of ‘κ ∈κ’ and Carnap’s dismissal of the statement ‘Caesar
is a prime number’ are instances of a more general notion. Suggesting that the
propositional function ˆx.x ∈κ cannot be applied to κ or that ‘is a prime number’ is
not the sort of predicate which may be asserted of a man suggestions that the subject
is of the wrong category; these are each occasions of making a category mistake.
Gilbert Ryle introduces this term in his 1949 book The Concept of Mind, deﬁning
the making of a category mistake as the treating of objects ‘as if they belonged to one
logical type or category (or range of types or categories when they actually belong
to another.’[45, p. 16] The primary philosophical thesis is that, contra Descartes,
taking the language and intuitions behind our experience of the physical world and
applying them to the mental leads to illicit inferences. As the physical and mental
are of different types, predicates applying to the former are not merely false of the
latter, but lead to meaningless statements.
Importantly, throughout the work, Ryle continually associates making a category
mistake with uttering nonsense.
It is nonsense to speak of knowing, or not knowing, this clap of thunder or that twinge of
pain, this coloured surface or that act of drawing a conclusion or seeing a joke; these are
accusatives of the wrong types to follow the verb ‘to know.’[45, p. 161]
As a result, on Ryle’s account, Cartesian philosophy is not merely false, it is literally
nonsense.
Following Ryle, the theory of category mistakes has been taken up by a number of
authors independently of the questions raised by Russell or Carnap. Importantly, in
the literature on category mistakes (also, ‘type crossings’) the emphasis on syntactical
ill-formedness of such statements is eschewed in favor of more semantically-oriented
analyses.
Works such as Theodore Drange’s Type Crossings ([16]) and Shalom Lappin’s
Sorts, Ontology, and Metaphor ([29]) tend to assume that such statements are seman-
tically evaluable. There are, to be sure, debates concerning how to evaluate such
statements, but it tends to be taken for granted that the problematic statements are,
in general, well-formed. Note that this does not necessarily demand a novel logic
of nonsense nor a new semantic value. It is perfectly coherent to either assign these
statements values of truth and falsity at random or uniformly evaluate them as true
or false.
Drange’s own account, for example, is that such category mistakes (which he calls
‘type crossings’) are well-formed and express propositions, albeit propositions that
are ‘unthinkable.’ On Drange’s account, there is no way that one can conceive of
a state affairs in which a proposition such as that expressed by ‘Caesar is a prime
number’ turns out true. This does not entail that the sentence is meaningless, although
it does bear the consequence that ‘Caesar is a prime number’ is false.
This position—that nonsensical sentences are false—is like Russell and Carnap’s
appeal to syntax in that it precludes a need for a logic of nonsense.

2.2 Nonsense Logics
23
2.2.4
Many-Valued Semantics for Two Nonsense Logics
Bochvar and Halldén’s systems each distinguish two types of connectives: On the
one hand are the connectives whose truth functions that output a ‘nonsense’ value
whenever one or more of their arguments contain a ‘nonsense’ value. The semantical
value of nonsense is thus ‘infectious’ or ‘contaminating’ with respect to such con-
nectives, a property that Åqvist colorfully labels the ‘doctrine of the predominance
of the atheoretical element’ in [1]. Such connectives—described by Bochvar and
Halldén as ‘internal’ or ‘classical’—are identiﬁed with the operations employed in,
e.g., the Principia Mathematica. The languages employed by Bochvar and Halldén
complement these connectives with so-called ‘external’ connectives whose corre-
sponding truth functions map all arguments to ‘meaningful’ values, i.e., either truth
or falsity. For example, Halldén intends for his unary ‘meaningfulness’ connective
+ to evaluate meaningless statements as false and to evaluate meaningful statements
as true.
For present purposes, we look at the fragments of Bochvar and Halldén’s logics
corresponding to only these ‘internal’ connectives. By ‘0’ and ‘C0,’ we denote the
systems that [10] describes as the ‘classical fragments’ of the nonsense logics of
Bochvar and Halldén, i.e., the systems restricted to ‘internal’ negation, disjunction,
and conjunction. Consequence with respect to the systems 0 and C0 can be deﬁned
by a standard account of many-valued semantics. We will follow the presentation in
[6] and consider binary consequence relations induced by logical matrices.
Deﬁnition 2.2.1 A logical matrix M for Lzdf is a 5-tuple ⟨VM, DM, f ¬
M, f ∧
M, f ∨
M⟩
where:
• VM is a nonempty set of truth values
• DM ⊆VM is a nonempty set of designated values
• f ¬
M is a unary truth function on VM
• f ∧
M and f ∨
M are binary truth functions on VM
Deﬁnition 2.2.2 Let M = ⟨VM, DM, f ¬
M, f ∧
M, f ∨
M⟩. Then an M valuation v is a
function v : At →V extended to Lzdf by the recursive scheme:
• v(¬A) = f ¬
M(v(A))
• v(A ∧B) = f ∧
M(v(A), v(B))
• v(A ∨B) = f ∨
M(v(A), v(B))
Deﬁnition 2.2.3 A logical matrix M characterizes a consequence relation for L if
Γ ⊢L Aholds iff for all M valuations v such that v[Γ ] ∈DM, also v(A) ∈DM.
In the sequel, when L is a deductive system characterized by M we will slightly
abuse notation and conﬂate L with M so that, e.g., we will call an M valuation an
“L valuation.”

24
2
Nonsense and Proscription
Deﬁnition 2.2.4 0—the classical fragment of Bochvar’s —is the consequence
relation induced by the matrix M0 = ⟨V0, D0, f ¬
0, f ∧
0, f ∨
0⟩where V0 =
{t, u, f} and D0 = {t}. The truth-functions f ¬
0, f ∨
0, and f ∧
0 are represented by
the matrices:
f ¬
0
f ∧
0
t u f
f ∨
0
t u f
t
f
t
t u f
t
t u t
u
u
u
u u u
u
u u u
f
t
f
f u f
f
t u f
We also may note that the matrices provided are equivalent to the weak tables of
Kleene. It is fair to think of the classical fragment of 0 as the weak logic described—
and rejected—by Kleene in [28, p. 334].
The logic C0—the classical fragment of Halldén’s C without the unary meaning-
fulness operator—differs from 0 only with respect to its set of designated values.
Deﬁnition 2.2.5 C0 is the consequence relation induced by the matrix MC0 =
⟨VC0, DC0, f ¬
C0, f ∧
C0, f ∨
C0⟩where:
• VC0 = V0
• DC0 = {t, u}
• f ◦
C0 = f ◦
0 for ◦∈{¬, ∧, ∨}
Now, given Halldén’s “...is meaningful” operator + and Bochvar’s “...is true”
operator T, one can embed classical logic within the full systems; hence, the PP⊢
will not hold in C or . Even in the classical fragments 0 and C0 without projection
operators, this property fails. However, in special cases, the PP⊢holds and Addition
fails; moreover, studying why the PP⊢fails is instructive and yields a road map of
sorts for transforming logics of nonsense into containment logics.
An observation important to this end is that with respect to a logic of nonsense,
four theses jointly entail the PP⊢. Recall that when v is a valuation and Γ is a set of
formulae, v[Γ ] represents the image of Γ under v. Then:
Observation 2.2.1 Suppose that in a semantical presentation of a logic L
1. “nonsense” values are infectious, i.e., for any n-tuple of truth values v in which a
nonsense value appears and an n-ary truth-function f , f (v) is a nonsense value,
2. “nonsense” values are not designated,
3. every set of formulae Γ has a valuation v such that v[Γ ] ⊆DL, and
4. Γ ⊨L B is read as “every valuation assigning all A ∈Γ designated values also
assigns B a designated value”
Then L obeys the PP⊢.
Proof Suppose that L enjoys the above four properties and suppose for contradiction
that Γ ⊨L B while some atom in B is not found in any A ∈Γ . Let C be an
atom witnessing this fact. Now, Γ [from 3] has a valuation v in which all A ∈Γ

2.2 Nonsense Logics
25
are designated. Consider a valuation v′ identical to v except for its mapping C to a
nonsense value. Since C /∈At[Γ ], all A ∈Γ remain designated. Since C ∈At(B),
B is assigned a nonsense value by v′ [from 1] and such a value is not designated
[from 2]. Given the traditional, semantic reading of Γ ⊨L B [from 4], we infer that
Γ ⊭L B.
□
The PP⊢fails in the classical fragment of Halldén’s system because the mean-
ingless value is designated.1 To wit, it can be easily checked that A ⊨C0 A ∨B.
In Bochvar’s system this inference fails in general—that A is true does not entail
that A ∨B is true as B, after all, could be meaningless, rendering the disjunction
meaningless. Nevertheless, the PP⊢fails in Bochvar’s system. 0 does not toler-
ate contradictions, i.e., contradictions cannot take a designated value, and hence,
A ∧¬A ⊨0 B holds vacuously. The PP⊢holds, on the other hand, for consistent
premises.
This clearly lays out a means to construct a Parry system from a logic of nonsense.
The central question is that of the inferential status of sets of formula Γ which have
no valuations mapping their formulae to designated values; the existence of such sets
prevents 0 from enjoying the PP⊢. We may consider two strategies for weakening
0 to a nonsense logic. One strategy is to inferentially quarantine such sets of formula
by allowing nothing to be inferred from contradictory premises; this entails rewriting
the usual rules for turnstile. A second strategy is to homogenize formulae so that all
non-empty sets not only have models, but that inconsistent sets will maintain a similar
inferential behavior to that of sets of consistent formulae.
2.3
Two Strategies for Containment
The relationship between nonsense logics and containment logics is underscored by
the ways in which Parry logics can be generated from nonsense logics. To illustrate,
we will consider Bochvar’s 0 and provide two strategies to yield a fragment that
qualiﬁes as a containment logic. The ﬁrst strategy is to consider what may be thought
of as a connexive fragment of 0 and the second is to consider a paraconsistent
fragment. In Chap.4, we will add a third strategy by showing the intuitionistic,
implicational fragment of 0 is also a containment logic.
2.3.1
Containment Through Connexivity: Johnson’s RC
Parry’s AI was not the only cousin of (or competitor to) relevant logics to receive
space in Anderson and Belnap’s [2]. Additionally, pages were set aside to provide
an account and examination of connexive logics, although the systems described
therein—due to Storrs McCall—are distinct from the connexive logics we will
employ in the sequel.
1Cf. [24, p. 47] for Halldén’s explanation and defense of this feature.

26
2
Nonsense and Proscription
What we wish to show in this section is that by employing connexive principles
along the lines of [40], one may make use of the proof of Observation 2.2.1 to
generate a containment logic from a logic of nonsense. Indeed, what we will show
is that such a system has already appeared as the containment logic RC introduced
by Frederick Johnson in [26] and that it is the intersection of the classical fragment
of Bochvar’s 0 and a connexive logic described by Graham Priest in [40].
The characteristic feature of connexive logics is the satisfaction of a pair of theses
governing the behavior of implication, Aristotle’s Thesis:
AT→
¬(A →¬A)
and Boethius’ Thesis:
BT→
¬[(A →B) ∧(A →¬B)]
Similar principles2 can be captured as metalinguistic statements as well:
AT⊢
For all A, A ⊬¬A
BT⊢
For all A, B, if A ⊢B then A ⊬¬B
Now, there is a subtle distinction between the two formulations of these theses. That
the symbol “¬” appears twice in AT→suggests that each instance is a species of
the same type of negation, yet this is not necessarily the case with respect to its
metalinguistic counterpart AT⊢. The metalinguistic negation indicated by ⊬and the
object language negation symbolized by ¬ may very well diverge in meaning. We
must thus content ourselves with the claim that AT→and AT⊢are similar, rather
than identical, principles.
Proposals abound as to how to properly motivate connexive logics, ranging from
the thesis that such systems capture the subjunctive conditional (defended by Richard
Angell in [3], where AT→is called the “principle of subjunctive contrariety”) to the
thesis that negation “cancels” or “annihilates” an afﬁrmation (described, but not
defended, by Priest in [40]). McCall’s [32] and Heinrich Wansing’s [49] provide
thorough surveys of the history, philosophy, and motivation of connexive principles;
for a deeper discussion of these matters, the reader is referred to these sources.
To tie this to the strategy of inferential quarantine, note that there is an apparently
very obvious motivation for why one might expect AT⊢and BT⊢to hold. With
respect to contingent formulae—those formulae having a model in which they are
veriﬁed and one in which they are not—classical logic satisﬁes these principles.
Observation 2.3.1 If A and B are classically contingent, then if A ⊨CL B then
A ⊭CL ¬B
Proof Suppose that A ⊨CL ¬B; then from A ⊨CL B and A ⊨CL ¬B, we may infer
that A ⊨CL B ∧¬B. This can only hold if A is itself a contradiction, from which we
infer that it is not the case that both A and B are classically contingent.
□
2BT is typically stated as (A →B) →¬(A →¬B) in the literature on connexive logic. Priest’s
formulation from [40] (which we employ in this chapter) has been called “Strawson’s Thesis” due to
P.F. Strawson’s endorsement of the principle in [47]. Priest’s formulation bears a strong resemblance
to the formula (A →B) ⊃¬(A →¬B), called “weak Boethius’ Thesis” by Pizzi and Williamson
in [38].

2.3 Two Strategies for Containment
27
Observation 2.3.2 If A is classically contingent then A ⊭CL ¬A
Proof Immediate from Observation 2.3.1, substituting A for B and noting that
A ⊨CL A.
□
Implicitly employing these observations, Priest introduced a pair of connexive
logics—with “plain” and “symmetrized” versions—in [40]. We will call these PN
and PS, respectively, and will consider their respective consequence relations to be
deﬁned over the language L+ from Deﬁnition 1.1.1.
The systems share a model structure and we will thus deﬁne models for PN and
PS in tandem:
Deﬁnition 2.3.1 Models for PN and PS are 3-tuples ⟨W, g, V ⟩, where W is a set of
points such that g ∈W and V is a function mapping At to subsets of W.
As the two systems interpret the conditional connective differently, we must deﬁne
distinct forcing relations,3 deﬁned identically for all cases with the exception of the
truth condition for →. Following [40], we represent the condition peculiar to the
symmetrized system PS in square brackets:
• w ⊩A iff w ∈V (A) for A ∈At
• w ⊩¬A iff w ⊮A
• w ⊩A ∧B iff w ⊩A and w ⊩B
• w ⊩A ∨B iff w ⊩A or w ⊩B
• w ⊩A →B iff
⎧
⎪⎨
⎪⎩
∃w′ ∈W such that w′ ⊩A,
∀w′ ∈W, if w′ ⊩A then w′ ⊩B
[and ∃w′ ∈W such that w′ ⊮B]
We will call the relation for PN (without the clause in square brackets) ⊩PN and that
for PS (with the clause in square brackets) ⊩PS.
We are thus now able to deﬁne the notion of validity for the two systems.
Deﬁnition 2.3.2 PN validity
Γ ⊨PN A if

there is an M such that for all B ∈Γ , g ⊩PN B
for all M such that for all B ∈Γ , M, g ⊩PN B, also g ⊩PN A
PS validity is deﬁned in an analogous fashion, substituting ⊩PS for ⊩PN.
Priest’s approach has appeared in various forms in other contexts; e.g., David
Lewis offers a conditional connective  in [31] that determines a weak subsystem
of Priest’s system PN. In [38], Claudio Pizzi and Timothy Williamson also indirectly
3In a number of works (e.g., [22] and [46]), Melvin Fitting and Raymond Smullyan have detailed
the intimate relationship between Cohen’s forcing introduced in [8] and [9] and the relation of
truth-at-a-world in Kripke models. The term “forcing relation” is frequently used to describe truth-
at-a-world in models with possible worlds, even in contexts in which the strict analogy with Cohen
forcing is lost.

28
2
Nonsense and Proscription
describe another subsystem of Priest’s PN, although its semantics are couched in
terms of a conditional logic rather than a logic of strict implication (cf. [18]).
A further (and isolated) appearance of this approach is found in Frederick John-
son’s containment logic RC described in [26]. Johnson was interested in identifying
a simple and natural means of precluding C.I. Lewis’ famous argument for the prin-
ciple of explosion found in [30], where explosion is the validity of an inference to an
arbitrary formula from a contradiction. Concerned with the apparent irrelevance of
the consequent to the antecedent in such an inference, Johnson aligned his system—
described as “syntactic relevance entailment”—with the ﬁeld of relevant logics rather
than with containment or connexive logics. Neither of the latter themes is mentioned
in the paper. Even in the later [27], in which a related system is introduced, that the
system enjoys the PP⊢is mentioned only en passant.
The system RC is semantically described by recalling the logical matrix M0
from Deﬁnition 2.2.4, in which t the only designated value.
Deﬁnition 2.3.3 Consequence in the system RC is deﬁned so that:
Γ ⊨RC A if

there is a 0 valuation v such that for all B ∈Γ , v(B) = t
for all 0 valuations v s.t. for all B ∈Γ , v(B) = t, also v(A) = t
Although it is probably clear that RC is a subsystem of both 0 and PN, we are able
to obtain an even stronger result:
Observation 2.3.3 RC = PN ∩0
Proof We ﬁrst note that the matrices Johnson provides for RC are Bochvar’s matrices
for 0. As validity in 0 is a necessary condition for validity in RC, RC ⊆0.
Moreover, if the inference Γ ⊨A is RC valid, then we may infer a number
of things. For one, we require that Γ must be non-empty. Were it empty, then all
0 valuations would vacuously map each of its members to t; by the deﬁnition of
validity, this would entail that all 0 valuations map A to t, i.e., that A is a theorem of
0. But 0 has no theorems. Furthermore, we infer that there exists a 0 valuation
v by which all formulae in Γ ∪{A} are designated. Any such valuation, however,
restricted to At[Γ ] is classical, i.e., the image of At[Γ ] under v is {t, f}. (Otherwise,
granted the infectiousness of u, v(B) = u for some B ∈Γ .) As v[Γ ] depends only
on the values assigned to At[Γ ], we may construct a function v′ such that
v′(B) =

v(B) if B ∈At[Γ ]
f
otherwise
The range of v′ is {t, f} and v′ is thus a classical valuation mapping all formulae in
Γ to t, which is just to say that Γ is classically consistent. Additionally, as 0 is a
subsystem of classical logic, Γ classically entails A. From these two considerations,
we infer that Γ ⊨PN A, whence RC ⊆PN.

2.3 Two Strategies for Containment
29
Suppose that an inference Γ ⊨A is both PN- and 0 valid. Then Γ ⊨0 A holds
either vacuously or it does not. The inference cannot hold vacuously; were it to do so,
then there would be no 0 valuations granting every B ∈Γ a designated value and
thus, a fortiori, no classical valuations. But this would imply that Γ is classically a
contradiction, entailing that Γ ⊭PN A and contradicting the hypothesis. Hence, there
is a 0 valuation mapping all B ∈Γ to designated values and in all such valuations
A receives a designated value; but this is just to say that Γ ⊨RC A.
□
It is extraordinarily interesting that the conjunction of two unrelated theses concern-
ing implication—that of formally accommodating meaninglessness and that of can-
cellation
negation—should prove equivalent to an entirely distinct intuition, that of Johnson.
The system RC is not without problems. Most notable of these is that, as in PN,
the inference A ⊨RC A is not valid. While the account given by Priest of PN makes
some sense of the failure of this inference, it is not clear that Priest’s story serves to
resolve such a pathology in the context of RC.
Quarantining the problematic cases is not the only strategy; we have also men-
tioned a strategy of homogenizing inference. Merely providing all sets of sentences
with a model is of little use if such models are trivial; rather, we may want a way
to maintain nontrivial yet inconsistent models. This can be performed by taking a
paraconsistent fragment of a nonsense logic.
2.3.2
Containment Through Paraconsistency: The System
Sfde
As Parry was a student of Lewis, it is not surprising that many of the “paradoxes” of
implication, e.g., the principle of explosion, were of concern to him. As noted in the
case of Johnson, such an inference is in some quarters taken to be suspicious due to
a lack of relevance between the antecedent and consequent.
As shown in Observations 1.1.1 and 1.1.2, the relationship between Parry’s sys-
tem and relevant logic is a clear one: Relevant logics enjoy the variable-sharing
property, establishing all Parry systems as relevant logics. But if we take the notion
of relevance as a desideratum seriously, even in PAI, there are theorems in which
apparent irrelevance arises. The PAI theorem
((A ∧¬A) ∧B) →¬B
might arouse—and has indeed aroused—similar suspicions. Harry Deutsch describes
this as “the fallacy of making too much of one small, if nasty, mistake” [12, p. 139]
and asserts that this principle is as suspicious as the principle of explosion.
Carlos Oller essentially rediscovers this perceived shortcoming, diagnosing what
he calls the “the paradoxes of Parry’s analytic implication” [34, p. 93] in the ﬁrst-
degree fragment of PAI:

30
2
Nonsense and Proscription
A ∧¬A ∧B ⊨PAIfde ¬B
Deutsch and Oller independently introduced a four-valued logic in order to rectify
such perceived pathologies by further weakening Parry’s system.4 The system has
appeared by a number of names, e.g., Deutsch calls the system “g” when it is ﬁrst
introduced in [11], “Dfde” in [13], and “Sfde” (which we ourselves will adopt in the
sequel) in [14] while Oller introduces it with identical matrices in as “AL” in [34].
Deﬁnition 2.3.4 Sfde is the ﬁrst-degree logic induced by the matrix
⟨VSfde, DSfde, f ¬
Sfde, f ∧
Sfde, f ∨
Sfde⟩
where VSfde = {t, b, u, f} and DSfde = {t, b} and the functions f ¬
Sfde, f ∧
Sfde, f ∨
Sfde are
deﬁned by the following matrices:
f ¬
Sfde
f ∧
Sfde
t b u f
f ∨
Sfde
t b u f
t
f
t
t b u f
t
t t u t
b
b
b
b b u f
b
t b u b
u
u
u
u u u u
u
u u u u
f
t
f
f f u f
f
t b u f
Although the conclusion that Sfde enjoys the PP⊢is proven in [34], it will be
instructive to rehearse our own proof.
Observation 2.3.4 Sfde enjoys the PP⊢
Proof A brief inspection of the matrices for Sfde will establish that u is infectious in
the sense of Observation 2.2.1, while a glance at DSfde shows that u is not designated.
Moreover, every set of formulae Γ has an Sfde valuation in which all B ∈Γ
take designated values. The map v′ : A →b for all A ∈At assigns a designated
value to all atoms. By inspecting the matrices for Sfde, we can easily observe that
this propagates through the language, assigning every formula the value of b. With
the language itself having a model, each of its subsets has a model.
By Observation 2.2.1, this entails that the PP⊢holds for Sfde.
□
That consideration of logics of nonsense played a role in proving that Sfde enjoys
the PP⊢is no coincidence. Sfde is a logic of nonsense; indeed, it is a subsystem
of 0.
4While the position outlined by Oller against the Parry “paradoxes” is clear, it is also obvious that
inferences such as
B ⊨Sfde B ∨¬B
are correct modulo Sfde, although such inferences appear to run afoul of the spirit of Deutsch and
Oller’s complaint.

2.3 Two Strategies for Containment
31
Observation 2.3.5 Sfde ⊆0
Proof By examining the matrices appearing in Deﬁnitions 2.2.4 and 2.3.4, one may
conﬁrm that every 0 valuation is also an Sfde valuation. Hence, if Γ entails A
modulo Sfde the same can be said a fortiori for 0.
□
Recall that a logic is paraconsistent if explosion—the inference A ∧¬A ⊨B—is
not a valid inference in that logic. Also, recall that it was explosion that most clearly
prevented 0 from enjoying the PP⊢, because A ∧¬A had no models at all. Just as
employing connexive principles to eliminate this case generates a containment logic,
so, too, does relaxing 0 to a paraconsistent logic yield a containment logic.
A paradigmatic paraconsistent logic is the system LP introduced by Priest in [39].
Deﬁnition 2.3.5 LP is the ﬁrst-degree logic induced by the matrix MLP:
⟨VLP, DLP, f ¬
LP, f ∧
LP, f ∨
LP⟩
with truth values VLP = {t, b, f} and designated values DLP = {t, b}. The truth
functions f ¬
Sfde, f ∧
Sfde, f ∨
Sfde are deﬁned by the following matrices:
f ¬
f ∧t b f
f ∨t b f
t
f
t
t b f
t
t t f
b
b
b
b b f
b
t b b
f
t
f
f f f
f
t b f
Clearly, Sfde is a subsystem of LP, as we may easily prove.
Observation 2.3.6 Sfde ⊆LP
Proof Examining the matrices shows that every LP valuation is an Sfde valuation.
Hence, if some property holds for all Sfde valuations it holds a fortiori for all LP
valuations as well. Hence, if Γ ⊨Sfde A then Γ ⊨LP A, i.e., Sfde ⊆LP.
□
Corollary 2.3.1 Sfde ⊆0 ∩LP
Proof Immediate from Observations 2.3.5 and 2.3.6.
□
This result is encouraging but, although we come close, we do not enjoy the
attractive alignment that we found in Observation 2.3.3, notably, there are some
inferences both 0 valid and LP valid.
Observation 2.3.7 Sfde ̸= 0 ∩LP
Proof Observe that both A ∧¬A ⊨0 A ∨B and A ∧¬A ⊨LP A ∨B. In the former
case, there is no 0 valuation granting A ∧¬A a designated value and the inference
is satisﬁed vacuously; in the latter cases, that A ∧¬A is designated entails that A is
also designated, whence A ∨B is designated. Clearly, this inference fails to satisfy
the PP⊢and is thus not a valid Sfde inference.
□

32
2
Nonsense and Proscription
What is especially interesting about this is that the inference witnessing the inequality
between Sfde and 0 ∩LP holds in the latter systems for entirely different reasons.5
With respect to a ﬁrst-degree logic L, use the notation LPP to denote the class of
L valid inferences satisfying the PP⊢, i.e., the system deﬁned by
Γ ⊨LPP A iff Γ ⊨L A and At(A) ⊆At[Γ ]
We may think of this as the “analytic fragment” of L. Then we are able to correctly
characterize Sfde:
Observation 2.3.8 Sfde = LPPP
Proof For left-to-right, we note that Observations 2.3.5 and 2.3.6 entail that any Sfde
entailment is valid in LPPP.
For right-to-left, suppose that Γ ⊨LP A and At(A) ⊆At[Γ ]. Note that Sfde
valuations come in two varieties: those whose restrictions to At[Γ ∪{A}] are LP
valuations and those that are not, i.e., those in which for some B ∈At[Γ ∪{A}],
v(B) = n. By hypothesis, for all valuations of the former type in which all formulae of
Γ are designated, A is likewise designated—this is precisely what Γ ⊨LP A means.
With respect to the latter type, by hypothesis, At(A) ⊆At[Γ ], and hence, some
formula B ∈Γ has a constituent atom valued at n. By the “infectiousness” of this
value, it follows that v(B) = n. Hence, in any such valuation, some B ∈Γ fails to
take a designated values, i.e., the only valuations in which all B ∈Γ take designated
values are the LP-like valuations. But we have assumed that in such valuations, A
takes a designated value when all formulae in Γ do.
□
These observations will come into play again shortly, as we make a deeper exam-
ination of Sfde and its role in paraconsistent Parry systems in general.
2.4
The Role of Sfde in Paraconsistent Parry Systems
While Johnson’s RC is rather anomalous, playing no role with respect to the broader
family of containment logics, the Deutsch-Oller system Sfde plays a central role in
the structure of paraconsistent Parry systems. To observe this, we offer, with minor
notational deviations, the semantics for PAI discovered by Kit Fine in [21]. We ﬁrst
deﬁne a PAI model:
Deﬁnition 2.4.1 A PAI model is an ordered 5-tuple ⟨W, R, C, , V ⟩with the fol-
lowing interpretations:
• W is a non-empty set of points
• R is a transitive, reﬂexive relation on W
5We will encounter a similar phenomenon in the sequel when we describe the axiom Safety that is
a hallmark of the ﬁrst-degree fragment of R−Mingle.

2.4 The Role of Sfde in Paraconsistent Parry Systems
33
• C is a set {Cw : w ∈W} such that Cw = ⟨Cw, ◦w⟩is a lower semilattice for all
w ∈W
•  is a set {γw : w ∈W} such that γw maps each element of At to an element of
Cw, extended through the language by γw(A) = γw(B0) ◦w ... ◦w γw(Bn), where
each Bi ∈At(A)
• V is a pair of functions ⟨V +, V −⟩mapping all elements of At to ℘(W) with
the condition that for all A ∈At, V +(A) and V −(A) are pairwise disjoint and
exhaust W
The elements of W may retain the usual interpretation of possible worlds while the
intended interpretation of the elements of a set Cw are the “concepts” that occur at
world w.
Deﬁne a ≤w b as a ◦w b = b. Then we may describe a pair of forcing relations,
deﬁned and interpreted as follows:
Deﬁnition 2.4.2 InaPAImodel,thepositiverelation⊩+ canbethoughtofasholding
when a formula is true at a point:
• w ⊩+ A iff w ∈V +(A) for A ∈At
• w ⊩+ ¬A iff w ⊩−A
• w ⊩+ B ∧C iff w ⊩+ B and w ⊩+ C
• w ⊩+ B ∨C iff w ⊩+ B or w ⊩+ C
• w ⊩+ B →C iff

∀u such that wRu, γu(C) ≤u γu(B), and
∀u such that wRu and u ⊩+ B, u ⊩+ C
Similarly, the negative relation ⊩−may be read as holding when a formula is false
at some point:
• w ⊩−A iff w ∈V −(A) for A ∈At
• w ⊩−¬A iff w ⊩+ A
• w ⊩−B ∧C iff w ⊩−B or w ⊩−C
• w ⊩−B ∨C iff w ⊩−B and w ⊩−C
• w ⊩−B →C iff

w ⊮+ B →C, or
w ⊩+ B and w ⊩−C
The notation employed here is inspired by Wansing’s [48] in which a pair of forcing
relations—one positive, one negative—is deﬁned. Also note that a deeper analogy
with Wansing’s logics I jCk introduced in [48] is available. The conditions are vir-
tually identical to Wansing’s treatment of Nelson’s N of [33]. Wansing observes
that there isn’t necessarily a privileged interpretation of the falsity condition of an
implicational formula and offers four distinct approaches to evaluating falsity of a
conditonial at a point or possible world.6 Just as Nelson’s logic of constructible falsity
admits such variations, we could just as easily give the same treatment to Deutsch’s
S by selecting alternative falsity conditions for the conditional.
6Also see [17], [19], and [20] for more discussion on the theme of falsity conditions for conditionals.

34
2
Nonsense and Proscription
We say that a formula is true in a model—M ⊨A—if for all points w in that
model, M, w ⊩A.
Deﬁnition 2.4.3 PAI validity
 ⊨PAI A if for every PAI model M if for all B ∈, M ⊨B then M ⊨A
An interesting observation is that the ﬁrst-degree fragment of PAI is effervescent,
popping up repeatedly in the literature. The ﬁrst-degree fragment has been indepen-
dently discovered by no fewer than four authors. In addition to Parry himself, the
system was described by Zinov′ev as the system S1 in [51], as Parks-Clifford’s ﬁrst-
degree Z in [35], and was also labeled NDR in [27] when rediscovered by Frederick
Johnson.
An important relationship holds between PAI, S1, and the classical propositional
calculus CL. In regard to a logic L deﬁned over a language including an intensional
conditional connective →, let Lfde denote the ﬁrst-degree fragment of L, i.e., for
a ﬁnite, non-empty set of formulae  and formula A with no appearances of →,
 ⊨Lfde A iff ⊨L
  →A.
Observation 2.4.1  ⊨S1 A iff  ⊨CL A and At(A) ⊆At[]
Proof That S1 = CLPP is well established; the reader is referred to proofs in [51] or
[27].
□
The correspondence between S1 and PAIfde has been asserted on several occasions.
With respect to Zinov′ev’s work, that S1 = PAIfde has been observed in [43] (in
which S1 is called “ZV”) while Parry asserts in [36] that PAIfde is characterized by
the equivalent bipartite condition. In neither case is this assertion proven, however,
so it is prudent to provide proof here.
Observation 2.4.2 S1 is the ﬁrst-degree fragment of Parry’s PAI, i.e., A ⊨S1 B iff
⊨PAI A →B
Proof ByObservation2.4.2,wearefreetoequateS1 withCLPP;thatPAIfde = CLPP
can be easily seen by considering an arbitrary PAI model and a point in that model.
For left-to-right, consider a ﬁrst-degree entailment A →B, where A and B are
zeroth-degree formulae; if A →B is a theorem of PAI then, as a subsystem of CL,
it is a theorem of CL. That PAI obeys the PP→entails that At(B) ⊆At(A).
For right-to-left, as CL is the “internal” logic of every point w, that w ⊩A entails
that w ⊩B. Moreover, as At(B) ⊆At(A), γw(B) ≤w γw(A) for any point w. Hence,
at any point w′, w′ ⊩A →B.
□
In Sect.2.3.2, we referred to a critique of PAI shared by both Deutsch and Oller. We
have seen how Oller responded; Deutsch, inﬂuenced by the semantical picture laid
out by Fine in [21], detailed three fully intensional (i.e., higher degree) systems of

2.4 The Role of Sfde in Paraconsistent Parry Systems
35
paraconsistent containment logic, S, S′, and S′′ over the course of several papers:
[12], [14], and [15].
In the above semantics for PAI, there was a qualiﬁcation on the functions V + and
V −that for any atom A, V +(A)∩V −(A) ̸= ∅and V +(A)∪V −(A) = W. Relaxing
this requirement would permit either an atom to be simultaneously true and false at
a point or to be neither true nor false at a point, i.e., would yield a paraconsistent or
paracomplete logic. The semantics presented earlier with this restriction relaxed to
permit paraconsistency corresponds to Deutsch’s S.
Deﬁnition 2.4.4 An S model is deﬁned by rehearsing the conditions from Deﬁnition
2.4.1 while relaxing the condition on V + and V −to the weaker clause that
For all A ∈At, V +(A) ∪V −(A) = W
Deﬁnition 2.4.5 Validity in S is deﬁned by the following scheme:
 ⊨S A if for every S model M if for all B ∈, M ⊨B then M ⊨A.
We can make a few further observations concerning the relationship between Sfde
and other containment logics. In analogy to the fact that S1 = CLPP, Observation
2.3.8 shows that Sfde = LPPP. For one, this enables us to provide a characterization
of Sfde along the lines of Observation 2.3.3.
Corollary 2.4.1 Sfde = S1 ∩LP
A further analogy may be made, however, between Sfde and Deutsch’s S. That Sfde
is the ﬁrst-degree fragment of S is reﬂected by our choice of notation and is asserted
by Deutsch in [13] and [14]. However, this assertion receives no proof and we thus
provide a proof here.
Observation 2.4.3 Sfde is the ﬁrst-degree fragment of Deutsch’s S, i.e., A ⊨Sfde B
iff ⊨S A →B
Proof We recall that in Deutsch’s semantics, for each point w, all atoms are
given valuations of either {t}, {f}, or {t, f}. With small changes in notation,
for negation, conjunction, and disjunction, Deutsch provides the following:
(¬t) t ∈vw(¬A) iff f ∈vw(A)
(¬f) f ∈vw(¬A) iff t ∈vw(A)
(∧t) t ∈vw(A ∧B) iff t ∈vw(A) and t ∈vw(B)
(∧f) f ∈vw(A ∧B) iff f ∈vw(A) or f ∈vw(B)
(∨t) t ∈vw(A ∨B) iff t ∈vw(A) or t ∈vw(B)
(∨f) f ∈vw(A ∨B) iff f ∈vw(A) and f ∈vw(B)
Essentially, that t ∈vw(A) and that f ∈vw(A) in Deutsch’s original presentation
correspond to w ⊩+ A and w ⊩−A, respectively.

36
2
Nonsense and Proscription
Let h be a function equating the values of vw with LP truth values so that singleton
truth values in S are equated with their elements in Sfde, i.e.,
h(vw(A)) =
⎧
⎪⎨
⎪⎩
t
if vw(A) = {t}
b if vw(A) = {t, f}
f
if vw(A) = {f}
We may note by a simple induction that the “internal logic” of a point is precisely
LP. This is to say that if vw is a valuation mapping atoms to ℘({t, f}), then for a
ﬁrst-degree formula, not only is h ◦vw an LP valuation, but for any zeroth-degree
formula B and a truth value v, v ∈vw(B) iff h(vw(B)) = h(v).
Suppose that ⊨S A →B. Then, in every point w in every model, at all points w′
such that wRw′, γw′(B) ≤w′ γw′(A). Moreover, if A takes a designated value at w′,
i.e., t ∈vw′(A), then B takes a designated value at w′. If at all points in all models
does γw′(B) ≤w′ γw′(A) then At(B) ⊆At(A). Suppose there is an atom D ∈At(B)
not in At(A); then for some model, one could assign γw′(D) to be an element d ∈Cw′
such that γw′(A) ⪇w′ d, whence γw′(B) ≰w′ γw′(A). Moreover, if at all points in all
models a zeroth-degree formula A entails a zeroth-degree formula B, then whenever
t ∈vw(A), also t ∈vw(B). By the above considerations, however, this is just to say
that in every LP valuation in which A is designated, B is designated, i.e., A ⊨LP B.
By Observation 2.3.8, these two observations mean that A ⊨Sfde B.
On the other hand, if A ⊨Sfde B where A and B are zeroth-degree formulae, then
at any point w in any model, if w ⊩+ A then w ⊩+ B. Likewise, that At(B) ⊆At(A)
entails that at any such point, γw(B) ≤w γw(A), whence ⊨S A →B.
□
Given that Deutsch’s system is the natural result of modifying PAI to yield a para-
consistent system, the Deutsch-Oller system plays a central role in the theory of S.
It also provides insight into further means of generating Parry systems. For example,
the system S⋆
fde—the PP-fragment of Efde introduced by Priest in [41]—would
play a central role in a paraconsistent and paracomplete logic similar to S.
2.5
Conclusions
As Parry frequently referenced, Kurt Gödel conjectured in [23] that AI might enjoy
a “double-barrelled” analysis, i.e., A →B is an AI theorem iff
1. A ⇒B is a theorem in a “carrier logic” for some connective ⇒, and
2. At(B) ⊆At(A)
In providing his semantics for PAI in [21], Fine essentially conﬁrms Gödel’s conjec-
ture and remarks on the wide variety of logics that can be generated by altering the
“carrier logic,” e.g., by interpreting ⇒as intuitionistic or relevant implication. (The
“carrier logic” in the case of PAI itself is S4.)

2.5 Conclusions
37
We have observed that the same can be said for the Deutsch-Oller system Sfde and
similar conclusions may be drawn about Johnson’s RC and Deutsch’s S. Does this
suggest that, as Sylvan suggests in [43], containment logics are merely a syntactic
gimmick?
If anything, the opposite conclusion should be drawn from the structure of RC and
Sfde. Rather than resting, as Sylvan suggested, ‘on a narrow and arbitrary assump-
tion as to what counts as a concept’ [43, p. 101], aligning containment logics with
logics of nonsense provides an alternative foundation. That an isomorphism exists
between concepts and atomic formulae is not necessary; merely making the claim
that meaningfulness must be established in order to ensure the validity of an inference
already starts one down the path towards Parry systems.
Moreover, however syntactical the ﬂavor of the PP may be, this does not entail
that Parry calculi deal in gimmickry. The VSP—an equally syntactical criterion—is,
after all, a symptom of relevance rather than its explication. That the PP is suggested
by a number of distinct and relatively natural positions on inference demonstrates
that the Proscriptive Principle may emerge without overt appeal to syntax.
In the coming two chapters, we are going to examine two distinct contexts in
which this relationship between nonsense and containment is apparent. In Chap.3,
we will examine Kit Fine’s analysis of Richard Angell’s containment logic AC in
which nonsense will correspond to the absence of any truthmaker or falsemaker for
a sentence at a world. In Chap.4, we will consider containment logics through the
lens of computation, in which nonsense will correspond to the failure of a procedure
to terminate its computation.
References
1. Åqvist, L.: Reﬂections on the logic of nonsense. Theoria 28(2), 138–157 (1962)
2. Anderson,A.R.,BelnapJr.,N.D.,Dunn,J.M.,Meyer,R.K.:Entailment:TheLogicofRelevance
and Necessity, vol. I. Princeton University Press, Princeton (1975)
3. Angell,R.B.:Apropositionallogicwithsubjunctiveconditionals.J.Symb.Log. 27(3),327–343
(1962)
4. Ayer, A.J. (ed.): Logical Positivism. The Free Press, New York (1959)
5. Bochvar, D.A.: On a three-valued logical calculus and its application to the analysis of the
paradoxes of the classical extended functional calculus. Hist. Philos. Log. 2(1–2), 87–112
(1981). Translated by M. Bergmann
6. Bolc, L., Borowik, P.: Many-Valued Logics. Springer, New York (1992)
7. Carnap, R.: Überwindung der metaphysik durch logische analyse der sprache. Erkenntnis 2(1),
219–241 (1931). Reprinted in [4]:60–81
8. Cohen, P.J.: The independence of the continuum hypothesis, I. Proc. Natl. Acad. Sci. U. S. A.
50(6), 1143–1148 (1963)
9. Cohen, P.J.: The independence of the continuum hypothesis, II. Proc. Natl. Acad. Sci. U. S. A.
51(1), 105–110 (1964)
10. Coniglio, M., Corbalán, M.I.: Sequent calculi for the classical fragment of Bochvar and
Halldén’s nonsense logics. In: Kesner D., Viana P. (eds.) Proceeding of 7th Workshop on
Logical and Semantic Frameworks, with Applications (LSFA 2012), Electronic Proceedings
in Theoretical Computer Science, vol. 113, pp. 125–136 (2013)

38
2
Nonsense and Proscription
11. Deutsch, H.: Relevant analytic entailment. Relev. Log. Newsl. 2(1), 26–44 (1977)
12. Deutsch, H.: The completeness of S. Stud. Log. 38(2), 137–147 (1979)
13. Deutsch, H.: A family of conforming relevant logics. Ph.D. thesis, University of California Los
Angeles (1981)
14. Deutsch, H.: Paraconsistent analytic implication. J. Philos. Log. 13(1), 1–11 (1984)
15. Deutsch, H.: A note on the decidability of a strong relevant logic. Stud. Logi. 44(2), 159–164
(1985)
16. Drange, T.: Type Crossings. De Gruyter Mouton, The Hague (1966)
17. Ferguson, T.M.: Łukasiewicz negation and many-valued extensions of constructive logics. In:
Proceedings of the 44th International Symposium on Multiple-Valued Logic (ISMVL 2014).
pp. 121–127. IEEE Computer Society, Los Alamitos, CA (2014)
18. Ferguson, T.M.: Ramsey’s footnote and Priest’s connexive logics (Abstract). Bull. Symb. Log.
20(3), 387–388 (2014)
19. Ferguson, T.M.: Review of Andreas Kapsner, Logics and Falsiﬁcations, dialectica. 70(1), 119–
124 (2016)
20. Ferguson, T.M.: Rivals to Belnap-Dunn logic on interlaced trilattices. Stud. Log. 1–26 (2016)
21. Fine, K.: Analytic implication. Notre Dame J. Form. Log. 27(2), 169–179 (1986)
22. Fitting, M.: Intuitionistic Logic, Model Theory, and Forcing. North-Holland Publishing, Ams-
terdam (1969)
23. Gödel, K.: On Parry’s axioms. In: Feferman, S., Dawson J.W. Jr., Kleene, S.C., Moore, G.H.,
Solovay, R.M., van Heijenoort J. (eds.) Collected Works, vol. I, p. 267. Oxford University
Press, Oxford (1986)
24. Halldén, S.: The Logic of Nonsense. Lundequista Bokhandeln, Uppsala, Sweden (1949)
25. Hempel, C.: Problems and changes in the empiricist criterion of meaning. Revue Internationale
de Philosophie 41(11), 41–63 (1950). Reprinted in [19]: 108–129
26. Johnson, F.A.: A three-valued interpretation for a relevance logic. Relev. Log. Newsl. 1(3),
123–128 (1976)
27. Johnson, F.A.: A natural deduction relevance logic. Bull. Sect. Log. 6(4), 164–170 (1977)
28. Kleene, S.C.: Introduction to Metamathematics. North-Holland Publishing Company, Amster-
dam (1952)
29. Lappin, S.: Sorts, Ontology, and Metaphor. De Gruyter, New York (1981)
30. Lewis, C.I., Langford, C.H.: Symbolic Logic, 2nd edn. Dover, New York (1959)
31. Lewis, D.: Counterfactuals. Harvard University Press, Cambridge, MA (1973)
32. McCall, S.: A history of connexivity. In: Gabbay, D.M., Pelletier, F.J., Woods, J. (eds.) Hand-
book of the History of Logic, vol. 11, pp. 415–449. North-Holland, Oxford (2012)
33. Nelson, D.: Constructible falsity. J. Symb. Log. 14(1), 16–26 (1949)
34. Oller, C.A.: Paraconsistency and analyticity. Log. Log. Philos. 7, 91–99 (1999)
35. Parks-Clifford, J.E.: Literal relevance. In: Norman, J., Sylvan, R. (eds.) Directions in Relevant
Logic, Reason and Argument, pp. 59–76. Kluwer Academic Publishers, Boston, MA (1989)
36. Parry, W.T.: Comparison of entailment theories. J. Symb. Log. 37(2), 441–442 (1972)
37. Piróg-Rzepecka, K.: Systemy Nonsense-Logics. PWN, Warsaw (1977)
38. Pizzi, C., Williamson, T.: Strong Boethius’ thesis and consequential implication. J. Philos. Log.
26(5), 569–588 (1997)
39. Priest, G.: The logic of paradox. J. Philos. Log. 8(1), 219–241 (1979)
40. Priest, G.: Negation as cancellation and connexive logic. Topoi 18(2), 141–148 (1999)
41. Priest, G.: The logic of the catuskoti. Comp. Philos. 1(2), 24–54 (2010)
42. Reichenbach, H.: Bertrand Russell’s logic. In: Schilpp, P. (ed.) The Philosophy of Bertrand
Russell, pp. 21–54. Northwestern University Press, Chicago (1944)
43. Routley, R.: Relevant Logics and their Rivals, vol. 1. Ridgeview Publishing, Atascadero, CA
(1982)
44. Russell, B.: Introduction to Mathematical Philosophy, 2nd edn. George Allen and Unwin,
London (1920)
45. Ryle, G.: The Concept of Mind. Hutchinson’s University Library, London (1949)

References
39
46. Smullyan, R., Fitting, M.: Set Theory and the Continuum Problem. Oxford University Press,
New York (1996)
47. Strawson, P.F.: Introduction to Logical Theory. John Wiley and Sons, New York (1952)
48. Wansing, H.: Constructive negation, implication, and co-implication. J. Appl. Non-Classical
Log. 18(2–3), 341–364 (2008)
49. Wansing, H.: Connexive logic. In: Zalta E.N. (ed.) The Stanford Encyclopedia of Philosophy,
Fall (2010). http://plato.stanford.edu/archives/fall2010/entries/logic-connexive/
50. Wittgenstein, L.: Tractatus Logico-Philosophicus. Harcourt, Brace, and Co., New York (1922).
Ogden, C.K., trans
51. Zinov′ev, A.A.: Foundations of the Logical Theory of Scientiﬁc Knowledge (Complex Logic).
In: Boston Studies in the Philosophy of Science. D. Reidel Publishing Company, Dordrecht,
Holland (1973)

Chapter 3
Metaphysical Considerations on State Space
Semantics
Abstract In this chapter, we review elements of Kit Fine’s project of truth maker
semantics, in which models are constructed on spaces of states—ﬁne-grained seman-
tical devices that can stand in for many objects, such as facts, truthmakers, situations,
and so forth. Fine’s framework has rapidly borne fruit, providing very natural seman-
tics for many logics and providing elegant solutions to many thorny semantical prob-
lems.
In this chapter, we review elements of Kit Fine’s project of truth maker semantics, in
which models are constructed on spaces of states—ﬁne-grained semantical devices
that can stand in for many objects, such as facts, truthmakers, situations, and so
forth. Fine’s framework has rapidly borne fruit, providing very natural semantics
for many logics and providing elegant solutions to many thorny semantical prob-
lems. Fine’s state spaces may be counted as a member of a tradition of ﬁne-grained,
objectual approaches to semantics including the distinct fact-based semantics of Bas
van Fraassen and Roman Suszko and the situation semantics of Jon Barwise and
John Perry. More recent examples of this lineage are found in Greg Restall’s own
truthmaker semantics and Fabrice Correia’s version of Fine’s semantics. Restall and
Correia both suggest that intuitions concerning facts and their relationship with
propositions lead to justiﬁcations for various consequence relations (or consequence-
like relations), although the two projects each have some unusual features when truth-
making is considered from a metaphysical perspective. Although Fine has cautioned
against placing too much metaphysical weight on state space semantics, this chapter
suggests that recasting Restall and Correia’s work in the setting of Fine’s truthmaker
semantics provides insight into the metaphysical presuppositions and commitments
of these projects.
© Springer International Publishing AG 2017
T. M. Ferguson, Meaning and Proscription in Formal Logic,
Trends in Logic 49, https://doi.org/10.1007/978-3-319-70821-8_3
41

42
3
Metaphysical Considerations on State Space Semantics
3.1
State Space Semantics
3.1.1
Facts and Their “Philosophical Entourage”
We can consider state-space semantics as a descendant of the semantical analyses
of consequence modeled on states that sprung up in the 1960s. It will thus be useful
to examine the more ﬁne-grained analyses of entailment made possible by appeal
to proper parts of worlds more generally. The interpretation of the central objects
of such models, i.e., “facts and their philosophical entourage” [37, p. 477] in van
Fraassen’s words, vary; we will use words like “states of affairs,” “facts,” “situations,”
and “truthmakers” interchangeably.
Intuitively, moving from worlds to parts of worlds is semantically liberating.
Refusing to consider parts of the world as playing a semantical role restricts the rich-
ness of the theory and leads to counterintuitive consequences that might be thought
of as pathologies. Just as the coarse-grained apparatus of possible worlds (with-
out their parts) forces us into the paradoxes of strict implication, when worlds are
taken to be the most ﬁne-grained semantical device available, the semantics leads us
towards other paradoxes of relevance in the truthmaker case. For example, truthmaker
maximalism—which is such a coarse-grained theory—pushes us towards the thesis
that tautologies count all facts as truthmakers, a feature that Restall [58] considers
one of the “darker properties” [58, p. 333] of the implicit theory of truthmaking
underlying classical semantics.
While Armstrong [5] points to Aristotle’s Categories as an early example of appeal
to truthmakers in the world, these types of objects brieﬂy ﬂourished in the early 20th
Century, although always in an informal and inchoate fashion. Mulligan, Simons,
and Smith capture some of this prehistory:
Some thinkers however, such as Russell, Wittgenstein in the Tractatus, and Husserl in the
Logische Untersuchungen, argued that instead of, or in addition to, truth-bearers, one must
assume the existence of certain entities in virtue of which sentences and/or propositions are
true. Various names were used for these entities, notably ‘fact’, ‘Sachverhalt’, and ‘state of
affairs’. [49, p. 287]
Despite the frequency of appeals to facts and other truthmakers in the 1930s, the
accounts remained informal for the most part and fell out of vogue until, as van
Fraassen describes,
the prevalent opinion seems to be that facts belong solely to the prehistory of semantics and
either have no important use or are irredeemably metaphysical or both. [37, p. 477]
In the late 1960s, two projects independently emerged that provided interesting mod-
els that demonstrated the power and legitimacy of appeal to facts in the work of
Roman Suszko initiated in [66] and the work of van Fraassen in [37].1
1It would not be unreasonable to include the contemporary work of Richard Sylvan and Val Plum-
wood in [62] within this group. However, Sylvan and Plumwood’s interpretation of the novel
semantical invention of [62]—the set-up—bears more of a likeness to possible worlds than their
parts.

3.1 State Space Semantics
43
Suszko’s [66] (further developed in collaborations with Stephen Bloom [16] and
[17]) and van Fraassen’s [37] provide roughly contemporary semantical accounts in
which atomic facts or situations are taken to be primitive. Both take the representation
of facts endorsed by, e.g., Wittgenstein and Russell, as a starting point and consider
how theories of facts inﬂuence theories of entailment. As an illustration of the notion
of fact to which Suszko and van Fraassen appeal, consider one of the quintessential
remarks concerning this philosophical entourage in Bertrand Russell’s Lectures on
Logical Atomism:
When I speak of a fact—I do not propose to attempt an exact deﬁnition, but an explanation,
so that you will know what I am talking about—I mean the kind of thing that makes a
proposition true or false. If I say “It is raining”, what I say is true in a certain condition of
weather and is false in other conditions of weather. The condition of weather that makes my
statement true (or false as the case may be), is what I should call a “fact”. [63, pp. 500–501]
Working in a ﬁrst-order language, both Suszko and van Fraassen describe facts in
terms of complexes with respect to a domain M, i.e., tuples ⟨R, a0, ..., an−1⟩where
R is an n-ary relation on M and a0, ..., an−1 ∈M. In van Fraassen’s case,
[t]he representation of the complex that-aRb may now conveniently be achieved by identi-
fying it with the triple ⟨R, a, b⟩. [37, p. 482]
An important feature in both accounts is that these primitive complexes are inherently
signed. In Suszko’s formalism, for each primitive complex ⟨R, a0, ..., an−1, +⟩there
exists a primitive complex ⟨R, a0, ..., an−1, −⟩corresponding to the negation of that-
aRb; in [37], this is represented as ⟨¯R, a0, ..., an−1⟩. This type of representation has
carried forward to the present day. In, e.g., [25], such primitives are interpreted as
“the obtaining of certain atomic states of affairs and the nonobtaining of certain
atomic states of affairs.” [25, p. 2]
There are subtleties with respect to the way in which this interpretation departs
from Russell. For one, while the terms “fact” or “truthmaker” are typically taken
to indicate veridicality, this is not in general required. Although it indeed seems
reasonable to suggest that the existence of a truthmaker for a statement A entails
the truth of A, it is equally reasonable to think that there are things—possibly mere
ﬁctions—that would have made a statement true had they obtained.
Furthermore, on the Russellian account, when a complex ⟨R, a, b⟩fails to hold,
(i.e., ⟨a, b⟩/∈R), the literal ¬Rab is made true by the absence of the tuple ⟨a, b⟩
from the interpretation of R, i.e., ¬Rab is made true by a negative fact in a very
literal sense. Suszko and van Fraassen and their inheritors, however, generally allow
that there is a robust truthmaker corresponding to ¬Rab, which is, of course, the
complex ⟨¯R, a, b⟩.
There are good reasons for accepting that falsemakers are primitive, that is, on
an ontological par with truthmakers. In the theory of truthmaking, for example,
that a truthmaker fails to make true a statement A should hardly entail that it is a
falsemaker for A. Furthermore, there exist problems with respect to our ability to
apprehend negative truths should we deny the existence of atomic falsemakers. In
[61], Jay Rosenberg details such a problem:

44
3
Metaphysical Considerations on State Space Semantics
if the falsity of an atomic proposition consists in its failure to correspond to any atomic fact,
it may seem as if, in order to discover that a given atomic proposition was false, we should
have to compare it one by one with each atomic fact, noting in each case that it fails to
correspond. And this, of course, is an absurd supposition. [61, p. 36]
This last assertion doesn’t seem quite true. One could suggest, for example, that the
falsity of a proposition ϕ consists in a demonstration that there can be no truthmaker
for ϕ, then one could arguably falsify atomic propositions without being forced to
survey all possible truthmakers for the statement. All one would need would be
a method of showing that the supposition that a truthmaker for ϕ exists leads to
absurdity.
This is, of course, to equate falsity with intuitionistic negation, which suggests
an interesting parallel in the work of Nelson (e.g., [50, 52]) concerning the distinc-
tion between intuitionistic and constructible or strong negation. Intuitionist negation
asserts that any demonstration of some proposition could be converted into a demon-
stration of absurdity; the analogous interpretation in terms of truthmakers, would
be that the existence of a truthmaker for a statement ϕ is absurd. Nelson in [50,
51] suggests that such an account of falsity is inadequate in a number of ways and
promotes a constructible negation asserting the existence of what is essentially a
constructible falsemaker for a formula ϕ. This distinction is illustrated well in the
discussion of falsiﬁcation in Heinrich Wansing’s [67]. Wansing cites the example of
[39] and suggests that a yellow lemon falsiﬁes the statement “the lemon is red” just
as directly as it veriﬁes the statement “the lemon is yellow.” We will assume that
theories of truthmaking also must provide accounts of falsemaking and that theories
of veriﬁcation also must provide theories of falsiﬁcation.
3.1.2
Fine’s Truthmaker Semantics
Fine’s state space semantics, like the frameworks of Suszko, van Fraassen, and Bar-
wise and Perry, allow a more ﬁne-grained veriﬁcation relation between statements
and things in virtue of which they are true than is available when coarser objects such
as possible worlds are taken to be primitive objects.2 For example, given the logical
equivalence between formulae A and A ∨(A ∧B), it is reasonable to expect that the
formulae are true at precisely the same worlds. However, although there is a sense
in which statements are true in virtue of worlds, this intuition doesn’t exhaust the
underlying story. After all, we may be reluctant to suggest that A and A ∨(A ∧B)
are true in virtue of precisely the same facts.
Fine describes this additional richness afforded by state space semantics in the
following terms:
For consider a disjunction of the form A ∨(A ∧B), say ‘it is rainy or rainy and windy’ and
compare it with its ﬁrst disjunct A (‘it is rainy’). The exact veriﬁers of the disjunction are
2See [55, 65] for a discussion of how ﬁne-grained an analysis is possible from semantics using
possible worlds.

3.1 State Space Semantics
45
the presence of rain and the presence of rain and wind. But the exact veriﬁer for the disjunct
A is simply the presence of rain. Thus within the exact semantics, there is a semantical
distinction between A and A∨(A∧B)3 while, within the inexact semantics, there is no such
distinction; the veriﬁers of either statement will be the same, viz. those states that involve
the presence of rain. [34, p. 4]
Moreover, Fine has assembled a host of topics concerning the semantical evaluation
of statements that encounter problems when evaluated against the backdrop of coarse
devices like possible worlds, including counterintuitive features of possible-worlds
evaluations of scalar implicature, of the logic and meaning of imperatives, and of
counterfactuals. In work such as [36], Fine shows that these problems evaporate when
one appeals to the additional expressiveness of state space semantics. In particular—
and relevant to the matter of Parry’s PP—state space semantics allow a very elegant
way to model the subject-matter of a proposition.
To examine Fine’s truthmaker semantics, we will ﬁrst describe the formalism.
The primary structure that underlies the models we will employ is a state space:
Deﬁnition 3.1.1 A state space is a pair ⟨S, ⊑⟩where S is a nonempty set of states
and
• ⊑is a partial ordering on S
• Every subset of S has a least upper bound with respect to ⊑
This is to say that ⟨S, ⊑⟩is an up-complete poset. The intended reading of ⊑is a
parthood relation so that for states s, t, s ⊑t is read as ‘s is a part of t.’
Furthermore, since least upper bounds are guaranteed to exist, in any state space
we can deﬁne a binary operation ⊔on states s, t ∈S as the least upper bound of s and
t under ⊑. This is read as the fusion of states s and t. We can extend this deﬁnition
to fusion over arbitrary sets of states so that for a set T ⊆S,  T is deﬁned as the
least upper bound of all elements of T . By completeness of any state space, we are
guaranteed that a state space S counts as members the fusion ■of all states in S as
well as the fusion □of the empty set (the ‘null state’).
For many purposes, such as providing accounts of the equivalence of proposi-
tions, this structure may sufﬁce, providing all the structure required, for example,
in Correia’s state space semantics of [25]. But for some purposes, some additional
structure is necessary; in [33], Fine considers a notion of possibility, codiﬁed by the
addition of a subset S♦⊆S interpreted as possible states, that is, those states that
could obtain in a world.
Deﬁnition 3.1.2 A modalized state space ⟨S, S♦, ⊑⟩is a triple where ⟨S, ⊑⟩is a
state space and S♦⊆S is a nonempty set such that
I f s ∈S♦and t ⊑s, then t ∈S♦
We can consider some further deﬁnitions concerning states in a modalized state
space:
3N.b. that this presupposes that A and B are distinct.

46
3
Metaphysical Considerations on State Space Semantics
Fig. 3.1 T ⊒U and U′ ⊑T ′
Deﬁnition 3.1.3 A state s is consistent if s ∈S♦and inconsistent otherwise.
Deﬁnition 3.1.4 States s, t are compatible if s⊔t ∈S♦and incompatible otherwise.
Note that consistency, compatibility, and their contrary properties are not deﬁned
in terms of valuations but are determined pre-linguistically, that is, in virtue of the
structure ⟨S, S♦, ⊑⟩.4
We also are interested in subsets of S and extend the relation ⊑in the following
way:
Deﬁnition 3.1.5 Let T,U ⊆S. Then:
• T ⊒U—read ‘T subsumes U’—if for all states t ∈T , there exists a state u ∈U
such that u ⊑t
• U ⊑T —read ‘U subserves T ’—is deﬁned as the property that for all states u ∈U
there exists a t ∈T such that u ⊑t
Fine provides the ‘pictorial’ interpretation by the analogy that explicates containment
as the condition that ‘each member of T will look down at a member of U and each
member of U will look up at a member of T .’ [35, p. 9] Note that the two relations
are not necessarily inverses of one another, as is implicit in the illustration of these
relations in Fig.3.1.
From these two deﬁnitions, Fine provides a further notion of containment:
Deﬁnition 3.1.6 For T,U ⊆S, T contains U (T > U) if

T ⊒U, and
U ⊑T
4The appearance of notions of compatibility and incompatibility is especially interesting due to the
role of these notions in the development of modal logic. In early presentations of Lewis’ systems
of strict implication, entailment ‘’ is not primitive, but is deﬁned in terms of the primitive, binary
compatibility or co-consistency connective ‘◦.’ Lewis goes so far as to refer to the Survey System
as the ‘Calculus of Consistencies’ in [45].

3.1 State Space Semantics
47
Combining the semantic features of a number of models built off of state spaces (in
[25, 31, 35]), we arrive at the following deﬁnition of a model:
Deﬁnition 3.1.7 A strong modalized state space model is a tuple ⟨S, S♦, ⊑, |·|+,
|·|−⟩where ⟨S, S♦, ⊑⟩is a modalized state space and valuations |·|+ and |·|−are
functions mapping atoms to nonempty subsets of S such that the following properties
hold:
• Semi-Regularity: |p|+ and |p|−are complete, i.e., |p|+ ∈|p|+
• Exclusivity: for all s ∈|p|+ and t ∈|p|−, s ⊔t /∈S♦
• Exhaustivity: for all s ∈S♦, either there exists t ∈|p|+ such that s ⊔t ∈S♦or
there exists a t′ ∈|p|−such that s ⊔t′ ∈S♦
|p|+ and |p|−are interpreted as the sets of exact veriﬁers and exact falsiﬁers of p,
respectively.
Note that the requirement of Semi-Regularity is not assumed by Fine in, e.g.,
[35].5 The assumption, however, makes the models easier to work with while not
impacting any of the deductive systems deﬁned in terms of state-space semantics.
With respect to the properties of Exclusivity and Exhaustivity, Fine offers the fol-
lowing interpretation:
The ﬁrst constraint rules out there being too many falsiﬁers for a given set of veriﬁers
and corresponds to the principle that no proposition should be both true and false; and the
second rules out there being too few falsiﬁers for a given set of veriﬁers and corresponds to
the principle that every proposition should be [either] true or false. [33, p. 5]
In[35],distinctveriﬁcationconditionsareprovided—anexact veriﬁcationinthestyle
of [37] and an inclusive veriﬁcation. However, given completeness of valuations (i.e.,
Semi-Regularity), the two types of veriﬁcation coincide. Hence, we will provide the
inclusive variety:
Deﬁnition 3.1.8 The exact veriﬁcation and falsiﬁcation conditions between states
and formulae are recursively described as:
• s ⊩+ p if s ∈|p|+
• s ⊩−p if s ∈|p|−
• s ⊩+ ¬A if s ⊩−A
• s ⊩−¬A if s ⊩+ A
• s ⊩+ A ∧B if there exist t, u ∈S such that t ⊩+ A, u ⊩+ B, and t ⊔u = s
• s ⊩−A ∧B if s ⊩−A, s ⊩−B, or there exist t, u ∈S such that t ⊩−A, u ⊩−B,
and t ⊔u = s
• s ⊩+ A ∨B if s ⊩+ A, s ⊩+ B, or there exist t, u ∈S such that t ⊩+ A, u ⊩+ B,
and t ⊔u = s
• s ⊩−A ∨B if there exist t, u ∈S such that t ⊩−A, u ⊩−B, and t ⊔u = s
5N.b. that the canonical model Fine gives in [35] is a term model with ⊑construed as set inclusion.
Hence, valuations in the canonical model are complete and Semi-Regularity can be assumed without
loss of generality. We sacriﬁce a modest amount of the ﬂexibility of Fine’s models, but nothing upon
which anything in the sequel turns.

48
3
Metaphysical Considerations on State Space Semantics
From these conditions, Fine provides deﬁnitions for several distinct notions of
content.
Deﬁnition 3.1.9 The set ⌈A⌉+ of exact veriﬁers of A or its complete content is the
set6
{s ∈S | there is an s′ ⊑s such that s′ ⊩+ A}
Likewise, the set ⌈A⌉−of exact falsiﬁers of A is the set
{s ∈S | there is an s′ ⊑s such that s′ ⊩−A}
This allows us to provide Fine’s deﬁnition of the replete content of a statement as
the convex closure of ⌈A⌉+.
Deﬁnition 3.1.10 The convex closure T∗of a set T ⊆S is deﬁned as
{s ∈S | there exist t, t′ ∈T such that t ⊑s ⊑t′}.
Deﬁnition 3.1.11 The set [A]+—the replete content of A—is ⌈A⌉+
∗, i.e., the convex
closure of the complete content of A.
Fine is especially interested in a notion of subject-matter. The subject-matter of A
might be reasonably construed as those states—whether states in a world or not—
that A is about. Because ⌈A⌉+ is complete, its fusion (⌈A⌉+) ∈⌈A⌉+ and thus
may be taken to be a state from which the information in ⌈A⌉+ may be recovered.
Given the relevance that holds between a proposition and its possible veriﬁers, the
maximal veriﬁer is the fusion of all states that A is about and is a natural contender
for the role of the subject-matter of a sentence. Fine suggests that we take this state
to represent the subject-matter of A.
Deﬁnition 3.1.12 The positive and negative subject-matters σ +(A) and σ −(A) of
A are deﬁned as ([A]) and ([¬A]), respectively, i.e., the maximal veriﬁer and
the maximal falsiﬁer of A.
The elegance of identifying the maximal veriﬁer of A with its subject matter is
apparent in many properties of the semantics.
It is interesting to note that Fine’s account of subject-matter is subtly encoded
within the notion of replete content. An alternative deﬁnition for the replete content
could have explicitly invoked the subject-matter of a statement A, i.e., σ +(A), as
illustrated in the following:
Theorem 3.1.1 (Fine) [A]+ = {s ∈S | there exist t ∈⌈A⌉such that t ⊑s ⊑
σ +(A)}
6Fine also deﬁnes a notion of content |A| as the set of exact veriﬁers without the constraint that |A|
is complete. As we are considering complete valuations, however, completeness will be inherited by
the content-sets of complex formulae and the deﬁnitions will coincide, that is, for any A, |A| = ⌈A⌉
in any model.

3.1 State Space Semantics
49
I.e., the replete content of A is the span of its set of exact veriﬁers and its subject
matter.
This is an especially interesting result when described in the following terms:
Thus the veriﬁers of A [in its replete content] are those states ‘big’ enough to contain an
exact veriﬁer but ‘small’ enough to be included within the subject-matter of the statement.
They conform to what might b called the ‘Goldilocks’ Principle’, according to which a state
s counts as a veriﬁer if it is neither too small (i.e., s ⊒t [for] some t ∈⌈A⌉) nor too large
(i.e., s ⊑(⌈A⌉). [35, p. 12]
3.1.3
Validity and Consequence: Two Systems
Given the notion of content deﬁned by Fine, there are a number of ways that the
concept of entailment could be construed. While it seems plausible to suggest that
entailment requires the containment of content from premise to conclusion, it seems
equally natural to suggest that entailment holds when all veriﬁers of a premise verify
the conclusion. Fine’s models are ﬂexible enough to accommodate many of these
intuitions and, as we might expect, different consequence relations emerge as a result.
Two such systems are Richard Angell’s logic of analytic containment AC and the
Belnap-Dunn logic of Efde.
Various understandings of entailment deﬁned within Fine’s state space semantics
as described by Fine in [35] gives rise to the deductive system AC of [2, 3]. Correia—
who described the ﬁrst semantics for AC in [23]—had argued in [24] that AC indeed
gave an appropriate characterization of factual equivalence.
The deductive system of analytic containment introduced by Richard Angell in
[2] and examined anew in [3] was intended by Angell to characterize a notion of
synonymity. Angell interpreted AC so that the property that A and B are consequences
of one another in AC is intended to provide an adequate analysis of synonymity
between A and B.
A number of potential applications for AC have been proposed since its introduc-
tion. Belnap suggested the use of AC in [12] to amend some perceived shortcomings
of Nicholas Rescher’s system of hypothetical reasoning of [57]. After providing
semantics for AC in [23], Fabrice Correia argued in [24] that AC characterizes a
notion of factual equivalence, i.e., that A and B are logically equivalent in AC pre-
cisely when the two describe the same collection of facts. (N.b. that in [25], Correia
abandoned this view, arguing that a subsystem of AC provides the correct account.)
In [3], Angell considers formulae of the form A ↔B to be primitive, where
A, B ∈Lzdf, while Correia considers an equivalent account of AC employing
formulae of the form A →B. Angell himself remarks that A →B and A ∧B ↔A
are equally good characterizations of the notion of analytic containment. In the
present account, we aim to hew close to Correia’s own presentation and thus consider
the language of ﬁrst-degree formulae Lfdf.

50
3
Metaphysical Considerations on State Space Semantics
Deﬁnition 3.1.13 Lfdf is deﬁned so that
Lfdf = {A →B | A, B ∈Lzdf},
Now, let us examine the axiomatization of AC as it appears in [23].
Deﬁnition 3.1.14 The system AC is deﬁned by the following axioms:
AC1a A →¬¬A
AC1b ¬¬A →A
AC2 A →A ∧A
AC3 A ∧B →A
AC4 A ∨B →B ∨A
AC5a A ∨(B ∨C) →(A ∨B) ∨C
AC5b (A ∨B) ∨C →A ∨(B ∨C)
AC6a A ∨(B ∧C) →(A ∨B) ∧(A ∨C)
AC6b (A ∨B) ∧(A ∨C) →A ∨(B ∧C)
while the rules of AC are:
AC7 From A →B and B →A infer ¬A →¬B
AC8 From A →B infer A ∨C →B ∨C
AC9 From A →B and B →C infer A →C
This gives us a standard account of theoremhood in AC.
Deﬁnition 3.1.15 We say that a formula A →B ∈Lfdf is a theorem of AC when
there exists a ﬁnite sequence σ of formulae, each of which is either an axiom of AC
or an application of one of the inference rules to an earlier formula or formulae in
the sequence such that σ terminates in A →B.
One of the remarkable results of [35] is the characterization of AC as a natural
consequence relation arising in truthmaker semantics. Indeed, Fine regards his work
in [35] as a sort of “vindication” [35, p. 2] of Angell’s work. In the context of state
space models, Fine provides a semantical relation corresponding to AC entailment,
characterized so that:
Observation 3.1.1 (Fine) A →B is a theorem of AC iff for every strong state space
model, [A]+ > [B]+, that is, the replete content of A contains the replete content of
B.
In plain language, AC entailment holds when every veriﬁer for A contains a veriﬁer
for B and every veriﬁer for B is contained within a veriﬁer for A.
Fine also observes that this relation of containment can be decomposed into a
bipartite condition:
Observation 3.1.2 (Fine) [A]+ > [B]+ iff

⌈A⌉+ ⊒⌈B⌉+, and
σ +(B) ⊑σ +(A)

3.1 State Space Semantics
51
It is interesting to note the proximity between Observation 3.1.2 and the explication
of containment provided by Yablo in [70], in which we ﬁnd the following assessment
of semantic containment:
A contains B, I propose, if the argument A, therefore B, is both truth-preserving and subject-
matter preserving. [70, p. 3]
Yablo’s explication of containment in terms of the containment of subject-matter can
also be thought of as a containment with respect to content or that which a statement
is about.
The resemblance between these schemata and Sylvan’s so-called “double-
barrelled analysis” makes it worthwhile to appraise Fine’s observation by the lights of
Sylvan’s criticism of Parry logics. This charge has some prima facie plausibility; the
canonical model of [30], for example, identiﬁes “concepts” with atomic formulae,
ﬁltering out problematic entailments on the basis of whether certain sentence let-
ters appear in the antecedent and consequent. In [35], however, this double-barrelled
analysis falls out so elegantly from the state space semantics—in what Fine acknowl-
edges is “an especially pleasing way” [35, p. 12]—that it is hard to see how a charge
of artiﬁciality could possibly be sustained.
Fine’s semantics is rich enough to accomodate other intuitions concerning entail-
ment, including a vindication of van Fraassen’s discussion in [37] of the Belnap-Dunn
logic Efde of tautological entailments. The truth-functional semantics for ﬁrst-degree
system Efde—so-called because it is the ﬁrst-degree fragment of the relevant logic E
and is often labeled ‘FDE’—was introduced by Dunn in [27]. Belnap’s interpretation
of this semantics—outlined in [10, 11]—will be of special importance in the sequel.
From a proof-theoretic perspective, Efde may be deﬁned as follows:
Deﬁnition 3.1.16 The system Efde is deﬁned axiomatically by adding the following
axiom to the axiomatic presentation of AC:
FDE1
A →A ∨B
A four-valued semantics for Efde may also be given, described as follows:
Deﬁnition 3.1.17 The logic Efde is the logic induced by the matrix MEfde
⟨VEfde, DEfde, f ¬
Efde, f ∧
Efde, f ∨
Efde⟩
where VEfde = {t, b, n, f}, DEfde = {t, b}, and the functions f ¬
Efde, f ∧
Efde, f ∨
Efde are
deﬁned by the following matrices:
f ¬
Efde
f ∧
Efde
t
b
n
f
f ∨
Efde
t
b
n
f
t
f
t
t
b
n
f
t
t
t
t
t
b
b
b
b
b
f
f
b
t
b
t
b
n
n
n
n f
n f
n
t
t
n
n
f
t
f
f
f
f
f
f
t
b
n
f

52
3
Metaphysical Considerations on State Space Semantics
Belnap considers the problem of what occurs when a computer or ‘artiﬁcial reasoner’
receives contradictory messages. E.g., a central computer can be set up to receive
values from sensors concerning the velocity of a vehicle. Suppose there are two
such sensors in the vehicle and that one is malfunctioning so that the computer is
being informed by two equally trustworthy sources that the vehicle is moving at two
different speeds. Classically, faced with inconsistent data, one has warrant to infer
any arbitrary conclusion. But from the standpoint of a relevant logician—Efde is
⊢-relevant—such contradictions should not ‘pollute the data,’ in Belnap’s words.
On this reading, that A is evaluated as t is read as ‘I have a source that has told
me that A is true.’ When A is evaluated as f, this is read as ‘I have a source that
has told me that A is not true.’ Naturally, one can be faced with a situation in which
both these statements hold, which corresponds to the value b, while when one has
received no statements regarding A, this is represented by A’s being evaluated as n.
Now, while the most salient interpretation Efde is in terms of computation, Efde
and fact-like semantics enjoy a deep and effervescent relationship. Both van Fraassen
in [37] and Barwise and Perry in [8] suggest that Efde captures an important and
interesting entailment relationship between propositions. It is not surprising, then,
that Fine proves in [35] that Efde can be recast in his semantics in a natural way.
Fine deﬁnes inexact consequence in the following way:
Deﬁnition 3.1.18 B is an inexact consequence of A if in any state space model,
⌈A⌉+ ⊒⌈B⌉+
It is proven in [35] that Efde corresponds to the logic of inexact consequence.
Theorem 3.1.2 (Fine) A ⊨Efde B if and only if in any state space model, ⌈A⌉+ ⊒
⌈B⌉+
3.2
Correia on Factual Equivalence
In [23], Correia studied Angell’s AC in the context of a strong equivalence between
facts. Correia deﬁnes a notion of factual equivalence so that two sentences A and
B are factually equivalent whenever any statement of the form “s grounds A” can
be replaced by “s grounds B” salva veritate. In [24], Correia further argued for the
suitability of AC as an axiomatization of the logic of factual equivalence.7
7There is a parallel between how models are employed by Fine and Correia and how models are
employed by van Fraassen and Suszko. van Fraassen was concerned with providing ﬁne-grained
accounts of entailment while Suszko was concerned with an appropriate account of identity. A
similar divide occurs between Fine and Correia: Correia is concerned with the equivalence of two
formulae in a model while Fine is concerned with representing consequence in a model.

3.2 Correia on Factual Equivalence
53
3.2.1
Correia’s Logic of Factual Equivalence
In [25], Correia rejected his earlier position that AC captured an adequate notion of
factual equivalence, arguing that there are equivalent formulae that do not describe
precisely the same facts. AC is thus rejected by Correia as too strong, compelling
Correia to provide a weaker notion of factual equivalence, one that is a subsystem of
the equivalential formulation of AC. Correia provides no name for this system, and
we will default to the easily recognizable label “Cor.”
Deﬁnition 3.2.1 The system Cor is determined by the following axioms:
Cor1 A ↔¬¬A
Cor2 A ↔A ∧A
Cor3 A ∧B ↔B ∧A
Cor4 A ∧(B ∧C) ↔(A ∧B) ∧C
Cor5 A ↔A ∨A
Cor6 A ∨B ↔B ∨A
Cor7 A ∨(B ∨C) ↔(A ∨B) ∨C
Cor8 ¬(A ∧B) ↔¬A ∨¬B
Cor9 ¬(A ∨B) ↔¬A ∧¬B
Cor10 A ∧(B ∨C) ↔(A ∧B) ∨(A ∧C)
The rules of Cor are:
Cor11 From A ↔B infer B →A
Cor12 From A ↔B and B ↔C infer A ↔C
Cor13 From A ↔B infer A ∧C →B ∧C
From a proof-theoretic perspective, Correia notes that AC may be derived from
Cor by the addition of rule AC7 or by adding the pair of axioms AC6a and AC6b.
Furthermore, in Cor we may deﬁne a notion of entailment where A →B serves as
an abbreviation for A ∧B ↔A. As a subsystem of Angell’s AC, the ﬁrst-degree
entailment version of Cor so deﬁned will enjoy the Proscriptive Principle and may
be thus considered a Parry logic as well.
In order to provide a semantics for Cor, Correia modiﬁes the strong state space
models of [35] by relaxing the condition that valuations be total, i.e., Correia assumes
only that |·|+ and |·|−are partial functions. Correia calls his modiﬁcation of Fine’s
state space semantics “ﬁtting description semantics” as the relation of exact veriﬁ-
cation s ⊩+ A is interpreted by Correia as the property that a situation s is ﬁttingly
described by A.
Deﬁnition 3.2.2 A weak state space model is a tuple ⟨S, ⊑, |·|+, |·|−⟩where ⟨S, ⊑⟩
is a state space and valuations |·|+ and |·|−are partial functions mapping atoms to
complete and nonempty subsets of S.
In [25], Correia argues that for two statements A, B to be factually equivalent is for A
and B to ﬁttingly describe precisely the same states in each weak state space model.

54
3
Metaphysical Considerations on State Space Semantics
That two formulae A, B ﬁttingly describe the same states in every model is described
as supervalidity of the equivalential formula A ↔B. Equivalently, supervalidity may
be deﬁned as the property that the complete content of A is identical to that of B in
every weak state space model.
Deﬁnition 3.2.3 A formula A ↔B is supervalid if in every weak state space model
S, ⌈A⌉+ = ⌈B⌉+
Soundness and completeness between the axiomatic and semantical presentations of
Cor is proven in [25].
Theorem 3.2.1 (Correia) A ↔B is a provable in Cor if and only if A ↔B is
supervalid.
Note, of course, that Fine’s strong models are trivially weak models. However, in
order to induce the logic Cor, the class of models with respect to which it is complete
must be weak. Hence, accepting Cor comes with a semantical commitment as well.
If the facts qua semantical device are believed to reﬂect any features of facts qua
metaphysical object, then Correia’s reliance on weak models bears rather heavy
metaphysical commitments as well.
3.2.2
Correia’s Rejection of Distribution
In [25], Correia diverges from Angell because of worries that the relation of factual
equivalence “does not validate the distributivity principle according to which A ∨
(B ∧C) is always equivalent to (A ∨B) ∧(A ∨C).” [25, p. 2] In both [24, 25], the
importance of a logical account of factual equivalence is motivated by concerns of
intersubstitutivity within contexts of explanation or grounding.
Justifying the rejection of distributivity in AC requires that one provides a case
in which some fact grounds a sentence of the form (A ∨B) ∧(A ∨C) but fails
to serve as a ground for A ∨(B ∧C). Correia gives the following example to
suggest there are instances of these two formulae that are not factually equivalent,
i.e., intersubstitutable in contexts of grounding. Correia supposes for the argument
that the sentences “Sam is sad” and “Sam is ill” are true and presents the following
three sentences:
1 The fact that Sam is sad grounds the fact that (Sam is sad or Sam is bad)
2 The fact that Sam is ill grounds the fact that (Sam is sad or Sam is ill)
3 The facts that Sam is sad and that Sam is ill ground the fact that ((Sam is sad or
Sam is bad) and (Sam is sad or Sam is ill)).
Were distributivity to hold, then from 3, we could infer
4 The facts that Sam is sad and that Sam is ill ground the fact that (Sam is sad or
(Sam is bad and Sam is ill)).
But Correia wants to reject this proposition, and hence, must reject distributivity.

3.2 Correia on Factual Equivalence
55
But intuitively [4] is false. For we may suppose that Sam is not bad, in which case ‘Sam is
bad and Sam is ill’ will be false, and accordingly the fact that Sam is ill will play no role
whatsoever in grounding the disjunctive fact. (The fact that Sam is sad will do the work.)
[25, p. 17]
In order to more precisely parse this, let us turn to an example of a weak state space
model that witnesses a failure of distribution. For simplicity’s sake, we will not
consider the state space to be modalized.
Example 1 Let SC be deﬁned so that
• S = {s0, s1, s2}
• s0 ⊑s2 and s1 ⊑s2
• |p|+ = {s0} and |q|+ = {s1}
Given this model, we observe that s0 ⊩+ p, whence s0 ⊩+ p ∨r. Furthermore,
because s1 ⊩+ q, also s1 ⊩+ p ∨q. Because s2 = s0 ⊔s1, it follows that s2 ⊩+
(p ∨r) ∧(p ∨q).
However, s2 ⊮+ p∨(r ∧q). Were this to hold, then given the recursive deﬁnition,
either
1. s2 ⊩+ p,
2. s2 ⊩+ (r ∧q), or
3. there exist t, u ∈S such that s2 = t ⊔u, t ⊩+ p, and u ⊩+ r ∧q
The ﬁrst fails to hold by construction of S. The failure of the second and third
conditions illustrates the need for Correia’s requirement that |·|+ and |·|−be partial
functions. Both would require that for some t ⊑s2, t ⊩+ q.
We note that formalizing Correia’s plain language example required that the
model be weak insofar as |r|+ = ∅. But, as we noted, this assumption carries
semantical baggage, requiring an account of logical space in which it is not logically
possible that some statement—r in the example—has veriﬁers or falsiﬁers. This has
the consequence that it is only when certain states of affairs are entirely absent from
logical space that Correia’s account of factual equivalence holds true.8
3.2.3
Hypernonsensicality
Depending on how much interpretive weight we place on the semantics, it is rea-
sonable to ﬁnd Correia’s assumption to be quite metaphysically charged. Correia
follows Fine in interpreting state space models as representing the totality of logical
8Kit Fine has objected that Correia’s “Sam” example does not demand the existence of models in
which atoms have neither veriﬁers nor falsiﬁers but only that there are models in which an atom
lacks one or the other. Indeed, the “Sam” example does not require this. But in an intermediate state
space semantics in which atoms must have at least a veriﬁer or a falsiﬁer, every formula A ∨¬A
would have a veriﬁer and a falsiﬁer, in which case a stronger logic in which distribution holds for
all instances of excluded middle would be generated.

56
3
Metaphysical Considerations on State Space Semantics
space, i.e., the totality of possible facts. Correia’s weak models essentially allow that
some atom p may not have veriﬁers or falsiﬁers.
Now, the absence of both veriﬁers and falsiﬁers may be reasonable in a number of
contexts—in the actual world, if p has a veriﬁer then we expect it to lack a falsiﬁer.
Indeed, the possibility that a proposition may lack veriﬁers and falsiﬁers is reﬂected
in Parry’s suggestion that a god could “create a world in which the proposition p
is true, without thereby creating all the objects contained in any other proposition
q,” a crucial element of his motivations for [54]. Likewise, in Peter Loptson’s [47,
48], Loptson develops possible worlds semantics that captures the observation that
in a possible world in which an individual a (say that it is denoted by “a”) does not
exist, any Russellian proposition corresponding to a sentence containing the name
“a” will not exist. For example, according to Russell, the structured proposition
corresponding to the statement
• Either Barack Obama is president or Barack Obama is not the president.
contains the referent of “Barack Obama” as a part. Hence, the proposition itself
will not exist at any world w in which Obama was not born, and the sentence would
therefore not be true at w due to the absence of any truth bearer. In such occasions, the
position of e.g. Bochvar ([18]) or Halldén ([40]) that some statements are nonsensical
seem rather reasonable.
But S, under Correia and Fine’s readings, is taken to represent logical space,
and while some statements (e.g. “Colorless green ideas sleep furiously.”) may lack
veriﬁers or falsiﬁers with metaphysical necessity, it is another matter entirely that
some statements lack veriﬁers or falsiﬁers with logical necessity, that is, there is no
possible assignment of the terms in the sentence to meanings such that the sentence
would turn out true. In a sense, Correia’s condition then corresponds to the possibility
of a proposition’s being hypernonsensical—that not only might a proposition be
meaningless at a world but also meaningless in logical space.
Our earlier considerations on logics of nonsense provide cases related to gram-
maticality in which examples of hypernonsensical statements might seem plausible.
Åqvist’s [1], for example, considers “an important class of meaningless sentences [to
be] those that are not well formed in accordance with certain syntactical rules.” [1]
Certainly, if mere juxtapositions of syncategorematic terms are identiﬁed as paradig-
matic “nonsensical” statements, Åqvist’s example seems to provide a case of “state-
ment” that lacks veriﬁers and falsiﬁers in logical space, e.g., it is entirely reasonable
to exclude truthmakers for the string “and or and” from logical space. However, as
Dawson notes in [26], to identify ill-formed strings of symbols with formulae is to
misunderstand Bochvar and Halldén, something reﬂected in such strings not appear-
ing in the language with which we have so far worked. This sentiment is also reﬂected
in the related work of Leonard Goddard and Richard Sylvan, who, in discussing such
systems, ‘exclude from consideration both gibberish and garbled word-strings.’ [38,
p. 42] More problematically for the present case, Correia’s example requires an
occasion in which a statement lacks veriﬁers but has possible falsiﬁers, but Åqvist’s
example of ill-formed formulae seems to preclude such instances. For example, the
string “not-(and or and)” seems as ill-formed as “and or and”; the suggestion that

3.2 Correia on Factual Equivalence
57
there are no veriﬁers for an ill-formed string seems to entail that neither are their
falsiﬁers.
A more plausible—albeit analogous—case is found in Carnap’s strain of logical
positivism (e.g., [20]), in which category mistakes such as “Caesar is a prime num-
ber” are considered to be literally nonsensical. Carnap’s solution to the problem of
category mistakes is to reduce these statements to the category of the ungrammatical.
Recall that “Caesar is a prime number” is “just as linguistically incorrect” [20, p. 68]
as “Caesar is and” and this pseudo-statement is therefore meaningless with logical
necessity. With no possible veriﬁers in logical space, on Carnap’s account, category
mistakes are indeed a type of “hypernonsense.”
However, although Dawson’s worry is perhaps superﬁcially resolved, other prob-
lems related to Åqvist’s suggestion reappear. If “Caesar is a prime number” is of the
same species as “Caesar is and,” then it is not clear how the sentence could have a
possible falsiﬁer while lacking any possible veriﬁers. More importantly, Correia’s
examples—being on their faces well-formed, meaningful sentences—are not of this
type, no matter how category mistakes are treated. Correia’s example requires that
the sentence “Sam is bad” ﬁttingly describes no state—that is, that the sentence has
no veriﬁers—and “Sam is bad” should hardly be counted as a category mistake, much
less ungrammatically so.
A representation of logical space in which a modest statement like “Sam is bad”
has no possible veriﬁers seems to be a questionable representation. That strong state
space models prohibit the hypernonsensicality of such statements seems to be a mark
in their favor, making it reasonable to ask whether the metaphysical intuitions that
Correia seeks to model lead inevitably to such scenarios, i.e., whether these intuitions
require weak state space models. In what follows, we will attempt to dismiss the
specter of hypernonsensicality by accommodating Correia’s intuitions concerning
distribution within the framework of strong state space models.
3.2.4
Factual Equivalence Without Hypernonsense
That the metaphysical stakes are relatively high entails that it is reasonable to ask
if this alteration to Fine’s models is indeed necessary, that is, whether Correia’s
intuitions about factual equivalence can be accommodated by strong models. In
order to examine this, let us introduce the following notation:
Deﬁnition 3.2.4 For a state s and formula A, let ⌈A⌉↾s—the s-restricted content of
A—be deﬁned as {t ∈S | t ⊑⌈A⌉and t ⊑s}.
It can be easily demonstrated that given completeness of valuations, ⌈A⌉↾s is com-
plete for all s and A.
We can now proceed to provide an alternative semantical account of Cor more
harmonious with the semantics of [35] in that it requires valuations to be total, that
is, we can impose the condition of completeness of valuations without impacting the
logic itself.

58
3
Metaphysical Considerations on State Space Semantics
Observation 3.2.1 A ↔B is a theorem of Cor iff in all strong modalized state
space models, for any state s ∈S, ⌈A⌉↾s = ⌈B⌉↾s
Proof For left-to-right, we prove the contrapositive. Given a strong modalized state
space model ⟨S, S♦, ⊑, |·|+, |·|−⟩, one can construct a weak state space model (not
necessarily modalized) ⟨{t ∈S | t ⊑s}, ⊑, |·|+, |·|−⟩where |p|+ and |p|−are
deﬁned as ⌈p⌉↾s and ⌈¬p⌉↾s, respectively. Furthermore, as the veriﬁcation and fal-
siﬁcation conditions at a state t are determined exclusively by states t′ ⊑t, the
restrictions of the veriﬁcation and falsiﬁcation conditions at each t ⊑s will remain
unchanged in the corresponding weak model. Hence, if there is a strong state space
model such that there exists an s where [A]↾s ̸= [B]↾s, we can extract from this a
weak model witnessing this. By completeness of Correia’s semantics of [25], this
entails that A ↔B is not a theorem of—is not supervalid in—Cor.
For right-to-left, we again prove the contrapositive. Suppose that A ↔B is
not a theorem of Cor. Then we note that Correia’s completeness proof for Cor
found in [25] appeals to Fine’s canonical model of [35], in which |p|+ = {p}
and |p|−= {¬p}. By completeness, in the canonical model |A| ̸= |B|, whence
|A|↾■̸= |B|↾■. Furthermore, we can follow [33] and deﬁne a strong, modalized
state space model by deﬁning
S♦= {s ∈℘(Lit) | for all p ∈At either p /∈s or ¬p /∈s}.
Hence, the canonical model provides the counterexample we require.
It follows that the questionable picture of logical space in which there may be atoms
with no possible veriﬁers or falsiﬁers is not essential to Correia’s account of equiv-
alence.
We are thus free to read supervalidity in Cor as the assertion that with respect to
any complex state of affairs s, the elements of s verifying A are precisely those that
verify B. This seems to be a reasonable characterization; assertions are not made
in a vacuum but carry presuppositions—i.e., states against which a proposition is
evaluated—no matter how meager these presuppositions may be.
Both AC and Cor can be considered to be containment logics and the state space
semantics brings to the fore the sense in which some account of nonsense or meaning-
lessness plays a role. In particular, a fact-based semantics allowed us to frame—and
resolve—related questions with respect to Correia’s preferred account of factual
equivalence in [25]. Before returning to the matter of nonsense and containment in
the context of computation, though, we may brieﬂy consider a further way in which
Fine’s state space semantics can aid in the clariﬁcation of matters of entailment and
truthmaking.

3.3 Restall on Truthmaking
59
3.3
Restall on Truthmaking
State space semantics may also be employed to shed light on competing fact-like
semantics. In a series of papers [58–60], Restall has worked to provide a formal,
semantical account of truthmaking faithful to the Australian Realist tradition as
exempliﬁed by, e.g., the work of Armstrong in [5]. In the introduction to [58], Restall
cites Frank Jackson as an illustration of the obvious connection between truthmakers
and entailment:
If  entails , what makes  true also makes  true (at least when  and  are contingent).
[43, p. 32]
Of particular interest is the following thesis:
Whever something is true, there must be something whose existence entails in an appropriate
way that it is true. [13, p. 126]
The models that we will now review are intended to capture this thesis.
3.3.1
Restall’s Truthmaker Semantics
Restall’s models of [58] are simpler than Fine’s state space models but insofar as
the two semantics are meant to capture similar intuitions, there is much in common
between the two frameworks. For his models, Restall assumes a space S of truth-
makers and deﬁnes the semantics so that each statement ϕ is mapped to some set of
elements of S—the truthmakers of ϕ.
Deﬁnition 3.3.1 A Restall model is a 3-tuple ⟨S, ⊑, |·|⟩where ⟨S, ⊑⟩is a state space
and |·| is a function from Lit to ℘(S) such that:
• For no s does s ⊨p and s ⊨¬p
• For all p, there exists a state s ∈S such that either s ⊨p or s ⊨¬p
As in the case of state space models, we extend a forcing relation between truthmakers
(i.e., states) and complex formulae:
Deﬁnition 3.3.2 In a Restall model, we extend a truthmaking relation ⊩so that for
literals,
• s ⊩p if s ∈|p|
• s ⊩¬p if s ∈|¬p|
This is extended to the case of complex positive formulae:
• s ⊩A ∧B iff s ⊩A and s ⊩B
• s ⊩A ∨B iff s ⊩A or s ⊩B
And in negative complex formulae, we appeal to Boolean equivalences:

60
3
Metaphysical Considerations on State Space Semantics
• s ⊩¬¬A iff s ⊩A
• s ⊩¬(A ∧B) iff s ⊩¬A or s ⊩¬B
• s ⊩¬(A ∨B) iff s ⊩¬A and s ⊩¬B
Truth in a model is deﬁned as we expect, that is, M ⊨A holds when there exists a
truthmaker for A.
Deﬁnition 3.3.3 A Restall model M makes a statement A true—M ⊨A—if there
exists an s ∈S such that s ⊩A.9
Like van Fraassen in [37], Restall has an interest in describing classical conse-
quence in terms of facts or truthmakers, suggesting that more ﬁne-grained models
will provide insight into the role that facts/truthmakers play with respect to logical
consequence. Having deﬁned truth in a model—where a model M stands in for a
possible world—classical entailment can be recovered as truth preservation at all
possible worlds.
Theorem 3.3.1 (Restall) A ⊨CL B is a classically valid inference if at every Restall
model M such that M ⊨A, also M ⊨B.
That classical consequence can be so naturally recast in terms of Restall’s models
attests to the ﬂexibility of his semantics.
Now, insofar as a model M is identiﬁed with a possible world (with S serving
to catalog its parts), this account of classical consequence coincides with the inter-
pretation as truth preservation at all possible worlds. Despite the added power of the
semantics, construing entailment in this way leads to familiar problems. For exam-
ple, the familiar paradoxes of strict implication of [45] or [46] appear so that all
propositions A bear this relationship to the tautology B ∨¬B.
It is thus interesting to pursue truthmaker accounts of stronger, more subtle entail-
ment relations between antecedent and consequent than is reﬂected in the classical
account, and Restall offers two competing versions of “real” entailment in [58] that
reﬂect a more robust role played by truthmakers in the inference from A to B.
Restall’s ﬁrst account of truthmaker entailment (or truthmaker entailment in the ﬁrst
sense) imports the familiar notion of strict entailment as preservation of truth across
all worlds, i.e., that A  B is true if at every world at which A is true, B, too, is
true. Restall assigns an analogous role to truthmakers so that A →B holds if “every
truthmaker for A is a truthmaker for B.” [58, p. 339] More formally, we deﬁne
Deﬁnition 3.3.4 A ⊨B is a truthmaker entailment in the ﬁrst sense if at every
Restall model M, for every truthmaker s ∈S such that s ⊩A, also s ⊩B.
Restall continues to show that the deductive system corresponding to this ﬁrst sense
of truthmaker entailment is a familiar one. The logic of truthmaker entailment in the
ﬁrst sense corresponds to consequence in the strong Kleene three-valued logic K3,
9While using “⊨” both as a relation between formulae and as a relation between a model and a
formula might be considered an abuse of notation, this is standard in model theory.

3.3 Restall on Truthmaking
61
introduced in [44] as an account of classical logic in which valuations may be partial
functions.10
K3 may be deﬁned over the language Lzdf by the following matrix:
Deﬁnition 3.3.5 K3 is the logic induced by the matrix
⟨VK3, DK3, f ¬
K3, f ∧
K3, f ∨
K3⟩
where VK3 = {t, n, f} and DK3 = {t} and the functions f ¬
K3, f ∧
K3, f ∨
K3 are deﬁned by
the following matrices:
f ¬
K3
f ∧
K3
t
n
f
f ∨
K3
t
n
f
t
f
t
t
n
f
t
t
t
t
n
n
n
n
n
f
n
t
n
n
f
t
f
f
f
f
f
t
n
f
In[58],RestallshowsthattruthmakerentailmentintheﬁrstsenseandK3 consequence
coincide, captured by the following theorem:
Theorem 3.3.2 (Restall) A ⊨B is a truthmaker entailment in the ﬁrst sense if and
only if A ⊨K3 B
While Kleene introduced K3 in the context of studying partial functions, its appear-
ance in this context is not altogether surprising. It is worth mentioning that Barwise
and Perry’s situation semantics in [7] yields K3 consequence as well. Although the
later semantics of [8] (like van Fraassen’s factual entailment) yields Efde, the earlier
paper disallows inconsistent situations, a condition that corresponds to the suppres-
sion of the truth value n and, hence, the collapse of the matrix semantics for Efde to
the matrix semantics for K3.11
There is a long tradition of using facts not only to deﬁne and explain weak con-
sequence relations, but also to shed light on classical logic by recovering classical
entailment within some framework of facts or situations. It seems that it is an equally
worthy goal to see what light can be shed on Restall’s account by reseating it within
the framework of state space semantics.
10Recall that Bochvar’s internal nonsense logic 0 was also introduced by Stephen Kleene in [44]
and is thus frequently referred to as Kleene’s “weak” three-valued logic, whence the description of
K3 as “strong.”
11Precluding inconsistent situations is analogous to removing the “both” value bfrom the semantics
for Efde described in Deﬁnition 3.1.17. Removing this value leads to the many-valued semantics
for K3 in Deﬁnition 3.3.5.

62
3
Metaphysical Considerations on State Space Semantics
3.3.2
Worlds, Again
Reviewing Fine’s “classical recapture”—i.e., the account of classical validity in terms
of state space models—is worthwhile for two reasons. On the one hand, such a review
will provide us insight into how to bring Fine’s account of CL into harmony with
the underlying picture in Restall’s Theorem 3.3.1. On the other hand, examining
alternative characterizations of classical logic in state space semantics will allow us
to introduce a handful of interesting observations.
Fine’s recovery of classical consequence in [36] is given in terms of veriﬁcation
by states in general. However, an equivalent notion of entailment in sympathy with
Restall’s representation of classical consequence may be described as well. But in
order to deﬁne truth preservation across possible worlds, we have to ﬁrst deﬁne an
appropriate representation of a world in state space semantics.
The most intuitive interpretation of states is that they represent states of affairs or
facts. If the Tractarian view is that world is an aggregates of states of affairs, then
it is clear that state space semantics can support a similar, combinatorial notion of
possible world. A very prominent example of this is found in [4], the main thesis of
which is described by Sider in the following terms:
The core idea of David Armstrong’s combinatorial theory of possibility is attractive.
Rearrangement is the key to modality; possible worlds result from scrambling bits and
pieces of other possible worlds. [64, p. 679]
The corresponding notion to a combinatorial possible world is a fusion of other primi-
tive states that meets certain criteria. In Fine’s paper [32], he provides a corresponding
deﬁnition of a particular type of state called a world-state.
Deﬁnition 3.3.6 A world-state is a state w ∈S♦such that for all s ∈S♦, either
s ⊑w or s is incompatible with w.
Fine’s world-states are factually saturated in the sense that with respect to a
world w, every possible state s ∈S♦is either part of w—that is, obtains in w—or
is incompatible with w in a strong sense. Compare this account of world-states with
Armstrong’s [4]:
The simplest way to specify a possible world would be to say that any conjunction of possible
atomic states of affairs, including the unit conjunction, constitutes such a world. [4, p. 47]
It is arguable that invoking possible worlds carries more metaphysical commitments
than merely invoking situations or facts. Consistent with this position, Fine shows
that classical logic can be recovered without appeal to worlds and chooses to present
classical consequence as the preservation of loose veriﬁcation across arbitrary states.
Deﬁnition 3.3.7 (Loose Veriﬁcation) A state s loosely veriﬁes A—written s ⊩l A—
if any state that is compatible with s is compatible with some t ∈⌈A⌉.
Observation 3.3.1 (Fine) A ⊨CL B is a classically valid inference if for every state
space model S and every s ∈S, if s ⊩l A then s ⊩l B

3.3 Restall on Truthmaking
63
But consider Fine’s deﬁnition of world-states and assume the natural position that
the truth of a statement A at a world w is precisely the existence of a truthmaker
s ⊑w such that s ⊩A.
Then we are free to recast classical entailment—as Restall supposes in [58]—as
truth-preservation at any possible world.
Observation 3.3.2 A ⊨CL B if for every state space model and world-state w, if w
inexactly veriﬁes A, then w inexactly veriﬁes B.
Recasting the recapture of classical entailment in this way provides an analogy by
which we may represent Restall’s account of entailment and truthmaking. In [58],
Restall’s models are taken to represent possible worlds containing truthmakers as
their parts. So it is reasonable to consider the following deﬁnition relating parts of
worlds to worlds themselves:
Deﬁnition 3.3.8 Call a state s w-actual if w is a world and s ⊑w.
A state’s being w-actual is analogous to saying that the state is a truthmaker at w
or that w obtains as a fact at w.
Observation 3.3.3 A ⊨K3 B iff for every world-state w, w-actual veriﬁer of A con-
tains a w-actual veriﬁer of B
Proof For left-to-right, we prove the contrapositive. First, if s ⊑w for a world
w ∈S♦, then for no atom p does s ⊩+ p and s ⊩−p. Suppose that t ⊑w and
t′ ⊑w and t ⊩+ p and t′ ⊩−p. Then because t ⊑w and t′ ⊑w, t ⊔t′ ⊑w. But
by deﬁnition of S♦, that w ∈S♦and t ⊔t′ ⊑w entails that t ⊑t′ ∈S♦. But by
Exclusivity, t ⊑t′ /∈S♦.
Hence, with respect to any s ⊑w, for every p ∈At, either there is an exact
veriﬁer t ⊑s for p, there is an exact falsiﬁer t ⊑s for p, or there are no exact
veriﬁers or falsiﬁers of p that are part of s. We can thus recursively construct a K3
valuation vs by initially assigning values {t}, {f}, or ∅to atoms
vs(p) =
⎧
⎪⎨
⎪⎩
tif ∃t ⊑s such that t ⊩+ p
fif ∃t ⊑s such that t ⊩−p
notherwise
The initial valuation can be extended recursively easily. The cases for truth, for
example:

64
3
Metaphysical Considerations on State Space Semantics
vs(¬A) = t
iff ∃t ⊑s such that t ⊩+ ¬A
iff t ⊩−A
iff vs(A) = f
vs(A ∧B) = t iff ∃t ⊑s such that t ⊩+ A ∧B
iff ∃t, u ⊑ss.t.t ⊩+ A and u ⊩+ B
iff vs(A) = t and vs(B) = t
vs(A ∨B) = t iff ∃t ⊑s such that t ⊩+ A ∨B
iff ∃t, u ⊑s s.t. t ⊩+ A or u ⊩+ B
iff vs(A) = t or vs(B) = t
Analogous conditions can be derived in the case of falsity and the third value n. The
K3 truth tables can be reconstructed, whence given a world-state w and a w-actual
veriﬁer s for B that contains no exact veriﬁer for A, vs will serve as a K3 valuation
witnessing that A ⊭K3 B, i.e., will verify that vs(A) = t and vs(B) ̸= t.
For right-to-left, let v be a K3 valuation serving as a counterexample to A ⊨K3 B
and consider the set:
Lv = {{p} | if v(p) = t} ∪{{¬p} | if v(p) = f}
Now consider the set  Lv.
Now,  Lv is a state present in the canonical model described in [35]. Moreover,
it is a part of many world-states in the canonical model, e.g., the state
!Lv =
	
Lv ∪
	
{{p} | {p, ¬p} ∩(
	
Lv) = ∅}
An easy induction establishes that v(A) = t if and only if there exists a state s ⊆ Lv
such that s ⊩A. Hence, any truth-functional counterexample yields an appropriate
part of a world-state in the canonical model.
⊓⊔
We can also rephrase this by deﬁning a notion of “worldy content” of a statement
at a world w. Recall the notation of Deﬁnition 3.2.4. Then ⌈A⌉+↾w is the set of the
w-actual veriﬁers of A.
Hence, we are free to rephrase Observation 3.3.3 in the following terms:
Observation 3.3.4 A ⊨K3 B iff for every world-state w, ⌈A⌉+↾w ⊒⌈B⌉+↾w
So Restall’s account of K3 in terms of state space semantics appears entirely natural.
As we’ve suggested, there is some precedent for this, as Barwise and Perry implicitly
endorsed this consequence relation in [7].
3.3.3
The Emergence of RMfde
In the concluding two paragraphs of [58]—immediately after discussing K3 as a
candidate for a form of “real” entailment—Restall brieﬂy suggests a second sense

3.3 Restall on Truthmaking
65
of truthmaker entailment. After observing that A ∧¬A entails an arbitrary formula
B in truthmaker entailment in the ﬁrst sense, Restall suggests this second species
of truthmaker entailment in two lines. Where ⇒represents the ﬁrst sense of “real”
entailment, the brief passage is:
But we can get closer to ﬁrst-degree entailment by setting A ⇒2 B if and only if A ⇒B
and ¬B ⇒¬A. Then we do not have A∧¬A ⇒2 B, but we still have A∧¬A ⇒2 B ∨¬B.
[58, p. 339]
Granted the role Efde has played in the semantics of [37] and [8], the attractiveness
of “approximating” Efde is understandable. What is especially interesting—and per-
haps a bit surprising—about Restall’s suggestion is the subsequent remark that this
second species of truthmaker entailment corresponds to the deductive system RMfde,
i.e., the ﬁrst-degree fragment of R-Mingle.
From a proof-theoretic perspective, RMfde is a relatively natural system. Syntac-
tically, a proof theory for RMfde can be deﬁned by enriching the axiomatic deﬁnition
of Efde provided in Deﬁnition 3.1.16 with the so-called Safety axiom (cf. [29]):
Safety
A ∧¬A →B ∨¬B
Of course, we can recognize that Safety corresponds to the ﬁnal valid entailment
mentioned by Restall in the earlier quote. Syntactic consequence in RMfde thus
springs easily from Efde.
Within the setting of Restall’s models, consequence for RMfde can be deﬁned in
[58] as follows:
Theorem 3.3.3 (Restall) A ⊨B is valid in RMfde if at every Restall model M,
every truthmaker s ∈W such that s ⊩A, also s ⊩B and every truthmaker s ∈W
such that s ⊩¬B, also s ⊩¬A.
Now, Restall’s presentation of RMfde as a logic of real entailment is extraordinarily
terse and seems to come from nowhere. Although Restall takes care to interpret and
motivate the ﬁrst species of entailment (i.e., K3), the paper lacks any explanation
of why one might embrace the picture assumed by the second sense of truthmaker
entailment.InconjunctionwiththesomewhatunusualsemanticalaccountforRMfde,
that Restall ﬂoats the system as an account of real entailment may be puzzling. By
rephrasing Restall’s intuitions in the setting of state space semantics, however, we
can provide some insight into why someone may embrace consequence in RMfde
as a logic of “real” entailment.
Restall’s endorsement is helped little by the fact that from the perspective of
many-valued semantics, RMfde is a rather odd system. As the axiomatic account
suggested, RMfde is a proper extension of Efde, as are Priest’s LP and Kleene’s K3.
However, while from the many-valued presentations of LP and K3 (cf. Deﬁnitions
2.3.5, 3.1.17, and 3.3.5), each of these subsystems can be deﬁned as restrictions of the
matrix MEfde, there is no similar restriction of the matrix of Efde that yields RMfde.
Rather, as shown implicitly by Dunn in [28] (and more explicitly in [29]), many-
valued semantics for RMfde are provided by appealing to the pair of matrices MLP

66
3
Metaphysical Considerations on State Space Semantics
and MK3.12 Semantics for RMfde can be described in terms of the matrix semantics
for LP (in Deﬁnition 2.3.5) and K3 (in Deﬁnition 3.3.5) as follows:
Deﬁnition 3.3.9 A ⊨RMfde B is valid if

for all LP valuations v s.t. v(A) ∈DLP, v(B) ∈DLP, and
for all K3 valuations v s.t. v(A) ∈DK3, v(B) ∈DK3
It follows from this presentation that RMfde is the intersection LP∩K3. Now, the lack
of a standard matrix semantics for RMfde might be considered a mark against the
system.ButthecharacterizationofRMfde inDeﬁnition3.3.9yieldsaclueconcerning
how RMfde might be a plausible—perhaps attractive—candidate for an account of
truthmaker entailment.
Given the duality between LP and K3 we have the following observation (which
has, for example, been noted by Jc Beall in [9]):
Observation 3.3.5 A ⊨K3 B if and only if ¬B ⊨LP ¬A
Hence, an equivalent way of characterizing RMfde consequence would be:
Deﬁnition 3.3.10 A ⊨RMfde B is valid if

A ⊨K3 B is valid, and
¬B ⊨K3 ¬A is valid
A natural interpretation of Deﬁnition 3.3.10 would be that RMfde consequence iden-
tiﬁes entailment not only with truth preservation but also with non-falsity preser-
vation. The case of logics of nonsense provide one of the most important examples
of interpreting entailment as non-falsity preservation. For present purposes, we will
consider for now Bochvar’s logic of nonsense  (and its “internal fragment” 0) out-
lined in [18] and Halldén’s C introduced in [40] (alongside its “classical fragment”
C0).
Recall that 0 and C0 differ only in that the latter takes the “nonsense value”
to be designated while the former does not, i.e., logical consequence to Halldé is
construed as ensuring that consequence preserves non-falsity. The motivation for
this has enjoyed a number of distinct interpretations. For example, in [68], Timothy
Williamson suggests that “[t]he rationale for Halldén’s designation policy is clear”
[68, p. 105] asserting that Halldén designates the value u precisely because 0’s
lacking theorems is a pathology that can be averted in C0 when nonsense is desig-
nated. Halldén’s position is unusual in that designated values are often interpreted as
“truthlike,” a property that is hard to attribute to meaningless statements. Ross Brady
and Sylvan, for example, reject Halldén’s position by claiming that it commits us “to
sometimes asserting logical nonsense.” [19, p. 219]
Halldén is, in fact, sensitive to this, writing that with respect to such an objection,
12It is worth noting that there exists an intriguing connection between Dunn’s semantics for RMfde
and the more recent swap structure semantics introduced by Walter Carnielli and Marcelo Coniglio
in [21]. In many cases, swap structures are isomorphic to ﬁnite collections of logical matrices,
enabling Carnielli and Coniglio to show that a number of logics of formal inconsistency (cf. [22])
that are not characterizable by a ﬁnite matrix have characterizations by collections of such matrices.

3.3 Restall on Truthmaking
67
[t]he answer... is, roughly, that a formula is to be taken as asserting something only about
those values of which it can meaningfully assert something. The formula is true if the property
or relation it asserts applies to all those values of which it can be meaningfully asserted. [40,
p. 47]
The upshot of Halldén’s response is that selection of designated values is deter-
mined by concerns about validity rather than concerns about truth. Whereas, e.g.,
Brady and Sylvan look at the “local” level and judge the treatment of an individual
meaningless sentence as having a “truth-like” property, Halldén is looking to how to
judge the validity of an inference in general.
The requirement that logical consequence must preserve non-falsity becomes all
the more natural when non-falsity preservation is recast in terms of truthmakers.
Because of the entrenchment of Efde in these types of semantics, it will be useful
to observe that in Efde consequence-as-truth-preservation and consequence-as-non-
falsity-preservation coincide. Recasting this observation in terms of truthmaking and
falsemaking, this phenomenon can be described in the following observation:
Observation 3.3.6 The following are equivalent
1. In all state space models, ⌈A⌉+ ⊒⌈B⌉+
2. In all state space models, both ⌈A⌉+ ⊒⌈B⌉+ and ⌈B⌉−⊒⌈A⌉−
3. In all state space models, ⌈B⌉−⊒⌈A⌉−
Proof By the rules for Efde, A →B is valid, i.e., ⌈A⌉+ ⊒⌈B⌉+ holds in all models,
if and only if ¬B →¬A is valid. This latter claim is equivalent to ⌈¬B⌉+ ⊒⌈¬A⌉+,
which is equivalent to ⌈B⌉−⊒⌈A⌉−.
Likewise, the type of bipartite scheme represented by RMfde could have been
imposed in, e.g., [37] without any loss of generality.
This observation has consequences for how different entailment relations are con-
strued in state space semantics. For example, if we recall Fine’s deﬁnition of inexact
consequence, Observation 3.3.6 entails that the following provides an equivalent
deﬁnition for inexact consequence:
Deﬁnition 3.3.11 B is an inexact consequence of A if in any state space model, both

⌈A⌉+ ⊒⌈B⌉+, and
⌈B⌉−⊒⌈A⌉−
From this observation, then, we can infer that this equivalent notion of inexact con-
sequence will correspond to Efde as well:
Corollary 3.3.1 A
⊨Efde
B if and only if in any state space model, both

⌈A⌉+ ⊒⌈B⌉+, and
⌈B⌉−⊒⌈A⌉−
Now, suppose that someone is taken by Fine’s account of truthmaker semantics
but doggedly subscribes to a combinatorialist view, accepting that the only possible

68
3
Metaphysical Considerations on State Space Semantics
states of affairs are those that are actual. Such an individual would presumably
wish to follow the general scheme of, e.g., inexact consequence while restricting the
veriﬁers and falsiﬁers of a formula A by which inexact consequence is evaluated to
those that actually obtain in a world w. In other words, such a combinatorialist might
embrace a “local logic of inexact consequence.” However, granted the equivalence
of Deﬁnitions 3.1.18 and 3.3.11, there is no one deductive system that serves as the
unique local logic of inexact consequence.
Moreover, although equivalent globally (i.e., when evaluated against arbitrary
states), Deﬁnitions 3.1.18 and 3.3.11 diverge locally (i.e., when considering only
states that are w actual). Let us explicitly represent these notions of local inexact
consequence by making the requisite restrictions on Deﬁnitions 3.1.18 and 3.3.11,
respectively:
Deﬁnition 3.3.12 B is a local inexact consequence of A in the ﬁrst sense if in every
state space model and world-state w, ⌈A⌉+↾w ⊒⌈B⌉+↾w
Deﬁnition 3.3.13 B is a local inexact consequence of A in the second sense if in
every state space model and world-state w, both

⌈A⌉+↾w ⊒⌈B⌉+↾w, and
⌈B⌉−↾w ⊒⌈A⌉−↾w
The similarity between these local particularizations of inexact consequence and the
characterizations of K3 and RMfde in state space semantics is pronounced.
For example, if we recall Observation 3.3.4, the following is immediate:
Observation 3.3.7 A ⊨K3 B iff B is a local inexact consequence of A in the ﬁrst
sense.
And from the structure of Deﬁnition 3.3.13, the claim of RMfde to the mantle of the
logic of wordly inexact consequence appears just as legitimate as the claim of K3.
This observation follows from an alternative formulation of RMfde consequence in
state space semantics.
Observation 3.3.8 A ⊨RMfde B if in all world-states w,

⌈A⌉+↾w ⊒⌈B⌉+↾w, and
⌈B⌉−↾w ⊒⌈A⌉−↾w
Proof As described in [29], consequence in RMfde can be deﬁned so that:
A ⊨RMfde B iff

A ⊨K3 B, and
A ⊨LP B
Where LP is Priest’s “logic of paradox” of [56] (deﬁned in Deﬁnition 2.3.5). Fur-
thermore, we have noted that
A ⊨K3 B iff ¬B ⊨LP ¬A
Granted these observations, we may appeal to Observation 3.3.4 to immediately
secure the observation.

3.3 Restall on Truthmaking
69
Just as Observation 3.3.4 and Deﬁnition 3.3.12 bore a clear resemblance, Observation
3.3.8 allows us to appeal to its similarity to Deﬁnition 3.3.13 to draw the following
conclusion:
Observation 3.3.9 A ⊨RMfde B iff B is a local inexact consequence of A in the
second sense.
Not only does this characterization show that RMfde has a legitimate claim as the
logic of inexact consequence but it also reﬂects a natural picture of truthmaking
entailment. Note that Observation 3.3.8 boils down to the claim that in any world w,
every exact veriﬁer of A contains an exact veriﬁer of B and that every exact falsiﬁer
of B contains an exact falsiﬁer of A.
This latter condition may be rephrased as the demand that any exact-non-falsiﬁer
of A is an exact-non-falsiﬁer of B. From a naïve perspective, we expect correct
reasoning to preserve non-falsity and this intuition is reinforced once we move from
thinking about truth values to truth makers. We undoubtedly expect of falsiﬁers that
they support this analysis of consequence. When, e.g., a suspected criminal is on trial,
the body of evidence employed by the court can count as a truthmaker or falsemaker
for his or her testimony. Suppose that the accused has provided an alibi while on
the stand; then the role of the prosecution is to employ the body of evidence as a
falsiﬁer for the accused’s alibi. It seems reasonable to expect that if the evidence fails
to reveal “I was at Abel’s house at the time the crime was committed” as perjury—if
the evidence is too weak to disprove the alibi—then the evidence should also fail
to reveal “I was either at Abel’s house or Becky’s house during the crime” to be a
falsehood.
Note that the K3 account of “real” entailment fails to validate this intuition. For
example, the inference A ∧¬A ⊨K3 B is valid for arbitrary formulae B. Now, for an
arbitrary state s ∈S♦, s is a non-falsemaker for a contradiction A∧¬A. Considering
an arbitrary model in which a contingent proposition ¬B holds shows that the fact
that s is a non-falsemaker for the contradiction does not preclude s from serving as
a falsemaker for a contingent proposition B. Hence, RMfde as a type of truthmaker
entailment captures intuitions that K3 does not support.
3.4
Concluding Remarks
Although we have noted that Suszko’s [66] is contemporary to van Fraassen’s [37],
Fine’s state space semantics for Angell’s containment logic AC and Correia’s account
of Cor are clearly counted in the lineage of van Fraassen’s work. It is worth noting,
however, that Parry-type systems in general—and AC in particular—admit analyses
within the framework of Suszko and Bloom’s non-Fregean logics from [16] and [17].
In [53], Marek Nowak cites [7] and [8] as motivation for the formulation of a so-
called Barwise and Perry’s principle concerning the identity between two formulae:
BP
Two sentences whose logical forms are logically equivalent and have the same
extralogical constants, [express the same proposition].

70
3
Metaphysical Considerations on State Space Semantics
As a particularization of BP to the propositional case, Nowak attributes to [69] a
constraint he calls Wójcicki’s principle (WP):
WP
Two sentences whose logical forms in sentential language are logically equiv-
alent and have the same sentential variables [express the same proposition].
The system so determined can be seen to be the set of ﬁrst-degree biequivalences in
Parry’s PAI, that is, strong consequence in the propositional case (via Wójcicki) is
equivalent to consequence in PAIfde. Further work in which the containment logics
induced by such constraints is developed has appeared by Andrzej Bilat in [14, 15].
But AC, too, has received an analysis within this framework. Tadao Ishii, in [41,
42] has described systems of propositional logic with identity in which AC emerges.
It stands to reason that Cor can be folded into this framework as well. Although
these two traditions—that of van Fraassen and that of Suszko—differ, it should still
be worth considering Cor and state space semantics through the lens of non-Fregean
logic.
References
1. Åqvist, L.: Reﬂections on the logic of nonsense. Theoria 28(2), 138–157 (1962)
2. Angell, R.B.: Three systems of ﬁrst degree entailment. J. Symb. Log. 42(1), 147 (1977)
3. Angell, R.B.: Deducibility, entailment and analytic containment. In: Norman, J., Sylvan, R.
(eds.) Directions in Relevant Logic, Reason and Argument, pp. 119–143. Kluwer Academic
Publishers, Boston (1989)
4. Armstrong, D.M.: A Combinatorial Theory of Possibility. Cambridge Studies in Philosophy.
Cambridge University Press, New York (1989)
5. Armstrong, D.M.: Truth and Truthmakers. Cambridge Studies in Philosophy. Cambridge Uni-
versity Press, New York (2004)
6. Ayer, A.J. (ed.): Logical Positivism. The Free Press, New York (1959)
7. Barwise, J., Perry, J.: Semantic innocence and uncompromising situations. Midwest Stud.
Philos. 6(1), 387–404 (1981)
8. Barwise, J., Perry, J.: Situations and Attitudes. MIT Press, Cambridge (1983)
9. Beall, J.C.: Multiple-conclusion LP and default classicality. Rev. Symb. Log. 4(2), 326–336
(2011)
10. Belnap Jr., N.D.: How a computer should think. In: Ryle, G. (ed.) Contemporary Aspects of
Philosophy, pp. 30–56. Oriel Press, Stockﬁeld (1977)
11. Belnap Jr., N.D.: A useful four-valued logic. In: Dunn, J.M., Epstein, G. (eds.) Modern Uses
of Multiple-valued Logic, pp. 8–37. Reidel, Dordrecht (1977)
12. Belnap Jr., N.D.: Conjunctive containment. In: Norman, J., Sylvan, R. (eds.) Directions in
Relevant Logic, Reason and Argument, pp. 145–156. Kluwer Academic Publishers, Boston
(1989)
13. Bigelow, J.: The Reality of Numbers. Oxford University Press, Oxford (1988)
14. Bilat, A.: Non-Fregean logics of analytic equivalence I. Bull. Sect. Log. 44(1–2), 53–68 (2015)
15. Bilat, A.: Non-Fregean logics of analytic equivalence II. Bull. Sect. Log. 44(1–2), 69–80 (2015)
16. Bloom, S.L., Suszko, R.: Semantics for the sentential calculus with identity. Stud. Log. 28,
77–81 (1971)
17. Bloom, S.L., Suszko, R.: Investigations into the sentential calculus with identity. Notre Dame
J. Form. Log. 13(3), 289–308 (1972)

References
71
18. Bochvar, D.A.: On a three-valued logical calculus and its application to the analysis of contra-
dictions. Matematicheskii Sb. 4(2), 287–308 (1938)
19. Brady, R.T., Routley, R.: Don’t care was made to care. Aust. J. Philos. 51(3), 211–225 (1973)
20. Carnap, R.: Überwindung der metaphysik durch logische analyse der sprache. Erkenntnis 2(1),
219–241 (1931). Reprinted in [6]:60–81
21. Carnielli, W., Coniglio, M.: Swap structures for LFIs. CLE e-Prints 14(1), 1–42 (2014)
22. Carnielli, W., Coniglio, M.E., Marcos, J.: Logics of formal inconsistency. In: Gabbay, D., Guen-
thner, F. (eds.) Handbook of Philosophical Logic, vol. 14, pp. 15–107. Springer, Netherlands
(2007)
23. Correia, F.: Semantics for analytic containment. Studia Logica 77(1), 87–104 (2004)
24. Correia, F.: Grounding and truth functions. Logique et Analyse 53(211), 251–279 (2010)
25. Correia, F.: On the logic of factual equivalence. Rev. Symb. Logic 9(1), 103–122 (2016)
26. Dawson, E.: Review: Lennart åqvist, reﬂections on the logic of nonsense; Krister Segerberg, a
contribution to nonsense-logics. J. Symb. Log. 33(1), 134–136 (1968)
27. Dunn, J.M.: Intuitive semantics for ﬁrst-degree entailments and ‘coupled trees’. Philos. Stud.
29(3), 149–168 (1976)
28. Dunn, J.M.: A Kripke-style semantics for R-Mingle using a binary accessibility relation. Stud.
Logica 35(2), 163–172 (1976)
29. Dunn, J.M.: Partiality and its dual. Stud. Logica 66(1), 5–40 (2000)
30. Fine, K.: Analytic implication. Notre Dame J. Form. Log. 27(2), 169–179 (1986)
31. Fine,K.:Truth-makersemanticsforintuitionisticlogic.J.Philos.Log.43(2–3),549–577(2014)
32. Fine, K.: A theory of partial truth (2015). Unpublished ms
33. Fine, K.: A theory of truth-conditional content I: Conjunction, disjunction, and negation (2015).
Unpublished ms
34. Fine, K.: Truthmaker semantics (2015). Unpublished ms
35. Fine, K.: Angellic content. J. Philos. Log. 45(2), 199–226 (2016)
36. Fine, K.: Truthmaker semantics. In: Hale, B., Wright, C., Miller, A. (eds.) Blackwell Handbook
to the Philosophy of Language, 2nd edn, pp. 556–577. John Wiley and Sons, Oxford (2017)
37. van Fraassen, B.C.: Facts and tautological entailments. J. Philos. 66(15), 477–487 (1969)
38. Goddard, L., Routley, R.: The Logic of Signiﬁcance and Context, vol. 1. Halsted Press, New
York (1973)
39. Grzegorczyk, A.: A philosophically plausible formal interpretation of intuitionistic logic. Inda-
gationes Mathematicae 26, 596–601 (1964)
40. Halldén, S.: The Logic of Nonsense. Lundequista Bokhandeln, Uppsala, Sweden (1949)
41. Ishii, T.: Propositional calculus with identity. Tech. Rep. IS-RR-97-0042F, Japan Advanced
Institute of Science and Technology, Nomi City, Japan (1997)
42. Ishii, T.: Propositional calculus with identity. Bull. Sect. Log. 27(3), 96–104 (1998)
43. Jackson, F.: Armchair metaphysics. In: Michael, M., O’Leary-Hawthorne, J. (eds.) Philosophy
in Mind, pp. 23–42. Kluwer, Dordrecht (1994)
44. Kleene, S.C.: Introduction to Metamathematics. North-Holland Publishing Company, Amster-
dam (1952)
45. Lewis, C.I.: A Survey of Symbolic Logic. University of California Press, Berkeley, CA (1918)
46. Lewis, C.I., Langford, C.H.: Symbolic Logic, 2nd edn. Dover, New York (1959)
47. Loptson, P.: Logic and contingent existence. Hist. Philos. Log. 1(1–2), 171–185 (1980)
48. Loptson, P.: Q, entailment, and the Parry property. Logique et Analyse 23(90–91), 305–317
(1980)
49. Mulligan, K., Simons, P., Smith, B.: Truth-makers. Philos. Phenomen. Res. 44(3), 287–321
(1984)
50. Nelson, D.: Constructible falsity. J. Symb. Log. 14(1), 16–26 (1949)
51. Nelson, D.: Negation and separation of concepts in constructive systems. In: Heyting, A. (ed.)
Constructivity in Mathematics, pp. 208–225. North-Holland, Amsterdam (1959)
52. Nelson, D., Almukdad, A.: Constructible falsity and inexact predicates. J. Symb. Log. 49(1),
231–233 (1984)
53. Nowak, M.: The logics of analytic equivalence. Bull. Sect. Log. 37(3/4), 265–272 (2008)

72
3
Metaphysical Considerations on State Space Semantics
54. Parry, W.T.: Implication. Ph.D. thesis, Harvard University (1932)
55. Perry, J.: From worlds to situations. J. Philos. Log. 15(1), 83–107 (1986)
56. Priest, G.: The logic of paradox. J. Philos. Log. 8(1), 219–241 (1979)
57. Rescher, N.: Hypothetical Reasoning. Studies in Logic and the Foundations of Mathematics.
North-Holland Publishing Company, Amsterdam (1964)
58. Restall, G.: Truthmakers, entailment and necessity. Austr. J. Philos. 74(2), 331–340 (1996)
59. Restall, G.: Modelling truthmaking. Logique et Analyse 43(169–170), 211–230 (2000)
60. Restall, G.: Truthmakers, entailment and necessity 2008. In: Lowe, E.J., Rami, A. (eds.) Truth
and Truth-Making, pp. 98–101. Acumen, Stocksﬁeld (2009)
61. Rosenberg, J.F.: Russell on negative facts. Noûs 6(1), 27–40 (1972)
62. Routley, R., Routley, V.: The semantics of ﬁrst degree entailment. Noûs 6(4), 335–359 (1972)
63. Russell, B.: The philosophy of logical atomism. The Monist 4(1), 495–527 (1918)
64. Sider, T.: Another look at Armstrong’s combinatorialism. Noûs 39(4), 679–695 (2005)
65. Stalnaker, R.: Possible worlds and situations. J. Philos. Log. 15(1), 109–123 (1986)
66. Suszko, R.: Ontology in the Tractatus of L. Wittgenstein. Notre Dame J. Form. Log. 9(1), 7–33
(1968)
67. Wansing, H.: Proofs, disproofs, and their duals. In: Beklemishev, L.D., Goranko, V., Shehtman,
V. (eds.) Advances in Modal Logic, vol. 8, pp. 483–505. College Publications, London (2010)
68. Williamson, T.: Vagueness. Routledge, New York (1994)
69. Wójcicki, R.: Semantyka sytuacyjna logiki niefregowskiej. In: Pelc, J. (ed.) Znaczenie i prawda:
Rozprawy semiotyczne. Wydawn. Nauk. PWN, Warsaw (1994)
70. Yablo, S.: Aboutness. Princeton University Press, Princeton (2014)

Chapter 4
A Computational Interpretation
of Conceptivism
Abstract In this chapter, we consider interpretations of disjunction that accord with
a characteristic feature of Parry logics: the failure of Addition. In such a context, the
evaluation of a disjunction A ∨B requires not only the truth of one disjunct, but also
that both disjuncts satisfy some further property. In the setting of computation, such
an analysis requires the existence of some procedure tasked with ensuring the satis-
faction of this property by both disjuncts. This observation leads to a computational
analysis of the relationship between Parry logics and logics of nonsense in which the
semantic category of ‘nonsense’ is associated with catastrophic faults in computer
programs. In this spirit, we examine semantics for several ⊢-Parry logics in terms
of the successful execution of certain types of programs and the consequences of
extending this analysis to dynamic logic and constructive logic.
One of the hallmark features of the deductive systems known as ‘conceptivist’ or
‘containment’ logics is that the principle of Addition (the inference to A ∨B from
A) fails. In this chapter, we examine a number of prima facie unrelated deductive
contexts that do not support Addition and attempt to harmonize them by developing
a computational interpretation of conceptivist logics. With a computational interpre-
tation ready-to-hand, further applications of conceptivist systems emerge, including
themes in propositional dynamic logic and constructive logic.
4.1
Formal Remarks
In order to be as precise as necessary, we will stop to formally deﬁne a number of
properties that deductive systems may exhibit before moving on to formally introduce
a number of the more well-known conceptivist systems.
For example, we will deal with three distinct propositional languages in the sequel:
the familiar propositional language of zeroth degree formulae Lzdf introduced in
Deﬁnition 1.1.2 whose logical connectives include negation (‘¬’), conjunction (‘∧’),
and disjunction (‘∨’), the language L+ of Deﬁnition 1.1.1 that enriches Lzdf by the
© Springer International Publishing AG 2017
T. M. Ferguson, Meaning and Proscription in Formal Logic,
Trends in Logic 49, https://doi.org/10.1007/978-3-319-70821-8_4
73

74
4
A Computational Interpretation of Conceptivism
addition of an intensional conditional connective (‘→’), and a pure implicational
language L→whose sole connective is the intensional conditional →.
4.1.1
A Family of →-Parry Deductive Systems
While a number of →-Parry logics have been introduced, some—like Parry’s original
system and Sören Halldén’s S0, introduced in [27]—lack semantics.1 There are,
however, a number of systems in the literature that can be given a common semantical
framework.
Parry, in [38], had enriched his system of [36, 37] with the axiom:
(A ∧¬B) →¬(A →B)
When the matter of analytic implication was taken up by [17, 21, 47], this axiom
was included. However, Parry’s attitude in [38] seems to be that this axiom is in
keeping with the spirit of his dissertation and, as such, does not represent so much
an extension of his original system but a correction thereto. It is this system—PAI—in
terms of which the remaining three are motivated.
Dunn’s ‘demodalized’ analytic implication DAI follows from the observation that
necessity in logics of strict implication can be deﬁned so that □A =d f (A →A) →
A. Hence, adding an axiom A →((A →A) →A), i.e., A →□A, effectively elim-
inates modal distinctions and demodalizes the system PAI. The addition of this axiom
to the logic of strict implication S4, for example, collapses the system to classical
logic. After providing algebraic semantics for his system, Dunn cites Robert Meyer
as suggesting a very simple semantical approach to DAI.
The abstract [18] is the ﬁrst appearance of DAI as ‘dependence logic’ as a species
of Epstein’s larger program of set-assignment semantics. In [19], in which the system
is called ‘D,’ retains the truth-function nature of the connectives but adds a function
s from At to a set of ‘subject-matters.’ A model is thus a pair ⟨v, s⟩, where v behaves
classically for negation, disjunction, and conjunction, while implication receives
evaluations obeying:
v(A →B) =

f
if either s(B) ⊈s(A) or both v(A) = t and v(B) = f
t
otherwise
Whileﬁndingset-assignmentsemanticsforweakersystemsisaninterestingquestion,
there are at present no semantics for, e.g., PAI in the style of Epstein.
While Dunn and Epstein explore a strengthened form of analytic implication, we
have encountered Harry Deutsch’s S, motivated by the assertion that PAI is overly
1In fairness, Halldén’s S0 is given a semantics in [43]. But the construction employed by Sylvan
and Meyer is “semantical” in a very impoverished sense and enjoys no intuitive reading.

4.1 Formal Remarks
75
strong. For the time being, Deutsch’s S will remain the weakest of the systems
studied. Recalling the semantics for S in Chap.2, we will characterize the stronger
systems in terms of restrictions of S models. The language over which these logics
are deﬁned is L+.
Deutsch’s semantics are a modiﬁcation of Fine’s models for PAI in [21], which
themselves employ Kripke frames. Like other logics with Kripke-style semantics,
restricting frames ⟨W, R⟩often yields stronger deductive systems. In the present
case, restricting our attention to only models in which R linearly orders W yields the
system S′ studied in [16].
Deﬁnition 4.1.1 Γ ⊨S′ A iff for all S models M such that ⟨W, R⟩is a linear order
and points w ∈W, if M, w ⊩+ B for all B ∈Γ , then M, w ⊩+ A
In [15], Deutsch also deﬁnes a system S′′ (appearing in his dissertation as “D′′”)
corresponding to the class of S models for which W is a singleton.
Deﬁnition 4.1.2 Γ ⊨S′′ A iff for all S models M for which W is a singleton {w},
whenever M, w ⊩+ B for all B ∈Γ , it follows that M, w ⊩+ A
As the frames for S′′ models are degenerate examples of linear orders, we may
observe that S′′ is an extension of S.
As is clear from Deﬁnition 2.4.1, we may recall that Fine’s original semantics
for PAI correspond to the class of all S models whose distributions of formulae are
consistent, i.e., PAI corresponds to S models for which V + and V −assign only
consistent valuations of atoms:
Deﬁnition 4.1.3 Γ ⊨PAI A iff for all S models M such that for all p ∈At, V +(p) ∩
V −(p) = ∅, and points w, if M, w ⊩B for all B ∈Γ , then M, w ⊩A
Finally, the Dunn-Epstein system DAI deﬁned as the restriction of PAI to single-
pointed frames:
Deﬁnition 4.1.4 Γ ⊨DAI A iff for all S models M such that
• for all p ∈At, V +(p) ∩V −(p) = ∅, and
• W is a singleton {w}
if M, w ⊩B for all B ∈Γ , then M, w ⊩A.
This deﬁnition makes it clear that Dunn’s possible worlds semantics and Epstein’s
set-assignment semantics are equivalent, as the single lattice ⟨Cw, ◦w⟩is analogous
to a set of subject matters in Epstein’s set-assignment semantics for D. To wit, the
canonical models for DAI and D, the lattice ⟨Cw, ◦w⟩and the set of subject matters
are isomorphic.
The picture of this family of systems is represented by Fig.4.1. As mentioned
earlier, other conceptivist systems have been described in the literature, although their

76
4
A Computational Interpretation of Conceptivism
Fig. 4.1 Relationships between →-Parry Systems
semantics do not immediately admit an account in the above terms.2 For example,
Charles Daniels’ story logic—which we will identify as ‘S⋆’—ﬁrst described in
[12] is a further conceptivist system whose semantics we will omit here.3 Daniels’
interpretation of ‘story implication’ employs stories as its primitive semantical device
so that A →B is valid in S⋆if in every ‘story’ in which A is true, B is also true.
Daniels suggests that if a story is thought to have a ‘cast,’ one must ‘discard the
idea that if A is in a story, A ∨B and B ∨A are also in it,’ as the sentence denoted
by B, after all, may ‘introduce new and unwanted characters.’[12, p. 222] Daniels
acknowledges the proximity to Parry’s system and motivates the de facto rejection
of Addition on the basis of names—a wholly syntactic, yet not ad hoc, motivation.
Daniels’ system deserves special mention as its ﬁrst-degree fragment S⋆
fde will
play a role in the sequel.
4.1.2
A Family of ⊢-Parry Deductive Systems
Many of the ⊢-Parry systems in the literature—and other propositional logics with
which we will be concerned—can be semantically characterized by a simple set of
matrices. Central will be the system S⋆
fde, which makes up the ﬁrst-degree fragment
of Daniels’ S⋆. Properly speaking, Angell ﬁrst described this deductive system in
passing in his abstract [4], in which S⋆
fde is described as the logic corresponding to
the intersection Efde ∩PAIfde.4 An axiomatic account of S⋆
fde was independently
introduced by Daniels in [13], in which Daniels declared without proof that S⋆
fde
coincided with the ﬁrst-degree fragment of his logic with ‘story semantics.’5 The
2Included among these systems is Parry’s original AI of [36, 37] for which no corresponding
semantics has been introduced.
3Although Daniels’ semantics does not immediately conform to the underlying semantical picture
described in, e.g., Deﬁnitions 2.4.1 and 2.4.4, the intuitions implicit in his work on these systems
(e.g., [12–14]) bear many similarities to Parry’s own work. Thus, it is plausible that S⋆might be
given semantics within a modiﬁcation of Fine’s framework, although we set this aside for future
work.
4Proof of the identity of S⋆
fde and Angell’s Efde ∩PAIfde has not appeared in the literature but
proof of this identity will be provided in Observation 5.4.1.
5Problematically, Daniels, like Deutsch, calls his intensional system “S” in [13], ensuring that
the notation “Sfde” is ambiguous when unqualiﬁed. Decorating Daniels’ system with a star was
introduced in [20] to distinguish the two ﬁrst-degree systems.

4.1 Formal Remarks
77
truth-functional semantics for this system was independently discovered by Graham
Priest in [39] as “FDEϕ” in the context of the catus.kot.i, an element of Buddhist
dialectics, in which Priest enriches the truth values of Efde (cf. Deﬁnition 3.1.17)
with a ﬁfth semantical value u (called “e” by Priest) that formalizes an alethic value
corresponding to emptiness, following Priest’s interpretation of remarks made by the
Buddhist philosopher N¯ag¯arjuna.
The semantical presentation of S⋆
fde we will employ, like Priest’s account in [39],
can be interpreted as an enrichment of the set of truth values VEfde with an additional,
infectious value.
Deﬁnition 4.1.5 The logic S⋆
fde is the deductive system induced by the matrix MS⋆
fde:
⟨VS⋆
fde, DS⋆
fde, f ¬
S⋆
fde, f ∧
S⋆
fde, f ∨
S⋆
fde⟩
Where VS⋆
fde = {t, b, u, n, f} (i.e., VEFfde ∪{u}) and DS⋆
fde = {t, b}.
The truth functions f ¬
S⋆
fde, f ∧
S⋆
fde, and f ∨
S⋆
fde are deﬁned by the matrices:
f ¬
S⋆
fde
f ∧
S⋆
fde
t
b
u
n
f
f ∨
S⋆
fde
t
b
u
n
f
t
f
t
t
b
u
n
f
t
t
t
u
t
t
b
b
b
b
b
u
f
f
b
t
b
u
t
b
u
u
u
u
u
u
u
u
u
u
u
u
u
u
n
n
n
n
f
u
n
f
n
t
t
u
n
n
f
t
f
f
f
u
f
f
f
t
b
u
n
f
The Belnap-Dunn system Efde and the Deutsch-Oller system Sfde can be clearly
deﬁned by placing additional conditions on the valuations of V, e.g., Efde corre-
sponds to validity with respect to S⋆
fde valuations v such that u /∈v[At].
The ﬁnal ﬁrst-degree conceptivist system playing a role in this chapter is Johnson’s
system RC from [32], semantics for which was described in Deﬁnition 2.3.3.
Inspection of the matrices yields a few important facts concerning the relationship
between these systems. In particular, we provide a particular schematic analysis of
validity in the systems S⋆
fde, Sfde, and RC. Recall Gödel’s conjecture of [26] that
Parry’s system of analytic implication AI would permit what Sylvan called a ‘double-
barrelled’ analysis, according to which the theoremhood of a formula A (or validity
of an inference A ⊢B) in a deductive system L can be characterized by a pair of
constraints: Validity in a distinct system L′ in conjunction with the satisfaction of
some syntactic criterion by the formula A.
We have noted that a property closely related to Gödel’s conjecture was conﬁrmed
for PAI by Kit Fine in [21], in which it was demonstrated that the Lewis system S4
serves as the “carrier logic” for PAI. In light of this, we will call an account of a
containment logic in which the logic is characterized by a distinct system L with a
syntactic sieve a Gödel-Fine analysis.
The truth functional semantics for S⋆
fde is sufﬁciently rich to allow the Gödel-Fine
analysis of S⋆
fde.

78
4
A Computational Interpretation of Conceptivism
Observation 4.1.1 A ⊨S⋆
fde B iff

A ⊨Efde B, and
At(B) ⊆At(A)
Proof For left-to-right, because all Efde valuations are trivially S⋆
fde valuations, that
A ⊨S⋆
fde B entails that A ⊨Efde B. Moreover, it is shown in [35] that for the system
Sfde—of which S⋆
fde is itself a subsystem—A ⊨Sfde B entails that At(B) ⊆At(A).
As a subsystem of Sfde, whenever A ⊨S⋆
fde B, we may infer that A ⊨Sfde B and by
transitivity, that At(B) ⊆At(A).
For right-to-left, suppose that A ⊨Efde B and that At(B) ⊆At(A) although
A ⊭S⋆
fde B. Then there is an S⋆
fde valuation v such that v(A) ∈DS⋆
fde but v(B) /∈
DS⋆
fde. That v(A) ∈DS⋆
fde and At(B) ⊆At(A) tells us that for no p ∈At(B) is
v(p) = u. By the truth functional nature of S⋆
fde, any valuation v′ agreeing with
v on the elements of At(A) will likewise map A to an element of DS⋆
fde with
v′(B) /∈DS⋆
fde.
□
Likewise, Observation 2.3.8 can be rephrased in the style of the Gödel-Fine analysis
of Sfde:
Observation 4.1.2 Γ ⊨Sfde A iff

Γ ⊨LP A, and
At(A) ⊆At[Γ ]
In a sense, then, S⋆
fde and Sfde are the conceptivist fragments (or, more formally,
the ⊢-Parry fragments) of Efde and LP, respectively.
Johnson’s RC admits a similar analysis. Let Con(Γ ) represent the statement that
Γ is classically consistent, i.e., that there is a classical valuation mapping each of its
formulae to t and let ⊨CL denote semantic consequence for the classical propositional
calculus. Then we have the analysis:
Observation 4.1.3 Γ ⊨RC A iff
⎧
⎪⎨
⎪⎩
Con(Γ ),
Γ ⊨CL A, and
At(A) ⊆At[Γ ]
These systems bear a tidy relationship with one another, which can be made still
tidier by deﬁning the ﬁrst-degree fragment of PAI. As [42] observes, PAIfde enjoys
the following property:
Observation 4.1.4 Γ ⊨PAIfde A if

Γ ⊨CL A, and
At(A) ⊆At[Γ ]
Then we have the series of containments pictured in Fig.4.2. With these formal
remarks, we are prepared to move forward.

4.2 The Failure of Addition
79
Fig. 4.2 Relationships between ⊢-Parry Systems
4.2
The Failure of Addition
Recall that after identifying Parry’s position with the failure of Addition, Sylvan
rejects the Kantian interpretation of conceptivist logics. If the quasi-Kantian moti-
vation for Parry’s intuitions is indeed ‘narrow and arbitrary’ and fails to motivate
a rejection of Addition, then what sort of case can be made in support of rejecting
Addition? By casting the net a bit more widely and examining a number of logical
and linguistic enterprises that each independently entail a rejection of the princi-
ple of Addition, we may begin ﬁlling in alternative motivations for conceptivism.
Some of the areas we will discuss are the so-called ‘logics of nonsense’ and species
of disjunction described as ‘intensional disjunction,’ ‘free choice disjunction,’ and
‘cut-down disjunction.’6
4.2.1
Meaninglessness
The class of logics of nonsense, such as the truth-functional systems described by
Dmitri Bochvar and Sören Halldén in [8, 28], respectively, are held together by the
thesis that some syntactic objects masquerading as propositions are in fact meaning-
less, in some sense of the term. Supposing that this is the case, the usual semantics
for classical logic is ill-equipped to account for such a circumstance as it presupposes
that all formulae are meaningful ‘out of the gate’; in general, semantic treatments of
logics of nonsense employ a truth-value corresponding to meaninglessness or non-
sense.7 Bochvar’s system—with which we are primarily concerned—has two sets
of connectives, ‘external’ connectives which act as projection operators mapping all
arguments to either truth or falsity and ‘internal,’ non-projective connectives.
Importantly, the system enjoys what Lennart Åqvist labels the ‘doctrine of the
predominance of the atheoretical element,’ that is, that with respect to the internal
6A thorough investigation into the nature of disjunction in general can be found in [31].
7But cf. Timothy Smiley’s interpretation in [45], according to which a formula assigned the mean-
ingless value of Bochvar has a sense but merely fails to denote a proper truth-value.

80
4
A Computational Interpretation of Conceptivism
connectives (which Bochvar takes to correspond to the classical, logical connectives
of, e.g., the Principia Mathematica), the meaningless value is ‘infectious.’ Non-
sense propagates from atomic formulae to complex formulae so that a subformula’s
being nonsense entails that the complex formula is likewise nonsense when all the
connectives in the complex formula are internal connectives.
We may recall the internal or classical calculi of Bochvar and Halldén deﬁned in
Deﬁnitions 2.2.4 and 2.2.5, respectively and note that these systems differ only in
that both t and u are designated in C0.
By examining the matrices, the infectiousness of the nonsense value u is suf-
ﬁciently clear to demonstrate the failure of Addition in 0. Bochvar’s system is
truth-functional, whence altering v to a valuation v′ mapping some B /∈At(A) to u
will not interfere with its mapping A to t. But by the infectiousness of the nonsense
value, v′ will map A ∨B to the nonsense value with ‘∨’ denoting internal disjunc-
tion. So A ⊭0 A ∨B.8 The motto of the Bochvar account might be summarized as
‘all subformulae must be meaningful.’ In other words, in natural language, we have
the following property:
A ∨B is true iff
⎧
⎪⎨
⎪⎩
either A is true or B is true, and
A is meaningful, and
B is meaningful
A further consequence is more epistemic in nature. Bochvar’s intuition concerning
infectious nonsense values entails that in general the truth of a formula A ∨B cannot
be established by merely examining, e.g., A and determining that it is true. The
doctrine of the predominance of the atheoretical element entails that in order to
conﬁrm that a disjunction is true, for each disjunct some procedure must be carried
out to check whether both disjuncts are meaningful.
4.2.2
Intensional Disjunction
In Sect.1.1.2, one of the distinguishing features of relevant logics was identiﬁed as
the rejection of Disjunctive Syllogism. Yet this rejection was cited in the context of
disjunction as employed by the proof of ECQ outlined by C. I. Lewis, a species of
disjunction that Anderson and Belnap label the ‘truth-functional “or”.’ With respect,
however, to intensional disjunction, there are instances in which instances of Dis-
junctive Syllogism are in fact valid inferences:
On the other hand the intensional varieties of ‘or’ which do support the disjunctive syllogism
are such as to support corresponding (possibly counterfactual) subjunctive conditionals.
When one says ‘that is either Drosophila melanogaster or D. virilis, I’m not sure which,’
and on ﬁnding that it wasn’t D. melanogaster, concludes that it was D. virilis, no fallacy is
8Bochvar’s system fails to satisfy Parry’s Proscriptive Principle only because, e.g., contradictions
cannot take a designated value and B follows from A ∧¬A vacuously.

4.2 The Failure of Addition
81
being committed. But this is precisely because ‘or’ in this context means ‘if it isn’t one, then
it is the other.’[3, p. 22]
This condition—that a disjunction is conditional-supporting—is the hallmark of an
intensional disjunction on the relevant account, in which it is often symbolized by
‘⊕’ and referred to as ‘ﬁssion.’ The disjuncts in the Drosophila case ostensibly share
a relationship lacking in, e.g., the disjuncts in the statement ‘either Napoleon was
born in Corsica or else the number of the beast is perfect,’ namely a conditional
assertion that the falsehood of one entails the truth of the other.
If an intensional disjunction carries with it the assertion of such a relationship, then
Addition must fail with respect to ﬁssion. To use Anderson and Belnap’s example,
while it is true that Napoleon was born in Corsica, it hardly follows that the falsehood
of this statement would counterfactually entail any arbitrary proposition.
If it is a criterion of relevance between disjuncts that distinguishes the species
of disjunction modulo which Addition is valid from those for which it fails, then
it is not immediately apparent what the failure of Addition for intensional disjunc-
tion has to do with the failure of Addition for Bochvar’s disjunction. The internal
disjunction of Bochvar naturally seems to fall into the category of truth-functional
disjunctions. Models for 0 are, after all, just functions from atoms to truth values.
Moreover,AndersonandBelnap’scriterionthatintensionaldisjunctions‘supportcor-
responding... subjunctive conditionals’ [3, p. 22] seems to fail for Bochvar’s internal
disjunction. For example, Anderson and Belnap’s example of a paradigmatic non-
intensional disjunction—‘either Napoleon was born in Corsica or else the number
of the beast is perfect’—appears to be true by the lights of a logic of nonsense. Each
disjunct is plausibly meaningful and the former is true although there remains no
support for the corresponding conditional.
However, viewing the two species of disjunction available to the relevant logician
from a different perspective in fact sheds light on this situation. The rule for intro-
ducing ﬁssion on the right in Gentzen-style sequent calculi (as presented in [40]) is
as follows:
Γ ⊢Δ, A, B
[⊕R] Γ ⊢Δ, A ⊕B
Reviewing [25], this also can be seen as an instance of the right introduction rule
for the multiplicative disjunction of Jean-Yves Girard’s linear logic, a species of
disjunction for which Addition fails as well.
If we look to the proof theory for 0, however, we ﬁnd that proof theoretically, the
truth-functional disjunction of Bochvar and the intensional disjunction of Anderson
and Belnap or Girard behave identically. In Marcelo Coniglio and María Corbalán’s
Gentzen-style proof theory for 0 found in [11], the introduction rule for disjunction
has the following form:
Γ ⊢Δ, A, B
[∨R] Γ ⊢Δ, A ∨B

82
4
A Computational Interpretation of Conceptivism
In isolation, then, both ﬁssion and Bochvar’s disjunction appear to be mere notational
variants of one another.
When one includes the structural rule of Right Weakening, that is,
Γ ⊢Δ
[Wk R] Γ ⊢Δ, A
it is immediate that the rules corresponding to classical and intensional disjunction
correspond in the sense that a sequent Γ ⊢Δ, A ∨B is derivable if and only if Γ ⊢
Δ, A ⊕B is derivable. In other words, granted Right Weakening, we can introduce
extensional and intensional disjunction in precisely the same contexts.
It is reasonable to question whether one ought to identify what Bochvar calls
‘disjunction’ with disjunction as is practiced in natural language. It seems that this
observation provides a fair response, via the famous remark of Gentzen:
The introductions represent, as it were, the ‘deﬁnitions’ of the symbols concerned, and the
eliminations are no more, in the ﬁnal analysis, than the consequences of these deﬁnitions.
[24, p. 80]
From the standpoint of Gentzen, then, these connectives have identical meanings; the
differences are a function of external factors, e.g., what structural rules are accepted.
A further semantic point can be made from observing the rules for ﬁssion and inter-
nal disjunction. Bochvar’s intuition concerning infectious nonsense values entails
that in general the truth of a formula A ∨B cannot be established by merely exam-
ining, e.g., A and determining that it is true. The doctrine of the predominance of
the atheoretical element entails that in order to conﬁrm that a disjunction is true, for
each disjunct some procedure must be carried out to check whether both disjuncts
are meaningful.
This picture is only reinforced by looking to the proof theory. We are unable to
add new formulae at will to the succedent position in order to yield new disjunctions.
Each disjunct must have been introduced into the proof by some nontrivial means,
i.e., there was some rationale for introducing each disjunct. Along with the relevant
logicians, one can interpret this criterion as a demand that each disjunct must bear
relevance to the set of assumptions. However, we can view this just as easily as the
demand for the existence of a procedure or mechanism by which each disjunct has
been introduced.
4.2.3
Free Choice Disjunction
A further cue may be taken from the analysis of ‘free choice disjunction’ as described
by Thomas E. Zimmerman in [50]. Zimmerman’s interpretation of disjunction is
intended to solve a puzzle about the distribution of modal operators over disjunction
in natural language, the so-called ‘free choice permission’ problem:
how can it be that sentences of the form ‘X may A or B’ are usually understood as implying
‘X may A and X may B’? [50, p. 255]

4.2 The Failure of Addition
83
There is no operator ⃝in the standard modal logics according to which ⃝(A ∨B)
entails ⃝A ∧⃝B, although when ‘⃝’ is read as a deontic operator representing
‘agent α may...’ this seems to follow in natural language.9 The puzzle is thus how to
ﬁnd a reasonable and intuitive semantical model supporting this type of inference.
Zimmerman’s solution to this problem involves an atypical, formal treatment of
disjunction, in which a disjunction A ∨B is read as a list of epistemic possibilities,
i.e., ‘A is possible (for all I know) and B is possible (for all I know).’ The naïve
semantical approach to disjunction treats propositions as collections of epistemic
possibilities and invokes the following three conditions to evaluate a disjunction
A ∨B:
A ∨B is true iff
⎧
⎪⎨
⎪⎩
either A is the case or B is the case, and
A might be the case, and
B might be the case
Zimmermanoffers‘closed’and‘open’readingsofdisjunction.Adisjunctioniscalled
closed if at least one of the disjuncts is thought to hold and open if the list is not
believed to be exhaustive, i.e., closed disjunction must satisfy all three conditions
while open disjunction must satisfy only the latter two.
Importantly, disjunction enjoys what might be read as a ‘disjunction-as-weak-
conjunction’ paradigm since Zimmerman’s approach unavoidably makes use of con-
junction. With respect to the ‘list’ reading, a list is in a strong sense a conjunction
of items; on the above truth condition, one must employ conjunction to ensure that
the second and third clauses are satisﬁed. Hence, that it is a disjunction over which
‘may’ distributes is thus merely apparent; the list’s being a conjunction of possibil-
ities entails that ‘may’ distributes over a conjunction. This is far less problematic:
in virtually any modal logic stronger than S1, necessity and possibility operators
distribute over conjunction.
That Addition must be rejected relative to either species of free choice disjunction
is clear. That A is true says nothing concerning whether B is possible; indeed, B may
be thought to be impossible, whence A ∨B will not hold. Hence, with respect to
free choice disjunction, A ∨B does not follow from A. We will consider the motto
of free choice disjunction to be ‘all subformulae must be possible.’
The problem of free choice permission and purported solutions to it will play a
role in matters to be discussed in Sect.4.4.1; for now, we will continue surveying
paradigms of disjunction in which Addition fails.
9There are operators which satisfy this inference, e.g., da Costa’s consistency operator ◦(an account
of which may be found in [9]) or the ‘...is meaningful’ operator + of Halldén’s nonsense logic
introduced in [28]. Yet there is no clear way to interpret such operators as giving rise to a reading
of ‘may.’

84
4
A Computational Interpretation of Conceptivism
4.2.4
Cut down Disjunction
So, one might challenge the validity of Addition out of concerns related to mean-
inglessness or related to relevance. Although these appear to be prima facie distinct
concerns, the two begin to coincide in the treatment of disjunction described by
Melvin Fitting as ‘cut-down disjunction.’
In[22],Fittingprovidesanaccountofgeneralizingtheinterpretationoftheinternal
Bochvar logic (represented in Fitting’s paper as the weak Kleene three-valued logic)
to the case of bilattices. Fitting considers bilattices B = ⟨B, ≤t, ≤k⟩, where ≤t is the
‘truth ordering’ on the underlying set B and ≤k represents the ‘information ordering.’
For elements a, b ∈B, a ≤k b means that a is more informative than b; e.g., in the
case in which experts supply both evidence for and against a formula A, this is
maximally informative or constituting ‘information overload.’ Each ordering gives
rise to independent join and meet operators; ⊕and ⊗, respectively, in the case of ≤k
and ∨and ∧the case of ≤t.
Continuing with this example: Fitting offers the interpretation of the semanti-
cal value of a formula A as a pair ⟨Pi, Ni⟩, where Pi and Ni are construed as
groups of experts (alternately, collections of data or evidence). Pi denotes those
in support of A and Ni denotes those against A, respectively. Such an account
of semantical values is closely related to the interpretation offered by Belnap in
the paper [6], in which an artiﬁcial reasoner evaluates formulae A in terms of
whether it has received afﬁrmations or denials of A. On this interpretation, the
operation ∨is deﬁned so that the alethic join of elements ⟨P0, N0⟩and ⟨P1, N1⟩
is ⟨P0 ∪P1, N0 ∩N1⟩. This gives a natural interpretation of disjunction, which,
indeed, is in harmony with Belnap’s interpretation. In this setting, the opera-
tions ⊕and ⊗are deﬁned so that ⟨P0, N0⟩⊕⟨P1, N1⟩=d f ⟨P0 ∪P1, N0 ∪N1⟩and
⟨P0, N0⟩⊗⟨P1, N1⟩=d f ⟨P0 ∩P1, N0 ∩N1⟩.
In the case of the internal Bochvar logic, when considering the semantical status of
a conjunction or disjunction, Fitting offers an interpretation in which one is interested
only in the opinions of experts who have opined on both conjuncts or disjuncts. As it
‘cuts down’ the ﬁeld of acceptable data, Fitting describes this species of disjunction as
‘cut-down disjunction.’ Let us sketch this out: Given a formula A with value ⟨P0, N0⟩,
the value assigned to A ⊕¬A is ⟨P0 ∪N0, P0 ∪N0⟩. The intended reading of the
value ⟨P0 ∪N0, P0 ∪N0⟩is an ordered pair each element of which comprises the
collectionofexpertswhomaintainanopinionconcerning A,thatis,thoseexpertswho
have either provided information supporting A or have provided evidence against A.
We will say that A is the cut-down of A that represents the proposition that there is
sufﬁcient evidence to evaluate A. Then the operation which corresponds to evaluating
a disjunction against the opinions of the group of experts opining on both disjuncts
will be deﬁned as follows:
A ▽B =d f (A ∨B) ⊗A ⊗B

4.2 The Failure of Addition
85
Reading ⊗as a species of conjunction, it becomes apparent that Bochvar’s logic
admits an interpretation that bears at least a superﬁcial resemblance to Zimmerman’s
free choice disjunction. Fitting’s analysis of this type of disjunction is that A ∨B is
designated if A ▽B is designated on the bilattice. In English,
A ▽B is true iff
⎧
⎪⎨
⎪⎩
some group of experts X supports either A or B , and
all members of X have opined on A , and
all members of X have opined on B
Addition clearly fails in the context of cut-down disjunction as well; that a group
of experts has afﬁrmed A to be true does not entail that anyone has provided any
evidence concerning B, either in its favor or against it.
We will return to examine Fitting’s cut-down operations with much more detail
in Sect.6.5. For now, note that, beyond the reappearance of a tripartite analysis of
disjunction, Fitting’s interpretation of cut-down disjunction also supports the theme
of the necessity of some procedure surveying each component of a formula that we
had found in each of the above cases. That it is a requirement that all members of
some group of experts have given an assessment of each disjunct appears similar
to the demand that such a psychological procedure exists (in the case of logics of
nonsense) or a proof-theoretic procedure exists (in the case of intensional disjunction
in relevant and linear logics). In each species of disjunction for which Addition fails,
the demand that both disjuncts are surveyed in some manner is a necessary condition
for the truth of a disjunction A ∨B.
4.3
Towards a Computational Interpretation
Although Fitting’s analysis of the internal Bochvar logic draws together some formal
aspects of nonsense and free choice disjunction contexts, it fails to bring together
the notions of meaningfulness and possibility. In the case of a disjunction, that one
cuts down the data to experts opining on each disjunct does not intuitively admit an
interpretation in terms of possibility, as experts uniformly condemning (i.e., opining
negatively on) both disjuncts would still make the cut. Nor does it say much about
meaningfulness. Nevertheless, we ﬁnd the same tripartite scheme demanding that
not only must one of the disjuncts be true, but that each must possess some further
property. That these species of disjunction admit analyses so similar to one another
in form suggests that they are related. In this section, we consider an interpretation
of conceptivist logic that harmonizes the Bochvar-Halldén demand that subformulae
be meaningful with the Zimmerman-type demand that subformulae be epistemically
possible.
We may take a cue from John McCarthy’s computational interpretation—in terms
of partial functions—found in [34], in which a novel deductive system is introduced.

86
4
A Computational Interpretation of Conceptivism
McCarthy’s system, while supporting Addition as a valid inference, abandons an
inference similar to Addition; while A ⊨A ∨B is accepted, A ⊨B ∨A is rejected.
This is explained in terms of the terminating (or not) of procedures tasked with
evaluating subformulae.
Suppose that p is false and q is undeﬁned; then... p ∧q is false and q ∧p is undeﬁned. This
unsymmetry... turns out to be appropriate in the theory of computation since if a calculation
of p gives F as a result q need not be computed to evaluate p ∧q, but if the calculation of
p does not terminate, we never get around to computing q [34, pp. 40–41].
Clearly, considering the truth of p ∨q rather than the falsity of p ∧q yields a similar
result. Arnon Avron and Beata Konikowska formalize the disjunction of ‘McCarthy
logic’ in [5], providing a matrix semantics for the McCarthy logic M:
Deﬁnition 4.3.1 The McCarthy logic M is deﬁned by the matrix ⟨VM, DM, f ¬
M, f ∧
M,
f ∨
M⟩. The extensions of the members of the matrix are given so that VM = {t, u, f},
DM = {t}, and the truth functions are determined by the matrices:
f ¬
M
f ∧
M
t
u
f
f ∨
M
t
u
f
t
f
t
t
u
f
t
t
t
t
u
u
u
u
u
u
u
u
u
u
f
t
f
f
f
f
f
t
u
f
The evaluation of a complex formula in McCarthy logic is left-to-right, in what is
sometimes known as a ‘lazy evaluation.’ Consider, for example, a disjunction A ∨B
in which A is evaluated as t and B is assigned a value of u. In some paradigms in
which the disjunction is evaluated from left-to-right, the discovery that A is true to
conclude that the disjunction is true without having to consider the value assigned
to B. If the assignment of the value u to B indicates that a catastrophic error is
triggered whenever one attempts to retrieve the value of B, in those cases in which
A ∨B can be evaluated without retrieving a value for the rightmost subformula B
the accompanying error will be avoided. There exist programming languages, such
as Lisp, in which the ‘lazy,’ McCarthy-style operators exist alongside their Boolean
counterparts.
The nonsense value u has so far been given many readings: u represents ‘unde-
ﬁned’ in the partial function reading, or nonsense in the Bochvar-Halldén setting, or
ineffability in Priest’s interpretation of S⋆
fde. In the present case, however, the value
u may be given a more concrete readings as ‘the routine evaluating this formula fails
to terminate.’10
McCarthy assumes that the system evaluates a formula sequentially rather than in
parallel. If the routine evaluates p and ﬁnds it to be true, it terminates and evaluates the
complex formula as true, even if it would have been stuck in a loop upon evaluating q.
In this case, the latter procedure is never called and hence never given the opportunity
10The truth value u is represented as ‘e’ in [5] for ‘error.’

4.3 Towards a Computational Interpretation
87
to fail. However, under any circumstance in which the subroutine evaluating p fails to
terminate, the complex routine evaluating the disjunction will itself never terminate;
it will never get around to calling the procedure to evaluate q. In a parallel context,
the counterpart slogan will be that if one of the subprocedures evaluating p and q
fails to terminate, p ∨q will never be evaluated.
This motivates us to ask under which conditions a system may fail to terminate
while evaluating a subformula, and whether such occasions say anything about pos-
sibility and meaningfulness.
4.3.1
Ill-Formedness
We have observed in foregoing sections (e.g., Sects.2.2 and 3.2.3) the coincidence of
the themes of meaningfulness and possibility implicit within the context of logics of
nonsense. If we recall the remarks made by Åqvist while describing his own system
of nonsense logic, who concedes in [1, p. 151] that there are circumstances in which
the doctrine of the predominance of the atheoretical element clearly holds. In labeling
ill-formed formulae ‘statements’ and professing that they exhibit a particular type of
semantical behavior, Åqvist may be interpreted as suggesting that ill-formed formu-
lae constitute paradigmatic examples of syntactical objects that, while meaningless,
still demand a logical analysis. Indeed, Åqvist’s rejection of this doctrine is due only
to the intuition that the class of ill-formed formulae does not exhaust the class of
meaningless statements.
We may try to apply Åqvist’s comment associating meaningfulness with well-
formedness to shine light on the interpretation of disjunction in 0 and C0. Before
judging some string of symbols to be true (or false), one must determine that the
string is in fact a well-formed formula and this demands that all its components must
be surveyed. Otherwise, there exists an open invitation to error.
We can employ a concrete illustration—along the lines of the treatment of con-
junction in [34]—to demonstrate that there is something intuitively correct about
this picture. Suppose for a moment that merely securing the truth of the ﬁrst disjunct
were sufﬁcient to establish the truth of a disjunction. Then, for example, we could
design an algorithm to evaluate a string of symbols interpreted as positive disjunctive
formulae as represented in Fig.4.3.
At ﬁrst blush, examining a few cases suggests that such an algorithm is sufﬁcient
for the task. If p is true (i.e., v(p) = 1) and we feed in ⌜p ∨q⌝, then the algorithm
returns true (by assigning a value of 1 to x); if we feed in ⌜q ∨p⌝, it returns true.
Likewise, if v(p) and v(q) are both 0, the algorithm will not afﬁrm the string ⌜p ∨q⌝.
The algorithm treats these formulae correctly and, more importantly, it apparently
does so for the right reason: It ﬁnds a disjunct that is valued as true and, on that basis,
reports that the disjunction is true.
Consider, however, the case in which p is true and one inputs the string ⌜p ∨∨⌝
to the algorithm. It reads a propositional variable in the initial position of the string,
proceeds to examine the variable, and, ﬁnding this disjunct to be true, judges the

88
4
A Computational Interpretation of Conceptivism
Fig. 4.3 McCarthy-style algorithm interpreting disjunction
entire string to represent a true formula. Arguably, ⌜p ∨∨⌝should not be afﬁrmed
as a true formula by the algorithm and, importantly, the clear source of the error is
that the algorithm failed to discover that the second ‘disjunct’ was nonsense.11
Meaningfulness as well-formedness also gives an account of possibility similar
to that expressed in Zimmerman’s free choice disjunction. In a very weak sense, a
formula’s being well-formed is a kind of possibility. While, e.g., the likelihood of a
system evaluating ⌜p ∧¬p⌝as 1 and that of its evaluating ⌜p ∧¬⌝as 1 are equal,
there is still a sense in which the former is more possible than the latter. When we
draw the conclusion that ⌜p ∧¬p⌝is unsatisﬁable, we at least know what it would
be for a valuation to map it to the truth.
For example, when determining that A ∧¬A is false by use of indirect proof,
it is necessary that we recreate the steps that would be necessary for its truth. We
know that were A ∧¬A true, both A and ¬A would be true and judge this to be
impossible; but this procedure only makes sense against some dim understanding of
what conditions its truth would presuppose. But no such story is available for the
string ⌜A ∧¬⌝; if we try to rehearse the procedure on this string, we are faced with
evaluating the semantical value of the symbol ‘¬.’
To sharpen this point, we observe that on the nonsense-as-ill-formedness read-
ing any procedure evaluating such formulae necessarily maintains some procedure
by which each component of the formula is surveyed. Although the algorithm in
Fig.3 is clearly an oversimpliﬁcation, it underscores that without such a resource,
e.g., McCarthy’s procedure in some cases is unable to distinguish between ⌜p ∨q⌝
and ⌜p ∨∨⌝. There must exist some active process that provides an assurance that
the formula is meaningful, whether this process is psychological or mechanical.
11To this, one might object that it would not be incoherent to evaluate a ‘statement’ of the form
‘The half life of uranium-238 is approximately 4 billion years, or or or and’ as true. From a
phenomenological perspective, human beings encounter language not in toto but in a stream. Hence,
it is plausible to suggest the evaluation of complex statements by human agents resembles the ‘lazy,’
McCarthy-style paradigm more closely than it resembles the Boolean picture.

4.3 Towards a Computational Interpretation
89
In general, that a formula A is epistemically possible, as free choice disjunction
requires, is read as an existential statement, i.e., that an alternative or scenario exists
according to which A obtains. This is apparent in, e.g., Hintikka’s analysis of the
operator Pa corresponding to epistemic possibility with respect to an agent a. In
regard to a ‘model set’ μ—a consistent set of formulae representing a knowledge
state—Hintikka outlines the intuitive condition:
If Pa p ∈μ then there is at least one alternative μ∗to μ, (with respect to a) such that p ∈μ∗.[30, p. 34]
If we allow that well-formedness yields a weak kind of possibility, the analogy can
thus be extended to provide an analogue of this existential aspect: The existence of a
procedure actively checking and afﬁrming the well-formedness of a variable or sub-
formula is akin to the existence of an epistemic scenario witnessing the intelligibility
or possibility of some formula.
4.3.2
Declaration of Variables
We ﬁnd precisely such a species of possibility in the theory of computation. In
deﬁning an environment, we note that the environment is responsible for ensuring
the possibility of semantical interpretations of syntactical symbols. Abelson and
Sussman describe this in [2, p. 8] in the following terms:
It should be clear that the possibility of associating values with symbols and later retrieving
them means that the interpreter must maintain some sort of memory that keeps track of the
name-object pairs. This memory is called the environment.
A necessary condition for the possibility of a symbol’s having meaning is that there
be some process in the environment associating the syntactical object with a meaning.
Note that this type of possibility is existential in nature, just as Hintikka’s deﬁnition
of epistemic possibility. In order for A to be possible in this weak sense, there must
exist a resource allocated by the interpreter tasked with its interpretation.
More importantly, we ﬁnd that this notion of possibility is precisely aligned with
the notion of meaningfulness:
In an interactive language such as Lisp, it is meaningless to speak of the value of an expres-
sion such as (+ x 1) without specifying any information about the environment that would
provide a meaning for the symbol x. [2, p. 11]
In practice, the guarantee that some atom is possible is secured by the commands to
declare or initialize a variable.
In, e.g., C++, in order to render some syntactical object p usable as a Boolean
variable, one must inform the interpreter that p is to be used in this manner. When
the program is run, an instruction will be made allocating sufﬁcient memory for p to
take a value. To declare the Boolean variable p is to allocate the necessary resources;

90
4
A Computational Interpretation of Conceptivism
Fig. 4.4 Algorithm with undeclared variables
to initialize the Boolean variable is to declare it and simultaneously assign it a value.
Without a variable being declared, it is meaningless; even if a formula is well-formed,
if its atomic variables have not yet been declared, it is no more serviceable than an
ill-formed string of symbols.
The distinction between declaring a variable and initializing a variable also has
an a priori connection to the notion of possibility implicit in free choice disjunction.
In the former case, memory is merely allocated for the variable; in the latter, not only
is the memory allocated but it is also employed by assigning an initial value to the
variable. In other words, while initializing the variable gives an evaluation, declaring
the variable merely ensures the possibility of an evaluation.
Let us examine the fate of the Principle of Addition by considering a program,
represented by the pseudocode in Fig.4.4. The algorithm is trivially a function of y
but operates by initializing the Boolean variable p with the value 1 before proceeding
to return the value of porq, where ‘or’ denotes logical (i.e., Boolean) disjunction.
When this algorithm is run, the compiler will arrive at the symbol q and not know
how to respond, yielding an error. q, having not been declared, is merely a symbol
like any other. Hence, the program will terminate with a value of 1 occupying the
memory set aside for the Boolean variable p although it will not return a value of 1
with respect to porq. What this means is that Addition is not valid in this setting.
4.3.3
Three Concrete Cases
The possibility-as-declaration-of-a-variable picture yields an interesting, if naïve,
interpretation of a number of containment logics already in the literature. Before
proceeding to this, however, we take a detour to deﬁne what will be called Belnap
variables.
A Boolean variable may in principle be assigned only a value of either 1 or
0, corresponding to truth (t) and falsity (f), respectively, although the fact that a
variable may be declared without being initialized suggests a de facto third value.
In Sect.4.1.2, we deﬁned semantic consequence for the ﬁrst-degree system Efde,
whose set of truth values is {t, b, n, f}. The semantical approach to this system and
its values is given a robust interpretation in [6, 7] which serves to generalize the
notion of a Boolean variable.
Belnap worries about a computer receiving contradictory data from distinct
sources, e.g., two sensors reporting irreconcilable states of affairs to the system.
Classically, such a situation would be trivializing, that is, it would render every piece

4.3 Towards a Computational Interpretation
91
of data unusable. Belnap, however, rightly suggests that a malfunctioning sensor
should not interfere with, for instance, the arithmetical operations of the system. As
a solution, Belnap considers values beyond merely t and f: the value b, i.e., ‘both
true and false’ and the value n, i.e., ‘neither true nor false.’
Belnap anticipates the objection that formulae cannot in reality be both true and
false by taking an explicitly epistemic approach. While one might not be able actually
to know that a formula is both true and false, one can certainly be told that the formula
is both true and false, and can indeed receive these reports from sources regarded as
equally reliable. Belnap’s position, as related in [7], is that ‘the answer does not have
the ontological force, “That’s the way the world is,” but rather the epistemic force,
“That’s what I’ve been told (by people I trust to get it generally right)”.’
Deﬁne a Belnap variable to be a variable accepting the Belnap-like values so that
any procedure may only increase or leave untampered the variable’s information
rather than decrease it, that is, so the variable can not be cleared. This is in keeping
with the Belnapian paradigm in [6], in which a computer is in a sense the passive
recipient of data accumulating over time. A naïve interpretation immediately follows
from the demand that a formula B is a consequence of Γ iff in every program with
Boolean variables terminating so that A ∈Γ has a value of 1, B is valued as 1.
While such an interpretation fails to enjoy the Proscriptive Principle—and is thus
not a conceptivist system—it does suggest a semantical approach to other systems.
A few complications of this scheme immediately yield new interpretations for
conceptivist systems already present in the literature. We will introduce three conse-
quence relations the semantics of which are given in terms of programs with respect
to sets of formulae Γ ⊆L and formulae A ∈L. The ﬁrst involves programs for
systems employing Boolean variables:
Deﬁnition 4.3.2 Γ ⊪⋆
1 A iff there exists a program employing Boolean variables
terminating with all B ∈Γ assigned a designated value and for all such programs,
upon termination A is assigned a designated value.
The second relation is deﬁned for programs employing Belnap variables that intro-
duce values only by initialization, i.e., in which one must assign a value to a variable
upon declaring it.
Deﬁnition 4.3.3 Γ ⊪⋆
2 A iff for all programs employing Belnap variables intro-
duced only by initialization, if the program terminates with all B ∈Γ assigned a
designated value, then A is assigned a designated value.
Of course, in practice, one can declare a variable p without initializing it. If this is
considered, we can deﬁne a further relation:
Deﬁnition 4.3.4 Γ ⊪⋆
3 A iff for all programs employing Belnap variables, if the
program terminates with all B ∈Γ assigned a designated value, then A is assigned
a designated value.
Now, if we consider the ﬁrst-degree systems surveyed in Sect.4.1.2, we ﬁnd that
the above relations, deﬁned in terms of programs, correspond to the consequence
relations for RC, Sfde, and S⋆
fde, respectively.

92
4
A Computational Interpretation of Conceptivism
We will now proceed to prove these equivalences:
Observation 4.3.1 Γ ⊪⋆
1 A iff Γ ⊨RC A
Proof Recall from Sect.4.1.2 that Johnson’s conceptivist propositional calculus RC
enjoys the property that
Γ ⊨RC A iff
⎧
⎪⎨
⎪⎩
Con(Γ ),
Γ ⊨CL A, and
At(A) ⊆At[Γ ]
.
We can employ this analysis to prove this observation.
For right-to-left, suppose that Γ ⊨RC A. Then, from Con(Γ ), there exists a clas-
sical valuation v such that v(B) = t for all B ∈Γ . Such a valuation can clearly serve
as the basis for a program with Boolean variables assigning all formulae in Γ a value
of 1 by initializing each p ∈At[Γ ] and assigning appropriate values. Moreover, in
any such program, that Γ ⊨CL A ensures that the value of A will be 1. Hence, we
reason that Γ ⊪⋆
1 A.
For left-to-right, suppose that Γ ⊪⋆
1 A. Then from the existence of a program π
such that all formulae in Γ are assigned a value of 1, we can recover a classical val-
uation v witnessing that Con(Γ ). Moreover, Γ ⊪⋆
1 A entails that Γ ⊨CL A. Suppose
for contradiction that Γ ⊮CL A. Then there exists a valuation v′ such that v′(B) = t
for each B ∈Γ while v′(A) = f. But the equivalence of Boolean operations and
classical truth functions entails that from v′ we could write a program assigning all
B ∈Γ a value of 1 while assigning A a value of 0, contradicting that Γ ⊪⋆
1 A.
Finally, we can observe that this entails that At(A) ⊆At[Γ ]. Suppose that Γ ⊪⋆
1
A holds although At(A) contains a variable p not appearing in any formula in Γ .
Then let π be the program witnessing the satisfaction of both Γ and A and let π′
be that program that differs from π only in not declaring p. Then each B ∈Γ will
receive a value of 1 in π′ although attempting to retrieve a value for A will result in
error.
On the basis of Γ ⊪⋆
1 A, we have proven each of the three conditions that are
together equivalent to Γ ⊨RC A.
□
Observation 4.3.2 Γ ⊪⋆
2 A iff Γ ⊨Sfde A
Proof We ﬁrst recall some observations concerning Sfde. We may recall that Obser-
vation 4.1.2 shows that Sfde consequence is equivalent to LP consequence in con-
junction with the criterion that all atoms appearing in the succedent formula appear in
the set of assumptions. Moreover, by the semantics described in Deﬁnition 2.3.5, we
may observe that LP is the restriction of Efde to the values {t, b, f}. By the foregoing
discussion, Efde is the logic by which Belnap variables operate.
Now, for left-to-right, suppose that Γ ⊪⋆
2 A. As we are employing Belnap vari-
ables, this entails that Γ ⊨Efde A and, as a subsystem of LP, this entails that Γ ⊨LP A.
To show that this entails that At(A) ⊆At[Γ ], suppose that there exists a variable
p ∈At(A) not appearing in any formula in Γ . As there is an Efde valuation that

4.3 Towards a Computational Interpretation
93
maps all formulae to a designated value, Γ ⊪⋆
2 A does not hold vacuously and there
exists a program π terminating with all formulae in Γ ∪{A} assigned a designated
value. Consider a program π′ differing from π only by deleting the line declaring the
variable p. As p does not appear in any B ∈Γ , Γ will take a designated value but A
will not be evaluated as the system will not be able to retrieve a value for p. Hence,
At(A) ⊆At[Γ ]. The observation above guarantees that these two conditions entail
that Γ ⊨Sfde A.
For right-to-left, suppose that Γ ⊨Sfde A, i.e., both Γ ⊨LP A and At(A) ⊆At[Γ ],
and suppose for contradiction that Γ ̸⊪⋆
2 A. The latter condition entails that there be
a program π terminating with all B ∈Γ assigned a designated value, but A not be
assigned a designated value. That all formulae in Γ are assigned designated values
must entail that all variables in At[Γ ] have been initialized and this, in conjunction
with the assumption that At(A) ⊆At[Γ ], entails that all variables appearing in A
have likewise been initialized. Hence, the values of all formulae in Γ and that of
A form a subset of {t, b, f}. But this assignment corresponds to an Efde valuation
restricted to {t, b, f}, which is precisely an LP valuation, whence Γ ⊭LP A, contra-
dicting the assumption that this is valid in LP.
□
Observation 4.3.3 Γ ⊪⋆
3 A iff Γ ⊨S⋆
fde A
Proof The proof runs virtually identically to that of Observation 4.3.2 except for
associating the truth value n with the state of a variable when it is declared but not
yet assigned a value.
□
Despite admitting this computational interpretation, Sfde is introduced as a con-
ceptivist logic, in particular, as a means to repair some perceived shortcomings with
Parry’s PAIfde. We can stop to consider Sfde—and S⋆
fde—in more detail and sug-
gest that such systems present a reasonable ﬁrst step towards reconciling the prima
facie unrelated notions of meaningfulness and possibility with conceptivist systems.
First, if we examine the matrices for Sfde or S⋆
fde, we note that these systems
obey the doctrine of the predominance of the atheoretical element and thus admit a
reading similar to that which we gave to 0. Indeed, each is a subsystem of Bochvar’s
logic, as can be conﬁrmed by noting that the Sfde matrices restricted to {t, f, u} are
the 0 matrices.
More importantly, disjunction in Sfde and S⋆
fde also exhibits behavior approxi-
mating Zimmerman’s notion of free choice disjunction. Let DSfde = {t, b}, the set of
designated values of Sfde. By examining the matrices we note that for appropriate
valuations v, v(A ∨B) ∈DSfde if f ∨
P (v(A), v(B)) ∈DSfde. But parsing the inten-
sion of f ∨
P is interesting in that, as we saw in the work of Zimmerman and Fitting,
there is an unavoidable use of conjunction. Then
v(A ∨B) ∈DSfde iff
⎧
⎪⎨
⎪⎩
v(A) ∈DSfde or v(B) ∈DSfde ,and
v(A) ̸= u, and
v(B) ̸= u

94
4
A Computational Interpretation of Conceptivism
Assuming the intuitive readings of ‘v(A) ∈DSfde’ as ‘A is the case’ and ‘v(A) ̸= u’
as ‘A might be the case,’ we ﬁnd that the above mirrors Zimmerman’s free choice
disjunction perfectly, i.e.,
v(A ∨B) ∈DSfde iff
⎧
⎪⎨
⎪⎩
either A is the case or B is the case, and
A might be the case, and
B might be the case
Sfde thus gives us an example of a conceptivist logic that can be motivated on
computational, rather than Kantian, grounds. Moreover, by amending the notions of
‘meaningfulness’ and ‘possibility’ to render them suitable to a computational setting,
Sfde also uniﬁes the insights underlying a pair of very distinct semantical traditions.
We thus see how tracing a computational theme yields a conceptivist logic
a. that is a subsystem of a nonsense logic (and is thus itself a nonsense logic) and
b. whose account of disjunction mirrors that of free choice disjunction.
Although naïve, the ‘declaration of variables’ interpretation is able to bring these
disparate rejections of Addition under one roof.
4.4
Enriching the Interpretation
A clear limitation of the naïve account of declaration of variables as outlined above
is that it is static and gives only a snapshot of the state of some program. But compu-
tation is not static; there are dynamic and temporal aspects of computation that were
necessarily suppressed in the foregoing discussion.
If we are to further develop the theme of reading conceptivist systems as having a
salient interpretation for computing, it will be fruitful to consider systems capable of
respecting this dynamism. This section intends to take some initial steps into doing
just this by considering systems that enrich the declaration-of-variables picture with
dynamic and temporal apparatus.
4.4.1
Conceptivism and Propositional Dynamic Logic
Propositional dynamic logic (PDL) is a multi-modal system of propositional logic in
which the □and ♦operators of modal logic are given explicit interpretations—[α]
and ⟨α⟩—where α is interpreted as either a program or an action. Following Harel,
Kozen, and Tiuryn in [29], the interpretation of [α]A for a PDL formula A is ‘every
execution of the program α yields a state in which A is true.’ The dual connective ⟨α⟩
is read so that ⟨α⟩A is interpreted as ‘there exists some execution of α terminating in

4.4 Enriching the Interpretation
95
a state at which A is true.’ (The reading in terms of actions is easily recovered from
these interpretations.)
The syntax of PDL allows a number of operations on programs within the scope of
the brackets. Programs are built up from a set of atomic programs AtΠ = {a, b, c, ...}
so that the set of programs Π is constructed recursively:
• If a ∈AtΠ then a ∈Π
• If α ∈Π then α∗∈Π
• If α, β ∈Π then α; β ∈Π and α ∪β ∈Π
α⋆represents a program that nondeterministically selects a ﬁnite n and executes
program α n many times, while program α; β is the program executing α followed
by β.
Of present importance is the operator ∪so that to execute the program α ∪β is
to ‘choose either α or β nondeterministically and execute it.’ In terms of actions,
this clearly has a reading of freely choosing to perform either α or β. An anonymous
referee for the Journal of Applied Non-Classical Logics has suggested a prima facie
connection between the distribution of a modal operator over disjunction—that the
possibility of a disjunction entails the possibility of each disjunct—and propositional
dynamic logic, notably the axiom
α ∪β]A ↔[α]A ∧[β]A
There are two things that can be said of this apparent connection.
Intriguingly, a connection between the problem of free choice permission and
PDL has been investigated by Robert van Rooij in the paper [41]. In part, van Rooij
diagnoses the difﬁculty in inferring ♦(A) ∧♦(B) from ♦(A ∨B) as an artifact of the
possible worlds reading of propositions. That is, if X is a nonempty set of possible
worlds at which A ∨B holds, then this clearly does not entail the existence of any
worlds at which, e.g., B holds. However, van Rooij cites a different approach to the
interpretation of deontic modals:
Another tradition... is based on the assumption that deontic concepts are usually applied to
actions rather than propositions. [41, p. 5]
In essence, van Rooij’s solution is to add an atomic proposition Per representing all
‘permissible worlds.’ Then, [α]Per (which van Rooij symbolizes ‘Per(α)’) means
that any execution of action (i.e., program) α leads to a permissible state of affairs.
Then, substituting the proposition Per for A, we yield
[α ∪β]Per ↔[α]Per ∧[α]Per,
as a theorem of PDL. This instance suggests the desired reading that if a random
selection between actions α and β each lead to a permissible state of the world, then
individually, both α and β will lead to such a state.
However, independently of the matter of free choice disjunction, the reading
of a term α as a program is independently interesting inasmuch as it suggests a

96
4
A Computational Interpretation of Conceptivism
direct application of Parry’s syntactic concerns. One cannot, for example, add a new
syntactical element, such as an arbitrary line of code, to a program without concern
for its meaningfulness.
In one sense, PDL fulﬁlls the spirit of Parry’s remarks. When terms α are inter-
preted as programs, there is a sense in which PDL resists the notion of error-free
introduction of arbitrary syntax. For example, consider the theorem of PDL
⟨α⟩A →⟨α ∪β⟩A
At ﬁrst blush, it may appear that this is a violation of the spirit of the Proscriptive
Principle, as the fact that a particular program α has a property (that some instance
of its computation yields a state at which A is true) entails that some further program
α ∪β—where β is arbitrary, perhaps even nonsensical or error-ridden—has this
property. Upon closer inspection, however, all that this means is some instance of
the program α ∪β yields A, namely, the instance witnessed by the antecedent ⟨α⟩A.
PDL, in fact, seems to have a built in ability to throw away syntactically ill-formed
programs. The formula
[α]A →⟨α⟩A
fails to be a PDL-theorem, whence one can infer that merely because one can write
a program does not mean that it can be executed.
There is, however, tension between some of the observations made in Sect.4.3.3
and the peculiarities of PDL. Consider, for example, that the natural language inter-
pretation of the formula
[α]A →[α](A ∨B)
is that for an arbitrary program α, if any execution of α results in a state at which
A is true, then any execution of α will also result in a state at which A ∨B is true.
As the ‘local’ logic of the models is classical, i.e., the Principle of Addition holds
locally at every state w, this is clearly a theorem of PDL. It is also one which the
present considerations seem to contradict.
For example, we noted that one can consider a program π whose sole operation
is to initialize a variable p with a value of 1. If one were to make two amendments to
π by adding code to recover the value of p and to recover the value of porq (where
‘or’ is the disjunction from the algorithm), respectively, the ﬁrst amended program
would report that p has a value of 1 while the second would report an error. π seems
to witness that there are programs the execution of which yields a state such that p
is true—assigned a value of 1—while p ∨q is not.
Ifthisisrephrasedinthelanguageofpropositionaldynamiclogic,thisisanalogous
to the statement that
¬([π]p →[π](p ∨q))

4.4 Enriching the Interpretation
97
This is apparently a counterexample to the PDL theorem in question.
There seem to be ready-to-hand ways of addressing this matter in PDL. If, for
example, one builds into PDL a deﬁnition so that
At(α) =d f {p ∈At | p is declared in α},
then one candidate account of the operator [α] may read:
w ⊩[α]A if

at all w′ such that wRαw′ , w′ ⊩A , and
At(A) ⊆At(α)
Clearly, the formula [α]A →[α](A ∨B) will not be a theorem of such a weakened
subsystem of PDL. This appears to be a plausible and conceptually sound revision
of PDL respecting the matter of declaration of variables.
There are a number of subtle questions with respect to how such a system is to
be formalized and axiomatized. For example, if programs α and β each declare the
variable p, then how should the program α; β—the program executing α and then
executing β—be analyzed? One could arguably reject α; β as ill-formed, answering
this question at the level of syntax. Alternatively, one could either treat the declaration
of p in β as redundant or treat it as clearing the variable. Exploring such questions
could take up an entire chapter; for present purposes, it must sufﬁce to raise these
questions and identify them as interesting.
4.4.2
An Intuitionistic Conceptivist Logic
The connection between intuitionistic logic and computation is well-known. By
means of the Curry-Howard correspondence, provability of a formula A in the impli-
cational fragment of intuitionistic logic corresponds to the existence of a program or
function in the λ-calculus of type A. Similar correspondences exist between other
propositional logics and classes of programs or computable functions; for example,
the provability of A in R→—the pure implicational fragment of relevant logic R—
corresponds to the class of λI-terms. [46] provides a very good discussion of this
correspondence, as well as many other such correspondences.
This computational picture is reinforced by the Kripke semantics for intuitionistic
logic ﬁrst introduced in [33], in which points w in a model can be thought of as states
and moving forward along an accessibility relation R can be read as the evolution of
a computational procedure. Kripke’s semantical picture is prima facie equally well-
suited to account for the declaration of variables as well; one can imagine not only
processes evolving and calculating values but also declaring syntax over the course
of these evolutions. As we will see in this section, doing so yields a conceptivist
system.

98
4
A Computational Interpretation of Conceptivism
A basis for such an approach can be found in a program begun by Peter Woodruff
of producing intuitionistic subsystems of many-valued logics in [48]. The techniques
of his dissertation are brought to bear on Halldén’s C in [49], in which constructive
subsystems are provided for C and Krister Segerberg’s D, a further logic of nonsense
described in [44]. The ensuing constructive systems are called CI and DI, respec-
tively. CI essentially exports Halldén’s intuitions about nonsense and applies them
to Kripke’s models for intuitionistic logic.
By some simple revisions of Woodruff’s deﬁnitions, the system CI can be further
adapted to provide constructive subsystems of Bochvar’s  and 0 that admit the
very reading we are after. Inasmuch as the following technique will yield a fragment
of 0 that qualiﬁes as a containment logic, we can think of this section as providing
a third ‘strategy’ to complement the two strategies described in Chap.2, i.e., taking
connexive and paraconsistent fragments.
We will ﬁrst review Woodruff’s semantics for CI.
Deﬁnition 4.4.1 A CI model is a 4-tuple ⟨W, R, VT , VM⟩such that
• W is a nonempty set of points
• R is a reﬂexive and transitive binary relation on W
• VT : At →℘(W) withtheconditionthat if w ∈VT (p) andwRw′ thenw′ ∈VT (p)
• VM : At →℘(W) with the condition that if w ∈VM(p) and wRw′ then w′ ∈
VM(p)
• for all p ∈At, VT (p) ⊆VM(p)
From these, a pair of forcing relations are deﬁned in tandem.
As we will ultimately be interested in a pure implicational fragment of this system,
we will provide truth conditions only for formulae in the pure implicational language
L→, that is, the collection of propositional formulae in which no connective but →
appears. To make things precise, we deﬁne L→:
Deﬁnition 4.4.2 The propositional language L→is recursively deﬁned so that
• If p ∈At then p ∈L→
• If A, B ∈L→then A →B ∈L→
As we are restricting our attention to a pure implicational language, we will deﬁne
the relevant semantic relations only for members of L→:
Deﬁnition 4.4.3 Meaningfulness of a formula A at a point w in a model M, sym-
bolized by M, w ⊩M A is deﬁned so that:
• M, w ⊩M p if w ∈VM(p)
• M, w ⊩M A →B if M, w ⊩M A and M ⊩M B
Truth of a formula A is similarly deﬁned:
• M, w ⊩T p if w ∈VT (p)

4.4 Enriching the Interpretation
99
• M, w ⊩T A →B if

∀w′such that wRw′, if M, w′ ⊩T A, then M, w′ ⊩T B, and
M, w ⊩M A →B
Validity for the intuitionistic system CI is deﬁned by the following scheme.
Deﬁnition 4.4.4 Γ ⊨CI A iff for all models M and points w, if M, w ⊩T B for all
B ∈Γ and M, w ⊩M A, then M, w ⊩T A
We wish to construct the analogous system for an intuitionistic version of Bochvar’s
logic, but Woodruff’s semantics does not make use of truth values. If it is a dispute
concerning truth values that distinguishes the accounts of Bochvar and Halldén,
it may not be immediately clear how to adapt Woodruff’s semantics to a system
harmonious with Bochvar’s intuitions.
Recall from Sect.3.3.3 that Halldén is adamant that designation of the nonsense
value is not to say that nonsense is truth-like in any way, but rather, to say that
validity is only concerned with cases in which the consequent is meaningful. This
is, in effect, to say that one should never reject an entailment Γ ⊢A by producing
a counterexample in which A is nonsense. Woodruff’squaliﬁcation that Γ ⊨CI A is
only evaluated in occasions at which A is meaningful aligns it with Halldén’s taking
the nonsense truth value as designated.
This is the difference between the internal calculi of Bochvar and Halldén in a
nutshell. We can thus describe a system I that bears the same relationship to CI
that  bears to C. We merely revise the deﬁnition of validity so that:
Deﬁnition 4.4.5 Γ ⊨I A iff for all models M and points w, if M, w ⊩T B for all
B ∈Γ , then M, w ⊩T A
Clearly, this furthermore determines a constructive subsystem of Bochvar’s 0 when
the connective ‘→’ is identiﬁed with Bochvar’s internal implication.
Just as 0 is not ⊢-Parry, neither is I0, and for identical reasons. Inasmuch as
A ∧¬A can never be true at a point w, A ∧¬A ⊨I0 B will vacuously hold. On the
other hand, inasmuch as a contradiction cannot be expressed without negation, every
formula in the pure implicational fragment of I has a model. Inferences concerning
any formulae in this language will enjoy the Proscriptive Principle with respect to
⊢. Importantly, I→—the implicational fragment of I—will be ⊢-Parry.12
Intuitively, the semantical picture admits a reading in which variables are declared
at certain stages in a computation. Consider, for example, a I→model whose frame
is a tree with a root node w. Suppose that w ⊩M p holds in the model; this can be
read as p being globally declared by the main procedure w, as all subsequent points
recognize p as meaningful. If, on the other hand, some atom q is not meaningful at w,
but there exists a distinct w′ such that wRw′ and w′ ⊩M q, then one can interpret w′
as a subprocedure called by w that locally declares q. Calculations made outside of
this subprocedure—i.e., outside of the upwards R-cone of w′—will not necessarily
be able to employ q.
12Note that this suggests that the two strategies for deﬁning conceptivist subsystems of 0 described
in Sect.2.3—that is, by taking connexive or paraconsistent fragments—are joined by a third strategy.

100
4
A Computational Interpretation of Conceptivism
The implicational system I→admits a simple natural deduction proof theory.
Consider the following deﬁnition.
Deﬁnition 4.4.6 The natural deduction calculus for I→is deﬁned by the rules:
[Ax] A ⊢A
is an axiom.
Γ, Γ ′ ⊢B
[Str] Γ, A, Γ ′ ⊢B
Γ, A, A, Γ ′ ⊢B
[Con]
Γ, A, Γ ′ ⊢B
Γ, A, C, Γ ′ ⊢B
[Exc] Γ, C, A, Γ ′ ⊢B
Γ, A ⊢B
[→I]
provided that At(A) ⊆At[Γ ]
Γ ⊢A →B
Γ ⊢A →B
Γ ⊢A
[→E]
Γ ⊢B
As expected, this system is indeed a conceptivist calculus.
Observation 4.4.1 I→is ⊢-Parry
Proof This follows from a simple induction on the lengths of proofs. All axioms
clearly satisfy the Proscriptive Principle for ⊢. In each of the inference rules, it can
be directly observed that this property is inherited by each succeeding application of
a rule. Hence, all derivable sequents enjoy the property, whence I→is ⊢-Parry. □
Completeness between the natural deduction calculus and the Woodruff-style seman-
tics can be established by means of the canonical model technique. We will ﬁrst deﬁne
the canonical model for I→:
Deﬁnition 4.4.7 The canonical model S = ⟨W, R, VT , VM⟩for I→is deﬁned so
that:
• W = {Γ | Γ is a deductively closed I→-theory}
• R = {⟨Γ, Δ⟩| Γ ⊆Δ}
For atoms p, we then set VM and VT so that:
• VM(p) = {Γ ∈W | ∃B ∈Γ such that p appears in B}
• VT (p) = {Γ ∈W | p ∈Γ }
That what we have deﬁned is in fact a model in Woodruff’s sense is not trivial; we
must conﬁrm that it enjoys the necessary properties.
Observation 4.4.2 S is a model.
Proof Clearly, VT ⊆VM; that p ∈Γ trivially implies that each of its atoms is found
in Γ .
That R is reﬂexive and transitive follows immediately from the properties of ⊆.
This also entails that both VM and VT are hereditary, i.e., that if w ∈VM(p) and
wRw′ then w′ ∈VM(p) and mutatis mutandis for VT .
□

4.4 Enriching the Interpretation
101
Lemma 4.4.1 A ∈Γ iff S, Γ ⊩T A
Proof In the case of atomic formulae p, the deﬁnition of VT entails that Γ ∈VT (p)
iff p ∈Γ . Hence, that Γ ⊢I→p is equivalent to p ∈Γ , which is by deﬁnition
equivalent to Γ ∈VT (p) which is just the deﬁnition for S, Γ ⊩T p.
Now, we prove this for arbitrary formulae of the form A →B. We will prove this
by induction on complexity of formulae. Suppose for induction hypothesis that this
has been shown to hold for all subformulae of A →B.
For right-to-left, suppose that Γ ⊢I→A →B. Then, as A →B ∈Γ , trivially all
atoms in A →B appear in some C ∈Γ , whence S, Γ ⊩M A →B. Moreover, by
(→E), in any extension Γ ′ ⊇Γ , if A ∈Γ ′ then B ∈Γ ′. By induction hypothesis,
this is to say that for all Γ ′ such that Γ RΓ ′, if S, Γ ′ ⊩T A then S, Γ ′ ⊩T B. But
this—with the observation that S, Γ ⊩M A →B—entails that S, Γ ⊩T A →B.
Now, for left-to-right, suppose that S, Γ ⊩T A →B. We infer then that at every
Γ ′ such that Γ RΓ ′, if S, Γ ′ ⊩T A then S, Γ ′ ⊩T B which, by induction hypothesis,
allows us to infer that in any extension Γ ′ ⊇Γ , if Γ ′ ⊢I→A then Γ ′ ⊢I→B. This,
however, does not immediately allow us to infer that Γ ⊢I→A →B; we need more
work to show that At(A) ⊆At[Γ ].
This work begins by noting that S, Γ ⊩M A →B, entailing that there exists some
formula C such that both Γ ⊢I→C and At(A →B) ⊆At(C). Hence, C ∈Γ , from
whichwemaymakeitexplicitthattosaythatΓ, A ⊢I→B isequivalenttosayingthat
Γ, C, A ⊢I→B. Hence, as At(A) ⊆At(C), we are licensed to infer that Γ, C ⊢I→
A →B. By the redundancy of C, however, we conclude that Γ ⊢I→A →B.
□
Theorem 4.4.1 If Γ ⊨I→A then Γ ⊢I→A.
Proof We prove the contrapositive. If Γ ⊬I→A then A /∈Γ . By Lemma 4.4.1, this
entails that S, Γ ⊮T A, witnessing that Γ ⊭I→A.
□
Theorem 4.4.2 If Γ ⊢I→A then Γ ⊨I→A.
Proof This can be established by induction on the length of proofs. In the basis step,
note that all instances of axioms are semantically valid. All inferences in the natural
deduction calculus can be easily seen to be validity-preserving. That this holds for
every derivable Γ ⊢I→A follows by induction.
□
Although the picture is suggestive, there is still much to be developed concerning
such a system. For example, inhabitation problems must be rephrased, as I→has
no theorems. Asking whether there is a function inhabiting such-and-such a formula
only makes sense against the backdrop of a nontrivial environment.
But this is actually quite natural in this context. In the formulae-as-types paradigm,
a set of premises Γ in a judgment is called the ‘environment.’ As we saw in [2], it
is the environment that assigns meanings to symbols in computing. Hence, from an
interpretative standpoint, it is perfectly natural to expect that no inferences can be
drawn from an empty environment as all symbols remain uninterpreted in such an
environment.13
13Cf. [13], in which Daniels expresses the sentiment that ‘[i]t’s doubtful whether any sentence is
true in all stories.’[13, p. 424].

102
4
A Computational Interpretation of Conceptivism
4.5
Conclusions
The interpretation of conceptivist logic offered above provides a way of examining
some formal problems with respect to these systems, such as the matter of deal-
ing with quantiﬁcation and entailment connectives, that differs from the standard
semantical interpretations of conceptivist systems. Moreover, it also is hoped that
the computational approach to conceptivism might bear some practical fruit as well.
The aim of this discussion has been, in part, to rehabilitate Parry-type logics—
and deductive systems rejecting Addition in general—by providing a natural and
serviceable foundation for their intuitions and formalisms. Yet the utility of the
present interpretation very likely goes beyond elucidating an obscure footnote in the
history of logic. While Sect.4.3.3 provides concrete interpretations of such systems,
conceptivist systems may yield more general fruits as well.
The Belnap account of computing can address one sort of error or problem, that is,
the matter of drawing inferences in the face of inconsistent data. Papers such as [10]
are motivated by a particular instance of this problem: the inconsistent database. In
general, as a matter of fact, paraconsistent systems do appear to be well-equipped to
handle such circumstances. The considerations of this chapter suggest that there are
further sources of error that must be addressed in such a database: beyond occasions
in which a system retrieves inconsistent data lie the occasions in which a system is
unable to retrieve any value at all.
Suppose, for instance, that we are employing a database constructed with Efde
as an underlying logic, just as Belnap suggests. Querying a database and retrieving
Belnap’s value of n for some proposition is minimally informative in Efde, but this
does not necessarily entail that the receipt of this value conveys no information at
all. Belnap’s epistemic interpretation of retrieving a n value is that the sources have
neither reported that the corresponding proposition is true nor have they reported that
it is false. From this circumstance, however, it is reasonable to infer that the sources
possess neither solid evidence in its favor nor a compelling counterexample; had the
sources been in possession of this sort of evidence, it would have been reported.
Concretely, the system knows that the sources did not submit positive or negative
values. Hence, there is something to be learned from retrieving such a value.
In [23], Luciano Floridi gave an example that illustrates this distinction well.
Floridi considered querying a database (in his case, the Routledge Encyclopedia of
Philosophy on CD-ROM) for such-and-such a search term. In one case, ‘[i]f the
database provides an answer, it will provide at least a negative answer, e.g., the
[encyclopedia] will open a small window with the message “no search hits found”.’
This error imparts negative information to the end user. Distinct from this, however,
is the case in which the database fails to reply to the query. It either ‘fails to provide
any data at all’ or some additional process at least informs the end user that there is
an error in the database. The truth values can be associated with this interpretation—
truth with a positive hit on the search, falsity with a negative hit on the search, and
the nonsense value with some process from the environment informing the user of
some fault or other.

4.5 Conclusions
103
What, however, is there to be learned when the system queries the database only
to ﬁnd that there is an error, whether it is due to a variable not being declared or data
being corrupted? A corrupted entry in a database provides strictly less information
than having not received any entries. While from, for example, one of the truth
values corresponding to those of Efde one can infer something negative, if an entry is
corrupted,orotherwiseirretrievable,allofthesepossibilitiesareaprioriequipossible.
Efde is thus not able to model this scenario.
A conceptivist and paraconsistent system such as Sfde provides a way of account-
ing for each of these dimensions. For example, a database which includes instances
of corrupted data and instances of data which are inconsistent with each other, will be
bestmodeledbyasystemsuchasSfde.Clearly,Sfde hassomesigniﬁcantlimitations.
Sfde supports some inferences difﬁcult to motivate in this context. For example, the
inference p ∨q ⊨Sfde q ∨¬q is valid, which on the present reading suggests that
the variable q’s being declared entails that it has been initialized. Daniels’ system
S⋆
fde—which does not support this inference—may thus provide a better starting
point. In any case, the computational interpretation of conceptivist logics in general
yields a novel way of thinking about such matters.
What is more difﬁcult is embellishing the philosophical aspect. At ﬁrst blush,
there is no connection between the work of Bochvar and Halldén on the one hand and
Zimmerman on the other. Many epistemically impossible formulae, e.g., A ∧¬A,
are meaningful on the account of logics of nonsense; the work of Zimmerman is
particularized to a single case of the problem of free choice permission, without any
appeal to notions of meaningfulness. That these two, very distinct, formal approaches
converge while interpreting a third, equally unrelated thesis of containment is quite
curious. While this chapter does not deﬁnitively account for this phenomenon, further
exploration of the coincidence of these three themes appears to be warranted.
In short, the treatment of conceptivist logic presented in this chapter raises as
many questions as it solves and many matters of interpretation remain up for grabs.
That said, the present interpretation demonstrates that there may still be some life
in the conceptivist scheme and provides further evidence that the obituary Sylvan
wrote for it might well have been premature.
References
1. Åqvist, L.: Reﬂections on the logic of nonsense. Theoria 28(2), 138–157 (1962)
2. Abelson, H., Sussman, G.J., Sussman, J.: Structure and Interpretation of Computer Programs,
2nd edn. The MIT Press, Cambridge, MA (1996)
3. Anderson, A.R., Belnap Jr., N.D.: Tautological entailments. Philos. Stud. 13(1–2), 9–24 (1962)
4. Angell, R.B.: Three systems of ﬁrst degree entailment. J. Symb. Log. 42(1), 147 (1977)
5. Avron, A., Konikowska, B.: Proof systems for reasoning about computation errors. Stud. Logica
91(2), 273–293 (2009)
6. Belnap Jr., N.D.: How a computer should think. In: Ryle, G. (ed.) Contemporary Aspects of
Philosophy, pp. 30–56. Oriel Press, Stockﬁeld (1977)
7. Belnap Jr., N.D.: A useful four-valued logic. In: Dunn, J.M., Epstein, G. (eds.) Modern Uses
of Multiple-valued Logic, pp. 8–37. Reidel, Dordrecht (1977)

104
4
A Computational Interpretation of Conceptivism
8. Bochvar, D.A.: On a three-valued logical calculus and its application to the analysis of contra-
dictions. Matematicheskii Sbornik 4(2), 287–308 (1938)
9. Carnielli, W., Coniglio, M.E., Marcos, J.: Logics of formal inconsistency. In: Gabbay, D., Guen-
thner, F. (eds.) Handbook of Philosophical Logic, vol. 14, pp. 15–107. Springer, Netherlands
(2007)
10. Carnielli, W., Marcos, J., de Amo, S.: Formal inconsistency and evolutionary databases. Logic
and Logical Philosophy 8, 115–152 (2000)
11. Coniglio, M., Corbalán, M.I.: Sequent calculi for the classical fragment of Bochvar and
Halldén’s nonsense logics. In: Kesner, D., Viana, P. (eds.) Proceedings of the 7th Workshop on
Logical and Semantic Frameworks, with Applications (LSFA 2012), Electronic Proceedings in
Theoretical Computer Science, vol. 113, pp. 125–136 (2013)
12. Daniels, C.: A story semantics for implication. Notre Dame J. Formal Log. 27(2), 221–246
(1986)
13. Daniels, C.: A note on negation. Erkenntnis 32(3), 423–429 (1990)
14. Daniels, C.: The propositional objects of mental attitudes. J. Philos. Log. 19(3), 317–342 (1990)
15. Deutsch, H.: A family of conforming relevant logics. Ph.D. thesis, University of California Los
Angeles (1981)
16. Deutsch, H.: Paraconsistent analytic implication. J. Philos. Log. 13(1), 1–11 (1984)
17. Dunn, J.M.: A modiﬁcation of Parry’s analytic implication. Notre Dame J. Formal Log. 13(2),
195–205 (1972)
18. Epstein, R.L.: Relatedness and dependence in propositional logics. J. Symb. Log. 46(1), 202–
203 (1981)
19. Epstein, R.L.: The Semantic Foundations of Logic: Propositional Logics, 2nd edn. Oxford
University Press, New York (1995)
20. Ferguson, T.M.: Faulty Belnap computers and subsystems of FDE. J. Log. Comput. 26(5),
1617–1636 (2016)
21. Fine, K.: Analytic implication. Notre Dame J. Formal Log. 27(2), 169–179 (1986)
22. Fitting, M.: Bilattices are nice things. In: Bolander, T., Hendricks, V., Pedersen, S.A. (eds.)
Self-reference, pp. 53–77. CSLI Publications, Stanford (2006)
23. Floridi, L.: Is semantic information meaningful data? Philos. Phenom. Res. 70(2), 351–370
(2005)
24. Gentzen, G.: Investigations into logical deduction. In: Szabo, M. (ed.) The Collected Papers of
Gerhard Gentzen, pp. 68–131. North Holland, Amsterdam (1969)
25. Girard, J.Y.: Linear logic. Theoret. Comput. Sci. 50(1), 1–102 (1987)
26. Gödel, K.: On Parry’s axioms. In: Feferman, S., Dawson, J.W. Jr., Kleene, S.C., Moore, G.H.,
Solovay, R.M., van Heijenoort, J. (eds.) Collected Works, vol. I, p. 267. Oxford University
Press, Oxford (1986)
27. Halldén, S.: A question concerning a logical calculus related to Lewis’ system of strict impli-
cation, which is of special interest for the study of entailment. Theoria 14(3), 265–269 (1948)
28. Halldén, S.: The Logic of Nonsense. Lundequista Bokhandeln, Uppsala, Sweden (1949)
29. Harel, D., Kozen, D., Tiuryn, J.: Dynamic logic. In: Gabbay, D., Guenthner, F. (eds.) Handbook
of Philosophical Logic, vol. 4, 2nd edn, pp. 99–218. Kluwer Academic Publishers, London
(2002)
30. Hintikka, J.: Knowledge and Belief. Texts in Philosophy. King’s College Publications (1962)
31. Jennings, R.E.: The Genealogy of Disjunction. Oxford University Press, Oxford (1994)
32. Johnson, F.A.: A three-valued interpretation for a relevance logic. Relev. Log. Newslett. 1(3),
123–128 (1976)
33. Kripke, S.: Semantical analysis of intuitionistic logic I. In: Crossley, J., Dummett, M. (eds.)
Formal Systems and Recursive Functions, pp. 92–130. North-Holland Publishing, Amsterdam
(1965)
34. McCarthy, J.: A basis for a mathematical theory of computation. In: Braffort, P., Hirschberg,
D. (eds.) Computer Programming and Formal Systems, pp. 33–70. North-Holland Publishing
Company, Amsterdam (1963)
35. Oller, C.A.: Paraconsistency and analyticity. Log. Log. Philos. 7, 91–99 (1999)

References
105
36. Parry, W.T.: Implication. Ph.D. thesis, Harvard University (1932)
37. Parry, W.T.: Ein Axiomensystem für eine neue Art von Implikation (analytische Implikation).
Ergebnisse eines mathematischen Kolloquiums 4, 5–6 (1933)
38. Parry, W.T.: The logic of C. I. Lewis. In: P.A. Schilpp (ed.) The Philosophy of C. I. Lewis, The
Library of Living Philosophers, pp. 115–154. Open Court, La Salle, IL (1968)
39. Priest, G.: The logic of the catuskoti. Comp. Philos. 1(2), 24–54 (2010)
40. Restall, G.: An Introduction to Substructural Logics. Routledge, New York (2000)
41. van Rooij, R.: Conjunctive interpretation of disjunction. Semant. Pragmat. 3(11), 1–28 (2010)
42. Routley, R.: Relevant Logics and their Rivals, vol. 1. Ridgeview Publishing, Atascadero, CA
(1982)
43. Routley, R., Meyer, R.K.: Every sentential logic has a two-valued worlds semantics. Logique
et Analyse 19(74–76), 345–365 (1976)
44. Segerberg, K.: A contribution to nonsense-logics. Theoria 31(3), 199–217 (1965)
45. Smiley, T.: Sense without denotation. Analysis 20(6), 125–135 (1960)
46. Sørensen, M., Urzyczyn, P.: Studies in Logic and the Foundations of Mathematics. Lectures
on the Curry-Howard Isomorphism. North-Holland Publishing Company, New York (2006)
47. Urquhart, A.: A semantical theory of analytic implication. J. Philos. Log. 2(2), 212–219 (1973)
48. Woodruff, P.: Foundations of three-valued logic. Ph.D. thesis, University of Pittsburgh (1969)
49. Woodruff, P.: On constructive nonsense logic. Modality. Morality, and Other Problems of Sense
and Nonsense, pp. 192–205. GWK Gleerup Bokforlag, Lund (1973)
50. Zimmerman, T.E.: Free choice disjunction and epistemic possibility. Nat. Lang. Semant. 8(4),
255–290 (2000)

Chapter 5
Faulty Belnap Computers and Subsystems
of Efde
Abstract This chapter continues the consideration of the potential for interpreting
‘nonsense’ values as catastrophic faults in computational processes, focusing on the
particular case in which Nuel Belnap’s ‘artiﬁcial reasoner’ is unable to retrieve the
semantic value assigned to a variable. This leads not only to a natural interpretation
of Graham Priest’s semantics for the ⊢-Parry system S⋆
fde but also a novel, many-
valued semantics for Angell’s AC, completeness of which is proven by establishing
a correspondence with Correia’s semantics for AC. These many-valued semantics
have the additional beneﬁt of allowing the application the material in Chap.2 to the
case of AC, thereby deﬁning natural intensional extensions of AC in the spirit of
Parry’s PAI.
In this chapter we consider variations of Nuel Belnap’s ‘artiﬁcial reasoner.’ In par-
ticular, we examine cases in which the artiﬁcial reasoner is faulty, e.g., we consider
situations in which the reasoner is unable to calculate the value of a formula due
to an inability to retrieve the values of its atoms. In the ﬁrst half of the paper, we
consider two ways of modeling such circumstances and prove the deductive systems
arising from these two types of models to be equivalent to the Daniels-Priest sys-
tem S⋆
fde and Richard Angell’s AC, making computational interpretations of these
systems possible. The Belnap-type interpretation of AC yields a novel many-valued
semantics for AC, bringing Angell’s system in line with similar treatments of other
containment logics in its neighborhood. The second half of the paper examines for-
mal questions, such as whether AC admits an analysis along the lines of that given
to the related system of William Parry’s system of analytic implication (PAI), as
suggested by Kurt Gödel and conﬁrmed by Kit Fine. Furthermore, a natural means
of extending these systems to languages with an intensional implication connective
is investigated.
© Springer International Publishing AG 2017
T. M. Ferguson, Meaning and Proscription in Formal Logic,
Trends in Logic 49, https://doi.org/10.1007/978-3-319-70821-8_5
107

108
5
Faulty Belnap Computers and Subsystems of Efde
5.1
Introduction
In [4], Nuel Belnap outlines a prescription for how, in light of the practical problem
of a computer’s receiving contradictory data, a computer ought to ‘think.’ In partic-
ular, Belnap suggests that the inconsistency-tolerant logic of ﬁrst-degree entailment
(Efde) can be fruitfully employed to deal with occasions in which such data were
received. In this chapter, we will not take up the normative question of whether a
computer ought to think as Belnap suggests; rather, for the sake of argument, we
will assume that Belnap is correct. What we will consider is the question: Given that
a computer ought to operate in this way, how would it operate? In particular, we
consider a further deviation from theoretically pure computing: occasions in which
the Belnap computer is unable to recover the value assigned to a variable.
Although the earlier presentation of Efde in Deﬁnition 3.1.17 considers its seman-
tic values to be individuals, the semantical values of Efde can also be represented as
a pair of data corresponding to a truth value and a falsity value. This representation
suggests two reasonable implementations of a ‘Belnap computer’: a case in which
the entire semantical value may be stored at a single address, and a case in which a
Belnap variable requires distinct addresses for each coordinate. The cases in which
faults in retrieval of the values occur will thus be called the ‘single address’ and
‘two address’ accounts, respectively. The logic determined by the ‘single address’
account is the Daniels-Priest system S⋆
fde described in Deﬁnition 4.1.5. The logic of
the ‘two address’ account is equivalent to Angell’s system of analytic containment
(AC). The semantics introduced in the present paper provide a perspective on AC
differing from those described by Fabrice Correia in [7] or Kit Fine in [15]. We will
then shift focus to examine some consequences of the semantics described in this
chapter.
The interpretation offered in this chapter has the beneﬁt of providing AC and S⋆
fde
into alignment with other containment logics, allowing these systems to be extended
to higher-degree logics in a natural fashion. In the case of AC, after introducing the
present nine-valued semantics (which will initially be denoted by ‘NC’), we will
review the semantics introduced by Correia in [6] before showing the soundness
and completeness of the present semantics to AC. We will then continue the inquiry
by employing these semantics to give a deeper analysis of AC and S⋆
fde, such as
providing the Gödel-Fine analysis of AC. Finally, we adapt Fine’s semantics from
[14] for William Parry’s intensional containment logic PAI to extend S⋆
fde and AC
to accommodate formulae in a language with nested arrows.
We begin by reviewing the ﬁrst-degree systems.
5.2
Three First-Degree Logics
We examine three ﬁrst-degree systems. Such systems are deﬁned over the language
Lzdf that lack an intensional implication connective (although a material conditional

5.2 Three First-Degree Logics
109
⊃may be deﬁned); their novelty lies in the correspondence between valid inferences
of the form A ⊨B in the ﬁrst-degree case and valid theorems A →B in intensional
cases, i.e., in ﬁrst-degree entailment Efde, A ⊨Efde B iff A →B is a theorem
of Anderson and Belnap’s E, where A and B have no instances of the intensional
entailment connective, i.e., are zeroth degree formulae.
5.2.1
First-Degree Entailment Efde
Belnap’s interpretation of Efde of [4, 5] plays a central role in the sequel and we will
discuss Belnap’s artiﬁcial reasoner in more detail. Recall that Belnap describes both
an interpretation and a proposed application of the four-valued logic of ﬁrst-degree
entailment in a computational setting. Belnap’s observation is that a computer—or
‘artiﬁcial reasoner’—obtains data from a variety of inputs and it is conceivable that
the data from distinct and independent sources may be contradictory. For example,
if a system sends a calculation for a Boolean variable A to two subprocedures to
review in parallel and if a fault in one of the subprocedures leads it to an error in
its calculation, the subprocedures may return incompatible values for A. Absent a
deﬁnitive indication concerning which subprocedure is in error, the system will have
as good evidence for the value of A’s being 1 as it will for the value being 0.
Of course, in the classical propositional calculus, contradictory data in a theory
trivializes the theory as arbitrary formulae may be deduced from a contradiction.
Rather than allowing small, isolated inconsistencies to ‘pollute’ the entire ocean of
data in this way, Belnap proposes the motto ‘Keep our data clean.’ Efde, he suggests,
is precisely the means by which this motto ought to be observed.
In Deﬁnition 3.1.17, we have introduced four-valued semantics for the system
Efde according to which VEfde = {t, b, n, f}. However, an equally salient expression
of the semantics does not interpret the set semantic values as independent and non-
classical truth values, but rather construes them as pairs of classical truth values.
In such a bilateral account of truth values, the ﬁrst and second coordinates are
often construed as representing distinct and independent truth and falsity values,
respectively.
In the more epistemically-oriented context of Belnap’s artiﬁcial reasoner, the ﬁrst
coordinate of a semantical value represents whether a formula has been reported as
true and the second coordinate represents whether a formula has been reported as
false. For this reason, the values ⟨t, f⟩and ⟨f, t⟩correspond to t and f, respectively,
in the earlier semantics. Similarly ⟨t, t⟩corresponds to b (i.e., ‘both true and false”is
analogous to ‘it is true that the system has been told that the proposition is true and it is
true that the system has been told that the proposition is false’) and ⟨f, f⟩corresponds
to n (with a similar analogy). Many systems in this work admit a similarly bilateral
semantics; we will decorate the names of such sets of truth values with the symbol
⋆to indicate that this is the case.
The bilateral semantics for Efde is deﬁned over the language Lzdf and is described
as follows:

110
5
Faulty Belnap Computers and Subsystems of Efde
Deﬁnition 5.2.1 The bilateral semantics for Efde is induced by the matrix M⋆
Efde,
in which the set of truth values V⋆
Efde is deﬁned as {t, f} × {t, f} and the set of
designatedvaluesD⋆
Efde is{⟨t, t⟩, ⟨t, f⟩}.Todeﬁnethetruthfunctionsoverthebilateral
truth values, let f ∧
CL and f ∨
CL denote the classical truth functions corresponding to
conjunction and disjunction, respectively. Then the truth functions are deﬁned as
follows:
• f ¬
Efde(⟨v0, v1⟩) = ⟨v1, v0⟩
• f ∧
Efde(⟨v0, v1⟩, ⟨v′
0, v′
1⟩) = ⟨f ∧
CL(v0, v′
0), f ∨
CL(v1, v′
1)⟩
• f ∨
Efde(⟨v0, v1⟩, ⟨v′
0, v′
1⟩) = ⟨f ∨
CL(v0, v′
0), f ∧
CL(v1, v′
1)⟩
A bilateral Efde valuation is a function v from At to V⋆
Efde extended so that
• v(¬A) = f ¬
Efde(v(A))
• v(A ∧B) = f ∧
Efde(v(A), v(B))
• v(A ∨B) = f ∨
Efde(v(A), v(B))
Wewritethat A ⊨Efde B ifforeverybilateralEfde valuationv suchthatv(A) ∈D⋆
Efde,
also v(B) ∈D⋆
Efde.
Note that insofar as the negation switches the two values, it can be thought of as a
‘toggle negation’ in the sense of Andreas Kapsner’s [16].
That inconsistent data does not ‘pollute’ the broader ﬁeld of data should be clear;
that a system has been provided data indicating that A is true and also data indicating
that A is false is represented by a valuation v assigning A a semantical value of ⟨t, t⟩.
In such occasions, v(A ∧¬A) ∈D⋆
Efde. Yet this does not indicate that the system has
been provided data suggesting the truth of atomic B, i.e., this does not preclude v
from assigning a non-designated semantical value such as ⟨f, f⟩to an atom B. Hence,
such a v witnesses that A ∧¬A ⊭Efde B.
5.2.2
Single Address Faulty Efde
While Belnap considers cases in which contradictory data are returned to an artiﬁcial
reasoner, this is not the only type of potentially trivializing circumstance that may
occur in such a system.
Consider how a Belnap computer evaluates a formula A: The system employs an
algorithm to read the string of symbols corresponding to A and, upon reading each
symbol, acts in some prescribed manner. For example, upon reading the symbol
corresponding to a unary connective, the system will call a subprocedure (possibly
itself) to calculate the semantical values of the requisite subformulae. Upon reading
a variable B, however, the system will have to recover the value corresponding to
B. To do this, it must obtain the address at which the semantical value of B is stored
and access the memory at that address. Call the case in which both coordinates of
the Belnap-type value are stored at a single address (i.e., in which only one ‘piece’
of information is necessary to recover both coordinates) the ‘single address’ case.

5.2 Three First-Degree Logics
111
Classical logic, of course, presupposes that every variable be assigned one and
only one value so as to obey the principles of excluded middle and contradiction;
this is the assumption that Belnap resists in [4]. But a further presupposition—one
not challenged by Belnap—is that the value is always recoverable. Irrespective of
which of Belnap’s truth values is assigned to a variable, Belnap’s assumption is that a
system is capable of querying the address at which this variable’s value is stored and
retrieving its value. This does not hold in practice; a computer, for example, has ﬁnite
memory and cannot allocate an address to each member of a denumerably inﬁnite
set of propositional variables. Furthermore, even supposing that an address has been
assigned to hold the value, there could exist a physical ﬂaw in the memory preventing
the system from retrieving the value. In such cases, the algorithm to evaluate A will
not be executed. The ‘partial functions’ tradition of interpreting such faults (such
as Kleene’s interpretation of the weak three-valued matrices of [18] or McCarthy’s
truth tables of [19], appearing in Deﬁnitions 2.2.4 and 4.3.1, respectively), suggests
that upon such faults, a system will fail to terminate. In practice, of course, such an
occasion will lead to the system either terminating with an error or being held in an
inﬁnite loop as it attempts to locate a phantom resource. In either case, we may think
of such errors as producing a third truth value.
Note that the situation in which, e.g., an atom p is assigned Belnap’s ‘neither’
value is distinct from that in which its value is irrecoverable. In the former case, a
system is perfectly capable of calculating the value of formulae C in which p appears;
the system can retrieve the values of all atoms of C and calculate accordingly. If,
however, the act of recovering the value of p triggers an error—suppose that such
an action causes the system to crash—the system will be unable to perform this
calculation. From an epistemological perspective, too, these situations are distinct.
Under Belnap’s interpretation, when a ‘neither’ value is recovered for a variable p, the
system possesses some information, namely, that it has received no data concerning
p. When the system is unable to recover the value of p, it lacks even this meager
information. As these scenarios differ in their behavior, it is natural to think of them
as corresponding to distinct truth values.
In the single address Efde case, we are able to model these circumstances by
moving to a ﬁve-valued logic that serves as a bilateral version of the semantics for
S⋆
fde from Deﬁnition 4.1.5. We presuppose the Belnapian picture that the semantical
value of a variable A represents data corresponding to both its truth as well as
its falsity. Moreover, we assume that whatever data are being sent to the system
concerning A may be stored at a single address so that recovery of the ﬁrst and
second coordinates of a truth value stand and fall together.
InadditiontothebilateralsemanticalvaluesofEfde,then,weconsideraﬁfthvalue
⟨u, u⟩that represents a failure to retrieve a value.1 Note that if variables p0, ..., pn−1
enumerate At(A), then an algorithm evaluating A demands the successful retrieval
of the value of each atom pi. Therefore, calculating the value of A will fail if for any
pi there is an error in its retrieval.
The bilateral account of the Daniels-Priest system S⋆
fde is as follows:
1That we are employing the value u ∈V0, i.e., an infectious nonsense value, is not by accident.

112
5
Faulty Belnap Computers and Subsystems of Efde
Deﬁnition 5.2.2 The bilateral semantics for S⋆
fde is induced by the matrix M⋆
S⋆
fde =
⟨V⋆
S⋆
fde, D⋆
S⋆
fde, f ¬
S⋆
fde, f ∧
S⋆
fde, f ∨
S⋆
fde⟩where the set of truth values is V⋆
Efde ∪{⟨u, u⟩} and
the set of designated values D⋆
S⋆
fde = D⋆
Efde.
The truth functions f ¬
S⋆
fde, f ∧
S⋆
fde, and f ∨
S⋆
fde can be deﬁned by referencing their
analogous functions in the bilateral semantics for Efde. Letting ◦∈{∨, ∧}, the
deﬁnitions are:
• f ¬
S⋆
fde(⟨v0, v1⟩) =

⟨u, u⟩if v0 = v1 = u
f ¬
Efde(⟨v0, v1⟩) otherwise
• f ◦
S⋆
fde(⟨v0, v1⟩, ⟨v′
0, v′
1⟩) =

⟨u, u⟩if v0 = v1 = u or v′
0 = v′
1 = u
f ◦
Efde(⟨v0, v1⟩, ⟨v′
0, v′
1⟩) otherwise
While Efde permits the inference to A∨B from A, i.e., A ⊨Efde A∨B, the principle of
AdditionfailsforS⋆
fde.ConsiderabilateralS⋆
fde valuationv suchthatforatoms p and
q, v(p) = ⟨t, f⟩and v(q) = ⟨u, u⟩. Then v(p) ∈D⋆
S⋆
fde although v(p ∨q) = ⟨u, u⟩,
whence v(p ∨q) /∈D⋆
S⋆
fde. Such a valuation witnesses that this inference is not valid
in S⋆
fde.
5.2.3
Two Address Faulty Efde
We will now further complicate the Belnapian picture by revisiting the issue of faults
when retrieving a semantical value. We had considered the case in which both types
of report with respect to a variable p were stored at a single address. This type
of reading licenses the inference A ⊨S⋆
fde A ∨¬A; that A takes a designated value
implies that the location at which the value of the truth of A is stored is accessible.2 If
this is the same address as that at which the value of ¬A, i.e., the value corresponding
to whether A is false, is stored, then the system is able to pull up the value of ¬A
when evaluating A ∨¬A. In such cases, of course, it will ﬁnd A ∨¬A to take a
designated value.
That said, an equally—if not more—reasonable implementation of the Belnapian
picture would employ a pair of addresses for each atom p: One to store a ﬂag that p
has been afﬁrmed and another to store a ﬂag that p has been denied, i.e., an address
for each coordinate of the semantical value of p. If, e.g., only a single bit is allocated
at a time, then each coordinate will require a distinct address.
Note that the bilateral semantics for S⋆
fde was deﬁned in terms of the classical
truth functions that govern reports of truth and falsity so that in a sense, S⋆
fde can be
interpreted as employing two parallel systems of positive classical logic to calculate
truthandfalsityindependentlyofoneanother.Thesystemthatwillarisefromthe‘two
2We will see that this inference in a sense characterizes the single address account, as the proof
theory for S⋆
fde is equivalent to the addition of this inference to the logic determined by the two
address case.

5.2 Three First-Degree Logics
113
address’ treatment of Belnap’s picture will bear the same relation to Bochvar/Kleene
weak three-valued logic deﬁned in Deﬁnition 2.2.4.
We have seen in the foregoing that 0 is closely related to a number of containment
logics. 0 bears an equally deep relationship with the semantics we will now outline.
Call the semantical system to be introduced NC, deﬁned with respect to the same
language as that of AC.
Deﬁnition 5.2.3 NC is deﬁned by the set of truth values VNC = V0 × V0 and
DNC = {⟨t, v⟩| v ∈V0}.
The truth functions f ¬
NC, f ∧
NC, and f ∨
NC corresponding to negation, conjunction,
and disjunction, respectively, are deﬁned so that for all ⟨v0, v1⟩, ⟨v′
0, v′
1⟩∈VNC,
• f ¬
NC(⟨v0, v1⟩) = ⟨v1, v0⟩
• f ∧
NC(⟨v0, v1⟩, ⟨v′
0, v′
1⟩) = ⟨f ∧
0(v0, v′
0), f ∨
0(v1, v′
1)⟩
• f ∨
NC(⟨v0, v1⟩, ⟨v′
0, v′
1⟩) = ⟨f ∨
0(v0, v′
0), f ∧
0(v1, v′
1)⟩
An NC valuation is a function from At to V0 × V0 extended so that
• v(¬A) = f ¬
NC(v(A))
• v(A ∧B) = f ∧
NC(v(A), v(B))
• v(A ∨B) = f ∨
NC(v(A), v(B))
Before connecting the system NC to AC, we pause to demonstrate some useful
features of the system NC.
Observation 5.2.1 NC is a subsystem of Efde
Proof Theset{⟨t, f⟩, ⟨t, t⟩, ⟨f, f⟩, ⟨f, t⟩}isjustVEfde.Furthermore,itcanbecalculated
that the system Efde, i.e., its values, designated values, and truth functions, can be
recovered by restricting NC to V⋆
Efde.
□
Let Lit denote the set of literals, i.e., Lit = At ∪{¬A | A ∈At}. Then we provide
the following deﬁnition:
Deﬁnition 5.2.4 Theliteralnormalformofaformula A (denoted AN F)isrecursively
deﬁned as follows:
• AN F = A for A ∈Lit
• (A ∧B)N F = AN F ∧B N F
• (A ∨B)N F = AN F ∨B N F
• (¬¬A)N F = AN F
• (¬(A ∧B))N F = (¬A)N F ∨(¬B)N F
• (¬(A ∨B))N F = (¬A)N F ∧(¬B)N F
Lemma 5.2.1 For any NC valuation v, v(A) = v(AN F)

114
5
Faulty Belnap Computers and Subsystems of Efde
Proof By induction on complexity of formulae. Clearly, v(A) = v(AN F) for A ∈
Lit. As induction hypothesis, assume that v(A) = v(AN F) and v(B) = v(B N F).
For v(A ∧B) and v(A ∨B), note that
v((A ∧B)N F) = v(AN F ∧B N F) = f ∧
NC(v(AN F), v(B N F)) = f ∧
NC(v(A), v(B)).
But this is just v(A∧B); the case of disjunction proceeds identically, all other things
being equal.
There are three cases to consider for negated formulae. For double negation,
v(¬¬A) = v(A) and A is (¬¬A)N F. For negated conjunctions ¬(A ∧B), we
observe that by deﬁnitions and the induction hypothesis, we have the following:
v((¬(A ∧B))N F) = v((¬A)N F ∨(¬B)N F) = f ∨
NC(v((¬A)N F), v((¬B)N F)) =
f ∨
NC(v(¬A), v(¬B)). By deﬁnition, this is equal to f ∨
NC( f ¬
NC(v(A)), f ¬
NC(v(B))).
But it can be easily conﬁrmed that this is equivalent to f ¬
NC( f ∧
NC(v(A), v(B))), i.e.,
v(¬(A ∧B)). Finally, the case of negated disjunctions follows analogously.
□
Deﬁnition 5.2.5 The sets At+(A)—the positive atoms of A and At−(A)—the neg-
ative atoms of A—are recursively deﬁned:
• At+(A) = {A} for A ∈At
• At−(A) = ∅for A ∈At
• At+(¬A) = At−(A)
• At−(¬A) = At+(A)
• At+(A ◦B) = At+(A) ∪At+(B) for ◦∈{∧, ∨}
• At−(A ◦B) = At−(A) ∪At−(B) for ◦∈{∧, ∨}
A simple induction can be employed to prove that NC inherits a form of the ‘infec-
tiousness’ of the truth value u from 0. Let pr0 and pr1 be the projection functions
mapping ordered pairs to their ﬁrst and second coordinates, respectively.
Lemma 5.2.2 For an atomic formula A, an arbitrary formula B, and an NC valu-
ation v,
• if A ∈At+(B) and pr0(v(A)) = u then v(B) /∈DNC
• if A ∈At−(B) and pr1(v(A)) = u then v(B) /∈DNC
Proof By induction on complexity of formulae.
□
Having noted these features of the system NC, we will now prove the equivalence
of NC with Richard Angell’s system of analytic containment AC.
5.3
Angell’s Analytic Containment AC
In the following, we will prove equivalence between the nine-valued semantics and
the logic of analytic containment AC, which has been discussed and deﬁned in
Sect.3.1.3.

5.3 Angell’s Analytic Containment AC
115
We will construe the connective →from the axiomatization in Sect.3.1.3 as
a consequence relation so that A ⊢AC B will be interpreted as equivalent to the
theoremhood of A →B in AC.
5.3.1
Correia Semantics for Analytic Containment
Angell himself never published semantics for AC.3 The ﬁrst semantics for the system
was discovered by Correia in [6], which we rehearse immediately below:
Correia’s models are essentially collections of elements that we will call Correia
pairs. Let ‘⋐’ denote the ﬁnite subset relation (i.e., let X ⋐Y mean that X is a ﬁnite
subset of Y). Then:
Deﬁnition 5.3.1 A Correia pair is an ordered pair ⟨Γ, Δ⟩where Γ ⋐At, Δ ⋐At,
and Γ ∪Δ ̸= ∅.
Note that the deﬁnition demands that Γ and Δ be ﬁnite. Although this deﬁnition is
not assumed by Correia in [7], we will offer justiﬁcation for this assumption shortly.
From this constituent material, we deﬁne Correia models.
Deﬁnition 5.3.2 A Correia model v is a nonempty collection of Correia pairs.
The ﬁrst step towards generating interesting relations in a Correia model is the recur-
sive deﬁnition of a relation ⊨v:
Deﬁnition 5.3.3 The relation ⊨v ⊆℘(Lzdf) × ℘(Lzdf) is deﬁned recursively by
the following clauses:
• Γ ⊨v Δ iff ⟨Γ, Δ⟩∈v for Γ, Δ ⋐At
• Γ ⊨v Δ, ¬A iff Γ, A ⊨v Δ
• Γ, ¬A ⊨v Δ iff Γ ⊨v Δ, A
• Γ ⊨v Δ, A ∨B iff Γ ⊨v Δ, A, B
• Γ, A ∨B ⊨v Δ iff both Γ, A ⊨v Δ and Γ, B ⊨v Δ
• Γ ⊨v Δ, A ∧B iff both Γ ⊨v Δ, A and Γ ⊨v Δ, B
• Γ, A ∧B ⊨v Δ iff Γ, A, B ⊨v Δ
An instance of the relation Γ ⊩v Δ will be referred to as a ‘pseudosequent’ in the
sequel. Intuitively, a pseudosequent Γ ⊨v Δ is to be read as the assertion that with
respect to the model v, the disjunction whose disjuncts comprise each of the members
of Δ and the negated members of Γ is true. It follows that a formula A is considered
true in a model v if ∅⊨v A.4
3Angell asserts the existence of a semantics for ‘analytic equivalence’ by employing ‘analytic
truth tables’ in the abstract [2]. Possibly due to the severe constraints on space, however, Angell’s
deﬁnition of an analytic truth table is not entirely clear.
4Note that as the conditions for ⊩v provide no means of eliminating instances of formulae from a
pseudosequent, whenever a pseudosequent ∅⊩v A is derivable, it is derivable after a ﬁnite number
of manipulations of a ﬁnite initial pseudosequent Γ ⊩v Δ. Hence, it is always sufﬁcient to consider
ﬁnite Correia models, justifying our assumption of the ﬁnitude of Correia models v.

116
5
Faulty Belnap Computers and Subsystems of Efde
A formula A is true in a model v when the pseudosequent ∅⊩v A can be derived
from a pseudosequent Γ ⊩v Δ in which Γ, Δ ⊂At by a ﬁnite number of applications
of the above rules.
Correia notes that the logic corresponding to all models without restriction is much
weaker than AC, e.g., there exist countermodels to the AC theorem (p ∧(q ∨r)) →
(p ∨q). In order to properly characterize AC, we must restrict our attention to only
Correia models satisfying a particular property. In [6], Correia characterizes AC in
terms of models satisfying the following condition:
Deﬁnition 5.3.4 (Condition AC) For all sets of atoms Γ , Γ ′, Γ ′′, Δ, Δ′, and Δ′′ if
⟨Γ, Δ⟩∈v and ⟨Γ ′ ∪Γ ′′, Δ′ ∪Δ′′⟩∈v then ⟨Γ ∪Γ ′, Δ ∪Δ′⟩∈v
We will, however be interested also in an alternative (although equivalent) property of
vocabulary closure. As an intermediate step towards the introduction of this property,
we deﬁne a binary relation ≼between pairs of sets of atoms.
Deﬁnition 5.3.5 The relation ≼between two pairs of sets of formulae ⟨Γ, Δ⟩and
⟨Γ ′, Δ′⟩is deﬁned so that
⟨Γ, Δ⟩≼⟨Γ ′, Δ′⟩iff

Γ ⋐Γ ′
, and
Δ ⋐Δ′
(5.1)
Note that the relation ≼is deﬁned for arbitrary pairs of sets of formulae without
qualiﬁcation (rather than Correia pairs). Hence, the relation ⟨Γ, Δ⟩≼⟨Γ ′, Δ′⟩is
well-deﬁned even when Γ ′ and Δ′ are inﬁnite.
Consider also the following deﬁnition:
Deﬁnition 5.3.6 The negative and positive vocabularies of a Correia model v—Γ ⋆
v
and Δ⋆
v, respectively—are deﬁned so that:
• Γ ⋆
v = {p ∈At | ∃⟨Γ, Δ⟩∈v such that p ∈Γ }
• Δ⋆
v = {p ∈At | ∃⟨Γ, Δ⟩∈v such that p ∈Δ}
Now we are prepared to deﬁne the alternative property corresponding to the class of
Correia models in terms of which AC validity may be deﬁned.
Deﬁnition 5.3.7 The vocabulary closure of a Correia model v—symbolized v—is
the smallest Correia model v′ extending v such that:
• for all Correia pairs ⟨Γ, Δ⟩≼⟨Γ ⋆
v , Δ⋆
v⟩, if there exists a ⟨Γ ′, Δ′⟩∈v such that
⟨Γ ′, Δ′⟩≼⟨Γ, Δ⟩, then ⟨Γ, Δ⟩∈v′
I.e., the set {⟨Γ, Δ⟩| ∃⟨Γ ′, Δ′⟩∈v s.t. ⟨Γ ′, Δ′⟩≼⟨Γ, Δ⟩≼⟨Γ ⋆
v , Δ⋆
v⟩}.
We say a Correia model v is vocabulary closed if v = v.
The equivalence between vocabulary closed models and those satisfying Condition
AC is clear. Hence, Correia’s results in [6] entail that AC corresponds to the preser-
vation of truth in vocabulary closed models.
This provides us with the necessary apparatus to deﬁne AC validity:

5.3 Angell’s Analytic Containment AC
117
Deﬁnition 5.3.8 A ⊨AC B iff for every vocabulary closed Correia model v, if ∅⊩v
A then ∅⊩v B
5.3.2
Equivalence of NC and AC
We wish to show that the truth functional semantics captures Angell’s system AC. We
proceed by showing that all axioms of Angell’s system correspond to valid inferences
in NC and that the rules of Angell’s system preserve validity when applied to an NC
inference. Recall that the functions pr0 and pr1 are the operators projecting a pair onto
the ﬁrst and second coordinate, respectively and that the notation ‘ f [X]’ represents
the image of X under f .
Then, the ﬁrst move towards proving equivalence is proving that anything valid
inference in AC is a valid inference modulo the nine-valued semantics. We show this
by evaluating the rules and axioms of AC and demonstrating that they correspond to
valid inferences in NC.
Lemma 5.3.1 The axioms AC1–AC6b are valid in NC
Proof The validity of each of the axioms may be directly inferred by appeal to the
truth functions.
□
To establish the validity of other axioms of AC, we prove some intermediate lemmas:
Lemma 5.3.2 If A ⊨NC B and B ⊨NC A then At+(A) = At+(B) and At−(A) =
At−(B)
Proof Without loss of generality, suppose that A ⊨NC B and there is an atomic p ∈
At+(B) although p /∈At+(A). Then consider a valuation v such that v(A) ∈DNC
and v(B) ∈DNC. Next, construct a valuation v′ differing from v only in that it
assigns the ﬁrst coordinate of p the value u. Because v′ agrees with v on all atoms
appearing in A, the value of A remains unchanged, i.e., v′(A) ∈DNC. However, by
Lemma 5.2.2, that pr0(v′(p)) = u entails that v′(B) /∈DNC. Hence, A ⊭NC B.
□
Lemma 5.3.3 With respect to an NC valuation v, if u /∈pr0[v[At+(A)]] and u /∈
pr1[v[At−(A)]] then for any NC valuation v′ agreeing with v with respect to these
values, v(A) ∈DNC iff v′(A) ∈DNC
Proof Suppose that u /∈pr0[v[At+(A)]] and u /∈pr1[v[At−(A)]]. Then we may
prove the lemma by induction on complexity of AN F (i.e., the literal normal form of
A). In the case of literals p or ¬p, p ∈At+(A) or p ∈At−(A). The selection of v′
ensures that v and v′ agree on these sets, whence v(p) = v′(p) or v(¬p) = v′(¬p)
as the case requires.
As induction hypothesis, suppose that this property holds for all subformulae of
AN F. If AN F = B ∧C, then v(B ∧C) ∈DNC iff v(B) ∈DNC and v(C) ∈DNC.

118
5
Faulty Belnap Computers and Subsystems of Efde
This by hypothesis holds iff v′(B) ∈DNC and v′(C) ∈DNC, i.e., v′(A ∧B) ∈DNC.
Disjunction follows from an identical proof.
Hence, as v(A) ∈DNC iff v(AN F) ∈DNC, we conclude that v(A) ∈DNC iff
v′(A) ∈DNC.
□
Lemma 5.3.4 The inference rule AC7 is validity preserving
Proof By Lemma 5.3.2, whenever both A ⊨NC B and B ⊨NC A we may infer that
At+(A) = At+(B) and At−(A) = At−(B). But At+(A) = At−(¬A) and mutatis
mutandis for B, whence ¬A and ¬B share positive and negative atoms.
Now suppose for contradiction that ¬A ⊭NC ¬B. Then there is an NC valuation
v such that v(¬A) ∈DNC and v(¬B) /∈DNC. By Lemma 5.2.2, that v(¬A) ∈DNC
entails that u /∈pr0[v[At+(¬A)]] and u /∈pr1[v[At−(¬A)]]. That At+(¬A) =
At+(¬B) and At−(¬A) = At−(¬B) entails that this holds for ¬B as well.
Construct an NC valuation v′′ by the following scheme for all atoms p:
v′′(p) =
⎧
⎪⎪⎪⎨
⎪⎪⎪⎩
⟨t, t⟩
if v(p) = ⟨t, u⟩or v(p) = ⟨u, t⟩or v(p) = ⟨u, u⟩
⟨f, t⟩
if v(p) = ⟨f, u⟩
⟨t, f⟩
if v(p) = ⟨u, f⟩
v(p) otherwise
(5.2)
Then v and v′′ agree on the ﬁrst coordinates of the values assigned to At+(¬A) and
the second coordinates of values assigned to At−(¬A). Hence, by Lemma 5.3.3,
v′′(¬A) ∈DNC iff v(¬A) ∈DNC and v′′(¬B) ∈DNC iff v(¬B) ∈DNC. But v′′ is
a bilateral Efde valuation because the values assigned to all formulae are in V⋆
Efde,
whence v′′ witnesses that ¬A ⊭Efde ¬B.
However, we also note that as a subsystem of Efde, that B ⊨NC A entails that
B ⊨Efde A. In turn, B ⊨Efde A entails that ¬A ⊨Efde ¬B (cf. the axiomatization in
[5]), whence we infer that ¬A ⊨Efde ¬B. This contradicts our earlier conclusion that
¬A ⊭Efde ¬B.
□
Lemma 5.3.5 The inference rules AC8–AC9 are validity preserving
Proof That AC8 and AC9 preserve designated validity is trivial, AC8 by appeal to
the truth tables and AC9 by the deﬁnition of validity.
□
We are now equipped to prove correctness of AC with respect to NC.
Theorem 5.3.1 If A ⊨AC B then A ⊨NC B
Proof Suppose that A ⊨AC B. Then, by completeness of the Correia semantics with
respect to the axioms, there exists a proof of A →B from the axioms of AC. But all
axioms are valid inferences of NC and the inferences are validity preserving. Hence,
A ⊨NC B.
□
Now, to prove equivalence of AC and NC, we must prove the converse of Theorem
5.3.1, i.e., we must show that NC is a subsystem of AC. To do so, we will need some
further notation and a lemma concerning Correia models.

5.3 Angell’s Analytic Containment AC
119
Deﬁnition 5.3.9 The operation  is deﬁned so that for two Correia pairs ⟨Γ, Δ⟩and
⟨Γ ′, Δ′⟩, ⟨Γ, Δ⟩⟨Γ ′, Δ′⟩= ⟨Γ ∪Γ ′, Δ ∪Δ′⟩
Note that the relation ≼deﬁned in Deﬁnition 5.3.5 admits a characterization in terms
of , i.e., ⟨Γ, Δ⟩≼⟨Γ ′, Δ′⟩holds if and only if ⟨Γ, Δ⟩⟨Γ ′, Δ′⟩= ⟨Γ ′, Δ′⟩.
We also deﬁne two further properties in terms of :
Deﬁnition 5.3.10 With respect to a Correia model v, a pair ⟨Γ, Δ⟩∈v is a -
minimal element of v if for all ⟨Γ ′, Δ′⟩∈v, if ⟨Γ ′, Δ′⟩≼⟨Γ, Δ⟩then ⟨Γ ′, Δ′⟩=
⟨Γ, Δ⟩.
Deﬁnition 5.3.11 The set of generators of a Correia model v—symbolized G(v)—is
the set of -minimal elements of v, i.e., the set:
{⟨Γ, Δ⟩∈v | ∀⟨Γ ′, Δ′⟩∈v if ⟨Γ ′, Δ′⟩≼⟨Γ, Δ⟩then ⟨Γ ′, Δ′⟩= ⟨Γ, Δ⟩}.
With these deﬁnitions in hand, we can make the following observation:
Lemma 5.3.6 For any Correia model v and every Correia pair ⟨Γ, Δ⟩∈v, there
exists a Correia pair ⟨Γ ′, Δ′⟩∈G(v) such that ⟨Γ ′, Δ′⟩≼⟨Γ, Δ⟩
Proof Consider an arbitrary ⟨Γ, Δ⟩∈v; we prove the existence of an appropriate
pair ⟨Γ ′, Δ′⟩∈G(v) by arguing by cases. Either there exists a distinct ⟨Γ ′, Δ′⟩∈v
such that ⟨Γ ′, Δ′⟩≼⟨Γ, Δ⟩or not.
If there is such an element of v, then because Γ, Δ are ﬁnite, the chain
... ≼⟨Γ ′′, Δ′′⟩≼... ≼⟨Γ, Δ⟩
must terminate at some initial pair ⟨Γ ′′′, Δ′′′⟩∈v. But if ⟨Γ ′′′, Δ′′′⟩is the terminal
element of the chain, then ⟨Γ ′′′, Δ′′′⟩∈G(v) and may thus serve as the required
Correia pair in v.
If there is no such element of v, then ⟨Γ, Δ⟩∈G(v) and by reﬂexivity of ≼,
⟨Γ, Δ⟩is itself the required Correia pair.
□
When Γ ⊆Lzdf, then let Γ ¬ represent the set {¬A | A ∈Γ }. Now, in [6],
Correia maintains an explicit ‘analogy’ with sequents (or consecutions) in the style
of Gentzen, an analogy made salient by the likeness that a Correia pair ⟨Γ, Δ⟩bears to
a sequent Γ ⇒Δ. This analogy permits us to apply a proof-theoretic observation due
to William Tait (as reported by Wolfram Pohlers in [21]) that whenever the antecedent
and succedent of a sequent contain only atomic formulae, one can encode all of the
information in that sequent by means of a single set of formulae, i.e., whenever
Γ ∪Δ ⊆At, one can recover all of the information in a sequent Γ ⇒Δ from the
set Γ ¬ ∪Δ.
Deﬁnition 5.3.12 For a Correia pair ⟨Γ, Δ⟩, the literal projection of ⟨Γ, Δ⟩—
symbolized by ⟨Γ, Δ⟩τ—is the set Γ ¬ ∪Δ. When X is a set of Correia pairs, Xτ
will be deﬁned as the set of literal projections of its elements.

120
5
Faulty Belnap Computers and Subsystems of Efde
For example, where G(v) is the set of generators of a Correia model v, G(v)τ is the
collection of literal projections of elements of G(v).
Deﬁnition 5.3.13 Where G(v) is the set of generators of a Correia model v,
(G(v)τ) is the set of all choice functions on G(v)τ, that is:

(G(v)τ) = {C : G(v)τ →∪G(v)τ | C(⟨Γ, Δ⟩τ) ∈⟨Γ, Δ⟩τ}
Recall that pr0 and pr1 are the projection operators projecting pairs onto their ﬁrst
and second coordinates, respectively. Then for each choice function C ∈(G(v)τ),
we can associate a many-valued NC valuation vC:
Deﬁnition 5.3.14 Suppose that v is a vocabulary closed Correia model and consider
a choice function C ∈(G(v)τ). Then we deﬁne the NC valuation vC so that:
pr0(vC(p)) =
⎧
⎪⎨
⎪⎩
t
if ∃⟨Γ, Δ⟩τ ∈G(v)τ such that C(⟨Γ, Δ⟩τ ) = p
f
if ∀⟨Γ, Δ⟩τ ∈G(v)τ , C(⟨Γ, Δ⟩τ ) ̸= p but p ∈Δ⋆
v
u
if p /∈Δ⋆
v
pr1(vC(p)) =
⎧
⎪⎨
⎪⎩
t
if ∃⟨Γ, Δ⟩τ ∈G(v)τ such that C(⟨Γ, Δ⟩τ ) = ¬p
f
if ∀⟨Γ, Δ⟩τ ∈G(v)τ , C(⟨Γ, Δ⟩τ ) ̸= ¬p but p ∈Γ ⋆
v
u
if p /∈Γ ⋆
v
In the sequel, for a Correia model v, F(v) will represent the set containing the NC
valuation vC for every choice function C ∈(G(v)τ).
Now we describe a semantic relation on collections F(v) of NC valuations by the
following deﬁnition:
Deﬁnition 5.3.15 Γ ⊩F(v) Δ is deﬁned so that for arbitrary Γ, Δ ⋐Lzdf, Γ ⊩F(v)
Δ if for every AC valuation vC ∈F(v), the following holds:
vC([
	
Γ ¬] ∨[
	
Δ]) ∈DAC.
N.b. that inasmuch as Γ and Δ are by deﬁnition ﬁnite and Γ ∪Δ is nonempty, the
formula [
 Γ ¬] ∨[
 Δ] is a well deﬁned formula of Lzdf.
Our strategy will be to provide a correspondence between the manipulations of
pseudosequents described in Deﬁnition 5.3.3 and the features of the relation ⊩F(v).
Such a correspondence will permit us to ‘track’ the derivation of a pseudosequent by
the truth-functional semantics. As each of these manipulations must be mimicked by
therelation⊩F(v),thereareanumberofintermediatelemmasthatmustbeestablished.
Lemma 5.3.7 Γ ⊩F(v) Δ, ¬A iff Γ, A ⊩F(v) Δ
Proof First, we note that the commutativity of disjunction in NC entails that
[
 Γ ¬]∨[
 Δ∪{¬A}] is truth functionally equivalent to [
[Γ ∪{A}]¬]∨[
 Δ].
Now, Γ ⊩F(v) Δ, ¬A is deﬁned so that for all C ∈(G(v)τ), vC([
 Γ ¬] ∨

5.3 Angell’s Analytic Containment AC
121
[
 Δ ∪{¬A}]) ∈DNC. By the truth functional equivalence of the two for-
mulae, this statement is equivalent to the claim that for all C ∈(G(v)τ),
vC([
[Γ ∪{A}]¬] ∨[
 Δ]) ∈DNC, which is just to say that Γ, A ⊩F(v) Δ.
□
Lemma 5.3.8 Γ, ¬A ⊩F(v) Δ iff Γ ⊩F(v) Δ, A
Proof This case follows from an argument analogous to that made for Lemma 5.3.7.
□
Lemma 5.3.9 Γ ⊩F(v) Δ, A ∨B iff Γ ⊩F(v) Δ, A, B
Proof This is nearly trivial; the formula 
(Δ ∪{A, B}) differs from the formula
(
 Δ)∨(A∨B)onlybyexportingasingledisjunct.Thecommutativityofdisjunction
in NC ensures the equivalence of the two formulae.
□
Lemma 5.3.10 Γ, A ∧B ⊩F(v) Δ iff Γ, A, B ⊩F(v) Δ
Proof This follows from an argument analogous to that made for Lemma 5.3.9. □
Lemma 5.3.11 Γ ⊩F(v) Δ, A ∧B iff Γ ⊩F(v) Δ, A and Γ ⊪v Δ, B
Proof For left-to-right, suppose that for all C ∈(G(v)τ), vC([
 Γ ¬] ∨[[
 Δ] ∨
(A∧B)] ∈DNC; theninanysuchvC, it follows that bothvC([
 Γ ¬]∨[[
 Δ]∨A]) ∈
DNC and vC([
 Γ ¬] ∨[[
 Δ] ∨B]) ∈DNC. This is just to say that Γ ⊩F(v) Δ, A
and Γ ⊩F(v) Δ, B.
For right-to-left, suppose for contradiction that both Γ ⊩F(v) Δ, A and Γ ⊩F(v)
Δ, B hold although there exists an C′ ∈(G(v)τ) such that vC′([
 Γ ¬]∨[[
 Δ]∨
(A ∧B)] /∈DNC. Hence, vC′([
 Γ ¬] ∨[
 Δ]) /∈DNC and vC′(A ∧B) /∈DNC.
By hypothesis, vC′([
 Γ ¬] ∨[[
 Δ] ∨A]) ∈DNC and vC′([
 Γ ¬] ∨[[
 Δ] ∨
B]) ∈DNC, entailing that vC′(A) ∈DNC and vC′(B) ∈DNC, which entails that
vC′(A ∧B) ∈DNC, contradicting our earlier assumption that vC′(A ∧B) /∈DNC. □
Lemma 5.3.12 Γ, A ∨B ⊩F(v) Δ iff Γ, A ⊩F(v) Δ and Γ, B ⊩F(v) Δ
Proof The structure of this follows the proof of Lemma 5.3.11 identically.
□
We have nearly sufﬁcient material to demonstrate that for every valid inference
A ⊨AC B, the inference A ⊨NC B is also valid. There remain a few further lemmas
to establish.
Lemma 5.3.13 For all Γ, Δ ⋐Lzdf and vocabulary closed Correia models v,
Γ ⊩F(v) Δi f f Γ ⊩v Δ.
Proof To begin, we ﬁrst observe that for all sets Γ, Δ ⊂At, the equivalence between
Γ ⊩F(v) Δ and Γ ⊩v Δ holds. Consider the assertion that Γ ⊩F(v) Δ, i.e., that for
all NC valuations vC ∈F(v), vC([
 Γ ¬] ∨[
 Δ]) ∈DNC. This assertion is itself
equivalent to the claim that for every selection function C ∈(G(v)τ) there exists

122
5
Faulty Belnap Computers and Subsystems of Efde
some Correia pair ⟨Γ ′, Δ′⟩∈G(v) such that C(⟨Γ ′, Δ′⟩τ) ∈Γ ¬ ∪Δ. This property
holds if and only if there exist Correia pairs ⟨Γ0, Δ0⟩, ..., ⟨Γn−1, Δn−1⟩∈G(v) such
that ∪i<nΓi = Γ and ∪i<nΔi = Δ. By vocabulary closure of v, this statement is
equivalent to the condition that 
i<n⟨Γi, Δi⟩∈v. But this condition is precisely to
say that ⟨Γ, Δ⟩∈v, a statement that we may recognize as the deﬁnition of Γ ⊩v Δ.
Before beginning the induction, it is furthermore important to observe that for
arbitrary Γ and Δ, whenever Γ ⊩v Δ there exists a ﬁnite sequence σ of pseudose-
quents such that the initial element of σ is Γ0 ⊩v Δ0 where Γ0, Δ0 ⊂At and
the terminal element of σ is the pseudosequent Γ ⊩v Δ. Moreover, for any n less
than the length of σ, the nth pseudosequent appearing in σ follows from the n −1th
pseudosequent by the application of one of the manipulations described in Deﬁnition
5.3.3.
With this observation, we may proceed to prove the lemma by induction on the
length of such sequences. Because in any initial pseudosequent ⟨Γ0, Δ0⟩, Γ0 ∪Δ0 ⊆
At, the basis step for the induction—that is, the case in which only one pseudosequent
appears in the sequence σ—is established by the previously observed equivalence
of Γ0 ⊩F(v) Δ0 and Γ0 ⊩v Δ0.
Now, let Γn ⊩v Δn be the nth pseudosequent of a sequence σ and suppose as
induction hypothesis that the equivalence holds for pseudosequents appearing earlier
in σ. In particular, the induction hypothesis entails that for the n−1th pseudosequent,
the following holds:
Γn−1 ⊩v Δn−1iffΓn−1 ⊩F(v) Δn−1
Now, the nth pseudosequent Γn ⊩v Δn is derived from Γn−1 ⊩v Δn−1 by the applica-
tion of one of Correia’s manipulation rules. But Lemmas 5.3.7–5.3.12 jointly ensure
that the application any one of these rules is mirrored by the relation ⊩F(v). Hence:
Γn ⊩v Δn iff Γn−1 ⊩v Δn−1 iff Γn−1 ⊩F(v) Δn−1 iff Γn ⊩F(v) Δn
This establishes the equivalence between Γn ⊩v Δn and Γn ⊩F(v) Δn. Because any
derivable pseudosequent appears as the mth pseudosequent in a ﬁnite sequence σ,
this equivalence holds for arbitrary derivable pseudosequents Γ ⊩v Δ.
□
Now we are prepared to prove the theorem.
Theorem 5.3.2 If A ⊨NC B then A ⊨AC B
Proof We prove the contrapositive. Suppose that A ⊭AC B. Then there exists a
vocabulary closed Correia model v such that ∅⊩v A and ∅⊮v B. By Lemma
5.3.13, this assertion entails that ∅⊩F(v) A, which in turn implies that for all choice
functions C ∈(G(v)τ), vC(A) ∈DNC. But identical reasoning yields that it is not
the case that ∅⊩F(v) B, entailing the existence of some valuation vC′ ∈F(v) such
that vC′(B) /∈DNC. As vC′(A) ∈DNC, vC′ witnesses that A ⊭NC B.
□
Corollary 5.3.1 AC = NC

5.3 Angell’s Analytic Containment AC
123
Proof By Theorem 5.3.1, AC is a subsystem of NC; Theorem 5.3.2 proves the
converse. Hence, AC = NC.
□
With this reassurance, we are free to abandon talk of NC and may use the nomencla-
ture AC to describe the nine-valued semantics. For example, we will use the symbol
⊨AC in the sequel to denote consequence with respect to the semantics of Deﬁnition
5.2.3.
In addition to admitting a Belnap-style interpretation of AC, the nine-valued
semantics makes a further type of interpretation available. We have noted that AC
bears an identical relationship to Bochvar’s 0 to that which Efde bears to classical
logic. In [24], Peter Woodruff remarks that a ‘popular explication’ of Halldén-type
nonsense logics, (e.g., Bochvar’s 0) lies in interpreting the truth functions as partial
functions, as suggested by Kleene in [18] when describing the matrices for 0. If we
understand the semantical functions of AC bilaterally, that is, as a pair of 0 truth
functions independently calculating values corresponding to truth and falsity, the
semantics of Deﬁnition 5.2.3 opens AC to a similar partial function interpretation.
5.4
Steps Forward
The simplicity of the above semantics for AC does more than merely to provide a
novel way to interpret the system. It also has a formal upshot in permitting us to
address some formal questions in a simple fashion. For one, we can give a particular
type of ‘double-barrelled analysis’ of AC (and S⋆
fde), the availability of which is
not apparent in the Correia semantics. Moreover, the nine-valued semantics suggests
a natural adaptation of Fine’s semantics for PAI of Deﬁnition 2.4.1 in a way that
provides an account of higher-degree extensions of AC (as well as such extensions
of S⋆
fde).
5.4.1
The Gödel-Fine Analysis of AC
Recall the deﬁnition of a Gödel-Fine analysis of a deductive system L in Sect.4.1.2.
Virtually every containment logic, e.g., Harry Deutsch’s S (of [10]), can receive such
a characterization. In addition to the analyses described in Sect.4.1.2, the many-
valued semantics for AC enable us to provide the Gödel-Fine analysis of AC.
Observation 5.4.1 A ⊨AC B iff
⎧
⎪⎨
⎪⎩
A ⊨Efde B,
At+(B) ⊆At+(A), and
At−(B) ⊆At−(A)
Proof The left-to-right direction is proven in [3]. For right-to-left, then, suppose that
A ⊨Efde B and both At+(B) ⊆At+(A) and At−(B) ⊆At−(A) hold. Suppose for
contradiction that A ⊭AC B.

124
5
Faulty Belnap Computers and Subsystems of Efde
Let v be an AC valuation witnessing this fact. Then from v(A) ∈DAC if follows
from Lemma 5.2.2 that both u /∈pr0[v[At+(A)]] and u /∈pr1[v[At−(A)]]. Moreover,
that At+(B) ⊆At+(A) and At−(B) ⊆At−(A) entails that the same can be said of
B. By employing the construction in Lemma 5.3.4, we can build an Efde valuation
v′′ such that v′′(A) ∈D⋆
Efde and v′′(B) /∈D⋆
Efde, i.e., A ⊭Efde B.
□
Observation 5.4.1 has been independently established by Fine in [15], although its
statement is expressed in signiﬁcantly different terms.
These analyses allow us to make a further observation concerning S⋆
fde’s relation-
ship with the ﬁeld of containment logics. Just as Efde is the ﬁrst-degree fragment of
E, Parry’s PAI has a distinct ﬁrst-degree fragment. As Sylvan suggested in [22], the
ﬁrst-degree fragment PAIfde appeared in Aleksandr Zinov’ev’s [25] as the system
S1, the semantics of which were given as a tacit Gödel-Fine analysis:
A ⊨S1 B iff

A ⊨CL B, and
At(B) ⊆At(A)
where ⊨CL denotes classical entailment. Clearly, S⋆
fde counts Angell’s AC as a sub-
system, but the analysis of Observation 4.1.1 allows us to prove the equivalence
between the many-valued semantics for S⋆
fde in Deﬁnition 4.1.5 and the two proof-
theoretic characterizations due to Angell (in [1]) and Daniels (in [9]).
As we noted in Sect.4.1.2, the ﬁrst appearance of a deductive system equivalent
to S⋆
fde is found in Angell’s abstract [1], in which Angell provides an axiomatization
of the intersection of Efde and PAIfde. Although it has not been mentioned in the
literature—much less proven—consequence in S⋆
fde in fact corresponds to conse-
quence in the intersection Efde ∩PAIfde. By invoking the equivalence of PAIfde and
S1, Observation 4.1.1 immediately implies the following corollary:
Corollary 5.4.1 S⋆
fde = Efde ∩PAIfde
In [1], Angell also remarks that the logic Efde ∩PAIfde is axiomatized by adding
the axiom A ⊢A ∨¬A to AC. This gives us the following proof-theoretic corollary:
Corollary 5.4.2 S⋆
fde = AC + A ⊢A ∨¬A
We have also observed that S⋆
fde is syntactically introduced by Daniels in [9], in
which it is asserted that S⋆
fde is the ﬁrst-degree fragment of the logic corresponding
to Daniels’ ‘story semantics’ of [8]. Daniels provides a tacit Gödel-Fine analysis in
his syntactic deﬁnition of S⋆
fde according to which validity of an inference A ⊢S⋆
fde B
is deﬁned as the validity of the inference A ⊢Efde B in conjunction with the condition
that At(B) ⊆At(A). This gives us a further corollary:
Corollary 5.4.3 The system described by Daniels in [9] corresponds to the ﬁve-
valued semantics for S⋆
fde
Theseanalyseswillbereﬂectedinthesemanticsaswemovetohigherdegreesystems.

5.4 Steps Forward
125
5.4.2
Extending to Higher Degree Formulae
One of Correia’s suggestions in [6] as an interesting topic future research on AC was
to provide an intuitive means of extending the ﬁrst-degree system to account for the
language with formulae containing nested conditionals. By the present semantics for
AC, we are provided with a very natural means of deﬁning such an extension. In
Deﬁnition 2.2.4, we observed that subsystems of PAI could be described by relaxing
certain conditions implicit in Fine’s semantics for Parry’s PAI of [14]. Just as relaxing
the requirement of consistency for PAI models yielded semantics for Deutsch’s S
introduce two higher degree systems, by further weakening PAI models, we can
deﬁne semantics for systems PAC (for ‘Parry-like’ AC) and PFDEϕ (for ‘Parry-
like’ FDEϕ).5
We will not offer axiomatizations for the systems introduced in this section,
although the proximity to Fine’s semantics suggests that his canonical model con-
struction can be easily adapted for soundness and completeness proofs. Our goal is
merely to outline a very reasonable way of treating such systems that is harmonious
with the prevailing treatments of other containment logics.
The logic PAI is deﬁned over the language L+ deﬁned in Deﬁnition 1.1.1 so that
formulae may contained nested instances of the intensional conditional. Working
in a richer language compels us to extend the deﬁnition of functions At+(A) and
At−(A) from Deﬁnition 5.2.5 to accommodate higher degree formulae. We enrich
the deﬁnition of these functions by adding the clauses:
• At+(A →B) = At+(A) ∪At+(B)
• At−(A →B) = At−(A) ∪At−(B)
To produce a semantics for logics the ﬁrst-degrees of which correspond to AC or
S⋆
fde, we continue the trend from Deﬁnition 2.4.1 to Deﬁnition 2.2.4 and deﬁne an
even weaker version of Fine’s semantics of [14]. We will call the structure central to
this section a PAC model.
Deﬁnition 5.4.1 A PAC model is a 5-tuple ⟨W, R, C, Γ, V ⟩where:
• W is a nonempty set of points
• R ⊆W × W is reﬂexive and transitive
For each w ∈W there exists a semilattice Cw ∈C where Cw = ⟨Cw, ◦w⟩, so that:
• Cw is a nonempty set
• ◦w is an associative, commutative, and idempotent function on Cw
Because Cw is a semilattice, each induces a relation ≤w so that for all a, b ∈Cw,
a ≤w b if a ◦w b = b. Finally,
• for all w ∈W, the set Γ contains a pair of functions γ +
w and γ −
w from At to Cw
5Constancymight suggest that PS⋆
fde wouldbe a more appropriate name forthe Parry-like extension
of S⋆
fde. But the system has been introduced in print as PFDEϕ and we will retain that nomenclature
now.

126
5
Faulty Belnap Computers and Subsystems of Efde
• V includes two functions V + and V −from At to ℘(W)
For each point w, from functions γ +
w and γ −
w we construct a function γw : L+ →Cw
so that for an arbitrary formula A ∈L+:
• γw(A) = γ +
w (p0) ◦w ... ◦w γ +
w (pm−1) ◦w γ −
w (q0) ◦w ... ◦w γ −
w (qn−1)
where {p0, ..., pm−1} = At+(A) and {q0, ..., qn−1} = At−(A).
The two valuation functions V + and V −in the presentation of Fine’s semantics found
in Deﬁnition 2.4.1 were included in anticipation of the requirement in Deﬁnition 2.2.4
that truth and falsity are treated independently. In splitting Fine’s γw into γ +
w and
γ −
w , we make an analogous revision in which positive negative concepts are treated
independently. It is worth noting that this distinction reﬂects Fine’s bilateral account
of subject-matter discussed in Sect.3.1.2, in which a proposition enjoys distinct
positive and negative subject-matters.
We give truth and falsity conditions, represented by ⊩+ and ⊩−, respectively.
Deﬁnition 5.4.2 The positive forcing relation ⊩+ is deﬁned for all formulae so that:
• w ⊩+ A if w ∈V +(A) for A ∈At
• w ⊩+ ¬A if w ⊩−A
• w ⊩+ A ∧B if w ⊩+ A and w ⊩+ B
• w ⊩+ A ∨B if w ⊩+ A or w ⊩+ B
• w ⊩+ A →B if ∀w′ ∈W s.t. wRw′,

w′ ⊩+ A implies w′ ⊩+ B and
γw′(B) ≤w′ γw′(A)
The negative relation is deﬁned so that:
• w ⊩−A if w ∈V −(A)
• w ⊩−¬A if w ⊩+ A
• w ⊩−A ∧B if w ⊩−A and w ⊩−B
• w ⊩−A ∨B if w ⊩−A and w ⊩−B
• w ⊩−A →B if ∃w′ ∈W s.t. wRw′ and

w′ ⊩+ A and w′ ⊩−B or
γw′(B) ≰w′ γw′(A)
We call the system determined by these semantics PAC:
Deﬁnition 5.4.3 The system PAC is deﬁned so that Γ ⊨PAC A if for every point w
in every PAC model, whenever w ⊩+ B for all B ∈Γ , also w ⊩+ A.
We are able to show that PAC extends AC in the desired fashion.
Observation 5.4.2 AC is the ﬁrst-degree fragment of PAC
Proof To show that A ⊨AC B entails that ⊨PAC A →B, we prove the contrapositive.
Suppose for zeroth degree formulae A, B that ⊭PAC A →B. Then there exists a
point w in a model such that w ⊮+ A →B. Hence, there exists a w′ such that wRw′
at which either w′ ⊩+ A and w′ ⊮+ B or γw′(A) ≰w′ γw′(B).

5.4 Steps Forward
127
In the former case, we can build an Efde valuation showing that A ⊭Efde B. Let
u be a bilateral Efde valuation deﬁned so that for all p ∈At,
u(p) =
⎧
⎪⎪⎪⎨
⎪⎪⎪⎩
⟨t, t⟩if w′ ∈V +(p) and w′ ∈V −(p)
⟨t, f⟩if w′ ∈V +(p) and w′ /∈V −(p)
⟨f, t⟩if w′ /∈V +(p) and w′ ∈V −(p)
⟨f, f⟩if w′ /∈V +(p) and w′ /∈V −(p)
That u[At] ⊆V⋆
Efde entails that the above is a bilateral Efde valuation. A simple
inductiononcomplexityofformulaeshowsthatforzerothdegreeformulaeC,u(C) ∈
D⋆
Efde if and only if w′ ⊩+ C. As A and B have no instances of the intensional
implication connective, this entails that A ⊭Efde B. But as AC is a subsystem of
Efde, this entails that A ⊭AC B.
In the latter case, γw′(A) ≰w′ γw′(B). This may occur only if there is an atom p
such that either p ∈At+(B) and p /∈At+(A) or p ∈At−(B) and p /∈At−(A).
Suppose without loss of generality that the former holds and construct an Efde val-
uation u deﬁned as above with the sole exception that pr0(u(p)) = u. The valuation
u will thus map A to DAC; however, by Lemma 5.2.2, the conjunction of the fact that
p appears positively in B and the fact that pr0(u(p)) = u implies that u(B) /∈DAC,
i.e., A ⊭AC B.
In both cases we conclude A ⊭AC B, hence, that ⊭PAC A →B entails that
A ⊭AC B.
To prove that ⊨PAC A →B entails that A ⊨AC B for A, B ∈Lzdf, suppose
that A ⊭AC B and let u be an AC valuation that witnesses this fact. We construct
a PAC model witnessing the failure of A →B in PAC. For an atomic formula q,
let pq represent the pair ⟨⌜q⌝, 0⟩and lt mq represent the pair ⟨⌜q⌝, 1⟩, so that pq
and mq are pairs comprising the syntactic object itself and with a natural number
standing in for its polarity. Now, let W be a singleton {w} and let Cw = ℘({pq | q ∈
At+(A ∧B)} ∪{mq | q ∈At−(A ∧B)}) with ◦w interpreted as set theoretic union.
Construct valuations V + and V −so that for all q ∈At,
• w ∈V +(A) iff pr0(u(q)) = t
• w ∈V −(A) iff pr1(u(q)) = t
and construct functions γ +
w and γ −
w so that for all q ∈At,
• γ +
w (q) =

{pq} if q ∈At+(A ∧B)
∅
otherwise
• γ −
w (C) =

{mq} if q ∈At−(A ∧B)
∅
otherwise
By the Gödel-Fine analysis of AC in Observation 5.4.1, that A ⊭AC B entails that
one of three conditions holds: Either A ⊭Efde B, At+(B) ̸⊂At+(A), or At−(B) ̸⊂
At−(A). We prove the observation by arguing by cases.

128
5
Faulty Belnap Computers and Subsystems of Efde
In the ﬁrst case, the valuation u serves as a bilateral Efde valuation witnessing
the failure of the inference from A to B. Now, because A and B have no instances of
the implication connective, that u(A) ∈DAC and u(B) /∈DAC entails that w ⊩+ A
and w ⊮+ B. As wRw, this entails that w ⊮+ A →B, whence we infer that
⊭PAC A →B.
The latter two cases are symmetrical. Hence, we examine the ﬁrst, in which
At+(B) ̸⊂At+(A), without loss of generality. If this is the case, then there exists
some q ∈At+(B) not appearing positively in A. But this means that pq ∈γw(B)
but pq /∈γw(A). As ◦w is interpreted in our example as set-theoretical union, this
entails that γw(B) ̸⋐w γw(A), entailing that w ⊮+ A →B.
From the assumption that A ⊭AC B we thus conclude that ⊭PAC A →B. By
contraposition, that A →B is a PAC theorem entails that A ⊨AC B is a valid
inference.
□
A simple restriction to the semantics yields the analogous extension for S⋆
fde.
Deﬁnition 5.4.4 The system PFDEϕ is deﬁned so that Γ ⊨PFDEϕ A if for all PAC
models enjoying the property that
γ +
w (p) = γ −
w (p) f orallp ∈At
if w ⊩+ B for all B ∈Γ , also w ⊩+ A.
We may also conﬁrm that PFDEϕ extends S⋆
fde in the desired fashion.
Observation 5.4.3 S⋆
fde is the ﬁrst-degree fragment of PFDEϕ.
Proof The proof is virtually identical to that of Observation 5.4.2.
□
We may observe that the deﬁnition of a PAC model gives a great deal of ﬂexibil-
ity; there are three degrees of freedom by which we may restrict models to yield
stronger systems, i.e., by adding restrictions to any of Γ, V , and R, we can generate
corresponding extensions of PAC.
For example, considering validity in the restricted class of PAC in which for all
p ∈At and w ∈W, both γ +
w (p) = γ −
w (p) and V +(p) ∪V −(p) = W yields Harry
Deutsch’s paraconsistent containment logic S from [10]. The various deﬁnitions from
Sect.4.1.1 entail that adding the further restriction to this class models so that we
consider only models in which R linearly orders W will yield Deutsch’s S′ introduced
in [11], while adding the additional restriction that W is a singleton will correspond
to a ‘demodalized’ extension S′′. Of course, adding the restriction that for all p ∈At,
V +(p)∩V −(p) = ∅to the restrictions that characterized S will yield Fine’s original
semantics for PAI in Deﬁnition 2.4.1. Finally, restricting the class of PAI models
to those in which W is a singleton yields Dunn’s demodalized containment logic
DAI, introduced in [12] and rediscovered by Richard Epstein with different (set-
assignment) semantics as ‘D’ in [13]. Figure5.1 portrays the relationship between
various intensional containment logics, arranged by which of γ , V , or R is restricted.

5.4 Steps Forward
129
Fig. 5.1 Systems intermediate between PAC and DAI
Moreover, it is also clear that one could also deﬁne ‘demodalized’ versions of
PAC and PFDEϕ. Examining this structure in more detail and providing an axiomatic
account of these relationships is an interesting task, although a task left for future
study.
5.5
Conclusion
The present work goes some way towards providing S⋆
fde and AC with a robust and
useful interpretation, as well as addressing some formal questions. We conclude with
some suggestions for future research.
It would be interesting to ﬁnd ways to extend the present approach to some of the
ﬁrst-degree logics near AC. For example, the only authentically semantical presen-
tation of S1—presented in [17], in which Kielkopf proves that S1 is characterized
by the matrices Parry uses in [20] to prove consistency of AI—is rather unintuitive.
In addition to examining Efde ∩S1—which we saw to be S⋆
fde—Angell’s [1] also
gives an axiomatic account of the system Efde ∪S1. What semantics exist for this
system and how could they be interpreted?
The intensional containment logics intermediate between PAC and DAI are left
largely unexamined and questions remain unanswered. What relationship exists
between restricting γ , v, and R? What are the axiomatizations of these systems?
Is there a way to provide a more elegant axiomatization of S and S′ than was offered
by Deutsch? I suspect that the structure of these intermediate systems is a rich one,
worthy of exploration.
A further topic worthy of investigating is examining faulty networks of Belnap
computers. In [23], Yaroslav Shramko and Heinrich Wansing ask how to extend

130
5
Faulty Belnap Computers and Subsystems of Efde
the Belnapian picture to a network of such systems. In particular, Shramko and
Wansing discover that the sixteen-valued logic of such a network determines the same
consequence relation as does the four-valued semantics for Efde; furthermore, this
result extends to networks of such networks, and networks of networks of networks,
ad inﬁnitum. As a deductive system, Efde is thus stable in a strong sense. Exploring
suitable generalizations of the faulty Belnap computer to faulty Shramko-Wansing
networks and asking whether S⋆
fde and AC are stable in the same sense as Efde are
very intriguing topics, which are examined to some degree in the following chapter.
References
1. Angell, R.B.: Three systems of ﬁrst degree entailment. J. Symb. Log. 42(1), 147 (1977)
2. Angell, R.B.: Analytic truth-tables. J. Symb. Log. 46(3), 677 (1981)
3. Angell, R.B.: Deducibility, entailment and analytic containment. In: Norman, J., Sylvan, R.
(eds.) Directions in Relevant Logic, Reason and Argument, pp. 119–143. Kluwer Academic
Publishers, Boston, MA (1989)
4. Belnap Jr., N.D.: How a computer should think. In: Ryle, G. (ed.) Contemporary Aspects of
Philosophy, pp. 30–56. Oriel Press, Stockﬁeld (1977)
5. Belnap Jr., N.D.: A useful four-valued logic. In: Dunn, J.M., Epstein, G. (eds.) Modern Uses
of Multiple-valued Logic, pp. 8–37. Reidel, Dordrecht (1977)
6. Correia, F.: Semantics for analytic containment. Stud. Log. 77(1), 87–104 (2004)
7. Correia, F.: Grounding and truth functions. Log. et Anal. 53(211), 251–279 (2010)
8. Daniels, C.: A story semantics for implication. Notre Dame J. Form. Log. 27(2), 221–246
(1986)
9. Daniels, C.: A note on negation. Erkenntnis 32(3), 423–429 (1990)
10. Deutsch, H.: The completeness of S. Stud. Log. 38(2), 137–147 (1979)
11. Deutsch, H.: Paraconsistent analytic implication. J. Philos. Log. 13(1), 1–11 (1984)
12. Dunn, J.M.: A modiﬁcation of Parry’s analytic implication. Notre Dame J. Form. Log. 13(2),
195–205 (1972)
13. Epstein, R.L.: Relatedness and dependence in propositional logics. J. Symb. Log. 46(1), 202–
203 (1981)
14. Fine, K.: Analytic implication. Notre Dame J. Form. Log. 27(2), 169–179 (1986)
15. Fine, K.: Angellic content. J. Philos. Log. 45(2), 199–226 (2016)
16. Kapsner, A.: Logics and Falsiﬁcations. Springer, Cham (2014)
17. Kielkopf, C.F.: Formal Sentential Entailment. University Press of America, Washington, D.C.
(1977)
18. Kleene, S.C.: Introduction to Metamathematics. North-Holland Publishing Company, Amster-
dam (1952)
19. McCarthy, J.: A basis for a mathematical theory of computation. In: Braffort, P., Hirschberg,
D. (eds.) Computer Programming and Formal Systems, pp. 33–70. North-Holland Publishing
Company, Amsterdam (1963)
20. Parry, W.T.: Ein Axiomensystem für eine neue Art von Implikation (analytische Implikation).
Ergeb. eines Math. Kolloqu. 4, 5–6 (1933)
21. Pohlers, W.: Proof Theory. Springer, Berlin (2008)
22. Routley, R.: Relevant Logics and their Rivals, vol. 1. Ridgeview Publishing, Atascadero, CA
(1982)
23. Shramko, Y., Wansing, H.: Some useful 16-valued logics: How a computer network should
think. J. Philos. Log. 35(2), 121–153 (2005)

References
131
24. Woodruff, P.: On constructive nonsense logic. In: Modality. Morality, and Other Problems of
Sense and Nonsense, pp. 192–205. GWK Gleerup Bokforlag, Lund (1973)
25. Zinov’ev, A.A.: Foundations of the Logical Theory of Scientiﬁc Knowledge (Complex Logic).
Boston Studies in the Philosophy of Science. D. Reidel Publishing Company, Dordrecht, Hol-
land (1973)

Chapter 6
Cut-Down Operations on Multilattices
Abstract Of the interpretations of disjunction in which Addition fails discussed in
Chap.4, Melvin Fitting’s cut-down disjunction stands out as an interpretation with
a plausible explanation for the failure. This chapter examines cut-down operations
in more detail and with more rigor. In particular, we consider bilattice and trilattice
semantics for the ⊢-Parry systems Sfde and AC—both of which have been claimed
as ‘rivals’ to Efde—in the style of Ofer Arieli and Arnon Avron’s logical bilattices.
The elegant connection between these systems and logical multilattices supports the
fundamentality and naturalness of these logics and, additionally, allows us to extend
epistemic interpretation of bilattices in the tradition of artiﬁcial intelligence to these
systems.
In Sect.4.2.4, we considered Melvin Fitting’s ‘cut-down’ connectives, i.e., proposi-
tional connectives that ‘cut down’ available evidence, in the context of containment
logics. We now return to examine this relationship more closely. The work of Arnon
Avron and Ofer Arieli has shown a deep relationship between the theory of bilattices
and the Belnap-Dunn logic Efde. This correspondence has been interpreted as evi-
dence that Efde is ‘the’ logic of bilattices, a consideration reinforced by the work
of Yaroslav Shramko and Heinrich Wansing in which Efde is shown to be similarly
entrenched with respect to the theories of trilattices and, more generally, multilat-
tices. In this chapter, we export Fitting’s ‘cut-downs’ to the case of multilattices
and show that two related ﬁrst-degree systems—the Deutsch-Oller system Sfde and
Richard Angell’s AC—emerge just as elegantly and are as intimately connected to
the theory of multilattices as the Belnap-Dunn logic.
© Springer International Publishing AG 2017
T. M. Ferguson, Meaning and Proscription in Formal Logic,
Trends in Logic 49, https://doi.org/10.1007/978-3-319-70821-8_6
133

134
6
Cut-Down Operations on Multilattices
6.1
Introduction: Bilattices and Cut-Downs
Recall from Sect.4.2.4 Fitting’s epistemic interpretation of the operations of
Bochvar’s ‘internal’ logic 0 (equivalent to Kleene’s weak three-valued logic). In
this section, we will examine the generalization of cut-down operations and study
how such cut-down operations behave in the context of multilattices. Two types of
cut-downs will be considered, and the logic of such operations will be described.
Bilattices were introduced by Matthew Ginsberg in [9, 10] as a formal tool in
which to model aspects of reasoning in artiﬁcial intelligence. The study of bilattices
was also taken up by Fitting (e.g., [6, 8]), in which a bilattice is treated as a generalized
truth-value space with applications to logic programming a nd the theory of truth.
Deﬁnition 6.1.1 A bilattice B is a structure ⟨B, ≤t, ≤k, ˙¬⟩where:
• B is a nonempty set
• ≤t and ≤k are partial orderings of B such that both ⟨B, ≤k⟩and ⟨B, ≤t⟩are complete
lattices
• ˙¬ : B →B is a inversion such that
– ˙¬ ˙¬ a = a
– If a ≤t b then ˙¬ b ≤t ˙¬ a
– If a ≤k b then ˙¬ a ≤k ˙¬ b
N.b. that the original deﬁnition of a bilattice does not include the clause stipulating the
existence of an inversion ˙¬. Following the work of Fitting (e.g., [6–8]) and Arieli and
Avron (e.g., [1–3]), the stipulation that such a function exists has become standard.
In current parlance, structures deﬁned like the above deﬁnition bilattice without the
stipulation that a negation operation exists are called ‘prebilattices.’
The orderings ≤t and ≤k are often referred to as the ‘truth’ and ‘information’
orderings, respectively, representing an increase in the degree of truth and the amount
of information. Meet and join with respect to ≤t are denoted by ‘ ˙∧’ and ‘ ˙∨’ while
meet and join with respect to ≤k are denoted by ‘⊗’ and ‘⊕,’ respectively. Moreover,
the deﬁnition assumes that for all bilattices B and a, b ∈B, meets and joins modulo
both ≤k and ≤t exist and that there exist distinct tops and bottoms modulo each
relation.
Deﬁnition 6.1.2 With respect to two lattices A, B with orderings ≤A and ≤B,
respectively, the Ginsberg-Fitting product A ⊙B is a bilattice ⟨A × B, ≤t, ≤k, ˙¬⟩
where for ⟨a0, b0⟩, ⟨a1, b1⟩∈A × B:
• ⟨a0, b0⟩≤k ⟨a1, b1⟩iff a0 ≤A a1 and b0 ≤B b1
• ⟨a0, b0⟩≤t ⟨a1, b1⟩iff a0 ≤A a1 and b1 ≤B b0
• ˙¬⟨a0, b0⟩= ⟨b0, a0⟩
Deﬁnition 6.1.3 The set [a, b]k = {x ∈B | a ≤k x ≤k b}.
Deﬁnition 6.1.4 A bilattice B is bilinear if B is isomorphic to a bilattice L ⊙L,
where ⟨L, ≤L⟩is a linear order.

6.1 Introduction: Bilattices and Cut-Downs
135
In [7], Fitting studies a logic including a binary ‘guard connective,’ from which the
weak operations of Kleene are deﬁnable. However, Fitting’s [8] gives an equivalent
formalization of these weak operations in terms of ‘cut-down’ operations which can
be deﬁned in terms of the standard bilattice operations. First-degree systems in which
conjunction and disjunction are interpreted as cut-down operations on bilattices are
the targets of this chapter.
In [8], Fitting offers an epistemically-rich interpretation of the Kleene/Bochvar
logic in which groups of experts opining on propositions serve in place of truth-
values. The truth value assigned to a conjunction A ˙∧B, e.g., is interpreted as a pair
comprising a group of experts who assent to both A and B and a group of experts
opposing either A or B. But, as Fitting notes, it is a truism that not all experts have
opinions on all matters; hence, within this interpretation it may be reasonable that
we want to ‘cut this down’ by only considering people who have actually expressed an
opinion on both propositions [A] and [B].
The basic device by which Fitting accomplishes this is a unary cut-down operation:
Deﬁnition 6.1.5 For an element a ∈B, the Fitting cut-down of a—symbolized by
[[a]]—is deﬁned as a ⊕˙¬ a.
Deﬁnition 6.1.6 For elements a, b ∈B, the Kleene-Fitting cut-down connectives △
and ▽are deﬁned so that:
• a △b =df (a ˙∧b) ⊗[[a]] ⊗[[b]], and
• a ▽b =df (a ˙∨b) ⊗[[a]] ⊗[[b]]
Observation 6.1.1 For every bilattice B and all a ∈B, ˙¬[[a]] = [[ ˙¬ a]].
Proof It is easily conﬁrmed that ˙¬ distributes over both ⊗and ⊕. Hence, ˙¬[[a]], i.e.,
˙¬(a ⊕˙¬ a) is equivalent to ˙¬ a ⊕˙¬ ˙¬ a. But this is just [[ ˙¬ a]].
□
Observation 6.1.2 De Morgan’s laws hold for △and ▽, i.e., for all a, b ∈B, ˙¬(a △
b) = ˙¬ a ▽˙¬ b and ˙¬(a ▽b) = ˙¬ a △˙¬ b.
Proof In the ﬁrst case, employ Observation 6.1.1 and the fact that De Morgan’s Laws
hold with respect to ˙∧and ˙∨to yield the following equivalences:
˙¬(a △b) = ˙¬((a ˙∧b) ⊗[[a]] ⊗[[b]])
= ˙¬(a ˙∧b) ⊗˙¬[[a]] ⊗˙¬[[b]]
= ( ˙¬ a ˙∨˙¬ b) ⊗[[ ˙¬ a]] ⊗[[ ˙¬ b]]
= ˙¬ a ▽˙¬ b
The second case follows from identical reasoning.
□

136
6
Cut-Down Operations on Multilattices
6.2
Cut-Down Operations on Bilattices
In this section, we will review some of Arieli and Avron’s work on the logic of
bilattices. The techniques and constructions developed by Arieli and Avron are very
general and elegant, and can be readily adapted to account for logics including cut-
down operations.
6.2.1
Logical Bilattices
In, e.g., [2, 3], Arieli and Avron have shown that Efde plays a very robust role with
respect to the general theory of bilattices. The salient analogy is that just as classical,
two-valued logic acts as the logic of all Boolean algebras, Efde serves as the logic
of all bilattices.
To review the relevant results, consider a few deﬁnitions. First, the notion of a
ﬁlter on a partially ordered set is generalized to that of a biﬁlter.
Deﬁnition 6.2.1 A biﬁlter on a bilattice B is a nonempty and proper subset F ⊂B
such that for all a, b ∈B,
• a ˙∧b ∈F iff a ∈F and b ∈F, and
• a ⊗b ∈F iff a ∈F and b ∈F.
A biﬁlter F is prime if for all a, b ∈B,
• if a ˙∨b ∈F then either a ∈F or b ∈F, and
• if a ⊕b ∈F then either a ∈F or b ∈F.
In the sequel, biﬁlters will act as counterparts to familiar sets of truth values. Biﬁlters
permit the recasting of many logical notions in terms of bilattices, e.g., the closure
of a biﬁlter under arbitrary joins can be contrued as analogous to the principle of
Addition, i.e., that whenever A is true, the truth of the disjunction A ∨B for an
arbitrary B follows.
A non-degenerate bilattice B (i.e., a bilattice extending FOUR2) equipped with a
prime biﬁlter on B is called by Arieli and Avron a logical bilattice:
Deﬁnition 6.2.2 A logical bilattice is a pair ⟨B, F⟩where B is a non-degenerate
bilattice and F is a prime biﬁlter on B.
In order to deﬁne a consequence relation for a logical bilattice, maps from L to B
must be deﬁned:
Deﬁnition 6.2.3 An Arieli-Avron valuation on a bilattice B is a function v : L →B
such that:

6.2 Cut-Down Operations on Bilattices
137
• v(¬A) = ˙¬(v(A))
• v(A ∧B) = v(A) ˙∧v(B)
• v(A ∨B) = v(A) ˙∨v(B)
Finally, validity for ⟨B, F⟩is deﬁned in terms of Arieli-Avron valuations as follows:
Deﬁnition 6.2.4 With respect to a logical bilattice ⟨B, F⟩, an inference from Γ to
A is AA valid—written Γ ⊨⟨B,F⟩
AA
A—if for all Arieli-Avron valuations v such that
v[Γ ] ⊆F, also v(A) ∈F.
In [2], Arieli and Avron prove the remarkable result that for Efde is sufﬁcient for
reasoning about arbitrary bilattices in the following sense:
Observation 6.2.1 For all logical bilattices ⟨B, F⟩and sets of formulae Γ ∪{A},
Γ ⊨⟨B,F⟩
AA
A iff Γ ⊨Efde A.
Arieli and Avron interpret this result as showing that the relationship between Efde
and bilattices is analogous to that between classical logic and Boolean algebras.
A similar correspondence can now be shown to hold between the logic of cut-
down operations on bilattices and the logic Sfde that was described in Deﬁnition
2.3.4.
6.2.2
Sfde on Bilattices
To begin, the notion of an Arieli-Avron valuation can be tailored to the case of
cut-down operations:
Deﬁnition 6.2.5 A Kleene-Fitting valuation on a bilattice B is a function v : L →B
such that:
• v(¬A) = ˙¬(v(A))
• v(A ∧B) = v(A) △v(B)
• v(A ∨B) = v(A) ▽v(B)
Validity modulo Kleene-Fitting valuations is identical to validity with respect to
Arieli-Avron valuations:
Deﬁnition 6.2.6 With respect to a logical bilattice ⟨B, F⟩, an inference from Γ to
A is KF valid—written Γ ⊨⟨B,F⟩
KF
A—if for all Kleene-Fitting valuations v such that
v[Γ ] ⊆F, also v(A) ∈F.
One of the most fundamental bilattices is FOUR2, pictured in Fig.6.1. The
correspondence between the logic of cut-down operations on FOUR2 and Sfde can
be established by the following observation.

138
6
Cut-Down Operations on Multilattices
Fig. 6.1 The Bilattice FOUR2
Observation 6.2.2 For all sets of formulae Γ and formulae A,
Γ ⊨⟨FOUR2,{t,⊤}⟩
KF
A iff Γ ⊨Sfde A
Proof Let h⋆: FOUR2 →VSfde be a bijection deﬁned so that:
h⋆(t) = t, h⋆(⊤) = b, h⋆(⊥) = u, and h⋆(f) = f
Then by examining the operations on FOUR2, one can make their behavior explicit
in the form of ‘truth tables’ for the elements of FOUR2:
˙¬
△t ⊤⊥f
▽t ⊤⊥f
t f
t t ⊤⊥f
t t t ⊥t
⊤⊤⊤⊤⊤⊥f
⊤t ⊤⊥⊤
⊥⊥⊥⊥⊥⊥⊥⊥⊥⊥⊥⊥
f
t
f f f ⊥f
f
t ⊤⊥f
By identifying the ‘truth tables’ for FOUR2 with those for Sfde, it is simple to
conﬁrm that:
• h⋆( ˙¬ a) = f ¬
Sfde(h⋆(a))
• h⋆(a △b) = f ∧
Sfde(h⋆(a), h⋆(b))
• h⋆(a ▽b) = f ∨
Sfde(h⋆(a), h⋆(b))

6.2 Cut-Down Operations on Bilattices
139
Hence, a simple induction on complexity of formulae entails that for every Kleene-
Fitting valuation v, there exists an Sfde valuation v⋆such that for all A ∈L, v⋆(A) =
h⋆(v(A)). It follows that whenever Γ ⊭⟨FOUR2,{t,⊤}⟩
KF
A, one can take any Kleene-
Fitting valuation v witnessing the failure of the inference to yield an Sfde valuation
v⋆witnessing that Γ ⊭Sfde A.
As h⋆is a bijection, one can employ the function (h⋆)−1 to construct a
Kleene-Fitting valuation witnessing the failure of Γ ⊨⟨FOUR2,{t,⊤}⟩
KF
A whenever
Γ ⊭Sfde A.
□
Because Sfde is a fragment of some of the Kleene logics with guard connectives
considered by Fitting in [7], an implicit corollary of Fitting’s [7] is that Sfde is the
logic of cut-down operations on all bilinear bilattices as deﬁned in Deﬁnition 6.1.4.
Observation 6.2.3 For all logical bilattices ⟨B, F⟩such that B is bilinear,
Γ ⊨⟨B,F⟩
KF
A iff Γ ⊨⟨FOUR2,{⊤,t}⟩
KF
A.
Proof See [7].
□
This result can be substantially improved, however, to hold not merely for bilin-
ear bilattices but for all non-degenerate logical bilattices. Thus, Sfde emerges as
naturally and elegantly from the theory of bilattices as Efde.
In order to show that Γ ⊨⟨B,F⟩
KF
A holds iff Γ ⊨Sfde A for any non-trivial logical
bilattice ⟨B, F⟩the steps followed by Arieli and Avron in [3] may be adapted without
much difﬁculty. Following this work, recall the below deﬁnition:
Deﬁnition 6.2.7 For a logical bilattice ⟨B, F⟩, deﬁne a partition of B by the follow-
ing:
• T ⟨B,F⟩
⊤
= {a ∈B | a ∈F and ˙¬ a ∈F}
• T ⟨B,F⟩
t
= {a ∈B | a ∈F and ˙¬ a /∈F}
• T ⟨B,F⟩
f
= {a ∈B | a /∈F and ˙¬ a ∈F}
• T ⟨B,F⟩
⊥
= {a ∈B | a /∈F and ˙¬ a /∈F}
Now, consider some observations concerning cut-down operations on logical bilat-
tices. Let ⟨B, F⟩be a logical bilattice where a, b ∈B.
Observation 6.2.4 [[a]] ∈F iff either a ∈F or ˙¬ a ∈F.
Proof As [[a]] is deﬁned as a ⊕˙¬ a, the primeness of F ensures that [[a]] ∈F if and
only if either a ∈F or ˙¬ a ∈F.
□
Observation 6.2.5 [[a]] ∈T ⟨B,F⟩
⊤
iff a /∈T ⟨B,F⟩
⊥
Observation 6.2.6 a △b ∈F iff a ∈F and b ∈F

140
6
Cut-Down Operations on Multilattices
Proof For left-to-right, suppose that a △b ∈F. Then, as F is closed upwards under
≤k and a △b = (a ˙∧b) ⊗[[a]] ⊗[[b]], also a ˙∧b ∈F. But as F is closed upwards
under ≤t and both a ˙∧b ≤t a and a ˙∧b ≤t b, it follows that a ∈F and b ∈F.
For right-to-left, suppose that a ∈F and b ∈F. This entails that a ˙∧b ∈F and
that both a, b /∈T ⟨B,F⟩
⊥
. By Observation 6.2.5, it follows that [[a]] ∈F and [[b]] ∈F.
As F is closed upwards under ﬁnite meets, these observations entail that (a ˙∧b) ⊗
[[a]] ⊗[[b]] ∈F, i.e., a △b ∈F.
□
Observation 6.2.7 a ▽b ∈F iff either a ∈F or b ∈F, and both [[a]] ∈F and
[[b]] ∈F.
Proof For left-to-right, if a ▽b ∈F, then (a ˙∨b) ⊗[[a]] ⊗[[b]] ∈F. By closure
under ≤k, it follows that a ˙∨b ∈F and that both [[a]] ∈F and [[b]] ∈F. By prime-
ness of F, a ˙∨b ∈F entails that either a ∈F or b ∈F. Hence, either a ∈F or
b ∈F and both [[a]] ∈F and [[b]] ∈F.
For right-to-left, if a ∈F or b ∈F and both [[a]] ∈F and [[b]] ∈F, then by
closure under ﬁnite applications of ⊗, (a ˙∨b) ⊗[[a]] ⊗[[b]] ∈F. But this is just to
say that a ▽b ∈F.
□
Arieli and Avron’s deﬁnitions can be further exploited:
Deﬁnition 6.2.8 Let ⟨B0, F0⟩and ⟨B1, F1⟩be logical bilattices and let a0 ∈B0 and
a1 ∈B1 be elements of each. Then a0 and a1 are similar—written a0 ≃a1—if
• a0 ∈F0 iff a1 ∈F1, and
• ˙¬ a0 ∈F0 iff ˙¬ a1 ∈F1
Deﬁnition 6.2.9 Two Kleene-Fitting valuations v0 and v1 for logical bilattices
⟨B0, F0⟩and ⟨B1, F1⟩, respectively, are similar—written v0 ≃v1—if for all atomic
p ∈L,
v0(p) ≃v1(p)
Observation 6.2.8 Let v0 and v1 be Kleene-Fitting valuations for logical bilattices
⟨B0, F0⟩and ⟨B1, F1⟩, respectively. If v0 ≃v1, then for all formulae A ∈L,
v0(A) ≃v1(A)
Proof By induction on complexity of formulae. For atomic formulaep, this is secured
by the assumption that v0 ≃v1. For induction hypothesis, assume that whenever B
is a subformula of A, v0(B) ≃v1(B).
Now, in the case of negation, this follows immediately from the involutivity of ˙¬.
If v0(B) ≃v1(B), then
• v0(¬B) ∈F0 iff ˙¬ v0(B) ∈F0 iff ˙¬ v1(B) ∈F1 iff v1(¬B) ∈F1.
• v0(¬¬B) ∈F0 iff v0(B) ∈F0 iff v1(B) ∈F1 iff v1(¬¬B) ∈F1

6.2 Cut-Down Operations on Bilattices
141
But this is just to say that v0(¬B) ≃v1(¬B).
In the case of a formula B ∧C, by appeal to Observation 6.2.6, infer that v0(B ∧
C) ∈F0 holds iff both v0(B) ∈F0 and v0(C) ∈F0. By induction hypothesis, this is
equivalent to suggesting that both v1(B) ∈F1 and v1(C) ∈F1, which by Observation
6.2.6, is equivalent to v1(B ∧C) ∈F1.
In the case of a negated conjunction, by appeal to Observation 6.1.2, v0(¬(B ∧
C)) = v0(¬B ∨¬C)—and mutatis mutandis for v1. Hence, v0(¬(B ∧C)) ∈F0 iff
v0(¬B ∨¬C) ∈F0 iff ˙¬(v0(B)) ▽˙¬(v0(C)) ∈F0. By Observations 6.2.4 and 6.2.7,
this is equivalent to the tripartite claim that:
• ˙¬(v0(B)) ∈F0 or ˙¬(v0(C)) ∈F0, and
• ˙¬(v0(B)) ∈F0 or ˙¬ ˙¬(v0(B)) ∈F0 (i.e., v0(B) ∈F0), and
• ˙¬(v0(C)) ∈F0 or ˙¬ ˙¬(v0(C)) ∈F0 (i.e., v0(C) ∈F0)
But by induction hypothesis, this is equivalent to:
• ˙¬(v1(B)) ∈F1 or ˙¬(v1(C)) ∈F1, and
• ˙¬(v1(B)) ∈F1 or ˙¬ ˙¬(v1(B)) ∈F1, and
• ˙¬(v1(C)) ∈F1 or ˙¬ ˙¬(v1(C)) ∈F1.
By further appeal to Observations 6.1.2 and 6.2.7, this is equivalent to suggesting that
v1(¬(B ∧C)) ∈F1. Hence, both v0(B ∧C) ∈F0 iff v1(B ∧C) ∈F1 and ˙¬ v0(B ∧
C) ∈F0 iff ˙¬ v1(B ∧C) ∈F1. But this is just to say that v0(B ∧C) ≃v1(B ∧C).
The case of disjunction follows analogously.
□
Let
ι
denote the Russellian deﬁnite description operator. Then Arieli and Avron’s
deﬁnitions can be further altered to yield the following:
Deﬁnition 6.2.10 Let g⟨B,F⟩: B →FOUR2 be a function such that
g⟨B,F⟩(x) =
ι
y.x ∈T ⟨B,F⟩
y
This immediately yields the principal lemma:
Lemma 6.2.1 If v is a Kleene-Fitting valuation on ⟨B, F⟩, then g⟨B,F⟩◦v is a val-
uation on ⟨FOUR2, {⊤, t}⟩such that v ≃g⟨B,F⟩◦v.
Proof Immediate from the deﬁnition of g⟨B,F⟩.
□
From Lemma 6.2.1, a further observation follows:
Observation 6.2.9 For all logical bilattices ⟨B, F⟩,
Γ ⊨⟨B,F⟩
KF
A iff Γ ⊨⟨FOUR2,{⊤,t}⟩
KF
A.
Proof For right-to-left, suppose that Γ ⊨⟨B,F⟩
KF
A. Then there exists a Kleene-Fitting
valuation v on ⟨B, F⟩such that v[Γ ] ⊆F and v(A) /∈F. Then by Lemma 6.2.1,
g⟨B,F⟩◦v is a Kleene-Fitting valuation on ⟨FOUR2, {⊤, t}⟩such that (g⟨B,F⟩◦
v)[Γ ] ⊆{⊤, t}and(g⟨B,F⟩◦v)(A) /∈{⊤, t}.ThiswitnessesthatΓ ⊭⟨FOUR2,{⊤,t}⟩
KF
A.

142
6
Cut-Down Operations on Multilattices
For left-to-right, let v be a function witnessing that Γ ⊭⟨FOUR2,{⊤,t}⟩
KF
A. As
FOUR2 ⊆B, v is also a Kleene-Fitting valuation on ⟨B, F⟩. As ⊤, t ∈F and
⊥, f /∈F, it follows that v on ⟨B, F⟩is similar to v on ⟨FOUR2, {⊤, t}⟩. Hence
v also witnesses that Γ ⊭⟨B,F⟩
KF
A.
□
From these observations, one can prove the correspondence of cut-down operations
on all bilattices and the logic Sfde.
Observation 6.2.10 For all logical bilattices ⟨B, F⟩,
Γ ⊨⟨B,F⟩
KF
A iff Γ ⊨Sfde A.
Proof From Observations 6.2.2 and 6.2.9.
□
6.3
N IN E2 and AC
Now, other unary operations on bilattices appear in the literature that a priori conform
to Fitting’s epistemic understanding of a cut-down. On the bilattice NINE2, shown
in Fig.6.2, a further reasonable cut-down corresponds to AC. In [5], Carlos Damásio
and Luís Pereira provided a deep study of the bilattice NINE2 in the context of
logic programming.
Fig. 6.2 The Bilattice NINE2

6.3
NINE2 and AC
143
Damásio and Pereira equip NINE2 with a ‘weak negation’ not—a unary
negation-like operation lacking involutivity—deﬁned on NINE2 by the table:
x
⊥df dt f t ⊤of ot d⊥
˙¬ x
⊥dt df t f ⊤ot of d⊥
not x
⊥t
f t f ⊤⊤⊤⊤
not ˙¬ x ⊥f
t f t ⊤⊤⊤⊤
Now, the unary not operation deﬁned by Damásio and Pereira provides the needed
tool to deﬁne a cut-down similar to the Fitting deﬁnition. In [5], the operation
λx.not ˙¬ x is described with a similar epistemic character, as a function that ‘deter-
mines if... a proposition is at least believed.’ We will interpret this function as a
cut-down.
Deﬁnition 6.3.1 For any a ∈B, [[[a]]]—the Damásio-Pereira cut-down of a—is
deﬁned as not ˙¬ a.
Deﬁnition 6.3.2 The Damásio-Pereira weak operations ▲and ▼are deﬁned so that:
• a ▲b =df (a ˙∧b) ⊗[[[a]]] ⊗[[[b]]], and
• a ▼b =df (a ˙∨b) ⊗[[[a]]] ⊗[[[b]]].
Clearly, interpreting disjunction and conjunction modulo the Damásio-Pereira cut-
down is similar in spirit to Fitting’s interpretation of a cut-down. For example, if one
evaluates a ▼b as true (or a member of F) only when both [[[a]]] and [[[b]]] are also
members of F, one is cutting down the body of evidence to only those propositions
which one at least believes.
Deﬁnition 6.3.3 A Damásio-Pereira valuation of the language L on a bilattice B is
a function v : L →B such that:
• v(¬A) = ˙¬(v(A))
• v(A ∧B) = v(A) ▲v(B)
• v(A ∨B) = v(A) ▼v(B)
Deﬁnition 6.3.4 Γ ⊨
⟨B,F⟩
DP
A if for every Damásio-Pereira valuation v such that
v(B) ∈F for each B ∈Γ , also v(A) ∈F.
Now it may be shown that AC captures the behavior of Damásio-Pereira cut-downs
on NINE2.
Observation 6.3.1 Γ ⊨
⟨N IN E2,[t,⊤]k⟩
DP
A iff Γ ⊨AC A.
Proof DeﬁnetwopartitionsofNINE2:Π0 = {π0
t , π0
f , π0
u}andΠ1 = {π1
t , π1
f , π1
u},
deﬁned so that:

144
6
Cut-Down Operations on Multilattices
• π0
t = {⊤, ot, t}
• π1
t = {⊤, of, f}
• π0
f = {of, d⊥, dt}
• π1
f = {ot, d⊥, df}
• π0
u = {f, df, ⊥}
• π1
u = {t, dt, ⊥}
Let v, v′, ... be arbitrary elements of V0; one can employ a map h such that with
respect to each a ∈NINE2,
h(a) = ⟨
ι
v.a ∈π0
v,
ι
v′.a ∈π1
v′⟩
h is clearly a bijection between NINE2 and VAC. Moreover, it is also clear that
h[π0
t ] = h[[t, ⊤]k] = DAC.
What must then be shown is that:
• h( ˙¬ a) = f ¬
AC(h(a))
• h(a ▲b) = f ∧
AC(h(a), h(b))
• h(a ▼b) = f ∨
AC(h(a), h(b))
To begin, note that negation behaves appropriately, that is, if h(a) = ⟨v, v′⟩then
h( ˙¬ a) = ⟨v′, v⟩, which entails that for all a ∈NINE2, h( ˙¬ a) = f ¬
AC(h(a)).
In the case of conjunction, let a, b ∈NINE2. One can mimic the behavior of 0.
First consider the element of Π0 within which a ▲b lies:
ι
v.a ▲b ∈π0
v =
⎧
⎪⎨
⎪⎩
t
if a ∈π0
t and b ∈π0
t
u if a ∈π0
u or b ∈π0
u
f
otherwise
And compare this to the truth function associated with conjunction in 0:
f ∧
0(v, v′) =
⎧
⎪⎨
⎪⎩
t
if v = t and v′ = t
u if v = u or v′ = u
f
otherwise
It immediately follows that
ι
v.a ▲b ∈π0
v = f ∧
0(
ι
v′.a ∈π0
v′,
ι
v′′.b ∈π0
v′′)
Let pr0 and pr1 be the projection operators onto the ﬁrst and second coordinates.
From the above reasoning conjoined with the relationship between 0 and AC, one
can infer that:
ι
v.a ▲b ∈π0
v = pr0(f ∧
AC(⟨
ι
v′.a ∈π0
v′, w⟩, ⟨
ι
v′′.b ∈π0
v′′, w′⟩))
where w and w′ are arbitrary elements of V0. A similar correspondence for the
second coordinate entails that
ι
v.a ▲b ∈π1
v = pr1(f ∨
AC(⟨w,
ι
v′.a ∈π1
v′⟩, ⟨w′,
ι
v′′.b ∈π1
v′′⟩))

6.3
NINE2 and AC
145
for arbitrary w, w′ ∈V0. Putting these observations together, one can infer that:
h(a ▲b) = f ∧
AC(h(a), h(b))
That the analogous equivalence holds for disjunction follows from the duality of
conjunction and disjunction.
Hence, an induction on complexity of formulae entails that for any
Damásio-Pereira valuation v witnessing that Γ ⊭⟨NINE2,[t,⊤]k⟩
DP
A, one can ﬁnd a cor-
responding AC valuation h ◦v witnessing the failure of Γ ⊨AC A. That h is a bijection
entails that this holds from right-to-left as well. Hence, Γ ⊨⟨NINE2,[t,⊤]k⟩
DP
A holds iff
Γ ⊨AC A.
□
Now, recent work on related structures—trilattices—have suggested that the
Belnap-Dunn logic Efde is as ﬁrmly entrenched in the theory of multilattices in
general. For example, the logic induced many of the interpretations of connectives
on the trilattice described in [13] ends up equivalent for all intents and purposes
with Efde. Given the foregoing, it is natural to ask whether Sfde and related systems
emerge in the theory of multilattices as well.
We will proceed to show that the logic of cut-downs on trilattices is sensitive to
how one interprets logical negation and that the two most natural interpretations of
negation lead to Sfde and AC.
6.4
Cut-Down Operations on Trilattices
Trilattices are a natural generalization of bilattices introduced in [13], in which they
wereofferedasageneralizationofbilatticesinwhichorderings≤t and≤k werejoined
by an ordering ≤c measuring the constructivity of a degree of truth. More recent
discussions of trilattices (e.g., [11, 13, 14]) forgo the use of a constructivity ordering
in favor of a falsity ordering ≤f distinct from ≤t. We will follow this convention,
although it is important to note that nothing essentially hinges on the interpretation
of the ordering ≤f .
Deﬁnition 6.4.1 A trilattice T is a structure ⟨T, ≤t, ≤f , ≤k⟩where:
• T is a nonempty set
• ≤t, ≤f , and ≤k are partial orderings of T such that ⟨T, ≤t, ≤k⟩, ⟨T, ≤t, ≤f ⟩, and
⟨T, ≤f , ≤k⟩are complete prebilattices
Each partial ordering induces binary meet and join operators. We will employ the
convention of treating ≤t and ≤f as alethic, and thus describe the corresponding
meets and joins as ˙∧t, ˙∨t, ˙∧f , and ˙∨f . We treat ≤k as an information ordering and
carry over the notation of ⊗k and ⊕k to reinforce this interpretation.
In [13], Shramko, Dunn, and Takenaka explicitly part ways with the convention
of including a negation-like operation in the deﬁnition of a bilattice, and omit the

146
6
Cut-Down Operations on Multilattices
requirement that such an inversion exists from the deﬁnition of a trilattice. However,
we are interested in such negation-like operators and we may deﬁne inversions as
follows:
Deﬁnition 6.4.2 A t-inversion on a trilattice T is an involutive function ˙¬ t : T →T
such that for all a, b ∈T:
• If a ≤t b then ˙¬ tb ≤t ˙¬ ta
• If a ≤f b then ˙¬ ta ≤f ˙¬ tb
• If a ≤k b then ˙¬ ta ≤k ˙¬ tb
f -inversions ˙¬ f and tf -inversions ˙¬ tf are deﬁned analogously, i.e., ˙¬f reverses the
ordering ≤f but respects ≤t and ≤k, while ˙¬ tf reverses both ≤t and ≤f but respects
≤k.
Much of the formal work in the sequel will appeal to Umberto Rivieccio’s represen-
tation theorems found in [11] that show that many classes of trilattices are isomorphic
to certain products of bilattices. By appealing to these representation theorems, we
will be able to export some of the properties of cut-down operations on bilattices to
the case of trilattices without difﬁculty.
A product trilattice of two bilattices—the generalization of the Ginsberg-Fitting
product of two lattices—is deﬁned as follows:
Deﬁnition 6.4.3 For bilattices A = ⟨A, ≤A
t , ≤A
k , ˙¬
A⟩and B = ⟨B, ≤B
t , ≤B
k , ˙¬
B⟩,
the product trilattice A ⊙B is the trilattice ⟨A × B, ≤t, ≤f , ≤i⟩where for all ⟨a, b⟩,
⟨a′, b′⟩∈A × B:
• ⟨a, b⟩≤t ⟨a′, b′⟩if a ≤A
t a′ and b ≤B
t b′
• ⟨a, b⟩≤f ⟨a′, b′⟩if a′ ≤A
k a and b ≤B
k b′
• ⟨a, b⟩≤k ⟨a′, b′⟩if a ≤A
k a′ and b ≤B
k b′
From this deﬁnition, we can explicitly represent the meets and joins on A ⊙B by
the following:
⟨a, b⟩˙∧t ⟨a′, b′⟩= ⟨a ˙∧A a′, b ˙∧B b′⟩⟨a, b⟩˙∨t ⟨a′, b′⟩= ⟨a ˙∨A a′, b ˙∨B b′⟩
⟨a, b⟩˙∧f ⟨a′, b′⟩= ⟨a ⊕A a′, b ⊗B b′⟩⟨a, b⟩˙∨f ⟨a′, b′⟩= ⟨a ⊗A a′, b ⊕B b′⟩
⟨a, b⟩⊗k ⟨a′, b′⟩= ⟨a ⊗A a′, b ⊗B b′⟩⟨a, b⟩⊕k ⟨a′, b′⟩= ⟨a ⊕A a′, b ⊕B b′⟩
Inversions behave nicely on product trilattices, so that ˙¬t and ˙¬f are unique:
Deﬁnition 6.4.4 On a product trilattice A ⊙B, if A and B have negations ˙¬
A and
˙¬
B, respectively, then the t-inversion ˙¬t is deﬁned so that for all ⟨a, b⟩∈A × B:
• ˙¬t⟨a, b⟩=df ⟨˙¬
Aa, ˙¬
Bb⟩
If, moreover there is an isomorphism h : A ∼= B, then the f -inversion ˙¬ f is deﬁned
so that:
• ˙¬ f ⟨a, b⟩= ⟨h−1(b), h(a)⟩

6.4 Cut-Down Operations on Trilattices
147
Product trilattices will be useful due to Umberto Rivieccio’s representation theorems
for a large class of trilattices presented in [11]. Rivieccio shows that every interlaced
trilattice T is isomorphic to a product trilattice. The property of interlacing—which
appears in many contexts in the theory of bilattices as well—is a very natural prop-
erty, being exhibited by the most common bilattices and trilattices (e.g., FOUR2,
NINE2, SIXT EEN 3 are all interlaced).
Deﬁnition 6.4.5 A trilattice T is interlaced if the binary operations ˙∧t, ˙∨t, ˙∧f , ˙∨f ,
⊗k, and ⊕k are each monotone with respect to all three orderings.
Forourpurposes,themostimportantrepresentationtheoremsof[11]arethoseinvolv-
ing interlaced trilattices with inversions that naturally correspond to negation:
Theorem 6.4.1 (Rivieccio) T
is an interlaced trilattice if and only if T
is
isomorphic to a product trilattice A ⊙B where A and B are prebilattices.
Theorem 6.4.2 (Rivieccio) T is an interlaced trilattice with t- and f -inversions if
and only if T is isomorphic to a product trilattice A ⊙A where A is a prebilattice.
It follows from the observations of [11] that on an interlaced trilattice with inversions
˙¬ t and ˙¬ f , ˙¬ t and ˙¬ f always commute.
By Theorem 6.4.2, there is essentially a single t-inversion on an interlaced trilat-
tice, which permits us to state the following corollary concerning tf -inversions:
Corollary 6.4.1 For an interlaced trilattice T with t- and f -inversions, there exists
precisely one tf -inversion ˙¬ tf , equivalent to the operation ˙¬ t ˙¬ f .
Proof A tf -inversion ˙¬ tf is identical to the operation ˙¬ tf ˙¬ f ˙¬ f and Deﬁnition
6.4.4 entails that ˙¬ tf ˙¬ f is just the unique t-inversion. Hence, for any a ∈T, ˙¬ tf a =
˙¬ tf ˙¬ f ˙¬ fa = ˙¬ t ˙¬ fa.
□
In the sequel, this entitles us to treat an inversion ˙¬ tf as interchangable with the
decomposed ˙¬ t ˙¬ f (or, equivalently, ˙¬ f ˙¬ t).
6.4.1
Generalizations of Cut-Down Operations
In the case of trilattices, the plenitude of distinct ways to deﬁne negation-like inver-
sions and conjunction and disjunction-like meets and joins entails that the Kleene-
Fittingcut-downdoesnotpickoutauniquegeneralization.Forexample,ifacut-down
is deﬁned as the information join of an element and its negation, the natural question
arises: By which inversion should we interpret negation? If there are meets and joins
modulo both the truth and falsity orderings, in terms of which ordering should we
deﬁne, say, weak conjunction?
When a trilattice has a k-inversion ˙¬ k, the value x ⊕˙¬ kx will map all elements x
to the information-top, so deﬁning a cut-down [[x]]k by the scheme [[x]]k = (x ⊕˙¬ kx)
will be fruitless.

148
6
Cut-Down Operations on Multilattices
In the sequel, we will consider cut-down conjunctions and disjunctions to be
interpreted in virtue of the ordering ≤t. Generally speaking, inference as truth-
preservation is a more familiar concept than other candidates, and on this inter-
pretation, ˙∧t and ˙∨t are most noticably recognizable as the standard conjunction and
disjunction connectives. We will ﬁrst deﬁne our cut-down operations:
Deﬁnition 6.4.6 For an element a of a trilattice T with a t-inversion, the t-cut-down
of a—[[a]]t—is deﬁned so that:
• [[a]]t =df a ⊕k ˙¬ ta
Deﬁnition 6.4.7 For a trilattice with a t-inversion, the t-weak conjunction △t and
the t-weak disjunction ▽t are deﬁned:
• x △t y =df (x ˙∧t y) ⊗k [[x]]t ⊗k [[y]]t
• x ▽t y =df (x ˙∨t y) ⊗k [[x]]t ⊗k [[y]]t
For the interpretation of negation, we will consider the options of interpreting the
t-inversion ˙¬ t and the tf -inversion ˙¬ tf (i.e., ˙¬ t ˙¬ f ). These—along with ˙¬ f —are
cited by Shramko and Wansing as ‘the most obvious candidates for representing
an object-language negation [14, p. 133].’ Both appear to be equally natural in this
context; e.g., both inversions ˙¬ t and ˙¬ tf interact with the cut-down [[a]]t in a similar
fashion to what was observed in the case of bilattices:
Observation 6.4.1 For a trilattice T with a inversion ˙¬ t, for all a ∈T,
˙¬t[[a]]t = [[ ˙¬ta]]t
Proof ˙¬ t[[a]]t = ˙¬ t(a ⊕k ˙¬ ta). Because ˙¬ t distributes over the information join
⊕k, this is equivalent to ˙¬ ta ⊕k ˙¬ t ˙¬ ta, i.e., [[ ˙¬ ta]]t.
□
Observation 6.4.2 For a trilattice T with commuting inversions ˙¬ t and ˙¬ f , for all
a ∈T,
˙¬tf [[a]]t = [[ ˙¬tf a]]t
Proof We appeal to the following equivalences: ˙¬ tf [[a]]t is equivalent by deﬁnition
to ˙¬ tf (a ⊕˙¬ ta) and hence, to ˙¬ tf a ⊕˙¬ tf ˙¬ ta. Because ˙¬ tf ˙¬ ta = ˙¬ t ˙¬ f ˙¬ ta,
by commutativity of ˙¬ t and ˙¬ f , we infer that this is equivalent to ˙¬ tf a ⊕˙¬ t ˙¬ tf a,
which is just [[ ˙¬ tf a]]t.
□
Moreover, De Morgan’s laws can be seen to hold for both species of inversion.
Observation 6.4.3 For all elements a and b in a trilattice T with an inversion ˙¬ t,
˙¬ t(a △t b) = ˙¬ ta ▽t ˙¬ tb and ˙¬ t(a ▽t b) = ˙¬ ta △t ˙¬ tb.
Proof ˙¬ t(a △t b) is just ˙¬ t((a ˙∧t b) ⊗k [[a]]t ⊗k [[b]]). ˙¬ t distributes over ⊗k,
whence we infer equivalence with ˙¬ t(a ˙∧t b) ⊗k ˙¬ t[[a]]t ⊗k ˙¬ t[[b]]. By Obser-
vation 6.4.1 and De Morgan’s laws for ˙∧t, we infer equivalence with ( ˙¬ ta ˙∨t
˙¬ tb) ⊗k [[ ˙¬ ta]]t ⊗k [[ ˙¬ tb]], i.e., ˙¬ ta ▽t ˙¬ tb.
The second case follows from analogous reasoning.
□

6.4 Cut-Down Operations on Trilattices
149
Observation 6.4.4 For all elements a and b in a trilattice, ˙¬ tf (a △t b) = ˙¬ tf a ▽t
˙¬ tf b and ˙¬ tf (a ▽t b) = ˙¬ tf a △t ˙¬ tf b.
Proof ˙¬ tf (a △t b) = ˙¬ tf ((a ˙∧t b) ⊗k [[a]]t ⊗k [[b]]t). Because both ˙¬ t and ˙¬ f
distribute over ⊗k, this is equal to ˙¬ tf (a ˙∧t b) ⊗k ˙¬ tf [[a]]t ⊗k ˙¬ tf [[b]]t. We can
note that ˙¬ tf (a ˙∧t b) = ˙¬ tf a ˙∨t ˙¬ tf b. ˙¬ tf (a ˙∧t b) is deﬁned as ˙¬ t ˙¬ f (a ˙∧t b).
The f -inversion distributes over the t-operations, so this is equal to ˙¬ t( ˙¬ fa ˙∧t
˙¬ fb), which—by De Morgan’s laws—is equivalent to ˙¬ t ˙¬ fa ˙∨t ˙¬ t ˙¬ fb, i.e.,
˙¬ tf a ˙∨t ˙¬ tf b. Furthermore, by Lemma 6.4.2, ˙¬ tf [[a]]t ⊗k ˙¬ tf [[b]]t is equal to
[[ ˙¬ tf a]]t ⊗k [[ ˙¬ tf b]]t.
Putting these observations together, we infer that ˙¬ tf (a ˙∧t b) ⊗k ˙¬ tf [[a]]t ⊗k
˙¬ tf [[b]]t is equivalent to ( ˙¬ tf a ˙∨t ˙¬ tf b) ⊗k [[ ˙¬ tf a]]t ⊗k [[ ˙¬ tf b]]t, i.e., ˙¬ tf a ▽t
˙¬ tf b. The second case follows by dualizing the foregoing argument.
□
With natural generalizations of cut-down operations in hand, we now proceed to
consider how to consider logical consequence in this setting, again by generalization
Arieli and Avron’s approach.
6.4.2
Some Properties of Triﬁlters
Now, because we wish to talk about validity with respect to certain operations on
trilattices, we proceed generalize Arieli and Avron’s notion of a biﬁlter to the case of
a trilattice. We will call the following natural generalization a triﬁlter, that is, a set of
the elements of a trilattice that is closed upwards under each of the three orderings.
Deﬁnition 6.4.8 A triﬁlter on a trilattice T is a nonempty and proper subset F ⊂T
closed upwards under each ordering and closed under ﬁnite meets:
a ˙∧t b ∈F iff a ˙∧f b ∈F iff a ⊗k b ∈F iff a ∈F and b ∈F.
F is prime if for all a, b ∈B,
a ˙∨t b ∈F iff a ˙∨f b ∈F iff a ⊕k b ∈F iff either a ∈F or b ∈F.
Bythisdeﬁnition,atriﬁlterisaspecialcaseofthenotionofamultiﬁlter independently
deﬁned by Yaroslav Shramko in [12].
It will behoove us to establish a few connections between triﬁlters on product
trilattices and biﬁlters on the bilattices from which they are constructed. Given the
representation theorems for interlaced trilattices, these results will enable us to apply
many observations about biﬁlters to the case of triﬁlters.
In the ﬁrst case, we can show that given a product trilattice A ⊙B, the product
of A (i.e., the elements of bilattice A) and any prime ﬁlter on B will yield a triﬁlter
on the product trilattice.

150
6
Cut-Down Operations on Multilattices
Lemma 6.4.1 For a product trilattice A ⊙B and a prime biﬁlter FB on B, the set
F = A × FB is a prime triﬁlter on A ⊙B.
Proof Let A = ⟨A, ≤A
t , ≤A
k ⟩and B = ⟨B, ≤B
t , ≤B
k ⟩be the prebilattices that yield
A ⊙B and ﬁx an element ⟨a, b⟩∈F.
Then if ⟨a, b⟩≤t ⟨a′, b′⟩, that a′ ∈A follows by deﬁnition. By the primeness of
FB, we also know that b ≤B
t b′ entails that b′ ∈FB. If ⟨a, b⟩≤f ⟨a′, b′⟩or ⟨a, b⟩≤k
⟨a′, b′⟩, then a′ ∈A by construction and because b ≤B
k b′, also b′ ∈FB. In all three
cases, ⟨a′, b′⟩∈F.
For primeness, suppose⟨a, b⟩˙∨t ⟨a′, b′⟩∈F. This element is ⟨a ˙∨A a′, b ˙∨B b′⟩,
whence b ˙∨B b′ ∈FB. By primeness of FB, either b ∈FB or b′ ∈FB. Because both
a and a′ are elements of A, the ﬁrst case entails that ⟨a, b⟩∈F and the second entails
that ⟨a′, b′⟩∈F. The cases of primeness for the falsity and information orderings
follow from a similar argument.
□
Conversely, we can show that every triﬁlter on a product trilattice can be represented
as such a product.
Lemma 6.4.2 Every prime triﬁlter on a product trilattice A ⊙B is identical to a
product A × FB where FB is a prime biﬁlter on B.
Proof Let F be a prime triﬁlter on A ⊙B.
We consider the ﬁrst coordinate. Consider an arbitrary element a ∈A and pick
an arbitrary ⟨a′, b′⟩∈F. Then a′ ≤A
k (a ⊕A a′) and b′ ≤B
t b′, so ⟨a′, b′⟩≤k ⟨a ⊕A
a′, b′⟩, whence by closure under ≤k, ⟨(a ⊕A a′), b′⟩∈F. However, because a ≤A
(a ⊕A a′) and b′ ≤A
k b′, also ⟨(a ⊕A a′), b′⟩≤f ⟨a, b′⟩. By closure under ≤f , this
entails that ⟨a, b′⟩∈F. It follows that whenever ⟨a′, b′⟩∈F, for all a ∈A, also
⟨a, b′⟩∈F. Hence, F is the product of A and the set
FB = {b ∈B | ∃a ∈A such that ⟨a, b⟩∈F}
We now must show that FB is a prime biﬁlter on B. For any b ∈FB, there is an
a ∈A such that ⟨a, b⟩∈F. Hence, whenever b ≤B
t b′ or b ≤B
k b′′, ⟨a, b⟩≤t ⟨a, b′⟩
and ⟨a, b⟩≤k ⟨a, b′⟩, respectively. In the ﬁrst case, closure of the triﬁlter F entails
that ⟨a, b′⟩∈F, whence b′ ∈FB; in the second case, closure entails that ⟨a, b′′⟩∈F,
ensuring that b′′ ∈FR. Thus, FR is a biﬁlter on B.
For primeness of FB, if b ˙∨B b′ ∈FR, then for some a ∈A, ⟨a, b ˙∨B b′⟩∈F.
But this element is ⟨(a ˙∨A a), (b ˙∨B b′)⟩, i.e., ⟨a, b⟩˙∨t ⟨a, b′⟩, and by primeness of
F, either ⟨a, b⟩∈F (entailing that b ∈FB) or ⟨a, b′⟩∈F (entailing that b′ ∈FB).
An identical argument yields primeness of FB with respect to ⊕B as well.
□

6.5 Analytic Logic on Trilattices
151
6.5
Analytic Logic on Trilattices
With the foregoing deﬁnitions, the approach to bilattice logic championed by Arieli
and Avron—and the variations upon this approach described in Sect.6.2.2—are read-
ily adapted to the case of interlaced trilattices.
Deﬁnition 6.5.1 A logical trilattice is a pair ⟨T , F⟩where T is a non-degenerate
trilattice and F is a prime triﬁlter on T .
Note the reappearance of the condition that T must be non-degenerate. This is essen-
tially the condition that the theory of the trilattice is sufﬁciently rich. The smallest
non-degenerate trilattice is SIXT EEN 3. This is a very reasonable constraint, e.g.,
it is required in the case of logical bilattices described in Deﬁnition 6.2.2.
As stated before, we have two inversions that equally resemble negation. We will
thus deﬁne two types of valuations: one in which negation ¬ is interpreted as ˙¬ t and
another in which negation is considered to be ˙¬ tf . The upshot will be that the former
logic of cut-downs on trilattices is Sfde while the latter logic is equivalent to AC. The
general structure of the two arguments will be to ﬁrst show a correspondence between
any logical trilattice in which the trilattice is a product and the logical trilattice
⟨FOUR2 ⊙FOUR2, FOUR2 × {⊤, t}⟩, then to show a correspondence between
valuations of an appropriate type on ⟨FOUR2 ⊙FOUR2, FOUR2 × {⊤, t}⟩and
consequence in Sfde or AC. Finally, we will appeal to Rivieccio’s representation
theorems to prove that the correspondence extends to all logical bilattices ⟨T , F⟩
such that T is interlaced.
6.5.1
Sfde on Trilattices
First, we will examine the logic of cut-down operations on trilattices in which nega-
tion is interpreted as a t-inversion. The most natural generalization of Kleene-Fitting
valuations may be deﬁned as follows:
Deﬁnition 6.5.2 A ˙¬ t-Kleene-Fitting valuation on a trilattice T is a function v :
L →T such that:
• v(¬A) = ˙¬ t(v(A))
• v(A ∧B) = v(A) △t v(B)
• v(A ∨B) = v(A) ▽t v(B)
Deﬁnition 6.5.3 An inference from Γ to A is ˙¬ t-KF valid on a logical trilattice
⟨T , F⟩—written Γ ⊨⟨T ,F⟩
KF[ ˙¬ t] A—if for all ˙¬ t-Kleene-Fitting valuations v, if v[Γ ] ⊆
F then v(A) ∈F.
Given the representation theorems for interlaced trilattices, we will consider only
product trilattices for the moment.
Let us deﬁne a second notion of similarity, tailored to the case in which negation
is identiﬁed with the operation of t-inversion.

152
6
Cut-Down Operations on Multilattices
Deﬁnition 6.5.4 Consider two logical product trilattices ⟨A0 ⊙B0, A0 × F0⟩and
⟨A1 ⊙B1, A1 × F1⟩where F0 and F1 are prime biﬁlters on B0 and B1, respec-
tively.Then two elements ⟨a, b⟩∈A0 × B0 and ⟨a′, b′⟩∈A1 × B1 are ˙¬ t-similar—
written ⟨a, b⟩≃t ⟨a′, b′⟩—if:
• ⟨a, b⟩∈A0 × F0 if and only if ⟨a′, b′⟩∈A1 × F1, and
• ˙¬ t(⟨a, b⟩) ∈A0 × F0 if and only if ˙¬ t(⟨a′, b′⟩) ∈A1 × F1
As in the case of Sect.6.2.2, the notion of ˙¬ t-similarity between two points extends
to ˙¬ t-Kleene-Fitting valuations as well.
Deﬁnition 6.5.5 Two ˙¬ t-Kleene-Fitting valuations v0 and v1 on logical trilattices
⟨A0 ⊙B0, A0 × F0⟩and ⟨A1 ⊙B1, A1 × F1⟩are ˙¬ t-similar if for all atomic p ∈L,
v0(p) ≃t v1(p).
This deﬁnition allows us to prove two intermediate lemmas suggesting that many
properties of a logical trilattice ⟨A ⊙B, A × FB⟩can be recovered from the logical
bilattice ⟨B, FB⟩.
Lemma 6.5.1 Consider a logical trilattice ⟨A ⊙B, A × FB⟩, with FB a prime biﬁl-
ter on B. Then for every ˙¬ t-Kleene-Fitting valuation v:
v(A) ∈F if and only if pr1(v(A)) ∈FB
Proof Immediate from Lemma 6.4.2.
□
Lemma 6.5.2 Let v be a ˙¬ t-Kleene-Fitting valuation on a logical trilattice ⟨A ⊙
B, A × FB⟩with FB a prime biﬁlter on B. Then pr1 ◦v is a Kleene-Fitting valuation
on the logical bilattice ⟨B, FB⟩.
Proof We prove that pr0 ◦v is in fact a Kleene-Fitting valuation on ⟨B, FB⟩by
induction on complexity of formulae. As a basis step, we note that pr1 ◦v maps
atoms to elements of B, as required.
In the case of a formula ¬B, let v(B) = ⟨a, b⟩. Then:
pr1( ˙¬t⟨a, b⟩) = pr1(⟨˙¬Aa, ˙¬Bb⟩) = ˙¬B(pr1(⟨a, b⟩))
In other words, (pr1 ◦v)(¬B) = ˙¬B((pr1 ◦v)(B)).
In the case of conjunction, let ⟨a, b⟩and ⟨a′, b′⟩be the values of v(B) and v(C),
respectively. Then v(B ∧C) = ⟨a, b⟩△t ⟨a′, b′⟩, whence:
pr1(⟨a, b⟩△t ⟨a′, b′⟩) = pr1(⟨a △A a′, b △B b′⟩) = pr1(⟨a, b⟩) △B pr1(⟨a′, b′⟩)
This entails that (pr1 ◦v)(B ∧C) = ((pr1 ◦v)(B)) △B ((pr1 ◦v)(C)).
The case of disjunction can be inferred from the cases of negation and conjunction.
Hence, the valuation pr1 ◦v maps formulae A to appropriate values, i.e., pr1 ◦v is a
Kleene-Fitting valuation.
□

6.5 Analytic Logic on Trilattices
153
These lemmas entail a fundamental property of ˙¬ t-Kleene-Fitting valuations.
Observation 6.5.1 If v0 and v1 are ˙¬ t-Kleene-Fitting valuations on logical trilat-
tices ⟨A0 ⊙B0, A0 × F0⟩and ⟨A1 ⊙B1, A1 × F1⟩, then if v0 ≃t v1, for all formulae
A ∈L, v0(A) ≃t v1(A).
Proof By Lemma 6.5.1, vi(B) ∈Ai × Fi stands or falls with the claim that
pr1(vi(B)) ∈Fi for each i ∈{0, 1}. Moreover, by Lemma6.5.2, pr1 ◦v0 and pr1 ◦v1
are Kleene-Fitting valuations on the logical bilattices ⟨B0, F0⟩and ⟨B1, F1⟩, respec-
tively. As a consequence, we may infer that for any formula A, v0(A) ≃t v1(A) if and
only if (pr1 ◦v0)(A) ≃(pr1 ◦v1)(A).
Because this holds a fortiori when A is an atom p, the hypothesis that v0 ≃t v1
thus entails that pr1 ◦v0 ≃pr1 ◦v1. By applying Observation 6.2.8, we may infer
that for an arbitrary A, (pr1 ◦v0)(A) ≃(pr1 ◦v1)(A). But by our earlier observation,
this entails that v0(A) ≃t v1(A) and because A was selected arbitrarily, this holds for
all formulae A.
□
Deﬁnition 6.5.6 Recall the deﬁnition of the partition T ⟨B,F⟩
x
from Deﬁnition 6.2.7
and let ⟨A ⊙B, A × FB⟩be a logical trilattice. Then the function g⟨A⊙B,A×FB⟩:
A × B →FOUR2 × FOUR2 is deﬁned so that:
g⟨A⊙B,A×FB⟩(x) = ⟨⊤,
ι
y.pr1(x) ∈T ⟨B,FB⟩
x
⟩
Lemma 6.5.3 If v is a ˙¬ t-Kleene-Fitting valuation on ⟨A ⊙B, A × FB⟩with
⟨B, FB⟩a logical bilattice, then the valuation g⟨A⊙B,A×FB⟩◦v is a valuation on
⟨SIXT EEN 3, FOUR2 × {⊤, t}⟩such that v ≃t g⟨A⊙B,A×FB⟩◦v.
Proof Byconstructionof g⟨A⊙B,A×FB⟩,wecanbeassuredthatforallatomsp,v(p) ≃t
(g⟨A⊙B,A×FB⟩◦v)(p). Hence, by Observation 6.5.1, v ≃t g⟨A⊙B,A×FB⟩◦v.
□
Observation 6.5.2 Consider a logical trilattice ⟨A ⊙B, F⟩and a set of formulae
Γ ∪{A} ⊆L. Then we have the following:
Γ ⊨⟨A⊙B,A×FB⟩
KF[ ˙¬ t]
A if and only if Γ ⊨⟨SIXT EEN 3,FOUR2×{⊤,t}⟩
KF[ ˙¬ t]
A
Proof If Γ ⊭⟨A⊙B,A×FB⟩
KF[ ˙¬ t]
A and v is a ˙¬ t-Kleene-Fitting valuation witnessing the
failure of this inference, then g⟨A⊙B,A×FB⟩◦v is a valuation on ⟨SIXT EEN 3,
FOUR2 × {⊤, t}⟩such that for all A ∈L, v(A) ≃t (g⟨A⊙B,A×FB⟩◦v)(A). Hence, the
˙¬ t-Kleene-Fitting valuation g⟨A⊙B,A×FB⟩◦v witnesses the failure of the inference
Γ ⊭⟨SIXT EEN 3,FOUR2×{⊤,t}⟩
KF[ ˙¬ t]
A.
On the other hand, because SIXT EEN 3 is the smallest non-degenerate trilat-
tice, the elements of FOUR2 can be identiﬁed with the top and bottom elements of
both A and B. Hence, any valuation on ⟨SIXT EEN 3, FOUR2 × {⊤, t}⟩witnessing
that Γ ⊭⟨SIXT EEN 3,FOUR2×{⊤,t}⟩
KF[ ˙¬ t]
A is a fortiori a valuation on ⟨A ⊙B, A × FB⟩that
serves as a countermodel to the inference Γ ⊨⟨A⊙B,A×FB⟩
KF[ ˙¬ t]
A.
□

154
6
Cut-Down Operations on Multilattices
Lemma 6.5.4 For all sets of formulae Γ ∪{A}, we have the following:
Γ ⊨⟨SIXT EEN 3,FOUR2×{⊤,t}⟩
KF[ ˙¬ t]
A if and only if Γ ⊨⟨FOUR2,{⊤,t}⟩
KF
A.
Proof For left-to-right, suppose that Γ ⊭⟨SIXT EEN 3,FOUR2×{⊤,t}⟩
KF[ ˙¬ t]
A and let v be a ˙¬ t-
Kleene-Fitting valuation witnessing the failure of the inference. Then by Lemmas
6.5.1 and 6.5.2, pr1 ◦v is a Kleene-Fitting valuation on ⟨FOUR2, {⊤, t}⟩such that
(pr1 ◦v)[Γ ] ⊆{⊤, t} although (pr1 ◦v)(A) /∈{⊤, t}. pr1 ◦v thus witnesses the fact
that Γ ⊭⟨FOUR2,{⊤,t}⟩
KF
A.
Conversely, if Γ ⊭⟨FOUR2,{⊤,t}⟩
KF
A and v is a Kleene-Fitting valuation witnessing
this fact, then v⋆: x →⟨v(x), v(x)⟩is clearly a ˙¬ t-Kleene-Fitting valuation. By
appealing to Lemma 6.5.1, from v[Γ ] ⊆{⊤, t} we can infer that v⋆[Γ ] ⊆FOUR2 ×
{⊤, t} and from v(A) /∈{⊤, t}, we infer that v⋆(A) /∈FOUR2 × {⊤, t}. But this is just
to say that v⋆witnesses that Γ ⊭⟨SIXT EEN 3,FOUR2×{⊤,t}⟩
KF[ ˙¬ t]
A.
□
Observation 6.5.3 Let ⟨T , F⟩be a logical trilattice with a t-inversion where T is
interlaced. Then for all sets of formulae Γ ∪{A}:
Γ ⊨⟨T ,F⟩
KF[ ˙¬ t] A if and only if Γ ⊨Sfde A
Proof Suppose that Γ ⊭⟨T ,F⟩
KF[ ˙¬t] A and let v be a ˙¬t-Kleene-Fitting valuation on ⟨T , F⟩
witnessing this fact. By Theorem 6.4.1, the trilattice T is isomorphic to a product
trilattice A ⊙B and by Observation 6.5.1, F may be represented by the prime triﬁl-
ter A × FB. Hence, we infer equivalence with the proposition that Γ ⊭⟨A⊙B,A×FB⟩
KF[ ˙¬t]
A
where F = A × FB. By Lemma 6.5.1, this holds if and only if there exists an analo-
gous ˙¬ t-Kleene-Fitting valuation on ⟨SIXT EEN 3, FOUR2 × {⊤, t}⟩attesting to
the proposition Γ ⊭⟨SIXT EEN 3,FOUR2×{⊤,t}⟩
KF[ ˙¬ t]
A. Lemma 6.5.4 shows the equivalence
between this proposition and Γ ⊭⟨FOUR2,{⊤,t}⟩
KF
A. Observation 6.2.10 ensures that
this is equivalent to the claim that Γ ⊭Sfde A.
□
We thus observe that—given the most direct and natural generalization of cut-down
operations to the case of trilattices—the interpretation of Sfde as the logic of cut-
down operations on bilattices lifts to the case of interlaced trilattices whenever nega-
tion is interpreted as t-inversion.
6.5.2
Interlude: Analytic Containment and Sfde
From a certain perspective, the relationship between the logics Sfde and AC might
be expected to mirror that between bilattices and trilattices.
On the one hand, we have observed that Rivieccio’s representation theorem for
interlaced trilattices of [11] proves that all interlaced trilattices are isomorphic to the
product of two bilattices. For example, for a generalization of the Fitting-Ginsberg

6.5 Analytic Logic on Trilattices
155
product ⊙, the trilattice SIXT EEN 3 can be represented as the product trilattice
FOUR2 ⊙FOUR2.
On the other hand, whereas Chap.5 described a Belnap-Dunn-like interpretation
of AC as two systems of positive 0 running in parallel (i.e., calculating independent
truth and falsity values), semantics for AC could just as easily have been provided
by two systems of Sfde. In this sense, the resulting sixteen-valued semantics for AC
can be viewed as a product of the matrix for Sfde with itself, with negation toggling
between the two.
Lemma 6.5.5 The positive fragments of 0 and Sfde coincide.
Proof Let ∼be the equivalence relation on VSfde induced by the partition {{t, b},
{u}, {f}}. Then if we use the notation f [x] to denote the image of x under f and the
notation [x]∼to denote the equivalence class of x under ∼, it is easy to conﬁrm the
following for all v, v′ ∈VSfde:
• f ∧
Sfde[[v]∼× [v′]∼] = [f ∧
Sfde(v, v′)]∼
• f ∨
Sfde[[v]∼× [v′]∼] = [f ∨
Sfde(v, v′)]∼
entailing that ∼is also a congruence relation. This also entails that we have the
following truth tables for the images of equivalence classes of values of VSfde under
the truth functions of Sfde:
f ∧
Sfde
{t, b} {u} {f}
f ∨
Sfde
{t, b} {u}
{f}
{t, b} {t, b} {u} {f}
{t, b} {t, b} {u} {t, b}
{u}
{u}
{u} {u}
{u}
{u}
{u}
{u}
{f}
{f}
{u} {f}
{f}
{t, b} {u}
{f}
By appealing to the fact that both V0 ⊆VSfde and D0 ⊆DSfde and that there is
a clear analogy between the above truth tables and those for conjunction and dis-
junction in Deﬁnition 2.2.4, it is easy to conﬁrm that the function h : v →[v]∼is
an isomorphism between the positive matrix of 0 and the quotient of the positive
matrix of Sfde under ∼.
□
Deﬁnition 6.5.7 The relation ⊨AC′ is the consequence relation induced by the matrix
⟨VSfde × VSfde, DSfde × VSfde, f ¬
AC′, f ∧
AC′, f ∨
AC′⟩where:
• f ¬
AC′(⟨v0, v1⟩) = ⟨v1, v0⟩
• f ∧
AC′(⟨v0, v1⟩, ⟨v′
0, v′
1⟩) = ⟨f ∧
Sfde(v0, v′
0), f ∨
Sfde(v1, v′
1)⟩
• f ∨
AC′(⟨v0, v1⟩, ⟨v′
0, v′
1⟩) = ⟨f ∨
Sfde(v0, v′
0), f ∧
Sfde(v1, v′
1)⟩
AC′ valuations and AC′ validity are deﬁned in the standard fashion.
Because the functions f ∧
Sfde and f ∨
Sfde are unable to distinguish between the values
t and b in positive Sfde, MAC′ provides a correct characterization of Angell’s AC as
well.
Lemma 6.5.6 Γ ⊨AC′ A iff Γ ⊨AC A

156
6
Cut-Down Operations on Multilattices
Proof Left-to-right is immediate. Suppose that Γ ⊭AC A and that v is an AC valuation
witnessing this fact. Then because VAC ⊆VAC′, v is also an AC′ valuation, whence
Γ ⊭AC′ A.
Right-to-left follows by invoking a trivial induction on complexity of formulae
demonstrating that any AC′ valuation has a corresponding AC valuation by mapping
both t and b to t. Any AC′ countermodel to an inference Γ ⊨AC′ A entails the existence
of an AC countermodel to Γ ⊨AC A.
□
This suggests that with respect to the generalization of cut-down operation on
trilattices in Deﬁnitions 6.4.6 and 6.4.7, whenever negation is identiﬁed with tf -
inversion, the account of Sfde on bilattices can be employed to provide a natural and
robust correspondence between AC and cut down operations on interlaced trilattices.
6.5.3
AC on Trilattices
Now, granted the foregoing considerations on AC, we will show its equivalence to
the logic of cut-down operations on trilattices in which negation is interpreted as a
tf -inversion. Naturally, the modiﬁcation of Kleene-Fitting valuations may be deﬁned
as follows:
Deﬁnition 6.5.8 A ˙¬ tf -Kleene-Fitting valuation on a trilattice T with t- and
f -inversions is a function v : L →T such that:
• v(¬A) = ˙¬ tf (v(A))
• v(A ∧B) = v(A) △t v(B)
• v(A ∨B) = v(A) ▽t v(B)
Deﬁnition 6.5.9 An inference from Γ to A is ˙¬ tf -KF valid on a logical trilattice
⟨T , F⟩—written Γ ⊨⟨T ,F⟩
KF[ ˙¬tf ] A—if for all ˙¬tf -Kleene-Fitting valuations v, if v[Γ ] ⊆
F then v(A) ∈F.
For an interlaced trilattice T with t- and f - inversions, the inversions ˙¬ t and ˙¬ f
always commute. With an eye to the representation theorems, that ˙¬ t and ˙¬ f com-
mute ensures that not only is every interlaced trilattice T isomorphic to a product
trilattice A ⊙B but that A is isomorphic to B. Hence, we will consider product
trilattices A ⊙A in the following pages before applying Rivieccio’s representation
theorems [11] to extend the following observations to all interlaced trilattices with
inversions ˙¬ t and ˙¬ f .
Again, we proceed by showing a correspondence between logical trilattices of
the form ⟨A ⊙A, F⟩and ⟨FOUR2 ⊙FOUR2, FOUR2 × {⊤, t}⟩before demon-
strating a correspondence between the latter logical trilattice and AC. An essential
ingredient in this correspondence is a ﬁnal notion of similarity.
Deﬁnition 6.5.10 Consider two logical trilattices ⟨A0 ⊙A0, A0 × F0⟩and ⟨A1 ⊙
A1, A1 × F1⟩where F0 and F1 are prime biﬁlters on A0 and A1, respectively. Then

6.5 Analytic Logic on Trilattices
157
two elements ⟨a, b⟩∈A0 × A0 and ⟨a′, b′⟩∈A1 × A1 are ˙¬ tf -similar—written
⟨a, b⟩≃tf ⟨a′, b′⟩—if:
• ⟨a, b⟩≃t ⟨a′, b′⟩, and
• ˙¬ tf ⟨a, b⟩≃t ˙¬ tf ⟨a′, b′⟩
Observation 6.5.4 For two logical trilattices ⟨A0 ⊙A0, A0 × F0⟩and ⟨A1 ⊙A1,
A1 × F1⟩, for all elements ⟨a, b⟩∈A0 × A0 and ⟨a′, b′⟩∈A1 × A1,
⟨a, b⟩≃tf ⟨a′, b′⟩if and only if

b ≃b′, and
a ≃a′
where similarity simpliciter (i.e., ≃) is considered with respect to logical bilattices
⟨A0, F0⟩and ⟨A1, F1⟩.
Proof An immediate consequence of Lemma 6.5.1 is that
⟨a, b⟩≃tf ⟨a′, b′⟩holds if and only if b ≃b′.
Moreover, if we note that the claim that ˙¬tf ⟨a, b⟩≃t ˙¬tf ⟨a′, b′⟩is equivalent to
⟨˙¬ b, ˙¬ a⟩≃tf ⟨˙¬ b′, ˙¬ a′⟩, Lemma 6.5.1 entails that this is equivalent to the state-
ment that ˙¬ a ≃˙¬ a′, i.e., a ≃a′.
□
As before, we again extend a notion of similarity to valuations on trilattices, although
in this case, we consider ˙¬ tf -Kleene-Fitting valuations.
Deﬁnition 6.5.11 We say that two ˙¬ tf -Kleene-Fitting valuations v0 and v1 are ˙¬ tf -
similar if for all atoms p:
v0(p) ≃tf v1(p)
And we prove a fundamental principle concerning ˙¬ tf -similar valuations.
Observation 6.5.5 Where v0 and v1 are ˙¬ tf -Kleene-Fitting valuations on log-
ical trilattices ⟨A0 ⊙A0, A0 × F0⟩and ⟨A1 ⊙A1, A1 × F1⟩such that v0 ≃tf v1,
v0(A) ≃tf v1(A) for all formulae A ∈L.
Proof Suppose that v0 and v1 are ˙¬ tf -similar. Then we prove the observation by
induction on complexity of formulae.
As induction hypothesis for two formulae A, B ∈L, let v0(A) = ⟨a0, b0⟩, v0(B) =
⟨a1, b1⟩, v1(A) = ⟨a′
0, b′
0⟩, and v1(B) = ⟨a′
1, b′
1⟩and assume that v0(A) ≃tf v1(A) and
v0(B) ≃tf v1(B). More explicitly, by Observation 6.5.4, this entails that a0 ≃a′
0,
a1 ≃a′
1, b0 ≃b′
0, and b1 ≃b′
1 all hold.
In the case of negation, involutivity of ˙¬ t ensures that the result holds. In partic-
ular, that a0 ≃a′
0 and b0 ≃b′
0 entails that ˙¬ a0 ≃˙¬ a′
0 and ˙¬ b0 ≃˙¬ b′
0, entailing
that ⟨˙¬ b0, ˙¬ a0⟩≃tf ⟨˙¬ b′
0, ˙¬ a′
0⟩, i.e., v0(¬A) ≃tf v1(¬A).
In the case of conjunction and disjunction, note that v0(A ∧B) = ⟨a0 △a1, b0 △
b1⟩and v1(A ∧B) = ⟨a′
0 △a′
1, b′
0 △b′
1⟩. By Observation 6.5.4, the matter of deter-
mining ˙¬ tf -similarity between v0(A ∧B) and v1(A ∧B) reduces to the matter of

158
6
Cut-Down Operations on Multilattices
determining whether a0 △a1 ≃a′
0 △a′
1 and b0 △b1 ≃b′
0 △b′
1. Likewise, whether
v0(A ∨B) ≃tf v1(A ∨B) stands or falls alongside the matter of whether both a0 △
a1 ≃a′
0 △a′
1 and b0 ▽b1 ≃b′
0 ▽b′
1 hold.
The details of Observation 6.2.8 ensure that if a0 ≃a′
0 and a1 ≃a′
1 both hold, then
also a0 △a1 ≃a′
0 △a′
1 and a0 ▽a1 ≃a′
0 ▽a′
1 (and mutatis mutandis when b0 ≃b′
0
and b1 ≃b′
1). Hence, the induction hypothesis entails that v0(A ∧B) ≃tf v1(A ∧B)
and v0(A ∨B) ≃tf v1(A ∨B).
□
Deﬁnition 6.5.12 Let g′
⟨A⊙A,A×F⟩: A × A →FOUR2 × FOUR2 bedeﬁnedsothat:
g′
⟨A⊙A,A×F⟩(a, b) = ⟨˙¬(
ι
x.a ∈T ⟨A,F⟩
x
),
ι
y.b ∈T ⟨A,F⟩
y
⟩.
Lemma 6.5.7 If v is a ˙¬ tf -Kleene-Fitting valuation on ⟨A ⊙A, A × F⟩where
⟨A, F⟩is a logical bilattice, then the function g′
⟨A⊙A,A×F⟩◦v is a ˙¬ tf -Kleene-
Fitting valuation on ⟨SIXT EEN 3, FOUR2 × {⊤, t}⟩such that v ≃tf g′
⟨A⊙A,A×F⟩
◦v.
Proof Theconstructionof g′
⟨A⊙A,A×F⟩guaranteesthat(g′
⟨A⊙A,A×F⟩◦v)(p) ≃tf v(p)
for each atom p, entailing that g′
⟨A⊙A,A×F⟩◦v ≃tf v.
□
The sum of these observations swiftly yields the corollary that SIXT EEN 3 retains
its fundamental role in the theory of trilattices when negation is interpreted by ˙¬ tf .
The primary theorem will be proven by appealing to a sequence of equivalences
described in the following observations:
Observation 6.5.6 For a logical trilattice ⟨A ⊙A, A × F⟩and set of formulae Γ ∪
{A}, we have the following equivalence:
Γ ⊨⟨A⊙A,A×F⟩
KF[ ˙¬ tf ]
A if and only if Γ ⊨⟨SIXT EEN 3,FOUR2×{⊤,t}⟩
KF[ ˙¬ tf ]
A.
Proof For right-to-left, suppose that Γ ⊭⟨A⊙A,A×F⟩
KF[ ˙¬ tf ]
A and let v be a ˙¬ tf -Kleene-
Fitting valuation such that v[Γ ] ⊆A × F although v(A) /∈A × F. Then by Lemma
6.5.7, we may infer that (g′
⟨A⊙A,A×F⟩◦v)(B) ≃tf v(B) for each B ∈Γ ∪{A}, entail-
ing that (g′
⟨A⊙A,A×F⟩◦v) witnesses that Γ ⊭⟨SIXT EEN 3,FOUR2×{⊤,t}⟩
KF[ ˙¬ tf ]
A.
For left-to-right, we can without loss of generality assume that FOUR2 ⊆A and
that {⊤, t} ⊆F. Hence, a ˙¬ tf -Kleene-Fitting valuation v on SIXT EEN 3 is a for-
tiori a valuation on A ⊙A. Thus, whenever v serves as a countermodel to an infer-
ence Γ ⊨⟨SIXT EEN 3,FOUR2×{⊤,t}⟩
KF[ ˙¬tf ]
A, v also serves as a countermodel to the inference
Γ ⊨⟨A⊙A,A×F⟩
KF[ ˙¬tf ]
A.
□
Observation 6.5.7 For all sets of formulae Γ ∪{A}, we have the following:
Γ ⊨⟨SIXT EEN 3,FOUR2×{⊤,t}⟩
KF[ ˙¬tf ]
A if and only if Γ ⊨AC A.

6.5 Analytic Logic on Trilattices
159
Proof Recall the bijection h⋆between FOUR2 and VSfde from the proof of Obser-
vation 6.2.2 and deﬁne the map g⋆: FOUR2 × FOUR2 →VSfde × VSfde so that:
g⋆(x, y) = ⟨h⋆(y), f ¬
Sfde(h⋆(x))⟩.
To begin, there are several trivial observations that we can make. For one, it is clear
that g⋆is bijective. It is also immediate to note that the image of FOUR2 × {⊤, t}
under g⋆is precisely the set of designated values of AC′.
What remains to be shown is that g⋆preserves operations between the two struc-
tures. In the case of negation, this is relatively simple, with the steps in the following
justiﬁcation self-explanatory. Letting ⟨a, b⟩∈FOUR2 × FOUR2, we have the fol-
lowing:
g⋆( ˙¬tf ⟨a, b⟩) = g⋆(⟨˙¬ b, ˙¬ a⟩)
= ⟨h⋆( ˙¬ a), f ¬
Sfde(h⋆( ˙¬ b)⟩
= ⟨f ¬
Sfde(h⋆(a)), f ¬
Sfde(f ¬
Sfde(h⋆(b)))⟩
= ⟨f ¬
Sfde(h⋆(a), h⋆(b)⟩
= f ¬
AC′(⟨h⋆(b), f ¬
Sfde(h⋆(a))⟩
= f ¬
AC′(g⋆(⟨a, b⟩)
It follows that if v0 is a ˙¬tf -Kleene-Fitting valuation on SIXT EEN 3 and v1 is an
AC′ valuation such that g⋆(v0(A)) = v1(A), then:
g⋆(v0(¬A)) = g⋆( ˙¬tf v0(A)) = f ¬
AC′(v1(A)) = v1(¬A)
Likewise, in the case of weak conjunction,
g⋆(⟨a, b⟩△t ⟨a′, b′⟩) = g⋆(⟨a △a′, b △b′⟩)
= ⟨h⋆(b △b′), f ¬
Sfde(h⋆(a △a′))⟩
= ⟨f ∧
Sfde(h⋆(b), h⋆(b′)), f ¬
Sfde(f ∧
Sfde(h⋆(a), h⋆(a′)))⟩
= ⟨f ∧
Sfde(h⋆(b), h⋆(b′)), f ∨
Sfde(f ¬
Sfde(h⋆(a)), f ¬
Sfde(h⋆(a′)))⟩
= f ∧
AC′(⟨h⋆(b), f ¬
Sfde(h⋆(a))⟩, ⟨h⋆(b′), f ¬
Sfdeh⋆(a′))⟩)
= f ∧
AC′(g⋆(⟨a, b⟩), g⋆(⟨a′, b′⟩))
Now, consider ˙¬ tf -Kleene-Fitting and AC′ valuations v0 and v1, respectively, where
g⋆(v0(A)) = v1(A) and g⋆(v0(B)) = v1(B). Then:
g⋆(v0(A ∧B)) = g⋆(v0(A) △v0(B)) = f ∧
AC′(v1(A), v1(B)) = v1(A ∧B).
Hence, given a ˙¬ tf -Kleene-Fitting valuation v on SIXT EEN 3 serving to demon-
strate that Γ ⊭⟨SIXT EEN 3,FOUR2×{⊤,t}⟩
KF[ ˙¬tf ]
A, the function g⋆◦v is an AC′ valuation
acting as a countermodel to the inference Γ ⊨AC′ A. But Lemma 6.5.6 establishes
that AC′ consequence is identical to AC consequence, whence Γ ⊭AC A.

160
6
Cut-Down Operations on Multilattices
Likewise, if Γ ⊭AC A then there exists an AC′ valuation such that v[Γ ] ⊆DAC′
and v(A) /∈DAC′. But as g⋆is an isomorphism, the function (g⋆)−1 ◦v will be a
˙¬ tf -Kleene-Fitting valuation establishing that Γ ⊭⟨SIXT EEN 3,FOUR2×{⊤,t}⟩
KF[ ˙¬tf ]
A.
□
Theorem 6.5.1 Let ⟨T , F⟩be a logical trilattice with inversions ˙¬ t and ˙¬ f where
T is interlaced. Then for all sets of formulae Γ ∪{A} ⊆L,
Γ ⊨⟨T ,F⟩
KF[ ˙¬tf ] A if and only if Γ ⊨AC A
Proof By Rivieccio’s Theorem 6.4.2 and Lemma 6.4.2, ⟨T , F⟩is isomorphic to a
logical trilattice ⟨A ⊙A, A × F⟩. We may then appeal to Observations 6.5.6 and
6.5.7 to prove equivalence between consequence with respect to ˙¬ tf -Kleene-Fitting
valuations on ⟨T , F⟩and consequence in AC.
□
Hence, whenever negation is identiﬁed with the inversion ˙¬ tf , the logic of cut down
operations on interlaced trilattices is captured by Angell’s AC.
6.6
Future Directions
There are two promising directions in which the foregoing work on cut-downs can be
taken. Obviously, the results of Sect.6.5 are limited insofar as the correspondences
described therein hold only for interlaced trilattices. Although interlacing is a very
natural property, it is obviously desirable to improve these results to hold for all
logical trilattices.
A further limitation lies in the fact that the results in Sect.6.3 are limited insofar as
the observations apply only to the bilattice NINE2. Of course, there are numerous
possible generalizations of Damásio and Pereira’s operation of not to bilattices in
general. The question of how to generalize not and how the generalized operations
relate to AC in general is worth pursuing.
In Chap.5, we had considered Shramko and Wansing’s appeal to SIXT EEN 3
as a representation of the logic of networks of Belnap computers in [14]. If trilattices
indeed constitute a natural model for such Shramko-Wansing networks, Angell’s
AC emerges naturally in both the context of Belnap computers and networks of
such computers. From an interpretative standpoint, then, it is plausible there is a
correspondinginterpretationofACasthelogicoffaultyShramko-Wansingnetworks,
i.e., networks of Belnap computers in which catastrophic errors may occur.
Finally, we have seen a host of other many-valued logics qualifying as ‘Parry.’
Whether bilattice semantics can be given for these systems is worth investigating.
For example, given the interpretation of the Daniels-Priest logic S⋆
fde as the logic of
faulty Belnap computers in Chap.5, one might anticipate that it would have been this
system—rather than the Deutsch-Oller system Sfde—that arises in the context of cut

6.6 Future Directions
161
down operations on multilattices. It is worth investigating whether S⋆
fde corresponds
to any salient operations on multilattices.
At this point, we have considered a number of semantical frameworks within
which Angell’s AC can be deﬁned. In the next chapter, we revisit the ﬁrst semantics
for AC, described by Fabrice Correia in [4].
References
1. Arieli, O., Avron, A.: Logical bilattices and inconsistent data. In: Proceedings of 9th Annual
IEEE Symposium on Logic in Computer Science, pp. 468–476. IEEE Computer Society, Los
Alamitos, CA (1994)
2. Arieli, O., Avron, A.: Reasoning with logical bilattices. J. Logic Lang. Inform. 5(1), 25–63
(1996)
3. Arieli, O., Avron, A.: The logical role of the four-valued bilattice. In: Proceedings of 30th
Annual IEEE Symposium on Logic in Computer Science, pp. 118–126. IEEE Computer Soci-
ety, Los Alamitos, CA (1998)
4. Correia, F.: Semantics for analytic containment. Stud. Logica. 77(1), 87–104 (2004)
5. Damásio, C.V., Pereira, L.M.: A model theory for paraconsistent logic programming. In: Pinto-
Ferreira, C., Mamede, N.J (eds.) Progress in Artiﬁcial Intelligence, vol. 990, pp. 377–386.
Springer, London (1995)
6. Fitting, M.: Bilattices in logic programming. In: Epstein, G. (ed.) Proceedings of 20th Inter-
national Symposium on Multiple-Valued Logic (ISMVL 1990), pp. 238–246. IEEE Computer
Society, Los Alamitos, CA (1990)
7. Fitting, M.: Kleene’s three-valued logics and their children. Fundamenta Informaticae 20(1–3),
113–131 (1994)
8. Fitting, M.: Bilattices are nice things. In: Bolander, T., Hendricks, V., Pedersen, S.A. (eds.)
Self-reference, pp. 53–77. CSLI Publications, Stanford (2006)
9. Ginsberg, M.: Multi-valued logics. In: Proceedings of Fifth National Conference on Artiﬁcial
Intelligence (AAAI 1986), pp. 243–247. Morgan Kaufmann, Los Altos (1986)
10. Ginsberg, M.: Multivalued logics: a uniform approach to reasoning in artiﬁcial intelligence.
Comput. Intell. 4(3), 265–316 (1988)
11. Rivieccio, U.: Representation of interlaced trilattices. J. Appl. Logic 11(2), 174–189 (2013)
12. Shramko, Y.: Truth, falsehood, information, and beyond: The American plan generalized. In:
Bimbó, K., Michael, J. (eds.) Dunn on Information Based Logics, Outstanding Contributions
to Logic, vol. 8, pp. 191–212. Springer, Dordrecht (2016)
13. Shramko, Y., Dunn, J.M., Takenaka, T.: The trilattice of constructive truth values. J. Logic
Comput. 11(1), 761–788 (2001)
14. Shramko, Y., Wansing, H.: Some useful 16-valued logics: How a computer network should
think. J. Philosophical Logic 35(2), 121–153 (2005)

Chapter 7
Correia Semantics Revisited
Abstract In this chapter, the correspondence between the present many-valued
semantics for AC and those of Correia is revisited and studied in more details.
The technique that plays an essential role in proving the completeness of the many-
valued semantics for AC in Chap.4 is used to characterize a wide class of ﬁrst-degree
calculi intermediate between AC and classical logic in Correia’s setting. This cor-
respondence allows the correction of an incorrect characterization of classical logic
made by Correia and leads to the question of how to characterize hybrid systems
extending Angell’s AC∗. Finally, we consider whether this correspondence aids in
providing an interpretation to Correia’s ﬁrst semantics for AC.
Despite a renewed interest in Angell’s logic of analytic containment (AC), Cor-
reia’s semantics for AC has remained largely unexamined. This chapter describes
a reasonable approach to Correia semantics by means of a correspondence with a
nine-valued semantics for AC. The present inquiry employs this correspondence to
provide characterizations of a number of propositional logics intermediate between
ACandclassicallogic.Inparticular,weexamineCorreia’spurportedcharacterization
of classical logic with respect to his semantics, showing the condition Correia cites
in fact characterizes the ‘logic of paradox’ LP and provide a correct characterization.
Finally, we consider some remarks on related matters, such as the applicability of
the present correspondence to the analysis of the system AC∗and an intriguing rela-
tionship between Correia’s models and articular models for ﬁrst-degree entailment.
7.1
Introduction
In [1, 2], Richard Angell introduced the systems AC and AC∗corresponding to a
notion of analytic containment in which entailment is characterized as the contain-
ment of one proposition within another. Although Correia provided the ﬁrst semanti-
cal account of AC in [7], the semantics was not accompanied by any intuitive interpre-
© Springer International Publishing AG 2017
T. M. Ferguson, Meaning and Proscription in Formal Logic,
Trends in Logic 49, https://doi.org/10.1007/978-3-319-70821-8_7
163

164
7
Correia Semantics Revisited
tation. Although many of the more recent interpretations have come equipped with
corresponding semantics for AC, the object of study in this discussion is Correia’s
semantics of [7].
Although Correia describes the semantics of [7] as ‘unusual,’ the framework still
appears to be authentically semantic in nature, that is, at ﬁrst blush, the models
are not merely a clever trick to transform syntax into semantics. Importantly, Cor-
reia’s ﬁrst semantics is not speciﬁc merely to AC, but, as Correia shows, provides
a framework within which other deductive systems may be characterized. As an ill-
understood semantical framework that captures the behavior of multiple deductive
systems, Correia’s semantics deserves deeper investigation; such an investigation has
so far been missing.
In the present study, the correspondence between the nine-valued, truth functional
semantics described in Chap.5 and Correia’s models is examined anew. This cor-
respondence yields not only a simple avenue towards further characterizations of
deductive systems in terms of Correia’s models but insight into these properties and
why they emerge in Correia semantics.
7.2
Analytic Containment and Correia Semantics
In this section, we will ﬁrst examine the proof-theoretical account of analytic con-
tainment before proceeding to examine two semantical approaches: the account of
Correia models introduced in [7] and the many-valued account introduced in [13].
Further semantics have appeared in recent years but will not be reproduced here; the
reader is referred to [8, 15, 17] for accounts of these alternative approaches to AC.
7.2.1
Semantical Preliminaries
We have described Correia’s semantics for AC in Sect.5.3.1 but are now interested
not only in how this semantics characterizes AC, but the conditions under which
other deductive systems may be captured. To this end, we will have to consider a
more general notion of validity in which only restricted classes of Correia models
are considered.
Deﬁnition 7.2.1 We say that a formula A →B is valid with respect to a class of
Correia models X if for all v ∈X such that ∅⊨v A, ∅⊨v B.
Deﬁnition 7.2.2 A ﬁrst-degree logic L is characterized by a set X of Correia mod-
els if
A →B is a theorem of L iff A →B is valid with respect to X.

7.2 Analytic Containment and Correia Semantics
165
Given the correspondence between the many-valued semantics for AC and vocab-
ulary closed Correia models, it will aid us to represent extensions of AC in a similar,
bilateral manner. Hence, we will will provide bilateral semantics for a host of systems
as restrictions on the matrix MAC. For example, we have considered two presenta-
tions of Efde: The unilateral account in Deﬁnition 3.1.17 and the bilateral account in
Deﬁnition 5.2.1. In the latter case, the set of bilateral truth values V∗
Efde is a subset of
VAC. Hence, the logical matrix of Deﬁnition 5.2.1 can be thought of as a restriction
of the matrix MAC of Deﬁnition 5.2.3.
Formally, we deﬁne the restriction of a logical matrix as follows:
Deﬁnition 7.2.3 WithrespecttoalogicalmatrixM = ⟨V, D, f ¬, f ∨, f ∧⟩,suppose
that there exists a set U ⊆V such that U is closed under f ¬, f ∨, and f ∧. Then the
restriction of M to the set U is the matrix
M ↾U= ⟨U, D ∩U, f ¬↾U, f ∨↾(U×U), f ∧↾(U×U)⟩.
Recall the Bochvar-Kleene logic 0 from Deﬁnition 2.2.4. Eventually, we will reex-
amine 0, although its semantics will be formulated as a restriction of AC rather
than the system from which AC is built. As we will have cause to return to 0 in the
sequel, it is ﬁtting to let this second presentation of 0 illustrate the restriction of the
matrix MAC.
Observation 7.2.1 Let V⋆
0 = {⟨t, f⟩, ⟨f, t⟩, ⟨u, u⟩}. Then
M0 ∼= MAC↾V⋆
0
Proof Let pr0 and pr1 be the projection operators projecting ordered pairs to their
ﬁrst and second elements, respectively. Simple calculation conﬁrms that pr0 is an
isomorphism, that is, pr0( f ¬
AC(⟨v, v′⟩)) = f ¬
AC↾V⋆
0 (pr0⟨v, v′⟩) and mutatis mutandis
for conjunction and disjunction.
□
7.2.2
Correlating the Two Semantics
In Chap.5, completeness of the nine-valued semantics was proven indirectly by
means of a construction showing that if A →B is a valid inference by the lights
of the nine-valued semantics, it is valid with respect to vocabulary closed Correia
models as well. This construction, however, provides a useful platform from which
we may characterize other notions of entailment in terms of Correia’s models. This
section introduces the construction and describes how it serves to interpret Correia’s
models.
Before reviewing the construction of Chap.5, it will be helpful to review and
introduce some properties of vocabulary closed Correia models. For example, we
characterize the class of vocabulary closed Correia models in a fashion alternative
to that of Deﬁnition 5.3.7:

166
7
Correia Semantics Revisited
Theorem 7.2.1 A Correia model v is vocabulary closed iff
v = {⟨Γ, Δ⟩| ∃⟨Γ ′, Δ′⟩∈G(v) s.t. ⟨Γ ′, Δ′⟩≼⟨Γ, Δ⟩≼⟨Γ ⋆
v , Δ⋆
v⟩}.
Proof Immediate from Deﬁnition 5.3.7 and Lemma 5.3.6.
□
Hence, that v is vocabulary closed is to say v is determined precisely by its set
of generators and its positive and negative vocabularies. This entails that when v is
vocabulary closed, all the information in v can be recovered from G(v) and ⟨Γ ⋆
v , Δ⋆
v⟩.
The set G(v) is essential in the correspondence between Correia models and the
nine-valued semantics. In this section, we will describe elements of the correspon-
dence necessary to the present study. Now, Deﬁnition 5.3.14 provided us a truth-
preserving method of translating Correia models into AC valuations that preserves
truth. If we want to study further correspondences, however, it will be necessary to
have a technique to translate AC valuations into Correia models whose theories are
identical. This Correia model will be called a Correia counterpart:
Deﬁnition 7.2.4 Let v be an AC valuation. Then the Correia counterpart of v is the
unique vocabulary closed Correia model c(v) where:
• ⟨Γ ⋆
c(v), Δ⋆
c(v)⟩= ⟨{p | pr1(v(p)) ̸= u}, {p | pr0(v(p)) ̸= u}⟩
• ⟨∅, {p}⟩∈c(v) iff v(p) ∈DAC
• ⟨{p}, ∅⟩∈c(v) iff v(¬p) ∈DAC
Theorem 7.2.2 ∅⊨c(v) A iff v(A) ∈DAC.
Proof It can be conﬁrmed that F(c(v)) is a singleton. Then ∅⊨c(v) A holds iff
∅⊩F(c(v)) A holds. But by Lemma 5.3.13, this is equivalent to saying that v(A) ∈
DAC.
□
7.2.3
A General Characterization Lemma
While characterizing different deductive systems by classes of Correia models, we
employ a similar scheme of proof for each case. Rather than rehearse a virtually
identical proof several times over, we will prove a lemma to which we may appeal
when necessary.
Lemma 7.2.1 (Characterization Lemma) Let L be a ﬁrst-degree logic characterized
by a matrix ML such that ML a restriction of MAC and let Φ be a property of some
vocabulary closed Correia models. Moreover, let the following two conditions hold:
• whenever v has property Φ then each vC ∈F(v) is an ML valuation
• whenever v is an ML valuation then c(v) has property Φ
Then L is characterized by the class of vocabulary closed models with property Φ.

7.2 Analytic Containment and Correia Semantics
167
Proof Suppose that L is such a restriction of AC and that the two conditions hold.
Then to prove that L is characterized by the class of vocabulary closed models
satisfying property Φ is to prove that A →B is a theorem of L iff for all vocabulary
closed Correia models v with property Φ, whenever ∅⊨v A, also ∅⊨v B.
For left-to-right, we prove the contrapositive. Suppose that there exists a vocab-
ulary closed Correia model satisfying Φ such that ∅⊨v A but ∅⊭v B. Then by
Lemma 5.3.13, there exists a vC ∈F(v) such that vC(A) ∈DAC but vC(B) /∈DAC.
By hypothesis, however, vC is an L valuation and—as a restriction of AC—this entails
that vC(A) ∈DL but vC(B) /∈DL. Hence, vC is an L valuation witnessing the failure
of A →B in L.
Forright-to-left,weagainprovethecontrapositive.Let A →B failtobeatheorem
of L and let v be an L valuation witnessing this fact. Then as L is by hypothesis a
restriction of AC, v is trivially an AC valuation. Now consider c(v). By Theorem
7.2.2, ∅⊨c(v) A although ∅⊭c(v) B. But c(v) by hypothesis has property Φ, whence
we infer the existence of a vocabulary closed model with property Φ at which A is
true but B is not true.
□
7.3
Correia Models and Other Propositional Logics
AC admits many equivalent presentations, one in which we are concerned with the
validity of formulae A →B from Lfdf (e.g., the presentation in [7, 15]) and the other
in which we are concerned with validity of an inference Γ ⊨AC B for Γ ⊆Lzdf and
B ∈Lzdf. Similarly, many propositional logics described in terms of a consequence
relation also admit a formulation as a ﬁrst-degree deductive system.
The contributions of Correia’s [7] go beyond a characterization of AC in terms of
his models; he also purports to characterize both the Belnap-Dunn logic Efde and
the classical logic CL itself in terms of classes of his models.
Inthissection,weemploytheinterpretationofCorreiamodelsassetsoftruthfunc-
tions in order to characterize a number of deductive systems intermediate between
AC and CL. Initially, we will examine Correia’s characterization of the Belnap-Dunn
logic of ﬁrst-degree entailment Efde to make clear the utility and methodology of
interpreting Correia models as collections of truth functions. Then, we will proceed
to characterize some other ﬁrst-degree logics in terms of Correia models. Finally, we
will examine Correia’s characterization of classical logic, showing it to be incorrect
and providing a correct characterization of classical logic in the framework of [7].
7.3.1
First-Degree Entailment
Within the many-valued framework, the bilateral semantics for the logic Efde of
Deﬁnition 5.2.1 can be viewed as a restriction of the nine-valued AC semantics in

168
7
Correia Semantics Revisited
which the set of truth values are restricted to those corresponding to truth, falsity,
both true and false, and neither true nor false.
Formally, this identity is expressed by the following observation:
Observation 7.3.1 M⋆
Efde = MAC↾V⋆
Efde
Note that V⋆
Efde is closed under the truth functions of AC; this will be the case for
every restriction of AC considered in the sequel.
From a proof-theoretic perspective, as veriﬁed in [7], Efde can be obtained from
AC by adding the axiom A →A∨B. In [7], Correia also provides a characterization
of Efde with respect to Correia models satisfying the following condition:
Deﬁnition 7.3.1 (Condition TE) For all ﬁnite sets of atoms Γ , Γ ′, Δ, and Δ′ if
⟨Γ, Δ⟩∈v then ⟨Γ ∪Γ ′, Δ ∪Δ′⟩∈v
To analyze Correia’s result and provide similar characterizations to other deductive
systems, we introduce a property equivalent to Condition TE.
Deﬁnition 7.3.2 The language closure of a Correia model v—symbolized [[[v]]]—is
the smallest Correia model v′ extending v such that
• for all Correia pairs ⟨Γ, Δ⟩, if there exists a ⟨Γ ′, Δ′⟩∈v such that ⟨Γ ′, Δ′⟩≼
⟨Γ, Δ⟩, then ⟨Γ, Δ⟩∈v′
I.e., the set {⟨Γ, Δ⟩| ∃⟨Γ ′, Δ′⟩∈v s.t. ⟨Γ ′, Δ′⟩≼⟨Γ, Δ⟩≼⟨At, At⟩}. We say
that a Correia model v is language closed if v = [[[v]]].
It is clear that these are equivalent conditions.
Observation 7.3.2 v is language closed iff v enjoys Condition TE.
In order to demonstrate the utility Lemma 7.2.1, we will prove Correia’s result by
means of the following lemmas.
Lemma 7.3.1 If v is language closed then for all vC ∈F(v), vC is an Efde valuation.
Proof Suppose that v is a language closed Correia model. Then for all p ∈At, p ∈
Δ⋆
v and p ∈Γ ⋆
v . Hence, for any C ∈(G(v)τ), we observe that both pr0(vC(p)) ̸=
u, and pr1(vC(p)) ̸= u. Hence, the range of vC is necessarily a subset of {⟨t, f⟩, ⟨f, t⟩,
⟨t, t⟩, ⟨f, f⟩}, i.e., the range of vC is a subset of V⋆
Efde. But this is just to say that vC is
a bilateral Efde valuation.
□
Lemma 7.3.2 If v is a bilateral Efde valuation, then c(v) is language closed.
Proof Let v be a bilateral Efde valuation; for no atomic formula p is either pr0(v(p))
= u or pr1(v(p)) = u. Now, as neither coordinate of the value of any atom p is u,
Γ ⋆
c(v) = Δ⋆
c(v) = At. As c(v) is by construction vocabulary closed so that all atomic
formulae appear in both its positive and negative vocabularies, it follows that c(v) is
language closed.
□

7.3 Correia Models and Other Propositional Logics
169
With the assistance of Lemma 7.2.1, Lemmas 7.3.1 and 7.3.2 yield the theorem
immediately.
Theorem 7.3.1 Efde is characterized by the class of language closed Correia mod-
els.
By following this general strategy, we are able to provide natural characterizations
of numerous deductive systems in terms of Correia semantics.
First, we will examine ‘analytic’ extensions of AC—those sharing a strong rel-
evance property to be described in the sequel—before characterizing a few non-
‘analytic’ extensions. Finally, we will turn our attention to the proper characterization
of classical logic.
7.3.2
‘Analytic’ Extensions
We have noted that AC is ‘analytic’ in the sense employed by Parry, i.e., that AC
enjoys the Proscriptive Principle. We have already encountered other ﬁrst-degree
logics that are ‘analytic’ in this sense which may be characterized in a bilateral
fashion as restrictions of MAC. Two such systems that admit an analysis in terms
of Correia models are S⋆
fde described in [10] and Sfde described in [11]—the ﬁrst-
degree fragments of Charles Daniels’ ‘story semantics’ of [9] and Harry Deutsch’s
logic S of [12].
We will thus provide bilateral semantics for these two systems as restrictions of
MAC:
Deﬁnition 7.3.3 A bilateral semantics is given for the ﬁrst-degree formulation of
S⋆
fde by the matrix MS⋆
fde = MAC↾V⋆
S⋆
fde where
V⋆
S⋆
fde = {⟨t, t⟩, ⟨t, f⟩, ⟨f, t⟩, ⟨f, f⟩, ⟨u, u⟩}
Deﬁnition 7.3.4 A bilateral semantics is given for the ﬁrst-degree formulation of
Sfde by the matrix MSfde = MAC↾V⋆
Sfde where
V⋆
Sfde = {⟨t, t⟩, ⟨t, f⟩, ⟨f, t⟩, ⟨u, u⟩}
Note that we are employing the decoration of ⋆to indicate that the set of truth values
considered is bilateral.
The distinction between these systems and AC may be illustrated by examining the
theorems that hold in the stronger logics. For example, the formula A →A∨¬A fails
in AC, as the fact that v(A) ∈DAC is not sufﬁcient to guarantee that pr1(v(A)) ̸= u;
on the ‘nonsense’ reading of the truth value u (as in [6]), this is to say that the
positive content of a proposition may be meaningful while its negative content is
not. However, simple calculation conﬁrms that this formula is in fact a theorem of
S⋆
fde, as the meaningfulness of a proposition and its negation stand or fall together.

170
7
Correia Semantics Revisited
On the interpretation of, e.g., [4, 5], Sfde results from S⋆
fde by eliminating the
possibility of a proposition’s being neither true nor false by ﬁat. Hence, the mere
mention of a proposition B entails that tertium non datur holds of B; this is captured
by a restricted excluded middle, witnessed by the validity of the formula A ∨B →
B ∨¬B in Sfde.
Let us proceed to characterize these systems with respect to Correia semantics.
First we will examine properties corresponding to S⋆
fde.
Deﬁnition 7.3.5 A Correia model v is unsigned if Γ ⋆
v = Δ⋆
v.
Lemma 7.3.3 If v is an unsigned and vocabulary closed Correia model then for all
vC ∈F(v), vC is a bilateral S⋆
fde valuation.
Proof Let v be an unsigned and vocabulary closed valuation. Then for each vC ∈
F(v), vC is an AC valuation by deﬁnition. However, for an atomic formula p, as
Γ ⋆
v = Δ⋆
v, we observe that
pr0(vC(p)) = u iff p /∈Γ ⋆
v iff p /∈Δ⋆
v iff pr1(vC(p)) = u.
Hence, the ﬁrst coordinate of a truth value vC(A) is u iff its second coordinate is u.
This strikes ⟨t, u⟩, ⟨f, u⟩, ⟨u, t⟩, and ⟨u, f⟩as possible values, effectively restricting
the set of truth values to V⋆
S⋆
fde. As this set is closed under the truth functions of AC,
this entails that each such vC is an S⋆
fde valuation.
□
Lemma 7.3.4 If v is an S⋆
fde valuation then c(v) is an unsigned, vocabulary closed
Correia model.
Proof If v is an S⋆
fde valuation then v is a fortiori an AC valuation and c(v)
is by construction vocabulary closed. Now, as for any p ∈At pr0(v(p)) = u
iff pr1(v(p)) = u, this entails that Γ ⋆
c(v) = Δ⋆
c(v). But this entails that c(v) is
unsigned.
□
Again, Lemma 7.2.1 entails that we may infer the following theorem from Lemmas
7.3.3 and 7.3.4.
Theorem 7.3.2 The Daniels-Priest logic S⋆
fde is characterized by the class of
unsigned and vocabulary closed Correia models.
Now, let us examine the stronger property corresponding to Sfde.
Deﬁnition 7.3.6 A Correia model v is relatively complete if for every p ∈Γ ⋆
v ∪Δ⋆
v,
⟨{p}, {p}⟩∈v.
We can make the following observations about relatively complete Correia models.
Lemma 7.3.5 If v is relatively complete, then v is unsigned.

7.3 Correia Models and Other Propositional Logics
171
Proof Clearly, that a model v is relatively complete entails that v is unsigned; if v is
relatively complete, then
p ∈Γ ⋆
v iff ⟨{p}, {p}⟩∈v iff p ∈Δ⋆
v.
□
Lemma 7.3.6 If v is a relatively complete and vocabulary closed Correia model
then for all vC ∈F(v), vC is a bilateral Sfde valuation.
Proof Assume v to be relatively complete and vocabulary closed. By Lemma 7.3.5,
v is also unsigned, whence for any vC ∈F(v), the range of vC is a subset of V⋆
S⋆
fde.
However, the value ⟨f, f⟩is likewise not admissible. As ⟨{p}, {p}⟩∈v, every vC ∈
F(v) is such that either pr0(vC(p)) = t or pr1(vC(p)) = t whenever p ∈Γ ⋆
v ∪Δ⋆
v.
Hence, the set of truth values to which any atom may be mapped is V⋆
S⋆
fde ∖{⟨f, f⟩}.
But this is just V⋆
Sfde.
□
Lemma 7.3.7 If v is a bilateral Sfde valuation then c(v) is a relatively complete
and vocabulary closed Correia model.
Proof If v is a bilateral Sfde valuation, then it is a fortiori an S⋆
fde valuation, whence
we infer that c(v) is unsigned and vocabulary closed. Consider an arbitrary p ∈
Γ ⋆
c(v)∪Δ⋆
c(v). As v is an Sfde valuation such that neither coordinate of v(p) is u, either
v(p) ∈D⋆
Sfde or v(¬p) ∈D⋆
Sfde. Hence, either ⟨{p}, ∅⟩∈c(v) or ⟨∅, {p}⟩∈c(v).
But as Γ ⋆
c(v) = Δ⋆
c(v), either option entails that ⟨{p}, {p}⟩∈c(v), whence we infer
that c(v) is relatively complete.
□
From Lemmas 7.2.1, 7.3.6, and 7.3.7, we infer the following:
Theorem 7.3.3 The Deutsch-Oller logic Sfde is characterized by the class of rela-
tively complete and vocabulary closed Correia models.
7.3.3
Non-‘Analytic’ Extensions
There are a number of popular and much-studied deductive systems intermediate
between AC and classical logic that fail to enjoy the Proscriptive Principle. In this
section, we will characterize three such systems with respect to Correia’s semantics.
Inasmuch as the truth functional semantics for AC is intimately related to those for
0, it is a natural question to ask whether 0 itself can be given Correia semantics.
We thus turn to providing properties that in fact correspond to 0.
Deﬁnition 7.3.7 A Correia model v is consistent if for all ⟨Γ, Δ⟩, ⟨Γ ′, Δ′⟩∈G(v),
Δ ∩Γ ′ = ∅.

172
7
Correia Semantics Revisited
Deﬁnition 7.3.8 A vocabulary closed Correia model v is relatively determinate if v
is consistent and relatively complete.
Lemma 7.3.8 If a vocabulary closed Correia model is relatively determinate then
for each p ∈Γ ⋆
v ∪Δ⋆
v, precisely one of the following holds:
a ⟨{p}, ∅⟩∈v
b ⟨∅, {p}⟩∈v.
Proof Let v be vocabulary closed and relatively determinate and consider an arbitrary
p ∈Γ ⋆
v ∪Δ⋆
v.Thenbyrelativecompleteness,⟨{p}, {p}⟩∈v.However,consistencyof
v entails that ⟨{p}, {p}⟩/∈G(v). Hence, there must be some ⟨Γ, Δ⟩∈G(v) such that
⟨Γ, Δ⟩≼⟨{p}, {p}⟩, and the only Correia pairs that can witness this are ⟨{p}, ∅⟩and
⟨∅, {p}⟩. Consistency again prevents both these pairs from simultaneously appearing
in G(v), whence we conclude that precisely one of these pairs is found in v.
□
Lemma 7.3.9 If v is vocabulary closed, unsigned, and relatively determinate, then
the range of each vC ∈F(v) is a subset of {⟨t, f⟩, ⟨f, t⟩, ⟨u, u⟩}.
Proof Let v be vocabulary closed, unsigned, and relatively determinate. By def-
inition, v is also relatively complete, and by Lemma 7.3.6, this entails that each
vC ∈F(v) is a bilateral Sfde valuation, i.e., maps each atom p to a value of V⋆
Sfde.
However, that v is relatively determinate entails that every such vC cannot map for-
mulae to the value ⟨t, t⟩, as for any C ∈(G(v)τ), consistency entails that for no
⟨Γ, Δ⟩, ⟨Γ ′, Δ′⟩∈G(v) will C(⟨Γ, Δ⟩τ) = C(⟨Γ ′, Δ′⟩τ). Hence, the set of values
to which vC can map an atom p is V⋆
Sfde ∖{⟨t, t⟩}.
□
Lemma 7.3.10 Let v be an MAC↾V⋆
0 valuation. Then c(v) is an unsigned and rela-
tively determinate vocabulary closed Correia model.
Proof As v is trivially an Sfde valuation, we already may infer that c(v) is unsigned,
relatively complete, and vocabulary closed. What remains, then, is to demonstrate
that c(v) is consistent. As c(v) is unsigned and relatively complete, for every
⟨Γ, Δ⟩∈G(c(v)), ⟨Γ, Δ⟩τ is a singleton. Hence, the only way that c(v) could
violate consistency would be if both ⟨{p}, ∅⟩∈c(v) and ⟨∅, {p}⟩∈c(v). But by
Theorem 7.2.2, this would entail that both v(p) ∈D⋆
0 and v(¬p) ∈D⋆
0, i.e.,
that v(p) = ⟨t, t⟩. But ⟨t, t⟩/∈V⋆
0, whence a violation of consistency is seen
to be impossible. Hence, c(v) is unsigned, relatively determinate, and vocabulary
closed.
□
As before, Lemmas 7.2.1, 7.3.9, and 7.3.10 yield the following:
Theorem 7.3.4 The logic 0 is characterized by the class of vocabulary closed
Correia models that are unsigned and relatively determinate.
Proof Lemmas 7.2.1, 7.3.9, and 7.3.10 jointly entail that the logic characterized
by the matrix MAC↾V⋆
0 corresponds to unsigned and relatively determinate Correia
models. By Observation 7.2.1, the Bochvar logic 0 is characterized by both M0
and MAC↾V⋆
0 . Hence, we may conclude that unsigned and relatively determinate
Correia models characterize 0.
□

7.3 Correia Models and Other Propositional Logics
173
We have discussed the strong Kleene logic in Sect.3.3.1, in which unilateral many-
valued semantics were given by Deﬁnition 3.3.5.
The ﬁrst-degree formulation of K3 also permits analysis in terms of Correia seman-
tics. To provide this characterization, we ﬁrst consider an alternative bilateral seman-
tics for K3 as a restriction of MAC.
Deﬁnition 7.3.9 A bilateral semantics for K3 is provided by the matrix M⋆
K3 =
MAC↾V⋆
K3 , where
V⋆
K3 = {⟨t, f⟩, ⟨f, t⟩, ⟨f, f⟩}.
The natural interpretation of the truth values of K3 is that the system permits propo-
sitions to be true, false, or neither true nor false.
Lemma 7.3.11 If v is a consistent and language closed Correia model then for all
vC ∈F(v), vC is a K3 valuation.
Proof Suppose that v is consistent and language closed. Then Γ ⋆
v = Δ⋆
v = At,
whence for each p and vC ∈F(v), we can conclude that
• by language closure, both pr0(vC(p)) ̸= u and pr1(vC(p)) ̸= u, and
• by consistency, either pr0(vC(p)) ̸= t or pr1(vC(p)) ̸= t.
Hence, the set of truth values to which an atom may be mapped by v is {⟨t, f⟩, ⟨f, t⟩,
⟨f, f⟩}, i.e., V⋆
K3. As V⋆
K3 is closed under each of the AC truth functions, this entails
that for arbitrary formulae A, vC(A) ∈V⋆
K3; in other words, vC is a K3 valuation. □
Lemma 7.3.12 If v is a K3 valuation, then c(v) is consistent and language closed.
Proof Let v be a K3 valuation. As K3 is an extension of Efde, we already understand
c(v) to be language closed. Hence, Γ ⋆
c(v) = Δ⋆
c(v). Consistency of c(v) may be
established by noting that ⟨t, t⟩/∈V⋆
K3 and following the steps in Theorem 7.3.4.
□
Lemmas 7.2.1, 7.3.11, and 7.3.12 entitle us to infer the following:
Theorem 7.3.5 ThestrongKleenelogic K3 is characterizedbytheclass of consistent
and language closed Correia models.
We have already appealed to the dual relationship between K3 and Priest’s logic of
paradox LP, presented in Deﬁnition 2.3.5, as documented in, e.g., [3]. This duality
allows us to interpret LP in a bilateral fashion as a restriction of MAC. It is thus
natural to expect Correia semantics for LP as well.
We begin by deﬁning LP in terms of MAC.
Deﬁnition 7.3.10 A bilateral semantics for LP is provided by the matrix M⋆
LP =
MAC↾V⋆
LP, where
V⋆
LP = {⟨t, f⟩, ⟨f, t⟩, ⟨t, t⟩}.

174
7
Correia Semantics Revisited
In other words, LP can be interpreted as the restriction of AC induced by demanding
that every proposition be either true or false (and perhaps both).
Lemma 7.3.13 If v is a relatively complete and language closed Correia model then
for all vC ∈F(v), v is a bilateral LP valuation.
Proof As before, from language closure of v and completeness relative to At, we
may infer that
• by language closure, both pr0(vC(p)) ̸= u and pr1(vC(p)) ̸= u, and
• by completeness relative to At, either pr0(vC(p)) = t or pr1(vC(p)) = t
for all vC ∈F(v) and p ∈At. We are thereby able to infer that vC must map each
atom to {⟨t, f⟩, ⟨f, t⟩, ⟨t, t⟩}. But this is V⋆
LP and we may conclude that each vC ∈F(v)
is a bilateral LP valuation.
□
Lemma 7.3.14 If v is a bilateral LP valuation, then c(v) is a relatively complete
and language closed Correia model.
Proof Let v be an LP valuation. By construction, Γ ⋆
c(v) = Δ⋆
c(v) = At, whence we
conclude that c(v) is language closed. As for all atoms p, either v(p) ∈D⋆
LP or
v(¬p) ∈D⋆
LP, either ⟨{p}, ∅⟩∈c(v) or ⟨∅, {p}⟩∈c(v). But each entails that
⟨{p}, {p}⟩∈c(v). As p was selected arbitrarily, this holds for all atoms, whence
c(v) is complete relative to At.
□
Lemmas 7.2.1, 7.3.13, and 7.3.14 secure for us the characterization of LP:
Theorem 7.3.6 The logic of paradox LP corresponds to the class of relatively com-
plete and language closed Correia models.
This permits an immediate corollary characterizing the ﬁrst-degree fragment of the
logic RM, i.e., R with the Mingle axiom. We have observed in Deﬁnition 3.3.9
that RMfde may be characterized by the union of unilateral LP valuations and K3
valuations. This obviously remains true when the LP and K3 valuations are treated
as restrictions of AC valuations.
Corollary 7.3.1 The logic RMfde is characterized by the class of language closed
Correia models that are either consistent or relatively complete.
Proof Immediate from Deﬁnition 3.3.9 and Theorems 7.3.5 and 7.3.6.
□
At this stage, we have characterized a number of deductive systems in terms of
Correia models. Anticipating the correct characterization of classical logic CL in the
next section, we thus arrive at the picture in Fig.7.1.

7.3 Correia Models and Other Propositional Logics
175
Fig. 7.1 First-degree systems intermediate between AC and CL
7.3.4
Correia’s Characterization of Classical Logic
We now turn to the question of the characterization of classical logic CL with respect
to Correia models. In [7], to yield classical consequence, Correia offers the condition:
Deﬁnition 7.3.11 (Condition PC) For all ﬁnite sets of atoms Γ , ⟨Γ, Γ ⟩∈v.
With this deﬁnition, Correia asserts the following:
Assertion 7.3.1 (Correia) Classical propositional logic is characterized by Correia
models enjoying both Conditions TE and PC.
We will proceed to show that Correia’s position, however, is incorrect. While classical
logic is complete with respect to such models, it is not sound.
Observation 7.3.3 The conjunction of Conditions TE and PC does not correspond
to CL inference.
Proof We provide a countermodel. Let w denote the set
{⟨{p0}, ∅⟩, ⟨∅, {p0}⟩} ∪{⟨{q}, {q}⟩| q ∈At}.
Now consider the Correia model [[w]], the vocabulary closure of w.
By construction, [[w]] satisﬁes Conditions TE and PC. However, although ∅⊨[[w]]
p0 ∧¬p0, for no q ̸= p0 does ∅⊨[[w]] q. Hence, [[w]] witnesses that p0 ∧¬p0 →q
fails, although this inference is classically valid.
□
In [7], Correia shows that the addition of axiom A →A ∨B to AC provides an
axiomatization of Efde and that this system is characterized by models satisfying
Condition TE. Correia next demonstrates that the addition of the axiom A →B∨¬B
to this axiomatization of Efde is sufﬁcient to provide an account of classical logic
CL. The fact that the inclusion of A →B ∨¬B to his axiomatization of Efde yields
classical logic and the fact that Efde is sound with respect to models satisfying
Condition TE jointly suggest a very natural strategy to approach to the soundness of
CL. To show CL to be sound with respect to models satisfying Conditions TE and
PC, merely prove that A →B ∨¬B holds in each model of this class.

176
7
Correia Semantics Revisited
The problem with this strategy is subtle. While all theorems of Efde are valid with
respect to models satisfying Conditions TE and PC, the rule of inference AC7—
explicitly appearing in the axiomatization of Efde—fails to hold with respect to
this class. As an example, consider a case in which for distinct p0, q ∈At, both
p0∨¬p0 →q∨¬q and q∨¬q →p0∨¬p0 are valid, while [[w]] (from Observation
7.3.3) witnesses the failure of ¬(p0 ∨¬p0) →¬(q ∨¬q).
Hence, it is in the presence of AC7 that the addition of A →B ∨¬B to Efde
generates classical logic. Without the validity of AC7, Conditions TE and PC will
correspond to a proper subsystem of CL.
Now, consider the question of which deductive system is in fact characterized by
the conjunction of Properties TE and PC.
Lemma 7.3.15 A language closed Correia model v enjoys Condition PC iff v is
relatively complete.
Proof Let v be language closed. Then the positive and negative vocabularies of v
are each equal to At itself. Hence, that v is relatively complete is equivalent to
⟨{p}, {p}⟩∈v for all p ∈At. As {p} is a ﬁnite set of atoms, Condition PC immedi-
ately entails relative completeness.
On the other hand, suppose v to be relatively complete and consider a ﬁnite set
of atoms Γ such that q ∈Γ . Then by relative completeness, ⟨{q}, {q}⟩∈v and by
language closure, ⟨Γ, Γ ⟩∈v. As Γ was selected arbitrarily, v satisﬁes Condition
PC.
□
Corollary 7.3.2 The conjunction of Conditions TE and PC characterizes the logic
LP.
This still leaves the question of how to properly characterize classical logic in terms
of Correia models.
First, let us examine the counterexample from Observation 7.3.3. Clearly, from
a semantical perspective, the responsible element of the counterexample is that in
the corresponding set of truth functions F([[w]]), each assigns both p0 and ¬p0 a
designated value (as both ⟨∅, {p0}⟩∈[[w]] and ⟨{p0}, ∅⟩∈[[w]]) without, e.g.,
necessitating that q take a designated value.
In order to correctly characterize classical logic, it is essential that we preclude
this from obtaining, i.e., we must permit that one and only one of ⟨∅, {p0}⟩and
⟨{p0}, ∅⟩appear in v. Recall from Deﬁnition 7.3.8 the notion of a Correia model’s
being relatively determinate.
We observe that it is relatively determinate language closed models that correctly
characterize classical logic.
Theorem 7.3.7 Classical logic CL is characterized by the class of language closed
models that are relatively determinate, i.e., are determinate relative to At.
Proof If v is both language closed and relatively determinate then the set of genera-
tors G(v) contains precisely one of ⟨{p}, ∅⟩or ⟨∅, {p}⟩for each p ∈At. Hence, the

7.3 Correia Models and Other Propositional Logics
177
set F(v) contains a single truth function v, the extension of which can be described
by the scheme:
v(p) =

⟨t, f⟩if ⟨∅, {p}⟩∈v
⟨f, t⟩if ⟨{p}, ∅⟩∈v
As the bilateral truth values ⟨t, f⟩and ⟨f, t⟩can be identiﬁed with the unilateral values
t and f, respectively, it can be readily seen that v is essentially a classical valuation
on At.
Hence, there is an isomorphism between the class of relatively determinate, lan-
guage closed Correia models on the one hand and classical truth functions on the
other. By means of Lemma 7.2.1, then, we may conﬁrm the theorem.
□
7.4
Conclusions and Future Research
In [7], Correia suggests two directions in which the study of AC should be taken:
the study of extensions of AC in languages with formulae of arbitrary degree (i.e.,
those in which one permits nested arrows) and the study of the interpretation of his
models. The ﬁrst has been tackled in Chap.5, in which the similarity between AC
and the ﬁrst-degree fragment of Parry’s PAI was exploited to describe a semantics
for a higher degree system of analytic containment in the style of Fine’s semantics of
[14]. It is hoped that in characterizing a host of systems in terms of Correia’s models,
the present inquiry goes some way to addressing the second of Correia’s suggestions.
There are some very obvious questions that remain, e.g., we have in this study
focused only on systems that have previously appeared in the literature. However—as
Fig.7.1 makes clear—there remain intermediate systems that correspond to classes
of Correia models that have not been described here. For example, considering only
those vocabulary closed Correia models that are consistent—without demanding
that these models be unsigned—would make the axiom A ∧¬A →B valid while
permitting counterexamples to the scheme A →A ∨¬A. To more fully catalog
these systems is left for future research.
Of course, the analysis of one problem in formal logic commonly poses as many
new questions as those it answers, and the present inquiry is little different. To close,
let us consider two further and more difﬁcult directions in which analysis of Correia
semantics may be taken.
7.4.1
Extensions of AC∗
The foregoing analysis yields more than just a further semantical account of some
many-valued logics. By applying the above characterizations to Correia’s analysis

178
7
Correia Semantics Revisited
of AC∗, these characterizations also suggest a way to enrich classical propositional
logic CL with operators corresponding to, e.g., LP entailment.
In [1], Angell describes a system that Correia calls AC∗, considered by both
Correia in [7, 8] and Fine in [15]. To deﬁne AC∗, we will need to appeal to a richer
language. This language L∗will be deﬁned as follows:
Deﬁnition 7.4.1 L∗is the language deﬁned in Backus-Naur form where p ∈At
and B ∈L⊃
fdf:
A:: = p|B|¬A|A ∧A|A ∨A|A ⊃A
Correia uses A ↔B as a shorthand for (A →B)∧(B →A). AC∗may be described
syntactically by the following deﬁnition:
Deﬁnition 7.4.2 The axioms for AC∗are:
AC∗
1
A ↔¬¬A
AC∗
2
A →A ∧A
AC∗
3
A ∧B →A
AC∗
4
A ∨B →B ∨A
AC∗
5
A ∨(B ∨C) ↔(A ∨B) ∨C
AC∗
6
A ∨(B ∧C) ↔(A ∨B) ∧(A ∨C)
AC∗
7
(A ↔B) ⊃(¬A →¬B)
AC∗
8
(A →B) ⊃(A ∨C →B ∨C)
AC∗
9
(A →B) ⊃((B →C) ⊃(A →C))
AC∗
10
(A →B) ⊃(A ⊃B)
AC∗has detachment of the material conditional as its sole rule of inference:
AC∗
11
From A and A ⊃B, infer B
Deﬁning Correia’s semantics for AC∗requires a few intermediate deﬁnitions.
Deﬁnition 7.4.3 Let v be a classical valuation. Then ˜v is the Correia model deﬁned
by the following;
{⟨Γ, Δ ∪{p}⟩| v(p) =⟨t, f⟩and Γ, Δ ⋐Lit} ∪{⟨Γ ∪{p}, Δ⟩| v(p) =
⟨f, t⟩and Γ, Δ ⋐Lit}.
It can be established that ˜v is just the Correia counterpart c(v) as deﬁned in Deﬁnition
7.2.4.
Observation 7.4.1 When v is a classical valuation, ˜v = c(v).
Proof Immediate from the deﬁnitions.
□

7.4 Conclusions and Future Research
179
Now, rather than relying on the foregoing account of AC validity, when analyzing
AC∗, Correia insists on revising the notion of semantic consequence. Hence, we must
introduce a new operator ⊪v ⊆L⊃
zdf × L⊃
zdf.
Deﬁnition 7.4.4 Let v be a Correia model. Then we say A ⊪v B if for all Γ ⋐L⊃
zd f ,
the following conditons hold:
• if Γ ⊨v A then Γ ⊨v B, and
• A ⊨v Γ iff A, B ⊨v Γ .
Deﬁnition 7.4.5 An AC∗model is a pair ⟨v, V⟩where v is a classical valuation and
V is a set of vocabulary closed Correia models such that c(v) ∈V.
Then truth in a model is given by the deﬁnition:
Deﬁnition 7.4.6 If ⟨v, V⟩is an AC∗model, then truth in the model is deﬁned recur-
sively:
• ⊨⟨v,V⟩p if v(p) ∈DCL for p ∈At
• ⊨⟨v,V⟩¬A if ⊭⟨v,V⟩A
• ⊨⟨v,V⟩A ∨B if ⊨⟨v,V⟩A or ⊨⟨v,V⟩B
• ⊨⟨v,V⟩A →B if for all v ∈V, A ⊪v B
Clauses for conjunction and material implication can be inferred from the above in
the usual fashion.
Inasmuch as AC∗permits us to talk about a species of nonclassical entailment
within classical logic, the foregoing inquiry into characterizing such entailment rela-
tions with respect to Correia semantics suggests that studying extensions of AC∗
could prove useful.
For example, we could proof-theoretically extend Correia’s analysis of AC∗to
systems such as an analogous LP∗:
Deﬁnition 7.4.7 LP∗is the deductive system generated by AC∗by removing the
axiom AC∗
7 and adding the axiom
LP∗
1
A →B ∨¬B
Now, as validity of A →B in an AC∗model is a function of the properties of the
Correia models in V, it is natural to expect that one could immediately export the
earlier correspondences to likewise characterize, e.g., LP∗.
Curiously, as we will see, this is not the case.
Observation 7.4.2 LP∗does not correspond to AC∗models ⟨v, V⟩in which each
v ∈V is relatively complete and language closed.

180
7
Correia Semantics Revisited
Proof We provide a counterexample. Let x be the set
{⟨{p0}, ∅⟩} ∪{⟨{q}, ∅⟩, ⟨∅, {q}⟩| q ̸= p0}
Then consider [[[x]]]—the language closure of x. As p ∈Δ⋆
[[[x]]], because language
closure entails that [[[x]]] is unsigned, we may infer that p ∈Γ ⋆
[[[x]]] as well. By
construction, then, [[[x]]] is relatively complete.
Now, we construct the necessary AC∗model. Let v be a classical valuation; as c(v)
is language closed and relatively determinate, it is also relatively complete. Hence,
the AC∗model ⟨v, {c(v), [[[x]]]}⟩is such that each member of {c(v), [[[x]]]} is language
closed and relatively complete.
Now we are able to provide an instance of the axiom LP∗
1, namely, p0 →p1∨¬p1,
that fails in ⟨v, {c(v), [[[x]]]}⟩. By language closure, we infer that ⟨{p1}, {p0, p1}⟩∈
[[[x]]]. Hence, we have the following sequence of inferences:
• p1 ⊨[[[x]]] p0, p1
• ∅⊨[[[x]]] p0, p1, ¬p1
• ∅⊨[[[x]]] p0, p1 ∨¬p1
• ¬p0 ⊨[[[x]]] p1 ∨¬p1
• ¬p0, ¬(p1 ∨¬p1) ⊨[[[x]]] ∅
However, we are unable to say that ¬p0 ⊨[[[x]]] ∅. This would only be derivable from
∅⊨[[[x]]] p0, which would be obtainable only if ⟨∅, {p0}⟩∈[[[x]]]. But this Correia
pair was omitted by deﬁnition.
Thus, p0 ⊪[[[x]]] p1 ∨¬p1 fails and we conclude that ⊭⟨v,{c(v),[[[x]]]}⟩p0 →(p1 ∨
¬p1), i.e., LP∗
1 is not valid in such models.
□
As a means of adding a variety of nonclassical entailment operators to classical logic,
it will be a worthwhile endeavor to more fully develop extensions of AC∗. Clearly
the solution will require some further work. It is hoped that the further analysis of
such systems can be fully addressed in a future inquiry.
7.4.2
Clauses and Clutters
With respect to a vocabulary closed Correia model v, it has been an indispensable
feature that all information can be recovered from the set of its generators and its
positive and negative vocabularies. Moreover, in extensions of Efde, the set G(v)
itself sufﬁces. It is worth making a few remarks concerning the structure of G(v).
First, clearly the literal projection τ deﬁned in Deﬁnition 5.3.12 is a bijection
and we may consider G(v)τ without loss of generality. It is worthwhile to note
that objects such as G(v)τ are in fact quite common in the study of formal logic.
A common treatment of formulae in disjunctive normal form is to take sets of sets

7.4 Conclusions and Future Research
181
of literals—i.e., subsets of ℘(℘(Lit))—as a faithful representation of a proposition
and by construction for any v, G(v)τ ⊂℘(℘(Lit)). Hence, structures such as G(v)τ
have appeared frequently in the literature, most notably, in the ﬁeld of automated
theorem proving.
Often, this representation of a proposition or formula is taken as a primitive
notion. A disjunction of literals is represented as a clause—a set of literals—and a
conjunction of such disjunctions is construed as a set of clauses. For example, putting
quantiﬁers aside, the most basic objects—the ‘natural syntactical units’—studied in,
e.g., John Alan Robinson’s [18] are sentences considered as ﬁnite collection of ﬁnite
sets of literals.
What seems to underscore the potential interpretative fruits of such a correlation
is that containment logics like Angell’s AC have been independently discovered as
arising from precisely such structures. The articular models of Ray E. Jennings and
Yue Chen were described in [17] as a framework for analyzing entailment faithful
to Gottfried Leibniz’s vision of the structure of a proposition. Following remarks of
Leibniz, they remark that
[w]e are naturally inclined to interpret the literals as truth-sets, i.e., as members of ℘(U)
where U is the universe in a full propositional model. Accordingly the articular representa-
tion of a sentence as a set of sets of literals under this interpretation yields a collection of
collections of subsets of U, i.e., a hypergraph on ℘(U).[17, p. 105]
We will not review the details of the framework of Jennings and Chen but will rest
by suggesting a close relationship between the set of generators of a Correia model
and the notion of a hypergraph.
Deﬁnition 7.4.8 A hypergraph on a set X is a set of subsets of X, i.e., a set H ⊆
℘(℘(X)).
A simple hypergraph—called a ‘clutter’ in [16]—is a particular type of hypergraph.
Deﬁnition 7.4.9 A simple hypergraph is a hypergraph H such that for all distinct
E, E′ ∈H, E ⊈E′.
The relationship of Correia semantics and simple hypergraphs is clear:
Observation 7.4.3 For any Correia model v, ⟨G(v), ≼⟩is isomorphic to a simple
hypergraph.
Proof Every element of the set G(v) is clearly incomparable to every other with
respect to ≼. For example, when ⟨Γ, Δ⟩∈G(v), if ⟨Γ, Δ⟩≼⟨Γ ′, Δ′⟩, then
⟨Γ ′, Δ′⟩/∈G(v). Hence, each element of G(v)τ is incomparable to every other with
respect to the subset relation. But this is to say that G(v)τ is a simple hypergraph on
Lit.
□

182
7
Correia Semantics Revisited
AC independently appears (as ‘FDAE’ for ‘ﬁrst-degree analytic entailment’ in [17])
as a consequence relation arising from valuations that map literals to simple hyper-
graphs. This reinforces the speculation that light may be shed on the interpretation
of Correia models by considering work on analyzing propositions as sets of clauses
or simple hypergraphs.
Beyond the matter of interpretation, though, examining the connection between
Correia’s semantics and these areas of research may also assist in obtaining further
formal results. Articular models are capable of capturing deductive behavior weaker
than AC. Correia’s models, for all their apparent idiosyncrasies, do in fact expose a
limitation of presentation of AC in Deﬁnition 5.2.3, that is, that the truth functional
semantics does not immediately suggest a means of modeling systems weaker than
AC. There exist systems weaker than AC—such as the ﬁrst-degree fragment of Sören
Halldén’s S0—that lack sufﬁcient semantic analyses1 and, as Correia demonstrates,
Correia models without the requirement of vocabulary closure also correspond to a
proper subsystem of AC. Hence, to investigate the proximity of Correia’s models to
such semantical frameworks may yield accounts of ﬁrst-degree deductive systems
that resist a natural analysis in the many-valued framework.
References
1. Angell, R.B.: Three systems of ﬁrst degree entailment. J. Symb. Log. 42(1), 147 (1977)
2. Angell, R.B.: Deducibility, entailment and analytic containment. In: Norman, J., Sylvan, R.
(eds.) Directions in Relevant Logic, Reason and Argument, pp. 119–143. Kluwer Academic
Publishers, Boston, MA (1989)
3. Beall, J.C.: Multiple-conclusion LP and default classicality. Rev. Symb. Log. 4(2), 326–336
(2011)
4. Belnap Jr., N.D.: How a computer should think. In: Ryle, G. (ed.) Contemporary Aspects of
Philosophy, pp. 30–56. Oriel Press, Stockﬁeld (1977)
5. Belnap Jr., N.D.: A useful four-valued logic. In: Dunn, J.M., Epstein, G. (eds.) Modern Uses
of Multiple-valued Logic, pp. 8–37. Reidel, Dordrecht (1977)
6. Bochvar, D.A.: On a three-valued logical calculus and its application to the analysis of contra-
dictions. Matematicheskii Sbornik 4(2), 287–308 (1938)
7. Correia, F.: Semantics for analytic containment. Stud. Logica. 77(1), 87–104 (2004)
8. Correia, F.: Grounding and truth functions. Logique et Analyse 53(211), 251–279 (2010)
9. Daniels, C.: A story semantics for implication. Notre Dame J. Formal Log. 27(2), 221–246
(1986)
10. Daniels, C.: A note on negation. Erkenntnis 32(3), 423–429 (1990)
11. Deutsch, H.: Relevant analytic entailment. Relevance Log. Newsl. 2(1), 26–44 (1977)
12. Deutsch, H.: The completeness of S. Stud. Logica. 38(2), 137–147 (1979)
13. Ferguson, T.M.: Łukasiewicz negation and many-valued extensions of constructive logics. In:
Proceeding of the 44th International Symposium on Multiple-Valued Logic (ISMVL 2014),
pp. 121–127. IEEE Computer Society, Los Alamitos, CA (2014)
14. Fine, K.: Analytic implication. Notre Dame J. Formal Log. 27(2), 169–179 (1986)
15. Fine, K.: Angellic content. J. Philos. Log. 45(2), 199–226 (2016)
1WhileS0(andhence S0fde)hasa semantic analysisdue toSylvanandMeyerin[19],the semantics
is exceedingly artiﬁcial, as the authors freely concede.

References
183
16. Jennings, R.E., Chen, Y.: Articular models for ﬁrst-degree paraconsistent systems. In: Pro-
ceeding of the 9th IEEE International Conference on Cognitive Informatics (ICCI 2010), pp.
904–907. IEEE Computer Society, Los Alamitos, CA (2010)
17. Jennings, R.E., Chen, Y., Sahasrabudhe, J.: On a new idiom in the study of entailment. Log.
Univers. 5(1), 101–113 (2011)
18. Robinson, J.A.: A machine-oriented logic based on the resolution principle. J. ACM 12(1),
23–41 (1965)
19. Routley, R., Meyer, R.K.: Every sentential logic has a two-valued worlds semantics. Logique
et Analyse 19(74–76), 345–365 (1976)

Chapter 8
Concluding Remarks
Abstract This concluding chapter reﬂects on the import of the work as a whole.
The concrete fruits of the work are surveyed alongside its limitations, leaving the
reader with a list of important open problems remaining along with suggestions for
how these problems might be addressed.
What have we accomplished by surveying a variety of occasions—linguistic, meta-
physical, computational—in which Parry’s Proscriptive Principle can be given an
intuitive reading?
If anything has been accomplished, I hope that what has been shown is that sys-
tems whose behavior more or less respects Parry’s criterion are not limited by their
failure to perfectly capture the notion of Kantian analyticity. Rather, we are afforded
a much broader range of interpretations than Parry’s critics—or his sympathizers,
for that matter—had previously allowed. We have surveyed numerous contexts in
which this type of behavior arises: We have observed that many approaches to the
linguistic notion of meaninglessness or nonsense lead to behavior very similar to
the Proscriptive Principle, for example. In metaphysics, we discussed how the Parry
systems of Angell’s AC and Correia’s Cor arise in Fine’s state space semantics and
how this analysis can be applied to resolve some puzzling features of Restall’s truth-
maker semantics. That we have examined such systems in the settings of bilattices,
dynamic logic, and constructive logic suggests that researchers in artiﬁcial intelli-
gence or the philosophy of mathematics may themselves beneﬁt from the utility of
Parry’s intuitions. And by considering catastrophic errors in computation—when a
program hangs or is unable to retrieve a value—we provided semantics for several
of these systems in terms of programs.
Most of the foregoing chapters have included suggestions for future research, in
whichwehaveidentiﬁedanumberofinvestigationsregrettablysetaside,e.g.,looking
into Halldén’s S0, developing a theory of Parry systems on logical multilattices in
general, providing axiomatizations of the intensional containment logics included in
© Springer International Publishing AG 2017
T. M. Ferguson, Meaning and Proscription in Formal Logic,
Trends in Logic 49, https://doi.org/10.1007/978-3-319-70821-8_8
185

186
8
Concluding Remarks
Deutsch’s S. As we close, however, I would like consider future directions with a
broader brush, by describing several of the limitations of this work and the directions
in which this project may be taken.
8.1
Reﬁning the Notion of Content
Much of the criticism leveled against Parry’s PAI is tacitly related to the fact that the
notion of content it assumes is relatively coarse-grained. In the context of Parry-type
systems, we have reﬁned this notion to some degree by the introduction of positive
and negative content, but further reﬁnements can be made. Fine [14] contains a
number of suggestions concerning how the notion of content or subject-matter can
be given a more ﬁne-grained analysis.
8.1.1
The Content of Entailments
For one, the syncategoramatic terms—i.e., the connectives—have played no role
in determining the content of a complex formula in this work. Providing a more
subtle reading to the connectives that takes into account the contribution of such
syncategoramatic elements to a proposition’s overall content is a project that has
been suggested by Fine in [14] but has not yet received an adequate investigation.
With respect to the extensional connectives, it is unclear that one should place too
heavy an emphasis on their contribution. Undoubtedly, between an atom p and the
conjunction p ∧p, the latter ‘contains’ the concept of conjunction in a way that the
former lacks. Despite this, when we go so far as to suggest that the propositions p∨p
and p ∧p express incommensurate propositions—the incommensurability between
which is understood as an undesirable feature of Suszko and Bloom’s SCI of [4, 5]—
it seems that the notion of content becomes so ﬁne-grained as to be indistinguishable
from syntax. (And indeed, Suszko and Bloom’s basic SCI treats even p ∨q and
q ∨p as corresponding to wholly distinct propositions.) To allow this much weight
to syncategoramatic terms is to lurch too far in this direction.
Despite this, the contribution that the notion of entailment makes to the content
of a proposition in which it appears seems distinct from the contribution of the truth-
functional connectives. On its face, it seems far fetched to suggest that the content
of extensional claims about the world—conjunctions and disjunctions of simple
atomic statements—includes the concept of intensional entailment. This intuition
bears some resemblance to the classical is/ought problem: The assertion that some
entailment or other is valid is, in a strong sense, as normative a claim as any of
Hume’s ‘oughts,’ and the assertion that A →B just as clearly ‘expresses some new
relation or afﬁrmation’ [18, p. 469] not discoverable in mere extensional facts.
This intuition is reﬂected in the Ackermann property—and its converse—common
to many relevant logics. This property—ﬁrst shown to hold of Wilhelm Ackerman’s

8.1 Reﬁning the Notion of Content
187
 in [1, 2]—is the criterion that every valid entailment of the form A →(B →C)
is such that the symbol ‘→’ appears in A (or a falsum constant ⊥). When taken up by
Anderson and Belnap, the Ackermann property and its converse become something
of a motto:
Entailments are sui generis in the following sense: only entailments entail entailments...
Moreover, it is never the case that the denial of an entailment entails an entailment. [3,
p. 718]
Parry actually identiﬁes this criterion as a ‘proscriptive principle,’ although he is
skeptical of its validity:
This... anticipates the later doubt about [the axiom f (p) →(p →p)] stimulated by the
(proscriptive) principle of Ackermann and Anderson-Belnap, that only entailments entail
entailments.Butitstillseemstomethatinanycaseanon-entailmentmayentailanentailment.
[28, p. 105]
Parry’s skepticism notwithstanding, the interpretation of the Ackermann property and
its converse as a thesis about analytic implication enjoys quite a bit of plausibility.
The development of modiﬁcations to PAI in which this Humean-style criterion is
taken into account it worthy of exploration.
A further wrinkle in considering the content of formulae including entailments
appears when we make the move to positive and negative subject-matter or content.
For example, when considering the conditional as a primitive, the syntax of a con-
ditional A →B strongly suggests that the formulae A and B are employed in a
‘positive’ sense in the formula. This is especially clear in the Hempel case—i.e., the
sentence ‘all ravens are black’—in which the default position seems to be that one is
talking—positively—about ravens and blackness, rather than non-ravens and non-
blackness. This default position was reﬂected in Deﬁnition 5.4.1, in which models
for the Parry-like PAC described the positive content of a conditional A →B as the
union of the positive content of A and the positive content of B.
In Deﬁnition 5.4.1 we described the negative content of A →B in an analogous
fashion—as the union of the negative contents of both A and B. But this, I suspect,
parts ways with the polarities of one’s assertions when one denies a conditional.
To deny A →B on many readings—such as Nelson’s in [23]—is to suggest a
counterexample in which A is true and B is false. The Nelsonian identiﬁcation of
¬(A →B) and A∧¬B—i.e., that the two have identical meanings—entails that the
two have identical content, suggesting that the valence of A remains positive in the
negative content of A →B. To revise Deﬁnition 5.4.1 to incorporate this assertion
in the content functions γ + and γ −might appear as follows:
• γ +(A →B) = γ +(A) ∪γ +(B)
• γ −(A →B) = γ +(A) ∪γ −(B)
Such a deﬁnition appears to be entirely natural. Axiomatizing not only PAC but
also its cousin determined by this alternative, Nelsonian account of the positive and
negative content of an entailment is a compelling next step to take.

188
8
Concluding Remarks
8.1.2
Quantiﬁcation
One of the upshots of the present interpretations of ﬁrst-degree, propositional Parry
systems is that they provide new frameworks within which to examine the various
notions in conceptivist systems. One such notion that has been thus far ill-understood
in conceptivist systems is quantiﬁcation and predicate extensions. In general, quan-
tiﬁcational extensions of Parry systems have been guided by inchoate notions of
‘concepts’ and ‘content.’ Being guided by concepts from the realms of computation
and linguistics has the beneﬁt of casting such concepts in a different light.
Many of the motivating themes that we have invoked are implicitly about a ﬁrst-
order framework. For example, many of the motivations for the development of
logics of nonsense explicitly invoked the application of predicates to objects, e.g.,
the notion of a ‘category mistake’ presupposes such a framework. While the propo-
sitional languages we have considered are capable of modeling theses concerning,
e.g., meaningless statements or retrieving values for sentences, they are insufﬁciently
expressive to represent the problematic cases themselves.
There have been a number of attempts to develop a quantiﬁcation theory for
conceptivist systems. For example, in [14], Fine brieﬂy considers the matter of how
to carry over Parry’s intuitions from the propositional case to the ﬁrst order case
and, as mentioned, Daniels’ story semantics of [9] and Loptson’s discussion in [20,
21] provide quantiﬁcation theories that are by and large harmonious with Parry’s
intuitions.
Especially salient is the question of whether the content of a universal sentence
∀x A contains the content of each of its substitution instances A(x := a). From the
perspective of [9], it seems clear that a universal formula should not be thought of
as containing all ‘names’; the appearance of the line ‘Everyone was an accomplice’
(and,therefore,thetacitendorsementofitstruth)inaSherlockHolmestaleshouldnot
entail that ‘Flash Gordon was an accomplice,’ as this runs afoul of the prohibition
against introducing ‘new and unwanted names.’1 Fine himself provides a similar
argument from our apparent ability to grasp universal sentences, observing that ‘in
order to understand ∀x A(x) I need not know (or, at least possess names for) the
objects in the domain of the quantiﬁer.’ [14, p. 178] Fine gestures towards some
ways of looking at the content of a ﬁrst order sentence in terms of his semilattices of
concepts, but he arrives at nothing deﬁnitive.
Furthermore, the interpretation of such systems in terms of computation might
also yield a natural way of extending the picture to quantiﬁed formulae. Seating the
discussion in terms of computation allows us to look at the question in a different
light.
1This description of the prohibition does not necessarily presuppose cases in which, e.g., all elements
of some domain are assigned names (or constants). Even if the name ‘Flash Gordon’ is not, e.g.,
expressible within the bounds of a Sherlock Holmes story, Daniels’ position equally suggests that
the proposition that Flash Gordon was an accomplice is not part of the proposition expressed by
the sentence ‘Everyone was an accomplice.’

8.1 Reﬁning the Notion of Content
189
Rather than being forced into the question of whether the content of a universal
sentence contains all names, it may be fruitful to instead think of a formula ∀x A as
being evaluated by a routine for each name in the environment in parallel. Hence, if
the algorithm does not halt on evaluating ∀x A—and assigns it a value of 1—then for
any name a recognized by the environment, the algorithm evaluating A(x := a) can
be run. Whether to accept or to reject the inference ∀x A ⊨A(x := a) if a function
of whether one allows names not recognized by the environment.
Likewise, considering the inference A(a) ⊨∃x(x := a) becomes rather straight-
forward, if only we interpret ∃x A as being evaluated by a routine that runs on all
names a and asks whether A(x := a) is true. If we take names to be governed by the
environment, then the fact that A(x := a) can be successfully evaluated says nothing
concerning whether a routine evaluating A(x := b) will terminate.
In each case, the present approach may allow us to export the duties performed by
the machinery of Fine’s semilattices of concepts to valuation functions themselves.
The ﬁrst-degree conceptivist systems described in Sect.4.3.3 secure the Proscriptive
Principle without such a semantical apparatus; whether this can be extended to ﬁrst
order or higher degree systems remains to be seen. Thoroughly applying the inter-
pretations covered in this work to higher degree and ﬁrst order systems is a matter for
another day. Yet it seems apparent that such approaches would recast the analysis of
these formal matters and might allow for a more intuitive way to extend conceptivist
intuitions to these cases.
8.2
Related Deductive Calculi
Over the course of the foregoing material, we have succeeded in drawing together
a number of a priori disparate approaches to deduction. Much work still remains,
however. There are two families of deductive systems that we have largely ignored
that deserve to be identiﬁed as natural targets for further study: For one, there exist
systems that are dual to Parry logics in that their respective accounts of entailment
require that content be introduced to—rather than the decomposed from—that of the
antecedent. Secondly, the constellation of extensions to and subsystems of Parry’s
PAI is far from mapped out.
8.2.1
Dual Systems
If it is tempting to read Parry’s Proscriptive Principle as the requirement that entail-
ments be analytic—so that the concepts of the consequent already appear in those
of the antecedent—then it seems just as natural to consider whether an analogous
principle might correspond to something resembling Kantian ampliativity.
Now, such a property dual to Parry’s Proscriptive Principle has appeared as the
‘converse Parry property’ by Kosta Do˘sen in [10] or as a property of ‘dual depen-

190
8
Concluding Remarks
dence’ by Epstein in [13], according to which for any valid entailment A →B all
atoms appearing in A also appear in B.
Of course, if the legitimacy of Parry’s logic as a correct exegesis of Kantian
analytic reasoning is strained, then the suitability of this dual property as capturing
ampliative reasoning seems even more problematic. But we are not beholden to a
Kantian reading of this dual property, either; one of the upshots of the foregoing
chapters has been the availability of many alternative readings of Parry’s criterion.
Such readings are available to converse Parry systems as well. In [12], Richard
Epstein remarks that his system DualD—effectively the dual system to the Dunn-
Epstein system DAI—was interpreted by Douglas Walton as a ‘logic of actions’ in
[32]. On Walton’s interpretation, the validity of an entailment corresponds to the
successful application of an action in bringing about new information. One obvious
problem is to provide analyses that similarly act as dual, ‘ampliative’ counterparts
to the systems in the neighborhood of PAI. While Fine’s semantics can be adjusted
without difﬁculty to allow only ampliative entailments, much work remains, e.g.,
examining axiomatizations of these dual systems and describing their properties.
Moreover, it seems that the techniques in this work can be directly applied to
provide interpretations for systems like DualD. For example, Chaps.2 and 5 relied
heavily on the status of the Bochvar-Kleene nonsense logic 0 as ‘almost Parry.’
Not surprisingly, Halldén’s C0, too, can be understood in similar terms and given
an analogous characterization in terms of classical validity and the containment of
atoms. The feature that is cognate with the failure of Addition in 0, for example, is
the failure of Conjunctive Simpliﬁcation, i.e., the inference from A ∧B to A. Most
prominently, Roberto Ciuni in [6] and Ciuni and Massimiliano Carrara in [7] have
considered interpretations and characterizations of C0 (referred to as ‘PWK’ for
‘paraconsistent weak Kleene’) that are harmonious with the foregoing interpretation
of 0.
That such an analysis can induce converse Parry systems in the ﬁrst-degree case
has been conﬁrmed by Damian Szmuc. In [30], Szmuc dualizes the techniques found
in Chap.6 to provide bilattice semantics for ‘track-down’ operations that give rise to
the deductive calculi FDEPWK and dAC, which are dual to Sfde (called ‘FDEWK’ by
Szmuc) and AC, respectively. In this setting, Fitting’s epistemic interpretation of cut-
down operations on bilattices from [15] immediately yields epistemic interpretations
of ‘track-down’ operations and, in turn, intensional interpretations of these converse
Parry calculi.
8.2.2
Other Parry Systems
The literature contains a wider family of Parry logics than has been acknowledged
in this work. Some of these systems were introduced with Parry’s PAI in mind and
others have been described wholly independently of Parry’s enterprise. While we
have acknowledged a number of these systems in the foregoing pages, many have
been relegated to footnotes and many systems have not been rigorously considered

8.2 Related Deductive Calculi
191
Fig. 8.1 Deductive systems in the neighborhood of PAI
qua Parry logics. A full picture of containment logic, of course, would require that
these systems—outlined in Fig.8.1—be given an analogous treatment and, because
a full picture is ultimately desirable, we might consider some of the regrettable
omissions in outline.
First to be mentioned is the lack of sufﬁcient analyses for the three subsystems of
PAI appearing in Fig.8.1.
Most conspicuous of the omitted subsystems is the lack of a semantical analysis of
Parry’s original system AI of [25]. Recall that Fine’s [14] analyzes a proper extension
by including the axiom (A∧¬B) →¬(A →B). Because Parry claimed that he had
endorsed this axiom as far back as 1957 and ultimately endorsed Fine’s semantics as
harmonious with his intuitions, the discovery of a semantics for AI would presumably
have little worth as a guide to Parry’s philosophy. As a formal matter, however, the
lack of a semantics for AI is a regrettable deﬁciency of this work and it is worth
investigating whether AI can be given a Fine-style analysis by making subtle changes
to Fine’s analysis.
A further deﬁciency is the lack of a Fine-style analysis of Daniels’ logic S⋆. The
ﬁrst-degree fragment of the system has made many appearances over the forego-
ing pages and the intensional system—as Daniels notes—enjoys the Proscriptive
Principle. Indeed, by a brief inspection of the axiomatization found in [9], it can
be conﬁrmed that each theorem of the system is a theorem of PAI. Now, the ‘story
semantics’ Daniels provides in [9] bears little resemblance to the Fine-style analysis
of PAI, but it seems plausible that a correspondence between the two frameworks
can be provided. Due to the similarity between Daniels’ remarks on implication and
content and the foregoing Observation 5.4.3, my own suspicion is that S⋆is the
system PFDEϕ deﬁned semantically in Deﬁnition 5.4.4. The task of generating a

192
8
Concluding Remarks
correspondence governing the relationship between S⋆and PFDEϕ—or at least an
analysis thereof—is unfortunately still outstanding but is well worth picking up in
the future.
The ﬁnal subsystem that has been set aside is Halldén’s system S0 described
in [17]. S0 is historically notable as—arguably—the ﬁrst paraconsistent system
introduced, appearing in the same year as Ja´skowski’s [19]. But in introducing S0,
Halldén was not trying to codify any freestanding intuitions concerning entailment,
but rather he intended to make a formal observation concerning Lewis’ logic of strict
implication S1. In S1, the strict implication connective is not primitive, but is deﬁned
in terms of ♦, so that
ϕ →ψ =d f ¬♦(ϕ ∧¬ψ)
appears in its axiomatization. S0 is deﬁned as the deductive system determined by
omitting this deﬁnition from the rules and axioms of S1. What Halldén shows is
that by taking the implication connective as primitive and eliminating this deﬁnition,
even if all the axioms of S1 governing the behavior of the connective are retained,
the resulting logic is quite different than S1.
S0 seems to have been nearly forgotten until being resurrected by Parry in [26]—
which appears in full as [27]—in which Parry observes that the system S0 is properly
contained in AI. Hence, S0 is a →-Parry system and it would be desirable to analyze
the system qua containment logic.
While Sylvan and Meyer provided a semantical analysis of S0 in [29], the frame-
work they provide is intended to provide a semantics for every axiomatic deductive
calculus. Hence, Sylvan and Meyer’s semantics for S0 is not motivated by any set
of features particular to S0. Whether Halldén’s system can be given an analysis in
line with Fine’s [14] is an interesting question and one worth pursuing. It seems
likely, for example, by adapting the content semilattices to the case of Cresswell’s
neighborhood semantics for S1 in [8] might provide an appropriate account of S0.
This work has also stopped short of analyzing two extensions of PAI in which the
language is enriched by the addition of a unary necessity operator. Both systems—
Loptson’s AI-Q from [21] and Urquhart’s AIN from [31]—are interesting in their own
rights from both philosophical and formal perspectives and deserve to be reexamined
in the future.
Loptson’s AI-Q, introduced in [21], enriches PAI by adding a modal operator
whose behavior is modeled after Arthur Prior’s modal logic Q. AI-Q is interesting
as its introduction is accompanied by a very detailed and reasonable philosophical
argument for its legitimacy, some of which was mentioned in Chap.3. Although the
question of whether an analysis can be given along the lines of Fine’s analysis of
PAI is a compelling one—and should, I think, be taken up—Loptson’s [21] provides
an axiom system for AI-Q and describes a semantics with respect to which the
axiom system is sound. Completeness with respect to Loptson’s semantics is not
demonstrated, however, so there remain open questions about the system independent
of this work.

8.2 Related Deductive Calculi
193
Urquhart was one of the three philosophers to contemporarily take up Parry’s
system anew in the 1970s and 1980s, joining Dunn’s [11] and Fine’s [14] with his
own system AIN in [31]. While AI-Q adds to PAI a modality like that of Q, Urquhart
enriches the demodalized DAI with a modality corresponding to S4.
Especially interesting is a conjecture that Urquhart makes in the concluding
remarks of [31]. Motivated by the Gödel-McKinsey-Tarski-style embeddings of
intuitionistic logic into S4 found in [16, 22], Urquhart conjectures that a similar
translation (□) allows the embedding of PAI into AI. More informally, the conjecture
states that A is provable in PAI if and only if A□is provable in AIN. To the best of
my knowledge, this conjecture has been neither proven nor refuted, and investigating
Urquhart’s conjecture further appears to be a worthwhile pursuit.
In contrast to AI-Q and AIN, which enrich the language of PAI, we have also
neglected to discuss a family of implicational systems in the language L→. In [24],
Marek Nowak studies the implicational fragments PAI→and DAI→—calling them
‘Mα’ and ‘M1,’ respectively—and two extensions to these systems. The extensions
themselves—M′
α and M2—are not terribly interesting as sets of theorems. The theo-
rems of the respective systems correspond to the set of S4 and S5 validities that meet
Parry’s criterion (what would be called ‘S4PP’ and ‘S5PP’ in the language of Chap.2)
and therefore are subject to Sylvan’s criticism of a ‘double-barrelled analysis’ in the
worst way. Nevertheless, Nowak’s axiomatizations are intriguing—it is admittedly
not obvious how one could provide a Hilbert-style account of M′
α and M2—and
studying Nowak’s axiom systems in more detail may well prove instructive.
8.3
Conclusion
Clearly, the work initiated by Parry in [25] is still far from ﬁnished. We leave unex-
plored myriad avenues—avenues of both philosophical and formal interest—that
lead from Parry’s own work to frontiers not imagined by Parry.
It is painfully obvious, when the limitations of this work are surveyed, that the
foregoing material makes little more than a dent in exploring the themes of Parry’s
work. But I think that, at the very least, I have succeeded in demonstrating that those
who have decried Parry’s work as nothing more than syntactical gimmickry were
premature in their assessment. We have surveyed a very wide range of occasions in
which Parry’s intuitions are relevant and the breadth of these applications reinforces
a suspicion that the study of Parry’s work proves to be a rewarding exercise.
It is my hope that the thoughts contained in this work—however meandering they
may have been—succeed in kindling a new interest in Parry and his techniques, and
that the work left unﬁnished in the foregoing pages will be pursued.

194
8
Concluding Remarks
References
1. Ackermann, W.: Begründung einer strenger implikation. J. Symb. Log. 21(2), 113–128 (1956)
2. Ackermann, W.: Über die Beziehung zwischen strikter und strenger implikation. Dialectica
12(3–4), 213–222 (1958)
3. Anderson, A.R., Belnap Jr., N.D.: Enthymemes. J. Philos. 58(23), 713–723 (1961)
4. Bloom, S.L., Suszko, R.: Semantics for the sentential calculus with identity. Stud. Log. 28,
77–81 (1971)
5. Bloom, S.L., Suszko, R.: Investigations into the sentential calculus with identity. Notre Dame
J. Form. Log. 13(3), 289–308 (1972)
6. Ciuni, R.: Conjunction in paraconsistent weak Kleene logic. In: Arazim, P., Dank, M. (eds.)
The Logica Yearbook 2014, pp. 61–76. College Publications, London (2015)
7. Ciuni,R.,Carrara,M.:CharacterizinglogicalconsequenceinparaconsistentweakKleenelogic.
In: Felline, L., Paoli, F., Rossanese, E. (eds.) New Developments in Logic and the Philosophy
of Science. College Publications, London (2016)
8. Cresswell, M.J.: S1 is not so simple. In: Modality, Morality, and Belief: Essays in Honor of
Ruth Barcan Marcus, pp. 29–40. Cambridge University Press, New York (1995)
9. Daniels, C.: A story semantics for implication. Notre Dame J. Form. Log. 27(2), 221–246
(1986)
10. Do˘sen, K.: A note on the law of identity and the converse Parry property. Notre Dame J. Form.
Log. 19(1), 174–176 (1978)
11. Dunn, J.M.: A modiﬁcation of Parry’s analytic implication. Notre Dame J. Form. Log. 13(2),
195–205 (1972)
12. Epstein, R.L.: The algebra of dependence logic. Rep. Math. Log. 21, 19–34 (1987)
13. Epstein, R.L.: The Semantic Foundations of Logic: Propositional Logics, 2nd edn. Oxford
University Press, New York (1995)
14. Fine, K.: Analytic implication. Notre Dame J. Form. Log. 27(2), 169–179 (1986)
15. Fitting, M.: Bilattices are nice things. In: Bolander, T., Hendricks, V., Pedersen, S.A. (eds.)
Self-reference, pp. 53–77. CSLI Publications, Stanford (2006)
16. Gödel, K.: Eine Interpretation des intuitionistischen Aussagenkalküls. In: Ergebnisse eines
mathematischen Kolloquiums 4, 39–40 (1933)
17. Halldén, S.: A question concerning a logical calculus related to Lewis’ system of strict impli-
cation, which is of special interest for the study of entailment. Theoria 14(3), 265–269 (1948)
18. Hume, D.: A Treatise on Human Nature. Oxford University Press, New York (1888)
19. Ja´skowski, S.: Rachunek zda´n dla systemów dedukcyjnych sprzecznych. Stud. Soc. Sci. Torun.
Sect. A, I (5), 57–77 (1948)
20. Loptson, P.: Logic and contingent existence. Hist. Philos. Log. 1(1–2), 171–185 (1980)
21. Loptson, P.: Q, entailment, and the Parry property. Log. Anal. 23(90–91), 305–317 (1980)
22. McKinsey, J.C.C., Tarski, A.: Some theorems about the sentential calculi of Lewis and Heyting.
J. Symb. Log. 13(1), 1–15 (1948)
23. Nelson, D.: Constructible falsity. J. Symb. Log. 14(1), 16–26 (1949)
24. Nowak, M.: Two logics of analytic classical implication. Log. Trianguli 6, 25–40 (2002)
25. Parry, W.T.: Ein Axiomensystem für eine neue Art von Implikation (analytische Implikation).
Ergebnisse eines mathematischen Kolloquiums 4, 5–6 (1933)
26. Parry, W.T.: Comparison of entailment theories. J. Symb. Log. 37(2), 441–442 (1972)
27. Parry, W.T.: Comparison of entailment theories. Relevance Log. Newslett. 1(1), 16–26 (1976)
28. Parry, W.T.: Analytic implication: its history, justiﬁcation, and varieties. In: Norman, J., Sylvan,
R. (eds.) Directions in Relevant Logic, Reason and Argument, pp. 101–118. Kluwer Academic
Publishers, Boston (1989)
29. Routley, R., Meyer, R.K.: Every sentential logic has a two-valued worlds semantics. Log. Anal.
19(74–76), 345–365 (1976)
30. Szmuc, D.: Track-down operations on bilattices (2016). Manuscript
31. Urquhart, A.: A semantical theory of analytic implication. J. Philos. Log. 2(2), 212–219 (1973)
32. Walton, D.N.: Conditionals in act-sequences. In: R.L. Epstein (ed.) Relatedness and Depen-
dence in Propositional Logics. Iowa State University Logic Group, USA (1980)

Author Index
A
Anderson, Alan Ross, 12, 14, 27, 82, 83, 111,
189
Angell, Richard Bradshaw, 15, 16, 28, 39,
51, 56, 71, 78, 109, 116, 117, 126,
131, 135, 156, 161, 162, 165, 187
Aqvist, Lennart, 81
Arieli, Ofer, 15, 16, 135, 136, 138, 139, 141,
143, 150, 152
Aristotle, 3, 28, 44
Armstrong, David, 44, 61, 64
Avron, Arnon, 15, 16, 87, 135, 138, 139, 141,
150, 152
B
Barwise, Jon, 43, 46, 54, 63, 66
Belnap, Nuel D., Jr., 12, 14, 15, 27, 51, 53,
82, 83, 86, 92, 94, 109–113, 115, 135,
146, 161, 169, 189
Bloom, Stephen, 44, 71, 188
Bochvar, Dmitri, 15, 19–21, 25–27, 30, 58,
81–84, 86–88, 100, 105, 115, 137,
174, 192
Brady, Ross, 5, 7, 9, 13, 68
C
Carlos, Oller, 19, 31
Carnap, Rudolph, 4, 5, 23, 59
Carnielli, Walter, 67
Carrara, Massimiliano, 192
Chen, Yue, 183
Ciuni, Roberto, 192
Cohen, Paul, 29
Coniglio, Marcelo, 67, 83
Correia, Fabrice, 15, 43, 51, 109, 110, 117,
118, 121, 162
D
Damasio, Carlos, 143
Daniels, Charles, 77, 171
Deutsch, Harry, 9, 15, 19, 125, 130, 171
Dosen, Kosta, 191
Drange, Theodore, 24
Dunn, J. Michael, 11
E
Emch, Arnold, 6
Epstein, Richard, 9, 76, 130, 192
F
Fine, Kit, 6, 12, 14, 15, 34, 39, 43, 46, 79,
109
Fitting, Melvin, 16, 29, 85, 135
Floridi, Luciano, 104
Frege, Gottolb, 20
G
Gemes, Ken, 4
Ginsberg, Matthew, 136
Goedel, Kurt, 12, 38, 109
Grzegorczyk, Andrzej, 13
H
Hallden, Soren, 81
Hintikka, Jaako, 90
© Springer International Publishing AG 2017
T. M. Ferguson, Meaning and Proscription in Formal Logic,
Trends in Logic 49, https://doi.org/10.1007/978-3-319-70821-8
195

196
Author Index
J
Jennings, Ray E., 183
Johnson, Frederick, 9, 10, 15, 19, 28, 30, 36
K
Kant, Immanuel, 4
Keilkopf, Charles, 8
Kleene, Stephen Cole, 63
Kneale, Martha, 3
Kneale, William, 3
Konikowska, Beata, 87
Kripke, Saul, 77
L
Langford, Cooper Harold, 6
Lappin, Shalom, 24
Lewis, Clarence Irving, 6, 11, 30, 82
Loptson, Peter, 58, 190
M
McCall, Storrs, 27
McCarthy, John, 87
Meyer, Robert K., 76
N
Nelson, David, 29
Nelson, Everett, 6
Nowak, Marek, 71, 194
P
Parry, William, 3, 6, 11, 19, 109
Pereira, Luis, 143
Perry, John, 43, 63
Pirog-Rzepecka, Krystyna, 20
Pizzi, Claudio, 29
Plumwood, Val, 44
Popper, Karl, 4, 5
Priest, Graham, 15, 19, 28, 29, 78, 109
R
Reichenbach, Hans, 21
Rescher, Nicholas, 51
Restall, Greg, 15, 43, 66, 67, 187
Rivieccio, Umberto, 147, 148, 152, 155
Russell, Dmitri, 23, 24, 44, 45, 58
Ryle, Gilbert, 24
S
Segerberg, Krister, 99
Sheffer, Henry, 6, 14
Shramko, Yaroslav, 131, 135, 149
Sider, Theodore, 64
Smullyan, Raymond, 29
Strawson, Peter, 28
Suszko, Roman, 43–46, 54, 71
Sylvan, Richard, 10–13, 39, 44, 53, 58
Szmuc, Damian, 192
T
Tait, William, 121
U
Urquhart, Alasdair, 12, 194
V
van Fraassen, Bas, 43–45, 53, 54, 62, 71, 72
van Rooij, Robert, 96
W
Walton, Douglas, 192
Wansing, Heinrich, 28, 35, 46, 131, 135
Whitehead, Alfred North, 6, 20
Williamson, Timothy, 29, 68
Wittgenstein, Ludwig, 14, 22, 44
Woodruff, Peter, 99–101
Z
Zimmerman, Thomas E., 84, 85, 89, 95, 105
Zinovev, Aleksandr, 19, 126

Subject Index
A
Ackermann property, 189
Analytic Containment (AC), 51, 116, 166
Analytic judgment, 11, 12
Aristotle’s thesis, 28
B
Barwise and Perry’s principle, 71
Belnap computer, 110, 131
Belnap variable, 92
Bilateral semantics, 111, 114, 167, 169, 171,
175
Bilattice, 86, 135–139, 141, 144, 147, 152,
154, 161, 192
Boethius’ thesis, 28
C
Category mistakes/type crossings, 24, 59
Clutter, 183
Cohen forcing, 29
Conjunctive simpliﬁcation, 12, 192
Connexive logic, 6, 28
Containment/conceptivist logic, 3–8, 10, 13,
15, 19, 26–28, 33, 34, 37, 39, 48, 51,
60, 72, 75, 91, 109, 110, 127, 130,
135, 183, 194
Content, 4, 5, 7, 28, 50, 188–191, 194
Converse Parry Property, 191
Correia model, 117–119, 121, 122, 124, 168,
170, 173, 174, 178, 180, 183
Correia pair, 121, 124, 182
Cut-down disjunction, 16, 81, 86, 135
D
Declaration of variables, 95, 99
Declaring variables, 91, 92, 94, 99
Disjunctive syllogism, 11, 82
Distribution, 57, 59, 84, 96
E
Environment, 90, 91, 103, 105, 191
Epistemic possibility, 90
Ex Contradictione Quodlibet (ECQ), 11
F
Factual equivalence, 15, 51, 54–57, 59
First Degree Entailment (FDE), 36, 55, 66,
111, 165
First degree language
Free choice disjunction(free choice permis-
sion), 81, 84–86, 89, 91, 95, 97
H
Hypergraph, 183
Hypernonsense, 59
I
Ill-formedness, 24, 90
Initializing, 91–93
Intuitionist logic, 46
K
Kleene logic, 167, 175
© Springer International Publishing AG 2017
T. M. Ferguson, Meaning and Proscription in Formal Logic,
Trends in Logic 49, https://doi.org/10.1007/978-3-319-70821-8
197

198
Subject Index
L
Lambda calculus, 98, 144
Logic of paradox, 70, 165, 176
M
McCarthy logic, 87
Meaningfulness, 23, 39, 87–89, 94, 99, 171
Multilattice, see bilattice and trilattices, 16
N
Non-Fregean logic, 72
Nonsense logic, 19, 20, 31, 63, 88, 192
Nonsense/meaninglessness/meaningfulness,
15, 19–24, 26, 27, 39, 58, 60, 68, 81,
87, 88, 99, 100, 113, 187
P
Paraconsist logic, 10, 19, 27, 34, 37, 99, 104,
192, 193
Possible worlds, 29, 44, 46, 47, 62, 64, 96
Principle of addition, 11, 75, 91, 114
Principle of excluded middle, 21
Propositional dynamic logic, 75, 96, 98
Proscriptive principle, 7, 9, 10, 14, 55, 81,
97, 101, 171, 187, 191
Q
Quantiﬁcation/quantiﬁers, 104, 190
R
RM/RM3, 67, 68, 70, 71, 176
S
Safety axiom, 34
Shramko-Wansing network, 131, 161
Strawson’s thesis, 28
Subservience (subserves), 48
Subsumption (subsumes), 48
Swap strctures, 67
T
Trilattice, 16, 135, 146–155, 157, 159
Truth maker semantics, 43
Truthmaker semantics/state space seman-
tics, 15, 43, 46, 47, 55, 64, 69, 71,
187
Truthmakers/facts, 43–46, 62, 65–68, 71,
187
V
Variable-sharing property, 9, 10, 31
Veriﬁability, 23
W
Wojcicki’s principle, 71
Z
Zeroth degree language, 8

