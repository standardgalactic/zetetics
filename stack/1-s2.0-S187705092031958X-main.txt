ScienceDirect
Available online at www.sciencedirect.com
Procedia Computer Science 176 (2020) 3345–3355
1877-0509 © 2020 The Authors. Published by Elsevier B.V.
This is an open access article under the CC BY-NC-ND license (https://creativecommons.org/licenses/by-nc-nd/4.0)
Peer-review under responsibility of the scientific committee of the KES International.
10.1016/j.procs.2020.09.063
© 2020 The Authors. Published by Elsevier B.V.
This is an open access article under the CC BY-NC-ND license (https://creativecommons.org/licenses/by-nc-nd/4.0)
Peer-review under responsibility of the scientific committee of the KES International.
 
Keywords: Ontology integration, Ontology merging and alignement, Knowledge repository, Ontology 
1. Introduction 
In Information Science an ontology is defined as a set of concepts and relations between them [1]. The ontology 
offers machine-interpretable definitions (semantics) of basic concepts in the domain and relations among them. For 
 
 
* Corresponding author. Tel.: +48-91-444-1915; fax: +48-91-444-1915. 
E-mail address: jaroslaw.watrobski@usz.edu.pl 
24th International Conference on Knowledge-Based and Intelligent Information & Engineering 
Systems  
Towards standardization in frameworks, tools and approaches 
dedicated to ontology building and management 
Jarosław Wątróbski* 
The Faculty of Economics, Finance and Management of the University of Szczecin`, Mickiewicza 64, 71-101 Szczecin, Poland 
Abstract  
The widespread popularity and spread of ontologies in many areas increasingly requires the successful integration of multiple such 
ontologies. The ontology integration problem has been investigated during last years and it is still a challenging task. Aligning and 
merging existing ontologies, which are usually handled manually, is often a big and tedious part of the sharing process. Due to the 
fact that there are different approaches, tools and strategies that help to avoid mistakes during modeling especially large domains 
and creating a new single coherent ontology, this article attempts to build a common knowledge repository in the form of an open 
and publicly available tool. The overall goal of the proposed open knowledge repository is to provide free access to basic data and 
to compare the features offered. It is worth mentioning that this form of knowledge representation is publicly available and focuses 
on the possibility of updating and reusing. It is an attempt to structure knowledge that can be successfully extended with additional 
groups of solutions and parameters. The proposed approach can be easily implemented as a light library and used in any type of 
OWL/RDF or OWL/XML management application or adapted in a given management information system. 

3346	
Jarosław Wątróbski  / Procedia Computer Science 176 (2020) 3345–3355
years ontologies and taxonomies are used to semantically categorize or annotate information, especially on the Web 
[2,3]. The proliferation of ontologies and taxonomies in many domains increasingly demands the integration of 
multiple such ontologies to provide a unified view on them [4,5]. Since many ontologies refer to the same domain and 
to the same objects, there is an increasing need to integrate or merge such related ontologies [6]. The increasing 
popularity of ontologies, as well as the daily activities of many ontology engineers and ontology developers means 
that there is usually more than the one ontology for most of the fields [7]. Thus, in this case different conceptualizations 
of same domain exist. To help creating a common repository of knowledge base and to remove overlaps in existing 
ontologies ontology merging process is applied [8,9]. Moreover, ontologies can be merged to combine the knowledge 
from different ontologies [2]. Therefore, to meet this aim, it is a clear need to create a possibility to merge ontologies 
providing a unified view on the input ontologies while maintaining all information coming from them [2,10].  
The ontology integration problem has been investigated during last years and it is still a challenging task 
[4,5,8,9,11–14]. Due to the fact that researchers in the field of ontological design develop the content of an increasing 
number of ontologies, the need to share and re-use this knowledge is becoming increasingly critical [15]. Moreover, 
aligning and merging existing ontologies, which are usually handled manually, is often a big and tedious part of the 
sharing process [5,16–19]. Hence, the promising field is ensuring the integration process in a largely automatic way. 
The process of ontology integration (covering the following aspects as merging, matching and mapping) requires 
adapting a proper approach supporting these activities from start to end. Due to the fact that there are different 
approaches, tools and strategies that help to avoid mistakes during modeling especially large domains and creating a 
new single coherent ontology, this article attempts to build a common knowledge repository in the form of an open 
and publicly available tool. The elaborated solution offers a set of selected parameters of existing algorithms and the 
strengths and various merging strategies. The general aim of proposed an open knowledge repository is to provide the 
free access to the basic data and to compare the offered features. It is worth mentioning that this form of knowledge 
representation is public available and focused on the possibility of updating and reusing. It is an attempt to structure 
knowledge that can be successfully extended with additional groups of solutions and parameters.  
The organization of the paper is as follows: Section 2 provides main aspects of ontology integration. In Section 3 
the characteristics and comparative analysis of a group of approaches is provided. Then, Section 4 demonstrates the 
validation and tests of the proposed knowledge repository. The conclusions and future works summarize this paper. 
2. Main aspects of ontology integration 
The general aim of an ontology for a domain is to list and provide semantic descriptions of concepts in the domain 
of discourse, defining domain-relevant attributes of concepts and various relationships among them [20,21]. It is 
assumed that the developed the ontologies can be merged, reused and expanded [6]. Ontologies fundamentally differ 
in their application, size and scope of reflection of the modeled domain. For example, knowledge accumulated in 
smaller ontologies can be combined to obtain one, larger set. Different origins and levels of ontologies' structuring 
require different ways to integrate them into a larger whole. In general, two integration approaches can be 
distinguished: one based on the creation of new ontologies by mapping a given ontology into another [17], consisting 
in finding and creating connections between existing classes and relations without changing their structure [2,5,17,22], 
and the other based on creating a new ontology, containing all elements of ontologies [2,8]. Moreover, depending on 
the number of changes necessary to obtain a new ontology from the existing ones, different levels of integration can 
be distinguished: alignment, partial compatibility and unification or total compatibility [6,8]. Alignment is treated as 
the weakest form of integration [8,23,24]. Although it requires minimal changes, it can only support limited types of 
interoperability [5]. This form seems to be useful for classifying and retrieving information, but it does not support 
deep inference and calculations. Partial compatibility requires more changes to support wider interoperability, though 
there may be some concepts or relationships in one system or the other that could create obstacles to full 
interoperability [6,25]. Unification or total compatibility may require changes or major reorganization of ontology 
while ensuring best interoperability. All operations that can be performed on a given ontology can be performed in an 
equivalent manner for the other. 
From a formal way, knowledge representation is the application of logic and ontology to create a computational 
model for a certain application [23,26–28]. Each of the three aspects of such a solution carries a different class of 
problems to solve in the subsequent integration of given knowledge models. These aspects cover logic, ontology and 

	
Jarosław Wątróbski  / Procedia Computer Science 176 (2020) 3345–3355
3347
computations. For logic, different implementations support different subsets and variants of logic. The exchange of 
information between them can usually be done automatically if the information can be expressed on a common subset 
[29,30]. Other types of transfers are also possible, but some information may be lost or modified. In the case of 
ontology, however, there may be inconsistency with the terminology used. This is because different systems may use 
different names for the same entities. In addition, they can use the same names for different types of entities [31]. 
Sometimes two entities with different definitions are the same entity, but the task of ensuring that they are the same 
can in fact be difficult or even impossible. In OWL, mappings can be used using the clause "owl: imports". For 
calculations, even if the names and definitions are identical, actions on the computational side or implementation side 
can cause that knowledge itself behaves differently in different systems. In some implementations, the order in which 
you enter the rules and data can affect any conclusions and results of calculations. It happens that side effects can 
cause simple reasoning in one system and in another terminate the program looping. 
 2.1. Ontology merging, mapping and matching problems 
Based on the definition presented by [23,26], ontology merging is the process of creating a new single coherent 
ontology from two or more existing source ontologies related to the same domain. It is assumed that the new ontology 
will replace the source ontologies, hence a merging task resembles a construction of a new ontology. The process 
starts from defining the domain and a lexicon of a typical, common vocabulary [20]. It constitutes a base for a 
hierarchy of concepts which are divided into classes and proper relations are attached [5]. Similarly like in classic 
ontology construction, there are different approaches to hierarchy construction: top-down, bottom-up and mixed 
[10,32]. The first of them starts with the most general concepts, in opposite to the second one, bottom-up, which 
begins with the most detailed helps to avoid mistakes during modeling large domains. The mixed approach combines 
the elements both from top-down and bottom-up. 
The ontology merging problem can be formulated by means of definitions and terms. Ontology (O) is considered 
to be a pair defined as: 
O = (S, A),  
 
(1) 
where: S is the ontological signature describing the vocabulary (i.e. the terms that lexicalize concepts and relations 
between concepts), and A is a set of ontological axioms, restricting the intended meaning of the terms included in the 
signature  [6]. A includes the formal definitions of concepts and relations that are also lexicalized by natural language 
terms in S.  
The ontology mapping problem from ontology: 
O1 = (S1, A1) to O2 = (S2, A2)   
 
(2) 
is considered to be a morphism f:S1S2 of ontological signatures such that A2  f(A1), i.e. all interpretations that 
satisfy O2’s axioms also satisfy O1’s translated axioms [6,8]. 
Ontology matching involves determining the semantic heterogeneity between two or more domain specifications 
by considering their associated concepts [33]. It is generally agreed that such alignment not capable to be done 
manually beyond a certain complexity, size or number of ontologies. Therefore, in order to decrease the trouble of 
manual establishment and maintenance of alignments, automatic- or semi-automatic-techniques have to be developed 
[34]. 
 2.2. Selected methods and tools for ontology integration 
The implementation of ontology in one of the available standards is a rather complicated and time-consuming task 
without the help of any tools. To facilitate this task, several research groups and organizations have built ontology-
building environments [8,17]. These tools are used to build, edit, describe and combine ontologies. These solutions 
are very important for ontology development processes and use in applications. Ontology tools can be categorized 
according to the possibilities offered: programming tools, merging and matching tools, assessment/evaluation tools, 

3348	
Jarosław Wątróbski  / Procedia Computer Science 176 (2020) 3345–3355
annotation tools, query tools and learning tools. In the case of programming tools, environments and packages are 
indicated that can be used to build a new ontology from scratch or reuse existing ontologies, e.g. Protégé, NeOn, 
SWOOP [35–38]. Merging and matching tools are used to solve the problem of combining or adapting different 
ontologies in the same field, e.g. Protégé from OWLDiff, Chimaera, Coma [23,34,39,40]. Assessment tools are used 
to evaluate ontology content. They can reduce problems that occur during the integration and use of ontologies [3], 
e.g.: OntoAnalyzer, OntoClean, RaDON. Another group constituting annotation tools allows users to maintain 
ontological markers on websites [23], e.g. NeOn with Cicero and OWLDoc. Then, query tools include inference tools 
and engines. They allow users to easily create queries and inferences. They are generally closely related to the 
language used to build the ontology [41]. The last group covers learning tools. These tools allow users to learn 
ontology from natural language sources, partially structured sources and databases through machine learning 
techniques and natural language [42]. 
2.2.1. Tools for ontology merging 
PROMPT is an active tool for connecting ontologies. In order to advise on the stages of integration, it interprets 
the construction of ontology and manages the merging process [43]. It also indicates inaccuracies and presumed 
difficulties. OWLDiff (OWL Difference) is a plug-in based on the PROMPT tool for Protégé 3.x. [39], calculating 
the differences between two ontologies. It is used to merge two similar ontologies using the inference tool that verifies 
whether the models are semantically compatible. It shows the differences between them on two trees and then the user 
decides which elements to choose so that they can be combined into the one ontology [39]. 
Coma is software that identifies similar terms found in models and then merges them into the one ontology [40]. 
This environment was created during the implementation of a scientific project at the University of Leipzig. The 
application is dedicated to the needs of ontology matching based on the definition of semantic equivalents between 
metadata structures or models [34], such as databases, XML documents or ontologies. The positive aspects of the tool 
are multitasking architecture, effective default configuration, graphical user interface, advanced matching strategies 
and storage of all imported schemes [44]. Moreover, Coma software enables the user to manage comprehensive 
mapping and ontology integration [40]. It supports the automatic mode, which, using the selected match search model, 
calculates the most favorable ontology integration path, and the manual mode, used mainly as a complement to the 
automatic mode, in which the user has the ability to indicate accurate matches that will be saved in the result definitions 
in the next step. The next approach named NeOn Toolkit is a cross-platform ontology operating environment, available 
under an open source license [35]. It offers comprehensive support for every stage of ontology life. The NeOn Toolkit 
is part of the NeOn Project program run by the NeOn Foundation and partners [8]. Due to the large number of 
extension plugins, it provides many additional options such as annotation, ontology matching or inference mechanisms 
[36]. It operates on ontologies created in the form of OWL/RDF. Next, GoodRelations is a powerful dictionary that 
disseminates data on products and services [45]. Despite its integration with schema.org, it remained an independent 
project, thus the original version supports the correct data in the entire RDF/SPARQL/OWL environment. It aims to 
express many shopping details such as price, payment options, product parameters or even the location of the point of 
sale and its opening hours. GoodRelations ontology, due to the available Creative Commons Attribution version 3.0 
license, can be freely distributed, copied or adapted to the user needs [46]. GoodRelations is supported by Google, 
Yahoo!, BestBuy and much more. 
2.2.2. Available approaches 
ONION is a merging approach which was implemented by Stanford University’s Database Group [47]. It aims to 
provide articulation rules for resolving terminological heterogeneity and enables knowledge interoperability that will 
lead to a bridging of the semantic gap between different ontologies. Graph-based techniques and lexical techniques 
are applied by ONION to articulations [2,47]. 
PROMPT is an algorithm for ontology merging and alignment [43]. The process of merging and alignment starts 
from the identification of matching class names. Then, on base of this initial step, an iterative approach is performed 
for making automatic updates, finding resulting conflicts, and making suggestions to remove these conflicts. It means 
that this approach offers interactive suggestions to the users. Moreover, it solves mismatches at terminological and 
scope of concept level [37,43]. However, this process cannot be taken automatically.  

	
Jarosław Wątróbski  / Procedia Computer Science 176 (2020) 3345–3355
3349
Next, Chimaera is a semi-automatic or interactive tool dedicated to merging ontologies [48]. This tools starts by 
analyzing the ontologies to be merged. It automatically finds linguistic match merges. In case it cannot find any 
matching terms, it gives the user control over any further action [44,48,49]. It aims to solve mismatches at 
terminological and scope of concept level, and it helps alignment by providing possible edit points and it is not 
repeatability. These processes require user interaction. In general, this approach is similar to PROMPT, as both are 
embedded in ontology editing environments and offer the user interactive recommendations [2,44]. HCONE-merge 
approach is extended towards automating the merging process [6].  
HCONE-merge makes use of the intended informal meaning of concepts by mapping them to WordNet senses 
using the Latent Semantic Indexing (LSI) method [6]. Based on these mappings and using the reasoning services of 
Description Logics, HCONE-merge automatically aligns and then merges ontologies. HCONE-merge supports the 
mapping/merging of ontologies in absence of reference ontology [44]. Moreover, it incorporates semantic knowledge 
into the mapping/merging of ontologies, using additional natural language sources [5]. In spite of human involvement 
is required at the early stages of the process to validate the intended informal meanings assigned to ontology concepts, 
the further human involvement is limited to a small number of validations of mappings that HCONE-merge techniques 
suggest [8]. 
2.3. Comparative analysis of available approaches and taxonomy construction 
The key decision taken at the beginning of ontology construction is the choice of environment for its 
implementation, containing the appropriate functions [8,17]. In general, the tools differ mainly in the number of 
functionalities offered, the license and the supported formats. Due to a number of various approaches and its 
diversified functionalities, standardization in a form of an open knowledge repository, publicly available, of selected 
ones is proposed. The elaborated solution offers selected characteristics/parameters of existing algorithms and the 
strengths and various matching/merging strategies. The general aim of proposed an open knowledge repository is to 
provide the free access to the basic data and to compare the offered features. This form of knowledge representation 
is public available and focused on the possibility of updating and reusing. It is an attempt to structure knowledge that 
can be successfully extended with additional groups of solutions and parameters.  
Therefore, based on the features presented, the following set of parameters was defined. Main criteria cover the 7 
main features named as criteria with assigned 20 sub-criteria. The analysis covers 8 approaches: OWLDiff, PROMPT, 
NeOn, Coma, GoodRelation, ONION, Chmiaera and HCONE-merge [2,6,35,39,40,43,44,46,48]. To provide the more 
detailed level of specification, the following criteria were proposed: user interaction, matching (string matching, 
semantic matching, instance matching and structure matching), ontology structure (OWL, XML, RDF IDL, FRD, 
Ontologua), matching selection (based on concepts or properties), normalization, automation (semi, partial or fully 
automated) and additional resources – if exist.  The entire list of selected solutions has been presented in table 1. 
Table 1. Selected solutions supporting ontology integration. 
Main criteria 
Sub-criteria 
OWLDiff 
Prompt 
NeOn 
Coma 
GoodRela
tion 
ONION 
Chmiaera 
HCONE-
merge 
User interaction 
 
More 
 
More 
 
 
 
More 
More 
 
Yes 
Yes 
 
Yes 
Yes 
Yes 
 
 
Yes 
No 
 
 
 
 
 
 
 
 
Matching 
String 
matching 
Yes 
Yes 
No 
Yes 
No 
No 
No 
Yes 
Semantic 
matching 
Yes 
Yes 
Yes 
Yes 
Yes 
Yes 
Yes 
Yes 
Instance 
matching 
Yes 
No 
Yes 
Yes 
Yes 
No 
No 
Yes 
Structure 
matching 
Yes 
No 
Yes 
Yes 
Yes 
No 
Yes 
Yes 

3350	
Jarosław Wątróbski  / Procedia Computer Science 176 (2020) 3345–3355
Ontology 
structure 
OWL 
OWL 
OWL 
OWL 
OWL 
OWL 
 
 
OWL 
RDF 
RDF 
 
RDF 
 
RDF 
 
 
 
XML 
XML 
 
 
XML 
 
XML 
 
 
IDL 
 
 
 
 
 
IDL 
 
 
FRD 
 
FRD(s) 
 
 
 
 
 
 
Ontologua 
 
 
 
 
 
 
Ontologua 
Ontologua 
Matching 
selection 
Based on 
concepts 
Yes 
High 
value 
Yes 
Yes 
 
Yes 
 
 
Based on 
properties 
Yes 
 
Yes 
Yes 
 
Yes 
 
 
Normalization 
 
 
No 
 
 
 
 
No 
Yes 
Automation 
Semi-
automatic 
Yes 
Semi-
automatic 
Yes 
Yes 
 
Semi-
automatic 
Semi-
automatic 
Semi-
automatic 
Partial 
automatic 
 
 
 
 
 
 
 
 
Fully 
automated 
 
 
 
 
 
 
 
 
Additional 
resources 
NA 
 
NA 
 
 
 
 
NA 
 
Wordnet 
 
 
 
 
 
Wordnet 
 
Wordnet 
2.4. Implementation stage 
The process of ontology construction is based on an incremental process starting by the identification of main 
concepts from the identified approaches. This process is followed by the comparative analysis, and in the aftermath 
of this, an extraction of all concepts, properties and relationships from the common meta-model to form the backbone 
of the ontology will be carried out. Following the elaborated characteristics, it was decided to implement the solution 
in 
the 
form 
of 
an 
open 
taxonomy/ontology/knowledge 
repository, 
publicly 
available 
at 
https://webprotege.stanford.edu/#projects/5255c2ad-3feb-493c-acec-51f5839b26cc. It allows further users effortless 
update and straight development.  The ontology was implemented in Ontology Web Language (OWL) and using Web 
Protégé application [37]. The class Parameters takes a central place in the ontology (figure 1). This class is detailed to 
define different sub-classes in detail: User interaction, Matching, Ontology structure, Matching selection, 
Normalization, Automation and Additional resources. The class Approaches contains the sub-class named Selected 
approaches to collect the analyzed solutions. 
 
Fig. 1. Typology of the class Parameters and class Approaches. 
The proposed solution brings together various techniques and strategies in one place in order to provide a dedicated 
knowledge repository for the purpose of selection of merging approach, tool or strategy. The proposed knowledge 
repository explores 8 ontology merging approaches with assigned set of parameters specific to them as well as defined 

	
Jarosław Wątróbski  / Procedia Computer Science 176 (2020) 3345–3355
3351
relations (figure 2). This set of parameters will ultimately be developed and enriched with new features, and additional 
solutions are planned to be included. 
 
Fig. 2. Visualisation of class hierarchy with assigned IS-A relations. 
Figure 3 displays exemplary characteristics of selected approach named PROMPT and the relations between them. 
The superclasses containing the parameters are also shown. The class named PROMPT contains the following 
elements: the choice of matching is based on concepts, the possible ontological structure is: OWL, FRD, while 
matching to sematic and string is allowed. For automation level, the semi-automatic level is selected, whereas user 
interaction is required in the ontology integration process. The descriptive example is shown on figure 4.  
 
Fig. 3. Visualisation of an approach named Prompt with assigned relations. 

3352	
Jarosław Wątróbski  / Procedia Computer Science 176 (2020) 3345–3355
 
Fig. 4. Exemplary characteristics of selected approach named Prompt and the relations between them 
3. Validation and tests 
To prove the validity of the proposed knowledge repository, some working examples were considered. The level 
of development of test queries depends on the currently entered parameters and approaches included in the repository. 
The main assumption is to demonstrate the legitimacy of the proposed approach and effectiveness in providing 
dedicated solutions based on the queries created. 
The first competency question covers the following set of parameters: the preferable ontology structure is OWL, 
and the semi-automatic level is required. Then it was necessary to implement these requirements in the form of a 
defined class called Query 1, as shown on figure 5.  
 
 
Fig. 5. Definition of the query and its graphical representation for the first competency question 
The application of the reasoning mechanism provided a set of solutions that meet the necessary and sufficient 
conditions. The visualisation of the obtained results is depicted on figure 6.  
 
Fig. 6. Results of the first competency question presented using OWLViz tool 

	
Jarosław Wątróbski  / Procedia Computer Science 176 (2020) 3345–3355
3353
The second competency question contains the set of requirements to be fulfilled: semantic and structure matching 
and required user interaction. All of the parameters need to be considered. Defining and implementing these 
parameters, as shown on figure 7, allows you to start the reasoning process.  
 
Fig. 7. Definition of the query and its graphical representation for the second competency question 
The visualization was introduced on figure 8. Yellow classes define primitive classes, whereas orange class 
represents the defined class. Moreover, the class hierarchy is also shown from left to right. 
 
 
Fig. 8. Results of the second competency question presented using OWLViz tool 
The third competency question contains the set of requirements to be fulfilled: matching selection has to base on 
concepts and properties, and additional resources need to include WordNet. As in previous queries, all parameters 
should be considered. The presentation of the definition created is shown in Figure 9. 
 
Fig. 9. Definition of the query and its graphical representation for the third competency question 
The visualization was introduced on figure 10. In this case, only one approach fulfills the requirements.  
 
 
Fig. 10. Results of the third competency question presented using OWLViz tool 
In all test cases the proposed solution proved to be useful. In all test cases however the solution was dependent on 
input data and assigned parameters. With the further development of such knowledge repository quality of obtained 
results can be enhanced and extend the list of approaches dedicated to merging ontologies to be implemented in this 
repository. 
4. Conclusions 
The dissemination of ontologies and taxonomy in many areas increasingly requires the integration of multiple such 
ontologies. This paper demonstrates a practical approach for gathering the selected information of strategies, tools and 
approaches dedicated to ontology merging. The presented approach containing 27 parameters and 8 solutions can be 
extended with additional solutions. The validation stage confirmed the correct operation of the created repository. The 

3354	
Jarosław Wątróbski  / Procedia Computer Science 176 (2020) 3345–3355
proposed approach can be easily implemented as a lightweight library and used in any kind of application managing 
OWL/RDF or OWL/XML or adapted in a given management information system.  
There are several options for future work. First of all, it will be interesting to find ways to extend the merge 
approaches for more general and complex ontologies, without the need for manual operation by the user, and then 
including them in the resulting knowledge repository. Secondly, the proposed solution is only a fragment of the 
repository and will eventually be expanded to include further groups of solutions. Thirdly, the process of ontology 
integration brings some of the specific challenges covering both finding similarities and differences between 
ontologies in the most automatic way and defining mappings between ontologies. Promising issue is representing 
uncertainty and imprecision in mappings related to further developing an ontology-integration approaches that support 
these processes.  
Acknowledgments   
The project is financed within the framework of the program of the Minister of Science and Higher Education under 
the name "Regional Excellence Initiative" in the years 2019-2022, project number 001/RID/2018/19, the amount of 
financing PLN 10,684,000.00. 
References 
[1] 
Gruber TR. A translation approach to portable ontology specifications. Knowledge Acquisition 1993;5:199–220. 
https://doi.org/10.1006/knac.1993.1008. 
[2] 
Choi N, Song I-Y, Han H. A survey on ontology mapping. ACM SIGMOD Record 2006;35:34–41. 
https://doi.org/10.1145/1168092.1168097. 
[3] 
Gangemi A, Catenacci C, Ciaramita M, Lehmann J. A theoretical framework for ontology evaluation and validation. vol. 166, 2005, p. 
16. 
[4] 
Do, Nguyen, Mai. A Method of Ontology Integration for Designing Intelligent Problem Solvers. Applied Sciences 2019;9:3793. 
https://doi.org/10.3390/app9183793. 
[5] 
Narula GS. Ontology Mapping and Merging Aspects in Semantic Web. International Robotics & Automation Journal 2018;4. 
https://doi.org/10.15406/iratj.2018.04.00087. 
[6] 
Kotis K, Vouros GA. The HCONE Approach to Ontology Merging. In: Bussler CJ, Davies J, Fensel D, Studer R, editors. The Semantic 
Web: Research and Applications, vol. 3053, Berlin, Heidelberg: Springer Berlin Heidelberg; 2004, p. 137–51. 
https://doi.org/10.1007/978-3-540-25956-5_10. 
[7] 
Konys A, Wątróbski J, Różewski P. Approach to Practical Ontology Design for Supporting COTS Component Selection Processes. In: 
Selamat A, Nguyen NT, Haron H, editors. Intelligent Information and Database Systems, vol. 7803, Berlin, Heidelberg: Springer Berlin 
Heidelberg; 2013, p. 245–55. https://doi.org/10.1007/978-3-642-36543-0_26. 
[8] 
Priya M, Aswani Kumar Ch. A Survey of State of the Art of Ontology Construction and Merging using Formal Concept Analysis. Indian 
Journal of Science and Technology 2015;8. https://doi.org/10.17485/ijst/2015/v8i24/82808. 
[9] 
Raunich S, Rahm E. Target-driven merging of taxonomies with Atom. Information Systems 2014;42:1–14. 
https://doi.org/10.1016/j.is.2013.11.001. 
[10] 
Shenoy M. Secured Ontology Mapping. International Journal of Web & Semantic Technology 2012;3:83–91. 
https://doi.org/10.5121/ijwest.2012.3408. 
[11] 
Fernández-López M, Gómez-Pérez A. Overview and analysis of methodologies for building ontologies. The Knowledge Engineering 
Review 2002;17:129–56. https://doi.org/10.1017/S0269888902000462. 
[12] 
Wątróbski J. Outline of Multicriteria Decision-making in Green Logistics. Transportation Research Procedia 2016;16:537–52. 
https://doi.org/10.1016/j.trpro.2016.11.051. 
[13] 
Szopik-Depczyńska K, Cheba K, Bąk I, Ioppolo G. User-Driven Innovation in Poland: Determinants and Recommendations. 
Sustainability 2019;12:171. https://doi.org/10.3390/su12010171. 
[14] 
Bashir Z, Rashid T, Sałabun W, Zafar S. Certain convergences for intuitionistic fuzzy sets. Journal of Intelligent & Fuzzy Systems n.d.:1–
12. 
[15] 
Konys. Green Supplier Selection Criteria: From a Literature Review to a Comprehensive Knowledge Base. Sustainability 2019;11:4208. 
https://doi.org/10.3390/su11154208. 
[16] 
Buitelaar P, Cimiano P, Magnini B. Ontology learning from text: methods, evaluation and applications. vol. 123. IOS press; 2005. 
[17] 
Pei M, Nakayama K, Hara T, Nishio S. Constructing a Global Ontology by Concept Mapping Using Wikipedia Thesaurus. 22nd 
International Conference on Advanced Information Networking and Applications - Workshops (aina workshops 2008), Gino-Wan, 
Okinawa, Japan: IEEE; 2008, p. 1205–10. https://doi.org/10.1109/WAINA.2008.117. 
[18] 
Faizi S, Sałabun W, Ullah S, Rashid T, Więckowski J. A New Method to Support Decision-Making in an Uncertain Environment Based 
on Normalized Interval-Valued Triangular Fuzzy Numbers and COMET Technique. Symmetry 2020;12:516. 
https://doi.org/10.3390/sym12040516. 
[19] 
Sałabun W, Karczmarczyk A. Using the comet method in the sustainable city transport problem: an empirical study of the electric 
powered cars. Procedia Computer Science 2018;126:2248–60. 
[20] 
Ashraf J, Hadzic M. Domain ontology usage analysis framework, IEEE; 2011, p. 75–82. 

	
Jarosław Wątróbski  / Procedia Computer Science 176 (2020) 3345–3355
3355
[21] 
Missikoff M, Navigli R, Velardi P. The Usable Ontology: An Environment for Building and Assessing a Domain Ontology. In: Horrocks 
I, Hendler J, editors. The Semantic Web — ISWC 2002, vol. 2342, Berlin, Heidelberg: Springer Berlin Heidelberg; 2002, p. 39–53. 
https://doi.org/10.1007/3-540-48005-6_6. 
[22] 
Wątróbski J, Ziemba E, Karczmarczyk A, Jankowski J. An Index to Measure the Sustainable Information Society: The Polish Households 
Case. Sustainability 2018;10:3223. https://doi.org/10.3390/su10093223. 
[23] 
Francescomarino CD, Ghidini C, Rospocher M, Serafini L, Tonella P. A framework for the collaborative specification of semantically 
annotated business processes. Journal of Software Maintenance and Evolution: Research and Practice 2011;23:261–95. 
https://doi.org/10.1002/smr.525. 
[24] 
Szopik-Depczyńska K, Cheba K, Bąk I, Kędzierska-Szczepaniak A, Szczepaniak K, Ioppolo G. Innovation level and local development 
of EU regions. A new assessment approach. Land Use Policy 2020;99:104837. https://doi.org/10.1016/j.landusepol.2020.104837. 
[25] 
Missikoff M, Taglino F. Business and Enterprise Ontology Management with SymOntoX. In: Horrocks I, Hendler J, editors. The 
Semantic Web — ISWC 2002, vol. 2342, Berlin, Heidelberg: Springer Berlin Heidelberg; 2002, p. 442–7. https://doi.org/10.1007/3-540-
48005-6_38. 
[26] 
Di Francescomarino C, Ghidini C, Rospocher M, Serafini L, Tonella P. Semantically-Aided Business Process Modeling. In: Bernstein A, 
Karger DR, Heath T, Feigenbaum L, Maynard D, Motta E, et al., editors. The Semantic Web - ISWC 2009, vol. 5823, Berlin, Heidelberg: 
Springer Berlin Heidelberg; 2009, p. 114–29. https://doi.org/10.1007/978-3-642-04930-9_8. 
[27] 
Wątróbski J, Jankowski J, Piotrowski Z. The selection of multicriteria method based on unstructured decision problem description, 
Springer; 2014, p. 454–65. 
[28] 
Palczewski K, Sałabun W. The fuzzy TOPSIS applications in the last decade. Procedia Computer Science 2019;159:2294–303. 
https://doi.org/10.1016/j.procs.2019.09.404. 
[29] 
Konys A. A Tool Supporting Mining Based Approach Selection to Automatic Ontology Construction. IADIS Journal on Computer 
Science and Information Systems 2015:3–10. 
[30] 
Wątróbski J, Jankowski J. Guideline for MCDA method selection in production management area. New frontiers in information and 
production systems modelling and analysis, Springer; 2016, p. 119–38. 
[31] 
Konys A. Knowledge systematization for ontology learning methods. Procedia Computer Science 2018;126:2194–207. 
https://doi.org/10.1016/j.procs.2018.07.229. 
[32] 
Wątróbski J, Jankowski J. Knowledge management in MCDA domain, IEEE; 2015, p. 1445–50. 
[33] 
Qu Y, Hu W, Cheng G. Constructing virtual documents for ontology matching, 2006, p. 23–31. 
[34] 
Massmann S, Engmann D, Rahm E. COMA++: Results for the ontology alignment contest OAEI 2006, CEUR-WS. org; 2006, p. 107–14. 
[35] 
Suárez-Figueroa MC. NeOn Methodology for building ontology networks: specification, scheduling and reuse 2010. 
[36] 
Haase P, Lewen H, Studer R, Tran DT, Erdmann M, d’Aquin M, et al. The neon ontology engineering toolkit. WWW 2008. 
[37] 
Musen MA. The protégé project: a look back and a look forward. AI Matters 2015;1:4–12. https://doi.org/10.1145/2757001.2757003. 
[38] 
Kalyanpur A, Parsia B, Sirin E, Grau BC, Hendler J. Swoop: A web ontology editing browser. Journal of Web Semantics 2006;4:144–53. 
[39] 
Kremen P, Smid M, Kouba Z. OWLDiff: A practical tool for comparison and merge of OWL ontologies, IEEE; 2011, p. 229–33. 
[40] 
Massmann S, Raunich S, Aumüller D, Arnold P, Rahm E. Evolution of the COMA match system, CEUR-WS. org; 2011, p. 49–60. 
[41] 
Khan AA, Khader SA. An approach for externalization of expert tacit knowledge using a query management system in an e-learning 
environment. The International Review of Research in Open and Distributed Learning 2014;15. 
https://doi.org/10.19173/irrodl.v15i6.1935. 
[42] 
Hazman M, R. El-Beltagy S, Rafea A. A Survey of Ontology Learning Approaches. International Journal of Computer Applications 
2011;22:36–43. https://doi.org/10.5120/2610-3642. 
[43] 
Noy NF, Musen MA. Anchor-PROMPT: Using Non-Local Context for Semantic Matching., 2001. 
[44] 
Falconer SM, Noy NF, Storey M-AD. Ontology mapping-A user survey., Citeseer; 2007. 
[45] 
Hepp M. Goodrelations: An ontology for describing products and services offers on the web, Springer; 2008, p. 329–46. 
[46] 
Hepp M, Radinger A, Wechselberger A, Stolz A, Bingel D, Irmscher T, et al. GoodRelations Tools and Applications, 2009. 
[47] 
Mitra P, Wiederhold G, Kersten M. A Graph-Oriented Model for Articulation of Ontology Interdependencies. In: Zaniolo C, Lockemann 
PC, Scholl MH, Grust T, editors. Advances in Database Technology — EDBT 2000, vol. 1777, Berlin, Heidelberg: Springer Berlin 
Heidelberg; 2000, p. 86–100. https://doi.org/10.1007/3-540-46439-5_6. 
[48] 
McGuinness DL, Fikes R, Rice J, Wilder S. The chimaera ontology environment. AAAI/IAAI 2000;2000:1123–4. 
[49] 
Arpírez JC, Corcho O, Fernández-López M, Gómez-Pérez A. WebODE: a scalable workbench for ontological engineering. Proceedings 
of the international conference on Knowledge capture  - K-CAP 2001, Victoria, British Columbia, Canada: ACM Press; 2001, p. 6. 
https://doi.org/10.1145/500737.500743. 
 

