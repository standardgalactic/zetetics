+ 
Ontology 101:  An Introduction to Knowledge 
Representation & Ontology Development 
Elisa Kendall, Thematix Partners LLC & Deborah McGuinness, RPI / McGuinness Associates 
18 August 2015 

2 
+ 
Mars was photographed by the Hubble Space Telescope in August 2003 as 
the planet passed closer to Earth than it had in nearly 60,000 years.  
Image Credit: NASA, J. Bell (Cornell U.) and M. Wolff (SSI) 
A sunset on Mars creates a glow due to the 
presence of tiny dust particles in the 
atmosphere. This photo is a combination of 
four images taken by Mars Pathfinder, which 
landed on Mars in 1997. Image credit: 
NASA/JPL 
This 360-degree panorama from NASA's Curiosity 
Mars rover shows the surroundings of a site on 
lower Mount Sharp where the rover spent its 
1,000th Martian day, or sol, on Mars, in May 2015.  
Image credit: NASA/JPL 
The Planetary Data Store (PDS) is a distributed repository of 40+ years’ imagery & 
data taken by a range of instruments on many diverse missions, available for 
scientific research.  
Content management 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 
2 
This May 29, 2015, view 
of a Martian sandstone 
target called "Big Arm" 
covers an area about 1.3 
inches wide in detail 
that shows differing 
shapes and colors of 
sand grains in the stone. 
Image credit: NASA/JPL  

3 
+ 
Provenance/sources for tracking family members in the 19th 
century include early census data (often error prone), military 
records, passenger & immigration lists, online documents (e.g., 
county histories, church histories, etc.) 
• Historical/forensic research requires cross-domain search of a wide variety of resources
within a given geo-spatial/temporal context
• Similar capabilities are essential for business intelligence, law enforcement, government
applications – all require terminology reconciliation
Smart search 
3 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

4 
+ 
Data incongruity and fragmentation often
found across silos
Limited data standards
Data rationalization problems
Costly application program logic required
to process data into concepts
Brittle schemas are costly to change
Rigid and limited taxonomies
Data linkage and integration despite silos
Open global reusable data standards
Alignment based on meaning
Highly expressive data schemas with built
in rules that reflect concepts
Flexible changeable schemas
Rich multi-level taxonomies
Current State of Business Data 
Desired State of Business Data 
Common challenges for institutions 
4 
-- courtesy David Newman, Wells Fargo, & Mike Bennett, EDM Council 
Equity 
Eq 
Swap 
Gov 
Bond 
Cred 
Def 
Swap 
Trade 
Y 
Trade 
X 
Product 
 X X 
Counterparty 
IR 
Swaps 
MR 
Daily PL 
Package 
Trade X 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

5 
+ Tutorial Outline 
Introduction to Knowledge Representation 
OWL Basics 
Tools & Applications 
5 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

6 
+ Part 1: Introduction to Knowledge Representation 
A little background and a few definitions 
Layers of abstraction & conceptual modeling 
Classifying ontologies 
A little methodology 
6 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

7 
+ Historical Context 
Knowledge Representation
Cross-disciplinary field with historical roots in philosophy, linguistics,
computer science, and cognitive science
Goal is to represent the meaning of knowledge unambiguously, so that it can
be understood, shared, and used by computational agents acting on behalf of
people to accomplish some task
Plato and Aristotle at the School of 
Athens, by Raphael  
Philosophical origins
Socrates questioning, Plato’s studies of epistemology –
the nature of knowledge
Aristotle’s shift to terminology, development of logic as
a precise method for reasoning about knowledge
Arguments for the existence of God dating back to
Anselm of Canterbury
Medieval theories of reference and of mental language,
Scholastic logic
7 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

8 
+ Historical Context 
“Brain Cells for Grandmother” 
Neuroscientists continue to debate today how we store 
memories 
One theory, documented as recently as this month in a 
Scientific American article, suggests that single neurons 
hold our memories, as concept cells 
“Each concept – each person or thing in everyday 
experience – may have a set of corresponding neurons 
assigned to it” 

Rodrigo Quian Quiroga, Itzhak Fried and Christof 
Koch, February 2013 issue, Scientific American 

“…a relatively few neurons, numbering in the thousands 
or perhaps even less, constitute a “sparse” 
representation of an image.” 

“ Our brain may use a small number of concept cells to 
represent many instances of one thing as a unique 
concept – a sparse and invariant representation … What 
is important is to grasp the gist of particular situations 
involving persons and concepts that are relevant to us, 
rather than remembering an overwhelming myriad of 
meaningless detail.” 

“The full recollection of a single memory episode 
requires links between different but associated concepts 
… If two concepts are related, some of the neurons 
encoding one concept may also fire to the other one.” 
 
8 
Visual perception - Neural coding 
from the University of Leicester,   
Department of BioEngineering 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

9 
+ 
An ontology is a specification of a conceptualization.  
– Tom Gruber 
Knowledge engineering is the application of logic and ontology to the task of 
building computable models of some domain for some purpose. – John Sowa 
Artificial Intelligence can be viewed as the study of intelligent behavior 
achieved through computational means.  Knowledge Representation then is 
the part of AI that is concerned with how an agent uses what it knows in 
deciding what to do. – Brachman and Levesque, KR&R 
Knowledge representation means that knowledge is formalized in a symbolic 
form, that is, to find a symbolic expression that can be interpreted. – Klein and 
Methlie  
The task of classifying all the words of language, or what's the same thing, all 
the ideas that seek expression, is the most stupendous of logical tasks.  
Anybody but the most accomplished logician must break down in it utterly; 
and even for the strongest man, it is the severest possible tax on the logical 
equipment and faculty. – Charles Sanders Peirce, letter to editor B. E. Smith of 
the Century Dictionary 
Definitions 
9 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

10 
+ What is an ontology? 
An ontology specifies a rich description of the 
Terminology, concepts, nomenclature
Relationships among and between concepts and individuals
Sentences distinguishing concepts, refining definitions and relationships
(constraints, restrictions, regular expressions)
relevant to a particular domain or area of interest.
10 
* Based on AAAI ‘99 Ontologies Panel  ̶  McGuinness, Welty, Uschold, Gruninger, Lehmann
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

11 
+ Logic and ontological commitment 
Logic can be more difficult to read than English, but is more precise:
(forall ((x FloweringPlant)) 
 (exists ((y Bloom)(z BloomColor))(and (hasPart x y)(hasCharacteristic y z)) ) ) 
Translation: Every flowering plant has a bloom which is a part of it, and which has a 
characteristic bloom color. 
Language: ISO Common Logic, CLIF syntax 
Logic is a simple language with few basic symbols
The level of detail depends on the choice of predicates –
the predicates represent an ontology of the relevant concepts
different choices of predicates represent different ontological
commitments
11 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

12 
+ 
Ontologies provide a common vocabulary for use by independently 
developed resources, processes, services  
Agreements between organizations sharing common services can be 
specified as formal ontologies, or ontologies with rules, to 
assist in enforcing explicitly stated policies 
evaluate usage criteria for services 
ensure that the meaning of relevant concepts is expressed unambiguously 
By composing / mapping ontologies and mediating terminology across 
participating events, resources and services, independently-
developed services can work together to share information and 
processes consistently, accurately, and completely 
Ontologies also ensure 
Valid conversations among agents to collect, process, fuse, and exchange 
information 
Accurate searching by ensuring context using concept definitions and 
relations in addition to statistical relevance 
Policies and rules are consistent with one another to assist in semi-
automated policy analysis and enforcement 
Ontology-based technologies 
12 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

13 
+ KR language features 
Vocabulary –  
Domain-independent logical symbols and reserved terms  
Domain-dependent constants, identifying individuals, properties, or 
relations in the application domain or universe of discourse 
Variables, whose range is governed by quantifiers 
Punctuation that separates or groups other symbols 
Syntax –  
rules for combining the symbols into well-formed expressions 
rules may be stated in a linear grammar, graph grammar, or independent 
abstract syntax 
Semantics –  
a theory of reference that determines how the constants and variables 
are associated with things in the universe of discourse 
a theory of truth that distinguishes true statements from false ones 
Rules of Inference –  
rules that determine how one pattern can be inferred from another 
if the logic is sound, the rules of inference must preserve truth as 
determined by the semantics 
13 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

14 
+ Classifying logics 
Logics vary from classical FOL along a number of  dimensions: 
syntax  
the subsets of FOL they implement – for example, propositional logic without 
quantifiers, Horn-clause, which excludes disjunctions in conclusions such as 
Prolog, and terminological or definitional logics, containing additional 
restrictions 
their proof theory: 
•
Intuitionistic logic and relevance logic rule out certain extraneous information  
•
Non-monotonic logics allow introduction of default assumptions 
•
Access-limited logic  restricts the number of times a proposition can be used in a 
proof; Linear logic allows a proposition to be used only once 
•
Modal logic incorporates modal auxiliaries (◊p means p is possibly true;  p means p is 
necessarily true), temporal logic extends model logic to include always, sometimes 
•
Intensional logics  express concepts such as need, ought, hope, fear, wish, believe, 
know, expect, and intend 
their model theory, which determines how expressions in the language are 
evaluated with respect to some model of the world:  classical FOL is two-
valued; a three-valued logic introduces unknowns; fuzzy logic uses the same 
notation as FOL but with an infinite range of certainty factors (0.0 to 1.0) 
ontology – frameworks may include support for built-in components, such as 
set theory or time 
14 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

15 
+ Description logic 
A family of logic-based Knowledge Representation formalisms 
Descendants of semantic networks and frame-based languages such as KL-
ONE 
Describe domain in terms of concepts (classes), roles (relationships), and 
individuals (instances) 
Distinguished by  
Formal semantics 
•
Decidable fragments of FOL 
•
Closely related to propositional, modal, and dynamic Logics 
Provision of inference services 
•
Sound and complete decision procedures for key problems 
•
Implemented systems (highly optimized) 
Applications include 
Configuration – product configurators, consistency checking, constraint 
propagation, first significant industrial application (e.g., CLASSIC) 
Question answering and recommendation systems, for suggesting sets of 
responses or options depending on the nature of the queries 
Model engineering applications, including those that involve analysis of the 
ontologies or other kinds of models to determine whether or not they meet 
certain methodological or other design criteria 
15 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

16 
+ 
An ontology is a conceptual model of some aspect of a particular 
universe of discourse (or of a domain of discourse) 
Typically, ontologies contain only “rarified” or “special” individuals, 
metadata, representing elemental concepts critical to the domain 
A knowledge base is a persistent repository for 
Ontology & metadata representing individuals, facts, & rules about how they 
can be combined or relate to one another 
Metadata, individuals, facts & rules only – in some applications and 
frameworks the ontology is separately maintained 
Most inference engines require in-memory deductive databases for 
efficient reasoning (including commercially available reasoners) 
A knowledge base may be implemented in a physical, external 
database, such as a relational database, but reasoning is typically 
done on a subset (partition) of that knowledge base in memory 
Knowledge bases, databases, and ontology 
16 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

17 
+ 
Reasoning is the mechanism by which the assertions made in an 
ontology and related knowledge base are evaluated by an inference 
engine. 
In classical logic, the validity of a particular conclusion is retained even if new 
information is asserted in the knowledge base. 
This may change if some of the preconditions are actually hypothetical 
assumptions invalidated by the new information. 
The same idea applies for arbitrary actions – new information can make 
preconditions invalid. 
Reasoners work by using the rules of inference to look for the 
“deductive closure” of the information they are given. 
They take the explicit statements and the rules of inference and apply those 
rules to the explicit statements until there are no more inferences they can 
make. 
When some kind of logical inconsistency is uncovered, then the reasoner must 
determine, from a given invalid statement, whether or not others are also 
invalid. 
The “housekeeping” associated with tracking the threads that support 
determining which statements are invalidated is called truth maintenance. 
Reasoning and truth maintenance 
17 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

18 
+ 
If all new information is “positive” (monotonic), then all prior 
conclusions will, by definition, remain valid. 
Problems arise if new information negates a prior assumption, 
causing it to be withdrawn –  
Conclusive information is not available? 
The assumption cannot be proven? 
The assumption is not provable using certain methods? 
The assumption is not provable given a fixed quantity of time? 
The answers to these questions can result in different approaches to 
negation and differing interpretations by non-monotonic reasoners. 
Solutions include chronological and “intelligent” backtracking 
algorithms, heuristics, circumscription algorithms, justification or 
assumption-based retraction, depending on the reasoner and 
methods used for truth maintenance. 
Reasoning efficiency is dependent, in part, on the algorithms applied 
for truth maintenance. 
Negation 
18 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

19 
+ Explanations and proofs 
When a reasoner draws a particular conclusion, many users and 
applications want to understand why?  
Primary motivations include interoperability, reuse, trust, and 
debugging 
Understanding the provenance of the information and results is 
crucial, especially when web-based information is involved 
What information sources were used (source) 
How recently they were updated (currency) 
How reliable these sources are (authoritativeness) 
Was the information directly available or derived, and if derived, how 
(method of reasoning) 
Methods used to explain why a reasoner reached a particular 
conclusion include explanation generation and proof specification 
 
19 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

20 
+ Analysis approaches 
20 
Domain analysis  ̶  the systematic development of 
a model of some area of interest for a particular 
purpose 
The analysis process, including the specific 
methodology and level of effort required, depends 
on  
the context of the work 
the requirements and use cases relevant to the project 
the target deliverables 
Approaches to analysis range from high-level 
mind mapping and brainstorming … to detailed 
collaboration, dialog, and information modeling to 
support knowledge sharing 
Common capabilities include  
“drawing a picture” that includes concepts and 
relationships between them 
producing sharable artifacts, that vary depending on 
the tool – often including web sharable drawings 
 Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

21 
+ Abstraction layers 
21 
Context •Identify subject areas 
Conceptual •Define the meaning of things in the domain 
Logical 
•Describe the logical representation of concepts, terminology, and their 
relationships 
Physical 
•Describe the physical representation of data for repositories and systems 
Definition •Encode the data, rules, and logic for a specific development platform 
Instance 
•Hold the values of the properties applied to the data in tables in a 
repository 
Business Architecture, 
Information Architecture & 
Ontology 
Ontology, Entity-Relationship (ER), 
Business Process Modeling (BPMN), 
Systems Entgineering (SysML) … 
ER, Relational, XML Schema 
XML, source code, scripting 
languages, stored procedures… 
Physical KBs,  
databases, asset repositories… 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

22 
+ Hypothetical conceptual model “EU-Rent” 
Produced using Embarcadero EA/Studio Business Modeler Edition, courtesy Kenn Hussey 
22 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

23 
+ Hypothetical logical model “EU-Rent” 
Produced using Embarcadero ER/Studio, courtesy Kenn Hussey 
23 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

24 
+ 
Produced using Embarcadero ER/Studio, courtesy Kenn Hussey 
Hypothetical physical model “EU-Rent” 
24 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

25 
+ Classifying ontologies 
Level of Complexity 
Level of Expressivity 
Simple Taxonomy 
Glossary 
Topic Map 
Concept Map 
Hierarchical Taxonomy 
Entity – Relationship  
Model 
Database Schema 
OO Software Model 
KR System 
XML Schema 
 
Classification techniques are as diverse 
as conceptual models; and generally 
 include understanding 
 
Level of Expressivity 
Level of Complexity / Structure 
Granularity 
Target Usage, Relevance 
Amount of Automation, Reasoning Requirements 
Prescriptive vs. Descriptive / Reliability / Level 
of Authoritativeness 
Design Methodology  
Governance 
Vocabulary Management, Metrics 
 
25 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

26 
+ Considerations 
Intended use of ontologies, including domain requirements (e.g., 
scientific and engineering apps require formulas, units of measure, 
computations that may be challenging to represent) 
Intended use of KRSs that implement them, including reasoning 
requirements, questions to be answered 
For distributed environments, the number and kinds of resources, 
processes, services requiring ontologies – how distributed, how 
unique, developed collaboratively or independently, dynamic 
community participation or static 
What kinds of transformations are required among processes, 
resources, services to support semantic mediation 
Ontology and KRS alignment / de-confliction / ambiguity resolution 
requirements 
Ontology and KRS composition requirements, dynamic vs. static 
composition, in what environment and under what constraints 
Performance, sizing, timing requirements of target environment 
26 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

27 
+ 
Requirements, domain & use case analysis are critical  
Develop initial source/reference material 
Focus on system or application requirements 
Iterative development starting with a “thread” that covers basic 
capabilities can ground the work and prioritize decisions 
Need to understand and communicate  
Architectural trade-offs, cost & technical benefits 
The nature of the information & kinds of questions that need to be 
answered drive the architecture, scope and design 
Use discipline from formal domain analysis and use case 
development to  
document and explain requirements 
identify information sources and models (including modularity) 
needed 
limit scope creep 
Reuse standards and well-tested, available models whenever 
possible 
A little methodology … 
27 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

28 
+ What to look for  
28 
A controlled vocabulary  
Royal Horticultural Society Color Chart 
A hierarchical or taxonomic structure 
 
 Linnaean taxonomy,  the Plant List – from the Royal 
Botanic Gardens, Kew, and Missouri Botanical Garden 
Knowledge supporting structured queries 
(especially for web site, database, information-
oriented applications) 
Find deciduous trees native to northern California that are 
drought tolerant, resistant to oak root fungus, and grow 
no taller than 20-25 feet 
Requirements specifications 
Reference materials that support domain analysis 
Corporate standards for modeling style as well as 
content 
 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

29 
+ Using use cases to gather requirements 
A good summary for every use case should include:
A description of the basic business requirement / need the use case
is intended to support
Primary goals
Scope – identify any known boundaries as a starting point
Pre-conditions and post conditions – any assumptions you know
about the state of the “system”/world before and after
Actors and interfaces – identify primary actors, information sources,
interfaces to existing or new systems
Triggers – what kicks off the use case, any particular series of events,
situation, activity, etc., and any that affect the flow
Performance requirements – including any sizing or timing
constraints, “ilities” , etc.
29 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

30 
+ Use case content 
Outline the major process steps for both the “normal”, or
primary scenario, and alternative flows, such as if things don’t go
well
Use case and activity diagrams – typically done in UML, but
could be Visio, PowerPoint, or  whatever tools your team is
comfortable with
Usage scenarios – you should have at least two narrative
“stories” that describe how one of the main actors would
experience the use case, with the intent of identifying additional
requirements
Competency questions – identify as many of the questions you
want the knowledge base / application to answer as possible
Resources – describe any known contributing resources and
repositories, other external systems that participate in the use
case to the degree possible
30 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

31 
+ Example partial use case diagram for 
content development process 
31 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

32 
+ 
General concepts as well as domain-specific knowledge 
Basic starting point – cross-domain definitions 
Namespace definitions (as applicable), metadata, naming conventions, 
governance policies 
Commonly used structures & vocabularies, such as  
messaging interface standards 
common API structures 
corporate standard business glossaries and vocabularies 
corporate or departmental business architecture and process models 
domain-independent standards for accounting, currencies, reporting 
Common metadata for model, schema, and ontology management (e.g., 
Dublin Core,  for documents & models, ISO 1087 for synonyms & similar 
relations, MIME media types for images & multimedia,  SKOS for 
annotations, etc.) 
Domain vocabularies must be prioritized, selected based on 
business requirements, clear ROI 
 
Start with canonical definitions 
32 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

33 
+ Basic domain analysis 
Identify the main concepts in the domain – classes  / terms 
For a trading system – trade, trader, trading platform, financial 
instrument, contract, counterparty, price, market valuation … 
For a nursery example – landscape, light requirements, 
dimensions, plants, planting material, hardscape material, 
containers … 
Identify any structural relationships between the concepts – 
both hierarchical and lateral relationships 
Specialization / generalization (parent / child) – always true is-a 
hierarchies, no “cheating” on this 
isPartOf / hasPart, isMemberOf / hasMember, other mereologic 
relations 
Other functional, structural, behavioral relationships 
Key attributes – dates/times, identifiers, etc. 
33 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

34 
+ 
Layout a high-level architecture for key ontologies and ontology elements
Identify the relationships among elements – roles, domain, interface, process,
utility
Define an approach for gathering content from subject matter experts,
possibly based on IDEF5 (Integrated Definition Methods) Ontology Capture
Method Analysis, that includes
Understanding and documenting source materials
An interview template
Traceability back to your use cases
For each ontology element
Describe its domain and scope, how it will be used
Identify example questions and anticipated/sample answers for the application(s) it
will support
Identify key stakeholders, ownership, maintenance, resources for instance knowledge
Describe anticipated reuse/evolution path
Identify critical standards, resources that it must interoperate with, dependencies
Resources
http://www.idef.com/IDEF5/html
http://www.kbsi.com/technology/methods/sbont.htm
Capturing definitions 
34 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

35 
+ Terminology analysis 
ISO 704, Principles & Methods for Terminology Work, provides a
methodology for describing concepts & terms
Uses ISO 1087 for terminology
Uses ISO 860 for terminology “harmonization” (alignment) methods
Basis for typical methods used for taxonomy development today
Describes how to flesh out definitions – Aristotelian genus/differentia
structure
For classes – “a <parent class> that …”, including text that provides content you’ll
later express as restrictions, other refinement
For properties – “a <parent property> relation [between <domain> and
<range>] that …”
SBVR style formal definitions (Semantics of Business Vocabularies and Rules – see
http://www.omg.org/spec/SBVR/
Recommendations strategies for relating terms to one another using
standard vocabulary
ISO 1087 – great resource for language to describe kinds of relationships,
acronyms & other designations, preferred vs. deprecated terms, etc.
ISO 860 augments this with recommendations for vocabulary comparison
35 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

36 
+ Successful strategies … 
Successful ontology/vocabulary development model reflects
small development team with broader user Community of
Interest / stakeholders, especially for reusable content
models
Provide readable documentation, even for small communities
State maintenance policies clearly
Identify versions
Publish models for ease of accessibility by COI members
Where different stakeholder communities have unique
requirements, explicitly specified models can be mapped to
one another, translation services developed
Common terminology services (CTS2) standard from the OMG for
healthcare
36 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

37 
+ Common applications 
Canonical information definitions – shared representation & 
understanding facilitates service interoperability, reuse 
Asset/artifact repository search & retrieval 
Service registration, description, discovery & management 
Augmented decision support and business rule applications 
Better web site / application architecture 
Smarter search capabilities (e.g., faceted search, pull-focused 
applications) 
Customer experience & cross-sell / upsell (push) – 
recommendation systems 
Richer interoperability among trading partners – extensions 
to messaging agreements 
Automated verification 
 
37 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

38 
+ Separation of concerns / modularity 
Critical dimensions aid in determining module boundaries –  
separate business-related content from technical detail  
aspects of the business content, such as marketing and branding, 
from others describing products or manufacturing processes 
separate disciplines into independent modules 
Other considerations include separation based on  
back-end store / source repositories 
application boundaries, system interfaces 
distributed resources 
the need to reason over some parts of the knowledge base but not 
others to answer sets of critical questions 
performance requirements, for reasoning, query answering, etc. 
asserted vs. inferred content 
38 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

39 
+ Naming and versioning 
Naming conventions and versioning policies are critical
for –every– organization
Namespace definitions for ontologies are critical, along with
policies for their management that are well understood
http://<authority>/<subdomain>/<topic>/<date, in
YYYYMMDD form>/filename.extension  is common practice
in some organizations, with content negotiation point to the
latest version
Levels of hierarchy may be added for large organizations or
modularized ontologies
Namespace prefixes (abbreviations) for individual modules,
especially where there are multiple modules, can be
important
If you post something at a URL, the idea is that it should be
permanent, so namespace design and governance is
essential
39 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

40 
+ Best practices in namespace development 
Availability – people should be able to retrieve a description about the
resource identified by the URI from the network (albeit internally)
Understandability – there should be no confusion between identifiers for
networked documents and identifiers for other resources
URIs should be unambiguous
URIs are meant to identify only one of them, so one URI can't stand for both a
networked document and a real-world object
Separation of concerns in modeling “subjects” or “topics” and the objects in the
real world they characterize is critical, and has serious implications for designing
and reasoning about resources
Simplicity – short, mnemonic URIs will not break as easily when shared for
collaborative purposes, and are typically easier to remember
Persistence – once a URI has been established to identify a particular
resource, it should be stable and persist as long as possible
Exclude references to implementation strategies, as technologies change over
time (e.g., do not use ‘.php’ or ‘.asp’ as part of the URI scheme), and organization
lifetime may be significantly shorter than that of the resource
Manageability – given that URIs are intended to persist, administration
issues should be limited to the degree possible
Some strategies include inserting the current year or date in the path so that URI
schemes can evolve over time without breaking older URIs
Create an internal organization responsible for issuing and managing URIs, and
corresponding namespace prefixes
 
40 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

41 
+ Model element naming 
For naming entities in an ontology – there are some rules
of thumb that vary by community of practice
data modelers often use underscores at word boundaries,
spaces in names – which semantic web tools may not handle
well (ok in labels)
some name properties <domain><predicate><range>, others
<predicate><range>, & others <predicate>, but not
necessarily consistently
semantic web practitioners typically use camel case (upper
camel case for classes, lower camel case for properties)
using verbs to the degree possible for property naming,
without incorporating the domain/range is preferable
for very large ontologies, some use unique identifiers to name
concepts and properties, with human readable names in
labels only – depends on tooling that helps people interpret
the content
The key is to establish & consistently use guidelines tailored to
your organization
41 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

42 
+ Metadata for ontologies and elements 
Metadata should be standardized at both the model level and the 
element level for every model (not just ontologies) 
Model level metadata can reuse properties from the Dublin Core Metadata 
Terms, from the Simple Knowledge Organization System (SKOS), ISO 11179 
Metadata Registry standard with ISO 1087 Terminology support, W3C Prov-O 
vocabulary for provenance and others 
Most annotations should be optional at the element level, but a minimal set, 
including names, labels, and formal, text definitions, is important for reusability 
& collaboration 
Consistent use of the same annotations (properties, tags) improves readability,  
facilitates automated documentation generation, and enables better search 
over ontology repositories 
Model level metadata may reuse organization-specific taxonomies to enable 
better search through RDFa tagging, for example 
Latest version of an OMG architecture board recommended vocabulary for 
specification metadata, and related annotations from the Financial Industry 
Business Ontology (FIBO  ̶  OMG) are available at  

http://www.omg.org/techprocess/ab/20130801/SpecificationMetadata.rdf 

http://www.omg.org/spec/EDMC-FIBO/FND/1.0/Final/  ̶  see 
AnnotationVocabulary.rdf 
 
 
42 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

43 
+ Change management 
Change management and traceability is not well defined at the 
element level for ontologies, still a research topic  
Current approach to element-level versioning to support reasoning about 
change is to track two parallel streams: one for additions to the ontology, 
one for retractions; often managed as two separate files 
UML/MOF versioning suggests linking to a workspace; use of a default 
workspace would get the latest version, and tools such as MagicDraw© & 
repositories such as Adaptive can provide an indication of the differences 
UML-based versioning does not support reasoning about the differences so 
that users can determine the impact of applying the changes 
addition or deletion of axioms can change downstream reasoning results, especially 
where there are complex dependencies 
Mechanisms that preserve the versioning detail in artifacts that are 
generated from such models, such as RDF/XML serialized OWL, and are 
compatible with the above approaches, is an ongoing topic of discussion 
Consider the use cases/justification for whatever level of versioning detail is 
needed on a project by project basis 
Balance  with usability/performance 
43 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

44 
+ 
A quick intro to RDF and RDF Schema 
Basic constructs: descriptions & classes 
Class expressions 
Properties & restricting property values  
Individuals & data ranges 
Miscellaneous class axioms 
Additional features of OWL 2 
A few rules of thumb 
Depth vs. breadth, naming, synonymous terms 
Class vs. property value, class vs. individual 
Limiting scope  
 
Part 2: OWL Basics 
44 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

45 
+ 
"The Semantic Web is an extension of the current web in which 
information is given well-defined meaning, better enabling computers 
and people to work in cooperation."  
-- Tim Berners-Lee 
Semantic Web 
45 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

46 
+ Guiding Principles 
Historically, knowledge representation and reasoning systems have 
operated under closed world assumptions 
Uncertainty is magnified under open-world, “wild, wild web” conditions, 
making reasoning much more difficult 
Semantic web languages are designed to support less certainty, to 
provide “better” search results, informed answers to questions, not 
absolutes 
Because they are based on XML, such languages can assist businesses in 
leveraging existing investment in mark-up, content, and data  
To augment business intelligence/analysis and knowledge mining  
To support knowledge sharing and collaboration, augment enterprise 
information integration  
Enrich web services and other applications  
Support policy-based applications and ensure compliance with policy 
 at a lower cost with higher potential ROI than traditional computing 
methods 
46 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

47 
+ 
Describes relationships 
Uses URIs used for naming 
Language has 
graph based model 
RDF/XML serialization (exchange syntax) 
Specification, W3C presentations, tools are available at 
Semantic Web: http://www.w3.org/standards/semanticweb/  
Linked Data: http://www.w3.org/standards/semanticweb/data 
RDF: http://www.w3.org/standards/techs/rdf#w3c_all 
Recent revisions to RDF include:  
RDF 1.1 – cleans up a number of issues in the earlier specification, adds 
support for RDF “sources”, such as SPARQL endpoints, and “datasets” 
Serialization standards – RDF 1.1 Turtle, RDF 1.1 N-Quads, in addition to 
RDF/XML 
Resource Description Framework (RDF) 
47 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

48 
+ 
http://smartdata2015.dataversity.net/travel.rdf#Conference 
http://smartdata2015.dataversity.net/travel.rdf#SanJoseConventionCenter 
http://smartdata2015.dataversity.net/travel.rdf#heldAt 
Graph: 
XML/RDF: 
<rdf:Description rdf:ID=“Conference"/> 
    <smartdata2015:heldAt rdf:resource="#SanJoseConventionCenter"/> 
 </rdf:Description> 
N3: smartdata2015:Conference   smartdata2015:heldAt   smartdata2015:SanJoseConventionCenter. 
Subject 
Predicate 
Object  
RDF Notation Options 
48 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

49 
+ 
An RDF vocabulary that provides for identifying: 
classes,  
subsumption (inheritance) relations for classes,  
subsumption (inheritance) relations for properties, 
domain and range for properties 
 
RDF Schema (RDFS) 
49 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

50 
+ 
Graph: 
XML/RDF: 
<rdf:Description rdf:ID="Hotel"> 
    <rdf:type rdf:resource="http://www.w3.org/2000/01/rdf-schema#Class"/> 
 </rdf:Description>  
  
<rdfs:Class rdf:ID=“ConferenceHotel"> 
    <rdfs:subClassOf rdf:resource="#Hotel"/> 
 </rdfs:Class> 
 
<smartdata2015:ConferenceHotel rdf:ID=“SanJoseMarriott“/> 
     
RDF Schema (RDFS) 
rdfs:Class 
smartdata2015:Hotel 
smartdata2015:ConferenceHotel 
rdf:type 
rdfs:subClassOf 
rdf:type 
smartdata2015:SanJoseMarriott 
rdf:type 
50 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

51 
+ The Web Ontology Language (OWL) 
Two languages emerged in parallel to address semantic web 
requirements 
DAML-ONT, supported by the DARPA/DAML program 
OIL (Ontology Inference Layer) developed by EU & US researchers 
Merged DAML+OIL was submitted to the W3C 2002, formed the basis 
for the WebOnt Working Group 
OWL extends RDF Schema 
Has an RDFS based syntax and reuses some RDF vocabulary (e.g., subClassOf, 
domain, range) 
Adds rich primitives and redefines others (transitivity, inverse, cardinality 
constraints, complex class definitions) 
Describes the structure of a domain in terms of classes and properties 
Uses RDFS for class/property membership assertions (ground facts), 
XML Schema Datatypes 
OWL specifications became W3C recommendations in February 2004 
OWL 2 specifications was adopted in October 2009, with minor 
revisions in December 2012 
51 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

52 
+ 
a WINE 
a LIQUID 
a POTABLE 
 
grape: chardonnay, ... [>= 1] 
sugar-content:  dry, sweet, off-dry 
color:  red, white, rose 
price:  a PRICE 
winery:  a WINERY 
 
grape dictates color (modulo skin) 
harvest time and sugar are related 
General Categories 
Structured  
Components 
Interconnections 
Between Parts 
General nature of descriptions 
52 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

53 
+ 
 Number / Card 
 Restrictions 
Value 
Restrictions 
Class 
Superclass 
Roles / 
Properties 
General nature of descriptions 
a WINE 
a LIQUID 
a POTABLE 
 
grape: chardonnay, ... [>= 1] 
sugar-content:  dry, sweet, off-dry 
color:  red, white, rose 
price:  a PRICE 
winery:  a WINERY 
 
grape dictates color (modulo skin) 
harvest time and sugar are related 
General Categories 
Structured  
Components 
Interconnections 
Between Parts 
53 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

54 
+ Describing classes 
A class is a concept in the domain 
Vintage – a wine made from grapes grown in a specified year 
A set of characteristics (flavor, body, color, sugar…) 
A class is a collection of elements with similar properties 
White wine – wine made from white grapes 
White table wine – wine made from white grapes that are not 
appellations or regional (not “quality wine” in the EU) 
A class expression defines necessary conditions for 
membership (specific varietal, field, micro-climate, date picked, 
date bottled) 
Instances of classes 
Silver Oak 1996 Alexander Valley Cabernet Sauvignon 
Andrew Murray Vineyards Espérance, Central Coast 2012 
Robert M. Parker, Jr,’s Wine Advocate review, dated February 28, 2002 
Los Olivos, Santa Barbara County, California, USA 
54 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

55 
+ 
Classes are organized into subclass-superclass (or 
generalization-specialization) hierarchies 
True subclass relationships are the basis of a formal is-a 
hierarchy 
Classes are “is-a” related if an instance of the subclass is an instance 
of the superclass 
is-a hierarchies are essential for classification 
Violation of true is-a hierarchical relationships can have unintended 
consequences & and cause errors in reasoning 
Class expressions should be viewed as sets, and subclasses as 
a subset of the superclass, in contrast with a collection of 
attributes as classes are sometimes specified in object 
oriented programming 
Examples 
FloweringPlantType is a subclass of PlantType 
Every flowering plant is a plant; every instance of a flowering plant 
(e.g., Azalea indica 'Alaska' (Rutherfordiana hybrid) is an instance 
of a flowering plant 
Azalea is a subclass of FloweringPlantType, Rhododendron 
Monrovia is a company that breeds, grows, and sells flowering plants 
Class inheritance 
55 
* courtesy Monrovia web site 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

56 
+ Class expressions 
56 
6 primary kinds of class expressions in OWL 
5 anonymous 
Definitions can be nested using set-theoretic constructs 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

57 
+ Example class hierarchy with other expressions 
Example from ISO 1087 combining subclass-superclass and union 
expressions 
Provides a more accurate representation of the relationships 
defined in the ISO standard than a strict is-a hierarchy would 
57 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 
 

58 
+ Example class hierarchy with other expressions 
58 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

59 
+ Modeling considerations for class hierarchy 
development 
Practitioners tend to start 
Top-down - define the most general concepts first and then 
specialize them 
Bottom-up - define the most specific concepts and then organize 
them into more general classes 
Combination  (typical – breadth at the top level and depth along a 
few branches to test design) 
Class inheritance is transitive 
A is a subclass of B (white wine, dessert wine are subclasses of 
wine) 
B is a subclass of C (sauvignon blanc is a subclass of white wine, 
late harvest wine is a subclass of dessert wine) 
therefore A is a subclass of C (late harvest sauvignon blanc is a 
subclass of white wine, dessert wine, & wine) 
Start with a more formal is-a approach, tease out whether other 
expressions are more appropriate based on use cases, formal 
definitions when available, etc. 
59 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

60 
+ Properties 
Properties describe characteristics, features, or attributes of the 
members of a class 
Every flowering plant has a bloom color, color pattern, flower form, petal 
form, etc. 
Classes of properties 
intrinsic: properties of the plant itself such as the optimal sunlight, soil 
conditions, expected height, and so forth 
extrinsic: properties imposed externally such as the grower and price 
whole-part relations 
geospatial, mereonomic relations: what microclimates are this plant well 
suited to, where in a particular historic garden will you find it 
Data and object properties 
simple attributes typically have primitive data values (e.g., strings, 
numbers) 
complex properties refer to other entities (e.g., an individual grower, 
such as Monrovia, or organization such as the American Orchid Society) 
OWL reasoning requires strict separation of data and object properties 
 
60 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

61 
+ Domain & range properties 
In OWL and many other KR languages, relations (properties) are 
strictly binary 
The domain & range represent the source & target arguments, 
respectively, for the property 
Domain – the class (or classes) that may have the property − Wine is 
the domain of the property hasWineColor 
Range – the class (or classes) defining valid property values − 
everything that fulfills the hasWineColor property is an instance of the 
enumerated class {red, white, rose} 
Some KR languages that inherently support n-ary relations, such as 
CL, do not make this distinction 
More flexible, intuitively more like mathematics, where functions have 
ranges (or return types) but not all relations are functions 
Requires additional relations to specify argument order, which can be 
critical for ontology alignment 
 
61 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

62 
+ Class expressions that restrict property values 
Number restrictions describe or limit the number of possible 
values a particular property can have 
A language must be associated with at least one English name and at 
least one French name 
A language may be associated with zero or more Indigenous names 
Cardinality – similar meaning to classical set theory, measures 
the number of elements in the set (restriction class) 
Cardinality – cardinality N means the class defined by the property 
restriction must have exactly N values (individual or literal values) 
Minimum cardinality - 1 means that there must be at least one value 
(required), 0 means that the value is optional 
Maximum cardinality - 1 means that there can be at most one value 
(single-valued), N means that there can be up to N values (N > 1, 
multi-valued) 
62 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

63 
+ Simple number restriction examples 
Creating a class of individuals that have exactly one color & a class of 
individuals that have more than one color   
Note that the relationship between SingleColoredThing and the 
restriction class is modeled as an equivalence relationship, meaning that 
membership in the restriction class is a necessary and sufficient 
condition for being a SingleColoredThing 
63 
 <owl:ObjectProperty rdf:about="&re;hasColor"> 
        <rdfs:range rdf:resource="&re;Color"/> 
        <rdfs:domain rdf:resource="&re;ColoredThing"/> 
    </owl:ObjectProperty> 
  
    <owl:Class rdf:about="&re;Color"/> 
    <owl:Class rdf:about="&re;ColoredThing"/> 
  
    <owl:Class rdf:about="&re;MultiColoredThing"> 
        <owl:equivalentClass> 
            <owl:Restriction> 
                <owl:onProperty rdf:resource="&re;hasColor"/> 
                <owl:minCardinality 
rdf:datatype="&xsd;nonNegativeInteger">2</owl:minCardinality> 
            </owl:Restriction> 
        </owl:equivalentClass> 
    </owl:Class> 
  
    <owl:Class rdf:about="&re;SingleColoredThing"> 
        <owl:equivalentClass> 
            <owl:Restriction> 
                <owl:onProperty rdf:resource="&re;hasColor"/> 
                <owl:cardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:cardinality> 
            </owl:Restriction> 
        </owl:equivalentClass> 
    </owl:Class> 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 
 

64 
+ Qualified cardinality number restriction example 
OWL 2 provides the capability to further qualify cardinality by specific 
classes and data ranges 
Patterns that reuse a smaller number of significant properties, building 
up more complex class expressions that limit the set of valid values are 
common, useful in complex classification systems 
64 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 
 

65 
+ Qualified cardinality number restriction example 
 <owl:ObjectProperty rdf:about="&re;hasCharacteristic"> 
        <rdfs:range rdf:resource="&re;Characteristic"/> 
    </owl:ObjectProperty> 
  
    <owl:Class rdf:about="&re;BloomColor"> 
        <rdfs:subClassOf rdf:resource="&re;Characteristic"/> 
        <rdfs:subClassOf rdf:resource="&re;Color"/> 
    </owl:Class> 
  
    <owl:Class rdf:about="&re;Characteristic"/> 
  
    <owl:Class rdf:about="&re;Color"/>     
  
    <owl:Class rdf:about="&re;FloweringPlantType"> 
        <rdfs:subClassOf> 
            <owl:Restriction> 
                <owl:onProperty rdf:resource="&re;hasCharacteristic"/> 
                <owl:onClass rdf:resource="&re;BloomColor"/> 
                <owl:minQualifiedCardinality 
rdf:datatype="&xsd;nonNegativeInteger">1</owl:minQualifiedCardinality> 
            </owl:Restriction> 
        </rdfs:subClassOf> 
    </owl:Class> 
65 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

66 
+ Class expressions that restrict possible values 
by type 
Universal (allValuesFrom) and existential (someValuesFrom) 
quantification 
allValuesFrom is the OWL equivalent for ∀(x), and restricts the possible 
values for a property to members of a particular class or data range  
someValuesFrom is the OWL equivalent for ∃(x), and restricts the possible 
values for a property to at least one member of a particular class or data 
range 
Specific value (hasValue) restrictions 
a single data value  (e.g., the color property for a RedWine must be filled 
with the value “red”) 
an individual member of a class (e.g., Winery is the value restriction on 
the hasMaker property on the class Wine) 
Enumerations – lists of allowable individuals or data elements 
Combinations of the above that include both restrictions and boolean 
class expressions (union – logical or, intersection – logical and, 
complement – logical not) 
 
66 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

67 
+ Class expression restricting all values for a given 
property 
Azaleas are members of the set of flowering plants whose bloom color 
must be either an RHSColor (Royal Horticultural Society) or ASAColor 
(Azalea Society of America) 
67 
* courtesy Azalea Society of America 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 
 

68 
+ And the OWL for that … 
      <owl:Class rdf:about="&re;Azalea"> 
        <rdfs:subClassOf rdf:resource="&re;FloweringPlantType"/> 
        <rdfs:subClassOf> 
            <owl:Restriction> 
                <owl:onProperty rdf:resource="&re;hasBloomColor"/> 
                <owl:allValuesFrom> 
                    <owl:Class> 
                        <owl:unionOf rdf:parseType="Collection"> 
                            <rdf:Description rdf:about="&re;ASAColor"/> 
                            <rdf:Description rdf:about="&re;RHSColor"/> 
                        </owl:unionOf> 
                    </owl:Class> 
                </owl:allValuesFrom> 
            </owl:Restriction> 
        </rdfs:subClassOf> 
    </owl:Class> 
68 
* courtesy Azalea Society of America 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

69 
+ Another typical pattern combining restrictions & 
Boolean connectives 
Use of equivalence expressions like this, describing 
RHSFloweringPlantType as a flowering plant and something whose 
bloom colors must be from the set of colors defined by the Royal 
Horticultural Society is a common pattern 
69 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 
 

70 
+ And the corresponding OWL for that … 
70 
 <owl:Class rdf:about="&re;RHSFloweringPlantType"> 
        <owl:equivalentClass> 
            <owl:Class> 
                <owl:intersectionOf rdf:parseType="Collection"> 
                    <rdf:Description 
rdf:about="&re;FloweringPlantType"/> 
                    <owl:Restriction> 
                        <owl:onProperty 
rdf:resource="&re;hasBloomColor"/> 
                        <owl:allValuesFrom 
rdf:resource="&re;RHSColor"/> 
                    </owl:Restriction> 
                </owl:intersectionOf> 
            </owl:Class> 
        </owl:equivalentClass> 
    </owl:Class> 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

71 
+ Class expression restricting some & exact values 
for a given property 
71 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

72 
+ And the OWL for that … 
72 
 <owl:Class rdf:about="&re;Azalea"> 
        <rdfs:subClassOf rdf:resource="&re;FloweringPlantType"/> 
        <rdfs:subClassOf> 
            <owl:Restriction> 
                <owl:onProperty rdf:resource="&re;hasBloomColor"/> 
                <owl:allValuesFrom> 
                    <owl:Class> 
                        <owl:unionOf rdf:parseType="Collection"> 
                            <rdf:Description rdf:about="&re;ASAColor"/> 
                            <rdf:Description rdf:about="&re;RHSColor"/> 
                        </owl:unionOf> 
                    </owl:Class> 
                </owl:allValuesFrom> 
            </owl:Restriction> 
        </rdfs:subClassOf> 
        <rdfs:subClassOf> 
            <owl:Restriction> 
                <owl:onProperty rdf:resource="&re;hasBloomColorPattern"/> 
                <owl:someValuesFrom rdf:resource="&re;ASAColorPattern"/> 
            </owl:Restriction> 
        </rdfs:subClassOf> 
    </owl:Class>     
     
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

73 
+ ... 
 <owl:Class rdf:about="&re;SingleColoredAzalea"> 
        <owl:equivalentClass> 
            <owl:Class> 
                <owl:intersectionOf rdf:parseType="Collection"> 
                    <owl:Restriction> 
                        <owl:onProperty rdf:resource="&re;hasBloomColorPattern"/> 
                        <owl:hasValue rdf:resource="&re;Solid"/> 
                    </owl:Restriction> 
                    <owl:Restriction> 
                        <owl:onProperty rdf:resource="&re;hasBloomColor"/> 
                        <owl:cardinality 
rdf:datatype="&xsd;nonNegativeInteger">1</owl:cardinality> 
                    </owl:Restriction> 
                </owl:intersectionOf> 
            </owl:Class> 
        </owl:equivalentClass> 
        <rdfs:subClassOf rdf:resource="&re;Azalea"/> 
    </owl:Class> 
  
    <owl:NamedIndividual rdf:about="&re;Solid"> 
        <rdf:type rdf:resource="&re;ColorPattern"/> 
    </owl:NamedIndividual> 
73 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

74 
+ Individuals and data ranges 
An individual (instance, object in other paradigms) 
Any class that an individual is a member of, or is an individual of, is a type 
of the individual 
Any superclass of a class is an ancestor of (or type of) the individual 
Specify property values for the individual 
Property values should conform to the constraints such as range, value 
type, cardinality restrictions, etc. 
Enumerated classes & data ranges are commonly used to specify 
the complete set of valid values for a particular property 
74 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

75 
+ Example enumerated class of individuals 
75 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

76 
+ Complex data ranges & restrictions 
76 
Aggregating datatype restrictions via an intersection to specify the average size of an 
Azalea in the landscape. 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

77 
+ 
Subsumption (necessary) 
 
 
A ⊆ B where B 
is a class description 
partial or primitive class 
 
Definition (necessary and sufficient)  
C ≡ D where D 
is a class description  
complete or defined class 
 
 
 
A 
B 
C 
D 
Class axioms 
77 
Courtesy Evan Wallace, NIST 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

78 
+ 
Meta-properties – global cardinality restrictions 
Functional 
 
 
 
 
 
Inverse Functional 
Domain 
Domain 
Range 
Range 
Courtesy Evan Wallace, NIST 
78 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

79 
+ Disjoint classes 
A 
B 
Classes are disjoint if they cannot have common instances 
Disjoint classes cannot have any common subclasses 
If winery and wine are disjoint, then there is no instance that is 
both a winery and a wine; there is no class that is both a 
subclass of winery and a subclass of wine 
Disjointness is often used to aid consistency checking 
Disjointness is also helpful in teasing out subtle distinctions 
among classes across multiple ontologies 
Equivalence is also often used to identify the same concepts 
across ontologies that may be named differently, or to name 
classes defined through class axioms 
79 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

80 
+ Advanced OWL 2 language features 
Property constructs 
Reflexive, irreflexive, & asymmetric properties 
Property chains – useful for building up complex properties for 
 ownership and control in business entity relationships for finance 
complex family relationships (e.g., uncleOf) 
Disjoint properties 
Keys – for transformations to logical data models 
Self-reflexive properties – such as narcissism 
Negative property assertions 
80 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

81 
+ More advanced language features 
Extended datatype handling 
Better support for XML Schema Datatypes 
Datatypes for specifically for OWL (owl:real, owl:rational, rdf:PlainLiteral) 
Custom datatype definition & use of xsd facets / datatype restrictions  
Data range restrictions 
Intersections, unions, complements 
Support for punning 
Limited support for a particular element to be defined as both a class & individual, for 
example 
Improved support for annotations (e.g., metadata about ontologies, 
provenance, transformation detail, etc.) 
Related ontologies available from the W3C 
Prov-O Provenance Ontology -- http://www.w3.org/TR/prov-overview/ and 
http://www.w3.org/TR/2013/REC-prov-o-20130430/  
W3C Organization Ontology -- http://www.w3.org/TR/vocab-org/  
See http://www.w3.org/TR/owl2-quick-reference/  for OWL language details 
81 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

82 
+ Rules of Thumb 
Cycles are common in many KR 
systems, though rarely “a good thing” 
Cycles are disallowed by some tools 
because they prohibit “code 
generation”, export --  including 
RDF/OWL 
Classes A, B, and C have equivalent 
sets of instances 
By many definitions, A, B, and C are 
equivalent 
Use owl:equivalentClass instead of 
creating cycles 
82 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

83 
+ Class hierarchy analysis 
Siblings should be specified at roughly the same level of generality -- 
compare to section and subsections in a book 
83 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

84 
+ More on class definition analysis 
Classes that have single subclasses may be incompletely 
defined, unless additional children are specified in 
subordinate modules 
Subclasses of a class typically have more detailed 
definitions 
Additional properties 
Constraints/restrictions on inherited properties 
Participate in further qualified relations 
Compare to bullets in a bulleted list 
If a class has a large number of subclasses, it may be useful 
to define intermediate levels 
For wine, for example there are natural groupings around wine 
color 
If no natural classification exists, the long list may be appropriate 
 
84 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

85 
+ 
A “wine” is not a subclass of  “wines” 
A particular vintage should be classified as an 
instance of the class Wines 
Class names should be either all singular or all 
plural 
Synonymous names for the same concept should 
be modeled as alternate designations, not as 
unique classes (in the same ontology) 
Many systems & standards facilitate synonymous 
term representation (e.g., ISO 1087) 
OWL allows defining necessary and sufficiency 
condition definitions thereby allowing synonym 
definitions to be “first class” terms (as appropriate, 
through equivalence / same as relations) 
MariettaOldVinesRed 
Class 
Instance 
instance-of 
Inheritance, naming, synonyms 
85 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

86 
+ 
Are concepts with distinct property values used in restrictions on 
other properties? 
How important is the distinction for the domain? 
Class definitions for most domains should be fairly stable – i.e., 
they should not change frequently once the definitions are 
established and individuals created 
Class vs. property value 
86 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

87 
+ Class vs. individual 
Individuals are the most specific entities in an ontology 
If concepts form a natural hierarchy, represent them as classes 
If they might have individuals, represent them as classes 
87 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

88 
+ Limiting scope 

An ontology should not contain all the possible information about 
the domain 

No need to specialize or generalize more than the application 
requires 

No need to include all possible properties of a class 
•
Only the most salient properties 
•
Only the properties that the application requires 

Ontologies of wine, food, and their pairings probably will not 
include details such as: 

Bottle size (half bottle, full bottle, magnum, …) 

Label color 

Wine bottle color (green, amber, …) 

Individual plants and their location in a historic garden 

Azalea indica 'Alaska' (Rutherfordiana hybrid) might be a class or 
might be an individual, depending on the use case and application 
requirements 
88 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

89 
+ 
Ontology-powered applications   (both light weight and 
richer applications) 
Semantic Advising (Wine Agent) 
Semantically-enabled Environmental Monitoring – SemantEco 
and Jefferson Project 
Population Science Health Data Exploration 
Scientific Observations  and  Virtual Observatories 
Technical Underpinnings 
Understanding, Trust, & Proof: InferenceWeb 
Semantic Methodology 
Linked Data 
Towards future semantic cognitive assistants  
Questions 
Part 3: Putting It All Together 
89 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

90 
Semantic 
Sommelier… 
ontology-driven, 
context-aware, mobile 
app 
Semantically-enabled 
advisors utilize: 
Ontologies 
Reasoning 
Social 
Mobile 
Provenance  
Context 
 
Patton & McGuinness.et. al 
tw.rpi.edu/web/project/Wineagent  

91 
+ TW Wine Agent – semantic interoperability 
RDF & OWL − for encoding wine/food listings and pairing 
recommendations 
Collaborative environment input (initially Semantic MediaWiki)  for 
publishing user-contributed recommendations* 
Social Media (Twitter and Facebook) − for posting 
recommendations 
Pellet − for deriving knowledge from wine ontology and 
recommendations 
SPARQL − for querying wine/food listings with recommendations 
InferenceWeb − for explaining Wine Agent’s recommendations 
Wine Agent receives a meal description and retrieves a 
selection of matching wines available on the Web, using an 
ensemble of standards and tools 
91 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

92 
+ Semantic Sommelier 
Uses ontologies to infer descriptions of 
wines for meals and query for wines 
Uses context:  GPS location, local restaurants 
and wine lists, user preferences 
Uses Social input: Twitter, Facebook, Wiki, 
mobile, … 
Challenges include source variability in 
quality, contradictions exist, maintenance 
Customization & Extensions from restaurant, 
wine seller, user easy 
Extensions to reasoning like group 
recommendations are flexible 
 
92 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

93 
+ Reflections from the Semantic Advisors 
Background knowledge can be reasonably simple and built in OWL.  
For the wine agent; includes foods and wine and pairing information 
similar to the original Living with CLASSIC paper, CLASSIC tutorial, 
OWL Guide, Ontology Engineering 101,  …) and has been extended 
easily and regularly 
Background knowledge can be used for simple query expansion.  In 
the wine agent, e.g.,  over wine sources to retrieve documents about 
red wines (including zinfandel, syrah, …) 
Background knowledge used to interact with structured queries such 
as those possible on  wine sites like wine.com or apps like delectable 
Constraints allows a reasoner like Pellet to infer consequences of the 
premises and query. 
Explanation system (e.g., Inference Web) can provide provenance 
information such as information on the knowledge source 
(McGuinness’ wine ontology) and data sources (such as wine reviews 
or particular restaurants or wine stores) 
Services work could allow automatic “matchmaking” instead of hand 
coded linkages with web resources 
93 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

94 
+ Mobile Health Advisor 
PHR/EHR 
Physician 
User Device 
94 
Joint work: Patton, Chastain, Makni, Ji, McGuinness  

95 
+ Mobile Health Monitoring 
Applications 
 
Mobile Semantic Health Integration Framework 
Reasoning Services 
Hardware Abstraction Layer / Device APIs 
Accelerometer 
Pedometers 
Scale 
Blood Pressure 
Heart Rate 
Sleep 
95 
McGuinness Patton 
PHR/EHR 

96 
+ Mobile Health Monitoring 
96 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

97 
+ 
Relatively simple background knowledge (e.g., thresholds for lab values, 
SOME indicators or justifications for  out of range values) can be 
leveraged with straight forward reasoning 
Highly available resources (e.g., Drugbank, UMLS, SIDER) can be used 
with simple query expansion or simple subsumption. 
Linked data alone can provide significant benefits 
Provenance / explanation can be critical in some applications, 
particularly health. 
These demos are just scratching the surface, but the leveraging of linked 
data has potential to significantly improve navigation, and 
understanding. 
 There are many more examples – in health including neural stem cell 
data * come to the talk this aft on Semantics meets Numerics*, ICU bed 
admission,  child health data, etc. 
97 
Reflections on Semantic Health Advisors 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

98 
+ SemantEco/SemantAqua 
Enable/Empower citizens & 
scientists to explore pollution 
sites, facilities, regulations, and 
health impacts along with 
provenance. 
Demonstrates semantic 
monitoring possibilities. 
Map presentation of analysis 
Explanations and Provenance 
available  
 
 
1 
2 
3 
http://was.tw.rpi.edu/swqp/map.html and 
http://aquarius.tw.rpi.edu/projects/semantaqua  
 
4 
5 
1.
Map view of analyzed results 
2.
Explanation of  pollution   
3.
Possible health effect of contaminant (from EPA) 
4.
Filtering by facet to select type of data 
5.
Link for reporting problems 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

99 
+ System Architecture 
access 
Virtuoso 
99 
99 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

100 
+ Ontology 
Extends existing best practice 
ontologies, e.g. SWEET, OWL-
Time. Includes terms for 
relevant pollution concepts 
Can conclude: “any water 
source that has a measurement 
outside of its allowable range” 
is a polluted water source. 
Regulation Ontology models the 
federal and state water quality 
regulations for drinking water 
sources 
Can recognize pollution, e.g. 
“any water source that contains 
0.01 mg/L of Arsenic or more is 
a polluted water source.”  
 
 
Portion of the SemantEco and 
SemantAqua ontologies. 
100 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

101 
+ Querying 
With OWL reasoning during query: 
 
SELECT DISTINCT ?site ?lat ?lng 
WHERE { ?site a pol:PollutedSite ; 
        geo:lat ?lat ; geo:long ?lng . } 
 
OWL reasoning hides the complexity of the relationships 
allowing the developer (or user) to ask simple questions 
without requiring deep knowledge of environmental 
regulations 
101 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

102 
+ Reflections 
 Uses semantic technologies along with simple ontologies and 
provenance-encoding tools 
Was generated by students in a regular term class, then 
extended to be the basis of a masters degree (Wang), and the 
foundation of 3 other class projects 
Small background extensible ontology 
Has been reused in other environmental monitoring projects 
including content related to wildlife, migration, health effects, 
etc. 
Now connected with OBOE, PROV and uses HasNETO 
Forming the foundation for the Jefferson Project  
102 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

103 
The Jefferson Project at Lake 
George:   
Science to Inform Solutions 
Smart Lake: 
Integrative Approach to 
Understanding Lake Stressors and 
Predicting Future Outcomes 
Science-based 
Solutions: 
Leveraging deep 
understanding for 
solutions with staying 
power for a healthy   
Lake George for 
future generations 
informs 
Cyberinfrastructure/Data 
Platform/Viz Lab 
 
 
 
Semantic                 Data 
Model 

104 
+ The Human-Aware Sensor Network Ontology 
104 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

105 
+ 
Semantics Overview 
105 
                   SOLR-CCSV 
 
 
 
 
CCSV-Loader 
data 
Static 
metadata 
CSV2CCSV 
(ICS) 
CCSV-Annotator* 
MOCASSN 
HASNetO-Loader 
Dynamic 
metadata 
Sensor 
network 
technician 
scientist 
data user 
(incl. scientists) 
maintains 
reports 
human  
Interventions 
(deployments, 
sensor config, 
calibrations) 
Single  
instrument 
data (csv) 
ccsv 
data (csv) 
Spreadsheet  
of static 
metadata 
ccsv 
static metadata  
turtle 
SPARQL and  
Lucene queries 
CCSV Browser 
SPARQL and  
Lucene queries 
Faceted search 
annotated 
csv 
Dynamic  
metadata 
IN-SITU 
DATA-SITE 
DATA-SITE 
WWW 
uses 
reports 
needs 
Dynamic  
metadata 
 
Ontologies 
(HASnetO, OBOE, 
PROV, VSTO) 
* Tool to be developed 
  
metadata 
 metadata 
mainly data flow 
mainly metadata flow 
McGuinness, Pinheiro, Santos, Chastain, Kinkead, Klawonn 

106 
+ Metadata Browser: From Spreadsheets to Web 
Visualizations 
106 
Spreadsheets have 
been shared 
between IBM, RPI 
and the FUND for 
Lake George  
Spreadsheet content 
is now stored in a 
RDF knowledge 
repository based on 
HASNetO vocabulary 

107 
+ Data Collection and Dissemination 
107 

108 
+ Population Sciences Grid Goals 
Convey complex health-related information to consumer and public health 
decision makers for community health impact leveraging the growing evidence 
base for communicating health information on the Internet 
Inform the development of future research opportunities effectively utilizing 
cyberinfrastructure for cancer prevention and control 
How can semantic technologies be used to integrate, present, and analyze data 
for a wide range of users? 
Can tools allow lay people to build their own demos and support public usage 
and accurate interpretation? 
Within PopSciGrid: 
Which policies (taxation, smoking bans, etc) impact health and health care 
costs? 
What data should be displayed to help scientists and lay people evaluate 
related questions? 
What data might be presented so that people choose to make (positive) 
behavior changes?  
What does the data show? why should someone believe that? 
What are appropriate follow ups? 
 
 
108 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

109 
+ 
PopSciGrid Workflow  
109 
CSV2RDF4LOD 
Direct 
SemDiff 
Archive 
CSV2RDF4LOD 
Enhance 
Visualize 
derive 
derive 
derive 
archive 
Publish 
Ban coverage 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

110 
+ Multi-dimensional Semantic Integration 
and Analysis  (Smoking) 
110 
 
Ex. Question: 
-
What intervention strategies 
correlate with decreased 
smoking? - By age group, 
geographic area, etc. 
 
Semantic Web methodology, 
accountable mashups, multi-
dimensional analysis, 
aggregation semantics tools 
Domain answer: bans and 
labeling for certain age brackets   
 
PopSciGrid with NIH looked 
at “preventable cancers” , 
hypothesized contributors 
(smoking), and interventions – 
taxation, bans, labeling 
 
McCusker,McGuinness,Lee,Thomas,Courtney,Tatalovich,Contractor,Morgan,Shaikh. Towards Next Generation Health Data Exploration:  
A Data Cube-based Investigation into Population Statistics for Tobacco, 2013 
Michaelis, J., McGuinness, D.L., Chang, C., Hunter, D., and Babko-Malaya, O. 2013. Towards Explanation of Scientific and Technological 
Emergence. Proc. IEEE/ACM International Conference on Advances in Social Networks Analysis and Mining Niagara Falls, Canada.  
Multi-dimensional Semantic Analysis work also being developed for the IARPA 
FUSE  (Foresight and Understanding from Scientific Exposition Project 
 

111 
+ Reflections 
 Uses semantic technologies along with simple ontologies 
and provenance-encoding tools 
Provides an operational specification for other policy 
exploration tools – initially tobacco data and related policies, 
later physical education and nutrition policies in elementary, 
junior and senior high school (CLASS - 
http://class.cancer.gov/About.aspx ) and laid foundation for 
broader multidimensional analysis projects 
Similar model being used in the Tetherless SemantEco / 
SemantAqua / SemantAir  Portal family 
111 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

112 
Why did I present wine,  water, and linked data 
applications?   
Wine advisor shows semantic technology in action making 
actionable recommendations and mobile health advisor shows 
explanations of data as well as linked data 
Water  ecosystems applications show a “typical” semantic 
integration web 3.0 application as well as a migration to broader 
complex  
Both of these styles are needed for many semantic applications and 
these features are realizable today 
Next – they depend on  
Understandable and Actionable applications 
Semantic web stack 
Data availability – linked data cloud is growing 
Ontologies 
Semantic methodologies  
112 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

113 
+ 
If users (humans and agents) are to use, reuse, and integrate system 
answers, they must trust them.   
System transparency supports understanding and trust. 
Even simple “lookup” systems benefit from providing information 
about their sources. 
Systems that manipulate information (with sound deduction or 
potentially unsound heuristics) benefit from providing 
information about their manipulations. 
 Goal:  Provide interoperable infrastructure that supports explanations of 
sources, assumptions, and answers as an enabler for trust. 
Foundations: Trust & Understanding 
113 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

114 
+ Foundations: Explanations, Proof Analysis   
Inference Web 1.0 
Framework for explaining question answering tasks  
Stores and manages meta-information about proofs and 
explanations through a distributed repository  
Designed to use a declarative Provenance Markup Language 
(originally used the OWL-based Proof Markup Language (PML) for 
proof interchange.  PML  contributed to W3C’s PROV 
Services include proof presentation, strategy-based views, 
filtering, trust, combination, expansion, checking, search, and 
other capabilities 
Integrated browsing and display of provenance documents 
from diverse sources 
Rewriting capabilities for improved understanding 
Multi-modal dialogue options including alternative strategies 
for presenting explanations, visualizations, and summaries 
114 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

115 
+ 
Technical Architecture Option(s) 
Data Access 
edit 
PML (provenance, justification, trust) 
Nanopublications + PML/PROV 
     IWRegistrar, CKAN 
 other registries 
 
PML database 
call 
generate 
Proofs  (N3, KIF) 
Datasets (CSV, JSON) 
PML Translator 
csv2rdf4lod 
edit 
Web Service 
Interface 
generate 
Edit  
Interface 
PML API 
translate 
PML Web  
Documents 
is-stored-as 
parse 
IW Search 
harvests & indexes 
harvests 
subscribes 
reads  
Computation Tools 
(validation, conflict detection, abstraction, 
statistical analysis, machine learning, …) 
PML  
API 
Presentation Tools 
(IW Browser) 
uses  
PML Java  
Objects 
searches  
domain experts 
machine agents 
115 
Search indices, sindice, 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

116 
116 
Making Systems Actionable  with Knowledge Provenance 
  
Mobile 
Wine 
Agent 
GILA   
Combining 
Proofs in 
TPTP 
CALO 
Knowledge 
Provenance  
in Virtual 
Observatories 
Intelligence Analyst 
Tools 
 
 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

117 
+ 
ReDrugS 
(Repurposing of Drugs using Semantics) 
McCusker, J., Solanki, K., Chang, C., Dumontier, M., Dordick, J., and McGuinness, D.L. 2014. A Nanopublication Framework for Systems Biology and Drug 
Repurposing. Proc. of CSHALS 2014 Boston, MA. 
McCusker, J., Yan, R., Solanki, K., Erickson, J.S., Chang, C., Dumontier, M., Dordick, J., and McGuinness, D.L. 2014. A Nanopublication Framework for 
Biological Networks using Cytoscape.js. In Proceedings of International Conference on Biomedical Ontologies (ICBO 2014) (October 6-9 2014, Houston, TX). 
http://tw.rpi.edu/web/doc/redrugsnanopub  
•
Use semantic 
technologies to 
encode and 
process biological 
knowledge to 
generate 
hypotheses about 
new uses for 
existing drugs. 
•
Leverage existing 
curated data 
sources, build 
reusable 
integrated content 
sources and 
infrastructure 
117 

118 
+ Nanopublications 
NanoPub_501799_Attribution 
NanoPub_501799_Assertion 
NanoPub_501799_Supporting 
Simple yet 
semantically-rich 
encodings allow 
algorithms to not just 
find correlation but to 
look for causality 
using reasoning 
Tetherless World Constellation RPI 
118 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

119 
+ 
99.98% coverage of the ~936,000 nanopubs with evidence data 
from iRefIndex. 
Top 10 methods (86% coverage): 
119 
Method 
Count 
P conf M conf 
two hybrid [mi:0018] 
199130 
1 
1 
genetic interference [mi:0254] 
196717 
2 
2 
affinity chromatography technology 
[mi:0004] 
117659 
2 
2 
tandem affinity purification [mi:0676] 
70545 
2 
2 
two hybrid pooling approach [mi:0398] 
60715 
1 
1 
anti tag coimmunoprecipitation [mi:0007] 
42249 
3 
3 
pull down [mi:0096] 
37676 
2 
2 
two hybrid array [mi:0397] 
29806 
1 
1 
x-ray crystallography [mi:0114] 
29182 
2 
3 
anti bait coimmunoprecipitation [mi:0006] 
22533 
2 
3 
Tetherless World Constellation, RPI 
Experimental Method Coverage 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

120 
+ Topiramate Disease Associations: p ≥ 0.9 
nanopub 
Tetherless World Constellation RPI 
120 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

121 
+ 
Topiramate Disease 
12
1 
nanopub 
 
Tetherless World Constellation RPI 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

122 
+ Atorvastatin (Lipitor) 
nanopub 
 
Tetherless World Constellation RPI 
122 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

123 
+ Reflections 
We are just scratching the surface here but this holds 
potential to support more exploration related to causation 
rather than just correlation. 
This infrastructure is also used in SemNext – Semantic 
Numeric Exploration Technologies – currently on brain data.   
Looking at reuse in a microbiome project 
Broad reusage.   
Simpler provenance model based on lightweight use of 
PROV with nanopublications 
123 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

124 
+ Mobile Health Assistant 
•
Use semantic 
technologies to 
encode, and 
integrate a wide 
range of health 
information to help 
people function at a 
level higher than 
their training 
(patients become 
more educated, 
docs find more 
relevant content,..). 
•
Leverage existing 
curated and 
uncurated sources, 
build reusable 
integrated content 
sources and 
infrastructure 
124 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

125 
+ Doctor’s Perspective 
Test Results 
Treatments 
People 
Tests 
Highlight key 
information extracted 
from text 
Extract information 
about test results, with 
drill-down interface 
Determine order of 
events using natural 
language processing 
and semantic 
integration 
125 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

126 
+ Patient’s Perspective 
Test Results 
Treatments 
People 
Tests 
Focus on 
information the 
patient is concerned 
about 
Link to external 
resources for 
descriptive 
information 
Identify possible 
side-effects and 
coping strategies 
Explanation of 
reasoning and 
why information 
may be 
unavailable 
126 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

127 
+ Cognitive Assistant that Learns & Organizes 
127 
DARPA IPTO funded program 
Personal office assistant, tasked with: 
Noticing things in the cyber and physical environments 
Aggregating what it notices, thinks, and does 
Executing, adding/deleting, suspending/resuming tasks 
Planning to achieve abstract objectives 
Anticipating things it may be called upon to do or respond to 
Interacting with the user 
Adapting its behavior in response to past experience, user guidance 
22 participating organizations 
Led to other efforts including Siri (later acquired by Apple and 
in iPhone  
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

128 
+ Integrated Cognitive Explanation Environment for 
Cognitive Asst that Learns and Organizes 
Collaboration 
Agent 
Justification 
Generator 
Task Manager 
(TM) 
TM Wrapper 
Explanation 
Dispatcher 
Task State 
Database 
TM Explainer 
KM Explainer 
Knowledge Manager 
(KM) 
Constraint Explainer 
Constraint 
Reasoner 
128 
A unified framework for explaining behavior and reasoning is 
essential for users to trust and adopt cognitive assistants. 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

129 
+ The Use-Ask-Understand-Update Cycle 
Use 
Ask 
Understand / Accept 
Update 
Cognitive  Asst that Learns and Organizes 
(CALO) explanation is joint work with 
McGuinness, Glass, Wolverton, Chang, Ding 
129 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

130 
+ 
Introduced Semantic Technology Foundations 
Provided numerous examples of functioning systems with 
value propositions, many users, etc. 
Foundational technology is available from many sources  
 
Summary 
130 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

131 
Elisa Kendall 
Partner, Thematix Partners LLC 
(408) 930-5601 
ekendall @ thematix.com 
http://thematix.com 
 
Deborah McGuinness 
Tetherless World Constellation Chair,  
Professor of Computer Science and Cognitive Science 
Rensselaer Polytechnic Institute   and 
CEO,  McGuinness Associates 
(518) 276-4404 
dlm @ cs.rpi.edu 
http://tw.rpi.edu/web/person/Deborah_L_McGuinness  
 
131 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

132 
+ Acronym Soup 
CL – ISO 24707 Common Logic: a family of first order logic languages, 
including Conceptual Graphs & Common Logic Interchange Format – a 
successor to the Knowledge Interchange Format (KIF), http://cl.tamu.edu/  
DAML – DARPA Agent Mark-up Language, one of the primary languages 
leading to the development of OWL, http://www.daml.org/ 
DARPA – Defense Advanced Research Projects Agency, 
http://www.darpa.mil/  
DL – Description Logics: a subset of first order logic, for which tractable & 
complete reasoning systems are available 
IRI – Internationalized Resource Identifier 
Linked Data and RDFa, http://www.w3.org/standards/techs/rdfa#w3c_all  
MDA – Model-Driven Architecture, http://www.omg.org/mda/  
ODM – Ontology Definition Metamodel, http://www.omg.org/spec/ODM/1.0/  
OWL – W3C Web Ontology Language, OWL 2 specifications dated 27 October 
2009, http://www.w3.org/standards/techs/owl#w3c_all  
OWL-S – a set of OWL ontology components that extend the W3C OWL 
specifications to support Semantic Web Services, 
http://www.daml.org/services/owl-s/1.1/  
 
132 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

133 
+ More Acronym Soup 
PML – Proof Markup Language – Provenance Interlingua, www.inference-web.org  
PRR – Production Rules Representation, http://www.omg.org/spec/PRR/1.0/  
RIF – Rule Interchange Format, http://www.w3.org/standards/techs/rif#w3c_all  
RDF – Resource Description Framework, http://www.w3.org/TR/rdf-concepts/  
Semantic Annotations for WSDL and XML (SAWSDL), 
http://www.w3.org/standards/techs/sawsdl#w3c_all  
Simple Knowledge Organization System (SKOS), 
http://www.w3.org/standards/techs/skos#w3c_all  
SPARQL – Semantic Web Query Language, 
http://www.w3.org/standards/techs/sparql#w3c_all  
Semantic  Web Rule Language (SWRL), http://www.w3.org/Submission/SWRL/ 
URI – Uniform Resource Identifier   
WSDL – Web Services Description Language 
133 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

134 
SPARQL to Xquery translator 
RDFS materialization 
(Billion triple winner) 
Govt metadata search 
Linked Open Govt Data 
SPARQL WG, earlier QL – 
OWL-QL, Classic’ QL, …  
 OWL 1 & 2 WG Edited main  OWL  
Docs, quick reference,  
OWL profiles (OWL RL), 
Earlier languages: DAML,  
DAML+OIL, Classic 
RIF WG 
AIR accountability tool 
DL, KIF, CL, N3Logic  
Inference Web, Proof 
Markup Language,  W3C 
Provenance Working 
group formal model, 
W3C incubator group, 
… 
Inference Web IW Trust,  
Air + Trust 
Visualization APIs 
S2S 
Govt Data 
Ontology repositories  
(ontolinguag), 
Ontology Evolution env: 
Chimaera,  
Semantic eScience  
Ontologies,   
MANY other ontologies 
Transparent Accountable 
Datamining Initiative (TAMI) 
134 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 
Foundations: Web Layer Cake 

135 
+ Foundations: Proof Markup Language  -> PROV 
A new kind of linked data on the Web 
 
 
 
 
 
 
 
Modularized & extensible 
Provenance: annotate provenance properties 
Justification: encodes provenance relations 
Trust: add trust annotation 
Semantic Web based 
    Enterprise Web 
 
 
Enterprise Web 
 
 
 
 
World Wide Web 
 
 
 
 
D 
D 
PML 
data 
PML 
data 
D 
D 
D 
PML 
data 
PML 
data 
… 
PML 
data 
D 
D 
PML 
data 
PML 
data 
D 
135 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

136 
+ 
Explanation via Graph 
Explanation via Summary 
Explanation via Annotation 
Foundations: Inference Web (IW) 
  End 
   Users 
End-User  
Interaction 
services 
Distributed 
PML data 
Data Access & 
 Data Analysis  
Services 
Validate published PML data 
Access published PML data 
 
 
Inference Web is a semantic web-based knowledge provenance management 
infrastructure: 
 
• PML for encoding and interchange provenance metadata in distributed environment  
• Interactive explanation services for end-users 
• Data access and analysis services for enriching the value of knowledge provenance 
136 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

137 
+ Social Observatory  
 
Social Media use is on 
the rise. Every day, we 
write: 
294 billion emails 
2 million blog posts 
Over 40 Million 
Tweets* 
 
How can we leverage 
Social Media sites 

 to gather requirements 
for active First 
Responders? 

to identify communities 

to identify stakeholders 
within those First 
Responder communities? 

To identify trends 
 
 
 http://tw.rpi.edu/web/project/FirstRes
d
Finding Topics 
Finding Users 

+ 
Web Service 
Composition 
Tailored 
Model/Views 
Data Sources 
(government, academic, commercial) 
Linked    
integrate, 
publish 
enhance, 
curate 
Data 
quality 
assessment 
discovery 
search 
catalog, 
aggregate 
Questions 
Use Case(s) 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

139 
+ Reflections 
Successful but…. 
• What if we could allow data experts to build their own demos? 
• What if we could allow non-subject matter experts to function as 
subject-literate staff? 
• What if team members could interchange roles (and thus make 
contributions in other areas)? 
• What technological infrastructure is required? 
• Claim: all of this is being done now – but not at scale 
139 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

140 
+ RDF Data Cube Vocabulary 
For publishing multi-
dimensional data, such as 
statistics, on the web in such 
a way that it can be linked to 
related data sets and 
concepts using RDF. 
Compatible with the cube 
model that underlies SDMX 
(Statistical Data and 
Metadata eXchange). 
Also compatible with: 
SKOS, SCOVO, VoiD, FOAF, 
Dublin Core Terms 
Integrated with the LOGD data 
conversion infrastructure 
Integrated with other tooling like 
Stats2RDF 
140 
Copyright © 2015 Thematix Partners LLC & McGuinness Associates 

141 
County average 
life expectancy 
(Summary Measures of 
Health) 

