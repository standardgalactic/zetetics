ARTICLE
Received 17 Sep 2014 | Accepted 9 Nov 2015 | Published 25 Jan 2016
Quantum algorithms for topological and geometric
analysis of data
Seth Lloyd1, Silvano Garnerone2 & Paolo Zanardi3
Extracting useful information from large data sets can be a daunting task. Topological
methods for analysing data sets provide a powerful technique for extracting such information.
Persistent homology is a sophisticated tool for identifying topological features and for
determining how such features persist as the data is viewed at different scales. Here we
present quantum machine learning algorithms for calculating Betti numbers—the numbers
of connected components, holes and voids—in persistent homology, and for ﬁnding
eigenvectors and eigenvalues of the combinatorial Laplacian. The algorithms provide an
exponential speed-up over the best currently known classical algorithms for topological data
analysis.
DOI: 10.1038/ncomms10138
OPEN
1 Department of Mechanical Engineering, Research Lab for Electronics, Massachusetts Institute of Technology, MIT 3-160, Cambridge, Massachusetts 02139,
USA. 2 Institute for Quantum Computing, University of Waterloo, Waterloo, Ontario, Canada N2L 3G1. 3 Department of Physics and Astronomy, Center for
Quantum Information Science & Technology, University of Southern California, Los Angeles, California 90089-0484, USA. Correspondence and requests for
materials should be addressed to S.L. (email: slloyd@mit.edu).
NATURE COMMUNICATIONS | 6:10138 | DOI: 10.1038/ncomms10138 | www.nature.com/naturecommunications
1

H
uman society is currently generating on the order of
Avogadro’s number (6  1023) of bits of data a year.
Extracting useful information from even a small subset of
such a huge data set is difﬁcult. A wide variety of big data
processing techniques have been developed to extract from large
data sets the hidden information in which one is actually
interested.
Topological
techniques
for
analysing
big
data
represent a sophisticated and powerful tool1–24. By its very
nature, topology reveals features of the data that robust to how
the data were sampled, how it was represented and how it was
corrupted by noise. Persistent homology is a particularly useful
topological technique that analyses the data to extract topological
features such as the number of connected components, holes,
voids and so on (Betti numbers) of the underlying structure from
which the data was generated. The length scale of analysis is then
varied to see whether those topological features persist at different
scales. A topological feature that persists over many length scales
can be identiﬁed with a ‘true’ feature of the underlying structure.
Topological methods for analysis face challenges: a data
consisting of n data points possesses 2n possible subsets that
could contribute to the topology. Performing methods of
algebraic topology on simplicial complexes eventually requires
matrix multiplication or diagonalization of matrices of dimension
O
n
k þ 1


to extract topological features at dimension k. For
small k, such operations require time polynomial in n; however,
to extract high-dimensional features, matrix multiplication and
diagonalization lead to problem solution scalings that grow
exponentially
in
the
size
of
the
complex.
A
variety
of
mathematical methods have been developed to cope with the
resulting combinatorial explosion, notably mapping the complex
to a smaller complex with the same homology, and then
performing the matrix operations on the reduced complex1–24.
Even in such cases, the initial reduction must identify all
simplices in the original complex, and so can scale no better than
linearly in the number of simplices. Consequently, even with only
a few hundred data points, creating the persistent homology for
Betti numbers at all orders of k is a difﬁcult task. In particular, the
most efﬁcient classical algorithms for estimating Betti numbers at
order k (the number of k-dimensional gaps, holes and so on),
have computational complexity either exponential in k or
exponential in n (refs 7–12), so that estimating Betti numbers
to all orders scales exponentially in n, and algorithms for
diagonalizing the combinatorial Laplacian (that reveal not only
the Betti numbers but additional geometric structure) at order k
have computational complexity as O
n
k

2
 
!
, where n is the
number of vertices in the (possibly reduced) complex. That is, the
best classical algorithms for estimating Betti numbers to all
orders9–12 and for diagonalizing the full combinatorial Laplacian
grow exponentially in the number of vertices in the complex.
This paper investigates quantum algorithms for performing
topological analysis of large data sets. We show that a quantum
computer can ﬁnd the eigenvectors and eigenvalues of the
combinatorial Laplacian and estimate Betti numbers to all orders
and to accuracy d in time O(n5/d), thereby reducing a classical
problem for which the best existing solutions have exponential
computational
complexity,
to
a
polynomial-time
quantum
problem. Betti numbers can also be estimated by using a reduced,
or ‘witness’ complex, that contains fewer points than the original
complex1–12. Applied to such witness complexes, our method
again yields a reduction in estimation time from O 22~n


to O ~n5
ð
Þ,
where ~n is the number of points in the reduced complex.
Recently, quantum mechanical techniques have been proposed
for machine learning and data analysis25–34. In particular, some
quantum machine learning algorithms31–33 provide exponential
speed-ups
over
the
best
existing
classical
algorithms
for
supervised and unsupervised learning. Such ‘big quantum data’
algorithms use a quantum random access memory (qRAM)35–37
to map an N-bit classical data set onto the quantum amplitudes of
a (log2 N)-qubit quantum state, an exponential compression over
the
classical
representation.
The
resulting
state
is
then
manipulated using quantum information processing in time
poly(log2 N) to reveal underlying features of the data set. That is,
quantum computers that can perform ‘quantum sampling’ of data
can perform certain machine learning tasks exponentially faster
than classical computers performing classical sampling of data.
A discussion of computational complexity in quantum machine
learning can be found in ref. 34. Constructing a large-scale qRAM
to access NB109  1012 pieces of data is a difﬁcult task. By
contrast, the topological and geometrical algorithms presented
here do not require a large-scale qRAM: a qRAM with O(n2) bits
sufﬁces to store all pairwise distance information between the
points of our data set. The algorithms presented here obtain their
exponential speed-up over the best existing classical algorithms
not by having quantum access to a large data set, but instead, by
mapping a combinatorially large simplicial complex with O(2n)
simplices to a quantum state with n qubits, and by using quantum
information processing techniques such as matrix inversion and
diagonalization to perform topological and geometrical analysis
exponentially faster than classical algorithms. Essentially, our
quantum algorithms operate by ﬁnding the eigenvectors and
eigenvalues of the combinatorial Laplacian. But diagonalizing a 2n
by 2n sparse matrix using a quantum computer takes time O(n2),
compared with time O(22n) on a classical computer38–40.
The algorithms given here are related to quantum matrix
inversion algorithms41. The original matrix inversion algorithm41
yielded as solution a quantum state, and left open the question of
how to extract useful information from that state. The topological
and geometric algorithms presented here answer that question:
the algorithms yield as output not quantum states but rather
topological invariants—Betti numbers—and do so in time
exponentially faster than the best existing classical algorithms.
The best classical algorithms for calculating the kth Betti number
takes time O(nk), and estimating Betti numbers to all orders to
accuracty d takes time at least O(2n log(1/d)) (refs 7–12). Exact
calculation of Betti numbers for some types of topological sets
(algebraic varieties) is PSPACE hard42. By contrast, our algorithm
provides approximate values of Betti numbers to all orders and
to accuracy d in time O(n5/d): although no polynomial classical
algorithm
for
such
approximate
evaluation
of
topological
invariants is known, the computational complexity of such
approximation remains an open problem. We do not expect our
quantum algorithms to solve a PSPACE-hard problem in
polynomial time. We summarize the comparison between the
amount of resources required by the classical and quantum
algorithms in Table 1.
Results
The quantum pipeline. The quantum algorithm operates by
mapping vectors, simplices, simplicial complexes and collections
of simplicial complexes to quantum mechanical states, and
reveals topology by performing linear operations on those states.
The 2n possible simplices of the simplicial complex are mapped
onto an n-qubit quantum state. This state is then analysed using
conventional quantum computational techniques of eigenvector
and eigenvalue analysis, matrix inversion and so on. The
quantum analysis reveals topological features of the data, and
shows how those features arise and persist when the scale of
analysis is varied. The resulting quantum algorithms provide an
ARTICLE
NATURE COMMUNICATIONS | DOI: 10.1038/ncomms10138
2
NATURE COMMUNICATIONS | 6:10138 | DOI: 10.1038/ncomms10138 | www.nature.com/naturecommunications

exponential speed-up over the best existing classical algorithms
for topological data analysis.
In addition to revealing topological features such as Betti
numbers, our algorithm uses the relationship between algebraic
topology and Hodge theory9–12,14–24 to reveal geometrical
information about the data analysed at different scales. The
algorithm operates by identifying the harmonic forms of the
data, together with the other eigenvalues and eigenvectors of
the combinatorial Laplacian—the quantities that famously allow
one to ‘hear the shape of a drum’43. The quantum algorithm
reveals these geometric features exponentially faster than the
corresponding classical algorithms. In particular, our quantum
algorithm for ﬁnding all Betti numbers for the persistent
homology for simplicial complexes over n points and for
diagonalizing the combinatorial Laplacian takes time O(n5/d),
where d is the multiplicative accuracy to which Betti numbers and
eigenvalues
are
determined.
The
best
available
classical
algorithms to perform these tasks at all orders of k take time
O(22n log(1/d)).
The advantage of big quantum data techniques is that they
provide exponential compression of the representation of the
data. The challenge is to see if—and this is a big ‘if’—it is still
possible to process the highly compressed quantum data to reveal
the desired hidden structure that underlies the original data set.
Here we show that quantum information processing acting on
large data sets encoded in a quantum form can indeed reveal
topological features of the data set.
Classical algorithms for persistent homology have two steps
(the ‘pipeline’). First, one processes the data to allow the
construction of a topological structure such as a simplicial
complex that approximates the hidden structure from which the
data was generated. The details of the topological structure
depends on the scale at which data is grouped together. Second,
one constructs topological invariants of that structure and
analyses how those invariants behave as a function of the
grouping scale. As above, topological invariants that persist over a
wide range of scales are identiﬁed as features of the underlying
hidden structure.
The quantum ‘pipeline’ for persistent homology also has two
steps. First, one accesses the data in quantum parallel to construct
quantum states that encode the desired topological structure: if
the structure is a simplicial complex, for example, one constructs
quantum states that are uniform superposition of descriptions of
the simplices in the complex. Second, one uses the ability
of quantum computing to reveal the ranks of linear maps to
construct the topological invariants of the structure. The steps of
the quantum pipeline are now described in more detail.
Constructing a simplicial complex. Classical persistent homol-
ogy algorithms use the access to data and distances to construct a
topological
structure—typically
a
simplicial
complex—that
corresponds to the hidden structure whose topology one wishes
to reveal. In the quantum algorithm, we use the ability to access
data and to estimate distances in quantum parallel to construct
quantum states that encode the simplicial complex. Each simplex
in the complex consists of a fully connected set of vertices:
a k-simplex sk consists of k þ 1 vertices j0, j1, y, jk (listed in
ascending order, j0oj1o y ojk) together with the k(k þ 1)/2
edges connecting each vertex to all the other vertices in the
simplex. Encode a k-simplex sk as a string of n bits, for example,
0110 y 1, with k þ 1 1s at locations j0, j1, y, jk designating the
vertices in the simplex. Removing the ‘th vertex and its associated
edges from a k-simplex yields a k  1 simplex. The k þ 1 simplices
sk  1 ‘ð Þ with vertices j0 . . . ^j‘ . . . jk obtained by removing the ‘th
vertex j‘ from sk form the boundary of the original simplex. The
number of potential simplices in a simplicial complex is equal
to 2n, the number of possible subsets of the n points in the graph.
That is, every member of the power set is a potential simplex.
If n is large, the resulting combinatorial explosion means that
identifying large simplices can be difﬁcult.
To deﬁne a simplicial complex, ﬁx a grouping scale E, and
identify k simplices as subsets of k þ 1 points that are all within E
of each other. The resulting set of simplices SE is called the
Vietoris–Rips complex. The form of the simplicial complex SE
depends on the scale E at which its points are grouped together:
persistent homology investigates how topological invariants of the
simplicial complex depend on the scale E. The collection of
simplicial complexes {SE} for different values of the grouping scale
E is called a ﬁltration. Note that if a simplex belongs to the
complex SE, then it also belongs to SE0, E04E. That is, the ﬁltration
consists of a sequence of nested simplicial complexes. When E is
sufﬁciently small, only the zero-simplices (points) lie in the
complex. As E increases, one and two simplices (edges and
triangles) enter the complex, followed by higher order simplices.
As E continues to increase, topological features such as holes, gaps
and voids come into existence, and then are eventually ﬁlled in.
For sufﬁciently large E, all possible simplices are contained in the
complex.
Now
construct
quantum
states that
correspond
to the
simplicial complex. Encode simplices as quantum states over n
qubits with 1 s at the positions of the vertices. We designate the
k-simplex sk by the n-qubit basis vector sk
j i2 C2n. Denote the
n
k þ 1


dimensional Hilbert space corresponding to all possible
k simplices by Wk. Let HE
k be the subspace of Wk spanned by sk
j i
where sk 2 SE
k, the set of k simplices in SE. The full simplex space
at scale E is deﬁned to be HE ¼  kHE
k. Assume that the distances
between pairs of points are either given by a quantum algorithm
or stored in qRAM (see Methods section). The ability to evaluate
distances translates onto the ability to apply the projector PE
k that
projects onto the k-simplex space HE
kand the projector PE that
projects onto the full simplex space HE.
Table 1 | Computational cost comparison.
Procedural steps
Classical cost
Quantum cost
Input pairwise distances,
n points
O(n2) bits
O(n2) bits
Construct simplicial
complex
O(2n) ops
O(n2) ops on O(n) qubits
Diagonalize Laplacian/ﬁnd Betti numbers
O(22n log(1/d)) ops
O(n5/d) quantum ops
d is the multiplicative accuracy to which the Betti numbers and the eigenvalues of the combinatorial Laplacian are determined. Note the trade-off between the exponential quantum speed-up and
accuracy: the quantum algorithms obtain an exponential speed-up over classical algorithms but provide an accuracy that scales polynomially in 1/d rather than exponentially. This feature arises from the
nature of the quantum phase estimation/matrix inversion algorithms, which obtain their exponential speed-up by estimating eigenvectors and eigenvalues using a ‘pointer-variable’ measurement
interaction38–40. By contrast, classical algorithms need only keep O(log(1/d)) bits of precision, but must perform O(22n) steps to diagonalize 2n  2n sparse matrices.
NATURE COMMUNICATIONS | DOI: 10.1038/ncomms10138
ARTICLE
NATURE COMMUNICATIONS | 6:10138 | DOI: 10.1038/ncomms10138 | www.nature.com/naturecommunications
3

Grover’s algorithm can then be used to construct the k-simplex
state
c
j iE
k¼
1ﬃﬃﬃﬃﬃﬃﬃﬃ
SE
k


q
X
sk2SE
k
sk
j i;
ð1Þ
where as above SE
k is the set of k simplices in the complex at scale
E. That is, c
j iE
k is the uniform superposition of the quantum states
corresponding to k simplices in the complex. For each simplex sk,
we can verify whether sk 2 SE
k in O(k2) steps. That is, we can
implement a membership function f E
k sk
ð Þ ¼ 1 of sk 2 SE
k in O(k2)
steps. The multi-solution version of Grover’s algorithm then
allows us to construct the k-simplex state of equation (1).
The construction of the k-simplex state via Grover’s algorithm
reveals the number of k simplices SE
k

 ¼ dimHE
k in the complex at
scale E, and takes time O n2 zE
k

 1=2

	
, where zE
k ¼ SE
k

=
n
k þ 1


is the fraction of possible k simplices that are actually n the
complex at scale E. When this fraction is too small, the quantum
search procedure will fail to ﬁnd the simplices. For koon, we
have
n
k þ 1


¼ O nk þ 1=k !


, and zE
k is only polynomially small
in n. By contrast, for kEn, zkE can be exponentially small in n: if
only an exponentially small set of possible simplices actually lie in
the complex, quantum search will fail to ﬁnd them. For the
purposes of performing the quantum algorithm, we ﬁx a
parameter z that determines the accuracy to which we wish to
determine the simplex state, and run the simplex ﬁnding
algorithm for a time z  1/2. At each grouping scale E, the
algorithm will ﬁnd k simplices when zE
k4z, and estimate the
number of k simplices to accuracy zE
k  z. As E increases, more
and more simplices enter into the complex; zE
k increases; and
quantum search will succeed in constructing the simplex state to
greater and greater accuracy. When E becomes larger than the
maximum distance between vectors, all simplices are in the
complex.
Below, it will prove useful to have, in addition to the simplex
state
c
j iE
k the state rE
k ¼ 1= SE
k



 P
sk2SE
k sk
j i sk
h j, which is the
uniform mixture of all k-simplex states in the complex at
grouping scale E. rE
k can be constructed in a straightforward
fashion from the simplex state
c
j iE
k by adding an ancilla
and
copying
the
simplex
label
to
construct
the
state
1ﬃﬃﬃﬃﬃﬃ
SE
k
j j
p
P
sk2SE
k sk
j i  sk
j i. Tracing out the ancilla then yields the
desired uniform mixture over all k simplices.
In summary, we can represent the the simplicial complex in
quantum mechanical form using exponentially fewer bits than
that are required classically. Indeed, the quantum search method
for constructing simplicial states works best when zE
k is not too
small, so that a substantial fraction of simplices that could be in
the complex are actually in the complex. But this regime is exactly
the regime where the classical algorithms require an exponentially
large amount of memory space bits merely to record which
simplices are in the complex. Now we show how to act on this
quantum mechanical representation of the ﬁltration to reveal
persistent homology.
Topological analysis. Having constructed a quantum state that
represents the simplicial complex SE at scale E, we use quantum
information processing to analyse its topological properties.
In algebraic topology in general, and in persistent homology
in particular, this analysis is performed by investigating the
properties of linear maps on the space of simplices. As above, let
HE
k be the Hilbert space spanned by vectors corresponding to k
simplices in the complex at level E. We identify the vector space
HE
k with the abelian group Ck (the kth chain group) under
addition of vectors in the space. Let j0 y jk be the vertices of sk.
Deﬁne the boundary map @k on the space of k simplices by
@k sk
j i ¼
X
‘
 1
ð
Þ‘ sk  1 ‘ð Þ
j
i
ð2Þ
where as above sk  1 ‘ð Þ is the k  1 simplex on the boundary of sk
with vertices j0 . . . ^j‘ . . . jk obtained by omitting the ‘th vertex j‘
from sk. The boundary map maps each simplex to the oriented
sum of its boundary simplices. @k is a
n
k



n
k þ 1


matrix
with n  k non-zero entries ±1 in each row and k þ 1 non-zero
entries ±1 per column. Note that @k@k þ 1 ¼ 0: the boundary of a
boundary is zero. As deﬁned, @k acts on the space of all k
simplices. We deﬁne the boundary map restricted to operate from
HE
k to HE
k  1 to be ~@k ¼ @kPE
k, where as above PE
k is the projector
onto the space of k simplices in the complex at scale E.
The
kth
homology
group
Hk
is
the
quotient
group,
Ker ~@k=Imagek þ 1 ~@k þ 1, the kernel of ~@k divided by the image of
~@k þ 1 acting on Hk þ 1at grouping scale E. The kth Betti number bk
is equal to the dimension of Hk, which in turn is equal to the
dimension of the kernel of ~@k minus the dimension of the image
of ~@k þ 1.
The strategy that we use to identify persistent topological
features operates by identifying the singular values and singular
vectors of the boundary map. Connected components, holes,
voids and so on, correspond to structures—chains of simplices—
that have no boundary, but that are not themselves a boundary.
That is, we are looking for the set of states that lie within the
kernel of ~@k, but that do not lie within the image of ~@k þ 1. The
ability to decompose arbitrary vectors in HE
k in terms of these
kernels and images allows us to identify Betti numbers at different
grouping scales E.
The quantum phase algorithm38–40 allows one to decompose
states in terms of the eigenvectors of an Hermitian matrix and to
ﬁnd the associated eigenvalues. Once the k-simplex states c
j iE
k
have been constructed, the quantum phase algorithm allows one
to decompose
those states in terms of eigenvectors and
eigenvalues of the boundary map. The boundary map is not
Hermitian. We embed the boundary map ~@k into a Hermitian
matrix BE
k deﬁned by
BE
k ¼
0
~@k
~@y
k
0
 
!
:
ð3Þ
BE
k acts on the space HE
k  1  HE
k. Note that BE
k is n-sparse: there
are either k or n  k entries per row. Similarly, deﬁne the full
Hermitian boundary map to be
BE ¼ BE
1  BE
2  . . .  BE
n:
ð4Þ
BE
is
also
n-sparse.
Because
~@k ~@k þ 1 ¼ 0,
we
have
BE2 ¼ D0  D1  . . .  Dn, where Dk ¼ ~@w
k ~@k þ ~@k þ 1 ~@w
k þ 1 is
the combinatorial Laplacian of the kth simplicial complex22–24.
Because BE
ð
Þ2 is the sum of the combinatorial Laplacians, BE is
sometimes called the ‘Dirac operator’, since the original Dirac
operator was the square root of the Laplacian. Explicit matrix
forms of the Dirac operator and the combinatorial Laplacian are
given in the Methods section. Hodge theory9–12,14–24 implies that
the kth homology group satisﬁes Hk ¼ Ker ~@k=Imagek þ 1 ~@k þ 1
ﬃKer Dk. The dimension of this kernel is the kth Betti number.
To ﬁnd the dimension of the kernel, apply the quantum phase
algorithm38–40 to BE starting from the uniform mixture of
simplices rE. The quantum phase algorithm decomposes this state
into the eigenvectors of the combinatorial Laplacian, and
identiﬁes the corresponding eigenvalues. The probability of
ARTICLE
NATURE COMMUNICATIONS | DOI: 10.1038/ncomms10138
4
NATURE COMMUNICATIONS | 6:10138 | DOI: 10.1038/ncomms10138 | www.nature.com/naturecommunications

yielding a particular eigenvalue is proportional to the dimension
of the corresponding eigenspace. As above, classical algorithms
for ﬁnding the eigenvalues and eigenvectors of the combinatorial
Laplacians Dk, and calculating the dimension of the eigenspaces
takes O
n
k

2
 
!
 O 22n
ð
Þ computational steps using sparse
matrix diagonalization via Gaussian elimination or the Lanczos
algorithm. On a quantum computer, however, the quantum phase
algorithm38–40 can project the simplex states
c
j iE
k onto the
eigenspaces of the Dirac operator BE and ﬁnd corresponding
eigenvalues to accuracy d in time Oðn5d  1z  1=2Þ, where as above
z is the accuracy to which we choose to construct the simplex
state. The factor of n5 arises because the quantum phase
algorithm
applied
to
an
n-sparse
matrix
requires
time
n3/d  1: the extra factor of n2 arises because it takes time O(k2)
to evaluate the projector PE
k onto the subspace of k simplices.
The algorithm also identiﬁes the dimension of the eigenspaces
of the Dirac operator and combinatorial Laplacian in time
Oðn5d  1z  1=2Z  1=2
‘
Þ, where Z‘ is equal to the dimension d‘ of
the ‘th eigenspace divided by Sj jk, the dimension of the k-simplex
space. The kth Betti number bk is equal to the dimension of the
kernel of Dk. The algorithm allows us to construct the full
decomposition of the simplicial complex in terms of eigenvectors
and eigenvalues of the combinatorial Laplacian, yielding useful
geometric information such as harmonic forms. Monitoring how
the eigenvalues and eigenspaces of the combinatorial Laplacian
change as E changes provides geometric information about how
various topological features such as connected components, holes
and voids come into existence and disappear as the grouping scale
changes16,17,44.
Discussion
This paper extended methods of quantum machine learning to
topological data analysis. Homology is a powerful topological
tool. The representatives of the homology classes for different k
deﬁne the connected components of the simplicial complex,
holes, voids and so on. The Betti numbers count the number of
connected components, holes, voids and so on. Varying the
simplicial scale E and tracking how Betti numbers change as
function of E reveals how topological features come into existence
and go away as the data is analysed at different length scales. Our
algorithm also reveals how the structure of the eigenspaces and
eigenvalues of the combinatorial Laplacian changes as a function
of E. This ‘persistent geometry’ reveals features of the data such as
rate of change of harmonic forms over different simplicial scales.
The underlying methods of our quantum algorithms are
similar to those in other big quantum data algorithms19–21. The
primary difference between the topological and geometrical
algorithms presented here, and algorithms for, for example,
constructing clusters19, principal components20, and support
vector machines21, is that our topological algorithms require only
a small qRAM of size O(n2). Consequently, even when the full
qRAM
resources
are
included
in
the
accounting
of
the
computational complexity of the algorithms, the topological
algorithms require only an amount of computational resources
polynomical in the number of data points, while the best existing
classical algorithms for answering the same questions require
exponential resources.
To recapitulate the steps of the algorithm: First, the quantum
data
is
processed
using
standard
techniques
of
quantum
computation: distances between points are evaluated, simplices
of neighbouring points are identiﬁed, and a simplicial complex is
constructed. The simplicial complex depends on the grouping
scale E. We construct a quantum state that represents the
ﬁltration of the complex—the set of simplicial complexes, related
by inclusion, for different E. This quantum state contains
exponentially fewer qubits than the number of bits required to
describe the classical ﬁltration of the complex. Second, we use the
quantum phase algorithm38–40 to calculate the eigenvalues and to
construct the eigenspaces of the combinatorial Laplacian at each
scale E. The dimension of the kernel of the combinatorial
Laplacian for k simplices is the kth Betti number. In addition,
this construction gives us geometric information about the
data set.
Classical
algorithms
for
performing
the
full
persistent
homology over a space with n points over all scales k take time
O(22n): there are 2n possible simplices, and evaluating kernels and
images of the boundary map via Gaussian elimination for sparse
matrices takes time that goes as the square of the dimension of
the space of simplices. By contrast, the quantum algorithm for
constructing the Betti numbers and for decomposing the
simplicial complex in terms of eigenvalues and eigenvectors of
the combinatorial Laplacian takes time O(n5), compared with
O(22n) for classical algorithms. The eigenvectors of the kernels of
the combinatorial Laplacian are related to the representatives of
the kth homology class via a boundary term. How to extend the
quantum algorithms given here to construct the full barcode of
persistent homology and to construct the representatives of
the homology class directly is an open question. It would also
be interesting to extend the quantum algorithmic methods
developed here to further algebraic and combinatorial problems,
for example, Morse theory.
Methods
Overview. In this section we provide further details of distance evaluation,
simplex state construction, and the form of the Dirac operator and the
combinatorial Laplacian.
State preparation and distance evaluation. Topological analysis of the data
requires distances between data points. Assume that the data set contains n points
together with the n(n  1)/2 distances between them. The data is stored in qRAM
or qRAM35–37, so that the algorithm can access the data in quantum parallel. The
essential feature of a qRAM is that it preserves quantum coherence: the qRAM
maps a quantum superposition of inputs P
j aj jj i 0j i to a quantum superposition of
outputs P
j aj jj i vj
 
. Note that a quantum RAM is potentially signiﬁcantly easier to
construct than a full-blown quantum computer. The storage medium of a quantum
RAM can be essentially classical: indeed, a single photon reﬂected off a compact
disk encodes in its quantum state all the bits of information stored in the mirrors
on the disk. In addition to a classical storage medium such as a CD, a qRAM
contains quantum switches that can be opened in quantum superposition to access
that information in quantum parallel. Each call to an N-bit qRAM requires log2 N
quantum operations. Quantum RAMS have been designed, and prototypes have
been constructed35–37. In contrast to other big quantum data algorithms31–33, the
size of the qRAM required to perform topological and geometric analysis is
relatively small: because the computational complexity of classical algorithms for
persistent homology scales as O(22n), while the quantum algorithms require only
O(n2) bits worth of qRAM, a signiﬁcant quantum advantage could be obtained by a
qRAM with hundreds to thousands of bits.
As an alternative to being presented with the pre-calculated distances, the data
set could consist of n d-dimensional vectors ~vj
 
over the complex numbers, and
we can use the qRAM to construct the distances ~vi ~vj

 between the ith and jth
vectors31. Finally, the distances can be presented as the output of a quantum
computation. In all cases, our quantum algorithms for topological and geometric
analysis operate by accessing the distances in quantum parallel. Big quantum data
analysis works by mapping each vector ~vj to a quantum state vj
 
2 Cd, and the
entire database to a quantum state 1=
ﬃﬃﬃn
p
ð
Þ P
j jj i vj
 
2 Cn  Cd. A quantum
RAM can be queried in quantum parallel: given an input state jj i 0j i, it produces
the output state jj i vj
 
, where vj
 
is normalized quantum state proportional to the
vector ~vj. Such a quantum state can be encoded using O(log2(nd)) quantum bits,
and ~vj
  is the norm of the vector.
If we have not been given the n(n  1)/2 distances directly in qRAM, the next
ingredient of the quantum algorithm is the ability to evaluate inner products
and distances between vectors. In refs 20,31–33 it is shown how the access
to vectors in quantum superposition: the ability to create the quantum
states corresponding to the vectors translates into the ability to estimate
NATURE COMMUNICATIONS | DOI: 10.1038/ncomms10138
ARTICLE
NATURE COMMUNICATIONS | 6:10138 | DOI: 10.1038/ncomms10138 | www.nature.com/naturecommunications
5

~vi ~vj

2¼ 2 ~vw
i~vj ~vw
j~vi. That is, we can construct a quantum circuit that
takes as input the state ij i jj i 0j i and produces as output the state ij i jj i ~vi ~vj

2

E
,
where the third register contains an estimate of the distance between ~vi and ~vj.
To estimate the distance to accuracy d takes O(d  1) quantum memory calls and
O(d  1 ðlog2ðndÞÞ2Þ quantum operations. As with the qRAM, the circuit to
evaluate distances operates in quantum parallel.
Simplex state construction. To elucidate the construction of the k-simplex states
(1), we look more closely into the implementation of Grover’s algorithm to
understand when it succeeds in constructing the k-simplex state, and how it fails.
Start from a superposition n  1=2 P
k kj i over all values of k. Performing simplex
construction in parallel via Grover’s algorithm with the membership function f E
k
yields the full simplex state at scale E:
C
j
iE¼ 1ﬃﬃﬃn
p
X
k
kj i c
j iE
k:
ð5Þ
By adding ancillae as above, we can also construct the uniform mixture over all
values of k and all k simplices: rE ¼ 1=n
ð
Þ P
k kj i k
h j  rE
k. More precisely, if we
run the quantum search procedure for a time z  1/2, we will obtain the state
C
j
iE
z¼ 1ﬃﬃﬃn
p
X
k:zE
k	z
kj i c
j iE
k þ
X
k:zE
koz
kj i 0j i
0
@
1
A
ð6Þ
that contains the simplex states c
j iE
k for which zE
k 	 z and which returns a null
result 0j i for the simplex states for which zE
koz. For small E—where only a small
fraction of all possible simplices lie within the complex—and ﬁxed z, the simplex
state C
j
iE
z will contain the actual simplex states c
j iE
k only for small k. As E becomes
larger and larger, higher and higher k-simplex states enter the ﬁltration and C
j
iE
z
will contain more and more of the k-simplex states.
Constructing the simplex state in quantum parallel at m different grouping
scales Ei yields the ﬁltration state
F
j iz¼
1ﬃﬃﬃﬃﬃﬃﬃ
mn
p
X
i
Ei
j i C
j
iE
z:
ð7Þ
The ﬁltration state F
j iz contains the entire ﬁltration of the simplicial complex in
quantum superposition. The quantum ﬁltration state contains exponentially fewer
quantum bits than the number of classical bits required to describe the classical
ﬁltration of the complex: logm qubits are required to register the grouping scale E,
and n qubits are required to label the simplices. F
j iz takes time O(z  1/2n2 log(m))
to construct. By contrast, a classical description of the ﬁltration of the simplicial
complex requires O(2n) bits.
Explicit form of the Dirac operator and simplicial Laplacian. Here we present
the full matrix form of the Dirac operator BE and the combinatorial Laplacian (BE)2.
The Dirac operator is
BE ¼
0
~@1
0
~@y
1
0
~@2
. . .
0
~@y
2
0
. . .
0
~@n  1
0
. . .
~@y
n  1
0
~@n
0
~@y
n
0
0
B
B
B
B
B
B
B
B
B
B
@
1
C
C
C
C
C
C
C
C
C
C
A
;
ð8Þ
where as above ~@k ¼ PE
k  1@kPE
k is the boundary map conﬁned to the simplicial
subspace HE. It is straightforward to verify that the Dirac operator is n-sparse.
The combinatorial Laplacian is obtained by squaring the Dirac operator:
BE
ð
Þ2¼
~@1 ~@y
1
0
0
0
~@y
1 ~@1 þ ~@2 ~@y
2
0
. . .
0
0
~@y
2 ~@2 þ ~@3 ~@y
3
. . .
. . .
~@y
n  1 ~@n  1 þ ~@n ~@y
0
0
~@y
n ~@n
0
B
B
B
B
B
B
B
B
B
@
1
C
C
C
C
C
C
C
C
C
A
: ð9Þ
The quantum algorithm operates by diagonalizing the Dirac operator.
References
1. Zomorodian, A. & Carlsson, G. Computing persistent homology. Discret.
Comput. Geom. 33, 249–274 (2005).
2. Robins, V. Towards computing homology from ﬁnite approximations. Topol.
Proc. 24, 503–532 (1999).
3. Frosini, P. & Landi, C. Size theory as a topological tool for computer vision.
Pattern Recognit. Image Anal. 9, 596–603 (1999).
4.
Carlsson, G., Zomorodian, A., Collins, A. & Guibas, L. Persistence barcodes for
shapes. Int. J. Shape Model. 11, 149–188 (2005).
5.
Edelsbrunner, H., Letscher, D. & Zomorodian, A. Topological persistence and
simpliﬁcation. Discret. Comput. Geom. 28, 511–533 (2002).
6.
Zomorodian, A. in Algorithms and Theory of Computation Handbook 2nd edn
Ch. 3, section 2 (Chapman and Hall/CRC, 2009).
7.
Chazal, F. & Lieutier, A. Stability and computation of topological invariants of
solids in Rn. Discret. Comput. Geom. 37, 601–617 (2007).
8.
Cohen-Steiner, D., Edelsbrunner, H. & Harer, J. Stability of persistence
diagrams. Discret. Comput. Geom. 37, 103–120 (2007).
9.
Basu, S. On bounding the Betti numbers and computing the euler characteristic
of semi-algebraic sets. Discret. Comput. Geom. 22, 1–18 (1999).
10. Basu, S. Different bounds on the different Betti numbers of semi-algebraic sets.
Discret. Comput. Geom. 30, 65–85 (2003).
11. Basu, S. Computing the top Betti numbers of semi-algebraic sets deﬁned
by quadratic inequalities in polynomial time. Found. Comput. Math. 8, 45–80
(2008).
12. Basu, S. Algorithms in real algebraic geometry: a survey. Preprint at
http://arxiv.org/abs/1409.1534 (2014).
13. Friedman, J. Computing Betti numbers via combinatorial Laplacians. in Proceedings
of the 28th Annual ACM Symposium on Theory of Computing, 386–391 (Atlanta,
Georgia, 1996).
14. Hodge, W. V. D. The Theory and Applications of Harmonic Integrals
(Cambridge University Press, 1941).
15. Munkrees, J. R. Elements of Algebraic Topology (Benjamin/Cummings, 1984).
16. Butler, S. & Chung, F. Small spectral gap in the combinatorial Laplacian implies
Hamiltonian. Ann. Comb. 13, 403–412 (2010).
17. Maletic´, S. & Rjkovic´, M. Combinatorial Laplacian and entropy of simplicial
complexes associated with complex networks. Eur. Phys. J. Spec. Top. 212,
77–97 (2012).
18. Niyogi, P., Smale, S. & Weinberger, S. A topological view of unsupervised
learning from noisy data. SIAM J. Comput. 40, 646–663 (2011).
19. Kozlov, D. Algorithms and Computation in Mathematics Vol. 21 (Springer,
2008).
20. Ghrist, R. Barcodes: the persistent topology of data. Bull. Am. Math. Soc. 45,
61–75 (2008).
21. Harker, S., Mischaikow, K., Mrozek, M. & Nanda, V. Discrete Morse theoretic
algorithms for computing homology of complexes and maps. Found. Comput.
Math. 14, 151–184 (2014).
22. Mischaikow, K. & Nanda, V. Morse theory for ﬁltrations and efﬁcient
computation of persistent homology. Discret. Comput. Geom. 50, 330–353
(2013).
23. CHOMP. Computational homology project. http://chomp.rutgers.edu.
24. CAPD::RedHom: Reduction homology algorithms. http://redhom.ii.uj.edu.pl/.
25. Servedio, R. A. & Gortler, S. J. Equivalences and separations between quantum
and classical learnability. SIAM J. Comput. 33, 1067 (2004).
26. Hentschel, A. & Sanders, B. C. Machine learning for precise quantum
measurement. Phys. Rev. Lett. 104, 063603 (2010).
27. Neven, H., Denchev, V. S., Rose, G. & Macready, W. G. Training a large scale
classiﬁer with the quantum adiabatic algorithm. Preprint at http://arxiv.org/
abs/0912.0779 (2009).
28. Pudenz, K. L. & Lidar, D. A. Quantum adiabatic machine learning. Quantum
Inf. Process 12, 2027 (2013).
29. Anguita, D., Ridella, S., Rivieccion, F. & Zunino, R. Quantum optimization for
training support vector machines. Neural Netw. 16, 763–770 (2003).
30. Aı¨meur, E., Brassard, G. & Gambs, S. Quantum speed-up for unsupervised
learning. Mach. Lear. 90, 261–287 (2013).
31. Lloyd, S., Mohseni, M. & Rebentrost, P. Quantum algorithms for supervised
and unsupervised machine learning. Preprint at http://arxiv.org/abs/1307.0411
(2013).
32. Rebentrost, P., Mohseni, M. & Lloyd, S. Quantum support vector
machine for big feature and big data classiﬁcation. Phys. Rev. Lett. 113, 130503
(2014).
33. Lloyd, S., Mohseni, M. & Rebentrost, P. Quantum principal component
analysis. Nat. Phys. 10, 631–633 (2014).
34. Aaronson, S. Read the ﬁne print. Nat. Phys. 11, 291–293 (2015).
35. Giovannetti, V., Lloyd, S. & Maccone, L. Quantum random access memory.
Phys. Rev. Lett. 100, 160501 (2008).
36. Giovannetti, V., Lloyd, S. & Maccone, L. Architectures for a quantum random
access memory. Phys. Rev. A 78, 052310 (2008).
37. De Martini, F. et al. Experimental quantum private queries with linear optics.
Phys. Rev. A 80, 010302 (2009).
38. Yu. Kitaev, A., Shen, A. H. & Vyalyi, M. N. Classical and Quantum
Computation, Graduate Studies in Mathematics Vol. 47 (publications of the
American Mathematical Society, 2004).
39. Abrams, D. S. & Lloyd, S. A quantum algorithm providing exponential
speed increase for ﬁnding eigenvalues and eigenvectors. Phys. Rev. Lett. 83,
5162–5165 (1999).
ARTICLE
NATURE COMMUNICATIONS | DOI: 10.1038/ncomms10138
6
NATURE COMMUNICATIONS | 6:10138 | DOI: 10.1038/ncomms10138 | www.nature.com/naturecommunications

40. Nielsen, M. S. & Chuang, I. L. Quantum Computation and Quantum
Information (Cambridge University Press, 2000).
41. Harrow, A. W., Hassidim, A. & Lloyd, S. Quantum algorithm for solving linear
systems of equations. Phys. Rev. Lett. 15, 150502 (2009).
42. Scheiblechner, P. On the complexity of deciding connectedness and
computing Betti numbers of a complex algebraic variety. J. Complex. 23, 359–
379 (2007).
43. Kac, M. Can one hear the shape of a drum? Am. Math. Mon. 73, 1–23
(1966).
44. Sadakane, K., Sugawara, N. & Tokuyama, T. Quantum computation in
computational geometry. Interdisc. Inf. Sci. 8, 129–136 (2002).
Acknowledgements
We thank Mario Rasetti for suggesting the topic of topological analysis of big data.
We acknowledge helpful conversations with Patrick Rebentrost, Barbara Terhal and
Francesco Vaccarino. S.L. was supported by ARO, AFOSR, DARPA and Jeffrey Epstein.
P.Z. was supported by ARO MURI grant W911NF-11-1-0268 and by NSF grant
PHY-969969.
Author contributions
All authors contributed to the problem formulation, quantum algorithm design and error
analysis.
Additional information
Competing ﬁnancial interests: The authors declare no competing ﬁnancial interests.
Reprints and permission information is available online at http://npg.nature.com/
reprintsandpermissions/
How to cite this article: Lloyd, S. et al. Quantum algorithms for topological and
geometric analysis of data. Nat. Commun. 7:10138 doi: 10.1038/ncomms10138 (2016).
This work is licensed under a Creative Commons Attribution 4.0
International License. The images or other third party material in this
article are included in the article’s Creative Commons license, unless indicated otherwise
in the credit line; if the material is not included under the Creative Commons license,
users will need to obtain permission from the license holder to reproduce the material.
To view a copy of this license, visit http://creativecommons.org/licenses/by/4.0/
NATURE COMMUNICATIONS | DOI: 10.1038/ncomms10138
ARTICLE
NATURE COMMUNICATIONS | 6:10138 | DOI: 10.1038/ncomms10138 | www.nature.com/naturecommunications
7

