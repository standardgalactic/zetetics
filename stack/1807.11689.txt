Neural Article Pair Modeling for Wikipedia
Sub-article Matching⋆
Muhao Chen1, Changping Meng2, Gang Huang3, and Carlo Zaniolo1
1 University of California, Los Angeles, CA, USA
{muhaochen, zaniolo}@cs.ucla.edu
2 Purdue University, West Lafayette, IN, USA
meng40@purdue.edu
3 Google, Mountain View, CA, USA
ganghuang@google.com
Abstract. Nowadays, editors tend to separate different subtopics of a long Wiki-
pedia article into multiple sub-articles. This separation seeks to improve human
readability. However, it also has a deleterious effect on many Wikipedia-based
tasks that rely on the article-as-concept assumption, which requires each entity
(or concept) to be described solely by one article. This underlying assumption
signiﬁcantly simpliﬁes knowledge representation and extraction, and it is vi-
tal to many existing technologies such as automated knowledge base construc-
tion, cross-lingual knowledge alignment, semantic search and data lineage of
Wikipedia entities. In this paper we provide an approach to match the scattered
sub-articles back to their corresponding main-articles, with the intent of facilitat-
ing automated Wikipedia curation and processing. The proposed model adopts
a hierarchical learning structure that combines multiple variants of neural docu-
ment pair encoders with a comprehensive set of explicit features. A large crowd-
sourced dataset is created to support the evaluation and feature extraction for the
task. Based on the large dataset, the proposed model achieves promising results of
cross-validation and signiﬁcantly outperforms previous approaches. Large-scale
serving on the entire English Wikipedia also proves the practicability and scala-
bility of the proposed model by effectively extracting a vast collection of newly
paired main and sub-articles.
Keywords: Article pair modeling · Sub-article matching · Text representations ·
Sequence encoders · Explicit features · Wikipedia.
1
Introduction
Wikipedia has been the essential source of knowledge for people as well as computing
research and practice. This vast storage of encyclopedia articles for real-world entities
(or concepts) has brought along the automatic construction of knowledge bases [24,28]
that support knowledge-driven computer applications with vast structured knowledge.
Meanwhile, Wikipedia also triggers the emerging of countless AI-related technologies
for semantic web [44,29,52], natural language understanding [33,4,45], content retrieval
[1,22], and other aspects.
⋆This work is accomplished at Google, Mountain View.
arXiv:1807.11689v2  [cs.IR]  4 Aug 2018

2
Muhao Chen, Changping Meng, Gang Huang, and Carlo Zaniolo
Main-article
Sub-articles
Fig. 1: The main-article Bundeswehr (uniﬁed armed forces of Germany) and its sub-articles Ger-
man Army, German Navy, German Airforce, Joint Support Service of Germany and Joint Medical
Service of Germany.
Most existing automated Wikipedia techniques assume the one-to-one mapping be-
tween entities and Wikipedia articles [26,13,28]. This so-called article-as-concept as-
sumption [26] regulates each entity to be described by at most one article in a language-
speciﬁc version of Wikipedia. However, recent development of Wikipedia itself is now
breaking this assumption, as rich contents of an entity are likely to be separated in dif-
ferent articles and managed independently. For example, many details about the entity
“Harry Potter” are contained in other articles such as “Harry Potter Universe”, “Harry
Potter inﬂuences and analogues”, and “Harry Potter in translation”. Such separation
of entity contents categorizes Wikipedia articles into two groups: the main-article that
summarizes an entity, and the sub-article that comprehensively describes an aspect or
a subtopic of the main-article. Consider another example: for the main-article Bun-
deswehr (i.e. uniﬁed armed forces of Germany) in English Wikipedia, we can ﬁnd its
split-off sub-articles such as German Army, German Navy, German Airforce, Joint Sup-
port Service of Germany, and Joint Medical Service of Germany (as shown in Fig. 1).
This type of sub-article splitting is quite common on Wikipedia. Around 71% of the
most-viewed Wikipedia entities are split-off to an average of 7.5 sub-articles [26].
While sub-articles may enhance human readabilities, the violation of the article-as-
concept assumption is however problematic to a wide range of Wikipedia-based tech-
nologies and applications that critically rely on this assumption. For instance, Wikipedia-
based knowledge base construction [24,28,32] will assume the article title as an entity
name, which is then associated with the majority of relation facts for the entity from the
infobox of the corresponding article. Split-off of articles sow confusion in a knowledge
base extracted with these existing techniques. Clearly, explicit [15,17] and implicit se-
mantic representation techniques [37,46,8] based on Wikipedia are impaired due to that
a part of links and text features utilized by these approaches are now likely to be isolated
from the entities, which further affects NLP tasks based on these semantic representa-
tion techniques such as semantic relatedness analysis [40,27,33], relation extraction
[32,7], and named entity disambiguation [47]. Multilingual tasks such as knowledge
alignment [5,6,41,45] and cross-lingual Wikiﬁcation [42] become challenging for en-
tities with multiple articles, since these tasks assume that we have a one-to-one match
between articles in both languages. Semantic search of entities [29,52,3] is also affected
due to the diffused nature of the associations between entities and articles.

Neural Article Pair Modeling for Wikipedia Sub-article Matching
3
To support the above techniques and applications, it is vital to address the sub-
article matching problem, which aims to restore the complete view of each entity by
matching the sub-articles back to the main-article. However, it is non-trivial to develop a
model which recognizes the implicit relations that exist between main and sub-articles.
A recent work [26] has attempted to tackle this problem by characterizing the match
of main and sub articles using some explicit features. These features focus on mea-
suring the symbolic similarities of article and section titles, the structural similarity of
entity templates and page links, as well as cross-lingual co-occurrence. Although these
features are helpful to identify the sub-article relations among a small scale of article
pairs, they are still far from fully characterizing the sub-article relations in the large
body of Wikipedia. And more importantly, the semantic information contained in the
titles and text contents, which is critical to the characterization of semantic relations of
articles, has not been used for this task. However, effective utilization of the semantic
information would also require a large collection of labeled main and sub-article pairs
to generalize the modeling of such implicit features.
In this paper, we introduce a new approach for addressing the sub-article match-
ing problem. Our approach adopts neural document encoders to capture the semantic
features from the titles and text contents of a candidate article pair, for which several
encoding techniques are explored with. Besides the semantic features, the model also
utilizes a set of explicit features that measure the symbolic and structural aspects of an
article pair. Using a combination of these features, the model decides whether an arti-
cle is the sub-article of another. To generalize the problem, massive crowdsourcing and
strategic rules are applied to create a large dataset that contains around 196k Wikipedia
article pairs, where around 10% are positive matches of main and sub-articles, and
the rest comprehensively cover different patterns of negative matches. Held-out esti-
mation proves effectiveness of our approach by signiﬁcantly outperforming previous
baselines, and reaching near-perfect precision and recall for detecting positive main
and sub-article matches from all candidates. To show the practicability of our approach,
we also employ our model to extract main and sub-article matches in the entire En-
glish Wikipedia using a 3,000-machine MapReduce [11]. This process has produced a
large collection of new high-quality main and sub-article matches, and are now being
migrated into a large-scale production knowledge base.
The rest of the paper is organized as follows. We ﬁrst discuss the related work, then
introduce our approach in the section that follows. After that, we present the experi-
mental results, and conclude the paper in the last section.
2
Related Work
A recent work [26] has launched the ﬁrst attempt to address the Wikipedia sub-article
matching problem, in which the authors have deﬁned the problem into the binary classi-
ﬁcation of candidate article pairs. Each article pair is characterized based on a group of
explicit features that lies in three categories: (1) symbolic similarity: this includes token
overlapping of the titles, maximum token overlapping among the section titles of the
two articles, and term frequencies of the main-article titles in the candidate sub-article
contents; (2) structural similarity: this includes structure similarity of article templates,

4
Muhao Chen, Changping Meng, Gang Huang, and Carlo Zaniolo
link-based centrality measures and the Milne-Witten Index [31]; (3) cross-lingual co-
occurrence: these features consider the proportion of languages where the given arti-
cle pairs have been identiﬁed as main and sub-articles, and the relative multilingual
“globalness” measure of the candidate main-article. Although some statistical classi-
ﬁcation models learnt on these explicit features have offered satisfactory accuracy of
binary classiﬁcation on a small dataset of 3k article pairs that cover a subset of the
most-viewed Wikipedia articles, such simple characterization is no-doubt far from gen-
eralizing the problem. When the dataset scales up to the range of the entire Wikipedia,
it is very easy to ﬁnd numerous counterfactual cases for these features. Moreover, the
cross-lingual co-occurrence-based features are not generally usable due to the incom-
pleteness of inter-lingual links that match the cross-lingual counterparts of Wikipedia
articles. Some recent works have even pointed out that such cross-lingual alignment
information only covers less than 15% of the articles [5,24,43]. More importantly, we
argue that the latent semantic information of the articles should be captured, so as to
provide more generalized and comprehensive characterization of the relation for each
article pair.
Sentence or article matching tasks such as textual entailment recognition [39,50,18]
and paraphrase identiﬁcation [49,50] require the model to identify content-based dis-
course relations of sentences or paragraphs [23], which reﬂect logical orders and se-
mantic consistency. Many recent efforts adopt different forms of deep neural document
encoders to tackle these tasks, where several encoding techniques have been widely
employed, including convolutional neural networks [18,49], recurrent neural networks
[39], and attentive techniques [50,36,20]. Detection of the sub-article relations requires
the model to capture a high-level understanding of both contents and text structuring of
articles. Unlike the previously mentioned discourse relations, the sub-article relations
can be reﬂected from different components of Wikipedia articles including titles, text
contents and link structures. To tackle new and challenging task of sub-article match-
ing, we incorporate neural document encoders with explicit features in our model, so as
to capture the sub-article relation based on both symbolic and semantic aspects of the
Wikipedia article pairs. Meanwhile, we also take efforts to prepare a large collection of
article pairs that seek to well generalize the problem.
3
Modeling
In this section, we introduce the proposed model for the Wikipedia sub-article matching
task. We begin with the denotations and problem deﬁnition.
3.1
Preliminaries
Denotations. We use W to denote the set of Wikipedia articles, in which we model
an article Ai ∈W as a triple Ai = (ti, ci, si). ti is the title, ci the text contents,
and si the miscellaneous structural information such as templates, sections and links.
ti = {wt1, wt2, ..., wtl} and ci = {wc1, wc2, ..., wcm} thereof are both sequences of
words. In practice, we use the ﬁrst paragraph of Ai to represent ci since it is the sum-
mary of the article contents. For each word wi, we use bold-faced wi to denote its

Neural Article Pair Modeling for Wikipedia Sub-article Matching
5
embedding representation. We use F(Ai, Aj) to denote a sequence of explicit features
that provide some symbolic and structural measures for titles, text contents and link
structures, which we are going to specify in Section 3.3. We assume that all articles
are written in the same language, as it is normally the case of main-articles and their
sub-articles. In this paper, we only consider English articles w.l.o.g.
Problem deﬁnition. Sub-article matching is deﬁned as a binary classiﬁcation problem
on a set of candidate article pairs P ⊆W × W. Given a pair of articles p = (Ai, Aj) ∈
P, a model should decide whether Aj is the sub-article of Ai. The problem deﬁnition
complies with the previous work that ﬁrst introduces the problem [26], and is related
to other sentence matching problems for discourse relations such as text entailment
recognition and paraphrase identiﬁcation [49,39,35].
The sub-article relation is qualiﬁed based on two criteria, i.e. Aj is a sub-article of
Ai if (1) Aj describes an aspect or a subtopic of Ai, and (2) cj can be inserted as a
section of Ai without breaking the topic summarized by ti. It is noteworthy that the
sub-article relation is anti-symmetric, i.e. if Aj is a sub-article of Ai then Ai is not a
sub-article of Aj. We follow these two criteria in the crowdsourcing process for dataset
creation, as we are going to explain in Section 4.1. To address the sub-article matching
problem, our model learns on a combination of two aspects of the Wikipedia articles.
Neural document encoders extract the implicit semantic features from text, while a
series of explicit features are incorporated to characterize the symbolic or structural
aspects. In the following, we introduce each component of our model in detail.
3.2
Document Encoders
A neural document encoder E(X) encodes a sequence of words X into a latent vector
representation of the sequence. We investigate three widely-used techniques for docu-
ment encoding [18,49,39,50,36], which lead to three types of encoders for both titles
and text contents of Wikipedia articles, i.e. convolutional encoders (CNN), gated recur-
rent unit encoders (GRU), and attentive encoders.
Convolutional Encoders A convolutional encoder employs the 1-dimensional weight-
sharing convolution layer to encode an input sequence. Given the input sequence X =
{x1, x2, ..., xl}, a convolution layer applies a kernel Mc ∈Rh×k to generate a latent
representation h(1)
i
from a window of the input vector sequence xi:i+h−1 by
h(1)
i
= tanh(Mcxi:i+h−1 + bc)
for which h is the kernel size and bc is a bias vector. The convolution layer ap-
plies the kernel to all consecutive windows to produce a sequence of latent vectors
H(1) = {h(1)
1 , h(1)
2 , ..., h(1)
l−h+1}, where each latent vector leverages the signiﬁcant
local semantic features from each h-gram of the input sequence. Like many other
works [21,18,38], we apply n-max-pooling to extract robust features from each n-gram
of the convolution outputs by h(2)
i
= max(h(1)
i:n+i−1).

6
Muhao Chen, Changping Meng, Gang Huang, and Carlo Zaniolo
Gated Recurrent Unit Encoder The gated recurrent unit (GRU) is an alternative of
the long-short-term memory network (LSTM) that has been popular for sentence (se-
quence) encoders in recent works [19,12]. Each unit consists of two types of gates to
track the state of sequences without using separated memory cells, i.e. the reset gate
ri and the update gate zi. Given the vector representation xi of an incoming item xi,
GRU updates the current state h(3)
i
of the sequence as a linear interpolation between
the previous state h(3)
i−1 and the candidate state ˜h(3)
i
of new item xi, which is calculated
as below.
h(3)
i
= zi ⊙˜h(3)
i
+ (1 −zi) ⊙h(3)
i−1
The update gate zi that balances between the information of the previous sequence
and the new item is updated as below, where Mz and Nz are two weight matrices, bz
is a bias vector, and σ is the sigmoid function.
zi = σ

Mzxi + Nzh(3)
i−1 + bz

The candidate state ˜h(3)
i
is calculated similarly to those in a traditional recurrent
unit as below, where Ms and Ns are two weight matrices, and bs is a bias vector.
˜h(3)
i
= tanh

Msxi + ri ⊙(Nsh(3)
i−1) + bs

The reset gate ri thereof controls how much information of the past sequence con-
tributes to the candidate state
ri = σ

Mrxi + Nrh(3)
i−1 + br

The above deﬁnes a GRU layer which outputs a sequence of hidden state vectors
given the input sequence X. Unlike CNN that focuses on leveraging local semantic
features, GRU focuses on capturing the sequence information of the language. Note
that LSTM generally performs comparably to GRU in sequence encoding tasks, but is
more complex and require more computational resources for training [9].
Attentive Encoder An attentive encoder imports the self-attention mechanism to the
recurrent neural sequence encoder, which seeks to capture the overall meaning of the
input sequence unevenly from each encoded sequence item. The self-attention is im-
ported to GRU as below.
ui = tanh

Mah(3)
i
+ ba

;
ai =
exp
 u⊤
i uX

P
xi∈X exp
 u⊤
i uX
;
h(4)
i
= |X|aiui
ui is the intermediary latent representation of GRU output h(3)
i , uX = tanh(Mah(3)
X +
ba) is the intermediary latent representation of the averaged GRU output h(3)
X that can
be seen as a high-level representation of the entire input sequence. By measuring the
similarity of each ui with uX, the normalized attention weight ai for h(3)
i
is produced

Neural Article Pair Modeling for Wikipedia Sub-article Matching
7
through a softmax function. Note that a coefﬁcient |X| (the length of the input se-
quence) is applied along with ai to ui to obtain the weighted representation h(4)
i , so as
to keep h(4)
i
from losing the original scale of h(3)
i .
Document Embeddings We adopt each one of the three encoding techniques, i.e.
the convolution layer with pooling, the GRU, and the attentive GRU, to form three
types of document encoders respectively. Each encoder consists of one or a stack of
the corresponding layers depending on the type of the input document, and encodes the
document into a embedding vector. The document embedding is obtained by applying
an afﬁne layer to the average of the output H from the last pooling, GRU, or attentive
GRU layer, i.e. E(X) = Md

1
|H|
P|H|
i=1 hi

+ bd.
3.3
Explicit Features
In addition to the implicit semantic features provided by document encoders, we deﬁne
a set of explicit features F(Ai, Aj) = {rtto, rst, rindeg, rmt, fT F , IMW , routdeg, dte, rdt}.
A portion of the explicit features are carried forward from [26] to provide some token-
level and structural measures of an article pair (Ai, Aj), which are listed as below.
– rtto: token overlap ratio of titles, i.e. the number of overlapped words between ti
and tj divided by |ti|.
– rst: the maximum of the token overlap ratios among the section titles of Ai and
those of Aj.
– rindeg: the in-degree ratio, which is the number of incoming links in Ai divided by
that of Aj. rindeg measures the relative centrality of Ai with regard to Aj.
– rmt: the maximum of the token overlap ratios between any anchor title of the main-
article template 1 of Ai and tj, or zero if the main-article template does not apply
to Ai.
– fT F : normalized term frequency of ti in cj.
– dMW : Milne-Witten Index [31] of Ai and Aj, which measures the similarity of
incoming links of these two articles via the Normalized Google Distance [10].
In addition to the above features deﬁned by [26], we also include the following
features.
– routdeg: the out-degree ratio, which measures the relative centrality of Ai and Aj
similar to rindeg.
– dte: the average embedding distance of tokens in titles ti and tj.
– rdt: token overlap ratio of ci and cj, which is used in [25] to measure the document
relatedness. In practice the calculation of rdt is based on the ﬁrst paragraphs.
We normalize the distance and frequency-based features (i.e. fT F and dte. dMW
is already normalized by its deﬁnition.) using feature scaling 2. Note that, we do not
1 https://en.wikipedia.org/wiki/Template:Main
2 https://en.wikipedia.org/wiki/Feature_scaling

8
Muhao Chen, Changping Meng, Gang Huang, and Carlo Zaniolo
MLP
MLP
Text Content ci
Text Content cj
Title tj
Title ti
Article Ai
Article Aj
F(Ai,Aj)
MLP
(s+,s-)
Article pair
Document
Encoders
Embeddings
MLPs and 
Explicit 
Features
MLP
Outputs
Fig. 2: Learning architecture of the model.
preserve the two cross-lingual features in [26]. This is because, in general, these two
cross-lingual features are not applicable when the candidate space scales up to the range
of the entire Wikipedia, since the inter-lingual links that match articles across different
languages are far from complete [5,24].
3.4
Training
Learning objective. The overall learning architecture of our model is shown in Fig. 2.
The model characterizes each given article pair p = (Ai, Aj) ∈P in two stages.
1. Four document encoders (of the same type) are used to encode the titles and text
contents of Ai and Aj respectively, which are denoted as E(1)
t
(ti), E(2)
t
(tj), E(1)
c (ci)
and E(2)
c (cj). Two logistic regressors realized by sigmoid multi-layer perceptrons
(MLP) [2] are applied on E(1)
t
(ti) ⊕E(2)
t
(tj) and E(1)
c (ci) ⊕E(2)
c (cj) to produce
two conﬁdence scores st and sc for supporting Aj to be the sub-article of Ai.
2. The two semantic-based conﬁdence scores are then concatenated with the explicit
features ({st, sc} ⊕F(Ai, Aj)), to which another linear MLP is applied to obtain
the two conﬁdence scores ˆs+
p and ˆs−
p for the boolean labels of positive prediction
l+ and negative prediction l−respectively. Finally, ˆs+
p and ˆs−
p are normalized by
binary softmax functions s+
p =
exp(ˆs+
p )
exp(ˆs+
p )+exp(ˆs−
p ) and s−
p =
exp(ˆs−
p )
exp(ˆs+
p )+exp(ˆs−
p ).
The learning objective is to minimize the following binary cross-entropy loss.
L = −1
|P|
X
p∈P
 l+ log s+
p + l−log s−
p

Annotated word embeddings. We pre-train the Skipgram [30] word embeddings on
the English Wikipedia dump to support the input of the article titles and text contents

Neural Article Pair Modeling for Wikipedia Sub-article Matching
9
to the model, as well as the calculation of the feature dte. We parse all the inline hy-
perlinks of Wikipedia dump to the corresponding article titles, and tokenize the article
titles in the plain text corpora via Trie-based maximum token matching. This tokeniza-
tion process aims at including Wikipedia titles in the vocabulary of word embeddings.
Although this does not ensure all the titles to be involved, as some of them occur too
rarely in the corpora to meet the minimum frequency requirement of the word embed-
ding model. This tokenization process is also adopted during the calculation of dte.
After pre-training, we ﬁx the word embeddings to convert each document to a sequence
of vectors to be fed into the document encoder.
4
Experiments
In this section, we present the experimental evaluation of the proposed model. We
ﬁrst create a dataset that contains a large collection of candidate article pairs for the
sub-article matching problem. Then we compare variants of the proposed model and
previous approaches based on held-out estimation on the dataset. Lastly, to show the
practicability and generality of our approach, we train the model on the full dataset,
and perform predictions using MapReduce on over 108 million candidate article pairs
extracted from the entire English Wikipedia.
4.1
Data Preparation
We have prepared a new dataset, denoted WAP196k3, in two stages. We start with
producing positive cases via crowdsourcing. In detail, we ﬁrst select a set of articles,
where each article title concatenates two Wikipedia entity names directly or with a
proposition, e.g. German Army and Fictional Universe of Harry Potter. We hypothe-
size that such articles are more likely to be a sub-article of another Wikipedia article.
Note that this set of articles exclude the pages that belong to a meta-article category
such as Lists 4 and Disambiguation 5, which usually do not have text contents. Then we
sample from this set of articles for annotation in the internal crowdsourcing platform of
Google. For each sampled article, we follow the criteria in Section 3.1 to instruct the
annotators to decide whether it is a sub-article, and to provide the URL to the corre-
sponding main-article if so. Each crowdsourced article has been reviewed by three an-
notators, and is adopted for the later population process of the dataset if total agreement
is reached. Within three months, we have obtained 17,349 positive matches of main and
sub-article pairs for 5,012 main-articles, and around 4k other negative identiﬁcations of
sub-articles.
Based on the results of crowdsourcing, we then follow several strategies to cre-
ate negative cases: (1) For each positive match (Ai, Aj), we insert the inverted pair
3 https://github.com/muhaochen/subarticle
4 https://en.wikipedia.org/wiki/Category:Lists
5 https://en.wikipedia.org/wiki/Wikipedia:Disambiguation

10
Muhao Chen, Changping Meng, Gang Huang, and Carlo Zaniolo
(Aj, Ai) as a negative case based on the anti-symmetry of sub-article relations, there-
fore producing 17k negative cases; (2) For each identiﬁed main-article, if multiple pos-
itively matched sub-articles coexist, such sub-articles are paired into negative cases as
they are considered as “same-level articles”. This step contributes around 27k negative
cases; (3) We substitute Ai with other articles that are pointed by an inline hyperlink
in cj, or substitute Aj with samples from the 4k negative identiﬁcations of sub-articles
in stage 1. We select a portion from this large set of negative cases to ensure that each
identiﬁed main-article has been paired with at least 15 negative matches of sub-articles.
This step contributes the majority of negative cases. In the dataset, we also discover that
around 20k negative cases are measured highly (> 0.6) by at least one of the symbolic
similarity measures rtto, rst or fT F .
The three strategies for negative case creation seek to populate the WAP196k dataset
with a large amount of negative matches of articles that represent different counterfac-
tual cases. The statistics of WAP196k are summarized in Table 1, which indicate it to be
much more large-scale than the dataset used by previous approaches [26] that contains
around 3k article pairs 6. The creation of more negative cases than positive cases is in
accord with the general circumstances of the Wikipedia where the sub-article relations
hold for a small portion of the article pairs. Hence, the effectiveness of the model should
be accordingly evaluated by how precisely and completely it can recognize the positive
matches from all candidate pairs from the dataset. As we have stated in Section 3.1, we
encode the ﬁrst paragraph of each article to represent its text contents.
4.2
Evaluation
We use a held-out estimation method to evaluate our approach on WAP196k. Besides
three proposed model variants that combine a specﬁc type of neural document encoders
with the explicit features, we compare several statistical classiﬁcation algorithms that
[26] have trained on the explicit features. We also compare with three neural docu-
ment pair encoders without explicit features that represent the other line of related work
[49,18,39,36].
Model conﬁgurations. We use AdaGrad to optimize the learning objective function
and set the learning rate as 0.01, batchsize as 128. For document encoders, we use two
convolution/GRU/attentive GRU layers for titles, and two layers for the text contents.
When inputting articles to the document encoders, we remove stop words in the text
contents, zero-pad short ones and truncate overlength ones to the sequence length of
100. We also zero-pad short titles to the sequence length of 14, which is the maximum
length of the original titles. The dimensionality of document embeddings is selected
among {100, 150, 200, 300}, for which we ﬁx 100 for titles and 200 for text contents.
For convolutional encoders, we select the kernel size and the pool size from 2 to 4, with
the kernel size of 3 and 2-max-pooling adopted. For pre-trained word embeddings, we
use context size of 20, minimum word frequency of 7 and negative sampling size of 5 to
obtain 120-dimensional embeddings from the tokenized Wikipedia corpora mentioned
6 Note that the text contents or URIs of participating articles that are necessary to the support of
document encoding are also not provided by the 3k-article-pair dataset, thus our experiment
uses WAP196k only.

Neural Article Pair Modeling for Wikipedia Sub-article Matching
11
Table 1: Statistics of the dataset.
#Article pairs #Positive cases #Negative cases #Main-articles #Distinct articles
195,960
17,349
178,611
5,012
32,487
Table 2: Cross-validation results on WAP196k. We report precision, recall and F1-scores on three
groups of models: (1) statistical classiﬁcation algorithms based on explicit features, including
logistic regression, Naive Bayes Classiﬁer (NBC), Linear SVM, Adaboost (SAMME.R algorithm
[51]), Decision Tree (DT), Random Forest (RF) and k-nearest-neighbor classiﬁer (kNN); (2)
three types of document pair encoders without explicit features; (3) the proposed model in this
paper that combines explicit features with convolutional document pair encoders (CNN+F), GRU
encoders (GRU+F) or attentive encoders (AGRU+F).
Model
Explicit Features
Logistic NBC Adaboost LinearSVM
DT
RF
kNN
Precision (%)
82.64
61.78
87.14
82.79
87.17
89.22
65.80
Recall (%)
88.41
87.75
85.40
89.56
84.53
84.49
78.66
F1-score
0.854
0.680
0.863
0.860
0.858
0.868
0.717
Model
Semantic Features
Model
Explicit+Semantic
CNN
GRU
AGRU
CNN+F GRU+F AGRU+F
Precision (%)
95.83
95.76
93.98
Precision (%)
99.13
98.60
97.58
Recall (%)
90.46
87.24
86.47
Recall (%)
98.06
88.47
86.80
F1-score
0.931
0.913
0.901
F1-score
0.986
0.926
0.919
in Section 3.4. Following the convention [48,2], we use one hidden layer in MLPs where
the hidden-layer size is the average of the input and output layer sizes.
Evaluation protocal. Following [26], we adopt 10-fold cross-validation in the evalua-
tion process. At each fold, all models are trained till converge. We aggregate precision,
recall and F1-score on the positive cases at each fold of testing, since the objective
of the task is to effectively identify the relatively rare article relation among a large
number of article pairs. All three metrics are preferred to be higher to indicate better
performance.
Results. Results are reported in Table 2. The explicit features alone are helpful to the
task, on which the result by the best baseline (Random Forest) is satisfactory. However,
the neural encoders for document pairs, even without the explicit features, outperform
Random Forest by 4.76% on precision, 1.98% on recall and 0.033 on F1-score. This in-
dicates that the implicit semantic features are critical for characterizing the matching of
main and sub-articles. Among the three types of document encoders, the convolutional
encoder is more competent than the rest two sequence encoders, which outperforms
Random Forest by 6.54% of precision, 8.97% of recall and 0.063 of F1-score. This
indicates that the convolutional and pooling layers that effectively capture the local se-
mantic features are key to the identiﬁcation of sub-article relations, while such relations
appear to be relatively less determined by the sequence information and overall docu-
ment meanings that are leveraged by the GRU and attention encoders. The results by
the proposed model which combines document pair encoders and explicit features are

12
Muhao Chen, Changping Meng, Gang Huang, and Carlo Zaniolo
Table 3: Ablation on feature categories for CNN+F.
Features
Precision Recall F1-score
All features
99.13
98.06
0.986
No titles
98.03
85.96
0.916
No text contents
98.55
95.78
0.972
No explicit
95.83
90.46
0.931
Explicit only
82.64
88.41
0.854
title text rtto
rst rindeg rmt
fTF IMW routdeg dte
rdt
0.00
0.03
0.06
0.09
0.12
0.15
0.18
Fig. 3: Relative importance (RI) of features analyzed by Garson’s algorithm. RI of each feature is
aggregated from all folds of cross-validation.
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1.0
Proportion of the Dataset for Evaluation
0.84
0.88
0.92
0.96
1.00
Precision
Recall
Fig. 4: Sensitivity of CNN+F on the proportion of dataset for evaluation.
very promising. Among these, the model variant with convolutional encoders (CNN+F)
obtained close to perfect precision and recall.
Meanwhile, we perform ablation on different categories of features and each spe-
ciﬁc feature, so as to understand their signiﬁcance to the task. Table 3 presents the
ablation of feature categories for the CNN-based model. We have already shown that
completely removing the implicit semantic features would noticeably impair the preci-
sion. Removing the explicit features moderately hinders both precision and recall. As
for the two categories of semantic features, we ﬁnd that removing either of them would
noticeably impair the model performance in terms of recall, though the removal of ti-
tle embeddings has much more impact than that of text content embeddings. Next, we
perform Garson’s algorithm [34,14] on the weights of the last linear MLP of CNN+F
to analyze the relative importance (RI) of each speciﬁc feature, which are reported as
Fig. 3. It is noteworthy that, besides the text features, the explicit features rtto, rst and
dte that are related to article or section titles also show high RI. This is also close to the
practice of human cognition, as we humans are more likely to be able to determine the
semantic relation of a given pair of articles based on the semantic relation of the titles
and section titles than based on other aspects of the explicit features.

Neural Article Pair Modeling for Wikipedia Sub-article Matching
13
Table 4: Examples of recognized main and sub-article matches. The italicize sub-article titles are
without overlapping tokens with the main article titles.
Main Article
Sub-articles
Outline of government Bicameralism, Capitalism, Dictatorship, Confederation, Oligarchy, Sovereign state
Computer
Computer for operations with functions, Glossary of computer hardware terms, Computer
user, Timeline of numerical analysis after 1945, Stored-program computer, Ternary computer
Hebrew alphabet
Romanization of Hebrew
Recycling by material
Drug recycling, Copper, Aluminium, Drug recycling
Chinese Americans
History of Chinese Americans in Dallas-Fort Worth, History of Chinese Americans in San
Francisco, Anti-Chinese Violence in Washington
Genetics
Modiﬁcation (Genetics), Theoretical and Applied Genetics, Encyclopedia of Genetics
San Marino
Economy of San Marino, San Marino national football team, Democratic Convention (San
Marino), Banca di San Marino, Healthcare in San Marino, Flag of San Marino, Geography of
San Marino
Service Riﬂe
United States Marine Corps Squad Advanced Marksman Riﬂe, United States Army Squad
Designated Marksman Riﬂe
Transgender rights
LGBT rights in Panama, LGBT rights in the United Arab Emirates, Transgender rights in
Argentina, History of transgender people in the United States, Transgender disenfranchisement
in the United States
Spectrin
Spectrin Repeat
Geography
Political Geography, Urban geography, Visual geography, Colorado Model Content Standards
Nuclear Explosion
Outline of Nuclear Technology, International Day Against Nuclear Tests
Gay
LGBT Rights by Country or Territory, Philadelphia Gay News, Troll (gay slang), Gay literature
FIBA Hall of Fame
˘Sar¯unas Mar˘ciulionis
Arve Isdal
March of the Norse, Between Two Worlds
Independent politician Balasore (Odisha Vidhan Sabha Constituency)
Mathematics
Hierarchy (mathematics), Principle part, Mathematics and Mechanics of Complex Systems,
Nemytskii operator, Spinors in three dimensions, Continuous functional calculus, Quadrature,
Table of mathematical symbols by introduction date, Hasse invariant of an algebra, Concrete
Mathematics
Homosexuality
LGBT rights in Luxembourg, List of Christian denominational positions on homosexuality
Bishop
Roman Catholic Diocese of Purnea, Roman Catholic Diocese of Luoyang
Lie algebra
Radical of a Lie algebra, Restricted Lie algebra, Adjoint representation, Lie Group
Furthermore, to examine how much our approach may rely on the large dataset to
obtain a generic solution, we conduct a sensitivity analysis of CNN+F on the propor-
tion of the dataset used for cross-validation, which is reported in Fig. 4. We discover
that, training the model on smaller portions of the dataset would decrease the recall of
predictions by the model, though the impact on the precision is very limited. However,
even using 20% of the data, CNN+F still obtains better precision and recall than the
best baseline Random Forest that is trained solely on explicit features in the setting of
full dataset.
To summarize, the held-out estimation on the WAP196k dataset shows that the pro-
posed model is very promising in addressing the sub-article matching task. Consider-
ing the large size and heterogeneity of the dataset, we believe the best model variant
CNN+F is close to a well-generalized solution to this problem.
4.3
Mining Sub-articles from the Entire English Wikipedia
For the next step, we move on to putting the proposed model into production by serv-
ing it to identify the main and sub-article matching on the entire body of the English
Wikipedia. The English Wikipedia contains over 5 million articles, which lead to over
24 trillion ordered article pairs. Hence, instead of serving our model on that astronom-
ical candidate space, we simplify the task by predicting only for each article pair that

14
Muhao Chen, Changping Meng, Gang Huang, and Carlo Zaniolo
forms an inline hyperlink across Wikipedia pages, except for those that appear already
in the main-article templates. This reduces our candidate space to about 108 million
article pairs.
We train the best model variant CNN+F from the previous experiment for serving.
We carry forward the model conﬁgurations from the previous experiment. The model
is trained on the entire WAP196k dataset till converge. The extraction of the candidate
article pairs as well as the serving of the model is conducted via MapReduce on 3,000
machines, which lasts around 9 hours in total. We select the 200,000 positive predic-
tions with highest conﬁdence scores s+
p , based on which human evaluation on three
turns of 1,000 sampled results estimates a 85.7% of P@200k (precision at top 200,000
predictions). Examples of identiﬁed main and sub-article matches are listed in Table 4.
Based on the selected positive predictions, the number of sub-articles per main-article
is estimated as 4.9, which is lower than 7.5 that is estimated on the 1,000 most viewed
articles by [26]. There are also around 8% of sub-articles that are paired with more than
one main-articles. Based on the promising results from the large-scale model serving,
our team is currently working on populating the identiﬁed sub-article relations into the
backend knowledge base for our search engine.
5
Conclusion and Future Work
In this paper, we have proposed a neural article pair model to address the sub-article
matching problem in Wikipedia. The proposed model utilizes neural document en-
coders for titles and text contents to capture the latent semantic features from Wikipedia
articles, for which three types of document encoders have been considered, includ-
ing the convolutional, GRU and attentive encoders. A set of explicit features are in-
corporated into the learning framework that comprehensively measured the symbolic
and structural similarity of article pairs. We have created a large article pair dataset
WAP196k from English Wikipedia which seeks to generalize the problem with various
patterns of training cases. The experimental evaluation on WAP196k based on cross-
validation shows that the document encoders alone are able to outperform the previous
models using only explicit features, while the combined model based on both implicit
and explicit features is able to achieve near-perfect precision and recall. Large-scale
serving conducted on the entire English Wikipedia is able to produce a large amount of
new main and sub-article matches with promising quality. For future work, it is natural
to apply the proposed model to other language-versions of Wikipedia for production. It
is also meaningful to develop an approach to differentiate the sub-articles that describe
reﬁned entities and those that describe abstract sub-concepts. Meanwhile, we are in-
terested in extending our approach to populate the incomplete cross-lingual alignment
of Wikipedia articles using bilingual word embeddings such as Bilbowa [16], and a
different set of explicit features.
References
1. Ackerman, M.S., Dachtera, J., et al.: Sharing knowledge and expertise: the cscw view of
knowledge management. CSCW (2013)

Neural Article Pair Modeling for Wikipedia Sub-article Matching
15
2. Bengio, Y.: Learning deep architectures for ai. Foundations and trends in Machine Learning
2(1) (2009)
3. Cai, Z., Zhao, K., et al.: Wikiﬁcation via link co-occurrence. In: CIKM (2013)
4. Chen, D., Fisch, A., et al.: Reading Wikipedia to answer open-domain questions. In: ACL
(2017)
5. Chen, M., Tian, Y., et al.: Multilingual knowledge graph embeddings for cross-lingual knowl-
edge alignment. In: IJCAI (2017)
6. Chen, M., Tian, Y., et al.: Co-training embeddings of knowledge graphs and entity descrip-
tions for cross-lingual entity alignment. In: IJCAI (2018)
7. Chen, M., Tian, Y., et al.: On2vec: Embedding-based relation prediction for ontology popu-
lation. In: SDM (2018)
8. Chen, M., Zaniolo, C.: Learning multi-faceted knowledge graph embeddings for natural lan-
guage processing. In: IJCAI (2017)
9. Chung, J., Gulcehre, C., et al.: Empirical evaluation of gated recurrent neural networks on
sequence modeling. arXiv (2014)
10. Cilibrasi, R.L., Vitanyi, P.M.: The google similarity distance. TKDE 19(3) (2007)
11. Dean, J., Ghemawat, S.: Mapreduce: simpliﬁed data processing on large clusters. Comm
ACM 51(1) (2008)
12. Dhingra, B., Liu, H., et al.: Gated-attention readers for text comprehension. In: ACL
13. Dojchinovski, M., Kliegr, T.: Entityclassiﬁer. eu: real-time classiﬁcation of entities in text
with wikipedia. In: ECML-PKDD (2013)
14. F´eraud, R., Cl´erot, F.: A methodology to explain neural network classiﬁcation. Neural Net-
works 15(2) (2002)
15. Gabrilovich, E., Markovitch, S., et al.: Computing semantic relatedness using wikipedia-
based explicit semantic analysis. In: IJCAI (2007)
16. Gouws, S., Bengio, Y., Corrado, G.: Bilbowa: Fast bilingual distributed representations with-
out word alignments. In: ICML (2015)
17. Hecht, B., Carton, S.H., et al.: Explanatory semantic relatedness and explicit spatialization
for exploratory search. In: SIGIR (2012)
18. Hu, B., Lu, Z., et al.: Convolutional neural network architectures for matching natural lan-
guage sentences. In: NIPS. pp. 2042–2050 (2014)
19. Jozefowicz, R., Zaremba, W., et al.: An empirical exploration of recurrent network architec-
tures. In: ICML (2015)
20. Kadlec, R., Schmid, M., et al.: Text understanding with the attention sum reader network. In:
ACL. vol. 1 (2016)
21. Kim, Y.: Convolutional neural networks for sentence classiﬁcation. In: EMNLP (2014)
22. Kittur, A., Kraut, R.E.: Beyond wikipedia: coordination and conﬂict in online production
groups. In: CSCW (2010)
23. Lascarides, A., Asher, N.: Temporal interpretation, discourse relations and commonsense
entailment. Linguistics and philosophy 16(5) (1993)
24. Lehmann, J., Isele, R., Jakob, M., Jentzsch, A., et al.: Dbpedia–a large-scale, multilingual
knowledge base extracted from Wikipedia. Semantic Web 6(2) (2015)
25. Lin, C.Y., Hovy, E.: From single to multi-document summarization: A prototype system and
its evaluation. In: ACL (2002)
26. Lin, Y., Yu, B., et al.: Problematizing and addressing the article-as-concept assumption in
wikipedia. In: CSCW (2017)
27. Liu, X., Xia, T., et al.: Cross social media recommendation. In: ICWSM (2016)
28. Mahdisoltani, F., Biega, J., Suchanek, F., et al.: Yago3: A knowledge base from multilingual
Wikipedias. In: CIDR (2015)
29. Meij, E., Balog, K., Odijk, D.: Entity linking and retrieval for semantic search. In: WSDM
(2014)

16
Muhao Chen, Changping Meng, Gang Huang, and Carlo Zaniolo
30. Mikolov, T., Sutskever, I., et al.: Distributed representations of words and phrases and their
compositionality. In: NIPS (2013)
31. Milne, D., Witten, I.H.: Learning to link with wikipedia. In: CIKM (2008)
32. Mousavi, H., Atzori, M., et al.: Text-mining, structured queries, and knowledge management
on web document corpora. SIGMOD Record (2014)
33. Ni, Y., Xu, Q.K., et al.: Semantic documents relatedness using concept graph representation.
In: WSDM (2016)
34. Olden, J.D., Jackson, D.A.: Illuminating the black box: a randomization approach for under-
standing variable contributions in artiﬁcial neural networks. Ecological modelling 154(1-2)
(2002)
35. Poria, S., Cambria, E., et al.: Deep convolutional neural network textual features and multiple
kernel learning for utterance-level multimodal sentiment analysis. In: EMNLP (2015)
36. Rockt¨aschel, T., Grefenstette, E., et al.: Reasoning about entailment with neural attention
(2016)
37. Schuhmacher, M., Ponzetto, S.P.: Knowledge-based graph document modeling. In: WSDM
(2014)
38. Severyn, A., Moschitti, A.: Twitter sentiment analysis with deep convolutional neural net-
works. In: SIGIR (2015)
39. Sha, L., Chang, B., et al.: Reading and thinking: Re-read lstm unit for textual entailment
recognition. In: COLING (2016)
40. Strube, M., Ponzetto, S.P.: Wikirelate! computing semantic relatedness using wikipedia. In:
AAAI (2006)
41. Suchanek, F.M., Abiteboul, S., et al.: Paris: Probabilistic alignment of relations, instances,
and schema. PVLDB (2011)
42. Tsai, C.T., Roth, D.: Cross-lingual wikiﬁcation using multilingual embeddings. In: NAACL
(2016)
43. Vrandeˇci´c, D.: Wikidata: A new platform for collaborative data collection. In: WWW (2012)
44. Vrandeˇci´c, D., Kr¨otzsch, M.: Wikidata: a free collaborative knowledge base. Comm ACM
57(10) (2014)
45. Wang, Z., Li, J., et al.: Cross-lingual knowledge linking across wiki knowledge bases. In:
WWW (2012)
46. Xie, R., Liu, Z., et al.: Representation learning of knowledge graphs with entity descriptions.
In: AAAI (2016)
47. Yamada, I., Shindo, H., et al.: Joint learning of the embedding of words and entities for
named entity disambiguation. CoNLL (2016)
48. Yilmaz, I., Kaynar, O.: Multiple regression, ann (rbf, mlp) and anﬁs models for prediction of
swell potential of clayey soils. Expert systems with applications 38(5) (2011)
49. Yin, W., Sch¨utze, H.: Convolutional neural network for paraphrase identiﬁcation. In: NAACL
(2015)
50. Yin, W., Sch¨utze, H., et al.: Abcnn: Attention-based convolutional neural network for mod-
eling sentence pairs. TACL 4(1) (2016)
51. Zhu, J., Zou, H., Rosset, S., Hastie, T.: Multi-class adaboost. Statistics and its Interface 2(3)
(2009)
52. Zou, L., Huang, R., et al.: Natural language question answering over rdf: a graph data driven
approach. In: SIGMOD (2014)

