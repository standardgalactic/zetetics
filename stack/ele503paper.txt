APPL ICATIONS OF  CONTRO L   «
APRIL 2018 « IEEE CONTROL SYSTEMS MAGAZINE 15
1066-033X/18©2018IEEE
Balancing and Transferring Control of a Ball Segway  
Using a Double-Loop Approach
M
obile robots typically have more than three contacts 
with the ground, including at least two independent 
driving wheels, to be statically stable with a wide 
base for a large support polygon. These robots can rotate at 
any point but cannot make an instantaneous movement in 
every direction. They cannot move freely even in an open 
space when they are crowded with people in a common hu-
man-coexisting environment. Moreover, these robots have 
other limitations, such as minimum passage width and 
minimum turning radius.
To overcome these types of motion limitations, numer-
ous studies have been conducted on developing omni-
directional mobile robots. One development is a ballbot, 
which is intended to be dynamically stable and designed 
to balance on a single spherical wheel (ball) while mov-
ing in every direction. (See “Summary.”) Generally, a ball-
bot has a body that balances on top of a ball and forms 
an under-actuated system; thus, the robot has more de-
grees of freedom (DOF) than independent control inputs. 
Actuators directly drive the ball, and the body has no 
direct control. The body is maintained upright at approxi-
mately its unstable equilibrium point by controlling the 
ball, which is similar to controlling an inverted pendu-
lum. These characteristics of the ballbot result in several 
challenges in the balancing and transferring control. See 
“Balancing and Transferring Control Problems for a Ball 
Segway” for more details on balancing and transferring 
control problems.
The first ballbot, developed in 2006, was a mobile ro-
bot balancing on a ball [1]. This ballbot was designed 
with human-like dimensions that enabled interaction 
with a person at eye level, so the ballbot could effec-
tively interact with humans and transfer and rotate in a 
populated environment [2]. This study used an inverse 
mouse-ball drive mechanism for the ball and presented 
a linear control law to ensure stabilization and basic mo-
tion control.
Ball IP [3], which was introduced in 2009, is another ver-
sion of a ballbot that balances on a spherical wheel. The 
robot uses a drive mechanism that comprises three omnidi-
rectional wheels with stepping motors, which are in contact 
with a spherical wheel that enables control affordance and 
friction reduction. A typical proportional-derivative (PD) 
feedback controller is used to control balancing and trans-
ferring actions. The robot can transport loads in any direc-
tion, but it can only support small external loads. Rezero 
[4], a type of ballbot, was developed in 2010 and used three 
omnidirectional wheels to drive a spherical wheel, thereby 
resulting in smooth mobility on the floor. Several other 
ballbots [5], [6] equipped with a three-omnidirectional-
wheel drive mechanism were also developed but were also 
limited in motion.
BB rider [7] is a ballbot consisting of four omnidirec-
tional wheels for driving a spherical tire. The robot has a 
simple wheelchair structure that enables it to transport a 
person. The kinematic model and force relationship of the 
omnidirectional wheels and the spherical tire required and 
generated by the motors were also formulated. Although 
the BB rider is a personal carrier ball robot, experimental 
results were not included in this study.
DINH BA PHAM, HYUNG KIM, JAEJUN KIM, and SOON-GEUL LEE
Digital Object Identifier 10.1109/MCS.2017.2786444
Date of publication: 16 March 2018
Summary
ball segway is developed with the question of whether 
a people-carrier robot could turn 360° or drive itself 
freely with a spherical wheel. The ball segway is similar to 
a ballbot, and it forms a spherical inverted pendulum with a 
car-like structure mounted on top that moves on a ball. The 
vehicle described in this article is the world’s first ballbot-
type people-carrying robot that is sufficiently large enough 
for a human to ride. By using the spherical wheel, it is very 
easy to implement parallel parking and also  advantageous 
to reduce the uneven wear of the wheel. Performance in 
cornering and turning is also significantly better than that 
of conventional wheels. An Intel® NUC PC is used as the 
main controller, and Windows Embedded 7 is used as the 
operating system. The control algorithm is realized with 
multithread programming in Visual Studio C++ to ensure 
the control interval of 15 ms. Numerical and experimen-
tal results show that the robot can maintain its balance, 
track the desired trajectory, and also simultaneously rotate 
around the vertical axis.
A

16 IEEE CONTROL SYSTEMS MAGAZINE » APRIL 2018
Together with the development of ballbot structures and 
types (as shown in Figure 1), control problems (which vary 
from classical control methods [6], [8], [9] to modern tech-
niques with single-loop [3], [10] and multiloop [1], [2], [11], 
[12] control systems) were discussed by many researchers. 
A linear-quadratic regulator (LQR) control law was found 
by using a linear state-space model to control balancing and 
station keeping [10]. A robust control based on the sliding-
mode technique [13] was presented to control balancing 
and transferring a ballbot with an inverse mouse-ball drive 
mechanism. Furthermore, a simulation research was re-
ported. Another robust control [14] based on linear matrix 
inequalities was used as an approach to manage parametric 
uncertainties, thereby providing robustness for balancing a 
ballbot. Moreover, intelligent controls, such as fuzzy logic 
control [15]–[18], were utilized to control balancing and 
transferring a ballbot. In [19], the author presented an intel-
ligent consensus-based cooperative formation control using 
a recurrent fuzzy wavelet cerebellar model articulation con-
troller for a team of uncertain multiple ballbots. However, 
experiments were not included in this study.
With regard to multiloop control schemes, a double-loop 
control system, including an LQR outer-loop controller and 
a proportional-integral (PI) inner-loop controller, was pre-
sented to control the self-balancing and transferring func-
tions of a ballbot [11]. An LQR with an integral controller 
Balancing and Transferring Control Problems for a Ball Segway
T  
he ball segway is a spatial, omnidirectional-wheeled, invert-
ed pendulum robot with a rigid body atop a single ball. One 
of the interesting but challenging features of the ball segway is 
its unstable, underactuated, and second-order, nonholonomic 
velocity constraints. These constraints restrict the family of 
trajectories that configurations can follow. The underactuated 
and unstable dynamics of the ball segway result in challeng-
ing planning and control tasks. Moreover, strong coupling is 
observed between the dynamics of the ball and the body. If the 
ball is moved, then the body falls. If the body is held upright by 
moving the ball, then the ball is not in its planned position on 
the floor. Therefore, dynamic motion for the ball segway is a 
challenging task in obtaining a goal position while balancing 
on the floor.
The principle used to balance the ball segway is consider-
ably similar to the principle used for balancing a stick. When 
the ball segway tilts, a balancing controller provides an action 
to move the ball in the direction of the tilt; thus, the robot stays 
upright. The robot also needs to accelerate by tilting in the 
moving direction to transfer in any direction on the floor. How-
ever, the robot cannot directly control its tilt body angles. Thus, 
the balance and movement of the ball segway are achieved 
by only maneuvering the ball on the floor. For example, in the 
case of carrying a person, the ball segway should maintain bal-
ance by tilting back and tilting into the ramp while ascending or 
descending to a steep slope.
Compared with previous ballbots [2]–[3], [12], [15], the ball 
segway has a car-like structure (as shown in Figure S1) and is 
the system with a heavy weight; the mass and moments of in-
ertia of the ball segway are changeable when ridden. A large 
amount of mass of the entire ball segway system causes more 
difficulty in the firm control of the ball segway movement from 
the initial position to the desired position while balancing. Driv-
ing motors can generate enough torque to overcome the static 
friction of the system and compensate large inertial force during 
stopping. However, uncertainties in the ball segway parameters, 
such as the moment of inertia, the mass center of the body, the 
friction factors between the body and the ball and between the 
ball and the floor, floor conditions, and external disturbances, 
affect the balance and movement of the ball segway.
The design of a ball segway aims to transport humans, who 
need to physically interact with the robot in the actual environ-
ment. Thus, the robot requires stringent balancing under any 
condition. The ball segway is naturally reactive because physi-
cal interactions are detected as disturbances to its balancing 
behavior. The ball segway is also equipped with a control mo-
ment gyroscope cluster to ensure balance when a person rides 
on it. All these characteristics of the ball segway show that bal-
ancing and transferring controls are a challenging task when 
developing the ball segway.
FIGURE S1  A ball segway balancing on the floor. It  is a ballbot-
type carrier robot that can accommodate a person to ride on a 
seat of a car-like structure mounted on a single ball.

APRIL 2018 « IEEE CONTROL SYSTEMS MAGAZINE 17
was applied to balance a new double-level,  ball-riding ro-
bot, which consists of upper and lower ball-riding subsys-
tems [12]. The upper ball-riding subsystem rode on top of 
the lower one. Simulations and experiments showed the 
balancing performance of the proposed controller.
As discussed in “Summary,” the significant contributions 
of this study are twofold; one is deriving a completely dy-
namic model of a ball segway by incorporating the kinemat-
ics of an inverse Atlas spherical motion platform, and the 
other is designing and testing the balance, robustness, and 
transfer controllers based on an improved double-loop con-
trol strategy. The improved double-loop strategy includes a 
PI-plus-feedforward inner-loop control and an LQR outer-
loop control that enable the ball segway to balance and trans-
fer to the desired position. A feedforward compensation is 
added for the stability of the ball segway even with heavy 
weight and bulk, unknown friction, parameter variations, 
and external disturbances.
(a)
(b)
(c)
(d)
(e)
(f)
FIGURE 1 Various types of ballbots. (a) The first ballbot with an inverse mouse-ball drive mechanism was developed in 2006 at Carnegie 
Mellon University, United States. (Used with permission from [1], Ralph Hollis, Carnegie Mellon University.) (b) A ballbot with a three-
omnidirectional-wheel drive mechanism was developed in 2009 at Tohoku Gakuin University, Japan. (Used with permission from [3], 
Massaki Kumagai, Tohoku Gakuin University.) (c) The simple wheelchair structure of the BB rider enables it to transport humans. (From 
[7].) (d) The National Chung Hsing University, Taiwan, developed a ballbot in 2012 with three omnidirectional wheels to drive a ball. 
(Used with permission from [10], Ching-Chih, National Chung Hsing University.) (e) The ballbot using LEGO NXT is a small robot of ap-
proximately 20 cm high, with only two wheels to drive a ball. It was developed at the University of Adelaide, Australia, in 2009. (Adapted 
from “Design and Build a ballbot,” by J. Fong, S. Uppill, 2009 Mechatronics honors project, University of Adelaide, used with permission 
from Ben Cazzolato, The University of Adelaide.) (f) Rezero, a type of ballbot, was developed at Autonomous Systems Lab, ETH Zurich, 
Switzerland in 2010. The robot is equipped with three omnidirectional wheels to drive a ball. (Adapted from [4].)

18 IEEE CONTROL SYSTEMS MAGAZINE » APRIL 2018
The results presented in this study are intended to help 
bridge the gap between the theory of linear controls and its 
application to underactuated mechanical systems, such as 
ball segways, with emphasis on using a double-loop control 
system with an optimal LQR control law. In the double-loop 
control system, additional control is considered the feedfor-
ward control to eliminate almost all uncertainties caused 
by undefined frictions, modeling, and system parameters. 
Thus, with a double-loop control structure, an inner-loop 
controller provides direct control input in balancing and 
transferring the ball segway. An outer-loop controller is 
exploited to withstand the effects of external disturbances. 
Moreover, the ball segway is a representative underactu-
ated system used for the experimental implementation.
The ball segway is programmed in Matlab and Visual 
Studio C++. The completely nonlinear dynamic model of 
the two-dimensional (2-D) ball segway is built using a 
Symbolic Math Toolbox in Matlab. The nonlinear model 
is linearized around an equilibrium point, and this linear 
model is used to synthesize the LQR and PI double-loop 
control algorithm. The responses of the ball segway sys-
tem are investigated through the simulation in Matlab and 
Simulink. Numerical simulations verify the validity and 
stability of the double-loop control system. In practice, 
the robot controller is programmed in Visual Studio C++ 
to utilize the advantages of the programming language, 
including fast data transfer and easy connection to hard-
ware devices, such as sensors, wireless joysticks, and driv-
ing motors. Finally, experimental results are presented to 
demonstrate the balancing and transferring behaviors of 
the controllers in the presence of external disturbances and 
undefined friction.
SYSTEM CONFIGURATION
Ball Segway Platform Design
The ball segway shown in Figure 2(a) [and Figure 18(d)] is an 
advertising ballbot platform for a tire company [20]. This study 
aims to design a ball segway that transports a person. The ball 
segway is composed of a drive mechanism and a body part 
with a cabin in which a person can ride. Figure 2(a) also shows 
a body frame made of aluminum and a plastic cover.
The ball segway is designed to be entirely self-con-
tained. Power is supplied by batteries, and computation is 
performed by a minicomputer. The driving motors with 
encoders that feed the motor shaft position are directly 
connected to the computer. The ball segway is equipped 
with an inertial measurement unit (IMU) for measuring 
angles and angular rates of the body.
Drive Mechanism Design
The drive mechanism of the ball segway, as presented in 
Figure 2(b), uses three single-row omnidirectional wheels 
with an inverse Atlas spherical motion platform. Each sin-
gle-row omnidirectional wheel is driven by a motor through 
a reduction gear [21]. The motors are symmetrically mount-
ed at intervals of 120°, as shown in Figure 2(b). The shaft of 
each single-row omnidirectional wheel is perpendicular to 
the tangent plane of the spherical wheel. The three omni-
directional wheels provide the motion that allows the ball 
segway to rotate, balance, and transfer accurately in any di-
rection in an actual environment without constraints.
A frame is used to mount the drive mechanism proper-
ly, guarantee and synchronize the contact between the om-
nidirectional wheels and the spherical wheel, and ensure 
that the omnidirectional wheels transmit the same amount 
of force and velocity to the spherical wheel.
The spherical wheel is made of a hollow aluminum 
sphere that can bear the weight of the robot body and the 
person riding in it. The thick rubber clad over the spheri-
cal aluminum wheel provides sufficient friction between 
the omnidirectional wheels and the spherical wheel and 
between the spherical wheel and the floor for transferring 
and pivoting around the vertical axis. Table 1 lists the spec-
ifications of the developed rideable ball segway.
SYSTEM MODEL
A mathematical model is required to design a proper control-
ler that achieves the balance and desired transfer control per-
formance. The ball segway system has five DOFs, of which 
two are dedicated to the translation of the ball and three to 
the rotation of the body. Therefore, the minimal coordinate 
vector is defined as 
,
q
x
y
k
k
x
y
z
T
i
i
i
= 6
@  where xk and yk 
indicate the position of the ball along the x- and y-axes, re-
spectively, and 
,
x
i  
,
y
i  and 
z
i  are body angles (in Tait–Bryan 
angles) along the 
,
y z
–  
,z
x–  and x y
–  planes, respectively.
As illustrated in Figure 3, the following six coordinate 
frames are defined for system modeling. The global iner-
tial reference frame is denoted as .I  Reference frame 1 is 
obtained by translating the global reference frame I by xk 
along the x-axis. Reference frame 2 is achieved by trans-
lating the reference frame 1 by yk along the y-axis. Refer-
ence frame 3 is obtained by turning around the z-axis of 
reference frame 2 by 
.
z
i  Reference frame 4 is derived with 
the rotation of reference frame 3 around its y-axis by 
.
y
i  
Finally, the body-fixed reference frame 5 is derived with 
the rotation of reference frame 4 around its x-axis by 
.
x
i
Kinematic Model
The general kinematics of the ball segway is a relation-
ship among 
,
x
x
y
z
T
{
{
{
{
=
o
o
o
o
6
@  the angular velocity of the 
 spherical wheel, and 
, ,
,
i
1 2 3
i
}
=
o ^
h  the angular velocities 
of the three omnidirectional wheels relative to the body 
frame. The kinematic relationship of dual-row omnidirec-
tional wheels is discussed in [22]. Meanwhile, single-row 
omnidirectional wheels are used for the ball segway. The 
shafts of the omnidirectional wheels are separated by 120° 
in the x y
–  plane, and each shaft slopes downward by .
a
The main assumptions for the simplification of the sys-
tem are:

APRIL 2018 « IEEE CONTROL SYSTEMS MAGAZINE 19
 
» The body and floor have no deformation.
 
» No slip occurs between the ball and the floor and 
between the ball and the omnidirectional wheels.
 
» The contacts between the ball and the ground and 
between the omnidirectional wheels and the ball are 
point contacts.
To meet the no-slip condition between the ball and 
the omnidirectional wheels, the projection of the veloci-
ties of the ball at all contact points in the actuation di-
rection of the omnidirectional wheel should be equal, 
that is,
 
,
, , ,
P u
r
i
1 2 3
i w
k
i
wi
#
{
}
=
=
o
o
^
h
 
(1)
where Pi is the position vector from the center of the ball to 
the contact point i of the ith omnidirectional wheel to the 
Cover 
Body Frame 
Seat 
CMG 
  Motor and
Omniwheel
Ball 
Omniwheel
Ball Frame
Smart Motor 
Gearbox 
Ball
(a)
(b)
FIGURE 2  The structure of the ball segway, which is designed to transport a person. (a) An overview of the ball segway. (b) The drive 
mechanism of the ball segway, including three omnidirectional wheels acting on a ball, and four control moment gyroscopes (CMGs) to 
control balancing, transferring, and rotating.

20 IEEE CONTROL SYSTEMS MAGAZINE » APRIL 2018
ball in the body frame, as indicated in Figure 4; u
i
w  is the 
vector of the direction cosines of the ith omnidirectional 
wheel contact point velocities in the actuation directions; 
and rw is the radius of the omnidirectional wheel.
Therefore, the angular velocities of the omnidirectional 
wheels are expressed as
 
,
, , .
P u
r
i
1
1 2 3
i
w
k
i
wi
#
{
} =
=
o
o
^
h
 
(2)
As shown in Figure 4, the position vector of each contact 
point Pi is
 
,
[
] ,
P
P
sin
sin
cos
sin
cos
r
r
r
r
r
0
2
1
2
3
,
k
k
T
k
k
k
T
2 3
1
!
a
a
a
a
a
= -
=
;
E  
(3)
where rk is the radius of the ball.
Furthermore, the direction cosine vectors that provide 
the corresponding direction of the speed at the contact 
point between the omnidirectional wheels and the ball are
 
.
[
] ,
u
u
2
3
2
1 0
0 1 0
,
w
T
w
T
2 3
1
"
=
-
=
;
E
 
(4)
Substituting (3) and (4) into (2) yields
 
( )
,
J
x
y
z
T
T
1
2
3
{
{
{
a
}
}
}
=
o
o
o
o
o
o
6
6
@
@  
(5)
where ( )
J a  is the Jacobian matrix, that is,
 
( )
J
cos
sin
cos
cos
sin
cos
cos
sin
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
r
3
2
0
3
3
3
3
3
3
3
3
3
k
w
k
w
k
w
k
w
k
w
k
w
k
w
k
w
a
a
a
a
a
a
a
a
a
=
-
-
R
T
S
S
S
S
S
S
V
X
W
W
W
W
W
W
. 
(6)
The Jacobian matrix (6) represents the effect of the zenith 
angle a on the motion relationship between the ball and 
the three single-row omnidirectional wheels.
Dynamic Model
The three-dimensional (3-D) motion of the ball segway can 
be decoupled into three 2-D motions, that is, one in the x z
–  
plane, one in the y z
–  plane, and another in the x y
–  plane. 
Each 2-D model describes the 2-D motion in 2-D space.
The dynamic equations of the 2-D ball segway in the 
y z
–  plane can be obtained from the Euler–Lagrange equa-
tion and transformed into matrix form
 
,
,
M q
q
C q q
q
D q
G q
Q
x
x
x
x
x
x
x
x
+
+
+
=
p
o
o
o
^
^
^
^
h
h
h
h
 
(7)
where the state vector 
,
qx  mass matrix 
,
M qx
^
h  gravity  
vector 
,
G qx
^
h  friction vector 
,
D qxo
^
h  vector of control tor -
que along the y-axis 
,
Qx  and Coriolis-centrifugal vector 
,
C q q
x
xo
^
h are respectively expressed as
 
,
q
y
x
k
x
T
i
= 6
@
 
(
)
M q
cos
cos
cos
cos
cos
cos
m
r
I
m
r
I
r
I
r
m l
r
I
r
m l
m l
r
I r
I
2
3
2
3
2
3
2
3
x
k
k
k
a
w
w
w
w
k
a
x
w
w
k
a
x
a
w
w
k
x
2
2
2
2
2
2
2
2
2
2
2
a
a
i
a
i
a
=
+
+
+
-
-
+
+
,
R
T
S
S
S
SS
V
X
W
W
W
WW
 
,
G q
sin
m gl
0
x
a
x
T
i
=
-
^
h
6
@
 
,
D q
b y
d sign y
b
d sign
x
y
k
y
k
rx
x
rx
x
T
i
i
=
+
+
o
o
o
o
o
^
^
^
h
h
h
6
@
 
,
Q
r
r
r
1
x
w
x
w
k
x
T
x
x
= ;
E
 
,
C q q
sin
m l
0
0
0
x
x
a
x
x
i
i
=
,
o
o
^
h
;
E
where 
x
x  is the equivalent torque of the three driving mo-
tors acting on the ball around the x-axis; g is the gravi-
tational acceleration; by and brx are the viscous damping 
coefficients that model the spherical wheel–ground friction 
and spherical wheel–body friction in the y z
–  plane, respec-
tively; and dy and drx are the Coulomb friction coefficients 
Parameter
Symbol
Value
Units
Mass of the body
ma
68
kg
Body center of the mass height 
of the body
l
0.38
m
Moment of inertia of the body 
about the x-axis
Ix
12.1
kg-m2
Moment of inertia of the body 
about the y-axis
Iy
11.67
kg-m2
Moment of inertia of the body 
about the z-axis
Iz
1.08
kg-m2
Radius of the omnidirectional 
wheel
rw
0.1
m
Moment of inertia of the 
omnidirectional wheel
Iw
0.26
kg-m2
Mass of the ball
mk
19.6
kg
Radius of the ball
rk
0.22
m
Moment of inertia of the ball
Ik
0.38
kg-m2
Zenith angle
a
65.5
°
Table 1 Specifications of the ball segway. To estimate 
the ball segway system parameters, the system can be  
separated into five rigid bodies: the ball, three omni-
directional wheels, and main body. The ball is modeled 
as a homogeneous sphere. The omnidirectional wheels 
attached to the body are modeled as disks rotating about 
their shafts. The main body is approximated by a solid 
cuboid with upper and lower parts, with different densities 
to approximate the nonuniform mass distribution. A 
physical model of the ball segway system is also built in 
the SolidWorks software so that the system parameters 
can be determined in a different way. Therefore, applying 
and comparing the results of the two aforementioned 
methods can reduce errors and ensure the accuracy of the 
system parameters.

APRIL 2018 « IEEE CONTROL SYSTEMS MAGAZINE 21
FIGURE 3  A sketch of the three-dimensional (3-D) model and coordinate system. Six coordinate frames are used to derive the motion of 
the 3-D ball segway. xk  and yk  describe the translational motion of the ball on the floor, and 
,
,
k
y
i
i  and 
z
i  describe the rotational motion 
of the body in Tait-Bryan angles (a variation on Euler angles).
zI
yI
xk
yk
z1
z4
y5
z5
z4
z2, 3
x4, 5
y3, 4
y3, 4
y1
y2
x3
x2
xI
x1
o
θy
θx
θz
P
z
y
y
x
α
rk
P1
P1
P3
P2
uw2
uw1
uw3
ψ3
.
ψ1
.
π
3
π
3
x
FIGURE 4  A sketch of decomposed angular velocities of three omnidirectional wheels and a ball with radius 
.
rk  Each omnidirectional 
wheel is fixed to a shaft, thereby making it perpendicular to the tangent plane of the ball. The omnidirectional shafts form the zenith angle 
a to the vertical axis. The omnidirectional wheels act as friction wheels to transmit the motion to the spherical tire without a resisting 
motion in the direction orthogonal to the actuation direction. The vectors from the center of the ball to the contact point between the omni-
directional wheels and ball are 
,
,
P P
1
2  and P3 in the body frame. A unit vector 
, ,
i
1 2 3
uwi
=
^
h denotes tangential direction at each contact 
point. Based on the no-slip assumption, the vector sum 
u
i
wi
Wo
/
 decides the rotating speed and direction of the ball moving on the floor.

22 IEEE CONTROL SYSTEMS MAGAZINE » APRIL 2018
that model the spherical wheel–ground friction and spheri-
cal wheel–body friction in the y z
–  plane, respectively. The 
other symbols are presented in Table 1, and “Nonlinear 
Dynamic Equation of the Two-Dimensional Ball Segway” 
completely represents the low-level dynamic components.
The dynamic equations derived by the Euler–Lagrange 
equation in the x z
–  plane are represented in matrix form
 
,
,
M q
q
C q q
q
D q
G q
Q
y
y
y
y
y
y
y
y
+
+
+
=
p
o
o
o
^
^
^
^
h
h
h
h
 
(8)
where the state vector 
,
qy  mass matrix 
,
M qy
^
h  gravity vector 
,
G qy
^
h  friction vector 
,
D qyo
^
h  vector of control torque along 
the y-axis 
,
Qy  and Coriolis-centrifugal vector 
,
C q q
y
yo
^
h are, 
respectively, expressed as
 
,
q
x
y
k
y
T
i
= 6
@
M q
cos
cos
cos
cos
cos
cos
m
r
I
r
I
m
m l
r
I
r
m l
r
I
r
r
I r
m l
I
2
3
2
3
2
3
2
3
y
k
k
k
w
w
a
a
y
w
w
k
a
y
w
w
k
w
w
k
a
y
2
2
2
2
2
2
2
2
2
2
2
a
i
a
i
a
a
=
+
+
+
-
-
+
+
,
^
h
R
T
S
S
S
SS
V
X
W
W
W
WW
Nonlinear Dynamic Equation of the Two-Dimensional Ball Segway
T
he planar model of the ball segway system is composed of 
the ball, the body, and omnidirectional wheels. The body is 
a solid cuboid, which models the moment of inertia and center 
of the body mass. The omnidirectional wheels attached to the 
body are disks that rotate around their shafts.
The Euler–Lagrange equation and decoupling method are 
used to derive the dynamic equations of the 2-D ball segway. The 
physical model of the 2-D ball segway is shown in Figure S2. The 
selected generalized coordinates of the ball segway system con-
sists of 
( ),
( ),
( ),
( ),
t
x
t
y
t
t
y
x
k
k
i
i
 and 
( ),
t
z
i
 namely, the ball displace-
ment along the x- and y-axes and the body angles around the 
,
,
x y
-
-  and z-axes, respectively. The control inputs,  
,
,
x
y
x
x  and 
,
z
x  
are the equivalent torques of the three driving motors that act on 
the ball around the 
,
,
x y
-
-  and z-axes. The vector of minimal coor-
dinates in the y z
–  plane is defined as 
.
y
qx
k
x
T
i
= 6
@  The dynamic 
equations are obtained through the Euler–Lagrange equation
.
dt
d
L
L
q
Q
D q
qx
x
x
x
x
x
2
2
2
2
-
=
-
o
o
c
^
m
h
The kinetic and potential energies of the ball, body, and 
omnidirectional wheels should be obtained to describe the dy-
namics of the ball segway.
y
x
Iz
mw Iw Rw
YI
ma
rk
mk
θx
ZI
l
yk
ψ2
ψ1
ψ3
θz
FIGURE S2  A physical system of the 2-D ball segway. One model is for the y z
–  and x y
–  planes, and the other is for the x z
–  
plane. The body of the ball segway is modeled as an inverted pendulum with the mass ma and moments of inertia of the body 
,
,
I
I
x
y  and 
.
Iz The ball is approximated by a homogeneous sphere with the radius rk  and mass 
.
mk  l  is the distance between 
the center of mass of the body and the ball. The vectors of minimal coordinates in the y z
–  and x z
–  planes are defined by 
y
qx
k
x
T
i
= 6
@  and 
,
x
qy
k
y
T
i
= 6
@  where xk  and yk  are the positions of the ball and 
,
,
y
x i
i
 and 
z
i  are the angles of the body.

APRIL 2018 « IEEE CONTROL SYSTEMS MAGAZINE 23
 
,
G q
sin
m gl
0
y
a
y
T
i
=
-
^
h
6
@
 
D q
b x
d sign x
b
d sign
y
x
k
x
k
ry
y
ry
y
T
i
i
=
+
+
o
o
o
o
o
^
^
^
h
h
h
6
@ ,
 
,
Q
r
r
r
1
y
w
y
w
k
y
T
x
x
= -
;
E
,
,
C q q
sin
m l
0
0
0
y
y
a
y
y
i
i
=
-
o
o
^
h
;
E
where 
y
x  is the equivalent torque of three driving mo-
tors acting on the ball around the y-axis; bx and bry are 
the viscous damping coefficients that model the spherical 
wheel–ground friction and spherical wheel–body friction 
in the x z
–  plane, respectively; and dx and dry are the Cou-
lomb friction coefficients that model the spherical wheel–
ground friction and spherical wheel–body friction in the 
x z
–  plane, respectively.
State vectors x
q
q
y
y
r
x
T
x
T T
k
x
k
x
T
i
i
=
=
o
o
o
6
6
@
@  and xp =
,
q
q
x
x
y
T
y
T T
k
y
k
y
T
i
i
=
o
o
o
6
6
@
@  and control inputs ux
x
x
=
 and 
uy
y
x
=
 are defined to convert the dynamic equations in 
the two vertical planes into standard nonlinear state-space 
forms and combine them with (7) or (8), which yields
ENERGY OF THE BALL
The kinetic energy of the ball is defined as the sum of the trans-
lational and rotational kinetic energies, that is,
,
T
m
r
I
y
2
1
kx
k
k
k
k
2
2
=
+
o
c
m
where mk  is the mass of the ball, Ik  is the moment of inertia 
of the ball, and rk  is the ball radius. The potential energy of 
the ball is zero because the ball is assumed to only move on a 
horizontal surface, so 
.
V
0
kx =
ENERGY OF THE BODY
The kinetic energy of the body is
,
co s
sin
T
I
m
y
l
m l
2
1
2
1
2
1
ax
x
x
a
k
x
x
a
x
x
2
2
2
2
2
i
i
i
i
i
=
+
-
+
o
o
o
o
^
h
where ma is the body mass, Ix  is the moment of inertia of 
the body around the x-axis, and l  is the distance between the 
center of mass of the body and the ball. The potential energy 
of the robot body is
,
cos
V
m gl
ax
a
x
i
=
where g is the gravity acceleration.
ENERGY OF THE OMNIDIRECTIONAL WHEELS
The omnidirectional wheels are attached to the body. Thus, 
only the rotational motion of the omnidirectional wheels should 
be calculated. The kinetic and potential energies of the omni-
directional wheels are
,
,
cos
T
r
I
y
r
V
4
3
0
wx
w
w
k
k
x
wx
2
2
2
a
i
=
+
=
o
o
^
h
where lw is the moment of inertia of the omnidirectional wheels.
The total kinetic energy Tx  and the total potential energy Vx  
of the entire ball segway system are expressed as
,
co s
sin
co s
T
T
T
T
m
r
I
y
I
m
y
l
m l
r
I
y
r
2
1
2
1
2
1
2
1
4
3
x
kx
ax
wx
k
k
k
k
x
x
a
k
x
x
a
x
x
w
w
k
k
x
2
2
2
2
2
2
2
2
2
2
i
i
i
i
i
a
i
=
+
+
=
+
+
+
-
+
+
+
o
o
o
o
o
o
o
J
L
K
K
KK
c
^
^
N
P
O
O
OO
m
h
h
and
,
cos
V
V
V
V
m gl
x
kx
ax
wx
a
x
i
=
+
+
=
respectively. The Lagrangian function Lx  is 
.
L
T
V
x
x
x
=
-
 The 
relationship between the torque input 
x
x  and the torques that 
directly control the minimal coordinates qx  is
.
r
r
1 1
Qx
y
w
k
x
k
x
x
x
x
=
=
i
;
;
E
E
Moreover, the friction vector is defined as
,
b y
d
y
b
d
sign
sign
D qx
y
k
y
k
rx
x
rx
x
T
i
i
=
+
+
o
o
o
o
o
^
^
^
h
h
h
6
@
where by  and brx  are the viscous damping coefficients that 
model the spherical wheel–ground friction and spherical 
wheel–body friction in the y z
–  plane, respectively, and dy  
and drx  are the Coulomb friction coefficients that model the 
spherical wheel–ground and spherical wheel–body friction in 
the y z
–  plane, respectively.
The dynamic equations of the planar motion in the y z
–  
plane can be obtained using the Euler–Lagrange equation and 
rewritten in matrix form
,
,
M q
q
C q q
q
D q
G q
Q
x
x
x
x
x
x
x
x
+
+
+
=
p
o
o
o
^
^
^
^
h
h
h
h
where M qx
^
h is the mass matrix, 
,
C q q
x
xo
^
h is the Coriolis-cen-
trifugal vector, and G qx
^
h is the gravity vector.
The mass matrix is expressed as
.
cos
cos
cos
cos
cos
cos
m
r
I
m
r
I
r
I
r
m l
r
I
r
m l
m l
r
I r
I
2
3
2
3
2
3
2
3
M qx
k
k
k
a
w
w
w
w
k
a
x
w
w
k
a
x
a
w
w k
x
2
2
2
2
2
2
2
2
2
2
2
a
a
i
a
i
a
=
+
+
+
-
-
+
+
^
h
R
T
S
S
S
SS
V
X
W
W
W
WW
The Coriolis-centrifugal vector is expressed as
,
.
sin
m l
0
0
0
C q q
x
x
a
x
x
i
i
=
o
o
^
h
;
E
The vector of gravitational forces is
.
sin
m gl
0
G qx
a
x
T
i
=
-
^
h
6
@

24 IEEE CONTROL SYSTEMS MAGAZINE » APRIL 2018
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
cos
cos
sin
sin
sin
cos
cos
cos
cos
cos
cos
cos
cos
f
b
b y
b y
d sign
d sign y
d sign y
0 075
0 6 5
2 2
25 1
0 037
0 32
2
0 075
0 6 5
2 2
0 1
0 0015
0 025
0 075
0 6 5
2 2
0 1
0 0015
0 075
0 6 5
2 2
0 025
x
r
r
x
x
x
x
x
x
x
x
x
rx
x
y
k
y
k
x
x
x
rx
x
y
k
x
x
y
k
x
4
2
2
2
2
2
2
i
i
i
i
i
i
i
i
i
i
i
i
i
i
i
i
i
=
-
+
+
-
-
-
+
-
+
-
-
+
-
+
-
+
,
o
o
o
o
o
o
o
J
L
K
K
K
K
K
K
K
K
K
KK
^
^
^
^
N
P
O
O
O
O
O
O
O
O
O
OO
h
h
h
h
 
.
.
.
.
.
;
cos
cos
cos
g
0 075
0 65
2 2
0 25
0 21
x
r
r
x
x
x
4
2
i
i
i
=
-
+
+
^
h
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
cos
cos
sin
sin
sin
cos
cos
cos
cos
cos
cos
cos
cos
f
b
b y
b
d sign
d sign x
d sign
0 05
0 075
0 65
2 2
65 5
2
7 59
11 3
0 075
0 65
2 2
0 03
0 44
0 52
0 075
0 65
2 2
0 03
0 44
0 075
0 65
2 2
0 52
x
p
p
y
y
y
y
y
y
y
y
ry
y
x
k
ry
y
y
y
y
ry
y
x
k
y
y
ry
y
y
3
2
i
i
i
i
i
i
i
i
i
i
i
i
i
i
i
i
i
i
=-
-
+
-
-
+
-
+
+
-
+
-
+
+
-
-
+
,
o
o
o
o
o
o
o
J
L
K
K
K
K
K
K
K
K
KK
^
^
^
^
N
P
O
O
O
O
O
O
O
O
OO
h
h
h
h
.
.
.
.
.
,
cos
cos
cos
g
0 075
0 65
2 2
0 06
0 21
x
p
p
y
y
y
3
2
i
i
i
=-
-
+
+
^
h
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
cos
cos
sin
sin
sin
cos
cos
cos
cos
cos
cos
cos
cos
f
b
b x
b x
d sign
d sign x
d sign x
0 075
0 6 5
2 2
25 1
0 037
0 32
2
0 075
0 6 5
2 2
0 1
0 0015
0 025
0 075
0 6 5
2 2
0 1
0 0015
0 075
0 6 5
2 2
0 025
x
p
p
y
y
y
y
y
y
y
y
y
ry
y
x
k
x
k
y
y
y
ry
y
x
k
y
y
x
k
y
4
2
2
2
2
2
2
i
i
i
i
i
i
i
i
i
i
i
i
i
i
i
i
i
=-
-
+
-
-
+
+
-
+
+
-
+
-
+
+
-
-
+
,
o
o
o
o
o
o
o
J
L
K
K
K
K
K
K
K
K
K
KK
^
^
^
^
N
P
O
O
O
O
O
O
O
O
O
OO
h
h
h
h
 
.
.
.
.
.
.
cos
cos
cos
g
0 075
0 65
2 2
0 25
0 21
x
p
p
y
y
y
4
2
i
i
i
=
-
+
+
^
h
The dynamic equation obtained in the x y
–  plane is
 
,
sin
I I
I
I I
r
r
I
r
r
3
z
k z
k
z
w
w
k
k
w
k
z
2
2
2
i
a
x
=
+
+
p
^
h
 
(13)
where 
z
x  is the equivalent torque of three driving motors 
that act on the ball around the z-axis.
Torque Conversion
In this section, a relationship between 
aj
x  [the torque vec-
tor generated by 
jx  along the direction of the j-axis with 
, ,
j
x y z
=
 (virtual drive system as shown in Figure 5)] and 
ai
x  [the torque vector generated by omnidirectional wheel 
i with 
, ,
i
1 2 3
=
 (actual drive system as indicated in Fig-
ure 6)] is derived. This relationship can be obtained be-
cause the resulting torque of the body is conserved as [23]
 
.
ax
ay
az
a
a
a
1
2
3
x
x
x
x
x
x
+
+
=
+
+
 
(14)
Fai is the tangential force acting on the ball orthogonal to 
,
ai
x  which is generated by the torque of the ith omnidirectional 
  
,
,
,
u
u
x
q
M
q
Q
C q q
q
D q
G q
F x
r
x
x
x
x
x
x
x
x
r
r
x
1
=
-
-
-
=
-
o
o
o
o
o
^
^
^
^
^
^
h
h
h
h
h
h
=
6
@G 
(9)
 
,
,
,
u
u
x
q
M
q
Q
C q q
q
D q
G q
F
x
p
y
y
y
y
y
y
y
y
p
p
y
1
=
-
-
-
=
-
o
o
o
o
o
^
^
^
^
^
^
h
h
h
h
h
h
=
6
@G 
(10)
where
 
,
,
u
y
f
g
u
f
g
u
F x
x
x
x
x
r
r
x
k
x
r
r
r
r
x
r
r
r
r
x
3
3
4
4
i
=
+
+
o
o
^
^
^
^
^
h
h
h
h
h
R
T
S
S
S
SS
V
X
W
W
W
WW
 
(11)
 
,
.
u
x
f
g
u
f
g
u
F
x
x
x
x
x
p
p
y
k
y
p
p
p
p
y
p
p
p
p
y
3
3
4
4
i
=
+
+
o
o
^
^
^
^
^
h
h
h
h
h
R
T
S
S
S
SS
V
X
W
W
W
WW
 
(12)
Using the ball segway system parameters in Table 1 
yields
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
cos
cos
sin
sin
sin
cos
cos
cos
cos
cos
cos
cos
cos
f
b y
b
b
d sign y
d sign
d sign
0 05
0 075
0 65
2 2
7 59
65 5
2
11 5
0 075
0 65
2 2
0 45
0 03
0 52
0 075
0 65
2 2
0 45
0 03
0 075
0 65
2 2
0 52
x
r
r
x
x
x
x
x
x
x
x
y
k
rx
x
rx
x
x
x
x
y
k
rx
x
x
x
rx
x
x
3
2
2
2
2
2
i
i
i
i
i
i
i
i
i
i
i
i
i
i
i
i
i
i
=-
-
+
-
+
+
-
+
-
+
+
-
+
-
+
-
+
,
o
o
o
o
o
o
o
J
L
K
K
K
K
K
K
K
K
K
KK
^
^
^
^
N
P
O
O
O
O
O
O
O
O
O
OO
h
h
h
h
 
.
.
.
.
.
,
cos
cos
cos
g
0 075
0 65
2 2
0 06
0 21
x
r
r
x
x
x
3
2
i
i
i
=
-
+
+
^
h
z
y
y
x
Fax
τax
τaz
Faz
rax
raz
Virtual Wheel
Side View
Top View
FIGURE 5  A sketch of the body torque generated by the virtual mo-
tor torques, tangential forces, and corresponding levers. The om-
nidirectional wheel and driving motors are modeled as virtual ac-
tuating wheels. Each two-dimensional (2-D) model contains only 
one virtual actuating wheel, which rotates around the shaft orthog-
onal to the plane of the 2-D model. The tangential force 
,
,F
F
ay
az
 
and Faz are functions of the equivalent torques 
,
,
ax
ay
x
x
 and 
az
x
 
around the 
,
,
x y
-
-  and z-axes and the levers 
,
,r
ra
a
x
y  and 
.
raz

APRIL 2018 « IEEE CONTROL SYSTEMS MAGAZINE 25
wheel, and rai is the lever corresponding to 
.
Fai  In addition, 
Faj is the tangential force acting on the ball orthogonal to 
,
aj
x  
which is generated by torques in the direction of the j-axis 
with 
, , ,
j
x y z
=
 and raj is the lever corresponding to 
.
Faj  The 
torque vectors can be calculated as
 
,
, , ,
,
, , .
i
j
x y z
1 2 3
F
r
F
r
ai
ai
ai
aj
aj
aj
#
#
x
x
=
=
=
=
 
(15)
Based on Figure 6, the following tangential forces of the 
actual drive system are derived as
 
,
,
.
r
r
r
0
1
0
2
3
2
1
0
2
3
2
1
0
F
F
F
a
w
T
a
w
T
a
w
T
1
1
2
2
3
3
x
x
x
=
-
=
=
-
6
;
;
@
E
E
 
(16)
The levers of the actual drive system are defined by
 
,
,
.
sin
cos
sin
sin
cos
sin
sin
cos
r
r
r
0
2
1
2
3
2
1
2
3
r
r
r
a
k
T
a
k
T
a
k
T
1
2
3
a
a
a
a
a
a
a
a
=
=
-
=
-
-
6
;
;
@
E
E
 
(17)
In addition, based on Figure 5, the following tangential 
forces of the virtual drive system are obtained as
 
,
,
.
r
r
r
0
1 0
1 0 0
0
1 0
F
F
F
ax
w
x
T
ay
w
y
T
az
w
z
T
x
x
x
=
-
=
=
-
6
6
6
@
@
@
 
(18)
The levers of the virtual drive system are defined by
 
,
.
r 0 0 1
1 0 0
r
r
r
r
ax
ay
k
T
az
k
T
=
=
=
6
6
@
@  
(19)
Substituting (16), (19), and (15) into (14) and solving (14) 
for the actual motor torques 
,
,
1
2
x
x  and 
3
x  as functions of 
the equivalent torques along the 
,
,
x y
- -  and z-axes, 
,
x
x  
,
y
x  
and 
z
x  in matrix form yield
 
.
cos
cos
cos
cos
cos
sin
sin
sin
3
2
3
1
3
1
0
3
3
3
3
3
1
3
1
3
1
y
z
x
1
2
3
x
x
x
a
a
a
a
a
a
a
a
x
x
x
= -
-
-
R
T
S
S
S
S
S
S
>
>
V
X
W
W
W
W
W
W
H
H  
(20)
z
x
x
y
α
ra1
Fa3
Fa2
Fa1
τ1
τ3
τ1
τ2
τ3
z
π
3
π
3
rk sin α
y
(a)
(b)
FIGURE 6  A sketch of body torque generated by the actual motor torques, tangential forces, and the corresponding levers. The tangen-
tial forces 
,
,
F
F
a
a
1
2  and Fa3 are generated by torques of the driving motors 
,
,
2
1 x
x
 and 
3
x  in the actual configuration. The levers for this 
configuration are denoted as 
,
,r
ra
a
1
2  and 
.
ra3  (a) The torque of each omnidirectional wheel; the torque actuates the ball by scrolling on 
a circle on the ball, which is characterized by the motor arrangement zenith angle .
a  (b) A top view of the driving subsystem, where the 
torque of each omnidirectional wheel generates a tangential force on the surface of the ball with radius 
.
rk

26 IEEE CONTROL SYSTEMS MAGAZINE » APRIL 2018
Actuators
On the basis of torques conversion, 
,
,
1
2
x
x  and 
3
x  represent 
the torques of the driving brushless dc motors. Characteris-
tic equations of the brushless dc motor [24] are expressed as
 
,
L dt
di
Ri
k
V
e}
=-
-
+
o
 
(21)
 
,
I dt
d
k i
k
t
f
2
2}
}
x
=
-
-
o
 
(22)
where 
,
,
k kt
e
 and kf  are the back-electromotive force con-
stant, torque constant, and linear viscous friction factor, 
respectively; R and L are the armature coil resistance and 
inductance, respectively; V  and i denote the source voltage 
and armature current, respectively; x is the torque load ap-
plied to the driving motor; and I represents the moment of 
inertia of the motor and load referred to the motor shaft.
For simplicity, the armature coil resistance and the mo-
ment of inertia of the motor are assumed to be comparably 
small and negligible. The dynamics of the driving motor 
can be obtained as
 
.
R
k V
k
R
k k
t
f
t
e
x
}
=
+
-
o
c
m
 
(23)
Then, the generalized torques as functions of the input 
voltage and angular rate of the omnidirectional wheel are
 
,
R
k V
k
R
k k
t
f
t
e
1
1
1
x
}
=
+
-
o
c
m
 
(24)
 
,
R
k V
k
R
k k
t
f
t
e
2
2
2
x
}
=
+
-
o
c
m
 
(25)
 
.
R
k V
k
R
k k
t
f
t
e
3
3
3
x
}
=
+
-
o
c
m
 
(26)
DESIGN OF THE CONTROL SYSTEM
This section describes the two controllers used for the ball 
segway. A double-loop controller, which consists of an LQR 
outer-loop controller and a PI-plus-feedforward inner-loop 
controller, is designed to balance and transfer the ball seg-
way. The LQR and PI double-loop controller is an optimal 
controller that feeds all state variables to produce the opti-
mal response. A remaining PD controller controls the robot 
that rotates around the vertical axis.
Control Architecture
This section presents the design of three improved double-
loop controllers for self-balancing and station-keeping, 
 robustness, and transferring control of the ball segway. Each 
controller has two loops, namely, a PI inner-loop controller 
and an LQR outer-loop controller. The three control targets, 
self-balancing, robustness, and transferring controls, are re-
duced to the same regulation problem, that is, 
x
i  and 
y
i  are 
stabilized at zero, and xk and yk reach the planned position 
set by xkd and 
,
ykd  respectively.
Although the controllers have the same structure, the 
functionalities of the PI inner-loop and LQR outer-loop 
controllers are different when they are applied to various 
tasks, including balancing, robustness, and transferring 
controls. The specific functionalities of the controllers are 
presented as follows.
Balancing Controller
The objective of the balancing controller is to balance the 
body with the desired angles, which are zero for a pure bal-
ancing operation. The LQR outer-loop controller provides 
the speed reference to the PI inner-loop controller. When 
the LQR and PI double-loop controller executes a balancing 
function, the speed reference of the PI inner-loop controller 
is maintained around zero by the LQR outer-loop control-
ler. Meanwhile, the PI inner-loop controller maintains the 
ball segway in a vertical position and fixes it on the floor.
Station-keeping is an effort by the ball segway to re-
tain a specific position on the floor using the LQR outer-
loop controller.
Transferring Controller
The aforementioned balancing controller is good at balanc-
ing with the desired body angles; however, the ball segway 
cannot move to any desired ball position nor gain speed on 
the floor with the balancing controller. Therefore, a trans-
ferring controller is designed to control the movement of 
the ball segway.
Considering the transferring controller, the LQR outer-
loop controller serves as a speed controller. The outputs 
of the LQR outer-loop controller are position and speed 
references, depending on the errors between the current 
and desired speeds of the ball and between the current 
and desired positions of the ball. The LQR outer-loop con-
troller has two major applications. The first is a stopping 
controller that enables the ball segway to slow down and 
stop when subjected to large external disturbances. This 
application is utilized as a robust feature of the double-loop 
control system against external disturbances. The second 
is for movement where the user can provide velocity com-
mands using a joystick. The control signal from the joystick 
is ramped to reduce the initial tilt angles of the body while 
controlling movement.
Robustness Controller
The PI inner-loop controller automatically compensates for 
various frictional torques for velocity tracking; thus, it re-
duces the effect of uncertainties of friction. In Figure 7, 
additional control torques uxf  and u fy  are considered as 
two feedforward controls that eliminate most uncertainties 
caused by viscous and Coulomb frictions as well as model 
and system parameters. The control gains of the PI inner-
loop controller are empirically selected to provide proper 
performance for velocity tracking.
Rotating Controller
A PD controller is utilized to control the rotation of the ro-
bot around the vertical axis. The controller feeds back the 

APRIL 2018 « IEEE CONTROL SYSTEMS MAGAZINE 27
yaw angle 
z
i  and yaw angular velocity 
.
z
io  The output of 
the rotational controller is the following torque–control in-
put acting on the ball
 
,
K
K
z
dz
z
pz
z
z
x
i
i
i
=
+
-
o
^
h  
(27)
where Kpz and K z
d  are the PD control gains of the rotation-
al controller.
PI Plus Feedforward Inner-Loop Controller Design
The PI inner-loop controller, which feeds back the ball ve-
locity, aims to control the ball position. The output of the 
inner-loop controller is the torque–control input acting on 
the ball segway, that is,
 
,
,
u
u
K
y
K
x
y
u
u
K
x
K
x
x
x
xf
pr
y
k
ir
r
k
y
yf
pp
x
k
ip
p
k
5
5
o
o
=
+
-
+
-
=
+
-
+
-
o
o
^
^
^
^
h
h
h
h  
(28)
where Kp and Ki are PI control gains; 
x
o  and 
y
o  are refer-
ence velocities of the ball along the x- and y-axes, respec-
tively, and are also outputs of the outer-loop controller; x5 
is the reference position of the ball, with 
,
x r
y
5
o
=
o
 
;
x p
x
5
o
=
o
 
uxf  and uyf  are the feedforward compensation controls; 
and r and p denote roll and pitch, respectively.
The target of the PI inner-loop controller is to let yko  
 approach 
y
o  as time approaches infinity. The velocity error 
is represented as
 
.
e
t
v
y
vy
y
k
=
- o
^ h
 
(29)
Differentiating e
t
vy^ h with respect to time t yields
 
.
e
t
v
y
v
f
g
u
x
x
vy
y
k
y
r
r
r
r
x
3
3
=
-
=
-
+
o
o
p
o
^
^
^
h
h
h
6
@  
(30)
Let
 
.
u
g
f
v
K e
K
e
d
x
x
x
r
r
r
r
y
pr
vy
ir
vy
t
3
1
3
0
x
x
=
-
+
+
+
-
l
l
o
^
^
^
h
h
h
8
B
#
 
(31)
Substituting (31) into (30) yields
 
.
e
K e
K
e
d
vy
pr
vy
ir
vy
t
0
x
x
=-
-
l
l
o
^ h
#
 
(32)
Differentiating (32) with respect to time t gives
 
.
e
K e
K e
0
vy
pr
vy
ir
vy
+
+
=
l
l
p
o
 
(33)
To stabilize the closed-loop system and obtain the de-
sired transient performance simultaneously, let the closed-
loop error (33) equal the desired standard second-order 
characteristic equation, that is,
 
,
s
K s
K
s
s
2
pr
r
n
n
i
2
2
2
p~
~
+
+
=
+
+
l
l
 
(34)
where 
0
n 2
~
 is the desired natural frequency, and 
0
2
p
 is 
the desired damping ratio. Comparing the coefficients of 
polynomials on two sides yields  
 
,
.
K
K
2
pr
n
ir
n
2
p~
~
=
=
l
l
 
(35)
Ball
Segway
Torque
Conversion
LQR
Controller
yk xk
θx θy
ykd
KP
KI
yk
xk
yk
.
xk
.
vy
vx
1
S
+_
+_
++
+_
ux
vx
vy
τi
uy
yk xk
.
θx θy
.
.
.
xkd
x5p
x5r
uxf uyf
+
Friction
Factors
Feedforward
Compensation
Term
FIGURE 7  The architecture of the double-loop control system. This control diagram is employed to implement the control of the ball 
segway in numerical simulations and experiments. The control system includes a proportional-integral (PI) inner-loop controller and a 
linear-quadratic regulator (LQR) outer-loop controller. Based on the two-dimensional model of the ball segway, the double-loop control 
systems are designed to control balancing, station-keeping, and point-to-point transferring. State variables 
y
y
xr
k
x
k
x
T
i
i
=
o
o
6
@  and 
x
x
xp
k
y
k
y
T
i
i
=
o
o
6
@  feedback the LQR outer-loop controller. The outputs vx  and vy  of the outer-loop controller are reference speeds 
for the PI inner-loop controller. The required torque of each driving motor 
, ,
i
1 2 3
i
x
=
^
h is given as a function of torque inputs ux  and 
uy  using the torque conversion. Additional control torques uxf  and u fy  are considered as two feedforward controls that eliminate the 
uncertainties of friction, model, and external disturbances. ykd and xkd represent the reference position of the ball.

28 IEEE CONTROL SYSTEMS MAGAZINE » APRIL 2018
Substituting (35) into (31) yields
 
.
u
g
f
g
v
g
e
g
e
d
2
x
x
x
x
x
t
x
r
r
r
r
r
r
y
r
r
n
vy
r
r
n
vy
3
1
3
3
1
3
1
3
1
2
0
p~
~
x
x
=-
+
+
+
-
-
-
-
o
^
^
^
^
^
^
h
h
h
h
h
h
#
 (36)
In the linearized case of an equilibrium point, 
,
v
0
y =
o
 
,
f
f
0
x
r
r
r
3
3
=
^
^
h
h  and 
.
g
g
0
x
r
r
r
3
3
=
^
^
h
h  Therefore, the control 
input ux are expressed as
 
,
u
g
f
g
e
g
e
d
u
K e
K
e
d
2
0
0
0
0
t
x
r
r
r
n
vy
r
n
vy
xf
pr
vy
ir
vy
t
3
1
3
3
1
3
1
2
0
0
p~
~
x
x
x
x
=-
+
+
=
+
+
-
-
-
^
^
^
^
^
^
h
h
h
h
h
h
#
#
 
 
(37)
where
 
,
K
g
2
0
pr
r
n
3
1
p~
=
- ^ h
 
(38)
 
,
K
g
0
ir
r
n
3
1
2
~
=
- ^ h
 
(39)
 
.
u
g
f
0
0
xf
r
r
3
1
3
=-
- ^
^
h
h  
(40)
The feedforward compensation control (40) eliminates most 
uncertainties of friction factors. Based on the aforementioned 
control design steps, the control gains Kpp and 
,
K pi  and the 
feedforward control uyf  are completely determined as
 
,
( )
K
g
2
0
pp
p
n
3
1
p~
=
-
 
(41)
 
,
( )
K
g
0
ip
p
n
3
1
2
~
=
-
 
(42)
 
.
( )
( )
u
g
f
0
0
yf
p
p
3
1
3
=-
-
 
(43)
LQR Outer-loop Controller Design
In designing the LQR outer-loop controller, the integral 
term x r
5  in the y z
–  plane or x p
5  in the x z
–  plane is added 
into an extra state to the 2-D model system. The augmented 
state vectors are 
x
x
x
ra
r
T
r
T
5
= 6
@  and 
,
x
x
x
pa
p
T
p
T
5
= 6
@  and the 
ball segway dynamics with the PI inner-loop control law 
without feedforward compensation term in the y z
–  and 
x z
–  planes are written as
,
.
,
,
,
,
K
K
x
y
x
y
K
K
x
x
x
x
x
x
x
F
x
F
F
Fr
r
pr
y
ir
k
k
y
ra
ra
ra
y
pa
pa
pa
x
p
p
pp
x
k
ip
p
k
x
5
r
5
o
o
o
o
o
o
-
-
=
-
+
-
=
=
=
+
o
o
o
o
^
^
^
^
^
^
^
^
h
hh
h
h
h
hh
=
=
G
G
 
(44)
An LQR outer-loop controller is then designed by ini-
tially linearizing the robot dynamics (44). Based on the Tay-
lor series expansion of an equilibrium point, where 
0
xra =
 
and 
0,
xpa =
 the linearized dynamic model is
 
,
,
x
A x
B
x
A x
B
pa
ra
r
ra
r
y
pa
p
p
x
o
o
=
+
=
+
o
o
 
(45)
where
,
,
a
a
a
a
a
a
a
a
a
a
b
b
0
0
0
0
0
0
1
0
0
0
1
0
0
0
0
0 0
1
A
B
r
r
r
r
r
r
r
r
r
r
r
r
r
r
T
31
41
32
42
33
43
34
44
35
45
3
4
=
=
R
T
S
S
S
S
S
S
6
V
X
W
W
W
W
W
W
@
 
,
.
a
a
a
a
a
a
a
a
a
a
b
b
0
0
0
0
0
0
1
0
0
0
1
0
0
0
0
0 0
1
A
B
p
p
p
p
p
p
p
p
p
p
p
p
p
p
T
31
41
32
42
33
43
34
44
35
45
3
4
=
=
R
T
S
S
S
S
S
S
6
V
X
W
W
W
W
W
W
@
“Linear Model of the Two-Dimensional Ball Seg-
way System” provides the elements of the matrices 
,r
A  
,r
B  
,p
A
 and 
.p
B  By checking the rank of the control-
lability matrix [25], C
B
A B
A B
A B
A B
r
r
r
r
r
r
r
r
r
r
2
3
4
= 6
@ and 
,
C
B
A B
A B
A B
A B
p
p
p
p
p
p
p
p
p
p
2
3
4
= 6
@  thereby achieving a 
rating of five for Cr and 
.
Cp  This result indicates that the pla-
nar systems with the PI inner-loop controller are controllable.
Given the system presented in (45), the optimal LQR 
outer-loop controller can be used to find a linear state-feed-
back controller that stabilizes all state variables of the ball 
segway system around the equilibrium point and mini-
mizes the performance index, that is,
 
,
,
J
R
dt
J
R
dt
x Q x
x Q x
ra
ra
T
ra
ra
ra
y
pa
pa
T
pa
pa
pa
x
2
2
0
0
o
o
=
+
=
+
3
3
^
^
h
h
#
#
 
(46)
where Qra and Q a
p  are symmetric and semidefinite posi-
tive matrices; and Rra and Rpa are positive values.
The LQR problem can be viewed as the weighted minimi-
zation of a linear combination of the state xra  and control input 
vy  as well as the state xpa and control input 
.
vx  The weighting 
matrices Qra and Q a
p  establish which states should be con-
trolled more tightly than the others. Rra and R a
p  weight the 
amount of control action to be applied to the performance in-
dex (46), depending on the size of state deviations. The struc-
tures of Qra and Q a
p  are set as 
,
,
,
,
diag
Qra
ry
r
ry
r
r5
p
p
p
p
p
=
i
i
o
o
^
h 
and 
,
,
,
,
,
diag
Qpa
px
p
px
p
p5
p
p
p
p
p
=
i
i
o
o
^
h  respectively, where 
,
,
,
,
,
,
,
,
,
ry
r
ry
r
r
px
p
px
p
5
p
p
p
p
p
p
p
p
p
i
i
i
i
o
o
o
o
 and 
p5
p
 can be roughly 
considered as controlling the relative convergence rates of 
the ball position, body tilt angles, ball velocities, body angu-
lar velocities, and additional states, respectively.
The LQR outer-loop controller is obtained using the feed-
back control gain vectors Kr and 
.
Kp  To calculate the opti-
mal control gain vectors, the following equations are used:
 
,
,
R
R
K
B P K
B P
r
ra
r
r
p
pa
p
p
1
1
=
=
-
-
 
(47)
 
,
.
R
R
0
0
P A
A P
P B
B P
Q
P A
A P
P B
B P
Q
r
r
r
T
r
r
r
ra
r
T
r
ra
p
p
p
T
p
p
p
pa
p
T
p
pa
1
1
+
-
+
=
+
-
+
=
-
-
 
(48)

APRIL 2018 « IEEE CONTROL SYSTEMS MAGAZINE 29
Equation (48) is the Riccati equation used to solve for the 
matrices Pp and 
,
Pr  which are used to obtain the vectors 
Kr and 
.
Kp  The optimal state feedback control law is then 
expressed as
 
,
,
K e
K e
y
r
ra
x
p
pa
o
o
=-
=-
 
(49)
where era and ea
p  are the error vectors, and Kr and Kp are 
the optimal control gain vectors.
For the simulation test, the Matlab function lqr is used to 
calculate the associated gain vectors Kr and Kp with a given 
choice of 
, R
Qra
ra and 
,
.
R
Qpa
pa  In practice, however, the asso-
ciated elements of these gain vectors are tuned by adjusting 
based on the simulation results because of the effect of noise 
and uncertainties of the robot parameters and model.
NUMERICAL SIMULATION
Initially, the control system applied to the ball segway is 
numerically simulated with the dynamics of the ball seg-
way systems (7) and (8) and the linear control laws (28) and 
(49). The ball segway system parameters shown in Table 1 
are simulated and experimentally tested. The design of the 
controller is conducted using Matlab function lqr. In Matlab 
and Simulink, all state variables of the robot system can be 
obtained from its mathematical model. For the following 
Linear Model of the Two-Dimensional Ball Segway System
C
onsider
,
,
x
v
x
F
ra
ra
ra
y
=
o
^
h
,
.
v
x
F
x
pa
pa
pa
x
=
o
^
h
,v
F
x
ra
ra
y
^
h and 
,
x
v
Fpa
pa
x
^
h are assumed to be continuously 
differentiable. Based on the Taylor series expansion [S1] with 
the first-order term around an equilibrium point, where 
,
0
xra =
 
v
0
y =
 and 
0,
xpa =
 
,
v
0
x =
 the linear time-invariant equations 
are obtained as
,
x
v
A x
B
ra
r
ra
r
y
=
+
o
,
v
x
A x
B
pa
p
pa
p
x
=
+
o
where
 
,
a
a
a
a
a
a
a
a
a
a
0
0
0
0
0
0
1
0
0
0
1
0
0
0
0
A
x
F
,
r
ra
ra
v
r
r
r
r
r
r
r
r
r
r
0
31
41
32
42
33
43
34
44
35
45
0
xra
y
2
2
=
=
=
=
R
T
S
S
S
S
S
S
V
X
W
W
W
W
W
W
 
,
y
b
b
0 0
1
B
F
,
r
l
ra
r
r
T
v
0
3
4
0
xra
y
2
2
=
=
=
=
o
6
@
,
a
a
a
a
a
a
a
a
a
a
0
0
0
0
0
0
1
0
0
0
1
0
0
0
0
A
x
F
,
p
pa
pa
p
p
p
p
p
p
p
p
p
p
v
0
31
41
32
42
33
43
34
44
35
45
0
xpa
x
2
2
=
=
=
R
T
S
S
S
S
S
S
V
X
W
W
W
W
W
W
 
.
x
b
b
0 0
1
B
F
,
p
l
pa
p
p
T
v
0
3
4
0
xpa
x
2
2
=
=
=
=
o
6
@
The elements of the 
,
,
,
A B A
r
r
p  and Bp matrices are
 
,
a
K r r
m l
m r l
I
mau
r
ir
k w
a
a k
x
r
31
2
2
1
=-
+
+
-
^
h
 
,
co s
a
m glr
m lr
I r
mau
2
3
r
a
k
a
w
w k
r
32
2
2
2
1
a
=
-
-
^
h
 
,
co s
a
r
I
m l
K r
b r
I b r
K m lr r
mau
2
3
2
r
k
x
a
pr w
y
w
w
y
k
pr
a
k w
r
33
2
2
2
2
2
1
a
=-
+
+
+
+
-
^
^h
h
6
@
 
,
co s
a
b r
m lr
I r
mau
2
3
r
rx
k
a
w
w k
r
34
2
2
2
1
a
=-
-
-
^
h
 
,
a
K r r
m l
m m l
I
mau
r
ir
k w
a
a
k
x
r
35
2
2
1
=
+
+
-
^
h
 
,
a
K r r
I
m
m
r
m lr mau
2
r
ir k w
k
a
k
k
a
k
r
41
2
1
=-
+
+
+
-
^
h
6
@
,
co s
a
m gl
I r
m
m
r r
I r
mau
2
2
3
r
a
k
w
a
k
k
w
w k
r
42
2
2 2
2
2
1
a
=
+
+
+
-
^
h
6
@
,
co s
a
r
K r
I
m r
m r
m lr
I b r
b m lr r
mau
2
3
2
r
k
pr w
k
a k
k
k
a
k
w
y
k
y
a
k
w
r
43
2
2
2
2
2
1
a
=-
+
+
+
-
+
-
^
h
6
@
 
,
co s
a
b
I r
m
m
r r
I r
mau
2
2
3
r
rx
k
w
a
k
k
w
w k
r
44
2
2 2
2
2
1
a
=-
+
+
+
-
^
h
6
@
 
,
a
K r r
I
m
m
r
m lr mau
2
r
ir k w
k
a
k
k
a
k
r
45
2
1
=
+
+
+
-
^
h
6
@
 
,
b
K r r
m l
m lr
I
mau
2
r
pr
k w
a
a
k
x
r
3
2
2
1
=
+
+
-
^
h
 
,
l
b
K r r
I
m
m
r
m r mau
2
r
pr k w
k
a
k
k
a
k
r
4
2
1
=
+
+
+
-
^
h
6
@
where
,
cos
cos
cos
mau
r I
I
m l
I
m
m
r
I
m
m
r r
I
I
m lr I r
m m l r r
I m l r
2
3
2
3
2
2
3
r
w k
x
a
w
a
k
k
x
a
k
k
w
k
x
a
k
w k
a
k
k
w
w
a
k
2
2
4
2
2 2
2
2
2 2 2
2 2
2
a
a
a
=
+
+
+
+
+
+
+
+
+
+
e
^
^
^
^
h
h
h
h
o
 
,
a
K r r
m l
m r l
I
mau
p
ip k w
a
a k
y
p
31
2
2
1
=
+
+
-
^
h
 
,
co s
a
m glr
m lr
I r
mau
2
3
p
a
k
a
w
w k
p
32
2
2
2
1
a
=-
-
-
^
h
 
.
,
co s
a
r
I K
r
I b r
I b r
m l r
K
b r
K
m lr r
mau
2
1 5
r
k
y
pp w
y
x
w
w
x
k
a
w
pp
x w
pp
a
k w
p
33
2
2
2
2
2
1
a
=
-
-
+
-
+
-
^
h
6
@
 
,
co s
a
b r
m lr
I r
mau
2
3
p
ry
k
a
w
w k
p
34
2
2
2
1
a
=
-
-
^
h
 
,
a
K r r
m l
m r l
I
mau
p
ip k w
a
a k
y
p
35
2
2
1
=-
+
+
-
^
h
 
,
a
K r r
I
m
m
r
m lr mau
2
p
ip k w
k
a
k
k
a
k
p
41
2
1
=-
+
+
+
-
^
h
6
@
 
,
co s
a
m gl
I r
m
m
r r
I r
mau
2
2
3
p
a
k
w
a
k
k
w
w k
p
42
2
2 2
2
2
1
a
=
+
+
+
-
^
h
6
@
 
,
co s
a
r
K
r
I
m r
m r
m lr
I b r
b m lr r
mau
2
3
2
p
k
pp w
k
a k
k
k
a
k
w
x
k
x
a
k
w
p
43
2
2
2
2
2
1
a
=-
+
+
+
+
-
-
^
h
6
@
 
,
co s
a
b
I r
m
m
r r
I r
mau
2
2
3
p
ry
k
w
a
k
k
w
w k
p
44
2
2 2
2
2
1
a
=-
+
+
+
-
^
h
6
@
 
,
a
K r r
I
m
m
r
m lr mau
2
p
ip k w
k
a
k
k
a
k
p
45
2
1
=
+
+
+
-
^
h
6
@
 
,
b
K
r r
m l
m lr
I
mau
p
pp k w
a
a
k
y
p
3
2
2
1
=-
+
+
-
^
h
 
,
b
K
r r
I
m
m
r
m lr mau
2
p
pp k w
k
a
k
k
a
k
p
4
2
1
=
+
+
+
-
^
h
6
@
where
.
cos
cos
cos
mau
r I
I
m l
I
m
m
r
I
m
m
r r
I
I
m lr I r
m m l r r
I m l r
2
3
2
3
2
2
3
p
w k
y
a
w
a
k
k
y
a
k
k
w
k
y
a
k
w k
a
k
k
w
w
a
k
2
2
4
2
2 2
2
2
2 2 2
2 2
2
a
a
a
=
+
+
+
+
+
+
+
+
+
+
e
^
^
^
^
h
h
h
h
o
REFERENCE
[S1] J.-J. E. Slotine and W. Li, Applied Nonlinear Control. Engle-
wood Cliffs, NJ: Prentice-Hall, 1991.

30 IEEE CONTROL SYSTEMS MAGAZINE » APRIL 2018
numerical simulation, the control gains of the double-loop 
control system are fully tuned and selected.
 
» PI inner-loop controller: In the simulation, the PI 
in ner-loop controller parameters can be obtained as 
,
K
K
6
pr
pp
=
=
 
,
K
K
36
ir
ip
=
=
 with the desired natural 
frequency 
. ,
2 5
n
~ =
 desired damping ratio 
. ,
0 2
p =
 
and 
.
.
g
g
0 17
0
0
r
p
3
3
=
=
^
^
h
h
 
» LQR outer-loop controller: 
, R
Q a
r
ra and 
, R
Qpa
pa are 
positive definite symmetric matrices, which is in 
the forms of 
,
, ,
, ,
10 2 10 2 4
diag
Qra =
^
h  R
4
pa =
 and 
,
.
, ,
, ,
R
2
10 5 10 5 5
diag
Q
pa
pa
=
=
^
h
 Moreover, the per-
formance index (46) is optimized to obtain the associ-
ated state feedback results in vectors Kr and 
,
Kp  which 
are expressed as 
.
.
.
.
.
6 98
4 45 20 88 6 09 5 11
Kr = -
-
6
@ 
and 
.
.
.
.
.
.
3 27 4 01 29 07 8 54 5 72
Kp = -
6
@
The simulation is conducted with three tasks, includ-
ing balancing control with an initial nonzero tilt angle, 
balancing control with external disturbances, and trans-
ferring control.
Balancing Control with an Initial Nonzero Tilt Angle
The first simulation investigates the balancing performanc-
es of the ball segway system. In this simulation, the ball 
segway is initially motionless and placed on the floor with 
a roll angle of 2° in the x-axis and a pitch angle of 2° in the 
y-axis from the upright position. The numerical results in 
Figure 8 show that the double-loop control scheme can sta-
bilize overall state variables of the robot system. Thus, the 
PI-plus-feedforward inner-loop controller can overcome 
static friction.
Balancing Control with External Disturbances
For further validation of the robustness of the double-loop 
control system against external disturbances, an impulse 
disturbance force with an amplitude of 50 N is applied to 
the robot in the y z
–  plane, as well as in the x z
–  plane at 15 s 
after the balancing control begins.
The corresponding simulation responses are shown in 
Figure 9. When a kick is applied to the robot at 15 s, the tilt 
angles of the body in Figure 9(a) fluctuate the most at ap-
proximately 1.1° and then stabilize after 18 s. Figure 9(b) 
shows the ball trajectory on the floor. Under the action of 
the balancing controller, the robot continues to move in 
the direction of the kick to a new balancing position on 
the floor. The simulation results show that the ball segway 
system can stabilize all system state variables. This find-
ing indicates that the double-loop controller can maintain 
balance with a large amount of external disturbances.
0
–5
–10
2
1
0
–1
–2
–5
–100
1
2
3
4
5
0
1
2
3
4
5
0
1
2
3
4
6
5
Time (s)
x Position (cm)
y Position (cm)
Angle (°)
Control Input (Nm)
5
0
Roll
Pitch
ux
uy
FIGURE 8  Simulation results for balancing control with an initial 
nonzero tilt angle. The nominal model corresponds to system pa-
rameters presented in Table 1. The control scheme can stabilize 
the system-state variables. The simulation results show that the 
controller is adequate in controlling balancing and station-keeping 
of the ball segway on the floor.
1.5
1
0.5
0
–0.5
–1.5
–1
–5
–15
–10
–12 –10 –8
–6
–4
–2
0
2
4
6
8
0
5
10
15
20
30
25
x Position (cm)
(b)
Time (s)
(a)
Angle (°)
y Position (cm)
5
10
0
Roll
Pitch
FIGURE 9  Simulation results of balancing control with external dis-
turbances. The dotted line shows a response when a 50-N im-
pulse is applied to the two-dimensional ball segway model in the 
x z
–  plane. The solid line shows the case when the same impulse 
is applied in the 
z
y–  plane. (a) The tilt angles of the body. (b) The 
trajectory of the ball on the floor.

APRIL 2018 « IEEE CONTROL SYSTEMS MAGAZINE 31
Transferring Control
The transferring control results of the LQR and PI dou-
ble-loop controller are presented to show the trajectory 
of the ball segway on the floor. For tracking control, the 
robot transfers from the initial position 
,
,
x
y
0 0
k
k =
^
^
h
h 
to the goal position 
,
.
, .
.
x
y
0 1 3
0 37
m
m
k
k = -
^
^
h
h  The ball 
segway should ensure the balance of the body in the ver-
tical position, following the model of an inverted pendu-
lum when moving on the floor. The reference position 
should be ramped to create the tilt angle of the body 
with a small value. Figure 10 shows the point-to-point 
transferring control responses. The transferring simu-
lation shows two instances of reference positions, step 
and ramp. The tilt angles of the body created when the 
reference position is a step are considerably larger than 
that of the body created when the reference position is 
a ramp. The simulation results show that the ramping 
position reference of the ball is necessary to control the 
transferring in point-to-point motion.
EXPERIMENT AND RESULT ANALYSIS
Ball Segway Hardware Structure
In this study, an Intel NUC minicomputer is used to acquire 
measurements and provide control input signals. Three 
circuit cards attached to the brushless dc motor blocks are 
used to send pulse width modulation signals that control the 
brushless dc motors and acquire signals from the encoders.
Three encoders with a resolution of 4000 counts/revolu-
tion and a microstrain IMU are used. The data from the 
three encoders, which are placed on the passive rollers of 
the driving motors, are used to estimate the position and 
velocity of the ball based on kinematics (5). The body an-
gles are obtained by the IMU, which consists of an acceler-
ometer with a resolution of <0.1 mg and a gyroscope with a 
resolution of <0.008°/s. The accelerometer measures linear 
accelerations of the robot along the 
,
,
x y
-
-  and z-axes with 
high-frequency noise. The gyroscope measures the angular 
velocities around the 
,
,
x y
-
-  and z-axes with low-frequency 
0.4
0.2
–0.2
2
0
–2
–4
–5
5
0
0
0.05
0
–0.05
–0.1
–0.15
0.5
0
–0.5
–1
2
1
0
–1
–2
0
5
10
15
20
0
5
10
15
20
0
5
10
15
20
0
5
10
15
20
0
5
10
15
20
0
5
10
15
20
Time (s)
Time (s)
y Position (m)
Roll Angle (°)
ux (Nm)
x Position (m)
Pitch Angle (°)
uy (Nm)
Ramp
Step
FIGURE 10  Simulation results of transferring control. The blue solid lines show the system responses when the desired reference input 
is given as a step position. The red dotted lines show the system responses when the desired reference input is given as a ramp, which 
is a velocity of 0.01 m/s. The controller can stabilize all state variables and control movement of the ball segway from the initial to the 
desired reference target.

32 IEEE CONTROL SYSTEMS MAGAZINE » APRIL 2018
(a) 
SW
Emerg.
SW
Mini PC
Arduino
Mega
Motor
Controller
+ Encoder
Controller
+ Encoder
Controller
+ Encoder
Motor
Motor
Bead
Bead
LM629_1
LM629_2
LM629_3
LM629_4
PGM32
L-3260E
PGM32
L-3260E
PGM32
L-3260E
PGM32
L-3260E
Maxon
EC4pole
Maxon
EC4pole
Maxon
EC4pole
Maxon
EC4pole
Hub USB
ESCON-
M50-5
Joy Stick
IMU
RS232
RS232
USB
48 V
10 A
48 V
10 A
48 V
10 A
48 Vdc
25 A
19 Vdc
4 A
5 Vdc
2.5 A
24 Vdc
16 A
dc/dc Conv.
dc 48 V
40-A
Lithium Battery
48–12 V
10 A
dc/dc
Conv.
24 Vdc 5 Ax4
DIO
Port
RS232
+–
Power Line
Signal Line
USB
 
(b)
Arduino
Mega 
Mini PC 
Power Supply
Controller  
Conv.
24 V/16 A 
LM629 
PGM32 
PGM32 
48 V Battery 
48 V/10 A 
Joystick USB 
IMU RS232 
Emerg. SW 
Motor RS232 
Conv. 5 V/2.5 A
Conv. 19 V/4 A  
FIGURE 11 A hardware block diagram and control board. The PC-based controller obtains tilt angles of the ball segway with an inertial 
measurement unit (IMU). Based on the obtained angle information, it compensates its posture by driving three Omni-Drive Modules. 
The control commands are transmitted to all Omni-Drive Modules, which are equipped with embedded motion controllers using RS-232 
daisy chain communication interface. The other controller is an Arduino Mega 2560-based controller that interfaces four brushless dc 
controllers for speed control of the flywheel motor in each control moment gyroscope (CMG) and for rotation control of the gimbal motor 
in each CMG. (a) The hardware block diagram. (b) The controller system and electrical circuit.

APRIL 2018 « IEEE CONTROL SYSTEMS MAGAZINE 33
noise. The IMU provides Kalman filtered pitch, roll, and 
yaw angles and angular rates with respect to gravity. The 
IMU and encoders provide all data required for full-state 
feedback control.
Two 48-V lithium battery packs supply power for three 
driving motors, a control moment gyroscope (CMG) cluster, 
sensors, and other devices with operating times of several 
hours. A wireless joystick is used to control the transfer-
ring of the ball segway in point-to-point motion.
The control algorithm is realized in the Intel NUC mini-
computer using Visual Studio C++. The program also con-
sists of torques conversion and kinematics to estimate the 
position of the robot on the floor. Its control interval is set 
at 15 ms. The control block diagram of the ball segway is 
shown in Figure 11.
The ball segway is controlled using the LQR and PI 
double-loop controller. The purpose of the experiment is 
to control the ball segway balancing and stable transfer-
ring. Four experimental cases, namely, balancing control 
with an initial zero tilt angle, balancing control with an 
initial nonzero tilt angle, balancing control with external 
 disturbances, and transferring control, are illustrated in 
the succeeding subsections.
Balancing Control with an Initial Zero Tilt Angle
This section aims to present the performance of the double-
loop control scheme for balancing and station-keeping. The 
balancing control at a fixed position is tested. Typical data 
obtained from the ball segway are shown in Figure 12. The 
robot is commanded to maintain its position while balanc-
ing on the floor. During balancing and station-keeping on 
the floor, the amount of deviation of the body tilt angles is 
at the most 0.4°, as shown in Figure 12(a). The angular veloci-
ties of the body change from −2°/s to 2°/s [Figure 12(b)]. Most 
trajectories of the ball segway during the experiment are 
within a rough ellipse with a major axis that has a length of 
8.66 cm and a minor axis of 4.81 cm, as shown in Figure 12(c).
Balancing Control with an Initial Nonzero Tilt Angle
Initially, the ball segway is out of power and placed on 
the floor with 5° tilt angles in the x- and y-axes from the 
upright position. Figure 13 shows the system responses 
while the ball segway stands itself from the initial power-
off position by supplying power and controls balancing 
with the LQR and PI double-loop control algorithm. Fig-
ure 13(a) shows that the ball segway can balance at the ver-
tical position after 
,
t
2 s
s =
 where the steady-state error of 
the roll angle is 0.4° and that of the pitch angle is 0.3°. The 
ball segway then maintains balance at the new position at 
,
.
,
.
x
y
12 1
7 8
cm
cm
k
k =
-
^
^
h
h on the floor rather than stay-
ing at the origin, as indicated in Figure 13(c). The angular 
rates of the body are shown in Figure 13(b). The steady-state 
error of the roll rate is approximately 2.1°/s and that of the 
pitch rate is approximately 2.5°/s. Evidently, the double-loop 
controller can manage an initial nonzero tilt angle. The com-
panion video [26] shows that the ball segway successfully 
balanced with an initial nonzero tilt angle.
Balancing Control with External Disturbances
Experiments are conducted to demonstrate the robust 
balancing stability of the ball segway against external 
disturbances. A control effort, which is considered as a 
feedforward control, is added to the system to eliminate 
friction, model uncertainties, and external disturbances. 
The experimental scenario is as follows: when the ball seg-
way is balancing on the floor, a trained person is asked to 
kick it in a controlled manner; the measured value of the 
kick is approximately 350 N.
Figure 14 shows the responses of the ball segway in 
the kicking experiment. The trained personnel kicked the 
robot at 15.2 s after the experiment began, and the high-
est peak of the tilt angle of the body was obtained at that 
0.6
0.4
0.2
0
–0.2
–0.6
–0.4
–1
–3
–2
0
2
4
6
8
1 0
1 2
1 4
1 6
1 8
0
2
4
6
8
1 0
1 2
1 4
1 6
1 8
Time (s)
(b)
Time (s)
(a)
Angle (°)
Angular Velocity (°/s)
1
2
3
0
0
–4
–2
–6
–4 –3
–5
–2
–1
0
1
2
3
4
x Position (cm)
(c)
y Position (cm)
4
6
8
2
Roll
Pitch
Roll
Pitch
FIGURE 12  Experimental results of balancing control with an initial 
zero tilt angle. The controller is tuned to balance and station-keep 
the ball segway in a noisy environment. (a) Tilt angles of the body 
during balancing. (b) Angular velocities of the body during balanc-
ing. (c) The position of the ball on the floor.

34 IEEE CONTROL SYSTEMS MAGAZINE » APRIL 2018
point, as shown in Figure 14(a). The corresponding tra-
jectory of the ball segway in Figure 14(b) shows that it 
moved from its initial position to a new position around 
,
,
x
y
18
1
cm
cm
k
k = -
-
^
^
h
h on the floor and balanced at 
this new point. The experimental results indicate that the 
ball segway can efficiently resist a large amount of exter-
nal disturbances. Obviously, the double-loop controller can 
manage large external disturbances, such as kicking. Some 
investigation results are shown in [26].
Transferring Control
The transferring experiment has encountered a problem 
related to the large mass and inertia of the ball and the en-
tire system. Driving motors should create large torques to 
overcome static friction of the system with heavy weight 
and prevent large inertial force when stopping the ball seg-
way. Several trials of various linear control methods of a 
single-loop control structure were unsuccessful in making 
the ball segway transfer while balancing. By contrast, the 
double-loop control scheme was successful for point-to-
point transferring of the ball segway while balancing.
To demonstrate the ability of the ball segway to move 
in any direction on the floor, it was commanded to move 
from point to point and track a desired straight line. This test 
validated the capabilities of the control system.
The first-position control experiment is conducted to 
determine the transferring performance of the robot on the 
floor. The state-weighting matrix Q and factor R are rede-
fined in this experiment. By varying the matrix Q and factor 
4
2
1
3
0
–3
–2
–1
–10
–30
–20
0
5
10
15
20
25
30
0
5
10
15
20
25
30
Time (s)
(b)
Time (s)
(a)
Angle (°)
Angular Velocity (°/s)
10
20
30
0
0
–10
–5
–25
–15
–10
–20
–5
0
5
10
15
x Position (cm)
(c)
y Position (cm)
10
15
5
Roll
Pitch
Roll
Pitch
FIGURE 14  Experimental results of balancing control with large ex-
ternal disturbances. Under large disturbances, such as kicking, 
the ball segway can maintain balance and remain in a vertical po-
sition. However, under the action of the balancing controller, the 
ball segway continues to move in the direction of the force until 
the friction of the floor slows it down and brings it to rest at a new 
position on the floor. The experimental results prove the robust-
ness of the double-loop control system when it is affected by large 
external disturbances. (a) Roll and pitch angles of the body during 
kicking. (b) Angular velocities of the body during kicking. (c) The 
position of the ball on the floor during kicking.
6
4
2
0
–4
–2
–10
–30
–20
0
1
2
3
4
5
6
7
8
10
9
0
1
2
3
4
5
6
7
8
10
9
Time (s)
(b)
Time (s)
(a)
Angle (°)
Angular Rate (°/s)
10
20
0
–6
–10
–8
–2
2
4
0
6
8
10
12
14
x Position (cm)
(c)
y Position (cm)
–2
0
2
–4
Roll
Pitch
Roll
Pitch
FIGURE 13  Experimental results of balancing control with an initial 
nonzero tilt angle. In this experiment, the ball segway is at the 
initial condition of 5° in the x-axis and 5° in the y-axis at a fixed 
position. (a) Roll and pitch angles of the body. (b) Roll and pitch 
rates of the body. (c) Position trajectories of the ball on the floor.

APRIL 2018 « IEEE CONTROL SYSTEMS MAGAZINE 35
,
R  the feedback control gains changed. The ball segway is 
required to transfer along the x-axis from the initial position 
,
,
x
y
0 0
k
k =
^
^
h
h to the target position 
,
.
,
.
x
y
11 5
0
m
m
k
k =
^
^
h
h  
The desired position is ramped to obtain a sufficient pitch 
angle of the body. The experimental results are shown in 
Figure 15. The position error is nearly 15 cm in the x-direc-
tion, as shown in Figure 15(a). The roll and pitch angle tra-
jectories of the body during the point-to-point transfer are 
shown in Figure 15(b).
The second-position control experiment aims to transfer 
the robot from one direction and follow a desired straight 
line. Figure 16(a) shows the desired trajectory and the posi-
tion response of the ball segway. In Figure 16(a), the robot 
is commanded to move and track the desired path from 
the origin to the goal point 
,
,
x
y
14
10
m -
m
k
k =
^
^
h
h within 
20 s. The body tilt angles are shown in Figure 16(b). A 
20-cm position error occurs at the final position. Unknown 
–12
–10
–8
–6
–4
–2
0
2
–2
0
2
4
14
16
6
10
12
8
x Position (m)
(a)
y Position (m)
1.5
–1.5
–1
0
0.5
1
–0.5
0
2
4
6
8
12
10
14
16
18
20
Time (s)
(b)
Angle (°)
2.5
2
Roll
Pitch
Real Path
Desired Path
FIGURE 16  Experimental results of straight-line tracking control. 
The straight-line path is generated by commanding the ball seg-
way to move at a constant velocity for a period of 20 s. (a) The 
trajectory of the ball for tracking the straight line. (b) The tilt angles 
of the body during straight-line tracking.
–2
0
2
4
6
8
10
12
Time (s)
(a)
Position (m)
1.5
–1.5
–1
0
0.5
1
–0.5
0
5
10
15
20
25
30
0
5
10
15
20
25
30
Time (s)
(b)
Angle (°)
2.5
2
yk
xk
Desired Path
Roll
Pitch
FIGURE 15  Experimental results of transferring control along the 
x-axis. The ball segway is commanded to move from its origin 
along the x-axis to the goal position 
.
.
x
11 5 m
=
^
h  (a) The position 
of the ball on the floor while transferring. (b) Tilt angles of the body 
while transferring.
50
40
–10
0
10
20
30
–1
–0.5
0
1
2
3
4
7
6
5
8
0
1
2
3
4
7
6
5
8
Time (s)
(b)
Time (s)
(a)
Yaw Angle (°/s)
Angle (°)
0.5
1
0
0
–15
–10
–5
–4
0
2
–2
4
6
8
12
10
14
x Position (cm)
(c)
y Position (cm)
5
Roll
Pitch
FIGURE 17  Experimental results of rotating control around the verti-
cal axis. Based on the two-dimensional model for the x y
–  plane, 
a proportional-derivative controller is utilized to control the rotation 
of the ball segway around the z-axis. (a) The yaw angle of the body. 
(b) Tilt angles of the body. (c) The position of the ball on the floor.

36 IEEE CONTROL SYSTEMS MAGAZINE » APRIL 2018
disturbances, system parameters and modeling uncertain-
ties, floor conditions, and undefined friction cause control 
disorder and make the system unstable.
Rotating Control
An experiment is conducted to investigate the rotating 
motion of the ball segway. The yaw angle and angular ve-
locity are directly measured using the IMU sensor. A PD 
controller is deployed to control the rotation of the ball 
segway around the z-axis. The rotational rate of the ball 
segway can be changed by varying the control gains of the 
PD controller. Figure 17(a) shows the yaw angle while the 
ball segway balances on the floor, as shown in Figure 17(b). 
Figure 17(c) shows the position of the ball in the small mov-
ing distance on the floor while rotating around the vertical 
axis. Rotation experiment results are available in [27].
Figure 18 shows the photos from the ball segway opera-
tion experiment. The LQR and PI double-loop controller 
shown in the aforementioned results indicates satisfactory 
control performance. Thus, this controller is suitable for 
real-time control of the ball segway.
CONCLUSIONS
The structure of a ball segway is presented in this study, where 
the mechanism and hardware architecture of the ball segway 
are illustrated. The nonlinear dynamic model of the 2-D ball 
segway is obtained using the Euler–Lagrange equation and the 
decoupling method. The nonlinear motion equations of the ro-
bot are then linearized around an equilibrium point. Based on 
the double-loop control system and the linear model of the ball 
segway, the balancing, robustness, and transferring controllers 
have been synthesized by the double-loop control system that 
consists of a PI plus feedforward inner-loop controller and an 
LQR outer-loop controller. Simulations and experiments are 
conducted, and their results show that the double-loop control 
system successfully controls its balance in a real environment. 
The experimental results indicate that the ball segway can 
simultaneously track the desired trajectory and maintain its 
(a)
(b)
(c)
(d)
FIGURE 18  Photos from a motion experiment. (a) Balancing the ball segway on the floor. (b) The robustness of the double-loop control 
system against a kick. (c) The ball segway transporting a person on the floor. (d) Controlling movement and rotation using a joystick.

APRIL 2018 « IEEE CONTROL SYSTEMS MAGAZINE 37
balancing stability. Moreover, the robust properties of the con-
troller under large external disturbances are inherited from the 
double-loop control scheme. The experimental results dem-
onstrate that the ball segway not only simultaneously tracks 
the desired trajectory and maintains balancing but also rotates 
around the vertical axis.
ACKNOWLEDGMENTS
This research was supported by the Development of Ro-
bot System for Inspecting and Cleaning an Industrial Elec-
trostatic Precipitators Program through the MKE (Grant 
Number: 10067781) and by the Development of Autono-
mous Navigation Algorithm for a High-Speed Unmanned 
Surface Vehicle Program of LIG Nex1 Co. Ltd. It was also 
supported by the Senior-Friendly Product R&D Program 
funded by the Ministry of Health and Welfare through the 
Korea Health Industry Development Institute (HI15C1027).
AUTHOR INFORMATION
Dinh Ba Pham received the B.E. and M.S. degrees in me-
chanical engineering from Vietnam Maritime University, 
Hai Phong, Vietnam, in 2007 and 2012, respectively. He 
is currently a Ph.D. student in mechanical engineering at 
Kyung Hee University, Yongin, Korea. His research inter-
ests include robotics, dynamics, applied nonlinear control, 
and control of industrial machines.
Hyung Kim received the B.E. degree in mechanical en-
gineering from NILE, Korea, and the M.S. degree in me-
chanical engineering from Kyung Hee University, Korea, in 
2008 and 2010, respectively. He is currently a Ph.D. student 
in mechanical engineering at Kyung Hee University. His 
research interests include applied mobile robots, environ-
ment recognition, and intelligent control.
Jaejun Kim received the B.E degree from Dong-Eui Uni-
versity, Korea, and M.S. degree in mechanical engineering 
from Kyung Hee University, Korea, in 2007 and 2009, respec-
tively, where he is currently a Ph.D. student. His research in-
terests include robotics and control of industrial machines.
Soon-Geul Lee (sglee@khu.ac.kr) received the B.E. degree 
in mechanical engineering from Seoul National University, 
Korea, in 1983, the M.S. degree in production engineering 
from KAIST, Seoul, Korea, in 1985, and the Ph.D. in mechani-
cal engineering from the University of Michigan in 1993. 
Since 1996, he has been a professor in the Department of Me-
chanical Engineering of Kyung Hee University, Yongin, Ko-
rea. His research interests include robotics and automation, 
mechatronics, intelligent control, and biomechanics.
REFERENCES
[1] T. B. Lauwers, G. A. Kantor, and R. L. Hollis, “A dynamically stable sin-
gle-wheeled mobile robot with inverse mouse-ball drive,” in Proc. IEEE Int. 
Conf. Robotics and Automation, 2006, pp. 2884–2889.
[2] U. Nagarajan, G. Kantor, and R. Hollis, “The ballbot: An omnidirectional 
balancing mobile robot,” Int. J. Robotics Res., vol. 33, no. 6, pp. 917–930, 2014.
[3] M. Kumaga and T. Ochiai, “Development of a robot balanced on a ball & 
application of passive motion to transport,” in Proc. IEEE Int. Conf. Robotics 
and Automation, 2009, pp. 4106–4111.
[4] L. Hertig, D. Schindler, M. Bloesch, C. D. Remy, and R. Siegwart, “Uni-
fied state estimation for a ballbot,” in Proc. IEEE Int. Conf., Robotics and Au-
tomation, 2013, pp. 2471–2476.
[5] M. Akbari, H. Zabihi Kheibari, and A. S. Moosavi Nejad, “Timing belt 
gearbox in Ballbot robot,” in Proc. 1st RSI/ISM Int. Conf. Robotics and Mecha-
tronics, 2013, pp. 431–436.
[6] N. Aphiratsakun, P. K. Remi Nordeng, M. Suikkanen, and N. Lorpa-
tanakasem, “Implementation of AU balancing ballbot,” in Proc. Int. Electri-
cal Engineering Congr., 2014, pp. 1–4.
[7] T. Endo and Y. Nakamura, “An omnidirectional vehicle on a basketball,” 
in Proc. 12th Int. Conf. Advanced Robotics, 2005, pp. 573–578.
[8] H. Y. Han, T. Y. Han, and H. S. Jo, “Development of omnidirectional 
self-balancing robot,” in Proc. IEEE Int. Symp. Robotics and Manufacturing 
Automation, 2014, pp. 57–62.
[9] B. Vaidya, M. Shomin, R. Hollis, and G. Kantor, “Operation of the ballbot 
on slopes and with center-of-mass offsets,” in Proc. IEEE Int. Conf. Robotics 
and Automation, 2015, pp. 2383–2388.
[10] C. C. Tsai, C. K. Chan, and L. C. Kuo, “LQR motion control of a ball-
riding robot,” in Proc. IEEE/ASME Int. Conf. Advanced Intelligent Mechatron-
ics, 2012, pp. 861–866.
[11] T. Ching-Chih, J. Ming-Han, C. Cheng-Kai, L. Ching-Wen, and C. Siang-
Jyun, “Self-balancing and position control using multi-loop approach for 
ball robots,” in Proc. Int. Conf. System Science and Engineering, 2010, pp. 
251–256.
[12] K. Sukvichai and M. Parnichkun, “Double-level ball-riding robot 
balancing: From system design, modeling, controller synthesis, to perfor-
mance evaluation,” Mechatronics, vol. 24, pp. 519–532, July 2014. 
[13] L. Ching-Wen, T. Ching-Chih, L. Yi Yu, and C. Cheng-Kai, “Dynamic 
modeling and sliding-mode control of a Ball robot with inverse mouse-ball 
drive,” in Proc. Annu. Conf. Society Instrument and Control Engineers Japan, 
2008, pp. 2951–2955.
[14] R. A. Garcia-Garcia and M. Arias-Montiel, “Linear controllers for the 
NXT ballbot with parameter variations using linear matrix inequalities,” 
IEEE Control Syst., vol. 36, no. 3, pp. 121–136, June 2016. 
[15] C. Chih-Hui and T. Wen-Ru, “Design and implementation of an omni-
directional spherical mobile platform,” IEEE Trans. Ind. Electron., vol. 62, pp. 
1619–1628, Mar. 2015. 
[16] J. Jian, M. Wang, N. Lv, Y. Yang, K. Zhang, Y. Li, “Standing-up control 
and ramp-climbing control of a spherical wheeled robot,” in Proc. 13th Int. 
Conf. Control Automation Robotics and Vision, 2014, pp. 1386–1391.
[17] C. H. Chiu and Y. F. Peng, “Omni-directional spherical mobile system 
control,” in Proc. 9th Asian Control Conf., 2013, pp. 1–4.
[18] C.-H. Chiu, Y.-F. Peng, W.-R. Tsai, and M.-H. Chou “Design of an omni-
directional spherical robot: Using fuzzy control,” in Proc. Int. Multi-Conf. 
Engineers and Computer Scientists, 2009, vol. I, p. 6.
[19] T. Ching-Chih, C. Chang Hsuan, T. Feng-Chun, and H. Kao-Shing, 
“Adaptive RFWCMAC cooperative formation control for multiple ballbots 
incorporated with coupling dynamics,” in Proc. Int. Conf. Informative and 
Cybernetics Computational Social Systems, 2015, pp. 59–65.
[20] S.-E. Choi, Y.-J. Kim, and J.-J. Ko. (2015). Pan and history of the tech-
campaign of Hankook Tire Co. [Online]. Available: https:// www.youtube 
.com/watch?v=iGwidDckzik
[21] P. D. Ba, S.-G. Lee, S. Pack, J. Kim, and M.-K. Lee, “Balancing and trans-
lation control of a ball Segway that a human can ride,” in Proc. 16th Int. Conf. 
Control Automation and Systems, 2016, pp. 477–480.
[22] A. Weiss, R. G. Langlois, and M. J. D. Hayes, “The effects of dual row 
omnidirectional wheels on the kinematics of the Atlas spherical motion 
platform,” Mechanism Mach. Theory, vol. 44, pp. 349–358, May 2008.
[23] K. v. d. Blonk. (2014, July). Modeling and control of a ball-balancing 
robot. M.S. thesis, Internship and Master Elect. Eng. Math. Computer Sci., 
Univ.  Twente, Alten. [Online]. Available: https://www.utwente.nl/en/
eemcs/sacs/teaching/Thesis/blonk.pdf 
[24] H. E. A. Ibrahim, F. N. Hassan, and A. O. Shomer, “Optimal PID control 
of a brushless DC motor using PSO and BF techniques,” Ain Shams Eng. J., 
vol. 5, pp. 391–398, Nov. 2013.
[25] K. Ogata, Modern Control Engineering, 5th ed. New York: Pearson, 2010.
[26] D. B. Pham and S.-G. Lee. (2017). Ball segway balancing and robust 
control against external disturbance. [Online]. Available: https://www 
.youtube.com/watch?v=1Xp0yDVX1pw
[27] D. B. Pham and S.-G. Lee. (2017). The ball segway test for balancing, 
rotating, and moving. [Online]. Available: https://www. youtube.com/
watch?v=yyuXKmpDweQ
 

