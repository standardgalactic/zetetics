Spacecraft 
Dynamics
and Control
An Introduction
Anton H.J. de Ruiter | Christopher J. Damaren | James R. Forbes


SPACECRAFT
DYNAMICS AND
CONTROL


SPACECRAFT
DYNAMICS AND
CONTROL
AN INTRODUCTION
Anton H.J. de Ruiter
Ryerson University, Canada
Christopher J. Damaren
University of Toronto, Canada
James R. Forbes
McGill University, Canada
A John Wiley & Sons, Ltd., Publication

This edition ﬁrst published 2013
C⃝2013 John Wiley & Sons, Ltd
Registered ofﬁce
John Wiley & Sons Ltd, The Atrium, Southern Gate, Chichester, West Sussex, PO19 8SQ, United Kingdom
For details of our global editorial ofﬁces, for customer services and for information about how to apply for
permission to reuse the copyright material in this book please see our website at www.wiley.com.
The right of the author to be identiﬁed as the author of this work has been asserted in accordance with the Copyright,
Designs and Patents Act 1988.
All rights reserved. No part of this publication may be reproduced, stored in a retrieval system, or transmitted, in any
form or by any means, electronic, mechanical, photocopying, recording or otherwise, except as permitted by the UK
Copyright, Designs and Patents Act 1988, without the prior permission of the publisher.
Wiley also publishes its books in a variety of electronic formats. Some content that appears in print may not be
available in electronic books.
Designations used by companies to distinguish their products are often claimed as trademarks. All brand names and
product names used in this book are trade names, service marks, trademarks or registered trademarks of their
respective owners. The publisher is not associated with any product or vendor mentioned in this book. This
publication is designed to provide accurate and authoritative information in regard to the subject matter covered. It is
sold on the understanding that the publisher is not engaged in rendering professional services. If professional advice
or other expert assistance is required, the services of a competent professional should be sought.
Library of Congress Cataloging-in-Publication Data
De Ruiter, Anton H. J.
Spacecraft dynamics and control : an introduction / Anton H.J. de Ruiter, Christopher Damaren, James R. Forbes.
pages cm
Includes bibliographical references and index.
ISBN 978-1-118-34236-7 (hardback)
1. Space vehicles–Attitude control systems.
2. Space vehicles–Dynamics.
I. Damaren, Christopher.
II. Forbes, James R.
III. Title.
TL3260.D33 2013
629.4′1–dc23
2012033616
A catalogue record for this book is available from the British Library.
ISBN: 9781118342367
Typeset in 10/12pt Times by Aptara Inc., New Delhi, India

To Janice, Thomas, Benjamin, Therese and Marie
A.dR
To Yvonne, Gwen, and Georgia
C.J.D
For Allison
J.R.F


Contents
Preface
xvii
1
Kinematics
1
1.1
Physical Vectors
1
1.1.1
Scalar Product
2
1.1.2
Vector Cross Product
3
1.1.3
Other Useful Vector Identities
6
1.2
Reference Frames and Physical Vector Coordinates
6
1.2.1
Vector Addition and Scalar Multiplication
8
1.2.2
Scalar Product
9
1.2.3
Vector Cross Product
10
1.2.4
Column Matrix Identities
10
1.3
Rotation Matrices
11
1.3.1
Principal Rotations
14
1.3.2
General Rotations
15
1.3.3
Euler Angles
22
1.3.4
Quaternions
24
1.4
Derivatives of Vectors
32
1.4.1
Angular Velocity
34
1.4.2
Angular Velocity in Terms of Euler Angle Rates
37
1.4.3
Angular Velocity in Terms of Quaternion Rates
38
1.5
Velocity and Acceleration
41
1.6
More Rigorous Deﬁnition of Angular Velocity
42
Notes
44
References
45
2
Rigid Body Dynamics
47
2.1
Dynamics of a Single Particle
47
2.2
Dynamics of a System of Particles
49
2.3
Rigid Body Dynamics
52
2.3.1
Translational Dynamics
53
2.3.2
Rotational Dynamics
54

viii
Contents
2.4
The Inertia Matrix
56
2.4.1
A Parallel Axis Theorem
57
2.4.2
A Rotational Transformation Theorem
58
2.4.3
Principal Axes
59
2.5
Kinetic Energy of a Rigid Body
60
Notes
63
References
63
3
The Keplerian Two-Body Problem
65
3.1
Equations of Motion
65
3.2
Constants of the Motion
67
3.2.1
Orbital Angular Momentum
67
3.2.2
Orbital Energy
67
3.2.3
The Eccentricity Vector
68
3.3
Shape of a Keplerian Orbit
69
3.3.1
Perifocal Coordinate System
72
3.4
Kepler’s Laws
80
3.5
Time of Flight
83
3.5.1
Circular Orbits
83
3.5.2
Elliptical Orbits
84
3.5.3
Parabolic Orbits
88
3.5.4
Hyperbolic Orbits
89
3.6
Orbital Elements
89
3.6.1
Heliocentric-Ecliptic Coordinate System
89
3.6.2
Geocentric-Equatorial Coordinate System
90
3.7
Orbital Elements given Position and Velocity
92
3.8
Position and Velocity given Orbital Elements
94
Notes
98
References
98
4
Preliminary Orbit Determination
99
4.1
Orbit Determination from Three Position Vectors
99
4.2
Orbit Determination from Three Line-of-Sight Vectors
103
4.3
Orbit Determination from Two Position Vectors and Time (Lambert’s
Problem)
109
4.3.1
The Lagrangian Coefﬁcients
110
Notes
114
References
114
5
Orbital Maneuvers
115
5.1
Simple Impulsive Maneuvers
115
5.2
Coplanar Maneuvers
116
5.2.1
Hohmann Transfers
118
5.2.2
Bi-Elliptic Transfers
120
5.3
Plane Change Maneuvers
123

Contents
ix
5.4
Combined Maneuvers
125
5.5
Rendezvous
127
Notes
128
Reference
128
6
Interplanetary Trajectories
129
6.1
Sphere of Inﬂuence
129
6.2
Interplanetary Hohmann Transfers
133
6.3
Patched Conics
137
6.3.1
Departure Hyperbola
139
6.3.2
Arrival Hyperbola
141
6.4
Planetary Flyby
143
6.5
Planetary Capture
145
Notes
146
References
147
7
Orbital Perturbations
149
7.1
Special Perturbations
150
7.1.1
Cowell’s Method
151
7.1.2
Encke’s Method
151
7.2
General Perturbations
154
7.3
Gravitational Perturbations due to a Non-Spherical Primary Body
156
7.3.1
The Perturbative Force Per Unit Mass Due to J2
163
7.4
Effect of J2 on the Orbital Elements
164
7.5
Special Types of Orbits
168
7.5.1
Sun-Synchronous Orbits
168
7.5.2
Molniya Orbits
169
7.6
Small Impulse Form of the Gauss Variational Equations
169
7.7
Derivation of the Remaining Gauss Variational Equations
171
Notes
180
References
181
8
Low Thrust Trajectory Analysis and Design
183
8.1
Problem Formulation
183
8.2
Coplanar Circle to Circle Transfers
184
8.3
Plane Change Maneuver
186
Notes
188
References
188
9
Spacecraft Formation Flying
189
9.1
Mathematical Description
190
9.2
Relative Motion Solutions
194
9.2.1
Out-of-Plane Motion
195
9.2.2
In-Plane Motion
195

x
Contents
9.2.3
Alternative Description for In-Plane Relative Motion
198
9.2.4
Further Examination of In-Plane Motion
200
9.2.5
Out-of-Plane Motion - Revisited
202
9.3
Special Types of Relative Orbits
203
9.3.1
Along-Track Orbits
203
9.3.2
Projected Elliptical Orbits
204
9.3.3
Projected Circular Orbits
207
Notes
207
Reference
207
10
The Restricted Three-Body Problem
209
10.1
Formulation
209
10.1.1
Equations of Motion
211
10.2
The Lagrangian Points
212
10.2.1
Case (i)
212
10.2.2
Case (ii)
213
10.3
Stability of the Lagrangian Points
214
10.3.1
Comments
215
10.4
Jacobi’s Integral
215
10.4.1
Hill’s Curves
216
10.4.2
Comments on Figure 10.5
218
Notes
218
References
218
11
Introduction to Spacecraft Attitude Stabilization
219
11.1
Introduction to Control Systems
220
11.1.1
Open-loop versus Closed-loop
220
11.1.2
Typical Feedback Control Structure
221
11.2
Overview of Attitude Representation and Kinematics
222
11.3
Overview of Spacecraft Attitude Dynamics
223
11.3.1
Properties of the Inertia Matrix - A Summary
224
12
Disturbance Torques on a Spacecraft
227
12.1
Magnetic Torque
227
12.2
Solar Radiation Pressure Torque
228
12.3
Aerodynamic Torque
230
12.4
Gravity-Gradient Torque
231
Notes
234
Reference
234
13
Torque-Free Attitude Motion
235
13.1
Solution for an Axisymmetric Body
235
13.2
Physical Interpretation of the Motion
242
Notes
245
References
245

Contents
xi
14
Spin Stabilization
247
14.1
Stability
247
14.2
Spin Stability of Torque-Free Motion
249
14.3
Effect of Internal Energy Dissipation
252
14.3.1
Energy Sink Hypothesis
252
14.3.2
Major Axis Rule
253
Notes
253
References
253
15
Dual-Spin Stabilization
255
15.1
Equations of Motion
255
15.2
Stability of Dual-Spin Torque-Free Motion
257
15.3
Effect of Internal Energy Dissipation
259
Notes
266
References
266
16
Gravity-Gradient Stabilization
267
16.1
Equations of Motion
268
16.2
Stability Analysis
272
16.2.1
Pitch Motion
272
16.2.2
Roll-Yaw Motion
273
16.2.3
Combined Pitch and Roll/Yaw
277
Notes
277
References
277
17
Active Spacecraft Attitude Control
279
17.1
Attitude Control for a Nominally Inertially Fixed Spacecraft
280
17.2
Transfer Function Representation of a System
281
17.3
System Response to an Impulsive Input
282
17.4
Block Diagrams
284
17.5
The Feedback Control Problem
286
17.6
Typical Control Laws
289
17.6.1
Proportional “P” Control
289
17.6.2
Proportional Derivative “PD” Control
290
17.6.3
Proportional Integral Derivative “PID” Control
291
17.7
Time-Domain Speciﬁcations
292
17.7.1
Transient Speciﬁcations
293
17.8
Factors that Modify the Transient Behavior
308
17.8.1
Effect of Zeros
308
17.8.2
Effect of Additional Poles
309
17.9
Steady-State Speciﬁcations and System Type
311
17.9.1
System Type
311
17.9.2
Step Input R(s) = 1
s (r(t) = 1).
313
17.9.3
Ramp Input R(s) = 1
s2 (r(t) = t)
314

xii
Contents
17.10
Effect of Disturbances
316
17.11
Actuator Limitations
319
Notes
320
References
320
18
Routh’s Stability Criterion
321
18.1
Proportional-Derivative Control with Actuator Dynamics
322
18.2
Active Dual-Spin Stabilization
325
Notes
330
References
330
19
The Root Locus
331
19.1
Rules for Constructing the Root Locus
332
19.1.1
Rules for constructing the root locus
335
19.1.2
Important Points
339
19.2
PD Attitude Control with Actuator Dynamics - Revisited
341
19.2.1
Interpretation of the root locus
344
19.3
Derivation of the Rules for Constructing the Root Locus
345
19.3.1
Rule 1
345
19.3.2
Rule 2
346
19.3.3
Rule 3
347
19.3.4
Rule 4
349
19.3.5
Rule 5
350
Notes
353
References
353
20
Control Design by the Root Locus Method
355
20.1
Typical Types of Controllers
357
20.1.1
Lead
358
20.1.2
Lag
358
20.1.3
Proportional-Derivative (PD)
360
20.1.4
Proportional-Integral (PI)
361
20.2
PID Design for Spacecraft Attitude Control
361
20.2.1
PI Design
363
20.2.2
PD Design
363
20.2.3
Computation of the Gain K
365
Notes
369
References
369
21
Frequency Response
371
21.1
Frequency Response and Bode Plots
372
21.1.1
Plotting the Frequency Response as a Function of ω (Bode Plots)
374
21.2
Low-Pass Filter Design
383
Notes
385
References
385

Contents
xiii
22
Relative Stability
387
22.1
Polar Plots
387
22.1.1
Type 0 Systems (N = 0)
388
22.1.2
Type 1 Systems (N = 1)
389
22.2
Nyquist Stability Criterion
390
22.2.1
Argument Principle
391
22.2.2
Stability Analysis of the Closed-Loop System
392
22.3
Stability Margins
399
22.3.1
Stability Margin Deﬁnitions
401
Notes
410
References
410
23
Control Design in the Frequency Domain
411
23.1
Feedback Control Problem - Revisited
416
23.1.1
Closed-Loop Tracking Error
417
23.1.2
Closed-Loop Control Effort
419
23.1.3
Modiﬁed Control Implementation
420
23.2
Control Design
422
23.2.1
Frequency Responses for Common Controllers
425
23.3
Example - PID Design for Spacecraft Attitude Control
430
Notes
435
References
435
24
Nonlinear Spacecraft Attitude Control
437
24.1
State-Space Representation of the Spacecraft Attitude Equations
437
24.2
Stability Deﬁnitions
440
24.2.1
Equilibrium Points
440
24.2.2
Stability of Equilibria
441
24.3
Stability Analysis
442
24.3.1
Detumbling of a Rigid Spacecraft
442
24.3.2
Lyapunov Stability Theorems
447
24.4
LaSalle’s Theorem
448
24.5
Spacecraft Attitude Control with Quaternion and Angular Rate Feedback
451
24.5.1
Controller Gain Selection
454
Notes
456
References
457
25
Spacecraft Navigation
459
25.1
Review of Probability Theory
459
25.1.1
Continuous Random Variables and Probability Density Functions
459
25.1.2
Mean and Covariance
462
25.1.3
Gaussian Probability Density Functions
464
25.1.4
Discrete-Time White Noise
466
25.1.5
Simulating Noise
466

xiv
Contents
25.2
Batch Approaches for Spacecraft Attitude Estimation
467
25.2.1
Wahba’s Problem
468
25.2.2
Davenport’s q-Method
468
25.2.3
The QUEST Algorithm
471
25.2.4
The TRIAD Algorithm
474
25.2.5
Example
475
25.3
The Kalman Filter
477
25.3.1
The Discrete-Time Kalman Filter
477
25.3.2
The Norm-Constrained Kalman Filter
481
25.3.3
Spacecraft Attitude Estimation Using the Norm-Constrained
Extended Kalman Filter
488
Notes
496
References
497
26
Practical Spacecraft Attitude Control Design Issues
499
26.1
Attitude Sensors
499
26.1.1
Sun-Sensors
499
26.1.2
Three-Axis Magnetometers
501
26.1.3
Earth Sensors
502
26.1.4
Star Trackers
504
26.1.5
Rate Sensors
505
26.2
Attitude Actuators
506
26.2.1
Thrusters
506
26.2.2
Magnetic Torquers
508
26.2.3
Reaction Wheels
509
26.2.4
Momentum Wheels
510
26.2.5
Control Moment Gyroscopes
510
26.3
Control Law Implementation
511
26.3.1
Time-Domain Representation of a Transfer Function
511
26.3.2
Control Law Digitization
514
26.3.3
Closed-Loop Stability Analysis
517
26.3.4
Sampling Considerations
519
26.4
Unmodeled Dynamics
523
26.4.1
Effects of Spacecraft Flexibility
524
26.4.2
Effects of Propellant Sloshing
538
Notes
539
References
539
Appendix A: Review of Complex Variables
541
A.1
Functions of a Complex Variable
544
A.2
Complex Valued Functions of a Real Variable
544
A.3
The Laplace Transform
546
A.4
Partial Fraction Expansions
550
A.5
Common Laplace Transforms
553
A.6
Example of Using Laplace Transforms to Solve a Linear Differential Equation
553

Contents
xv
Appendix B: Numerical Simulation of Spacecraft Motion
557
B.1
First Order Ordinary Differential Equations
557
B.2
Formulation of Coupled Spacecraft Orbital and Attitude
Motion Equations
558
Notes
561
Reference
561
Index
563


Preface
This book presents a fundamental introduction to spacecraft orbital and attitude dynamics
as well as its control. There are several excellent books related to these subjects. It is not
our intention to compete with these well-established texts. However, many of them assume
relatively signiﬁcant backgrounds on behalf of the reader, which can make them difﬁcult to
follow for the beginner. It is our hope that this book will ﬁll that void, and that by studying
this book, more advanced texts on the subject will become more accessible to the reader. This
book is suitable for ﬁrst courses in spacecraft dynamics and control at the upper undergraduate
level or at the beginning graduate level. The book is naturally split between orbital mechanics,
and spacecraft attitude dynamics and control. It could therefore be used for two one semester
courses, one on each subject. It could also be used for self-study.
The primary objective of this book is to educate, and the structure of the book reﬂects this.
This book could also be used by the professional looking to refresh some of the fundamentals.
We have made this book as self-contained as possible. In each chapter we develop a subject
at a fundamental level (perhaps drawing on results from previous chapters). As a result, the
reader should not only understand what the key mathematical results are, but also how they
were obtained and what their limitations are (if applicable). At the end of each chapter we
provide a few recommended references should the reader have interest in exploring the subject
further.
The assumed reader background is minimal. Junior undergraduate level mathematics and
mechanics taught in standard engineering programs should be sufﬁcient. While a background
in classical control theory would help, it is not necessary to have it in order to be able to
follow the treatment of spacecraft attitude control. The presentation in this book on spacecraft
attitude control is completely self-contained, and it could in fact be used as a substitute for a
complete ﬁrst (undergraduate level) course in classical control. The reader without a control
background will learn classical control theory motivated by a real system to be controlled,
namely, a spacecraft (as opposed to some abstract transfer functions). The reader with a prior
control background may gain new appreciation of the theory by seeing it presented in the
context of an application.
In Chapters 1 and 2, we present the vector kinematics and rigid body dynamics required to be
able to describe spacecraft motion. Chapters 3 to 10 contain the orbital mechanics component
of this book. Topics include the two-body problem, preliminary orbit determination, orbital
and interplanetary maneuvers, orbital perturbations, low-thrust trajectory design, spacecraft
formation ﬂying, and the restricted three-body problem. Chapter 11 presents a high level
overview of both passive and active means of spacecraft attitude stabilization, and provides

xviii
Preface
an introduction to control systems. Chapters 12 to 16 present aspects of spacecraft attitude
dynamics (disturbance torques and a solution for torque-free motion), and more detailed
treatments of passive means of spacecraft attitude stabilization. Chapters 17 to 23 present
active means of spacecraft attitude control using classical control techniques. Chapters 24 and
25 present introductions to some more advanced topics, namely nonlinear spacecraft attitude
control and spacecraft attitude determination. These chapters also provide a brief introduction
to nonlinear control theory and state estimation. Chapter 26 presents an overview of practical
issues that must be dealt with in designing a spacecraft attitude control system, namely different
spacecraft attitude sensor and actuator types, digital control implementation issues and effects
of unmodeled dynamics on spacecraft attitude control systems. Finally, Appendices A and B
contain some background reference material.
After ﬁnishing this book, the reader should have a strong understanding of the fundamentals
of spacecraft orbital and attitude dynamics and control, and should be aware of important
practical issues that need to be accounted for in spacecraft attitude control design. The reader
will be well-prepared for further study in the subject.
The ﬁrst author would like to express his deep gratitude to the Department of Mechanical
and Aerospace Engineering at Carleton University in Ottawa, Canada, for the opportunity
to develop and teach courses in orbital mechanics and spacecraft dynamics and control. The
notes developed for these courses were the starting point for much of this book.
The reader will notice that this book contains no exercises. This was a decision made
in order to keep the page count down. However, the reader will ﬁnd a full set of exercises
accompanying the book, as well as other supplementary material on the book’s companion
website: http://arrow.utias.utoronto.ca/damaren/book/.
Anton H.J. de Ruiter
Christopher J. Damaren
James R. Forbes

1
Kinematics
Spacecraft are free bodies, possessing both translational and rotational motion. The transla-
tional component is the subject of orbital dynamics, the rotational component is the subject
of attitude dynamics. It will be seen that the two classes of motion are essentially uncoupled,
and can be treated separately.
To be able to study the motion of a spacecraft mathematically, we need a framework for
describing it. For this purpose, we need to have a solid understanding of vectors and reference
frames, and the associated calculus.
1.1
Physical Vectors
A physical vector is a three-dimensional quantity that possesses a magnitude and a direction.
A physical vector will be denoted as ⃗r, for example. It can be represented graphically by an
arrow. Vector addition is deﬁned head-to-tail as shown in Figure 1.1. Multiplication of a vector
⃗r by a scalar a scales the magnitude by |a|. If a is positive, the direction is unchanged, and if
a is negative, the direction is reversed. It is also useful to deﬁne a zero-vector denoted by ⃗0,
which has magnitude 0, but no speciﬁed direction.
Under these deﬁnitions, physical vectors satisfy the following rules for addition:
(⃗a + ⃗b) + ⃗c = ⃗a + (⃗b + ⃗c),
⃗a + ⃗b = ⃗b + ⃗a,
⃗a + ⃗0 = ⃗a,
⃗a + (−⃗a) = ⃗0,
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

2
Spacecraft Dynamics and Control: An Introduction
a + b
a
b
Figure 1.1
Physical vector addition
and the following rules for scalar multiplication:
a(b⃗c) = (ab)⃗c,
(a + b)⃗c = a⃗c + b⃗c,
a(⃗b + ⃗c) = a⃗b + a⃗c,
1⃗a = ⃗a,
0⃗a = ⃗0.
It is very important to note that the concept of a physical vector is independent of a
coordinate system.
1.1.1
Scalar Product
Given vectors ⃗a and ⃗b, the scalar (or dot) product between the two vectors is deﬁned as
⃗a · ⃗b
= |⃗a| |⃗b| cos θ,
where 0 ≤θ ≤180◦is the small angle between the two vectors, as shown in Figure 1.2. By
this deﬁnition, the scalar product is commutative, that is
⃗a · ⃗b = ⃗b · ⃗a.
As demonstrated in Figure 1.2, the scalar product ⃗a · ⃗b is just the projection of ⃗a onto ⃗b
multiplied by |⃗b|. Projections are additive, as shown in Figure 1.3, therefore, the scalar product
is also distributive, that is
(⃗a + ⃗b) · ⃗c = ⃗a · ⃗c + ⃗b · ⃗c.
(1.1)
b
a
a b/ b
θ
Figure 1.2
Scalar product geometry

Kinematics
3
a
b
c
a + b
b
a · c/|c|
b · c/|c|
(a + b) · c/|c|
Figure 1.3
Distributivity of scalar product
The following properties are also readily veriﬁed from the deﬁnition
⃗a · ⃗a = |⃗a|2 ≥0,
(1.2)
⃗a · ⃗a = 0 ⇔⃗a = ⃗0,
(1.3)
⃗a · (c⃗b) = c⃗a · ⃗b,
(1.4)
⃗a · ⃗b = 0 ⇔⃗a ⊥⃗b or ⃗a = ⃗0 or ⃗b = ⃗0.
(1.5)
1.1.2
Vector Cross Product
Given vectors ⃗a and ⃗b, the cross-product is deﬁned as a vector ⃗c, denoted by ⃗c = ⃗a × ⃗b with
magnitude
|⃗c| = |⃗a| |⃗b| sin θ,
with a direction perpendicular to both ⃗a and ⃗b, chosen according to the right-hand rule, as
shown in Figure 1.4. Note that 0 ≤θ ≤180◦is again the small angle between the two vectors.
From the deﬁnition of the cross-product, it is clear that changing the order simply reverses
the direction of the cross-product, that is
⃗a × ⃗b = −⃗b × ⃗a.
θ
a
b
a × b
Figure 1.4
Vector cross product

4
Spacecraft Dynamics and Control: An Introduction
a
b
a b
a⊥b
θ
Figure 1.5
Parallel and perpendicular vector components
Now, as shown in Figure 1.5, the vector ⃗a can be decomposed into two mutually perpendicular
vectors ⃗a = ⃗a⊥b + ⃗a∥b, where ⃗a⊥b is perpendicular to ⃗b, and ⃗a∥b is parallel to ⃗b. These
components are given by
⃗a∥b = (⃗a · ⃗b)
|⃗b|2 ⃗b,
which is the projection of ⃗a onto the direction of ⃗b, and
⃗a⊥b = ⃗a −⃗a∥b = ⃗a −(⃗a · ⃗b)
|⃗b|2 ⃗b.
Since |⃗a⊥b| = |⃗a| sin θ (see Figure 1.5), and ⃗a⊥b is perpendicular to ⃗b, |⃗a⊥b × ⃗b| = |⃗a| |⃗b| sin θ.
Since ⃗a⊥b lies in the plane deﬁned by ⃗a and ⃗b, and points to the same side of ⃗b as ⃗a, ⃗a⊥b × ⃗b
has the same direction as ⃗a × ⃗b. Therefore,
⃗a⊥b × ⃗b = ⃗a × ⃗b.
(1.6)
Now, we are in a position to show a distributive property of the cross-product. Consider three
vectors ⃗a, ⃗b and ⃗c. First of all, note that
(⃗a + ⃗b)⊥c = (⃗a + ⃗b) −

(⃗a + ⃗b) · ⃗c

|⃗c|2
⃗c
= (⃗a + ⃗b) −

⃗a · ⃗c + ⃗b · ⃗c

|⃗c|2
⃗c
=

⃗a −(⃗a · ⃗c)
|⃗c|2 ⃗c

+

⃗b −(⃗b · ⃗c)
|⃗c|2 ⃗c

= ⃗a⊥c + ⃗b⊥c
Therefore, we have

⃗a + ⃗b

× ⃗c =

⃗a + ⃗b

⊥c × ⃗c
=

⃗a⊥c + ⃗b⊥c

× ⃗c.

Kinematics
5
c
b
a
a + b
a⊥c
b⊥c
(a + b)⊥c
90o
c
b⊥c
a⊥c
a⊥c + b⊥c
a⊥c × c
(a⊥c + b⊥c) × c
b⊥c × c
Figure 1.6
Distributivity of vector cross product
Now, the vectors ⃗a⊥c, ⃗b⊥c and ⃗a⊥c + ⃗b⊥c all are perpendicular to ⃗c. Therefore,
|⃗a⊥c × ⃗c| = |⃗a⊥c| |⃗c|,
|⃗b⊥c × ⃗c| = |⃗b⊥c| |⃗c|,


⃗a⊥c + ⃗b⊥c

× ⃗c
 =


⃗a⊥c + ⃗b⊥c
 
⃗c
 .
Since the vectors ⃗a⊥c, ⃗b⊥c and ⃗a⊥c + ⃗b⊥c are all perpendicular to ⃗c, the cross-products ⃗a⊥c × ⃗c,
⃗b⊥c × ⃗c and

⃗a⊥c + ⃗b⊥c

× ⃗c are all simply the vectors ⃗a⊥c, ⃗b⊥c and ⃗a⊥c + ⃗b⊥c rotated by
90◦about the vector ⃗c, and then scaled by the factor |⃗c|, as shown in Figure 1.6. What this
shows is that

⃗a⊥c + ⃗b⊥c

× ⃗c = ⃗a⊥c × ⃗c + ⃗b⊥c × ⃗c,
and therefore by (1.6),

⃗a + ⃗b

× ⃗c = ⃗a × ⃗c + ⃗b × ⃗c,
(1.7)
which is the distributive property we wanted to show. Finally, the following results are also
readily derived from the deﬁnition:
⃗a × ⃗a = ⃗0,
(1.8)
(a⃗b) × ⃗c = a(⃗b × ⃗c).
(1.9)

6
Spacecraft Dynamics and Control: An Introduction
1.1.3
Other Useful Vector Identities
Some other useful vector identities are:
⃗a ×

⃗b × ⃗c

= (⃗a · ⃗c)⃗b −(⃗a · ⃗b)⃗c,
⃗a ·

⃗b × ⃗c

= ⃗b ·
	⃗c × ⃗a

= ⃗c ·

⃗a × ⃗b

,
⃗a ×

⃗b × ⃗c

+ ⃗b ×
	⃗c × ⃗a

+ ⃗c ×

⃗a × ⃗b

= ⃗0,

⃗a × ⃗b

·

⃗c × ⃗d

=
	⃗a · ⃗c

 
⃗b · ⃗d

−

⃗a · ⃗d
 
⃗b · ⃗c

.
Note that the deﬁnitions of scalar- and cross-product and all of the associated properties
and identities above are independent of a coordinate system.
1.2
Reference Frames and Physical Vector Coordinates
Up to this point, we have only considered physical vectors, without any mention of a frame of
reference. For computational purposes we need to introduce the concept of a reference frame.
Reference frames are also needed to describe the orientation of an object, and are needed for
the formulation of kinematics and dynamics.
To deﬁne a reference frame, say reference frame “1” (which we will label F1), it is customary
to identify three mutually perpendicular unit length (length of one) physical vectors, labeled
as ⃗x1, ⃗y1 and ⃗z1 respectively. The notation used here corresponds to the usual x-y-z axes
deﬁned for a Cartesian three-dimensional coordinate system. These three vectors then deﬁne
the reference frame. The unit vectors are chosen according to the right-handed rule, as shown
in Figure 1.7. Under the right-handed rule, the unit vectors satisfy
⃗x1 × ⃗y1 = ⃗z1,
⃗y1 × ⃗z1 = ⃗x1,
⃗z1 × ⃗x1 = ⃗y1.
Since they are perpendicular, they also satisfy
⃗x1 · ⃗x1 = ⃗y1 · ⃗y1 = ⃗z1 · ⃗z1 = 1,
⃗x1 · ⃗y1 = ⃗x1 · ⃗z1 = ⃗y1 · ⃗z1 = 0.
(1.10)
x1
y1
z1
Figure 1.7
Reference frame basis vectors

Kinematics
7
Now, since the three unit vectors form a basis for physical three-dimensional space, any
physical vector ⃗r can be written as a linear combination of the unit vectors, that is
⃗r = rx,1⃗x1 + ry,1⃗y1 + rz,1⃗z1
=
 ⃗x1
⃗y1
⃗z1

⎡
⎢⎣
rx,1
ry,1
rz,1
⎤
⎥⎦
= ⃗F T
1 r1.
(1.11)
where
r1 =
⎡
⎢⎣
rx,1
ry,1
rz,1
⎤
⎥⎦
(1.12)
is a column matrix containing the coordinates of the physical vector ⃗r in reference frame F1,
and
⃗F1 =
⎡
⎢⎣
⃗x1
⃗y1
⃗z1
⎤
⎥⎦
(1.13)
is a column matrix containing the unit physical vectors deﬁning reference frame F1. We shall
refer to ⃗F1 as a vectrix (that is, a matrix of physical vectors).
To determine the coordinates of the vector ⃗r in frame F1, we can simply take the dot product
of the physical vector (1.11) with each of the unit vectors. For example,
⃗r · ⃗x1 =
	
rx,1⃗x1 + ry,1⃗y1 + rz,1⃗z1

· ⃗x1,
= rx,1⃗x1 · ⃗x1 + ry,1⃗y1 · ⃗x1 + rz,1⃗z1 · ⃗x1,
= rx,1.
Here, we have made use of properties (1.1) and (1.4) of the dot product of physical vectors. In
fact, these properties allow us to treat the dot product of physical vectors in the same manner
as scalar multiplication. Using the vectrix notation, we can take advantage of this fact to

8
Spacecraft Dynamics and Control: An Introduction
concisely determine r1 by taking the dot product of the vector (1.11) with the vectrix (1.13)
as follows
⃗F1 · ⃗r = ⃗F1 ·

⃗F T
1 r1

=
⎛
⎜⎜⎝
⎡
⎢⎢⎣
⃗x1
⃗y1
⃗z1
⎤
⎥⎥⎦·
 ⃗x1
⃗y1
⃗z1

⎞
⎟⎟⎠r1
=
⎡
⎢⎢⎣
⃗x1 · ⃗x1
⃗x1 · ⃗y1
⃗x1 · ⃗z1
⃗x1 · ⃗y1
⃗y1 · ⃗y1
⃗y1 · ⃗z1
⃗x1 · ⃗z1
⃗y1 · ⃗z1
⃗z1 · ⃗z1
⎤
⎥⎥⎦r1
=
⎡
⎢⎣
1
0
0
0
1
0
0
0
1
⎤
⎥⎦r1
Note that properties (1.1) and (1.4) allowed us to treat the dot product in the same manner
as scalar multiplication, and apply the associativity rule for matrix multiplication as we did
above. Finally, we have
rx,1 = ⃗r · ⃗x1,
ry,1 = ⃗r · ⃗y1,
rz,1 = ⃗r · ⃗z1.
1.2.1
Vector Addition and Scalar Multiplication
We can now determine how to perform vector addition and scalar multiplication operations in
terms of the coordinates of a vector in a given reference frame. To this end, let us consider two
physical vectors ⃗a and ⃗b expressed in the same reference frame F1, and a scalar, c:
⃗a =
 ⃗x1
⃗y1
⃗z1

⎡
⎢⎣
ax,1
ay,1
az,1
⎤
⎥⎦= ⃗F T
1 a, ⃗b =
 ⃗x1
⃗y1
⃗z1

⎡
⎢⎣
bx,1
by,1
bz,1
⎤
⎥⎦⃗F T
1 b,
It is obvious from the rules for physical vector addition and scalar multiplication that
⃗a + ⃗b =
 ⃗x1
⃗y1
⃗z1

⎡
⎢⎣
ax,1 + bx,1
ay,1 + by,1
az,1 + bz,1
⎤
⎥⎦= ⃗F T
1 (a + b) ,

Kinematics
9
and
c⃗a =
 ⃗x1
⃗y1
⃗z1

⎡
⎢⎣
c ax,1
c ay,1
c az,1
⎤
⎥⎦= ⃗F T
1 (ca) .
That is, vector addition and scalar multiplication operations can be directly applied to the
coordinates of the vectors.
1.2.2
Scalar Product
Let us now examine how to compute the scalar (or dot) product in terms of the coordinates of
the vectors in a given reference frame. To this end, let us consider two physical vectors ⃗a and
⃗b expressed in the same reference frame F1:
⃗a =
 ⃗x1
⃗y1
⃗z1

⎡
⎢⎣
ax,1
ay,1
az,1
⎤
⎥⎦, ⃗b =
 ⃗x1
⃗y1
⃗z1

⎡
⎢⎣
bx,1
by,1
bz,1
⎤
⎥⎦
The dot product is now given by
⃗a · ⃗b =
ax,1
ay,1
az,1

⎡
⎢⎣
⃗x1
⃗y1
⃗z1
⎤
⎥⎦·
 ⃗x1
⃗y1
⃗z1

⎡
⎢⎣
bx,1
by,1
bz,1
⎤
⎥⎦
=
ax,1
ay,1
az,1

⎡
⎢⎣
⃗x1 · ⃗x1
⃗x1 · ⃗y1
⃗x1 · ⃗z1
⃗x1 · ⃗y1
⃗y1 · ⃗y1
⃗y1 · ⃗z1
⃗x1 · ⃗z1
⃗y1 · ⃗z1
⃗z1 · ⃗z1
⎤
⎥⎦
⎡
⎢⎣
bx,1
by,1
bz,1
⎤
⎥⎦
=
ax,1
ay,1
az,1

⎡
⎢⎣
1
0
0
0
1
0
0
0
1
⎤
⎥⎦
⎡
⎢⎣
bx,1
by,1
bz,1
⎤
⎥⎦
= aT
1 b1
Again, properties (1.1) and (1.4) allowed us to treat the dot product in the same manner as
scalar multiplication, and apply the associativity rule for matrix multiplication as we did above.
Making use of identity (1.2), we can relate the length of the physical vector to the length of its
coordinate representation, that is:
||a1|| =

aT
1 a1 = |⃗a|,
where ||a1|| is the standard Euclidean length of a column matrix.

10
Spacecraft Dynamics and Control: An Introduction
1.2.3
Vector Cross Product
We can also determine the cross-product of two vectors in terms of the coordinates with respect
to a given reference frame. Consider again the same two vectors as in Section 1.2.2. Since the
vector cross product satisﬁes the same distributive and scalar multiplication properties (1.7)
and (1.9) as the vector dot product (compare to (1.1) and (1.4)), we can concisely determine
the vector cross-product in terms of the coordinates in the same manner as we determined the
dot product in Section 1.2.2 (provided we respect the order in which each individual vector
cross-product is taken). We have
⃗a × ⃗b =
ax,1
ay,1
az,1

⎡
⎢⎣
⃗x1
⃗y1
⃗z1
⎤
⎥⎦×
 ⃗x1
⃗y1
⃗z1

⎡
⎢⎣
bx,1
by,1
bz,1
⎤
⎥⎦
=
ax,1
ay,1
az,1

⎡
⎢⎣
⃗x1 × ⃗x1
⃗x1 × ⃗y1
⃗x1 × ⃗z1
⃗y1 × ⃗x1
⃗y1 × ⃗y1
⃗y1 × ⃗z1
⃗z1 × ⃗x1
⃗z1 × ⃗y1
⃗z1 × ⃗z1
⎤
⎥⎦
⎡
⎢⎣
bx,1
by,1
bz,1
⎤
⎥⎦
=
ax,1
ay,1
az,1

⎡
⎢⎣
⃗0
⃗z1
−⃗y1
−⃗z1
⃗0
⃗x1
⃗y1
−⃗x1
⃗0
⎤
⎥⎦
⎡
⎢⎣
bx,1
by,1
bz,1
⎤
⎥⎦
=
 ⃗x1
⃗y1
⃗z1

⎡
⎢⎣
0
−az,1
ay,1
az,1
0
−ax,1
−ay,1
ax,1
0
⎤
⎥⎦
⎡
⎢⎣
bx,1
by,1
bz,1
⎤
⎥⎦
= ⃗F T
1 a×
1 b1,
where the 3 × 3 matrix
a×
1
=
⎡
⎢⎣
0
−az,1
ay,1
az,1
0
−ax,1
−ay,1
ax,1
0
⎤
⎥⎦
is the cross-product operator matrix corresponding to the vector ⃗a in reference frame F1
coordinates.
1.2.4
Column Matrix Identities
The vector identities presented in Sections 1.1.2 and 1.1.3 can all be rewritten in terms of
column matrices. To this end, let us consider four physical vectors ⃗a, ⃗b, ⃗c and ⃗d expressed
in the same reference frame F, with corresponding coordinates a, b, c and d respectively.

Kinematics
11
Making use of the above results for the computations for the scalar- and cross-products, the
following column matrix identities are automatically obtained
a×a = 0
a×b = −b×a
a×b×c = (aT c)b −(aT b)c,
aT b×c = bT c×a = cT a×b,
a×b×c + b×c×a + c×a×b = 0,
	
a×b

T 	
c×d

=
	
aT c

 	
bT d

−
	
aT d

 	
bT c

.
The third identity leads to a very useful result. That is,
a×b×c = (aT c)b −(aT b)c
=
	
baT −(aT b)1

c
where we denote the identity matrix by 1. Since the above result must hold for any column
matrix c ∈R3, we must have
a×b× = baT −(aT b)1.
(1.14)
1.3
Rotation Matrices
Spacecraft dynamics problems generally involve the use of several reference frames. For
example, to describe the orientation of the spacecraft with respect to the Earth, it makes sense
to ﬁx one reference frame (say F1) to the Earth, and the other (say F2) to the spacecraft
body. The orientation of the spacecraft with respect to the Earth can then be described by the
orientation of reference frame F2 with respect to F1. In spacecraft terminology, we call the
orientation the attitude.
Since multiple reference frames will be used, it is necessary to know how to:
1. Describe the orientation of one reference frame with respect to another.
2. Transform the coordinates of a vector from one reference frame to another.
As we shall see, these two issues are directly related. Let us now consider two reference
frames, F1 deﬁned by the unit vectors ⃗x1, ⃗y1 and ⃗z1, and F2 deﬁned by the unit vectors ⃗x2, ⃗y2
and ⃗z2. Let us also consider an arbitrary vector ⃗r, as shown in Figure 1.8. Let us now express
the vector ⃗r in each frame as
⃗r = ⃗F T
1 r1 = ⃗F T
2 r2.
As we have shown before, the column matrices r1 and r2 contain the coordinates of the
vector ⃗r, in the reference frames F1 and F2 respectively. To address point 1, we can ﬁnd the

12
Spacecraft Dynamics and Control: An Introduction
x1
y1
z1
x2
y2
z2
r
Figure 1.8
Multiple reference frames
coordinates in reference frame F2 of the unit vectors deﬁning reference frame F1. As we have
seen before, we can write
⃗x1 = ⃗F T
2 x1,2, ⃗y1 = ⃗F T
2 y1,2, and ⃗z1 = ⃗F T
2 z1,2,
where
x1,2 =
⎡
⎢⎣
⃗x1 · ⃗x2
⃗x1 · ⃗y2
⃗x1 · ⃗z2
⎤
⎥⎦, y1,2 =
⎡
⎢⎣
⃗y1 · ⃗x2
⃗y1 · ⃗y2
⃗y1 · ⃗z2
⎤
⎥⎦, and z1,2 =
⎡
⎢⎣
⃗z1 · ⃗x2
⃗z1 · ⃗y2
⃗z1 · ⃗z2
⎤
⎥⎦.
(1.15)
To address point 2, we now obtain a relationship between coordinates of ⃗r in the different
reference frames as follows:
⃗F T
2 r2 = ⃗F T
1 r1
⇒
⃗F2 · ⃗F T
2 r2 = ⃗F2 · ⃗F T
1 r1 ⇒
r2 = C21r1
(1.16)
where
C21 = ⃗F2 · ⃗F T
1
=
⎡
⎢⎣
⃗x2
⃗y2
⃗z2
⎤
⎥⎦·
 ⃗x1
⃗y1
⃗z1

=
⎡
⎢⎣
⃗x2 · ⃗x1
⃗x2 · ⃗y1
⃗x2 · ⃗z1
⃗y2 · ⃗x1
⃗y2 · ⃗y1
⃗y2 · ⃗z1
⃗z2 · ⃗x1
⃗z2 · ⃗y1
⃗z2 · ⃗z1
⎤
⎥⎦
(1.17)
The matrix C21 is called a rotation matrix. It is sometimes referred to as the “direction cosine
matrix”, since each entry is a scalar product between two unit vectors, giving the cosine of the
angle between them (by deﬁnition of the scalar product). Comparing the matrix C21 in (1.17)

Kinematics
13
with (1.15), it can be seen that the columns of the matrix C21 are just the unit vectors deﬁning
F1 expressed in F2. That is,
C21 =
x1,2
y1,2
z1,2

.
(1.18)
The rotation matrix C21 therefore contains all of the information needed to address both points
1 and 2. In particular, the rotation matrix fully describes the attitude of F2 with respect to F1.
Rotation matrices have a number of special properties. First of all, from equation (1.18), the
rotation matrix is invertible, since its columns are the coordinates of mutually perpendicular
unit vectors. Furthermore, making use of the relationship between the unit vectors in (1.10),
we have
CT
21C21 =
⎡
⎢⎢⎣
xT
1,2
yT
1,2
zT
1,2
⎤
⎥⎥⎦
x1,2
y1,2
z1,2

=
⎡
⎢⎢⎣
xT
1,2x1,2
xT
1,2y1,2
xT
1,2z1,2
yT
1,2x1,2
yT
1,2y1,2
yT
1,2z1,2
zT
1,2x1,2
zT
1,2y1,2
zT
1,2z1,2
⎤
⎥⎥⎦
=
⎡
⎢⎣
1
0
0
0
1
0
0
0
1
⎤
⎥⎦= 1.
This shows that C−1
21 = CT
21, and that the rotation matrix is an orthonormal matrix, since its
inverse is equal to its transpose. Making use of this result, inverting the transformation between
coordinates in equation (1.16) gives
r1 = CT
21r2 = C12r2.
That is, C12 = CT
21.
Let us now consider three reference frames, F1, F2 and F3. The vector ⃗r is then given by
⃗r = ⃗F T
1 r1 = ⃗F T
2 r2 = ⃗F T
3 r3.
From our results obtained so far, we have the following transformations:
r3 = C31r1,
and
r3 = C32r2 = C32C21r1.

14
Spacecraft Dynamics and Control: An Introduction
Combining these two results leads to (since they must hold for any column matrix r1)
C31 = C32C21.
(1.19)
That is, products of rotation matrices are also rotation matrices, and successive rotations can
be combined by multiplying the rotation matrices in the reverse order of the rotations (from
right to left).
An important relationship arises when considering the cross-product of two vectors,
expressed in two different reference frames. Consider the vectors ⃗a = ⃗F T
1 a1 = ⃗F T
2 a2 and
⃗b = ⃗F T
1 b1 = ⃗F T
2 b2. We have the relationships a2 = C21a1 and b2 = C21b1. Let us now exam-
ine the cross product of the two vectors. We have
⃗a × ⃗b = ⃗F T
2 a×
2 b2 = ⃗F T
1 a×
1 b1
= ⃗F T
2 C21a×
1 b1
= ⃗F T
2 C21a×
1 CT
21b2.
From this we obtain
a×
2 b2 = C21a×
1 CT
21b2.
Since this must hold for any b2 ∈R3, we have
a×
2 = C21a×
1 CT
21.
(1.20)
Finally, since a2 = C21a1, we have the result
(C21a1)× = C21a×
1 CT
21.
(1.21)
1.3.1
Principal Rotations
An important class of rotations are those about one of the coordinate axes, as shown in
Figure 1.9. When reference frame F2 is obtained from frame F1 by a rotation about the z-axis,
the associated rotation matrix is
Cz(θz) =
⎡
⎣
cos θz
sin θz
0
−sin θz
cos θz
0
0
0
1
⎤
⎦.
The subscript “z” is used here instead of the subscript “21” to emphasize the fact that the
rotation has occurred about the z-axis.

Kinematics
15
x1, x2
y1
y2
z1
z2
θx
θx
y1, y2
x1
x2
z1
z2
θy
θy
z1, z2
x2
x1
y1
y2
θz
θz
Figure 1.9
Principal rotations
For a rotation about the y-axis,
Cy(θy) =
⎡
⎢⎣
cos θy
0
−sin θy
0
1
0
sin θy
0
cos θy
⎤
⎥⎦.
For a rotation about the x-axis,
Cx(θx) =
⎡
⎢⎣
1
0
0
0
cos θx
sin θx
0
−sin θx
cos θx
⎤
⎥⎦.
1.3.2
General Rotations
Up to this point, we have given the deﬁnition of the transformation between reference frames
(1.17), but we have not justiﬁed why it is called a rotation matrix. The answer is found in
Euler’s Theorem, which was obtained by Leonhard Euler in 1775.
Euler’s Theorem: The most general motion of a rigid body with one point ﬁxed is a rotation
about an axis through that point.
As illustrated in Figure 1.10, what Euler’s theorem means is that given any two reference
frames F1 and F2, frame F2 can be obtained from frame F1 by a single rotation about some
unit vector which we will denote ⃗a = ⃗F T
1 a. We shall now demonstrate this. Consider the
rotation matrix C12, which transforms coordinates of vectors in frame F2 to coordinates in F1.
As we have seen, the rotation matrix is given by
C12 =
x2,1
y2,1
z2,1

,
(1.22)
where x2,1, y2,1 and z2,1 are the coordinates in F1 of the basis vectors deﬁning F2, that is,
⃗x2 = ⃗F T
1 x2,1, ⃗y2 = ⃗F T
1 y2,1, ⃗z2 = ⃗F T
1 z2,1.

16
Spacecraft Dynamics and Control: An Introduction
x1
x2
z2
z1
y1
y2
a
φ
Figure 1.10
General rotation
First of all, we note that the determinant of C12 is given by
det [C12] = xT
2,1y×
2,1z2,1.
This can readily be shown by expansion of the determinant. Since F1 is a right-handed frame,
we have seen that this means that
det [C12] = ⃗x2 ·
	⃗y2 × ⃗z2

.
Since F2 is a right-handed frame, we have ⃗x2 = ⃗y2 × ⃗z2, and therefore
det [C12] = 1.
(1.23)
Therefore, a rotation matrix is a 3 by 3 orthonormal matrix with determinant equal to + 1.
Next, we shall show that + 1 is an eigenvalue of the rotation matrix. We shall make use of the
following facts for matrix determinants.
1. The determinant of a square matrix is equal to the determinant of its transpose,
det [A] = det

AT 
.
2. The determinant of a product of square matrices is equal to the product of the individual
determinants,
det [AB] = det [A] det [B] .
3. Given an n by n matrix, A and a scalar a,
det [aA] = an det [A] .
We shall now show that +1 is an eigenvalue of the rotation matrix C12. Consider det [C12 −1],
where 1 is the 3 by 3 identity matrix. Then, since det [C12] = 1, we have
det [C12 −1] = det

CT
12

det [C12 −1] ,

Kinematics
17
by fact 1. By fact 2 and the orthonormality of C12, this becomes
det [C12 −1] = det

CT
12 (C12 −1)

= det

1 −CT
12

.
By fact 1 and fact 3, this becomes
det [C12 −1] = det [1 −C12]
= (−1)3 det [C12 −1] .
The only way that this ﬁnal equality holds is if
det [C12 −1] = 0,
which shows that +1 is indeed an eigenvalue of C12.
Now, let a be a unit eigenvector of C12, corresponding to the eigenvalue +1. Then, we have
C12a = a,
and the rotation matrix C12 leaves the unit eigenvector a unchanged. We now deﬁne the unit
physical vector ⃗a = ⃗F T
1 a. Let us now choose another unit vector ⃗b = ⃗F T
1 b perpendicular to
⃗a, that is bT b = 1 and aT b = 0. Transforming the coordinates of the vector ⃗b through the
rotation matrix yields a new vector given by
⃗b′ = ⃗F T
1 C12b.
We see immediately that
|⃗b′| =
	
(C12b)T C12b

 1
2 = 1,
and
⃗a · ⃗b′ = aT C12b
= (C12a)T C12b
= 0.
Therefore, as shown in Figure 1.11, the transformed vector ⃗b′ is also a unit vector perpendicular
to ⃗a. This means that the transformation of the coordinates b by the matrix C12 is equivalent to
a rotation of the vector ⃗b about the vector ⃗a through some angle φ. Note that we deﬁne the angle
of rotation φ to be positive in the right hand sense about ⃗a. Next, let us deﬁne a third unit vector
⃗c = ⃗F T
1 c = ⃗a × ⃗b. In frame F1, the coordinates are c = a×b. The vectors ⃗a, ⃗b and ⃗c therefore
constitute an orthogonal triad, and any other vector can be written in terms of these. Transform-
ing the coordinates of the vector ⃗c through the rotation matrix yields a new vector given by
⃗c′ = ⃗F T
1 C12c.

18
Spacecraft Dynamics and Control: An Introduction
a
b
b
φ
Figure 1.11
Rotation about ⃗a
We now see that
⃗c′ = ⃗F T
1 C12a×b,
= ⃗F T
1 C12a×CT
12C12b,
= ⃗F T
1 (C12a)× C12b,
= ⃗F T
1 a×C12b,
= ⃗a × ⃗b′.
This means that the vectors ⃗a, ⃗b′ and ⃗c′ are also an orthogonal triad with the same sense as ⃗a,
⃗b and ⃗c. The only way that this is possible is if the transformation of the coordinates c by the
matrix C12 is equivalent to a rotation of the vector ⃗c about the vector ⃗a through the same angle
φ as the vector ⃗b, as shown in Figure 1.12. Now, since any vector ⃗g = ⃗F T
1 g can be written as
a linear combination of the vectors ⃗a, ⃗b and ⃗c, the transformation of the coordinates g by the
matrix C12 is equivalent to a rotation of the vector ⃗g about the vector ⃗a through the same angle φ.
Let us now see what this means in terms of the relationship between frames F1 and F2. It
is easy to from the expression for the rotation matrix in (1.22) that
x2,1 = C12
⎡
⎣
1
0
0
⎤
⎦, y2,1 = C12
⎡
⎣
0
1
0
⎤
⎦, z2,1 = C12
⎡
⎣
0
0
1
⎤
⎦.
Since the basis vectors deﬁning frame F1 satisfy
⃗x1 = ⃗F T
1 x1,1, ⃗y1 = ⃗F T
1 y1,1, ⃗z1 = ⃗F T
1 y1,1,
b
b
φ
c
c
φ
a
Figure 1.12
Rotation about ⃗a

Kinematics
19
with
x1,1 =
⎡
⎢⎣
1
0
0
⎤
⎥⎦, y1,1 =
⎡
⎢⎣
0
1
0
⎤
⎥⎦, z1,1 =
⎡
⎢⎣
0
0
1
⎤
⎥⎦
it is clear now that the basis vectors deﬁning frame F2 can all be obtained by rotating the basis
vectors deﬁning frame F1 about the unit vector ⃗a through the angle φ. This is precisely Euler’s
Theorem.
1.3.2.1
Rotation Matrix in Terms of the Principal Axis and Angle of Rotation
We shall now ﬁnd an expression for the rotation matrix in terms of the principal axis and angle
of rotation. Let ⃗a = ⃗F T
1 a and φ be the principal axis and angle of rotation corresponding to
the rotation matrix C12, respectively.
To this end, let us examine a rotation of an arbitrary vector ⃗v = ⃗F T
1 v about ⃗a through angle
φ in the right-hand sense, as shown in Figure 1.13. We can decompose the vector ⃗v into a part
parallel to ⃗a (denoted ⃗v∥), and a part perpendicular to ⃗a (denoted ⃗v⊥). That is,
⃗v = ⃗v∥+ ⃗v⊥.
These components are given by
⃗v∥= (⃗a · ⃗v)⃗a,
⃗v⊥= ⃗v −(⃗a · ⃗v)⃗a.
(1.24)
Now, as seen in Figure 1.13, to rotate the vector ⃗v about ⃗a (which we will denote ⃗vrot), we
only need to rotate the perpendicular part (which we will denote ⃗v⊥rot), i.e.
⃗vrot = ⃗v∥+ ⃗v⊥rot.
a
v
v
v⊥
v⊥rot
vrot
φ
Figure 1.13
Rotation of a vector

20
Spacecraft Dynamics and Control: An Introduction
a
a × v⊥
v⊥
φ
v⊥
v⊥rot
a × v⊥
Figure 1.14
Rotation of the perpendicular component of a vector
To this end, we can set up a vector perpendicular to ⃗a and ⃗v⊥, given by ⃗a × ⃗v⊥as shown in
Figure 1.14. Note that |⃗a × ⃗v⊥| = |⃗v⊥|. As seen in Figure 1.14, the rotated vector ⃗v⊥rot can
now be expressed as
⃗v⊥rot = ⃗v⊥cos φ + ⃗a × ⃗v⊥sin φ.
Substituting (1.24) and making use of the fact that ⃗a × ⃗a = ⃗0 gives
⃗vrot = ⃗v cos φ + (⃗a · ⃗v)⃗a(1 −cos φ) + ⃗a × ⃗v sin φ.
Expressing this in F1 coordinates, we have
⃗vrot = ⃗F T
1

cos φ1 + (1 −cos φ)aaT + sin φa×
v = ⃗F T
1 C12v.
(1.25)
Note that the second equality is due to the fact that the axis ⃗a and angle φ correspond to the
rotation matrix C12. Since the above relationship must hold for any v ∈R3, it must be that
C12 = cos φ1 + (1 −cos φ)aaT + sin φa×.
Taking the transpose, we ﬁnally obtain
C21 = cos φ1 + (1 −cos φ)aaT −sin φa×.
(1.26)
Note that while we have used the coordinates of ⃗a in reference frame F1, we could have used
the coordinates in F2, since they are the same. A simple calculation shows that
C21a = a,
as it should be. Another consequence of Euler’s Theorem is that while the rotation matrix C21
contains nine entries, it can be fully described by four parameters, that is the three components
of the axis of rotation a, and that angle of rotation φ. In fact, the three components of the axis
of rotation are not independent, since aT a = 1 (⃗a is a unit vector), so in fact, three parameters
could be used to fully describe the rotation matrix.

Kinematics
21
1.3.2.2
Finding the Principal Axis and Angle from the Rotation Matrix
Let
a =
⎡
⎢⎣
a1
a2
a3
⎤
⎥⎦, and C21 =
⎡
⎢⎣
c11
c12
c13
c21
c22
c23
c31
c32
c33
⎤
⎥⎦.
Then, taking the trace of C21 in (1.26), we obtain
trace [C21] = 3 cos φ + (1 −cos φ)(a2
1 + a2
2 + a2
3) = 1 + 2 cos φ.
Note that the last equality follows since a is a unit column matrix. Therefore, we can ﬁnd the
principal angle of rotation as
φ = cos−1
trace [C21] −1
2

.
(1.27)
An important point to note is that a rotation about the axis ⃗a through the angle φ is equivalent
to a rotation about the axis −⃗a through the angle −φ. Therefore, when solving 1.27, we shall
restrict ourselves to the range 0 ≤φ ≤π, since a rotation angle in the range −π < φ < 0
about a is equivalent to a rotation angle in the range 0 ≤φ ≤π about the negative axis of
rotation −a.
Having found the angle φ, we can now ﬁnd the corresponding axis of rotation a. From
(1.26), we ﬁnd that
CT
21 −C21 = 2 sin φa×,
from which we can readily ﬁnd that if 0 < φ < π, the axis of rotation can be obtained
from
a1 = c23 −c32
2 sin φ ,
a2 = c31 −c13
2 sin φ ,
a3 = c12 −c21
2 sin φ .
(1.28)
When φ = ±π, the rotation matrix becomes
C21 = −1 + 2aaT .
From this, we ﬁnd that if φ = ±π,
|a1| =
c11 + 1
2
 1
2
, |a2| =
c22 + 1
2
 1
2
, |a3| =
c33 + 1
2
 1
2
.
(1.29)

22
Spacecraft Dynamics and Control: An Introduction
Since a rotation of either π or −π about the axes a and −a are equivalent, we can arbitrarily
choose the sign of one of a1, a2 or a3. Some possible solutions are
• If φ = ±π and |a1| > 0,
a1 = |a1|,
a2 = sign (c12) |a2|,
a3 = sign (c13) |a3|.
• If φ = ±π and |a2| > 0,
a1 = sign (c12) |a1|,
a2 = |a2|,
a3 = sign (c23) |a3|.
• If φ = ±π and |a3| > 0,
a1 = sign (c13) |a1|,
a2 = sign (c23) |a2|,
a3 = |a3|.
When φ = 0, the axis a cannot be determined uniquely. Physically this makes sense, since a
zero rotation about any axis results in the same orientation.
1.3.3
Euler Angles
In the preceeding section we have found that the rotation matrix can be described by three
parameters. There are in fact many parameterizations that could be used. A common set of
parameters is known as the Euler Angles. Euler Angles describe three successive principal
rotations. For example, a possible sequence is:
1. A rotation ψ about the original z-axis (called a “yaw” rotation).
2. A rotation θ about the intermediate y-axis (called a “pitch” rotation).
3. A rotation φ about the transformed x-axis (called a “roll” rotation).
This is a very common choice in aerospace applications, and is called a 3-2-1 attitude sequence,
and is depicted in Figure 1.15. The terminology relates to the order of rotations. A principal
z-axis (labeled 3) rotation is ﬁrst, followed by a principal y-axis (labeled 2) rotation, followed

Kinematics
23
xt, x2
yt
y2
zt
z2
φ
φ
yi, yt
xi
xt
zi
zt
θ
θ
z1, zi
xi
x1
y1
yi
ψ
ψ
Figure 1.15
3-2-1 Euler rotation sequence
by a principal x-axis (labeled 1) rotation. In this case, the rotation matrix from frame F1 to
frame F2 is given by
C21(φ, θ, ψ) = Cx(φ)Cy(θ)Cz(ψ)
=
⎡
⎢⎣
cθcψ
cθsψ
−sθ
sφsθcψ −cφsψ
sφsθsψ + cφcψ
sφcθ
cφsθcψ + sφsψ
cφsθsψ −sφcψ
cφcθ
⎤
⎥⎦
(1.30)
where sb = sin b and cb = cos b.
An unfortunate consequence of using three parameters to describe the rotation matrix is
that a singularity occurs. It can be shown that this will occur for any three-dimensional
parameterization of the rotation matrix. For the 3-2-1 sequence above, the singularity occurs
when the pitch angle is θ = ±90◦. For example, when θ = 90◦, the rotation matrix becomes
C21(φ, 90◦, ψ) =
⎡
⎢⎣
0
0
−1
sin(φ −ψ)
cos(φ −ψ)
0
cos(φ −ψ)
−sin(φ −ψ)
0
⎤
⎥⎦.
Physically, at the singularity the ﬁrst and third rotations in the sequence occur about the same
axis. In this case, the roll and yaw angles (φ and ψ) are associated with the same rotation, and
cannot be determined uniquely. Outside of the singularity however, we can uniquely determine
the angles from the rotation matrix. Denoting the rotation matrix by
C =
⎡
⎢⎣
c11
c12
c13
c21
c22
c23
c31
c32
c33
⎤
⎥⎦,
from equation (1.30), we see that
φ = tan−1(c23/c33),
θ = −sin−1(c13),
ψ = tan−1(c12/c11).

24
Spacecraft Dynamics and Control: An Introduction
x
y
z
x
y
z
x
y
z
z
x
y
x
y
z
rotate 90o about z
rotate 90o about y
rotate 90o about y
rotate 90o about z
NOT THE SAME!
Figure 1.16
Non commuting rotations
The signs of c23, c33 and c11, c12 determine the quadrants of φ and ψ respectively.
Note that it is very important to specify the order of rotations (e.g. 3-2-1), since as seen
in Figure 1.16, rotations do NOT commute!
1.3.4
Quaternions
As seen in the previous section, an unfortunate consequence of using a three-dimensional
parameterization of the rotation matrix is the existence of a singularity, that is, a rotation for
which the three parameters cannot be uniquely determined. To overcome this problem, it is
necessary to add a redundant parameter to the parameterization. One possibility is the principal
axis and angle of rotation. A more common and very useful choice of parameterization is the
quaternion (also known as Euler parameters). The advantage of using quaternions, unlike
axis-angle parameters is that the expression for the rotation matrix, and kinematics are purely
algebraic (they contain no trigonometric functions). This makes them very useful and efﬁcient
for computational purposes.
To deﬁne the quaternion, we ﬁrst need to reexamine the rotation matrix in terms of the
principal axis a and angle φ of rotation. From (1.26), we have
C = cos φ1 + (1 −cos φ)aaT −sin φa×.

Kinematics
25
Let us now make use of the trigonometric identities
sin φ = 2 sin φ
2 cos φ
2 , cos φ = 2 cos2 φ
2 −1 = 1 −2 sin2 φ
2 .
We can now rewrite the rotation matrix as
C =

2 cos2 φ
2 −1

+ 2 sin2 φ
2 aaT −2 sin φ
2 cos φ
2 a×.
Based on this, we now deﬁne a vector and scalar part of the quaternion as
ϵ = a sin φ
2 , η = cos φ
2 ,
(1.31)
respectively. We immediately see that the quaternion satisﬁes a unit magnitude constraint
ϵT ϵ + η2 = 1.
(1.32)
The rotation matrix in terms of the quaternion is given by
C =
	
2η2 −1

1 + 2ϵϵT −2ηϵ×.
(1.33)
1.3.4.1
Quaternion from Rotation Matrix
Let
ϵ =
⎡
⎣
ϵ1
ϵ2
ϵ3
⎤
⎦, and C =
⎡
⎣
c11
c12
c13
c21
c22
c23
c31
c32
c33
⎤
⎦.
Then, taking the trace of C in (1.33), we obtain
trace [C] = 3
	
2η2 −1

+ 2(ϵ2
1 + ϵ2
2 + ϵ2
3) = 4η2 −1,
(1.34)
Note that we have made use of (1.32) to achieve the last equality. Therefore, we obtain
η = ±(trace [C] + 1)
1
2
2
.
(1.35)
An important point to note is that we may choose either sign for η. It can easily be seen
from (1.33) that the quaternions (ϵ, η) and (−ϵ, −η) correspond to the same rotation matrix.
Physically, a positive value for η corresponds to a principal angle in the range −π < φ < π.
A negative value for η corresponds to a principal angle in the range −2π < φ < −π or
π < φ < 2π. As shown in Figure 1.17, by appropriately choosing the direction of the principal

26
Spacecraft Dynamics and Control: An Introduction
a
−a
0 < φ < π
π < φ < 2π
Figure 1.17
Equivalent rotations
axis of rotation, these rotations are equivalent. Having found η, we can now obtain ϵ. From
(1.33),
CT −C = 4ηϵ×,
(1.36)
and we see that if η ̸= 0, then the corresponding ϵ is given by
ϵ1 = c23 −c32
4η
,
ϵ2 = c31 −c13
4η
,
ϵ3 = c12 −c21
4η
.
(1.37)
When η = 0, the rotation matrix becomes
C = −1 + 2ϵϵT .
Physically, η = 0 corresponds to a principal rotation angle φ = ±π. We now ﬁnd that if η = 0,
|ϵ1| =
c11 + 1
2
 1
2
= |a1|, |ϵ2| =
c22 + 1
2
 1
2
= |a2|, |ϵ3|
=
c33 + 1
2
 1
2
= |a3|.
(1.38)

Kinematics
27
Since a rotation of either π or −π about the axes a and −a are equivalent, we can arbitrarily
choose the sign of one of ϵ1, ϵ2 or ϵ3. Some possible solutions are
• If η = 0 and |ϵ1| > 0,
ϵ1 = |ϵ1|,
ϵ2 = sign (c12) |ϵ2|,
ϵ3 = sign (c13) |ϵ3|.
• If η = 0 and |ϵ2| > 0,
ϵ1 = sign (c12) |ϵ1|,
ϵ2 = |ϵ2|,
ϵ3 = sign (c23) |ϵ3|.
• If η = 0 and |ϵ3| > 0,
ϵ1 = sign (c13) |ϵ1|,
ϵ2 = sign (c23) |ϵ2|,
ϵ3 = |ϵ3|.
We now note some useful points. First of all, the quaternion parameterization of the zero
rotation (φ = 0 or C = 1) is (0, ±1). Next, from (1.33) is immediately obvious that if (ϵ, η)
is the quaternion parameterization of C, then (−ϵ, η) is a quaternion parameterization of the
inverse rotation, CT .
1.3.4.2
Successive Rotations
Let us now consider three reference frames F1, F2 and F3, with associated rotation matrices
C21, C32 and C31, such that
C31 = C32C21.
We parameterize each rotation matrix with a quaternion, C21 = C(ϵ1, η1), C32 = C(ϵ2, η2)
and C31 = C(ϵ3, η3), such that
C21 =
	
2η2
1 −1

1 + 2ϵ1ϵT
1 −2η1ϵ×
1 ,
C32 =
	
2η2
2 −1

1 + 2ϵ2ϵT
2 −2η2ϵ×
2 ,
C31 =
	
2η2
3 −1

1 + 2ϵ3ϵT
3 −2η3ϵ×
3 .
We shall now ﬁnd (ϵ3, η3) as a function of (ϵ1, η1) and (ϵ2, η2). The resulting expressions are
very useful, since they allow the computation of the new quaternion without having to ﬁrst
form the rotation matrix and then extracting it.

28
Spacecraft Dynamics and Control: An Introduction
To address this problem, we note that the scalar and vector parts of the quaternion satisfy
(1.34) and (1.36) respectively. Let us now compute C31. We have,
C31 =
	
2η2
2 −1

1 + 2ϵ2ϵT
2 −2η2ϵ×
2
 	
2η2
1 −1

1 + 2ϵ1ϵT
1 −2η1ϵ×
1

=
	
2η2
2 −1

 	
2η2
1 −1

1 + 2
	
2η2
2 −1

ϵ1ϵT
1 −2η1
	
2η2
2 −1

ϵ×
1
+ 2
	
2η2
1 −1

ϵ2ϵT
2 + 4ϵ2ϵT
2 ϵ1ϵT
1 −4η1ϵ2ϵT
2 ϵ×
1
−2η2
	
2η2
1 −1

ϵ×
2 −4η2ϵ×
2 ϵ1ϵT
1 + 4η1η2ϵ×
2 ϵ×
1 .
Noting that
ϵ2ϵT
2 ϵ1ϵT
1 =
	
ϵT
2 ϵ1

ϵ2ϵT
1
and
ϵ×
2 ϵ×
1 = ϵ1ϵT
2 −
	
ϵT
2 ϵ1

1,
we can rewrite the rotation matrix as
C31 =
	
2η2
2 −1

 	
2η2
1 −1

1 + 2
	
2η2
2 −1

ϵ1ϵT
1 −2η1
	
2η2
2 −1

ϵ×
1
+ 2
	
2η2
1 −1

ϵ2ϵT
2 + 4
	
ϵT
2 ϵ1

ϵ2ϵT
1 −4η1ϵ2ϵT
2 ϵ×
1
−2η2
	
2η2
1 −1

ϵ×
2 −4η2ϵ×
2 ϵ1ϵT
1 + 4η1η2ϵ1ϵT
2 −4η1η2
	
ϵT
2 ϵ1

1.
(1.39)
First, we shall ﬁnd η3. Taking the trace of C31 in (1.39), we obtain (note that we make use of
the fact that for any two matrices A and B, the trace satisﬁes trace [AB] = trace [BA], provided
the multiplication on the right makes sense),
trace [C31] = 3
	
2η2
2 −1

 	
2η2
1 −1

+ 2
	
2η2
2 −1

ϵT
1 ϵ1 + 2
	
2η2
1 −1

ϵT
2 ϵ2
+ 4
	
ϵT
2 ϵ1

2 −4η1ϵT
2 ϵ×
1 ϵ2 −4η2ϵT
1 ϵ×
2 ϵ1
+ 4η1η2
	
ϵT
2 ϵ1

−12η1η2
	
ϵT
2 ϵ1

.
Making use of the facts ϵT
1 ϵ1 = 1 −η2
1, ϵT
2 ϵ2 = 1 −η2
2, and noting that ϵT
1 ϵ×
2 ϵ1 = ϵT
2 ϵ×
1 ϵ2 =
0, we can reduce this to
trace [C31] = 4 (η1η2)2 −8 (η1η2)
	
ϵT
2 ϵ1

+ 4
	
ϵT
2 ϵ1

2 −1,
= 4

η1η2 −ϵT
2 ϵ1
2 −1.
Comparing this to (1.34), and recalling that we are free to choose the sign of η3, we see that
we can choose
η3 = η1η2 −ϵT
2 ϵ1.
(1.40)

Kinematics
29
Now, let us ﬁnd the vector part of the quaternion, ϵ3. From (1.36), we see that we must compute
CT
31 −C31. From (1.39) we have,
CT
31 −C31 = 4η1
	
2η2
2 −1

ϵ×
1 −4
	
ϵT
2 ϵ1

 
ϵ2ϵT
1 −ϵ1ϵT
2

+ 4η1

ϵ2ϵT
2 ϵ×
1 + ϵ×
1 ϵ2ϵT
2

+ 4η2
	
2η2
1 −1

ϵ×
2
+ 4η2

ϵ1ϵT
1 ϵ×
2 + ϵ×
2 ϵ1ϵT
1

+ 4η1η2

ϵ2ϵT
1 −ϵ1ϵT
2

.
(1.41)
We now derive a new column matrix identity, which shall be very useful. We have
	
a×b

× c = −c×a×b = −
	
bT c

a −
	
aT c

b

=

baT −abT 
c.
Since this must hold for all c ∈R3, we have
	
a×b

× = baT −abT .
(1.42)
Applying this identity, we have
ϵ2ϵT
1 −ϵ1ϵT
2 =
	
ϵ×
1 ϵ2

× .
Making use of this and noting that 2η2 −1 = η2 −ϵT ϵ, we can rewrite (1.41) as
CT
31 −C31 = 4η1η2
	
η2ϵ×
1 + η1ϵ×
2

+ 4
	
η1η2 −ϵT
2 ϵ1

 	
ϵ×
1 ϵ2

×
−4η1
	
ϵT
2 ϵ2

ϵ×
1 −4η2
	
ϵT
1 ϵ1

ϵ×
2
+ 4η1

ϵ2ϵT
2 ϵ×
1 + ϵ×
1 ϵ2ϵT
2

+ 4η2

ϵ1ϵT
1 ϵ×
2 + ϵ×
2 ϵ1ϵT
1

.
(1.43)
Now, making use of the identity (1.42), we shall reduce the square bracket terms. We have
ϵ2ϵT
2 ϵ×
1 + ϵ×
1 ϵ2ϵT
2 =
	
ϵ×
1 ϵ2

ϵT
2 −ϵ2
	
ϵ×
1 ϵ2

T
=
	
ϵ×
2 ϵ×
1 ϵ2

× ,
and
ϵ1ϵT
1 ϵ×
2 + ϵ×
2 ϵ1ϵT
1 =
	
ϵ×
2 ϵ1

ϵT
1 −ϵ1
	
ϵ×
2 ϵ1

T
=
	
ϵ×
1 ϵ×
2 ϵ1

× .
Making use of the identity
a×b×c = (aT c)b −(aT b)c,

30
Spacecraft Dynamics and Control: An Introduction
we can reduce these to
ϵ2ϵT
2 ϵ×
1 + ϵ×
1 ϵ2ϵT
2 =
	
ϵ×
2 ϵ×
1 ϵ2

×
=
	
ϵT
2 ϵ2

ϵ1 −
	
ϵT
1 ϵ2

ϵ2
×
=
	
ϵT
2 ϵ2

ϵ×
1 −
	
ϵT
1 ϵ2

ϵ×
2 ,
and
ϵ1ϵT
1 ϵ×
2 + ϵ×
2 ϵ1ϵT
1 =
	
ϵ×
1 ϵ×
2 ϵ1

×
=
	
ϵT
1 ϵ1

ϵ2 −
	
ϵT
2 ϵ1

ϵ1
×
=
	
ϵT
1 ϵ1

ϵ×
2 −
	
ϵT
2 ϵ1

ϵ×
1 .
Making use of these in (1.43), we ﬁnally obtain
CT
31 −C31 = 4
	
η1η2 −ϵT
2 ϵ1

 
η2ϵ1 + η1ϵ2 + ϵ×
1 ϵ2
× .
Recognizing η3 from before, we have
CT
31 −C31 = 4η3

η2ϵ1 + η1ϵ2 + ϵ×
1 ϵ2
× .
Comparing this to (1.36), we see that if η3 ̸= 0, then we can ﬁnd the corresponding vector part
of the quaternion as
ϵ3 = η2ϵ1 + η1ϵ2 + ϵ×
1 ϵ2.
(1.44)
Now all that remains is to check the vector part of the quaternion when η3 = 0. We note that
when η3 = 0, C31 becomes
C31 = −1 + 2ϵ3ϵT
3 ,
which is symmetric. In particular, we have
C31 + CT
31 = −21 + 4ϵ3ϵT
3 .
(1.45)
From (1.39), we have
C31 + CT
31 = 2
	
2η2
2 −1

 	
2η2
1 −1

1 + 4
	
2η2
2 −1

ϵ1ϵT
1
+ 4
	
2η2
1 −1

ϵ2ϵT
2 + 4
	
ϵT
2 ϵ1

 
ϵ2ϵT
1 + ϵ1ϵT
2

−4η1

ϵ2ϵT
2 ϵ×
1 −ϵ×
1 ϵ2ϵT
2

−4η2

ϵ×
2 ϵ1ϵT
1 −ϵ1ϵT
1 ϵ×
2

4η1η2

ϵ1ϵT
2 + ϵ2ϵT
1

−8η1η2
	
ϵT
2 ϵ1

1
(1.46)

Kinematics
31
Let us now examine this term by term. Noting from (1.40) that η1η2 = ϵT
2 ϵ1 when η3 = 0, we
have
2
	
2η2
2 −1

 	
2η2
1 −1

−8η1η2
	
ϵT
2 ϵ1

= −2 +

4 −4
	
η2
1 + η2
2


.
Next, since η2 + ϵT ϵ = 1, we have
4
	
2η2
2 −1

ϵ1ϵT
1 = 4 (η2ϵ1) (η2ϵ1)T −4
	
ϵT
2 ϵ2

ϵ1ϵT
1 ,
4
	
2η2
1 −1

ϵ2ϵT
2 = 4 (η1ϵ2) (η1ϵ2)T −4
	
ϵT
1 ϵ1

ϵ2ϵT
2 .
We can also rewrite the following factors
−4η1

ϵ2ϵT
2 ϵ×
1 −ϵ×
1 ϵ2ϵT
2

= 4 (η1ϵ2)
	
ϵ×
1 ϵ2

T + 4
	
ϵ×
1 ϵ2

(η1ϵ2)T ,
−4η2

ϵ×
2 ϵ1ϵT
1 −ϵ1ϵT
1 ϵ×
2

= 4
	
ϵ×
1 ϵ2

(η2ϵ1)T + 4 (η2ϵ1)
	
ϵ×
1 ϵ2

T ,
4η1η2

ϵ1ϵT
2 + ϵ2ϵT
1

= 4 (η2ϵ1) (η1ϵ2)T + 4 (η1ϵ2) (η2ϵ1)T .
Making use of these expansions, we can rewrite (1.46) as
C31 + CT
31 = −21 + 4 (η2ϵ1) (η2ϵ1)T + 4 (η1ϵ2) (η1ϵ2)T
+ 4 (η1ϵ2)
	
ϵ×
1 ϵ2

T + 4
	
ϵ×
1 ϵ2

(η1ϵ2)T
+ 4
	
ϵ×
1 ϵ2

(η2ϵ1)T + 4 (η2ϵ1)
	
ϵ×
1 ϵ2

T
+ 4 (η2ϵ1) (η1ϵ2)T + 4 (η1ϵ2) (η2ϵ1)T
+ 4
	
ϵT
2 ϵ1

 
ϵ2ϵT
1 + ϵ1ϵT
2

−
	
ϵT
2 ϵ2

ϵ1ϵT
1 −
	
ϵT
1 ϵ1

ϵ2ϵT
2
+

1 −
	
η2
1 + η2
2


1

(1.47)
Now we just need to take care of the ﬁnal bracketed term. Making use of the identity aaT =
a×a× + aT a1, we have
	
ϵ×
1 ϵ2

 	
ϵ×
1 ϵ2

T =
	
ϵ×
1 ϵ2

× 	
ϵ×
1 ϵ2

× +
	
ϵ×
1 ϵ2

T 	
ϵ×
1 ϵ2

1
=
	
ϵ2ϵT
1 −ϵ1ϵT
2

 	
ϵ2ϵT
1 −ϵ1ϵT
2

−ϵT
2 ϵ×
1 ϵ×
1 ϵ21
= ϵ2ϵT
1 ϵ2ϵT
1 −ϵ2ϵT
1 ϵ1ϵT
2 −ϵ1ϵT
2 ϵ2ϵT
1 + ϵ1ϵT
2 ϵ1ϵT
2
−ϵT
2
	
ϵ1ϵT
1 −ϵT
1 ϵ11

ϵ21
=
	
ϵT
2 ϵ1

 
ϵ2ϵT
1 + ϵ1ϵT
2

−
	
ϵT
1 ϵ1

ϵ2ϵT
2 −
	
ϵT
2 ϵ2

ϵ1ϵT
1
+
	
ϵT
1 ϵ1

 	
ϵT
2 ϵ2

−
	
ϵT
2 ϵ1

2
1.

32
Spacecraft Dynamics and Control: An Introduction
Since η3 = 0 means that η1η2 = ϵT
2 ϵ1, and making use of the unit magnitude constraint
η2 + ϵT ϵ = 1, the last term in brackets becomes
	
ϵT
1 ϵ1

 	
ϵT
2 ϵ2

−
	
ϵT
2 ϵ1

2 = 1 −
	
η2
1 + η2
2

.
Substituting this back in, we have
	
ϵ×
1 ϵ2

 	
ϵ×
1 ϵ2

T =
	
ϵT
2 ϵ1

 
ϵ2ϵT
1 + ϵ1ϵT
2

−
	
ϵT
1 ϵ1

ϵ2ϵT
2 −
	
ϵT
2 ϵ2

ϵ1ϵT
1
+

1 −
	
η2
1 + η2
2


1.
We can now see that this is precisely the last bracketed term in (1.47). Therefore, we can
ﬁnally write
C31 + CT
31 = −21 + 4

η2ϵ1 + η1ϵ2 + ϵ×
1 ϵ2
 
η2ϵ1 + η1ϵ2 + ϵ×
1 ϵ2
T .
(1.48)
We shall now make use of the fact that for two column matrices a and b, if aaT = bbT , then
b = ±a. When η3 = 0, the sign of the vector part of the quaternion does not matter. Comparing
(1.48) with (1.45), we see therefore that we may take
ϵ3 = η2ϵ1 + η1ϵ2 + ϵ×
1 ϵ2,
which is the same as for the case η3 ̸= 0.
In summary, given the rotation matrices C21 = C(ϵ1, η1), C32 = C(ϵ2, η2) and C31 =
C(ϵ3, η3) and their respective quaternion parameterizations, given that C31 = C32C21,
the associated quaternions are related by
ϵ3 = η2ϵ1 + η1ϵ2 + ϵ×
1 ϵ2,
η3 = η1η2 −ϵT
2 ϵ1.
(1.49)
1.4
Derivatives of Vectors
Now that we have examined physical vectors and their representations with respect to reference
frames, we are in a position to look at the evolution of physical vectors with respect to time.
Reference frames are crucial for this, since the evolution of a physical vector depends entirely
on the point of view of an observer. For example, an observer attached to one reference frame
will see a different evolution of the physical vector compared with an observer attached to
a different reference frame. For this reason, when we talk about temporal derivatives of a
physical vector, we will talk about the derivative as seen in a particular reference frame.
As such, let us consider a reference frame F1 deﬁned by the unit vectors ⃗x1, ⃗y1 and ⃗z1.
Given a physical vector
⃗r = ⃗F T
1 r1,

Kinematics
33
the time derivative of ⃗r as seen in reference frame F1 is deﬁned to be
˙⃗r
= lim
δt→0
δ⃗r
δt ,
where
δ⃗r
= ⃗F T
1 (r1(t + δt) −r1(t)) .
Therefore, the time derivative of ⃗r as seen in reference frame F1 is given by
˙⃗r = ⃗F T
1 ˙r1.
As a simple consequence of this, if we multiply the vector ⃗r by a time-varying scalar a, we
have
˙

(a⃗r) = ⃗F T
1
˙
(ar1)
= ⃗F T
1 (˙ar1 + a˙r1)
= ˙a⃗r + a˙⃗r.
Similarly, for sums of vectors,
˙
  

⃗a + ⃗b

= ⃗F T
1
˙a1 + ˙b1

= ˙⃗a + ˙⃗b.
We also see immediately that the time derivatives of the unit vectors deﬁning frame F1 are all
⃗0, and that therefore
˙⃗F1 =
⎡
⎢⎣
⃗0
⃗0
⃗0
⎤
⎥⎦.
Finally, we can obtain product rules for scalar- and cross-products of vectors:
d
dt

⃗a · ⃗b

= d
dt

aT b

= ˙aT b + aT ˙b
= ˙⃗a · ⃗b + ⃗a · ˙⃗b.

34
Spacecraft Dynamics and Control: An Introduction
and
˙
  

⃗a × ⃗b

= ⃗F T
1
d
dt

a×b

= ⃗F T
1
˙a×b + a× ˙b

= ˙⃗a × ⃗b + ⃗a × ˙⃗b.
1.4.1
Angular Velocity
Let us consider a second reference frame F2, which is rotating with respect to F1 with angular
velocity ⃗ω21, as shown in Figure 1.18. The magnitude of ⃗ω21, |⃗ω21| is the rate of rotation, and
the direction ⃗ω21/|⃗ω21| is the instantaneous axis of rotation. To understand what this means,
consider the reference frame F2 at two times t and t + δt as seen in reference frame F1. We
know that the transformation from F2(t) to F2(t + δt) is a rotation about some axis ⃗a(δt)
through an angle φ(δt). We formally deﬁne the angular velocity to be
⃗ω21 = lim
δt→0 ⃗a(δt)φ(δt)
δt
.
Let us now consider the time-derivative of an arbitrary physical vector ⃗v rotating with angular
velocity ⃗ω as seen in reference frame F1. First, let us examine a ﬁnite rotation of the vector ⃗v
about a unit vector ⃗a through an angle φ as seen in F1.
We have seen in (1.25) that the rotated vector is given in F1 coordinates by
⃗vrot = ⃗F T
1

cos φ1 + (1 −cos φ)aaT + sin φa×
v.
(1.50)
Now, let δt be very small such that the angle φ(δt) is very small, and sin φ ≈φ and cos φ ≈1.
Under these approximations, we have
⃗v(t + δt) = ⃗F T
1

1 + a×φ

v.
x1
x2
z2
z1
y1
y2
ω
Figure 1.18
Angular velocity

Kinematics
35
From this we ﬁnd that
⃗v(t + δt) −⃗v(t) = ⃗F T
1

a×φ

v,
which leads to
˙⃗v(t) = limδt→0
⃗v(t + δt) −⃗v(t)
δt
= ⃗F T
1 ω×v,
= ⃗ω × ⃗v.
(1.51)
Let us now return to the consideration of the two reference frames F1 and F2, with F2
rotating with angular velocity ⃗ω21 with respect to F1. Using the above result, we have that the
time-derivatives as seen in F1 of the unit vectors deﬁning F2 are
˙⃗x2 = ⃗ω21×⃗x2, ˙⃗y2 = ⃗ω21×⃗y2, ˙⃗z2 = ⃗ω21×⃗z2.
This can be written compactly as
˙⃗F
T
2 = ⃗ω21× ⃗F T
2 .
As we have already discussed, observers in the two reference frames do not see the same
motion, because of their own relative motions. We have already denoted the time-derivatives
of vectors as seen in frame F1 by (˙). Let us denote time derivatives of vectors as seen in frame
F2 by (˚). We now consider the vector
⃗r = ⃗F T
1 r1 = ⃗F T
2 r2.
By deﬁnition, the time derivatives of the vector as seen in each of the frames are
˙⃗r = ⃗F T
1 ˙r1, ˚⃗r = ⃗F T
2 ˙r2,
respectively. Let us now obtain a relationship between the time-derivatives of vectors as seen
in the two frames. Making use of the rules for vector differentiation we obtained earlier, we
have
˙⃗r = ⃗F T
2 ˙r2 + ˙⃗F
T
2 r2
= ˚⃗r + ⃗ω21× ⃗F T
2 r2
= ˚⃗r + ⃗ω21×⃗r.
(1.52)
This very important relationship (1.52) is true for any vector ⃗r, and is referred to as the
Transport Theorem. A very important application occurs when ⃗r denotes the position (of say
a spacecraft), F1 is a nonrotating inertial reference frame, and F2 is a frame that rotates with
the body in question. Equation (1.52) also shows that provided two reference frames are not
rotating with respect to each other (if ⃗ω21 = ⃗0), then the time-derivative of a vector as seen in
both frames is the same, that is ˙⃗r = ˚⃗r.

36
Spacecraft Dynamics and Control: An Introduction
Let us express the angular velocity in frame F2 as
⃗ω21 = ⃗F T
2 ω21.
Making use of this, equation (1.52) becomes
˙⃗r = ⃗F T
1 ˙r1 = ⃗F T
2
˙r2 + ω×
21r2

= ⃗F T
1 C12
˙r2 + ω×
21r2

,
that is, the relationship between the coordinates of the time-derivatives with respect to the two
frames is
˙r1 = C12
˙r2 + ω×
21r2

.
(1.53)
We can make use of the above equation (1.53) to obtain the differential equation for the rotation
matrix C21. To this end, let us consider an arbitrary constant vector ⃗r as seen in frame F1, that
is ˙r1 = 0. In this case, the equation (1.53) becomes
˙r2 + ω×
21r2 = 0
Making use of the transformation of coordinates relationship r2 = C21r1, this becomes
 ˙C21 + ω×
21C21

r1 = 0.
Since the vector ⃗r was arbitrary, this must hold for any r1 ∈R3. Therefore, we have the
differential equation for the rotation matrix
˙C21 = −ω×
21C21.
(1.54)
This equation can be rewritten to give the angular velocity, when the rotation matrix is known
as a function of time:
ω×
21 = −˙C21CT
21.
(1.55)
Finally, we can demonstrate that angular velocities are additive. Let us consider three
reference frames F1, F2 and F3. Let frame F2 rotate with angular velocity ⃗ω21 = ⃗F T
2 ω21 with
respect to F1, let frame F3 rotate with angular velocity ⃗ω32 = ⃗F T
3 ω32 with respect to F2, and
let frame F3 rotate with angular velocity ⃗ω31 = ⃗F T
3 ω31 with respect to F1. Let C21, C32 and
C31 be the associated rotation matrices respectively. From equation (1.54) we have
˙C21 = −ω×
21C21,
˙C32 = −ω×
32C32,
˙C31 = −ω×
31C31.
But, we also know from equation (1.19) that
C31 = C32C21.

Kinematics
37
Differentiating this and using the above differential equations gives
−ω×
31C31 = ˙C31 = ˙C32C21 + C32 ˙C21
= −ω×
32C32C21 −C32ω×
21C21
= −ω×
32C31 −C32ω×
21C21.
Post-multiplying both sides by CT
31, and making use of the fact that C32 = C31CT
21, this
becomes
−ω×
31 = −ω×
32 −C32ω×
21CT
32.
Now, from equation (1.21) we have (C32ω21)× = C32ω×
21CT
32. Therefore, we obtain
−ω×
31 = −ω×
32 −(C32ω21)×,
and
ω31 = ω32 + (C32ω21).
Finally, recognizing that these are just the coordinates of the angular velocities expressed in
F3, this leads to
⃗ω31 = ⃗ω32 + ⃗
ω21,
(1.56)
that is, angular velocities are additive. As a consequence, since a reference frame has zero
angular velocity relative to itself, the angular velocity of frame F1 with respect to F2 is
⃗ω12 = −⃗ω21.
1.4.2
Angular Velocity in Terms of Euler Angle Rates
We have seen that any frame F2 can be obtained from another frame F1 through three
successive principal rotations. The angles of these rotations are called Euler Angles. Making
use of the fact that angular velocities are additive, we can now easily obtain an expression
for the angular velocity in terms of the Euler Angle rates. We will demonstrate this using
the 3-2-1 Euler rotation sequence presented previously. First, it will be useful to deﬁne some
intermediate reference frames. Referring to Figure 1.15, let us denote frame Fi as the frame
obtained from F1 by a principal rotation about the F1 z-axis. Next, let us denote frame Ft as
the frame obtained from Fi by a principal rotation about the Fi y-axis. Finally, frame F2 is
obtained from frame Ft by a principal rotation about the Ft x-axis.
It is now clear that frame Fi is rotating with respect to F1 with an angular velocity given
by
⃗ωi1 = ⃗F T
i
⎡
⎣
0
0
˙ψ
⎤
⎦= ⃗F T
2 Cx(φ)Cy(θ)
⎡
⎣
0
0
˙ψ
⎤
⎦,

38
Spacecraft Dynamics and Control: An Introduction
frame Ft is rotating with respect to Fi with an angular velocity given by
⃗ωti = ⃗F T
t
⎡
⎣
0
˙θ
0
⎤
⎦= ⃗F T
2 Cx(φ)
⎡
⎣
0
˙θ
0
⎤
⎦,
and frame F2 is rotating with respect to Ft with an angular velocity given by
⃗ω2t = ⃗F T
2
⎡
⎣
˙φ
0
0
⎤
⎦.
Making use of the fact that the angular velocities are additive, we ﬁnd that frame F2 rotates
with respect to frame F1 with angular velocity
⃗ω21 = ⃗ω2t + ⃗ωti + ⃗ωi1.
With ⃗ω21 = ⃗F T
2 ω21, we can obtain the relationship between the Euler Angle rates and the
angular velocity in the coordinates of F2 as
ω21 =
⎡
⎣
˙φ
0
0
⎤
⎦+ Cx(φ)
⎡
⎣
0
˙θ
0
⎤
⎦+ Cx(φ)Cy(θ)
⎡
⎣
0
0
˙ψ
⎤
⎦.
(1.57)
Written out in full, this is
ω21 =
⎡
⎣
1
0
−sin θ
0
cos φ
sin φ cos θ
0
−sin φ
cos φ cos θ
⎤
⎦
⎡
⎣
˙φ
˙θ
˙ψ
⎤
⎦.
(1.58)
This can be inverted to give the Euler Angle rates in terms of the angular velocity:
⎡
⎣
˙φ
˙θ
˙ψ
⎤
⎦=
⎡
⎣
1
sin φ tan θ
cos φ tan θ
0
cos φ
−sin φ
0
sin φ sec θ
cos φ sec θ
⎤
⎦ω21.
(1.59)
From this, it is clear that when the 3-2-1 rotation sequence is at the singularity (recall this is
when θ = ±90◦, the Euler Angle rates cannot be obtained from (1.59) due to the terms tan θ
and sec θ being undeﬁned.
1.4.3
Angular Velocity in Terms of Quaternion Rates
We have seen from (1.55) that if frame F2 is rotating with angular velocity ⃗ω21 = ⃗F T
2 ω21
relative to frame F1, then
ω×
21 = −˙C21CT
21.
(1.60)

Kinematics
39
It is important to note that ω21 are the coordinates of ⃗ω21 in frame F2, and C21 is the rotation
matrix transforming coordinates from frame F1 to frame F2.
Making use of the identity ϵ×ϵ× = ϵϵT −ϵT ϵ1 (see (1.14)), and the unit constraint (1.32),
the rotation matrix C21 with quaternion parameterization (ϵ, η), may be written as
C21 = 1 + 2ϵ×ϵ× −2ηϵ×.
(1.61)
Differentiating, we have
˙C21 = 2
	˙ϵ×ϵ× + ϵ×˙ϵ×
−˙ηϵ× −η˙ϵ×
.
(1.62)
By post-multiplying (1.62) with (1.61) and expanding, we ﬁnd that
1
2 ˙C21CT
21 =
	˙ϵ×ϵ× + ϵ×˙ϵ×
−˙ηϵ× −η˙ϵ×
+ 2
	˙ϵ×ϵ× + ϵ×˙ϵ×
ϵ×ϵ× −2˙ηϵ×ϵ×ϵ×
+ 2ηϵ×˙ϵ×ϵ× −2η ˙ηϵ×ϵ× −2η2˙ϵ×ϵ×.
(1.63)
To reduce this expression, we need to make use of some column matrix identities. We have
previously derived
a×b× = baT −
	
aT b

1.
Making use of this identity, we now expand the individual terms in (1.63). We have
ϵ×ϵ× = ϵϵT −
	
ϵT ϵ

1,
ϵ×ϵ×ϵ× = −
	
ϵT ϵ

ϵ×,
˙ϵ×ϵ× = ϵ˙ϵT −
	
ϵT ˙ϵ

1,
ϵ×˙ϵ×ϵ× = −
	
ϵT ˙ϵ

ϵ×,
ϵ×˙ϵ× = ˙ϵϵT −
	
ϵT ˙ϵ

1,
Substituting these into (1.63) and collecting like terms, we obtain
1
2 ˙C21CT
21 = ˙ϵϵT +

1 −2
	
ϵT ϵ

−2η2
ϵ˙ϵT
+

−2
	
ϵT ˙ϵ

+ 4
	
ϵT ˙ϵ

 	
ϵT ϵ

+ 2η ˙η
	
ϵT ϵ

+ 2η2 	
ϵT ˙ϵ


1
+

−˙η + 2˙η
	
ϵT ϵ

−2η
	
ϵT ˙ϵ


ϵ× −η˙ϵ×
+

−2
	
ϵT ˙ϵ

−2η ˙η

ϵϵT .
(1.64)
We can now further reduce each of the coefﬁcients in (1.64), by making use of the unit
magnitude constraint on the quaternion
ϵT ϵ + η2 = 1,
(1.65)

40
Spacecraft Dynamics and Control: An Introduction
and its derivative
ϵT ˙ϵ + η ˙η = 0.
(1.66)
Making use of (1.65), we ﬁnd that
1 −2
	
ϵT ϵ

−2η2 = −1.
Making use of (1.65) and (1.66), we ﬁnd that
−2
	
ϵT ˙ϵ

+ 4
	
ϵT ˙ϵ

 	
ϵT ϵ

+ 2η ˙η
	
ϵT ϵ

+ 2η2 	
ϵT ˙ϵ

= −2
	
ϵT ˙ϵ

+ 2
	
ϵT ϵ + η2
 	
ϵT ˙ϵ

+ 2
	
ϵT ˙ϵ + η ˙η

 	
ϵT ϵ

= 0.
−˙η + 2˙η
	
ϵT ϵ

−2η
	
ϵT ˙ϵ

= ˙η
	
2
	
ϵT ϵ

−1

−2η
	
ϵT ˙ϵ

= ˙η
	
1 −2η2
−2η
	
ϵT ˙ϵ

= ˙η −2
	
η ˙η + ϵT ˙ϵ

η
= ˙η
−2
	
ϵT ˙ϵ

−2η ˙η = 0.
Therefore, (1.64) becomes
1
2
˙C21CT
21 =
	˙ϵϵT −ϵ˙ϵT 
−η˙ϵ× + ˙η˙ϵ×.
We need one more identity to reduce the bracketed term. Making use of (1.42), we ﬁnd that
˙ϵϵT −ϵ˙ϵT =
	
ϵ×˙ϵ

× ,
and we ﬁnally have
1
2
˙C21CT
21 =
	
ϵ×˙ϵ

× −η˙ϵ× + ˙ηϵ×.
Therefore, from (1.60), we have
ω×
21 = −2
	
ϵ×˙ϵ

× −η˙ϵ× + ˙ηϵ×
Finally, since both sides of the above equation are cross-product operators, we can extract the
equation for the angular velocity as
ω21 = 2
	
η1 −ϵ×
 ˙ϵ −2ϵ ˙η.
(1.67)

Kinematics
41
We can now invert (1.67) to ﬁnd the quaternion rates in terms of the angular velocity. To do
this, we write (1.67) in matrix form, and append the derivative constraint (1.66).
 
ω21
0
!
= 2
 	
η1 −ϵ×
−ϵ
ϵT
η
!  
˙ϵ
˙η
!
.
It is straightforward to show that the above matrix is orthonormal (just multiply it by its trans-
pose and use the same identities as before). Therefore, we may invert the above relationship
to obtain
 
˙ϵ
˙η
!
= 1
2
 	
η1 + ϵ×
ϵ
−ϵT
η
!  
ω21
0
!
.
From this, we can extract the equations for the quaternion rates in terms of the angular
velocity
˙ϵ = 1
2
	
η1 + ϵ×
ω21,
˙η = −1
2ϵT ω21.
(1.68)
1.5
Velocity and Acceleration
We shall now obtain expressions for the velocity and acceleration as seen in different reference
frames. As before, we consider the frames F1 and F2.
Let us denote the velocity as seen in frame F1 by
⃗v = ˙⃗r = ˚⃗r + ⃗ω21×⃗r
(1.69)
The acceleration as seen in frame F1 can be obtained by applying the rule in (1.52) to ⃗v:
¨⃗r = ˙⃗v = ˚⃗v + ⃗ω21×⃗v
=
◦◦
⃗r +⃗ω21 × ˚⃗r + ˚⃗ω21 × ⃗r

+

⃗ω21 × ˚⃗r + ⃗ω21 × ⃗ω21 × ⃗r

=
◦◦
⃗r +2⃗ω21 × ˚⃗r + ˚⃗ω21 × ⃗r + ⃗ω21 × ⃗ω21 × ⃗r.
(1.70)
The different terms in the above expression for the acceleration have special names:
◦◦
⃗r
acceleration as seen in F2,
2⃗ω21 × ˚⃗r
coriolis acceleration,
˚⃗ω21 × ⃗r
angular acceleration,
⃗ω21 × ⃗ω21 × ⃗r
centripetal acceleration.

42
Spacecraft Dynamics and Control: An Introduction
The coordinates for acceleration in (1.70) given in the two reference frames can be obtained
by using the expressions
¨⃗r = ⃗F T
1 ¨r1,
◦◦
⃗r= ⃗F T
2 ¨r2, ⃗ω21 = ⃗F T
2 ω21.
The result is
¨r1 = C12
¨r2 + 2ω×
21˙r2 + ˙ω×
21r2 + ω×
21ω×
21r2

.
1.6
More Rigorous Deﬁnition of Angular Velocity
Consider two reference frames F2 and F1. Let the unit basis vectors of frame F2 be ⃗x2, ⃗y2 and
⃗z2. Recall that the basis vectors must satisfy the normality and orthogonality constraints
⃗x2 · ⃗x2 = ⃗y2 · ⃗y2 = ⃗z2 · ⃗z2 = 1,
(1.71)
and
⃗x2 · ⃗y2 = ⃗x2 · ⃗z2 = ⃗y2 · ⃗z2 = 0.
(1.72)
respectively.
We are now going to examine the time-derivative of frame F2 as seen in frame F1. Let (˙⃗a)
denote the time-derivative of the vector ⃗a as seen in F1.
Let us now take the derivatives of the normality constraints (1.71). We see that
⃗x2 · ˙⃗x2 = 0, ⃗y2 · ˙⃗y2 = 0, ⃗z2 · ˙⃗z2 = 0.
That is,
⃗x2 ⊥˙⃗x2, ⃗y2 ⊥˙⃗y2, ⃗z2 ⊥˙⃗z2.
Therefore, we can ﬁnd vectors ⃗a, ⃗b and ⃗c such that
˙⃗x2 = ⃗a × ⃗x2, ˙⃗y2 = ⃗b × ⃗y2, ˙⃗z2 = ⃗c × ⃗z2.
(1.73)
The reason we can do this will be clear shortly. Let ⃗a⊥x, ⃗b⊥y and ⃗c⊥z be the components of ⃗a,
⃗b and ⃗c that are perpendicular to ⃗x2, ⃗y2 and ⃗z2 respectively. As we have seen in (1.6), we can
rewrite the above derivatives as
˙⃗x2 = ⃗a⊥x × ⃗x2, ˙⃗y2 = ⃗b⊥y × ⃗y2, ˙⃗z2 = ⃗c⊥z × ⃗z2.

Kinematics
43
Now, let us express each of the vectors in F2 coordinates. We have
⃗x2 = ⃗F T
2
⎡
⎣
1
0
0
⎤
⎦, ⃗y2 = ⃗F T
2
⎡
⎣
0
1
0
⎤
⎦, ⃗z2 = ⃗F T
2
⎡
⎣
0
0
1
⎤
⎦,
and
⃗a⊥x = ⃗F T
2
⎡
⎣
0
ay
az
⎤
⎦, ⃗b⊥y = ⃗F T
2
⎡
⎣
bx
0
bz
⎤
⎦, ⃗c⊥x = ⃗F T
2
⎡
⎣
cx
cy
0
⎤
⎦.
Let us now see why we can always ﬁnd vectors ⃗a, ⃗b and ⃗c such that our derivatives are given
by (1.73). Consider ˙⃗x2. Since ⃗x2 ⊥˙⃗x2, when ˙⃗x2 is expressed in F2 coordinates, it must have
the form
˙⃗x2 = ⃗F T
2
⎡
⎣
0
p
q
⎤
⎦,
for some p and q. Let us now look at the derivative expression in F2. We have
˙⃗x2 = ⃗a⊥x × ⃗x2 = −⃗x2 × ⃗a⊥x,
which leads to
⎡
⎣
0
p
q
⎤
⎦=
⎡
⎣
0
0
0
0
0
1
0
−1
0
⎤
⎦
⎡
⎣
0
ay
az
⎤
⎦=
⎡
⎣
0
az
+ay
⎤
⎦.
which is clearly always solvable for ay and az, and hence ⃗a. We can similarly always solve for
⃗b and ⃗c.
Now, let us examine the orthogonality constraints (1.72). Differentiating these, we obtain
˙⃗x2 · ⃗y2 + ⃗x2 · ˙⃗y2 = 0,
˙⃗x2 · ⃗z2 + ⃗x2 · ˙⃗z2 = 0,
˙⃗y2 · ⃗z2 + ⃗y2 · ˙⃗z2 = 0.
Substituting the derivative expressions, these become
	⃗a⊥x × ⃗x2

· ⃗y2 + ⃗x2 ·

⃗b⊥y × ⃗y2

= 0,
	⃗a⊥x × ⃗x2

· ⃗z2 + ⃗x2 ·
	⃗c⊥z × ⃗z2

= 0,

⃗b⊥y × ⃗y2

· ⃗z2 + ⃗y2 ·
	⃗c⊥z × ⃗z2

= 0.

44
Spacecraft Dynamics and Control: An Introduction
Making use of the scalar triple product identity (see the end of Section 2.1), and the fact that
for a right-handed coordinate system we have ⃗x1 × ⃗y1 = ⃗z1, ⃗y1 × ⃗z1 = ⃗x1 and ⃗z1 × ⃗x1 = ⃗y1,
we obtain the constraints

⃗b⊥y −⃗a⊥x

· ⃗z2 = 0,
	⃗c⊥z −⃗a⊥x

· ⃗y2 = 0,

⃗c⊥z −⃗b⊥y

· ⃗x2 = 0.
These constraints lead to
bz = az, cx = bx, cy = ay,
so that we must have
⃗a⊥x = ⃗F T
2
⎡
⎣
0
ay
az
⎤
⎦, ⃗b⊥y = ⃗F T
2
⎡
⎣
bx
0
az
⎤
⎦, ⃗c⊥z = ⃗F T
2
⎡
⎣
bx
ay
0
⎤
⎦.
Now, note that the vector ⃗F T
2
⎡
⎣
bx
0
0
⎤
⎦is parallel to ⃗x2, the vector ⃗F T
2
⎡
⎣
0
ay
0
⎤
⎦is parallel to ⃗y2
and the vector ⃗F T
2
⎡
⎣
0
0
az
⎤
⎦is parallel to ⃗z2. Therefore, see that we can write
⃗ω21 × ⃗x2 = ⃗a⊥x × ⃗x2, ⃗ω21 × ⃗y2 = ⃗b⊥y × ⃗y2, ⃗ω21 × ⃗z2 = ⃗c⊥z × ⃗z2,
where
⃗ω21 = ⃗a⊥x + ⃗F T
2
⎡
⎣
bx
0
0
⎤
⎦= ⃗b⊥y + ⃗F T
2
⎡
⎣
0
ay
0
⎤
⎦= ⃗c⊥z + ⃗F T
2
⎡
⎣
0
0
az
⎤
⎦= ⃗F T
2
⎡
⎣
bx
ay
az
⎤
⎦.
We call the vector ⃗ω21 the angular velocity of frame F2 relative to frame F1, and we have the
relationships
˙⃗x2 = ⃗ω21×⃗x2, ˙⃗y2 = ⃗ω21×⃗y2, ˙⃗z2 = ⃗ω21×⃗z2.
These are the same as we have formally derived in Section 1.4.1.
Notes
In this chapter, we have developed the mathematics necessary to describe the kinematics of
spacecraft motion. We have purposely chosen to develop the kinematics using the vectrix
formalism. The use of vectrices provides a clear distinction between a physical vector and its

Kinematics
45
coordinate representation in a particular reference frame. This becomes important in spacecraft
dynamics problems where many different reference frames may be considered simultaneously.
This then results in several different coordinate representations for the same physical vector.
As will become evident in later chapters in this book, the use of vectrices allows the spacecraft
equations of motion to be derived purely in terms of physical vectors, without consideration
of its coordinates in any particular reference frame. Finally, once the equations of motion
have been obtained in physical vector form, their coordinate representations in any particular
reference frame may be obtained directly. The term vectrix was ﬁrst coined by Peter C.
Hughes, and the reader can ﬁnd further treatment of vectrices in Hughes (2004). Similar
formalisms may also be found in Likins (1973) and Wittenburg (1977). In Section 1.3, we
have explained how the spacecraft attitude is described by a rotation matrix, which may be
equivalently represented by a principal axis and angle of rotation, a quaternion or a set of Euler
Angles. There are several other parameterizations of a rotation matrix. A detailed treatment is
contained in Shuster (1993).
References
Hughes PC 2004 Spacecraft Attitude Dynamics. Dover Publications, Mineola, NY.
Likins PW 1973 Elements of Engineering Mechanics. McGraw-Hill, New York, NY.
Shuster MD 1993 A Survey of Attitude Representations. Journal of the Astronautical Sciences 41(4), 439–517.
Wittenburg J 1977 Dynamics of Systems of Rigid Bodies. Teubner, Stuttgart.


2
Rigid Body Dynamics
Now that we have a framework for the description of the position and attitude of a spacecraft in
three dimensions, we can formulate the equations of motion. Generally, spacecraft structures
have some ﬂexibility (that is, they can elastically deform). However, often times they can be
approximated as rigid bodies (that is, they cannot deform). This will be the approach taken in
this book. We will start with the dynamics of a single particle, then extend it to a system of
particles, and ﬁnally extend this to a rigid body.
2.1
Dynamics of a Single Particle
The dynamics of a single particle are governed by Newton’s second law of motion. First, we
need to specify an inertial frame of reference, which we will denote F I. This is a frame of
reference where Newton’s laws hold. The speciﬁcation of such a reference frame depends on
the problem at hand. For our purposes, such a frame has the origin at the sun, with orientation
ﬁxed with respect to the stars. It is a property of inertial reference frames that any frame that
is stationary or moving with constant velocity (but not rotating) with respect to an inertial
reference frame is also inertial. This is since the acceleration with respect to those frames is
the same, which is a simple consequence of the fact that we discovered in Section 1.4.1 that
time-derivatives of vectors as seen in frames that are not rotating with respect to each other,
are the same.
This is easy to show. Let us consider a particle of constant mass m with position ⃗r with
respect to the origin of FI, as shown in Figure 2.1. Consider a second reference frame F2
whose origin is located at a position ⃗rF2 from the origin of FI, and is translating with constant
velocity relative to FI, but is not rotating with respect to FI. The position of the particle with
respect to the origin of F2 is given by ⃗r2 = ⃗r −⃗rF2. Note that the velocity of F2 is given by
⃗vF2 = ˙⃗rF2, which is constant. Now, let us ﬁnd the acceleration of the particle as seen in both
frames. In frame FI, the velocity of the particle is
˙⃗r = ˙⃗rF2 + ˙⃗r2 = ⃗vF2 + ˙⃗r2,
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

48
Spacecraft Dynamics and Control: An Introduction
m
F2
F1
rF 2
r
r2
Figure 2.1
Translating reference frame
and the acceleration is
¨⃗r = ˙⃗vF2 + ¨⃗r2 = ¨⃗r2.
But, since F2 is not rotating with respect to FI, time-derivatives of vectors are the same and
¨⃗r2 is just the acceleration of the particle as seen in F2. From this point on in this book, the
time-derivative of a physical vector as seen in an inertial frame of reference shall be denoted
by an overdot (˙).
As a consequence of this, once we have identiﬁed one inertial frame of reference, it is
possible to obtain any other inertial frame from it. Of particular interest to this book, since the
earth is orbiting the sun slowly (one revolution per year), a frame of reference with origin at
the center of the Earth whose orientation is ﬁxed with respect to the stars is translating with
approximately constant velocity with respect to the sun (throughout the period of a geocentric
orbit, which is on the order of hours). This frame can be considered (almost) inertial (for the
purposes of modeling geocentric orbits), and is called the Earth-Centered-Inertial (ECI) frame.
This frame is important when describing the motion of Earth-orbiting satellites.
Having discussed all this, let us now return to the problem at hand (the dynamics of a single
particle). We consider a particle of constant mass m with position ⃗r, as shown in Figure 2.2.
The momentum of the particle is deﬁned as ⃗p = m˙⃗r, and the particle is subject to the force ⃗f.
Newton’s second law of motion gives the translational dynamics of the particle:
m¨⃗r = ⃗f,
(2.1)
The angular momentum of the particle about O is deﬁned by
⃗hO
= ⃗r × ⃗p = m⃗r × ˙⃗r.
The inertial time-derivative of the angular momentum is
˙⃗hO = m˙⃗r × ˙⃗r + m⃗r × ¨⃗r

Rigid Body Dynamics
49
m
FI
r
O
f
Figure 2.2
Single particle dynamics
Making use of (2.1), this gives
˙⃗hO = ⃗tO, ⃗tO = ⃗r × ⃗f,
(2.2)
where the vector⃗tO is the torque about O due to the force ⃗f. That is, the inertial time-derivative
of the angular momentum is equal to the external torque.
2.2
Dynamics of a System of Particles
We can now extend the formulation to a system of N particles. As shown in Figure 2.3, we let
each of the particles have mass mi and position ⃗ri for i = 1, . . . , N. Each particle has forces
acting upon them. They can be divided into two classes:
1. Forces from external sources, denoted by ⃗Fi, i = 1, . . . , N.
2. Forces from internal sources, that is forces from the other N −1 masses. These will be
denoted by ⃗fi j, meaning the force exerted on particle i by particle j. Since a particle does
not exert a force on itself, we set ⃗fii = ⃗0.
From Newton’s third law, if particle j exerts a force on particle i, then particle i exerts an
opposing force on particle j, equal in magnitude, but opposite in direction. That is,
⃗fi j = −⃗f ji
(2.3)
mi
FI
ri
O
mj
Fi
Fj
rj
fij
fji
Figure 2.3
Dynamics of a system of particles

50
Spacecraft Dynamics and Control: An Introduction
Now, applying Newton’s second law to the ith particle gives
mi ¨⃗ri = ⃗Fi +
N

j=1
⃗fi j.
(2.4)
Summing all of the equations of motion in (2.4) for the N masses gives
N

i=1
mi ¨⃗ri =
N

i=1
⃗Fi +
N

i=1
N

j=1
⃗fi j.
From Newton’s third law (2.3), the last term is N
i=1
N
j=1 ⃗fi j = ⃗0. Therefore, we have
N

i=1
mi ¨⃗ri =
N

i=1
⃗Fi.
(2.5)
Now, it will be useful to deﬁne the center of mass of the system of particles. This is deﬁned as
⃗rc =
N
i=1 mi⃗ri
m
,
(2.6)
where m = N
i=1 mi is the total mass of the system. Making use of this deﬁnition, we can
obtain the translational equation for the center of mass from (2.5) as
m¨⃗rc = ⃗F, ⃗F =
N

i=1
⃗Fi,
(2.7)
where ⃗F is the total external force acting on the system of particles. Comparing this to (2.1),
we can see that the equation of motion for the center of mass of a system of particles is the
same as for a single particle. It will be useful to write the angular equation of motion about
an arbitrary point O∗, which may or may not be moving, as shown in Figure 2.4. It is clear
that the position of the ith particle is given by
⃗ri = ⃗rO∗+ ⃗ρi, i = 1, . . . , N.
FI
rO∗
O
mi
Fi
ri
O∗
fij
ρi
Figure 2.4
Dynamics of a system of particles about point O∗

Rigid Body Dynamics
51
The equation of motion of the particle (2.4) becomes
mi ¨⃗ρi = ⃗Fi +
N

j=1
⃗fi j −mi ¨⃗rO∗.
(2.8)
The angular momentum of the ith particle about O∗is deﬁned as
⃗hi,O∗= mi ⃗ρi × ˙⃗ρi, i = 1, . . . , N.
The angular momentum of the system of particles about O∗is then
⃗hO∗=
N

i=1
⃗hi,O∗=
N

i=1
mi ⃗ρi × ˙⃗ρi.
(2.9)
Taking the inertial time-derivative of (2.9) and making use of (2.8) leads to
˙⃗hO∗=
N

i=1
⃗ρi × ⃗Fi +
N

i=1
⃗ρi ×
N

j=1
⃗fi j −
N

i=1
mi ⃗ρi × ¨⃗rO∗,
=
N

i=1
⃗ρi × ⃗Fi +
N

i=1
N

j=1
⃗ρi × ⃗fi j −⃗cO∗× ¨⃗rO∗,
(2.10)
where we have deﬁned the ﬁrst moment of mass of the system about O∗as
⃗cO∗=
N

i=1
mi ⃗ρi.
Now, making use of Newton’s third law (2.3), the double sum in (2.10) becomes
N

i=1
N

j=1
⃗ρi × ⃗fi j = 1
2
N

i=1
N

j=1
(⃗ρi −⃗ρ j) × ⃗fi j.
But, the vector (⃗ρi −⃗ρ j) is just the vector pointing from particle j to particle i. Assuming that
the force ⃗fi j acts along the line joining particle i and j as shown in Figure 2.5, that is assuming
(⃗ρi −⃗ρ j) and ⃗fi j are parallel, we have
N

i=1
N

j=1
⃗ρi × ⃗fi j = ⃗0.

52
Spacecraft Dynamics and Control: An Introduction
FI
rO∗
O
mi
O∗
fij
ρi
ρj
mj
ρi −ρj
Figure 2.5
Internal forces acting along the line between particles
The angular equation of motion (2.10) then becomes
˙⃗hO∗= ⃗TO∗−⃗cO∗× ¨⃗rO∗, ⃗TO∗=
N

i=1
⃗ρi × ⃗Fi.
(2.11)
where ⃗TO∗is the total external torque applied to the system about the point O∗.
A special situation arises when we choose the point O∗to be the system center of mass, c.
In this case, the ﬁrst moment of mass about c is ⃗cc = ⃗0 by deﬁnition, and the angular equation
of motion becomes
˙⃗hc = ⃗Tc, ⃗Tc =
N

i=1
⃗ρi × ⃗Fi.
(2.12)
2.3
Rigid Body Dynamics
We will now extend the formulation for a system of particles to a rigid body.
Deﬁnition:
A rigid body is a continuum in which the distance between any two points on
the body remains ﬁxed.
This means that the body does not deform. We shall treat a rigid body as the limiting case of
a system of particles where the number of particles becomes inﬁnite, and the mass of each
particle becomes inﬁnitesimal. To do this, we make the following changes to the formulation
for a system of particles (refer to Figure 2.6):
⃗ρi →⃗ρ
mi →dm = σ(⃗ρ)dV
⃗Fi →⃗f(⃗ρ)dV
N

i=1
→

V
(2.13)
Here, dm is an inﬁnitesimal mass element, dV is an inﬁnitesimal volume element, and σ(⃗ρ)
is the mass density per unit volume at a point ⃗ρ. The vector ⃗f(⃗ρ) is the force due to external
sources per unit volume at a point ⃗ρ. Note that the integral is taken over the entire volume V
of the body.

Rigid Body Dynamics
53
FI
r
O
dm
fdV
Figure 2.6
Modeling continuum dynamics
2.3.1
Translational Dynamics
For a system of point masses, the total mass of the system, and the center of mass are given
by
m =
N

i=1
mi
and
⃗rc =
N
i=1 mi⃗ri
m
,
respectively. Analogously, making use of the changes in (2.13), for a rigid body they become
m =

V
dm
and
⃗rc =

V ⃗rdm
m
.
(2.14)
For a system of point masses, the translational equation (2.5) is:
N

i=1
mi ¨⃗ri =
N

i=1
⃗Fi.
Applying the changes in (2.13) to this, we have

V
¨⃗rdm =

V
⃗fdV.
(2.15)
Now, taking the inertial derivative of (2.14) gives
m¨⃗rc =

V
¨⃗rdm.
(2.16)
In summary, combining (2.15) and (2.16), the translational dynamics of the center of mass of
a rigid body is
m¨⃗rc = ⃗F, ⃗F
=

V
⃗fdV,
(2.17)
where ⃗F is the total force on the body due to external forces. What equation (2.17) shows is
that the center of mass of a rigid body behaves like a point mass. That is, provided we know

54
Spacecraft Dynamics and Control: An Introduction
FI
rO∗
O
O∗
dm
fdV
ρ
Fb
Figure 2.7
Modeling rotational dynamics of a rigid body
the total force acting on the body, and we know the total mass, we can determine the motion
of the body center of mass. Also, note that nowhere did we apply the rigid body condition
(points remain ﬁxed relative to each other), so in fact, the translational results derived here
apply to any continuum, rigid or not.
2.3.2
Rotational Dynamics
Since we are considering a rigid body, it will be useful to attach a reference frame to the body,
as shown in Figure 2.7. We shall call this frame a body-ﬁxed frame, and it will be denoted Fb.
The origin of this frame will be located at a point O∗within the body. Since the reference
frame is attached to the body, all points within the body are ﬁxed as seen in this frame due
to the rigid body assumption. We shall denote time derivatives of vectors as seen in Fb by an
overcircle (˚). Now, the angular momentum of a system of particles about O∗is
⃗hO∗=
N

i=1
mi ⃗ρi × ˙⃗ρi.
As before, making the changes in (2.13) the angular momentum of a rigid body about O∗is
⃗hO∗=

V
⃗ρ × ˙⃗ρdm.
(2.18)
Now, we can make use of the rigid body hypothesis. The inertial time-derivative of ⃗ρ is related
to the time-derivative of ⃗ρ as seen in Fb by
˙⃗ρ = ˚⃗ρ + ⃗ω × ⃗ρ,
(2.19)
where ⃗ω is the angular velocity of Fb (and hence the rigid body) with respect to the inertial
frame FI. Now, due to the rigid body assumption, ˚⃗ρ = ⃗0. Therefore, we can write the angular
momentum of a rigid body as
⃗hO∗=

V ⃗ρ × (⃗ω × ⃗ρ)dm
= −

V ⃗ρ × (⃗ρ × ⃗ω)dm.
(2.20)

Rigid Body Dynamics
55
Let us now obtain the coordinates of the angular momentum in Fb. The position, angular
velocity and angular momentum vectors become
⃗ρ = ⃗F T
b ρ, ⃗ω = ⃗F T
b ω, ⃗hO∗= ⃗F T
b hO∗.
(2.21)
Making use of this in (2.20), we obtain
hO∗=

−

V
ρ×ρ×dm

ω.
(2.22)
The quantity
J
= −

V
ρ×ρ×dm
=

V
⎡
⎢⎢⎣
(ρ2
y + ρ2
z )
−ρxρy
−ρxρz
−ρxρy
(ρ2
x + ρ2
z )
−ρyρz
−ρxρz
−ρyρz
(ρ2
x + ρ2
y)
⎤
⎥⎥⎦σ(ρx, ρy, ρz)dV,
(2.23)
is called the moment of inertia matrix about O∗. In the special case that the point O∗is chosen
to be the center of mass, c, we use the label I instead of J. We can now write the angular
momentum of the body about O∗as
hO∗= Jω.
(2.24)
We have seen for a system of particles that the rotational equation of motion is given by
˙⃗hO∗= ⃗TO∗−⃗cO∗× ¨⃗rO∗, ⃗TO∗=
N

i=1
⃗ρi × ⃗Fi,
where ⃗cO∗= N
i=1 mi ⃗ρi is the ﬁrst moment of mass about the point O∗. Making the changes
in (2.13), we obtain for a rigid body
˙⃗hO∗= ⃗TO∗−⃗cO∗× ¨⃗rO∗, ⃗TO∗=

V
⃗ρ × ⃗fdV,
(2.25)
where ⃗TO∗is the total external torque applied to the body about the point O∗, and ⃗cO∗=

V ⃗ρdm is the body’s ﬁrst moment of mass about O∗. In particular, when O∗is chosen as the
center of mass, c, we have
˙⃗hc = ⃗Tc, ⃗Tc =

V
⃗ρ × ⃗fdV,
(2.26)
and ⃗Tc is the total external torque about the center of mass. For a single body, such as a
spacecraft, the center of mass is the most useful point, since this decouples the rotational

56
Spacecraft Dynamics and Control: An Introduction
dynamics from the translational dynamics (we do not have to consider the translational motion
of the center of mass). For a multi-bodied system, such as a robot arm with multiple links,
the center of mass is not always a convenient origin. That is why we have presented the more
general case.
Now, let us return to the dynamical equation. The relationship between the inertial time-
derivative of the angular momentum ⃗hc and the time-derivative as seen in Fb is
˙⃗hc = ˚⃗hc + ⃗ω × ⃗hc.
Therefore, from (2.26), we obtain
˚⃗hc + ⃗ω × ⃗hc = ⃗Tc.
(2.27)
In terms of coordinates in the body-ﬁxed frame Fb, this is
˙hc + ω×hc = Tc.
(2.28)
Substituting the expression for the angular momentum hc = Iω, we obtain
I ˙ω + ω×Iω = Tc.
(2.29)
This is known as Euler’s equation, and fully describes the dynamics of the angular velocity
of the rigid body (i.e. Fb). The attitude of the rigid body (orientation of Fb with respect to
FI) is fully described by the rotation matrix CbI. Therefore, the full set of equations for the
rotational motion of a rigid body are
˙CbI = −ω×CbI,
I ˙ω + ω×Iω = Tc.
(2.30)
2.4
The Inertia Matrix
We have introduced the concept of an inertia matrix. These have several properties that are
worth examining.
First of all, the inertia matrix is real and symmetric (see (2.23)), that is
J = JT .
Next, the inertia matrix is positive deﬁnite, that is given any x ̸= 0 ∈R3,
xT Jx > 0.
As a consequence of these two properties, the eigenvalues of J are real and positive. The
eigenvalues actually have a special meaning, which we will discuss later.
In any body-ﬁxed frame, the moment of inertia matrix is constant for a rigid body.

Rigid Body Dynamics
57
F1
F2
r21
dm
ρ1
ρ2
Figure 2.8
Parallel axis theorem
2.4.1
A Parallel Axis Theorem
The only requirement for a reference frame to be called a body-ﬁxed frame is for it to be
stationary with respect to the body. The origin of the reference frame may be deﬁned at any
point within the body. As such, the moment of inertia matrix may be deﬁned with respect to
any body-ﬁxed reference frame. Consider now two body-ﬁxed frames F1 and F2, which have
the same orientation, but different origins, as shown in Figure 2.8. Speciﬁcally, the origin of
F2 is located at ⃗r21 from the origin of F1. Now, the location of a mass element, dm, within the
body is located at ⃗ρ1 from the origin of F1 and at ⃗ρ2 from the origin of F2. We clearly have
the relationship
⃗ρ2 = ⃗ρ1 −⃗r21,
or in terms of the coordinates in F1 and F2,
ρ2 = ρ1 −r21.
The moment of inertia matrix with respect to frame F1 is given by
J1 = −

V
ρ×
1 ρ×
1 dm.
(2.31)
The moment of inertia matrix with respect to frame F2 is
J2 = −

V
ρ×
2 ρ×
2 dm
= −

V
(ρ1 −r21)×(ρ1 −r21)×dm
= −

V
ρ×
1 ρ×
1 dm +

V
r×
21ρ×
1 dm +

V
ρ×
1 r×
21dm −

V
r×
21r×
21dm.
(2.32)
Recognizing that

V dm = m is the mass and

V ρ1dm = c1 is the ﬁrst moment of mass about
the origin of F1, we have the parallel axis theorem for inertia matrices:
J2 = J1 + r×
21c×
1 + c×
1 r×
21 −mr×
21r×
21.
(2.33)

58
Spacecraft Dynamics and Control: An Introduction
F1
dm
ρ
F2
Figure 2.9
Rotational transformation theorem
In particular, if the origin of F1 is the center of mass, then c1 = 0 and
J2 = I −mr×
21r×
21.
(2.34)
2.4.2
A Rotational Transformation Theorem
Just as the origin of a body-ﬁxed frame can be chosen arbitrarily, so can the orientation.
Consider now two body-ﬁxed frames F1 and F2 whose origins coincide, but orientations
differ, as shown in Figure 2.9. The transformation from F1 to F2 can be described by the
rotation matrix C21. That is, for any vector,
⃗ρ = ⃗F T
1 ρ1 = ⃗F T
2 ρ2,
we have the relationship ρ2 = C21ρ1. The moment of inertia matrix with respect to F1 is
J1 = −

V
ρ×
1 ρ×
1 dm.
(2.35)
Now, making use of the identities C−1
21 = CT
21 and (C21ρ1)× = C21ρ×
1 CT
21, the moment of
inertia matrix with respect to F2 is
J2 = −

V
ρ×
2 ρ×
2 dm
= −

V
(C21ρ1)×(C21ρ1)×dm
= −

V
C21ρ×
1 CT
21C21ρ×
1 CT
21dm
= −

V
C21ρ×
1 ρ×
1 CT
21dm.
(2.36)
Therefore, we have the rotational transformation theorem for inertia matrices:
J2 = C21J1CT
21.
(2.37)

Rigid Body Dynamics
59
2.4.3
Principal Axes
Deﬁnition:
A principal axes frame is a body-ﬁxed frame in which the moment of inertia
matrix is diagonal, i.e.
J =
⎡
⎣
J1
0
0
0
J2
0
0
0
J3
⎤
⎦.
The diagonal elements of J are called the principal moments of inertia.
Now, as already discussed, the moment of inertia matrix is real, symmetric and positive
deﬁnite. Let us consider the eigenvalue problem for the inertia matrix:
Jei = λiei, i = 1, 2, 3.
(2.38)
where λi are the eigenvalues, and ei ̸= 0 are the eigenvectors. We now make use of the
following result from matrix theory:
Theorem:
The eigenvectors for any real symmetric matrix can be chosen to be real, satisfying
eT
i ei =
 1, i = j,
0, i ̸= j
(2.39)
What this means is that the eigenvectors ei of the inertia matrix J, represent the coordinates
of three mutually perpendicular vectors. Since −ei is also an eigenvector, the eigenvectors ei
may be chosen to be the coordinates of the unit vectors deﬁning a right-handed coordinate
system. This means that the matrix
E =
e1
e2
e3

is actually a rotation matrix, and the relationship (2.39) can be written compactly as
ET E = 1.
(2.40)
Returning to the eigenvalue problem (2.38), this can also be written compactly as
JE = E,  =
⎡
⎣
λ1
0
0
0
λ2
0
0
0
λ3
⎤
⎦.
Making use of (2.40), this can be rewritten as
 = ET JE
or equivalently
J = EET .
(2.41)

60
Spacecraft Dynamics and Control: An Introduction
Since we have identiﬁed that E is a rotation matrix, equation (2.41) and (2.37) show that
 is itself a moment of inertia matrix. Since  is diagonal, ET describes the rotation from
the original frame used to compute J to a principal axes frame. The columns of E (i.e. the
eigenvectors of J) are just the coordinates (in the original frame) of the unit vectors deﬁning
the principal axes frame. The diagonal entries of  (i.e. the eigenvalues of J) are the principal
moments of inertia.
What we have shown is that for any rigid body, we can always ﬁnd a principal axes
frame. The fact that we can do this allows us to simplify the rotational dynamics considerably.
Assume that the chosen body-ﬁxed frame Fb is a principal axes frame, and let
I =
⎡
⎢⎢⎣
Ix
0
0
0
Iy
0
0
0
Iz
⎤
⎥⎥⎦, ω =
⎡
⎢⎢⎣
ωx
ωy
ωz
⎤
⎥⎥⎦, Tc =
⎡
⎢⎢⎣
Tx
Ty
Tz
⎤
⎥⎥⎦.
Then, Euler’s equation (17.2) becomes
Ix ˙ωx + (Iz −Iy)ωyωz = Tx
Iy ˙ωy + (Ix −Iz)ωxωz = Ty
Iz ˙ωz + (Iy −Ix)ωxωy = Tz
(2.42)
2.5
Kinetic Energy of a Rigid Body
Consider the rigid body as shown in Figure 2.10. We embed a body-ﬁxed frame Fb in the rigid
body, with origin at the center of mass. The vector ⃗r denotes the position of the rigid body
center of mass relative to the origin of an inertial frame FI. The mass element dm is located
by vector ⃗ρ from the rigid body center of mass. Let us denote the inertial angular velocity of
the rigid body by the vector ⃗ω.
FI
r
O
center of mass
dm
ρ
Fb
rdm
Figure 2.10
Rigid body

Rigid Body Dynamics
61
As shown in Figure 2.10, the mass element dm is located relative to the origin of FI by the
vector
⃗rdm = ⃗r + ⃗ρ.
Therefore, mass element dm has inertial velocity
˙⃗rdm = ˙⃗r + ˙⃗ρ,
where (˙) denotes the time-derivative as seen in FI. Since the body is rigid, we have
˙⃗ρ = ⃗ω × ⃗ρ,
as seen in Section 2.3.2. Therefore, the inertial velocity of dm is given by
˙⃗rdm = ⃗v + ⃗ω × ⃗ρ,
(2.43)
where ⃗v = ˙⃗r is the inertial velocity of the rigid body center of mass.
The kinetic energy of mass element dm is deﬁned as
dT = 1
2
˙⃗rdm · ˙⃗rdmdm.
Making use of (2.43), this becomes
dT = 1
2
⃗v + ⃗ω × ⃗ρ

·
⃗v + ⃗ω × ⃗ρ

dm.
Expanding, we have
dT = 1
2⃗v · ⃗vdm + ⃗v ·

⃗ω × ⃗ρ

dm + 1
2

⃗ω × ⃗ρ

·

⃗ω × ⃗ρ

dm.
(2.44)
The total kinetic energy of the rigid body is now obtained by integrating (2.44) over the entire
rigid body
T = 1
2

B
⃗v · ⃗vdm +

B
⃗v ·

⃗ω × ⃗ρ

dm + 1
2

B

⃗ω × ⃗ρ

·

⃗ω × ⃗ρ

dm.
(2.45)
Let us now examine this term-by-term. First of all, we recognize that the total mass of the
rigid body is given by
m =

B
dm.

62
Spacecraft Dynamics and Control: An Introduction
Therefore, we have
1
2

B
⃗v · ⃗vdm = 1
2m⃗v · ⃗v = 1
2mv2, v =
⃗v
 ,
(2.46)
since ⃗v is constant with respect to the integration. Next, we recognize that since the origin of
FB is at the rigid body center of mass, the ﬁrst moment of mass is zero, that is

B
⃗ρdm = ⃗0.
Therefore, we have

B
⃗v ·

⃗ω × ⃗ρ

dm = 0,
(2.47)
since ⃗v and ⃗ω are constant with respect to the integration. Finally, let us evaluate the third term
in (2.45). First, let us represent ⃗ω and ⃗ρ in body coordinates as
⃗ω = ⃗F T
B ω
and
⃗ρ = ⃗F T
B ρ,
respectively. We then have
1
2

B

⃗ω × ⃗ρ

·

⃗ω × ρ

dm = 1
2

B

ω×ρ
T 
ω×ρ

dm
= 1
2

B

ρ×ω
T 
ρ×ω

dm
= 1
2ωT

−

B
ρ×ρ×dm

ω
We recognize the ﬁnal integral from Section 2.3.2 as the moment of inertia matrix about the
rigid body center of mass, I. Therefore, we have
1
2

B

⃗ω × ⃗ρ

·

⃗ω × ⃗ρ

dm = 1
2ωT Iω.
(2.48)
From equation (2.45) and equations (2.46) to (2.48), we see that the total kinetic energy of the
rigid body is given by
T = Tt + Tr,
(2.49)
where
Tt = 1
2mv2,
(2.50)
is the rigid body translational kinetic energy, and
Tr = 1
2ωT Iω,
(2.51)
is the rigid body rotational kinetic energy.

Rigid Body Dynamics
63
We note that when FB is a principal axes frame (see Section 2.4.3), that is,
I =
⎡
⎢⎢⎣
Ix
0
0
0
Iy
0
0
0
Iz
⎤
⎥⎥⎦, ω =
⎡
⎢⎢⎣
ωx
ωy
ωz
⎤
⎥⎥⎦,
then the rotational kinetic energy (2.51) becomes
Tr = 1
2

Ixω2
x + Iyω2
y + Izω2
z

.
Notes
This chapter contains a restricted presentation of the mechanics required to describe the types
of spacecraft motion considered in this book. For example, we have not considered spacecraft
made up of multiple bodies. We have adopted the Newton-Euler approach (as opposed to
the Lagrangian or Hamiltonian approach), since it best suits our purpose. For a more com-
plete presentation of classical mechanics geared toward the description of spacecraft motion,
the reader is referred to Hughes (2004). There are several books containing comprehensive
treatments of classical mechanics in general. One such book is Goldstein et al. (2002).
References
Goldstein H, Poole C and Safko J 2002 Classical Mechanics 3rd edn. Addison-Wesley, San Francisco, CA.
Hughes PC 2004 Spacecraft Attitude Dynamics. Dover Publications, Mineola, NY.


3
The Keplerian Two-Body Problem
We are now going to look at the Keplerian two-body problem. That is, the orbital problem for
two point masses. It turns out that this is a reasonable model for spacecraft orbiting planets,
planets orbiting the sun, and others. We will see in Chapter 7 that the ﬁnite size of the planets
does have an effect on the orbit of a spacecraft. However, treating the planet and spacecraft as
point masses, as in the Keplerian two-body problem provides a great deal of insight into the
behavior of a spacecraft in orbit about a planet.
3.1
Equations of Motion
Consider two point masses of mass m1 and m2, as shown in Figure 3.1. As we have seen, in
order to apply Newton’s laws of motion, we require an inertial reference frame F I. Let ⃗r1 and
⃗r2 be the positions of the two point masses from the origin of FI respectively. The position of
mass m2 with respect to mass m1 is given by
⃗r21 = ⃗r2 −⃗r1.
By Newton’s law of gravitation, mass m1 exerts a force on m2 given by
⃗F21 = −Gm1m2
|⃗r21|3 ⃗r21,
and likewise, mass m2 exerts a force on m1 given by
⃗F12 = Gm1m2
|⃗r21|3 ⃗r21.
Note that G is Newton’s universal gravitational constant.
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

66
Spacecraft Dynamics and Control: An Introduction
m1
FI
r1
m2
r2
r21
Figure 3.1
Two-body problem
The equations of motion for m1 and m2 are given by Newton’s second law, and are
m1¨⃗r1 = ⃗F12 = Gm1m2
|⃗r21|3 ⃗r21,
m2¨⃗r2 = ⃗F21 = −Gm1m2
|⃗r21|3 ⃗r21.
These lead to
¨⃗r1 = Gm2
|⃗r21|3 ⃗r21,
(3.1)
¨⃗r2 = −Gm1
|⃗r21|3 ⃗r21.
(3.2)
Taking the difference between (3.2) and (3.1) gives the equation of motion for the position of
m2 with respect to m1.
¨⃗r21 = ¨⃗r2 −¨⃗r1 = −G(m1 + m2)
|⃗r21|3
⃗r21
(3.3)
Now, we will assume that m1 ≫m2 as is the case for example when m1 is a planet and m2 is a
spacecraft, or when m1 is the sun and m2 is a planet. Under this assumption, m1 + m2 ≈m1,
and (3.3) becomes
¨⃗r21 = −Gm1
|⃗r21|3 ⃗r21.
From this point on, we will drop the subscript “21”, and ⃗r = ⃗r21 will refer to the position of
m2 with respect to m1. The mass m1 will be referred to as the primary body, due to the fact that
m1 ≫m2. We also deﬁne the constant μ = Gm1. This will prove much more useful, since the
universal gravitational constant G is not known accurately, and neither is the mass m1 of each
planet. The gravitational constant μ on the other hand can be determined very accurately. It is
speciﬁc to the primary body.

The Keplerian Two-Body Problem
67
Finally, we have the Keplerian two-body orbital equation of motion
¨⃗r = −μ
|⃗r|3 ⃗r.
(3.4)
Equation (3.4) gives the motion of the mass m2 about the primary body m1. It can be seen from
(3.4) that this motion is independent of the mass m2. This is due to the assumption m1 ≫m2.
Let us now examine some of the properties of a Keplerian orbit.
3.2
Constants of the Motion
3.2.1
Orbital Angular Momentum
First of all, let us examine the orbital angular momentum. This is deﬁned as
⃗h
= ⃗r × ⃗v,
(3.5)
where ⃗v = ˙⃗r is the orbital velocity. Let us now take the inertial time-derivative of (3.5). We
have
˙⃗h = ˙⃗r × ⃗v + ⃗r × ˙⃗v
= ⃗v × ⃗v + ⃗r × ¨⃗r
= ⃗r × ¨⃗r.
Making use of the equation of motion (3.4), we have
˙⃗h = −μ
|⃗r|3 ⃗r × ⃗r = ⃗0.
(3.6)
This shows that the orbital angular momentum is constant with respect to FI. By deﬁnition
of ⃗h (3.5), and the deﬁnition of the vector cross-product, the position vector ⃗r is always
perpendicular to ⃗h. Since ⃗h is constant, the position vector ⃗r evolves on a plane in inertial
space that is perpendicular to ⃗h.
Thus, we have discovered that Keplerian orbital motion is planar, and the orbital
angular momentum ⃗h is constant and speciﬁes the orbital plane.
3.2.2
Orbital Energy
Next, let us examine the orbital energy. This is deﬁned as
E
= v2
2 −μ
r = ⃗v · ⃗v
2
−μ
r ,
(3.7)
where v = |⃗v| is the orbital speed, and r = |⃗r| is the distance of m2 from m1. As such, v2
2 is
the kinetic energy per unit mass, and −μ
r is the two-body gravitational potential energy per

68
Spacecraft Dynamics and Control: An Introduction
unit mass. The reason for the terminology for −μ
r is that it is a potential function from which
the gravitational two-body acceleration can be obtained, that is:
−μ
|⃗r|3 ⃗r = ⃗∇
μ
r

.
Let us now compute the time-derivative of (3.7):
˙E = ⃗v · ˙⃗v + ˙rμ
r2 .
(3.8)
Now,
r2 = ⃗r · ⃗r, ⇒
r ˙r = ⃗r · ˙⃗r, ⇒
˙r = ⃗r · ⃗v
r
(3.9)
Substituting this into (3.8) and making use of (3.4) as well, we have
˙E = ⃗v ·

−μ
r3 ⃗r

+ ⃗r · ⃗vμ
r3
= 0.
(3.10)
Therefore, we have discovered that the Keplerian two-body orbital energy is constant.
3.2.3
The Eccentricity Vector
Let us examine the vectors ⃗v × ⃗h and ⃗r
r . Both of these vectors lie in the orbital plane, since
⃗v × ⃗h is perpendicular to ⃗h. Let us now take the inertial time-derivative of these two vectors.
Making use of the rules for vector differentiation (see Section 1.4), we have:
˙
  

⃗v × ⃗h

= ˙⃗v × ⃗h,
since ˙⃗h = ⃗0. Making use of the identity for the vector triple product (see the end of Section 1.1),
this becomes
˙⃗v × ⃗h = ˙⃗v × (⃗r × ⃗v) = ⃗r(˙⃗v · ⃗v) −⃗v(˙⃗v · ⃗r)
Substituting the equation of motion (3.4) into the above expression leads to
˙
  

⃗v × ⃗h

= ⃗r

⃗v ·

−μ⃗r
r3
		
−⃗v(⃗r ·

−μ⃗r
r3
	
)
= −μ
r3 ⃗r(⃗r · ⃗v) + μ
r ⃗v.
(3.11)

The Keplerian Two-Body Problem
69
Similarly, recognizing that ⃗v = ˙⃗r we have
˙

⃗r
r
	
=
˙⃗r
r −˙r⃗r
r2
= ⃗v
r −⃗r(⃗r · ⃗v)
r3
,
(3.12)
where expression (3.9) was used for ˙r.
Comparing expressions (3.11) and (3.12), we see that
˙

⃗r
r
	
= 1
μ
˙
  

⃗v × ⃗h

.
Making use of this fact, we deﬁne the eccentricity vector as
⃗e
= ⃗v × ⃗h
μ
−⃗r
r .
(3.13)
Thus, by our above results, the inertial time-derivative is
˙⃗e = ⃗0.
(3.14)
That is, the eccentricity vector is inertially constant. Since ⃗v × ⃗h and ⃗r/r are perpendicular to
⃗h, it must be that the eccentricity vector ⃗e also lies in the orbital plane.
Therefore, we have discovered that the eccentricity vector ⃗e lies in the orbital plane,
and is constant.
3.3
Shape of a Keplerian Orbit
We have established that Keplerian orbital motion is planar, and we can specify the orbital
plane by the angular momentum vector ⃗h. We have also found a vector that is ﬁxed in the
orbital plane, that is the eccentricity vector ⃗e. Now, all that is needed to describe the position
of m2 with respect to m1 within the orbital plane, is the distance r = |⃗r| and the angle θ the
position vector ⃗r makes with ⃗e (see Figure 3.2). Additionally, if we can ﬁnd the relationship
between r and θ, then we will obtain the shape of the orbit. Before continuing, it will be
useful to deﬁne the eccentricity of the orbit as the magnitude of the eccentricity vector, that is
e = |⃗e|. Clearly, the eccentricity is non-negative (e ≥0). This will be important in describing
the shape of the orbit.
Let us now take the scalar product of the eccentricity vector ⃗e as deﬁned in (7.77) with the
position vector ⃗r. We have
⃗r · ⃗e = ⃗r · (⃗v × ⃗h)
μ
−⃗r · ⃗r
r .

70
Spacecraft Dynamics and Control: An Introduction
θ
e
r
h
m1
m2
orbit
Figure 3.2
Orbit description
Now, using the vector identity for the scalar triple product (see Section 1.1.3),
⃗r · (⃗v × ⃗h) = ⃗h · (⃗r × ⃗v) = ⃗h · ⃗h = h2,
(3.15)
where h = |⃗h| is the magnitude of the orbital angular momentum. Making use of this, and the
deﬁnition of the scalar product, we have
re cos θ = h2
μ −r,
which can be rearranged to give
r =

h2/μ

1 + e cos θ .
(3.16)
It is common to deﬁne the parameter
p = h2
μ ,
(3.17)
which is known as the semilatus rectum, and is constant for a given orbit (since h is constant).
Hence, (3.16) becomes
r =
p
1 + e cos θ .
(3.18)
This gives the distance from m1 to m2 as a function of the angle θ. The angle θ has a special
name, it is called the true anomaly. Therefore, (3.18) completely describes the shape of the
orbit within the orbital plane. We can immediately see from (3.18) that r is a minimum when
θ = 0. That is, the closest point of m2 to m1 lies along the eccentricity vector ⃗e. The closest
point is called periapsis, and has distance
rmin =
p
1 + e.
(3.19)

The Keplerian Two-Body Problem
71
We also see immediately from (3.18) that if the eccentricity e = 0, then r = p = constant.
That is, when e = 0, the orbit is circular.
It is clear from (3.18) that the eccentricity e is critical in determining the shape of the orbit.
Let us now examine e further. From equation (7.77), we have
e2 = ⃗e · ⃗e =

⃗v × ⃗h
μ
−⃗r
r

·

⃗v × ⃗h
μ
−⃗r
r

= (⃗v × ⃗h) · (⃗v × ⃗h)
μ2
−2⃗r · (⃗v × ⃗h)
μr
+ ⃗r · ⃗r
r2 .
(3.20)
From the vector identities in Section 1.1.3,
(⃗v × ⃗h) · (⃗v × ⃗h) = (⃗v · ⃗v)(⃗h · ⃗h) −(⃗v · ⃗h)(⃗h · ⃗v)
= v2h2,
where the second term on the top right was eliminated since ⃗v is perpendicular to ⃗h. Substituting
this and (3.15) into (3.20), we obtain
e2 = v2h2
μ2 −2h2
μr + 1.
This can be rearranged into the form
1 −e2 = h2
μ
2
r −v2
μ
	
= p
2
r −v2
μ
	
.
(3.21)
It will be useful to deﬁne the parameter
a =
2
r −v2
μ
	−1
.
(3.22)
This parameter will also have a special signiﬁcance in describing the shape of the orbit, as we
shall see shortly. With this deﬁnition, we obtain from (3.21) the relationship between a, p and
e, namely
a =
p
1 −e2 .
(3.23)

72
Spacecraft Dynamics and Control: An Introduction
Since p > 0 (because p = h2/μ), it is clear from (3.23) that a < 0 when e > 1, and a > 0
when e < 1. When e = 1, a is undeﬁned. Also, since p and e are constant for a given orbit, a
is also constant. To obtain further physical signiﬁcance of a, from (3.22) we ﬁnd that
a−1 = 2
r −v2
μ = 2
μ
μ
r −v2
2
	
= 2
μ(−E).
(3.24)
where the expression for the orbital energy (3.7) has been used. Therefore, we have an
alternative expression for the orbital energy in terms of a:
E = −μ
2a .
(3.25)
Substituting (3.24) into (3.21) and rearranging, we can also obtain an expression for the orbital
energy in terms of the eccentricity:
E = μ2(e2 −1)
2h2
.
(3.26)
From this, we see that
e > 1 ⇒E > 0,
e = 1 ⇒E = 0,
e < 1 ⇒E < 0.
(3.27)
A useful result is found when we equate (3.25) with (3.7). After some work, we have
v =

μ
2
r −1
a
	
.
(3.28)
This is known as the vis-viva equation, and it relates the orbital speed in terms of the energy.
This equation will be useful when we consider transfers from one orbit to another.
3.3.1
Perifocal Coordinate System
As we have seen in section 2.1, once we have one inertial frame of reference, it is possible
to deﬁne another inertial frame of reference, provided it is 1) not rotating with respect to the
original inertial frame, and 2) it’s origin is either not translating, or translating with constant
velocity with respect to the original frame. Now, we have seen that the Keplerian orbital
motion evolves on a plane (normal to ⃗h), and that this plane is inertially ﬁxed. To simplify
the description of the motion, it will be useful to have an inertial frame, with two of the unit
vectors lying in that plane. The position of ⃗r can then be represented in terms of those two

The Keplerian Two-Body Problem
73
θ
e
r
h
m1
m2
orbit
xp
zp
yp
Figure 3.3
Perifocal coordinate system
vectors. We have found a vector within this plane that is inertially ﬁxed, that is ⃗e. We can
therefore deﬁne a new inertial reference frame Fp by the unit vectors
⃗xp = ⃗e
e, ⃗zp =
⃗h
h , ⃗yp = ⃗zp × ⃗xp.
(3.29)
This reference frame is called the perifocal reference frame, and is shown in Figure 3.3. The
reason for the name will become clear shortly. Note that when ⃗e = ⃗0, we can arbitrarily choose
⃗xp in (3.29) by any inertially ﬁxed vector in the orbital plane. In this coordinate system, the
position of m2 with respect to m1 is given by
⃗r = ⃗F T
p
⎡
⎣
x p
yp
z p
⎤
⎦= ⃗F T
p
⎡
⎣
r cos θ
r sin θ
0
⎤
⎦.
(3.30)
Let us now return to the question of the shape of the orbit. The orbit is given in polar form
by equation (3.18). Now, let us examine the cartesian form with x p = r cos θ and yp = r sin θ.
Rearranging (3.18) gives
p = r(1 + e cos θ) = r + ex p,
which leads to
r = p −ex p.
(3.31)
By trigonometry, r2 = x2
p + y2
p. Therefore, we have
y2
p = r2 −x2
p = (p −ex p)2 −x2
p,
= p2 −2pex p + (e2 −1)x2
p.
(3.32)

74
Spacecraft Dynamics and Control: An Introduction
Now, when e ̸= 1, we can substitute (3.23) in (3.32) to obtain
y2
p = (p −ex p)2 −x2
p,
= a2(1 −e2)2 −2a(1 −e2)ex p −(1 −e2)x2
p,
= (1 −e2)

a2(1 −e2) −2aex p −x2
p

,
= (1 −e2)

a2 −(x p + ae)2
.
This can be rearranged to give
(x p + ae)2
a2
+
y2
p
(1 −e2)a2 = 1.
(3.33)
When e = 1, (3.32) becomes
y2
p = p2 −2px p,
which rearranges to become
x p = p
2 −
y2
p
2p .
(3.34)
Let us now look at the different cases for e.
Case 1, e < 1
When the eccentricity e < 1, the energy of the orbit is negative, E < 0, see (3.27). In this case,
a2(1 −e2) > 0, and we deﬁne b = a

(1 −e2). Equation (3.33) becomes
(x p + ae)2
a2
+
y2
p
b2 = 1.
(3.35)
This is the equation for an ellipse, centered at x p = −ae, yp = 0 with semi-major axis a, and
semi-minor axis b, as seen in Figure 3.4. Since an ellipse is ﬁnite in size, it is clear that when
the orbital energy is negative, the mass m2 can never escape from m1.
For any orbit, we can compute the shortest distance from m1 to m2. As we have already
explained, the corresponding location is called periapsis . For an elliptical orbit, it is given by
(substituting (3.23) into (3.18)),
rmin = a(1 −e2)
1 + e
= a(1 −e).

The Keplerian Two-Body Problem
75
2a
2b
apoapsis
periapsis
m2
m1
ae
rmin
rmax
yp
xp
θ
r
Figure 3.4
Elliptical orbit geometry
Due to the ﬁnite size of an elliptical orbit, we can also compute the maximum distance from
m1 to m2. From equation (3.18), the maximum value of r is obtained when θ = 180◦. This
point is called apoapsis. Setting θ = 180◦in (3.18) and making use of (3.23), we have
rmax = a(1 −e2)
1 −e
= a(1 + e).
Therefore, we see that both the minimum and the maximum distances lie on the same line
(which is parallel to the eccentricity vector ⃗e). This line is called the line of apsides.
Ellipses have several properties. We shall not dwell on these too much, and only mention
one property. That property is:
An ellipse has two focii located along the semimajor axis at equal distances from the ellipse
center, such that the sum of the distances to any point on the ellipse from each of the focii is
constant, and equal to twice the semi-major axis. The distance of each focus from the ellipse
center is ae, where a is the semi-major axis, and 0 < e < 1 is the eccentricity. Referring to
Figure 3.5, r + ¯r = 2a.
apoapsis
periapsis
m2
m1
ae
r
¯r
ae
Figure 3.5
Ellipse focal property

76
Spacecraft Dynamics and Control: An Introduction
periapsis
m2
m1
yp
xp
θ
rmin
−ae
r
Figure 3.6
Hyperbolic orbit geometry
In summary, we have shown that when e < 1, equivalently, E < 0 or a > 0, the mass
m2 is in an elliptical orbit about m1, with m1 located at the focus of the ellipse closest to
periapsis. Hence, the term “perifocal reference frame”.
Case 2, e > 1
When the eccentricity e > 1, the energy of the orbit is positive, E > 0, see (3.27). In this case,
a2(1 −e2) < 0, and we deﬁne b = a

(e2 −1). Equation (3.33) becomes
(x p + ae)2
a2
−
y2
p
b2 = 1.
(3.36)
This is the equation for a hyperbola, with origin at x p = −ae, y = 0, as seen in Fig-
ure 3.6. Note that in this case, a =
p
1−e2 < 0 is negative. A hyperbola is inﬁnite in size.
Therefore, when the energy of the orbit is positive, the mass m2 eventually escapes from
m1. Let us now look at the limiting speed of m2. Rearranging equation for the orbital
energy (3.7) gives
v =

2

E + μ
r

.
(3.37)
Letting r →∞, we have
v∞
= lim
r→∞

2

E + μ
r

=
√
2E > 0.
(3.38)
This is called the hyperbolic excess speed, the speed m2 has upon escaping from m1. Therefore,
when the orbital energy is positive, m2 escapes from m1 with a non-zero velocity. This is
important for interplanetary travel, when it is necessary to escape from one planet in order to
travel to another. We will consider this in more detail later.

The Keplerian Two-Body Problem
77
periapsis
m2
m1
−ae
r
¯r
−ae
Figure 3.7
Hyperbola focal property
Hyperbolae have many properties. A hyperbola as a similar focal property as the ellipse,
that is:
A hyperbola has two focii located at equal distances from hyperbola origin, such that the
difference of the distances to any point on the hyperbola from each of the focii is constant.
The distance of each focus from the hyperbola origin is −ae, and the difference in distances
is -2a. Referring to Figure 3.7, ¯r −r = −2a
In summary, we have shown that when e > 1, equivalently, E > 0 or a < 0, the mass
m2 is in an hyperbolic orbit about m1, with m1 located at the focus of the hyperbola
closest to periapsis.
Another important property of hyperbolae is:
A hyperbola has a pair of asymptotes, as shown in Figure 3.8.
The general equation for a hyperbola with origin at x = y = 0 is given by
x2
a2 −y2
b2 = 1.
m2
m1
r
θ
y = b
ax
y = −b
ax
γ
γ
θ∞
Figure 3.8
Hyperbola asymptotes

78
Spacecraft Dynamics and Control: An Introduction
This can be rearranged into the form
y = ±b
a

x2 −a2.
We see then that as |x| becomes large, y →± b
a x. That is, the hyperbola has asymptotes given
by
y = ±b
a x.
(3.39)
Now, a point of signiﬁcant interest is the angle the asymptotes make with the x-axis, denoted
by γ as seen in Figure 3.8. We clearly have 0 < γ < 90◦, and
tan γ =

b
a
 .
In terms of the hyperbolic orbit, where b = a

(e2 −1), we have
tan γ =

(e2 −1).
Note that this angle could also have been obtained directly from the polar form of the hyperbola,
r = a(1 −e2)
1 + e cos θ .
The asymptotic behavior is obtained by allowing r →∞. Clearly, this occurs when
1 + e cos θ →0, or
cos θ →−1
e .
Let θ∞= cos−1 
−1
e

. Because γ is the angle the asymptotes make with the x-axis, γ =
180◦−θ∞(see Figure 3.8). Therefore,
cos γ = cos(180◦−θ∞) = −cos θ∞= 1
e .
Making use of the right-angled triangle shown in Figure 3.9, we can see that
tan γ =

(e2 −1),
as before.
The angle γ is important, since it shows that when a mass m2 approaches m1 from far
away with e > 1, it will be turned through an angle δ = 180◦−2γ . This is relevant when
planning interplanetary ﬂy-by or sling-shot maneuvers.

The Keplerian Two-Body Problem
79
γ
1
e
√
e2 −1
Figure 3.9
Trigonometric relationship between gamma and e
Case 3 e = 1
When the eccentricity e = 1, the energy of the orbit is zero, E = 0, see (3.27). In this case, a is
undeﬁned, and the orbit is described by equation (3.34). This can be recognized as a parabola,
with origin at xo = p
2 , y = 0, as shown in Figure 3.10.
A parabola is inﬁnite in size. Therefore, when the energy of the orbit is zero, the mass m2
eventually escapes from m1. As for the hyperbolic case, let us examine the limiting speed.
Making use of (3.37), we have
v∞
= lim
r→∞

2μ
r
= 0.
(3.40)
That is, when the orbital energy is zero, the mass m2 escapes from m1, but the velocity
eventually goes to zero. The parabolic orbit represents the transition from a bounded elliptical
orbit to an unbounded hyperbolic orbit. The orbital energy E = 0 is the minimum energy
required for mass m2 to escape from m1. Using (3.37), given an orbital radius r, the minimum
orbital speed required for m2 to escape from m1 is
v =

2μ
r .
periapsis
m2
m1
yp
xp
θ
rmin = p
2
r
Figure 3.10
Parabolic orbit geometry

80
Spacecraft Dynamics and Control: An Introduction
orbit
m2
m1
yp
xp
θ
r
xo
yo
Figure 3.11
Cylindrical coordinate system
When m2 is at periapsis (θ = 0), this is called the escape velocity, and is given by
vesc =

2μ
rmin
,
(3.41)
where rmin = p
2 .
In conclusion, the shape of a Keplerian orbit is an ellipse when the orbital energy is
negative (E < 0), a parabola when the orbital energy is zero (E = 0), and a hyperbola
when the orbital energy is positive (E > 0). These three shapes are all conic sections.
Therefore, the most general description of the shape Keplerian orbit is a conic section.
3.4
Kepler’s Laws
Let us now further develop the expressions for r and θ. It will be useful to deﬁne a new
reference frame. This frame will be a cylindrical coordinate system, denoted Fo that can be
obtained from the perifocal coordinate system, Fp, by a rotation about ⃗zp through an angle
θ, as shown in Figure 3.11. Therefore we have Cop = Cz(θ). The subscript “o” is chosen to
reﬂect the fact that Fo rotates with the orbit. The angular velocity of Fo with respect to Fp is
given by
⃗ωop = ⃗F T
o
⎡
⎢⎣
0
0
˙θ
⎤
⎥⎦.
Represented in Fo coordinates, the position vector is
⃗r = ⃗F T
o
⎡
⎢⎣
r
0
0
⎤
⎥⎦.
(3.42)

The Keplerian Two-Body Problem
81
Taking the inertial time-derivative of this gives the velocity
⃗v = ⃗F T
o
⎡
⎢⎣
˙r
0
0
⎤
⎥⎦+ ⃗F T
o
⎡
⎢⎣
0
0
˙θ
⎤
⎥⎦
× ⎡
⎢⎣
r
0
0
⎤
⎥⎦,
= ⃗F T
o
⎡
⎢⎣
˙r
0
0
⎤
⎥⎦+ ⃗F T
o
⎡
⎢⎣
0
−˙θ
0
˙θ
0
0
0
0
0
⎤
⎥⎦
⎡
⎢⎣
r
0
0
⎤
⎥⎦,
= ⃗F T
o
⎡
⎢⎣
˙r
r ˙θ
0
⎤
⎥⎦
(3.43)
Let us now compute the angular momentum vector:
⃗h = ⃗r × ⃗v,
= ⃗F T
o
⎡
⎢⎣
r
0
0
⎤
⎥⎦
× ⎡
⎢⎣
˙r
r ˙θ
0
⎤
⎥⎦,
= ⃗F T
o
⎡
⎢⎣
0
0
0
0
0
−r
0
r
0
⎤
⎥⎦
⎡
⎢⎣
˙r
r ˙θ
0
⎤
⎥⎦,
= ⃗F T
o
⎡
⎢⎣
0
0
r2 ˙θ
⎤
⎥⎦.
(3.44)
Since the angular momentum vector ⃗h points in the same direction as the z-axis (⃗zo = ⃗zp) of
the frame Fo by the deﬁnition (3.29), the angular rate must be positive, that is ˙θ > 0. We can
therefore conclude from (3.44) that the magnitude of the orbital angular momentum is
h = r2 ˙θ.
(3.45)
We are now in a position to state and prove Kepler’s Laws.
Kepler’s Laws
Johannes Kepler postulated the following laws based on empirical data obtained by Tycho
Brahe:

82
Spacecraft Dynamics and Control: An Introduction
orbit
m1
δθ
r
δA
Figure 3.12
Area swept out by orbital position vector
1. The orbit of each planet is an ellipse with the sun at one focus.
2. The radius vector drawn from the sun to the planet sweeps out equal areas in equal times.
3. The squares of the periods of the planetary orbits are proportional to the cubes of the
semi-major axes of the orbits.
Newton later derived these laws using his law of gravitation and laws of motion. We shall
now prove these laws. We have already derived Kepler’s ﬁrst law, which is valid for e < 1
(which is the case for all of the planets). To prove the second law, consider the diagram in
Figure 3.12. We see that the inﬁnitessimal area segment is given by
δA = 1
2r2δθ.
Now, δθ = ˙θδt. Therefore, δA = 1
2r2 ˙θδt, ie.
δA
δt = 1
2r2 ˙θ.
But, we now know from (3.45) that r2 ˙θ = h, which is constant. Letting δt →0, we obtain the
the result
d A
dt = h
2 = constant.
(3.46)
Note that Kepler’s second law is valid for all three orbit shapes, elliptical, parabolic and
hyperbolic.
Kepler’s third law is only makes sense for elliptical orbits (since parabolic and hyperbolic
orbits do not have a period). To derive it, let T be the orbital period, that is the time it takes to
complete one revolution of the ellipse. Then, the area of the ellipse is given by
A =
 T
0
d A
dt dt.
By Kepler’s second law (3.46), this becomes
A = h
2 T.
(3.47)

The Keplerian Two-Body Problem
83
Now, in terms of the semi-major axis a and semi-minor axis b of an ellipse, the area is given
by
A = πab.
Using this in (3.47) gives
T = 2πab
h
.
(3.48)
Noting that for an elliptical orbit, h = √μp =

μa(1 −e2) (see (3.17) and (3.23)), and that
b = a
√
1 −e2, we have
T = 2πa2√
1 −e2

μa(1 −e2)
= 2πa
3
2
√μ ,
(3.49)
or equivalently
T 2 = 4π2
μ a3,
(3.50)
which is Kepler’s third law.
Related to the orbital period, the mean orbital motion is deﬁned as
n
= 2π
T =
 μ
a3 .
(3.51)
This is the average angular rate of the orbit.
3.5
Time of Flight
So far we have completely deﬁned the shape of the orbit. However, to fully solve the orbital
problem, we need to determine how m2 traverses the orbit with respect to time. What we are
missing is the true anomaly θ as a function of time, t.
3.5.1
Circular Orbits
For a circular orbit (e = 0), this is trivial. From (3.45), we have
˙θ = h
r2 .
(3.52)

84
Spacecraft Dynamics and Control: An Introduction
But, for a circular orbit, we have that r = a and h = √μa (see (3.17), (3.18) and (3.23)).
Therefore,
˙θ =
 μ
a3 .
(3.53)
Comparing this to (3.51), we see that for a circular orbit, the orbital angular rate is simply
the mean orbital motion. That is,
˙θ = n.
(3.54)
Integrating this leads to the relationship between θ and t:
θ(t) −θ(t0) = n(t −t0).
(3.55)
3.5.2
Elliptical Orbits
Unfortunately, in the more general case, it is very difﬁcult to obtain a direct relationship
between the true anomaly, θ and time, t. We shall only treat the elliptical (e < 1) case fully.
The parabolic and hyperbolic cases can be treated in similar fashion.
3.5.2.1
Eccentric Anomaly
Because it is difﬁcult to obtain a direct relationship between θ and t, we shall instead make
use of an auxiliary variable called the eccentric anomaly. To deﬁne this, consider the elliptical
orbit described by (3.35),
(x p + ae)2
a2
+
y2
p
b2 = 1.
where b = a
√
1 −e2. We note that this ellipse may also be represented in polar form by
x p + ae = a cos E, yp = b sin E,
(3.56)
for some angle E. It is readily veriﬁed that
(x p + ae)2
a2
+
y2
p
b2 = cos2 E + sin2 E = 1,
as required. We call the angle E, the eccentric anomaly. The geometric interpretation of the
eccentric anomaly is shown in Figure 3.13. Now, we can ﬁnd relationships between E and θ.
Equating the expressions for x p and yp in (3.56) and (3.30), we obtain
x p = r cos θ = a (cos E −e) , yp = r sin θ = b sin E,

The Keplerian Two-Body Problem
85
m2
m1
θ
r
E
a
xp
yp
ae
Figure 3.13
Geometric interpretation of eccentric anomaly
which leads to
cos θ = a (cos E −e)
r
,
(3.57)
and
sin θ = a
√
1 −e2 sin E
r
,
(3.58)
where we have substituted for b. Next, we note from (3.31) and (3.23) that for any point on
the ellipse,
r = a(1 −e2) −ex p.
(3.59)
Substituting from (3.56) for x p, this leads to
r = a(1 −e2) −ae(cos E −e) = a(1 −e cos E).
(3.60)
Now let us make use of some double angle formulae, speciﬁcally:
cos u = 2 cos2 u
2 −1,
(3.61)
and
sin u = 2 sin u
2 cos u
2.
(3.62)

86
Spacecraft Dynamics and Control: An Introduction
First, let us apply (3.61) to the left-hand side of (3.57). Doing so leads to
2 cos2 θ
2 −1 = a (cos E −e)
r
⇒
2 cos2 θ
2 = a (cos E −e) + r
r
⇒
2 cos2 θ
2 = a (cos E −e) + a(1 −e cos E)
r
⇒
2 cos2 θ
2 = a(1 −e) (1 + cos E)
r
.
Note that we have made use of (3.60). Now, applying (3.61) to the right-hand side, we have
cos2 θ
2 = a(1 −e) cos2 E
2
r
.
(3.63)
Next, let us apply formula (3.62) to (3.58). Doing so leads to
sin θ
2 cos θ
2 = a
√
1 −e2 sin E
2 cos E
2
r
.
(3.64)
Finally, dividing (3.64) by (3.63) gives
tan θ
2 =
√
1 −e2
1 −e
tan E
2 =

(1 −e)(1 + e)
(1 −e)2
tan E
2 ,
which leads to
tan θ
2 =

1 + e
1 −e tan E
2 .
(3.65)
This last relationship (3.65) is the most useful, since E
2 and θ
2 share the same quadrant, as is clear
from Figure 3.13. Restricting 0 ≤E ≤360◦, we have 0 ≤E
2 ≤180◦. From Figure 3.13, if
0 ≤E ≤180◦, then 0 ≤θ ≤180◦, i.e. if 0 ≤E
2 ≤90◦, then 0 ≤θ
2 < 90◦. Similarly, if 180◦≤
E ≤360◦, then 180 ≤θ ≤360◦, i.e. if 90 ≤E
2 ≤180◦, then 90 ≤θ
2 < 180◦. Therefore, given
the eccentric anomaly E, we can uniquely determine the true anomaly θ using (3.65).
Now, having established a one-to-one relationship between the eccentric anomaly E and
the true anomaly θ, in order to ﬁnd the relationship between θ and t, we only need to ﬁnd the
relationship between E and t.
To do this, we now return to the expression for the magnitude of the angular momentum
(3.45), which is
h = r2 dθ
dt .
(3.66)

The Keplerian Two-Body Problem
87
Let t0 be the time of periapsis passage, that is θ(t0) = 0. Integrating (3.45) gives
 θ
0
r2dθ =
 t
t0
h dt = h(t −t0).
(3.67)
Let us now make the change of variables, E = E(θ). Differentiating (3.65), we have
1
2 cos2 θ
2
dθ
dE =
1
2 cos2 E
2

1 + e
1 −e, ⇒
dθ
dE =

1 + e
1 −e
cos2 θ
2
cos2 E
2
.
Making use of (3.63), this becomes
dθ
dE =

1 + e
1 −e
a(1 −e)
r
,
= a
√
1 −e2
r
.
Therefore, (3.67) becomes
h(t −t0) =
 E
0
r2 dθ
dE dE = a

1 −e2
 E
0
r dE.
Since r = a(1 −e cos E) (from (3.60)), the above integral becomes
h(t −t0) = a2√
1 −e2  E
0 (1 −e cos E)dE,
= a2√
1 −e2(E −e sin E).
Substituting h =

μa(1 −e2), the above equation becomes
E −e sin E =
 μ
a3 (t −t0).
Now, from (3.51), we recognize that

μ
a3 is just the mean motion. Deﬁning the mean anomaly
as
M = n(t −t0),
(3.68)
the equation for the eccentric anomaly above becomes
E −e sin E = M.
(3.69)

88
Spacecraft Dynamics and Control: An Introduction
This is the famous Kepler’s equation.
To summarize, for an elliptical orbit, in order to ﬁnd the true anomaly, θ given the time
since periapsis passage, t −t0, we follow the procedure:
1. Compute the mean anomaly, M from (3.68).
2. Solve Kepler’s equation (3.69) for the eccentric anomaly, E.
3. Compute the true anomaly, θ from (3.65).
We can also reverse the procedure. Given the true anomaly, θ, we can determine the
time since periapsis passage t −t0 by the following:
1. Compute the eccentric anomaly, E from (3.65).
2. Compute the mean anomaly, M from (3.69).
3. Compute the time since periapsis passage, t −t0 from (3.68).
3.5.2.2
Solution for Kepler’s Equation
There is no analytical solution for E given M in Kepler’s equation. It must be solved numer-
ically. There are several methods that can be used. One such method is known as Newton’s
method. This is an iterative scheme that converges quite quickly:
Ek+1 = Ek −g(Ek)
g′(Ek), k = 0, 1, 2, ...
(3.70)
where
g(E)
= E −e sin E −M, g′(E) = 1 −e cos E.
An initial guess for E that usually works well is E0 = M. The iteration (3.70) is repeated until
either |Ek+1 −Ek| < ϵ or |g(Ek)| < δ where δ and ϵ are appropriately chosen small, positive
numbers.
3.5.3
Parabolic Orbits
It can be shown by direct integration of (3.67) that the time-of-ﬂight equation for parabolic
orbits is
6
 μ
p3 (t −t0) =

3 tan θ
2 + tan3 θ
2

.
(3.71)

The Keplerian Two-Body Problem
89
3.5.4
Hyperbolic Orbits
Similar to the elliptical case, a hyperbolic eccentric anomaly, H can be found, satisfying
tanh H
2 =

e −1
e + 1 tan θ
2.
(3.72)
Deﬁning the hyperbolic mean anomaly as
N
=
 μ
−a3 (t −t0),
(3.73)
it is possible to obtain a hyperbolic version of Kepler’s equation, given by
e sinh H −H = N.
(3.74)
The procedure for obtaining the true anomaly θ given the time since periapsis passage t −t0
is the same as for the elliptical case.
3.6
Orbital Elements
Thus far, we have established that two-body orbital motion is planar, and that the shape of the
orbit is either circular, elliptical, parabolic or hyperbolic. The size and shape are completely
determined by the semi-latus rectum, p and the eccentricity, e (for elliptical orbits it is more
common to use the semi-major axis, a, instead of p). These in turn, are completely determined
by the orbital angular momentum, h and energy, E. We have also established how to determine
our location on the orbit (the true anomaly θ) given the time since periapsis passage t −t0,
using the time-of-ﬂight equations.
All that is remaining to completely specify the two-body orbital motion is to locate the orbit
in three-dimensional space. Speciﬁcally, we need to specify the plane of the orbit, and the
direction of periapsis within that plane.
In order to be able to do this, we need an inertial reference frame within which we can
specify these parameters. For orbits around the sun, the heliocentric-ecliptic coordinate system
is useful. For orbits around the Earth, the geocentric-equatorial system is useful.
3.6.1
Heliocentric-Ecliptic Coordinate System
As shown in Figure 3.14, the heliocentric-ecliptic system, denoted FE is deﬁned using the
Earth’s orbit about the sun. The origin is at the center of the sun. The fundamental plane of
the system (x-y plane) is the ecliptic plane, which is the plane of the Earth’s orbit around the
sun. The ⃗zE direction is normal to the ecliptic plane, such that it has the same direction as
the Earth’s orbital angular momentum vector about the sun. The ⃗xE direction is determined
by the line of intersection between the ecliptic plane, and the Earth’s equatorial plane. The
direction of ⃗xE along the line of intersection is chosen such that on the ﬁrst day of autumn, a
vector pointing from the sun to the Earth lies along the positive ⃗xE direction. This is called the

90
Spacecraft Dynamics and Control: An Introduction
xE
yE
zE
SUN
Vernal Equinox
1st day of autumn (Northern Hemisphere)
1st day of summer
1st day of winter
1st day of spring
EARTH
Figure 3.14
Heliocentric-ecliptic coordinate system
vernal equinox direction. The ⃗yE direction is chosen to complete the right-handed coordinate
system, that is ⃗yE = ⃗zE × ⃗xE.
Note that the Earth’s equatorial plane is the plane perpendicular to the Earth’s axis of
rotation. Now, the Earth’s axis of rotation is not inertially ﬁxed, but is slowly precessing.
Hence, the line of intersection between the equatorial plane and the ecliptic moves. Therefore,
the reference frame just deﬁned is not truly inertial. To obtain an inertial frame, we must
specify the vernal equinox direction (⃗xE) at a particular epoch (date).
3.6.2
Geocentric-Equatorial Coordinate System
As shown in Figure 3.15, the geocentric-equatorial system, denoted FG is deﬁned by the
Earth’s axis of rotation. The origin of the system is at the center of the Earth. The fundamental
plane (x-y-plane) is the equatorial plane. The ⃗xG direction is chosen to point towards the
vernal equinox (⃗xG = ⃗xE). The ⃗zG direction points towards the north pole. The ⃗yG is chosen to
complete the right-handed coordinate system, that is ⃗yG = ⃗zG × ⃗xG. The geocentric-equatorial
system is often referred to as the Earth-Centered Inertial (ECI) coordinate system. Note that
while the origin of the system is at the center of the Earth, the coordinate system does not
rotate with the Earth. Since the origin moves with the Earth’s orbit around the sun, this system
is not truly inertial, however for practical purposes, it is sufﬁcient.
xG = xE
yG
zG
EARTH
Equator
North pole
Figure 3.15
Geocentric-equatorial coordinate system

The Keplerian Two-Body Problem
91
xG
yG
zG
EARTH
Equator
h
n
i
Ω
ω
θ
r
e
perigee
orbit
ascending node
Equatorial Plane
Figure 3.16
Orbital elements
Now that we have an inertial coordinate system for orbits around the Earth, Figure 3.16
shows how to locate the orbit relative to it.
To specify the orbital plane, we can use the angle that the plane makes with the equatorial
plane, and the line of intersection between the two planes.
The angle between the two planes is given by the angle between the two positive normals,
that is the angle between ⃗h and ⃗zG. This angle is called the inclination, and is denoted i.
The line of intersection between the equatorial and orbital planes is called the line of nodes.
In particular, the point where the orbit crosses from the negative to positive hemisphere (the
orbit’s coordinate along ⃗zG goes from negative to positive), is called the ascending node.
The line of intersection between the two planes can now be speciﬁed by the angle between
the ⃗xG direction, and the ascending node direction. This angle is called the right ascension of
the ascending node (RAAN), and is denoted .
The two angles i and  fully specify the orbital plane relative to FG. As we have discussed,
the ﬁnal quantity that is remaining to fully specify the orbit is the direction of periapsis. This
can be described in the orbital plane by the angle between the ascending node, and periapsis.
This angle is called the argument of perigee, and is denoted by ω. Note that periapsis is the
generic term for closest distance of an orbit. When referring to orbits around the Earth, it
becomes perigee.
Summary
To fully describe the position of an object in a two-body orbit about the Earth, we can use the
six quantities:
a −semi-major axis,
e −eccentricity,
i
−inclination,
 −right ascension of the ascending node,
ω −argument of perigee,
t0 −time of perigee passage.
(3.75)

92
Spacecraft Dynamics and Control: An Introduction
These six quantities are called the classical orbital elements. Even though we have deﬁned
them for objects orbiting the Earth, we could similarly deﬁne them for objects orbiting other
planets or stars (or moons, etc). The classical elements are by no means the only set of
quantities that can be used to fully describe the orbit. In fact, there are many other sets of
elements. Since the orbit is the solution of a second order differential equation, we could even
have speciﬁed the orbit in terms of the initial conditions ⃗r0 and ⃗v0. However, the elements are
much more useful from a conceptual point of view.
3.7
Orbital Elements given Position and Velocity
Now that we have deﬁned the orbital elements, we need a means to compute them. Assume
that the inertial position ⃗r and velocity ⃗v are given at time t.
1. The semi-major axis of the orbit, a can be obtained from the orbital energy. Therefore, we
compute
E = ⃗v · ⃗v
2
−μ
|⃗r|.
We can now obtain the semi-major axis from (3.25) as
a = −μ
2E .
2. Next, the eccentricity can be obtained directly from the eccentricity vector (7.77). Therefore,
we compute
⃗h = ⃗r × ⃗v
⃗e = ⃗v×⃗h
μ −⃗r
|⃗r|,
e = |⃗e|.
3. The inclination can now be obtained from the orbital angular momentum vector ⃗h and the
⃗zG axis as follows
⃗h · zG = |⃗h| cos i,
which leads to
i = cos−1
 ⃗h · ⃗zG
|⃗h|

.
4. The right ascension of the ascending node can be obtained from the ⃗xG axis and a vector ⃗n
which points toward the ascending node. From Figure 3.16, such a vector is
⃗n = ⃗zG × ⃗h.

The Keplerian Two-Body Problem
93
Making use of this, we have
⃗n · ⃗xG = |⃗n| cos ,
which leads to
 = cos−1
 ⃗n · ⃗xG
|⃗n|
	
.
To determine the quadrant, we see from Figure 3.16, that if
⃗n · ⃗yG ≥0, 0 ≤ ≤180◦,
and if
⃗n · ⃗yG < 0, 180 <  < 360◦.
5. The argument of perigee can now be obtained from the vectors ⃗n and ⃗e as
ω = cos−1
 ⃗n · ⃗e
|⃗n|e
	
.
To determine the quadrant, we see from Figure 3.16, that if
⃗e · ⃗zG ≥0, 0 ≤ω ≤180◦,
and if
⃗e · ⃗zG < 0, 180 < ω < 360◦.
6. To ﬁnd the time of perigee passage, we ﬁrst need to determine our location on the orbit
(true anomaly, θ). We will make use of the argument of latitude, deﬁned as
u
= θ + ω.
That is, the argument of latitude is the angle the position vector ⃗r makes with the ascending
node vector ⃗n. Therefore, we have
u = cos−1
 ⃗n · ⃗r
|⃗n||⃗r|
	
.
To determine the quadrant, we see from the diagram that if
⃗r · ⃗zG ≥0, 0 ≤u ≤180◦,

94
Spacecraft Dynamics and Control: An Introduction
and if
⃗r · ⃗zG < 0, 180 < u < 360◦.
Now, we can compute the true anomaly from
θ = u −ω.
Using the time-of-ﬂight equation, we can obtain the time of perigee passage. First, we need
to determine the eccentric anomaly. From (3.65), we have
E = 2 tan−1

1 −e
1 + e tan θ
2

.
The time of perigee passage can now be obtained from Kepler’s equation (3.69) as
t0 = t −(E −e sin E)

a3
μ .
Note that in the above computations of the orbital elements, the only thing that matters
is that ⃗r represents the position relative to the center of the Earth, and that ⃗v represents
the inertial velocity. The vectors themselves (including ⃗xG, ⃗yG and ⃗zG) can be expressed
in any reference frame, inertial or not, provided all vectors are expressed in the same
reference frame.
3.8
Position and Velocity given Orbital Elements
Suppose now that the orbital elements are given, and that we want to obtain the inertial position
and velocity at a given time t. To do this, we are going to make use of the perifocal coordinate
system, and the transformation between the perifocal reference frame and the Earth-Centered-
Inertial (ECI) frame. First, we are going to determine the position and velocity in perifocal
coordinates. From (3.30), the position vector in perifocal coordinates is given by
⃗r = ⃗F T
p
⎡
⎢⎢⎣
r cos θ
r sin θ
0
⎤
⎥⎥⎦,
where from (3.18),
r = a(1 −e2)
1 + e cos θ .
(3.76)

The Keplerian Two-Body Problem
95
This leads to
⃗r = ⃗F T
p
⎡
⎢⎢⎢⎢⎢⎢⎣
a(1 −e2) cos θ
1 + e cos θ
a(1 −e2) sin θ
1 + e cos θ
0
⎤
⎥⎥⎥⎥⎥⎥⎦
,
Taking the inertial time-derivative of the position vector, the inertial velocity is given by
⃗v = ⃗F T
p
⎡
⎢⎢⎣
˙r cos θ −r ˙θ sin θ
˙r sin θ + r ˙θ cos θ
0
⎤
⎥⎥⎦.
(3.77)
Now, let us differentiate (3.76) to get
˙r = ae(1 −e2) ˙θ sin θ
(1 + e cos θ)2
.
(3.78)
From (3.45), we have
˙θ = h
r2 .
By deﬁnition of p = a(1 −e2) in (3.17), we have
h =

μa(1 −e2).
Therefore, we have
˙θ =

μa(1 −e2)
r2
=

μa(1 −e2)(1 + e cos θ)2
a2(1 −e2)2
,
which leads to
˙θ =
 μ
a3
(1 + e cos θ)2
(1 −e2)
3
2
.
(3.79)
Substituting this into (3.78) gives
˙r =

μ
a(1 −e2)e sin θ.
(3.80)

96
Spacecraft Dynamics and Control: An Introduction
Multiplying (3.76) with (3.79), we have
r ˙θ =

μ
a(1 −e2)(1 + e cos θ).
(3.81)
Substituting (7.18) and (7.19) into (3.77) gives
⃗v = ⃗F T
p
⎡
⎢⎢⎢⎢⎢⎣
−

μ
a(1 −e2) sin θ

μ
a(1 −e2)(e + cos θ)
0
⎤
⎥⎥⎥⎥⎥⎦
.
(3.82)
We have now found the position and inertial velocity in perifocal coordinates. However, we
ultimately want to obtain them in ECI coordinates. That is, we seek rG and vG such that
⃗r = ⃗F T
GrG and ⃗v = ⃗F T
GvG. As we have seen in Section 1.3, this transformation is given by
rG = CGp
⎡
⎢⎢⎢⎢⎢⎢⎣
a(1 −e2) cos θ
1 + e cos θ
a(1 −e2) sin θ
1 + e cos θ
0
⎤
⎥⎥⎥⎥⎥⎥⎦
,
and
vG = CGp
⎡
⎢⎢⎢⎢⎢⎢⎣
−

μ
a(1 −e2) sin θ

μ
a(1 −e2)(e + cos θ)
0
⎤
⎥⎥⎥⎥⎥⎥⎦
.
Therefore, all we need to do is ﬁnd the transformation from perifocal to inertial coordinates.
As shown in Figure 3.17, it can be seen that the perifocal coordinate system is obtained by
three successive principal rotations from the ECI frame (refer also to Figure 3.16 to see why).
zG, zi
xi
n
xG
yG
yi
Ω
Ω
zt, zp
h
xp
e
xt
yt
yp
ω
ω
xi, xt
n
yi
yt
zi
zt
h
i
i
Figure 3.17
Earth-centered-inertial to perifocal transformation

The Keplerian Two-Body Problem
97
The ﬁrst is a rotation about the ⃗zG axis through an angle of . The second is a rotation about
the intermediate ⃗x axis through an angle i. The third is a rotation about the transformed ⃗z axis
through and angle ω. Mathematically, this transformation is expressed by the rotation matrix
CpG = Cz(ω)Cx(i)Cz().
However, we want the inverse transformation. This is just the transpose, given by
CGp = CT
pG = CT
z ()CT
x (i)CT
z (ω).
Making use of the principal rotation matrices in Section 1.3.1, this becomes
CGp =
⎡
⎢⎢⎣
ccω −scisω
−csω −scicω
ssi
scω + ccisω
−ssω + ccicω
−csi
sisω
sicω
ci
⎤
⎥⎥⎦,
(3.83)
where cx = cos x and sx = sin x.
Summary
To summarize, to obtain the position and velocity at a time t, given the orbital elements, ﬁrst
the true anomaly is computed using Kepler’s equation (3.69) and (3.65). That is,
M = n(t −t0),
E −e sin E = M,
θ = 2 tan−1

1 + e
1 −e tan E
2

.
The position and inertial velocity coordinates in the ECI frame are computed as
rG =
⎡
⎢⎢⎣
ccω −scisω
−csω −scicω
ssi
scω + ccisω
−ssω + ccicω
−csi
sisω
sicω
ci
⎤
⎥⎥⎦
⎡
⎢⎢⎢⎢⎢⎢⎣
a(1 −e2) cos θ
1 + e cos θ
a(1 −e2) sin θ
1 + e cos θ
0
⎤
⎥⎥⎥⎥⎥⎥⎦
,
vG =
⎡
⎢⎢⎣
ccω −scisω
−csω −scicω
ssi
scω + ccisω
−ssω + ccicω
−csi
sisω
sicω
ci
⎤
⎥⎥⎦
⎡
⎢⎢⎢⎢⎢⎢⎣
−

μ
a(1 −e2) sin θ

μ
a(1 −e2)(e + cos θ)
0
⎤
⎥⎥⎥⎥⎥⎥⎦
.

98
Spacecraft Dynamics and Control: An Introduction
Important Remarks
In some cases, not all orbital elements are deﬁned. For example, for a circular orbit, there is no
periapsis (since r is constant). Therefore, ω is undeﬁned. In this case, the argument of latitude
u (the angle from the ascending node) can be used instead of the true anomaly. For elliptical
equatorial orbits, there is no line of nodes (the orbital and equatorial planes coincide). In this
case,  is undeﬁned, and the longitude of periapsis, 
 (the angle between periapsis and the
vernal equinox) is used instead of ω. For an equatorial circular orbit, there is no line of nodes,
and no periapsis. In this case,  and ω are undeﬁned, as is 
. The true longitude, l (the angle
from the vernal equinox) may be used instead of the true anomaly.
Notes
In this chapter, we have presented the two-body problem, and its solution. A more compre-
hensive treatment of the two-body problem may be found in Battin (1999).
We have introduced the concept of classical orbital elements in order to represent the
orbit. However, there are other sets of elements that can also be used. The reader is referred to
Vallado (2007) for more details. In presenting the orbital elements, we have loosely deﬁned two
coordinate systems, the Heliocentric-Ecliptic system and the Geocentric-Equatorial system. In
addition, there are other important coordinate systems used in astrodynamics. In this chapter,
we have not discussed different time systems used in astrodynamics. However, since we are
interested in describing orbital motion as a function of time, it is important that the correct
time system be used (a time system in which the orbital equations of motion are valid). For
a more detailed presentation of different coordinate and time systems used in astrodynamics,
the reader may wish to consult Vallado (2007), Montenbruck and Gill (2000) or Seidelmann
(2006).
References
Battin RH 1999 An Introduction to the Mathematics and Methods of Astrodynamics, Revised Edition. American
Institute of Aeronautics and Astronautics, Reston, VA.
Montenbruck O and Gill E 2000 Satellite Orbits: Models, Methods, Applications. Springer, Berlin Heidelberg.
Seidelmann PK 2006 Explanatory Supplement to the Astronomical Almanac. University Science Books.
Vallado DA 2007 Fundamentals of Astrodynamics and Applications 3rd edn. Microcosm Press, Hawthorne, CA.

4
Preliminary Orbit Determination
Now that we know how to describe the motion of an object in orbit, a signiﬁcant question is
how do we actually determine it. There are very sophisticated methods of orbit determination,
based upon statistical approaches, in fact, entire books have been written about the subject.
However, all of these sophisticated methods are based upon correcting preliminary orbit
estimates. Therefore, methods of initially determining the orbit of an object are relevant.
There are several methods (and variations upon these methods) to accomplish this, and they
depend upon the measurements that are available. We shall examine three methods.
4.1
Orbit Determination from Three Position Vectors
Suppose we are given three successive position vectors, ⃗r1, ⃗r2 and ⃗r3, as shown in Figure 4.1,
and that the time for at least one of them is given, that is we have ti for some i = 1, 2, 3.
Since the three vectors lie on the same orbit, they must be coplanar. The objective is to obtain
the orbital elements from this information. There are different solutions to this problem. The
one we are going to examine is a vector-based method, most suitable for automated computer
implementation, called Gibb’s method. We shall assume that the true anomalies θ1 and θ3
corresponding to ⃗r1 and ⃗r3 respectively, satisfy θ3 −θ1 < 180◦. From Section 3.7, we know
that if we have the inertial velocity corresponding to one of these position vectors, then we
have completely determined the orbit, and the orbital elements can be computed. This is what
we are going to do. We are going to ﬁnd the velocity vector ⃗vi corresponding to the position
⃗ri that we have a time ﬁx ti for.
The ﬁrst point we are going to note is that since the position vectors are coplanar, we can
obtain any one of them as a linear combination of the other two (provided the other two are
not parallel), that is
⃗r2 = α⃗r1 + β⃗r3,
(4.1)
provided ⃗r1 and ⃗r3 are not parallel.
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

100
Spacecraft Dynamics and Control: An Introduction
orbit
FG
r1
r2
r3
Figure 4.1
Orbit determination from three position vectors
We now determine the scalars α and β. Taking the cross-product of (4.1) with ⃗r1 and ⃗r3
separately, we ﬁnd
⃗r1 × ⃗r2 = α⃗r1 × ⃗r1 + β⃗r1 × ⃗r3 = β⃗r1 × ⃗r3,
(4.2)
⃗r3 × ⃗r2 = α⃗r3 × ⃗r1 + β⃗r3 × ⃗r3 = α⃗r3 × ⃗r1.
(4.3)
Since ⃗r1, ⃗r2 and ⃗r3 are coplanar, the vectors ⃗r1 × ⃗r2, ⃗r1 × ⃗r3 and ⃗r2 × ⃗r3 are parallel. Let us
deﬁne
⃗n = ⃗r1 × ⃗r3,
n =
√
⃗n · ⃗n,
(4.4)
as shown in Figure 4.2. Taking the dot product of ⃗n with each of (4.2) and (4.3), we have
β = ⃗n · (⃗r1 × ⃗r2)
n2
,
(4.5)
α = ⃗n · (⃗r2 × ⃗r3)
n2
.
(4.6)
Now, we know from Section 3.3, that for any point on the orbit,
⃗r · ⃗e = h2
μ −r,
(4.7)
r1
r3
n
Figure 4.2
Orbit normal vector

Preliminary Orbit Determination
101
where r =
√
⃗r · ⃗r, and h is the magnitude of the orbital angular momentum. Therefore, taking
the dot product of (4.1) with the eccentricity vector ⃗e, gives
h2
μ −r2 = α
h2
μ −r1

+ β
h2
μ −r3

,
which can be rearranged to give
h2
μ (1 −α −β) = r2 −αr1 −βr3,
leading to
h =

μ(r2 −αr1 −βr3)
1 −α −β
.
(4.8)
Now, since the vectors ⃗r1 and ⃗r3 are successive (⃗r3 follows ⃗r1), and lie in the orbital plane,
the orbital angular momentum vector ⃗h must be parallel to the vector ⃗n, and point in the same
direction (since θ3 −θ1 < 180◦). Therefore, the orbital angular momentum vector is given by
⃗h = h ⃗n
n ,
(4.9)
and using (4.4) and (4.8) we can compute the orbit normal vector.
Let us now examine the vector cross product of ⃗n with ⃗e,
⃗n × ⃗e = (⃗r1 × ⃗r3) × ⃗e.
Making use of the vector triple product identity in Section 1.1.3, this becomes
⃗n × ⃗e = −
⃗e · ⃗r3
 ⃗r1 +
⃗e · ⃗r1
 ⃗r3.
Making use of (4.7), we have
⃗n × ⃗e =
h2
μ −r1

⃗r3 −
h2
μ −r3

⃗r1.
(4.10)
Next, taking the vector cross product of ⃗n × ⃗e with ⃗n, and making use of the vector triple
product identity, we have
(⃗n × ⃗e) × ⃗n = −(⃗n · ⃗e)⃗n + (⃗n · ⃗n)⃗e = n2⃗e,
(4.11)

102
Spacecraft Dynamics and Control: An Introduction
where the fact that ⃗n · ⃗e = 0 has been used, since the eccentricity vector ⃗e lies in the orbital
plane. Combining (4.10) and (4.11), we obtain the eccentricity vector ⃗e,
⃗e = 1
n2
h2
μ −r1

⃗r3 × ⃗n −
h2
μ −r3

⃗r1 × ⃗n

.
(4.12)
Finally, let us obtain an expression for the velocity vector, ⃗v. Recall from Section 3.2.3 that
the eccentricity vector is deﬁned as
⃗e
= ⃗v × ⃗h
μ
−⃗r
r .
Taking the vector cross-product with the angular momentum vector ⃗h leads to
⃗h × ⃗e =
⃗h × (⃗v × ⃗h)
μ
−
⃗h × ⃗r
r
.
(4.13)
Making use of the vector triple product identity in Section 1.1.3, we have
⃗h × (⃗v × ⃗h) = (⃗h · ⃗h)⃗v −(⃗h · ⃗v)⃗h = h2⃗v,
since ⃗h · ⃗v = 0. Substituting this into (4.13) gives
⃗h × ⃗e = h2
μ ⃗v −
⃗h × ⃗r
r
,
which leads to
⃗v = μ
h2 ⃗h ×

⃗e + ⃗r
r

.
(4.14)
Since we have already obtained ⃗h and ⃗e, we can compute ⃗vi corresponding to any of the ⃗ri.
Given ⃗ri and ⃗vi with corresponding time ti, the orbital elements can be obtained from
Section 3.7.
Summary
Given are position vectors ⃗r1, ⃗r2, ⃗r3, and a time ti for some i = 1, 2, 3. To obtain the orbital
elements:
1. Compute r1 = √⃗r1 · ⃗r1, r2 = √⃗r2 · ⃗r2 and r3 = √⃗r3 · ⃗r3.
2. Compute ⃗n = ⃗r1 × ⃗r3 and n =
√
⃗n · ⃗n.
3. Compute α and β
α = ⃗n · (⃗r2 × ⃗r3)
n2
,
β = ⃗n · (⃗r1 × ⃗r2)
n2
.

Preliminary Orbit Determination
103
4. Compute the angular momentum vector
h =

μ(r2 −αr1 −βr3)
1 −α −β
,
⃗h = h ⃗n
n .
5. Compute the eccentricity vector
⃗e = 1
n2
h2
μ −r1

⃗r3 × ⃗n −
h2
μ −r3

⃗r1 × ⃗n

.
6. Compute the velocity ⃗vi corresponding to time ti
⃗vi = μ
h2 ⃗h ×

⃗e + ⃗ri
ri

7. Using ⃗ri, ⃗vi and ti, compute the orbital elements.
4.2
Orbit Determination from Three Line-of-Sight Vectors
Suppose we only have optical measurements available. In this case, we can only obtain the
direction of the object (whose orbit we are trying to determine) from our observation location,
but not the range (distance). Therefore, we cannot compute the position vector of the object.
We must determine the orbit on the basis of line-of-sight vectors only. This is a very old
problem, with famous solutions by Laplace and Gauss, among others, who developed their
methods to determine the orbits of celestial objects. Gauss famously used his method in 1801
to obtain the orbit of the minor planet Ceres, and successfully predicted the date and location
of its next sighting.
There are several methods for orbit determination from line-of-sight measurements, each
of which has their own merits and limitations. Because these methods are each more suitable
for different situations, someone working in the ﬁeld requires knowledge of them all. For our
purposes in this book, we are going to restrict ourselves to a simpliﬁed Gauss’ method. As we
shall see, this method is more suitable when the observations are relatively closely spaced.
Let ⃗Ri be the (known) position of the observer, ⃗ℓi the (measured) unit line-of-sight vector,
and ρi the (unknown) range (distance to the object) at times ti for i = 1, 2, 3, where t1 < t2 < t3
(see Figure 4.3). The object orbital position at time ti is ⃗ri. For Earth orbiting objects, ⃗Ri is
typically the location of the observer relative to the center of the Earth (it is a point on the
surface of the Earth). For objects orbiting the sun, ⃗Ri is typically the orbital position of the
Earth relative to the sun.
We shall now assume that the true anomalies θ1 and θ3 corresponding to ⃗r1 and ⃗r3 respec-
tively, satisfy θ3 −θ1 < 90◦, and that the orbit is elliptical. The orbital position of the satellite
is clearly given by
⃗ri = ⃗Ri + ρi ⃗ℓi.
(4.15)

104
Spacecraft Dynamics and Control: An Introduction
orbit
FG
ri
Ri
ρi
observer
Note: ρi = ρi i
Figure 4.3
Orbit determination from three line-of-sight vectors
As in Section 4.1, because the object’s orbit lies in a plane, we can write
⃗r2 = α⃗r1 + β⃗r3.
(4.16)
Substituting this into (4.15) leads to
⃗R2 + ρ2 ⃗ℓ2 = α(⃗R1 + ρ1 ⃗ℓ1) + β(⃗R3 + ρ3 ⃗ℓ3),
which rearranges as
ρ2 ⃗ℓ2 −αρ1 ⃗ℓ1 −βρ3 ⃗ℓ3 = α ⃗R1 + β ⃗R3 −⃗R2.
(4.17)
We now deﬁne the vectors
⃗d1 = ⃗ℓ2 × ⃗ℓ3,
⃗d2 = ⃗ℓ3 × ⃗ℓ1,
⃗d3 = ⃗ℓ1 × ⃗ℓ2,
(4.18)
We note that
⃗d1 · ⃗ℓ2 = 0,
⃗d1 · ⃗ℓ3 = 0,
⃗d2 · ⃗ℓ1 = 0,
⃗d2 · ⃗ℓ3 = 0,
⃗d3 · ⃗ℓ1 = 0,
⃗d3 · ⃗ℓ2 = 0.
Taking the dot product of each of ⃗d1, ⃗d2, ⃗d3 with (4.17), leads to
−αρ1⃗d1 · ⃗ℓ1 =
	
α ⃗R1 + β ⃗R3 −⃗R2

· ⃗d1,
ρ2⃗d2 · ⃗ℓ2 =
	
α ⃗R1 + β ⃗R3 −⃗R2

· ⃗d2,
−βρ3⃗d3 · ⃗ℓ3 =
	
α ⃗R1 + β ⃗R3 −⃗R2

· ⃗d3.
(4.19)

Preliminary Orbit Determination
105
Now, making use of the identity for the scalar triple product in Section 1.1.3, we ﬁnd that
⃗d1 ·⃗l1 = ⃗d2 ·⃗l2 = ⃗d3 ·⃗l3 Let us call this quantity D, that is
D = ⃗d1 ·⃗l1 = (⃗l2 ×⃗l3) ·⃗l1.
Therefore, we can rewrite (4.19) as
ρ1 = −1
αD
	
α ⃗R1 · ⃗d1 + β ⃗R3 · ⃗d1 −⃗R2 · ⃗d1

,
ρ2 = 1
D
	
α ⃗R1 · ⃗d2 + β ⃗R3 · ⃗d2 −⃗R2 · ⃗d2

,
(4.20)
ρ3 = −1
βD
	
α ⃗R1 · ⃗d3 + β ⃗R3 · ⃗d3 −⃗R2 · ⃗d3

.
That is, the ranges ρ1, ρ2 and ρ3 are functions of α and β. By imposing the coplanar condition
(4.16), we have reduced the number of unknowns from three down to two.
Now, taking the cross-product of (4.16) with ⃗r1 and ⃗r3, we have
⃗r1 × ⃗r2 = β⃗r1 × ⃗r3,
⃗r2 × ⃗r3 = α⃗r1 × ⃗r3.
(4.21)
Since the vectors ⃗r1, ⃗r2 and ⃗r3 are coplanar and successive, the vectors ⃗r1 × ⃗r2, ⃗r1 × ⃗r3 and
⃗r2 × ⃗r3 are parallel and have the same direction (since θ3 −θ1 < 90◦). Therefore, we can
obtain the following expressions from (4.21)
α = |⃗r2 × ⃗r3|
|⃗r1 × ⃗r3|,
β = |⃗r1 × ⃗r2|
|⃗r1 × ⃗r3|.
(4.22)
Let us take a look at what |⃗a × ⃗b| physically means. From the deﬁnition of the cross-
product in Section 1.1.2, we have that |⃗a × ⃗b| = |⃗a||⃗b| sin θ, where θ is the angle between the
two vectors. Figure 4.4 shows a graphical interpretation. The area of the triangle is given by
1
2|⃗a||⃗b| sin θ = 1
2|⃗a × ⃗b|. That is, |⃗a × ⃗b| is equal to twice the area of the triangle enclosed by
the two vectors ⃗a and ⃗b.
θ
b
a
|a| sin θ
Figure 4.4
Triangle geometry

106
Spacecraft Dynamics and Control: An Introduction
r1
r3
r2
r1
r3
r2
r1
r3
r2
r1
r3
r2
r1
r3
r2
r1
r3
r2
Δ1
Δ2
Δ3
S1
S2
S3
Figure 4.5
Triangle and sector areas
Referring to Figure 4.5, let us now deﬁne the areas of the three triangles generated by ⃗r1, ⃗r2
and ⃗r3 as
1 = 1
2|⃗r1 × ⃗r2|,
2 = 1
2|⃗r1 × ⃗r3|,
3 = 1
2|⃗r2 × ⃗r3|.
(4.23)
Then, from (4.22), we see that α and β are just the ratios of these triangular areas, that is
α = 3
2
,
β = 1
2
.
(4.24)
Related to the areas of the triangles are the areas of the sectors of the orbit generated by the
vectors ⃗r1, ⃗r2 and ⃗r3, denoted S1, S2 and S3, as shown in Figure 4.5. The areas of the sectors
can be obtained from Kepler’s 2nd law as
S1 = h
2(t2 −t1),
S2 = h
2(t3 −t1),
S3 = h
2(t3 −t2),
(4.25)
where h is the orbital angular momentum. The ratio of the sector to triangle areas, denoted by
ηi is given by
η1 = S1
1
= h(t2 −t1)
|⃗r1 × ⃗r2| ,
η2 = S2
2
= h(t3 −t1)
|⃗r1 × ⃗r3| ,
η3 = S3
3
= h(t3 −t2)
|⃗r2 × ⃗r3| .

Preliminary Orbit Determination
107
Therefore, the constants α and β may be expressed as
α = η2S3
η3S2
= η2(t3 −t2)
η3(t3 −t1),
β = η2S1
η1S2
= η2(t2 −t1)
η1(t3 −t1).
(4.26)
Since the measurement times are known, if we can determine the sector to triangle area ratios,
we can compute α and β, from which we can obtain ρ1, ρ2 and ρ3 and determine the orbit.
It can be shown that the sector to triangle ratio for a two-body elliptical orbit between the
position vectors ⃗ra and ⃗rb satisﬁes
η = 1 + m
η2 W
 m
η2 −l

,
(4.27)
where
m =
μ(tb −ta)2

2√rarb cos((θb −θa)/2)
3 ,
l =
ra + rb
4√rarb cos((θb −θa)/2) −1
2,
and
W(w) = 2g −sin(2g)
sin3 g
,
g = 2 sin−1 √w.
This is a transcendental equation for η, and must be solved iteratively. One such method is the
secant procedure, given by
ηi+1 = ηi −f (ηi)
ηi −ηi−1
f (ηi) −f (ηi−1),
where
f (x) = 1 −x + m
x2 W
 m
x2 −l

.
Suitable starting values for this iteration are
η1 = ηH + 0.1,
η2 = ηH,
where ηH is known as the Hansen Approximation
ηH = 12
22 + 10
22

1 + 44
9
m
l + 5/6.
Now, for closely spaced measurements, the sector to triangle ratio is approximately one
(ηi ≈1, see Figure 4.5). Therefore, as a ﬁrst approximation, we may take
α = η2S3
η3S2
≈t3 −t2
t3 −t1
,
β = η2S1
η1S2
≈t2 −t1
t3 −t1
.
(4.28)

108
Spacecraft Dynamics and Control: An Introduction
We can now substitute these approximations into (4.20) to obtain approximate ranges. Approx-
imate position vectors are then obtained using (4.15). Now, we can iterate to improve our
solution. With the computed position vectors, we can determine new sector triangle area ratios
using the above method. Using these, we can compute new values for α and β from (4.28), and
so on. Once our iterations have converged, and we have computed converged position vectors
⃗r1, ⃗r2 and ⃗r3, we can determine the orbit from these using the method in Section 4.1.
Summary
We are given line-of-sight measurements ⃗ℓ1, ⃗ℓ2, ⃗ℓ3 at times t1, t2 and t3. The position
of observation is known at each of these times, and is given by ⃗R1, ⃗R2 and ⃗R3.
1. Set α = (t3 −t2)/(t3 −t1) and β = (t2 −t1)/(t3 −t1), and select a tolerance ϵ > 0
2. Compute the vectors ⃗d1 = ⃗ℓ2 × ⃗ℓ3, ⃗d2 = ⃗ℓ3 × ⃗ℓ1 and ⃗d3 = ⃗ℓ1 × ⃗ℓ2, and the scalar
D = ⃗d1 · ⃗ℓ1.
3. Compute the ranges
ρ1 = −1
αD
	
α ⃗R1 · ⃗d1 + β ⃗R3 · ⃗d1 −⃗R2 · ⃗d1

,
ρ2 = 1
D
	
α ⃗R1 · ⃗d2 + β ⃗R3 · ⃗d2 −⃗R2 · ⃗d2

,
ρ3 = −1
βD
	
α ⃗R1 · ⃗d3 + β ⃗R3 · ⃗d3 −⃗R2 · ⃗d3

.
4. Compute the position vectors
⃗r1 = ⃗R1 + ρ1 ⃗ℓ1,
⃗r2 = ⃗R2 + ρ2 ⃗ℓ2,
⃗r3 = ⃗R3 + ρ3 ⃗ℓ3.
5. Compute the sector triangle area ratios η1, η2 and η3 by solving
η = 1 + m
η2 W
 m
η2 −l

,
where
m =
μ(tb −ta)2

2√rarb cos((θb −θa)/2)
3 ,
l =
ra + rb
4√rarb cos((θb −θa)/2) −1
2,
and
W(w) = 2g −sin(2g)
sin3 g
,
g = 2 sin−1 √w,

Preliminary Orbit Determination
109
using the iterative procedure
ηi+1 = ηi −f (ηi)
ηi −ηi−1
f (ηi) −f (ηi−1),
where
f (x) = 1 −x + m
x2 W
 m
x2 −l

,
with starting values
η1 = ηH + 0.1,
η2 = ηH,
where
ηH = 12
22 + 10
22

1 + 44
9
m
l + 5/6.
6. Compute new approximations αnew and βnew by solving
αnew = η2S3
η3S2
= η2(t3 −t2)
η3(t3 −t1),
βnew = η2S1
η1S2
= η2(t2 −t1)
η1(t3 −t1).
7. If |α −αnew| < ϵ and |β −βnew| < ϵ, go to step 8. Otherwise, set α = αnew and β = βnew
and go to step 3.
8. Using ⃗r1, ⃗r2 and ⃗r3, compute the orbit as in Section 4.1.
Warning: The method outlined here only performs well if the orbit is elliptical and the
condition θ3 −θ1 < 90◦is satisﬁed.
4.3
Orbit Determination from Two Position Vectors and Time (Lam-
bert’s Problem)
It is possible to determine the orbit given two position vectors, and the time taken to travel
between them. This is a very important problem, and has been the subject of much study by
some of the greatest mathematicians in history. It has been given the name Lambert’s Problem,
because Lambert was the ﬁrst to form a solution. This problem basically consists of ﬁnding the
orbit required to achieve a given transit time between two position vectors. As such, it can be
thought of as a preliminary orbit determination problem. On the other hand, it has important
applications in orbit transfer, rendezvous and targeting problems. Speciﬁcally, given an initial
position ⃗r1, determine the orbit required to get to position ⃗r2 in the time t2 −t1. For example,
⃗r1 might be the position of the Earth at time t1, and ⃗r2 the position of another planet, say Mars
at time t2. The solution to Lambert’s problem then provides the transfer orbit. As we have seen,
the orbit is fully speciﬁed once the position and velocity vectors are simultaneously speciﬁed.
The orbital elements can then be obtained from them using the procedure in Section 3.7. We

110
Spacecraft Dynamics and Control: An Introduction
can ﬁnd either ⃗v1 or ⃗v2. Of more interest to the orbital transfer problem is the velocity ⃗v1, since
this lets us know what velocity we need to give the spacecraft at time t1 to be able to get to ⃗r2
at time t2.
There are several solutions to this problem, each of which has applicability in different
situations. The solution we are going to present is due to Gauss. We will restrict ourselves to
elliptical orbits, with the transfer angle being less than 90◦.
4.3.1
The Lagrangian Coefﬁcients
Since the motion of an object in orbit is planar, and the position and velocity vectors ⃗r and
⃗v are not parallel, we are able to relate the position and velocity at one point in an orbit to
another by the relations
⃗r2 = F⃗r1 + G⃗v1,
⃗v2 = Ft⃗r1 + Gt⃗v1.
(4.29)
The scalars F, G, Ft and Gt are known as the Lagrangian Coefﬁcients. They are very useful
for the orbit determination problem in general. For our purpose, we only need the ﬁrst of
(4.29), and we see that if we know F and G for a given transfer orbit between ⃗r1 and ⃗r2, then
we can obtain the velocity ⃗v1 by
⃗v1 = ⃗r2 −F⃗r1
G
.
(4.30)
We will now obtain expressions for F, G. To do this, we are going to make use of the
expressions for the position and velocity in the perifocal coordinate system (see Section 3.8).
They are:
⃗r
⃗v

=
⎡
⎢⎣
r cos θ
r sin θ
−
μ
p sin θ
μ
p (e + cos θ)
⎤
⎥⎦
⃗xp
⃗yp

.
(4.31)
The determinant of the matrix in (4.31) is given by
det
⎛
⎜⎝
⎡
⎢⎣
r cos θ
r sin θ
−
μ
p sin θ
μ
p (e + cos θ)
⎤
⎥⎦
⎞
⎟⎠= r
μ
p cos θ(e + cos θ) + r
μ
p sin2 θ,
= r
μ
p (1 + e cos θ).
Making use of the polar equation for the orbit
r =
p
1 + e cos θ ,
(4.32)

Preliminary Orbit Determination
111
this becomes
det
⎛
⎜⎝
⎡
⎢⎣
r cos θ
r sin θ
−
μ
p sin θ
μ
p (e + cos θ)
⎤
⎥⎦
⎞
⎟⎠= √μp = h.
Since h ̸= 0 for an orbit, the matrix is invertible, with inverse given by
⎡
⎢⎣
r cos θ
r sin θ
−
μ
p sin θ
μ
p (e + cos θ)
⎤
⎥⎦
−1
=
⎡
⎢⎢⎣
1
p (e + cos θ)
−
r
√μp sin θ
1
p sin θ
r
√μp cos θ
⎤
⎥⎥⎦.
Therefore, the unit vectors of the perifocal coordinate system can be obtained from the position
and velocity at any point in the orbit, in particular ⃗r1 and ⃗v1 by
⃗xp
⃗yp

=
⎡
⎢⎢⎣
1
p (e + cos θ1)
−r1
√μp sin θ1
1
p sin θ1
r1
√μp cos θ1
⎤
⎥⎥⎦
⃗r1
⃗v1

.
(4.33)
Substituting this into equation (4.31) for ⃗r2 and ⃗v2, we have
⃗r2
⃗v2

=
⎡
⎢⎣
r2 cos θ2
r2 sin θ2
−
μ
p sin θ2
μ
p (e + cos θ2)
⎤
⎥⎦
×
⎡
⎢⎢⎣
1
p (e + cos θ1)
−r1
√μp sin θ1
1
p sin θ1
r1
√μp cos θ1
⎤
⎥⎥⎦
⃗r1
⃗v1

.
(4.34)
From equation (4.34), we ﬁnd that
F = r2
p cos θ2(e + cos θ1) + r2
p sin θ2 sin θ1,
= r2
p [e cos θ2 + cos θ2 cos θ1 + sin θ2 sin θ1] .
and
G = −r1r2
√μp cos θ2 sin θ1 + r1r2
√μp sin θ2 cos θ1,
= r1r2
√μp [sin θ2 cos θ1 −cos θ2 sin θ1] .

112
Spacecraft Dynamics and Control: An Introduction
Now, from the polar equation for the orbit (4.32), we have
e cos θ2 = p
r2
−1.
Making use of this as well as the trigonometric identities
cos (θ2 −θ1) = cos θ2 cos θ1 + sin θ2 sin θ1,
sin (θ2 −θ1) = sin θ2 cos θ1 −cos θ2 sin θ1,
we obtain
F = 1 −r2
p [1 −cos (θ2 −θ1)] ,
(4.35)
and
G = r1r2
√μp sin (θ2 −θ1) .
(4.36)
From these expressions, we see that the only item that is not known is the semi-parameter p.
We know r1 = |⃗r1| and r2 = |⃗r2|, and θ2 −θ1 is just the angle between the vectors ⃗r1 and ⃗r2.
Therefore, in order to fully determine the orbit, we only need to obtain p.
From Section 4.2, using the fact that h = √μp the semi-parameter p is directly related to
the sector-triangle area ratio η by
p = η2|⃗r1 × ⃗r2|2
μ(t2 −t1)2 .
(4.37)
Therefore, all we need to do is ﬁnd η given the transfer time. We have already seen how to do
this in Section 4.2.
Summary
We are given positions ⃗r1 and ⃗r2, and the transfer time t2 −t1. We want to ﬁnd the transfer orbit
between ⃗r1 and ⃗r2. It is assumed that θ2 −θ1 < 90◦, and that the transfer orbit is elliptical.
1. Compute the sector to triangle area ratio by solving
η = 1 + m
η2 W
 m
η2 −l

,
where
m =
μ(t2 −t1)2

2√r1r2 cos((θ2 −θ1)/2)
3 ,
l =
r1 + r2
4√r1r2 cos((θ2 −θ1)/2) −1
2,

Preliminary Orbit Determination
113
and
W(w) = 2g −sin(2g)
sin3 g
,
g = 2 sin−1 √w,
using the iterative procedure
ηi+1 = ηi −f (ηi)
ηi −ηi−1
f (ηi) −f (ηi−1),
where
f (x) = 1 −x + m
x2 W
 m
x2 −l

,
with starting values
η1 = ηH + 0.1,
η2 = ηH,
where
ηH = 12
22 + 10
22

1 + 44
9
m
l + 5/6.
2. Compute the semi-parameter from
p = η2|⃗r1 × ⃗r2|2
μ(t2 −t1)2 .
3. Compute the Lagrangian coefﬁcients
F = 1 −r2
p [1 −cos (θ2 −θ1)] ,
and
G = r1r2
√μp sin (θ2 −θ1) .
4. Compute the velocity ⃗v1 using
⃗v1 = ⃗r2 −F⃗r1
G
.
5. If required, compute the orbital elements using Section 3.7.
Note This procedure has been shown to work very efﬁciently in practise for transfer angles
less than 90◦. For larger transfer angles, the iterative scheme for the sector-triangle area ratio

114
Spacecraft Dynamics and Control: An Introduction
η has instabilities. There are other solutions to Lambert’s problem that work better for large
transfer angles. See for example Vallado (2007), Escobal (1976) or Battin (1999).
Notes
This chapter has presented an introduction to preliminary orbit determination. Our presentation
is by no means complete. We have focused on three relatively straightforward methods of
preliminary orbit determination. However, there are several other methods in the literature.
Our presentation of Gibb’s method in Section 4.1 is based on that given in Battin (1999) and
Bate et al. (1971). Our presentations on orbit determination using three line of sight vectors
in Section 4.2 and Lambert’s problem in Section 4.3 are based Montenbruck and Gill (2000).
A derivation of equation (4.27) for the sector to triangle area ratio may be found in Escobal
(1976). For more comprehensive treatments of preliminary orbit determination, readers are
recommended to consult Escobal (1976), Vallado (2007) or Battin (1999). As explained in
the introduction to this chapter, the techniques presented here may be used to initially determine
an orbit given some measurements. Other techniques may then be applied to improve the
estimated orbit once additional measurements are available. See for example Vallado (2007),
Montenbruck and Gill (2000) or Tapley et al. (2004) for details.
References
Bate RR, Mueller DD and White JE 1971 Fundamentals of Astrodynamics. Dover Publications, Mineola, NY.
Battin RH 1999 An Introduction to the Mathematics and Methods of Astrodynamics, Revised Edition. American
Institute of Aeronautics and Astronautics, Reston, VA.
Escobal PR 1976 Methods of Orbit Determination. Krieger Publishing, Malabar, FL.
Montenbruck O and Gill E 2000 Satellite Orbits: Models, Methods, Applications. Springer, Berlin Heidelberg.
Tapley BD, Schutz BE and Born GH 2004 Statistical Orbit Determination. Elsevier, Burlington, MA.
Vallado DA 2007 Fundamentals of Astrodynamics and Applications 3rd edn. Microcosm Press, Hawthorne, CA.

5
Orbital Maneuvers
When a satellite is launched, we typically want a speciﬁc orbit depending on the mission
objectives. This orbit may or may not be achievable directly from launch, given the launch
site or type of launch vehicle. Therefore, orbital maneuvers are often required. Maneuvers are
also required for interplanetary ﬂight, but we will deal with these separately in Chapter 6.
Maneuvers are performed using onboard thrusters, typically (although not always) in a
sequence of short duration bursts. For our purposes, we will assume that these bursts are
impulsive, causing an instantaneous change to the spacecraft velocity vector ⃗v (without affect-
ing the position ⃗r).
The most general type of orbital maneuvers require the solution of Lambert’s problem (see
Section 4.3). However, there are a number of simpler maneuvers that can allow us to achieve
our goal.
5.1
Simple Impulsive Maneuvers
The simplest type of maneuver requires only a single impulse. That is, at a particular point in
the orbit, we instantaneously change the velocity from say ⃗v1 to ⃗v2.
Recall that an orbit is fully speciﬁed by the position ⃗r and the velocity ⃗v at any point in
the orbit. Therefore, as shown in Figure 5.1, a single impulsive maneuver from one orbit to
another is only possible if the two orbits share a common point. The change in velocity is
given by
⃗v = ⃗v2 −⃗v1.
An important parameter of the maneuver is the magnitude of the velocity change,
v = |⃗v|,
which is a measure of the fuel consumption. Minimum fuel maneuvers require minimum v.
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

116
Spacecraft Dynamics and Control: An Introduction
r
v1
v2
orbit 1
orbit 2
transfer point
Figure 5.1
Single impulse maneuver
While the fuel consumption is very important, the time of ﬂight (TOF), that is, the time
required to complete a maneuver is also important. Obviously, for a single impulse transfer,
TOF = 0. However, for maneuvers requiring more than one impulse, the time of ﬂight is not
zero. It may be that a minimum v transfer takes too long for other mission requirements.
Hence, a compromise may be required.
5.2
Coplanar Maneuvers
Let us assume that the initial and ﬁnal orbits lie in the same plane. In this case, we only need
to change the orbital elements a, e and ω, that is, the size, shape and orientation of the orbit
within the plane.
We will restrict ourselves to tangential velocity changes, that is, only changing the velocity
magnitude, but not its direction.
Before continuing, let us recall the expressions for orbital position and velocity in cylindrical
coordinates from Section 3.4 (see Figure 5.2). We have
⃗r = r⃗xo,
⃗v = ˙r⃗xo + r ˙θ⃗yo.
(5.1)
Recall from Section 3.8 that
˙r =

μ
a(1 −e2)e sin θ.
(5.2)
This shows that for circular orbits (i.e. e = 0), ˙r = 0, which means from (5.1) that ⃗r and ⃗v
are perpendicular. Equation (5.2) also shows that for elliptical orbits (i.e. 0 < e < 1), ˙r = 0
only when θ = 0, 180◦, i.e., at periapsis and apoapsis. Therefore, (5.1) shows that ⃗r and ⃗v are
perpendicular only at periapsis and apoapsis.
orbit
r
m1
m2
xo
yo
Figure 5.2
Cylindrical coordinate system

Orbital Maneuvers
117
2a
r1
transfer point
orbit 1
orbit 2
Δv
Figure 5.3
Circular to elliptical transfer
This means that any tangential velocity change at any point on a circular orbit results in
that point becoming either periapsis or apoapsis of the new orbit. For an elliptical orbit, any
tangential velocity change at periapsis results in a change of apoapsis height, and any tangential
velocity change at apoapsis results in a change in height of periapsis. If we wish to circularize
an elliptical orbit using a tangential transfer, we can only do so at periapsis or apoapsis.
A fundamental equation for tangential transfers is the vis-viva equation from Section 3.3,
relating the orbital speed v to the orbital radius r.
v =

μ
2
r −1
a

.
(5.3)
Circular to Elliptical Transfer
Consider a transfer from a circular orbit (orbit 1) to an elliptical orbit (orbit 2), as shown in
Figure 5.3. The orbital speeds of the two orbits at the transfer point are
v1 =

μ
 2
r1
−1
r1

=
 μ
r1
,
v2 =

μ
 2
r1
−1
a

,
where the fact that a = r for a circular orbit has been used. If a > r1, we have v2 > v1, and
the total velocity change is
v = v2 −v1 =

μ
 2
r1
−1
a

−
 μ
r1
.
If a < r1, we have v1 > v2, and the total velocity change is
v = v1 −v2 =
 μ
r1
−

μ
 2
r1
−1
a

.

118
Spacecraft Dynamics and Control: An Introduction
2a
r2
transfer point
orbit 1
orbit 2
Δv
Figure 5.4
Elliptical to circular transfer
Elliptical to Circular Transfer
Now, consider a transfer from an elliptical orbit (orbit 1) to a circular orbit (orbit 2), as shown
in Figure 5.4. As explained before, the transfer point must be either periapsis or apoapsis of
orbit 1. The orbital speeds of the two orbits at the transfer point are
v1 =

μ
 2
r2
−1
a

,
v2 =
 μ
r2
.
If a > r2 (transfer at periapsis of orbit 1), we have v1 > v2, and the total velocity change is
v = v1 −v2 =

μ
 2
r2
−1
a

−
 μ
r2
.
If a < r2 (transfer at apoapsis of orbit 1), we have v2 > v1, and the total velocity change is
v = v2 −v1 =
 μ
r2
−

μ
 2
r2
−1
a

.
5.2.1
Hohmann Transfers
Consider now a transfer between two circular orbits of radiusr1 and r2. These orbits do not have
a point in common, and therefore a single impulse transfer is not possible. Walter Hohmann
proposed a double impulse transfer in 1925 for this purpose. It consists of two tangential
maneuvers: a circular to elliptical transfer followed by an elliptical to circular transfer. That
is, a transfer from orbit 1 to orbit 2 is obtained through an elliptical transfer orbit, as shown in
Figure 5.5. It turns out that a Hohmann transfer is the minimum v double-impulse maneuver

Orbital Maneuvers
119
2at
r2
orbit 1
orbit 2
r1
Δvp
Δva
transfer orbit
Figure 5.5
Hohmann transfer
between coplanar circular orbits. We see that the semimajor axis of the transfer orbit is
given by
at = r1 + r2
2
.
In the case considered in Figure 5.5, r2 > r1. Therefore, the ﬁrst transfer occurs at periapsis of
the transfer orbit, with velocity change denoted vp. The second transfer occurs at apoapsis
of the transfer orbit, with velocity change va.
The orbital speeds at the transfer points are
v1 =
 μ
r1
,
vtp =

μ
 2
r1
−1
at

,
vta =

μ
 2
r2
−1
at

,
v2 =
 μ
r2
.
Since r1 < at < r2, we have vtp > v1 and v2 > vta, and the velocity changes at each transfer
point are
vp = vtp −v1 =

μ
 2
r1
−1
at

−
 μ
r1
,

120
Spacecraft Dynamics and Control: An Introduction
va = v2 −vta =
 μ
r2
−

μ
 2
r2
−1
at

.
The total velocity change for the maneuver is given by
v = vp + va =
 μ
r2
−

μ
 2
r2
−1
at

+

μ
 2
r1
−1
at

−
 μ
r1
.
(5.4)
The time of ﬂight for the maneuver is half the period of the transfer ellipse, given by (see
Section 3.4)
TOF = π

a3
t
μ .
(5.5)
We now obtain an expression for the total velocity change ratio v/v1 in terms of the ratio of
the orbital radii r2/r1. Dividing (5.4) by v1 = √μ/r1, and rearranging leads to
v
v1
=
r1
r2
−1 −
r1
r2

2
[1 + (r2/r1)] +
r2
r1

2
[1 + (r2/r1)].
(5.6)
This equation will be useful when we compare Hohmann transfers with Bi-Elliptic transfers
in Section 5.2.2.
Note that Hohmann transfers can also be performed between co-planar elliptical orbits,
provided they have the same line of apsides.
5.2.2
Bi-Elliptic Transfers
A variant of the Hohmann transfer is the Bi-Elliptical transfer, which involves two Hohmann
transfers, as shown in Figure 5.6. The ﬁrst transfer is to a circular orbit of radius r3, which
is larger than the target orbit. The second is a transfer inward to the target orbit. Thus, it is
a triple impulse maneuver. We will see that this sometimes results in fuel savings compared
with a single Hohmann transfer. We will again consider r2 > r1. For the two transfer orbits,
we have the semi-major axes
at1 = r1 + r3
2
,
at2 = r2 + r3
2
.
The orbital speeds of the initial and target circular orbits are
v1 =
 μ
r1
,
v2 =
 μ
r2
.

Orbital Maneuvers
121
r3
orbit 1
orbit 2
r1
Δv1
Δv2
t1
orbit 3
t2
r2
Δv3
Figure 5.6
Bi-Elliptic transfer
For transfer orbit 1, the speeds at the transfer points are
vt1p =

μ
 2
r1
−1
at1

:
periapsis,
vt1a =

μ
 2
r3
−1
at1

:
apoapsis.
For transfer orbit 2, we have
vt2a =

μ
 2
r3
−1
at2

:
apoapsis,
vt2p =

μ
 2
r2
−1
at2

:
periapsis.
Since at1 > r1, we have vt1p > v1, which leads to
v1 = vt1p −v1 =

μ
 2
r1
−1
at1

−
 μ
r1
.
Since at2 > at1, we have vt2a > vt1a, which leads to
v2 = vt2a −vt1a =

μ
 2
r3
−1
at2

−

μ
 2
r3
−1
at1

.

122
Spacecraft Dynamics and Control: An Introduction
Since at2 > r2, we have vt2p > v2, which leads to
v3 = vt2p −v2 =

μ
 2
r2
−1
at2

−
 μ
r2
.
The total velocity change for the maneuver is
v = v1 + v2 + v3.
The time of ﬂight for the maneuver is half the period of transfer orbit 1 plus half the period of
transfer orbit 2, that is,
TOF = π
⎛
⎝

a3
t1
μ +

a3
t2
μ
⎞
⎠.
(5.7)
Comparing (5.5) with (5.7), it is clear that a bi-elliptic transfer takes much longer than a
Hohmann transfer.
The total velocity change for a bi-elliptic maneuver can now be obtained as
v =

μ
 2
r1
−1
at1

−
 μ
r1
+

μ
 2
r3
−1
at2

−

μ
 2
r3
−1
at1

+

μ
 2
r2
−1
at2

−
 μ
r2
.
(5.8)
As for the Hohmann transfer, we can obtain the ratio v/v1 as a function of the ratio r2/r1 for
a given ratio r3/r1.
v
v1
=
 2 (r3/r1)
1 + (r3/r1) −1 +

2
r1
r3
 

(r2/r1)
(r2/r1) + (r3/r1) −

1
1 + (r3/r1)

+
r1
r2


2 (r3/r1)
(r2/r1) + (r3/r1) −1

(5.9)
Equations (5.6) and (5.9) can now be used to determine which maneuver (Hohmann or
Bi-Elliptic) is more fuel efﬁcient. Plotting the two for a given ratio r3/r1 leads to plots of the
form shown in Figure 5.7. It can be shown that when r2/r1 < 11.94, a Hohmann maneuver
is more efﬁcient, and that when r2/r1 > 15.58, a Bi-Elliptic transfer is more efﬁcient (see
Vallado (2007) for details).

Orbital Maneuvers
123
r2/r1
Δv/v1
Hohmann
Bi-elliptic
Figure 5.7
Hohmann and bi-elliptic transfer efﬁciencies
5.3
Plane Change Maneuvers
The two orbital elements associated with the plane of the orbit are the inclination, i, and the
right ascension of the ascending node, . To change these without affecting the size or shape
of the orbit, we simply rotate the velocity vector ⃗v about the position vector ⃗r, as shown in
Figure 5.8. By doing this, the orbital energy, E and magnitude of the orbital angular momentum
h are unaffected, and hence the size and shape of the orbit are unaffected also.
If the plane change maneuver occurs when ⃗r and ⃗v are perpendicular, that is, anywhere on
a circular orbit, or for an elliptical orbit at periapsis or apoapsis, then as shown in Figure 5.9,
the velocity change is given by
v = 2v sin θ
2.
(5.10)
This shows that the velocity change can be very large. For example, if θ = 60◦, then v = v.
For a typical low earth orbiting spacecraft, this is approximately 7.5 km/s! Therefore, if
possible, the plane change should be performed at the point of minimum orbital velocity.
Now, in general, a plane change will alter both i and , as shown in Figure 5.10. If a pure
inclination change is needed, the plane change must occur at the point where the orbit crosses
the equatorial plane, as shown in Figure 5.11.
r
v
v θ
m1
Figure 5.8
Plane change maneuver

124
Spacecraft Dynamics and Control: An Introduction
v
v
Δv
θ
Figure 5.9
Velocity change for plane change maneuver
plane change
Ω1
Ω2
i1
i2
orbit 1
orbit 2
Figure 5.10
General plane change maneuver
plane change
Ω1 = Ω2
i1
orbit 1
i2
Figure 5.11
Plane change maneuver at equatorial crossing

Orbital Maneuvers
125
m1
r1
r2
line of intersection
between orbital planes
Figure 5.12
Combined maneuver
5.4
Combined Maneuvers
In general, if we wish to change the size, shape and plane of the orbit, combinations of the
previous maneuvers are required. As an example, let us consider a transfer between two non-
coplanar circular orbits, as shown in Figure 5.12. To achieve this, we can use a plane change and
a Hohmann transfer. We can combine the plane change with one of the Hohmann maneuvers,
that is, either at periapsis or apoapsis of the elliptical transfer orbit. Given equation (5.10), it
makes sense to perform the plane change at apoapsis where the orbital velocity is lowest.
We will consider the case where r2 > r1. Therefore, the ﬁrst Hohmann maneuver is at
periapsis of the transfer ellipse. Since the plane change occurs at apoapsis of the transfer
ellipse, the ﬁrst maneuver is in the plane of orbit 1.
Following Section 5.2, the semi-major axis of the transfer orbit is
at = r1 + r2
2
,
with change in orbital speed at periapsis
vp =

μ
 2
r1
−1
at

−
 μ
r1
.
The second maneuver in the Hohmann transfer sequence would be to circularize the transfer
orbit at its apoapsis. However, we also want to change the plane of the orbit. Now, at apoapsis
of the transfer orbit, the orbital speed is
vta =

μ
 2
r2
−1
at

,
and the orbital speed on orbit 2 is
v2 =
 μ
r2
.
Given the desired orbital plane change, θ, the orbital speed change at apoapsis can be obtained
from the cosine rule as (see Figure 5.13)
va =

v2
ta + v2
2 −2vtav2 cos θ.

126
Spacecraft Dynamics and Control: An Introduction
θ
vta
v2
Δv
Figure 5.13
Velocity change
Therefore, the total v for the combined maneuver is
v = vp + va =

μ
 2
r1
−1
at

−
 μ
r1
+

v2
ta + v2
2 −2vtav2 cos θ.
Note that the line of apsides of the transfer orbit must coincide with the line of intersection
between the two orbital planes.
Application
When a satellite is injected into orbit using some launch vehicle, the point of injection is
usually roughly above the launch site. Since the orbital plane must contain the center of the
earth and the insertion point (which is roughly above the launch site), the minimum inclination
obtainable is roughly equal to the angle between the launch site and the equatorial plane (also
known as the launch site latitude, refer to Figure 5.14). Therefore, it is very difﬁcult to launch
a satellite directly into an equatorial orbit (unless the launch site is very close to the equator).
A common application for the above combined maneuver is transfer into an equatorial orbit.
A very useful type of equatorial orbit is the geostationary orbit, whose period equals the
rotational period of the Earth. From the point of view of an observer on Earth, the satellite
remains ﬁxed above a point on the equator, making it very useful for communication purposes.
EARTH
Equator
latitude
launch site
Figure 5.14
Launch site location

Orbital Maneuvers
127
φ
spacecraft 2
spacecraft 1
r
Figure 5.15
Rendezvous problem
5.5
Rendezvous
There are situations when it is desirable to match the orbit of another object. In this case, a
rendezvous maneuver is required. We shall consider a simpliﬁed case, however more general
cases are straightforward to determine.
Consider two spacecraft in the same circular orbit of radius r, separated by a phase angle
φ, as shown in Figure 5.15. We will assume that spacecraft 1 is ahead of spacecraft 2, that
is, φ > 0. Suppose spacecraft 2 wishes to rendezvous with spacecraft 1. Since the orbit is
circular, the angular rate is constant. Therefore, spacecraft 1 is
φT
2π
seconds ahead of spacecraft 2, where T = 2π

r3/μ is the orbital period. This means that in
T −φT
2π
seconds, spacecraft 1 will be at the current location of spacecraft 2. Therefore, if spacecraft 2
transfers into an elliptical orbit of period
Ttrans = T −φT
2π ,
it will rendezvous with spacecraft 1 after one revolution of the transfer orbit, as shown in
Figure 5.16. Spacecraft 2 must then perform a second maneuver to match the orbital velocity
of spacecraft 1. This maneuver is also called a phasing maneuver. The period of the transfer
orbit is given by Ttrans = 2π

a3
t /μ. Therefore, semi-major axis of the transfer orbit can be
computed from
at =

μ
Ttrans
2π
2 1
3
.

128
Spacecraft Dynamics and Control: An Introduction
r
transfer orbit
Δv2
Δv1
m1
Figure 5.16
Phasing maneuver
The ﬁrst velocity change is a tangential reduction in velocity
v1 =
μ
r −

μ
2
r −1
at

.
The second velocity change is a tangential increase in velocity
v2 = v1.
If spacecraft 1 was behind spacecraft 2 (φ < 0), then the opposite would be true, i.e. the ﬁrst
velocity change would be a tangential increase, and the second velocity change would be a
tangential decrease. Regardless of the sign of φ, the total v for the rendezvous maneuver is
v = 2

μ
r −

μ
2
r −1
at
 .
This procedure can easily be generalized to elliptical orbits by using the mean anomaly
difference between the two spacecraft (rather than the true anomaly difference) to obtain the
period of the transfer orbit. The maneuver is then either executed at periapsis or apoapsis.
Notes
This chapter has presented a discussion of various impulsive maneuvers for changing the orbit.
Further treatment of this subject may be found in Vallado (2007).
Reference
Vallado DA 2007 Fundamentals of Astrodynamics and Applications 3rd edn. Microcosm Press, Hawthorne, CA.

6
Interplanetary Trajectories
We will now consider interplanetary travel. Consider a trajectory from Earth to Mars. Near
the Earth, the main inﬂuence on the spacecraft is the Earth’s gravitational ﬁeld. Near Mars,
the main inﬂuence is Mars’ gravitational ﬁeld. For most of the trip, the main inﬂuence on the
spacecraft is the sun. In general, the spacecraft is simultaneously inﬂuenced by the sun, Earth
and Mars (as well as all other celestial bodies). However, for the purposes of initial mission
planning, it is useful to decouple those effects, considering the spacecraft to be inﬂuenced by
only one body at a time. This is called the method of “patched conics”. For our Earth to Mars
example, we have
1. Near Earth: the spacecraft is in a hyperbolic geocentric (Earth-centered) orbit (while the
spacecraft escapes from Earth).
2. Between the Earth and Mars: the spacecraft is in a heliocentric (sun-centered) elliptical
orbit (traveling toward Mars).
3. Near Mars: the spacecraft is in a two-body orbit about Mars.
To be able to effectively perform this approximation, we need a criterion for when to turn
each gravitational ﬁeld on and off. For this purpose, it is useful to deﬁne a sphere of inﬂuence
for each planet, within which the spacecraft is considered to be in a two-body orbit about
that planet, and outside of which the spacecraft is considered to be in a two-body orbit about
the sun.
6.1
Sphere of Inﬂuence
We will derive an expression for the sphere of inﬂuence based upon the equations of motion
of the spacecraft about the sun, and the spacecraft about the planet. We will then deﬁne the
sphere of inﬂuence based upon whether the sun has a larger inﬂuence over the motion about
the planet, or the planet has a larger inﬂuence over the motion about the sun.
Let ⃗Rp and ⃗R denote the position of the planet and spacecraft relative to the sun respectively,
and let ⃗r denote the position of the spacecraft relative to the planet (see Figure 6.1). Also,
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

130
Spacecraft Dynamics and Control: An Introduction
sun
spacecraft
planet
⃗Rp
⃗r
⃗R
θ
Figure 6.1
Sun, planet, spacecraft system
let ms, m p and m denote the mass of the sun, planet and spacecraft respectively. It is clear that
⃗R = ⃗Rp + ⃗r. Referring to Figure 6.1, we ﬁnd that the magnitudes of the vectors are related by
R =

R2
p + r2 −2Rpr cos θ
1/2 = Rp

1 + r2
R2p
−2 r
Rp
cos θ
1/2
.
(6.1)
We expect that within the sphere of inﬂuence of the planet, r ≪Rp, so that based on (6.1),
we can use the approximation
R ≈Rp.
The gravitational force of the sun and planet on the spacecraft are
⃗fg,s = −Gmsm
R3
⃗R,
⃗fg,p = −Gm pm
r3
⃗r,
respectively. The gravitational force of the sun on the planet is
⃗f p
g,s = −Gmsm p
R3p
⃗Rp.
Assuming the sun to be inertially ﬁxed (which is almost true since the mass of the planets are
so much smaller than that of the sun), the equation of motion of the spacecraft relative to the
sun is
m ¨⃗R = ⃗fg,s + ⃗fg,p = −Gmsm
R3
⃗R −Gm pm
r3
⃗r,
which can be rewritten as
¨⃗R = ⃗As + ⃗Pp,
(6.2)
where
⃗As = −Gms
R3 ⃗R

Interplanetary Trajectories
131
is the acceleration of the spacecraft relative to the sun due to the sun’s gravitation and
⃗Pp = −Gm p
r3 ⃗r
is the acceleration of the spacecraft relative to the sun due to the planet’s gravitation. The
magnitudes of ⃗As and ⃗Pp are
As = Gms
R2
≈Gms
R2p
,
Pp = Gm p
r2 .
The ratio of Pp to As is given by
Pp
As
= m p
ms
 Rp
r
2
,
(6.3)
and is a measure of the inﬂuence of the planet on the spacecraft’s orbit about the sun.
We would now like to obtain a similar ratio for the disturbing effect of the sun on the
spacecraft’s orbit about the planet. Now, the equation of motion of the planet about the sun is
m p ¨⃗Rp = −Gmsm p
R3p
⃗Rp,
which leads to
¨⃗Rp = −Gms
R3p
⃗Rp.
(6.4)
Subtracting (6.4) from (6.2) leads to the equation of motion of the spacecraft about the planet,
that is
¨⃗r = ¨⃗R −¨⃗Rp = −Gms
R3 ⃗R −Gm p
r3 ⃗r + Gms
R3p
⃗Rp,
≈−Gms
R3p
(⃗R −⃗Rp) −Gm p
r3 ⃗r,
= −Gms
R3p
⃗r −Gm p
r3 ⃗r,
= ⃗ap + ⃗ps,
where we have identiﬁed
⃗ap = −Gm p
r3 ⃗r,

132
Spacecraft Dynamics and Control: An Introduction
as the acceleration of the spacecraft relative to the planet due to the planet’s gravitation, and
⃗ps = −Gms
R3p
⃗r,
as the acceleration of the spacecraft relative to the planet due to the sun’s gravitation. The
magnitudes of ⃗ap and ⃗ps are
ap = Gm p
r2 ,
ps = Gmsr
R3p
.
Similar to equation (6.3), the ratio of ps to ap is obtained as
ps
ap
= ms
m p
 r
Rp
3
,
(6.5)
and is a measure of the inﬂuence of the sun on the spacecraft’s orbit about the planet.
Now, for us to consider the spacecraft to be primarily under the inﬂuence of the planet, it
seems reasonable that the inﬂuence of the sun on the orbit about the planet be less than the
inﬂuence of the planet on the spacecraft’s orbit about the sun. In terms of the ratios (6.3) and
(6.5), this is
ps
ap
< Pp
As
, or equivalently ms
m p
 r
Rp
3
< m p
ms
 Rp
r
2
.
Based on this, the sphere of inﬂuence of a planet is deﬁned as the boundary of this region,
satisfying
ps
ap
= Pp
As
,
which leads to
rSOI = Rp
m p
ms
2/5
.
(6.6)
To get a sense of the size of the sphere of inﬂuence for a planet, let us compute it for the Earth.
The masses of the Earth and the sun are:
mearth = 5.974 × 1024 kg,
msun = 1.989 × 1030 kg.
The mean orbital radius of the Earth about the sun is
Rearth = 149.6 × 106 km.
Using equation (6.6), the size of the sphere of inﬂuence of the Earth is
rSOI,Earth = 9.25 × 105 km.

Interplanetary Trajectories
133
It is clear that compared to the distance to the sun Rearth, the sphere of inﬂuence is very small,
that is
rSOI,Earth
Rearth
= 0.0062.
However, relative to the size of the Earth itself, the sphere of inﬂuence is very large. Namely,
given that the radius of the Earth is approximately 6378 km, the sphere of inﬂuence is 145
times the radius of the Earth.
Note that the sphere of inﬂuence is not an exact quantity. It is simply a reasonable
estimate of when the planet’s gravitational ﬁeld dominates that of the sun.
6.2
Interplanetary Hohmann Transfers
For the majority of the planets in our solar system, the orbits about the sun have very low
eccentricities, and lie in approximately the same plane. In practise, we need to account for
the eccentricities, and differences in orbital planes, but as a ﬁrst approach, it will be useful to
consider the planets to be in coplanar circular orbits about the sun.
Given that the spheres of inﬂuence of the planets are so small compared to their orbital radii
about the sun, we will treat the starting and ﬁnishing points of an interplanetary transfer as
coinciding with the location of each planet respectively, with the transfers occurring impul-
sively (as in Chapter 5). In Chapter 5, we found that we can transfer from one circular orbit
to another using a Hohmann transfer. We have seen that the Hohmann transfer is quite slow
(half the period of the transfer orbit). We could use other double impulse maneuvers to reduce
travel time, but they would cost a lot more fuel.
Consider two planets, planet 1 and planet 2 respectively. Let the orbits of planet 1 and planet
2 have radii r1 and r2 respectively. We are going to consider Hohmann transfers from planet 1
to 2, as shown in Figure 6.2. As in Section 5.2, the semimajor axis of the transfer orbit is
at = r1 + r2
2
,
φd
π −φd
r1
r2
planet 1 at time of departure
planet 2 at time of departure
planet 2 at time of arrival
Figure 6.2
Interplanetary Hohmann transfer

134
Spacecraft Dynamics and Control: An Introduction
and the time of ﬂight is
T12 = π

a3
t
μs
,
where μs is the gravitational parameter of the sun.
Now, an additional constraint on the transfer is that planet 2 must be there when the
spacecraft arrives at its orbit. Therefore, there is a constraint on the location of planet 2 at the
time of spacecraft departure from planet 1 (see Figure 6.2). Speciﬁcally, planet 2 must have
a certain phase, φd, with respect to planet 1 at the time of departure. This phase angle can
be determined from the time of ﬂight. Referring to Figure 6.2, it is clear that in order for the
spacecraft to intercept planet 2 upon it’s arrival, planet 2 must advance its orbital location by
the angle
π −φd.
Given that the orbit of planet 2 is circular, the orbital angular velocity is constant and is given
by (see Section 3.5.1)
n2 =
	μs
r3
2
.
Therefore, we must have π −φd = n2T12, which can be rearranged for the required phase
angle
φd = π −n2T12.
(6.7)
When planet 2 has a phase angle φd with respect to planet 1, we say that a launch window
exists.
Now, what if we miss a launch window. How long do we need to wait until the next one?
Since both planets are circular with respective orbital angular velocities
n1 =
	μs
r3
1
,
n2 =
	μs
r3
2
,
the true anomalies of the planets with respect to a common datum are given by (see Figure 6.3)
θ1 = θ1,0 + n1t,
θ2 = θ2,0 + n2t,
where time t is measured from the ﬁrst launch window, and θ1,0 and θ2,0 are the true anomalies
at t = 0, such that φd = θ2,0 −θ1,0. The phase angle of planet 2 relative to planet 1 is then
φ = θ2 −θ1 = φd + (n2 −n1)t.
(6.8)

Interplanetary Trajectories
135
r1
θ1
θ2
φ
1
2
common datum
Figure 6.3
Phase angle between planets
If n2 > n1, that is r1 > r2, the next launch opportunity occurs when φ = φd + 2π. Solving
for t gives
t =
2π
n2 −n1
.
If n1 > n2, that is r2 > r1, the next launch opportunity occurs when φ = φd −2π. Solving
for t gives
t =
2π
n1 −n2
.
Based upon this, the time between launch windows is always given by
Tsyn =
2π
|n1 −n2|,
(6.9)
which is known as the synodic period.
Suppose we have successfully transferred to planet 2, but now want to return to planet 1.
We now have to wait until we have the required phase of planet 1 with respect to planet 2.
Because the transfer orbit to get back is the same, the time of ﬂight is the same as it was to get
there, namely T12. Based upon the same arguments as before, the required phase of planet 1
with respect to planet 2 is
−φr = π −n1T12.
(6.10)
Note that the negative sign is due to the fact that we have deﬁned φ as the phase of planet 2
relative to planet 1, which is the negative of the phase of planet 1 relative to planet 2.
Using (6.8), the phase of planet 2 relative to planet 1 upon arrival at planet 2 is
φarr = φd + (n2 −n1)T12.

136
Spacecraft Dynamics and Control: An Introduction
Substituting for φd from (6.7) leads to
φarr = π −n2T12 + (n2 −n1)T12 = π −n1T12.
Comparing this with (6.10), we see that
φr = −φarr.
(6.11)
We can now use equation (6.8) to determine the time we need to wait after arrival for a launch
window to return. We reset t = 0 at the time of arrival at planet 2, and replace φd with φarr.
Denoting the time required to wait by Twait, we have
φr = φarr + (n2 −n1)Twait.
Making use of (6.11), this becomes
−φarr = φarr + (n2 −n1)Twait,
which can be rearranged to give
Twait = −2φarr
n2 −n1
.
However, a problem with the above equation exists, namely the solution obtained for a launch
window may be in the past (Twait is negative). We may therefore need to add or subtract
multiples of 2π to make Twait positive. Speciﬁcally, we have
Twait = −2φarr ± N2π
n2 −n1
,
(6.12)
where N is the integer with smallest magnitude that makes Twait positive.
The total time for a round trip from planet 1 to planet 2 is the time taken to get there plus
the wait time plus the time taken to get back. Mathematically, this is
Ttrip = Twait + 2T12.
(6.13)
The times for trips from Earth to some of the planets are listed in the table below.
Planet
Tsyn (days)
T12 (days)
Twait (days)
Ttrip (days)
Mercury
115.8
105.4
66.9
277.9
Venus
583.9
146.1
467.0
759.2
Mars
779.9
258.8
454.3
972.1
Jupiter
398.8
997.5
214.6
2209.6
Saturn
378.1
2209.1
363.2
4454.5

Interplanetary Trajectories
137
6.3
Patched Conics
As we have described, within the sphere of inﬂuence of a planet, the spacecraft is considered
to be in a two-body orbit about that planet. Outside, it is considered to be in a two-body
orbit about the sun. We have already covered this latter part with the interplanetary Hohmann
transfer in the previous section. In the remaining sections, we will deal with the parts within
the spheres of inﬂuence and the transitions in and out of them. The relationships between the
spacecraft position and velocity at the boundary of a sphere of inﬂuence are called the “patch
conditions.” They are:
⃗R = ⃗Rp + ⃗r,
(6.14)
and
⃗V = ⃗Vp + ⃗v,
(6.15)
where
⃗R = spacecraft position relative to the sun,
⃗Rp = planet position relative to the sun,
⃗r
= spacecraft position relative to the planet,
⃗V = spacecraft velocity relative to the sun,
⃗Vp = planet velocity relative to the sun,
⃗v
= spacecraft velocity relative to the planet.
A typical orbit for departure from a planet, or arrival at a planet, is a hyperbolic orbit. That is,
the eccentricity satisﬁes e > 1. We now review the relevant features of hyperbolic orbits from
Chapter 3. Refer to Figure 6.4. The orbital energy is given by
E = v2
2 −μp
r
= −μp
2a ,
(6.16)
γ
δ
rp
−ae
asymptote
asymptote
α
Figure 6.4
Hyperbola geometry

138
Spacecraft Dynamics and Control: An Introduction
where μp = Gm p is the gravitational parameter of the planet, and a is the semi-parameter of
the orbit, which is negative for a hyperbola (see Section 3.3.1). The angle of the asymptote
satisﬁes
cos γ = 1
e ,
tan γ =

e2 −1,
sin γ =
√
e2 −1
e
.
(6.17)
From the vis-viva equation (v = 
μp (2/r −1/a)), the hyperbolic excess speed (as r →∞)
is
v∞=
	
−μp
a .
(6.18)
From the polar equation of the orbit (3.76), the radius at periapsis is (θ = 0)
rp = a(1 −e).
(6.19)
From the energy equation (6.16) and equation (6.18), we can determine the velocity at
periapsis as
vp =

v2∞+ 2μp
rp
.
(6.20)
Recall that for a hyperbolic orbit, the parameter b is deﬁned as
b = a

e2 −1.
(6.21)
We can now obtain a physical interpretation of b. Consider the perpendicular distance from the
center of the planet to one of the asymptotes, denoted α in Figure 6.4. Referring to Figure 6.4
and making use of (6.17), we have
α = −ae sin γ = −a

e2 −1 = −b.
Therefore, the parameter b is the negative of the perpendicular distance from the center of the
planet to one of the asymptotes.
Since the sphere of inﬂuence is typically very large compared with the radius of periapsis,
we will assume for our purposes that the spacecraft arrives and departs from the sphere of
inﬂuence along an orbit asymptote with velocity v∞. Therefore, the spacecraft velocity vector
relative to the planet in a ﬂyby is turned through an angle of
δ = π −2γ = π −2 cos−1
1
e

.
(6.22)

Interplanetary Trajectories
139
asymptote
⃗Vp,1
planet 1
planet 1 sphere of inﬂuence
⃗v1
departure hyperbola
parking orbit
Figure 6.5
Planetary departure
6.3.1
Departure Hyperbola
Recall that for an interplanetary Hohmann transfer, the spacecraft velocity on the transfer orbit
leaving planet 1 must be tangent to the orbit of planet 1 about the sun. To accomplish this, we
must make the velocity vector ⃗v departing from the sphere of inﬂuence parallel to the velocity
vector of the planet ⃗Vp. This also gives the spacecraft the maximum velocity boost from planet
1. To accomplish this, we align the asymptote of our departure hyperbola with the velocity
vector of planet 1, as shown in Figure 6.5. The spacecraft velocity relative to the sun upon exit
from the sphere of inﬂuence is then given by the patch condition
⃗V1 = ⃗Vp,1 + ⃗v1.
(6.23)
The required magnitude of the spacecraft heliocentric velocity at this location is the velocity
at the start of the Hohmann transfer ellipse, and can be obtained from the vis-viva equation as
V1 =

μs
 2
Rp1
−1
at

.
(6.24)
From equations (6.23) and (6.24), we can determine the required hyperbolic excess speed
v∞,1 = V1 −Vp,1.
(6.25)
Now, the semi-parameter a1 for the departure hyperbola can be computed from (6.18)
a1 = −μp1
v2
∞,1
.
(6.26)

140
Spacecraft Dynamics and Control: An Introduction
Before initiating departure from planet 1, the spacecraft will initially be in some parking orbit
about planet 1, as shown in Figure 6.5. Let us assume that the parking orbit is circular of radius
rpark. The corresponding orbital velocity can be obtained from the vis-viva equation as
vpark =
	 μp1
rpark
.
(6.27)
If we use a tangential velocity change to enter the departure hyperbola, the radius of the parking
orbit will be the radius of periapsis of the departure hyperbola. The associated velocity of the
spacecraft at periapsis of the departure hyperbola is (from the vis-viva equation)
vd =

μp1
 2
rpark
−1
a1

.
(6.28)
Therefore, the required v to inject the spacecraft into the departure hyperbola is
v = vd −vpark =

μp1
 2
rpark
−1
a1

−
	 μp1
rpark
.
(6.29)
We now need to determine the location on the parking orbit for transfer to the departure
hyperbola, such that the asymptote is parallel to the velocity vector of the planet. Since rpark
is the radius of periapsis of the departure hyperbola, we can use equation (6.19) to obtain the
departure hyperbola eccentricity
e1 = 1 −rpark
a1
.
(6.30)
We can now determine the location of transfer from the parking orbit to the departure hyperbola
as the phase φ1 relative planet 1’s velocity vector. From Figure 6.6, we see that the required
asymptote
⃗Vp,1
planet 1
⃗v1
departure hyperbola
φ1
γ
γ
Figure 6.6
Phase for planetary departure

Interplanetary Trajectories
141
sun
spacecraft
planet 2
Rp2
Varr
Rarr
sphere of inﬂuence
Vp2
Figure 6.7
Planetary arrival
phase relative to ⃗Vp,1 is
φ1 = π + γ = π + cos−1
 1
e1

.
(6.31)
Important: Equation (6.31) provides the required phase when v∞,1 computed in (6.25) is
positive, which means that the spacecraft velocity relative to the sun must be larger than the
planet’s velocity, which is the case when traveling to an orbit with larger orbital radius about
the sun. If v∞,1 computed in (6.25) is negative, which means the transfer is to a planet with
smaller orbital radius, then the departure asymptote must point in the opposite direction of
⃗Vp,1. The required phase is then φ1 = γ .
6.3.2
Arrival Hyperbola
Let the position and velocity of the spacecraft with respect to the sun be denoted ⃗Rarr and ⃗Varr
respectively, at the time when the spacecraft enters the sphere of inﬂuence of planet 2. Let the
corresponding position and velocity of planet 2 be ⃗Rp2 and ⃗Vp2 respectively (see Figure 6.7).
From the patch conditions, the position and velocity of the spacecraft relative to planet 2 upon
entry to the sphere of inﬂuence are
⃗rarr = ⃗Rarr −⃗Rp2.
(6.32)
and
⃗varr = ⃗Varr −⃗Vp2.
(6.33)
This information can now be used to determine the arrival hyperbola. The speed at which the
spacecraft enters the sphere of inﬂuence is taken to be the hyperbolic excess speed, that is
v∞,arr = |⃗varr|.
(6.34)
Using equation (6.18), this immediately gives the arrival hyperbola semi-parameter
a2 = −μp2
v2∞,arr
.
(6.35)

142
Spacecraft Dynamics and Control: An Introduction
varr
rarr
planet 2
−b2
arrival asymptote
sphere of inﬂuence
ψ
Figure 6.8
Arrival geometry
Next, as we have seen, the parameter b is the negative of the perpendicular distance from the
center of the planet to each asymptote. Now, the asymptote is aligned with ⃗varr, so that b2 can
be determined from geometry using ⃗rarr and ⃗varr. Consider the diagram shown in Figure 6.8.
The angle ψ is given by
ψ = cos−1
−⃗rarr · ⃗varr
rarrv∞,arr

.
(6.36)
By trigonometry then,
b2 = −rarr sin ψ.
(6.37)
Note that rarr = rSOI,2, the radius of the sphere of inﬂuence of planet 2. Now, from equation
(6.21) we can determine the eccentricity of the arrival hyperbola
e2 =

1 +
b2
a2
2
.
(6.38)
From equation (6.19), we can now determine the closest pass of the spacecraft with respect to
the center of planet 2 (the radius of periapsis of the arrival hyperbola), namely
rp2 = a2
⎡
⎣1 −

1 +
b2
a2
2
⎤
⎦.
(6.39)
Of course, planet 2 has a ﬁnite size. Let us assume that planet 2 is spherical with radius ¯Rp2.
In order to avoid a collision with the planet, we must have
rp2 > ¯Rp2,
(6.40)
as shown in Figure 6.9. Making use of equations (6.39) and (6.40), we have
a2
⎡
⎣1 −

1 +
b2
a2
2
⎤
⎦> ¯Rp2,

Interplanetary Trajectories
143
rp
¯Rp2
planet 2
arrival hyperbola
periapsis
Figure 6.9
Collision avoidance
which leads to
1 −
¯Rp2
a2
<

1 +
b2
a2
2
.
Note that the reverse in the inequality is due to the fact that we have divided by a2, which
is negative for a hyperbola. Finally, after squaring the above expression and rearranging, we
obtain
|b2| > |a2|

1 −
¯Rp2
a2
2
−1
1/2
.
(6.41)
Therefore, in order to avoid a collision, inequality (6.41) must be satisﬁed. Note that equation
(6.41) is useful, since the parameter b2 can be readily adjusted by making small changes to
the spacecraft velocity vector while the spacecraft is still far away from planet 2.
6.4
Planetary Flyby
We have already determined the parameters of the arrival hyperbola, namely a2 and b2. We
also have ⃗varr and v∞,arr. Without any further maneuvers, the spacecraft will exit the sphere
of inﬂuence of planet 2 along the other hyperbola asymptote, with velocity vector ⃗vdep relative
to the planet with magnitude v∞,arr, as shown in Figure 6.10. That is, |⃗varr| = |⃗vdep| = v∞,arr.
From equation (6.22), the angle through which the velocity vector is turned is
δ2 = π −2γ2 = π −2 cos−1
 1
e2

.
(6.42)

144
Spacecraft Dynamics and Control: An Introduction
γ2
δ2
Vp
varr
vdep
planet 2
Figure 6.10
Planetary ﬂyby (trailing edge)
Therefore, ⃗varr ̸= ⃗vdep, and the planet exerts a ⃗v on the spacecraft. The spacecraft velocity
relative to the sun upon exit from the sphere of inﬂuence is
⃗Vdep = ⃗Vp + ⃗vdep.
(6.43)
Treating the size of the sphere of inﬂuence of planet 2, rSOI,2, as negligible compared to the
orbital radius of planet 2, that is |⃗Rarr| ≈|⃗Rdep| ≈|⃗Rp2|, and also treating the time of transit
of the spacecraft through the sphere of inﬂuence as negligible (such that the planet’s velocity
vector is unchanged during this time), the change in spacecraft heliocentric orbital energy is
E = 1
2

V 2
dep −V 2
arr

,
(6.44)
which may be positive or negative. That is, planet 2 either increases or decreases the velocity
of the spacecraft relative to the sun. A positive E occurs as a result of a trailing edge ﬂyby,
that is, the spacecraft passes behind the planet, as shown in Figure 6.10.
This increase is a “gravitational slingshot”, and can be used as an alternative to the Hohmann
transfer for travel to the outer planets. For example, to get to Saturn via a Jupiter ﬂy-by.
A negative E occurs as a result of a leading edge ﬂyby, that is, the spacecraft passes in
front of the planet, as shown in Figure 6.11. This can be used to reduce the spacecraft velocity
relative to the sun.
Vp
varr
vdep
planet 2
Figure 6.11
Leading edge planetary ﬂyby

Interplanetary Trajectories
145
rp2
planet 2
arrival hyperbola
circular capture orbit
Figure 6.12
Planetary capture
As some examples, Voyager II used this method to perform ﬂybys of Jupiter, Saturn, Uranus
and Neptune. Galileo went to Jupiter using the Venus-Earth-Earth-Gravity-Assist (VEEGA)
trajectory.
6.5
Planetary Capture
If we wish to stay at the target planet, we need to perform a maneuver to convert the arrival
hyperbola into a bound (elliptical or circular) orbit about the planet. We have seen that if no
maneuvers are performed, the spacecraft will exit from the sphere of inﬂuence. In general,
the arrival velocity v∞,arr cannot be controlled easily, but the entry point into the sphere of
inﬂuence (and hence b2) can be, by small corrections to the interplanetary transfer orbit.
We have seen that the radius of periapsis of the arrival hyperbola is given by
rp2 = a2
⎡
⎣1 −

1 +
b2
a2
2
⎤
⎦.
(6.45)
Now, one way of capturing the spacecraft about planet 2 is to perform a circularization of the
arrival hyperbola at its periapsis, as shown in Figure 6.12. From the vis-viva equation, the
orbital velocity on the circular capture orbit is
vcap =
	μp2
rp2
.
(6.46)
From equation (6.20), the orbital velocity at periapsis of the arrival hyperbola is
vp2 =

v2∞,arr + 2μp2
rp2
.
(6.47)
Therefore, the v required for capture is
vcap = vp2 −vcap =

v2∞,arr + 2μp2
rp2
−
	μp2
rp2
.
(6.48)

146
Spacecraft Dynamics and Control: An Introduction
Since we have control over b2, we have control over rp2 through equation (6.39). Let us now
determine the radius for optimal capture. For minimum vcap, we set the derivative of (6.48)
with respect to rp2 equal to zero. Namely,
0 = dvcap
drp2
= −2μp2
r2
p2
1
2
 
v2
∞,arr + 2μp2
rp2
−1
2
−√μp2

−1
2
 1
r
3
2
p2
,
=
−2μp2 +
	
μp2rp2

v2∞,arr + 2μp2
rp2

2r2
p2

v2∞,arr + 2μp2
rp2
.
This leads to

μp2rp2

v2∞,arr + 2μp2
rp2

= 2μp2,
and upon squaring and rearranging, we have the radius for optimal capture
rp2,opt = 2μp2
v2∞,arr
.
(6.49)
The associated v is obtained by substituting (6.49) into (6.48)
vcap,opt =

v2∞,arr + 2μp2v2∞,arr
2μp2
−

μp2v2∞,arr
2μp2
=
√
2v∞,arr −v∞,arr
√
2
,
which becomes
vcap,opt = v∞,arr
√
2
.
(6.50)
If the planet has an atmosphere, we can reduce the vcap requirement by aerobraking using
the atmosphere.
Notes
This chapter has presented simple techniques that can be used for initial interplanetary mission
design. Since the patched conic approach is an approximation (gravity ﬁelds are continuous),
initially designed interplanetary trajectories must be corrected to account for the continu-
ous gravity ﬁelds of all celestial bodies. Methods are presented in Battin (1999) for how to

Interplanetary Trajectories
147
determine these differential corrections. Readers interested in an in depth treatment of inter-
planetary trajectory design are encouraged to consult Kemble (2006).
References
Battin RH 1999 An Introduction to the Mathematics and Methods of Astrodynamics, Revised Edition. American
Institute of Aeronautics and Astronautics, Reston, VA.
Kemble S 2006 Interplanetary Mission Analysis and Design. Springer, Chichester, UK.


7
Orbital Perturbations
Up to now, we have considered only Keplerian two-body motion of point masses m1 and m2,
where m1 is taken to be the primary with m1 ≫m2. As we have seen, the differential equation
governing the motion of m2 with respect to m1 is
¨⃗r = −μ
r3 ⃗r,
(7.1)
with initial conditions
⃗r(0) = ⃗r0,
˙⃗r(0) = ⃗v0.
For example, for an Earth orbiting satellite, m1 represents the Earth, and m2 the satellite. For
a planet orbiting the sun, m1 represents the sun, and m2 the planet.
The Keplerian two-body orbit is very much an idealized motion. It works well for short
periods of time, but there are several factors that cause the actual motion to deviate from the
Keplerian orbit, and these factors must be accounted for in practise. For a geocentric orbit,
these factors include:
1. Non-sphericity of the primary (the Earth is not perfectly spherical).
In the Keplerian orbit, masses m1 and m2 are assumed to be point masses. Due to the
small size of m2 (compared with the distance from the center of m1), this is a reasonable
approximation for m2. As we shall see later, if the primary (m1) is spherically symmetric,
then it can also be treated as a point mass. However, this is not the case, and the non-
sphericity of the primary must be taken into account.
2. Presence of other bodies and their gravitational ﬁelds.
For a spacecraft orbiting the Earth, the spacecraft is also inﬂuenced by the sun and moon
(and to a much lesser extent, the other planets).
3. Atmospheric drag.
For near-Earth orbits, there is still some residual atmosphere, creating drag on the spacecraft.
This results in a gradual orbit decay.
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

150
Spacecraft Dynamics and Control: An Introduction
4. Solar radiation pressure.
Light from the sun (photons) creates pressure on the lit surface of the spacecraft, which is
caused by momentum transfer from the photons to the spacecraft surface.
These effects are perturbations to the Keplerian orbit, and this Chapter shows how we may
deal with them.
Let ⃗fp be the perturbative acceleration due to the perturbing effects. Then, the true equation
of motion is (compared to (7.1))
¨⃗r = −μ
r3 ⃗r + ⃗fp,
(7.2)
with initial conditions
⃗r(0) = ⃗r0,
˙⃗r(0) = ⃗v0.
There are two approaches for dealing with the perturbations. These are classed as special
perturbations and general perturbations.
Special perturbations determine the effects numerically, by performing some kind of numer-
ical integration of equation (7.2). They are called “special”, since the solution is only valid
for one set of initial conditions. The procedure must be repeated once a different set of initial
conditions is given.
General perturbations determine the effects analytically. They deal with variations in the
orbital elements (which are constant for a Keplerian orbit) due to the perturbative acceleration
⃗fp. Speciﬁcally, expressions for
da
dt ,
de
dt ,
di
dt ,
d
dt ,
dω
dt ,
are obtained. These solutions are called general, since they are valid for any set of initial
conditions. They provide a great deal of physical insight, and are useful for mission planning.
However, approximations are often made in their derivations, so they are not as accurate as
special perturbation techniques can potentially be.
7.1
Special Perturbations
As we have mentioned, special perturbation techniques involve numerical integration of the
equations of motion. As discussed in Appendix B, this requires writing the equations of motion
in the ﬁrst order form
˙x = F(x, t),
x(t0) = x0.
Having written the equations of motion in this form, numerical integration techniques (such
as that presented in Appendix B) may be applied to determine x(t) for t ≥t0 numerically.

Orbital Perturbations
151
7.1.1
Cowell’s Method
This method was developed by P.H. Cowell in the early 20th century. It is essentially a
brute-force approach, where the equations of motion (7.2) are numerically integrated directly.
Speciﬁcally, if we represent all quantities in (7.2) in an inertial frame of reference F I, such
that
⃗r = ⃗F T
I r,
⃗v = ˙⃗r = ⃗F T
I v,
⃗fp = ⃗F T
I fp,
⃗r0 = ⃗F T
I r0,
⃗v0 = ⃗F T
I v0,
we can write the equations of motion (7.2) in the ﬁrst order form appropriate for numerical
integration, namely
˙r
˙v

=
⎡
⎣
v
−
μ
(rT r)
3
2 r + fp
⎤
⎦,
(7.3)
with initial conditions
r(0)
v(0)

=
r0
v0

.
Cowell’s method then numerically integrates equations (7.3) directly. The advantage of this
method is that any perturbations fp can be included without modiﬁcation to this method.
However, to achieve the required accuracy, small time-steps are typically required, making
it computationally expensive. Also, the round-off errors due to numerical integration can
accumulate quite rapidly, making long term solutions inaccurate. The required small time-
step compounds this effect. This is less of an issue today than it was in the past, due to the
computational power and sophisticated techniques available.
7.1.2
Encke’s Method
Encke’s method is quite a bit more sophisticated than Cowell’s method, even though it was
developed much earlier, in 1857. The reason is the lack of computational power available at
the time.
Encke’s method works by numerically integrating the deviation of the true (perturbed) orbit
satisfying
¨⃗r = −μ
r3 ⃗r + ⃗fp,
⃗r(0) = ⃗r0,
˙⃗r(0) = ⃗v0,
(7.4)
from a reference Keplerian orbit satisfying
¨⃗ρ = −μ
ρ3 ⃗ρ,
⃗ρ(0) = ⃗r0,
˙⃗ρ(0) = ⃗v0.
(7.5)

152
Spacecraft Dynamics and Control: An Introduction
The reference orbit ⃗ρ(t) is called the osculating orbit, and can be determined analytically using
the two-body solution we found in Chapter 3. Let us deﬁne the deviation from the osculating
orbit as
δ⃗r
= ⃗r −⃗ρ.
Taking the difference between (7.4) and (7.5), we have
δ¨⃗r = ¨⃗r −¨⃗ρ = −μ
r3 ⃗r + μ
ρ3 ⃗ρ + ⃗fp,
= −μ
 ⃗r
r3 −(⃗r −δ⃗r)
ρ3

+ ⃗fp,
= −μ
ρ3

δ⃗r −

1 −ρ3
r3
	
⃗r

+ ⃗fp.
Taking the difference in initial conditions of (7.4) and (7.5), we have
δ⃗r(0) = ⃗0,
δ˙⃗r(0) = ⃗0.
Encke’s method then numerically integrates
δ¨⃗r = −μ
ρ3

δ⃗r −

1 −ρ3
r3
	
⃗r

+ ⃗fp,
(7.6)
with initial conditions
δ⃗r(0) = ⃗0,
δ˙⃗r(0) = ⃗0.
Since ⃗ρ is a known function of time, obtained analytically from the Keplerian orbit, the true
position vector ⃗r can be obtained as
⃗r = ⃗ρ + δ⃗r.
(7.7)
However, the formulation is not yet complete. Equation (7.6) has the term 1 −ρ3
r3 , which is
the difference between two almost equal quantities for small δ⃗r, which can cause numerical
inaccuracies. In order to deal with this problem, a small variable q is deﬁned by
2q = 1 −r2
ρ2 ,
(7.8)
leading to
1 −ρ3
r3 = 1 −(1 −2q)−3
2 .

Orbital Perturbations
153
Expanding this in a Taylor series, we obtain
1 −ρ3
r3 = 3q −3 × 5
2!
q2 + · · ·
(7.9)
which converges very rapidly for small q, and avoids the loss of precision associated with
direct computation of 1 −ρ3
r3 . Now, all we need is an expression for q. From its deﬁnition
(7.8), we can ﬁnd that
q = 1
2
ρ2 −r2
ρ2
	
= 1
2
 ⃗ρ · ⃗ρ −⃗r · ⃗r
ρ2
	
,
= 1
2
 ⃗ρ · ⃗ρ −(⃗ρ + δ⃗r) · (⃗ρ + δ⃗r)
ρ2
	
,
= −
δ⃗r ·

⃗ρ + δ⃗r
2

ρ2
.
For very small δ⃗r compared to ⃗ρ, we can use
q ≈−⃗ρ · δ⃗r
ρ2 .
Now, since the quantity δ⃗r changes much more slowly than ⃗r, the numerical integration scheme
can use much larger time-steps for the same accuracy, leading to reduced computational
demand. It has been found to be up to ten times faster than Cowell’s method.
Finally, since δ⃗r deviates from ⃗ρ, there comes a time when δ⃗r is no longer small. At this
time, Encke’s method requires a rectiﬁcation. That is, a new osculating orbit is deﬁned using
the initial conditions of the true orbit at the time of rectiﬁcation. This process is shown in
Figure 7.1.
true orbit
osculating orbit
new osculating orbit
rectiﬁcation
possible rectiﬁcation condition
|δr|
ρ
> 0.01
Figure 7.1
Encke’s method and reciﬁcation

154
Spacecraft Dynamics and Control: An Introduction
7.2
General Perturbations
As we have brieﬂy described earlier, general perturbation methods are concerned with obtain-
ing analytical expressions for the changes in the orbital elements with time, speciﬁcally
da
dt ,
de
dt ,
di
dt ,
d
dt ,
dω
dt .
The expressions we will present are due to Gauss.
The starting point is the perturbed two-body equations of motion
¨⃗r = −μ
r3 ⃗r + ⃗fp.
(7.10)
We will make use of the cylindrical coordinate frame Fo (see the start of Section 3.4), which
has basis vectors ⃗xo, ⃗yo and ⃗zo.
Recall that in this coordinate frame, the position and velocity are given by
⃗r = r⃗xo,
⃗v = ˙r⃗xo + r ˙θ⃗yo,
(7.11)
and that the angular momentum is given by
⃗h = h⃗zo = r2 ˙θ⃗zo.
(7.12)
Let us express the perturbing force in Fo coordinates as
⃗fp = fr⃗xo + fθ⃗yo + fz⃗zo.
(7.13)
We will now ﬁnd an expression for da
dt . Recall that the orbital energy is deﬁned by
E = ⃗v · ⃗v
2
−μ
r ,
(7.14)
and is related to the orbit semi-major axis by (see Section 3.3)
E = −μ
2a .
(7.15)
Differentiating this expression with respect to time gives
dE
dt = da
dt
μ
2a2 ,
which leads to
da
dt = 2a2
μ
dE
dt .
(7.16)

Orbital Perturbations
155
Therefore, we need to ﬁnd dE
dt . Differentiating (7.14), we ﬁnd
dE
dt = ⃗v · ˙⃗v + ˙r μ
r2 .
Recalling that ˙r = ⃗r·⃗v
r , and substituting from the equation of motion (7.10), gives
dE
dt = ⃗v ·

−μ
r3 ⃗r

+ ⃗v · ⃗fp + μ⃗r · ⃗v
r3
= ⃗v · ⃗fp.
Using the expressions in cylindrical coordinates (7.11) and (7.13), we obtain
dE
dt =
˙r⃗xo + r ˙θ⃗yo

·

fr⃗xo + fθ⃗yo + fz⃗zo

,
= ˙r fr + r ˙θ fθ.
(7.17)
Now, we need expressions for ˙r and r ˙θ. These are given by their instantaneous Keplerian
two-body quantities, which are (see Section 3.8)
˙r =

μ
a(1 −e2)e sin θ.
(7.18)
and
r ˙θ =

μ
a(1 −e2)(1 + e cos θ).
(7.19)
Therefore, substituting these into (7.17), and then making use of (7.16),we have
dE
dt =

μ
a(1 −e2) [e sin θ fr + (1 + e cos θ) fθ] ,
which leads to the desired expression for da
dt
da
dt =
2a2

μa(1 −e2)
[e sin θ fr + (1 + e cos θ) fθ] .
(7.20)
Following a similar procedure, we can obtain variational equations for all of the orbital
elements, which are:
de
dt =

a(1 −e2)
μ

sin θ fr + 2 cos θ + e(1 + cos2 θ)
(1 + e cos θ)
fθ

,
di
dt =

a(1 −e2)
μ
cos(ω + θ)
1 + e cos θ fz,

156
Spacecraft Dynamics and Control: An Introduction
d
dt =

a(1 −e2)
μ
sin(ω + θ)
sin i(1 + e cos θ) fz,
dω
dt =

a(1 −e2)
μ

−cos θ
e
fr + (2 + e cos θ) sin θ
e(1 + e cos θ)
fθ −
sin(ω + θ)
tan i(1 + e cos θ) fz

.
For reference, the derivations of these are contained in Section 7.7.
7.3
Gravitational Perturbations due to a Non-Spherical Primary Body
Now that the special and general perturbation methods have been formulated, we need expres-
sions for the perturbative accelerations ⃗fp. As has been described, there are several sources of
perturbative accelerations. We will focus only on the effects due to a non-spherical primary.
These effects are very important for Earth-orbiting satellites, and as we will see they lead to
some favorable effects which can be exploited during orbit design.
As we have seen in Section 3.1, the gravitational force due to a point mass m1 acting on a
point mass m2 is
⃗F = −Gm1m2
r3
⃗r,
where ⃗r is the position of m2 relative to m1. The resulting force per unit mass is
⃗f = −Gm1
r3 ⃗r = −μ
r3 ⃗r.
We brieﬂy mentioned that the force per unit mass could be obtained from a potential function
φ = Gm1
r
,
such that
⃗f = ⃗∇φ,
where ⃗∇is the gradient operator, which is given in Cartesian coordinates by
⃗∇(·) = ∂
∂x (·)⃗x + ∂
∂y (·)⃗y + ∂
∂z (·)⃗z,
where (x, y, z) are the coordinates of a vector in some reference frame F with unit basis
vectors ⃗x, ⃗y and ⃗z.
The force per unit mass acting on m2 due to a series of point masses is given by
⃗f = −

i
Gmi
r3
i
⃗ri,

Orbital Perturbations
157
which can likewise be obtained from the potential function
φ =

i
Gmi
ri
.
(7.21)
It is natural to extend this to the gravitational potential of a continuous body by setting
mi →dm = ρdV,

i
→

V
where dm is an inﬁnitessimal mass element (where ρ is the mass density and dV is an
inﬁnitessimal volume element), and the integral is taken over the entire body.
Let us now derive the gravitational potential for an arbitrary body of total mass m1 (refer to
Figure 7.2). Let F be some reference frame, with unit basis vectors ⃗x, ⃗y and ⃗z. Let dm(⃗r′) be
a mass element in the body located at position
⃗r′ = x′⃗x + y′⃗y + z′⃗z.
(7.22)
We will use spherical coordinates (r′, λ′, δ′) such that
x′ = r′ cos δ′ cos λ′,
y′ = r′ cos δ′ sin λ′,
z′ = r′ sin δ′.
We will assume that our frame F has origin at the body center of mass.
Now, let us ﬁnd the gravitational potential at a point ⃗r outside the body, with coordinates
⃗r = x⃗x + y⃗y + z⃗z,
(7.23)
dm
r −r
r
r
ψ
λ
δ
y
x
z
Body of mass m1
Figure 7.2
Location of mass element and test point ⃗r

158
Spacecraft Dynamics and Control: An Introduction
with associated spherical coordinates
x = r cos δ cos λ,
y = r cos δ sin λ,
z = r sin δ.
The potential at ⃗r due to the mass element dm(⃗r′) is
dφ(⃗r) = Gρ(⃗r′)dV (⃗r′)
|⃗r −⃗r′|
,
which leads to the total potential at ⃗r
φ(⃗r) =

V
dφ(⃗r) =

V
Gρ(⃗r′)dV (⃗r′)
|⃗r −⃗r′|
,
(7.24)
where the integral is taken over the entire volume of the body V . Now,
|⃗r −⃗r′| =
⃗r −⃗r′
·
⃗r −⃗r′
,
=

⃗r · ⃗r + ⃗r′ · ⃗r′ −2⃗r · ⃗r′,
=

r2 + r′2 −2rr′ cos ψ,
= r

1 −2r′
r cos ψ +
r′
r
	2
.
where ψ is the angle between ⃗r and ⃗r′. Therefore, the gravitational potential in (7.24) becomes
φ(⃗r) =

V
dφ(⃗r) = G
r

V
ρ(⃗r′)dV (⃗r′)

1 −2 r′
r cos ψ +
 r′
r
2 ,
(7.25)
Assuming that r′ < r, the reciprocal of the square root expression can be expanded in a power
series in r′
r using the Legendre polynomials in the variable cos ψ:
1

1 −2 r′
r cos ψ +
 r′
r
2 = P0(cos ψ) +
r′
r
	
P1(cos ψ) +
r′
r
	2
P2(cos ψ) + · · ·
=
∞

n=0
r′
r
	n
Pn(cos ψ),
where Pn(x) are the Legendre polynomials, with the ﬁrst three given by
P0(x) = 1,
P1(x) = x,
P2(x) = 3
2x2 −1
2,
(7.26)

Orbital Perturbations
159
and in general,
(n + 1)Pn+1(x) = (2n + 1)x Pn(x) −nPn−1(x).
Therefore, the potential at ⃗r in (7.25) becomes
φ(⃗r) = G
r
∞

n=0

V
ρ(⃗r′)
r′
r
	n
Pn(cos ψ)dV.
(7.27)
Let us now expand the potential (7.27) in terms of the ﬁrst two terms (using (7.26))
φ(⃗r) = G
r

V
ρ(⃗r′)dV + G
r2

V
ρ(⃗r′)r′ cos ψdV + G
r
∞

n=2

V
ρ(⃗r′)
r′
r
	n
Pn(cos ψ)dV.
(7.28)
We immediately recognize the ﬁrst integral as the total mass of the body, m1,

V
ρ(⃗r′)dV = m1.
For the second integral, we can use the fact that
cos ψ = ⃗r · ⃗r′
rr′ ,
to rewrite the integral as

V
ρ(⃗r′)r′ cos ψdV = 1
r

V
ρ(⃗r′)⃗r · ⃗r′dV = 1
r

V
ρ(⃗r′)⃗r′dV · ⃗r.
But, as we saw in Section 2.3, the integral
1
m1

V
ρ(⃗r′)⃗r′dV,
deﬁnes the center of mass of the body. Since we have chosen the origin of F to coincide with
the center of mass, this integral is zero

V
ρ(⃗r′)⃗r′dV = ⃗0,
which leads to

V
ρ(⃗r′)r′ cos ψdV = 1
r
⃗0 · ⃗r = 0.

160
Spacecraft Dynamics and Control: An Introduction
Therefore, the potential due to the body (7.28) can be expressed as
φ(⃗r) = Gm1
r
+ G
r
∞

n=2

V
ρ(⃗r′)
r′
r
	n
Pn(cos ψ)dV,
(7.29)
and we see that since the ﬁrst term Gm1
r
is just the two-body potential for a point mass. The
potential resulting in the perturbative force per unit mass is
φp(⃗r) = G
r
∞

n=2

V
ρ(⃗r′)
r′
r
	n
Pn(cos ψ)dV.
(7.30)
Now, in order to evaluate the integrals in (7.30), it would be useful to write it in terms of the
spherical coordinates rather than cos ψ. As we have mentioned,
⃗r · ⃗r′ = rr′ cos ψ.
Making use of the spherical coordinates for ⃗r and ⃗r′, this becomes
rr′ cos ψ = rr′ 
cos δ cos δ′ cos λ cos λ′ + cos δ cos δ′ sin λ sin λ′ + sin δ sin δ′
,
= rr′ 
cos δ cos δ′ cos(λ −λ′) + sin δ sin δ′
,
which leads to
cos ψ = cos δ cos δ′ cos(λ −λ′) + sin δ sin δ′.
Now, there is an addition theorem for spherical harmonics that states
Pn(cos ψ) = Pn(sin δ)Pn(sin δ′) + 2
n

m=1
(n −m)!
(n + m)!

An,m A′
n,m + Bn,m B′
n,m

,
(7.31)
where
An,m = Pn,m(sin δ) cos(mλ),
A′
n,m = Pn,m(sin δ′) cos(mλ′),
Bn,m = Pn,m(sin δ) sin(mλ),
B′
n,m = Pn,m(sin δ′) sin(mλ′),
and the associated Legendre functions Pn,m(x) are
Pn,m(x) = (1 −x2)
m
2 dm
dxm Pn(x).

Orbital Perturbations
161
Substituting (7.31) into (7.30) leads to
φp(⃗r) = G
r
∞

n=2

V
ρ(⃗r′)
r′
r
	n
Pn(sin δ)Pn(sin δ′)dV,
+ G
r
∞

n=2
n

m=1
2(n −m)!
(n + m)!

V
ρ(⃗r′)
r′
r
	n 
Pn,m(sin δ′) cos(mλ′)
× Pn,m(sin δ) cos(mλ) + Pn,m(sin δ′) sin(mλ′)Pn,m(sin δ) sin(mλ)

dV.
(7.32)
Based on this, let us deﬁne the factors
Jn = −
1
Rne m1

V
ρ(⃗r′)(r′)n Pn(sin δ′)dV,
(7.33)
Cn,m =
1
Rne m1
2(n −m)!
(n + m)!

V
ρ(⃗r′)(r′)n Pn,m(sin δ′) cos(mλ′)dV,
(7.34)
and
Sn,m =
1
Rne m1
2(n −m)!
(n + m)!

V
ρ(⃗r′)(r′)n Pn,m(sin δ′) sin(mλ′)dV,
(7.35)
where Re is some normalizing radius of the body m1. For the Earth, Re is taken to be the
equatorial radius. Then, the perturbing gravitational potential of the body is given by
φp(⃗r) = Gm1
r

−
∞

n=2
Jn
 Re
r
	n
Pn(sin δ)
+
∞

n=2
n

m=1
 Re
r
	n
Pn,m(sin δ)

Cn,m cos(mλ) + Sn,m sin(mλ)


.
(7.36)
In practice, the coefﬁcients Jn, Cn,m and Sn,m are determined experimentally from satellite
observations, and can be obtained from tables.
Let us now note a few interesting points. First, if the body is rotationally symmetric
about ⃗z, then the density function is independent of the longitude λ′, that is ρ(r′, λ′, δ′) =
ρ(r′, δ′). Using spherical coordinates, the volume element is dV = (r′)2 cos δ′dλ′dr′dδ′, and
the integrals in Cn,m and Sn,m (7.34) and (7.35) become

V
ρ(⃗r′)(r′)n Pn,m(sin δ′) cos(mλ′)dV
=

π
2
−π
2
 R(δ′)
0
 2π
0
ρ(r′, δ′)(r′)n+2Pn,m(sin δ′) cos δ′ cos(mλ′)dλ′dr′dδ′ = 0,

162
Spacecraft Dynamics and Control: An Introduction
and

V
ρ(⃗r′)(r′)n Pn,m(sin δ′) sin(mλ′)dV
=

π
2
−π
2
 R(δ′)
0
 2π
0
ρ(r′, δ′)(r′)n+2Pn,m(sin δ′) cos δ′ sin(mλ′)dλ′dr′dδ′ = 0,
since
 2π
0
cos(mλ′)dλ′ =
 2π
0
sin(mλ′)dλ′ = 0 for m ≥1.
Therefore, for rotationally symmetric bodies about ⃗z, we have Cn,m = Sn,m = 0, and
φp(⃗r) = −Gm1
r
∞

n=2
Jn
 Re
r
	n
Pn(sin δ).
A property of the Legendre polynomials is that they satisfy an orthogonality property, that is
 1
−1
Pn(x)Pm(x)dx = 0,
n ̸= m.
Since P0(x) = 1, this gives
 1
−1
Pn(x)dx = 0,
n ≥1.
If we now make the change of variables x = sin δ′, the integral above becomes

π
2
−π
2
Pn(sin δ′) cos δ′dδ′ =
 1
−1
Pn(x)dx = 0.
This now shows that if the body is spherically symmetric, and therefore ρ(r′, λ′, δ′) = ρ(r′)
is independent of both λ′ and δ′, then the integrals in the Jn terms (7.33) become

V
ρ(⃗r′)(r′)n Pn(sin δ′)dV =

π
2
−π
2
 R
0
 2π
0
ρ(r′)(r′)n+2Pn(sin δ′) cos δ′dλ′dr′dδ′ = 0.
Therefore, for a spherically symmetric body, the perturbing potential is φp = 0, and the
resulting force per unit mass on m2 is the same as for a point mass m1 located at the
center of mass of the body. Since planets are nearly spherically symmetric, this justiﬁes
our initial treatment of orbits using point masses.

Orbital Perturbations
163
x
y
z
Figure 7.3
Earth ﬂattening at the poles
For the Earth, the most dominant perturbing effect is the J2 term, which is a result of the
Earth’s oblate shape (it is ﬂattened at the poles, as shown in Figure 7.3). For the Earth,
J2 = 1.083 × 10−3.
The perturbing potential including J2 effects only is
φp = −μ
r3 J2R2
e
3
2 sin2 δ −1
2
	
.
(7.37)
7.3.1
The Perturbative Force Per Unit Mass Due to J2
Now that we have the potential φp, we can obtain the perturbative force per unit mass by
taking its gradient. Let us do this in ECI coordinates. In ECI coordinates, the position vector
of a spacecraft is given by
⃗r = x⃗xG + y⃗yG + z⃗zG,
(7.38)
with magnitude r =

x2 + y2 + z2.
Since z = r sin δ, we have sin δ = z
r . Therefore, the perturbing potential due to J2 in equation
(7.37) becomes
φp = −μ
r3 J2R2
e
3
2

z
r
2
−1
2
	
.
(7.39)
Let us now take the gradient of this term by term. We start with
∂
∂x
 1
r3
	
= ∂
∂x

1
(x2 + y2 + z2)
3
2

= −3
2
2x
(x2 + y2 + z2)
5
2 = −3x
r5 .
Likewise,
∂
∂y
 1
r3
	
= −3y
r5 ,
∂
∂z
 1
r3
	
= −3z
r5 .

164
Spacecraft Dynamics and Control: An Introduction
Next,
∂
∂x
z2
r5
	
= −5xz2
r7 ,
∂
∂y
z2
r5
	
= −5yz2
r7 .
and
∂
∂z
z2
r5
	
= 2z
r5 −5z3
r7 .
Therefore,
⃗fp = ⃗∇φp = −μJ2R2
e

−15xz2
2r7
+ 3x
2r5
	
⃗xG +

−15yz2
2r7
+ 3y
2r5
	
⃗yG
+

−15z3
2r7 + 3z
r5 + 3z
2r5
	
⃗zG

,
= 3μJ2R2
e
2r5

5z2
r2 −1
	 
x⃗xG + y⃗yG + z⃗zG

−2z⃗zG

.
Recognizing that ⃗r = x⃗xG + y⃗yG + z⃗zG, and that z = ⃗r · ⃗zG, we can write the perturbative
force per unit mass purely in terms of physical vectors
⃗fp = 3μJ2R2
e
2r5

5(⃗r · ⃗zG)2
r2
−1
	
⃗r −2(⃗r · ⃗zG)⃗zG

.
(7.40)
7.4
Effect of J2 on the Orbital Elements
Now that we have an expression for the perturbative force per unit mass due to J2, we can
use the Gauss variational equations to determine its effect. To do this, we need to express the
perturbative force per unit mass in cylindrical coordinates. Now, in cylindrical coordinates,
the position vector is given by
⃗r = r⃗xo.
As we can see from equation (7.40), we need an expression for ⃗zG. This has been obtained in
Section 7.7 as (see equation (7.59))
⃗zG = sin i sin(ω + θ)⃗xo + sin i cos(ω + θ)⃗yo + cos i⃗zo.
We therefore have
⃗zG · ⃗r = r sin i sin(ω + θ),

Orbital Perturbations
165
and we can obtain the perturbative force per unit mass in cylindrical coordinates directly from
(7.40) as
⃗fp = 3μJ2R2
e
2r5

5(r sin i sin(ω + θ))2
r2
−1
	
r⃗xo
−2r sin i sin(ω + θ)

sin i sin(ω + θ)⃗xo + sin i cos(ω + θ)⃗yo + cos i⃗zo

,
= 3μJ2R2
e
2r4

3 sin2 i sin2(ω + θ) −1
 ⃗xo −sin2 i sin(2(ω + θ))⃗yo
−sin 2i sin(ω + θ)⃗zo

,
(7.41)
from which we can identify
fr = 3μJ2R2
e
2r4

3 sin2 i sin2(ω + θ) −1

,
(7.42)
fθ = −3μJ2R2
e
2r4
sin2 i sin(2(ω + θ)),
(7.43)
and
fz = −3μJ2R2
e
2r4
sin 2i sin(ω + θ).
(7.44)
Typically, a perturbed orbital element will have secular and periodic variations, as shown
in Figure 7.4. The secular variation consists of long term changes in the element, while the
periodic variation leads to no net change in the element. Let us now use the Gauss variational
equations to determine the secular variation due to J2. We shall only examine the secular
variation in . We have seen that the Gauss variational equation for  is
d
dt =

a(1 −e2)
μ
sin(ω + θ)
sin i(1 + e cos θ) fz.
element
t
T
one orbital period
Δelement
Figure 7.4
Time history of an element

166
Spacecraft Dynamics and Control: An Introduction
It will be more useful to ﬁnd the variation in terms of the true anomaly θ. To this end, the
chain rule gives us
d
dt = d
dθ
˙θ,
which leads to
d
dθ = 1
˙θ
d
dt .
(7.45)
From Section 3.8, we have for a two-body orbit
˙θ =
 μ
a3
(1 + e cos θ)2
(1 −e2)
3
2
,
which is sufﬁciently accurate assuming the effects of ⃗fp are small. This leads to
d
dθ = a2(1 −e2)
μ
sin(ω + θ)
sin i(1 + e cos θ)3 fz.
(7.46)
Making use of the polar equation for the orbit (equation (3.76) in Section 3.8), and the identity
2 sin i cos i = sin 2i, in equation (7.44), fz becomes
fz = −3μJ2R2
e
a4(1 −e2)4 sin i cos i sin(ω + θ)(1 + e cos θ)4.
(7.47)
Substituting this into (7.46) leads to
d
dθ = −
3J2R2
e
a2(1 −e2)2 cos i sin2(ω + θ)(1 + e cos θ).
(7.48)
To determine the secular change in , we can ﬁnd the average over one orbit,
 =
 
0
d =
 2π
0
d
dθ dθ,
= −
3J2R2
e
a2(1 −e2)2
 2π
0
cos i sin2(ω + θ)(1 + e cos θ)dθ.
Now, we expect changes over an orbit in each of the elements to be small, such that they can
be considered constant in the integrand (we vary θ only). Therefore, we have
 =
 
0
d =
 2π
0
d
dθ dθ,
= −
3J2R2
e
a2(1 −e2)2 cos i
 2π
0
sin2(ω + θ)(1 + e cos θ)dθ.

Orbital Perturbations
167
Now,
 2π
0
sin2(ω + θ)(1 + e cos θ)dθ =
 2π
0
sin2(ω + θ)dθ + e
 2π
0
sin2(ω + θ) cos θdθ.
The ﬁrst integral is simply
 2π
0
sin2(ω + θ)dθ =
 2π
0
1
2 −1
2 cos(2(ω + θ))dθ = π.
To evaluate the second integral, we must make use of some trigonometric identities.
Speciﬁcally,
sin2(ω + θ) cos θ = cos θ
1 −cos(2(ω + θ))
2
	
,
= cos θ
2
−cos θ
2
[cos 2ω cos 2θ −sin 2ω sin 2θ] ,
= cos θ
2
−cos 2ω cos θ(1 −2 sin2 θ)
2
+ cos θ sin 2ω 2 sin θ cos θ
2
,
= cos θ
2
(1 −cos 2ω) + cos 2ω cos θ sin2 θ + sin 2ω sin θ cos2 θ.
Now,
 2π
0
cos θdθ = 0,
 2π
0
cos θ sin2 θdθ = sin3 θ
3

2π
0
= 0,
 2π
0
sin θ cos2 θdθ = −cos3 θ
3

2π
0
= 0.
Therefore,
 2π
0
sin2(ω + θ) cos θdθ = 0,
and
 2π
0
sin2(ω + θ)(1 + e cos θ)dθ = π,
from which we obtain the change in  as

168
Spacecraft Dynamics and Control: An Introduction
 =
 
0
d =
 2π
0
d
dθ dθ,
= −3π J2R2
e
a2(1 −e2)2 cos i.
To obtain the secular (average) rate of change of  (which we will denote ⟨˙⟩), we divide by
the orbital period T , which is given by
T = 2π

a3
μ ,
to obtain
⟨˙⟩= 
T = −
3J2R2
e
2(1 −e2)2
 μ
a7 cos i.
(7.49)
This secular change in  is called nodal regression.
If we repeated this procedure for the other orbital elements, we would ﬁnd that
⟨˙a⟩= 0,
⟨˙e⟩= 0,
⟨˙i⟩= 0,
⟨˙ω⟩=
3J2R2
e
4(1 −e2)2
 μ
a7 (5 cos2 i −1).
(7.50)
Therefore, the oblateness effects of the earth (through J2) only affect  and ω in the
long-term, with the orbital plane rotating about the Earth’s spin axis at an average rate
of ⟨˙⟩, and the argument of perigee rotating about the orbit normal at an average rate
of ⟨˙ω⟩.
7.5
Special Types of Orbits
The secular variations of  and ω provide useful types of orbits. We shall present two such
types.
7.5.1
Sun-Synchronous Orbits
We see from equation (7.49), that for a given semi-major axis a, and eccentricity e, we can
appropriately select the inclination to achieve a given average nodal regression ⟨˙⟩.
In particular, if we choose i such that
⟨˙⟩= 360◦/year,
then the orbital plane rotates at the same rate as the Earth orbits around the sun. Therefore,
the orbit’s ascending node is always the same relative to the sun, as shown in Figure 7.5. This

Orbital Perturbations
169
sun
orbit around earth
Figure 7.5
Sun-synchronous orbit
is called a sun-synchronous orbit, and it ﬁnds many applications. It is particularly useful for
Earth-sensing missions, since the lighting conditions of the Earth are always the same every
orbit.
7.5.2
Molniya Orbits
From the last equation in (7.50), we see that by selecting 5 cos2 i −1 = 0, or i =
63.4◦, 116.6◦, the perigee advance is zero (⟨˙ω⟩= 0). This is called a frozen orbit.
A Molniya orbit is a highly eccentric frozen orbit with a twelve-hour period. This is very
useful for communications with high latitude regions, since the apogee remains over the same
latitude (see Figure 7.6). For highly-eccentric orbits, the spacecraft spends the majority of its
orbit close to apogee. By having a number of satellites in Molniya-type orbits, continuous
coverage of high latitude regions is possible.
7.6
Small Impulse Form of the Gauss Variational Equations
We have seen in Chapter 5 that we can create orbit changes by impulsively changing the
velocity v, at an appropriate point in the orbit. If the velocity change is small, we can use
Gauss’ variational equations to observe the change in the orbital elements.
Let ⃗fp be a small constant thrust applied over a short interval δt, such that a velocity change
(from the two-body velocity) δ⃗v results. From equation (7.2),
˙⃗v = −μ
r3 ⃗r + ⃗fp.

170
Spacecraft Dynamics and Control: An Introduction
earth
spacecraft spends signiﬁcant
portion of orbital period
near apogee
Figure 7.6
Molniya orbit
For two-body motion, the velocity change over a short interval is (setting ⃗fp = ⃗0)
δ⃗vtb = ˙⃗vδt = −μ
r3 ⃗rδt.
For the true motion, we have
δ⃗vtb + δ⃗v = −μ
r3 ⃗rδt + ⃗fpδt,
from which we can identify the required thrust
⃗fp = δ⃗v
δt .
Writing δ⃗v in cylindrical coordinates
δ⃗v = ⃗F T
o
⎡
⎣
δvr
δvθ
δvz
⎤
⎦,
and substituting this into Gauss variational equations at the end of Section 7.2, the small
impulse form of the Gauss variational equations can be obtained:
δa =
2a2

μa(1 −e2)
[e sin θδvr + (1 + e cos θ)δvθ] ,
δe =

a(1 −e2)
μ

sin θδvr + 2 cos θ + e(1 + cos2 θ)
(1 + e cos θ)
δvθ

,

Orbital Perturbations
171
δi =

a(1 −e2)
μ
cos(ω + θ)
1 + e cos θ δvz,
δ =

a(1 −e2)
μ
sin(ω + θ)
sin i(1 + e cos θ)δvz,
δω =

a(1 −e2)
μ

−cos θ
e
δvr + (2 + e cos θ) sin θ
e(1 + e cos θ)
δvθ −
sin(ω + θ)
tan i(1 + e cos θ)δvz

.
The above small impulse form of the Gauss variational equations can be used to determine the
orbital maneuvers required to make small changes to the spacecraft orbit.
7.7
Derivation of the Remaining Gauss Variational Equations
Equation for de
dt
For the two-body solution, the elements a and e are related to the orbital angular momentum
by (see Section 3.3)
h2
μ = a(1 −e2).
(7.51)
Differentiating this leads to
2h ˙h
μ
= ˙a(1 −e2) −2ae˙e,
which can be rearranged for ˙e = de
dt as
de
dt = ˙a(1 −e2)
2ae
−h ˙h
μae.
(7.52)
Now, we already have ˙a = da
dt (equation (7.20)). The remaining quantity we need is dh
dt , which
is given by (differentiate h2 = ⃗h · ⃗h and rearrange)
dh
dt =
⃗h · ˙⃗h
h
.
(7.53)
Now, recall that the angular momentum vector is deﬁned as ⃗r × ⃗v. Differentiation gives
˙⃗h = ˙⃗r × ⃗v + ⃗r × ˙⃗v = ⃗r × ˙⃗v.

172
Spacecraft Dynamics and Control: An Introduction
Substituting the equation of motion (7.10), gives
˙⃗h = ⃗r ×

−μ
r3 ⃗r + ⃗fp

= ⃗r × ⃗fp.
Making use of the expressions in cylindrical coordinates (7.11) and (7.13), this becomes
˙⃗h = r⃗xo ×

fr⃗xo + fθ⃗yo + fz⃗zo

,
= r fθ⃗zo −r fz⃗yo.
(7.54)
Now,
⃗h · ˙⃗h = h⃗zo ·

r fθ⃗zo −r fz⃗yo

= hr fθ.
Substituting this into (7.53) gives
dh
dt = r fθ = a(1 −e2)
1 + e cos θ fθ.
(7.55)
where the polar equation of the instantaneous two-body orbit,
r = a(1 −e2)
1 + e cos θ ,
has been used. Substituting (7.55) and the expression for da
dt (equation (7.20)) into (7.52) gives
de
dt = (1 −e2)
2ae
2a2

μa(1 −e2)
[e sin θ fr + (1 + e cos θ) fθ] −
h
μae
a(1 −e2)
1 + e cos θ fθ.
which can be rearranged (using equation (7.51) for h) to give
de
dt =

a(1 −e2)
μ

sin θ fr + 2 cos θ + e(1 + cos2 θ)
(1 + e cos θ)
fθ

.
(7.56)
Equation for di
dt
Recall that the inclination satisﬁes (see Section 3.7)
cos i =
⃗h · ⃗zG
h
.

Orbital Perturbations
173
Differentiating this leads to
−sin i di
dt =
˙⃗h · ⃗zG
h
−dh
dt
⃗h · ⃗zG
h2
,
=
˙⃗h · ⃗zG
h
−dh
dt
cos i
h
.
(7.57)
Now, we already have expressions for ˙⃗h and ˙h in terms of the cylindrical coordinates (equations
(7.54) and (7.55)). We now need an expression for ⃗zG in cylindrical coordinates. To do this,
we can make use of the rotation matrix from the ECI frame FG to the cylindrical frame Fo,
which is given by (see Section 3.8) a rotation  about ⃗zG, followed by a rotation i about the
intermediate ⃗x axis, followed by a rotation ω + θ about ⃗zo. The rotation matrix is obtained
from equation (3.83) in Section 3.8 by replacing ω by ω + θ.
CoG = CT
Go,
where
CGo =
⎡
⎣
ccω+θ −scisω+θ
−csω+θ −scicω+θ
ssi
scω+θ + ccisω+θ
−ssω+θ + ccicω+θ
−csi
sisω+θ
sicω+θ
ci
⎤
⎦,
(7.58)
where cx = cos x and sx = sin x. We can now express the vector ⃗zG in both reference
frames as
⃗zG = ⃗F T
G
⎡
⎣
0
0
1
⎤
⎦= ⃗F T
o CT
Go
⎡
⎣
0
0
1
⎤
⎦= ⃗F T
o
⎡
⎣
sin i sin(ω + θ)
sin i cos(ω + θ)
cos i
⎤
⎦.
We therefore have
⃗zG = sin i sin(ω + θ)⃗xo + sin i cos(ω + θ)⃗yo + cos i⃗zo.
(7.59)
Now, making use of (7.54) and (7.59), we can compute
˙⃗h · ⃗zG =

r fθ⃗zo −r fz⃗yo

·

sin i sin(ω + θ)⃗xo + sin i cos(ω + θ)⃗yo + cos i⃗zo

,
= r fθ cos i −r fz sin i cos(ω + θ).
Substituting this and (7.55) into (7.57), we obtain
−sin i di
dt = r fθ cos i −r fz sin i cos(ω + θ) −r fθ cos i
h
= −r fz sin i cos(ω + θ)
h
.

174
Spacecraft Dynamics and Control: An Introduction
Making use of the polar equation for the instantaneous two-body orbit, this becomes
di
dt =

a(1 −e2)
μ
cos(ω + θ)
1 + e cos θ fz
(7.60)
Equation for d
dt
Recall from Section 3.7 that the right ascension of the ascending node satisﬁes
cos  = ⃗n · ⃗xG
n
,
(7.61)
where ⃗n = ⃗zG × ⃗h. Differentiating this gives
−sin d
dt =
˙⃗n · ⃗xG
n
−˙n⃗n · ⃗xG
n2
=
˙⃗n · ⃗xG
n
−˙n cos 
n
.
(7.62)
We will evaluate this expression term by term. First, we have
˙⃗n = ⃗zG × ˙⃗h,
and therefore,
˙⃗n · ⃗xG = ⃗xG · (⃗zG × ˙⃗h),
= ˙⃗h · (⃗xG × ⃗zG),
= −˙⃗h · ⃗yG.
Using the same arguments that were used to obtain ⃗zG in cylindrical coordinates from the
rotation matrix (7.58), we can ﬁnd that
⃗yG = (scω+θ + ccisω+θ)⃗xo + (−ssω+θ + ccicω+θ)⃗yo + (−csi)⃗zo.
(7.63)
Making use of (7.54) and (7.63), we have
˙⃗n · ⃗xG = −

r fθ⃗zo −r fz⃗yo

·

(scω+θ + ccisω+θ)⃗xo + (−ssω+θ + ccicω+θ)⃗yo + (−csi)⃗zo

,
= r fθ cos  sin i −r fz [sin  sin(ω + θ) −cos  cos i cos(ω + θ)] .
(7.64)
Since the inclination i is the angle between ⃗h and ⃗zG, we immediately have that
n = |⃗h||⃗zG| sin i = h sin i.
(7.65)

Orbital Perturbations
175
Therefore, we have
˙⃗n · ⃗xG
n
= r fθ
h cos  −
r fz
h sin i [sin  sin(ω + θ) −cos  cos i cos(ω + θ)] .
(7.66)
The next term we need in (7.62) is ˙n. Now, this is given by
˙n = ⃗n · ˙⃗n
n
.
(7.67)
We therefore need expressions for ⃗n and ˙⃗n. Let us start with ⃗n. From its deﬁnition, and (7.59)
and (7.12), we have
⃗n = ⃗zg × ⃗h = h

sin i sin(ω + θ)⃗xo + sin i cos(ω + θ)⃗yo + cos i⃗zo

× ⃗zo,
= −h sin i sin(ω + θ)⃗yo + h sin i cos(ω + θ)⃗xo.
(7.68)
Using (7.54) we ﬁnd,
˙⃗n = ⃗zG × ˙⃗h = ⃗zG ×

r fθ⃗zo −r fz⃗yo

,
= r fθ⃗zG × ⃗zo −r fz⃗zG × ⃗yo.
(7.69)
Making use of (7.59), we have
⃗zG × ⃗zo =

sin i sin(ω + θ)⃗xo + sin i cos(ω + θ)⃗yo + cos i⃗zo

× ⃗zo,
= −sin i sin(ω + θ)⃗yo + sin i cos(ω + θ)⃗xo,
and
⃗zG × ⃗yo =

sin i sin(ω + θ)⃗xo + sin i cos(ω + θ)⃗yo + cos i⃗zo

× ⃗yo,
= sin i sin(ω + θ)⃗zo −cos i⃗xo.
Substituting these expressions into (7.69) leads to
˙⃗n = r fθ

−sin i sin(ω + θ)⃗yo + sin i cos(ω + θ)⃗xo

−r fz

sin i sin(ω + θ)⃗zo −cos i⃗xo

,
= r [ fθ sin i cos(ω + θ) + fz cos i] ⃗xo −r fθ sin i sin(ω + θ)⃗yo −r fz sin i sin(ω + θ)⃗zo.
(7.70)
Taking the dot product of (7.68) and (7.70), gives
⃗n · ˙⃗n = rh sin i

fθ sin i cos2(ω + θ) + fz cos i cos(ω + θ)

+ rh sin i fθ sin i sin2(ω + θ),
= rh sin i [sin i fθ + cos i cos(ω + θ) fz] .

176
Spacecraft Dynamics and Control: An Introduction
Substituting this and (7.65) into (7.67) gives
˙n = r [sin i fθ + cos i cos(ω + θ) fz] .
(7.71)
Finally, making use of (7.65), we can obtain the second term in (7.62) as
˙n cos 
n
= r fθ
h cos  +
r fz
h sin i cos  cos i cos(ω + θ).
(7.72)
Substituting (7.66) and (7.72) into (7.62) gives
−sin d
dt = −r fz
h sin i sin  sin(ω + θ),
which leads to
d
dt =
r fz
h sin i sin(ω + θ).
Finally, substituting the polar equation for the instantaneous two-body orbit, we have the
desired result
d
dt =

a(1 −e2)
μ
sin(ω + θ)
sin i(1 + e cos θ) fz
(7.73)
Equation for dω
dt
Recall from Section 3.7 that the argument of periapsis satisﬁes
cos ω = ⃗n · ⃗e
ne .
(7.74)
Differentiating this leads to
−sin ωdω
dt =
˙⃗n · ⃗e
ne + ⃗n · ˙⃗e
ne −˙n⃗n · ⃗e
n2e −˙e⃗n · ⃗e
ne2 ,
=
˙⃗n · ⃗e
ne + ⃗n · ˙⃗e
ne −˙n cos ω
n
−˙e cos ω
e
.
(7.75)
We will treat this term by term. We see that we need expressions for ⃗e and ˙⃗e. Recall that
the eccentricity vector ⃗e points towards periapsis (see Section 3.3). Therefore, in perifocal
coordinates (Fp), the eccentricity vector is given by
⃗e = ⃗F T
p
⎡
⎣
e
0
0
⎤
⎦.

Orbital Perturbations
177
Now, the cylindrical frame is obtained from the perifocal frame by a rotation about ⃗zo through
angle θ (the instantaneous true-anomaly). The associated rotation matrix is
Cop =
⎡
⎣
cos θ
sin θ
0
−sin θ
cos θ
0
0
0
1
⎤
⎦,
such that the eccentricity vector is given by
⃗e = ⃗F T
p Cop
⎡
⎣
e
0
0
⎤
⎦,
= e cos θ⃗xo −e sin θ⃗yo.
(7.76)
Now, recall the deﬁnition of the eccentricity vector
⃗e = ⃗v × ⃗h
μ
−⃗r
r .
(7.77)
Differentiating this gives
˙⃗e =
˙⃗v × ⃗h
μ
−
˙⃗r
r + ˙r⃗r
r2 + ⃗v × ˙⃗h
μ
.
Substituting the equation of motion (7.10) for ˙⃗v, this becomes
˙⃗e =

−μ
r3 ⃗r

× ⃗h
μ
−
˙⃗r
r + ˙r⃗r
r2 +
⃗fp × ⃗h
μ
+ ⃗v × ˙⃗h
μ
,
=
⃗fp × ⃗h
μ
+ ⃗v × ˙⃗h
μ
.
(7.78)
Note that we showed in Section 3.2.3 that −(μ/r3)⃗r × ⃗h/μ −˙⃗r/r + ˙r⃗r/r2 = ⃗0. Let us now
evaluate (7.78) term by term. Using (7.13) and (7.12), we have
⃗fp × ⃗h
μ
= h
μ

fr⃗xo + fθ⃗yo + fz⃗zo

× ⃗zo,
= 1
μ

−h fr⃗yo + h fθ⃗xo

.

178
Spacecraft Dynamics and Control: An Introduction
Using (7.11) and (7.54), we have
⃗v × ˙⃗h
μ
= 1
μ
˙r⃗xo + r ˙θ⃗yo

×

r fθ⃗zo −r fz⃗yo

,
= 1
μ

−r ˙r fθ⃗yo −r ˙r fz⃗zo + r2 ˙θ fθ⃗xo

,
= 1
μ

−r ˙r fθ⃗yo −r ˙r fz⃗zo + h fθ⃗xo

,
where the fact that h = r2 ˙θ has been used. Using these expressions in (7.78), we have
˙⃗e = 2h fθ
μ ⃗xo −[h fr + r ˙r fθ]
μ
⃗yo −r ˙r fz
μ ⃗zo.
(7.79)
Let us now start evaluating the terms in (7.75). Using (7.70), (7.76) and (7.65), the ﬁrst term
is
˙⃗n · ⃗e
ne =
1
eh sin i [e cos θr ( fθ sin i cos(ω + θ) + fz cos i)
+ e sin θr fθ sin i sin(ω + θ)]
= r fθ
h [cos θ cos(ω + θ) + sin θ sin(ω + θ)] + r fz cos i cos θ
h sin i
.
Using the trigonometric double angle formula
cos(a −b) = cos a cos b + sin a sin b,
this reduces to
˙⃗n · ⃗e
ne = r fθ cos ω
h
+ r fz cos i cos θ
h sin i
.
(7.80)
Next, using (7.68), (7.79) and (7.65), we ﬁnd that the second term in (7.75) is
⃗n · ˙⃗e
ne =
1
eh sin i

h sin i cos(ω + θ)2h fθ
μ
+ h sin i sin(ω + θ)[h fr + r ˙r fθ]
μ

,
= 2h fθ
μe cos(ω + θ) + h fr
μe sin(ω + θ) + r ˙r fθ
μe sin(ω + θ).
From Section 3.8, we ﬁnd that
r ˙r
μe =
a(1 −e2)
μe(1 + e cos θ)

μ
a(1 −e2)e sin θ =

a(1 −e2)
μ
sin θ
1 + e cos θ = h
μ
sin θ
1 + e cos θ .

Orbital Perturbations
179
Therefore, we have
⃗n · ˙⃗e
ne = 2h fθ
μe cos(ω + θ) + h fr
μe sin(ω + θ) + h fθ
μ
sin θ sin(ω + θ)
1 + e cos θ
,
= h fθ
μ
2 cos(ω + θ)
e
+ sin θ sin(ω + θ)
1 + e cos θ

+ h fr
μe sin(ω + θ),
= h fθ
μ
2 cos(ω + θ) + 2e cos θ cos(ω + θ) + e sin θ sin(ω + θ)
e(1 + e cos θ)

+ h fr
μe sin(ω + θ),
= h fθ
μ
cos(ω + θ)(2 + e cos θ) + e (cos θ cos(ω + θ) + sin θ sin(ω + θ))
e(1 + e cos θ)

+ h fr
μe sin(ω + θ),
= h fθ
μ
cos(ω + θ)(2 + e cos θ) + e cos ω
e(1 + e cos θ)

+ h fr
μe sin(ω + θ).
(7.81)
Next, using (7.71) and (7.65), we obtain the third term in (7.75)
˙n cos ω
n
= cos ω
h sin i [r sin i fθ + r cos i cos(ω + θ) fz] ,
= r fθ
h cos ω + r fz
h
cos i
sin i cos ω cos(ω + θ).
(7.82)
Using (7.56), we obtain the fourth term in (7.75) as
˙e cos ω
e
= h fr
μe sin θ cos ω + h fθ
μ
2 cos θ + e(1 + cos2 θ)
e(1 + e cos θ)
cos ω,
= h fr
μe sin θ cos ω + h fθ
μ
cos θ cos ω(2 + e cos θ) + e cos ω
e(1 + e cos θ)
.
(7.83)
Now, substituting the four terms (7.80), (7.81), (7.82) and (7.83) into (7.75), we obtain
−sin ωdω
dt = r fθ cos ω
h
+ r fz cos i cos θ
h sin i
+ h fθ
μ
cos(ω + θ)(2 + e cos θ) + e cos ω
e(1 + e cos θ)

+ h fr
μe sin(ω + θ)
−r fθ
h cos ω −r fz
h
cos i
sin i cos ω cos(ω + θ)
−h fr
μe sin θ cos ω −h fθ
μ
cos θ cos ω(2 + e cos θ) + e cos ω
e(1 + e cos θ)
,

180
Spacecraft Dynamics and Control: An Introduction
= h fr
μe [sin(ω + θ) −sin θ cos ω]
+ h fθ
μ
(2 + e cos θ)
e(1 + e cos θ) [cos(ω + θ) −cos θ cos ω]
+ r fz cos i
h sin i
[cos θ −cos ω cos(ω + θ)] .
These terms can be reduced using trigonometric double angle formulas. Speciﬁcally,
cos(ω + θ) = cos ω cos θ −sin ω sin θ,
sin(ω + θ) = sin ω cos θ + cos ω sin θ,
and
cos θ = cos ((ω + θ) −ω) = cos(ω + θ) cos ω + sin(ω + θ) sin ω.
Making use of these, we obtain
−sin ωdω
dt = h fr
μe sin ω cos θ −h fθ
μ
(2 + e cos θ)
e(1 + e cos θ) sin ω sin θ + r fz cos i
h sin i
sin(ω + θ) sin ω.
Noting that
r
h = h
μ
1
1 + e cos θ ,
and that
h
μ =

a(1 −e2)
μ
,
we ﬁnally obtain the desired result
dω
dt =

a(1 −e2)
μ

−cos θ
e
fr + (2 + e cos θ) sin θ
e(1 + e cos θ)
fθ −
sin(ω + θ)
tan i(1 + e cos θ) fz

.
(7.84)
Notes
As explained in this chapter, true spacecraft orbital motion differs from Keplerian two-body
motion (presented in Chapter 3) due to additional perturbing forces acting on the spacecraft.
This chapter has examined various methods of determining the perturbed motion. In particular,
we have presented two special perturbation techniques (Cowell’s method and Enke’s method),
and one general perturbation technique (Gauss’ variational equations). There are several other

Orbital Perturbations
181
techniques in existence, and the reader is referred to Vallado (2007) for a general overview of
these methods.
In order to use these techniques for dealing with orbital perturbations, mathematical mod-
els of the perturbing forces are needed. We have presented a detailed force model for the
gravitational perturbations due to a non-spherical primary. However, we have not considered
other perturbing forces such as gravitational forces from third and fourth bodies, detailed
atmospheric drag models, solar radiation pressure among others. The reader is referred to
Montenbruck and Gill (2000) and Vallado (2007) for additional perturbing force models.
References
Montenbruck O and Gill E 2000 Satellite Orbits: Models, Methods, Applications. Springer, Berlin Heidelberg.
Vallado DA 2007 Fundamentals of Astrodynamics and Applications 3rd edn. Microcosm Press, Hawthorne, CA.


8
Low Thrust Trajectory Analysis
and Design
8.1
Problem Formulation
In Chapter 5, we considered transfers between orbits that were accomplished by the application
of large thrusts over short periods of time. By assuming the transfer time was short relative
to the orbital period, these thrusts could be modeled as impulsive. In this chapter, the other
extreme will be considered: the application of low thrusts continually over long periods of
time. The methods developed here were pioneered by T. N. Edelbaum in the 1960s. Although
approximate, they are easily derived and yield a great deal of insight into low thrust trajectories.
Our major tool will be Gauss’s Variational Equations. In particular we will need the equations
for the semimajor axis a, the eccentricity e, and the inclination i. From the previous chapter:
da
dt =
2a2

μa(1 −e2)
[e sin θ fr + (1 + e cos θ) fθ],
(8.1)
de
dt =

a(1 −e2)
μ

sin θ fr + 2 cos θ + e(1 + cos2 θ)
(1 + e cos θ)
fθ

,
(8.2)
di
dt =

a(1 −e2)
μ
cos(ω + θ)
1 + e cos θ fz,
(8.3)
where fr is the radial thrust, fθ is the tangential thrust, and fz is the out-of-plane thrust.
The following assumptions will be in effect for the rest of the chapter:
(i) The magnitude of the applied thrust is small and constant.
(ii) The eccentricity of the orbit throughout the maneuver remains small.
(iii) The transfer time (Tm) is long relative to the orbital period (T ).
Our objective is to minimize the maneuver time subject to the desired terminal orbit constraints.
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

184
Spacecraft Dynamics and Control: An Introduction
Given assumption (ii), we can expand the right-hand sides of equations (8.1)-(8.3) in a
Taylor series in e and retain only the ﬁrst (zeroth-order) terms. Since the thrusts are also
assumed to be small, terms of the order ei fr, ei fθ, and ei fz, i = 1, 2, 3, . . ., are assumed to
be of second or higher order and neglected. The resulting equations are:
da
dt = 2

a3
μ fθ,
(8.4)
de
dt =
 a
μ [sin θ fr + 2 cos θ fθ] ,
(8.5)
di
dt =
 a
μ cos(ω + θ) fz.
(8.6)
Since the magnitude of the thrust f =

f 2r + f 2
θ + f 2z is taken to be constant, it is helpful
to express the thrust components in terms of the steering angles α (the angle between the
velocity vector and the component of the thrust vector in the orbital plane) and β (the angle
between the thrust vector and the orbital plane): fr = f cos β sin α, fθ = f cos β cos α, and
fz = f cos β. Equations (8.4)-(8.6) become
da
dt = 2

a3
μ f cos α cos β,
(8.7)
de
dt =
 a
μ f [sin θ sin α cos β + 2 cos θ cos α cos β] ,
(8.8)
di
dt =
 a
μ f cos θ sin β,
(8.9)
where we have taken ω = 0 given assumption (ii) and assumed that θ is measured from the
ascending node.
8.2
Coplanar Circle to Circle Transfers
Letting Tm denote the transfer time, we seek to determine the steering angles that minimize
Tm subject to the following boundary conditions on a(t): a(0) = r1 and a(Tm) = r2. Here, the
notation of Chapter 5 has been adopted where r1 is the radius of the initial circular orbit and r2
is the radius of the ﬁnal circular orbit. In order to minimize Tm, it follows that da/dt should be
maximized. From equation (8.7), we take α = β = 0. This leads to no change in inclination
using equation (8.9).
Rearranging (8.7), we obtain
1
2
 μ
a3
da
dt = f.

Low Thrust Trajectory Analysis and Design
185
The velocity change (v) for the maneuver can then be calculated via integration of both
sides:
1
2
 r2
r1
 μ
a3 da =
 Tm
0
f dt = v = f Tm.
(8.10)
Hence,
v =
 μ
r1
−
 μ
r2
.
Denoting the initial circular velocity by v1 = √μ/r1, the expression for the velocity change
can be nondimensionalized to give
v
v1
= 1 −
r1
r2
.
(8.11)
This can be compared with the corresponding expression for the Hohmann transfer developed
in Chapter 5:
v
v1
=
r1
r2
−1 −
	r1
r2

2
1 + (r2/r1) +
	r2
r1

2
1 + (r2/r1).
Both expressions are plotted in Figure 8.1.
low thrust
Hohmann
transfer
r  /r
2  1
Δ v
__
v1
0.0
0.2
0.4
0.6
0.8
1.0
100
101
102
Figure 8.1
v/v1 vs. r2/r1 for low thrust coplanar transfer between circular orbits

186
Spacecraft Dynamics and Control: An Introduction
An expression for the evolution of the semimajor axis during the maneuver, a(t), can
be determined by replacing the upper limit of integration in equation (8.10) by a(t) on the
left-hand side and t on the right-hand side. This gives
 μ
r1
−
 μ
a(t) = f t
or a(t) = μ/(v1 −f t)2. It is noted that the expression for the eccentricity in equation (8.8)
for α = β = 0 becomes
de
dt = 2
 a
μ f cos θ.
For large Tm and small f , the eccentricity remains small.
The spiral nature of the maneuver can be visualized by making the substitution dt =

a3/μ dθ in equation (8.10) which gives
1
2
 a(t)
r1
μ
a3 da =
 θ(t)
0
f dθ.
Performing the integrations gives
f θ(t) = μ
4
	 1
r2
1
−
1
a2(t)

.
(8.12)
The total number of revolutions [θ(Tm)/(2π)] can be determined by setting t = Tm and
a(t) = a(Tm) = r2. Combining this result with equation (8.12) yields the following expression
for a(θ):
a(θ)
r1
=
1

1 −
θ(t)
θ(Tm)

1 −

r1
r2
2.
(8.13)
Neglecting the change in the eccentricity, the Cartesian trajectory y vs. x with y = a(θ) sin θ
and x = a(θ) cos θ can be determined such as that given in Figure 8.2.
8.3
Plane Change Maneuver
In this section, the low thrust analog of the problem solved by impulsive thrust in Section 5.3
will be tackled. In particular, we look for a low thrust solution which produces a change in
inclination for a circular orbit without affecting the radius or eccentricity. With a view to

Low Thrust Trajectory Analysis and Design
187
x/r1
y/r1
-2.0
-1.0
0.0
1.0
2.0
-2.0
-1.0
0.0
1.0
2.0
Figure 8.2
Circle-to-circle low thrust transfer for r2/r1 = 2 and a 10 revolution transfer
minimizing the transfer time Tm we shall maximize di/dt while setting da/dt = de/dt = 0.
Examining equations (8.7)-(8.9), we set
sin β = sgn(cos θ), sgn(x) =
⎧
⎨
⎩
1,
x > 0
0,
x = 0
−1,
x < 0
(8.14)
where sgn(x) is the signum function.
Setting a = r1, v1 = √μ/r1, and β from equation (8.14), equation (8.9) becomes
di
dt = f
v1
| cos θ|.
Let us now relate the v for one orbit (Tm = T ) to the corresponding change in inclination,
i. Setting dt = T/(2π) dθ and integrating both sides from t = 0 to t = T yields
i =
f T
2πv1
 2π
0
| cos θ| dθ = 2
π
v
v1
.
(8.15)
Note that we have assumed that the desired inclination change i is positive. A similar strategy
holds for i negative. It turns out that the presented strategy is not a minimum time transfer,
which requires a varying β from orbit to orbit. The underlying philosophy is that the orbit
should be enlarged to lower the velocity, most of the plane change should occur, and then
the orbit is reduced to its original value. The strategy developed in equation (8.15) is close to
optimal for small changes in inclination.

188
Spacecraft Dynamics and Control: An Introduction
From Chapter 5, the v for an impulsive change in plane with plane change angle i is
given by v = 2v sin(i/2). For a small change in inclination this yields
v
v1
= i
which should be compared to the low thrust result above.
Notes
This chapter has provided a brief introduction to the subject of low-thrust spacecraft trajectory
design, which is based on the work of Edelbaum (1961). For further examples of low-thrust
spacecraft trajectory design, the reader is referred to Kemble (2006).
References
Edelbaum TN 1961 Propulsion Requirements for Controllable Satellites. ARS Journal 31, 1079–1089.
Kemble S 2006 Interplanetary Mission Analysis and Design. Springer, Chichester, UK.

9
Spacecraft Formation Flying
A topic of signiﬁcant current interest in the space community is that of spacecraft formation
ﬂying. First, we must deﬁne what is meant by a spacecraft formation. By a spacecraft for-
mation, we mean a collection of coordinated spacecraft ﬂying in close proximity. If they are
coordinated, but not in close proximity, we shall not consider it a formation. This distinguishes
formations from constellations (see Figure 9.1). There are a number of reasons spacecraft
formations are of interest:
1. Cost: a formation of smaller cheaper spacecraft may be less expensive than a single large
expensive spacecraft.
• a formation of smaller spacecraft may be able to achieve the same objectives as a single
large spacecraft by distributing instruments among them.
2. Graceful degradation
• failure of a single spacecraft in a formation does not mean the end of the mission. The
mission can continue in reduced capacity with the remaining satellites. Failure of a single
large spacecraft on the other hand, means the end of the mission.
3. New possibilities not achievable with a single satellite, for example:
• sparse aperture radar, interferometry
• search for planets around distant stars
There are currently two classes of spacecraft formations under investigation:
1. Planet orbiting formations
2. Deep space formations (at Lagrange points (see Chapter 10 for an explanation of the
Lagrange points))
We shall restrict our attention to planet orbiting formations.
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

190
Spacecraft Dynamics and Control: An Introduction
Formation
Constellation
Planet
Planet
Figure 9.1
Satellite formation and constellation
9.1
Mathematical Description
For nearly circular orbits, the relative motion between spacecraft is described by the Hill
or Clohessy-Wiltshire equations. These equations were originally developed for orbital ren-
dezvous and docking operations.
Consider two spacecraft in formation, as shown in Figure 9.2. We shall call the ﬁrst spacecraft
the leader, and the second the follower. The follower is assumed to have thrusters capable of
producing a force per unit mass ⃗f f on the follower. This is needed for formation control. For
the purposes of our formulation, we shall assume that the leader is unforced.
As shown in Figure 9.2, the follower position relative to the leader is deﬁned as ⃗ρ = ⃗r f −⃗rl
where ⃗r f and ⃗rl are the leader and follower positions relative to the center of the Earth,
respectively. The equations of motion for the follower and leader (assuming the Earth is
spherical) are respectively
¨⃗r f = −μ ⃗r f
|⃗r f |3 + ⃗f f ,
(9.1)
⃗FG
⃗rf
⃗rl
⃗ρ
follower
leader
Figure 9.2
Leader-follower formation

Spacecraft Formation Flying
191
and
¨⃗rl = −μ ⃗rl
|⃗rl|3 .
(9.2)
The equations of relative motion are then obtained by subtracting (9.2) from (9.1)
¨⃗ρ = ¨⃗r f −¨⃗rl = −μ ⃗r f
|⃗r f |3 + ⃗f f + μ ⃗rl
|⃗rl|3 ,
= −μ
⃗rl + ⃗ρ

|⃗rl + ⃗ρ|3 + ⃗f f + μ ⃗rl
|⃗rl|3 .
(9.3)
Let us now ﬁnd a linear approximation to (9.3) (which will be useful later for studying relative
motion solutions). First, we note that
1
|⃗rl + ⃗ρ|3 =
1
⃗rl + ⃗ρ

·
⃗rl + ⃗ρ
3/2 ,
=
1
⃗rl · ⃗rl + ⃗ρ · ⃗ρ + 2⃗rl · ⃗ρ
3/2 ,
=
1

r2
l + ρ2 + 2rlρ cos φ
3/2 ,
=
1
r3
l

1 + (ρ/rl)2 + 2(ρ/rl) cos φ
3/2
(9.4)
where ρ = |⃗ρ|, rl = |⃗rl| and φ is the angle between the vectors ⃗rl and ⃗ρ.
Since the spacecraft are in close proximity, we assume ϵ
= ρ/rl ≪1. A ﬁrst-order Taylor
series expansion gives
1
|⃗rl + ⃗ρ|3 = 1
r3
l

1 + 2ϵ cos φ + ϵ2−3/2 ≈1
r3
l

1 + d
dϵ

1 + 2ϵ cos φ + ϵ2−3/2
ϵ=0
ϵ

.
Now,
d
dϵ

1 + 2ϵ cos φ + ϵ2−3/2
=
−3 (cos φ + ϵ)

1 + 2ϵ cos φ + ϵ25/2 ,
such that

1 + 2ϵ cos φ + ϵ2−3/2 ≈1 −3ϵ cos φ.

192
Spacecraft Dynamics and Control: An Introduction
Making use of this approximation in (9.4) leads to
1
|⃗rl + ⃗ρ|3 ≈1
r3
l
−3(ρ/rl) cos φ
r3
l
.
(9.5)
However, by deﬁnition of the dot product we have ⃗ρ · ⃗rl = rlρ cos φ, which leads to
ρ
rl
cos φ = ⃗ρ · ⃗rl
r2
l
.
Substituting this into (9.5) gives
1
|⃗rl + ⃗ρ|3 ≈1
r3
l
−3⃗ρ · ⃗rl
r5
l
.
(9.6)
Now, we can make use of (9.6) in (9.3) to obtain
¨⃗ρ ≈−μ
⃗rl + ⃗ρ

r3
l

1 −3⃗ρ · ⃗rl
r2
l

+ ⃗f f + μ ⃗rl
r3
l
.
Expanding this and neglecting (3μ/r3
l )

⃗ρ · ⃗rl

⃗ρ/r2
l (since it is of second order in ρ/rl), we
obtain a ﬁrst order approximation of the relative dynamics
¨⃗ρ ≈−μ
r3
l
⃗ρ + 3μ
r3
l

⃗ρ · ⃗rl
 ⃗rl
r2
l
+ ⃗f f .
(9.7)
Equation (9.7) describes the relative dynamics in physical vector form. As always, we want
to express them in a reference frame. We shall assume that the leader is in a circular orbit
of radius rl. A useful frame for expressing the relative dynamics is a reference frame that
orbits with the leader spacecraft, F H called the Hill frame (see Figure 9.3). It is deﬁned as
FG
rl
leader orbit
zH
xH
yH
Figure 9.3
Hill-frame deﬁnition

Spacecraft Formation Flying
193
follows: ⃗xH = ˙⃗rl/|˙⃗rl|, ⃗zH = ⃗rl/|⃗rl| and ⃗yH = ⃗zH × ⃗xH. The angular velocity of this frame is
given by
⃗ωH = ⃗F T
H
⎡
⎣
0
ωo
0
⎤
⎦.
where ωo =

μ/r3
l is the orbital angular velocity of the leader satellite, which is constant
(since the leader orbit is circular). In this frame, the leader position vector is given by
⃗rl = ⃗F T
H
⎡
⎣
0
0
rl
⎤
⎦.
Let (˚) denote time-differentiation as seen in frame FH. Then, as shown in Section 1.5,
¨⃗ρ =
◦◦
⃗ρ +2⃗ωH × ˚⃗ρ + ˚⃗ωH × ⃗ρ + ⃗ωH × ⃗ωH × ⃗ρ.
Substituting this into (9.7), and noting that ˚⃗ωH = ⃗0 (since the leader orbit is circular), the
equation of relative motion becomes
◦◦
⃗ρ +2⃗ωH × ˚⃗ρ + ⃗ωH × ⃗ωH × ⃗ρ + ω2
o⃗ρ −3ω2
o

⃗ρ · ⃗rl
 ⃗rl
r2
l
= ⃗f f .
(9.8)
Note that we have also replaced μ/r3
l by ω2
o. Expressing the relative position vector in FH
coordinates as
⃗ρ = ⃗F T
H
⎡
⎣
x
y
z
⎤
⎦,
(9.9)
we have
˚⃗ρ = ⃗F T
H
⎡
⎣
˙x
˙y
˙z
⎤
⎦and
◦◦
⃗ρ= ⃗F T
H
⎡
⎣
¨x
¨y
¨z
⎤
⎦.
We can now evaluate the individual terms in (9.8). We have
⃗ωH × ˚⃗ρ = ⃗F T
H
⎡
⎣
0
0
ωo
0
0
0
−ωo
0
0
⎤
⎦
⎡
⎣
˙x
˙y
˙z
⎤
⎦= ⃗F T
H
⎡
⎣
ωo˙z
0
−ωo ˙x
⎤
⎦,

194
Spacecraft Dynamics and Control: An Introduction
⃗ωH × ⃗ωH × ⃗ρ = ⃗F T
H
⎡
⎣
0
0
ωo
0
0
0
−ωo
0
0
⎤
⎦
⎡
⎣
ωoz
0
−ωox
⎤
⎦=
⎡
⎣
−ω2
ox
0
−ω2
oz
⎤
⎦,

⃗ρ · ⃗rl
 ⃗rl
r2
l
= ⃗F T
H
⎛
⎝x
y
z
⎡
⎣
0
0
rl
⎤
⎦
⎞
⎠
⎡
⎣
0
0
rl
⎤
⎦1
r2
l
= ⃗F T
H
⎡
⎣
0
0
z
⎤
⎦.
Let us also express the follower force/unit mass in Hill coordinates as
⃗f f = ⃗F T
H
⎡
⎣
fx
fy
fz
⎤
⎦.
Finally, we can use all of the above expressions in (9.7) to obtain the relative equations of
motion in Hill coordinates as
⎡
⎣
¨x + 2ωo˙z
¨y + ω2
oy
¨z −2ωo ˙x −3ω2
oz
⎤
⎦=
⎡
⎣
fx
fy
fz
⎤
⎦.
(9.10)
Equations (9.10) are known as the Hill or Clohessy-Wiltshire equations.
By the deﬁnition of the Hill frame, the x and z coordinates represent relative spacecraft
motion within the orbital plane of the leader. This relative motion is due to differences in the
semi-major axis and eccentricity of the two spacecraft. The y coordinate represents relative
motion out of the orbital plane of the leader. This motion is due to differences in inclination
and right ascension of the ascending node. It can be seen from (9.10) that the in-plane and out
of plane relative motions are decoupled. Thus, we have the in-plane equations
¨x + 2ωo˙z = fx,
¨z −2ωo ˙x −3ω2
oz = fz,
(9.11)
and the out-of-plane equation
¨y + ω2
oy = fy,
(9.12)
which can be treated separately.
9.2
Relative Motion Solutions
Any formation that would be practically useful requires minimal fuel (propellant) to maintain
the formation. Ideally, we would seek natural formations that do not require any fuel to
maintain, that is formations with fx = fy = fz = 0. Of course, due to orbital perturbations
this is not possible, and some fuel will always be required for formation maintenance. However,

Spacecraft Formation Flying
195
it is still of interest to examine unforced solutions of (9.11) and (9.12), which represent an
ideal case.
9.2.1
Out-of-Plane Motion
We ﬁrst examine out-of-plane motion. From (9.12), the equation to be solved is given by
¨y + ω2
oy = 0, with initial conditions y(0) = y0, ˙y(0) = ˙y0.
(9.13)
This is a simple second order ordinary differential equation which may be solved in a variety
of ways. Letting Y(s) = L(y(t)) be the Laplace transform of y(t), and taking the Laplace
transform of (9.13) gives
s2Y −sy0 −˙y0 + ω2
oY = 0,
which rearranges to give
Y(s) =
s
s2 + ω2o
y0 +
˙yo
s2 + ω2o
.
Taking the inverse Laplace transform gives the solution
y(t) = y0 cos ωot + ˙y0
ωo
sin ωot.
(9.14)
We see that unforced out-of-plane motion is sinusoidal, which means that it is always bounded.
Physically this makes sense, since out-of-plane motion is due to a difference in orbital plane
of the leader and follower satellite (which as mentioned previously is due to a difference in
inclination and/or right ascension of the ascending node). See Figure 9.4.
9.2.2
In-Plane Motion
We now turn our attention to relative motion within the orbital plane of the leader. From (9.11),
the equations to be solved are
¨x + 2ωo˙z = 0, with initial conditions x(0) = x0, ˙x(0) = ˙x0
¨z −2ωo ˙x −3ω2
oz = 0, with initial conditions z(0) = z0, ˙z(0) = ˙z0.
(9.15)
These are a pair of coupled second order ordinary differential equations. As for the out-of-
plane equations, there are a number of methods that could be used to solve them. Integrating
the ﬁrst equation in (9.15) gives
 t
0
¨xdτ + 2ωo
 t
0
˙zdτ = 0,

196
Spacecraft Dynamics and Control: An Introduction
angle between orbital planes
leader
follower
follower
leader
y
y
Figure 9.4
Out-of-plane relative motion
which leads to
˙x = −2ωoz + ˙x0 + 2ωoz0.
(9.16)
Substituting this into the second equation in (9.15) gives
¨z −3ω2
oz −2ωo (−2ωoz + ˙x0 + 2ωoz0) = 0,
which can be simpliﬁed to
¨z + ω2
oz = 2ωo ˙x0 + 4ω2
oz0.
Taking Laplace transforms of this gives
s2Z −sz0 −˙z0 + ω2
oZ = 2ωo ˙x0
s
+ 4ω2
oz0
s
,
which can be rearranged to give
Z =
s
s2 + ω2o
z0 +
4ω2
o
s(s2 + ω2o)z0 +
˙z0
s2 + ω2o
+
2ωo
s(s2 + ω2o) ˙x0.
(9.17)
Now, the following partial fraction expansion can be readily veriﬁed, and will be needed:
1
s(s2 + ω2o) =
1
ω2os −
s
ω2o(s2 + ω2o).
(9.18)

Spacecraft Formation Flying
197
Substituting (9.18) into (9.17) leads to
Z =

s
s2 + ω2o
+ 4
s −
4s
s2 + ω2o

z0 +
˙z0
s2 + ω2o
+ 2
ωo
1
s −
s
s2 + ω2o

˙x0.
Taking the inverse Laplace transform and rearranging leads to the solution for z(t)
z(t) =

4z0 + 2˙x0
ωo

+ ˙z0
ωo
sin ωot −

3z0 + 2˙x0
ωo

cos ωot.
(9.19)
Returning now to (9.16), we have upon further integration
x(t) = x0 −2ωo
 t
0
z(τ)dτ + (˙x0 + 2ωoz0) t.
(9.20)
Integrating (9.19), we now have
 t
0
z(τ)dτ =

4t −3 sin ωot
ωo

z0 + ˙z0
ω2o
(1 −cos ωot) + 2
ωo

t −sin ωot
ωo

˙x0.
Substituting this into (9.20) and rearranging gives
x(t) =

x0 −2˙z0
ωo

−(3˙x0 + 6ωoz0) t +

6z0 + 4˙x0
ωo

sin ωot + 2˙z0
ω0
cos ωot.
(9.21)
In summary, in-plane motion is described by (9.21) and (9.19). The x component is called
the along-track component since the Hill frame x-axis points in the direction of the leader
satellite orbital motion, while the z component is called the radial component since the Hill
frame z axis points radially outwards from the leader satellite orbit. It can be seen from (9.21)
and (9.19) that the in-plane relative motion is sinusoidal plus both an along-track and radial
offset and an along-track secular drift.
In order to achieve bounded relative motion (and hence a formation), the secular drift must
be zero. To achieve this, the coefﬁcient of t in (9.21) must be zero. That is, the initial conditions
must satisfy
˙x0 = −2ω0z0.
(9.22)

198
Spacecraft Dynamics and Control: An Introduction
9.2.3
Alternative Description for In-Plane Relative Motion
As previously mentioned, the in-plane motion can be separated into secular and periodic parts.
From equations (9.21) and (9.19), it is seen that the secular part is given by
¯x(t) =

x0 −2˙z0
ωo

−(3˙x0 + 6ωoz0) t,
¯z(t) =

4z0 + 2˙x0
ωo

.
(9.23)
Likewise, the periodic part is given by
x p(t) = 2

3z0 + 2˙x0
ωo

sin ωot + ˙z0
ω0
cos ωot

,
z p(t) = ˙z0
ωo
sin ωot −

3z0 + 2˙x0
ωo

cos ωot.
(9.24)
Therefore, making use of (9.23) and (9.24), the in-plane motion (see (9.21) and (9.19)) can be
written as
x(t) = ¯x(t) + x p(t),
z(t) = ¯z(t) + z p(t).
(9.25)
9.2.3.1
Periodic Part
Let us now turn our attention to the periodic part of the in-plane relative motion. We will make
use of the following facts from trigonometry:
A sin ωot + B cos ωot = (A2 + B2)
1
2 cos(ωot + φ),
and
B sin ωot −A cos ωot = (A2 + B2)
1
2 sin(ωot + φ),
where
sin φ =
−A
(A2 + B2)
1
2 , cos φ =
B
(A2 + B2)
1
2 .
Applying these identities to (9.24), the periodic part of the relative motion can be written as
x p(t) = 2P cos(ωot + φ0),
z p(t) = P sin(ωot + φ0),
(9.26)

Spacecraft Formation Flying
199
where
P =

3z0 + 2˙x0
ωo
2
+
 ˙z0
ω0
2 1
2
.
(9.27)
and
sin φ0 =
−

3z0 + 2˙x0
ωo

P
, cos φ0 =
˙z0
ωoP .
(9.28)
Using (9.26), a simple calculation shows that
x p(t)2
(2P)2 + z p(t)2
P2
= cos2(ωot + φ0) + sin2(ωot + φ0) = 1.
That is, the periodic part of the in-plane motion describes an ellipse with semi-major axis 2P
and semi-minor axis P.
Including the secular part of the relative motion, the in-plane relative motion of the follower
relative to the leader describes an ellipse centered at ¯x(t), ¯z(t), as shown in Figure 9.5. An
interesting point to note is that the shape of the ellipse is ﬁxed by the ratio of semi-major to
semi-minor axes, which is always 2. This ellipse is sometimes called a football orbit.
9.2.3.2
Secular Part
Let us now examine the secular part of the in-plane relative motion. Taking the time-derivative
of (9.23) gives
d ¯x
dt = −(3˙x0 + 6ωoz0) = −3ωo
2 ¯z,
d¯z
dt = 0.
This shows that the secular radial offset ¯z is constant. It also shows that since d ¯x
dt = −3ωo
2 ¯z, the
only way to eliminate the secular drift is if the secular radial offset ¯z = 0. This makes sense
leader
follower
(¯x, ¯z)
(xp, zp)
4P
2P
xH
zH
Figure 9.5
In-plane relative motion

200
Spacecraft Dynamics and Control: An Introduction
¯z
follower
leader
Figure 9.6
Secular part of relative motion due to different semi-major axes
if you consider the fact that a non-zero ¯z means a difference in semi-major axis of the leader
and follower orbits (see Figure 9.6). The difference in semi-major axes means a difference in
orbital periods. For bounded relative motion, both the leader and the follower spacecraft must
have the same orbital period.
9.2.4
Further Examination of In-Plane Motion
In Sections 3.6 to 3.8, we saw that an alternative to describing orbital motion in terms of position
and velocity is to use the orbital elements, which are much more useful for visualizing an orbit.
Expressions were derived for transforming from position and velocity to the orbital elements
and vice-versa. We can do likewise for in-plane relative motion. As we have just seen, an
alternative to using x, z, ˙x and ˙z could be the secular motion ¯x, ¯z and the size and phase
of the football orbit given by P and φ = ωot + φ0 respectively. So far, we have seen these
quantities deﬁned in terms of the initial conditions. However, since the equations of motion are
time-invariant (do not explicitly depend on time), the datum t = 0 may be selected arbitrarily.
In particular, this means that we can obtain ¯x, ¯z, P and φ(t) = ωot + φ0 by using the current
values for x(t), z(t), ˙x(t) and ˙z(t) in place of the initial conditions x0, z0, ˙x0 and ˙z0 in (9.23),
(9.27) and (9.28) and setting t = 0 in the right hand side expression for ¯x(t). That is,
¯x(t) = x(t) −2˙z(t)
ωo
,
¯z(t) = 4z(t) + 2˙x(t)
ωo
,
P =

3z(t) + 2˙x(t)
ωo
2
+
 ˙z(t)
ω0
2 1
2
,
sin φ(t) =
−

3z(t) + 2˙x(t)
ωo

P
,
cos φ(t) = ˙z(t)
ωoP .
(9.29)

Spacecraft Formation Flying
201
We will now demonstrate that the equation for ¯z(t) agrees with the previous deﬁnition in terms
of the initial conditions.
Consider the time derivative
d
dt

4z + 2˙x
ωo

= 4˙z + 2¨x
ωo
.
Substituting from the equation of motion for ¨x (9.15) gives
d
dt

4z + 2˙x
ωo

= 0.
Integrating gives
 t
0
d
dτ

4z + 2˙x
ωo

dτ = 0,
which leads to
4z(t) + 2˙x(t)
ωo
= 4z0 + 2˙x0
ωo
,
which shows that the expression for ¯z in terms of the current position and velocity in (9.29)
agrees with the expression given in terms of the initial conditions in (9.23). The other expres-
sions in (9.29) can be demonstrated similarly (try it as an exercise).
Summary
To summarize, the relative in-plane motion can be described as
x(t) = ¯x(t) + 2P cos φ(t),
z(t) = ¯z(t) + P sin φ(t),
(9.30)
where
¯x(t) = x(t) −2˙z(t)
ωo
,
¯z(t) = 4z(t) + 2˙x(t)
ωo
,
P =

3z(t) + 2˙x(t)
ωo
2
+
 ˙z(t)
ω0
21/2
,
sin φ(t) =
−

3z(t) + 2˙x(t)
ωo

P
,
cos φ(t) = ˙z(t)
ωoP .

202
Spacecraft Dynamics and Control: An Introduction
9.2.5
Out-of-Plane Motion - Revisited
We have seen that the out-of-plane relative motion is given by
y(t) = y0 cos ωot + ˙y0
ωo
sin ωot.
Similar to the in-plane periodic motion, this can be rewritten as
y(t) = Q sin(ωot + α0)
(9.31)
where
Q =

y2
0 +
 ˙y0
ω0
21/2
, sin α0 = y0
Q , cos α0 =
˙y0
ωoQ .
Also, as for in-plane periodic motion, the amplitude Q can be computed from the relative
position and velocity at any time by
Q =

y(t)2 +
 ˙y(t)
ω0
21/2
.
(9.32)
Similarly, the phase α(t) = ωot + α0 can be computed from
sin α(t) = y(t)
Q , cos α(t) = ˙y(t)
ωoQ .
We will now demonstrate that the above equations for α(t) agree with the previous deﬁnition
in terms of the initial conditions. Deﬁne an angle β(t) by the relationships sin β(t) = y(t)
Q and
cos β(t) =
˙y(t)
ωoQ where Q = (y(t)2 + ( ˙y(t)
ω0 )2)1/2. Note that we have not yet established equality
with α(t), so we call it β(t). At time t = 0, we have
sin β(0) = y(0)
Q
and cos β(0) = ˙y(0)
ωoQ ,
which shows that β(0) = α0 by the deﬁnition of α0. Now, take the time-derivative
d
dt (cos β(t)) = −˙β sin β = ¨y(t)
ωoQ ,
Note that we have used the fact that Q is constant (although we have not demonstrated it).
Rearranging gives
˙β = −
¨y(t)
ωoQ sin β .

Spacecraft Formation Flying
203
Substituting for sin β from its deﬁnition, and for ¨y from the equation of motion (9.13) gives
˙β = −(−ω2
oy)
ωoQ y(t)
Q
= ωo.
Integrating this gives
 t
0
˙βdτ =
 t
0
ωodτ,
which leads to
β(t) = β(0) + ωot.
Since we have already established that β(0) = α0, we have
β(t) = α(t) = α0 + ωot,
as required. The relationship for Q can be demonstrated similarly (try it as an exercise).
9.3
Special Types of Relative Orbits
9.3.1
Along-Track Orbits
We note from the solutions for in-plane and out-of-plane motion (equations (9.30) and (9.31))
that if we do not want any periodic relative motion, then the amplitudes P and Q must be
equal to zero. From (9.29), the requirement that P = 0 means that
3z(t) + 2˙x(t)
ωo
= 0,
˙z(t)
ω0
= 0.
Additionally, we require that there be no secular drift. As shown in Section 9.2.3.2, this means
that we must have ¯z = 0, which from (9.29) means that
4z(t) + 2˙x(t)
ωo
= 0.
The only way that the above three equations can be satisﬁed simultaneously is if
˙x = ˙z = z = 0.
That is, the only possible bounded non-periodic in-plane motion is
x(t) = constant,
z(t) = 0,

204
Spacecraft Dynamics and Control: An Introduction
Δθ
leader
follower
x
orbit
Figure 9.7
Along-track relative orbit
What this means physically is that both the leader and follower orbits are circular with the
same radius. The only difference is in the true anomalies, which results in the constant x(t)
(along-track) offset.
The requirement that Q = 0 means from (9.32) that
y(t) = 0.
That is, there is no out of plane motion. This means physically that the leader and follower
orbits have the same inclination and right ascension of the ascending node. Such a relative
orbit is called an along-track relative orbit (ATO). See Figure 9.7.
9.3.2
Projected Elliptical Orbits
The projection of the relative motion on the ⃗xH-⃗yH plane is of interest, since this plane is
facing the Earth directly below (which is often to be observed). As shown in Section 9.2, the
⃗xH and ⃗yH components of the natural relative motion can be written as
x(t) = ¯x(0) −3ωo
2 ¯z(0)t + 2P cos(ωot + φ0),
(9.33)
and
y(t) = Q sin(ωot + α0)
(9.34)
respectively, where
¯x(0) = x0 −2˙z0
ωo
,
¯z(0) = 4z0 + 2˙x0
ωo
,
P =

3z0 + 2˙x0
ωo
2
+
 ˙z0
ω0
2 1
2
,

Spacecraft Formation Flying
205
sin φ0 =
−

3z0 + 2˙x0
ωo

P
,
cos φ0 =
˙z0
ωoP ,
Q =

y2
0 +
 ˙y0
ω0
2 1
2
,
sin α0 = y0
Q ,
cos α0 =
˙y0
ωoQ .
By appropriate selection of the initial conditions, we can obtain a relative motion whose
projection on the ⃗xH-⃗yH is an ellipse of a given size speciﬁed by P and Q. This is called a
Projected Elliptical Orbit (PEO). Let us see how to do this.
First of all, the relative motion must be bounded (no secular drift). Therefore, we must have
¯z(0) = 4z0 + 2˙x0
ωo
= 0,
which implies that
˙x0 = −2ωoz0.
(9.35)
Next, the center of the ellipse should be at the origin. That is,
¯x(0) = x0 −2˙z0
ωo
= 0,
which implies that
˙z0
ωo
= x0
2 .
(9.36)
Substituting these into the expressions for the amplitude P and initial phase φ0, we have
P =

3z0 + 2
ωo
(−2ωoz0)
2
+
x0
2
2
 1
2
,
=

z2
0 +
x0
2
2 1
2
,

206
Spacecraft Dynamics and Control: An Introduction
and
sin φ0 = z0
P , cos φ0 = x0
2P .
(9.37)
Therefore, by appropriately selecting x0 and z0, we can determine the size P and the initial
phase φ0.
We can see from (9.33) and (9.34) that for the projected relative motion to describe an
ellipse, the initial phases must satisfy
α0 = φ0, or α0 = φ0 + π.
This means that either
sin α0 = sin φ0 and cos α0 = cos φ0,
or
sin α0 = −sin φ0 and cos α0 = −cos φ0.
In terms of the initial conditions, this means that
y0
Q = z0
P and
˙y0
ω0Q = x0
2P ,
(9.38)
or
y0
Q = −z0
P and
˙y0
ωoQ = −x0
2P .
(9.39)
We can now show that the projected motion with these initial conditions is an ellipse. From
(9.33) and (9.34),
x(t)2
4P2 + y(t)2
Q2
= cos2(ωot + φ0) + sin2(ωot + α0) = 1,
when α0 = φ0 or α0 = φ0 + π. It is clear that when 2P > Q, then 2P is the semi-major axis
and Q is the semi-minor axis. When 2P < Q, the roles are reversed.
Summary
To summarize, given a desired PEO with speciﬁed semi-major and semi-minor axes 2P and
Q respectively (or vice versa), and a speciﬁed initial phase φ0, the initial conditions may be
obtained as follows:
1. From (9.37) x0 = 2P cos φ0 and z0 = P sin φ0.
2. From (9.35) and (9.36), ˙x0 = −2ωoz0 and ˙z0 = ωox0/2.
3. From (9.38), y0 = Qz0/P and ˙y0 = ω0Qx0/2P.

Spacecraft Formation Flying
207
9.3.3
Projected Circular Orbits
A special case of the projected elliptical orbit is when the projected motion is circular. This is
called a Projected Circular Orbit (PCO). In this case, the projected semi-major and semi-minor
axes must be equal, that is
2P = Q,
which means that the radius of the projected circular orbit is R = 2P.
The phase matching conditions in (9.38) and (9.39) become
y0 = z0Q
P
= 2z0 and ˙y0 = ωox0Q
2P
= ωoxo,
(9.40)
or
y0 = −2z0 and ˙y0 = −ωoxo.
(9.41)
To an observer viewing the formation along the ⃗zH axis, the follower appears to orbit around
the leader in a circle with radius R.
Summary
To summarize, given a desired PCO with speciﬁed radius R, and a speciﬁed initial phase φ0,
the initial conditions may be obtained as follows:
1. From (9.37) x0 = R cos φ0 and z0 = R
2 sin φ0.
2. From (9.35) and (9.36), ˙x0 = −2ωoz0 and ˙z0 = ωox0/2.
3. From (9.40), y0 = 2z0 and ˙y0 = ω0x0.
Notes
This chapter has provided a brief introduction to the subject of spacecraft formation ﬂying. In
doing so, we have made some signiﬁcant simplifying assumptions, in particular that there are
no perturbing forces acting on the spacecraft, and that the leader spacecraft is in a circular orbit.
We have not considered the spacecraft formation control problem at all. Spacecraft formation
ﬂying has been a topic of signiﬁcant interest in recent years, and there are extensive results
in the publicly available literature. A detailed overview of the most signiﬁcant developments
may be found in Alfriend et al. (2010), which is the ﬁrst comprehensive book published on
the subject.
Reference
Alfriend KT, Vadali SR, Gurﬁl P, How JP and Breger LS 2010 Spacecraft Formation Flying: Dynamics, control and
navigation. Elsevier, Burlington, MA.


10
The Restricted Three-Body
Problem
10.1
Formulation
Consider the three masses that interact gravitationally in Figure 10.1.
Assumptions
(i) The gravitational effect of m3 on m2 and m1 is negligible. This permits a two-body
solution for the motion of m1 and m2.
(ii) The two-body motion of m1 and m2 is circular about their mutual center of mass.
(iii) The initial position and velocity of m3 are in the plane of the two-body motion of m1 and
m2. Therefore m3 remains in this plane.
Examples are sun-planet-moon systems and Earth-Moon-spacecraft systems. We shall treat
the restricted problem in the context of the Earth-Moon-spacecraft system. In this case, we
identify m1 with the mass of the Earth and m2 with the Lunar mass. The origin of F I will
now be placed at their mass center.
This form of the Restricted Three-Body Problem is more correctly called the Circular
Restricted Three-Body Problem but we will drop ‘Circular’ from the title since it is the only
version of the problem that we consider. Now consider Figure 10.2. Here, X-Y is an inertial
frame centered at the Earth-Moon center of mass. The coordinates x-y refer to the position
of m3 in a frame rotating with an angular velocity equivalent to the mean motion of the
Earth-Moon system:
ω =

G(m1 + m2)/r3
12, r12 = r1 + r2.
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

210
Spacecraft Dynamics and Control: An Introduction
FI
O
.1
r1
r=r3
r2
m1
m3
m2
Figure 10.1
The three-body problem
Here, we have introduced r12 for the distance between the Earth and the Moon. Note that
m1r1 = m2r2
r1 =
m2
m1 + m2
r12
r2 =
m1
m1 + m2
r12
since the origin is the center of mass.
Given the position of m3 and the angular velocity of the x-y frame,
⃗r = x⃗x1 + y⃗y1
⃗ω = ω⃗z1,
let us determine the acceleration of m3, expressed in the rotating frame:
¨⃗r =
◦◦
⃗r +2⃗ω×
◦
⃗r +⃗ω × (⃗ω × ⃗r).
X
x
Y
y
ωt
r1
r2
r
m3
m1
m2
Figure 10.2
The restricted three-body problem

The Restricted Three-Body Problem
211
m2
m1
r2
r1
d2
d1
x1
y1
m3
r
Figure 10.3
The three-body problem geometry
Here,
◦◦
⃗r = ¨x⃗x1 + ¨y⃗y1,
⃗ω×
◦
⃗r = −˙yω⃗x1 + ˙xω⃗y1,
⃗ω × (⃗ω × ⃗r) = −ω2x⃗x1 −ω2y⃗y1.
Hence, the acceleration of m3 is
¨⃗r = (¨x −2 ˙yω −ω2x)⃗x1 + ( ¨y + 2˙xω −ω2y)⃗y1.
(10.1)
The gravitational force (per unit mass) acting on m3 due to m1 is
⃗f1 = −Gm1
d3
1
(⃗r −⃗r1)
= −Gm1
d3
1
[(x −r1)⃗x1 + y⃗y1]
(10.2)
where d1 =

(x −r1)2 + y2. The gravitational force (per unit mass) acting on m3 due
to m2 is
⃗f2 = −Gm2
d3
2
(⃗r −⃗r2)
= −Gm2
d3
2
[(x + r2)⃗x1 + y⃗y1]
(10.3)
where d2 =

(x + r2)2 + y2.
10.1.1
Equations of Motion
Newton’s second law for m3 is:
¨⃗r = ⃗f1 + ⃗f2.

212
Spacecraft Dynamics and Control: An Introduction
Using equations (10.1)–(10.3) we arrive at
¨x −2 ˙yω −ω2x = −Gm1
d3
1
(x −r1) −Gm2
d3
2
(x + r2) = f (x, y),
(10.4)
¨y + 2˙xω −ω2y = −G
m1
d3
1
+ m2
d3
2

y = g(x, y).
(10.5)
These are the differential equations governing the motion of a spacecraft in the rotating system.
Given the initial conditions x(0), y(0), ˙x(0), and ˙y(0), a unique solution for x(t) and y(t) can
be determined numerically. It was proven by Poincar´e that no analytical solution exists.
10.2
The Lagrangian Points
Let us look for equilibrium solutions of equations (10.4) and (10.5), that is constant solutions
for x and y and hence ˙x = ˙y = ¨x = ¨y = 0. Making these substitutions in equations (10.4) and
(10.5) gives:
−ω2x = −G
m1
d3
1
(x −r1) + m2
d3
2
(x + r2)

= f (x, y)
(10.6)
−ω2y = −G
m1
d3
1
+ m2
d3
2

y = g(x, y).
(10.7)
These represent two nonlinear equations in the two unknowns x and y. From equation (10.7),
we have

G m1
d3
1
+ G m2
d3
2
−ω2

y = 0.
Hence, we must have:
case (i) ⇒y = 0
(10.8)
or
case (ii) ⇒G
m1
d3
1
+ m2
d3
2

= ω2.
(10.9)
10.2.1
Case (i)
Since y = 0, d1 = |x −r1| and d2 = |x + r2|. Substituting this into (10.6) gives
ω2x = Gm1(x −r1)
|x −r1|3
+ Gm2(x + r2)
|x + r2|3
.

The Restricted Three-Body Problem
213
This equation has three real roots which in the case of the Earth-Moon system (m2/(m1 +
m2) = 0.01213) are given by:
L1 ⇒x = −0.838r12,
L2 ⇒x = −1.156r12,
L3 ⇒x = 1.005r12.
The symbol L denotes Lagrange (the discoverer of these points).
10.2.2
Case (ii)
From (10.9),
Gm1
d3
1
+ Gm2
d3
2
= ω2 = G(m1 + m2)
r3
12
.
Suppose that d1 = d2. Then the above implies that
d3
1 = d3
2 = G(m1 + m2)
ω2
= r3
12.
Therefore,
d1 = d2 = r1 + r2.
Notice that this choice of d1 and d2 reduces (10.6) to m1r1 −m2r2 = 0 which is an identity.
This solution corresponds to L4 and L5 which are the triangle or equilateral libration points.
They are shown below with L1, L2, and L3 for the Earth-Moon system:
x
y
L2
L1
L3
L4
L5
m2
m1
Figure 10.4
The lagrangian points

214
Spacecraft Dynamics and Control: An Introduction
L1, · · · , L5 correspond to points with zero relative velocity and acceleration. A small mass
placed at these points remains motionless with respect to the Earth and Moon.
10.3
Stability of the Lagrangian Points
Let (xe, ye) denote the components of a Lagrangian point and expand
x(t)
y(t)

=
xe
ye

+
δx(t)
δy(t)

(10.10)
where δx and δy denote small perturbations. Linearizing leads to linear differential equations
whose stablity can be tested via eigenvalue analysis. This path will be followed here.
Substituting equation (10.10) into equations (10.4) and (10.5) leads to
δ ¨x −2ωδ ˙y −ω2(xe + δx) = f (xe + δx, ye + δy),
(10.11)
δ ¨y + 2ωδ ˙x −ω2(ye + δy) = g(xe + δx, ye + δy).
(10.12)
Linearizing the right-hand sides, we have
f (xe + δx, ye + δy) .= f (xe, ye) + ∂f
∂x (xe, ye)


	
δx + ∂f
∂y (xe, ye)


	
δy,
A
B
g(xe + δx, ye + δy) .= g(xe, ye) + ∂g
∂x (xe, ye)


	
δx + ∂g
∂y (xe, ye)


	
δy.
C
D
Substituting these expressions into equations (10.11) and (10.12) while noting that since
(xe, ye) satisfy equations (10.6) and (10.7), i.e.,
−ω2xe = f (xe, ye)
−ω2ye = g(xe, ye)
we arrive at
δ ¨x −2ωδ ˙y −(ω2 + A)δx −Bδy = 0,
(10.13)
δ ¨y + 2ωδ ˙x −Cδx −(ω2 + D)δy = 0.
(10.14)
Since these are linear constant-coefﬁcient differential equations, we shall look for solutions of
the form
δx(t)
δy(t)

=
¯x
¯y

eλt.
(10.15)

The Restricted Three-Body Problem
215
Substituting this into equations (10.13) and (10.14) yields
eλt
 λ2 −ω2 −A −2ωλ −B
2ωλ −C
λ2 −ω2 −D



	
¯x
¯y

=
0
0

.
T(λ)
For nontrivial solutions [¯x ¯y] ̸= [0 0], we must have det T(λ) = 0. This leads to a quartic
equation in λ:
λ4 + (2ω2 −A −D)λ2 + 2ω(B −C)λ + (ω2 + A)(ω2 + D) −BC = 0.
Designating the roots of this equation by {λ1, λ2, λ3, λ4}, stability is equivalent to boundedness
of the temporal solutions eλit or Re{λi} ≤0, i = 1, · · · , 4 (in the event that Re{λi} = 0 we also
require that the roots be distinct). If any of the roots satisfy Re{λi} > 0, then the equilibrium
point is unstable.
10.3.1
Comments
1. It can be shown that L1, L2, L3 are unstable.
2. The triangle points L4 and L5 are stable. That is, small motions in the vicinity of L4 and L5
tend to remain in the vicinity. The stability property of L4 and L5 for the restricted problem
is only true if
m2
m1 + m2
< 0.0385 or
m2
m1 + m2
> 0.9615.
For the Earth-Moon system, m2/(m1 + m2) = 0.01213 (this is the largest value of this mass
ratio in the solar system).
3. The L4 and L5 points of the Sun-Jupiter system contain the Trojan asteroids. Voyager
discovered several objects in the triangle points of moons within Saturn’s system.
4. The Earth-Moon triangle points are actually unstable when the effects of the sun are
accounted for.
10.4
Jacobi’s Integral
For the two-body problem, we are able to establish some very useful constants of the motion:
E = 1
2v2 −μ/r
⃗h = ⃗r × ⃗v
⃗p = m1⃗v1 + m2⃗v2.

216
Spacecraft Dynamics and Control: An Introduction
For the restricted three-body problem, there is only one exact conservation law. Consider
equations (10.4) and (10.5). Multiply equation (10.4) by ˙x and equation (10.5) by ˙y and add
the results:
˙x ¨x + ˙y ¨y −ω2(x ˙x + y ˙y) = −G
m1
d3
1
(x −r1)˙x + m2
d3
2
(x + r2)˙x +

m1
d3
1
+ m2
d3
2

y ˙y

.
This can be written as
1
2
d
dt
˙x2 + ˙y2 −ω2(x2 + y2)

= G d
dt
m1
d1
+ m2
d2

or
d
dt
1
2(˙x2 + ˙y2 −ω2(x2 + y2)) −G

m1
d1
+ m2
d2

= 0.
(10.16)
Deﬁning the potential energy-like function
ϒ(x, y) = G

m1
d1
+ m2
d2

+ ω2
2 (x2 + y2),
equation (10.16) implies that
1
2(˙x2 + ˙y2) −ϒ(x, y) = CJ = constant
(10.17)
which is known as Jacobi’s integral. This is analogous to the energy E for the two-body
problem. However 1
2(˙x2 + ˙y2) is not the true kinetic energy since x and y are measured in the
rotating frame. Also, ϒ(x, y) contains the true potential energy and a contribution stemming
from “centrifugal forces” [ 1
2ω2(x2 + y2)].
The value of CJ (the Jacobi constant) is determined by the initial conditions x(0), y(0),
˙x(0), and ˙y(0).
10.4.1
Hill’s Curves
Jacobi’s integral, equation (10.17), can be rewritten as
ϒ(x, y) + CJ = 1
2(˙x2 + ˙y2) ≥0.
(10.18)
Hence, ϒ(x, y) ≥−CJ which deﬁnes admissible values of (x, y) in the x-y plane for a given
value of CJ. Values of (x, y) for which
ϒ(x, y) < −CJ

The Restricted Three-Body Problem
217
-2.0
-1.0
0.0
1.0
2.0
-2.0
-1.0
0.0
1.0
2.0
-2.0
-1.0
0.0
1.0
2.0
-2.0
-1.0
0.0
1.0
2.0
-2.0
-1.0
0.0
1.0
2.0
-2.0
-1.0
0.0
1.0
2.0
-2.0
-1.0
0.0
1.0
2.0
-2.0
-1.0
0.0
1.0
2.0
-2.0
-1.0
0.0
1.0
2.0
-2.0
-1.0
0.0
1.0
2.0
x/r12
y/r12
(a) C  = -1.680 G(m  + m  )/r
J
1      2 12
x/r12
y/r12
(b) C  = -1.594 G(m  + m  )/r
J
1      2 12
x/r12
y/r12
(c) C  = -1.586 G(m  + m  )/r
J
1      2 12
x/r12
y/r12
(d) C  = -1.576 G(m  + m  )/r
J
1      2 12
x/r12
y/r12
(e) C  = -1.506 G(m  + m  )/r
J
1      2 12
x/r12
y/r12
(f) C  = -1.490 G(m  + m  )/r
J
1      2 12
L
L
L
2
1
3
L
L
4
5
m
m
1
2
accessible region
forbidden region
-2.0
-1.0
0.0
1.0
2.0
-2.0
-1.0
0.0
1.0
2.0
Figure 10.5
Hill’s curves
are not physically obtainable (forbidden regions). The boundary between admissible and
forbidden regions satisﬁes
ϒ(x, y) + CJ = 0
(10.19)
These curves for values of CJ are called Hill’s curves. From equations (10.18) and (10.19),
we see that they are also curves of zero relative velocity (˙x = ˙y = 0).

218
Spacecraft Dynamics and Control: An Introduction
10.4.2
Comments on Figure 10.5
(a) Motion is physically possible in the vicinity of the Earth or the Moon. This is essentially a
two-body orbit of either the Earth or the Moon. Motion outside the larger circle is possible
which is two-body motion far from either primary. Note that ﬂight between the Earth and
Moon is not possible.
(b) For this value of CJ, motion between the Earth and Moon is just possible. If the spacecraft
reaches L1 with zero relative velocity, it will continue on to the Moon. This corresponds
to minimum energy transfer to the Moon.
(c) Now that inner and outer accessible regions touch at L2, escape from the Earth-Moon
system is possible. This is the minimum energy escape trajectory and requires a close
ﬂy-by of the Moon.
(d) As CJ is increased, the opening at L2 widens further and escape is possible through a
wider corridor.
(e) For this value of CJ, the inner and outer curves touch at L3. The forbidden region still
encloses L4 and L5.
(f) As CJ is increased further, the teardrop-shaped regions enclosing the forbidden regions
(and L4 and L5) shrink further until they disappear at L4 and L5. The triangle points are
the most costly points in the x-y plane to reach.
Notes
This chapter has provided a brief introduction to the circular restricted three-body problem. In
particular, we have restricted ourselves to motion within the orbital plane of m1 and m2, whose
orbits are assumed to be circular. Further treatment of the restricted three-body problem may
be found in books such as Battin (1999), Schaub and Junkins (2003) and Wie (2008).
References
Battin RH 1999 An Introduction to the Mathematics and Methods of Astrodynamics, Revised Edition. American
Institute of Aeronautics and Astronautics, Reston, VA.
Schaub H and Junkins JL 2003 Analytical Mechanics of Space Systems. American Institute of Aeronautics and
Astronautics, Reston, VA.
Wie B 2008 Space Vehicle Dynamics and Control 2nd edn. American Institute of Aeronautics and Astronautics,
Reston, VA.

11
Introduction to Spacecraft
Attitude Stabilization
Typically, the purpose of putting a satellite in orbit is to point an instrument (called the payload)
at something. For example, for an astronomy mission, the objective is to point a telescope at a
distant star or some other astronomical feature. For an Earth observation satellite, the purpose
is to point a camera, radar or other instrument toward a desired location on the Earth below.
For a communications satellite, the transmitting and receiving antennas need to point toward
the Earth. These are but a few examples. What it means is that the attitude (orientation) of
the spacecraft needs to be stabilized to some desired attitude. To achieve this, some means of
controlling the attitude is needed. This can be done both actively and passively, depending on
the desired attitude, and how accurately it must be maintained. Passive methods of attitude
stabilization make use of the spacecraft’s natural dynamics to ensure a stable equilibrium
at the desired attitude, and are useful when accuracy requirements are coarse. For active
control, actuators capable of affecting the attitude are installed on the spacecraft. We shall
discuss different types of actuators in Chapter 26. For the present time, it sufﬁces to consider
the actuators as a means to apply a torque to the spacecraft. In many cases, passive control
methods are augmented by active control methods. We shall examine some passive methods
of attitude stabilization in Chapters 13 to 16, but we shall place the majority of our focus on
active control methods in Chapters 17 to 25. Now, the question arises as to what torque the
actuator should apply to the spacecraft. This is the purpose of the control system. The control
system typically consists of three parts:
• Navigation - where am I?
• Guidance - where do I want to be?
• Control - how do I get there?
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

220
Spacecraft Dynamics and Control: An Introduction
Navigation
Guidance
Control
Actuators
Spacecraft Dynamics
Sensors
Attitude
Estimate
Attitude
Error
Torque
Command
Applied
Torque
True
Attitude
Measurements
Figure 11.1
Typical spacecraft control system
In a bit more detail, the Navigation part determines the current spacecraft attitude from attitude
sensor measurements (this is called attitude determination, and will be covered in more detail
in Chapter 25). The Guidance part determines what the desired spacecraft attitude is, and
what the error in attitude is (by using information from the Navigation part). The Control part
determines what torque should be applied to the spacecraft to correct the attitude error, and
sends this as a command to the attitude actuators. In order to determine the torque required to
correct the attitude error, it is important to understand how the spacecraft attitude will respond
to the applied torque. This response is governed by the spacecraft attitude dynamics. This is
why we will study both the spacecraft attitude dynamics, as well as its control. A spacecraft
control system can be represented in block-diagram form as shown in Figure 11.1. As we
know from Chapter 1, spacecraft motion has both a translational and rotational component.
The translational part is the subject of orbital mechanics, and we have studied these in detail in
Chapters 3 to 10. Often times, a means of orbit control is needed as well. However, this typically
consists of corrections to the orbit applied occasionally (at discrete instances separated by long
periods of time). We have already seen how corrections may be made to the orbit by making
small impulsive velocity changes. This type of control is quite different from the control that
is required for the spacecraft attitude, which is a continuous process (all the time).
11.1
Introduction to Control Systems
A control system is the brain of any system (aerospace, mechanical, electrical, mechatronic,
chemical, etc.). The purpose of a control system is to make the system perform a desired task.
In the case of a spacecraft, the purpose of the control system is to make the spacecraft achieve
and maintain a desired attitude.
Any system to be controlled has parameters the control system can change to make the
system achieve the desired behavior. These parameters are called the control inputs or plant
input. In the case of a spacecraft, the actuator torques are the control inputs. How the
control system determines the inputs is the subject of control theory. There are two types of
control: open-loop control and closed-loop control.
11.1.1
Open-loop versus Closed-loop
You might ask the question: if we understand the spacecraft attitude dynamics, and we know
what attitude proﬁle we want the spacecraft to follow, why can’t we just determine the required
torque for that attitude proﬁle beforehand by inverting the dynamics and then apply it? This

Introduction to Spacecraft Attitude Stabilization
221
Plant
Navigation
Control
y (output)
v (measurement noise)
d (disturbance)
u (input)
e (error)
r (reference)
+
−
+
+
+
+
Figure 11.2
Typical feedback control structure
is an example of open-loop control, which means that there is no feedback of information
to the control system. The problem with this approach is that it is like driving your car with
your eyes closed. It would work if you know the curves in the road exactly, and you know
the exact initial location and orientation of your car. However, if there are any errors in your
knowledge, you will eventually veer off-course, and you won’t have the ability to react to
any unexpected obstacles that might arise. For a spacecraft (and any system in general), the
dynamics are not known exactly, and the control system requires feedback to continuously
correct for these errors. This is called closed-loop control, also known as feedback control.
For the above-mentioned reasons, feedback control is the preferred approach.
11.1.2
Typical Feedback Control Structure
Figure 11.2 shows a typical feedback control structure. The system being controlled is called
the plant, which in our case is the spacecraft attitude kinematics and dynamics. Its behavior
is governed by the plant dynamics, which are typically described by a set of differential
equations. We need to be able to measure the current state of the plant to be able to provide
feedback information to the controller. The quantity that is measured is called the plant output
(labeled y). In the case of spacecraft attitude control, the output depends on what the available
sensors can measure (discussed in more detail in Chapter 26), and could be the attitude (in the
case of a star-tracker), the direction of the sun in spacecraft body coordinates (in the case of a
sun-sensor), the Earth’s magnetic ﬁeld vector in spacecraft body coordinates (in the case of a
magnetometer), etc. In all of these cases, the output is a function of the quantity we are trying
to control, which is the attitude.
The sensors themselves, make measurements of the output. However, since no sensor is
perfect, the measurement is corrupted by sensor noise (labeled v).
Because the sensors cannot always directly measure the quantity we wish to control, the
purpose of the navigation block is to determine that quantity from the available measurements.
In the case of spacecraft attitude control, the function of the navigation block is to determine
the spacecraft attitude from the available measurements (such as the sun and Earth magnetic
ﬁeld vectors).

222
Spacecraft Dynamics and Control: An Introduction
A reference (or desired state), r, is deﬁned (in our case, a desired attitude). The control
block typically takes as input the error (in our case the error in attitude) and determines what
the control input (labeled u) should be and sends this as a command to the actuator (in our
case it issues a torque command). The actuator then creates this as an input to the plant.
Unfortunately, there may also be additional disturbances acting on the plant (labeled d). In our
case, these are environmental disturbance torques acting on the spacecraft (these are treated
in detail in Chapter 12).
11.2
Overview of Attitude Representation and Kinematics
This section contains a brief summary of the relevant details from Chapter 1 for the study of
spacecraft attitude kinematics.
When talking about the attitude of a spacecraft, it only makes sense if it is relative to
something. For example, the inertial attitude is the attitude relative to an inertial frame F G.
The attitude can be fully described by the orientation of a reference frame embedded in the
spacecraft Fb (called a body-ﬁxed frame) relative to the other frame.
As we have seen in Section 1.3, the orientation of Fb relative to FG is fully described by the
rotation matrix CbG. Therefore, CbG may be used as an attitude representation. Alternatively,
we could use any parameterization of CbG, such as an Euler rotation sequence or quaternions
(or other parameterizations). For example, a common Euler rotation sequence is a 3-2-1
rotation sequence given by:
1. A rotation ψ about the original z-axis (called a “yaw” rotation).
2. A rotation θ about the intermediate y-axis (called a “pitch” rotation).
3. A rotation φ about the transformed x-axis (called a “roll” rotation).
The angles ψ, θ and ψ equivalently represent the attitude. Indeed, they fully parameterize the
rotation matrix CbG as
CbG(φ, θ, ψ) =
⎡
⎣
cθcψ
cθsψ
−sθ
sφsθcψ −cφsψ
sφsθsψ + cφcψ
sφcθ
cφsθcψ + sφsψ
cφsθsψ −sφcψ
cφcθ
⎤
⎦,
(11.1)
where sb = sin b and cb = cos b. Conversely, given any rotation matrix CbG, the corresponding
Euler angles may be uniquely determined, unless the rotation matrix corresponds to the
singularity of the Euler sequence (which occurs when θ = ±90◦for the 3-2-1 Euler sequence).
The relevant expressions can be found in Section 1.3.3. Note that every Euler rotation sequence
has a singularity.
The quaternion is a four-parameter representation of the attitude. Unlike an Euler sequence,
it does not possess a singularity. The quaternion consists of a vector part ϵ and a scalar part η,
satisfying a unit norm constraint ϵT ϵ + η2 = 1. The rotation matrix in terms of the quaternion
is given by
CbG =

2η2 −1

1 + 2ϵϵT −2ηϵ×.
(11.2)

Introduction to Spacecraft Attitude Stabilization
223
Conversely, given a rotation matrix CbG, the corresponding quaternion may readily be obtained.
The relevant expressions can be found in Section 1.3.4.
Since Fb is embedded in the spacecraft, the spacecraft has angular velocity ⃗ωbG relative to
FG (recall that by ⃗ωbG, we mean the angular velocity of frame Fb relative to frame FG). If we
express ⃗ωbG in the body frame Fb as
⃗ωbG = ⃗F T
b ωbG,
the attitude kinematics in terms of the rotation matrix are
˙CbG = −ω×
bGCbG.
(11.3)
Equivalently, the attitude kinematics in terms of a 3-2-1 Euler rotation sequence are
⎡
⎣
˙φ
˙θ
˙ψ
⎤
⎦=
⎡
⎣
1
sin φ tan θ
cos φ tan θ
0
cos φ
−sin φ
0
sin φ sec θ
cos φ sec θ
⎤
⎦ωbG.
(11.4)
In terms of the quaternion, the attitude kinematics are
˙ϵ = 1
2

η1 + ϵ×
ωbG,
˙η = −1
2ϵT ωbG.
(11.5)
11.3
Overview of Spacecraft Attitude Dynamics
This section contains a brief summary of the relevant details from Chapter 2 for the study of
spacecraft attitude dynamics.
As we have seen in Section 2.3, the spacecraft angular momentum about the center of mass
satisﬁes
˙⃗hc = ⃗Tc,
(11.6)
where (˙) denotes the inertial time-derivative (as seen in FG), ⃗hc is the angular momentum
vector about the center of mass and ⃗Tc is the total external torque about the center of mass.
Using the relation ˙⃗r = ˚⃗r + ⃗ω × ⃗r, taking ( ˚ ) to mean time differentiation as seen in the
spacecraft body frame Fb, we can rewrite the attitude dynamics (11.6) as
˚⃗hc + ⃗ωbG × ⃗hc = ⃗Tc.
(11.7)
As seen in Section 2.3, for a rigid body, the angular momentum vector expressed in Fb is given
by
⃗hc = ⃗F T
b IωbG,

224
Spacecraft Dynamics and Control: An Introduction
where I is the moment of inertia matrix about the center of mass expressed in body coor-
dinates. Since Fb is embedded in the spacecraft, ˙I = 0. From this, we have that in body
coordinates,
˚⃗hc = ⃗F T
b I ˙ωbG,
so that in body coordinates the attitude dynamics become
I ˙ωbG + ω×
bGIωbG = Tc,
(11.8)
where ⃗Tc = ⃗F T
b Tc. These are called Euler’s Equations. Equations (11.3) and (11.8) fully
describe the spacecraft attitude motion relative to an inertial frame FG (when the spacecraft
consists of a single rigid body).
11.3.1
Properties of the Inertia Matrix - A Summary
Here is a summary of some important facts from Section 2.4.
1. The inertia matrix is real, positive deﬁnite and symmetric, i.e. I = IT and xT Ix > 0 for all
non-zero vectors x ̸= 0.
2. The inertia matrix is dependent on the orientation of Fb in the body (we can embed the
frame Fb with arbitrary orientation). Let us consider two body-ﬁxed frames Fb1 and Fb2.
Let I1 be the inertia matrix as computed in Fb1, and I2 be the inertia matrix as computed in
Fb2. Then, I2 and I1 are related by
I2 = C21I1C12,
where C21 is the rotation matrix representing the rotation from frame Fb1 to frame Fb2.
3. It is always possible to ﬁnd a body-ﬁxed frame Fb,p such that the inertia matrix as computed
in Fb,p is diagonal
Ip =
⎡
⎣
Ix
0
0
0
Iy
0
0
0
Iz
⎤
⎦.
The frame Fb,p is called a principal axes frame, and is a useful frame to work with. The
attitude dynamics are greatly simpliﬁed when expressed in this frame. Since Ip > 0, it
must be that Ix > 0, Iy > 0, and Iz > 0. Ix, Iy and Iz are called the principal moments
of inertia.

Introduction to Spacecraft Attitude Stabilization
225
Returning to the attitude dynamics (11.8), let us assume that Fb is a principal axes frame,
and let
ωbG =
⎡
⎣
ωx
ωy
ωz
⎤
⎦,
Tc =
⎡
⎣
Tx
Ty
Tz
⎤
⎦.
Then, Euler’s equations (11.8) become
Ix ˙ωx + (Iz −Iy)ωyωz = Tx,
Iy ˙ωy + (Ix −Iz)ωxωz = Ty,
Iz ˙ωz + (Iy −Ix)ωxωy = Tz.
(11.9)


12
Disturbance Torques
on a Spacecraft
There are a number of external torques acting on a spacecraft which disturb the attitude motion.
For a spacecraft in the vicinity of the Earth, the major disturbance torques are:
1. Magnetic torque,
2. Solar radiation pressure torque,
3. Aerodynamic torque, and
4. Gravity-gradient torque.
We shall now look at each one in some detail.
12.1
Magnetic Torque
The cause of the magnetic torque is the interaction between the Earth’s magnetic ﬁeld and
any magnetization of the spacecraft (electronic components create an equivalent current loop,
which results in a magnetic dipole).
The torque on the spacecraft due to the interaction of the Earth’s magnetic ﬁeld ⃗b and the
spacecraft residual magnetic dipole moment ⃗m is given by
⃗Tm = ⃗m × ⃗b.
(12.1)
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

228
Spacecraft Dynamics and Control: An Introduction
surface normal
incident radiation
force on surface
TOTAL ABSORPTION
surface normal
incident radiation
force on surface
DIFFUSE REFLECTION
reﬂected radiation
surface normal
incident radiation
force on surface
SPECULAR REFLECTION
reﬂected radiation
Figure 12.1
Interaction of radiation with surface
12.2
Solar Radiation Pressure Torque
The output from the sun (photons) contain momentum, which produce an effective pressure
on spacecraft surfaces (due to momentum transfer), with magnitude near Earth of
p = 4.5 × 10−6N/m2.
There are different modes of interaction between the solar radiation and the spacecraft surface,
which depends on the spacecraft surface properties, as shown in Figure 12.1. In practise,
all three types of interaction are present in different proportions. For our purposes, we shall
assume total absorption. The projected area of a surface element dS with unit outward normal
⃗n (refer to Figure 12.2) in the sun’s direction (along ⃗s) is
d A = cos αsdS = ⃗n · ⃗s dS.
The solar pressure force on dS is given by
d ⃗Fs = −p d A⃗s = −p⃗n · ⃗s dS⃗s.
The torque about the spacecraft center of mass due to the force on dS is given by
d ⃗Ts = ⃗ρ × d ⃗Fs = −p⃗ρ × ⃗s
⃗n · ⃗s

dS,

Disturbance Torques on a Spacecraft
229
αs
n
s
dFs
ρ
dS
sun
center of mass
spacecraft
Figure 12.2
Solar radiation pressure force on a surface element
where ⃗ρ is the location of dS from the spacecraft center of mass. The total torque about the
spacecraft center of mass due to the solar pressure force is then given by the integral
⃗Ts =

Sws
d ⃗Ts = −p

Sws
⃗ρ × ⃗s
⃗n · ⃗s

dS,
where Sws is the wetted (lit) portion of the spacecraft surface (the portion for which ⃗n · ⃗s ≥0).
This is because there is no solar pressure force on the shaded surfaces of the spacecraft.
The total force due to the solar pressure is given by the integral
⃗Fs =

Sws
d ⃗Fs = −p⃗s

Sws
⃗n · ⃗sdS.
Let us deﬁne the center of solar pressure (the effective location of solar pressure
application) as
⃗cps =

Sws ⃗ρ
⃗n · ⃗s

dS

Sws
⃗n · ⃗s

dS .
Then, the total solar pressure torque is given by
⃗Ts = −p

Sws
⃗ρ
⃗n · ⃗s

dS

× ⃗s = −p

⃗cps

Sws
⃗n · ⃗s

dS

× ⃗s,
which simpliﬁes to
⃗Ts = ⃗cps × ⃗Fs.
(12.2)

230
Spacecraft Dynamics and Control: An Introduction
α
n
dFa
ρ dS
center of mass
spacecraft
v
Figure 12.3
Aerodynamic force on a surface element
12.3
Aerodynamic Torque
In low Earth orbits, there is still some residual atmosphere. However, the density is so low that
conventional ﬂuid mechanics theories based on a continuum model of the atmosphere do not
apply. Instead, the interaction between the atmosphere and the spacecraft must be treated at
the molecular level. We make the following assumptions:
1. The momentum of molecules arriving at the surface of the spacecraft is totally lost to the
surface (the molecule sticks to it).
2. The thermal motion of the atmosphere is much smaller than the spacecraft speed.
3. The spacecraft is nominally non-spinning.
Assumptions 1 and 3 imply that the molecules have velocity ⃗v (the orbital velocity of the space-
craft) upon interaction with the spacecraft surface. Assumption 2 implies that the molecules
are taken to have zero velocity prior to interaction with the spacecraft surface. Let us now
consider the torque on a spacecraft due to molecules arriving at surface element dS with
unit outward normal ⃗n, located at position ⃗ρ from the spacecraft center of mass (see Fig-
ure 12.3). In particular, consider the mass of molecules arriving at dS during a short time
interval δt, as shown in Figure 12.4. The mass in the streamtube arriving at dS over the time
interval δt is
δm = ρavδtd A = ρavδt cos αdS,
vδt
dS
dA
Figure 12.4
Inﬁnitessimal stream-tube

Disturbance Torques on a Spacecraft
231
where ρa is the atmospheric density, α is the angle between ⃗n and ⃗v, and v = |⃗v|. The
momentum of the molecules in the stream-tube at time t (before interaction with the
surface) is
⃗p(t) = δm⃗0 = ⃗0.
At time t + δt, the molecules are stuck to the surface which has velocity ⃗v. Therefore, the
momentum of the molecules in the streamtube at time t + δt is
⃗p(t + δt) = δm⃗v,
= ρav cos αdSδt⃗v,
= ρav2 cos αdSδt ˆ⃗v,
where ˆ⃗v = ⃗v
v. The rate of change of momentum of the molecules is
d⃗p
dt = lim
δt→0
⃗p(t + δt) −⃗p(t)
δt
= ρav2 cos αdSˆ⃗v.
By Newton’s second and third laws, the force acting on the surface element dS due to the
arriving molecules is
d ⃗Fa = −ρav2 cos αdSˆ⃗v = −ρav2(⃗n · ˆ⃗v)dSˆ⃗v.
The total aerodynamic force acting on the spacecraft is then given by the integral
⃗Fa =

Swa
d ⃗Fa = −ρav2ˆ⃗v

Swa
(⃗n · ˆ⃗v)dS,
where Swa is the wetted area (area facing the ﬂow, given by ⃗n · ˆ⃗v ≥0). As for the solar pressure
torque, we deﬁne the center of aerodynamic pressure (effective location of aerodynamic force
application) to be
⃗cpa =

Swa ⃗ρ(⃗n · ˆ⃗v)dS

Swa(⃗n · ˆ⃗v)dS
.
In a similar manner to the solar pressure torque, the aerodynamic torque becomes
⃗Ta = ⃗cpa × ⃗Fa.
(12.3)
12.4
Gravity-Gradient Torque
The gravity-gradient torque is due to the fact that the Earth’s gravitational force is not constant
with distance from the Earth’s center, but decreases quadratically. That is, the gravitational
force on a mass further from the Earth is smaller than the force on a mass that is closer. This
gravity-gradient produces a torque.

232
Spacecraft Dynamics and Control: An Introduction
m1
m2
M
COM
resulting torque
primary
smaller gravitational force
larger gravitational force
Figure 12.5
Gravity-gradient torque concept
To understand how this works, consider two equal point masses connected by a massless rod,
as shown in Figure 12.5. The gravitational force on mass m2 is smaller than the gravitational
force on mass m1, which results in a net torque about the center of mass. It is clear that the
conﬁguration shown in Figure 12.6 is stable (convince yourself of this fact). This torque is
made use of for gravity-gradient stabilization (a passive stabilization method), which we shall
study in detail in Chapter 16.
M
primary
restoring torque
equilibrium
Figure 12.6
Stable gravity-gradient equilibrium

Disturbance Torques on a Spacecraft
233
dm
ρ
M
r
rdm
df
primary
Figure 12.7
Modeling gravity-gradient torque for a continuous body
We shall now obtain an expression for the gravity-gradient torque on a continuous body.
Consider Figure 12.7. The gravitational force on a mass element dm located at position ⃗ρ from
the spacecraft center of mass is given by
d⃗f = −μ
⃗r + ⃗ρ

⃗r + ⃗ρ
3 dm,
(12.4)
where ⃗r is the orbital position of the spacecraft center of mass. Now, we are going to look
for an approximation to this. Typically, we will have ρ ≪r = |⃗r| which means ρ/r ≪1 (the
largest dimension of the spacecraft is much smaller than the orbital radius). Therefore, we can
approximate |⃗r + ⃗ρ|−3 very well by a ﬁrst order Taylor series expansion. We re-use the result
in equation (9.6) in Section 9.1, which is
⃗r + ⃗ρ
−3 ≈1
r3
	
1 −3⃗r · ⃗ρ
r2

,
where r = |⃗r|. Substituting this approximation into the expression for the force on dm (12.4),
we have
d⃗f = −μ
⃗r + ⃗ρ

r3
	
1 −3⃗r · ⃗ρ
r2

dm.
The total torque about the center of mass is given by
⃗Tg =

V
⃗ρ × d⃗f,
=

V
⃗ρ ×

−μ
⃗r + ⃗ρ

r3

dm +

V
⃗ρ ×
	3μ⃗r · ⃗ρ
r5
⃗r + ⃗ρ

dm,
where the integral is taken over the entire spacecraft body. Now,

V ⃗ρdm = 0, since the origin
is at the center of mass. Also, recall that ⃗ρ × ⃗ρ = ⃗0. Therefore, the total torque simpliﬁes to
⃗Tg = 3μ
r5

V
⃗ρ × ⃗r
⃗r · ⃗ρ

dm.

234
Spacecraft Dynamics and Control: An Introduction
To evaluate this expression, let us now express all quantities in the spacecraft body frame Fb,
⃗Tg = ⃗F T
b Tg, ⃗ρ = ⃗F T
b ρ, ⃗r = ⃗F T
b rb.
Then, in spacecraft body coordinates, we have
Tg = 3μ
r5

V
ρ×rbρT rbdm.
Recall the identity (see Section 1.2.4) that ρ×rb = −r×
b ρ. This leads to
Tg = −3μ
r5 r×
b

V
ρρT dmrb.
Note that we are able to pull rb outside the integral since it is independent of ρ. Now, we make
use of the identity (see Section 1.2.4) ρρT = ρ×ρ× + ρT ρ1, to give
Tg = −3μ
r5 r×
b

V
ρ×ρ×dmrb −3μ
r5 r×
b

V
ρT ρ1dmrb.
Noting that ρT ρ is a scalar and that r×
b ρT ρ1rb = ρT ρr×
b rb = 0, we have
Tg = 3μ
r5 r×
b

V

−ρ×ρ×
dmrb.
But, the moment of inertia matrix is (see Section 2.3.2)
I =

V

−ρ×ρ×
dm.
Therefore, we ﬁnally obtain the gravity-gradient torque as
Tg = 3μ
r5 r×
b Irb.
Note that rb is the spacecraft orbital position in spacecraft body coordinates.
Notes
This chapter has provided mathematical models for various disturbance torques acting on a
spacecraft. More detailed mathematical models may be found in Hughes (2004).
Reference
Hughes PC 2004 Spacecraft Attitude Dynamics. Dover Publications, Mineola, NY.

13
Torque-Free Attitude Motion
The disturbance torques that we derived in Chapter 12 are typically very small, so torque-
free motion is a good approximation over short periods of time, and can provide us with an
understanding of the dominant behavior of the natural attitude motion of a spacecraft. Note that
the disturbance torques cannot be neglected if we are considering periods of time consisting
of several orbits.
13.1
Solution for an Axisymmetric Body
We now consider a special case of an axisymmetric spacecraft, since this will allow us to
obtain a closed-form solution of the attitude motion. An axisymmetric body is one in which
two of the principal inertias are equal, for example, a cylinder of uniform density as shown in
Figure 13.1 is axisymmetric. We consider an axisymmetric spacecraft with principal inertias
Ix = Iy = It,
Iz = Ia.
(13.1)
Note that the subscript ‘t’ means transverse, and the subscript ‘a’ means axial. The z-axis is
the axis of symmetry (since the moments of inertia about the x- and y-axes are equal). Recall
the governing equations of motion from Section 11.3 (Euler’s equations)
Ix ˙ωx + (Iz −Iy)ωyωz = Tx,
Iy ˙ωy + (Ix −Iz)ωxωz = Ty,
Iz ˙ωz + (Iy −Ix)ωxωy = Tz.
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

236
Spacecraft Dynamics and Control: An Introduction
xb
yb
zb
Figure 13.1
Axisymmetric body
For our axisymmetric spacecraft with principal inertias given by (13.1), and setting the
disturbance torques to zero (Tx = Ty = Tz = 0), the equations of motion become
It ˙ωx + (Ia −It)ωyωz = 0,
(13.2)
It ˙ωy + (It −Ia)ωxωz = 0,
(13.3)
Ia ˙ωz = 0.
(13.4)
Let us denote the initial conditions by
ωx(0) = ωx0,
ωy(0) = ωy0,
ωz(0) = ωz0.
We can immediately see from the equation for ωz (13.4), that
˙ωz = 0,
which means that the angular velocity about the z-axis (the axis of symmetry) remains constant
ωz(t) = ωz0.
Substituting this into equations (13.2) and (13.3) leads to the equations for the x and y
components of the angular velocity, which are
˙ωx −(It −Ia)
It
ωz0ωy = 0,
˙ωy + (It −Ia)
It
ωz0ωx = 0.
(13.5)
Let us deﬁne the quantity
 = (It −Ia)
It
ωz0,

Torque-Free Attitude Motion
237
which is called the relative spin rate. Then, the equations for x and y become
˙ωx −ωy = 0,
˙ωy + ωx = 0.
(13.6)
These are two coupled ﬁrst order linear differential equations. There are a number of methods
by which they can be solved. We shall solve them using Laplace transforms. Taking the Laplace
transform of (13.6) gives
s ˆωx −ωx0 − ˆωy = 0,
s ˆωy −ωy0 +  ˆωx = 0,
(13.7)
where ˆωx = L(ωx) and ˆωy = L(ωy). Equation (13.7) can be rewritten in matrix form as
 s
−

s
  ˆωx
ˆωy

=
ωx0
ωy0

,
(13.8)
which can be solved as
 ˆωx
ˆωy

=
⎡
⎢⎢⎣
s
s2 + 2

s2 + 2
−

s2 + 2
s
s2 + 2
⎤
⎥⎥⎦
ωx0
ωy0

.
(13.9)
Taking inverse Laplace transforms, we have
ωx(t)
ωy(t)

=
 cos t
sin t
−sin t
cos t
 ωx0
ωy0

.
(13.10)
Let us deﬁne the transverse angular velocity by
ωt =

ω2
x + ω2
y
 1
2 .
Clearly, ωt ≥0 by its deﬁnition.
We can rewrite (13.10) as
ωx(t) = ωt(0)
 ωx0
ωt(0) cos t + ωy0
ωt(0) sin t

,
ωy(t) = ωt(0)
 ωy0
ωt(0) cos t −ωx0
ωt(0) sin t

.
(13.11)
Now, we can make use of the trigonometric identities
cos(a + b) = cos a cos b −sin a sin b,
sin(a + b) = sin a cos b + cos a sin b,

238
Spacecraft Dynamics and Control: An Introduction
to rewrite (13.11) as
ωx(t) = ωt(0) sin (t + φ) ,
ωy(t) = ωt(0) cos (t + φ) ,
(13.12)
by identifying
sin φ = ωx0
ωt(0) and cos φ = ωy0
ωt(0).
From (13.12), we immediately see that the transverse angular velocity ωt is constant, that is,
ωt(t) = ωt(0)

sin2 (t + φ) + cos2 (t + φ)
 1
2 = ωt(0).
Therefore, we have
ωx(t) = ωt sin (t + φ) ,
ωy(t) = ωt cos (t + φ) ,
(13.13)
We see that the magnitude of the angular velocity is constant also, that is,
ω =

ω2
x + ω2
y + ω2
z
 1
2 =

ω2
t + ω2
z
 1
2 = constant.
Let us deﬁne the angle μ = t + φ. Then, from the previous development, we can summarize
the solution for the angular velocity (in spacecraft body coordinates) as
ωx(t) = ωt sin μ,
ωy(t) = ωt cos μ,
ωz(t) = ωz0.
(13.14)
Pictorially, this is shown in Figure 13.2. What this means is that the angular velocity vector
rotates about the spacecraft body z-axis at a constant rate ˙μ = . Let us now examine the
angular momentum vector, given in spacecraft body coordinates by h = Iω, that is,
hx = Itωx = Itωt sin μ,
hy = Itωy = Itωt cos μ,
hz = Iaωz = Iaωz0.
(13.15)
As for the transverse angular velocity, we can deﬁne the transverse angular momentum as
ht =

h2
x + h2
y
 1
2 = It

ω2
x + ω2
y
 1
2 = Itωt,

Torque-Free Attitude Motion
239
xb
yb
zb
ω
ωz
ωt
ωx
ωy
μ
β
Figure 13.2
Angular velocity in body coordinates
which also is constant. Likewise, the total angular momentum h = (h2
x + h2
y + h2
z)
1
2 =
(h2
t + h2
z)
1
2 is constant also. Then, we can rewrite the solution for the angular momentum in
(13.15) as
hx = ht sin μ,
hy = ht cos μ,
hz = Iaωz0.
(13.16)
This shows that just like the angular velocity vector, the angular momentum vector rotates
about the spacecraft body z-axis at a rate . The angle that the angular momentum vector
makes with the spacecraft body z-axis, γ is given by
sin γ = ht
h ,
cos γ = hz
h ,
and is called the nutation angle (see Figure 13.3), and is easily seen to be constant.
xb
yb
zb
h
hz
ht
hx
hy
μ
γ
Figure 13.3
Angular momentum in body coordinates

240
Spacecraft Dynamics and Control: An Introduction
zb, z1
xb
yb
zI
h
μ
μ
x1
y1
γ
Figure 13.4
Rotation about ⃗zb
Now, the physical vector form of the equation of motion for the angular momentum for
torque-free motion is given by (see Section 11.3)
˙⃗h = ⃗0,
where (˙) denotes the time derivative with respect to an inertial frame. Therefore, the angular
momentum vector is inertially ﬁxed (is constant in an inertial frame of reference). We can
make use of this fact to derive the attitude motion of the body.
Since the angular momentum vector ⃗h is inertially ﬁxed, let us choose an inertial frame FI
with z-axis aligned with the angular momentum vector, that is ⃗zI = ⃗h/h. Then, we can map
the spacecraft body ﬁxed frame Fb onto the inertial frame as follows.
First, if we rotate Fb through −μ about the ⃗zb axis as shown in Figure 13.4, the ⃗zI will
lie in the resulting intermediate frame F1 y-z plane, with angle γ from ⃗z1. Next, if we rotate
the intermediate frame F1 through an angle −γ about ⃗x1, then ⃗zI will be equal to the z-axis
of the transformed frame F2, as shown in Figure 13.5. Finally, since ⃗zI = ⃗z2, the frame FI
can be obtained by a rotation about ⃗z2 through some angle −θ, as shown in Figure 13.6. The
angle θ is called the precession angle. What we have just accomplished, is to ﬁnd a 3-1-3
Euler rotation sequence (see Section 1.3.3) to map Fb onto FI. The associated rotation matrix
describing this transformation is
CIb = Cz(−θ)Cx(−γ )Cz(−μ).
z1
y1
z2, zI
h
x1, x2
γ
γ
y2
Figure 13.5
Rotation about ⃗x1

Torque-Free Attitude Motion
241
z2, zI
x2
y2
θ
θ
xI
yI
Figure 13.6
Rotation about ⃗z2
Finally, we can obtain the rotation matrix describing the attitude of Fb relative to FI as the
reverse transformation
CbI = Cz(μ)Cx(γ )Cz(θ).
(13.17)
The angular velocity in spacecraft body coordinates in terms of the three Euler angles θ, γ
and μ is given by (see Section 1.4.2)
⎡
⎣
ωx
ωy
ωz
⎤
⎦=
⎡
⎣
0
0
˙μ
⎤
⎦+ Cz(μ)
⎡
⎣
˙γ
0
0
⎤
⎦+ Cz(μ)Cx(γ )
⎡
⎣
0
0
˙θ
⎤
⎦.
Now, since the angle γ is constant, we have ˙γ = 0. We have also seen previously that ˙μ = .
Recall Section 1.3.1 that
Cz(μ) =
⎡
⎣
cos μ
sin μ
0
−sin μ
cos μ
0
0
0
1
⎤
⎦,
Cx(γ ) =
⎡
⎣
1
0
0
0
cos γ
sin γ
0
−sin γ
cos γ
⎤
⎦.
Therefore, we ﬁnd that the angular velocity is given by
⎡
⎣
ωx
ωy
ωz
⎤
⎦=
⎡
⎣
˙θ sin γ sin μ
˙θ sin γ cos μ
 + ˙θ cos γ
⎤
⎦.
(13.18)
Comparing (13.18) with our previously derived solution for the angular velocity (13.14),
we have
⎡
⎣
˙θ sin γ sin μ
˙θ sin γ cos μ
 + ˙θ cos γ
⎤
⎦=
⎡
⎣
ωt sin μ
ωt cos μ
ωz0
⎤
⎦.
From this, we obtain
˙θ sin γ = ωt,

242
Spacecraft Dynamics and Control: An Introduction
which leads to
˙θ =
ωt
sin γ .
Using the fact that sin γ = ht/h, this leads to
˙θ = h
It
,
(13.19)
which is constant. Let deﬁne the quantity
p = ˙θ = h
It
,
(13.20)
which is known as the precession rate. Physically, the precession rate is the rate at which
the spacecraft body z-axis (⃗zb) rotates about the inertial z-axis (⃗zI) (since ⃗zb is ﬁxed in the
transformed frame F2).
13.2
Physical Interpretation of the Motion
In this section we shall obtain a nice physical interpretation of the spacecraft attitude motion.
First, let us once again consider the spacecraft angular velocity vector ⃗ω and angular momen-
tum vectors ⃗h as seen in the spacecraft body frame Fb, as shown in Figures 13.2 and 13.3
respectively.
As before, let γ be the angle between ⃗zb and ⃗h. We also let β be the angle between ⃗zb and
⃗ω. Clearly, ⃗h, ⃗ω and ⃗zb all lie in the same plane. From Figures 13.2 and 13.3 we obtain
tan γ = ht
hz
,
tan β = ωt
ωz
.
From before, we have
ht = Itωt,
hz = Iaωz.
Therefore, we ﬁnd that
tan γ = It
Ia
tan β.
From this, we see that
if
It > Ia
then
γ > β,
if
It < Ia
then
γ < β.

Torque-Free Attitude Motion
243
xb
yb
zb
xb
yb
zb
Prolate Spinner
Oblate Spinner
(It > Ia)
(Ia > It)
Figure 13.7
Prolate vs. oblate spinner
When It > Ia, the spacecraft is called a prolate spinner, and when It < Ia, the spacecraft is
called an oblate spinner. These cases are shown in Figure 13.7.
Case 1: Prolate Spinner (It > Ia)
From before, we have γ > β. The relationship between vectors ⃗h, ⃗ω and ⃗zb is shown in
Figure 13.8. As shown, the angle between ⃗h and ⃗ω is given by α = γ −β. Noting that the
angular momentum vector ⃗h is parallel to the z-axis of the inertial frame FI, let us deﬁne a
cone Cs with axis ⃗zI and half angle α. This is called the space cone. We also deﬁne a cone Cb
with axis ⃗zb and half angle β. This is called the body cone. The cones are shown in Figure 13.9.
Clearly, the cones touch along the angular velocity vector ⃗ω. Now, as the axis of the body
cone ⃗zb (the body z-axis of the spacecraft) rotates about ⃗zI, let the body cone Cb roll without
slipping on the space cone Cs (which is ﬁxed in FI). Since Cb rolls without slipping on Cs,
the instantaneous axis of rotation of Cb must lie along the line of contact between Cb and Cs.
Therefore, the angular velocity vector of Cb, denoted by ⃗ω′ must be parallel to ⃗ω, as shown in
Figure 13.9. That is, ⃗ω′ = a ⃗ω for some scalar a.
Now, since ⃗zb is the axis of Cb, it is ﬁxed in Cb. Therefore, we must have
˙⃗zb = ⃗ω′ × ⃗zb = a ⃗ω × ⃗zb.
However, since ⃗zb is also ﬁxed in Fb we also have
˙⃗zb = ⃗ω × ⃗zb.
zb
ω
h
zI
β
α
γ
Figure 13.8
⃗h, ⃗ω and ⃗zb for a prolate spinner

244
Spacecraft Dynamics and Control: An Introduction
zb
ω
zI
β
α
ω
Spacecraft
Cs
Cb
Figure 13.9
Space and body cones in the prolate case
That is,
a ⃗ω × ⃗zb = ⃗ω × ⃗zb.
Clearly, this is possible only if a = 1. Therefore, we must have ⃗ω′ = ⃗ω. That is, the body cone
Cb has the same angular velocity as the spacecraft body frame Fb. The body cone can therefore
be considered attached to the spacecraft.
In conclusion, the spacecraft attitude motion is the same as the motion of the body
cone Cb rolling without slipping on the space cone Cs.
Case 2: Oblate Spinner Ia > It
From before, we have β > γ . The relationship between vectors ⃗h, ⃗ω and ⃗zb is shown in
Figure 13.10. In this case, we see that the angle between ⃗h and ⃗ω is given by α = β −γ . As
for the prolate case, we deﬁne a space cone Cs with axis ⃗zI and half angle α. We also deﬁne a
body cone Cb with axis ⃗zb and half angle β. The cones are shown in Figure 13.11.
Using the exact same analysis as for the prolate case, we obtain the conclusion that the
spacecraft attitude motion is the same as the motion of the body cone Cb rolling without
slipping on the space cone Cs.
zb
ω
h
zI
β
α
γ
Figure 13.10
⃗h, ⃗ω and ⃗zb for an oblate spinner

Torque-Free Attitude Motion
245
zb
ω
zI
β
α
Cb
Cs
Spacecraft
Figure 13.11
Space and body cones in the oblate case
Notes
This chapter has presented an analytical solution to torque-free spacecraft attitude motion as
well as a geometric interpretation of the motion in the case of an axisymmetric spacecraft.
An analytical solution to torque-free spacecraft attitude motion for the tri-inertial case (all
principal moments of inertia being unequal) and its geometric interpretation may be found in
Thomson (1986) and Hughes (2004). A derivation of the analytical solution in the tri-inertial
case may be found in Wittenburg (1977).
References
Hughes PC 2004 Spacecraft Attitude Dynamics. Dover Publications, Mineola, NY.
Thomson WT 1986 Introduction to Space Dynamics. Dover Publications, Mineola, NY.
Wittenburg J 1977 Dynamics of Systems of Rigid Bodies. Teubner, Stuttgart.


14
Spin Stabilization
In the next three chapters, we shall examine various passive stabilization approaches. Passive
stabilization involves putting the spacecraft into a favorable naturally stable equilibrium. Spin
stabilization is one of the oldest forms of passive stabilization. If the objective of a mission
is to point a single instrument onboard the spacecraft in an inertially ﬁxed direction, then
oftentimes only that direction matters (depending upon the instrument), and the orientation
about that direction is irrelevant. As such, we can spin the spacecraft about that axis (see
Figure 14.1). We will shortly examine under what conditions such a spin is stable. First, we
have to deﬁne what we mean by stability.
14.1
Stability
The stability of a system refers to the asymptotic behavior of the system (as t →∞). Does
the motion remain bounded (stable)? Does the motion grow unbounded (unstable)? Does it
approach an equilibrium (asymptotically stable)?
A rigorous deﬁnition of stability for general nonlinear systems will be presented in
Chapter 24. For the moment however, we shall keep our focus speciﬁcally on linear time-
invariant systems.
Consider the linear differential equation with constant real coefﬁcients
dnx
dt + b1
dn−1x
dtn−1 + . . . + bn−1
dx
dt + bnx = 0.
Clearly, x(t) ≡0 is an equilibrium solution of this differential equation. To determine stability
of this equilibrium, we wish to see what happens when it is displaced from equilibrium, that is,
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

248
Spacecraft Dynamics and Control: An Introduction
direction of interest
sense of rotation
Figure 14.1
Spinning spacecraft
when the initial conditions non-zero. Taking the Laplace transform of the differential equation
gives

sn X(s) −sn−1x(0) −sn−2 dx
dt (0) −. . . −dn−1x
dtn−1 (0)

+ b1

sn−1X(s) −sn−2x(0) −sn−3 dx
dt (0) −. . . −dn−2x
dtn−2 (0)

+ . . . + bn−1 [sX(s) −x(0)] + bn X(s) = 0,
which can be rewritten as

sn + b1sn−1 + b2sn−2 + . . . + bn

X(s) = a1sn−1 + a2sn−2 + . . . + an,
where the coefﬁcients
a1 = x(0),
a2 = dx
dt (0) + b1x(0), . . . , an = dn−1x
dtn−1 (0) + b1
dn−2x
dtn−2 (0) + . . . + bn−1x(0),
are functions of the initial conditions. We can now solve for X(s)
X(s) =
a1sn−1 + a2sn−2 + . . . + an
sn + b1sn−1 + b2sn−2 + . . . + bn
.
Setting the denominator to zero yields the characteristic equation of the differential equation
sn + b1sn−1 + b2sn−2 + . . . + bn = 0.
(14.1)
Let pi, i = 1, . . . , n, be the solutions of the characteristic equation (14.1). As is explained in
Appendix A, pi are called the poles of X(s). It turns out that they completely determine the
asymptotic behavior. For simplicity, we shall assume that the poles are distinct, that is pi ̸= p j
if i ̸= j. In this case (as shown in Appendix A), X(s) can be expanded in a partial fraction
expansion as
X(s) =
c1
s −p1
+
c2
s −p2
+ . . . +
cn
s −pn
,

Spin Stabilization
249
where ci are the residues of X(s). Taking the inverse Laplace transform gives the solution
for x(t),
x(t) = c1ep1t + c2ep2t + . . . + cnepnt.
(14.2)
Now, since all coefﬁcients ai and bi are real, it must be that complex poles of X(s) occur in
complex conjugate pairs. That is, if p = σ + jω is a pole with ω ̸= 0, then ¯p = σ −jω must
be a pole also. It can readily be shown then that if pi is a complex pole with corresponding
residue ci, then the residue corresponding to the pole ¯pi is ¯ci. Therefore, the part of the solution
of x(t) corresponding to a complex conjugate pair of poles p = σ + jω and ¯p = σ −jω is
given by
cept + ¯ce ¯pt.
Letting c = a + jb, this becomes
cept + ¯ce ¯pt = (a + jb) eσt (cos ωt + j sin ωt) + (a −jb) eσt (cos ωt −j sin ωt) ,
= eσt (2a cos ωt −2b sin ωt) .
Instability Result
From (14.2), we see that if any of the poles pi have positive real part Re(pi) > 0, then x(t)
grows without bound and the system is unstable.
Asymptotic Stability Result
If all of the poles have negative real part, Re(pi) < 0, then x(t) converges to zero and the
system is asymptotically stable.
Stability Result
If none of the poles have positive real part, but there are distinct poles on the imaginary
axis, then x(t) exhibits bounded oscillatory behavior, and the system is stable. Note that any
repeated poles on the imaginary axis make the system unstable.
14.2
Spin Stability of Torque-Free Motion
We shall now examine the stability of spin equilibrium conditions. First of all, only spins about
principal axes of inertia are equilibrium conditions. Let us therefore consider the principal
axes torque free Euler equations (see Section 11.3)
Ix ˙ωx + (Iz −Iy)ωyωz = 0,
Iy ˙ωy + (Ix −Iz)ωxωz = 0,
Iz ˙ωz + (Iy −Ix)ωxωy = 0.
It is readily seen that a principal axis spin is an equilibrium condition. Let us now demonstrate
this for a z-axis spin
ωx(t) = ωy(t) = 0,
ωz(t) = ν (constant).

250
Spacecraft Dynamics and Control: An Introduction
Substituting this into Euler’s equations, we have
Ix ˙ωx = 0,
Iy ˙ωy = 0,
Iz ˙ωz = 0,
which means that a principal z-axis spin is indeed an equilibrium condition (the angular
velocities do not change).
Let us now see what happens if we perturb the equilibrium. Let
ωx = ϵx,
ωy = ϵy,
ωz = ϵz + ν,
where ϵx, ϵy and ϵz are small angular velocities. Euler’s equations now become
Ix ˙ϵx + (Iz −Iy)ϵy(ϵz + ν) = 0,
Iy ˙ϵy + (Ix −Iz)ϵx(ϵz + ν) = 0,
Iz ˙ϵz + (Iy −Ix)ϵxϵy = 0.
Since all ϵ are small, we neglect products of ϵ. That is, we linearize Euler’s equations about
the equilibrium to get
Ix ˙ϵx + (Iz −Iy)νϵy = 0,
Iy ˙ϵy + (Ix −Iz)νϵx = 0,
Iz ˙ϵz = 0.
The equations for ϵx and ϵy are decoupled from the equation for ϵz. The equation for ϵz implies
that
ϵz = constant,
which means that ϵz is stable. Let us now perform a stability analysis on the equations for ϵx
and ϵy, which we rewrite for convenience as
˙ϵx + (Iz −Iy)ν
Ix
ϵy = 0,
˙ϵy + (Ix −Iz)ν
Iy
ϵx = 0.
Taking the Laplace transform gives
s ˆϵx(s) −ϵx(0) + (Iz −Iy)ν
Ix
ˆϵy(s) = 0,
s ˆϵy(s) −ϵy(0) + (Ix −Iz)ν
Iy
ˆϵx(s) = 0.

Spin Stabilization
251
This can be rewritten in matrix form as
⎡
⎢⎢⎣
s
(Iz −Iy)ν
Ix
(Ix −Iz)ν
Iy
s
⎤
⎥⎥⎦

ˆϵx(s)
ˆϵy(s)

=

ϵx(0)
ϵy(0)

.
Solving this gives
 ˆϵx(s)
ˆϵy(s)

=
1
s2 + α
⎡
⎢⎢⎣
s
−(Iz −Iy)ν
Ix
−(Ix −Iz)ν
Iy
s
⎤
⎥⎥⎦
 ϵx(0)
ϵy(0)

,
where
α = (Iz −Iy)(Iz −Ix)ν2
Ix Iy
.
That is,
ˆϵx(s) =
sϵx(0) −(Iz−Iy)ν
Ix
ϵy(0)
s2 + α
,
ˆϵy(s) =
sϵy(0) −(Ix−Iz)ν
Iy
ϵx(0)
s2 + α
.
We see immediately, that both ˆϵx(s) and ˆϵy(s) have the same poles, satisfying
s2 + α = 0.
That is, the poles are ±√−α. There are now three possible cases.
1. α > 0
In this case, the poles are ± j√α, which are purely imaginary. This means that the solutions
for ϵx(t) and ϵy(t) are oscillatory. Therefore, the motion is stable.
2. α = 0
In this case, there is a repeated pole at the origin. This means that both ϵx(t) and ϵy(t) have
a component that grows linearly with time (show this as an exercise, by taking the inverse
Laplace transform). Therefore, the motion is unstable.
3. α < 0
In this case, the poles are ±√−α, which are real. One of them is positive, the other is
negative. This means that both ϵx(t) and ϵy(t) have a component that grows exponentially
with time (show this as an exercise, by taking the inverse Laplace transform). Therefore,
the motion is unstable.

252
Spacecraft Dynamics and Control: An Introduction
In conclusion, for stability, we must have
(Iz −Iy)(Iz −Ix)ν2
Ix Iz
> 0.
which means that
(Iz −Iy)(Iz −Ix) > 0.
This is only possible if either
Iz > Iy and Iz > Ix,
or
Iz < Iy and Iz < Ix.
Therefore, for spin stability, the spacecraft must be spinning either about the major (maximum)
or minor (minimum) axis of inertia. A spin about the intermediate axis is unstable. Also, note
that asymptotic stability is impossible, since we cannot obtain two poles with negative real
parts.
14.3
Effect of Internal Energy Dissipation
The preceding result relies on the fact that the body is rigid, and that the motion is torque
free. In practise, spacecraft are not entirely rigid, and the motion is not torque free (there
are disturbances as we have seen in Chapter 12). Spacecraft have ﬂexible elements, which
are caused to deform due to the external torques as well as the attitude motion itself. These
structural deformations result in a loss of kinetic energy in the form of heat. Because of this
energy dissipation, the kinetic energy is non-increasing. This general effect is demonstrated
by the following heuristic argument:
14.3.1
Energy Sink Hypothesis
A quasi-rigid body will dissipate energy until a state of minimum kinetic energy is reached.
For torque-free motion, the angular momentum is conserved.
From the previous section, we know that only major or minor axis spins are stable. For a
major axis spin, the kinetic energy is given by
Tmaj = 1
2 Imajω2
maj =
h2
2Imaj
,
h = Imajωmaj.
For a minor axis spin, the kinetic energy is given by
Tmin = 1
2 Iminω2
min =
h2
2Imin
,
h = Iminωmin.

Spin Stabilization
253
Therefore, since Imin < Imaj, for a given angular momentum h,
Tmaj < Tmin.
That is, kinetic energy is minimized for a major axis spin. A minor axis spin maximizes kinetic
energy. Since the kinetic energy reduces due to energy dissipation resulting from spacecraft
ﬂexibility, minor axis spins are also unstable. This leads to the following rule.
14.3.2
Major Axis Rule
Spins about the major axis are asymptotically stable. Spins about any other axis are unstable.
Example 14.1 (Explorer 1) This was the ﬁrst U.S. satellite. It was axisymmetric, and spin-
stabilized about the minor axis of inertia. Explorer 1 had ﬂexible antennas, causing energy
dissipation. The satellite began tumbling hours after deployment. This lead to the discovery of
the major axis rule.
Notes
This chapter has presented the elements of spin stabilization for spacecraft. For a more detailed
treatment of spin stability, the reader is referred to Hughes (2004). For a discussion of practical
issues associated with spin stabilization, the reader is referred to Sidi (1997).
References
Hughes PC 2004 Spacecraft Attitude Dynamics. Dover Publications, Mineola, NY.
Sidi MJ 1997 Spacecraft Dynamics and Control: A Practical Engineering Approach. Cambridge University Press,
New York, NY.


15
Dual-Spin Stabilization
Spin stabilization is a useful passive stabilization technique. By spinning the spacecraft about
the major axis, gyroscopic stiffness is provided to the spin axis. This means that the spin axis
tries to stay inertially ﬁxed. However, spin stabilization is not always practical. First of all, the
major axis rule requires that the spacecraft be spinning about the major axis, which may not
be consistent with the shape of the spacecraft. Second of all, it means that the entire spacecraft
is spinning. This becomes problematic in instances when it is necessary to point instruments
in inertially changing directions, such as in Earth observation missions when an instrument is
required to point toward the Earth, which is not an inertially ﬁxed direction as seen from an
Earth orbiting satellite, but rotates once per orbit.
It would be useful to have the beneﬁts of spin stabilization (the gyroscopic stability), without
having to spin the entire spacecraft, or at least without having to spin about a major axis. To
accomplish this, a spinning wheel is mounted in the spacecraft with its spin axis aligned with
the desired axis we wish to keep inertially ﬁxed. The spinning wheel adds gyroscopic stability.
This is called Dual-Spin Stabilization.
15.1
Equations of Motion
For a dual-spin spacecraft, we can consider the spacecraft to be made up of two rigid bodies:
the wheel, and the platform (everything else) (see Figure 15.1). The wheel spin axis is ﬁxed
within the platform, and the wheel spins with angular velocity ωs relative to the platform. We
consider a body ﬁxed frame Fb attached to the platform with the origin at the center of mass
of the spacecraft (the combined platform and wheel system). It can be shown that the total
angular momentum of the spacecraft (platform and wheel) is given in body coordinates by
⃗h = ⃗F T
b [Iω + hsa] ,
(15.1)
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

256
Spacecraft Dynamics and Control: An Introduction
Fb
a
ωs
platform
wheel
Figure 15.1
Dual-spin spacecraft
where
I
= moment of inertia matrix of the spacecraft (platform and wheel)
⃗ω = ⃗F T
b ω = angular velocity of platform relative to an inertial frame
hs = Isωs = wheel spin angular momentum relative to platform
Is = wheel moment of inertia about the spin axis
ωs = wheel angular velocity relative to platform
⃗a
= ⃗F T
b a = wheel spin axis.
The equations of motion are now given by Euler’s equations (see Section 11.3)
˚⃗h + ⃗ω×⃗h = ⃗T,
(15.2)
where (˚) denotes the time-derivative as seen in the body frame Fb, and ⃗T = ⃗F T
b T are the
external torques acting on the spacecraft.
From equation (15.1), we ﬁnd that
˚⃗h = ⃗F T
b

I ˙ω + ˙hsa

,
(15.3)
since the inertia matrix I and the wheel spin axis a are constant in body coordinates. Substituting
equations (15.3) and (15.1) into equation (15.2), we ﬁnally obtain the equations of motion in
body coordinates
I ˙ω + ˙hsa + ω× [Iω + hsa] = T.
(15.4)
Typically, for a dual spin system, the wheel spin angular velocity is kept constant, such that
˙hs = Is ˙ωs = 0. This leads to
I ˙ω + ω× [Iω + hsa] = T.
(15.5)

Dual-Spin Stabilization
257
15.2
Stability of Dual-Spin Torque-Free Motion
As we mentioned in the introduction, the purpose of adding a spinning wheel is to provide
gyroscopic stability, and remove some of the drawbacks of spin-stabilizing the entire space-
craft. We therefore want to analyze the stability of a dual-spin spacecraft. We will make a direct
comparison with the spinning spacecraft in Section 14.2. As in Section 14.2, let us consider
the body frame Fb to be a principal axes frame, such that the inertia matrix is given by
I =
⎡
⎣
Ix
0
0
0
Iy
0
0
0
Iz
⎤
⎦.
Since in Section 14.2 we consider a z-axis spin, we let the wheel spin axis coincide with the
body z-axis, that is
a =
⎡
⎣
0
0
1
⎤
⎦.
With the angular velocity given in body coordinates by
ω =
⎡
⎣
ωx
ωy
ωz
⎤
⎦,
the torque-free (T = 0) equations of motion in (15.5) become
Ix ˙ωx +

Iz −Iy
	
ωyωz + hsωy = 0,
Iy ˙ωy + (Ix −Iz) ωxωz −hsωx = 0,
Iz ˙ωz +

Iy −Ix
	
ωxωy
= 0.
(15.6)
As in Section 14.2, we are interested in the stability of equilibrium solutions of (15.6). There are
a number of equilibrium solutions of (15.6). However, the most useful solution for comparison
with Section 14.2 is a principal z-axis spin with
ωx(t) = ωy(t) = 0,
ωz(t) = ν (constant).
Substituting this into the equations of motion (15.6), we have
Ix ˙ωx = 0,
Iy ˙ωy = 0,
Iz ˙ωz = 0,
which means that a principal z-axis spin is indeed an equilibrium condition (the angular
velocities do not change).

258
Spacecraft Dynamics and Control: An Introduction
As in Section 14.2, to examine the stability of this equilibrium condition, we make a small
perturbation
ωx = ϵx,
ωy = ϵy,
ωz = ϵz + ν,
where ϵx, ϵy and ϵz are small angular velocities. The equations of motion now become
Ix ˙ϵx + (Iz −Iy)ϵy(ϵz + ν) + hsϵy = 0,
Iy ˙ϵy + (Ix −Iz)ϵx(ϵz + ν) −hsϵx = 0,
Iz ˙ϵz + (Iy −Ix)ϵxϵy = 0.
Since all ϵ are small, we neglect products of ϵ. That is, we linearize Euler’s equations about
the equilibrium to get
Ix ˙ϵx + (Iz −Iy)νϵy + hsϵy = 0,
Iy ˙ϵy + (Ix −Iz)νϵx −hsϵx = 0,
Iz ˙ϵz = 0.
As in Section 14.2 for a spinning satellite, the equations for ϵx and ϵy are decoupled from the
equation for ϵz. The equation for ϵz implies that
ϵz = constant,
which means that ϵz is stable. Let us now perform a stability analysis on the equations for ϵx
and ϵy, which we rewrite for convenience as
˙ϵx + (Iz −Iy)ν + hs
Ix
ϵy = 0,
˙ϵy + (Ix −Iz)ν −hs
Iy
ϵx = 0.
For a spinning platform (ν ̸= 0), it will be convenient to deﬁne the quantity
λ = Iz + hs
ν .
(15.7)
In this case, we can rewrite the equations of motion as
˙ϵx + (λ −Iy)ν
Ix
ϵy = 0,
˙ϵy + (Ix −λ)ν
Iy
ϵx = 0.
(15.8)

Dual-Spin Stabilization
259
The related equations of motion from Section 14.2 for a spinning spacecraft are repeated here
for convenience
˙ϵx + (Iz −Iy)ν
Ix
ϵy = 0,
˙ϵy + (Ix −Iz)ν
Iy
ϵx = 0.
(15.9)
Comparing the equations of motion for the dual-spin satellite (15.8) with those of a spinning
spacecraft (15.9), it can be seen that the stored wheel angular momentum hs augments the
platform moment of inertia about the spin axis Iz. That is, to complete the stability analysis,
we can re-use the results from Section 14.2 by replacing
Iz →λ = Iz + hs
ν .
Therefore, we can conclude that stability is only possible if either
Iz + hs
ν = λ > Iy
and
Iz + hs
ν = λ > Ix,
(15.10)
or
Iz + hs
ν = λ < Iy
and
Iz + hs
ν = λ < Ix.
(15.11)
In this case, even intermediate axis spins can also be made stable by making the wheel stored
angular momentum hs large enough such that either of the above pairs of inequalities are
satisﬁed.
15.3
Effect of Internal Energy Dissipation
The preceding analysis was for a rigid body. However, there is no such thing as a perfectly rigid
body. There is always some ﬂexibility in the system, which means that there is always some
internal energy dissipation. We would now like to see what effect internal energy dissipation
has on the stability of a dual spin spacecraft, just as we did for a spin-stabilized spacecraft
in Section 14.3. To be consistent with Section 15.2, we will consider the dual-spin spacecraft
with the wheel spin axis aligned with the principal z-axis. In this case, from (15.1), the total
angular momentum of the spacecraft is given by
h =
⎡
⎢⎣
Ixωx
Iyωy
Izωz + hs
⎤
⎥⎦.
(15.12)

260
Spacecraft Dynamics and Control: An Introduction
It can readily be shown that the magnitude of the angular velocity h = |h| is constant for
torque-free motion. Indeed, consider
d
dt

h2	
= 2hT ˙h.
For torque-free motion, Euler’s equation (15.2) gives us
˙h = −ω×h,
which leads to
d
dt

h2	
= −2hT ω×h = 0,
since ω×h is perpendicular to h. This shows that h2 is constant, and therefore, so is h.
Now, for the energy sink analysis, we consider the energy-like function
To = 1
2

Ixω2
x + Iyω2
y + Izω2
z

.
(15.13)
Note that this is not the total rotational kinetic energy of the dual spin spacecraft, rather it
is a portion of it which is due to the motion of the platform. It can readily be shown that
for a rigid dual-spin spacecraft, To is constant for torque-free motion. We assume that the
momentum wheel is rigid. The energy sink hypothesis then postulates that for a quasi-rigid
body, the “energy” To decreases to a minimum value, while the angular momentum h remains
constant. That is, ˙To < 0 until the energy is a minimum. This minimum energy conﬁguration
is therefore stable.
Let us now ﬁnd out under what conditions our simple spins in Section 15.2 are stable when
energy dissipation is accounted for. To do this, we need to solve the constrained minimization
problem
Find ω to minimize To subject to h = constant,
where
h2 = hT h = (Ixωx)2 +

Iyωy
	2 + (Izωz + hs)2 .
We shall now transform the problem into an unconstrained minimization problem through
a suitable change of variables. To do this, we recognize that the angular momentum vector
h must lie on the sphere of radius h. This means that we can readily describe the angular
momentum vector in terms of spherical coordinates, as shown in Figure 15.2. We have,
h =
⎡
⎢⎣
h cos φ sin θ
h sin φ
h cos φ cos θ
⎤
⎥⎦.
(15.14)

Dual-Spin Stabilization
261
zb
xb
yb
h
h sin φ
h cos θ
h cos φ cos θ
h cos φ sin θ
θ
φ
h
Figure 15.2
Angular momentum vector in spherical coordinates
Note that we have intentionally chosen the spherical coordinate system with origin along the
body z-axis so that when φ = θ = 0, the angular momentum vector is given by
h =
⎡
⎣
0
0
h
⎤
⎦,
which corresponds to a simple spin about the z-axis as in Section 15.2. Now, equating the
expressions for h in (15.12) and (15.14), we obtain
Ixωx = h cos φ sin θ,
Iyωy = h sin φ,
Izωz + hs = h cos φ cos θ,
(15.15)
which give equations for the angular velocities
ωx = h
Ix
cos φ sin θ,
ωy = h
Iy
sin φ,
(15.16)
ωz = h
Iz
cos φ cos θ −hs
Iz
.
Equations (15.16) now provide the required transformation from ωx, ωy and ωz (which are
constrained by the constant angular momentum h requirement), to the unconstrained spherical
coordinates φ and θ. Since To is differentiable with respect to φ and θ, necessary conditions
for a minimum to occur are that the partial derivatives are zero at that point,
∂To
∂φ = 0,
∂To
∂θ = 0.

262
Spacecraft Dynamics and Control: An Introduction
This means that the function To is stationary at a minimum. By the chain-rule, we ﬁnd that
∂To
∂φ = ∂To
∂ωx
∂ωx
∂φ + ∂To
∂ωy
∂ωy
∂φ + ∂To
∂ωz
∂ωz
∂φ ,
∂To
∂θ = ∂To
∂ωx
∂ωx
∂θ + ∂To
∂ωy
∂ωy
∂θ + ∂To
∂ωz
∂ωz
∂θ .
(15.17)
From equations (15.13) and (15.16), we ﬁnd that
∂To
∂ωx
= Ixωx = h cos φ sin θ,
∂To
∂ωy
= Iyωy = h sin φ,
∂To
∂ωz
= Izωz = h cos φ cos θ −hs.
From equations (15.16), we obtain
∂ωx
∂φ = −h
Ix
sin φ sin θ,
∂ωy
∂φ = h
Iy
cos φ,
∂ωz
∂φ = −h
Iz
sin φ cos θ,
∂ωx
∂θ = h
Ix
cos φ cos θ,
∂ωy
∂θ = 0,
∂ωz
∂θ = −h
Iz
cos φ sin θ.
Substituting the obtained partial derivatives into (15.17), we obtain the required partial deriva-
tives,
∂To
∂φ = −h2
Ix
sin φ cos φ sin2 θ + h2
Iy
sin φ cos φ −h2
Iz
sin φ cos φ cos2 θ + hhs
Iz
sin φ cos θ,
(15.18)
and
∂To
∂θ = h2
Ix
cos2 φ sin θ cos θ −h2
Iz
cos2 φ sin θ cos θ + hhs
Iz
cos φ sin θ.
(15.19)
It will be useful to rearrange these as
∂To
∂φ = h sin φ

−h
Ix
cos φ sin2 θ + h
Iy
cos φ −h
Iz
cos φ cos2 θ + hs
Iz
cos θ

, (15.20)
and
∂To
∂θ = h sin θ
 h
Ix
cos2 φ cos θ −h
Iz
cos2 φ cos θ + hs
Iz
cos φ

.
(15.21)

Dual-Spin Stabilization
263
We immediately see from (15.20) and (15.21) that To has stationary values when sin θ = 0 and
sin φ = 0. This means that cos φ = ±1 and cos θ = ±1. From the equation for the angular
momentum vector (15.14), we see that these stationary values correspond to simple spins
about the body z-axis with angular momentum vector
h =
⎡
⎣
0
0
±h
⎤
⎦,
since the product cos θ cos φ = ±1. It is clear that we can cover both cases by considering
φ = 0◦and θ = 0◦, 180◦.
We have now established that simple spins about the principal z-axis could be minimum
To conﬁgurations. Now we need to establish conditions that in fact make them minima. To
establish this, we need to consider the second derivatives. Speciﬁcally, a sufﬁcient condition
for To to be a minimum at a point is if the Hessian matrix
⎡
⎢⎢⎣
∂2To
∂φ2
∂2To
∂φ∂θ
∂2To
∂θ∂φ
∂2To
∂θ2
⎤
⎥⎥⎦
is positive deﬁnite at that point. This means that for simple spins about the principal z-axis,
the Hessian matrices
⎡
⎢⎢⎣
∂2To
∂φ2
∂2To
∂φ∂θ
∂2To
∂θ∂φ
∂2To
∂θ2
⎤
⎥⎥⎦

φ=0◦,θ=0◦
or
⎡
⎢⎢⎣
∂2To
∂φ2
∂2To
∂φ∂θ
∂2To
∂θ∂φ
∂2To
∂θ2
⎤
⎥⎥⎦

φ=0◦,θ=180◦
,
must be positive deﬁnite.
Let us now obtain expressions for the second partial derivatives of To. It will be useful to
rewrite the partial derivatives (15.18) and (15.19) in a different form by grouping some terms
and making use of the trigonometric identity 2 sin a cos a = sin 2a. We obtain
∂To
∂φ = h
sin 2φ
2
 h
Iy
−h
Ix
sin2 θ −h
Iz
cos2 θ

+ hs
Iz
sin φ cos θ

,
(15.22)
and
∂To
∂θ = h
 h
Ix
−h
Iz
 cos2 φ sin 2θ
2
+ hs
Iz
cos φ sin θ

.
(15.23)
From these, we can now readily obtain the second partial derivatives as
∂2To
∂φ2 = h

cos 2φ
 h
Iy
−h
Ix
sin2 θ −h
Iz
cos2 θ

+ hs
Iz
cos φ cos θ

,
(15.24)

264
Spacecraft Dynamics and Control: An Introduction
∂2To
∂θ2 = h
 h
Ix
−h
Iz

cos2 φ cos 2θ + hs
Iz
cos φ cos θ

,
(15.25)
and
∂2To
∂θ∂φ = ∂2To
∂φ∂θ = −h
 h
Ix
−h
Iz

sin φ cos φ sin 2θ + hs
Iz
sin φ sin θ

.
(15.26)
With the expressions for the partial derivatives in hand, we can now establish conditions
which would make a principal z-axis spin a minimum energy conﬁguration, and hence a stable
conﬁguration in the presence of energy dissipation.
We ﬁrst examine the case φ = θ = 0◦. We ﬁnd that the second partial derivatives in equations
(15.24) to (15.26) become
∂2To
∂φ2

φ=0◦,θ=0◦= h
 h
Iy
−h
Iz
+ hs
Iz

,
∂2To
∂θ2

φ=0◦,θ=0◦= h
 h
Ix
−h
Iz
+ hs
Iz

,
∂2To
∂θ∂φ

φ=0◦,θ=0◦= 0.
Therefore, to guarantee that φ = 0◦, θ = 0◦corresponds to a minimum, positive deﬁniteness
of the Hessian matrix reduces to the inequalities
h
 h
Iy
−h
Iz
+ hs
Iz

> 0,
h
 h
Ix
−h
Iz
+ hs
Iz

> 0.
In general, h ≥0, but we consider only the case h > 0. For consistency with Section 15.2, we
also restrict ωz ̸= 0 (a spinning platform). From the third equation in (15.15), we ﬁnd that for
φ = 0◦, θ = 0◦,
h = Izωz + hs = λωz,
(15.27)
where
λ = Iz + hs
ωz
,
which is the same as the quantity λ deﬁned in equation (15.7) in Section 15.2 (which played
a critical role in the rigid body stability analysis). Now, since h > 0, the conditions for a
minimum become
h
Iy
−h −hs
Iz
> 0,
h
Ix
−h −hs
Iz
> 0.

Dual-Spin Stabilization
265
Now, from (15.27), we note that h −hs = Izωz. Making this substitution, the conditions for a
minimum become
h −Iyωz > 0,
h −Ixωz > 0.
Substituting h = λωz (from (15.27)), the conditions become

λ −Iy
	
ωz > 0,
(λ −Ix) ωz > 0.
Finally, we note from (15.27) that since h > 0, both ωz and λ must have the same sign. Making
use of this fact, the conditions for a minimum when φ = 0◦, θ = 0◦become

λ −Iy
	
λ > 0,
(λ −Ix) λ > 0.
Next, we consider the case when φ = 0◦and θ = 180◦. In this case, the second partial
derivatives in equations (15.24) to (15.26) become
∂2To
∂φ2

φ=0◦,θ=180◦= h
 h
Iy
−h
Iz
−hs
Iz

,
∂2To
∂θ2

φ=0◦,θ=180◦= h
 h
Ix
−h
Iz
−hs
Iz

,
∂2To
∂θ∂φ

φ=0◦,θ=180◦= 0.
Therefore, to guarantee that φ = 0◦, θ = 180◦corresponds to a minimum, positive deﬁniteness
of the Hessian matrix reduces to the inequalities
h
Iy
−h
Iz
−hs
Iz
> 0,
h
Ix
−h
Iz
−hs
Iz
> 0,
which rearrange to give
h
Iy
−h + hs
Iz
> 0,
h
Ix
−h + hs
Iz
> 0.
As before, from the third equation in (15.15), we ﬁnd that for φ = 0◦, θ = 180◦,
−h = Izωz + hs = λωz,
(15.28)
Making use of (15.28) as before, we ﬁnd that h + hs = −Izωz, and the conditions for a
minimum become
−

λ −Iy
	
ωz > 0,
−(λ −Ix) ωz > 0.

266
Spacecraft Dynamics and Control: An Introduction
Finally, we note that since h > 0 and h = −λωz, it must be that λ and ωz have the opposite
sign. Therefore, the conditions for a minimum when φ = 0◦, θ = 180◦become

λ −Iy
	
λ > 0,
(λ −Ix) λ > 0,
which are exactly the same as for the case φ = 0◦, θ = 0◦. Therefore, we conclude that a
spin about the principal z-axis is a minimum energy conﬁguration, and therefore stable in the
presence of energy dissipation, if the quantity λ = Iz + hs
ωz satisﬁes the inequalities

λ −Iy
	
λ > 0,
(λ −Ix) λ > 0,
It can be seen that these conditions are satisﬁed only if either
λ > Ix
and
λ > Iy,
(15.29)
or
λ < 0.
(15.30)
We can now compare these conditions for stability with those we obtained in Section 15.2. It
can be seen that condition (15.29) is exactly the same as the condition (15.10). The condition
(15.30) is consistent with condition (15.11), but is more restrictive.
As in Section 15.2, we can conclude that since hs can be adjusted to make λ as large as we
wish, it is possible to stabilize even minor or intermediate axis spins for a dual-spin spacecraft.
In fact, this analysis shows that some energy dissipation is advantageous, since the energy
decay means that
ω →
⎡
⎣
0
0
ωz
⎤
⎦.
Notes
This chapter has presented the elements of dual-spin stabilization for spacecraft. In our energy-
sink analysis, we have assumed that all energy is dissipated in the spacecraft platform, and
none in the wheel (we assume that the wheel is perfectly rigid). For a more detailed treatment
of dual spin stability where this assumption is not made, the reader is referred to Hughes
(2004). For a discussion of practical issues associated with dual spin stabilization, the reader
is referred to Sidi (1997).
References
Hughes PC 2004 Spacecraft Attitude Dynamics. Dover Publications, Mineola, NY.
Sidi MJ 1997 Spacecraft Dynamics and Control: A Practical Engineering Approach. Cambridge University Press,
New York, NY.

16
Gravity-Gradient Stabilization
There are a number of satellite applications that require the pointing of an instrument toward
the Earth. For these types of spacecraft, it is useful to have one of the spacecraft body axes
pointing down (called the nadir direction). Let us deﬁne an orbiting reference frame Fo with
basis vectors ⃗xo, ⃗yo and ⃗zo as follows.
⃗xo = ⃗yo × ⃗zo,
⃗yo = −⃗r × ⃗v
⃗r × ⃗v
,
⃗zo = −⃗r⃗r
,
where ⃗r and ⃗v are the inertial spacecraft position and velocity relative to the center of the Earth
respectively. Figure 16.1 illustrates their deﬁnitions. In spacecraft dynamics, the three basis
vectors deﬁning the orbiting frame Fo are given special names.
⃗xo = roll axis
⃗yo = pitch axis
⃗zo = yaw axis
Associated with these axes are three rotations: roll rotation, pitch rotation, and yaw rotation
respectively.
It should be clear that if the spacecraft body frame Fb is aligned with the orbiting frame
Fo, then the body z-axis points directly to nadir as desired for an Earth pointing satellite. The
orbiting frame Fo deﬁnes the desired attitude for the spacecraft. It is therefore of interest to
study the attitude motion of the spacecraft relative to Fo.
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

268
Spacecraft Dynamics and Control: An Introduction
xo
yo
zo
h
r
Earth
orbit
spacecraft
Figure 16.1
Orbiting reference frame deﬁnition
16.1
Equations of Motion
Let us describe the spacecraft attitude relative to the orbiting frame by a 3-2-1 attitude sequence
(see Sections 1.3.3 and 1.4.2). Namely,
1. A rotation ψ about the original z-axis (called the yaw angle).
2. A rotation θ about the intermediate y-axis (called a pitch angle).
3. A rotation φ about the transformed x-axis (called a roll angle).
In this case, the rotation matrix from frame Fo to frame Fb is given by
Cbo(φ, θ, ψ) = Cx(φ)Cy(θ)Cz(ψ)
=
⎡
⎣
cθcψ
cθsψ
−sθ
sφsθcψ −cφsψ
sφsθsψ + cφcψ
sφcθ
cφsθcψ + sφsψ
cφsθsψ −sφcψ
cφcθ
⎤
⎦
(16.1)
where sb = sin b and cb = cos b.
The attitude kinematics relative to the orbiting frame are then given by (see Section 1.4.2)
ωbo =
⎡
⎣
1
0
−sin θ
0
cos φ
sin φ cos θ
0
−sin φ
cos φ cos θ
⎤
⎦
⎡
⎣
˙φ
˙θ
˙ψ
⎤
⎦,
(16.2)
where ⃗ωbo = ⃗F T
b ωbo is the angular velocity of the body frame Fb relative to the orbiting frame
Fo expressed in body coordinates.
The attitude dynamics of the spacecraft are given by Euler’s equations (see Section 11.3),
which describe the dynamics of the spacecraft body frame Fb relative to an inertial frame
FI. We therefore need to know the inertial angular velocity of Fo, namely ⃗ωoI. To simplify
matters, we shall restrict ourselves to the case of a circular Keplerian orbit. In this case, ⃗yo
is inertially ﬁxed since it is parallel to the orbital angular momentum vector, and the orbiting
frame Fo rotates once per orbit about ⃗yo with constant angular velocity given by the orbital

Gravity-Gradient Stabilization
269
rate ωo =

μ
r3 (see Chapter 3). Note that μ is the gravitational constant of the Earth, and
r = |⃗r|. The angular velocity of Fo relative to FI is therefore given by
⃗ωoI = ⃗F T
o
⎡
⎣
0
−ωo
0
⎤
⎦.
(16.3)
The negative sign is due to the fact that the direction of ⃗yo is the negative of the direction of
the orbital angular momentum.
The inertial angular velocity of the spacecraft is now given by
⃗ωbI = ⃗ωbo + ⃗ωoI.
(16.4)
Including the gravity-gradient torque (see Section 12.4), the attitude dynamics of the spacecraft
are given in body coordinates by
I d
dt (ωbo + CboωoI) + (ωbo + CboωoI)× I (ωbo + CboωoI) = Tg,
(16.5)
where
Tg = 3μ
r5 r×
b Irb,
and ⃗r = ⃗Fbrb is the spacecraft orbital position vector expressed in body coordinates. Equa-
tions (16.2) and (16.5) completely describe the attitude motion of the spacecraft relative to
the orbiting frame Fo. To make matters simpler, which will allow us to perform a stability
analysis, we shall linearize the equations of motion. That is, we consider only small angles
and angular rates, i.e. φ, θ, ψ, ˙φ, ˙θ and ˙ψ are considered small. This allows for the following
simpliﬁcations
sin φ ≈φ,
cos φ ≈1,
sin θ ≈φ,
cos θ ≈1,
sin ψ ≈φ,
cos ψ ≈1.
Note that these approximations are only valid when the angles are in radians. The small angle
and rate assumption also allow us to neglect products between angles and angular rates (for
example, we can neglect φθ and φ ˙φ). We shall now simplify Euler’s equation (16.5) term by
term.
First of all, under these simpliﬁcations, the rotation matrix Cbo in (16.1) becomes
Cbo(φ, θ, ψ) ≈
⎡
⎣
1
ψ
−θ
−ψ
1
φ
θ
−φ
1
⎤
⎦.
(16.6)

270
Spacecraft Dynamics and Control: An Introduction
Next, the angular velocity in (16.2) becomes
ωbo =
⎡
⎣
˙φ
˙θ
˙ψ
⎤
⎦
(16.7)
Therefore, we obtain the inertial angular velocity in body coordinates as
ωbo + CboωoI =
⎡
⎣
˙φ −ψωo
˙θ −ωo
˙ψ + φωo
⎤
⎦,
(16.8)
and the inertial angular acceleration in body coordinates as
d
dt (ωbo + CboωoI) =
⎡
⎣
¨φ −˙ψωo
¨θ
¨ψ + ˙φωo
⎤
⎦,
(16.9)
since ωo is constant.
We assume that the body frame Fb is a principal axes frame, such that the inertia matrix is
I =
⎡
⎣
Ix
0
0
0
Iy
0
0
0
Iz
⎤
⎦,
which means that
I d
dt (ωbo + CboωoI) =
⎡
⎢⎣
Ix
	 ¨φ −˙ψωo

Iy ¨θ
Iz
	 ¨ψ + ˙φωo

⎤
⎥⎦.
(16.10)
We now deal with the second term on the left hand side of Euler’s equation (16.5). With the
above simpliﬁcations, we have
(ωbo + CboωoI)× I (ωbo + CboωoI)
=
⎡
⎢⎣
0
−
	 ˙ψ + φωo

˙θ −ωo
˙ψ + φωo
0
−
	 ˙φ −ψωo

−
	 ˙θ −ωo

˙φ −ψωo
0
⎤
⎥⎦
⎡
⎢⎣
Ix
0
0
0
Iy
0
0
0
Iz
⎤
⎥⎦
⎡
⎣
˙φ −ψωo
˙θ −ωo
˙ψ + φωo
⎤
⎦
=
⎡
⎢⎣
	
Iz −Iy

 	 ˙ψ + φωo

 	 ˙θ −ωo

(Ix −Iz)
	 ˙ψ + φωo

 	 ˙φ −ψωo

	
Iy −Ix

 	 ˙θ −ωo

 	 ˙φ −ψωo

⎤
⎥⎦.

Gravity-Gradient Stabilization
271
Neglecting all products of angles and angular rates, this simpliﬁes to
(ωbo + CboωoI)× I (ωbo + CboωoI) =
⎡
⎢⎣
	
Iy −Iz

 
ω2
oφ + ωo ˙ψ

0
	
Iy −Ix

 
ω2
oψ −ωo ˙φ

⎤
⎥⎦.
(16.11)
The only remaining term in the equation of motion (16.5) is the gravity-gradient term. To
evaluate this, we ﬁrst recognize that by the deﬁnition of the orbiting frame Fo, the spacecraft
position vector is given by
⃗r = ⃗F T
o
⎡
⎣
0
0
−r
⎤
⎦.
(16.12)
Therefore, in body coordinates, the spacecraft position vector becomes
rb = Cbo
⎡
⎣
0
0
−r
⎤
⎦≈
⎡
⎣
1
ψ
−θ
−ψ
1
φ
θ
−φ
1
⎤
⎦
⎡
⎣
0
0
−r
⎤
⎦=
⎡
⎣
rθ
−rφ
−r
⎤
⎦.
Making use of this approximation, we evaluate the gravity-gradient torque to be approximately
Tg = 3μ
r5 r×
b Irb = 3μ
r5
⎡
⎣
0
r
−rφ
−r
0
−rθ
rφ
rθ
0
⎤
⎦
⎡
⎣
Ix
0
0
0
Iy
0
0
0
Iz
⎤
⎦
⎡
⎣
rθ
−rφ
−r
⎤
⎦,
which becomes
Tg = 3μ
r5
⎡
⎢⎣
	
Iz −Iy

r2φ
(Iz −Ix)r2θ
	
Ix −Iy

r2φθ
⎤
⎥⎦.
Neglecting the product φθ, and recognizing the orbital angular rate ωo =

μ
r3 , the gravity-
gradient torque ﬁnally becomes
Tg = 3ω2
o
⎡
⎢⎣
	
Iz −Iy

φ
(Iz −Ix) θ
0
⎤
⎥⎦.
(16.13)
Note that there is no torque about the yaw axis. This makes sense, since we are considering
small angles, which means that the spacecraft body-frame is close to the orbiting frame. The
yaw axis is the line of action of the gravitational force, and the moment vector generated
by any force vector is always perpendicular to the direction of that force. Also note that the

272
Spacecraft Dynamics and Control: An Introduction
torque about the roll axis is proportional to the roll angle, and the torque about the pitch axis
is proportional to the pitch angle.
We now have all the approximations required to simplify the equations of motion (16.5).
Substituting the approximations (16.10), (16.11) and (16.13) into (16.5) gives
⎡
⎢⎣
Ix
	 ¨φ −˙ψωo

+
	
Iy −Iz

 
ω2
oφ + ωo ˙ψ

Iy ¨θ
Iz
	 ¨ψ + ˙φωo

+
	
Iy −Ix

 
ω2
oψ −ωo ˙φ

⎤
⎥⎦=
⎡
⎢⎣
3ω2
o
	
Iz −Iy

φ
3ω2
o (Iz −Ix) θ
0
⎤
⎥⎦,
which can be rearranged to ﬁnally give
Ix ¨φ −

Ix −Iy + Iz

ωo ˙ψ + 4ω2
o
	
Iy −Iz

φ = 0,
(16.14)
Iy ¨θ + 3ω2
o (Ix −Iz) θ = 0
(16.15)
Iz ¨ψ +

Ix −Iy + Iz

ωo ˙φ + ω2
o
	
Iy −Ix

ψ = 0.
(16.16)
It is important to note that the above equations describing the attitude motion of the
spacecraft body relative to the orbiting frame are approximations assuming small angles
and small angular rates.
From equations (16.14), (16.15) and (16.16), it can be seen that the roll and yaw motions
of the spacecraft are coupled, but the pitch motion is independent.
16.2
Stability Analysis
In this section we analyze the stability of the attitude motion described by the approximate
motion equations (16.14), (16.15) and (16.16).
16.2.1
Pitch Motion
The pitch equation (16.15) can be rewritten as
¨θ + αθ = 0,
where
α = 3ω2
o
(Ix −Iz)
Iy
.
Taking the Laplace transform gives
s2 ˆθ(s) −sθ(0) −˙θ(0) + α ˆθ(s) = 0,

Gravity-Gradient Stabilization
273
which can be rearranged for ˆθ(s)
ˆθ(s) = sθ(0) + ˙θ(0)
s2 + α
.
It is clear that the poles of ˆθ(s) satisfy
s2 + α = 0.
That is, the poles are ±√−α. There are now three possible cases.
1. α > 0
In this case, the poles are ± j√α, which are purely imaginary. This means that the solution
for θ(t) is oscillatory. Therefore, the motion is stable.
2. α = 0
In this case, there is a repeated pole at the origin. This means that θ(t) has a component
that grows linearly with time. Therefore, the motion is unstable.
3. α < 0
In this case, the poles are ±√−α, which are real. One of them is positive, the other
is negative. This means that θ(t) has a component that grows exponentially with time.
Therefore, the motion is unstable.
Therefore, we conclude that for the pitch motion to be stable, we must have α > 0, which
means that
Ix > Iz.
(16.17)
Equation (16.15) shows that the pitch motion behaves like an undamped mass-spring system,
with the gravity-gradient torque acting as the spring. The requirement for stability (16.17)
means that the effective spring constant of the gravity-gradient torque is positive. That is, it
provides a restoring torque.
16.2.2
Roll-Yaw Motion
Let us deﬁne the quantities
A =

Ix −Iy + Iz

,
B = 4
	
Iy −Iz

,
C =
	
Iy −Ix

.
(16.18)
Then, we can rewrite the roll and yaw equations (16.14) and (16.16) as
¨φ −ωo
A
Ix
˙ψ + ω2
o
B
Ix
φ = 0,
(16.19)
¨ψ + ωo
A
Iz
˙φ + ω2
o
C
Iz
ψ = 0.
(16.20)

274
Spacecraft Dynamics and Control: An Introduction
Let us now take Laplace transforms to get
s2 ˆφ −sωo
A
Ix
ˆψ + ω2
o
B
Ix
ˆφ = sφ(0) + ˙φ(0) −ωo
A
Ix
ψ(0),
s2 ˆψ + sωo
A
Iz
ˆφ + ω2
o
C
Iz
ˆψ = sψ(0) + ˙ψ(0) + ωo
A
Iz
φ(0).
We can write this in matrix form as

s2 + ω2
o
B
Ix
−sωo A
Ix
sωo A
Iz
s2 + ω2
o
C
Iz
  ˆφ
ˆψ

=

sφ(0) + ˙φ(0) −ωo A
Ix ψ(0)
sψ(0) + ˙ψ(0) + ωo A
Iz φ(0)

,
which can be inverted to get
 ˆφ
ˆψ

=
1

s2 + ω2o
B
Ix
 
s2 + ω2o
C
Iz

+ s2ω2o
A2
Ix Iz
⎡
⎢⎣
s2 + ω2
o
C
Iz
sωo
A
Ix
−sωo
A
Iz
s2 + ω2
o
B
Ix
⎤
⎥⎦
×

sφ(0) + ˙φ(0) −ωo A
Ix ψ(0)
sψ(0) + ˙ψ(0) + ωo A
Iz φ(0)

.
From this, it can be seen that the poles of both ˆφ(s) and ˆψ(s) satisfy the characteristic equation

s2 + ω2
o
B
Ix
 
s2 + ω2
o
C
Iz

+ s2ω2
o
A2
Ix Iz
= 0,
which can be expanded as
s4 +
 A2
Ix Iz
+ B
Ix
+ C
Iz

ω2
os2 + BC
Ix Iz
ω4
o = 0.
(16.21)
Let us deﬁne the quantities
p = A2
Ix Iz
+ B
Ix
+ C
Iz
,
q = BC
Ix Iz
.
(16.22)
Let us also deﬁne
λ = s2
ω2o
.
Then, the characteristic equation (16.21) becomes a quadratic in λ
λ2 + pλ + q = 0.
(16.23)

Gravity-Gradient Stabilization
275
There are two solutions λ of (16.23), given by
λ = −p ±

p2 −4q
2
.
(16.24)
Corresponding to each solution λ are two poles of (16.21) given by
s = ±ωo
√
λ.
Since there are two solutions to (16.23) as shown in (16.24), say λ1 and λ2, there are four poles
for (16.21), namely s = ±ωo
√λ1, ±ωo
√λ2.
There are now four possibilities for each solution λ of (16.23).
1. λ < 0
In this case, the corresponding poles are purely imaginary and are given by s = ± jωo
√−λ.
This leads to oscillatory behavior of φ(t) and ψ(t).
2. λ = 0
In this case, there is a pair of poles at s = 0. This leads to unbounded linear growth of φ(t)
and ψ(t), and hence the motion is unstable.
3. λ > 0
In this case, the corresponding poles are given by s = ±ωo
√
λ, one of which is positive.
This leads to unbounded exponential growth of φ(t) and ψ(t), and hence the motion is
unstable.
4. λ = a + jb with b ̸= 0
That is, λ has an imaginary component. It turns out that
√
λ must lie in the right-half complex
plane (it must have positive real part). To see why, let us represent λ in polar form λ = re jθ,
where r > 0, and −π < θ < π. Then, we have
√
λ = √re j θ
2 . Since −π
2 < θ
2 < π
2 , it must
be that
√
λ has a positive real part, as shown in Figure 16.2.
This means that one of the pair of poles s = ±ωo
√
λ is an unstable pole and leads to
unbounded exponential growth of φ(t) and ψ(t).
From the above four cases, it can be seen that we must have λ < 0 for the motion to be
stable, and that we can at best have bounded oscillatory motion. However, there is an
Re[λ]
Im[λ]
λ
√
λ
r
θ
2
θ
√r
Figure 16.2
Square-root of a complex number

276
Spacecraft Dynamics and Control: An Introduction
additional restriction. If the two solutions of λ1 and λ2 for (16.23) are negative and the
same, that is, λ1 = λ2 < 0 then the result will be a pair of purely imaginary repeated poles
s = ± jωo
√−λ1, ± jωo
√−λ1. This leads to oscillatory behavior with unbounded linear
growth of φ(t) and ψ(t), which is unstable.
Therefore, we conclude that for stability, the solutions λ1 and λ2 of (16.23) must be negative,
and distinct. That is, λ1 < 0, λ2 < 0, λ1 ̸= λ2. Turning to the expression for the solution
(16.24), if p = 0, then
λ = ±√−q.
Then, if q = 0, λ = 0, 0. If q < 0, then the solution λ = √−q is positive. If q > 0, then
λ = ± j√q is imaginary. None of these cases are allowed, therefore we must have p ̸= 0.
Next, we see that to ensure distinct real solutions for λ, we must have
p2 −4q > 0.
(16.25)
Given (16.25), if p < 0, then the solution λ =
−p+√
p2−4q
2
will be positive. Therefore, we
must have
p > 0.
(16.26)
Finally, if q ≤0, then

p2 −4q ≥p, which means that the solution λ =
−p+√
p2−4q
2
will
either be zero or positive. Therefore, we must have
q > 0.
(16.27)
To summarize, for stability, we require the following three conditions:
p > 0,
q > 0,
p2-4q > 0.
Now, the condition p > 0 means by the deﬁnition of p in (16.22) that we must have
A2
Ix Iz
+ B
Ix
+ C
Iz
> 0.
This condition is readily satisﬁed if B > 0 and C > 0, since the quantity A2 ≥0.
The condition q > 0 means by the deﬁnition of q in (16.22) that we must have
BC
Ix Iz
> 0.
Again, this is readily satisﬁed if B > 0 and C > 0.

Gravity-Gradient Stabilization
277
Finally, let us examine the condition p2 −4q > 0. From the deﬁnitions of p and q in
(16.22), we have
p2 −4q =
 A2
Ix Iz
+ B
Ix
+ C
Iz
2
−4 BC
Ix Iz
,
=
 A2
Ix Iz
2
+ 2 A2
Ix Iz
 B
Ix
+ C
Iz

+
 B
Ix
+ C
Iz
2
−4 BC
Ix Iz
,
=
 A2
Ix Iz
2
+ 2 A2
Ix Iz
 B
Ix
+ C
Iz

+
 B
Ix
2
+ 2 BC
Ix Iz
+
C
Iz
2
−4 BC
Ix Iz
,
=
 A2
Ix Iz
2
+ 2 A2
Ix Iz
 B
Ix
+ C
Iz

+
 B
Ix
−C
Iz
2
.
Now, it can readily be shown from the deﬁnition of the moments of inertia, that for any
three-dimensional body, A = Ix −Iy + Iz > 0 (try this as an exercise). Therefore, if B > 0
and C > 0, we see from the above expression that the condition p2 −4q > 0 is automatically
satisﬁed. Finally, making use of the deﬁnitions of B and C in (16.18), the conditions B > 0
and C > 0 translate into Iy > Iz and Iy > Ix.
To conclude, we have seen that if
Iy > Iz,
Iy > Ix,
(16.28)
then the roll-yaw motion is stable in the presence of the gravity-gradient torque.
16.2.3
Combined Pitch and Roll/Yaw
Combining the roll/yaw stability condition in (16.28) with the pitch stability requirement in
(16.17), we obtain the following result.
The spacecraft attitude motion relative to the orbiting frame Fo is stable for small
attitude deviations from Fo if Fb is a principal axes frame, and the principal inertias
satisfy
Iy > Ix > Iz.
(16.29)
Notes
This chapter has presented the elements of gravity-gradient stabilization for spacecraft. For an
in-depth treatment of gravity-gradient stabilization, the reader is referred to Hughes (2004).
For a treatment of gravity-gradient stabilization from a practical point of view, the reader is
referred to Sidi (1997).
References
Hughes PC 2004 Spacecraft Attitude Dynamics. Dover Publications, Mineola, NY.
Sidi MJ 1997 Spacecraft Dynamics and Control: A Practical Engineering Approach. Cambridge University Press,
New York, NY.


17
Active Spacecraft Attitude Control
In Chapters 13 to 16, we have examined passive means of stabilization. That is, making use
of the natural spacecraft dynamics to obtain stability. Unfortunately, the attitude accuracy that
can be obtained by this method is not very high, and the disturbance torques on the spacecraft
can cause it to deteriorate over time. For example, ﬂight experience with the Radio Astronomy
Explorer (RAE) satellite, which is gravity-gradient stabilized, found that the spacecraft pitch
was able to stay within ±20 degrees. For certain types of missions (such as RAE), this kind
of accuracy is acceptable. However, in many other applications (for example space astronomy
missions) the attitude accuracy requirements are very stringent. For example, the MOST
microsatellite (a Canadian space telescope) is required to be able to maintain a given attitude
to within 25 arcseconds, so that it can observe a star for long periods of time without blurring
the image. To be able to achieve such accuracy, an active attitude control system is needed.
This is not to say that what we have studied in terms of passive stabilization is not useful.
On the contrary, it is very useful to design a spacecraft that has passive stability (if possible),
and then augment this with an active control scheme. Since the spacecraft attitude has natural
stability, the control system does not need to work as hard to maintain the required attitude. It
also means that the attitude remains stable if the control system fails.
An active spacecraft attitude control system consists of attitude sensors, attitude actuators
and typically a processor. The attitude sensors take measurements which are used to compute
the current spacecraft attitude and/or angular velocity. The attitude actuators then supply
torques to correct the difference between the measured and desired attitude. The mathematical
relationship between the measured attitude and the corrective torques is called a control law,
and is implemented as a program on the processor.
For the next several chapters, we are going to develop some of the tools required to design
an active control system. The theory presented will be applicable to a much broader class of
problems than just spacecraft attitude control. However, we shall try to illustrate as much of
it as possible in terms of spacecraft attitude control. We shall not worry about the sensor and
actuator details. Rather, we shall assume that the attitude and/or angular velocity are available
for measurement, and that there are actuators capable of supplying the control torques we want.
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

280
Spacecraft Dynamics and Control: An Introduction
We shall discuss spacecraft attitude determination methods and sensor and actuator types and
their limitations in Chapters 25 and 26 respectively.
Even though the spacecraft attitude dynamics are nonlinear, in the next several chapters
(Chapters 17 to 23) we are going to restrict ourselves to the control design of linear systems.
We shall discuss nonlinear spacecraft attitude control design in Chapter 24. The lessons
learned from control design for linear systems are very important, even in the control design
for nonlinear systems. In fact in practise, spacecraft attitude control designs typically begin
with a linear analysis and design of the control system. Only once this has been completed is
the full nonlinear system considered. To be able to do this, the spacecraft attitude dynamics and
kinematics are linearized about a desired attitude conﬁguration. We have already performed
such linearizations several times in the stability analyses of equilibria in spin stabilization
(Chapter 14), dual-spin stabilization (Chapter 15) and gravity-gradient stabilization (Chapter
16). In each of these cases when we said we would consider small deviations in attitude and
angular velocity from some nominal case, we were performing a linearization.
17.1
Attitude Control for a Nominally Inertially Fixed Spacecraft
In this section, we are going to formulate the attitude control problem in the case where
we wish to control the attitude relative to some inertially ﬁxed reference frame Fref . Let us
represent the attitude of the body-ﬁxed frame Fb relative to Fref by a 3-2-1 Euler sequence
(see Section 11.2):
1. A rotation ψ about the original z-axis (called the yaw angle).
2. A rotation θ about the intermediate y-axis (called a pitch angle).
3. A rotation φ about the transformed x-axis (called a roll angle).
We further assume that Fb is a principal axis frame. The spacecraft attitude motion is therefore
completely described by the kinematic and dynamic equations (see Sections 11.2 and 11.3)
⎡
⎣
ωx
ωy
ωz
⎤
⎦=
⎡
⎣
1
0
−sin θ
0
cos φ
sin φ cos θ
0
−sin φ
cos φ cos θ
⎤
⎦
⎡
⎣
˙φ
˙θ
˙ψ
⎤
⎦,
(17.1)
and
Ix ˙ωx + (Iz −Iy)ωyωz = Txc + Txd,
Iy ˙ωy + (Ix −Iz)ωxωz = Tyc + Tyd,
Iz ˙ωz + (Iy −Ix)ωxωy = Tzc + Tzd,
(17.2)
respectively. Note that we have split the external torque into two components, the control
torque T·c, which can be applied by the actuator, and the disturbance torque T·d which is
present but unwanted.

Active Spacecraft Attitude Control
281
It is clear that the equations (17.1) and (17.2) are nonlinear. However, we shall assume small
angles and rates, just as we did in Section 16.1. In this case, equation (17.1) becomes
⎡
⎣
ωx
ωy
ωz
⎤
⎦=
⎡
⎣
˙φ
˙θ
˙ψ
⎤
⎦,
which when substituted into (17.2) leads to (after neglecting second order terms)
Ix ¨φ = Txc + Txd,
Iy ¨θ = Tyc + Tyd,
Iz ¨ψ = Tzc + Tzd.
(17.3)
We see that each of the equations in (17.3) are decoupled from each other, and have the same
form. Therefore, we only need to consider one axis at a time, which we will generically write
as
I ¨θ = Tc + Td.
(17.4)
To further introduce some control system terminology, the system we are trying to regulate
is called the plant. In our case, the plant is described by the spacecraft attitude dynamics (17.4).
The quantity that we are interested to control is the attitude angle θ, which is generically called
the plant output, and is generally labeled y(t), such that on our case,
y(t) = θ(t).
The quantity that can be used to affect the attitude is the control torque, which is generically
called the control input or plant input, and is generally labeled u(t), such that in our case,
u(t) = Tc(t).
17.2
Transfer Function Representation of a System
In many cases in control system design, we are not so much interested in the response of
the output to non-zero initial conditions. These will disappear to zero anyway provided the
control system is designed to be asymptotically stabilizing (which it should be). Rather, we
are interested in how the system responds to an input, which will affect how the control
system should be designed. Therefore, we set the initial conditions to zero. Taking the Laplace
transform of (17.4) with zero initial conditions, we get
Is2 ˆθ(s) = ˆTc(s) + ˆTd(s),
and with Y(s) = ˆθ(s) and U(s) = ˆTc(s), we have the relationship between input and output
Y(s) =
1
Is2

U(s) + ˆTd(s)

.
(17.5)

282
Spacecraft Dynamics and Control: An Introduction
The ratio
G(s) = Y(s)
U(s)
 ˆTd(s)=0
= Y(s)
ˆTd(s)

U(s)=0
=
1
Is2 ,
(17.6)
is known as the transfer function from plant input to plant output, and it determines how the
output behaves in response to a given input. Note that since we have two plant inputs (the
control input and the disturbance) we actually have two plant transfer functions, one from
control input to output, the other from disturbance to output. As seen in equation (17.5), in this
case they are both the same and are given by (17.6). In particular, we see that (17.5) becomes
Y(s) = G(s)

U(s) + ˆTd(s)

.
(17.7)
In general, for a linear time-invariant system with one input and one output, the transfer
function will have the form
G(s) = a0sm + a1sm−1 + . . . + am
sn + b1sn−1 + . . . bn
,
where m ≤n, and ai, bi are real coefﬁcients. As was detailed in Appendix A, G(s) can be
factored into
G(s) = K
	m
i=1(s −zi)
	n
i=1(s −pi),
where zi are the roots of a0sm + a1sm−1 + . . . + am = 0, called the zeros of G(s), and pi are
the roots of sn + b1sn−1 + . . . bn = 0, called the poles of G(s).
17.3
System Response to an Impulsive Input
To ﬁnd the response of a system with transfer function G(s), subject to an input u(t), we only
need to ﬁnd the Laplace transform of u(t), U(s) = L (u(t)), and then referring to (17.7) with
ˆTd(s) = 0, the response is given by
y(t) = L−1 (Y(s)) = L−1 (G(s)U(s)) .
A special type of input is the unit impulse, δ(t). To motivate what an impulse response
physically means, consider a short constant input (unit pulse) at time t = 0, with magnitude A
and duration T , such that the area under the curve is one, as shown in Figure 17.1. That is,
f (t) =
⎧
⎨
⎩
0,
t > T
A,
0 ≤t ≤T
0,
t < 0

Active Spacecraft Attitude Control
283
t
f(t)
A
ΔT
Figure 17.1
Unit pulse
and
 ∞
−∞
f (t)dt = AT = 1.
Let us now examine the integral
 ∞
−∞
f (t)g(t)dt,
for any other function g(t) which is assumed to be continuous on the interval t ∈[0, T ].
Then,
 ∞
−∞
f (t)g(t)dt =
 T
0
Ag(t)dt.
By the mean-value theorem, the integral is given by
 ∞
−∞
f (t)g(t)dt = Ag(t′)t = g(t′),
for some 0 ≤t′ ≤T . Letting T →0, we see that
lim
T→0
 ∞
−∞
f (t)g(t)dt = g(0).
This motivates the deﬁnition of an impulse function, denoted by δ(t). It is deﬁned by the
integral
 ∞
−∞
g(t)δ(t)dt = g(0).
(17.8)
Physically, a unit impulse is a unit pulse applied over an inﬁnitely short period of time. It does
not exist in practise, but it is a good approximation.

284
Spacecraft Dynamics and Control: An Introduction
Let us now evaluate a system response to a unit impulse (u(t) = δ(t)). The Laplace transform
of an impulse is given by
L (δ(t)) =
 ∞
0−e−stδ(t)dt = e−s0 = 1.
Therefore, if the input to a system with transfer function G(s) is a unit impulse, the impulse
response is given by the inverse Laplace transform of the transfer function itself
y(t) = L−1 (G(s)) = g(t),
when u(t) = δ(t). Therefore, the inverse Laplace transform of the transfer function g(t) =
L−1 (G(s)) is called the impulse response of the system.
As a result of the convolution theorem (see Appendix A), the system response to any input
u(t) is given by the convolution between the system unit impulse response g(t), and the input
u(t), which is given by
y(t) =
 t
0
g(t −τ)u(τ)dτ.
17.4
Block Diagrams
We have seen that a system can be represented by a transfer function G(s), relating the inputs
U(s) to the outputs Y(s) by
Y(s) = G(s)U(s).
This can be represented pictorially using a block diagram, as shown in Figure 17.2. Now,
suppose the input U(s) is actually the output of another system with transfer function H(s)
with input W(s) (U(s) = H(s)W(s)). Then, we have
Y(s) = G(s)H(s)W(s),
and the transfer function for the combined system is G(s)H(s). This is called a series connec-
tion of transfer functions. Pictorially, this is represented as shown in Figure 17.3. Therefore,
you can see that a block diagram represents the ﬂow of information, with the transfer function
blocks operating on the inputs using multiplication to yield the outputs.
Let us look at some other typical block diagram operations.
The parallel connection between G(s) and H(s) is
Y(s) = G(s)U(s) + H(s)U(s) = (G(s) + H(s)) U(s).
G(s)
Y (s)
U(s)
Figure 17.2
Block diagram

Active Spacecraft Attitude Control
285
G(s)
Y (s)
U(s)
W(s)
H(s)
G(s)H(s)
W(s)
Y (s)
Figure 17.3
Series connection
Pictorially, this is represented as shown in Figure 17.4. The point shown in Figure 17.5 is called
a summing point because the incoming signals are added. The point shown in Figure 17.6 is
called a branch point, and the same signal is sent in multiple directions.
The ﬁnal block diagram operation we will look at is the feedback interconnection, and
is represented in block diagram form in Figure 17.7. Let us look at how the mathematics
of the feedback connection works. Let A(s) = H(s)Y(s) be the output of H(s), and let
B(s) = U(s) −A(s). Then,
Y(s) = G(s)B(s) = G(s) [U(s) −A(s)] = G(s)U(s) −G(s)H(s)Y(s),
G(s)
Y (s)
U(s)
H(s)
G(s) + H(s)
Y (s)
+
+
U(s)
Figure 17.4
Parallel connection
+
+
Figure 17.5
Summing point

286
Spacecraft Dynamics and Control: An Introduction
Figure 17.6
Branch point
which can be rearranged to give
Y(s) =
G(s)
1 + G(s)H(s)U(s).
Hence, the transfer function for the feedback interconnection is given by
G(s)
1 + G(s)H(s).
Using the block diagram reductions given in Figures 17.3 to 17.7, any complicated block
diagram can be reduced to a single block.
17.5
The Feedback Control Problem
Let us now return to our attitude control design problem in Section 17.1. From (17.7), we see
that the plant (spacecraft attitude dynamics) are represented by
Y(s) = G p(s)

U(s) + ˆTd(s)

,
where G p(s) =
1
Is2 and the subscript p has been added to signify that the transfer function
is for the plant. The output Y(s) = ˆθ(s) is the attitude, the input U(s) = ˆTc(s) is the control
G(s)
Y (s)
U(s)
H(s)
G(s)
1+G(s)H(s)
Y (s)
+
−
U(s)
Figure 17.7
Feedback interconnection

Active Spacecraft Attitude Control
287
R(s) +
−
+
+
W(s)
U(s)
ˆTd(s)
Gc(s)
Gp(s)
Y (s)
+
+
Figure 17.8
Feedback control system
torque, and ˆTd(s) is the disturbance torque. Our control objective is to make the output y(t)
(and hence the attitude θ(t)) follow a reference signal r(t) (a desired attitude θd(t)), which has
Laplace transform R(s) = ˆθd(s). Our control input must therefore correct the output error (the
error in attitude e(t) = θd(t) −θ(t) = r(t) −y(t)). That is, our control objective is to drive
the error e(t) to zero.
Let us therefore represent the control law by a transfer function Gc(s) such that
U(s) = Gc(s)E(s).
where E(s) = L (e(t)). Unfortunately for any real sensor, the measurement is not perfect, but
is corrupted by noise w(t) (which has Laplace transform W(s)). That is, our sensor does not
provide y(t), but it provides y(t) + w(t). Therefore, we can only provide our control law with
the measured error
e(t) = r(t) −(y(t) + w(t)),
and not the true error. We can now represent the full feedback control system in block diagram
form as shown in Figure 17.8. Note that a more general feedback control system includes a
sensor transfer function H(s), as shown in Figure 17.9. For now, we shall restrict ourselves to
R(s) +
−
+
+
W(s)
U(s)
ˆTd(s)
Gc(s)
Gp(s)
Y (s)
+
+
H(s)
Figure 17.9
General feedback control system

288
Spacecraft Dynamics and Control: An Introduction
the case with H(s) = 1 as in Figure 17.8, which is called a unity feedback system. The theory
to be presented is still valid for the more general case, provided a little care is taken in its
application. Returning to our problem, we can see from Figure 17.8, that our system has three
inputs. Namely, the reference signal R(s), the disturbance ˆTd(s) and the measurement noise
W(s). We can determine the effect of each input on the output separately. Since the system is
linear, the combined effect on the output is just the sum of the individual effects.
Let Yr(s) be the response to the reference signal R(s) with ˆTd(s) = W(s) = 0. Then,
Yr(s) = G p(s)Gc(s)E(s).
But, E(s) = R(s) −Yr(s), so that
Yr(s) = G p(s)Gc(s) (R(s) −Yr(s)) ,
which rearranges to give
Yr(s) =
G p(s)Gc(s)
1 + G p(s)Gc(s) R(s).
Next, let Yd(s) be the response to the disturbance ˆTd(s) with R(s) = W(s) = 0. Then,
Yd(s) = G p(s)

U(s) + ˆTd(s)

= G p(s)Gc(s)E(s) + G p(s) ˆTd(s).
With E(s) = −Yd(s), we have
Yd(s) = G p(s)

U(s) + ˆTd(s)

= −G p(s)Gc(s)Yd(s) + G p(s)Td(s),
which rearranges to give
Yd(s) =
G p(s)
1 + G p(s)Gc(s)
ˆTd(s).
Finally, let Yw(s) be the response to the measurement noise W(s) with R(s) = ˆTd(s) = 0.
Then,
Yw(s) = G p(s)Gc(s)E(s).
With E(s) = −(Yw(s) + W(s)), we have
Yw(s) = −G p(s)Gc(s) (Yw(s) + W(s)) ,
which rearranges to give
Yw(s) = −
G p(s)Gc(s)
1 + G p(s)Gc(s)W(s).

Active Spacecraft Attitude Control
289
The combined response to R(s), ˆTd(s) and W(s) is the sum
Y(s) = Yr(s) + Yd(s) + Yw(s),
=
G p(s)Gc(s)
1 + G p(s)Gc(s) R(s) +
G p(s)
1 + G p(s)Gc(s)
ˆTd(s) −
G p(s)Gc(s)
1 + G p(s)Gc(s)W(s).
(17.9)
Ideally our control system design would be such that the output Y(s) matches the reference
signal R(s) exactly (the actual attitude follows the desired attitude perfectly), that is Y(s) =
R(s). Now, G p(s) is the plant, and we cannot change that. However, Gc(s) is the controller,
and this is up to our discretion. From equation (17.9), we see that if |Gc(s)| →∞(let the
control be large), then
G p(s)Gc(s)
1 + G p(s)Gc(s) →1 and
G p(s)
1 + G p(s)Gc(s) →0,
that is, we get perfect tracking (Yr(s) = R(s)), and the response to disturbances becomes
zero (Yd(s) = 0). Unfortunately, the side-effect is that the response to measurement noise has
also become large, i.e. Yw(s) = −W(s). This is the compromise we face as control system
designers. We cannot simultaneously reject disturbances and measurement noise. However,
all is not lost, as we shall see later when we study frequency response based control design
methods in Chapter 23.
17.6
Typical Control Laws
Let us now look at some of the more common types of control. We shall neglect the measure-
ment noise in this discussion (we set W(s) = 0). For reference, the equation of motion of our
spacecraft attitude is (see (17.4))
I ¨y = u(t) + Td(t).
17.6.1
Proportional “P” Control
In proportional control, the control input is just a scaling of the error signal,
u(t) = K pe(t),
where K p > 0 is known as the proportional gain. The associated control transfer function is
Gc(s) = K p.
For second order systems, such as our attitude control problem, proportional control acts as
a spring with constant K p, as shown in Figure 17.10. Assuming the reference attitude r(t) is

290
Spacecraft Dynamics and Control: An Introduction
Kp
r
y
e
Figure 17.10
Proportional control
constant, and neglecting the disturbance Td, the equation of motion for the spacecraft becomes
I ¨y = K pe(t) = K p (r −y(t)) .
This is just a spring-mass system. It is clear that if the reference attitude r(t) is constant, the
resulting closed-loop behavior is undamped oscillatory attitude motion.
17.6.2
Proportional Derivative “PD” Control
Pure undamped oscillatory motion as results from the use of proportional control is not
desirable. Therefore, by adding a derivative term to proportional control, we can add some
damping. The proportional derivative control law is given by
u(t) = K pe(t) + Kd ˙e(t),
where Kd > 0 is the derivative gain. The associated control transfer function is
Gc(s) = K p + sKd.
For a second order system, such as our attitude control problem, proportional-derivative control
acts like a spring and viscous damper, with spring-constant K p, and damping constant Kd, as
shown in Figure 17.11. Assuming the reference attitude r(t) is constant, and neglecting the
disturbance Td, the equation of motion for the spacecraft becomes
I ¨y = K p(r −y(t)) −Kd ˙y.
This is just a spring-mass-damper system. It is clear that if the reference attitude r(t) is
constant, any oscillatory behavior due to the spring dies out due to the damping term.

Active Spacecraft Attitude Control
291
Kp
r
y
e
Td
Kd
Figure 17.11
Proportional-derivative control
17.6.3
Proportional Integral Derivative “PID” Control
Continuing our assumption that the reference attitude r(t) is constant, let us now add a constant
external disturbance torque Td to our spacecraft with proportional-derivative control, as shown
in Figure 17.11. The equation of motion is now
I ¨y = K p (r −y(t)) −Kd ˙y + Td.
The effective spring-damper system of the PD control law will cause all oscillations to die out.
However, there will be a steady-state error in the attitude. This can readily be seen by a torque
balance on the spacecraft. Assuming that our reference attitude r(t) is constant, at steady-state
the derivatives of the attitude ˙y = ¨y = 0. We must therefore have from above
K p (r −y) + Td = 0,
That is, the steady-state error is
e = r −y = −Td
K p
,
which is clearly non-zero. Graphically, the error at steady-state with PD control is shown
in Figure 17.12. The problem is that the proportional-derivative control has no memory. To
t
e
A =
t
0 e dτ
−Td
Kp
Figure 17.12
Steady-state error with PD control

292
Spacecraft Dynamics and Control: An Introduction
provide the controller with the capability of driving the error to zero in the presence of a
constant disturbance, an integral term is added to the control law:
Ki
 t
0
e(τ)dτ,
where Ki > 0 is the integral gain. Therefore the PID control law is given by
u(t) = K pe(t) + Kd ˙e(t) + Ki
 t
0
e(τ)dτ,
and the corresponding transfer function is
Gc(s) = K p + sKd + Ki
s .
To understand why the integral term drives the error to zero, let us again consider Figure 17.12.
The integral term has memory, that is, it is proportional to the area under the error curve, A. If
the error is non-zero, the integral term grows, providing a larger and larger correcting torque,
until the disturbance torque has been compensated and the error is zero. Effectively, the integral
term learns what the disturbance torque is.
17.7
Time-Domain Speciﬁcations
We have now seen what a control law looks like, how the closed-loop system is formed, and
some typical types of control. Now, we need some guidelines as to how to design the controller.
That is, how do we want the closed-loop system to perform.
First and foremost, the control law must provide asymptotic stability to the closed-loop
system. To illustrate, imagine that we excite the closed-loop system
Y(s) =
G p(s)Gc(s)
1 + G p(s)Gc(s) R(s),
with a unit impulse (r(t) = δ(t)). Asymptotic stability means that the impulse response
y(t) = L−1

G p(s)Gc(s)
1 + G p(s)Gc(s)

,
must asymptotically go to zero. As we have seen in Section 14.1, this means that the poles of
the closed-loop transfer function
T (s) =
G p(s)Gc(s)
1 + G p(s)Gc(s),
must have negative real parts.

Active Spacecraft Attitude Control
293
r(t)
t
1
0
Figure 17.13
Unit step input
Provided that the closed-loop system is asymptotically stable, the time-domain response to
a reference input and/or disturbance consists of two parts: transient behavior (behavior that
dies out), and steady-state behavior (behavior that persists). Both components are important
in specifying the desired time-domain behavior.
17.7.1
Transient Speciﬁcations
Transient speciﬁcations are often given in terms of the response of the closed-loop system to
a unit step command. In our case, this means the attitude response to a unit step command in
the desired attitude (see Figure 17.13). That is for a reference attitude satisfying
r(t) =
1,
t ≥0
0,
t < 0
Let us examine the unit step response for a modiﬁed proportional-derivative control of
our spacecraft attitude (the most common control for this type of system). The standard
proportional-derivative control law is
u(t) = K pe(t) + Kd ˙e(t).
This control law becomes problematic to implement when ˙e(t) does not exist, such as occurs
at step changes in the reference signal r(t). Practically, step changes in r(t), cause a large spike
in ˙e(t), which effectively results in an impulse within the control u(t), at the time of the step
change. To overcome this problem, the proportional-derivative control law can be modiﬁed to
the form
u(t) = K pe(t) −Kd ˙y(t),
with K p > 0 and Kd > 0. Since y(t) is always differentiable, this avoids the problem. More
generally, it avoids large control inputs (possibly outside the actuator capabilities) resulting
from rapid changes in reference signal r(t). The block diagram of this implementation is
shown in Figure 17.14. Note that measurement noise is not included. To keep the framework
the same as in Figure 17.8, we have included the derivative term in the plant G p(s), rather than
the control Gc(s). So, as seen in Figure 17.14, the modiﬁed proportional-derivative control is
equivalent to proportional control of the plant which is augmented with the derivative term.

294
Spacecraft Dynamics and Control: An Introduction
R(s) +
−
ˆTd(s)
Kp
Y (s)
+
+
−
Kds
1
Is2
R(s) +
−
ˆTd(s)
Kp
Y (s)
+
+
1
Is2+Kds
Figure 17.14
Modiﬁed Proportional-Derivative Control
Only the response to a step command in attitude r(t) is relevant at this stage, so we set the
disturbance and measurement noise to zero.
Referring to Figure 17.14, we have the augmented plant transfer function,
G p(s) =
1
Is2 + Kds ,
and the effective control transfer function
Gc(s) = K p.
The closed-loop response to a reference command R(s) with ˆTd(s) = 0 (no disturbance since
we are interested in response to a command) is then given by
Y(s) = T (s)R(s),
where the closed-loop transfer function is
T (s) =
G p(s)Gc(s)
1 + G p(s)Gc(s) =
K p/(Is2 + Kds)
1 + K p/(Is2 + Kds),
=
(K p/I)
s2 + (Kd/I)s + (K p/I).

Active Spacecraft Attitude Control
295
It will be useful to deﬁne
ω2
n = K p
I ,
2ζωn = Kd
I ,
(17.10)
The quantity ωn is known as the undamped natural frequency, and ζ is known as the damping
ratio. In terms of these quantities, the closed-loop transfer function becomes
T (s) =
ω2
n
s2 + 2ζωns + ω2n
.
(17.11)
Equation (17.11) generically describes a second order system, so we see that with PD control,
the closed-loop spacecraft attitude system is second order. The closed-loop poles can be
obtained using the quadratic equation solution and are given by
s = −ζωn ± ωn

ζ 2 −1.
There are now three cases:
Case 1: 0 < ζ < 1. The system is called underdamped. In this case,

ζ 2 −1 is imaginary,
and there are two complex conjugate poles
s = −ζωn ± jωn

1 −ζ 2,
as shown in Figure 17.15. We call ωd = ωn

1 −ζ 2 the damped natural frequency. The poles
can be rewritten as
s = −ζωn ± jωd.
These poles lead to decaying oscillatory behavior at frequency ωd.
Re[s]
Im[s]
ωn
1 −ζ2
−ωn
1 −ζ2
−ζωn
Figure 17.15
Complex-conjugate poles

296
Spacecraft Dynamics and Control: An Introduction
Re[s]
Im[s]
−ωn
Figure 17.16
Double poles
Case 2: ζ = 1. The system is called critically damped. In this case, the poles are
s = −ωn, −ωn,
as shown in Figure 17.16.
Case 3: ζ > 1. The system is called overdamped. In this case,

ζ 2 −1 is real, and there are
two distinct negative real poles
s = −ζωn ± ωn

ζ 2 −1,
as shown in Figure 17.17.
Figure 17.18 shows the step response for different values of ζ. It can be seen that in Case
1, the transient behavior has an oscillatory component, which results in some overshoot of
steady-state value. It can be seen that in both Cases 2 and 3, the transient response decays
exponentially, but does not have any oscillatory component, and hence no overshoot. It can
be seen in Figure 17.18 that this lack of overshoot comes at the expense of slower response
to the step command. In some applications, it is desirable to have no overshoot. However, for
spacecraft attitude control, this is typically not the case, and some overshoot allows us to have
faster response. Hence, we shall restrict ourselves to Case 1 (the underdamped case).
Let us now examine the step response in the underdamped case. We have reference command
R(s) = 1
s ,
so that the step response is given by
Y(s) =
ω2
n
s2 + 2ζωns + ω2n
1
s .
Re[s]
Im[s]
−ζωn
+ωn
ζ2 −1
−ζωn
−ωn
ζ2 −1
Figure 17.17
Distinct real poles

Active Spacecraft Attitude Control
297
0
2
4
6
8
10
12
0
0.2
0.4
0.6
0.8
1
1.2
1.4
Step response with modified PD control
ωnt
y
ζ=0.3
ζ=0.7
ζ=1.0
ζ=1.4
Figure 17.18
Unit step response
We can expand Y(s) in a partial fraction expansion (check it for yourself)
Y(s) = 1
s −
s + 2ζωn
s2 + 2ζωns + ω2n
= 1
s −
s + ζωn
s2 + 2ζωns + ω2n
−
ζωn
s2 + 2ζωns + ω2n
.
We now complete the square in the denominator to get
s2 + 2ζωns + ω2
n =

s2 + 2ζωns + ζ 2ω2
n

+ ω2
n −ζ 2ω2
n,
= (s + ζωn)2 + ω2
n

1 −ζ 2
,
= (s + ζωn)2 + ω2
d.
Therefore, we can rewrite the step response as
Y(s) = 1
s −
s + ζωn
(s + ζωn)2 + ω2
d
−ζωn
ωd
ωd
(s + ζωn)2 + ω2
d
.
Taking the inverse Laplace transform using the table in Section A.5 (try it for yourself), we
obtain the step response in the time-domain
y(t) = 1 −e−ζωnt

cos ωdt + ζωn
ωd
sin ωdt

.
(17.12)

298
Spacecraft Dynamics and Control: An Introduction
y
yfinal
2%
t
ts
tp
tr
Mp
Figure 17.19
Time-domain speciﬁcations based on a unit step response
17.7.1.1
Time-Domain Speciﬁcations
Based on the unit step response, a number of different time-domain speciﬁcations may be
given.
• Rise time tr - the time taken for the step response to ﬁrst reach the ﬁnal value.
• Peak time tp - the time taken to ﬁrst achieve the peak response.
• Maximum overshoot Mp - the maximum percentage overshoot from the ﬁnal value.
• Settling time ts - the time taken for the output to get to within 2% of the ﬁnal value and stay
there.
The meanings of each of these speciﬁcations are illustrated in Figure 17.19.
Note that the above deﬁnition of rise-time is only useful if the damping ratio, ζ is not close
to 1. If ζ is close to 1, the system almost behaves like a critically damped system. It may well
be that the rise-time under the deﬁnition given here is very long, but if the poles are very fast,
it could be that the settling time is less than the rise-time, as shown in Figure 17.20. That is,
the response is close to the ﬁnal value in much less time than is indicated by the rise-time
as deﬁned above. In this case, a different deﬁnition of rise-time is more useful. The deﬁnition
used most often is the time taken to rise from 10% to 90% of the ﬁnal value. This concept is
illustrated in Figure 17.20.
Making use of our knowledge of the unit step response, we can now obtain expressions
for each of the speciﬁcations in terms of the damping ratio ζ and the undamped natural
frequency ωn.
17.7.1.2
Rise Time
The rise time is the time taken to ﬁrst reach the ﬁnal value. From (17.12), we see that at t = tr,
the output is y(tr) = 1. Therefore, from (17.12) we must solve
cos ωdtr + ζωn
ωd
sin ωdtr = 0.

Active Spacecraft Attitude Control
299
y
yfinal
2%
t
tr
0.9yfinal
0.1yfinal
Figure 17.20
Alternative rise-time deﬁnition for damping ratios close to 1
This rearranges to give
tan ωdtr =
ωd
−ζωn
= ωn

1 −ζ 2
−ωnζ
.
But, this can readily be obtained from the pole location, as shown in Figure 17.21. Note that
−ωnζ is the real part of the pole, and ωd is the imaginary part of the pole. From the plot of
the pole, we have
ωdtr = π −β,
which leads to the expression for the rise time
tr = π −β
ωd
,
(17.13)
Im[s]
ωd
−ζωn
ωdt
β
Figure 17.21
Relationship between rise-time and pole location

300
Spacecraft Dynamics and Control: An Introduction
Re[s]
Im[s]
locus of poles giving constant rise time
allowable region for poles if tr ≤¯tr
Figure 17.22
Relationship between pole locations and rise-time
where
β = tan−1

1 −ζ 2
ζ

.
(17.14)
Note that we have made use of the fact that ωd/(ζωn) =

1 −ζ 2/ζ. See Figure 17.22 for the
relationship between pole locations and rise-time. In particular, the allowable pole locations are
shown for a given rise-time constraint tr ≤¯tr, where ¯tr > 0 is the given maximum allowable
rise-time.
17.7.1.3
Peak Time
The peak time occurs at the ﬁrst time when dy/dt = 0. Taking the derivative of (17.12), we
obtain
dy
dt = ζωne−ζωnt

cos ωdt + ζωn
ωd
sin ωdt

−e−ζωnt

−ωd sin ωdt + ζωn
ωd
ωd cos ωdt

,
= e−ζωnt sin ωdt
ζ 2ω2
n
ωd
+ ωd

.
From this, we ﬁnd that at the peak time t = tp, we must have
sin ωdtp = 0.
That means, ωdt = 0, π, 2π, 3π, . . . . Clearly, the ﬁrst peak corresponds to ωdtp = π. There-
fore, the peak time is
tp = π
ωd
.
(17.15)
From (17.15) we see that the peak time depends only in the imaginary part of the pole
s = ζωn ± jωd. See Figure 17.23 for the relationship between pole locations and peak-time.

Active Spacecraft Attitude Control
301
Re[s]
Im[s]
locus of poles giving constant peak time
allowable region for poles if tp ≤¯tp
Figure 17.23
Relationship between pole locations and peak-time
In particular, the allowable pole locations are shown for a given peak-time constraint tp ≤¯tp,
where ¯tp > 0 is the given maximum allowable peak-time.
17.7.1.4
Maximum Overshoot
The maximum overshoot occurs at the peak time t = tp, with the maximum response being
yp = 1 −e−ζωnt

cos ωdtp + ζωn
ωd
sin ωdtp

.
But, we know that ωdtp = π, such that cos ωdtp = −1 and sin ωdtp = 0. Therefore, the max-
imum response is
yp = 1 + e−πζωn/ωd = 1 + e−πζ/√
1−ζ 2.
The maximum percentage overshoot of the ﬁnal value is then
Mp = yp −1
1
× 100% = e−πζ/√
1−ζ 2 × 100%.
(17.16)
It is clear from (17.16) that the maximum overshoot depends only on the damping ratio, ζ.
Likewise, the ratio between the real and imaginary part of the closed-loop poles (given by
s = −ζωn ± jωn

1 −ζ 2) also depends only on the damping ratio.
Re(s)
Im(s) = ∓
ζ

1 −ζ 2 .
See Figure 17.24 for the relationship between pole locations and percent overshoot. In par-
ticular, the allowable pole locations are shown for a given maximum percentage overshoot
constraint Mp ≤¯Mp, where ¯Mp > 0 is the given maximum allowable percent overshoot.

302
Spacecraft Dynamics and Control: An Introduction
Re[s]
Im[s]
locus of poles giving constant overshoot
allowable region for poles if Mp ≤¯
Mp
Figure 17.24
Relationship between pole locations and overshoot
17.7.1.5
Settling Time
As seen in (17.12), the difference between the current and ﬁnal value of y(t) is
y(t) −1 = −e−ζωnt

cos ωdt + ζωn
ωd
sin ωdt

.
We can rewrite
cos ωdt + ζωn
ωd
sin ωdt =

ζ 2
1 −ζ 2 + 1
 1
2
sin (ωdt + φ) ,
where
φ = tan−1
⎛
⎝
1
ζ
√
1−ζ 2
⎞
⎠.
Noting that
ζ 2
1 −ζ 2 + 1 =
1
1 −ζ 2 ,
we have
y(t) −1 = −e−ζωnt

1 −ζ 2 sin (ωdt + φ) .
Since we know that | sin (ωdt + φ) | ≤1, we obtain the bound
|y(t) −1| ≤
e−ζωnt

1 −ζ 2 .

Active Spacecraft Attitude Control
303
We are therefore guaranteed that the percentage deviation from the ﬁnal value satisﬁes
|y(t) −1|
1
× 100% ≤2%,
when
e−ζωnt

1 −ζ 2 ≤0.02.
We therefore take the settling time to satisfy
e−ζωnts

1 −ζ 2 = 0.02,
which leads to the expression for the settling time
ts =
ln

0.02

1 −ζ 2

−ζωn
.
(17.17)
For damping ratios between 0.1 and 0.9, the quantity −ln(0.02

1 −ζ 2), varies between 3.9
and 4.8. We may therefore approximate the expression for the settling time (17.17) by
ts ≈4.4
ζωn
.
(17.18)
This shows that the settling time depends primarily on the real part of the poles. See Fig-
ure 17.25 for the relationship between pole locations and settling time. In particular, the
allowable pole locations are shown for a given settling-time constraint ts ≤¯ts, where ¯ts > 0 is
the given maximum allowable settling-time.
Re[s]
Im[s]
locus of poles giving constant settling time
allowable region for poles if ts ≤¯ts
Figure 17.25
Relationship between pole locations and settling time

304
Spacecraft Dynamics and Control: An Introduction
Example 17.1 (PD controller design for spacecraft attitude control) Suppose that our
spacecraft has moment of inertia I = 1 kg·m2, and that the following time-domain design
speciﬁcations are given.
1. Rise-time constraint, tr ≤30 seconds.
2. Maximum overshoot constraint, Mp ≤30%.
3. Settling-time constraint, ts ≤100 seconds.
From equation (17.13), we see that the rise-time constraint leads to the requirement
π −β
ωd
≤30,
which can be rearranged to give
β ≥π −30ωd.
The allowable region for closed-loop poles to satisfy the rise-time constraint is shown in
Figure 17.26. From (17.16), the maximum overshoot constraint leads to
e
−
πζ
√
1−ζ2 ≤0.3,
which rearranges to give
ζ

1 −ζ 2 ≥−ln 0.3
π
.
−0.7
−0.6
−0.5
−0.4
−0.3
−0.2
−0.1
0
−0.1
−0.05
0
0.05
0.1
0.15
Rise time constraint
−ζωn
ωd
Figure 17.26
Allowable region for rise time constraint

Active Spacecraft Attitude Control
305
−0.14
−0.12
−0.1
−0.08
−0.06
−0.04
−0.02
0
−0.2
−0.15
−0.1
−0.05
0
0.05
0.1
0.15
0.2
Maximum overshoot constraint
−ζωn
ωd
Figure 17.27
Allowable region for overshoot constraint
This can be further rearranged to give

1 −ζ 2
ζ
≤−
π
ln 0.3.
Recognizing that the angle β = tan−1(
√
1−ζ 2
ζ
) (see (17.14)), we have
β ≤tan−1 
−
π
ln 0.3

= 1.205 (69◦).
Therefore, to satisfy the overshoot requirement, the closed-loop poles must lie in the shaded
region shown in Figure 17.27. From equation (17.18), we see that the settling time constraint
leads to the requirement
4.4
ζωn
≤100,
which can be rearranged to give
ζωn ≥4.4
100 = 0.044.
(17.19)
Therefore, to satisfy the settling time constraint, the closed-loop poles must lie in the shaded
region shown in Figure 17.28. Now that we have found the allowable closed-loop pole regions
for each of the individual constraints, we can combine them to ﬁnd the allowable closed-loop
pole region for the combined constraints. This is just the intersection as shown in Figure 17.29.

306
Spacecraft Dynamics and Control: An Introduction
−0.14
−0.12
−0.1
−0.08
−0.06
−0.04
−0.02
0
−0.2
−0.15
−0.1
−0.05
0
0.05
0.1
0.15
0.2
Settling time constraint
−ζωn
ωd
Figure 17.28
Allowable region for settling-time constraint
Unless there are any other constraints, we are free to choose the closed-loop poles anywhere
in the shaded region. In particular, we can see that the closed-loop poles
s = −0.05 ± j0.1
satisfy all constraints.
−0.2
−0.15
−0.1
−0.05
0
−0.2
−0.15
−0.1
−0.05
0
0.05
0.1
0.15
0.2
Combined constraints
−ζωn
ωd
Figure 17.29
Allowable region for combined constraints

Active Spacecraft Attitude Control
307
From the general expression for the closed-loop poles
s = −ζωn ± jωn

1 −ζ 2,
we see that
ωn = |s|.
We can therefore compute ω2
n as
ω2
n = |s|2 = 0.052 + 0.12 = 0.0125.
From (17.10), we can now ﬁnally compute our PD control gains, namely
K p = ω2
n I = 0.0125,
Kd = 2ζωn I = 2 × 0.05 = 0.1.
A control law that satisﬁes the time-domain speciﬁcations is then given by
u(t) = 0.0125e(t) −0.1 ˙y(t).
Figure 17.30 shows the unit step response of the spacecraft attitude with the designed PD
controller. It can be seen that all time-domain speciﬁcations are met.
Step response
Time (sec)
Amplitude
0
10
20
30
40
50
60
70
80
90
100
0
0.2
0.4
0.6
0.8
1
1.2
1.4
System: sys
Peak amplitude: 1.21
Overshoot (%): 20.8
At time (sec): 31.8
System: sys
Time (sec): 20.5
Amplitude: 1
System: sys
Settling Time (sec): 74.7
Figure 17.30
Step response with our PD design

308
Spacecraft Dynamics and Control: An Introduction
17.8
Factors that Modify the Transient Behavior
There are two factors that can modify the transient behavior that we have seen in the previous
section (and in general). The ﬁrst is the presence of zeros in the closed-loop transfer function.
The second is the presence of additional poles. We shall deal with each of these separately.
17.8.1
Effect of Zeros
The step response we have looked at is for a system with no closed-loop zeros (see (17.11)).
If we had instead used standard proportional-derivative control as in Section 17.6.2 (u(t) =
K pe(t) + Kd ˙e(t)), the closed-loop transfer function would have been (try this as an exercise)
T (s) =
2ζωns + ω2
n
s2 + 2ζωns + ω2n
,
The closed-loop poles are exactly the same as with modiﬁed PD control (namely
s = ζωn ± ωn

ζ 2 −1). However, there is now a zero at s = −ωn/(2ζ). In the underdamped
case, the associated step response is given by (try this as an exercise)
y(t) = 1 −e−ζωnt

cos ωdt −ζωn
ωd
sin ωdt

,
where ωd = ωn

1 −ζ 2. Comparing this with (17.12), it can be seen that the frequency
of oscillation ωd and rate of decay ζωn are the same. These are determined by the poles.
However, the coefﬁcients of the terms are different, which is due to the presence of the
zero. This results in changed transient characteristics. Figures 17.31 and 17.32 show the step
0
2
4
6
8
10
12
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
Step response with modified PD control
ωnt
y
ζ=0.2
ζ=0.4
ζ=0.6
ζ=0.8
Figure 17.31
Unit step response with modiﬁed PD control

Active Spacecraft Attitude Control
309
0
2
4
6
8
10
12
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
Step response with standard PD control
ωnt
y
ζ=0.2
ζ=0.4
ζ=0.6
ζ=0.8
Figure 17.32
Unit step response with standard PD control
responses for the modiﬁed PD control and standard PD control. It can be seen that the settling
times and rates of oscillation are similar. However, the rise and peak times with the standard
PD control are faster than with the modiﬁed PD control. Also, the responses with standard
PD control exhibit signiﬁcantly more overshoot.
In general, the rule of thumb is that zeros far away from the poles do not have signiﬁcant
effects on the transient behavior. Zeros close to the poles do have signiﬁcant effect on the
transient behavior. A zero very close to a pole tends to reduce the contribution of that pole
since a pole-zero cancelation almost occurs in the transfer function.
17.8.2
Effect of Additional Poles
In our formulation of the attitude control problem with PD control, we have a second order
system. That is, there are two closed-loop poles. However, in reality the actuators that are
used to control the attitude also have dynamics (which we have neglected). The attitude
determination scheme may also have some dynamics. These can all contribute poles to the
system. The control law itself could also be more elaborate, and contribute additional poles
itself (for example, PID control contributes a pole). Therefore, it is important to understand
what the effects of the additional poles are, and when we may still approximate our system by
a second order system.
Generally speaking, the closed-loop transfer function will have the form
T (s) = K
	i=1
m (s −zi)
	i=1
n
(s −pi)
,
where m ≤n, and zi are the closed-loop zeros and pi are the closed-loop poles. Since we
assume that the control law has asymptotically stabilized the system, we have Re(pi) < 0.

310
Spacecraft Dynamics and Control: An Introduction
The step response of this system is given by
Y(s) = T (s)1
s = K
	i=1
m (s −zi)
	i=1
n
(s −pi)
1
s .
Assuming distinct poles, the partial fraction expansion has the form
Y(s) = a
s +
n

i=1
bi
s −pi
.
In the time-domain, the step response is given by
y(t) = a +
n

i=1
biepit.
The contribution of each pole to the response depends on the associated coefﬁcient bi and how
quickly it decays (how negative Re(pi) is).
If the ratios of the real parts of the poles near to the imaginary axis and poles further away are
greater than 5, then the poles closest to the imaginary axis dominate the response (see Figure
17.33), since their contribution decays the slowest (lasts the longest). If there is a complex
conjugate pair of dominant poles (which results in decaying oscillatory behavior), then the
system approximately behaves as an underdamped second order system with those poles only
(recall from Section 14.1 that a pair of stable complex conjugate poles results in decaying
oscillatory behavior).
Re[s]
Im[s]
dominant poles
Figure 17.33
Dominant poles

Active Spacecraft Attitude Control
311
17.9
Steady-State Speciﬁcations and System Type
As has been mentioned previously, the response of the output to a reference signal can be
broken into two parts. The transient part which vanishes with time, and the steady-state part,
which persists. We have seen how speciﬁcations for the transient part may be deﬁned. Now
we shall look at the steady-state part.
Consider the feedback control system shown in Figure 17.8 with W(s) = 0 (we do not
consider measurement noise at this time). Note that every control system we have looked at
can ﬁt within this framework. Typically, the long-term (steady-state) objective is for the output
y(t) to match the reference signal r(t). That is, once the transients have died out, we would
like to have e(t) = r(t) −y(t) ≈0. In our attitude control case, it means that we would like
the actual attitude to eventually match the desired attitude. In practise, there are factors which
prevent the error from going to zero. First of all, any non-vanishing disturbances Td(t) may
cause a non-zero steady-state error. Secondly, the closed-loop system itself may not be capable
of tracking the reference signal r(t).
The closed-loop system corresponding to Figure 17.8 (with W(s) = 0) is given by
Y(s) =
G p(s)Gc(s)
1 + G p(s)Gc(s) R(s) +
G p(s)
1 + G p(s)Gc(s)Td(s).
Since E(s) = R(s) −Y(s), we ﬁnd that
E(s) =
1
1 + G p(s)Gc(s) R(s) −
G p(s)
1 + G p(s)Gc(s)Td(s).
(17.20)
17.9.1
System Type
When we discussed transient speciﬁcations, they were given in terms of the response to a step
input (r(t) = constant), which is a common type of reference signal. However in practise, the
reference signal we wish to track may not be constant. We may or may not know in advance
what r(t) is going to be, and even if we do know it, it may not have a simple form that is useful
for control design. We therefore examine the closed-loop response to test signals, which are
similar to the expected reference signal r(t). Common test signals include:
Step input r(t) = 1, R(s) = 1/s (see Figure 17.34) – appropriate when the reference signal r(t)
is approximately constant for long periods of time. For example, we may want to occasionally
change the attitude from one ﬁxed reference attitude to another.
Ramp input r(t) = t, R(s) = 1/s2 (see Figure 17.35) – appropriate when the reference signal
r(t) is slowly varying. For example, we may want the satellite to perform a slow attitude
maneuver (such as tracking a target on the ground).
Acceleration input r(t) = t2/2, R(s) = 1/s3 (see Figure 17.36) – this is not commonly used.
Usually, if the closed-loop system behaves well for the test signals, it will behave well for
the real signals.
Now, let us determine what types of signals the closed-loop system in equation (17.20) can
track perfectly, what types of signals it can track but with some steady-state error, and what

312
Spacecraft Dynamics and Control: An Introduction
r(t)
t
1
0
Figure 17.34
Unit step input
types of signals it cannot track at all. This introduces the notion of system type. To determine
what kind of signal the closed-loop system can track, we must consider the transfer function
from reference signal R(s) to error E(s) (we ignore the disturbance Td(s)), and from (17.20)
we have
E(s) =
1
1 + Go(s) R(s).
where we have deﬁned the open-loop transfer function to be the product of all transfer functions
around the loop (see Figure 17.8)
Go(s) = G p(s)Gc(s).
(17.21)
The open-loop transfer function will play a major role in a lot of the control system analysis
we will perform in the next several chapters.
r(t)
t
0
Figure 17.35
Ramp input
r(t)
t
0
Figure 17.36
Acceleration input

Active Spacecraft Attitude Control
313
In general, the open-loop transfer function can be written as
Go(s) = ¯K
(s −z1) . . . (s −zm)
s N(s −p1) . . . (s −pn).
(17.22)
where zi are the open-loop zeros, and pi ̸= 0 are the non-zero open loop poles. There are also
N open-loop poles at s = 0.
The type of the system is now classiﬁed as the value of N. For example,
• N = 0 - type 0 system
• N = 1 - type 1 system
• N = 2 - type 2 system
As we shall see, this is directly related to the type of reference signal the closed-loop system
is able to track.
It will be useful to rewrite the open-loop transfer function (17.22) as
Go(s) = K (Ta1s + 1) . . . (Tams + 1)
s N(Tb1s + 1) . . . (Tbns + 1),
(17.23)
where
K = ¯K (−z1) . . . (−zm)
(−p1) . . . (−pn),
and
Ta1 = −1
z1
, . . . , Tb1 = −1
p1
, . . .
Assuming that the closed-loop system is asymptotically stable (that is 1 + Go(s) = 0 only
has roots with negative real parts), as it should be, we can examine the steady-state error to
different types of reference signals using the ﬁnal value theorem (see Appendix A.3). That is,
the steady-state error is given by
ess = lim
t→∞e(t) = lim
s→0 sE(s) = lim
s→0
s
1 + Go(s) R(s).
(17.24)
Let us now examine the steady-state error for different types of inputs.
17.9.2
Step Input R(s) = 1
s (r(t) = 1).
Applying the ﬁnal value theorem, we have
ess = lim
s→0
s
1 + Go(s)
1
s =
1
1 + lims→0 Go(s).

314
Spacecraft Dynamics and Control: An Introduction
The static position error constant is deﬁned as
Ksp = lim
s→0 Go(s).
Then, the steady-state error to a step input is given by
ess =
1
1 + Ksp
.
For a type 0 system (N = 0),
Ksp = lim
s→0 K (Ta1s + 1) . . . (Tams + 1)
(Tb1s + 1) . . . (Tbns + 1) = K.
For type 1 or higher (N ≥1),
Ksp = lim
s→0 K (Ta1s + 1) . . . (Tams + 1)
s N(Tb1s + 1) . . . (Tbns + 1) = ∞.
Therefore, for type 0 systems, the steady-state error to a step input is
ess =
1
1 + K ,
which is non-zero but ﬁnite. Type 1 or higher systems can track step inputs perfectly, and the
steady-state error is
ess =
1
1 + ∞= 0.
17.9.3
Ramp Input R(s) = 1
s2 (r(t) = t)
Applying the ﬁnal value theorem, we have
ess = lim
s→0
s
1 + Go(s)
1
s2 = lim
s→0
1
s + sGo(s) =
1
lims→0 sGo(s).
The static velocity error constant is deﬁned as
Ksv = lim
s→0 sGo(s).
Then, the steady-state error to a ramp input is given by
ess =
1
Ksv
.

Active Spacecraft Attitude Control
315
For a type 0 system (N = 0),
Ksv = lim
s→0 K s(Ta1s + 1) . . . (Tams + 1)
(Tb1s + 1) . . . (Tbns + 1) = 0.
For a type 1 system (N = 1),
Ksv = lim
s→0 K (Ta1s + 1) . . . (Tams + 1)
(Tb1s + 1) . . . (Tbns + 1) = K.
For type 2 or higher (N ≥2),
Ksp = lim
s→0 K
(Ta1s + 1) . . . (Tams + 1)
s N−1(Tb1s + 1) . . . (Tbns + 1) = ∞.
Therefore, for type 0 systems, the steady-state error to a ramp input is
ess = 1
0 = ∞,
which shows that a type 0 system cannot track a ramp input. For a type 1 system, the steady-state
error is
ess = 1
K ,
which is non-zero but ﬁnite. Type 2 or higher systems can track step inputs perfectly, and the
steady-state error is
ess = 1
∞= 0.
We can continue the argument for a type 2 system (with acceleration input) and higher.
The type of a system, N, is the number of integrators in the loop, which can either
exist in the plant or controller (it doesn’t matter where). In general, the more integrators
in the loop (the higher the type), the higher the order of signal that can be tracked. To
decrease the steady-state error to a reference input, we can either increase the open-loop
gain, K, or increase the type of the system by adding integrators (1/s).
Example 17.2 (PD spacecraft attitude control) Let us examine our proportional-derivative
attitude control problem in Figure 17.14. The plant transfer function is
G p(s) =
1
Is2 + Kds =
1
Kds

I
Kd s + 1
.
The control transfer function is
Gc(s) = K p.

316
Spacecraft Dynamics and Control: An Introduction
Therefore, the open-loop transfer function is
Go(s) = G p(s)Gc(s) =
K p
Kds

I
Kd s + 1
.
Clearly, we have a type 1 system. This means that we can track step attitude commands with
zero steady-state error.
The static velocity error constant is
Ksv = lim
s→0 sGo(s) = K p
Kd
.
Therefore, we can track ramp inputs with steady-state error
ess =
1
Ksv
= Kd
K p
.
This is not very surprising, since a ramp input corresponds to a constant angular velocity
command. However, the derivative term in the control law −K p ˙y corresponds to a torque
directly opposing any angular velocity. If we want to track ramp inputs with zero steady-state
error, we can add an integral term to our controller, which increases the system type to 2.
Alternatively, we could use standard proportional derivative control as in Section 17.6.2,
which also increases the system type to 2. Hence, standard PD control is more appropriate if
the control objective is to track a time-varying attitude command.
17.10
Effect of Disturbances
We shall now look at the effect disturbances have on the steady-state error. Therefore, we shall
ignore the contribution of the reference signal R(s), and consider from (17.20)
E(s) = −
G p(s)
1 + G p(s)Gc(s)Td(s).
(17.25)
In practise, we do not know the nature of the disturbances (if we did, we could directly
compensate for them). However, for spacecraft problems they are slowly varying with time,
and a constant disturbance Td(t) = ˆTd is a good approximation for the purposes of initial
controller design.
As we did for the open-loop transfer function in equation (17.23), we can generally write
the plant and control transfer functions in the form
G p(s) = K pl
(Ta1ps + 1) . . . (Tamps + 1)
s Np(Tb1ps + 1) . . . (Tbnps + 1) = K pl
Np(s)
s NpDp(s),
and
Gc(s) = Kc
(Ta1cs + 1) . . . (Tamcs + 1)
s Nc(Tb1cs + 1) . . . (Tbncs + 1) = Kc
Nc(s)
s NcDc(s).

Active Spacecraft Attitude Control
317
It is easy to see that
K pl = lim
s→0 s NpG p(s),
Kc = lim
s→0 s NcGc(s).
We can now form the transfer function from disturbance to error as
G p(s)
1 + G p(s)Gc(s) =
K pls NcNp(s)Dc(s)
s Np+NcDp(s)Dc(s) + K pl KcNp(s)Nc(s).
We can now apply the ﬁnal value theorem (assuming the closed-loop system is asymptotically
stable) to ﬁnd the steady-state error to a step disturbance Td(s) = ˆTd/s. That is, the steady-state
error is given by
ess = lim
s→0 sE(s) = −lim
s→0 s
K pls NcNp(s)Dc(s)
s Np+NcDp(s)Dc(s) + K pl KcNp(s)Nc(s)
ˆTd
s ,
which leads to
ess = −lim
s→0
K pls NcNp(s)Dc(s)
s Np+NcDp(s)Dc(s) + K pl KcNp(s)Nc(s)
ˆTd.
It is now clear that to be able to completely reject a constant disturbance (get ess = 0),
we must have Nc ≥1. That is, there must be an integrator (1/s) in the controller to reject
a constant disturbance.
Let us now look at the value for the steady-state error if there is no integrator in the controller
(Nc = 0). Since,
Np(0) = Nc(0) = Dp(0) = Dc(0) = 1,
we have
ess =
⎧
⎪⎪⎪⎨
⎪⎪⎪⎩
−
K pl ˆTd
1 + K pl Kc
,
Np = 0,
−
ˆTd
Kc
,
Np ≥1.
We see in both cases above, that if there is no integrator in the controller (Nc = 0), then we
must increase the controller gain Kc in order to reduce the steady-state error to a disturbance.

318
Spacecraft Dynamics and Control: An Introduction
Example 17.3 (PD spacecraft attitude control) Let us again revisit our proportional-
derivative attitude control problem in Figure 17.14. Let us assume that we have a constant
disturbance torque Td(t) = ˆTd. Again, the plant transfer function is
G p(s) =
1
Is2 + Kds =
1
Kds

I
Kd s + 1
.
and the control transfer function is
Gc(s) = K p,
from which we get the plant and controller gains K pl = 1/Kd and Kc = K p respectively. It is
clear that there is no integrator in the controller (Nc = 0). However, the plant does have one
integrator Np = 1. Therefore, the steady-state error to a constant disturbance torque is
ess = −
ˆTd
K p
.
If we are given a speciﬁcation on the steady-state attitude error that |ess| ≤emax,ss, then the
proportional gain K p must be chosen such that
K p ≥
ˆTd
emax,ss
.
Since K p/I = ω2
n (see (17.10)), this provides an additional restriction on the closed-loop
pole locations. We have seen that |s|2 = ω2
n for underdamped poles. This means that the
closed-loop poles must satisfy
|s|2 ≥
ˆTd
Iemax,ss
.
Therefore, the allowable region for closed-loop poles is as shown in Figure 17.37.
Re[s]
Im[s]
allowable region for poles
|s|2 =
ˆTd
Iemaxss
Figure 17.37
Allowable pole locations with disturbance rejection constraints

Active Spacecraft Attitude Control
319
17.11
Actuator Limitations
The torque on the spacecraft demanded by our control law must be applied by an actuator.
Any real actuator has limitations on the amount of torque that it can apply. That is, |u(t)| =
|Tc(t)| ≤Tmax. We should therefore ensure that our control law will not demand more torque
than the actuator is capable of.
Let emax be the largest attitude error that we expect to encounter. The corresponding restoring
torque from our proportional-derivative control law (assuming zero angular velocity) will have
magnitude
u = K pemax.
Therefore, to ensure that the control torque stays within the actuator capabilities, we must
have
K pemax ≤Tmax,
which leads to a constraint that
K p ≤Tmax
emax
.
That is, the proportional gain should not be too large. Since K p/I = ω2
n (see (17.10)), this
again provides an additional restriction on the closed-loop pole locations. As we have seen,
|s|2 = ω2
n for underdamped poles. This means that the closed-loop poles must satisfy
|s|2 ≤Tmax
Iemax
.
Therefore, the allowable region for closed-loop poles is as shown in Figure 17.38. We could
similarly form a constraint on the derivative gain Kd considering the maximum expected
angular velocity ˙ymax. We could also form a constraint on both gains K p and Kd considering
Re[s]
Im[s]
allowable region for poles
|s|2 = Tmax
Iemax
Figure 17.38
Allowable pole locations with actuator limitation constraints

320
Spacecraft Dynamics and Control: An Introduction
emax and ˙ymax simultaneously. This is not an exact science; there is art involved in control
design.
Notes
This chapter has presented an introduction to control systems, and in particular second-order
systems such as spacecraft attitude dynamics. There are several excellent texts on this subject
(for example Qiu and Zhou (2010), Franklin et al. (2010) and Ogata (2010)), and the reader is
encouraged to consult them for further details.
References
Franklin GF, Powell JD and Emami-Naeini A 2010 Feedback Control of Dynamic Systems 6th edn. Prentice Hall,
Upper Saddle River, NJ.
Ogata K 2010 Modern Control Engineering 5th edn. Prentice Hall, Upper Saddle River, NJ.
Qiu L and Zhou K 2010 Introduction to Feedback Control. Prentice Hall, Upper Saddle River, NJ.

18
Routh’s Stability Criterion
Given a general transfer function of the form
G(s) = a0sn + a1sn−1 + . . . + an
b0sn + b1sn−1 + . . . + bn
,
where b0 > 0 (usually we have b0 = 1), we would like to be able to determine whether the
system is asymptotically stable. We could just compute the poles numerically, and be done
with it, but it is not very insightful. The poles obtained would be speciﬁc to the coefﬁcients bi,
and no further insight on what range of coefﬁcients bi provide stability.
There is a means to determine stability without computing the poles. This is called Routh’s
stability criterion. Recall that the poles are the roots of the polynomial
b0sn + b1sn−1 + . . . + bn = 0.
The Routh procedure is as follows.
1. First of all, the coefﬁcients b1, b2, . . . , bn must all be positive. If any of them are negative
or zero, a pole exists that either lies on the imaginary axis, or has a positive real part. That
is, the system is not asymptotically stable.
2. If all coefﬁcients are positive, form the following array (called the Routh array).
sn
b0
b2
b4
b6
· · ·
sn−1
b1
b3
b5
b7
· · ·
sn−2
c1
c2
c3
c4
· · ·
sn−2
d1
d2
d3
d4
· · ·
...
...
...
s2
f1
f2
s1
g1
s0
h1
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

322
Spacecraft Dynamics and Control: An Introduction
Note that the table has powers of s in descending order. The coefﬁcients c1, c2, c3, . . . are
computed as
c1 = b1b2 −b3b0
b1
,
c2 = b1b4 −b5b0
b1
,
c3 = b1b6 −b7b0
b1
, etc.
The coefﬁcients d1, d2, d3, . . . are computed as
d1 = c1b3 −c2b1
c1
,
d2 = c1b5 −c3b1
c1
,
d3 = c1b7 −c4b1
c1
, etc.
Coefﬁcients e1, e2, e3, . . . are computed similarly using the rows containing c1, c2, c3, . . .
and d1, d2, d3, . . . In general, coefﬁcients are computed using the previous two rows.
Once the Routh array has been constructed, asymptotic stability can be determined by
the ﬁrst column of coefﬁcients. The transfer function G(s) is asymptotically stable if and
only if all coefﬁcients in the ﬁrst column are positive. That is, b1, c1, d1, e1, . . . must all be
positive.
18.1
Proportional-Derivative Control with Actuator Dynamics
Let us return to our modiﬁed proportional derivative design for spacecraft attitude control
in Section 17.7.1. Let us assume that the proportional and derivative gains K p and Kd have
been designed to give a desired pair of underdamped poles, s = −ζωn ± jωn

1 −ζ 2. In the
design in Section 17.7.1, it has been assumed that there is an actuator capable of providing the
control torque u(t) = K pe(t) −Kd ˙y(t). In reality, actuators themselves have some dynamics
as well, and there is a delay between the demanded control torque, and the actual torque
delivered by the actuator. For reaction wheels, a reasonable actuator model is the ﬁrst order
transfer function
U(s) =
1
T s + 1Uc(s),
where T > 0 is a time-constant of the actuator, U(s) is the actual torque delivered by the
actuator, and Uc(s) is the torque commanded by the control law. Let us look at what the actual
torque looks like for a step torque command uc(t) = ˆu. We have, Uc(s) = ˆu/s, such that
U(s) =
1/T
s + 1/T
ˆu
s .
Taking the partial fraction expansion, we have
U(s) = ˆu
s −
ˆu
s + 1/T .
(18.1)
Taking inverse Laplace transforms, we have
u(t) = ˆu

1 −e−t/T 
.
(18.2)

Routh’s Stability Criterion
323
t
ˆu
u(t)
Figure 18.1
Actuator step response
This is shown graphically in Figure 18.1. We see from equation (18.2) that the time constant
T determines the speed of the actuator response to a torque command, and the smaller T is,
the faster the response. We expect that the faster the response of the actuator is, the better the
closed-loop performance. Let us now use the Routh analysis to determine requirements on the
actuator time constant T to ensure asymptotic stability. The torque commanded by the control
law is
uc(t) = K pe(t) −Kd ˙y(t).
With the actuator dynamics given by (18.1), the block diagram in Figure 17.14 becomes as
shown in Figure 18.2. The closed-loop transfer function from commanded attitude R(s) to
actual attitude Y(s) can be found to be
Y(s) =
K p
I T s3 + Is2 + Kds + K p
R(s).
R(s) +
−
ˆTd(s)
Kp
Y (s)
+
+
−
Kds
1
Is2
+
1
T s+1
Uc(s)
U(s)
E(s)
Figure 18.2
Modiﬁed proportional-derivative control with actuator dynamics

324
Spacecraft Dynamics and Control: An Introduction
The poles when actuator dynamics are included are therefore the roots of the characteristic
equation
I T s3 + Is2 + Kds + K p = 0.
(18.3)
Clearly, all coefﬁcients in (18.3) are positive. Therefore, we can proceed with constructing a
Routh table.
s3
I T
Kd
s2
I
K p
s1
c1
s0
d1
We have
c1 = I Kd −I T K p
I
= Kd −K pT,
and
d1 = K p.
For asymptotic stability, we must have c1 > 0 and d1 > 0. Clearly, d1 > 0 is automatically
satisﬁed since K p > 0. It is the coefﬁcient c1 that places a constraint on the time constant T .
Namely, we must have
Kd −K pT > 0,
equivalently
T < Kd
K p
.
If T > Kd/K p, the closed-loop system is unstable. Since a smaller T means a faster actuator,
this conﬁrms our intuition that the actuator must be sufﬁciently fast.
If T = Kd/K p, we expect there to be a closed-loop pole on the imaginary axis (since this
is the boundary of stability). Let us check this by setting T = Kd/K p and s = jω in (18.3).
We have
−j I Kd
K p
ω3 −Iω2 + j Kdω + K p = 0.
Separating this into real and imaginary components, we have
j I Kd
K p
ω3 = j Kdω,

Routh’s Stability Criterion
325
and
Iω2 = K p.
Both of these equations yield the same solution ω = ±K p/I. This conﬁrms that
s = ± jK p/I are closed-loop poles when T = Kd/K p.
18.2
Active Dual-Spin Stabilization
We shall now apply the Routh stability analysis to a more complicated example, namely the
control design for a dual-spin stabilized satellite augmented with active control. We recall the
equations of motion from Section 15.1. Namely,
I ˙ω + ω× [Iω + hsa] = Tc.
(18.4)
where Tc is the control torque. Note that we are neglecting any disturbance torques. We shall
also neglect measurement noise. As in Section 15.2, we shall assume that the spacecraft body
frame Fb is a principal axis frame, that is
I =
⎡
⎣
Ix
0
0
0
Iy
0
0
0
Iz
⎤
⎦.
Unlike Section 15.2, we shall assume that the momentum wheel spin axis is aligned with the
body-frame y-axis, that is
a =
⎡
⎣
0
1
0
⎤
⎦.
The control objective here is to control the spacecraft attitude relative to an inertially ﬁxed
reference frame FI. As in Section 17.1, we shall represent the attitude of the Fb relative to FI
by a 3-2-1 Euler sequence
1. A rotation ψ about the original z-axis (called the yaw angle).
2. A rotation θ about the intermediate y-axis (called a pitch angle).
3. A rotation φ about the transformed x-axis (called a roll angle).
The attitude kinematics relative to the inertial frame are then given by (see Section 11.2)
ωbI =
⎡
⎣
1
0
−sin θ
0
cos φ
sin φ cos θ
0
−sin φ
cos φ cos θ
⎤
⎦
⎡
⎣
˙φ
˙θ
˙ψ
⎤
⎦,
(18.5)

326
Spacecraft Dynamics and Control: An Introduction
where ⃗ωbI = ⃗F T
b ωbI is the angular velocity of the body frame Fb relative to the inertial frame
FI expressed in body coordinates. We shall assume that the angles and angular velocity are
small, that is, φ, θ, ψ, ˙φ, ˙θ and ˙ψ are considered small. This allows the following simpliﬁ-
cations
sin φ ≈φ,
cos φ ≈1,
sin θ ≈φ,
cos θ ≈1,
sin ψ ≈φ,
cos ψ ≈1.
Under this approximation, the attitude kinematics in (18.5) become
ωbI =
⎡
⎣
˙φ
˙θ
˙ψ
⎤
⎦,
(18.6)
and the angular acceleration becomes
˙ωbI =
⎡
⎣
¨φ
¨θ
¨ψ
⎤
⎦.
(18.7)
Substituting approximations (18.6) and (18.7) into the dynamical equation (18.4) and neglect-
ing products of angular rates gives
Ix ¨φ −hs ˙ψ = Tx,
(18.8)
Iy ¨θ = Ty,
(18.9)
Iz ¨ψ + hs ˙φ = Tz.
(18.10)
We note that the pitch equation (18.9) is decoupled from the roll and yaw equations ((18.8)
and (18.10) respectively). The pitch equation is just the same as the simple attitude equation
in Section 17.1, for which a PD controller can be designed, as shown in detail in Chapter 17.
The roll and yaw equations on the other hand are coupled, and it is not immediately obvious
if a simple PD control law is appropriate. Let us examine a different possible control law
design for the roll-yaw equations. First, let us make the approximations |hs ˙ψ| ≫|Ix ¨φ|, and
|hs ˙φ| ≫|Iz ¨ψ|. The roll and yaw equations (18.8) and (18.10) respectively, become
˙ψ = −Tx
hs
,
(18.11)
˙φ = Tz
hs
.
(18.12)
Let us choose the gyroscopic control law
Tx = KGψ,
Tz = −KGφ.
(18.13)

Routh’s Stability Criterion
327
Substituting these into (18.11) and (18.12), we have
˙ψ = −KG
hs
ψ,
˙φ = −KG
hs
φ,
both of which have the same form and solution
ψ(t) = e−t/T ψ(0),
φ(t) = e−t/T φ(0),
where
T = hs
KG
.
Clearly for asymptotic stability, we must have T > 0, which means that the gyroscopic gain
KG = hs
T ,
must have the same sign as hs. The quantity T is then a time constant related to the rate of
decay, and can be used as a control design parameter.
Let us now examine the stability of the closed-loop system when the control law (18.13) is
applied to (18.8) and (18.10). We have
Ix ¨φ −hs ˙ψ = KGψ,
Ix ¨ψ + hs ˙φ = −KGφ.
Taking the Laplace transform gives
Ixs2φ −sIxφ(0) −Ix ˙φ(0) −shsψ + hsψ(0) = KGψ,
Izs2ψ −sIzψ(0) −Iz ˙ψ(0) + shsφ −hsφ(0) = −KGφ,
which can be put in matrix form
	
s2Ix
−(shs + KG)
shs + KG
s2Iz

 	 φ
ψ

=
	 sIxφ(0) + Ix ˙φ(0) −hsψ(0)
sIzψ(0) −Iz ˙ψ(0) + hsφ(0)

.
The closed-loop characteristic equation is the determinant of the matrix on the left, namely
det
	
s2Ix
−(shs + KG)
shs + KG
s2Iz

= 0.

328
Spacecraft Dynamics and Control: An Introduction
Evaluating the determinant, we see that the closed-loop poles satisfy
Ix Izs4 + h2
ss2 + 2hs KGs + K 2
G = 0.
We can immediately see by Step 1 of the Routh analysis that since the coefﬁcient of s3 is
zero, the closed-loop system is not asymptotically stable. This suggests the need to add some
damping. Let us try the control law
Tx = KGψ −Ix Kd ˙φ,
Tz = −KGφ −IzKd ˙ψ,
(18.14)
where Kd is a derivative gain. Substituting (18.14) into (18.8) and (18.10), the closed-loop
equations now become
Ix ¨φ −hs ˙ψ = KGψ −Ix ˙φ,
Iz ¨ψ + hs ˙φ = −KGφ −Iz ˙ψ.
Taking Laplace transforms leads to
	s2Ix + sIx Kd
−(shs + KG)
shs + KG
s2Iz + sIzKd

 	 φ
ψ

=
	 Ix(s + 1)φ(0) + Ix ˙φ(0) −hsψ(0)
Iz(s + 1)ψ(0) −Iz ˙ψ(0) + hsφ(0)

.
As we saw previously, the stability analysis only depends on the determinant of the matrix
on the left. The right-hand side contains the initial conditions, and is not relevant for stability
analysis. The characteristic equation now becomes
det
	s2Ix + sIx Kd
−(shs + KG)
shs + KG
s2Iz + sIzKd

= 0,
which is evaluated to be
Ix Izs4 + 2Kd Ix Izs3 + (Ix IzK 2
d + h2
s)s2 + 2hs KGs + K 2
G = 0.
(18.15)
We can now perform a Routh analysis to determine constraints on the derivative gain Kd to
make the closed-loop system asymptotically stable.
Step 1: All coefﬁcients in (18.15) must be positive. We see that the coefﬁcients of s4, s2, s1, s0
are already positive (recall that KG and hs have the same sign). Therefore, we obtain our ﬁrst
condition on Kd from the coefﬁcient of s3. Namely, that
Kd > 0
(18.16)

Routh’s Stability Criterion
329
Step 2: Create the Routh array.
s4
Ix Iz
Ix IzK 2
d + h2
s
K 2
G
s3
2Kd Ix Iz
2hs KG
s2
c1
c2
s1
d1
s0
e1
We now have
c1 = 2Kd Ix Iz(Ix IzK 2
d + h2
s) −2hs KG Ix Iz
2Kd Ix Iz
= Kd(Ix IzK 2
d + h2
s) −hs KG
Kd
,
c2 = K 2
G,
d1 =
Kd(Ix IzK 2
d + h2
s) −hs KG
Kd
2hs KG −K 2
G2Kd Ix Iz
Kd(Ix IzK 2
d + h2
s) −hs KG
Kd
,
= 2hs KG(Kd(Ix IzK 2
d + h2
s) −hs KG) −2K 2
d Ix IzK 2
G
Kd(Ix IzK 2
d + h2s) −hs KG
.
e1 = K 2
G.
Now, for asymptotic stability, we require c1 > 0, d1 > 0 and e1 > 0. We automatically have
e1 = K 2
G > 0. Let us now consider c1 and d1 sequentially. First of all, we have already seen
that we must have Kd > 0. Therefore, the requirement that c1 > 0 becomes
Kd(Ix IzK 2
d + h2
s) −hs KG > 0.
(18.17)
Now, it can readily be seen that (18.17) can only be satisﬁed if (18.16) is satisﬁed (see what
happens to (18.17) if Kd ≤0). Therefore, if (18.17) is satisﬁed, (18.16) is automatically
satisﬁed (condition (18.17) supercedes condition (18.16)). Next, since c1 > 0, the requirement
that d1 > 0 becomes
hs KG(Kd(Ix IzK 2
d + h2
s) −hs KG) −K 2
d Ix IzK 2
G > 0.
(18.18)
Now, it can readily be seen that (18.18) can only be satisﬁed if (18.17) is satisﬁed (see
what happens to (18.18) if Kd(Ix IzK 2
d + h2
s) −hs KG ≤0, remembering that hs KG > 0).
Therefore, if (18.18) is satisﬁed, (18.17) and (18.16) are automatically satisﬁed (condition
(18.18) supercedes conditions (18.17) and (18.16)). As such, we only need to ﬁnd what range
of Kd satisfy (18.18).
Now, let us factorize the left hand side of (18.18) to obtain
hs KG

Kd −KG
hs
 
Ix IzK 2
d + h2
s

> 0.
(18.19)

330
Spacecraft Dynamics and Control: An Introduction
From (18.19) it is very easily seen that since hs KG > 0, the closed-loop system is asymp-
totically stable if and only if
Kd > KG
hs
= 1
T .
Of course, in designing the control gains KG and Kd, we also need to account for steady-state
error limitations and actuator limitations, just as we did in Sections 17.10 and 17.11.
Notes
This chapter has presented an introduction to Routh’s stability criterion. We have then applied
it to a spacecraft attitude control design to analyze the closed-loop stability when actuator
dynamics are included. For further treatments of spacecraft attitude actuator dynamics models,
the reader is referred to Sidi (1997). We have presented the Routh stability criterion from the
point of view of whether or not the system is asymptotically stable (since this is the most
important aspect for a control system). However, the Routh criterion in its more general form
allows for the determination of the number of unstable poles (if there are any). For the more
general presentation of the Routh criterion, the reader is referred to any of the excellent texts
on classical control, including Qiu and Zhou (2010), Franklin et al. (2010) and Ogata (2010).
The reader may ﬁnd a mathematical proof of the Routh criterion in Qiu and Zhou (2010).
References
Franklin GF, Powell JD and Emami-Naeini A 2010 Feedback Control of Dynamic Systems 6th edn. Prentice Hall,
Upper Saddle River, NJ.
Ogata K 2010 Modern Control Engineering 5th edn. Prentice Hall, Upper Saddle River, NJ.
Qiu L and Zhou K 2010 Introduction to Feedback Control. Prentice Hall, Upper Saddle River, NJ.
Sidi MJ 1997 Spacecraft Dynamics and Control: A Practical Engineering Approach. Cambridge University Press,
New York, NY.

19
The Root Locus
Thus far in Chapters 17 and 18, we have seen three important factors for a closed-loop system.
They are stability, transient response and steady-state error. The ﬁrst two are inﬂuenced by
the locations of the closed-loop poles. For stability, the poles must be in the left half complex
plane. The transient response (as we saw in Chapter 17) is inﬂuenced by the locations of the
dominant poles. It is therefore very useful to be able to see what closed-loop pole locations
are achievable for a given control structure.
Example 19.1 (Root locus for spacecraft PD control) Consider again the proportional-
derivative attitude control problem as in Section 7.7.1. We found that the closed-loop transfer
function is given by
Y(s)
R(s) =
(K p/I)
s2 + (Kd/I)s + (K p/I).
and the closed-loop poles are given by the roots of the characteristic equation
s2 + Kd
I s + K p
I
= 0.
(19.1)
Problem Statement: What closed-loop poles are possible for any proportional gain K p > 0
given a ﬁxed derivative gain Kd?
For simplicity, let us set I = Kd = 1. We can solve (19.1) to ﬁnd the closed-loop poles
s = −1
2 ±
1 −4K p
2
.
(19.2)
We see from (19.2) that
• when 0 ≤K p < 1/4, the closed-loop poles are real, and lie between −1 and 0,
• when K p = 1/4, there are two repeated poles at s = −1/2,
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

332
Spacecraft Dynamics and Control: An Introduction
Im[s]
Re[s]
−1
0
−1
2
Figure 19.1
Root-locus for PD attitude control
• when K p > 1/4, the roots are imaginary, with s = −1/2 ± j4K p −1/2, that is, the real
part is constant, and the imaginary part grows with increasing K p.
We can plot the closed-loop pole locations as shown in Figure 19.1. The plot in Figure 19.1
is called a root locus, and it shows all possible closed-loop pole locations for K p ≥0 when
Kd = 1 is ﬁxed. Note that at the point s = −1/2, the root loci on the real axis meet, and
then split into the complex plane. This is called a breakaway point. Note also that the root
locus only shows how the closed-loop pole locations change with a single parameter (in this
case K p).
For this example, we were able to determine the root locus analytically. In general, this is not
possible. It can be generated numerically using a package such as MATLAB R⃝. Historically,
however, there is a graphical method of obtaining rough root locus plots. This method is
important to understand, since it provides insight into the root locus, and how it changes with
different control structures.
19.1
Rules for Constructing the Root Locus
Let us consider the general feedback system as shown in Figure 19.2. This has the closed-loop
transfer function
Y(s)
R(s) =
G p(s)Gc(s)
1 + G p(s)Gc(s),
R(s)
E(s)
+
−
U(s)
Gc(s)
Gp(s)
Y (s)
Figure 19.2
General feedback system

The Root Locus
333
and the closed-loop poles satisfy
1 + G p(s)Gc(s) = 0.
(19.3)
As we have seen in Section 17.9, G p(s)Gc(s) is the open-loop transfer function,
Go(s) = G p(s)Gc(s),
which may be written as
Go(s) = K (s −z1)...(s −zm)
(s −p1)...(s −pn).
where z1, ..., zm are the open-loop zeros and p1, ..., pn are the open-loop poles, and m ≤n.
Let us call the open-loop numerator and denominator
a(s) = (s −z1)...(s −zm),
b(s) = (s −p1)...(s −pn),
respectively. We can now represent the closed-loop characteristic equation (19.3) in several
equivalent ways.
1 + K a(s)
b(s) = 0,
(19.4)
b(s) + Ka(s) = 0,
(19.5)
a(s)
b(s) = −1
K ,
if
K ̸= 0,
(19.6)
1
K b(s) + a(s) = 0,
if
K ̸= 0,
(19.7)
The root locus is the set of all s satisfying the above equations (19.4) to (19.7) for K ≥0. Recall
that a complex number may be represented by a magnitude r and a phase θ (see Appendix A,
Figure A.1),
s = r(cos θ + j sin θ) = re jθ.
With this in mind, since we take K ≥0, the equation (19.6) shows that the root locus is the
set of all s such that a(s)/b(s) is negative and real, which can be interpreted in terms of the
angle condition
∠a(s)
b(s) = 180◦+ 360◦(l −1),
(19.8)
where l is an integer. Recall (see Appendix A) that the product of complex numbers s1 =
r1e jθ1,...,sn = rne jθn has phase
∠s1s2...sn = θ1 + θ2 + ... + θn,

334
Spacecraft Dynamics and Control: An Introduction
Im[s]
Re[s]
s
a
s −a
(s −a)
Figure 19.3
Determining argument graphically
and that for any two complex numbers s1 = r1e jθ1 and s2 = r2e jθ2, the quotient s1/s2 has phase
∠s1
s2
= θ1 −θ2.
Therefore, we have
∠a(s)
b(s) = ∠
 (s −z1)...(s −zm)
(s −p1)...(s −pn)

,
= (∠(s −z1) + ∠(s −z2) + ... + ∠(s −zm))
−(∠(s −p1) + ∠(s −p2) + ... + ∠(s −pn)) .
We now need to ﬁnd a method of determining θ = ∠(s −a). We could just do this numerically.
However, a graphical method may provide more insight. Consider the diagram shown in
Figure 19.3. We see that the angle ∠(s −a) is just the angle of a line from point a to point s,
measured counterclockwise from the positive real axis.
Let us now apply this knowledge to our root locus. Let s be a test point for the root locus.
Let us plot the open-loop poles as ×, and the open-loop zeros as ◦, as in Figure 19.4. Then,
Im[s]
Re[s]
s
pi
zi
φi
ψi
Figure 19.4
Test point for root locus

The Root Locus
335
using the angle condition (19.8), s is on the root locus (an achievable closed-loop pole for
some K ≥0) if and only if

ψi −

φi = 180◦+ 360◦(l −1),
(19.9)
for some integer l, where φi = ∠(s −pi) are the angles of the lines drawn from the open-
loop poles to the test point s, and ψi = ∠(s −zi) are the angles of the lines drawn from the
open-loop zeros to the test point s.
19.1.1
Rules for constructing the root locus
Using the angle condition (19.9) as well as conditions (19.4) to (19.7), it is possible to derive
a complete set of rules for constructing the root locus. We shall now state these rules. Their
derivations may be found in Section 19.3.
Given an open-loop transfer function with m zeros and n poles such that m ≤n, the rules
for constructing the root locus are:
1. There are n branches of the root locus (since there are n poles). Each branch starts at an
open-loop pole, pi (when K = 0). m branches end at an open-loop zero zi (when K →∞).
The other n −m branches go to inﬁnity along an asymptote (when K →∞), as seen in
Rule 3.
2. The root locus includes all points on the real axis to the left of an odd number of open-loop
real poles and zeros, as shown in Figure 19.5.
3. As K →∞, n −m branches approach n −m asymptotes with angles measured counter-
clockwise from the positive real axis given by
φl = 180◦+ 360◦(l −1)
n −m
,
l = 1, 2, ..., n −m.
Im[s]
Re[s]
ignore complex open-loop poles and zeros
root locus component on real axis
Figure 19.5
Root locus component on real axis

336
Spacecraft Dynamics and Control: An Introduction
Im[s]
Re[s]
breakaway point
break in point
Figure 19.6
Breakaway and break-in points
The asymptotes have origin on the real axis at
α =
n
i=1 pi −m
i=1 zi
n −m
.
4. The break-away points (where the root-loci meet and split), and the break-in points (where
the root-loci meet and join) satisfy
a(s)db(s)
ds
−b(s)da(s)
ds
= 0.
Note that only solutions of this equation that lie on the root-locus may be considered as
breakaway or break in points (see Figure 19.6).
5. The angle of departure φk of a branch from a pole pk of multiplicity nk (see Figure 19.7)
is given by
nkφk =
m

i=1
∠(pk −zi) −
n

j=1, j̸=g if pg=pk
∠(pk −p j) + 180◦+ 360◦(l −1).
Im[s]
Re[s]
φk
pk
Figure 19.7
Departure angle from a repeated pole

The Root Locus
337
Im[s]
Re[s]
ψk
zk
Figure 19.8
Arrival angle at a repeated zero
The angle of arrival ψk at a zero zk of multiplicity nk (see Figure 19.8) is given by
nkψk = −
m

i=1,i̸=g if zg=zk
∠(zk −zi) +
n

j=1
∠(zk −p j) + 180◦+ 360◦(l −1).
Note that l can be any integer in both cases.
6. The points where the root loci cross the imaginary axis may be determined using the Routh
stability analysis method.
Example 19.2 Consider a system with open-loop transfer function
Go(s) =
K
s(s + 1)(s + 2).
There are no open-loop zeros, so m = 0. The open-loop poles are s = 0, −1, −2, so n = 3.
Let us now construct the root-locus using the applicable rules above. The completed root locus
is shown in Figure 19.9.
Im[s]
Re[s]
−2
−1
0
j
√
2
−j
√
2
−1 +
1
3
60o
Figure 19.9
Example root locus

338
Spacecraft Dynamics and Control: An Introduction
Step 1
Plot the open-loop poles and zeros.
Step 2
Determine the root locus on the real axis (between 0 and −1, and to the left of −2).
Step 3
Determine the asymptotes. There are n −m = 3 asymptotes. The angles of the asymptotes
are
φ1 = 180◦
n −m = 180◦
3
= 60◦,
φ2 = 180◦+ 360◦
n −m
= 180◦+ 360◦
3
= 180◦,
φ3 = 180◦+ 360◦× 2
n −m
= 180◦+ 360◦× 2
3
= 300◦(equivalently −60◦).
The center of the asymptotes is at
α =
n
i=1 pi −m
i=1 zi
n −m
= −1 −2
3
= −1.
Step 4
Determine the breakaway point. We have a(s) = 1, and b(s) = s(s + 1)(s + 2) = s3 + 3s2 +
2s. Therefore,
da
ds = 0,
db
ds = 3s2 + 6s + 2.
The breakaway point satisﬁes
a(s)db(s)
ds
−b(s)da(s)
ds
= 3s2 + 6s + 2 = 0,
which has solution
s = −1 ±

1
3.
Now, the point s = −1 −√1/3 lies between s = −1 and s = −2, and is therefore not on the
root locus. Therefore, the breakaway point is at s = −1 + √1/3.
Step 5
Determine the points where the root loci cross the imaginary axis (they must exist, since two
of the asymptotes enter the right-half plane). We could use a Routh analysis, however we shall
demonstrate another approach.

The Root Locus
339
The closed-loop characteristic equation can be found to be (see (19.5))
s3 + 3s2 + 2s + K = 0.
A pole on the imaginary axis would have the form s = jω. Substituting this into the above,
we have
−jω3 −3ω2 + j2ω + K = 0.
Equating the real and imaginary parts to zero, we have two equations for ω and the corre-
sponding gain K.
ω(ω2 −2) = 0,
and
K −3ω2 = 0.
The ﬁrst of these gives ω = 0, ±
√
2. We already know that ω = 0 lies on the root-locus since
it is an open-loop pole. The imaginary axis crossing must therefore occur at s = ± j
√
2. From
the second equation, we see that the corresponding gain is K = 6.
Step 6
Draw the complete root-locus (shown in Figure 19.9).
19.1.2
Important Points
• If there is an open-loop zero in the right-half plane, the closed-loop system will eventually
become unstable for a large enough gain K, as shown in Figure 19.10.
• If there are three or more open-loop zeros than poles (n −m ≥3), the closed-loop system
will eventually become unstable for a large enough gain K. To see this, consider that the
number of asymptotes is determined by the number of open-loop zeros and poles, and has
nothing to do with their location. The ﬁrst asymptote has angle
φ1 = 180◦
n −m < 90◦
if
n −m ≥3.
Im[s]
Re[s]
Figure 19.10
Root locus with right-half plane open-loop zero

340
Spacecraft Dynamics and Control: An Introduction
Im[s]
Re[s]
φ1
Figure 19.11
Root locus with n −m = 3
That is, the ﬁrst asymptote will always enter the right-half plane if n −m ≥3, as shown in
Figure 19.11. This problem can be remedied by adding stable open-loop zeros to the system
to make 0 ≤n −m ≤2.
• If n −m = 2, and the center of the asymptote is in the right-half plane, the closed-loop system
will eventually become unstable for a large enough gain K, as illustrated in Figure 19.12.
This problem can be remedied by ensuring that the asymptote center satisﬁes
α =
n
i=1 pi −m
i=1 zi
n −m
< 0,
by choosing the controller poles and zeros appropriately (the poles and zeros of Gc(s)).
Im[s]
Re[s]
α
Figure 19.12
Root locus with n −m = 2

The Root Locus
341
19.2
PD Attitude Control with Actuator Dynamics - Revisited
Let us revisit the proportional-derivative attitude control problem in Section 18.1, in which we
incorporated actuator dynamics. In Section 18.1, we used Routh stability analysis to determine
requirements on the actuator time-constant T for asymptotic stability. Let us now take this
analysis a bit further, by plotting a root-locus as a function of T , for a given pair of proportional
and derivative gains K p and Kd.
We found in Section 18.1 that the closed-loop poles satisfy the characteristic equation
I T s3 + Is2 + Kds + K p = 0.
(19.10)
Let us divide this by I T to obtain
s3 + 1
T

s2 + Kd
I s + K p
I

= 0.
This can be put in equivalent root-locus form
1 + 1
T

s2 + (Kd/I)s + (K p/I)
	
s3
= 0.
(19.11)
Note that
Go(s)
= 1
T

s2 + (Kd/I)s + (K p/I)
	
s3
,
(19.12)
is not the open-loop transfer function corresponding to the block diagram in Figure 18.2.
However, it can be treated as an open-loop transfer function for the purposes of applying the
rules for constructing the root-locus for T ≥0. Since the “open-loop gain” in (19.12) is 1/T ,
we shall plot the root-locus for 1/T : 0 →∞(equivalently T : ∞→0).
Let us assume that the proportional and derivative gains K p and Kd were designed to give
a nominal underdamped pair of closed-loop poles (neglecting actuator dynamics) given by
s = −ζωn ± jωn

1 −ζ 2,
where 0 < ζ < 1, ω2
n = K p/I and 2ζωn = Kd/I.
From (19.12), we now see that the “open-loop” zeros are the nominal underdamped closed-
loop poles
z1 = −ζωn + jωn

1 −ζ 2,
z2 = −ζωn −jωn

1 −ζ 2,
and that m = 2. The “open-loop” poles corresponding to (19.12) are
p1 = 0,
p2 = 0,
p3 = 0,
and n = 3. Let us now construct the root-locus.

342
Spacecraft Dynamics and Control: An Introduction
Im[s]
Re[s]
jωd
−jωd
−ζωn
Figure 19.13
Steps 1 and 2
Step 1
Plot the open-loop poles and zeros (shown in Figure 19.13).
Step 2
Determine the root locus on the real axis (shown in Figure 19.13).
Step 3
Determine the asymptotes. There is n −m = 1 asymptote. The angle of the asymptote is
φ1 = 180◦
n −m = 180◦
1
= 180◦,
which lies along the negative real axis. This is already covered by Step 2 (it lies on the negative
real axis), so we do not need to examine it further.
Step 4
There are no breakaway points, so we do not need to determine them.
Step 5
Determine the angle of departure from the open-loop poles. There are three repeated open-loop
poles at p1 = p2 = p3 = 0. We therefore have the departure angle
φ = ∠(p1 −z1) + ∠(p1 −z2) + 180◦+ 360◦(l −1)
3
.
for any integer l. From the diagram shown in Figure 19.14, we see that
∠(p1 −z1) = 180◦+ α,
∠(p1 −z2) = 180◦−α.
Therefore, we have the departure angles
φ = 60◦,
180◦,
−60◦.

The Root Locus
343
Im[s]
Re[s]
jωd
−jωd
−ζωn
α
180o + α
180o −α
Figure 19.14
Step 5 - departure angles
Determine the arrival angles at the open-loop zeros. Since the root-locus is symmetric about
the real axis (poles must occur in complex conjugate pairs), we only need to determine the
arrival angle at z1. Now, z1 is not a repeated zero, so the arrival angle at z1 satisﬁes
ψ = −∠(z1 −z2) +
3

i=1
∠(z1 −pi) + 180◦+ 360◦(l −1),
for any integer l. Let us pick l = 0. From the diagram shown in Figure 19.15, we see that
∠(z1 −pi) = α,
and
∠(z1 −z2) = 90◦.
Im[s]
Re[s]
jωd
−jωd
−ζωn
α
z1
z2
Figure 19.15
Step 5 - arrival angles

344
Spacecraft Dynamics and Control: An Introduction
Im[s]
Re[s]
jωd
−jωd
−ζωn
jωn
−jωn
60o
ψ
Figure 19.16
Root locus for PD spacecraft attitude control as the actuator time-constant T : ∞→0
Therefore, we have the arrival angle
ψ = −90◦+ 3α −180◦= 3(α −90◦).
Since 0 < α −90◦< 90◦for underdamped pair of asymptotically stable poles, the arrival
angle must lie in the range 0 < ψ < 270◦.
Step 6
We saw in Step 5 that two of the root-locus branches depart from the open-loop poles into
the right-half plane. By Rule 1, these must eventually terminate at the open-loop zeros in the
left-half plane. Therefore, there must be imaginary axis crossings. We already determined the
imaginary axis crossing in Section 18.1 when we performed the Routh analysis. We found that
the root-locus crosses the imaginary axis at
s = ± j

K p
I
= ± jωn.
Step 7
Draw the complete root-locus (shown in Figure 19.16).
19.2.1
Interpretation of the root locus
As 1/T increases, that is the actuator time-constant T becomes smaller (and hence the actuator
becomes faster), two of the closed-loop poles approach s = −ζωn ± jωn

1 −ζ 2, which is
what we designed the closed-loop system for. The third closed-loop pole, becomes more

The Root Locus
345
negative (and hence will die off faster) as 1/T increases. Therefore, for a sufﬁciently fast
actuator, we will have a pair of dominant poles close to the nominal closed-loop poles s =
−ζωn ± jωn

1 −ζ 2, and the system will behave as if the actuator is ideal. This shows that
if the actuator is sufﬁciently fast, we can neglect actuator dynamics when initially performing
the controller design (as we did in Section 17.7.1).
19.3
Derivation of the Rules for Constructing the Root Locus
In this section, we demonstrate where the rules for constructing the root locus come from.
19.3.1
Rule 1
There are n branches of the root locus (since there are n poles). Each branch starts at an
open-loop pole, pi (when K = 0). m branches end at an open-loop zero zi (when K →
∞). The other n −m branches go to inﬁnity along an asymptote (when K →∞), as seen
in Rule 3.
To see this, consider the two forms of the closed-loop characteristic equation given in (19.5)
and (19.6), repeated here for convenience
b(s) + Ka(s) = 0,
(19.13)
a(s)
b(s) = −1
K ,
if
K ̸= 0,
(19.14)
where
a(s) = (s −z1)...(s −zm),
b(s) = (s −p1)...(s −pn),
and zi, i = 1, ..., m and pi, i = 1, ..., m are the open-loop zeros and poles respectively. It
is assumed that m ≤n. We note that the root locus is the set of all closed-loop poles for
K ≥0. It is clear that for n ≥m, the characteristic equation has n roots (closed-loop poles)
for each value of K. Therefore, there are n branches to the root locus, corresponding to the
n closed-loop poles. Now, letting K = 0 in (19.13), we see that the characteristic equation
becomes
b(s) = 0,
which means that the closed-loop poles with K = 0 are equal to the open-loop poles. These
are the starting points for each of the n branches of the root locus. To see where the branches
ﬁnish, let us now consider the form of the characteristic equation given by (19.14), and let
K →∞. We therefore have
a(s)
b(s) →0.

346
Spacecraft Dynamics and Control: An Introduction
Im[s]
Re[s]
p
¯p
φ1
φ2 = 360o −φ1
s
Figure 19.17
Test point on real axis with complex conjugate pair of open-loop poles
There are now two possibilities. The ﬁrst is that
a(s) = 0,
which is satisﬁed by the m open-loop zeros. The second possibility is that |s| →∞in such
a way that ∠(a(s)/b(s)) = −180◦+ 360◦(l −1), for some integer l. We shall examine this in
detail in the derivation of Rule 3. As we shall see, this is possible for only n −m branches
of the root locus. Therefore, we conclude that m of the branches of the root locus terminate
at the open-loop zeros (one branch per open-loop zero). The other n −m go to inﬁnity, as we
shall see.
19.3.2
Rule 2
The root locus includes all points on the real axis to the left of an odd number of open-loop
real poles and zeros.
To see this, we ﬁrst note that complex-conjugate open-loop poles and zeros do not affect the
root locus on the real axis. Consider a test point s on the real axis, and a complex-conjugate
pair of open-loop poles p and ¯p, as shown in Figure 19.17. Then, φ1 + φ2 = 360◦. The same
argument can be made for complex-conjugate pairs of open-loop zeros. Since the condition
for the test point s to lie on the root locus is

ψi −

φi = 180◦+ 360◦(l −1),
it is clear that complex-conjugate open-loop poles and zeros only adjust the integerl. Therefore,
root locii on the real axis is determined by real open-loop poles and zeros only. Now, as shown
in Figure 19.18, real poles and zeros to the right of a test point s contribute an angle 180◦with
the positive real axis. The real poles and zeros to the left of the test point s contribute and
angle 0◦with the real axis. Therefore, only open-loop poles and zeros to the right of the test
point s determine whether or not s lies on the root locus.
If the number of open-loop poles and zeros to the right of s is even, then  ψi − φi =
0◦+ 360◦(l −1) for some integer l, and the point s is not on the root locus. If the number of

The Root Locus
347
Im[s]
Re[s]
s
180o
180o
180o
Figure 19.18
Test point on real axis with real open-loop poles and zeros
open-loop poles and zeros to the right of s is odd, then  ψi − φi = 180◦+ 360◦(l −1)
for some integer l, and the point s is on the root locus.
19.3.3
Rule 3
As K →∞, n −m branches approach n −m asymptotes with angles measured counter-
clockwise from the positive real axis, given by
φl = 180◦+ 360◦(l −1)
n −m
,
l = 1, 2, ..., n −m.
The asymptotes have origin on the real axis at
α =
n
i=1 pi −m
i=1 zi
n −m
.
As mentioned in the derivation of Rule 1, we need to examine the behavior of a(s)/b(s) for
large s. To do this, we are going to approximate it. First, we note that
a(s) = (s −z1)...(s −zm) = sm + a1sm−1 + ... + am,
with a1 = −m
i=1 zi, and
b(s) = (s −p1)...(s −pn) = sn + b1sn−1 + ... + bn,
with b1 = −n
i=1 pi. This can be shown by simple expansions of the products.
Now, let us consider
b(s)
a(s) = sn + b1sn−1 + ... + bn
sm + a1sm−1 + ... + am
.

348
Spacecraft Dynamics and Control: An Introduction
We can expand this as follows
b(s)
a(s) = sn + a1sn−1 + ... + amsn−m
sm + a1sm−1 + ... + am
+ (b1 −a1)sn−1 + (b2 −a2)sn−2 + ...
sm + a1sm−1 + ... + am
,
= sn−m + (b1 −a1)

sn−1 + a1sn−2 + ... + amsn−m−1	
sm + a1sm−1 + ... + am
+ (b2 −a2 −(b1 −a1)a1)sn−2 + ...
sm + a1sm−1 + ... + am
= sn−m + (b1 −a1)sn−m−1 + ...
Continuing this process, we would obtain a power series expansion for b(s)/a(s) with each
term having a lower power of s. For large values of s, the power series is dominated by the
highest powers of s. Let us choose the ﬁrst two terms, namely
b(s)
a(s) ≈sn−m + (b1 −a1)sn−m−1.
Now, we note that
(s −α)n−m = sn−m −(n −m)αsn−m−1 + ...
Making use of this expansion, we see that for very large s, we can make the approximation
b(s)
a(s) ≈

s −(a1 −b1)
n −m
n−m
.
Therefore, for very large s, we can approximate the closed-loop characteristic equation in
(19.6) by
1
(s −α)n−m = −1
K ,
(19.15)
with
α = (a1 −b1)
n −m
=
n
i=1 pi −m
i=1 zi
n −m
.
What this approximation essentially means is that when s is very large, all of the open-loop
poles and zeros appear clustered at the same point near the origin, namely s = α, as shown
in Figure 19.19. The m open-loop zeros cancel with m of the open-loop poles, leaving n −m
open-loop poles at s = α. Therefore, for very large values of K, n −m branches of the root
locus approach the root locus of (19.15). We can ﬁnd the root locus of (19.15) analytically.
We note that we can write
−K = Ke j(π+2π(l−1)),

The Root Locus
349
Im[s]
Re[s]
s
φl
α
all open-loop poles and zeros appear clustered at α from far away
Figure 19.19
Far away test-point
for some integer l. Then, the root locus of (19.15) is given by
s = α + K 1/(n−m)e j(π+2π(l−1))/(n−m),
l = 1, ..., n −m.
That is, they are n −m straight lines with origin s = α, making angles
φl = 180◦+ 360◦(l −1)
n −m
,
l = 1, ..., n −m.
with the positive real axis.
19.3.4
Rule 4
The break-away points (where the root-loci meet and split), and the break-in points (where the
root-loci meet and join) satisfy
a(s)db(s)
ds
−b(s)da(s)
ds
= 0.
To see this, suppose that s = r1 is a break-in or break-away point, with corresponding gain
K1. Then, since s = r1 is a repeated closed-loop pole for the gain K1, we can write the
corresponding characteristic equation as
b(s) + K1a(s) = (s −r1)q f (s) = 0,
(19.16)
where q ≥2 is the multiplicity of the pole s = r1, and f (s) is a polynomial in s. Differentiating
this gives
db(s)
ds
+ K1
da(s)
ds
= q (s −r1)q−1 f (s) + (s −r1)q d f
ds .

350
Spacecraft Dynamics and Control: An Introduction
Evaluating this at s = r1, we have
db(r1)
ds
+ K1
da(r1)
ds
= 0.
(19.17)
From (19.16), we have
K1 = −b(r1)
a(r1),
Substituting this into (19.17) gives
db(r1)
ds
−b(r1)
a(r1)
da(r1)
ds
= 0.
Rearranging this gives the desired result,
a(r1)db(r1)
ds
−b(r1)da(r1)
ds
= 0.
19.3.5
Rule 5
The angle of departure φk of a branch from a pole pk of multiplicity nk is given by
nkφk =
m

i=1
∠(pk −zi) −
n

j=1, j̸=g if pg=pk
∠(pk −p j) + 180◦+ 360◦(l −1).
The angle of arrival ψk at a zero zk of multiplicity nk is given by
nkψk = −
m

i=1,i̸=g if zg=zk
∠(zk −zi) +
n

j=1
∠(zk −p j) + 180◦+ 360◦(l −1).
Note that l can be any integer in both cases.
To see this, consider ﬁrst an open-loop pole pk of multiplicity nk, and a test point s very closed
to pk, as shown in Figure 19.20.
Since s is very close to pk, we have
∠(pk −zi) ≈∠(s −zi) ,
and
∠

pk −p j
	
≈∠

s −p j
	
,

The Root Locus
351
Im[s]
Re[s]
s
pk
zi
pj
̸ (pk −pj)
̸ (pk −zi)
φk
Figure 19.20
Determination of departure angle
provided pk ̸= p j. The departure angle of a branch from pk (note that there must be nk
branches leaving from pk), is given by
φk = ∠(s −pk) ,
for points s on the root locus arbitrarily close to pk. The angle condition for s to lie on the root
locus is then
m

i=1
∠(s −zi) −
n

j=1
∠

s −p j
	
= 180◦+ 360◦(l −1),
which becomes
m

i=1
∠(pk −zi) −
n

j=1, j̸=g if pg=pk
∠

pk −p j
	
−nkφk = 180◦+ 360◦(l −1),
for any integer l. Rearranging, we get
nkφk =
m

i=1
∠(pk −zi) −
n

j=1, j̸=g if pg=pk
∠

pk −p j
	
−180◦−360◦(l −1).
Since the integer l is arbitrary, we can rewrite this as
nkφk =
m

i=1
∠(pk −zi) −
n

j=1, j̸=g if pg=pk
∠(pk −p j) + 180◦+ 360◦(l −1).
To ﬁnd the arrival angle of a branch at an open-loop zero zk of multiplicity nk, consider a
test point s very close to zk, as shown in Figure 19.21. As for the departure from an open-loop

352
Spacecraft Dynamics and Control: An Introduction
Im[s]
Re[s]
s
zk
zi
pj
̸ (zk −pj)
̸ (zk −zi)
ψk
Figure 19.21
Determination of arrival angle
pole, since s is very close to zk, we have
∠(zk −zi) ≈∠(s −zi) ,
provided zk ̸= zi, and
∠

zk −p j
	
≈∠

s −p j
	
.
The arrival angle of a branch at zk (note that there must be nk branches arriving at zk), is
given by
ψk = ∠(s −zk) ,
for points s on the root locus arbitrarily close to zk. The angle condition for s to lie on the root
locus is then
m

i=1
∠(s −zi) −
n

j=1
∠

s −p j
	
= 180◦+ 360◦(l −1),
which becomes
m

i=1,i̸=g if zg=zk
∠(pk −zi) + nkψk −
n

j=1
∠

pk −p j
	
= 180◦+ 360◦(l −1),
for any integer l. Rearranging gives
nkψk = −
m

i=1,i̸=g if zg=zk
∠(zk −zi) +
n

j=1
∠(zk −p j) + 180◦+ 360◦(l −1).

The Root Locus
353
Notes
This chapter has presented the root locus. We have then applied the root locus technique to
examine how the closed-loop poles for a spacecraft attitude control design vary with the speed
of the actuator response. As intuition would suggest, the faster the actuator, the less effect
it has on the location of the originally designed closed-loop poles. Additional examples on
how to apply the root locus techniques may be found in the many excellent books on classical
control systems, including Qiu and Zhou (2010), Franklin et al. (2010) and Ogata (2010).
References
Franklin GF, Powell JD and Emami-Naeini A 2010 Feedback Control of Dynamic Systems 6th edn. Prentice Hall,
Upper Saddle River, NJ.
Ogata K 2010 Modern Control Engineering 5th edn. Prentice Hall, Upper Saddle River, NJ.
Qiu L and Zhou K 2010 Introduction to Feedback Control. Prentice Hall, Upper Saddle River, NJ.


20
Control Design by the Root
Locus Method
We have seen how to construct a root locus plot for a given system. This gives the information
about all of the possible closed-loop pole locations for a given control structure. However,
we typically want to have a pair of dominant poles with speciﬁed transient step response
characteristics (e.g. rise-time, overshoot, settling time, see Section 17.7.1). As seen in Section
17.7.1, these are dictated by the damping ratio ζ and the undamped natural frequency ωn, which
fully speciﬁes the dominant pole location. We must therefore choose our control structure
(transfer function) such that the desired dominant poles lie on the root locus. We consider
again the general feedback system as shown in Figure 20.1. What the control law Gc(s) does,
is it adds poles and zeros to the open-loop transfer function Go(s) = Gc(s)G p(s). As control
designers, we can choose the number of poles and zeros we wish to add, as well as their
locations. By adding appropriate poles and zeros, the root locus can be modiﬁed such that the
desired dominant poles are on the root locus.
As control system designers, it is important to understand what the effects of additional
poles and zeros are on the root locus.
Effect of Adding Open-Loop Poles
Adding poles increases the difference between open-loop poles and zeros n −m, which
decreases the angle of the ﬁrst asymptote, as seen in Figure 20.2. The overall effect is that the
root-locus is pushed toward the right-half plane, which results in longer settling times.
The location of the additional pole affects the center of the asymptote location. Recall that
the center of the asymptote is given by
α =
n
i=1 pi −m
i=1 zi
n −m
,
where pi are the open-loop poles, and zi are the open-loop zeros.
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

356
Spacecraft Dynamics and Control: An Introduction
R(s)
E(s)
+
−
U(s)
ˆTd(s)
Gc(s)
Gp(s)
Y (s)
+
+
Figure 20.1
General feedback system
1 open-loop pole
2 open-loop poles
3 open-loop poles
Figure 20.2
Effect of open-loop poles on the root locus
Im[s]
Re[s]
Im[s]
Re[s]
α
α
added pole
added pole
Figure 20.3
Effect of open-loop poles on the root locus

Control Design by the Root Locus Method
357
original root locus
1 added zero
2 added zeros
Figure 20.4
Effect of open-loop zeros on the root locus
As shown in Figure 20.3, as the added pole moves to the right, the center of the asymptote
moves to the right, and the effect of pushing the root locus to the right becomes more
pronounced. Therefore, if added open-loop poles are needed, try to put them to the far
left of the dominant poles.
Effect of Adding Additional Open-Loop Zeros
Adding zeros decreases n −m, which decreases the number of the asymptotes, increasing the
angle of the ﬁrst asymptote, as shown in Figure 20.4. The overall effect is to pull the root locus
to the left, which makes the system more stable, and speeds up the transient response.
The location of the added zero affects the center of the asymptote.
α =
n
i=1 pi −m
i=1 zi
n −m
.
As the added zero moves to the right, the center of the asymptote moves to the left, as shown
in Figure 20.5. Of course, the zero should still remain in the left-half plane (since poles go to
zeros as the open-loop gain K →∞).
20.1
Typical Types of Controllers
In this section, we will examine some typical controllers, and what their effects are on the
root-locus.
added zero to right
added zero to left
Figure 20.5
Effect of open-loop zero location on the root locus

358
Spacecraft Dynamics and Control: An Introduction
pole to left of zero
Figure 20.6
Lead compensator pole and zero
20.1.1
Lead
A lead controller has a transfer function of the form
Gc(s) = Klead
s + 1/T
s + 1/(αT ), 0 < α < 1.
(20.1)
Clearly, a lead controller adds an open-loop pole and zero. This means that the number of
asymptotes does not change. As shown in Figure 20.6, the pole is to the left of the zero, so as
shown in Figure 20.7, it shifts the root locus to the left (improves transient response), and we
can change the location of the dominant poles.
20.1.2
Lag
A lag controller has a transfer function of the form
Gc(s) = Klag
s + 1/T
s + 1/(βT ), β > 1, Klag ≈1.
(20.2)
A lag controller therefore adds an open-loop pole and zero, as shown in Figure 20.8. This
means that the number of the asymptotes does not change. Lag compensation can be used if
the steady-state error is to be reduced without affecting the transient response (dominant pole
locations). To illustrate, let us consider the spacecraft attitude control problem as formulated
in Section 17.1. That is, the plant is given by
G p(s) =
1
Is2 .
original
with added lead compensator
Figure 20.7
Effect of lead compensator on root locus

Control Design by the Root Locus Method
359
pole to right of zero
Figure 20.8
Lag compensator pole and zero
Suppose we have designed some controller Gc(s) as in Figure 20.1, which provides the required
transient performance, but does not contain an integrator. Then, as we saw in Section 17.10,
the steady-state error to a constant disturbance ˆTd, is
ess = −
ˆTd
Kc
,
where Kc = Gc(0).
Now, suppose we would like to reduce the steady-state error without signiﬁcantly affecting
the transient response (we do not wish to shift the dominant poles). One way of doing this is
to append a lag compensator to our controller,
¯Gc(s) =
s + 1/T
s + 1/(βT )Gc(s).
With the added lag compensator, the steady-state error to a constant disturbance becomes
ess = −
ˆTd
¯Kc
,
where
¯Kc = βKc.
By choosing an appropriate β > 1, we can reduce the magnitude of the steady-state error
as much as we like. So as not to affect the rest of the root locus (and therefore the dominant
poles), we need to place the lag compensator pole and zero close to the origin (by the choice
of an appropriately large T ). To see why, let s be a point on the original root locus. As
shown in Figure 20.9, the angles of the lines from the lag compensator pole and zero to the
point s are approximately equal, and by the angle condition for the root-locus (see equation
(19.9) in Section 19.1) their effects on the root locus approximately cancel. That is, even
though the point s will not be on the root locus, a point very close to s will be. Hence, the
shape of the root locus stays the same, and the dominant poles with the original controller
Gc(s) will be approximately retained. This is illustrated in Figure 20.10. We can see that
the lag compensator has added a very slow pole to the open-loop system. However, the lag
compensator has also added a closed-loop zero very close to it (since open-loop zeros are
closed-loop zeros of the transfer function from reference input R(s) to output Y(s) (check

360
Spacecraft Dynamics and Control: An Introduction
φ
ψ
φ ≈ψ
s
Figure 20.9
Lag compensator pole and zero effect on root locus
this as an exercise)). The added zero has the effect of reducing the amplitude of the transient
component due to the slow pole (since they approximately cancel). Therefore, the transient
response will be approximately the same as with the original controller Gc(s).
20.1.3
Proportional-Derivative (PD)
A proportional-derivative controller can be written as
Gc(s) = K pd

s + 1
T

.
(20.3)
Therefore, a PD controller adds a single zero to the root-locus, which decreases the number
of asymptotes on the root-locus by one (since n −m is reduced by one). As such, the angle
of the ﬁrst asymptote increases. Comparing the PD controller (20.3) with the lead controller
(20.1), it can be seen that the PD controller is just a limiting case of a lead controller when
the lead pole goes to negative inﬁnity (α →0), as shown in Figure 20.11. Therefore, a PD
controller can be designed similarly to a lead controller, and can be used to improve transient
performance.
original
with added lag compensator
Figure 20.10
Lag compensator pole and zero effect on root locus

Control Design by the Root Locus Method
361
lead with pole becoming more negative
PD
Figure 20.11
Root locus with PD compensation and comparison with lead compensation
20.1.4
Proportional-Integral (PI)
A proportional-integral controller can be written as
Gc(s) = K pi
s + 1/T
s
.
(20.4)
Therefore, a PI controller adds a small stable open-loop zero, and an open-loop pole at the
origin. Comparing the PI controller (20.4) to the lag controller (20.2), it can be seen that a PI
controller is just a limiting case of the lag controller when the lag pole goes to zero (β →∞),
as shown in Figure 20.12. That is, the PI controller can be used designed like a lag controller to
reduce the steady-state error (to zero by increasing the system type) while leaving the transient
performance almost unchanged.
We have seen four basic types of controllers, and their effects on the root locus. We can
use any combination of these as required to achieve the desired transient and steady-state
performance.
20.2
PID Design for Spacecraft Attitude Control
We shall now apply the root-locus design method to the spacecraft attitude control design
problem in Example 17.1, with the added requirement that the steady-state error must be zero
Lag controller
PI controller
Figure 20.12
Root loci for lag and PI controllers

362
Spacecraft Dynamics and Control: An Introduction
for a step disturbance. To summarize the problem in Example 17.1, we are considering the
control of the spacecraft attitude given by
I ¨y = u + Td,
where the spacecraft inertia I = 1 kg·m2, the control torque is u, and Td is the disturbance
torque. Recall that the associated plant transfer function is
G p(s) = 1
s2 .
We must design a controller so that the closed-loop system satisﬁes the following speciﬁcations.
1. Rise-time constraint, tr ≤30 seconds.
2. Maximum overshoot constraint, Mp ≤30%.
3. Settling-time constraint, ts ≤100 seconds.
4. The steady-state error for a step disturbance ˆTd must be zero.
Now, the ﬁrst three requirements are transient speciﬁcations which are affected by the closed-
loop dominant pole locations. We have seen that PD control can be used to obtain the desired
dominant poles. As seen in Section 17.10, the fourth constraint means that the controller must
contain an integrator. This suggests the use of PID control. Now, the question is how to design
the PID gains.
It turns out that a PID controller can be designed as a combined PD and PI controller. To
see this, consider the combined PD and PI controller
Gc(s) = K

s +
1
Tpd
 s + 1/Tpi
s

,
= K

s +
1
Tpd
+ 1
Tpi
+
1
TpdTpis

,
= K p + sKd + Ki
s ,
which is a PID controller with proportional, derivative and integral gains given by
K p = K
 1
Tpd
+ 1
Tpi

, Kd = K, Ki =
K
TpdTpi
,
(20.5)
respectively.
This means that we can design our PID controller sequentially with PD and PI controllers.
The typical approach would be to design the PD controller ﬁrst to obtain the desired dominant
poles, and then design the PI controller so as to not affect the dominant poles signiﬁcantly.
In our case, this would result in the PI zero being very close to the origin, and as a result,
the closed-loop system will have a very slow pole. This is because the root locus will have
a branch starting at the PI pole (at the origin) and ﬁnishing at the PI zero (very close to the
origin).

Control Design by the Root Locus Method
363
We shall therefore follow the opposite approach. We shall ﬁrst design the PI controller, and
then we shall design the PD controller to give the desired dominant poles.
Before continuing, we need to specify the desired dominant poles. We have seen in Example
17.1, that a pair of dominant poles that yield a satisfactory transient response are
s = −0.05 ± j0.1.
20.2.1
PI Design
The design of the PI part amounts to choosing the PI zero. Let us try Tpi = 20, which leads to
a PI zero zP I = −1/Tpi = −0.05. That is, the PI part of the controller is given by
s + 0.05
s

.
20.2.2
PD Design
The design of the PD part now requires us to ﬁnd the PD zero to ensure that the desired
dominant poles s = −0.05 ± j0.1 are closed-loop poles for some controller gain K. That is,
we need to choose the PD zero such that s = −0.05 ± j0.1 lie on the root locus of
1 + Go(s) = 0,
(20.6)
where the open-loop transfer function is
Go(s) = Gc(s)G p(s) = K

s +
1
Tpd
 s + 1/Tpi
s
  1
s2

.
(20.7)
Note that complex poles always occur in complex conjugate pairs, so we only need to ensure
that s = −0.05 + j0.1 is on the root locus.
Recall from Section 19.1, that for the point s to lie on the root locus, it must satisfy the
angle condition
∠Go(s) = 180◦+ 360◦(l −1),
for some integer l. In terms of the open-loop transfer function (20.7), this becomes
∠

s +
1
Tpd

+ ∠
s + 1/Tpi
s

+ ∠
 1
s2

= 180◦+ 360◦(l −1),
(20.8)
for some integer l.
Let us ﬁrst determine the phase of the plant, ∠

1/s2
. We see that the plant has a double
pole at the origin.

364
Spacecraft Dynamics and Control: An Introduction
φp
s
−0.05
j0.1
Figure 20.13
Desired dominant pole location
From Figure 20.13, we can see that
φp = 180◦−tan−1 (0.1/0.05) = 116.57◦.
Therefore, we have
∠
 1
s2

= −2φp = −233.13◦.
Now, let us determine the phase of the PI part, ∠

(s + 1/Tpi)/s

. We see that the PI part
has a zero at −1/Tpi = −0.05 and a pole at the origin.
From Figure 20.14, we can see that
φpi = φp = 116.57◦, ψpi = 90◦.
Therefore, we have
∠
s + 1/Tpi
s

= ψpi −φpi = −26.5651◦.
φpi
s
−0.05
j0.1
ψpi
Figure 20.14
PI zero and pole location

Control Design by the Root Locus Method
365
s
−0.05
j0.1
ψpd = 79.70o
−
1
Tpd
Figure 20.15
PD zero location
From the angle condition (20.8), we now ﬁnd that the PD part must add the phase
∠

s +
1
Tpd

= −180◦−∠
s + 1/Tpi
s

−∠
 1
s2

= 79.70◦.
Now, we see that the PD part adds a single zero at −1/Tpd. We can determine it’s location
from the above angle condition.
We see from Figure 20.15 that
tan ψpd =
0.1
1/Tpd −0.05,
which rearranges to give
1
Tpd
=
0.1
tan 79.70◦+ 0.05 = 0.0682.
Note that this means that Tpd = 16.67.
20.2.3
Computation of the Gain K
With this choice of PD zero, we have ensured that the desired dominant pole s = −0.05 + j0.1
is on the root locus. The ﬁnal part of the controller design is determining the controller gain
K such that s = −0.05 + j0.1 is a closed-loop pole. From the characteristic equation (20.6),
we see that we must have
1 + Go(s) = 1 + K

s +
1
Tpd
 s + 1/Tpi
s
  1
s2

= 0.
This can be rearranged to give
K =

s3

s + 1/Tpd
 
s + 1/Tpi

 .

366
Spacecraft Dynamics and Control: An Introduction
Evaluating this at s = −0.05 + j0.1, we obtain the gain
K = 0.1375.
The corresponding PID gains are (see (20.5))
K p = 0.0163, Kd = 0.1375, Ki = 4.69 × 10−4.
To summarize, we have designed a PID controller for implementation as in Figure 20.1
Gc(s) = K p + Kds + Ki
s ,
(20.9)
which means that the control torque on the spacecraft is given by
u(t) = K pe(t) + Kd ˙e(t) + Ki
 t
0
e(τ)dτ.
(20.10)
That is, part of the control torque is proportional to the derivative of the tracking error ˙e(t).
Recall from Section 17.7.1, that there may be situations where we do not wish to do this
(likewise, there are situations where we do), and we would rather the control torque has the
form
u(t) = K pe(t) −Kd ˙y(t) + Ki
 t
0
e(τ)dτ,
(20.11)
similar to the modiﬁed proportional derivative control in Section 17.7.1.
Let us divide the control law (20.9) into two parts
Gc(s) = Gce(s) + Gcy(s),
where Gce(s) = K p + Ki/s and Gcy(s) = Kds. The standard control implementation of
(20.10) is shown in Figure 20.16 (compare this with Figure 20.1). The modiﬁed control
implementation of (20.11) is shown in Figure 20.17. We can now ﬁnd the closed-loop transfer
functions from R(s) to Y(s) as
Y(s)
R(s) =
(Gce(s) + Gcy(s))G p(s)
1 + (Gce(s) + Gcy(s))G p(s),
R(s)
E(s)
+
−
U(s)
Gce(s) + Gcy(s)
Gp(s)
Y (s)
Figure 20.16
Standard control implementation

Control Design by the Root Locus Method
367
R(s)
E(s)
+
−
U(s)
Gce(s)
Gp(s)
Y (s)
+
Gcy(s)
−
Figure 20.17
Modiﬁed control implementation
for the standard control implementation (Figure 20.16), and
Y(s)
R(s) =
Gce(s)G p(s)
1 + (Gce(s) + Gcy(s))G p(s),
for the modiﬁed control implementation (Figure 20.17). Comparing the two closed-loop
transfer functions, we can see that both have the same characteristic equation
1 + (Gce(s) + Gcy(s))G p(s) = 0.
That is, the closed-loop poles for both implementations are the same. In particular, the modiﬁed
control implementation (20.11) also provides the desired dominant closed-loop poles. Figure
20.18 now shows the attitude response to a unit step command with the designed controller
using the modiﬁed control implementation (20.11). We can see from Figure 20.18, that both
the settling-time and rise-time are within speciﬁcations, but that the percent overshoot is too
large. This is due to the additional pole arising from the integral term, as well as a closed-loop
zero that is present.
To satisfy all closed-loop speciﬁcations, we need to tweak the control design a little bit.
Since the percentage overshoot is directly related to the damping ratio of the dominant poles
(see Section 17.7.1), let us increase the damping ratio of the dominant poles. Since the settling-
time is almost on the boundary of the speciﬁcation, let us also speed up the dominant poles
(by making the real part more negative). Let us try the new desired dominant poles
s = −0.07 ± j0.09.
Repeating the above PID design procedure with the new desired dominant poles, we obtain
the PID gains
K p = 0.0179, Kd = 0.1753, Ki = 4.59 × 10−4.
Figure 20.19 shows the attitude step response with the new controller gains. We can see that
now all of the transient closed-loop speciﬁcations are satisﬁed. Figure 20.20 shows that we
have also achieved a zero steady-state error to a step disturbance ˆTd.

368
Spacecraft Dynamics and Control: An Introduction
Unit step response with modified PID control
Time (sec)
Amplitude
0
20
40
60
80
100
120
140
0
0.5
1
1.5
System: sysclm
Peak amplitude: 1.4
Overshoot (%): 40.3
At time (sec): 28.1
System: sysclm
Settling Time (sec): 98.4
System: sysclm
Time (sec): 16.5
Amplitude: 1
Figure 20.18
Unit step response K p = 0.0163, Kd = 0.1375, Ki = 4.69 × 10−4
Unit step response with modified PID control
Time (sec)
Amplitude
0
20
40
60
80
100
120
140
0
0.2
0.4
0.6
0.8
1
1.2
1.4
System: sysclm
Peak amplitude: 1.3
Overshoot (%): 30.2
At time (sec): 30
System: sysclm
Time (sec): 17.6
Amplitude: 1
System: sysclm
Settling Time (sec): 92.5
Figure 20.19
Unit step response K p = 0.0179, Kd = 0.1753, Ki = 4.59 × 10−4

Control Design by the Root Locus Method
369
0
20
40
60
80
100
120
140
160
180
200
0
0.01
0.02
0.03
0.04
0.05
0.06
Response to a step disturbance Td=1−3Nm
Time (sec)
Amplitude
Figure 20.20
Attitude response for a step disturbance ˆTd = 10−3Nm
Notes
This chapter has examined how the root locus technique may be applied to the control system
design problem. In particular, we have examined how common controller types affect the root
locus. We have then applied the root locus technique to the design of a PID controller for
spacecraft attitude control. For further examples on how to apply the root locus technique to
control system design, the reader is referred to any of the excellent books on classical control
systems, including Qiu and Zhou (2010), Franklin et al. (2010) and Ogata (2010).
References
Franklin GF, Powell JD and Emami-Naeini A 2010 Feedback Control of Dynamic Systems 6th edn. Prentice Hall,
Upper Saddle River, NJ.
Ogata K 2010 Modern Control Engineering 5th edn. Prentice Hall, Upper Saddle River, NJ.
Qiu L and Zhou K 2010 Introduction to Feedback Control. Prentice Hall, Upper Saddle River, NJ.


21
Frequency Response
Up to now, all control laws we have designed have not taken into consideration measurement
noise. As was mentioned in Section 17.5, the sensors will never provide the true system output
y(t), but instead will provide a version corrupted by measurement noise y(t) + w(t), as shown
in Figure 21.1.
In the case of spacecraft attitude control, this means that the sensor will never provide
the true attitude θ(t), but will provide instead θ(t) + w(t). Let us see what this implies for
proportional-derivative control of spacecraft attitude. The proportional part of the control
torque demanded from the actuators becomes
K p (r(t) −y(t) −w(t)) .
This means that instead of a nice smooth control torque, the actuator will expend unnecessary
effort due to the measurement noise. This will result in a time-varying tracking error. The
problem becomes even more pronounced if we examine the derivative control term. If the
attitude sensor suite does not contain a rate-gyro which provides a low noise measurement of
the angular velocity ˙y directly, the angular velocity must be obtained by differentiating the
attitude measurement. In this case, the demanded control torque due to the derivative term
becomes
Kd
d
dt (y(t) + w(t)) .
It can be seen in Figure 21.2, that directly differentiating a noisy measurement ampliﬁes
the noise content of the derivative. This example highlights the need to remove as much of
the measurement noise as possible. Fortunately, as Figures 21.1 and 21.2 illustrate, the output
of interest (the attitude in our case) y(t) typically varies slowly with time compared with the
measurement noise w(t). That is, the output y(t) is generally “low-frequency” in nature, while
the measurement noise w(t) has more “high-frequency” content. We can therefore remove a
signiﬁcant portion of the measurement noise w(t) by the application of an appropriate ﬁlter
H(s), which passes low-frequency content (y(t)) but blocks high frequency content (w(t)).
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

372
Spacecraft Dynamics and Control: An Introduction
t
y(t)
y(t) + w(t)
Figure 21.1
Real and ideal measurements
With the application of a low-pass ﬁlter H(s), the block diagram for our proportional-
derivative spacecraft attitude control problem from Section 17.7.1, becomes as shown in
Figure 21.3.
To understand how to design the low-pass ﬁlter, we need to study the frequency response.
21.1
Frequency Response and Bode Plots
By the frequency response of a system described by transfer function y(s)/u(s) = G(s), we
mean the steady-state response to a sinusoidal input u(t) = A sin ωt, as shown in Figure 21.4.
Obviously, the concept of frequency response only makes sense if the system G(s) is
asymptotically stable (otherwise, the transient response does not vanish). We shall therefore
consider only asymptotically stable systems G(s) (which means the poles of G(s) lie in the
open left half plane).
It can be shown that the steady-state response of an asymptotically stable system y(s) =
G(s)u(s) to a sinusoidal input
u(t) = A sin ωt,
is given by
yss(t) = A|G( jω)| sin (ωt + φ) ,
(21.1)
where φ = ∠G( jω). Note that ω is the frequency of the input, and A is the amplitude.
t
y(t)
y(t) + w(t)
gradient
Figure 21.2
Differentiation of noisy measurements

Frequency Response
373
R(s) +
−
Kp
Y (s)
+
−
Kds
1
Is2
H(s)
+
+
W(s)
H(s)
U(s)
Figure 21.3
Modiﬁed proportional-derivative control with low-pass ﬁlter
Equation (21.1) shows two key features. First of all, the amplitude of the response is equal to
the amplitude of the input scaled by |G( jω)| (the magnitude of the transfer function evaluated
at jω). Secondly, the phase of the output is shifted from the phase of the input by φ = ∠G( jω),
which is the phase of the transfer function evaluated at jω.
What this means is that if |G( jω)| ≪1 is very small for a given frequency ω, then the
response of G(s) is attenuated at that frequency. If |G( jω)| ≈1 and ∠G( jω) ≈0 for a given
frequency ω, then yss(t) ≈u(t).
Applying this knowledge to our low-pass ﬁlter H(s) for measurement noise attenuation,
we see that we want |H( jω)| ≈1 and ∠H( jω) ≈0 for low frequencies and |H( jω)| ≪1 for
high frequencies. Related to this are two important quantities, namely the ﬁlter bandwidth and
cutoff rate. These are deﬁned as follows:
Bandwidth, ωb: the largest frequency such that |H( jω)| ≥(1/
√
2)|H(0)| for all frequencies
ω in the interval [0, ωb], as shown in Figure 21.5. The bandwidth indicates the range of
frequencies that the system H(s) passes inputs without signiﬁcant attenuation.
Cutoff rate: the negative slope of |H( jω)| at frequencies ω ≥ωb. The larger the cutoff rate,
the better the signal attenuation outside of the system bandwidth, and consequently better
noise rejection.
For the purposes of ﬁlter design then, the ﬁlter bandwidth is chosen according to the range of
frequencies the ﬁlter is required to pass. To be able to design an appropriate ﬁlter H(s), we
need to understand how |H( jω)| and ∠H( jω) vary as a function of frequency ω.
G(s)
y(t)
u(t) = A sin ωt
Figure 21.4
Frequency response of a system

374
Spacecraft Dynamics and Control: An Introduction
|H(jω)|
|H(0)|
1
√
2|H(0)|
0
ωb
ω
Figure 21.5
System bandwidth
21.1.1
Plotting the Frequency Response as a Function of ω (Bode Plots)
In general, we can write an asymptotically stable transfer function with integrators in the form
G(s) =
K k
i=1 (Tis + 1) p
j=1

(s/ωnj)2 + 2ζ j(s/ωnj) + 1

s N l
i=1
 ¯Tis + 1
 q
j=1

(s/ ¯ωnj)2 + 2¯ζ j(s/ ¯ωnj) + 1
.
(21.2)
where Ti, ¯Ti, ωnj, ¯ωnj > 0 and 0 < ζ j, ¯ζ j < 1. Note that the quadratic factors result from
complex conjugate pairs of poles and zeros. Now, for complex numbers we have the following
magnitude and phase relationships (see Appendix A)

z1z2...zm
s1s2...sn
 = |z1||z2|...|zm|
|s1||s2|...|sn| ,
and
∠
z1z2...zm
s1s2...sn

=
m

i=1
∠zi −
n

j=1
∠s j.
Applying these relationships to the transfer function (21.2), we see that to ﬁnd |G( jω)| and
∠G( jω), we just need to ﬁnd the magnitudes and phases of the individual factors in the transfer
function.
It can also be seen that the phases of the individual factors are additive. This is very useful
for manual plotting of the phase frequency response (∠G( jω) vs. ω). That is, we can plot the
phase of each factor individually, and then graphically sum them. It also provides an intuitive
understanding for how the phase of an individual factor affects the phase frequency response
of the entire transfer function.
Unfortunately, the magnitudes of the factors are multiplicative, which does not lend itself to
manual plotting of the gain frequency response (|G( jω)| vs. ω), nor does it provide an intuitive

Frequency Response
375
understanding of how the magnitude of an individual factor affects the gain frequency response
of the entire function. To make them additive, we instead plot the log magnitude. Speciﬁcally,
we obtain the gain |G( jω)| at each frequency ω in decibels, which is deﬁned as
20 log |G( jω)|.
The reason for this is that
log
|z1||z2|...|zm|
|s1||s2|...|sn|

=
m

i=1
log |zi| −
n

j=1
log |s j|,
which shows that the log magnitudes are additive. Therefore, for the gain frequency response,
we plot 20 log |G( jω)| vs ω, for which the contributions from each individual factor in the
transfer function can be added graphically.
Examining the transfer function (21.2), we see that there are four basic types of factors we
need to deal with in a transfer function.
1. Gain, K.
2. Integrators 1/s and derivatives s.
3. First order factors T s + 1 and (T s + 1)−1.
4. Second order factors (s/ωn)2 + 2ζ(s/ωn) + 1 and

(s/ωn)2 + 2ζ(s/ωn) + 1
−1.
If we are familiar with the shapes of the frequency response for these factors, we will be able
to construct frequency response plots for more complex transfer functions by addition of the
frequency responses of the individual factors.
1. Gain, K.
The log-magnitude is given by
20 log K = constant.
The phase is given by
∠K = 0.
The log-magnitude and phase frequency responses are plotted in Figure 21.6.
2. (a) Derivative s.
The log magnitude is given by
20 log | jω| = 20 log ω.
That is, the gain increases 20 dB for every decade of ω. We typically plot the frequency
response with a logarithmic scale for frequency, which makes the above gain relationship
linear.

376
Spacecraft Dynamics and Control: An Introduction
0 dB
0°
K
20 log K
ω
ω
Figure 21.6
Frequency response of a constant gain
The phase is
∠( jω) = 90◦.
The log-magnitude and phase frequency responses are plotted in Figure 21.7.
It is clear from the gain frequency response why it is bad to differentiate a noisy
measurement. High frequency content in the noise is ampliﬁed (see the log-magnitude
plot in Figure 21.7).
(b) Integrator 1/s.
The log magnitude is
20 log

1
jω
 = −20 log ω,
0 dB
0°
(jω)
20 log |jω|
ω
ω
90°
1
0.1
10
20 dB
–20 dB
0.1
1
10
Figure 21.7
Frequency response of a derivative

Frequency Response
377
0 dB
0°
( 1
jω)
20 log | 1
jω|
ω
ω
−90°
1
0.1
10
20 dB
–20 dB
0.1
1
10
Figure 21.8
Frequency response of an integrator
and the phase is
∠
 1
jω

= −90◦.
It is clear that the integrator frequency response is just the negative of the derivative frequency
response. The log-magnitude and phase frequency responses are plotted in Figure 21.8.
3. First order factors (T s + 1)±1
Let us consider
1
T s + 1
We have

1
jωT + 1
 =
1
| jωT + 1| =
1
√
ω2T 2 + 1
.
Therefore, the log magnitude is
20 log

1
jωT + 1
 = −20 log
	
ω2T 2 + 1.
For very small ωT , this is approximately
20 log

1
jωT + 1
 ≈−20 log 1 = 0, ωT ≪1.

378
Spacecraft Dynamics and Control: An Introduction
0 dB
20 log |
1
jωT +1|
ω
1
T
0.1
T
10
T
-20 dB
-40 dB
exact
approximate
Figure 21.9
Gain frequency response of 1/(T s + 1)
That is, the gain frequency response has an asymptote at 20 log |1/( jωT + 1)| = 0 dB. For
large ωT , the log magnitude is approximately
20 log

1
jωT + 1
 ≈−20 log ωT = −20 log ω −20 log T, ωT ≫1.
That is, the gain frequency response has an asymptote with slope −20 dB/decade of
ω, which crosses 20 log |1/( jωT + 1)| = 0 when ω = 1/T . Therefore, the gain fre-
quency response may be approximated by the two asymptotes, which meet at ωc = 1/T ,
which is called the corner frequency. The log-magnitude frequency response is plotted in
Figure 21.9.
The maximum error in this asymptotic approximation occurs at the corner frequency,
where the gain is −20 log
√
2 = −3.03 dB.
The phase at ω = 0 is
∠

1
jωT + 1

= 0◦, ω = 0.
The phase for very large ωT is
∠

1
jωT + 1

≈∠

1
jωT

= −90◦, ωT ≫1.
At the corner frequency, the phase is
∠

1
jωT + 1

= ∠

1
j1 + 1

= −45◦.

Frequency Response
379
0°
1
jωT +1
ω
1
T
0.1
T
10
T
−45°
−90°
exact
approximate
Figure 21.10
Phase frequency response of 1/(T s + 1)
The phase frequency response may also be represented by a straight line approximation.
To see this, let us examine the phases at ω = 0.1ωc and ω = 10ωc (one decade to the left
and right of the corner frequency). We have
∠

1
jωT + 1

= ∠

1
j0.1 + 1

= −5.7◦≈0◦, ω = 0.1ωc = 0.1
T ,
∠

1
jωT + 1

= ∠

1
j10 + 1

= −84.3◦≈−90◦, ω = 10ωc = 10
T ,
respectively. Due to this, we can approximate the phase frequency response between ω =
0.1ωc and ω = 10ωc by a straight line from 0◦to 90◦. Figure 21.10 shows the corresponding
straight-line approximation to the phase frequency response, and the exact phase frequency
response. It can be seen from Figures 21.9 and 21.10 that the approximations capture the
main features of the gain and phase frequency responses.
For the ﬁrst order factor T s + 1, the frequency response plots are just the negative of
those for 1/(T s + 1), as shown in Figure 21.11.
4. Quadratic Factors

(s/ωn)2 + 2ζ(s/ωn) + 1
±1,
0 < ζ < 1
Consider the factor
1
( jω/ωn)2 + 2ζ( jω/ωn) + 1 =
1
1 −(ω/ωn)2 + j2ζ(ω/ωn).
We have

1
( jω/ωn)2 + 2ζ( jω/ωn) + 1
 =
1


1 −(ω/ωn)22 + (2ζ(ω/ωn))2
.
Therefore, the log magnitude becomes
20 log
1/

( jω/ωn)2 + 2ζ( jω/ωn) + 1

= −20 log


1 −(ω/ωn)22 + (2ζ(ω/ωn))2.

380
Spacecraft Dynamics and Control: An Introduction
0°
(jωT + 1)
ω
1
T
0.1
T
10
T
45°
90°
exact
approximate
0 dB
20 log |jωT + 1|
ω
1
T
0.1
T
10
T
20 dB
40 dB
Figure 21.11
Frequency response of T s + 1
For very small ω, the log magnitude is approximately
−20 log


1 −(ω/ωn)22 + (2ζ(ω/ωn))2 ≈−20 log 1 = 0, ω ≪ωn.
Hence, the gain frequency response has an asymptote at 0 dB. For very large ω, this log
magnitude becomes approximately
−20 log


1 −(ω/ωn)22 + (2ζ(ω/ωn))2 ≈−20 log(ω/ωn)2
= −40 log(ω/ωn),
= −40 log ω + 40 log ωn,
for ω ≫ωn. This is an asymptote with slope −40 dB/decade, which crosses 0 dB at ω = ωn.
That is, ωn, the undamped natural frequency is the corner frequency for a quadratic factor,
and the slope of the log magnitude at high frequencies is double that of a ﬁrst order factor.
The log-magnitude frequency response is plotted in Figure 21.12.
The phase at ω = 0 is
∠

1
( jω/ωn)2 + 2ζ( jω/ωn) + 1

= 0◦, ω = 0.
At very large frequencies, the phase is approximately
∠

1
( jω/ωn)2 + 2ζ( jω/ωn) + 1

≈∠

1
( jω/ωn)2

= −180◦, ω ≫ωn.

Frequency Response
381
0 dB
20 log
1
(jω/ωn)2+2ζ(jω/ωn)+1
ω
ωn
–40 dB
–80 dB
exact (depends on ζ)
approximate
increasing ζ
Figure 21.12
Gain frequency response of

(s/ωn)2 + 2ζ(s/ωn) + 1
−1
At the corner frequency, the phase is
∠

1
( jω/ωn)2 + 2ζ( jω/ωn) + 1

= ∠
 1
2ζ j

= −90◦.
Similar to the ﬁrst order factor, we can use a straight line approximation to the phase
frequency response. Figure 21.13 shows the corresponding straight-line approximation to
the phase frequency response, and the exact phase frequency response. From Figures 21.12
and 21.13 it can be seen that the approximations capture the main features of the gain
and phase frequency responses, although not as well as for a ﬁrst-order factor (compare to
Figures 21.9 and 21.10).
For the quadratic factor (s/ωn)2 + 2ζ(s/ωn) + 1, the frequency response plots are just
the negative of those for

(s/ωn)2 + 2ζ(s/ωn) + 1
−1, as seen in Figure 21.14.
The log magnitude and phase frequency response plots we have presented in Figures 21.6 to
21.14 are called Bode Diagrams. Using the responses for the four factors in a transfer function,
we may now present a procedure for plotting Bode Diagrams for any transfer function made
up of those factors.
Procedure for plotting Bode Diagrams
1. Rewrite G(s) in terms of the basic factors K, s, T s + 1, (s/ωn)2 + 2ζ(s/ωn) + 1.
0°
1
(jω/ωn)2+2ζ(jω/ωn)+1
ω
ωn
0.1ωn
10ωn
−90°
−180°
exact (depends on ζ)
approximate
increasing ζ
Figure 21.13
Phase frequency response of

(s/ωn)2 + 2ζ(s/ωn) + 1
−1

382
Spacecraft Dynamics and Control: An Introduction
0°
(jω/ωn)2 + 2ζ(jω/ωn) + 1
ω
ωn
0.1ωn
10ωn
90°
180°
exact (depends on ζ)
approximate
increasing ζ
0 dB
20 log (jω/ωn)2 + 2ζ(jω/ωn) + 1
ω
ωn
0.1ωn
10ωn
40 dB
80 dB
increasing ζ
Figure 21.14
Frequency response of (s/ωn)2 + 2ζ(s/ωn) + 1
2. Plot the log magnitude frequency responses for each of these factors. Sum these to get the
overall response.
3. Plot the phase frequency responses for each of these factors. Sum these to get the overall
response.
Example 21.1 Let us draw the Bode-plot for the transfer function
G(s) =
10(s + 3)
s(s2 + s + 2).
First, we need to rewrite the factors in the standard form for Bode plots. We have
s + 3 = 3
1
3s + 1

, s2 + s + 2 = 2
 s
√
2
2
+ s
2 + 1

.
For the quadratic factor, we have undamped natural frequency ωn =
√
2 and damping ratio
ζ = 1/(2
√
2). Therefore, in terms of these factors, the transfer function becomes
G(s) = 15
((1/3)s + 1)
s

s/
√
2
2
+ s/2 + 1
.
This transfer function has four factors
1. 15
2. (1/3)s + 1
3. 1/s
4.

(s/
√
2)2 + (s/2) + 1
−1

Frequency Response
383
10
−2
10
−1
10
0
10
1
10
2
−100
−50
0
50
Approximate log magnitude frequency response of individual factors of G(s)
log magnitude (dB)
Frequency (rad/s)
10
−2
10
−1
10
0
10
1
10
2
−200
−100
0
100
Approximate phase frequency response of individual factors of G(s)
phase (deg)
Frequency (rad/s)
factor 1
factor 2
factor 3
factor 4
Figure 21.15
Approximate Bode diagrams for the individual factors of G(s)
Figure 21.15 shows the approximate frequency responses of each of the individual factors.
Figure 21.16 shows the sum of the individual factors. For comparison, Figure 21.17 shows
the exact frequency response of G(s). Comparing Figures 21.16 and 21.17, it can be seen that
the approximate gain frequency response is close to the true gain frequency response, while
the approximate phase frequency response does not match the true phase frequency response
very well. This illustrates that the approximate methods of obtaining frequency responses
are good for obtaining a qualitative understanding, however any real analysis should be
performed with precise numerically obtained frequency responses.
Finally, we note that we can still plot Bode diagrams for an unstable transfer function G(s)
(just plot 20 log |G( jω)| and ∠G( jω)). They just do not have the physical interpretation of
being the steady-state frequency response. Also, they cannot be obtained experimentally
(whereas they can for asymptotically stable systems).
21.2
Low-Pass Filter Design
Let us now return to the problem of ﬁnding a low-pass ﬁlter H(s) for the purposes of measure-
ment noise attenuation as in Figure 21.3. Recall that we wish H( jω) ≈1 for small frequencies,
and H( jω) ≈0 for high frequencies. From the basic factors in Section 21.1.1, we see that a
ﬁrst order factor
H(s) =
1
T s + 1,

384
Spacecraft Dynamics and Control: An Introduction
10
−2
10
−1
10
0
10
1
10
2
−100
−50
0
50
100
Approximate log magnitude frequency response of G(s)
log magnitude (dB)
Frequency (rad/s)
10
−2
10
−1
10
0
10
1
10
2
−250
−200
−150
−100
Approximate phase frequency response of G(s)
phase (deg)
Frequency (rad/s)
Figure 21.16
Approximate Bode Diagrams for G(s)
−100
−50
0
50
100
Magnitude (dB)
10
−2
10
−1
10
0
10
1
10
2
−225
−180
−135
−90
Phase (deg)
Bode Diagram
Frequency  (rad/sec)
Figure 21.17
Exact Bode Diagrams for G(s)

Frequency Response
385
with appropriately chosen corner frequency ωc = (1/T ) to give the desired bandwidth, is a
good candidate for the ﬁlter H(s). In fact, depending on the amount of measurement noise
attenuation we require, we can use more than one in series, for example,
H(s) =

1
T s + 1
2
.
This increases the cut-off rate.
Notes
This chapter has introduced the concept of the frequency response of a system, and how it
to relates the ﬁltering of measurement noise in a control system. We have then examined
techniques for determining an approximate frequency response. For further examples on how
to determine an approximate frequency response, the reader is referred to any of the excellent
books on classical control systems, including Franklin et al. (2010) and Ogata (2010).
References
Franklin GF, Powell JD and Emami-Naeini A 2010 Feedback Control of Dynamic Systems 6th edn. Prentice Hall,
Upper Saddle River, NJ.
Ogata K 2010 Modern Control Engineering 5th edn. Prentice Hall, Upper Saddle River, NJ.


22
Relative Stability
We have seen that an important requirement on a closed-loop system is for it to be stable.
In this chapter we shall study how close a system is to becoming unstable, which is the
concept of relative stability. This is important to understand, since our mathematical models
of the system being controlled are never perfect. It is very important that a closed-loop
system with the controller that we have designed remains stable given the uncertainties in
the plant model. It turns out that the system frequency response provides useful tools in
this regard.
22.1
Polar Plots
We have seen that the steady-state frequency response of the asymptotically stable system
y(s) = G(s)u(s),
to the input u(t) = A sin ωt, depends on G( jω) in the sense that
yss(t) = A|G( jω)| sin (ωt + ∠G( jω)) .
Since,
G( jω) = |G( jω)| [cos ∠G( jω) + j sin ∠G( jω)] ,
(22.1)
it fully determines the amplitude and phase of the steady-state response. One method of
presenting G( jω) for different frequencies is the Bode Diagram. As we have seen, this
contains two plots. One for the magnitude |G( jω)| and one for the phase ∠G( jω).
We could alternatively represent G( jω) fully in the complex plane, as shown in Figure 22.1.
Letting ω vary from 0 to ∞, as in the Bode Diagram, we obtain a curve for G( jω) in the
complex plane. What we are doing is mapping the positive imaginary axis s = jω to a curve
in the complex plane through the transfer function G(s), as shown in Figure 22.2.
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

388
Spacecraft Dynamics and Control: An Introduction
Re[s]
Im[s]
G(jω)
G(jω)
|G(jω)|
Figure 22.1
Representation of G( jω) in the complex plane
The advantage of this is that we can include all information (magnitude and phase) on
a single plot (and it can provide insight into system stability as we shall see shortly). The
disadvantage is that the contributions of individual factors in the transfer function G(s) cannot
be seen clearly (unlike the Bode Diagram).
Let us now look at the general shapes of polar plots. Consider the transfer function
G(s) = a0sm + a1sm−1 + . . . + am
sn + b1sn−1 + . . . + bn
,
(22.2)
with n > m. For simplicity, we restrict ai > 0 and b j > 0 for i = 1, ..., m and j = 1, ..., n.
22.1.1
Type 0 Systems (N = 0)
Let us ﬁrst consider type 0 systems. Recall from Section 17.9 that the type of a system is the
number of integrators, N in the transfer function. For a type 0 system, there are therefore no
integrators, which means that bn ̸= 0.
Re[s]
Im[s]
G(jω)
G(jω)
|G(jω)|
Re[s]
Im[s]
s = jω
G(jω)
Figure 22.2
Mapping of s = jω through G(s)

Relative Stability
389
Re[s]
Im[s]
Re[s]
Im[s]
n −m = 1
n −m = 2
n −m = 3
asymptotic behaviour as ω →∞
ω = 0
ω →∞
Figure 22.3
Polar plot for a type 0 system
Let us now consider the extreme behaviors of the polar plot of G( jω). Referring to (22.2),
we have
G( jω) = am
bn
, when ω = 0,
and for large ω, the highest powers of jω in the numerator and denominator dominate such
that we have
G( jω) ≈
a0
( jω)n−m →0, when ω →∞.
Since ∠a0/( jω)n−m is a multiple of -90◦, it must be that the polar plot approaches the origin
along one of the coordinate axes. Which axis depends on the relative degree, n −m of G(s),
as shown in Figure 22.3.
22.1.2
Type 1 Systems (N = 1)
For a type 1 system we have am ̸= 0, bn−1 ̸= 0 and bn = 0. Therefore, from (22.2), for very
small values of ω, the lowest powers of jω in the numerator and denominator dominate such
that
G( jω) ≈
am
bn−1 jω, when ω →0.
Therefore, we have
|G( jω)| →∞, ∠G( jω) →−90◦when ω →0.
As for type 0 systems, for large ω, the highest powers of jω in the numerator and denominator
dominate such that
G( jω) ≈
a0
( jω)n−m →0, when ω →∞.
Figure 22.4 shows a typical polar plot for a type 1 system.

390
Spacecraft Dynamics and Control: An Introduction
Re[s]
Im[s]
Re[s]
Im[s]
n −m = 1
n −m = 2
n −m = 3
asymptotic behaviour as ω →∞
ω →0+
ω →∞
Figure 22.4
Polar plot for a type 1 system
22.2
Nyquist Stability Criterion
We shall now see how the frequency response can be used to determine closed-loop stability.
It is best illustrated using the polar plot, and once that is understood, it can be related back to
the Bode Diagram.
Consider the general feedback system as shown in Figure 22.5. Note that G(s) may con-
tain the controller as well as the plant. As seen in Section 17.4, the closed-loop transfer
function is
T (s) = Y(s)
R(s) =
G(s)
1 + G(s)H(s).
(22.3)
As we have seen in Section 17.9, the open-loop transfer function is
Go(s) = G(s)H(s).
The closed-loop stability is determined by the poles of (22.3), and they are therefore the zeros
of the characteristic equation
1 + Go(s) = 0.
(22.4)
G(s)
Y (s)
H(s)
+
−
U(s)
Figure 22.5
General feedback system

Relative Stability
391
Therefore, we would like to know if the zeros of (22.4) lie in the open left-half plane. We do
not need to know their exact values. Now, in general, the open-loop transfer function can be
written as
Go(s) = a0sm + a1sm−1 + . . . + am
sn + b1sn−1 + . . . + bn
= a(s)
b(s),
where m ≤n. Therefore, we can write
1 + Go(s) = b(s) + a(s)
b(s)
.
As an aside, this shows that the poles of 1 + Go(s) are equal to the poles of the open-loop
transfer function Go(s).
Now, there is a very important result in complex analysis, which will allow us to relate the
frequency response of the open-loop transfer function Go(s) to the stability of the closed-loop
transfer function T (s). The result is called the argument principle.
22.2.1
Argument Principle
Let
F(s) = a0sm + a1sm−1 + . . . + am
sn + b1sn−1 + . . . bn
,
(22.5)
be some transfer function. Clearly, for every point s, except at the poles of F(s), there is a
corresponding point F(s) in the complex plane. That is, F(s) maps points in the complex
plane to points in the complex plane. Likewise, F(s) maps contours in the complex plane to
contours in the complex plane. For example, let
s(t) = c(t) + jy(t), t ∈[t1, t2],
where x(t) and y(t) are real continuous functions of t, be a contour in the complex plane.
Then, F(s(t)) is also a contour in the complex plane, as shown in Figure 22.6.
Theorem 22.1 (Argument Principle) Consider F(s) as in (22.5). Let s(t) be a simple (does
not intersect itself) closed clockwise contour in the complex plane that does not pass through
any zeros or poles of F(s). Let P be the number of poles of F(s) inside the contour, and Z be
the number of zeros of F(s) inside the contour. Then, the number of clockwise encirclements
of the origin by the curve F(s(t)) is given by
N = Z −P.
See Figure 22.7 for some examples.
Note: The exact shape of the contour s(t) does not matter, as long as it is simple, closed
and clockwise, and does not pass through any poles or zeros of F(s).

392
Spacecraft Dynamics and Control: An Introduction
Re[s]
Im[s]
Re[s]
Im[s]
F(s)
s(t)
F(s(t))
Figure 22.6
Mapping of s(t) through F(s)
22.2.2
Stability Analysis of the Closed-Loop System
We have already seen that the closed-loop poles of T (s) in (22.3) are given by the zeros of
1 + Go(s).
If T (s) is unstable, it must have poles in the right-half plane. That is, 1 + Go(s) must have
zeros in the right-half plane. From our knowledge of the open-loop transfer function Go(s),
we already know the number of poles of 1 + Go(s) in the right-half plane (this is equal to the
number of poles of Go(s) in the right-half plane). Let
P = number of poles of Go(s) in the right-half plane.
Re[s]
Im[s]
Re[s]
Im[s]
F(s)
s(t)
F(s(t))
N = −1 anticlockwise
1 pole inside
Re[s]
Im[s]
Re[s]
Im[s]
F(s)
s(t)
F(s(t))
N = 1 clockwise
1 zero inside
Re[s]
Im[s]
Re[s]
Im[s]
F(s)
s(t)
F(s(t))
N = 0
No poles or zeros inside
Re[s]
Im[s]
Re[s]
Im[s]
F(s)
s(t)
F(s(t))
N = 2 clockwise
2 zeros inside
Figure 22.7
Examples of argument principle

Relative Stability
393
Re[s]
Im[s]
s(t)
r →∞
ω →+∞
ω →−∞
Figure 22.8
Nyquist contour
We can now determine
Z = number of zeros of 1 + Go(s) in the right-half plane,
by using the argument principle. We do this by deﬁning the contour shown in Figure 22.8
(assuming 1 + Go(s) has no poles on the imaginary axis). This is called the Nyquist contour,
and it will contain any right-half plane zeros of 1 + Go(s).
Using the argument principle, the closed-loop system stability can be determined by the
number of clockwise encirclements N of the origin of the contour 1 + Go(s(t)), that is,
Z = N + P,
where P is known from Go(s), and N is determined from the mapping of the Nyquist contour.
Now, we note that the contour 1 + Go(s(t)) is just the contour of Go(s(t)) shifted to the right
by 1. Therefore, encirclements of the origin by 1 + Go(s(t)) is equivalent to encirclements of
−1 by Go(s(t)), which is the contour of the open-loop system, as shown in Figure 22.9. The
mapping of the Nyquist contour through the open-loop transfer function is called the Nyquist
plot.
The Nyquist contour can be divided into three parts:
s1(ω) = jω,
ω : 0 →∞,
s2(θ) = re jθ, θ : π
2 →−π
2 , r →∞,
s3(ω) = −jω, ω : ∞→0.
Re[s]
Im[s]
−1
Go(s(t))
Go(s(t)) + 1
Figure 22.9
Shift of open-loop Nyquist plot

394
Spacecraft Dynamics and Control: An Introduction
Re[s]
Im[s]
s2 = rejθ
s1 = jω
s3 = −jω
Re[s]
Im[s]
Go(s1 = jω)
Go(s3 = −jω)
Go(s2)
Go(s)
Figure 22.10
Nyquist plot with no open-loop poles on the imaginary axis
Let the open-loop transfer function be given by
Go(s) = a0sm + a1sm−1 + . . . + am
sn + b1sn−1 + . . . bn
, m ≤n.
Then, the Nyquist plot can also be divided into three parts
Go(s1) = Go( jω), the open-loop frequency response, as illustrated in Figure 22.10,
Go(s2) =
 0, m < n,
a0, m = n.
Go(s3) = Go(−jω) = G( jω), the mirror image of the open-loop frequency response.
Since Go(s2) = constant, we only need to plot the contours Go( jω) and Go(−jω) to determine
encirclements of -1. Based on the Nyquist plot of the open-loop transfer function, we can now
apply the argument principle to determine stability of the closed-loop system. The result is
called the Nyquist Stability Criterion.
Nyquist Stability Criterion
Let the open-loop transfer function Go(s) have no poles on the imaginary axis. Let
N cw
−1
= number of clockwise encirclements of –1 of Go( jω) as ω : −∞→∞,
P+
Go
= number of right-half plane poles of Go(s),
Z+
1+Go = number of right-half plane zeros of 1 + Go(s).
Then,
Z+
1+Go = N cw
−1 + P+
Go.
(22.6)

Relative Stability
395
Re[s]
Im[s]
Go(jω)
−1
2 encirclements
Re[s]
Im[s]
Go(jω)
−1
No encirclements
Figure 22.11
Determining number of encirclements from the frequency response
Since Z+
1+Go is also the number of unstable closed-loop poles, the condition for stability is
Z+
1+Go = 0, for stability.
(22.7)
Note that since Go(−jω) is the mirror image of Go( jω), we only need to plot the frequency
response Go( jω) for ω : 0 →∞to obtain enough information to determine encirclements
of -1, and hence closed-loop stability. That is, all we need to determine closed-loop stability
is the open-loop frequency response (which can also be presented in the Bode Diagram), as
shown in Figure 22.11.
Modiﬁcation for Open-Loop Poles on the Imaginary Axis
If the open-loop transfer function Go(s) has poles on the imaginary axis, we must modify the
Nyquist contour to pass around them, as shown in Figure 22.12.
Re[s]
Im[s]
s = rejθ
s = jω
s = −jω
s =
jθ
Figure 22.12
Modiﬁed Nyquist contour with an open-loop pole at the origin

396
Spacecraft Dynamics and Control: An Introduction
That is, if jp is a pole of Go(s), then we modify the Nyquist contour around s = jp to be
jp + ϵe jθ, where we let ϵ →0, and θ : −π
2 →π
2 . Note that when ω →p, |G( jω)| →∞.
Therefore, the Nyquist mapping Go( jp + ϵe jθ) will make an arc about the complex plane at
inﬁnity as ϵ →0. We must account for any possible encirclements of −1 by this arc. Having
accounted for this, the Nyquist stability criterion remains the same, namely
Z+
1+Go = N cw
−1 + P+
Go,
(22.8)
with
Z+
1+Go = 0, for stability.
(22.9)
Example 22.1
(PID spacecraft attitude control) Let us now apply the Nyquist stability
criterion to the PID controller design for spacecraft attitude control in Section 20.2, where
the plant is given by
G p(s) =
1
Is2 ,
and the controller is
Gc(s) = K p + Kds + Ki
s .
In Section 20.2, we have taken the spacecraft inertia to be I = 1 kg·m2. The PID control gains
were designed as
K p = 0.0179, Kd = 0.1753, Ki = 4.59 × 10−4.
We ﬁnd that the open-loop transfer function is given by
Go(s) = Kds2 + K ps + Ki
s3
.
(22.10)
The open-loop transfer function has a triple pole at the origin. Therefore, the Nyquist contour
must pass around it, as shown in Figure 22.13.
The Nyquist contour is therefore made up of four parts
s1(ω) = jω,
ω : ϵ →r,
s2(θ) = re jθ, θ : π
2 →−π
2 ,
s3(ω) = −jω, ω : r →ϵ,
s4(θ) = ϵe jθ, θ : −π
2 →π
2 .
To ensure that the Nyquist contour encircles the entire right-half plane, we let ϵ →0 and
r →∞. We have Go(s2) →0 as r →∞. Since Go(s3) is the mirror image of Go(s1), we need
only examine Go(s1) and Go(s4) to determine the entire Nyquist plot. Let us start with Go(s1).

Relative Stability
397
Re[s]
Im[s]
s2
s1
s3
s4
Figure 22.13
Nyquist contour for PID spacecraft attitude control example
When ω = ϵ, for very small ϵ, lowest powers of jω in the numerator and denominator
dominate such that
Go( jω) ≈
Ki
( jϵ)3 =
Ki
−jϵ3 .
Therefore, we have
|Go( jω)| →∞, ∠Go( jω) →−270◦, as ω = ϵ →0+.
That is, the frequency response Go( jω) comes in from inﬁnity parallel to the positive imaginary
axis.
When ω = r, for very large r, highest powers of jω in the numerator and denominator
dominate such that
Go( jω) ≈Kd
( jr).
Therefore, we have
|Go( jω)| →0, ∠Go( jω) →−90◦, as ω = r →∞.
That is, the frequency response Go( jω) approaches the origin along the negative imaginary
axis. This means that the frequency response must cross the real axis at some point. Consider
Go( jω) = Kd( jω)2 + K p( jω) + Ki
( jω)3
= (Ki −Kdω2) + j K pω
−jω3
.
(22.11)
We see that since the denominator is purely imaginary, Go( jω) can only be real if the numerator
is also purely imaginary. That means that at the real axis crossing occurs at the frequency
satisfying,
Ki −Kdω2 = 0.

398
Spacecraft Dynamics and Control: An Introduction
Re[s]
Im[s]
−6.85
−1
Go(jω)
Go(−jω)
Go(s2)
Figure 22.14
Frequency response of Go( jω) and its mirror image
That is, when the frequency is
ω =

Ki
Kd
,
the frequency response Go( jω) crosses the real axis. Substituting this into (22.11), we ﬁnd
that the real axis crossing occurs at
Go( j

Ki
Kd
) = −K pKd
Ki
= −6.85.
It is also clear from (22.11) that Go( jω) does not cross the imaginary axis. We can now sketch
the frequency response Go( jω) and its mirror image Go(−jω), as shown in Figure 22.14.
The ﬁnal part needed to complete the Nyquist plot is Go(s4). When s = ϵe jθ for very small
ϵ, lowest powers of s dominate such that
Go(s) ≈
Ki
(ϵe jθ)3 = Kie−3 jθ
ϵ3
.
Therefore, for s4 = ϵe jθ, with θ : −π
2 →π
2 , we have
|Go(s4)| →∞, as ϵ →0+ and ∠Go(s4) : 3π
2 →−3π
2 .
That is, Go(s4) encircles the entire right-half plane one and a half times, starting at the end of
Go(−jω) and ﬁnishing at the beginning of Go( jω), as shown in Figure 22.15.
We can now see from the Nyquist plot in Figure 22.15 that there is one clockwise encirclement
of −1 and one counterclockwise encirclement of −1. Therefore, we have
N cw
−1 = 1 −1 = 0.

Relative Stability
399
Re[s]
Im[s]
−6.85
−1
Go(s4)
Figure 22.15
Complete Nyquist plot for PID spacecraft attitude control example
From the open-loop transfer function (22.10), we know that there are no open-loop right-half
plane poles, so
P+
Go = 0.
Therefore, we ﬁnd that the number of closed-loop right-half plane poles is
Z+
1+Go = N cw
−1 + P+
Go = 0,
and the closed-loop system is stable.
22.3
Stability Margins
As explained at the beginning of this chapter, the mathematical models we use for designing
a control system are never perfect. It is therefore very important that the control system we
design is robustly stable given uncertainties in the mathematical model of the system. To ﬁx
ideas, let the plant model we use for the design of a control system be given by
Y(s)
U(s) = G p(s),
while the true plant has transfer function
Y(s)
U(s) = ¯G p(s) = G p(s)Gu(s),

400
Spacecraft Dynamics and Control: An Introduction
Gc(s)
Y (s)
+
−
U(s)
Gp(s)
R(s)
Figure 22.16
Ideal closed-loop system
where Gu(s) is a transfer function representing the uncertainty. Let us assume that we have
designed a controller
U(s) = Gc(s)E(s),
which asymptotically stabilizes the modeled plant G p(s) as shown in Figure 22.16. When the
controller is applied to the true system, the closed-loop system is as shown in Figure 22.17.
Comparing Figures 22.16 and 22.17, we see that the ideal open-loop transfer function (the one
we designed) is
Go(s) = Gc(s)G p(s),
while the true open-loop transfer function is
¯Go(s) = Go(s)Gu(s).
Therefore, the designed closed-loop poles satisfy the characteristic equation
1 + Go(s) = 0,
while the true closed-loop poles satisfy
1 + Go(s)Gu(s) = 0.
We therefore need to design our closed-loop system with some stability margin such that the
real closed-loop system will still be stable.
Gc(s)
Y (s)
+
−
U(s)
Gp(s)
R(s)
Gu(s)
Figure 22.17
True closed-loop system

Relative Stability
401
Modiﬁed Implementation
As explained in Sections 17.7.1 and 20.2, there are occasions where it is desirable to divide
the control law into two parts
Gc(s) = Gce(s) + Gcy(s),
and then implement the control law with the modiﬁed form shown in Figure 22.18. It is readily
found that the closed-loop characteristic equations for the standard and modiﬁed implemen-
tations (Figures 22.17 and 22.18, respectively) are identical. Therefore, for the purposes of a
closed-loop robustness analysis, we need only consider the standard implementation shown in
Figure 22.17.
22.3.1
Stability Margin Deﬁnitions
We shall assume that we have designed a control system Gc(s) which renders the ideal closed-
loop system (in Figure 22.16) asymptotically stable.
As we have just seen in Section 22.2.2, the Nyquist stability criterion tells us this means that
the Nyquist plot of the ideal open-loop system (Go(s)) has the required number of clockwise
encirclements of −1, given by
N cw
−1 = −P+
Go,
where P+
Go is the number of open-loop poles in the right-half plane. We shall assume that
Gu(s) has no right-half plane poles (if it does, we have done a poor job of modeling the plant).
Therefore, for robust stability, the Nyquist plot of the real open-loop system (Go(s)Gu(s))
must also have the same number of clockwise encirclements of −1 as the Nyquist plot of the
ideal open-loop system Go(s).
As we saw in Chapter 21, the effect of multiplying one transfer function by another is to add
gain and phase to the frequency response. That is, Gu(s) adds gain and phase to the open-loop
transfer function Go(s). We can therefore deﬁne stability margins on the basis of how much
pure gain or phase can be added to the open-loop transfer function by Gu(s) before the real
closed-loop system (in Figure 22.17) becomes unstable.
R(s)
E(s)
+
−
U(s)
Gce(s)
Gp(s)
Y (s)
+
Gcy(s)
−
Gu(s)
Figure 22.18
True closed-loop system with modiﬁed control implementation

402
Spacecraft Dynamics and Control: An Introduction
Re[s]
Im[s]
Go(jω)
increasing k
Figure 22.19
Effect of changing gain on the Nyquist plot
22.3.1.1
Gain Margin
To deﬁne the gain margin, we let the uncertainty in Figure 22.17 be a constant gain
Gu(s) = k > 0.
The gain margin is then deﬁned by the range k over which the real closed-loop system is
asymptotically stable. To determine this, we need to examine the Nyquist plot of the ideal
open-loop system Go(s). First, we note that the effect of the gain k is simply to scale the
Nyquist plot, as shown in Figure 22.19. That is, only the magnitude changes, but the phase
stays the same
|kGo( jω)| = k|Go( jω)|, ∠(kGo( jω)) = ∠(Go( jω)) .
Since the ideal closed-loop system is asymptotically stable (by design), we determine the
gain margin by varying k from the ideal value (k = 1 for the ideal closed-loop system) until
the number of encirclements of −1 changes. We may be able to do this both by increasing
and/or decreasing k. To do this, we determine all frequencies, ωp at which
∠Go( jωp) = −180◦+ 360◦(l −1),
for some integer l. That is, we determine all frequencies at which the Nyquist plot crosses the
negative real axis, as shown in Figure 22.20. These frequencies are called phase cross-over
frequencies.
Re[s]
Im[s]
Go(jω)
phase cross-over points
Figure 22.20
Phase cross-over points

Relative Stability
403
Re[s]
Im[s]
Go(jω)
−1
Go(jωp,l)
Go(jωp,u)
Figure 22.21
Upper and lower phase cross-over points
We then choose the two phase cross-over frequencies for which Go( jωp) are immediately
to the left right of −1, respectively. Let us call these frequencies ωp,l and ωp,u respectively, as
shown in Figure 22.21.
Clearly, the upper and lower limits on the range of k for closed-loop stability are
kl =
1
|Go( jωp,l)| and ku =
1
|Go( jωp,u)|,
respectively. To see why, note that as we decrease k, the negative-real axis cross-over point of
the Nyquist plot immediately to the left of −1 moves to the right until k = kl, at which point
klGo( jωp,l) =
1
|Go( jωp,l)|Go( jωp,l) = −1,
which indicates a change in the number of encirclements of −1. Similarly increasing k results
in the negative-real axis cross-over point of the Nyquist plot immediately to the right of −1
moving to the left until k = ku, at which point
kuGo( jωp,u) =
1
|Go( jωp,u)|Go( jωp,u) = −1,
indicating a change in the number of encirclements of −1. We call ku and kl upper and lower
gain margins, respectively. It is common practice to express these gain margins in decibels as
GMp = 20 log ku = −20 log |Go( jωp,u)|,
and
GMn = 20 log kl = −20 log |Go( jωp,l)|,
respectively. Note that GMp > 0 (since |Go( jωp,u)| < 1) and is therefore called the positive
gain margin. Likewise, GMn < 0 (since |Go( jωp,l)| > 1) and is called the negative gain
margin.

404
Spacecraft Dynamics and Control: An Introduction
Go(jω)
20 log |Go(jω)|
0 dB
−180o
GMn
GMp
ω
ω
ωp,l
ωp,u
Figure 22.22
Gain margins from Bode plot
It is very useful to note that positive and negative gain margins can also be found from
the Bode plot, as shown in Figure 22.22. As illustrated, we identify the phase cross-over
frequencies from the phase frequency response plot. The gain margins are then obtained from
the log-magnitude frequency response plot as shown.
22.3.1.2
Phase Margin
We can also change the number of encirclements of −1 by rotating the polar plot of Go(s), as
shown in Figure 22.23.
This happens when pure phase is added to the open-loop transfer function. The phase margin
then gives how much phase may be added or removed from the open-loop system before it
becomes unstable.
Re[s]
Im[s]
rotate polar plot
−1
Figure 22.23
Rotation of polar plot

Relative Stability
405
Delay
T
u(t)
y(t) = u(t −T)
Figure 22.24
Unit delay
A very important case when this occurs is the presence of delays in the feedback control
system. Up to now, everything we have formulated assumes that the process between sensor
measurements to the execution of control commands occurs instantaneously. In reality, there is
some delay in the communication of the measurements to the control system, some delay due
to the computation, and delay in communication with the actuators to execute the command.
This results in some additional phase lag in the frequency response, and has a destabilizing
effect on the closed-loop system. It is therefore very important to build in some phase margin
to accommodate delays in the feedback loop (as well as other uncertainties).
Let us now look at the transfer function for a unit delay of time T , represented in block
diagram form in Figure 22.24.
We have
y(t) = u(t −T ).
The Laplace transform of y(t) is by deﬁnition
Y(s) = L(y(t))
 ∞
0
y(t)e−stdt =
 ∞
0
u(t −T )e−stdt.
Making the change of variables τ = t −T , this becomes
Y(s) =
 ∞
−T
u(τ)e−s(τ+T )dt = e−sT
 ∞
−T
u(τ)e−sτdt.
In the deﬁnition of the one-sided Laplace transform (which we are using), it is assumed that all
functions are zero for t < 0. In particular, it is assumed that u(t) = 0 when t < 0. Therefore,
we have
Y(s) = e−sT
 ∞
0
u(τ)e−sτdt = e−sT L(u(t)) = e−sTU(s).
So, we have the transfer function for a unit delay
Y(s)
U(s) = e−sT .
We note that when s = jω, the unit delay has gain
e−jωT  = 1,

406
Spacecraft Dynamics and Control: An Introduction
−1
Re[s]
Im[s]
circle of radius 1
Go(jω)
gain cross-over points
Figure 22.25
Gain cross-over points
and phase
∠e−jωT = −ωT.
Therefore, we see that the unit delay only adds phase lag to the open-loop transfer function,
but no gain. To deﬁne the phase margin, we must examine points on the frequency response
that cross the circle of radius 1, centered at the origin. These points are called gain cross-over
points, as shown in Figure 22.25.
Adding or removing pure phase rotates the gain cross-over points about the circle. By
adding or removing enough pure phase, these points will cross −1, and change the number of
encirclements of −1.
We therefore determine all frequencies ωg corresponding to the gain cross-over points. That
is, all frequencies for which
|Go( jωg)| = 1.
These frequencies are called gain cross-over frequencies. We then choose the two gain cross-
over frequencies for which Go( jωg) are immediately below and above −1, respectively. Let
us call these frequencies ωg,u and ωg,l respectively, as shown in Figure 22.26.
The phase margins are then deﬁned as how much phase lag (negative phase) can be added
to the open-loop system without making it unstable. Clearly, as shown in the diagram in
Figure 22.26, the upper and lower limits are PMp and PMn, and depend on ∠Go( jωg,u) and
∠Go( jωg,l) respectively. Note that PMp is given as a positive angle while PMn is given as
a negative angle (they are measured positive counter-clockwise from the negative real axis).
Accordingly, PMp is called the positive phase margin and speciﬁes how much phase lag
can be added to the open-loop system, while PMn is called the negative phase margin and
speciﬁes how much phase lag can be removed from the open-loop system. Note that since a
unit delay adds phase lag to the open-loop system (of amount ωT at each frequency), we can

Relative Stability
407
−1
Re[s]
Im[s]
circle of radius 1
Go(jωg,u)
Go(jωg,l)
PMn
PMp
Figure 22.26
Phase margins from Nyquist plot
use the positive phase margin to specify the allowable delay in the feedback loop. Speciﬁcally,
for closed-loop stability, the unit delay must satisfy
T < PMp
ωg,u
.
Since the unit delay adds increasing phase lag with increasing frequency, we must check
this condition at every gain cross-over frequency.
As for the gain margin, we can also obtain the phase margins from the Bode plots of the
frequency response, as shown in Figure 22.27. As shown, we identify the gain cross-over
Go(jω)
20 log |Go(jω)|
0 dB
−180o
ω
ω
PMp
PMn
ωg,u
ωg,l
Figure 22.27
Phase margins from Bode plot

408
Spacecraft Dynamics and Control: An Introduction
Im[s]
Re[s]
−1
Go(jω)
Go(−jω)
gain cross-over point
phase cross-over point
−6.85
Figure 22.28
Nyquist plot for PID spacecraft attitude control example
frequencies from the log-magnitude frequency response plot. The phase margins are then
determined from the phase frequency response plots, as shown.
Example 22.2
(PID spacecraft attitude control) Let us now return to the PID controller
design for spacecraft attitude control from Example 22.1. We have seen the Nyquist plot of
the open-loop transfer function in Figure 22.15. Let us now determine the associated stability
margins.
Gain Margins
From the Nyquist plot (reproduced in Figure 22.28), we see that there is one phase cross-
over frequency (negative real axis crossing). We already found the phase cross-over fre-
quency, ωp,l = √Ki/Kd = 0.0512 rad/s. The corresponding negative real axis crossing is
Go( jωp,l) = −6.85, which occurs to the left of −1. Note that there is no crossing of the neg-
ative real axis between −1 and 0. Therefore, there is no increase in open-loop gain that will
result in a change in encirclements of −1 by the Nyquist plot (which means that the closed-loop
system remains stable for any increase in open-loop gain). The upper and lower gain margins
are then
ku = ∞, kl =
1
|Go( jωp,l)| = 0.146.
In terms of log magnitude, we have positive and negative gain margins
GMp = 20 log ku = ∞, GMn = 20 log kl = −16.7dB.

Relative Stability
409
Bode Diagram
Frequency  (rad/sec)
−50
0
50
100
150
System: sys
Gain Margin (dB): −16.7
At frequency (rad/sec): 0.0512
Closed Loop Stable? Yes
Magnitude (dB)
10
−3
10
−2
10
−1
10
0
10
1
−270
−225
−180
−135
−90
System: sys
Phase Margin (deg): 59.6
Delay Margin (sec): 5.52
At frequency (rad/sec): 0.188
Closed Loop Stable? Yes
Phase (deg)
Figure 22.29
Bode plot for Go( jω) for PID spacecraft attitude control example
The Bode plot for the open-loop transfer function is shown in Figure 22.29. It can be seen that
the gain margins can be determined from the Bode plot also.
Phase Margins
From the Nyquist diagram in Figure 22.28, we see that there is one gain cross-over frequency,
and this will lead to a positive phase margin. Rather than computing the gain cross-over
frequency and then the phase, we can determine it graphically from the Bode diagram in
Figure 22.29. As shown in the diagram, the gain cross-over frequency is ωg,u = 0.188 rad/s.
The positive phase margin is
PMp = 59.6◦.
From the Nyquist diagram, we see that we can also change the number of encirclements of
−1 by rotating the gain cross-over point by 360◦−59.6◦= 300.4◦in the counterclockwise
direction. This corresponds to a 300.4◦phase advance at the gain cross-over frequency.
Therefore, the negative phase margin is
PMn = −300.4◦.

410
Spacecraft Dynamics and Control: An Introduction
Time Delay Margin
Given the positive phase margin and associated gain cross-over frequency, the total delay in
the feedback loop T must satisfy
T < PMp
ωg,u
= 59.6
0.188 · π
180 = 5.52 seconds.
Notes
This chapter has presented the Nyquist plot, and the related Nyquist stability criterion. Based
on the Nyquist stability criterion, we have then deﬁned stability margins which indicate how
close a stable system is to becoming unstable. The Nyquist stability criterion was then applied
to a PID spacecraft attitude control example, and stability margins were determined. For
further examples of the application of the Nyquist stability criterion and the determination
of stability margins, the reader is referred to any of the excellent books on classical control
systems, including Franklin et al. (2010) and Ogata (2010).
References
Franklin GF, Powell JD and Emami-Naeini A 2010 Feedback Control of Dynamic Systems 6th edn. Prentice Hall,
Upper Saddle River, NJ.
Ogata K 2010 Modern Control Engineering 5th edn. Prentice Hall, Upper Saddle River, NJ.

23
Control Design in the
Frequency Domain
In Chapter 17, we have examined speciﬁcations on the closed-loop performance, namely on the
transient response and the steady-state error. It was shown how the transient speciﬁcations place
constraints on the closed-loop poles, while the steady-state speciﬁcations place constraints on
the open-loop and controller transfer functions when evaluated at s = 0 (namely Go(0) and
Gc(0)). This then lead to a control design procedure in Chapter 20 using the root locus to
obtain appropriate closed-loop poles.
As we have seen in Chapters 21 and 22, there are other important factors (in addition
to the closed-loop performance) for a successful control system design, namely robustness
to modeling uncertainty (leading to speciﬁcations on stability margins), and attenuation of
measurement noise. These factors are best dealt with in the frequency domain. It turns out that
the closed-loop performance can also be dealt with in the frequency domain. As such, it is
possible to perform the design of a control system exclusively in the frequency domain, based
on the open-loop frequency response.
Another beneﬁt of performing control system design in the frequency domain is that unlike
in the root locus-based method, an analytical model of the plant is not necessary. All that is
required is the open-loop frequency response, which could be obtained experimentally. This
is particularly useful when an analytical model for the plant (or parts of it) is not available. For
example, for spacecraft attitude control, suppliers may not provide detailed analytical models
for the actuators.
Let us now see how the open-loop frequency response provides information on the closed-
loop transient behavior in the time-domain. This will be illustrated in the following example.
Example 23.1 (PD Spacecraft Attitude Control) In Section 17.7.1, we derived expressions
for rise-time, settling-time and percentage overshoot for PD spacecraft attitude control, imple-
mented in the modiﬁed form shown in Figure 23.1(a). As explained in Section 22.3, for the
purpose of evaluation of stability margins, the open-loop frequency response corresponding
to the related standard control implementation shown in Figure 23.1(b) should be considered.
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

412
Spacecraft Dynamics and Control: An Introduction
R(s) +
−
Kp
Y (s)
+
−
Kds
1
Is2
R(s) +
−
Kp + sKd
Y (s)
1
Is2
(a) Modiﬁed Implementation
(b) Standard Implementation
Figure 23.1
Modiﬁed and standard PD spacecraft attitude control
Let us now proceed by ﬁrst obtaining the open-loop transfer function corresponding to Fig-
ure 23.1(b), which we ﬁnd to be
Go(s) = K p + Kds
Is2
.
(23.1)
As in Section 17.7.1, we deﬁne
ω2
n = K p
I ,
2ζωn = Kd
I ,
where ωn is the undamped natural frequency and ζ is the damping ratio. Accordingly, the
open-loop transfer function in (23.1) becomes
Go(s) = 2ζωns + ω2
n
s2
.
(23.2)
Let us now determine the open-loop frequency response. Setting s = jω in (23.2), we obtain
Go( jω) = 2ζωn jω + ω2
n
−ω2
= −
ωn
ω
2
−j2ζ
ωn
ω

.
(23.3)
The open-loop gain frequency response is obtained from (23.3) as
|Go( jω)| =
ωn
ω
4
+ 4ζ 2 ωn
ω
2 1
2
,
(23.4)

Control Design in the Frequency Domain
413
while the open-loop phase frequency response is found to be
∠Go( jω) = ∠

2ζωn jω + ω2
n

∠

−ω2
,
= ∠

2ζωn jω + ω2
n

−180◦,
= tan−1
2ζω
ωn

−180◦.
(23.5)
Since the frequency ω is positive, (23.5) shows that the phase frequency response lies in the
range
−180◦< ∠Go( jω) < −90◦.
(23.6)
We now determine an expression for the phase margin. First, we need to ﬁnd all gain cross-over
frequencies, ωg. We set
|Go( jωg)| = 1.
(23.7)
Substituting (23.4) into (23.7) and squaring, we obtain
ωn
ωg
4
+ 4ζ 2
ωn
ωg
2
= 1.
(23.8)
Setting q =

ωn/ωg
2, we ﬁnd that (23.8) becomes a quadratic in q,
q2 + 4ζ 2q −1 = 0,
(23.9)
which has solution
q = −2ζ 2 ±

4ζ 4 + 1.
(23.10)
Since we seek positive real solutions for ωg, only the positive solution in (23.10) is valid, and
using the deﬁnition of q, we ﬁnd that there is only one gain cross-over frequency, which is
given by
ωg =
ωn

4ζ 4 + 1 −2ζ 2
 1
2 .
(23.11)
From the phase frequency response range (23.6), it is clear that the associated phase margin
is positive, and is given by
PMp = 180◦+ ∠Go( jωg).
(23.12)

414
Spacecraft Dynamics and Control: An Introduction
0
0.2
0.4
0.6
0.8
1
0
10
20
30
40
50
60
70
80
Positive Phase Margin vs. Damping Ratio
Damping ratio, ζ
PMp (deg)
Figure 23.2
Relationship between phase margin and damping ratio
Substituting (23.11) and (23.5) into (23.12), we obtain the positive phase margin
PMp = tan−1
⎛
⎜⎝
2ζ

4ζ 4 + 1 −2ζ 2
 1
2
⎞
⎟⎠.
(23.13)
From (23.13), it is seen that the positive phase margin depends purely on the damping ratio,
ζ. The relationship in Equation (23.12) is shown graphically in Figure 23.2.
Recall from Section 17.1.1, that for an underdamped pair of closed-loop poles (with damping
ratio 0 < ζ < 1), the maximum overshoot, is given by
Mp = e−πζ/√
1−ζ 2 × 100%,
(23.14)
which also depends exclusively on the damping ratio. As a consequence, maximum overshoot
is directly related to the phase margin, and Equations (23.13) and (23.14) may be combined to
obtain this relationship as shown in Figure 23.3. Therefore, using Figure 23.3, a closed-loop
time-domain speciﬁcation on the maximum overshoot may be recast as an open-loop frequency
response speciﬁcation on the phase margin.
Suppose now that the phase margin has been speciﬁed. As a consequence the damping ratio
is given. We shall assume that the damping ratio lies in the range 0 < ζ < 1 (underdamped).
Now consider rise-time and settling time constraints,
tr ≤¯tr,
ts ≤¯ts.
(23.15)

Control Design in the Frequency Domain
415
0
10
20
30
40
50
60
70
80
0
10
20
30
40
50
60
70
80
90
100
Maximum Overshoot vs. Positive Phase Margin
Maximum Overshoot (%)
PMp (deg)
Figure 23.3
Relationship between phase margin and maximum overshoot
Recall the expression for rise-time from Section 17.7.1,
tr =
π −β
ωn

1 −ζ 2 ,
(23.16)
where
β = tan−1

1 −ζ 2
ζ

.
Since the damping ratio is given, we can rewrite the rise-time constraint in (23.15) as a
constraint on the undamped natural frequency, ωn as follows
ωn ≥
π −β
¯tr

1 −ζ 2 .
(23.17)
Now, from (23.11), we see that we can transform the constraint on ωn in (23.17) into a
constraint on gain cross-over frequency,
ωg ≥
π −β
¯tr

1 −ζ 2 
4ζ 4 + 1 −2ζ 2
.
(23.18)

416
Spacecraft Dynamics and Control: An Introduction
Likewise, recall the expression for the settling time
ts =
−ln

0.02

1 −ζ 2

ζωn
.
(23.19)
Again, since ζ is given, the settling time constraint in (23.15) may be transformed into a
constraint on ωn,
ωn ≥
−ln

0.02

1 −ζ 2

ζ ¯ts
.
(23.20)
As for (23.17), using (23.11) the constraint on ωn in (23.20) may also be transformed into a
constraint on the gain cross-over frequency,
ωg ≥
−ln

0.02

1 −ζ 2

ζ ¯ts

4ζ 4 + 1 −2ζ 2
 1
2 .
(23.21)
Therefore, we have seen that if the phase margin is given, speciﬁcations on the speed of
closed-loop response, namely the rise-time and settling time may be recast as speciﬁcations
on the gain cross-over frequency.
Example 23.1 has shown that the transient behavior of the closed-loop response is affected
by the cross-over region of the open-loop frequency response. For the PD spacecraft attitude
control given in Example 23.1, we were able to derive exact correspondences between the
closed-loop transient characteristics and the open-loop frequency response. For more complex
systems, we generally cannot ﬁnd such exact correspondences. However, assuming that the
control system design will result in a complex-conjugate pair of dominant poles (see Sec-
tion 17.8.2), we can use the expressions obtained for the second-order system in Example 23.1
as guidelines to place speciﬁcations on the cross-over region of the open-loop frequency
response of more complex systems. Generally speaking, the phase margin affects the closed-
loop system damping (and hence overshoot), while the gain cross-over frequency affects the
closed-loop system speed of response (and hence rise-time and settling time).
23.1
Feedback Control Problem - Revisited
Let us now revisit the standard feedback control problem introduced in Section 17.5, which
is reproduced in Figure 23.4. As we have seen, the combined closed-loop response to the
reference input R(s), the external disturbance ˆTd(s) and the measurement noise W(s), is
given by
Y(s) =
Go(s)
1 + Go(s) R(s) +
G p(s)
1 + Go(s)
ˆTd(s) −
Go(s)
1 + Go(s)W(s),
(23.22)

Control Design in the Frequency Domain
417
R(s) +
−
+
+
W(s)
U(s)
ˆTd(s)
Gc(s)
Gp(s)
Y (s)
+
+
Figure 23.4
Standard feedback control system
where Go(s) = G p(s)Gc(s) is the open-loop transfer function. The combined closed-loop
response of the error E(s) = R(s) −Y(s) is then readily found to be
E(s) = Er(s) + Ed(s) + Ew(s),
(23.23)
where
Er(s) =
1
1 + Go(s) R(s),
Ed(s) = −
G p(s)
1 + Go(s)
ˆTd(s), and Ew(s) =
Go(s)
1 + Go(s)W(s),
(23.24)
are the closed-loop error in response to the reference input, external disturbance and measure-
ment noise, respectively. Also of interest is the closed-loop control effort, which is readily
found to be
U(s) = Ur(s) + Ud(s) + Uw(s),
(23.25)
where
Ur(s) =
Gc(s)
1 + Go(s) R(s),
Ud(s) = −
Go(s)
1 + Go(s)
ˆTd(s), and Uw(s) = −
Gc(s)
1 + Go(s)W(s),
(23.26)
are the closed-loop control effort in response to the reference input, external disturbance and
measurement noise, respectively.
23.1.1
Closed-Loop Tracking Error
Let us ﬁrst examine the closed-loop error. As explained in Section 17.5, ideally we would have
Er(s) = Ed(s) = Ew(s) = 0, since this represents perfect tracking. However, as demonstrated
in Section 17.5, this is not possible. Fortunately, the typical reference signals to be tracked and

418
Spacecraft Dynamics and Control: An Introduction
external disturbances to be rejected vary relatively slowly with time. That is, they have low
frequency content. For example, a step input can be thought of as a signal with zero frequency.
On the other hand, measurement noise typically varies rapidly with time. That is, it has high
frequency content. As such, we only need to consider Er(s) and Ed(s) over low frequencies
to ensure good reference signal tracking and disturbance rejection, while Ew(s) only needs
to be considered over high frequencies to ensure good measurement noise attenuation. Let us
consider all three separately.
23.1.1.1
Reference Signal Tracking
From equation (23.24), we see that
|Er( jω)| =

1
1 + Go( jω)
 |R( jω)|.
Therefore, for good reference signal tracking, we should have

1
1 + Go( jω)
 ≪1,
over the appropriate (low) frequency range. To accomplish this, we should have
|Go( jω)| ≫1.
That is, the open-loop gain should be large over low frequencies.
Note that this is entirely compatible with the requirement to keep the steady-state error to a
step response (which can be thought of as a signal with zero frequency) be small. Indeed, with
R(s) = 1/s, applying the ﬁnal value theorem (see Appendix A.3), we ﬁnd that the steady-state
error due to a step response is
er,ss = lim
t→∞er(t) = lim
s→0 sEr(s) = lim
s→0
1
1 + Go(s).
This shows that |Go(0)| ≫1 for small steady-state error to a step input.
23.1.1.2
Disturbance Rejection
From equation (23.24), we see that
|Ed( jω)| =

G p( jω)
1 + Go( jω)
 | ˆTd( jω)|.
Therefore, for good external disturbance rejection, we should have

G p( jω)
1 + Go( jω)
 | ˆTd( jω)| ≪1,

Control Design in the Frequency Domain
419
over the appropriate (low) frequency range. Assuming that we already have |Go( jω)| ≫1
over the desired frequency range to ensure good reference signal tracking, we ﬁnd that

G p( jω)
1 + Go( jω)
 ≈|G p( jω)|
|Go( jω)| =
1
|Gc( jω)|.
Therefore, we can make the error due to an external disturbance small by making |Gc( jω)|
large enough over the appropriate frequency range.
Note that this is entirely compatible with the steady-state error analysis due to a constant
external disturbance in Section 17.10, which placed constraints on Kc = Gc(0).
23.1.1.3
Measurement Noise Attenuation
From equation (23.24), we see that
|Ew( jω)| =

Go( jω)
1 + Go( jω)
 |W( jω)|.
Therefore, for good measurement noise attenuation, we should have

Go( jω)
1 + Go( jω)
 ≪1,
over the appropriate (high) frequency range. To accomplish this, we should have
|Go( jω)| ≪1.
That is, the open-loop gain should be very small over high frequencies.
23.1.2
Closed-Loop Control Effort
Let us now look at the closed-loop control effort. As noted in Section 17.11, any real actuator
has limitations in the amount of control effort that can be applied. Therefore, the control law
should be designed so as to avoid the control signal from becoming too large.
We have seen that for good reference signal tracking and disturbance rejection, the open-loop
gain should be large (|Go( jω)| ≫1) for low frequencies, while for good measurement noise
attenuation, the open-loop gain should be very small (|Go( jω)| ≪1) for high frequencies. Let
us look at some of the implications on the closed-loop control effort.
23.1.2.1
Large Open-Loop Gain
The reference signal and external disturbance typically have primarily low frequency content,
and as such we have seen that we try to make the open-loop gain large over those frequencies.

420
Spacecraft Dynamics and Control: An Introduction
For large open-loop gains (|Go( jω)| ≫1), we ﬁnd from equation (23.26)
|Ur( jω)| =

Gc( jω)
1 + Go( jω)
 |R( jω)| ≈|Gc( jω)|
|Go( jω)||R( jω)| =
1
|G p( jω)||R( jω)|,
(23.27)
|Uw( jω)| =

Gc( jω)
1 + Go( jω)
 |W( jω)| ≈|Gc( jω)|
|Go( jω)||W( jω)| =
1
|G p( jω)||W( jω)|,
(23.28)
and
|Ud( jω)| =

Go( jω)
1 + Go( jω)
 | ˆTd( jω)| ≈| ˆTd( jω)|.
Equations (23.27) and (23.28) show that the control effort can become very large if the plant
gain is very small, while the open-loop gain is large (if |G p( jω)| ≪1 while |Go( jω)| ≫1).
Therefore, we should try to avoid the situation where the open-loop bandwidth is signiﬁcantly
larger than the plant bandwidth. In particular, any measurement noise in that frequency range
could result in large control effort.
23.1.2.2
Small Open-Loop Gain
The measurement noise typically has primarily high frequency content, and as such, we try to
make the open-loop gain very small over those frequencies. For very small open-loop gains
(|Go( jω)| ≪1), we ﬁnd from equation (23.26) that
|Ur( jω)| =

Gc( jω)
1 + Go( jω)
 |R( jω)| ≈|Gc( jω)||R( jω)|,
|Uw( jω)| =

Gc( jω)
1 + Go( jω)
 |W( jω)| ≈|Gc( jω)||W( jω)|,
(23.29)
and
|Ud( jω)| =

Go( jω)
1 + Go( jω)
 | ˆTd( jω)| ≈|Go( jω)|| ˆTd( jω)|.
Equation (23.29) shows that not only should the open-loop gain be very small (|Go( jω)| ≪1)
at high frequencies, but the control gain should also be very small (|Gc( jω)| ≪1) so as to
avoid unnecessary control chatter resulting from measurement noise. Therefore, the control-
law itself will often have a speciﬁed bandwidth.
23.1.3
Modiﬁed Control Implementation
As explained in Sections 17.7.1, 20.2 and 22.3, there are occasions where it is desirable to
partition the control law into two parts
Gc(s) = Gce(s) + Gcy(s),
(23.30)

Control Design in the Frequency Domain
421
R(s) +
−
W(s)
U(s)
ˆTd(s)
Gce(s)
Gp(s)
Y (s)
+
+
Gcy(s)
+
−
+
+
Figure 23.5
Modiﬁed feedback control system
and implement it in the modiﬁed form shown in Figure 23.5. The closed-loop error response
for the modiﬁed control implementation is readily found to be
E(s) = Er(s) + Ed(s) + Ew(s),
(23.31)
where
Er(s) = 1 + G p(s)Gcy(s)
1 + Go(s)
R(s),
Ed(s) = −
G p(s)
1 + Go(s)
ˆTd(s),
(23.32)
and
Ew(s) =
Go(s)
1 + Go(s)W(s),
(23.33)
are the closed-loop errors in response to the reference input, external disturbance and mea-
surement noise, respectively, and Go(s) = G p(s)

Gce(s) + Gcy(s)

is the relevant open-loop
transfer function. Likewise, the closed-loop control effort for the modiﬁed implementation is
U(s) = Ur(s) + Ud(s) + Uw(s),
(23.34)
where
Ur(s) =
Gce(s)
1 + Go(s) R(s),
Ud(s) = −
Go(s)
1 + Go(s)
ˆTd(s), and Uw(s) = −
Gc(s)
1 + Go(s)W(s),
(23.35)
are the closed-loop control efforts in response to the reference input, external disturbance and
measurement noise, respectively.
Repeating the analyses in Sections 23.1.1 and 23.1.2 with equations (23.31) to (23.35), it
is readily found that the conclusions of Sections 23.1.1 and 23.1.2 hold also for the modiﬁed
implementation, with the additional restriction that the partitioning of the control law in
equation (23.30) be performed such that |Gcy( jω)| ≪|Gce( jω)| when |Go( jω)| ≫1.

422
Spacecraft Dynamics and Control: An Introduction
20 log |Go(jω)|
ω
Figure 23.6
Desired open-loop gain frequency response
23.2
Control Design
To summarize the ﬁndings of Section 23.1 and Example 23.1, control design can be per-
formed in the frequency domain by appropriately shaping the open-loop gain and phase
frequency responses. In particular, closed-loop tracking and disturbance rejection require-
ments generally place restrictions on the open-loop gain over an appropriately determined
low frequency range. Closed-loop measurement noise attenuation requirements place restric-
tions on the open-loop gain above an appropriate frequency. Figure 23.6 shows an example
of these restrictions. The desired transient response and stability margins place restrictions
on the cross-over region of the open-loop gain and phase frequency responses. Namely, they
place restrictions on the gain and phase margins. So, given a desired open-loop frequency
response, how do we go about designing an appropriate controller to achieve this? Recall that
log magnitude and phase frequency responses are additive for systems connected in series. The
open-loop transfer function is a series connection of the plant and controller transfer functions,
Go(s) = G p(s)Gc(s). Therefore, given the plant frequency response, G p( jω), we can deter-
mine what the controller frequency response Gc( jω) should look like to yield an open-loop
frequency response with the desired characteristics. We can then construct a controller Gc(s) to
achieve this.
Example 23.2 (Adjusting gain and phase margins using proportional control) Consider
the standard feedback control in Figure 23.4 with the proportional control
Gc(s) = K,
Suppose that the plant frequency response G p( jω) is given, and that we simply wish to adjust
the gain or phase margin. The open-loop transfer function is given by
Go(s) = K G p(s).
As we have seen in Chapter 21, the effect of the gain K on the frequency response as represented
in the Bode Diagrams is simply to shift the log magnitude frequency response 20 log |G p( jω)|
up by a factor 20 log K, while leaving the phase unchanged. As illustrated in Figure 23.7,

Control Design in the Frequency Domain
423
Go(jω)
20 log |Go(jω)|
0 dB
−180o
ω
ω
20 log K
KGp(jω), Gp(jω)
Gp(jω)
KGp(jω)
ωp
ωg
ωg
Figure 23.7
Effect of proportional control on the frequency response
since the phase cross-over frequency ωp is unchanged, the upward shift of the log magnitude
frequency response results in a change in gain margin. In addition, the upward shift of the log
magnitude frequency response results in a shift in the gain cross-over frequency ωg. Since the
phase is unchanged, this results in a change in phase margin. With this knowledge, we can
now ﬁnd simple procedures to adjust the gain or phase margins.
Adjustment of Gain Margin
Suppose that it is required to ﬁnd the gain K which yields a speciﬁed gain margin GMK G p.
To do this, we ﬁrst look at the Bode plot of G p( jω), and ﬁnd the original gain margin at the
phase cross-over frequency, ωp. That is, we ﬁnd GMG p = −20 log |G p( jωp)|. Since the gain
K does not chance the phase cross-over frequency, when the gain K is adjusted, the new gain
margin is
GMK G p = −20 log |K G p( jωp)|
= −20 log K −20 log |G p( jωp)|
= −20 log K + GMG p.
We can then rearrange this to ﬁnd the required log magnitude
−20 log K = GMK G p −GMG p,
and consequently the required gain, K as
K = 10(GMG p −GMK G p )/20.

424
Spacecraft Dynamics and Control: An Introduction
Go(jω)
20 log |Go(jω)|
0 dB
−180o
ω
ω
KGp(jω), Gp(jω)
Gp(jω)
KGp(jω)
ωp
GMGp
−20 log K
GMKGp
Figure 23.8
Adjusting gain margin using proportional control
The procedure of adjusting the gain margin as described above is demonstrated graphically
in Figure 23.8.
Adjustment of Phase Margin
Suppose that it is required to ﬁnd the gain K which yields a speciﬁed phase margin, PMK G p.
Since the phase of K G p( jω) is the same as the phase of G p( jω), we ﬁrst examine the Bode
Diagrams of G p( jω) and ﬁnd the required gain cross-over frequency ωg which will give the
required phase margin PMK G p. That is, as illustrated in Figure 23.9, we ﬁnd ωg such that
∠G p( jωg) = PMK G p −180◦.
Now, the gain K is adjusted so that ωg is the gain cross-over frequency for K G p( jω). That
is, such that
20 log |K G p( jωg)| = 0,
which rearranges to
K = 10−(20 log |G p( jωg)|)/20.
Note that we leave the expression for K in this form, since we can read 20 log |G p( jωg)|
directly from the Bode Diagram, as illustrated in Figure 23.9.

Control Design in the Frequency Domain
425
Go(jω)
20 log |Go(jω)|
0 dB
−180o
ω
ω
KGp(jω), Gp(jω)
Gp(jω)
KGp(jω)
PMKGp −180o
PMKGp
20 log |Gp(jωg)| = −20 log K
ωg
Figure 23.9
Adjusting phase margin using proportional control
23.2.1
Frequency Responses for Common Controllers
Let us now examine the frequency responses for some typical controllers.
23.2.1.1
Lead
A lead controller has the form
Gc(s) = Klead
T s + 1
αT s + 1,
0 < α < 1.
(23.36)
Note that this is equivalent to the transfer function representation given in Section 20.1. As
we see in equation (23.36), a lead controller has a gain and two ﬁrst order factors with
corresponding corner frequencies at ω = 1/T and ω = 1/(αT ). The corresponding frequency
response is shown in Figure 23.10 for lead controller gain Klead = 1. It can be seen that a
lead controller adds positive phase (phase lead, hence the name), which results in an increase
the phase margin. As seen in Example 23.1, this results in an increase in damping ratio, or
a decrease in overshoot. This is entirely compatible with what we observed in Section 20.1,
where it was shown that a lead controller shifts the root locus to the left.
Let us now determine the maximum phase that a lead controller can add. From equation
(23.36), we have
∠Gc( jω) = ∠( jωT + 1) −∠( jωαT + 1).
(23.37)

426
Spacecraft Dynamics and Control: An Introduction
0o
Gc(jω)
ω
1
T
1
αT
0 dB
20 log |Gc(jω)|
ω
1
T
1
αT
−20 log α
1
√αT
sin−1 1−α
1+α
Figure 23.10
Frequency response of a lead controller with Klead = 1
Now, 0 ≤∠( jωT + 1), ∠( jωαT + 1) < 90◦for non-negative frequencies (ω ≥0). There-
fore, we can write
∠Gc( jω) = tan−1(ωT ) −tan−1(ωαT ).
(23.38)
The maximum phase must occur at the frequency for which
d
dω (∠Gc( jω)) = 0.
Using the fact that
d
dx

tan−1 x

=
1
1 + x2 ,
by differentiating (23.38) we obtain
d
dω (∠Gc( jω)) =
T
1 + ω2T 2 −
αT
1 + ω2α2T 2 .
(23.39)
Setting (23.39) to zero and solving, we ﬁnd that the maximum phase occurs at the frequency
ωmax =
1
√αT .
(23.40)

Control Design in the Frequency Domain
427
At frequency ωmax, we ﬁnd that the frequency response is given by
Gc( jωmax) = Klead
j(1/√α)+1
j√α+1 ,
= Klead
( j(1/√α)+1)(1−j√α)
1+α
,
= Klead
2+(1−α)/√α j
1+α
,
= Klead
√α
2√α + (1 −α) j
1 + α
.
(23.41)
Now, note that
2√α + (1 −α) j
 =

4α + (1 −α)2 =

(1 + α)2 = 1 + α.
Therefore, from the imaginary part of (23.41), we ﬁnd the maximum phase
∠Gc( jωmax) = sin−1 1 −α
1 + α .
(23.42)
Since a lead controller adds phase, it is primarily used to improve the phase margin. Suppose
that we know the amount of phase, φmax, we wish to add at the (given) frequency ωmax. Then,
we can solve equations (23.42) and (23.40) to obtain the lead controller parameters
α = 1 −sin φmax
1 + sin φmax
,
T =
1
√αωmax
.
(23.43)
The controller gain Klead can then be chosen to give the desired gain cross-over frequency.
23.2.1.2
Lag
A lag controller has the form
Gc(s) = Klag
T s + 1
βT s + 1,
β > 1.
(23.44)
Note that this is equivalent to the transfer function representation given in Section 20.1.
As we see in equation (23.44), a lag controller has a gain and two ﬁrst order factors with
corresponding corner frequencies at ω = 1/T and ω = 1/(βT ). The corresponding frequency
response is shown in Figure 23.11. It can be seen that a lag controller adds open-loop gain
at low frequencies. As seen in Section 23.1.1, this results in improved steady-state reference
signal tracking and external disturbance rejection. A lag controller also adds some negative
phase (phase lag). As shown in Figure 23.11 by making the corner frequencies sufﬁciently
small, the lag controller can be designed to primarily affect the low frequency part of the open-
loop frequency response, while leaving the cross-over and high frequency regions largely
unaffected. This is compatible with what we observed in Section 20.1, where it was shown

428
Spacecraft Dynamics and Control: An Introduction
0o
Gc(jω)
ω
0 dB
20 log |Gc(jω)|
ω
1
βT
1
T
20 log Klag
20 log Klag
β
Figure 23.11
Frequency response of a lag controller
that a lag controller is used to increase Go(0), while leaving the rest of the root locus (and
therefore the dominant poles) largely unchanged.
It is readily found from (23.44) that the low frequency gain is given by
|Gc(0)| = Klag,
(23.45)
and the high frequency gain is given by
|Gc( jω)| ≈Klag
β , for ω ≫1
T .
(23.46)
The lag controller parameters can then be selected as follows: Klag is chosen to yield the
appropriate low-frequency open-loop and controller gains. The corner frequency 1/T is chosen
to be sufﬁciently small (equivalently, T sufﬁciently large) such that the phase component of the
lag controller frequency response does not affect the cross-over and high frequency components
of the open-loop phase frequency response. Finally, β is chosen to yield the appropriate high
frequency gain, for example to yield the desired phase or gain margins (in a similar method to
Example 23.2).
23.2.1.3
Proportional-Derivative (PD)
A proportional-derivative controller has the form
Gc(s) = K pd(T s + 1).
(23.47)
Note that this is equivalent to the transfer function representation given in Section 20.1.
As we see in equation (23.47), a proportional-derivative controller has a gain and one ﬁrst
order factor with a corner frequency at ω = 1/T . The corresponding frequency response is
shown in Figure 23.12 controller gain K pd = 1. It can be seen that like a lead controller,

Control Design in the Frequency Domain
429
0o
Gc(jω)
ω
90o
0 dB
20 log |Gc(jω)|
ω
1
T
Figure 23.12
Frequency response of a proportional-derivative controller with K pd = 1
a proportional-derivative controller adds positive phase (phase lead). Therefore, just as for
the lead controller, this results in an increase in positive phase margin and consequently an
increase in damping ratio, or equivalently, a decrease in overshoot (as seen in Example 23.1).
Again, this is entirely compatible with what we observed in Section 20.1, where it was shown
that a proportional-derivative controller shifts the root locus to the left.
Let us now determine the phase that a proportional-derivative controller can add. From
equation (23.47), it is readily found that
∠Gc( jω) = tan−1(ωT ),
(23.48)
and that 0 ≤∠Gc( jω) < 90◦for ω > 0. Suppose now that it is desired to add the phase φ at
a speciﬁed frequency ωc. From equation (23.48), we obtain the controller parameter
T = tan φ
ωc
.
(23.49)
The controller gain K pd can then be chosen to give the desired gain cross-over frequency.
23.2.1.4
Proportional-Integral (PI)
A proportional-integral controller has the form
Gc(s) = K pi
T s + 1
s
.
(23.50)
Note that this is equivalent to the transfer function representation given in Section 20.1. As
we see in equation (23.50), a proportional-integral controller has a gain, one ﬁrst order factor
with corner frequency at ω = 1/T and one integrator. The corresponding frequency response
is shown in Figure 23.13. It can be seen that similar to a lag controller, a proportional-integral

430
Spacecraft Dynamics and Control: An Introduction
0o
Gc(jω)
ω
−90o
0 dB
20 log |Gc(jω)|
ω
1
T
20 log KpiT
Figure 23.13
Frequency response of a proportional-integral controller
controller adds open-loop gain at low frequencies (in fact, the gain becomes inﬁnite when
ω = 0). Just as with a lag controller, this results in improved steady-state reference signal
tracking and external disturbance rejection. In fact, it increases the system type by one.
A proportional-integral controller also adds some negative phase (phase lag). As shown in
Figure 23.13 by making the corner frequency sufﬁciently small, the proportional-integral
controller can be designed to primarily affect the low frequency part of the open-loop frequency
response, while leaving the cross-over and high frequency regions largely unaffected.
It is readily found from (23.50) that the high frequency gain is given by
|Gc( jω)| ≈K piT, for ω ≫1
T .
(23.51)
The proportional-integral controller parameters can then be selected as follows: the corner
frequency 1/T is chosen to be sufﬁciently small (equivalently, T sufﬁciently large) such that
the phase component of the lag controller frequency response does not affect the cross-over
and high frequency components of the open-loop phase frequency response. The gain K pi
is then chosen to yield the appropriate high frequency gain, for example to yield the desired
phase or gain margins (in a similar method to Example 23.2).
23.3
Example - PID Design for Spacecraft Attitude Control
We shall now redesign the PID control spacecraft attitude control law in Section 20.2 using
the frequency-domain design method. Recall from Section 20.2 that we are considering the
control of the spacecraft attitude given by
I ¨y = u + Td,

Control Design in the Frequency Domain
431
where the spacecraft inertia I = 1 kg·m2, the control torque is u, and Td is the disturbance
torque, and that the closed-loop system must satisfy the following speciﬁcations.
1. Rise-time constraint, tr ≤30 seconds.
2. Maximum overshoot constraint, Mp ≤30%.
3. Settling-time constraint, ts ≤100 seconds.
4. The steady-state error for a step disturbance ˆTd must be zero.
Recall also that the associated plant transfer function is
G p(s) = 1
s2 .
As shown in Section 20.2, we can solve this design problem with a PID controller, which
can be designed as a combined PD and PI controller. Using the PI and PD forms in this chapter
(equations (23.47) and (23.50)), we have
Gc(s) = K

Tpds + 1
 Tpis + 1
s

,
= K p + sKd + Ki
s ,
which is a PID controller with proportional, derivative and integral gains given by
K p = K

Tpd + Tpi

,
Kd = K TpdTpi,
Ki = K,
(23.52)
respectively. As in Section 20.2, this means that we can design our PID controller sequentially
with PD and PI controllers.
First, let us recast the time-domain speciﬁcations as frequency-domain speciﬁcations. Antic-
ipating a pair of dominant poles, let us use the second order system of Example 23.1 as a
guideline. First, we shall handle the overshoot constraint. From Figure 23.3, we ﬁnd that the
overshoot constraint translates to a phase margin constraint PMp ≥38◦. To give ourselves
some margin, let us choose
PMp = 45◦.
From Figure 23.2, this results in a damping ratio of ζ = 0.42. Now we shall deal with the
rise-time and settling-time constraints. As shown in Example 23.1, with a given phase margin
constraint, these yield constraints on the gain cross-over frequency. Using inequality (23.18),
we ﬁnd that the rise-time constraint translates to ωg ≥0.0875 rad/s. Using inequality (23.21),
the settling-time constraint translates to ωg ≥0.1135 rad/s. To give ourselves some margin,
let us choose
ωg = 0.12 rad/s.
For convenience, let us write the control law as
Gc(s) = K G pd(s)G pi(s),

432
Spacecraft Dynamics and Control: An Introduction
where
G pd(s) = Tpds + 1,
is the PD part and
G pi(s) = Tpis + 1
s
,
is the PI part. The open-loop transfer function then becomes
Go(s) = K G p(s)G pd(s)G pi(s).
(23.53)
We shall ﬁrst design the PD part of the controller to provide the required phase margin. We
shall assume that the PI part of the controller will add approximately 5 degrees phase lag at
the desired cross-over frequency (that is, ∠G pi( jωg) ≈−5◦). Now, the positive phase margin
is given by
PMp = 180◦+ ∠Go( jωg) ≈180◦+ ∠G p( jωg) + ∠G pd( jωg) −5◦.
Given that ∠G p( jω) = −180◦for all ω > 0, we ﬁnd that the required phase for the PD part
of the controller at the cross-over frequency is
∠G pd( jωg) = PMp + 5◦= 50◦.
From equation (23.49), we ﬁnd the PD time constant
Tpd = tan PMp
ωg
= tan 50◦
0.12
= 9.93 s.
We now design the PI part of the controller. Recall that we choose the PI corner frequency
to be sufﬁciently small so that the resulting PI phase lag does not have signiﬁcant effect on
the cross-over region of the open-loop frequency response. Let us therefore set the PI corner
frequency to
1
Tpi
= 0.1ωg,
which results in
Tpi =
1
0.1ωg
= 83.3 s.
The ﬁnal part of the PID design is to choose the gain K such that ωg = 0.12 rad/s is indeed
the gain cross-over frequency. From (23.53), it can be seen that we must have
1 = |Go( jωg)| = K|G p( jωg)||G pd( jωg)||G pi( jωg)|,

Control Design in the Frequency Domain
433
which leads to
K =
1
|G p( j0.12)||G pd( j0.12)||G pi( j0.12)| = 1.105 × 10−4.
Using equation (23.52), we ﬁnally obtain the PID gains
K p = 0.0103,
Kd = 0.0915,
Ki = 1.105 × 10−4.
As in Section 20.2, we implement the PID control law in the form
u(t) = K pe(t) −Kd ˙y(t) + Ki
 t
0
e(τ)dτ.
Figure 23.14 shows the unit step response of the corresponding closed-loop system. It can be
seen that with the designed control gains, the response has a bit too much overshoot, and the
settling time is too long. To reduce the overshoot, let us increase the desired phase margin to
PMp = 50◦.
Unit Step response with modified PID control
Time (sec)
Amplitude
0
50
100
150
200
250
0
0.2
0.4
0.6
0.8
1
1.2
1.4
System: sysclm
Peak amplitude: 1.34
Overshoot (%): 34.1
At time (sec): 35.7
System: sysclm
Settling Time (sec): 135
System: sysclm
Time (sec): 20.7
Amplitude: 1
Figure 23.14
Unit step response K p = 0.0103, Kd = 0.0915, Ki = 1.105 × 10−4

434
Spacecraft Dynamics and Control: An Introduction
To reduce the settling time, let us increase the gain cross-over frequency to
ωg = 0.2 rad/s.
Repeating the above control design procedure with the new phase margin and gain cross-over
frequency, we end up with the gains
K p = 0.0261,
Kd = 0.1630,
Ki = 4.566 × 10−4.
Figure 23.15 shows the closed-loop system unit step response with the new gains. It can be
seen that all transient speciﬁcations are satisﬁed. Figure 23.16 shows the attitude response to a
step disturbance. Comparing Figure 23.15 and 23.16 to Figures 20.19 and 20.20 respectively,
we see that performing the control design in the frequency domain has resulted in a system with
very similar closed-loop performance to the system designed using the root locus. However,
unlike the root locus, the frequency domain method also allows the designer to consider issues
such as robustness and noise rejection, as well as providing the ability to design a controller for
a system for which a plant model is unavailable using an experimentally obtained frequency
response.
Unit Step response with modified PID control
Time (sec)
Amplitude
0
50
100
150
200
250
0
0.2
0.4
0.6
0.8
1
1.2
1.4
System: sysclm
Peak amplitude: 1.3
Overshoot (%): 29.9
At time (sec): 22.7
System: sysclm
Settling Time (sec): 93.9
System: sysclm
Time (sec): 13.7
Amplitude: 1
Figure 23.15
Unit step response K p = 0.0261, Kd = 0.1630, Ki = 4.566 × 10−4

Control Design in the Frequency Domain
435
0
20
40
60
80
100
120
140
160
180
200
0
0.005
0.01
0.015
0.02
0.025
0.03
0.035
0.04
0.045
Response to a step disturbance Td=1−3Nm
Time (sec)
Amplitude
Figure 23.16
Attitude response for a step disturbance ˆTd = 10−3Nm
Notes
In this chapter, we have examined how the open-loop frequency response relates to the
closed-loop system performance. In particular, we examined how a typical desired open-loop
frequency response might be speciﬁed. As such, we saw that a control system design may be
performed purely in the frequency domain. We then examined how different types of common
controllers affect the open-loop frequency response. We ﬁnally performed a PID controller
design for spacecraft attitude control in the frequency domain, and demonstrated that it met
the closed-loop speciﬁcations in the time-domain. For further examples on how to perform
control system design in the frequency domain, the reader is referred to any of the excellent
books on classical control systems, including Qiu and Zhou (2010), Franklin et al. (2010) and
Ogata (2010).
References
Franklin GF, Powell JD and Emami-Naeini A 2010 Feedback Control of Dynamic Systems 6th edn. Prentice Hall,
Upper Saddle River, NJ.
Ogata K 2010 Modern Control Engineering 5th edn. Prentice Hall, Upper Saddle River, NJ.
Qiu L and Zhou K 2010 Introduction to Feedback Control. Prentice Hall, Upper Saddle River, NJ.


24
Nonlinear Spacecraft
Attitude Control
In Chapters 17 to 23, we have examined how to perform spacecraft attitude control using
linear control design techniques. This required making the assumption of small angles and
angular velocities in order to obtain linear approximations to the nonlinear attitude equations
of motion. Since the attitude control design requirements typically include a requirement on
the steady-state attitude errors being small, this is certainly a reasonable approach. However,
there are occasions when large angle maneuvers are required. For example, when a spacecraft
is initially deployed from the launch vehicle, the spacecraft will be tumbling in an uncontrolled
manner. When the attitude control system is initially switched on, it must acquire the desired
attitude from an arbitrary initial attitude. Therefore, there could be a large initial attitude error.
It is clear then, that in order to perform a complete spacecraft attitude control design for a
given mission, there are components of the spacecraft attitude operations sequence for which
the small angle and angular velocity assumption cannot be made. In order to guarantee closed-
loop stability, we need to analyze the full nonlinear attitude equations. This chapter will present
some relevant techniques.
24.1
State-Space Representation of the Spacecraft Attitude Equations
In order to study the full nonlinear spacecraft attitude motion (in particular the stability), we
need to put the equations of motion (see Sections 11.2 and 11.3) into a suitable form. For linear
differential equations with constant coefﬁcients such as those studied in Chapters 17 to 22,
taking Laplace transforms leads to proper transfer functions (the ratio of two polynomials).
The resulting transfer functions were easily analyzed, providing a great deal of insight into
closed-loop stability and performance. Unfortunately, this approach is not very helpful when
dealing with nonlinear differential equations (such as the spacecraft attitude equations of
motion). Taking Laplace transforms does not in general lead to nice proper transfer functions
that can be readily analyzed. Instead, we must deal directly with the nonlinear differential
equations in the time-domain.
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

438
Spacecraft Dynamics and Control: An Introduction
A ﬁnite-dimensional nonlinear system, such as we consider in spacecraft dynamics and
control can be put in the form
˙x = f(x, t, u),
(24.1)
y = h(x, t),
(24.2)
where t denotes time, x is a vector containing the system states, y is a vector containing the
system measurements, u is a vector containing the system inputs, and f and h are vector-valued
real functions.
The state vector x contains all parameters necessary to fully describe the system motion
at any time, and the equations (24.1) and (24.2) are collectively referred to as a state-space
realization of the system. Individually, we call (24.1) the state equation of the system, and
(24.2) the measurement equation. For the purposes of the stability analyses in this chapter,
we shall only deal with the state equation for the closed-loop system. Furthermore, for the
spacecraft attitude control designs in this chapter, we shall assume that the full state-vector is
available for feedback, that is y = x (this situation is called state-feedback). The measurement
equation will become important in Chapter 25 when we examine state estimation in detail, in
particular with regards to spacecraft navigation.
Example 24.1 (State-space description of spacecraft attitude motion equations) Let us
ﬁnd a state-space description for a rigid spacecraft’s attitude motion. From Sections 11.2 and
11.3, we see that the attitude motion is fully described by the attitude and angular velocity.
These in turn are governed by the attitude kinematics and attitude dynamics. As explained in
Section 11.2, there are several different parameterizations that may be used to represent the
spacecraft attitude. Let us use the quaternion (ϵ, η) to represent the attitude. From Section 11.2,
we obtain the attitude kinematics
˙ϵ = 1
2

η1 + ϵ×
ω,
˙η = −1
2ϵT ω,
(24.3)
where ω is the spacecraft angular velocity in body coordinates. Likewise, from Section 11.3,
the attitude dynamics are
I ˙ω + ω×Iω = T,
(24.4)
where I is the spacecraft inertia matrix and T is the external torque acting on the spacecraft
(represented in body coordinates).
Equations (24.3) and (24.4) fully describe the spacecraft attitude motion, and can be put
in state-space form as follows. Since the quaternion (ϵ, η) and angular velocity vector ω fully
specify the attitude motion, let us deﬁne the state-vector as
x =
⎡
⎣
ϵ
η
ω
⎤
⎦.

Nonlinear Spacecraft Attitude Control
439
Likewise, as seen in (24.4), the system input is the external torque, so we set u = T. Now,
suppose that the only measurements we have available are the vector part of the quaternion.
In this case, we set y = ϵ.
With the above deﬁnitions in hand, the equations of motion (24.3) and (24.4) may be put
into the state-space form of equations (24.1) and (24.2) by deﬁning
f (x, u) =
⎡
⎢⎢⎢⎢⎢⎣
1
2

η1 + ϵ×
ω
−1
2ϵT ω
I−1 	
−ω×Iω + u

⎤
⎥⎥⎥⎥⎥⎦
,
(24.5)
h(x) = ϵ.
(24.6)
When the state-equation system in (24.1) does not explicitly contain an input u, it takes
the form
˙x = f (x, t) ,
(24.7)
and we say that it is unforced. Note that if we have some feedback control u = γ (y, t) in the
system described by (24.1) and (24.2), we can consider the closed-loop system as unforced.
That is, the closed-loop system satisﬁes
˙x = ¯f (x, t) ,
(24.8)
where
¯f (x, t) = f (x, t, γ (h (x, t) , t)) .
In the case that the unforced state equation (24.7) is independent of time,
˙x = f (x) ,
(24.9)
we say that the system is autonomous. Otherwise, we say that the system is non-autonomous
(as in equation (24.7)).
Example 24.2 Let us now ﬁnd the closed-loop state equation for the spacecraft in Example 24.1
with state-feedback control law
u = −kpϵ −kdω.
(24.10)
Substituting (24.10) into (24.5), we readily ﬁnd that the closed-loop system is given by
˙x = ¯f (x) ,
(24.11)

440
Spacecraft Dynamics and Control: An Introduction
where
¯f (x) =
⎡
⎢⎢⎢⎢⎢⎣
1
2

η1 + ϵ×
ω
−1
2ϵT ω
I−1 	
−ω×Iω −kpϵ −kdω

.
⎤
⎥⎥⎥⎥⎥⎦
Clearly the closed-loop state equation (24.11) is independent of time. Therefore, the closed-
loop system is autonomous.
Now, suppose that there is a known time-varying disturbance torque Td(t) acting on the
spacecraft . Then, the attitude dynamics become
I ˙ω + ω×Iω = u + Td(t).
(24.12)
We readily ﬁnd that the closed-loop state equation with the feedback control law (24.10) now
becomes
˙x = ¯f (x, t) ,
(24.13)
where
¯f (x, t) =
⎡
⎢⎢⎢⎢⎢⎣
1
2

η1 + ϵ×
ω
−1
2ϵT ω
I−1 	
−ω×Iω −kpϵ −kdω + Td(t)

.
⎤
⎥⎥⎥⎥⎥⎦
In this case, the closed-loop state equation (24.13) is not independent of time. Therefore, the
closed-loop system in this case is non-autonomous.
24.2
Stability Deﬁnitions
In Section 14.1, we presented some notions of stability for linear time-invariant systems. We
made some general arguments as to the meaning of stability in terms of the long-term behavior
of the system, but we did not give a precise deﬁnition. To determine the stability of a linear
time-invariant system, we examined the system poles. This is not appropriate for general
nonlinear systems, and we shall need a precise deﬁnition of stability and different techniques
are needed for its analysis.
24.2.1
Equilibrium Points
A very important concept is that of an equilibrium point. A point x∗is said to be an equilibrium
point if it has the property that whenever the state of the system, x, starts at x∗, it will remain at

Nonlinear Spacecraft Attitude Control
441
x∗for all future time. Clearly this is a very desirable property when designing and implementing
a control system. For example, if the goal of a spacecraft attitude control system is to hold the
spacecraft to a desired attitude, then the desired attitude must be an equilibrium point of the
closed-loop system.
Let us now consider the system (24.7). Then, the point x = x∗is an equilibrium point of
(24.7) at time t = t0 if
f

x∗, t

= 0, for all t ≥t0.
(24.14)
If the system is autonomous (as in (24.9)), the condition for an equilibrium point becomes
independent of the initial time, t0. That is, the point x∗is an equilibrium point of (24.9) if
f

x∗
= 0.
(24.15)
We shall only consider systems with equilibrium at the origin x∗= 0. To see why this is
reasonable, consider the system with state-equation
˙z = g (z, t) ,
with equilibrium point z = z∗̸= 0 at time t = t0. Now, consider the change of variables x =
z −z∗. Then, ˙x = ˙z = g (x + z∗, t). Deﬁning f (x, t) = g (x + z∗, t), we see that the system
˙x = f (x, t) ,
has an equilibrium point at the origin (x = 0) at time t = t0. Since we can always make such
a change of variables, it is reasonable for us to consider only systems with equilibrium at the
origin.
24.2.2
Stability of Equilibria
Just as important as the concept of an equilibrium point is the concept of stability of that
equilibrium point. Loosely speaking, if a state x is close to an equilibrium point x∗, then we
want to ensure that x stays close to x∗for all future time. This is essentially what stability
means. In our spacecraft attitude control example, if the desired attitude is an equilibrium point
of the closed-loop system, but is not stable, it is not practically useful, since any disturbance
to the system will push the attitude away from the desired attitude, and it will not come back.
We shall now formalize the notion of stability. There are a number of different stability
deﬁnitions. We shall use a very widely used deﬁnition, called Lyapunov stability. Once again
consider the system (24.7), and suppose that x = 0 is an equilibrium point at time t = t0.
Deﬁnition 24.1 The equilibrium point x = 0 of (24.7) is
1. stable if for any ϵ > 0, a δ > 0 can be found such that
∥x(t0)∥< δ implies that ∥x(t)∥< ϵ for all t ≥t0

442
Spacecraft Dynamics and Control: An Introduction
t
δ
−δ
−
x(t)
x
t0
Figure 24.1
Example of Lyapunov stability
2. unstable if it is not stable
3. asymptotically stable if it is stable and δ > 0 can be chosen such that
∥x(t0)∥< δ implies that lim
t→∞x(t) = 0.
4. globally asymptotically stable if it is stable and
lim
t→∞x(t) = 0, for all x(t0).
Deﬁnition 24.1 mathematically formalizes our intuitive idea of stability, namely that solu-
tions x(t) starting close to the equilibrium x = 0 should stay close. This is illustrated graphically
in Figure 24.1. We have also formalized the notion of asymptotic stability, which is even more
important in control system design, namely, x(t) will approach the equilibrium point provided
x(t0) is sufﬁciently close to it. For our attitude control example, if some disturbance pushes the
attitude away from the desired attitude, we want the attitude to return to the desired attitude.
Note the distinction between asymptotic stability and global asymptotic stability. Asymp-
totic stability is a local deﬁnition, which only guarantees that x(t) will approach the equilibrium
point if it starts sufﬁciently close to it. Global asymptotic stability is a much stronger condition,
since it means that x(t) will approach the equilibrium point regardless of its starting value.
24.3
Stability Analysis
It will be very useful to be able to determine the stability of an equilibrium point without having
to solve the associated differential equation (which is typically very difﬁcult or impossible to
do analytically). We shall now demonstrate such a procedure by considering the detumbling
operation of a rigid spacecraft.
24.3.1
Detumbling of a Rigid Spacecraft
When a spacecraft is deployed from a launch vehicle, it is typically tumbling with some non-
zero angular velocity ω(t). One of the ﬁrst spacecraft attitude operations will be to detumble

Nonlinear Spacecraft Attitude Control
443
the spacecraft, that is to make ω(t) →0. Therefore, we want ω = 0 to be an asymptotically
stable (globally if possible) equilibrium point of the closed-loop spacecraft attitude dynamics.
Recall from Section 11.3 that the spacecraft attitude dynamics (in the absence of external
disturbances) are given by
I ˙ω + ω×Iω = u,
(24.16)
where I is the spacecraft inertia matrix and u is the control torque. Since only the angular
velocity ω is of concern to detumbling the spacecraft (which is fully governed by (24.16)), we
do not require the spacecraft kinematics. Let us choose the detumbling control law
u = −kω,
(24.17)
where k > 0 is a constant gain. Then, the closed-loop system obtained by substituting (24.17)
into (24.16) can be written in the form
˙ω = f (ω) ,
(24.18)
where we set
f (ω) = I−1 	
−ω×Iω −kω

.
Clearly, f (0) = 0, so that ω = 0 is an equilibrium point of the closed-loop system.
To study the stability of the equilibrium, let us consider the rotational kinetic energy (see
Section 2.5),
Tr(t) = 1
2ωT (t)Iω(t).
(24.19)
We note that since the inertia matrix, I, is positive deﬁnite, the rotational kinetic energy
satisﬁes T ≥0, with equality T = 0 only at the equilibrium ω = 0. Now, let I1, I2 and I3 be
the principal moments of inertia corresponding to I (see Section 2.4.3), ordered such that
I1 ≤I2 ≤I3.
(24.20)
Then, we have the following bounds on the rotational kinetic energy
1
2 I1∥ω(t)∥2 ≤Tr(t) ≤1
2 I3∥ω(t)∥2,
(24.21)
where ∥ω∥=
√
ωT ω. Rearranging the inequality on the left, shows that at any given time,
∥ω(t)∥≤

2Tr(t)
I1
.
(24.22)

444
Spacecraft Dynamics and Control: An Introduction
Thus, inequality (24.22) shows that the angular velocity, ω(t), is bounded by the rotational
kinetic energy. In particular, if we can demonstrate that Tr(t) is bounded, then from (24.22) we
ﬁnd that ω(t) is bounded also. This fact will be useful for establishing closed-loop stability.
Likewise, if we can demonstrate that Tr(t) shrinks to zero, then (24.22) shows that ω(t) also
shrinks to zero. This will then establish asymptotic stability. Therefore, we can study the
stability properties of the closed-loop system by examining the qualitative behavior of the
rotational kinetic energy.
Before proceeding with the detailed stability analysis, let us ﬁrst demonstrate the inequalities
in (24.21). Consider an arbitrary angular velocity ω. As shown in Section 2.4.3, it is always
possible to ﬁnd a rotation matrix C such that
Ip
=
⎡
⎣
I1
0
0
0
I2
0
0
0
I3
⎤
⎦= CICT .
(24.23)
Now, consider the vector
a
=
⎡
⎣
a1
a2
a3
⎤
⎦= Cω.
(24.24)
Making use of (24.23) and (24.24), we ﬁnd that
Tr = 1
2ωT Iω = 1
2aT Ipa = 1
2
	
I1a2
1 + I2a2
2 + I3a2
3

.
(24.25)
Making use of the ﬁrst inequality in (24.20), we ﬁnd from (24.25) that
Tr ≥1
2 I1
	
a2
1 + a2
2 + a2
3

,
= 1
2 I1aT a,
= 1
2 I1

ωT CT 
(Cω) ,
= 1
2 I1ωT ω,
which establishes the ﬁrst inequality in (24.21). The second inequality is obtained in similar
fashion.
Let us now proceed with our stability analysis, by examining how the rotational kinetic
energy behaves as a function of time along a trajectory ω(t) of the closed-loop system.
Differentiating (24.19) with respect to time, and applying the product rule, we have
˙Tr = 1
2 ˙ωT Iω + 1
2ωT I ˙ω,
= ωT I ˙ω.
(24.26)

Nonlinear Spacecraft Attitude Control
445
Substituting for ˙ω from (24.18), we have
˙Tr = ωT II−1 	
−ω×Iω −kω

.
(24.27)
Noting that, ωT ω× = 0, this becomes
˙Tr = −kωT ω = −k∥ω(t)∥2 ≤0.
(24.28)
This shows that time-derivative of the rotational kinetic energy is nonpositive. As a conse-
quence, the rotational kinetic energy cannot increase, and is bounded by its initial value.
Indeed, integrating both sides of the inequality (24.28), we have
Tr(t) −Tr(0) =
 t
0
˙Trdτ ≤0, for all t ≥0,
(24.29)
and therefore
Tr(t) ≤Tr(0), for all t ≥0.
(24.30)
Therefore, from inequalities (24.30) and (24.22), we have
∥ω(t)∥≤

2Tr(0)
I1
, for all t ≥0.
(24.31)
Let us now use this to establish the closed-loop stability condition. Referring to Deﬁnition 24.1,
suppose an arbitrary ϵ > 0 is given. Then, provided the initial rotational kinetic energy satisﬁes

2Tr(0)
I1
< ϵ,
(24.32)
inequality (24.31) shows that we will then have
∥ω(t)∥< ϵ, for all t ≥0,
(24.33)
which is the condition required in Deﬁnition 24.1. We shall now turn condition (24.32) into a
bound on ∥ω(0)∥. This bound will give us the required δ > 0 in Deﬁnition 24.1. Making use
of the second inequality in (24.21), we ﬁnd that

2Tr(0)
I1
≤∥ω(0)∥

I3
I1
.
(24.34)

446
Spacecraft Dynamics and Control: An Introduction
Therefore, if we select the initial angular velocity ω(0) such that
∥ω(0)∥

I3
I1
< ϵ,
(24.35)
inequality (24.32) will guarantee that (24.33) is satisﬁed. Rearranging (24.35), we obtain the
required bound on the initial angular velocity
∥ω(0)∥< ϵ

I1
I3
,
(24.36)
and correspondingly we choose δ = ϵ√I1/I3. To summarize, we have shown that given any
ϵ > 0, we can ﬁnd a corresponding δ > 0 such that
∥ω(0)∥< δ implies that ∥ω(t)∥< ϵ for all t ≥0.
Therefore, the equilibrium ω = 0 is stable.
Now, let us try to demonstrate asymptotic stability of ω = 0. Suppose that the initial
condition ω(0) is given. We have seen that the rotational kinetic energy Tr(t) is non-increasing
( ˙Tr ≤0 as in (24.28)), and that it is bounded below Tr(t) ≥0 (since it is non-negative by
deﬁnition). Now, suppose that the rotational kinetic energy does not approach zero. Then there
must be a positive scalar c > 0 such that Tr(t) ≥c for all t ≥0. We shall now show that this
is impossible, and that therefore Tr(t) →0 as t →∞. From the second inequality in (24.21),
we ﬁnd that Tr(t) ≥c implies that
∥ω(t)∥2 ≥2c
I3
.
(24.37)
From (24.28), we then ﬁnd that this implies that
˙Tr = −k∥ω(t)∥2 ≤−2kc
I3
.
(24.38)
Integrating both sides of (24.38), we ﬁnd that
Tr(t) −Tr(0) =
 t
0
˙Trdτ ≤−
 t
0
2kc
I3
dτ,
(24.39)
which leads to
Tr(t) ≤Tr(0) −2kc
I3
t.
(24.40)
The right-hand side of (24.40) is a linearly decreasing function of time, which eventually
becomes negative. This implies that if Tr(t) ≥c > 0 for all t ≥0, then Tr(t) will eventually
become negative, which is a contradiction. Therefore, it must be that Tr(t) →0 as t →∞.

Nonlinear Spacecraft Attitude Control
447
From (24.22), it then follows that ω(t) →0 as t →∞. Therefore, from Deﬁnition 24.1, ω = 0
is an asymptotically stable equilibrium. Since our choice of initial condition ω(0) was arbitrary
(there is not restriction on its size), the result is global, and we can conclude that ω = 0 is in
fact globally asymptotically stable.
24.3.2
Lyapunov Stability Theorems
In Section 24.3.1, we made use of a positive deﬁnite function (the rotational kinetic energy)
to study the stability of the equilibrium without having to solve the equation of motion. The
method presented in Section 24.3.1 is a special case of what is known as Lyapunov stability
analysis. The method presented in Section 24.3.1 is generalized in the following famous
theorem.
Theorem 24.1 (Lyapunov’s Stability Theorem) Consider the system with state-equation
˙x = f(x),
(24.41)
where x ∈Rn and assume the existence of solutions x(t) to the state-equation in some open set
D ⊂Rn containing the origin (that is 0 ∈D). Let x = 0 be an equilibrium point. Consider a
continuously differentiable scalar function V (x) : D →R, such that V (0) = 0 and V (x) > 0
for x ∈D with x ̸= 0. Suppose that along solutions x(t) ∈D,
˙V (x) ≤0.
(24.42)
Then, x = 0 is stable. Furthermore, if
˙V (x) < 0 for x ̸= 0,
(24.43)
along solutions x(t) ∈D, then x = 0 is asymptotically stable.
Note that the assumption of the existence of solutions to (24.41) is a necessary technical
condition that needs to be made, since solutions are not guaranteed to exist for general nonlinear
systems. However, for most practical systems (such as closed-loop spacecraft attitude control),
this assumption will be valid.
If a function V (x) can be found satisfying the condition (24.42) in Theorem 24.1, it is called
a Lyapunov function. In the example in Section 24.3.1, the rotational kinetic energy plays the
role of the Lyapunov function. It is important to note that ˙V (x) is the time-derivative of V (x)
along a trajectory x(t) of (24.41), and is evaluated using the chain-rule as
˙V (x) = ∂V
∂xT ˙x = ∂V
∂xT f(x),
(24.44)
where
∂V
∂xT =
 ∂V
∂x1
· · ·
∂V
∂xn

.

448
Spacecraft Dynamics and Control: An Introduction
Theorem 24.1 gives a local stability result only. To conclude global asymptotic stability,
further conditions must be imposed, as outlined in the following theorem.
Theorem 24.2 (Global Version of Lyapunov’s Stability Theorem) Suppose that all condi-
tions of Theorem 24.1 are satisﬁed with D = Rn (that is, globally). In addition, suppose that
V (x) has the property that
∥x∥→∞implies that V (x) →∞.
(24.45)
Then, x = 0 is globally asymptotically stable.
The crucial extra condition is (24.45). When V (x) satisﬁes this condition, it is said to be radially
unbounded. It is easily seen that the rotational kinetic energy in Section 24.3.1 satisﬁes this
condition.
Important Points
• Theorems 24.1 and 24.2 provide sufﬁcient conditions for stability. If we cannot ﬁnd a
Lyapunov function V (x) satisfying the conditions of either Theorems 24.1 and 24.2, it does
not mean that the system is unstable.
• A positive deﬁnite function V (x) is only called a Lyapunov function if it has been demon-
strated to satisfy the conditions in either Theorem 24.1 or 24.2. Until that has been demon-
strated, it is referred to as a Lyapunov function candidate.
• As demonstrated in Section 24.3.1, a natural choice for Lyapunov function candidate is often
the “energy” of the system.
It will be noted that Theorems 24.1 and 24.2 have been presented for autonomous systems.
Analogous results exists for non-autonomous systems, and can readily be found in any
text on nonlinear control systems.
24.4
LaSalle’s Theorem
In Section 24.3, we demonstrated how the closed-loop stability may be determined using
Lyapunov stability analysis. Unfortunately, while it is useful for determining stability, it some-
times breaks down when trying to determine asymptotic stability. This problem is particularly
prevalent when the systems under consideration are second-order mechanical systems. We
shall now illustrate this issue with an example.
Example 24.3 Consider the simple spring-mass-damper system with equation of motion
m ¨x + d ˙x + kx = 0,
(24.46)
where m > 0 is the mass, d > 0 is the viscous damping coefﬁcient and k > 0 is the spring
constant. It is well known that the equilibrium ˙x = x = 0 is asymptotically stable. Let us try

Nonlinear Spacecraft Attitude Control
449
to demonstrate that using the Lyapunov stability theory from Section 24.3. First, we write the
system (24.46) in ﬁrst-order state-space form by deﬁning the states
x1 = x (position),
x2 = ˙x (velocity).
Form (24.46), we then have
˙x1 = x2,
˙x2 = −d
m x2 −k
m x1.
(24.47)
As a Lyapunov-function candidate, let us try the total energy of the system
V (x1, x2) = 1
2mx2
2 + 1
2kx2
1.
(24.48)
Taking the time-derivative of (24.48) along a trajectory of (24.47), we obtain
˙V (x1, x2) = mx2 ˙x2 + kmx1 ˙x1,
= mx2

−d
m x2 −k
m x1

+ kx1x2,
= −dx2
2,
≤0.
Therefore, condition (24.42) in Theorem 24.1 is satisﬁed, so we can conclude that the equilib-
rium x1 = x2 = 0 is stable. However, since ˙V = 0 for all x1 ̸= 0 provided x2 = 0, condition
(24.43) is not satisﬁed, and we cannot conclude asymptotic stability using Theorem 24.1.
Example 24.1 has demonstrated a potential shortcoming of Lyapunov stability analysis for
second order mechanical systems. In particular this will be problematic when we design a
spacecraft attitude control law. Fortunately, there is another tool that can be used to tackle this
problem. This tool is called LaSalle’s Theorem, and will be presented in this section.
First, we must introduce some new concepts.
Deﬁnition 24.2 Consider the system
˙x = f(x),
(24.49)
where x ∈Rn. Then, we say that a set M ⊂Rn is invariant with respect to (24.49) if
x(0) ∈M implies that x(t) ∈M for all t ∈R.
(24.50)
That is, if a solution x(t) belongs to M at some time instant, then it belongs to M for all past
and future times.

450
Spacecraft Dynamics and Control: An Introduction
Deﬁnition 24.3 We say that x(t) approaches a set M as t →∞if for each ϵ > 0 there is a
T > 0 such that
dist (x(t), M) < ϵ, for all t ≥T,
(24.51)
where dist (p, M) denotes the distance from a point p to set M, which is deﬁned as
dist (p, M) = inf
q∈M ∥p −q∥.
Note that “inf” (inﬁnimum) denotes the highest lower bound on a set of real numbers (it can
be thought of as the minimum).
With Deﬁnitions 24.2 and 24.3 in hand, we can now state LaSalle’s theorem.
Theorem 24.3 (LaSalle’s Theorem) Consider the system with state-equation
˙x = f(x),
(24.52)
where x ∈Rn and assume the existence of solutions x(t) to the state-equation in some open set
D ⊂Rn. Suppose that for some solution x(t), a closed and bounded set  ⊂D can be found
such that x(t) ∈ for all t ≥0. Let V (x) : D →R be a continuously differentiable function
such that along the trajectory x(t), the time derivative of V satisﬁes ˙V ≤0 in . Let E be the
set of all points in  where ˙V (x) = 0, that is E =

x ∈ : ˙V (x) = 0

. Let M be the largest
invariant set of the system (24.52) contained in E. Then, x(t) →M as t →∞.
It is very important to note that LaSalle’s theorem only holds for autonomous systems.
There are some special classes of non-autonomous systems for which similar results
can be found. However, in general these results are NOT applicable to non-autonomous
systems.
A comparison of LaSalle’s theorem (Theorem 24.3) with Lyapunov’s theorem (Theo-
rem 24.1) shows that they are quite similar. Some subtle differences that are worth noting
are the following: in Lyapunov’s theorem, the function V (x) is required to be positive deﬁnite,
while in LaSalle’s theorem it is not. On the other hand, LaSalle’s theorem requires the prior
knowledge that a trajectory can be contained in a closed and bounded set , while Lyapunov’s
theorem does not. Often times, a Lyapunov analysis can be used to ﬁnd such a closed and
bounded set .
Example 24.4
Let us now return to the spring-mass-damper problem in Example 24.3.
Consider an arbitrary initial condition (x1(0), x2(0)). From the Lyapunov analysis there, we
found that ˙V ≤0, which implies that
V (x1(t), x2(t)) ≤V (x1(0), x2(0)) .
Therefore, we may take the closed and bounded set in Theorem 24.3 to be
 =

(x1, x2) ∈R2 : V (x1(t), x2(t)) ≤V (x1(0), x2(0))

.

Nonlinear Spacecraft Attitude Control
451
Next, let us ﬁnd the set E in Theorem 24.3. It is readily found to be
E = {(x1, x2) ∈ : x2 = 0}
Finally, let us ﬁnd the largest invariant set of the system (24.47) contained in E. Now, for
any trajectory contained in the set E, we have x2(t) ≡0. Therefore, ˙x2(t) ≡0 for trajectories
contained in E. From the system equations (24.47), this implies that trajectories contained in
E also satisfy
0 ≡−d
m · 0 −k
m x1(t),
which implies that x1(t) ≡0 as well. Therefore, we see that the largest invariant set M is
given by
M = (0, 0).
All conditions in Theorem 24.3 are now satisﬁed, and upon application of the theorem we
conclude that x1(t) →0, x2(t) →0. As shown in Example 24.3, the point x1 = x2 = 0 is
stable. Therefore, the point is x1 = x2 = 0 stable in the sense of Lyapunov. Since the initial
condition was arbitrary, the result is global.
24.5
Spacecraft Attitude Control with Quaternion and
Angular Rate Feedback
Suppose that it is desired to control the spacecraft to some desired constant inertial attitude.
Let us represent the attitude error by the quaternion (ϵ, η), as in Example 24.1. Then, as in
Example 24.1, the spacecraft attitude motion is governed by the quaternion kinematics and
Euler’s equations, given in equations (24.3) and (24.4) respectively.
The control objective is then to render the closed-loop system globally convergent to the
equilibrium ω = ϵ = 0, since this corresponds to zero attitude error. Note that due to the unit
length constraint in the quaternion, we cannot render the closed-loop system stable in the sense
of Deﬁnition 24.1, since this requires that (ϵ, η) can be made arbitrarily small.
Let us try the PD-like control law (as in Example 24.2)
T = −kpϵ −kdω,
(24.53)
where kd > 0 is a derivative gain and kp > 0 is a proportional gain. Thus, we are feeding
back the vector part of the attitude error quaternion, as well as the angular velocity vector. The
closed-loop system is then given by
˙ϵ = 1
2

η1 + ϵ×
ω,
˙η = −1
2ϵT ω,
(24.54)
˙ω = I−1 	
−ω×Iω −kpϵ −kdω

.

452
Spacecraft Dynamics and Control: An Introduction
As noted in Example 24.2, the closed-loop system given by equation (24.54) is autonomous.
Next, we recall from Section 1.3.4 that the quaternion representation of the attitude satisﬁes the
unit length constraint ϵT ϵ + η2 = 1. It can readily be shown from the quaternion kinematics
in (24.54) that provided the initial quaternion (ϵ(0), η(0)) satisﬁes the unit length constraint,
then the quaternion trajectory (ϵ(t), η(t)) will satisfy the unit length constraint for all t ∈R
(try this as an exercise). In particular, this leads to the inequalities
∥ϵ(t)∥≤1, |η(t)| ≤1, for all t ∈R.
(24.55)
Now, consider the function
V (ϵ, η, ω) = 1
2ωT Iω −2kpη.
(24.56)
By the second inequality in (24.55), we have
1
2ωT Iω −2kp ≤V (ϵ, η, ω) .
(24.57)
As in Section 24.3.1, let I1, I2 and I3 be the principal moments of inertia corresponding to I,
ordered such that
I1 ≤I2 ≤I3.
(24.58)
Then, making use of equation (24.19) and the ﬁrst inequality in (24.21), the inequality in
(24.57) becomes
1
2 I1∥ω(t)∥2 ≤V (ϵ(t), η(t), ω(t)) + 2kp,
which leads to
∥ω(t)∥≤

2V (ϵ(t), η(t), ω(t)) + 4kp
I1
,
(24.59)
for any closed-loop trajectory with initial quaternion satisfying ϵ(0)T ϵ(0) + η(0)2 = 1.
Now, let the initial condition ϵ(0), η(0) and ω(0) be given, such that the initial quaternion
satisﬁes the unit length constraint ϵ(0)T ϵ(0) + η(0)2 = 1. Let us take the time-derivative of V
in (24.56) along the resulting closed-loop trajectory ϵ(t), η(t) and ω(t) of (24.54). Making use
of (24.54), we ﬁnd
˙V = ωT I ˙ω −2kp ˙η,
= ωT II−1 	
−ω×Iω −kpϵ −kdω

−2kp

−1
2ϵT ω

,
= −kdωT ω,
≤0.
(24.60)

Nonlinear Spacecraft Attitude Control
453
Integrating both sides of (24.60), this shows that V (ϵ(t), η(t), ω(t)) ≤V (ϵ(0), η(0), ω(0)).
Therefore, from (24.59), we ﬁnd that
∥ω(t)∥≤

2V (ϵ(0), η(0), ω(0)) + 4kp
I1
, for all t ≥0.
(24.61)
Combining inequalities (24.55) and (24.61), let us deﬁne the set
 =

(ϵ, η, ω) ∈R3 × R × R3 : ∥ϵ∥≤1, |η| ≤1, ∥ω∥≤a

.
(24.62)
where
a =

2V (ϵ(0), η(0), ω(0)) + 4kp
I1
.
The set  in (24.62) is closed and bounded, and we have shown that the closed-loop trajectory
(ϵ(t), η(t), ω(t)) ∈ for all t ≥0. We have also shown that ˙V = −kdωT ω ≤0 on . There-
fore, all conditions in Theorem 24.3 are satisﬁed, and we may apply it. Making use of (24.60),
we readily ﬁnd that the set E in Theorem 24.1 is given by
E = {(ϵ, η, ω) ∈ : ∥ϵ∥≤1, |η| ≤1, ω = 0} .
(24.63)
We now search for the largest invariant set in E. For any trajectory contained in E, we see from
(24.63) that ω(t) ≡0, and that consequently ˙ω(t) ≡0 also. From the closed-loop equations
(24.54), we consequently see that any trajectory contained in E satisﬁes
˙ϵ = 0,
˙η = 0,
0 = −kpI−1ϵ,
which implies that ϵ(t) ≡0 and that η(t) is constant. By the unit length constraint on the
quaternion, this implies that η(t) ≡±1. Therefore, the largest invariant set in E is given by
M = {(ϵ, η, ω) ∈ : ϵ = 0, η = ±1, ω = 0} .
(24.64)
By application of Theorem 24.3, we conclude that ϵ(t) →0 and ω(t) →0 as t →∞. Since the
choice of initial condition (ϵ(0), η(0), ω(0)) was arbitrary (subject to the unit length constraint
in the initial quaternion), we conclude that this is true for any closed-loop trajectory. Hence,
we can conclude global convergence.
Useful features of the closed-loop system
• Our stability analysis has demonstrated that the PD-like quaternion and angular velocity
feedback in (24.53) will drive the attitude and angular velocity errors to zero regardless of
the initial attitude and angular velocity of the spacecraft. This is a very useful property when
large angle maneuvers are required.

454
Spacecraft Dynamics and Control: An Introduction
• An examination of the convergence analysis shows that no knowledge of the spacecraft
inertia matrix was required, other than it being positive deﬁnite, which is always true for a
real spacecraft. Hence, the global convergence property of the closed-loop system holds for
any real spacecraft. Therefore, the control law is inherently very robust. That is, even if we
assume inertia values in order to design the control gains based on closed-loop performance
requirements, errors in the assumed inertia values will not destabilize the closed-loop system
when the control law is applied to the real spacecraft.
24.5.1
Controller Gain Selection
Having demonstrated that the closed-loop system is globally convergent for any positive gains
kp > 0 and kd > 0, we now turn to the question of how to select appropriate control gains,
given some closed-loop performance requirements. One possible method is to select the gains
based on the desired steady-state performance. To facilitate the stability analysis in this chapter,
disturbance torques and measurement noise have been neglected. As we have shown, in the
absence of these, the steady-state error is zero. However, in reality, there will be disturbance
torques and measurement errors, which will lead to non-zero steady-state errors. Typically,
closed-loop performance speciﬁcations will include requirements that the steady-state errors
be small. As such, one approach to selecting the control gains is to examine the linearized
closed-loop equations for small angles and rates.
Let us therefore examine the small angle and rate approximations to the closed-loop equa-
tions (24.54). First, we note from the deﬁnition of the quaternion in Section 1.3.4, that the
small angle approximation implies that the vector part of the quaternion, ϵ, is small, and
consequently from the unit length constraint, η ≈±1. Now, assuming small ϵ and ω, we see
that the kinematics in (24.54) become to ﬁrst order
˙ϵ ≈±1
2ω,
˙η ≈0.
(24.65)
Note that the two possible signs for ˙ϵ arise from the fact that we have allowed η = ±1.
We shall resolve this issue shortly by selecting the sign of η that leads to a convergent
linear approximation (since we already know that the full nonlinear closed-loop equations
are convergent). Substituting (24.65) into the closed-loop dynamic equation in (24.54) and
neglecting higher order terms, we obtain
η2¨ϵ ≈I−1 	
−kpϵ −η2kd ˙ϵ

,
(24.66)
where it is understood that η = ±1. It will be useful to write (24.66) in ﬁrst order form for the
purposes of determining its stability. We have
˙ϵ
¨ϵ

=
⎡
⎣
0
1
−kp
2ηI−1
−kdI−1
⎤
⎦
ϵ
˙ϵ

.
(24.67)

Nonlinear Spacecraft Attitude Control
455
It will be useful to make a pair of coordinate transformations in order to be able to compute the
associated poles. First, let I1, I2 and I3 be the principal moments of inertia corresponding to
the inertia matrix I. As in Section 24.3.1, let C be a rotation matrix such that the corresponding
principal inertia matrix is given by (24.23). Now, consider the coordinate transformation
α = Cϵ.
(24.68)
Then, under this transformation, equations (24.67) become
˙α
¨α

=
⎡
⎣
0
1
−kp
2ηI−1
p
−kdI−1
p
⎤
⎦
α
˙α

.
(24.69)
Let
α =
⎡
⎣
α1
α2
α3
⎤
⎦.
Then, we can rewrite equations (24.69) as
⎡
⎢⎢⎢⎢⎢⎢⎣
˙α1
¨α1
˙α2
¨α2
˙α3
¨α3
⎤
⎥⎥⎥⎥⎥⎥⎦
=
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
0
1
0
0
0
0
−kp
2I1η
−kd
I1
0
0
0
0
0
0
0
1
0
0
0
0
−kp
2I2η
−kd
I2
0
0
0
0
0
0
0
1
0
0
0
0
−kp
2I3η
−kd
I3
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
⎡
⎢⎢⎢⎢⎢⎢⎣
α1
˙α1
α2
˙α2
α3
˙α3
⎤
⎥⎥⎥⎥⎥⎥⎦
.
(24.70)
The stability of equations (24.67) is equivalent to stability of equations (24.70). In fact, their
solutions have the same poles. Therefore, we shall analyze the stability of (24.70). Equation
(24.70) has the form
˙x = Ax.
Taking Laplace transforms, we obtain
(s1 −A) ˆx = x(0),
where ˆx = L (x(t)). The poles are now readily found to satisfy the characteristic equation
det (s1 −A) = 0,

456
Spacecraft Dynamics and Control: An Introduction
that is, the poles are the eigenvalues of the matrix A. It is straightforward to show that the
characteristic equation corresponding to (24.70) is

s2 + kd
I1
s + kp
2I1η
 
s2 + kd
I2
s + kp
2I2η
 
s2 + kd
I3
s + kp
2I3η

= 0.
(24.71)
Since kp, kd, I1, I2 and I3 are all positive, it can be immediately seen from equation (24.71)
that the closed-loop poles are asymptotically stable (have negative real part) if and only if η is
positive. Therefore, we set η = 1 in the linearized equations (24.66), to obtain
¨ϵ = I−1

−kp
2 ϵ −kd ˙ϵ

,
(24.72)
Now, suppose that as assumed in Chapter 17, the body frame Fb is a principal axes frame such
that
I =
⎡
⎣
Ix
0
0
0
Iy
0
0
0
Iz
⎤
⎦,
and let
ϵ =
⎡
⎣
ϵx
ϵy
ϵz
⎤
⎦.
Then, the linearized equations (24.72) take the form
¨ϵx = −kp
2Ix
ϵx −kd
Ix
˙ϵx,
¨ϵy = −kp
2Iy
ϵy −kd
Iy
˙ϵy,
(24.73)
¨ϵz = −kp
2Iz
ϵz −kd
Iz
˙ϵz.
Equations (24.73) are three identical decoupled second order differential equations, of the
same form as those considered extensively in Chapter 17 (linearized PD spacecraft attitude
control). Measurement noise and disturbance torques can readily be added to equations (24.73)
as needed. As such, similar linear control design techniques such as those presented in Chapter
17 (and subsequent chapters) may be used to design the control gains.
Notes
This chapter has presented a brief introduction to nonlinear control systems, with applications
to spacecraft attitude control. The ﬁelds of nonlinear control and its application to spacecraft

Nonlinear Spacecraft Attitude Control
457
attitude control are vast, and there is a signiﬁcant amount of literature in both books and journals
that the reader is encouraged to consult. Excellent texts on the subject of nonlinear control
include Khalil (2002) and Vidyasagar (2002). For an overview of many different applications
of nonlinear control to the spacecraft attitude control problem, the reader is suggested to
consult Wie (2008).
References
Khalil HK 2002 Nonlinear Systems 3rd edn. Prentice Hall, Upper Saddle River, NJ.
Vidyasagar M 2002 Nonlinear Systems Analysis 2nd edn. Society for Industrial and Applied Mathematics,
Philadelphia, PA.
Wie B 2008 Space Vehicle Dynamics and Control 2nd edn. American Institute of Aeronautics and Astronautics,
Reston, VA.


25
Spacecraft Navigation
In previous chapters we considered how to control the attitude of a spacecraft. However, before
attitude control can be attempted, the current attitude of the spacecraft must be estimated. We
say the attitude must be estimated because it is not possible to determine the exact attitude of
a spacecraft given that all sensors, such as sun sensors, star trackers, rate gyros, and others,
provide imperfect measurements that are corrupted by noise. As such, spacecraft navigation,
that is, determining what the actual attitude of a spacecraft is, really comes down to state
estimation. Strictly speaking, spacecraft navigation involves both orbit and attitude estimation.
We shall restrict ourselves to the attitude estimation problem, since it requires some special
considerations. However, the ﬁltering techniques developed in this chapter can be adapted for
the orbit estimation problem also.
In this chapter we will consider various techniques for spacecraft attitude estimation. In
particular, we will consider batch estimation approaches (weighted least squares) and the use
of the Kalman ﬁlter. As we shall see, because the system we are dealing with is nonlinear,
when it comes to Kalman ﬁltering we must use an extended Kalman ﬁlter (EKF). However, en
route to deriving the EKF we will investigate the standard Kalman ﬁlter. Both batch estimation
and the EKF have found many uses in other engineering disciplines.
25.1
Review of Probability Theory
As previously mentioned, noise corrupts all measurements. As such, one way of looking at
the spacecraft attitude estimation problem is determining how to ﬁlter noise in some optimal
way. Because noise is random in nature, we will rely on concepts from probability theory to
describe the properties of the noise that we are interested in ﬁltering.
25.1.1
Continuous Random Variables and Probability Density Functions
Consider a continuous random variable, x, and an associated probability density function
(pdf), p(x), where x can lie within the interval [a, b]. The random variable x is said to be
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

460
Spacecraft Dynamics and Control: An Introduction
distributed according to the pdf p(x). The pdf must satisfy the axiom of total probability,
which means that
 b
a
p(x)dx = 1.
(25.1)
The probability that x takes on a value between [α, β] is
Pr(α ≤x ≤β) =
 β
α
p(x)dx.
Consider a set of N continuous random variables, x = [x1 . . . xN]T , xi ∈[ai, bi], i =
1, . . . , N, and an associated joint probability density function (joint pdf), p(x) where
p(x) = p(x1, x2, . . . , xN).
We call x a continuous random vector. Even in the N-dimensional case p(x) must satisfy the
axiom of total probability, that is
 b
a
p(x)dx = 1,
(25.2)
which is short-hand notation for
 b
a
p(x)dx =
 bN
aN
· · ·
 b2
a2
 b1
a1
p(x1, x2, . . . , xN)dx1dx2 . . . dxN = 1,
where a = [a1 . . . aN ]T and b = [b1 . . . bN ]T .
Example 25.1 Consider a spacecraft equipped with one bias momentum wheel. According to
the manufacturer of the momentum wheel, the probability of failure of the momentum wheel
bearing is characterized by the pdf
p(x) =

0,
0 ≤x < T
c exp (−λx) ,
T ≤x ≤∞
(25.3)
where T = 730 (days) and λ = 1/100 (1/days).
1. What value must c take? What are the units of c? Given T , λ, and the c just computed, plot
p(x).
2. What is the probability that the momentum wheel bearing will fail within 730 days? Between
730 days and 1095 days (i.e., between 2 and 3 years)?

Spacecraft Navigation
461
0
1000
2000
3000
4000
0
0.002
0.004
0.006
0.008
0.01
x (days)
p(x)
Figure 25.1
Bearing pdf
Solution
1. The pdf given in (25.3) must satisfy the axiom of total probability. From (25.1) we have the
following:
 ∞
−∞
p(x)dx =
 T
0
0 dx +
 ∞
T
c exp (−λx) dx
= −c
λ exp (−λx)

∞
T
= c
λ exp (−λT )
= 1.
Thus, we have that c =
λ
exp(−λT ). Given that the units of λ are 1/days, the units of c are
1/days as well. The plot of p(x) given T = 730 days and c as computed is shown in Figure
25.1 .
2. The probability the momentum wheel bearing will fail within 730 days can be computed
using (25.1.1):
Pr(0 ≤x ≤730) =
 730
0
p(x)dx
=
 730
0
0 dx
= 0.

462
Spacecraft Dynamics and Control: An Introduction
Similarly, the probability the momentum wheel bearing will fail between 730 days and 1095
days can be computed using (25.1.1):
Pr(730 ≤x ≤1095) =
 1095
730
c exp (−λx) dx
= −c
λ exp (−λx)

1095
730
= 0.9740.
25.1.2
Mean and Covariance
Consider a continuous random variable, x ∈[ai, bi], and a pdf, p(x). The mean, or expected
value of x is
¯x = E[x] =
 b
a
xp(x)dx,
where E[·] is the expectation operator. The variance is
σ 2 = E[(x −¯x)2] =
 b
a
(x −¯x)2 p(x)dx.
The standard deviation is simply σ. For a general function of the random variable x, say f (x),
the expectation is
E[ f (x)] =
 b
a
f (x)p(x)dx.
Notice that the expectation operator is linear. To see this, say both f (x) and g(x) are
functions of x where x is distributed according to p(x), and k is a constant. Then
E[kx] =
 b
a
kxp(x)dx = k
 b
a
xp(x)dx = kE[x] = k ¯x,
E[ f (x) + g(x)] =
 b
a
( f (x) + g(x)) p(x)dx = E[ f (x)] + E[g(x)].
Thus, the expectation operator is a linear one.
Now consider the N-dimensional case where we have x = [x1 . . . xN]T , xi ∈[ai, bi],
i = 1, . . . , N, and a joint pdf, p(x). The mean of the continuous random vector x is
¯x = E[x] =
 b
a
xp(x)dx,

Spacecraft Navigation
463
while the covariance is
Q = E[(x −¯x)(x −¯x)T ] =
⎡
⎢⎣
σ 2
1
· · ·
σ1N
...
...
...
σN1
· · ·
σ 2
N
⎤
⎥⎦
where
σi j = E[(xi −¯xi)(x j −¯x j)],
i, j = 1, . . . , N.
For a general matrix function of the random vector x, F(x), the expectation is
E[F(x)] =
 b
a
F(x)p(x)dx.
Note that the covariance Q is a N × N matrix. In fact, it is a symmetric positive semi-deﬁnite
matrix. Recall that a matrix is symmetric if Q = QT . If a matrix is positive semi-deﬁnite,
usually written Q ≥0, it means that xT Qx ≥0 for all x ∈RN (written ∀x ∈RN). There are
many ways to check if a matrix, such as Q, is positive semi-deﬁnite. For instance, if λ {Q} ≥0
where λ {·} is the minimum eigenvalue of Q, then Q ≥0.
As in the one dimensional case, the expectation operator is still linear. Consider the functions
f(x) and g(x) where x is distributed according to p(x), and the constant matrix K. Then
E[Kx] = KE[x] = K¯x,
E[f(x) + g(x)] = E[f(x)] + E[g(x)],
indicating the expectation operator is linear.
Example 25.2 A continuous random variable is called uniform if its pdf is constant between
[a, b].
1. What is p(x)?
2. If a = 1 and b = 3 ﬁnd the mean, ¯x, and the variance σ 2. Draw p(x).
Solution
1. Recall that p(x) must satisfy the axiom of total probability given in (25.1). If p(x) = c
between [a, b] where c is a constant number then
1 =
 b
a
p(x)dx =
 b
a
cdx = c(b −a).
Solving for c we have that c =
1
b−a and
p(x) =

1
b−a
x ∈[a, b]
0
otherwise .

464
Spacecraft Dynamics and Control: An Introduction
0
1
2
3
4
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
x
p(x)
Figure 25.2
Uniform pdf where a = 1 and b = 3
2. If a = 1 and b = 3 then the mean of x, ¯x, is
¯x =
 3
1
xp(x)dx =
 3
1
x
2 dx = x2
4

3
1
= 2,
and the variance of x, σ 2, is
σ 2 =
 3
1
(x −¯x)2 p(x)dx =
 3
1
(x −2)2
2
dx = 1
3.
Shown in Figure 25.2 is p(x).
25.1.3
Gaussian Probability Density Functions
A continuous random variable is said to have a normal or Gaussian distribution if the pdf
associated with the random variable x is given by
p(x|¯x, σ 2) =
1
√
2πσ 2 exp

−(x −¯x)2
2σ 2

.

Spacecraft Navigation
465
−1
0
1
2
3
4
5
0
0.5
1
1.5
x
p(x)
σ = 1/3
σ = 2/3
σ = 1
Figure 25.3
Gaussian pdfs where ¯x = 2 and σ takes on values of 1/3, 2/3, and 1
Thepdf p(x|¯x, σ 2)iscalled aconditional probabilitydensityfunction(conditional pdf) because
x is conditioned on ¯x, the mean, and σ 2, the variance (where σ is the standard deviation).
Being a pdf, it can be shown that
 ∞
−∞
1
√
2πσ 2 exp

−(x −¯x)2
2σ 2

dx = 1,
the mean is
¯x =
 ∞
−∞
x
1
√
2πσ 2 exp

−(x −¯x)2
2σ 2

dx,
and the variance is
σ 2 =
 ∞
−∞
(x −¯x)2
1
√
2πσ 2 exp

−(x −¯x)2
2σ 2

dx.
Shown in Figure 25.3 are three normal distributions. The mean of each distribution is ¯x = 2,
while the standard deviation of each are 1/3, 2/3, and 1, respectively. A short-hand notation
for indicating x is normally distributed is x ∼N(¯x, σ 2).
In the N-dimensional case, a continuous random vector x ∈RN is said to have a normal or
Gaussian distribution if the pdf associated with the random vector x is given by
p(x|¯x, Q) =
1

(2π)N det Q
exp

−1
2 (x −¯x)T Q−1 (x −¯x)

,

466
Spacecraft Dynamics and Control: An Introduction
where ¯x is the mean and Q is the covariance matrix. The covariance matrix is symmetric and
positive deﬁnite (thus ensuring Q is not singular, and thus Q−1 exists). The pdf p(x|¯x, Q) is
also a conditional pdf because x is conditioned on ¯x and Q. Being a pdf, it can be shown that
 ∞
−∞
1

(2π)N det Q
exp

−1
2 (x −¯x)T Q−1 (x −¯x)

dx = 1,
the mean is
¯x =
 ∞
−∞
x
1

(2π)N det Q
exp

−1
2 (x −¯x)T Q−1 (x −¯x)

dx,
and the covariance is
Q =
 ∞
−∞
(x −¯x)(x −¯x)T
1

(2π)N det Q
exp

−1
2 (x −¯x)T Q−1 (x −¯x)

dx.
A short-hand notation for indicating x is normally distributed is x ∼N(¯x, Q).
25.1.4
Discrete-Time White Noise
Consider a sequence of discrete measurements, yk = xk + wk, where yk ∈RN is the measure-
ment at time k, xk ∈RN is the true value of the quantity being measured at k, and wk ∈RN
is noise. All real systems are corrupted by noise. Noise can represent unknown disturbances,
sensor distortion (that is, electrical noise), or model uncertainty. Noise is often assumed be
normally distributed with a mean of zero, wk ∼N(0, Qk), and white,
E[wkwT
l ] = Qkδkl,
where δkl = 1 when k = l and δkl = 0 when k ̸= l, which is to say the noise at one instant is
completely uncorrelated with the noise at any other instant.
25.1.5
Simulating Noise
If we were to simulate a spacecraft mission, to make the simulation realistic we should corrupt
our simulated measurements, such as the position of a star, the Earth’s magnetic ﬁeld, and so
on, with noise at every time-step within the simulation. As such, given yk = xk + wk where
yk ∈RN is a measurement at a particular time-step k, xk ∈RN is the true value of the quantity
being measured, and wk ∈RN is zero-mean Gaussian white noise, wk ∼N(0, Qk), how do
we actually generate wk at each time-step in order to simulate the measurement properly?
Let us assume that the mean and covariance of the noise do not change with time, that is,
wk ∼N(0, Q) where Q is constant. We start by performing an eigenvalue decomposition on
Q:
Q = EE−1,

Spacecraft Navigation
467
where the N eigenvectors of Q are the columns of E, and the eigenvalues of Q, λi, i = 1 . . . N,
are placed along the diagonal of . Because Q is symmetric E−1 = ET , thus
Q = EET .
Next, we compute vk = [vk,1 . . . vk,N]T where vk,i = √λirk,i, i = 1 . . . N, and rk,i is an inde-
pendent Gaussian random variable with ¯rk,i = 0 and σk,i = 1. We deﬁne rk = [rk,1 . . . rk,N]T
and note that E[rk] = 0 and E[rkrT
k ] = 1, which is to say rk ∼N(0, 1) (which is called a
standard normal distribution). Most computer programming languages, such as C, Fortran,
or MATLAB R⃝, have built in functions that can generate each rk,i. Last, we set wk = Evk to
generate the noise sample.
To conﬁrm that we have indeed generated a noise sample that has zero mean and covariance
Q, we will compute each. We will start with the mean of our sample:
E[wk] = E[Evk] = EE[vk] = E
√
E[rk] = 0
owing to the fact that E[rk] = 0. Notice that the matrices E and
√
 can be brought out of the
expectation operator because the expectation operator is a linear operator. Thus, wk has zero
mean. Next, consider computation of the covariance of wk:
E[wkwT
k ] = E[EvkvT
k ET ]
= E[E
√
rkrT
k
√

T ET ]
= E
√
 E[rkrT
k ]
  
=1
√

T ET
= E
√

√

T ET
= EET
= Q.
Again, the matrices E and
√
 can be brought out of the expectation operator because of the
linear nature of E[·]. Thus, the covariance of wk is indeed Q.
25.2
Batch Approaches for Spacecraft Attitude Estimation
Consider a spacecraft orbiting the Earth. Embedded within the spacecraft is a reference frame,
Fb, while centred in the Earth is an inertial frame, Fa, the ECI frame. The spacecraft is
equipped with N sensors, such as a magnetometer, a sun sensor, etc. These sensors provide
k = 1, . . . , N measurements in the body frame, ⃗sk = ⃗F T
b sbk. Given knowledge of the orbital
position of the spacecraft and various mathematical models (e.g., a model of the Earth’s
magnetic ﬁeld), the vectors are assumed to be known in the inertial frame, ⃗sk = ⃗F T
a sak. For
convenience, ⃗sk vectors are normalized: ⃗ˆsk = ⃗F T
b ˆsbk = ⃗F T
a ˆsak
Given all these measurements, how do we go about estimating the attitude of the space-
craft? More formally, how do we estimate the rotation matrix Cba given the k = 1, . . . , N

468
Spacecraft Dynamics and Control: An Introduction
measurements, ⃗ˆsk = ⃗F T
b ˆsbk = ⃗F T
a ˆsak, where ˆsbk = Cbaˆsak? In this section we will look at two
methods that solve this problem by posing a weighted-least squares optimization problem:
Davenport’s q-Method and the QUEST Algorithm. We will also consider a very simple
attitude estimation method that uses only two measurements, the TRIAD algorithm. Although
the TRIAD algorithm can be derived within an optimization framework, we will present a
deterministic derivation. These attitude estimation methods are called batch methods because
the attitude of the spacecraft is estimated given a “batch” of measurements all at one time.
25.2.1
Wahba’s Problem
Given ˆsbk and ˆsak our objective is to determine Cba subject to CT
baCba = 1 such that
ˆsbk = Cbaˆsak. Said another way, we want to minimize rk where rk = ˆsbk −Cbaˆsak subject
to CT
baCba = 1. To this end, consider the following constrained optimization problem:
Minimize
J(Cba) = 1
2
N

k=1
wkrT
k rk
= 1
2
N

k=1
wk (ˆsbk −Cbaˆsak)T (ˆsbk −Cbaˆsak)
(25.4)
such that
CT
baCba = 1
where wk > 0 is a weight. The objective function to be minimized is J(Cba), while the
constraint that must be satisﬁed is CT
baCba = 1. This optimization problem was originally
posed by Grace Wahba in 1965, and is often called Wahba’s Problem.
We introduce the weights wk in order to place more emphasis on certain measurements.
For instance, say we have a star tracker and a magnetometer. In general, a magnetometer
measurement is very noisy compared to a star tracker measurement. As such, we want to
place more emphasis on our star tracker measurement as compared to our magnetometer
measurement while solving for Cba by minimizing (25.4). Often the weights are chosen to be
wk = 1/σ 2
k where σ 2
k is the variance of the measurement. As such, if we are very conﬁdent in
a measurement (that is, σ 2
k is very small) then the weight wk will be very large, placing more
emphasis on that measurement in the objective function in (25.4). Conversely, if we are not
conﬁdent in a measurement (that is, σ 2
k is very large) then wk will be very small, emphasizing
that measurement less in the objective function in (25.4).
25.2.2
Davenport’s q-Method
The q-Method, developed by Paul Davenport in a 1968 NASA report, reposes Wahba’s problem
as a maximization problem with the constraint CT
baCba = 1, and then parameterizes Cba in
terms of quaternions, q =

ϵT η
T while replacing the constraint CT
baCba = 1 with the unit
length quaternion constraint qT q = 1.

Spacecraft Navigation
469
Consider Wahba’s Problem once more, but with the objective function of (25.4) rearranged
in the following way:
J(Cba) = 1
2
N

k=1
wk (ˆsbk −Cbaˆsak)T (ˆsbk −Cbaˆsak)
= 1
2
N

k=1
wk
ˆsT
bkˆsbk −2ˆsT
bkCbaˆsak + ˆsT
akCT
baCbaˆsak

=
N

k=1
wk

1 −ˆsT
bkCbaˆsak

=
 N

k=1
wk

−
 N

k=1
wkˆsT
bkCbaˆsak

(25.5)
where ˆsT
bkˆsbk = 1, CT
baCba = 1, and ˆsT
akˆsak = 1 have been used to simplify. The summation
of all the weights is a constant number. Hence, minimizing the objective function J(Cba) is
equivalent to maximizing the objective function
ˆJ(Cba) =
N

k=1
wkˆsT
bkCbaˆsak.
(25.6)
Our problem is to now ﬁnd Cba that maximizes ˆJ(Cba) given in (25.6) subject to the constraint
CT
baCba = 1. To solve this problem we will ﬁrst simplify (25.6) using the trace operation. The
trace of a matrix A ∈Rn×n is
tr [A] = tr

AT 
=
n

i=1
aii =
n

i=1
λi
where λi, i = 1 . . . n are the eigenvalues of A. Also, if A = BCD where B ∈Rn×m, C ∈Rm×p,
and D ∈Rp×n then
tr [A] = tr [BCD] = tr [CDB] = tr [DBC] .
Using the trace operation we can write the objective function in (25.6) as
ˆJ(Cba) = tr
 N

k=1
wkˆsT
bkCbaˆsak

= tr
 N

k=1
wkCbaˆsakˆsT
bk

= tr

Cba
 N

k=1
wkˆsakˆsT
bk




BT

.
(25.7)

470
Spacecraft Dynamics and Control: An Introduction
Rather than attempting to maximize (25.7) subject to CT
baCba = 1, quaternions will be used
to parameterize the rotation matrix, then the quaternion that maximizes (25.7) subject to the
constraint qT q = 1 will be found. To this end, note that equation (1.33) in Section 1.3.4 may
be rewritten as
Cba = (η2 −ϵT ϵ)1 + 2ϵϵT −2ηϵ×.
(25.8)
Substituting (25.8) into the objective function (25.7) and simplifying gives
ˆJ(q) = tr

η2BT −ϵT ϵBT + 2ϵϵT BT −2ηϵ×BT 
= η2tr

BT 
−ϵT ϵtr

BT 
+ 2ϵT BT ϵ −2ηtr

ϵ×BT 
.
Letting k22 = tr

BT 
= tr [B] and noting that 2ϵT BT ϵ = ϵT 
B + BT 
ϵ we have
ˆJ(q) = ϵT 
B + BT −k221

ϵ −2ηtr

ϵ×BT 
+ η2k22.
The term −2ηtr

ϵ×BT 
can be simpliﬁed in the following way:
−2ηtr

ϵ×BT 
= −2ηtr
⎡
⎢⎣
⎡
⎣
0
−ϵ3
ϵ2
ϵ3
0
−ϵ1
−ϵ2
ϵ1
0
⎤
⎦
⎡
⎣
B11
B12
B13
B21
B22
B23
B31
B32
B33
⎤
⎦
T ⎤
⎥⎦
= 2η [ϵ1(B23 −B32) + ϵ2(B31 −B13) + ϵ3(B12 −B21)] .
Letting k12 = [(B23 −B32) (B31 −B13) (B12 −B21)]T we can write ˆJ(q) as
ˆJ(q) = ϵT 
B + BT −k221

ϵ + ηϵT k12 + ηkT
12ϵ + η2k22
=
ϵT
η K11
k12
kT
12
k22




K
ϵ
η

= qT Kq
(25.9)
where K11 = B + BT −k221 = KT
11. Our problem is to now ﬁnd q that maximizes (25.9)
subject to the constraint qT q = 1. To maximize (25.9) subject to the unit length quaternion
constraint we will use a Lagrange multiplier to deﬁne a new objective function that consists
of the objective function ˆJ(q) augmented with the constraint 1 −qT q = 0:
ˆˆJ(q, λ) = qT Kq + λ

1 −qT q

.
(25.10)

Spacecraft Navigation
471
To ﬁnd the optimal quaternion, we take the derivative ˆˆJ(q, λ) with respect to q and λ and set
the results to zero:
∂ˆˆJ(q, λ)
∂q
= qT K −λqT = 0,
which can be written as
Kq = λq.
(25.11)
Also, we have
∂ˆˆJ(q, λ)
∂λ
= 1 −qT q = 0,
which is the quaternion constraint. Hence, maximizing (25.10), which is equivalent to maxi-
mizing (25.9) subject to the constraint qT q = 1, reduces to the eigenvalue problem shown in
equation (25.11). However, there are four eigenvalues and four eigenvectors associated with
the eigenproblem (25.11) owing to the fact K is a 4 × 4 matrix. Which eigenpair maximizes
(25.10)? To ﬁnd the q that maximizes the objective function ˆˆJ(q) we must ﬁnd the largest
eigenvalue and its corresponding eigenvector associated with (25.11). To see that the largest
eigenvalue ¯λ and corresponding eigenvector (i.e., quaternion) ¯q maximize (25.9), consider any
eigenvalue λ with corresponding unit eigenvector q satisfying (25.11). The associated value
of (25.9) is
ˆJ(q) = qT Kq

=λq
= λ qT q

=1
= λ,
(25.12)
which is clearly maximized when λ = ¯λ and q = ¯q. Thus, ¯q is the optimal quaternion that
along with (25.8) provides the optimal estimate of Cba.
25.2.3
The QUEST Algorithm
Davenport’s q-Method reduces Wahba’s problem to an eigenvalue problem where optimal
attitude estimate corresponds to the eigenvector (that is, the quaternion) associated with the
optimal eigenvalue. Solving an eigenvalue problem on a desktop computer is trivial, but solving
the same eigenvalue problem on a spacecraft ﬂight computer with limited memory may not
be. To circumvent the need to solve an eigenvalue problem Malcolm Shuster developed the
QUEST algorithm, which stands for “QUaternion ESTimator”, in 1978.
Consider the eigenvalue problem of (25.11) once more:
K11
k12
kT
12
k22
 ϵ
η

=
K11ϵ + k12η
kT
12ϵ + k22η

= λ
ϵ
η


472
Spacecraft Dynamics and Control: An Introduction
which can be written as two separate equations,
K11ϵ + k12η = λϵ,
(25.13)
kT
12ϵ + k22η = λη.
(25.14)
Recalling that K11 = S −k221 where S = B + BT we can write (25.13) as
((λ + k22)1 −S))ϵ = k12η.
Dividing the above equation by η gives
((λ + k22)1 −S)) p = k12
where p = ϵ/η = a tan (φ/2) is the Gibbs vector. By taking the inverse of ((λ + k22)1 −S))
we can solve for p:
p = ((λ + k22)1 −S))−1 k12.
(25.15)
The associated quaternion can be computed from the Gibbs vector in the following way:
q =
1

1 + pT p
p
1

.
In solving for q we have taken the inverse of ((λ + k22)1 −S)). Although this matrix is only a
3 × 3 matrix, it is best if we can avoid taking its inverse. It can be shown that
((λ + k22)1 −S))−1 = 1
γ

α1 + βS + S2
(25.16)
where
α = λ2 −k2
22 + tr

adj(S)

,
β = λ −k22,
γ = (λ + k22)α −det S,
and, as before, k22 = tr[B] = 1
2tr[S]. Note that adj(S) is the classical adjoint of the matrix S.
By substituting (25.16) into (25.15) and using the best estimate of λ we have
x =

α1 + βS + S2
k12
where p = x/γ and
q =
1

γ 2 + xT x
x
γ

,
(25.17)
the quaternion associated with the spacecraft attitude.

Spacecraft Navigation
473
The preceding calculations provide q given λ. The estimate of the attitude will not be the
correct estimate unless λ is equal to, or at least very close to, the optimal eigenvalue associated
with the eigenproblem of (25.11). Next we will consider how to ﬁnd ¯λ without actually solving
the eigenvalue problem of (25.11). Having found ¯λ, the optimal estimate of q, ¯q, can be found
from (25.17). To start, by rearranging (25.14) and dividing by η we have
kT
12p = λ −k22.
(25.18)
Next, by premultiplying (25.15) by kT
12 and using (25.16) we have
kT
12p = 1
γ kT
12

α1 + βS + S2
k12.
(25.19)
Together (25.18) and (25.19) yield
λ = k22 + 1
γ kT
12

α1 + βS + S2
k12.
After some algebra it can be shown that
λ4 −(a + b)λ2 −cλ + (ab + ck22 −d) = 0
(25.20)
where
a = k2
22 −tr

adj(S)

, b = k2
22 + kT
12k12, c = det[S] + kT
12Sk12, d = kT
12S2k12.
The roots of (25.20) can be found by using Newton’s method: let f (λ j) = λ4
j −(a + b)λ2
j −
cλ j + (ab + ck22 −d), then with an initial guess λ1, solve for λ j in an iterative manner via
λ j+1 = λ j −f (λ j)
f ′(λ j)
until |λ j+1 −λ j| < ϵtol where ϵtol is a tolerance. Recall that we are interested in the root that
corresponds to the optimal estimate attitude estimate, ¯λ. In order to ﬁnd ¯λ, Newton’s method
must be given an initial guess that is close to ¯λ. It turns out that the optimal eigenvalue
associated with optimal attitude estimate is approximately equal to the sum of the weights
wk. This can be shown in the following way. To start, assume we have an optimal estimate of
the attitude that can be expressed in terms of a quaternion, ¯q, or a rotation matrix, ¯Cba. When
the attitude estimate is very close to the true estimate ˆsbk ≈¯Cbaˆsak. Therefore, our original
objective function given in (25.5) is approximately
J( ¯Cba) ≈0.

474
Spacecraft Dynamics and Control: An Introduction
Recognizing the ﬁnal term in (25.5) as the alternative objective function ˆJ(Cba) from (25.6),
we have
ˆJ(Cba) ≈
 N

k=1
wk

.
Since (25.6) and (25.9) are equivalent, we have using (25.12)
¯λ ≈
N

k=1
wk.
Therefore, by setting λ1 = N
k=1 wk when solving for λ we can expect Newton’s method to
converges to a value that is very close to ¯λ.
25.2.4
The TRIAD Algorithm
The TRIAD algorithm is a simple attitude estimation method that uses only two (nonparallel)
vector measurements. The TRIAD algorithm was developed before the q-Method or QUEST,
and was originally known as the Algebraic Method. Because the TRIAD algorithm is simple
and computationally less demanding than the q-Method and QUEST, it is worth mentioning.
Consider a spacecraft equipped with two sensors, for example, a sun sensor that provides ⃗ˆs
and a magnetometer that provides ⃗ˆb. (The vector measurements are normalized.) As with the
q-Method and QUEST, it is assumed that the components of ⃗ˆs and ⃗ˆb in both Fb and Fa, the
body frame and an inertial frame, are known. Additionally, it is assumed throughout that ⃗ˆs and
⃗ˆb are not parallel. The rotation matrix Cba deﬁnes the relationship between components of ⃗ˆs
and ⃗ˆb in Fb and Fa: ˆsb = Cbaˆsa, ˆbb = Cba ˆba. The TRIAD algorithm is composed of three
steps.
Step 1: Create an intermediate reference frame, ⃗F T
t = [⃗xt ⃗yt ⃗zt], where
⃗xt = ⃗ˆs,
⃗yt =
⃗ˆs × ⃗ˆb
|⃗ˆs × ⃗ˆb|
,
⃗zt = ⃗xt × ⃗yt.
Step 2: Express the components of Ft in both Fa and Fb, that is
⃗xt = ⃗F T
a xt,a = ⃗F T
a ˆsa,
⃗yt = ⃗F T
a yt,a = ⃗F T
a
ˆs×
a ˆba
|ˆs×
a ˆba|
,
⃗zt = ⃗F T
a zt,a = ⃗F T
a x×
t,ayt,a
and
⃗xt = ⃗F T
b xt,b = ⃗F T
b ˆsb,
⃗yt = ⃗F T
b yt,b = ⃗F T
b
ˆs×
b ˆbb
|ˆs×
b ˆbb|
,
⃗zt = ⃗F T
b zt,b = ⃗F T
b x×
t,byt,b.

Spacecraft Navigation
475
Step 3: Solve for Cba. To do so, recall from Section 1.3 that
Cat =

xt,a yt,a zt,a

,
Cbt =

xt,b yt,b zt,b

.
Furthermore, recall from Section 1.3 that
Cba = CbtCta,
and that Cta = CT
at. Therefore, it follows that
Cba = CbtCT
at.
Notice that to compute Cba we have simply arranged the components of various vectors in
a matrix form, and then multiplied two matrices together.
25.2.5
Example
We will now compute the attitude of a spacecraft given vector measurements using the q-
Method, QUEST, and the TRIAD algorithm. Say the true rotation matrix describing a space-
craft’s attitude at a particular instant is Cba and we have k = 1 . . . N vector measurements
provided by star trackers, sun sensors, a magnetometer, and other sensors. The measurements
are not perfect, and we assume that are they are characterized by
ˆsbk = Cbaˆsak + vk
(25.21)
where vk is noise that is constrained to satisfy vT
k Cbaˆsak = 0. The constraint vT
k Cbaˆsak = 0
ensures the noise is perpendicular to the Cbaˆsak, which ensures that the lengths of ˆsbk and
ˆsak are the same to ﬁrst order. This measurement model is often referred to as the QUEST
measurement model. The noise is assumed to be Gaussian with
E[vk] = 0,
E[vkvT
k ] = σ 2
k

1 −(Cbaˆsak)(Cbaˆsak)T 
.
On a real mission we would be given ˆsak (based on various models, such as a star catalog,
a geomagnetic ﬁeld model, etc.), the measurements ˆsbk, the statistics σk, and then we would
compute Cba using the q-Method, QUEST, or the TRIAD algorithm. In this example we are
given ˆsak and σk, and using the QUEST measurement model we will generate the measurements
ˆsbk. To do so, we begin by drawing noise samples, v′
k, constrain the samples to be perpendicular
to Cbaˆsak via vk = −(Cbaˆsak)×(Cbaˆsak)×v′
k, and then generate ˆsbk via equation (25.21) which
is further normalized. For this numerical example we are given
Cba = Cz(60◦)Cy(−30◦)Cx(45◦) =
⎡
⎣
0.4330
0.4356
0.7891
−0.7500
0.6597
0.0474
−0.5000
−0.6124
0.6124
⎤
⎦,
sa1 =
⎡
⎣
0
1
2
⎤
⎦,
sa2 =
⎡
⎣
1
3
0
⎤
⎦,
sa3 =
⎡
⎣
−5
0
1
⎤
⎦,
sa4 =
⎡
⎣
1
−1
4
⎤
⎦,
sa5 =
⎡
⎣
1
1
1
⎤
⎦,

476
Spacecraft Dynamics and Control: An Introduction
which are all normalized to obtain ˆsak. For the measurement noise, we have the statistics
σ1 = 0.0100,
σ2 = 0.0325,
σ3 = 0.0550,
σ4 = 0.0775,
σ5 = 0.1000.
Correspondingly, we obtain the measurements
ˆsb1 =
⎡
⎣
0.9082
0.3185
0.2715
⎤
⎦,
ˆsb2 =
⎡
⎣
0.5670
0.3732
−0.7343
⎤
⎦,
ˆsb3 =
⎡
⎣
−0.2821
0.7163
0.6382
⎤
⎦,
ˆsb4 =
⎡
⎣
0.7510
−0.3303
0.5718
⎤
⎦,
ˆsb5 =
⎡
⎣
0.9261
−0.2053
−0.3166
⎤
⎦,
We take as weights wk = 1/σ 2
k . For the TRIAD algorithm, we use only the ﬁrst two mea-
surements (k = 1, 2). The q-Method and QUEST provide identical results, with the estimated
rotation matrix being
¯Cba =
⎡
⎣
0.4153
0.4472
0.7921
−0.7562
0.6537
0.0274
−0.5056
−0.6104
0.6097
⎤
⎦.
Using the TRIAD algorithm, the estimated rotation matrix is
¯Cba =
⎡
⎣
0.4156
0.4504
0.7902
−0.7630
0.6456
0.0333
−0.4952
−0.6167
0.6119
⎤
⎦
is the estimated attitude. The performance index for each estimate of the rotation matrix,
J( ¯Cba), is tabulated in Table 25.1. We can also compare the performance of each method by
computing the rotation angle, φe associated with rotation matrix error. The relationship between
the estimated attitude, ¯Cba, the true attitude, Cba, and the attitude error is ¯Cba = Cba,eCba,
and therefore Cba,e = ¯CbaCT
ba where Cba,e is the attitude error. The rotation angle associated
with Cba,e is cos φe = 1
2(tr[Cba,e] −1). The rotation angle associated with the error of each
method is also presented in Table 25.1.
Table 25.1
Performance and error of the attitude
estimate provided by the q-Method, QUEST, and the
TRIAD algorithm
TRIAD
q-Method
QUEST
J( ¯Cba)
4.2449
4.0333
4.0333
φe
1.3622◦
1.2644◦
1.2644◦

Spacecraft Navigation
477
25.3
The Kalman Filter
In the previous section we considered the problem of estimating the attitude of a spacecraft
given many vector measurements. Unfortunately, as new measurements become available
the previous attitude estimate is not used to compute the new attitude estimate. One would
think that the previous attitude estimate could be quite useful in determining the new attitude
estimate. Additionally, only vector measurements were used; it would ideal if we could use rate
measurements or even knowledge of the spacecraft kinematics and dynamics to somehow help
estimate the spacecraft attitude. In this section we will look at the Kalman ﬁlter, a sequential
estimator that has a predictor-corrector structure. First the system state (which is related to
the spacecraft attitude) is predicted given the previous estimate of the state along with a
model of the system kinematics and dynamics. Then, the state estimate is corrected using the
measurements that become available. Additionally, using the Kalman ﬁlter we can directly
compute the covariance associated with the state estimate, providing us with a measure of
uncertainty (or conﬁdence) in the state estimate.
25.3.1
The Discrete-Time Kalman Filter
Consider the following linear discrete-time system:
xk = Fk−1xk−1 + Gk−1uk−1 + Lk−1wk−1
(25.22)
yk = Hkxk + Mkvk.
(25.23)
Equation (25.22) is called the process or plant model, where the n dimensional system state is
xk, uk is the known control input, and wk ∼N(0, Qk) is the process noise. The measurement
model in (25.23) describes the relationship between a measurement, yk, and the state, xk. The
measurement noise is vk ∼N(0, Rk). Not only are the process and measurement noise zero
mean and Gaussian, but both wk and vk are white and uncorrelated with each other meaning
E[vkwT
k ] = 0 for all k.
At this point, we must discuss the concept of observability. A discrete-time system is
observable if for any initial state x0 and some ﬁnal time k the initial state x0 can be uniquely
determined from knowledge of the input u j and the output y j for all j ∈[0, k]. If a system is
observable then not only can the initial state be determined, but all states between the initial
and ﬁnal time can be determined from the measurements and knowledge of the control input.
Note that the deﬁnition of observability assumes no process or measurement noise. If the
system is time-invariant (so that Fk = F, Gk = G, Hk = H do not depend on time), then the
system is observable if and only if
O =
HT
(HF)T
· · ·
(HFn−1)T T
has rank n.
Before deriving the Kalman ﬁlter, let us deﬁne various quantities. The Kalman ﬁlter has
a predictor-corrector structure. Let ˆx−
k be the estimate of the state before a measurement has
been processed; this is the predicted state estimate, or the a priori state estimate. The error
between the true state and the predicted state estimate is e−
k = xk −ˆx−
k . Let ˆxk be the estimate

478
Spacecraft Dynamics and Control: An Introduction
of the state after a measurement has been processed; this is the corrected state estimate, or the
a posteriori state estimate. Likewise, the error between the true state and the corrected state
estimate is ek = xk −ˆxk. We will assume that the process and measurement noise are also
uncorrelated with both the a priori and a posteriori state estimates, which means
E[e−
k wT
k ] = 0,
E[ekwT
k ] = 0,
E[e−
k vT
k ] = 0,
E[ekvT
k ] = 0,
for any k.
Using the deﬁnitions of e−
k and ek we can write out the a priori covariance, P−
k , and the a
posteriori covariance, Pk:
P−
k = E

e−
k e−
k
T 
= E

(xk −ˆx−
k )(xk −ˆx−
k )T 
,
Pk = E

ekeT
k

= E

(xk −ˆxk)(xk −ˆxk)T 
.
These covariance matrices represent the conﬁdence (or uncertainty) of our a priori and a
posteriori estimates, ˆx−
k and ˆxk. For instance, if Pk is “small” we can be conﬁdent ˆxk is a good
estimate of the true state xk. If Pk is “large”, we cannot be conﬁdent that our estimate closely
resembles the true state.
25.3.1.1
The Prediction Step
As mentioned previously, the Kalman ﬁlter has a predictor-corrector structure. We ﬁrst predict
ˆx−
k , the a priori state estimate, and then correct the a priori estimate using a measurement
giving us ˆxk, the a posteriori state estimate. The prediction step is nothing but a prediction of
the state given the process model in (25.22) and the best previous estimate ˆxk−1:
ˆx−
k = Fk−1ˆxk−1 + Gk−1uk−1.
Notice that the control input, uk−1, is known. Also notice that there is no noise term in the
prediction step because we don’t know, and never will know, the noise. Given this prediction
and the process model in (25.22), the a priori estimation error becomes
e−
k = xk −ˆx−
k
= Fk−1(xk−1 −ˆx+
k−1) + Lk−1wk−1
= Fk−1ek−1 + Lk−1wk−1.
This expression for e−
k can be used to ﬁnd an expression for P−
k :
P−
k = E

e−
k e−T
k

= E

(Fk−1ek−1 + Lk−1wk−1)(Fk−1ek−1 + Lk−1wk−1)T 
= E

Fk−1ek−1eT
k−1FT
k−1 + 2Lk−1wk−1eT
k−1FT
k−1 + Lk−1wk−1wT
k−1LT
k−1

= Fk−1E

ek−1eT
k−1

FT
k−1 + 2Lk−1E

wk−1eT
k−1

FT
k−1
+Lk−1E

wk−1wT
k−1

LT
k−1.

Spacecraft Navigation
479
Recall that wk−1 is uncorrelated with ek−1, and thus E

wk−1eT
k−1

= 0. It follows that the a
priori covariance update is then
P−
k = Fk−1Pk−1FT
k−1 + Lk−1Qk−1LT
k−1
where Pk−1 = E

ek−1eT
k−1

and Qk−1 = E[wk−1wT
k−1].
25.3.1.2
The Correction Step
Given our a priori estimate of the state, we would like to reﬁne the estimate of the state by
incorporating the measurement yk. To do so, we deﬁne the linear correction equation, also
called the linear update equation:
ˆxk = ˆx−
k + Kk(yk −ˆy−
k )
(25.24)
where ˆy−
k = Hk ˆx−
k is the predicted measurement given the a priori estimate, and Kk is a gain
to be computed. Using (25.23) we can write (25.24) as
ˆxk = (1 −KkHk)ˆx−
k + KkHkxk + KkMkvk.
This expression can be used to compute the a posterior error:
ek = xk −ˆxk
= xk −(1 −KkHk)ˆx−
k −KkHkxk −KkMkvk
= (1 −KkHk)(xk −ˆx−
k ) −KkMkvk
= (1 −KkHk)e−
k −KkMkvk.
We can now use this expression to ﬁnd Pk, the a posterior covariance matrix:
Pk = E

ekek
T 
= E

(1 −KkHk)e−
k −KkMkvk
 
(1 −KkHk)e−
k −KkMkvk
T 
= E

(1 −KkHk)e−
k e−
k
T (1 −KkHk)T −2(1 −KkHk)e−
k vT
k MT
k KT
k
+KkMkvkvT
k MT
k KT
k

= (1 −KkHk)E

e−
k e−T
k

(1 −KkHk)T
−2(1 −KkHk)E

e−
k vT
k

MT
k KT
k + KkMk E

vkvT
k

MT
k KT
k .
The noise vk is uncorrelated with e−
k , thus E

e−
k vT
k

= 0. Recalling that P−
k = E

e−
k e−T
k

and
Rk = E

vkvT
k

the a posterior covariance is
Pk = (1 −KkHk)P−
k (1 −KkHk)T + KkMkRkMT
k KT
k ,
which is called the Joseph formula.

480
Spacecraft Dynamics and Control: An Introduction
25.3.1.3
The Optimal Gain Matrix
How do we go about picking the gain Kk optimally? To ﬁnd an optimal Kk we will pose an
optimization problem. Consider the following optimization problem:
Minimize
Jk(Kk) = tr [Pk]
= tr

(1 −KkHk)P−
k (1 −HT
k KT
k ) + KkMkRkMT
k KT
k

= tr

P−
k −KkHkP−
k −P−
k HT
k KT
k + KkWkKT
k

where
Wk = HkP−
k HT
k + MkRkMT
k .
Why are we minimizing tr [Pk]? To motivate the minimization of tr [Pk], consider Pk written in
terms of its eigendecomposition, and then simpliﬁed using the properties of the trace operation:
tr [Pk] = tr

EPkPkE−1
Pk

= tr

PkE−1
Pk EPk

= tr

Pk

=
n

i=1
λPk,i
where λPk,i, i = 1, 2, . . . , n are the eigenvalues of Pk. Minimizing tr [Pk] is equivalent to
minimizing the sum of the eigenvalues of Pk, which is equivalent minimizing the uncertainty
of our a posteriori estimate. Minimizing the a posteriori estimate uncertainty is reasonable in
that we want to be very conﬁdent that our estimate of the state, ˆxk, is a good estimate.
To minimize the objective function Jk(Kk) we will take the derivative of Jk(Kk) with respect
to Kk and set it equal to zero:
∂Jk(Kk)
∂Kk
= 2

−P−
k HT
k + KkWk

= 0.
Thus, the optimal gain is
Kk = P−
k HT
k W−1
k .
This optimal Kk is called the Kalman gain.
25.3.1.4
Summary of the Kalman Filter
System:
xk = Fk−1xk−1 + Gk−1uk−1 + Lk−1wk−1
yk = Hkxk + Mkvk
wk ∼N(0, Qk)
vk ∼N(0, Rk)
E[wkvT
k ] = 0

Spacecraft Navigation
481
Initialization:
ˆx0 = E [x0]
P0 = E

(x0 −ˆx0) (x0 −ˆx0)T 
Prediction:
ˆx−
k = Fk−1ˆxk−1 + Gk−1uk−1
P−
k = Fk−1Pk−1FT
k−1 + Lk−1Qk−1LT
k−1
Correction:
Wk = HkP−
k HT
k + MkRkMT
k
Kk = P−
k HT
k W−1
k
ˆxk = ˆx−
k + Kk(yk −ˆy−
k )
Pk = (1 −KkHk)P−
k (1 −KkHk)T + KkMkRkMT
k KT
k
= P−
k −KkHkP−
k −P−
k HT
k KT
k + KkWkKT
k
25.3.2
The Norm-Constrained Kalman Filter
In the previous derivation of the Kalman ﬁlter it was assumed that the state was unconstrained.
We will now consider the case where the state can be partitioned into two components
xk =
zk
qk

where zk are the unconstrained states and qk are the constrained states. In particular, the
constrained states must satisfy the following norm constraint:
∥qk∥=
√
ℓ
which can also be written as
qT
k qk = ℓ.
We are addressing the issue of Kalman ﬁltering in the presence of a norm constraint because we
will soon consider spacecraft attitude estimation. In particular, the states we will be estimating
will be the spacecraft angular velocity and a set of states related to the spacecraft attitude. If
we choose to parameterize the states in terms of a quaternion, then we will have to ensure our
quaternion estimate has unit length; said another way, we must ensure our quaternion estimate
satisﬁes a unit norm constraint.
25.3.2.1
The Prediction Step
The prediction step of the norm-constrained Kalman ﬁlter remains the same as the standard
Kalman ﬁlter. As such,
ˆx−
k = Fk−1ˆxk−1 + Gk−1uk−1

482
Spacecraft Dynamics and Control: An Introduction
and
P−
k = Fk−1Pk−1FT
k−1 + Lk−1Qk−1LT
k−1
where ˆx−
k is the a priori state estimate and P−
k is the covariance associated with ˆx−
k . Notice that
we have predicted the whole state without any concern for the constraint ˆq−T
k
ˆq−
k = ℓ. We will
enforce the norm constraint during the correction step. At this point it will be helpful to break
up P−
k into various submatrices:
P−
k =
P−
1,k
P−
2,k

=
P−
zz,k
P−
zq,k
P−
qz,k
P−
qq,k

.
(25.25)
25.3.2.2
The Correction Step
As in the unconstrained case, we will assume a linear update:
ˆzk
ˆqk

=
ˆz−
k
ˆq−
k

+
Kz,k
Kq,k

(yk −ˆy−
k )
(25.26)
where Kk has been partitioned into Kz,k and Kq,k. We can equivalently write (25.26) as two
equations,
ˆzk = ˆz−
k + Kz,k(yk −ˆy−
k ),
ˆqk = ˆq−
k + Kq,k(yk −ˆy−
k ).
(25.27)
As before, the a posteriori covariance is given by the Joseph formula
Pk = (1 −KkHk)P−
k (1 −HT
k KT
k ) + KkMkRkMT
k KT
k
= P−
k −KkHkP−
k −P−
k HT
k KT
k + KkWkKT
k
where
Wk = HkP−
k HT
k + MkRkMT
k .
Strictly speaking, we are assuming the Joseph formula is valid, and it can be argued that it is
indeed appropriate. Given the partitioning of P−
k in (25.25) we can write
KkHkP−
k =
Kz,kHkP−
1,k
Kz,kHkP−
2,k
Kq,kHkP−
1,k
Kq,kHkP−
2,k

,
KkWkKT
k =
Kz,kWkKT
z,k
Kz,kWz,kKT
q,k
Kq,kWkKT
z,k
Kq,kWq,kKT
q,k

,

Spacecraft Navigation
483
and now write Pk as
Pk =
Pzz,k
Pzq,k
Pqz,k
Pqq,k

(25.28)
where
Pzz,k = P−
zz,k −Kz,kHkP−
1,k −P−T
1,k HT
k KT
z,k + Kz,kWkKT
z,k,
(25.29)
Pzq,k = P−
zq,k −Kz,kHkP−
2,k −P−T
1,k HT
k KT
q,k + Kz,kWkKT
q,k,
Pqz,k = P−
qz,k −Kq,kHkP−
1,k −P−T
2,k HT
k KT
z,k + Kq,kWkKT
z,k,
Pqq,k = P−
qq,k −Kq,kHkP−
2,k −P−T
2,k HT
k KT
q,k + Kq,kWkKT
q,k.
(25.30)
25.3.2.3
The Optimal Gain Matrix Considering the Constraint
We now seek to ﬁnd the optimal gains Kz,k and Kq,k. Consider the following constrained
optimization problem:
Minimize
Jk(Kz,k, Kq,k) = tr [Pk]
such that
ˆqT
k ˆqk −ℓ= 0.
Although the objective function is the same objective function used to derive the standard
Kalman ﬁlter, we now have the norm constraint. Using a Lagrange multiplier we can augment
the constraint with the objective function to create the following unconstrained optimization
problem:
Minimize
ˆJk(Kz,k, Kq,k, λk) = tr [Pk] + λk
ˆqT
k ˆqk −ℓ

.
Given the partitioning of Pk in (25.28), the objective function can be written
Minimize
ˆJk(Kz,k, Kq,k, λk) = tr [Pk] + λk
ˆqT
k ˆqk −ℓ

= tr
⎧
⎪⎪⎩
Pzz,k
Pzq,k
Pqz,k
Pqq,k
⎫
⎪⎪⎭+ λk
ˆqT
k ˆqk −ℓ

= tr

Pzz,k

+ tr

Pqq,k

+ λk
ˆqT
k ˆqk −ℓ

= ˆJk(Kz,k) + ˆJk(Kq,k, λk)
where ˆJk(Kz,k) = tr

Pzz,k

and ˆJk(Kq,k, λk) = tr

Pqq,k

+ λk
ˆqT
k ˆqk −ℓ

. By minimizing the
sum of ˆJk(Kz,k) and ˆJk(Kq,k, λk) the posteriori covariance is minimized. Notice from equations
(25.29) and (25.30) that tr

Pzz,k

is only a function of Kz,k and tr

Pqq,k

is only a function of

484
Spacecraft Dynamics and Control: An Introduction
Kq,k. As such, minimizing ˆJk(Kz,k) to ﬁnd Kz,k and minimizing ˆJk(Kq,k, λk) to ﬁnd Kq,k can
be done independently.
Because the states zk are not constrained, Kz,k can be found by minimizing ˆJk(Kz,k) =
tr

Pzz,k

as outlined in Section (25.1), the solution being
Kz,k = P−T
1,k HT
k W−1
k .
On the other hand, to ﬁnd Kq,k we must solve the following optimization problem:
Minimize
ˆJk(Kq,k, λk) = tr

Pqq,k

+ λk
ˆqT
k ˆqk −ℓ

.
Using equation (25.26) the constraint ˆqT
k ˆqk −ℓ= 0 can be written
ˆq−T
k
ˆq−
k + 2rT
k KT
q,k ˆq−
k + rT
k KT
q,kKq,krk −ℓ= 0
(25.31)
where rk = yk −ˆy−
k = yk −Hk ˆx−
k is the measurement residual. Using the trace operation,
equation (25.31) can alternatively be written
tr
ˆq−
k ˆq−T
k
+ 2ˆq−
k rT
k KT
q,k + Kq,krkrT
k KT
q,k

−ℓ= 0.
Using this form of the constraint, the optimization problem to be solved is
Minimize
ˆJk(Kq,k, λk) = tr

Pqq,k

+λk
%
tr

ˆq−
k ˆq−T
k
+ 2ˆq−
k rT
k KT
q,k + Kq,krkrT
k KT
q,k

−ℓ
&
.
To ﬁnd the optimal gain Kq,k we take the derivative of ˆJk(Kq,k, λk) with respect to Kq,k and
λk and set the results to zero:
∂ˆJk(Kq,k, λk)
∂Kq,k
= 2

−P−T
2,k HT
k + Kq,kWk

+ 2λk
ˆq−
k rT
k + Kq,krkrT
k

= 0,
∂ˆJk(Kq,k, λk)
∂λk
= tr
ˆq−
k ˆq−T
k
+ 2ˆq−
k rT
k KT
q,k + Kq,krkrT
k KT
q,k

−ℓ= 0.
Therefore, the optimal gain Kq,k is
Kq,k =

P−T
2,k HT
k −λk ˆq−
k rT
k
 
Wk + λkrkrT
k
−1 .
(25.32)
In order to ﬁnd a closed-form expression for Kq,k we need to ﬁnd the optimal Lagrange
multiplier, λk. To do so, we will simplify our expression for Kq,k and then substitute it into
(25.31). To simplify Kq,k we will use the matrix inversion lemma: if det (C + VAU) ̸= 0 then

A−1 + UC−1V
−1 = A −AU (C + VAU)−1 VA.

Spacecraft Navigation
485
Letting A−1 = Wk, C−1 = λk1, U = rk, and V = rT
k we can write Kq,k as
Kq,k = P−T
2,k HT
k W−1
k
−λkP−T
2,k HT
k W−1
k rkrT
k W−1
k

1 + λkrT
k W−1
k rk

−λk ˆq−
k rT
k W−1
k
+ λ2
k ˆq−
k rT
k W−1
k rkrT
k W−1
k

1 + λkrT
k W−1
k rk

(25.33)
Substituting the above expression for Kq,k into the constraint equation given in (25.31) and
simplifying gives a quadratic equation in λk:
aλ2
k + bλk + c = 0
where a = −r2
k ℓ, b = −2rkℓ,
c =

rT
k W−1
k HkP−
2,kP−T
2,k HT
k W−1
k rk + 2ˆq−T
k
P−T
2,k HT
k W−1
k rk + ˆq−T
k
ˆq−
k −ℓ

,
and rk = rT
k W−1
k rk. The roots of this quadratic equation are
λk = −b ±
√
b2 −4ac
2a
=
2rkℓ±
'
4r2
k ℓ2 + 4r2
k ℓc
−2r2
k ℓ
= 1 ± √1 + c/ℓ
−rk
.
(25.34)
One root will minimize the objective function, while the other will maximize the objective
function. The quantity 1 + c/ℓcan be written
1 + c/ℓ=

rT
k W−1
k HkP−
2,kP−T
2,k HT
k W−1
k rk + 2ˆq−T
k
P−T
2,k HT
k W−1
k rk + ˆq−T
k
ˆq−
k

/ℓ
=
ˆq−
k + P−T
2,k HT
k W−1
k rk
T ˆq−
k + P−T
2,k HT
k W−1
k rk

/ℓ
which is greater than or equal to zero. Hence, the quantity √1 + c/ℓwill always be real, and
therefore λk will be a real number. Substituting the expression for 1 + c/ℓinto (25.34) gives
λk = −1
rk
±

−
((ˆq−
k + P−T
2,k HT
k W−1
k rk
((
rk
√
ℓ

.
To minimize the objective function ˆJ(Kq,k, λk) we pick the negative root:
λk = −1
rk
−

−
((ˆq−
k + P−T
2,k HT
k W−1
k rk
((
rk
√
ℓ

= −1
rk
+
((ˆq−
k + P−T
2,k HT
k W−1
k rk
((
rk
√
ℓ
.
(25.35)

486
Spacecraft Dynamics and Control: An Introduction
It can be shown by more rigorous means that the negative root indeed minimizes the objective
function, while the positive root maximizes the objective function.
The solution to our optimization problem is given by Kq,k in equation (25.33) and λk
in equation (25.35). Let us now discuss what the norm-constrained Kalman ﬁlter is doing
differently than the nominal (or unconstrained) Kalman ﬁlter. First, let ˜Kq,k = P−T
2,k HT
k W−1
k
be the unconstrained gain. Also, let
˜qk = ˆq−
k + ˜Kq,krk
(25.36)
be the state update that does not enforce the norm constraint, where ˜qk is the estimate of the
state that should satisfy ˜qT
k ˜qk −ℓ= 0, but given our use of ˜Kq,k may not. Now, let us return
to our expression for λk given in equation (25.35). Using ˜Kq,k and the expression for ˜qk in
(25.36) we can write λk as
λk = −1
rk
+
((ˆq−
k + ˜Kq,krk
((
rk
√
ℓ
= −1
rk
+ ∥˜qk∥
rk
√
ℓ
.
Using this alternate form of λk we can write Kq,k in equation (25.33) as
Kq,k = ˜Kq,k + 1
rk
 √
ℓ
∥˜qk∥−1

˜qkrT
k W−1
k .
(25.37)
Now, returning to our update expression for ˆqk given in equation (25.27), notice that
ˆqk = ˆq−
k + Kq,krk
= ˆq−
k + ˜Kq,krk + 1
rk
 √
ℓ
∥˜qk∥−1

˜qkrT
k W−1
k rk
=
√
ℓ
∥˜qk∥˜qk
where, as before, rk = rT
k W−1
k rk. This shows that the norm-constrained state estimate ˆq is the
brute-force normalization of the estimate ˜qk. As such, it turns out that brute-force normalization
is in fact optimal.
Now let us investigate the covariance of our estimate, Pqq,k. By substituting the expression
for Kq,k given in equation (25.37) into equation (25.30) and simplifying we have the following
Pqq,k = P−
qq,k −˜Kq,kHkP−
2,k −P−T
2,k HT
k ˜KT
q,k + ˜Kq,kWk ˜KT
q,k



˜Pqq,k
+ 1
rk
 √
ℓ
∥˜qk∥−1
2
˜qk ˜qT
k
= ˜Pqq,k + 1
rk
 √
ℓ
∥˜qk∥−1
2
˜qk ˜qT
k

Spacecraft Navigation
487
where ˜Pqq,k is the covariance associated with ˜qk. Notice the covariance Pqq,k associated with
the norm-constrained estimate qk is not equivalent to the covariance ˜Pqq,k associated with ˜qk.
The a posterior covariance Pqq,k equals ˜Pqq,k plus a second order effect.
25.3.2.4
Summary of the Norm-Constrained Kalman Filter
System:
xk = Fk−1xk−1 + Gk−1uk−1 + Lk−1wk−1
yk = Hkxk + Mkvk
xk =

zT
k
qT
k
T
qT
k qk = ℓ
wk ∼N(0, Qk)
vk ∼N(0, Rk)
E[wkvT
k ] = 0
Initialization:
ˆx0 = E [x0]
P0 = E

(x0 −ˆx0) (x0 −ˆx0)T 
Prediction:
ˆx−
k = Fk−1ˆxk−1 + Gk−1uk−1
P−
k = Fk−1Pk−1FT
k−1 + Lk−1Qk−1LT
k−1
=
P−
1,k
P−
2,k

=
P−
zz,k
P−
zq,k
P−
qz,k
P−
qq,k

Correction:
Wk = HkP−
k HT
k + MkRkMT
k
Kz,k = P−T
1,k HT
k W−1
k
ˆzk = ˆz−
k + Kz,k(yk −ˆy−
k )
˜Kq,k = P−T
2,k HT
k W−1
k
rk = yk −ˆy−
k
rk = rT
k W−1
k rk
˜qk = ˆq−
k + ˜Kq,krk
Kq,k = ˜Kq,k + 1
rk
 √
ℓ
∥˜qk∥−1

˜qkrT
k W−1
k
ˆqk = ˆq−
k + Kq,krk =
√
ℓ
∥˜qk∥˜qk
Pzz,k = P−
zz,k −Kz,kHkP−
1,k −P−T
1,k HT
k KT
z,k + Kz,kWkKT
z,k
Pzq,k = P−
zq,k −Kz,kHkP−
2,k −P−T
1,k HT
k KT
q,k + Kz,kWkKT
q,k

488
Spacecraft Dynamics and Control: An Introduction
Pqz,k = P−
qz,k −Kq,kHkP−
1,k −P−T
2,k HT
k KT
z,k + Kq,kWkKT
z,k
Pqq,k = P−
qq,k −Kq,kHkP−
2,k −P−T
2,k HT
k KT
q,k + Kq,kWkKT
q,k
Pk =
Pzz,k
Pzq,k
Pqz,k
Pqq,k

25.3.3
Spacecraft Attitude Estimation Using the Norm-Constrained
Extended Kalman Filter
We will now consider spacecraft attitude estimation using the norm-constrained extended
Kalman ﬁlter. We cannot use the norm-constrained Kalman ﬁlter directly because the spacecraft
attitude estimation problem is nonlinear, and the norm-constrained Kalman ﬁlter is for linear
systems. As such, we linearize the nonlinearities associated with the spacecraft dynamics,
kinematics, and measurements, then use the norm-constrained Kalman ﬁlter on the linearized
system. The estimation algorithm is referred to the norm-constrained extended Kalman ﬁlter
(EKF), where the word extended refers to the linearization procedure we use.
Recall (see Section 11.3) that the dynamics of a rigid body spacecraft are described by
I ˙ω + ω×Iω = u + w
(25.38)
where u is the control input and w are disturbances. Often the kinematics are parameterized in
terms of the unit-length quaternion, qT = [ϵT η], which must satisfy qT q = 1. The relationship
between ω and ˙ϵ, and ˙η is
˙ϵ
˙η

= 1
2
η1 + ϵ×
−ϵT

ω
(25.39)
As discussed in Chapter 24, the spacecraft dynamics and kinematics in (25.38) and (25.39)
can be expressed in ﬁrst order state-space form:
⎡
⎣
˙ω
˙ϵ
˙η
⎤
⎦
  
˙x
=
⎡
⎣
I−1[−ω×Iω + u + w]
1
2(η1 + ϵ×)ω
−1
2ϵT ω
⎤
⎦



f(x,u,w)
.
(25.40)
We assume that the spacecraft is equipped with a magnetometer that provides ˆbb, the Earth
magnetic ﬁeld vector in the spacecraft body frame (normalized), and a sun sensor that provides
ˆsb, the sun position vector in the spacecraft body frame (also normalized). It is assumed the
Earth’s magnetic ﬁeld vector and the sun position vector expressed in the inertial frame, ˆba
and ˆsa respectively, are known. The relationship between ˆbb, ˆba, ˆsb, and ˆsa is ˆbb = Cba ˆba and
ˆbs = Cbaˆsa where
Cba = (η2 −ϵT ϵ)1 + 2ϵϵT −2ηϵ×.
(25.41)

Spacecraft Navigation
489
The measurement equation is then
y =
ˆbb
ˆsb

+ v =

Cba ˆba
Cbaˆsa

+ v.
Using equation (25.41) and the identity −ϵ×ϵ× = ϵT ϵ1 −ϵϵT we can write Cba ˆaa where ˆaa
replaces ˆba or ˆsa as
η1 −ϵ×
−ϵ  ˆa×
a
ˆaa
−ˆaT
a
0




Y(ˆaa,q)
ϵ
η

= Y(ˆaa, q)q
(25.42)
so that
y =

0
Y(ˆba, q)
0
Y(ˆsa, q)

x + v.
(25.43)
25.3.3.1
Linearization of the Discrete Time Process and Measurement Models
In order to use the norm-constrained EKF we need a discrete time process model and a discrete
time measurement model. Also, in order to adapt the norm-constrained Kalman ﬁlter to the
nonlinear estimation problem at hand, we will have to linearize the discrete time process and
measurement models. We will start with developing the discrete time process model. Although
there are many ways to discretize a system, we will discretize (25.40) by simply making the
approximation
xk −xk−1
T
= f(xk−1, uk−1, wk−1),
xk = xk−1 + T f(xk−1, uk−1, wk−1)



fk−1(xk−1,uk−1,wk−1)
(25.44)
where T = tk −tk−1 is the sample period and uk is constant between tk−1 and tk. We assume
that wk ∼N(0, Qk).
We will now linearize our discrete time system. To do so we perform a Taylor series
expansion in xk and wk. In xk, ¯xk is the nominal solution and δxk is a perturbation such that
xk = ¯xk + δxk. In wk, we assume ¯wk = 0 is the nominal disturbance and δwk a perturbation.
Substituting xk = ¯xk + δxk and wk−1 = 0 + δwk−1 into (25.44) yields
¯xk + δxk = ¯xk−1 + δxk−1 + T f(¯xk−1 + δxk−1, uk−1, 0 + δwk−1)
= ¯xk−1 + T f(¯xk−1, uk−1, 0)



fk−1(¯xk−1,uk−1,0)

490
Spacecraft Dynamics and Control: An Introduction
+
⎧
⎪⎪⎪⎪⎪⎪⎩1 + T
⎡
⎣
I−1[−ω×
k−1I + (Iωk−1)×]
0
0
1
2(¯ηk−11 + ¯ϵ×
k−1)
−1
2 ¯ω×
k−1
1
2 ¯ωk−1
−1
2 ¯ϵT
k−1
−1
2 ¯ωT
k−1
0
⎤
⎦
⎫
⎪⎪⎪⎪⎪⎪⎭



Fk−1
×
⎡
⎣
δωk−1
δϵk−1
δηk−1
⎤
⎦+
⎡
⎣
T I−1
0
0
⎤
⎦



Lk−1
δwk−1
= fk−1(¯xk−1, uk−1, 0) + Fk−1δxk−1 + Lk−1δwk−1
(25.45)
where we have neglected products of δϵk−1, δηk−1, and δωk−1. We can rearrange (25.45) and
write
xk = fk−1(¯xk−1, uk−1, 0) + Fk−1(xk−1 −¯xk−1) + Lk−1wk−1
= Fk−1xk−1 + (fk−1(¯xk−1, uk−1, 0) −Fk−1¯xk−1)



uk−1
+Lk−1wk−1
= Fk−1xk−1 + uk−1 + Lk−1wk−1
(25.46)
where δwk−1 = wk−1 and uk−1 can be thought of as a ﬁctitious input that will be useful when
we are deﬁning the prediction step of the norm-constrained EKF.
We will now consider the discrete time measurement model. Recall that the spacecraft is
equipped with a magnetometer and sun sensor. The measurement equation is given by (25.43).
The discrete time measurement model is
yk =

0
Y(ˆba, qk)
0
Y(ˆsa, qk)

xk + vk



hk(xk,vk)
(25.47)
where vk ∼N(0, Rk).
To linearize the discrete time measurement model we must linearize Y(ˆaa, qk) given in
(25.42). Again we perform a Taylor series expansion in xk and vk about ¯xk and 0, respectively,
giving xk = ¯xk + δxk (which qk = ¯qk + δqk is part of) and vk = 0 + δvk. Substituting these
expressions into (25.42) gives
Y(ˆaa, ¯qk + δqk)(¯qk + δqk)
= Y(ˆaa, ¯qk)¯qk +
⎧
⎩Y(ˆaa, ¯qk) +

(ˆa×
a ¯ϵk + ˆaa ¯ηk)× + ˆaT
a ¯ϵk1

(ˆa×
a ¯ϵk + ˆaa ¯ηk)⎫
⎭



¯Y(ˆaa,¯qk)
δqk

Spacecraft Navigation
491
where products of δϵk and δηk have been neglected. Letting yk = ¯yk + δyk, equation (25.47)
is
¯yk + δyk =

0
Y(ˆba, ¯qk + δqk)
0
Y(ˆsa, ¯qk + δqk)

(¯xk + δxk) + δvk
=

0
Y(ˆba, ¯qk)
0
Y(ˆsa, ¯qk)

¯xk



hk(¯xk,0)
+

0
¯Y(ˆba, ¯qk)
0
¯Y(ˆsa, ¯qk)




Hk
δxk +
1

Mk
δvk
(25.48)
Equation (25.48) can also be written as
yk = hk(¯xk, 0) + Hk(xk −¯xk) + Mkvk
= Hkxk + (hk(¯xk, 0) −Hk ¯xk)



yk
+Mkvk
(25.49)
where δvk = vk and yy is deﬁned to simplify the derivation of the correction step of the
norm-constrained EKF.
Notice that equation (25.46) is linear in xk−1, uk−1, and wk−1, and equation (25.49) is linear
in xk, yk, and vk. These equations will be applied to the norm-constrained Kalman ﬁlter that,
after some additional manipulation, will yield the norm-constrained EKF.
25.3.3.2
The Prediction Step
As with the Kalman ﬁlter and the norm-constrained Kalman ﬁlter, we start with the prediction
step where we predict the state ˆx−
k given the process model. In our case, the process model is
described by equation (25.46)
ˆx−
k = Fk−1ˆxk−1 + uk−1
where Fk−1 and uk−1 are evaluated at the best prior estimate of the state, ˆxk−1 (i.e., ˆxk−1
replaces ¯xk−1 in equation (25.46)). Notice that the above prediction is equivalent to
ˆx−
k = Fk−1ˆxk−1 + uk−1
= Fk−1ˆxk−1 + (fk−1(ˆxk−1, uk−1, 0) −Fk−1ˆxk−1)
= fk−1(ˆxk−1, uk−1, 0)
which is just the nonlinear discrete time process model evaluated at ˆxk−1, uk−1, and wk = 0.
As with the Kalman ﬁlter, we do not perform a prediction step that includes disturbances
because the disturbances are unknown.

492
Spacecraft Dynamics and Control: An Introduction
In practice, often a more accurate numerical integration is used to predict ˆxk. For example,
we can predict ˆxk by using a fourth-order Runge-Kutta numerical integration method (see
Appendix B):
ˆx−
k = ˆxk−1 +
 tk
tk−1
f(ˆx, u, 0)dτ
where f(x, u, w) is from equation (25.40). (Note, f(x, u, w) in (25.40) is not the same as
fk−1(xk−1, uk−1, wk−1) in (25.44); the former is the continuous time model while the latter is
the discrete time model.)
The a priori covariance is computed in the same way as in the Kalman ﬁlter and the
norm-constrained Kalman ﬁlter, except the linearized process model is used. Doing so gives
P−
k = Fk−1Pk−1FT
k−1 + Lk−1Qk−1LT
k−1
=
P−
1,k
P−
2,k

=
P−
ωω,k
P−
ωq,k
P−
qω,k
P−
qq,k

where, in preparation to use the norm-constrained Kalman ﬁlter structure, we have partitioned
P−
k appropriately.
25.3.3.3
The Correction Step
Again we will assume a linear update of the form
 ˆωk
ˆqk

=
 ˆω−
k
ˆq−
k

+
Kω,k
Kq,k

(yk −ˆy−
k )
(25.50)
where Kk has been partitioned into Kω,k and Kq,k. The predicted measurement ˆy−
k is calculated
using (25.49):
ˆy−
k = Hk ˆx−
k + y−
k
where Hk and yy are evaluated at the best a priori estimate of the state, ˆx−
k (i.e., ˆx−
k replaces
¯xk in equation (25.49)). The predicted measurement can also be written
ˆy−
k = Hk ˆx−
k + y−
k
= Hk ˆx−
k +

hk(ˆx−
k , 0) −Hk ˆx−
k

= hk(ˆx−
k , 0)

Spacecraft Navigation
493
which is the nonlinear discrete time measurement model evaluated at ˆx−
k , the a priori state
estimate. Equation (25.50) can now be written as
ˆωk = ˆω−
k + Kω,k

yk −hk(ˆx−
k , 0)

,
(25.51)
ˆqk = ˆq−
k + Kq,k

yk −hk(ˆx−
k , 0)

.
(25.52)
The spacecraft angular velocity is not constrained in any way. As such, ˆωk is computed
from (25.51) where Kω,k = P−T
1,k HT
k W−1
k , Wk = HkP−
k HT
k + MkRkMT
k , and Mk = 1. On the
other hand, the quaternion is constrained to have unit length: qT
k qk = 1. Following the norm-
constrained Kalman ﬁlter formulation with ℓ= 1 the correction step is given by (25.52)
where
Kq,k = ˜Kq,k + 1
rk

1
∥˜qk∥−1

˜qkrT
k W−1
k ,
˜Kq,k = P−T
2,k HT
k W−1
k , rk = yk −hk(ˆx−
k , 0) is the measurement residual, rk = rT
k W−1
k rk, and
˜qk = ˆq−
k + ˜Kq,krk
is an update that is not assured to satisfy the unit-quaternion constraint. The update expression
for ˆqk given in equation (25.52) can also be written
ˆqk = ˆq−
k + Kq,krk
= ˆq−
k + ˜Kq,krk + 1
rk

1
∥˜qk∥−1

˜qkrT
k W−1
k rk
= ˜qk +

1
∥˜qk∥−1

˜qk
=
1
∥˜qk∥˜qk
Following the norm-constrained EKF formulation the matrix Pk is
Pk =
Pωω,k
Pωq,k
Pqω,k
Pqq,k

where
Pωω,k = P−
ωω,k −Kω,kHkP−
1,k −P−T
1,k HT
k KT
ω,k + Kω,kWkKT
ω,k,
Pωq,k = P−
ωq,k −Kω,kHkP−
2,k −P−T
1,k HT
k KT
q,k + Kω,kWkKT
q,k,
Pqω,k = P−
qω,k −Kq,kHkP−
1,k −P−T
2,k HT
k KT
ω,k + Kq,kWkKT
ω,k,
Pqq,k = P−
qq,k −Kq,kHkP−
2,k −P−T
2,k HT
k KT
q,k + Kq,kWkKT
q,k.

494
Spacecraft Dynamics and Control: An Introduction
25.3.3.4
Summary of the Norm-Constrained Extended Kalman Filter
System:
xk = fk−1(xk−1, uk−1, wk−1)
yk = hk(xk, vk)
xk =

ωT
k
qT
k
T
qT
k qk = 1
wk ∼N(0, Qk)
vk ∼N(0, Rk)
E[wkvT
k ] = 0
Initialization:
ˆx0 = E [x0]
P0 = E

(x0 −ˆx0) (x0 −ˆx0)T 
Prediction:
ˆx−
k = fk−1(ˆxk−1, uk−1, 0)
or
ˆx−
k = ˆxk−1 +
 tk
tk−1
f(ˆx, u, 0)dτ
P−
k = Fk−1Pk−1FT
k−1 + Lk−1Qk−1LT
k−1
=
P−
1,k
P−
2,k

=
P−
ωω,k
P−
ωq,k
P−
qω,k
P−
qq,k

Correction:
Wk = HkP−
k HT
k + MkRkMT
k
Kω,k = P−T
1,k HT
k W−1
k
ˆωk = ˆω−
k + Kω,k

yk −hk(ˆx−
k , 0)

˜Kq,k = P−T
2,k HT
k W−1
k
rk = yk −hk(ˆx−
k , 0)
rk = rT
k W−1
k rk
˜qk = ˆq−
k + ˜Kq,krk
Kq,k = ˜Kq,k + 1
rk

1
∥˜qk∥−1

˜qkrT
k W−1
k
ˆqk = ˆq−
k + Kq,krk =
1
∥˜qk∥˜qk
Pωω,k = P−
ωω,k −Kω,kHkP−
1,k −P−T
1,k HT
k KT
ω,k + Kω,kWkKT
ω,k
Pωq,k = P−
ωq,k −Kω,kHkP−
2,k −P−T
1,k HT
k KT
q,k + Kω,kWkKT
q,k
Pqω,k = P−
qω,k −Kq,kHkP−
1,k −P−T
2,k HT
k KT
ω,k + Kq,kWkKT
ω,k
Pqq,k = P−
qq,k −Kq,kHkP−
2,k −P−T
2,k HT
k KT
q,k + Kq,kWkKT
q,k
Pk =
Pωω,k
Pωq,k
Pqω,k
Pqq,k


Spacecraft Navigation
495
0
50
100
150
200
250
300
-1
-0.5
0
0.5
1
Time (s)
ε1
0
50
100
150
200
250
300
-1
-0.5
0
0.5
1
Time (s)
ε2
0
50
100
150
200
250
300
-1
-0.5
0
0.5
1
Time (s)
ε3
Figure 25.4
Estimate of ϵk (solid line) and the actual value of ϵk (dashed line) versus time. Circles
indicate when measurements become available
Example 25.3 We will consider an uncontrolled spacecraft (that is, uk = 0 for all k) subject
to a magnetic disturbance (caused by a residual dipole moment) and a gravity gradient dis-
turbance. The residual dipole moment is equal to mr = [0.1 0.1 0.1]T A · m2. The spacecraft
mass moment of inertia is I = diag {27, 17, 25} kg · m2. The spacecraft is in a circular orbit
at an altitude of 450 km and inclination of 87◦. The initial angular velocity and attitude
is ω(0) = [0.05 −0.05 0.05]T rad/s and ϵ(0) = (sin(1/2)/
√
3)[1 1 1]T , η(0) = cos(1/2).
In simulation this truth model is numerically integrated using a fourth-order Runge-Kutta
integrator with a time-step of 0.05 s. The truth model incorporates the disturbances.
For the norm-constrained EKF, the process model assumes there are no distur-
bances. The initial state is ˆω(0) = 0 rad/s, ˆϵ(0) = 0, ˆη(0) = 1. The initial covariance is
P0 = diag {0.1 0.1 0.1 0.1 0.1 0.1 0.1}. The process noise covariance is Qk = σ 2
q 1 where
σq = 0.001. The measurement noise covariance associated with the sun sensor and a
magnetometer is Rk = diag
)
σ 2
m, σ 2
m, σ 2
m, σ 2
s , σ 2
s , σ 2
s
*
where σm = 0.01 and σs = 0.005. Note
that we are assuming isotropic measurement noise for each vector measurement, which differs
from the QUEST measurement model considered in Section 25.2.5. This assumption has the
beneﬁt that Rk is positive deﬁnite. It is reasonable provided the vector measurements are not
normalized prior to use in the correction step of the EKF. Measurements are acquired every
10 seconds (T = 10 s). During the prediction step, a fourth-order Runge-Kutta is used to
predict the state every 0.5 s.

496
Spacecraft Dynamics and Control: An Introduction
0
50
100
150
200
250
300
-0.1
-0.05
0
0.05
0.1
Time (s)
ω1 (rad/s)
0
50
100
150
200
250
300
-0.08
-0.06
-0.04
-0.02
0
Time (s)
ω2 (rad/s)
0
50
100
150
200
250
300
-0.1
-0.05
0
0.05
0.1
Time (s)
ω3 (rad/s)
Figure 25.5
Estimate of ωk (solid line) and the actual value of ωk (dashed line) versus time. Circles
indicate when measurements become available
Shown in Figures 25.4 and 25.5 is the estimate of the vector part of the quaternion, ˆϵk, and
the estimate of the angular velocity, ˆωk. Also included is the true values of ϵk and ωk. Notice
that it takes approximately 6 or 7 measurements (which is about one minute) before ˆϵk and ˆωk
start to match ϵk and ωk. This is not unreasonable in that our initial estimate of the state was
not at all close to the true state.
Notes
This chapter serves as an introduction to spacecraft navigation, and is by no means comprehen-
sive. Spacecraft navigation is a vast and mature subject, and interested readers are encouraged
to look at additional books and journal articles.
The material in Section (25.1) is adapted from Jazwinski (1970), Stengel (1994), Simon
(2006), and Figliola and Beasley (2011). Wahba’s problem described in Section (25.1) is
formulated in Wahba (1965). Davenport’s q-Method presented in Section (25.1) can be found
in the book by Wertz (1978), while the QUEST algorithm presented in Section (25.1) and
the TRIAD algorithm discussed in Section (25.1) can be found in Shuster and Oh (1981).
A discussion of the TRIAD algorithm in the context of maximum likelihood estimation can

Spacecraft Navigation
497
be found in Shuster (2006). Davenport’s q-Method is also discussed in Crassidis and Junkins
(2004). The Kalman ﬁlter derivation presented in Section (25.1) is adapted from Jazwinski
(1970) and Simon (2006). The norm-constrained Kalman ﬁlter derivation in Section (25.1) is
adapted from Zanetti et al. (2009). A general derivation of the extended Kalman ﬁlter can be
found in Jazwinski (1970), Stengel (1994), and Simon (2006); our derivation is based on the
derivation in Simon (2006). The discretization and linearization of the spacecraft kinematics
and dynamics is motivated by Leung and Damaren (2004), Crassidis and Junkins (2004),
and Simon (2006). Additional discussions on observability, discretization, and linearization
can be found in Jazwinski (1970), Stengel (1994), Simon (2006), and Crassidis and Junkins
(2004). The discussion in this chapter has been restricted to spacecraft attitude determination.
The Kalman ﬁlter may also be applied to the problem of spacecraft orbit determination. A
comprehensive treatment of statistical methods for orbit determination may be found in Tapley
et al. (2004).
References
Crassidis JL and Junkins JL 2004 Optimal Estimation of Dynamic Systems. Chapman & Hall/CRC, Boca Raton, FL.
Figliola RS and Beasley DE 2011 Theory and Design for Mechanical Measurements ﬁfth edn. John Wiley & Sons,
Inc., Hoboken, NJ.
Jazwinski AH 1970 Stochastic Processes and Filtering Theory. Academic Press, New York, NY.
Leung WS and Damaren CJ 2004 A Comparison of the Pseudo-Linear and Extended Kalman Filters for Spacecraft
Attitude Estimation. AIAA Guidance, Navigation, and Control Conference, Providence, Rhode Island, August
16–19, 2004.
Shuster MD 2006 The TRIAD Algorithm as Maximum Likelihood Estimation. Journal of the Astronautical Sciences
54(1), 113–123.
Shuster MD and Oh SD 1981 Three-Axis Attitude Determination from Vector Observations. AIAA Journal of
Guidance, Control, and Dynamics (previously the AIAA Journal of Guidance and Control) 4(1), 70–77.
Simon D 2006 Optimal State Estimation. John Wiley & Sons, Inc., Hoboken, NJ.
Stengel RF 1994 Optimal Control and Estimation. Dover, New York, NY.
Tapley BD, Schutz BE and Born GH 2004 Statistical Orbit Determination. Elsevier, Burlington, MA.
Wahba G 1965 Problem 65-1, A Least-Squares Estimate of Satellite Attitude. SIAM Review 7(3), 409.
Wertz JR 1978 Spacecraft Attitude Determination and Control. Kluwer Academic Publishers, Dordrecht, The Nether-
lands.
Zanetti R, Majji M, Bishop RH and Mortari D 2009 Norm-Constrained Kalman Filtering. AIAA Journal of Guidance,
Control, and Dynamics 32(5), 1458–1465.


26
Practical Spacecraft Attitude
Control Design Issues
In Chapters 17 to 25 we have examined some of the fundamental theory required for spacecraft
attitude control design. However, on its own this is not enough. There are several associated
practical issues that must be addressed if a spacecraft attitude control design is to be suc-
cessful. In this chapter, we examine some of these issues. The objective is not to provide a
comprehensive treatment (that is far beyond the scope of this book). Rather, the objective is to
make the reader aware of the issues that need to be addressed when faced with a real spacecraft
attitude control design problem.
26.1
Attitude Sensors
As explained in Chapter 11, in order to be able to control the spacecraft attitude, we need to
be able to measure (or at least estimate) it. Unfortunately, there is no sensor that can measure
the attitude directly, and it must be estimated from available measurements using techniques
such as those presented in Chapter 25. In this section, we provide a brief overview of the
different sensor types that may be used in spacecraft attitude control, and what measurements
they provide.
26.1.1
Sun-Sensors
The two major types of sun-sensors are analog and digital sun-sensors. Digital sun-sensors
are the most accurate, but also the most expensive. Analog sun-sensors are sufﬁcient for many
applications.
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

500
Spacecraft Dynamics and Control: An Introduction
θ
ˆn - sensor normal
ˆs - sun direction
Figure 26.1
Analog sun-sensor
26.1.1.1
Analog Sun-Sensors
Analog sun-sensors are essentially solar cells, whose current output i is proportional to the
cosine of the angle θ between the sensor normal ˆ⃗n and the incident solar radiation ˆ⃗s (refer to
Figure 26.1). Mathematically, the sensor output is a current i, given by
i(θ) = i(0) cos θ,
(26.1)
where i(0) is the sensor output when the sun-direction is parallel to the sensor normal. For
this reason, analog sun-sensors are sometimes referred to as cosine sun-sensors. In reality, the
relationship between the current output i and the sun angle θ deviates slightly from the cosine
law presented in (26.1), and must be determined by calibration of the sensor.
In any case, an analog sun-sensor provides the angle θ of the sun-vector relative to the
sensor normal, and as such, it provides a cone Cs on which the sun-vector must lie (see Figure
26.2). Combinations of analog sun-sensors (with different sensor normals) can be used to
determine more information about the sun vector. For example, a pair of analog sun-sensors
with normals ˆ⃗n1 and ˆ⃗n2, yield a pair of cones on which the sun-vector must lie, which yields a
pair of possible sun-vectors, ˆ⃗s1 and ˆ⃗s2 (see Figure 26.3). Additional measurements are needed
to determine which is the true sun-vector. One possibility is a third analog sun-sensor with
normal not in the plane of ˆ⃗n1 and ˆ⃗n2. This leads to three intersecting cones, which in the
absence of measurement error will intersect along a single line and give the sun-vector. In the
presence of measurement errors, least squares estimation can be used to give an estimate of
the sun-vector.
θ
ˆn
ˆs
Cs
Figure 26.2
Sun-cone provide by an analog sun-sensor

Practical Spacecraft Attitude Control Design Issues
501
ˆn1
ˆn2
Cs1
Cs2
ˆs1
ˆs2
Figure 26.3
Possible sun-vectors from a pair of analog sun-sensors
As an alternative to using a third sun-sensor, if another vector measurement (in spacecraft
body coordinates) is available (for example, a magnetometer measurement), then that mea-
surement can be used in combination with knowledge of the angle between that vector and the
sun-vector to provide a third cone on which the sun-vector must lie. The sun-vector can then
be determined in the same manner as with three analog sun-sensors described in the previous
paragraph. Note that this assumes that both the sun-vector and the second vector are known in
some coordinate system, such as an inertial coordinate system, from which the angle between
them can be determined.
26.1.1.2
Digital Sun-Sensors
Digital sun-sensors are signiﬁcantly more complex than analog sun-sensors, however they
are far more accurate, and a two-axis type digital sun-sensor can provide a full sun-vector in
sensor coordinates. Using knowledge of the sensor orientation relative to the spacecraft body
frame, the sun-vector can be readily transformed to the body-frame.
26.1.1.3
Sensor Limitations
Both analog and digital sun-sensors have limited useful ﬁelds of view, so multiple sensors
may be needed to give the required coverage. Additionally, for digital sun-sensors, there may
be spacecraft body-rate limitations outside of which the sensor ceases to be useful.
26.1.2
Three-Axis Magnetometers
A three-axis magnetometer measures the local magnetic ﬁeld vector in sensor coordinates.
That is, it gives both the magnitude and direction of the local magnetic ﬁeld. Using knowledge
of the sensor orientation relative to the spacecraft, the local magnetic ﬁeld vector can be
transformed to spacecraft body coordinates.
Magnetometers are relatively inaccurate. However, they do not have the ﬁeld of view
limitations inherent to sun-sensors, Earth-sensors and star-trackers. Therefore, they are very
useful for initial attitude determination and initial attitude acquisition before the other more
accurate measurements become available.

502
Spacecraft Dynamics and Control: An Introduction
26.1.2.1
Sensor Limitations
As mentioned, a magnetometer measures the local magnetic ﬁeld vector. However, this is
only useful for the purposes of spacecraft attitude determination and control if the measured
magnetic ﬁeld consists mainly of the Earth’s magnetic ﬁeld. For this reason, magnetometer
placement within the spacecraft becomes critical, so as to minimize the corruption of mea-
surements by the spacecraft’s own magnetic ﬁeld due to ferro-magnetic materials (in the
spacecraft structure) and spacecraft current loops (in the spacecraft electronics). Some (but
not all) of these effects can be removed by calibration. For this reason, magnetometers are
sometimes mounted on booms outside of the main spacecraft body. Additional measures are
needed if magnetometers are used in conjunction with magnetic torquers so as to ensure that
the magnetic torquers do not inﬂuence the magnetometer readings (see Section 26.2.2).
26.1.3
Earth Sensors
Earth sensors can be used to measure the nadir vector. That is, they measure the unit vector
pointing from the spacecraft toward the Earth’s center of mass. They are commonly used on
spacecraft that are nominally nadir pointing, such as is the case considered in Chapter 16. In
these applications, the nadir vector is a function of the roll and pitch angles of the spacecraft
body frame relative to the orbiting frame, and the roll and pitch angles are typically provided
directly by the Earth sensor. The yaw angle corresponds to a rotation about the nadir vector,
so it cannot be measured.
From the point of view of an Earth orbiting spacecraft, the Earth appears as a large disk, so
the direction of the Earth center cannot be measured directly. However, it can be deduced by
locating the Earth’s horizon as seen from the spacecraft (the boundary of the visible Earth disk).
To do this, Earth sensors detect infrared (IR) radiation emitted from the Earth’s surface. The
reason that the infrared part of the electromagnetic spectrum is used is because the radiation
from the Earth’s surface is relatively uniform across the entire surface, allowing the horizon to
be located accurately. By comparison, the Earth’s radiation in the visible part of the spectrum
varies greatly depending on whether the surface is in the day or night, which becomes a lot
more problematic for location of the horizon.
There are two types of Earth sensors: static Earth sensors and scanning Earth sensors. A static
Earth sensor consists of a suite of concentric infrared sensors, as shown in Figure 26.4. The
IR Sensor
Earth Horizon
(as seen from spacecraft)
Earth’s
centre
Figure 26.4
Static Earth sensor principle

Practical Spacecraft Attitude Control Design Issues
503
zo
yo
xo
pitch rotation
roll rotation
orbit
Earth horizon
instantaneous scanner
field of view
AOS
LOS
scan cone
(as seen from spacecraft)
Figure 26.5
Scanning Earth sensor principle
signal from each sensor is proportional to the fraction of the Earth disk contained within its ﬁeld
of view. By combining the signals from each of the sensors, the Earth’s horizon can be located,
and consequently the nadir vector can be deduced. A scanning Earth sensor has a rotating
optical head (with constant angular velocity), sweeping out a cone as shown in Figure 26.5.
An infrared sensor then detects when the Earth’s surface lies in the scanner’s instantaneous ﬁeld
of view. Of particular importance are the horizon crossings by the scanner, that is, when the
Earth’s surface enters and leaves the scanner’s instantaneous ﬁeld of view. These crossings are
called the Acquisition of Signal (AOS) and Loss of Signal (LOS), respectively. As illustrated
in Figure 26.6(a), the time between AOS and LOS is dependent on the scanner’s roll angle
(relative to an orbiting frame), which can consequently be computed. As illustrated in Figure
26.6(b), knowledge of where the Earth’s surface passes through the scanner’s instantaneous
Earth horizon
(as seen from spacecraft)
increasing
roll angle
scan paths
across Earth
AOS
LOS
(a) Roll angle determination
scanner vertical reference
scan cone cross-section
scan path
across Earth
AOS
LOS
pitch angle
mid-point
(b) Pitch angle determination
Figure 26.6
Scanning Earth sensor roll and pitch angle determination

504
Spacecraft Dynamics and Control: An Introduction
ﬁeld of view is dependent on the scanner’s pitch angle (relative to an orbiting frame). Thus,
the pitch angle can be determined provided the scanner has a built in vertical reference. Note
that for a single scanner, the spacecraft altitude must be known (the time between AOS and
LOS depends on the altitude as well as the roll angle). In order to overcome this limitation,
scanning Earth sensors often have dual scanners.
26.1.3.1
Sensor Limitations
As is evident from both Figures 26.4 and 26.5, Earth sensors are only useful if the Earth lies
within the sensor ﬁeld of view. As such, Earth sensors are useful only for a limited range of
attitudes. Additionally, for scanning Earth sensors, the spacecraft body-rate should be very
small compared with the rotation rate of the scanning head. The sun and moon should not
come within the sensor ﬁeld of view.
26.1.4
Star Trackers
Stars provide the most accurate reference for attitude determination. There are two reasons
for this. First of all, stars appear very small (compare the apparent size of a star to the
apparent size of the sun or Earth). As such, the direction of a star can be measured very
accurately. Second, stars are inertially ﬁxed objects. As explained in Chapter 25, given any
vector measurements in the spacecraft body frame, it is necessary to know the corresponding
vectors in the inertial frame, in order to determine the spacecraft attitude. Considering Earth
orbiting spacecraft, the sun vector depends on the orbital position of the Earth around the sun,
as well as the orbital position of the spacecraft around the Earth. The nadir vector depends on
the spacecraft orbital position around the Earth, and the Earth magnetic ﬁeld vector depends
on spacecraft orbital position as well as the time of day (the magnetic ﬁeld rotates with the
Earth). In all three cases, the reference vectors (in inertial coordinates) must be computed in
real-time, and there are errors associated with these computations. Since stars are inertially
ﬁxed, there is no real-time computation required, and instead the associated reference vectors
may be looked up from a star catalogue, which may be stored onboard.
Star trackers have the ability to lock on, identify and track a star. If the star tracker only
tracks a single star, the output will be the measured unit star pointing vector in the star
tracker frame. Using knowledge of the sensor orientation relative to the spacecraft, the star
pointing vector can be transformed to spacecraft body coordinates. This measurement can then
be used in conjunction with other vector measurements to determine the spacecraft attitude
(using the techniques presented in Chapter 25). That being said, most modern star trackers
have the ability to lock on, identify and track multiple stars at once. The star trackers then
process these multiple star vector measurements to output the star tracker attitude directly.
Using knowledge of the sensor orientation relative to the spacecraft, the spacecraft attitude can
then be determined. Hence, most modern star trackers can be considered to be full three-axis
attitude sensors.
For the above reasons, star trackers provide the most accurate attitude information out of
all of the sensors. On the other hand, they are also the most complex and as a result the most
expensive and least reliable.

Practical Spacecraft Attitude Control Design Issues
505
26.1.4.1
Sensor Limitations
First of all, the sun and the Earth must not enter the star tracker’s ﬁeld of view. This limits the
allowable spacecraft attitude. Additionally, there are typically quite severe spacecraft body-
rate limitations if a star tracker is to be used without further compensation for the spacecraft
motion. For this reason, star trackers are typically used on three-axis stabilized spacecraft
(as opposed to spinning spacecraft). Star trackers are generally designed for speciﬁc mission
requirements. For example, star trackers typically have a very limited instantaneous ﬁeld of
view. In order to determine the attitude to within requirements, it will need to have at least
two stars within the instantaneous ﬁeld of view at any one time (if not more). If the star-
tracker is required for a large range of attitudes, the number of stars stored in the on-board
star catalog can become very large, possibly in the thousands. To limit the on-board storage
requirements, the star catalog will contain only those stars that fall within the star tracker ﬁeld
of view for the attitudes where the accuracy of a star tracker is required. As a result, the star
tracker may be useful only over a very small range of attitudes. Finally, given the signiﬁcant
computational load associated with identifying, locking on and tracking multiple stars, there
may be a noticeable time-delay in the star tracker output, which needs to be compensated for
in the spacecraft attitude control algorithms.
26.1.5
Rate Sensors
As the name suggests, rate sensors provide measurements of the spacecraft body rate. As we
have seen in previous chapters, most spacecraft attitude control laws require some sort of
feedback of the spacecraft body rate. If only attitude measurements are available (from one
or more of the previously mentioned attitude sensors), then the spacecraft body rate can be
determined by differentiation of the attitude measurement, which could lead to very noisy
body-rates, or it can be estimated using an Extended Kalman Filter (EKF) as in Chapter 25.
Rate sensors can provide very low noise measurements, which can be used directly in the
spacecraft attitude control law. This can signiﬁcantly improve the spacecraft pointing stability.
Pointing stability (not to be confused with Lyapunov stability) is a spacecraft attitude control
concept, and is deﬁned as the variation in attitude error over a given time interval. Hence, the
achievable pointing stability is directly related to the ability to accurately control the spacecraft
body rate.
Another advantage of rate sensors is that the measurements do not require any external
reference. For example, a sun-sensor is useful only when the sun is in view. As such, rate
sensor measurements are available at all times (provided the sensor is operational). Rate sensors
can then be used to accurately predict the spacecraft attitude during periods of unavailability
of the attitude measurements. This is done by direct numerical integration of the attitude
kinematics using the measured body rate ωbG as input (see Section 11.2 for details of the
attitude kinematics).
A limitation of rate sensors is that all rate sensors have an inherent bias. That is, the
measured body rate has some small but nearly constant offset (in addition to the measurement
noise). This results in a drift in the spacecraft attitude obtained by numerical integration of
the spacecraft kinematics. Hence, rate sensors can not be used exclusively to provide attitude
estimates, but other attitude measurements must be incorporated to correct the drift. Often,
rate sensor measurements are fused together with other attitude sensor measurements in an

506
Spacecraft Dynamics and Control: An Introduction
EKF to provide optimal estimates of the spacecraft attitude and body rate. By appropriately
setting up the EKF, the rate sensor bias can also be estimated and corrected for.
There are a number of different kinds of rate sensor. Traditionally, rate sensors incorporated
mechanical gyros. The drawback of this is that it requires moving mechanical parts, which
limits the sensor lifetime. Recently, rate sensors such as laser gyros have been developed based
on different principles, which require no moving parts.
26.2
Attitude Actuators
As we have already seen, active attitude control requires actuators that can impart a torque
to the spacecraft. There are a number of different types of actuators. The actuators can be
divided into two separate classes: 1) reaction-type actuators and 2) momentum exchange
devices. Reaction-type actuators generate torques that can be considered to be external to
the spacecraft. As such, reaction-type actuators have the ability to change the spacecraft
angular momentum. Thrusters and magnetic torquers are reaction-type actuators. Momentum
exchange devices generate torques that can be considered internal to the spacecraft, and do
not change the overall angular momentum of the spacecraft. Reaction wheels, control moment
gyros and momentum wheels are momentum exchange devices.
26.2.1
Thrusters
Thrusters eject mass of some form to create a force. A thrust vector that does not pass through
the spacecraft center of mass generates a torque. As shown in Figure 26.7, a thruster generating
a force F with a moment arm r, creates a torque given by T = Fr. The torque can be increased
or decreased by either adjusting the amount of force F (which is a characteristic of the thruster),
or the moment arm r (which depends on the installation of the thruster). Since a thruster ejects
mass, it can only provide force in one direction (it does not inhale mass like a vacuum cleaner).
Therefore, a single thruster can only provide a torque about an axis with a single sense (either
positive or negative, not both). Referring to Figure 26.8, two thrusters are needed in order to be
able to produce both a positive and negative torque about a single axis. Extending this reason-
ing, a minimum of six thrusters are needed to be able to produce a torque about an arbitrary axis.
Thrusters typically have the characteristic that they operate in an on/off fashion. That is, the
force exerted by a thruster (and hence the resulting torque) is always at a constant level when
the thruster is switched on (neglecting the short transient period of the thruster force when it
F
center of mass
r
thruster
Torque = Fr
Figure 26.7
Torque on a spacecraft due to a thruster

Practical Spacecraft Attitude Control Design Issues
507
thrusters
torques
Figure 26.8
Possible torques on a spacecraft due to a pair of thrusters
is ﬁrst switched on). All of the control laws developed in previous chapters assume that the
attitude actuators are capable of creating a continuously variable torque. Therefore, we need
some means of being able to approximate a commanded continuously variable control torque
with a series of pulses with constant magnitude. As explained in Section 26.3, a real spacecraft
attitude control system is implemented digitally. For a digital control implementation using
a sample and hold, a measurement is taken at each sample instant, and the computed control
torque, Tc is held ﬁxed until the next sample instant, as shown in Figure 26.9. To realize
the commanded control torque on average using a thruster that generates a torque with level
¯Tt when switched on, the length of time for which the thruster is switched on tp,k (the pulse
width) during sample period tk to tk+1, is computed as
tp,k = Tc(tk)t
¯Tt
,
where Tc(tk) is the commanded control torque at sample instant tk, and t = tk+1 −tk is the
sample period. In this way, by commanding thruster torque pulses with appropriate width
(as seen in Figure 26.9), the average torque exerted throughout the sample period is equal to
the average commanded control torque. This technique is known as pulse width modulation
(PWM).
While PWM has the ability to approximate a continuously variable control torque by a
series of pulses, it also has its limitations. Problems arise when the commanded control torque
becomes very small (in response to a small measured attitude error). Thrusters are not capable
tk−1
tk
tk+1
Tc
¯Tt
Tt
tp,k
Figure 26.9
Pulse width modulation of a thruster

508
Spacecraft Dynamics and Control: An Introduction
of creating inﬁnitesimally short pulses. There is a minimum amount of time that a thruster can
be turned on for. Related to this is the minimum torque impulse bit (MTIB), deﬁned by
MTIB = ¯Tttp,min,
where ¯Tt is the torque level of the thruster, and tp,min is the minimum pulse width. So as to
avoid unnecessary wasting of propellant, an attitude control system using thrusters should
incorporate a dead-zone. That is, the thrusters do not ﬁre when the commanded control torque
falls below a certain level (the dead-zone). The dead-zone is directly related to the minimum
torque impulse bit. As a result, the achievable accuracy of attitude control systems utilizing
thrusters as the means of attitude control is coarse.
The reader can ﬁnd more detailed treatments of these issues in Sidi (1997) and Wie (2008).
26.2.2
Magnetic Torquers
Magnetic torquers are wire coils attached to the spacecraft. By passing a current through the
coils, a magnetic dipole is created. The interaction between the coil dipole ⃗m and the Earth’s
magnetic ﬁeld ⃗b creates a torque according to the law
⃗T = ⃗m × ⃗b.
(26.2)
It can be seen from (26.2) that the torque vector ⃗T generated by a magnetic torquer is
always perpendicular to the instantaneous Earth’s magnetic ﬁeld vector ⃗b (a property of the
vector cross-product). Therefore, it is impossible to generate a torque about an arbitrary axis
using magnetic torquers alone. As such, a spacecraft equipped only with magnetic torquers
is instantaneously underactuated. However, since the Earth’s magnetic ﬁeld direction varies
with orbital position, a full three-axis attitude control law can still be realized on average
throughout an orbit using exclusively magnetic control. Note that this is true only for orbits
with signiﬁcant inclination, since there is not much variation in the Earth’s magnetic ﬁeld
direction for near equatorial orbits.
Due to the very weak Earth magnetic ﬁeld, the magnitude of the torque that can be generated
by magnetic torquers is also very small, so magnetic torquers have limited control authority.
For these reasons (instantaneous underactuation and limited control authority), only coarse
attitude control is possible when magnetic actuation is employed exclusively. When ﬁne
attitude control is required, the actuators of choice are typically a set of reaction wheels
providing the attitude control itself. The reaction wheels are often augmented by magnetic
torquers for the purpose of unloading excess momentum from the reaction wheels, which
builds up due to external disturbances acting on the spacecraft.
When magnetic torquers are used, it is important that they do not operate while magne-
tometers are being sampled. For a digital control implementation with magnetic torquers and
magnetometers, a sample period is typically divided as shown in Figure 26.10. Note that the
magnetic torquers are shut off a ﬁnite amount of time before the magnetometer is sampled dur-
ing the next sample period. This is because it takes a very short but ﬁnite time for the magnetic
torquer dipole moment to dissipate after the current is switched off (it is not instantaneous).

Practical Spacecraft Attitude Control Design Issues
509
Magnetometer reading
Magnetic torquer activation
Sample Period
Figure 26.10
Scheduling of magnetometer readings and magnetic torquer activation
26.2.3
Reaction Wheels
A reaction wheel is a nominally non-spinning wheel mounted in the spacecraft. As in Chapter
15, we divide the spacecraft into a platform and the wheels. As shown in Figure 26.11, by
accelerating the wheel in one direction about the wheel spin-axis, the wheel applies a reaction
torque to the platform in the opposite direction (also about the wheel spin-axis). This is a
consequence of conservation of angular momentum. In the absence of an external torque
acting on the spacecraft, the total angular momentum of the spacecraft remains constant (see
Chapter 2). Therefore, in the absence of external torques, if the angular momentum of the
wheels is changed, there must be a corresponding opposite change in angular momentum of
the platform. This illustrates why a reaction wheel is considered a momentum exchange device.
To control the spacecraft attitude, angular momentum is transferred between the wheels and the
platform. By mounting three reaction wheels with spin axes not in the same plane (typically
along orthogonal axes), a torque can be created about an arbitrary axis of the spacecraft
platform. As actuators, reaction wheels provide the most precise attitude control.
As we have seen in Chapter 12, there are a number of external disturbance torques acting
on a spacecraft. These external disturbance torques result in a change in overall spacecraft
angular momentum. When the spacecraft attitude is controlled using reaction wheels, this
change in spacecraft angular momentum manifests itself as a change in stored angular
momentum in the wheels. To illustrate, suppose the control objective is to keep the spacecraft
platform attitude inertially ﬁxed. In this case, the controlled platform has zero angular
momentum, and the entire change in spacecraft angular momentum occurs in the wheels.
Therefore, while reaction wheels provide the most precise attitude control, they cannot be
used exclusively, since external disturbances result in a build-up of wheel angular momentum.
Therefore, any spacecraft attitude control system utilizing reaction wheels must be augmented
with reaction-type actuators (either thrusters or magnetic torquers) capable of creating an
wheel rotational acceleration
platform rotational acceleration
wheel
platform
Figure 26.11
Reaction wheel principle

510
Spacecraft Dynamics and Control: An Introduction
momentum wheel
sense of rotation
bias momentum vector
Figure 26.12
Spacecraft with momentum wheel
external torque on the spacecraft to de-load the built up angular momentum in the wheels.
This procedure is known as momentum dumping.
26.2.4
Momentum Wheels
Momentum wheels have a large non-zero nominal speed. As we have seen in Chapter 15 and
Section 18.2, this gives the spacecraft a bias momentum which provides gyroscopic stability
(see Figure 26.12). What this means is that the spacecraft will resist an external disturbance
torque that attempts to turn the bias momentum vector. This is useful in the case when it is
desired to keep one of the spacecraft axes inertially ﬁxed (the axis parallel to the wheel spin
axis). Momentum wheels can be used in two different ways. In the ﬁrst, the only purpose
for the wheel is to provide a bias momentum to the spacecraft, in which case the momentum
wheel speed is kept constant. In the second, the wheel not only provides a bias momentum
to the spacecraft, but it also provides attitude control to the spacecraft about the wheel spin
axis. For example, if the spacecraft is equipped with a momentum wheel whose spin axis is
aligned with the spacecraft pitch axis, then the momentum wheel can also be used to control
the spacecraft pitch angle. In the second case, external disturbances on the spacecraft will
cause the momentum wheel speed to deviate from the nominal set-point, and momentum
management using thrusters or magnetic torquers will be needed just as for reaction wheels.
26.2.5
Control Moment Gyroscopes
Control moment gyroscopes (CMG) are like momentum wheels, except the wheel spin-axis
is gimballed. The wheel spins with a constant high speed. By applying a torque to turn the
gimbal (which turns the wheel spin-axis), a large gyroscopic reaction torque is generated
perpendicular to the gimbal axis (see Figure 26.13). As such, a control moment gyroscope acts
as a torque ampliﬁer, and is useful when large control torques are needed. The CMG depicted
in Figure 26.13 is a single gimbal control moment gyroscope. There also exist double gimbal
control moment gyroscopes, in which case an inner gimbal is mounted in an outer gimbal. In
that case, the wheel is mounted in the inner gimbal.
Control moment gyroscopes are also momentum exchange devices. As such, external distur-
bance torques acting on the spacecraft result in a net change in the gimbal angles. The gimbal
angles typically have a limited range. Like reaction wheels, control moment gyroscopes also

Practical Spacecraft Attitude Control Design Issues
511
large gyroscopic reaction torque
gimbal turn
Figure 26.13
Single gimbal control moment gyroscope
must be augmented with reaction-type actuators capable of creating external torques on the
spacecraft in order to restore the CMG gimbal angles to their nominal settings.
26.3
Control Law Implementation
In Chapters 17 to 23, all control laws are designed as transfer functions, which are complex
functions in the Laplace domain. However, what do these transfer functions mean, given that
the control laws must be implemented in the time-domain? How do we implement these
control laws? What additional issues must be considered? We shall address these questions in
this section.
26.3.1
Time-Domain Representation of a Transfer Function
The control laws designed in Chapters 17 to 23 take the form
U(s) = Gc(s)E(s),
(26.3)
where E(s) is the Laplace transform of the tracking error, U(s) is the Laplace transform of the
control command, and Gc(s) is the control law transfer function. We shall now look at what
this means in the time-domain. As we have seen in previous chapters, if the control law takes
a simple form such as proportional-derivative (PD) or proportional-integral-derivative (PID),
then it is a simple matter to obtain the corresponding time-domain representation. However, it
is not immediately obvious for more elaborate transfer functions.
Consider the generic control law with transfer function
Gc(s) = a0sn + a1sn−1 + · · · an
sn + b1sn−1 + · · · + bn
.
(26.4)
We shall now obtain a time-domain representation for (26.4). First, let us rewrite Gc(s) as
Gc(s) = a0 + ¯Gs(s),
(26.5)
where
¯Gs(s) =
¯a1sn−1 + · · · + ¯an
sn + b1sn−1 + · · · + bn
,

512
Spacecraft Dynamics and Control: An Introduction
and ¯ai = ai −a0bi for i = 1, . . . , n. Substituting (26.5) into (26.3), we ﬁnd that
U(s) = U1(s) + U2(s),
(26.6)
where
U1(s) = a0(s)E(s), U2(s) = ¯Gc(s)E(s).
Taking the inverse Laplace transform of (26.6), we obtain
u(t) = u1(t) + u2(t).
(26.7)
We immediately have
u1(t) = a0e(t).
(26.8)
We must now ﬁnd u2(t). We ﬁrst write
U2(s) =
¯a1sn−1 + · · · ¯an
sn + b1sn−1 + · · · + bn
E(s).
(26.9)
A naive approach to ﬁnding u2(t) would be to rearrange (26.9) as

sn + b1sn−1 + · · · + bn

U2(s) =
¯a1sn−1 + · · · ¯an

E(s),
and take inverse Laplace transforms of both sides to obtain
dnu2
dtn + b1
dn−1u2
dtn−1 + · · · + bnu2 = ¯a1
dn−1e
dtn−1 + · · · + ¯ane(t).
This yields a linear ordinary differential equation in the time-domain. However, as seen on the
right-hand side, it includes derivatives of the tracking error e(t) up to the order n −1, which
are typically not available, so this approach is not very useful for the implementation of the
control law in the time-domain.
Instead, let us deﬁne
Z(s) =
E(s)
sn + b1sn−1 + · · · + bn
.
(26.10)
Then, using (26.9), we ﬁnd that
U2(s) =
¯a1sn−1 + · · · ¯an

Z(s).
(26.11)
Taking inverse Laplace transforms of both sides of (26.11), we obtain
u2(t) = ¯a1
dn−1z
dtn−1 + ¯a2
dn−2z
dtn−2 + · · · + ¯anz(t).
(26.12)

Practical Spacecraft Attitude Control Design Issues
513
We now rearrange (26.10) to get

sn + b1sn−1 + · · · + bn

Z(s) = E(s).
Taking inverse Laplace transforms, we now obtain
dnz
dtn + b1
dn−1z
dtn−1 + · · · + bnz = e(t).
(26.13)
This is an nth order differential equation in z(t), which does not contain any derivatives of
e(t). Let us now put it in ﬁrst order form. We deﬁne
xc,1 = z, xc,2 = dz
dt , . . . , xc,n = dn−1z
dtn−1 .
With these deﬁnitions we have
dxc,1
dt
= xc,2, dxc,2
dt
= xc,3, . . . , dxc,n−1
dt
= xc,n,
and from (26.13) we have
dxc,n
dt
= −b1xc,n−1 −b2xc,n−2 −· · · −bnxc,1 + e(t).
Therefore, we can write (26.13) as
˙xc = Acxc + Bce(t),
(26.14)
where
xc =
⎡
⎢⎢⎢⎢⎢⎣
xc,1
xc,2
...
xc,n−1
xc,n
⎤
⎥⎥⎥⎥⎥⎦
, Ac =
⎡
⎢⎢⎢⎢⎢⎣
0
1
0
· · ·
0
0
0
1
· · ·
0
...
...
...
0
0
1
−bn
−bn−1
−bn−2
· · ·
−b1
⎤
⎥⎥⎥⎥⎥⎦
, Bc =
⎡
⎢⎢⎢⎢⎢⎣
0
0
...
0
1
⎤
⎥⎥⎥⎥⎥⎦
.
Likewise, equation (26.12) can be written as
u2(t) = Ccxc,
(26.15)
where
Cc =

¯an
¯an−1
· · ·
¯a1

.

514
Spacecraft Dynamics and Control: An Introduction
Finally, using (26.7), we can combine equations (26.14), (26.8) and (26.15) to obtain the
time-domain representation of (26.3) as
˙xc = Acxc + Bce(t),
u(t) = Ccxc + Dce(t),
(26.16)
where Dc = a0. The equations (26.16) are called a state-space realization of the transfer
function relationship (26.3). Furthermore, none of the derivatives of e(t) appear, which is
important for the implementation of the control law.
It is interesting to note that Ac has characteristic equation
det [s1 −Ac] = sn + b1sn−1 + · · · + bn,
which is precisely the denominator of the corresponding transfer function Gc(s) in (26.4).
Therefore, the poles of the transfer function Gc(s) are equal to the eigenvalues of Ac in the
corresponding state-space realization.
26.3.2
Control Law Digitization
In the previous subsection, we have obtained a time-domain representation of a control law,
namely an ordinary differential equation, which must be solved in continuous-time if it is
to be implemented directly. However, modern control systems are typically implemented on
a digital processor. The processor samples the sensors at discrete sampling instants tk as
shown in Figure 26.14 (a), and computes the corresponding control torque to be applied by
the actuators. The control torque is held constant throughout the sample period until the next
sensor measurement is processed, as illustrated in Figure 26.14 (b). This is called a zero-order
hold (ZOH) control implementation.
Therefore, a continuous-time control law as in (26.16) cannot be implemented digitally.
However, by sampling fast enough, the digital control implementation can approximate the
continuous control design (see Figure 26.14 (b)). The question may be asked as to why the
control design is not performed directly in the discrete-time domain. Control design directly in
the discrete domain is certainly possible, and tools similar to those presented in Chapters 17 to
23 exist for discrete systems. However, control system design is more common and intuitive in
the continuous-time domain, which is why this is the approach taken in this book. Therefore,
e(t)
tk−1
tk
tk+1
(a) Digital tracking error sampling
u(t)
tk−1
tk
tk+1
(b) Digital control input
digital
continuous
Figure 26.14
Control law digitization

Practical Spacecraft Attitude Control Design Issues
515
a typical control design procedure is to initially design a continuous control law, then digitize
it and ﬁnally check that it performs similarly to the original continuous design.
We now turn our attention to approximating the continuous control law (26.16) digitally.
Let us integrate both sides of the differential equation in (26.16) over one sample period from
tk to tk+1. We have
xc(tk+1) = xc(tk) +
 tk+1
tk
[Acxc(t) + Bce(t)] dt.
(26.17)
Since error signal e(t) is sampled and not continuously available, we need to approximate the
integral on the right in (26.17). Let us use the trapezoidal rule, which results in
 tk+1
tk
xc(t)dt ≈t
2 (xc(tk) + xc(tk+1)) ,
 tk+1
tk
e(t)dt ≈t
2 (e(tk) + e(tk+1)) ,
where t = tk+1 −tk is the sample period. Substituting this into (26.17) and rearranging, we
obtain

1 −t
2 Ac

xc(tk+1) −t
2 Bce(tk+1) =

1 + t
2 Ac

xc(tk) + t
2 Bce(tk). (26.18)
Based on the left-hand side of (26.18), let us deﬁne
zc,k =
1
√
t

1 −t
2 Ac

xc(tk) −t
2 Bce(tk)

,
(26.19)
which rearranges to give
xc(tk) =
√
t

1 −t
2 Ac
−1
zc,k + t
2

1 −t
2 Ac
−1
Bce(tk).
(26.20)
Substituting these into (26.18) and rearranging (try this as an exercise), we obtain
zc,k+1 = [1 + (t/2)Ac] [1 −(t/2)Ac]−1 zc,k
+
√
t [1 −(t/2)Ac]−1 Bce(tk).
(26.21)
From the output equation in (26.17), we have
uk = Ccxc(tk) + Dce(tk),
(26.22)
where we have deﬁned uk = u(tk). Substituting (26.20) into (26.22), and combining with
equation (26.21), we obtain a digitized approximation to the controller corresponding to
(26.16)
zc,k+1 = Fczc,k + Gce(tk),
uk = Hczc,k + Lce(tk),
(26.23)

516
Spacecraft Dynamics and Control: An Introduction
where
Fc = [1 + (t/2)Ac] [1 −(t/2)Ac]−1 ,
√
t [1 −(t/2)Ac]−1 Bc,
Hc =
√
tCc [1 −(t/2)Ac]−1 , Lc = Dc + (t/2)Cc [1 −(t/2)Ac]−1 Bc.
Note that zc,k is the state vector of the digitized controller. The digitization procedure we have
used to obtain (26.23), is also known as the bilinear transformation of (26.16).
We see that when differential equations such as those in (26.16) are digitized, they become
difference equations as in (26.23). These difference equations are very suitable for digital
implementation. In fact, we have a very simple recursive algorithm corresponding to (26.23),
which illustrates how it would be implemented on a digital processor:
1. Set zc,0 = −(
√
t/2)Bce(t0) and k = 0.
2. Sample e(tk) and compute the control output uk = Hczc,k + Lce(tk).
3. Update zc,k+1 = Fczc,k + Gce(tk).
4. Store zc,k+1, and set k = k + 1.
5. Return to Step 2.
As we have explained, when the controller is implemented digitally, the control input is
applied to the plant (which has continuous dynamics) through a zero-order hold as shown in
Figure 16.14 (b), namely
u(t) = uk, tk ≤t < tk+1,
(26.24)
where uk is computed at each sample instant using (26.23). Finally, the digital control law
implementation with the continuous plant (in this book, the spacecraft attitude dynamics) is
shown in Figure 26.15.
Gp(s)
zc,k+1
=
Fczc,k + Gce(tk)
uk
=
Hczc,k + Lce(tk)
Continuous Plant
Digital Controller
−
+
ZOH
y(t)
r(t)
e(t)
e(tk)
uk
u(t)
sampler
Figure 26.15
Digital control law implementation

Practical Spacecraft Attitude Control Design Issues
517
26.3.3
Closed-Loop Stability Analysis
It is very important to note that the closed-loop system with the digital controller (as in Figure
26.15), is not the same as the originally designed closed-loop system with continuous control.
It is therefore important to be able to check the closed-loop system with the digital controller
to see that it still conforms to the designed for requirements. In particular, it is important to
check that it is stable, which is the subject of this section.
To analyze the closed-loop stability, we ﬁrst note that similar to the controller with transfer
function Gc(s), we can represent the plant with transfer function G p(s) in state-space form as
˙xp = Apxp + Bpu(t),
y(t) = Cpxp,
(26.25)
For simplicity, we assume that the output y(t) does not directly depend on the input u(t). This
is certainly the case for spacecraft dynamics. To obtain the state-space representation of the
plant in the form (26.25), we can obtain it from the transfer function G p(s) using the same
procedure as in Section 26.3.1, or we could obtain it directly from the differential equations
describing the plant dynamics (which are not necessarily ﬁrst order) using a procedure as in
Appendix B. In any case, we assume that a state-space representation of the form (26.25) is
available.
Let us now examine the solution of (26.25) when the control (26.24) is applied. We take
as initial condition xp(tk) at sampling instant tk, and examine the resulting solution xp(tt+1) at
the next sampling instant tk+1. To do this, we need the matrix exponential, which is deﬁned
as
exp(At) =
∞

n=0
1
n!Antn,
(26.26)
where the zeroth power of A is deﬁned as A0 = 1. The inﬁnite series in (26.26) converges
for all bounded square matrices A and for all −∞< t < ∞. The matrix exponential has the
following properties
exp(At1) exp(At2) = exp(A(t1 + t2)),
d
dt exp(At) = A exp(At) = exp(At)A.
(26.27)
Let us now multiply the differential equation in (26.25) by exp(−Apt) to get
exp(−Apt)˙xp = exp(−Apt)Apxp + exp(−Apt)Bpu(t),
and making use of the product rule for differentiation as well as the second property in (26.27),
this can be rearranged to give
d
dt

exp(−Apt)xp(t)

= exp(−Apt)Bpu(t).

518
Spacecraft Dynamics and Control: An Introduction
We can now integrate both sides to obtain
 tk+1
tk
d
dt

exp(−Apt)xp(t)

dt =
 tk+1
tk
exp(−Apt)Bpu(t)dt,
Because of the zero order hold in (26.24), this becomes
exp(−Aptk+1)xc(tk+1) −exp(−Actk)xp(tk) =
 tk+1
tk
exp(−Apt)Bpdt uk.
Pre-multiplying both sides by exp(Ap(tk+1)), and making use of the ﬁrst property in (26.27),
we obtain the solution
xp(tk+1) = exp(Apt)xp(tk) +
 tk+1
tk
exp(Ap(tk+1 −t))Bcukdt.
(26.28)
We see that when the control (26.24) is applied to the plant (26.25), the plant can be represented
by a difference equation of the same form as for the digital controller in (26.23). Note that this
discretization of the plant is exact. Therefore, we generically write the discrete representation
of the plant as
xp(tk+1) = Fpxp(tk) + Gpuk,
y(tk) = Cpxp(tk),
(26.29)
where
Fp = exp(Apt), Gp =
 t
0
exp(Ap(t −τ))Bcdτ.
Note that a change of variable t →t + tk has been made in the integration to obtain the
expression for Gp. We can now use (26.29) and (26.23) to form the discrete closed-loop
system. Combining (26.29) and (26.23), we obtain (the reader should check this as an exercise)
xp(tk+1)
zc,k+1

=
Fp −GpLcCp
GpHc
−GcCp
Fc
 xp(tk)
zc,k

+
GpLc
Gc

r(tk),
y(tk) =

Cp
0 xp(tk)
zc,k

,
uk =

−LcCp
Hc
 xp(tk)
zc,k

+ Lcr(tk).
(26.30)

Practical Spacecraft Attitude Control Design Issues
519
The closed-loop stability can now be checked. It turns out that the closed-loop system is
asymptotically stable if and only if the eigenvalues of the matrix
Fp −GpLcCp
GpHc
−GcCp
Fc

have magnitude less than 1.
26.3.4
Sampling Considerations
As explained in Section 26.3.2, the sampling rate for the digital controller must be fast enough
such that its performance approximates that of the originally designed continuous controller.
So the question arises as to how fast is fast enough. The following rule of thumb is often used:
The sampling rate should be at least 20 times the closed-loop bandwidth.
In the remainder of this section, we identify and brieﬂy discuss two consequences of digital
control implementation which need to be accounted for.
26.3.4.1
Delay Due to Zero Order Hold
As demonstrated in Figure 26.16, the digital implementation of a control law through a zero
order hold as in Figure 26.15, effectively introduces a time-delay of half the sample period
t/2. This has the effect of reducing the positive phase margin, and as we have seen in
Chapter 23, results in an increase in overshoot.
As already mentioned, if the sampling rate is selected to be at least 20 times the closed-loop
bandwidth, the performance with the digital controller can be expected to be similar to the
original continuous design. If the sampling rate is at least 30 times the closed-loop bandwidth,
the performance can be expected to be almost identical. However, due to the available control
hardware, it is not always feasible to have such fast sample rates. One way to mitigate the
effect of the effective delay caused by the zero order hold is to account for it in the original
continuous control design. This can be accomplished by inserting an approximation of the
u(t)
Δt
t
continuous
digital
digital average
Figure 26.16
Delay due to zero order hold

520
Spacecraft Dynamics and Control: An Introduction
zero order hold into the feedback loop. One simple continuous approximation of the zero order
hold is the ﬁrst order ﬁlter
G Z O H(s) =
1
(t/2)s + 1.
26.3.4.2
Aliasing
Let us consider a continuous sinusoidal signal of frequency ω, given by
y(t) = A sin(ωt + φ),
(26.31)
where A is the amplitude and φ the initial phase. Now, suppose that we will sample this signal
at times
tk = kt, k = 0, 1, . . .
(26.32)
where t is the sample period. The corresponding sample frequency (in rad/s) is
ωs = 2π
t .
(26.33)
Correspondingly, the sampled signal has values
y(tk) = A sin(ωkt + φ).
(26.34)
Using the simple identity sin a = sin(a + n2π) for any real number a and any integer n, we
can also write (26.34) as
y(tk) = A sin (ωkt + φ + nk2π) ,
= A sin (ωkt + φ + nk2π(ωs/ωs)) .
Recognizing that t = 2π/ωs from (26.33), we ﬁnally have
y(tk) = A sin ((ω + nωs)kt + φ) , n = . . . −2, −1, 0, 1, 2, . . . ,
(26.35)
which is equivalent to sampling any of the signals
y(t) = A sin ((ω + nωs)t + φ) , n = . . . −2, −1, 0, 1, 2, . . .
Therefore, the sampling process cannot distinguish between sinusoidal signals of frequency
ω + nωs, where ωs is the sampling frequency. This is called aliasing, and is an artefact of the
sampling process. Figure 26.17 illustrates the phenomenon with an example. In this example,
the primary signal to be sampled has frequency f = 1.2 Hz, the sampling frequency is f = 1.0
Hz, and the aliased signal has frequency fa = f −fs = 0.2 Hz. It is clear from Figure 26.17

Practical Spacecraft Attitude Control Design Issues
521
0
1
2
3
4
5
−1
−0.8
−0.6
−0.4
−0.2
0
0.2
0.4
0.6
0.8
1
Amplitude
Time (s)
f=1.2 Hz
fa=0.2 Hz
sampled data
Figure 26.17
Example of aliasing
that both the primary signal and the aliased signal yield the exact same data samples. Hence,
the sampler cannot distinguish between the two signals.
Suppose now that we have some additional information. That is, we know that the signal to
be sampled has frequency in the range ω ∈[0, ¯ω], where ¯ω > 0. Let us now determine what
sampling frequency ωs > 0 is required to be able to uniquely determine the signal.
Before proceeding, suppose that some aliased signal has frequency ω + nωs < 0 for
some integer n ≤−1, and let ωn = −(ω + nωs) > 0. Then, the aliased signal ya,n(t) =
A sin ((ω + nωs)t + φ) can also be written as
ya,n(t) = A sin (−ωnt + φ) = A sin

ωnt + ¯φ

,
where ¯φ = π −φ. Therefore, an aliased signal with frequency ω + nωs in the range [−¯ω, 0]
for some n ≤−1, is equivalent to a signal with frequency ωn = −(ω + nωs) in the range
[0, ¯ω].
As such, in order to be able to uniquely identify the signal to be sampled, we must ensure
that all aliased signals with frequencies ω + nωs lie outside the range [−¯ω, ¯ω], for all non-
zero integers n. Since ω + nωs > ω for all n ≥1, and ω + nωs < ω for all n ≤−1, and since
0 ≤ω ≤¯ω, this leads to the two requirements that
ω + nωs > ¯ω, n ≥1, and ω −nωs < −¯ω, n ≥1,
which reduces to
ω + ωs > ¯ω, and ω −ωs < −¯ω.
(26.36)

522
Spacecraft Dynamics and Control: An Introduction
The ﬁrst of these leads to
ωs > ¯ω −ω.
Since this must hold for all ω ∈[0, ¯ω], this becomes
ωs > ¯ω.
(26.37)
The second inequality in (26.36) leads to
ωs > ¯ω + ω.
Again, since this must hold for all ω ∈[0, ¯ω], this becomes
ωs > 2 ¯ω.
(26.38)
It is clear that the requirement (26.38) supersedes the requirement (26.37). Therefore, we ﬁnd
that the sampling frequency ωs must be at least twice the frequency ω of the sampled signal
in order to be able to uniquely reconstruct it. This is the sampling theorem of Nyquist and
Shannon, and the frequency
ωN S = 2ω,
(26.39)
is called the Nyquist sampling frequency corresponding to a signal of frequency ω, and it
provides the minimum required sampling frequency necessary to be able to reconstruct the
original signal from its samples.
So, why are these issues important? Well ﬁrst of all, we would like to provide good
tracking of reference signals at frequencies within the closed-loop bandwidth. Therefore, it
is important that aliases of the signals to be tracked do not appear within the closed-loop
bandwidth (aliases outside the closed-loop bandwidth do not matter, since they are attenuated
anyway). The Nyquist and Shannon sampling theorem then suggests that the sample rate for
the digital controller should be at least twice the closed-loop bandwidth. However, as noted
before, we typically try to make the sample rate much faster (at least 20 times the closed-loop
bandwidth). Second of all, as explained in Chapter 23, the continuous control law is designed
such that high frequency noise has little effect on the closed-loop system. This is done by
limiting the closed-loop, open-loop, and controller bandwidths. However, due to aliasing,
high frequency noise on the sampled signal can manifest itself at lower frequencies within
these bandwidths, which can result in signiﬁcant degradation in the performance of the digital
controller. Therefore, it is important that high frequency sensor noise be attenuated as much
as possible before sensor sampling. This is accomplished by placing an anti-alias pre-ﬁlter
before the sampler, as shown in Figure 26.18. Obviously, such a ﬁlter cannot be digital, and
must be implemented using an analog circuit.
For instance, a simple ﬁrst-order low-pass ﬁlter such as
Ha(s) =
1
Tas + 1,
(26.40)

Practical Spacecraft Attitude Control Design Issues
523
Continuous
Digital
−
+
ZOH
y(t)
r(t)
sampler
Plant
Controller
Anti-alias
Filter
+
+ w(t) - sensor noise
Figure 26.18
Use of anti-aliasing ﬁlter
may be used. Now the question arises as to how to select the ﬁlter corner frequency 1/Ta. First
of all, the ﬁlter bandwidth should be wider than the original controller bandwidth. Next, by the
Nyquist and Shannon sampling theorem, we know that any signal with frequency above half
the sampling frequency (ωs/2) will be aliased into the range [0, ωs/2] (possibly at very low
frequencies within the controller bandwidth). On the other hand, the ﬁlter attenuates any signals
with frequencies above 1/Ta. Therefore, it makes sense to select the ﬁlter corner frequency as
1/Ta < ωs/2. In this way, any signals with frequencies above 1/Ta are signiﬁcantly attenuated
when aliased into the frequency range [0, 1/Ta], and any signals with frequencies in the range
[0, 1/Ta] do not have aliases in the frequency range [0, 1/Ta]. Therefore, the combined anti-
alias ﬁlter and sampler essentially pass through an un-altered frequency spectrum in the range
[0, 1/Ta], and any aliased signals appear at higher frequencies. The end result is that the digital
controller sees the originally designed for spectrum of signals within the controller bandwidth
and any alteration of the spectrum of signals due to aliasing occurs at higher frequencies
outside the controller bandwidth with little effect on controller performance.
Finally, if the sample rate is chosen to be at least 20 times the closed-loop bandwidth, then
the anti-alias pre-ﬁlter in (26.40) has a bandwidth that is much wider than the open-loop and
controller bandwidths, and therefore does not have much effect on the originally designed
continuous closed-loop system (of course, the anti-alias pre-ﬁlter could also be incorporated
into the original continuous design).
26.4
Unmodeled Dynamics
In all of Chapters 17 to 24, we have considered spacecraft to be rigid bodies for the pur-
poses of attitude control design. This is a useful approximation to make, since it simpliﬁes
the attitude control system design. However, as noted in Chapters 14 and 15, no space-
craft structure is perfectly rigid. Additionally, if the spacecraft is equipped with a propulsion
system, propellant sloshing in the fuel tanks complicates the spacecraft dynamics as well.
Both spacecraft ﬂexibility and propellant sloshing can have signiﬁcant effects on the perfor-
mance of a spacecraft attitude control system, and can even lead to instability if not properly
accounted for.

524
Spacecraft Dynamics and Control: An Introduction
θ
T
Rigid Hub
Flexible Appendage
Flexible Appendage
Figure 26.19
Single-axis ﬂexible spacecraft model
26.4.1
Effects of Spacecraft Flexibility
In this subsection, we shall examine the qualitative effects of spacecraft ﬂexibility on the
spacecraft attitude dynamics. In keeping with Chapters 17 to 23, we shall limit our discussion
to attitude motion (including vibration) about a single axis.
Spacecraft structures may generally be divided into two parts: 1) the main spacecraft hub,
and 2) appendages. The main spacecraft hub typically includes all attitude control hardware
(sensors and actuators) as well as any payload instrumentation. It is very important that
elastic deformations of the spacecraft hub are very small, since the relative orientations of the
sensors, actuators and payload need to be known very accurately. As a result, the spacecraft
hub structure is generally designed to be very stiff. The appendages on the other hand could
include deployable solar panels and antennas. Their orientations relative to the spacecraft hub
are generally not as critical, and they could be structurally quite ﬂexible. As such, a reasonable
model of a spacecraft is one with a rigid hub and ﬂexible appendages. Since the attitude control
hardware is mounted on the hub, the attitude sensors measure attitude motion of the rigid hub,
and the attitude actuators apply control torques to the rigid hub.
We shall consider a general single-axis ﬂexible spacecraft such as that illustrated in Figure
26.19. Our development is valid for any number of ﬂexible appendages, we only show two for
illustration purposes. Note that θ is the spacecraft attitude, and T is the torque applied to the
spacecraft.
Assuming small elastic deformations of the appendages, no internal structural damping, and
a ﬁnite-dimensional model for the appendages, the equations of motion (which we present
without derivation) take the form
M¨q + Kq = FT,
(26.41)
where
M =
I
bT
b
Me

, K =
0
0
0
Ke

, F =
1
0

, q =
 θ
qe

.
Note that I is the moment of inertia for the entire undeformed spacecraft about its center of
mass (including the hub and appendages in their undeformed (elastically neutral) states). We

Practical Spacecraft Attitude Control Design Issues
525
call M the system mass matrix and K the system stiffness matrix, both of which are constant.
Note that M is symmetric and positive deﬁnite. We call the n × n matrix Me the elastic
mass matrix, and the n × n matrix Ke the elastic stiffness matrix. Note that both Me and Ke
are symmetric and positive deﬁnite. The vector qe is an n-dimensional vector containing the
elastic coordinates, and its details depend on the method used to model the appendages. The
n-dimensional vector b couples the spacecraft attitude motion (θ) to the elastic deformations
(qe).
Let us now expand (26.41) into its components as
I ¨θ + bT ¨qe = T,
Me ¨qe + Keqe = −b ¨θ.
(26.42)
We note that if we ﬁx the spacecraft hub (set θ ≡˙θ ≡¨θ ≡0), then the equations of motion
for the ﬂexible appendages become
Me ¨qe + Keqe = 0.
(26.43)
We call these the constrained ﬂexible spacecraft equations of motion. By comparison, we call
equations (26.42) (equivalently (26.41)) the unconstrained ﬂexible spacecraft equations of
motion.
We shall now ﬁnd the transfer function from control torque ˆT (s) = L(T ) to spacecraft
attitude ˆθ(s) = L(θ). First, we shall write equations (26.42) in a simpler form. To do this, we
make use of the following result from linear algebra.
Theorem 26.1 Let M and K be any n × n symmetric real matrices, with the restriction that
M be positive deﬁnite. Then, there exists a non-singular n × n real matrix C such that
CT MC = 1, CT KC = ,
where  is a real diagonal matrix given by
 = diag [λ1, λ2, . . . , λn] ,
The λi are generalized eigenvalues satisfying the generalized eigenvalue problem
Kx −λMx = 0, x ̸= 0.
If K is also positive deﬁnite, then λi > 0 for all i = 1, . . . , n.
Let us now apply Theorem 26.1 to Me and Ke. Since they are both positive deﬁnite, Theorem
26.1 tells us that there is a non-singular Cc such that
CT
c MeCc = 1, CT
c KeCc = c,
(26.44)
where
c = diag

ω2
c,1, ω2
c,2, . . . , ω2
c,n

,

526
Spacecraft Dynamics and Control: An Introduction
where ωc,i > 0 for i = 1, . . . , n. From Theorem 26.1, we also see that ωc,i satisfy
det

−ω2
cMe + Ke

= 0,
which is the characteristic equation associated with the constrained ﬂexible spacecraft equa-
tions of motion (26.43). Correspondingly, we call ωc,i the constrained natural frequencies of
vibration.
Let us now deﬁne
ˆCc =
1
0
0
Cc

,
and make the change of variables
qc = ˆC−1
c q.
(26.45)
Using the deﬁnition of q, we ﬁnd that
qc =
 θ
ηc

,
where ηc = C−1
c qe. Making the change of variables in (26.41), we obtain
M ˆCc ¨qc + K ˆCcq = FT.
Multiplying both sides on the left by ˆCT
c , this becomes
Mc ¨qc + Kcqc = FcT,
(26.46)
where
Mc = ˆCT
c M ˆCc =
I
¯bT
¯b
1

, Kc = ˆCT
c M ˆCc =
0
0
0
c

, Fc = ˆCT
c F = F,
and ¯b = ˆCT
c b. Note that we have made use of equations (26.44) to obtain these expressions.
Expanding equations (26.46), we obtain
I ¨θ + ¯bT ¨ηc = T,
¨ηc + cηc = −¯b ¨θ.
(26.47)
Using the notation
ηc =

ηc,1, . . . , ηc,n
T , ¯b =

¯b1, . . . , ¯bn
T ,

Practical Spacecraft Attitude Control Design Issues
527
we can write equations (26.47) as
I ¨θ + n
i=1 ¯bi ¨ηc,i = T,
¨ηc,i + ω2
c,iηc,i = −¯bi ¨θ, i = 1, . . . , n.
(26.48)
It is clear that the equations of motion for ηc,i for i = 1, . . . , n become decoupled when
the spacecraft hub is ﬁxed (θ ≡0). Correspondingly, we call ηc,i the constrained modal
coordinates.
To ﬁnd the transfer function from ˆT (s) = L(T ) to ˆθ(s) = L(θ), let us take Laplace trans-
forms of equations (26.48). We have
Is2 ˆθ(s) +
n

i=1
¯bis2 ˆηc,i = ˆT (s),
and

s2 + ω2
c,i

ˆηc,i(s) = −¯bis2 ˆθ(s).
We can rearrange these to obtain
Is2

ˆθ(s) +
n

i=1
(¯bi/I)ˆηc,i(s)

= ˆT (s),
(26.49)
and
ˆηc,i(s) = −
¯bis2 ˆθ(s)
s2 + ω2
c,i
.
(26.50)
Substituting (26.50) into (26.49), and rearranging, we obtain
ˆθ(s) = G p(s) ˆT (s),
(26.51)
where
G p(s) =
n
i=1

s2 + ω2
c,i

Is2 n
i=1

s2 + ω2
c,i

−s4 n
j=1 ¯b2
i
n
j=1, j̸=i

s2 + ω2
c, j
.
(26.52)
Equation (26.52) provides a nice factorization for the numerator of G p(s), but not the denom-
inator. We now ﬁnd a factorization for the denominator. To do this, we shall make use of the
following result.
Lemma 26.1 Consider the matrix
A =
a11
aT
21
a21
A22

,

528
Spacecraft Dynamics and Control: An Introduction
with A22 symmetric. Let Di j be the matrix formed by deleting the ith row and jth column of A22.
Let G be the co-factor matrix associated with A22, which is deﬁned by Gi j = (−1)i+ j det

Di j

.
Then, the determinant of A is given by
det [A] = a11 det [A22] −aT
21Ga21.
This can readily be demonstrated by expanding det [A] along the ﬁrst column.
We return to the equations of motion in the form (26.46). Consider
s2Mc + Kc =
s2I
s2 ¯bT
s2 ¯b
s21 + c

.
We readily ﬁnd that the co-factor matrix of s21 + c is given by
cof

s21 + c

= diagi=1,...,n
⎧
⎨
⎩
n
j=1, j̸=i

s2 + ω2
c,i

⎫
⎬
⎭.
As a result, by direct application of Lemma 26.1, we ﬁnd that the denominator of G p(s) in
(26.52) satisﬁes
det

s2Mc + Kc

= Is2
n
i=1

s2 + ω2
c,i

−s4
n

j=1
¯b2
i
n
j=1, j̸=i

s2 + ω2
c, j

.
(26.53)
Let us now ﬁnd another expression for det

s2Mc + Kc

. Since Mc = ˆCT
c M ˆCc is positive
deﬁnite (because M is positive deﬁnite and ˆCc is non-singular), it can be shown that the
matrix 1 −(1/I)¯b¯bT is positive deﬁnite also. Making use of Theorem 26.1, we can then ﬁnd
a non-singular matrix Cu such that
CT
u

1 −(1/I)¯b¯bT 
Cu = 1, CT
u cCu = u,
(26.54)
where
u = diag

ω2
u,1, ω2
u,2, . . . , ω2
u,n

,
where ωu,i > 0 for i = 1, . . . , n. Let us now deﬁne
ˆCu =
1
−(1/I)¯bT Cu
0
Cu

.
(26.55)
Then, by direct multiplication (and using equations (26.54)), we obtain
ˆCT
u Mc ˆCu = Mu =
I
0
0
1

,
ˆCT
u Kc ˆCu = Ku =
0
0
0
u

.
(26.56)

Practical Spacecraft Attitude Control Design Issues
529
Let us now consider
det

s2Mu + Ku

= det
s2I
0
0
s21 + u

= Is2
n
i=1

s2 + ω2
u,i

.
Now,
det

s2Mu + Ku

= det

 ˆCT
u

s2Mc + Kc
 ˆCu

,
= det

 ˆCu
2 det

s2Mc + Kc

.
Therefore, we ﬁnd from (26.53) that the denominator of G p(s) is given by
Is2
n
i=1

s2 + ω2
c,i

−s4
n

j=1
¯b2
i
n
j=1, j̸=i

s2 + ω2
c, j

=
1
det

 ˆCu
2 Is2
n
i=1

s2 + ω2
u,i

.
(26.57)
Substituting this into the transfer function in (26.52), we obtain
G p(s) = det

 ˆCu
2 n
i=1

s2 + ω2
c,i

Is2 n
i=1

s2 + ω2
u,i

.
(26.58)
From (26.58), we see that we can write
G p(s) = G p,r(s)G p, f (s),
(26.59)
where
G p,r(s) =
1
Is2 ,
and
G p, f (s) = K
n
i=1

(s/ωc,i)2 + 1

n
i=1

(s/ωu,i)2 + 1
, K = G p, f (0) = det

 ˆCu
2
n
i=1 ω2
c,i
n
i=1 ω2
u,i
.
Rearranging equation (26.59), we have G p, f (s) = G p(s)/G p,r(s) = Is2G p(s). Therefore,
from (26.52), we readily ﬁnd that K = G p, f (0) = 1. As seen in (26.59), the transfer function
from ˆT (s) to ˆθ(s) can be separated into a rigid body component (G p,r(s)) and a contribution
from the ﬂexible modes (G p, f (s)).
Let us now obtain the physical meaning for the frequencies ωu,i for i = 1, . . . , n. We now
show that (0, ω2
u,1, ω2
u,2, . . . , ω2
u,n) are the generalized eigenvalues of
Kx −λMx = 0, x ̸= 0,
(26.60)

530
Spacecraft Dynamics and Control: An Introduction
where M and K are given in (26.41). The characteristic equation corresponding to (26.60) is
det (K −λM) = 0,
which can be rewritten as
0 = det (K −λM) ,
= det
 ˆC−T
c
ˆC−T
u
[Ku −λMu] ˆC−1
u ˆC−1
c

,
= det
 ˆC−1
c
2 det
 ˆC−1
u
2 det (Ku −λMu) .
Therefore, since ˆCc and ˆCu are non-singular, the characteristic equation is equivalent to
det (Ku −λMu) = 0.
Using the deﬁnitions of Mu and Ku in (26.56), this becomes
Iλ
n
i=1
(λ −ω2
u,i) = 0,
from which the result is obvious. As such, we call ωu,i the unconstrained natural frequencies
of vibration.
We now examine the relationship between the constrained and unconstrained natural fre-
quencies. To do this, we make use of the following inclusion theorem from linear algebra.
Theorem 26.2 Let M and K both be n × n symmetric matrices, with M positive deﬁnite,
and let ˆM and ˆK be the matrices obtained by deleting both the ﬁrst row and column of M
and K, respectively. Let λ1 ≤λ2 ≤. . . ≤λn be the generalized eigenvalues corresponding
to Kx −λMx = 0 with x ̸= 0, and let ˆλ1 ≤ˆλ2 ≤. . . ≤ˆλn−1 be the generalized eigenvalues
corresponding to ˆKˆx −λ ˆMˆx = 0 with ˆx ̸= 0. Then,
λ1 ≤ˆλ1 ≤λ2 ≤. . . ≤λn−1 ≤ˆλn−1 ≤λn.
Let us now order the constrained and unconstrained natural frequencies as ωc,1 ≤. . . ≤ωc,n,
and ωu,1 ≤. . . ≤ωu,n, respectively. Since Me and Ke are obtained by deleting the ﬁrst row
and column of M and K in (26.41), we ﬁnd upon application of Theorem 26.2 that
ωc,1 ≤ωu,1 ≤ωc,2 ≤. . . ≤ωc,n ≤ωu,n.
(26.61)
The lowest unconstrained natural frequency ωu,1 is given a special name, the fundamental
natural frequency, corresponding to the fundamental mode of vibration.

Practical Spacecraft Attitude Control Design Issues
531
26.4.1.1
Summary of Findings Thus Far
When there is no structural damping present, the transfer function relationship for the spacecraft
attitude is given by
ˆθ(s) = G p,r(s)G p, f (s) ˆT (s),
(26.62)
where
G p,r(s) =
1
Is2 ,
is the transfer function for the rigid spacecraft, and
G p, f (s) =
n
i=1

(s/ωc,i)2 + 1

n
i=1

(s/ωu,i)2 + 1
,
(26.63)
is the contribution of the spacecraft ﬂexibility. Each vibration mode contributes a pair of
imaginary poles at the corresponding unconstrained natural frequency ± jωu,i and a pair
of imaginary zeros at the corresponding at the corresponding constrained natural frequency
± jωc,i, with ωu,i ≥ωc,i. Figure 26.20 shows the corresponding poles and zeros of the space-
craft attitude transfer function G p(s) = G p,r(s)G p, f (s). As we have seen in Chapter 22, the
presence of open-loop poles on the imaginary axis becomes problematic for Nyquist stability
analysis (the Nyquist contour must be modiﬁed to pass around them, and encirclements of
the complex plane must be accounted for). These poles result in inﬁnite peaks in the gain
frequency response, which is problematic for frequency response based control design. For-
tunately, every real structure always has some structural damping, so we do not have to worry
about poles due to spacecraft ﬂexibility on the imaginary axis (we will still have the poles at
the origin due to the rigid body motion).
Im(s)
Re(s)
jωc,1
jωu,1
jωc,2
jωu,2
1st vibration mode
2nd vibration mode
rigid body double pole
Figure 26.20
Spacecraft attitude transfer function poles and zeros (no structural damping)

532
Spacecraft Dynamics and Control: An Introduction
26.4.1.2
Effect of Structural Damping
When structural damping is accounted for, the equation of motion in (26.41) becomes
M¨q + D˙q + Kq = FT,
(26.64)
where
D =
0
0
0
De

,
and all other quantities are the same as before. The matrix De is symmetric and positive
deﬁnite.
We shall once again seek a transfer function relationship between ˆT (s) and ˆθ(s). As before,
we expand (26.64) into its components,
I ¨θ + bT ¨qe = T,
Me ¨qe + De ˙qe + Keqe = −b ¨θ.
(26.65)
The corresponding constrained equations of motion are
Me ¨qe + De ˙qe + Keqe = 0.
(26.66)
Once again, we make the change of variables in (26.45). This leads to the transformed equations
of motion
Mc ¨qc + ˆDc ˙qc + Kcqc = FcT,
(26.67)
where
ˆDc = ˆCT
c D ˆCc =
0
0
0
Dc

, Dc = CT
c DeCc,
and all other quantities are as in equation (26.46). Note that unlike c in Kc, the matrix Dc is
not necessarily diagonal. Expanding, we have
I ¨θ + ¯bT ¨ηc = T,
¨ηc + Dc ˙η + cηc = −¯b ¨θ,
(26.68)
with corresponding constrained equations of motion
¨ηc + Dc ˙η + cηc = 0.
(26.69)
It can be rigorously shown (using LaSalle-type analysis as in Chapter 24) that the constrained
equations of motion are asymptotically stable. Since the system is linear and time-invariant,
this means that the constrained poles lie strictly in the left-half plane. Because (26.69) is a

Practical Spacecraft Attitude Control Design Issues
533
second-order differential equation, there are an even number of poles (2n poles). Therefore,
the constrained characteristic equation can be written as
det

s21 + sDc + c

=
n
i=1

s2 + 2ζc,i ¯ωc,is + ¯ω2
c,i

,
(26.70)
where ζc,i > 0 is the damping ratio and ¯ωc,i > 0 is the undamped natural frequency of the
ith constrained mode respectively. Note that ¯ω2
c,i are not necessarily the same as the diagonal
entries of c, which are ω2
c,i. This difference is due to the presence of sDc in (26.70).
Let us now take Laplace transforms of (26.68). We have
s2I ˆθ(s) + s2 ¯bT ˆη(s) = ˆT (s),
(26.71)

s21 + sDc + c
 ˆη(s) = −s2 ¯b ˆθ(s).
(26.72)
Noting that

s21 + sDc + c
−1 =
1
det

s21 + sDc + c
H(s),
where
H(s) = cof

s21 + sDc + c

,
we can rearrange (26.72) to give
ˆη =
−s2H(s)¯b
n
i=1

s2 + 2ζc,i ¯ωc,is + ¯ω2
c,i
 ˆθ.
Substituting into (26.71) and rearranging, we have
ˆ
θ(s) = G p(s) ˆT (s),
(26.73)
G p(s) =
n
i=1

s2 + 2ζc,i ¯ωc,is + ¯ω2
c,i

Is2 n
i=1

s2 + 2ζc,i ¯ωc,is + ¯ω2
c,i

−s4 ¯bT H(s)¯b.
(26.74)
As for the undamped case, equation (26.74) provides a nice factorization of the numerator of
G p(s). As before, we shall now ﬁnd an expression for the denominator.
A direct application of Lemma 26.1 shows that the denominator of G p(s) in (26.74) satisﬁes
det

s2Mc + s ˆDc + Kc

=
s2I
s2 ¯bT
s2 ¯b
s21 + sDc + c

,
= Is2
n
i=1

s2 + 2ζc,i ¯ωc,is + ¯ω2
c,i

−s4 ¯bT H(s)¯b.
(26.75)

534
Spacecraft Dynamics and Control: An Introduction
Let us now apply the transformation given in equations (26.54) and (26.55). We consider
det

s2Mu + s ˆDu + Ku

, where
ˆDu = ˆCT
u Dc ˆCu =
0
0
0
Du

, Du = CT
u DcCu,
and all other quantities are as in equation (26.56). Note that unlike u in Ku, the matrix Du is
not necessarily diagonal. Then,
det

s2Mu + s ˆDu + Ku

= det
s2I
0
0
s21 + sDu + u

,
= Is2 det

s21 + sDu + u

.
Using the same reasoning as before, we can write
det

s21 + sDu + u

=
n
i=1

s2 + 2ζu,i ¯ωu,is + ¯ω2
u,i

,
(26.76)
where ζu,i > 0 is the damping ratio and ¯ωu,i > 0 is the undamped natural frequency of the ith
unconstrained mode respectively. As before, ¯ω2
u,i are not necessarily the same as the diagonal
entries of u. Now,
det

s2Mu + sDu + Ku

= det

 ˆCT
u

s2Mc + sDc + Kc
 ˆCu

,
= det

 ˆCu
2 det

s2Mc + sDc + Kc

.
Therefore, we ﬁnd from (26.75) that the denominator of G p(s) is given by
Is2 n
i=1

s2 + 2ζc,i ¯ωc,is + ¯ω2
c,i

−s4 ¯bT H(s)¯b
=

1/ det

 ˆCu
2
Is2 n
i=1

s2 + 2ζu,i ¯ωu,is + ¯ω2
u,i

.
Substituting this into the transfer function in (26.74), we obtain
G p(s) = G p,r(s)G p, f (s),
(26.77)
where
G p,r(s) =
1
Is2 ,
and
G p, f (s) = K
n
i=1

(s/ ¯ωc,i)2 + 2ζc,i(s/ ¯ωc,i) + 1

n
i=1

(s/ ¯ωu,i)2 + 2ζu,i(s/ ¯ωu,i) + 1
,

Practical Spacecraft Attitude Control Design Issues
535
where as for the undamped case, K =

Is2G p(s)

s=0. From (26.74), we readily ﬁnd that
K = 1. Therefore,
G p, f (s) =
n
i=1

(s/ ¯ωc,i)2 + 2ζc,i(s/ ¯ωc,i) + 1

n
i=1

(s/ ¯ωu,i)2 + 2ζu,i(s/ ¯ωu,i) + 1
.
(26.78)
As seen in (26.77), just as for the undamped case, the transfer function from ˆT (s) to ˆθ(s) can
be separated into a rigid body component (G p,r(s)) and a contribution from the ﬂexible modes
(G p, f (s)). Note that the damping ratios ζc,i and ζu,i are typically very small. Each vibration
mode contributes a complex conjugate pair of asymptotically stable open-loop zeros and poles,
given by zi = −ζc,i ¯ωc,i ± j ¯ωc,i
 
1 −ζ 2
c,i and pi = −ζu,i ¯ωu,i ± j ¯ωu,i
 
1 −ζ 2
u,i respectively.
Comparing (26.78) to (26.63), we see that the effect of structural damping is to pull both the
undamped imaginary zeros and poles slightly into the left-half plane, as shown in Figure 26.21
(compared to Figure 26.20).
26.4.1.3
Effect of Flexibility on the Open-Loop Frequency Response
Let us now look at the effect of spacecraft ﬂexibility on the open-loop frequency response.
We shall examine the effect of a single mode of vibration. The contribution of each vibration
mode has the form
¯G p, f (s) =

(s/ωc)2 + 2ζc(s/ωc) + 1


(s/ωu)2 + 2ζu(s/ωu) + 1
.
The corresponding frequency response is given by
¯G p, f ( jω) = 1 −(ω/ωc)2 + 2 jζc(ω/ωc)
1 −(ω/ωu)2 + 2 jζu(ω/ωu).
(26.79)
Im(s)
Re(s)
j¯ωc,1
1 −ζ2
c,1
j¯ωu,1
1 −ζ2
u,1
j¯ωc,2
1 −ζ2
c,2
j¯ωu,2
1 −ζ2
u,2
1st vibration mode
2nd vibration mode
rigid body double pole
Figure 26.21
Spacecraft attitude transfer function poles and zeros (with structural damping)

536
Spacecraft Dynamics and Control: An Introduction
−30
−20
−10
0
10
20
30
Magnitude (dB)
10
0
10
1
0
45
90
135
180
Phase (deg)
Bode Diagram
Frequency  (rad/sec)
ζ=0.005
ζ=0.02
ζ=0.05
Figure 26.22
Frequency response due to a vibration mode with varying damping ratios
Clearly, for low frequencies ω ≪ωc, ωu, we have
 ¯G p, f ( jω)
 ≈1, ∠¯G p, f ( jω) ≈0◦,
so each vibration mode has very little effect on the low end of the frequency response. On the
other hand, for high frequencies ω ≫ωc, ωu, we have
 ¯G p, f ( jω)
 ≈
ωu
ωc
2
, ∠
 ¯G p, f ( jω)
 ≈0◦.
(26.80)
Therefore, the main effect of the vibration mode must be when ω is near ωc and ωu. Figure 26.22
shows the frequency response for varying damping ratios (note that in the ﬁgure ζ = ζc = ζu).
The constrained and unconstrained natural frequencies are taken to be ωc = 3.0 rad/s and
ωu = 3.3 rad/s, respectively. It can be seen that the vibration mode can contribute a signiﬁcant
phase shift when ω is near ωc and ωu. Likewise, a signiﬁcant peak in the gain occurs when
ω is near ωu. As seen, the size of the peak gain and the phase shift depends signiﬁcantly on
the damping ratio, which unfortunately is one of the most uncertain parameters, and must
be typically be determined experimentally. Figure 26.23 shows the frequency response for
varying distance between ωc and ωu. In this ﬁgure, the constrained natural frequency is held
ﬁxed at ωc = 3.0 rad/s, the damping ratios are held ﬁxed at ζc = ζu = 0.01. Again, it can be
seen that frequency response depends signiﬁcantly on the spacing between ωc and ωu. The
closer ωc and ωu are, the less inﬂuence they have on the open-loop frequency response.

Practical Spacecraft Attitude Control Design Issues
537
−30
−20
−10
0
10
20
30
Magnitude (dB)
10
0
10
1
0
45
90
135
180
Phase (deg)
Bode Diagram
Frequency  (rad/sec)
ωu=1.01ωc
ωu=1.1ωc
ωu=1.2ωc
Figure 26.23
Frequency response due to a vibration mode with varying spacing between constrained
and unconstrained natural frequencies
26.4.1.4
Accounting for Spacecraft Flexibility in the Attitude Control Design
Now that we understand the effect of spacecraft ﬂexibility on the spacecraft dynamics, we
can examine how to account for it in attitude control system design. We have seen that
spacecraft ﬂexibility can result in signiﬁcant peaks and phase shifts in the open-loop gain
frequency response near the frequencies of vibration. These can cause signiﬁcant deviations in
the desired open-loop frequency response (refer to Figure 23.6), and if not properly accounted
for, they can result in degraded performance, and even lead to instability.
One relatively simple way to ensure that the spacecraft ﬂexibility does not destabilize the
closed-loop system is to ensure that the open-loop bandwidth is well below the fundamental
vibration frequency, with sufﬁcient cut-off rate. This allows the attitude controller to be
20 log |Go(jω)|
ω
0 dB
−3 dB
ωb
ωu,1
ωc,1
Designed Open-Loop (Rigid Body)
Open-Loop with Flexible Mode
margin
Figure 26.24
Gain stabilization of ﬂexible spacecraft attitude

538
Spacecraft Dynamics and Control: An Introduction
designed as if the spacecraft is rigid. By ensuring that the designed open-loop gain is sufﬁciently
small at the vibration frequencies, the vibration modes will not cause the open-loop gain to
exceed 1 (equivalently that the log-magnitude gain does not exceed 0 dB). As we know from
Chapter 22, this ensures that the Nyquist plot stays inside the unit disc at high frequencies,
and as such the vibration modes cannot cause additional encirclements of −1. This method of
stabilization is called gain stabilization, since we are limiting the gain.
Gain stabilization is very useful, especially when the phase component of the frequency
response due to the vibration modes is not well known (recall that this depends on the damping
ratio of each mode, which is difﬁcult to determine). However, gain stabilization can place severe
restrictions on the open-loop bandwidth, especially if the fundamental frequency of vibration is
low. This can limit the performance of the closed-loop system (recall from Chapter 23 that the
speed of system response is related to the open-loop gain cross-over frequency, which is close
to the open-loop bandwidth), and the resulting control design may not meet speciﬁcations. In
this case, the vibration modes that lie within the desired open-loop bandwidth may be included
in the spacecraft model when attitude control design is performed. Alternatively, an attitude
controller may be designed to meet speciﬁcations assuming a rigid spacecraft. Compensators
may then be added to the controller to change the open-loop phase frequency response near the
vibration frequencies that lie within the open-loop bandwidth, so as to avoid encirclements of
−1. This is called phase stabilization. See Wie (2008) for different phase compensator types.
The advantage of phase stabilization is that it allows us to keep the open-loop gain above 1 at
these frequencies, which means improved closed-loop system performance. The disadvantage
is that phase information for the corresponding vibration modes must be known. Vibration
modes at frequencies well above the open-loop bandwidth should still be gain stabilized.
Finally, spacecraft ﬂexibility can also be dealt with very effectively by performing control
design directly in the time-domain using a state-space representation of the ﬂexible spacecraft
dynamics. This approach allows us to consider coupling between the spacecraft axes as well
(we limited ourselves to rotation about a single axis).
26.4.2
Effects of Propellant Sloshing
It has been found historically that propellant sloshing has the most signiﬁcant effect on a
spacecraft attitude control during an orbital maneuver when the spacecraft propulsion system
is thrusting. Some of the effects of propellant sloshing may be limited by the installation of
bafﬂes within the fuel tank, which damp propellant motion.
Propellant sloshing is a very complex phenomenon to model mathematically, since there
is the interaction between the ﬂuid dynamics of the propellant and the attitude motion of the
spacecraft structure. These models are far too complex to be used in spacecraft attitude control
design, and instead simpliﬁed dynamically equivalent models have been developed to model
the propellant slosh effects. These models generally represent the propellant mass by point
masses connected to the fuel tank through springs or pendulums, possibly with some viscous
damping. The details of the model used depend on the fuel tank geometry.
The net effect of propellant sloshing on the spacecraft dynamics is the inclusion of vibration
modes due to the sloshing. As such, the effects of propellant sloshing may be accounted for in
a similar fashion to spacecraft ﬂexibility.

Practical Spacecraft Attitude Control Design Issues
539
Notes
This chapter has presented a high level overview of some of the important issues that need to be
considered for practical spacecraft attitude control. The reader is referred to Wertz (1978) and
Sidi (1997) for detailed discussions of different spacecraft attitude sensor and actuator types,
including both physical operating principles and mathematical models. The books by Wie
(2008) and Sidi (1997) provide more detailed discussions on different modulation schemes
for thrusters, and other issues associated with attitude control using thrusters. Section 26.3
discussed some of the issues associated with control law implementation on a digital processor.
Much more detailed treatments of these issues may be found in books such as Franklin et al.
(1998) and Astrom and Wittenmark (1997). Section 26.4 discussed how spacecraft ﬂexibility
and propellant sloshing must be accounted for in the control system design. The ﬂexible
spacecraft attitude equations of motion for a single axis (equations (26.41) and (26.64)) were
presented without derivation. A detailed treatment of how the ﬂexible spacecraft attitude
equations may be derived can be found in Likins (1974) and Junkins and Kim (1993). The
underlying assumption in obtaining attitude equations for a single axis is that there be no
coupling between the axes. This greatly simpliﬁes the problem, and allows for the excellent
analysis presented in Section 26.4.1. In reality however, there may be coupling among the
different axes either due to coupled ﬂexible modes, coupled rigid body motion (for example,
two axes are gyroscopically coupled for a dual-spin spacecraft, as shown in Chapter 15), or
both. If the coupling is insigniﬁcant, the approximation of decoupling the axes as in Section
26.4.1 is reasonable to make. Otherwise, the fully coupled equations of motion must be
considered, which complicates the analysis. There are several examples in the literature for
how to deal with these situations. As a starting point, the reader may consult Wie (2008) and
Junkins and Kim (1993). Section 26.4.2 gave a very brief discussion of the effects of propellant
sloshing. For detailed models of propellant slosh, the reader is referred to Abrahamson (1966).
For examples of how to deal with propellant slosh, the reader may refer to Wie (2008) and
Sidi (1997).
For a detailed treatment of spacecraft attitude control from a practical engineering point of
view, the reader is referred to Sidi (1997).
References
Abrahamson HN 1966 The dynamic behavior of liquids in moving containers. Technical Report NASA SP−106,
National Aeronautics and Space Administration, Washington, DC.
Astrom KJ and Wittenmark B 1997 Computer Controlled Systems 3rd edn. Prentice Hall, Upper Saddle River, NJ.
Franklin GF, Powell JD and Workman M 1998 Digital Control of Dynamic Systems 3rd edn. Addison-Wesley.
Junkins JL and Kim Y 1993 Introduction to Dynamics and Control of Flexible Systems. American Institute of
Aeronautics and Astronautics, Washington, DC.
Likins PW 1974 Analytical dynamics and nonrigid spacecraft simulation. Technical Report NASA TR32−1593, Jet
Propulsion Laboratory, Pasadena, CA.
Sidi MJ 1997 Spacecraft Dynamics and Control: A Practical Engineering Approach. Cambridge University Press,
New York, NY.
Wertz JR 1978 Spacecraft Attitude Determination and Control. Kluwer Academic Publishers, Dordrecht, The Nether-
lands.
Wie B 2008 Space Vehicle Dynamics and Control 2nd edn. American Institute of Aeronautics and Astronautics,
Reston, VA.


Appendix A
Review of Complex Variables
Recall that a complex number, s, may be written as
s = a + jb,
where a, b are real numbers, called the real and imaginary parts of s, which can be denoted as
a = Re(s),
b = Im(s).
Also, j is deﬁned such that
j2 = −1.
Since a complex number has two parts, it can be represented by a point in the plane, as shown
in Figure A.1.
The magnitude of s is given by
r = |s| =

a2 + b2,
and the phase is given by
∠s = θ = tan−1 b
a ,
where care must be taken in evaluating the inverse tangent so as to obtain the correct quadrant.
Therefore, a complex number may be written in polar form as
s = r(cos θ + j sin θ).
(A.1)
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

542
Appendix A
Re[s]
Im[s]
θ
s = a + jb
a
b
r
Figure A.1
Complex number representation in the plane
Addition of complex numbers is deﬁned component-wise. If s1 = a1 + jb1 and s2 = a2 + jb2,
then
s1 + s2 = (a1 + a2) + j(b1 + b2).
Multiplication of complex numbers uses the fact that j2 = −1.
s1s2 = (a1 + jb1)(a2 + jb2),
= a1a2 + j2b1b2 + a1 jb2 + jb1a2,
= (a1a2 −b1b2) + j(a1b2 + b1a2).
The complex conjugate of a complex number s = a + jb is deﬁned as
¯s = a −jb.
Therefore, using the rule for complex multiplication, we have
s¯s = |s|2 = a2 + b2.
The complex exponential is deﬁned as
es = ea(cos b + j sin b),
(where s = a + jb). In particular, this shows that
e jθ = cos θ + j sin θ.
Therefore, from (A.1) we can write
s = re jθ.
The inverse of a complex number is now readily found to be
1
s = 1
r e−jθ =
1
re jθ .

Appendix A
543
It can be further shown that
es1+s2 = es1es2.
In particular,
e j(θ1+θ2) = e jθ1e jθ2.
This shows that the product of two complex numbers s1 = r1e jθ1 and s2 = r2e jθ2 is given by
s1s2 = r1r2e j(θ1+θ2).
Therefore, the magnitude of the product is
|s1s2| = r1r2,
and the phase is
∠s1s2 = θ1 + θ2.
That is, multiplication by a complex number is just a scaling by its magnitude, and a rotation
through its phase, as shown in Figure A.2. Similarly, division of two complex numbers
s1 = r1e jθ1 and s2 = r2e jθ2 is given by
s1
s2
= r1e jθ1
r2e jθ2 = r1
r2
e j(θ1−θ2).
Therefore, the magnitude of the quotient is

s1
s2
 = r1
r2
,
Re[s]
Im[s]
θ1
s1
r1
s2
s1s2
θ2 θ1 + θ2
r2
r1r2
Figure A.2
Complex multiplication

544
Appendix A
and the phase is
∠s1
s2
= θ1 −θ2.
A.1
Functions of a Complex Variable
In general, a complex function G(s) of a complex variable s = a + jb, has real and imaginary
parts, given by
G(s) = Gx(a, b) + jG y(a, b),
where Gx(a, b) and G y(a, b) are real-valued functions. The functions that we deal with in this
book are proper rational functions of the form
G(s) = a0sm + a1sm−1 + . . . + am
sn + b1sn−1 + . . . bn
= N(s)
D(s),
(A.2)
where ai, bi are real coefﬁcients, some of which may be zero, and the degree of the polynomial
in the numerator N(s) is less than or equal to the degree of the denominator D(s). That is,
m ≤n. It turns out that G(s) can be factored into the form
G(s) = K
m
i=1(s −zi)
n
i=1(s −pi),
where zi are the roots of N(s) = 0, called the zeros of G(s), and pi are the roots of D(s) = 0,
called the poles of G(s).
Example A.1 The function
G(s) =
(s + 2)(s + 10)
s(s + 5)(s + 15)2 ,
has zeros at s = −2, −10 and poles at s = 0, −5, −15, −15. Note that the pole at −15 occurs
twice.
Since the coefﬁcients ai and bi in (A.2) are real, any imaginary poles or zeros must occur in
complex conjugate pairs. That is, if the zero zi has a non-zero imaginary component, then its
complex conjugate ¯zi must also be a zero, similarly if the pole pi has a non-zero imaginary
component, then its complex conjugate ¯pi must also be a pole.
A.2
Complex Valued Functions of a Real Variable
A complex valued function of a real variable t, is given by
g(t) = a(t) + jb(t),

Appendix A
545
where a(t) and b(t) are real. The derivative of g(t) is deﬁned by
dg
dt = da
dt + j db
dt .
Likewise, the integral of g(t) is deﬁned by
 t1
t0
g(t)dt =
 t1
t0
a(t)dt + j
 t1
t0
b(t)dt.
This means that
 t1
t0
dg
dt dt =
 t1
t0
da
dt dt + j
 t1
t0
db
dt dt,
= a(t)|t1
t0 + jb(t)|t1
t0 ,
(A.3)
= g(t)|t1
t0 .
The product of two complex functions of a real variable is given by
g1(t)g2(t) = (a1(t)a2(t) −b1(t)b2(t)) + j (a1(t)b2(t) + b1(t)a2(t)) .
Differentiating this, making use of the product rule for derivatives of real functions gives
d
dt (g1(t)g2(t)) =
da1
dt a2 + a1
da2
dt −db1
dt b2 −b1
db2
dt

+ j
da1
dt b2 + a1
db2
dt + db1
dt a2 + b1
da2
dt

,
=
da1
dt a2 −db1
dt b2

+ j
da1
dt b2 + db1
dt a2

(A.4)
+

a1
da2
dt −b1
db2
dt

j

a1
db2
dt + b1
da2
dt

,
= dg1
dt g2 + g1
dg2
dt ,
which shows that the product rule for derivatives of complex functions of a real variable holds
also. Therefore, combining (A.4) and (A.3), we have
g1(t)g2(t)|t1
t0 =
 t1
t0
d
dt (g1g2) dt =
 t1
t0
dg1
dt g2dt +
 t1
t0
g1
dg2
dt dt,

546
Appendix A
f(t)
t
Figure A.3
Functions under consideration in one-sided Laplace transform
which rearranges to give
 t1
t0
dg1
dt g2dt = g1(t)g2(t)|t1
t0 −
 t1
t0
g1
dg2
dt dt.
(A.5)
That is, integration by parts holds for complex functions of a real variable.
A.3
The Laplace Transform
We consider only Laplace transforms of (possibly complex) functions f (t) of the real variable
t that are zero for all t < 0, as shown in Figure A.3. This is called a one-sided Laplace
transform. For our purposes, it will be useful to think of t as being time.
In this case, the Laplace transform is given by
F(s) = L( f (t)) =
 ∞
0−e−st f (t)dt.
(A.6)
The Laplace transform is guaranteed to exist if f (t) is piecewise continuous, and of exponential
order, that is | f (t)| ≤Aet B for all t ≥0, for some A ≥0, and real constant B. The Laplace
integral converges if Re(s) > B.
Linear Combination
From the deﬁnition (A.6), we see that
L (αf1(t) + β f2(t)) =
 ∞
0
e−st (αf1(t) + β f2(t)) dt,
= α
 ∞
0
e−st f1(t)dt + β
 ∞
0
e−st f2(t)dt,
= αL( f1(t)) + βL( f2(t)).
This shows that the Laplace transform is a linear operation.

Appendix A
547
Multiplication by an Exponential
L

e−at f (t)
	
=
 ∞
0
f (t)e−ate−stdt,
=
 ∞
0
f (t)e−(s+a)tdt,
= F(s + a),
where F(s) = L ( f (t)).
Scaling of Time
L ( f (at)) =
 ∞
0
f (at)e−stdt.
Making the change of variables τ = at, we have dt/dτ = 1/a, and the integral becomes
L ( f (at)) = 1
a
 ∞
0
f (τ)e−(s/a)τdτ = 1
a F

 s
a

.
Laplace Transform of a Derivative
First, we need the derivative of e−st (with s = a + jb), which is evaluated as
d
dt (e−st) = d
dt

e−at(cos bt −j sin bt)
	
,
=

−ae−at cos bt −be−at sin bt
	
+ j

ae−at sin bt −be−at cos bt
	
,
= −ae−at (cos bt −j sin bt) −jbe−at (cos bt −j sin bt) ,
= −(a + jb)e−st,
= −se−st.
Now, the Laplace transform of the derivative d f /dt can be evaluated using integration by parts
as in (A.5).
L
d f
dt

=
 ∞
0
d f
dt e−stdt,
= f (t)e−st∞
0 −
 ∞
0
f (t)(−s)e−stdt,
= sF(s) −f (0).
Note that we have made use of the fact that f (t) is of exponential order (| f (t)| ≤Aet B), which
means that limt→∞f (t)e−st = 0 when Re(s) > B.

548
Appendix A
Continuing the process in general for higher order derivatives, we get
L
 dn
dtn f (t)

= sn F(s) −sn−1 f (0) −sn−2 d f
dt

t=0
−. . . −dn−1 f
dtn−1

t=0
.
Laplace Transform of an Integral
L
 t
0
f (τ)dτ

=
 ∞
0
 t
0
f (τ)dτe−stdt.
Integrating by parts gives
L
 t
0
f (τ)dτ

=

−1
s e−st
 t
0
f (τ)dτ

∞
0
−
 ∞
0
f (t)
−1
s

e−stdt = F(s)
s
.
Note that the ﬁrst term on the right vanishes because f (t) is of exponential order (which takes
care of the upper limit), and
 t
0 f (τ)dτ|t=0 = 0, which takes care of the lower limit.
Convolution
Let two functions f1(t) and f2(t) be given. The convolution integral of these is deﬁned by
f1(t) ∗f2(t) =
 t
0
f1(τ) f2(t −τ)dτ =
 t
0
f1(t −τ) f2(τ)dτ.
To show that the above two integrals are equal, consider the change of variables z = t −τ,
we have
 t
0
f1(τ) f2(t −τ)dτ =
 0
t
f1(t −z) f2(z)dτ
dz dz,
= −
 0
t
f1(t −z) f2(z)dz,
=
 t
0
f1(t −z) f2(z)dz.
Replacing z with τ in the last integral shows the equivalence.
The Laplace transform of the convolution integral is then
L ( f1(t) ∗f2(t)) =
 ∞
0
 t
0
f1(τ) f2(t −τ)dτe−stdt.

Appendix A
549
Interchanging the order of integration, this becomes
L ( f1(t) ∗f2(t)) =
 ∞
0
 ∞
τ
f1(τ) f2(t −τ)e−stdtdτ, multiply by e−sτesτ to get
=
 ∞
0
f1(τ)e−sτ
 ∞
τ
f2(t −τ)e−s(t−τ)dtdτ.
Now, setting t′ = t −τ, we have
 ∞
τ
f2(t −τ)e−s(t−τ)dt =
 ∞
0
f2(t′)e−st′dt′ = F2(s).
Substituting this into the double integral above, we have
L ( f1(t) ∗f2(t)) =
 ∞
0
f1(τ)e−sτ F2(s)dτ = F1(s)F2(s).
That is, convolution in the time domain becomes multiplication in the Laplace (s) domain.
Final Value Theorem
We can use the Laplace transform to determine limiting behavior in the time domain. This is
useful when we do not know the time-domain function, but we do know its Laplace transform.
As an example, this situation may arise when we wish to know the limiting behavior of a
system governed by an ordinary differential equation.
Consider the limit
lim
s→0 L
d f
dt

= lim
s→0
 ∞
0
d f
dt e−stdt.
This limit can only exist if the Laplace integral is convergent for s = 0. In this case, it turns
out that the order of integration and the limit operation may be interchanged, so that
lim
s→0 L
d f
dt

=
 ∞
0
lim
s→0
d f
dt e−stdt,
=
 ∞
0
d f
dt dt,
= lim
t→∞f (t) −f (0).
However, we also know from the Laplace transform of a derivative that
L
d f
dt

= sF(s) −f (0).

550
Appendix A
Combining the above two results leads to
lim
s→0 sF(s) = lim
t→∞f (t).
(A.7)
This is called the ﬁnal value theorem.
It is very important to note that the relationship (A.7) is only guaranteed if the Laplace
integral for d f /dt is convergent for s = 0. This means that the ﬁnal value theorem may
be applied if a B < 0 such that |d f /dt| ≤Aet B for all t ≥0 for some A ≥0.
Example A.2 Consider the function f (t) = e−2t + 3. Then, d f /dt = −2e−2t, which clearly
satisﬁes |d f /dt| ≤2eBt for any B ≥−2. Therefore, the ﬁnal value theorem may be applied.
The Laplace transform of f (t) is readily found to be
F(s) =
1
s + 2 + 3
s .
Applying the ﬁnal value theorem, we have
lim
t→∞f (t) = lim
s→0 sF(s) = lim
s→0
s
s + 2 + 3 = 3,
which is exactly the same as would have been found by taking the limit limt→∞e−2t + 3
directly.
Example A.3 This is an example of an incorrect application of the ﬁnal value theorem.
Consider the function f (t) = e−2t + cos t. Clearly, the limit limt→∞e−2t + cos t does not
exist. The derivative is d f /dt = −2e−2t −sin t, and since sin t is periodic, and attains mag-
nitude 1 twice per period, it is not possible to ﬁnd a B < 0 such that |d f /dt| ≤Aet B for all
t ≥0 for some A ≥0. Therefore, the ﬁnal value theorem cannot be applied. However, let us
go ahead and apply it anyway. The Laplace transform is readily found to be
F(s) =
1
s + 2 +
s
s2 + 1.
Applying the ﬁnal value theorem, we obtain
lim
s→0 sF(s) = 0,
Clearly in this case, lims→0 sF(s) ̸= limt→∞f (t).
A.4
Partial Fraction Expansions
There is a complicated Laplace transform inversion formula which yields
f (t) = L−1 (F(s)) .

Appendix A
551
This is not used often in practise. In practise, look-up tables of known Laplace transforms are
used. To do this, the Laplace transform G(s) is decomposed into the sum of simpler known
parts. For Laplace transforms of the form,
G(s) = K
m
i=1(s −zi)
n
i=1(s −pi),
with m ≤n, this may be expanded in a partial fraction expansion. For simplicity, we shall
assume that m < n, and that the poles pi are distinct (pi ̸= p j if i ̸= j). In this case, G(s) can
be written as
G(s) =
c1
s −p1
+
c2
s −p2
+ . . . +
cn
s −pn
.
The coefﬁcients ci are called the residues. To ﬁnd the coefﬁcient c1, multiply G(s) by (s −p1)
to get
(s −p1)G(s) = c1 + c2(s −p1)
s −p2
+ . . . + cn(s −p1)
s −pn
.
Setting s = p1 gives
c1 = (s −p1)G(s)|s=p1 .
In general,
ci = (s −pi)G(s)|s=pi .
(A.8)
Consider now the case where a pole is repeated k times, say
p1 = p2 = . . . = pk = p′,
such that
G(s) = K
m
i=1(s −zi)
(s −p′)k n
i=k+1(s −pi).
In this case, G(s) can be expanded as
G(s) =
c1
s −p′ +
c2
(s −p′)2 + . . . +
ck
(s −p′)k +
ck+1
s −pk+1
+ . . . +
cn
s −pn
.

552
Appendix A
Multiplying G(s) by (s −p′)k gives
(s −p′)kG(s) = c1(s −p′)k−1 + . . . + ck + ck+1(s −p′)k
s −pk+1
+ . . . + cn(s −p′)k
s −pn
.
Setting s = p′ gives ck, i.e.
ck = (s −p′)kG(s)

s=p′ .
Differentiating with respect to s gives
d
ds (s −p′)kG(s) = (k −1)c1(s −p′)k−2 + . . . + ck−1
+ d
ds
ck+1(s −p′)k
s −pk+1
+ . . . + cn(s −p′)k
s −pn

.
Setting s = p′ gives ck−1, i.e.
ck−1 = d
ds

(s −p′)kG(s)

s=p′ .
We can continue in this manner to obtain
ck−i = 1
i!
di
dsi

(s −p′)kG(s)

s=p′ .
Up to this point, we have assumed that m < n. If m = n, i.e.
G(s) = K
i=1
n
(s −zi)
i=1
n
(s −pi)
= a0sn + a1sn−1 + . . . + an
sn + b1sn−1 + . . . bn
,
then we can write this as
G(s) = a0

sn + b1sn−1 + . . . + bn
	
sn + b1sn−1 + . . . bn
+ (a1 −b1)sn−1 + . . . + (an −bn)
sn + b1sn−1 + . . . bn
,
= a0 + (a1 −b1)sn−1 + . . . + (an −bn)
sn + b1sn−1 + . . . bn
.
The second expression has the form required, and we can ﬁnd the partial fraction expansion
of that as before.

Appendix A
553
A.5
Common Laplace Transforms
The following is a table of common Laplace transforms, which will be useful for ﬁnding
inverse Laplace transforms and thereby solving ordinary differential equations.
f (t)
F(s)
1
1
s
tn
n!
sn
e−at
1
s + a
tne−at
n!
(s + a)n
sin ωt
ω
s2 + ω2
cos ωt
s
s2 + ω2
e−at sin ωt
ω
(s + a)2 + ω2
e−at cos ωt
s + a
(s + a)2 + ω2
A.6
Example of Using Laplace Transforms to Solve a Linear
Differential Equation
Consider the linear time-invariant differential equation
¨x + 3˙x + 2x = 0,
x(0) = a,
˙x(0) = b.
Then,
L (x(t)) = X(s),
L (˙x(t)) = sX(s) −x(0) = sX(s) −a,
L (¨x(t)) = s2X(s) −sx(0) −˙x(0), = s2X(s) −sa −b.
Therefore, taking the Laplace transform of the differential equation gives
L (¨x + 2˙x + 2x) = L(0),
which leads to
s2X(s) −sa −b + 3 (sX(s) −a) + 2X(s) = 0,

554
Appendix A
which can be rewritten as

s2 + 3s + 2
	
X(s) = as + b + 3a.
Solving for X(s), we have
X(s) = as + b + 3a
s2 + 3s + 2 .
Let us now ﬁnd the poles of X(s), by solving
s2 + 3s + 2 = 0.
From the quadratic equation, we have
s = −3 ±
√
32 −4 × 2
2
= −2, −1.
That is, we can write
X(s) = as + b + 3a
(s + 2)(s + 1).
Let us now expand this in a partial fraction expansion, i.e.
X(s) =
c1
s + 2 +
c2
s + 1.
Since the poles are distinct, we can use (A.8) to compute c1 and c2. We have
c1 = (s + 2)X(s)|s=−2 ,
= (s + 2)(as + b + 3a)
(s + 2)(s + 1)

s=−2
,
= −2a + b + 3a
−1
= −(a + b),
and likewise for c2 we obtain
c2 = (s + 1)X(s)|s=−2 ,
= (s + 1)(as + b + 3a)
(s + 2)(s + 1)

s=−2
,
= −a + b + 3a
1
= 2a + b.

Appendix A
555
So, we ﬁnd the partial fraction expansion of X(s) to be
X(s) = −(a + b)
s + 2
+ 2a + b
s + 1 .
From Section A.5, we ﬁnd that
L

e−at	
=
1
s + a .
Making use of this, we can ﬁnd x(t) by taking the inverse Laplace transform of X(s). We
have,
x(t) = L−1 (X(s)) = L−1
−(a + b)
s + 2

+ L−1
2a + b
s + 1

,
= −(a + b)e−2t + (2a + b)e−t,
and the differential equation is solved.
This demonstrates the usefulness of Laplace transforms. They turn differential equa-
tions in the time domain into algebraic equations in the Laplace domain which are easier
to solve. Finally, taking inverse Laplace transforms yields the solution in the time domain.


Appendix B
Numerical Simulation of
Spacecraft Motion
B.1
First Order Ordinary Differential Equations
Numerical simulation of spacecraft motion involves numerical integration of the equations
of motion. Typically, it is possible to write the equations of motion as ﬁrst-order differential
equations of the form
˙x = f(x, t),
x(t0) = x0,
(B.1)
where the state vector x may contain the spacecraft orbital position, velocity, attitude variables,
angular velocity, and any other state variables (for example controller states) required to fully
describe the spacecraft motion. This is called a state-space representation of the system. To
numerically simulate the spacecraft motion, we need to determine the time history of the
state vector x(t) for t ≥t0 numerically. All numerical integration schemes are based upon a
discretization of time with sample times tk, as shown in Figure B.1. The difference between
subsequent sample times h = tk −tk−1 is called the time step, which may or may not be
constant, and must be sufﬁciently small.
There are a number of techniques for numerical integration, which can be found in texts on
numerical methods. It is not always obvious which technique is the best for a given problem.
A possible scheme is the fourth-order Runge-Kutta formula
x(tk+1) = x(tk) + 1
6 [k1 + 2k2 + 2k3 + k4] ,
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

558
Appendix B
tk−1
tk
tk+1
t
h
Figure B.1
Time discretization
where
k1 = hf(x(tk), tk),
k2 = hf

x(tk) + 1
2k1, tk + 1
2h

,
k3 = hf

x(tk) + 1
2k2, tk + 1
2h

,
k4 = hf(x(tk) + k3, tk + h).
Alternatively, there are several commercially available numerical packages capable of numer-
ically solving ordinary differential equations of the form (B.1). For example, MATLAB R⃝has
a suite of ordinary differential equation solvers.
B.2
Formulation of Coupled Spacecraft Orbital and Attitude
Motion Equations
Suppose we wish to numerically simulate the spacecraft attitude motion relative to the Earth-
Centered Inertial (ECI) frame F G, under the inﬂuence of a gravity-gradient disturbance torque.
The ﬁrst step will be to identify the required equations.
First, let us parameterize the spacecraft inertial attitude by a 3-2-1 Euler sequence, as
summarized in Section 11.2. Then, the attitude kinematics are given by
⎡
⎣
˙φ
˙θ
˙ψ
⎤
⎦=
⎡
⎣
1
sin φ tan θ
cos φ tan θ
0
cos φ
−sin φ
0
sin φ sec θ
cos φ sec θ
⎤
⎦ωbG,
(B.2)
where φ is the roll angle, θ is the pitch angle, ψ is the yaw angle, and ωbG is the spacecraft
angular velocity vector relative to FG, expressed in the spacecraft body-frame Fb. It is clear
from equation (B.2), that to solve for the Euler angles we need to know what the angular
velocity ωbG is. This is governed by the attitude dynamics, which as summarized in Section
11.3, are described by Euler’s equations
I ˙ωbG + ω×
bGIωbG = Tg,
(B.3)

Appendix B
559
where I is the spacecraft inertia matrix, Tg is the gravity-gradient torque, and all quantities
in (B.3) are expressed in the spacecraft body-frame Fb. We see from (B.3) that we need an
expression for the gravity-gradient torque. From Section 12.4, we obtain
Tg = 3μ
r5 r×
b Irb,
(B.4)
where μ is the Earth’s gravitational constant, rb is the spacecraft’s orbital position vector
expressed in spacecraft body coordinates, and r = ||rb|| is the orbital radius. From (B.4), it is
now clear that we need to simulate the spacecraft orbit as well as the attitude, in order to be
able to compute Tg.
Suppose that the spacecraft orbit can be simulated to sufﬁcient accuracy by including only
two-body and J2 gravitational terms. Then, as shown in Chapter 7 the spacecraft orbital motion
is described by
¨r = −μ
r3 r + 3μJ2R2
e
2r5

5(rT zG)2
r2
−1

r −2(rT zG)zG
	
,
(B.5)
where r is the spacecraft’s orbital position expressed in ECI coordinates (FG), zG = [0
0
1],
Re is the Earth’s equatorial radius and J2 is the Earth’s J2 constant. Thus, the spacecraft orbit
is best simulated in the ECI frame. Referring to equation (B.4), we see that in order to compute
Tg, we need to convert the spacecraft orbital position vector to spacecraft body coordinates.
From Section 1.3, we ﬁnd that the required transformation is
rb = CbGr,
(B.6)
where CbG is the rotation matrix transforming ECI coordinates to spacecraft body coordinates.
From Section 11.2, we ﬁnd that CbG may be computed from the Euler angles describing the
attitude as
CbG(φ, θ, ψ) =
⎡
⎣
cθcψ
cθsψ
−sθ
sφsθcψ −cφsψ
sφsθsψ + cφcψ
sφcθ
cφsθcψ + sφsψ
cφsθsψ −sφcψ
cφcθ
⎤
⎦,
(B.7)
where sb = sin b and cb = cos b.
It can now be readily veriﬁed that equations (B.2) to (B.7) are self-contained, and fully
describe the coupled spacecraft attitude and orbital motion. As explained in Section B.1, to
numerically solve the equations of motion it will be very useful to put the equations into the
form of equation (B.1). As a starting point, we examine all of the required equations (equations
(B.2) to (B.7)) and identify the variables whose time-derivatives appear. We ﬁnd all Euler angles
φ, θ, ψ, the angular velocity vector ωbG, and the inertial orbital position vector r. We see that
only the ﬁrst time-derivatives of φ, θ, ψ and ωbG appear, while only the second time-derivative
of r appears. Since we want to write our equations in the form (B.1), we only want equations
with ﬁrst time-derivatives. To do this, let us introduce the spacecraft inertial velocity vector v,
that is
˙r = v
(B.8)

560
Appendix B
Then, the second time-derivative of r becomes the ﬁrst time-derivative of v, that is
˙v = ¨r,
and (B.5) becomes
˙v = −μ
r3 r + 3μJ2R2
e
2r5

5(rT zG)2
r2
−1

r −2(rT zG)zG
	
.
(B.9)
Therefore, by introducing the inertial velocity vector v, we can replace the second-order
differential equation (B.6) by the pair of ﬁrst-order differential equations (B.8) and (B.9). The
coupled spacecraft attitude and orbital motion is therefore fully described by the ﬁrst order
differential equations (B.2), (B.3), (B.8) and (B.9) together with equations (B.4) and (B.7).
Since the quantities appearing with ﬁrst time-derivatives are φ, θ, ψ, ωbG, r and v, we can put
these equations into the form of equation (B.1) by deﬁning the state vector
x =
⎡
⎢⎢⎢⎢⎢⎢⎣
⎡
⎣
φ
θ
ψ
⎤
⎦
ωbG
r
v
⎤
⎥⎥⎥⎥⎥⎥⎦
,
(B.10)
together with the function
f(x, t) =
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
⎡
⎣
1
sin φ tan θ
cos φ tan θ
0
cos φ
−sin φ
0
sin φ sec θ
cos φ sec θ
⎤
⎦ωbG
I−1

−ω×
bGIωbG + 3μ
r5 r×
b Irb
	
v
−μ
r3 r + 3μJ2R2
e
2r5

5(rT zG)2
r2
−1

r −2(rT zG)zG
	
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
,
(B.11)
where rb = CbGr and
CbG(φ, θ, ψ) =
⎡
⎣
cθcψ
cθsψ
−sθ
sφsθcψ −cφsψ
sφsθsψ + cφcψ
sφcθ
cφsθcψ + sφsψ
cφsθsψ −sφcψ
cφcθ
⎤
⎦.
(B.12)
Equations (B.11) and (B.12) are now in a suitable form to be programmed for use with a
numerical ODE solver (such as those available in MATLAB R⃝). It is clear from (B.1), that the
initial condition x(0) must be speciﬁed. From (B.10), we see that we need to specify the initial
Euler angles φ(0), θ(0) and ψ(0), initial angular velocity ωbG(0), initial orbital position r(0)
and initial orbital velocity v(0).

Appendix B
561
Notes
The fourth-order Runge-Kutta method outlined in Section B.1 is but one method of numerically
integrating ﬁrst-order ordinary differential equations. There are several others. For a detailed
treatment of different numerical methods, the reader can consult a book such as Burden and
Faires (2011).
Reference
Burden RL and Faires JD 2011 Numerical Analysis 9th edn. Brooks/Cole, Boston, MA.


Index
acceleration
in multiple reference frames, 41
aerodynamic torque, 230–31
aliasing, 520
along-track orbits, 203
angular momentum
rigid body, 54, 223
system of particles, 51
angular velocity, 34, 42
additivity, 37
from Euler angle rates, 37
from quaternion rates, 38–40
anti-alias pre-ﬁlter, 522
apoapsis, 75
argument principle, 391
attitude actuators, 506–11
control moment gyroscopes, 510
limitations, 319–20
magnetic torquers, 508
synchronization with magnetometers,
508
momentum wheels, 510
reaction wheels, 509
simple dynamical model, 322
thrusters, 506–8
minimum torque impulse bit, 508
pulse width modulation, 507
attitude control
active dual-spin control, 325–30
actuator limitations, 319–20
nonlinear, 451–6
PD control, 293–7
design example, 304–7
effect of actuator dynamics, 322–5, 341–5
effect of disturbances, 318
step response, 296–7
system type, 315
PID control
design using frequency domain, 430–34
design using root locus, 361–7
Nyquist stability analysis, 396–9
stability margins, 408–10
system overview, 219–22
attitude dynamics
linearized equations of motion, 281
transfer function representation, 281
overview, 223
attitude estimation
Extended Kalman ﬁlter, 488–94
TRIAD, 474
Wahba’s problem, 468
Davenport’s q-method, 468–71
QUEST, 471–4
attitude kinematics
overview, 222
attitude representations, see rotation matrix
attitude sensors, 499–506
earth sensors, 502–4
limitations, 504
magnetometers, 501
limitations, 502
rate sensors, 505
star trackers, 504–5
limitations, 505
sun sensors, 499–501
analog, 500
digital, 501
limitations, 501
Spacecraft Dynamics and Control: An Introduction, First Edition.
Anton H.J. de Ruiter, Christopher J. Damaren and James R. Forbes.
© 2013 John Wiley & Sons, Ltd. Published 2013 by John Wiley & Sons, Ltd.

564
Index
autonomous system, 439
axisymmetric body, 235
bandwidth, 373
bi-elliptic transfers, 120–22
comparison with Hohmann,
122
bilinear transformation, 515
block diagrams, 284–6
feedback connection, 285
parallel connection, 284
series connection, 284
Bode diagram, 374–82
derivative, 375
ﬁrst order factor, 377
gain, 375
gain margin, 404
integrator, 376
phase margin, 408
quadratic factor, 379
Clohessy-Wiltshire equations,
194
in-plane equations, 194
in-plane solution, 195–7
periodic component, 198
secular component, 199
summary, 201
out-of-plane equations, 194
out-of-plane solution, 195, 202
complex function
of complex variable, 544
poles, 544
zeros, 544
of real variable, 544
derivative, 545
integral, 545
integration by parts, 546
complex numbers, 541–4
addition, 542
exponential, 542
multiplication, 542
polar form, 541
control moment gyroscopes, see attitude
actuators
corner frequency
ﬁrst order factor, 378
quadratic factor, 380
covariance, 462–4
Cowell’s method, 151
cross-over frequency
gain, 406
relation to rise and settling time,
415–16
phase, 402
cutoff rate, 373
Davenport’s q-method, 468–71
detumbling of spacecraft, 442–7
digital sampling
aliasing, 520
anti-alias pre-ﬁlter, 522
Nyquist-Shannon theorem, 522
sampling rate selection, 519
digitization
closed-loop system, 518
stability, 519
control law, 514–16
bilinear transformation, 516
plant, 517–18
disturbance torques
aerodynamic, 230–31
gravity-gradient, 231–4
magnetic, 227
solar pressure, 228–9
dominant poles, 310
dual-spin stabilization, see passive attitude
stabilization
dynamics
rigid body, 52–6
rotational, 54–6
translational, 53
single particle, 48
system of particles, 49–52
rotational, 50–52
translational, 50
earth sensors, see attitude sensors
Earth-Centered Inertial Frame, see reference
frames, Geocentric-Equatorial
eccentric anomaly, 84–6
hyperbolic, 89
eccentricity, 69
eccentricity vector, 68
eigenvalues, generalized, 525
inclusion theorem, 530
Encke’s method, 151
energy sink hypothesis, 252
environmental torques, see disturbance torques
equilibrium point, 440

Index
565
Euler angles, 22, 222
from rotation matrix, 23
kinematics, 38, 223
to rotation matrix, 23, 222
Euler’s equation, 56, 224
in principal axes frame, 60, 225
Euler’s theorem, 15–18
Extended Kalman ﬁlter
norm constrained (discrete), 488–94
summary, 494
feedback control, 286–9
effect of disturbances, 316–17
frequency domain considerations, see
frequency domain
introduction, 220–22
time-domain speciﬁcations, see time-domain
speciﬁcations
unity feedback, 288
ﬁnal value theorem, 549
ﬂexibility, see spacecraft ﬂexibility
football orbit, 199
frequency domain
adjusting gain margin using P control, 423
adjusting phase margin using P control,
424
design considerations, 416–22
control effort, 419–20
desired open-loop frequency response,
422
disturbance rejection, 418
measurement noise attenuation, 419
modiﬁed control implementation,
420–21
reference signal tracking, 418
PID control design example, 430–34
frequency response, 372–82
Bode diagram, see Bode diagram
polar plot, 387–9
relationship to time-domain speciﬁcations,
411–16
fuel sloshing, see propellant sloshing
gain margin, 402–4
gain stabilization, 538
Gauss variational equations, 155
derivation of, 171–80
small impulse form, 169
Gaussian random variable, 464–6
Geocentric-Equatorial reference frame, 90
gravitational potential
nonspherical primary, 157–63
rotationally symmetric primary, 162
spherically symmetric primary, 162
gravity-gradient stabilization, see passive attitude
stabilization
gravity-gradient torque, 231–4
Hill frame, 192
Hill’s curves, 216–18
Hill’s equations, see Clohessy-Wiltshire equations
Hohmann transfers, 118–20
comparison with bi-elliptic, 122
interplanetary, 133–6
time for round trip, 136
hyperbolic excess speed, 76, 138
impulse response, 282–4
inertia matrix, 55, 56–60
axisymmetric, 235
parallel axis theorem, 57
principal moments of inertia, 59
rotational transformation theorem, 58
summary of properties, 224
inertial reference frame, 47
invariant set, 449
Jacobi’s integral, 215
Joseph formula, 479, 482
Kalman ﬁlter
discrete, 477–81
summary, 480
norm-constrained (discrete), 481–8
summary, 487
norm-constrained, extended, 488–94
summary, 494
Kepler’s equation, 88
hyperbolic, 89
numerical solution, 88
Kepler’s laws, 81
Keplerian two-body problem
eccentricity vector, 68
elliptical orbit, 74
equation of motion, 67
hyperbolic orbit, 76
asymptotes, 78
geometry, 137
Kepler’s laws, 81
orbital angular momentum, 67

566
Index
Keplerian two-body problem (Continued )
orbital energy, 67
parabolic orbit, 79
polar orbit equation, 70
time of ﬂight, 83–9
circular orbit, 83
elliptical orbit, 88
hyperbolic orbit, 89
parabolic orbit, 88
kinetic energy
rigid body, 60–63
lag control
frequency domain, 427
root locus, 358
Lagrangian coefﬁcients, 110
Lagrangian points, see restricted three-body
problem
Lambert’s problem, 109–14
Laplace transforms, 546–50
convolution, 548
deﬁnition, 546
ﬁnal value theorem, 549
multiplication by exponential, 547
of derivative, 547
of integral, 548
of linear combination, 546
scaling of time, 547
table of, 553
LaSalle’s theorem, 450
lead control
frequency domain, 425
root locus, 358
Legendre polynomials, 158
associated Legendre functions, 160
low thrust maneuvers
coplanar circle to circle, 184–6
comparison to Hohmann, 185
spiral nature, 186
plane change, 186–8
low-pass ﬁlter, 372, 373
design, 383
Lyapunov stability, 441
Lyapunov’s stability theorem
global version, 448
local version, 447
magnetic torque, 227
magnetic torquers, see attitude actuators
magnetometers, see attitude sensors
major axis rule, 253
matrix exponential, 517
mean, 462–4
mean anomaly, 87
hyperbolic, 89
modiﬁed control implementation, 366, 401,
420
PD control, 293
Molniya orbits, 169
momentum dumping, 510
momentum wheels, see attitude actuators
Newton’s law of gravitation, 65
non-autonomous system, 439
numerical integration, 557
Nyquist contour, 393
open-loop poles on imaginary axis, 395
Nyquist plot, 393–4
Nyquist stability criterion, 394
example, 396–9
open-loop poles on imaginary axis, 395
Nyquist-Shannon theorem, 522
oblate spinner, 244
observability, 477
open-loop control, 221
orbit determination
Lambert’s Problem, 109–14
three line-of-sight vectors, 103–9
three position vectors, 99–103
orbital angular momentum, 67
orbital elements, 91
from position and velocity, 92
secular oblateness (J2) effects, 168
to position and velocity, 94
orbital maneuvers
combined, 125–6
continuous low thrust
coplanar circle to circle, 184–6
plane change, 186–8
coplanar, 116
bi-elliptic transfers, 120–22
circular to elliptical, 117
elliptical to circular, 118
Hohmann transfers, 118–20
Hohmann/bi-elliptic comparison, 122
plane change, 123
rendezvous (phasing), 127
single impulse, 115
small impulse, 170

Index
567
orbital perturbations
equation of motion, 150
general perturbations, 154–6
Gauss variational equations, 155
oblateness of primary (J2), 163–4
effect on orbital elements, 164–8
sources of, 149
special perturbations, 150–53
Cowell’s method, 151
Encke’s method, 151
osculating orbit, 152
P control, 289
passive attitude stabilization
dual-spin stabilization, 255
effect of energy dissipation, 259–66
equations of motion, 255–7
linearized equations of motion, 257–8
stability conditions, 259
stability conditions (energy sink), 266
gravity-gradient stabilization
equations of motion, 268–9
linearized equations of motion, 269–72
pitch analysis, 272–3
roll/yaw analysis, 273–7
stability condition, 277
spin stabilization, 249–53
energy sink hypothesis, 252
linearized equations of motion, 250
major axis rule, 253
stability conditions, 252
patched conic trajectories, 129, 137
arrival hyperbola, 141–3
collision avoidance, 142
departure hyperbola, 139–41
patch conditions, 137
PD control, 290
frequency domain, 428
root locus, 360
periapsis, 70, 74
perifocal reference frame, 72
phase margin, 404–6
relation to maximum overshoot, 414,
416
phase stabilization, 538
phasing maneuver, 127
physical vector, see vector, physical
PI control
frequency domain, 429
root locus, 361
PID control, 291
frequency domain design example, 430–34
root locus design example, 361–7
planetary capture, 145
planetary ﬂyby, 143
plant, 221, 281
input, 220, 281
output, 221, 281
pointing stability, 505
poles, 544
principal axes frame, 59
principal axis and angle, 19
from rotation matrix, 21
to rotation matrix, 20
principal rotations, 14
probability density function, 459–62
projected circular orbits, 207
projected elliptical orbits, 204–6
prolate spinner, 243
propellant sloshing, 538
pulse width modulation, 507
quaternion, 222
deﬁnition, 25
feedback, 451–6
from rotation matrix, 26
kinematics, 41, 223
successive rotations, 27–32
to rotation matrix, 25, 222
QUEST, 471–4
measurement model, 475
random variable, 459–67
covariance, 462–4
Gaussian, 464–6
mean, 462–4
probability density function, 459–62
white noise sequence, 466
simulation of, 466–7
rate sensors, see attitude sensors
reaction wheels, see attitude actuators
reference frames
angular velocity, 34, 42
deﬁnition, 6
Geocentric-Equatorial, 90
Heliocentric-Ecliptic, 89
Hill frame, 192
inertial, 47
orbiting reference frame, 267
principal axes frame, 59

568
Index
restricted three-body problem
assumptions, 209
equations of motion, 211
Hill’s curves, 216–18
Jacobi’s integral, 215
Lagrangian points, 212–14
stability, 214–15
rigid body
deﬁnition, 52
dynamics, see dynamics, rigid body
kinetic energy, 62
root locus
angle condition, 333–5
characteristics, 339
deﬁnition, 332–3
effect of additional poles, 355
effect of additional zeros, 357
lag control, 358
lead control, 358
PD control, 360
PI control, 361
PID control design example, 361–7
rules for construction, 335–9
derivation, 345–52
rotation matrix, 222
cross-product identity, 14
deﬁnition, 12
Euler angles, 22
from rotation matrix, 23
to rotation matrix, 23, 222
Euler’s theorem, 15–18
general rotations, 15
kinematics, 36, 223
orthonormality, 13
principal axis and angle, 19
from rotation matrix, 21–2
principal rotations, 14
quaternion, 24
from rotation matrix, 26
to rotation matrix, 25, 222
successive rotations, 14
Routh’s stability criterion, 321–2
second-order system, 295–7
step response, 296–7
effect of additional poles, 309
effect of additional zeros, 308
sector triangle area ratio, 107
semi-latus rectum, 70
solar pressure torque, 228–9
spacecraft ﬂexibility, 524–38
control design considerations, 537
dynamics, no structural damping, 524
transfer function representation, 531
dynamics, structural damping, 532
transfer function representation, 534
effect on frequency response, 535
spacecraft formation, 189
along-track orbits, 203
equations of motion, see Clohessy-Wiltshire
equations
projected circular orbits, 207
projected elliptical orbits, 204–6
sphere of inﬂuence, 129–33
spin stabilization, see passive attitude
stabilization
stability
Lyapunov, 441
of linear time-invariant systems, 247–9
pointing, 505
Routh’s criterion, 321–2
stability margins, 399–408
example, 408–10
gain margin, 402–4
phase margin, 404–6
time delay margin, 407
star trackers, see attitude sensors
state-space representation, 438, 514, 557
attitude motion, 438
coupled orbital/attitude motion, 558–60
sun sensors, see attitude sensors
sun-synchronous orbits, 168
synodic period, 135
system type, 311–15
thrusters, see attitude actuators
time delay, 405–6
time delay margin, 407
time-domain speciﬁcations, 298–303
maximum overshoot, 301
peak time, 300
relationship to frequency response, 411–16
rise time, 298
settling time, 302
torque-free attitude motion
axisymmetric body, 235–44
physical interpretation, 242–4
transfer function
impulse response, 282–4
representation of a system, 281

Index
569
state-space realization of, 514
state-space representation of, 511
Transport theorem, 35
TRIAD, 474
true anomaly, 70
two-body problem, see Keplerian two-body
problem
unity feedback, 288
vector
coordinates, 7
addition, 8
cross product, 10
identities, 10
scalar multiplication, 8
scalar product, 9
physical, 1–6
addition, 1
cross product, 3
identities, 6
scalar multiplication, 2
scalar product, 2
temporal derivative, 32–4
Transport theorem, 35
vectrix, 7
velocity
in multiple reference frames, 41
vis-viva equation, 72, 117
Wahba’s problem, 468
white noise sequence, see random variable
zero order hold, 514, 516
delay due to, 519
zeros, 544

