STOCHASTIC SADDLE-POINT OPTIMIZATION FOR THE
WASSERSTEIN BARYCENTER PROBLEM∗
Daniil Tiapkin
HSE University, Moscow, Russia
dtyapkin@hse.ru
Alexander Gasnikov
Moscow Institute of Physics and Technology, Moscow, Russia
Institute for Information Transmission Problems, Moscow, Russia
HSE University, Moscow, Russia
Weierstrass Institute for Applied Analysis and Stochastics, Berlin, Germany
gasnikov@yandex.ru
Pavel Dvurechensky
Weierstrass Institute for Applied Analysis and Stochastics, Berlin, Germany
Institute for Information Transmission Problems, Moscow, Russia
pavel.dvurechensky@wias-berlin.de
December 6, 2021
ABSTRACT
We consider the population Wasserstein barycenter problem for random probability measures sup-
ported on a ﬁnite set of points and generated by an online stream of data. This leads to a complicated
stochastic optimization problem where the objective is given as an expectation of a function given as
a solution to a random optimization problem. We employ the structure of the problem and obtain a
convex-concave stochastic saddle-point reformulation of this problem. In the setting when the distri-
bution of random probability measures is discrete, we propose a stochastic optimization algorithm
and estimate its complexity. The second result, based on kernel methods, extends the previous one
to the arbitrary distribution of random probability measures. Moreover, this new algorithm has a
total complexity better than the Stochastic Approximation approach combined with the Sinkhorn
algorithm in many cases. We also illustrate our developments by a series of numerical experiments.
Keywords Stochastic Optimization · Saddle-Point Optimization · Computational Optimal Transport ·
Wasserstein Barycenter Problem
In this paper we consider stochastic optimization problems, which arise in computational optimal transport when the
goal is to estimate population Wasserstein barycenter [1] (or Fréchet mean w.r.t. Wasserstein distance) of a probability
distribution on the Wasserstein space of probability measures. Wasserstein barycenter problem has recently attracted
a lot of attention from the machine learning, statistics, and optimization community, see [48, 17] and references
therein. From the computational point of view, approximating population Wasserstein barycenter is a challenging
optimization problem since it contains several layers of complications. The ﬁrst layer requires to deﬁne for p ≥1 the
p-Wasserstein distance Wp(r,c) between two probability measures r,c, which in this paper we assume to be discrete
probability distributions that belong to the standard simplex ∆n. Wp(r,c) is deﬁned as an optimal value in an optimal
transport problem, where the goal is to ﬁnd a transport plan between vectors r,c such that the total transportation cost
is minimal (see (1) for a formal deﬁnition). The next layer is that the measure c is assumed to be random with some
probability distribution Pc on ∆n and the population barycenter r∗minimizes the expected Wasserstein distance, i.e.
r∗= argminr∈∆n EcWp
p(r, c). This is a stochastic optimization problem, where the objective is deﬁned as a solution
to some other random optimization problem. The third layer of complication is that the dimension n can be very large,
∗The work of A. Gasnikov in Section 2 was partially supported by the Ministry of Science and Higher Education of the Russian
Federation (Goszadaniye) 075-00337-20-03, project no. 0714-2020-0005. The work of P. Dvurechensly in Section 3 was funded
by Russian Science Foundation (project 18-71-10108). The work of D. Tiapkin was prepared within the framework of the HSE
University Basic Research Program.
arXiv:2006.06763v3  [math.OC]  2 Dec 2021

A PREPRINT - DECEMBER 6, 2021
e.g. 106. To motivate this setting we refer to [9], where the authors consider a template estimation problem from a
random sample of its transformations. A particular example of such a template can be images, considered in [15], where
empirically the Wasserstein barycenter gives the best quality of the template image reconstruction. For a 103 by 103
image, we obtain that n = 106 and the dimension of the transportation plan is then n2 = 1012 leading to a huge-scale
optimization problem.
Similar to other stochastic optimization problems, see e.g. [45], there are two approaches to the population Wasser-
stein barycenter problem, which we refer to as ofﬂine (also known as Sample Average Approximation, SAA) and
online (also known as Stochastic Approximation, SA). The ofﬂine approach assumes that a number of random
probability measures ci, i = 1,...,m is sampled in advance and all the measures are stored in memory. Then
the population Wasserstein barycenter problem is approximated by the empirical Wasserstein barycenter problem
ˆr = argminr∈∆n 1
m
Pm
i=1 Wp
p(r, ci), i.e. the expectation is approximated by the ﬁnite-sum. Finally, it is assumed that
an optimization algorithm has access to all of the measures ci, i = 1,...,m immediately, probably in parallel, and the goal
is to minimize this ﬁnite-sum. So far, nearly all algorithms in the literature for approximating Wasserstein barycenter
are designed for this ﬁnite-sum problem, to name a few [15, 6, 54, 13, 23, 59, 38, 40, 22, 33, 36]. Additionally, in this
setting, it is possible to use a big arsenal of modern decentralized distributed optimization algorithms, see for example,
[23, 59, 52, 19, 36, 29, 35, 34, 30, 51, 50, 27, 7], where, in particular, such algorithms are developed with best-known
complexity bounds for general ﬁnite-sum optimization with cheap dual stochastic oracle, which turns out to be available
for the Wasserstein distance.
Despite all these developments, the ofﬂine approach does not consider clearly the question of how well the solution to
the ﬁnite-sum problem approximates the target population Wasserstein barycenter which is a solution to a stochastic
optimization problem. Moreover, in practice it may not be possible to generate all the measures in advance, the storage
could be problematic, and the data consisting of random measures can appear as an online stream. Thus, in this paper,
we focus on the less studied online setting with all measures unavailable in advance. Online estimation techniques have
been very recently developed in [42] for Wasserstein distance. Online setting for population Wasserstein barycenter
has started recently to attract interest in the statistical community [37, 12] where population Wasserstein barycenters
are studied in a different from ours setting of Bures-Wasserstein space of Gaussian probability measures, and in
optimization community [17], where online approach is compared to ofﬂine.
The approach of the latter paper is based on a widespread idea of entropy regularized optimal transport [14, 48]. One of
the main negative sides of the entropic regularization is that if the goal is to ﬁnd an ε-approximation to the original
non-regularized Wasserstein distance or barycenter, the regularization parameter has to be chosen proportional to ε
[25, 41, 38, 40, 26]. This leads to numerical instability [14, 58] in the Sinkhorn’s algorithm for Wasserstein distance
and Sinkhorn-type algorithms for Wasserstein barycenters [6]. Alternative methods, e.g. based on accelerated gradient
method [11, 24, 25, 2, 32, 41, 40, 47, 26, 31], similarly to Sinkhorn’s algorithm require the regularization parameter to
be small. Moreover, entropic regularization leads to a blurred reconstruction of the original template [15].
Thus, in this paper, we focus on the following question and give a positive answer to it. Is it possible to ﬁnd a population
Wasserstein barycenter of a set of discrete probability measures in the online setting and without the use of entropic
regularization and the calculation of (regularized) Wasserstein distance or its (sub)gradients?
To propose such an online approach that does not require calculating Wasserstein distance and its subgradient, we use
a saddle-point representation for the Wasserstein barycenter problem. Since the population Wasserstein barycenter
problem is a convex stochastic programming problem, we obtain partially stochastic convex-concave saddle-point
representation. Then we adapt Stochastic Mirror Descent [46, 45, 5] for this, partially inﬁnite-dimensional, saddle-point
problem. Finally, by using a reproducing kernel Hilbert space trick inspired by [28], we demonstrate how to make our
approach practical and obtain ﬁnite complexity bounds. We compare the proposed methods with the online approach of
[17] and obtain a regime in which our complexity bounds are better. We also illustrate numerically the regime in which
our methods have better performance than the online algorithm in [17].
Notation.
We deﬁne Matn×m(X) as a space of all matrices of size n × m with entries from the set X. We denote by
[n] an n-element set {1, 2, . . . , n}, and ev, eA, log(v), log(A), √v,
√
A for v ∈Rn, A ∈Matn×n(R) as the element-
wise exponent, logarithm and square root respectively. Also we deﬁne ∆n to be n-dimensional probability simplex
∆n = {(s1, . . . , sn) | ∀i ∈[n] : si ≥0,
Pn
i=1 si = 1}. 1n is n-dimensional vector consisting of ones. If the
dimension is clear from the context, the subscript is omitted. As ei we denote the i-th coordinate vector. The probability
measure induced by a random variable ξ will be denoted by Pξ. For a matrix M ∈Matn×m(X) we denote by M(i)
the i-th row of this matrix.
2

A PREPRINT - DECEMBER 6, 2021
1
Preliminaries
1.1
Background on optimal transport
In this section, following [48], we recall some basic deﬁnitions related to optimal transport. Since we deal only with
discrete measures, we consider only the discrete-discrete optimal transport problem.
Optimal transport (OT) problem.
For a ﬁxed non-negative matrix C and two discrete probability measures r,c ∈∆n
with n-element support deﬁne a transportation cost between measures r and c associated with the cost matrix C as a
solution to the following optimization problem
LC(r,c) =
min
X∈U(r,c)⟨C, X⟩,
(1)
where X is called a transport plan and U(r,c) is a transport polytope, deﬁned as U(r,c) = {X ∈Matn×n(R+) |
X1 = r, XT 1 = c}, and ⟨·, ·⟩is the Frobenius dot-product of two matrices.
If r and c are probability measures onto discrete n-element metric space (M, d), the p-Wasserstein distance between
these two measures is deﬁned as the p-th root of the transportation cost associated with the matrix Dp
i,j = d(xi, xj)p,
where xi and xj are elements of M. Formally, Wp(r,c) = (LDp(r,c))1/p . With a slight abuse of notation, we will
refer to LC(r,c) for an arbitrary non-negative cost matrix C as a Wasserstein distance too, and denote it by W(r,c)
when matrix C is ﬁxed.
Dual problem.
The linear program in the deﬁnition of the transportation cost can be reformulated using so-called
Kantorovich duality in two ways: using some reformulation of results from [48] gives:
LC(r,c) =
max
λ,µ∈Rn
−Ci,j−λi−µj≤0
−⟨λ, r⟩−⟨µ, c⟩,
(2)
and an equivalent formulation is
LC(r,c) = max
µ∈Rn −⟨λ∗(µ, C), r⟩−⟨µ, c⟩,
(3)
where λ∗: Rn × Matn×n(R) →Rn is deﬁned element-wise:
λ∗
i (µ, C) = max
j∈[n](−Ci,j −µj).
(4)
Barycenter deﬁnition.
Suppose that we have a random variable ξ : Ωξ →∆n on probability simplex, or, equivalently,
on the space of probability measures onto M. Then we can deﬁne a p-Wasserstein (population) barycenter w.r.t. ξ as
the solution to the following optimization problem:
r∗= argmin
r∈∆n E

Wp
p(r, ξ)

.
(5)
However, we are interested in a more general situation deﬁned by using an arbitrary non-negative cost matrix C:
r∗= argmin
r∈∆n E [LC(r, ξ)] = argmin
r∈∆n E [W(r, ξ)] .
1.2
Notation for saddle-point problems
In this section, we give a necessary background on saddle-point problems. For a more comprehensive description we
refer to [10, 45]. The following convex-concave saddle point problem is of relevance to us:
min
x∈X max
y∈Y F(x,y).
The typical way to evaluate the quality of the algorithm that outputs the pair (ex,ey) is to use the so-called duality gap:
max
y∈Y F(ex, y) −min
x∈X F(x, ey) ≤ε.
For the stochastic setting, where (ex, ey) are random, we are mostly interested in an approximate solution with large
probability:
Pr

max
y∈Y F(ex, y) −min
x∈X F(x, ey) ≥ε

≤σ.
(6)
We refer to ε as accuracy or precision and to σ as conﬁdence level. Another useful and well-known criteria is small
expectation of the duality gap:
E

max
y∈Y F(ex, y) −min
x∈X F(x, ey)

≤ε.
(7)
3

A PREPRINT - DECEMBER 6, 2021
2
Saddle-point representation
Using the dual reformulation of the optimal transport problem and the deﬁnition of the Wasserstein barycenter, we
obtain the following problem:
min
r∈∆n E [W(r,ξ)] = min
r∈∆n E

max
µ∈Rn −⟨λ∗(µ, C), r⟩−⟨µ, ξ⟩

.
For this problem, we apply Theorem 14.60 from [49] to the space of all Pξ-measurable functions F. Clearly, it is
decomposable. It is also clear that the function under maximum is a normal integrand and ﬁnite, since the barycenter is
well-deﬁned. Thus, we have the next equality:
min
r∈∆n E [W(r, ξ)] = min
r∈∆n sup
fµ∈F
E [−⟨λ∗(fµ(ξ), C), r⟩−⟨fµ(ξ), ξ⟩] .
(8)
Here we call fµ : ∆n →Rn the function that assigns a value of Kantorovich potential µ for every point in ∆n. In other
words, we are trying to ﬁnd potentials simultaneously for every possible measure. We will refer to such functions as
potential functions. The Wasserstein barycenter is a solution to this stochastic saddle-point problem.
2.1
Bounds for the dual variables
To derive theoretical guarantees of the proposed algorithms, we need to construct a bound on the optimal variable value
in the dual problem (3). We obtain it by using properties of the entropy-regularized optimal transport problem and
some additional assumptions on the barycenter r∗. The core idea is to use a known bound from [25, 41] on the optimal
variable in the regularized case and transfer it into the non-regularized case by going to the limit when the regularization
parameter goes to zero.
Entropic regularization.
Firstly, let us deﬁne the entropy regularized OT problem:
Lγ
C(r,c) =
min
X∈U(r,c)⟨C, X⟩−γH(X),
where H(X) = −Pn
i,j=1 Xi,j log Xi,j is the entropic regularizer. One can rewrite the problem in the equivalent form
using Lagrange multipliers λ,µ:
Lγ
C(r,c) = max
λ,µ∈Rn −⟨λ, r⟩−⟨µ, c⟩−γ
n
X
i,j=1
exp
−Ci,j −λi −µj
γ
−1

.
(9)
Denote by λ∗
γ, µ∗
γ the optimal variables for (9). Our goal is to connect optimal dual variables of the regularized and
non-regularized problems. The needed result is presented in the following proposition.
Proposition 1. (λ∗
γ, µ∗
γ) converges to a pair of optimal dual variables of the non-regularized problem (2) as γ →0+.
Remark 1. Optimal dual variables of the non-regularized problem are not necessarily unique, but for our purposes, it
is sufﬁcient to work with one of the solutions.
Proof. Using Theorem 7.17 and Proposition 7.30 from [49], it is sufﬁcient to prove that the function maximized in (9)
converges point-wise to the function maximized in (2) if in (2) we equivalently change the constraint to its indicator
function in the objective.
Notice that by the properties of the limit it is sufﬁcient to prove that
γ exp
α
γ −1

→
γ→0+
+∞
α > 0
0
α ≤0
as a function of α.
If α ≤0, the claim clearly holds. If α > 0, then
α
γ −1 + log γ = α + γ log γ
γ
−1 →+∞as γ →0+.
4

A PREPRINT - DECEMBER 6, 2021
Thus, it is sufﬁcient to provide a γ-dependent bound for the norm of λ∗
γ, µ∗
γ and take the limit as γ →0+ to obtain a
bound for a pair of optimal dual variables in the non-regularized problem.
To obtain the bounds in the regularized case, we, ﬁrst, make the change of variables: u = −λ/γ −1/2, v = −µ/γ −1/2.
Denote by K the matrix e−C/γ. Then we can rewrite (9) in the following form using the notation of [14]:
Lγ
C(r,c) = γ max
v,u [⟨u, r⟩+ ⟨v,c⟩−⟨1, diag euK diag ev⟩] + 2γ.
(10)
Remark 2. If (u∗, v∗) are optimal in (10), then (u∗+ α1, v∗−α1) are optimal too. Hence, we can assume
maxi v∗= maxi∈[n](−µ∗
γ/γ −1/2) = −1/2 ⇐⇒mini∈[n](µ∗
γ)i = 0.
Now, under assumption r > 0, c > 0, it is possible to use bounds from Lemma 1 of the work [25] :
max
i (u∗)i −min
i (u∗)i ≤R,
max
i (v∗)i −min
i (v∗)i ≤R,
where R := −log(ν mini∈[n]{ri, ci}), ν = e−∥C∥∞/γ.
Returning to the original variables:
max
i (µ∗
γ)i −min
i (µ∗
γ)i ≤∥C∥∞−γ log min
i∈[n]{ri, ci}.
(11)
We know that mini∈[n](µ∗
γ)i = 0 ⇐⇒µ∗
γ ≥0. Hence, (11) can be rewritten as
∥µ∗
γ∥∞≤∥C∥∞−γ log min
i∈[n]{ri, ci}.
By tending γ to 0+ and noting that problem (3) is equivalent to problem (2), we prove the following theorem.
Theorem 1. Assume that r,c > 0. Then, there exists an optimal solution µ∗for the problem (3) such that ∥µ∗∥∞≤
∥C∥∞.
Additionally, there in an immediate corollary of Theorem 1.
Corollary 1. Assume that (r∗, f ∗
µ) are optimal variables in the saddle-point problem (8) in which all ξ > 0. Then, if
r∗> 0, there exists another optimal ˆfµ such that ∥ˆfµ∥∞≤∥C∥∞Pξ-almost surely.
Using Corollary 1, we can equivalently reformulate problem (8) in the following manner:
min
r∈∆n E [W(r, ξ)] = min
r∈∆n sup
fµ∈Fb E [−⟨λ∗(fµ(ξ), C), r⟩−⟨fµ(ξ), ξ⟩] ,
(12)
where Fb = {f : ∆n →Rn | f is Pξ-measurable, ∥f∥∞≤∥C∥∞Pξ-a.s.}. We will use this form of the problem in
the further analysis.
Notice that this reformulation is valid in the case of an existence of a positive solution to the original problem. If all ξ
are positive, then the solution to the original problem is also positive. At the same time, all ξ can be made positive by
adding the vector of all ones multiplied by a small number, similarly to as it was done in the analysis of the Sinkhorn
algorithm for Wasserstein distances in [25].
3
Algorithms
In this section, we provide algorithms for computation of population Wasserstein barycenters using the saddle-point
formulation (12) combined with an assumption of the existence of a positive optimal r∗.
3.1
Finite support case
First we study a simpler situation and assume that the random variable ξ has a ﬁnite support Supp(ξ) = {c1, . . . , cm}.
Then, any function fµ ∈Fb can be represented as a matrix of size m × n and the value fµ(ci) of this function is
deﬁned as the i-th row of this matrix. The value of this function on points outside of Supp(ξ) is deﬁned to be zero. The
corresponding matrix is denoted by M(fµ).
5

A PREPRINT - DECEMBER 6, 2021
To make the notation simpler, we say that we have a random variable ζ over indices [m], such that cζ = ξ. Also, we
have fµ(ξ) = M(fµ)(ζ) and denote the uniform distribution over [n] by U([n]) and the distribution associated with r
by P(r).
Hence, if we rewrite (12) in terms of ζ and use the matrix notation, we obtain the following problem
min
r∈∆n E [W(r, ξ)] = min
r∈∆n
max
M∈Matm×n(R)
∥M∥∞≤∥C∥∞
Eζ

−⟨λ∗(M(ζ), C), r⟩−⟨M(ζ), cζ⟩

.
(13)
This non-smooth non-strongly convex-concave saddle-point problem can be solved using the mirror descent algorithm
for saddle point problems. We refer to [45, 10] for additional details on this basic algorithm.
Theorem 2. Algorithm 1 outputs a pair (er, f
M) that satisﬁes for the problem (13) the duality gap criteria (6) with the
precision ε and the conﬁdence level σ in
N = O
n max(n log n, m)∥C∥2
∞
ε2
log2
 1
σ

iterations and its total complexity is O(nN).
Algorithm 1: Mirror Descent for Finite Support case
Data: N – number of iterations;
Result: er – approximation of barycenter;
1 begin
2
Set er = r = (1/n, . . . , 1/n) ∈∆n;
3
Set M = 0m×n ∈Matm×n(R);
4
Set α = 2 log n, β = 4mn∥C∥∞;
5
Set η =
2
∥C∥∞√
8n2 log n+16mn·
√
5N ;
6
for k = 1 to N do
7
Sample t from Pζ;
8
Sample s from U([n]);
9
Sample q from P(rk−1);
10
gs := −n · maxj∈[n](−Cs,j −Mt,j);
11
Jq = argmaxj∈[n](−Cq,j −Mt,j);
12
ht := −eJq + ct,;
13
rs := rs exp(−α · η · gs);
14
r := r/(Pn
i=1 ri);
15
M(t) := M(t) −β · η · ht;
16
Project M onto ℓ∞box;
17
er := 1
kr + k−1
k er;
18
Return er;
Remark 3. er is an ε-approximation of the Wasserstein barycenter with probability at least 1 −σ.
Remark 4. If we assume that ∥C∥2
∞, σ are constants and m ≥n log n, Algorithm 1 has complexity eO(n2m·ε−2). This
is the same complexity as for the Iterative Bregman Projections (IBP) algorithm [6, 38]. In the case when m ≤n log n
it is also possible to obtain the complexity O(n2m · ε−2) but under the weaker convergence criteria (7) (see for details
Remark 5 after the proof of the theorem).
Proof. We have a problem of type
min
r∈X max
M∈Y EΨ(r,M,ζ),
where X := ∆n, Y := {M ∈Matm×n(R) | ∥M∥∞≤∥C∥∞}. In our case
Ψ(r,M,ζ) = −⟨λ∗(M(ζ), C), r⟩−⟨M(ζ), cζ⟩,
where λ∗is deﬁned in (4).
To use the mirror descent algorithm, we need to deﬁne prox-structures on spaces X and Y.
6

A PREPRINT - DECEMBER 6, 2021
• As a prox-structure on X we choose the entropy setup with prox-function dX (r) = Pn
i=1 ri log ri. We can
easily bound the prox-diameter of X as R2
X = log n. Then the Bregman projection is calculated by the
exponential weighting in O(n) time. The corresponding norm is the ∥· ∥1 norm.
• As a prox-structure on Y we choose the Euclidean setup with prox-function dY(M) = 1
2∥M∥2
F . Clearly, we
have R2
Y = m · n · 2∥C∥2
∞. The Bregman projection can be computed in linear time. The corresponding norm
is the ∥· ∥F norm.
Further, we endow the space Z := X × Y with the prox-function dZ(r,M) =
1
2 log ndX (r) +
1
4mn∥C∥2∞dY(M).
Next, let us deﬁne stochastic (sub)gradient oracles. For this purpose, we use a sample t ∼Pζ as the source of
randomness. We have:
G(r, M, t) = ∂rΨ(r, M, t) = −λ∗(M(t), C),
H(r, M, t) = ∂M(t) [−Ψ(r, M, t)]
=
n
X
i=1
ri∂M(t) max
j∈[n] [−Cij −Mtj] + ct.
At each iteration oracle H gives us t-th row of the full subgradient matrix (up to the probability of ct) and this way can
be interpreted as a random coordinate oracle similar to random coordinate descent methods.
However, these subgradients are computationally expensive and their calculation requires O(n2) time. To make the
iteration cheaper, we introduce additional randomization and apply a pure random coordinate technique to G and
H. More precisely, using that r ∈∆n, we sample index i ∈[n] from probability distribution associated with r and
calculate only i-th term of the sum in the deﬁnition of H. Importantly, such stochastic subgradients remain unbiased
stochastic approximations to the true subgradients.
Then, we can write our ﬁnal unbiased stochastic oracles using the subgradient calculus, namely subgradient of the
maximum:
g(r, M, t, s) = −n · max
j∈[n](−Cs,j −Mt,j) · es;
(14)
h(r, M, t, q) = −eJq(M(t),t) + ct,
(15)
where multiplication by n in g is required to keep the unbiasedness property and Jq(M(t), t) is an index at each the
value λ∗
q(M(t),t) is achieved (see (4)). These subgradients can be computed in linear in n time because they require to
compute maximum only over n values.
For the main complexity result, we need to bound the dual norm of the stochastic subgradients
∥g(r, M, t, s)∥X ∗= n
max
j∈[n](−Cs,j −Mt,j)
 ≤2n∥C∥∞,
∥h(r, M, t, q)∥Y∗≤∥ct∥2 + ∥eJq(M(t),ct)∥2 ≤2.
Combining all the above, for the ﬁnite horizon of N iterations and a constant step-size η =
2
L
√
5N , where L2 =
8n2 log n∥C∥2
∞+ 16mn∥C∥2
∞, we apply Proposition 3.2 of [45] and obtain the following complexity bound. After no
more than
N = 5(8n2 log n∥C∥2
∞+ 16mn∥C∥2
∞)
ε2

8 + 2 log 2
σ
2
iterations Algorithm 1 solves the saddle-point problem (13) with an accuracy ε > 0 and a conﬁdence level σ ∈(0,1) in
terms of (6).
Remark 5. If we consider convergence of the duality gap in expectation (see (7)), we can obtain better dependence on
m for the number of iterations:
N = O
nm∥C∥2
∞
ε2

and for the total complexity: O
 n2m∥C∥2
∞· ε−2
. In this case, the complexity bounds of our algorithm are the same
as that of Iterative Bregman Projections (IBP) algorithm [6, 38] in all the regimes of m compared to n.
7

A PREPRINT - DECEMBER 6, 2021
This improvement is possible since for the analysis in terms of the expectation it is sufﬁcient to bound the second moment
of the stochastic subgradients rather than provide uniform bounds. The second moment of the dual norm of g can be
bounded as E

∥g(r,M,t,s)∥2
X ∗

≤4n∥C∥2
∞=: B2
X , whereas the uniform bound for the dual norm suffers from an
additional √n factor. Moreover, in this setting, it is possible to use dynamic step-sizes to obtain a fully online algorithm
[45].
3.2
Background on the inﬁnite-dimensional optimization
The approach in the previous subsection can be viewed as a coordinate descent for the ofﬂine problem since when ξ has
ﬁnite support the expectation w.r.t. ξ is actually a ﬁnite-sum. To deal with the purely online setting, we need to make
additional assumptions and optimize our functional over a «good» subspace of Fb (see (12) for the deﬁnition) where it
can be done effectively. We follow the idea of using kernel spaces used in [28] to approximate Wasserstein distance.
Note that such kernel-based approach is widely used in other machine learning problems [44, 55].
Firstly, following [8], we introduce a necessary background for the inﬁnite-dimensional analysis. The main instrument
for us is the Frèchet derivative, which is deﬁned almost like the derivative in ﬁnite dimensions, except for the special
requirements on the family of sets. For this special type of derivatives, we also have a chain rule, that we are going to
actively use.
The main challenge is that this derivative is an element of the dual space that typically is not canonically isomorphic to
our space. Hence, we cannot reproduce the standard proof for gradient-descent-like procedures. A possible solution is
to restrict the considerations only to Hilbert spaces and apply the Riesz representation theorem to deﬁne steps in the
direction of (sub)gradients. In this case, we also have a notion of subgradient f ′(x0) at x0 deﬁned as
f(x) −f(x0) ≥⟨f ′(x0), x −x0⟩, x ∈domf
that is the most crucial part of the convergence proofs for gradient-descent-like procedures.
The only question is how to compute and store this inﬁnite-dimensional object and how to compute derivatives in f of
linear functionals like εx(f) := f(x). For this purpose, we use an additional assumption that the space H is so-called
reproducing kernel Hilbert space.
A Hilbert space H of functions f : X →R is called a reproducing kernel Hilbert space (RKHS) if there is a symmetric
positive-deﬁned function K: X × X →R called a kernel, such that
1. ∀x ∈X : K(·, x) ∈H;
2. ∀f ∈H : ⟨f, K(·, x)⟩H = f(x);
3. ∀x,y ∈X : ⟨K(·, x), K(·, y)⟩H = K(x,y).
It could be proven [44] by an almost explicit construction that for each symmetric positive-deﬁned function K there
exists such a Hilbert space. However, there are some kernels that are called universal [55]: they can uniformly
approximate any continuous function if X is a compact subset of Rd. An example of such a kernel is the Gaussian RBF
kernel K(x,x′) = exp(−s∥x −x′∥2
2). Due to the universal approximation property RKHS-assumption is in a sense
without loss of generality.
3.3
General Kernel Mirror Descent
In this subsection we apply the mirror descent algorithm to our partially inﬁnite-dimensional problem using the
kernel idea. We ﬁx (H,K) is a RKHS of functions from ∆n to R. Further, we search for an optimal fµ in the space
Hn of tuples of function from H that forms a Hilbert space of functions from ∆n to Rn with the inner product
⟨f, g⟩Hn = Pn
i=1⟨fi, gi⟩H, where fi,gi are i-th coordinate functions of f and g respectively.
This leads to the following new optimization problem derived from (12) using the RKHS assumption:
min
r∈∆n EW(r, ξ) = min
r∈∆n sup
fµ∈Hn
b
E [−⟨λ∗(fµ(ξ), C), r⟩−⟨fµ(ξ), ξ⟩] ,
(16)
where Hn
b = {f ∈Hn | ∥f∥∞≤∥C∥∞Pξ-a.s.} is an intersection of Hn and Fb (see (12)).
Theoretical dependence on the kernel is hidden in the following two constants: R2 = supf
1
2∥f∥2
H and κ2 =
supx K(x,x), that fully depend on the chosen kernel. Unfortunately, for most of non-trivial kernels the value of R2 is
inﬁnite because ∥· ∥H and uniform norm ∥· ∥∞are not equivalent in these inﬁnite-dimensional spaces. Typically the
value R is used to bound the norm ∥f∥Hn =
pPn
i=1 ∥fi∥2
H, where fi is a coordinate function of f. Since R may be
8

A PREPRINT - DECEMBER 6, 2021
unbounded, we introduce to the problem an auxiliary constraint ∥f∥Hn ≤R for a sufﬁciently large R. In this case, if
an optimal potential function lies in this ball, by Lemma 1 of [3] our algorithm outputs an approximation to a solution
of the original problem. To guarantee that R is sufﬁciently large, it is possible to use a doubling technique: multiply R
by two and restart the algorithm with the new value of R until convergence. The total complexity will be asymptotically
similar to the case if we choose R = ∥f ∗
µ∥Hn.
The following theorem is the main result of this subsection.
Theorem 3. For an arbitrary kernel K and an arbitrary distribution Pξ s.t. all ξ > 0, Algorithm 2 (Kernel Mirror
Descent) outputs with probability at least 1−σ an ε-approximation of the Wasserstein barycenter in terms of the duality
gap (6) in
N = O
 
nκ2R
2 + ∥C∥2
∞log n
ε2
log2
 1
σ
!
sample iterations and with
O
 
n3κ4R
4 + ∥C∥4
∞n log2 n
ε4
log4
 1
σ
!
total complexity.
Remark 6. This algorithm is from the family of Stochastic Approximation (SA) algorithms and the most correct
comparison can be obtained with other SA algorithms. In [17, 18] the following total complexity of SA approach based
on entropy regularization with parameter γ and Sinkhorn algorithm is shown:
˜O
n3∥C∥2
∞
ε2
min
1
ε
s
n∥C∥2∞
γµ
,
exp
∥C∥∞log n
ε
 ∥C∥∞log n
ε
+ log
∥C∥∞log n
γε2
 
,
where µ is a constant of local strong convexity at the optimal point. In this approach it is crucial to choose γ = O(ε) to
obtain an ε-approximation of the original non-regularized barycenter and, if we assume that all factors are constant
except n and ε, the complexity of our algorithm is better in n and worse in ε. At the same time,
1) Choice γ = O(ε) leads to numerical instability of the Sinkhorn algorithm.
2) µ can be dependent on parameter γ and, due to the choice γ = O(ε), on ε.
3) R can be dimension-dependent, at least in the case of the linear kernel. Thus, it is not easy to compare our complexity
bound and the bound of [17, 18]. But, our approach does not use entropy regularization and, thus, does not encounter
the numerical instability of the Sinkhorn algorithm.
Proof. We are dealing with stochastic programming problem of the form
min
r∈X max
fµ∈Y EΦ(r,fµ,ξ),
where X := ∆n, Y := Hn
b , and
Φ(r,f,c) = −⟨λ∗(f(c), C), r⟩−⟨f(c), c⟩.
For X we use the entropy setup exactly as in the ﬁnite support case: there is no effect of the inﬁnite dimension of
fµ. For Y we deﬁne the prox-function dY(f) = 1
2∥f∥2
Hn = 1
2
Pn
i=1 ∥fi∥2
H. The corresponding prox-diameter is
R2
Y = R
2. The corresponding Bregman divergence is
BY(f,g) = 1
2∥g∥2
Hn −1
2∥f∥2
Hn −⟨f, g −f⟩Hn = 1
2∥f −g∥Hn.
Hence, the Bregman projection is the projection onto Hn
b . Finally, for the product space Z := X × Y we deﬁne
dZ(r, fµ) =
1
2 log ndX (r) +
1
2R
2 dY(fµ).
9

A PREPRINT - DECEMBER 6, 2021
Algorithm 2: Kernel Mirror Descent (KMD)
Data: N – number of iterations, K – kernel, R
2, κ2 – constants associated with the kernel;
Result: er – approximation of barycenter;
1 begin
2
Set er = r = (1/n, . . . , 1/n) ∈∆n;
3
Set fµ = 0;
4
Set α = 2 log n, β = 2nR2;
5
Set η =
2
√
8 log n∥C∥2∞+8n2κ2R
2·
√
5N ;
6
for k = 1 to N do
7
Sample c(k) from Pξ;
8
for t = 1 to n do
9
(fµ(c(k)))t = min{1, max{−1,
k−1
P
i=1
β(i)
t K(c(k), c(i))}};
10
for i = 1 to n do
11
Ji = arg maxj∈[n](−Ci,j −fµ(c(k))j);
12
gi = −maxj∈[n](−Ci,j −fµ(c(k))j)
13
for t = 1 to n do
14
β(k)
t
= η · β ·
 
−c(k)
t
+
n
X
i=1
r(k)
i
I{t = Ji(c(k)))}
!
15
r := r · exp(−η · α · g);
16
r := r/(Pn
i=1 ri);
17
er := 1
kr + k−1
k er;
18
Return er;
The last component of the analysis is the computation of the subgradients and ﬁnding bounds for their dual norm. For
fµ we compute the subgradient coordinate-wise, i.e. for each ﬁxed coordinate t:
G(r, f, c) = ∂rΦ(r, f, t) = −λ∗(f(c), C),
H(r, f, c)t = (∂f(−Φ(r,f(c),c)))t
= (∂f(−Φ(r,⟨f, K(·,c)⟩H,c)))t
= K(·, c) · (∂µ(⟨λ∗(µ, C), r⟩+ ⟨µ, c⟩))t
= K(·, c)
 
c −
n
X
i=1
riI{t = Ji(c)}
!
,
where Ji(c) is one of the indices in λ∗
i where the maximum value is achieved. We can bound the norms of both
subgradients as follows:
∥G(r,f,c)∥∞≤2∥C∥∞
∥H(r, fµ, c)t∥H ≤2∥K(·, c)∥H ≤2κ,
where we used that ∥K(·, c)∥H =
p
⟨K(·,c), K(·, c)⟩H =
p
K(c,c) ≤κ. Aggregating the bound for each coordinate,
we obtain
∥H(r,fµ,c)∥2
Hn ≤4nκ2.
Finally, for a ﬁxed budget of N iterations, we choose a constant step-size η =
2
L
√
5N , where L2 = 8 log n∥C∥2
∞+
8nκ2R
2 and, applying the result of [45], we obtain the iteration complexity
N = 5(8 log n∥C∥2
∞+ 8nκ2R
2)
ε2

8 + 2 log 2
σ
2
10

A PREPRINT - DECEMBER 6, 2021
to ﬁnd an approximate solution with accuracy ε > 0 and conﬁdence level σ ∈(0,1).
The last step is to calculate the complexity of (sub)gradient computations. Note that the actual value of f (k)
µ
is used at
each iteration k. For a step-size sequence ηk the following results gives an explicit formula for calculating f (k)
µ
for the
case f (0)
µ
= 0.
Proposition 2. If f (0)
µ
= 0, we have the following formulas to calculate f (k)
µ :
(f (k)
µ )t =
k
X
i=1
β(i)
t
· K(·, c(i)),
β(k)
t
= ηk ·
 
−c(k)
t
+
n
X
i=1
r(k)
i
I{t = Ji(c(k)))}
!
,
(17)
where {c(k)} are samples from Pξ.
Proof. We proceed by induction on k. The basis case k = 0 is clear. The induction step follows from the formula of a
step of the gradient descent:
(f (k)
µ )t = (f (k−1)
µ
)t −ηkH(r, f (k−1)
µ
, c(k))t = (f (k−1)
µ
)t + β(k)
t
K(·, c(k)).
The proof is ﬁnished by observing that we need O(N) iterations to recalculate one coordinate function of fµ. To
calculate the subgradient w.r.t. r we need to calculate the full vector fµ for a new sampled measure c(k), which costs
O(nN). Thus, the total complexity is O(nN 2).
We use the described kernel approach with the Gaussian RBF kernel [43]
K(x,x′) = exp
 −s∥x −x′∥2
2

,
and an information-diffusion kernel for simplex [39]
K(x,x′) = exp

−1
t arccos2 
⟨√x,
√
x′⟩

.
These kernels are very similar and their main properties are also similar. Namely, for both kernels κ2 = supx K(x,x) =
1, and the value of R
2 needs to be tuned. Thus, we use it as a hyperparameter of our algorithm. Note that the values of
the hyperparameters s and t need to be tuned as well.
Dynamic step-size.
If we consider the convergence of the duality gap in expectation (see (7)) instead of ﬁnding an
approximate solution with large probability according to (6), we may use a decreasing step-size approach [45] and
obtain essentially the same theoretical complexity bounds. More precisely, we can use step-sizes
ηt =
√
2

supr,r′ BX (r,r′)
2 log n + supf,f ′ BY (f,f ′)
2R
2
1/2
L
√
t
=
√
3
L
√
t, t ≥0
and use the sliding average er = (PN
t=1 ηtr(t))/(PN
t=1 ηt) as an output of our algorithm to obtain a fully online
algorithm for an inﬁnite horizon.
3.4
Linear Kernel Mirror Descent
In this subsection, we study a simple kernel that allows easy computation of fµ and all related constants. The price for
this simplicity is a poor family of optimized functions: it is a linear kernel K(x,x′) = ⟨x, x′⟩and a family of linear
operators ∆n 7→Rn. For this kernel we can compute both constants:
κ2 = sup
x∈∆n⟨x,x⟩= 1,
R2 =
sup
fµ∈Hn
b
∥fµ∥2
2 ≤2n2∥C∥2
∞,
where we used representation of a linear operator as a matrix of size n×n. Overall, in this setting we have the following
complexity in terms of the number of gradient computations:
N = O
n4∥C∥2
∞
ε2
log2
 1
σ

.
11

A PREPRINT - DECEMBER 6, 2021
Figure 1: W2-barycenter functional value with various step-size parameters in Algorithm 1. Presented in log-log scale.
Moreover, each computation of the gradient can be done on O(n2) time since any function fµ can be represented by a
square matrix Θ, and each gradient step can be represented in the space of matrices. This leads to the following total
complexity
N = O
n6∥C∥2
∞
ε2
log2
 1
σ

.
On the one hand, this theoretical complexity is quite pessimistic. On the other hand, the main advantage of our algorithm
with the linear kernel is the lack of parameters to tune, and relatively cheap iterations in comparison to KMD with
general kernels and methods based on gradients of the optimal transport distance [17].
Remark 7. All the complexity bounds in sections 3.1, 3.3, 3.4 are based on bounds for the norm of the solution to the
dual problem (3) and for the dual norm of stochastic subgradients. These bounds are typically rough enough and we
may expect that in practice signiﬁcantly smaller estimates can be used, which may lead to faster convergence due to
larger step-sizes. From this point of view, it may be useful to use adaptive variants of Stochastic Mirror Descent or
Stochastic Mirror Prox): [56, 4, 57] with the adaptive batching idea of [20, 21].
4
Experiments
In this section, we illustrate the practical performance of the proposed algorithms by numerical experiments. Our goal
is to compute population barycenter with respect to W2 distance on various datasets.
4.1
Finite Support Algorithm
Algorithm 1 for the ﬁnite-support setting has good theoretical properties but its practical performance depends on the
choice of the step-size. To demonstrate this effect, we perform experiments on an auxiliary dataset of m = 10 1-d
Gaussian measures. Each measure is discretized over the segment [−10; 10] with n = 300 point masses. We use a
small number of measures to make computation of the objective functional feasible.
We vary dependence on the total number of steps N in the step-size formula of Algorithm 1 from N −0.5 to
N −0.33, N −0.2, N −0.1 and perform computation with N = 5,000,000 steps. We demonstrate the rate of conver-
gence for all these step-size choices in Figure 1. Additionally, we compare shapes of the ﬁnal measures in the case of a
step-size ∼N −0.33 with the barycenter given by the solution of the corresponding linear program and with output of
the Iterative Bregman Projections (IBP) algorithm with γ = 3 · 10−4 and γ = 10−2 in Figure 2.
In the case of larger step-size (∼N −0,2 and ∼N −0.1) we observe problems with scaling: there is some point with
much bigger assigned mass than other. At the same time for IBP, smaller values of the regularization parameter lead to
numerical instability of the algorithm whereas the value γ = 10−3 gives us a very similar picture to γ = 3 · 10−4. We
also can see that IBP outperforms our approach in terms of convergence rate.
4.2
Kernel Mirror Descent.
We study Kernel Mirror Descent Algorithm 2 in three settings:
12

A PREPRINT - DECEMBER 6, 2021
Figure 2: Visual comparison between Algorithm 1, IBP and solution of LP.
• Gaussian RBF kernel K(x,x′) = exp
 −s∥x −x′∥2
2

;
• Information-Diffusion kernel K(x,x′) = exp

−1
t arccos2 
⟨√x,
√
x′⟩

;
• Linear kernel K(x,x′) = ⟨x, x′⟩.
For the ﬁrst two settings we choose a good value of the parameter R
2 and the parameter of the kernel by performing a
grid-search. For the last setting, we implement a more computationally efﬁcient algorithm that works directly with
matrices as brieﬂy discussed in Section 3.4.
We compare our approach with two algorithms, described in [17]:
• Gradient descent with gradients of the regularized Wasserstein distance computed by Sinkhorn algorithm with
stabilization [53];
• Mirror descent with subgradients of non-regularized Wasserstein distance computed by solving the dual OT
problem via linear programming solver.
We refer to the ﬁrst approach as Sinkhorn-based and the second one as direct LP-based.
1-d Gaussian measures.
To compare convergence we consider an auxiliary dataset of randomly generated Gaussian
measures. The main reason to choose this dataset is the ability to compute the true W2-barycenter of the distribution
[16]. We generate 10000 1-d Gaussian measures N(µ,σ2) with µ sampled from N(1,4) and σ sampled from Exp(1/2).
The true population barycenter for this distribution over Gaussian measures is N(1,4), since the expected value of µ is
1 and the expected value of σ is 2.
After that, for each measure, we consider its discretization over the segment [−10; 10] with n = 300 point masses. In the
ﬁrst step, we consider distributions over mean and variance with much more general support to generate measures that
could be called outliers, and make this model closer to applications. Our goal is to compute approximate W2-barycenter
using these discrete measures.
As a performance measure we choose W2-distance to the true barycenter. We notice that we do not have convergence
guarantees in this metric for our algorithms. However, this is one of the very limited number of ways to evaluate the
quality of a barycenter approximation in the online approach where the expectation can not be expressed analytically.
Firstly, we found optimal parameters for our general kernel methods by the 2-dimensional search over log-scale grid.
For both considered types of general kernels the optimal value was R
2 = 45, optimal s for RBF kernel is 0.02 and
optimal t for information diffusion kernel is 200. We observe a tradeoff between the stability of the learning trajectory
and the functional optimization, as can be seen in Figure 3. The key effect is that it is sufﬁcient to choose a relatively
small value of R
2 to have good convergence properties. Notice that we do not claim that our algorithm has convergence
guarantees in W2-distance and the effect of stagnation on the level about 5 · 10−2 in Figure 3 could be explained by a
lack of convergence in W2-distance.
Secondly, we compare the barycenter approximations obtained by our two kernel methods with the Sinkhorn-based
approach with three values of the regularization parameter γ = 10−2, 10−4, 10−6. Since the barycenters produced by
13

A PREPRINT - DECEMBER 6, 2021
Figure 3: Change of parameter R
2 with ﬁxed parameter of information-diffusion kernel. Presented in log-log scale.
Kernel Mirror Descent with both studied kernels are visually almost the same, we present only one of them. We also
perform the comparison for γ = 10−3 and γ = 10−5, but we choose previous three values as the most illustrative ones.
The result of comparison can be found in Figure 4.
For Sinkhorn-based methods, we faced numerical instabilities in the computation of the gradients that may lead to
numerical errors even using a stabilized algorithm. This computational issue may explain the strange shape of the
approximate barycenter produced by Sinkhorn-based method with γ = 10−4. Also, notice that the gradient descent
with Sinkhorn-calculated gradients converges not to the true but to the regularized barycenter.
Next, we compare barycenter approximations computed with the linear KMD and the Sinkhorn-based method in Figure
5. Note that our algorithm outperforms Sinkhorn-based method with a relatively big value of γ = 0.01. For the very
small value γ = 10−6 the results are close with our approximation being a bit sharper. Moreover, our algorithm is
parameter-free and we do not require to tune the regularization parameter γ and the number of Sinkhorn iterations to
have a relatively good approximation quality.
A comparison of the approximation by our method with the direct LP-based method is presented in Figure 6, where we
can see that to obtain a good quality, the direct LP-based method requires more measures than KMD.
Finally, we compare all the methods using the proposed quality metric in Figure 7. Gaussian and information diffusion
kernels show almost the same performance. The best method in W2 distance to the true barycenter is the direct LP-based
method.
Also, we can observe that the Sinkhorn-based method with small γ = 10−6 has an increasing trend in terms of
W2-distance to the true barycenter. This may be due to the convergence to the regularized barycenter and due to
numerical instabilities in gradients caused by the small value of γ: the computation of the gradient becomes less and
less precise.
Additionally, we can see that approximate barycenters produced by the linear KMD outperforms Sinkhorn barycenters
with γ = 10−2 and γ = 10−4 not only visually but also in the W2 distance, and the barycenter approximations
produced by the KMD with Gaussian kernel become better than the Sinkhorn-based method when the iteration number
is large.
We compare also the running time of each algorithm in Figure 8 except the direct LP-based method and Sinkhorn-based
methods with γ = 10−4 and γ = 10−6 since they spend about 132, 24 and 25 minutes respectively whereas all the
other methods converge in less than 4 minutes. We observe one expected effect: the curves corresponding to the general
14

A PREPRINT - DECEMBER 6, 2021
Figure 4: Comparison between the KMD and the Sinkhorn-based method.
15

A PREPRINT - DECEMBER 6, 2021
Figure 5: Comparison between the linear KMD and the Sinkhorn-based method.
16

A PREPRINT - DECEMBER 6, 2021
Figure 6: Comparison between the KMD and the direct LP-based method.
17

A PREPRINT - DECEMBER 6, 2021
Figure 7: Quality of the estimation in W2-distance to the true barycenter on 1-d Gaussian dataset. Presented in log-log
scale.
Figure 8: Speed of processing new measures on 1-d Gaussian dataset.
KMD are parabolas whereas all other curves are lines. Another effect on this graph is related to the regularization
parameter γ for the Sinkhorn-based method: smaller parameter value requires more iterations to produce a gradient.
Also we can see that the information diffusion kernel is slightly more computationally efﬁcient than the Gaussian kernel.
2-d Gaussian measures.
Our next goal is to evaluate performance of our algorithms in the high-dimensional setting.
Our choice is a dataset of randomly generated 2-dimensional Gaussian measures discretized over the grid 50 × 50.
Thus, our input histogram measures are elements of a 2500-dimensional simplex.
In this case, LP-based approach is computationally infeasible since the complexity of gradient computation by an LP
solver is O(n3). Thus, we compare the proposed approach with the Sinkhorn-based online method.
First of all, we describe the measure generation process: we sample means of 2-dimensional Gaussians from
N((−1,1)⊤, 0.75) and covariance matrices from Inverse-Wishart distribution with parameters Φ =

1
0.1
0.1
0.3

and ν = 2. To compute the barycenter of these distributions, we sample 2 · 106 measures and apply the ﬁxed-point
iteration procedure [16]. After that, we compute histograms of all these measures at the segment [−5, 5]2 over grid
50 × 50, add 1e-9 to all elements and normalize to ensure positivity.
18

A PREPRINT - DECEMBER 6, 2021
Figure 9: Quality of the estimation in W2-distance to the true barycenter on 2-d Gaussian dataset. Presented in log-log
scale.
Sinkhorn, γ =
10−6
10−5
10−4
10−3
10−2
10−1
Time, min.
521.85
491.88
502.63
433.81
354.13
30.01
KMD
Information-diffusion kernel
RBF kernel
Linear kernel
Time, min.
9.42
10.32
5.37
Table 1: Running time comparison for 2-d Gaussian dataset.
To compare our algorithms with the Sinkhorn-based method we used 5000 measures. The comparison in W2-distance
to the true barycenter can be found in Figure 9. The best result is obtained by the Sinkhorn-based algorithm with
γ = 10−6. Also, notice that our approaches with general kernels perform well whereas linear KMD almost failed.
Running time comparison is presented in Table 1. Notice that values for the smallest regularization parameters almost
coincide because algorithms reached a maximum number of Sinkhorn iterations. In this table, we see that KMD
performs much faster than Sinkhorn-based method whereas it has a relatively good quality that was outperformed only
by using very small γ = 10−6 with almost 50-time worse running time.
MNIST dataset
First of all, a real-world dataset gives us an opportunity to demonstrate the performance on real
images. We use 2500 images of hand-written digits «3» from the MNIST dataset2 and our goal is to compute their
W2-barycenter in the online setting. The barycenter approximations generated by the Kernel Mirror Descent (Algorithm
2) with an information-diffusion kernel with parameters R
2 = 10, t = 10 during ﬁrst 100 iterations can be seen in
Figure 10. Notice that the Sinkhorn-based method does not provide any meaningful pictures during the ﬁrst 100
iterations.
Our next goal is to study the inﬂuence of the kernel parameters and the parameter R
2 for the Kernel Mirror Descent
algorithm with the information diffusion kernel. For this experiment, we run a 2-d grid-search over the parameters R
2
and t. The most interesting results are presented in Figure 11.
2http://yann.lecun.com/exdb/mnist/
Figure 10: Learning of the barycenter of MNIST dataset.
19

A PREPRINT - DECEMBER 6, 2021
Figure 11: Comparison of the barycenter computed by the KMD with an information-diffusion kernel with different
values of R and t.
For the values of t less than 0.004 the image disappears. Thus, we may say that the value of t ≥1 can be considered as
a «safe» threshold value for obtaining a good barycenter. However, there is a possibility to vary the «thickness» of the
barycenter by tuning this parameter.
If we ﬁx t and start to vary the parameter R
2, we can see that this parameter affects the «sharpness» of the barycenter.
Additionally, the choice of R
2 can be considered as a new type of regularization.
5
Conclusion
In this work, we consider two algorithms for the stochastic approximation approach to the population Wasserstein
barycenter problem in the discrete setting. This barycenter minimizes the expectation of the Wasserstein distance to
random probability measure generated from some distribution.
The ﬁrst algorithm uses an additional assumption that the expectation is taken over a ﬁnite number of measures. This
assumption is very similar to the standard ofﬂine setting with the SAA-approach when we replace the expectation
with the ﬁnite-sum. This algorithm has similar theoretical complexity to that of the well-known Iterative Bregman
Projections algorithm.
The second algorithm is proposed for a general setting without such restrictive assumptions and uses optimization in
reproducing kernel Hilbert spaces as the main instrument. It is the ﬁrst algorithm for the online Wasserstein barycenter
problem that does not use typically expensive or numerically unstable computation of (sub)gradients of the Wasserstein
distance or its regularized version. Moreover, in the experiment section, we show that our approach is practical and
comparable to both main existing online approaches. Also, the use of the simplest possible linear kernel gives us a
practical parameter-free algorithm.
20

A PREPRINT - DECEMBER 6, 2021
Turning to possible extensions, a promising direction for future work is an application of this saddle-point framework to
the entropy-regularized problem. Regularization allows one to use accelerated gradient methods that are known to be
efﬁcient for solving the regularized optimal transport problem [38, 41]. Another reasonable direction is extension of
this approach to the continuous measure spaces, e.g. the space of Gaussian measures.
References
[1] Agueh, M., Carlier, G.: Barycenters in the wasserstein space. SIAM Journal on Mathematical Analysis 43(2),
904–924 (2011)
[2] Anikin, A.S., Gasnikov, A.V., Dvurechensky, P.E., Tyurin, A.I., Chernov, A.V.: Dual approaches to the minimiza-
tion of strongly convex functionals with a simple structure under afﬁne constraints. Computational Mathematics
and Mathematical Physics 57(8), 1262–1276 (2017)
[3] Antonakopoulos,
K.,
Belmega,
V.,
Mertikopoulos,
P.:
An adaptive mirror-prox method for vari-
ational inequalities with singular operators.
In:
H. Wallach,
H. Larochelle,
A. Beygelzimer,
F. d'Alché-Buc,
E. Fox,
R. Garnett (eds.) Advances in Neural Information Processing Systems
32,
pp.
8455–8465.
Curran
Associates,
Inc.
(2019).
URL
http://papers.nips.cc/paper/
9053-an-adaptive-mirror-prox-method-for-variational-inequalities-with-singular-operators.
pdf
[4] Bach, F., Levy, K.Y.: A universal algorithm for variational inequalities adaptive to smoothness and noise. In:
A. Beygelzimer, D. Hsu (eds.) Proceedings of the Thirty-Second Conference on Learning Theory, Proceedings of
Machine Learning Research, vol. 99, pp. 164–194. PMLR, Phoenix, USA (2019). URL http://proceedings.
mlr.press/v99/bach19a.html. ArXiv:1902.01637
[5] Bayandina, A., Dvurechensky, P., Gasnikov, A., Stonyakin, F., Titov, A.: Mirror descent and convex optimization
problems with non-smooth inequality constraints. In: P. Giselsson, A. Rantzer (eds.) Large-Scale and Distributed
Optimization, chap. 8, pp. 181–215. Springer International Publishing (2018). DOI 10.1007/978-3-319-97478-1_8.
ArXiv:1710.06612
[6] Benamou, J.D., Carlier, G., Cuturi, M., Nenna, L., Peyré, G.: Iterative bregman projections for regularized
transportation problems. SIAM Journal on Scientiﬁc Computing 37(2), A1111–A1138 (2015)
[7] Beznosikov, A., Dvurechensky, P., Koloskova, A., Samokhina, V., Stich, S.U., Gasnikov, A.: Decentralized local
stochastic extra-gradient for variational inequalities. arXiv:2106.08315 (2021)
[8] Bogachev, V.I., Smolyanov, O.G.: Real and functional analysis, vol. 4. Springer (2020)
[9] Boissard, E., Le Gouic, T., Loubes, J.M.: Distribution’s template estimate with wasserstein metrics. Bernoulli
21(2), 740–759 (2015). DOI 10.3150/13-BEJ585. URL https://doi.org/10.3150/13-BEJ585
[10] Bubeck, S.: Convex optimization: Algorithms and complexity. Foundations and Trends® in Machine Learning
8(3-4), 231–357 (2015). DOI 10.1561/2200000050. URL http://dx.doi.org/10.1561/2200000050
[11] Chernov, A., Dvurechensky, P., Gasnikov, A.: Fast primal-dual gradient method for strongly convex minimization
problems with linear constraints. In: Y. Kochetov, M. Khachay, V. Beresnev, E. Nurminski, P. Pardalos (eds.)
Discrete Optimization and Operations Research: 9th International Conference, DOOR 2016, Vladivostok, Russia,
September 19-23, 2016, Proceedings, pp. 391–403. Springer International Publishing (2016)
[12] Chewi, S., Maunu, T., Rigollet, P., Stromme, A.: Gradient descent algorithms for Bures-Wasserstein barycenters.
In: J. Abernethy, S. Agarwal (eds.) Proceedings of Thirty Third Conference on Learning Theory, Proceedings of
Machine Learning Research, vol. 125, pp. 1276–1304. PMLR (2020). URL http://proceedings.mlr.press/
v125/chewi20a.html
[13] Claici, S., Chien, E., Solomon, J.: Stochastic Wasserstein barycenters. In: J. Dy, A. Krause (eds.) Proceedings of
the 35th International Conference on Machine Learning, Proceedings of Machine Learning Research, vol. 80, pp.
999–1008. PMLR (2018). URL http://proceedings.mlr.press/v80/claici18a.html
[14] Cuturi, M.: Sinkhorn distances: Lightspeed computation of optimal transport. In: C.J.C. Burges, L. Bottou,
M. Welling, Z. Ghahramani, K.Q. Weinberger (eds.) Advances in Neural Information Processing Systems 26, pp.
2292–2300. Curran Associates, Inc. (2013)
[15] Cuturi, M., Doucet, A.: Fast computation of wasserstein barycenters. In: E.P. Xing, T. Jebara (eds.) Proceedings
of the 31st International Conference on Machine Learning, Proceedings of Machine Learning Research, vol. 32,
pp. 685–693. PMLR, Bejing, China (2014). URL http://proceedings.mlr.press/v32/cuturi14.html
[16] Delon, J., Desolneux, A.: A wasserstein-type distance in the space of gaussian mixture models. SIAM J. Imaging
Sci. 13(2), 936–970 (2020). DOI 10.1137/19M1301047. URL https://doi.org/10.1137/19M1301047
21

A PREPRINT - DECEMBER 6, 2021
[17] Dvinskikh, D.: Stochastic averaging versus sample average approximation for population wasserstein barycenter
calculation. arXiv:2001.07697 (2020)
[18] Dvinskikh, D.: Decentralized algorithms for wasserstein barycenters. arXiv:2105.01587 (2021)
[19] Dvinskikh, D., Gorbunov, E., Gasnikov, A., Dvurechensky, P., Uribe, C.A.: On primal and dual approaches
for distributed stochastic convex optimization over networks. In: 2019 IEEE 58th Conference on Decision and
Control (CDC), pp. 7435–7440. IEEE (2019). ArXiv:1903.09844
[20] Dvinskikh, D., Ogaltsov, A., Dvurechensky, P., Gasnikov, A., Spokoiny, V.: Adaptive gradient descent for convex
and non-convex stochastic optimization. arXiv preprint arXiv:1911.08380 (2019)
[21] Dvinskikh, D., Ogaltsov, A., Gasnikov, A., Dvurechensky, P., Spokoiny, V.: On the line-search gradient methods for
stochastic optimization. IFAC-PapersOnLine 53(2), 1715–1720 (2020). DOI https://doi.org/10.1016/j.ifacol.2020.
12.2284.
URL https://www.sciencedirect.com/science/article/pii/S240589632032944X.
21th
IFAC World Congress, arXiv:1911.08380
[22] Dvinskikh, D., Tiapkin, D.: Improved complexity bounds in wasserstein barycenter problem. In: A. Baner-
jee, K. Fukumizu (eds.) Proceedings of The 24th International Conference on Artiﬁcial Intelligence and
Statistics, Proceedings of Machine Learning Research, vol. 130, pp. 1738–1746. PMLR (2021).
URL
http://proceedings.mlr.press/v130/dvinskikh21a.html
[23] Dvurechensky, P., Dvinskikh, D., Gasnikov, A., Uribe, C.A., Nedi´c, A.:
Decentralize and randomize:
Faster algorithm for Wasserstein barycenters.
In: S. Bengio, H. Wallach, H. Larochelle, K. Grauman,
N. Cesa-Bianchi, R. Garnett (eds.) Advances in Neural Information Processing Systems 31, NeurIPS
2018, pp. 10783–10793. Curran Associates, Inc. (2018).
URL http://papers.nips.cc/paper/
8274-decentralize-and-randomize-faster-algorithm-for-wasserstein-barycenters.pdf.
ArXiv:1806.03915
[24] Dvurechensky, P., Gasnikov, A., Gasnikova, E., Matsievsky, S., Rodomanov, A., Usik, I.: Primal-dual method for
searching equilibrium in hierarchical congestion population games. In: Supplementary Proceedings of the 9th
International Conference on Discrete Optimization and Operations Research and Scientiﬁc School (DOOR 2016)
Vladivostok, Russia, September 19 - 23, 2016, pp. 584–595 (2016). ArXiv:1606.08988
[25] Dvurechensky, P., Gasnikov, A., Kroshnin, A.: Computational optimal transport: Complexity by accelerated
gradient descent is better than by Sinkhorn’s algorithm. In: J. Dy, A. Krause (eds.) Proceedings of the 35th
International Conference on Machine Learning, Proceedings of Machine Learning Research, vol. 80, pp. 1367–
1376 (2018). ArXiv:1802.04367
[26] Dvurechensky, P., Gasnikov, A., Omelchenko, S., Tiurin, A.: A stable alternative to Sinkhorn’s algorithm for
regularized optimal transport. In: A. Kononov, M. Khachay, V.A. Kalyagin, P. Pardalos (eds.) Mathematical
Optimization Theory and Operations Research, pp. 406–423. Springer International Publishing, Cham (2020)
[27] Dvurechensky, P., Kamzolov, D., Lukashevich, A., Lee, S., Ordentlich, E., Uribe, C.A., Gasnikov, A.: Hyperfast
second-order local solvers for efﬁcient statistically preconditioned distributed optimization. arXiv:2102.08246
(2021)
[28] Genevay, A., Cuturi, M., Peyré, G., Bach, F.: Stochastic optimization for large-scale optimal transport. In:
Advances in neural information processing systems, pp. 3440–3448 (2016)
[29] Gorbunov, E., Dvinskikh, D., Gasnikov, A.: Optimal decentralized distributed algorithms for stochastic convex
optimization. arXiv preprint arXiv:1911.07363 (2019)
[30] Gorbunov, E., Rogozin, A., Beznosikov, A., Dvinskikh, D., Gasnikov, A.: Recent theoretical advances in
decentralized distributed convex optimization. arXiv preprint arXiv:2011.13259 (2020)
[31] Guminov, S., Dvurechensky, P., Tupitsa, N., Gasnikov, A.: On a combination of alternating minimization and
Nesterov’s momentum. In: M. Meila, T. Zhang (eds.) Proceedings of the 38th International Conference on
Machine Learning, Proceedings of Machine Learning Research, vol. 139, pp. 3886–3898. PMLR, Virtual (2021).
URL http://proceedings.mlr.press/v139/guminov21a.html. ArXiv:1906.03622, WIAS Preprint No.
2695
[32] Guminov, S.V., Nesterov, Y.E., Dvurechensky, P.E., Gasnikov, A.V.: Accelerated primal-dual gradient descent
with linesearch for convex, nonconvex, and nonsmooth optimization problems. Doklady Mathematics 99(2),
125–128 (2019)
[33] Heinemann, F., Munk, A., Zemel, Y.: Randomised wasserstein barycenter computation: Resampling with statistical
guarantees. arXiv preprint arXiv:2012.06397 (2020)
[34] Hendrikx, H., Bach, F., Massoulie, L.: An optimal algorithm for decentralized ﬁnite sum optimization. arXiv
preprint arXiv:2005.10675 (2020)
22

A PREPRINT - DECEMBER 6, 2021
[35] Hendrikx, H., Xiao, L., Bubeck, S., Bach, F., Massoulie, L.: Statistically preconditioned accelerated gradient
method for distributed optimization. In: H.D. III, A. Singh (eds.) Proceedings of the 37th International Conference
on Machine Learning, Proceedings of Machine Learning Research, vol. 119, pp. 4203–4227. PMLR (2020). URL
http://proceedings.mlr.press/v119/hendrikx20a.html
[36] Krawtschenko, R., Uribe, C.A., Gasnikov, A., Dvurechensky, P.: Distributed optimization with quantization for
computing wasserstein barycenters. arXiv:2010.14325 (2020). DOI 10.20347/WIAS.PREPRINT.2782. WIAS
preprint 2782
[37] Kroshnin, A., Spokoiny, V., Suvorikova, A.: Statistical inference for Bures–Wasserstein barycenters. The Annals
of Applied Probability 31(3), 1264 – 1298 (2021). DOI 10.1214/20-AAP1618. URL https://doi.org/10.
1214/20-AAP1618
[38] Kroshnin, A., Tupitsa, N., Dvinskikh, D., Dvurechensky, P., Gasnikov, A., Uribe, C.: On the complexity of
approximating Wasserstein barycenters. In: K. Chaudhuri, R. Salakhutdinov (eds.) Proceedings of the 36th
International Conference on Machine Learning, Proceedings of Machine Learning Research, vol. 97, pp. 3530–
3540. PMLR, Long Beach, California, USA (2019). ArXiv:1901.08686
[39] Lafferty, J., Lebanon, G.: Diffusion kernels on statistical manifolds. Journal of Machine Learning Research 6(Jan),
129–163 (2005)
[40] Lin, T., Ho, N., Chen, X., Cuturi, M., Jordan, M.I.: Revisiting ﬁxed support wasserstein barycenter: Computational
hardness and efﬁcient algorithms. arXiv preprint arXiv:2002.04783 (2020)
[41] Lin, T., Ho, N., Jordan, M.: On efﬁcient optimal transport: An analysis of greedy and accelerated mirror descent
algorithms. In: K. Chaudhuri, R. Salakhutdinov (eds.) Proceedings of the 36th International Conference on
Machine Learning, Proceedings of Machine Learning Research, vol. 97, pp. 3982–3991. PMLR, Long Beach,
California, USA (2019)
[42] Mensch, A., Peyré, G.: Online sinkhorn: Optimal transport distances from sample streams. Advances in Neural
Information Processing Systems 33 (2020)
[43] Minh, H.Q.: Nonparametric stochastic approximation with large step-sizes. Some Properties of Gaussian
Reproducing Kernel Hilbert Spaces and Their Implications for Function Approximation and Learning Theory 44,
307–338 (2010). DOI 10.1007/s00365-009-9080-0. URL https://doi.org/10.1007/s00365-009-9080-0
[44] Mohri, M., Rostamizadeh, A., Talwalkar, A.: Foundations of machine learning. MIT press (2018)
[45] Nemirovski, A., Juditsky, A., Lan, G., Shapiro, A.: Robust stochastic approximation approach to stochastic
programming. SIAM Journal on Optimization 19(4), 1574–1609 (2009). DOI 10.1137/070704277. URL
https://doi.org/10.1137/070704277
[46] Nemirovsky, A., Yudin, D.: Problem Complexity and Method Efﬁciency in Optimization. J. Wiley & Sons, New
York (1983)
[47] Nesterov, Y., Gasnikov, A., Guminov, S., Dvurechensky, P.: Primal-dual accelerated gradient methods with small-
dimensional relaxation oracle. Optimization Methods and Software 0(0), 1–28 (2020). DOI 10.1080/10556788.
2020.1731747. URL https://doi.org/10.1080/10556788.2020.1731747. Accepted,arXiv:1809.05895
[48] Peyré, G., Cuturi, M.: Computational optimal transport. Foundations and Trends in Machine Learning 11(5-6),
355–607 (2019)
[49] Rockafellar, R.T., Wets, R.J.B.: Variational analysis, vol. 317. Springer Science & Business Media (2009)
[50] Rogozin, A., Beznosikov, A., Dvinskikh, D., Kovalev, D., Dvurechensky, P., Gasnikov, A.: Decentralized
distributed optimization for saddle point problems. arXiv:2102.07758 (2021)
[51] Rogozin, A., Bochko, M., Dvurechensky, P., Gasnikov, A., Lukoshkin, V.: An accelerated method for decentralized
distributed stochastic optimization over time-varying graphs. arXiv:2103.15598 (2021)
[52] Scaman, K., Bach, F., Bubeck, S., Lee, Y.T., Massoulié, L.: Optimal algorithms for smooth and strongly convex
distributed optimization in networks. In: D. Precup, Y.W. Teh (eds.) Proceedings of the 34th International
Conference on Machine Learning, Proceedings of Machine Learning Research, vol. 70, pp. 3027–3036. PMLR,
International Convention Centre, Sydney, Australia (2017). URL http://proceedings.mlr.press/v70/
scaman17a.html
[53] Schmitzer, B.: Stabilized sparse scaling algorithms for entropy regularized transport problems. SIAM Journal on
Scientiﬁc Computing 41(3), A1443–A1481 (2019). ArXiv:1610.06519
[54] Staib, M., Claici, S., Solomon, J.M., Jegelka, S.: Parallel streaming wasserstein barycenters. In: I. Guyon, U.V.
Luxburg, S. Bengio, H. Wallach, R. Fergus, S. Vishwanathan, R. Garnett (eds.) Advances in Neural Information
23

A PREPRINT - DECEMBER 6, 2021
Processing Systems 30, pp. 2647–2658. Curran Associates, Inc. (2017). URL http://papers.nips.cc/paper/
6858-parallel-streaming-wasserstein-barycenters.pdf
[55] Steinwart, I., Christmann, A.: Support vector machines. Springer Science & Business Media (2008)
[56] Stonyakin, F., Gasnikov, A., Dvurechensky, P., Alkousa, M., Titov, A.: Generalized Mirror Prox for monotone
variational inequalities: Universality and inexact oracle. arXiv:1806.05140 (2018)
[57] Stonyakin, F., Tyurin, A., Gasnikov, A., Dvurechensky, P., Agafonov, A., Dvinskikh, D., Alkousa, M., Pasechnyuk,
D., Artamonov, S., Piskunova, V.: Inexact model: A framework for optimization and variational inequalities.
Optimization Methods and Software (2021). DOI 10.1080/10556788.2021.1924714. URL https://doi.org/
10.1080/10556788.2021.1924714. WIAS Preprint No. 2709, arXiv:2001.09013, arXiv:1902.00990
[58] Stonyakin, F.S., Dvinskikh, D., Dvurechensky, P., Kroshnin, A., Kuznetsova, O., Agafonov, A., Gasnikov, A.,
Tyurin, A., Uribe, C.A., Pasechnyuk, D., Artamonov, S.: Gradient methods for problems with inexact model of
the objective. In: M. Khachay, Y. Kochetov, P. Pardalos (eds.) Mathematical Optimization Theory and Operations
Research, pp. 97–114. Springer International Publishing, Cham (2019). ArXiv:1902.09001
[59] Uribe, C.A., Dvinskikh, D., Dvurechensky, P., Gasnikov, A., Nedi´c, A.: Distributed computation of Wasserstein
barycenters over networks. In: 2018 IEEE Conference on Decision and Control (CDC), pp. 6544–6549 (2018).
ArXiv:1803.02933
24

