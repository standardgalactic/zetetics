Constructive Solid Geometry based Topology
Optimization using Evolutionary Algorithms
Faez Ahmed, Bishakh Bhattacharya and Kalyanmoy Deb
Department of Mechanical Engineering
Indian Institute of Technology Kanpur
PIN 208016, India, {faez,bishakh,deb}@iitk.ac.in
KanGAL Report Number 2012013
Abstract. Over the past two decades, structural optimization studies
have been performed extensively by researchers across the world. Most
recent investigations have focused on increasing the eﬃciency and ro-
bustness of gradient based optimization techniques and extending them
to multidisciplinary objective functions. The existing global optimization
techniques suﬀer with requirement of enormous computational eﬀort due
to large number of variables used in grid discretization of problem do-
main. The paper proposes a novel methodology named as Constructive
Geometry Topology Optimization Method (CG-TOM) for topology opti-
mization problems. It utilizes a set of nodes and overlapping primitives
to obtain the geometry. A novel graph based repair operator is used to
ensure consistent design and real parameter genetic algorithm is used
for optimization. Results for standard benchmark problems for compli-
ance minimization have been found to give better results than existing
methods in literature. The method is generic and can be extended to any
two or three-dimensional topology optimization problem using diﬀerent
primitives.
1
Introduction
Structural optimization deals with the determination of the topology, shape and
size of the structures and mechanism starting with a domain of material to which
the external loads and supports are applied [1]. Topology optimization of com-
pliant mechanism can be considered as determination of material connectivity
among diﬀerent ports such as input, output and support ports (boundary condi-
tions). These special ports and other material intersection ports can be termed
as nodes and the topology deﬁnes the compliant mechanism skeleton and con-
nection between such nodes. It provides the ﬂexibility where both the shape of
the exterior boundary and conﬁguration of interior boundaries can be optimized
simultaneously.
Most of the existing methods in literature [2] use a grid approach for domain
discretization. They use variables proportional to number of grid cells, and utilize
gradient based methods to search for optimum topology. Hence the number

of variables used are large. Problems like point ﬂexure and mesh dependency
are found in such methods and are often dealt with using diﬀerent ﬁltering
techniques. Mesh reﬁnement further increases the number of variables.
The objective function is often the compliance, that is, the ﬂexibility of the
structure under the given loads, subject to a volume constraint. The optimum
distribution of material is measured in terms of the overall stiﬀness of the struc-
ture such that the higher the stiﬀness the more optimal the distribution of the
allotted material in the domain. Two major methods that exist in topology op-
timization ﬁeld are homogenization and the solid isotropic material with penal-
ization (SIMP) methods. Comprehensive details of SIMP and related methods
can be found in [2]. For a continuum structure represented by a domain of ﬁ-
nite elements and associated boundary conditions, the compliance minimization
topology optimization problem in SIMP can be expressed mathematically as:
Find the optimal distribution of solid and void elements that would
Minimize f(ρ) = uT Ku = PNe
j=1 ujT Kjuj,
subject to PNe
j=1 ρjVj ≤V0,
ρmin ≤ρ ≤1,
(1)
where f(ρ) represents the objective function which is total strain energy, ρ is
the design variable vector of non-dimensional element densities, u the vector of
global nodal displacements and K is the global stiﬀness matrix. uj, Kj, ρj and
Vj are the jth elements displacement vector, stiﬀness matrix, non-dimensional
density and volume respectively. Ne is the number of elements and V0 is the
material available. The parameter ρmin is positive.
Genetic algorithms (GAs) were used by Jakiela et al. [3] for the optimal
topology search of continuum structures. The design space was discretized into
small elements with all of the ﬁnite elements forming a binary-coded bit-string
chromosome, 0 and 1 for absence and presence of an element in the structure,
respectively. To facilitate the transmission of topology and shape characteristics
across generations, Tai et al. [4] utilized spline based arrangements of skeleton
and ﬂesh surrounding the bones to represent structural geometry. Other recent
works in non-gradient methods include simulated biological growth (SBG) [5],
bidirectional ESO (BESO) [6] and cellular automata [7, 8]. The usage of global
optimization methods are generally not found to perform at par with the local
optimization methods [1].
Constructive Solid Geometry (CSG) is a technique widely used in solid mod-
elling. It uses Boolean operators to combine simple objects called solids or prim-
itives, constructed according to geometric rules, and form complex two or three
dimensional geometries. Simple shapes like rectangle, circle, ellipse or a generic
polygon can be used as a CSG primitives in 2-D. The boolean operations can be
summarized as Union, Intersection and Diﬀerence as shown in Figure 1 (a).
The idea of utilizing CSG primitives for topology optimization provided the
motivation for the proposed technique. Using CSG, union of many primitives
(rectangular bars) can be taken to form complex shape segments. The material

where bar segments do not appear is left out as holes. This idea provides the
backbone of CG-TOM method.
(a)
(b)
Fig. 1. (a) CSG Boolean operations on 2-D primitives (b) Problem domain for can-
tilever with end loading.
2
Methodology
The key idea to the methodology is to utilize a small set of points (nodes) and
there connectivity to generate the compliant mechanism or structure. A generic
topology can be seen as comprising of few joints connected by segments. The
number of joints and the number of segments connecting them may vary from
one mechanism to other. The synthesis of compliant mechanisms has tradition-
ally been viewed as a domain with presence or absence of holes. On the contrary,
we propose to use a building-block model where diﬀerent segments (primitives)
overlap to give shape and volume to the ﬁnal topology. The topology is com-
pletely deﬁned by a set of n nodes and widths representing connectivity between
each pair of nodes. The methodology is explained through a topology optimiza-
tion problem of a cantilever system. The domain dimensions are 120 mm × 40
mm and a point load of 100 N is applied at the edge as shown in Fig. 1 (b).
2.1
Algorithm Summary
The algorithm can be summarized in the following steps. In the next section,
step by step explanation along-with example ﬁgures is shown.
Step 1 Deﬁne k ﬁxed nodes
Step 2 Interpret variables to obtain positions of m nodes
Step 3 Delaunay triangulation to obtain allowed connectivity between all nodes
Step 4 Allot widths to triangle edges. Remove edges with negative widths.
Step 5 Use CSG tool to obtain the topology after union of all bars
Step 6 Use graph based repair operator to check and correct the topology.

Step 7 Mesh the obtained topology using CSG supporting mesh generator
Step 8 Apply loads and boundary conditions at required nodes
Step 9 Use ﬁnite element analysis to solve for deﬂection, stresses etc.
Step 10 Read required output and return ﬁtness and constraint values
2.2
Description
Having summarized the algorithm, we now give a step by step description of the
method.
In a generic topology optimization problem, after the actual problem formu-
lation, the design engineer has a problem domain within which the ﬁnal topology
should be constrained, a set of loads and a set of boundary conditions (like the
location of supports). After considering the boundary condition and loads, the
user deﬁnes k ﬁxed nodes. These nodes represent the spatial locations where ma-
terial must necessarily be present. The point of application of loads (e.g. point
force) or various boundary conditions are usually taken as ﬁxed nodes. As shown
in Fig. 2 (a), three ﬁxed nodes (shown by square marker) at (0,0), (120,0) and
(0,40) are taken. Thereafter we take m nodes denoting joints, within the domain
bounds as shown in Fig. 2 (a) by circular markers. The ﬁnal mechanism may
have any number of joints less than or equal to m. The n (= m + k) points
represent the ’joints’ in the mechanism.
To ﬁnd the possible connections between joints, we use triangulation of the
nodes as shown in Fig. 2 (b). This gives us the base skeleton. In our simulation
we have used Delaunay triangulation [9] between the nodes.
In the current work, we have utilized rectangular shaped CSG primitive of
various dimensions and union operation as boolean operator. After obtaining
the skeleton, some of the edges are replaced by rectangular bars. In Fig. 3 (a),
all the skeleton edges are replaced by bars of diﬀerent width and CSG union
of all such bars is taken to obtain the topology. Edges which are replaced by
bars and the width of the bars is controlled by optimization algorithm. It can be
noticed that the addition of width to each bar leads to material overlap between
bars corresponding to previously non-intersecting edges. Width of one bar may
completely overshadow another joint after union operation. We have done CSG
calculations using commercial software MATLAB alongwith utilizing its mesh
generator.
Fig. 3 (b) shows the resultant geometry. It can be observed that using only a
simple rectangular bar primitive various complex features and holes of diﬀerent
sizes can be obtained. It is possible that a small portion of the geometry may
go outside the box formed by the domain. Hence we use the CSG operation of
subtraction and any portion outside the domain is trimmed.
Next, meshing of the obtained geometry is done using CSG supporting mesh
generator and load and boundary conditions are applied. Post meshing, the 2-D
FEA calculation is done and it is found that the tip of the given geometry deﬂects
by 2.086 mm and occupies 62.83% volume. The connectivity between nodes can
also be visualized in the form of a connected graph between the numbered nodes

(a)
(b)
Fig. 2. (a) Fixed and variable nodes within domain (b) Delaunay triangulation of the
nodes.
which will be utilized for graph repair operator. ABAQUS software has been
used for ﬁnite element computation of nodal displacements.
In single-objective compliance minimization problems, the amount of mate-
rial available to form the optimum topology is limited. For example, a problem
may state to ﬁnd the optimum topology of a cantilever system shown in Fig.
1 (b) with minimum mean compliance using only 50% material. Hence volume
occupied by the topology acts as a constraint and any topology using more than
50% volume will be deemed infeasible. Initial trial runs in our study denoted that
many geometries tend to be infeasible, hence slowing the convergence of opti-
mization run. Specially when the optimization is near convergence, most of the
population members have volume close to 50% boundary and any new member
created with slight variation of bar width or node position may slightly increase
from the volume limit and would become infeasible. Hence a volume correction
operator is proposed to improve GA convergence.
(a)
(b)
Fig. 3. (a) Mechanism formed by replacing edges with bars of diﬀerent widths (b)
Geometry after meshing.
After the formation of ﬁnal geometry, the volume is calculated. If the volume
is above the constraint value (say 60%) the amount of deviation ϵ from constraint
is calculated. If ϵ ≤δ, all the width of bars are reduced by a ratio, such that
the ﬁnal topology satisﬁes the volume constraint. In our simulations, we have
taken δ = 15. The volume operator was found to be very eﬀective in improving
convergence time. After the volume correction, FE analysis is carried out on

feasible geometry. To illustrate the operator, we again take the same example
as shown in Fig. 3 (b). The topology volume was found to be 62.83% which
violated the constraint of 50%. The widths of all bars were reduced such that its
volume comes just below 50%. Fig.4 (a) shows the mesh of geometry with reduced
widths in original and deﬂected positions. The new geometry with volume 49.97%
satisﬁes the volume constraint and deﬂects by 2.972 units.
In the above methodology, the position of the nodes and the widths of the
bars are controlled by the optimization algorithm to give diﬀerent geometries.
If the width variable between two nodes is negative or the connection is absent
from the base skeleton, then the segment between those nodes is removed. Hence
the intersection of remaining segments gives the ﬁnal geometry. The beneﬁt of
removing connections depending on variable values is that some nodes can be
completely disconnected and very simple geometries can also be obtained. We
now discuss the repair operation to deal with inconsistent geometries.
(a)
(b)
Fig. 4. (a) Final deﬂected and original geometry after volume correction and FE anal-
ysis (b) Inconsistent geometry to demonstrate repair algorithm.
3
Graph based Geometry Repair
3.1
Discussion
The optimization algorithm initializes the variables randomly. It is possible that
many bars are absent such that the geometry formed after CSG union is discon-
nected or broken. A disconnected geometry can be formed in following ways:
– The point of application of load is not connected to the geometry
– The geometry is not connected to a ﬁxed nodes corresponding to point of
application of boundary conditions
– There are hanging sections in space, that is some section is not connected
to any node in main geometry
In any such scenario, the ﬁtness evaluation function must detect inconsis-
tent topology and take corrective actions before FE analysis. Otherwise, the FE
analysis will give error and optimization will prematurely terminate. Rejecting or

penalization of such broken geometries is also not desirable as it will reduce the
feasible geometries and many function evaluations may be wasted in each gener-
ation. Hence we have employed a graph theory approach for anomaly detection
and to take corrective action by repairing the geometry.
3.2
Repair algorithm
A brief overview of the algorithm is given below. Here the geometries are viewed
as graph of connected nodes. A group of interconnected nodes is termed as a set.
To ensure connected geometry between load and boundary conditions as well as
no disconnected section, the algorithm aims to form a single set containing all
the ﬁxed nodes. In case of absence of such a set, geometry is repaired by adding
minimum possible segments to form the connected set. Other disconnected sets
are eliminated.
Step 1 Find all Sets of interconnected nodes
Step 2 Find the sets containing ﬁxed nodes. These are termed Fixed Sets If
single such set exists, go to Step 7
Step 3 Using the initial triangulation data, ﬁnd the connectivity between each
pair of sets. A set ’A’ is connected to set ’B’ if any of its nodes is allowed to
be connected to any of the nodes of set ’B’ by triangulation
Step 4 Obtain the graph of connectivity between sets. Weight of connection
between two nodes is the length of the shortest segment which can connect
them
Step 5 Using BFS (Breadth ﬁrst search) from each set in the graph, ﬁnd the
minimum connections required to join all the Fixed Sets
Step 6 Add segment between the corresponding nodes between the sets to
form a single connected set
Step 7 Ignore all other sets and form the ﬁnal geometry using the Fixed Set
3.3
Repair Example
To illustrate the algorithm, an example of the broken geometry of a structure
is derived from the example in Fig. 3 by randomly removing some connections.
The broken geometry is shown in Fig. 4 (b). Here all the three ﬁxed nodes
are disconnected from each other and two disconnected bars are also present.
Using the algorithm, ﬁrst the graph of nodes is formed and each connected set is
identiﬁed as shown in Fig. 5. Eight diﬀerent Sets are marked in it of which the
ﬁrst three are the Fixed Sets. Fig. 6 (a) shows the connectivity between the eight
sets. Using BFS, the shortest path connecting the Fixed Sets is calculated and is
shown in the ﬁgure by bold lines. Once the pair of sets required to be connected
is recognized, the nodes connecting them with minimum segment length are
identiﬁed and ﬁnal geometry is repaired. Two corrections are required. After
applying the corrections, all other sets are ignored, hence all other disconnected
bars are eliminated from the ﬁnal topology. Fig. 6 (b) shows the two bar segments
added by the repair operator. The above algorithm ensures that even if a direct
connection between ﬁxed sets is not possible, still the shortest path is found
through some intermediate set. BFS from each set ensures no bias.

Fig. 5. Connectivity graph of nodes in broken geometry showing connected Sets
(a)
(b)
Fig. 6. (a) Graph of Sets connected by connections which were previously absent (b)
Segment added to repair geometry from graph.
4
Single-objective Evolutionary Optimization
We have used genetic algorithms (GAs) [10] to solve the resulting optimization
problem. The GA code was integrated with MATLAB CSG tool and ABAQUS
FEA solver to convert real variables to geometry, geometry to ﬁnite element
triangular mesh and ﬁnally after carrying the FEA analysis with given loads
and boundary conditions, reading the gene ﬁtness from FEA output ﬁle for every
function evaluation. From the discussions in Section 2, it can be seen that solving
any topology optimization problem would initially require the user to decide
on number of variable nodes. The ﬁxed nodes depend on problem information.
Hence, in a problem with m variable nodes and k ﬁxed nodes, the total number
of GA variables required will be 2 × m +
 m+k
2

. The 2 × m variables represent
the node positions and there variable bounds depend on domain boundary and
the
 m+k
2

represent the widths between each pair of numbered nodes.
In the current study we have solved a single-objective compliance minimiza-
tion problem using real-valued genetic algorithm. The initial population is gener-
ated randomly within the variable bounds speciﬁed. The next generation of the
population is computed using the ﬁtness of the individuals in the current gen-
eration. Binary tournament selection, SBX crossover and polynomial mutation
are used. The gene representing the m variable nodes is sorted with respect to
there x co-ordinates as shown in Fig. 3(b) and nodes are numbered sequentially.

Since the node numbering is decided on basis of x-coordinates, the widths
are also mapped accordingly. The crossover between the co-ordinates of node i
of parent A occurs with corresponding node i in parent B. Similarly the width
crossover between parent A and B genes would occur corresponding to a bar
between nodes (i, j) in both.
4.1
Case Study 1
(a)
(b)
Fig. 7. (a) Patches combination deﬁning the optimized solution by CSG union (b)
Optimized solution for the ﬁrst benchmark problem. Compliance 178.4 N-mm.
1
40
80
120
160
Best Fitness
Fig. 8. Variation of ﬁtness and mean volume with generations showing evolution of
geometry.
The test case considered is benchmark problem taken from [11] to compare
our methods with other existing methods in literature. The design domain and

boundaries for the compliance minimization problem was shown in Fig. 1 (b) for
a cantilever system. Here the domain is 120 mm × 40 mm and a point load of
100 N is applied at the end with material constraint V/V0 ≤0.5. The volume
fraction inequality constraint is V/V0 ≤0.5 and ﬁtness is reported in N-mm.
The material data for both benchmark test are E = 10 GPa and ν = 0.3
Three ﬁxed nodes have been taken and nine variable nodes. Hence the total
number of real variables are 84. A population size of 40 is taken and GA is run
for 200 generations. The optimized solution for benchmark test using CG-TOM
has been shown in Fig.7 (b). Reference [11] compares diﬀerent methods and
ﬁltering schemes for compliance minimization on this domain. It reports 179.1
N-mm mean compliance as the minimum value. The ﬁtness obtained using our
proposed CG-TOM is 178.4 N-mm, which is better. Fig. 7 (a) shows the primitive
bars that combine to form this optimized solution.
The progress of optimization can be observed by analyzing the improvement
of ﬁtness with each generation. In Fig. 8 the variation of ﬁtness of best population
member is shown with generations. Mean volume of entire population is also
calculated for each generation and plotted. It can be seen that although the
problem has inequality constraint, the volume of entire population lies near the
constraint boundary. The sharp dip in volume is explained by the usage of volume
repair operator which helps the population members to remain feasible.
To get a further insight into the evolution of design, we look at the best
population members after each interval of 40 generations in Fig. 8 during the
optimization process. It can be visually seen that GA recognizes the optimum
geometry shape quickly (at around 40 generations) and thereafter small shape
variations of bar shape slowly lead to the optimized solution. It can also be seen
that the position of nodes gets ﬁxed quickly deﬁning the basic skeleton that
ﬁnally forms the optimal solution.
4.2
Case Study 2
(a)
(b)
Fig. 9. (a) Domain for the second benchmark problem (b) Optimized symmetrical
solution for the second benchmark problem.

(a)
(b)
Fig. 10. (a) Original and deﬂected geometry for optimized solution in ABAQUS soft-
ware (b) Geometry similar to optimum solution in [7] re-created using CG-TOM
method for comparison.
The domain of second benchmark problem is shown in Fig. 9(a). For this
compliance minimization problem with volume constraint V/V0 ≤0.5, a sym-
metric loading of 100 N force is applied on a domain ﬁxed at two corners. The
domain dimensions are 80 mm × 40 mm.
The problem has symmetrical loading and boundary conditions, hence the
resultant optimized geometry will also be symmetric. CG-TOM is modiﬁed to
impose symmetry within variable representation itself by taking mirror image of
nodes and widths about the line of symmetry. Three ﬁxed nodes have been taken
in our method and only four variable nodes. Hence although total 11 nodes will
represent the geometry, the position of only 4 nodes needs to be optimized. A
population size of 40 is taken and GA is run for 200 generations.
The optimized solution for benchmark test using symmetrical CG-TOM has
been shown in Fig.9(b) and Fig.9(b) shows the original and deﬂected geometry.
The ﬁtness obtained by CG-TOM is 8.03 N-mm after 200 generations. To further
verify the method, we analyzed the optimum solution reported in [7]. A minimum
compliance of 9.83 N-mm is reported for the same problem. Using symmetrical
CG-TOM method with four variable nodes, a visually similar solution (exact
dimensions were not available) to there optimum solution was generated as shown
in Fig.10(b). The ﬁtness calculated using our method for this geometry was 9.82
N-mm which was close to the reported ﬁtness of 9.83 N-mm of original geometry
in [7]. This veriﬁed the FEA calculations of the proposed method.
5
Conclusion
The current work has proposed a new GA-based procedure for topology op-
timization. In the current work, the proposed approach (CG-TOM) has used
simple rectangular primitives for compliance minimization problem test cases.
Improvement in compliance value is reported for two existing studies on test
problems. The current work opens up many possibilities of usage of CSG tech-
niques for topology optimization and inverse ﬁnite element problems by inte-
grating CSG modelling technique with optimization. Further research should

focus on post-processing to obtain smooth geometries, extension of method to
three-dimensional problems using 3-D primitives and proposing more eﬃcient
GA algorithms to give optimized solutions within a low yet ﬁnite budget of
function evaluations.
References
1. G.I.N. Rozvany. A critical review of established methods of structural topology
optimization. Structural and Multidisciplinary Optimization, 37(3):217–237, 2009.
2. M.P. Bendsøe and O. Sigmund. Topology optimization: theory, methods, and ap-
plications. Springer Verlag, 2003.
3. M.J. Jakiela, C. Chapman, J. Duda, A. Adewuya, and K. Saitou.
Continuum
structural topology design with genetic algorithms. Computer Methods in Applied
Mechanics and Engineering, 186(2):339–356, 2000.
4. K. Tai, G.Y. Cui, and T. Ray. Design synthesis of path generating compliant mech-
anisms by evolutionary optimization of topology and shape. Journal of Mechanical
Design, 124:492, 2002.
5. C. Mattheck and S. Burkhardt. A new method of structural shape optimization
based on biological growth. International Journal of Fatigue, 12(3):185–190, 1990.
6. OM Querin, GP Steven, and YM Xie. Evolutionary structural optimisation (eso)
using a bidirectional algorithm. Engineering Computations: Int J for Computer-
Aided Engineering, 15(8):1031–1048, 1998.
7. B. Bochenek and K. Tajs-Zieli´nska. Novel local rules of cellular automata applied
to topology and size optimization. Engineering Optimization, 44(1):23–35, 2012.
8. E. Kita and T. Toyoda. Structural design using cellular automata. Structural and
Multidisciplinary Optimization, 19(1):64–73, 2000.
9. M. De Berg, O. Cheong, and M. Van Kreveld. Computational geometry: algorithms
and applications. Springer-Verlag New York Inc, 2008.
10. D.E. Goldberg. Genetic algorithms in search, optimization, and machine learning.
Addison-wesley, 1989.
11. S. Xu, Y. Cai, and G. Cheng. Volume preserving nonlinear density ﬁlter based on
heaviside functions. Structural and Multidisciplinary Optimization, 41(4):495–505,
2010.

