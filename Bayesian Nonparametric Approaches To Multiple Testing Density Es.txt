University of South Carolina
Scholar Commons
Theses and Dissertations
6-30-2016
Bayesian Nonparametric Approaches To Multiple
Testing, Density Estimation, And Supervised
Learning
William Cipolli III
University of South Carolina
Follow this and additional works at: https://scholarcommons.sc.edu/etd
Part of the Arts and Humanities Commons, and the Statistical Models Commons
This Open Access Dissertation is brought to you by Scholar Commons. It has been accepted for inclusion in Theses and Dissertations by an authorized
administrator of Scholar Commons. For more information, please contact dillarda@mailbox.sc.edu.
Recommended Citation
Cipolli, W.(2016). Bayesian Nonparametric Approaches To Multiple Testing, Density Estimation, And Supervised Learning. (Doctoral
dissertation). Retrieved from https://scholarcommons.sc.edu/etd/3379

Bayesian Nonparametric Approaches to Multiple Testing, Density
Estimation, and Supervised Learning
by
William Cipolli III
Bachelor of Science
Quinnipiac University 2011
Bachelor of Arts
Quinnipiac University 2011
Master of Science
University of South Carolina 2014
Submitted in Partial Fulﬁllment of the Requirements
for the Degree of Doctor of Philosphy in
Statistics
College of Arts and Sciences
University of South Carolina
2016
Accepted by:
Timothy E. Hanson, Major Professor
Brian Habing, Committee Member
Joshua M. Tebbs, Committee Member
Alexander C. McLain, Committee Member
Lacy Ford, Senior Vice Provost and Dean of Graduate Studies

c⃝Copyright by William Cipolli III, 2016
All Rights Reserved.
ii

Acknowledgments
Firstly, and most importantly, I thank my advisor Tim Hanson. It is diﬃcult to
explain how enjoyable it has been to work under him. Even though we have completed
research on challenging, rich problems - which I will admit sometimes took me longer
to grasp than it should have - he was steadfast in ensuring I got through any brick
walls I ran into. He fundamentally cares and helped push me in the direction of
gathering exciting developments and presenting those results in a clear and honest
manner. Tim’s generosity, humor and patient guidance have been invaluable during
my time at the University of South Carolina. Simply put, I could not have asked for
a better PhD advisor.
Many of these statements are echoed for the other members of the Statistics
department here at the University of South Carolina. I joined University of South
Carolina because it seemed like a rigorous program that placed a strong value on
community; I was not disappointed and I look forward to keeping in touch and coming
back to visit often. I especially want to single out the three other members that make
up my committee: Josh Tebbs, Brian Habing and Alex McLain.
I remember emailing Josh a few weeks before receiving my letter of acceptance and
frequently thereafter as I decided to come here. Josh’s advice then, and throughout
my time in the department, has been paramount to my success; you can only hear
that your notation is horrible so many times before you get it right. After taking
two courses in my ﬁrst year with Josh, I am happy he has continued to guide my
scholarship; he has undeniably inﬂuenced my graduate career in an immensely positive
way. I am proud, however, that I have returned the favor - I’ve taught him everything
iii

he knows when it comes to squash!
Brian’s humor belies his depth of knowledge and his ability to complete really
interesting projects but makes interacting with him and sitting in his courses very
enjoyable. It was in Brian’s class that I ﬁrst got the ﬂavor of academic writing; what
I learned in that course helped me write many pages of this dissertation. He has also
endured many conversations about teaching and testing which have been remarkably
productive for me and my teaching pedagogy.
Alex has provided me with invaluable knowledge, guidance and insight particularly
on the second chapter of this dissertation. His ideas will likely lead to at least one
more paper on the multiple testing subject and his writing tips were a big help in
making this register at all on a scale of one to ten on readability.
Finally, I suppose I would be remiss if I did not thank the staﬀand owner of Cool
Beans in Columbia for tolerating my often loud presence at least once a day (and
sometimes much more than that) for the past four years; their coﬀee kept me going.
Looking back, I wish that I had spent time making the acknowledgments one
hundred times longer and cutting out the rest of the dissertation so I could pro-
portionately show my thanks and appreciation for the faculty, colleagues, students,
friends and family that have supported me along the way. Thank you!
iv

Abstract
This dissertation presents methods for several applications of Polya tree models.
These novel nonparametric approaches to the problems of multiple testing, density
estimation and supervised learning provide an alternative to other parametric and
nonparametric models. In Chapter 2, the proposed approximate ﬁnite Polya tree
multiple testing procedure is very successful in correctly classifying the observations
with non-zero mean in a computationally eﬃcient manner; this holds even when the
non-zero means are simulated from a mean-zero distribution. Further, the model
is capable of this for “interestingly diﬀerent” observations in the cases where that
is of interest. Chapter 3 proposes discrete, and smoothed approximate mixtures of
Polya trees for application in mixed models and density estimation. Finally, Chapter
4 proposes a supervised learning procedure based on marginal, multivariate ﬁnite
Polya trees.
This approach is successful in correctly classifying observations in a
variety of scenarios where the ten-fold cross validation was kept low. The proposed
methodologies and applications show the versatility and ﬂexibility of nonparametric
Polya tree based methods and Chapter 5 outlines some obvious but rich extensions
for future research.
v

Table of Contents
Acknowledgments
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
iii
Abstract . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
v
List of Tables . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
viii
List of Figures . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
ix
Chapter 1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . .
1
1.1
Dirichlet Process
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
4
1.2
Polya Trees
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
7
Chapter 2
Bayesian Nonparametric Multiple Testing . . . . . . .
12
2.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
12
2.2
Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
16
2.3
Discrete Approximation to Simplify Posterior Updating . . . . . . . .
21
2.4
Deconvolution with Known Variances . . . . . . . . . . . . . . . . . .
23
2.5
Error Rates . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
24
2.6
Simulations
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
27
2.7
Data Analyses . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
35
2.8
Java Applet . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
38
vi

2.9
Conclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
40
2.10 Acknowledgements
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
41
Chapter 3
Computationally Tractable Approximate and Smoothed
Polya Tree . . . . . . . . . . . . . . . . . . . . . . . . . .
42
3.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
42
3.2
Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
45
3.3
Illustrations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
53
3.4
Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
63
Chapter 4
Supervised Learning using the Polya Trees
. . . . . .
65
4.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
65
4.2
Literature Review . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
68
4.3
Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
79
4.4
Illustrations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
82
4.5
Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
93
Chapter 5
Future Work . . . . . . . . . . . . . . . . . . . . . . . . .
94
5.1
Improved Bayesian Multiple Testing . . . . . . . . . . . . . . . . . . .
94
5.2
Improved Classiﬁcation and Prediction . . . . . . . . . . . . . . . . .
96
Chapter 6
Conclusion . . . . . . . . . . . . . . . . . . . . . . . . . .
98
Bibliography
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
100
vii

List of Tables
Table 2.1
Errors calculation for multiple hypothesis tests . . . . . . . . . . .
26
Table 2.2
Errors summary over one hundred simulations for G1; MNR is
the mean number of rejections. . . . . . . . . . . . . . . . . . . . .
28
Table 2.3
Errors summary over one hundred simulations for G2. . . . . . . .
29
Table 2.4
Errors summary over one hundred simulations for G3. . . . . . . .
29
Table 2.5
Errors summary over one hundred simulations for G1 with known
variance, m = 10, 000, κ = 1, J = 5 and c random under Ti1;
MNR is the mean number of rejections. . . . . . . . . . . . . . . .
31
Table 2.6
Errors summary over one hundred simulations for G1 with known
variance, κ = 1, J = 5 and c random under Ti1. . . . . . . . . . . .
32
Table 2.7
Errors summary over one hundred simulations for G1 with known
variance, κ = 1 and c random under Ti1. . . . . . . . . . . . . . . .
33
Table 2.8
Errors summary over 100 simulations for G1 with known variance
analyzed under the common variance assumption for J = 5 and
c ﬁxed at 100, 000 under Ti1; MNR is the mean number of rejections. 33
Table 3.1
Median L1 and LPML summary over 100 simulations for n = 100
and n = 500 with a 90% interval. . . . . . . . . . . . . . . . . . . .
59
Table 3.2
SEER Louisiana breast cancer survival in months. Est. is pos-
terior mean, s.d.
is posterior standard deviation, and AF is
acceleration factor for SAPT model. Est. and s.e. are estimates
and standard error from Buckley and James (1979) approach. . . .
63
Table 4.1
Numerical summaries for the feature set.
. . . . . . . . . . . . . .
83
Table 4.2
Errors for cross validation classiﬁcation. . . . . . . . . . . . . . . .
92
viii

List of Figures
Figure 1.1
Dirichlet process sample from N(0, 102) along with the Gaus-
sian CDF. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
6
Figure 1.2
Dirichlet process draw from the N(0, 102) cumulative distribu-
tion function. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
7
Figure 1.3
Depiction of tree structure from Ferguson (1974). . . . . . . . . .
9
Figure 1.4
Polya tree sample from N(0, 102) along with the Gaussian CDF. .
10
Figure 1.5
Polya tree draw from the N(0, 102) cumulative distribution function. 10
Figure 1.6
Depiction of tree structure from in two dimensions. . . . . . . . .
11
Figure 2.1
Graph of Gaussian pdf with Polya tree partitions and example
highlights for pY(k = 11).
. . . . . . . . . . . . . . . . . . . . . .
20
Figure 2.2
The ﬁrst two columns show simulation results for G1, G2 and
G3 using the nonparametric approach and the last two columns
show Scott and Berger (2006) results for the same data. The
dotted densities are the true densities of the non-zero means and
the solid density with the gray band is the estimated density
with the 90 percent conﬁdence band. . . . . . . . . . . . . . . . .
30
Figure 2.3
Density estimates over diﬀerent values of ˆp are the solid density
estimates and density estimate with no prior on w is the dotted
estimate. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
31
Figure 2.4
Plots of FDR (left), FNR (middle) and power (right) over vary-
ing values of w for G4. . . . . . . . . . . . . . . . . . . . . . . . .
34
Figure 2.5
Density estimates over diﬀerent values of ˆp are the solid density
estimates and density estimate with no prior on w is the dotted
estimate. The density estimate from Sun and McLain (2012) is
represented by the dashed density estimate.
. . . . . . . . . . . .
36
ix

Figure 2.6
Screenshot of the Java application with results . . . . . . . . . . .
39
Figure 3.1
The 32 smoothing kernels for J = 5, a standard Gaussian den-
sity (dashed), and g(x|0, 1, Y, 1) with Yj,k = 0.5. (solid) . . . . . .
52
Figure 3.2
Log odds ratios with 95% CIs for the 39 studies. Vertical lines
are posterior median and 95% CI for µ from the APT model. . . .
54
Figure 3.3
Empirical armadillo kill rates yi/Ni versus age ai for the 38 Ache
hunters. Superimposed is the ﬁtted kill rate from the random
intercept APT Poisson model. . . . . . . . . . . . . . . . . . . . .
56
Figure 3.4
Four densities estimated using the MPT, DPM and APT ap-
proaches, n = 100.
. . . . . . . . . . . . . . . . . . . . . . . . . .
60
Figure 3.5
Four densities estimated using the MPT, DPM and APT ap-
proaches, n = 500.
. . . . . . . . . . . . . . . . . . . . . . . . . .
61
Figure 3.6
Galaxy data histogram and density estimates across models. . . .
62
Figure 4.1
Polya tree partitions in R2 for data uniformly distributed on
the unit square centered at the origin . . . . . . . . . . . . . . . .
80
Figure 4.2
Bivariate scatterplots and correlations for the data. . . . . . . . .
83
Figure 4.3
Classiﬁcation maps for various methods for n=500.
. . . . . . . .
85
Figure 4.4
Bivariate density estimates for the two classes across samples
sizes. Top left, top right, bottom left and bottom right show
density estimates for both bivariate distributions for n = 50, 250, 500,
and 1000 respectively.
. . . . . . . . . . . . . . . . . . . . . . . .
86
x

Chapter 1
Introduction
The split between frequentists and Bayesians is, mainly, that the frequentists set
the parameters of interest as ﬁxed and Bayesians view parameters probabilistically
with some prior information. Consider the task of calculating a conﬁdence interval
for a population parameter. Frequentists build their methodology and design their
experiment based on the idea that the parameter of the model is ﬁxed, taking on one
and only one value, and to ensure a certain proportion, say .95, of repeated trials
would yield a conﬁdence interval that contains the true parameter’s value.
Bayesians build their methodology and design their experiment based on the idea
that the value of the parameter is ﬁxed but whose plausible values can be reﬂected
by some probability distribution deﬁned by the prior information. Bayesian method-
ologies instead use the prior information and data to report the most likely values
of the parameter given the two sources of information available. One of the reasons
Bayesian approaches have become so popular among statisticians is because it allows
us to use an expert’s beliefs about the quantity of interest before modeling the data.
If these beliefs are accurate, using the Bayesian approach allows us to amalgamate
the data and these prior beliefs to create a model that uses the “full picture.” In the
absence of prior information Bayesian approaches are still useful as Bayesian mod-
els can ﬁt certain models that are diﬃcult or impossible for frequentists while using
“noninformative" priors.
Both the Bayesian and frequentist approaches include parametric models. With
parametric models we assume the data come from a particular underlying probability
1

distribution function, most infamously the Gaussian distribution. The parameters,
i.e. mean and standard deviation, of the assumed probability distribution are gener-
ally of interest. If our assumptions about the underlying probability distribution are
good the parametric approach works quite nicely but if the data deviate from that
distribution greatly the parametric approaches may yield incorrect analyses.
Nonparametric approaches diﬀer by not specifying the structure of the model but
letting the data select the distribution from an inﬁnite, highly ﬂexible class, thus
potentially mitigating the misspeciﬁcation of the underlying distribution. These non-
parametric methodologies allow statisticians to ﬁt very ﬂexible models by relaxing the
usual parametric assumptions that are imposed in the usual parametric approaches,
like the ubiquitous Gaussian assumption. Nonparametric tests, however, are not al-
ways the magic answer. Although nonparametric tests make less assumptions and
are able to ﬁt ﬂexible models, nonparametric approaches are often less powerful and
more diﬃcult to interpret than their parametric counterparts, particularly when the
parametric assumptions are very accurate. Although not always the best choice, non-
parametric statistics oﬀer us a solution in cases where the parametric assumptions
fail.
Bayesian nonparametric approaches have increasingly attracted much theoretical
and application research in the statistical and computer science ﬁelds due to expo-
nential advances in computation which makes ﬁtting these complex models feasible.
These techniques, that enjoy the beneﬁts of both the Bayesian and nonparametric
approaches, are then utilized across many other disciplines to push forward solutions
to many of the world’s complex problems.
In the following dissertation proposal, the nonparametric Polya tree is used as a
prior to create a ﬂexible Bayesian approach to several existing statistical problems,
including multiple testing, meta-analysis, GLMM, density estimation and classiﬁca-
tion. The ﬂexibility provided by the nonparametric approach of the Polya tree allows
2

for methodologies that are robust to the usual Gaussian assumption while simultane-
ously being Bayesian which adds the ability of updating the posteriors of, and making
inference about, key values in the model.
Chapter 2 oﬀers a multiple testing procedure in which a discrete approximation
to a Polya tree prior, centered at the usual Gaussian distribution, is proposed which
enjoys fast, conjugate updating.
The model is employed to analyze data from a
mixture model.
This new technique has been remarkably successful in correctly
identifying units to be rejected in the multiple testing phase, as well as estimating the
non-null distribution. These methods are demonstrated using extensive simulation
and real data analysis accompanied by a Java web application.
Chapter 3 continues with the discrete approximation to a Polya tree prior and
introduces two applications in nonparametric meta-analysis and random intercept
Poisson regression, as well as a smoothed mixture of Polya trees that attempts to
improve the usual mixture of Polya trees model that often suﬀers the disadvantages
of yielding quite spiky density estimates. These methods are demonstrated using
several real data analyses in which the results are compared to the usual mixture of
Polya trees and Dirichlet process mixture models with some success.
Chapter 4 explores the problem of classiﬁcation in which the nonparametric ap-
proach of the multivariate Polya tree realizes impressive results in simulations and
real data analyses; performing similarly to or better than current approaches in many
cases. The ﬂexibility gained from eliminating certain distributional assumptions from
the model can greatly improve the ability to correctly classify new observations, as
even minor deviations from distributional assumptions could lead to missing an im-
portant feature in any one level’s density. The proposed method is quite fast compared
to other supervised classiﬁers and very simple to implement as there are no kernel
tricks or initialization steps that greatly aﬀect the model, like the kernel trick for
SVM.
3

1.1
Dirichlet Process
1.1.1
Introduction to the Dirichlet Process
The Dirichlet distribution can be thought of as the multivariate generalization of
the beta distribution and as the beta distribution is a conjugate prior for the bino-
mial, the Dirichlet distribution is a conjugate prior for the multinomial distribution.
Note that the beta distribution is the special case of a Dirichlet distribution for two
dimensions.
Let p = (p1, . . . , pk)′ be the vector of probabilities for k diﬀerent classes from a
multinomial experiment where each pi ∈(0, 1) and ||p||1 = 1. Consider a Dirichlet
prior on p, i.e. p ∼DP (α1, . . . , αk) , where each αi ∈R+ and k ≥2. The Dirichlet
process is conjugate, so given observations x = (x1, . . . , xk)′ the posterior is p|x ∼
DP (α1 + x1, . . . , αk + xk). The Dirichlet distribution is a distribution of probabilities
on a simplex, and therefore a distribution over probabilities for class random variables.
The Dirichlet process introduced by Blackwell (1973) is also considered a distri-
bution over distributions. Let G be a Dirichlet process, i.e. G ∼DP(α, G0) with
base distribution G0 and positive scaling parameter α. The Dirichlet process, G, is
then a probability measure that has the same support as G0.
There is a profound diﬀerence between G and G0. G is a discrete distribution made
up of countable point masses and G0 may be any probability measure, continuous,
discrete, or mixed. This diﬀerence has consequence, the fact that G is constructed to
give discrete distributions with probability one (Ferguson, 1973) makes it unsuitable
for general applications in nonparametrics, however it is well suited for the problem of
placing priors on mixtures to provide an estimate of the particular number of mixture
components as its relationship to the multinomial suggests.
4

1.1.2
Sampling from a Dirichlet Process
The issue of the Dirichlet process yielding discrete distributions with probability
one is clear in the case of sampling. Random sampling from the Gaussian distribution
yields unique samples, i.e. the probability that two samples are equal is zero. However
since the Dirichlet process, G, is a discrete distribution this probability that two
samples are equal is non-zero.
Sampling from a Dirichlet process, according to the “stick-breaking" construction
of Sethuraman (1994), with α = α0 and G0 = N(0, 102) can be completed using
the following steps. Simulate random variables β1, β2, . . . from a beta distribution
with shape parameters a = 1 and b = α0. Let p be an n-dimensional vector so
that p1 = β1 and pi = βi
Qi−1
j=1(1 −βj). Simulate random variables θ1, θ2, . . . from a
Gaussian distribution with µ = 0 and σ2 = 102. Then X can be sampled discretely
from θ1, θ2, . . . with probabilities β1, β2, . . . respectively.
Suppose G0 is a Gaussian distribution, i.e.
G ∼DP(α, N(0, 102)).
We can
sample from the Dirichlet process which provides a discrete sample from the baseline
distribution G0. Figure 1.1 is a plot of the baseline G0 along with one draw from a
Dirichlet process with α = 2, where the stick breaking was truncated to one hundred
pieces.
1.1.3
Dirichlet Process Mixture Models and the Chinese Restaurant Process
Consider an empty Chinese restaurant with an unbounded number of tables. The
ﬁrst customer, X1, enters the restaurant and sits down at a table, θ1. Then a second
customer X2 enters the restaurant and sits down at the same table, θ1, with probabil-
ity α/(1 + α) or at a new table θ2 with probability 1/(1 + α). This continues yielding
the generalization for the nth customer entering the restaurant who will sit at a new
table with probability with probability α/(n + α) and sits at already occupied table
θk with probability nk/(1 + α) where nk is the number of customers sitting at table
5

Figure 1.1: Dirichlet process sample from N(0, 102) along with the Gaussian CDF.
θk.
The Chinese Restaurant Process (Aldous, 1985; Pitman, 2002), which gets its
name from the metaphor above, has enjoyed much research and application in recent
years as it has many desirable properties. The more data points there are at a cluster,
the more likely it is that new data points will be assigned to that cluster but there’s
always a small probability that it can initiate its own, entirely new cluster. The choice
of α is important here; a larger selection of α leads to more clusters and a smaller
selection of α leads to less.
As seen in the Chinese Restaurant process, the Dirichlet process allows for an
unspeciﬁed, and perhaps countably inﬁnite, number of clusters. The same logic is ex-
tended to mixture models as explored by Antoniak (1974), Escobar and West (1995),
and Rasmussen (1999). In traditional mixture modeling one must specify the number
of clusters before analysis can begin; this Bayesian nonparametric approach, however,
is ﬂexible when it comes to this and uses the data to decide how many clusters should
be required.
Recall that Dirichlet processes are constructed to give discrete distributions with
probability one which is undesirable in many applications. The idea behind Dirichlet
6

process mixtures is to mitigate this concern by using a more complex model by
convoluting G with a known kernel for smoothing. A Dirichlet process mixture does
quite well in ﬁtting the same G0 = N(0, 102) as seen in Figure 1.2 using just a random
sample of n = 50 points drawn from G0; even though the Dirichlet process is discrete,
this Dirichlet process mixture model does provide a smooth estimate.
Figure 1.2: Dirichlet process draw from the N(0, 102) cumulative distribution func-
tion.
This methodology has been very popular in the ﬁeld of Bayesian nonparametrics
for hierarchical modeling (Blei et al., 2004; Teh et al., 2005), clustering (Qin, 2006),
natural language processing (Blei et al., 2010), modeling sequential data and network
data (Blei and Frazier, 2011), etc.
1.2
Polya Trees
1.2.1
Introduction to the Polya Tree
Dirichlet process and mixtures of Dirichlet processes have yielded much research,
extension and application over the last several years. The Dirichlet process, as noted
above, has several desirable qualities, particularly for clustering, but the Dirichlet
process is constructed to give discrete distributions with probability one; this is prob-
7

lematic in cases where the data is best modeled in a continuous setting, noting that
in the discrete case we expect to see observations repeat.
A prior class that includes the Dirichlet process as a special case is the Polya
tree prior (Lavine, 1992); Polya trees generalize the Dirichlet process by allowing the
positive mass on the set of continuous distributions. The Polya tree prior was initially
summarized by Ferguson (1974) who discusses its construction as a prior distribution
for use in deriving Bayesian decision rules in the nonparametric setting. Speciﬁcally,
Ferguson (1974) explains the dyadic tree structure that splits the support on the
real line by subsequent binary splits as depicted in Figure 1.3 for data uniformly
distributed on (0, 1] where Yj,k is the probability of seeing an observation on partition
k at level j. In the next chapter we deﬁne this partitioning scheme for Gaussian
distributed data in the context of multiple testing.
All Yj,· are required to be independent between rows (Ferguson, 1974) and Yj,2k =
1 −Yj,2k−1 for k, the set of odd numbers from 1 to 2j −1. Each Yj,2k−1 is drawn
independently from beta distributions whose parameters depend on the number of
observations that fall in each piece of subsequent partitions at level j+1, i.e. Yj,2k−1 ∼
beta(αj,k, βj,k); more details on choosing α and β are provided in the diﬀerent applica-
tions that follow. The probability of being on any interval a is then the product of the
Yj,k passed on the path to interval a; i.e. continuing with the example in Figure 1.3:
p{(7/8, 1]} = Y1,2Y2,4Y3,8. It should be noted that the partition sets decrease to ∅as J
approaches inﬁnity and this allows the probability, deﬁned as a product, to converge
to zero with probability one when α and β are appropriately selected. Mauldin et al.
(1992) provide conditions where the Polya tree is continuous or absolutely continuous
with probability one.
Polya trees have desirable attributes for a prior in that they are conjugate and
easily updated (Ferguson, 1974). Speciﬁcally, Lavine (1992) explains that a Polya
tree prior can be drawn out by questions about Yj,k and shows that the predictive
8

(0, 1]
(0, 1
2]
(0, 1
4]
(0, 1
8]
Y3,1
(1
8, 1
4]
Y3,2
Y2,1
(1
4, 1
2]
(1
4, 3
8]
Y3,3
(3
8, 1
2]
Y3,4
Y2,2
Y1,1
(1
2, 1]
(1
2, 3
4]
(1
2, 5
8]
Y3,5
(5
8, 3
4]
Y3,6
Y2,3
(3
4, 1]
(3
4, 7
8]
Y3,7
(7
8, 1]
Y3,8
Y2,4
Y1,2
Figure 1.3: Depiction of tree structure from Ferguson (1974).
and posterior distributions can be set up such that one can choose the predictive
distribution of the Polya tree. An issue that arises with the Polya tree prior is that
the posteriors suﬀer from discontinuities at the partition end points.
Let G be a Polya tree, i.e. G ∼PT(c, J, G0) with base distribution G0 and positive
parameter c which controls how “close" the Polya tree is to the baseline distribution.
Comparing to the result from the Dirichlet process in Figure 1.1, consider G0 to be
Gaussian, i.e. G ∼PT(c, J, N(0, 102)). A draw from a Polya tree with J = 10 and
c = 1 can be seen in Figure 1.4; compared to the draw from the Dirichlet process it
is clear that the Polya tree provided a larger variety of sample values.
A solution to the issue of discontinuities at the partition end points is to extend
the Polya tree to a mixture of Polya trees by considering a Polya tree with a random
centering distribution. With mixtures of Polya trees the dependence on the partitions
is mitigated by smoothing out the partition discontinuities and the updated Polya tree
aﬀords continuous predictive distributions. This idea is not dissimilar to extension
of the Dirichlet process to the Dirichlet process mixture model above. Lavine (1994)
explores using the Polya tree and mixtures of Polya trees in place of Dirichlet processes
and Dirichlet process mixture models in applications including statistical modeling,
9

Figure 1.4: Polya tree sample from N(0, 102) along with the Gaussian CDF.
modeling errors in regression problems and empirical Bayes problems with much
success. A mixture of Polya trees model does quite well in ﬁtting the same G0 =
N(0, 102) as seen in Figure 1.5 using just a random sample of n = 50 points drawn
from G0.
Figure 1.5: Polya tree draw from the N(0, 102) cumulative distribution function.
10

(−1
2 , 1
2] × (−1
2 , 1
2]
(0, 1
2] × (0, 1
2]]
Y1,1
(−1
2 , 0] × (0, 1
2]
Y1,2
(−1
2 , 0] × (−1
2 , 0]
Y1,3
(0, 1
2] × (−1
2 , 0]
Y1,4
Figure 1.6: Depiction of tree structure from in two dimensions.
1.2.2
Multivariate Polya Trees
Polya trees are easily extended to the multivariate case by simply deﬁning a similar
but d-dimensional partitioning structure, depicted in Figure 1.6 for data uniformly
distributed on the unit square (−1
2 , 1
2] × (−1
2 , 1
2]. In the third chapter we deﬁne this
partitioning scheme for d-dimensional Gaussian distributed data in the context of
supervised learning classiﬁcation.
Note that the beta distributed probabilities Y
become Dirichlet and that Figure 1.6 shows that keeping track of the partitioning
sequences becomes increasingly diﬃcult as dimensionality increases. Jara et al. (2009)
propose a convenient indexing that is demonstrated in Chapter 3.
Paddock et al. (2003) introduced a randomized multivariate Poyla tree which is
smoothed over partitions using a random “jitter;" Hanson (2006), rather, introduced a
location-scale mixture of Polya trees which directly generalizes the univariate mixture
of Polya trees; Hanson et al. (2008) used multivariate Polya trees to model receiver
operating characteristic (ROC) curves for evaluating diagnostic test accuracy; Jara
et al. (2009) proposed using multivariate Polya trees in generalized linear mixed eﬀect
models to remedy the case when the assumption that random eﬀects terms follow a
multivariate Gaussian distribution is faulty; Hanson et al. (2011) developed a simple,
computationally cheap sampling method for exploring multivariate densities.
For
more, Müller and Rodriguez (2013) provide a nice summary of various versions of
Polya trees.
11

Chapter 2
Bayesian Nonparametric Multiple Testing
Multiple testing, or multiplicity problems often require testing several means with
the assumption of rejecting infrequently, as motivated by the need to analyze DNA
microarray data.
The goal is to keep the combined rate of false discoveries and
non-discoveries as small as possible. A discrete approximation to a Polya tree prior
that enjoys fast, conjugate updating, centered at the usual Gaussian distribution is
proposed. This new technique and the advantages of this approach are demonstrated
using extensive simulation and data analysis accompanied by a Java web application.
The numerical studies demonstrate that this new procedure shows promising false
discovery rate and estimation of key values in the mixture model with very reasonable
computational speed.
2.1
Introduction
In the DNA microarray setting, multiple testing problems often require testing
multiple hypotheses H0: θi = 0. The θi measurements can contain a range of values,
both positive and negative, and the goal is to detect the |θi| that are large enough
to reject H0: θi = 0.
Initially we consider yi, i = 1, . . . , n such that each yi is
independently Gaussian distributed with mean θi and ﬁxed, unknown variance σ2,
as considered by Scott and Berger (2006); we follow with a model that accounts for
known variances σ2
i , as considered by Sun and McLain (2012).
Two tasks are considered while testing H0: θi = 0: the task of ﬁnding θi that are
diﬀerent from zero, and that are “interestingly diﬀerent” from zero. In the DNA mi-
12

croarray setting, often yi are diﬀerence measurements of gene expression in two states
where low diﬀerences are of little interest; scientists often consider genes that show
at least two-fold change in expression levels to be diﬀerentially expressed, meaning
observations with large deviations from the null are sought. It is important to distin-
guish that the proposed model facilitates hypothesis tests that θi are diﬀerent from
zero, but we provide adapted methodology to answer the question of “interestingly
diﬀerent” observations.
2.1.1
Biological Motivation
A living organism’s basic make up is due to its genome for all plants, animals and
humans. Genomes are comprised of one or many strands of DNA. Each living species,
and the individual variations within those species, are deﬁned through the details of
DNA. A single cell of a living organism contains at least one copy DNA which is
organized into chromosomes; humans have twenty three pairs of chromosomes, most
famously the paired X and Y sex chromosomes. The chromosomes, which make up
DNA, contain regions called genes that are involved in the production of proteins;
each chromosome can contain a diﬀerent collection of genes.
Genes are important to medical research due to their role in the production of
proteins which make up the entirety of organisms by controlling replication, form and
mutation. When you look at a human, for instance, everything you see consists of
protein: hair, skin, eyes, etc. The rate of cell production is also controlled by genes
so the regeneration of skin cells and hair growth etc. are also attributed to genes.
Sometimes, though rarely, a genetic mutation can cause a disease like Progeria which
causes accelerated aging as illustrated in the 1996 ﬁlm Jack starring the late Robin
Williams.
The eﬀect that genes have on protein production, and consequently an organism’s
properties, make their inﬂuence important. It is often desired to know the diﬀerence of
13

gene expression, or activity, in diﬀerent stages; as the levels of gene expression vary,
the production of protein they manufacture may change possibly yielding physical
abnormalities. Perhaps the most infamous example is when cells grow and divide at
an abnormal pace creating growths within the body; many times these growths are
benign, a non-cancerous growth, and other times they are metastasized, a cancerous
growth. In much of cancer research, expression values of genes that regulate cell
growth are important - both in susceptibility determination (van ’t Veer et al., 2002)
and the development of personalized gene therapy as well as the classiﬁcation of types
of cancer (Golub et al., 1999). It should be noted that many other medical issues
are explored using similar gene expression research such as Autism (Liu et al., 2014),
Gulf War illness (Craddock et al., 2015), type 2 diabetes (Patti et al., 2003), etc.
DNA microarray data displays sets of microscopic spots of DNA laid out on a
piece of glass; together this is referred to as a DNA chip. DNA chips come in two
ﬂavors, cDNA or oligonucleotides. cDNA requires that the DNA chip have full-length
transcripts printed onto the glass and oligonucleotides are chemically synthesized on
the glass and then exposed to probes which extract information from a particular
cell during diﬀerent stages. Scientists usually prefer oligonucleotides because these
nucleotides can identify which genes are active at certain stages of development, or
under certain environmental conditions. The goal is often to decide which genes, and
subsequently which proteins, are active or inactive during these stages or environ-
ments. Before DNA microarray data was available, traditional methodologies only
provided ways to study one or a few genes at a time; now widespread availability
makes it possible to explore all the genes in a single experiment.
Efron et al. (2001) and Do et al. (2005) considered a prevalent example of mul-
tiple testing when analyzing DNA microarray data. The problem explored was how
certain treatments, environment changes or disease aﬀect gene expression. The DNA
microarray data of Efron et al. (2001) consists of 6,810 genes exposed to eight condi-
14

tions. Even if all the genes were not activated, meaning each test H0: θi = 0 should
result in a failure to reject, setting up the hypothesis tests with a signiﬁcance level
0.05 leads to making a type I error roughly ﬁve percent of the time; if this were the
case when testing 6,810 genes one would expect to make type I error about 340 times.
2.1.2
Motivations Beyond Biology
Research in multiple testing has been heavily motivated by DNA microarray data.
The need for developing methods that accurately control for multiple testing should
increase as the world more heavily depends on big data solutions in both science
and business, which are becoming more prevalent. Multiple testing can be useful in
multiple comparison problems including brain imaging (Chumbley and Friston, 2009),
ﬁnancial analysis (Bajgrowicz and Scaillet, 2007), market research (Blomquist, 2014)
and many other data heavy disciplines that exist today. Sun and McLain (2012)
provide another prominent example aﬀected by heteroscedasticity; educational survey
data from the Adequate Yearly Progress (AYP) study on the academic performances
of students across diﬀerent social and ﬁscal demographics. These data are reanalyzed
in Section 7.
2.1.3
Paper Outline
The proposed models for multiple testing are outlined in Section 2 and outlines for
the Gibbs sampling procedure for the common and known variance cases in Section
3 and Section 4 respectively.
In Section 5 we explore proposed test statistics for
the multiple testing procedure as well as details about the false discovery rate. The
success and advantages of this new approach are demonstrated through extensive
simulation in Section 6 and real data analyses in Section 7.
15

2.2
Models
Consider median-zero data y = (y1, . . . , yn)′ with mean vector θ = (θ1, . . . , θn)′
modeled
yi|θ, σ2 ind.
∼N(θi, σ2),
θi|w, G
ind.
∼wg(θ) + (1 −w)δ0(θ),
(2.1)
where G(·) is a cumulative distribution function with corresponding density g(·), w
is the mass parameter in the mixture model denoting the proportion of non-null
observations, and δx is the Dirac measure at x. Scott and Berger (2006) consider a
parametric case where G is Gaussian with mean zero and standard deviation v, i.e.
G = N(0, v2).
The resulting marginal model can be written
yi
∼
w
Z ∞
−∞
N(θ, σ2)G1(dθ) + (1 −w)
Z ∞
−∞
N(θ, σ2)G0(dθ)
=
w
Z ∞
−∞
N(θ, σ2)G1(dθ) + (1 −w)N(0, σ2),
where G0 = δ0. Note that we generalize only the distribution of the non-null means
assumed in Scott and Berger (2006). Do et al. (2005) consider a further generaliza-
tion of this model for diﬀerentially expressed genes where G1 and G0 have Dirich-
let process priors, namely G1 ∼DP(α1, G∗
1), G∗
1 = 0.5N(−b1σ2
1) + 0.5(b1, σ2
1), and
G0 ∼DP(α0, G∗
0) where G∗
0 = N(0, σ2
0).
Bogdan et al. (2008) instead consider a nonparametric generalization of the marginal
model on the y1, . . . , yn proposed by Scott and Berger (2006), namely
yi ∼
Z ∞
−∞
N(θ, σ2)G(dθ),
(2.2)
where G ∼DP(α, wN(0, v2) + (1 −w)δ0). This would appear to be the same model,
but note then that G({0})|w ∼beta(α(1 −w), αw). Assuming w ∼beta(aw, bw)
independent of α ∼exp(aα) (Bogdan et al. take aw = 1, bw = 22.76, and aα = 1) the
prior probability q of a null has density
P(θ = 0) ∼π(q) =
Z ∞
0
aα exp(−aαα)
Z 1
0
β(q|α(1 −w), αw)β(w|aw, bw)dwdα.
The prior probability of a null is no longer beta(aw, bw); placing a nonparametric
prior directly on the non-null distribution, as in (2.1), retains the interpretation of
w as the probability of a non-null. Guindani et al. (2009) also considered essentially
16

the same model as (2.2), but from a decision-theoretic framework. Dahl et al. (2009)
generalize (2.2) for multivariate nonparametric random eﬀects models. Martin and
Tokdar (2012) modify (2.2) to guarantee identiﬁability,
yi ∼
Z ∞
−∞
N(µ + τσθ, σ2)G(dθ),
where τ > 1 is assigned a shifted standard log-normal prior and G is instead estimated
using predictive recursion to avoid diﬃculties stemming from the usual Dirichlet pro-
cess prior. Dirichlet process distributions are almost surely discrete and computation
does not scale well with the number of observations, i.e. large datasets with several
hundreds of thousands of observations are infeasible.
A prior class that includes the Dirichlet process as a special case is the Polya tree
prior (Lavine, 1992). This paper proposes to model the non-null distribution G in
(2.1) with a Polya tree prior, keeping the dyadic tree structure of Ferguson (1974) and
Lavine (1992) on the conditional probabilities, but to terminate the tree at a ﬁnite
level J and simply replace the sets at this level with point mass. The idea is simple
but results in a nonparametric distribution that is exceptionally computationally
tractable with many of the beneﬁts of using a Dirichlet process while maintaining
simple interpretation of the parameters and posterior distributions.
We generalize the model of Scott and Berger (2006) and oﬀer an alternative non-
parametric approach to Martin and Tokdar (2012) by assigning G a nonparametric
ﬁnite Polya tree prior with J levels that is centered at a N(0, v2) distribution. That
is,
G|c, v2 ∼PTJ{c, N(0, v2)},
(2.3)
where PTJ denotes a ﬁnite Polya tree with J levels, and c is a parameter that controls
how “close” G is to the centering distribution N(0, v2). The variance components σ2
and v2 are given the improper prior p(σ2, v2) ∝(v2 + σ2)−2 of Scott and Berger
(2006); note that this results in a conditionally proper prior for [v2|σ2], which is
needed as there may be no non-zero θi with positive probability (1 −w)n.
The
prior on w, the amount of mass assigned to g(θ), is beta, i.e. w ∼beta(aw, bw).
For the special case G = N(0, v2) Scott and Berger (2006) set aw = α + 1 and
17

bw = 1. Setting α = 0 yields a uniform prior in the case where no prior information
is available. In the case where prior information about the non-null proportion ˆp
is provided, setting α = log 0.5/ log ˆp makes ˆp the prior median with reasonable
variation. In some experiments experts can provide more detailed information on w
and its variation. Consider taking aw = ˆp m and bw = (1 −ˆp) m, where ˆp ∈(0, 1) and
m > 0 are constants such that E(w) = ˆp and var(w) = ˆp (1 −ˆp) / (m + 1), matching
the information provided by the expert.
Deciphering which observations are “interestingly diﬀerent” from zero has much
to do with the prior on w, the amount of mass assigned to g(θ) or the proportion
of non-null observations. By altering the prior on w we allow the user to indicate
how many of the observations should be rejected, allowing the tweaking of w to be
interpreted as the proportion of “interestingly diﬀerent” observations instead of just
observations with non-zero means.
By default, this model completes a multiple testing procedure for point mass at
zero. Many times “interestingly diﬀerent” observations are desired, particularly in
microarray analysis where investigating genes via genetic testing can be an expensive
endeavor. Consider the case where w = w0 is the result with the default uniform
prior. When observations that are “interestingly diﬀerent” than zero are desired, one
can then try using prior information ˆp < w0 and m so that E(w) = ˆp and var(w)
is small, e.g. var(w) ≤.01. Less, but “more interesting" rejections can be found
by systematically decreasing ˆp. This is demonstrated in the simulations and data
analyses of Section 6 and Section 7.
An alternative methodology for ﬁnding “interestingly diﬀerent” observations is
provided in Section 5, where test statistics and thresholds are introduced, by imple-
menting a relative cost, κ, which intimates whether a false discovery or false non-
discovery is more costly. When it is more expensive to make a false discovery the
model completes Gibbs sampling with the same ﬂat prior on w, unless otherwise
18

stated, but the posterior analysis would reveal similar results where less, but “more
interesting” rejections are revealed.
The Polya tree prior was initially summarized by Ferguson (1974), and further
developed by Lavine (1992, 1994), and Mauldin et al. (1992). Hanson (2006) discusses
inference for mixtures of ﬁnite Polya trees, which smooth out the eﬀect of the partition
on posterior inference. Brieﬂy, the prior (2.3) on G adds to N(0, v2). The 2J −1
conditional probabilities that reﬁne G’s shape are
Yj,k|c
ind.
∼beta(cj2, cj2),
where j = 1, . . . , J, and k are the odd numbers from 1 to 2j −1 at any level
j.
For any Yj,k where k is odd, let Yj,k+1 = 1 −Yj,k.
Deﬁne Y = {Yjk : j =
1, . . . , J; k = 1, . . . , 2j}. A Polya tree parameter is the conditional probability Yj,k =
G{Bv(j, k)|Bv(j −1, ⌈k/2⌉)} where Bv(j, k) = (vΦ−1((k −1)/2j), vΦ−1(k/2j)), is the
interval for the partition k on level j. Note that Bv(j, 1), . . . , Bv(j, 2j) partitions R
up to a set of measure zero for each j = 1, . . . , J, and for any measurable A ⊂R,
E{G(A)} =
R
A φ(t|0, v2)dt where φ(·|µ, σ2) is the density of a Gaussian random vari-
able with mean µ and standard deviation σ. The probability of being in set k at level
J is
pY(k) =
J
Y
j=1
Yj,⌈k2j−J ⌉,
k = 1, . . . , 2J,
with ⌈·⌉the usual ceiling function. For example, for J = 5 one can ﬁnd pY(11) with
pY(k = 11) =
J=5
Y
j=1
Yj,⌈(11)2j−J ⌉
= Y1,⌈(11)21−5⌉Y2,⌈(11)22−5⌉Y3,⌈(11)23−5⌉Y4,⌈(11)24−5⌉Y5,⌈1125−5⌉
= Y1,1Y2,2Y3,3Y4,6Y5,11;
(2.4)
see the highlights in Figure 2.1.
Although the measure G is discrete, the usual density estimate from a mixture
of Polya trees can be used to smooth G and give an idea of how mass is spread
out. Another option is to simply plot the location and height of the point masses.
We opt for the former using results from Hanson (2006)(see formula (6)). For G ∼
PTJ(c, N(0, v2)), the density g(θ) = g(θ|Y, v2) of G(θ) given Y and v has the following
form:
g(θ|Y, v2) = 2Jp{kv(θ)}φ(θ|0, v2) = 2Jφ(θ|0, v2)
2J
X
k=1
I{kv(θ) = k}pY(k),
where 2J gives the number of partitions in the last level of the Polya tree and kv(θ) =
⌈2JΦ(θ/v)⌉, gives k such that θ ∈Bv(J, k).
19

Figure 2.1: Graph of Gaussian pdf with Polya tree partitions and example highlights
for pY(k = 11).
2.2.1
Direct inference via adaptive MCMC
Following Scott and Berger (2006), ﬁrst consider marginalized inference. Marginal-
izing over θ, each datum arises independently from the density
f(yi|σ2, w, G) = w
Z
R
g(θ)φ(yi|θ, σ2)dθ + (1 −w)φ(yi|0, σ2).
For a < b note the identity
Z b
a
φ(y|θ, σ2)φ(θ|0, v2)dθ = φ(y|0, σ2 + v2)
"
Φ
(
b(σ2 + v2) −v2y
σv
√
σ2+v2
)
−Φ
(
a(σ2 + v2) −v2y
σv
√
σ2+v2
)#
.
This leads to the density of y given v, σ, and Y as
m(y|v, σ, Y, w)
=
w
Z
R
g(θ|Y, v)φ(y|θ, σ2)dθ + (1 −w)φ(yi|0, σ2)
=
w
Z
R
2Jφ(θ|0, v2)


2J
X
k=1
I{kv(θ) = k}pY(k)

φ(y|θ, σ2)dθ + (1 −w)φ(yi|0, σ2)
=
w
Z
R
2J


2J
X
k=1
I{kv(θ) = k}pY(k)


φ(y|θ, σ2)φ(θ|0, v2)
dθ + (1 −w)φ(yi|0, σ2)
=
w2Jφ(y|0, σ2 + v2)
2J
X
k=1
pY(k)∆(y, k|σ, v) + (1 −w)φ(yi|0, σ2).
where
∆(y, k|v, σ) = Φ
(
Φ−1   k
2J

(σ2 + v2) −y
σ
√
σ2+v2
)
−Φ
(
Φ−1   k−1
2J

(σ2 + v2) −y
σ
√
σ2+v2
)
.
20

The unnormalized posterior density is then
p(v, σ, c, Y, w)
∝
" n
Y
i=1
m(yi|v, σ, Y, w)
#
p(v)p(σ)p(c)
×


J
Y
j=1
2j−1
Y
k=1
beta(Yj,2k−1|cj2, cj2)

beta(w|aw, bw).
The dimension of the posterior parameter vector is 2J + 3. Adaptive Metropolis-
Hastings (Haario et al., 2001) can be used here to obtain posterior inference.
2.3
Discrete Approximation to Simplify Posterior Updating
2.3.1
Discrete approximation
To simplify the computational complexity, consider a discrete approximation to
the Polya tree. Deﬁne G to be the ﬁnite discrete measure
G(·) =
2J
X
k=1
pY(k)δθk(·),
θk = vΦ−1 k −0.5
2J

def
= vtk.
(2.5)
Note that as J gets large, the intervals Bv(J, k) get smaller, except in the tails, and
g(·) varies less over the intervals. Here g(·) follows N(0, v2) over each interval k, and
can be approximated with just one “representative” point, the mid-quantile, θk, plus
the associated probability pY(k) of the interval under G. This leads to the density of
yi given σ2, w, v, Y as
f(yi|σ2, w, v, Y)
=
w
Z
R
φ(yi|θ, σ2)G(dθ) + (1 −w)φ(yi|0, σ2)
=
w
2J
X
k=1
pY(k)φ(yi|θk, σ2) + (1 −w)φ(yi|0, σ2).
Note that one can marginalize over σ2 with
Z ∞
0
φ(yi|θ, σ2)Γ(σ−2|a, b)dσ−2 =
ba
√
2β(a, 1/2)
"
b +

yi −θ
√
2
2#−1/2−a
.
This can form the basis of inference using a “black box” sampler, for example an
adaptive Metropolis-Hastings proposal (Haario et al., 2001).
2.3.2
Gibbs sampling through data augmentation
To simplify computation, component membership indicators are introduced. Let
zi = j iﬀyi ∼N(θj, σ2), where θ0 = 0 and j = 0, 1, . . . , 2J. Then
P(zi = k|v, σ2, w, Y) ∝
(
φ(yi|0, σ2)(1 −w)
k = 0
φ(yi|tkv, σ2)wpY(k)
k > 0
)
.
21

f(v|σ2, z) ∝f(v|σ2)
Y
i:zi̸=0
exp{−0.5σ−2(yi −tziv)2},
so then
f(v|σ2, z) ∝N

v|
Pn
i=1 tziyi
Pn
i=1 t2zi
,
σ2
Pn
i=1 t2zi

f(v|σ2) = N

v|
P
i:zi>0 tziyi
P
i:zi>0 t2zi
,
σ2
P
i:zi>0 t2zi

f(v|σ2).
Here, v∗is sampled from the Gaussian full conditional (under a ﬂat prior) above and
accepted with Metropolis-Hastings probability 1 ∧f(v∗|σ2)/f(v|σ2), where f(v|σ2) is
the induced prior from Scott and Berger (2006). Note that the conditional distribution
depends only on those observations for which zi > 0, i.e. those observations deemed
to be from the non-null distribution. During the Gibbs sampler one can sample and
keep track of the zi while simultaneously updating v and the means tkv. Also note
the non-identiﬁability of the model: diﬀerent values of Y and v can give the same
likelihood: v →−v and pY(k) →pY(2J −j +1). Thus v > 0 is needed and maintains
interpretation of v as a scale parameter.
The full conditional distributions for w and σ−2 are
w|z ∼beta
 
aw +
n
X
i=1
I{zi > 0}, bw +
n
X
i=1
I{zi = 0}
!
,
with aw = α + 1 and bw = 1, and
σ−2|z, v ∼Γ
 
aσ + 0.5n, bσ + 0.5
n
X
i=1
(yi −vtzi)2
!
f(σ−2|v2),
where t0 = 0. Here σ−2 is drawn from the gamma proposal above and accepted with
a Metropolis-Hastings probability similar to [v|z, σ2] above. Let
n(J, k) =
n
X
i=1
I{zi = k},
n(j −1, k) = n(j, 2k −1) + n(j, 2k), j = 2, . . . , J,
then
Yj,2k−1 ∼beta(cρ(j) + n(j, 2k −1), cρ(j) + n(j, 2k), k = 1, . . . , 2j−1, j = 1, . . . , J.
Note that Y1,1 = 0.5 and is not sampled; this ensures that zero is a median of G.
Finally,
pY(k) =
J
Y
j=1
Yj,⌈k 2j−J ⌉, k = 1, . . . , 2J.
The probabilities Y are “unhinged” from the location of the sets, or points θk, making
MCMC sampling easy.
22

2.4
Deconvolution with Known Variances
Now consider the situation where the yi are observed with known heteroscedastic
error σ2
i :
yi|θ, σ2 ind.
∼N(θi, σ2
i ),
as considered by Sun and McLain (2012). For this model, σ2 no longer needs to be
updated. Component membership is updated via
P(zi = k|v, σ2
i , w, Y) ∝
(
φ(yi|0, σ2
i )(1 −w)
k = 0
φ(yi|tkv, σ2
i )wpY(k)
k > 0
)
.
The full conditional for v is now updated to
f(v|σ, z) ∝f(v)
Y
i:zi̸=0
exp{−0.5σ−2
i
(yi −tziv)2},
where
f(v|σ, z)
∝
N

v|
Pn
i=1 tziyi/σ2
i
Pn
i=1 t2zi/σ2
i
,
1
Pn
i=1 t2zi/σ2
i

f(v)
=
N
 
v|
P
i:zi>0 tziyi/σ2
i
P
i:zi>0 t2zi/σ2
i
,
1
P
i:zi>0 t2zi/σ2
i
!
f(v).
In what follows, simply take f(v) ∝I(0,u)(v) for some large u > 0.
It should be noted that setting c and J large (e.g. c = 10, 000 and J = 8) provides
a good approximation to Scott and Berger (2006). For a ﬁxed J and v, c →∞
implies that the cumulative distribution function G(θk) →Φ(θk/v), i.e. converges
to the Gaussian N(0, v2) centering distribution value. The points {θk} become more
dense as J →∞and, in fact, the partition sets generate the Borel sets B(R). As a
consequence c →∞and J →∞imply that G converges in distribution to N(0, v2).
In several analyses simply taking J = 8 has yielded no diﬀerence in the log pseudo
marginal likelihood (LPML) (Gelfand and Dey, 1994), a predictive measure of model
ﬁt, between a ﬁnite Polya tree prior and the discrete approximation proposed here.
A referee asked about an extension to diﬀerent but unknown variances from a
common distribution, i.e. a hierarchical model. Such an extension is straightforward.
For example, assume σ−2
i |λ
iid
∼exp(λ) and λ ∼exp(λ0) where E(λ) = 1/λ0. Then,
23

conditionally σ−2
i |else ∼Γ(.5, λ + .5(yi −tziv)2) and λ|else ∼Γ(n + 1, λ0 + Pn
i=1 σ−2
i );
updating is easy. Integrating out σ−2
1 , . . . , σ−2
n
is the same as assuming [yi|zi, v, λ] ∼
tziv +
√
λT2 where T2 is a student-t random variable with 2 degrees of freedom, i.e.
the kernel for yi changes from Gaussian to student-t with inﬁnite variance. In gen-
eral, a hierarchical prior on the variances simply changes the kernel. One intriguing
possibility is a Dirichlet process prior on the σ−2
1 , . . . , σ−2
n , which would force clusters
of observations to have the same variance, but diﬀerent variances across clusters.
2.5
Error Rates
With single hypothesis tests the rejection threshold is moved to control type I
error. In the case of multiple testing there may be hundreds, thousands or possibly
millions of hypothesis tests each having their own type I and type II errors. These
errors need to be combined to talk about the overall error, i.e. speciﬁcity or sensitivity
of multiple hypothesis tests. Consider, family wise error rate (FWER) methods, i.e.
Sidak (1967), Tukey (1949), and Hochberg (1988), the probability of making one or
more type I errors. The goal is to limit this probability at most to a ﬁxed value.
FWER
=
P(False Discoveries ≥1)
=
1 −P(False Discoveries = 0) ≤α.
The problem here, in line with one single hypothesis test, is that limiting this prob-
ability leads to an increase in type II error rate and a decrease in overall power.
The false discovery rate, FDR, introduced by Benjamini and Hochberg (1995) has
become a common error measurement in multiple testing problems. It provides a
way to control type I error like FWER, but does not suﬀer from the low power that
occurs with FWER methods. It should also seem more logical to consider the rate
or proportion of errors instead of whether or not any errors were made; ﬁve false
discoveries in ten hypothesis tests is much worse than the same number out of one
hundred tests. Müller et al. (2007) suggested a variation of FDR from a conditional
Bayesian perspective, but we continue with the traditional measurement.
24

Many FDR methods start with a calculation of the false discovery proportion,
FDP, the proportion of false discoveries among all discoveries, closely aligned with
type I error. FDR is then the expected value of FDP. Similarly, the false non-discovery
rate, FNR, starts with a calculation of the false non-discovery proportion, FNP, as
the proportion of false non-discoveries among all non-discoveries, aligned with type
II error. FNR is the expected value of FNP.
The tests of interested are Hi : θi = 0; i = 1, . . . , n. Let γi = (γ1, . . . , γn) with
γi = I (θi ̸= 0) . Let τ = (τ1, . . . , τn) be the collection of test statistics τi = P(zi ̸=
0|Y), the posterior probability that we fail to reject Hi, with test threshold values of
T = (T1, . . . , Tn), with default
Ti1 =
κ R ∞
0
| θi
v |π (θi|γi = 0, y) dθi
1 + κ R ∞
0
| θi
v |π (θi|γi = 0, y) dθi
=
κE(| θi
v |)
1 + κE(| θi
v |)
=
κE(|tk|)
1 + κE(|tk|),
which is based on the threshold proposed by Scott and Berger (2006). The relative
cost of making a false non-discovery compared to a false discovery is denoted by κ.
All else equal, Ti1 is increasing in κ indicating that if the cost of a false non-discovery
is higher relative to a false discovery, larger κ is desirable.
In many cases, large observations cause this threshold to approach one, regardless
of the observations’ variances.
This causes observations with large E(|θi|) to be
labeled as non-discoveries overall even if they were labeled as non-discoveries just
once during Gibbs sampling. This is an important consideration because real world
observations can be quite large; the carcinoma data from Notterman et al. (2001),
considered in the data analysis in Section 7, has diﬀerence values over 1, 300 for
example. To account for these cases scaling θi by the variance term v is required.
In the case where large observations are expected, one can alternatively use the
originally proposed threshold of Scott and Berger (2006)
Ti2 =
κ R ∞
0
|θi|π (θi|γi = 0, y) dθi
1 + κ R ∞
0
|θi|π (θi|γi = 0, y) dθi
=
κE(|θi|)
1 + κE(|θi|) =
κE(|tkv|)
1 + κE(|tkv|).
The motivation for the unscaled threshold, Ti2, was to create a threshold such that
observations with posterior means close to zero have lower thresholds than those with
posterior means far from zero. In many cases, small observations cause this threshold
25

to approach zero, regardless of the observations’ variances. This causes observations
with small E(|θi|) to be labeled as discoveries overall even if they were labeled as
discoveries just once during Gibbs sampling. This deﬁciency is important to consider
because many real world observations can be quite small; it should be noted that this
threshold fails in the case of testing the diﬀerence of proportions as considered in the
data analysis of success rates on math exams of Section 7.
The two thresholds are very comparable when considering observations of mag-
nitude 101, Ti1 performs better in the case when considering the observations of
magnitude 10−1 or smaller and Ti2 performs better in the case when considering the
observations of magnitude 102 or larger. Finally, this gives the decision functions
δi1 = I (τi > Ti1) and δi2 = I (τi > Ti2) which are toggled between depending on the
magnitude of observations.
Table 2.1: Errors calculation for multiple hypothesis tests
H0 True
H0 False
Total
Reject H0
V = P
i (1 −γi) δi
S = P
i γiδi
R = P
i δi
Fail to Reject H0
U = P
i (1 −δi) (1 −γi)
W = P
i (1 −δi) γi
A = P
i (1 −δi)
Total
P
i (1 −γi)
P
i (γi)
n
Table 2.1 summarizes type I and type II errors across multiple hypothesis tests.
The number of discoveries can be written as R = P
i δi, with the number of false
discoveries V = P
i (1 −γi) δi making FDP =
V
max(R,1). FDR is then E[
V
max(R,1)].
The number of non-discoveries can be written as A = P
i (1 −δi), with the number
of false non-discoveries W = P
i (1 −δi) γi making FNP =
W
max(A,1). FNR is then
E[
W
max(A,1)]. In the same vein, the missed discovery rate, MDR, is E[
W
max(m0,1)] where
m0 = P
i γi, the number of θi that should be rejected. The calculations should clarify
the diﬀerence of FNR and MDR. FNR is the ratio of false non-discoveries among all
non-discoveries whereas MDR is the ratio of false non-discoveries among all θi that
should be rejected.
FDR and FNR are the expected value of FDP and FNP respectively and a sim-
ple Law of Large Numbers argument allows us to approximate FDR and FNR with
26

FDP and FNP respectively in the simulation studies in Section 6. The marginal ver-
sions are deﬁned as MFDR =
E(V )
E[max(R,1)] and MMDR =
E(W)
E[max(m0,1)]. Genovese and
Wasserman (2002) show that MFDR and FDR are negligibly diﬀerent in large prob-
lems and are argued better than their non-marginal counterparts by Storey (2002)
and Wu and Cai (2007). A more advanced procedure for error measurement is dis-
cussed by Peña et al. (2011) who consider taking the individual powers of each test,
which are left out of other methods, into account for both FWER and FDR methods.
Their research focuses on Neyman-Pearson Most Powerful tests of simple hypothe-
ses with promising results that indicate individual powers are important to multiple
tests. This paper does not include a model that accounts for individual power, but
it is an interesting avenue to consider in further research.
2.6
Simulations
Three scenarios are considered for simulation, one where the means are distributed
G1 = N(0, 22), another where the means follow a skewed, bimodal, median-zero
mixture of two Gaussians G2 = 0.4N(−2.62, 12)+0.6N(0.48, 0.52), and another where
the means follow a symmetric, bimodal, median-zero mixture of two Gaussians G3 =
0.5N(−3, 0.52)+0.5N(3, 0.52). For each Gj, j = 1, 2, 3, we simulate θ1, . . . , θ500
iid
∼Gj
and θi = 0 for i = 501, . . . , 3000 i.e. w = 1/6. Finally, for each Gj we simulate (i)
yi
ind.
∼N(θi, 0.52) for the model with a common, unknown σ2, or (ii) yi
ind.
∼N(θi, σ2
i )
where σi ∼Γ(5, 10) where E(σi) = 0.5. An equal-tailed 95% probability interval for
σi is (0.16, 1.02). For G1, G2 and G3 one hundred datasets were generated.
In each of the three scenarios we explore the FDR and FNR, across varying values
of κ, J, w and prior information on w as well as the estimates of the non-null densities.
Then, we increase the sample size to n = 30, 000 to display the scalability of the
model.
Finally, the section is ended with a comparison study where we consider
G4 = .67N(−3,
√
2
2) + .33N(3,
√
2
2), as in Martin and Tokdar (2012).
27

2.6.1
Simulation with G1
For G1, data were simulated as described above, and analyzed with aw = 1, bw = 1,
J = 5, and c random. As seen in Figure 2.2 the density estimation is accurate for
both (i) unknown, common and (ii) known variances, particularly considering that
only 500 of the 3000 data points come from the non-null distribution. This results
in the method’s ability to keep both FDR and FNR relatively low, as seen in the
summary of FDP and FNP in Table 2.2. The results from approximating Scott and
Berger (2006) by setting J = 8 and ﬁxing c = 100, 000 are also contained in Table
2.2. The results are similar, but the parametric approach has a slightly larger number
of rejections; this can be attributed to the parametric assumption of the model being
met.
Table 2.2: Errors summary over one hundred simulations for G1; MNR is the mean
number of rejections.
J = 5, c random
J = 8, c = 105
Common Variance
Known Variance
Common Variance
Known Variance
Cost κ
MNR
FDR
FNR
MNR
FDR
FNR
MNR
FDR
FNR
MNR
FDR
FNR
1/5
234
0.024
0.098
248
0.025
0.093
238
0.027
0.097
249
0.025
0.093
1/3
250
0.038
0.094
264
0.039
0.090
255
0.042
0.093
265
0.040
0.090
1
301
0.099
0.085
315
0.106
0.081
309
0.109
0.083
316
0.107
0.081
3
399
0.227
0.074
422
0.247
0.070
414
0.247
0.072
424
0.249
0.070
5
480
0.318
0.069
517
0.347
0.065
503
0.341
0.067
519
0.348
0.065
2.6.2
Simulation with G2
For G2, data were simulated as described above, and analyzed. As seen in Figure
2.2 relatively good density estimation is still enjoyed for this skewed, median-zero
mixture of two Gaussians. Improvement of the nonparametric Polya tree approach is
clear; the density estimates of Scott and Berger (2006) miss the bimodal density and
ﬁt one Gaussian density over it.
The summary of FDP and FNP in Table 2.3 show the ability to control FDR
and FNR is preserved. When comparing the nonparametric Polya tree approach to
that of Scott and Berger (2006), beyond the novelty of this much improved density
28

estimate, it may be surprising that the FDR and FNR are similar across varied levels
of cost κ; this is largely to do with the density estimates near zero being very similar
in both approaches.
Table 2.3: Errors summary over one hundred simulations for G2.
J = 5, c random
J = 8, c = 105
Common Variance
Known Variance
Common Variance
Known Variance
Cost κ
MNR
FDR
FNR
MNR
FDR
FNR
MNR
FDR
FNR
MNR
FDR
FNR
1/5
185
0.025
0.113
201
0.023
0.108
189
0.028
0.112
200
0.026
0.109
1/3
197
0.039
0.111
214
0.038
0.105
201
0.042
0.110
213
0.039
0.106
1
243
0.109
0.103
256
0.101
0.098
242
0.110
0.103
255
0.105
0.099
3
351
0.269
0.092
352
0.248
0.088
327
0.247
0.095
345
0.246
0.090
5
451
0.375
0.086
443
0.349
0.083
399
0.336
0.090
423
0.340
0.086
2.6.3
Simulation with G3
For G3, data were simulated as described above, and analyzed. As seen in Figure
2.2 good density estimation is still enjoyed for this symmetric, median-zero mixture
of two Gaussians. The improvement of the nonparametric Polya tree approach again
is clear; the density estimates of Scott and Berger (2006) miss the bimodal density
and ﬁt one Gaussian density over it.
The summary of FDP and FNP in Table 2.4 show the ability to control FDR and
FNR is preserved. When comparing the nonparametric Polya tree approach to that of
Scott and Berger (2006), beyond the novelty of this much improved density estimate,
FDR and FNR are starkly diﬀerent in this case across varied levels of cost κ. This
improvement is due to the non-parametric approach being capable of capturing the
non-Gaussian distribution of the non-null observations and, in this case, the estimates
at zero are very diﬀerent.
Table 2.4: Errors summary over one hundred simulations for G3.
J = 5, c random
J = 8, c = 105
Common Variance
Known Variance
Common Variance
Known Variance
Cost κ
MNR
FDR
FNR
MNR
FDR
FNR
MNR
FDR
FNR
MNR
FDR
FNR
1/5
491
0.008
0.005
478
0.015
0.011
525
0.056
0.001
483
0.022
0.011
1/3
495
0.012
0.004
486
0.023
0.010
541
0.082
0.001
495
0.036
0.009
1
505
0.024
0.003
509
0.050
0.006
602
0.174
0.001
541
0.100
0.005
3
523
0.053
0.002
547
0.102
0.004
748
0.333
0.000
655
0.245
0.002
5
538
0.077
0.001
571
0.136
0.003
871
0.427
0.000
767
0.352
0.001
29

Figure 2.2: The ﬁrst two columns show simulation results for G1, G2 and G3 using
the nonparametric approach and the last two columns show Scott and Berger (2006)
results for the same data. The dotted densities are the true densities of the non-zero
means and the solid density with the gray band is the estimated density with the 90
percent conﬁdence band.
2.6.4
Scalability Results
For each Gj, j = 1, 2, 3, one hundred datasets were simulated with θ1, . . . , θ5000
iid
∼
Gj and θi = 0 for i = 5001, . . . , 30000. Finally, we simulate (i) yi
ind.
∼N(θi, 0.52) for
the model with a common, unknown σ2, or (ii) yi
ind.
∼N(θi, σ2
i ) where σi ∼Γ(5, 10)
where E(σi) = 0.5. This nonparametric Polya tree method also retained the ability
to keep both FDR and FNR relatively low with the expanded dataset. The density
estimation is still very good for both common and known variance and with the
expanded data set the density estimates are tighter in all three cases.
2.6.5
Simulation with G1 Varying Prior Information
In this setting one hundred datasets were simulated for G1,with θ1, . . . , θ500
iid
∼
G1 and θi = 0 for i = 501, . . . , 3000. Finally, we simulate yi
ind.
∼N(θi, σ2
i ) where
σi ∼Γ(5, 10) where E(σi) = 0.5. A variety of prior information ˆp, on w choosing
m = 10, 000 to ensure small variance was given and a summary of results are in Table
2.5. When perfect information ˆp = 1/6 on w is given the results are very similar
30

to the results of the default methodology with no prior information on w. As ˆp is
decreased, fewer observations are rejected which is expected as the prior information
on w intimates that the model should be rejecting less.
Recall Table 2.2 where
decreasing the value of the relative cost, κ, exhibited similar behavior.
The most telling piece of this simulation are the density estimates seen in Figure
2.3; as the prior on w decreases, the mass around zero is slowly removed ﬁnally
yielding “interestingly diﬀerent” rejected observations and a density estimate of those
observations.
Table 2.5: Errors summary over one hundred simulations for G1 with known variance,
m = 10, 000, κ = 1, J = 5 and c random under Ti1; MNR is the mean number of
rejections.
ˆp Value
MNR
FDR
FNR
500/3000
316
0.107
0.081
315/3000
293
0.077
0.084
248/3000
284
0.066
0.086
100/3000
260
0.039
0.091
Figure 2.3: Density estimates over diﬀerent values of ˆp are the solid density estimates
and density estimate with no prior on w is the dotted estimate.
2.6.6
Simulation with G1 Varying Levels w
One hundred datasets were simulated for G1,with θ1, . . . , θ3000w
iid
∼G1 and θi = 0
for i = 3000w + 1, . . . , 3000 for w ∈{0.01, 0.33, 0.166, 0.5, 0.833, 0.966, 0.99}. Finally,
31

we simulate yi
ind.
∼N(θi, σ2
i ) where σi ∼Γ(5, 10) where E(σi) = 0.5 for each value of
w.
As seen in Table 2.6 the model does suﬀer in the “needle in a haystack” scenario.
This is a direct result of the conditional distribution depending only on those ob-
servations for which zi > 0, i.e. those observations deemed to be from the non-null
distribution. When there are a small number of observations from the non-null dis-
tribution it is diﬃcult for the Polya Tree approach to achieve decent distributional
results. In the “hay in a needle stack” case this model keeps FDR low, but fails
to discover many of the non-null observations. This is largely due to the non-null
distribution having considerable mass at zero.
Table 2.6: Errors summary over one hundred simulations for G1 with known variance,
κ = 1, J = 5 and c random under Ti1.
Common Variance
Known Variance
w
MNR
FDR
FNR
MNR
FDR
FNR
30/3000
15
0.212
0.006
15
0.144
0.005
100/3000
52
0.129
0.018
54
0.120
0.018
500/3000
301
0.100
0.084
315
0.106
0.081
1500/3000
999
0.065
0.282
1127
0.098
0.257
2500/3000
1777
0.030
0.633
2319
0.082
0.543
2900/3000
1634
0.014
0.672
2906
0.029
0.792
2970/3000
1484
0.004
0.638
2964
0.010
0.917
2.6.7
Simulation with G1 Varying Levels J
One hundred datasets for G1 were simulated, with θ1, . . . , θ500
iid
∼G1 and θi = 0
for i = 501, . . . , 3000. Finally, we simulate yi
ind.
∼N(θi, σ2
i ) where σi ∼Γ(5, 10) where
E(σi) = 0.5. This time the number of levels, J, in the Polya tree was varied to
display its eﬀect on the model. As seen in Table 2.7, FDR and FNR vary little over
diﬀerent levels of J. This shows robustness to the choice J; i.e. a “leveling oﬀ” noted
by Hanson (2006).
32

Table 2.7: Errors summary over one hundred simulations for G1 with known variance,
κ = 1 and c random under Ti1.
Levels J Value
MNR
FDR
FNR
J = 5
315
0.106
0.081
J = 6
316
0.107
0.011
J = 7
317
0.108
0.081
J = 8
317
0.109
0.081
2.6.8
Simulation with G1 and Wrongly Assumed Common Variance
One hundred datasets were simulated for G1, with θ1, . . . , θ500
iid
∼G1 and θi = 0
for i = 501, . . . , 3000. Finally, we simulate yi
ind.
∼N(θi, σ2
i ) where σi ∼Γ(5, 10) where
E(σi) = 0.5. We analyzed these data with the common variance approach to examine
the models sensitivity to this assumption.
As seen in Table 2.8, FDR is much inﬂated compared to the results in Table 2.2
when we analyzed these simulated data with the correct, given variance approach.
This indicates that the model is sensitive to a faulty assumption of common variance
and shows the beneﬁt of the extension of this model to the uncommon variance cases
as discussed in Section 4.
Table 2.8: Errors summary over 100 simulations for G1 with known variance analyzed
under the common variance assumption for J = 5 and c ﬁxed at 100, 000 under Ti1;
MNR is the mean number of rejections.
Cost κ
MNR
FDR
FNR
1/5
446
0.324
0.078
1/3
490
0.359
0.075
1
625
0.449
0.067
3
846
0.551
0.058
5
1009
0.605
0.053
2.6.9
Comparison Study
For comparison, consider the simulation study of Martin and Tokdar (2012) who
compare their predictive recursion (PRTest) to the Bayes oracle test and the methods
of Jin and Cai (2007) and Muralidharan (2010) (mixfdr). Five hundred datasets for
G4 were simulated, with θi = 0 for θ1, . . . , θ1000(1−w) and θi
iid
∼G4 for i = 1000(1 −
33

w), . . . , 1000 for w ∈{0.01, 0.05, 0.10, 0.15, 0.20, 0.25}. Finally, we simulate yi
ind.
∼
N(θi, σ2) where σ = 1.
In Figure 2.4 it is seen that the Polya tree approach, with κ = .01, suﬀers high
FDR in the sparse case where w = .01 and there are only ten observations from the
non-null distribution. For the less sparse cases the model performs comparably to
the other models. In these less sparse cases, e.g. w ∈{.20, .25}, only the model of
Jin and Cai (2007) has more power.
The ﬂexibility of the model’s cost based threshold is that we allow the user to
give information about how costly a false discovery is relative to a false non-discovery.
Note that in some scientiﬁc studies that the model with the lowest FDR is not always
preferred. For instance, in an experiment where it is cheap to explore a discovery,
but it is important that we ﬁnd all of the non-null observations a higher FDR may
be desired; this case is accommodated by setting κ large.
Figure 2.4: Plots of FDR (left), FNR (middle) and power (right) over varying values
of w for G4.
34

2.7
Data Analyses
Below this approach is applied to three diﬀerent hypothesis testing scenarios: a
diﬀerence of proportions, a paired diﬀerence, and a two sample diﬀerence.
2.7.1
Proportional Diﬀerence
Sun and McLain (2012) provide an example using educational survey data from
the Adequate Yearly Progress study on the academic performances of students across
diﬀerent social and ﬁscal demographics; it is of interest to ﬁnd schools where the
diﬀerence is interestingly diﬀerent from the norm. That is, schools that do signif-
icantly worse than other schools in serving their social-economically disadvantaged
than social-economically advantaged students should be evaluated and eﬀorts should
be made to close the gaps. Along the same lines, schools that do signiﬁcantly better
can be analyzed to help educators ﬁnd what helps close the gap.
Let yi = ˆpSAi −ˆpSDi where ˆpSAi is the success rates of social-economically ad-
vantaged students in math exams at school i and ˆpSDi is the success rate of social-
economically disadvantaged students in math exams at school i with σ2
i =
ˆpSAi(1−ˆpSAi)
nSAi
+
ˆpSDi(1−ˆpSDi)
nSDi
for i = 1, . . . , 7866, as in the case of the usual Z statistic approach for
proportions. In this particular setting, the students do diﬀerently on average so the
observations are shifted to be median zero. Here, take yshiftedi = ˆpSAi −ˆpSDi −η where
η is the median of all yi’s. It should be noted that the analyses here is directed at
ﬁnding schools that are signiﬁcantly diﬀerent from other schools and not, in the tradi-
tional sense, ﬁnding schools that have dissimilar success rates for social-economically
advantaged and disadvantaged students.’
The usual T-statistic approach yields 5,731 and 5,246 rejections at the 0.10 and
0.05 level of signiﬁcance respectively. The default, no prior information on w, ap-
proach estimates w = .9558 with a 95% credible interval of the number of non-null
35

observations to be (6801, 7851). The number of rejections from the model without
using any prior information on w are 1863, 2298, 4468, 7511, and 7736 for costs of
1/5, 1/3, 1, 3, and 5 respectively. As cost, κ, is decreased the model rejects the null
of fewer observations by design of threshold Ti2 and with cost κ = 1 a similar number
of rejections to that of the usual T-statistic approach at the 0.10 and .05 levels. The
non-null density estimate, in this case, is approximately bell-shaped and symmetric
at zero.
Figure 2.5: Density estimates over diﬀerent values of ˆp are the solid density estimates
and density estimate with no prior on w is the dotted estimate. The density estimate
from Sun and McLain (2012) is represented by the dashed density estimate.
Sun and McLain (2012) explore this data, searching for schools that are “inter-
estingly diﬀerent.” We can consider this problem by inputting prior information on
w. Sun and McLain (2012) consider the “oracle” method in Jin (2008) by using the
ˆw = .353 which can be used as the prior information on w. Using this prior informa-
tion the model reports a 95% credible interval of the number of non-null observations
to be (3366, 3545) and the non-null density estimate is bimodal indicating that there
are two groups of “interestingly” diﬀerent schools. In the absence of prior informa-
36

tion, or the use of an “oracle” method, similar results could be achieved by using the
proportion of rejections in the default, no prior information on w, approach for small
values of κ. As seen in Figure 2.5, using the proportions created by the number of
rejections at κ = 1, κ = 1/3 and κ = 1/10 the model obtains results similar to Sun
and McLain (2012).
2.7.2
Paired Diﬀerence
Next, consider the gene expression data from the microarray experiments of Colon
tissue samples of Notterman et al. (2001). This data, available through the Princeton
University Gene Expression Project, consists of 7,457 genes measurements for 18
patients on both tumor and normal tissues. The analysis here is directed at ﬁnding
genes that are signiﬁcantly diﬀerent from other genes and not, in the traditional
sense, ﬁnding genes that have changed expression at all. It is of importance to ﬁnd
the genes diﬀerent than the other genes, in general; the genes that have signiﬁcantly
diﬀerent expression changes should have their association with the disease of interest,
colorectal adenoma here, further examined.
In the case of the usual, paired Student T statistic take yi = ¯xdi where ¯xdi is
the mean pairwise diﬀerence and σ2
i = s2
di/18 for i = 1, . . . , 7457.
The data, in
this example, are not median-zero so take shifted yshiftedi = ¯xdi −η where η is the
median of all yi’s. Similar to the analysis of data from Sun and McLain (2012), the
shift is necessary here as gene expression tends to change in congress (Morley et al.,
2004). The usual T-statistic approach yields 2,818 and 2,205 rejections at the 0.10
and 0.05 level of signiﬁcance respectively. The default approach, no prior information
on w, estimates w = .3621 with a 95% credible interval of the number of non-null
observations to be (2577, 2839). The number of rejections from the model without
using any prior information on w are 740, 824, 1029, 1346, and 1533 for costs of
1/5, 1/3, 1, 3, and 5 respectively. As we decrease the cost, κ, we see that the model
37

rejects the null of fewer observations by design of threshold Ti1. The non-null density
estimate, in this case, is approximately bell-shaped and symmetric at zero.
2.7.3
Two Sample Diﬀerence
Ausin et al. (2011) consider the gene expression data from the microarray experi-
ments of Colon tissue samples of Alon et al. (1999). This data, available through the
R package “plsgenomics”consists of 2,000 genes for 62 samples; 40 of these samples
are from tumor tissues and 22 are from normal tissues. It should be noted that the
original dataset consisted of 6,500 genes and the 2,000 observations in the available
data are the genes with highest minimal intensity.
In the case of the usual, two sample Student T statistic take yi = ¯xnormi −¯xtumori
and σ2
i = s2
normi/22 + s2
tumori/40 for i = 1, . . . , 2, 000.
Similar to the analyses of
Notterman et al. (2001), take shifted yshiftedi = ¯xnormi −¯xtumori −η where η is the
median of all yi’s.
The usual T-statistic approach yields 626 and 477 rejections
at the 0.10 and 0.05 level of signiﬁcance respectively.
Ausin et al. (2011) report
223 diﬀerentially expressed genes with posterior probability one. The default, no
prior information on w, approach estimates w = .7178 with a 95% credible interval
of (1139, 1801). The number of rejections from the model without using any prior
information on w are 126, 159, 240, 467, and 633 for costs of 1/5, 1/3, 1, 3, and 5
respectively.
2.8
Java Applet
An increasing trend among statisticians is to provide R packages for ﬁtting com-
plex methodology. These packages allow others familiar with the R computing envi-
ronment to implement methods otherwise not readily available, and hence allow the
routine use of new methodology. However, many scientists in other ﬁelds are unfamil-
38

iar with R and other programming languages. These scientists often use specialized
software or Excel to implement statistical methods.
Perhaps the most widely available venue for the dissemination of new statistical
methods is through the use of online Java applets that are compatible with any
machine that can run Java; it is in this spirit that we provide such a Java applet.
Scientists of all backgrounds are able to utilize this methodology without the steep
learning curve of learning a new programming language. Figure 2.6 shows a screenshot
of the Java applet with example input and output.
Figure 2.6: Screenshot of the Java application with results
The left side of the applet has text areas for input.
The top text area is for
entering the observations; each observation should have its own row. The applet is
smart enough to know whether or not the input contains known variances and in the
given variance case we expect the observation and variance to be comma separated;
again, each couple should have its own row. In the second row, the two text areas
are for the desired the number of Gibbs iterates and the number of burn in iterates,
respectively.
In the third row, the two text areas are for the desired cost κ and
number of levels for the Polya tree J. The following line for input asks whether or
not prior information on w will be used followed by two text areas - the estimated
proportion of rejections and the constant m. The last line inquires whether the test
39

is a diﬀerence of means or diﬀerences of proportions so that the program can toggle
between thresholds Ti1 and Ti2.
The right side of the applet displays output. The ﬁrst graph is the density estimate
for the non-zero means, and the next two show the variables v and c after burn in. If
the input is set correctly these graphs should appear fairly consistent over the iterates.
If the graphs are not consistent, burn in and Gibbs iterates may need to be increased.
The textual output gives a credible interval for the number of observations rejected
and a list of which observations were rejected overall according to the threshold. This
applet is available through http://people.stat.sc.edu/Cipolli/BMT/BMT.html.
2.9
Conclusion
The suggested approximate ﬁnite Polya tree multiple testing procedure is very
successful in correctly classifying the observations with non-zero mean in a compu-
tationally eﬃcient manner. This holds even when the non-zero means are simulated
from a mean zero distribution, as seen in the simulation of θi from a N(0, 22), which
is particularly impressive as we can expect many of these ‘non-zero’ means to be very
close to zero. The ﬂexibility of this model is displayed through the data analyses
in Section 7 by completing the task of multiple testing in the cases of proportional
diﬀerences as well as paired and two sample mean diﬀerences.
The performance of the multiple comparisons was evaluated using FDR and FNR,
both of which were kept low during simulation for relatively small and large numbers
of observations. A nice aspect of the methodology and Java applet is that we are able
to provide an approximation of the density of the non-zero means that is very close
to the actual density function even in the non-Gaussian case. Further, the model is
capable of this for “interestingly diﬀerent” observations in the cases where that is of
interest as in Section 6.5 and Section 7.1.
This model assumes that θi and σ2
i are independent and is sensitive to the prior
40

speciﬁcations including w. The model is also sensitive to the data being median zero;
simulation results, not included, show that deviations from this lead to inﬂated error.
2.10
Acknowledgements
We would like to acknowledge and thank the editor and anonymous reviewers for
providing insightful and constructive comments, suggestions and direction throughout
revisions of this paper.
41

Chapter 3
Computationally Tractable Approximate and
Smoothed Polya Tree
A discrete approximation to the Polya tree prior suitable for latent data is pro-
posed that enjoys surprisingly simple and eﬃcient conjugate updating. This approxi-
mation is illustrated in two applied contexts: the implementation of a nonparametric
meta-analysis involving studies on the relationship between alcohol consumption and
breast cancer, and random intercept Poisson regression for Ache armadillo hunting
treks. The discrete approximation is then smoothed with Gaussian kernels to provide
a smooth density for use with continuous data; the smoothed approximation is illus-
trated on a classic dataset on galaxy velocities and on recent data involving breast
cancer survival in Louisiana.
3.1
Introduction
The ﬁeld of Bayesian nonparametrics has exploded over the last two decades,
largely due to several recent groundbreaking advances in computational techniques,
in particular Markov chain Monte Carlo (MCMC). Every year sees an increase in
papers advancing models, theory, and applications of Bayesian nonparametrics. Clas-
sical parametric statistics posits a family of probability models, say G, for data
y = (y1, . . . , yn)′ indexed by a ﬁnite-dimensional parameter θ ∈Θ ⊂Rp, e.g. normal-
errors regression, generalized linear mixed models with Gaussian random eﬀects, logis-
tic regression, etc. A Bayesian nonparametric model seeks to generalize and robustify
42

posterior inference on functionals of the population distribution G by increasing the
ﬂexibility of the probability model, thus anticipating nonstandard, yet interesting as-
pects such as multimodality, extreme skew, nonlinear and irregular trends, and other
features not eﬀectively handled by many parametric models. This is often accom-
plished by deﬁning a prior that is indexed by a very large number, typically inﬁnite
number of parameters. Furthermore, many Bayesian nonparametric priors general-
ize common parametric models such as Gaussian, linear trends in regression, etc.,
thus allowing testing and assessment of these simpler, but often parsimonious and
interpretable models.
For the case of estimating a distribution function, Bayesian nonparametric ap-
proaches place a prior on the space of distribution functions; examples are the cel-
ebrated Dirichlet process, Polya tree priors, neutral to the right priors, Bernstein
polynomials with random degree, transformed Gaussian processes, and many others.
Some of these priors can place positive mass on distribution functions that admit a
density with respect to Lebesgue measure (e.g. Polya trees, Bernstein polynomials,
Dirichlet process mixtures of continuous kernels), and others do not (e.g. Dirichlet
processes, neutral to the right priors). Ferguson (1973) eﬀectively ushered in half a
century of Bayesian nonparametrics with his foundational paper on the Dirichlet pro-
cess, comprehensively treating common inferential problems such as the estimation
of the population cumulative distribution function, mean, quantiles, variance, and
covariance; as well as a treatment of the two-sample problem. So many important
papers followed that it is impossible to provide a concise summary. Books providing
an overview of Bayesian nonparametrics include Ghosh and Ramamoorthi (2003),
Hjort et al. (2010), Mitra and Müller (2015), and Müller et al. (2015).
The Dirichlet process and Dirichlet process mixture (DPM) models have enjoyed
tremendous success in the ﬁeld of Bayesian nonparametrics over the last twenty years,
yielding hundreds of applications papers, generalizations, and computational ad-
43

vances. Consider a Dirichlet process centered at the Gaussian distribution G|c, µ, σ ∼
DP(c, N(µ, σ2)). Under the Dirichlet process, or any stick-breaking process, the prob-
ability measure G is discrete, i.e. G = P∞
j=1 wjδxj where δx is Dirac measure at x.
Sethuraman (1994) showed for the Dirichlet process that wj = uj
Pj−1
k=1(1 −uk) for
u1, u2, · · ·
iid
∼beta(1, c) independent of x1, x2, · · ·
iid
∼N(µ, σ2). The Dirichlet process
was used as a latent random eﬀects distribution in generalized linear mixed models
(GLMMs) by Kleinman and Ibrahim (1998) and Jara et al. (2009), and as latent
means in a meta-analysis by Burr and Doss (2005). Note that frequentists have been
using ﬁnite discrete mixtures as random eﬀects distributions in GLMMs for almost
30 years (Follman and Lambert, 1989; Aitkin, 1999).
This paper proposes two nonparametric priors based on Polya trees (Lavine, 1992),
a prior over discrete probability measures suitable for random eﬀects and a prior over
continuous probability measures for density estimation and regression. Consider a
ﬁnite Polya tree prior centered at N(µ, σ2), G|c, µ, σ ∼PTJ(c, N(µ, σ2)) (Hanson,
2006) where c intimates how much the Polya tree assimilates the centering distri-
bution. The ﬁrst prior, which can be used for latent unobservables such as random
eﬀects, is a discrete approximation to G that keeps the dyadic tree structure of Fer-
guson (1974) and Lavine (1992) on conditional probabilities, terminates the tree at
some ﬁnite level J, and simply replaces the sets at level J with point mass. The
second prior smooths this discrete approximation for use with continuous data. The
resulting MCMC schemes enjoys conjugate updating for almost all parameters and
excellent mixing, even for small c.
Section 3.2 introduces the approximate Polya tree (APT), which replaces the ran-
dom G with a collection of point masses; considers the APT for modeling Gaussian
means with known variances; implements the APT in random intercept generalized
linear mixed models; and then proposes a smoothed APT (SAPT) suitable for contin-
uous distributions but considerably more tractable than the usual mixture of Polya
44

trees (MPT) model. The SAPT is further generalized to the accelerated failure time
model for censored survival data. All models are accompanied by simple MCMC
schemes for posterior updating. Simulated and real examples are given in Section
3.3; Section 3.4 concludes the paper.
3.2
Models
3.2.1
Polya tree and discrete approximation
The Polya tree prior was introduced over several papers in the 1960’s, summa-
rized by Ferguson (1974). Polya trees were further developed by Lavine (1992, 1994)
and Mauldin et al. (1992).
Hanson (2006) discusses inference for mixtures of ﬁ-
nite Polya trees, which smooth out the eﬀect of the partition on posterior inference.
Brieﬂy, the ﬁnite Polya tree prior G ∼PTJ(c, N(µ, σ2)) adds to N(µ, σ2) conditional
probabilities that adjust the normal density’s shape on intervals that partition R;
other centering families besides Gaussian can also be considered. The intervals are
given by Bµ,σ(j, k) = (µ + σΦ−1{(k −1)/2j}, µ + σΦ−1{k/2j}) where Φ−1(·) is the
inverse cumulative distribution function for a standard Gaussian; the 2j intervals
Bµ,σ(j, 1), Bµ,σ(j, 2), . . . , Bµ,σ(j, 2j) partition R up to a set of Lebesgue measure zero.
Let Yj,2k−1 and Yj,2k be the G-probability of Bµ,σ(j, 2k −1) and Bµ,σ(j, 2k) given the
event Bµ,σ(j −1, k); note that the ﬁrst two sets partition the third. These conditional
probabilities have prior
Yj,k|c
ind.
∼beta(cj2, cj2),
(3.1)
where j = 1, . . . , J and k are the odd numbers from 1 to 2j −1 at any level j. For
any Yj,k where k is odd, let Yj,k+1 = 1 −Yj,k. Deﬁne Y = {Yj,k : j = 1, . . . , J; k =
1, . . . , 2j}. The G-probability of set k in the ﬁnest partition J, i.e. G{Bµ,σ(J, k)} is
pY(k) =
J
Y
j=1
Yj,⌈k2j−J ⌉,
k = 1, . . . , 2J,
(3.2)
where ⌈·⌉is the usual ceiling function. Then, for G ∼PTJ(c, N(µ, σ2)), the density
g(x|Y, µ, σ) of G given Y, µ, and σ has the following form:
g(x|Y, µ, σ) = 2JpY{kµ,σ(x)}φ(x|µ, σ2),
where 2J gives the number of partitions in the last level of the Polya tree; kµ,σ(x) =
⌈2JΦ{(x −µ)/σ}⌉gives which set k at level J x is in, where φ(·|µ, σ2) and Φ(·|µ, σ2)
are the density and cumulative distribution functions of a N(µ, σ2) random variable,
45

respectively. Note that for any measurable A ⊂R, E{G(A|µ, σ2)} =
R
A φ(x|µ, σ2)dx
where the expectation is over Y and c. This implies that the random measure G is
centered at a N(µ, σ2) distribution. The parameter c > 0 controls how “close” G is
to N(µ, σ2); as c →∞, G(A) →
R
A φ(x|µ, σ2)dx almost surely. More details can be
found in Hanson (2006).
Consider a discrete approximation to the Polya tree prior G, suitable for latent
data or random eﬀects, that simpliﬁes computation enormously:
G(·) =
2J
X
k=1
pY(k)δµ+σtk(·),
tk = Φ−1 k −0.5
2J

,
(3.3)
where pY(·) is deﬁned through (3.1) and (3.2). This can be a reasonable approxi-
mation; as J gets large, the sets Bµ,σ(J, k) get smaller, except in the tails, and g(·)
varies less over the sets. Since g(·) follows N(µ, σ2) on these sets, g(·) over the set
can be approximated with just one “representative” point, the mid-quantile, plus the
associated probability pY(k) of the set under G. This discrete approximation has
one unappealing property: unlike the Dirichlet process, G does not have full weak
support for J < ∞. For random eﬀects distributions, we simply seek G to be ﬂexible.
Most existing approaches to modeling a random eﬀects distribution G do not have
full weak support, including Ghidey et al. (2004), Komárek and Lesaﬀre (2008), Jara
et al. (2009), and many others.
The number of free parameters in Y is 2J −1. As J increases G can accommodate
ﬁner and ﬁner detail. Hanson (2006), however, noticed a “leveling oﬀ” eﬀect in the
log-pseudo marginal likelihood (LPML) (Gelfand and Dey, 1994), a cross-validated
predictive measure of ﬁt, across a wide variety of models using MPTs; i.e. after a
certain point, increasing J does not enhance the predictive ability of a model. Hanson
and Johnson (2002) suggest J = ⌈log2 n⌉and Hanson (2006) suggests J = ⌈log2 n/N⌉
where N = 5 or N = 10 is roughly the number of observations informing G on
the ﬁnest partition at J as rough guidelines, but in practice J = 5 or J = 6 has
provided essentially identical inference as larger values of J across many datasets.
46

An unpublished Technical Report (available from the second author) shows how a
prior can be placed on J for a marginalized Polya tree. This approach, however,
cannot be used directly for the models in this paper. Reversible jump (Green, 1995)
could oﬀer a solution for the models presented here, but is not considered further.
Given (µ, σ2), E{G[(−∞, x)]}
J→∞
→
Φ{(x −µ)/σ}, thus hyperpriors for (µ, σ)
can be chosen as one would under the normal model. Section 5.2.3 in Christensen
et al. (2010) provides guidance towards choosing an informative prior; alternatively
Jeﬀreys’ prior under the centering Gaussian model could be used, or simply a ﬂat
prior. The latter choice is especially easy to implement for the models considered in
Section 3, and so the non-informative prior
p(µ, σ) ∝I{σ > 0},
(3.4)
is assumed. Call the prior (3.1), (3.2), (3.3), and (3.4) an approximate Gaussian-
centered Polya tree prior of level J, denoted
G ∼APTJ.
The dependence of G on c is suppressed for now. We now consider several special
cases, illustrating how MCMC simpliﬁes.
3.2.2
Gaussian data with known variances
Assume the hierarchical model
yi|xi ∼N(xi, s2
i ),
where the si are known, and
x1, . . . , xn|G
iid
∼G,
G ∼APTJ.
This is an approximation to the model considered by Branscum and Hanson (2008)
for the purpose of carrying out a nonparametric meta-analysis. Posterior updating
is simpliﬁed by introducing latent qi associated with each xi; qi = k ⇔xi = µ + σtk
for k = 1, . . . , 2J. Let y = (y1, . . . , yn)′, q = (q1, . . . , qn)′, and \ = (s1, . . . , sn)′. The
likelihood augmented with q is
p(y|µ, σ, q, Y) = p(y|µ, σ, q)p(q|Y) =
" n
Y
i=1
φ(yi|µ + σtqi, s2
i )
# " n
Y
i=1
pY(qi)
#
.
Note that the ﬁrst portion is a simple weighted linear regression on the “intercept” µ
and “slope” σ. This likelihood times the prior p(µ, σ)p(Y) yields the posterior density.
47

All parameters have closed-form full conditional distributions, and so a Gibbs sampler
for sampling (µ, σ, Y|y) is immediate. The full conditional distribution for each index
q1, . . . , qn is
P(qi = k|µ, σ, Y, yi) ∝φ(yi|µ + σtk, s2
i )pY(k),
k = 1, . . . , 2J.
(3.5)
Like all ﬁnite mixtures, including ﬁnite approximations to the Dirichlet process (Ish-
waran and Zarepour, 2002), the computational burden grows with the number of com-
ponents 2J. However, one can update by proposing only a small subset of {1, . . . , 2J},
namely one of its immediate neighbors. This reduces the number of Gaussian density
evaluations at each MCMC iteration from 2J to 2, increasing speed enormously with
only a minimal cost in terms of posterior mixing. If the previous value is qi = 1, then
q∗
i = 2; if qi = 2J then q∗
i = 2J −1. If 2 ≤qi ≤2J −1 then choose q∗
i = qi −1 or
q∗
i = qi + 1 with equal probability 1
2. The proposed q∗
i is accepted with probability
1 ∧
φ(yi|µ + σtq∗
i , s2
i )pY(q∗
i )
φ(yi|µ + σtqi, s2
i )pY(qi)
2I{qi=2}I{q∗
i =1}2I{qi=2J −1}I{q∗
i =2J }
2I{qi=1}2I{qi=2J }
,
where ∧is “the smaller of.” The resulting transition kernel can be veriﬁed as aperiodic,
irreducible, and positive recurrent as pY(k) > 0 almost surely for k = 1, . . . , 2J.
The remaining transition kernels [Y|q] and [µ, σ|q] (below) are simple Gibbs and
Metropolis-Hastings (M-H) updates, respectively; therefore the full chain obtained
from the product of all transition kernels is easily seen to be ergodic.
Let n(J, k) = Pn
i=1 I{qi = k} for k = 1, . . . , 2J. Then recursively, n(j −1, k) =
n(j, 2k −1) + n(j, 2k) for j going from J to 1. Then
Yj,2k−1|q ∼beta(cj2 + n(j, 2k −1), cj2 + n(j, 2k)),
for k = 1, . . . , 2j−1 and j = 2, . . . , J. Here and elsewhere we ﬁx Y1,1 = Y1,2 = 0.5
forcing G(µ) = 0.5, i.e. µ is a median of G. Given q, the weighted linear regression
form of the likelihood implies that
"
µ
σ
#
|q, y ∼N2

M


Pn
i=1
yi
s2
i
Pn
i=1
tqi yi
s2
i

, M

, M−1 =


Pn
i=1
1
s2
i
Pn
i=1
tqi
s2
i
Pn
i=1
tqi
s2
i
Pn
i=1
t2
qi
s2
i

.
(3.6)
If an informative prior is placed on (µ, σ), a candidate (µ∗, σ∗) can be proposed from
this bivariate Gaussian full conditional distribution (under a ﬂat prior), but accepted
with M-H probability 1 ∧p(µ∗, σ∗)/p(µ, σ). For prior (3.4) the proposal is simply
accepted if σ∗is positive.
48

The probabilities Y are “unhinged” from the location of the sets, or points µ+σtk;
this allows for particularly simple updating relative to a standard ﬁnite mixture of
Polya trees prior, which can have problematic updating and mixing for (µ, σ) (Hanson,
2006). In many, essentially all, papers involving MPT priors to date, updating (µ, σ)
is not conjugate; updating proceeds typically via slice sampling, adaptive Metropo-
lis, or random-walk Metropolis steps. Furthermore, the posterior mixing for these
parameters is often terrible if the true distribution that G is modeling is very unlike
the centering distribution N(µ, σ2). As we shall see in Section 3.3, mixing is much
better for the APT, and updating (µ, σ) through (3.6) is remarkably easy.
The parameter c can also be random; the full conditional distribution is the prod-
uct of 2J −2 beta densities:
p(c|Y) ∝
J
Y
j=2
2j−1
Y
k=1
Γ(2cj2)
Γ(cj2)2 Y cj2−1
j,2k−1(1 −Yj,2k)cj2−1.
A beta random variable can be approximated by a logit-normal (Aitchison and
Shen, 1980).
Speciﬁcally, beta(a, a) is well-approximated by logit–N(0, 2
a) (Zhao
and Hanson, 2011).
Thus log
Yj,k
1−Yj,k
•∼N(0,
2
cj2), where
•∼means “approximately
distributed as.” This implies p(log
Yj,k
1−Yj,k |c)
•∝c1/2 exp{−cj2
4 (log
Yj,k
1−Yj,k )2}, and ﬁnally
p({log
Yj,k
1−Yj,k }|c)
•∝QJ
j=2
Q2j−1
k=1 c1/2 exp{−cj2
4 (log
Yj,k
1−Yj,k )2}. This yields a gamma pro-
posal
c∗|Y ∼Γ

ac + 2J −2
2
, bc + 1
4
2J
X
j=2
j2
2j−1
X
k=1
(log
Yj,2k−1
1−Yj,2k−1 )2

,
assuming c ∼Γ(ac, bc). The proposal c∗is accepted with the usual M-H probability.
Alternatively c can be updated with adaptive or random-walk Metropolis steps.
3.2.3
Random intercept GLMMs
Consider a simple univariate random-intercept GLMM with the APTJ prior on
the distribution G of univariate random eﬀects. Each observation yi is accompanied
by covariates zi ∈Rp. For example, conditional on (γ, xi) the Poisson model with
log link stipulates
yi ∼Pois(Niλi),
log(λi) = z′
iγ + xi,
and the binomial model with logit link is
yi ∼bin(mi, πi),
logit(πi) = z′
iγ + xi.
49

In what follows, replace xi by σtqi. The intercept µ is subsumed into γ yielding an
augmented likelihood
L(γ, σ, q) =
n
Y
i=1
Li(γ, σ, qi) =
n
Y
i=1
exp{−Ni exp(z′
iγ + σtqi)} exp{(z′
iγ + σtqi)yi},
for Poisson data, and
L(γ, σ, q) =
n
Y
i=1
Li(γ, σ, qi) =
n
Y
i=1
exp{(z′
iγ + σtqi)yi}
[1 + exp(z′
iγ + σtqi)]mi .
for binomial data. The latent qi are updated similarly to (3.5)
P(qi = k|γ, σ, Y, yi) ∝Li(γ, σ, k)pY(k),
k = 1, . . . , 2J.
The sampling of (β, σ) proceeds as in a standard GLM without random eﬀects,
and is easily accomplished via adaptive M-H or the approach of Gamerman (1997).
Gamerman’s approach is based on one iteration of a Newton-Raphson optimization
scheme, i.e. iteratively reweighted least squares. It is similar in spirit to Langevin-
adjusted M-H in that the gradient of the posterior density at the current value
is used.
This approach is easy to carry out and is described below for Poisson
and binomial GLMMs. Let θi = E(yi|γ, σ, qi), the conditional mean. For Poisson
this is θi = Niλi = Niez′
iγ+σtqi and for binomial θi = miπi = mi
ez′
iγ+σtqi
1+ez′
iγ+σtqi .
Let
W(γ, σ, q) = diag(w11, . . . , wnn) be an n × n diagonal matrix with the conditional
variances, and θ = (θ1, . . . , θn)′ be the vector of conditional means.
For Poisson
wii = θi and for binomial wii = miπi(1 −πi). Assume the prior (γ, σ) ∼Np+1(γ0, S).
Let Z(q) be the n × (p + 1) matrix with ith row [ z′
i
tqi ]. Let
V(γ, σ, q)
=
[S−1 + Z(q)′W(γ, σ, q)Z(q)]−1,
m(γ, σ, q)
=
V(γ, σ, q)[S−1γ0 + Z(q)′W(γ, σ, q)Z(q)γ + Z(q)′(y −θ(γ, σ, q))].
The proposal (γ∗, σ∗) ∼Np+1(m(γ, σ, q), V(γ, σ, q)) is accepted with probability
1 ∧φp+1(γ, σ|m(γ∗, σ∗, q), V(γ∗, σ∗, q))φp+1(γ∗|γ0, S)L(γ∗, σ∗, q)
φp+1(γ∗, σ∗|m(γ, σ, q), V(γ, σ, q))φp+1(γ|γ0, S)L(γ, σ, q)
.
3.2.4
Smoothed version for density estimation
The discrete approximation (3.3) is suitable for latent unobservables x1, . . . , xn.
However, for continuous data the process needs to be smoothed. We propose replac-
ing the sets Bµ,σ(J, k) at level J with Gaussian kernels of approximately the same
spread.
Gaussian kernels are especially tractable as the (µ, σ) updates enjoy the
same easy conjugacy of Section 3.2.2. The resulting density model has similarities
to the penalized B-spline approximation of Komárek et al. (2005) on a ﬁxed set of
50

knots, but with random degree α (introduced below) and a Polya tree “penalty func-
tion” that encourages multiresolution, wavelet-like shrinkage (Draper, 1999). The
model is also similar in spirit to the convolution approach to approximating stochas-
tic processes (Higdon, 2002). Each point xi = µ + σtqi is smoothed with a Gaussian
kernel; the kernel standard deviation is proportional to distance between subsequent
knots with proportionality constant α > 0. Deﬁne the distances di = ti −ti−1 for
i = 2J−1 + 1, . . . , 2J and di = ti+1 −ti for i = 1, . . . , 2J−1. The smoothed density is
g(x|µ, σ, Y, α) =
2J
X
k=1
pY(k)φ(x|µ + σtk, α2d2
k).
This is a similar framework as Section 3.2.2; the MCMC updates for qi in (3.5) are
the same setting si = αdi. The parameter α, along with c, is a smoothing parameter.
Larger values of α increase the Gaussian kernel variance relative to the mass locations;
this has a similar eﬀect to increasing the degree of a B-spline with a ﬁxed number of
knots. The value of α should not be much smaller than σ, however, as this produces
“spikes” of probability instead of a smooth density.
Setting α = σ coupled with
pY(k) = 2−J, i.e. the expected value under the prior, gives a density that closely
resembles a N(µ, σ2); see Figure 3.1. With this in mind, α−2|σ ∼Γ(a, aσ2) ensures
that α ≈σ for large a (a = 100 has worked very well across a variety of datasets)
and yields the full conditional distribution
α−2|q, µ, σ ∼Γ
 
a + n
2 , aσ2 + 1
2
n
X
i=1
(yi −µ −σtqi)2
d2qi
!
.
(3.7)
The update for (µ, σ) is similar to (3.6), except that the lower right element of M−1
has 2a
α2 added to it and requires a M-H step, i.e. a proposal (µ∗, σ∗) is generated
"
µ∗
σ∗
#
|q, α, y ∼N2

M


Pn
i=1
yi
α2d2qi
Pn
i=1
tqi yi
α2d2qi

, M

, M−1 =


Pn
i=1
1
α2d2qi
Pn
i=1
tqi
α2d2qi
Pn
i=1
tqi
α2d2qi
2a
α2 + Pn
i=1
t2
qi
α2d2qi

,
where (µ∗, σ∗) is accepted with probability 1∧(σ∗/σ)2a[p(µ∗, σ∗)/p(µ, σ)]. The ability
of the smoothed version to capture the Gaussian density hints at something deeper.
Unser et al. (1992) show that a properly normalized B-spline converges to a Gaussian
density. Gans and Gill (1984) show empirically that Gaussians can be captured by
B-splines with only a handful (e.g. 5 or 7) of basis functions.
Canale and Dunson (2016) consider a related approach that follows Chen et al.
(2014) by transforming the data to [0, 1] through the centering measure and using
a Bernstein polynomial. But rather than smooth the Polya tree only at level J as
51

−3
−2
−1
0
1
2
3
0.0
0.1
0.2
0.3
0.4
x
f
G
G
G G G GGGGGGGGGGGGGGGGGGGGGG G G G
G
G
Figure 3.1:
The 32 smoothing kernels for J = 5, a standard Gaussian density
(dashed), and g(x|0, 1, Y, 1) with Yj,k = 0.5. (solid)
presented here, Canale and Dunson (2016) consider many basis functions of diﬀerent
degrees, i.e. Bernstein polynomial basis functions from all degrees 2j for integer j,
and achieve sparsity through a stopping rule in the Polya tree in a manner similar to
Wong and Ma (2010).
3.2.5
SAPT for regression error
A referee has suggested extending the SAPT of Section 3.2.4 to regression data
{(zi, yi)}n
i=1, where zi ∈Rp, so that the location changes smoothly with covariates:
gz(x|µ, σ, Y, α) =
2J
X
k=1
pY(k)φ(x|z′γ + σtk, α2d2
k).
If each yi is a log-survival time then this is the accelerated failure time model, e.g.
Hanson and Johnson (2002), and eγj is how the mean, median, or any quantile of sur-
vival changes when the jth predictor is increased by one unit. This changes posterior
updating negligibly. The (p + 1)-dimensional (γ, σ) has proposal
"
γ∗
σ∗
#
|q, α, y ∼Np+1

M


Pn
i=1
yizi
α2d2qi
Pn
i=1
tqi yi
α2d2qi

, M

, M−1 =


Pn
i=1
ziz′
i
dqi α2
Pn
i=1
zitqi
dqi α2
Pn
i=1
tqi z′
i
dqi α2
2a
α2 + Pn
i=1
t2
qi
dqi α2

,
52

accepted with probability 1 ∧(σ∗/σ)2a[p(γ∗, σ∗)/p(γ, σ)]. Each index q1, . . . , qn has
full conditional distribution
P(qi = k|µ, σ, Y, yi) ∝φ(yi|z′
iγ + σtk, s2
i )pY(k),
k = 1, . . . , 2J.
Finally,
α−2|q, γ, σ, y ∼Γ
 
a + n
2 , aσ2 + 1
2
n
X
i=1
(yi −z′
iγ −σtqi)2
d2qi
!
.
Assume now survival data {(ui, zi, δi)}n
i=1 where δi = 0 indicates that the true survival
time is greater than ui, otherwise δi = 1 indicates the survival time is ui.
Let
yi = log ui for those i such that δi = 1. The MCMC scheme can be augmented
to update latent [yi|γ, σ, Y, α, y−i] for δi = 0, where y−i is {yj : j ̸= i}, as yi ∼
N(z′
iγ + σtqi, α2d2
qi) truncated to yi ∈(log ui, ∞). The survival curve for covariates z
is given by
Sz(t|µ, σ, Y, α) = 1 −
2J
X
k=1
pY(k)Φ(log t|z′γ + σtk, α2d2
k).
3.3
Illustrations
3.3.1
Alcohol and breast cancer risk
Following Branscum and Hanson (2008), we consider the meta-analysis data of
Longnecker (1994). These data are comprised of n = 39 epidemiological studies aimed
at exploring the relationship between alcohol consumption and risk of breast cancer
in women. The data are the log-odds ratio yi and standard error si from each study
i.
Speciﬁcally, the summary measure used was the estimated change in log odds
ratio (scaled as LOR × 1000) for a 1 gram increase in daily alcohol consumption.
For example, Longnecker (1994) estimated that there is approximately a 10 percent
increase of the risk of breast cancer in women for each 10-g/day increment in alcohol
consumption. The model is yi|xi ∼N(xi, s2
i ), x1, . . . , x39|G ∼G, G|c ∼APTJ where
J = 5 and c ∼Γ(5, 1); the APT model is compared to MPT and Dirichlet process
models for these data via the PTmeta and DPmeta functions in DPpackage (Jara et al.,
2011) for R (R Core Team, 2014); all three models use an approximation to Jeﬀrey’s
prior on (µ, σ2) for the underlying N(µ, σ2) family.
Speciﬁcally, the MPT model
53

assumes G|c ∼PTJ(c, N(µ, σ2)) where µ ∼N(0, 1000), σ−2 ∼Γ(0.01, 0.01), and
c ∼Γ(5, 1). The Dirichlet process model assumes G|c ∼DP(c, N(µ, σ2)) with the
same priors on (µ, σ) but takes c ∼Γ(1, 1). See the DPpackage documentation for
details on the model and these hyperparameters. In all three scenarios, a burn-in of
20, 000 was used and 10, 000 iterates were thinned from 1, 000, 000.
For the APT model the posterior median of µ is 10.0 with a 95% credible interval
of (6.2, 14.2). These overall inferences on the log odds of breast cancer are plotted
as vertical lines in Figure 3.2 along with the 39 study-speciﬁc log odds ratios ×1000
and their 95% conﬁdence intervals.
Log Odds Ratio x 1000
Study Reference
−100
−50
0
50
100
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
Figure 3.2: Log odds ratios with 95% CIs for the 39 studies.
Vertical lines are
posterior median and 95% CI for µ from the APT model.
For data y1, . . . , yn generated from a probability model p(y1, . . . , yn|θ) indexed by
54

θ ∈Θ with prior θ ∼q(θ), the conditional predictive ordinate (CPO) for the ith
observation yi is
CPOi = p(yi|y−i) =
Z
Θ
p(yi|θ)p(θ|y−i)dθ.
This is predictive distribution for a new observation given y−i = {yj}j̸=i evaluated at
the value that was left out yi; as usual p(θ|y−i) ∝p(y−i|θ)q(θ). The larger CPOi is,
the better supported yi is through the remaining data, model, and prior. (Gelfand
and Dey, 1994) show that these statistics can be computed by only one ﬁt to the
whole dataset. The sum of the n log CPOi statistics has been termed the LPML.
The APT model, with an LPML of -156, does better than the MPT and Dirichlet
process models which had LPML values of -162 and -165, respectively; the larger
LPML indicates that the APT model predicts the observed data better than the
MPT and DPM models. Here and elsewhere we rerun LPML computations multiple
times to assure stability.
3.3.2
Ache Armadillo Hunting
Consider data from extended forest treks of the Paraguayan Ache tribe, collected
by McMillan (2001) over the course of a year, including armadillo hunting. The data,
also considered in Hanson (2006), consists of n = 38 adult male hunters’ age in years
ai, number of armadillos killed yi, and number of days spent trekking Ni for hunters
i = 1, 2, . . . , 38.
The variable of interest is the number of armadillos killed; this
quantity contributes to an Ache male’s status in the tribe. A quadratic function of
the hunter’s age ai plus a hunter-speciﬁc random eﬀect xi is considered as a model for
the armadillo kill rate λi. The hunter-speciﬁc random eﬀects xi = σtqi are modeled
nonparametrically with G|c ∼APT5 and c ∼Γ(5, 1). The model for i = 1, . . . , 38 is
yi ∼Pois(Niλi) with
log(λi) = γ0 + γ1(ai −50) + γ2(ai −50)2 + xi = z′
iγ + xi,
where zi = (1, ai −50, (ai −50)2)′ and γ = (γ0, γ1, γ2)′. The number 50 is subtracted
from each hunter’s age to reduce collinearity between the linear and quadratic parts
of the transformed kill rate.
The LPML and eﬀective sample size (ESS) (Sargent et al., 2000), are used to
compare approaches.
The ESS describes the eﬃciency of mixing during MCMC;
55

after a suitably long burn in (often 5,000 or more iterates), the ESS measures how
many essentially, or “pseudo” iid samples are taken from the posterior out of 10,000.
The APT GLMM yields a LPML of −98 and ESS values of 1145, 1419, 1953, 2157 for
γ0, γ1, γ2, σ respectively. This model yields posterior means of -0.782, -0.014, and
-0.003 for γ0, γ1, and γ2 with posterior standard deviations 0.146, 0.012, and 0.001,
respectively. Figure 3.3 shows the empirical kill rates yi/Ni versus age ai for the 38
hunters along with the ﬁtted kill rate exp{ˆγ0 + ˆγ1(a −50) + ˆγ2(a −50)2}.
G
G
G
G
G
G
G
G
G
G
G
G
G
G
G
G
G
G
G
G
G
G
G
G
G
G
G
G
G
G
G
G
G
G
G
G
G
G
20
30
40
50
60
0.0
0.2
0.4
0.6
0.8
age
rate
Figure 3.3: Empirical armadillo kill rates yi/Ni versus age ai for the 38 Ache hunters.
Superimposed is the ﬁtted kill rate from the random intercept APT Poisson model.
Note that the random intercept Poisson model only accommodates extra-Poisson
variability; underdispersed data need to be handled diﬀerently, e.g.
Canale and
Dunson (2011). Computing the LPML for the Ache data without random eﬀects
yields an LPML of -122, giving evidence of overdispersion and favoring the APT
random intercept model. In fact, the pseudo Bayes factor favors the APT model by
exp(−98+122) > 1010 compared to the Poisson model without random eﬀects, giving
strong evidence of extra-Poisson variability.
56

We compared the outcome from the APT approach to the results from using a
MPT prior described in Hanson (2006). This model can be ﬁt using the PTglmm
function in the DPpackage for R. With c ∼Γ(5, 1), J = 5, and non-informative priors
on γ and σ this model yields a LPML of −99 and ESS values of 623, 551, 1021, 675
for γ0, γ1, γ2, σ respectively. The MPT approach estimates γ0, γ1, and γ2 as -0.724,
-0.0179, and -0.003 with standard deviations of 0.133, 0.011, and 0.001, respectively.
Though the coeﬃcient estimates are similar, we see the models are slightly dif-
ferent and the improvements our method provides can be seen in two instances; the
LPML statistic shows slightly improved ﬁt of APT relative to MPT while the ESS
values show that the mixing is much improved – the APT approach being two to three
times greater in terms of eﬃciency than the MPT approach. A sensitivity analysis on
the choice of J reveals there is nothing to be gained from increasing for G ∼APTJ.
In a similar vein, Agresti (2002) in Section 13.2 notes that often only a handful of dis-
crete mass points are needed for generalized linear mixed models; adding additional
discrete mass points leaves the value of the maximized likelihood virtually unchanged
after a certain point.
3.3.3
Density estimation
The SAPT is compared to the DPM and the MPT for density estimation. Consider
one hundred samples of size n = 100 and n = 500 from the densities described in
Hanson and Jara (2013).
The four densities considered are a uniform, Gaussian,
double exponential, and a mixture of two Gaussians and a uniform density.
For
each, the density is estimated using the MPT, DPM and SAPT approaches. The
median and 90% interval of L1 distances from the 100 estimates to the truth are
used to compare the three approaches as well as and the median and 90% interval of
LPML values. Recall that the L1 distance is twice the total variation norm, which
is interpreted as “how much probability mass needs to be moved from the density
57

estimate to get the true density.” The density estimates averaged over the one hundred
replications and true densities are in Figures 3.4 and 3.5.
Both the MPT and SAPT models were ﬁt assuming c ∼Γ(1, 1) and J = 6. The
APT further assumes p(µ, σ) ∝I{σ > 0}; the MPT model uses Jeﬀreys’ prior for the
underlying normal distribution. The DPM model ﬁt in DPpackage is, for yi ∈Rk,
yi|G
iid
∼
Z
Nk(µ, Σ)dG(µ, Σ),
G|c, m1, κ, Ψ1 ∼DP(c, Nk(m1, 1
κΣ) × IWk(ν1, Ψ1)),
m1 ∼Nk(m2, S2),
κ ∼Γ( τ1
2 , τ2
2 ),
Ψ1 ∼IWk(ν2, Ψ2).
The inverted-Wishart prior W ∼IWk(ν, Ψ) is parameterized such that E(W) =
1
ν−k−1Ψ−1. The model used here for univariate data is the special case where k = 1;
the inverted-Wishart reduces to the inverse-gamma in this case. The more general
multivariate model is presented above as the data-driven prior presented next works
for multivariate density estimation as well.
Let ¯y and S be the sample mean and covariance matrix for the data y1, . . . , yn.
Let (µj, Σj) be a draw under the DPM centering distribution. Then
E(Σj) = E{E(Σj|Ψ)} = E{Ψ−1/(ν1 −k −1)} =
ν2Ψ2
ν1 −k −1.
It makes sense to center the Dirichlet process component covariance matrices on some
fraction of S, say rS to keep the scale and overall shape consistent with the data. For
Σj to have a ﬁnite mean, the smallest ν1 can be is k + 2. Thus we take ν2 = k + 2,
ν1 = k + 2 and Ψ2 = rS implying E(Σj) = rS; we take r = 0.1 to have component
variances be on the order of one-tenth of the population variances. Now, note that
µj|m1, κ, Σj ∼Nk(m1, 1
κΣj). To allow for cluster means to be located throughout
the data cloud, take κ ≈r, e.g. one could assume κ ∼Γ(0.1, 1) so E(κ) = 0.1.
Escobar and West (1995) note that κ →0+ gives bumpier estimates and suggest
κ ∼Γ(1, 100), which we also adopt. Finally, m2 = ¯y and S2 = S. In this univariate
case, we take v2 = 3, v1 = 3, Ψ2 = rs2 with r = 0.1, κ ∼γ(1, 100) and m2 = ¯y
and s2 = s2, with ¯y and s2 denoting the sample mean and variance of the data,
respectively.
In all three models, a burn-in of 1, 000 was used and 3, 000 iterates were saved
after burn-in without thinning. The results in Table 3.1 and Figure 3.4 show that all
58

three models struggle to capture a decent density estimate for the uniform sample
with only n = 100 observations but generally do well in all other cases. The SAPT
generally does about the same or better, relative to the MPT approach, in terms of
the L1 distance across the four densities – the one exception being the spiked double
exponential density with sample size of n = 100. The SAPT does about the same as
the DPM in many cases; overall, though, the DPM provides better L1 than SAPT or
MPT.
Although the SAPT approach does not always yield the best result, we see that
it is an improvement upon the MPT approach and provides a real alternative to the
DPM model. Hanson and Jara (2013) showed that the MPT approach could be “a
serious competitor” to the DPM model; the MPT approach, though, often suﬀers
the disadvantages of yielding quite spiky density estimates.
The smoothed APT
approximation mitigates that, to an extent, while simultaneously creating a serious
competitor to the DPM model.
Table 3.1: Median L1 and LPML summary over 100 simulations for n = 100 and
n = 500 with a 90% interval.
DPM
MPT
SAPT
n = 100
LPML
L1
LPML
L1
LPML
L1
Uniform
-122(-127,-115)
.28(.20,.38)
-123(-128,-117)
.31(.24,.38)
-123(-127,-116)
.30(.24,.38)
Gaussian
-144(-154,-132)
.10(.03,.22)
-144(-155,-132)
.16(.09,.24)
-144(-158,-132)
.16(.09,.24)
Double Exp.
-175(-192,-160)
.20(.12,.31)
-174(-190,-157)
.19(.12,.28)
-175(-190,-159)
.20(.14,.31)
Mixture
-115(-129,-100)
.20(.13,.29)
-121(-135,-103)
.33(.26,.40)
-117(-130,-100)
.23(.17,.31)
n = 500
LPML
L1
LPML
L1
LPML
L1
Uniform
-573(-593,-563)
.16(.12,.21)
-579(-590,-570)
.21(.17,.25)
-576(-587,-567)
.20(.16,.23)
Gaussian
-711(-738,-690)
.04(.02,.09)
-713(-739,-692)
.09(.06,.13)
-713(-739,-689)
.09(.06,.12)
Double Exp.
-850(-891,-821)
.10(.07,.14)
-850(-893,-821)
.13(.09,.17)
-853(-885,-817)
.12(.08,.15)
Mixture
-555(-587,-525)
.10(.06,.14)
-568(-605,-536)
.20(.16,.25)
-564(-591,-529)
.12(.09,.16)
3.3.4
Galaxy Velocities Data
Among many others, Roeder (1990) and Escobar and West (1995) analyzed a
dataset on the velocities of eighty-two galaxies sampled from six well-separated conic
sections of the Corona Borealis. We estimate the density of these data using the
usual MPT, DPM, and SAPT models described in previous sections; a graph of the
59

Figure 3.4: Four densities estimated using the MPT, DPM and APT approaches,
n = 100.
density estimates can be seen in Figure 3.6.
The DPM model was ﬁt using the DPdensity function in DPpackage. As we did in
the previous subsection, we take v2 = 3, v1 = 3, Ψ2 = rs2 with r = 0.1, κ ∼γ(1, 100)
and m2 = ¯y and s2 = s2, with ¯y and s2 denoting the sample mean and variance of
the data.
For the MPT model a burn-in of 10, 000 was used and another 200, 000 iterates
were thinned from 20,000,000. For the DPM model a burn-in of 5, 000 was used and
another 200, 000 iterates were thinned from 2,000,000. For the SAPT model a burn-in
of 5, 000 was used and another 200, 000 iterates were saved without thinning.
The MPT approach yields a LPML of −223 with ESS values of 17 and 11 for µ and
σ respectively (out of 10,000). The SAPT approach yields a LPML of −215 with ESS
values of 345 and 107 for µ and σ respectively. The DPM approach yields a LPML of
60

Figure 3.5: Four densities estimated using the MPT, DPM and APT approaches,
n = 500.
−212 with ESS values of 5, 940 and 5, 186 for the mean and scale, respectively, of the
distribution on the Gaussian component means (quite diﬀerent from the centering
distribution parameters of the MPT and SAPT approaches).
The LPML statistic shows that the DPM approach ﬁts the Galaxy data best
but the SAPT approach ﬁts similarly and is much improved compared to the MPT
approach. The ESS values show that the SAPT mixing is much improved upon the
MPT – the APT approach being up to an order of magnitude greater in terms of
eﬃciency than the MPT approach; the DPM has better mixing for the Gaussian
component mean centering distribution parameters.
61

Figure 3.6: Galaxy data histogram and density estimates across models.
3.3.5
Breast cancer survival in Louisiana
The model of Section 3.2.5 is considered for breast cancer survival data from
the Surveillance, Epidemiology, and End Results (SEER) Program for the state of
Louisiana. The time window considered is 2000-2010, and restricted to those aged 65
years and over at time of diagnosis. Variables of interest include: age at diagnosis,
marital status (single, married or other), SEER summary stage (2000 year version;
0=in situ, 1=local, 2=regional, 3=distant), race (white or black) and survival in
months after diagnosis (a small number was added to each event time as there were a
few zeroes). Observations with missing values for any of these variables are excluded
from this study. The dataset is highly right censored, 2212 censored out of 2611
total, i.e. 399 observed deaths. The MCMC scheme of Section 2.5 was implemented
in FORTRAN 90 assuming J = 6, c ∼Γ(5, 1), and p(γ, σ) ∝I{σ > 0}; 100,000
iterates were thinned to 5,000 after a burn-in of 5,000. The nonparametric approach
to censored regression data of Buckley and James (1979) was also applied to these
data, using the bj function in the rms package (Harrell, 2015) for R.
Table 3.2 records the estimated regression eﬀects from both approaches; they
62

agree fairly well but there are some diﬀerences. Consider acceleration factors from
the SAPT model in Table 3.2. Whites survive about 1.63 times longer than blacks,
holding everything else constant. Going from in situ, to local, to regional, to distance
signiﬁcantly shortens survival as one would expect; signiﬁcance here meaning that the
95% CI does not contain zero. Age is also signiﬁcant, with those older at diagnosis
tending to live a shorter amount of time. There is no signiﬁcant eﬀect due to marital
status. Survival curves (not shown) show essential agreement for the SAPT, Buckley-
James, and censored log-normal models for diﬀerent covariate combinations, although
the parametric log-normal curves are smoother. The LPML for the SAPT model can
be computed for censored data using the approach in Ibrahim et al. (2001); the LPML
is computed for the log-normal model via the quasi-likelihood method of Geisser and
Eddy (1979). These values are -1340 and -1376 respectively on the log-data scale; the
SAPT model predicts the data considerably better than the parametric log-normal
model.
Table 3.2: SEER Louisiana breast cancer survival in months. Est. is posterior mean,
s.d. is posterior standard deviation, and AF is acceleration factor for SAPT model.
Est.
and s.e.
are estimates and standard error from Buckley and James (1979)
approach.
SAPT
Buckley & James
Eﬀect
Est.
s.d.
AF
Est.
s.e.
Intercept
12.85
0.83
13.24
1.56
Married vs. Single
0.321
0.241
1.38
0.431
0.317
Other vs. Single
-0.00262
0.2209
1.00
0.0670
0.3011
Local vs. In situ
-1.414
0.437
0.243
-1.194
1.201
Regional vs. In situ
-3.035
0.463
0.048
-2.976
1.199
Distant vs. In situ
-5.876
0.496
0.0028
-6.114
1.208
White vs. Black
0.487
0.121
1.63
0.501
0.187
Age
-0.0626
0.0087
0.939
-0.0695
0.0118
3.4
Discussion
A discrete approximation to the univariate MPT model is proposed that has con-
jugate and eﬃcient MCMC updating for all parameters. A smoothed version, the
SAPT, maintains conjugate updating and mixes signiﬁcantly better than the tradi-
63

tional MPT. Various simulated and real data illustrate the usefulness of the proposed
approach. One obvious extension of the current work is to implement fast estima-
tion of the posterior mode of the SAPT density via the expectation-maximization
algorithm (Dempster et al., 1977).
Multivariate versions of the APT and SAPT models suﬀer the same fate as mul-
tivariate extensions of B-splines: an exponential explosion of parameters occurs with
increased dimensionality. For example the nonparametric random eﬀects distribu-
tion of Ghidey et al. (2004) is largely relegated to bivariate densities. Multivariate
Polya trees have largely gotten around this through marginalization; this may be a
possibility for the (S)APT as well.
64

Chapter 4
Supervised Learning using the Polya Trees
The goal in any classiﬁcation schema is to design a system that classiﬁes new
observations into their true class as often as possible. The nonparametric approach
of the multivariate Polya tree proposed here has realized impressive results in sim-
ulations and real data analyses performing similarly to or better than current ap-
proaches in many cases. The ﬂexibility gained from eliminating certain distributional
assumptions from the model can greatly improve the ability to correctly classify new
observations; even minor deviations from distributional assumptions could lead to
missing an important feature in any one class’s density. The proposed method is
quite fast compared to other supervised classiﬁers and very simple to implement as
there are no kernel tricks or initialization steps that greatly aﬀect the model, like the
kernel trick for SVM.
4.1
Introduction
The process of classiﬁcation involves deﬁning a system of placing a new observation
into a level of qualitative variable termed a class. The goal is to choose a system that
classiﬁes new observations into their true class as often as possible.
A nonparametric prior that includes the Dirichlet process as a special case is the
Polya tree prior (Lavine, 1992). The Bayesian nonparametric Polya tree has realized
impressive results in multiple testing (Cipolli et al., 2016), approximate and smoothed
density estimation (Cipolli and Hanson, 2016), and density estimation in Euclidean
space (Wong and Ma, 2010). The Polya tree prior was initially summarized by Fergu-
65

son (1974), and further developed by Lavine (1992, 1994), and Mauldin et al. (1992).
Hanson (2006) discusses inference for mixtures of ﬁnite Polya trees, which smooth
out the eﬀect of the partition on posterior inference. In much research regarding
Polya trees, however, only univariate data were considered. Paddock et al. (2003)
introduced a randomized multivariate Poyla tree which is smoothed over partitions
using a random “jitter;” Hanson (2006), rather, introduced a location-scale mixture
of Polya trees which directly generalizes the univariate mixture of Polya trees; Hanson
et al. (2008) used multivariate Polya trees to model receiver operating characteristic
(ROC) curves for evaluating diagnostic test accuracy; Jara et al. (2009) proposed us-
ing multivariate Polya trees in generalized linear mixed eﬀect models to remedy the
case when the assumption that random eﬀects terms follow a multivariate Gaussian
distribution is faulty; Hanson et al. (2011) developed a simple, computationally cheap
sampling method for exploring multivariate densities. Müller and Rodriguez (2013)
provide a nice summary of various versions of Polya trees.
Speciﬁcally, multivariate Polya trees are considered for use in a classiﬁcation
scheme with supervised learning. We marginalize Jara et al. (2009) making com-
puting fast and easy. Consider y ∈Y = {1, . . . , g} to be the class of an observation
with feature set x = {x1, . . . , xp} ∈Rp. Suppose we have data for g classes,
x11, x12, . . . , x1n1
x21, x22, . . . , x2n2
x31, x32, . . . , x3n3
...
xg1, xg2, . . . , xgng,
where each xyi is a p×1 observation vector of continuous observations corresponding
to class y ∈Y . The goal, then, is to classify a new p × 1 observation vector, x0, as a
member of one of the g classes.
66

In section 2, we provide a literature review of many popular supervised learning
classiﬁcation systems. Many of these classiﬁcation approaches make distributional
assumptions on the observations xyi, perhaps most infamously assuming each xyi is
drawn from a multivariate Gaussian distribution, i.e.
xyi ∼N(µy, Σy).
A more
ﬂexible approach can be obtained by changing the Gaussian, or any distributional
assumption for that matter, to the nonparametric multivariate Polya tree (Hanson,
2006). More speciﬁcally, observations xyi follow a multivariate Polya Tree distribution
centered at a multivariate Gaussian with mean µy and covariance matrix Σy.
The ﬂexibility gained from eliminating the distributional assumptions from our
analysis can greatly improve our ability to correctly classify a new observation; even
minor deviations from the distributional assumptions could lead to missing an im-
portant feature in any one classes’ density. This proposed speciﬁcation would not
only remedy the case where the all the classes’ distributions are not Gaussian but
also allows each level to have vastly diﬀerent densities from each other. The ability
of the Polya tree approach to pick out even slight deviations signiﬁcantly improves
classiﬁcation over a model that is assumption heavy particularly in the case when the
data signiﬁcantly deviates from those assumptions.
We introduce a supervised learning technique utilizing the Polya tree distribution.
We ﬁt the data with a multivariate Polya tree prior to each class y and use the
estimated multivariate density, fy(x), to classify a new feature vector x0 to the class
denoted as most likely by the conditional distribution of x given the training data
from each class through Bayes’ rule. The outcome for analysis with this model is
compared to other methods including nearest neighbor, naive Bayes, artiﬁcial neural
networks, and support vector machines.
67

4.2
Literature Review
There are many literature reviews and textbooks available on the topic of statis-
tical learning i.e. Duda et al. (2000) Hastie et al. (2001), Larrañaga et al. (2006),
Kotsiantis (2007), Mohri et al. (2012), and Alpaydin (2014). Below we brieﬂy sum-
marize techniques similar the one proposed herein and those classic approaches that
we compare results among.
4.2.1
Bayes’ Classiﬁer
Often used as a benchmark for comparison in simulation studies where the truth
is known, the Bayes’ classiﬁer minimizes test error on average. This classiﬁer assigns
each new observation to the most likely class via Bayes’ rule; for example, Bayes’
classiﬁer assigns a new p × 1 observation vector x0 into class
arg max
y
p(Y = y|X = x0) ∝arg max
y
p(Y = y)p(x0|Y = y) = arg max
y
πyfy(x0),
where fy(·) is the distribution of x given class y ∈Y and πy is the population
proportion of observations in class y ∈Y. Though this classiﬁer produces the lowest
average test error rate, it is impossible to use in practice since it is required to know
from what distribution the observations x are drawn across each class so that the
conditional probability can be evaluated for each new observation x0 as well as the
population proportion.
The test error for classifying X = x0 is the complement of the original rule, i.e.
1 −arg maxy πyfy(x0) and so the expected test error is
1 −E{arg max
y
πyfy(x0)}.
It should be noted that this error is usually not zero as the populations typically over-
lap in which case this can be considered irreducible error; hence the Bayes’ classiﬁer
is used as a benchmark.
68

4.2.2
Kernel Density Estimation Classiﬁers
Kernel density estimation classiﬁers use kernel density estimates of the underlying
probability density function to classify new observations x0 into the most probable
class Y . These estimates are then used as Bayes’ classiﬁers when it is the case that the
densities are unknown. There are many approaches but perhaps the most simple and
understandable case would be to use a histogram to estimate a univariate probability
distribution function. In this case we must choose the support to consider and the
bin size, noting that this will lead to a piecewise linear density estimate.
The smoothing process requires an appropriate choice of Kernel. There are many
choices of kernel, i.e. Epanechnikov, Tri-cube, Gaussian etc., to smooth out the points
to accommodate various requirements on support, continuity, and diﬀerentiability.
Perhaps more important than the Kernel selection is the bandwidth selection which
has a variance-bias tradeoﬀ: a larger bandwidth lowers variance with higher bias
whereas a lower bandwidth increases variance with lower bias.
A review of techniques of this type can be found in Izenman (1991), Ledl (2004),
Marzio and Taylor (2005), Mukhopadhyay and Ghosh (2011), Zambom and Dias
(2013), and Chapter six of Hastie et al. (2001).
4.2.3
Naive Bayes’ Classiﬁer (NB)
The naive Bayes’ classiﬁer model is also based on Bayes’ theorem and is very
closely related to the benchmark Bayes’ classiﬁer; the “naive” addition refers to the
added assumptions of conditional independence and not knowing the densities for
each class y. In order to calculate the class probabilities outlined above, when talking
about the Bayes’ Classiﬁer, we require a prior and likelihood.
In the case of the Bayes’ Classiﬁer we classify new observation x0 into group i that
maximizes the conditional probability from Bayes’ Rule. The naive Bayes’ classiﬁer
is developed via the following use of the “naive” independence assumption, fy(x0) is
69

calculated and new observation x0 is classiﬁed into class
arg max
y
πyfy(x0) = arg max
y
πy
p
Y
k=1
fyk(x0k),
where fyk(x0k) is the marginal density of x0k, the kth feature, under group y.
The population proportion of observations in group y = 1, . . . , g is estimated by
the sample proportions in the training data unless they are known to be otherwise and
the densities are estimated in a variety of ways, the choice of which largely depends on
the type of data being analyzed. For example, when dealing with continuous data it is
often assumed that each feature is drawn from a Gaussian distribution parameterized
by mean and variance estimated by the sample mean and variance calculated from
the training data; i.e. fyk(x0k) = N(xyk, s2
yk) where xyk is the sample mean and s2
yk
is the sample variance of the kth feature in group y as calculated from the training
data.
Rish (2001) provides a nice empirical study of the Naive Bayes’ Classiﬁer and
Jiang et al. (2007) provides a survey of improved versions of the Naive Bayes’ Clas-
siﬁer. Daumé III and Marcu (2005) introduce a Bayesian approach based on the
Dirichlet process prior, which is implemented via Markov chain Monte Carlo tech-
niques extending the standard naive Bayes’ classiﬁcation model to the case where the
number of classes is allowed to grow unboundedly.
4.2.4
Gaussian Process Classiﬁcation
Gaussian process priors are widely used models across diﬀerent ﬁelds, including
as a binary classiﬁcation method. The classiﬁcation model works by deﬁning latent
variables for feature sets x and modeling the posterior probabilities; in terms of
the Bayes’ Classiﬁer, the Gaussian process classiﬁer computes the class probabilities
by considering the probability of being in class y conditional on the deﬁned latent
variables.
70

A Gaussian process deﬁnes a distribution over functions; in terms of the Bayes’
classiﬁer we let γ = {γ1, . . . , γp} be random, latent function variables that correspond
to the set of inputs x = (x1, . . . , xp)′ where p(γ|x) has a multivariate Gaussian distri-
bution. For classiﬁcation, place a Gaussian process prior on fy(x0), as above, and use
a likelihood, e.g. a sigmoid function, to consider p(Y = y|X = x0). Since the choice of
likelihood is not Gaussian, integrating over γ to evaluate fy(x0) is intractable creat-
ing the need for approximating methods like Markov chain Monte Carlo (Atiya et al.,
2013), expectation propagation (Minka, 2001) or Laplace approximation (Williams
and Barber, 1998); several other approximation and sampling based methods are
summarized in Nickisch and Rasmussen (2008). Regardless of the method used for
approximation, new observation x0 is classiﬁed into class arg maxy πyfy(x0).
Rasmussen and Williams (2006) provides a review of theory and application of
Gaussian processes in supervised-learning for both regression and classiﬁcation from
both a Bayesian and frequentist point of view. This text reviews several approxima-
tion methods mentioned above as well as the issue of having to choose a covariance,
or kernel, function. It is also noted that Gaussian process classiﬁcation has many con-
nections to other well-known learning techniques, including support-vector machines,
neural networks, etc.
4.2.5
Dirichlet Process and Dirichlet Process Mixture Classiﬁcation Models
Shahbaba and Neal (2009) introduced a nonlinear model for classiﬁcation over two
or more classes, as well as over classes that have hierarchical structure. This approach
uses Dirichlet process mixtures with centering distribution G0 to nonparametrically
estimate the joint distribution of (Y, X) under the assumption that the covariates of
X are independent and that the dependence between Y and X can be modeled using
a linear model within each class.
They use a Gaussian mixture to model the covariates of X and a g−class multi-
nomial logistic model for the class variable Y . Each class in the mixture model has
71

parameters θ = {µ, σ2, α, β} and the distribution of X within each class is multivari-
ate normal with mean and diagonal covariance, µ and σ2 respectively. The full model
is: P ∼DP(αG0); θy|P ∼P; xyi|θy ∼N(µyi, σ2
yi). Finally, for a new observation x0
is classiﬁed into class
arg max
y
p(Y = y|x0, α, β) =
exp(αy + x′
0βy)
Pg
k=1 exp(αk + x′
0βk);
Note that the parameters αk are scalars and βk are p × 1 vectors of the GLM param-
eters.
Hannah et al. (2011) generalizes this by proposing a Dirichlet process mixtures of
GLMs, based on the Chinese Restaurant Process, which produces an asymptotically
unbiased estimate of the mean function given input-response pairs, (Y, X). That same
mean function is then used to map each new observation x0 to an average response,
or class. This approach generalizes the approach of Shahbaba and Neal (2009) to a
wider selection of response distributions.
4.2.6
Linear Discriminant Analysis (LDA)
LDA for discriminating between two classes was introduced by Fisher (1936) and
extended to multiple classes by Rao (1948). LDA constructs a classiﬁer based on a
linear combination of Gaussian distributed features that best separates two classes.
In this approach it is assumed that the observations across classes are independently
Gaussian distributed with diﬀerent means, µy, but a common covariance matrix, Σ.
Observations are classiﬁed by projecting data from a p-dimensional feature vector
onto an the line which best separates the samples from a probabilistic sense.
The idea is mathematically simple, computationally eﬃcient and still beats some
approaches. LDA, however, is quite inﬂexible as it makes many model assumptions
and though it works well when all the assumptions are met it typically underperforms
compared to other classiﬁcation techniques.
LDA is derived via Bayes’ rule:
p(Y = y|X = x) ∝fy(x)πy =
1
(2π)np
|Σ|
e(.5(x−µy)′Σ−1(x−µy))
72

where the population proportion of observations in group y = 1, . . . , g and Gaussian
parameters are estimated by the sample values in the training data. This reduces to
an LDA classiﬁcation that assigns new observation x0 to class
arg max
y
µyΣ−1x′
0 −.5µyΣ−1µ′
y + ln(πy).
4.2.7
Quadratic Discriminant Analysis (QDA)
QDA provides an extension to LDA by still assuming classes are independently
Gaussian distributed with diﬀerent means, µy, but relaxing the covariance assumption
to allow diﬀerent covariance matrices, Σy across groups. This classiﬁer is based on
a quadratic combination of features thus extending LDA by allowing the classiﬁer to
represent non-linear separations.
QDA shares the same beneﬁts as LDA as it is computationally eﬃcient and still
beats some algorithms when all the assumptions are met but some of the drawbacks
of LDA are mitigated because QDA assumes a more ﬂexible model. However, as
the number of predictors increases the computational expense of QDA increases;
while using LDA is less computationally expensive it can suﬀer bias if used when the
common covariance assumption is faulty. QDA works quite well when the sample
size is large, but if the training set is small LDA tends to work better as the added
assumption obtains estimates with lower variance. While QDA is more ﬂexible than
LDA it still makes many model assumptions compared to other models and though
it works well when all the assumptions are met it typically underperforms compared
to other, more advanced classiﬁcation techniques.
Similar to LDA, QDA is derived via Bayes’ rule:
p(Y = i|x) ∝fy(x)πy =
1
(2π)np
|Σy|
exp  .5(x −µy)′Σ−1
y (x −µy)
where the population proportion of observations in group y = 1, . . . , g and Gaussian
parameters are estimated by the sample values from the training data. This reduces
to a QDA classiﬁcation that assigns new observation x0 to class
arg max
y
log(|Σ−1
y |) + (x0 −µy)′Σ−1
y (x0 −µy) −2log(πy).
73

4.2.8
k Nearest Neighbor (KNN)
The k nearest neighbor approach, introduced by Cover and Hart (1967), is a
nonparametric method for classiﬁcation. Each observation is classiﬁed by considering
the k “nearest” points, as evaluated by some distance measure, and assigning the most
common class among these neighboring points to the new observation. This approach
uses a very simple, but crude method of estimating the conditional probability as
described in the Bayes’ classiﬁer section by using a popular vote of the nearest points.
In terms of the Bayes’ classiﬁer, k nearest neighbor assigns new observation x0 to
class arg maxy k−1 Pk
i=1 I(ysi = y) where s1, . . . , sn are a permutation of {1, . . . , n}
that enforce the order ||xs1 −x0|| ≤||xs2 −x0|| ≤· · · ≤||xsn −x0|| and I(Ysi = y)
is the indicator function which returns one if observation xsi is from class y and zero
otherwise. By ‘nearest’ we mean the ﬁrst k points where ||xi −x0|| is as small as
possible and || · || is Euclidean distance.
The model is ﬂexible in that the user can choose the number k and the distance
measurement. Euclidean distance is a popular choice but the user is free to deﬁne any
meaningful distance according to the problem at hand. The choice of k is slightly more
complicated. If k is too small the model is overly ﬂexible creating many boundaries
and if k is too large the boundary approaches a linear boundary. Solving this problem
is not very simple, but there are a couple approaches that lead us to reasonable
choices of k, in what follows take the empirical rule-of-thumb k = √n as in Duda
et al. (2000). There are many approaches to choosing k including simply choosing k
which minimizes cross validation test error or more complicated approaches such as
the Bayesian approach of Ghosh (2006) or using ensemble learning (Hassanat et al.,
2014).
The model is attractive because it is easy to understand, the implementation is
very simple, there is no training and it still achieves good results in basic recognition
problems. The issue is that it is quite sensitive to local structure in the data so it
74

struggles with noise. It is also quite computationally expensive particularly as sample
size grows because the distance between every two points must be calculated. Dudani
(1976) introduced a distance weighted nearest neighbor approach where neighbors are
weighted so that nearer observations bare more weight on the classiﬁcation.
4.2.9
Random Forest (RF)
The random forest model is an ensemble method that combines predictions made
by multiple decision trees. The idea was ﬁrst introduced by Ho (1995) and then,
a later version, by Breiman (2001) which is the model we use in Section 4. The
random forests model is a way of averaging multiple decision trees, built randomly by
considering a random sample of predictors at each split in the tree instead of the full
set. By introducing this methodology the random trees are far less correlated than
the trees produced by bagging (Breiman, 1996), which leads to a reduction of the
variance, compared to binary trees, at the expense of bias and interpretability. The
training is done in a divide and conquer fashion and to generate a prediction a vote
among all the underlying trees takes place and the majority prediction value wins.
In terms of classiﬁcation, the random forest model assigns new observation x0
to class arg maxy t−1 Pt
j=1 I(fj(x0) = y) where fj(x0) returns the classiﬁcation from
decision tree j and I(·) is an indicator function which returns 1 if decision tree j
determines x0 is from class y and 0 otherwise.
The random forest model has become popular because deep trees can learn highly
irregular patterns, even with much noise, quite quickly. This approach is also able to
deal with unbalanced or missing data and is does surprisingly well with small sample
sizes. Random forests cannot, however, predict for features beyond the range in the
training data which aﬀects generalization and are diﬃcult to interpret.
75

4.2.10
Artiﬁcial Neural Networks (ANN)
During the last couple decades ANN has been extensively researched. Below we
provide some history and the general idea but many literature reviews, i.e. Anderson
and Rosenfeld (1988), and textbooks, i.e. Yegnanarayana (2004) and Rojas (1996),
thoroughly explore the theory and application of ANN.
ANN is inspired by attempts to simulate biological neural systems by a connected
system. The ﬁrst artiﬁcial neuron was produced by Mcculloch and Pitts (1943) but
the technology available at that time hampered further research and application.
This approach was limited to modeling logical expressions, like the mathematical
“or,” for binary inputs and output. Later, the ﬁrst successful applications were in
the form of neuro-computers, i.e. the Mark I perceptron (Rosenblatt, 1958), ADA-
LINE (Widrow and Hoﬀ, 1960) and MADALINE (Widrow, 1962). After a period of
inactivity, largely due to the critique of Minsky and Papert (1969) who pointed out
the methods inability to learn the “exclusive or” logical expression, Werbos (1981)
founded back propagation which reinvigorated and propelled ANN research.
Current ANN methods provide a ﬂexible, nonparametric approach that do not
require any assumptions on the model’s structure before application and are capable of
modeling highly nonlinear systems. The ﬂexibility of this model allows users to model
practically any dataset including applications with multiple simultaneous outputs.
These attributes make ANN very popular for applications research and in industry
as ANN can be used to recognize patterns and that are too complex and noisy to be
realized by other approaches. ANN generally does quite well in discovering patterns,
however there are cumbersome tasks to ensure it does well; one needs to select an
activation function, the number of hidden layers, the number of nodes in each layer
and the weights on the edges that connect them. As the training sample size and the
dimensions increase an ANN can quickly become quite computationally intractable -
sometimes taking weeks to ﬁnish training.
76

The structure of a basic ANN is represented by a connected graph and consists
of three layers - an input layer, a hidden layer and an output layer.
The input
layer consists of p nodes, one for each dimension of the feature set, and the output
layer has g nodes, one for each class.
Karsoliya (2012) discusses the selection of
the number of nodes in the hidden layer but a rule of thumb is to take 2d/3 hidden
nodes. For calculation feasibility most applications use one hidden layer but increased
computation ability has led to deep learning algorithms which use many hidden layers;
Schmidhuber (2015) provide a nice summary of more advanced models such as the
multilayer ANN, recurrent ANN and deep learning which allow for more complex
relationships between the input and output layers making this contribution to research
quite important.
In terms of the classiﬁcation, the ANN model assigns new observation x0 to class
arg maxy fy(x0) where fy(x) is the ﬁtted value of x0 or output for group y; i.e. x0 is
classiﬁed into the group associated with the largest valued output node.
While many consider ANN to be one of the most ﬂexible models, it creates a sort
of hazard; ANN can be applied to any problem including those which we may not
know very much about. The results from ANN must be very carefully interpreted
and compared to expert knowledge because it is a black box learner, meaning one
cannot interpret the relationship between any input and output through the model.
This is particularly important because ANN can suﬀer from overﬁtting and can only
guarantee local optima.
4.2.11
Support Vector Machines (SVM)
During the last few decades SVM has been extensively researched.
Below we
provide some history and the general idea but many literature reviews, i.e. Burges
(1998), and text books, i.e.
Steinwart and Christmann (2008) and Ma and Guo
(2014), thoroughly explore the theory and application of SVM.
77

The generalized portrait algorithm was introduced by Vapnik and Lerner (1962)
and Vapnik and Chervonenkis (1963); this idea was extended to linear SVM by Vapnik
(1979). Boser et al. (1992) generalize SVM further to the case where the separation is
non-linear by using a kernel trick where it is argued that the kernels can be interpreted
as inner products of an expanded feature space, geometrically; Scholkopf and Smola
(2001) provide a nice summary of SVMs and associated kernel methods.
SVM searches for and constructs hyperplanes which separate the training data by
as much as possible and then uses the hyperplanes as a boundary for classiﬁcation.
This is delightfully simple when datasets are linearly separable and in the case where
the separation is nonlinear one can utilize the kernel trick to map the feature set to
some higher-dimensional feature space where the training set is separable. SVM is
widely praised as the best “out of the box” classiﬁer as it generally classiﬁes very
well. It should be noted that as the training sample size and the dimensions increase
a nonlinear SVM can quickly become computationally intractable and that this com-
putational cost continues during the test stage. Another drawback is for data that
is not linearly separable as it’s necessary to select a sophisticated kernel function to
employ and to determine reasonable tuning parameters; incorrect choices of kernel
can lead to signiﬁcantly higher classiﬁcation error as seen in the simulations and data
analysis in Section 4.
When data is linearly separable hard-margin (Boser et al., 1992) is used for classi-
ﬁcation. Geometrically hard-margin is designed to ﬁnd two parallel hyperplanes that
separate the data such that the distance between the two hyperplanes, δ, is maxi-
mized. Consider the case where we have two classes y1 = −1 and y2 = 1. We can
compute two parallel hyperplanes (w′x+b) = 1 and (w′x+b) = −1 with the distance
between them δ = 2/||w||. The hard-margin problem reduces to ﬁnding w and b that
minimizes ||w|| constricted to the data being linearly separable, i.e. y(w′x + b) ≥1.
Finally, x0 is classiﬁed into y1 if (w′x0 + b) < 0 and y2 if (w′x0 + b) > 0.
78

Alternatively, when the separation is non-linear, soft-margin (Cortes and Vapnik,
1995) is used for classiﬁcation.
Similarly we start with two parallel hyperplanes
(w′x+b) = 1 and (w′x+b) = −1 with slack variables ϵi ≥0 that represent the distance
from a misclassiﬁed observation to the hyperplanes separating its true class. The soft
margin problem reduces to ﬁnding w and b that minimizes ||w|| + C PR
k=1 ϵk where
C is a parameter that controls overﬁtting and there are R misclassiﬁed observations,
i.e. y(w′x + b) ≥1 −ϵ. Note that for small values of C soft-margin acts like hard-
margin and large values of C can cause overﬁtting. Finally, x0 is classiﬁed into y1 if
(w′x0 + b) < 0 and y2 if (w′x0 + b) > 0. On using a kernel function κ this decision
rule is altered to classify x0 into y1 if (w′κ(x0) + b) < 0 and y2 if (w′κ(x0) + b) > 0.
There are many papers that explore the extension to multiple classes. Hastie and
Tibshirani (1998) suggest pairwise coupling and a summary of other methods is given
by Duan and Keerthi (2005).
4.3
Models
Hanson (2006) and Hanson et al. (2008) discuss multivariate mixtures of ﬁnite
Polya trees and a p-dimensional location-scale mixture that is a direct generalization
of the univariate ﬁnite location-scale mixture. For each level j of the Polya tree we
partition Rd into 2jd partitions; denote the partition at level j as Πj
θ. Consider data
uniformly distributed on the unit square centered at the origin; with p = 2 take
quaternary splits to make 4j partitions for each level j = 1, 2, 3. The ﬁrst split is
the usual x and y axes of the Cartesian coordinate system making four partitions on
level j = 1, sixteen on level j = 2, sixty four on level j = 3. Figure (4.1) shows this
partitioning using decreasing line-widths for each level j so one can see the window-
pane-eﬀect.
These partitions sets within Πj
θ are given by:
B(j; k) = (Φ−1((k1 −1)/2j), Φ−1((k1)/2j)) × . . . × (Φ−1((kd −1)/2j), Φ−1((kd)/2j))
79

Figure 4.1: Polya tree partitions in R2 for data uniformly distributed on the unit
square centered at the origin
for vectors k = [k1, k2, . . . , kd] such that ktϵ[1, 2, . . . , 2j] for t = 1, . . . , d; where Φ−1(·)
is the inverse cumulative distribution function for a standard normal. Note that the
2jd intervals B(j; k) partition Rd up to a set of Lebesgue measure zero.
A Polya tree is centered at the multivariate Gaussian with mean vector µy and
covariance matrix Σy which are estimated via empirical Bayes’ estimates for each
group y. We calculate which partition set, B(j; ·), each observation, xi lies on at
each level j using the following rij = Pd
p=1 2j(p−1)⌊2jΦ(zip)⌋, where r is a ny × J + 1
matrix; zi = Σ−1/2
y
(xi −µy) is the centered and scaled version of the ith feature set;
zip is the pth dimension of zi; Φ is the standard Gaussian CDF; ⌊.⌋is the usual ﬂoor
function; and rij gives the numbered partition that xi lies on. For j = 0 set ri0 = 0.
For a new observation x0 the conditional probability on each group y = 1, . . . , g
80

is
py(x0|xy1, . . . , xyny, µyk, Σyk, cy) = φd(x0)
J
Y
j=1
2dcyj2 + 2dn(j, k(j, x0)|xy1, . . . , xyny)
2dcyj2 + n(j −1, k(j −1, x0)|xy1, . . . , xyny),
where cy is the parameter that controls how “close” the Polya tree is to its centering
distribution, i.e. the multivariate Gaussian distribution, and J is the number of levels
of the ﬁnite tree. Hanson (2006) suggests taking J = ⌈log2d(ny)⌉for each group. To
choose cy consider the predictive density of ith observation of group y, xyi, given all
the observations up to that point xy{1:i−1} = xy1, . . . , xy(i−1), µy, Σy and cy. This is
denoted
p(xyi|xy{1:i−1}, cy, µy, Σy) =
J
Y
j=1
2dj2cy + 2dn(j, k(j, xi, xy{1:i−1})
2dj2cy + 2dn(j −1, k(j −1, x, xy{1:i−1})φd(x|µy, Σy).
To choose cy, take
cy = arg max
cy>0
ny
Y
i=1
p(xi|xy{1:i−1}, cy, µy, Σy) = arg max
cy>0 p(xy1, . . . , xyny|cy, µy, Σy),
computationally it is quick and simple to check and choose the maximum over the
interval from .01 to 100 by .01 increments.
The multivariate density estimate provided by the Polya tree is a bit blocky -
extending the concern of spikiness in univariate density estimation of the Polya tree
to the p-dimensional case. In the two-dimensional case the bivariate density estimate
is boxy where the bivariate heat map of the density suﬀers from a “window pane
eﬀect” where the expected smoothness is lost; this is not dissimilar to the smoothness
lost using a bivariate histogram. There are two routes for smoothing by averaging
density estimates across rotations. Givens rotations (Golub and Van Loan, 1996) are
useful in high dimensions but require MCMC and extensive computation. Another
option is to simply consider only a handful of square roots, maybe just two, e.g.
Σ−1/2
y1
= VλV′ and Σ−1/2
y1
= Vλ, where V is the matrix of eigenvectors and λ is the
diagonal matrix of eigen values λ1, . . . , λd of the sample covariance as calculated from
the training data. We opt for the latter since it is computationally less expensive and
can, in many cases, do about the same as the former.
In terms of the Bayes’ classiﬁer, classiﬁcation is completed by assigning x0 to
group
arg max
y
2
X
k=1
πypyk(x0|xy1, . . . , xyny, µyk, Σyk, cy),
81

where pyk(·) is the conditional probability on each group y = 1, . . . , g for each square
root Σyk, k = 1, 2.
4.4
Illustrations
Below “Polya” refers to the proposed methodology, “SVMlin” is the SVM method-
ology with a linear kernel, “SVMrad” is the SVM methodology with a radial basis
function kernel,“SVMpoly” is the SVM methodology with a polynomial kernel, and
“SVMsig” is the SVM methodology with a sigmoid kernel; all SVM versions are ﬁt
using the e1071 package (Meyer et al., 2015) for the programming language R (R
Core Team, 2014). KNN is ﬁt using the FNN package (Beygelzimer et al., 2013), LDA
and QDA are ﬁt using the MASS package (Venables and Ripley, 2002), ANN is ﬁt
using the nnet, (Venables and Ripley, 2002) and RF is ﬁt using the randomForest
package (Liaw and Wiener, 2002) for R.
4.4.1
Red or Blue States
Florida (2011) explores associations to assess how income, education and other
factors inﬂuence the propensity for international travel. To complete this task me-
dian income, the percent of a population with a bachelor’s degree and several other
variables for each state are considered and the correlation between them and passport
ownership is used to argue whether or not there are any associations.
A classiﬁcation-minded extension to the analysis of Florida (2011) is to consider
classifying states as Democrat or Republican based oﬀsimilar data. There is promi-
nent coverage of this cycle’s primary election in the United States at the time of
writing making this a timely and interesting example! In the following analysis, the
variables that make up a ﬁve-dimensional feature set are the percentage of the popula-
tion who have received a passport between 2009 and 2015 (United States Department
of State Bureau of Consular Aﬀairs, 2015); median income, using a three year aver-
82

age, from 2011 to 2013, in 2013 inﬂation adjusted US Dollars (United States Census
Bureau, 2014); the percent of the population with a Bachelor’s Degree or higher in
2010 (United States Census Bureau, 2010); federal funding per US dollar of taxes
paid in 2005 (Tax Foundation, 2007); and the percent of foreign born residents (Mi-
gration Policy Institute, 2014); for each state. The classes, Democrat or Republican,
are decided by how each state voted in the last ﬁve presidential elections (National
Archives and Records Administration, 2012), i.e. if a state voted Republican three
out of ﬁve times that state is classiﬁed as Republican.
Table 4.1: Numerical summaries for the feature set.
Group
% Passport
Median Income
% Bachelor or more
Funding per Dollar
% Foreign
Overall
0.2495
52.5166
.2749
1.1698
0.0904
Democrat
0.2899
55.8925
.2968
0.9721
0.1210
Republican
0.2122
49.4004
.2547
1.3523
0.0621
Figure 4.2: Bivariate scatterplots and correlations for the data.
Through the elementary statistical summaries above we see that there are dif-
ferences among states that vote for either party. The Republican states, as labeled,
have lower median incomes, accept more federal funding per dollar of tax paid, have
a lower proportion of residents who have received a passport between 2009 and 2015,
a lower proportion of residents who are foreign, and a lower proportion of residents
83

who hold at least a bachelor’s degree. Though there are diﬀerences in the numerical
summaries, Figure 4.2 shows there is much overlap of the two populations.
There are two classes of observations and the feature set is ﬁve-dimensional. The
goal is to predict whether a state is Republican or Democrat based on the ﬁve features
described above. In a ten-fold cross validation analysis, the proposed methodology
has an error rate of 0.2506 which is slightly lower than the next best classiﬁers SVM
with a radial basis function kernel and Naive Bayes’ which tied with an error rate of
0.2607.
4.4.2
Iris Data
The iris dataset is a classic dataset for classiﬁcation introduced by Fisher (1936).
There are three classes of observations and the feature set is four-dimensional. The
goal is to predict the species of iris based on its four features: the length and width of
the sepals and petals. In a ten-fold cross validation analysis, the proposed methodol-
ogy has an error rate of 0.0167 which ties both LDA and QDA as the best classiﬁers;
SVM with a linear kernel and KNN were closely behind with a slightly higher error
rate of 0.0222.
4.4.3
Titanic Data
A dataset that has enjoyed a recent increase in analyses, largely due to its Kag-
gle competition and recent updating, is the Titanic survival dataset. There are two
classes of observations and the feature set is two-dimensional consisting of the contin-
uous predictors. The goal is to predict whether or not a passenger survived based on
two continuous features the age and fare; note there are other qualitative predictors
which are left out of this analysis. In a ten-fold cross validation analysis, the proposed
methodology has an error rate of 0.316 which was second to SVM with a radial basis
function kernel which had a slightly lower error rate of 0.3145.
84

4.4.4
Classiﬁcation Maps and Performance Over Varying Sample Sizes
In the following classiﬁcation example consider the usual bivariate Gaussian den-
sity with µ = (0 0)′ and covariance matrix Σ = cI2 where scalar c = 5 and I2 is the
2 × 2 identity matrix for class one and for class two a dog-bowl shaped density given
by:
f(x, y) = (2π)
−3
2  x2 + y2 −1
2 e

1
2
 √
x2+y2−102
.
A ten-fold cross validation analysis yielded error rates of 0.1091, 0.0746, 0.0462
and .0400 when analyzing this simulated case with samples sizes of n = 50, 250, 500,
1000 respectively. As the sample size increases the error rates noticeably decrease
which is a direct result of the proposed method’s increased ability to estimate the
bivariate density as seen in Figure 4.4. We also see that the classiﬁcation map provides
a ﬂexible boundary in Figure 4.3.
Figure 4.3: Classiﬁcation maps for various methods for n=500.
4.4.5
Machine Learning Benchmarks
Leisch and Dimitriadou (2015) provide a repository of machine learning bench-
mark problems in the mlbench package for R. Below, in Table 4.2, the results on
several artiﬁcial machine learning problems are reported using the proposed method-
ology and several standard approaches. In each simulated case, n = 400 data points
85

Figure 4.4: Bivariate density estimates for the two classes across samples sizes. Top
left, top right, bottom left and bottom right show density estimates for both bivariate
distributions for n = 50, 250, 500, and 1000 respectively.
are sampled for each class one hundred times and each method is evaluated using the
average ten-fold cross validation error rate across the one hundred simulations.
“2dnormals” refers to the case where data consists of two-dimensional Gaussians
with unit covariance and g classes, the centers of which are equally spaced on a circle
around the origin with radius related to g. Speciﬁcally the radius was set to the
square root of the number of classes. i.e. data with more classes have a larger radius.
“Threenorm” refers to the case where data consists p-dimensional Gaussians and
two classes. The ﬁrst class is sampled from a multivariate Gaussian with identity
covariance and mean vector (µ1, . . . , µp) with each µi = 2/√p and the second class is
drawn from a multivariate Gaussian with identity covariance matrix and mean vector
(µ1, −µ2, µ3, . . . , µp) for p odd and (µ1, −µ2, µ3, . . . , −µp) for p even.
“Circle” refers to the case where data consists of p dimensions and two classes.
86

The ﬁrst class is a circle in p = 2 dimensions and a p-dimensional sphere for p > 2.
The second class is a square around the ﬁrst class in p = 2 dimensions and a p-
dimensional cube around the ﬁrst class for p > 2. This is considered for a circle,
sphere, and hypersphere.
“Spiral” refers to the case where data consists of two dimensions and two classes.
The two classes are entangled spirals with added noise to each data point. Here the
noise was drawn from a zero-mean Gaussian distributions with standard deviation
σ = 0.15.
“XOR” refers to the case where data consists of two dimensions and two classes.
The data make up a square, centered at the origin, with corners at ±1. The ﬁrst
class is uniformly distributed on the square in the ﬁrst and third quadrants and the
second class is uniformly distributed on the second and fourth quadrants.
“Simplex” refers to the case where data consists of three dimensions and four
classes. Each class is sampled from a three-dimensional Gaussian with standard de-
viation σ = .1 and means from the corners of a three-dimensional simplex. A simplex
is the generalization of a tetrahedral region of space; a simplex in one dimension is a
line segment, in two dimensions is the convex hull of an equilateral triangle, and in
three dimensions is the convex hull of tetrahedron, a polyhedron with four triangular
faces.
“Cuboids” refers to the case where the data consists of three dimensions and four
classes. Three classes are uniformly sampled from three, three-dimensional cuboids
and the fourth is uniformly distributed on a small cube in the middle of the three
cuboids.
“HyperCube” refers to the case where the data consists of three dimensions and
six classes. The three classes are sampled from three-dimensional Gaussians with
standard deviation σ = .1 and means from the corners of a cube in three dimensions.
“Cassini” refers to the case where the data consists of two dimensions and three
87

classes.
Two classes are uniformly sampled from two bean shaped areas in two-
dimensional space and the third class is uniformly sampled from a circular area be-
tween them.
“RingNorm” refers to the case where the data consists of two dimensions and
two classes. The ﬁrst class is sampled from a zero-mean multivariate Gaussian with
covariance 4I and the second class is sampled from a zero-mean multivariate Gaussian
with identity covariance matrix. In this case, it is expected that the second class is
contained within the ﬁrst class.
“Two Norm” refers to the case where the data consists of p dimensions and two
classes. The ﬁrst class is sampled from a multivariate Gaussian with mean vector
(µ1, . . . , µp) with each µi = 2/√p and the second class is drawn from a multivariate
Gaussian with unit covariance and mean vector (−µ1, . . . , −µp).
“Waveform” refers to the case where the data consists of twenty one dimensions
and three classes. Each class is generated from a combination of two of three “base”
waves as in Breiman (1996).
“Shapes” refers to the case where the data consists of two dimensions and four
classes. The ﬁrst class is uniformly distributed across a triangle in the ﬁrst quadrant;
the second class is bivariate Gaussian in the second quadrant; the third class is
uniformly distributed across a square in the third quadrant; and the fourth class is
uniformly distributed over a wave function in the fourth quadrant.
“Smiley” refers to the case where the data consists of two dimensions and four
classes: left eye, right eye, nose and mouth.
The ﬁrst two classes are bivariate
Gaussian with standard deviation σ = 0.5 and make up the eyes of the smiley face;
the third class is uniformly distributed over a trapezoid for the nose; and the fourth
class is a parabola for the mouth with vertical Gaussian noise with zero-mean and
standard deviation σ = 0.5.
Also considered are the following real-world problems included in this package.
88

For the real-data analyses a single 10-fold cross validation error rate is provided.
“Breast Cancer” refers to data on n = 683 cells from the Wisconsin Breast Can-
cer Database (Wolberg and Mangasarian, 1990). The nine-dimensional feature set
includes observations of clump thickness, uniformity of the cell size, uniformity of the
cell shape, marginal adhesion, single Epithelial cell size, bare nuclei, bland chromatin,
normal nucleoli, and mitoses. The goal is to identify new cells as benign, or cancer
free, or alternatively malignant, or cancerous.
“Ionosphere” refers to data on n = 351 initially analyzed by Sigillito et al. (1989).
Each observation is derived from radar data collected in Goose Bay in the Canadian
province of Newfoundland and Labrador. The thirty one-dimensional feature set con-
sists of measurements on signals received on sixteen antennas over seventeen pulses.
In the original data there were two readings per pulse, meaning thirty-four observed
readings, but just thirty-one are considered here as three readings were zero for many
of the observations. The goal is to identify which observations are “good,” meaning
the observations intimate evidence of some structure in the Ionosphere and which are
“bad,” meaning the observations don’t evidence of some structure in the Ionosphere.
“Letter Recognition” refers to data on n = 20, 000 unique pixel representations
of capital letters initially analyzed by Frey and Slate (1991). Each observation is a
black and white rectangular display pixel by pixel of one of twenty six capital letters
from the English alphabet with added noise to provide unique observations. Each
display is summarized by a sixteen-dimensional feature set which includes statistical
summaries, i.e. mean, variance, correlation etc. and edge counts both left to right
and top to bottom. The goal is to identify the letter of new observations based on
the observed feature space.
“Pima Indians” refers to data on n = 392 Pima Indians initially analyzed by
Wahba et al. (1993). The eight-dimensional feature set includes the number of times
a participant is pregnant, as well as seven other measurements on the participant
89

including age, plasma glucose concentration level, diastolic blood pressure, triceps
skin fold thickness, two hour serum insulin, body mass index (BMI), and diabetes
pedigree function assessment which represents how likely the participant is to get the
diseased based on ancestor’s history. The goal is to identify whether or not a new a
cell is benign, a cancer free growth, or malignant, a cancerous growth based oﬀof its
observations.
“Satellite” refers to data on n = 6, 435 neighborhoods in a satellite image. Each
observation corresponds to a 3 × 3 square neighborhood of pixels within the satellite
image. The thirty six-dimensional feature set is comprised of pixel values in four
diﬀerent spectral bands for each of the nine pixels in each 3 × 3 square. The goal is
to identify the soil type of a 3 × 3 square via the feature set. The classes are red soil,
cotton crop, grey soil, damp grey soil, soil with vegetation stubble and very damp
grey soil.
“Sonar” refers to data on n = 208 observations of sonar signals bounced oﬀof a
metal cylinder or rock as in Gorman and Sejnowski (1988). The sixty-dimensional
feature set is comprised of sixty energy measures on diﬀerent frequency bands over
time. The goal is to identify new observations as sonar bounced oﬀmetal or sonar
bounced oﬀrock.
“Vehicle” refers to data on n = 846 observations of vehicle silhouettes initially
analyzed by Siebert (1987). The eighteen-dimensional feature set includes various
measurements of compactness, circularity, rectangularity, length and statistical sum-
maries, i.e. variance, skewness, kurtosis etc. The goal is to identify the vehicle type of
new observations based on the observed feature space. The four vehicle used in this
experiment are a Saab 9000 (full size), an Opel Manta 400 (sports car), Chevrolet
van (van), and a double decker bus (bus).
“Vowel” refers to data on n = 990 observations of the speech coding of eleven
steady state vowels of British English. The ten-dimensional feature set includes nine
90

speech coding measurements, via LPC derived log area ratios. The goal is to identify
the vowel type of new observations based on the observed feature space.
Table 4.2 shows the results for all the simulation and data analysis problems
as described above.
The proposed methodology keeps test error relatively low in
the extensive simulation and application here; this is particularly the case when
considering classes drawn from d-dimensional Gaussians. The supervised Polya tree
approach places in the best three models, among those considered, in terms of error
rates for many of the problems described above. When any of the classes are drawn
from distributions that strongly deviate from Gaussian, the ﬂexibility of the proposed
methodology still does well, often staying within a few percentage points of the best
model with two exceptions; both exceptions deal with the “circle” scenario. The ﬁrst
exception is in three dimensions where the ﬁrst class is a sphere and the second class
is a cube with the sphere cut out of the middle. The second exception is in four
dimensions where the ﬁrst class is a hypersphere and the second class is a hypercube
with the hypersphere cut out of the middle.
The Polya tree centered at the d-
dimensional Gaussian has trouble capturing the classes from the three-dimensional
cube and four-dimensional hypercube. A simple solution to this problem is to instead
use a Polya tree centered at the d-dimensional uniform distribution which would
greatly decrease the reported error rate.
91

Table 4.2: Errors for cross validation classiﬁcation.
Data
p
g
Polya
KNN
SVMlin
SVMpoly
SVMrad
SVMsig
ANN
LDA
QDA
RF
NB
2dnormals
2
3
0.1162
0.1234
0.1167
0.1333
0.1174
0.1747
0.1187
0.1162
0.1161
0.1317
0.1163
2dnormals
2
6
0.2195
0.2360
0.2197
0.2415
0.2207
0.3352
0.2210
0.2193
0.2197
0.2515
0.2195
threenorm
2
2
0.1342
0.1148
0.1615
0.1704
0.1078
0.2567
0.1124
0.1617
0.1141
0.1213
0.1136
threenorm
3
2
0.1478
0.1269
0.1698
0.1735
0.1204
0.2631
0.1277
0.1697
0.1266
0.1305
0.1433
circle
2
2
0.0592
0.0332
0.4634
0.3893
0.0211
0.4843
0.0195
0.4810
0.0811
0.0331
0.0793
circle
3
2
0.3129
0.1026
0.4686
0.3915
0.0376
0.4465
0.0741
0.4863
0.0944
0.0757
0.0852
circle
4
2
0.3823
0.1539
0.4799
0.4239
0.0420
0.4653
0.1726
0.5132
0.1140
0.1058
0.0961
spiral
2
2
0.4218
0.3494
0.5653
0.4860
0.6676
0.5513
0.6384
0.5690
0.6408
0.4330
0.6359
XOR
2
2
0.0428
0.0303
0.4282
0.4417
0.0275
0.5148
0.0221
0.4916
0.0275
0.0039
0.4911
simplex
3
4
0.0000
0.0000
0.0000
0.0000
0.0000
0.0000
0.0005
0.0000
0.0000
0.0001
0.0000
cuboid
3
2
0.0000
0.0000
0.0000
0.0000
0.0000
0.0000
0.0001
0.0000
0.0000
0.0000
0.0000
hypercube
3
6
0.0000
0.0000
0.0000
0.0000
0.0000
0.0000
0.0009
0.0000
0.0000
0.0000
0.0000
cassini
2
3
0.0001
0.0000
0.0053
0.0120
0.0000
0.2925
0.0020
0.0040
0.0002
0.0005
0.0002
ringnorm
2
2
0.2427
0.2727
0.3346
0.4024
0.2484
0.4393
0.2511
0.3595
0.2429
0.2834
0.2430
twonorm
2
2
0.0226
0.0242
0.0230
0.0293
0.0232
0.0234
0.0279
0.0226
0.0227
0.0269
0.0227
twonorm
3
2
0.0226
0.0245
0.0233
0.0266
0.0236
0.0231
0.0307
0.0225
0.0227
0.0270
0.0227
twonorm
6
2
0.0227
0.0256
0.0238
0.0253
0.0245
0.0232
0.0359
0.0228
0.0234
0.0282
0.0224
waveform
21
3
0.1714
0.1709
0.1519
0.1584
0.1500
0.1744
0.1881
0.1576
0.1716
0.1549
0.1961
shapes
2
4
0.0001
0.0000
0.0000
0.0005
0.0000
0.0000
0.0001
0.0000
0.0001
0.0000
0.0001
smiley
2
4
0.0797
0.0850
0.1030
0.1666
0.0824
0.1399
0.0790
0.1323
0.0838
0.0744
0.0836
Breast Cancer
9
4
0.0432
0.0318
0.0331
0.0447
0.0331
0.0401
0.0559
0.0418
0.0502
0.0287
0.0387
Letter Recognition
16
4
0.1088
0.0499
0.148
0.103
0.0513
0.5264
0.7946
0.2973
0.1145
0.0322
0.358
Pima Indians
8
4
0.2314
0.2635
0.2293
0.2391
0.239
0.2805
0.3313
0.2219
0.2193
0.2196
0.2314
Satellite
36
4
0.1573
0.1229
0.146
0.1491
0.1171
0.3057
0.635
0.1711
0.1609
0.1013
0.2127
Sonar
60
4
0.3363
0.4449
0.3667
0.3227
0.3307
0.3245
0.3053
0.3931
0.3363
0.2699
0.3831
Vehicle
18
4
0.144
0.3689
0.1954
0.2639
0.2166
0.4855
0.7006
0.2133
0.1452
0.2474
0.5317
Vowel
10
4
0.4436
0.3836
0.4889
0.4085
0.2926
0.6785
0.5267
0.5113
0.4426
0.3241
0.5113
Ionosphere
31
4
0.1222
0.184
0.1792
0.2544
0.0511
0.1862
0.1305
0.1681
0.1195
0.0615
0.1968
92

4.5
Discussion
The proposed supervised learning procedure using Polya trees is very successful
in correctly classifying observations in a variety of scenarios. This approach is com-
putationally eﬃcient and can handle a large number of classes. The ﬂexibility of
this model is displayed through the data analyses and simulations of Section 4 where
classiﬁcation in various settings covering a variety of dimensions, sample sizes and
number of classes were successful.
The performance of classiﬁcation was evaluated using ten-fold cross validation
which was kept low during simulation and data analysis.
A nice aspect of the
methodology is that it is computationally eﬃcient and it is capable of providing
an approximation of the d-dimensional density even in the case when the density is
non-Gaussian. The error rates are still kept relatively low for small sample sizes but,
as noted in Section 4, the model does require moderate sample sizes to yield decent
density estimates.
93

Chapter 5
Future Work
5.1
Improved Bayesian Multiple Testing
As seen in Chapter 2 the discrete approximation to a Polya tree prior performed
well for multiple testing and estimation of the non-null distribution. A simple im-
provement on the suggested model in Chapter 2 is to make the Polya tree median-m
instead of median-zero. In the motivating example of DNA microarray data, gene
expression values tend to move in congress, meaning that the change in expression
values across genes is often not median-zero. Previously, we needed to check the data
and shift it to be median-zero before analysis; using topics in Chapter 3 we can add m
to the list of values to update during MCMC sampling and center the Polya tree at m
thus avoiding the need for median-zero data. The information of how the data moves
in congress, i.e. the median change from zero, may be of importance to scientists as
well.
Going forward, with Chapter 3 in mind, we can attempt to utilize the smooth-
ing techniques introduced to smooth the non-null density estimation which tends to
be quite spiky. The ability to better estimate the non-null density is obviously an
improvement in its own right, but this improved density estimate should play a key
role in the ﬁnal proposed improvement. The last concern about this approach is that
to ﬁnd “interestingly diﬀerent” observations one has to provide speciﬁc prior infor-
mation. In many cases trusted expert information is available but it is sensible that
scientists may hesitate to trust the results of a model that, in a sense, allows the user
94

to decide what “interestingly diﬀerent” observations are through their speciﬁcation
of a prior on w. To improve upon the approach suggested in Chapter 2 we propose
another user input ψ which designates a nominal diﬀerence in gene expression that a
scientist might ﬁnd “interesting.” Through this we will need to change the method-
ology from testing point mass at zero to testing the interval A = (m −ψ, m + ψ),
where units deemed to be an element of this interval are not “interestingly diﬀerent.”
These improvements should make the model more ﬂexible, easier to trust, and lead
to better non-null density estimation. The most compelling part of these changes is
that we extend the multiple testing for point mass at zero methodology to multiple
testing for an interval without the adaptive methodology initially proposed. These
compelling improvements will be best displayed when we compare our models multiple
testing for an interval to our approximation for the model of Scott and Berger (2006)
with the same extension; when testing point mass at zero inaccurately estimating the
non-null distribution actually does not always have a very big impact on the ability
to keep the combined rate of false discoveries and non-discoveries small. When the
problem is extended to testing an interval the non-null density estimation becomes
more important.
To see this, consider the simulation where the means follow a skewed, bimodal,
median-zero mixture of two Gaussians from Section 2.6.2. Our previously suggested
solution does a very good job with multiple testing and density estimation for the
non-null distribution when testing point mass at zero. We notice, however, that the
approach provided by Scott and Berger (2006) which assumes the means follow a
Gaussian distribution does comparably well even though the means follow G2 which
is decidedly not Gaussian, not even close. Scott and Berger (2006) yield a Gaussian
non-null density estimate superimposed over the actual bimodal distribution; which
has a similar estimate at zero allowing their density estimation miss to not be a
malady when testing point mass. We expect it to be a problem when extended to
95

testing an interval as the density estimate is important at points other than zero.
Consider the following illustration: with G2 the median is between the two modes of
the distribution. An accurate density estimation would show that units with means
close to the median have a low probability of being from the non-null density. The
superimposed Gaussian non-null density estimate of Scott and Berger (2006) would
show that units with means close to the median have a high probability of being from
the non-null density which should lead to a signiﬁcant increase in the false discovery
rate for that model.
After developing this new and improved model we can revisit the previous analyses
in Chapter 2, except this time we don’t have to shift the data and we can illustrate
the improvement by testing an interval instead of using adaptive methodology to test
for “interesting" diﬀerence.
5.2
Improved Classification and Prediction
Currently the proposed methodology in Chapter 4 only considers continuous fea-
tures. A desirable extension would be to handle categorical input via dummy binary
variables.
Consider the case where each feature vector x consists of data points
x = (x1, . . . , xp)′ containing both continuous and binary data. We can order the
observations such that x = (x1, . . . , xc, xc+1, . . . , xp)′ = (x′
cont, x′
disc) where xcont ∈Rc
and xdisc ∈{0, 1}p−c. We can then consider ﬁtting a model similar to our Polya tree
approach in Chapter 4 or we can consider using marginal Polya trees for each binary
or discrete input. Another interesting avenue to consider is to consider prediction; the
idea is similar to that of Chapter 4, except instead of having a categorical response
y to which we classify new observations, there is a quantitative response which we
predict for new observations. Lastly, there was one simulation for which our model
had a diﬃcult time capturing one of the classes - we intimated that this was due to
the choice of centering distribution; a nice extension to the R code would be to allow
96

the user to identify the centering distribution or to have the choice of seeing output
over various centering distributions similar to what is done for SVM kernel selection.
97

Chapter 6
Conclusion
The suggested approximate ﬁnite Polya tree multiple testing procedure is very
successful in correctly classifying the observations with non-zero mean in a compu-
tationally eﬃcient manner. This holds even when the non-zero means are simulated
from a mean zero distribution, as seen in the simulation of θi from a N(0, 22), which
is particularly impressive as we can expect many of these ‘non-zero’ means to be very
close to zero. The ﬂexibility of this model is displayed through the data analyses
in Section 7 by completing the task of multiple testing in the cases of proportional
diﬀerences as well as paired and two sample mean diﬀerences. The performance of
the multiple comparisons was evaluated using FDR and FNR, both of which were
kept low during simulation for relatively small and large numbers of observations. A
nice aspect of the methodology and Java applet is that we are able to provide an
approximation of the density of the non-zero means that is very close to the actual
density function even in the non-Gaussian case. Further, the model is capable of this
for “interestingly diﬀerent” observations in the cases where that is of interest as in
Section 6.5 and Section 7.1. This model assumes that θi and σ2
i are independent and
is sensitive to the prior speciﬁcations including w. The model is also sensitive to the
data being median zero; simulation results, not included, show that deviations from
this lead to inﬂated error. A discrete approximation to the univariate MPT model
is proposed that has conjugate and eﬃcient MCMC updating for all parameters. A
smoothed version, the SAPT, maintains conjugate updating and mixes signiﬁcantly
better than the traditional MPT. Various simulated and real data illustrate the use-
98

fulness of the proposed approach. Multivariate versions of the APT and SAPT models
suﬀer the same fate as multivariate extensions of B-splines: an exponential explosion
of parameters occurs with increased dimensionality. For example the nonparametric
random eﬀects distribution of Ghidey et al. (2004) is largely relegated to bivariate
densities. Finally, the proposed supervised learning procedure using Polya trees is
very successful in correctly classifying observations in a variety of scenarios. This
approach is computationally eﬃcient and can handle a large number of classes. The
ﬂexibility of this model is displayed through the data analyses and simulations of
Section 4 as we complete classiﬁcation in various settings covering a variety of di-
mension, sample sizes and number of classes. The performance of classiﬁcation was
evaluated using ten-fold cross validation which was kept low during simulation and
data analysis. A nice aspect of the methodology is that it is computationally eﬃcient
and it is capable of providing an approximation of the d dimensional density even in
the case when the density is non-Gaussian. The error rates are still kept relatively
low for small sample sizes but, as noted in Section 4, the model does require moderate
sample sizes to yield decent density estimates.
99

Bibliography
Agresti, A. (2002). Categorical Data Analysis. John Wiley & Sons.
Aitchison, J. and Shen, S. M. (1980). Logistic-normal distributions: Some properties
and uses. Biometrika, 67:261–272.
Aitkin, M. (1999). A general maximum likelihood analysis of variance components
in generalized linear models. Biometrics, 55:117–128.
Aldous, D. (1985). Exchangeability and related topics. In Ecole d’Ete de Probabilities
de Saint-Flour XIII 1983, pages 1–198. Springer.
Alon, U., Barkai, N., Notterman, D., Gish, K., Ybarra, S., Mack, D., and Levine,
A. J. (1999). Broad patterns of gene expression revealed by clustering analysis of
tumor and normal colon tissues probed by oligonucleotide arrays. Proceedings of
the National Academy of Sciences, 96(12):6745–6750.
Alpaydin, E. (2014). Introduction to Machine Learning (Adaptive Computation and
Machine Learning). The MIT Press.
Anderson, J. A. and Rosenfeld, E., editors (1988). Neurocomputing: Foundations of
Research. MIT Press, Cambridge, MA, USA.
Antoniak, C. (1974). Mixtures of Dirichlet processes with applications to Bayesian
nonparametric problems. Annals of Statistics, 2:1151–1174.
Atiya, A. F., Fayed, H. A., and Abdel-Gawad, A. H. (2013). A new Monte Carlo
based algorithm for the Gaussian process classiﬁcation problem. ArXiv e-prints.
100

Ausin, M., Gomez-Villegas, M., Gonzalez-Perez, B., Rodriguez-Bernal, M., Salazer,
I., and Sanz, L. (2011).
Bayesian analysis of multiple hypothesis testing with
applications to microarray experiments. Communications in Statistics - Theory
and Methods, 40(13):2276–2291.
Bajgrowicz, P. and Scaillet, O. (2007). Technical trading revisited: False discoveries,
persistence tests, and transaction costs. Technical report.
Benjamini, Y. and Hochberg, Y. (1995).
Controlling the false discovery rate: A
practical and powerful approach to multiple testing. Journal of the Royal Statistical
Soceity. Series B, 57(1):289–300.
Beygelzimer, A., Kakadet, S., Langford, J., Arya, S., Mount, D., and Li, S. (2013).
FNN: Fast Nearest Neighbor Search Algorithms and Applications. R package version
1.1.
Blackwell, D. (1973). Discreteness of Ferguson selections. The Annals of Statistics,
1:356–358.
Blei, D., Griﬃths, T., Jordan, M., and Tenenbaum, J. (2004). Hierarchical topic
models and the nested Chinese restaurant process. Advances in Neural Information
Processing Systems 16: Proceedings of the 2003 Conference.
Blei, D. M. and Frazier, P. I. (2011). Distance dependent Chinese restaurant pro-
cesses. Journal of Machine Learning Research, 12:2461–2488.
Blei, D. M., Griﬃths, T., and Jordan, M. (2010). The nested Chinese restaurant
process and bayesian nonparametric inference of topic hierarchies. Journal of the
ACM, 57:7:1–7:30.
Blomquist, J. (2014). Multiple inference and market integration: An application to
Swedish ﬁsh markets. Journal of Agricultural Economics, 66(1):221–234.
101

Bogdan, M., Ghosh, J. K., and Tokdar, S. T. (2008). A comparison of the Benjamini-
Hochberg procedure with some Bayesian rules for multiple testing, volume 1, pages
211–230. Institute of Mathematical Statistics.
Boser, B. E., Guyon, I. M., and Vapnik, V. N. (1992). A training algorithm for optimal
margin classiﬁers. In Proceedings of the Fifth Annual Workshop on Computational
Learning Theory, pages 144–152. ACM.
Branscum, A. and Hanson, T. (2008). Bayesian nonparametric meta-analysis using
Polya tree mixture models. Biometrics, 64:825–833.
Breiman, L. (1996). Bias, variance, and arcing classiﬁers. Technical report.
Breiman, L. (2001). Random forests. Machine Learning, 45:5–32.
Buckley, J. J. and James, I. R. (1979).
Linear regression with censored data.
Biometrika, 66:429–436.
Burges, C. J. (1998). A tutorial on support vector machines for pattern recognition.
Data Mining and Knowledge Discovery, 2:121–167.
Burr, D. and Doss, H. (2005). A Bayesian semiparametric model for random-eﬀects
meta-analysis. Journal of the American Statistical Association, 100:242–251.
Canale, A. and Dunson, D. (2011). Bayesian kernel mixtures for counts. Journal of
the American Statistical Association, 106:1528–1539.
Canale, A. and Dunson, D. B. (2016). Multiscale Bernstein polynomials for densities.
Statistica Sinica, in press.
Chen, Y., Hanson, T., and Zhang, J. (2014). Accelerated hazards model based on
parametric families generalized with Bernstein polynomials. Biometrics, 70:192–
201.
102

Christensen, R., Johnson, W., Branscum, A., and Hanson, T. (2010). Bayesian Ideas
and Data Analysis An Introduction for Scientists and Statisticians. CRC Press.
Chumbley, J. and Friston, K. (2009). False discovery rate revisited: FDR and topo-
logical inference using Gaussian random ﬁelds. NeuroImage, 44(11):62–70.
Cipolli, W. and Hanson, T. (2016).
Computationally tractable approximate and
smoothed Polya trees. In revision with Statistics and Computing.
Cipolli, W., Hanson, T., and McLain, A. (2016). Bayesian nonparametric multiple
testing. Computational Statistics and Data Analysis, 101:64–79.
Cortes, C. and Vapnik, V. (1995).
Support-vector networks.
Machine Learning,
20:273–297.
Cover, T. and Hart, P. (1967). Nearest neighbor pattern classiﬁcation. IEEE Trans-
actions on Information Theory, 13:21–27.
Craddock, T., Harvey, J., Nathanson, L., Barnes, Z., Klimas, N., Fletcher, M., and
Broderick, G. (2015). Using gene expression signatures to identify novel treatment
strategies in Gulf War illness. BMC Medical Genomics, 8(1).
Dahl, D. B., Kim, S., and Vannucci, M. (2009). Spiked Dirichlet process prior for
Bayesian multiple hypothesis testing in random eﬀects models. Bayesian Analysis,
4(4):707–732.
Daumé III, H. and Marcu, D. (2005). A Bayesian model for supervised clustering
with the Dirichlet process prior. Journal of Machine Learning Research (JMLR),
6:1551–1577.
Dempster, A. P., Laird, N. M., and Rubin, D. B. (1977). Maximum likelihood from in-
complete data via the EM algorithm. Journal of the Royal Statistical Society,Series
B, 39:1–38.
103

Do, K., Müller, P., and Tang, F. (2005). A Bayesian mixture model for diﬀerential
gene expression. Journal of the Royal Statistical Society, 54(03):627–644.
Draper, D. (1999). Discussion of Bayesian nonparametric inference for random dis-
tributions and related functions. Journal of the Royal Statistical Society Series B,
61:510–513.
Duan, K. and Keerthi, S. S. (2005). Which is the best multiclass svm method? an
empirical study. In Proceedings of the Sixth International Workshop on Multiple
Classiﬁer Systems, pages 278–285.
Duda, R. O., Hart, P. E., and Stork, D. G. (2000).
Pattern Classiﬁcation (2Nd
Edition). Wiley-Interscience.
Dudani, S. A. (1976). The distance-weighted k-nearest-neighbor rule. IEEE Trans-
actions on Systems, Man, and Cybernetics, 6:325–327.
Efron, B., Tibshirani, R., Storey, J., and Tusher, V. (2001). Empirical Bayes anal-
ysis of microarray experiment. Journal of the American Statistical Association,
96(456):1151–1160.
Escobar, M. D. and West, M. (1995). Bayesian density estimation and inference using
mixtures. Journal of the American Statistical Association, 90:577–588.
Ferguson, T. (1973).
A Bayesian analysis of some nonparametric problems. The
Annals of Statistics, 1(2):209–230.
Ferguson, T. S. (1974). Prior distributions on spaces of probability measures. The
Annals of Statistics, 02(04):615–629.
Fisher, R. A. (1936).
The use of multiple measurements in taxonomic problems.
Annals of Eugenics, 7:179–188.
Florida, R. (2011). America’s great passport divide. [Online; posted 15-Mar-2011].
104

Follman, D. A. and Lambert, D. (1989). Generalizing logistic regression by nonpara-
metric mixing. Journal of the American Statistical Association, 84:295–300.
Frey, P. W. and Slate, D. J. (1991). Letter recognition using Holland-style adaptive
classiﬁers. Machine Learning, 6:161–182.
Gamerman, D. (1997). Sampling from the posterior distribution in generalized linear
mixed models. Statistics and Computing, 7:57–68.
Gans, P. and Gill, J. (1984). Smoothing and diﬀerentiation of spectroscopic curves
using spline functions. Applied Spectroscopy, 38:370–376.
Geisser, S. and Eddy, W. F. (1979). A predictive approach to model selection. 74:153–
160.
Gelfand, A. E. and Dey, D. K. (1994). Bayesian model choice: Asymptotics and exact
calculations. Journal of the Royal Statistical Society, Series B, 56:501–514.
Genovese, C. and Wasserman, L. (2002). Operating characteristics and extensions of
the false discovery procedure. Journal of the Royal Statistical Soceity. Series B,
64(3):499–517.
Ghidey, W., Lesaﬀre, E., and Eilers, P. (2004). Smooth random eﬀects distribution
in a linear mixed model. Biometrics, 60:945–953.
Ghosh, A. (2006). On optimum choice of k in nearest neighbor classiﬁcation. Com-
putational Statistics and Data Analysis, 50:3113–3123.
Ghosh, J. K. and Ramamoorthi, R. V. (2003). Bayesian Nonparametrics. Springer-
Verlag: New York.
Golub, G. H. and Van Loan, C. F. (1996). Matrix Computations (3rd Ed.). Johns
Hopkins University Press, Baltimore, MD, USA.
105

Golub, T. R., Slonim, D. K., Tamayo, P., Huard, C., Gaasenbeek, M., Mesirov, J. P.,
Coller, H., Loh, M. L., Downing, J. R., Caligiuri, M. A., and Bloomﬁeld, C. D.
(1999). Molecular classiﬁcation of cancer: class discovery and class prediction by
gene expression monitoring. Science, 286:531–537.
Gorman, P. R. and Sejnowski, T. J. (1988). Analysis of hidden units in a layered
network trained to classify sonar targets. Neural Networks, 1:75–89.
Green, P. J. (1995). Reversible jump Markov chain Monte Carlo computation and
Bayesian model determination. Biometrika, 82:711–732.
Guindani, M., Müller, P., and Zhang, S. (2009).
A Bayesian discovery proce-
dure. Journal of the Royal Statistical Society: Series B (Statistical Methodology),
71(5):905–925.
Haario, H., Saksman, E., and Tamminen, J. (2001). An adaptive Metropolis algo-
rithm. Bernoulli, 7(2):223–242.
Hannah, L. A., Blei, D. M., and Powell, W. B. (2011). Dirichlet process mixtures of
generalized linear models. J. Mach. Learn. Res., 12:1923–1953.
Hanson, T. (2006). Inference for mixtures of ﬁnite Polya tree models. Journal of the
American Statistical Association, 101(0476):1548–1565.
Hanson, T., Branscum, A., and Gardner, I. (2008). Multivariate mixtures of Polya
trees for modelling ROC data. Statistical Modelling, 8:81–96.
Hanson, T. and Jara, A. (2013). Surviving fully Bayesian nonparametric regression
models. Bayesian Theory and Applications, pages 593–615.
Hanson, T. and Johnson, W. (2002). Modeling regression error with a mixture of
polya trees. Journal of the American Statistical Association, 97:1020–1033.
106

Hanson, T., Monteiro, J., and Jara, A. (2011). The Polya tree sampler: Towards
eﬃcient and automatic independent Metropolis-Hastings proposals.
Journal of
Computational and Graphical Statistics, 20:41–62.
Harrell, Jr, F. (2015). rms: Regression Modeling Strategies. R package version 4.4-0.
Hassanat, A. B., Abbadi, M. A., and Altarawneh, G. A. (2014). Solving the prob-
lem of the k parameter in the KNN classiﬁer using ensemble learning approach.
International Journal of Computer Science and Information Security, 12:33–39.
Hastie, T. and Tibshirani, R. (1998). Classiﬁcation by pairwise coupling. The Annals
of Statistics, 26:451–471.
Hastie, T., Tibshirani, R., and Friedman, J. (2001).
The Elements of Statistical
Learning: Data Mining, Inference, and Prediction. Springer.
Higdon, D. (2002). Space and space-time modeling using process convolutions. In
Anderson, C., Barnett, V., Chatwin, P., and El-Shaarawi, A., editors, Quantitative
Methods for Current Environmental Issues, pages 37–56. Springer London.
Hjort, N., Holmes, C., Müller, P., and Walker, S. G., editors (2010). Bayesian Non-
parametrics. Cambridge Series in Statistical and Probabilistic Mathematics. Cam-
bridge University Press: Cambridge.
Ho, T. K. (1995). Random decision forests. In Third International Conference on
Document Analysis and Recognition, ICDAR 1995, August 14 - 15, 1995, Montreal,
Canada. Volume I, pages 278–282.
Hochberg, Y. (1988). A sharper Bonferroni procedure for multiple tests of signiﬁcance
comparing individual means in the analysis of variance. Biometrika, 75(4):800–802.
Ibrahim, J. G., Chen, M.-H., and Sinha, D. (2001).
Bayesian Survival Analysis.
Springer-Verlag.
107

Ishwaran, H. and Zarepour, M. (2002). Exact and approximate sum representations
for the Dirichlet process. Canadian Journal of Statistics, 30:269–283.
Izenman, A. J. (1991). Recent developments in nonparametric density estimation.
Journal of the American Statistical Association, 86:205–224.
Jara, A., Hanson, T., and Lesaﬀre, E. (2009). Robustifying generalized linear mixed
models using a new class of mixtures of multivariate Polya trees. Journal of Com-
putational and Graphical Statistics, 20:41–62.
Jara, A., Hanson, T., Quintana, F., Müeller, P., and Rosner, G. (2011). Dppackage:
Bayesian semi- and nonparametric modeling in R. Journal of Statistical Software,
40:1–30. http://www.jstatsoft.org/v40/i05/.
Jiang, L., Wang, D., Cai, Z., and Yan, X. (2007). Survey of improving naive Bayes
for classiﬁcation. In Proceedings of the 3rd International Conference on Advanced
Data Mining and Applications, pages 134–145. Springer-Verlag.
Jin, J. (2008). Proportion of non-zero normal means: universal oracle equivalences
and uniformly consistent estimators.
Journal of the Royal Statistical Society,
70(3):461–493.
Jin, J. and Cai, T. T. (2007). Estimating the null and the proportional of nonnull
eﬀects in large-scale multiple comparisons.
Journal of the American Statistical
Association, 102(478):495–506.
Karsoliya, S. (2012).
Approximating number of hidden layer neurons in multiple
hidden layer BPNN architecture. International Journal of Engineering Trends and
Technology, 12:714–717.
Kleinman, K. P. and Ibrahim, J. G. (1998). A semi-parametric Bayesian approach to
generalized linear mixed models. Statistics in Medicine, 17:2579–2596.
108

Komárek, A. and Lesaﬀre, E. (2008). Generalized linear mixed model with a penalized
Gaussian mixture as a random-eﬀects distribution.
Computational Statistics &
Data Analysis, 52:3441–3458.
Komárek, A., Lesaﬀre, E., and Hilton, J. (2005). Accelerated failure time model for
arbitrarily censored data with smoothed error distribution. Journal of Computa-
tional and Graphical Statistics, 14:726–745.
Kotsiantis, S. B. (2007). Supervised machine learning: A review of classiﬁcation.
Informatica, 31:249–268.
Larrañaga, P., Calvo, B., Santana, R., Bielza, C., Galdiano, J., Inza, I., Lozano,
J. A., Armañanzas, R., Santafé, G., and Pérez, A. (2006). Machine learning in
bioinformatics. Brieﬁngs in Bioinformatics, 17:86–112.
Lavine, M. (1992). Some aspects of Polya tree distributions for statistical modelling.
The Annals of Statistics, 20(03):1222–1235.
Lavine, M. (1994). More aspects of Polya tree distributions for statistical modelling.
The Annals of Statistics, 22(03):1161–1176.
Ledl, T. (2004). Kernel density estimation: Theory and application in discriminant
analysis. Austrian Journal of Statistics, 33:267–279.
Leisch, F. and Dimitriadou, E. (2015). mlbench: Machine Learning Benchmark Prob-
lems. R package version 2.1-1.
Liaw, A. and Wiener, M. (2002). Classiﬁcation and regression by random forest. R
News, 2:18–22.
Liu, L., Lei, J., Sanders, S. J., Willsey, A. J., Kou, Y., Cicek, A. E., Klei, L., Lu,
C., He, X., Li, M., Muhleand, R. A., MaâĂŹayan, A., Noonan, J. P., Sestan, N.,
McFadden, K. A., State, M. W., Buxbaum, J. D., Devlin, B., and Roeder, K.
109

(2014). Dawn: a framework to identify autism genes and subnetworks using gene
expression and genetics. Molecular Autism, 5(1).
Longnecker, M. (1994). Alcoholic beverage consumption in relation to risk of breast
cancer: Meta-analysis and review. Cancer Causes and Control, 5:73–82.
Ma, Y. and Guo, G. (2014). Support Vector Machines Applications. Springer Inter-
national Publishing.
Martin, R. and Tokdar, S. (2012). A nonparametric empirical Bayes framework for
large-scale multiple testing. Biostatistics, 13(3):427–439.
Marzio, M. and Taylor, C. C. (2005). On boosting kernel density methods for multi-
variate data: density estimation and classiﬁcation. Statistical Methods and Appli-
cations, 14:163–178.
Mauldin, R. D., Sudderth, W. D., and Williams, S. C. (1992). Polya trees and random
distributions. The Annals of Statistics, 20(03):1203–1221.
Mcculloch, W. S. and Pitts, W. H. (1943). A logical calculus of the ideas immanent
in nervous activity. Bulletin of Mathematical Biophysics, 5:115–133.
McMillan, G. (2001). Ache Residential Grouping and Social Foraging. PhD thesis,
University of New Mexico.
Meyer, D., Dimitriadou, E., Hornik, K., Weingessel, A., and Leisch, F. (2015). e1071:
Misc Functions of the Department of Statistics, Probability Theory Group (For-
merly: E1071), TU Wien. R package version 1.6-7.
Migration Policy Institute (2014). State immigration data proﬁles. [Online; accessed
13-Mar-2016].
Minka, T. P. (2001). A Family of Algorithms for Approximate Bayesian Inference.
PhD thesis, Cambridge, MA, USA.
110

Minsky, M. and Papert, S. (1969). Perceptrons; an Introduction to Computational
Geometry. MIT Press.
Mitra, R. and Müller, P., editors (2015). Nonparametric Bayesian inference in Bio-
statistics. Frontiers in Probability and the Statistical Sciences. Springer Interna-
tional Publishing: Switerland.
Mohri, M., Rostamizadeh, A., and Talwalkar, A. (2012). Foundations of Machine
Learning. The MIT Press.
Morley, M., Molony, C., Weber, T., Devlin, J., Ewens, K., and Spielman, R. (2004).
Genetic analysis of genome-wide variation in human gene expression.
Nature,
430:742–747.
Mukhopadhyay, S. and Ghosh, A. (2011). Bayesian multiscale smoothing in super-
vised and semi-supervised kernel discriminant analysis. Computational Statistics
and Data Analysis, 55:2344–2353.
Müller, P., Parmigiani, G., and Rice, K. (2007). FDR and Bayesian multiple com-
parisons rules.
Müller, P., Quintana, F., Jara, A., and Hanson, T. (2015). Bayesian Nonparametric
Data Analysis. Springer: Switzerland.
Müller, P. and Rodriguez, A. (2013). Chapter 4: Pólya Trees, volume Volume 9 of
NSF-CBMS Regional Conference Series in Probability and Statistics, pages 43–51.
Institute of Mathematical Statistics and American Statistical Assocation.
Muralidharan, O. (2010). An empirical Bayes mixture method for eﬀect size and
false discovery rate estimation. Journal of the American Statistical Association,
4(1):422–438.
111

National Archives and Records Administration (2012). Historical election results.
[Online; accessed 13-Mar-2016].
Nickisch, H. and Rasmussen, C. (2008). Approximations for binary Gaussian process
classiﬁcation. Journal of Machine Learning Research, 9:2035–2078.
Notterman, D. A., Along, U., and Sierk, A. J. (2001). Transcriptional gene expression
proﬁles of colorectal adenoma, adenocarcinoma, and normal tissue examined by
oligonucleotide arrays. Cancer Research, 61(7):3124–3130.
Paddock, S., Ruggeri, F., Lavine, M., and West, M. (2003). Randomised Polya tree
models for nonparametric Bayesian inference. Statistica Sinica, 13:443–460.
Patti, M. E., Butte, A. J., Crunkhorn, S., Cusi, K., Berria, R., Kashyap, S., Miyazaki,
Y., Kohane, I., Costello, M., Saccone, R., Landaker, E. J., Goldﬁne, A. B., Mun,
E., DeFronzo, R., Finlayson, J., Kahn, C. R., and Mandarino, L. J. (2003). Coordi-
nated reduction of genes of oxidative metabolism in humans with insulin resistance
and diabetes: Potential role of pgc1 and nrf1. Proceedings of the National Academy
of Sciences, 100(14):8466–8471.
Peña, E. A., Habiger, J. D., and Wu, W. (2011). Power-enhanced multiple decision
functions controlling family-wise error and false discovery rates. The Annals of
Statistics, 39(1):556–583.
Pitman, J. (2002). Combinatorial stochastic processes. Technical report.
Qin, Z. S. (2006). Clustering microarray gene expression data using weighted Chinese
restaurant process. Bioinformatics, 22:1988–1997.
R Core Team (2014). R: A Language and Environment for Statistical Computing. R
Foundation for Statistical Computing, Vienna, Austria.
112

Rao, C. R. (1948). The utilization of multiple measurements in problems of biological
classiﬁcation. Journal of the Royal Statistical Society - Series B, 10:159–203.
Rasmussen, C. E. (1999). The inﬁnite Gaussian mixture model. pages 554–560. The
MIT Press.
Rasmussen, C. E. and Williams, C. K. I. (2006). Gaussian Processes for Machine
Learning (Adaptive Computation and Machine Learning). The MIT Press.
Rish, I. (2001). An empirical study of the naive Bayes classiﬁer. Technical report,
IBM.
Roeder, K. (1990). Density estimation with conﬁdence sets exempliﬁed by super-
clusters and voids in galaxies.
Journal of the American Statistical Association,
85:617–624.
Rojas, R. (1996). Neural Networks: A Systematic Introduction. Springer-Verlag New
York, Inc., New York, NY, USA.
Rosenblatt, F. (1958). The perceptron: A probabilistic model for information storage
and organization in the brain. Physchological Review, 65:386–408.
Sargent, D. J., Hodges, J. S., and Carlin, B. P. (2000). Structured Markov chain
Monte Carlo. Journal of Computational and Graphical Statistics, 9:217–234.
Schmidhuber, J. (2015). Deep learning in neural networks: An overview. Neural
Networks, 61:85–117.
Scholkopf, B. and Smola, A. J. (2001). Learning with Kernels: Support Vector Ma-
chines, Regularization, Optimization, and Beyond. MIT Press, Cambridge, MA,
USA.
Scott, J. G. and Berger, J. O. (2006). An exploration of aspects of Bayesian multiple
testing. Journal of Statistical Planning and Inference, 136(07):2144–2162.
113

Sethuraman, J. (1994). A constructive deﬁnition of Dirichlet priors. Statistica Sinica,
4:639–650.
Shahbaba, B. and Neal, R. (2009). Nonlinear models using Dirichlet process mixtures.
J. Mach. Learn. Res., 10:1829–1850.
Sidak, Z. (1967). Rectangular conﬁdence regions for the means of multivariate normal
distributions. Journal of the American Statistical Association, 62(318):626–633.
Siebert, J. (1987). Vehicle Recognition Using Rule Based Methods. TIRM–87-018.
Turing Institute.
Sigillito, V. G., Wing, S. P., Hutton, L. V., and Baker, K. B. (1989). Classiﬁcation
of radar returns from the ionosphere using neural networks. Johns Hopkins APL
Technical Digest, pages 262–266.
Steinwart, I. and Christmann, A. (2008). Support Vector Machines. Springer Inter-
national Publishing.
Storey, J. D. (2002). A direct approach to false discovery rates. Journal of the Royal
Statistical Soceity. Series B, 64(3):479–498.
Sun, W. and McLain, A. C. (2012).
Multiple testing of composite null hypothe-
ses in heteroscedastic models.
Journal of the American Statistical Association,
107(398):673–687.
Tax Foundation (2007). Federal taxes paid vs. federal spending received by state,
1981-2005. [Online; accessed 13-Mar-2016].
Teh, Y. W., Jordan, M. I., Beal, M. J., and Blei, D. M. (2005). Sharing Clusters among
Related Groups: Hierarchical Dirichlet Processes. Advances in Neural Information
Processing Systems 17, pages 1385–1392.
114

Tukey, J. W. (1949). Comparing individual means in the analysis of variance. Bio-
metrics, 5(2):99–114.
United States Census Bureau (2010). American community survey, education attain-
ment for states, percent with high school diploma and with bachelor’s degree: 2010.
[Online; accessed 13-Mar-2016].
United States Census Bureau (2014). State median income. [Online; accessed 13-
Mar-2016].
United States Department of State Bureau of Consular Aﬀairs (2015). U.S. passports
and international travel: Passport statistics. [Online; accessed 13-Mar-2016].
Unser, M., Aldroubi, A., and Eden, M. (1992). On the asymptotic convergence of
B-spline wavelets to Gabor functions. IEEE Transactions on Information Theory,
38:864–872.
van ’t Veer, L., Dai, H., van de Vijver, M., He, Y., Hart, A., Mao, M., Peterse,
H., van der Kooy, K., Marton, M., Witteveen, A., Schreiber, G., Kerkhoven, R.,
Roberts, C., Linsley, P., Bernards, R., and Friend, S. (2002). Gene expression
proﬁling predicts clinical outcome of breast cancer. Nature, 415(6871):530–536.
Vapnik, V. N. (1979). Estimation of Dependences Based on Empirical Data [in Rus-
sian]. Nauka, USSR.
Vapnik, V. N. and Chervonenkis, A. (1963). A note on one class of perceptrons.
Automation and Remote Control, 25:774–780.
Vapnik, V. N. and Lerner, A. (1962). Pattern recognition using generalized portrait
method. Automation and Remote Control, 24:709–715.
Venables, W. N. and Ripley, B. D. (2002). Modern Applied Statistics with S. Springer,
New York, fourth edition. ISBN 0-387-95457-0.
115

Wahba, G., Gu, C., Wang, Y., and Chappell, R. (1993). Soft classiﬁcation, a. k.
a. risk estimation, via penalized log likelihood and smoothing spline analysis of
variance. In The Mathematics of Generalization. Addison-Wesley.
Werbos, P. J. (1981). Applications of advances in nonlinear sensitivity analysis. In
Proceedings of the 10th IFIP Conference, 31.8 - 4.9, NYC, pages 762–770.
Widrow, B. (1962). Generalization and information storage in networks of adaline
’neurons’. In Yovits, M. C., Jacobi, G. T., and Goldstein, G. D., editors, Self-
Organizing Systems 1962. Sparton, Washington.
Widrow, B. and Hoﬀ, M. E. (1960). Adaptive switching circuits. Institute of Radio
Engineers, Western Electronics Show and Convention, Part 4:96–104.
Williams, C. K. I. and Barber, D. (1998). Bayesian classiﬁcation with Gaussian pro-
cesses. IEEE Transactions on Pattern Analysis and Machine Intelligence, 20:1342–
1351.
Wolberg, W. H. and Mangasarian, O. L. (1990). Multisurface method of pattern
separation for medical diagnosis applied to breast cytology.
Proceedings of the
National Academy of Sciences,U.S.A., 87:9193–9196.
Wong, W. H. and Ma, L. (2010). Optional Polya tree and Bayesian inference. The
Annals of Statistics, 38:1433–1459.
Wu, W. and Cai, T. T. (2007).
Oracle and adaptive compound decision rules
for false discovery rate control. Journal of the American Statistical Association,
102(479):901–912.
Yegnanarayana, B. (2004). Artiﬁcial Neural Networks. Prentice-Hall of India Pvt.Ltd.
Zambom, A. Z. and Dias, R. (2013). A review of kernel density estimation with
applications to econometrics. International Econometric Review (IER), 5:20–42.
116

Zhao, L. and Hanson, T. (2011). Spatially dependent Polya tree modeling for survival
data. Biometrics, 67:391–403.
117

