arXiv:math/9802029v1  [math.QA]  5 Feb 1998
Categoriﬁcation
John C. Baez
Department of Mathematics, University of California
Riverside, California 92521
USA
James Dolan
Sanga Research Corporation
2015 Rue Peel, Suite 1000
Montreal, Quebec H3A 1T8
Canada
email: baez@math.ucr.edu, jdolan@sangacorp.com
February 2, 1998
Abstract
Categoriﬁcation is the process of ﬁnding category-theoretic analogs
of set-theoretic concepts by replacing sets with categories, functions
with functors, and equations between functions by natural isomor-
phisms between functors, which in turn should satisfy certain equa-
tions of their own, called ‘coherence laws’. Iterating this process re-
quires a theory of ‘n-categories’, algebraic structures having objects,
morphisms between objects, 2-morphisms between morphisms and so
on up to n-morphisms. After a brief introduction to n-categories and
their relation to homotopy theory, we discuss algebraic structures that
can be seen as iterated categoriﬁcations of the natural numbers and
integers. These include tangle n-categories, cobordism n-categories,
and the homotopy n-types of the loop spaces ΩkSk. We conclude by
describing a deﬁnition of weak n-categories based on the theory of
operads.
1
Introduction
The tongue-twisting term ‘categoriﬁcation’ was invented by Crane [19, 20].
It refers to the process of ﬁnding category-theoretic analogs of ideas phrased
1

in the language of set theory, using the following analogy between set theory
and category theory:
elements
objects
equations
isomorphisms
between elements
between objects
sets
categories
functions
functors
equations
natural isomorphisms
between functions
between functors
1. Analogy between set theory and category theory
Just as sets have elements, categories have objects. Just as there are functions
between sets, there are functors between categories. Interestingly, the proper
analog of an equation between elements is not an equation between objects,
but an isomorphism.
More generally, the analog of an equation between
functions is a natural isomorphism between functors.
For example, the category FinSet, whose objects are ﬁnite sets and whose
morphisms are functions, is a categoriﬁcation of the set N of natural numbers.
The disjoint union and Cartesian product of ﬁnite sets correspond to the sum
and product in N, respectively. Note that while addition and multiplication
in N satisfy various equational laws such as commutativity, associativity and
distributivity, disjoint union and Cartesian product satisfy such laws only up
to natural isomorphism.
If one studies categoriﬁcation one soon discovers an amazing fact: many
deep-sounding results in mathematics are just categoriﬁcations of facts we
learned in high school! There is a good reason for this. All along, we have
been unwittingly ‘decategorifying’ mathematics by pretending that categories
are just sets. We ‘decategorify’ a category by forgetting about the morphisms
and pretending that isomorphic objects are equal. We are left with a mere
set: the set of isomorphism classes of objects.
To understand this, the following parable may be useful. Long ago, when
shepherds wanted to see if two herds of sheep were isomorphic, they would
look for an explicit isomorphism. In other words, they would line up both
herds and try to match each sheep in one herd with a sheep in the other. But
one day, along came a shepherd who invented decategoriﬁcation. She realized
2

one could take each herd and ‘count’ it, setting up an isomorphism between
it and some set of ‘numbers’, which were nonsense words like ‘one, two,
three, . . . ’ specially designed for this purpose. By comparing the resulting
numbers, she could show that two herds were isomorphic without explicitly
establishing an isomorphism! In short, by decategorifying the category of
ﬁnite sets, the set of natural numbers was invented.
According to this parable, decategoriﬁcation started out as a stroke of
mathematical genius.
Only later did it become a matter of dumb habit,
which we are now struggling to overcome by means of categoriﬁcation. While
the historical reality is far more complicated, categoriﬁcation really has led to
tremendous progress in mathematics during the 20th century. For example,
Noether revolutionized algebraic topology by emphasizing the importance of
homology groups. Previous work had focused on Betti numbers, which are
just the dimensions of the rational homology groups. As with taking the
cardinality of a set, taking the dimension of a vector space is a process of
decategoriﬁcation, since two vector spaces are isomorphic if and only if they
have the same dimension. Noether noted that if we work with homology
groups rather than Betti numbers, we can solve more problems, because we
obtain invariants not only of spaces, but also of maps. In modern parlance,
the nth rational homology is a functor deﬁned on the category of topological
spaces, while the nth Betti number is a mere function deﬁned on the set
of isomorphism classes of topological spaces. Of course, this way of stating
Noether’s insight is anachronistic, since it came before category theory. In-
deed, it was in Eilenberg and Mac Lane’s subsequent work on homology that
category theory was born!
Decategoriﬁcation is a straightforward process which typically destroys
information about the situation at hand. Categoriﬁcation, being an attempt
to recover this lost information, is inevitably fraught with diﬃculties. One
reason is that when categorifying, one does not merely replace equations by
isomorphisms. One also demands that these isomorphisms satisfy some new
equations of their own, called ‘coherence laws’. Finding the right coherence
laws for a given situation is perhaps the trickiest aspect of categoriﬁcation.
For example, a monoid is a set with a product satisfying the associative
law and a unit element satisfying the left and right unit laws. The categoriﬁed
version of a monoid is a ‘monoidal category’. This is a category C with a
product ⊗: C × C →C and and unit object 1 ∈C. If we naively impose
associativity and the left and right unit laws as equational laws, we obtain
3

the deﬁnition of a ‘strict’ monoidal category. However, the philosophy of
categoriﬁcation suggests instead that we impose them only up to natural
isomorphism. Thus, as part of the structure of a ‘weak’ monoidal category,
we specify a natural isomorphism
ax,y,z: (x ⊗y) ⊗z →x ⊗(y ⊗z)
called the ‘associator’, together with natural isomorphisms
lx: 1 ⊗x →x,
rx: x ⊗1 →x.
Using the associator one can construct isomorphisms between any two paren-
thesized versions of the tensor product of several objects. However, we really
want a unique isomorphism. For example, there are 5 ways to parenthesize
the tensor product of 4 objects, which are related by the associator as follows:
((x ⊗y) ⊗z) ⊗w
(x ⊗y) ⊗(z ⊗w)
x ⊗(y ⊗(z ⊗w))
(x ⊗(y ⊗z)) ⊗w
x ⊗((y ⊗z) ⊗w)
-
ax⊗y,z,w
?
ax,y,z⊗w
-
ax,y,z⊗w
-
ax,y⊗z,w
6
x⊗ay,z,w
In the deﬁnition of a weak monoidal category we impose a coherence law,
called the ‘pentagon identity’, saying that this diagram commutes. Similarly,
we impose a coherence law saying that the following diagram built using a, l
and r commutes:
(1 ⊗x) ⊗1
1 ⊗(x ⊗1)
x ⊗1
x
1 ⊗x
?
lx⊗1
-
a1,x,1
?
1⊗rx
-
rx

lx
4

This deﬁnition raises an obvious question: how do we know we have
found all the right coherence laws? Indeed, what does ‘right’ even mean in
this context? Mac Lane’s coherence theorem [45] gives one answer to this
question: the above coherence laws imply that any two isomorphisms built
using a, l and r and having the same source and target must be equal.
Further work along these lines allow us to make more precise the sense
in which N is a decategoriﬁcation of FinSet. For example, just as N forms a
monoid under either addition or multiplication, FinSet becomes a monoidal
category under either disjoint union or Cartesian product if we choose the
isomorphisms a, l, and r sensibly. In fact, just as N is a ‘rig’, satisfying all
the ring axioms except those involving additive inverses, FinSet is what one
might call a ‘rig category’. In other words, it satisﬁes the rig axioms up to
natural isomorphisms satisfying the coherence laws discovered by Kelly [41]
and Laplaza [44], who proved a coherence theorem in this context. Just as the
decategoriﬁcation of a monoidal category is a monoid, the decategoriﬁcation
of any rig category is a rig. In particular, decategorifying the rig category
FinSet gives the rig N. This idea is especially important in combinatorics,
where the best proof of an identity involving natural numbers is often a
‘bijective proof’: one that actually establishes an isomorphism between ﬁnite
sets [37, 54].
While coherence laws can sometimes be justiﬁed retrospectively by coher-
ence theorems, certain puzzles point to the need for a deeper understanding
of the origin of coherence laws. For example, suppose we want to categorify
the notion of ‘commutative monoid’. The strictest possible approach, where
we take a strict monoidal category and impose an equational law of the form
x ⊗y = y ⊗x, is almost completely uninteresting.
It is much better to
start with a weak monoidal category equipped with a natural isomorphism
Bx,y: x ⊗y →y ⊗x called the ‘braiding’, and then impose coherence laws
called ‘hexagon identities’ saying that the following two diagrams commute:
x ⊗(y ⊗z)
(x ⊗y) ⊗z
(y ⊗x) ⊗z
(y ⊗z) ⊗x
y ⊗(z ⊗x)
y ⊗(x ⊗z)
?
Bx,y⊗z
-
a−1
x,y,z
-
Bx,y⊗z
?
ay,x,z
-
ay,z,x
-
y⊗Bx,z
5

(x ⊗y) ⊗z
x ⊗(y ⊗z)
x ⊗(z ⊗y)
z ⊗(x ⊗y)
(z ⊗x) ⊗y
(x ⊗z) ⊗y
?
Bx⊗y,z
-
ax,y,z
-
x⊗By,z
?
a−1
x,z,y
-
a−1
z,x,y
-
Bx,z⊗y
This gives the deﬁnition of a weak ‘braided monoidal category’. If we impose
an additional coherence law of the form B−1
x,y = By,x, we obtain the deﬁnition
of a ‘symmetric monoidal category’. Both of these concepts are very impor-
tant; which one is ‘right’ depends on the context. However, neither implies
that every pair of parallel morphisms built using the braiding are equal. A
good theory of coherence laws must naturally account for these facts.
The deepest insights into such puzzles have traditionally come from topol-
ogy. In homotopy theory it causes problems to work with spaces equipped
with algebraic structures satisfying equational laws, because one cannot trans-
port such structures along homotopy equivalences. It is better to impose laws
only up to homotopy, with these homotopies satisfying certain coherence laws,
but again only up to homotopy, with these higher homotopies satisfying their
own higher coherence laws, and so on. Coherence laws thus arise naturally in
inﬁnite sequences. For example, Stasheﬀ[59] discovered the pentagon iden-
tity and a sequence of higher coherence laws for associativity when studying
the algebraic structure possessed by a space that is homotopy equivalent to
a loop space. Similarly, the hexagon identities arise as part of a sequence of
coherence laws for spaces homotopy equivalent to double loop spaces, while
the extra coherence law for symmetric monoidal categories arises as part of
a sequence for spaces homotopy equivalent to triple loop spaces. The higher
coherence laws in these sequences turn out to be crucial when we try to
iterate the process of categoriﬁcation.
Starting in the late 1960’s, Boardman, Vogt [13, 14] and others devel-
oped the study of these higher coherence laws into a full-ﬂedged theory of
‘homotopy-invariant algebraic structures’. However, we have yet to attain a
general and systematic theory of categoriﬁcation, particularly when it comes
to iterated categoriﬁcation, which requires a good theory of ‘n-categories’.
The main goal of this paper is to outline our current understanding of cate-
goriﬁcation and to point out some directions for further study.
6

The plan of the paper is as follows. In Section 2 we give a quick tour of
n-category theory. This theory is just beginning to be developed, and there
are various alternative approaches which have not yet been reconciled, but
here we leave out most of the technical details and sketch what we expect
from any reasonable approach. In Section 3 we discuss in more detail the
lessons homotopy theory has for n-category theory. We hope this section can
be followed even by those who are not already experts on homotopy theory.
In Section 4 we describe some algebraic structures that amount to iterated
categoriﬁcations of the natural numbers and the integers. A large amount
of interesting mathematics emerges from the study of these structures. In
Section 5 we summarize our own approach to n-categories.
In a previous paper [4] we sketched a program of using n-categories to
clarify the relationships between topological quantum ﬁeld theory and more
traditional approaches to algebraic topology. The present paper covers some
aspects of this program in more detail, taking advantage of work that has
been done in the meantime. Various other aspects are treated in a series of
papers entitled ‘Higher-Dimensional Algebra’ [2, 5, 6, 8].
2
n-Categories
One philosophical reason for categoriﬁcation is that it reﬁnes our concept of
‘sameness’ by allowing us to distinguish between isomorphism and equality.
In a set, two elements are either the same or diﬀerent. In a category, two
objects can be ‘the same in a way’ while still being diﬀerent. In other words,
they can be isomorphic but not equal. Even more importantly, two objects
can be the same in more than one way, since there can be diﬀerent isomor-
phisms between them. This gives rise to the notion of the ‘symmetry group’
of an object: its group of automorphisms.
Consider, for example, the fundamental groupoid Π1(X) of a topological
space X: the category with points of X as objects and homotopy classes
of paths with ﬁxed endpoints as morphisms. This category captures all the
homotopy-theoretic information about X in dimensions ≤1 — or more pre-
cisely, its homotopy 1-type [11]. The group of automorphisms of an object
x in this category is just the fundamental group π1(X, x). If we decategorify
the fundamental groupoid of X, we forget how points in X are connected by
paths, remembering only whether they are, and we obtain the set of compo-
7

nents of X. This captures only the homotopy 0-type of X.
This example shows how decategoriﬁcation eliminates ‘higher-dimensional
information’ about a situation. Categoriﬁcation is an attempt to recover this
information. This example also suggests that we can keep track of the ho-
motopy 2-type of X if we categorify further and distinguish between paths
that are equal and paths that are merely isomorphic (i.e., homotopic). For
this we should work with a ‘2-category’ having points of X as objects, paths
as morphisms, and certain equivalence classes of homotopies between paths
as 2-morphisms.
In a marvelous self-referential twist, the deﬁnition of ‘2-category’ is simply
the categoriﬁcation of the deﬁnition of ‘category’!
Like a category, a 2-
category has a class of objects, but now for any pair x, y of objects there is
no longer a set hom(x, y); instead, there is a category hom(x, y). Objects
of hom(x, y) are called morphisms of C, and morphisms between them are
called 2-morphisms of C. Composition is no longer a function, but rather a
functor:
◦: hom(x, y) × hom(y, z) →hom(x, z).
For any object x there is an identity 1x ∈hom(x, x). And now we have a
choice. On the one hand, we can impose associativity and the left and right
unit laws strictly, as equational laws. If we do this, we obtain the deﬁnition
of ‘strict 2-category’ [42]. On the other hand, we can impose them only up to
natural isomorphism, with these natural isomorphisms satisfying the coher-
ence laws discussed in the previous section. This is clearly more compatible
with the spirit of categoriﬁcation. If we do this, we obtain the deﬁnition
of ‘weak 2-category’ [12]. (We warn the reader that strict 2-categories are
traditionally known as ‘2-categories’, while weak 2-categories are known as
‘bicategories’. The present style of terminology, introduced by Kapranov and
Voevodsky [40], has the advantage of generalizing easily to n-categories for
arbitrary n.)
The classic example of a 2-category is Cat, which has categories as objects,
functors as morphisms, and natural transformations as 2-morphisms. The
presence of 2-morphisms gives Cat much of its distinctive ﬂavor, which we
would miss if we treated it as a mere category. Indeed, Mac Lane has said
that categories were originally invented, not to study functors, but to study
natural transformations! A good example of two functors that are not equal,
but only naturally isomorphic, are the identity functor and the ‘double dual’
8

functor on the category of ﬁnite-dimensional vector spaces.
Given a topological space X, we can form a 2-category Π2(X) called
the ‘fundamental 2-groupoid’ of X. The objects of this 2-category are the
points of X. Given x, y ∈X, the morphisms from x to y are the paths
f: [0, 1] →X starting at x and ending at y. Finally, given f, g ∈hom(x, y),
the 2-morphisms from f to g are the homotopy classes of paths in hom(x, y)
starting at f and ending at g.
Since the associative law for composition
of paths holds only up to homotopy, this 2-category is a weak 2-category.
One can prove that it captures the homotopy 2-type of X [18, 47]. If we
decategorify the fundamental 2-groupoid of X, we obtain its fundamental
groupoid.
From 2-categories it is a short step to dreaming of n-categories and even
ω-categories — but it is not so easy to make these dreams into smoothly
functioning mathematical tools.
Roughly speaking, an n-category should
be some sort of algebraic structure having objects, 1-morphisms between
objects, 2-morphisms between 1-morphisms, and so on up to n-morphisms.
There should be various ways of composing j-morphisms for 1 ≤j ≤n,
and these should satisfy various laws. As with 2-categories, we can try to
impose these laws either strictly or weakly. Strict n-categories have been
understood for quite some time now [23, 28], but more interesting for us are
the weak ones. Various deﬁnitions of weak n-category are currently under
active study [5, 10, 36, 57, 58, 61, 62, 63], and we discuss our own in Section
5. Here, however, we wish to sketch the main challenges any theory of weak
n-categories must face, and some of the richness inherent in the notion of
weak n-category.
Nota bene: Throughout the rest of this paper, ‘n-category’ will mean ‘weak
n-category’ unless otherwise speciﬁed, and similarly for ‘n-groupoid’, etc..
For the sake of deﬁniteness, we shall temporarily speak in terms of the ‘glob-
ular’ approach to n-categories developed by Batanin [10]. In this approach,
for j ≥1 any j-morphism a: f →g has a source f and a target g, which
are (j −1)-morphisms. When j ≥2 we require that f and g are parallel, by
which we mean that f, g: x →y for some (j −2)-morphisms x and y. In this
approach, we visualize a j-morphism as a j-dimensional disc. For example,
for j = 2:
9

f
g
y
x
a
Other approaches to n-categories use j-morphisms with other shapes, such
as simplices, discussed in Section 3, or opetopes, discussed in Section 5. We
believe that there is basically a single notion of weak n-category lurking
behind these diﬀerent approaches.
If this is true, they will eventually be
shown to be equivalent, and choosing among them will be merely a matter
of convenience. However, the precise meaning of ‘equivalence’ here is itself
rather subtle and n-categorical in ﬂavor [3, 5].
The ﬁrst challenge to any theory of n-categories is to give an adequate
treatment of coherence laws. Composition in an n-category should satisfy
equational laws only at the top level, between n-morphisms. Any law con-
cerning j-morphisms for j < n should hold only ‘up to equivalence’. Here
a n-morphism is deﬁned to be an ‘equivalence’ if it is invertible, while for
j < n a j-morphism is recursively deﬁned to be an equivalence if it is invert-
ible up to equivalence. Equivalence is generally the correct substitute for the
notion of equality in n-categorical mathematics. When laws are formulated
as equivalences, these equivalences should in turn satisfy coherence laws of
their own, but again only up to equivalence, and so on. This becomes ever
more complicated and unmanageable with increasing n unless one takes a
systematic approach to coherence laws.
The second challenge to any theory of n-categories is to handle certain key
examples. First, for any n, there should be an (n + 1)-category nCat, whose
objects are (small) n-categories, whose morphisms are suitably weakened
functors between these, whose 2-morphisms are suitably weakened natural
transformations, and so on. Here by ‘suitably weakened’ we refer to the fact
that all laws should hold only up to equivalence. Second, for any topological
space X, there should be an n-category Πn(X) whose objects are points of
X, whose morphisms are paths, whose 2-morphisms are paths of paths, and
so on, where we take homotopy classes only at the top level. Πn(X) should
be an ‘n-groupoid’, meaning that all its j-morphisms are equivalences for 0 ≤
j ≤n. We call Πn(X) the ‘fundamental n-groupoid of X’. Conversely, any
n-groupoid should determine a topological space, its ‘geometric realization’.
10

In fact, these constructions should render the study of n-groupoids equivalent
to that of homotopy n-types (in a certain sense to be made precise in the
next section).
A bit of the richness inherent in the concept of n-category becomes ap-
parent when we make the following observation: an (n + 1)-category with
only one object can be regarded as special sort of n-category. Suppose that
C is an (n+1)-category with one object x. Then we can form the n-category
˜C by re-indexing: the objects of ˜C are the morphisms of C, the morphisms
of ˜C are the 2-morphisms of C, and so on. The n-categories we obtain this
way have extra structure. In particular, since the objects of ˜C are really
morphisms in C from x to itself, we can ‘multiply’ (that is, compose) them.
The simplest example is this: if C is a category with a single object x, ˜C
is the set of endomorphisms of x. This set is actually a monoid. Conversely,
any monoid can be regarded as the monoid of endomorphisms of x for some
category with one object x.
We summarize this situation by saying that
‘a one-object category is a monoid’. Similarly, a one-object 2-category is
a monoidal category.
It is natural to expect this pattern to continue in
all higher dimensions; in fact, it is probably easiest to cheat and deﬁne a
monoidal n-category to be an (n + 1)-category with one object.
Things get even more interesting when we iterate this process. Given
an (n + k)-category C with only one object, one morphism, and so on up
to one (k −1)-morphism, we can form an n-category whose j-morphisms
are the (j + k)-morphisms of C. In doing so we obtain a particular sort
of n-category with extra structure and properties, which we call a ‘k-tuply
monoidal’ n-category. Table 2 shows what we expect these to be like for low
values of n and k. For example, the Eckmann-Hilton argument [4, 8, 27]
shows that a 2-category with one object and one morphism is a commutative
monoid. Categorifying this argument, one can show that a 3-category with
one object and one morphism is a braided monoidal category. Similarly, we
expect that a 4-category with one object, one morphism and one 2-morphism
is a symmetric monoidal category, though this has not been worked out in
full detail, because of our poor understanding of 4-categories. The fact that
both braided and symmetric monoidal categories appear in this table seems
to explain why both are natural concepts.
11

n = 0
n = 1
n = 2
k = 0
sets
categories
2-categories
k = 1
monoids
monoidal
monoidal
categories
2-categories
k = 2
commutative
braided
braided
monoids
monoidal
monoidal
categories
2-categories
k = 3
‘’
symmetric
weakly involutory
monoidal
monoidal
categories
2-categories
k = 4
‘’
‘’
strongly involutory
monoidal
2-categories
k = 5
‘’
‘’
‘’
2. k-tuply monoidal n-categories
In any reasonable approach to n-categories there should be an n-category
nCatk whose objects are k-tuply monoidal weak n-categories. One should
also be able to treat nCatk as a full sub-(n + k)-category of (n + k)Cat,
though even for low n, k this is perhaps not as well known as it should be.
Consider for example n = 0, k = 1. The objects of 0Cat1 are one-object cate-
gories, or monoids. The morphisms of 0Cat1 are functors between one-object
categories, or monoid homomorphisms. But 0Cat1 also has 2-morphisms cor-
responding to natural transformations. We leave it as an exercise to work out
what these are in concrete terms. More recently, Kapranov and Voevodsky
[40] have considered the case n = k = 1.
We gave a detailed discussion of Table 2 in an earlier paper [4], and
subsequent work by various authors has improved our understanding of some
of the higher entries [8, 24, 26]. There are many interesting processes going
from each entry in this table to its neighbors. We list some of the main ones
below. Most of these have only been thoroughly studied for low values of n
and k, often in the framework of ‘semistrict’ n-categories, which are a kind
of halfway house between strict and weak ones.
We expect that they all
generalize to weak k-tuply monoidal n-categories for arbitrary n and k, but
in many cases this has not yet been proved.
12

• Decategoriﬁcation: (n, k) →(n −1, k). Let C be a k-tuply monoidal
n-category C. Then there should be a k-tuply monoidal (n −1)-category
DecatC whose j-morphisms are the same as those of C for j < n −1, but
whose (n −1)-morphisms are isomorphism classes of (n −1)-morphisms of
C.
• Discrete categoriﬁcation: (n, k) →(n + 1, k). There should be a ‘dis-
crete’ k-tuply monoidal (n + 1)-category DiscC having the j-morphisms of
C as its j-morphisms for j ≤n, and only identity (n + 1)-morphisms. The
decategoriﬁcation of DiscC should be C.
• Delooping: (n, k) →(n + 1, k −1). There should be a (k −1)-tuply
monoidal (n + 1)-category BC with one object obtained by reindexing, the
j-morphisms of BC being the (j + 1)-morphisms of C. We use the notation
‘B’ and call BC the ‘delooping’ of C because of its relation to the classifying
space construction in topology.
• Looping: (n, k) →(n −1, k + 1). Given objects x, y in an n-category,
there should be an (n −1)-category hom(x, y). If x = y this should be a
monoidal (n−1)-category, and we denote it as end(x). For k > 0, if 1 denotes
the unit object of the k-tuply monoidal n-category C, end(1) should be a
(k + 1)-tuply monoidal (n −1)-category. We call this process ‘looping’, and
denote the result as ΩC, because of its relation to loop space construction in
topology. For k > 0, looping should extend to an (n+k)-functor Ω: nCatk →
(n −1)Catk+1.
The case k = 0 is a bit diﬀerent: we should be able to
loop a ‘pointed’ n-category, one having a distinguished object x, by letting
ΩC = end(x). In either case, the j-morphisms of ΩC correspond to certain
(j −1)-morphisms of C.
• Forgetting monoidal structure: (n, k) →(n, k−1). By forgetting the kth
level of monoidal structure, we should be able to think of C as a (k−1)-tuply
monoidal n-category FC. This should extend to an n-functor F: nCatk →
nCatk−1.
• Stabilization: (n, k) →(n, k + 1). Though adjoint n-functors are still
poorly understood, there should be a left adjoint to forgetting monoidal
structure, which we call ‘stabilization’ and denote by S: nCatk →nCatk+1.
13

(In our previous work we called it ‘suspension’, but this is probably a bit
misleading.)
The Stabilization Hypothesis [4] states that for k ≥n + 2,
stabilization is an equivalence from nCatk to nCatk+1. This is why the nth
column of Table 2 has only n + 2 distinct entries, and then settles down.
While not yet proven or even formulated as a precise conjecture except in
low dimensions, there is a lot of good evidence for this hypothesis, some
of which we mention in the next section. In what follows, we assume this
hypothesis and call a k-tuply monoidal n-category with k = n + 2 a ‘stable
n-category’.
• Forming the generalized center: (n, k) →(n, k+1). Thinking of C as an
object of the (n+k)-category nCatk, there should be a (k+1)-tuply monoidal
n-category ZC, the ‘generalized center’ of C, given by Ωk(end(C)). In other
words, ZC is the largest sub-(n + k + 1)-category of (n + k)Cat having C as
its only object, 1C as its only morphism, 11C as its only 2-morphism, and so
on up to dimension k. This construction gets its name from the case n = 0,
k = 1, where ZC is the usual center of the monoid C. Categorifying leads to
the case n = 1, k = 1, which gives a very important construction of braided
monoidal categories from monoidal categories [38, 40, 48]. In particular, when
C is the monoidal category of representations of a Hopf algebra H, ZC is the
braided monoidal category of representations of the quantum double D(H).
Categorifying still further, Baez and Neuchl [8] treated the case n = 2, k = 1.
Subsequently Crans [24] corrected some errors in their work and dealt with
the cases n = 2, k > 1.
3
Lessons from Homotopy Theory
In Grothendieck’s famous 600-page letter to Quillen [35], he proposed devel-
oping n-category theory as a vast generalization of homotopy theory, with
a special class of n-categories — the n-groupoids — corresponding to ho-
motopy n-types. When this idea is ﬁnally worked out, we will be able to
translate all of homotopy theory into the language of n-groupoids. Even-
tually this should deepen our understanding of the conceptual foundations
of homotopy theory, and help us apply its techniques to other branches of
mathematics. But even now, with n-category theory still in its squalling in-
fancy, this translation project is worthwhile. The reason is that homotopy
14

theory is our best source of insight into n-categories. We need to be careful
here, since homotopy theory avoids precisely what is most new and inter-
esting about general n-categories, namely the presence of j-morphisms that
are not equivalences. However, this is a bit less of a drawback than it might
at ﬁrst seem. After all, the most mysterious aspect of n-category theory is
the origin of coherence laws, and these, being implemented as equivalences,
appear already in the context of n-groupoids.
ω-groupoids
homotopy types
n-groupoids
homotopy n-types
k-tuply groupal
homotopy types
ω-groupoids
of k-fold loop spaces
k-tuply groupal
homotopy n-types
n-groupoids
of k-fold loop spaces
k-tuply monoidal
homotopy types
ω-groupoids
of Ek spaces
k-tuply monoidal
homotopy n-types
n-groupoids
of Ek spaces
stable ω-groupoids
homotopy types
of inﬁnite loop spaces
stable n-groupoids
homotopy n-types
of inﬁnite loop spaces
Z-groupoids
homotopy types
of spectra
3. Translating between n-groupoid theory and homotopy theory
We can begin this translation project with the help of Table 3. In explain-
ing this table, we shall use the simplicial approach to n-groupoids instead
of the globular approach. The reason is that simplicial methods are quite
popular among topologists, so all the necessary machinery has already been
developed [49]. For other approaches to n-groupoids, see the work of Brown
and his collaborators [16], Tamsamani [63], and Batanin [10].
In topology one usually speaks of ‘j-cells’ rather than j-morphisms. A
‘simplicial set’ has a set of j-cells for each j ≥0, which we visualize as
being shaped like j-simplices. For each j-cell f there are certain (j −1)-cells
d0f, . . . , dnf called ‘faces’ and (j+1)-cells i0f, . . . , in+1f called ‘degeneracies’.
15

One also requires that the face and degeneracy maps satisfy certain well-
known relations; we will not need the formulas here.
A ‘j-dimensional horn’ in a simplicial set is, roughly speaking, a conﬁgu-
ration in which all but one of the faces of a j-simplex have been ﬁlled in by
(j −1)-cells in a consistent way. A simplicial set for which any horn can be
extended to a j-cell is called a ‘Kan complex’. A Kan complex is the sim-
plicial version of an ω-groupoid: a structure like an n-groupoid, but without
any cutoﬀon the dimension of the j-morphisms.
To see how this idea works, suppose we have a Kan complex containing
a ‘composable’ pair of 1-cells f and g, meaning that d1f = d0g. This gives
a 2-dimensional horn with f and g as two of its faces, so we can extend this
horn to a 2-cell F, which has as its third face some 1-cell h:
s
s




S
S
S
S
SS
.....................
.....................
..........................................
.....................
s
.....................
F
x
y
z
f
g
h
In this situation, we call h ‘a composite’ of f and g, and think of F as the
‘process of composition’. Note that there is not a unique preferred composite,
so composition is not an operation in the traditional sense. However, any
two composites can be seen to be equivalent, where two j-cells with all the
same faces are said to be ‘equivalent’ if there is a (j + 1)-cell having them as
two of its faces, the rest being degenerate. From an algebraic viewpoint, the
reason is that we have deﬁned composition by a universal property.
Thanks to the magic of universal properties, Kan complexes are a won-
derfully eﬃcient formalism for studying ω-groupoids. In particular, there is
no need to explicitly list coherence laws! They are all implicit in the fact that
every horn can be extended to a cell, and they automatically become explicit
if we arbitrarily choose processes of composition. For example, given a com-
posable triple of 1-cells, one obtains the associator by considering a 3-simplex
with these as three of its edges and making clever use of the horn-ﬁlling con-
dition. Likewise, given a composable quadruple of 1-cells, one obtains the
pentagon coherence law by considering a suitable 4-simplex. In fact, all the
16

higher coherence laws for associativity, which Stasheﬀ[59] organized into
polyhedra called ‘associahedra’, have been obtained from higher-dimensional
simplices by Street [61] in his simplicial approach to ω-categories.
If we take the liberty of calling Kan complexes ‘ω-groupoids’, we can set
up a correspondence between ω-groupoids and homotopy types as follows.
Given a topological space X, we can form an ω-groupoid Π(X) whose j-
cells are all the continuous maps from the standard j-simplex into X, with
faces and degeneracies deﬁned in the obvious way. We think of this as the
‘fundamental ω-groupoid of X’. Conversely, given an ω-groupoid G, we can
form a topological space by taking one geometrical j-simplex for each j-cell
of G and gluing them all together using the face and degeneracy maps in the
obvious way. This is called the ‘geometric realization of G’ and denoted |G|.
We thus obtain functors going both ways between the category ωGpd,
having Kan complexes as objects and simplicial maps between these as mor-
phisms, and the category Top, having nice spaces as objects and continuous
maps as morphisms. (We say a space is ‘nice’ if it is homotopy equivalent
to a CW complex; we use this nonstandard deﬁnition of Top to exclude
pathological spaces like the topologist’s sine curve.) While these functors
are adjoint to one another, they do not set up an equivalence of categories.
Nonetheless, we expect that ωGpd and Top are ‘the same’ in a subtler sense
— namely, as ω-categories. More precisely, these categories should extend
to ω-categories, where the 2-morphisms correspond to homotopies between
maps, the 3-morphisms correspond to homotopies between homotopies, and
so on. The functors
Π: Top →ωGpd,
| · |: ωGpd →Top
should then extend to ω-functors, giving an equivalence of ω-categories.
In the absence of this sort of result, topologists have traditionally used
other language to express the fact that ωGpd and Top are ‘the same’ for the
purposes of homotopy theory. For example, Π and |·| establish an equivalence
between the homotopy category of ω-groupoids and the homotopy category
of nice spaces. Here the ‘homotopy category’ is formed by adjoining formal
inverses to all maps inducing isomorphisms of homotopy groups [32], where
one deﬁnes the homotopy groups of a Kan complex to be those of its geometric
realization. An object in the homotopy category of Top is called a ‘homotopy
type’ [11].
17

Starting from the correspondence between ω-groupoids and homotopy
types we can set up the other correspondences listed in Table 3. For example,
we can deﬁne an ‘n-groupoid’ to be a Kan complex such that for j > n+1 any
conﬁguration in which all the faces of a j-simplex have been ﬁlled in by (j−1)-
cells in a consistent way can be uniquely extended to a j-cell. This ensures
that all cells of dimension higher than n play the role of equations. The
geometric realization of an n-groupoid is a space with vanishing homotopy
groups above dimension n, and the homotopy category of such spaces is called
the category of ‘homotopy n-types’. The homotopy category of n-groupoids
is equivalent to the category of homotopy n-types, and in fact one expects
an equivalence of (n + 1)-categories.
We deﬁne a ‘k-tuply groupal ω-groupoid’ to be a Kan complex with only
one j-cell for j < k. Under the correspondence between ω-groupoids and
homotopy types, these correspond to homotopy types with vanishing ho-
motopy groups below dimension k. Similarly, we deﬁne a ‘k-tuply groupal
n-groupoid’ to be an (n + k)-groupoid with only one j-cell for j < k. These
correspond to homotopy (n+k)-types with vanishing homotopy groups below
dimension k.
Recall from the previous section that we can think of an n-category C
with only one j-morphism for j < k as an n-category with extra structure and
properties. In the globular approach we do this by ‘reindexing’, constructing
an n-category whose j-morphisms are the (j +k)-morphisms of C. Similarly,
it is often useful to think of a k-tuply groupal n-groupoid G as an n-groupoid
with extra structure and properties.
However, in the simplicial approach
we cannot simply reindex the cells of G. Instead, we can use a standard
construction [49] to form a Kan complex ΩkG whose geometric realization is
homotopy equivalent to the kth loop space of the geometric realization of G.
This is why in Table 3 we say that k-tuply groupal n-groupoids correspond
to homotopy n-types of k-fold loop spaces.
Similarly, k-tuply groupal ω-
groupoids correspond to homotopy types of k-fold loop spaces.
Exactly what extra structure and properties does an ω-groupoid have if it
is k-tuply groupal? In other words, what extra structure and properties does
a space have if it is homotopy equivalent to a k-fold loop space? This question
has inspired the development of many interesting mathematical tools. Here
we shall describe just one of these, the ‘little k-cubes operad’, invented by
Boardman and Vogt [13, 14] and cast into the language of operads by May
[50].
18

We begin with the deﬁnition of an ‘operad’. For each ℓ≥0, an operad O
has a set Oℓof ‘ℓ-ary operations’. We visualize such an operation as a tree
with one vertex or ‘node’, ℓedges representing inputs coming in from above,
and one edge representing the output coming out from below:
t
B
B
BB



    @
@
@
@
We can compose these trees by feeding the outputs of ℓof them into one with
ℓinputs:
r
r
r
r
BB   @
@
aaa!!!
J
J 

In other words, for any i1, . . . , iℓthere is a function
Oℓ× Oi1 × · · · × Oiℓ
→
Oi1+···+iℓ.
(f, g1, . . . , gℓ)
7→
f · (g1, . . ., gℓ)
We require that composition is ‘associative’, meaning that
f · (g1 · (h11, . . ., h1i1), . . . , gℓ· (hℓ1, . . ., hℓiℓ)) =
(f · (g1, . . . gℓ)) · (h11, . . . , h1i1, . . . . . . , hℓ1, . . . , hℓiℓ)
whenever both sides are well-deﬁned. This makes composites such as the
following one unambiguous:
19

r
r
r
r
r r r
r
r
r
r
BB   @
@
aaa!!!
J
J 

CC

AA

LL
TTCC
We also require the existence of an unit operation 1 ∈O1 such that
1 · (f) = f,
f · (1, . . ., 1) = f
for all f ∈Oℓ.
What we have so far is an planar operad. For a full-ﬂedged operad, we
also assume that there are right actions of the symmetric groups Sℓon the
sets Oℓfor which the following compatibility conditions hold. First, for any
f ∈Oℓ, σ ∈Sℓ, and gj ∈Oij for 1 ≤j ≤ℓ, we require
(fσ) · (gσ(1), . . . , gσ(ℓ)) = (f · (g1, . . . , gℓ)) ρ(σ),
where
ρ: Sℓ→Si1+···+iℓ
is the obvious homomorphism. Second, for any f ∈Oℓ, and gj ∈Oij, σj ∈Sij
for 1 ≤j ≤ℓ, we require
f · (g1σ1, . . . , gℓσℓ) = (f · (g1, . . . , gℓ)) ρ′(σ1, . . . , σℓ),
where
ρ′: Si1 × · · · × Siℓ→Si1+···+iℓ
is the obvious homomorphism.
Just as groups are interesting for their actions, operads are interesting for
their ‘algebras’. Given an operad O, an ‘O-algebra’ is a set A equipped with
actions
α: Oℓ× Aℓ→A,
or equivalently, maps
α: Oℓ→hom(Aℓ, A)
20

representing the ℓ-ary operations of O as actual operations on A. We require
that α sends the identity operation 1 ∈O1 to the identity function on A and
sends composites to composites:
α(f · (g1, . . . , gℓ)) = α(f) ◦(α(g1) × · · · × α(gℓ)).
We also require that
α(fσ) = α(f)σ,
where f ∈Oℓ, and σ ∈Sℓacts on hom(Aℓ, A) on the right by permuting the
factors in Aℓ. We omit this requirement if O is merely planar.
More generally, one can deﬁne operads and their algebras in any sym-
metric monoidal category C, which amounts to replacing sets and functions
in the above deﬁnitions by objects and morphisms in C, and replacing the
Cartesian product by the tensor product in C. We shall mainly be inter-
ested in operads in the category Top, which are called ‘topological operads’.
Spaces with extra structure and properties can often be described as algebras
of topological operads.
The most interesting example for us is the ‘little k-cubes operad’, C(k).
Here the space C(k)ℓof ℓ-ary operations is the space of ℓdisjoint k-cubes lin-
early embedded in the cube [0, 1]k with their edges parallel to the coordinate
axes:
.
An algebra of the little k-cubes operad is called an ‘Ek space’. Given a
space X with a basepoint, there is an obvious way to make ΩkX into an
Ek space using the fact that it consists of maps f: [0, 1]k →X sending the
boundary of the cube to the basepoint. Conversely, the set of components of
an Ek space automatically becomes a monoid, and if this monoid is a group
21

then the Ek space is homotopy equivalent to a k-fold loop space. Homotopy
types of Ek spaces are thus a bit more general than homotopy types of k-fold
loop spaces. While the latter correspond to k-tuply groupal ω-groupoids,
the former should correspond to ‘k-tuply monoidal ω-groupoids’, that is, ω-
categories with only one j-morphism for j < k, for which all j-morphisms
are equivalences for j > k — but not necessarily for j = k. There should
similarly be a correspondence between k-tuply monoidal n-groupoids and
homotopy n-types of Ek spaces.
At the end of the previous section we listed various processes going be-
tween neighboring entries of Table 2. When restricted to k-tuply groupal
n-groupoids, most of these processes have well-known topological interpreta-
tions, which we summarize below. We let nTypek stand for the category of
homotopy n-types of k-fold loop spaces. It is easiest to deﬁne this as the full
subcategory of the homotopy category of nice spaces X with basepoint such
that πj(X) = 0 unless k ≤j ≤n+k. However, by repeated looping, we shall
think of the objects of nTypek as k-fold loop spaces with vanishing homotopy
groups above dimension n. A technical point worth noting is that for k = 0,
these really correspond to n-groupoids equipped with a distinguished 0-cell.
• Decategoriﬁcation: (n, k) →(n −1, k). Let X be a k-fold loop space
with πj(X) = 0 for j > n. Then we can kill oﬀits nth homotopy group by
attaching cells, obtaining a k-fold loop space DecatX with πj(X) = 0 for
j > n −1. There is a map X →DecatX inducing isomorphisms πj(X) ∼=
πj(DecatX) for j ≤n −1. This process gives a functor Decat: nTypek →
(n −1)Typek.
• Discrete categoriﬁcation: (n, k) →(n + 1, k). The forgetful functor
Disc: nTypek →(n + 1)Typek is the left adjoint of Decat.
• Delooping: (n, k) →(n+1, k−1). There is a (k−1)-fold loop space BX,
called the ‘classifying space’ or ‘delooping’ of X, with πj(BX) ∼= πj−1(X).
This process gives a functor B: nTypek →(n + 1)Typek−1.
• Looping: (n, k) →(n −1, k + 1). For k > 0, there is a (k + 1)-fold loop
space ΩX, consisting of all based loops in X, with πj(ΩX) ∼= πj−1(X). This
process gives a functor Ω: nTypek →(n −1)Typek+1 that is right adjoint to
B. For k > 0, delooping followed by looping is naturally isomorphic to the
22

identity functor.
• Forgetting monoidal structure: (n, k) →(n, k −1). There is a forgetful
functor F: nTypek →nTypek−1.
• Stabilization: (n, k) →(n, k + 1). There is a left adjoint to F called
‘stabilization’, which we denote by S: nTypek →nTypek+1. If we deﬁne the
‘suspension’ functor Σ: (n −1)Typek →nTypek to be the left adjoint of the
composite
nTypek
(n −1)Typek+1
(n −1)Typek
-
Ω
-
F
then stabilization is naturally isomorphic to suspension followed by looping.
The Freudenthal suspension theorem says that stabilization is an equivalence
for k ≥n + 2.
• Forming the generalized center: (n, k) →(n, k + 1). This process needs
to be adapted to stay within the world of k-tuply groupal groupoids, or in
other words, homotopy n-types of k-fold loop spaces.
We let aut(X) be
the automorphism group of X as an object of nTypek, and deﬁne ZX =
Ωk(aut(X)).
The fact that stabilization is an equivalence for k ≥n+2 leads us to deﬁne
a ‘stable n-groupoid’ to be an (n + 2)-tuply groupal n-groupoid. We expect,
in fact, that there is an (n + 1)-category of stable n-groupoids, and that the
decategoriﬁcation of this is the n-category of stable (n −1)-groupoids. If
we could take the inverse limit in a suitable sense, we would hope to obtain
an ω-category of ‘stable ω-groupoids’.
These should correspond to what
topologists call ‘inﬁnite loop spaces’, an inﬁnite loop space being a sequence
of spaces X0, X1, . . ., equipped with homeomorphisms fk: Xk →ΩXk+1.
Inﬁnite loop spaces play an important role in stable homotopy theory
[1, 29, 50]. A closely related concept is that of a ‘spectrum’. Just as an
inﬁnite loop space should correspond to a stable ω-groupoid, a spectrum
should correspond to a ‘Z-groupoid’, some sort of gadget with j-morphisms
for all j ∈Z, all of which are equivalences. In fact, strict Z-categories are
easily deﬁned in the globular approach, and strict Z-groupoids then work
out to be the same as Z-graded chain complexes of abelian groups. Spectra
can be viewed as a generalization of such chain complexes. Apart from what
23

we know about spectra, however, the theory of ‘weak Z-categories’ remains
largely terra incognita.
4
Examples of Categoriﬁcation
In what follows, we consider iterated categoriﬁcations of the natural numbers,
and some variations on this theme where we adjoin formal inverses or duals.
We shall see that quite a bit of mathematics amounts to the study of the
resulting objects, some of which are astoundingly complicated. The more ‘n-
groupoidal’ examples are familiar from homotopy theory, but the importance
of some of the more ‘n-categorical’ ones has only become clear in recent work
on topological quantum ﬁeld theory.
The natural numbers are the free monoid on one element, while the in-
tegers are the free group on one element. Some categoriﬁed analogs of these
notions are listed in Table 4. In the rest of this section, we work through
these examples in detail.
We begin with the simplest algebraic structure of all: sets. The free set
on one element is just the one-element set, denoted by 1. Note that here
we are using the word ‘the’ in a generalized sense. Since all sets with the
same cardinality are isomorphic, any singleton {x} can be regarded as ‘the’
1-element set. In a set, when we speak of ‘the’ element with some property,
we imply that any other element having this property is equal to this one,
but in a category, when we speak of ‘the’ object with some property, we
mean that any other object having this property is isomorphic to this one
— typically by means of a uniquely speciﬁed isomorphism. More generally,
when we speak of ‘the’ object of an n-category having some property, we
mean that any other object with this property is equivalent — typically by
means of an equivalence which is speciﬁed uniquely up to an equivalence
which is speciﬁed uniquely up to . . . and so on. This recursive weakening of
the notion of uniqueness, and therefore of the meaning of ‘the’, is fundamental
to categoriﬁcation.
24

sets
1
monoids
N
groups
Z
k-tuply monoidal
nBraidk
n-categories
k-tuply monoidal
Braidk
ω-categories
stable n-categories
nBraid
stable ω-categories
Braid∞
k-tuply monoidal
nTangk
n-categories with duals
stable n-categories
nCob
with duals
k-tuply groupal
Πn(ΩkSk)
n-groupoids
k-tuply groupal
Π(ΩkSk)
ω-groupoids
stable ω-groupoids
Π(Ω∞S∞)
Z-groupoids
the sphere spectrum
4. Algebraic structures and the free such structures on one generator
Next consider the free category on one object. This is just the category
with one object x and one morphism 1x: x →x. More generally, for each
n, consider the free n-category on one object.
In the globular approach
to n-categories we may take this to be the n-category with one object x,
one morphism 1x: x →x, one 2-morphism 11x: 1x ⇒1x, and so on up to
one n-morphism.
This is an n-groupoid, namely the globular version of
the fundamental n-groupoid of a point.
By the remarks in the previous
paragraph, the fundamental n-groupoid of any contractible space may also
be considered ‘the free n-category on one object’.
Things become more interesting when we generalize further and consider
the free k-tuply monoidal n-category on one object, which we denote by
nBraidk, for reasons soon to be apparent. Let us see what this looks like in
the simplest cases, namely n = 0 and 1. The Stabilization Hypothesis says
that we only need to consider k ≤n + 2.
• 0Braid0, the free set on one element. This is the one-element set, 1.
25

• 0Braid1, the free monoid on one element. This is the natural numbers,
N, with addition as its monoid structure.
• 0Braid2, the free commutative monoid on one element. This is again N,
now regarded as a commutative monoid with addition as its monoid structure.
• 1Braid0, the free category on one object. This is the category with one
object and one morphism.
• 1Braid1, the free monoidal category on one object x. The objects of
this category are the tensor powers x⊗ℓ, and the only morphisms are identity
morphisms. (Here we are using the Mac Lane coherence theorem to make
1Braid1 into a strict monoidal category.) This is the discrete categoriﬁcation
of 0Braid1.
• 1Braid2, the free braided monoidal category on one object x. This is the
braid groupoid. The objects of this groupoid are the tensor powers x⊗ℓ, and
the only morphisms are automorphisms, with end(x⊗ℓ) being the ℓ-strand
braid group Bℓ, which has generators σi (1 ≤i ≤ℓ−1) and relations
σiσi+1σi
=
σi+1σiσi+1,
σiσj
=
σjσi
for |i −j| > 1.
• 1Braid3, the free symmetric monoidal category on one object x. This is
the symmetric groupoid. The objects of this groupoid are the tensor powers
x⊗ℓ, and the only morphisms are automorphisms, with end(x⊗ℓ) being the
symmetric group on ℓletters, Sℓ. This group can be given a presentation like
that of Bℓ, but with the additional relations
σ2
i = 1.
The symmetric groupoid is equivalent to the category with ﬁnite sets as ob-
jects and bijections as morphisms. Note that, like the category FinSet having
ﬁnite sets as objects and arbitrary functions as morphisms, this category is
a rig category with N as its decategoriﬁcation.
The following heuristic argument allows us to guess a general formula for
nBraidk. In all the cases considered above, nBraidk is a k-tuply monoidal
26

n-groupoid. This should hold in general, since for j > 0 the j-morphisms
of nBraidk arise from coherence laws, and should thus be equivalences. We
also expect that nBraidk is the ‘free k-tuply monoidal n-groupoid on one
object’. By Table 3, nBraidk should thus be the fundamental n-groupoid
of some Ek space Xn,k with vanishing homotopy groups above dimension
n. We also expect that Decat((n + 1)Braidk) ≃nBraidk, so there should
be some sort of inverse limit, the ‘free k-tuply monoidal ω-groupoid on one
object’, which we denote by Braidk. Corresponding to this there should be a
sequence of maps Xn+1,k →Xn,k, with Xn,k obtained from Xn+1,k by killing
its (n + 1)st homotopy group, and with the inverse limit being a space Xk
whose fundamental ω-groupoid is Braidk. By the correspondence between
k-tuply monoidal ω-groupoids and Ek spaces, we expect that Xk is the ‘free
Ek space on one point’.
While this argument involves many forms of reasoning that have not yet
been made rigorous, there is at least a precise meaning to the ‘free Ek space
on one point’. Given any operad O in the category of pointed spaces and any
pointed space X, there is a standard construction of the ‘free O-algebra on
X’, due to May [50]. To form the free O-algebra on one point, we should ﬁrst
form the free free pointed space on one point, namely S0, and then apply
this standard construction. The result is the disjoint union
∞
a
ℓ=0
Oℓ/Sℓ
which becomes an O-algebra in a tautologous way.
In the case at hand, since the the operad for Ek spaces is the little k-cubes
operad C(k), the free Ek space on one point is
Xk =
∞
a
ℓ=0
C(k)ℓ/Sℓ.
We expect, therefore, an equivalence
nBraidk ≃Πn(Xk).
To work with this equivalence, it is helpful to note that C(k)ℓis homotopy
equivalent to the ‘conﬁguration space’ [55] of ℓdistinct points in the k-cube:
{(x1, . . ., xℓ) ∈[0, 1]k : xi ̸= xj if i ̸= j}.
27

Moreover, this homotopy equivalence is compatible with the obvious actions
of Sℓ. It follows that Xk is homotopy equivalent to the pointed space of all
ﬁnite sets of distinct points in the k-cube, where the empty set plays the role
of basepoint.
To see how this works in an example, consider the case n = 1, k = 2. The
space X2 is equivalent to the space of ﬁnite sets of points in the square. A
path in X2 amounts to a braid with an arbitrary number of strands. It follows
that the fundamental groupoid of X2 is equivalent to the braid groupoid, so
1Braid2 ≃Π1(X2).
More generally, in the globular approach to n-categories, the n-morphisms
of nBraidk should correspond to certain n-dimensional surfaces in [0, 1]n+k,
which we could call ‘n-braids in n+k dimensions’. We see here an instance of
a general theme, namely that in a k-tuply monoidal n-category the number
n often plays the role of ‘dimension’, while k plays the role of ‘codimension’.
Now let us turn to the ‘free k-tuply groupal n-groupoid on one object’,
which we temporarily denote by Gn,k. For n = 0, k = 1 this is just the free
group on one element, namely the integers, Z. For higher values of n and k
we may thus regard Gn,k as a categoriﬁed, stabilized version of Z. In what
follows we restrict attention to the case k > 0, since in this case a k-tuply
groupal n-groupoid automatically has a distinguished object, the unit.
Again we can use a heuristic argument to guess a formula for Gn,k. Since
we expect that Gn,k ≃DecatGn+1,k, there should be some sort of inverse
limit Gk, the ‘free k-tuply groupal ω-groupoid on one object’. By Table 3 we
expect Gk to be the fundamental ω-groupoid of some k-fold loop space, so the
problem is to determine this space. Just as the group Z is obtained from the
monoid N by adjoining formal inverses, Gk should be obtained from Braidk
by adjoining formal weak inverses for all objects. More generally, we should
be able to turn any k-tuply monoidal ω-groupoid into a k-tuply groupal ω-
groupoid by adjoining formal weak inverses of objects. In the language of
homotopy theory, this process should turn Ek spaces into k-fold loop spaces.
In fact, this process is familiar in homotopy theory under the name of ‘group
completion’ [9]. Since nBraidk is the fundamental ω-groupoid of Xk, we thus
expect Gk to be the fundamental ω-groupoid of the group completion of Xk.
The group completion of Xk is homotopy equivalent to ΩkSk, so we expect
an equivalence
Gn,k ≃Πn(ΩkSk).
28

Group completion automatically gives a map from Xk to ΩkSk which induces
a k-tuply monoidal n-functor
Πn(Xk) →Πn(ΩkSk).
If the above guesses are correct, n-braids and the homotopy types of
spheres play a fundamental role in n-category theory.
Since the homo-
topy groups of spheres are notoriously hard to compute, this means that
n-category theory has a certain built-in complexity. Perhaps we should am-
plify on this a bit. Suppose that C is a globular (n + k)-category and x is
any object of C. Let 11 = 1x and recursively deﬁne 1i+1 to be 11i. Then we
are claiming that any k-morphism f: 1k−1 →1k−1 determines, at least up to
equivalence, a k-tuply monoidal n-functor
nBraidk →end(1k−1)
mapping the generator of nBraidk to f. Moreover, if f is an equivalence, we
claim this factors through a k-tuply groupal n-functor
Πn(ΩkSk) →end(1k−1)
whose range consists entirely of equivalences.
In our previous exploration of these ideas [4], we emphasized the im-
portance of a notion lying halfway between n-groupoids and fully general n-
categories, which we called ‘n-categories with duals’. The idea here is that du-
als are an interesting generalization of inverses. In particular, the Tangle Hy-
pothesis states that there is a ‘free k-tuply monoidal n-category with duals on
one object’, nTangk, having as n-morphisms certain n-dimensional surfaces
in [0, 1]n+k called ‘framed n-tangles in n + k dimensions’. For n = 1, k = 2
this was proved by Freyd and Yetter, Turaev, and Shum [30, 56, 65, 66]. This
special case serves as the basis of recent work on 3-dimensional topological
quantum ﬁeld theory. Indeed, the fact that n-categories with duals are more
general than n-groupoids is the reason why topological quantum ﬁeld theory
can give more reﬁned information than homotopy theory. Recently progress
has been made on the case n = 2, k = 2, which has also illuminated the
theory of 2-braids in 4 dimensions [6, 7, 25, 43]. In general, we expect that
in the stable range nTangk is equivalent to the stable n-category of ‘framed
cobordisms’. Also, the universal property of nTangk should give a k-tuply
monoidal n-functor
T: nTangk →Πn(ΩkSk),
29

generalizing the Thom-Pontryagin construction. For more details the reader
must turn to the references. Our main point here is that if the Tangle Hypoth-
esis holds, a great deal, not only of homotopy theory, but also of topological
quantum ﬁeld theory arises naturally from the study of categoriﬁed analogs
of Z!
To conclude, let us note that all the entries in Table 4 should be equipped
with ‘multiplication’ as well as ‘addition’ operations. For example, by virtue
of being the free monoid on one element, N automatically becomes a rig in
the following way: given an element n ∈N, there is a unique monoid homo-
morphism f: N →N with f(1) = n, namely multiplication by n. Likewise,
by virtue of being the free group on one element, Z automatically becomes
a ring. Categorifying once and stabilizing various numbers of times, we see
that for k > 0, 1Braidk is a rig category and Π1(ΩkSk) is a ‘ring category’:
a rig category for which objects have additive inverses. This pattern should
continue throughout the rest of Table 4.
For example, in stable homotopy theory it is well known that the sphere
spectrum is a ‘ring spectrum’ [51].
We expect that the sphere spectrum
corresponds to the ‘free Z-groupoid on one object’. Indeed, Joyal has called
the sphere spectrum ‘the true integers’, since it is an inﬁnitely categoriﬁed,
inﬁnitely stabilized analog of Z.
5
n-Categories and the Algebra of Opetopes
We hope the previous sections have whetted the reader’s appetite for a rig-
orous theory of n-categories by sketching a bit of what we might do if we
had one. Now we turn to the issue of actually developing this theory. It
seems that any deﬁnition of n-category involves a choice of the basic shapes
of j-morphisms — globes, simplices, or whatever. It also involves a choice of
ways to compose j-morphisms by gluing these basic shapes together. Most
importantly, it requires a careful treatment of coherence laws. In what fol-
lows we present an approach in which all these issues are handled simultane-
ously using the formalism of operads. In this approach, the basic shapes of
j-morphisms are the j-dimensional ‘opetopes’. The allowed ways of compos-
ing j-morphisms correspond precisely to the (j + 1)-dimensional opetopes.
Moreover, the sequence of higher coherence laws satisﬁed by composition
correspond to opetopes of ever higher dimension.
30

Before going into the details, let us sketch how this works. First consider
some low-dimensional opetopes. The only 0-dimensional opetope is the point:
The only way to glue together 0-dimensional opetopes is the trivial way: the
identity operation. The only 1-dimensional opetope is thus the interval, or
more precisely the arrow:
The allowed ways of gluing together 1-dimensional opetopes are given by the
2-dimensional opetopes. The ﬁrst few 2-dimensional opetopes are as follows:
The allowed ways of gluing together 2-dimensional opetopes are given by the
3-dimensional opetopes. There are many of these; a simple example is as
follows:
This may be a bit hard to visualize, but it depicts a 3-dimensional shape
whose front consists of two 3-sided ‘infaces’, and whose back consists of a
single 4-sided ‘outface’. We have drawn double arrows on the infaces but not
on the outface. Note that while this shape is topologically a ball, it cannot
be realized as a polyhedron with planar faces. This is typical of opetopes.
In general, an (n+1)-dimensional opetope has any number of infaces and
exactly one outface: the infaces are n-dimensional opetopes glued together
in a tree-like pattern, while the outface is a single n-dimensional opetope.
For example, the 3-dimensional opetope above corresponds to the following
tree:
31

The two triangular infaces of the opetope correspond to the two nodes in
this tree. This is a rather special tree; in general, we allow nonplanar trees
with any number of nodes and any number of edges coming into each node.
Our approach to n-categories is a bit like the Kan complex approach
to n-groupoids described in Section 3, but with simplicial sets replaced by
‘opetopic sets’.
Basically, an opetopic set is a set of ‘cells’ shaped like
opetopes, such that any face of a cell is again a cell.
In an n-category,
the j-dimensional cells play the role of j-morphisms. An opetopic set is an
n-category if it satisﬁes the following two properties:
1) “Any niche has a universal occupant.” A ‘niche’ is a conﬁguration
where all the infaces of an opetope have been ﬁlled in by cells, but not the
outface or the opetope itself:
f
g
i
v
w
x
y
z
?
?
h
An ‘occupant’ of the niche is a way of extending this conﬁguration by ﬁlling
in the opetope (and thus its ouface) with a cell:
f
g
i
v
w
x
y
z
h
j
U
32

The ‘universality’ of an occupant means roughly that every other occupant
factors through the given one up to equivalence. To make this precise we
need to deﬁne universality in a rather subtle recursive way. We may think of
a universal occupant of a niche as ‘a process of composing’ the infaces, and
its outface as ‘a composite’ of the infaces.
2) “Composites of universal cells are universal.” Suppose that U, V, and
W below are universal cells:
v
w
x
y
z
f
g
h
i
j
k
l
U
V
W
Then we can compose them, and we are guaranteed that their composite is
again universal, and thus that the outface l is a composite of the cells f, g, h, i.
Note that a process of composing U, V, W is described by a universal occupant
of a niche of one higher dimension.
Note that in this approach to n-categories, composition of cells is not an
operation in the traditional sense: the composite is deﬁned by a universal
property, and is thus unique only up to equivalence. Only at the top level,
for the n-cells of an n-category, is the composite truly unique. The main
advantage of deﬁning composition by a universal property is that we do not
need to list coherence laws: all the right coherence laws arise automatically!
This is a very important point, because in some sense it answers the puzzle
concerning the origin of coherence laws.
At ﬁrst this answer may seem as puzzling as the puzzle it answers. Why
does deﬁning composition by a universal property automatically generate all
the right coherence laws? One reason is that coherence laws are ‘right’ when
they hold in interesting examples, and in these examples composition is usu-
ally deﬁned by a universal property. Consider for example the categoriﬁed
version of N discussed in the Introduction: the category FinSet. Correspond-
ing to addition in N, the category FinSet has ﬁnite coproducts, i.e., disjoint
unions. Coproducts are deﬁned by a universal property, and this universal
property immediately implies number of things. First, coproducts are unique
33

up to canonical isomorphism. Second, if we pick a coproduct x ⊔y for every
pair of objects x, y ∈FinSet, making disjoint union into an operation in the
traditional sense, we obtain natural isomorphisms
ax,y,z: (x ⊔y) ⊔z →x ⊔(y ⊔z),
lx: ∅⊔x →x,
rx: x ⊔∅→x.
Third, these natural isomorphisms satisfy coherence laws making FinSet into
a monoidal category.
In short, the standard deﬁnition of monoidal cate-
gory, which lists coherence laws, is best regarded as a spinoﬀof the fact
that monoidal structures deﬁned by universal properties automatically sat-
isfy these laws.
Studying this example also suggests another idea which is built into our
deﬁnition of n-categories. To prove the existence of the associator ax,y,z one
uses the universal property for the coproduct of three objects, and to prove
the existence of lx and rx one uses the universal property for the coproduct of
one object. This suggests that in an n-category, arbitrary ℓ-ary composites
should be treated on an equal footing with binary composites. The formalism
of operads is admirably suited for this task.
In what follows we ﬁrst review the theory of typed operads. Then we use
this to deﬁne the opetopes, and more generally, ‘O-opetopes’ for any typed
operad O. After a brief discussion of some notions concerning O-opetopic
sets, we give the the deﬁnition of n-categories, and more generally, n-coherent
O-algebras. We skim over some technical details which can be found in our
paper [5].
5.1
Typed Operads
To describe ‘many-sorted’ or ‘typed’ algebraic structures using operads, we
need to generalize the concept of operad a bit. For any set S of ‘types’, there
is a notion of ‘S-operad’. The basic idea is that for any x1, . . ., xℓ, x′ ∈S,
an S-operad O has a set O(x1, . . ., xℓ; x′) of k-ary operations with inputs of
type x1, . . . , xℓand output of type x′. As in an ordinary untyped operad, we
can visualize such an operation as a tree, but now we label the edges of the
tree by types. For example, an operation f ∈O(x1, . . . , x4; x′) is drawn as
follows:
34

t
B
B
BB



    @
@
@
@
x1
x′
x2
x3
x4
f
More precisely:
Deﬁnition 1. For any set S, an ‘S-operad’ O consists of
1. for any x1, . . . , xℓ, x′ ∈S, a set O(x1, . . . , xℓ; x′)
2. for any f ∈O(x1, . . . , xℓ; x′) and any g1 ∈O(x11, . . ., x1i1; x1), . . . , gℓ∈
O(xℓ1, . . . , xℓiℓ; xℓ), an element
f · (g1, . . . , gℓ) ∈O(x11, . . ., x1i1, . . .. . . , xℓ1, . . . , xℓiℓ; x′)
3. for any x ∈S, an element 1x ∈O(x; x)
4. for any permutation σ ∈Sℓ, a map
σ: O(x1, . . . , xℓ; x′)
→
O(xσ(1), . . . , xσ(ℓ); x′)
f
7→
fσ
such that:
(a) whenever both sides make sense,
f · (g1 · (h11, . . . , h1i1), . . . , gℓ· (hℓ1, . . ., hℓiℓ)) =
(f · (g1, . . . gℓ)) · (h11, . . . , h1i1, . . . . . . , hℓ1, . . . , hℓiℓ)
(b) for any f ∈O(x1, . . . , xℓ; x′),
f = 1x′ · f = f · (1x1, . . ., 1xℓ)
(c) for any f ∈O(x1, . . . , xℓ; x′) and σ, σ′ ∈Sℓ,
f(σσ′) = (fσ)σ′
35

(d) for any f ∈O(x1, . . . , xℓ; x′), σ ∈Sℓ, and g1 ∈O(x11, . . . , x1i1; x1),
. . . , gℓ∈O(xℓ1, . . . , xℓiℓ; xℓ),
(fσ) · (gσ(1), . . . , gσ(ℓ)) = (f · (g1, . . . , gℓ)) ρ(σ),
where ρ: Sℓ→Si1+···+iℓis the obvious homomorphism.
(e) for any f ∈O(x1, . . . , xℓ; x′), g1 ∈O(x11, . . . , x1i1; x1), . . . ,
gℓ∈O(xk1, . . . , xℓiℓ; xℓ), and σ1 ∈Si1, . . . , σℓ∈Siℓ,
(f · (g1σ1, . . . , gℓσℓ)) = (f · (g1, . . . , gℓ)) ρ′(σ1, . . . , σℓ),
where ρ′: Si1 × · · · × Siℓ→Si1+···+iℓis the obvious homomorphism.
There is an obvious notion of a morphism from an S-operad O to an S-
operad O′: a function mapping each set O(x1, . . . , xℓ; x′) to the corresponding
set O′(x1, . . . , xℓ; x′), preserving composition, identities, and the symmetric
group actions. An important example is an ‘algebra’ of an S-operad:
Deﬁnition 2. For any S-operad O, an ‘O-algebra’ A consists of:
1. for any x ∈S, a set A(x).
2. for any f ∈O(x1, . . . , xℓ; x′), a function
α(f): A(x1) × · · · × A(xℓ) →A(x′)
such that:
(a) whenever both sides make sense,
α(f · (g1, . . . , gℓ)) = α(f)(α(g1) × · · · × α(gℓ))
(b) for any x ∈C, α(1x) acts as the identity on A(x)
(c) for any f ∈O(x1, . . . , xℓ, x′) and σ ∈Sℓ,
α(fσ) = α(f)σ,
where σ ∈Sℓacts on the function α(f) on the right by permuting its
arguments.
36

In what follows, by ‘operad’ we will mean an S-operad for some set S
of types. We can think of such an operad as a simple sort of theory, and
its algebras as models of this theory.
Thus we can study operads either
‘syntactically’ or ‘semantically’. To describe an operad syntactically, we list:
1. the set S of types,
2. the sets O(x1, . . ., xℓ; x′) of operations,
3. the set of all reduction laws saying that some composite of operations
(possibly with arguments permuted) equals some other operation.
This is like a presentation in terms of generators and relations, with the
reduction laws playing the role of relations. On the other hand, to describe
an operad semantically, we describe its algebras.
For example, the simplest operad is the ‘initial untyped operad’ I. Syn-
tactically, this is the S-operad with:
1. only one type: S = {x},
2. only one operation, the identity operation 1 ∈O(x; x),
3. all possible reduction laws.
Semantically, I is the operad whose algebras are just sets.
Another important operad is the ‘terminal untyped operad’ T. This is
the S-operad with
1. only one type: S = {x},
2. exactly one operation of each arity,
3. all possible reduction laws.
The algebras of T are commutative monoids, with the ℓ-ary operation being
ℓ-fold multiplication, or the unit element when ℓ= 0, since nullary operations
correspond to ‘constants’.
37

5.2
Opetopes
The following fact is the key to deﬁning the opetopes. Let O be an S-operad,
and let elt(O) be the set of all operations of O.
Theorem 3. There is an elt(O)-operad O+ whose algebras are S-operads
over O, i.e., S-operads equipped with a homomorphism to O.
We call O+ the ‘slice operad’ of O. One can describe O+ syntactically as
follows:
1. The types of O+ are the operations of O.
2. The operations of O+ are the reduction laws of O.
3. The reduction laws of O+ are the ways of combining reduction laws of
O to give other reduction laws.
The ‘level-shifting’ going on here as we pass from O to O+ is a way of
systematizing the process of categoriﬁcation.
A nice example of the slice operad construction is the operad I+. The
algebras of this operad turn out to be monoids. Another nice example is the
operad T +, whose algebras are untyped operads! It is also very interesting
to iterate the slice operad construction. For example, the algebras of I++
work out to be exactly untyped planar operads. More generally, let On+ be
the operad formed by applying the slice operad construction n times to the
operad O, or just O itself if n = 0.
Deﬁnition 4. An n-dimensional ‘O-opetope’ is a type of On+, or equiva-
lently, if n ≥1, an operation of O(n−1)+.
In particular, we deﬁne an n-dimensional ‘opetope’ to be an n-dimensional
O-opetope for O = I, the initial untyped operad. The 0-dimensional opetopes
are thus the types of I, but there is only one type, so there is only one
0-dimensional opetope, which we visualize as a point. The 1-dimensional
opetopes are the types of I+, or in other words, the operations of I. I has
only one operation, the identity, so there is only one 1-dimensional opetope,
which we visualize as an interval. The 2-dimensional opetopes are the types
of I++, or in other words, the operations of I+, which are the reduction
38

laws of I. These reduction laws all state that the identity operation com-
posed with itself ℓtimes equals itself. This leads to 2-dimensional opetopes
with ℓinfaces and one outface. Actually there are ℓ! diﬀerent 2-dimensional
opetopes with ℓinfaces, since the permutation group Sℓacts freely on the
set of ℓ-ary operations of I+. We could keep track of these by labelling the
infaces with some permutation of ℓdistinct symbols.
A more systematic
approach is to use ‘metatree notation’. In this notation, any n-dimensional
O-opetope is represented as a list of n labelled trees.
To see how this works, ﬁrst consider the 2-dimensional O-opetopes, which
are the operations of O+. An operation of O+ can be speciﬁed as in the ﬁgure
below.
t
t
t
t
t
t
t
@
@
@
@
    A
A
A
AA




,
,
,
,
,
,,









@
@
@
@
@
D
D
D
D
DD





T
T
T
T
T
T





@
@
@
@
@
@
      f1
f4
f3
B
f5 E
D
A
C
f6 F
f2
A
B
C
D
E
F
The ﬁrst tree is an arbitrary ‘O-tree’. This is a combed tree (i.e., planar
except for a permutation of inputs at the top) with nodes labelled by opera-
tions of O. We require that a node labelled by a ℓ-ary operation have ℓedges
coming into it from above. Moreover, we require that it be possible to label
every edge with an element of S in such a way that for any node labelled by
an operation in O(x1, . . ., xℓ; x′), the edges coming into that node from above
are labelled by the types x1, . . . , xℓin that order, while the edge coming out
of it from below is labelled by the type x′. We also label each node of this
ﬁrst tree with a distinct symbol A, B, C, etc.. The second tree is planar and
has only one node, with n edges coming into that node from above, labelled
39

by the same symbols A, B, C, . . . in any order. These specify the order of the
input types of the operation of O+ we are describing.
More generally, for any n > 1 one can specify any n-dimensional O-
opetope by means of an ‘n-dimensional metatree’. Here is an example for
n = 3:
s
s
s
s
s
s
s
s
s
s
s
s
@
@
@
   A
A
AA



,
,
,
,,







@
@
@
@
@
   @
@
@
J
J
J



C
C
CC
CC







""""
"



A
A
A
A
A
A
A



A
A
AA



A
A
AA
    @
@
@@
f1
f4
f3
B
f5
E
A
C
f6
f2
F
D
A D C
E
F
B
G
H
I
J
K
J
K
G
H
I
An n-dimensional metatree is a list of n labelled trees, the last of which
is a planar tree with only one node, while the rest are combed trees. The
ﬁrst tree is an arbitrary O-tree. For 1 ≤i < n, every node of the ith tree is
labelled with a distinct symbol, and the same symbols also label all the edges
at the very top of the (i + 1)st tree, each symbol labelling exactly one edge.
In addition, each edge of the (i + 1)st tree must correspond to a subtree of
the ith tree in such a way that:
1. The edge at the very top of the (i+1)st tree labelled by a given symbol
corresponds to the subtree of the ith tree whose one and only node is
labelled by the same symbol.
2. The edge of the (i+1)st tree coming out of a given note from below cor-
responds to the subtree that is the union of the subtrees corresponding
to the edges coming into that node from above.
3. The edge at the very bottom of the (i + 1)st tree corresponds to the
whole ith tree.
Special care must be taken when the node of the last tree has no edges
coming into it from above. This can only occur when all the previous trees
40

are empty. This sort of metatree describes a nullary operation of O(n−1)+
whose output type is an identity operation 1x of O(n−2)+. To specify which
identity operation, we need to label the edge coming out of the node of the
last tree from below with the operation 1x.
6
n-Coherent operad algebras
An ‘n-coherent O-algebra’ is an n times categoriﬁed analog of an algebra of
the operad O. In particular, when O = I, an n-coherent O-algebra is just an
n-category, which is the n times categoriﬁed analog of a set. An n-coherent
O-algebra is an ‘O-opetopic set’ with certain properties. We omit the precise
deﬁnition of O-opetopic sets here.
For our purposes, it should suﬃce to
know that an O-opetopic set is very much like a simplicial set, but with O-
opetopes replacing simplices, and no ‘degeneracy maps’, only ‘face maps’. An
O-opetopic set thus consists of (possibly empty) collections of ‘cells’ shaped
like all the diﬀerent O-opetopes, such that any inface or outface of a cell is
again a cell.
If j ≥1, we may schematically represent a j-dimensional cell x in an
O-opetopic set as follows:
(a1, . . ., aℓ)
a′
-
x
Here a1, . . . , aℓare the infaces of x and a′ is the outface of x; all these are
cells of one lower dimension.
A conﬁguration just like this, satisfying all
the incidence relations satisﬁed by the boundary of a cell, but with x itself
missing:
(a1, . . ., aℓ)
a′
-
?
is called a ‘frame’. A ‘niche’ is like a frame with the outface missing:
(a1, . . ., aℓ)
?
-
?
Similarly, a ‘punctured niche’ is like a frame with the outface and one inface
missing:
(a1, . . . , ai−1, ?, ai+1, . . . , aℓ)
?
-
?
41

If one of these conﬁgurations (frame, niche, or punctured niche) can be ex-
tended to an actual cell, the cell is called an ‘occupant’ of the conﬁguration.
Occupants of the same frame are called ‘frame-competitors’, while occupants
of the same niche are called ‘niche-competitors’.
Next we need the concept of a ‘universal occupant’ of a niche.
Since
the deﬁnition of this concept looks rather formidable at ﬁrst, we ﬁrst give
a heuristic explanation. As already noted, the main use of universality to
deﬁne composites:
Deﬁnition 5. Given a universal occupant u of a j-dimensional niche:
(a1, . . . , ak)
b
-
u
we call b a ‘composite’ of (a1, . . ., ak).
To understand universality more deeply, one must understand the role
played by cells of diﬀerent dimensions. In our framework an n-category usu-
ally has cells of arbitrarily high dimension, just like a Kan complex. For j ≤n
the j-dimensional cells play the role of j-morphisms, while for j > n they
play the role of ‘equations’, ‘equations between equations’, and so on. The
deﬁnition of universality depends on n in a way that has the following eﬀects.
For j ≤n there may be many universal occupants of a given j-dimensional
niche, which is why we speak of ‘a’ composite rather than ‘the’ composite.
There is at most one occupant of any given (n + 1)-dimensional niche, which
is automatically universal. Thus composites of n-cells are unique, and we
may think of the universal occupant of an (n + 1)-dimensional niche as an
equation saying that the composite of the infaces equals the outface. For
j > n+ 1 there is exactly one occupant of each j-dimensional frame, indicat-
ing that the composite of the equations corresponding to the infaces equals
the equation corresponding to the outface.
The deﬁnition of universality essentially says that a j-dimensional niche-
occupant is universal if all of its niche-competitors factor through it uniquely,
up to equivalence. For j ≥n + 1 this amounts to saying that each niche has
a unique occupant, while for j = n it means that each niche has an occu-
pant through which all of its niche-competitors factor uniquely. Technically,
the deﬁnition of universality says that composition with a universal niche-
occupant set up a ‘balanced punctured niche’ of one higher dimension. One
42

should think of a balanced punctured niche as deﬁning an equivalence be-
tween occupants of its outface and occupants of its missing outface.
Now let us give the actual deﬁnition:
Deﬁnition 6. A j-dimensional niche-occupant:
(c1, . . . , ck)
d
-
u
is said to be ‘universal’ if and only if j > n and u is the only occupant of its
niche, or j ≤n and for any frame-competitor d′ of d, the (j +1)-dimensional
punctured niche
((c1, . . . , ck)
u
−→d, d
?
−→d′)
(c1, . . . , ck)
?
−→d′
?
?
and its mirror-image version
(d
?
−→d′, (c1, . . ., ck)
u
−→d)
(c1, . . . , ck)
?
−→d′
?
?
are balanced.
Of course, now we need the deﬁnition of ‘balanced’. The reader will note
that while the deﬁnitions of ‘universal’ and ‘balanced’ call upon each other,
there is no bad circularity.
Deﬁnition 7. An m-dimensional punctured niche:
(a1, . . ., ai−1, ?, ai+1, . . ., ak)
?
-
?
is said to be ‘balanced’ if and only if m > n + 1 or:
43

1. any extension
(a1, . . . , ai−1, ?, ai+1, . . . , ak)
b
-
?
extends further to:
(a1, . . . , ai−1, ai, ai+1, . . . , ak)
b
-
u
with u universal in its niche, and
2. for any occupant
(a1, . . . , ai−1, ai, ai+1, . . . , ak)
b
-
u
universal in its niche, and frame-competitor a′
i of ai, the (m + 1)-
dimensional punctured niche
(a′
i
?
−→ai, (a1, . . . , ai−1, ai, ai+1, . . . , ak)
u
−→b)
(a1, . . . , ai−1, a′
i, ai+1, . . . , ak)
?
−→b
?
?
and its mirror-image version
((a1, . . . , ai−1, ai, ai+1, . . . , ak)
u
−→b, a′
i
?
−→ai)
(a1, . . . , ai−1, a′
i, ai+1, . . . , ak)
?
−→b
?
?
are balanced.
44

Note that the ﬁrst numbered condition in the deﬁnition of ‘balanced’ deﬁ-
nition generalizes the concept of an essentially surjective functor, while the
second generalizes the concept of a fully faithful functor.
Finally, we deﬁne n-coherent O-algebras and various special cases:
Deﬁnition 8. An ‘n-coherent O-algebra’ is an O-opetopic set such that 1)
every niche has a universal occupant, and 2) composites of universal cells are
universal.
Deﬁnition 9. An ‘n-category’ is an n-coherent I-algebra.
Deﬁnition 10. A ‘monoidal n-category’ is an n-coherent I+-algebra.
Deﬁnition 11. A ‘stable n-category’ is an n-coherent T-algebra.
One can show that any S-operad morphism f: O →O′ allows one to turn
an n-coherent O′-algebra A into an n-coherent O-algebra f ∗A. Thus any
stable n-category has an underlying monoidal n-category, and any monoidal
n-category has an underlying n-category.
Given an n-category with 0-cells x and y, there is an (n −1)-category
hom(x, y). One can also construct a stable (n + 1)-category of all (small)
n-categories, though the details of this construction have not yet been pub-
lished. Using these facts, one can give rigorous formulations of many pro-
cesses going between neighboring entries in Table 2: decategoriﬁcation, dis-
crete categoriﬁcation, delooping, looping, forgetting monoidal structure, sta-
bilization, and the generalized center construction. However, it remains to
make precise and prove the Stabilization Hypothesis in this framework. Basi-
cally, one wishes to show that for k ≥n+2, the (n+1)-category of all stable
n-categories is equivalent to the full sub-(n + 1)-category of all n-categories
having only one 0-cell and only one j-cell in each frame for 0 < j < k.
45

7
Conclusions
In this paper we have discussed iterated categoriﬁcations and stabilizations
of some of the very simplest algebraic structures: the natural numbers and
the integers. However, one can also categorify many other concepts: vector
spaces [40] and Hilbert spaces [2], group algebras [21], algebras of formal
power series [5, 37] and other Hopf algebras [20, 22], sheaves [15, 17], and so
on. Interesting results about these familiar structures typically have interest-
ing categoriﬁed analogs. It is clear, therefore, that the set-based mathematics
we know and love is just the tip of an immense iceberg of n-categorical, and
ultimately ω-categorical, mathematics.
The prospect of exploring this huge body of new mathematics is both
exhilarating and daunting. The basic philosophy is simple: never mistake
equivalence for equality. The technical details, however, are not so simple
— at least not yet. To proceed eﬃciently it is crucial that we gain a clearer
understanding of the foundations before rushing ahead with complicated con-
structions.
Many basic questions remain open. For example, how signiﬁcant is the
fact that operads play a role both in the theory of Ek spaces and the deﬁnition
of n-categories described above? Operads are very versatile, so this might at
ﬁrst seem to be a coincidence. However, there are deep relationships between
operads, categoriﬁcation, and the theory of algebraic structures satisfying
laws ‘up to coherent homotopy’ [60]. In particular, Trimble [64] has pointed
out an interesting connection. For many purposes it is best to think of Ek
spaces as algebras, not of the little k-cubes operad, but of a closely related
operad F(k) discovered by Getzler and Jones [33]. The space F(k)ℓis the
Fulton-MacPherson compactiﬁcation of the conﬁguration space of ℓpoints in
Rk modulo translations and dilations [31]. In particular, F(1)ℓis just Kℓ×Sℓ,
where Kℓis the (ℓ−2)-dimensional associahedron.
Since homotopy n-types of E1 spaces correspond to monoidal n-groupoids,
while n-coherent I+-algebras are monoidal n-categories, one might expect a
relationship between F(1) and the I+-opetopes. The associahedron Kℓhas
a cell decomposition having cells in one-to-one correspondence with planar
trees with ℓleaves for which all nodes have at least one edge coming in from
above. It follows that the cells in the corresponding decomposition of F(1)
correspond to a certain class of 2-dimensional I+-opetopes, or equivalently,
3-dimensional opetopes. Is there a deeper relation between opetopes and the
46

associahedron? This might shed new light on the origin of coherence laws.
Acknowledgments
We thank Michael Batanin, Dan Christensen, Mark Hovey, Andr´e Joyal,
Carlos Simpson, Charles Rezk, Ross Street, and Todd Trimble for helpful
discussions and correspondence, and thank Ezra Getzler and Mikhail Kapra-
nov both for useful correspondence and for organizing the conference at which
this paper was presented.
References
[1] J. Adams, Inﬁnite Loop Spaces, Princeton U. Press, Princeton, 1978.
[2] J. Baez, Higher-dimensional algebra II: 2-Hilbert spaces, Adv. Math. 127
(1997), 125-189.
[3] J. Baez, An introduction to n-categories, 7th Conference on Category The-
ory and Computer Science, eds. E. Moggi and G. Rosolini, Lecture Notes in
Computer Science 1290, Springer Verlag, Berlin, 1997.
[4] J. Baez and J. Dolan, Higher-dimensional algebra and topological quantum
ﬁeld theory, Jour. Math. Phys. 36 (1995), 6073-6105.
[5] J. Baez and J. Dolan, Higher-dimensional algebra III: n-Categories and
the algebra of opetopes, to appear in Adv. Math., preprint available as q-
alg/9702014.
[6] J. Baez and L. Langford, 2-Tangles, to appear in Lett. Math. Phys., preprint
available online as q-alg/9703033.
[7] J. Baez and L. Langford, Higher-dimensional algebra IV: 2-Tangles, to appear
in Adv. Math..
[8] J. Baez and M. Neuchl, Higher-dimensional algebra I: Braided monoidal 2-
categories, Adv. Math. 121 (1996), 196-244.
[9] M. G. Barratt and S. Priddy, On the homology of non-connected monoids
and their associated groups, Comm. Math. Helv. 47 (1972), 1-14.
47

[10] M. Batanin, Monoidal globular categories as a natural environment for the
theory of weak n-categories, to appear in Adv. Math., preprint available at
http://www-math.mpce.mq.edu.au/∼mbatanin/papers.html
[11] H.-J. Baues, Homotopy types, in Handbook of Algebraic Topology, ed. I. M.
James, Elsevier, New York, 1995.
[12] J. B´enabou, Introduction to bicategories, Lecture Notes in Mathematics 47,
Springer Verlag, Berlin, 1967, pp. 1-77.
[13] J. M. Boardman and R. M. Vogt, Homotopy-everything H-spaces, Bull. Amer.
Math. Soc. 74 (1968), 1117-1122.
[14] J. M. Boardman and R. M. Vogt, Homotopy invariant structures on topo-
logical spaces, Lecture Notes in Mathematics 347, Springer Verlag, Berlin,
1973.
[15] L. Breen, On the classiﬁcation of 2-gerbes and 2-stacks, Ast´erisque 225
(1994), 1-160.
[16] R. Brown, From groups to groupoids: a brief survey, Bull. London Math. Soc.
19 (1987), 113-134.
[17] J.-L. Brylinski, Loop Spaces, Characteristic Classes, and Geometric Quanti-
zation, Birkhauser, Boston, 1993.
[18] R. Brown and C. Spencer, G-groupoids, crossed modules, and the classifying
space of a topological group, Proc. Kon. Akad. v. Wet. 79 (1976), 296-302.
[19] L. Crane, Clock and category: is quantum gravity algebraic?, Jour. Math.
Phys. 36 (1995), 6180-6193.
[20] L. Crane and I. Frenkel, Four dimensional topological quantum ﬁeld theory,
Hopf categories, and the canonical bases, Jour. Math. Phys. 35 (1994), 5136-
5154.
[21] L. Crane and D. Yetter, Examples of categoriﬁcation, preprint available as
q-alg/9607028.
[22] L. Crane and D. Yetter, Deformations of (bi)tensor categories, preprint avail-
able as q-alg/9612011.
[23] S. E. Crans, On combinatorial models for higher dimensional homotopies,
Ph.D. thesis, University of Utrecht, Utrecht, 1991.
48

[24] S. E. Crans, Generalized centers of braided and sylleptic monoidal 2-
categories, to appear in Adv. Math., preprint available at http://www-
math.mpce.mq.edu.au/∼crans/papers/papers.html
[25] J. S. Carter, J. H. Rieger and M. Saito, A combinatorial description of knotted
surfaces and their isotopies, Adv. Math. 127 (1997), 1-51.
[26] B. Day and R. Street, Monoidal bicategories and Hopf algebroids, Adv. Math.
129 (1997), 99-157.
[27] B. Eckmann and P. Hilton, Group-like structures in categories, Math. Ann.
145 (1962), 227-255.
[28] S. Eilenberg and G. M. Kelly, Closed categories, in Proceedings of the Con-
ference on Categorical Algebra, eds. S. Eilenberg et al, Springer Verlag, New
York, 1966.
[29] A. D. Elmendorf, I. Kriz, M. Mandell and J. P. May, Modern foundations for
stable homotopy theory, in Handbook of Algebraic Topology, ed. I. M. James,
Elsevier, New York, 1995.
[30] P. Freyd and D. Yetter, Braided compact monoidal categories with applica-
tions to low dimensional topology, Adv. Math. 77 (1989), 156-182.
[31] W. Fulton and R. MacPherson, A compactiﬁcation of conﬁguration spaces,
Ann. Math. 139 (1994), 183-225.
[32] P. Gabriel and M. Zisman, Calculus of Fractions and Homotopy Theory,
Ergebnisse der Math. und ihrer Grenzgebiete, vol. 35, Springer Verlag, Berlin,
1967.
[33] E. Getzler and J. Jones, Operads, homotopy algebra, and iterated integrals
for double loop spaces, preprint available as hep-th/9403055.
[34] R. Gordon, A. J. Power, and R. Street, Coherence for tricategories, Memoirs
Amer. Math. Soc. 117 (1995) Number 558.
[35] A. Grothendieck, Pursuing stacks, unpublished manuscript, 1983, distributed
from UCNW, Bangor, United Kingdom.
[36] C. Hermida, M. Makkai, and J. Power, On weak higher dimensional cat-
egories, preprint available at http://hypatia.dcs.qmw.ac.uk/authors/M/
MakkaiM/papers/multitopicsets/
49

[37] A. Joyal, Une th´eorie combinatoire des s´eries formelles, Adv. Math. 42 (1981),
1-82.
[38] A. Joyal and R. Street, Tortile Yang-Baxter operators in tensor categories, J.
Pure Appl. Alg. 71 (1991), 43-51.
[39] A. Joyal and R. Street, Braided tensor categories, Adv. Math. 102 (1993),
20-78.
[40] M. Kapranov and V. Voevodsky, 2-Categories and Zamolodchikov tetrahedra
equations, in Proc. Symp. Pure Math. 56 Part 2 (1994), AMS, Providence,
pp. 177-260.
Braided monoidal 2-categories, 2-vector-spaces, and Zamolodchikov tetrahe-
dra equations, Northwestern U. preprint.
[41] G. Kelly, Coherence theorems for lax algebras and distributive laws, Lecture
Notes in Mathematics 420, Springer Verlag, Berlin, 1974, pp. 281-375.
[42] G. Kelly and R. Street, Review of the elements of 2-categories, Lecture Notes
in Mathematics 420, Springer Verlag, Berlin, 1974, pp. 75-103.
[43] V. Kharlamov and V. Turaev, On the deﬁnition of the 2-category of 2-knots,
Amer. Math. Soc. Transl. 174 (1996), 205-221.
[44] M. Laplaza, Coherence for distributivity, Lecture Notes in Mathematics 281,
Springer Verlag, Berlin, 1972, pp. 29-72.
[45] S. Mac Lane, Natural associativity and commutativity, Rice U. Studies 49
(1963), 28-46.
[46] S. Mac Lane, Categories for the Working Mathematician, Springer Verlag,
New York, 1971.
[47] S. Mac Lane and J. Whitehead, On the 3-type of a complex, Proc. Nat. Acad.
Sci. 36 (1950), 41-58.
[48] S. Majid, Representations, duals and doubles of monoidal categories, Suppl.
Rend. Circ. Mat. Palermo, Series II 26 (1991), 197-206.
[49] J. P. May, Simplicial Objects in Algebraic Topology, Van Nostrand, Prince-
ton, 1968.
[50] J. P. May, The Geometry of Iterated Loop Spaces, Lecture Notes in Mathe-
matics 271, Springer Verlag, Berlin, 1972.
50

[51] J. P. May, F. Quinn, N. Ray and J. Tornehave, E∞Ring Spaces and E∞Ring
Spectra, Lecture Notes in Mathematics 577, Springer Verlag, Berlin, 1977.
[52] A. J. Power, Why tricategories?, Info. Comp. 120 (1995), 251-262.
[53] D. Quillen, Homotopical Algebra, Lecture Notes in Mathematics 43, Springer
Verlag, Berlin, 1967.
[54] G.-C. Rota, Gian-Carlo Rota on Combinatorics: Introductory Papers and
Commentaries, ed. J. P. S. Kung, Birkhauser, Boston, 1995.
[55] G. Segal, Conﬁguration spaces and iterated loop-spaces, Invent. Math. 21
(1973), 213-222.
[56] M.-C. Shum, Tortile tensor categories, Jour. Pure Appl. Alg. 93 (1994), 57-
110.
[57] C. Simpson, A closed model structure for n-categories, internal Hom, n-stacks
and generalized Seifert-Van Kampen, preprint available as alg-geom/9704006.
[58] C. Simpson, Limits in n-categories, preprint available as alg-geom/9708010.
[59] J. D. Stasheﬀ, Homotopy associativity of H-spaces I & II, Trans. Amer. Math.
Soc. 108 (1963), 275-292, 293-312.
[60] J.-L. Loday, J. D. Stasheﬀ, and A. A. Voronov, eds., Operads: Proceedings
of Renaissance Conferences, A. M. S., Providence, Rhode Island, 1997.
[61] R. Street, The algebra of oriented simplexes, Jour. Pure Appl. Alg. 49 (1987),
283-335.
[62] Z. Tamsamani, Sur des notions de ∞-categorie et ∞-groupoide non-strictes
via des ensembles multi-simpliciaux, preprint available as alg-geom/9512006.
[63] Z. Tamsamani, Equivalence de la th´eorie homotopique des n-groupoides
et celle des espaces topologiques n-tronqu´es, preprint available as alg-
geom/9607010.
[64] T. Trimble, personal communication.
[65] V. Turaev, Operator invariants of tangles, and R-matrices, Math. USSR Izves-
tia 35 (1990), 411-444.
[66] D. Yetter, Markov algebras, in Braids, eds. J. S. Birman and A. Libgober,
Contemporary Mathematics 78, A. M. S., Providence, Rhode Island, 1988,
pp. 705-730.
51

