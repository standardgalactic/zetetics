Language Is Not All You Need: Aligning Perception
with Language Models
Shaohan Huang∗, Li Dong∗, Wenhui Wang∗, Yaru Hao∗, Saksham Singhal∗, Shuming Ma∗
Tengchao Lv, Lei Cui, Owais Khan Mohammed, Barun Patra, Qiang Liu, Kriti Aggarwal
Zewen Chi, Johan Bjorck, Vishrav Chaudhary, Subhojit Som, Xia Song, Furu Wei†
Microsoft
https://github.com/microsoft/unilm
What's in this picture?
Looks like a duck.
That’s not a duck. Then 
what’s it?
Looks more like a 
bunny.
Why?
It has bunny ears.
Description of three toed 
woodpecker: It has black 
and white stripes 
throughout the body and a 
yellow crown.
Description of downy 
woodpecker: It has white 
spots on its black wings 
and some red on its crown.
Question: what is the 
name of the 
woodpecker in the 
picture?
Downy
Here are eight images:
The following image is:
Multimodal Large Language Model (MLLM)
Embedding
output
Kosmos-1 can perceive both language and
, learn in context , reason, and generate
Vision
Audition
31 8 … 70 2
A
B
C
D
E
F
Figure 1: KOSMOS-1 is a multimodal large language model (MLLM) that is capable of perceiving
multimodal input, following instructions, and performing in-context learning for not only language
tasks but also multimodal tasks. In this work, we align vision with large language models (LLMs),
advancing the trend of going from LLMs to MLLMs.
∗Equal contribution. † Corresponding author.
arXiv:2302.14045v2  [cs.CL]  1 Mar 2023

“
The limits of my language means the limits of my world.
Ludwig Wittgenstein”
Abstract
A big convergence of language, multimodal perception, action, and world model-
ing is a key step toward artiﬁcial general intelligence. In this work, we introduce
KOSMOS-12, a Multimodal Large Language Model (MLLM) that can perceive
general modalities, learn in context (i.e., few-shot), and follow instructions (i.e.,
zero-shot). Speciﬁcally, we train KOSMOS-1 from scratch on web-scale multi-
modal corpora, including arbitrarily interleaved text and images, image-caption
pairs, and text data. We evaluate various settings, including zero-shot, few-shot,
and multimodal chain-of-thought prompting, on a wide range of tasks without
any gradient updates or ﬁnetuning. Experimental results show that KOSMOS-1
achieves impressive performance on (i) language understanding, generation, and
even OCR-free NLP (directly fed with document images), (ii) perception-language
tasks, including multimodal dialogue, image captioning, visual question answering,
and (iii) vision tasks, such as image recognition with descriptions (specifying
classiﬁcation via text instructions). We also show that MLLMs can beneﬁt from
cross-modal transfer, i.e., transfer knowledge from language to multimodal, and
from multimodal to language. In addition, we introduce a dataset of Raven IQ test,
which diagnoses the nonverbal reasoning capability of MLLMs.
Input Prompt
Completion
Question: Explain why 
this photo is funny? 
Answer:
The cat is wearing a 
mask that gives the 
cat a smile.
Question: Why did the 
little boy cry? Answer:
Because his scooter 
broke.
Question: What is the 
hairstyle of the blond 
called? Answer:
pony tail
Question: When will the 
movie be released? 
Answer:
On June 27
5 + 4 = 9
Question: The result 
is? Answer:
What is TorchScale?
A library that allows 
transformers to work efficiently 
and effectively at any scale.
Question: What is the heart 
rate in this picture? Answer:
57 bpm
10:10 on a large clock
The time now is
(1)
(2)
(3)
(4)
Completion
Input Prompt
(5)
(6)
(7)
(8)
Figure 2: Selected examples generated from KOSMOS-1. Blue boxes are input prompt and pink
boxes are KOSMOS-1 output. The examples include (1)-(2) visual explanation, (3)-(4) visual
question answering, (5) web page question answering, (6) simple math equation, and (7)-(8) number
recognition.
2KOSMOS is pronounced as and means “Cosmos”.
2

Input Prompt
Completion
A Fine, Fine School
Question: What is the title 
of this book? Answer:
Input Prompt
Question: What is on the 
pillowcase? Answer:
a Texas Longhorns 
pillow case.
An image of
Hope you have done it
a parking sign that says 
``Waiting? Please turn off 
your engine.''
An image of
An image of 
a girl blowing out a 
candle on her birthday 
cake.
(1)
a group of people 
posing for a wedding 
photo.
An image of 
(2)
Question: What coffee 
shop is in the background? 
Answer:
Starbucks
(3)
Corn
Question: What is inside 
this canned good? Answer:
(4)
Completion
(5)
(6)
(7)
(8)
What's in this picture?
sausage roll.
How to cook it?
Soak sausage roll in 
ketchup. Bake in oven for 
15 min. Cut and enjoy.
Can I put cheese in the 
dish?
Sure. But make sure it is 
melted.
What kind of animal is 
in the picture?
It's a zebra.
Where do they live in? 
In Africa.
Tell me a joke about 
zebras. 
Zebras get in trouble for 
crossing the road.
(9)
(10)
What's in this picture?
A screenshot of the Windows 
10 shutdown window
I would like to restart 
my computer. Which 
button should I click? 
Press OK.
Now I would not like to 
restart. What can I do?
Click Cancel.
(11)
Figure 3: Selected examples generated from KOSMOS-1. Blue boxes are input prompt and pink
boxes are KOSMOS-1 output. The examples include (1)-(2) image captioning, (3)-(6) visual question
answering, (7)-(8) OCR, and (9)-(11) visual dialogue.
3

Dataset
Task description
Metric
Zero-shot
Few-shot
Language tasks
StoryCloze [MRL+17]
Commonsense reasoning
Accuracy


HellaSwag [ZHB+19]
Commonsense NLI
Accuracy


Winograd [LDM12a]
Word ambiguity
Accuracy


Winogrande [SBBC20]
Word ambiguity
Accuracy


PIQA [BZB+20]
Physical commonsense
Accuracy


BoolQ [CLC+19]
Question answering
Accuracy


CB [dMST19]
Textual entailment
Accuracy


COPA [RBG11]
Causal reasoning
Accuracy


Rendered SST-2 [RKH+21]
OCR-free sentiment classiﬁcation
Accuracy

HatefulMemes [KFM+20]
OCR-free meme classiﬁcation
ROC AUC

Cross-modal transfer
RelativeSize [BHCF16]
Commonsense reasoning (object size)
Accuracy

MemoryColor [NHJ21]
Commonsense reasoning (object color)
Accuracy

ColorTerms [BBBT12]
Commonsense reasoning (object color)
Accuracy

Nonverbal reasoning tasks
IQ Test
Raven’s Progressive Matrices
Accuracy

Perception-language tasks
COCO Caption [LMB+14]
Image captioning
CIDEr, etc.


Flicker30k [YLHH14]
Image captioning
CIDEr, etc.


VQAv2 [GKSS+17]
Visual question answering
VQA acc.


VizWiz [GLS+18]
Visual question answering
VQA acc.


WebSRC [CZC+21]
Web page question answering
F1 score

Vision tasks
ImageNet [DDS+09]
Zero-shot image classiﬁcation
Top-1 acc.

CUB [WBW+11]
Zero-shot image classiﬁcation with descriptions
Accuracy

Table 1: We evaluate the capabilities of KOSMOS-1 on language, perception-language, and vision
tasks under both zero- and few-shot learning settings.
1
Introduction: From LLMs to MLLMs
Large language models (LLMs) have successfully served as a general-purpose interface across various
natural language tasks [BMR+20]. The LLM-based interface can be adapted to a task as long as we
are able to transform the input and output into texts. For example, the input of the summarization task
is a document and the output is its summary. So we can feed the input document into the language
model and then produce the generated summary.
Despite the successful applications in natural language processing, it is still struggling to natively use
LLMs for multimodal data, such as image, and audio. Being a basic part of intelligence, multimodal
perception is a necessity to achieve artiﬁcial general intelligence, in terms of knowledge acquisition
and grounding to the real world. More importantly, unlocking multimodal input [TMC+21, HSD+22,
WBD+22, ADL+22, AHR+22, LLSH23] greatly widens the applications of language models to
more high-value areas, such as multimodal machine learning, document intelligence, and robotics.
In this work, we introduce KOSMOS-1, a Multimodal Large Language Model (MLLM) that can
perceive general modalities, follow instructions (i.e., zero-shot learning), and learn in context (i.e.,
few-shot learning). The goal is to align perception with LLMs, so that the models are able to see and
talk. To be speciﬁc, we follow METALM [HSD+22] to train the KOSMOS-1 model from scratch.
As shown in Figure 1, a Transformer-based language model is regarded as the general-purpose
interface, and perception modules are docked with the language model. We train the model on web-
scale multimodal corpora, i.e., text data, arbitrarily interleaved images and texts, and image-caption
pairs. In addition, we calibrate the instruction-following capability across modalities by transferring
language-only data.
As shown in Table 1, the KOSMOS-1 model natively supports language, perception-language, and
vision tasks. We also present some generated examples in Figure 2 and 3. In addition to various
natural language tasks, the KOSMOS-1 models natively handle a wide range of perception-intensive
tasks, spanning visual dialogue, visual explanation, visual question answering, image captioning,
simple math equation, OCR, and zero-shot image classiﬁcation with descriptions. We also build
4

an IQ test benchmark following Raven’s Progressive Matrices [JR03, CJS90], which evaluates
the capability of nonverbal reasoning for MLLMs. The examples show that the native support of
multimodal perception enables new opportunities to apply LLMs to new tasks. Moreover, we show
that MLLMs achieve better commonsense reasoning performance compared with LLMs, which
indicates cross-modal transfer helps knowledge acquisition.
The key takeaways are as follows:
From LLMs to MLLMs.
Properly handling perception is a necessary step toward artiﬁcial general
intelligence. The capability of perceiving multimodal input is critical to LLMs. First, multimodal
perception enables LLMs to acquire commonsense knowledge beyond text descriptions. Second,
aligning perception with LLMs opens the door to new tasks, such as robotics, and document intelli-
gence. Third, the capability of perception uniﬁes various APIs, as graphical user interfaces are the
most natural and uniﬁed way to interact with. For example, MLLMs can directly read the screen or
extract numbers from receipts. We train the KOSMOS-1 models on web-scale multimodal corpora,
which ensures that the model robustly learns from diverse sources. We not only use a large-scale
text corpus but also mine high-quality image-caption pairs and arbitrarily interleaved image and text
documents from the web.
Language models as general-purpose interfaces.
Following the philosophy proposed in
METALM [HSD+22], we regard language models as a universal task layer. Because of the open-
ended output space, we are able to unify various task predictions as texts. Moreover, natural-language
instructions and action sequences (such as programming language) can be well handled by language
models. LLMs also serve as basic reasoners [WWS+22], which is complementary to perception
modules on complex tasks. So it is natural to align world, action, and multimodal perception with the
general-purpose interface, i.e., language models.
New capabilities of MLLMs.
As shown in Table 1, apart from the capabilities found in previous
LLMs [BMR+20, CND+22], MLLMs enable new usages and possibilities. First, we can conduct
zero- and few-shot multimodal learning by using natural language instructions and demonstration
examples. Second, we observe promising signals of nonverbal reasoning by evaluating the Raven
IQ test, which measures the ﬂuid reasoning ability of humans. Third, MLLMs naturally support
multi-turn interactions for general modalities, such as multimodal dialogue.
2
KOSMOS-1: A Multimodal Large Language Model
As shown in Figure 1, KOSMOS-1 is a multimodal language model that can perceive general
modalities, follow instructions, learn in context, and generate outputs. Given the previous context, the
model learns to generate texts in an auto-regressive manner. Speciﬁcally, the backbone of KOSMOS-1
is a Transformer-based causal language model. Apart from text, other modalities are embedded
and fed into the language model. The Transformer decoder serves as a general-purpose interface to
multimodal input. We train KOSMOS-1 on multimodal corpora, including monomodal data, cross-
modal paired data, and interleaved multimodal data. Once the models are trained, we can directly
evaluate the models in zero-shot and few-shot settings on both language tasks and multimodal tasks.
2.1
Input Representation
The Transformer decoder perceives general modalities in a uniﬁed way. For input format, we ﬂatten
input as a sequence decorated with special tokens. Speciﬁcally, we use <s> and </s> to denote start-
and end-of-sequence. The special tokens <image> and </image> indicate the beginning and end of
encoded image embeddings. For example, “<s> document </s>” is a text input, and “<s> paragraph
<image> Image Embedding </image> paragraph </s>” is an interleaved image-text input. Table 21
in Appendix shows some examples of input format.
An embedding module is used to encode both text tokens and other input modalities into vectors. Then
the embeddings are fed into the decoder. For input tokens, we use a lookup table to map them into
embeddings. For the modalities of continuous signals (e.g., image, and audio), it is also feasible to
represent inputs as discrete code and then regard them as “foreign languages” [WBD+22, WCW+23].
In this work, following [HSD+22], we employ a vision encoder as the embedding module for input
5

images. In addition, Resampler [ADL+22] is used as an attentive pooling mechanism to reduce the
number of image embeddings.
2.2
Multimodal Large Language Models (MLLMs)
After obtaining the embeddings of an input sequence, we feed them into the Transformer-based
decoder. The left-to-right causal model processes the sequence in an auto-regressive manner, which
produces the next token by conditioning on past timesteps. The causal masking is used to mask
out future information. A softmax classiﬁer upon Transformer is used to generate tokens over the
vocabulary.
MLLMs serve as general-purpose interfaces [HSD+22] that can perform interactions with both
natural language and multimodal input. The framework is ﬂexible to handle various data types,
as long as we can represent input as vectors. MLLMs combine the best of two worlds. First, the
language models naturally inherit the capabilities of in-context learning and instruction following.
Second, perception is aligned with language models by training on multimodal corpora.
The implementation is based on the library TorchScale3 [MWH+22], which is designed for large-
scale model training. Compared with the standard Transformer architecture, we include the following
modiﬁcations:
MAGNETO
We use MAGNETO [WMH+22], a Transformer variant, as the backbone architecture.
MAGNETO has better training stability and superior performance across modalities. It introduces an
extra LayerNorm to each sublayer (i.e., multi-head self-attention, and feed-forward network). The
method has a theoretically derived initialization method [WMD+22] to improve the optimization
fundamentally, which allows us to effectively scale up the models without pain.
XPOS
We employ XPOS [SDP+22] relative position encoding for better long-context modeling.
The method can better generalize to different lengths, i.e., training on short while testing on longer
sequences. Moreover, XPOS optimizes attention resolution so that the position information can
be captured more precisely. The method XPOS is efﬁcient and effective in both interpolation and
extrapolation settings.
2.3
Training Objective
The KOSMOS-1 training is conducted on web-scale multimodal corpora, including monomodal data
(e.g., text corpus), cross-modal paired data (e.g., image-caption pairs), and interleaved multimodal
data (e.g., documents of arbitrarily interleaved images and texts). To be speciﬁc, we use monomodal
data for representation learning. For example, language modeling with text data pretrains instruction
following, in-context learning, and various language tasks. Moreover, cross-modal pairs and inter-
leaved data learn to align the perception of general modalities with language models. Interleaved data
also naturally ﬁt in the multimodal language modeling task. We present more details of training data
collection in Section 3.1.
The models are trained with the next-token prediction task, i.e., learning to generate the next token
depending on the previous context. The training objective is to maximize the log-likelihood of tokens
in examples. Notice that only discrete tokens, such as text tokens, are accounted for in the training
loss. Multimodal language modeling is a scalable way to train the models. More importantly, the
emergence of various capabilities makes the training task favorable for downstream applications.
3
Model Training
3.1
Multimodal Training Data
The models are trained on web-scale multimodal corpora. The training datasets consist of text corpora,
image-caption pairs, and interleaved data of images and texts.
3https://github.com/microsoft/torchscale
6

Text Corpora
We train our model with The Pile [GBB+20] and Common Crawl (CC). The Pile
is a massive English text dataset built for training large-scale language models, which is produced
from a variety of data sources. We exclude data splits from GitHub, arXiv, Stack Exchange, and
PubMed Central. We also include the Common Crawl snapshots (2020-50 and 2021-04) datasets,
CC-Stories, and RealNews datasets [SPP+19, SPN+22]. The entire datasets have been purged of
duplicate and near-duplicate documents, as well as ﬁltered to exclude downstream task data. Refer to
Appendix B.1.1 for detailed descriptions of training text corpora.
Image-Caption Pairs
The image-caption pairs are constructed from several datasets, including
English LAION-2B [SBV+22], LAION-400M [SVB+21], COYO-700M [BPK+22], and Conceptual
Captions [SDGS18, CSDS21]. English LAION-2B, LAION-400M, and COYO-700M are collected
from web pages of the Common Crawl web data by extracting image sources and the corresponding
alt-text. Conceptual Captions are also from internet web pages. More details can be found in
Appendix B.1.2.
Interleaved Image-Text Data
We collect interleaved multimodal data from the Common Crawl
snapshot, which is a publicly available archive of web pages. We use a ﬁltering process to select
about 71M web pages from the original 2B web pages in the snapshot. We then extract the text and
images from the HTML of each selected web page. For each document, we limit the number of
images to ﬁve to reduce noise and redundancy. We also randomly discard half of the documents that
only have one image to increase the diversity. We provide more details about the data collection
process in Appendix B.1.3. By using this corpus, we enable KOSMOS-1 to handle interleaved text
and image and improve its few-shot ability.
3.2
Training Setup
The MLLM component has 24 layers with 2,048 hidden dimensions, 8,192 FFN intermediate size,
and 32 attention heads, resulting in about 1.3B parameters. We use Magneto’s initialization for
optimization stability. For faster convergence, the image representation is obtained from a pretrained
CLIP ViT-L/14 model with 1,024 feature dimensions. The images are preprocessed into 224×224
resolution during training. We freeze the parameters of the CLIP model except for the last layer
during training. The total number of parameters of KOSMOS-1 is about 1.6B. More details about
hyperparameters can be found in Appendix A.
We use a batch size of 1.2 million tokens (0.5 million tokens from text corpora, 0.5 million tokens
from image-caption pairs, and 0.2 million tokens from interleaved data) and train KOSMOS-1 for
300k steps, corresponding to about 360 billion tokens. We adopt the AdamW optimizer with
β = (0.9, 0.98). We set the weight decay to 0.01 and the dropout rate to 0.1. The learning rate
increases to 2e-4 for the ﬁrst 375 warming-up steps and decays linearly to 0 for the rest of the
training steps. We use SentencePiece [KR18] to tokenize the text. We preprocess the data in the
“full-sentence” format [LOG+19], which packs each input sequence with full sentences that are
sampled continuously from one or more documents.
3.3
Language-Only Instruction Tuning
In order to better align KOSMOS-1 with human instructions, we perform language-only instruction
tuning [LHV+23, HSLS22]. Speciﬁcally, we continue-train the model with the instruction data in
the format of (instructions, inputs, and outputs). The instruction data is language-only, which is
mixed with training corpora. The tuning process is conducted as language modeling. Notice that
instructions and inputs are not accounted for in the loss. Section 4.9.1 shows that the improvements
in the instruction-following capability can transfer across modalities.
We combine Unnatural Instructions [HSLS22] and FLANv2 [LHV+23] as our instruction dataset.
Unnatural Instructions is a dataset that was created by using a large language model to generate
instructions for various natural language processing tasks. It has 68,478 instruction-input-output
triplets in its core dataset. FLANv2 is a collection of datasets that cover diverse types of language
understanding tasks, such as reading comprehension, commonsense reasoning, and closed-book
question answering. We randomly select 54k examples of instructions from FLANv2 to augment our
instruction dataset. Details of the training hyperparameter settings are described in Appendix A.2.
7

4
Evaluation
MLLMs can handle both language tasks and perception-intensive tasks. We evaluate KOSMOS-1 on
various types of tasks as follows:
• Language tasks
– Language understanding
– Language generation
– OCR-free text classiﬁcation
• Cross-modal transfer
– Commonsense reasoning
• Nonverbal reasoning
– IQ Test (Raven’s Progressive Matrices)
• Perception-language tasks
– Image captioning
– Visual question answering
– Web page question answering
• Vision tasks
– Zero-shot image classiﬁcation
– Zero-shot image classiﬁcation with descriptions
4.1
Perception-Language Tasks
We evaluate the perception-language capability of KOSMOS-1 under vision-language settings. Specif-
ically, we conduct zero-shot and few-shot experiments on two widely used tasks, including image
captioning and visual question answering. Image captioning involves generating a natural language
description of an image, while visual question answering aims to answer a natural language question
with respect to an image.
4.1.1
Evaluation Setup
We evaluate the caption generation on MS COCO Caption [LMB+14], and Flickr30k [YLHH14].
We use the test set of COCO Karpathy split [KFF17], which re-partitions the train2014 and val2014
images [LMB+14] into 113,287, 5,000, and 5,000 for the training set, validation set, and test set,
respectively. We conduct an evaluation on Flickr30k’s Karpathy split test set. The image resolution
is 224×224. We use beam search to generate the captions, and the beam size is 5. In the few-shot
settings, we randomly sample demonstrations from the training set. We use COCOEvalCap4 to
compute CIDEr [VLZP15] and SPICE [AFJG16] scores as the evaluation metrics. We prompt
KOSMOS-1 with “An image of” for zero-shot and few-shot caption generation experiments.
For visual question-answering tasks, we evaluate zero-shot and few-shot results on test-dev set of
VQAv2 [GKSS+17] and test-dev set of VizWiz [GLS+18], respectively. The resolution of images is
224×224. We use greedy search for the decoding. We follow the normalization rules of the VQAv2
evaluation code5 when computing the VQA accuracy. We evaluate the performance of VQA in an
open-ended setting that KOSMOS-1 generates answers and stops at the </s> (“end of sequence”)
token. The prompt is “Question: {question} Answer: {answer}” for visual question answering tasks.
4.1.2
Results
Image Captioning
Table 2 shows the zero-shot captioning performance on COCO Karpathy test
split and Flickr30k test set. KOSMOS-1 achieves remarkable results in zero-shot setting on two image
captioning datasets. Speciﬁcally, our model achieves a CIDEr score of 67.1 on the Flickr30k dataset,
compared to 60.6 and 61.5 for the Flamingo-3B and Flamingo-9B models, respectively. Notably, our
model is able to accomplish this feat with a smaller size of 1.6B, compared to Flamingo models. This
demonstrates our model’s superiority in zero-shot image captioning.
4https://github.com/salaniz/pycocoevalcap
5https://github.com/GT-Vision-Lab/VQA
8

Model
COCO
Flickr30k
CIDEr
SPICE
CIDEr
SPICE
ZeroCap
14.6
5.5
-
-
VLKD
58.3
13.4
-
-
FewVLM
-
-
31.0
10.0
METALM
82.2
15.7
43.4
11.7
Flamingo-3B∗
73.0
-
60.6
-
Flamingo-9B∗
79.4
-
61.5
-
KOSMOS-1 (1.6B)
84.7
16.8
67.1
14.5
Table 2: Zero-shot image captioning results on COCO caption Karpathy test and Flickr30k test.
∗Flamingo [ADL+22] prompts with two examples from the downstream tasks while removing their
corresponding images (i.e., similar to few-shot text prompts). The other models do not include any
examples in the prompt.
Table 3 reports the results of the few-shot (k = 2, 4, 8) settings. The overall performance improves as
the number of shots increases from two to four. The trends are consistent across the two datasets.
Moreover, the few-shot results outperform zero-shot captioning in Table 2.
Model
COCO
Flickr30k
k = 2
k = 4
k = 8
k = 2
k = 4
k = 8
Flamingo-3B
-
85.0
90.6
-
72.0
71.7
Flamingo-9B
-
93.1
99.0
-
72.6
73.4
KOSMOS-1 (1.6B)
99.6
101.7
96.7
70.0
75.3
68.0
Table 3: Few-shot image captioning results on COCO caption Karpathy test and Flickr30k test.
CIDEr scores are reported.
Visual Question Answering
Table 4 reports the zero-shot visual question answering results on
VQAv2 and VizWiz. We show that KOSMOS-1 can better handle the diversity and complexity of
the VizWiz dataset. KOSMOS-1 achieves higher accuracy and robustness than Flamingo-3B and
Flamingo-9B models. In addition, our model is competitive with Flamingo on the VQAv2 dataset.
Model
VQAv2
VizWiz
Frozen
29.5
-
VLKDViT-B/16
38.6
-
METALM
41.1
-
Flamingo-3B∗
49.2
28.9
Flamingo-9B∗
51.8
28.8
KOSMOS-1 (1.6B)
51.0
29.2
Table 4: Zero-shot visual question answering results on VQAv2 and VizWiz. We present VQA
accuracy scores. “∗”: Flamingo [ADL+22] builds the zero-shot prompt with two examples from
the downstream tasks where their corresponding images are removed (i.e., similar to few-shot text
prompts) while the others evaluate true zero-shot learning.
Table 5 shows the few-shot performance on visual question answering tasks. KOSMOS-1 outperforms
other models in few-shot (k = 2, 4) settings on the VizWiz dataset. We also observe a positive
correlation between the number of shots and the quality of the results on the VizWiz dataset. Moreover,
the few-shot results are better than the zero-shot numbers as reported in Table 4.
9

Model
VQAv2
VizWiz
k = 2
k = 4
k = 8
k = 2
k = 4
k = 8
Frozen
-
38.2
-
-
-
-
METALM
-
45.3
-
-
-
-
Flamingo-3B
-
53.2
55.4
-
34.4
38.4
Flamingo-9B
-
56.3
58.0
-
34.9
39.4
KOSMOS-1 (1.6B)
51.4
51.8
51.4
31.4
35.3
39.0
Table 5: Few-shot visual question answering results on VQAv2 and VizWiz.VQA accuracy scores
are reported.
?
A
B
C
D
E
F
Example of IQ Test
A
B
C
D
E
F
𝑃( Yes | Input Prompt )
Which option can complete the matrix?
Here are 
eight images:  
Input Prompt
The following 
image is:
Is it correct?
Is it correct?
Is it correct?
Is it correct?
Is it correct?
Is it correct?
Yes
Yes
Yes
Yes
Yes
Yes
Figure 4: Top: An example of Raven IQ test. Bottom: Evaluate KOSMOS-1 on Raven IQ test.
The input prompt consists of the ﬂattened image matrix and verbal instruction. We append each
candidate image to the prompt separately and query the model if it is correct. The ﬁnal prediction is
the candidate that motivates the model to yield the highest probability of “Yes”.
4.2
IQ Test: Nonverbal Reasoning
Raven’s Progressive Matrices [CJS90, JR03] is one of the most common tests to evaluate nonverbal
reasoning. The capability of nonverbal reasoning is typically a reﬂection of an individual’s intelligence
quotient (IQ). Figure 4 shows an example. Given eight images presented in a 3 × 3 matrix, the task is
to identify the following element from six similar candidates.
The models need to conduct zero-shot nonverbal reasoning without explicitly ﬁne-tuning. The Raven
IQ test is analogous to in-context learning of language models, where the difference is whether the
context is nonverbal or verbal. In order to infer the answers, the models have to recognize abstract
concepts and identify the underlying patterns of given images. So the IQ task is a good testbed to
benchmark the nonverbal in-context learning capability.
10

4.2.1
Evaluation Setup
To evaluate the KOSMOS-1 on zero-shot nonverbal reasoning, we construct a dataset of the Raven IQ
test. It consists of 50 examples collected from different websites6789. Each example has three (i.e.,
2×2 matrix), four, or eight (i.e., 3×3 matrix) given images. The goal is to predict the next one. Each
instance has six candidate images with a unique correct completion. We measure accuracy scores to
evaluate the models. The evaluation dataset is available at https://aka.ms/kosmos-iq50.
Figure 4 illustrates how to evaluate KOSMOS-1 on the Raven IQ test. The matrix-style images are
ﬂattened and fed into the models one-by-one. To enable the model to better understand the desired
task, we also use a textual instruction “Here are three/four/eight images:”, “The following image is:”,
and “Is it correct?” for conditioning. We append each possible candidate to the context separately
and compare the probability that the model outputs “Yes” in a close-ended setting. The candidate that
yields the largest probability is regarded as the prediction.
4.2.2
Results
Table 6 shows the evaluation results on the IQ test dataset. Both KOSMOS-1 with and without
language-only instruction tuning achieve 5.3% and 9.3% improvement respectively over the random
baseline. The results indicate that KOSMOS-1 is able to perceive abstract conceptual patterns in a
nonverbal context, and then deduce the following element across multiple choices. To the best of
our knowledge, it is the ﬁrst time that a model can perform such zero-shot Raven IQ tests. Although
there is still a large performance gap between the current model and the average level of adults,
KOSMOS-1 demonstrates the potential of MLLMs to perform zero-shot nonverbal reasoning by
aligning perception with language models.
Method
Accuracy
Random Choice
17%
KOSMOS-1
22%
w/o language-only instruction tuning
26%
Table 6: Zero-shot generalization on Raven IQ test.
4.3
OCR-Free Language Understanding
OCR-free language understanding is a task that focuses on understanding text and images without
relying on Optical Character Recognition (OCR). For example, during the Rendered SST-2 task,
sentences from the Stanford Sentiment Treebank [SPW+13] dataset are rendered as images. The
model is asked to predict the sentiment of the text within the images. The task evaluates a model’s
ability to read and comprehend the meaning of words and sentences directly from the images.
4.3.1
Evaluation Setup
We evaluate OCR-free language understanding on the Rendered SST-2 [RKH+21] test set and
HatefulMemes [KFM+20] validation set. We use accuracy as the metric for the Rendered SST-2 and
report ROC AUC for the HatefulMemes dataset. We use the prompt “Question: what is the sentiment
of the opinion? Answer: {answer}”, where the answer is either positive or negative for the Rendered
SST-2. For the HatefulMemes task, the prompt is “Question: does this picture contain real hate
speech? Answer: {answer}”, where the answer is either yes or no.
4.3.2
Results
As shown in Table 7, KOSMOS-1 achieves a ROC AUC of 63.9% for the HatefulMemes validation
set and a test accuracy of 67.1% for the Rendered SST-2 test set. It outperforms CLIP ViT-L
6https://en.testometrika.com/intellectual/iq-test/
7https://en.testometrika.com/intellectual/iq-test-for-kids-7-to-16-year-old/
8https://iqpro.org/
9https://iqhaven.com/matrix-g
11

and Flamingo-9B, which achieve AUCs of 63.3% and 57.0% on the HatefulMemes task. Note
that Flamingo explicitly provides OCR text into the prompt, while KOSMOS-1 does not access
any external tools or resources. This indicates that KOSMOS-1 has built-in abilities to read and
comprehend the text in the rendered images.
Model
HatefulMemes
Rendered SST-2
CLIP ViT-B/32
57.6
59.6
CLIP ViT-B/16
61.7
59.8
CLIP ViT-L/14
63.3
64.0
Flamingo-3B
53.7
-
Flamingo-9B
57.0
-
KOSMOS-1 (1.6B)
63.9
67.1
Table 7: Zero-shot generalization on OCR-free language understanding. We report accuracy scores.
4.4
Web Page Question Answering
Web page question answering aims at ﬁnding answers to questions from web pages. It requires the
model to comprehend both the semantics and the structure of texts. The structure of the web page
(such as tables, lists, and HTML layout) plays a key role in how the information is arranged and
displayed. The task can help us evaluate our model’s ability to understand the semantics and the
structure of web pages.
4.4.1
Evaluation Setup
We compare the performance on the Web-based Structural Reading Comprehension (WebSRC)
dataset [CZC+21]. For comparisons, we train a language model (LLM) on the same text corpora
with the same training setup as in KOSMOS-1. The LLM takes the text extracted from the web
page as input. Its template of the prompt is “Given the context below from web page, extract the
answer from the given text like this: Qusestion: Who is the publisher of this book? Answer: Penguin
Books Ltd. Context: {WebText} Q: {question} A: {answer} ”, where the {WebText} presents the text
extracted from the web page. Besides using the same prompt, KOSMOS-1 prepends the image before
the prompt. Two example images from WebSRC are shown in Appendix C.3. Following the original
paper [CZC+21], we use exact match (EM) and F1 scores as our evaluation metrics.
4.4.2
Results
The experimental results are summarized in Table 8. We observe that KOSMOS-1 outperforms the
LLM, indicating that KOSMOS-1 can beneﬁt from the layout and style information of web pages in
images. In addition, we evaluate the performance of KOSMOS-1 without the extracted text in the
prompt. It shows that extracted text has a contribution of +12.0/20.7 EM/F1 to KOSMOS-1, indicating
that the beneﬁt from modeling images does not sacriﬁce its language abilities.
Models
EM
F1
Using extracted text
LLM
7.6
17.9
KOSMOS-1
15.8
31.3
Without using extracted text
KOSMOS-1
3.8
10.6
Table 8: Zero-shot performance on WebSRC task. We report exact match (EM) and F1 scores.
4.5
Multimodal Chain-of-Thought Prompting
Chain-of-thought prompting [WWS+22] allows large language models to generate a series of rea-
soning steps and decompose a multi-step problem into intermediate steps, which can signiﬁcantly
12

Standard Prompting
It is a robot that is holding up a cube that is the same color as the wall. The image is 
from the film, WALL-E, by Pixar Animation Studios. It is the story…
Pixar Animation Studios
Question: which studio created the movie characters in the image? 
Answer:
Question: which studio created the movie characters in the image? 
Answer:
Disney
Input Prompt 
Completion
Introduce this picture in detail:
Input Prompt 
Completion
It is a robot that is holding up a cube that is the same color as the wall. The image is from the film, 
WALL-E, by Pixar Animation Studios. It is the story of a small robot named WALL-E and his quest to 
build the ultimate life form. WALL-E is created by a group…
Input Prompt 
Completion
Multimodal Chain-of-Thought Prompting
Figure 5: Multimodal Chain-of-Thought prompting enables KOSMOS-1 to generate a rationale ﬁrst,
then to tackle complex question-answering and reasoning tasks.
improve the performance in complex tasks. Motivated by chain-of-thought prompting, we investigate
a multimodal chain-of-thought prompting using KOSMOS-1. As illustrated in Figure 5, we break
down perception-language tasks into two steps. In the ﬁrst stage, given an image, we use a prompt to
guide the model to generate a rationale. The model is then fed the rationale and a task-aware prompt
to produce the ﬁnal results.
4.5.1
Evaluation Setup
We evaluate the ability of multimodal chain-of-thought prompting on the Rendered SST-2. We use the
prompt “Introduce this picture in detail:” to generate the content in the picture as the rationale. Then,
we use the prompt “{rationale} Question: what is the sentiment of the opinion? Answer: {answer}”
to predict the sentiment, where the answer is either positive or negative.
4.5.2
Results
We conduct experiments to evaluate the performance of the multimodal chain-of-thought prompting.
Table 9 shows that multimodal chain-of-thought prompting achieves a score of 72.9, which is 5.8
points higher than the standard prompting. By generating intermediate content, the model can
recognize the text in the images and infer the sentiment of the sentences more correctly.
4.6
Zero-Shot Image Classiﬁcation
We report the zero-shot image classiﬁcation performance on ImageNet [DDS+09]. Image classiﬁca-
tion comprehends an entire image as a whole and aims to assign a label to the image. We map each
label to its category name in natural language. The model is prompted to predict the category name
to perform zero-shot image classiﬁcation.
13

Models
Accuracy
CLIP ViT-B/32
59.6
CLIP ViT-B/16
59.8
CLIP ViT-L/14
64.0
KOSMOS-1
67.1
w/ multimodal CoT prompting
72.9
Table 9: Multimodal chain-of-thought (CoT) prompting on Rendered SST-2 task.
Question:what is 
the name of the 
woodpecker in the 
picture, three toed 
or downy?
Answer:
Input Prompt 
Completion
downy woodpecker
Question:what
is the name of 
the woodpecker 
in the picture?
Answer:
Input Prompt 
Description of three toed woodpecker: It 
has black and white stripes throughout 
the body and a yellow crown.
Description of downy woodpecker: It 
has white spots on its black wings and 
some red on its crown.
Completion
three toe woodpecker
Zero-Shot Classification
Zero-Shot Classification with Descriptions
Figure 6: In-context verbal descriptions can help KOSMOS-1 recognize visual categories better.
4.6.1
Evaluation Setup
Given an input image, we concatenate the image with the prompt “The photo of the”. The input
is then fed into the model to obtain the category name of the image. We evaluate the model on
ImageNet [DDS+09], which contains 1.28M training images and 50k validation images in 1k object
categories. The prediction is classiﬁed as correct if it is exactly the same as the ground-truth category
name. The image resolution used for evaluation is 224×224. We use beam search to generate the
category names and the beam size is 2.
4.6.2
Results
As shown in Table 10, we report zero-shot results in both constrained and unconstrained settings.
The difference between the two settings is whether we use the 1k object category names to constrain
the decoding. KOSMOS-1 signiﬁcantly outperforms GIT [WYH+22] by 4.6% under the constrained
setting and 2.1% under the unconstrained setting.
Model
Without Constraints
With Constraints
GIT [WYH+22]
1.9
33.5
KOSMOS-1
4.0
38.1
Table 10: Zero-shot image classiﬁcation on ImageNet. For the results with constraints, we use the 1k
ImageNet object category names for constrained decoding. We report top-1 accuracy scores.
4.7
Zero-Shot Image Classiﬁcation with Descriptions
The standard approach of image classiﬁcation as above is to prompt the model for the speciﬁc name
of the object depicted in the image. However, there are also some classiﬁcation rules customized for
different users and scenarios, such as the reﬁned classiﬁcation of complex animal subspecies. We
can utilize natural language descriptions to guide KOSMOS-1 to distinguish images in the zero-shot
setting, which makes the decision process more interpretable.
14

Category 1
Category 2
three toed woodpecker
downy woodpecker
It has black and white stripes
throughout the body and a yellow
crown.
It has white spots on its black wings
and some red on its crown.
Gentoo penguin
royal penguin
It has a black head and white patch
above its eyes.
It has a white face and a yellow
crown.
black throated sparrow
fox sparrow
It has white underparts and a dis-
tinctive black bib on the throat.
It has a reddish-brown plumage and
a streaked breast.
Table 11: The detailed descriptions of different categories for in-context image classiﬁcation.
4.7.1
Evaluation Setup
Following CUB [WBW+11], we construct a bird classiﬁcation dataset that contains images and
natural-language descriptions of categories. The dataset has three groups of binary image classiﬁca-
tion. Each group contains two animal categories with similar appearances. Our goal is to classify
images given the categories’ descriptions. Table 11 presents the data samples. The ﬁrst group is
from [WBW+11], while the other two groups are collected from the website. Each category contains
twenty images.
The evaluation procedure is illustrated in Figure 6. For the zero-shot setting, we provide detailed
descriptions of two speciﬁc categories and use the template “Question:what is the name of {general
category} in the picture? Answer:” to prompt the model for the speciﬁc category name in an open-
ended manner. To evaluate the effect of providing verbal descriptions in context, we also implement
a zero-shot baseline without prompting descriptions. Instead, we provide the corresponding speciﬁc
names in the prompt.
4.7.2
Results
The evaluation results are shown in Table 12. We observe that providing descriptions in context can
signiﬁcantly improve the accuracy of image classiﬁcation. The consistent improvements indicate
that KOSMOS-1 can perceive the intentions of instructions and well align the concepts in language
modality with visual features in vision modality.
Settings
Accuracy
Without Descriptions
61.7
With Descriptions
90.0
Table 12: Results of zero-shot image classiﬁcation without and with verbal descriptions.
4.8
Language Tasks
The models are evaluated on the language tasks given task instructions (i.e., zero-shot) or several
demonstration examples (i.e., few-shot). Text inputs are directly fed into the models as in vanilla
language models.
15

4.8.1
Evaluation Setup
We train a language model (LLM) baseline with the same text corpora and training setup. We evaluate
KOSMOS-1 and the LLM baseline on eight language tasks, including cloze and completion tasks (i.e,
StoryCloze, HellaSwag), Winograd-style tasks (i.e, Winograd, Winogrande), commonsense reasoning
(i.e, PIQA), and three datasets BoolQ, CB, and COPA from the SuperGLUE benchmark [WPN+19].
The detailed descriptions of these datasets are provided in Appendix C.2. We conduct experiments
under zero-shot and few-shot settings. We evaluate each test example by randomly sampling examples
from the training set as demonstrations. We set the number of shots to 0, 1, and 4 in our experiments.
4.8.2
Results
Table 13 presents the in-context learning performance of language tasks. KOSMOS-1 achieves
comparable or even better performance in cloze completion and commonsense reasoning tasks
when compared to LLM. In terms of the average result across all these datasets, LLM performs
better in zero-shot and one-shot settings, whereas our model performs better in few-shot (k = 4)
settings. The results indicate that KOSMOS-1 also handles language-only tasks well and achieves
favorable performance across datasets. In addition, Section 4.9.2 shows that MLLMs learn better
visual commonsense knowledge compared with LLMs.
Task
Zero-shot
One-shot
Few-shot (k = 4)
LLM
KOSMOS-1
LLM
KOSMOS-1
LLM
KOSMOS-1
StoryCloze
72.9
72.1
72.9
72.2
73.1
72.3
HellaSwag
50.4
50.0
50.2
50.0
50.4
50.3
Winograd
71.6
69.8
71.2
68.4
70.9
69.8
Winogrande
56.7
54.8
56.7
54.5
57.0
55.7
PIQA
73.2
72.9
73.0
72.5
72.6
72.3
BoolQ
56.4
56.4
55.1
57.2
58.7
59.2
CB
39.3
44.6
41.1
48.2
42.9
53.6
COPA
68.0
63.0
69.0
64.0
69.0
64.0
Average
61.1
60.5
61.2
60.9
61.8
62.2
Table 13: Performance comparisons of language tasks between KOSMOS-1 and LLM. We use the
same textual data and training setup to reimplement a language model. Both models do not use
instruction tuning for fair comparisons.
4.9
Cross-modal Transfer
Cross-modal transferability allows a model to learn from one modality (such as text, image, audio,
etc.) and transfer the knowledge to the other modalities. This skill can enable a model to perform
various tasks across different modalities. In this part, we evaluate the cross-model transferability of
KOSMOS-1 on several benchmarks.
4.9.1
Transfer from Language to Multimodal: Language-Only Instruction Tuning
To evaluate the effect of language-only instruction tuning, we conduct an ablation study using four
datasets: COCO, Flickr30k, VQAv2, and VizWiz. These datasets consist of image captioning and
visual questions anwsering. The evaluation metrics are: CIDEr scores for COCO/Flickr30k and VQA
accuracy for VQAv2/VizWiz.
Table 14 shows the experimental results. Language-only instruction tuning boosts our model’s
performance by 1.9 points on Flickr30k, 4.3 points on VQAv2, and 1.3 points on VizWiz. Our experi-
ments show that language-only instruction tuning can signiﬁcantly improve the model’s instruction-
following capabilities across modalities. The results also indicate that our model can transfer the
instruction-following capability from language to other modalities.
16

Model
COCO
Flickr30k
VQAv2
VizWiz
KOSMOS-1
84.7
67.1
51.0
29.2
w/o language-only instruction tuning
87.6
65.2
46.7
27.9
Table 14: Ablation study on language-only instruction tuning. We report CIDEr scores for COCO
and Flickr30k, and VQA accuracy scores for VQAv2 and VizWiz.
4.9.2
Transfer from Multimodal to Language: Visual Commonsense Reasoning
Visual commonsense reasoning tasks require an understanding of the properties of everyday objects
in the real world, such as color, size, and shape. These tasks are challenging for language models
because they may require more information about object properties than what is available in texts.
To investigate the visual commonsense capabilities, we compare the zero-shot performance of
KOSMOS-1 and LLM on visual commonsense reasoning tasks.
Evaluation Setup
We compare KOSMOS-1 and the LLM baseline on three object com-
monsense reasoning datasets, RELATIVESIZE [BHCF16], MEMORYCOLOR [NHJ21] and COL-
ORTERMS [BBBT12] datasets. Table 15 shows some examples of object size and color reasoning
tasks. RELATIVESIZE contains 486 object pairs from 41 physical objects. The model is required to
predict the size relation between two objects in a binary question-answering format with “Yes”/“No”
answers. MEMORYCOLOR and COLORTERMS require the model to predict the color of objects from
a set of 11 color labels in a multiple-choice format. We use only text as our input and do not include
any images. We measure the accuracy of our model on these three datasets.
Task
Example Prompt
Object / Pair
Answer
Object Size Reasoning
Is {Item1} larger than {Item2}? {Answer}
(sofa, cat)
Yes
Object Color Reasoning
The color of {Object} is? {Answer}
the sky
blue
Table 15: Evaluation examples of object size and color reasoning.
Results
Table 16 presents the zero-shot performance of KOSMOS-1 and LLM on visual common-
sense reasoning tasks. KOSMOS-1 signiﬁcantly outperforms LLM by 1.5% on RELATIVESIZE,
14.7% on MEMORYCOLOR, and 9.7% on COLORTERMS dataset. The consistent improvements
indicate that KOSMOS-1 beneﬁts from the visual knowledge to complete the corresponding visual
commonsense reasoning. The reason for KOSMOS-1’s superior performance is that it has modality
transferability, which enables the model to transfer visual knowledge to language tasks. On the
contrary, LLM has to rely on textual knowledge and clues to answer visual commonsense questions,
which limits its ability to reason about object properties.
Model
Size Reasoning
Color Reasoning
RELATIVESIZE
MEMORYCOLOR
COLORTERMS
Using retrieved images
VALM [WDC+23]
85.0
58.6
52.7
Language-only zero-shot evaluation
LLM
92.7
61.4
63.4
KOSMOS-1
94.2
76.1
73.1
Table 16: Zero-shot visual commonsense reasoning on RELATIVESIZE, MEMORYCOLOR, and
COLORTERMS datasets. Accuracy scores are reported.
5
Conclusion
In this work, we introduce KOSMOS-1, a multimodal large language model that can perceive general
modalities, follow instructions, and perform in-context learning. The models trained on web-scale
17

multimodal corpora achieve promising results across a wide range of language tasks and multimodal
tasks. We show that going from LLMs to MLLMs enables new capabilities and opportunities. In
the future, we would like to scale up KOSMOS-1 in terms of model size [MWH+22, WMH+22,
CDH+22], and integrate the speech [WCW+23] capability into KOSMOS-1. In addition, KOSMOS-1
can be used as a uniﬁed interface for multimodal learning, e.g., enabling using instructions and
examples to control text-to-image generation.
References
[ADL+22] Jean-Baptiste Alayrac, Jeff Donahue, Pauline Luc, Antoine Miech, Iain Barr, Yana
Hasson, Karel Lenc, Arthur Mensch, Katherine Millican, Malcolm Reynolds, Roman
Ring, Eliza Rutherford, Serkan Cabi, Tengda Han, Zhitao Gong, Sina Samangooei, Mar-
ianne Monteiro, Jacob Menick, Sebastian Borgeaud, Andrew Brock, Aida Nematzadeh,
Sahand Sharifzadeh, Mikolaj Binkowski, Ricardo Barreira, Oriol Vinyals, Andrew
Zisserman, and Karen Simonyan. Flamingo: a visual language model for few-shot
learning. In Advances in Neural Information Processing Systems, 2022.
[AFJG16] Peter Anderson, Basura Fernando, Mark Johnson, and Stephen Gould. Spice: Semantic
propositional image caption evaluation. In ECCV, pages 382–398, 2016.
[AHR+22] Armen Aghajanyan, Bernie Huang, Candace Ross, Vladimir Karpukhin, Hu Xu, Na-
man Goyal, Dmytro Okhonko, Mandar Joshi, Gargi Ghosh, Mike Lewis, and Luke
Zettlemoyer.
CM3: A causal masked multimodal model of the Internet.
ArXiv,
abs/2201.07520, 2022.
[BBBT12] Elia Bruni, Gemma Boleda, Marco Baroni, and Nam Khanh Tran. Distributional
semantics in technicolor. In ACL, 2012.
[BHCF16] Hessam Bagherinezhad, Hannaneh Hajishirzi, Yejin Choi, and Ali Farhadi. Are ele-
phants bigger than butterﬂies? reasoning about sizes of objects. ArXiv, abs/1602.00753,
2016.
[BMR+20] Tom Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared D Kaplan, Prafulla
Dhariwal, Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda Askell, Sand-
hini Agarwal, Ariel Herbert-Voss, Gretchen Krueger, Tom Henighan, Rewon Child,
Aditya Ramesh, Daniel Ziegler, Jeffrey Wu, Clemens Winter, Chris Hesse, Mark Chen,
Eric Sigler, Mateusz Litwin, Scott Gray, Benjamin Chess, Jack Clark, Christopher
Berner, Sam McCandlish, Alec Radford, Ilya Sutskever, and Dario Amodei. Language
models are few-shot learners. In Advances in Neural Information Processing Systems,
volume 33, pages 1877–1901. Curran Associates, Inc., 2020.
[BPK+22] Minwoo Byeon, Beomhee Park, Haecheon Kim, Sungjun Lee, Woonhyuk Baek, and
Saehoon Kim. Coyo-700m: Image-text pair dataset, 2022.
[BZB+20] Yonatan Bisk, Rowan Zellers, Ronan Le Bras, Jianfeng Gao, and Yejin Choi. Piqa:
Reasoning about physical commonsense in natural language. In Thirty-Fourth AAAI
Conference on Artiﬁcial Intelligence, 2020.
[CDH+22] Zewen Chi, Li Dong, Shaohan Huang, Damai Dai, Shuming Ma, Barun Patra, Saksham
Singhal, Payal Bajaj, Xia Song, Xian-Ling Mao, Heyan Huang, and Furu Wei. On the
representation collapse of sparse mixture of experts. In Advances in Neural Information
Processing Systems, 2022.
[CJS90] Patricia A Carpenter, Marcel A Just, and Peter Shell. What one intelligence test
measures: a theoretical account of the processing in the raven progressive matrices test.
Psychological review, 97(3):404, 1990.
[CLC+19] Christopher Clark, Kenton Lee, Ming-Wei Chang, Tom Kwiatkowski, Michael Collins,
and Kristina Toutanova. BoolQ: Exploring the surprising difﬁculty of natural yes/no
questions. In Proceedings of the 2019 Conference of the North American Chapter of the
Association for Computational Linguistics: Human Language Technologies, Volume
1 (Long and Short Papers), pages 2924–2936, Minneapolis, Minnesota, June 2019.
Association for Computational Linguistics.
18

[CND+22] Aakanksha Chowdhery, Sharan Narang, Jacob Devlin, Maarten Bosma, Gaurav Mishra,
Adam Roberts, Paul Barham, Hyung Won Chung, Charles Sutton, Sebastian Gehrmann,
Parker Schuh, Kensen Shi, Sasha Tsvyashchenko, Joshua Maynez, Abhishek B Rao,
Parker Barnes, Yi Tay, Noam M. Shazeer, Vinodkumar Prabhakaran, Emily Reif, Nan
Du, Benton C. Hutchinson, Reiner Pope, James Bradbury, Jacob Austin, Michael
Isard, Guy Gur-Ari, Pengcheng Yin, Toju Duke, Anselm Levskaya, Sanjay Ghemawat,
Sunipa Dev, Henryk Michalewski, Xavier García, Vedant Misra, Kevin Robinson,
Liam Fedus, Denny Zhou, Daphne Ippolito, David Luan, Hyeontaek Lim, Barret Zoph,
Alexander Spiridonov, Ryan Sepassi, David Dohan, Shivani Agrawal, Mark Omernick,
Andrew M. Dai, Thanumalayan Sankaranarayana Pillai, Marie Pellat, Aitor Lewkowycz,
Erica Oliveira Moreira, Rewon Child, Oleksandr Polozov, Katherine Lee, Zongwei
Zhou, Xuezhi Wang, Brennan Saeta, Mark Díaz, Orhan Firat, Michele Catasta, Jason
Wei, Kathleen S. Meier-Hellstern, Douglas Eck, Jeff Dean, Slav Petrov, and Noah
Fiedel. PaLM: Scaling language modeling with pathways. ArXiv, abs/2204.02311,
2022.
[CSDS21] Soravit Changpinyo, Piyush Sharma, Nan Ding, and Radu Soricut. Conceptual 12m:
Pushing web-scale image-text pre-training to recognize long-tail visual concepts. In
Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition,
pages 3558–3568, 2021.
[CZC+21] Xingyu Chen, Zihan Zhao, Lu Chen, JiaBao Ji, Danyang Zhang, Ao Luo, Yuxuan Xiong,
and Kai Yu. WebSRC: A dataset for web-based structural reading comprehension.
In Proceedings of the 2021 Conference on Empirical Methods in Natural Language
Processing, pages 4173–4185, Online and Punta Cana, Dominican Republic, November
2021. Association for Computational Linguistics.
[DDS+09] Jia Deng, Wei Dong, Richard Socher, Li-Jia Li, Kai Li, and Li Fei-Fei. Imagenet: A
large-scale hierarchical image database. In 2009 IEEE Computer Society Conference
on Computer Vision and Pattern Recognition (CVPR 2009), 20-25 June 2009, Miami,
Florida, USA, pages 248–255. IEEE Computer Society, 2009.
[dMST19] Marie-Catherine de Marneffe, Mandy Simons, and Judith Tonhauser. The Commitment-
Bank: Investigating projection in naturally occurring discourse. Proceedings of Sinn
und Bedeutung, 23(2):107–124, Jul. 2019.
[GBB+20] Leo Gao, Stella Biderman, Sid Black, Laurence Golding, Travis Hoppe, Charles Foster,
Jason Phang, Horace He, Anish Thite, Noa Nabeshima, et al. The pile: An 800gb
dataset of diverse text for language modeling. arXiv preprint arXiv:2101.00027, 2020.
[GKSS+17] Yash Goyal, Tejas Khot, Douglas Summers-Stay, Dhruv Batra, and Devi Parikh. Making
the v in vqa matter: Elevating the role of image understanding in visual question
answering. In CVPR, pages 6325–6334, 2017.
[GLS+18] Danna Gurari, Qing Li, Abigale J Stangl, Anhong Guo, Chi Lin, Kristen Grauman,
Jiebo Luo, and Jeffrey P Bigham. Vizwiz grand challenge: Answering visual questions
from blind people. In Proceedings of the IEEE conference on computer vision and
pattern recognition, pages 3608–3617, 2018.
[HG16] Dan Hendrycks and Kevin Gimpel. Gaussian error linear units (GELUs). arXiv preprint
arXiv:1606.08415, 2016.
[HSD+22] Yaru Hao, Haoyu Song, Li Dong, Shaohan Huang, Zewen Chi, Wenhui Wang, Shum-
ing Ma, and Furu Wei. Language models are general-purpose interfaces. ArXiv,
abs/2206.06336, 2022.
[HSLS22] Or Honovich, Thomas Scialom, Omer Levy, and Timo Schick. Unnatural instructions:
Tuning language models with (almost) no human labor, 2022.
[JR03] John and Jean Raven. Raven Progressive Matrices, pages 223–237. Springer US,
Boston, MA, 2003.
19

[KFF17] Andrej Karpathy and Li Fei-Fei. Deep visual-semantic alignments for generating
image descriptions. IEEE Transactions on Pattern Analysis and Machine Intelligence,
39(4):664–676, 2017.
[KFM+20] Douwe Kiela, Hamed Firooz, Aravind Mohan, Vedanuj Goswami, Amanpreet Singh,
Pratik Ringshia, and Davide Testuggine. The hateful memes challenge: Detecting hate
speech in multimodal memes. In Advances in Neural Information Processing Systems,
volume 33, pages 2611–2624, 2020.
[KR18] Taku Kudo and John Richardson. SentencePiece: A simple and language independent
subword tokenizer and detokenizer for neural text processing. In EMNLP, pages 66–71,
2018.
[KSF23] Jing Yu Koh, Ruslan Salakhutdinov, and Daniel Fried. Grounding language models to
images for multimodal generation. arXiv preprint arXiv:2301.13823, 2023.
[LDM12a] Hector Levesque, Ernest Davis, and Leora Morgenstern. The winograd schema chal-
lenge. In Thirteenth International Conference on the Principles of Knowledge Repre-
sentation and Reasoning, 2012.
[LDM12b] Hector J. Levesque, Ernest Davis, and Leora Morgenstern. The winograd schema
challenge. In Principles of Knowledge Representation and Reasoning, 2012.
[LHV+23] Shayne Longpre, Le Hou, Tu Vu, Albert Webson, Hyung Won Chung, Yi Tay, Denny
Zhou, Quoc V Le, Barret Zoph, Jason Wei, et al. The ﬂan collection: Designing data
and methods for effective instruction tuning. arXiv preprint arXiv:2301.13688, 2023.
[LLSH23] Junnan Li, Dongxu Li, Silvio Savarese, and Steven Hoi. BLIP-2: Bootstrapping
language-image pre-training with frozen image encoders and large language models.
ArXiv, abs/2301.12597, 2023.
[LMB+14] Tsung-Yi Lin, Michael Maire, Serge Belongie, James Hays, Pietro Perona, Deva
Ramanan, Piotr Dollár, and C Lawrence Zitnick. Microsoft coco: Common objects in
context. In ECCV, pages 740–755, 2014.
[LOG+19] Yinhan Liu, Myle Ott, Naman Goyal, Jingfei Du, Mandar Joshi, Danqi Chen, Omer
Levy, Mike Lewis, Luke Zettlemoyer, and Veselin Stoyanov. RoBERTa: A robustly
optimized bert pretraining approach. arXiv preprint arXiv:1907.11692, 2019.
[MRL+17] Nasrin Mostafazadeh, Michael Roth, Annie Louis, Nathanael Chambers, and James
Allen. Lsdsem 2017 shared task: The story cloze test. In Proceedings of the 2nd
Workshop on Linking Models of Lexical, Sentential and Discourse-level Semantics,
pages 46–51, 2017.
[MWH+22] Shuming Ma, Hongyu Wang, Shaohan Huang, Wenhui Wang, Zewen Chi, Li Dong,
Alon Benhaim, Barun Patra, Vishrav Chaudhary, Xia Song, and Furu Wei. TorchScale:
Transformers at scale. CoRR, abs/2211.13184, 2022.
[NHJ21] Tobias Norlund, Lovisa Hagström, and Richard Johansson.
Transferring knowl-
edge from vision to language: How to achieve it and how to measure it?
ArXiv,
abs/2109.11321, 2021.
[RBG11] Melissa Roemmele, Cosmin Adrian Bejan, and Andrew S. Gordon. Choice of plau-
sible alternatives: An evaluation of commonsense causal reasoning. In AAAI Spring
Symposium, 2011.
[RKH+21] Alec Radford, Jong Wook Kim, Chris Hallacy, Aditya Ramesh, Gabriel Goh, Sandhini
Agarwal, Girish Sastry, Amanda Askell, Pamela Mishkin, Jack Clark, et al. Learn-
ing transferable visual models from natural language supervision. In International
conference on machine learning, pages 8748–8763. PMLR, 2021.
[RPJ+20] Jack W. Rae, Anna Potapenko, Siddhant M. Jayakumar, Chloe Hillier, and Timothy P.
Lillicrap. Compressive transformers for long-range sequence modelling. In ICLR, 2020.
20

[SBBC20] Keisuke Sakaguchi, Ronan Le Bras, Chandra Bhagavatula, and Yejin Choi. WinoGrande:
An adversarial winograd schema challenge at scale. In AAAI, pages 8732–8740, 2020.
[SBV+22] Christoph Schuhmann, Romain Beaumont, Richard Vencu, Cade Gordon, Ross Wight-
man, Mehdi Cherti, Theo Coombes, Aarush Katta, Clayton Mullis, Mitchell Wortsman,
et al. Laion-5b: An open large-scale dataset for training next generation image-text
models. arXiv preprint arXiv:2210.08402, 2022.
[SDGS18] Piyush Sharma, Nan Ding, Sebastian Goodman, and Radu Soricut. Conceptual captions:
A cleaned, hypernymed, image alt-text dataset for automatic image captioning. In Pro-
ceedings of the 56th Annual Meeting of the Association for Computational Linguistics,
ACL 2018, Melbourne, Australia, July 15-20, 2018, Volume 1: Long Papers, pages
2556–2565. Association for Computational Linguistics, 2018.
[SDP+22] Yutao Sun, Li Dong, Barun Patra, Shuming Ma, Shaohan Huang, Alon Benhaim,
Vishrav Chaudhary, Xia Song, and Furu Wei. A length-extrapolatable transformer.
arXiv preprint arXiv:2212.10554, 2022.
[SPN+22] Shaden Smith, Mostofa Patwary, Brandon Norick, Patrick LeGresley, Samyam Rajbhan-
dari, Jared Casper, Zhun Liu, Shrimai Prabhumoye, George Zerveas, Vijay Korthikanti,
Elton Zhang, Rewon Child, Reza Yazdani Aminabadi, Julie Bernauer, Xia Song, Mo-
hammad Shoeybi, Yuxiong He, Michael Houston, Saurabh Tiwary, and Bryan Catanzaro.
Using DeepSpeed and Megatron to train Megatron-Turing NLG 530B, a large-scale
generative language model, 2022.
[SPP+19] Mohammad Shoeybi, Mostofa Patwary, Raul Puri, Patrick LeGresley, Jared Casper,
and Bryan Catanzaro. Megatron-lm: Training multi-billion parameter language models
using model parallelism. arXiv preprint arXiv:1909.08053, 2019.
[SPW+13] Richard Socher, Alex Perelygin, Jean Wu, Jason Chuang, Christopher D. Manning,
Andrew Ng, and Christopher Potts. Recursive deep models for semantic composition-
ality over a sentiment treebank. In Proceedings of the 2013 Conference on Empirical
Methods in Natural Language Processing, pages 1631–1642, Seattle, Washington, USA,
October 2013. Association for Computational Linguistics.
[SVB+21] Christoph Schuhmann, Richard Vencu, Romain Beaumont, Robert Kaczmarczyk, Clay-
ton Mullis, Aarush Katta, Theo Coombes, Jenia Jitsev, and Aran Komatsuzaki. Laion-
400m: Open dataset of clip-ﬁltered 400 million image-text pairs. arXiv preprint
arXiv:2111.02114, 2021.
[TMC+21] Maria Tsimpoukelli, Jacob Menick, Serkan Cabi, S. M. Ali Eslami, Oriol Vinyals, and
Felix Hill. Multimodal few-shot learning with frozen language models. In Neural
Information Processing Systems, 2021.
[VLZP15] Ramakrishna Vedantam, C Lawrence Zitnick, and Devi Parikh. Cider: Consensus-based
image description evaluation. In CVPR, pages 4566–4575, 2015.
[WBD+22] Wenhui Wang, Hangbo Bao, Li Dong, Johan Bjorck, Zhiliang Peng, Qiang Liu, Kriti
Aggarwal, Owais Mohammed, Saksham Singhal, Subhojit Som, and Furu Wei. Image
as a foreign language: BEiT pretraining for all vision and vision-language tasks. ArXiv,
abs/2208.10442, 2022.
[WBW+11] Catherine Wah, Steve Branson, Peter Welinder, Pietro Perona, and Serge J. Belongie.
The caltech-ucsd birds-200-2011 dataset. 2011.
[WCW+23] Chengyi Wang, Sanyuan Chen, Yu Wu, Zi-Hua Zhang, Long Zhou, Shujie Liu, Zhuo
Chen, Yanqing Liu, Huaming Wang, Jinyu Li, Lei He, Sheng Zhao, and Furu Wei.
Neural codec language models are zero-shot text to speech synthesizers.
ArXiv,
abs/2301.02111, 2023.
[WDC+23] Weizhi Wang, Li Dong, Hao Cheng, Haoyu Song, Xiaodong Liu, Xifeng Yan, Jian-
feng Gao, and Furu Wei. Visually-augmented language modeling. In International
Conference on Learning Representations, 2023.
21

[WMD+22] Hongyu Wang, Shuming Ma, Li Dong, Shaohan Huang, Dongdong Zhang, and Furu
Wei. DeepNet: Scaling Transformers to 1,000 layers. CoRR, abs/2203.00555, 2022.
[WMH+22] Hongyu Wang, Shuming Ma, Shaohan Huang, Li Dong, Wenhui Wang, Zhiliang Peng,
Yu Wu, Payal Bajaj, Saksham Singhal, Alon Benhaim, Barun Patra, Zhun Liu, Vishrav
Chaudhary, Xia Song, and Furu Wei. Foundation transformers. CoRR, abs/2210.06423,
2022.
[WPN+19] Alex Wang, Yada Pruksachatkun, Nikita Nangia, Amanpreet Singh, Julian Michael,
Felix Hill, Omer Levy, and Samuel R Bowman. SuperGLUE: A stickier benchmark for
general-purpose language understanding systems. arXiv preprint arXiv:1905.00537,
2019.
[WWS+22] Jason Wei, Xuezhi Wang, Dale Schuurmans, Maarten Bosma, Ed Chi, Quoc Le, and
Denny Zhou. Chain of thought prompting elicits reasoning in large language models.
arXiv preprint arXiv:2201.11903, 2022.
[WYH+22] Jianfeng Wang, Zhengyuan Yang, Xiaowei Hu, Linjie Li, Kevin Lin, Zhe Gan, Zicheng
Liu, Ce Liu, and Lijuan Wang. GIT: A generative image-to-text transformer for vision
and language. CoRR, abs/2205.14100, 2022.
[YAS+22] Michihiro Yasunaga, Armen Aghajanyan, Weijia Shi, Rich James, Jure Leskovec,
Percy Liang, Mike Lewis, Luke Zettlemoyer, and Wen tau Yih. Retrieval-augmented
multimodal language modeling. ArXiv, abs/2211.12561, 2022.
[YLHH14] Peter Young, Alice Lai, Micah Hodosh, and Julia Hockenmaier. From image descrip-
tions to visual denotations: New similarity metrics for semantic inference over event
descriptions. TACL, 2:67–78, 2014.
[ZHB+19] Rowan Zellers, Ari Holtzman, Yonatan Bisk, Ali Farhadi, and Yejin Choi. Hellaswag:
Can a machine really ﬁnish your sentence? In Proceedings of the 57th Annual Meeting
of the Association for Computational Linguistics, 2019.
22

A
Hyperparameters
A.1
Training
We report the detailed model hyperparameter settings of KOSMOS-1 in Table 17 and training
hyperparameters in Table 18.
Hyperparameters
Number of layers
24
Hidden size
2,048
FFN inner hidden size
8,192
Attention heads
32
Dropout
0.1
Attention dropout
0.1
Activation function
GeLU [HG16]
Vocabulary size
64,007
Soft tokens V size
64
Max length
2,048
Relative position embedding
xPos [SDP+22]
Initialization
Magneto [WMH+22]
Table 17: Hyperparameters of causal language model of KOSMOS-1
Hyperparameters
Training steps
300,000
Warmup steps
375
Batch size of text corpora
256
Max length of text corpora
2,048
Batch size of image-caption pairs
6,144
Batch size of interleaved data
128
Optimizer
Adam
Learning rate
2e-4
Learning Rate Decay
Linear
Adam ϵ
1e-6
Adam β
(0.9, 0.98)
Weight decay
0.01
Table 18: Training hyperparameters of KOSMOS-1
A.2
Language-Only Instruction Tuning
The detailed instruction tuning hyperparameters are listed in Table 19.
Hyperparameters
Training steps
10,000
Warmup steps
375
Batch size of instruction data
256
Batch size of text corpora
32
Batch size of image-caption pairs
768
Batch size of interleaved data
16
Learning rate
2e-5
Table 19: Instruction tuning hyperparameters of KOSMOS-1
23

B
Datasets
B.1
Pretraning
B.1.1
Text Corpora
KOSMOS-1 is trained on The Pile [GBB+20] and Common Crawl. The Pile is an 800 GB English
text corpus combining 22 diverse sources. We select a subset with seven sources from The Pile.
Common Crawl is also included in training corpora. Common Crawl takes snapshots of the web,
which contains massive amounts of language data. Table 20 provides a full overview of the language
datasets that were used in the training of KOSMOS-1 model. These data sources can be divided into
the following three categories:
• Academic: NIH Exporter
• Internet: Pile-CC, OpenWebText2, Wikipedia (English), CC-2020-50, CC-2021-04, Realnews
• Prose: BookCorpus2, Books3, Gutenberg [RPJ+20], CC-Stories
Datasets
Tokens (billion)
Weight (%)
Epochs
OpenWebText2
14.8
21.8%
1.47
CC-2021-04
82.6
17.7%
0.21
Books3
25.7
16.2%
0.63
CC-2020-50
68.7
14.7%
0.21
Pile-CC
49.8
10.6%
0.21
Realnews
21.9
10.2%
0.46
Wikipedia
4.2
5.4%
1.29
BookCorpus2
1.5
1.1%
0.75
Gutenberg (PG-19)
2.7
1.0%
0.38
CC-Stories
5.3
1.0%
0.19
NIH ExPorter
0.3
0.2%
0.75
Table 20: Language datasets used to train the KOSMOS-1 model.
B.1.2
Image-Caption Pairs
KOSMOS-1 is trained on image-caption pairs constructed from several datasets, including English
LAION-2B [SBV+22], LAION-400M [SVB+21], COYO-700M [BPK+22] and Conceptual Cap-
tions [SDGS18, CSDS21]. LAION-2B, LAION-400M, and COYO-700M datasets are extracted by
parsing out image URLs and alt-texts of web pages from the Common Crawl web data. LAION-2B
contains about 2B English image-caption pairs, LAION-400M consists of 400M English image-
caption pairs, and COYO-700M has 700M English image-caption pairs. Conceptual Captions contains
15M English image-caption pairs and consists of two datasets: CC3M and CC12M, which are also
collected from internet webpages using a Flume pipeline. For Conceptual Captions, we discard pairs
whose captions contain special tags such as “<PERSON>”.
B.1.3
Interleaved Data
We collect a large corpus of 2 billion web pages from the snapshots of common crawls. To ensure
quality and relevance, we apply several ﬁltering criteria. First, we discard any pages that are not
written in English. Second, we discard any pages that do not have images interspersed in the text.
Third, we discard any images that have a resolution lower than 64 by 64 pixels or that are single-
colored. Fourth, we discard any text that is not meaningful or coherent, such as spam or gibberish.
We use some heuristics to identify and remove gibberish text containing emoji symbols, hashtags,
and URL links. After applying these ﬁlters, we end up with about 71 million documents for training.
B.2
Data Format
The training data is organized in the format as follows:
24

Datasets
Format Examples
Text
<s> KOSMOS-1 can perceive multimodal input, learn in context, and gener-
ate output. </s>
Image-Caption
<s> <image> Image Embedding </image> WALL-E giving potted plant to
EVE. </s>
Multimodal
<s> <image> Image Embedding </image> This is WALL-E. <image>
Image Embedding </image> This is EVE. </s>
Table 21: The examples of the data format to train the KOSMOS-1 model.
C
Evaluation
C.1
Input Format Used for Perception-Language Tasks
Figure 7 shows how we conduct zero-shot and few-shot evaluations on perception-language tasks.
Multimodal Large Language Model (MLLM)
WALL-E          giving          potted        plant           to            EVE
WALL-E        giving        potted         plant           to
(a) Zero-shot learning
Embedding
Image
An   image    of 
(b) Few-shot learning
Multimodal Large Language Model (MLLM)
Rubik's Cube
Embedding
Image
Question: what did 
WALL-E give EVE? 
Answer: potted plant 
Embedding
Image
Question: What's 
in WALL-E’s 
hand? Answer:
Figure 7: We evaluate KOSMOS-1 on the perception-language tasks in zero- and few-shot settings. (a)
Zero-shot learning, e.g., zero-shot image captioning with language prompts. (b) Few-shot learning,
e.g., visual question answering with in-context learning.
25

C.2
Language Tasks
We conduct experiments on language tasks in four categories:
• Cloze and completion tasks: StoryCloze [MRL+17], HellaSwag [ZHB+19]
• Winograd-style tasks: Winograd [LDM12b], Winogrande [SBBC20]
• Commonsense reasoning: PIQA [BZB+20]
• Three datasets from SuperGLUE benchmark [WPN+19]: BoolQ [CLC+19], CB [dMST19],
COPA [RBG11]
C.3
WebSRC Task Examples
(a) Question is “What is the type
of this drive?”
(b) Question is “Who is the author of "Cicada"?”
Figure 8: Examples form WebSRC [CZC+21].
26

