Katia Parshina*
Philosophical Assumptions Behind the
Rejection of Computer-Based Proofs
https://doi.org/10.1515/krt-2022-0015
Published online April 27, 2023
Abstract: In 1977, the ﬁrst computer-assisted proof of a mathematical theorem was
presented by K. Appel and W. Haken. The proof was met with a lot of criticism from
both mathematicians and philosophers. In this paper, I present some examples of
computer-assisted proofs, including Appel and Haken’s work. Then, I analyze the
most famous arguments against the equal acceptance of computer-based and
human-based proofs in mathematics and examine the philosophical assumptions
behind the presented criticism. In the conclusion, I talk about whether the philo-
sophical assumptions are justiﬁed as they are, or one needs to take a speciﬁc
philosophical position to accept them.
Keywords: proof, computer-assisted proof, philosophy of mathematics, four-color
theorem
1 Introduction
Since the ﬁrst publication of a major theorem’s proof, a crucial step of which was
produced by a computer, namely, the proof of the four-color-map theorem pre-
sented by Appel and Haken (1977), many doubts have been expressed within
the mathematical and philosophical communities about the status of such proof.
The ﬁrst contribution came from T. Tymoczko in his work “The four-color problem
and its philosophical signiﬁcance” (1979), where the author presented his expla-
nation of how the implementation of computer-based proof into mathematical
practice changes the whole notion of mathematics. Tymoczko’s paper was followed
by criticism from other authors, who either were looking for a way to diﬀerentiate
between computer-based and human-based proofs within the mathematical
practice (Barrow 1995; Hanna and Jahnke 1996; Thurston 1994Hamami 2018;
Tymoczko 1979) or denied the fact that computer-based proofs can be called ‘proofs’
at all (Lam, Thiel, and Stanley 1989). I should note that there are almost no authors
who speciﬁcally want to reject computer-assisted proofs in mathematics: most
*Corresponding author: Katia Parshina, University of Amsterdam, 1012 WX Amsterdam, 1000 GG,
Amsterdam, Netherlands, E-mail: yavishenko@gmail.com
Kriterion – J. Philos. 2023; aop
Open Access. © 2023 the author(s), published by De Gruyter.
This work is licensed under the
Creative Commons Attribution 4.0 International License.

authors argue not against this type of proof in general, but against equal statuses of
computer-assisted and human-preformed proofs in mathematics.
The main subject of this paper is the unequal acceptance of computer- and
human-based proofs in mathematical practice and the mathematical community.
I use the term ‘acceptance’ here not to ask the question “Should computer-assisted
proofs be used in mathematics at all?” – this type of proof has already been used in
mathematical practice for more than 40 years. However, up to some point, it was
only human-performed proof that deﬁned the whole concept of proof in mathe-
matics. Now, we have a new entity that can be considered to be a proof and is
similar to a human proof in many aspects. There are many doubts and questions
concerning the status of this entity, as you will see in Section 3. We have no
questions about whether it is admissible for a mathematician to use a pen and piece
of paper while proving a statement, but we have many questions about whether the
same mathematician is allowed to use an SAT solver.1 And here we come to the
question: can this entity, computer-assisted proof, be accepted as a proof in
mathematical practice, which is, accepted in the same status as a human-based
proof? That is the main question of the debate I present in this paper. One can ask
various additional questions following the main one: if the answer to it is ‘yes’, then
do we need to change our deﬁnition of a mathematical proof? If the answer is ‘no’,
in what context should we accept this new entity? The presented problem of equal
acceptance of computer- and human-based proofs concerns, ﬁrst of all, the com-
munity of mathematicians: computer-based proofs are already in use in mathe-
matical practice in some unidentiﬁed status. I believe that the philosophers of
mathematics (among whom, of course, there are a lot of mathematicians) can help
with a clearer deﬁnition of what this status is. However, the problem concerns
acceptance within the mathematical community in the ﬁrst place.
The arguments against equal acceptance of computer-assisted and human
prove methods vary: the computer proof is not veriﬁable by human beings because
it is impossible to survey; the actions performed by a computer do not constitute
mathematical proof, but merely a number of calculations; the method does not
contribute to the existing mathematical practice, etc. All these arguments point to
the fact that computer-based proofs are something new, introduced into mathe-
matical practice from the ‘outside’, and it is not that simple to embrace that
innovation with no changes within the mathematics itself. The ﬁrst proof of the
4-color theorem has led to a debate about the status of computer-based proofs:
some authors argued that computer-assisted proofs endanger the notion of proof as
we know it (Britain 1984). Some other authors have argued that the implementation
1 SAT solver is a computer program which aims to solve Boolean satisﬁability problem: it states
whether the input formula is satisﬁable.
2
K. Parshina

of computer-based proofs causes the dissemination within mathematical knowl-
edge (Brikaite et al. 2013).
In this paper, I present several examples of computer-based proofs and examine
whether the criticism towards this type of proof implies some particular philo-
sophical position on the notion of proof in mathematics or on the deﬁnition of
mathematics in general. I am going to analyze the existing criticism2 of the computer-
based prove method and see whether diﬀerent positions have a common root. Then,
I am going to present the main philosophical assumptions behind the objections, if
the common ground of criticism will be found.
2 Computer-Based Proofs
Here, I want to present a short taxonomy of computer-assisted proofs so that the
reader could get a better understanding of what is being discussed in the present
section. Computer-assisted proofs can be used to:
1. Find a counterexample. If a counterexample is found, the mathematician can
simply use this counterexample in their proof, without even referring to the
computer (after all, the mathematician themself could have come up with this
counterexample).
2. Prove that there are no counterexamples. That can be done in two ways:
(a)
Non-formalized (not fully formalized) proof. The mathematician comes to a
step in their proof where a large set of cases needs to be surveyed to prove
that none of the cases are counterexamples (or to ﬁnd a counterexample, in
which case the proof is of type 1). One writes or uses an already existing
computer program to go through this large set of cases.
(b)
Fully formalized. The mathematician uses a proof assistant or similar soft-
ware tool to prove a statement. One needs to present a fully formalized
theorem that needs to be presented as an input for the proof assistant. The
proof assistant derives the proof according to other formalized mathematical
statements.
In my paper, I do not consider proofs of type 1, since they are very easily reducible to
regular human proofs. All of the presented here examples are of type 2(a), other than
Gonthier’s proof – it is of type 2(b), which is, fully formalized. Proofs of type 2(a)
require a computer program to test large collections of examples in the accordance
2 One of the authors presented in Section 3, T. Tymoczko, does not reject the equal acceptance of
computer-based proofs together with human proofs. In Section 3, I explain why I include Tymoczko’s
position in the paper.
Rejection of Computer-Based Proofs
3

with a particular theorem, lemma, or any mathematical assumption. In these proofs,
the design of the proof and the input for a computer program are still provided by a
human being(s). What the computer does is check whether all possible cases fall
under the desired characteristic. In this paper, I plan to implement the existing
debate about the status of computer-based proofs speciﬁcally to the proofs of type
2(a). I do that because proofs of type 2(b) – fully formalized ones – should be an object
of diﬀerent research since another layer of argumentation should be considered to
study this type of proof.3 Moreover, the authors presented in Section 4 mostly refer to
non-formalized proofs in their discussion. I include Gonthier’s proof of the four-color
theorem to brieﬂy compare proofs of type 2(a) to the proofs of type 2(b) in the
perception of diﬀerent authors. Now, we turn to the discussion of speciﬁc examples.
The four-color problem is formulated in the following way: can every map
(whether it is located on a plane or a sphere) be colored with no more than four
colors in such a way that regions sharing a common boundary are never colored
alike? Mathematical statement of the theorem is that vertices of any planar
graph can be 4-colored. The problem was ﬁrst formulated by F. Guthrie in 1852
(MacKenzie 2004, 103). After that, for more than a hundred years the four-color
conjecture was an unsolved problem in mathematics until K. Appel and W. Haken
published “The solution of the four-color-map problem” in 1977. In the article,
Appel and Haken prove the four-color theorem. Now, I shortly describe the line of
the authors’ reasoning. If the reader wants to ﬁgure out why the authors use certain
formulas and methods, I advise going to the original source (Appel and Haken 1977)
or to Tymoczko’s reconstruction of the proof (Tymoczko 1979, 63–68).
First, by the standard machinery, the general case can be reduced to the case of a
triangulated graph (s.t. all its faces are triangles), and it can be proved that the
minimal vertex degree m of such a graph can be 3, 4, or 5. The case m = 3 can be done
by trivial induction. The case m = 4 is less trivial, but it is standard and can be solved
by the Kempe chain argument. The remaining case m = 5 is the hard one.
The authors use the notion of reducible conﬁguration, studied by Birkhoﬀ
(1913). A graph S is called the reducible conﬁguration if the 4-colorability of any
planar graph containing S as a subgraph is deducible from the 4-colorability of any
planar graph with fewer vertices. It follows from this deﬁnition that the minimal
counterexample of the 4-color problem cannot contain any reducible conﬁgura-
tion. Now, the authors present a list U of 1834 conﬁgurations (to get which they used
3 There is an ongoing debate about the correspondence between proofs of type 1 and 2(b), speciﬁcally
concerning the question whether proofs of type 1 indicate a derivation that corresponds to the one
presented in proofs of type 2(b). There are diﬀerent positions on the matter: Hamami (2018, 2022)
argues for the existence of such correspondence, Rav (2007), Tanswell (2015) argue against it. How-
ever, as I already mentioned, I do not discuss proofs of type 2(b) and problems related to them in this
paper. For more information on the topic see Weir (2016).
4
K. Parshina

a computer program), which is unavoidable, meaning that any planar graph con-
tains at least one of these conﬁgurations. It can be proved without a computer that
U is indeed unavoidable. However, the computer was used to prove that every
conﬁguration in this list is reducible.
Appel and Haken used a computer to ﬁnish the ﬁnal part of the proof: producing
the list of conﬁgurations and proving their reducibility. The authors did not use a
computer to ﬁnd a proof strategy or a speciﬁc counterexample, they used a computer
only to sort out all the possible conﬁgurations and make sure that the 4-coloring
theorem still holds. Only together with the human-based line of reasoning, the
computer calculations solve the problem.
Here, I should note that Appel and Haken’s proof was far from ideal. First of all,
the ﬁnal part of the proof contains a large number of reducible conﬁgurations
which are supposed to be checked by the computer – 1834 cases. To check one
conﬁguration, the computer performs approximately 500,000 logical operations,
which makes the whole proof rely on computer calculations to a great extent. The
massive amount of computer calculations made some scientists doubt the validity
of the proof (Walters 2004, 10). Later, the authors were able to reduce the number to
1482, and in 1996, N. Robertson et al. reduced the number of conﬁgurations to 633
(Wilson 2003, 212–226). What is more, Appel and Haken’s proof contained several
mistakes: one was found by U. Schmidt in 1981, and another one was identiﬁed by
S. Saeki (Wilson 2003, 225). However, leaving mistakes and a large number of
calculations aside, Appel and Haken’s proof was hard to understand because of the
way it was presented to the mathematical society.4 The human-based part of the
proof was published in a journal, but the part calculated by a computer was only
available in microﬁlm and the only way to check its validity was to re-run the
program Appel and Haken designed on a high-speed computer. Supercomputers
were practically inaccessible to most academic researchers in the 1980s
(Cohen 1991, 1), and even if a mathematician was lucky enough to get an appoint-
ment to use a supercomputer and implement Appel and Haken’s program on it,
what a mathematician would get is, again, a microﬁlm (or a similar information
carrier) with a lot of data which one cannot simply check or look through. All these
characteristics of the proof will later become a subject of critique from authors
comparing computer-assisted and human-based proofs.
Robertson et al. (1996), who reduced the set of conﬁgurations to 633, actually did
not just redo Appel and Haken’s proof with fewer cases of conﬁguration but pre-
sented their own proof which was based on Appel and Haken’s method. The authors
state that their proof is “simpler than Appel and Haken’s in several respects”
4 The way the Appel and Haken’s proof was presented is, of course, directly connected to the way the
theorem was proven.
Rejection of Computer-Based Proofs
5

(Robertson et al. 1996, 1). Robertson et al. used Heesch’s conjecture to help to reduce
the ﬁnal set of unavoidable conﬁgurations to 633. To prove the unavoidability of the
set the authors deﬁned a discharging procedure that only involved 32 rules, while
Appel and Haken’s procedure included 487 rules which made it signiﬁcantly hard for
mathematicians to check the correctness of the procedure. Robertson et al. decided to
prove the unavoidability both by hand and with a computer program: they presented
two options to the reader. The human-based version of the proof would take, as the
authors state, about two months, while the computer proof would take a couple of
minutes. To prove the reducibility of the 633 conﬁgurations, the authors still used a
computer, and there was no fully human-performed option of the proof. However,
they provide a link to their program for the reader to run on their home computer
and even presented two diﬀerent programs to double-check the results.
In 2005, G. Gonthier presented a fully formalized proof of the 4-color theorem
based on Robertson et al.’s proof. Gonthier used Coq – an interactive theorem
prover. An interactive theorem prover is diﬀerent from the computer programs
used by Robertson et al. or by Appel and Haken since it does not simply go over a
given set of cases with the given algorithm. An interactive prover relies on logical
inference rules and checks the proof of mathematical statements typed into it, or
helps to ﬁnd the proof. Gonthier used Coq to present a fully formalized version of
the proof based on Robertson et al.’s version. Gonthier started working on the proof
in 2000 and was able to formalize the 4-color theorem s.t. Coq would be able to work
with it in 2005 (Gonthier 2008, 1). The author ended up formulating the theorem in
the calculus of inductive constructions, CiC (Gonthier 2005, 3–5). Gonthier calls the
formal proof “not merely a method to make absolutely sure we have not made a
mistake in a proof, but also a tool that shows us and compels us to understand why a
proof works”(Gonthier 2008, 1).
There are other examples of mathematical problems which can be solved with
the assistance of a computer. For instance, the Boolean Pythagorean triples problem:
can the set N = {1, 2, …} be divided into two parts, such that no part contains
Pythagorean triples? A Pythagorean triple is a triple of integers (a, b, c) s.t. a2 + b2 = c2.
In (2016), M. Heule, O. Kullmann, and V. Marek proved that it is possible for positive
integers to be colored in such a way, but only up to the number 7824.5 The number
of possible colorings has been reduced to a trillion cases out of 27825, and all these
cases were examined by a Boolean SAT solver. Unlike Appel and Haken, Heule et al.
5 One may argue that Pythagorean triplets problem’s solution is a proof of type 1 since Heule et al.
used a computer to ﬁnd a counterexample, but it is a proof combined of two types – 2(a) and 1. The
authors proved two things: ﬁrst, that natural numbers can be colored in such a way up to a certain
point (which was done by an exhaustive computer search); second, that it is not possible after the
found point (a counterexample found by a computer program).
6
K. Parshina

provided a compressed certiﬁcate of proof (simply put, the frame based on which
the proof is conducted) which contains 68 gigabytes and, therefore, presents the
reader with a possibility to reconstruct the proof in a DRAT format.6
I want to provide one more case of computer-assisted proof which would
conclude the listing of examples and illustrate the general mechanism of working
with a computer proof assistant. I consider the reader to be familiar with a Sudoku
puzzle: a problem requiring ﬁlling a 9 × 9 grid with numbers so that each row,
column, and section of 3 × 3 contains all numbers from 1 to 9. Every Sudoku
problem contains some numbers which are already ﬁlled in the beginning – clues
on how to ﬁnish the puzzle. The minimum number of clues that determine the
unique solution for a puzzle was considered to be 17 for several years since the
publication of the ﬁrst Sudoku in the 1980s (Delahaye 2006). In 2013, Gary McGuire,
Bastian Tugemann, and Gilles Civario published proof of that statement which was
obtained by producing an exhaustive computer search through all the variations of
16-clue Sudoku puzzles (McGuire, Tugemann, and Civario 2014). McGuire et al.
wrote a software called Checker which eﬀectively checks all possible solutions for
any Sudoku puzzle with 16 clues. The authors implemented Checker on a computer
cluster7 in the Irish Centre for High-End Computing to perform the 1-year long
search. The computer did not ﬁnd any unique solutions to any of the possible
puzzles with 16 initial clues. Therefore, the authors concluded that the minimal
amount of clues is 17.
The tactic used by McGuire, Tugemann, and Civario demonstrates a standard
way of working with an automated proof-assistant: mathematicians formulate the
statement and produce an algorithm of proving which includes a ﬁnite set of cases,
each of which needs to be checked for feasibility. Mathematicians determine the
given set using a proof-assistant program and go through all the elements of the
deﬁned set with it. In the end, the proof-assistant either ﬁnds the counterexample for
the statement or ﬁnds no counterexamples and mathematicians conclude the
statement to be proved.
3 Objections
Tymoczko was the ﬁrst author to notice the consequences of acceptance of
computed-based proofs into mathematical practice. In his article, “The four-color
problem and its philosophical signiﬁcance”, the author distinguishes three
6 DRAT is a proof-checking program.
7 Computer cluster is a set of interconnected computers which perform given calculations as a single
system.
Rejection of Computer-Based Proofs
7

characteristics he considers to be the most signiﬁcant in a notion of mathematical
proof. We will look at them after a short note: Tymoczko’s paper was published in
1979. Since then, a lot of new methods and innovations were implemented into
mathematical practice. Nowadays, not all of Tymoczko’s characteristics of mathe-
matical proofs are accepted. For example, De Toﬀoli (2021) argues that proofs are not
convincing and surveyable (like Tymoczko states), but shareable and transferable.
However, I base the discussion of computer-assisted proofs on Tymoczko’s paper
since it was Tymoczko who started the philosophical and mathematical debates
around the ﬁrst computer-based proof, and many authors refer to him in their
critique of computer proofs. So, according to Tymoczko:
(a)
Proofs are convincing.
(b)
Proofs are surveyable.
(c)
Proofs are formalizable.
Convincing means, in this case, convincing for mathematicians. That is a simple
characteristic based on a judgment of the mathematical community. Since most
mathematicians accept computer-based proofs, these proofs are convincing.
Surveyability means that all steps of a proof can be looked over, checked for
mistakes, reviewed – and all that can be done by a rational agent. That is not the
case for Appel and Hanken’s proof. The authors were only able to refer to the
computations conducted by their supercomputer but did not present the
computations themselves – those were only available in a format of a microﬁlm,
which is unsurveyable for a human being. The proof by Robertson et al. would be
somehow more surveyable than the one by Appel and Haken: the proof of
unavoidability can be done by hand, although it would take approximately two
months; the proof of surveyability can only be done with a computer, but not a
super-one and every step of the program can be investigated by any person
interested. Therefore, it is much easier to understand what is going on in Robertson
et al.’s proof than in Appel and Haken’s. However, I doubt that Robertson et al.’s
proof can be called surveyable – it still contains a part that includes an exhaustive
computer search. Gonthier’s proof may be considered surveyable – unlike in
Robertson et al., the Coq prover presented all steps leading to the proof, including
reducibility, in a formalized version. The Pythagorean triples problem’s solution by
Heule et al. cannot be called fully surveyable. Heule et al. provided a compressed
certiﬁcate for the proof, which can be turned into a DART proof, containing about
200 terabytes of data. In that case, we are presented with the computations needed
for the proof. However, it is still a question whether Heule et al.’s computations are
surveyable. I can download DART and check that the proof can be done by my own
computer as well, but I cannot go through all the details of the computations – not
8
K. Parshina

even because they are in a DART-adapted format, but because I simply cannot check
200 terabytes of data by myself.8 Therefore, I suppose Heule et al.’s proof would not
satisfy the characteristic of surveyability. The proof of the minimal number of clues
for a Sudoku Puzzle (Huet, Kahn, and Paulin-Mohring 1997) presented by McGuire
et al. is not surveyable, since the author did not openly share the results and even if
they did, one would need at least a computer cluster to check them.
Formalizability, according to Tymoczko, implies that a proof can be presented
by a “ﬁnite sequence of formulas satisfying certain conditions” (Tymoczko 1979,
60). That means that proof can be presented as an inference from the axioms and
required rules to the conclusion. Tymoczko states that we can believe a formal
version of Appel and Haken’s proof exists, but only because we “accept the appeal
to computers in the ﬁrst place” (Tymoczko 1979, 72). Tymoczko does not say
explicitly if he considers Appel and Haken’s proof to be formalizable or not,
however, he states that there is no known proof of its formalizability. The for-
malizability of Robertson et al.’s proof was established by Gonthier (2005) when the
latter presented a fully formalized proof based on the work of Robertson et al. With
the Pythagorean triples problem, the answer is, again, less certain: if we do not
treat DART data as logical inference, then the answer is no. The Sudoku Puzzle
proof is not formalizable as at the crucial step of the proof the authors simply
checked all possible cases with a computer cluster.
Tymoczko concludes his analyses of Appel and Haken’s proof by stating that
if we accept the proof of the theorem, then we are committed to changing the
underlying concept of proof in mathematics. A traditional proof in mathematics is,
as Tymoczko states, an a priori deduction from premises to the statement
(Tymoczko 1979, 58). There are a lot of conventional beliefs about mathematics tied
to the concept of a priori knowledge: mathematics has no empirical content (unlike
natural science), mathematics relies on proofs but not experiments, etc. According
to Tymoczko, if we accept the proof of the 4-color theorem as a mathematical proof,
we recognize mathematical knowledge as partly empirical. And that will lead to a
change in our understanding of mathematics. I should note that Tymoczko does not
refuse to change our notion of mathematics: he comes to the conclusion that we
should endorse the change to accommodate computer-assisted proofs.
Brown (2010) grounds his objections on the notion of fallibility, a possibility of a
mistake in a proof. Lam, Thiel, and Stanley (1989) used a supercomputer to prove the
non-existence of ﬁnite projective planes of order ten; the task required several
thousand hours of computations. Lam identiﬁed three possible sources of error:
human mistakes in pre-calculations and entering data; software problems, and
hardware problems. And while human calculation mistakes are what we are used to
8 200 terabytes of data equals to approximately 67 billion single-spaced pages.
Rejection of Computer-Based Proofs
9

seeing in mathematics and the probability of hardware problems is inﬁnitely small
(Lam, Thiel, and Stanley 1989, 1122), software problems are the ones to worry about.
Software errors, according to Brown, are the mistakes of empirical science: it means
that our hypotheses were false. In the same sense as Newton’s classical mechanics
applied to extremely massive objects was wrong, our hypothesis about how our
software works may be wrong. We may theoretically understand how the pro-
gramming language, the compiler, and the operating system work separately. When
we combine them, according to Brown, we now rely on practical matters to a sig-
niﬁcant extent: we have some theories about how these pieces work together and
these theories may be wrong. And this is when we bring mathematical practice into
the empirical realm. Hence, in Chapter 10 of the book, Brown agrees with Tymoczko
on the statement that by accepting computer-assistant proofs as mathematical proofs
we put mathematics on a partially empirical foundation. Brown, unlike Tymoczko,
does not support the change. Lam (1990) also acknowledged that fact and preferred to
use the name ‘computed result’ instead of ‘proof’ while talking about computer-based
statements in his works.
I believe that the mistakes in the ‘human’ part of Appel and Haken’s proof that
were noticed by Schmidt and Saeki would not bother Brown and Lam as much
as the format in which the computer calculations were accessible to the reader
(which is – not accessible at all unless you have a supercomputer). The human
mistakes are, as Brown states, normal in mathematical practice, and the fact that
they were spotted only reinforces the fact that human-based proofs are surveyable
(therefore, they were surveyed). The main problem, again, is the software errors:
there is no way to know that Appel and Haken’s proof does not have them, since we
are unable to check the reliability of the software, speciﬁcally, how the
conﬁguration-checking program runs on the supercomputer. Robertson et al.’s
proof would still contain a possibility of a mistake in at least one part of the proof:
proof of surveyability. Even though the code of the program presented by the
authors can be physically looked through, there is a high possibility of a software
mistake, according to Brown. The ﬁnal step of the Pythagorean triplets problem is
proved with an SAT solver, which is, again, a type of software that could contain
mistakes. The computer-assisted part of the Sudoku puzzle proof, I believe, is one
big possibility of a mistake for Brown, as it consists only of a computer cluster going
through a large pre-deﬁned set of cases.
Brown’s critique, however, would mostly call into question computer-assisted
proofs which are not fully formalized. Gonthier’s proof of the 4-color theorem is fully
formalized and written in the proof assistant Coq, therefore it is more reliable in a
sense of software mistakes. When the whole proof is presented to the program and
the proof inference mechanisms together with the notion of a correct proof are
strictly and clearly deﬁned in the system, the resulting assertion of the program is
10
K. Parshina

better grounded than a proof only a torn piece of which is done by a proof assistant.
To conclude, according to Brown, all the proofs presented in Section 2, other than
Gonthier’s proof, are not equally acceptable in the status of proof together with
human-based proofs.
Barrow 1995 does not speciﬁcally state whether he thinks that computer-assisted
proof can be considered mathematical proof. He, however, emphasizes the fact that
mathematicians, contrary to a popular belief, are not interested in collecting all
possible truths (Barrow 1995, 232–233). According to Barrow, mathematicians are
interested in a demonstration of new techniques, new possible links, and new
proving methods that can be presented by a speciﬁc proof. Barrow provides a
commentary by a mathematician M. Davis who was disappointed in the proof
method of the 4-color theorem: “[…] I expected some brilliant new insight, a proof
which had in its kernel an idea whose beauty would transform my day. But when I
received the answer […], I felt disheartened. My reaction was: “So it just goes to
show, it wasn’t a good problem after all”” (Barrow 1995, 323). Barrow uses the pre-
sented opinion to demonstrate that the result of the proof is not the most important
thing for mathematicians. What is important is that proof itself can demonstrate
some new insights or present some mathematical objects in a diﬀerent way. In some
cases, even re-proving – showing that a theorem can be proved in a simpler and/or
shorter manner – is an essential mathematical result. Barrow concludes that a
computer-assisted proof does not demonstrate any new insights or techniques, and
that is what distinguishes it from a human-based proof. One may argue that Appel
and Haken’s proof demonstrated a new, revolutionary method of proof in mathe-
matics: after all, a theorem that nobody could prove for more than 120 years was
solved by writing and running a computer program, which supposedly revealed an
empirical side of mathematics to us (according to Tymoczko’s position). What I
suppose Barrow would answer to that is – yes, some new method of proving a
theorem was presented, but this method does not reveal any new connections be-
tween mathematical notions and theorems since all the computations are hidden
from us inside a computer and the resulting microﬁlm. I believe Barrow would agree
with P. Halmos in his assessment of the value of Appel and Haken’s proof: “I want to
ask: what did we learn from the proof? What do we know now that we didn’t know
before? I do not ﬁnd that an easy question to answer. […] We may still be far from
ﬁnding a new “good” proof for the four-color theorem” (Halmos 1990, 18). I also
suppose that Barrow would appreciate the proof of unavoidability presented by
Robertson et al., as it is more elegant than Appel and Haken’s version. Although, I
think Barrow would not be interested in the second part of Robertson et al.’s proof,
Heule et al.’s proof, and McGuire et al.’s proof, as all of them are derived with the use
of a computer program. However, the fact that Barrow is not interested in these
proofs does not mean that he refuses to accept computer-assisted proofs as a part of
Rejection of Computer-Based Proofs
11

mathematics at all. He probably accepts these proofs in some status, but does not
attach much importance to them in mathematical practice.
Thurston (1994) presents an argument similar to Barrow’s objections. First,
Thurston highlights some features that are important for mathematical thinking:
human language, vision, deduction, intuition, stimulus-response, etc. For example,
mathematical practice is closely tied to human language: we use it for thinking as
well as for communication. Mathematicians think in natural language. We can
understand that “=” is a verb and we use it as a verb. Humans and mathematicians
speciﬁcally have very powerful facilities for information intake: visually, audibly,
and sensory. Since Thurston makes an accent on the empirical part of mathematical
thinking, his view on mathematics may be interpreted as quasi-empirical. All these
parts of mathematical thinking, according to Thurston, cannot be reproduced by a
computer, since it only works on a single track. Thurston does not reject the
computer-assistant kind of proof in its status of proof but points out that humanly
understandable and humanly checkable proofs are central in mathematical practice.
The author states that since general knowledge transfer from one human to another
is not automatic, mathematical knowledge transfer should not be automatic as well.
Because of that, we should diﬀer between a computer-based proof (as reliable on a
computer) and a human-based proof (as reliable on a human thought). Thurston’s
view on the status of diﬀerent proofs of the 4-color theorem and two other proofs
presented in the previous section, I suggest, would be similar to Barrow’s.
It is also worth noticing that Barrow and Thurston’s critique may be answered
diﬀerently depending on the ‘mathematical beauty’ in question. If we talk about
interactive theorem provers (ITP), the mathematician’s deduction and intuition are
still in use while stating goals and heuristic strategies for the system. The possible
paths and sub-goals which are suggested by ITP also still need to be checked by a
mathematician. There are, however, future development possibilities that may
lead to the lack of mathematicians’ involvement in theorem-proving to an extreme
degree: the so-called ‘self-play’ of artiﬁcial intelligence (Sørensen et al. 2021, 3). Self-
play is a term describing an autonomic goal-directed exploration of theorems by
automatic theorem provers. Nevertheless, since the process of AI self-play includes
the notion of artiﬁcial intelligence, in order to debate the presence of intuition and
originality in ITP, we must ﬁrst take a stand in the bigger debate of the philosophy
of mind. In the next section, I discuss the authors’ possible position on the topic.
4 Common Grounds
The presented characteristics of the status of computer proofs can be reduced to the
following list:
12
K. Parshina

(a)
computer-assistant proofs are unsurveyable and can contain mistakes that we
are unable to ﬁnd (Tymoczko, Brown);
(b)
computer-assisted proofs are the reason mathematics becomes partly empirical
(Tymoczko, Brown);
(c)
computer-assistant proofs are diﬀerent from human-based proofs because
mathematical thinking has its own unique nature and cannot be reproduced by
a computer (Barrow, Thurston).
Authors defending (a) distinguish two types of possible mistakes: human mistakes
which are more than usual in the traditional mathematical practice and computer
mistakes which a program9 can make while calculating the typed-in data. Now we
compare these two options. We should ﬁrst agree that there is a possibility that, for
example, the proof of Fermat’s last theorem presented by A. Wiles and R. Taylor in
1995 is wrong. It could be the case that the proof is right and it could be the case that
the proof contains a mistake; the ﬁrst option is more likely to be true, but we will
never know whether Wiles and Taylor’s proof is 100 % right. That situation is
similar to the 4-color theorem proof: we cannot know whether the calculations
are true. We can check the calculations by asking the authors for the data and
re-running the program on our own computers, but we are unable to check the
calculations in a traditional way.10 This point of critique is based on the fact that
mathematical practice is concentrated, among other things, on the manual veriﬁ-
cation of proofs. Almost every skilled mathematician can try to check Wiles and
Taylor’s proof step by step, but when the manual step-by-step reconstruction of a
proof is not an option, mathematics crosses the line we, according to Brown, do not
want it to cross.
And that line is considered to be a priori, which now leads us to assumption
(b). Why is that a problem that mathematics becomes empirical? For Tymoczko it
is not a problem whatsoever: he equally accepts computer-assisted and human
proofs into mathematical practice and not only states that our understanding of
mathematics changes because of this step, but also supports this change. Brown
also recognizes that mathematics is moving from the rational to the empirical
realm by accepting computer-based proofs on equal grounds with human-based
proofs, and this move is resulting in a possible unsurveyability of software, which
results in a possibility of unnoticed mistakes in a proof. So, the common ground
behind assumptions (a) and (b) is the belief that mathematics is (or was) a
non-empirical science and the implementation of computer-assisted proofs brings
9 I do not discuss hardware errors in this paper.
10 Of course, nothing really stops us from actually doing the calculation other than the fact that, due
to our limited capacities, the calculations may take several years or decades.
Rejection of Computer-Based Proofs
13

in quasi-empiricism. Some argue that quasi-empiricism takes its root in the pos-
sibility of a mistake in unsurveyable software, and some argue that it takes its root
in the quasi-empirical nature of a mathematical result based on a computer pro-
gram’s output – these positions are essentially similar.
It is not the case that (a) simply depends on (b). Thurston’s view allows for
human-based mathematics to be interpreted as quasi-empirical, so it would be not a
computer that makes mathematical practice partly empirical but a human being.
Therefore, Thurston’s view does not seem to support assumption (b). However,
Thurston also states that computers, even while requiring a signiﬁcantly higher
standard of correctness than human-based proofs, still make a lot of mistakes
(Thurston 1994, 169), which means that the author accepts the objection (a).
Objection (c) expresses the idea that a traditional proof is unique and original,
while computer-assisted proof is just a machine calculation. But why cannot a
machine-based proof be original and insightful? For it to be as original and
insightful as human reasoning, the proof assistant program should somehow
imitate a mathematician’s reasoning process with the possibility to survey it.
However, for now, the proofs like those presented by Appel and Haken, Robertson
et al., Heule et al., and McGuire et al. do not imitate or even recall a traditional
mathematical proof in their computer-assisted part.11 They contain a step con-
sisting of sorting through a large number of elements, and there is no non-
computer equivalent to that step that can be done by a mathematician to come to
the same conclusion. Therefore, assumption (c) is based on the belief that the
mathematical reasoning process with its insights and originality cannot be
imitated by a machine: therefore, human reasoning cannot be presented in a form
of a computer program.
I should notice that the distinction between human- and computer-based
proofs presented by Thurston and Barrow is not a mere distinction between hu-
man beings and machines, which is normally discussed in the philosophy of mind.
It is a distinction between a skilled mathematician and a computer program. If the
proof of the 4-color theorem was presented by a skilled mathematician who did not
use a computer proof assistant at all but invented some new technique to deal with
the large set of conﬁgurations, then the mathematical community would gain a new
method of reasoning (or a new variation of an old method). However, the proof
presented by Appel and Haken did not demonstrate any new methods or heuristics
that can be implemented into human-based mathematics, since the authors only
added one more step of computer calculations to Birkhoﬀ’s reasoning. The ﬁrst step
11 Moreover, Coq, the interactive proof assistant used by Gonthier (2005), is mostly used not to ﬁnd
new proofs, but to check the already existing ones (Huet, Kahn, and Paulin-Mohring 1997). However,
as I already stated, fully formalized proofs are subject to an additional debate.
14
K. Parshina

of the proof by Robertson et al. demonstrates a new method of dealing with the
proof of unavoidability which is an improvement to the human side of Appel and
Haken’s proof. However, the second step of Robertson et al.’s proof excels Appels
and Hanken’s proof simply by reducing the required number of calculations, and,
subsequently, the amount of computing power required to perform it. Therefore,
the mathematical community did not gain a new insight for human-based math-
ematical
practice
which
some
mathematicians
expected
from
the
proof
(Barrow 1995, 323; Halmos 1990, 18–1). That expectation of a new insightful method
from a new proof is what marks the distinction between the perception of a skilled
mathematician and a computer program in the mathematical society.
We have concluded that the two main philosophical assumptions behind the
presented objections are:
1. Mathematics is (was) a non-empirical science, while a computer’s output is purely
empirical.
2. Human reasoning cannot be reduced to a computer program.
The ﬁrst assumption can be interpreted as either descriptive or normative. The
authors who support it argue either that mathematics was a non-empirical science
and becomes empirical because of the emergence of computer-based proofs
(Tymoczko) or that mathematics is supposed to be non-empirical but becomes quasi-
empirical because of computer proofs (Brown).
Assumption 1 is not universally accepted. One way to argue against assumption 1
is to take the position that mathematics is (or ought to be) quasi-empirical regardless
of the existence of computer-assisted proofs, therefore they are not an issue. In the
paper “Quasi-Empirical Views of Mathematics and Mathematics Teaching”, D. Cha-
zan states that calling mathematics a purely rational science where both axioms and
the truths derived from them have a status of a priori is an oversimpliﬁcation of
mathematics supported by philosophical rationalism (Chazan 1990, 14). As a response
to that simpliﬁcation, several philosophers of mathematics proposed new theories,
and some of them would describe mathematical practice and mathematics itself as
quasi-empirical. For example, Lakatos (1976) holds the position that mathematics is a
quasi-empirical science. H. Putnam also argues for quasi-empiricism in mathematics,
he even openly admits that a computer-assisted proof of the mentioned type 2(a) (an
extensive computer search through a set of cases) can be accepted as a veriﬁcation of
the given conjecture – not as a proof of the conjecture, though (Putnam 1975, 62). Still,
computer veriﬁcation is a quasi-empirical part of mathematics, according to Putnam.
Another way to try to prove assumption 1 wrong is to reject the claim that computers
Rejection of Computer-Based Proofs
15

can only generate a posteriori knowledge, which means one should argue that
computers are able to produce knowledge a priori.12
The second assumption is not a universally-accepted position as well. There are
philosophical views according to which human reasoning can be reduced to a
computer program at some level, for instance, computationalism. Assumption 2
seems to strongly diﬀer between the processes taking place during human (mathe-
matician’s) thinking and the processes taking place during machine computations.
One can, of course, say that we can diﬀer between the ‘computing’ of the human mind
and the ‘computing’ of a machine, but then one would still postulate a diﬀerence
between the two, which would contradict the classical computational theory of mind.
To understand how to argue against assumption 2, one needs to understand what is
the exact reason one claims that human reasoning cannot be reduced to a computer
program. It may be the case if one chooses to protect some form of mind-body
dualism or if one argues that a computer cannot produce mathematical insight
similar to a human mathematician, or if one simply decides to identify as an anti-
computationalist. The main point here is that there are many reasons to argue
against assumption 2, therefore it is not a universal assumption.
5 Conclusion
In this paper, we considered some of the most famous arguments against equal
acceptance of computer-assisted proofs in mathematical practice and the philo-
sophical assumptions behind them. The two main philosophical assumptions that
were identiﬁed behind the authors’ argumentation are, ﬁrstly, the acceptance of a
purely non-empirical notion of mathematics together with the empirical nature of
computer output and, secondly, the irreducibility of human reasoning to a com-
puter program. It was shown that both assumptions are not universally accepted:
they may be based on several philosophical positions. The positions behind the
ﬁrst assumption are anti-empiricism in mathematics (or, more certainly, in
mathematical practice) and/or a position that computer output cannot be charac-
terized in terms of a priori. The philosophical view behind the second assumption is
simply a position according to which human reasoning cannot be reduced to
computer software, and there are diﬀerent ways to argue for that position.
12 That position is taken, for example, by Burge (1998).
16
K. Parshina

References
Appel, K. I., and W. Haken. 1977. “The Solution of the Four-Color-Map Problem.” Scientiﬁc American 237 (4):
108–21.
Barrow, J.D. 1995. PI in the Sky: Counting, Thinking, and Being, 317. Cambridge: Oxford University Press.
Birkhoﬀ, G. D. 1913. “The Reducibility of Maps.” American Journal of Mathematics 35 (2): 115–28.
Brikaite, J., N. Megens, O. Somova, S. K. Ünal, and T. S. Felby. 2013. Computer Assisted Proofs and Their Eﬀects
on Pure Mathematics: A Case Study of the Four Colour Theorem. Trekroner: Roskilde University Press.
Britain, D. C. 1984. A Priori Knowledge and the Four-Colour Theorem. Guildford: University of Surrey (United
Kingdom).
Brown, J. R. 2010. Philosophy of Mathematics: A Contemporary Introduction to the World of Proofs and Pictures.
New York: Routledge.
Burge, T. 1998. “Computer Proof, Apriori Knowledge, and Other Minds: The Sixth Philosophical
Perspectives Lecture.” Philosophical Perspectives 12: 1–37.
Chazan, D. 1990. “Quasi-empirical views of mathematics and mathematics teaching.” Interchange 21 (1):
14–23.
Cohen, J. S. 1991. “Supercomputing in American Academia.” In National Forum, 71, 42. Los Angeles: Honor
Society of Phi Kappa Phi.
Delahaye, J.-P. 2006. “The Science behind Sudoku.” The Science behind Sudoku, Scientiﬁc American 294 (6):
80–7.
De Toﬀoli, S. 2021. “Groundwork for a Fallibilist Account of Mathematics.” The Philosophical Quarterly 71 (4):
1–22.
Gonthier, G. 2008. “Formal Proof–The Four-Color Theorem.” Notices of the AMS 55 (11): 1382–93.
Gonthier, G. 2005. A Computer-Checked Proof of the Four Colour Theorem. Cambridge: Microsoft Research
Press.
Halmos, P. R. 1990. “Has Progress in Mathematics Slowed Down?” The American Mathematical Monthly
97 (7): 561–88.
Hamami, Y. 2018. “Mathematical Inference and Logical Inference.” The Review of Symbolic Logic 11 (4): 665–
704.
Hamami, Y. 2022. “Mathematical Rigor and Proof.” The Review of Symbolic Logic 15 (2): 409–49.
Hanna, G., and H. Niels Jahnke. 1996. “Proof and Proving.” In International Handbook of Mathematics
Education, 877–908. Dordrecht: Springer.
Heule, M. J. H., K. Oliver, and V. W. Marek. 2016. Solving and Verifying the Boolean Pythagorean Triples
Problem via Cube-And-Conquer. International Conference on Theory and Applications of Satisﬁability
Testing, 228–45. Cham: Springer.
Huet, G., G. Kahn, and C. Paulin-Mohring. 1997. The Coq Proof Assistant a Tutorial, 178. Lyon: Rapport
Technique.
Lakatos, I. 1976. “A Renaissance of Empiricism in the Recent Philosophy of Mathematics.” The British
Journal for the Philosophy of Science 27 (3): 201–23.
Lam, C. W. H. 1990. “How Reliable is a Computer-Based Proof.” The Mathematical Intelligencer 12 (1): 8–12.
Lam, C. W. H., L. Thiel, and S. Stanley. 1989. “The Non-Existence of Finite Projective Planes of Order 10.”
Canadian Journal of Mathematics 41 (6): 1117–23.
MacKenzie, D. 2004. Mechanizing Proof: Computing, Risk, and Trust. Boston: MIT Press.
McGuire, G., B. Tugemann, and G. Civario. 2014. “There is No 16-Clue Sudoku: Solving the Sudoku
Minimum Number of Clues Problem via Hitting Set Enumeration.” Experimental Mathematics 23 (2):
190–217.
Rejection of Computer-Based Proofs
17

Putnam, H. 1975. “What is Mathematical Truth?” Historia Mathematica 2 (4): 529–33.
Rav, Y. 2007. “A Critique of a Formalist-Mechanist Version of the Justiﬁcation of Arguments in
Mathematicians’ Proof Practices.” Philosophia Mathematica 15 (3): 291–320.
Robertson, N., D. Sanders, P. Seymour, and R. Thomas. 1996. “A New Proof of the Four-Colour Theorem.”
Electronic Research Announcements of the American Mathematical Society 2 (1): 17–25.
Sørensen, H. K., M. W. Johansen, R. Hoekzema, and H. Breman. 2021. Augmenting the Human
Mathematician. Oxford: Oxford University Research Archive.
Tanswell, F. 2015. “A Problem with the Dependence of Informal Proofs on Formal Proofs.” Philosophia
Mathematica 23 (3): 295–310.
Thurston, W. P. 1994. “On Proof and Progress in Mathematics.” American Mathematical Society 30 (2):
161–77.
Tymoczko, T. 1979. “The Four-Color Problem and its Philosophical Signiﬁcance.” The Journal of Philosophy
76 (2): 57–83.
Walters, M. 2004. It Appears that Four Colors Suﬃce: A Historical Overview of the Four-Color Theorem. New
York: Springer-Verlag.
Weir, A. 2016. “Informal Proof, Formal Proof, Formalism.” The Review of Symbolic Logic 9 (1): 23–43.
Wilson, R. 2003. Four Colors Suﬃce: How the Map Problem was Solved. Princeton: Princeton university press.
18
K. Parshina

